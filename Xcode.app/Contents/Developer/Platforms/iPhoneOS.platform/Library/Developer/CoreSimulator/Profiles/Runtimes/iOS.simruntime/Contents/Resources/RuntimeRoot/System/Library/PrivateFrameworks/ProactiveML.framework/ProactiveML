@(#)PROGRAM:ProactiveML  PROJECT:Suggestions-1052.14
positiveConditionalProbabilities
T@"PMLModelWeights",&,V_positiveConditionalProbabilities
negativeConditionalProbabilities
T@"PMLModelWeights",&,V_negativeConditionalProbabilities
probabilities
T@"PMLModelWeights",&,V_probabilities
positiveConditionalCounts
T@"PMLModelWeights",&,V_positiveConditionalCounts
negativeConditionalCounts
T@"PMLModelWeights",&,V_negativeConditionalCounts
counts
T@"PMLModelWeights",&,V_counts
covariates
T@"PMLSparseMatrix",&,V_covariates
objective
T@"PMLModelRegressor",&,V_objective
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/Plans/PMLPlanSimulator.m
Couldn't load sessions for %@
<Unknown File>
v16@?0Q8
Can't instantiate simulator, no db at %@
Multiple batches not supported in simulation.
Can't instantiate simulator, need at least one db file.
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Unsupported proto buf message: %@
hasTimestamp
TB,N
timestamp
TQ,N,V_timestamp
hasModelInfo
TB,R,N
modelInfo
T@"AWDProactiveModelFittingModelInfo",&,N,V_modelInfo
hasMinibatchStats
minibatchStats
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_minibatchStats
hasEvaluationMetrics
evaluationMetrics
T@"AWDProactiveModelFittingEvalMetrics",&,N,V_evaluationMetrics
precisionAtKs
T@"NSMutableArray",&,N,V_precisionAtKs
precisionAtK
%@ %@
hasSparseFloatWeights
sparseFloatWeights
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatWeights
hasSparseQuantizedWeights
sparseQuantizedWeights
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedWeights
hasWeightsScaleFactor
weightsScaleFactor
Tf,N,V_weightsScaleFactor
hasWeightsL2norm
weightsL2norm
Tf,N,V_weightsL2norm
hasDenseQuantizedWeights
denseQuantizedWeights
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedWeights
weights
T@"PMLModelWeights",&,N,V_weights
T@"PMLSparseMatrix",&,N,V_covariates
T@"PMLModelRegressor",&,N,V_objective
intercept
TB,V_intercept
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLGradientSolver.m
Invalid covariates, length: %tu but model weights length: %d
Covariates must have the same column-length as weights. Got covariates with %tu columns but weights of length %d
batchPredictionCalculator
predictionCalculator
gradientCalculator
Invalid parameter not satisfying: %@
store
T@"PMLTrainingStore",R,N,V_store
sessionDescriptor
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
maxSessionsLimit
TQ,R,N,V_maxSessionsLimit
sessionsInBatch
TQ,R,N,V_sessionsInBatch
supportPerLabel
TQ,R,N,V_supportPerLabel
multiLabelRegressionModel
T@"<PMLMultiLabelRegressionModelProtocol>",R,N,V_multiLabelRegressionModel
positiveLabels
T@"NSArray",R,N,V_positiveLabels
weightsArray
T@"NSArray",R,N,V_weightsArray
TB,R,N,V_intercept
evaluationPoints
T@"NSArray",R,N,V_evaluationPoints
tracker
T@"<PMLMultiLabelEvaluationTrackerProtocol>",R,N,V_tracker
evaluationLevel
TQ,R,N,V_evaluationLevel
planId
T@"NSString",R,N,V_planId
T@"NSString",R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/Plans/PMLMultiLabelRegressionEvaluationPlan.m
EVALUATION_LEVEL
TRACKER
Can't instantiate %@. Unknown tracker class: %@
TRACKER_TYPE
EVALUATION_POINTS
INTERCEPT
MULTI_LABEL_REGRESSION_MODEL_TYPE
WEIGHTS_ARRAY
POSITIVE_LABELS
SUPPORT_PER_LABEL
SESSIONS_IN_BATCH
SESSIONS_LIMIT
SESSIONS_MODEL_HANDLE
PLAN_ID
Can't instantiate %@. Missing "store" dependency.
v32@?0@"PMLModelWeights"8Q16^B24
q24@?0@8@16
Can't instantiate %@. Unknown model class: %@
Invalid planId. Must be <name>-<version>-<locale> but got %@
hasSparseFloatFeatures
sparseFloatFeatures
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatFeatures
hasSparseQuantizedFeatures
sparseQuantizedFeatures
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedFeatures
hasFeaturesScaleFactor
featuresScaleFactor
Tf,N,V_featuresScaleFactor
hasFeaturesL2norm
featuresL2norm
Tf,N,V_featuresL2norm
indicesCount
TQ,R,N
indices
T^I,R,N
valuesCount
values
hasLength
length
TI,N,V_length
hasMinValue
minValue
Tf,N,V_minValue
hasBucketSize
bucketSize
Tf,N,V_bucketSize
idx (%tu) is out of range (%tu)
hasStats
stats
T@"AWDProactiveModelFittingMinibatchStats",&,N,V_stats
label
T@"NSString",R,N,V_label
limit
Tq,R,N,V_limit
rowId
Tq,R,N,V_rowId
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/PMLLabelLimitRowId.m
rowId >= 0
limit >= 0
T@"<PMLLogRegTrackerProtocol>",R,N,V_tracker
currentServerIteration
TQ,R,N,V_currentServerIteration
currentModelWeights
T@"PMLModelWeights",R,N,V_currentModelWeights
localLearningRate
Tf,R,N,V_localLearningRate
stoppingThreshold
Tf,R,N,V_stoppingThreshold
localMinimumIterations
TQ,R,N,V_localMinimumIterations
localGradientIterations
TQ,R,N,V_localGradientIterations
useOnlyAppleInternalSessions
TB,R,N,V_useOnlyAppleInternalSessions
isMultiLabel
TB,R,N,V_isMultiLabel
positiveLabel
TQ,R,N,V_positiveLabel
reportScale
TB,R,N,V_reportScale
transformer
T@"<PMLTransformerProtocol>",R,N,V_transformer
refeaturizationDescriptors
T@"NSArray",R,N,V_refeaturizationDescriptors
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/Plans/PMLLogRegTrainingPlan.m
REPORT_SCALE
POSITIVE_LABEL
IS_MULTI_LABEL
THRESHOLD
SKEW
ONLY_INTERNAL_SESSIONS
GRADIENT_ITERATIONS
MIN_ITERATIONS
STOPPING_THRESHOLD
LEARNING_RATE
SERVER_ITERATION
REFEATURIZATION_DESCRIPTORS
TRANSFORMER
WEIGHTS
NOISE_STRATEGY
PFL_ID
PMLSeparatedDPNoiseStrategy
PMLDiffPrivacyNoiseStrategy
PMLNoNoiseStrategy
NOISE_STRATEGY_TYPE
BEFORE_NOISE_SCALING
IS_SYNCHRONOUS
v32@?0q8@"NSData"16@?<v@?q@"PMLSparseVector"@"PMLSessionDescriptor">24
refeaturize_block_invoke
[newVector isKindOfClass:[PMLSparseVector class]]
<%@ %@>
B12@?0f8
generateWeightsOfLength
FiM_logreg-1.0-en
noiseStrategy
hasSparseFloatFeatureMatrix
sparseFloatFeatureMatrix
T@"AWDProactiveModelFittingSparseFloatMatrix",&,N,V_sparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
sparseQuantizedFeatureMatrix
T@"AWDProactiveModelFittingQuantizedSparseMatrix",&,N,V_sparseQuantizedFeatureMatrix
hasFeatureMatrixScaleFactor
featureMatrixScaleFactor
Tf,N,V_featureMatrixScaleFactor
hasFeatureMatrixL2norm
featureMatrixL2norm
Tf,N,V_featureMatrixL2norm
name
T@"NSString",&,V_name
version
T@"NSNumber",&,V_version
T@"PMLModelWeights",&,V_weights
learningRates
T@"PMLModelLearningRates",&,V_learningRates
T^Q,R,N
T^f,R,N
TQ,N,V_length
Td,R,V_timestamp
serverIteration
TQ,R,V_serverIteration
SELECT count(*) FROM 
test
{_PASDBIterAction_=B}16@?0@"NSError"8
CREATE TABLE integrityCheck
SELECT sql FROM sqlite_master WHERE sql IS NOT NULL AND tbl_name NOT LIKE 'sqlite_%' 
v8@?0
[ ]{2,}
sessionDescriptorId = %lu
lastFeaturizations
sessionDescriptorId
:name
:locale
SELECT sd.id FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
SELECT sd.version, lf.transformer FROM sessionsDescriptors sd CROSS JOIN lastFeaturizations lf ON lf.sessionDescriptorId = sd.id WHERE sd.name = :name AND sd.locale = :locale
v32@?0q8@"PMLSparseVector"16@"PMLSessionDescriptor"24
sessions
rowId = %lu
covariatesValues
covariatesIndices
covariatesLength
:version
SELECT id, label, covariatesLength, covariatesIndices, covariatesValues, source FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
VACUUM
PRAGMA foreign_keys = ON
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/PMLTrainingStore.m
v12@?0i8
!_lockStateNotificationToken
sessionsDescriptors
SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale
SELECT name, version, locale FROM sessionsDescriptors
:timesUsedMax
SELECT mh.name, mh.version, mh.locale, s.label, count(*) FROM sessions s INNER JOIN sessionsDescriptors mh ON s.sessionDescriptorId = mh.id INNER JOIN sessionsItemIds sii ON s.id = sii.sessionId WHERE sii.timesAccessed < :timesUsedMax GROUP BY s.sessionDescriptorId, s.label ORDER BY s.sessionDescriptorId, s.label
:bundleIdentifier
:domainIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier = :domainIdentifier  UNION ALL SELECT sessionId FROM sessionsDomainIds WHERE bundleIdentifier = :bundleIdentifier AND domainIdentifier >= :domainIdentifier || '.' AND domainIdentifier < :domainIdentifier || '/')
:itemIdentifier
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier AND itemIdentifier = :itemIdentifier)
DELETE FROM sessions WHERE id IN (SELECT sessionId FROM sessionsItemIds WHERE bundleIdentifier = :bundleIdentifier)
:label
:limit
DELETE FROM sessions WHERE id IN (SELECT id FROM sessions WHERE label = :label AND UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale)) ORDER BY RANDOM() LIMIT :limit)
SELECT count(*) FROM sessions WHERE label = :label AND UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
:maxTimesAccessed
DELETE FROM sessions WHERE (id in (SELECT sessionId from sessionsItemIds WHERE timesAccessed >= :maxTimesAccessed))
:lastUsedExpirationDate
DELETE FROM sessions WHERE creationTimestamp < :lastUsedExpirationDate AND (id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < :lastUsedExpirationDate))
SELECT DISTINCT label FROM sessions WHERE UNLIKELY(sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale))
SELECT count(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) 
AND label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %d) 
v32@?0@"PMLTrainingStoredSessionBatch"8@"NSDictionary"16^B24
AND sessions.label = 0 AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %d) 
AND sessions.label = %lu AND sessions.id in (SELECT sessionId from sessionsItemIds WHERE lastUsed < %f AND timesAccessed < %d) 
v32@?0@"NSNumber"8@"PMLLabelLimitRowId"16^B24
Invalid session from db (row id %lu): idx %d out of bounds [0, %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Read label %lu while specified %@. Matcher: %@
sessionsItemIds
sessionId = %ld
timesAccessed
lastUsed
:lastUsedMax
SELECT sessions.id, sessions.label, sessions.covariatesLength, sessions.covariatesIndices, sessions.covariatesValues, sessionsItemIds.timesAccessed FROM sessions JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId AND sessions.sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND sessionsItemIds.lastUsed <= :lastUsedMax AND sessionsItemIds.timesAccessed < :timesUsedMax AND sessions.id > :rowId %@ ORDER BY sessions.id limit :limit
SELECT covariatesLength, COUNT(*) FROM sessions WHERE sessionDescriptorId = (SELECT id FROM sessionsDescriptors WHERE name = :name AND version = :version AND locale = :locale) AND id > :rowId %@ %@ ORDER BY id
AND isAppleInternal = 1 
v32@?0@"NSNumber"8Q16^B24
v40@?0@"PMLTrainingStoredSessionBatch"8Q16Q24^B32
itemIdentifier
sessionsDomainIds
sessionId
isAppleInternal
creationTimestamp
itemIds
bundleId
source
training_sessions
Process name %@ is not python
python
training_db_schema
B8@?0
migrationFunction
trackedStats
T@"NSArray",R,V_trackedStats
Unexpected AWD message type: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/AWD/Mocks/PMLAWDAvailableSessionsTrackerMock.m
No stats have been tracked yet.
perModelStats
T@"NSMutableArray",&,N,V_perModelStats
columnIndicesCount
columnIndices
hasColumnLength
columnLength
TQ,N,V_columnLength
rowIndicesCount
rowIndices
hasRowLength
rowLength
TQ,N,V_rowLength
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLImmutableLogisticRegressionModel.m
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/AWD/AWDProactiveModelFittingQuantizedDenseVector+PML.m
Too big vector (length: %tu)
T@"<PMLLinRegTrackerProtocol>",R,N,V_tracker
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/Plans/PMLLinRegTrainingPlan.m
v24@?0@"PMLTrainingStoredSessionBatch"8^B16
+[PMLLinRegTrainingPlan featureMatrixWithNoiseFromCovariates:]
rowEnd == covariates.numberOfRows
T@"NSString",R,N,V_name
T@"NSString",R,N,V_version
locale
T@"NSString",R,N,V_locale
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/StoredTypes/PMLPlanDescriptor.m
TI,N,V_columnLength
TI,N,V_rowLength
-[PMLModelWeights(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/MobileAsset/PMLDictionaryParameters.m
[__expr isKindOfClass:[NSNumber class]]
[__expr isKindOfClass:[PMLDataChunkDenseFloatVector class]]
SHAPE
VALUES
-[PMLModelWeights(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
weightArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelRegressor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLModelRegressor(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
regressorArray.count == [shapeArray[0] unsignedIntegerValue]
-[PMLModelLearningRates(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
-[PMLModelLearningRates(PMLMobileAssetParameterGetStrategy) initFromDictionary:]
-[PMLModelDescriptor(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
[__expr isKindOfClass:[NSDictionary class]]
VERSION
LEARNING_RATES
NAME
-[PMLImmutableLogisticRegressionModel(PMLPlistAndChunksSerialization) initWithPlist:chunks:context:]
Invalid model weights (shape: %@ but values count: %lu)
Missing model weights values.
Missing model weights shape.
Missing model weights.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLMultiLabelLogisticRegressionModel.m
[model isKindOfClass:PMLLogisticRegressionModel.class]
_models.count
modelPlists != nil || layerPlist != nil
MODEL_FULLY_CONNECTED_LAYER
MULTI_LABEL_REGRESSION_MODELS
_models != nil || _layer != nil
q24@?0@"NSNumber"8@"NSNumber"16
noiseScaleFactors
T{?=ff},V_noiseScaleFactors
minimumMagnitude
Tf,V_minimumMagnitude
noiseMechanism
Tq,V_noiseMechanism
<%@ gaussianScaleFactor:%0.2f laplaceScaleFactor:%0.2f minMagnitude:%0.2f>
INPLACE_NORM
NOISE_MECHANISM_ENUM_VALUE
NOISE_STRATEGY_MINIMUM_MAGNITUDE
LAPLACE_NOISE_SCALE
GAUSSIAN_NOISE_SCALE
NOISE_STRATEGY_MAX_ITERATIONS
NOISE_SAMPLER
NOISE_STRATEGY_SCALE
Invalid noise mechanism value: %lli
You must explicitly specify a noise mechanism.
v24@?0Q8^B16
f20@?0f8Q12
Invalid noiseMechanism, got: %lld
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLClassificationEvaluationMetrics.m
hasName
T@"NSString",&,N,V_name
hasVersion
T@"NSString",&,N,V_version
hasLocale
T@"NSString",&,N,V_locale
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/AWD/AWDProactiveModelFittingQuantizedSparseMatrix+PML.m
Too big matrix (cols: %tu)
Too big matrix (rows: %tu)
trackedEvaluations
T@"NSArray",R,D
foo-1.0-en
migrations
T@"NSDictionary",R,N,V_migrations
maxVersion
TI,R,D,N
@max.unsignedIntValue
DELETE FROM sessionsDescriptors WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"
ALTER TABLE sessionsItemIds ADD timesAccessed integer NOT NULL DEFAULT 0
DELETE FROM sessions WHERE sessionDescriptorId IN (                     SELECT id FROM sessionsDescriptors                     WHERE version NOT LIKE "FV=%" AND version NOT LIKE "%&FV=%"               )
CREATE INDEX IF NOT EXISTS ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
CREATE TABLE IF NOT EXISTS lastFeaturizations (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   sessionDescriptorId integer NOT NULL,                   transformer blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
DROP INDEX IF EXISTS ix_trainingLog_planId_creationTimestamp
ALTER TABLE sessionsItemIds ADD lastUsed real NOT NULL DEFAULT 0
DELETE FROM sessions WHERE sessionDescriptorId IN (SELECT id FROM sessionsDescriptors                 WHERE                    (name = "SignificantPhoneNumber" AND version LIKE "%1.1%")                OR (name = "SignificantPhoneNumber" AND version LIKE "%1.2%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.1%")                OR (name = "SignificantEmailAddress" AND version LIKE "%1.2%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.1%")                OR (name = "SignificantPostalAddress" AND version LIKE "%1.2%")                OR (name = "SelfIdentification" AND version LIKE "%1.1%")                OR (name = "STSQP")                )
PRAGMA foreign_keys = OFF
DELETE FROM sessions WHERE id IN (SELECT sessions.id FROM sessions LEFT JOIN sessionsItemIds ON sessions.id = sessionsItemIds.sessionId WHERE itemIdentifier = '<hey@example.com>')
DROP TABLE IF EXISTS modelHandles
DROP TABLE IF EXISTS sessions_old
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
CREATE INDEX IF NOT EXISTS ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX IF NOT EXISTS ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp ON trainingLog (planId, creationTimestamp)
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   planId char(128) NOT NULL,                   sessionDescriptorId integer NOT NULL,                   serverIteration integer NOT NULL,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
INSERT INTO sessions(id,creationTimestamp,sessionDescriptorId,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source)                 SELECT s.id,creationTimestamp,mh.sd_id,label,covariatesLength,covariatesIndices,covariatesValues,isAppleInternal,source                 FROM sessions_old AS s JOIN modelHandles AS mh                 WHERE s.modelHandleId = mh.id AND mh.sd_id IS NOT NULL
CREATE INDEX IF NOT EXISTS ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
CREATE TABLE IF NOT EXISTS sessions (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   creationTimestamp real NOT NULL,                   sessionDescriptorId integer NOT NULL,                   label integer NOT NULL,                   covariatesLength integer NOT NULL,                   covariatesIndices blob,                   covariatesValues blob,                   isAppleInternal integer(1) NOT NULL DEFAULT 0,                   source blob,                   FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE               )
UPDATE modelHandles SET sd_id = (SELECT id FROM sessionsDescriptors WHERE name = sd_name AND version = sd_version)
INSERT OR IGNORE INTO sessionsDescriptors(name,version,locale) SELECT sd_name,sd_version,locale FROM modelHandles
CREATE UNIQUE INDEX IF NOT EXISTS ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
CREATE TABLE IF NOT EXISTS sessionsDescriptors (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,                   name char(128) NOT NULL,                   version char(128) NOT NULL,                   locale char(5) NOT NULL               )
UPDATE modelHandles SET               sd_name = CASE                   WHEN name = 'FiM.phone' THEN 'SignificantPhoneNumber'                   WHEN name = 'dataDetectionSignificantPhrasePhoneLogistic' THEN 'SignificantPhoneNumber'                   WHEN name = 'SignificantPhoneNumber' THEN name                   WHEN name = 'dataDetectionSignificantPhraseAddressLogistic' THEN 'SignificantPostalAddress'                   WHEN name = 'SignificantPostalAddress' THEN name                   WHEN name = 'dataDetectionSignificantPhraseEmailLogistic' THEN 'SignificantEmailAddress'                   WHEN name = 'SignificantEmailAddress' THEN name                   WHEN name = 'selfIdentificationPhraseLogistic' THEN 'SelfIdentification'                   WHEN name = 'SelfId.Covariates' THEN 'SelfIdentification'                   WHEN name = 'SelfIdentification' THEN name                   WHEN name = 'STSQP' AND version = '1.2' THEN name                   ELSE NULL               END,               sd_version = CASE                   WHEN version = '1.1' THEN 'TW=12&NG=3&FV=1.1'                   WHEN version = 'TW=12&NG=3&FV=1.1' THEN version                   WHEN version = '1.2' THEN version                   ELSE NULL               END
ALTER TABLE modelHandles ADD sd_version char(128)
ALTER TABLE modelHandles ADD sd_name char(128)
ALTER TABLE modelHandles ADD sd_id integer
ALTER TABLE sessionsItemIds ADD bundleIdentifier char(128)
ALTER TABLE sessionsDomainIds ADD bundleIdentifier char(128)
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
v16@?0@"_PASSqliteStatement"8
:data
:rowId
UPDATE sessions SET covariatesValues = :data WHERE id = :rowId
SELECT id, covariatesValues FROM sessions
DELETE FROM receivedPlans
ALTER TABLE sessions ADD source blob
CREATE INDEX IF NOT EXISTS ix_trainingLog_planId_creationTimestamp             ON trainingLog (planId, creationTimestamp)
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           planId char(128) NOT NULL,                                 modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
DROP TABLE trainingLog
CREATE TABLE IF NOT EXISTS receivedPlans (             planId char(128) PRIMARY KEY NOT NULL,                 modificationTimestamp real NOT NULL,                   serializedPlan blob NOT NULL                           )
DELETE FROM modelMetadata
ALTER TABLE sessions ADD isAppleInternal integer(1) NOT NULL DEFAULT 0
ALTER TABLE modelMetadata ADD maxIteration integer NOT NULL DEFAULT 10
DROP TABLE sessions_old
DROP TABLE sessionsItemIds_old
INSERT INTO sessionsItemIds(id,sessionId,itemIdentifier)             SELECT id,sessionId,itemIdentifier FROM sessionsItemIds_old
ALTER TABLE sessionsItemIds RENAME TO sessionsItemIds_old
DROP TABLE sessionsDomainIds_old
INSERT INTO sessionsDomainIds(id,sessionId,domainIdentifier)             SELECT id,sessionId,domainIdentifier FROM sessionsDomainIds_old
ALTER TABLE sessionsDomainIds RENAME TO sessionsDomainIds_old
INSERT INTO sessions(id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues)             SELECT id,creationTimestamp,modelHandleId,label,covariatesLength,covariatesIndices,covariatesValues FROM sessions_old
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob,                                    covariatesValues blob,                                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
ALTER TABLE sessions RENAME TO sessions_old
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     payload blob NOT NULL,                                   FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
DROP TABLE modelMetadata
CREATE INDEX IF NOT EXISTS ix_trainingLog_modelHandleId_creationTimestamp             ON trainingLog (modelHandleId, creationTimestamp)
CREATE TABLE IF NOT EXISTS trainingLog (                   id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            serverIteration integer NOT NULL,                          FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE TABLE IF NOT EXISTS modelMetadata (               modelHandleId integer PRIMARY KEY NOT NULL,              payloadPath char(128) NOT NULL,                          serverIteration integer NOT NULL,                        hasFinishedTraining integer(1) NOT NULL,                 modificationTimestamp real NOT NULL,                     FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                                  )
CREATE TABLE IF NOT EXISTS sessionsItemIds (                 id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  itemIdentifier char(128) NOT NULL,                           FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE TABLE IF NOT EXISTS sessionsDomainIds (               id integer PRIMARY KEY AUTOINCREMENT NOT NULL,               sessionId integer NOT NULL,                                  domainIdentifier char(128) NOT NULL,                         FOREIGN KEY (sessionId) REFERENCES sessions (id)               ON DELETE CASCADE                                          )
CREATE INDEX IF NOT EXISTS ix_sessions_modelHandleId             ON sessions (modelHandleId ASC)
CREATE TABLE IF NOT EXISTS sessions (                      id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             creationTimestamp real NOT NULL,                           modelHandleId integer NOT NULL,                            label integer NOT NULL,                                    covariatesLength integer NOT NULL,                         covariatesIndices blob NOT NULL,                           covariatesValues blob NOT NULL,                            FOREIGN KEY (modelHandleId) REFERENCES modelHandles (id)               ON DELETE CASCADE                                        )
CREATE UNIQUE INDEX IF NOT EXISTS ix_modelHandles_name_version_locale             ON modelHandles (name, version, locale)
CREATE TABLE IF NOT EXISTS modelHandles (                  id integer PRIMARY KEY AUTOINCREMENT NOT NULL,             name char(128) NOT NULL,                                   version char(128) NOT NULL,                                locale char(5) NOT NULL                                    )
CREATE INDEX ix_lastFeaturizations_sessionDescriptorId ON lastFeaturizations (sessionDescriptorId)
CREATE TABLE lastFeaturizations ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionDescriptorId integer NOT NULL, transformer blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE INDEX ix_sessionsDomainIds_sessionId ON sessionsDomainIds (sessionId)
CREATE INDEX ix_sessionsDomainIds_bundleId_domainId ON sessionsDomainIds (bundleIdentifier, domainIdentifier)
CREATE INDEX ix_sessionsItemIds_sessionId ON sessionsItemIds (sessionId)
CREATE INDEX ix_sessionsItemIds_bundleId_itemId ON sessionsItemIds (bundleIdentifier, itemIdentifier)
CREATE INDEX ix_sessions_sessionDescriptorId ON sessions (sessionDescriptorId ASC)
CREATE TABLE sessions ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, creationTimestamp real NOT NULL, sessionDescriptorId integer NOT NULL, label integer NOT NULL, covariatesLength integer NOT NULL, covariatesIndices blob, covariatesValues blob, isAppleInternal integer(1) NOT NULL DEFAULT 0, source blob, FOREIGN KEY (sessionDescriptorId) REFERENCES sessionsDescriptors (id) ON DELETE CASCADE )
CREATE UNIQUE INDEX ix_sessionsDescriptors_name_version_locale ON sessionsDescriptors (name, version, locale)
CREATE TABLE sessionsDescriptors ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, name char(128) NOT NULL, version char(128) NOT NULL, locale char(5) NOT NULL )
CREATE TABLE receivedPlans ( planId char(128) PRIMARY KEY NOT NULL, modificationTimestamp real NOT NULL, serializedPlan blob NOT NULL )
CREATE TABLE sessionsItemIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, itemIdentifier char(128) NOT NULL, bundleIdentifier char(128), lastUsed real NOT NULL DEFAULT 0, timesAccessed integer NOT NULL DEFAULT 0, FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
CREATE TABLE sessionsDomainIds ( id integer PRIMARY KEY AUTOINCREMENT NOT NULL, sessionId integer NOT NULL, domainIdentifier char(128) NOT NULL, bundleIdentifier char(128), FOREIGN KEY (sessionId) REFERENCES sessions (id) ON DELETE CASCADE )
Tr^f,R,N
count
data
T@"NSData",R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLDenseVector.m
Index %tu out of bounds (vector length: %tu)
mutablePtr
mutableData
T@"NSMutableData",R,N,V_mutableData
end >= start
end > 0 && end <= self.count
start >= 0 && start < self.count
%d = %d * %d
Failed to allocate NSData.
PMLMutableDenseVectorAllocationFailure
v20@?0f8Q12
hasRmse
rmse
Tf,N,V_rmse
hasF1
Tf,N,V_f1
hasTruePositives
truePositives
TQ,N,V_truePositives
hasTrueNegatives
trueNegatives
TQ,N,V_trueNegatives
hasFalsePositives
falsePositives
TQ,N,V_falsePositives
hasFalseNegatives
falseNegatives
TQ,N,V_falseNegatives
positiveScoresCount
positiveScores
negativeScoresCount
negativeScores
hasSecsToExecute
secsToExecute
Tf,N,V_secsToExecute
com.apple.proactive.fia.phone.en
com.apple.proactive.responses
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/PMLSeparatedDPNoiseStrategy.m
Can't instantiate %@. Missing %@ dependency.
PFLPrivatize
/System/Library/PrivateFrameworks/PrivateFederatedLearning.framework/PrivateFederatedLearning
QuickResponsesClassification
collectedSessions
T@"NSArray",R,V_collectedSessions
isInternal
spotlightReference
model
numberOfRows
numberOfColumns
isSymmetric
TB,N,V_isSymmetric
matrix
T^{sparse_m_float=},N,V_matrix
v40@?0Q8Q16r^f24r^q32
malloc failed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLSparseMatrix.m
Can not mark %lu x %lu matrix as symmetric
Invalid shape, all rows must be the same length (row %lu length: %lu, first row length: %lu)
unknown
hasLabel
TQ,N,V_label
hasSupervisionType
supervisionType
TQ,N,V_supervisionType
hasConfidenceScore
confidenceScore
Tf,N,V_confidenceScore
plan
T@"<PMLPlanProtocol>",R,N,V_plan
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/PMLPlanSerialization.m
PLAN
Invalid plan. Unknown class: %@
PLAN_CLASSNAME
v28@?0f8Q12Q20
hasSupport
support
Tf,N,V_support
@"PMLMutableDenseVector"24@?0@"PMLSparseMatrix"8@"PMLModelWeights"16
logisticBatch
f24@?0@"PMLSparseVector"8@"PMLModelWeights"16
f40@?0@"PMLModelWeights"8@"PMLSparseMatrix"16@"PMLModelRegressor"24^f32
calculateAvgGradientForBatch
Ti,R,N
normalize
TB,N,V_normalize
NON_WORD_TOKENS_LOCALE
SHOULD_TOKENIZE_NEWLINES
CHARACTER_NORMALIZATION
TOKEN_NORMALIZATION
TOKEN_NGRAM_LENGTH
TOKEN_NGRAM_LOCATION
CHARACTER_NGRAM_LENGTH
CHARACTER_NGRAM_LOCATION
NGRAM_SIZE
BUCKET_SIZE
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLHashingVectorizer.m
(characterNGramRange.location && characterNGramRange.length) || (tokenNGramRange.location && tokenNGramRange.length)
buckets > 0
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/Trackers/PMLFidesTracker.m
Can't instantiate %@. Missing "planId" dependency.
gradient
size
trackedSessions
T@"NSArray",R,V_trackedSessions
com.apple.proactive
TQ,R,N,V_numberOfRows
TQ,R,N,V_numberOfColumns
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLDenseMatrix.m
featureVersion
Tf,R,N,V_featureVersion
<%@ %@ %@ %@>
LOCALE
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLSessionDescriptor.m
Handle %@ is not a sub-model handle.
_label([0-9]+)
_label[0-9]+
%@_label%lu
Unexpected featureVersion extracted for %@; pattern: %@; descriptor: %@
Unexpected number of match ranges for %@; pattern: %@; descriptor: %@
Unexpected number of matches for %@; pattern: %@; descriptor: %@
regex
(^|&)FV=([0-9]+(.[0-9]+)?)($|&)
%@-%@-%@
itemIdentifiers
T@"NSArray",R,N,V_itemIdentifiers
domainIdentifier
T@"NSString",R,N,V_domainIdentifier
bundleIdentifier
T@"NSString",R,N,V_bundleIdentifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/PMLTraining.m
T@"PMLTrainingStore",R,V_store
v24@?0@"PMLSessionDescriptor"8^B16
v16@?0@"NSError"8
v24@?0@"NSUUID"8@"NSError"16
labeledStats
sessionsCount
modelLocale
modelVersion
modelName
positivesCount
v32@?0@"PMLSessionDescriptor"8@"NSSet"16^B24
label%tu
STSQP
com.apple.proactive.PMLDESPlugin
training.db
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/AWD/AWDProactiveModelFittingQuantizedSparseVector+PML.m
adapter
T@"<PMLTrackerAdapterProtocol>",R,V_adapter
T@"AWDProactiveModelFittingModelInfo",R,V_modelInfo
quantizationNumberOfBuckets
TQ,R,V_quantizationNumberOfBuckets
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/Trackers/PMLProtoBufTracker.m
TRACKER_QUANTIZATION_BUCKETS
Can't instantiate %@. Unknown class: %@
TRACKER_ADAPTER_CLASS
Invalid objective features. It needs to have the same length as feature matrix (%lu) but got %lu.
Invalid feature matrix. It needs to be square-shaped but got shape (%lu, %lu)
T@"<PMLEvaluationTrackerProtocol>",R,N,V_tracker
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/Plans/PMLNaiveBayesEvaluationPlan.m
PML_DICTIONARY_PROBABILITIES
PML_DICTIONARY_NEGATIVE_CONDITIONAL_PROBABILITIES
PML_DICTIONARY_POSITIVE_CONDITIONAL_PROBABILITIES
TQ,V_version
didRun
TB,R,N,V_didRun
returnValue
dummy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLDataChunk.m
chunks
vector
Tr^d,R,N
plist
T@,R,N
trackedGradients
trackedWeights
mock-1.0-en
hasBatchSize
batchSize
TQ,N,V_batchSize
perLabelSupports
T@"NSMutableArray",&,N,V_perLabelSupports
perLabelSupport
trackedObjectiveFeatures
trackedFeatureMatrices
hasEvaluation
evaluation
T@"AWDProactiveModelFittingEvaluation",&,N,V_evaluation
hasLogRegWeights
logRegWeights
T@"AWDProactiveModelFittingLogRegWeights",&,N,V_logRegWeights
hasLogRegGradient
logRegGradient
T@"AWDProactiveModelFittingLogRegGradient",&,N,V_logRegGradient
hasLinRegFeatureMatrix
linRegFeatureMatrix
T@"AWDProactiveModelFittingLinRegFeatureMatrix",&,N,V_linRegFeatureMatrix
hasLinRegObjectiveFeatures
linRegObjectiveFeatures
T@"AWDProactiveModelFittingLinRegObjectiveFeatures",&,N,V_linRegObjectiveFeatures
T@"PMLSparseMatrix",R,N,V_covariates
outcomes
T@"PMLModelRegressor",R,N,V_outcomes
TQ,R,N,V_count
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/StoredTypes/PMLTrainingStoredSessionBatch.m
Covariates and outcomes need to have the same length, but got %lu and %d.
ProactiveMLErrorDomain
linearBatch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLMathFunctions.h
s == SPARSE_SUCCESS
calculateAvgLinRegGradientForBatch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/Plans/PMLLogRegEvaluationPlan.m
T@"AWDProactiveModelFittingModelInfo",R,N,V_modelInfo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/AWD/PMLAWDAvailableSessionsTracker.m
v28@?0@"PMLSessionDescriptor"8Q16f24
Missing delegate to handle AWD metric request.
v12@?0I8
AWD metric query delegate can only be set once
numberOfNonZeroValues
TQ,N,V_numberOfNonZeroValues
sparseIndices
T^q,N,V_sparseIndices
sparseValues
T^f,N,V_sparseValues
TQ,R,N,V_length
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLSparseVector.m
Too big vector.
v24@?0^v8Q16
numberOfNonZeroValues == 0 || (indices && values)
v32@?0@"NSNumber"8@"NSNumber"16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLModelFullyConnectedLayer.m
[chunk isKindOfClass:PMLDataChunkRaw.class]
DATA_SCALE
DATA_TYPE
ACTIVATION_TYPE
OUTPUT_LEN
INPUT_LEN
CHUNK_INDEX
Could not apply filter in a batch.
Could not calloc, batch size %zu, output size %zu
Could not apply filter.
Could not calloc, output size %zu
Could not apply activation filter.
Data type %d not supported.
Failed to perform matrix multiplication with sparse matrix
Failed to insert values into sparse matrix
Could not create sparse matrix, 1 row, %lu columns
sparseVectorDenseMatrixMultiply
buffer != NULL
bnnsSizeof
status == 0
createActivationFilter
filter != NULL
Failed to create filter: input size %zu, output size %zu, data type %d, activation type %d
dataType == BNNSDataTypeInt8 || dataType == BNNSDataTypeInt16
Failed check: %d weights length == %d inputLen * %d outputLen * %d dataType size
hasK
TQ,N,V_k
hasPrecision
precision
Tf,N,V_precision
CLASS_NAME
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/PMLPlistClassWrapper.m
Invalid plan. class %@ doesn't conform to %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Suggestions_Sim/Suggestions-1052.14/ProactiveML/Training/Trackers/PMLPassThroughTracker.m
Can't instantiate %@. Missing "buckets" dependency.
buckets
results
AWDGradientMessage
scaleFactor
AWDWeightsMessage
hasSparseFloatGradient
sparseFloatGradient
T@"AWDProactiveModelFittingSparseFloatVector",&,N,V_sparseFloatGradient
hasIteration
iteration
TQ,N,V_iteration
hasSparseQuantizedGradient
sparseQuantizedGradient
T@"AWDProactiveModelFittingQuantizedSparseVector",&,N,V_sparseQuantizedGradient
hasGradientScaleFactor
gradientScaleFactor
Tf,N,V_gradientScaleFactor
hasGradientL2norm
gradientL2norm
Tf,N,V_gradientL2norm
hasDenseQuantizedGradient
denseQuantizedGradient
T@"AWDProactiveModelFittingQuantizedDenseVector",&,N,V_denseQuantizedGradient
Failed writing analytics log for data transparency. Skip upload
Sending %@ (size: %tu) to Parsec.
Unsupported proto buf message: %@
Stopped after iter %li with NAN error
Stopped after iter %li with DBL_MAX error
Stopped after iter %li with -DBL_MAX error
Stopped after iter %li with -INFINITY error
Stopped after iter %li with INFINITY error
Stopped after iter %li with perfect fit
Stopped after iter %li with loss %f (mse: %f)
Evaluating plan %@ (descriptor: %@, available %tu sessions)
Label %@ not in sepcified list %@
Ignoring all zero row #%ld
[refeaturization]: same session descriptor, no need for refeaturization
[refeaturization]: new featureVersion is lower than last saved one in DB (new: %@, db: %@)
[refeaturization]: save lastFeaturization %@.
[refeaturization]: sessionDescriptor (old: %@, new: %@), start refeaturization.
[refeaturization]: invalid session descriptors setup (old: %@, new: %@)
[refeaturization]: only one of transformer and refeaturizationDescriptors is specified.
[refeaturization]: Failed to recover source field, old data? Ignore.
Attempted to use PMLNoNoiseStrategy on a production device.
Attempted to use PMLSeparatedDPNoiseStrategy with non-Fides tracker: %@.
Training model: %@ (available %lu sessions)
scaleAndAddNoiseToDenseVector failed
No source recoverer set.
Error querying schema: %@
Failed to load last training featurization in db. Error: %@
Failed to load sessions for model %@. Error: %@
Failed to vacuum training db: %@
%@ deallocating
PMLTraining db (%@) corrupted. Flushing.
Opening db %@.
PMLTrainingStore failed to open/initialize db.
Closing db %@.
PMLTrainingStore failed to enable foreign keys support.
PMLTrainingStore notified of device lock state change to %d
Failed to load stats about sessions in db. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@ and domainId=%@. Error: %@
PMLTrainingStore failed to delete sessions for for bundleId=%@ and itemId=%@. Error: %@
PMLTrainingStore failed to delete sessions for bundleId=%@. Error: %@
PMLTrainingStore failed to delete negative sessions. Error: %@
PMLTrainingStore failed to count labeled sessions. Error: %@
PMLTrainingStore failed to delete over used sessions. Error: %@
PMLTrainingStore failed to delete unused sessions. Error: %@
PMLTrainingStore failed to count total sessions. Error: %@
Invalid session from db (row id %lu): covariatesIndices and covariatesValues must contain the same number of elements (expected bytes length in int/float ratio but got %lu and %lu).
Invalid session from db (row id %lu), covariatesLength has to be %lu, got %lu.
Migration encountered error during migration of %@: versions %lu, query: %@, error: %@
Future database version detected (%lu). Giving up on migration.
PMLTrainingStore db failed to migrate but migration is needed.
PMLTrainingStore db failed to create new database with skip queries.
Unexpected AWD message type: %@
Attempted to use PMLSeparatedDPNoiseStrategy for PMLLinRegTrainingPlan.
You must explicitly specify a noise mechanism.
Invalid noiseMechanism, got: %lld
PFLPrivatize call failed
Failed to soft-link PrivateFederatedLearning: %s
Error extracting floats from sparse rows, status: %d
Sending %@ (%d) to AWD.
Ignoring synchronous plan %@ because the db is not open.
Running %@ synchronously
Plan %@ finished? %d
Won't trim training db because the db is not open.
Trimming training db.
Vacuuming training db.
Removing training samples for %@
Failed to delete existing records in DESRecordStore. Error: %@
Failed to send session stats %@ to Fides. Error: %@
Successfully sent stats %@ to Fides.
Adding session for %@ (label: %tu, length: %tu)
Instantiating PMLTraining singleton.
Can't instantiate PMLTraining in %@, becacuse there is already an instance in %@.
Sending evaluation metrics for %@
Sending objective features for model %@
Sending feature matrix for model %@
Sending gradient for model %@
Sending weights for model %@
Evaluating plan %@ (descriptor: %@, available %lu sessions)
Chunk descriptor out of bounds: ends at %llu in data of length %llu
Could not parse chunk %u; bailing out
Could not open chunk file at %@: %@
Error loading plist chunk: %@
Error writing plist chunk: %@
Sending available sessions stats to AWD (%tu models)
Error reading object from NSData: %@
Error writing object to NSData: %@
PMLNaiveBayesSolver
PMLInMemoryCachedStore
PMLPlanSimulator
PMLTrackerParsecAdapter
PMLTrackerAdapterProtocol
NSObject
AWDProactiveModelFittingEvaluation
NSCopying
AWDProactiveModelFittingLogRegWeights
PMLGradientSolver
PMLMultiLabelRegressionEvaluationPlan
PMLPlanProtocol
PMLPlistAndChunksSerializableProtocol
AWDProactiveModelFittingLinRegObjectiveFeatures
AWDProactiveModelFittingQuantizedSparseVector
AWDProactiveModelFittingModelInfoStatsPair
PMLLabelLimitRowId
PMLLogRegTrainingPlan
AWDProactiveModelFittingLinRegFeatureMatrix
PML_VisibleForTesting
PMLModelDescriptor
AWDProactiveModelFittingSparseFloatVector
PMLLaplaceSampler
PMLSampler
PMLTrainingLogEntry
PMLTrainingStore
PMLAWDAvailableSessionsTrackerMock
AWDProactiveModelFittingAvailableSessions
AWDProactiveModelFittingSparseFloatMatrix
PMLImmutableLogisticRegressionModel
PMLClassifierModelProtocol
PMLRegressionModelProtocol
PMLLinRegTrainingPlan
PMLAppleDirectory
PMLPlanDescriptor
AWDProactiveModelFittingQuantizedSparseMatrix
PMLDictionarySerializableProtocol
PMLChunkFileUtilities
PMLMobileAssetParameterGetStrategy
PMLChunkToVec
PMLPlistAndChunksSerialization
PMLMultiLabelLogisticRegressionModel
PMLMultiLabelClassifierModelProtocol
PMLMultiLabelRegressionModelProtocol
PMLDiffPrivacyNoiseStrategy
PMLNoiseStrategy
PMLClassificationEvaluationMetrics
PMLModelLearningRates
AWDProactiveModelFittingModelInfo
VisibleForTesting
PMLAWDEvaluationTrackerMock
PMLTrainingDatabaseMigrations
PMLDenseVector
NSMutableCopying
PMLMutableDenseVector
AWDProactiveModelFittingEvalMetrics
PMLSeparatedDPNoiseStrategy
PMLTrainingMock
PMLTrainingProtocol
PMLSparseMatrix
PMLAWDSessionTracker
AWDProactiveModelFittingSession
PMLPlanWrapper
PMLPlanSerialization
PMLTrackerAWDAdapter
PMLNoNoiseStrategy
AWDProactiveModelFittingLabelSupportPair
PMLLogisticRegressionModel
PMLGaussianSampler
PMLModelRegressor
PMLHashingVectorizer
PMLTransformerProtocol
PMLFidesTracker
PMLMultiLabelEvaluationTrackerProtocol
PMLEvaluationTrackerProtocol
PMLLogRegTrackerProtocol
PMLJson
PMLAWDSessionTrackerMock
PMLDenseMatrix
PMLSessionDescriptor
PMLSpotlightReference
PMLTraining
PMLAWDMetricQueryDelegate
PMLProtoBufTracker
PMLLinRegTrackerProtocol
PMLNaiveBayesEvaluationPlan
PMLMockPlan
AWDProactiveModelFittingQuantizedDenseVector
PMLDataChunk
PMLDataChunkDenseDoubleVector
PMLDataChunkDenseFloatVector
PMLDataChunkPlist
PMLDataChunkRaw
PMLAWDLogisticRegTrackerMock
AWDProactiveModelFittingMinibatchStats
PMLNaiveBayesModel
PMLModelWeights
PMLAWDLinearRegTrackerMock
AWDProactiveModelFittingParsecFeedbackEnvelope
PMLTrainingStoredSessionBatch
PMLTrackerMockAdapter
PMLLinearRegressionModel
PMLLogRegEvaluationPlan
PMLAWDBaseTracker
PMLAWDAvailableSessionsTracker
PMLSparseVector
PMLModelFullyConnectedLayer
AWDProactiveModelFittingPrecisionAtKPair
PMLPlistClassWrapper
PMLPassThroughTracker
AWDProactiveModelFittingLogRegGradient
_positiveConditionalProbabilities
_negativeConditionalProbabilities
_probabilities
_positiveConditionalCounts
_negativeConditionalCounts
_counts
_covariates
_objective
initWithProbabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:
init
solveForCovariates:objectives:
solve
predict:
.cxx_destruct
positiveConditionalProbabilities
setPositiveConditionalProbabilities:
negativeConditionalProbabilities
setNegativeConditionalProbabilities:
probabilities
setProbabilities:
positiveConditionalCounts
setPositiveConditionalCounts:
negativeConditionalCounts
setNegativeConditionalCounts:
counts
setCounts:
covariates
setCovariates:
objective
setObjective:
_cachedSessions
initWithSessionBatch:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
_openDbIfUnlocked
_registerUnlockHandler
cachedStoreFromRealStore:sessionDescriptor:sessionsLimit:
alloc
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
stringWithUTF8String:
_stores
_sessionDescriptor
_rng
initWithStores:sessionDescriptor:seed:
_randomStore
_randomStores:
runParallelPlansWithPlanId:tracker:noiseScaleFactors:noiseMinimumMagnitude:weights:serverIteration:useIntercept:noiseMechanism:usingRandomlySelected:
addObject:
objectAtIndexedSubscript:
next
initWithSeed:
simulatorWithDbPaths:sessionDescriptor:sessionsInBatch:maxSessionsLimit:seed:
objectForKeyedSubscript:
numberWithUnsignedInteger:
setObject:forKeyedSubscript:
numberWithUnsignedLong:
fileExistsAtPath:
defaultManager
postMetricId:message:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
sendCustomFeedback:
sharedSession
initWithType:data:
_writeDataForTransparency:
wrappedMessage:
raise:format:
_timestamp
_evaluationMetrics
_minibatchStats
_modelInfo
_precisionAtKs
_has
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasModelInfo
hasMinibatchStats
hasEvaluationMetrics
clearPrecisionAtKs
addPrecisionAtK:
precisionAtKsCount
precisionAtKAtIndex:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
modelInfo
setModelInfo:
minibatchStats
setMinibatchStats:
evaluationMetrics
setEvaluationMetrics:
precisionAtKs
setPrecisionAtKs:
countByEnumeratingWithState:objects:count:
allocWithZone:
initWithCapacity:
setObject:forKey:
numberWithUnsignedLongLong:
dictionary
stringWithFormat:
objectAtIndex:
removeAllObjects
precisionAtKType
_denseQuantizedWeights
_sparseFloatWeights
_sparseQuantizedWeights
_weightsL2norm
_weightsScaleFactor
hasSparseFloatWeights
hasSparseQuantizedWeights
setWeightsScaleFactor:
setHasWeightsScaleFactor:
hasWeightsScaleFactor
setWeightsL2norm:
setHasWeightsL2norm:
hasWeightsL2norm
hasDenseQuantizedWeights
sparseFloatWeights
setSparseFloatWeights:
sparseQuantizedWeights
setSparseQuantizedWeights:
weightsScaleFactor
weightsL2norm
denseQuantizedWeights
setDenseQuantizedWeights:
numberWithFloat:
_learningRate
_stoppingThreshold
_minIterations
_gradientCalculator
_predictionCalculator
_batchPredictionCalculator
_intercept
_weights
initWithLearningRate:minIterations:stoppingThreshold:weights:intercept:gradientCalculator:predictionCalculator:batchPredictionCalculator:
computeAvgGradientWithIterations:
solveWithAvgGradient:maxNumberOfIterations:
meanSquaredError
batchPredict:
weights
setWeights:
intercept
setIntercept:
_store
_maxSessionsLimit
_sessionsInBatch
_supportPerLabel
_multiLabelRegressionModel
_positiveLabels
_weightsArray
_evaluationPoints
_tracker
_evaluationLevel
_planId
runWhile:didFinish:
planId
toPlistWithChunks:
initWithPlist:chunks:context:
initWithPlanId:store:sessionDescriptor:maxSessionsLimit:sessionsInBatch:supportPerLabel:labelAndWeights:modelClassName:intercept:evaluationPoints:tracker:evaluationLevel:
_rankedLabelsForSession:
_precisionAtEvaluationPointsForSessions:
store
sessionDescriptor
maxSessionsLimit
sessionsInBatch
supportPerLabel
multiLabelRegressionModel
positiveLabels
weightsArray
evaluationPoints
tracker
evaluationLevel
dictionaryWithObjects:forKeys:count:
boolValue
dictionaryWithObjects:forKeys:
enumerateObjectsUsingBlock:
unsignedIntegerValue
numberWithBool:
floatValue
indexOfObject:
containsObject:
sortedArrayUsingDescriptors:
arrayWithObjects:count:
allKeys
sortDescriptorWithKey:ascending:comparator:
compare:
initWithObjects:forKeys:
allValues
_featuresL2norm
_featuresScaleFactor
_sparseFloatFeatures
_sparseQuantizedFeatures
hasSparseFloatFeatures
hasSparseQuantizedFeatures
setFeaturesScaleFactor:
setHasFeaturesScaleFactor:
hasFeaturesScaleFactor
setFeaturesL2norm:
setHasFeaturesL2norm:
hasFeaturesL2norm
sparseFloatFeatures
setSparseFloatFeatures:
sparseQuantizedFeatures
setSparseQuantizedFeatures:
featuresScaleFactor
featuresL2norm
_indices
_values
_bucketSize
_length
_minValue
dealloc
indicesCount
indices
clearIndices
addIndices:
indicesAtIndex:
setIndices:count:
valuesCount
values
clearValues
addValues:
valuesAtIndex:
setValues:count:
setLength:
setHasLength:
hasLength
setMinValue:
setHasMinValue:
hasMinValue
setBucketSize:
setHasBucketSize:
hasBucketSize
length
minValue
bucketSize
numberWithUnsignedInt:
raise
exceptionWithName:reason:userInfo:
_stats
hasStats
stats
setStats:
_label
_limit
_rowId
initWithLabel:limit:rowId:
isEqualToLabelLimitRowId:
label
limit
rowId
numberWithInteger:
labelLimitRowIdWithLabel:limit:rowId:
_noiseStrategy
_currentServerIteration
_currentModelWeights
_localGradientIterations
_localLearningRate
_localMinimumIterations
_useOnlyAppleInternalSessions
_skew
_threshold
_isMultiLabel
_positiveLabel
_reportScale
_transformer
_refeaturizationDescriptors
initWithStore:tracker:noiseStrategy:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentServerIteration:currentModelWeights:localLearningRate:stoppingThreshold:localMinimumIterations:localGradientIterations:useOnlyAppleInternalSessions:skew:threshold:isMultiLabel:intercept:positiveLabel:evaluationLevel:reportScale:transformer:refeaturizationDescriptors:
train
evaluationMetricsForPredictions:objectives:predicate:start:
loadSessionsWithBlock:
normalizeRegressor:
runUntilDoneForTesting
currentServerIteration
currentModelWeights
localLearningRate
stoppingThreshold
localMinimumIterations
localGradientIterations
useOnlyAppleInternalSessions
isMultiLabel
positiveLabel
reportScale
transformer
refeaturizationDescriptors
doubleValue
mutableCopy
isEqualToString:
isBetaBuild
isInternalBuild
numberWithInt:
numberWithDouble:
first
initWithFormat:
timeIntervalSinceNow
date
planWithStore:tracker:sessionDescriptor:arguments:
integerValue
intValue
_featureMatrixL2norm
_featureMatrixScaleFactor
_sparseFloatFeatureMatrix
_sparseQuantizedFeatureMatrix
hasSparseFloatFeatureMatrix
hasSparseQuantizedFeatureMatrix
setFeatureMatrixScaleFactor:
setHasFeatureMatrixScaleFactor:
hasFeatureMatrixScaleFactor
setFeatureMatrixL2norm:
setHasFeatureMatrixL2norm:
hasFeatureMatrixL2norm
sparseFloatFeatureMatrix
setSparseFloatFeatureMatrix:
sparseQuantizedFeatureMatrix
setSparseQuantizedFeatureMatrix:
featureMatrixScaleFactor
featureMatrixL2norm
modelInfoFromSessionDescriptor:
modelInfoFromPlanId:
hasWeights
_name
_version
_learningRates
name
setName:
version
setVersion:
learningRates
setLearningRates:
_magnitude
initWithMagnitude:
sample
initWithMagnitude:seed:
_serverIteration
initWithTimestamp:serverIteration:
serverIteration
_dbPath
_lockStateNotificationToken
_allowSkipSchema
_sourceRecoverer
initWithPath:allowSkipSchema:
initWithPath:
storeSession:label:model:bundleId:domainId:itemIds:isAppleInternal:
storeSession:source:label:model:bundleId:domainId:itemIds:isAppleInternal:
loadSessionsForModel:privacyBudgetRefreshPeriod:labels:batchSize:supportPerLabel:block:
sessionDimensionsForModel:startingRowId:onlyAppleInternal:labelFilter:
_loadSessionsFromLabelAndTuples:model:numberOfRows:numberOfColumns:lastUsedMax:block:
_loadSessionsForModel:positiveRowId:negativeRowId:excludeItemIdsUsedWithin:limit:onlyAppleInternal:positiveLabel:skew:block:
_loadSessionsForModel:privacyBudgetRefreshPeriod:labelAndStartRows:batchSize:supportPerLabel:block:
loadSessionsForModel:excludeItemIdsUsedWithin:limit:onlyAppleInternal:block:
limitSessionsForEachLabelWithSessionDescriptor:totalSessionLimit:
limitSessionsByLastUsedTTL:
limitSessionsByMaxTimesAccessed
limitLabeledSessionsWithSessionDescriptor:label:limit:
deleteSessionsWithBundleId:
deleteSessionsWithBundleId:itemId:
deleteSessionsWithBundleId:domainId:
sessionStats
sessionStatsForSessionDescriptor:
enumerateSessionDescriptorsUsingBlock:
sessionDescriptorIdFor:
_unregisterUnlockHandler
_unsafeOpenDbIfUnlocked
_truncateDbIfCorrupted
vacuumDb
migrateTo:
updateSessionsAndLabelForModel:block:
lastTrainingFeaturizationForModelName:andLocale:
updateLastTrainingFeaturizationForModel:andData:
isDbOpen
getSchema:
setSourceRecoverer:
recoverSourceFromData:
dbForTesting
createSnapshot:
storeSession:source:label:model:
storeSession:label:model:
loadSessionsForModel:excludeItemIdsUsedWithin:withSkew:andLimit:block:
numberOfRowsInTable:
closeDbForTesting
closePermanently
prepAndRunQuery:onPrep:onRow:onError:
getIntegerForColumn:
stringByAppendingString:
userVersion
stringByReplacingMatchesInString:options:range:withTemplate:
hasPrefix:
getNSStringForColumn:
regularExpressionWithPattern:options:error:
writeTransaction:
updateTable:dictionary:whereClause:onError:
insertIntoTable:dictionary:
bindNamedParam:toNSString:
tupleWithFirst:second:
getNSDataForColumn:
migrate:to:forStore:
removeItemAtPath:error:
truncateDatabaseAtPath:
corruptionMarkerPathForPath:
isInMemoryPath:
_migrate:forStore:
initializeDatabase:withContentProtection:newDatabaseCreated:errorHandler:
isUnlocked
unregisterForLockStateChangeNotifications:
registerForLockStateChangeNotifications:
lastInsertRowId
bindNamedParam:toInteger:
readTransaction:
bindNamedParam:toDouble:
timeIntervalSince1970
enumerateKeysAndObjectsUsingBlock:
longValue
appendBytes:length:
getBytes:range:
numberWithLong:
setObject:atIndexedSubscript:
null
isDNUEnabled
_runQueries:andUpdateVersionTo:inTransactionOnDb:forStore:
lastUsedTimestampLimit
setLastUsedTimestampLimit:
inMemoryStoreForTesting
randomlyNamedInMemoryPathWithBaseName:
processName
processInfo
frailWriteTransaction:
setUserVersion:
filename
pointerValue
objectForKey:
_internalTrackedStats
_trackedStats
recentStatsForModelName:
triggerAWDMetricRequest
clearTrackedMessages
trackedStats
_perModelStats
clearPerModelStats
addPerModelStats:
perModelStatsCount
perModelStatsAtIndex:
perModelStats
setPerModelStats:
perModelStatsType
_columnIndices
_rowIndices
_columnLength
_rowLength
columnIndicesCount
columnIndices
clearColumnIndices
addColumnIndices:
columnIndicesAtIndex:
setColumnIndices:count:
setColumnLength:
setHasColumnLength:
hasColumnLength
rowIndicesCount
rowIndices
clearRowIndices
addRowIndices:
rowIndicesAtIndex:
setRowIndices:count:
setRowLength:
setHasRowLength:
hasRowLength
columnLength
rowLength
_backingObject
classify:
initWithWeights:intercept:
initWithChunk:intercept:
initWithFloatsNoCopy:count:intercept:
toChunk
quantizedDenseVectorFromDenseVector:numberOfBuckets:
originalValueAtIndex:
initWithStore:tracker:noiseStrategy:planId:positiveLabel:skew:sessionDescriptor:maxSessionsLimit:sessionsInBatch:useOnlyAppleInternalSessions:
featureMatrixWithNoiseFromCovariates:
_objectiveFeaturesWithNoiseFromCovariates:objectives:
bytes
initWithData:
isEmailInAppleDirectory:withPhonenumber:
isEmailInAppleDirectory:withAnotherEmail:
isEmailInAppleDirectory:
isPhoneNumberInAppleDirectory:
isPhoneNumberInAppleDirectory:withAnotherPhone:
sharedInstance
_locale
initWithName:version:locale:
locale
isValidPlanId:
descriptorFromPlanId:
planIdFromString:
componentsSeparatedByString:
hasGradient
gradientValueAtIndex:
gradientLength
initFromDictionary:
toDictionary
buildChunkFile:
writeChunkFile:toPath:
readChunkFile:withClass:context:
readChunkData:withClass:context:
numberForInternedChunk:addedToChunks:
lastObject
writeToFile:atomically:
toVec
migrateDenseDoubleVectorToDenseFloatVector:
isValidModelDescriptorInPlistMetadata:withErrorDescription:
_models
_layer
initWithWeightsArray:andIntercept:
initWithModels:
initWithLayer:
count
convertToLayerWithDataType:
serialize
mutableBytes
replaceBytesInRange:withBytes:
initWithLength:
sortUsingComparator:
initWithFloat:
pyClass
_seed
_inplaceNorm
_maxIterations
_minimumMagnitude
_noiseScaleFactors
_noiseMechanism
addNoiseToSparseVector:
addNoiseToSparseMatrix:
scaleAndAddNoiseToDenseVector:usingNorm:scaleFactor:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:seed:noiseMechanism:inplaceNorm:
initWithMaxIterationCount:noiseScaleFactors:minimumMagnitude:noiseMechanism:inplaceNorm:
samplerWithScaleFactorFor:usingNorm:
createDefaultSampler
createSamplerByName:
noiseScaleFactors
setNoiseScaleFactors:
minimumMagnitude
setMinimumMagnitude:
noiseMechanism
setNoiseMechanism:
numberWithLongLong:
enumerateIndexesUsingBlock:
removeIndex:
initWithIndexesInRange:
addIndexesInRange:
gaussianNoiseWithScaleFactor:minimumMagnitude:seed:
precision:predictions:predicate:
recall:predictions:predicate:
f1Score:predictions:predicate:
truePositives:predictions:predicate:
falsePositives:predictions:predicate:
trueNegatives:predictions:predicate:
falseNegatives:predictions:predicate:
addScoresForOutcomes:predictions:predicate:metrics:
roundFloatToSigFigs:sigFigs:
setReportSamplingRate:
_data
initModelLearningRatesFromFloats:
modelLearningRatesFromFloats:
hasName
hasVersion
hasLocale
setLocale:
quantizedSparseMatrixFromSparseMatrix:numberOfBuckets:
originalValueAtRow:column:
precisionAtK:
_adapter
initWithAdapter:modelInfo:
initWithModel:
trackedEvaluations
mockTracker
mockTrackerForPlanId:
_migrations
initWithMigrations:
maxVersion
migrations
unsignedIntValue
valueForKeyPath:
dictionaryWithObject:forKey:
bindNamedParam:toInt64:
bindNamedParam:toNSData:
dataWithBytesNoCopy:length:freeWhenDone:
getInt64ForColumn:
valueWithPointer:
mockMigrationsByAddingQueries:
skipFromZeroSchema:
mutableCopyWithZone:
data
initWithCount:
initWithFloats:count:
initWithFloatsNoCopy:count:freeWhenDone:
initWithFloatsNoCopy:count:deallocator:
sliceFrom:to:
vecByAppendingVec:
l1norm
l2norm
maxValue
density
enumerateValuesWithBlock:
enumerateNonZeroValuesWithBlock:
valueAt:
_mutableData
mutablePtr
initWithMutableData:
append:
append:count:
processValuesInPlaceWithBlock:
scaleInPlaceWithInversedFactor:
mutableData
appendData:
initWithBytesNoCopy:length:deallocator:
initWithBytesNoCopy:length:freeWhenDone:
initWithBytes:length:
denseVectorFromNumbers:
valueAtIndex:
sparseFloatVectorFromModelWeights:
sparseFloatVectorFromSparseVector:
evalMetricsWithRmse:f1:
evalMetricsWithRmse:f1:truePositives:trueNegatives:falsePositives:falseNegatives:
_negativeScores
_positiveScores
_falseNegatives
_falsePositives
_trueNegatives
_truePositives
_rmse
_secsToExecute
setRmse:
setHasRmse:
hasRmse
setF1:
setHasF1:
hasF1
setTruePositives:
setHasTruePositives:
hasTruePositives
setTrueNegatives:
setHasTrueNegatives:
hasTrueNegatives
setFalsePositives:
setHasFalsePositives:
hasFalsePositives
setFalseNegatives:
setHasFalseNegatives:
hasFalseNegatives
positiveScoresCount
positiveScores
clearPositiveScores
addPositiveScores:
positiveScoresAtIndex:
setPositiveScores:count:
negativeScoresCount
negativeScores
clearNegativeScores
addNegativeScores:
negativeScoresAtIndex:
setNegativeScores:count:
setSecsToExecute:
setHasSecsToExecute:
hasSecsToExecute
rmse
truePositives
trueNegatives
falsePositives
falseNegatives
secsToExecute
_pflIdentifier
initWithPFLIdentifier:
UTF8String
getPFLIdentifier:
_internalCollectedSessions
_lastTrainingFeaturizations
_collectedSessions
addSessionWithCovariates:source:label:sessionDescriptor:spotlightReference:isInternal:
addSessionWithCovariates:label:sessionDescriptor:spotlightReference:isInternal:
deleteSessionsWithIdentifiers:bundleID:
deleteSessionsWithDomainIdentifiers:bundleID:
deleteSessionsWithBundleID:
trimDb
planReceivedWithPayload:error:
clearCollectedSessions
collectedSessions
_isSymmetric
_matrix
initWithSparseMatrix:
numberOfRows
numberOfColumns
setMatrix:
setIsSymmetric:
valueAtRow:column:
_enumerateSparseRowsWithBlock:
enumerateNonZeroValuesForRow:withBlock:
matrixWithConstantColumn
isSymmetric
matrix
sparseMatrixWithNumberOfRows:numberOfColumns:
sparseMatrixFromNumbers:
trackerForModelName:modelVersion:
trackSessionWithCovariates:label:locale:
trackSessionWithCovariates:label:locale:supervisionType:
_supervisionType
_confidenceScore
setLabel:
setHasLabel:
hasLabel
setSupervisionType:
setHasSupervisionType:
hasSupervisionType
setConfidenceScore:
setHasConfidenceScore:
hasConfidenceScore
supervisionType
confidenceScore
_plan
initWithPlan:
plan
planFromData:withStore:
planFromData:withArgs:
serializePlan:
sparseFloatMatrixFromDenseMatrix:
sparseFloatMatrixFromSparseMatrix:
_support
setSupport:
setHasSupport:
hasSupport
support
_solver
initWithSolver:
solverWithWeights:andIntercept:
solverWithWeights:
solverWithWeights:andIntercept:learningRate:minIterations:stoppingThreshold:
withWeights:
withWeights:andIntercept:
denseVector
initModelRegressorFromFloats:
initWithRegressorFromFloat:
regressorFor:
inverseValues
modelRegressorFromFloat:
modelRegressorFromFloats:
regressorVectorFrom:
_buckets
_normalize
_characterNGramRange
_tokenNGramRange
_shouldNormalizeTokens
_shouldNormalizeCharacters
_localeForNonwordTokens
_tokenizeNewlines
transform:
initWithBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:andIntercept:
initWithBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:withIntercept:
isEqualToHashingVectorizer:
normalize
setNormalize:
localeWithLocaleIdentifier:
localeIdentifier
getCharacters:range:
withBucketSize:andNgrams:
withBucketSize:ngrams:localeForNonwordTokens:tokenizeNewlines:andIntercept:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:withIntercept:
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:withIntercept:
trackPrecisionAtK:
trackPrecisionAtK:minibatchStats:
trackEvaluationMetrics:minibatchStats:
trackWeights:scaleFactor:minibatchStats:evaluationMetrics:
trackGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:
initWithPlanId:
stringValue
_internalTrackedSessions
_trackedSessions
clearTrackedSessions
trackedSessions
_numberOfRows
_numberOfColumns
initWithData:numberOfRows:numberOfColumns:
denseMatrixFromData:numberOfRows:numberOfColumns:
denseMatrixFromNumbers:
_featureVersion
_parseFeatureVersion:descriptor:
subSessionDescriptorForLabel:
baseSessionDescriptor
isSubSessionDescriptor
subSessionLabel
featureVersion
descriptorForName:version:locale:
substringWithRange:
rangeAtIndex:
firstMatchInString:options:range:
numberOfMatchesInString:options:range:
numberOfRanges
firstObject
pattern
matchesInString:options:range:
_itemIdentifiers
_domainIdentifier
_bundleIdentifier
initWithBundleId:domainId:itemIds:
itemIdentifiers
domainIdentifier
bundleIdentifier
referenceWithBundleId:domainId:itemIds:
_fidesStore
_availableSessionsTracker
_multiLabelModels
enumerateAvailableSessionsStatsUsingBlock:
availableSessionsStatsReportedToAWD
initWithStore:fidesStore:availableSessionsTracker:
isMultiLabelModel:
sendSessionStatsToFides
_sendStatsToFidesForModel:sessionCount:positivesCount:support:
_sendStatsToFidesForMultiLabelModel:sessionCount:labeledStats:
_deleteAllSavedRecordsFromFidesStoreSync
deleteAllSavedRecordsWithCompletion:
saveRecordWithData:recordInfo:completion:
unsignedLongValue
second
setWithArray:
sharedSingletonWithDirectory:
initWithBundleIdentifier:
stringByAppendingPathComponent:
quantizedSparseVectorFromSparseVector:numberOfBuckets:
quantizedSparseVectorFromDenseVector:numberOfBuckets:
_quantizationNumberOfBuckets
trackObjectiveFeatures:featureMatrix:minibatchSize:support:
initWithAdapter:modelInfo:quantizationBuckets:
adapter
quantizationNumberOfBuckets
unsignedLongLongValue
messageForGradient:scaleFactor:minibatchStats:evaluationMetrics:serverIteration:modelInfo:numberOfBuckets:
messageForWeights:scaleFactor:minibatchStats:evaluationMetrics:modelInfo:numberOfBuckets:
trackerForPlanId:
awdTrackerForPlanId:
parsecTrackerForPlanId:
initWithStore:tracker:planId:sessionDescriptor:sessionsInBatch:probabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:
_returnValue
_didRun
initWithPlanId:store:version:returningAfterRunning:
initWithPlanId:version:returningAfterRunning:
initWithPlanId:version:
initWithVersion:
initWithPlanId:store:
didRun
setLastDeserializedPlanWithId:toPlan:
lastDeserializedPlanWithId:
clearLastDeserializedPlans
lastDeserializedPlansMap
_backingData
_superdata
setSuperdata:
isEqualToData:
dataChunkType
chunkOfType:data:superdata:
chunksFromFileAtPath:
chunksFromData:
serializeChunks:
initWithContentsOfFile:options:error:
vector
chunkWithVector:count:
_plist
_parsed
plist
propertyListWithData:options:format:error:
chunkWithPlist:
dataWithPropertyList:format:options:error:
chunkWithData:
trackedGradients
trackedWeights
_batchSize
_perLabelSupports
setBatchSize:
setHasBatchSize:
hasBatchSize
clearPerLabelSupports
addPerLabelSupport:
perLabelSupportsCount
perLabelSupportAtIndex:
batchSize
perLabelSupports
setPerLabelSupports:
perLabelSupportType
solverWithProbabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:
withProbabilities:positiveConditionalProbabilities:negativeConditionalProbabilities:
initModelWeightsFromFloats:
asMutableDenseVector
weightsByAppendingWeights:
copy
modelWeightsFromFloats:
modelWeightsOfLength:rng:
modelWeightsOfLength:
modelWeightsOfLength:rngSeed:
zeroWeightsOfLength:
constWeightsOfLength:value:
weightsFromNumbers:
trackedObjectiveFeatures
trackedFeatureMatrices
_evaluation
_linRegFeatureMatrix
_linRegObjectiveFeatures
_logRegGradient
_logRegWeights
hasEvaluation
hasLogRegWeights
hasLogRegGradient
hasLinRegFeatureMatrix
hasLinRegObjectiveFeatures
evaluation
setEvaluation:
logRegWeights
setLogRegWeights:
logRegGradient
setLogRegGradient:
linRegFeatureMatrix
setLinRegFeatureMatrix:
linRegObjectiveFeatures
setLinRegObjectiveFeatures:
hasFeatureMatrix
featureMatrixValueAtRow:column:
_outcomes
_count
initWithCovariates:outcomes:
minibatchStatsForPositiveLabel:
minibatchStatsForPositiveLabels:
outcomes
_trackedMessages
clearAllTrackedMessages
trackedMessagesByClass:
initWithStore:tracker:planId:sessionDescriptor:maxSessionsLimit:sessionsInBatch:currentModelWeights:intercept:skew:threshold:isMultiLabel:positiveLabel:evaluationLevel:
trackerForModelName:modelVersion:modelLocale:
hasObjectiveFeatures
featuresValueAtIndex:
featuresLength
_delegate
_awdServerConnection
initWithAWDConnection:
setAWDMetricQueryDelegate:
reportStatsToAWD
registerQueriableMetric:callback:
initWithComponentId:
_numberOfNonZeroValues
_sparseIndices
_sparseValues
initWithLength:numberOfNonZeroValues:indicesData:valuesData:
initWithLength:numberOfNonZeroValues:indices:values:
indicesData
valuesData
indicesAsUInt16Data
quantizedValuesAsUInt8DataWithMin:max:
maxAbsValue
setSparseValues:
setSparseIndices:
processNonZeroValuesInPlaceWithBlock:
vectorWithConstantColumn
numberOfNonZeroValues
setNumberOfNonZeroValues:
sparseIndices
sparseValues
sparseVectorFromDense:length:
sparseVectorFromDense:
sparseVectorEmptyWithLength:
sparseVectorFromNumbers:
sparseVectorFromNumbers:indices:length:
combineWithStats:
statsWithSize:support:
supportForLabel:
statsWithPerLabelCounts:
_inputLen
_outputLen
_activationType
_dataType
_dataScale
initWithInputLen:outputLen:activationType:dataType:dataScale:weights:
initWithInputLen:outputLen:dataType:values:
modelCount
_createFullyConnectedLayerFilter
_multiplySparseVector:output:
predictWithDenseVector:
batchPredictWithDenseMatrix:
_createActivationFilterWithLength:activationType:
_precision
setK:
setHasK:
hasK
setPrecision:
setHasPrecision:
hasPrecision
precision
_classNameKey
initWithClassNameKey:
writeToPlistWithObject:andChunks:
readObjectWithPlist:chunks:context:
writeToDataWithObject:andChunks:
readObjectWithData:chunks:context:
addEntriesFromDictionary:
_results
_resultsLock
initWithPlanId:numberOfBuckets:
unlock
lock
_iteration
_denseQuantizedGradient
_gradientL2norm
_gradientScaleFactor
_sparseFloatGradient
_sparseQuantizedGradient
hasSparseFloatGradient
setIteration:
setHasIteration:
hasIteration
hasSparseQuantizedGradient
setGradientScaleFactor:
setHasGradientScaleFactor:
hasGradientScaleFactor
setGradientL2norm:
setHasGradientL2norm:
hasGradientL2norm
hasDenseQuantizedGradient
sparseFloatGradient
setSparseFloatGradient:
iteration
sparseQuantizedGradient
setSparseQuantizedGradient:
gradientScaleFactor
gradientL2norm
denseQuantizedGradient
setDenseQuantizedGradient:
@"PMLModelWeights"
@"PMLSparseMatrix"
@"PMLModelRegressor"
@40@0:8@16@24@32
@16@0:8
v32@0:8@16@24
v16@0:8
f24@0:8@16
v24@0:8@16
@"PMLTrainingStoredSessionBatch"
@24@0:8@16
v68@0:8@16d24Q32B40Q44d52@?60
@40@0:8@16@24Q32
@"NSArray"
@"PMLSessionDescriptor"
@"_PASRng"
@24@0:8Q16
@80@0:8@16@24{?=ff}32f40@44Q52B60q64Q72
@56@0:8@16@24Q32Q40Q48
v28@0:8I16@"PBCodable"20
v28@0:8I16@20
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"AWDProactiveModelFittingEvalMetrics"
@"AWDProactiveModelFittingMinibatchStats"
@"AWDProactiveModelFittingModelInfo"
@"NSMutableArray"
{?="timestamp"b1}
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
@"AWDProactiveModelFittingQuantizedDenseVector"
@"AWDProactiveModelFittingSparseFloatVector"
@"AWDProactiveModelFittingQuantizedSparseVector"
{?="timestamp"b1"weightsL2norm"b1"weightsScaleFactor"b1}
v20@0:8f16
f16@0:8
@68@0:8f16Q20f28@32B40@?44@?52@?60
v32@0:8^f16Q24
@"PMLTrainingStore"
@"<PMLMultiLabelRegressionModelProtocol>"
@"<PMLMultiLabelEvaluationTrackerProtocol>"
^{NSString=#}
@"NSDictionary"32@0:8@?<B@?>16^B24
^{NSString=#}16@0:8
@32@0:8@?16^B24
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
@108@0:8^{NSString=#}16@24@32Q40Q48Q56@64@72B80@84@92Q100
{?="timestamp"b1"featuresL2norm"b1"featuresScaleFactor"b1}
{?="list"^I"count"Q"size"Q}
{?="bucketSize"b1"length"b1"minValue"b1}
^I16@0:8
v20@0:8I16
I24@0:8Q16
v32@0:8^I16Q24
I16@0:8
@"NSString"
@40@0:8@16q24q32
q16@0:8
@"<PMLLogRegTrackerProtocol>"
@"<PMLNoiseStrategy>"
@"<PMLTransformerProtocol>"
@176@0:8@16@24@32^{NSString=#}40@48Q56Q64Q72@80f88f92Q96Q104B112d116d124B132B136Q140Q148B156@160@168
@48@0:8@16@24@?32@40
v24@0:8@?16
@48@0:8@16@24@32@40
@"AWDProactiveModelFittingSparseFloatMatrix"
@"AWDProactiveModelFittingQuantizedSparseMatrix"
{?="timestamp"b1"featureMatrixL2norm"b1"featureMatrixScaleFactor"b1}
@24@0:8^{NSString=#}16
@"NSNumber"
@"PMLModelLearningRates"
{?="list"^Q"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="length"b1}
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
^f16@0:8
f24@0:8Q16
{?="s"[2Q]}
@20@0:8f16
@28@0:8f16Q20
@32@0:8d16Q24
d16@0:8
@"_PASSqliteDatabase"
@28@0:8@16B24
v68@0:8@16q24@32@40@48@56B64
v76@0:8@16@24q32@40@48@56@64B72
v64@0:8@16d24@32Q40Q48@?56
@44@0:8@16Q24B32@36
v64@0:8@16@24Q32Q40d48@?56
v84@0:8@16Q24Q32d40Q48B56Q60d68@?76
v52@0:8@16d24Q32B40@?44
v32@0:8@16Q24
v24@0:8d16
v40@0:8@16q24Q32
Q24@0:8@16
q24@0:8@16
v32@0:8@16@?24
@32@0:8@16@24
@24@0:8^Q16
v48@0:8@16@24q32@40
v40@0:8@16q24@32
v52@0:8@16d24d32i40@?44
q32@0:8@16@24
q40@0:8@16@24@32
B44@0:8@16I24@28@36
{?="columnLength"b1"rowLength"b1}
B24@0:8@"PMLSparseVector"16
f24@0:8@"PMLSparseVector"16
@32@0:8r^f16i24B28
@32@0:8@16Q24
@"<PMLLinRegTrackerProtocol>"
@92@0:8@16@24@32^{NSString=#}40Q48d56@64Q72Q80B88
B32@0:8@16@24
B24@0:8^{NSString=#}16
^{NSString=#}24@0:8@16
{?="bucketSize"b1"columnLength"b1"minValue"b1"rowLength"b1}
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@40@0:8@16#24@32
B32@0:8@16^@24
@"PMLModelFullyConnectedLayer"
@"NSArray"24@0:8@"PMLSparseVector"16
@28@0:8@"NSArray"16B24
v20@0:8i16
{?="gaussianScaleFactor"f"laplaceScaleFactor"f}
v24@0:8@"PMLSparseVector"16
v24@0:8@"PMLSparseMatrix"16
B36@0:8@"PMLMutableDenseVector"16B24^f28
B36@0:8@16B24^f28
@48@0:8i16{?=ff}20f28i32q36B44
@44@0:8i16{?=ff}20f28q32B40
{_PMLPreNoiseScaleFactorAndNoiseSampler=@f}28@0:8@16B24
{?=ff}16@0:8
v24@0:8{?=ff}16
v24@0:8q16
@28@0:8f16f20i24
f40@0:8@16@24@?32
Q40@0:8@16@24@?32
v48@0:8@16@24@?32@40
f24@0:8f16i20
@"PMLMutableDenseVector"
f32@0:8Q16Q24
@"PMLTrackerMockAdapter"
@"NSDictionary"
@24@0:8^I16
@"NSMutableData"
r^f16@0:8
@32@0:8r^f16Q24
@36@0:8^f16Q24B32
@40@0:8^f16Q24@?32
@24@0:8i16i20
v32@0:8r^f16Q24
@24@0:8f16f20
@56@0:8f16f20Q24Q32Q40Q48
{?="falseNegatives"b1"falsePositives"b1"trueNegatives"b1"truePositives"b1"f1"b1"rmse"b1"secsToExecute"b1}
@24@0:8r*16
@"NSMutableDictionary"
v60@0:8@"PMLSparseVector"16@"NSData"24q32@"PMLSessionDescriptor"40@"PMLSpotlightReference"48B56
v52@0:8@"PMLSparseVector"16q24@"PMLSessionDescriptor"32@"PMLSpotlightReference"40B48
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"NSString"16
v32@0:8@"PMLSessionDescriptor"16@?<v@?q@"NSData"@?<v@?q@"PMLSparseVector"@"PMLSessionDescriptor">>24
@"_PASTuple2"32@0:8@"NSString"16@"NSString"24
v32@0:8@"PMLSessionDescriptor"16@"NSData"24
@"NSDictionary"32@0:8@"NSData"16^@24
v24@0:8@?<@@?@"NSData">16
v60@0:8@16@24q32@40@48B56
v52@0:8@16q24@32@40B48
@32@0:8@16^@24
^{sparse_m_float=}
@24@0:8^{sparse_m_float=}16
v24@0:8^{sparse_m_float=}16
v32@0:8Q16@?24
^{sparse_m_float=}16@0:8
@32@0:8Q16Q24
v40@0:8@16Q24@32
v48@0:8@16Q24@32Q40
{?="label"b1"supervisionType"b1"timestamp"b1"confidenceScore"b1}
@"<PMLPlanProtocol>"
{?="label"b1"support"b1}
@"PMLGradientSolver"
@44@0:8@16B24f28Q32f40
@"PMLDenseVector"
@20@0:8i16
i16@0:8
{_NSRange="location"Q"length"Q}
@"NSLocale"
@40@0:8i16i20@24B32B36
@76@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56@60B68B72
@64@0:8i16{_NSRange=QQ}20{_NSRange=QQ}36B52B56B60
@"NSDictionary"24@0:8@"NSDictionary"16
@"NSDictionary"32@0:8@"NSDictionary"16@"AWDProactiveModelFittingMinibatchStats"24
@"NSDictionary"32@0:8@"AWDProactiveModelFittingEvalMetrics"16@"AWDProactiveModelFittingMinibatchStats"24
@"NSDictionary"44@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36
@"NSDictionary"52@0:8@"PMLDenseVector"16f24@"AWDProactiveModelFittingMinibatchStats"28@"AWDProactiveModelFittingEvalMetrics"36Q44
@44@0:8@16f24@28@36
@52@0:8@16f24@28@36Q44
@40@0:8@16Q24Q32
f32@0:8@16@24
@"DESRecordStore"
@"PMLAWDAvailableSessionsTracker"
@"NSSet"
v24@0:8@?<v@?@"PMLSessionDescriptor"Qf>16
v44@0:8@16Q24Q32f40
@"<PMLTrackerAdapterProtocol>"
v44@0:8@"PMLSparseVector"16@"PMLSparseMatrix"24Q32f40
v44@0:8@16@24Q32f40
@60@0:8@16f24@28@36@44Q52
@68@0:8@16f24@28@36Q44@52Q60
@"<PMLEvaluationTrackerProtocol>"
@116@0:8@16@24^{NSString=#}32@40Q48@56@64@72d80d88B96Q100Q108
@44@0:8^{NSString=#}16@24Q32B40
@36@0:8^{NSString=#}16Q24B32
@32@0:8^{NSString=#}16Q24
@32@0:8^{NSString=#}16@24
v32@0:8^{NSString=#}16@24
{?="bucketSize"b1"minValue"b1}
@"NSData"
@36@0:8I16@20@28
r^d16@0:8
@28@0:8r^d16i24
@28@0:8r^f16i24
{?="batchSize"b1"support"b1}
@"PMLNaiveBayesSolver"
@28@0:8i16@20
@28@0:8i16Q20
@24@0:8i16f20
@"AWDProactiveModelFittingEvaluation"
@"AWDProactiveModelFittingLinRegFeatureMatrix"
@"AWDProactiveModelFittingLinRegObjectiveFeatures"
@"AWDProactiveModelFittingLogRegGradient"
@"AWDProactiveModelFittingLogRegWeights"
@24@0:8#16
@112@0:8@16@24^{NSString=#}32@40Q48Q56@64B72d76d84B92Q96Q104
@"<PMLAWDMetricQueryDelegate>"
@"AWDServerConnection"
@48@0:8Q16Q24@32@40
@48@0:8Q16Q24^q32^f40
v24@0:8^f16
v24@0:8^q16
^q16@0:8
@28@0:8Q16f24
@52@0:8Q16Q24i32i36f40@44
@44@0:8Q16Q24i32r^f36
^v16@0:8
v32@0:8@16^f24
^v28@0:8Q16i24
{?="k"b1"precision"b1}
@"NSLock"
{?="iteration"b1"timestamp"b1"gradientL2norm"b1"gradientScaleFactor"b1}
