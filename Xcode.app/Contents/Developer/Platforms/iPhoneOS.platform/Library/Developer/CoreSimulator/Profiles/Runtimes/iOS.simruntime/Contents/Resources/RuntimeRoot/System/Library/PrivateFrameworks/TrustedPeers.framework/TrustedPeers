@(#)PROGRAM:TrustedPeers  PROJECT:Security-1
category
prefix
<TPCategoryRule: %@:%@>
TPPB.PeerDynamicInfo
v32@?0@"TPPBDispositionEntry"8Q16^B24
v32@?0@"NSString"8@"TPPBDisposition"16^B24
keyViewMapping
inheritedExcludedViews
priorityViews
piggybackingList
ucvList
unknownRedactions
introducersByCategory
categoriesByView
modelToCategory
version
Passwords
SecureObjectSync
ProtectedCloudStorage
WiFi
CreditCards
Backstop
Applications
full
iProd
<TPPolicy: %@>
fieldName
%@ %@
custodianRecoveryKey
TPModel.m
v32@?0@"NSString"8@"TPPeer"16^B24
peerExpectsHash
policyDocHash
policyVersion
peerID
B24@?0@8@"NSDictionary"16
B24@?0@"NSString"8^B16
Update would result in no trusted peers
No peer for given peerID: %@
voucher must not be nil
candidateCategory
unknown
sponsorCategory
sponsorID
Policy prohibits introducing candidate
unrecognized modelID: %@
(%@)
extra: %lx
self
ignored
ancient
outdated
excluded
partial
none_set
TPPB.PeerPermanentInfo
No peer for given peerID
permanentInfo must not be nil
policyDoc must not be nil
value
clock
com.apple.security.trustedpeers.policy
<TPPolicyDocument: %@>
<TPMachineID: %@ %@ %@>
allowed
disallowed
<TPMachineIDList: %@>
Invalid TPHash algorithm
InvalidTPHashAlgo
%@:%@
SHA512
SHA384
SHA256
SHA224
SHA512:
SHA384:
SHA256:
SHA224:
regex
exists
match
type
UNKNOWN
AND_RULE
OR_RULE
NOT_RULE
MATCH_RULE
FIELD_EXISTS
TRUE_RULE
FALSE_RULE
(unknown: %i)
TPPB.PeerStableInfo
v32@?0@"NSString"8@"NSData"16^B24
peerData
peerIdentifier
TPPB.CustodianRecoveryKey
view
matching_rule
com.apple.security.trustedpeers.peerstatus
policyHash
<TPPolicyVersion: %llu, %@>
dynamicInfo
stableInfo
permanentInfo
TPPB.Voucher
Invalid parameter not satisfying: %@
TPVoucher.m
com.apple.security.trustedpeers
model
classification
Security
AllowiProd
disposition
candidate_epoch
my_epoch
explanation
candidate_category
sponsor_category
sponsor_id
policy_version
disallowedMachineID
duplicateMachineID
unknownMachineID
policyProhibits
ancientEpoch
model_id
machine_id
encryption_pub_key
signing_pub_key
epoch
CKKSMatcherError
No 'not' subrule present
No 'or' subrules present
No 'and' subrules present
No 'match' subrule present
No 'exists' subrule present
Rule type is unknown
Rule has no type
Rule missing field name
preapprovals
dispositions
included
secret
name
kind
RECOVERY_KEY
INHERITANCE_KEY
encryption_public_key
signing_public_key
uuid
isInheritedAccount
walrus
secureElementIdentity
custodian_recovery_keys
user_controllable_view_status
DISABLED
ENABLED
FOLLOWING
policy_secrets
flexible_policy_hash
flexible_policy_version
serial_number
recovery_encryption_public_key
recovery_signing_public_key
device_name
os_version
frozen_policy_hash
frozen_policy_version
viewsToPiggybackTLKs
ucvShouldSync
userControllableViews
viewList
<TPSyncingPolicy: %@, %@, userViews: %@>
sponsor
beneficiary
reason
RESTORE
SAME_DEVICE
SOS_UPGRADE
SECURE_CHANNEL
inherited_excluded_views
priority_views
piggyback_views
user_controllable_views
redactions
categories
introducers
v8@?0
TPStringTable.defaultTable
Peer %@ trusts the following unknown peer IDs: %@
Peer %@ trusts the following peer ID, but we don't recognize the hash: %@
registerCustodianRecoveryKey %{public}@ -- size now %lu
Recovery Keys changed! currently set signingKey: %@, currently set encryptionKey: %@, new signingKey: %@, new encryption Key: %@
isRecoveryKeyEnrolled: returning 2 %d
isRecoveryKeyEnrolled: sign %{public}@, enc %{public}@, count = %lu
isRecoveryKeyEnrolled: returning 1 %d
Peer %@ supports this Custodian RK, but cannot sponsor peer %@: %@
Peer %@ supports this recovery key, but cannot sponsor peer %@: %@
From our sponsor (%{public}@), included: %{public}@ excluded: %{public}@
Trusting %{public}@ due to preapproval
Not including %{public}@ even through they are preapproved
Unable to create initial dynamic info for peer: %{public}@
Peer (%{public}@) has an unknown machine ID (%{public}@)
Peer (%{public}@) has an unknown machine ID (%{public}@), but leaving disposition as 'disallowed'
Peer (%{public}@) has a disallowed machine ID (%{public}@)
Calculating dynamic info for peer %{public}@ with peer set %{public}@
Adding peer IDs: %{public}@
Removing peer IDs: %{public}@
Peer (%{public}@) excludes itself
Initial sets: included:%{public}@ excluded:%{public}@
No peer: %{public}@
After removals: included:%{public}@ excluded:%{public}@
Beginning sponsor checking; machine ID list: %{public}@
After sponsor checking: included:%{public}@ excluded:%{public}@
After voucher checking: included:%{public}@ excluded:%{public}@
Preapproved keys: %{public}@
New preapproval list: %{public}@
Using existing preapproval list: %{public}@
Final preapproval list: %{public}@
After preapproval checking: included:%{public}@ excluded:%{public}@
Remote peers with the ego machine ID: %{public}@
No local machine ID; not filtering peers
After machine ID checking: included:%{public}@ excluded:%{public}@
Peer (%{public}@) unknown, distrusting by default
Peer (%{public}@) is using an unknown policy version (%llu, %@), not distrusting unknown peers (error: %@)
Peer distrusts self
Update would result in zero trusted peers; failing
Analysis didn't actually change anything, returning old dynamicInfo
After exclusion filtering: included:%{public}@ excluded:%{public}@
Returning new dynamicinfo: %{public}@
Peer %{public}@ preapproved
No peer for ID %{public}@
Including information from sponsor (%{public}@): included: %{public}@ excluded: %{public}@
Sponsor %{public}@ preapproves peer %{public}@
Inspecting voucher claiming to be from sponsor: %{public}@
voucher: peer (%{public}@) already excluded
voucher: no peer for id %{public}@
voucher: unknown machineID %{public}@ %{public}@
voucher: disallowed machineID %{public}@ %{public}@
voucher: failed to fetch policy: %{public}@
voucher: %{public}@ presented valid voucher from %{public}@
voucher: voucher has failed signature checking: %@
can't update dynamic info for peerID %{public}@: peer does not exist
peer(%{public}@) dynamic info is now: %{public}@
failed to update dynamic info for peerID %{public}@: %{public}@
can't update stable info for peerID %{public}@: peer does not exist
peer(%{public}@) stable info is now: %{public}@
failed to update stable info for peerID %{public}@: %{public}@
Peer %@ has disabled user view syncing
Peer %@ has enabled user view syncing
status: peerID %{public}@ has no included peer IDs?
status: peerID %{public}@ trusts itself
status: peerID %{public}@ has no peer in model
status: peer %{public}@ trusts %{public}@
status: peer %{public}@ doesn't trust %{public}@
status: peer %{public}@ excludes %{public}@
status: peer %{public}@ outdates %{public}@
status: peer %{public}@ far outdates %{public}@
status: peer %{public}@ excludes itself
status: peer %{public}@ trust status is: %{public}@
registering peer %{public}@: %{public}@
Error matching with rule %@: %@
TPCategoryRule
NSSecureCoding
NSCoding
TPPeerDynamicInfo
TPPolicy
TPPBDictionaryMatchingRuleFieldExists
NSCopying
TPModel
TPPBPeerStableInfoSetting
TPPolicyDocument
TPMachineID
TPMachineIDList
TPHashBuilder
TPPBDictionaryMatchingRuleFieldRegexMatch
TPPBDictionaryMatchingRule
TPPeerStableInfo
TPPBSecureElementIdentity
TPCustodianRecoveryKey
NSObject
TPPublicKeyFactory
TPECPublicKeyFactory
TPPeerPermanentInfo
TPPBPolicyKeyViewMapping
TPRecoveryKeyPair
TPCachedViableBottles
TPPolicyVersion
TPPublicKey
TPKeyPair
TPPeer
TPPBDispositionDuplicateMachineID
UsefulConstructors
TPVoucher
TPPBDispositionEntry
TPPBDispositionDisallowedMachineID
TPPBAncientEpoch
TPPBPolicyProhibits
TPPBUnknownMachineID
TPPBDisposition
TPPBPeerPermanentInfo
TPDictionaryMatchingRule
TPPBDictionaryMatchingRules
TPPBPeerDynamicInfo
TPPBPolicySecret
TPPBCustodianRecoveryKey
TPPBPeerStableInfoX
TPSyncingPolicy
TPPBVoucher
TPPBPolicyDocument
TPPBPolicyCategoriesByView
TPPBPolicyIntroducersByCategory
TPStringTable
Testing
TPPBPolicyModelToCategory
TPPBPolicyRedaction
SimpleConstructor
T@"NSString",C,N,V_prefix
T@"NSString",C,N,V_category
_prefix
_category
TB,R
supportsSecureCoding
encodeWithCoder:
initWithCoder:
isEqualToCategoryRule:
isEqual:
hash
description
prefix
setPrefix:
category
setCategory:
.cxx_destruct
decodeObjectOfClass:forKey:
encodeObject:forKey:
stringWithFormat:
isEqualToString:
ruleWithPrefix:category:
TQ,R,N,V_clock
T@"NSSet",R,N,V_includedPeerIDs
T@"NSSet",R,N,V_excludedPeerIDs
T@"NSDictionary",R,N
T@"NSSet",R,N,V_preapprovals
T@"NSData",R,N,V_data
T@"NSData",R,N,V_sig
_clock
_includedPeerIDs
_excludedPeerIDs
_preapprovals
_data
_sig
initWithObj:data:sig:
dispositions
copyWithZone:
checkSignatureWithKey:
isEqualToPeerDynamicInfo:
dictionaryRepresentation
clock
includedPeerIDs
excludedPeerIDs
preapprovals
data
initWithData:
isEqualToData:
dynamicInfoPBWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:
enumerateObjectsUsingBlock:
setObject:forKeyedSubscript:
dynamicInfoWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
dynamicInfoWithData:sig:
enumerateKeysAndObjectsUsingBlock:
addObject:
mutableCopy
allObjects
T@"TPPolicyVersion",&,N,V_version
T@"NSArray",&,N,V_modelToCategory
T@"NSDictionary",&,N,V_categoriesByView
T@"NSDictionary",&,N,V_introducersByCategory
T@"NSArray",&,N,V_keyViewMapping
T@"NSSet",&,N,V_userControllableViewList
T@"NSSet",&,N,V_piggybackViews
T@"NSSet",&,N,V_priorityViews
T@"NSSet",&,N,V_inheritedExcludedViews
TB,V_unknownRedactions
_unknownRedactions
_version
_modelToCategory
_categoriesByView
_introducersByCategory
_keyViewMapping
_userControllableViewList
_piggybackViews
_priorityViews
_inheritedExcludedViews
categoryForModel:
trustedPeerInCategory:canIntroduceCategory:
peerInCategory:canAccessView:
syncingPolicyForModel:syncUserControllableViews:isInheritedAccount:error:
viewsForModel:error:
isEqualToPolicy:
version
setVersion:
modelToCategory
setModelToCategory:
categoriesByView
setCategoriesByView:
introducersByCategory
setIntroducersByCategory:
keyViewMapping
setKeyViewMapping:
userControllableViewList
setUserControllableViewList:
piggybackViews
setPiggybackViews:
priorityViews
setPriorityViews:
inheritedExcludedViews
setInheritedExcludedViews:
unknownRedactions
setUnknownRedactions:
isEqualToSet:
isEqualToDictionary:
decodeBoolForKey:
decodeObjectOfClasses:forKey:
arrayWithObjects:count:
encodeBool:forKey:
containsObject:
objectForKeyedSubscript:
countByEnumeratingWithState:objects:count:
errorWithDomain:code:userInfo:
dictionaryWithObjects:forKeys:count:
count
hasPrefix:
policyWithModelToCategory:categoriesByView:introducersByCategory:keyViewMapping:unknownRedactions:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:version:
TB,R,N
T@"NSString",&,N,V_fieldName
_fieldName
hasFieldName
readFrom:
writeTo:
copyTo:
mergeFrom:
fieldName
setFieldName:
allocWithZone:
setObject:forKey:
dictionary
T@"NSMutableDictionary",&,N,V_peersByID
T@"NSMutableDictionary",&,N,V_policiesByVersion
T@"NSMutableSet",&,N,V_uncheckedVouchers
T@"NSMutableSet",&,N,V_vouchers
T@"<TPDecrypter>",&,N,V_decrypter
T@"NSData",&,N,V_recoverySigningPubKey
T@"NSData",&,N,V_recoveryEncryptionPubKey
T@"NSMutableDictionary",&,N,V_custodianRecoveryKeys
_peersByID
_policiesByVersion
_uncheckedVouchers
_vouchers
_decrypter
_recoverySigningPubKey
_recoveryEncryptionPubKey
_custodianRecoveryKeys
initWithDecrypter:
latestEpochAmongPeerIDs:
registerPolicyDocument:
policyWithVersion:
allPeerIDs
allPeers
allVouchers
allPolicyVersions
allRegisteredPolicyVersions
registerPeerWithPermanentInfo:
deletePeerWithID:
hasPeerWithID:
peerWithID:
custodianPeerWithID:
actualPeerWithID:error:
allMachineIDs
viablePeerCountsByModelID
peerCountsByMachineID
hasPotentiallyTrustedPeerPreapprovingKey:
hasPotentiallyTrustedPeerWithSigningKey:
validatePeerWithPreApproval:sponsor:
statusOfPeerWithID:
getStableInfoForPeerWithID:
getDynamicInfoForPeerWithID:
userViewSyncabilityConsensusAmongTrustedPeers:
updateStableInfo:forPeerWithID:error:
createStableInfoWithFrozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
updateDynamicInfo:forPeerWithID:error:
maxClock
createDynamicInfoWithIncludedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
canTrustCandidate:inEpoch:
canIntroduceCandidate:withSponsor:toEpoch:underPolicy:disposition:
checkIntroductionForCandidate:stableInfo:withSponsorID:error:
createVoucherForCandidate:stableInfo:withSponsorID:reason:signingKeyPair:error:
verifyVoucherSignature:
validateVoucherForPeer:sponsor:
registerVoucher:
checkVouchers
considerCandidateID:withSponsorID:sponsorPermanentInfo:toExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
considerVouchersSponsoredByPeerID:sponsorPermanentInfo:toRecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
considerPreapprovalsSponsoredByPeer:toRecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
recursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:withPeersTrustedBySponsorID:currentMachineIDs:forEpoch:
calculateDynamicInfoForPeerWithID:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
calculateDynamicInfoFromModel:peer:peerPermanentInfo:peerStableInfo:startingDynamicInfo:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
filterPeerList:byMachineIDs:dispositions:
peersWithMachineID:
filterPreapprovals:forExistingPeers:
dynamicInfoForJoiningPeerID:peerPermanentInfo:peerStableInfo:sponsorID:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
policyForPeerIDs:candidatePeerID:candidateStableInfo:error:
considerPolicyFromPeerID:stableInfo:secrets:newestPolicyDoc:error:
getViewsForPeer:stableInfo:error:
getViewsForCRK:donorPermanentInfo:donorStableInfo:error:
getPeerIDsTrustedByPeerWithID:toAccessView:error:
getPeerIDsTrustedByPeerWithDynamicInfo:toAccessView:error:
vectorClock
bestRecoveryKeyForStableInfo:dynamicInfo:
bestWalrusForStableInfo:dynamicInfo:walrusStableChanges:
bestWalrusAcrossTrustedPeers
untrustedPeerIDs
peerIDThatTrustsRecoveryKeys:canIntroducePeer:stableInfo:
peerIDThatTrustsCustodianRecoveryKeys:canIntroducePeer:stableInfo:
isRecoveryKeyEnrolled
isCustodianRecoveryKeyEnrolled:
setRecoveryKeys:
recoverySigningPublicKey
recoveryEncryptionPublicKey
registerCustodianRecoveryKey:
removeCustodianRecoveryKey:
findCustodianRecoveryKeyWithUUID:
allCustodianRecoveryKeys
currentStatePossiblyMissingData
peersByID
setPeersByID:
policiesByVersion
setPoliciesByVersion:
uncheckedVouchers
setUncheckedVouchers:
vouchers
setVouchers:
decrypter
setDecrypter:
recoverySigningPubKey
setRecoverySigningPubKey:
recoveryEncryptionPubKey
setRecoveryEncryptionPubKey:
custodianRecoveryKeys
setCustodianRecoveryKeys:
minusSet:
isSubsetOfSet:
allKeys
addObjectsFromArray:
copy
allValues
removeObjectForKey:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
unionSet:
length
numberWithUnsignedLongLong:
setWithObject:
preapprovalsFromKeys:
filteredArrayUsingPredicate:
predicateWithBlock:
removeObject:
objectsPassingTest:
setByAddingObjectsFromSet:
dictionaryWithDictionary:
setWithSet:
componentsJoinedByString:
sortedArrayUsingSelector:
compare:
numberWithLong:
longValue
objectForKey:
setWithCapacity:
TB,N
TQ,N,V_clock
TB,N,V_value
_value
_has
setClock:
setHasClock:
hasClock
setValue:
setHasValue:
hasValue
value
numberWithBool:
T@"NSArray",R
T@"TPPolicyVersion",R,N,V_version
T@"NSData",R,N,V_protobuf
_protobuf
initWithHash:data:
initWithVersion:modelToCategory:categoriesByView:introducersByCategory:redactions:keyViewMapping:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:hashAlgo:
encodeProtobuf
policyWithSecrets:decrypter:error:
isEqualToPolicyDocument:
cloneWithVersionNumber:
cloneWithVersionNumber:prependingCategoriesByView:prependingKeyViewMapping:
protobuf
arrayByAddingObjectsFromArray:
array
introducersByCategoryFromPb:
categoriesByViewFromPb:
modelToCategoryFromPb:
decryptData:withKey:error:
redactionsFromPb:
addRedactions:toPB:
addModelToCategory:toPB:
addCategoriesByView:toPB:
addIntroducersByCategory:toPB:
addKeyViewMapping:toPB:
policyDocWithHash:data:
redactionWithEncrypter:modelToCategory:categoriesByView:introducersByCategory:keyViewMapping:error:
isEqualKeyViewMapping:other:
encryptData:error:
sortedArrayUsingDescriptors:
sortDescriptorWithKey:ascending:
dictionaryWithCapacity:
arrayWithCapacity:
T@"NSString",R,V_machineID
TQ,R,V_status
T@"NSDate",R,V_modified
_machineID
_status
_modified
initWithMachineID:status:modified:
machineID
status
modified
T@"NSArray",R,V_entries
_entries
initWithEntries:
entryFor:
machineIDsInStatus:
entries
Tq,N,V_algo
T{CC_SHA256state_st=[2I][8I][16I]},N,V_ctxSHA256
T{CC_SHA512state_st=[2Q][8Q][16Q]},N,V_ctxSHA512
_algo
_ctxSHA256
_ctxSHA512
init
initWithAlgo:
resetWithAlgo:
updateWithData:
updateWithBytes:len:
finalHash
throwInvalidAlgo
algo
setAlgo:
ctxSHA256
setCtxSHA256:
ctxSHA512
setCtxSHA512:
exceptionWithName:reason:userInfo:
base64EncodedStringWithOptions:
mutableBytes
initWithLength:
bytes
algoOfHash:
hashWithAlgo:ofData:
hashWithAlgo:ofBytes:len:
T@"NSString",&,N,V_regex
_regex
hasRegex
regex
setRegex:
Ti,N,V_type
T@"NSMutableArray",&,N,V_ands
T@"NSMutableArray",&,N,V_ors
T@"TPPBDictionaryMatchingRule",&,N,V_not
T@"TPPBDictionaryMatchingRuleFieldRegexMatch",&,N,V_match
T@"TPPBDictionaryMatchingRuleFieldExists",&,N,V_exists
_ands
_exists
_match
_not
_ors
_type
type
setType:
setHasType:
hasType
typeAsString:
StringAsType:
clearAnds
addAnd:
andsCount
andAtIndex:
clearOrs
addOr:
orsCount
orAtIndex:
hasNot
hasMatch
hasExists
ands
setAnds:
setOrs:
setNot:
match
setMatch:
exists
setExists:
initWithCapacity:
objectAtIndex:
removeAllObjects
andType
orType
T@"TPPolicyVersion",R,V_frozenPolicyVersion
T@"TPPolicyVersion",R,V_flexiblePolicyVersion
T@"NSDictionary",R,N,V_policySecrets
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_serialNumber
T@"NSString",R,N,V_osVersion
T@"NSData",R,N,V_recoverySigningPublicKey
T@"NSData",R,N,V_recoveryEncryptionPublicKey
Ti,R,N,V_syncUserControllableViews
T@"TPPBSecureElementIdentity",R,N,V_secureElementIdentity
T@"TPPBPeerStableInfoSetting",R,N,V_walrusSetting
TB,N,V_isInheritedAccount
_isInheritedAccount
_syncUserControllableViews
_frozenPolicyVersion
_flexiblePolicyVersion
_policySecrets
_deviceName
_serialNumber
_osVersion
_recoverySigningPublicKey
_recoveryEncryptionPublicKey
_secureElementIdentity
_walrusSetting
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:deviceName:serialNumber:osVersion:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:data:sig:
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
initWithData:sig:
isEqualToPeerStableInfo:
bestPolicyVersion
frozenPolicyVersion
flexiblePolicyVersion
policySecrets
deviceName
serialNumber
osVersion
syncUserControllableViews
secureElementIdentity
walrusSetting
isInheritedAccount
setIsInheritedAccount:
pbToNullable
T@"NSData",&,N,V_peerIdentifier
T@"NSData",&,N,V_peerData
_peerData
_peerIdentifier
hasPeerIdentifier
hasPeerData
peerIdentifier
setPeerIdentifier:
peerData
setPeerData:
T@"NSUUID",&,N,V_uuid
T@"NSString",&,N,V_peerID
T@"<TPPublicKey>",&,N,V_signingPublicKey
T@"<TPPublicKey>",&,N,V_encryptionPublicKey
Ti,N,V_kind
_kind
_uuid
_peerID
_signingPublicKey
_encryptionPublicKey
initWithUUID:signingPublicKey:encryptionPublicKey:kind:data:sig:peerID:
initWithUUID:signingPublicKey:encryptionPublicKey:signingKeyPair:kind:error:
uuid
setUuid:
peerID
setPeerID:
signingPublicKey
setSigningPublicKey:
encryptionPublicKey
setEncryptionPublicKey:
kind
setKind:
addEntriesFromDictionary:
peerIDForData:sig:peerIDHashAlgo:
UUIDString
custodianRecoveryKeyWithData:sig:keyFactory:
initWithUUIDString:
TQ,R
T#,R
T@"NSString",R,C
debugDescription
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
keyFromSPKI:
keyWithSubjectPublicKeyInfo:
T@"NSString",R,N,V_machineID
T@"NSString",R,N,V_modelID
TQ,R,N,V_epoch
T@"<TPPublicKey>",R,N,V_signingPubKey
T@"<TPPublicKey>",R,N,V_encryptionPubKey
T@"NSString",R,N,V_peerID
_modelID
_epoch
_signingPubKey
_encryptionPubKey
initWithMachineID:modelID:epoch:signingPubKey:encryptionPubKey:data:sig:peerID:
modelID
epoch
signingPubKey
encryptionPubKey
permanentInfoWithMachineID:modelID:epoch:signingKeyPair:encryptionKeyPair:peerIDHashAlgo:error:
permanentInfoWithPeerID:data:sig:keyFactory:
T@"TPPBDictionaryMatchingRule",&,N,V_matchingRule
T@"NSString",&,N,V_view
_matchingRule
_view
hasMatchingRule
hasView
matchingRule
setMatchingRule:
view
setView:
T@"NSData",R,&,V_signingKeyData
T@"NSData",R,&,V_encryptionKeyData
_signingKeyData
_encryptionKeyData
initWithSigningKeyData:encryptionKeyData:
initWithStableInfo:
signingKeyData
encryptionKeyData
T@"NSArray",R,&,V_viableBottles
T@"NSArray",R,&,V_partialBottles
_viableBottles
_partialBottles
initWithViableBottles:partialBottles:
viableBottles
partialBottles
TQ,R,V_versionNumber
T@"NSString",R,&,V_policyHash
_versionNumber
_policyHash
initWithVersion:hash:
versionNumber
policyHash
decodeInt64ForKey:
encodeInt64:forKey:
spki
checkSignature:matchesData:
publicKey
signatureForData:withError:
encodeSubjectPublicKeyInfo
initWithData:signature:
verify:withKey:error:
sign:withKey:error:
signature
initWithCurve:
initWithKeySpecifier:digestOperation:
T@"NSString",R,N
T@"TPPeerPermanentInfo",R,N,V_permanentInfo
T@"TPPeerStableInfo",R,N,V_stableInfo
T@"TPPeerDynamicInfo",R,N,V_dynamicInfo
T@"NSSet",R,N
_permanentInfo
_stableInfo
_dynamicInfo
initWithPermanentInfo:
initWithPermanentInfo:stableInfo:dynamicInfo:
peerWithUpdatedStableInfo:error:
peerWithUpdatedDynamicInfo:error:
trustedPeerIDs
permanentInfo
stableInfo
dynamicInfo
errorWithDomain:code:description:underlying:
errorWithDomain:code:description:
TQ,N,V_reason
T@"NSString",&,N,V_beneficiaryID
T@"NSString",&,N,V_sponsorID
T@"NSData",&,N,V_data
T@"NSData",&,N,V_sig
_reason
_beneficiaryID
_sponsorID
createRecoveryECPublicKey:
isEqualToVoucher:
reason
setReason:
beneficiaryID
setBeneficiaryID:
sponsorID
setSponsorID:
setData:
setSig:
initWithData:specifier:error:
voucherWithReason:beneficiaryID:sponsorID:signingKeyPair:error:
voucherInfoWithData:sig:
dataUsingEncoding:
appendData:
T@"TPPBDisposition",&,N,V_disposition
_disposition
hasPeerID
hasDisposition
disposition
setDisposition:
TQ,N,V_myEpoch
TQ,N,V_candidateEpoch
_candidateEpoch
_myEpoch
setMyEpoch:
setHasMyEpoch:
hasMyEpoch
setCandidateEpoch:
setHasCandidateEpoch:
hasCandidateEpoch
myEpoch
candidateEpoch
TQ,N,V_policyVersion
T@"NSString",&,N,V_sponsorId
T@"NSString",&,N,V_sponsorCategory
T@"NSString",&,N,V_candidateCategory
T@"NSString",&,N,V_explanation
_policyVersion
_candidateCategory
_explanation
_sponsorCategory
_sponsorId
setPolicyVersion:
setHasPolicyVersion:
hasPolicyVersion
hasSponsorId
hasSponsorCategory
hasCandidateCategory
hasExplanation
policyVersion
sponsorId
setSponsorId:
sponsorCategory
setSponsorCategory:
candidateCategory
setCandidateCategory:
explanation
setExplanation:
T@"TPPBAncientEpoch",&,N,V_ancientEpoch
T@"TPPBPolicyProhibits",&,N,V_policyProhibits
T@"TPPBUnknownMachineID",&,N,V_unknownMachineID
T@"TPPBDispositionDuplicateMachineID",&,N,V_duplicateMachineID
T@"TPPBDispositionDisallowedMachineID",&,N,V_disallowedMachineID
_ancientEpoch
_disallowedMachineID
_duplicateMachineID
_policyProhibits
_unknownMachineID
hasAncientEpoch
hasPolicyProhibits
hasUnknownMachineID
hasDuplicateMachineID
hasDisallowedMachineID
ancientEpoch
setAncientEpoch:
policyProhibits
setPolicyProhibits:
unknownMachineID
setUnknownMachineID:
duplicateMachineID
setDuplicateMachineID:
disallowedMachineID
setDisallowedMachineID:
TQ,N,V_epoch
T@"NSData",&,N,V_signingPubKey
T@"NSData",&,N,V_encryptionPubKey
T@"NSString",&,N,V_machineId
T@"NSString",&,N,V_modelId
_machineId
_modelId
setEpoch:
setHasEpoch:
hasEpoch
hasSigningPubKey
hasEncryptionPubKey
hasMachineId
hasModelId
setSigningPubKey:
setEncryptionPubKey:
machineId
setMachineId:
modelId
setModelId:
fieldExists:
fieldMatch:fieldRegex:
notMatch:
andMatch:
orMatch:
trueMatch
falseMatch
numberOfMatchesInString:options:range:
matches:error:
performOrMatch:error:
performAndMatch:error:
invertMatch:error:
initWithPattern:options:error:
T@"NSMutableArray",&,N,V_includeds
T@"NSMutableArray",&,N,V_excludeds
T@"NSMutableArray",&,N,V_dispositions
T@"NSMutableArray",&,N,V_preapprovals
_dispositions
_excludeds
_includeds
clearIncludeds
addIncluded:
includedsCount
includedAtIndex:
clearExcludeds
addExcluded:
excludedsCount
excludedAtIndex:
clearDispositions
addDispositions:
dispositionsCount
dispositionsAtIndex:
clearPreapprovals
addPreapprovals:
preapprovalsCount
preapprovalsAtIndex:
includeds
setIncludeds:
excludeds
setExcludeds:
setDispositions:
setPreapprovals:
includedType
excludedType
dispositionsType
preapprovalsType
T@"NSString",&,N,V_name
T@"NSData",&,N,V_secret
_name
_secret
hasName
hasSecret
name
setName:
secret
setSecret:
T@"NSString",&,N,V_uuid
T@"NSData",&,N,V_signingPublicKey
T@"NSData",&,N,V_encryptionPublicKey
hasUuid
hasSigningPublicKey
hasEncryptionPublicKey
setHasKind:
hasKind
kindAsString:
StringAsKind:
TQ,N,V_frozenPolicyVersion
T@"NSString",&,N,V_frozenPolicyHash
T@"NSString",&,N,V_osVersion
T@"NSString",&,N,V_deviceName
T@"NSData",&,N,V_recoverySigningPublicKey
T@"NSData",&,N,V_recoveryEncryptionPublicKey
T@"NSString",&,N,V_serialNumber
TQ,N,V_flexiblePolicyVersion
T@"NSString",&,N,V_flexiblePolicyHash
T@"NSMutableArray",&,N,V_policySecrets
Ti,N,V_userControllableViewStatus
T@"NSMutableArray",&,N,V_custodianRecoveryKeys
T@"TPPBSecureElementIdentity",&,N,V_secureElementIdentity
T@"TPPBPeerStableInfoSetting",&,N,V_walrus
_flexiblePolicyHash
_frozenPolicyHash
_userControllableViewStatus
_walrus
setFrozenPolicyVersion:
setHasFrozenPolicyVersion:
hasFrozenPolicyVersion
hasFrozenPolicyHash
hasOsVersion
hasDeviceName
hasRecoverySigningPublicKey
hasRecoveryEncryptionPublicKey
hasSerialNumber
setFlexiblePolicyVersion:
setHasFlexiblePolicyVersion:
hasFlexiblePolicyVersion
hasFlexiblePolicyHash
clearPolicySecrets
addPolicySecrets:
policySecretsCount
policySecretsAtIndex:
userControllableViewStatus
setUserControllableViewStatus:
setHasUserControllableViewStatus:
hasUserControllableViewStatus
userControllableViewStatusAsString:
StringAsUserControllableViewStatus:
clearCustodianRecoveryKeys
addCustodianRecoveryKeys:
custodianRecoveryKeysCount
custodianRecoveryKeysAtIndex:
hasSecureElementIdentity
hasWalrus
setHasIsInheritedAccount:
hasIsInheritedAccount
frozenPolicyHash
setFrozenPolicyHash:
setOsVersion:
setDeviceName:
setRecoverySigningPublicKey:
setRecoveryEncryptionPublicKey:
setSerialNumber:
flexiblePolicyHash
setFlexiblePolicyHash:
setPolicySecrets:
setSecureElementIdentity:
walrus
setWalrus:
policySecretsType
custodianRecoveryKeysType
T@"NSString",R,V_model
T@"TPPolicyVersion",R,V_version
T@"NSArray",R,V_keyViewMapping
T@"NSSet",R,V_viewList
T@"NSSet",R,V_priorityViews
T@"NSSet",R,V_viewsToPiggybackTLKs
T@"NSSet",R,V_userControllableViews
TB,V_isInheritedAccount
Ti,R,V_syncUserControllableViews
_model
_viewList
_viewsToPiggybackTLKs
_userControllableViews
initWithModel:version:viewList:priorityViews:userControllableViews:syncUserControllableViews:viewsToPiggybackTLKs:keyViewMapping:isInheritedAccount:
mapDictionaryToView:
syncUserControllableViewsAsBoolean
isSyncingEnabledForView:
model
viewList
viewsToPiggybackTLKs
userControllableViews
Ti,N,V_reason
T@"NSString",&,N,V_beneficiary
T@"NSString",&,N,V_sponsor
_beneficiary
_sponsor
setHasReason:
hasReason
reasonAsString:
StringAsReason:
hasBeneficiary
hasSponsor
beneficiary
setBeneficiary:
sponsor
setSponsor:
T@"NSMutableArray",&,N,V_modelToCategorys
T@"NSMutableArray",&,N,V_categoriesByViews
T@"NSMutableArray",&,N,V_introducersByCategorys
T@"NSMutableArray",&,N,V_redactions
T@"NSMutableArray",&,N,V_keyViewMappings
T@"NSMutableArray",&,N,V_userControllableViews
T@"NSMutableArray",&,N,V_piggybackViews
T@"NSMutableArray",&,N,V_priorityViews
T@"NSMutableArray",&,N,V_inheritedExcludedViews
_categoriesByViews
_introducersByCategorys
_keyViewMappings
_modelToCategorys
_redactions
clearModelToCategorys
addModelToCategory:
modelToCategorysCount
modelToCategoryAtIndex:
clearCategoriesByViews
addCategoriesByView:
categoriesByViewsCount
categoriesByViewAtIndex:
clearIntroducersByCategorys
addIntroducersByCategory:
introducersByCategorysCount
introducersByCategoryAtIndex:
clearRedactions
addRedactions:
redactionsCount
redactionsAtIndex:
clearKeyViewMappings
addKeyViewMapping:
keyViewMappingsCount
keyViewMappingAtIndex:
clearUserControllableViews
addUserControllableViews:
userControllableViewsCount
userControllableViewsAtIndex:
clearPiggybackViews
addPiggybackViews:
piggybackViewsCount
piggybackViewsAtIndex:
clearPriorityViews
addPriorityViews:
priorityViewsCount
priorityViewsAtIndex:
clearInheritedExcludedViews
addInheritedExcludedViews:
inheritedExcludedViewsCount
inheritedExcludedViewsAtIndex:
modelToCategorys
setModelToCategorys:
categoriesByViews
setCategoriesByViews:
introducersByCategorys
setIntroducersByCategorys:
redactions
setRedactions:
keyViewMappings
setKeyViewMappings:
setUserControllableViews:
modelToCategoryType
categoriesByViewType
introducersByCategoryType
redactionsType
keyViewMappingType
userControllableViewsType
piggybackViewsType
priorityViewsType
inheritedExcludedViewsType
T@"NSMutableArray",&,N,V_categories
_categories
clearCategories
addCategories:
categoriesCount
categoriesAtIndex:
categories
setCategories:
categoriesType
T@"NSString",&,N,V_category
T@"NSMutableArray",&,N,V_introducers
_introducers
hasCategory
clearIntroducers
addIntroducers:
introducersCount
introducersAtIndex:
introducers
setIntroducers:
introducersType
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSHashTable",&,V_table
_queue
_table
initWithIdentifier:
stringWithString:
setWithArray:
queue
setQueue:
table
setTable:
initWithObjects:count:
objectAtIndexedSubscript:
member:
initWithOptions:capacity:
UTF8String
defaultTable
_count
T@"NSString",&,N,V_prefix
hasPrefix
T@"NSString",&,N,V_key
T@"NSData",&,N,V_value
_key
hasKey
setKey:
TPPBPolicyIntroducersByCategoryWithCategory:introducers:
TPPBPolicyModelToCategoryWithPrefix:category:
TPPBPolicyKeyViewMappingWithView:matchingRule:
TPPBPolicyCategoriesByViewWithView:categories:
@"NSString"
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@16
@24@0:8@16
B24@0:8@16
Q16@0:8
@16@0:8
v16@0:8
@32@0:8@16@24
@"NSSet"
@"NSData"
@40@0:8@16@24@32
@24@0:8^{_NSZone=}16
@56@0:8Q16@24@32@40@48
@72@0:8Q16@24@32@40@48@56^@64
@"TPPolicyVersion"
@"NSArray"
@"NSDictionary"
B32@0:8@16@24
@40@0:8@16i24B28^@32
@32@0:8@16^@24
v20@0:8B16
@92@0:8@16@24@32@40B48@52@60@68@76@84
@"NSMutableDictionary"
@"NSMutableSet"
@"<TPDecrypter>"
Q24@0:8@16
@24@0:8Q16
i24@0:8@16
B40@0:8@16@24^@32
@120@0:8@16@24@32i40@44@52@60@68@76@84@92@100B108^@112
@64@0:8@16@24@32@40@48^@56
B32@0:8@16Q24
B56@0:8@16@24Q32@40@48
B48@0:8@16@24@32^@40
@64@0:8@16@24@32Q40@48^@56
@80@0:8@16@24@32@40@48@56@64Q72
v72@0:8@16@24@32@40@48@56Q64
v64@0:8@16@24@32@40@48Q56
@72@0:8@16@24@32@40@48@56^@64
@104@0:8@16@24@32@40@48@56@64@72@80@88^@96
v32@0:8@16@24
@80@0:8@16@24@32@40@48@56@64^@72
@48@0:8@16@24@32^@40
B56@0:8@16@24@32^@40^@48
@40@0:8@16@24^@32
{?="clock"b1"value"b1}
v24@0:8Q16
@104@0:8Q16@24@32@40@48@56@64@72@80@88q96
@40@0:8Q16@24@32
@"NSDate"
@40@0:8@16Q24@32
{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}
{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}
@24@0:8q16
v24@0:8q16
v32@0:8r^v16Q24
q16@0:8
{CC_SHA256state_st=[2I][8I][16I]}16@0:8
v120@0:8{CC_SHA256state_st=[2I][8I][16I]}16
{CC_SHA512state_st=[2Q][8Q][16Q]}16@0:8
v224@0:8{CC_SHA512state_st=[2Q][8Q][16Q]}16
q24@0:8@16
@32@0:8q16@24
@40@0:8q16r^v24Q32
@"NSMutableArray"
@"TPPBDictionaryMatchingRuleFieldExists"
@"TPPBDictionaryMatchingRuleFieldRegexMatch"
@"TPPBDictionaryMatchingRule"
{?="type"b1}
i16@0:8
v20@0:8i16
@20@0:8i16
#16@0:8
@"TPPBSecureElementIdentity"
@"TPPBPeerStableInfoSetting"
@128@0:8Q16@24@32@40i48@52@60@68@76@84@92@100B108@112@120
@128@0:8Q16@24@32@40i48@52@60@68@76@84@92@100@108B116^@120
@"NSUUID"
@"<TPPublicKey>"
@68@0:8@16@24@32i40@44@52@60
@60@0:8@16@24@32@40i48^@52
@40@0:8@16@24q32
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"<TPPublicKey>"24@0:8@"NSData"16
@80@0:8@16@24Q32@40@48@56@64@72
@72@0:8@16@24Q32@40@48q56^@64
@48@0:8@16@24@32@40
@32@0:8Q16@24
@"NSData"16@0:8
B32@0:8@"NSData"16@"NSData"24
@"<TPPublicKey>"16@0:8
@"NSData"32@0:8@"NSData"16^@24
@"TPPeerPermanentInfo"
@"TPPeerStableInfo"
@"TPPeerDynamicInfo"
@40@0:8@16q24@32
@48@0:8@16q24@32@40
@56@0:8Q16@24@32@40^@48
@"TPPBDisposition"
{?="candidateEpoch"b1"myEpoch"b1}
{?="policyVersion"b1}
@"TPPBAncientEpoch"
@"TPPBDispositionDisallowedMachineID"
@"TPPBDispositionDuplicateMachineID"
@"TPPBPolicyProhibits"
@"TPPBUnknownMachineID"
{?="epoch"b1}
B32@0:8@16^@24
{?="clock"b1}
{?="kind"b1}
{?="clock"b1"flexiblePolicyVersion"b1"frozenPolicyVersion"b1"userControllableViewStatus"b1"isInheritedAccount"b1}
@80@0:8@16@24@32@40@48i56@60@68B76
{?="reason"b1}
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
