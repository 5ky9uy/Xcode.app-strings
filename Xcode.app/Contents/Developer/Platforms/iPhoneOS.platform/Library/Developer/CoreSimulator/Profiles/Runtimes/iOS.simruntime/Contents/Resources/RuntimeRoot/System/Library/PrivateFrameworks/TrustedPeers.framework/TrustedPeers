@(#)PROGRAM:TrustedPeers  PROJECT:Security-1
<TPCategoryRule: %@:%@>
prefix
category
TPPB.PeerDynamicInfo
v32@?0@"NSString"8@"TPPBDisposition"16^B24
v32@?0@"TPPBDispositionEntry"8Q16^B24
<TPPolicy: %@>
iProd
full
Applications
Backstop
CreditCards
Passwords
WiFi
ProtectedCloudStorage
SecureObjectSync
modelToCategory
categoriesByView
introducersByCategory
keyViewMapping
unknownRedactions
ucvList
piggybackingList
priorityViews
inheritedExcludedViews
version
%@ %@
fieldName
none_set
partial
excluded
outdated
ancient
unknown
ignored
self
extra: %lx
(%@)
TPModel.m
policyDoc must not be nil
RK-%@
permanentInfo must not be nil
No peer for given peerID
TPPB.PeerPermanentInfo
v32@?0@"NSString"8@"TPPeer"16^B24
unrecognized modelID: %@
Policy prohibits introducing candidate
sponsorID
sponsorCategory
candidateCategory
policyVersion
voucher must not be nil
SHA384:
No peer for given peerID: %@
Update would result in no trusted peers
B24@?0@"NSString"8^B16
B24@?0@8@"NSDictionary"16
peerID
policyDocHash
peerExpectsHash
custodianRecoveryKey
clock
value
com.apple.security.trustedpeers.policy
<TPPolicyDocument: %@>
allowed
disallowed
<TPMachineID: %@ %@ %@>
<TPMachineIDList: %@>
SHA224:
SHA256:
SHA512:
SHA224
SHA256
SHA384
SHA512
%@:%@
InvalidTPHashAlgo
Invalid TPHash algorithm
regex
type
match
exists
UNKNOWN
AND_RULE
OR_RULE
NOT_RULE
MATCH_RULE
FIELD_EXISTS
TRUE_RULE
FALSE_RULE
(unknown: %i)
TPPB.PeerStableInfo
v32@?0@"NSString"8@"NSData"16^B24
peerIdentifier
peerData
TPPB.CustodianRecoveryKey
^[^0-9,]*
matching_rule
view
com.apple.security.trustedpeers.peerstatus
<TPPolicyVersion: %llu, %@>
policyHash
permanentInfo
stableInfo
dynamicInfo
TPPB.Voucher
TPVoucher.m
Invalid parameter not satisfying: %@
com.apple.security.trustedpeers
model
classification
Security
AllowiProd
BecomeiProd
enabled
disabled
disposition
my_epoch
candidate_epoch
policy_version
sponsor_id
sponsor_category
candidate_category
explanation
ancientEpoch
policyProhibits
unknownMachineID
duplicateMachineID
disallowedMachineID
epoch
signing_pub_key
encryption_pub_key
machine_id
model_id
CKKSMatcherError
Rule missing field name
Rule has no type
Rule type is unknown
No 'exists' subrule present
No 'match' subrule present
No 'and' subrules present
No 'or' subrules present
No 'not' subrule present
included
dispositions
preapprovals
name
secret
uuid
signing_public_key
encryption_public_key
kind
RECOVERY_KEY
INHERITANCE_KEY
frozen_policy_version
frozen_policy_hash
os_version
device_name
recovery_signing_public_key
recovery_encryption_public_key
serial_number
flexible_policy_version
flexible_policy_hash
policy_secrets
user_controllable_view_status
custodian_recovery_keys
secureElementIdentity
walrus
web_access
isInheritedAccount
DISABLED
ENABLED
FOLLOWING
<TPSyncingPolicy: %@, %@, userViews: %@>
viewList
userControllableViews
ucvShouldSync
viewsToPiggybackTLKs
reason
beneficiary
sponsor
RESTORE
SAME_DEVICE
SOS_UPGRADE
SECURE_CHANNEL
redactions
user_controllable_views
piggyback_views
priority_views
inherited_excluded_views
categories
introducers
v8@?0
TPStringTable.defaultTable
registering peer %{public}@: %{public}@
status: peerID %{public}@ has no included peer IDs?
status: peerID %{public}@ trusts itself
status: peerID %{public}@ has no peer in model
status: peer %{public}@ trusts %{public}@
status: peer %{public}@ doesn't trust %{public}@
status: peer %{public}@ excludes %{public}@
status: peer %{public}@ outdates %{public}@
status: peer %{public}@ far outdates %{public}@
status: peer %{public}@ excludes itself
status: peer %{public}@ trust status is: %{public}@
Peer %@ has disabled user view syncing
Peer %@ has enabled user view syncing
can't update stable info for peerID %{public}@: peer does not exist
peer(%{public}@) stable info is now: %{public}@
failed to update stable info for peerID %{public}@: %{public}@
can't update dynamic info for peerID %{public}@: peer does not exist
peer(%{public}@) dynamic info is now: %{public}@
failed to update dynamic info for peerID %{public}@: %{public}@
voucher: voucher has failed signature checking: %@
voucher: peer (%{public}@) already excluded
voucher: no peer for id %{public}@
voucher: unknown machineID %{public}@ %{public}@
voucher: disallowed machineID %{public}@ %{public}@
voucher: failed to fetch policy: %{public}@
voucher: %{public}@ presented valid voucher from %{public}@
Inspecting voucher claiming to be from sponsor: %{public}@
Sponsor %{public}@ preapproves peer %{public}@
Including information from sponsor (%{public}@): included: %{public}@ excluded: %{public}@
No peer for ID %{public}@
Calculating dynamic info for peer %{public}@ with peer set %{public}@
Adding peer IDs: %{public}@
Removing peer IDs: %{public}@
Peer (%{public}@) excludes itself
Initial sets: included:%{public}@ excluded:%{public}@
No peer: %{public}@
After removals: included:%{public}@ excluded:%{public}@
Beginning sponsor checking; machine ID list: %{public}@
After sponsor checking: included:%{public}@ excluded:%{public}@
After voucher checking: included:%{public}@ excluded:%{public}@
Preapproved keys: %{public}@
New preapproval list: %{public}@
Using existing preapproval list: %{public}@
Final preapproval list: %{public}@
Peer %{public}@ preapproved
After preapproval checking: included:%{public}@ excluded:%{public}@
Remote peers with the ego machine ID: %{public}@
No local machine ID; not filtering peers
After machine ID checking: included:%{public}@ excluded:%{public}@
Peer (%{public}@) unknown, distrusting by default
Peer (%{public}@) is using an unknown policy version (%llu, %@), not distrusting unknown peers (error: %@)
Peer distrusts self
Update would result in zero trusted peers; failing
Analysis didn't actually change anything, returning old dynamicInfo
After exclusion filtering: included:%{public}@ excluded:%{public}@
Returning new dynamicinfo: %{public}@
Peer (%{public}@) has an unknown machine ID (%{public}@)
Peer (%{public}@) has an unknown machine ID (%{public}@), but leaving disposition as 'disallowed'
Peer (%{public}@) has a disallowed machine ID (%{public}@)
From our sponsor (%{public}@), included: %{public}@ excluded: %{public}@
Trusting %{public}@ due to preapproval
Not including %{public}@ even through they are preapproved
Unable to create initial dynamic info for peer: %{public}@
Peer %@ supports this recovery key, but cannot sponsor peer %@: %@
Peer %@ supports this Custodian RK, but cannot sponsor peer %@: %@
isRecoveryKeyEnrolled: sign %{public}@, enc %{public}@, count = %lu
isRecoveryKeyEnrolled: returning %d
isCustodianRecoveryKeyTrusted: size = %lu
isCustodianRecoveryKeyTrusted: returning %d
Recovery Keys changed! currently set signingKey: %@, currently set encryptionKey: %@, new signingKey: %@, new encryption Key: %@
registerCustodianRecoveryKey %{public}@ -- size now %lu
removeCustodianRecoveryKey: %{public}@
Peer %@ trusts the following unknown peer IDs: %@
Peer %@ trusts the following peer ID, but we don't recognize the hash: %@
Failed to make regex; cannot change modelID: %@
BecomeiProd Status set via feature flag to %s
BecomeiProd Status overridden to %s
BecomeiProd Status override removed
Error matching with rule %@: %@
TPCategoryRule
NSSecureCoding
NSCoding
TPPeerDynamicInfo
TPPolicy
TPPBDictionaryMatchingRuleFieldExists
NSCopying
TPModel
TPPBPeerStableInfoSetting
TPPolicyDocument
TPMachineID
TPMachineIDList
TPHashBuilder
TPPBDictionaryMatchingRuleFieldRegexMatch
TPPBDictionaryMatchingRule
TPPeerStableInfo
TPPBSecureElementIdentity
TPCustodianRecoveryKey
TPECPublicKeyFactory
TPPublicKeyFactory
NSObject
TPPeerPermanentInfo
TPPBPolicyKeyViewMapping
TPRecoveryKeyPair
TPCachedViableBottles
TPPolicyVersion
TPPublicKey
TPKeyPair
TPPeer
TPPBDispositionDuplicateMachineID
UsefulConstructors
TPVoucher
TPPBDispositionEntry
TPPBDispositionDisallowedMachineID
TPPBAncientEpoch
TPPBPolicyProhibits
TPPBUnknownMachineID
TPPBDisposition
TPPBPeerPermanentInfo
TPPBDictionaryMatchingRules
TPDictionaryMatchingRule
TPPBPeerDynamicInfo
TPPBPolicySecret
TPPBCustodianRecoveryKey
TPPBPeerStableInfo
TPSyncingPolicy
TPPBVoucher
TPPBPolicyDocument
TPPBPolicyCategoriesByView
TPPBPolicyIntroducersByCategory
TPStringTable
Testing
TPPBPolicyModelToCategory
TPPBPolicyRedaction
SimpleConstructor
StringAsReason:
StringAsKind:
T@"NSData",&,N,V_peerIdentifier
StringAsUserControllableViewStatus:
T@"NSMutableSet",&,N,V_vouchers
T@"<TPDecrypter>",&,N,V_decrypter
T@"NSSet",R,N,V_includedPeerIDs
T@"<TPPublicKey>",&,N,V_signingPublicKey
T@"NSString",R,N,V_serialNumber
T@"<TPPublicKey>",R,N,V_signingPubKey
_candidateEpoch
T@"NSArray",&,N,V_modelToCategory
_keyViewMapping
T@"NSArray",R,&,V_partialBottles
_peerID
T@"NSArray",R,V_keyViewMapping
_piggybackViews
T@"NSData",&,N,V_encryptionPubKey
_reason
T@"NSData",&,N,V_peerData
_signingKeyData
T@"NSData",&,N,V_recoveryEncryptionPublicKey
_walrus
T@"NSData",&,N,V_recoverySigningPublicKey
addIntroducers:
T@"NSData",&,N,V_sig
andType
T@"NSData",&,N,V_signingPublicKey
bestWebAccessAcrossTrustedPeers
T@"NSData",R,&,V_encryptionKeyData
clearCategories
T@"NSData",R,N,V_protobuf
containsObject:
T@"NSData",R,N,V_recoverySigningPublicKey
currentStatePossiblyMissingData
T@"NSDate",R,V_modified
excludedPeerIDs
T@"NSDictionary",&,N,V_introducersByCategory
hasKind
T@"NSDictionary",R,N,V_policySecrets
hasName
T@"NSMutableArray",&,N,V_ands
hasType
T@"NSMutableArray",&,N,V_categoriesByViews
hasView
T@"NSMutableArray",&,N,V_dispositions
initWithLength:
T@"NSMutableArray",&,N,V_includeds
isProxy
T@"NSMutableArray",&,N,V_introducers
keyViewMappings
T@"NSMutableArray",&,N,V_keyViewMappings
modelID
T@"NSMutableArray",&,N,V_ors
modelToCategory
T@"NSMutableArray",&,N,V_policySecrets
T@"NSMutableArray",&,N,V_priorityViews
numberWithLong:
T@"NSMutableArray",&,N,V_userControllableViews
policyProhibits
T@"NSMutableDictionary",&,N,V_peersByID
redactionsCount
T@"NSMutableSet",&,N,V_uncheckedVouchers
T@"NSSet",&,N,V_inheritedExcludedViews
setDisposition:
T@"NSSet",&,N,V_priorityViews
setIntroducers:
T@"NSSet",R,N
setNot:
T@"NSSet",R,V_priorityViews
setRecoveryEncryptionPublicKey:
T@"NSSet",R,V_viewList
T@"NSString",&,N,V_beneficiary
sponsorCategory
T@"NSString",&,N,V_candidateCategory
validateVoucherForPeer:sponsor:
T@"NSString",&,N,V_deviceName
voucherWithReason:beneficiaryID:sponsorID:signingKeyPair:error:
.cxx_destruct
T@"NSArray",R,&,V_viableBottles
StringAsType:
T@"NSData",R,&,V_signingKeyData
T#,R
T@"NSSet",R,N,V_excludedPeerIDs
T@"<TPPublicKey>",&,N,V_encryptionPublicKey
T@"NSString",&,N,V_serialNumber
T@"<TPPublicKey>",R,N,V_encryptionPubKey
T@"TPPolicyVersion",R,V_version
T@"NSArray",&,N,V_keyViewMapping
_exists
T@"NSArray",R
_partialBottles
T@"NSArray",R,V_entries
_peerIdentifier
T@"NSData",&,N,V_data
_prefix
T@"NSData",&,N,V_encryptionPublicKey
_secret
T@"NSData",&,N,V_recoveryEncryptionPubKey
_status
T@"NSData",&,N,V_recoverySigningPubKey
addAnd:
T@"NSData",&,N,V_secret
allKeys
T@"NSData",&,N,V_signingPubKey
base64EncodedStringWithOptions:
T@"NSData",&,N,V_value
categoriesCount
T@"NSData",R,N,V_data
clearRedactions
T@"NSData",R,N,V_recoveryEncryptionPublicKey
copyTo:
T@"NSData",R,N,V_sig
entries
T@"NSDictionary",&,N,V_categoriesByView
hasAncientEpoch
T@"NSDictionary",R,N
hasMatchingRule
T@"NSHashTable",&,V_table
hasSerialNumber
T@"NSMutableArray",&,N,V_categories
hasUuid
T@"NSMutableArray",&,N,V_custodianRecoveryKeys
includedPeerIDs
T@"NSMutableArray",&,N,V_excludeds
introducersType
T@"NSMutableArray",&,N,V_inheritedExcludedViews
T@"NSMutableArray",&,N,V_introducersByCategorys
member:
T@"NSMutableArray",&,N,V_modelToCategorys
modelId
T@"NSMutableArray",&,N,V_piggybackViews
myEpoch
T@"NSMutableArray",&,N,V_preapprovals
numberWithBool:
T@"NSMutableArray",&,N,V_redactions
T@"NSMutableDictionary",&,N,V_custodianRecoveryKeys
reasonAsString:
T@"NSMutableDictionary",&,N,V_policiesByVersion
release
T@"NSObject<OS_dispatch_queue>",&,V_queue
setBeneficiary:
T@"NSSet",&,N,V_piggybackViews
setExplanation:
T@"NSSet",&,N,V_userControllableViewList
setKey:
T@"NSSet",R,N,V_preapprovals
setOrs:
T@"NSSet",R,V_userControllableViews
setSig:
T@"NSSet",R,V_viewsToPiggybackTLKs
sponsor
T@"NSString",&,N,V_beneficiaryID
updateWithData:
T@"NSString",&,N,V_category
version
T@"NSString",&,N,V_explanation
T@"NSString",&,N,V_fieldName
T@"NSString",&,N,V_flexiblePolicyHash
T@"NSString",&,N,V_frozenPolicyHash
T@"NSString",&,N,V_key
T@"NSString",&,N,V_machineId
T@"NSString",&,N,V_modelId
T@"NSString",&,N,V_name
T@"NSString",&,N,V_osVersion
T@"NSString",&,N,V_peerID
T@"NSString",&,N,V_prefix
T@"NSString",&,N,V_regex
T@"NSString",&,N,V_sponsor
T@"NSString",&,N,V_sponsorCategory
T@"NSString",&,N,V_sponsorID
T@"NSString",&,N,V_sponsorId
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_view
T@"NSString",C,N,V_category
T@"NSString",C,N,V_prefix
T@"NSString",R,&,V_policyHash
T@"NSString",R,C
T@"NSString",R,N
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_machineID
T@"NSString",R,N,V_modelID
T@"NSString",R,N,V_osVersion
T@"NSString",R,N,V_peerID
T@"NSString",R,V_machineID
T@"NSString",R,V_model
T@"NSUUID",&,N,V_uuid
T@"TPPBAncientEpoch",&,N,V_ancientEpoch
T@"TPPBDictionaryMatchingRule",&,N,V_matchingRule
T@"TPPBDictionaryMatchingRule",&,N,V_not
T@"TPPBDictionaryMatchingRuleFieldExists",&,N,V_exists
T@"TPPBDictionaryMatchingRuleFieldRegexMatch",&,N,V_match
T@"TPPBDisposition",&,N,V_disposition
T@"TPPBDispositionDisallowedMachineID",&,N,V_disallowedMachineID
T@"TPPBDispositionDuplicateMachineID",&,N,V_duplicateMachineID
T@"TPPBPeerStableInfoSetting",&,N,V_walrus
T@"TPPBPeerStableInfoSetting",&,N,V_webAccess
T@"TPPBPeerStableInfoSetting",R,N,V_walrusSetting
T@"TPPBPeerStableInfoSetting",R,N,V_webAccess
T@"TPPBPolicyProhibits",&,N,V_policyProhibits
T@"TPPBSecureElementIdentity",&,N,V_secureElementIdentity
T@"TPPBSecureElementIdentity",R,N,V_secureElementIdentity
T@"TPPBUnknownMachineID",&,N,V_unknownMachineID
T@"TPPeerDynamicInfo",R,N,V_dynamicInfo
T@"TPPeerPermanentInfo",R,N,V_permanentInfo
T@"TPPeerStableInfo",R,N,V_stableInfo
T@"TPPolicyVersion",&,N,V_version
T@"TPPolicyVersion",R,N,V_version
T@"TPPolicyVersion",R,V_flexiblePolicyVersion
T@"TPPolicyVersion",R,V_frozenPolicyVersion
TB,N
TB,N,V_isInheritedAccount
TB,N,V_value
TB,R
TB,R,N
TB,V_isInheritedAccount
TB,V_unknownRedactions
TPPBPolicyCategoriesByViewWithView:categories:
TPPBPolicyIntroducersByCategoryWithCategory:introducers:
TPPBPolicyKeyViewMappingWithView:matchingRule:
TPPBPolicyModelToCategoryWithPrefix:category:
TQ,N,V_candidateEpoch
TQ,N,V_clock
TQ,N,V_epoch
TQ,N,V_flexiblePolicyVersion
TQ,N,V_frozenPolicyVersion
TQ,N,V_myEpoch
TQ,N,V_policyVersion
TQ,N,V_reason
TQ,R
TQ,R,N,V_clock
TQ,R,N,V_epoch
TQ,R,V_status
TQ,R,V_versionNumber
Ti,N,V_kind
Ti,N,V_reason
Ti,N,V_type
Ti,N,V_userControllableViewStatus
Ti,R,N,V_syncUserControllableViews
Ti,R,V_syncUserControllableViews
Tq,N,V_algo
T{CC_SHA256state_st=[2I][8I][16I]},N,V_ctxSHA256
T{CC_SHA512state_st=[2Q][8Q][16Q]},N,V_ctxSHA512
UTF8String
UUIDString
_algo
_ancientEpoch
_ands
_beneficiary
_beneficiaryID
_candidateCategory
_categories
_categoriesByView
_categoriesByViews
_category
_clock
_count
_ctxSHA256
_ctxSHA512
_custodianRecoveryKeys
_data
_decrypter
_deviceName
_disallowedMachineID
_disposition
_dispositions
_duplicateMachineID
_dynamicInfo
_encryptionKeyData
_encryptionPubKey
_encryptionPublicKey
_entries
_epoch
_excludedPeerIDs
_excludeds
_explanation
_fieldName
_flexiblePolicyHash
_flexiblePolicyVersion
_frozenPolicyHash
_frozenPolicyVersion
_has
_includedPeerIDs
_includeds
_inheritedExcludedViews
_introducers
_introducersByCategory
_introducersByCategorys
_isInheritedAccount
_key
_keyViewMappings
_kind
_machineID
_machineId
_match
_matchingRule
_model
_modelID
_modelId
_modelToCategory
_modelToCategorys
_modified
_myEpoch
_name
_not
_ors
_osVersion
_peerData
_peersByID
_permanentInfo
_policiesByVersion
_policyHash
_policyProhibits
_policySecrets
_policyVersion
_preapprovals
_priorityViews
_protobuf
_queue
_recoveryEncryptionPubKey
_recoveryEncryptionPublicKey
_recoverySigningPubKey
_recoverySigningPublicKey
_redactions
_regex
_secureElementIdentity
_serialNumber
_sig
_signingPubKey
_signingPublicKey
_sponsor
_sponsorCategory
_sponsorID
_sponsorId
_stableInfo
_syncUserControllableViews
_table
_type
_uncheckedVouchers
_unknownMachineID
_unknownRedactions
_userControllableViewList
_userControllableViewStatus
_userControllableViews
_uuid
_value
_version
_versionNumber
_viableBottles
_view
_viewList
_viewsToPiggybackTLKs
_vouchers
_walrusSetting
_webAccess
actualPeerWithID:error:
addCategories:
addCategoriesByView:
addCategoriesByView:toPB:
addCustodianRecoveryKeys:
addDispositions:
addEntriesFromDictionary:
addExcluded:
addIncluded:
addInheritedExcludedViews:
addIntroducersByCategory:
addIntroducersByCategory:toPB:
addKeyViewMapping:
addKeyViewMapping:toPB:
addModelToCategory:
addModelToCategory:toPB:
addObject:
addObjectsFromArray:
addOr:
addPiggybackViews:
addPolicySecrets:
addPreapprovals:
addPriorityViews:
addRedactions:
addRedactions:toPB:
addUserControllableViews:
algo
algoOfHash:
allCustodianRecoveryKeyPeerIDs
allCustodianRecoveryKeys
allMachineIDs
allObjects
allPeerIDs
allPeers
allPolicyVersions
allRegisteredPolicyVersions
allTrustedPeersWithCurrentRecoveryKey
allValues
allVouchers
allocWithZone:
ancientEpoch
andAtIndex:
andMatch:
ands
andsCount
anyTrustedPeerDistrustsOtherPeer:
appendData:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
autorelease
beneficiary
beneficiaryID
bestPolicyVersion
bestRecoveryKeyForStableInfo:dynamicInfo:vouchers:
bestWalrusAcrossTrustedPeers
bestWalrusForStableInfo:dynamicInfo:walrusStableChanges:
bestWebAccessForStableInfo:dynamicInfo:webAccessStableChanges:
bytes
calculateDynamicInfoForPeerWithID:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
calculateDynamicInfoFromModel:peer:peerPermanentInfo:peerStableInfo:startingDynamicInfo:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
canIntroduceCandidate:withSponsor:toEpoch:underPolicy:disposition:
canTrustCandidate:inEpoch:
candidateCategory
candidateEpoch
categories
categoriesAtIndex:
categoriesByView
categoriesByViewAtIndex:
categoriesByViewFromPb:
categoriesByViewType
categoriesByViews
categoriesByViewsCount
categoriesType
category
categoryForModel:
checkIntroductionForCandidate:stableInfo:withSponsorID:error:
checkSignature:matchesData:
checkSignatureWithKey:
checkVouchers
class
clearAnds
clearCategoriesByViews
clearCustodianRecoveryKeys
clearDispositions
clearExcludeds
clearIncludeds
clearInheritedExcludedViews
clearIntroducers
clearIntroducersByCategorys
clearKeyViewMappings
clearModelToCategorys
clearOrs
clearPiggybackViews
clearPolicySecrets
clearPreapprovals
clearPriorityViews
clearUserControllableViews
clock
cloneWithVersionNumber:
cloneWithVersionNumber:prependingCategoriesByView:prependingKeyViewMapping:
compare:
componentsJoinedByString:
conformsToProtocol:
considerCandidateID:withSponsorID:sponsorPermanentInfo:toExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
considerPolicyFromPeerID:stableInfo:secrets:newestPolicyDoc:error:
considerPreapprovalsSponsoredByPeer:toRecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
considerVouchersSponsoredByPeerID:sponsorPermanentInfo:toRecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDynamicInfoWithIncludedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
createRecoveryECPublicKey:
createStableInfoWithFrozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
createVoucherForCandidate:stableInfo:withSponsorID:reason:signingKeyPair:error:
ctxSHA256
ctxSHA512
currentHandler
custodianPeerWithID:
custodianRecoveryKeyWithData:sig:keyFactory:
custodianRecoveryKeys
custodianRecoveryKeysAtIndex:
custodianRecoveryKeysCount
custodianRecoveryKeysType
data
dataUsingEncoding:
debugDescription
decodeBoolForKey:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decryptData:withKey:error:
decrypter
defaultTable
deletePeerWithID:
description
deviceName
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
disallowedMachineID
disposition
dispositions
dispositionsAtIndex:
dispositionsCount
dispositionsType
doesVoucherMatchRecoveryKeys:
duplicateMachineID
dynamicInfo
dynamicInfoForJoiningPeerID:peerPermanentInfo:peerStableInfo:sponsorID:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
dynamicInfoPBWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:
dynamicInfoWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
dynamicInfoWithData:sig:
encodeBool:forKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeProtobuf
encodeSubjectPublicKeyInfo
encodeWithCoder:
encryptData:error:
encryptionKeyData
encryptionPubKey
encryptionPublicKey
entryFor:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
epoch
errorWithDomain:code:description:
errorWithDomain:code:description:underlying:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
excludedAtIndex:
excludedType
excludeds
excludedsCount
exists
explanation
falseMatch
fieldExists:
fieldMatch:fieldRegex:
fieldName
filterPeerList:byMachineIDs:dispositions:
filterPreapprovals:forExistingPeers:
filteredArrayUsingPredicate:
finalHash
findCustodianRecoveryKeyWithUUID:
flexiblePolicyHash
flexiblePolicyVersion
frozenPolicyHash
frozenPolicyVersion
getDynamicInfoForPeerWithID:
getPeerIDsTrustedByPeerWithDynamicInfo:toAccessView:error:
getPeerIDsTrustedByPeerWithID:toAccessView:error:
getStableInfoForPeerWithID:
getViewsForCRK:donorPermanentInfo:donorStableInfo:error:
getViewsForPeer:stableInfo:error:
handleFailureInMethod:object:file:lineNumber:description:
hasBeneficiary
hasCandidateCategory
hasCandidateEpoch
hasCategory
hasClock
hasDeviceName
hasDisallowedMachineID
hasDisposition
hasDuplicateMachineID
hasEncryptionPubKey
hasEncryptionPublicKey
hasEpoch
hasExists
hasExplanation
hasFieldName
hasFlexiblePolicyHash
hasFlexiblePolicyVersion
hasFrozenPolicyHash
hasFrozenPolicyVersion
hasIsInheritedAccount
hasKey
hasMachineId
hasMatch
hasModelId
hasMyEpoch
hasNot
hasOsVersion
hasPeerData
hasPeerID
hasPeerIdentifier
hasPeerWithID:
hasPolicyProhibits
hasPolicyVersion
hasPotentiallyTrustedPeerPreapprovingKey:
hasPotentiallyTrustedPeerWithSigningKey:
hasPrefix
hasPrefix:
hasReason
hasRecoveryEncryptionPublicKey
hasRecoverySigningPublicKey
hasRegex
hasSecret
hasSecureElementIdentity
hasSigningPubKey
hasSigningPublicKey
hasSponsor
hasSponsorCategory
hasSponsorId
hasUnknownMachineID
hasUserControllableViewStatus
hasValue
hasWalrus
hasWebAccess
hash
hashWithAlgo:ofBytes:len:
hashWithAlgo:ofData:
includedAtIndex:
includedType
includeds
includedsCount
inheritedExcludedViews
inheritedExcludedViewsAtIndex:
inheritedExcludedViewsCount
inheritedExcludedViewsType
init
initWithAlgo:
initWithCapacity:
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:data:sig:
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
initWithCoder:
initWithCurve:
initWithData:
initWithData:sig:
initWithData:signature:
initWithData:specifier:error:
initWithDecrypter:
initWithEntries:
initWithHash:data:
initWithIdentifier:
initWithKeySpecifier:digestOperation:
initWithMachineID:modelID:epoch:signingPubKey:encryptionPubKey:data:sig:peerID:
initWithMachineID:status:modified:
initWithModel:version:viewList:priorityViews:userControllableViews:syncUserControllableViews:viewsToPiggybackTLKs:keyViewMapping:isInheritedAccount:
initWithObj:data:sig:
initWithObjects:count:
initWithOptions:capacity:
initWithPattern:options:error:
initWithPermanentInfo:
initWithPermanentInfo:stableInfo:dynamicInfo:
initWithSigningKeyData:encryptionKeyData:
initWithStableInfo:
initWithUUID:signingPublicKey:encryptionPublicKey:kind:data:sig:peerID:
initWithUUID:signingPublicKey:encryptionPublicKey:signingKeyPair:kind:error:
initWithUUIDString:
initWithVersion:hash:
initWithVersion:modelToCategory:categoriesByView:introducersByCategory:redactions:keyViewMapping:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:hashAlgo:
initWithViableBottles:partialBottles:
introducers
introducersAtIndex:
introducersByCategory
introducersByCategoryAtIndex:
introducersByCategoryFromPb:
introducersByCategoryType
introducersByCategorys
introducersByCategorysCount
introducersCount
invertMatch:error:
isCustodianRecoveryKeyTrusted:
isEqual:
isEqualKeyViewMapping:other:
isEqualToCategoryRule:
isEqualToData:
isEqualToDictionary:
isEqualToPeerDynamicInfo:
isEqualToPeerStableInfo:
isEqualToPolicy:
isEqualToPolicyDocument:
isEqualToSet:
isEqualToString:
isEqualToVoucher:
isInheritedAccount
isKindOfClass:
isMemberOfClass:
isRecoveryKeyDistrusted:
isRecoveryKeyEnrolled
isRecoveryKeyExcluded:
isSubsetOfSet:
isSyncingEnabledForView:
keyFromSPKI:
keyViewMapping
keyViewMappingAtIndex:
keyViewMappingType
keyViewMappingsCount
keyWithSubjectPublicKeyInfo:
kind
kindAsString:
latestEpochAmongPeerIDs:
length
longValue
machineID
machineIDsInStatus:
machineId
mapDictionaryToView:
match
matches:error:
matchingRule
maxClock
mergeFrom:
minusSet:
model
modelToCategoryAtIndex:
modelToCategoryFromPb:
modelToCategoryType
modelToCategorys
modelToCategorysCount
modified
mungeModelID:
mutableBytes
mutableCopy
name
notMatch:
numberOfMatchesInString:options:range:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsPassingTest:
orAtIndex:
orMatch:
orType
orsCount
osVersion
partialBottles
pbToNullable
peerCountsByMachineID
peerData
peerID
peerIDForData:sig:peerIDHashAlgo:
peerIDThatTrustsCustodianRecoveryKeys:canIntroducePeer:stableInfo:
peerIDThatTrustsRecoveryKeys:canIntroducePeer:stableInfo:
peerIdentifier
peerInCategory:canAccessView:
peerWithID:
peerWithUpdatedDynamicInfo:error:
peerWithUpdatedStableInfo:error:
peersByID
peersWithMachineID:
performAndMatch:error:
performOrMatch:error:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permanentInfo
permanentInfoWithMachineID:modelID:epoch:signingKeyPair:encryptionKeyPair:peerIDHashAlgo:error:
permanentInfoWithPeerID:data:sig:keyFactory:
piggybackViews
piggybackViewsAtIndex:
piggybackViewsCount
piggybackViewsType
policiesByVersion
policyDocWithHash:data:
policyForPeerIDs:candidatePeerID:candidateStableInfo:error:
policyHash
policySecrets
policySecretsAtIndex:
policySecretsCount
policySecretsType
policyVersion
policyWithModelToCategory:categoriesByView:introducersByCategory:keyViewMapping:unknownRedactions:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:version:
policyWithSecrets:decrypter:error:
policyWithVersion:
preapprovals
preapprovalsAtIndex:
preapprovalsCount
preapprovalsFromKeys:
preapprovalsType
predicateWithBlock:
prefix
priorityViews
priorityViewsAtIndex:
priorityViewsCount
priorityViewsType
protobuf
publicKey
queue
readFrom:
reason
recoveryEncryptionPubKey
recoveryEncryptionPublicKey
recoveryKeyPeerID:
recoverySigningPubKey
recoverySigningPublicKey
recursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:withPeersTrustedBySponsorID:currentMachineIDs:forEpoch:
redactionWithEncrypter:modelToCategory:categoriesByView:introducersByCategory:keyViewMapping:error:
redactions
redactionsAtIndex:
redactionsFromPb:
redactionsType
regex
registerCustodianRecoveryKey:
registerPeerWithPermanentInfo:
registerPolicyDocument:
registerVoucher:
regularExpressionWithPattern:options:error:
removeAllObjects
removeCustodianRecoveryKey:
removeObject:
removeObjectForKey:
removeRecoveryKey
resetWithAlgo:
respondsToSelector:
retain
retainCount
ruleWithPrefix:category:
secret
secureElementIdentity
self
serialNumber
setAlgo:
setAncientEpoch:
setAnds:
setBeneficiaryID:
setByAddingObjectsFromSet:
setCandidateCategory:
setCandidateEpoch:
setCategories:
setCategoriesByView:
setCategoriesByViews:
setCategory:
setClock:
setCtxSHA256:
setCtxSHA512:
setCustodianRecoveryKeys:
setData:
setDecrypter:
setDeviceName:
setDisallowedMachineID:
setDispositions:
setDuplicateMachineID:
setEncryptionPubKey:
setEncryptionPublicKey:
setEpoch:
setExcludeds:
setExists:
setFieldName:
setFlexiblePolicyHash:
setFlexiblePolicyVersion:
setFrozenPolicyHash:
setFrozenPolicyVersion:
setHasCandidateEpoch:
setHasClock:
setHasEpoch:
setHasFlexiblePolicyVersion:
setHasFrozenPolicyVersion:
setHasIsInheritedAccount:
setHasKind:
setHasMyEpoch:
setHasPolicyVersion:
setHasReason:
setHasType:
setHasUserControllableViewStatus:
setHasValue:
setIncludeds:
setInheritedExcludedViews:
setIntroducersByCategory:
setIntroducersByCategorys:
setIsInheritedAccount:
setKeyViewMapping:
setKeyViewMappings:
setKind:
setMachineId:
setMatch:
setMatchingRule:
setModelId:
setModelToCategory:
setModelToCategorys:
setMyEpoch:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setOsVersion:
setPeerData:
setPeerID:
setPeerIdentifier:
setPeersByID:
setPiggybackViews:
setPoliciesByVersion:
setPolicyProhibits:
setPolicySecrets:
setPolicyVersion:
setPreapprovals:
setPrefix:
setPriorityViews:
setQueue:
setReason:
setRecoveryEncryptionPubKey:
setRecoveryKeys:
setRecoverySigningPubKey:
setRecoverySigningPublicKey:
setRedactions:
setRegex:
setSecret:
setSecureElementIdentity:
setSerialNumber:
setSigningPubKey:
setSigningPublicKey:
setSponsor:
setSponsorCategory:
setSponsorID:
setSponsorId:
setTable:
setType:
setUncheckedVouchers:
setUnknownMachineID:
setUnknownRedactions:
setUserControllableViewList:
setUserControllableViewStatus:
setUserControllableViews:
setUuid:
setValue:
setVersion:
setView:
setVouchers:
setWalrus:
setWebAccess:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
sign:withKey:error:
signature
signatureForData:withError:
signingKeyData
signingPubKey
signingPublicKey
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
sortedArrayUsingSelector:
spki
sponsorID
sponsorId
stableInfo
status
statusOfPeerWithID:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
stringWithString:
superclass
supportsSecureCoding
syncUserControllableViews
syncUserControllableViewsAsBoolean
syncingPolicyForModel:syncUserControllableViews:isInheritedAccount:error:
table
throwInvalidAlgo
trueMatch
trustedPeerIDs
trustedPeerInCategory:canIntroduceCategory:
trustedPeers
type
typeAsString:
uncheckedVouchers
unionSet:
unknownMachineID
unknownRedactions
untrustedPeerIDs
untrustedPeerIDsFromTrustedPeers
updateDynamicInfo:forPeerWithID:error:
updateStableInfo:forPeerWithID:error:
updateWithBytes:len:
userControllableViewList
userControllableViewStatus
userControllableViewStatusAsString:
userControllableViews
userControllableViewsAtIndex:
userControllableViewsCount
userControllableViewsType
userViewSyncabilityConsensusAmongTrustedPeers:
uuid
validatePeerWithPreApproval:sponsor:
value
vectorClock
verify:withKey:error:
verifyVoucherSignature:
versionNumber
viableBottles
viablePeerCountsByModelID
view
viewList
viewsForModel:error:
viewsToPiggybackTLKs
voucherInfoWithData:sig:
vouchers
walrus
walrusSetting
webAccess
writeTo:
zone
@32@0:8@16@24
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
Q16@0:8
@16@0:8
v16@0:8
@"NSString"
@56@0:8Q16@24@32@40@48
@72@0:8Q16@24@32@40@48@56^@64
@40@0:8@16@24@32
@24@0:8^{_NSZone=}16
@"NSSet"
@"NSData"
@92@0:8@16@24@32@40B48@52@60@68@76@84
B32@0:8@16@24
@40@0:8@16i24B28^@32
@32@0:8@16^@24
v20@0:8B16
@"TPPolicyVersion"
@"NSArray"
@"NSDictionary"
Q24@0:8@16
@24@0:8Q16
i24@0:8@16
B40@0:8@16@24^@32
@128@0:8@16@24@32i40@44@52@60@68@76@84@92@100@108B116^@120
@64@0:8@16@24@32@40@48^@56
B32@0:8@16Q24
B56@0:8@16@24Q32@40@48
B48@0:8@16@24@32^@40
@64@0:8@16@24@32Q40@48^@56
@80@0:8@16@24@32@40@48@56@64Q72
v72@0:8@16@24@32@40@48@56Q64
v64@0:8@16@24@32@40@48Q56
@72@0:8@16@24@32@40@48@56^@64
@104@0:8@16@24@32@40@48@56@64@72@80@88^@96
v32@0:8@16@24
@80@0:8@16@24@32@40@48@56@64^@72
@48@0:8@16@24@32^@40
B56@0:8@16@24@32^@40^@48
@40@0:8@16@24^@32
@"NSMutableDictionary"
@"NSMutableSet"
@"<TPDecrypter>"
v24@0:8Q16
{?="clock"b1"value"b1}
@104@0:8Q16@24@32@40@48@56@64@72@80@88q96
@40@0:8Q16@24@32
@40@0:8@16Q24@32
@"NSDate"
q24@0:8@16
@32@0:8q16@24
@40@0:8q16r^v24Q32
@24@0:8q16
v24@0:8q16
v32@0:8r^v16Q24
q16@0:8
{CC_SHA256state_st=[2I][8I][16I]}16@0:8
v120@0:8{CC_SHA256state_st=[2I][8I][16I]}16
{CC_SHA512state_st=[2Q][8Q][16Q]}16@0:8
v224@0:8{CC_SHA512state_st=[2Q][8Q][16Q]}16
{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}
{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}
#16@0:8
i16@0:8
v20@0:8i16
@20@0:8i16
@"NSMutableArray"
@"TPPBDictionaryMatchingRuleFieldExists"
@"TPPBDictionaryMatchingRuleFieldRegexMatch"
@"TPPBDictionaryMatchingRule"
{?="type"b1}
@136@0:8Q16@24@32@40i48@52@60@68@76@84@92@100@108B116@120@128
@136@0:8Q16@24@32@40i48@52@60@68@76@84@92@100@108@116B124^@128
@"TPPBSecureElementIdentity"
@"TPPBPeerStableInfoSetting"
@40@0:8@16@24q32
@68@0:8@16@24@32i40@44@52@60
@60@0:8@16@24@32@40i48^@52
@"NSUUID"
@"<TPPublicKey>"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<TPPublicKey>"24@0:8@"NSData"16
@72@0:8@16@24Q32@40@48q56^@64
@48@0:8@16@24@32@40
@80@0:8@16@24Q32@40@48@56@64@72
@32@0:8Q16@24
@"NSData"16@0:8
B32@0:8@"NSData"16@"NSData"24
@"<TPPublicKey>"16@0:8
@"NSData"32@0:8@"NSData"16^@24
@"TPPeerPermanentInfo"
@"TPPeerStableInfo"
@"TPPeerDynamicInfo"
@40@0:8@16q24@32
@48@0:8@16q24@32@40
@56@0:8Q16@24@32@40^@48
@"TPPBDisposition"
{?="candidateEpoch"b1"myEpoch"b1}
{?="policyVersion"b1}
@"TPPBAncientEpoch"
@"TPPBDispositionDisallowedMachineID"
@"TPPBDispositionDuplicateMachineID"
@"TPPBPolicyProhibits"
@"TPPBUnknownMachineID"
{?="epoch"b1}
B32@0:8@16^@24
{?="clock"b1}
{?="kind"b1}
{?="clock"b1"flexiblePolicyVersion"b1"frozenPolicyVersion"b1"userControllableViewStatus"b1"isInheritedAccount"b1}
@80@0:8@16@24@32@40@48i56@60@68B76
{?="reason"b1}
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
$,4GZ
$*05
$*05
 &0RQ
$-6J
$5FWh
@(#)PROGRAM:TrustedPeers  PROJECT:Security-1
<TPCategoryRule: %@:%@>
prefix
category
TPPB.PeerDynamicInfo
v32@?0@"NSString"8@"TPPBDisposition"16^B24
v32@?0@"TPPBDispositionEntry"8Q16^B24
<TPPolicy: %@>
iProd
full
Applications
Backstop
CreditCards
Passwords
WiFi
ProtectedCloudStorage
SecureObjectSync
modelToCategory
categoriesByView
introducersByCategory
keyViewMapping
unknownRedactions
ucvList
piggybackingList
priorityViews
inheritedExcludedViews
version
%@ %@
fieldName
none_set
partial
excluded
outdated
ancient
unknown
ignored
self
extra: %lx
(%@)
TPModel.m
policyDoc must not be nil
RK-%@
permanentInfo must not be nil
No peer for given peerID
TPPB.PeerPermanentInfo
v32@?0@"NSString"8@"TPPeer"16^B24
unrecognized modelID: %@
Policy prohibits introducing candidate
sponsorID
sponsorCategory
candidateCategory
policyVersion
voucher must not be nil
SHA384:
No peer for given peerID: %@
Update would result in no trusted peers
B24@?0@"NSString"8^B16
B24@?0@8@"NSDictionary"16
peerID
policyDocHash
peerExpectsHash
custodianRecoveryKey
clock
value
com.apple.security.trustedpeers.policy
<TPPolicyDocument: %@>
allowed
disallowed
<TPMachineID: %@ %@ %@>
<TPMachineIDList: %@>
SHA224:
SHA256:
SHA512:
SHA224
SHA256
SHA384
SHA512
%@:%@
InvalidTPHashAlgo
Invalid TPHash algorithm
regex
type
match
exists
UNKNOWN
AND_RULE
OR_RULE
NOT_RULE
MATCH_RULE
FIELD_EXISTS
TRUE_RULE
FALSE_RULE
(unknown: %i)
TPPB.PeerStableInfo
v32@?0@"NSString"8@"NSData"16^B24
peerIdentifier
peerData
TPPB.CustodianRecoveryKey
^[^0-9,]*
matching_rule
view
com.apple.security.trustedpeers.peerstatus
<TPPolicyVersion: %llu, %@>
policyHash
permanentInfo
stableInfo
dynamicInfo
TPPB.Voucher
TPVoucher.m
Invalid parameter not satisfying: %@
com.apple.security.trustedpeers
model
classification
Security
AllowiProd
BecomeiProd
enabled
disabled
disposition
my_epoch
candidate_epoch
policy_version
sponsor_id
sponsor_category
candidate_category
explanation
ancientEpoch
policyProhibits
unknownMachineID
duplicateMachineID
disallowedMachineID
epoch
signing_pub_key
encryption_pub_key
machine_id
model_id
CKKSMatcherError
Rule missing field name
Rule has no type
Rule type is unknown
No 'exists' subrule present
No 'match' subrule present
No 'and' subrules present
No 'or' subrules present
No 'not' subrule present
included
dispositions
preapprovals
name
secret
uuid
signing_public_key
encryption_public_key
kind
RECOVERY_KEY
INHERITANCE_KEY
frozen_policy_version
frozen_policy_hash
os_version
device_name
recovery_signing_public_key
recovery_encryption_public_key
serial_number
flexible_policy_version
flexible_policy_hash
policy_secrets
user_controllable_view_status
custodian_recovery_keys
secureElementIdentity
walrus
web_access
isInheritedAccount
DISABLED
ENABLED
FOLLOWING
<TPSyncingPolicy: %@, %@, userViews: %@>
viewList
userControllableViews
ucvShouldSync
viewsToPiggybackTLKs
reason
beneficiary
sponsor
RESTORE
SAME_DEVICE
SOS_UPGRADE
SECURE_CHANNEL
redactions
user_controllable_views
piggyback_views
priority_views
inherited_excluded_views
categories
introducers
v8@?0
TPStringTable.defaultTable
registering peer %{public}@: %{public}@
status: peerID %{public}@ has no included peer IDs?
status: peerID %{public}@ trusts itself
status: peerID %{public}@ has no peer in model
status: peer %{public}@ trusts %{public}@
status: peer %{public}@ doesn't trust %{public}@
status: peer %{public}@ excludes %{public}@
status: peer %{public}@ outdates %{public}@
status: peer %{public}@ far outdates %{public}@
status: peer %{public}@ excludes itself
status: peer %{public}@ trust status is: %{public}@
Peer %@ has disabled user view syncing
Peer %@ has enabled user view syncing
can't update stable info for peerID %{public}@: peer does not exist
peer(%{public}@) stable info is now: %{public}@
failed to update stable info for peerID %{public}@: %{public}@
can't update dynamic info for peerID %{public}@: peer does not exist
peer(%{public}@) dynamic info is now: %{public}@
failed to update dynamic info for peerID %{public}@: %{public}@
voucher: voucher has failed signature checking: %@
voucher: peer (%{public}@) already excluded
voucher: no peer for id %{public}@
voucher: unknown machineID %{public}@ %{public}@
voucher: disallowed machineID %{public}@ %{public}@
voucher: failed to fetch policy: %{public}@
voucher: %{public}@ presented valid voucher from %{public}@
Inspecting voucher claiming to be from sponsor: %{public}@
Sponsor %{public}@ preapproves peer %{public}@
Including information from sponsor (%{public}@): included: %{public}@ excluded: %{public}@
No peer for ID %{public}@
Calculating dynamic info for peer %{public}@ with peer set %{public}@
Adding peer IDs: %{public}@
Removing peer IDs: %{public}@
Peer (%{public}@) excludes itself
Initial sets: included:%{public}@ excluded:%{public}@
No peer: %{public}@
After removals: included:%{public}@ excluded:%{public}@
Beginning sponsor checking; machine ID list: %{public}@
After sponsor checking: included:%{public}@ excluded:%{public}@
After voucher checking: included:%{public}@ excluded:%{public}@
Preapproved keys: %{public}@
New preapproval list: %{public}@
Using existing preapproval list: %{public}@
Final preapproval list: %{public}@
Peer %{public}@ preapproved
After preapproval checking: included:%{public}@ excluded:%{public}@
Remote peers with the ego machine ID: %{public}@
No local machine ID; not filtering peers
After machine ID checking: included:%{public}@ excluded:%{public}@
Peer (%{public}@) unknown, distrusting by default
Peer (%{public}@) is using an unknown policy version (%llu, %@), not distrusting unknown peers (error: %@)
Peer distrusts self
Update would result in zero trusted peers; failing
Analysis didn't actually change anything, returning old dynamicInfo
After exclusion filtering: included:%{public}@ excluded:%{public}@
Returning new dynamicinfo: %{public}@
Peer (%{public}@) has an unknown machine ID (%{public}@)
Peer (%{public}@) has an unknown machine ID (%{public}@), but leaving disposition as 'disallowed'
Peer (%{public}@) has a disallowed machine ID (%{public}@)
From our sponsor (%{public}@), included: %{public}@ excluded: %{public}@
Trusting %{public}@ due to preapproval
Not including %{public}@ even through they are preapproved
Unable to create initial dynamic info for peer: %{public}@
Peer %@ supports this recovery key, but cannot sponsor peer %@: %@
Peer %@ supports this Custodian RK, but cannot sponsor peer %@: %@
isRecoveryKeyEnrolled: sign %{public}@, enc %{public}@, count = %lu
isRecoveryKeyEnrolled: returning %d
isCustodianRecoveryKeyTrusted: size = %lu
isCustodianRecoveryKeyTrusted: returning %d
Recovery Keys changed! currently set signingKey: %@, currently set encryptionKey: %@, new signingKey: %@, new encryption Key: %@
registerCustodianRecoveryKey %{public}@ -- size now %lu
removeCustodianRecoveryKey: %{public}@
Peer %@ trusts the following unknown peer IDs: %@
Peer %@ trusts the following peer ID, but we don't recognize the hash: %@
Failed to make regex; cannot change modelID: %@
BecomeiProd Status set via feature flag to %s
BecomeiProd Status overridden to %s
BecomeiProd Status override removed
Error matching with rule %@: %@
TPCategoryRule
NSSecureCoding
NSCoding
TPPeerDynamicInfo
TPPolicy
TPPBDictionaryMatchingRuleFieldExists
NSCopying
TPModel
TPPBPeerStableInfoSetting
TPPolicyDocument
TPMachineID
TPMachineIDList
TPHashBuilder
TPPBDictionaryMatchingRuleFieldRegexMatch
TPPBDictionaryMatchingRule
TPPeerStableInfo
TPPBSecureElementIdentity
TPCustodianRecoveryKey
TPECPublicKeyFactory
TPPublicKeyFactory
NSObject
TPPeerPermanentInfo
TPPBPolicyKeyViewMapping
TPRecoveryKeyPair
TPCachedViableBottles
TPPolicyVersion
TPPublicKey
TPKeyPair
TPPeer
TPPBDispositionDuplicateMachineID
UsefulConstructors
TPVoucher
TPPBDispositionEntry
TPPBDispositionDisallowedMachineID
TPPBAncientEpoch
TPPBPolicyProhibits
TPPBUnknownMachineID
TPPBDisposition
TPPBPeerPermanentInfo
TPPBDictionaryMatchingRules
TPDictionaryMatchingRule
TPPBPeerDynamicInfo
TPPBPolicySecret
TPPBCustodianRecoveryKey
TPPBPeerStableInfo
TPSyncingPolicy
TPPBVoucher
TPPBPolicyDocument
TPPBPolicyCategoriesByView
TPPBPolicyIntroducersByCategory
TPStringTable
Testing
TPPBPolicyModelToCategory
TPPBPolicyRedaction
SimpleConstructor
StringAsReason:
StringAsKind:
T@"NSData",&,N,V_peerIdentifier
StringAsUserControllableViewStatus:
T@"NSMutableSet",&,N,V_vouchers
T@"<TPDecrypter>",&,N,V_decrypter
T@"NSSet",R,N,V_includedPeerIDs
T@"<TPPublicKey>",&,N,V_signingPublicKey
T@"NSString",R,N,V_serialNumber
T@"<TPPublicKey>",R,N,V_signingPubKey
_candidateEpoch
T@"NSArray",&,N,V_modelToCategory
_keyViewMapping
T@"NSArray",R,&,V_partialBottles
_peerID
T@"NSArray",R,V_keyViewMapping
_piggybackViews
T@"NSData",&,N,V_encryptionPubKey
_reason
T@"NSData",&,N,V_peerData
_signingKeyData
T@"NSData",&,N,V_recoveryEncryptionPublicKey
_walrus
T@"NSData",&,N,V_recoverySigningPublicKey
addIntroducers:
T@"NSData",&,N,V_sig
andType
T@"NSData",&,N,V_signingPublicKey
bestWebAccessAcrossTrustedPeers
T@"NSData",R,&,V_encryptionKeyData
clearCategories
T@"NSData",R,N,V_protobuf
containsObject:
T@"NSData",R,N,V_recoverySigningPublicKey
currentStatePossiblyMissingData
T@"NSDate",R,V_modified
excludedPeerIDs
T@"NSDictionary",&,N,V_introducersByCategory
hasKind
T@"NSDictionary",R,N,V_policySecrets
hasName
T@"NSMutableArray",&,N,V_ands
hasType
T@"NSMutableArray",&,N,V_categoriesByViews
hasView
T@"NSMutableArray",&,N,V_dispositions
initWithLength:
T@"NSMutableArray",&,N,V_includeds
isProxy
T@"NSMutableArray",&,N,V_introducers
keyViewMappings
T@"NSMutableArray",&,N,V_keyViewMappings
modelID
T@"NSMutableArray",&,N,V_ors
modelToCategory
T@"NSMutableArray",&,N,V_policySecrets
T@"NSMutableArray",&,N,V_priorityViews
numberWithLong:
T@"NSMutableArray",&,N,V_userControllableViews
policyProhibits
T@"NSMutableDictionary",&,N,V_peersByID
redactionsCount
T@"NSMutableSet",&,N,V_uncheckedVouchers
T@"NSSet",&,N,V_inheritedExcludedViews
setDisposition:
T@"NSSet",&,N,V_priorityViews
setIntroducers:
T@"NSSet",R,N
setNot:
T@"NSSet",R,V_priorityViews
setRecoveryEncryptionPublicKey:
T@"NSSet",R,V_viewList
T@"NSString",&,N,V_beneficiary
sponsorCategory
T@"NSString",&,N,V_candidateCategory
validateVoucherForPeer:sponsor:
T@"NSString",&,N,V_deviceName
voucherWithReason:beneficiaryID:sponsorID:signingKeyPair:error:
.cxx_destruct
T@"NSArray",R,&,V_viableBottles
StringAsType:
T@"NSData",R,&,V_signingKeyData
T#,R
T@"NSSet",R,N,V_excludedPeerIDs
T@"<TPPublicKey>",&,N,V_encryptionPublicKey
T@"NSString",&,N,V_serialNumber
T@"<TPPublicKey>",R,N,V_encryptionPubKey
T@"TPPolicyVersion",R,V_version
T@"NSArray",&,N,V_keyViewMapping
_exists
T@"NSArray",R
_partialBottles
T@"NSArray",R,V_entries
_peerIdentifier
T@"NSData",&,N,V_data
_prefix
T@"NSData",&,N,V_encryptionPublicKey
_secret
T@"NSData",&,N,V_recoveryEncryptionPubKey
_status
T@"NSData",&,N,V_recoverySigningPubKey
addAnd:
T@"NSData",&,N,V_secret
allKeys
T@"NSData",&,N,V_signingPubKey
base64EncodedStringWithOptions:
T@"NSData",&,N,V_value
categoriesCount
T@"NSData",R,N,V_data
clearRedactions
T@"NSData",R,N,V_recoveryEncryptionPublicKey
copyTo:
T@"NSData",R,N,V_sig
entries
T@"NSDictionary",&,N,V_categoriesByView
hasAncientEpoch
T@"NSDictionary",R,N
hasMatchingRule
T@"NSHashTable",&,V_table
hasSerialNumber
T@"NSMutableArray",&,N,V_categories
hasUuid
T@"NSMutableArray",&,N,V_custodianRecoveryKeys
includedPeerIDs
T@"NSMutableArray",&,N,V_excludeds
introducersType
T@"NSMutableArray",&,N,V_inheritedExcludedViews
T@"NSMutableArray",&,N,V_introducersByCategorys
member:
T@"NSMutableArray",&,N,V_modelToCategorys
modelId
T@"NSMutableArray",&,N,V_piggybackViews
myEpoch
T@"NSMutableArray",&,N,V_preapprovals
numberWithBool:
T@"NSMutableArray",&,N,V_redactions
T@"NSMutableDictionary",&,N,V_custodianRecoveryKeys
reasonAsString:
T@"NSMutableDictionary",&,N,V_policiesByVersion
release
T@"NSObject<OS_dispatch_queue>",&,V_queue
setBeneficiary:
T@"NSSet",&,N,V_piggybackViews
setExplanation:
T@"NSSet",&,N,V_userControllableViewList
setKey:
T@"NSSet",R,N,V_preapprovals
setOrs:
T@"NSSet",R,V_userControllableViews
setSig:
T@"NSSet",R,V_viewsToPiggybackTLKs
sponsor
T@"NSString",&,N,V_beneficiaryID
updateWithData:
T@"NSString",&,N,V_category
version
T@"NSString",&,N,V_explanation
T@"NSString",&,N,V_fieldName
T@"NSString",&,N,V_flexiblePolicyHash
T@"NSString",&,N,V_frozenPolicyHash
T@"NSString",&,N,V_key
T@"NSString",&,N,V_machineId
T@"NSString",&,N,V_modelId
T@"NSString",&,N,V_name
T@"NSString",&,N,V_osVersion
T@"NSString",&,N,V_peerID
T@"NSString",&,N,V_prefix
T@"NSString",&,N,V_regex
T@"NSString",&,N,V_sponsor
T@"NSString",&,N,V_sponsorCategory
T@"NSString",&,N,V_sponsorID
T@"NSString",&,N,V_sponsorId
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_view
T@"NSString",C,N,V_category
T@"NSString",C,N,V_prefix
T@"NSString",R,&,V_policyHash
T@"NSString",R,C
T@"NSString",R,N
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_machineID
T@"NSString",R,N,V_modelID
T@"NSString",R,N,V_osVersion
T@"NSString",R,N,V_peerID
T@"NSString",R,V_machineID
T@"NSString",R,V_model
T@"NSUUID",&,N,V_uuid
T@"TPPBAncientEpoch",&,N,V_ancientEpoch
T@"TPPBDictionaryMatchingRule",&,N,V_matchingRule
T@"TPPBDictionaryMatchingRule",&,N,V_not
T@"TPPBDictionaryMatchingRuleFieldExists",&,N,V_exists
T@"TPPBDictionaryMatchingRuleFieldRegexMatch",&,N,V_match
T@"TPPBDisposition",&,N,V_disposition
T@"TPPBDispositionDisallowedMachineID",&,N,V_disallowedMachineID
T@"TPPBDispositionDuplicateMachineID",&,N,V_duplicateMachineID
T@"TPPBPeerStableInfoSetting",&,N,V_walrus
T@"TPPBPeerStableInfoSetting",&,N,V_webAccess
T@"TPPBPeerStableInfoSetting",R,N,V_walrusSetting
T@"TPPBPeerStableInfoSetting",R,N,V_webAccess
T@"TPPBPolicyProhibits",&,N,V_policyProhibits
T@"TPPBSecureElementIdentity",&,N,V_secureElementIdentity
T@"TPPBSecureElementIdentity",R,N,V_secureElementIdentity
T@"TPPBUnknownMachineID",&,N,V_unknownMachineID
T@"TPPeerDynamicInfo",R,N,V_dynamicInfo
T@"TPPeerPermanentInfo",R,N,V_permanentInfo
T@"TPPeerStableInfo",R,N,V_stableInfo
T@"TPPolicyVersion",&,N,V_version
T@"TPPolicyVersion",R,N,V_version
T@"TPPolicyVersion",R,V_flexiblePolicyVersion
T@"TPPolicyVersion",R,V_frozenPolicyVersion
TB,N
TB,N,V_isInheritedAccount
TB,N,V_value
TB,R
TB,R,N
TB,V_isInheritedAccount
TB,V_unknownRedactions
TPPBPolicyCategoriesByViewWithView:categories:
TPPBPolicyIntroducersByCategoryWithCategory:introducers:
TPPBPolicyKeyViewMappingWithView:matchingRule:
TPPBPolicyModelToCategoryWithPrefix:category:
TQ,N,V_candidateEpoch
TQ,N,V_clock
TQ,N,V_epoch
TQ,N,V_flexiblePolicyVersion
TQ,N,V_frozenPolicyVersion
TQ,N,V_myEpoch
TQ,N,V_policyVersion
TQ,N,V_reason
TQ,R
TQ,R,N,V_clock
TQ,R,N,V_epoch
TQ,R,V_status
TQ,R,V_versionNumber
Ti,N,V_kind
Ti,N,V_reason
Ti,N,V_type
Ti,N,V_userControllableViewStatus
Ti,R,N,V_syncUserControllableViews
Ti,R,V_syncUserControllableViews
Tq,N,V_algo
T{CC_SHA256state_st=[2I][8I][16I]},N,V_ctxSHA256
T{CC_SHA512state_st=[2Q][8Q][16Q]},N,V_ctxSHA512
UTF8String
UUIDString
_algo
_ancientEpoch
_ands
_beneficiary
_beneficiaryID
_candidateCategory
_categories
_categoriesByView
_categoriesByViews
_category
_clock
_count
_ctxSHA256
_ctxSHA512
_custodianRecoveryKeys
_data
_decrypter
_deviceName
_disallowedMachineID
_disposition
_dispositions
_duplicateMachineID
_dynamicInfo
_encryptionKeyData
_encryptionPubKey
_encryptionPublicKey
_entries
_epoch
_excludedPeerIDs
_excludeds
_explanation
_fieldName
_flexiblePolicyHash
_flexiblePolicyVersion
_frozenPolicyHash
_frozenPolicyVersion
_has
_includedPeerIDs
_includeds
_inheritedExcludedViews
_introducers
_introducersByCategory
_introducersByCategorys
_isInheritedAccount
_key
_keyViewMappings
_kind
_machineID
_machineId
_match
_matchingRule
_model
_modelID
_modelId
_modelToCategory
_modelToCategorys
_modified
_myEpoch
_name
_not
_ors
_osVersion
_peerData
_peersByID
_permanentInfo
_policiesByVersion
_policyHash
_policyProhibits
_policySecrets
_policyVersion
_preapprovals
_priorityViews
_protobuf
_queue
_recoveryEncryptionPubKey
_recoveryEncryptionPublicKey
_recoverySigningPubKey
_recoverySigningPublicKey
_redactions
_regex
_secureElementIdentity
_serialNumber
_sig
_signingPubKey
_signingPublicKey
_sponsor
_sponsorCategory
_sponsorID
_sponsorId
_stableInfo
_syncUserControllableViews
_table
_type
_uncheckedVouchers
_unknownMachineID
_unknownRedactions
_userControllableViewList
_userControllableViewStatus
_userControllableViews
_uuid
_value
_version
_versionNumber
_viableBottles
_view
_viewList
_viewsToPiggybackTLKs
_vouchers
_walrusSetting
_webAccess
actualPeerWithID:error:
addCategories:
addCategoriesByView:
addCategoriesByView:toPB:
addCustodianRecoveryKeys:
addDispositions:
addEntriesFromDictionary:
addExcluded:
addIncluded:
addInheritedExcludedViews:
addIntroducersByCategory:
addIntroducersByCategory:toPB:
addKeyViewMapping:
addKeyViewMapping:toPB:
addModelToCategory:
addModelToCategory:toPB:
addObject:
addObjectsFromArray:
addOr:
addPiggybackViews:
addPolicySecrets:
addPreapprovals:
addPriorityViews:
addRedactions:
addRedactions:toPB:
addUserControllableViews:
algo
algoOfHash:
allCustodianRecoveryKeyPeerIDs
allCustodianRecoveryKeys
allMachineIDs
allObjects
allPeerIDs
allPeers
allPolicyVersions
allRegisteredPolicyVersions
allTrustedPeersWithCurrentRecoveryKey
allValues
allVouchers
allocWithZone:
ancientEpoch
andAtIndex:
andMatch:
ands
andsCount
anyTrustedPeerDistrustsOtherPeer:
appendData:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
autorelease
beneficiary
beneficiaryID
bestPolicyVersion
bestRecoveryKeyForStableInfo:dynamicInfo:vouchers:
bestWalrusAcrossTrustedPeers
bestWalrusForStableInfo:dynamicInfo:walrusStableChanges:
bestWebAccessForStableInfo:dynamicInfo:webAccessStableChanges:
bytes
calculateDynamicInfoForPeerWithID:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
calculateDynamicInfoFromModel:peer:peerPermanentInfo:peerStableInfo:startingDynamicInfo:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
canIntroduceCandidate:withSponsor:toEpoch:underPolicy:disposition:
canTrustCandidate:inEpoch:
candidateCategory
candidateEpoch
categories
categoriesAtIndex:
categoriesByView
categoriesByViewAtIndex:
categoriesByViewFromPb:
categoriesByViewType
categoriesByViews
categoriesByViewsCount
categoriesType
category
categoryForModel:
checkIntroductionForCandidate:stableInfo:withSponsorID:error:
checkSignature:matchesData:
checkSignatureWithKey:
checkVouchers
class
clearAnds
clearCategoriesByViews
clearCustodianRecoveryKeys
clearDispositions
clearExcludeds
clearIncludeds
clearInheritedExcludedViews
clearIntroducers
clearIntroducersByCategorys
clearKeyViewMappings
clearModelToCategorys
clearOrs
clearPiggybackViews
clearPolicySecrets
clearPreapprovals
clearPriorityViews
clearUserControllableViews
clock
cloneWithVersionNumber:
cloneWithVersionNumber:prependingCategoriesByView:prependingKeyViewMapping:
compare:
componentsJoinedByString:
conformsToProtocol:
considerCandidateID:withSponsorID:sponsorPermanentInfo:toExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
considerPolicyFromPeerID:stableInfo:secrets:newestPolicyDoc:error:
considerPreapprovalsSponsoredByPeer:toRecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
considerVouchersSponsoredByPeerID:sponsorPermanentInfo:toRecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDynamicInfoWithIncludedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
createRecoveryECPublicKey:
createStableInfoWithFrozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
createVoucherForCandidate:stableInfo:withSponsorID:reason:signingKeyPair:error:
ctxSHA256
ctxSHA512
currentHandler
custodianPeerWithID:
custodianRecoveryKeyWithData:sig:keyFactory:
custodianRecoveryKeys
custodianRecoveryKeysAtIndex:
custodianRecoveryKeysCount
custodianRecoveryKeysType
data
dataUsingEncoding:
debugDescription
decodeBoolForKey:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decryptData:withKey:error:
decrypter
defaultTable
deletePeerWithID:
description
deviceName
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
disallowedMachineID
disposition
dispositions
dispositionsAtIndex:
dispositionsCount
dispositionsType
doesVoucherMatchRecoveryKeys:
duplicateMachineID
dynamicInfo
dynamicInfoForJoiningPeerID:peerPermanentInfo:peerStableInfo:sponsorID:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
dynamicInfoPBWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:
dynamicInfoWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
dynamicInfoWithData:sig:
encodeBool:forKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeProtobuf
encodeSubjectPublicKeyInfo
encodeWithCoder:
encryptData:error:
encryptionKeyData
encryptionPubKey
encryptionPublicKey
entryFor:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
epoch
errorWithDomain:code:description:
errorWithDomain:code:description:underlying:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
excludedAtIndex:
excludedType
excludeds
excludedsCount
exists
explanation
falseMatch
fieldExists:
fieldMatch:fieldRegex:
fieldName
filterPeerList:byMachineIDs:dispositions:
filterPreapprovals:forExistingPeers:
filteredArrayUsingPredicate:
finalHash
findCustodianRecoveryKeyWithUUID:
flexiblePolicyHash
flexiblePolicyVersion
frozenPolicyHash
frozenPolicyVersion
getDynamicInfoForPeerWithID:
getPeerIDsTrustedByPeerWithDynamicInfo:toAccessView:error:
getPeerIDsTrustedByPeerWithID:toAccessView:error:
getStableInfoForPeerWithID:
getViewsForCRK:donorPermanentInfo:donorStableInfo:error:
getViewsForPeer:stableInfo:error:
handleFailureInMethod:object:file:lineNumber:description:
hasBeneficiary
hasCandidateCategory
hasCandidateEpoch
hasCategory
hasClock
hasDeviceName
hasDisallowedMachineID
hasDisposition
hasDuplicateMachineID
hasEncryptionPubKey
hasEncryptionPublicKey
hasEpoch
hasExists
hasExplanation
hasFieldName
hasFlexiblePolicyHash
hasFlexiblePolicyVersion
hasFrozenPolicyHash
hasFrozenPolicyVersion
hasIsInheritedAccount
hasKey
hasMachineId
hasMatch
hasModelId
hasMyEpoch
hasNot
hasOsVersion
hasPeerData
hasPeerID
hasPeerIdentifier
hasPeerWithID:
hasPolicyProhibits
hasPolicyVersion
hasPotentiallyTrustedPeerPreapprovingKey:
hasPotentiallyTrustedPeerWithSigningKey:
hasPrefix
hasPrefix:
hasReason
hasRecoveryEncryptionPublicKey
hasRecoverySigningPublicKey
hasRegex
hasSecret
hasSecureElementIdentity
hasSigningPubKey
hasSigningPublicKey
hasSponsor
hasSponsorCategory
hasSponsorId
hasUnknownMachineID
hasUserControllableViewStatus
hasValue
hasWalrus
hasWebAccess
hash
hashWithAlgo:ofBytes:len:
hashWithAlgo:ofData:
includedAtIndex:
includedType
includeds
includedsCount
inheritedExcludedViews
inheritedExcludedViewsAtIndex:
inheritedExcludedViewsCount
inheritedExcludedViewsType
init
initWithAlgo:
initWithCapacity:
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:data:sig:
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
initWithCoder:
initWithCurve:
initWithData:
initWithData:sig:
initWithData:signature:
initWithData:specifier:error:
initWithDecrypter:
initWithEntries:
initWithHash:data:
initWithIdentifier:
initWithKeySpecifier:digestOperation:
initWithMachineID:modelID:epoch:signingPubKey:encryptionPubKey:data:sig:peerID:
initWithMachineID:status:modified:
initWithModel:version:viewList:priorityViews:userControllableViews:syncUserControllableViews:viewsToPiggybackTLKs:keyViewMapping:isInheritedAccount:
initWithObj:data:sig:
initWithObjects:count:
initWithOptions:capacity:
initWithPattern:options:error:
initWithPermanentInfo:
initWithPermanentInfo:stableInfo:dynamicInfo:
initWithSigningKeyData:encryptionKeyData:
initWithStableInfo:
initWithUUID:signingPublicKey:encryptionPublicKey:kind:data:sig:peerID:
initWithUUID:signingPublicKey:encryptionPublicKey:signingKeyPair:kind:error:
initWithUUIDString:
initWithVersion:hash:
initWithVersion:modelToCategory:categoriesByView:introducersByCategory:redactions:keyViewMapping:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:hashAlgo:
initWithViableBottles:partialBottles:
introducers
introducersAtIndex:
introducersByCategory
introducersByCategoryAtIndex:
introducersByCategoryFromPb:
introducersByCategoryType
introducersByCategorys
introducersByCategorysCount
introducersCount
invertMatch:error:
isCustodianRecoveryKeyTrusted:
isEqual:
isEqualKeyViewMapping:other:
isEqualToCategoryRule:
isEqualToData:
isEqualToDictionary:
isEqualToPeerDynamicInfo:
isEqualToPeerStableInfo:
isEqualToPolicy:
isEqualToPolicyDocument:
isEqualToSet:
isEqualToString:
isEqualToVoucher:
isInheritedAccount
isKindOfClass:
isMemberOfClass:
isRecoveryKeyDistrusted:
isRecoveryKeyEnrolled
isRecoveryKeyExcluded:
isSubsetOfSet:
isSyncingEnabledForView:
keyFromSPKI:
keyViewMapping
keyViewMappingAtIndex:
keyViewMappingType
keyViewMappingsCount
keyWithSubjectPublicKeyInfo:
kind
kindAsString:
latestEpochAmongPeerIDs:
length
longValue
machineID
machineIDsInStatus:
machineId
mapDictionaryToView:
match
matches:error:
matchingRule
maxClock
mergeFrom:
minusSet:
model
modelToCategoryAtIndex:
modelToCategoryFromPb:
modelToCategoryType
modelToCategorys
modelToCategorysCount
modified
mungeModelID:
mutableBytes
mutableCopy
name
notMatch:
numberOfMatchesInString:options:range:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsPassingTest:
orAtIndex:
orMatch:
orType
orsCount
osVersion
partialBottles
pbToNullable
peerCountsByMachineID
peerData
peerID
peerIDForData:sig:peerIDHashAlgo:
peerIDThatTrustsCustodianRecoveryKeys:canIntroducePeer:stableInfo:
peerIDThatTrustsRecoveryKeys:canIntroducePeer:stableInfo:
peerIdentifier
peerInCategory:canAccessView:
peerWithID:
peerWithUpdatedDynamicInfo:error:
peerWithUpdatedStableInfo:error:
peersByID
peersWithMachineID:
performAndMatch:error:
performOrMatch:error:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permanentInfo
permanentInfoWithMachineID:modelID:epoch:signingKeyPair:encryptionKeyPair:peerIDHashAlgo:error:
permanentInfoWithPeerID:data:sig:keyFactory:
piggybackViews
piggybackViewsAtIndex:
piggybackViewsCount
piggybackViewsType
policiesByVersion
policyDocWithHash:data:
policyForPeerIDs:candidatePeerID:candidateStableInfo:error:
policyHash
policySecrets
policySecretsAtIndex:
policySecretsCount
policySecretsType
policyVersion
policyWithModelToCategory:categoriesByView:introducersByCategory:keyViewMapping:unknownRedactions:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:version:
policyWithSecrets:decrypter:error:
policyWithVersion:
preapprovals
preapprovalsAtIndex:
preapprovalsCount
preapprovalsFromKeys:
preapprovalsType
predicateWithBlock:
prefix
priorityViews
priorityViewsAtIndex:
priorityViewsCount
priorityViewsType
protobuf
publicKey
queue
readFrom:
reason
recoveryEncryptionPubKey
recoveryEncryptionPublicKey
recoveryKeyPeerID:
recoverySigningPubKey
recoverySigningPublicKey
recursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:withPeersTrustedBySponsorID:currentMachineIDs:forEpoch:
redactionWithEncrypter:modelToCategory:categoriesByView:introducersByCategory:keyViewMapping:error:
redactions
redactionsAtIndex:
redactionsFromPb:
redactionsType
regex
registerCustodianRecoveryKey:
registerPeerWithPermanentInfo:
registerPolicyDocument:
registerVoucher:
regularExpressionWithPattern:options:error:
removeAllObjects
removeCustodianRecoveryKey:
removeObject:
removeObjectForKey:
removeRecoveryKey
resetWithAlgo:
respondsToSelector:
retain
retainCount
ruleWithPrefix:category:
secret
secureElementIdentity
self
serialNumber
setAlgo:
setAncientEpoch:
setAnds:
setBeneficiaryID:
setByAddingObjectsFromSet:
setCandidateCategory:
setCandidateEpoch:
setCategories:
setCategoriesByView:
setCategoriesByViews:
setCategory:
setClock:
setCtxSHA256:
setCtxSHA512:
setCustodianRecoveryKeys:
setData:
setDecrypter:
setDeviceName:
setDisallowedMachineID:
setDispositions:
setDuplicateMachineID:
setEncryptionPubKey:
setEncryptionPublicKey:
setEpoch:
setExcludeds:
setExists:
setFieldName:
setFlexiblePolicyHash:
setFlexiblePolicyVersion:
setFrozenPolicyHash:
setFrozenPolicyVersion:
setHasCandidateEpoch:
setHasClock:
setHasEpoch:
setHasFlexiblePolicyVersion:
setHasFrozenPolicyVersion:
setHasIsInheritedAccount:
setHasKind:
setHasMyEpoch:
setHasPolicyVersion:
setHasReason:
setHasType:
setHasUserControllableViewStatus:
setHasValue:
setIncludeds:
setInheritedExcludedViews:
setIntroducersByCategory:
setIntroducersByCategorys:
setIsInheritedAccount:
setKeyViewMapping:
setKeyViewMappings:
setKind:
setMachineId:
setMatch:
setMatchingRule:
setModelId:
setModelToCategory:
setModelToCategorys:
setMyEpoch:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setOsVersion:
setPeerData:
setPeerID:
setPeerIdentifier:
setPeersByID:
setPiggybackViews:
setPoliciesByVersion:
setPolicyProhibits:
setPolicySecrets:
setPolicyVersion:
setPreapprovals:
setPrefix:
setPriorityViews:
setQueue:
setReason:
setRecoveryEncryptionPubKey:
setRecoveryKeys:
setRecoverySigningPubKey:
setRecoverySigningPublicKey:
setRedactions:
setRegex:
setSecret:
setSecureElementIdentity:
setSerialNumber:
setSigningPubKey:
setSigningPublicKey:
setSponsor:
setSponsorCategory:
setSponsorID:
setSponsorId:
setTable:
setType:
setUncheckedVouchers:
setUnknownMachineID:
setUnknownRedactions:
setUserControllableViewList:
setUserControllableViewStatus:
setUserControllableViews:
setUuid:
setValue:
setVersion:
setView:
setVouchers:
setWalrus:
setWebAccess:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
sign:withKey:error:
signature
signatureForData:withError:
signingKeyData
signingPubKey
signingPublicKey
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
sortedArrayUsingSelector:
spki
sponsorID
sponsorId
stableInfo
status
statusOfPeerWithID:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
stringWithString:
superclass
supportsSecureCoding
syncUserControllableViews
syncUserControllableViewsAsBoolean
syncingPolicyForModel:syncUserControllableViews:isInheritedAccount:error:
table
throwInvalidAlgo
trueMatch
trustedPeerIDs
trustedPeerInCategory:canIntroduceCategory:
trustedPeers
type
typeAsString:
uncheckedVouchers
unionSet:
unknownMachineID
unknownRedactions
untrustedPeerIDs
untrustedPeerIDsFromTrustedPeers
updateDynamicInfo:forPeerWithID:error:
updateStableInfo:forPeerWithID:error:
updateWithBytes:len:
userControllableViewList
userControllableViewStatus
userControllableViewStatusAsString:
userControllableViews
userControllableViewsAtIndex:
userControllableViewsCount
userControllableViewsType
userViewSyncabilityConsensusAmongTrustedPeers:
uuid
validatePeerWithPreApproval:sponsor:
value
vectorClock
verify:withKey:error:
verifyVoucherSignature:
versionNumber
viableBottles
viablePeerCountsByModelID
view
viewList
viewsForModel:error:
viewsToPiggybackTLKs
voucherInfoWithData:sig:
vouchers
walrus
walrusSetting
webAccess
writeTo:
zone
@32@0:8@16@24
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
Q16@0:8
@16@0:8
v16@0:8
@"NSString"
@56@0:8Q16@24@32@40@48
@72@0:8Q16@24@32@40@48@56^@64
@40@0:8@16@24@32
@24@0:8^{_NSZone=}16
@"NSSet"
@"NSData"
@92@0:8@16@24@32@40B48@52@60@68@76@84
B32@0:8@16@24
@40@0:8@16i24B28^@32
@32@0:8@16^@24
v20@0:8B16
@"TPPolicyVersion"
@"NSArray"
@"NSDictionary"
Q24@0:8@16
@24@0:8Q16
i24@0:8@16
B40@0:8@16@24^@32
@128@0:8@16@24@32i40@44@52@60@68@76@84@92@100@108B116^@120
@64@0:8@16@24@32@40@48^@56
B32@0:8@16Q24
B56@0:8@16@24Q32@40@48
B48@0:8@16@24@32^@40
@64@0:8@16@24@32Q40@48^@56
@80@0:8@16@24@32@40@48@56@64Q72
v72@0:8@16@24@32@40@48@56Q64
v64@0:8@16@24@32@40@48Q56
@72@0:8@16@24@32@40@48@56^@64
@104@0:8@16@24@32@40@48@56@64@72@80@88^@96
v32@0:8@16@24
@80@0:8@16@24@32@40@48@56@64^@72
@48@0:8@16@24@32^@40
B56@0:8@16@24@32^@40^@48
@40@0:8@16@24^@32
@"NSMutableDictionary"
@"NSMutableSet"
@"<TPDecrypter>"
v24@0:8Q16
{?="clock"b1"value"b1}
@104@0:8Q16@24@32@40@48@56@64@72@80@88q96
@40@0:8Q16@24@32
@40@0:8@16Q24@32
@"NSDate"
q24@0:8@16
@32@0:8q16@24
@40@0:8q16r^v24Q32
@24@0:8q16
v24@0:8q16
v32@0:8r^v16Q24
q16@0:8
{CC_SHA256state_st=[2I][8I][16I]}16@0:8
v120@0:8{CC_SHA256state_st=[2I][8I][16I]}16
{CC_SHA512state_st=[2Q][8Q][16Q]}16@0:8
v224@0:8{CC_SHA512state_st=[2Q][8Q][16Q]}16
{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}
{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}
#16@0:8
i16@0:8
v20@0:8i16
@20@0:8i16
@"NSMutableArray"
@"TPPBDictionaryMatchingRuleFieldExists"
@"TPPBDictionaryMatchingRuleFieldRegexMatch"
@"TPPBDictionaryMatchingRule"
{?="type"b1}
@136@0:8Q16@24@32@40i48@52@60@68@76@84@92@100@108B116@120@128
@136@0:8Q16@24@32@40i48@52@60@68@76@84@92@100@108@116B124^@128
@"TPPBSecureElementIdentity"
@"TPPBPeerStableInfoSetting"
@40@0:8@16@24q32
@68@0:8@16@24@32i40@44@52@60
@60@0:8@16@24@32@40i48^@52
@"NSUUID"
@"<TPPublicKey>"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<TPPublicKey>"24@0:8@"NSData"16
@72@0:8@16@24Q32@40@48q56^@64
@48@0:8@16@24@32@40
@80@0:8@16@24Q32@40@48@56@64@72
@32@0:8Q16@24
@"NSData"16@0:8
B32@0:8@"NSData"16@"NSData"24
@"<TPPublicKey>"16@0:8
@"NSData"32@0:8@"NSData"16^@24
@"TPPeerPermanentInfo"
@"TPPeerStableInfo"
@"TPPeerDynamicInfo"
@40@0:8@16q24@32
@48@0:8@16q24@32@40
@56@0:8Q16@24@32@40^@48
@"TPPBDisposition"
{?="candidateEpoch"b1"myEpoch"b1}
{?="policyVersion"b1}
@"TPPBAncientEpoch"
@"TPPBDispositionDisallowedMachineID"
@"TPPBDispositionDuplicateMachineID"
@"TPPBPolicyProhibits"
@"TPPBUnknownMachineID"
{?="epoch"b1}
B32@0:8@16^@24
{?="clock"b1}
{?="kind"b1}
{?="clock"b1"flexiblePolicyVersion"b1"frozenPolicyVersion"b1"userControllableViewStatus"b1"isInheritedAccount"b1}
@80@0:8@16@24@32@40@48i56@60@68B76
{?="reason"b1}
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
