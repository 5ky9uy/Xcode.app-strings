@(#)PROGRAM:TrustedPeers  PROJECT:Security-1
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>keychain-access-groups</key>
<array>
<string>com.apple.security.securityUnitTests</string>
</array>
</dict>
</plist>
prefix
T@"NSString",C,N,V_prefix
category
T@"NSString",C,N,V_category
supportsSecureCoding
TB,R
<TPCategoryRule: %@:%@>
data
T@"NSData",&,N,V_data
T@"NSData",&,N,V_sig
dispositions
T@"NSDictionary",&,N,V_dispositions
clock
TQ,R,N,V_clock
includedPeerIDs
T@"NSSet",R,N,V_includedPeerIDs
excludedPeerIDs
T@"NSSet",R,N,V_excludedPeerIDs
preapprovals
T@"NSSet",R,N,V_preapprovals
TPPB.PeerDynamicInfo
v32@?0@"TPPBDispositionEntry"8Q16^B24
v32@?0@"NSString"8@"TPPBDisposition"16^B24
modelToCategory
T@"NSArray",&,N,V_modelToCategory
categoriesByView
T@"NSDictionary",&,N,V_categoriesByView
introducersByCategory
T@"NSDictionary",&,N,V_introducersByCategory
keyViewMapping
T@"NSArray",&,N,V_keyViewMapping
version
TQ,N,V_version
unknownRedactions
TB,V_unknownRedactions
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
hasFieldName
TB,R,N
fieldName
T@"NSString",&,N,V_fieldName
%@ %@
peersByID
T@"NSMutableDictionary",&,N,V_peersByID
policiesByVersion
T@"NSMutableDictionary",&,N,V_policiesByVersion
uncheckedVouchers
T@"NSMutableSet",&,N,V_uncheckedVouchers
vouchers
T@"NSMutableSet",&,N,V_vouchers
decrypter
T@"<TPDecrypter>",&,N,V_decrypter
recoverySigningPubKey
T@"NSData",&,N,V_recoverySigningPubKey
recoveryEncryptionPubKey
T@"NSData",&,N,V_recoveryEncryptionPubKey
cachedViableBottles
T@"NSArray",&,N,V_cachedViableBottles
cachedPartialViableBottles
T@"NSArray",&,N,V_cachedPartialViableBottles
v32@?0@"NSString"8@"TPPeer"16^B24
v24@?0@"NSString"8^B16
peerExpectsHash
policyDocHash
B24@?0@8@"NSDictionary"16
B24@?0@"NSString"8^B16
No peer for given peerID: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Security_Sim/Security-59306.2.6/keychain/trust/TrustedPeers/TPModel.m
voucher must not be nil
<Unknown File>
unknown
Policy prohibits introducing candidate
unrecognized modelID: %@
com.apple.security.trustedpeers.peerstatus
(%@)
extra: %lx
self
ancient
outdated
excluded
full
partial
none_set
TPPB.PeerPermanentInfo
No peer for given peerID
permanentInfo must not be nil
policyDoc must not be nil
com.apple.security.trustedpeers.policy
policyVersion
TQ,N,V_policyVersion
policyHash
T@"NSString",&,N,V_policyHash
protobuf
T@"NSData",&,N,V_protobuf
redactions
T@"NSDictionary",&,N,V_redactions
machineID
T@"NSString",R,V_machineID
status
TQ,R,V_status
modified
T@"NSDate",R,V_modified
<TPMachineID: %@ %@ %@>
disallowed
allowed
entries
T@"NSArray",R,V_entries
<TPMachineIDList: %@>
algo
Tq,N,V_algo
ctxSHA256
T{CC_SHA256state_st=[2I][8I][16I]},N,V_ctxSHA256
ctxSHA512
T{CC_SHA512state_st=[2Q][8Q][16Q]},N,V_ctxSHA512
Invalid TPHash algorithm
InvalidTPHashAlgo
%@:%@
SHA512
SHA384
SHA256
SHA224
SHA512:
SHA384:
SHA256:
SHA224:
hasRegex
regex
T@"NSString",&,N,V_regex
hasType
TB,N
type
Ti,N,V_type
ands
T@"NSMutableArray",&,N,V_ands
T@"NSMutableArray",&,N,V_ors
hasNot
T@"TPPBDictionaryMatchingRule",&,N,V_not
hasMatch
match
T@"TPPBDictionaryMatchingRuleFieldRegexMatch",&,N,V_match
hasExists
exists
T@"TPPBDictionaryMatchingRuleFieldExists",&,N,V_exists
(unknown: %i)
FALSE_RULE
TRUE_RULE
FIELD_EXISTS
MATCH_RULE
NOT_RULE
OR_RULE
AND_RULE
UNKNOWN
TQ,N,V_clock
policySecrets
T@"NSDictionary",&,N,V_policySecrets
recoverySigningPublicKey
T@"NSData",&,N,V_recoverySigningPublicKey
recoveryEncryptionPublicKey
T@"NSData",&,N,V_recoveryEncryptionPublicKey
deviceName
T@"NSString",R,N,V_deviceName
serialNumber
T@"NSString",R,N,V_serialNumber
osVersion
T@"NSString",R,N,V_osVersion
TPPB.PeerStableInfo
v32@?0@"NSString"8@"NSData"16^B24
T@"NSString",&,N,V_machineID
modelID
T@"NSString",&,N,V_modelID
epoch
TQ,N,V_epoch
signingPubKey
T@"<TPPublicKey>",&,N,V_signingPubKey
encryptionPubKey
T@"<TPPublicKey>",&,N,V_encryptionPubKey
peerID
T@"NSString",&,N,V_peerID
hasMatchingRule
matchingRule
T@"TPPBDictionaryMatchingRule",&,N,V_matchingRule
hasView
view
T@"NSString",&,N,V_view
matching_rule
signingSPKI
T@"NSData",R,&,V_signingSPKI
encryptionSPKI
T@"NSData",R,&,V_encryptionSPKI
viableBottles
T@"NSArray",R,&,V_viableBottles
partialBottles
T@"NSArray",R,&,V_partialBottles
permanentInfo
T@"TPPeerPermanentInfo",&,N,V_permanentInfo
stableInfo
T@"TPPeerStableInfo",&,N,V_stableInfo
dynamicInfo
T@"TPPeerDynamicInfo",&,N,V_dynamicInfo
T@"NSString",R,N
wrappedPrivateKeys
T@"NSData",&,N,V_wrappedPrivateKeys
trustedPeerIDs
T@"NSSet",R,N
reason
TQ,N,V_reason
beneficiaryID
T@"NSString",&,N,V_beneficiaryID
sponsorID
T@"NSString",&,N,V_sponsorID
TPPB.Voucher
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Security_Sim/Security-59306.2.6/keychain/trust/TrustedPeers/TPVoucher.m
Invalid parameter not satisfying: %@
v8@?0
com.apple.security.trustedpeers
model
hasPeerID
hasDisposition
disposition
T@"TPPBDisposition",&,N,V_disposition
hasMyEpoch
myEpoch
TQ,N,V_myEpoch
hasCandidateEpoch
candidateEpoch
TQ,N,V_candidateEpoch
candidate_epoch
my_epoch
hasPolicyVersion
hasSponsorId
sponsorId
T@"NSString",&,N,V_sponsorId
hasSponsorCategory
sponsorCategory
T@"NSString",&,N,V_sponsorCategory
hasCandidateCategory
candidateCategory
T@"NSString",&,N,V_candidateCategory
hasExplanation
explanation
T@"NSString",&,N,V_explanation
candidate_category
sponsor_category
sponsor_id
policy_version
hasAncientEpoch
ancientEpoch
T@"TPPBAncientEpoch",&,N,V_ancientEpoch
hasPolicyProhibits
policyProhibits
T@"TPPBPolicyProhibits",&,N,V_policyProhibits
hasUnknownMachineID
unknownMachineID
T@"TPPBUnknownMachineID",&,N,V_unknownMachineID
hasDuplicateMachineID
duplicateMachineID
T@"TPPBDispositionDuplicateMachineID",&,N,V_duplicateMachineID
hasDisallowedMachineID
disallowedMachineID
T@"TPPBDispositionDisallowedMachineID",&,N,V_disallowedMachineID
hasEpoch
hasSigningPubKey
T@"NSData",&,N,V_signingPubKey
hasEncryptionPubKey
T@"NSData",&,N,V_encryptionPubKey
hasMachineId
machineId
T@"NSString",&,N,V_machineId
hasModelId
modelId
T@"NSString",&,N,V_modelId
model_id
machine_id
encryption_pub_key
signing_pub_key
CKKSMatcherError
No 'not' subrule present
No 'or' subrules present
No 'and' subrules present
No 'match' subrule present
No 'exists' subrule present
Rule type is unknown
Rule has no type
Rule missing field name
hasClock
includeds
T@"NSMutableArray",&,N,V_includeds
excludeds
T@"NSMutableArray",&,N,V_excludeds
T@"NSMutableArray",&,N,V_dispositions
T@"NSMutableArray",&,N,V_preapprovals
included
hasName
name
T@"NSString",&,N,V_name
hasSecret
secret
T@"NSData",&,N,V_secret
hasPolicyHash
hasOsVersion
T@"NSString",&,N,V_osVersion
hasDeviceName
T@"NSString",&,N,V_deviceName
hasRecoverySigningPublicKey
hasRecoveryEncryptionPublicKey
hasSerialNumber
T@"NSString",&,N,V_serialNumber
T@"NSMutableArray",&,N,V_policySecrets
policy_secrets
serial_number
recovery_encryption_public_key
recovery_signing_public_key
device_name
os_version
policy_hash
hasReason
Ti,N,V_reason
hasBeneficiary
beneficiary
T@"NSString",&,N,V_beneficiary
hasSponsor
sponsor
T@"NSString",&,N,V_sponsor
RECOVERY_KEY
SECURE_CHANNEL
SOS_UPGRADE
SAME_DEVICE
RESTORE
modelToCategorys
T@"NSMutableArray",&,N,V_modelToCategorys
categoriesByViews
T@"NSMutableArray",&,N,V_categoriesByViews
introducersByCategorys
T@"NSMutableArray",&,N,V_introducersByCategorys
T@"NSMutableArray",&,N,V_redactions
keyViewMappings
T@"NSMutableArray",&,N,V_keyViewMappings
categories
T@"NSMutableArray",&,N,V_categories
hasCategory
T@"NSString",&,N,V_category
introducers
T@"NSMutableArray",&,N,V_introducers
hasPrefix
T@"NSString",&,N,V_prefix
hasKey
T@"NSString",&,N,V_key
hasValue
value
T@"NSData",&,N,V_value
From our sponsor (%@), included: %@ excluded: %@
Trusting %@ due to preapproval
Not including %@ even through they are preapproved
Unable to create initial dynamic info for peer: %@
Peer (%@) has an unknown machine ID (%@)
Peer (%@) has an unknown machine ID (%@), but leaving disposition as 'disallowed'
Peer (%@) has a disallowed machine ID (%@)
Calculating dynamic info for peer %@ with peer set %@
Adding peer IDs: %@
Removing peer IDs: %@
Peer (%@) excludes itself
Initial sets: included:%@ excluded:%@
No peer: %@
After removals: included:%@ excluded:%@
Beginning sponsor checking; machine ID list: %@
After sponsor checking: included:%@ excluded:%@
After voucher checking: included:%@ excluded:%@
Preapproved keys: %@
New preapproval list: %@
Using existing preapproval list: %@
Final preapproval list: %@
After preapproval checking: included:%@ excluded:%@
Remote peers with the ego machine ID: %@
No local machine ID; not filtering peers
After machine ID checking: included:%@ excluded:%@
Peer (%@) unknown, distrusting by default
Peer (%@) is using old version, not distrusting unknown peers
Peer distrusts self
Analysis didn't actually change anything, returning old dynamicInfo
After exclusion filtering: included:%@ excluded:%@
Returning new dynamicinfo: %@
Peer %@ preapproved
No peer for ID %@
Including information from sponsor (%@): included: %@ excluded: %@
Inspecting voucher claiming to be from sponsor: %@
voucher: peer (%@) already trusted
voucher: peer (%@) already excluded
voucher: no peer for id %@
voucher: unknown machineID %@ %@
voucher: disallowed machineID %@ %@
voucher: failed to fetch policy: %@
voucher: %@ presented valid voucher from %@
voucher: voucher has failed recovery key signature checking: %@
voucher: voucher has failed signature checking: %@
can't update dynamic info for peerID %@: peer does not exist
failed to update dynamic info for peerID %@: %d
can't update stable info for peerID %@: peer does not exist
failed to update stable info for peerID %@: %d
status: peerID %@ has no included peer IDs?
status: peerID %@ trusts itself
status: peerID %@ has no peer in model
status: peer %@ trusts %@
status: peer %@ doesn't trust %@: %@
status: peer %@ excludes %@
status: peer %@ outdates %@
status: peer %@ far outdates %@
status: peer %@ excludes itself
status: peer %@ trust status is: %@
registering peer %@: %@
TPCategoryRule
NSSecureCoding
NSCoding
TPPeerDynamicInfo
TPPolicy
NSObject
TPPBDictionaryMatchingRuleFieldExists
NSCopying
TPModel
TPPolicyDocument
TPMachineID
TPMachineIDList
TPHashBuilder
TPPBDictionaryMatchingRuleFieldRegexMatch
TPPBDictionaryMatchingRule
TPPeerStableInfo
TPPublicKeyFactory
TPECPublicKeyFactory
TPPeerPermanentInfo
TPPBPolicyKeyViewMapping
TPRecoveryKeyPair
TPCachedViableBottles
TPPublicKey
TPKeyPair
TPPeer
TPPBDispositionDuplicateMachineID
UsefulConstructors
TPVoucher
TPPBDispositionEntry
TPPBDispositionDisallowedMachineID
TPPBAncientEpoch
TPPBPolicyProhibits
TPPBUnknownMachineID
TPPBDisposition
TPPBPeerPermanentInfo
TPDictionaryMatchingRule
TPPBDictionaryMatchingRules
SimpleConstructor
TPPBPeerDynamicInfo
TPPBPolicySecret
TPPBPeerStableInfo
TPPBVoucher
TPPBPolicyDocument
TPPBPolicyCategoriesByView
TPPBPolicyIntroducersByCategory
TPPBPolicyModelToCategory
TPPBPolicyRedaction
_prefix
_category
supportsSecureCoding
encodeWithCoder:
initWithCoder:
isEqualToCategoryRule:
isEqual:
hash
description
.cxx_destruct
prefix
setPrefix:
category
setCategory:
decodeObjectOfClass:forKey:
encodeObject:forKey:
stringWithFormat:
isEqualToString:
ruleWithPrefix:category:
_clock
_includedPeerIDs
_excludedPeerIDs
_dispositions
_preapprovals
_data
_sig
initWithObj:data:sig:
copyWithZone:
checkSignatureWithKey:
isEqualToPeerDynamicInfo:
dictionaryRepresentation
clock
includedPeerIDs
excludedPeerIDs
dispositions
setDispositions:
preapprovals
data
setData:
setSig:
initWithData:
isEqualToData:
dynamicInfoPBWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:
copy
enumerateObjectsUsingBlock:
setObject:forKeyedSubscript:
setWithArray:
dynamicInfoWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
dynamicInfoWithData:sig:
enumerateKeysAndObjectsUsingBlock:
addObject:
mutableCopy
allObjects
_unknownRedactions
_modelToCategory
_categoriesByView
_introducersByCategory
_keyViewMapping
_version
version
unknownRedactions
categoryForModel:
trustedPeerInCategory:canIntroduceCategory:
peerInCategory:canAccessView:
viewsForModel:
excludedViewsForModel:
mapKeyToView:
debugDescription
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
modelToCategory
setModelToCategory:
categoriesByView
setCategoriesByView:
introducersByCategory
setIntroducersByCategory:
keyViewMapping
setKeyViewMapping:
setVersion:
setUnknownRedactions:
decodeBoolForKey:
decodeObjectOfClasses:forKey:
arrayWithObjects:count:
decodeInt64ForKey:
encodeInt64:forKey:
encodeBool:forKey:
countByEnumeratingWithState:objects:count:
containsObject:
objectForKeyedSubscript:
hasPrefix:
policyWithModelToCategory:categoriesByView:introducersByCategory:keyViewMapping:unknownRedactions:version:
_fieldName
hasFieldName
readFrom:
writeTo:
copyTo:
mergeFrom:
fieldName
setFieldName:
allocWithZone:
setObject:forKey:
dictionary
_peersByID
_policiesByVersion
_uncheckedVouchers
_vouchers
_decrypter
_recoverySigningPubKey
_recoveryEncryptionPubKey
_cachedViableBottles
_cachedPartialViableBottles
initWithDecrypter:
latestEpochAmongPeerIDs:
registerPolicyDocument:
policyWithVersion:
allPeerIDs
allPeers
allVouchers
registerPeerWithPermanentInfo:
deletePeerWithID:
hasPeerWithID:
peerWithID:
actualPeerWithID:error:
allMachineIDs
peerCountsByModelID
hasPeerPreapprovingKey:
validatePeerWithPreApproval:sponsor:
statusOfPeerWithID:
setWrappedPrivateKeys:forPeerWithID:error:
getStableInfoForPeerWithID:
getDynamicInfoForPeerWithID:
updateStableInfo:forPeerWithID:error:
createStableInfoWithPolicyVersion:policyHash:policySecrets:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:error:
updateDynamicInfo:forPeerWithID:error:
maxClock
createDynamicInfoWithIncludedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
canTrustCandidate:inEpoch:
canIntroduceCandidate:withSponsor:toEpoch:underPolicy:disposition:
checkIntroductionForCandidate:stableInfo:withSponsorID:error:
createVoucherForCandidate:stableInfo:withSponsorID:reason:signingKeyPair:error:
validateVoucherForPeer:sponsor:
registerVoucher:
checkVouchers
considerCandidateID:withSponsorID:sponsorPermanentInfo:toExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
considerVouchersSponsoredByPeerID:sponsorPermanentInfo:toReecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
recursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:withPeersTrustedBySponsorID:currentMachineIDs:forEpoch:
calculateDynamicInfoForPeerWithID:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
calculateDynamicInfoFromModel:peer:peerPermanentInfo:peerStableInfo:startingDynamicInfo:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
filterPeerList:byMachineIDs:dispositions:
peersWithMachineID:
filterPreapprovals:forExistingPeers:
dynamicInfoForJoiningPeerID:peerPermanentInfo:peerStableInfo:sponsorID:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
policyForPeerIDs:error:
policyForPeerIDs:candidatePeerID:candidateStableInfo:error:
considerPolicyFromPeerID:stableInfo:secrets:newestPolicyDoc:error:
getViewsForPeer:stableInfo:inViews:error:
getPeerIDsTrustedByPeerWithID:toAccessView:error:
getPeerIDsTrustedByPeerWithDynamicInfo:toAccessView:error:
vectorClock
doesPeerRecoveryKeyMatchPeers:
bestRecoveryKeyWithDynamicInfo:
untrustedPeerIDs
peerIDThatTrustsRecoveryKeys:
isRecoveryKeyEnrolled
setRecoveryKeys:
currentCachedViableBottlesSet
setViableBottles:
clearViableBottles
peersByID
setPeersByID:
policiesByVersion
setPoliciesByVersion:
uncheckedVouchers
setUncheckedVouchers:
vouchers
setVouchers:
decrypter
setDecrypter:
recoverySigningPubKey
setRecoverySigningPubKey:
recoveryEncryptionPubKey
setRecoveryEncryptionPubKey:
cachedViableBottles
setCachedViableBottles:
cachedPartialViableBottles
setCachedPartialViableBottles:
array
unionSet:
numberWithUnsignedLongLong:
minusSet:
errorWithDomain:code:userInfo:
dictionaryWithObjects:forKeys:count:
setWithObject:
count
preapprovalsFromKeys:
allValues
filteredArrayUsingPredicate:
predicateWithBlock:
removeObject:
allKeys
isEqualToDictionary:
isEqualToSet:
objectsPassingTest:
length
setByAddingObjectsFromSet:
addObjectsFromArray:
dictionaryWithDictionary:
setWithSet:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
stringWithUTF8String:
componentsJoinedByString:
sortedArrayUsingSelector:
compare:
numberWithInt:
numberWithLong:
longValue
objectForKey:
removeObjectForKey:
setWithCapacity:
_policyVersion
_policyHash
_protobuf
_redactions
policyWithSecrets:decrypter:error:
isEqualToPolicyDocument:
policyVersion
setPolicyVersion:
policyHash
setPolicyHash:
protobuf
setProtobuf:
redactions
setRedactions:
isEqualKeyViewMapping:other:
introducersByCategoryFromPb:
categoriesByViewFromPb:
modelToCategoryFromPb:
decryptData:withKey:error:
modelToCategoryRulesFromArray:
dictionaryOfSetsFromDictionaryOfArrays:
redactionsFromPb:
addModelToCategory:toPB:
addCategoriesByView:toPB:
addIntroducersByCategory:toPB:
addRedactions:toPB:
addKeyViewMapping:toPB:
policyDocWithHash:data:
policyDocumentWithVersion:modelToCategory:categoriesByView:introducersByCategory:redactions:keyViewMapping:hashAlgo:error:
redactionWithEncrypter:modelToCategory:categoriesByView:introducersByCategory:keyViewMapping:error:
encryptData:error:
dictionaryWithCapacity:
arrayWithCapacity:
initWithCapacity:
_machineID
_status
_modified
initWithMachineID:status:modified:
machineID
status
modified
_entries
initWithEntries:
entryFor:
machineIDsInStatus:
entries
_algo
_ctxSHA256
_ctxSHA512
init
initWithAlgo:
resetWithAlgo:
updateWithData:
updateWithBytes:len:
finalHash
throwInvalidAlgo
algo
setAlgo:
ctxSHA256
setCtxSHA256:
ctxSHA512
setCtxSHA512:
exceptionWithName:reason:userInfo:
base64EncodedStringWithOptions:
mutableBytes
initWithLength:
bytes
algoOfHash:
hashWithAlgo:ofData:
hashWithAlgo:ofBytes:len:
_regex
hasRegex
regex
setRegex:
_ands
_exists
_match
_not
_ors
_type
_has
type
setType:
setHasType:
hasType
typeAsString:
StringAsType:
clearAnds
addAnd:
andsCount
andAtIndex:
clearOrs
addOr:
orsCount
orAtIndex:
hasNot
hasMatch
hasExists
ands
setAnds:
setOrs:
setNot:
match
setMatch:
exists
setExists:
objectAtIndex:
removeAllObjects
andType
orType
_policySecrets
_deviceName
_serialNumber
_osVersion
_recoverySigningPublicKey
_recoveryEncryptionPublicKey
initWithClock:policyVersion:policyHash:policySecrets:recoverySigningPubKey:recoveryEncryptionPubKey:data:sig:
isEqualToPeerStableInfo:
setClock:
policySecrets
setPolicySecrets:
deviceName
serialNumber
osVersion
recoverySigningPublicKey
setRecoverySigningPublicKey:
recoveryEncryptionPublicKey
setRecoveryEncryptionPublicKey:
stableInfoWithClock:policyVersion:policyHash:policySecrets:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:error:
stableInfoWithData:sig:
keyFromSPKI:
keyWithSubjectPublicKeyInfo:
_modelID
_epoch
_signingPubKey
_encryptionPubKey
_peerID
initWithMachineID:modelID:epoch:signingPubKey:encryptionPubKey:data:sig:peerID:
setMachineID:
modelID
setModelID:
epoch
setEpoch:
signingPubKey
setSigningPubKey:
encryptionPubKey
setEncryptionPubKey:
peerID
setPeerID:
permanentInfoWithMachineID:modelID:epoch:signingKeyPair:encryptionKeyPair:peerIDHashAlgo:error:
peerIDForData:sig:peerIDHashAlgo:
permanentInfoWithPeerID:data:sig:keyFactory:
_matchingRule
_view
hasMatchingRule
hasView
matchingRule
setMatchingRule:
view
setView:
_signingSPKI
_encryptionSPKI
initWithSigningSPKI:encryptionSPKI:
signingSPKI
encryptionSPKI
_viableBottles
_partialBottles
initWithViableBottles:partialBottles:
viableBottles
partialBottles
spki
checkSignature:matchesData:
publicKey
signatureForData:withError:
encodeSubjectPublicKeyInfo
initWithData:signature:
verify:withKey:error:
sign:withKey:error:
signature
initWithCurve:
initWithKeySpecifier:digestOperation:
_permanentInfo
_stableInfo
_dynamicInfo
_wrappedPrivateKeys
initWithPermanentInfo:
updateStableInfo:
updateDynamicInfo:
trustedPeerIDs
permanentInfo
setPermanentInfo:
stableInfo
setStableInfo:
dynamicInfo
setDynamicInfo:
wrappedPrivateKeys
setWrappedPrivateKeys:
errorWithDomain:code:description:underlying:
errorWithDomain:code:description:
_reason
_beneficiaryID
_sponsorID
createRecoveryECPublicKey:
isEqualToVoucher:
reason
setReason:
beneficiaryID
setBeneficiaryID:
sponsorID
setSponsorID:
initWithData:specifier:error:
voucherWithReason:beneficiaryID:sponsorID:signingKeyPair:error:
voucherInfoWithData:sig:
dataUsingEncoding:
appendData:
_disposition
hasPeerID
hasDisposition
disposition
setDisposition:
_candidateEpoch
_myEpoch
setMyEpoch:
setHasMyEpoch:
hasMyEpoch
setCandidateEpoch:
setHasCandidateEpoch:
hasCandidateEpoch
myEpoch
candidateEpoch
_candidateCategory
_explanation
_sponsorCategory
_sponsorId
setHasPolicyVersion:
hasPolicyVersion
hasSponsorId
hasSponsorCategory
hasCandidateCategory
hasExplanation
sponsorId
setSponsorId:
sponsorCategory
setSponsorCategory:
candidateCategory
setCandidateCategory:
explanation
setExplanation:
_ancientEpoch
_disallowedMachineID
_duplicateMachineID
_policyProhibits
_unknownMachineID
hasAncientEpoch
hasPolicyProhibits
hasUnknownMachineID
hasDuplicateMachineID
hasDisallowedMachineID
ancientEpoch
setAncientEpoch:
policyProhibits
setPolicyProhibits:
unknownMachineID
setUnknownMachineID:
duplicateMachineID
setDuplicateMachineID:
disallowedMachineID
setDisallowedMachineID:
_machineId
_modelId
setHasEpoch:
hasEpoch
hasSigningPubKey
hasEncryptionPubKey
hasMachineId
hasModelId
machineId
setMachineId:
modelId
setModelId:
fieldExists:
fieldMatch:fieldRegex:
notMatch:
andMatch:
orMatch:
trueMatch
falseMatch
TPPBPolicyKeyViewMappingWithView:matchingRule:
numberOfMatchesInString:options:range:
matches:error:
performOrMatch:error:
performAndMatch:error:
invertMatch:error:
initWithPattern:options:error:
_excludeds
_includeds
setHasClock:
hasClock
clearIncludeds
addIncluded:
includedsCount
includedAtIndex:
clearExcludeds
addExcluded:
excludedsCount
excludedAtIndex:
clearDispositions
addDispositions:
dispositionsCount
dispositionsAtIndex:
clearPreapprovals
addPreapprovals:
preapprovalsCount
preapprovalsAtIndex:
includeds
setIncludeds:
excludeds
setExcludeds:
setPreapprovals:
includedType
excludedType
dispositionsType
preapprovalsType
_name
_secret
hasName
hasSecret
name
setName:
secret
setSecret:
hasPolicyHash
hasOsVersion
hasDeviceName
hasRecoverySigningPublicKey
hasRecoveryEncryptionPublicKey
hasSerialNumber
clearPolicySecrets
addPolicySecrets:
policySecretsCount
policySecretsAtIndex:
setOsVersion:
setDeviceName:
setSerialNumber:
policySecretsType
_beneficiary
_sponsor
setHasReason:
hasReason
reasonAsString:
StringAsReason:
hasBeneficiary
hasSponsor
beneficiary
setBeneficiary:
sponsor
setSponsor:
_categoriesByViews
_introducersByCategorys
_keyViewMappings
_modelToCategorys
clearModelToCategorys
addModelToCategory:
modelToCategorysCount
modelToCategoryAtIndex:
clearCategoriesByViews
addCategoriesByView:
categoriesByViewsCount
categoriesByViewAtIndex:
clearIntroducersByCategorys
addIntroducersByCategory:
introducersByCategorysCount
introducersByCategoryAtIndex:
clearRedactions
addRedactions:
redactionsCount
redactionsAtIndex:
clearKeyViewMappings
addKeyViewMapping:
keyViewMappingsCount
keyViewMappingAtIndex:
modelToCategorys
setModelToCategorys:
categoriesByViews
setCategoriesByViews:
introducersByCategorys
setIntroducersByCategorys:
keyViewMappings
setKeyViewMappings:
modelToCategoryType
categoriesByViewType
introducersByCategoryType
redactionsType
keyViewMappingType
_categories
clearCategories
addCategories:
categoriesCount
categoriesAtIndex:
categories
setCategories:
categoriesType
_introducers
hasCategory
clearIntroducers
addIntroducers:
introducersCount
introducersAtIndex:
introducers
setIntroducers:
introducersType
hasPrefix
_key
_value
hasKey
hasValue
setKey:
value
setValue:
@"NSString"
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@16
@24@0:8@16
B24@0:8@16
Q16@0:8
@16@0:8
v16@0:8
@32@0:8@16@24
@"NSSet"
@"NSDictionary"
@"NSData"
@40@0:8@16@24@32
@24@0:8^{_NSZone=}16
@56@0:8Q16@24@32@40@48
@72@0:8Q16@24@32@40@48@56^@64
@"NSArray"
@"NSString"24@0:8@"NSString"16
B32@0:8@"NSString"16@"NSString"24
@"NSSet"24@0:8@"NSString"16
@"NSString"24@0:8@"NSDictionary"16
B32@0:8@16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8Q16
v20@0:8B16
@60@0:8@16@24@32@40B48Q52
@"NSMutableDictionary"
@"NSMutableSet"
@"<TPDecrypter>"
Q24@0:8@16
@24@0:8Q16
@32@0:8@16^@24
B40@0:8@16@24^@32
@96@0:8Q16@24@32@40@48@56@64@72@80^@88
@64@0:8@16@24@32@40@48^@56
B32@0:8@16Q24
B56@0:8@16@24Q32@40@48
B48@0:8@16@24@32^@40
@64@0:8@16@24@32Q40@48^@56
@80@0:8@16@24@32@40@48@56@64Q72
v72@0:8@16@24@32@40@48@56Q64
v64@0:8@16@24@32@40@48Q56
@72@0:8@16@24@32@40@48@56^@64
@104@0:8@16@24@32@40@48@56@64@72@80@88^@96
v32@0:8@16@24
@80@0:8@16@24@32@40@48@56@64^@72
@48@0:8@16@24@32^@40
B56@0:8@16@24@32^@40^@48
@40@0:8@16@24^@32
@80@0:8Q16@24@32@40@48@56q64^@72
@"NSDate"
@40@0:8@16Q24@32
{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}
{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}
@24@0:8q16
v24@0:8q16
v32@0:8r^v16Q24
q16@0:8
{CC_SHA256state_st=[2I][8I][16I]}16@0:8
v120@0:8{CC_SHA256state_st=[2I][8I][16I]}16
{CC_SHA512state_st=[2Q][8Q][16Q]}16@0:8
v224@0:8{CC_SHA512state_st=[2Q][8Q][16Q]}16
q24@0:8@16
@32@0:8q16@24
@40@0:8q16r^v24Q32
@"NSMutableArray"
@"TPPBDictionaryMatchingRuleFieldExists"
@"TPPBDictionaryMatchingRuleFieldRegexMatch"
@"TPPBDictionaryMatchingRule"
{?="type"b1}
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@80@0:8Q16Q24@32@40@48@56@64@72
@104@0:8Q16Q24@32@40@48@56@64@72@80@88^@96
@"<TPPublicKey>"24@0:8@"NSData"16
@"<TPPublicKey>"
@80@0:8@16@24Q32@40@48@56@64@72
@72@0:8@16@24Q32@40@48q56^@64
@40@0:8@16@24q32
@48@0:8@16@24@32@40
@"NSData"16@0:8
B32@0:8@"NSData"16@"NSData"24
@"<TPPublicKey>"16@0:8
@"NSData"32@0:8@"NSData"16^@24
@"TPPeerPermanentInfo"
@"TPPeerStableInfo"
@"TPPeerDynamicInfo"
@40@0:8@16q24@32
@48@0:8@16q24@32@40
@56@0:8Q16@24@32@40^@48
@"TPPBDisposition"
{?="candidateEpoch"b1"myEpoch"b1}
{?="policyVersion"b1}
@"TPPBAncientEpoch"
@"TPPBDispositionDisallowedMachineID"
@"TPPBDispositionDuplicateMachineID"
@"TPPBPolicyProhibits"
@"TPPBUnknownMachineID"
{?="epoch"b1}
B32@0:8@16^@24
{?="clock"b1}
{?="clock"b1"policyVersion"b1}
{?="reason"b1}
