@(#)PROGRAM:TrustedPeers  PROJECT:Security-1
<TPCategoryRule: %@:%@>
prefix
category
TPPB.PeerDynamicInfo
v32@?0@"NSString"8@"TPPBDisposition"16^B24
v32@?0@"TPPBDispositionEntry"8Q16^B24
<TPPolicy: %@>
iProd
full
Applications
Backstop
CreditCards
Passwords
WiFi
ProtectedCloudStorage
SecureObjectSync
modelToCategory
categoriesByView
introducersByCategory
keyViewMapping
unknownRedactions
ucvList
piggybackingList
priorityViews
inheritedExcludedViews
version
%@ %@
fieldName
none_set
partial
excluded
outdated
ancient
unknown
ignored
self
extra: %lx
(%@)
TPModel.m
policyDoc must not be nil
permanentInfo must not be nil
No peer for given peerID
TPPB.PeerPermanentInfo
v32@?0@"NSString"8@"TPPeer"16^B24
unrecognized modelID: %@
Policy prohibits introducing candidate
sponsorID
sponsorCategory
candidateCategory
policyVersion
voucher must not be nil
No peer for given peerID: %@
Update would result in no trusted peers
B24@?0@"NSString"8^B16
B24@?0@8@"NSDictionary"16
peerID
policyDocHash
peerExpectsHash
custodianRecoveryKey
clock
value
com.apple.security.trustedpeers.policy
<TPPolicyDocument: %@>
allowed
disallowed
<TPMachineID: %@ %@ %@>
<TPMachineIDList: %@>
SHA224:
SHA256:
SHA384:
SHA512:
SHA224
SHA256
SHA384
SHA512
%@:%@
InvalidTPHashAlgo
Invalid TPHash algorithm
regex
type
match
exists
UNKNOWN
AND_RULE
OR_RULE
NOT_RULE
MATCH_RULE
FIELD_EXISTS
TRUE_RULE
FALSE_RULE
(unknown: %i)
TPPB.PeerStableInfo
v32@?0@"NSString"8@"NSData"16^B24
peerIdentifier
peerData
TPPB.CustodianRecoveryKey
^[^0-9,]*
matching_rule
view
com.apple.security.trustedpeers.peerstatus
<TPPolicyVersion: %llu, %@>
policyHash
permanentInfo
stableInfo
dynamicInfo
TPPB.Voucher
TPVoucher.m
Invalid parameter not satisfying: %@
com.apple.security.trustedpeers
model
classification
Security
AllowiProd
BecomeiProd
enabled
disabled
disposition
my_epoch
candidate_epoch
policy_version
sponsor_id
sponsor_category
candidate_category
explanation
ancientEpoch
policyProhibits
unknownMachineID
duplicateMachineID
disallowedMachineID
epoch
signing_pub_key
encryption_pub_key
machine_id
model_id
CKKSMatcherError
Rule missing field name
Rule has no type
Rule type is unknown
No 'exists' subrule present
No 'match' subrule present
No 'and' subrules present
No 'or' subrules present
No 'not' subrule present
included
dispositions
preapprovals
name
secret
uuid
signing_public_key
encryption_public_key
kind
RECOVERY_KEY
INHERITANCE_KEY
frozen_policy_version
frozen_policy_hash
os_version
device_name
recovery_signing_public_key
recovery_encryption_public_key
serial_number
flexible_policy_version
flexible_policy_hash
policy_secrets
user_controllable_view_status
custodian_recovery_keys
secureElementIdentity
walrus
isInheritedAccount
DISABLED
ENABLED
FOLLOWING
<TPSyncingPolicy: %@, %@, userViews: %@>
viewList
userControllableViews
ucvShouldSync
viewsToPiggybackTLKs
reason
beneficiary
sponsor
RESTORE
SAME_DEVICE
SOS_UPGRADE
SECURE_CHANNEL
redactions
user_controllable_views
piggyback_views
priority_views
inherited_excluded_views
categories
introducers
v8@?0
TPStringTable.defaultTable
registering peer %{public}@: %{public}@
status: peerID %{public}@ has no included peer IDs?
status: peerID %{public}@ trusts itself
status: peerID %{public}@ has no peer in model
status: peer %{public}@ trusts %{public}@
status: peer %{public}@ doesn't trust %{public}@
status: peer %{public}@ excludes %{public}@
status: peer %{public}@ outdates %{public}@
status: peer %{public}@ far outdates %{public}@
status: peer %{public}@ excludes itself
status: peer %{public}@ trust status is: %{public}@
Peer %@ has disabled user view syncing
Peer %@ has enabled user view syncing
can't update stable info for peerID %{public}@: peer does not exist
peer(%{public}@) stable info is now: %{public}@
failed to update stable info for peerID %{public}@: %{public}@
can't update dynamic info for peerID %{public}@: peer does not exist
peer(%{public}@) dynamic info is now: %{public}@
failed to update dynamic info for peerID %{public}@: %{public}@
voucher: voucher has failed signature checking: %@
voucher: peer (%{public}@) already excluded
voucher: no peer for id %{public}@
voucher: unknown machineID %{public}@ %{public}@
voucher: disallowed machineID %{public}@ %{public}@
voucher: failed to fetch policy: %{public}@
voucher: %{public}@ presented valid voucher from %{public}@
Inspecting voucher claiming to be from sponsor: %{public}@
Sponsor %{public}@ preapproves peer %{public}@
Including information from sponsor (%{public}@): included: %{public}@ excluded: %{public}@
No peer for ID %{public}@
Calculating dynamic info for peer %{public}@ with peer set %{public}@
Adding peer IDs: %{public}@
Removing peer IDs: %{public}@
Peer (%{public}@) excludes itself
Initial sets: included:%{public}@ excluded:%{public}@
No peer: %{public}@
After removals: included:%{public}@ excluded:%{public}@
Beginning sponsor checking; machine ID list: %{public}@
After sponsor checking: included:%{public}@ excluded:%{public}@
After voucher checking: included:%{public}@ excluded:%{public}@
Preapproved keys: %{public}@
New preapproval list: %{public}@
Using existing preapproval list: %{public}@
Final preapproval list: %{public}@
Peer %{public}@ preapproved
After preapproval checking: included:%{public}@ excluded:%{public}@
Remote peers with the ego machine ID: %{public}@
No local machine ID; not filtering peers
After machine ID checking: included:%{public}@ excluded:%{public}@
Peer (%{public}@) unknown, distrusting by default
Peer (%{public}@) is using an unknown policy version (%llu, %@), not distrusting unknown peers (error: %@)
Peer distrusts self
Update would result in zero trusted peers; failing
Analysis didn't actually change anything, returning old dynamicInfo
After exclusion filtering: included:%{public}@ excluded:%{public}@
Returning new dynamicinfo: %{public}@
Peer (%{public}@) has an unknown machine ID (%{public}@)
Peer (%{public}@) has an unknown machine ID (%{public}@), but leaving disposition as 'disallowed'
Peer (%{public}@) has a disallowed machine ID (%{public}@)
From our sponsor (%{public}@), included: %{public}@ excluded: %{public}@
Trusting %{public}@ due to preapproval
Not including %{public}@ even through they are preapproved
Unable to create initial dynamic info for peer: %{public}@
Peer %@ supports this recovery key, but cannot sponsor peer %@: %@
Peer %@ supports this Custodian RK, but cannot sponsor peer %@: %@
isRecoveryKeyEnrolled: sign %{public}@, enc %{public}@, count = %lu
isRecoveryKeyEnrolled: returning 1 %d
isCustodianRecoveryKeyTrusted: size = %lu
isCustodianRecoveryKeyTrusted: returning 2 %d
Recovery Keys changed! currently set signingKey: %@, currently set encryptionKey: %@, new signingKey: %@, new encryption Key: %@
registerCustodianRecoveryKey %{public}@ -- size now %lu
removeCustodianRecoveryKey: %{public}@
Peer %@ trusts the following unknown peer IDs: %@
Peer %@ trusts the following peer ID, but we don't recognize the hash: %@
Failed to make regex; cannot change modelID: %@
BecomeiProd Status set via feature flag to %s
BecomeiProd Status overridden to %s
BecomeiProd Status override removed
Error matching with rule %@: %@
TPCategoryRule
NSSecureCoding
NSCoding
TPPeerDynamicInfo
TPPolicy
TPPBDictionaryMatchingRuleFieldExists
NSCopying
TPModel
TPPBPeerStableInfoSetting
TPPolicyDocument
TPMachineID
TPMachineIDList
TPHashBuilder
TPPBDictionaryMatchingRuleFieldRegexMatch
TPPBDictionaryMatchingRule
TPPeerStableInfo
TPPBSecureElementIdentity
TPCustodianRecoveryKey
TPECPublicKeyFactory
TPPublicKeyFactory
NSObject
TPPeerPermanentInfo
TPPBPolicyKeyViewMapping
TPRecoveryKeyPair
TPCachedViableBottles
TPPolicyVersion
TPPublicKey
TPKeyPair
TPPeer
TPPBDispositionDuplicateMachineID
UsefulConstructors
TPVoucher
TPPBDispositionEntry
TPPBDispositionDisallowedMachineID
TPPBAncientEpoch
TPPBPolicyProhibits
TPPBUnknownMachineID
TPPBDisposition
TPPBPeerPermanentInfo
TPPBDictionaryMatchingRules
TPDictionaryMatchingRule
TPPBPeerDynamicInfo
TPPBPolicySecret
TPPBCustodianRecoveryKey
TPPBPeerStableInfoX
TPSyncingPolicy
TPPBVoucher
TPPBPolicyDocument
TPPBPolicyCategoriesByView
TPPBPolicyIntroducersByCategory
TPStringTable
Testing
TPPBPolicyModelToCategory
TPPBPolicyRedaction
SimpleConstructor
setPrefix:
setCategory:
prefix
isEqualToString:
category
isEqualToCategoryRule:
hash
stringWithFormat:
encodeObject:forKey:
init
decodeObjectOfClass:forKey:
ruleWithPrefix:category:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
isEqual:
description
.cxx_destruct
_prefix
_category
T@"NSString",C,N,V_prefix
T@"NSString",C,N,V_category
defaultTable
clock
includeds
setWithArray:
excludeds
preapprovals
setClock:
allObjects
mutableCopy
setIncludeds:
setExcludeds:
setPreapprovals:
setDispositions:
setPeerID:
setDisposition:
dispositions
addObject:
enumerateKeysAndObjectsUsingBlock:
dynamicInfoPBWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:
data
initWithObj:data:sig:
initWithData:
peerID
disposition
stringWithString:
setObject:forKeyedSubscript:
enumerateObjectsUsingBlock:
includedPeerIDs
excludedPeerIDs
isEqualToData:
dictionaryRepresentation
isEqualToPeerDynamicInfo:
dynamicInfoWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
dynamicInfoWithData:sig:
copyWithZone:
checkSignatureWithKey:
_clock
_includedPeerIDs
_excludedPeerIDs
_preapprovals
_data
_sig
TQ,R,N,V_clock
T@"NSSet",R,N,V_includedPeerIDs
T@"NSSet",R,N,V_excludedPeerIDs
T@"NSDictionary",R,N
T@"NSSet",R,N,V_preapprovals
T@"NSData",R,N,V_data
T@"NSData",R,N,V_sig
setModelToCategory:
setCategoriesByView:
setIntroducersByCategory:
setKeyViewMapping:
setUnknownRedactions:
setUserControllableViewList:
setPiggybackViews:
setPriorityViews:
setInheritedExcludedViews:
setVersion:
version
hasPrefix:
modelToCategory
countByEnumeratingWithState:objects:count:
introducersByCategory
objectForKeyedSubscript:
containsObject:
categoriesByView
viewsForModel:error:
userControllableViewList
piggybackViews
versionNumber
count
priorityViews
keyViewMapping
initWithModel:version:viewList:priorityViews:userControllableViews:syncUserControllableViews:viewsToPiggybackTLKs:keyViewMapping:isInheritedAccount:
categoryForModel:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
unknownRedactions
encodeBool:forKey:
inheritedExcludedViews
arrayWithObjects:count:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
isEqualToPolicy:
isEqualToDictionary:
isEqualKeyViewMapping:other:
isEqualToSet:
policyWithModelToCategory:categoriesByView:introducersByCategory:keyViewMapping:unknownRedactions:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:version:
trustedPeerInCategory:canIntroduceCategory:
peerInCategory:canAccessView:
syncingPolicyForModel:syncUserControllableViews:isInheritedAccount:error:
_unknownRedactions
_version
_modelToCategory
_categoriesByView
_introducersByCategory
_keyViewMapping
_userControllableViewList
_piggybackViews
_priorityViews
_inheritedExcludedViews
T@"TPPolicyVersion",&,N,V_version
T@"NSArray",&,N,V_modelToCategory
T@"NSDictionary",&,N,V_categoriesByView
T@"NSDictionary",&,N,V_introducersByCategory
T@"NSArray",&,N,V_keyViewMapping
T@"NSSet",&,N,V_userControllableViewList
T@"NSSet",&,N,V_piggybackViews
T@"NSSet",&,N,V_priorityViews
T@"NSSet",&,N,V_inheritedExcludedViews
TB,V_unknownRedactions
dictionary
setObject:forKey:
setFieldName:
allocWithZone:
isMemberOfClass:
hasFieldName
readFrom:
writeTo:
copyTo:
mergeFrom:
fieldName
_fieldName
TB,R,N
T@"NSString",&,N,V_fieldName
compare:
sortedArrayUsingSelector:
componentsJoinedByString:
peersByID
permanentInfo
epoch
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
policiesByVersion
numberWithUnsignedLongLong:
allKeys
allValues
copy
vouchers
stableInfo
frozenPolicyVersion
flexiblePolicyVersion
objectForKey:
initWithPermanentInfo:
checkVouchers
removeObjectForKey:
custodianRecoveryKeys
machineID
untrustedPeerIDs
modelID
longValue
numberWithLong:
hashWithAlgo:ofData:
dynamicInfo
signingPubKey
spki
peerWithID:
validateVoucherForPeer:sponsor:
validatePeerWithPreApproval:sponsor:
allPeerIDs
syncUserControllableViews
actualPeerWithID:error:
peerWithUpdatedStableInfo:error:
maxClock
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
peerWithUpdatedDynamicInfo:error:
canTrustCandidate:inEpoch:
setAncientEpoch:
ancientEpoch
setCandidateEpoch:
setMyEpoch:
setPolicyProhibits:
policyProhibits
setPolicyVersion:
setSponsorId:
setSponsorCategory:
setCandidateCategory:
setExplanation:
trustedPeerIDs
policyForPeerIDs:candidatePeerID:candidateStableInfo:error:
canIntroduceCandidate:withSponsor:toEpoch:underPolicy:disposition:
sponsorId
sponsorCategory
candidateCategory
policyVersion
checkIntroductionForCandidate:stableInfo:withSponsorID:error:
voucherWithReason:beneficiaryID:sponsorID:signingKeyPair:error:
sponsorID
recoverySigningPublicKey
createRecoveryECPublicKey:
signingPublicKey
beneficiaryID
verifyVoucherSignature:
uncheckedVouchers
reason
hasPeerWithID:
setUncheckedVouchers:
entryFor:
status
setUnknownMachineID:
setDisallowedMachineID:
setWithSet:
minusSet:
unionSet:
recursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:withPeersTrustedBySponsorID:currentMachineIDs:forEpoch:
considerCandidateID:withSponsorID:sponsorPermanentInfo:toExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
algoOfHash:
considerVouchersSponsoredByPeerID:sponsorPermanentInfo:toRecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
considerPreapprovalsSponsoredByPeer:toRecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
setWithCapacity:
calculateDynamicInfoFromModel:peer:peerPermanentInfo:peerStableInfo:startingDynamicInfo:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
dictionaryWithDictionary:
allCustodianRecoveryKeyPeerIDs
addObjectsFromArray:
preapprovalsFromKeys:
setByAddingObjectsFromSet:
filterPreapprovals:forExistingPeers:
removeObject:
filterPeerList:byMachineIDs:dispositions:
length
peersWithMachineID:
setDuplicateMachineID:
hasUnknownMachineID
unknownMachineID
allPolicyVersions
policyHash
bestPolicyVersion
isSubsetOfSet:
setWithObject:
createDynamicInfoWithIncludedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
objectsPassingTest:
disallowedMachineID
publicKey
predicateWithBlock:
filteredArrayUsingPredicate:
considerPolicyFromPeerID:stableInfo:secrets:newestPolicyDoc:error:
decrypter
policyWithSecrets:decrypter:error:
policySecrets
getViewsForPeer:stableInfo:error:
kind
getPeerIDsTrustedByPeerWithDynamicInfo:toAccessView:error:
recoverySigningPubKey
recoveryEncryptionPubKey
recoveryEncryptionPublicKey
initWithStableInfo:
walrusSetting
value
setValue:
signingKeyData
encryptionKeyData
setRecoveryEncryptionPubKey:
setRecoverySigningPubKey:
uuid
allPeers
initWithDecrypter:
latestEpochAmongPeerIDs:
registerPolicyDocument:
policyWithVersion:
allVouchers
allRegisteredPolicyVersions
registerPeerWithPermanentInfo:
deletePeerWithID:
custodianPeerWithID:
allMachineIDs
viablePeerCountsByModelID
peerCountsByMachineID
hasPotentiallyTrustedPeerPreapprovingKey:
hasPotentiallyTrustedPeerWithSigningKey:
statusOfPeerWithID:
getStableInfoForPeerWithID:
getDynamicInfoForPeerWithID:
userViewSyncabilityConsensusAmongTrustedPeers:
updateStableInfo:forPeerWithID:error:
createStableInfoWithFrozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
updateDynamicInfo:forPeerWithID:error:
createVoucherForCandidate:stableInfo:withSponsorID:reason:signingKeyPair:error:
registerVoucher:
calculateDynamicInfoForPeerWithID:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
dynamicInfoForJoiningPeerID:peerPermanentInfo:peerStableInfo:sponsorID:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
getViewsForCRK:donorPermanentInfo:donorStableInfo:error:
getPeerIDsTrustedByPeerWithID:toAccessView:error:
vectorClock
bestRecoveryKeyForStableInfo:dynamicInfo:
bestWalrusForStableInfo:dynamicInfo:walrusStableChanges:
bestWalrusAcrossTrustedPeers
peerIDThatTrustsRecoveryKeys:canIntroducePeer:stableInfo:
peerIDThatTrustsCustodianRecoveryKeys:canIntroducePeer:stableInfo:
isRecoveryKeyEnrolled
isCustodianRecoveryKeyTrusted:
setRecoveryKeys:
registerCustodianRecoveryKey:
removeCustodianRecoveryKey:
findCustodianRecoveryKeyWithUUID:
allCustodianRecoveryKeys
currentStatePossiblyMissingData
setPeersByID:
setPoliciesByVersion:
setVouchers:
setDecrypter:
setCustodianRecoveryKeys:
_peersByID
_policiesByVersion
_uncheckedVouchers
_vouchers
_decrypter
_recoverySigningPubKey
_recoveryEncryptionPubKey
_custodianRecoveryKeys
T@"NSMutableDictionary",&,N,V_peersByID
T@"NSMutableDictionary",&,N,V_policiesByVersion
T@"NSMutableSet",&,N,V_uncheckedVouchers
T@"NSMutableSet",&,N,V_vouchers
T@"<TPDecrypter>",&,N,V_decrypter
T@"NSData",&,N,V_recoverySigningPubKey
T@"NSData",&,N,V_recoveryEncryptionPubKey
T@"NSMutableDictionary",&,N,V_custodianRecoveryKeys
numberWithBool:
setHasClock:
hasClock
setHasValue:
hasValue
_value
_has
TB,N
TQ,N,V_clock
TB,N,V_value
arrayWithCapacity:
dictionaryWithCapacity:
categories
view
introducers
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
addModelToCategory:
setView:
setCategories:
addCategoriesByView:
setIntroducers:
addIntroducersByCategory:
setKey:
addRedactions:
addKeyViewMapping:
initWithHash:data:
initWithVersion:hash:
setModelToCategorys:
setCategoriesByViews:
setIntroducersByCategorys:
addRedactions:toPB:
setKeyViewMappings:
setUserControllableViews:
protobuf
addModelToCategory:toPB:
addCategoriesByView:toPB:
addIntroducersByCategory:toPB:
addKeyViewMapping:toPB:
encryptData:error:
redactions
redactionsFromPb:
decryptData:withKey:error:
modelToCategorys
modelToCategoryFromPb:
categoriesByViews
categoriesByViewFromPb:
introducersByCategorys
introducersByCategoryFromPb:
keyViewMappings
userControllableViews
encodeProtobuf
cloneWithVersionNumber:prependingCategoriesByView:prependingKeyViewMapping:
array
arrayByAddingObjectsFromArray:
isEqualToPolicyDocument:
policyDocWithHash:data:
redactionWithEncrypter:modelToCategory:categoriesByView:introducersByCategory:keyViewMapping:error:
initWithVersion:modelToCategory:categoriesByView:introducersByCategory:redactions:keyViewMapping:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:hashAlgo:
cloneWithVersionNumber:
_protobuf
T@"NSArray",R
T@"TPPolicyVersion",R,N,V_version
T@"NSData",R,N,V_protobuf
modified
initWithMachineID:status:modified:
_machineID
_status
_modified
T@"NSString",R,V_machineID
TQ,R,V_status
T@"NSDate",R,V_modified
entries
initWithEntries:
machineIDsInStatus:
_entries
T@"NSArray",R,V_entries
resetWithAlgo:
throwInvalidAlgo
bytes
updateWithBytes:len:
algo
initWithLength:
mutableBytes
base64EncodedStringWithOptions:
setAlgo:
exceptionWithName:reason:userInfo:
hashWithAlgo:ofBytes:len:
initWithAlgo:
finalHash
updateWithData:
ctxSHA256
setCtxSHA256:
ctxSHA512
setCtxSHA512:
_algo
_ctxSHA256
_ctxSHA512
Tq,N,V_algo
T{CC_SHA256state_st=[2I][8I][16I]},N,V_ctxSHA256
T{CC_SHA512state_st=[2Q][8Q][16Q]},N,V_ctxSHA512
setRegex:
hasRegex
regex
_regex
T@"NSString",&,N,V_regex
removeAllObjects
objectAtIndex:
initWithCapacity:
addAnd:
addOr:
andsCount
clearAnds
andAtIndex:
orsCount
clearOrs
orAtIndex:
setNot:
setMatch:
setExists:
andType
orType
type
setType:
setHasType:
hasType
typeAsString:
StringAsType:
hasNot
hasMatch
hasExists
ands
setAnds:
setOrs:
match
exists
_ands
_exists
_match
_not
_ors
_type
Ti,N,V_type
T@"NSMutableArray",&,N,V_ands
T@"NSMutableArray",&,N,V_ors
T@"TPPBDictionaryMatchingRule",&,N,V_not
T@"TPPBDictionaryMatchingRuleFieldRegexMatch",&,N,V_match
T@"TPPBDictionaryMatchingRuleFieldExists",&,N,V_exists
pbToNullable
setFrozenPolicyVersion:
setFrozenPolicyHash:
setFlexiblePolicyVersion:
setFlexiblePolicyHash:
setPolicySecrets:
setName:
setSecret:
setDeviceName:
setUserControllableViewStatus:
setSerialNumber:
setOsVersion:
setRecoveryEncryptionPublicKey:
setRecoverySigningPublicKey:
setSecureElementIdentity:
setWalrus:
setIsInheritedAccount:
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:deviceName:serialNumber:osVersion:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:data:sig:
secret
name
flexiblePolicyHash
frozenPolicyHash
userControllableViewStatus
secureElementIdentity
walrus
deviceName
serialNumber
osVersion
isInheritedAccount
isEqualToPeerStableInfo:
initWithData:sig:
_isInheritedAccount
_syncUserControllableViews
_frozenPolicyVersion
_flexiblePolicyVersion
_policySecrets
_deviceName
_serialNumber
_osVersion
_recoverySigningPublicKey
_recoveryEncryptionPublicKey
_secureElementIdentity
_walrusSetting
T@"TPPolicyVersion",R,V_frozenPolicyVersion
T@"TPPolicyVersion",R,V_flexiblePolicyVersion
T@"NSDictionary",R,N,V_policySecrets
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_serialNumber
T@"NSString",R,N,V_osVersion
T@"NSData",R,N,V_recoverySigningPublicKey
T@"NSData",R,N,V_recoveryEncryptionPublicKey
Ti,R,N,V_syncUserControllableViews
T@"TPPBSecureElementIdentity",R,N,V_secureElementIdentity
T@"TPPBPeerStableInfoSetting",R,N,V_walrusSetting
TB,N,V_isInheritedAccount
setPeerIdentifier:
setPeerData:
hasPeerIdentifier
hasPeerData
peerIdentifier
peerData
_peerData
_peerIdentifier
T@"NSData",&,N,V_peerIdentifier
T@"NSData",&,N,V_peerData
UUIDString
setUuid:
setSigningPublicKey:
setEncryptionPublicKey:
setKind:
peerIDForData:sig:peerIDHashAlgo:
initWithUUID:signingPublicKey:encryptionPublicKey:kind:data:sig:peerID:
keyFromSPKI:
encryptionPublicKey
initWithUUIDString:
addEntriesFromDictionary:
custodianRecoveryKeyWithData:sig:keyFactory:
initWithUUID:signingPublicKey:encryptionPublicKey:signingKeyPair:kind:error:
_kind
_uuid
_peerID
_signingPublicKey
_encryptionPublicKey
T@"NSUUID",&,N,V_uuid
T@"NSString",&,N,V_peerID
T@"<TPPublicKey>",&,N,V_signingPublicKey
T@"<TPPublicKey>",&,N,V_encryptionPublicKey
Ti,N,V_kind
keyWithSubjectPublicKeyInfo:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
regularExpressionWithPattern:options:error:
stringByReplacingMatchesInString:options:range:withTemplate:
setMachineId:
setModelId:
setEpoch:
setSigningPubKey:
setEncryptionPubKey:
initWithMachineID:modelID:epoch:signingPubKey:encryptionPubKey:data:sig:peerID:
encryptionPubKey
machineId
modelId
permanentInfoWithMachineID:modelID:epoch:signingKeyPair:encryptionKeyPair:peerIDHashAlgo:error:
permanentInfoWithPeerID:data:sig:keyFactory:
_modelID
_epoch
_signingPubKey
_encryptionPubKey
T@"NSString",R,N,V_machineID
T@"NSString",R,N,V_modelID
TQ,R,N,V_epoch
T@"<TPPublicKey>",R,N,V_signingPubKey
T@"<TPPublicKey>",R,N,V_encryptionPubKey
T@"NSString",R,N,V_peerID
setMatchingRule:
hasMatchingRule
hasView
matchingRule
_matchingRule
_view
T@"TPPBDictionaryMatchingRule",&,N,V_matchingRule
T@"NSString",&,N,V_view
initWithSigningKeyData:encryptionKeyData:
_signingKeyData
_encryptionKeyData
T@"NSData",R,&,V_signingKeyData
T@"NSData",R,&,V_encryptionKeyData
initWithViableBottles:partialBottles:
viableBottles
partialBottles
_viableBottles
_partialBottles
T@"NSArray",R,&,V_viableBottles
T@"NSArray",R,&,V_partialBottles
encodeInt64:forKey:
decodeInt64ForKey:
_versionNumber
_policyHash
TQ,R,V_versionNumber
T@"NSString",R,&,V_policyHash
encodeSubjectPublicKeyInfo
initWithData:signature:
verify:withKey:error:
checkSignature:matchesData:
sign:withKey:error:
signature
signatureForData:withError:
initWithCurve:
initWithKeySpecifier:digestOperation:
initWithPermanentInfo:stableInfo:dynamicInfo:
_permanentInfo
_stableInfo
_dynamicInfo
T@"NSString",R,N
T@"TPPeerPermanentInfo",R,N,V_permanentInfo
T@"TPPeerStableInfo",R,N,V_stableInfo
T@"TPPeerDynamicInfo",R,N,V_dynamicInfo
T@"NSSet",R,N
errorWithDomain:code:description:underlying:
errorWithDomain:code:description:
beneficiary
sponsor
setBeneficiary:
setSponsor:
setReason:
initWithData:specifier:error:
isEqualToVoucher:
voucherInfoWithData:sig:
setBeneficiaryID:
setSponsorID:
setData:
setSig:
_reason
_beneficiaryID
_sponsorID
TQ,N,V_reason
T@"NSString",&,N,V_beneficiaryID
T@"NSString",&,N,V_sponsorID
T@"NSData",&,N,V_data
T@"NSData",&,N,V_sig
dataUsingEncoding:
appendData:
hasPeerID
hasDisposition
_disposition
T@"TPPBDisposition",&,N,V_disposition
setHasMyEpoch:
hasMyEpoch
setHasCandidateEpoch:
hasCandidateEpoch
myEpoch
candidateEpoch
_candidateEpoch
_myEpoch
TQ,N,V_myEpoch
TQ,N,V_candidateEpoch
setHasPolicyVersion:
hasPolicyVersion
hasSponsorId
hasSponsorCategory
hasCandidateCategory
hasExplanation
explanation
_policyVersion
_candidateCategory
_explanation
_sponsorCategory
_sponsorId
TQ,N,V_policyVersion
T@"NSString",&,N,V_sponsorId
T@"NSString",&,N,V_sponsorCategory
T@"NSString",&,N,V_candidateCategory
T@"NSString",&,N,V_explanation
hasAncientEpoch
hasPolicyProhibits
hasDuplicateMachineID
hasDisallowedMachineID
duplicateMachineID
_ancientEpoch
_disallowedMachineID
_duplicateMachineID
_policyProhibits
_unknownMachineID
T@"TPPBAncientEpoch",&,N,V_ancientEpoch
T@"TPPBPolicyProhibits",&,N,V_policyProhibits
T@"TPPBUnknownMachineID",&,N,V_unknownMachineID
T@"TPPBDispositionDuplicateMachineID",&,N,V_duplicateMachineID
T@"TPPBDispositionDisallowedMachineID",&,N,V_disallowedMachineID
setHasEpoch:
hasEpoch
hasSigningPubKey
hasEncryptionPubKey
hasMachineId
hasModelId
_machineId
_modelId
TQ,N,V_epoch
T@"NSData",&,N,V_signingPubKey
T@"NSData",&,N,V_encryptionPubKey
T@"NSString",&,N,V_machineId
T@"NSString",&,N,V_modelId
initWithPattern:options:error:
numberOfMatchesInString:options:range:
matches:error:
performOrMatch:error:
performAndMatch:error:
invertMatch:error:
fieldExists:
fieldMatch:fieldRegex:
notMatch:
andMatch:
orMatch:
trueMatch
falseMatch
addIncluded:
addExcluded:
addDispositions:
addPreapprovals:
includedsCount
clearIncludeds
includedAtIndex:
excludedsCount
clearExcludeds
excludedAtIndex:
dispositionsCount
clearDispositions
dispositionsAtIndex:
preapprovalsCount
clearPreapprovals
preapprovalsAtIndex:
includedType
excludedType
dispositionsType
preapprovalsType
_dispositions
_excludeds
_includeds
T@"NSMutableArray",&,N,V_includeds
T@"NSMutableArray",&,N,V_excludeds
T@"NSMutableArray",&,N,V_dispositions
T@"NSMutableArray",&,N,V_preapprovals
hasName
hasSecret
_name
_secret
T@"NSString",&,N,V_name
T@"NSData",&,N,V_secret
hasUuid
hasSigningPublicKey
hasEncryptionPublicKey
setHasKind:
hasKind
kindAsString:
StringAsKind:
T@"NSString",&,N,V_uuid
T@"NSData",&,N,V_signingPublicKey
T@"NSData",&,N,V_encryptionPublicKey
addPolicySecrets:
addCustodianRecoveryKeys:
policySecretsCount
clearPolicySecrets
policySecretsAtIndex:
custodianRecoveryKeysCount
clearCustodianRecoveryKeys
custodianRecoveryKeysAtIndex:
policySecretsType
custodianRecoveryKeysType
setHasFrozenPolicyVersion:
hasFrozenPolicyVersion
hasFrozenPolicyHash
hasOsVersion
hasDeviceName
hasRecoverySigningPublicKey
hasRecoveryEncryptionPublicKey
hasSerialNumber
setHasFlexiblePolicyVersion:
hasFlexiblePolicyVersion
hasFlexiblePolicyHash
setHasUserControllableViewStatus:
hasUserControllableViewStatus
userControllableViewStatusAsString:
StringAsUserControllableViewStatus:
hasSecureElementIdentity
hasWalrus
setHasIsInheritedAccount:
hasIsInheritedAccount
_flexiblePolicyHash
_frozenPolicyHash
_userControllableViewStatus
_walrus
TQ,N,V_frozenPolicyVersion
T@"NSString",&,N,V_frozenPolicyHash
T@"NSString",&,N,V_osVersion
T@"NSString",&,N,V_deviceName
T@"NSData",&,N,V_recoverySigningPublicKey
T@"NSData",&,N,V_recoveryEncryptionPublicKey
T@"NSString",&,N,V_serialNumber
TQ,N,V_flexiblePolicyVersion
T@"NSString",&,N,V_flexiblePolicyHash
T@"NSMutableArray",&,N,V_policySecrets
Ti,N,V_userControllableViewStatus
T@"NSMutableArray",&,N,V_custodianRecoveryKeys
T@"TPPBSecureElementIdentity",&,N,V_secureElementIdentity
T@"TPPBPeerStableInfoSetting",&,N,V_walrus
model
viewList
syncUserControllableViewsAsBoolean
viewsToPiggybackTLKs
mapDictionaryToView:
isSyncingEnabledForView:
_model
_viewList
_viewsToPiggybackTLKs
_userControllableViews
T@"NSString",R,V_model
T@"TPPolicyVersion",R,V_version
T@"NSArray",R,V_keyViewMapping
T@"NSSet",R,V_viewList
T@"NSSet",R,V_priorityViews
T@"NSSet",R,V_viewsToPiggybackTLKs
T@"NSSet",R,V_userControllableViews
TB,V_isInheritedAccount
Ti,R,V_syncUserControllableViews
setHasReason:
hasReason
reasonAsString:
StringAsReason:
hasBeneficiary
hasSponsor
_beneficiary
_sponsor
Ti,N,V_reason
T@"NSString",&,N,V_beneficiary
T@"NSString",&,N,V_sponsor
addUserControllableViews:
addPiggybackViews:
addPriorityViews:
addInheritedExcludedViews:
modelToCategorysCount
clearModelToCategorys
modelToCategoryAtIndex:
categoriesByViewsCount
clearCategoriesByViews
categoriesByViewAtIndex:
introducersByCategorysCount
clearIntroducersByCategorys
introducersByCategoryAtIndex:
redactionsCount
clearRedactions
redactionsAtIndex:
keyViewMappingsCount
clearKeyViewMappings
keyViewMappingAtIndex:
userControllableViewsCount
clearUserControllableViews
userControllableViewsAtIndex:
piggybackViewsCount
clearPiggybackViews
piggybackViewsAtIndex:
priorityViewsCount
clearPriorityViews
priorityViewsAtIndex:
inheritedExcludedViewsCount
clearInheritedExcludedViews
inheritedExcludedViewsAtIndex:
modelToCategoryType
categoriesByViewType
introducersByCategoryType
redactionsType
keyViewMappingType
userControllableViewsType
piggybackViewsType
priorityViewsType
inheritedExcludedViewsType
setRedactions:
_categoriesByViews
_introducersByCategorys
_keyViewMappings
_modelToCategorys
_redactions
T@"NSMutableArray",&,N,V_modelToCategorys
T@"NSMutableArray",&,N,V_categoriesByViews
T@"NSMutableArray",&,N,V_introducersByCategorys
T@"NSMutableArray",&,N,V_redactions
T@"NSMutableArray",&,N,V_keyViewMappings
T@"NSMutableArray",&,N,V_userControllableViews
T@"NSMutableArray",&,N,V_piggybackViews
T@"NSMutableArray",&,N,V_priorityViews
T@"NSMutableArray",&,N,V_inheritedExcludedViews
addCategories:
categoriesCount
clearCategories
categoriesAtIndex:
categoriesType
_categories
T@"NSMutableArray",&,N,V_categories
addIntroducers:
introducersCount
clearIntroducers
introducersAtIndex:
introducersType
hasCategory
_introducers
T@"NSString",&,N,V_category
T@"NSMutableArray",&,N,V_introducers
UTF8String
setQueue:
initWithOptions:capacity:
setTable:
queue
table
member:
objectAtIndexedSubscript:
initWithObjects:count:
initWithIdentifier:
_queue
_table
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSHashTable",&,V_table
_count
hasPrefix
T@"NSString",&,N,V_prefix
hasKey
_key
T@"NSString",&,N,V_key
T@"NSData",&,N,V_value
TPPBPolicyKeyViewMappingWithView:matchingRule:
TPPBPolicyCategoriesByViewWithView:categories:
TPPBPolicyIntroducersByCategoryWithCategory:introducers:
TPPBPolicyModelToCategoryWithPrefix:category:
@32@0:8@16@24
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
Q16@0:8
@16@0:8
v16@0:8
@"NSString"
@56@0:8Q16@24@32@40@48
@72@0:8Q16@24@32@40@48@56^@64
@40@0:8@16@24@32
@24@0:8^{_NSZone=}16
@"NSSet"
@"NSData"
@92@0:8@16@24@32@40B48@52@60@68@76@84
B32@0:8@16@24
@40@0:8@16i24B28^@32
@32@0:8@16^@24
v20@0:8B16
@"TPPolicyVersion"
@"NSArray"
@"NSDictionary"
Q24@0:8@16
@24@0:8Q16
i24@0:8@16
B40@0:8@16@24^@32
@120@0:8@16@24@32i40@44@52@60@68@76@84@92@100B108^@112
@64@0:8@16@24@32@40@48^@56
B32@0:8@16Q24
B56@0:8@16@24Q32@40@48
B48@0:8@16@24@32^@40
@64@0:8@16@24@32Q40@48^@56
@80@0:8@16@24@32@40@48@56@64Q72
v72@0:8@16@24@32@40@48@56Q64
v64@0:8@16@24@32@40@48Q56
@72@0:8@16@24@32@40@48@56^@64
@104@0:8@16@24@32@40@48@56@64@72@80@88^@96
v32@0:8@16@24
@80@0:8@16@24@32@40@48@56@64^@72
@48@0:8@16@24@32^@40
B56@0:8@16@24@32^@40^@48
@40@0:8@16@24^@32
@"NSMutableDictionary"
@"NSMutableSet"
@"<TPDecrypter>"
v24@0:8Q16
{?="clock"b1"value"b1}
@104@0:8Q16@24@32@40@48@56@64@72@80@88q96
@40@0:8Q16@24@32
@40@0:8@16Q24@32
@"NSDate"
q24@0:8@16
@32@0:8q16@24
@40@0:8q16r^v24Q32
@24@0:8q16
v24@0:8q16
v32@0:8r^v16Q24
q16@0:8
{CC_SHA256state_st=[2I][8I][16I]}16@0:8
v120@0:8{CC_SHA256state_st=[2I][8I][16I]}16
{CC_SHA512state_st=[2Q][8Q][16Q]}16@0:8
v224@0:8{CC_SHA512state_st=[2Q][8Q][16Q]}16
{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}
{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}
#16@0:8
i16@0:8
v20@0:8i16
@20@0:8i16
@"NSMutableArray"
@"TPPBDictionaryMatchingRuleFieldExists"
@"TPPBDictionaryMatchingRuleFieldRegexMatch"
@"TPPBDictionaryMatchingRule"
{?="type"b1}
@128@0:8Q16@24@32@40i48@52@60@68@76@84@92@100B108@112@120
@128@0:8Q16@24@32@40i48@52@60@68@76@84@92@100@108B116^@120
@"TPPBSecureElementIdentity"
@"TPPBPeerStableInfoSetting"
@40@0:8@16@24q32
@68@0:8@16@24@32i40@44@52@60
@60@0:8@16@24@32@40i48^@52
@"NSUUID"
@"<TPPublicKey>"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<TPPublicKey>"24@0:8@"NSData"16
@72@0:8@16@24Q32@40@48q56^@64
@48@0:8@16@24@32@40
@80@0:8@16@24Q32@40@48@56@64@72
@32@0:8Q16@24
@"NSData"16@0:8
B32@0:8@"NSData"16@"NSData"24
@"<TPPublicKey>"16@0:8
@"NSData"32@0:8@"NSData"16^@24
@"TPPeerPermanentInfo"
@"TPPeerStableInfo"
@"TPPeerDynamicInfo"
@40@0:8@16q24@32
@48@0:8@16q24@32@40
@56@0:8Q16@24@32@40^@48
@"TPPBDisposition"
{?="candidateEpoch"b1"myEpoch"b1}
{?="policyVersion"b1}
@"TPPBAncientEpoch"
@"TPPBDispositionDisallowedMachineID"
@"TPPBDispositionDuplicateMachineID"
@"TPPBPolicyProhibits"
@"TPPBUnknownMachineID"
{?="epoch"b1}
B32@0:8@16^@24
{?="clock"b1}
{?="kind"b1}
{?="clock"b1"flexiblePolicyVersion"b1"frozenPolicyVersion"b1"userControllableViewStatus"b1"isInheritedAccount"b1}
@80@0:8@16@24@32@40@48i56@60@68B76
{?="reason"b1}
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
$,4GZ
$*05
$*05
 &0RQ
$-6J
 @FW]ciou
$5FWh
@(#)PROGRAM:TrustedPeers  PROJECT:Security-1
<TPCategoryRule: %@:%@>
prefix
category
TPPB.PeerDynamicInfo
v32@?0@"NSString"8@"TPPBDisposition"16^B24
v32@?0@"TPPBDispositionEntry"8Q16^B24
<TPPolicy: %@>
iProd
full
Applications
Backstop
CreditCards
Passwords
WiFi
ProtectedCloudStorage
SecureObjectSync
modelToCategory
categoriesByView
introducersByCategory
keyViewMapping
unknownRedactions
ucvList
piggybackingList
priorityViews
inheritedExcludedViews
version
%@ %@
fieldName
none_set
partial
excluded
outdated
ancient
unknown
ignored
self
extra: %lx
(%@)
TPModel.m
policyDoc must not be nil
permanentInfo must not be nil
No peer for given peerID
TPPB.PeerPermanentInfo
v32@?0@"NSString"8@"TPPeer"16^B24
unrecognized modelID: %@
Policy prohibits introducing candidate
sponsorID
sponsorCategory
candidateCategory
policyVersion
voucher must not be nil
No peer for given peerID: %@
Update would result in no trusted peers
B24@?0@"NSString"8^B16
B24@?0@8@"NSDictionary"16
peerID
policyDocHash
peerExpectsHash
custodianRecoveryKey
clock
value
com.apple.security.trustedpeers.policy
<TPPolicyDocument: %@>
allowed
disallowed
<TPMachineID: %@ %@ %@>
<TPMachineIDList: %@>
SHA224:
SHA256:
SHA384:
SHA512:
SHA224
SHA256
SHA384
SHA512
%@:%@
InvalidTPHashAlgo
Invalid TPHash algorithm
regex
type
match
exists
UNKNOWN
AND_RULE
OR_RULE
NOT_RULE
MATCH_RULE
FIELD_EXISTS
TRUE_RULE
FALSE_RULE
(unknown: %i)
TPPB.PeerStableInfo
v32@?0@"NSString"8@"NSData"16^B24
peerIdentifier
peerData
TPPB.CustodianRecoveryKey
^[^0-9,]*
matching_rule
view
com.apple.security.trustedpeers.peerstatus
<TPPolicyVersion: %llu, %@>
policyHash
permanentInfo
stableInfo
dynamicInfo
TPPB.Voucher
TPVoucher.m
Invalid parameter not satisfying: %@
com.apple.security.trustedpeers
model
classification
Security
AllowiProd
BecomeiProd
enabled
disabled
disposition
my_epoch
candidate_epoch
policy_version
sponsor_id
sponsor_category
candidate_category
explanation
ancientEpoch
policyProhibits
unknownMachineID
duplicateMachineID
disallowedMachineID
epoch
signing_pub_key
encryption_pub_key
machine_id
model_id
CKKSMatcherError
Rule missing field name
Rule has no type
Rule type is unknown
No 'exists' subrule present
No 'match' subrule present
No 'and' subrules present
No 'or' subrules present
No 'not' subrule present
included
dispositions
preapprovals
name
secret
uuid
signing_public_key
encryption_public_key
kind
RECOVERY_KEY
INHERITANCE_KEY
frozen_policy_version
frozen_policy_hash
os_version
device_name
recovery_signing_public_key
recovery_encryption_public_key
serial_number
flexible_policy_version
flexible_policy_hash
policy_secrets
user_controllable_view_status
custodian_recovery_keys
secureElementIdentity
walrus
isInheritedAccount
DISABLED
ENABLED
FOLLOWING
<TPSyncingPolicy: %@, %@, userViews: %@>
viewList
userControllableViews
ucvShouldSync
viewsToPiggybackTLKs
reason
beneficiary
sponsor
RESTORE
SAME_DEVICE
SOS_UPGRADE
SECURE_CHANNEL
redactions
user_controllable_views
piggyback_views
priority_views
inherited_excluded_views
categories
introducers
v8@?0
TPStringTable.defaultTable
registering peer %{public}@: %{public}@
status: peerID %{public}@ has no included peer IDs?
status: peerID %{public}@ trusts itself
status: peerID %{public}@ has no peer in model
status: peer %{public}@ trusts %{public}@
status: peer %{public}@ doesn't trust %{public}@
status: peer %{public}@ excludes %{public}@
status: peer %{public}@ outdates %{public}@
status: peer %{public}@ far outdates %{public}@
status: peer %{public}@ excludes itself
status: peer %{public}@ trust status is: %{public}@
Peer %@ has disabled user view syncing
Peer %@ has enabled user view syncing
can't update stable info for peerID %{public}@: peer does not exist
peer(%{public}@) stable info is now: %{public}@
failed to update stable info for peerID %{public}@: %{public}@
can't update dynamic info for peerID %{public}@: peer does not exist
peer(%{public}@) dynamic info is now: %{public}@
failed to update dynamic info for peerID %{public}@: %{public}@
voucher: voucher has failed signature checking: %@
voucher: peer (%{public}@) already excluded
voucher: no peer for id %{public}@
voucher: unknown machineID %{public}@ %{public}@
voucher: disallowed machineID %{public}@ %{public}@
voucher: failed to fetch policy: %{public}@
voucher: %{public}@ presented valid voucher from %{public}@
Inspecting voucher claiming to be from sponsor: %{public}@
Sponsor %{public}@ preapproves peer %{public}@
Including information from sponsor (%{public}@): included: %{public}@ excluded: %{public}@
No peer for ID %{public}@
Calculating dynamic info for peer %{public}@ with peer set %{public}@
Adding peer IDs: %{public}@
Removing peer IDs: %{public}@
Peer (%{public}@) excludes itself
Initial sets: included:%{public}@ excluded:%{public}@
No peer: %{public}@
After removals: included:%{public}@ excluded:%{public}@
Beginning sponsor checking; machine ID list: %{public}@
After sponsor checking: included:%{public}@ excluded:%{public}@
After voucher checking: included:%{public}@ excluded:%{public}@
Preapproved keys: %{public}@
New preapproval list: %{public}@
Using existing preapproval list: %{public}@
Final preapproval list: %{public}@
Peer %{public}@ preapproved
After preapproval checking: included:%{public}@ excluded:%{public}@
Remote peers with the ego machine ID: %{public}@
No local machine ID; not filtering peers
After machine ID checking: included:%{public}@ excluded:%{public}@
Peer (%{public}@) unknown, distrusting by default
Peer (%{public}@) is using an unknown policy version (%llu, %@), not distrusting unknown peers (error: %@)
Peer distrusts self
Update would result in zero trusted peers; failing
Analysis didn't actually change anything, returning old dynamicInfo
After exclusion filtering: included:%{public}@ excluded:%{public}@
Returning new dynamicinfo: %{public}@
Peer (%{public}@) has an unknown machine ID (%{public}@)
Peer (%{public}@) has an unknown machine ID (%{public}@), but leaving disposition as 'disallowed'
Peer (%{public}@) has a disallowed machine ID (%{public}@)
From our sponsor (%{public}@), included: %{public}@ excluded: %{public}@
Trusting %{public}@ due to preapproval
Not including %{public}@ even through they are preapproved
Unable to create initial dynamic info for peer: %{public}@
Peer %@ supports this recovery key, but cannot sponsor peer %@: %@
Peer %@ supports this Custodian RK, but cannot sponsor peer %@: %@
isRecoveryKeyEnrolled: sign %{public}@, enc %{public}@, count = %lu
isRecoveryKeyEnrolled: returning 1 %d
isCustodianRecoveryKeyTrusted: size = %lu
isCustodianRecoveryKeyTrusted: returning 2 %d
Recovery Keys changed! currently set signingKey: %@, currently set encryptionKey: %@, new signingKey: %@, new encryption Key: %@
registerCustodianRecoveryKey %{public}@ -- size now %lu
removeCustodianRecoveryKey: %{public}@
Peer %@ trusts the following unknown peer IDs: %@
Peer %@ trusts the following peer ID, but we don't recognize the hash: %@
Failed to make regex; cannot change modelID: %@
BecomeiProd Status set via feature flag to %s
BecomeiProd Status overridden to %s
BecomeiProd Status override removed
Error matching with rule %@: %@
TPCategoryRule
NSSecureCoding
NSCoding
TPPeerDynamicInfo
TPPolicy
TPPBDictionaryMatchingRuleFieldExists
NSCopying
TPModel
TPPBPeerStableInfoSetting
TPPolicyDocument
TPMachineID
TPMachineIDList
TPHashBuilder
TPPBDictionaryMatchingRuleFieldRegexMatch
TPPBDictionaryMatchingRule
TPPeerStableInfo
TPPBSecureElementIdentity
TPCustodianRecoveryKey
TPECPublicKeyFactory
TPPublicKeyFactory
NSObject
TPPeerPermanentInfo
TPPBPolicyKeyViewMapping
TPRecoveryKeyPair
TPCachedViableBottles
TPPolicyVersion
TPPublicKey
TPKeyPair
TPPeer
TPPBDispositionDuplicateMachineID
UsefulConstructors
TPVoucher
TPPBDispositionEntry
TPPBDispositionDisallowedMachineID
TPPBAncientEpoch
TPPBPolicyProhibits
TPPBUnknownMachineID
TPPBDisposition
TPPBPeerPermanentInfo
TPPBDictionaryMatchingRules
TPDictionaryMatchingRule
TPPBPeerDynamicInfo
TPPBPolicySecret
TPPBCustodianRecoveryKey
TPPBPeerStableInfoX
TPSyncingPolicy
TPPBVoucher
TPPBPolicyDocument
TPPBPolicyCategoriesByView
TPPBPolicyIntroducersByCategory
TPStringTable
Testing
TPPBPolicyModelToCategory
TPPBPolicyRedaction
SimpleConstructor
verify:withKey:error:
unionSet:
stringWithFormat:
stringByReplacingMatchesInString:options:range:withTemplate:
sortedArrayUsingSelector:
sortedArrayUsingDescriptors:
sortDescriptorWithKey:ascending:
signature
sign:withKey:error:
setWithSet:
setWithObject:
setWithCapacity:
setObject:forKeyedSubscript:
setObject:forKey:
setByAddingObjectsFromSet:
removeObjectForKey:
removeObject:
removeAllObjects
regularExpressionWithPattern:options:error:
predicateWithBlock:
objectsPassingTest:
objectForKeyedSubscript:
objectForKey:
objectAtIndexedSubscript:
objectAtIndex:
numberWithUnsignedLongLong:
numberWithLong:
numberWithBool:
numberOfMatchesInString:options:range:
mutableCopy
mutableBytes
minusSet:
member:
longValue
length
keyWithSubjectPublicKeyInfo:
isSubsetOfSet:
isEqualToString:
isEqualToSet:
isEqualToDictionary:
isEqualToData:
initWithUUIDString:
initWithPattern:options:error:
initWithOptions:capacity:
initWithObjects:count:
initWithLength:
initWithKeySpecifier:digestOperation:
initWithData:specifier:error:
initWithData:signature:
initWithData:
initWithCurve:
initWithCapacity:
hasPrefix:
handleFailureInMethod:object:file:lineNumber:description:
filteredArrayUsingPredicate:
exceptionWithName:reason:userInfo:
errorWithDomain:code:userInfo:
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
encryptData:error:
encodeSubjectPublicKeyInfo
encodeObject:forKey:
encodeInt64:forKey:
encodeBool:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithDictionary:
dictionaryWithCapacity:
dictionary
decryptData:withKey:error:
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
decodeBoolForKey:
dataUsingEncoding:
currentHandler
countByEnumeratingWithState:objects:count:
count
copy
containsObject:
componentsJoinedByString:
bytes
base64EncodedStringWithOptions:
arrayWithObjects:count:
arrayWithCapacity:
arrayByAddingObjectsFromArray:
array
appendData:
allocWithZone:
allValues
allObjects
allKeys
addObjectsFromArray:
addObject:
addEntriesFromDictionary:
UUIDString
UTF8String
init
ruleWithPrefix:category:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
isEqualToCategoryRule:
isEqual:
hash
description
prefix
setPrefix:
category
setCategory:
.cxx_destruct
_prefix
_category
T@"NSString",C,N,V_prefix
T@"NSString",C,N,V_category
dynamicInfoPBWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:
dynamicInfoWithClock:includedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
dynamicInfoWithData:sig:
initWithObj:data:sig:
dispositions
copyWithZone:
checkSignatureWithKey:
isEqualToPeerDynamicInfo:
dictionaryRepresentation
clock
includedPeerIDs
excludedPeerIDs
preapprovals
data
_clock
_includedPeerIDs
_excludedPeerIDs
_preapprovals
_data
_sig
TQ,R,N,V_clock
T@"NSSet",R,N,V_includedPeerIDs
T@"NSSet",R,N,V_excludedPeerIDs
T@"NSDictionary",R,N
T@"NSSet",R,N,V_preapprovals
T@"NSData",R,N,V_data
T@"NSData",R,N,V_sig
policyWithModelToCategory:categoriesByView:introducersByCategory:keyViewMapping:unknownRedactions:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:version:
categoryForModel:
trustedPeerInCategory:canIntroduceCategory:
peerInCategory:canAccessView:
syncingPolicyForModel:syncUserControllableViews:isInheritedAccount:error:
viewsForModel:error:
isEqualToPolicy:
version
setVersion:
modelToCategory
setModelToCategory:
categoriesByView
setCategoriesByView:
introducersByCategory
setIntroducersByCategory:
keyViewMapping
setKeyViewMapping:
userControllableViewList
setUserControllableViewList:
piggybackViews
setPiggybackViews:
priorityViews
setPriorityViews:
inheritedExcludedViews
setInheritedExcludedViews:
unknownRedactions
setUnknownRedactions:
_unknownRedactions
_version
_modelToCategory
_categoriesByView
_introducersByCategory
_keyViewMapping
_userControllableViewList
_piggybackViews
_priorityViews
_inheritedExcludedViews
T@"TPPolicyVersion",&,N,V_version
T@"NSArray",&,N,V_modelToCategory
T@"NSDictionary",&,N,V_categoriesByView
T@"NSDictionary",&,N,V_introducersByCategory
T@"NSArray",&,N,V_keyViewMapping
T@"NSSet",&,N,V_userControllableViewList
T@"NSSet",&,N,V_piggybackViews
T@"NSSet",&,N,V_priorityViews
T@"NSSet",&,N,V_inheritedExcludedViews
TB,V_unknownRedactions
hasFieldName
readFrom:
writeTo:
copyTo:
mergeFrom:
fieldName
setFieldName:
_fieldName
TB,R,N
T@"NSString",&,N,V_fieldName
compare:
preapprovalsFromKeys:
initWithDecrypter:
latestEpochAmongPeerIDs:
registerPolicyDocument:
policyWithVersion:
allPeerIDs
allPeers
allVouchers
allPolicyVersions
allRegisteredPolicyVersions
registerPeerWithPermanentInfo:
deletePeerWithID:
hasPeerWithID:
peerWithID:
custodianPeerWithID:
actualPeerWithID:error:
allMachineIDs
viablePeerCountsByModelID
peerCountsByMachineID
hasPotentiallyTrustedPeerPreapprovingKey:
hasPotentiallyTrustedPeerWithSigningKey:
validatePeerWithPreApproval:sponsor:
statusOfPeerWithID:
getStableInfoForPeerWithID:
getDynamicInfoForPeerWithID:
userViewSyncabilityConsensusAmongTrustedPeers:
updateStableInfo:forPeerWithID:error:
createStableInfoWithFrozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
updateDynamicInfo:forPeerWithID:error:
maxClock
createDynamicInfoWithIncludedPeerIDs:excludedPeerIDs:dispositions:preapprovals:signingKeyPair:error:
canTrustCandidate:inEpoch:
canIntroduceCandidate:withSponsor:toEpoch:underPolicy:disposition:
checkIntroductionForCandidate:stableInfo:withSponsorID:error:
createVoucherForCandidate:stableInfo:withSponsorID:reason:signingKeyPair:error:
verifyVoucherSignature:
validateVoucherForPeer:sponsor:
registerVoucher:
checkVouchers
considerCandidateID:withSponsorID:sponsorPermanentInfo:toExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
considerVouchersSponsoredByPeerID:sponsorPermanentInfo:toRecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
considerPreapprovalsSponsoredByPeer:toRecursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:currentMachineIDs:forEpoch:
recursivelyExpandIncludedPeerIDs:andExcludedPeerIDs:dispositions:withPeersTrustedBySponsorID:currentMachineIDs:forEpoch:
calculateDynamicInfoForPeerWithID:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
calculateDynamicInfoFromModel:peer:peerPermanentInfo:peerStableInfo:startingDynamicInfo:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
filterPeerList:byMachineIDs:dispositions:
peersWithMachineID:
filterPreapprovals:forExistingPeers:
dynamicInfoForJoiningPeerID:peerPermanentInfo:peerStableInfo:sponsorID:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
policyForPeerIDs:candidatePeerID:candidateStableInfo:error:
considerPolicyFromPeerID:stableInfo:secrets:newestPolicyDoc:error:
getViewsForPeer:stableInfo:error:
getViewsForCRK:donorPermanentInfo:donorStableInfo:error:
getPeerIDsTrustedByPeerWithID:toAccessView:error:
getPeerIDsTrustedByPeerWithDynamicInfo:toAccessView:error:
vectorClock
bestRecoveryKeyForStableInfo:dynamicInfo:
bestWalrusForStableInfo:dynamicInfo:walrusStableChanges:
bestWalrusAcrossTrustedPeers
untrustedPeerIDs
peerIDThatTrustsRecoveryKeys:canIntroducePeer:stableInfo:
peerIDThatTrustsCustodianRecoveryKeys:canIntroducePeer:stableInfo:
isRecoveryKeyEnrolled
isCustodianRecoveryKeyTrusted:
setRecoveryKeys:
recoverySigningPublicKey
recoveryEncryptionPublicKey
registerCustodianRecoveryKey:
removeCustodianRecoveryKey:
findCustodianRecoveryKeyWithUUID:
allCustodianRecoveryKeys
allCustodianRecoveryKeyPeerIDs
currentStatePossiblyMissingData
peersByID
setPeersByID:
policiesByVersion
setPoliciesByVersion:
uncheckedVouchers
setUncheckedVouchers:
vouchers
setVouchers:
decrypter
setDecrypter:
recoverySigningPubKey
setRecoverySigningPubKey:
recoveryEncryptionPubKey
setRecoveryEncryptionPubKey:
custodianRecoveryKeys
setCustodianRecoveryKeys:
_peersByID
_policiesByVersion
_uncheckedVouchers
_vouchers
_decrypter
_recoverySigningPubKey
_recoveryEncryptionPubKey
_custodianRecoveryKeys
T@"NSMutableDictionary",&,N,V_peersByID
T@"NSMutableDictionary",&,N,V_policiesByVersion
T@"NSMutableSet",&,N,V_uncheckedVouchers
T@"NSMutableSet",&,N,V_vouchers
T@"<TPDecrypter>",&,N,V_decrypter
T@"NSData",&,N,V_recoverySigningPubKey
T@"NSData",&,N,V_recoveryEncryptionPubKey
T@"NSMutableDictionary",&,N,V_custodianRecoveryKeys
setClock:
setHasClock:
hasClock
setValue:
setHasValue:
hasValue
value
_value
_has
TB,N
TQ,N,V_clock
TB,N,V_value
modelToCategoryFromPb:
categoriesByViewFromPb:
introducersByCategoryFromPb:
redactionsFromPb:
addModelToCategory:toPB:
addCategoriesByView:toPB:
addIntroducersByCategory:toPB:
addRedactions:toPB:
addKeyViewMapping:toPB:
policyDocWithHash:data:
redactionWithEncrypter:modelToCategory:categoriesByView:introducersByCategory:keyViewMapping:error:
isEqualKeyViewMapping:other:
initWithHash:data:
initWithVersion:modelToCategory:categoriesByView:introducersByCategory:redactions:keyViewMapping:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:hashAlgo:
encodeProtobuf
policyWithSecrets:decrypter:error:
isEqualToPolicyDocument:
cloneWithVersionNumber:
cloneWithVersionNumber:prependingCategoriesByView:prependingKeyViewMapping:
protobuf
_protobuf
T@"NSArray",R
T@"TPPolicyVersion",R,N,V_version
T@"NSData",R,N,V_protobuf
initWithMachineID:status:modified:
machineID
status
modified
_machineID
_status
_modified
T@"NSString",R,V_machineID
TQ,R,V_status
T@"NSDate",R,V_modified
initWithEntries:
entryFor:
machineIDsInStatus:
entries
_entries
T@"NSArray",R,V_entries
algoOfHash:
hashWithAlgo:ofData:
hashWithAlgo:ofBytes:len:
initWithAlgo:
resetWithAlgo:
updateWithData:
updateWithBytes:len:
finalHash
throwInvalidAlgo
algo
setAlgo:
ctxSHA256
setCtxSHA256:
ctxSHA512
setCtxSHA512:
_algo
_ctxSHA256
_ctxSHA512
Tq,N,V_algo
T{CC_SHA256state_st=[2I][8I][16I]},N,V_ctxSHA256
T{CC_SHA512state_st=[2Q][8Q][16Q]},N,V_ctxSHA512
hasRegex
regex
setRegex:
_regex
T@"NSString",&,N,V_regex
andType
orType
type
setType:
setHasType:
hasType
typeAsString:
StringAsType:
clearAnds
addAnd:
andsCount
andAtIndex:
clearOrs
addOr:
orsCount
orAtIndex:
hasNot
hasMatch
hasExists
ands
setAnds:
setOrs:
setNot:
match
setMatch:
exists
setExists:
_ands
_exists
_match
_not
_ors
_type
Ti,N,V_type
T@"NSMutableArray",&,N,V_ands
T@"NSMutableArray",&,N,V_ors
T@"TPPBDictionaryMatchingRule",&,N,V_not
T@"TPPBDictionaryMatchingRuleFieldRegexMatch",&,N,V_match
T@"TPPBDictionaryMatchingRuleFieldExists",&,N,V_exists
pbToNullable
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:deviceName:serialNumber:osVersion:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:data:sig:
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
initWithData:sig:
isEqualToPeerStableInfo:
bestPolicyVersion
frozenPolicyVersion
flexiblePolicyVersion
policySecrets
deviceName
serialNumber
osVersion
syncUserControllableViews
secureElementIdentity
walrusSetting
isInheritedAccount
setIsInheritedAccount:
_isInheritedAccount
_syncUserControllableViews
_frozenPolicyVersion
_flexiblePolicyVersion
_policySecrets
_deviceName
_serialNumber
_osVersion
_recoverySigningPublicKey
_recoveryEncryptionPublicKey
_secureElementIdentity
_walrusSetting
T@"TPPolicyVersion",R,V_frozenPolicyVersion
T@"TPPolicyVersion",R,V_flexiblePolicyVersion
T@"NSDictionary",R,N,V_policySecrets
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_serialNumber
T@"NSString",R,N,V_osVersion
T@"NSData",R,N,V_recoverySigningPublicKey
T@"NSData",R,N,V_recoveryEncryptionPublicKey
Ti,R,N,V_syncUserControllableViews
T@"TPPBSecureElementIdentity",R,N,V_secureElementIdentity
T@"TPPBPeerStableInfoSetting",R,N,V_walrusSetting
TB,N,V_isInheritedAccount
hasPeerIdentifier
hasPeerData
peerIdentifier
setPeerIdentifier:
peerData
setPeerData:
_peerData
_peerIdentifier
T@"NSData",&,N,V_peerIdentifier
T@"NSData",&,N,V_peerData
peerIDForData:sig:peerIDHashAlgo:
custodianRecoveryKeyWithData:sig:keyFactory:
initWithUUID:signingPublicKey:encryptionPublicKey:kind:data:sig:peerID:
initWithUUID:signingPublicKey:encryptionPublicKey:signingKeyPair:kind:error:
uuid
setUuid:
peerID
setPeerID:
signingPublicKey
setSigningPublicKey:
encryptionPublicKey
setEncryptionPublicKey:
kind
setKind:
_kind
_uuid
_peerID
_signingPublicKey
_encryptionPublicKey
T@"NSUUID",&,N,V_uuid
T@"NSString",&,N,V_peerID
T@"<TPPublicKey>",&,N,V_signingPublicKey
T@"<TPPublicKey>",&,N,V_encryptionPublicKey
Ti,N,V_kind
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
keyFromSPKI:
permanentInfoWithMachineID:modelID:epoch:signingKeyPair:encryptionKeyPair:peerIDHashAlgo:error:
permanentInfoWithPeerID:data:sig:keyFactory:
initWithMachineID:modelID:epoch:signingPubKey:encryptionPubKey:data:sig:peerID:
modelID
epoch
signingPubKey
encryptionPubKey
_modelID
_epoch
_signingPubKey
_encryptionPubKey
T@"NSString",R,N,V_machineID
T@"NSString",R,N,V_modelID
TQ,R,N,V_epoch
T@"<TPPublicKey>",R,N,V_signingPubKey
T@"<TPPublicKey>",R,N,V_encryptionPubKey
T@"NSString",R,N,V_peerID
hasMatchingRule
hasView
matchingRule
setMatchingRule:
view
setView:
_matchingRule
_view
T@"TPPBDictionaryMatchingRule",&,N,V_matchingRule
T@"NSString",&,N,V_view
initWithSigningKeyData:encryptionKeyData:
initWithStableInfo:
signingKeyData
encryptionKeyData
_signingKeyData
_encryptionKeyData
T@"NSData",R,&,V_signingKeyData
T@"NSData",R,&,V_encryptionKeyData
initWithViableBottles:partialBottles:
viableBottles
partialBottles
_viableBottles
_partialBottles
T@"NSArray",R,&,V_viableBottles
T@"NSArray",R,&,V_partialBottles
initWithVersion:hash:
versionNumber
policyHash
_versionNumber
_policyHash
TQ,R,V_versionNumber
T@"NSString",R,&,V_policyHash
spki
checkSignature:matchesData:
signatureForData:withError:
publicKey
initWithPermanentInfo:
initWithPermanentInfo:stableInfo:dynamicInfo:
peerWithUpdatedStableInfo:error:
peerWithUpdatedDynamicInfo:error:
trustedPeerIDs
permanentInfo
stableInfo
dynamicInfo
_permanentInfo
_stableInfo
_dynamicInfo
T@"NSString",R,N
T@"TPPeerPermanentInfo",R,N,V_permanentInfo
T@"TPPeerStableInfo",R,N,V_stableInfo
T@"TPPeerDynamicInfo",R,N,V_dynamicInfo
T@"NSSet",R,N
errorWithDomain:code:description:
errorWithDomain:code:description:underlying:
voucherWithReason:beneficiaryID:sponsorID:signingKeyPair:error:
voucherInfoWithData:sig:
createRecoveryECPublicKey:
isEqualToVoucher:
reason
setReason:
beneficiaryID
setBeneficiaryID:
sponsorID
setSponsorID:
setData:
setSig:
_reason
_beneficiaryID
_sponsorID
TQ,N,V_reason
T@"NSString",&,N,V_beneficiaryID
T@"NSString",&,N,V_sponsorID
T@"NSData",&,N,V_data
T@"NSData",&,N,V_sig
hasPeerID
hasDisposition
disposition
setDisposition:
_disposition
T@"TPPBDisposition",&,N,V_disposition
setMyEpoch:
setHasMyEpoch:
hasMyEpoch
setCandidateEpoch:
setHasCandidateEpoch:
hasCandidateEpoch
myEpoch
candidateEpoch
_candidateEpoch
_myEpoch
TQ,N,V_myEpoch
TQ,N,V_candidateEpoch
setPolicyVersion:
setHasPolicyVersion:
hasPolicyVersion
hasSponsorId
hasSponsorCategory
hasCandidateCategory
hasExplanation
policyVersion
sponsorId
setSponsorId:
sponsorCategory
setSponsorCategory:
candidateCategory
setCandidateCategory:
explanation
setExplanation:
_policyVersion
_candidateCategory
_explanation
_sponsorCategory
_sponsorId
TQ,N,V_policyVersion
T@"NSString",&,N,V_sponsorId
T@"NSString",&,N,V_sponsorCategory
T@"NSString",&,N,V_candidateCategory
T@"NSString",&,N,V_explanation
hasAncientEpoch
hasPolicyProhibits
hasUnknownMachineID
hasDuplicateMachineID
hasDisallowedMachineID
ancientEpoch
setAncientEpoch:
policyProhibits
setPolicyProhibits:
unknownMachineID
setUnknownMachineID:
duplicateMachineID
setDuplicateMachineID:
disallowedMachineID
setDisallowedMachineID:
_ancientEpoch
_disallowedMachineID
_duplicateMachineID
_policyProhibits
_unknownMachineID
T@"TPPBAncientEpoch",&,N,V_ancientEpoch
T@"TPPBPolicyProhibits",&,N,V_policyProhibits
T@"TPPBUnknownMachineID",&,N,V_unknownMachineID
T@"TPPBDispositionDuplicateMachineID",&,N,V_duplicateMachineID
T@"TPPBDispositionDisallowedMachineID",&,N,V_disallowedMachineID
setEpoch:
setHasEpoch:
hasEpoch
hasSigningPubKey
hasEncryptionPubKey
hasMachineId
hasModelId
setSigningPubKey:
setEncryptionPubKey:
machineId
setMachineId:
modelId
setModelId:
_machineId
_modelId
TQ,N,V_epoch
T@"NSData",&,N,V_signingPubKey
T@"NSData",&,N,V_encryptionPubKey
T@"NSString",&,N,V_machineId
T@"NSString",&,N,V_modelId
matches:error:
performAndMatch:error:
performOrMatch:error:
invertMatch:error:
fieldExists:
fieldMatch:fieldRegex:
notMatch:
andMatch:
orMatch:
trueMatch
falseMatch
includedType
excludedType
dispositionsType
preapprovalsType
clearIncludeds
addIncluded:
includedsCount
includedAtIndex:
clearExcludeds
addExcluded:
excludedsCount
excludedAtIndex:
clearDispositions
addDispositions:
dispositionsCount
dispositionsAtIndex:
clearPreapprovals
addPreapprovals:
preapprovalsCount
preapprovalsAtIndex:
includeds
setIncludeds:
excludeds
setExcludeds:
setDispositions:
setPreapprovals:
_dispositions
_excludeds
_includeds
T@"NSMutableArray",&,N,V_includeds
T@"NSMutableArray",&,N,V_excludeds
T@"NSMutableArray",&,N,V_dispositions
T@"NSMutableArray",&,N,V_preapprovals
hasName
hasSecret
name
setName:
secret
setSecret:
_name
_secret
T@"NSString",&,N,V_name
T@"NSData",&,N,V_secret
hasUuid
hasSigningPublicKey
hasEncryptionPublicKey
setHasKind:
hasKind
kindAsString:
StringAsKind:
T@"NSString",&,N,V_uuid
T@"NSData",&,N,V_signingPublicKey
T@"NSData",&,N,V_encryptionPublicKey
policySecretsType
custodianRecoveryKeysType
setFrozenPolicyVersion:
setHasFrozenPolicyVersion:
hasFrozenPolicyVersion
hasFrozenPolicyHash
hasOsVersion
hasDeviceName
hasRecoverySigningPublicKey
hasRecoveryEncryptionPublicKey
hasSerialNumber
setFlexiblePolicyVersion:
setHasFlexiblePolicyVersion:
hasFlexiblePolicyVersion
hasFlexiblePolicyHash
clearPolicySecrets
addPolicySecrets:
policySecretsCount
policySecretsAtIndex:
userControllableViewStatus
setUserControllableViewStatus:
setHasUserControllableViewStatus:
hasUserControllableViewStatus
userControllableViewStatusAsString:
StringAsUserControllableViewStatus:
clearCustodianRecoveryKeys
addCustodianRecoveryKeys:
custodianRecoveryKeysCount
custodianRecoveryKeysAtIndex:
hasSecureElementIdentity
hasWalrus
setHasIsInheritedAccount:
hasIsInheritedAccount
frozenPolicyHash
setFrozenPolicyHash:
setOsVersion:
setDeviceName:
setRecoverySigningPublicKey:
setRecoveryEncryptionPublicKey:
setSerialNumber:
flexiblePolicyHash
setFlexiblePolicyHash:
setPolicySecrets:
setSecureElementIdentity:
walrus
setWalrus:
_flexiblePolicyHash
_frozenPolicyHash
_userControllableViewStatus
_walrus
TQ,N,V_frozenPolicyVersion
T@"NSString",&,N,V_frozenPolicyHash
T@"NSString",&,N,V_osVersion
T@"NSString",&,N,V_deviceName
T@"NSData",&,N,V_recoverySigningPublicKey
T@"NSData",&,N,V_recoveryEncryptionPublicKey
T@"NSString",&,N,V_serialNumber
TQ,N,V_flexiblePolicyVersion
T@"NSString",&,N,V_flexiblePolicyHash
T@"NSMutableArray",&,N,V_policySecrets
Ti,N,V_userControllableViewStatus
T@"NSMutableArray",&,N,V_custodianRecoveryKeys
T@"TPPBSecureElementIdentity",&,N,V_secureElementIdentity
T@"TPPBPeerStableInfoSetting",&,N,V_walrus
initWithModel:version:viewList:priorityViews:userControllableViews:syncUserControllableViews:viewsToPiggybackTLKs:keyViewMapping:isInheritedAccount:
mapDictionaryToView:
syncUserControllableViewsAsBoolean
isSyncingEnabledForView:
model
viewList
viewsToPiggybackTLKs
userControllableViews
_model
_viewList
_viewsToPiggybackTLKs
_userControllableViews
T@"NSString",R,V_model
T@"TPPolicyVersion",R,V_version
T@"NSArray",R,V_keyViewMapping
T@"NSSet",R,V_viewList
T@"NSSet",R,V_priorityViews
T@"NSSet",R,V_viewsToPiggybackTLKs
T@"NSSet",R,V_userControllableViews
TB,V_isInheritedAccount
Ti,R,V_syncUserControllableViews
setHasReason:
hasReason
reasonAsString:
StringAsReason:
hasBeneficiary
hasSponsor
beneficiary
setBeneficiary:
sponsor
setSponsor:
_beneficiary
_sponsor
Ti,N,V_reason
T@"NSString",&,N,V_beneficiary
T@"NSString",&,N,V_sponsor
modelToCategoryType
categoriesByViewType
introducersByCategoryType
redactionsType
keyViewMappingType
userControllableViewsType
piggybackViewsType
priorityViewsType
inheritedExcludedViewsType
clearModelToCategorys
addModelToCategory:
modelToCategorysCount
modelToCategoryAtIndex:
clearCategoriesByViews
addCategoriesByView:
categoriesByViewsCount
categoriesByViewAtIndex:
clearIntroducersByCategorys
addIntroducersByCategory:
introducersByCategorysCount
introducersByCategoryAtIndex:
clearRedactions
addRedactions:
redactionsCount
redactionsAtIndex:
clearKeyViewMappings
addKeyViewMapping:
keyViewMappingsCount
keyViewMappingAtIndex:
clearUserControllableViews
addUserControllableViews:
userControllableViewsCount
userControllableViewsAtIndex:
clearPiggybackViews
addPiggybackViews:
piggybackViewsCount
piggybackViewsAtIndex:
clearPriorityViews
addPriorityViews:
priorityViewsCount
priorityViewsAtIndex:
clearInheritedExcludedViews
addInheritedExcludedViews:
inheritedExcludedViewsCount
inheritedExcludedViewsAtIndex:
modelToCategorys
setModelToCategorys:
categoriesByViews
setCategoriesByViews:
introducersByCategorys
setIntroducersByCategorys:
redactions
setRedactions:
keyViewMappings
setKeyViewMappings:
setUserControllableViews:
_categoriesByViews
_introducersByCategorys
_keyViewMappings
_modelToCategorys
_redactions
T@"NSMutableArray",&,N,V_modelToCategorys
T@"NSMutableArray",&,N,V_categoriesByViews
T@"NSMutableArray",&,N,V_introducersByCategorys
T@"NSMutableArray",&,N,V_redactions
T@"NSMutableArray",&,N,V_keyViewMappings
T@"NSMutableArray",&,N,V_userControllableViews
T@"NSMutableArray",&,N,V_piggybackViews
T@"NSMutableArray",&,N,V_priorityViews
T@"NSMutableArray",&,N,V_inheritedExcludedViews
categoriesType
clearCategories
addCategories:
categoriesCount
categoriesAtIndex:
categories
setCategories:
_categories
T@"NSMutableArray",&,N,V_categories
introducersType
hasCategory
clearIntroducers
addIntroducers:
introducersCount
introducersAtIndex:
introducers
setIntroducers:
_introducers
T@"NSString",&,N,V_category
T@"NSMutableArray",&,N,V_introducers
defaultTable
initWithIdentifier:
stringWithString:
setWithArray:
queue
setQueue:
table
setTable:
_queue
_table
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSHashTable",&,V_table
_count
hasPrefix
T@"NSString",&,N,V_prefix
hasKey
setKey:
_key
T@"NSString",&,N,V_key
T@"NSData",&,N,V_value
TPPBPolicyKeyViewMappingWithView:matchingRule:
TPPBPolicyCategoriesByViewWithView:categories:
TPPBPolicyIntroducersByCategoryWithCategory:introducers:
TPPBPolicyModelToCategoryWithPrefix:category:
@32@0:8@16@24
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
Q16@0:8
@16@0:8
v16@0:8
@"NSString"
@56@0:8Q16@24@32@40@48
@72@0:8Q16@24@32@40@48@56^@64
@40@0:8@16@24@32
@24@0:8^{_NSZone=}16
@"NSSet"
@"NSData"
@92@0:8@16@24@32@40B48@52@60@68@76@84
B32@0:8@16@24
@40@0:8@16i24B28^@32
@32@0:8@16^@24
v20@0:8B16
@"TPPolicyVersion"
@"NSArray"
@"NSDictionary"
Q24@0:8@16
@24@0:8Q16
i24@0:8@16
B40@0:8@16@24^@32
@120@0:8@16@24@32i40@44@52@60@68@76@84@92@100B108^@112
@64@0:8@16@24@32@40@48^@56
B32@0:8@16Q24
B56@0:8@16@24Q32@40@48
B48@0:8@16@24@32^@40
@64@0:8@16@24@32Q40@48^@56
@80@0:8@16@24@32@40@48@56@64Q72
v72@0:8@16@24@32@40@48@56Q64
v64@0:8@16@24@32@40@48Q56
@72@0:8@16@24@32@40@48@56^@64
@104@0:8@16@24@32@40@48@56@64@72@80@88^@96
v32@0:8@16@24
@80@0:8@16@24@32@40@48@56@64^@72
@48@0:8@16@24@32^@40
B56@0:8@16@24@32^@40^@48
@40@0:8@16@24^@32
@"NSMutableDictionary"
@"NSMutableSet"
@"<TPDecrypter>"
v24@0:8Q16
{?="clock"b1"value"b1}
@104@0:8Q16@24@32@40@48@56@64@72@80@88q96
@40@0:8Q16@24@32
@40@0:8@16Q24@32
@"NSDate"
q24@0:8@16
@32@0:8q16@24
@40@0:8q16r^v24Q32
@24@0:8q16
v24@0:8q16
v32@0:8r^v16Q24
q16@0:8
{CC_SHA256state_st=[2I][8I][16I]}16@0:8
v120@0:8{CC_SHA256state_st=[2I][8I][16I]}16
{CC_SHA512state_st=[2Q][8Q][16Q]}16@0:8
v224@0:8{CC_SHA512state_st=[2Q][8Q][16Q]}16
{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}
{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}
#16@0:8
i16@0:8
v20@0:8i16
@20@0:8i16
@"NSMutableArray"
@"TPPBDictionaryMatchingRuleFieldExists"
@"TPPBDictionaryMatchingRuleFieldRegexMatch"
@"TPPBDictionaryMatchingRule"
{?="type"b1}
@128@0:8Q16@24@32@40i48@52@60@68@76@84@92@100B108@112@120
@128@0:8Q16@24@32@40i48@52@60@68@76@84@92@100@108B116^@120
@"TPPBSecureElementIdentity"
@"TPPBPeerStableInfoSetting"
@40@0:8@16@24q32
@68@0:8@16@24@32i40@44@52@60
@60@0:8@16@24@32@40i48^@52
@"NSUUID"
@"<TPPublicKey>"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<TPPublicKey>"24@0:8@"NSData"16
@72@0:8@16@24Q32@40@48q56^@64
@48@0:8@16@24@32@40
@80@0:8@16@24Q32@40@48@56@64@72
@32@0:8Q16@24
@"NSData"16@0:8
B32@0:8@"NSData"16@"NSData"24
@"<TPPublicKey>"16@0:8
@"NSData"32@0:8@"NSData"16^@24
@"TPPeerPermanentInfo"
@"TPPeerStableInfo"
@"TPPeerDynamicInfo"
@40@0:8@16q24@32
@48@0:8@16q24@32@40
@56@0:8Q16@24@32@40^@48
@"TPPBDisposition"
{?="candidateEpoch"b1"myEpoch"b1}
{?="policyVersion"b1}
@"TPPBAncientEpoch"
@"TPPBDispositionDisallowedMachineID"
@"TPPBDispositionDuplicateMachineID"
@"TPPBPolicyProhibits"
@"TPPBUnknownMachineID"
{?="epoch"b1}
B32@0:8@16^@24
{?="clock"b1}
{?="kind"b1}
{?="clock"b1"flexiblePolicyVersion"b1"frozenPolicyVersion"b1"userControllableViewStatus"b1"isInheritedAccount"b1}
@80@0:8@16@24@32@40@48i56@60@68B76
{?="reason"b1}
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
