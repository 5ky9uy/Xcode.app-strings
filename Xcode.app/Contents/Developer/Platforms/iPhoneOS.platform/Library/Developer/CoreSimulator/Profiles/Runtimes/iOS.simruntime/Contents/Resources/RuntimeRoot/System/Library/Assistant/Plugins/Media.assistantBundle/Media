Rate Media Entity (invoke) <%{public}@>: %lu UIDs rating %ld
Rate Media Entity (completion) <%{public}@>: notifying assistant %{public}@
Start Playback (invoke) <%{public}@>: %lu UIDs
Start Playback (completion) <%{public}@>: notifying assistant %{public}@
Get State Response Remote (playinginfo) <%{public}@>: Set info for: %{public}@
Get State Response Remote (playinginfo) <%{public}@>: cannot resolve player path %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: %ld output devices endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: using first output device %{public}@
Get State Response Remote (playinginfo) <%{public}@>: using cluster device IDs %{public}@
Get State Response Remote (playinginfo) <%{public}@>: using output device ID %{public}@
Get State Response Remote (playinginfo) <%{public}@>: hashedUID %{public}@ response %{public}@.
Get State Response Remote (playinginfo) <%{public}@>: UID %{public}@ was not requested
Get State Response Remote (playinginfo) <%{public}@>: group identity %{public}@endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: is music app %{BOOL}u endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: no device info %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: playback state %ld endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: playing %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: no queue %{public}@ endpoint %{public}@
Get State Response Remote (invoke) <%{public}@>: %lu UIDs
Get State Response Remote (discovery) <%{public}@>: To discover: %{public}@
Get State Response Remote (completion) <%{public}@>: notifying assistant %{public}@
Get State Response Remote (discovery) <%{public}@>: Discovered: %{public}@
Get State Response Remote (connect) <%{public}@>: Failed connect: %{public}@ -- %{public}@
Add Media Items To Playlist (cloud items) <%{public}@>: head insertion
Add Media Items To Playlist (cloud items) <%{public}@>: prepend store: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: prepend saga: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: prepend adam: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: prepend failed: %{public}@
%{public}@ (cloud items) <%{public}@>: rewrite finished
Add Media Items To Playlist (cloud items) <%{public}@>: tail insertion
Add Media Items To Playlist (cloud items) <%{public}@>: append store: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: append saga: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: append adam: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: append failed: %{public}@
Add Media Items To Playlist (cloud items) <%{public}@>: rewrite playlist
Add Media Items To Playlist (cloud item) <%{public}@>: tail insertion
Add Media Items To Playlist (cloud item) <%{public}@>: append store: %{public}@
Add Media Items To Playlist (cloud item) <%{public}@>: append: %{public}@
Add Media Items To Playlist (cloud item) <%{public}@>: append saga: %llu
Add Media Items To Playlist (cloud item) <%{public}@>: append adam: %llu
Add Media Items To Playlist (local) <%{public}@>: add adam ID: %lld
Add Media Items To Playlist (local) <%{public}@>: items to add: %lu
Add Media Items To Playlist (local) <%{public}@>: added items
Add Media Items To Playlist (append) <%{public}@>: iCML available
Add Media Items To Playlist (append) <%{public}@>: local library
Add Media Items To Playlist (append) <%{public}@>: failed: %{public}@
Add Media Items To Playlist (invoke) <%{public}@>: insert location %{public}@, media item %{public}@, playlist %{public}@
Add Media Items To Playlist (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Playlist (dealloc) <%{public}@>: dealloced
%{public}@ (completion) <%{public}@>: notifying assistant %{public}@
Pause Playback (invoke) <%{public}@>: %lu UIDs
Pause Playback (completion) <%{public}@>: notifying assistant %{public}@
Get State (invoke) <%{public}@>: invoked
Get State (completion) <%{public}@>: notifying assistant %{public}@
Search (search) <%{public}@>: still loading library
Search (search) <%{public}@>: found %ld results.
Search (search) <%{public}@>: search for artist: %{private}@
Search (search) <%{public}@>: search for album: %{private}@
Search (search) <%{public}@>: search for genre: %{private}@
Search (search) <%{public}@>: search for composer: %{private}@
Search (search) <%{public}@>: search for title: %{private}@
Search (search) <%{public}@>: search for playlist: %{private}@
Search (search) <%{public}@>: search for genius mix: %{private}@
Search (search) <%{public}@>: search for audiobook: %{private}@
Search (invoke) <%{public}@>: invoked
Search (completion) <%{public}@>: notifying assistant %{public}@
Search (completion) <%{public}@>: notifying assistant: %{public}@
Set Shuffle Mode (invoke) <%{public}@>: %lu UIDs, %{public}@ mode
Set Shuffle Mode (completion) <%{public}@>: notifying assistant %{public}@
Decrease Playback Speed (invoke) <%{public}@>: %lu UIDs
Decrease Playback Speed (completion) <%{public}@>: notifying assistant %{public}@
Subscription Status Sync Handler (end): sync ended
Subscription Status Sync Handler (get): %{private}@
Subscription Status Sync Handler (begin): anchor: %{private}@, validity: %{public}@
Subscription Status Sync Handler (anchor): anchor changed, sync expected
Subscription Status Sync Handler (anchor): %{private}@
No title property for grouping %ld
Set Queue (local) <%{public}@>: sending to local WHA destination
Set Queue (local) <%{public}@>: sending to WHA destination
Set Queue (local) <%{public}@>: sending to default destination
Set Queue (local) <%{public}@>: item collection [%ld items] %@
Set Queue (local) <%{public}@>: explicit content allowed: %{BOOL}u
Set Queue (local) <%{public}@>: destination not available, local allowed %{BOOL}u
Set Queue (local) <%{public}@>: find album with pid %{public}@
Set Queue (local) <%{public}@>: found cloud album %{public}@
Set Queue (local) <%{public}@>: found store album %{public}@
Set Queue (local) <%{public}@>: found album title %{public}@
Set Queue (local) <%{public}@>: enqueueing reference item
Set Queue (store) <%{public}@>: playlist %{public}@
Set Queue (store) <%{public}@>: content origin %{public}@
Set Queue (store) <%{public}@>: no playable type set
Set Queue (store) <%{public}@>: no local item %{public}@
Set Queue (store) <%{public}@>: album from %{public}@
Set Queue (store) <%{public}@>: queue from %{public}@
Set Queue (store) <%{public}@>: pilot item %{public}@
Set Queue (store) <%{public}@>: no local item %{public}@.
Set Queue (store) <%{public}@>: no identifier received
Set Queue (store) <%{public}@>: no for you cache
Set Queue (store) <%{public}@>: network unavailable
Set Queue (store) <%{public}@>: content origin %ld
Set Queue (store) <%{public}@>: using collection identifier %{public}@
Set Queue (store) <%{public}@>: queue from store identifers: %{public}@
Set Queue (store) <%{public}@>: remapping not supported
Set Queue (store) <%{public}@>: no playable items in %{public}@
Set Queue (store) <%{public}@>: no media items requested
Set Queue (store) <%{public}@>: destination not available, local allowed YES
Set Queue (radio) <%{public}@>: network unavailable
Set Queue (radio) <%{public}@>: radio unavailable
Set Queue (radio) <%{public}@>: companion unavailable
Set Queue (radio) <%{public}@>: station %{public}@
Set Queue (radio) <%{public}@>: no radio identifier %{public}@
Set Queue (radio) <%{public}@>: destination not available, local allowed %{BOOL}u
Set Queue (invalid) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (radio) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (local) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (localstore) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (store) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (invalid) <%{public}@>: invoke with invalid origin identifier %{public}@%{public}@
Set Queue (localstore) <%{public}@>: search failed, use identifier %{public}@%{public}@
Set Queue (invoke) <%{public}@>: %lu UIDs, asset info present %{BOOL}u, requester shared user id present %{BOOL}u, playable music account shared user id present %{BOOL}u, start %{public}@
Set Queue (completion) <%{public}@>: notifying assistant %{public}@
Move Output Group To Devices (invoke) <%{public}@>: invoked
Move Output Group To Devices (completion) <%{public}@>: notifying assistant %{public}@
Seek To Playback Speed (invoke) <%{public}@>: %lu UIDs, %f speed
Seek To Playback Speed (completion) <%{public}@>: notifying assistant %{public}@
Get Music Influence (invoke) <%{public}@>: invoked
Get Music Influence (completion) <%{public}@>: notifying assistant %{public}@
Unknown identifier URL scheme: %{public}@
[%s] Unsupported identifier URL host: %@
Could not find item with identifier %@
Set Repeat Mode (invoke) <%{public}@>: %lu UIDs, %{public}@ mode
Set Repeat Mode (completion) <%{public}@>: notifying assistant %{public}@
Genius Summon (invoke) <%{public}@>: %lu UIDs, media item %{public}@, start %{public}@, up next %{public}@
Genius Summon (summon) <%{public}@>: seed track: %{public}@
Genius Summon (summon) <%{public}@>: set recommended content
Genius Summon (summon) <%{public}@>: failed setting recommended content: = %ld
Genius Summon (completion) <%{public}@>: notifying assistant %{public}@
Seek To Previous Item (invoke) <%{public}@>: %lu UIDs
Seek To Previous Item (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Up Next Queue (issupported) <%{public}@>: MRMediaRemoteCommandInsertIntoPlaybackQueue not found in supported commands
Add Media Items To Up Next Queue (issupported) <%{public}@>: mode %ld not in %{public}@
Add Media Items To Up Next Queue (storetrack) <%{public}@>: unknown origin for %{public}@
Add Media Items To Up Next Queue (libraryqueue) <%{public}@>: collection %{public}@ does not exist
Add Media Items To Up Next Queue (perform) <%{public}@>: group leader endpoint %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: group leader legacy
Add Media Items To Up Next Queue (perform) <%{public}@>: group leader endpoint not found %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: mode %{public}@ to origin %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: playback queue creation failed %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: sending add request to %@
Add Media Items To Up Next Queue (perform) <%{public}@>: user identity set to: %{private}@
Add Media Items To Up Next Queue (perform) <%{public}@>: could not encode user identity: %{public}@
Add Media Items To Up Next Queue (invoke) <%{public}@>: %lu UIDs, insert location %{public}@, media collection %{public}@
Add Media Items To Up Next Queue (completion) <%{public}@>: notifying assistant %{public}@
Seek To Playback Position (invoke) <%{public}@>: %lu UIDs, %{public}@ position
Seek To Playback Position (completion) <%{public}@>: notifying assistant %{public}@
%{public}@ (utility) <%{public}@>: override requester Shared User ID in place
%{public}@ (utility) <%{public}@>: override library Shared User ID in place
%{public}@ (gethash) <%{public}@>: ace id: %{public}@
%{public}@ (hashedroute) <%{public}@>: encoded route UID table
%{public}@ (hashedroute) <%{public}@>: id: %{public}@
%{public}@ (feedback) <%{public}@>: feedback command %{public}@
%{public}@ (feedback) <%{public}@>: getting now playing
%{public}@ (feedback) <%{public}@>: sending command with options: %{public}@
%{public}@ (feedback) <%{public}@>: command not supported
%{public}@ (sharedid) <%{public}@>: using active account with configured private listening for single user only device
%{public}@ (sharedid) <%{public}@>: library Shared User ID %{private}@
%{public}@ (sharedid) <%{public}@>: using %{private}@ in forced guest mode with forced private listening: YES
%{public}@ (sharedid) <%{public}@>: using active account with configured private listening
%{public}@ (sharedid) <%{public}@>: library User Identity %{private}@
%{public}@ (sharedid) <%{public}@>: requester Shared User ID %{private}@
%{public}@ (sharedid) <%{public}@>: using %{private}@ in guest mode with forced private listening: YES
%{public}@ (sharedid) <%{public}@>: requester User Identity %{private}@
%{public}@ (sharedid) <%{public}@>: using %{private}@ with configured private listening: %{BOOL}u
%{public}@ (sharedid) <%{public}@>: using %{private}@ in cross-user mode with forced private listening: YES
%{public}@ (sharedid) <%{public}@>: shared ID %{private}@ not available: %{public}@
%{public}@ (sharedid) <%{public}@>: no DSID for home ID: %{private}@
%{public}@ (sharedid) <%{public}@>: no DSID for home ID: %{private}@, but it is NOT required
%{public}@ (sharedid) <%{public}@>: home ID %{private}@ not found in database: %{public}@
%{public}@ (clientstate) <%{public}@>: getting dynamite client state
%{public}@ (clientstate) <%{public}@>: getting stored WLK configuration
%{public}@ (clientstate) <%{public}@>: active TV user: %{BOOL}u
%{public}@ (clientstate) <%{public}@>: getting WLK configuration
%{public}@ (clientstate) <%{public}@>: finished getting dynamite client state
%{public}@ (preferredMediaUserHomeUserID) <%{public}@>: found preferredMediaUser's account with home ID: %{private}@
%{public}@ (clientstate) <%{public}@>: skipping local account
%{public}@ (userstate) <%{public}@>: getting user state for %{private}@
%{public}@ (userstate) <%{public}@>: no DSID found in account for %{private}@
%{public}@ (userstate) <%{public}@>: fetching subscription status
%{public}@ (userstate) <%{public}@>: fetching match status
%{public}@ (userstate) <%{public}@>: not syncing token for %{private}@
%{public}@ (userstate) <%{public}@>: fetching store client token for %{private}@
%{public}@ (userstate) <%{public}@>: fetching shared user id for home user id %{private}@ for %{private}@
%{public}@ (userstate) <%{public}@>: user does not have any home IDs for %{private}@
%{public}@ (userstate) <%{public}@>: finished getting user state for %{private}@
%{public}@ (userstate) <%{public}@>: failed fetching shared user id for %{private}@: %{public}@
%{public}@ (userstate) <%{public}@>: fetched shared user id: %{public}@:%{private}@ for %{public}@
%{public}@ (userstate) <%{public}@>: failed fetching store client token status for %{private}@: %{public}@
%{public}@ (userstate) <%{public}@>: error fetching client token for %{private}@: %{public}@
%{public}@ (userstate) <%{public}@>: fetched store client token %{private}@ for %{private}@
%{public}@ (userstate) <%{public}@>: Failed to load match status. error=%{public}@
%{public}@ (userstate) <%{public}@>: Match is enabled
%{public}@ (userstate) <%{public}@>: Account is not subscribed to iTunes Match.
%{public}@ (userstate) <%{public}@>: store account is a subscriber: %{BOOL}u for %{private}@
%{public}@ (userstate) <%{public}@>: user history unmodifiable: %{public}@ for %{private}@
%{public}@ (userstate) <%{public}@>: age verification: %ld for %{private}@
%{public}@ (clientstate) <%{public}@>: account %{private}@ is default
%{public}@ (clientstate) <%{public}@>: default user state: %{private}@
%{public}@ (clientstate) <%{public}@>: account %{private}@ has shared user ID %{public}@:%{private}@
%{public}@ (clientstate) <%{public}@>: account %{private}@ has no shared user IDs
%{public}@ (clientstate) <%{public}@>: %{private}@ user state: %{private}@
%{public}@ (clientstate) <%{public}@>: account %{private}@ has shortest expiration time
Create Radio Station (invoke) <%{public}@>: %lu UIDs, asset info %{public}@, start %{public}@, station %{public}@
Create Radio Station (perform) <%{public}@>: group leader endpoint %{public}@
Create Radio Station (perform) <%{public}@>: group leader legacy
Create Radio Station (completion) <%{public}@>: notifying assistant %{public}@
Create Radio Station (connection) <%{public}@>: connected to: %{public}@
Remove Output Devices From Group (invoke) <%{public}@>: invoked
Remove Output Devices From Group (completion) <%{public}@>: notifying assistant %{public}@
Skip To Next Item (invoke) <%{public}@>: %lu UIDs
Skip To Next Item (completion) <%{public}@>: notifying assistant %{public}@
Set Volume Level (invoke) <%{public}@>: %lu UIDs, %{public}@ action, %{public}@ volume, %{BOOL}u ack
Set Volume Level (completion) <%{public}@>: notifying assistant %{public}@
Set Volume Level (setvolume) <%{public}@>: volume: %f endpoint %{public}@
Set Volume Level (setvolume) <%{public}@>: set volume: %f outputDeviceUID %{public}@
Set Volume Level (setvolume) <%{public}@>: increase volume: %f outputDeviceUID %{public}@
Set Volume Level (setvolume) <%{public}@>: decrease volume: %f outputDeviceUID %{public}@
volume: %f error: %{public}@
volume: %f
Set Volume Level (setvolume) <%{public}@>: new volume: %f
Set Volume Level (setvolume) <%{public}@>: volume set failed with error: %{public}@
Get Now Playing Queue Details (invoke) <%{public}@>: %lu UIDs, prev %ld, next %ld, timeout %{public}@
Get Now Playing Queue Details (completion) <%{public}@>: notifying assistant %{public}@
Get Now Playing Queue Details (default) <%{public}@>: leader %{public}@
Add Output Devices To Group (invoke) <%{public}@>: invoked
Add Output Devices To Group (completion) <%{public}@>: notifying assistant %{public}@
Skip Time Interval (invoke) <%{public}@>: %lu UIDs, %{public}@ milliseconds
Skip Time Interval (completion) <%{public}@>: notifying assistant %{public}@
%{public}@ (ulid) <%{public}@>: no collections
%{public}@ (ulid) <%{public}@>: collections: %lu
%{public}@ (query) <%{public}@>:  Unsupported identifier URL host: %@
%{public}@ (query) <%{public}@>: collections: %lu items: %lu
Warning, could not find local item for %{public}@
%{public}@ (getquery) <%{public}@>: local playlist
%{public}@ (getquery) <%{public}@>: local title query
%{public}@ (getquery) <%{public}@>: local query
%{public}@ (getquery) <%{public}@>: no collections
Set Music Influence (invoke) <%{public}@>: enabled %{BOOL}u
Set Music Influence (perform) <%{public}@>: Dry run: %d, previous music influence: %d, and music influence: %d
Set Music Influence (completion) <%{public}@>: notifying assistant %{public}@
Music Playback Imminent (perform) <%{public}@>: user identity %{private}@
Music Playback Imminent (perform) <%{public}@>: user identity encoding failed %{public}@
Music Playback Imminent (perform) <%{public}@>: notifying assistant %{public}@
Music Playback Imminent (invoke) <%{public}@>: invoked
Music Playback Imminent (completion) <%{public}@>: notifying assistant %{public}@
Music Playback Imminent (completion) <%{public}@>: done
Sync Handler (end): sync ended
Sync Handler (get): sync already ended
Sync Handler (get): aborted
Sync Handler (get): revision %{public}@, pid %lld
Sync Handler (get): no title %{public}@
Sync Handler (get): not for Assistant %{public}@
Sync Handler (begin): anchor: %{private}@, validity: %{public}@
Sync Handler (enumeration): sync already ended
Sync Handler (validity): (libraryValidity:%{public}@ != siriValidity:%{public}@)
Sync Handler (validity): (db revision = %lli, anchor = %lli)
Sync Handler (validity): forced reset
Sync Handler (enumeration): aborted
Sync Handler (enumeration): finished
Load Predefined Queue (query) <%{public}@>: timeout querying iBooks install state
Load Predefined Queue (query) <%{public}@>: network conditions do not permit streaming
Load Predefined Queue (query) <%{public}@>: streaming not available
Load Predefined Queue (query) <%{public}@>: companion not available
Load Predefined Queue (query) <%{public}@>: companion will be used
Load Predefined Queue (query) <%{public}@>: streaming available
Load Predefined Queue (query) <%{public}@>: beginning playback (type %ld).
Load Predefined Queue (query) <%{public}@>: still loading library (type %ld).
Load Predefined Queue (query) <%{public}@>: empty library for (type %ld).
Load Predefined Queue (query) <%{public}@>: unrecognized media (type %ld).
Load Predefined Queue (query) <%{public}@>: no available destination
Load Predefined Queue (radio) <%{public}@>: network conditions do not permit radio playback
Load Predefined Queue (radio) <%{public}@>: radio not available
Load Predefined Queue (radio) <%{public}@>: companion not available
Load Predefined Queue (radio) <%{public}@>: resuming playback
Load Predefined Queue (radio) <%{public}@>: still loading library (type %ld).
Load Predefined Queue (radio) <%{public}@>: empty library for (type %ld).
Load Predefined Queue (radio) <%{public}@>: no available destination
Load Predefined Queue (send) <%{public}@>: sending to local WHA destination
Load Predefined Queue (send) <%{public}@>: sending to destination %{public}@
Load Predefined Queue (invoke) <%{public}@>: media item type %{public}@%{public}@
Load Predefined Queue (completion) <%{public}@>: notifying assistant %{public}@
Dislikes Media Entity (completion) <%{public}@>: notifying assistant %{public}@
Dislikes Media Entity (invoke) <%{public}@>: invoked
Get Dynamite Client State (invoke) <%{public}@>: invoked
Get Dynamite Client State (completion) <%{public}@>: notifying assistant %{private}@
Get Now Playing Queue Details Remote (invoke) <%{public}@>: %lu UIDs, queue %{public}@, timeout %f
Get Now Playing Queue Details Remote (completion) <%{public}@>: notifying assistant %{public}@
Likes Media Entity (completion) <%{public}@>: notifying assistant %{public}@
Likes Media Entity (invoke) <%{public}@>: invoked
Increase Playback Speed (invoke) <%{public}@>: %lu UIDs
Increase Playback Speed (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Library (cloud) <%{public}@>: Will add store item %lld
%{public}@ (cloud) <%{public}@>: Failed adding %lld. %{public}@
%{public}@ (cloud) <%{public}@>: Added %lld.
Add Media Items To Library (companion) <%{public}@>: No adam IDs in %{public}@
Add Media Items To Library (extract) <%{public}@>: Unsupported origin for collection %{public}@
Add Media Items To Library (extract) <%{public}@>: Cannot add multiple items %{public}@
Add Media Items To Library (extract) <%{public}@>: Unsupported origin for entity %{public}@
Add Media Items To Library (invoke) <%{public}@>: media items %{public}@
Add Media Items To Library (completion) <%{public}@>: notifying assistant %{public}@
Add Media Entity To Acoustic ID History (invoke) <%{public}@>: adam ID %{public}@, affiliate ID %{public}@
Add Media Entity To Acoustic ID History (completion) <%{public}@>: notifying assistant %{public}@
Get Volume Level (invoke) <%{public}@>: %lu UIDs
Get Volume Level (completion) <%{public}@>: notifying assistant %{public}@
Add Media Entity To Wish List (invoke) <%{public}@>: adam ID %{public}@
Add Media Entity To Wish List (completion) <%{public}@>: notifying assistant %{public}@
com.apple.mediaplayer.assistant.samp.nowplaying
@"NSDictionary"8@?0
errorstring
duration
Rate Media Entity
Start Playback
Get State Response Remote
com.apple.MediaPlayer.assistant.responseCollection
Add Media Items To Playlist
Unknown item type
Uexpected insertion order requested.
Unable to add item to playlist
Collection object was not a playlist. Unable to add tracks to something that is not a playlist.
Pause Playback
Get State
x-sampmedentity
x-sampmeditem
x-sampcollection
x-sampgeniusmix
x-sampplaylist
x-sampcollection-album
x-sampcollection-artist
x-sampcollection-genre
x-sampcollection-title
x-sampcollection-audiobook
x-sampcollection-podcast
x-sampcollection-musicshow
x-sampradiotrack
x-sampradio
device
multiverse
store
ulid
/%lld
station-dict
name
children
RadioGetGenreTreeNodesRequest
/System/Library/PrivateFrameworks/Radio.framework/Radio
RadioModel
Descending
Search
v32@?0@"NSArray"8Q16^B24
v32@?0@"MPMediaEntity"8Q16^B24
v32@?0@"SAMPSearchConstraint"8Q16^B24
Set Shuffle Mode
success
pluginname
Decrease Playback Speed
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
0123456789abcdef
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
Cannot obtain digest from unknown hasher algorithm
Cannot finalize unknown hasher algorithm
Cannot append to unknown hasher algorithm
MSVHasher+Algorithms.h
FuseEligibility_%d_%f:PL_%@_UserAnchors_%@
self
Subscription Status Sync Handler
com.apple.mediaPlayer.assistant.setQueue.sendCommand
Set Queue
com.apple.media.entities.siri_data_changed
no playable type set
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
v20@?0B8@"AceObject"12
com.apple.mediaPlayer.assistant.setQueue
unsupported command
siri
LOCAL_DEVICE
Move Output Group To Devices
Seek To Playback Speed
Get Music Influence
/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-4019.300.13.1/AssistantBundle/Categories/SAMPMediaItem_MPAdditions.m
Set Repeat Mode
Cannot make track URL
No seed track
Genius Summon
Seek To Previous Item
Add Media Items To Up Next Queue
B16@?0^v8
MPAssistantAddToUpNextErrorDomain
Collection does not exist in library
No endpoints found
Too many endpoints requested
com.apple.MPAssistantAddMediaItemsToUpNextQueue
v20@?0C8^v12
Failed to connect to endpoint
v12@?0I8
MediaRemote command failed. err = %ld
Seek To Playback Position
com.apple.iBooks
com.apple.MediaAssistant.siri
SiriRequesterSharedUserID
com.apple.mobileipod
SiriLibrarySharedUserID
%@%@
v16@?0^{__CFArray=}8
v24@?0^{__CFDictionary=}8^v16
errorcode
@16@?0^{__CFString=}8
v28@?0@"NSString"8B16@?<v@?@"ICUserIdentity"@"NSNumber">20
v24@?0@"NSString"8@"NSError"16
v24@?0@"ACAccount"8@"NSError"16
com.apple.Assistant.MPAssistantUtilitiesGetDynamiteClientState
com.apple.mediaplayer.assistant.samp.dynamiteclientstate
token_failure
accounts_without_state
accounts_on_device
use_history_duration
token_duration
subscription_status_duration
age_verification_duration
com.apple.Assistant.MPAssistantGetDynamiteClientState.userState
v32@?0@"NSString"8@"NSString"16@"NSError"24
v24@?0@"ICLibraryAuthServiceClientTokenStatus"8@"NSError"16
v28@?0@"NSError"8B16B20B24
v24@?0@"ICLightweightMusicSubscriptionStatusResponse"8@"NSError"16
v16@?0@"ICAgeVerificationState"8
AFMultiUserConnection
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
v60@?0@"SAUserState"8@"NSDate"16@"NSDictionary"24@"NSNumber"32B40{AnalyticsDurations=ffff}44
none
UserState_%@_%@_%@_%@_%@
UserState_%@_%@_%@_%@_%@_%@_%@
Default_UserState_%@_%@_%@_%@_%@_%@_%@
B16@?0@"ACAccount"8
v24@?0@"WLKServerConfigurationResponse"8@"NSError"16
WLKConfigurationManager
/System/Library/PrivateFrameworks/WatchListKit.framework/WatchListKit
WLKStoredConfigurationManager
plugin_name
The system media app reported that creating the station was unsuccessful. (stationURL = %@)
present
not present
Create Radio Station
Remove Output Devices From Group
Skip To Next Item
WHAMetrics
v24@?0@"NSArray"8@"NSArray"16
v16@?0^v8
v28@?0^v8@"NSString"16f24
v16@?0^{__CFError=}8
Set Volume Level
v24@?0^v8^{__CFError=}16
com.apple.Assistant.GetNowPlayingQueueDetails
timed out
Get Now Playing Queue Details
Add Output Devices To Group
Skip Time Interval
@"MPMediaQuery"32@?0q8@"NSString"16@24
Value unchanged, No change was made
Set Music Influence
Music Playback Imminent
v24@?0@"ICUserIdentity"8@"NSNumber"16
v24@?0@"MPMediaItem"8^B16
v8@?0
v24@?0@"_MPMediaLibraryEntityChange"8^B16
ForceSiriResetSync
v24@?0@"NSArray"8@"NSError"16
Unsupported media item type
v16@?0@"MPCAssistantRemoteControlDestination"8
Load Predefined Queue
v12@?0B8
v16@?0q8
v24@?0@"NSError"8@"NSArray"16
v24@?0@"MPCAssistantPlaybackQueue"8@"MPCAssistantRemoteControlDestination"16
com.apple.mediaPlayer.assistant.loadPredefinedQueue.sendCommand
v16@?0^{__CFString=}8
Send playback failed: %@
com.apple.mediaPlayer.assistant.loadPredefinedQueue
v12@?0{?=BBBB}8
com.apple.MediaPlayer.AssistantBundle.MPAssistantLoadPredefinedQueue
Dislikes Media Entity
no user identity
v16@?0@"NSString"8
v24@?0@"SADynamiteClientState"8@"NSDictionary"16
Get Dynamite Client State
v16@?0@"NSDictionary"8
Get Now Playing Queue Details Remote
Likes Media Entity
player statuses: %@
Increase Playback Speed
v24@?0@"NSDictionary"8@"NSError"16
Failed to add store item. %@
Add Media Items To Library
v16@?0@"NSArray"8
The system media app reported that adding the track to library was unsuccessful. (trackID = %@)
v16@?0@"NSError"8
Add Media Entity To Acoustic ID History
Too many UIDs requested
v32@?0^{__CFArray=}8^v16^{__CFError=}24
v32@?0^v8^v16@"NSError"24
v20@?0f8^{__CFError=}12
UID decoding error
Get Volume Level
v16@?0^{__CFDictionary=}8
System media app reported failure adding track to wishlist.
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v24@?0@"ICStorePlatformResponse"8@"NSError"16
v24@?0@"ICAddToWishListResponse"8@"NSError"16
%lld
User is not signed into an iTunes account.
v24@?0Q8@"NSString"16
v16@?0@"AceObject"8
Add Media Entity To Wish List
softlink:r:path:/System/Library/PrivateFrameworks/WatchListKit.framework/WatchListKit
MPAssistantRateMediaEntity
NSObject
AFServiceCommand
MPAssistantStartPlayback
MPAssistantGetStateResponseRemote
MPAssistantAddMediaItemsToPlaylist
MPAssistantPausePlayback
MPAssistantGetState
MPAssistantSearch
MPAssistantSetShuffleMode
AssistantAdditions
MPAssistantDecreasePlaybackSpeed
AFSyncHandler
MPAssistantSubscriptionStatusSyncHandler
MPAssistantSetOutputSource
MPAssistantSetQueue
MPAssistantSetState
MPAssistantMoveOutputGroupToDevices
MPAssistantSetPlaybackSpeed
MPAssistantLoadQuickPlay
MPAssistantGetMusicInfluence
MPAdditions
MPAssistantSetRepeatMode
MPAssistantGeniusSummon
MPAssistantSkipToPreviousItem
MPAssistantAddMediaItemsToUpNextQueue
MPAssistantSeekToPlaybackPosition
MPAssistantCreateRadioStation
MPAssistantRemoveOutputDevicesFromGroup
MPAssistantSkipToNextItem
MPAssistantSetVolumeLevel
MPAssistantGetNowPlayingQueueDetails
MPAssistantAddOutputDevicesToGroup
MPAssistantSkipTimeInterval
MPAssistantStopPlayback
MPAssistantSetMusicInfluence
MPAssistantMusicPlaybackImminent
MPAssistantSyncHandler
MPAssistantLoadPredefinedQueue
MPAssistantDislikesMediaEntity
MPAssistantGetDynamiteClientState
MPAssistantGetNowPlayingQueueDetailsRemote
MPAssistantLikesMediaEntity
MPAssistantIncreasePlaybackSpeed
MPAssistantAddMediaItemsToLibrary
MPAssistantAddMediaEntityToAcousticIDHistory
MPAssistantGetVolumeLevel
MPAssistantAddMediaEntityToWishList
_requestAceHash
performWithCompletion:
.cxx_destruct
resolveWithHashedRouteIdentifiers:audioRoutingInfo:completion:
sendCommand:toDestination:withOptions:completion:
initWithReason:
localizedDescription
numberWithDouble:
timeIntervalSinceNow
setObject:forKeyedSubscript:
dictionary
nowPlayingApplicationDestination
dictionaryWithObjects:forKeys:count:
numberWithFloat:
count
rating
aceId
length
arrayWithObjects:count:
hashedRouteUID
date
TQ,R
T#,R
T@"NSString",R,C
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
performWithCompletion:serviceHelper:
performWithCompletion:serviceHelper:executionInfo:
initWithDictionary:
containsObject:
refId
hashedRouteUIDs
_decodedDeviceUIDs
_workingRemoteResponse
_originMapping
_responseCollectionQueue
_completionGroup
_encoder
dealloc
setPlayingInfoFromEndpoint:
setObject:forKey:
objectForKey:
setState:
setListeningToMusicApplication:
numberWithBool:
setSource:
setListeningToItem:
objectForKeyedSubscript:
setHashedGroupID:
encodeHashedRouteUIDs:completion:
addObject:
addObjectsFromArray:
valueForKeyPath:
clusterComposition
countByEnumeratingWithState:objects:count:
array
groupID
firstObject
designatedGroupLeader
outputDevices
copy
decodeHashedRouteUIDs:completion:
setRouteResponses:
discoverRemoteControlEndpointsMatchingUIDs:completion:
connectToEndpoint:completion:
mutableCopy
allKeys
removeObserver:
defaultCenter
_userIdentity
_cloudController
_appendToPlaylistWithCompletion:
_addItemsToLocalLibrary:
_addItemsToCloudLibrary:
_appendItemToCloudPlaylist:completion:
_appendItemsToCloudPlaylist:completion:
_prependItemsToCloudPlaylist:completion:
_isSagaAuthenticated
setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler:
_notifyAssistantWithError:requestHash:completion:
persistentID
unsignedLongLongValue
valueForProperty:
insertCloudItemID:idType:atIndex:
longLongValue
lastPathComponent
items
identifier
mediaItems
cloudItemIDListForPlaylist:
controllerWithUserIdentity:
addCloudItemID:idType:
_notifyAssistantWithString:requestHash:completion:
addStoreItemWithAdamID:toPlaylistWithPersistentID:completionHandler:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
objectAtIndex:
playlist
isEqualToString:
insertLocation
appendItems:completion:
replaceItems:completion:
setEntityLimit:
addFilterPredicate:
songsQuery
predicateMatchingPredicates:
predicateWithValue:forProperty:
numberWithLongLong:
stringWithFormat:
initWithErrorCode:
boolValue
influencedUserSharedUserId
pauseDevicesByUID:withRefId:audioRoutingInfo:source:completion:
setScheme:
setHost:
setPath:
multiverseIdentifier
data
encodeURLData:
host
integerValue
_prepare
_perform
_audiobooksByName:
_itemsByTitle:mediaTypes:
_playlistsByName:isGeniusMix:
_songCollectionsWithGroupingType:searchString:mediaTypes:
_playlistsByDateCreatedOrder:
_stationWithName:
_stationDictionariesWithParent:
_stationDictionaryForGenreName:parent:
_stationDictionaryForGenreName:
compare:options:
startWithCompletionHandler:
initWithParentNodeID:
rangeOfString:options:
name
arrayByAddingObjectsFromArray:
featuredStations
userStations
sharedModel
collections
setMediaLibrary:
deviceMediaLibraryWithUserIdentity:
setShouldIncludeNonLibraryEntities:
setIgnoreSystemFilterPredicates:
setGroupingType:
setUseSections:
_setOrderingDirectionMappings:
_setOrderingProperties:
initWithFilterPredicates:
setWithObjects:
predicateWithSearchString:forProperties:
setWithObject:
numberWithInteger:
titlePropertyForGroupingType:
setResults:
enumerateObjectsUsingBlock:
query
searchProperties
mediaPlayerOrderingDirection
mediaPlayerSearchProperty
mediaPlayerOrderingTerms
constraints
setWithArray:
searchTypes
maxResults
numberWithInt:
shuffleMode
initWithObjectsAndKeys:
setGenre:
setArtist:
setSortArtist:
setAlbum:
setSortAlbum:
setTitle:
setSortTitle:
setExplicit:
setIdentifier:
defaultTimeZone
setDate:
setTimeZoneId:
setLastPlayedDate:
doubleValue
setPlaybackPositionMillis:
setRememberPlaybackPosition:
unsignedIntegerValue
setPlays:
setPlaybackInfo:
setDateAdded:
setDatePurchased:
setReleaseDate:
setReleaseYear:
setReleaseInfo:
stringValue
setAdamIdentifier:
setEpisodeNumber:
setSeasonNumber:
setShowEpisodesCount:
setShowName:
SAMPMediaItemRepresentationUsingIdentifierType:
SAMPMediaEntityRepresentationUsingIdentifierType:
identifierURLScheme
SAMPSearchPropertyForProperty:
propertyForSAMPSearchProperty:
beginSyncWithAnchor:validity:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithInfo:configuration:
getChangeAfterAnchor:changeInfo:
syncDidEnd
syncSnapshotForKey:
currentSyncSnapshot
syncVerificationKeyForKey:
_postAnchor
_clientState
setPostAnchor:
setObject:
URLWithString:
uniqueObjectIdentifier
initWithBytesNoCopy:length:encoding:freeWhenDone:
handleFailureInFunction:file:lineNumber:description:
stringWithUTF8String:
currentHandler
UTF8String
userHistoryUnmodifiable
timeIntervalSinceReferenceDate
expirationDate
status
defaultUserState
stringByAppendingString:
stringByAppendingFormat:
string
sortedArrayUsingDescriptors:
sortDescriptorWithKey:ascending:
_validate
itemsQuery
filterPredicates
property
groupingType
_assistantCollectionType
sortTitlePropertyForGroupingType:
setEditable:
SAMPCollectionRepresentationUsingIdentifierType:
initWithCapacity:
setItems:
representativeItem
SAMPCollectionRepresentationWithItemsUsingIdentifierType:
_serviceHelper
_availability
_privateListeningEnabled
_performWithCompletion:
_performRadioStationSetQueueAsDryRun:completion:
_performMediaItemsSetQueueAsDryRun:completion:
_performStoreItemsSetQueueAsDryRun:completion:
_performMediaItemsSetQueueFromStoreIdentifiersAsDryRun:onlyPlayableItems:onlyLocalItems:completion:
_playAlbumFromMediaItems:contextID:dryRun:completion:
_playMediaItems:contextID:dryRun:completion:
sendQueue:toDestination:shouldResync:completion:
setShouldImmediatelyStartPlayback:
prepareForAudioHandoffWithCompletion:
outputDeviceUIDs
setSingleGroup:
sendPlaybackQueue:toDestination:withOptions:completion:
appBundleID
code
domain
setFeatureName:
setUserIdentity:
getAgeVerificationStateWithCompletion:
isExplicitContentAllowed
defaultManager
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
setAppBundleID:
systemMediaApplicationDestination
setSiriWHAMetricsInfo:
setSiriAssetInfo:
assetInfo
setSiriRecommendationID:
recommendationId
startPlaying
setShouldOverrideManuallyCuratedQueue:
shouldOverrideManuallyCuratedUpNext
setShuffleType:
queryQueueWithContextID:query:
shouldShuffle
assistantStreamingGetAvailability:
setFirstItem:
_hasCollections
predicateForProperty:
albumsQuery
numberWithUnsignedLongLong:
initWithEntities:entityType:
initWithItems:
playlistsQuery
scheme
storeTracklistQueueWithContextID:storeItemIDs:collectionIdentifierSet:
setUniversalStoreIdentifiersWithBlock:
setSubscriptionAdamID:
initWithModelKind:block:
setGlobalPlaylistID:
identityKind
setShouldShuffle:
_countOfItems
assistantRadioGetAvailability:completion:
radioQueueWithContextID:stationStringID:
sharedUserIdFromPlayableMusicAccount
dryRun
requesterSharedUserId
localizedFailureReason
setRouteResponse:
removeObjectForKey:
allKeysForObject:
scalingFactor
setSetting:
setValue:
isPrivateListeningEnabledForCurrentAccessory
monitorForCurrentUser
isPrivateListeningEnabled
standardUserDefaults
initWithFilterPredicates:library:
MPMediaItemRepresentationWithUserIdentity:
path
repeatMode
contextID
createRemotePlaybackQueue
geniusQueueWithContextID:seedTrack:
upNextQueueInsertLocation
mediaItem
command
_discovery
_perform:
_createPlaybackQueueWithCollection:error:
_createLocalLibraryPlaybackQueueWithCollection:error:
_createStoreTracklistPlaybackQueueWithCollection:error:
_isInsertionPositionSupported:origin:supportedCommands:
initWithContextID:storeItemIDs:collectionIdentifierSet:
emptyIdentifierSet
errorWithDomain:code:userInfo:
initWithContextID:query:
archivedDataWithRootObject:requiringSecureCoding:error:
mediaCollection
musicAccountSharedUserId
speakerSharedUserId
longValue
positionInMilliseconds
setOrigin:
capabilities
activeAccount
initWithUUIDString:
ic_sharedAccountStore
ic_DSID
ic_privateListeningEnabledForHomeUsers
isCurrentDeviceValidHomeAccessory
userMonitorWithHomeIdentifier:
specificAccountWithDSID:
ic_storeAccountForHomeUserIdentifier:completion:
getHomeUserIdForSharedUserId:completion:
isEqualToNumber:
sharedInstance
storedConfiguration
activeUser
setActiveTvUser:
isActiveUser
fetchConfigurationWithCompletionHandler:
supportsMultipleITunesAccounts
isActive
msv_filter:
ic_homeUserIdentifiers
ams_isLocalAccount
UUIDString
shortDebugName
syncSharedUserId
ageVerificationRequired
initWithPersistentID:
defaultMediaPlaybackAppBundleIdentifier
isPromotionRelatedStatus
eligibleOffers
setDefaultUserState:
setICloudMusicLibraryToggle:
setAgeVerificationRequired:
setStatus:
iTunesMatchSubscriptionStatus
setITunesMatchSubscriptionStatus:
setUserHistoryUnmodifiable:
userToken
setUserToken:
userTokenStatus
setUserTokenStatus:
stationID
setEligibleOffers:
setIsPromotionRelatedStatus:
xpAbCookie
setXpAbCookie:
setSharedUserId:
setSyncSharedUserId:
timeIntervalSince1970
ic_allStoreAccountsWithCompletion:
setInContextUsersStates:
setExpirationDate:
numberWithUnsignedInteger:
numberWithUnsignedInt:
privateListeningEnabled
homeUserIdentifiers
userMonitorWithHomeIdentifiers:
initWithIdentity:
initWithRequestContext:
lightweightSubscriptionStatus
performRequestWithResponseHandler:
initWithStoreRequestContext:
setErrorCode:
lastUpdateAttemptTime
setLastUpdateAttemptTime:
shouldExcludeFromBackgroundRefresh
setShouldExcludeFromBackgroundRefresh:
lastError
tokenResult
token
getConformingSharedUserIdForHomeUserId:completion:
defaultIdentityStore
DSID
isActiveLocker
getPropertiesForUserIdentity:completionHandler:
currentDeviceInfo
isInternalBuild
substringToIndex:
substringFromIndex:
unsignedIntValue
absoluteString
stationUrl
metricsContext
dataUsingEncoding:
JSONObjectWithData:options:error:
MP_WHAMetricsInfo
T@"NSDictionary",R,C,N
containsUID:
floatValue
acknowledgedExceedingVolumeLimit
volumeValue
actionType
getSAMPMediaItems:origin:completion:
setNextItems:
setPreviousItems:
preemptiveNowPlayingQueueDetailsTimeOut
nextItemCount
previousItemCount
adjustmentInMilliseconds
setRefId:
setHashedRouteUIDs:
MPMediaItemQueryOnlyPlayableItems:withUserIdentity:plugin:hash:
_countOfCollections
persistentIDPropertyForGroupingType:
ULIDPropertyForGroupingType:
MPMediaGroupingForScheme
MPMediaItemCollectionRepresentationWithUserIdentity:plugin:hash:
albumQueryForArtist
albumQueryByGroupingForSchemeWithUserIdentity:plugin:hash:
arrayWithCapacity:
setPreviousValue:
setPrivateListeningEnabled:
setPrivateListeningEnabledForCurrentAccessory:
setReason:
toggle
value
preloadedUserSharedUserId
_library
_changeEnumerationSemaphore
_resultProcessingSemaphore
_nextChange
_deleteNextChange
_resetSync
_abortSync
init
setIsDelete:
valuesForProperties:
_enumerateItemsUsingBlock:
title
deletionType
anchor
entity
addOperationWithBlock:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:usingBlock:
_widthLimitedOperationQueue
deleteDatabaseProperty:
resetWithValidity:
valueForDatabaseProperty:
currentEntityRevision
_syncValidity
setFilteringDisabled:
defaultMediaLibrary
setMaxConcurrentOperationCount:
_performWithNowPlayingItem:audioRoutingInfo:completion:
_radioStations
stations
getRecentStationGroupsWithCompletionHandler:
defaultRadioLibrary
mediaItemType
audiobooksQuery
stationStringID
setQualityOfService:
qualityOfService
currentThread
setName:
setClientState:
routeTimeout
queueDetails
influencedSharedUserId
_addMediaItemsToLibrarySupported
_extractAtomID
_requestCompanionToAddMediaItemsForOrigin:withCompletion:
_performAddMediaItemsWithCompletion:
addStoreItemWithAdamID:completionHandler:
initWithLongLong:
isCloudLibraryEnabled
becomeActiveAndWaitUntilDone:
performRequestWithCompletionHandler:
initWithRequestContext:storeItemID:affiliateIdentifier:
affiliateId
adamId
setVolumeValue:
_addTrackToWishListWithStoreID:completion:
_addRadioTrackToWishListWithStoreID:stationHash:completion:
_fetchCurrentRadioTrackInfoWithCompletion:
itemWithStoreID:
performWithResponseHandler:
initWithRequestContext:platformMetadataItem:
allItems
setPersonalizationStyle:
setItemIdentifiers:
setRequestContext:
@"NSString"
v24@0:8@?16
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
v40@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24@"AFCommandExecutionInfo"32
@24@0:8@"NSDictionary"16
v32@0:8@?16@24
v40@0:8@?16@24@32
@24@0:8@16
@"NSDictionary"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"MPCAssistantEncodings"
v24@0:8^v16
@"ICUserIdentity"
@"MPCloudController"
v32@0:8@16@?24
v40@0:8@16@24@?32
@32@0:8@16q24
@28@0:8@16B24
@40@0:8q16@24q32
@24@0:8Q16
@32@0:8@16Q24
@24@0:8q16
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
v48@0:8@16@24@32@40
v56@0:8@16@24q32@40@48
v64@0:8@16@24q32@40@48@56
v32@0:8@16@24
@"SADynamiteClientState"
q16@0:8
@"<AFServiceHelper>"
@"MPCAssistantAvailability"
@"NSNumber"
v28@0:8B16@?20
v36@0:8B16B20B24@?28
v44@0:8@16@24B32@?36
@"MPCAssistantCommand"
@"MPCAssistantDiscovery"
@32@0:8@16^@24
B36@0:8i16^v20^{__CFArray=}28
v48@0:8{?=qq}16^v32@?40
@40@0:8@16@24@32
@44@0:8B16@20@28@36
@"MPMediaLibrary"
@"NSObject<OS_dispatch_semaphore>"
@"_MPMediaLibraryEntityChange"
v36@0:8@16{?=BBBB}24@?28
v32@0:8^v16@?24
v32@0:8Q16@?24
v40@0:8Q16@24@?32
