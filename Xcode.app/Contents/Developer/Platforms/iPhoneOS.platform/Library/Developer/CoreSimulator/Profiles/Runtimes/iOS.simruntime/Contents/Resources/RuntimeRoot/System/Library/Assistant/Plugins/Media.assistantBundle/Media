Rate Media Entity
@"NSDictionary"8@?0
Start Playback
Get State Response Remote
com.apple.MediaPlayer.assistant.responseCollection
Add Media Items To Playlist
no user identity
Collection object was not a playlist. Unable to add tracks to something that is not a playlist.
Unable to add item to playlist
Uexpected insertion order requested.
v16@?0@"NSError"8
Unknown item type
Pause Playback
Get State
x-sampmedentity
x-sampmeditem
x-sampcollection
x-sampgeniusmix
x-sampplaylist
x-sampcollection-album
x-sampcollection-artist
x-sampcollection-genre
x-sampcollection-title
x-sampcollection-audiobook
x-sampcollection-podcast
x-sampcollection-musicshow
x-sampradiotrack
x-sampradio
device
multiverse
store
ulid
/%lld
Search
v32@?0@"SAMPSearchConstraint"8Q16^B24
v32@?0@"MPMediaEntity"8Q16^B24
v32@?0@"NSArray"8Q16^B24
Descending
children
name
station-dict
Set Shuffle Mode
Decrease Playback Speed
player statuses: %@
Subscription Status Sync Handler
self
FuseEligibility_%d_%f:PL_%@_UserAnchors_%@
MSVHasher+Algorithms.h
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
Cannot append to unknown hasher algorithm
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
Cannot obtain digest from unknown hasher algorithm
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
Cannot finalize unknown hasher algorithm
Set Queue
com.apple.mediaPlayer.assistant.setQueue
v16@?0@"AceObject"8
v20@?0B8@"AceObject"12
MPCAssistant
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
no playable type set
com.apple.media.entities.siri_data_changed
com.apple.mediaPlayer.assistant.setQueue.sendCommand
unsupported command
Move Output Group To Devices
LOCAL_DEVICE
siri
Seek To Playback Speed
pluginname
errorstring
com.apple.mediaplayer.assistant.samp.nowplaying
Get Music Influence
/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/AssistantBundle/Categories/SAMPMediaItem_MPAdditions.m
Set Repeat Mode
success
Unsupported Feature
Genius Summon
Seek To Previous Item
MPAssistantAddToUpNextErrorDomain
Add Media Items To Up Next Queue
MediaRemote command failed. err = %ld
v12@?0I8
Failed to connect to endpoint
com.apple.MPAssistantAddMediaItemsToUpNextQueue
v20@?0C8^v12
Too many endpoints requested
No endpoints found
Collection does not exist in library
B16@?0^v8
Seek To Playback Position
com.apple.iBooks
com.apple.MediaAssistant.siri
com.apple.mobileipod
SiriRequesterSharedUserID
SiriLibrarySharedUserID
%@%@
@16@?0^{__CFString=}8
errorcode
duration
v24@?0^{__CFDictionary=}8^v16
v16@?0^{__CFArray=}8
v24@?0@"ACAccount"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v28@?0@"NSString"8B16@?<v@?@"ICUserIdentity"@"NSNumber">20
MediaPlayer
use_media_user_state_for_dcs
plugin_name
com.apple.Assistant.MPAssistantUtilitiesGetDynamiteClientState
B16@?0@"ICMediaUserState"8
Default_UserState_v2_%@_%@_%@_%@_%@_%@_%@
UserState_v2_%@_%@_%@_%@_%@_%@_%@
UserState_v2_%@_%@_%@_%@_%@
none
v24@?0@"NSDictionary"8@"SAUserState"16
age_verification_duration
subscription_status_duration
token_duration
use_history_duration
accounts_on_device
accounts_without_state
token_failure
com.apple.mediaplayer.assistant.samp.dynamiteclientstate
v24@?0@"WLKServerConfigurationResponse"8@"NSError"16
B16@?0@"ACAccount"8
v60@?0@"SAUserState"8@"NSDate"16@"NSDictionary"24@"NSNumber"32B40{AnalyticsDurations=ffff}44
com.apple.Assistant.MPAssistantGetDynamiteClientState.userState
v32@?0@"NSString"8@"NSString"16@"NSError"24
v16@?0@"ICAgeVerificationState"8
v16@?0@"ICStoreRequestContext"8
v24@?0@"ICLightweightMusicSubscriptionStatusResponse"8@"NSError"16
v28@?0@"NSError"8B16B20B24
v24@?0@"ICLibraryAuthServiceClientTokenStatus"8@"NSError"16
WLKStoredConfigurationManager
Class getWLKStoredConfigurationManagerClass(void)_block_invoke
MPAssistantUtilities.m
Unable to find class %s
void *WatchListKitLibrary(void)
WLKConfigurationManager
Class getWLKConfigurationManagerClass(void)_block_invoke
AFMultiUserConnection
Class getAFMultiUserConnectionClass(void)_block_invoke
void *AssistantServicesLibrary(void)
Create Radio Station
present
not present
The system media app reported that creating the station was unsuccessful. (stationURL = %@)
Remove Output Devices From Group
Skip To Next Item
WHAMetrics
Set Volume Level
v16@?0^{__CFError=}8
v28@?0^v8@"NSString"16f24
v16@?0^v8
v24@?0@"NSArray"8@"NSArray"16
Get Now Playing Queue Details
com.apple.Assistant.GetNowPlayingQueueDetails
v16@?0@"NSDictionary"8
v24@?0^v8^{__CFError=}16
timed out
Add Output Devices To Group
UID decoding error
Skip Time Interval
@"MPMediaQuery"32@?0q8@"NSString"16@24
Set Music Influence
Value unchanged, No change was made
Music Playback Imminent
v24@?0@"ICUserIdentity"8@"NSNumber"16
ForceSiriResetSync
v24@?0@"_MPMediaLibraryEntityChange"8^B16
v8@?0
v24@?0@"MPMediaItem"8^B16
com.apple.MediaPlayer.AssistantBundle.MPAssistantLoadPredefinedQueue
Load Predefined Queue
com.apple.mediaPlayer.assistant.loadPredefinedQueue
v12@?0{?=BBBB}8
Send playback failed: %@
v24@?0@"NSError"8@"NSArray"16
v24@?0@"MPCAssistantPlaybackQueue"8@"MPCAssistantRemoteControlDestination"16
com.apple.mediaPlayer.assistant.loadPredefinedQueue.sendCommand
v12@?0B8
v16@?0^{__CFString=}8
v16@?0@"MPCAssistantRemoteControlDestination"8
v16@?0q8
Unsupported media item type
v24@?0@"NSArray"8@"NSError"16
Dislikes Media Entity
Get Dynamite Client State
v24@?0@"SADynamiteClientState"8@"NSDictionary"16
v16@?0@"NSString"8
Get Now Playing Queue Details Remote
Too many UIDs requested
Likes Media Entity
Increase Playback Speed
Add Media Items To Library
The system media app reported that adding the track to library was unsuccessful. (trackID = %@)
v16@?0@"NSArray"8
Failed to add store item. %@
v24@?0@"NSDictionary"8@"NSError"16
Add Media Entity To Acoustic ID History
Get Volume Level
v20@?0f8^{__CFError=}12
v32@?0^v8^v16@"NSError"24
v32@?0^{__CFArray=}8^v16^{__CFError=}24
Add Media Entity To Wish List
v24@?0Q8@"NSString"16
User is not signed into an iTunes account.
%lld
v24@?0@"ICAddToWishListResponse"8@"NSError"16
v24@?0@"ICStorePlatformResponse"8@"NSError"16
v24@?0@"ICUserIdentityProperties"8@"NSError"16
System media app reported failure adding track to wishlist.
v16@?0^{__CFDictionary=}8
Rate Media Entity (invoke) <%{public}@>: %lu UIDs rating %ld
Rate Media Entity (completion) <%{public}@>: notifying assistant %{public}@
Start Playback (invoke) <%{public}@>: %lu UIDs
Start Playback (completion) <%{public}@>: notifying assistant %{public}@
Get State Response Remote (invoke) <%{public}@>: %lu UIDs
Get State Response Remote (discovery) <%{public}@>: To discover: %{public}@
Get State Response Remote (discovery) <%{public}@>: Discovered: %{public}@
Get State Response Remote (connect) <%{public}@>: Failed connect: %{public}@ -- %{public}@
Get State Response Remote (completion) <%{public}@>: notifying assistant %{public}@
Get State Response Remote (playinginfo) <%{public}@>: Set info for: %{public}@
Get State Response Remote (playinginfo) <%{public}@>: cannot resolve player path %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: playing %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: no queue %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: playback state %ld endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: is music app %{BOOL}u endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: no device info %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: group identity %{public}@endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: %ld output devices endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: using first output device %{public}@
Get State Response Remote (playinginfo) <%{public}@>: using cluster device IDs %{public}@
Get State Response Remote (playinginfo) <%{public}@>: using output device ID %{public}@
Get State Response Remote (playinginfo) <%{public}@>: hashedUID %{public}@ response %{public}@.
Get State Response Remote (playinginfo) <%{public}@>: UID %{public}@ was not requested
Add Media Items To Playlist (dealloc) <%{public}@>: dealloced
Add Media Items To Playlist (invoke) <%{public}@>: insert location %{public}@, media item %{public}@, playlist %{public}@
Add Media Items To Playlist (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Playlist (append) <%{public}@>: iCML available
Add Media Items To Playlist (append) <%{public}@>: local library
Add Media Items To Playlist (append) <%{public}@>: failed: %{public}@
Add Media Items To Playlist (local) <%{public}@>: add adam ID: %lld
Add Media Items To Playlist (local) <%{public}@>: items to add: %lu
Add Media Items To Playlist (local) <%{public}@>: added items
Add Media Items To Playlist (cloud item) <%{public}@>: tail insertion
Add Media Items To Playlist (cloud item) <%{public}@>: append store: %{public}@
Add Media Items To Playlist (cloud item) <%{public}@>: append: %{public}@
Add Media Items To Playlist (cloud item) <%{public}@>: append saga: %llu
Add Media Items To Playlist (cloud item) <%{public}@>: append adam: %llu
Add Media Items To Playlist (cloud items) <%{public}@>: tail insertion
Add Media Items To Playlist (cloud items) <%{public}@>: append store: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: append saga: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: append adam: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: append failed: %{public}@
Add Media Items To Playlist (cloud items) <%{public}@>: rewrite playlist
Add Media Items To Playlist (cloud items) <%{public}@>: head insertion
Add Media Items To Playlist (cloud items) <%{public}@>: prepend store: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: prepend saga: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: prepend adam: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: prepend failed: %{public}@
%{public}@ (cloud items) <%{public}@>: rewrite finished
%{public}@ (completion) <%{public}@>: notifying assistant %{public}@
Pause Playback (invoke) <%{public}@>: %lu UIDs
Pause Playback (completion) <%{public}@>: notifying assistant %{public}@
Get State (invoke) <%{public}@>: invoked
Get State (completion) <%{public}@>: notifying assistant %{public}@
Search (invoke) <%{public}@>: invoked
Search (completion) <%{public}@>: notifying assistant %{public}@
Search (completion) <%{public}@>: notifying assistant: %{public}@
Search (search) <%{public}@>: search for artist: %{private}@
Search (search) <%{public}@>: search for album: %{private}@
Search (search) <%{public}@>: search for genre: %{private}@
Search (search) <%{public}@>: search for composer: %{private}@
Search (search) <%{public}@>: search for title: %{private}@
Search (search) <%{public}@>: search for playlist: %{private}@
Search (search) <%{public}@>: search for genius mix: %{private}@
Search (search) <%{public}@>: search for audiobook: %{private}@
Search (search) <%{public}@>: still loading library
Search (search) <%{public}@>: found %ld results.
Set Shuffle Mode (invoke) <%{public}@>: %lu UIDs, %{public}@ mode
Set Shuffle Mode (completion) <%{public}@>: notifying assistant %{public}@
Decrease Playback Speed (invoke) <%{public}@>: %lu UIDs
Decrease Playback Speed (completion) <%{public}@>: notifying assistant %{public}@
Subscription Status Sync Handler (begin): anchor: %{private}@, validity: %{public}@
Subscription Status Sync Handler (anchor): anchor changed, sync expected
Subscription Status Sync Handler (anchor): %{private}@
Subscription Status Sync Handler (get): %{private}@
Subscription Status Sync Handler (end): sync ended
No title property for grouping %ld
Set Queue (invoke) <%{public}@>: %lu UIDs, asset info present %{BOOL}u, requester shared user id present %{BOOL}u, playable music account shared user id present %{BOOL}u, start %{public}@
Set Queue (completion) <%{public}@>: notifying assistant %{public}@
Set Queue (invalid) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (radio) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (local) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (localstore) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (localstore) <%{public}@>: search failed, use identifier %{public}@%{public}@
Set Queue (store) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (invalid) <%{public}@>: invoke with invalid origin identifier %{public}@%{public}@
Set Queue (radio) <%{public}@>: network unavailable
Set Queue (radio) <%{public}@>: radio unavailable
Set Queue (radio) <%{public}@>: companion unavailable
Set Queue (radio) <%{public}@>: station %{public}@
Set Queue (radio) <%{public}@>: destination not available, local allowed %{BOOL}u
Set Queue (radio) <%{public}@>: no radio identifier %{public}@
Set Queue (store) <%{public}@>: network unavailable
Set Queue (store) <%{public}@>: content origin %ld
Set Queue (store) <%{public}@>: using collection identifier %{public}@
Set Queue (store) <%{public}@>: queue from store identifers: %{public}@
Set Queue (store) <%{public}@>: destination not available, local allowed YES
Set Queue (store) <%{public}@>: remapping not supported
Set Queue (store) <%{public}@>: no playable items in %{public}@
Set Queue (store) <%{public}@>: no media items requested
Set Queue (store) <%{public}@>: no for you cache
Set Queue (store) <%{public}@>: playlist %{public}@
Set Queue (store) <%{public}@>: content origin %{public}@
Set Queue (store) <%{public}@>: no playable type set
Set Queue (store) <%{public}@>: no local item %{public}@
Set Queue (store) <%{public}@>: album from %{public}@
Set Queue (store) <%{public}@>: queue from %{public}@
Set Queue (store) <%{public}@>: pilot item %{public}@
Set Queue (store) <%{public}@>: no local item %{public}@.
Set Queue (store) <%{public}@>: no identifier received
Set Queue (local) <%{public}@>: find album with pid %{public}@
Set Queue (local) <%{public}@>: found cloud album %{public}@
Set Queue (local) <%{public}@>: found store album %{public}@
Set Queue (local) <%{public}@>: found album title %{public}@
Set Queue (local) <%{public}@>: enqueueing reference item
Set Queue (local) <%{public}@>: item collection [%ld items] %@
Set Queue (local) <%{public}@>: destination not available, local allowed %{BOOL}u
Set Queue (local) <%{public}@>: explicit content allowed: %{BOOL}u
Set Queue (local) <%{public}@>: sending to local WHA destination
Set Queue (local) <%{public}@>: sending to WHA destination
Set Queue (local) <%{public}@>: sending to default destination
Move Output Group To Devices (invoke) <%{public}@>: invoked
Move Output Group To Devices (completion) <%{public}@>: notifying assistant %{public}@
Seek To Playback Speed (invoke) <%{public}@>: %lu UIDs, %f speed
Seek To Playback Speed (completion) <%{public}@>: notifying assistant %{public}@
Get Music Influence (invoke) <%{public}@>: invoked
Get Music Influence (completion) <%{public}@>: notifying assistant %{public}@
Unknown identifier URL scheme: %{public}@
[%s] Unsupported identifier URL host: %@
Could not find item with identifier %@
Set Repeat Mode (invoke) <%{public}@>: %lu UIDs, %{public}@ mode
Set Repeat Mode (completion) <%{public}@>: notifying assistant %{public}@
Genius Summon (completion) <%{public}@>: notifying assistant %{public}@
Seek To Previous Item (invoke) <%{public}@>: %lu UIDs
Seek To Previous Item (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Up Next Queue (invoke) <%{public}@>: %lu UIDs, insert location %{public}@, media collection %{public}@
Add Media Items To Up Next Queue (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: mode %{public}@ to origin %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: sending add request to %@
Add Media Items To Up Next Queue (perform) <%{public}@>: user identity set to: %{private}@
Add Media Items To Up Next Queue (perform) <%{public}@>: could not encode user identity: %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: playback queue creation failed %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: group leader endpoint %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: group leader legacy
Add Media Items To Up Next Queue (perform) <%{public}@>: group leader endpoint not found %{public}@
Add Media Items To Up Next Queue (libraryqueue) <%{public}@>: collection %{public}@ does not exist
Add Media Items To Up Next Queue (storetrack) <%{public}@>: unknown origin for %{public}@
Add Media Items To Up Next Queue (issupported) <%{public}@>: mode %ld not in %{public}@
Add Media Items To Up Next Queue (issupported) <%{public}@>: MRMediaRemoteCommandInsertIntoPlaybackQueue not found in supported commands
Seek To Playback Position (invoke) <%{public}@>: %lu UIDs, %{public}@ position
Seek To Playback Position (completion) <%{public}@>: notifying assistant %{public}@
%{public}@ (utility) <%{public}@>: override requester Shared User ID in place
%{public}@ (utility) <%{public}@>: override library Shared User ID in place
%{public}@ (gethash) <%{public}@>: ace id: %{public}@
%{public}@ (hashedroute) <%{public}@>: encoded route UID table
%{public}@ (hashedroute) <%{public}@>: id: %{public}@
%{public}@ (feedback) <%{public}@>: feedback command %{public}@
%{public}@ (feedback) <%{public}@>: getting now playing
%{public}@ (feedback) <%{public}@>: sending command with options: %{public}@
%{public}@ (feedback) <%{public}@>: command not supported
%{public}@ (sharedid) <%{public}@>: using active account with configured private listening for single user only device
%{public}@ (sharedid) <%{public}@>: no DSID for home ID: %{private}@
%{public}@ (sharedid) <%{public}@>: no DSID for home ID: %{private}@, but it is NOT required
%{public}@ (sharedid) <%{public}@>: home ID %{private}@ not found in database: %{public}@
%{public}@ (sharedid) <%{public}@>: shared ID %{private}@ not available: %{public}@
%{public}@ (sharedid) <%{public}@>: library Shared User ID %{private}@
%{public}@ (sharedid) <%{public}@>: library User Identity %{private}@
%{public}@ (sharedid) <%{public}@>: requester Shared User ID %{private}@
%{public}@ (sharedid) <%{public}@>: requester User Identity %{private}@
%{public}@ (sharedid) <%{public}@>: using %{private}@ and not enforcing private listening override because requester and library match
%{public}@ (sharedid) <%{public}@>: using %{private}@ in cross-user mode with forced private listening: YES
%{public}@ (sharedid) <%{public}@>: using %{private}@ in guest mode with forced private listening: YES
%{public}@ (sharedid) <%{public}@>: using %{private}@ in forced guest mode with forced private listening: YES
%{public}@ (sharedid) <%{public}@>: using active account with configured private listening
%{public}@ (clientstate) <%{public}@>: getting dynamite client state using media user state, syncing: %d
%{public}@ (clientstate) <%{public}@>: found prefferedMediaUserStateCandidate=%{private}@
%{public}@ (clientstate) <%{public}@>: finished getting dynamite client state: %{private}@
%{public}@ (clientstate) <%{public}@>: getting dynamite client state using ACAccount
%{public}@ (clientstate) <%{public}@>: getting stored WLK configuration
%{public}@ (clientstate) <%{public}@>: active TV user: %{BOOL}u
%{public}@ (clientstate) <%{public}@>: getting WLK configuration
%{public}@ (preferredMediaUserHomeUserID) <%{public}@>: found preferredMediaUser's account with home ID: %{private}@
%{public}@ (clientstate) <%{public}@>: skipping local account
%{public}@ (clientstate) <%{public}@>: account %{private}@ is default
%{public}@ (clientstate) <%{public}@>: default user state: %{private}@
%{public}@ (clientstate) <%{public}@>: account %{private}@ has shared user ID %{public}@:%{private}@
%{public}@ (clientstate) <%{public}@>: account %{private}@ has no shared user IDs
%{public}@ (clientstate) <%{public}@>: %{private}@ user state: %{private}@
%{public}@ (clientstate) <%{public}@>: account %{private}@ has shortest expiration time
%{public}@ (clientstate) <%{public}@>: finished getting dynamite client state: %{public}@
%{public}@ (userstate) <%{public}@>: getting user state for %{private}@
%{public}@ (userstate) <%{public}@>: media user state %{private}@ has %{public}@ homeUserIDs
%{public}@ (userstate) <%{public}@>: fetching shared user id for home user id %{private}@ for %{private}@
%{public}@ (userstate) <%{public}@>: user does not have any home IDs for %{private}@
%{public}@ (userstate) <%{public}@>: no DSID found in account for %{private}@
%{public}@ (userstate) <%{public}@>: age verification: %ld for %{private}@
%{public}@ (userstate) <%{public}@>: user history unmodifiable: %{public}@ for %{private}@
%{public}@ (userstate) <%{public}@>: fetching subscription status
%{public}@ (userstate) <%{public}@>: store account is a subscriber: %{BOOL}u for %{private}@
%{public}@ (userstate) <%{public}@>: fetching match status
%{public}@ (userstate) <%{public}@>: Failed to load match status. error=%{public}@
%{public}@ (userstate) <%{public}@>: Match is enabled
%{public}@ (userstate) <%{public}@>: Account is not subscribed to iTunes Match.
%{public}@ (userstate) <%{public}@>: not syncing token for %{private}@
%{public}@ (userstate) <%{public}@>: fetching store client token for %{private}@
%{public}@ (userstate) <%{public}@>: failed fetching store client token status for %{private}@: %{public}@
%{public}@ (userstate) <%{public}@>: error fetching client token for %{private}@: %{public}@
%{public}@ (userstate) <%{public}@>: fetched store client token %{private}@ for %{private}@
%{public}@ (userstate) <%{public}@>: failed fetching shared user id for %{private}@: %{public}@
%{public}@ (userstate) <%{public}@>: fetched shared user id: %{public}@:%{private}@ for %{public}@
%{public}@ (userstate) <%{public}@>: finished getting user state for %{private}@
Create Radio Station (invoke) <%{public}@>: %lu UIDs, asset info %{public}@, start %{public}@, station %{public}@
Create Radio Station (connection) <%{public}@>: connected to: %{public}@
Create Radio Station (perform) <%{public}@>: group leader endpoint %{public}@
Create Radio Station (perform) <%{public}@>: group leader legacy
Create Radio Station (completion) <%{public}@>: notifying assistant %{public}@
Remove Output Devices From Group (invoke) <%{public}@>: invoked
Remove Output Devices From Group (completion) <%{public}@>: notifying assistant %{public}@
Skip To Next Item (invoke) <%{public}@>: %lu UIDs
Skip To Next Item (completion) <%{public}@>: notifying assistant %{public}@
Set Volume Level (invoke) <%{public}@>: %lu UIDs, %{public}@ action, %{public}@ volume, %{BOOL}u ack
Set Volume Level (completion) <%{public}@>: notifying assistant %{public}@
Set Volume Level (setvolume) <%{public}@>: new volume: %f
Set Volume Level (setvolume) <%{public}@>: volume set failed with error: %{public}@
Set Volume Level (setvolume) <%{public}@>: volume: %f endpoint %{public}@
Set Volume Level (setvolume) <%{public}@>: set volume: %f outputDeviceUID %{public}@
Set Volume Level (setvolume) <%{public}@>: increase volume: %f outputDeviceUID %{public}@
volume: %f error=%{public}@
volume: %f
Set Volume Level (setvolume) <%{public}@>: decrease volume: %f outputDeviceUID %{public}@
Get Now Playing Queue Details (invoke) <%{public}@>: %lu UIDs, prev %ld, next %ld, timeout %{public}@
Get Now Playing Queue Details (default) <%{public}@>: leader %{public}@
Get Now Playing Queue Details (completion) <%{public}@>: notifying assistant %{public}@
Add Output Devices To Group (invoke) <%{public}@>: invoked
Add Output Devices To Group (completion) <%{public}@>: notifying assistant %{public}@
Skip Time Interval (invoke) <%{public}@>: %lu UIDs, %{public}@ milliseconds
Skip Time Interval (completion) <%{public}@>: notifying assistant %{public}@
%{public}@ (getquery) <%{public}@>: local playlist
%{public}@ (getquery) <%{public}@>: local title query
%{public}@ (getquery) <%{public}@>: local query
%{public}@ (getquery) <%{public}@>: no collections
%{public}@ (ulid) <%{public}@>: no collections
%{public}@ (ulid) <%{public}@>: collections: %lu
%{public}@ (query) <%{public}@>:  Unsupported identifier URL host: %@
%{public}@ (query) <%{public}@>: collections: %lu items: %lu
Warning, could not find local item for %{public}@
Set Music Influence (invoke) <%{public}@>: enabled %{BOOL}u
Set Music Influence (perform) <%{public}@>: Dry run: %d, previous music influence: %d, and music influence: %d
Set Music Influence (completion) <%{public}@>: notifying assistant %{public}@
Music Playback Imminent (invoke) <%{public}@>: invoked
Music Playback Imminent (completion) <%{public}@>: notifying assistant %{public}@
Music Playback Imminent (completion) <%{public}@>: done
Music Playback Imminent (perform) <%{public}@>: user identity %{private}@
Music Playback Imminent (perform) <%{public}@>: user identity encoding failed %{public}@
Music Playback Imminent (perform) <%{public}@>: notifying assistant %{public}@
Sync Handler (begin): anchor: %{private}@, validity: %{public}@
Sync Handler (enumeration): sync already ended
Sync Handler (validity): (libraryValidity:%{public}@ != siriValidity:%{public}@)
Sync Handler (validity): (db revision = %lli, anchor = %lli)
Sync Handler (validity): forced reset
Sync Handler (validity): media entity sync disabled - ignoring sync
Sync Handler (validity): media entity sync disabled - resetting
Sync Handler (enumeration): aborted
Sync Handler (enumeration): finished
Sync Handler (get): sync already ended
Sync Handler (get): media entity sync disabled - resetting anchor
Sync Handler (get): aborted
Sync Handler (get): revision %{public}@, pid %lld
Sync Handler (get): no title %{public}@
Sync Handler (get): not for Assistant %{public}@
Sync Handler (end): sync ended
Load Predefined Queue (invoke) <%{public}@>: media item type %{public}@%{public}@
Load Predefined Queue (completion) <%{public}@>: notifying assistant %{public}@
Load Predefined Queue (send) <%{public}@>: sending to local WHA destination
Load Predefined Queue (send) <%{public}@>: sending to destination %{public}@
Load Predefined Queue (radio) <%{public}@>: network conditions do not permit radio playback
Load Predefined Queue (radio) <%{public}@>: radio not available
Load Predefined Queue (radio) <%{public}@>: companion not available
Load Predefined Queue (radio) <%{public}@>: resuming playback
Load Predefined Queue (radio) <%{public}@>: no available destination
Load Predefined Queue (radio) <%{public}@>: still loading library (type %ld).
Load Predefined Queue (radio) <%{public}@>: empty library for (type %ld).
Load Predefined Queue (query) <%{public}@>: network conditions do not permit streaming
Load Predefined Queue (query) <%{public}@>: streaming not available
Load Predefined Queue (query) <%{public}@>: companion not available
Load Predefined Queue (query) <%{public}@>: companion will be used
Load Predefined Queue (query) <%{public}@>: streaming available
Load Predefined Queue (query) <%{public}@>: beginning playback (type %ld).
Load Predefined Queue (query) <%{public}@>: no available destination
Load Predefined Queue (query) <%{public}@>: still loading library (type %ld).
Load Predefined Queue (query) <%{public}@>: empty library for (type %ld).
Load Predefined Queue (query) <%{public}@>: unrecognized media (type %ld).
Dislikes Media Entity (invoke) <%{public}@>: invoked
Dislikes Media Entity (completion) <%{public}@>: notifying assistant %{public}@
Get Dynamite Client State (invoke) <%{public}@>: invoked
Get Dynamite Client State (completion) <%{public}@>: notifying assistant %{private}@
Get Now Playing Queue Details Remote (invoke) <%{public}@>: %lu UIDs, queue %{public}@, timeout %f
Get Now Playing Queue Details Remote (completion) <%{public}@>: notifying assistant %{public}@
Likes Media Entity (invoke) <%{public}@>: invoked
Likes Media Entity (completion) <%{public}@>: notifying assistant %{public}@
Increase Playback Speed (invoke) <%{public}@>: %lu UIDs
Increase Playback Speed (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Library (invoke) <%{public}@>: media items %{public}@
Add Media Items To Library (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Library (extract) <%{public}@>: Unsupported origin for collection %{public}@
Add Media Items To Library (extract) <%{public}@>: Cannot add multiple items %{public}@
Add Media Items To Library (extract) <%{public}@>: Unsupported origin for entity %{public}@
Add Media Items To Library (companion) <%{public}@>: No adam IDs in %{public}@
Add Media Items To Library (cloud) <%{public}@>: Will add store item %lld
%{public}@ (cloud) <%{public}@>: Failed adding %lld. %{public}@
%{public}@ (cloud) <%{public}@>: Added %lld.
Add Media Entity To Acoustic ID History (invoke) <%{public}@>: adam ID %{public}@, affiliate ID %{public}@
Add Media Entity To Acoustic ID History (completion) <%{public}@>: notifying assistant %{public}@
Get Volume Level (invoke) <%{public}@>: %lu UIDs
Get Volume Level (completion) <%{public}@>: notifying assistant %{public}@
Add Media Entity To Wish List (invoke) <%{public}@>: adam ID %{public}@
Add Media Entity To Wish List (completion) <%{public}@>: notifying assistant %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/WatchListKit.framework/WatchListKit
softlink:r:path:/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
MPAssistantRateMediaEntity
MPAssistantStartPlayback
AFServiceCommand
NSObject
MPAssistantGetStateResponseRemote
MPAssistantAddMediaItemsToPlaylist
MPAssistantPausePlayback
MPAssistantGetState
MPAssistantSearch
MPAssistantSetShuffleMode
AssistantAdditions
MPAssistantDecreasePlaybackSpeed
MPAssistantSubscriptionStatusSyncHandler
AFSyncHandler
MPAssistantSetOutputSource
MPAssistantSetQueue
MPAssistantSetState
MPAssistantMoveOutputGroupToDevices
MPAssistantSetPlaybackSpeed
MPAssistantLoadQuickPlay
MPAssistantGetMusicInfluence
MPAdditions
MPAssistantSetRepeatMode
MPAssistantGeniusSummon
MPAssistantSkipToPreviousItem
MPAssistantAddMediaItemsToUpNextQueue
MPAssistantSeekToPlaybackPosition
MPAssistantCreateRadioStation
MPAssistantRemoveOutputDevicesFromGroup
MPAssistantSkipToNextItem
MPAssistantSetVolumeLevel
MPAssistantGetNowPlayingQueueDetails
MPAssistantAddOutputDevicesToGroup
MPAssistantSkipTimeInterval
MPAssistantStopPlayback
MPAssistantSetMusicInfluence
MPAssistantMusicPlaybackImminent
MPAssistantSyncHandler
MPAssistantLoadPredefinedQueue
MPAssistantDislikesMediaEntity
MPAssistantGetDynamiteClientState
MPAssistantGetNowPlayingQueueDetailsRemote
MPAssistantLikesMediaEntity
MPAssistantIncreasePlaybackSpeed
MPAssistantAddMediaItemsToLibrary
MPAssistantAddMediaEntityToAcousticIDHistory
MPAssistantGetVolumeLevel
MPAssistantAddMediaEntityToWishList
MPMediaItemQueryOnlyPlayableItems:withUserIdentity:plugin:hash:
DSID
_hasCollections
MPMediaGroupingForScheme
_stationDictionariesWithParent:
MPMediaItemRepresentationWithUserIdentity:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
SAMPCollectionRepresentationUsingIdentifierType:
audiobooksQuery
SAMPMediaEntityRepresentationUsingIdentifierType:
containsObject:
SAMPSearchPropertyForProperty:
dealloc
T@"NSDictionary",R,C,N
groupID
TQ,R
ic_DSID
URLWithString:
initWithSource:modelKind:block:
UUIDString
isProxy
_addItemsToCloudLibrary:
mediaCollection
_addMediaItemsToLibrarySupported
msv_firstWhere:
_addTrackToWishListWithStoreID:completion:
pauseDevicesByUID:withRefId:audioRoutingInfo:source:completion:
_appendItemsToCloudPlaylist:completion:
release
_assistantCollectionType
setAppBundleID:
_availability
setEntityLimit:
_clientState
setListeningToMusicApplication:
_completionGroup
setReleaseDate:
_countOfItems
setReleaseYear:
_createPlaybackQueueWithCollection:error:
setSingleGroup:
_decodedDeviceUIDs
setVolumeValue:
_discovery
stationStringID
_enumerateItemsUsingBlock:
userMonitorWithHomeIdentifiers:
_fetchCurrentRadioTrackInfoWithCompletion:
.cxx_destruct
JSONObjectWithData:options:error:
_requestAceHash
MPMediaItemCollectionRepresentationWithUserIdentity:plugin:hash:
_stationDictionaryForGenreName:
MP_WHAMetricsInfo
allKeys
SAMPCollectionRepresentationWithItemsUsingIdentifierType:
command
SAMPMediaItemRepresentationUsingIdentifierType:
cookies
T#,R
defaultTimeZone
T@"NSString",R,C
hashedRouteUIDs
ULIDPropertyForGroupingType:
initWithReason:
UTF8String
isInternalBuild
_abortSync
lastUpdatedDate
_addItemsToLocalLibrary:
msv_description
_addRadioTrackToWishListWithStoreID:stationHash:completion:
numberWithBool:
_appendItemToCloudPlaylist:completion:
predicateWithValue:forProperty:
_appendToPlaylistWithCompletion:
removeObserver:
_audiobooksByName:
setClientState:
_changeEnumerationSemaphore
setFeatureName:
_cloudController
setMaxConcurrentOperationCount:
_countOfCollections
setReleaseInfo:
_createLocalLibraryPlaybackQueueWithCollection:error:
setShuffleType:
_createStoreTracklistPlaybackQueueWithCollection:error:
setUseSections:
_deleteNextChange
setWithObjects:
_encoder
_extractAtomID
userTokenStatus
_isInsertionPositionSupported:origin:supportedCommands:
_isSagaAuthenticated
_itemsByTitle:mediaTypes:
_library
_nextChange
_notifyAssistantWithError:requestHash:completion:
_notifyAssistantWithString:requestHash:completion:
_originMapping
_perform
_perform:
_performAddMediaItemsWithCompletion:
_performMediaItemsSetQueueAsDryRun:completion:
_performMediaItemsSetQueueFromStoreIdentifiersAsDryRun:onlyPlayableItems:onlyLocalItems:completion:
_performRadioStationSetQueueAsDryRun:completion:
_performStoreItemsSetQueueAsDryRun:completion:
_performWithCompletion:
_performWithNowPlayingItem:audioRoutingInfo:completion:
_playAlbumFromMediaItems:contextID:dryRun:completion:
_playMediaItems:contextID:dryRun:completion:
_playlistsByDateCreatedOrder:
_playlistsByName:isGeniusMix:
_postAnchor
_prepare
_prependItemsToCloudPlaylist:completion:
_privateListeningEnabled
_radioStations
_requestCompanionToAddMediaItemsForOrigin:withCompletion:
_resetSync
_responseCollectionQueue
_resultProcessingSemaphore
_serviceHelper
_setOrderingDirectionMappings:
_setOrderingProperties:
_songCollectionsWithGroupingType:searchString:mediaTypes:
_stationDictionaryForGenreName:parent:
_stationWithName:
_syncValidity
_userIdentity
_validate
_widthLimitedOperationQueue
_workingRemoteResponse
absoluteString
aceId
acknowledgedExceedingVolumeLimit
actionType
activeAccount
activeUser
adamId
addCloudItemID:idType:
addFilterPredicate:
addObject:
addObjectsFromArray:
addOperationWithBlock:
addStoreItemWithAdamID:completionHandler:
addStoreItemWithAdamID:toPlaylistWithPersistentID:completionHandler:
adjustmentInMilliseconds
affiliateId
ageVerificationRequired
albumQueryByGroupingForSchemeWithUserIdentity:plugin:hash:
albumQueryForArtist
albumsQuery
allItems
allKeysForObject:
allUserStates
ams_isLocalAccount
anchor
appBundleID
appendItems:completion:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
assetInfo
assistantRadioGetAvailability:completion:
assistantStreamingGetAvailability:
autorelease
becomeActiveAndWaitUntilDone:
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithAnchor:validity:forKey:beginInfo:
beginSyncWithInfo:configuration:
boolValue
capabilities
class
cloudItemIDListForPlaylist:
cloudLibrarySyncStatus
clusterComposition
code
collections
compare:options:
conformsToProtocol:
connectToEndpoint:completion:
constraints
containsUID:
controllerWithUserIdentity:
copy
count
countByEnumeratingWithState:objects:count:
createRemotePlaybackQueue
currentDeviceInfo
currentEntityRevision
currentHandler
currentSyncSnapshot
currentThread
data
dataUsingEncoding:
date
debugDescription
decodeHashedRouteUIDs:completion:
defaultCenter
defaultIdentityStore
defaultManager
defaultMediaLibrary
defaultMediaPlaybackAppBundleIdentifier
defaultRadioLibrary
defaultUserState
deleteDatabaseProperty:
deletionType
description
designatedGroupLeader
deviceMediaLibraryWithUserIdentity:
dictionary
dictionaryWithObjects:forKeys:count:
discoverRemoteControlEndpointsMatchingUIDs:completion:
domain
doubleValue
dryRun
dsid
eligibleOffers
emptyIdentifierSet
encodeHashedRouteUIDs:completion:
encodeURLData:
entity
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:usingBlock:
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
expirationDate
featuredStations
fetchConfigurationWithCompletionHandler:
filterPredicates
firstObject
floatValue
getAgeVerificationStateWithCompletion:
getChangeAfterAnchor:changeInfo:
getConformingSharedUserIdForHomeUserId:completion:
getHomeUserIdForSharedUserId:completion:
getPropertiesForUserIdentity:completionHandler:
getRecentStationGroupsWithCompletionHandler:
getSAMPMediaItems:origin:completion:
groupingType
handleFailureInFunction:file:lineNumber:description:
hash
hashedRouteUID
homeUserIDs
homeUserIdentifiers
host
iTunesMatchSubscriptionStatus
ic_allStoreAccountsWithCompletion:
ic_homeUserIdentifiers
ic_privateListeningEnabledForHomeUsers
ic_sharedAccountStore
ic_storeAccountForHomeUserIdentifier:completion:
identifier
identifierURLScheme
identityKind
influencedSharedUserId
influencedUserSharedUserId
init
initWithBlock:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCapacity:
initWithContextID:query:
initWithContextID:storeItemIDs:collectionIdentifierSet:
initWithDictionary:
initWithEntities:entityType:
initWithErrorCode:
initWithFilterPredicates:
initWithFilterPredicates:library:
initWithIdentity:
initWithItems:
initWithLongLong:
initWithObjectsAndKeys:
initWithParentNodeID:
initWithPersistentID:
initWithRequestContext:
initWithRequestContext:platformMetadataItem:
initWithRequestContext:storeItemID:affiliateIdentifier:
initWithStoreRequestContext:
initWithUUIDString:
initWithUserInteractionLevel:
insertCloudItemID:idType:atIndex:
insertLocation
intValue
integerValue
isActive
isActiveLocker
isActiveUser
isCloudLibraryEnabled
isCurrentDeviceValidHomeAccessory
isEqual:
isEqualToNumber:
isEqualToString:
isExplicitContentAllowed
isExplicitItem
isKindOfClass:
isMatchEnabled
isMediaEntitySyncDisabled
isMemberOfClass:
isPrivateListeningEnabled
isPrivateListeningEnabledForCurrentAccessory
isPromotionRelatedStatus
itemWithStoreID:
items
itemsQuery
lastError
lastPathComponent
lastUpdateAttemptTime
length
libraryAuthTokenStatus
lightweightSubscriptionStatus
localizedDescription
localizedFailureReason
longLongValue
longValue
maxResults
mediaItemType
mediaItems
mediaPlayerOrderingDirection
mediaPlayerOrderingTerms
mediaPlayerSearchProperty
metricsContext
monitorForCurrentUser
msv_filter:
multiverseIdentifier
music
musicAccountSharedUserId
mutableCopy
name
nextItemCount
nowPlayingApplicationDestination
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectForKey:
objectForKeyedSubscript:
outputDeviceUIDs
outputDevices
path
performRequestWithCompletionHandler:
performRequestWithResponseHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithCompletion:
performWithCompletion:serviceHelper:
performWithCompletion:serviceHelper:executionInfo:
performWithResponseHandler:
persistentID
persistentIDPropertyForGroupingType:
playlist
playlistsQuery
positionInMilliseconds
predicateForProperty:
predicateMatchingPredicates:
predicateWithSearchString:forProperties:
preemptiveNowPlayingQueueDetailsTimeOut
preloadedUserSharedUserId
prepareForAudioHandoffWithCompletion:
previousItemCount
privateListeningEnabled
property
propertyForSAMPSearchProperty:
qualityOfService
query
queryQueueWithContextID:query:
queueDetails
radioQueueWithContextID:stationStringID:
rangeOfString:options:
rating
recommendationId
refId
removeObjectForKey:
repeatMode
replaceItems:completion:
representativeItem
requesterSharedUserId
resetWithValidity:
resolveWithHashedRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
respondsToSelector:
retain
retainCount
routeTimeout
scalingFactor
scheme
searchProperties
searchTypes
self
sendCommand:toDestination:withOptions:completion:
sendPlaybackQueue:toDestination:withOptions:completion:
sendQueue:toDestination:shouldResync:completion:
setActiveTvUser:
setAdamIdentifier:
setAgeVerificationRequired:
setAlbum:
setArtist:
setAuthenticationProvider:
setDate:
setDateAdded:
setDatePurchased:
setDefaultUserState:
setEditable:
setEligibleOffers:
setEpisodeNumber:
setErrorCode:
setExpirationDate:
setFilteringDisabled:
setFirstItem:
setGenre:
setGlobalPlaylistID:
setGroupingType:
setHashedGroupID:
setHashedRouteUIDs:
setHost:
setICloudMusicLibraryToggle:
setITunesMatchSubscriptionStatus:
setIdentifier:
setIdentity:
setIgnoreSystemFilterPredicates:
setInContextUsersStates:
setIsDelete:
setIsExplicit:
setIsPromotionRelatedStatus:
setItemIdentifiers:
setItems:
setLastPlayedDate:
setLastUpdateAttemptTime:
setListeningToItem:
setMediaLibrary:
setName:
setNextItems:
setObject:
setObject:forKey:
setObject:forKeyedSubscript:
setOrigin:
setPath:
setPersonalizationStyle:
setPlaybackInfo:
setPlaybackPositionMillis:
setPlayingInfoFromEndpoint:
setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler:
setPlays:
setPostAnchor:
setPreviousItems:
setPreviousValue:
setPrivateListeningEnabled:
setPrivateListeningEnabledForCurrentAccessory:
setQualityOfService:
setReason:
setRefId:
setRememberPlaybackPosition:
setRequestContext:
setResults:
setRouteResponse:
setRouteResponses:
setScheme:
setSeasonNumber:
setSetting:
setSharedUserId:
setShouldExcludeFromBackgroundRefresh:
setShouldImmediatelyStartPlayback:
setShouldIncludeNonLibraryEntities:
setShouldOverrideManuallyCuratedQueue:
setShouldShuffle:
setShowEpisodesCount:
setShowName:
setSiriAssetInfo:
setSiriRecommendationID:
setSiriWHAMetricsInfo:
setSortAlbum:
setSortArtist:
setSortTitle:
setSource:
setState:
setStatus:
setSubscriptionAdamID:
setSyncSharedUserId:
setTimeZoneId:
setTitle:
setUniversalStoreIdentifiersWithBlock:
setUserHistoryUnmodifiable:
setUserIdentity:
setUserToken:
setUserTokenStatus:
setValue:
setWithArray:
setWithObject:
setXpAbCookie:
shared
sharedInstance
sharedModel
sharedPreferences
sharedUserIdFromPlayableMusicAccount
shortDebugName
shouldExcludeFromBackgroundRefresh
shouldOverrideManuallyCuratedUpNext
shouldShuffle
shuffleMode
songsQuery
sortDescriptorWithKey:ascending:
sortTitlePropertyForGroupingType:
sortedArrayUsingDescriptors:
speakerSharedUserId
specificAccountWithDSID:
standardUserDefaults
startPlaying
startWithCompletionHandler:
stationID
stationUrl
stations
status
statusType
storeTracklistQueueWithContextID:storeItemIDs:collectionIdentifierSet:
storedConfiguration
string
stringByAppendingFormat:
stringByAppendingString:
stringValue
stringWithFormat:
stringWithUTF8String:
subscriptionStatus
substringFromIndex:
substringToIndex:
superclass
supportsMultipleITunesAccounts
syncDidEnd
syncSharedUserId
syncSnapshotForKey:
syncVerificationKeyForKey:
systemMediaApplicationDestination
timeIntervalSince1970
timeIntervalSinceNow
timeIntervalSinceReferenceDate
title
titlePropertyForGroupingType:
toggle
token
tokenResult
uniqueObjectIdentifier
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
userHistoryUnmodifiable
userMonitorWithHomeIdentifier:
userStations
userToken
usesListeningHistory
value
valueForDatabaseProperty:
valueForKeyPath:
valueForProperty:
valuesForProperties:
volumeValue
xpAbCookie
xpab
zone
v24@0:8@?16
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@?16@24
v40@0:8@?16@24@32
@24@0:8@16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
v40@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24@"AFCommandExecutionInfo"32
@24@0:8@"NSDictionary"16
v24@0:8^v16
@"NSDictionary"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"MPCAssistantEncodings"
v40@0:8@16@24@?32
v32@0:8@16@?24
@"ICUserIdentity"
@"MPCloudController"
@32@0:8@16q24
@28@0:8@16B24
@40@0:8q16@24q32
@24@0:8Q16
@32@0:8@16Q24
@24@0:8q16
v48@0:8@16@24@32@40
v56@0:8@16@24q32@40@48
v64@0:8@16@24q32@40@48@56
v32@0:8@16@24
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
@"SADynamiteClientState"
q16@0:8
v28@0:8B16@?20
v36@0:8B16B20B24@?28
v44@0:8@16@24B32@?36
@"<AFServiceHelper>"
@"MPCAssistantAvailability"
@"NSNumber"
@"MPCAssistantCommand"
@32@0:8@16^@24
B36@0:8i16^v20^{__CFArray=}28
@"MPCAssistantDiscovery"
v48@0:8{?=qq}16^v32@?40
@40@0:8@16@24@32
@44@0:8B16@20@28@36
@"MPMediaLibrary"
@"NSObject<OS_dispatch_semaphore>"
@"_MPMediaLibraryEntityChange"
v36@0:8@16{?=BBBB}24@?28
v32@0:8^v16@?24
v32@0:8Q16@?24
v40@0:8Q16@24@?32
Rate Media Entity
pluginname
success
duration
errorstring
com.apple.mediaplayer.assistant.samp.nowplaying
@"NSDictionary"8@?0
Start Playback
LOCAL_DEVICE
Get State Response Remote
com.apple.MediaPlayer.assistant.responseCollection
Add Media Items To Playlist
no user identity
Collection object was not a playlist. Unable to add tracks to something that is not a playlist.
Unable to add item to playlist
Uexpected insertion order requested.
Unknown item type
Pause Playback
siri
Get State
x-sampmedentity
x-sampmeditem
x-sampcollection
x-sampgeniusmix
x-sampplaylist
x-sampcollection-album
x-sampcollection-artist
x-sampcollection-genre
x-sampcollection-title
x-sampcollection-audiobook
x-sampcollection-podcast
x-sampcollection-musicshow
x-sampradiotrack
x-sampradio
device
multiverse
store
ulid
/%lld
Search
v32@?0@"SAMPSearchConstraint"8Q16^B24
v32@?0@"MPMediaEntity"8Q16^B24
v32@?0@"NSArray"8Q16^B24
Descending
children
name
station-dict
Set Shuffle Mode
Decrease Playback Speed
player statuses: %@
Subscription Status Sync Handler
self
FuseEligibility_%d_%f:PL_%@_UserAnchors_%@
MSVHasher+Algorithms.h
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
Cannot append to unknown hasher algorithm
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
Cannot obtain digest from unknown hasher algorithm
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
Cannot finalize unknown hasher algorithm
Set Queue
com.apple.mediaPlayer.assistant.setQueue
v20@?0B8@"AceObject"12
MPCAssistant
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
no playable type set
com.apple.media.entities.siri_data_changed
com.apple.mediaPlayer.assistant.setQueue.sendCommand
unsupported command
Move Output Group To Devices
UID decoding error
Seek To Playback Speed
Get Music Influence
/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/AssistantBundle/Categories/SAMPMediaItem_MPAdditions.m
Set Repeat Mode
Unsupported Feature
Genius Summon
Seek To Previous Item
MPAssistantAddToUpNextErrorDomain
Add Media Items To Up Next Queue
MediaRemote command failed. err = %ld
v12@?0I8
Failed to connect to endpoint
com.apple.MPAssistantAddMediaItemsToUpNextQueue
v20@?0C8^v12
Too many endpoints requested
No endpoints found
Collection does not exist in library
B16@?0^v8
Seek To Playback Position
com.apple.iBooks
com.apple.MediaAssistant.siri
com.apple.mobileipod
SiriRequesterSharedUserID
SiriLibrarySharedUserID
%@%@
@16@?0^{__CFString=}8
errorcode
v24@?0^{__CFDictionary=}8^v16
v16@?0^{__CFArray=}8
v24@?0@"ACAccount"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v28@?0@"NSString"8B16@?<v@?@"ICUserIdentity"@"NSNumber">20
MediaPlayer
use_media_user_state_for_dcs
plugin_name
com.apple.Assistant.MPAssistantUtilitiesGetDynamiteClientState
B16@?0@"ICMediaUserState"8
Default_UserState_v2_%@_%@_%@_%@_%@_%@_%@
UserState_v2_%@_%@_%@_%@_%@_%@_%@
UserState_v2_%@_%@_%@_%@_%@
none
v24@?0@"NSDictionary"8@"SAUserState"16
age_verification_duration
subscription_status_duration
token_duration
use_history_duration
accounts_on_device
accounts_without_state
token_failure
com.apple.mediaplayer.assistant.samp.dynamiteclientstate
v24@?0@"WLKServerConfigurationResponse"8@"NSError"16
B16@?0@"ACAccount"8
v60@?0@"SAUserState"8@"NSDate"16@"NSDictionary"24@"NSNumber"32B40{AnalyticsDurations=ffff}44
com.apple.Assistant.MPAssistantGetDynamiteClientState.userState
v32@?0@"NSString"8@"NSString"16@"NSError"24
v16@?0@"ICAgeVerificationState"8
v16@?0@"ICStoreRequestContext"8
v24@?0@"ICLightweightMusicSubscriptionStatusResponse"8@"NSError"16
v28@?0@"NSError"8B16B20B24
v24@?0@"ICLibraryAuthServiceClientTokenStatus"8@"NSError"16
WLKStoredConfigurationManager
Class getWLKStoredConfigurationManagerClass(void)_block_invoke
MPAssistantUtilities.m
Unable to find class %s
void *WatchListKitLibrary(void)
WLKConfigurationManager
Class getWLKConfigurationManagerClass(void)_block_invoke
AFMultiUserConnection
Class getAFMultiUserConnectionClass(void)_block_invoke
void *AssistantServicesLibrary(void)
Create Radio Station
present
not present
The system media app reported that creating the station was unsuccessful. (stationURL = %@)
Remove Output Devices From Group
Skip To Next Item
WHAMetrics
Set Volume Level
v16@?0^{__CFError=}8
v28@?0^v8@"NSString"16f24
v16@?0^v8
v24@?0@"NSArray"8@"NSArray"16
Get Now Playing Queue Details
com.apple.Assistant.GetNowPlayingQueueDetails
v24@?0^v8^{__CFError=}16
timed out
Add Output Devices To Group
Skip Time Interval
@"MPMediaQuery"32@?0q8@"NSString"16@24
Set Music Influence
Value unchanged, No change was made
Music Playback Imminent
v24@?0@"ICUserIdentity"8@"NSNumber"16
ForceSiriResetSync
v24@?0@"_MPMediaLibraryEntityChange"8^B16
v8@?0
v24@?0@"MPMediaItem"8^B16
com.apple.MediaPlayer.AssistantBundle.MPAssistantLoadPredefinedQueue
Load Predefined Queue
com.apple.mediaPlayer.assistant.loadPredefinedQueue
v12@?0{?=BBBB}8
Send playback failed: %@
v24@?0@"NSError"8@"NSArray"16
v24@?0@"MPCAssistantPlaybackQueue"8@"MPCAssistantRemoteControlDestination"16
com.apple.mediaPlayer.assistant.loadPredefinedQueue.sendCommand
v12@?0B8
v16@?0^{__CFString=}8
v16@?0@"MPCAssistantRemoteControlDestination"8
v16@?0q8
Unsupported media item type
v24@?0@"NSArray"8@"NSError"16
Dislikes Media Entity
Get Dynamite Client State
v24@?0@"SADynamiteClientState"8@"NSDictionary"16
v16@?0@"NSString"8
Get Now Playing Queue Details Remote
v16@?0@"NSDictionary"8
Too many UIDs requested
Likes Media Entity
Increase Playback Speed
Add Media Items To Library
The system media app reported that adding the track to library was unsuccessful. (trackID = %@)
v16@?0@"NSArray"8
Failed to add store item. %@
v24@?0@"NSDictionary"8@"NSError"16
Add Media Entity To Acoustic ID History
v16@?0@"NSError"8
Get Volume Level
v20@?0f8^{__CFError=}12
v32@?0^v8^v16@"NSError"24
v32@?0^{__CFArray=}8^v16^{__CFError=}24
Add Media Entity To Wish List
v16@?0@"AceObject"8
v24@?0Q8@"NSString"16
User is not signed into an iTunes account.
%lld
v24@?0@"ICAddToWishListResponse"8@"NSError"16
v24@?0@"ICStorePlatformResponse"8@"NSError"16
v24@?0@"ICUserIdentityProperties"8@"NSError"16
System media app reported failure adding track to wishlist.
v16@?0^{__CFDictionary=}8
Rate Media Entity (invoke) <%{public}@>: %lu UIDs rating %ld
Rate Media Entity (completion) <%{public}@>: notifying assistant %{public}@
Start Playback (invoke) <%{public}@>: %lu UIDs
Start Playback (completion) <%{public}@>: notifying assistant %{public}@
Get State Response Remote (invoke) <%{public}@>: %lu UIDs
Get State Response Remote (discovery) <%{public}@>: To discover: %{public}@
Get State Response Remote (discovery) <%{public}@>: Discovered: %{public}@
Get State Response Remote (connect) <%{public}@>: Failed connect: %{public}@ -- %{public}@
Get State Response Remote (completion) <%{public}@>: notifying assistant %{public}@
Get State Response Remote (playinginfo) <%{public}@>: Set info for: %{public}@
Get State Response Remote (playinginfo) <%{public}@>: cannot resolve player path %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: playing %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: no queue %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: playback state %ld endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: is music app %{BOOL}u endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: no device info %{public}@ endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: group identity %{public}@endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: %ld output devices endpoint %{public}@
Get State Response Remote (playinginfo) <%{public}@>: using first output device %{public}@
Get State Response Remote (playinginfo) <%{public}@>: using cluster device IDs %{public}@
Get State Response Remote (playinginfo) <%{public}@>: using output device ID %{public}@
Get State Response Remote (playinginfo) <%{public}@>: hashedUID %{public}@ response %{public}@.
Get State Response Remote (playinginfo) <%{public}@>: UID %{public}@ was not requested
Add Media Items To Playlist (dealloc) <%{public}@>: dealloced
Add Media Items To Playlist (invoke) <%{public}@>: insert location %{public}@, media item %{public}@, playlist %{public}@
Add Media Items To Playlist (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Playlist (append) <%{public}@>: iCML available
Add Media Items To Playlist (append) <%{public}@>: local library
Add Media Items To Playlist (append) <%{public}@>: failed: %{public}@
Add Media Items To Playlist (local) <%{public}@>: add adam ID: %lld
Add Media Items To Playlist (local) <%{public}@>: items to add: %lu
Add Media Items To Playlist (local) <%{public}@>: added items
Add Media Items To Playlist (cloud item) <%{public}@>: tail insertion
Add Media Items To Playlist (cloud item) <%{public}@>: append store: %{public}@
Add Media Items To Playlist (cloud item) <%{public}@>: append: %{public}@
Add Media Items To Playlist (cloud item) <%{public}@>: append saga: %llu
Add Media Items To Playlist (cloud item) <%{public}@>: append adam: %llu
Add Media Items To Playlist (cloud items) <%{public}@>: tail insertion
Add Media Items To Playlist (cloud items) <%{public}@>: append store: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: append saga: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: append adam: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: append failed: %{public}@
Add Media Items To Playlist (cloud items) <%{public}@>: rewrite playlist
Add Media Items To Playlist (cloud items) <%{public}@>: head insertion
Add Media Items To Playlist (cloud items) <%{public}@>: prepend store: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: prepend saga: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: prepend adam: %lld
Add Media Items To Playlist (cloud items) <%{public}@>: prepend failed: %{public}@
%{public}@ (cloud items) <%{public}@>: rewrite finished
%{public}@ (completion) <%{public}@>: notifying assistant %{public}@
Pause Playback (invoke) <%{public}@>: %lu UIDs
Pause Playback (completion) <%{public}@>: notifying assistant %{public}@
Get State (invoke) <%{public}@>: invoked
Get State (completion) <%{public}@>: notifying assistant %{public}@
Search (invoke) <%{public}@>: invoked
Search (completion) <%{public}@>: notifying assistant %{public}@
Search (completion) <%{public}@>: notifying assistant: %{public}@
Search (search) <%{public}@>: search for artist: %{private}@
Search (search) <%{public}@>: search for album: %{private}@
Search (search) <%{public}@>: search for genre: %{private}@
Search (search) <%{public}@>: search for composer: %{private}@
Search (search) <%{public}@>: search for title: %{private}@
Search (search) <%{public}@>: search for playlist: %{private}@
Search (search) <%{public}@>: search for genius mix: %{private}@
Search (search) <%{public}@>: search for audiobook: %{private}@
Search (search) <%{public}@>: still loading library
Search (search) <%{public}@>: found %ld results.
Set Shuffle Mode (invoke) <%{public}@>: %lu UIDs, %{public}@ mode
Set Shuffle Mode (completion) <%{public}@>: notifying assistant %{public}@
Decrease Playback Speed (invoke) <%{public}@>: %lu UIDs
Decrease Playback Speed (completion) <%{public}@>: notifying assistant %{public}@
Subscription Status Sync Handler (begin): anchor: %{private}@, validity: %{public}@
Subscription Status Sync Handler (anchor): anchor changed, sync expected
Subscription Status Sync Handler (anchor): %{private}@
Subscription Status Sync Handler (get): %{private}@
Subscription Status Sync Handler (end): sync ended
No title property for grouping %ld
Set Queue (invoke) <%{public}@>: %lu UIDs, asset info present %{BOOL}u, requester shared user id present %{BOOL}u, playable music account shared user id present %{BOOL}u, start %{public}@
Set Queue (completion) <%{public}@>: notifying assistant %{public}@
Set Queue (invalid) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (radio) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (local) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (localstore) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (localstore) <%{public}@>: search failed, use identifier %{public}@%{public}@
Set Queue (store) <%{public}@>: invoke with identifier %{public}@%{public}@
Set Queue (invalid) <%{public}@>: invoke with invalid origin identifier %{public}@%{public}@
Set Queue (radio) <%{public}@>: network unavailable
Set Queue (radio) <%{public}@>: radio unavailable
Set Queue (radio) <%{public}@>: companion unavailable
Set Queue (radio) <%{public}@>: station %{public}@
Set Queue (radio) <%{public}@>: destination not available, local allowed %{BOOL}u
Set Queue (radio) <%{public}@>: no radio identifier %{public}@
Set Queue (store) <%{public}@>: network unavailable
Set Queue (store) <%{public}@>: content origin %ld
Set Queue (store) <%{public}@>: using collection identifier %{public}@
Set Queue (store) <%{public}@>: queue from store identifers: %{public}@
Set Queue (store) <%{public}@>: destination not available, local allowed YES
Set Queue (store) <%{public}@>: remapping not supported
Set Queue (store) <%{public}@>: no playable items in %{public}@
Set Queue (store) <%{public}@>: no media items requested
Set Queue (store) <%{public}@>: no for you cache
Set Queue (store) <%{public}@>: playlist %{public}@
Set Queue (store) <%{public}@>: content origin %{public}@
Set Queue (store) <%{public}@>: no playable type set
Set Queue (store) <%{public}@>: no local item %{public}@
Set Queue (store) <%{public}@>: album from %{public}@
Set Queue (store) <%{public}@>: queue from %{public}@
Set Queue (store) <%{public}@>: pilot item %{public}@
Set Queue (store) <%{public}@>: no local item %{public}@.
Set Queue (store) <%{public}@>: no identifier received
Set Queue (local) <%{public}@>: find album with pid %{public}@
Set Queue (local) <%{public}@>: found cloud album %{public}@
Set Queue (local) <%{public}@>: found store album %{public}@
Set Queue (local) <%{public}@>: found album title %{public}@
Set Queue (local) <%{public}@>: enqueueing reference item
Set Queue (local) <%{public}@>: item collection [%ld items] %@
Set Queue (local) <%{public}@>: destination not available, local allowed %{BOOL}u
Set Queue (local) <%{public}@>: explicit content allowed: %{BOOL}u
Set Queue (local) <%{public}@>: sending to local WHA destination
Set Queue (local) <%{public}@>: sending to WHA destination
Set Queue (local) <%{public}@>: sending to default destination
Move Output Group To Devices (invoke) <%{public}@>: invoked
Move Output Group To Devices (completion) <%{public}@>: notifying assistant %{public}@
Seek To Playback Speed (invoke) <%{public}@>: %lu UIDs, %f speed
Seek To Playback Speed (completion) <%{public}@>: notifying assistant %{public}@
Get Music Influence (invoke) <%{public}@>: invoked
Get Music Influence (completion) <%{public}@>: notifying assistant %{public}@
Unknown identifier URL scheme: %{public}@
[%s] Unsupported identifier URL host: %@
Could not find item with identifier %@
Set Repeat Mode (invoke) <%{public}@>: %lu UIDs, %{public}@ mode
Set Repeat Mode (completion) <%{public}@>: notifying assistant %{public}@
Genius Summon (completion) <%{public}@>: notifying assistant %{public}@
Seek To Previous Item (invoke) <%{public}@>: %lu UIDs
Seek To Previous Item (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Up Next Queue (invoke) <%{public}@>: %lu UIDs, insert location %{public}@, media collection %{public}@
Add Media Items To Up Next Queue (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: mode %{public}@ to origin %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: sending add request to %@
Add Media Items To Up Next Queue (perform) <%{public}@>: user identity set to: %{private}@
Add Media Items To Up Next Queue (perform) <%{public}@>: could not encode user identity: %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: playback queue creation failed %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: group leader endpoint %{public}@
Add Media Items To Up Next Queue (perform) <%{public}@>: group leader legacy
Add Media Items To Up Next Queue (perform) <%{public}@>: group leader endpoint not found %{public}@
Add Media Items To Up Next Queue (libraryqueue) <%{public}@>: collection %{public}@ does not exist
Add Media Items To Up Next Queue (storetrack) <%{public}@>: unknown origin for %{public}@
Add Media Items To Up Next Queue (issupported) <%{public}@>: mode %ld not in %{public}@
Add Media Items To Up Next Queue (issupported) <%{public}@>: MRMediaRemoteCommandInsertIntoPlaybackQueue not found in supported commands
Seek To Playback Position (invoke) <%{public}@>: %lu UIDs, %{public}@ position
Seek To Playback Position (completion) <%{public}@>: notifying assistant %{public}@
%{public}@ (utility) <%{public}@>: override requester Shared User ID in place
%{public}@ (utility) <%{public}@>: override library Shared User ID in place
%{public}@ (gethash) <%{public}@>: ace id: %{public}@
%{public}@ (hashedroute) <%{public}@>: encoded route UID table
%{public}@ (hashedroute) <%{public}@>: id: %{public}@
%{public}@ (feedback) <%{public}@>: feedback command %{public}@
%{public}@ (feedback) <%{public}@>: getting now playing
%{public}@ (feedback) <%{public}@>: sending command with options: %{public}@
%{public}@ (feedback) <%{public}@>: command not supported
%{public}@ (sharedid) <%{public}@>: using active account with configured private listening for single user only device
%{public}@ (sharedid) <%{public}@>: no DSID for home ID: %{private}@
%{public}@ (sharedid) <%{public}@>: no DSID for home ID: %{private}@, but it is NOT required
%{public}@ (sharedid) <%{public}@>: home ID %{private}@ not found in database: %{public}@
%{public}@ (sharedid) <%{public}@>: shared ID %{private}@ not available: %{public}@
%{public}@ (sharedid) <%{public}@>: library Shared User ID %{private}@
%{public}@ (sharedid) <%{public}@>: library User Identity %{private}@
%{public}@ (sharedid) <%{public}@>: requester Shared User ID %{private}@
%{public}@ (sharedid) <%{public}@>: requester User Identity %{private}@
%{public}@ (sharedid) <%{public}@>: using %{private}@ and not enforcing private listening override because requester and library match
%{public}@ (sharedid) <%{public}@>: using %{private}@ in cross-user mode with forced private listening: YES
%{public}@ (sharedid) <%{public}@>: using %{private}@ in guest mode with forced private listening: YES
%{public}@ (sharedid) <%{public}@>: using %{private}@ in forced guest mode with forced private listening: YES
%{public}@ (sharedid) <%{public}@>: using active account with configured private listening
%{public}@ (clientstate) <%{public}@>: getting dynamite client state using media user state, syncing: %d
%{public}@ (clientstate) <%{public}@>: found prefferedMediaUserStateCandidate=%{private}@
%{public}@ (clientstate) <%{public}@>: finished getting dynamite client state: %{private}@
%{public}@ (clientstate) <%{public}@>: getting dynamite client state using ACAccount
%{public}@ (clientstate) <%{public}@>: getting stored WLK configuration
%{public}@ (clientstate) <%{public}@>: active TV user: %{BOOL}u
%{public}@ (clientstate) <%{public}@>: getting WLK configuration
%{public}@ (preferredMediaUserHomeUserID) <%{public}@>: found preferredMediaUser's account with home ID: %{private}@
%{public}@ (clientstate) <%{public}@>: skipping local account
%{public}@ (clientstate) <%{public}@>: account %{private}@ is default
%{public}@ (clientstate) <%{public}@>: default user state: %{private}@
%{public}@ (clientstate) <%{public}@>: account %{private}@ has shared user ID %{public}@:%{private}@
%{public}@ (clientstate) <%{public}@>: account %{private}@ has no shared user IDs
%{public}@ (clientstate) <%{public}@>: %{private}@ user state: %{private}@
%{public}@ (clientstate) <%{public}@>: account %{private}@ has shortest expiration time
%{public}@ (clientstate) <%{public}@>: finished getting dynamite client state: %{public}@
%{public}@ (userstate) <%{public}@>: getting user state for %{private}@
%{public}@ (userstate) <%{public}@>: media user state %{private}@ has %{public}@ homeUserIDs
%{public}@ (userstate) <%{public}@>: fetching shared user id for home user id %{private}@ for %{private}@
%{public}@ (userstate) <%{public}@>: user does not have any home IDs for %{private}@
%{public}@ (userstate) <%{public}@>: no DSID found in account for %{private}@
%{public}@ (userstate) <%{public}@>: age verification: %ld for %{private}@
%{public}@ (userstate) <%{public}@>: user history unmodifiable: %{public}@ for %{private}@
%{public}@ (userstate) <%{public}@>: fetching subscription status
%{public}@ (userstate) <%{public}@>: store account is a subscriber: %{BOOL}u for %{private}@
%{public}@ (userstate) <%{public}@>: fetching match status
%{public}@ (userstate) <%{public}@>: Failed to load match status. error=%{public}@
%{public}@ (userstate) <%{public}@>: Match is enabled
%{public}@ (userstate) <%{public}@>: Account is not subscribed to iTunes Match.
%{public}@ (userstate) <%{public}@>: not syncing token for %{private}@
%{public}@ (userstate) <%{public}@>: fetching store client token for %{private}@
%{public}@ (userstate) <%{public}@>: failed fetching store client token status for %{private}@: %{public}@
%{public}@ (userstate) <%{public}@>: error fetching client token for %{private}@: %{public}@
%{public}@ (userstate) <%{public}@>: fetched store client token %{private}@ for %{private}@
%{public}@ (userstate) <%{public}@>: failed fetching shared user id for %{private}@: %{public}@
%{public}@ (userstate) <%{public}@>: fetched shared user id: %{public}@:%{private}@ for %{public}@
%{public}@ (userstate) <%{public}@>: finished getting user state for %{private}@
Create Radio Station (invoke) <%{public}@>: %lu UIDs, asset info %{public}@, start %{public}@, station %{public}@
Create Radio Station (connection) <%{public}@>: connected to: %{public}@
Create Radio Station (perform) <%{public}@>: group leader endpoint %{public}@
Create Radio Station (perform) <%{public}@>: group leader legacy
Create Radio Station (completion) <%{public}@>: notifying assistant %{public}@
Remove Output Devices From Group (invoke) <%{public}@>: invoked
Remove Output Devices From Group (completion) <%{public}@>: notifying assistant %{public}@
Skip To Next Item (invoke) <%{public}@>: %lu UIDs
Skip To Next Item (completion) <%{public}@>: notifying assistant %{public}@
Set Volume Level (invoke) <%{public}@>: %lu UIDs, %{public}@ action, %{public}@ volume, %{BOOL}u ack
Set Volume Level (completion) <%{public}@>: notifying assistant %{public}@
Set Volume Level (setvolume) <%{public}@>: new volume: %f
Set Volume Level (setvolume) <%{public}@>: volume set failed with error: %{public}@
Set Volume Level (setvolume) <%{public}@>: volume: %f endpoint %{public}@
Set Volume Level (setvolume) <%{public}@>: set volume: %f outputDeviceUID %{public}@
Set Volume Level (setvolume) <%{public}@>: increase volume: %f outputDeviceUID %{public}@
volume: %f error=%{public}@
volume: %f
Set Volume Level (setvolume) <%{public}@>: decrease volume: %f outputDeviceUID %{public}@
Get Now Playing Queue Details (invoke) <%{public}@>: %lu UIDs, prev %ld, next %ld, timeout %{public}@
Get Now Playing Queue Details (default) <%{public}@>: leader %{public}@
Get Now Playing Queue Details (completion) <%{public}@>: notifying assistant %{public}@
Add Output Devices To Group (invoke) <%{public}@>: invoked
Add Output Devices To Group (completion) <%{public}@>: notifying assistant %{public}@
Skip Time Interval (invoke) <%{public}@>: %lu UIDs, %{public}@ milliseconds
Skip Time Interval (completion) <%{public}@>: notifying assistant %{public}@
%{public}@ (getquery) <%{public}@>: local playlist
%{public}@ (getquery) <%{public}@>: local title query
%{public}@ (getquery) <%{public}@>: local query
%{public}@ (getquery) <%{public}@>: no collections
%{public}@ (ulid) <%{public}@>: no collections
%{public}@ (ulid) <%{public}@>: collections: %lu
%{public}@ (query) <%{public}@>:  Unsupported identifier URL host: %@
%{public}@ (query) <%{public}@>: collections: %lu items: %lu
Warning, could not find local item for %{public}@
Set Music Influence (invoke) <%{public}@>: enabled %{BOOL}u
Set Music Influence (perform) <%{public}@>: Dry run: %d, previous music influence: %d, and music influence: %d
Set Music Influence (completion) <%{public}@>: notifying assistant %{public}@
Music Playback Imminent (invoke) <%{public}@>: invoked
Music Playback Imminent (completion) <%{public}@>: notifying assistant %{public}@
Music Playback Imminent (completion) <%{public}@>: done
Music Playback Imminent (perform) <%{public}@>: user identity %{private}@
Music Playback Imminent (perform) <%{public}@>: user identity encoding failed %{public}@
Music Playback Imminent (perform) <%{public}@>: notifying assistant %{public}@
Sync Handler (begin): anchor: %{private}@, validity: %{public}@
Sync Handler (enumeration): sync already ended
Sync Handler (validity): (libraryValidity:%{public}@ != siriValidity:%{public}@)
Sync Handler (validity): (db revision = %lli, anchor = %lli)
Sync Handler (validity): forced reset
Sync Handler (validity): media entity sync disabled - ignoring sync
Sync Handler (validity): media entity sync disabled - resetting
Sync Handler (enumeration): aborted
Sync Handler (enumeration): finished
Sync Handler (get): sync already ended
Sync Handler (get): media entity sync disabled - resetting anchor
Sync Handler (get): aborted
Sync Handler (get): revision %{public}@, pid %lld
Sync Handler (get): no title %{public}@
Sync Handler (get): not for Assistant %{public}@
Sync Handler (end): sync ended
Load Predefined Queue (invoke) <%{public}@>: media item type %{public}@%{public}@
Load Predefined Queue (completion) <%{public}@>: notifying assistant %{public}@
Load Predefined Queue (send) <%{public}@>: sending to local WHA destination
Load Predefined Queue (send) <%{public}@>: sending to destination %{public}@
Load Predefined Queue (radio) <%{public}@>: network conditions do not permit radio playback
Load Predefined Queue (radio) <%{public}@>: radio not available
Load Predefined Queue (radio) <%{public}@>: companion not available
Load Predefined Queue (radio) <%{public}@>: resuming playback
Load Predefined Queue (radio) <%{public}@>: no available destination
Load Predefined Queue (radio) <%{public}@>: still loading library (type %ld).
Load Predefined Queue (radio) <%{public}@>: empty library for (type %ld).
Load Predefined Queue (query) <%{public}@>: network conditions do not permit streaming
Load Predefined Queue (query) <%{public}@>: streaming not available
Load Predefined Queue (query) <%{public}@>: companion not available
Load Predefined Queue (query) <%{public}@>: companion will be used
Load Predefined Queue (query) <%{public}@>: streaming available
Load Predefined Queue (query) <%{public}@>: beginning playback (type %ld).
Load Predefined Queue (query) <%{public}@>: no available destination
Load Predefined Queue (query) <%{public}@>: still loading library (type %ld).
Load Predefined Queue (query) <%{public}@>: empty library for (type %ld).
Load Predefined Queue (query) <%{public}@>: unrecognized media (type %ld).
Dislikes Media Entity (invoke) <%{public}@>: invoked
Dislikes Media Entity (completion) <%{public}@>: notifying assistant %{public}@
Get Dynamite Client State (invoke) <%{public}@>: invoked
Get Dynamite Client State (completion) <%{public}@>: notifying assistant %{private}@
Get Now Playing Queue Details Remote (invoke) <%{public}@>: %lu UIDs, queue %{public}@, timeout %f
Get Now Playing Queue Details Remote (completion) <%{public}@>: notifying assistant %{public}@
Likes Media Entity (invoke) <%{public}@>: invoked
Likes Media Entity (completion) <%{public}@>: notifying assistant %{public}@
Increase Playback Speed (invoke) <%{public}@>: %lu UIDs
Increase Playback Speed (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Library (invoke) <%{public}@>: media items %{public}@
Add Media Items To Library (completion) <%{public}@>: notifying assistant %{public}@
Add Media Items To Library (extract) <%{public}@>: Unsupported origin for collection %{public}@
Add Media Items To Library (extract) <%{public}@>: Cannot add multiple items %{public}@
Add Media Items To Library (extract) <%{public}@>: Unsupported origin for entity %{public}@
Add Media Items To Library (companion) <%{public}@>: No adam IDs in %{public}@
Add Media Items To Library (cloud) <%{public}@>: Will add store item %lld
%{public}@ (cloud) <%{public}@>: Failed adding %lld. %{public}@
%{public}@ (cloud) <%{public}@>: Added %lld.
Add Media Entity To Acoustic ID History (invoke) <%{public}@>: adam ID %{public}@, affiliate ID %{public}@
Add Media Entity To Acoustic ID History (completion) <%{public}@>: notifying assistant %{public}@
Get Volume Level (invoke) <%{public}@>: %lu UIDs
Get Volume Level (completion) <%{public}@>: notifying assistant %{public}@
Add Media Entity To Wish List (invoke) <%{public}@>: adam ID %{public}@
Add Media Entity To Wish List (completion) <%{public}@>: notifying assistant %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/WatchListKit.framework/WatchListKit
softlink:r:path:/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
MPAssistantRateMediaEntity
MPAssistantStartPlayback
AFServiceCommand
NSObject
MPAssistantGetStateResponseRemote
MPAssistantAddMediaItemsToPlaylist
MPAssistantPausePlayback
MPAssistantGetState
MPAssistantSearch
MPAssistantSetShuffleMode
AssistantAdditions
MPAssistantDecreasePlaybackSpeed
MPAssistantSubscriptionStatusSyncHandler
AFSyncHandler
MPAssistantSetOutputSource
MPAssistantSetQueue
MPAssistantSetState
MPAssistantMoveOutputGroupToDevices
MPAssistantSetPlaybackSpeed
MPAssistantLoadQuickPlay
MPAssistantGetMusicInfluence
MPAdditions
MPAssistantSetRepeatMode
MPAssistantGeniusSummon
MPAssistantSkipToPreviousItem
MPAssistantAddMediaItemsToUpNextQueue
MPAssistantSeekToPlaybackPosition
MPAssistantCreateRadioStation
MPAssistantRemoveOutputDevicesFromGroup
MPAssistantSkipToNextItem
MPAssistantSetVolumeLevel
MPAssistantGetNowPlayingQueueDetails
MPAssistantAddOutputDevicesToGroup
MPAssistantSkipTimeInterval
MPAssistantStopPlayback
MPAssistantSetMusicInfluence
MPAssistantMusicPlaybackImminent
MPAssistantSyncHandler
MPAssistantLoadPredefinedQueue
MPAssistantDislikesMediaEntity
MPAssistantGetDynamiteClientState
MPAssistantGetNowPlayingQueueDetailsRemote
MPAssistantLikesMediaEntity
MPAssistantIncreasePlaybackSpeed
MPAssistantAddMediaItemsToLibrary
MPAssistantAddMediaEntityToAcousticIDHistory
MPAssistantGetVolumeLevel
MPAssistantAddMediaEntityToWishList
MPMediaItemQueryOnlyPlayableItems:withUserIdentity:plugin:hash:
DSID
_hasCollections
MPMediaGroupingForScheme
_stationDictionariesWithParent:
MPMediaItemRepresentationWithUserIdentity:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
SAMPCollectionRepresentationUsingIdentifierType:
audiobooksQuery
SAMPMediaEntityRepresentationUsingIdentifierType:
containsObject:
SAMPSearchPropertyForProperty:
dealloc
T@"NSDictionary",R,C,N
groupID
TQ,R
ic_DSID
URLWithString:
initWithSource:modelKind:block:
UUIDString
isProxy
_addItemsToCloudLibrary:
mediaCollection
_addMediaItemsToLibrarySupported
msv_firstWhere:
_addTrackToWishListWithStoreID:completion:
pauseDevicesByUID:withRefId:audioRoutingInfo:source:completion:
_appendItemsToCloudPlaylist:completion:
release
_assistantCollectionType
setAppBundleID:
_availability
setEntityLimit:
_clientState
setListeningToMusicApplication:
_completionGroup
setReleaseDate:
_countOfItems
setReleaseYear:
_createPlaybackQueueWithCollection:error:
setSingleGroup:
_decodedDeviceUIDs
setVolumeValue:
_discovery
stationStringID
_enumerateItemsUsingBlock:
userMonitorWithHomeIdentifiers:
_fetchCurrentRadioTrackInfoWithCompletion:
.cxx_destruct
JSONObjectWithData:options:error:
_requestAceHash
MPMediaItemCollectionRepresentationWithUserIdentity:plugin:hash:
_stationDictionaryForGenreName:
MP_WHAMetricsInfo
allKeys
SAMPCollectionRepresentationWithItemsUsingIdentifierType:
command
SAMPMediaItemRepresentationUsingIdentifierType:
cookies
T#,R
defaultTimeZone
T@"NSString",R,C
hashedRouteUIDs
ULIDPropertyForGroupingType:
initWithReason:
UTF8String
isInternalBuild
_abortSync
lastUpdatedDate
_addItemsToLocalLibrary:
msv_description
_addRadioTrackToWishListWithStoreID:stationHash:completion:
numberWithBool:
_appendItemToCloudPlaylist:completion:
predicateWithValue:forProperty:
_appendToPlaylistWithCompletion:
removeObserver:
_audiobooksByName:
setClientState:
_changeEnumerationSemaphore
setFeatureName:
_cloudController
setMaxConcurrentOperationCount:
_countOfCollections
setReleaseInfo:
_createLocalLibraryPlaybackQueueWithCollection:error:
setShuffleType:
_createStoreTracklistPlaybackQueueWithCollection:error:
setUseSections:
_deleteNextChange
setWithObjects:
_encoder
_extractAtomID
userTokenStatus
_isInsertionPositionSupported:origin:supportedCommands:
_isSagaAuthenticated
_itemsByTitle:mediaTypes:
_library
_nextChange
_notifyAssistantWithError:requestHash:completion:
_notifyAssistantWithString:requestHash:completion:
_originMapping
_perform
_perform:
_performAddMediaItemsWithCompletion:
_performMediaItemsSetQueueAsDryRun:completion:
_performMediaItemsSetQueueFromStoreIdentifiersAsDryRun:onlyPlayableItems:onlyLocalItems:completion:
_performRadioStationSetQueueAsDryRun:completion:
_performStoreItemsSetQueueAsDryRun:completion:
_performWithCompletion:
_performWithNowPlayingItem:audioRoutingInfo:completion:
_playAlbumFromMediaItems:contextID:dryRun:completion:
_playMediaItems:contextID:dryRun:completion:
_playlistsByDateCreatedOrder:
_playlistsByName:isGeniusMix:
_postAnchor
_prepare
_prependItemsToCloudPlaylist:completion:
_privateListeningEnabled
_radioStations
_requestCompanionToAddMediaItemsForOrigin:withCompletion:
_resetSync
_responseCollectionQueue
_resultProcessingSemaphore
_serviceHelper
_setOrderingDirectionMappings:
_setOrderingProperties:
_songCollectionsWithGroupingType:searchString:mediaTypes:
_stationDictionaryForGenreName:parent:
_stationWithName:
_syncValidity
_userIdentity
_validate
_widthLimitedOperationQueue
_workingRemoteResponse
absoluteString
aceId
acknowledgedExceedingVolumeLimit
actionType
activeAccount
activeUser
adamId
addCloudItemID:idType:
addFilterPredicate:
addObject:
addObjectsFromArray:
addOperationWithBlock:
addStoreItemWithAdamID:completionHandler:
addStoreItemWithAdamID:toPlaylistWithPersistentID:completionHandler:
adjustmentInMilliseconds
affiliateId
ageVerificationRequired
albumQueryByGroupingForSchemeWithUserIdentity:plugin:hash:
albumQueryForArtist
albumsQuery
allItems
allKeysForObject:
allUserStates
ams_isLocalAccount
anchor
appBundleID
appendItems:completion:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
assetInfo
assistantRadioGetAvailability:completion:
assistantStreamingGetAvailability:
autorelease
becomeActiveAndWaitUntilDone:
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithAnchor:validity:forKey:beginInfo:
beginSyncWithInfo:configuration:
boolValue
capabilities
class
cloudItemIDListForPlaylist:
cloudLibrarySyncStatus
clusterComposition
code
collections
compare:options:
conformsToProtocol:
connectToEndpoint:completion:
constraints
containsUID:
controllerWithUserIdentity:
copy
count
countByEnumeratingWithState:objects:count:
createRemotePlaybackQueue
currentDeviceInfo
currentEntityRevision
currentHandler
currentSyncSnapshot
currentThread
data
dataUsingEncoding:
date
debugDescription
decodeHashedRouteUIDs:completion:
defaultCenter
defaultIdentityStore
defaultManager
defaultMediaLibrary
defaultMediaPlaybackAppBundleIdentifier
defaultRadioLibrary
defaultUserState
deleteDatabaseProperty:
deletionType
description
designatedGroupLeader
deviceMediaLibraryWithUserIdentity:
dictionary
dictionaryWithObjects:forKeys:count:
discoverRemoteControlEndpointsMatchingUIDs:completion:
domain
doubleValue
dryRun
dsid
eligibleOffers
emptyIdentifierSet
encodeHashedRouteUIDs:completion:
encodeURLData:
entity
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:usingBlock:
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
expirationDate
featuredStations
fetchConfigurationWithCompletionHandler:
filterPredicates
firstObject
floatValue
getAgeVerificationStateWithCompletion:
getChangeAfterAnchor:changeInfo:
getConformingSharedUserIdForHomeUserId:completion:
getHomeUserIdForSharedUserId:completion:
getPropertiesForUserIdentity:completionHandler:
getRecentStationGroupsWithCompletionHandler:
getSAMPMediaItems:origin:completion:
groupingType
handleFailureInFunction:file:lineNumber:description:
hash
hashedRouteUID
homeUserIDs
homeUserIdentifiers
host
iTunesMatchSubscriptionStatus
ic_allStoreAccountsWithCompletion:
ic_homeUserIdentifiers
ic_privateListeningEnabledForHomeUsers
ic_sharedAccountStore
ic_storeAccountForHomeUserIdentifier:completion:
identifier
identifierURLScheme
identityKind
influencedSharedUserId
influencedUserSharedUserId
init
initWithBlock:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCapacity:
initWithContextID:query:
initWithContextID:storeItemIDs:collectionIdentifierSet:
initWithDictionary:
initWithEntities:entityType:
initWithErrorCode:
initWithFilterPredicates:
initWithFilterPredicates:library:
initWithIdentity:
initWithItems:
initWithLongLong:
initWithObjectsAndKeys:
initWithParentNodeID:
initWithPersistentID:
initWithRequestContext:
initWithRequestContext:platformMetadataItem:
initWithRequestContext:storeItemID:affiliateIdentifier:
initWithStoreRequestContext:
initWithUUIDString:
initWithUserInteractionLevel:
insertCloudItemID:idType:atIndex:
insertLocation
intValue
integerValue
isActive
isActiveLocker
isActiveUser
isCloudLibraryEnabled
isCurrentDeviceValidHomeAccessory
isEqual:
isEqualToNumber:
isEqualToString:
isExplicitContentAllowed
isExplicitItem
isKindOfClass:
isMatchEnabled
isMediaEntitySyncDisabled
isMemberOfClass:
isPrivateListeningEnabled
isPrivateListeningEnabledForCurrentAccessory
isPromotionRelatedStatus
itemWithStoreID:
items
itemsQuery
lastError
lastPathComponent
lastUpdateAttemptTime
length
libraryAuthTokenStatus
lightweightSubscriptionStatus
localizedDescription
localizedFailureReason
longLongValue
longValue
maxResults
mediaItemType
mediaItems
mediaPlayerOrderingDirection
mediaPlayerOrderingTerms
mediaPlayerSearchProperty
metricsContext
monitorForCurrentUser
msv_filter:
multiverseIdentifier
music
musicAccountSharedUserId
mutableCopy
name
nextItemCount
nowPlayingApplicationDestination
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectForKey:
objectForKeyedSubscript:
outputDeviceUIDs
outputDevices
path
performRequestWithCompletionHandler:
performRequestWithResponseHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithCompletion:
performWithCompletion:serviceHelper:
performWithCompletion:serviceHelper:executionInfo:
performWithResponseHandler:
persistentID
persistentIDPropertyForGroupingType:
playlist
playlistsQuery
positionInMilliseconds
predicateForProperty:
predicateMatchingPredicates:
predicateWithSearchString:forProperties:
preemptiveNowPlayingQueueDetailsTimeOut
preloadedUserSharedUserId
prepareForAudioHandoffWithCompletion:
previousItemCount
privateListeningEnabled
property
propertyForSAMPSearchProperty:
qualityOfService
query
queryQueueWithContextID:query:
queueDetails
radioQueueWithContextID:stationStringID:
rangeOfString:options:
rating
recommendationId
refId
removeObjectForKey:
repeatMode
replaceItems:completion:
representativeItem
requesterSharedUserId
resetWithValidity:
resolveWithHashedRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
respondsToSelector:
retain
retainCount
routeTimeout
scalingFactor
scheme
searchProperties
searchTypes
self
sendCommand:toDestination:withOptions:completion:
sendPlaybackQueue:toDestination:withOptions:completion:
sendQueue:toDestination:shouldResync:completion:
setActiveTvUser:
setAdamIdentifier:
setAgeVerificationRequired:
setAlbum:
setArtist:
setAuthenticationProvider:
setDate:
setDateAdded:
setDatePurchased:
setDefaultUserState:
setEditable:
setEligibleOffers:
setEpisodeNumber:
setErrorCode:
setExpirationDate:
setFilteringDisabled:
setFirstItem:
setGenre:
setGlobalPlaylistID:
setGroupingType:
setHashedGroupID:
setHashedRouteUIDs:
setHost:
setICloudMusicLibraryToggle:
setITunesMatchSubscriptionStatus:
setIdentifier:
setIdentity:
setIgnoreSystemFilterPredicates:
setInContextUsersStates:
setIsDelete:
setIsExplicit:
setIsPromotionRelatedStatus:
setItemIdentifiers:
setItems:
setLastPlayedDate:
setLastUpdateAttemptTime:
setListeningToItem:
setMediaLibrary:
setName:
setNextItems:
setObject:
setObject:forKey:
setObject:forKeyedSubscript:
setOrigin:
setPath:
setPersonalizationStyle:
setPlaybackInfo:
setPlaybackPositionMillis:
setPlayingInfoFromEndpoint:
setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler:
setPlays:
setPostAnchor:
setPreviousItems:
setPreviousValue:
setPrivateListeningEnabled:
setPrivateListeningEnabledForCurrentAccessory:
setQualityOfService:
setReason:
setRefId:
setRememberPlaybackPosition:
setRequestContext:
setResults:
setRouteResponse:
setRouteResponses:
setScheme:
setSeasonNumber:
setSetting:
setSharedUserId:
setShouldExcludeFromBackgroundRefresh:
setShouldImmediatelyStartPlayback:
setShouldIncludeNonLibraryEntities:
setShouldOverrideManuallyCuratedQueue:
setShouldShuffle:
setShowEpisodesCount:
setShowName:
setSiriAssetInfo:
setSiriRecommendationID:
setSiriWHAMetricsInfo:
setSortAlbum:
setSortArtist:
setSortTitle:
setSource:
setState:
setStatus:
setSubscriptionAdamID:
setSyncSharedUserId:
setTimeZoneId:
setTitle:
setUniversalStoreIdentifiersWithBlock:
setUserHistoryUnmodifiable:
setUserIdentity:
setUserToken:
setUserTokenStatus:
setValue:
setWithArray:
setWithObject:
setXpAbCookie:
shared
sharedInstance
sharedModel
sharedPreferences
sharedUserIdFromPlayableMusicAccount
shortDebugName
shouldExcludeFromBackgroundRefresh
shouldOverrideManuallyCuratedUpNext
shouldShuffle
shuffleMode
songsQuery
sortDescriptorWithKey:ascending:
sortTitlePropertyForGroupingType:
sortedArrayUsingDescriptors:
speakerSharedUserId
specificAccountWithDSID:
standardUserDefaults
startPlaying
startWithCompletionHandler:
stationUrl
stations
status
statusType
storeTracklistQueueWithContextID:storeItemIDs:collectionIdentifierSet:
storedConfiguration
string
stringByAppendingFormat:
stringByAppendingString:
stringValue
stringWithFormat:
stringWithUTF8String:
subscriptionStatus
substringFromIndex:
substringToIndex:
superclass
supportsMultipleITunesAccounts
syncDidEnd
syncSharedUserId
syncSnapshotForKey:
syncVerificationKeyForKey:
systemMediaApplicationDestination
timeIntervalSince1970
timeIntervalSinceNow
timeIntervalSinceReferenceDate
title
titlePropertyForGroupingType:
toggle
token
tokenResult
uniqueObjectIdentifier
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
userHistoryUnmodifiable
userMonitorWithHomeIdentifier:
userStations
userToken
usesListeningHistory
value
valueForDatabaseProperty:
valueForKeyPath:
valueForProperty:
valuesForProperties:
volumeValue
xpAbCookie
xpab
zone
v24@0:8@?16
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@?16@24
v40@0:8@?16@24@32
@24@0:8@16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
v40@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24@"AFCommandExecutionInfo"32
@24@0:8@"NSDictionary"16
v24@0:8^v16
@"NSDictionary"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"MPCAssistantEncodings"
v40@0:8@16@24@?32
v32@0:8@16@?24
@"ICUserIdentity"
@"MPCloudController"
@32@0:8@16q24
@28@0:8@16B24
@40@0:8q16@24q32
@24@0:8Q16
@32@0:8@16Q24
@24@0:8q16
v48@0:8@16@24@32@40
v56@0:8@16@24q32@40@48
v64@0:8@16@24q32@40@48@56
v32@0:8@16@24
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
@"SADynamiteClientState"
q16@0:8
v28@0:8B16@?20
v36@0:8B16B20B24@?28
v44@0:8@16@24B32@?36
@"<AFServiceHelper>"
@"MPCAssistantAvailability"
@"NSNumber"
@"MPCAssistantCommand"
@32@0:8@16^@24
B36@0:8i16^v20^{__CFArray=}28
@"MPCAssistantDiscovery"
v48@0:8{?=qq}16^v32@?40
@40@0:8@16@24@32
@44@0:8B16@20@28@36
@"MPMediaLibrary"
@"NSObject<OS_dispatch_semaphore>"
@"_MPMediaLibraryEntityChange"
v36@0:8@16{?=BBBB}24@?28
v32@0:8^v16@?24
v32@0:8Q16@?24
v40@0:8Q16@24@?32
