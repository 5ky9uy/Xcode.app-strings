com.apple.springboardservices.eventobserver.internalSBSEventObserverEventDimmed
v8@?0
SBStatusBarReturnToHearingAidNotification
HearingAidUIClient
HearingAidUIServer
SBLockScreenManager
sharedInstanceIfExists
isUILocked
shouldShow
result
v24@?0@"NSDictionary"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
shouldIgnoreRouteChanges
TB,N,V_shouldIgnoreRouteChanges
isShowingHearingAidControl
TB,N,VisShowingHearingAidControl
hearingAidIsConnected
TB,N,V_hearingAidIsConnected
holdingMediaForConnection
TB,N,V_holdingMediaForConnection
holdingPhoneForConnection
TB,N,V_holdingPhoneForConnection
preferredRoute
T@"NSDictionary",&,N,V_preferredRoute
preferredRouteTimer
T@"NSTimer",&,N,V_preferredRouteTimer
mediaUpdateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaUpdateQueue
SBReachabilityManager
SBPrototypeController
sharedInstance
rootSettings
SBReachabilityDomain
SBReachabilitySettings
animationSettings
yOffsetFactor
SBFFluidBehaviorSettings
trackingDampingRatio
dampingRatio
trackingResponse
response
trackingRetargetImpulse
retargetImpulse
reachabilityEnabled
reachabilityModeActive
_notifyObserversReachabilityModeActive:
_setKeepAliveTimer
enabled
offset
Accessibility
SBMainWorkspace
_instanceIfExists
SBBacklightController
SBUIController
_lockScreenEnvironment
SBApplicationController
SHAKE_TO_ENABLE
AXSBServerOrientationChange
activeInterfaceOrientation
UITableViewTexture.png
ask.sheet.option.VoiceOver.on
activate-arrow
SWIPE_TO_ENABLE
delegate
T@"<AXSBVoiceOverSwipeDetectorDelegate>",W,N,V_delegate
CSScrollGestureController
setScrollingStrategy:
scrollingStrategy
AccessibilityDisableIdleTimer
SBOrientationLockChangedNotification
SBMediaNowPlayingChangedNotification
_UIAlertControllerActionView
UIAlertController
UIWindow
SBBulletinWindowController
SBVolumeControl
SBHUDController
UIApplication
SpringBoard
SBControlCenterController
SBApplication
SBRestartManager
UIScreen
SBMainDisplaySceneManager
buttonIndex
Tq,N,VbuttonIndex
rootViewController
_canDismissWithGestureRecognizer
IsTripleClick
action
UIAlertAction
title
_preferredFocusedWindow
_userInterfaceStyleArbiterStyleChanged:
B16@?0@"AXValidationManager"8
SBTelephonyManager
SBConferenceManager
UIApplicationRotationFollowingWindow
UIApplicationRotationFollowingController
inCallTransientOverlayManager
ringerControl
updateFrontMostApplicationEventPort
SBInCallTransientOverlayManager
presentTransientOverlay
SBRingerControl
isRingerMuted
_reachabilityModeActive
SBAssistantController
isVisible
SBMediaController
SBOrientationLockManager
sharedTelephonyManagerCreatingIfNecessary:
SBMainSwitcherViewController
SBSystemGestureManager
isGestureWithTypeAllowed:
mainDisplayManager
SBVoiceControlController
handleHomeButtonHeld
_mainContentViewController
UIViewController<SBSwitcherContentViewControlling>
SBFluidSwitcherViewController
isClassic
_classicMode
isInsetForHomeAffordance
CSPageViewController
view
SBDefaults
localDefaults
coverSheetViewController
CSCoverSheetViewController
coverSheetView
activatePage:animated:withCompletion:
_indexOfMainPage
suppressesControlCenter
_allowedPageViewControllers
CSCoverSheetView
scrollView
SBFPagedScrollView
currentPageIndex
SBApplicationProcessState
_updateProcess:withState:
taskState
visibility
_internalProcessState
lockUIFromSource:withOptions:
_authenticationStateChanged:
SBIdleTimerGlobalCoordinator
resetIdleTimer
acquireIdleTimerDisableAssertionForReason:
shouldTurnOnScreenForBacklightSource:
setBacklightFactor:source:
CSCombinedListViewController
notificationStructuredListViewControllerShouldAllowNotificationHistoryReveal:
_notificationDispatcher
SBNCNotificationDispatcher
_bannerDestination
SBNotificationBannerDestination
presentedBanner
NCNotificationLongLookViewController
_scrollView
NCNotificationShortLookViewController
isPresentingBanner
activateMainSwitcherNoninteractivelyWithSource:animated:
SBSceneManagerCoordinator
mainDisplaySceneManager
policyAggregator
SBMainDisplayPolicyAggregator
allowsCapability:
SBMainDisplaySceneLayoutViewController
_statusBarView
SBMainDisplaySceneLayoutStatusBarView
dismissAssistantViewIfNecessary
SBSceneManager
sceneLayoutViewController
lockOutController
SBFDeviceLockOutController
isLockedOut
isPlaying
nowPlayingApplication
bundleIdentifier
isUserLocked
lock
unlock
_frontMostAppOrientation
addActiveOrientationObserver:
applicationOpenURL:
removeActiveOrientationObserver:
_toggleSearch
_setRotatableViewOrientation:duration:force:
_effectiveVolumeChanged:
_presentVolumeHUDWithVolume:
SBLockScreenCallHandling
isMakingEmergencyCall
SBLockScreenPasscodeViewPresenting
isPasscodeLockVisible
SBLockScreenEnvironment
passcodeViewPresenter
SBLockScreenViewControllerBase
dismissMainSwitcherNoninteractivelyAnimated:
dismissAllSwitchersNoninteractivelyAnimated:
allowShowTransition
allowShowTransitionSystemGesture
inCall
isEndpointOnCurrentDevice
applicationWithPid:
inFaceTime
presentAnimated:
applicationWithBundleIdentifier:
toggleReachability
setReachabilityEnabled:
_activateApplicationFromAccessibility:
SBAppLayout
homeScreenAppLayout
visibleItemContainers
layoutContext
SBRotationLockHUDViewController
SBVolumeHUDViewController
_presentHUD:animated:
unlockUIFromSource:withOptions:
SBLockScreenUnlockRequest
setName:
setSource:
setIntent:
unlockWithRequest:completion:
handleAction:fromSender:
CSAction
actionWithType:
_scrollGestureController
isPasscodeEntryTransientOverlayVisible
SBIconController
floatingDockController
SBCoverSheetPresentationManager
_coverSheetSlidingViewController
SBCoverSheetSlidingViewController
systemGesturesDelegate
SBCoverSheetSystemGesturesDelegate
gestureRecognizerShouldBegin:
presentGestureRecognizer
dismissGestureRecognizer
setCoverSheetPresented:animated:withCompletion:
coverSheetSlidingViewControllerIfLoaded
UIViewController
_appearState
CSMainPageContentViewController
mainPageContentViewController
combinedListViewController
NCNotificationListSectionRevealHintView
revealHintTitle
_structuredListViewController
NCNotificationStructuredListViewController
revealNotificationHistory:animated:
masterList
NCNotificationMasterList
isNotificationHistoryRevealed
_listPresentingContent
_allowNotificationsRevealPolicy
isDndDrivingModeActive
noteMenuButtonDoublePress
SBMainScreenActiveInterfaceOrientationWindow
SBSecureMainScreenActiveInterfaceOrientationWindow
initWithDebugName:
sb_setRootViewController:
isShowingHomescreen
setHighlighted:
isPresented
iconManager
SBHIconManager
isIconDragging
isAnyTouchGestureRunning
_screenCapturer
SSScreenCapturer
_serviceWindow
SSScreenshotsWindow
_hostViewControllerIfExists
PLExpandedPlatterView
interfaceActions
SBDeviceApplicationSceneHandle
sceneIdentityForApplication:
fetchOrCreateApplicationSceneHandleForApplication:withIdentity:
bestSnapshotWithImageName:sceneHandle:variantID:scale:size:contentTypeMask:statusBarStateMask:launchingOrientation:contentOverridesContext:userInterfaceStyle:displayEdgeInfo:
{CGSize=dd}
displayEdgeInfoForForLayoutEnvironment:classicMode:isInsetForHomeAffordance:
SBSpotlightMultiplexingViewController
sharedRemoteSearchViewController
SPUIRemoteSearchViewController
revealProgress
AXSpringBoardServerHelper
v16@?0@"AXValidationManager"8
AXSB_UIScreenSafeCategory
AXSB_UIAlertControllerActionViewSafeCategory
AXSB_UIAlertControllerSafeCategory
AXSBServerHelperBulletinWindowController
AXSBUIWindow
AXSBServerHelperSBControlCenterController
AXSBServerVolumeControl
AXSBServerSBHUDController
AXSBServerUIApplication
AXSpringBoardAccessibility
AXSBLockScreenManager
AXSBReachabilityManagerAccessibility
AXSBHomeHardwareButtonActions
AXSB_SBApplicationSafeCategory
AXSB_SBRestartManagerSafeCategory
AXSBDeviceApplicationSceneStatusBarBreadcrumbProviderAccessibility
AXCSScrollGestureControllerAccessibility
AXSB_SBMainDisplaySceneManagerSafeCategory
AX_AX_SBSecureMainScreenActiveInterfaceOrientationWindowOverride
APUIShortLookViewController
_presentableViewController
APUILongLookViewController<PLClickPresentationInteractionPresentable>
APUILongLookViewController
expandedPlatterView
AppPredictionUI
AX_SBSecureMainScreenActiveInterfaceOrientationWindow
com.apple.mobile.SubstantialTransition
v16@?0@"NSNotification"8
AXVisualAlertEvent
bundleId
visualAlertType
AXVisualAlertEventEnded
SBSyncController
SBWallpaperController
Incoming call: %@
Incoming call?: %{public}@
Call status (Before answering call): %lu
Answering call
Call status (After answering call): %lu
Existing calls: %@
Existing call count: %lu
Call status (Before disconnecting call) : %lu
Disconnecting call
Call status (After disconnecting call) : %lu
SBVoiceControlViewController
B16@?0@8
SBUseHardwareSwitchAsOrientationLock
prefs:root=ACCESSIBILITY&path=TOUCH_REACHABILITY_TITLE/AIR_TOUCH_TITLE/CreateCustomGesture
prefs:root=ACCESSIBILITY&path=ScannerSwitchTitle/CustomGesturesIdentifier/CreateCustomGesture
prefs:root=ACCESSIBILITY&path=CommandAndControlTitle
prefs:root=ACCESSIBILITY&path=CommandAndControlTitle/CUSTOMIZE_COMMANDS
prefs:root=ACCESSIBILITY&path=CommandAndControlTitle/VOCABULARY
screenIsOn
callController
com.apple.WebKit.WebContent
v12@?0C8
v12@?0i8
_allowGestureRecognizers
isFloatingDockFullyPresented
isPresentingFolder
isAnySwitcherVisible
isInUse
model
allApplications
displayName
isInternalApplication
Trying to unlock with intent %d: unlock request did not respond to %s
Accessibility screen unlock
v12@?0B8
NotImplemented
showSpeechPlaybackControls not implemented
Retried media pause, %@
success
fail
Media Pause command %@
Retried media play, %@
Media Play command %@
incomingCallExists
outgoingCallExists
GAXSpringboard
isActive
expected SBUIController to respond to _activateApplicationFromAccessibility: %@
SOS: triggering SOS
SBSuspendSnapshot
downscaled
v16@?0q8
NCNotificationViewController
_accessibilityAllowsShowNotificationsGestureFromThreeFingerSwipe
notification.center.showing
AXSBAllowShowNotificationGesture
IsAXActivating
com.apple.purplebuddy
v32@?0@8Q16^B24
q24@?0@8@16
ordering options: %@
ask.sheet.title
v16@?0@"UIAlertAction"8
ask.sheet.option.cancel
windowContextID
Could not find the class for SBSecureMainScreenActiveInterfaceOrientationWindow. We need this class in order to handle rotation properly (rdar://problem/20780193)
Could not find the class for UIApplicationRotationFollowingController. We need this class in order to handle rotation properly (rdar://problem/20780193)
AccessibilityShortcut
sb_rootViewController
_accessibilityObjectWithinProximity
ZoomConflictMessage
ZoomConflictTitle
Accessibility-j3xx
TripleClickMessage
TripleClickEnableTitle
cancel
enable
USAGE_CONFIRMED_TITLE
VoiceOver.confirmation.message.format
voiceover.home.gesture.alert.title
voiceover.home.gesture.alert.message
vo.disallow.usb.restricted.mode.alert.message_IPOD
vo.disallow.usb.restricted.mode.alert.message_IPAD
vo.disallow.usb.restricted.mode.alert.message_IPHONE
.informativeOnly
vo.disallow.usb.restricted.mode.alert.title
sc.disallow.usb.restricted.mode.alert.message_IPOD
sc.disallow.usb.restricted.mode.alert.message_IPAD
sc.disallow.usb.restricted.mode.alert.message_IPHONE
sc.disallow.usb.restricted.mode.alert.title
SWITCH_USAGE_CONFIRMED_MESSAGE
TURN_OFF_SC_ALERT_MESSAGE
TURN_OFF_FKA_ALERT_MESSAGE
TOUCH_ACCOMMODATIONS_USAGE_CONFIRMED_MESSAGE
broken.home.button.title
broken.home.button.message
enable.zoom.purple.buddy.title
enable.zoom.purple.buddy.message
REBOOT_ALERT_MESSAGE_IPHONE
REBOOT_ALERT_MESSAGE_IPAD
REBOOT_ALERT_MESSAGE_IPOD
REBOOT_ALERT_CONFIRM
sideAppManager
T@"AXSpringBoardServerSideAppManager",R,N
alertManager
T@"AXSpringBoardServerAlertManager",&,N,V_alertManager
presentationWindow
T@"UIWindow",&,N,V_presentationWindow
dimTimerAssertion
T@"<BSInvalidatable>",&,N,V_dimTimerAssertion
disableSystemGesturesAssertionForAlert
T@"AXAssertion",&,N,V_disableSystemGesturesAssertionForAlert
hudViewController
initializeAndRunStartupTransition:
v16@?0@"BSTransaction"8
v24@?0@"BSTransactionBlockObserver"8@16
PKPassLibrary
/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
### Failed to Soft Linked: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
SOSManager
/System/Library/PrivateFrameworks/SOS.framework/SOS
### Failed to Soft Linked: /System/Library/PrivateFrameworks/SOS.framework/SOS
SBDeviceApplicationSceneStatusBarBreadcrumbProvider
SBWorkspaceApplicationSceneTransitionContext
_shouldAddBreadcrumbToActivatingSceneEntity:sceneHandle:withTransitionContext:
applicationSceneEntityForLayoutRole:
previousApplicationSceneEntityForLayoutRole:
SBWorkspaceTransitionContext
request
SBMainWorkspaceTransitionRequest
source
isMainWorkspaceTransitionRequest
SBApplicationSceneEntity
application
SBHomeHardwareButtonActions
performSinglePressUpActions
parentViewController
T@"AXSiriShortcutsViewController",W,N,V_parentViewController
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2771.9/AccessibilityUmbrellaFramework/Frameworks/AXSpringBoardServerInstance/Source/AXSiriShortcutsViewController.m
-[AXSiriShortcutsViewController initWithCoder:]
Should use initWithShortcutIdentifier:...
-[AXSiriShortcutsViewController initWithNibName:bundle:]
shortLookViewController
T@"APUIShortLookViewController",&,N,V_shortLookViewController
T@"<AXSiriShortcutsViewControllerDelegate>",W,N,V_delegate
/System/Library/PrivateFrameworks/AppPredictionUI.framework/AppPredictionUI
AXSpringBoardServerInstanceDidInitializeNotification
AXCaptionPanelContextDidChangeNotification
SBFaceTimeStateChangedNotification
identifier
T@"NSString",C,N,V_identifier
type
T@"NSString",C,N,V_type
sb-ax-action-queue
payload
Error sending SpringBoard action: %@
Error sending reachability toggled message: %@
B32@?0@"AXIPCClient"8Q16^B24
B32@?0@8Q16^B24
Proximity Changed triggering an audio route change
%s:%d %@
-[_AXSpringBoardServerInstance _proximityDidChange:]
Speaker
Receiver
HeadphonesBT
HeadsetBT
CarAudioOutput
BluetoothLEOutput
Headset
Headphone
LineOut
v32@?0@"NSDictionary"8Q16^B24
Hearing aids paired. Skipping call route
-[_AXSpringBoardServerInstance _setCallRoute:ifCurrentlyRoutedTo:]
Changing route to %@
-[_AXSpringBoardServerInstance _setAVCallRoute:]
You shouldn't have called me
_hasFinishedLaunching
SpringBoard is not done booting. Waiting for notification to start AXSB server.
MPAVRoutingControllerDidPickRouteNotification
PrimaryUsagePage
PrimaryUsage
v20@?0I8@"NSString"12
error starting AX SB IPC server: %@
RBSProcessEverythingPredicate
everythingPredicate
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
hostIdentity
embeddedApplicationIdentifier
com.apple.accessibility.voiceover
com.apple.commandandcontrol
com.apple.private.allow-explicit-graphics-priority
com.apple.accessibility.physicalinteraction.client
com.apple.assistivetouch.daemon
com.apple.fullkeyboardaccess
com.apple.accessibility.AccessibilityUIServer
com.apple.accessibility.axctl
com.apple.accessibility.automation.client
com.apple.accessibility.api
com.apple.CoreRoutine.preferences
com.apple.hearingaids
com.apple.voiceservices.tts.customvoice
com.apple.accessibility.AXSettingsShortcuts
com.apple.accessibility.AXSBServer.assertions
com.apple.private.kernel.jetsam
com.apple.AXUIViewService
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2771.9/AccessibilityUmbrellaFramework/Frameworks/AXSpringBoardServerInstance/Source/AXSpringBoardServerInstance.m
-[_AXSpringBoardServerInstance acquireAssertionWithType:identifier:clientPort:]
Should have a list of assertion pairs here, not nil!
B32@?0@"AXAssertionIdentifierTypePair"8Q16^B24
_takeScreenshotAndEdit:
_accessibilitySetSystemGesturesDisabledByAccessibility:
_isSpringBoardShowingAnAlert
lockScreenEnvironment
applicationHoster
SBApplicationHosting
hostedAppSceneHandle
SBApplicationSceneHandle
processState
SiriPresentationSpringBoardMainScreenViewController
SiriPresentationViewController
siriViewController
AFUISiriViewController
FBScene
FBApplicationProcess
FBProcessManager
FBSceneManager
FBProcess
_state
FBProcessState
systemApplicationProcess
isForeground
clientProcess
display
settings
enumerateScenesWithBlock:
FBSSceneSettings
frame
{CGRect={CGPoint=dd}{CGSize=dd}}
level
isOccluded
transientOverlayPresentationManager
SBTransientOverlayPresentationManager
hasActivePresentation
RBSProcessIdentity
AXSpringBoardServerInstance
GAX-BB
-[_AXSpringBoardServerInstance _setupAssertionServerIfNeeded]_block_invoke
AXSpringBoardServer did not understand assertion type: %@
v16@?0@"NSString"8
reenabling dashboard system gestures
disabling dashboard system gestures
orientation
alertType
data
remoteViewType
screenLocked
passcode
lockScreenEnvironment.applicationHoster.hostedAppSceneHandle.application.processState
register
locked
active
cancelEnabled
isMainSwitcherVisible
visible
contextId
record
show
string
query
excludeSiri
gesture
mode
bundleID
splashData
assertionServer
T@"_AXAssertionServer",&,N,V_assertionServer
disableNotificationCenterAssertionHeld
TB,N,V_disableNotificationCenterAssertionHeld
disableControlCenterAssertionHeld
TB,N,V_disableControlCenterAssertionHeld
T@"<AXSpringBoardServerInstanceDelegate>",W,N,V_delegate
Auto-answering incoming call: %{public}@ , with status: %d
Auto Answer pref val is %{public}@ - call count is %lu, incoming call: %{public}@ , incoming video call: %{public}@
Error opening device: %d
void safeDecrementRef(mach_port_t)
%s: Failure deallocating right %llx: %d! This probably means there is a port right overrelease somewhere!
safeDecrementRef
handlesByService
T@"NSMutableDictionary",&,N,V_handlesByService
TripleClickAskWindow
_highlighted
sendEvent:
TripleClickTitle
selected
__AXStringForVariablesSentinel
stopping speak for TC menu
speaking TC menu item: %@
AXDispatchTimer
TripleClickSpeakWaited
SBPlatformController
medusaCapabilities
SBSceneLayoutViewController
externalForegroundApplicationSceneHandles
mainDisplaySceneLayoutViewController
layoutState
sceneManager
SBApplicationSceneHandleProviding
SBApplicationSceneIdentityProviding
newSceneIdentityForApplication:
SBLayoutState
elementWithRole:
SBMainDisplayLayoutState
spaceConfiguration
floatingConfiguration
unlockedEnvironmentMode
_floatingContentViewController
_floatingAppLayouts
NSArray
_currentFloatingAppLayout
_configureRequest:forSwitcherTransitionRequest:withEventLabel:
SBSwitcherTransitionRequest
requestForActivatingAppLayout:
SBWorkspace
mainWorkspace
requestTransitionWithOptions:builder:validator:
SBWorkspaceTransitionRequest
modifyApplicationContext:
setEntity:forLayoutRole:
setRequestedSpaceConfiguration:
setRequestedFloatingConfiguration:
SBWorkspaceEntity
SBEmptyWorkspaceEntity
SBPreviousWorkspaceEntity
entity
entityWithPreviousLayoutRole:
applicationSceneEntity
isMedusaCapable
info
SBDeviceApplicationSceneEntity
initWithApplicationForMainDisplay:
initWithApplicationSceneHandle:
FBSApplicationInfo
supportsMultiwindow
SBLayoutElement
layoutAttributes
workspaceEntity
SBIconView
icon
iconManager:launchIconForIconView:
SBIcon
applicationBundleID
AXSpringBoardServerHelperSideAppManager
AXSB_SBIconControllerSafeCategory
shouldAllowMedusaGestures
v24@?0@8q16
Tried to perform invalid side app gesture: %lu.  Allowed gestures: %@
currentLayoutState
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2771.9/AccessibilityUmbrellaFramework/Frameworks/AXSpringBoardServerInstance/Source/AXSpringBoardServerSideAppManager.m
-[AXSpringBoardServerSideAppManager _endDockIconActivationModeAfterTimeout]
Should not have tried to end dock icon activation mode if it was set to default.
ProgrammaticSwitchFloatingAppGestureMoveToRight
v16@?0@"<SBMainWorkspaceTransitionMethods>"8
v16@?0@8
isInDock
T@"<AXSpringBoardServerSideAppManagerDelegate>",W,N,V_delegate
dockIconActivationMode
TQ,N,V_dockIconActivationMode
Setting screen contrast to %.0f on display %@
/System/Library/AccessibilityBundles/VisualAlerts.bundle
AX: Update SB Server(%d, %lu) {{ Internal Logging }}
Could not read the login session note: %@
Could not property deserialize note as a plist: %@
v24@?0@"NSError"8@"NSData"16
Enabling resting unlock because AST was on and we had never set this before
v16@?0B8B12
AX: Registering for SBAX server launch {{ Internal Logging }}
AccessibilitySettingsLoaderDidUpdateSettings
AXAssetClient-hearingaidmodule
AXAssetAndDataServer
AXUltronClient-sb
AXUltronServerPlugin
_restartManager
rebootForReason:
AXSpringBoardSettingsLoader
Registering for home button errors
IOProviderClass
IOGeneralInterest
AXBrokenHomeButtonAlreadyRebootedOnce
Setting flag that we already rebooted one time
com.apple.accessibility.sshb.failure.reboot
Home button detected as broken, rebooting gracefully
MESA FAILURE: Home button broke, rebooting
AST already running, no need to enable again
Switch Control already running, no need to enable again
Starting AST in repair incarnation mode
AppleSPUHIDDevice
button-err-state
Found device with button err state %d
Home button error state : %d (check type initial: %d), graceful reboot status? %d
AST Button failure mode: new count: %d
com.apple.accessibility.sshb.failure.assistivetouch.mode
AST is on in repair mode, turning off. No more error state
AST setting failure mode log: %d
Jq+xaurJgFzSwxOfTqtBGw
Did get profile changed notification from MC:%@. Will check to see if GAX should be loaded
com.apple.accessibility.remote
VOWORK: Registering for remote network update
VOWORK: HIDE ENABLER %@
VOWORK: SWIPE GO AWAY: %@
VOWORK: window is gone
%@/%@
/System/Library/CoreServices/VoiceOverTouch.app
Sounds/FolderClosed.aiff
Sounds/FolderOpened.aiff
VOWORK: start frame: %@
VOWORK: reachability changed, isReachable: %d
VOWORK: force registration again: %d
configuration.apple.com
VOWORK: register for reachability changed %@
com.apple.springboard
com.apple.iapd.videoout.SettingsChanged
Button message handler: %d
AppleSPUHIDDevice property change
DeviceUsagePairs
DeviceUsagePage
DeviceUsage
333333
?333333
Could not find SBSecureMainScreenActiveInterfaceOrientationWindow
Could not make dynamic subclass for SBSecureMainScreenActiveInterfaceOrientationWindow
%{public}@
reachability state same as desired change, doing nothing
toggle NC: will show %d
NC center is visible: %d
CS is visible: %d
Can't toggle dock. GAX is active.
Performing shortcut: %@ %@
Not showing CoverSheet because system gesture delegate said no: %@
Showing CoverSheet and revealing more notifications
Revealing more recent notifications
Not revealing more recent notifications
Not hiding CS because system gesture delegate said no: %@
trying to hide recent notifications
Hiding CS with completion
GAX active or generally not allowed
BB window allows: %d
Show CC: %d
Show CC: Gesture manager said not generally allowed
Show CC: No because GA is active
Show CC: UI is locked, generally allowed: %d, ccAllows: %d
Show CC: controller allows transition: %d
Show CC: Allow transition: %d %{public}@
Show CC: Presenting CC
Show CC: Dismiss CC
Trying to automatically perform shortcut: %@
%{public}s
SB aquired assertion: %@, %@
SB relinquished assertion: %@, %@
System gestures enabled: %d
Could not connect client for registering SpringBoard action handler: %{public}@
Error: %@
Activating remote alert service: %@, class: %@
withData: %@
Hiding remote alert service: %@
Remote alert handle did activate: %@
Remote alert handle did deactivate: %@
Remote alert handle did invalidate: %@
Remote alert handle did invalidate with error: %@
Attempting to perform invalid gesture: %ld
Triple click buddy still in settings, need to remove
Trying to turn on hearing aid module: %d
Ultron client interrupted, restart: %d
Support enabled, messaging plugion: %d
whitelistedApps (%{public}@) or appSelfLockIDs (%{public}@) exist. WIll enable GAX (Single App Mode) now
whitelistedApps and appSelfLockIDs both nil.  No need to enable GAX (Single App Mode)
Initializing AXSpeechAssetMonitorHelper so that we check for assets if we need to.
AXSBHearingAidDeviceController
AXUIClientDelegate
NSObject
AXHAServerDelegate
AXHeardServerDelegate
__AXSBReachabilityManagerAccessibility_super
SafeCategory
AXSBReachabilityManagerAccessibility
AXSBVoiceOverShakeMessage
AXSBVoiceOverSwipeDetectorView
__AXCSScrollGestureControllerAccessibility_super
AXCSScrollGestureControllerAccessibility
AXSecureWindow
__AXSB_UIAlertControllerActionViewSafeCategory_super
__AXSB_UIAlertControllerSafeCategory_super
__AXSBUIWindow_super
__AXSBServerHelperBulletinWindowController_super
__AXSBServerVolumeControl_super
__AXSBServerSBHUDController_super
__AXSBServerUIApplication_super
__AXSpringBoardAccessibility_super
__AXSBLockScreenManager_super
__AXSBServerHelperSBControlCenterController_super
__AXSB_SBApplicationSafeCategory_super
__AXSB_SBRestartManagerSafeCategory_super
__AXSB_UIScreenSafeCategory_super
__AXSB_SBMainDisplaySceneManagerSafeCategory_super
AXTripleClickAlertController
AXAlertAction
AXTripleClickTableViewCell
AXSB_UIAlertControllerSafeCategory
AXSB_UIAlertControllerActionViewSafeCategory
AXSB_UIScreenSafeCategory
AXSB_SBMainDisplaySceneManagerSafeCategory
AXSpringBoardServerHelper
AXSpringBoardServerSideAppManagerDelegate
AXSiriShortcutsViewControllerDelegate
AXSpringBoardServerInstanceDelegate
AXSBLockScreenManager
AXSpringBoardAccessibility
AXSBServerUIApplication
AXSBUIWindow
AXSBServerHelperSBControlCenterController
AXSBServerHelperBulletinWindowController
AXSBServerSBHUDController
AXSBServerVolumeControl
AXSB_SBApplicationSafeCategory
AXSB_SBRestartManagerSafeCategory
__AXSBDeviceApplicationSceneStatusBarBreadcrumbProviderAccessibility_super
AXSBDeviceApplicationSceneStatusBarBreadcrumbProviderAccessibility
__AXSBHomeHardwareButtonActions_super
AXSBHomeHardwareButtonActions
AXSiriShortcutsViewControllerView
AXSiriShortcutsViewController
APUIShortLookViewControllerDelegate
AXAssertionIdentifierTypePair
_AXSpringBoardServerInstance
AXSpringBoardServerAlertManager
SBSRemoteAlertHandleObserver
AXViewServiceHandler
__AX_AX_SBSecureMainScreenActiveInterfaceOrientationWindowOverride_super
AX_AX_SBSecureMainScreenActiveInterfaceOrientationWindowOverride
__AXSpringBoardServerSideAppManager
AXSpringBoardServerSideAppManager
__AXSB_SBIconControllerSafeCategory_super
AXSB_SBIconControllerSafeCategory
AXSpringBoardSettingsLoader
AXSBVoiceOverSwipeDetectorDelegate
AVSpeechSynthesizerDelegate
init
defaultCenter
liveListenStatusBarActivated:
addObserver:selector:name:object:
removeObserver:
dealloc
sharedInstance
startServerWithDelegate:
initWithIdentifier:serviceBundleName:
setDelegate:
isScreenLocked
showHearingAidControl:
safeValueForKey:
safeBoolForKey:
allowHearingAidControlOnLockScreen
server
isControlCenterVisible
showControlCenter:
hearingUIClient
numberWithBool:
dictionaryWithObject:forKey:
backgroundAccessQueue
valueForKey:
boolValue
setIsShowingHearingAidControl:
isShowingHearingAidControl
setLockScreenDimTimerEnabled:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
pairedHearingAids
setHearingAidControlIsVisible:
sharedController
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
hearingServerDidDie:
hearingAidConnectionDidChange:
startServer
_lockStateChanged
.cxx_destruct
shouldIgnoreRouteChanges
setShouldIgnoreRouteChanges:
hearingAidIsConnected
setHearingAidIsConnected:
holdingMediaForConnection
setHoldingMediaForConnection:
holdingPhoneForConnection
setHoldingPhoneForConnection:
preferredRoute
setPreferredRoute:
preferredRouteTimer
setPreferredRouteTimer:
mediaUpdateQueue
setMediaUpdateQueue:
_routeChangedTime
_shouldIgnoreRouteChanges
_hearingAidIsConnected
_holdingMediaForConnection
_holdingPhoneForConnection
_preferredRoute
_preferredRouteTimer
_mediaUpdateQueue
safeCategoryTargetClassName
safeCategoryBaseClass
validateClass:
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
_notifyObserversReachabilityModeActive:
_axReachabilityEnabled
springBoardServerInstance
shouldSendReachabilityToggled
_axDictionaryOfAnimationProperties
setObject:forKeyedSubscript:
_axReachabilitySettings
doubleValue
mainScreen
bounds
numberWithDouble:
_axSendReachabilityToggledActionWithPayload:
dictionary
_axAddReachabilityProperty:toDictionary:
_synchronizeDrawingAcrossProcesses
reachabilityToggledWithPayload:synchronizationPort:completion:
_setKeepAliveTimer
_accessibilityPerformValidations:
bundleForClass:
localizedStringForKey:value:table:
applicationWithBundleIdentifier:
initWithFrame:
setClipsToBounds:
addSubview:
setNumberOfLines:
setFont:
clearColor
setBackgroundColor:
whiteColor
setTextColor:
setTextAlignment:
colorWithRed:green:blue:alpha:
setShadowColor:
setShadowOffset:
setText:
sizeToFit
frame
setFrame:
setAlpha:
orientationChange
reorientHUDIfNeeded:
safeIntegerForKey:
setTransform:
animateWithDuration:animations:
roundedRectBezierPath:withRoundedCorners:withCornerRadius:
setFill
fill
drawRect:
setAutoresizesSubviews:
setMultipleTouchEnabled:
_defaultBackgroundGradient
initWithImage:
setAutoresizingMask:
setUserInteractionEnabled:
kitImageNamed:
colorWithPatternImage:
_swipeDetected:
initWithTarget:action:
setDelaysTouchesEnded:
setCancelsTouchesInView:
setNumberOfTouchesRequired:
setDirection:
addGestureRecognizer:
initWithTitle:
setHidesBackButton:
_cancelVOSwipeActivation:
initWithBarButtonSystemItem:target:action:
setRightBarButtonItem:
pushNavigationItem:animated:
imageNamed:inBundle:
boldSystemFontOfSize:
setLineBreakMode:
setColor:
colorWithAlphaComponent:
setIsAccessibilityElement:
delegate
swipeDetectorDetectedSwipe
state
swipeDetectorCanceled
touchesBegan:withEvent:
touchesEnded:withEvent:
layoutSubviews
_titleLabel
_bgImageView
_swipeDetected
_delegate
numberWithInteger:
_accessibilitySetSavedScrollingStrategy:
_accessibilityForcedScrollingStrategy
setScrollingStrategy:
_accessibilitySavedScrollingStrategy
_accessibilitySetForcedScrollingStrategy:
integerValue
accessibilitySetSystemDashBoardGesturesEnabled:
_isSecure
actionWithTitle:style:handler:
setButtonIndex:
buttonIndex
initWithStyle:reuseIdentifier:
textLabel
colorWithWhite:alpha:
_topLine
_bottomLine
_accessibilityBoolValueForKey:
_canDismissWithGestureRecognizer
_isChecked
setAccessibilityTraits:
setAccessibilityLabel:
_isCarScreen
sharedServerHelper
presentationWindow
_preferredFocusedWindow
_userInterfaceStyleArbiterStyleChanged:
_isDarkModeActive
dictionaryWithObjects:forKeys:count:
springBoardActionOccurred:withPayload:
validateClass:hasInstanceVariable:withType:
validateClass:isKindOfClass:
validateProtocol:hasRequiredInstanceMethod:
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
installSafeCategory:canInteractWithTargetClass:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
performValidations:withPreValidationHandler:postValidationHandler:
addHandler:forFramework:
_createAlertWindowSubclass
_performValidation
sharedApplication
addActiveOrientationObserver:
currentQueue
springBoardActionOccurred:
addObserverForName:object:queue:usingBlock:
addObject:
userInfo
objectForKeyedSubscript:
numberWithInt:
sideAppManager
isDisplayingApp
setAlertManager:
removeActiveOrientationObserver:
countByEnumeratingWithState:objects:count:
dismissAlertWithCancel
copy
mainAccessQueue
_handleTripleClickAskAlert
_handleZoomInBuddyAlert
handleBrokenHomeButtonAlert
_handleVoiceOverUsageConfirmation
_handleZoomConflictAlert:
_handleSwitchUsageConfirmed
_handleTouchAccommodationsUsageConfirmed
_handleZoomTripleClickAfterConflict
_handleDisableBrightnessFiltersAlert:
_handleDisableSwitchControlConfirmation
_handleDisableFKAConfirmation
_handleConfirmRebootDevice
_handleVONoHomeButtonGestureAlert
_handleDisallowUSBRestrictedModeVOInformativeOnly:
_handleDisallowUSBRestrictedModeSCInformativeOnly:
performAsynchronousWritingBlock:
_dismissAlertController
_serviceForRemoteViewType:
alertManager
showAXUIViewService:withData:
hideAXUIViewService:
isShowingAXUIViewService:
array
incomingCall
axSafelyAddObject:
incomingVideoCall
firstObject
ignoreLogging
identifier
status
answerCall:
currentCalls
axSafelyAddObjectsFromArray:
currentVideoCalls
count
disconnectCall:withReason:
keyWindow
_accessibilityViewController
_accessibilityFindSubviewDescendant:
performSynchronousReadingBlock:
sharedAVSystemController
getActiveCategoryVolume:andName:
toggleReachability
lock
unlock
isScreenLockedWithServerInstance:
initWithString:
applicationOpenURL:
objectForKey:
isEqualToString:
_globalIdleTimeCoordinator
resetIdleTimer
isGestureWithTypeAllowed:
isGuidedAccessActive
activateMainSwitcherNoninteractivelyWithSource:animated:
currentDevice
_tapticEngine
actuateFeedback:
_assistantController
dismissAssistantViewIfNecessary
presentContactlessInterfaceForDefaultPassFromSource:completion:
view
_accessibilityViewIsVisible
accessibilityIsNotificationVisible
isNotificationCenterVisibleWithServerInstance:
_accessibilityShowNotificationCenter:serverInstance:
coverSheetViewController
isCoverSheetVisibleWithServerInstance:
safeUnsignedIntegerForKey:
_accessibilityCoverSheetPresentationManagerSharedInstance
safeIntForKey:
setReachabilityEnabled:
accessibilityShowControlCenter:
_axFloatingDockController
isDockVisibleWithServerInstance:
dismissFloatingDockIfPresentedAnimated:completionHandler:
presentFloatingDockIfDismissedAnimated:completionHandler:
_accessibilityNativeFocusableElements:matchingBlock:
accessibilityTraits
isShowingHomescreenWithServerInstance:
isSystemAppShowingAnAlertWithServerInstance:
isControlCenterVisibleWithServerInstance:
isAppSwitcherVisibleWithServerInstance:
isPasscodeLockVisible
dismissAllSwitchersNoninteractivelyAnimated:
_iconController
_accessibilityIsSpeakThisTemporarilyDisabled
_accessibilityIsSystemGestureActive
_accessibilitySystemGesturesDisabledByAccessibility
areSystemGesturesDisabledNativelyWithServerInstance:
numberWithUnsignedInteger:
areSystemGesturesDisabledByAccessibilityWithServerInstance:
installedAppsWithServerInstance:
isPasscodeRequiredOnLockWithServerInstance:
isSiriVisibleWithServerInstance:
isMakingEmergencyCallWithServerInstance:
purpleBuddyPIDWithServerInstance:
isSystemAppFrontmostExcludingSiri:withServerInstance:
isSystemSleepingWithServerInstance:
isSyncingRestoringResettingOrUpdatingWithServerInstance:
isSystemGestureActiveWithServerInstance:
_applicationController
applicationIconForBundleIdentifier:
isIconVisible:
setObject:forKey:
setName:
setSource:
setIntent:
_lockScreenManager
unlockWithRequest:completion:
_unlockWithIntent:
raise:format:
sharedTelephonyManagerCreatingIfNecessary:
isReachabilityActive
safeCGFloatForKey:
allowedMedusaGestures
performMedusaGesture:
medusaApps
setDockIconActivationMode:
canActivateMedusaForDock
medusaAppBundleIdsToLayoutRoles
_toggleSearch
isSpotlightVisibleWithServerInstance:
toggleCurrentStyle
_appearState
postNotificationName:object:
serverInstance:appWithIdentifier:
_uiController
_activateApplicationFromAccessibility:
bundleIdentifier
visibility
actionWithType:
handleAction:fromSender:
userEventOccurred
dimTimerAssertion
invalidate
setDimTimerAssertion:
acquireIdleTimerDisableAssertionForReason:
triggerSOS
initWithShortcutIdentifier:bundleID:
_displayViewController:
_isDisplayingAlertController
_cleanupPresentationWindow
mainDisplaySceneManager
sceneIdentityForApplication:
fetchOrCreateApplicationSceneHandleForApplication:withIdentity:
displayEdgeInfoForForLayoutEnvironment:classicMode:isInsetForHomeAffordance:
scale
traitCollection
userInterfaceStyle
bestSnapshotWithImageName:sceneHandle:variantID:scale:size:contentTypeMask:statusBarStateMask:launchingOrientation:contentOverridesContext:userInterfaceStyle:displayEdgeInfo:
imageForInterfaceOrientation:
showAlert:withHandler:
launchApplication:
launchApplicationWithFullConfiguration:
launchPinnedApplication:onLeadingSide:
launchFloatingApplication:
canLaunchAsPinnedApplicationForIconView:
canLaunchAsFloatingApplicationForIconView:
sceneLayoutState
appForLayoutRole:
_accessibilityNotificationSummary:
_accessibilityNotificationCount
contentOffset
setReachabilityActive:
gestureRecognizerShouldBegin:
setCoverSheetPresented:animated:withCompletion:
notificationStructuredListViewControllerShouldAllowNotificationHistoryReveal:
_accessibilityAllowsShowNotificationsGestureFromThreeFingerSwipe
revealNotificationHistory:animated:
numberWithLong:
initWithString:attributes:
setNeedsLayout
layoutIfNeeded
activatePage:animated:withCompletion:
_accessibilityShowCoverSheet:serverInstance:completion:
_accessibilitySetBoolValue:forKey:
_accessibilitySetAllowShowNotificationGestureOverride:
_accessibilityIsUILocked
presentAnimated:
dismissAnimated:
runningAppProcessesWithServerInstance:
enumerateObjectsUsingBlock:
guidedAccessEnableExperimentalUI
hasMultipleApps
hasActiveOrPendingCallOrFaceTimeWithServerInstance:
isBuddyRunning
isPreferencesFrontmost
isMultiTaskingActive
isiCloudPaired
voiceOverActivationWorkaround
isMagnifierVisible
titleForTripleClickOption:
length
tripleClickOrderedOptions
indexOfObject:
compare:
sortUsingComparator:
intValue
localizedCompare:
_cleanupAlertController
rootViewController
presentedViewController
removeAllObjects
alertControllerWithTitle:message:preferredStyle:
_shouldShowTCOption:
_sortVisibleItems
_handleAlertActionPress:
valueForTripleClickOption:
_setChecked:
addAction:
actions
_displayAlertController:
_contextId
numberWithUnsignedInt:
postNotificationName:object:userInfo:
_displayViewController:withCompletion:
assertionWithType:identifier:
setDisableSystemGesturesAssertionForAlert:
_dismissAlertControllerWithCompletion:
alloc
initWithDebugName:
sb_setRootViewController:
setRootViewController:
setAutorotates:
setAccessibilityViewIsModal:
setHidden:
setWindowLevel:
setNeedsFocusUpdate
presentViewController:animated:completion:
_dismissViewControllerWithCompletion:
dismissViewControllerAnimated:completion:
_toggleTripleClickDisplay
stringWithFormat:
_handleUsageConfirmationDialogWithMessage:
stringByAppendingString:
notifyZoomHomeButtonWasPressed
initialize
_backlightController
_awayController
_syncController
_wallpaperController
didFailToPinAppForSideAppManager:
didFailToFloatAppForSideAppManager:
shortLookViewControllerDidDismiss:
serverInstance:showAlertType:withHandler:withData:
serverInstance:showRemoteViewType:withData:
serverInstance:hideRemoteViewType:
serverInstance:isShowingRemoteViewType:
hideAlertWithServerInstance:
isVoiceControlRunningWithServerInstance:
handleToggleIncomingCallWithServerInstance:
volumeLevelWithServerInstance:
isSideSwitchUsedForOrientationWithServerInstance:
isRingerMutedWithServerInstance:
isOrientationLockedWithServerInstance:
serverInstance:setOrientationLocked:
openCustomGestureCreationForASTWithServerInstance:
openCustomGestureCreationForSCATWithServerInstance:
openCommandAndControlSettingsWithServerInstance:
openCommandAndControlCommandsWithServerInstance:
openCommandAndControlVocabularyWithServerInstance:
isMediaPlayingWithServerInstance:forBundleId:
resetDimTimerWithServerInstance:
dismissSiriWithServerInstance:
openVoiceControlWithServerInstance:
isScreenshotWindowVisibleWithServerInstance:
toggleNotificationCenterWithServerInstance:
isNotificationVisibleWithServerInstance:
serverInstance:showControlCenter:
serverInstance:showNotificationCenter:
serverInstance:setReachabilityEnabled:
toggleDockWithServerInstance:
isStatusBarNativeFocusableWithServerInstance:
armApplePayWithServerInstance:
isShowingNonSystemAppWithServerInstance:
isPasscodeLockVisibleWithServerInstance:
openAppSwitcherWithServerInstance:
dismissAppSwitcherWithServerInstance:
simulateEdgePressHaptics:
serverInstance:showSpeechPlaybackControls:
serverInstance:pauseMedia:forBundleId:
hasActiveCallWithServerInstance:
hasActiveEndpointCallWithServerInstance:
hasActiveOrPendingCallWithServerInstance:
isSpeakThisTemporarilyDisabledWithServerInstance:
serverInstance:springBoardSystemInfoQuery:
wakeUpDeviceIfNecessaryWithServerInstance:
unlockDeviceWithServerInstance:
reachabilityOffsetWithServerInstance:
allowedMedusaGesturesWithServerInstance:
serverInstance:performMedusaGesture:
serverInstance:setDockIconActivationMode:
canSetDockIconActivationModeForServerInstance:
medusaAppsWithServerInstance:
toggleSpotlightWithServerInstance:
revealSpotlightWithServerInstance:
isGuidedAccessActiveWithServerInstance:
toggleDarkModeWithServerInstance:
isDarkModeActiveWithServiceInstance:
setDashBoardSystemGesturesEnabled:withServerInstance:
activateSOSModeWithServerInstance:
rebootDeviceWithServerInstance:
serverInstance:splashImageForAppWithBundleIdentifier:
serverInstance:performVoiceShortcutWithIdentifier:bundleID:
focusedAppPIDWithServerInstance:
runningAppPIDsWithServerInstance:
isSettingsAppFrontmostWithServerInstance:
focusedAppsWithServerInstance:
isPurpleBuddyAppFrontmostWithServerInstance:
focusedAppProcessWithServerInstance:
forceLoadGAXBundleWithServerInstance:
reactivateInCallServiceWithServerInstance:
launchMagnifierAppWithServerInstance:
isMagnifierVisibleWithServerInstance:
userEventOccurredWithServerInstance:
setLockScreenDimTimerEnabled:withServerInstance:
updateFrontMostApplicationWithServerInstance:
medusaBundleIDsToLayoutRoles
_accessibilityAllowShowNotificationGestureOverride
frontmostAppProcessWithServerInstance:
_visibleTripleClickItems
shouldOverrideInterfaceOrientation
_accessibilityHandleHomeOrLockButtonPress
activeInterfaceOrientationWillChangeToOrientation:
activeInterfaceOrientationDidChangeToOrientation:willAnimateWithDuration:fromOrientation:
setPresentationWindow:
disableSystemGesturesAssertionForAlert
_alertHandler
_shouldOverrideInterfaceOrientation
_notificationObservers
_alertManager
_presentationWindow
_dimTimerAssertion
_disableSystemGesturesAssertionForAlert
lockUIFromSource:withOptions:
_authenticationStateChanged:
_takeScreenshotAndEdit:
activeInterfaceOrientation
alertInterfaceOrientation
interfaceOrientation
_setRotatableViewOrientation:duration:force:
isHidden
shouldBlockGestureActivation:
allowShowTransition
_allowsShowNotificationsGestureFromBanner:
_presentHUD:animated:
floatValue
_effectiveVolumeChanged:
_presentVolumeHUDWithVolume:
_updateProcess:withState:
TTYHardwareEnabled
TTYSoftwareEnabled
cancelCallPromptDisplay
_performBlockAfterCATransactionCommits:
addTransactionDidCompleteBlock:
initializeAndRunStartupTransition:
applicationSceneEntityForLayoutRole:
safeStringForKey:
previousApplicationSceneEntityForLayoutRole:
_shouldAddBreadcrumbToActivatingSceneEntity:sceneHandle:withTransitionContext:
performSinglePressUpActions
parentViewController
shortLookViewController
preferredContentHeightForLongLook:
setParentViewController:
_parentViewController
initWithNibName:bundle:
setSectionBundleIdentifier:
setApplicationBundleIdentifier:
setIdentifier:
setShortLookViewController:
setSearchResult:
addChildViewController:
didMoveToParentViewController:
setView:
viewDidAppear:
superview
_automaticallyPerformShortcutIfPossible
presentImmediately:
safeArrayForKey:
longLookPlatterDidReceiveTap:
viewDidDisappear:
shortLookViewControllerWillBeginUserInteraction:
shortLookViewController:willDisplayLongLookWithReason:
shortLookViewController:willDismissLongLookWithReason:actionCompleted:shouldClearAction:
shortLookViewController:didDismissLongLookWithReason:actionCompleted:shouldClearAction:
shortLookViewController:didCompleteActionWithResult:
initWithCoder:
loadView
_shortLookViewController
type
setType:
_identifier
_type
initWithKey:payload:
sendSimpleMessage:withError:
currentVideoCall
displayName
axAttributedStringWithString:
setAttribute:forKey:
disableNotificationCenterAssertionHeld
disableControlCenterAssertionHeld
sendSimpleMessage:synchronizationPort:error:
serviceMachPort
indexOfObjectPassingTest:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
hasActiveCall
UTF8String
_setCallRoute:ifCurrentlyRoutedTo:
hasActiveOrPendingCallOrFaceTime
attributeForKey:
displayedCall
sharedAudioSystemController
audioCategory
audioMode
pickableRoutesForCategory:andMode:
pickableRoutesForCategory:
arrayByAddingObjectsFromArray:
hasPrefix:
_setAVCallRoute:
setAttribute:forKey:error:
_initServer
removeAllHandlersForTarget:
strongToStrongObjectsMapTable
initWithServiceName:perPidService:
_registerServerAndNotifyClients
_springBoardFinishedLaunching:
_startHearingAidServer:
_proximityDidChange:
userChangedRouteNotification:
removeObserver:name:object:
startServerWithError:
setQueueSize:
_initializeHandlers
setClientInvalidationCallback:
arrayWithObjects:count:
setPredicates:
setServiceClass:
descriptor
setStateDescriptor:
_updateProcess:
setUpdateHandler:
monitorWithConfiguration:
identity
currentState
taskState
_getApplicationOrientation:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
_getPid:
_showAlert:
_hideAlert:
_showRemoteView:
_hideRemoteView:
_isShowingRemoteView:
_screenLocked:
_isMakingEmergencyCall:
_hasActiveCall:
_hasActiveEndpointCall:
_hasActiveOrPendingCall:
_hasActiveOrPendingCallOrFaceTime:
_topEventPidOverride:
_takeScreenshot:
_openAppSwitcher:
_dismissAppSwitcher:
_simulateEdgePressHaptics:
_wakeUpDeviceIfNecessary:
_unlockDevice:
_rebootDevice:
_dismissSiri:
_toggleNotificationCenter:
_isNotificationCenterVisible:
_openVoiceControl:
_getActiveInterfaceOrientation:
_actionHandling:
_isVoiceControlRunning:
_isSystemSleeping:
_volumeLevel:
_isOrientationLocked:
_setOrientationLocked:
_isSideSwitchUsedForOrientation:
_isRingerMuted:
_openCustomGestureCreationForAST:
_openCustomGestureCreationForSCAT:
_openCommandAndControlSettings:
_openCommandAndControlCommands:
_openCommandAndControlVocabulary:
_cancelGestureActivation:
_toggleHearingControl:
_setCaptionPanelContextId:
_isPointInAXInspector:
_isMediaPlaying:
_pauseMedia:
_resumeMedia:
_resetDimTimer:
_showControlCenter:
_toggleDock:
_armApplePay:
_showNotificationCenter:
_isControlCenterVisible:
_copyStringToPasteboard:
_isSiriVisible:
_isAppSwitcherVisible:
_isShowingHomescreen:
_isDockVisible:
_isPasscodeLockVisible:
_isShowingNonSystemApp:
_isSyncingRestoringResettingOrUpdating:
_areSystemGesturesDisabledNatively:
_areSystemGesturesDisabledByAccessibility:
_handleSpringBoardInfoQuery:
_handleInstalledApps:
_handleIsInspectorMinimized:
_handleCancelReachabilityTimer:
_handleToggleSpotlight:
_handleRevealSpotlight:
_isSpotlightVisible:
_isGuidedAccessActive:
_isDarkModeActive:
_toggleDarkMode:
_handleLoadGAXBundleForUnmanagedASAM:
setHandlerWithTarget:selector:forKey:
_handleReactivateInCallService:
_handleLaunchMagnifierApp:
_handleIsMagnifierVisible:
_setSpeechPlaybackControls:
_isSpeakThisTemporarilyDisabled:
_handleAcquireAssertion:
_handleRelinquishAssertion:
_handleUserEventOccurred:
_handleSetLockScreenDimTimerEnabled:
_activateSOSMode:
_getSplashImageForApp:
_handleIsSystemAppShowingAnAlert:
_handleGetFocusedAppPID:
_handleGetPurpleBuddyPID:
_handleGetRunningAppPIDs:
_handleGetFocusedApps:
_handleIsSystemAppFrontmost:
_handleIsPurpleBuddyAppFrontmost:
_handleIsSettingsAppFrontmost:
_handleIsMultitaskingActive:
_reachabilityOffset:
_reachabilityHandling:
_reachabilityActive:
_handleToggleIncomingCall:
_reachabilityEnabled:
_allowedMedusaGestures:
_performMedusaGesture:
_medusaApps:
_setDockIconActivationMode:
_canSetDockIconActivationMode:
_performVoiceShortcut:
addPossibleRequiredEntitlement:forMessageWithKey:
_setupAssertionServerIfNeeded
assertionServer
addHeldAssertionOfType:byClient:
_assertionClientForPort:
initWithPort:
setClientIdentifier:
setTimeout:
connectWithError:
_relinquishAllAssertionsForClientWithPort:
setPortDeathHandler:
relinquishAssertionWithType:identifier:clientPort:
removeHeldAssertionOfType:byClient:
removeObjectForKey:
_accessibilitySetSystemGesturesDisabledByAccessibility:
clientsHoldingAssertionOfType:
isEqualToArray:
setAssertionServer:
_setSystemGesturesEnabled:
_accessibilitySetSpeakThisTemporarilyDisabled:
setDisableNotificationCenterAssertionHeld:
setDisableControlCenterAssertionHeld:
_setDashboardSystemGesturesDisabled:
setAssertionWasAcquiredHandler:
setAssertionWasReleasedHandler:
payload
clientPort
sendSimpleMessage:
dictionaryWithObjectsAndKeys:
hasActiveEndpointCall
hasActiveOrPendingCall
_hasActionHandlerForClientPort:
_removeActionHandler:
_hasReachabilityHandlerForClientPort:
_removeReachabilityHandler:
dismissMainSwitcherNoninteractivelyAnimated:
_accessibilityIsInspectorMinimized
_accessibilityIsPointInAXInspector:
generalPasteboard
setItems:
unsignedIntegerValue
acquireAssertionWithType:identifier:clientPort:
archivedDataWithRootObject:requiringSecureCoding:error:
springBoardServerInstanceIfExists
_axCaptionPanelContextId
shouldCancelSiriTouchActivationBlock
registerHandlerForMessageKey:target:selector:entitlements:
onlySystemGesturesDisabledHolderIsGuidedAccess
_server
_client
_actionHandlers
_reachabilityHandlers
_assertionClients
_currentSpeakerClient
_hidManager
_processMonitor
_disableNotificationCenterAssertionHeld
_disableControlCenterAssertionHeld
_assertionServer
callAudioRoutingAutoAnswerEnabled
currentAudioAndVideoCallCount
callAudioRoutingAutoAnswerDelay
sb_alertDefinition
setUserInfo:
serviceName
viewControllerClassName
newHandleWithDefinition:configurationContext:
addObserver:
activateWithContext:
handlesByService
setHandlesByService:
valueWithPointer:
isActive
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
_handlesByService
containsObject:
setAccessibilityIdentifier:
removeObjectAtIndex:
locationInView:
pointInside:withEvent:
subviews
addObjectsFromArray:
_accessibilityValueForKey:
_accessibilityTripleClickElementHitTest:
title
text
notifySpeakServicesToStopSpeaking
_accessibilityRemoveValueForKey:
notifySpeakServicesForSpeechOutput:volume:speakingRate:
_accessibilitySetRetainedValue:forKey:
initWithTargetSerialQueue:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
_tripleClickSpeakMenuProcessTouch:
isPending
isCancelled
afterDelay:processBlock:
accessibilityIdentifier
allTouches
phase
_processEventForVOSpeakage:
cancel
sendEvent:
__CGRect__
validateClass:conformsToProtocol:
window
_addFloatingApplicationGesturesIfAllowed:
_mainDisplaySceneLayoutViewController
_hasPinnedApp
_addResizeGestureRecognizerGesturesIfAllowed:
_appForLayoutRole:layoutState:
elementWithRole:
_currentFloatingConfiguration
_mainDisplaySceneManager
_enumerateAppsAndLayoutRoles:
_performSwipeOnFloatingAppSwitcher:
currentLayout
elements
_isDockIconView:
_bundleIdentifierForIconView:
_appWithIdentifier:
_endDockIconActivationModeAfterTimeout
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
dockIconActivationMode
_currentSpaceConfiguration
_sbPreviousWorkspaceEntityClass
entityWithPreviousLayoutRole:
_sbEmptyEntity
_sbPreviousEntity
_requestFloatingAppSwitcherVisible
_requestTransactionWithPrimaryEntity:sideEntity:floatingEntity:spaceConfiguration:floatingConfiguration:
objectAtIndex:
_sbWorkspaceMainWorkspace
_sbSwitcherTransitionRequestClass
requestForActivatingAppLayout:
_configureRequest:forSwitcherTransitionRequest:withEventLabel:
requestTransitionWithOptions:builder:validator:
setEntity:forLayoutRole:
setRequestedSpaceConfiguration:
setRequestedFloatingConfiguration:
modifyApplicationContext:
setRequestedFloatingSwitcherVisible:
initWithApplicationForMainDisplay:
newSceneIdentityForApplication:
initWithApplicationSceneHandle:
userInterfaceIdiom
_hasFloatingApp
_activeApplicationBundleIdentifiers
_floatingAppRootViewController
_dockIconActivationMode
iconManager:launchIconForIconView:
_setVoiceOverTouchSettings:
speakCorrectionsEnabled
setSpeakCorrectionsEnabled:
serverIfRunning
displays
setContrast:
_checkContrastSetting
detachNewThreadSelector:toTarget:withObject:
_checkAccessibilityOptionsSetByiTunes
_checkVoiceOverTouchSetByiTunes
_checkZoomTouchSetByiTunes
_checkInvertColorsSetByiTunes
_checkMonoAudioSetByiTunes
_checkSpeakAutofillSetByiTunes
_checkClosedCaptioningSetByiTunes
_checkAssistiveTouchSetByiTunes
stringByAppendingPathComponent:
bundleWithPath:
isLoaded
load
_updateAXSettings
_updateSpringBoardHelper
sharedManager
propertyListWithData:options:format:error:
readDataForFileAtAccessibilityContainerPath:completion:
_initializeDelayedSpringBoardSettings
_findNoteFromLoginSessionWithCompletion:
_registerForNotifications
_initializeRemoteSettingsListener
_handleGuidedAccessManagedConfigurationDidChange:
bootstrapGuidedAccessIfNeeded
_bootstrapUltron
_registerForHomeButtonBreakage
_performValidations
ultronSupportEnabled
_startupUltronUIServer
_turnOnControlCenterModule
registerUpdateBlock:forRetrieveSelector:withListener:
ultronIsRunning
standardUserDefaults
boolForKey:
setBool:forKey:
synchronize
_setRebootedGracefullyOnce
rebootForReason:
_alreadyRebootedGracefullyOnce
_startAssistiveTouchForBrokenHomeButton
brokenHomeButtonCount
setBrokenHomeButtonCount:
_gracefulRebootForBrokenHomeButton
_registerForHomeButtonBreakageNotification
_checkForHomeButtonBreakage:
sharedConnection
effectiveWhitelistedAppsAndOptions
autonomousSingleAppModePermittedBundleIDs
_isDeviceAffectedByVOActivationWorkaround
_remoteAccessibilitySettingsChanged:
registerNetworkDefaultsForAppID:
_updateRemoteAccessibilitySettings
_hideVoiceOverEnabler
callStackSymbols
_playVOActivationSoundEnded
animateWithDuration:animations:completion:
initWithContentRect:
setBecomeKeyOnOrderFront:
setEnabled:
orderFront:
setOpaque:
setContentView:
resourcePath
initFileURLWithPath:isDirectory:
_playVOActivationSoundStarted
_voiceOverEnabled:
_makeVoiceOverVibrateWindow
lastObject
setBounds:
setCenter:
registerNetworkDefaultsForAppIDs:forceUpdate:
sharedNetworkObserver
removeObserver:forHostname:
_reachabilityChanged:
addObserver:selector:forHostname:
checkScreenContrast
checkAccessibilityOptions
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
_showSwipeDetectionEnablerView
_showVibrationVoiceOverEnablerView
_registerReachability
_voiceOverVibrateWindow
_voiceOverActivationCanceler
_managedConfigurationNotificationCoalesceTimer
mutableCopy
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
v24@0:8@16
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
v24@0:8@"HCServer"16
v20@0:8B16
v16@0:8
@"NSDictionary"
@"NSTimer"
@"NSObject<OS_dispatch_queue>"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UILabel"
@"UIImageView"
@"<AXSBVoiceOverSwipeDetectorDelegate>"
v24@0:8q16
@40@0:8@16q24@?32
q16@0:8
@32@0:8q16@24
@"UIView"
v24@0:8@"AXSpringBoardServerSideAppManager"16
v24@0:8@"AXSiriShortcutsViewController"16
v44@0:8@16i24@?28@36
v40@0:8@16q24@32
v32@0:8@16q24
B32@0:8@16q24
d24@0:8@16
v28@0:8@16B24
B32@0:8@16@24
B28@0:8@16B24
v36@0:8@16B24@28
@32@0:8@16@24
@24@0:8@16
v32@0:8@16Q24
v28@0:8B16@20
v40@0:8@16@24@32
i24@0:8@16
B28@0:8B16@20
v44@0:8@"_AXSpringBoardServerInstance"16i24@?<v@?q>28@36
v40@0:8@"_AXSpringBoardServerInstance"16q24@32
v32@0:8@"_AXSpringBoardServerInstance"16q24
B32@0:8@"_AXSpringBoardServerInstance"16q24
v24@0:8@"_AXSpringBoardServerInstance"16
B24@0:8@"_AXSpringBoardServerInstance"16
d24@0:8@"_AXSpringBoardServerInstance"16
v28@0:8@"_AXSpringBoardServerInstance"16B24
B32@0:8@"_AXSpringBoardServerInstance"16@"NSString"24
B28@0:8@"_AXSpringBoardServerInstance"16B24
v36@0:8@"_AXSpringBoardServerInstance"16B24@"NSString"28
@"NSDictionary"32@0:8@"_AXSpringBoardServerInstance"16Q24
@32@0:8@"_AXSpringBoardServerInstance"16@"NSString"24
@"NSDictionary"24@0:8@"_AXSpringBoardServerInstance"16
@"NSArray"24@0:8@"_AXSpringBoardServerInstance"16
B32@0:8@"_AXSpringBoardServerInstance"16Q24
v32@0:8@"_AXSpringBoardServerInstance"16Q24
v28@0:8B16@"_AXSpringBoardServerInstance"20
v40@0:8@"_AXSpringBoardServerInstance"16@"NSString"24@"NSString"32
@"NSNumber"24@0:8@"_AXSpringBoardServerInstance"16
i24@0:8@"_AXSpringBoardServerInstance"16
B28@0:8B16@"_AXSpringBoardServerInstance"20
@24@0:8@"_AXSpringBoardServerInstance"16
@24@0:8q16
v20@0:8i16
@24@0:8Q16
B36@0:8B16@20@?28
B20@0:8B16
B20@0:8i16
v32@0:8@16@?24
v24@0:8@?16
v40@0:8q16d24q32
@"NSMutableArray"
@"AXSpringBoardServerAlertManager"
@"UIWindow"
@"<BSInvalidatable>"
@"AXAssertion"
v28@0:8i16@20
v36@0:8q16d24B32
v20@0:8f16
B40@0:8@16@24@32
@"AXSiriShortcutsViewController"
v40@0:8@16q24B32B36
v24@0:8@"APUIShortLookViewController"16
v32@0:8@"APUIShortLookViewController"16q24
v40@0:8@"APUIShortLookViewController"16q24B32B36
@"<AXSiriShortcutsViewControllerDelegate>"
@"APUIShortLookViewController"
@"NSString"
I16@0:8
v32@0:8q16@24
B24@0:8Q16
v36@0:8@16I24@?28
B20@0:8I16
v20@0:8I16
B28@0:8i16@20
v44@0:8i16@20:28@36
@20@0:8I16
v36@0:8@16@24I32
@"AXIPCServer"
@"AXIPCClient"
@"<AXSpringBoardServerInstanceDelegate>"
@"NSMapTable"
^{__IOHIDManager=}
@"RBSProcessMonitor"
@"_AXAssertionServer"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v32@0:8@"AXVSBaseService"16@"NSDictionary"24
v24@0:8@"AXVSBaseService"16
B24@0:8@"AXVSBaseService"16
@"NSMutableDictionary"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8Q16
v56@0:8@16@24@32q40q48
@"<AXSpringBoardServerSideAppManagerDelegate>"
v20@0:8C16
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
@"AXAccessQueueTimer"
@"AXDispatchTimer"
