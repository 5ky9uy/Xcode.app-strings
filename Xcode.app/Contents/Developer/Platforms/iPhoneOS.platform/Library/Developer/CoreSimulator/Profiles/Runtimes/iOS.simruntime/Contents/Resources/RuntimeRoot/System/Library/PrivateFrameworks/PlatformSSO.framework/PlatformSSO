@(#)PROGRAM:PlatformSSO  PROJECT:AppSSO-1
com.apple.PlatformSSO
-[POKeychainHelper addTokens:metaData:toKeychainForService:username:]
-[POKeychainHelper retrieveTokensFromKeychainForService:username:returningTokens:metaData:]
v8@?0
com.apple.AppSSO
POKeychainHelper
%@.%@
%@.%@.%@.%@.%@
%@.%@.%@
%@.%@
APPLE
POJWT
SOAPWebServicesErrorDomain
SOAPFaultKey
SOAPErrorFaultStringKey
SOAPErrorFaultCodeKey
SOAPErrorHTTPStatusKey
SOAPErrorSOAPHeaderKey
Fault
RequestSecurityToken
RequestSecurityTokenResponseCollection
RequestSecurityTokenResponse
com.apple.PlatformPSSO.daemon-queue
-[PODaemonConnection init]
-[PODaemonConnection dealloc]
Failed to connect to PSSO daemon
v16@?0@"NSError"8
com.apple.PlatformSSO.daemon-xpc
PODaemonConnection
kTokenExpiration
kTokenReceived
refresh_token
refresh_token_expires_in
expires_in
created
v32@?0@8Q16^B24
POUserConfiguration
PODeviceConfiguration
-[POExtensionAgentProcess connectionInvalidated]
-[POExtensionAgentProcess keyProxyEndpointForKeyType:]
-[POExtensionAgentProcess identityForKeyType:]
-[POExtensionAgentProcess invalidateAllKeyProxies]
-[POExtensionAgentProcess isCallerCurrentSSOExtension]
com.apple.private.platformsso.loginmanager
-[POExtensionAgentProcess isDeviceRegisteredWithCompletion:]
isDeviceRegistered
-[POExtensionAgentProcess isUserRegisteredWithCompletion:]
isUserRegistered
-[POExtensionAgentProcess registrationTokenWithCompletion:]
registrationToken
-[POExtensionAgentProcess setRegistrationToken:completion:]
not impl
-[POExtensionAgentProcess ssoTokensWithCompletion:]
SSOTokens
-[POExtensionAgentProcess setSsoTokens:completion:]
setSSOTokens
-[POExtensionAgentProcess loginConfigurationWithCompletion:]
loginConfiguration
-[POExtensionAgentProcess setLoginConfiguration:completion:]
setLoginConfiguration
Token endpoint URL is not approved profile URL.
Nonce endpoint URL is not approved profile URL.
Refresh endpoint URL is not approved profile URL.
The invalidCredentialPredicate is not formatted correctly.
The federationUserPreauthenticationURL is missing.
The federationMexURLKeypath is missing.
The federationPredicate is not formatted correctly.
The federationMexURL is missing.
SELF LIKE[c] %@
-[POExtensionAgentProcess setCertificateData:keyType:completion:]
setCertificateData
-[POExtensionAgentProcess secKeyProxyEndpointForKeyType:completion:]
-[POExtensionAgentProcess secIdentityProxyEndpointForKeyType:completion:]
-[POExtensionAgentProcess attestKey:clientDataHash:completion:]
-[POExtensionAgentProcess copyDeviceAttestationCertificateWithCompletion:]
-[POExtensionAgentProcess userNeedsReauthenticationWithCompletion:]
userNeedsReauthentication
v16@?0@"NSNotification"8
-[POExtensionAgentProcess deviceRegistrationsNeedsRepairWithCompletion:]
deviceRegistrationNeedsRepair
-[POExtensionAgentProcess userRegistrationsNeedsRepairWithCompletion:]
userRegistrationNeedsRepair
-[POExtensionAgentProcess presentRegistrationViewControllerWithCompletion:]
presentRegistrationViewController
-[POExtensionAgentProcess resetKeysWithCompletion:]
resetKeys
-[POExtensionAgentProcess loginUserNameWithCompletion:]
loginUserName
-[POExtensionAgentProcess setLoginUserName:completion:]
setLoginUserName
POExtensionAgentProcess
ASAuthorizationErrorDomain
com.apple.PlatformSSO.auth
P-256
POSecKeyHelper
PODirectoryServices
POES256JWTSigningAlgorithm
com.apple.PlatformPSSO.login-manager-queue
-[POServiceLoginManagerConnection init]
-[POServiceLoginManagerConnection dealloc]
-[POServiceLoginManagerConnection invalidate]
Failed to connect to PSSO service
com.apple.PlatformSSO.service-login-manager-xpc
POServiceLoginManagerConnection
platform sso
-[POExtension unload]
-[POExtension beginDeviceRegistrationUsingOptions:completion:]
v16@?0q8
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
-[POExtension beginUserRegistrationUsingUserName:authenticationMethod:options:completion:]
-[POExtension registrationDidComplete]
-[POExtension canPerformRegistration]
v12@?0B8
-[POExtension presentAuthorizationViewControllerWithHints:completion:]
No extension authorization view controller
-[POExtension authorization:didCompleteWithCredential:error:]
POExtension
isSpecifiedKey
namespace
maxCount
minCount
flattenMultiValue
<%@> {
%@    %@: %@;
%@    %@ = <>;
%@    %@ = %@
    
%@    %@ = [
%@        [%lu] = %@
        
%@        -- %lu remaining entries in array --
%@    ]
%@    %@ = %@;
%@    -- %lu remaining elements --
LOGIN
REGISTER
IGNORE
LOGIN_USER
REGISTER_DEVICE
REGISTER_USER
account_name
extension_identifier
com.apple.PlatformSSO.authenticationCompleted
authenticationResult
com.apple.ScreensaverRuleCheck
-[POAgentAuthenticationProcess initWithDelegate:]
com.apple.PlatformSSO.notifications
-[POAgentAuthenticationProcess handleScreenUnlock]
-[POAgentAuthenticationProcess handleAgentStartup]
-[POAgentAuthenticationProcess handleNetworkChange]
-[POAgentAuthenticationProcess handleScreenSaverRule]
v20@?0B8@"NSError"12
-[POAgentAuthenticationProcess performLoginForCurrentUser]
v24@?0Q8@"NSData"16
-[POAgentAuthenticationProcess requestUserAuthenticationWithUserInfo:]
-[POAgentAuthenticationProcess requestUserAuthenticationWithWindow:completion:]
-[POAgentAuthenticationProcess registrationTokenForExtensionIdentifier:]
-[POAgentAuthenticationProcess handleUserNeedsReauthenticationAfterDelay:]
-[POAgentAuthenticationProcess handleUserCredentialNeededAtLogin:returningContext:]
-[POAgentAuthenticationProcess _startDeviceRegistration]
device
-[POAgentAuthenticationProcess _startDeviceRegistration]_block_invoke_2
-[POAgentAuthenticationProcess _startDeviceRegistration]_block_invoke
-[POAgentAuthenticationProcess _startUserRegistration]
-[POAgentAuthenticationProcess _startUserRegistration]_block_invoke
user
-[POAgentAuthenticationProcess handleDeviceAndUserRegistrationForRepair:]
-[POAgentAuthenticationProcess handleDeviceAndUserRegistrationForRepair:notified:]
-[POAgentAuthenticationProcess handleUserRegistrationForUser:repair:]
-[POAgentAuthenticationProcess handleUserRegistrationForUser:repair:notified:]
-[POAgentAuthenticationProcess configurationChanged:]
-[POAgentAuthenticationProcess handleConfigurationChanged:]
-[POAgentAuthenticationProcess handleRemovingRegistrationForExtension:]
-[POAgentAuthenticationProcess exchangeTGTForStatus:]
-[POAgentAuthenticationProcess handleKerberosMappingForTokens:loginConfiguration:userConfiguration:]
-[POAgentAuthenticationProcess handlePendingSSOTokens]
-[POAgentAuthenticationProcess handleUnfinishedTGTExchanges]
-[POAgentAuthenticationProcess notifyKerberosDelegateTGTDidBegin]
-[POAgentAuthenticationProcess notifyKerberosDelegateTGTDidComplete]
-[POAgentAuthenticationProcess setupTimerForAuthentication]
-[POAgentAuthenticationProcess isCurrentSSOExtension:]
-[POAgentAuthenticationProcess windowDidClose]
-[POAgentAuthenticationProcess requestDidCompleteWithError:]
NOTIFICATION_SIGNIN_TITLE
CUSTOM_NOTIFICATION_SIGNIN_BODY
DEFAULT_NOTIFICATION_SIGNIN_BODY
NOTIFICATION_REGISTRATION_TITLE
CUSTOM_PASSWORD_NOTIFICATION_REGISTRATION_BODY
CUSTOM_NOTIFICATION_REGISTRATION_BODY
DEFAULT_PASSWORD_NOTIFICATION_REGISTRATION_BODY
DEFAULT_NOTIFICATION_REGISTRATION_BODY
-[POAgentAuthenticationProcess userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
NOTIFICATION_SIGNIN_BUTTON
NOTIFICATION_IGNORE_BUTTON
NOTIFICATION_REGISTER_BUTTON
POAgentAuthenticationProcess
RS256
ES256
ECDH-ES,A256GCM
v16@?0Q8
application/json
Accept
client-request-id
federation_metadata_url
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Preauthentication Request: %@
WSTrust Mex Request: %@
POST
application/soap+xml; charset=utf-8
Content-type
SOAPAction
WSTrust Login Request: %@
%@,%@
v16@?0^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}8
openid offline_access
%@ %@
Apple
application/x-www-form-urlencoded
grant_type
srv_challenge
Nonce
Server Nonce Request: %@
password
urn:ietf:params:oauth:grant-type:jwt-bearer
urn:ietf:params:oauth:grant-type:saml1_1-bearer
urn:ietf:params:oauth:grant-type:saml2-bearer
jwe_crypto
ECDH-ES
A256GCM
platform_sso_version
&request=%@
Login Request: %@
JWKS Request: %@
keys
No login configuration
This is a fake server nonce
com.apple.testMessages
This is the previous refresh token
foo@example.com
Platform SSO Test Messages
----------
Key Generated for Signing All Test Messages: 
----------
Nonce Request: 
----------
Password Login JWT: 
----------
Password Login Request: 
----------
Embedded Assertion: 
----------
Embedded Login JWT: 
----------
Embedded Login Request: 
POAuthenticationProcess
AppliesTo
KeyType
RequestType
EndpointReference
Address
stringValue
mustUnderstand
Username
Password
UsernameToken
Timestamp
Created
Expires
Lifetime
RequestedSecurityToken
RequestedAttachedReference
RequestedUnattachedReference
TokenType
ValueType
KeyIdentifier
SecurityTokenReference
Header
Body
-[POXMLXPathResult nodes]
POXMLHelper.m
nodes->nodeTab[i]
-[POXMLXPathContext registerNamespaces:]
self.xpathCtx
nameSpaceList
POXMLHelper
%llu%C
POLoginTypeNone
POLoginTypePassword
POLoginTypeUserSecureEnclaveKey
%@ (%@)
POUserStateNormal
POUserStateNeedsAuthentication
POUserStateNeedsRegistration
POLoginResultInvalid
POLoginResultSuccess
POLoginResultPermanentFailure
POLoginResultFailure
POLoginResultCredentialFailure
POLoginResultUnavailable
POLoginResultCancelled
UserDeviceSigning
UserDeviceEncryption
UserSecureEnclaveKey
urn:uuid:%@
v24@?0@"NSData"8@"NSError"16
POCredentialUtil
true
false
Action
MessageID
ReplyTo
Security
RelatesTo
com.apple.PlatformSSO.configuration
hasInvalidCredentialPredicate
includePreviousRefreshTokenInLoginRequest
kerberosTicketMappingsCount
hasCustomNonceRequestValues
hasCustomAssertionRequestHeaderClaims
hasCustomAssertionRequestBodyClaims
hasCustomLoginRequestHeaderClaims
hasCustomLoginRequestBodyClaims
hasCustomRefreshRequestHeaderClaims
hasCustomRefreshRequestBodyClaims
federationType
@"NSDictionary"8@?0
com.apple.PlatformSSO.login
type
result
com.apple.PlatformSSO.passwordchange
shouldChangePassword
credentialNeeded
com.apple.PlatformSSO.registration
options
com.apple.PlatformSSO.loginManager
com.apple.PlatformSSO.appssotool
testMessages
status
POJWTHeader
RequireRootCAInSystemTrustStore
ForceKerberosTGTExchange
SOUtils
Unable to find class %s
POPreferences
Envelope
xmlns
<?xml version="1.0" encoding="utf-8"?>
uuuu'-'MM'-'dd'T'HH':'mm':'ss
uuuu'-'MM'-'dd'T'HH':'mm':'ssXXX
uuuu'-'MM'-'dd'T'HH':'mm':'ss'Z'
y'-'M'-'d'T'HH':'mm':'ssXXX
y'-'M'-'d'T'HH':'mm':'ss
y'-'M'-'d'T'HH':'mm':'ss'.'SXXX
y'-'M'-'d'T'HH':'mm':'ss'.'S
uuuu'-'MM'-'dd
y'-'M'-'dXXX
y'-'M'-'d
HH':'mm':'ss
HH':'mm':'ssXXX
HH':'mm':'ss'Z'
HH':'mm':'ss'.'SXXX
HH':'mm':'ss'.'S
en_US_POSIX
http://www.w3.org/2003/05/soap-envelope
Text
com.apple.jwksCache
first load
-[POConfigurationManager jwksCacheForExtensionIdentifier:]
-[POConfigurationManager setJwksCache:forExtensionIdentifier:]
-[POConfigurationManager deviceConfigurationForExtension:]
-[POConfigurationManager saveDeviceConfiguration:forExtension:]
-[POConfigurationManager removeDeviceConfigurationForExtension:]
-[POConfigurationManager loginConfigurationForExtension:]
-[POConfigurationManager saveLoginConfiguration:forExtension:]
-[POConfigurationManager removeLoginConfigurationForExtension:]
v24@?0@"POUserConfiguration"8@"NSError"16
-[POConfigurationManager saveUserConfiguration:forUserName:]
userConfiguration updated
-[POConfigurationManager removeUserConfigurationForUserName:]
POConfigurationManager
-[POAuthPluginProcess initWithUid:forLogin:]
-[POAuthPluginProcess getLoginTypeForUser:tokensFresh:]
v28@?0Q8B16@"NSError"20
-[POAuthPluginProcess performPasswordLogin:passwordContext:updateLocalAccountPassword:]
v24@?0Q8@"NSError"16
-[POAuthPluginProcess performSEPKeyLogin:]
-[POAuthPluginProcess createUserAccount:passwordContext:]
-[POAuthPluginProcess saveCredentialForUserName:passwordContext:]
-[POAuthPluginProcess performLocalPasswordLogin:passwordContext:]
-[POAuthPluginProcess screenDidUnlock]
POAuthPluginProcess
http://schemas.microsoft.com/exchange/services/2006/errors
http://schemas.microsoft.com/exchange/services/2006/messages
http://schemas.microsoft.com/exchange/services/2006/types
http://www.w3.org/2005/08/addressing
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd
http://docs.oasis-open.org/ws-sx/ws-trust/200512
http://schemas.xmlsoap.org/ws/2005/02/trust
http://schemas.xmlsoap.org/ws/2004/09/policy
urn:oasis:names:tc:SAML:1.0:assertion
trust
urn:apple:platformsso
/.well-known/openid-configuration
token_endpoint
jwks_uri
issuer
v32@?0@8@16^B24
POLoginConfiguration
%@ %@ %@
HTTP/1.1
%@ %@
Host:
%@: %@
v32@?0@"NSString"8@"NSString"16^B24
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue
http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer
http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue
http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTRC/IssueFinal
http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue
http://schemas.xmlsoap.org/ws/2005/05/identity/NoProofKey
http://schemas.xmlsoap.org/ws/2005/02/trust/Issue
http://schemas.xmlsoap.org/ws/2005/07/securitypolicy
http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue
urn:oasis:names:tc:SAML:2.0:assertion
%@:FailedAuthentication
FailedAuthentication
http://www.w3.org/2005/08/addressing/anonymous
uuid-%@
s=http://www.w3.org/2003/05/soap-envelope a=http://www.w3.org/2005/08/addressing u=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd o=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd  wsu=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd wsp=http://schemas.xmlsoap.org/ws/2004/09/policy saml=urn:oasis:names:tc:SAML:1.0:assertion
%@=%@
//s:Envelope/s:Header/a:Action
//s:Envelope/s:Header/a:To
//s:Envelope/s:Header/a:MessageID
//s:Envelope/s:Body/trust:RequestSecurityToken/wsp:AppliesTo/a:EndpointReference/a:Address
//s:Envelope/s:Header/o:Security/o:UsernameToken/o:Username
//s:Envelope/s:Header/o:Security/o:UsernameToken/o:Password
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0
s=http://www.w3.org/2003/05/soap-envelope a=http://www.w3.org/2005/08/addressing u=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd o=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd  wsu=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd saml=urn:oasis:names:tc:SAML:1.0:assertion
//s:Envelope/s:Header/a:RelatesTo
//s:Envelope/s:Header/o:Security/u:Timestamp/u:Created
//s:Envelope/s:Header/o:Security/u:Timestamp/u:Expires
//s:Envelope/s:Body/s:Fault
//s:Envelope/s:Body/s:Fault/s:Reason/s:Text
//s:Envelope/s:Body/s:Fault/s:Code/s:Value
/s:Envelope/s:Body/s:Fault/s:Code/s:Subcode/s:Value
//s:Envelope/s:Body/trust:RequestSecurityTokenResponseCollection/trust:RequestSecurityTokenResponse/trust:RequestedSecurityToken/saml:Assertion
//s:Envelope/s:Body/trust:RequestSecurityTokenResponseCollection/trust:RequestSecurityTokenResponse/trust:TokenType
//s:Envelope/s:Body/trust:RequestSecurityTokenResponse/trust:RequestedSecurityToken/saml:Assertion
//s:Envelope/s:Body/trust:RequestSecurityTokenResponse/trust:TokenType
wsdl=http://schemas.xmlsoap.org/wsdl/ wsp=http://schemas.xmlsoap.org/ws/2004/09/policy soap12=http://schemas.xmlsoap.org/wsdl/soap12/ wsa10=http://www.w3.org/2005/08/addressing
%@ %@=%@
sp:SignedEncryptedSupportingTokens/wsp:Policy/sp:UsernameToken/wsp:Policy/sp:WssUsernameToken10
sp:SignedSupportingTokens/wsp:Policy/sp:UsernameToken/wsp:Policy/sp:WssUsernameToken10
//wsdl:definitions/wsp:Policy/wsp:ExactlyOne/wsp:All
//wsdl:definitions/wsdl:binding/wsp:PolicyReference[@URI="#%@"]
name
soap12:binding
transport
wsdl:operation/soap12:operation
soapAction
http://schemas.xmlsoap.org/soap/http
//wsdl:definitions/wsdl:service/wsdl:port
binding
wsa10:EndpointReference/wsa10:Address
https://
POWSTrustProcess
com.apple.PlatformPSSO.auth-plugin-queue
-[POServiceConnection initWithUid:forLogin:]
-[POServiceConnection dealloc]
com.apple.PlatformSSO.login.service-xpc
com.apple.PlatformSSO.service-xpc
POServiceConnection
assertion
client_id
scope
nonce
request_nonce
username
token_type
expires_on
id_token
password redacted
POJWTBody
PORS256JWTSigningAlgorithm
-[POAgentProcess initWithXPCConnection:authenticationProcess:]
com.apple.private.platformsso.agent
-[POAgentProcess initWithAuthenticationProcess:]
-[POAgentProcess connectionInvalidated]
-[POAgentProcess getLoginTypeForUser:completion:]
-[POAgentProcess performPasswordLogin:passwordContext:updateLocalAccountPassword:completion:]
-[POAgentProcess performSEPKeyLogin:completion:]
-[POAgentProcess createUserAccount:passwordContext:completion:]
-[POAgentProcess saveCredentialForUserName:passwordContext:completion:]
-[POAgentProcess performLocalPasswordLogin:passwordContext:completion:]
-[POAgentProcess screenDidUnlockWithCompletion:]
POAgentProcess
faultactor
faultcode
faultstring
Code
Reason
-[POKerberosHelper importKerberosEntry:error:]
%@@%@
-[POKerberosHelper exchangeKerberosTGTForEntry:]
krbtgt
-[POKerberosHelper checkForValidKerberosTGT:]
-[POKerberosHelper acquireCredentialForUUID:]
failed to find credential: %@
POKerberosHelper
-[POLoginManager init]
-[POLoginManager invalidate]
-[POLoginManager isDeviceRegistered]
-[POLoginManager isUserRegistered]
-[POLoginManager registrationToken]
v24@?0@"NSString"8@"NSError"16
-[POLoginManager ssoTokens]
-[POLoginManager setSsoTokens:]
-[POLoginManager loginConfiguration]
v24@?0@"POLoginConfiguration"8@"NSError"16
-[POLoginManager saveCertificate:keyType:]
-[POLoginManager copyKeyForKeyType:]
v24@?0@"NSXPCListenerEndpoint"8@"NSError"16
-[POLoginManager copyIdentityForKeyType:]
-[POLoginManager attestKey:clientDataHash:completion:]
-[POLoginManager copyDeviceAttestationCertificate]
v24@?0^{__SecCertificate=}8@"NSError"16
-[POLoginManager userNeedsReauthenticationWithCompletion:]
-[POLoginManager deviceRegistrationsNeedsRepair]
-[POLoginManager userRegistrationsNeedsRepair]
-[POLoginManager presentRegistrationViewControllerWithCompletion:]
-[POLoginManager resetKeys]
POLoginManager
&amp;
&lt;
&gt;
Value
Subcode
-[POConfigurationVersion init]
/com.apple.PlatformSSO.version
-[POConfigurationVersion checkVersion]
-[POConfigurationVersion increaseVersionWithMessage:]
-[POConfigurationVersion setPlatformSSOUnavailable]
notify_register_check() failed with %u (test)
notify_set_state() failed with error %u
notify_cancel() failed with error %u
POConfigurationVersion
psso.configured
/var/mobile/Library/ExtensibleSSO/Configuration/com.apple.AppSSO.configuration.plist
POConfigurationUtil
com.apple.PlatformSSO.device.%@.txt
com.apple.PlatformSSO.login.%@.txt
com.apple.PlatformSSO.user.%@.txt
/var/mobile/Library/ExtensibleSSO/Configuration/PlatformSSO
-[PODaemonProcess initWithXPCConnection:]
-[PODaemonProcess connectionInvalidated]
-[PODaemonProcess deviceConfigurationForExtension:completion:]
-[PODaemonProcess loginConfigurationForExtension:completion:]
-[PODaemonProcess removeDeviceConfigurationForExtension:completion:]
-[PODaemonProcess removeLoginConfigurationForExtension:completion:]
-[PODaemonProcess removeUserConfigurationForIdentifier:completion:]
-[PODaemonProcess saveDeviceConfiguration:forExtension:completion:]
-[PODaemonProcess saveLoginConfiguration:forExtension:completion:]
-[PODaemonProcess saveUserConfiguration:forIdentifier:completion:]
-[PODaemonProcess userConfigurationForIdentifier:passwordContext:completion:]
-[PODaemonProcess resetStoredConfigurationWithCompletion:]
-[PODaemonProcess _initDataVaultIfNeededWithError:]
mobile
ExtensibleSSO
failed to check the state of datavault: %s
failed to convert to datavault: %s
IPHONE_SIMULATOR_ROOT
PODaemonProcess
osgn
oece
oecd
%s service %{public}@ on %@
Could not add tokens to keychain %{public}@
Error archiving meta data: %{public}@
Removing keychain entry returned %d
Finding keychain entry for service %{public}@
%s Could not find credentials in keychain. Invalid parameters on %@
Finding keychain entry failed with %d, %{public}@
Error unarchiving meta data: %{public}@
Deleting keychain entry for service %{public}@
Could not delete credentials from keychain, %{public}@
Deleting keychain entry failed with %d, %{public}@
Missing JWT parts: %{public}@
Incorrect number of JWT parts: %{public}@, %{public}@
Unsupported algorithm: %{public}@, %{public}@
Failed to decode signature: %{public}@
epk is missing or invalid: %{public}@
Error importing epk: %{public}@
aad is missing: %{public}@
iv is missing: %{public}@
cipher text is missing: %{public}@
tag data is missing: %{public}@
Header is missing epk: %{public}@
Error in SecKeyCopyKeyExchangeResult: %{public}@
Error decrypting: %{public}@, %{public}@
algorithm %{public}@ not found: %{public}@
failed to copy public key: %{public}@
missing required values: %{public}@
Header is missing: %{public}@
Error with SecKeyCreateRandomKey: %{public}@
Error with epk: %{public}@
Error with SecKeyCopyExternalRepresentation: %{public}@
Error with SecKeyCopyKeyExchangeResult: %{public}@
Error with SecRandomCopyBytes: %{public}@
Error with encoding ivData: %{public}@
Error with encoding header: %{public}@
Error with encoding body: %{public}@
Error with concatKDF: %{public}@
Error encrypting: %{public}@, %{public}@
%s  on %@
XPC error: %{public}@
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Error serializing config: %{public}@
Error deserializing config: %{public}@
retrieving sso tokens
Error retrieving tokens: %d, %{public}@
setting sso tokens
Error saving tokens: %d, %{public}@
Error removing tokens: %d, %{public}@
encryptPendingSSOTokens
encryption algorithm not supported:%{public}@
failed to encrypt tokens: %{public}@
decryptPendingSSOTokensUsingPrivateKey
failed to decrypt tokens: %{public}@
Error deserializing tokens: %{public}@
failed to retrieve extension identifier, %{public}@
failed to retrieve device configuration for extension identifier: %{public}@, %{public}@
key not found for extension identifier: %{public}ld, %{public}@, %{public}@
bundleIdentifier: CPCopyBundleIdentifierAndTeamFromAuditToken(): %{public}@
bundleIdentifier: CPCopyBundleIdentifierAndTeamFromAuditToken() failed, trying SecTaskCopySigningIdentifier()
bundleIdentifier: SecTaskCopySigningIdentifier() failed %{public}@
bundleIdentifier: %{public}@
bundleIdentifier: SecTaskCreateWithAuditToken() failed, %{public}@
No device configuration for extension: %{public}@, %{public}@
Caller is not current extension: %{public}@, %{public}@
No stored SSO Tokens.
missing device encryption key for extension identifier: %{public}@, %{public}@
missing device encryption public key:%{public}@
failed to remove tokens: %{public}@
failed to save tokens: %{public}@
failed to save configuration: %{public}@
No validated Platform SSO Profiles: %{public}@
Error validating login configuration, %{public}@
failed to save login configuration for extension identifier %{public}@, %{public}@
%s keyType = %{public}@ on %@
failed to save device configuration: %{public}@
failed to receive endpoint: %{public}@
failed to retrieve user configuration for extension identifier: %{public}@, %{public}@
failed to save user configuration: %{public}@
failed to retrieve user configuration for extension identifier: %{public}@
Error SecAccessControlCreateWithFlags: %{public}@
Error setting protection: %{public}@
Error SecKeyCreateRandomKey: %{public}@
Error SecKeyCreateWithData: %{public}@
Current altDSID: %{private}@
signing algorithm not supported: %{public}@
No data to sign: %{public}@
Error creating signature: %{public}@
No certificate string: %{public}@
Failed to base64 decode: %{public}@
Failed to create certificate: %{public}@
Failed to get public key: %{public}@
No signature to verify: %{public}@
No data to verify: %{public}@
Error verifying signature: %{public}@
PlatformSSO extension not found (%{public}@)
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginDeviceRegistrationUsingLoginManager completed, result = %{public}@
beginUserRegistrationUsingLoginManager completed, result = %{public}@
Platform SSO not enabled
Screen unlocked
PSSOAgentStartup
First Unlock
Network Changed
PSSONetworkChange
Not configured for Platform SSO
Rule already checked
Rule successfully checked
not a local account
Checking Login for user
%s user state = %{public}@ on %@
User state is needs authentication.
Tokens issued more than 4 hours ago
Tokens expire soon.
Kerberos cache not valid
User does not need authentication
User needs authentication
Auth in progress, skipping
no device configuration for extension: %{public}@, %{public}@
registration not complete %{public}@
no login configuration for extension: %{public}@, %{public}@
%s loginType = %{public}@ on %@
Password authentication
no user configuration for user: %{public}@, %{public}@
no user credential for user: %{public}@, %{public}@
PlatformSSO_PasswordAuth
loginResult = %{public}@
failed to save login tokens: %{public}@
Authentication completed successfully
Authentication failed with invalid credential
CredentialFailure
Authentication failed and needs repair
PermanentFailure
Authentication failed because network is unavailable
Unavailable
Authentication failed
Login failed:, %{public}@
User Secure Enclave key authentication
 enableTelemetry=YES 
PlatformSSO_UserSEPKeyAuth
ResultUnavailable
no user authentication during registration: %{public}@
Not a local account: %{public}@
Not a password user
no platform SSO Profiles: %{public}@
Sending login notification
error sending local notification: %{public}@
%s creating new device configuration on %@
Sending beginDeviceRegistration
registrationResult = %{public}@
PSSOUserRegistration
%s removing device and login configuration on %@
failed to remove device configuration: %{public}@
failed to remove login configuration: %{public}@
%s calling registrationDidComplete on %@
%s creating new user configuration on %@
Sending beginUserRegistration
%s registrationResult = %{public}@ on %@
failed to remove user configuration: %{public}@
%s removing user configuration on %@
registration previously failed, stopping
registration already in progress: %{public}@
Platform SSO extension not found: %{public}@, %{public}@
No supported authentication methods: %{public}@
PSSODeviceRegistration
Sending registration notification
configurationChanged
Configuration changed
no existing device configuration for extension: %{public}@
no existing user configuration for user: %{public}@, %{public}@
Removing registration
Platform SSO extension does not implement registration protocol: %{public}@, %{public}@
registration not in progress for extension: %{public}@, %{public}@
user interaction not allowed for extension: %{public}@, %{public}@
No login configuration for extension: %{public}@, %{public}@
%s kerberos extension = %{public}@, isNetworkConnected = %{public}@ on %@
Exchanging TGT for realm: %{public}@
Successfully imported Kerberos ticket for realm: %{public}@
Mapping Kerberos TGT for %{public}@
Invalid TGT data type: %{public}@, %{public}@
Importing Kerberos TGT for %{public}@
failed to import kerberos ticket: %{public}@, %{public}@
Exchanging Kerberos TGT for %{public}@
Notifying TGT delegate for realm: %{public}@
missing required values: %{public}@, %{public}@
Saving Pendint SSO Tokens
no user configuration: %{public}@
Refresh token timer set: %{public}@
%s state = %{public}@, failureCount = %{public}@ on %@
%{public}@, %{public}@
Starting password authentication
Login Configuration: %{public}@
Device Configuration: %{public}@
User Configuration: %{public}@
failed to create nonce request: %{public}@
Sending nonce request
PlatformSSO_NonceRequest
failed to retrieve nonce: %{public}@
failed to create embedded assertion JWT: %{public}@
failed to sign embedded assertion: %{public}@
failed to create login JWT: %{public}@
failed to create preauthentication request: %{public}@
Sending preauthentication request
PlatformSSO_PreauthenticationRequest
failed to retrieve preauthentication data: %{public}@
User is federated
User is NOT federated
failed to create mex request: %{public}@
Sending mex request
PlatformSSO_WSTrustMexRequest
failed to retrieve mex data: %{public}@
Success
federated idp does not support WSTrust 1.3 or 2005: %{public}@
failed to create WSTrust request: %{public}@
Sending WSTrust request
PlatformSSO_WSTrustRequest
failed to retrieve WSTrust response: %{public}@
Failed
Preauthentication request: %{private}@
Preauthentication request: %{public}@
Preauthentication response received
failed to retrieve Preauthentication response: %{public}@, %{public}@
failed to retrieve Preauthentication response: %{public}@
failed to retrieve Preauthentication response: %{public}ldd, %{public}@
Preauthentication response response received: %{public}@
failed to parse Preauthentication response response: %{public}@
Exception when evaluating federationPredicate: %{public}@
WSTrust Mex Request request: %{public}@
WSTrust Mex response received
failed to retrieve WSTrust Mex response: %{public}@, %{public}@
failed to retrieve WSTrust Mex response: %{public}@
failed to retrieve WSTrust Mex response: %{public}ldd, %{public}@
WSTrust Mex response response received: %{public}@
failed to find valid WSTrust values in mex response: %{public}@
Failed to created WSTrust login request: %{public}@
WSTrust login response received
failed to retrieve WSTrust login response: %{public}@, %{public}@
failed to retrieve WSTrust login response: %{public}@
failed to retrieve WSTrust login response: %{public}ldd, %{public}@
WSTrust login response response received
Failed to parse WSTrust login response: %{public}@
WSTrust login response validation failed: %{public}@
WSTrust login failed: %{public}@, %{public}@, %{public}@
WSTrust login response validation missing required values: %{public}@
failed to verify created: %{public}f, %{public}@
failed to verify expires: %{public}f, %{public}@
WSTrust login response missing TokenType: %{public}@
WSTrust login response validation missing assertion: %{public}@
failed to sign login request: %{public}@
failed to create login request: %{public}@
Sending login request
PlatformSSO_LoginRequest
Login response received
result=%lu
login request failed: %{public}@
failed to parse login response: %{public}@
unsupported login response algorithm and encryption: %{public}@, %{public}@,  %{public}@
failed to decrypt login response: %{public}@
failed to validate apu: %{public}@
failed to validate apv: %{public}@
no id_token in login response: %{public}@
no kid in login response id_token: %{public}@
JWKS response received
no key available with identifier: %{public}@, %{public}@
id_token signature check failed %{public}@
server nonce request: %{private}@
server nonce request: %{public}@
Nonce response received
failed to retrieve server nonce: %{public}@, %{public}@
failed to retrieve server nonce: %{public}@
failed to retrieve server nonce: %{public}ldd, %{public}@
server nonce response received: %{public}@
failed to parse server nonce response: %{public}@
audience missing from configuration: %{public}@
missing password or assertion: %{public}@
unable to use both password and assertion: %{public}@
failed to create request: %{public}@
Sending login request: %{public}@
failed to login: %{public}@, %{public}@
failed to login: %{public}@
failed to login: %{public}ld, %{public}@
Exception when evaluating invalidCredentialPredicate: %{public}@
Credentials are not correct
login response received: %{public}@
using cached jwks: %{public}@
PlatformSSO_JWKSRequest
JWKS network response received
error
failed
failed to login: %{public}ldd, %{public}@
success
jwks response received: %{public}@
failed to parse jwks response: %{public}@
failed to find key: %{public}@, %{public}@
failed to create key: %{public}@, %{public}@
failed to load key: %{public}@, %{public}@
Verifying id_token
validating id_token: %{private}@
unsupported id_token algorithm: %{public}@, %{public}@
failed to match nonce: %{public}@
failed to match issuer: %{public}@
audience does not contain client id: %{public}@
azp claim missing: %{public}@
failed to match audience: %{public}@
failed to match azp: %{public}@
failed to verify iat: %{public}f, %{public}@
failed to verify exp: %{public}f, %{public}@
failed to verify nbf: %{public}f, %{public}@
response missing apu: %{public}@
response missing epk: %{public}@
error with SecKeyCopyExternalRepresentation: %{public}@
error decoding apu: %{public}@
falied to validate apu: %{public}@
missing apv: %{public}@
error decoding apv: %{public}@
error with nonce data: %{public}@
falied to validate apv: %{public}@
Evaluating server trust
trustEvaluation failed: %{public}@
No root certificate: %{public}@
Root certificate is not in the system trust: %{public}@
HTTP Redirect received to %{public}@, canceling
%{public}@, is waiting for connectivity
Creating sample messages
Error: unable to create new XPath context
Error: unable to strdup namespaces list
Error: invalid namespaces list format
Error: unable to register NS with prefix="%s" and href="%s"
Error: unable to evaluate xpath expression "%s"
Error: failed to parse xml document
credential failure: %{public}@
Error with JWT header data: %{public}@
Error with dataRepresentation: %{public}@
Invalid key type: %{public}@
Error with external representation: %{public}@
Error with dataRepresentation length: %{public}@
requireRootCAInSystemTrustStore=%{public}s
forceKerberosTGTExchange=%{public}s
Error retrieving jwks data: %d, %{public}@
Error saving jwks data: %d, %{public}@
Error removing jwks data: %d, %{public}@
id for user %{public}@ not found: %{public}@
failed to retrieve user configuration: %{public}@
%s userName = %{public}@ on %@
loginType = %{public}@, tokensFresh = %{public}@, error = %{public}@
%s userName = %{public}@, passwordContext = %{public}@, updateLocalAccountPassword = %{public}@ on %@
PSSOPasswordLogin
loginResult = %{public}@, error = %{public}@
%s userName = %{public}@, passwordContext = %{public}@ on %@
PSSOSaveCredential
PSSOLocalLogin
PSSOScreenUnlock
screenDidUnlock called
Error creating POLoginConfiguration: %{public}@
failed to retrieve openid-configuration
failed to retrieve openid-configuration: %ldd
open id response received: %{public}@
failed to parse openid-configuration response
failed to create login configuration
Claims are not valid JSON: %{public}@
serialized configuration: %{public}@
WSTrust 1.3 found
WSTrust 2005 found
failed to load mex response: %{public}@
no WSTrust policies found
more than one wstrust policy found
checking %{public}@
transport for %{public}@ not http, skipping
no binding for found
url for %{public}@ not https, skipping
%s userID = %{public}@, login = %{public}@ on %@
Error with JWT body data: %{public}@
missing required entitlement
no credential for user: %{public}@, %{public}@
failed to get public key: %{public}@
failed to encrypt login tokens: %{public}@
failed to save user configuration for user: %{public}@, %{public}@
%s uid = %{public}d on %@
%s realm = %{public}@ on %@
failed to import TGT, %{public}@
%s Successful for realm = %{public}@ on %@
%s Success for realm = %{public}@ on %@
Error using cached credential: %{public}@
loginUserName saved
failed to save loginUserName: %{public}@
missing device encryption key:%{public}@
failed to parse sso tokens: %{public}@
removing tokens
tokens removed
failed to encode tokens to JSON: %{public}@
tokens saved
loginConfiguration saved
failed to save loginConfiguration: %{public}@
error with SecCertificateCopyData: %{public}@
failed to retrieve SecKeyProxyEndpoint: %{public}@
failed to create SecKey from SecKeyProxyEndpoint: %{public}@
failed to create SecIdentity from SecKeyProxyEndpoint: %{public}@
notify_register_check() failed with %u
notify_cancel() failed with %u
%s config version changed from from 0x%016llX to 0x%016llX on %@
%s config version increased from 0x%016llX to 0x%016llX (%{public}@) on %@
set config version to PlatformSSO unavailable
notify_get_state() failed with error %u
invalid notify token
notify_set_state() failed with error %u
notify_post() failed with error %u
Platform SSO is configured.
failed to find configuration files: %{public}@
failed to create trigger file: %{public}@
failed to set trigger file attributes: %{public}@
failed to remove trigger file: %{public}@
updating rules database
restoring rules database if needed
%s extension = %{public}@ on %@
error initializing data vault: %{public}@
no data to load: %{public}@
%s identifier = %{public}@ on %@
failed to write device config to disk: %{public}@
failed to set attributes: %{public}@
device config written to file: %{public}@
failed to write login config to disk: %{public}@
login config written to file: %{public}@
saving credential
failed to remove login configuration folder: %{public}@
failed to create configuration directory at %{public}@: %{public}@
created configuration directory at %{public}@
failed to check the state of datavault: %{public}s
failed to convert to datavault: %{public}s
successfully created datavault at %{public}@
failed to get the simulator root path
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
POXSBase64BinaryDefinition
POKeychainHelper
POXSSimpleTypeDefinition
POXSDefinitionProvider
NSObject
POJWT
POMutableJWT
POKeyWrap
POSOAPBody
PODaemonProtocol
PODaemonConnection
POXSTimeDefinition
POXSRawDataDefinition
POKerberosStatus
NSSecureCoding
NSCoding
POUserConfiguration
PODeviceConfiguration
POXSDateDefinition
POXSDefinition
NSCopying
POKeyBag
POXSDoubleDefinition
POExtensionAgentProcess
POServiceLoginManagerProtocol
POSecKeyHelper
PODirectoryServices
POKerberosMapping
POES256JWTSigningAlgorithm
POJWTSigningAlgorithm
POServiceLoginManagerConnection
SHA256
POExtension
SOExtensionDelegate
POExtensionRegistrationProtocol
POXSRedactionInformation
POXSComplexTypeDefinition
POAgentAuthenticationProcess
UNUserNotificationCenterDelegate
POExtensionDelegate
POAuthenticationProcess
NSURLSessionDelegate
NSURLSessionTaskDelegate
POXSDefinitions
POXSElement
POWSTrustBaseRequestType
POWSTrust13RequestSecurityTokenType
POWSTrust2005RequestSecurityTokenType
POWSTrustAppliesToType
POWSTrustEndpointReferenceType
POWSTrustActionType
POWSTrustMessageIDType
POWSTrustReplyToType
POWSTrustToType
POWSTrustRelatesToType
POWSTrustUsernameTokenType
POWSTrustSecurityType
POWSTrustTimestampType
POWSTrust13RequestSecurityTokenResponseCollectionType
POWSTrustRequestedSecurityTokenType
POWSTrust13RequestSecurityTokenResponseType
POWSTrust2005RequestSecurityTokenResponseType
POWSTrustKeyIdentifierType
POWSTrustSecurityTokenReferenceType
POWSTrustReferenceType
POSOAPEnvelope
POXSNullDefinition
POXMLContext
POXMLNode
POXMLXPathResult
POXMLXPathContext
POXMLHelper
POXSChoiceDefinition
POAlgorithm
POXSDurationDefinition
POConstantUtil
POAuthenticationContext
POCredentialUtil
POConcatKDF
POXSBooleanDefinition
POSOAPHeader
POAnalytics
POJWTHeader
POMutableJWTHeader
SOAPBaseDocument
POSOAPFaultDetail
POPreferences
POSOAPDocument
POXSIntegerDefinition
POXSDateFormatterFactory
POSOAPReason
POConfigurationManager
POJWKSStorageProvider
POAuthPluginProcess
PORegistrationContext
POXSNamespaces
POLoginConfiguration
print
POWSTrustRequest
POWSTrustResponse
POWSTrustMexResponse
POWSTrustProcess
POSOAPText
POXSDateTimeDefinition
POServiceProtocol
POServiceConnection
POJWTBody
POMutableJWTBody
POInternalProtocols
PORS256JWTSigningAlgorithm
POAgentProcess
POXSRFC3339DateDefinition
POSOAPFault
POKerberosEntry
POKerberosHelper
POLoginManager
POXSStringDefinition
POSOAPCode
POSOAPSubcode
POConfigurationVersion
POConfigurationUtil
POError
PODaemonProcess
Base64URL
Address
AppliesTo
Expires
Code
Subcode
Envelope
T@"NSArray",R,D
HTTPMethod
T@"NSString",&,N,V_realmKeyName
T@"NSURL",C,N,V_jwksEndpointURL
KeyIdentifier
Ti,V_authMethod
Password
XMLData
RequestSecurityTokenResponse
RequestedAttachedReference
_action
RequestedUnattachedReference
_customRefreshRequestBodyClaims
T#,R
_faultCodeValue
T@"<POAgentAuthenticationProcessKerberosDelegate>",W,V_kerberosDelegate
_header
T@"<SOHostExtensionContextProtocol>",&,V_hostExtensionContext
_kerberosHelper
T@"NSArray",&,D,N
_keyBag
T@"NSArray",C,N,V_Body
_mustUnderstand
T@"NSArray",C,N,V_customFederationUserPreauthenticationRequestValues
_repair
T@"NSArray",C,N,V_customNonceRequestValues
T@"NSArray",C,N,V_kerberosTicketMappings
_wsTrustVersion
T@"NSArray",R,C,N
_xmldoc
T@"NSData",&,D
T@"NSData",&,N,V__deviceSigningKeyData
analyticsForLoginConfiguration:
T@"NSData",&,N,V_sessionKey
T@"NSData",C,V__contextData
T@"NSData",R,C,N
bundleForClass:
T@"NSDate",&,D
content
T@"NSDate",&,N,V_Expires
T@"NSDate",&,N,V_expires
dateFromString:
T@"NSDate",&,V_lastAuthenticationAttempt
T@"NSDate",R,D
T@"NSDictionary",&,V_customAssertionRequestBodyClaims
expires
T@"NSDictionary",&,V_customLoginRequestBodyClaims
getLoginTypeForUser:completion:
T@"NSDictionary",&,V_customRefreshRequestBodyClaims
initWithString:
T@"NSDictionary",C,N
isFault
T@"NSDictionary",R,D
isProxy
T@"NSMutableData",&,D
isSpecifiedKeyForAttributeName:
T@"NSMutableData",&,V_passwordData
T@"NSMutableDictionary",&,V__analytics
jwksEndpointURL
T@"NSNotificationCenter",&,V_notificationCenter
T@"NSNumber",R,D
lowercaseString
T@"NSString",&,D
numberWithBool:
T@"NSString",&,N,V_action
T@"NSString",&,N,V_assertion
postAuthenticationNotification:
T@"NSString",&,N,V_clientNameKeyName
protectionSpace
T@"NSString",&,N,V_endpointURN
rawBody
T@"NSString",&,N,V_faultReason
release
T@"NSString",&,N,V_keyIdentifier
removeObserver:
T@"NSString",&,N,V_nonce
requireRootCAInSystemTrustStore
T@"NSString",&,N,V_requestIdentifier
setAlg:
T@"NSString",&,N,V_securityExtensionPrefix
setApv:
T@"NSString",&,N,V_serviceName
setAzp:
T@"NSString",&,N,V_sessionKeyKeyName
setCty:
T@"NSString",&,N,V_to
setDeviceEncryptionCertificate:
T@"NSString",&,N,V_tokenTypeNamespace
setEndpointURN:
T@"NSString",&,N,V_wsTrustFederationNonce
setExp:
T@"NSString",&,V_containerAppBundleIdentifier
setFaultstring:
T@"NSString",&,V_loginUserName
setIat:
T@"NSString",&,V_rawBody
setKid:
T@"NSString",&,V_rawEncryptedKey
setP2c:
T@"NSString",&,V_rawIV
setRequestType:
T@"NSString",&,V_realm
setServiceName:
T@"NSString",&,V_ticketKeyPath
setSub:
T@"NSString",&,V_userName
setUid:
T@"NSString",C,N,V_Id
setUse:
T@"NSString",C,N,V_Password
setX5t:
T@"NSString",C,N,V_TokenType
set_sepKeyData:
T@"NSString",C,N,V_Value
stringFromDate:
T@"NSString",C,N,V_accountDisplayName
taskDescription
T@"NSString",C,N,V_audience
T@"NSString",C,N,V_endpointURLString
T@"NSString",C,N,V_faultcode
version
T@"NSString",C,N,V_federationMexURLKeypath
.cxx_destruct
Created
Body
KeyType
EndpointReference
T@"NSArray",&,D
HTTPBody
T@"NSData",C,V_pendingSSOTokens
Header
T@"NSString",R,V_userIdentifier
JSONObjectWithData:options:error:
T@"POSOAPSubcode",&,N,V_Subcode
Lifetime
Reason
_Header
RequestType
_Reason
RequestedSecurityToken
_customLoginRequestHeaderClaims
SecurityTokenReference
_detail
T#,R,N,V_type
_federationType
T@"<POExtensionDelegate>",W,V_delegate
_issuer
T@"LAContext",&,V_credentialContext
_kerberosStatus
T@"NSArray",&,N,V_RequestSecurityTokenResponse
_keychainHelper
T@"NSArray",C,N,V_Header
_parseWSTrust13
T@"NSArray",C,N,V_customLoginRequestValues
_sepKey
T@"NSArray",C,N,V_customRefreshRequestValues
_userIdentifier
T@"NSArray",C,V_kerberosStatus
_wstrustProcess
T@"NSData",&
_xpathResultSet
T@"NSData",&,N,V__deviceEncryptionKeyData
allData
T@"NSData",&,N,V_messageBuffer
T@"NSData",&,V__sepKeyData
T@"NSData",C,V__credential
base64EncodedStringWithOptions:
T@"NSData",R,D
containsObject:
T@"NSDate",&,N,V_Created
created
T@"NSDate",&,N,V_created
dataWithLength:
T@"NSDate",&,N,V_tokenExpires
dealloc
T@"NSDate",R
encodeAndEncryptUsingPublicKey:
T@"NSDictionary",&,D
T@"NSDictionary",&,V_customAssertionRequestHeaderClaims
getBytes:range:
T@"NSDictionary",&,V_customLoginRequestHeaderClaims
T@"NSDictionary",&,V_customRefreshRequestHeaderClaims
isAtEnd
T@"NSDictionary",R
isInternalBuild
T@"NSMutableArray",&,V_keyProxies
isRetry
T@"NSMutableData",&,N,V_password
isUserRegisteredWithCompletion:
T@"NSMutableData",R,D
T@"NSMutableDictionary",&,V_data
keyWrap
T@"NSNumber",&,D
loginConfigurationForExtension:
T@"NSObject",&,V_authenticationObserver
T@"NSString",&,N
options
T@"NSString",&,N,V_apv
T@"NSString",&,N,V_clientName
process
T@"NSString",&,N,V_encryptionKeyTypeKeyName
psso_sha256Hash
T@"NSString",&,N,V_faultCodeValue
rawEncryptedKey
T@"NSString",&,N,V_faultSubCodeValue
removeAllDeliveredNotifications
T@"NSString",&,N,V_messageBufferKeyName
request
T@"NSString",&,N,V_realm
screenDidUnlock
T@"NSString",&,N,V_scope
setApu:
T@"NSString",&,N,V_serverNonce
setAud:
T@"NSString",&,N,V_serviceNameKeyName
setBindingName:
T@"NSString",&,N,V_ticketKeyPath
setDecodedBody:
T@"NSString",&,N,V_tokenType
setEnc:
T@"NSString",&,N,V_userName
setEpk:
T@"NSString",&,V_cacheName
setFaultReason:
T@"NSString",&,V_extensionIdentifier
setFirstUnlock:
T@"NSString",&,V_rawAuthenticationTag
setIss:
T@"NSString",&,V_rawCipherText
setNbf:
T@"NSString",&,V_rawHeader
setP2s:
T@"NSString",&,V_rawSignature
setServerNonce:
T@"NSString",&,V_registrationToken
setStringValue:
T@"NSString",&,V_upn
setTyp:
T@"NSString",C,N,V_Address
setUpn:
T@"NSString",C,N,V_KeyType
setX5c:
T@"NSString",C,N,V_RequestType
set_credential:
T@"NSString",C,N,V_Username
stringByAppendingPathComponent:
T@"NSString",C,N,V_ValueType
T@"NSString",C,N,V_additionalScopes
tokenExpiration
T@"NSString",C,N,V_bindingName
T@"NSString",C,N,V_faultactor
T@"NSString",C,N,V_faultstring
T@"NSString",C,N,V_federationPredicate
T@"NSString",C,N,V_federationRequestURN
T@"NSString",C,N,V_invalidCredentialPredicate
T@"NSString",C,N,V_mustUnderstand
T@"NSString",C,N,V_nonceResponseKeypath
T@"NSString",C,N,V_policyName
T@"NSString",C,N,V_portName
T@"NSString",C,N,V_previousRefreshTokenClaimName
T@"NSString",C,N,V_serverNonceClaimName
T@"NSString",C,N,V_stringValue
T@"NSString",C,V_loginUserName
T@"NSString",C,V_ssoExtensionIdentifier
T@"NSString",C,V_uniqueIdentifier
T@"NSString",R,C
T@"NSString",R,C,N
T@"NSString",R,C,N,V_contentPropertyName
T@"NSString",R,C,N,V_elementName
T@"NSString",R,C,N,V_namespaceURI
T@"NSString",R,D
T@"NSString",R,N,V_clientID
T@"NSString",R,N,V_issuer
T@"NSString",R,V_userName
T@"NSTimer",&,V_authenticationTimer
T@"NSURL",&,N,V_wsTrustFederationMexURL
T@"NSURL",&,N,V_wsTrustFederationURL
T@"NSURL",C,N,V_federationMexURL
T@"NSURL",C,N,V_federationUserPreauthenticationURL
T@"NSURL",C,N,V_nonceEndpointURL
T@"NSURL",C,N,V_refreshEndpointURL
T@"NSURL",C,N,V_tokenEndpointURL
T@"NSURLSession",&,N,V_urlSession
T@"NSXPCConnection",&,V_xpcConnection
T@"POAgentAuthenticationProcess",&,V_agentProcess
T@"POAgentAuthenticationProcess",&,V_process
T@"POAuthenticationProcess",&,V_authenticationProcess
T@"POConfigurationManager",&,V_configurationManager
T@"POConfigurationVersion",&,V_version
T@"PODeviceConfiguration",R,V_currentDeviceConfiguration
T@"PODirectoryServices",&,V_directoryServices
T@"POExtension",&,V_ssoExtension
T@"POJWTBody",&,V_decodedBody
T@"POJWTHeader",&,V_decodedHeader
T@"POKerberosHelper",&,V_kerberosHelper
T@"POKeyBag",&,V_keyBag
T@"POKeyWrap",&,V_keyWrap
T@"POKeychainHelper",&,V_keychainHelper
T@"POLoginConfiguration",R,C,N
T@"POLoginConfiguration",R,V_currentLoginConfiguration
T@"POMutableJWTBody",&,V_body
T@"POMutableJWTHeader",&,V_header
T@"PORegistrationContext",&,V_registrationContext
T@"POSOAPCode",&,N,V_Code
T@"POSOAPEnvelope",&,N,V_Envelope
T@"POSOAPFaultDetail",&,N,V_detail
T@"POSOAPReason",&,N,V_Reason
T@"POSOAPText",&,N,V_Text
T@"POUserConfiguration",R,V_currentUserConfiguration
T@"POWSTrustAppliesToType",&,N,V_AppliesTo
T@"POWSTrustEndpointReferenceType",&,N,V_EndpointReference
T@"POWSTrustKeyIdentifierType",&,N,V_KeyIdentifier
T@"POWSTrustProcess",&,N,V_wstrustProcess
T@"POWSTrustReferenceType",&,N,V_RequestedAttachedReference
T@"POWSTrustReferenceType",&,N,V_RequestedUnattachedReference
T@"POWSTrustRequestedSecurityTokenType",&,N,V_RequestedSecurityToken
T@"POWSTrustSecurityTokenReferenceType",&,N,V_SecurityTokenReference
T@"POWSTrustTimestampType",&,N,V_Lifetime
T@"POWSTrustTimestampType",&,N,V_Timestamp
T@"POWSTrustUsernameTokenType",&,N,V_UsernameToken
T@"POXMLContext",&,N,V_xmldocContext
T@"POXMLXPathContext",&,N,V_xpathContext
T@"POXMLXPathResult",&,N,V_xpathResultSet
T@"SOConfigurationHost",&,V_configurationHost
T@"SOExtensionManager",&,V_extensionManager
T@"UNUserNotificationCenter",&,V_userNotificationCenter
T@?,C,V_authenticationCompletion
T@?,C,V_invalidationHandler
T@?,C,V_startupCompletion
T@?,C,V_unlockCompletion
TB,GisRepair,V_repair
TB,GisRetry,V_retry
TB,N,GisFault,V_fault
TB,N,V_federated
TB,N,V_includePreviousRefreshTokenInLoginRequest
TB,N,V_parseWSTrust13
TB,N,V_parseWSTrust2005
TB,N,V_waitForConnectivity
TB,R
TB,R,D,GisJWE
TB,R,GisDeviceRegistered
TB,R,GisUserRegistered
TB,R,N
TB,V_dataVaultInitialized
TB,V_exchangeRequired
TB,V_firstUnlock
TB,V_forLogin
TB,V_importSuccessful
TB,V_localAccount
TB,V_platformSSOActive
TB,V_registrationCompleted
TB,V_registrationFailed
TB,V_resetKeys
TB,V_userNotified
TGTReceivedForRealm:upn:cache:
TGTRequestDidBegin
TGTRequestDidComplete
TI,V_uid
TQ,N,V_federationType
TQ,N,V_version
TQ,R
TQ,V_loginType
TQ,V_options
TQ,V_wsTrustVersion
T^{__SecCertificate=},N,V_deviceEncryptionCertificate
T^{__SecCertificate=},N,V_deviceSigningCertificate
T^{__SecCertificate=},N,V_sepKeyCertificate
T^{__SecCertificate=},R,N,V_deviceAttestationCertificate
T^{__SecIdentity=},R,D
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},V_sepKey
T^{__SecKey=},N,V_deviceEncryptionKey
T^{__SecKey=},N,V_deviceSigningKey
T^{_xmlDoc=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}ii^{_xmlDtd}^{_xmlDtd}^{_xmlNs}**^v^v*i^{_xmlDict}^vii},N,V_xmldoc
T^{_xmlNode=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}^{_xmlNs}*^{_xmlAttr}^{_xmlNs}^vSS},N,V_node
T^{_xmlXPathContext=^{_xmlDoc}^{_xmlNode}ii^{_xmlHashTable}ii^{_xmlXPathType}ii^{_xmlHashTable}ii^{_xmlXPathAxis}^^{_xmlNs}i^viii^{_xmlNode}^{_xmlNode}^{_xmlHashTable}^?^v^v**^?^v^^{_xmlNs}i^v^?{_xmlError=ii*i*i***ii^v^v}^{_xmlNode}^{_xmlDict}i^vQQi},N,V_xpathCtx
T^{_xmlXPathObject=i^{_xmlNodeSet}id*^vi^vi},N,V_xpathObj
Text
Ti,N,V_encryptionKeyType
Ti,V_failureCount
Timestamp
TokenType
Tq,R,N
Tq,V_state
URLByAppendingPathComponent:
URLPrefix
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSessionDidFinishEventsForBackgroundURLSession:
URLWithString:
UTF8String
UUID
UUIDString
Username
UsernameToken
Value
ValueType
XMLDataWithOptions:
XMLString
XMLStringWithOptions:
_Address
_AppliesTo
_Body
_Code
_Created
_EndpointReference
_Envelope
_Expires
_KeyIdentifier
_KeyType
_Lifetime
_Password
_RequestSecurityTokenResponse
_RequestType
_RequestedAttachedReference
_RequestedSecurityToken
_RequestedUnattachedReference
_SecurityTokenReference
_Subcode
_Text
_Timestamp
_TokenType
_Username
_UsernameToken
_Value
_ValueType
_XMLAttributeStringWithPrefix:name:value:options:appendingToString:
_XMLAttributesStringWithComplexType:options:appendingToString:
_XMLQualifiedNameForNamespace:elementName:options:appendingToString:
_XMLStringWithComplexType:options:appendingToString:
_XMLStringWithOptions:appendingToString:
__analytics
__contextData
__credential
__deviceEncryptionKeyData
__deviceSigningKeyData
__sepKeyData
_accountDisplayName
_additionalScopes
_agentProcess
_analytics
_apv
_assertion
_attributeAttributes
_attributeForName:ofAttributeWithName:
_attributeForName:ofElementWithName:
_attributeForName:ofNodeWithName:attributes:
_attributes
_audience
_authMethod
_authenticationCompletion
_authenticationObserver
_authenticationProcess
_authenticationTimer
_bindingName
_body
_cacheName
_clientID
_clientName
_clientNameKeyName
_configurationHost
_configurationManager
_connectToService
_containerAppBundleIdentifier
_contentPropertyName
_contextData
_created
_credential
_credentialContext
_currentDeviceConfiguration
_currentLoginConfiguration
_currentUserConfiguration
_customAssertionRequestBodyClaims
_customAssertionRequestHeaderClaims
_customFederationUserPreauthenticationRequestValues
_customLoginRequestBodyClaims
_customLoginRequestValues
_customNonceRequestValues
_customRefreshRequestHeaderClaims
_customRefreshRequestValues
_data
_dataVaultInitialized
_decodedBody
_decodedHeader
_defaultConfigurationPath
_delegate
_descriptionForValue:prefix:
_deviceAttestationCertificate
_deviceEncryptionCertificate
_deviceEncryptionKey
_deviceEncryptionKeyData
_deviceSigningCertificate
_deviceSigningKey
_deviceSigningKeyData
_directoryServices
_elementAttributes
_elementName
_elements
_encryptionKeyType
_encryptionKeyTypeKeyName
_endpointURLString
_endpointURN
_exchangeRequired
_expires
_extension
_extensionIdentifier
_extensionManager
_extensionViewController
_failureCount
_fault
_faultReason
_faultSubCodeValue
_faultactor
_faultcode
_faultstring
_federated
_federationMexURL
_federationMexURLKeypath
_federationPredicate
_federationRequestURN
_federationUserPreauthenticationURL
_firstUnlock
_forLogin
_hostExtensionContext
_importSuccessful
_includePreviousRefreshTokenInLoginRequest
_initDataVaultIfNeededWithError:
_initWithClientId:issuer:tokenEndpointURL:jwksEndpointURL:audience:
_invalidCredentialPredicate
_invalidationHandler
_items
_jwksEndpointURL
_kerberosDelegate
_kerberosTicketMappings
_keyIdentifier
_keyProxies
_keyWrap
_lastAuthenticationAttempt
_localAccount
_loginType
_loginUserName
_messageBuffer
_messageBufferKeyName
_namespaceURI
_namespaces
_node
_nonce
_nonceEndpointURL
_nonceResponseKeypath
_notificationCenter
_notifyToken
_options
_parseWSTrust2005
_password
_passwordData
_pendingSSOTokens
_performDynamicWSTrustPasswordLoginWithContext:loginConfiguration:deviceConfiguration:userConfiguration:jwksStorageProvider:userName:password:completion:
_performPasswordLoginWithContext:loginConfiguration:deviceConfiguration:userConfiguration:jwksStorageProvider:userName:password:completion:
_performWSTrustPasswordLoginWithContext:loginConfiguration:deviceConfiguration:userConfiguration:jwksStorageProvider:userName:password:completion:
_platformSSOActive
_policyName
_portName
_previousRefreshTokenClaimName
_process
_properties
_rawAuthenticationTag
_rawBody
_rawCipherText
_rawEncryptedKey
_rawHeader
_rawIV
_rawSignature
_realm
_realmKeyName
_refreshEndpointURL
_registrationCompleted
_registrationContext
_registrationFailed
_registrationToken
_requestIdentifier
_resetKeys
_retry
_scope
_securityExtensionPrefix
_sepKeyCertificate
_sepKeyData
_serverNonce
_serverNonceClaimName
_serviceConnection
_serviceName
_serviceNameKeyName
_sessionKey
_sessionKeyKeyName
_setAttribute:forName:ofAttributeWithName:
_setAttribute:forName:ofElementWithName:
_setAttribute:forName:ofNodeWithName:attributes:
_setQueue:
_setStateAndNotify:
_setTargetUserIdentifier:
_ssoExtension
_ssoExtensionIdentifier
_startDeviceRegistration
_startUserRegistration
_startupCompletion
_state
_stringSuitableForHTML:
_stringValue
_ticketKeyPath
_token
_tokenEndpointURL
_tokenExpires
_tokenType
_tokenTypeNamespace
_type
_types
_uid
_uniqueIdentifier
_unlockCompletion
_upn
_urlSession
_userName
_userNotificationCenter
_userNotified
_version
_waitForConnectivity
_wsTrustFederationMexURL
_wsTrustFederationNonce
_wsTrustFederationURL
_xmldocContext
_xpathContext
_xpathCtx
_xpathObj
_xpcConnection
absoluteString
accountDisplayName
acquireCredentialForUUID:
action
actionIdentifier
actionWithIdentifier:title:options:
addAttributeWithName:type:
addAttributeWithName:type:isSpecifiedKey:
addAttributeWithName:type:namespaceURI:
addCharactersInRange:
addCharactersInString:
addCustomClaims:
addElementWithName:namespaceURI:type:
addElementWithName:namespaceURI:type:isSpecifiedKey:
addElementWithName:namespaceURI:type:maxOccurs:minOccurs:
addElementWithName:namespaceURI:type:maxOccurs:minOccurs:flattenMultiValue:
addEntriesFromDictionary:
addEphemeralPublicKey:
addEvent:
addEvent:forKeyType:
addNamespaceWithURI:
addNotificationRequest:withCompletionHandler:
addObject:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addTimer:forMode:
addTokens:metaData:toKeychainForService:username:
addUnboundedElementWithName:namespaceURI:type:
addValue:forHTTPHeaderField:
additionalScopes
agentProcess
algorithmWithIdentifier:
allHTTPHeaderFields
allObjects
allValues
allocWithZone:
allowedElementKeys
alternateDSID
analyticsForLoginManager:
analyticsForLoginType:result:
analyticsForPasswordChange:credentialNeeded:result:
analyticsForRegistrationType:options:result:
analyticsForStatus
analyticsForTestMessages
appSSOEnabled
appendBytes:length:
appendData:
appendFormat:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithObjects:count:
assertion
attestKey:clientDataHash:completion:
attributes
audArray
audience
auditToken
authMethod
authenticationCompletion
authenticationMethod
authenticationMethods
authenticationObserver
authenticationProcess
authenticationTimer
authorization:didCompleteWithCredential:error:
autorelease
beginDeviceRegistrationUsingOptions:completion:
beginUserRegistrationUsingUserName:authenticationMethod:options:completion:
bindingName
body
bodyData
boolValue
boolValueForKey:defaultValue:
bundleIdentiferForXPCConnection:
bytes
cacheName
calculateExpirationForTokens:
calendar
canPerformRegistration
canPerformRegistrationCompletion:
categoryIdentifier
categoryWithIdentifier:actions:intentIdentifiers:options:
certificateForData:
characterAtIndex:
characterSetWithCharactersInString:
checkForValidKerberosTGT:
checkVersion
class
clientID
clientName
clientNameKeyName
client_id
components:fromDate:
componentsSeparatedByString:
componentsWithString:
concatKDFWithKey:algorithm:partyUInfo:partyVInfo:
configurationChanged:
configurationHost
configurationManager
configurationWithOpenIdConfigurationURL:clientID:issuer:completion:
configurationWithOpenIdConfigurationURL:identityProviderURL:clientId:issuer:completion:
conformsToProtocol:
connectionInvalidated
containerAppBundleIdentifier
contentPropertyName
contentsOfDirectoryAtPath:error:
copy
copyDeviceAttestationCertificate
copyDeviceAttestationCertificateWithCompletion:
copyIdentityForKeyType:
copyKeyForKeyType:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAuthenticationContextUsingLoginConfiguration:deviceConfiguration:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createEmbeddedAssertionWithContext:loginConfiguration:userName:signingKey:
createIdentityFromEndpoint:error:
createKeyFromEndpoint:error:
createLoginJWTWithContext:loginConfiguration:userConfiguration:userName:password:embeddedAssertion:
createLoginRequestWithContext:loginConfiguration:jwt:
createNonceRequestWithContext:loginConfiguration:
createPartyVInfoWithContext:apvKey:
createPreAuthenticationRequestWithContext:loginConfiguration:userName:
createRegistrationNotificationWithAccountName:
createSEPKeyForKeyType:
createSignInNotificationWithAccountName:extensionIdentifier:
createTestMessagesForLoginConfiguration:certificate:
createUserAccount:passwordContext:
createUserAccount:passwordContext:completion:
createWSTrust13Request:
createWSTrust13RequestWithContext:loginConfiguration:userName:password:
createWSTrust13Response:
createWSTrust2005Request:
createWSTrust2005RequestWithContext:loginConfiguration:userName:password:
createWSTrust2005Response:
createWSTrustFault:
createWSTrustMexRequestWithContext:loginConfiguration:
credentialContext
credentialOfType:reply:
currentDeviceConfiguration
currentLoginConfiguration
currentRefreshToken
currentRunLoop
currentUser
currentUserConfiguration
customAssertionRequestBodyClaims
customAssertionRequestHeaderClaims
customFederationUserPreauthenticationRequestValues
customLoginRequestBodyClaims
customLoginRequestHeaderClaims
customLoginRequestValues
customNonceRequestValues
customRefreshRequestBodyClaims
customRefreshRequestHeaderClaims
customRefreshRequestValues
data
dataForCertificate:
dataForKey:
dataRepresentation
dataRepresentationForDisplay:
dataTaskWithRequest:completionHandler:
dataTaskWithURL:completionHandler:
dataUsingEncoding:
dataVaultInitialized
dataWithBytes:length:
dataWithContentsOfURL:
dataWithJSONObject:options:error:
date
dateByAddingTimeInterval:
dateFromComponents:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
debugDescription
decodeAndDecryptUsingPrivateKey:
decodeAndDecryptUsingPrivateKey:apvString:
decodeEphemeralPublicKey
decodeObjectOfClass:forKey:
decodedBody
decodedHeader
decryptPendingSSOTokensUsingPrivateKey:
defaultCenter
defaultManager
definition
definitionForType:
delegate
description
descriptionForValue:
detail
deviceAttestationCertificate
deviceConfigurationForExtension:
deviceConfigurationForExtension:completion:
deviceEncryptionCertificate
deviceEncryptionIdentity
deviceEncryptionKey
deviceRegistered
deviceRegistrationsNeedsRepair
deviceRegistrationsNeedsRepairWithCompletion:
deviceSigningCertificate
deviceSigningIdentity
deviceSigningKey
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
directoryServices
disablePlatformSSORuleForScreensaver:
doubleValue
effectiveUserIdentifier
elementForValue:
elementName
elements
elementsNeedRedaction
enablePlatformSSORuleForScreensaver:
enableScreensaverRuleIfNeeded:
encodeAndEncryptUsingPublicKey:partyVInfo:
encodeAndSignUsingAlgorithm:key:certificate:
encodeObject:forKey:
encodeWithCoder:
encryptPendingSSOTokens:usingPublicKey:
encryptionKeyType
encryptionKeyTypeKeyName
endpoint
endpointURLString
endpointURN
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
ephemeralSessionConfiguration
errorWithCode:
errorWithCode:underlyingError:
errorWithCode:underlyingError:description:
errorWithDomain:code:userInfo:
evaluateWithObject:
evaluateXPath:
exchangeKerberosTGTForEntry:
exchangeRequired
exchangeTGTForStatus:
expires_in
expires_on
extensionBundleIdentifier
extensionIdentifier
extensionManager
externalizedContext
failureCount
fault
faultCodeValue
faultReason
faultSubCodeValue
faultactor
faultcode
faultstring
federated
federationMexURL
federationMexURLKeypath
federationPredicate
federationRequestURN
federationType
federationUserPreauthenticationURL
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileSystemRepresentation
fileURLWithPath:
findKey:inJWKSData:
firstObject
firstUnlock
flattenMultiValueElementWithName:
forLogin
forceKerberosTGTExchange
getCharacters:
getLoginTypeForUser:tokensFresh:
grant_type
handleAgentStartup
handleConfigurationChanged:
handleDeviceAndUserRegistrationForRepair:
handleDeviceAndUserRegistrationForRepair:notified:
handleDeviceRegistrationNotification
handleKerberosMappingForTokens:extensionIdentifier:userConfiguration:
handleKerberosMappingForTokens:loginConfiguration:userConfiguration:
handleNetworkChange
handlePendingSSOTokens
handleRegistrationViewControllerForExtensionIdentifier:completion:
handleRemovingRegistrationForExtension:
handleScreenSaverRule
handleScreenUnlock
handleUnfinishedTGTExchanges
handleUserCredentialNeededAtLogin:
handleUserCredentialNeededAtLogin:returningContext:
handleUserNeedsReauthenticationAfterDelay:
handleUserRegistrationForUser:repair:
handleUserRegistrationForUser:repair:notified:
handleUserRegistrationNotification
hasAllRequiredValues
hasAnyMDMProfileForExtension:
hasPrefix:
hasSuffix:
hash
header
host
hostExtensionContext
iconForApplicationIdentifier:
id_token
identifier
identityForKey:andCertificate:
identityForKeyType:
importKerberosEntry:error:
importSuccessful
includePreviousRefreshTokenInLoginRequest
increaseVersionWithMessage:
init
initWithAuthenticationProcess:
initWithBase64EncodedString:options:
initWithBundleIdentifier:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCalendarIdentifier:
initWithClientID:issuer:tokenEndpointURL:jwksEndpointURL:audience:
initWithCoder:
initWithData:
initWithData:contextData:
initWithData:encoding:
initWithDelegate:
initWithDictionary:
initWithDomain:code:userInfo:
initWithElementName:namespaceURI:type:
initWithExtensionBundleIdentifier:
initWithExternalizedContext:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithIdentity:
initWithJWTData:
initWithKey:
initWithKeyOptions:valueOptions:capacity:
initWithLocaleIdentifier:
initWithMachServiceName:options:
initWithName:
initWithTrust:
initWithURL:cachePolicy:timeoutInterval:
initWithURL:resolvingAgainstBaseURL:
initWithUUIDString:
initWithUid:forLogin:
initWithUserName:
initWithXMLContext:
initWithXPCConnection:
initWithXPCConnection:authenticationProcess:
initialize
intValue
integerValue
interfaceWithInternalProtocol:
interfaceWithProtocol:
internalErrorWithMessage:
invalidCredentialPredicate
invalidate
invalidateAllKeyProxies
invalidationHandler
invert
isAssociatedDomainValidated
isCallerCurrentSSOExtension
isCredentialFault
isCurrentSSOExtension:
isDeviceRegistered
isDeviceRegisteredWithCompletion:
isEqual:
isEqualToData:
isEqualToString:
isEqualToTimeZone:
isJWE
isKindOfClass:
isMemberOfClass:
isNetworkConnectedForRealm:
isRealmConfiguredForKerberosExtension:
isRepair
isSpecifiedKeyForElementName:
isSubclassOfClass:
isURL:validForProfile:
isUserKeybagUnlocked
isUserNotification
isUserRegistered
isValidJSONObject:
issuer
jwksCache
jwksCacheForExtensionIdentifier:
kerberosDelegate
kerberosHelper
kerberosStatus
kerberosTicketMappings
keyBag
keyForData:
keyIdentifier
keyProxies
keyProxyEndpointForKeyType:
keychainHelper
lastAuthenticationAttempt
lastObject
length
loadConfiguration
loadExtensionWithBundleIdentifier:
loadSSOExtensionWithExtensionBundleIdentifier:
loadXMLDocument:
localAccount
localizedStringForKey:value:table:
localizedStringWithFormat:
loginConfiguration
loginConfigurationForExtension:completion:
loginConfigurationWithCompletion:
loginType
loginUserName
loginUserNameWithCompletion:
longLongValue
maxCountForElementName:
messageBuffer
messageBufferKeyName
minCountForElementName:
mustUnderstand
mutableBytes
mutableCopy
mutableCopyWithZone:
name
nameSpacePrefixForHref:
namespaceForAttributeName:
namespaceURI
namespaces
newDateFormatter
newDateFormatters
newDateTimeFormatterWithTimeZoneStyle:
newDateTimeFormatters
newTimeFormatterWithTimeZoneStyle:
newTimeFormatters
node
nodeCount
nodes
nonce
nonceEndpointURL
nonceResponseKeypath
notification
notificationCenter
notifyKerberosDelegateTGTDidBegin
notifyKerberosDelegateTGTDidComplete
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
operatingSystemVersionString
parent
parseMexResponse:namespaces:policyXPath:action:
parseWSTrust13
parseWSTrust2005
parseWSTrustMexResponse:version:
parseWSTrustRequest:version:
parseWSTrustResponse:version:
password
passwordData
passwordDataFromContext:error:
passwordStringFromData:
path
pendingSSOTokens
percentEncodedQuery
performLocalPasswordLogin:passwordContext:
performLocalPasswordLogin:passwordContext:completion:
performLoginForCurrentUser
performLoginRequestWithContext:loginConfiguration:request:completion:
performLoginWithContext:loginConfiguration:deviceConfiguration:jwksStorageProvider:loginJWT:completion:
performNonceRequestWithContext:loginConfiguration:request:completion:
performPasswordLogin:passwordContext:updateLocalAccountPassword:
performPasswordLogin:passwordContext:updateLocalAccountPassword:completion:
performPasswordLoginUsingLoginConfiguration:deviceConfiguration:userConfiguration:jwksStorageProvider:userName:password:completion:
performPreAuthenticationRequestWithContext:loginConfiguration:request:completion:
performSEPKeyLogin:
performSEPKeyLogin:completion:
performSEPKeyLoginUsingLoginConfiguration:deviceConfiguration:userConfiguration:jwksStorageProvider:userName:signingKey:certificate:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTokenRefreshUsingLoginConfiguration:deviceConfiguration:userConfiguration:refreshToken:signingKey:completion:
performWSTrustAuthenticationRequestWithContext:loginConfiguration:request:completion:
performWSTrustMexRequestWithContext:loginConfiguration:request:completion:
platformSSOActive
platformSSOEnabled
platformSSOTriggerFile
policyName
portName
postNotificationName:object:userInfo:
predicateWithFormat:
prefixForNamespaceURI:
presentAuthorizationViewControllerWithHints:completion:
presentAuthorizationViewControllerWithHints:requestIdentifier:completion:
presentRegistrationViewControllerWithCompletion:
previousRefreshTokenClaimName
printKey:
processInfo
promptUserForRegistration
propertyForName:
pssoAuthenticationMethod
pssoRegistrationToken
psso_DisplayRequest
psso_base64URLEncodedString
psso_initWithBase64URLEncodedString:
psso_sha256HashString
queryItemWithName:value:
queryItems
rangeOfCharacterFromSet:options:range:
rangeOfString:
rawAuthenticationTag
rawCipherText
rawHeader
rawIV
rawSignature
rawXMLString
realm
realmKeyName
refreshEndpointURL
refresh_token
refresh_token_expires_in
registerNamespaces:
registrationCompleted
registrationContext
registrationDidComplete
registrationFailed
registrationToken
registrationTokenForExtensionIdentifier:
registrationTokenWithCompletion:
remoteObjectProxyWithErrorHandler:
removeAllPendingNotificationRequests
removeDelegateForRequestIdentifier:
removeDeliveredNotificationsWithIdentifiers:
removeDeviceConfigurationForExtension:
removeDeviceConfigurationForExtension:completion:
removeItemAtPath:error:
removeItemAtURL:error:
removeLoginConfigurationForExtension:
removeLoginConfigurationForExtension:completion:
removeObject:
removeObjectForKey:
removePendingNotificationRequestsWithIdentifiers:
removeTokensFromKeychainWithService:username:
removeUserConfigurationForIdentifier:completion:
removeUserConfigurationForUserName:
repair
requestAuthorizationViewControllerWithCompletion:
requestDidCompleteWithError:
requestIdentifier
requestReauthenticationWithCompletion:
requestReauthenticationWithRequestIdentifier:completion:
requestUserAuthenticationWithUserInfo:
requestUserAuthenticationWithWindow:completion:
requestWithIdentifier:content:trigger:destinations:
request_nonce
reset
resetKeys
resetKeysWithCompletion:
resetStoredConfiguration
resetStoredConfigurationWithCompletion:
respondsToSelector:
restoreScreensaverRuleIfNeeded
resume
retain
retainCount
retrieveSigningKeyWithContext:loginConfiguration:jwksStorageProvider:keyId:completion:
retrieveTokensFromKeychainForService:username:returningTokens:metaData:
retry
saveCertificate:keyType:
saveConfiguration
saveCredentialForUserName:passwordContext:
saveCredentialForUserName:passwordContext:completion:
saveCurrentUserConfiguration
saveDelegate:forRequestIdentifier:
saveDeviceConfiguration:forExtension:
saveDeviceConfiguration:forExtension:completion:
saveLoginConfiguration:error:
saveLoginConfiguration:forExtension:
saveLoginConfiguration:forExtension:completion:
saveUserConfiguration:forIdentifier:completion:
saveUserConfiguration:forUserName:
scanDouble:
scanLocation
scanString:intoString:
scope
screenDidUnlockWithCompletion:
secIdentityProxyEndpointForKeyType:completion:
secKeyProxyEndpointForKeyType:completion:
securityExtensionPrefix
self
sepKey
sepKeyCertificate
serverNonce
serverNonceClaimName
serverTrust
serviceName
serviceNameKeyName
sessionKey
sessionKeyKeyName
sessionWithConfiguration:
sessionWithConfiguration:delegate:delegateQueue:
setAccountDisplayName:
setAction:
setAdditionalScopes:
setAddress:
setAgentProcess:
setAppliesTo:
setAssertion:
setAttributes:ofItemAtPath:error:
setAudArray:
setAudience:
setAuthMethod:
setAuthenticationCompletion:
setAuthenticationObserver:
setAuthenticationProcess:
setAuthenticationTimer:
setBody:
setBodyData:
setCacheName:
setCategoryIdentifier:
setCertificateData:keyType:completion:
setClientName:
setClientNameKeyName:
setClient_id:
setCode:
setConfigurationHost:
setConfigurationManager:
setContainerAppBundleIdentifier:
setContentPropertyName:type:
setCreated:
setCredential:type:
setCredentialContext:
setCustomAssertionRequestBodyClaims:
setCustomAssertionRequestBodyClaims:returningError:
setCustomAssertionRequestHeaderClaims:
setCustomAssertionRequestHeaderClaims:returningError:
setCustomFederationUserPreauthenticationRequestValues:
setCustomLoginRequestBodyClaims:
setCustomLoginRequestBodyClaims:returningError:
setCustomLoginRequestHeaderClaims:
setCustomLoginRequestHeaderClaims:returningError:
setCustomLoginRequestValues:
setCustomNonceRequestValues:
setCustomRefreshRequestBodyClaims:
setCustomRefreshRequestBodyClaims:returningError:
setCustomRefreshRequestHeaderClaims:
setCustomRefreshRequestHeaderClaims:returningError:
setCustomRefreshRequestValues:
setData:
setDataVaultInitialized:
setDateFormat:
setDecodedHeader:
setDelegate:
setDetail:
setDeviceEncryptionKey:
setDeviceSigningCertificate:
setDeviceSigningKey:
setDirectoryServices:
setEncryptionKeyType:
setEncryptionKeyTypeKeyName:
setEndpointReference:
setEndpointURLString:
setEnvelope:
setExchangeRequired:
setExpires:
setExpires_in:
setExpires_on:
setExtensionIdentifier:
setExtensionManager:
setFailureCount:
setFault:
setFaultCodeValue:
setFaultSubCodeValue:
setFaultactor:
setFaultcode:
setFederated:
setFederationMexURL:
setFederationMexURLKeypath:
setFederationPredicate:
setFederationRequestURN:
setFederationType:
setFederationUserPreauthenticationURL:
setForLogin:
setFormatOptions:
setFragment:
setGrant_type:
setHTTPBody:
setHTTPMethod:
setHeader:
setHostExtensionContext:
setIcon:
setId:
setId_token:
setImportSuccessful:
setIncludePreviousRefreshTokenInLoginRequest:
setInterruptionHandler:
setInterruptionLevel:
setInvalidCredentialPredicate:
setInvalidationHandler:
setIsSpecifiedKey:onElementWithName:
setJwksCache:
setJwksCache:forExtensionIdentifier:
setJwksEndpointURL:
setKerberosDelegate:
setKerberosHelper:
setKerberosStatus:
setKerberosTicketMappings:
setKeyBag:
setKeyIdentifier:
setKeyProxies:
setKeyType:
setKeyWrap:
setKeychainHelper:
setLastAuthenticationAttempt:
setLenient:
setLifetime:
setLocalAccount:
setLocale:
setLoginConfiguration:completion:
setLoginType:
setLoginUserName:
setLoginUserName:completion:
setMessageBuffer:
setMessageBufferKeyName:
setMustUnderstand:
setName:namespaceURI:forType:
setNode:
setNonce:
setNonceEndpointURL:
setNonceResponseKeypath:
setNotificationCategories:
setNotificationCenter:
setObject:forKey:
setObject:forKeyedSubscript:
setOptions:
setParseWSTrust13:
setParseWSTrust2005:
setPassword:
setPasswordData:
setPendingSSOTokens:
setPlatformSSOActive:
setPlatformSSOUnavailable
setPolicyName:
setPortName:
setPreviousRefreshTokenClaimName:
setProcess:
setProperty:forName:
setQuery:
setQueryItems:
setRawAuthenticationTag:
setRawBody:
setRawCipherText:
setRawEncryptedKey:
setRawHeader:
setRawIV:
setRawSignature:
setRealm:
setRealmKeyName:
setReason:
setRefreshEndpointURL:
setRefresh_token:
setRefresh_token_expires_in:
setRegistrationCompleted:
setRegistrationContext:
setRegistrationFailed:
setRegistrationToken:
setRegistrationToken:completion:
setRemoteObjectInterface:
setRepair:
setRequestIdentifier:
setRequestSecurityTokenResponse:
setRequest_nonce:
setRequestedAttachedReference:
setRequestedSecurityToken:
setRequestedUnattachedReference:
setResetKeys:
setRetry:
setScanLocation:
setScope:
setSecurityExtensionPrefix:
setSecurityTokenReference:
setSepKey:
setSepKeyCertificate:
setServerNonceClaimName:
setServiceNameKeyName:
setSessionKey:
setSessionKeyKeyName:
setShouldBackgroundDefaultAction:
setShouldPreventNotificationDismissalAfterDefaultAction:
setSsoExtension:
setSsoExtensionIdentifier:
setSsoTokens:
setSsoTokens:completion:
setStartupCompletion:
setState:
setSubcode:
setTaskDescription:
setText:
setTicketKeyPath:
setTimeZone:
setTimeoutIntervalForResource:
setTimestamp:
setTitle:
setTo:
setTokenEndpointURL:
setTokenExpires:
setTokenType:
setTokenTypeNamespace:
setToken_type:
setTokens:returningError:
setTolerance:
setType:forName:
setUniqueIdentifier:
setUnlockCompletion:
setUrlSession:
setUserInfo:
setUserName:
setUserNotificationCenter:
setUserNotified:
setUsername:
setUsernameToken:
setValue:
setValue:forKey:
setValueType:
setVersion:
setWaitForConnectivity:
setWaitsForConnectivity:
setWantsNotificationResponsesDelivered
setWithArray:
setWsTrustFederationMexURL:
setWsTrustFederationNonce:
setWsTrustFederationURL:
setWsTrustVersion:
setWstrustProcess:
setXmldoc:
setXmldocContext:
setXpathContext:
setXpathCtx:
setXpathObj:
setXpathResultSet:
setXpcConnection:
set_analytics:
set_contextData:
set_deviceEncryptionKeyData:
set_deviceSigningKeyData:
set_preventsAppSSO:
setupNonUISessionWithCompletion:
setupNotificationCategories
setupTimerForAuthentication
sharedInstance
sharedManager
signData:usingKey:
signedData
ssoExtension
ssoExtensionIdentifier
ssoMethodToUse:profile:
ssoTokens
ssoTokensWithCompletion:
standardUserDefaults
startObservingKeyBagLockStatusChanges
startupCompletion
state
statusCode
stopObservingKeyBagLockStatusChanges
string
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringForKey:
stringForKeyType:
stringForLoginResult:
stringForLoginType:
stringForUserState:
stringFromValue:
stringRepresentation
stringValue
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
subdataWithRange:
superclass
supportsSecureCoding
synchronousRemoteObjectProxyWithErrorHandler:
ticketKeyPath
timeIntervalSince1970
timeIntervalSinceNow
timeZone
timeZoneWithAbbreviation:
tokenEndpointURL
tokenExpires
tokenReceived
tokenType
tokenTypeNamespace
token_type
tokens
triggerVPNForRealm:
triggerWithTimeInterval:repeats:
type
typeForName:
types
unarchivedDictionaryWithKeysOfClasses:objectsOfClasses:fromData:error:
uniqueIdentifier
uniqueIdentifierForUserName:
unload
unlockCompletion
unsignedIntegerValue
unwrapBlob:
updateTriggerFile
urlSession
userConfigurationForIdentifier:passwordContext:completion:
userConfigurationForUserName:
userConfigurationForUserName:passwordContext:
userIdentifier
userInfo
userName
userNeedsReauthentication
userNeedsReauthenticationWithCompletion:
userNotificationCenter
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotified
userRegistered
userRegistrationsNeedsRepair
userRegistrationsNeedsRepairWithCompletion:
username
validateIdToken:context:loginConfiguration:key:
validatePartyUInfo:context:
validatePartyVInfo:context:publicKey:
validateWSTrustAuthenticationResponseWithContext:loginConfiguration:response:returningAssertion:
validateWSTrustMexResponseWithContext:response:
validatedProfileForPlatformSSO
value
valueForEntitlement:
valueForKey:
valueForKeyPath:
valueForProperty:
valueFromString:
verifySignature:onData:usingCertificateString:
verifySignature:onData:usingKey:
verifySignatureUsingKey:
waitForConnectivity
waitForKeyBagFirstUnlockOnStartupWithCompletion:
waitForKeyBagFirstUnlockWithCompletion:
whitespaceAndNewlineCharacterSet
windowDidClose
wrapBlob:
writeToFile:options:error:
writeToURL:options:error:
wsTrustFederationMexURL
wsTrustFederationNonce
wsTrustFederationURL
wsTrustVersion
wstrustProcess
xmldoc
xmldocContext
xpathContext
xpathCtx
xpathObj
xpathResultSet
xpcConnection
xpcQueue
zeroPassword
zone
@24@0:8@16
i48@0:8@16@24@32@40
i48@0:8@16@24^@32^@40
i32@0:8@16@24
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"POXSDefinition"16@0:8
B24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
B32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
v24@0:8@16
v16@0:8
@"NSString"
@"POJWTHeader"
@"POJWTBody"
@40@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24^{__SecCertificate=}32
@24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
@32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
@"POMutableJWTHeader"
@"POMutableJWTBody"
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSData"24@?<v@?@"POUserConfiguration"@"NSError">32
v40@0:8@"POUserConfiguration"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@?<v@?B@"NSError">16
@"NSXPCConnection"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8B16
v24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
B32@0:8@16^@24
B32@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
@20@0:8B16
@32@0:8@16@24
q16@0:8
v24@0:8q16
v24@0:8Q16
^{__SecCertificate=}16@0:8
v24@0:8^{__SecCertificate=}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
^{__SecCertificate=}
@"NSData"
@"LAContext"
@"NSArray"
@"POKeychainHelper"
^{__SecKey=}16@0:8
v24@0:8^{__SecKey=}16
^{__SecIdentity=}16@0:8
^{__SecKey=}
@24@0:8^{_NSZone=}16
#24@0:8@16
Q24@0:8@16
v32@0:8#16@24
@"NSMutableDictionary"
@?16@0:8
v40@0:8@16q24@?32
v32@0:8q16@?24
v40@0:8q16@24@?32
v24@0:8@?<v@?@"NSString"@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"POLoginConfiguration"@"NSError">16
v32@0:8@"POLoginConfiguration"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16q24@?<v@?B@"NSError">32
v32@0:8q16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v40@0:8q16@"NSData"24@?<v@?@"NSData"@"NSError">32
v24@0:8@?<v@?^{__SecCertificate=}@"NSError">16
@24@0:8q16
B32@0:8@16@24
v32@0:8@16q24
@"POConfigurationManager"
@"POAgentAuthenticationProcess"
@"NSMutableArray"
@"NSObject"
@"SOConfigurationHost"
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24@0:8q16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24@0:8@16
@24@0:8^{__SecCertificate=}16
^{__SecCertificate=}24@0:8@16
^{__SecIdentity=}32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^{__SecCertificate=}24
@32@0:8@16^{__SecKey=}24
B40@0:8@16@24^{__SecKey=}32
B40@0:8@16@24@32
@"NSData"32@0:8@"NSData"16^{__SecKey=}24
B40@0:8@"NSData"16@"NSData"24^{__SecKey=}32
B40@0:8@"NSData"16@"NSData"24@"NSString"32
v40@0:8@16@24@32
v40@0:8@"NSString"16@"SOAuthorizationCredential"24@"NSError"32
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@?<v@?Q>16
v32@0:8Q16@?24
v44@0:8@16i24Q28@?36
v32@0:8Q16@?<v@?q>24
v44@0:8@"NSString"16i24Q28@?<v@?q>36
v24@0:8@?<v@?B>16
@"SOExtension"
@"SORemoteExtensionViewController"
@"<POExtensionDelegate>"
@"NSArray"16@0:8
v32@0:8@16#24
v40@0:8@16#24@32
v40@0:8@16@24#32
v48@0:8@16@24#32@40
v32@0:8@16@24
v56@0:8@16@24#32Q40Q48
v60@0:8@16@24#32Q40Q48B56
v48@0:8@16@24@32@40
@40@0:8@16@24@32
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v24@0:8@"NSError"16
B24@0:8d16
v28@0:8B16^@20
v24@0:8B16B20
v28@0:8@16B24
v32@0:8@16B24B28
@"POAuthenticationProcess"
@"SOExtensionManager"
@"POKeyBag"
@"UNUserNotificationCenter"
@"NSNotificationCenter"
@"POKerberosHelper"
@"PODirectoryServices"
@"PORegistrationContext"
@"NSTimer"
@"NSDate"
@"<POAgentAuthenticationProcessKerberosDelegate>"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v72@0:8@16@24@32@40@48@56@?64
v80@0:8@16@24@32@40@48^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}56^{__SecCertificate=}64@?72
v64@0:8@16@24@32@40^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}48@?56
v80@0:8@16@24@32@40@48@56@64@?72
@48@0:8@16@24@32@40
Q48@0:8@16@24@32^@40
v64@0:8@16@24@32@40@48@?56
@32@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
@48@0:8@16@24@32^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}40
@64@0:8@16@24@32@40@48@56
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32@0:8@16@24
B48@0:8@16@24@32^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}40
B40@0:8@16@24^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32
@32@0:8@16^{__SecCertificate=}24
@"POWSTrustProcess"
@24@0:8#16
@40@0:8@16@24#32
@"POWSTrustAppliesToType"
@"POWSTrustEndpointReferenceType"
@"POWSTrustUsernameTokenType"
@"POWSTrustTimestampType"
@"POWSTrustRequestedSecurityTokenType"
@"POWSTrustReferenceType"
@"POWSTrustKeyIdentifierType"
@"POWSTrustSecurityTokenReferenceType"
^{_xmlDoc=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}ii^{_xmlDtd}^{_xmlDtd}^{_xmlNs}**^v^v*i^{_xmlDict}^vii}16@0:8
v24@0:8^{_xmlDoc=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}ii^{_xmlDtd}^{_xmlDtd}^{_xmlNs}**^v^v*i^{_xmlDict}^vii}16
^{_xmlDoc=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}ii^{_xmlDtd}^{_xmlDtd}^{_xmlNs}**^v^v*i^{_xmlDict}^vii}
^{_xmlNode=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}^{_xmlNs}*^{_xmlAttr}^{_xmlNs}^vSS}16@0:8
v24@0:8^{_xmlNode=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}^{_xmlNs}*^{_xmlAttr}^{_xmlNs}^vSS}16
^{_xmlNode=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}^{_xmlNs}*^{_xmlAttr}^{_xmlNs}^vSS}
@"POXMLXPathResult"
i16@0:8
^{_xmlXPathObject=i^{_xmlNodeSet}id*^vi^vi}16@0:8
v24@0:8^{_xmlXPathObject=i^{_xmlNodeSet}id*^vi^vi}16
^{_xmlXPathObject=i^{_xmlNodeSet}id*^vi^vi}
@"POXMLXPathContext"
^{_xmlXPathContext=^{_xmlDoc}^{_xmlNode}ii^{_xmlHashTable}ii^{_xmlXPathType}ii^{_xmlHashTable}ii^{_xmlXPathAxis}^^{_xmlNs}i^viii^{_xmlNode}^{_xmlNode}^{_xmlHashTable}^?^v^v**^?^v^^{_xmlNs}i^v^?{_xmlError=ii*i*i***ii^v^v}^{_xmlNode}^{_xmlDict}i^vQQi}16@0:8
v24@0:8^{_xmlXPathContext=^{_xmlDoc}^{_xmlNode}ii^{_xmlHashTable}ii^{_xmlXPathType}ii^{_xmlHashTable}ii^{_xmlXPathAxis}^^{_xmlNs}i^viii^{_xmlNode}^{_xmlNode}^{_xmlHashTable}^?^v^v**^?^v^^{_xmlNs}i^v^?{_xmlError=ii*i*i***ii^v^v}^{_xmlNode}^{_xmlDict}i^vQQi}16
^{_xmlXPathContext=^{_xmlDoc}^{_xmlNode}ii^{_xmlHashTable}ii^{_xmlXPathType}ii^{_xmlHashTable}ii^{_xmlXPathAxis}^^{_xmlNs}i^viii^{_xmlNode}^{_xmlNode}^{_xmlHashTable}^?^v^v**^?^v^^{_xmlNs}i^v^?{_xmlError=ii*i*i***ii^v^v}^{_xmlNode}^{_xmlDict}i^vQQi}
@"POXMLContext"
@"NSMapTable"
@24@0:8Q16
@"NSURLSession"
@"NSURL"
@32@0:8@16^@24
v28@0:8B16B20B24
v40@0:8@16Q24q32
B28@0:8^{__CFString=}16B24
v48@0:8@16@24Q32@40
v56@0:8@16@24@32Q40@48
v40@0:8@16Q24@32
v32@0:8Q16@24
@"POSOAPEnvelope"
@"POSOAPText"
@"NSData"16@0:8
v24@0:8@"NSData"16
@"PODaemonConnection"
@"POUserConfiguration"
@"POLoginConfiguration"
@"PODeviceConfiguration"
@"POConfigurationVersion"
@24@0:8I16B20
Q32@0:8@16^B24
Q36@0:8@16@24B32
Q32@0:8@16@24
@"POServiceConnection"
v20@0:8i16
@"POExtension"
@56@0:8@16@24@32@40@48
@"NSDictionary"
@"NSMutableData"
@32@0:8@16Q24
v44@0:8@16@24B32@?36
v32@0:8@"NSString"16@?<v@?QB@"NSError">24
v44@0:8@"NSString"16@"NSData"24B32@?<v@?Q@"NSError">36
v40@0:8@"NSString"16@"NSData"24@?<v@?Q@"NSError">32
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v40@0:8@"NSString"16@"NSData"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSError">16
I16@0:8
v20@0:8I16
@"POKeyWrap"
@"POSOAPFaultDetail"
@"POSOAPCode"
@"POSOAPReason"
^{gss_cred_id_t_desc_struct=}24@0:8@16
v32@0:8^{__SecCertificate=}16q24
^{__SecIdentity=}24@0:8q16
@"POServiceLoginManagerConnection"
@"<SOHostExtensionContextProtocol>"
@"POSOAPSubcode"
@32@0:8q16@24
@40@0:8q16@24@32
B24@0:8^@16
@(#)PROGRAM:PlatformSSO  PROJECT:AppSSO-1
com.apple.PlatformSSO
-[POKeychainHelper addTokens:metaData:toKeychainForService:username:]
-[POKeychainHelper retrieveTokensFromKeychainForService:username:returningTokens:metaData:]
v8@?0
com.apple.AppSSO
POKeychainHelper
%@.%@
%@.%@.%@.%@.%@
%@.%@.%@
%@.%@
APPLE
POJWT
SOAPWebServicesErrorDomain
SOAPFaultKey
SOAPErrorFaultStringKey
SOAPErrorFaultCodeKey
SOAPErrorHTTPStatusKey
SOAPErrorSOAPHeaderKey
Fault
RequestSecurityToken
RequestSecurityTokenResponseCollection
RequestSecurityTokenResponse
com.apple.PlatformPSSO.daemon-queue
-[PODaemonConnection init]
-[PODaemonConnection dealloc]
Failed to connect to PSSO daemon
v16@?0@"NSError"8
com.apple.PlatformSSO.daemon-xpc
PODaemonConnection
kTokenExpiration
kTokenReceived
refresh_token
refresh_token_expires_in
expires_in
created
v32@?0@8Q16^B24
POUserConfiguration
PODeviceConfiguration
-[POExtensionAgentProcess connectionInvalidated]
-[POExtensionAgentProcess keyProxyEndpointForKeyType:]
-[POExtensionAgentProcess identityForKeyType:]
-[POExtensionAgentProcess invalidateAllKeyProxies]
-[POExtensionAgentProcess isCallerCurrentSSOExtension]
com.apple.private.platformsso.loginmanager
-[POExtensionAgentProcess isDeviceRegisteredWithCompletion:]
isDeviceRegistered
-[POExtensionAgentProcess isUserRegisteredWithCompletion:]
isUserRegistered
-[POExtensionAgentProcess registrationTokenWithCompletion:]
registrationToken
-[POExtensionAgentProcess setRegistrationToken:completion:]
not impl
-[POExtensionAgentProcess ssoTokensWithCompletion:]
SSOTokens
-[POExtensionAgentProcess setSsoTokens:completion:]
setSSOTokens
-[POExtensionAgentProcess loginConfigurationWithCompletion:]
loginConfiguration
-[POExtensionAgentProcess setLoginConfiguration:completion:]
setLoginConfiguration
Token endpoint URL is not approved profile URL.
Nonce endpoint URL is not approved profile URL.
Refresh endpoint URL is not approved profile URL.
The invalidCredentialPredicate is not formatted correctly.
The federationUserPreauthenticationURL is missing.
The federationMexURLKeypath is missing.
The federationPredicate is not formatted correctly.
The federationMexURL is missing.
SELF LIKE[c] %@
-[POExtensionAgentProcess setCertificateData:keyType:completion:]
setCertificateData
-[POExtensionAgentProcess secKeyProxyEndpointForKeyType:completion:]
-[POExtensionAgentProcess secIdentityProxyEndpointForKeyType:completion:]
-[POExtensionAgentProcess attestKey:clientDataHash:completion:]
-[POExtensionAgentProcess copyDeviceAttestationCertificateWithCompletion:]
-[POExtensionAgentProcess userNeedsReauthenticationWithCompletion:]
userNeedsReauthentication
v16@?0@"NSNotification"8
-[POExtensionAgentProcess deviceRegistrationsNeedsRepairWithCompletion:]
deviceRegistrationNeedsRepair
-[POExtensionAgentProcess userRegistrationsNeedsRepairWithCompletion:]
userRegistrationNeedsRepair
-[POExtensionAgentProcess presentRegistrationViewControllerWithCompletion:]
presentRegistrationViewController
-[POExtensionAgentProcess resetKeysWithCompletion:]
resetKeys
-[POExtensionAgentProcess loginUserNameWithCompletion:]
loginUserName
-[POExtensionAgentProcess setLoginUserName:completion:]
setLoginUserName
POExtensionAgentProcess
ASAuthorizationErrorDomain
com.apple.PlatformSSO.auth
P-256
POSecKeyHelper
PODirectoryServices
POES256JWTSigningAlgorithm
com.apple.PlatformPSSO.login-manager-queue
-[POServiceLoginManagerConnection init]
-[POServiceLoginManagerConnection dealloc]
-[POServiceLoginManagerConnection invalidate]
Failed to connect to PSSO service
com.apple.PlatformSSO.service-login-manager-xpc
POServiceLoginManagerConnection
platform sso
-[POExtension unload]
-[POExtension beginDeviceRegistrationUsingOptions:completion:]
v16@?0q8
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
-[POExtension beginUserRegistrationUsingUserName:authenticationMethod:options:completion:]
-[POExtension registrationDidComplete]
-[POExtension canPerformRegistration]
v12@?0B8
-[POExtension presentAuthorizationViewControllerWithHints:completion:]
No extension authorization view controller
-[POExtension authorization:didCompleteWithCredential:error:]
POExtension
isSpecifiedKey
namespace
maxCount
minCount
flattenMultiValue
<%@> {
%@    %@: %@;
%@    %@ = <>;
%@    %@ = %@
    
%@    %@ = [
%@        [%lu] = %@
        
%@        -- %lu remaining entries in array --
%@    ]
%@    %@ = %@;
%@    -- %lu remaining elements --
LOGIN
REGISTER
IGNORE
LOGIN_USER
REGISTER_DEVICE
REGISTER_USER
account_name
extension_identifier
com.apple.PlatformSSO.authenticationCompleted
authenticationResult
com.apple.ScreensaverRuleCheck
-[POAgentAuthenticationProcess initWithDelegate:]
com.apple.PlatformSSO.notifications
-[POAgentAuthenticationProcess handleScreenUnlock]
-[POAgentAuthenticationProcess handleAgentStartup]
-[POAgentAuthenticationProcess handleNetworkChange]
-[POAgentAuthenticationProcess handleScreenSaverRule]
v20@?0B8@"NSError"12
-[POAgentAuthenticationProcess performLoginForCurrentUser]
v24@?0Q8@"NSData"16
-[POAgentAuthenticationProcess requestUserAuthenticationWithUserInfo:]
-[POAgentAuthenticationProcess requestUserAuthenticationWithWindow:completion:]
-[POAgentAuthenticationProcess registrationTokenForExtensionIdentifier:]
-[POAgentAuthenticationProcess handleUserNeedsReauthenticationAfterDelay:]
-[POAgentAuthenticationProcess handleUserCredentialNeededAtLogin:returningContext:]
-[POAgentAuthenticationProcess _startDeviceRegistration]
device
-[POAgentAuthenticationProcess _startDeviceRegistration]_block_invoke_2
-[POAgentAuthenticationProcess _startDeviceRegistration]_block_invoke
-[POAgentAuthenticationProcess _startUserRegistration]
-[POAgentAuthenticationProcess _startUserRegistration]_block_invoke
user
-[POAgentAuthenticationProcess handleDeviceAndUserRegistrationForRepair:]
-[POAgentAuthenticationProcess handleDeviceAndUserRegistrationForRepair:notified:]
-[POAgentAuthenticationProcess handleUserRegistrationForUser:repair:]
-[POAgentAuthenticationProcess handleUserRegistrationForUser:repair:notified:]
-[POAgentAuthenticationProcess configurationChanged:]
-[POAgentAuthenticationProcess handleConfigurationChanged:]
-[POAgentAuthenticationProcess handleRemovingRegistrationForExtension:]
-[POAgentAuthenticationProcess exchangeTGTForStatus:]
-[POAgentAuthenticationProcess handleKerberosMappingForTokens:loginConfiguration:userConfiguration:]
-[POAgentAuthenticationProcess handlePendingSSOTokens]
-[POAgentAuthenticationProcess handleUnfinishedTGTExchanges]
-[POAgentAuthenticationProcess notifyKerberosDelegateTGTDidBegin]
-[POAgentAuthenticationProcess notifyKerberosDelegateTGTDidComplete]
-[POAgentAuthenticationProcess setupTimerForAuthentication]
-[POAgentAuthenticationProcess isCurrentSSOExtension:]
-[POAgentAuthenticationProcess windowDidClose]
-[POAgentAuthenticationProcess requestDidCompleteWithError:]
NOTIFICATION_SIGNIN_TITLE
CUSTOM_NOTIFICATION_SIGNIN_BODY
DEFAULT_NOTIFICATION_SIGNIN_BODY
NOTIFICATION_REGISTRATION_TITLE
CUSTOM_PASSWORD_NOTIFICATION_REGISTRATION_BODY
CUSTOM_NOTIFICATION_REGISTRATION_BODY
DEFAULT_PASSWORD_NOTIFICATION_REGISTRATION_BODY
DEFAULT_NOTIFICATION_REGISTRATION_BODY
-[POAgentAuthenticationProcess userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
NOTIFICATION_SIGNIN_BUTTON
NOTIFICATION_IGNORE_BUTTON
NOTIFICATION_REGISTER_BUTTON
POAgentAuthenticationProcess
RS256
ES256
ECDH-ES,A256GCM
v16@?0Q8
application/json
Accept
client-request-id
federation_metadata_url
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Preauthentication Request: %@
WSTrust Mex Request: %@
POST
application/soap+xml; charset=utf-8
Content-type
SOAPAction
WSTrust Login Request: %@
%@,%@
v16@?0^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}8
openid offline_access
%@ %@
Apple
application/x-www-form-urlencoded
grant_type
srv_challenge
Nonce
Server Nonce Request: %@
password
urn:ietf:params:oauth:grant-type:jwt-bearer
urn:ietf:params:oauth:grant-type:saml1_1-bearer
urn:ietf:params:oauth:grant-type:saml2-bearer
jwe_crypto
ECDH-ES
A256GCM
platform_sso_version
&request=%@
Login Request: %@
JWKS Request: %@
keys
No login configuration
This is a fake server nonce
com.apple.testMessages
This is the previous refresh token
foo@example.com
Platform SSO Test Messages
----------
Key Generated for Signing All Test Messages: 
----------
Nonce Request: 
----------
Password Login JWT: 
----------
Password Login Request: 
----------
Embedded Assertion: 
----------
Embedded Login JWT: 
----------
Embedded Login Request: 
POAuthenticationProcess
AppliesTo
KeyType
RequestType
EndpointReference
Address
stringValue
mustUnderstand
Username
Password
UsernameToken
Timestamp
Created
Expires
Lifetime
RequestedSecurityToken
RequestedAttachedReference
RequestedUnattachedReference
TokenType
ValueType
KeyIdentifier
SecurityTokenReference
Header
Body
-[POXMLXPathResult nodes]
POXMLHelper.m
nodes->nodeTab[i]
-[POXMLXPathContext registerNamespaces:]
self.xpathCtx
nameSpaceList
POXMLHelper
%llu%C
POLoginTypeNone
POLoginTypePassword
POLoginTypeUserSecureEnclaveKey
%@ (%@)
POUserStateNormal
POUserStateNeedsAuthentication
POUserStateNeedsRegistration
POLoginResultInvalid
POLoginResultSuccess
POLoginResultPermanentFailure
POLoginResultFailure
POLoginResultCredentialFailure
POLoginResultUnavailable
POLoginResultCancelled
UserDeviceSigning
UserDeviceEncryption
UserSecureEnclaveKey
urn:uuid:%@
v24@?0@"NSData"8@"NSError"16
POCredentialUtil
true
false
Action
MessageID
ReplyTo
Security
RelatesTo
com.apple.PlatformSSO.configuration
hasInvalidCredentialPredicate
includePreviousRefreshTokenInLoginRequest
kerberosTicketMappingsCount
hasCustomNonceRequestValues
hasCustomAssertionRequestHeaderClaims
hasCustomAssertionRequestBodyClaims
hasCustomLoginRequestHeaderClaims
hasCustomLoginRequestBodyClaims
hasCustomRefreshRequestHeaderClaims
hasCustomRefreshRequestBodyClaims
federationType
@"NSDictionary"8@?0
com.apple.PlatformSSO.login
type
result
com.apple.PlatformSSO.passwordchange
shouldChangePassword
credentialNeeded
com.apple.PlatformSSO.registration
options
com.apple.PlatformSSO.loginManager
com.apple.PlatformSSO.appssotool
testMessages
status
POJWTHeader
RequireRootCAInSystemTrustStore
ForceKerberosTGTExchange
SOUtils
Unable to find class %s
POPreferences
Envelope
xmlns
<?xml version="1.0" encoding="utf-8"?>
uuuu'-'MM'-'dd'T'HH':'mm':'ss
uuuu'-'MM'-'dd'T'HH':'mm':'ssXXX
uuuu'-'MM'-'dd'T'HH':'mm':'ss'Z'
y'-'M'-'d'T'HH':'mm':'ssXXX
y'-'M'-'d'T'HH':'mm':'ss
y'-'M'-'d'T'HH':'mm':'ss'.'SXXX
y'-'M'-'d'T'HH':'mm':'ss'.'S
uuuu'-'MM'-'dd
y'-'M'-'dXXX
y'-'M'-'d
HH':'mm':'ss
HH':'mm':'ssXXX
HH':'mm':'ss'Z'
HH':'mm':'ss'.'SXXX
HH':'mm':'ss'.'S
en_US_POSIX
http://www.w3.org/2003/05/soap-envelope
Text
com.apple.jwksCache
first load
-[POConfigurationManager jwksCacheForExtensionIdentifier:]
-[POConfigurationManager setJwksCache:forExtensionIdentifier:]
-[POConfigurationManager deviceConfigurationForExtension:]
-[POConfigurationManager saveDeviceConfiguration:forExtension:]
-[POConfigurationManager removeDeviceConfigurationForExtension:]
-[POConfigurationManager loginConfigurationForExtension:]
-[POConfigurationManager saveLoginConfiguration:forExtension:]
-[POConfigurationManager removeLoginConfigurationForExtension:]
v24@?0@"POUserConfiguration"8@"NSError"16
-[POConfigurationManager saveUserConfiguration:forUserName:]
userConfiguration updated
-[POConfigurationManager removeUserConfigurationForUserName:]
POConfigurationManager
-[POAuthPluginProcess initWithUid:forLogin:]
-[POAuthPluginProcess getLoginTypeForUser:tokensFresh:]
v28@?0Q8B16@"NSError"20
-[POAuthPluginProcess performPasswordLogin:passwordContext:updateLocalAccountPassword:]
v24@?0Q8@"NSError"16
-[POAuthPluginProcess performSEPKeyLogin:]
-[POAuthPluginProcess createUserAccount:passwordContext:]
-[POAuthPluginProcess saveCredentialForUserName:passwordContext:]
-[POAuthPluginProcess performLocalPasswordLogin:passwordContext:]
-[POAuthPluginProcess screenDidUnlock]
POAuthPluginProcess
http://schemas.microsoft.com/exchange/services/2006/errors
http://schemas.microsoft.com/exchange/services/2006/messages
http://schemas.microsoft.com/exchange/services/2006/types
http://www.w3.org/2005/08/addressing
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd
http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd
http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd
http://docs.oasis-open.org/ws-sx/ws-trust/200512
http://schemas.xmlsoap.org/ws/2005/02/trust
http://schemas.xmlsoap.org/ws/2004/09/policy
urn:oasis:names:tc:SAML:1.0:assertion
trust
urn:apple:platformsso
/.well-known/openid-configuration
token_endpoint
jwks_uri
issuer
v32@?0@8@16^B24
POLoginConfiguration
%@ %@ %@
HTTP/1.1
%@ %@
Host:
%@: %@
v32@?0@"NSString"8@"NSString"16^B24
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue
http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer
http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue
http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702
http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTRC/IssueFinal
http://schemas.xmlsoap.org/ws/2005/02/trust/RST/Issue
http://schemas.xmlsoap.org/ws/2005/05/identity/NoProofKey
http://schemas.xmlsoap.org/ws/2005/02/trust/Issue
http://schemas.xmlsoap.org/ws/2005/07/securitypolicy
http://schemas.xmlsoap.org/ws/2005/02/trust/RSTR/Issue
urn:oasis:names:tc:SAML:2.0:assertion
%@:FailedAuthentication
FailedAuthentication
http://www.w3.org/2005/08/addressing/anonymous
uuid-%@
s=http://www.w3.org/2003/05/soap-envelope a=http://www.w3.org/2005/08/addressing u=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd o=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd  wsu=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd wsp=http://schemas.xmlsoap.org/ws/2004/09/policy saml=urn:oasis:names:tc:SAML:1.0:assertion
%@=%@
//s:Envelope/s:Header/a:Action
//s:Envelope/s:Header/a:To
//s:Envelope/s:Header/a:MessageID
//s:Envelope/s:Body/trust:RequestSecurityToken/wsp:AppliesTo/a:EndpointReference/a:Address
//s:Envelope/s:Header/o:Security/o:UsernameToken/o:Username
//s:Envelope/s:Header/o:Security/o:UsernameToken/o:Password
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1
http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0
s=http://www.w3.org/2003/05/soap-envelope a=http://www.w3.org/2005/08/addressing u=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd o=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd  wsu=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd saml=urn:oasis:names:tc:SAML:1.0:assertion
//s:Envelope/s:Header/a:RelatesTo
//s:Envelope/s:Header/o:Security/u:Timestamp/u:Created
//s:Envelope/s:Header/o:Security/u:Timestamp/u:Expires
//s:Envelope/s:Body/s:Fault
//s:Envelope/s:Body/s:Fault/s:Reason/s:Text
//s:Envelope/s:Body/s:Fault/s:Code/s:Value
/s:Envelope/s:Body/s:Fault/s:Code/s:Subcode/s:Value
//s:Envelope/s:Body/trust:RequestSecurityTokenResponseCollection/trust:RequestSecurityTokenResponse/trust:RequestedSecurityToken/saml:Assertion
//s:Envelope/s:Body/trust:RequestSecurityTokenResponseCollection/trust:RequestSecurityTokenResponse/trust:TokenType
//s:Envelope/s:Body/trust:RequestSecurityTokenResponse/trust:RequestedSecurityToken/saml:Assertion
//s:Envelope/s:Body/trust:RequestSecurityTokenResponse/trust:TokenType
wsdl=http://schemas.xmlsoap.org/wsdl/ wsp=http://schemas.xmlsoap.org/ws/2004/09/policy soap12=http://schemas.xmlsoap.org/wsdl/soap12/ wsa10=http://www.w3.org/2005/08/addressing
%@ %@=%@
sp:SignedEncryptedSupportingTokens/wsp:Policy/sp:UsernameToken/wsp:Policy/sp:WssUsernameToken10
sp:SignedSupportingTokens/wsp:Policy/sp:UsernameToken/wsp:Policy/sp:WssUsernameToken10
//wsdl:definitions/wsp:Policy/wsp:ExactlyOne/wsp:All
//wsdl:definitions/wsdl:binding/wsp:PolicyReference[@URI="#%@"]
name
soap12:binding
transport
wsdl:operation/soap12:operation
soapAction
http://schemas.xmlsoap.org/soap/http
//wsdl:definitions/wsdl:service/wsdl:port
binding
wsa10:EndpointReference/wsa10:Address
https://
POWSTrustProcess
com.apple.PlatformPSSO.auth-plugin-queue
-[POServiceConnection initWithUid:forLogin:]
-[POServiceConnection dealloc]
com.apple.PlatformSSO.login.service-xpc
com.apple.PlatformSSO.service-xpc
POServiceConnection
assertion
client_id
scope
nonce
request_nonce
username
token_type
expires_on
id_token
password redacted
POJWTBody
PORS256JWTSigningAlgorithm
-[POAgentProcess initWithXPCConnection:authenticationProcess:]
com.apple.private.platformsso.agent
-[POAgentProcess initWithAuthenticationProcess:]
-[POAgentProcess connectionInvalidated]
-[POAgentProcess getLoginTypeForUser:completion:]
-[POAgentProcess performPasswordLogin:passwordContext:updateLocalAccountPassword:completion:]
-[POAgentProcess performSEPKeyLogin:completion:]
-[POAgentProcess createUserAccount:passwordContext:completion:]
-[POAgentProcess saveCredentialForUserName:passwordContext:completion:]
-[POAgentProcess performLocalPasswordLogin:passwordContext:completion:]
-[POAgentProcess screenDidUnlockWithCompletion:]
POAgentProcess
faultactor
faultcode
faultstring
Code
Reason
-[POKerberosHelper importKerberosEntry:error:]
%@@%@
-[POKerberosHelper exchangeKerberosTGTForEntry:]
krbtgt
-[POKerberosHelper checkForValidKerberosTGT:]
-[POKerberosHelper acquireCredentialForUUID:]
failed to find credential: %@
POKerberosHelper
-[POLoginManager init]
-[POLoginManager invalidate]
-[POLoginManager isDeviceRegistered]
-[POLoginManager isUserRegistered]
-[POLoginManager registrationToken]
v24@?0@"NSString"8@"NSError"16
-[POLoginManager ssoTokens]
-[POLoginManager setSsoTokens:]
-[POLoginManager loginConfiguration]
v24@?0@"POLoginConfiguration"8@"NSError"16
-[POLoginManager saveCertificate:keyType:]
-[POLoginManager copyKeyForKeyType:]
v24@?0@"NSXPCListenerEndpoint"8@"NSError"16
-[POLoginManager copyIdentityForKeyType:]
-[POLoginManager attestKey:clientDataHash:completion:]
-[POLoginManager copyDeviceAttestationCertificate]
v24@?0^{__SecCertificate=}8@"NSError"16
-[POLoginManager userNeedsReauthenticationWithCompletion:]
-[POLoginManager deviceRegistrationsNeedsRepair]
-[POLoginManager userRegistrationsNeedsRepair]
-[POLoginManager presentRegistrationViewControllerWithCompletion:]
-[POLoginManager resetKeys]
POLoginManager
&amp;
&lt;
&gt;
Value
Subcode
-[POConfigurationVersion init]
/com.apple.PlatformSSO.version
-[POConfigurationVersion checkVersion]
-[POConfigurationVersion increaseVersionWithMessage:]
-[POConfigurationVersion setPlatformSSOUnavailable]
notify_register_check() failed with %u (test)
notify_set_state() failed with error %u
notify_cancel() failed with error %u
POConfigurationVersion
psso.configured
/var/mobile/Library/ExtensibleSSO/Configuration/com.apple.AppSSO.configuration.plist
POConfigurationUtil
com.apple.PlatformSSO.device.%@.txt
com.apple.PlatformSSO.login.%@.txt
com.apple.PlatformSSO.user.%@.txt
/var/mobile/Library/ExtensibleSSO/Configuration/PlatformSSO
-[PODaemonProcess initWithXPCConnection:]
-[PODaemonProcess connectionInvalidated]
-[PODaemonProcess deviceConfigurationForExtension:completion:]
-[PODaemonProcess loginConfigurationForExtension:completion:]
-[PODaemonProcess removeDeviceConfigurationForExtension:completion:]
-[PODaemonProcess removeLoginConfigurationForExtension:completion:]
-[PODaemonProcess removeUserConfigurationForIdentifier:completion:]
-[PODaemonProcess saveDeviceConfiguration:forExtension:completion:]
-[PODaemonProcess saveLoginConfiguration:forExtension:completion:]
-[PODaemonProcess saveUserConfiguration:forIdentifier:completion:]
-[PODaemonProcess userConfigurationForIdentifier:passwordContext:completion:]
-[PODaemonProcess resetStoredConfigurationWithCompletion:]
-[PODaemonProcess _initDataVaultIfNeededWithError:]
mobile
ExtensibleSSO
failed to check the state of datavault: %s
failed to convert to datavault: %s
IPHONE_SIMULATOR_ROOT
PODaemonProcess
osgn
oece
oecd
%s service %{public}@ on %@
Could not add tokens to keychain %{public}@
Error archiving meta data: %{public}@
Removing keychain entry returned %d
Finding keychain entry for service %{public}@
%s Could not find credentials in keychain. Invalid parameters on %@
Finding keychain entry failed with %d, %{public}@
Error unarchiving meta data: %{public}@
Deleting keychain entry for service %{public}@
Could not delete credentials from keychain, %{public}@
Deleting keychain entry failed with %d, %{public}@
Missing JWT parts: %{public}@
Incorrect number of JWT parts: %{public}@, %{public}@
Unsupported algorithm: %{public}@, %{public}@
Failed to decode signature: %{public}@
epk is missing or invalid: %{public}@
Error importing epk: %{public}@
aad is missing: %{public}@
iv is missing: %{public}@
cipher text is missing: %{public}@
tag data is missing: %{public}@
Header is missing epk: %{public}@
Error in SecKeyCopyKeyExchangeResult: %{public}@
Error decrypting: %{public}@, %{public}@
algorithm %{public}@ not found: %{public}@
failed to copy public key: %{public}@
missing required values: %{public}@
Header is missing: %{public}@
Error with SecKeyCreateRandomKey: %{public}@
Error with epk: %{public}@
Error with SecKeyCopyExternalRepresentation: %{public}@
Error with SecKeyCopyKeyExchangeResult: %{public}@
Error with SecRandomCopyBytes: %{public}@
Error with encoding ivData: %{public}@
Error with encoding header: %{public}@
Error with encoding body: %{public}@
Error with concatKDF: %{public}@
Error encrypting: %{public}@, %{public}@
%s  on %@
XPC error: %{public}@
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Error serializing config: %{public}@
Error deserializing config: %{public}@
retrieving sso tokens
Error retrieving tokens: %d, %{public}@
setting sso tokens
Error saving tokens: %d, %{public}@
Error removing tokens: %d, %{public}@
encryptPendingSSOTokens
encryption algorithm not supported:%{public}@
failed to encrypt tokens: %{public}@
decryptPendingSSOTokensUsingPrivateKey
failed to decrypt tokens: %{public}@
Error deserializing tokens: %{public}@
failed to retrieve extension identifier, %{public}@
failed to retrieve device configuration for extension identifier: %{public}@, %{public}@
key not found for extension identifier: %{public}ld, %{public}@, %{public}@
bundleIdentifier: CPCopyBundleIdentifierAndTeamFromAuditToken(): %{public}@
bundleIdentifier: CPCopyBundleIdentifierAndTeamFromAuditToken() failed, trying SecTaskCopySigningIdentifier()
bundleIdentifier: SecTaskCopySigningIdentifier() failed %{public}@
bundleIdentifier: %{public}@
bundleIdentifier: SecTaskCreateWithAuditToken() failed, %{public}@
No device configuration for extension: %{public}@, %{public}@
Caller is not current extension: %{public}@, %{public}@
No stored SSO Tokens.
missing device encryption key for extension identifier: %{public}@, %{public}@
missing device encryption public key:%{public}@
failed to remove tokens: %{public}@
failed to save tokens: %{public}@
failed to save configuration: %{public}@
No validated Platform SSO Profiles: %{public}@
Error validating login configuration, %{public}@
failed to save login configuration for extension identifier %{public}@, %{public}@
%s keyType = %{public}@ on %@
failed to save device configuration: %{public}@
failed to receive endpoint: %{public}@
failed to retrieve user configuration for extension identifier: %{public}@, %{public}@
failed to save user configuration: %{public}@
failed to retrieve user configuration for extension identifier: %{public}@
Error SecAccessControlCreateWithFlags: %{public}@
Error setting protection: %{public}@
Error SecKeyCreateRandomKey: %{public}@
Error SecKeyCreateWithData: %{public}@
Current altDSID: %{private}@
signing algorithm not supported: %{public}@
No data to sign: %{public}@
Error creating signature: %{public}@
No certificate string: %{public}@
Failed to base64 decode: %{public}@
Failed to create certificate: %{public}@
Failed to get public key: %{public}@
No signature to verify: %{public}@
No data to verify: %{public}@
Error verifying signature: %{public}@
PlatformSSO extension not found (%{public}@)
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginDeviceRegistrationUsingLoginManager completed, result = %{public}@
beginUserRegistrationUsingLoginManager completed, result = %{public}@
Platform SSO not enabled
Screen unlocked
PSSOAgentStartup
First Unlock
Network Changed
PSSONetworkChange
Not configured for Platform SSO
Rule already checked
Rule successfully checked
not a local account
Checking Login for user
%s user state = %{public}@ on %@
User state is needs authentication.
Tokens issued more than 4 hours ago
Tokens expire soon.
Kerberos cache not valid
User does not need authentication
User needs authentication
Auth in progress, skipping
no device configuration for extension: %{public}@, %{public}@
registration not complete %{public}@
no login configuration for extension: %{public}@, %{public}@
%s loginType = %{public}@ on %@
Password authentication
no user configuration for user: %{public}@, %{public}@
no user credential for user: %{public}@, %{public}@
PlatformSSO_PasswordAuth
loginResult = %{public}@
Success
failed to save login tokens: %{public}@
Authentication completed successfully
Authentication failed with invalid credential
CredentialFailure
Authentication failed and needs repair
PermanentFailure
Authentication failed because network is unavailable
Unavailable
Authentication failed
Failed
Login failed:, %{public}@
User Secure Enclave key authentication
 enableTelemetry=YES 
PlatformSSO_UserSEPKeyAuth
ResultUnavailable
no user authentication during registration: %{public}@
Not a local account: %{public}@
Not a password user
no platform SSO Profiles: %{public}@
Sending login notification
error sending local notification: %{public}@
%s creating new device configuration on %@
Sending beginDeviceRegistration
registrationResult = %{public}@
PSSOUserRegistration
%s removing device and login configuration on %@
failed to remove device configuration: %{public}@
failed to remove login configuration: %{public}@
%s calling registrationDidComplete on %@
%s creating new user configuration on %@
Sending beginUserRegistration
%s registrationResult = %{public}@ on %@
failed to remove user configuration: %{public}@
%s removing user configuration on %@
registration previously failed, stopping
registration already in progress: %{public}@
Platform SSO extension not found: %{public}@, %{public}@
No supported authentication methods: %{public}@
PSSODeviceRegistration
Sending registration notification
configurationChanged
Configuration changed
no existing device configuration for extension: %{public}@
no existing user configuration for user: %{public}@, %{public}@
Removing registration
Platform SSO extension does not implement registration protocol: %{public}@, %{public}@
registration not in progress for extension: %{public}@, %{public}@
user interaction not allowed for extension: %{public}@, %{public}@
No login configuration for extension: %{public}@, %{public}@
%s kerberos extension = %{public}@, isNetworkConnected = %{public}@ on %@
Exchanging TGT for realm: %{public}@
Successfully imported Kerberos ticket for realm: %{public}@
Mapping Kerberos TGT for %{public}@
Invalid TGT data type: %{public}@, %{public}@
Importing Kerberos TGT for %{public}@
failed to import kerberos ticket: %{public}@, %{public}@
Exchanging Kerberos TGT for %{public}@
Notifying TGT delegate for realm: %{public}@
missing required values: %{public}@, %{public}@
Saving Pendint SSO Tokens
no user configuration: %{public}@
Refresh token timer set: %{public}@
%s state = %{public}@, failureCount = %{public}@ on %@
%{public}@, %{public}@
Starting password authentication
Login Configuration: %{public}@
Device Configuration: %{public}@
User Configuration: %{public}@
failed to create nonce request: %{public}@
Sending nonce request
PlatformSSO_NonceRequest
failed to retrieve nonce: %{public}@
failed to create embedded assertion JWT: %{public}@
failed to sign embedded assertion: %{public}@
failed to create login JWT: %{public}@
failed to create preauthentication request: %{public}@
Sending preauthentication request
PlatformSSO_PreauthenticationRequest
failed to retrieve preauthentication data: %{public}@
User is federated
User is NOT federated
failed to create mex request: %{public}@
Sending mex request
PlatformSSO_WSTrustMexRequest
failed to retrieve mex data: %{public}@
federated idp does not support WSTrust 1.3 or 2005: %{public}@
failed to create WSTrust request: %{public}@
Sending WSTrust request
PlatformSSO_WSTrustRequest
failed to retrieve WSTrust response: %{public}@
Preauthentication request: %{private}@
Preauthentication request: %{public}@
Preauthentication response received
failed to retrieve Preauthentication response: %{public}@, %{public}@
failed to retrieve Preauthentication response: %{public}@
failed to retrieve Preauthentication response: %{public}ldd, %{public}@
Preauthentication response response received: %{public}@
failed to parse Preauthentication response response: %{public}@
Exception when evaluating federationPredicate: %{public}@
WSTrust Mex Request request: %{public}@
WSTrust Mex response received
failed to retrieve WSTrust Mex response: %{public}@, %{public}@
failed to retrieve WSTrust Mex response: %{public}@
failed to retrieve WSTrust Mex response: %{public}ldd, %{public}@
WSTrust Mex response response received: %{public}@
failed to find valid WSTrust values in mex response: %{public}@
Failed to created WSTrust login request: %{public}@
WSTrust login response received
failed to retrieve WSTrust login response: %{public}@, %{public}@
failed to retrieve WSTrust login response: %{public}@
failed to retrieve WSTrust login response: %{public}ldd, %{public}@
WSTrust login response response received
Failed to parse WSTrust login response: %{public}@
WSTrust login response validation failed: %{public}@
WSTrust login failed: %{public}@, %{public}@, %{public}@
WSTrust login response validation missing required values: %{public}@
failed to verify created: %{public}f, %{public}@
failed to verify expires: %{public}f, %{public}@
WSTrust login response missing TokenType: %{public}@
WSTrust login response validation missing assertion: %{public}@
failed to sign login request: %{public}@
failed to create login request: %{public}@
Sending login request
PlatformSSO_LoginRequest
Login response received
result=%lu
login request failed: %{public}@
failed to parse login response: %{public}@
unsupported login response algorithm and encryption: %{public}@, %{public}@,  %{public}@
failed to decrypt login response: %{public}@
failed to validate apu: %{public}@
failed to validate apv: %{public}@
no id_token in login response: %{public}@
no kid in login response id_token: %{public}@
JWKS response received
no key available with identifier: %{public}@, %{public}@
id_token signature check failed %{public}@
server nonce request: %{private}@
server nonce request: %{public}@
Nonce response received
failed to retrieve server nonce: %{public}@, %{public}@
failed to retrieve server nonce: %{public}@
failed to retrieve server nonce: %{public}ldd, %{public}@
server nonce response received: %{public}@
failed to parse server nonce response: %{public}@
audience missing from configuration: %{public}@
missing password or assertion: %{public}@
unable to use both password and assertion: %{public}@
failed to create request: %{public}@
Sending login request: %{public}@
failed to login: %{public}@, %{public}@
failed to login: %{public}@
failed to login: %{public}ld, %{public}@
Exception when evaluating invalidCredentialPredicate: %{public}@
Credentials are not correct
login response received: %{public}@
using cached jwks: %{public}@
PlatformSSO_JWKSRequest
JWKS network response received
error
failed to login: %{public}ldd, %{public}@
failed
success
jwks response received: %{public}@
failed to parse jwks response: %{public}@
failed to find key: %{public}@, %{public}@
failed to create key: %{public}@, %{public}@
failed to load key: %{public}@, %{public}@
Verifying id_token
validating id_token: %{private}@
unsupported id_token algorithm: %{public}@, %{public}@
failed to match nonce: %{public}@
failed to match issuer: %{public}@
audience does not contain client id: %{public}@
azp claim missing: %{public}@
failed to match audience: %{public}@
failed to match azp: %{public}@
failed to verify iat: %{public}f, %{public}@
failed to verify exp: %{public}f, %{public}@
failed to verify nbf: %{public}f, %{public}@
response missing apu: %{public}@
response missing epk: %{public}@
error with SecKeyCopyExternalRepresentation: %{public}@
error decoding apu: %{public}@
falied to validate apu: %{public}@
missing apv: %{public}@
error decoding apv: %{public}@
error with nonce data: %{public}@
falied to validate apv: %{public}@
Evaluating server trust
trustEvaluation failed: %{public}@
No root certificate: %{public}@
Root certificate is not in the system trust: %{public}@
HTTP Redirect received to %{public}@, canceling
%{public}@, is waiting for connectivity
Creating sample messages
Error: unable to create new XPath context
Error: unable to strdup namespaces list
Error: invalid namespaces list format
Error: unable to register NS with prefix="%s" and href="%s"
Error: unable to evaluate xpath expression "%s"
Error: failed to parse xml document
credential failure: %{public}@
Error with JWT header data: %{public}@
Error with dataRepresentation: %{public}@
Invalid key type: %{public}@
Error with external representation: %{public}@
Error with dataRepresentation length: %{public}@
requireRootCAInSystemTrustStore=%{public}s
forceKerberosTGTExchange=%{public}s
Error retrieving jwks data: %d, %{public}@
Error saving jwks data: %d, %{public}@
Error removing jwks data: %d, %{public}@
id for user %{public}@ not found: %{public}@
failed to retrieve user configuration: %{public}@
%s userName = %{public}@ on %@
loginType = %{public}@, tokensFresh = %{public}@, error = %{public}@
%s userName = %{public}@, passwordContext = %{public}@, updateLocalAccountPassword = %{public}@ on %@
PSSOPasswordLogin
loginResult = %{public}@, error = %{public}@
%s userName = %{public}@, passwordContext = %{public}@ on %@
PSSOSaveCredential
PSSOLocalLogin
PSSOScreenUnlock
screenDidUnlock called
Error creating POLoginConfiguration: %{public}@
failed to retrieve openid-configuration
failed to retrieve openid-configuration: %ldd
open id response received: %{public}@
failed to parse openid-configuration response
failed to create login configuration
Claims are not valid JSON: %{public}@
serialized configuration: %{public}@
WSTrust 1.3 found
WSTrust 2005 found
failed to load mex response: %{public}@
no WSTrust policies found
more than one wstrust policy found
checking %{public}@
transport for %{public}@ not http, skipping
no binding for found
url for %{public}@ not https, skipping
%s userID = %{public}@, login = %{public}@ on %@
Error with JWT body data: %{public}@
missing required entitlement
no credential for user: %{public}@, %{public}@
failed to get public key: %{public}@
failed to encrypt login tokens: %{public}@
failed to save user configuration for user: %{public}@, %{public}@
%s uid = %{public}d on %@
%s realm = %{public}@ on %@
failed to import TGT, %{public}@
%s Successful for realm = %{public}@ on %@
%s Success for realm = %{public}@ on %@
Error using cached credential: %{public}@
loginUserName saved
failed to save loginUserName: %{public}@
missing device encryption key:%{public}@
failed to parse sso tokens: %{public}@
removing tokens
tokens removed
failed to encode tokens to JSON: %{public}@
tokens saved
loginConfiguration saved
failed to save loginConfiguration: %{public}@
error with SecCertificateCopyData: %{public}@
failed to retrieve SecKeyProxyEndpoint: %{public}@
failed to create SecKey from SecKeyProxyEndpoint: %{public}@
failed to create SecIdentity from SecKeyProxyEndpoint: %{public}@
notify_register_check() failed with %u
notify_cancel() failed with %u
%s config version changed from from 0x%016llX to 0x%016llX on %@
%s config version increased from 0x%016llX to 0x%016llX (%{public}@) on %@
set config version to PlatformSSO unavailable
notify_get_state() failed with error %u
invalid notify token
notify_set_state() failed with error %u
notify_post() failed with error %u
Platform SSO is configured.
failed to find configuration files: %{public}@
failed to create trigger file: %{public}@
failed to set trigger file attributes: %{public}@
failed to remove trigger file: %{public}@
updating rules database
restoring rules database if needed
%s extension = %{public}@ on %@
error initializing data vault: %{public}@
no data to load: %{public}@
%s identifier = %{public}@ on %@
failed to write device config to disk: %{public}@
failed to set attributes: %{public}@
device config written to file: %{public}@
failed to write login config to disk: %{public}@
login config written to file: %{public}@
saving credential
failed to remove login configuration folder: %{public}@
failed to create configuration directory at %{public}@: %{public}@
created configuration directory at %{public}@
failed to check the state of datavault: %{public}s
failed to convert to datavault: %{public}s
successfully created datavault at %{public}@
failed to get the simulator root path
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
POXSBase64BinaryDefinition
POKeychainHelper
POXSSimpleTypeDefinition
POXSDefinitionProvider
NSObject
POJWT
POMutableJWT
POKeyWrap
POSOAPBody
PODaemonProtocol
PODaemonConnection
POXSTimeDefinition
POXSRawDataDefinition
POKerberosStatus
NSSecureCoding
NSCoding
POUserConfiguration
PODeviceConfiguration
POXSDateDefinition
POXSDefinition
NSCopying
POKeyBag
POXSDoubleDefinition
POExtensionAgentProcess
POServiceLoginManagerProtocol
POSecKeyHelper
PODirectoryServices
POKerberosMapping
POES256JWTSigningAlgorithm
POJWTSigningAlgorithm
POServiceLoginManagerConnection
SHA256
POExtension
SOExtensionDelegate
POExtensionRegistrationProtocol
POXSRedactionInformation
POXSComplexTypeDefinition
POAgentAuthenticationProcess
UNUserNotificationCenterDelegate
POExtensionDelegate
POAuthenticationProcess
NSURLSessionDelegate
NSURLSessionTaskDelegate
POXSDefinitions
POXSElement
POWSTrustBaseRequestType
POWSTrust13RequestSecurityTokenType
POWSTrust2005RequestSecurityTokenType
POWSTrustAppliesToType
POWSTrustEndpointReferenceType
POWSTrustActionType
POWSTrustMessageIDType
POWSTrustReplyToType
POWSTrustToType
POWSTrustRelatesToType
POWSTrustUsernameTokenType
POWSTrustSecurityType
POWSTrustTimestampType
POWSTrust13RequestSecurityTokenResponseCollectionType
POWSTrustRequestedSecurityTokenType
POWSTrust13RequestSecurityTokenResponseType
POWSTrust2005RequestSecurityTokenResponseType
POWSTrustKeyIdentifierType
POWSTrustSecurityTokenReferenceType
POWSTrustReferenceType
POSOAPEnvelope
POXSNullDefinition
POXMLContext
POXMLNode
POXMLXPathResult
POXMLXPathContext
POXMLHelper
POXSChoiceDefinition
POAlgorithm
POXSDurationDefinition
POConstantUtil
POAuthenticationContext
POCredentialUtil
POConcatKDF
POXSBooleanDefinition
POSOAPHeader
POAnalytics
POJWTHeader
POMutableJWTHeader
SOAPBaseDocument
POSOAPFaultDetail
POPreferences
POSOAPDocument
POXSIntegerDefinition
POXSDateFormatterFactory
POSOAPReason
POConfigurationManager
POJWKSStorageProvider
POAuthPluginProcess
PORegistrationContext
POXSNamespaces
POLoginConfiguration
print
POWSTrustRequest
POWSTrustResponse
POWSTrustMexResponse
POWSTrustProcess
POSOAPText
POXSDateTimeDefinition
POServiceProtocol
POServiceConnection
POJWTBody
POMutableJWTBody
POInternalProtocols
PORS256JWTSigningAlgorithm
POAgentProcess
POXSRFC3339DateDefinition
POSOAPFault
POKerberosEntry
POKerberosHelper
POLoginManager
POXSStringDefinition
POSOAPCode
POSOAPSubcode
POConfigurationVersion
POConfigurationUtil
POError
PODaemonProcess
Base64URL
Address
AppliesTo
Expires
Code
Subcode
Envelope
T@"NSArray",R,D
HTTPMethod
T@"NSString",&,N,V_realmKeyName
T@"NSURL",C,N,V_jwksEndpointURL
KeyIdentifier
Ti,V_authMethod
Password
XMLData
RequestSecurityTokenResponse
RequestedAttachedReference
_action
RequestedUnattachedReference
_customRefreshRequestBodyClaims
T#,R
_faultCodeValue
T@"<POAgentAuthenticationProcessKerberosDelegate>",W,V_kerberosDelegate
_header
T@"<SOHostExtensionContextProtocol>",&,V_hostExtensionContext
_kerberosHelper
T@"NSArray",&,D,N
_keyBag
T@"NSArray",C,N,V_Body
_mustUnderstand
T@"NSArray",C,N,V_customFederationUserPreauthenticationRequestValues
_repair
T@"NSArray",C,N,V_customNonceRequestValues
T@"NSArray",C,N,V_kerberosTicketMappings
_wsTrustVersion
T@"NSArray",R,C,N
_xmldoc
T@"NSData",&,D
T@"NSData",&,N,V__deviceSigningKeyData
analyticsForLoginConfiguration:
T@"NSData",&,N,V_sessionKey
T@"NSData",C,V__contextData
T@"NSData",R,C,N
bundleForClass:
T@"NSDate",&,D
content
T@"NSDate",&,N,V_Expires
T@"NSDate",&,N,V_expires
dateFromString:
T@"NSDate",&,V_lastAuthenticationAttempt
T@"NSDate",R,D
T@"NSDictionary",&,V_customAssertionRequestBodyClaims
expires
T@"NSDictionary",&,V_customLoginRequestBodyClaims
getLoginTypeForUser:completion:
T@"NSDictionary",&,V_customRefreshRequestBodyClaims
initWithString:
T@"NSDictionary",C,N
isFault
T@"NSDictionary",R,D
isProxy
T@"NSMutableData",&,D
isSpecifiedKeyForAttributeName:
T@"NSMutableData",&,V_passwordData
T@"NSMutableDictionary",&,V__analytics
jwksEndpointURL
T@"NSNotificationCenter",&,V_notificationCenter
T@"NSNumber",R,D
lowercaseString
T@"NSString",&,D
numberWithBool:
T@"NSString",&,N,V_action
T@"NSString",&,N,V_assertion
postAuthenticationNotification:
T@"NSString",&,N,V_clientNameKeyName
protectionSpace
T@"NSString",&,N,V_endpointURN
rawBody
T@"NSString",&,N,V_faultReason
release
T@"NSString",&,N,V_keyIdentifier
removeObserver:
T@"NSString",&,N,V_nonce
requireRootCAInSystemTrustStore
T@"NSString",&,N,V_requestIdentifier
setAlg:
T@"NSString",&,N,V_securityExtensionPrefix
setApv:
T@"NSString",&,N,V_serviceName
setAzp:
T@"NSString",&,N,V_sessionKeyKeyName
setCty:
T@"NSString",&,N,V_to
setDeviceEncryptionCertificate:
T@"NSString",&,N,V_tokenTypeNamespace
setEndpointURN:
T@"NSString",&,N,V_wsTrustFederationNonce
setExp:
T@"NSString",&,V_containerAppBundleIdentifier
setFaultstring:
T@"NSString",&,V_loginUserName
setIat:
T@"NSString",&,V_rawBody
setKid:
T@"NSString",&,V_rawEncryptedKey
setP2c:
T@"NSString",&,V_rawIV
setRequestType:
T@"NSString",&,V_realm
setServiceName:
T@"NSString",&,V_ticketKeyPath
setSub:
T@"NSString",&,V_userName
setUid:
T@"NSString",C,N,V_Id
setUse:
T@"NSString",C,N,V_Password
setX5t:
T@"NSString",C,N,V_TokenType
set_sepKeyData:
T@"NSString",C,N,V_Value
stringFromDate:
T@"NSString",C,N,V_accountDisplayName
taskDescription
T@"NSString",C,N,V_audience
T@"NSString",C,N,V_endpointURLString
T@"NSString",C,N,V_faultcode
version
T@"NSString",C,N,V_federationMexURLKeypath
.cxx_destruct
Created
Body
KeyType
EndpointReference
T@"NSArray",&,D
HTTPBody
T@"NSData",C,V_pendingSSOTokens
Header
T@"NSString",R,V_userIdentifier
JSONObjectWithData:options:error:
T@"POSOAPSubcode",&,N,V_Subcode
Lifetime
Reason
_Header
RequestType
_Reason
RequestedSecurityToken
_customLoginRequestHeaderClaims
SecurityTokenReference
_detail
T#,R,N,V_type
_federationType
T@"<POExtensionDelegate>",W,V_delegate
_issuer
T@"LAContext",&,V_credentialContext
_kerberosStatus
T@"NSArray",&,N,V_RequestSecurityTokenResponse
_keychainHelper
T@"NSArray",C,N,V_Header
_parseWSTrust13
T@"NSArray",C,N,V_customLoginRequestValues
_sepKey
T@"NSArray",C,N,V_customRefreshRequestValues
_userIdentifier
T@"NSArray",C,V_kerberosStatus
_wstrustProcess
T@"NSData",&
_xpathResultSet
T@"NSData",&,N,V__deviceEncryptionKeyData
allData
T@"NSData",&,N,V_messageBuffer
T@"NSData",&,V__sepKeyData
T@"NSData",C,V__credential
base64EncodedStringWithOptions:
T@"NSData",R,D
containsObject:
T@"NSDate",&,N,V_Created
created
T@"NSDate",&,N,V_created
dataWithLength:
T@"NSDate",&,N,V_tokenExpires
dealloc
T@"NSDate",R
encodeAndEncryptUsingPublicKey:
T@"NSDictionary",&,D
T@"NSDictionary",&,V_customAssertionRequestHeaderClaims
getBytes:range:
T@"NSDictionary",&,V_customLoginRequestHeaderClaims
T@"NSDictionary",&,V_customRefreshRequestHeaderClaims
isAtEnd
T@"NSDictionary",R
isInternalBuild
T@"NSMutableArray",&,V_keyProxies
isRetry
T@"NSMutableData",&,N,V_password
isUserRegisteredWithCompletion:
T@"NSMutableData",R,D
T@"NSMutableDictionary",&,V_data
keyWrap
T@"NSNumber",&,D
loginConfigurationForExtension:
T@"NSObject",&,V_authenticationObserver
T@"NSString",&,N
options
T@"NSString",&,N,V_apv
T@"NSString",&,N,V_clientName
process
T@"NSString",&,N,V_encryptionKeyTypeKeyName
psso_sha256Hash
T@"NSString",&,N,V_faultCodeValue
rawEncryptedKey
T@"NSString",&,N,V_faultSubCodeValue
removeAllDeliveredNotifications
T@"NSString",&,N,V_messageBufferKeyName
request
T@"NSString",&,N,V_realm
screenDidUnlock
T@"NSString",&,N,V_scope
setApu:
T@"NSString",&,N,V_serverNonce
setAud:
T@"NSString",&,N,V_serviceNameKeyName
setBindingName:
T@"NSString",&,N,V_ticketKeyPath
setDecodedBody:
T@"NSString",&,N,V_tokenType
setEnc:
T@"NSString",&,N,V_userName
setEpk:
T@"NSString",&,V_cacheName
setFaultReason:
T@"NSString",&,V_extensionIdentifier
setFirstUnlock:
T@"NSString",&,V_rawAuthenticationTag
setIss:
T@"NSString",&,V_rawCipherText
setNbf:
T@"NSString",&,V_rawHeader
setP2s:
T@"NSString",&,V_rawSignature
setServerNonce:
T@"NSString",&,V_registrationToken
setStringValue:
T@"NSString",&,V_upn
setTyp:
T@"NSString",C,N,V_Address
setUpn:
T@"NSString",C,N,V_KeyType
setX5c:
T@"NSString",C,N,V_RequestType
set_credential:
T@"NSString",C,N,V_Username
stringByAppendingPathComponent:
T@"NSString",C,N,V_ValueType
T@"NSString",C,N,V_additionalScopes
tokenExpiration
T@"NSString",C,N,V_bindingName
T@"NSString",C,N,V_faultactor
T@"NSString",C,N,V_faultstring
T@"NSString",C,N,V_federationPredicate
T@"NSString",C,N,V_federationRequestURN
T@"NSString",C,N,V_invalidCredentialPredicate
T@"NSString",C,N,V_mustUnderstand
T@"NSString",C,N,V_nonceResponseKeypath
T@"NSString",C,N,V_policyName
T@"NSString",C,N,V_portName
T@"NSString",C,N,V_previousRefreshTokenClaimName
T@"NSString",C,N,V_serverNonceClaimName
T@"NSString",C,N,V_stringValue
T@"NSString",C,V_loginUserName
T@"NSString",C,V_ssoExtensionIdentifier
T@"NSString",C,V_uniqueIdentifier
T@"NSString",R,C
T@"NSString",R,C,N
T@"NSString",R,C,N,V_contentPropertyName
T@"NSString",R,C,N,V_elementName
T@"NSString",R,C,N,V_namespaceURI
T@"NSString",R,D
T@"NSString",R,N,V_clientID
T@"NSString",R,N,V_issuer
T@"NSString",R,V_userName
T@"NSTimer",&,V_authenticationTimer
T@"NSURL",&,N,V_wsTrustFederationMexURL
T@"NSURL",&,N,V_wsTrustFederationURL
T@"NSURL",C,N,V_federationMexURL
T@"NSURL",C,N,V_federationUserPreauthenticationURL
T@"NSURL",C,N,V_nonceEndpointURL
T@"NSURL",C,N,V_refreshEndpointURL
T@"NSURL",C,N,V_tokenEndpointURL
T@"NSURLSession",&,N,V_urlSession
T@"NSXPCConnection",&,V_xpcConnection
T@"POAgentAuthenticationProcess",&,V_agentProcess
T@"POAgentAuthenticationProcess",&,V_process
T@"POAuthenticationProcess",&,V_authenticationProcess
T@"POConfigurationManager",&,V_configurationManager
T@"POConfigurationVersion",&,V_version
T@"PODeviceConfiguration",R,V_currentDeviceConfiguration
T@"PODirectoryServices",&,V_directoryServices
T@"POExtension",&,V_ssoExtension
T@"POJWTBody",&,V_decodedBody
T@"POJWTHeader",&,V_decodedHeader
T@"POKerberosHelper",&,V_kerberosHelper
T@"POKeyBag",&,V_keyBag
T@"POKeyWrap",&,V_keyWrap
T@"POKeychainHelper",&,V_keychainHelper
T@"POLoginConfiguration",R,C,N
T@"POLoginConfiguration",R,V_currentLoginConfiguration
T@"POMutableJWTBody",&,V_body
T@"POMutableJWTHeader",&,V_header
T@"PORegistrationContext",&,V_registrationContext
T@"POSOAPCode",&,N,V_Code
T@"POSOAPEnvelope",&,N,V_Envelope
T@"POSOAPFaultDetail",&,N,V_detail
T@"POSOAPReason",&,N,V_Reason
T@"POSOAPText",&,N,V_Text
T@"POUserConfiguration",R,V_currentUserConfiguration
T@"POWSTrustAppliesToType",&,N,V_AppliesTo
T@"POWSTrustEndpointReferenceType",&,N,V_EndpointReference
T@"POWSTrustKeyIdentifierType",&,N,V_KeyIdentifier
T@"POWSTrustProcess",&,N,V_wstrustProcess
T@"POWSTrustReferenceType",&,N,V_RequestedAttachedReference
T@"POWSTrustReferenceType",&,N,V_RequestedUnattachedReference
T@"POWSTrustRequestedSecurityTokenType",&,N,V_RequestedSecurityToken
T@"POWSTrustSecurityTokenReferenceType",&,N,V_SecurityTokenReference
T@"POWSTrustTimestampType",&,N,V_Lifetime
T@"POWSTrustTimestampType",&,N,V_Timestamp
T@"POWSTrustUsernameTokenType",&,N,V_UsernameToken
T@"POXMLContext",&,N,V_xmldocContext
T@"POXMLXPathContext",&,N,V_xpathContext
T@"POXMLXPathResult",&,N,V_xpathResultSet
T@"SOConfigurationHost",&,V_configurationHost
T@"SOExtensionManager",&,V_extensionManager
T@"UNUserNotificationCenter",&,V_userNotificationCenter
T@?,C,V_authenticationCompletion
T@?,C,V_invalidationHandler
T@?,C,V_startupCompletion
T@?,C,V_unlockCompletion
TB,GisRepair,V_repair
TB,GisRetry,V_retry
TB,N,GisFault,V_fault
TB,N,V_federated
TB,N,V_includePreviousRefreshTokenInLoginRequest
TB,N,V_parseWSTrust13
TB,N,V_parseWSTrust2005
TB,N,V_waitForConnectivity
TB,R
TB,R,D,GisJWE
TB,R,GisDeviceRegistered
TB,R,GisUserRegistered
TB,R,N
TB,V_dataVaultInitialized
TB,V_exchangeRequired
TB,V_firstUnlock
TB,V_forLogin
TB,V_importSuccessful
TB,V_localAccount
TB,V_platformSSOActive
TB,V_registrationCompleted
TB,V_registrationFailed
TB,V_resetKeys
TB,V_userNotified
TGTReceivedForRealm:upn:cache:
TGTRequestDidBegin
TGTRequestDidComplete
TI,V_uid
TQ,N,V_federationType
TQ,N,V_version
TQ,R
TQ,V_loginType
TQ,V_options
TQ,V_wsTrustVersion
T^{__SecCertificate=},N,V_deviceEncryptionCertificate
T^{__SecCertificate=},N,V_deviceSigningCertificate
T^{__SecCertificate=},N,V_sepKeyCertificate
T^{__SecCertificate=},R,N,V_deviceAttestationCertificate
T^{__SecIdentity=},R,D
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},V_sepKey
T^{__SecKey=},N,V_deviceEncryptionKey
T^{__SecKey=},N,V_deviceSigningKey
T^{_xmlDoc=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}ii^{_xmlDtd}^{_xmlDtd}^{_xmlNs}**^v^v*i^{_xmlDict}^vii},N,V_xmldoc
T^{_xmlNode=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}^{_xmlNs}*^{_xmlAttr}^{_xmlNs}^vSS},N,V_node
T^{_xmlXPathContext=^{_xmlDoc}^{_xmlNode}ii^{_xmlHashTable}ii^{_xmlXPathType}ii^{_xmlHashTable}ii^{_xmlXPathAxis}^^{_xmlNs}i^viii^{_xmlNode}^{_xmlNode}^{_xmlHashTable}^?^v^v**^?^v^^{_xmlNs}i^v^?{_xmlError=ii*i*i***ii^v^v}^{_xmlNode}^{_xmlDict}i^vQQi},N,V_xpathCtx
T^{_xmlXPathObject=i^{_xmlNodeSet}id*^vi^vi},N,V_xpathObj
Text
Ti,N,V_encryptionKeyType
Ti,V_failureCount
Timestamp
TokenType
Tq,R,N
Tq,V_state
URLByAppendingPathComponent:
URLPrefix
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSessionDidFinishEventsForBackgroundURLSession:
URLWithString:
UTF8String
UUID
UUIDString
Username
UsernameToken
Value
ValueType
XMLDataWithOptions:
XMLString
XMLStringWithOptions:
_Address
_AppliesTo
_Body
_Code
_Created
_EndpointReference
_Envelope
_Expires
_KeyIdentifier
_KeyType
_Lifetime
_Password
_RequestSecurityTokenResponse
_RequestType
_RequestedAttachedReference
_RequestedSecurityToken
_RequestedUnattachedReference
_SecurityTokenReference
_Subcode
_Text
_Timestamp
_TokenType
_Username
_UsernameToken
_Value
_ValueType
_XMLAttributeStringWithPrefix:name:value:options:appendingToString:
_XMLAttributesStringWithComplexType:options:appendingToString:
_XMLQualifiedNameForNamespace:elementName:options:appendingToString:
_XMLStringWithComplexType:options:appendingToString:
_XMLStringWithOptions:appendingToString:
__analytics
__contextData
__credential
__deviceEncryptionKeyData
__deviceSigningKeyData
__sepKeyData
_accountDisplayName
_additionalScopes
_agentProcess
_analytics
_apv
_assertion
_attributeAttributes
_attributeForName:ofAttributeWithName:
_attributeForName:ofElementWithName:
_attributeForName:ofNodeWithName:attributes:
_attributes
_audience
_authMethod
_authenticationCompletion
_authenticationObserver
_authenticationProcess
_authenticationTimer
_bindingName
_body
_cacheName
_clientID
_clientName
_clientNameKeyName
_configurationHost
_configurationManager
_connectToService
_containerAppBundleIdentifier
_contentPropertyName
_contextData
_created
_credential
_credentialContext
_currentDeviceConfiguration
_currentLoginConfiguration
_currentUserConfiguration
_customAssertionRequestBodyClaims
_customAssertionRequestHeaderClaims
_customFederationUserPreauthenticationRequestValues
_customLoginRequestBodyClaims
_customLoginRequestValues
_customNonceRequestValues
_customRefreshRequestHeaderClaims
_customRefreshRequestValues
_data
_dataVaultInitialized
_decodedBody
_decodedHeader
_defaultConfigurationPath
_delegate
_descriptionForValue:prefix:
_deviceAttestationCertificate
_deviceEncryptionCertificate
_deviceEncryptionKey
_deviceEncryptionKeyData
_deviceSigningCertificate
_deviceSigningKey
_deviceSigningKeyData
_directoryServices
_elementAttributes
_elementName
_elements
_encryptionKeyType
_encryptionKeyTypeKeyName
_endpointURLString
_endpointURN
_exchangeRequired
_expires
_extension
_extensionIdentifier
_extensionManager
_extensionViewController
_failureCount
_fault
_faultReason
_faultSubCodeValue
_faultactor
_faultcode
_faultstring
_federated
_federationMexURL
_federationMexURLKeypath
_federationPredicate
_federationRequestURN
_federationUserPreauthenticationURL
_firstUnlock
_forLogin
_hostExtensionContext
_importSuccessful
_includePreviousRefreshTokenInLoginRequest
_initDataVaultIfNeededWithError:
_initWithClientId:issuer:tokenEndpointURL:jwksEndpointURL:audience:
_invalidCredentialPredicate
_invalidationHandler
_items
_jwksEndpointURL
_kerberosDelegate
_kerberosTicketMappings
_keyIdentifier
_keyProxies
_keyWrap
_lastAuthenticationAttempt
_localAccount
_loginType
_loginUserName
_messageBuffer
_messageBufferKeyName
_namespaceURI
_namespaces
_node
_nonce
_nonceEndpointURL
_nonceResponseKeypath
_notificationCenter
_notifyToken
_options
_parseWSTrust2005
_password
_passwordData
_pendingSSOTokens
_performDynamicWSTrustPasswordLoginWithContext:loginConfiguration:deviceConfiguration:userConfiguration:jwksStorageProvider:userName:password:completion:
_performPasswordLoginWithContext:loginConfiguration:deviceConfiguration:userConfiguration:jwksStorageProvider:userName:password:completion:
_performWSTrustPasswordLoginWithContext:loginConfiguration:deviceConfiguration:userConfiguration:jwksStorageProvider:userName:password:completion:
_platformSSOActive
_policyName
_portName
_previousRefreshTokenClaimName
_process
_properties
_rawAuthenticationTag
_rawBody
_rawCipherText
_rawEncryptedKey
_rawHeader
_rawIV
_rawSignature
_realm
_realmKeyName
_refreshEndpointURL
_registrationCompleted
_registrationContext
_registrationFailed
_registrationToken
_requestIdentifier
_resetKeys
_retry
_scope
_securityExtensionPrefix
_sepKeyCertificate
_sepKeyData
_serverNonce
_serverNonceClaimName
_serviceConnection
_serviceName
_serviceNameKeyName
_sessionKey
_sessionKeyKeyName
_setAttribute:forName:ofAttributeWithName:
_setAttribute:forName:ofElementWithName:
_setAttribute:forName:ofNodeWithName:attributes:
_setQueue:
_setStateAndNotify:
_setTargetUserIdentifier:
_ssoExtension
_ssoExtensionIdentifier
_startDeviceRegistration
_startUserRegistration
_startupCompletion
_state
_stringSuitableForHTML:
_stringValue
_ticketKeyPath
_token
_tokenEndpointURL
_tokenExpires
_tokenType
_tokenTypeNamespace
_type
_types
_uid
_uniqueIdentifier
_unlockCompletion
_upn
_urlSession
_userName
_userNotificationCenter
_userNotified
_version
_waitForConnectivity
_wsTrustFederationMexURL
_wsTrustFederationNonce
_wsTrustFederationURL
_xmldocContext
_xpathContext
_xpathCtx
_xpathObj
_xpcConnection
absoluteString
accountDisplayName
acquireCredentialForUUID:
action
actionIdentifier
actionWithIdentifier:title:options:
addAttributeWithName:type:
addAttributeWithName:type:isSpecifiedKey:
addAttributeWithName:type:namespaceURI:
addCharactersInRange:
addCharactersInString:
addCustomClaims:
addElementWithName:namespaceURI:type:
addElementWithName:namespaceURI:type:isSpecifiedKey:
addElementWithName:namespaceURI:type:maxOccurs:minOccurs:
addElementWithName:namespaceURI:type:maxOccurs:minOccurs:flattenMultiValue:
addEntriesFromDictionary:
addEphemeralPublicKey:
addEvent:
addEvent:forKeyType:
addNamespaceWithURI:
addNotificationRequest:withCompletionHandler:
addObject:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addTimer:forMode:
addTokens:metaData:toKeychainForService:username:
addUnboundedElementWithName:namespaceURI:type:
addValue:forHTTPHeaderField:
additionalScopes
agentProcess
algorithmWithIdentifier:
allHTTPHeaderFields
allObjects
allValues
allocWithZone:
allowedElementKeys
alternateDSID
analyticsForLoginManager:
analyticsForLoginType:result:
analyticsForPasswordChange:credentialNeeded:result:
analyticsForRegistrationType:options:result:
analyticsForStatus
analyticsForTestMessages
appSSOEnabled
appendBytes:length:
appendData:
appendFormat:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithObjects:count:
assertion
attestKey:clientDataHash:completion:
attributes
audArray
audience
auditToken
authMethod
authenticationCompletion
authenticationMethod
authenticationMethods
authenticationObserver
authenticationProcess
authenticationTimer
authorization:didCompleteWithCredential:error:
autorelease
beginDeviceRegistrationUsingOptions:completion:
beginUserRegistrationUsingUserName:authenticationMethod:options:completion:
bindingName
body
bodyData
boolValue
boolValueForKey:defaultValue:
bundleIdentiferForXPCConnection:
bytes
cacheName
calculateExpirationForTokens:
calendar
canPerformRegistration
canPerformRegistrationCompletion:
categoryIdentifier
categoryWithIdentifier:actions:intentIdentifiers:options:
certificateForData:
characterAtIndex:
characterSetWithCharactersInString:
checkForValidKerberosTGT:
checkVersion
class
clientID
clientName
clientNameKeyName
client_id
components:fromDate:
componentsSeparatedByString:
componentsWithString:
concatKDFWithKey:algorithm:partyUInfo:partyVInfo:
configurationChanged:
configurationHost
configurationManager
configurationWithOpenIdConfigurationURL:clientID:issuer:completion:
configurationWithOpenIdConfigurationURL:identityProviderURL:clientId:issuer:completion:
conformsToProtocol:
connectionInvalidated
containerAppBundleIdentifier
contentPropertyName
contentsOfDirectoryAtPath:error:
copy
copyDeviceAttestationCertificate
copyDeviceAttestationCertificateWithCompletion:
copyIdentityForKeyType:
copyKeyForKeyType:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAuthenticationContextUsingLoginConfiguration:deviceConfiguration:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createEmbeddedAssertionWithContext:loginConfiguration:userName:signingKey:
createIdentityFromEndpoint:error:
createKeyFromEndpoint:error:
createLoginJWTWithContext:loginConfiguration:userConfiguration:userName:password:embeddedAssertion:
createLoginRequestWithContext:loginConfiguration:jwt:
createNonceRequestWithContext:loginConfiguration:
createPartyVInfoWithContext:apvKey:
createPreAuthenticationRequestWithContext:loginConfiguration:userName:
createRegistrationNotificationWithAccountName:
createSEPKeyForKeyType:
createSignInNotificationWithAccountName:extensionIdentifier:
createTestMessagesForLoginConfiguration:certificate:
createUserAccount:passwordContext:
createUserAccount:passwordContext:completion:
createWSTrust13Request:
createWSTrust13RequestWithContext:loginConfiguration:userName:password:
createWSTrust13Response:
createWSTrust2005Request:
createWSTrust2005RequestWithContext:loginConfiguration:userName:password:
createWSTrust2005Response:
createWSTrustFault:
createWSTrustMexRequestWithContext:loginConfiguration:
credentialContext
credentialOfType:reply:
currentDeviceConfiguration
currentLoginConfiguration
currentRefreshToken
currentRunLoop
currentUser
currentUserConfiguration
customAssertionRequestBodyClaims
customAssertionRequestHeaderClaims
customFederationUserPreauthenticationRequestValues
customLoginRequestBodyClaims
customLoginRequestHeaderClaims
customLoginRequestValues
customNonceRequestValues
customRefreshRequestBodyClaims
customRefreshRequestHeaderClaims
customRefreshRequestValues
data
dataForCertificate:
dataForKey:
dataRepresentation
dataRepresentationForDisplay:
dataTaskWithRequest:completionHandler:
dataTaskWithURL:completionHandler:
dataUsingEncoding:
dataVaultInitialized
dataWithBytes:length:
dataWithContentsOfURL:
dataWithJSONObject:options:error:
date
dateByAddingTimeInterval:
dateFromComponents:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
debugDescription
decodeAndDecryptUsingPrivateKey:
decodeAndDecryptUsingPrivateKey:apvString:
decodeEphemeralPublicKey
decodeObjectOfClass:forKey:
decodedBody
decodedHeader
decryptPendingSSOTokensUsingPrivateKey:
defaultCenter
defaultManager
definition
definitionForType:
delegate
description
descriptionForValue:
detail
deviceAttestationCertificate
deviceConfigurationForExtension:
deviceConfigurationForExtension:completion:
deviceEncryptionCertificate
deviceEncryptionIdentity
deviceEncryptionKey
deviceRegistered
deviceRegistrationsNeedsRepair
deviceRegistrationsNeedsRepairWithCompletion:
deviceSigningCertificate
deviceSigningIdentity
deviceSigningKey
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
directoryServices
disablePlatformSSORuleForScreensaver:
doubleValue
effectiveUserIdentifier
elementForValue:
elementName
elements
elementsNeedRedaction
enablePlatformSSORuleForScreensaver:
enableScreensaverRuleIfNeeded:
encodeAndEncryptUsingPublicKey:partyVInfo:
encodeAndSignUsingAlgorithm:key:certificate:
encodeObject:forKey:
encodeWithCoder:
encryptPendingSSOTokens:usingPublicKey:
encryptionKeyType
encryptionKeyTypeKeyName
endpoint
endpointURLString
endpointURN
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
ephemeralSessionConfiguration
errorWithCode:
errorWithCode:underlyingError:
errorWithCode:underlyingError:description:
errorWithDomain:code:userInfo:
evaluateWithObject:
evaluateXPath:
exchangeKerberosTGTForEntry:
exchangeRequired
exchangeTGTForStatus:
expires_in
expires_on
extensionBundleIdentifier
extensionIdentifier
extensionManager
externalizedContext
failureCount
fault
faultCodeValue
faultReason
faultSubCodeValue
faultactor
faultcode
faultstring
federated
federationMexURL
federationMexURLKeypath
federationPredicate
federationRequestURN
federationType
federationUserPreauthenticationURL
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileSystemRepresentation
fileURLWithPath:
findKey:inJWKSData:
firstObject
firstUnlock
flattenMultiValueElementWithName:
forLogin
forceKerberosTGTExchange
getCharacters:
getLoginTypeForUser:tokensFresh:
grant_type
handleAgentStartup
handleConfigurationChanged:
handleDeviceAndUserRegistrationForRepair:
handleDeviceAndUserRegistrationForRepair:notified:
handleDeviceRegistrationNotification
handleKerberosMappingForTokens:extensionIdentifier:userConfiguration:
handleKerberosMappingForTokens:loginConfiguration:userConfiguration:
handleNetworkChange
handlePendingSSOTokens
handleRegistrationViewControllerForExtensionIdentifier:completion:
handleRemovingRegistrationForExtension:
handleScreenSaverRule
handleScreenUnlock
handleUnfinishedTGTExchanges
handleUserCredentialNeededAtLogin:
handleUserCredentialNeededAtLogin:returningContext:
handleUserNeedsReauthenticationAfterDelay:
handleUserRegistrationForUser:repair:
handleUserRegistrationForUser:repair:notified:
handleUserRegistrationNotification
hasAllRequiredValues
hasAnyMDMProfileForExtension:
hasPrefix:
hasSuffix:
hash
header
host
hostExtensionContext
iconForApplicationIdentifier:
id_token
identifier
identityForKey:andCertificate:
identityForKeyType:
importKerberosEntry:error:
importSuccessful
includePreviousRefreshTokenInLoginRequest
increaseVersionWithMessage:
init
initWithAuthenticationProcess:
initWithBase64EncodedString:options:
initWithBundleIdentifier:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCalendarIdentifier:
initWithClientID:issuer:tokenEndpointURL:jwksEndpointURL:audience:
initWithCoder:
initWithData:
initWithData:contextData:
initWithData:encoding:
initWithDelegate:
initWithDictionary:
initWithDomain:code:userInfo:
initWithElementName:namespaceURI:type:
initWithExtensionBundleIdentifier:
initWithExternalizedContext:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithIdentity:
initWithJWTData:
initWithKey:
initWithKeyOptions:valueOptions:capacity:
initWithLocaleIdentifier:
initWithMachServiceName:options:
initWithName:
initWithTrust:
initWithURL:cachePolicy:timeoutInterval:
initWithURL:resolvingAgainstBaseURL:
initWithUUIDString:
initWithUid:forLogin:
initWithUserName:
initWithXMLContext:
initWithXPCConnection:
initWithXPCConnection:authenticationProcess:
initialize
intValue
integerValue
interfaceWithInternalProtocol:
interfaceWithProtocol:
internalErrorWithMessage:
invalidCredentialPredicate
invalidate
invalidateAllKeyProxies
invalidationHandler
invert
isAssociatedDomainValidated
isCallerCurrentSSOExtension
isCredentialFault
isCurrentSSOExtension:
isDeviceRegistered
isDeviceRegisteredWithCompletion:
isEqual:
isEqualToData:
isEqualToString:
isEqualToTimeZone:
isJWE
isKindOfClass:
isMemberOfClass:
isNetworkConnectedForRealm:
isRealmConfiguredForKerberosExtension:
isRepair
isSpecifiedKeyForElementName:
isSubclassOfClass:
isURL:validForProfile:
isUserKeybagUnlocked
isUserNotification
isUserRegistered
isValidJSONObject:
issuer
jwksCache
jwksCacheForExtensionIdentifier:
kerberosDelegate
kerberosHelper
kerberosStatus
kerberosTicketMappings
keyBag
keyForData:
keyIdentifier
keyProxies
keyProxyEndpointForKeyType:
keychainHelper
lastAuthenticationAttempt
lastObject
length
loadConfiguration
loadExtensionWithBundleIdentifier:
loadSSOExtensionWithExtensionBundleIdentifier:
loadXMLDocument:
localAccount
localizedStringForKey:value:table:
localizedStringWithFormat:
loginConfiguration
loginConfigurationForExtension:completion:
loginConfigurationWithCompletion:
loginType
loginUserName
loginUserNameWithCompletion:
longLongValue
maxCountForElementName:
messageBuffer
messageBufferKeyName
minCountForElementName:
mustUnderstand
mutableBytes
mutableCopy
mutableCopyWithZone:
name
nameSpacePrefixForHref:
namespaceForAttributeName:
namespaceURI
namespaces
newDateFormatter
newDateFormatters
newDateTimeFormatterWithTimeZoneStyle:
newDateTimeFormatters
newTimeFormatterWithTimeZoneStyle:
newTimeFormatters
node
nodeCount
nodes
nonce
nonceEndpointURL
nonceResponseKeypath
notification
notificationCenter
notifyKerberosDelegateTGTDidBegin
notifyKerberosDelegateTGTDidComplete
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
operatingSystemVersionString
parent
parseMexResponse:namespaces:policyXPath:action:
parseWSTrust13
parseWSTrust2005
parseWSTrustMexResponse:version:
parseWSTrustRequest:version:
parseWSTrustResponse:version:
password
passwordData
passwordDataFromContext:error:
passwordStringFromData:
path
pendingSSOTokens
percentEncodedQuery
performLocalPasswordLogin:passwordContext:
performLocalPasswordLogin:passwordContext:completion:
performLoginForCurrentUser
performLoginRequestWithContext:loginConfiguration:request:completion:
performLoginWithContext:loginConfiguration:deviceConfiguration:jwksStorageProvider:loginJWT:completion:
performNonceRequestWithContext:loginConfiguration:request:completion:
performPasswordLogin:passwordContext:updateLocalAccountPassword:
performPasswordLogin:passwordContext:updateLocalAccountPassword:completion:
performPasswordLoginUsingLoginConfiguration:deviceConfiguration:userConfiguration:jwksStorageProvider:userName:password:completion:
performPreAuthenticationRequestWithContext:loginConfiguration:request:completion:
performSEPKeyLogin:
performSEPKeyLogin:completion:
performSEPKeyLoginUsingLoginConfiguration:deviceConfiguration:userConfiguration:jwksStorageProvider:userName:signingKey:certificate:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTokenRefreshUsingLoginConfiguration:deviceConfiguration:userConfiguration:refreshToken:signingKey:completion:
performWSTrustAuthenticationRequestWithContext:loginConfiguration:request:completion:
performWSTrustMexRequestWithContext:loginConfiguration:request:completion:
platformSSOActive
platformSSOEnabled
platformSSOTriggerFile
policyName
portName
postNotificationName:object:userInfo:
predicateWithFormat:
prefixForNamespaceURI:
presentAuthorizationViewControllerWithHints:completion:
presentAuthorizationViewControllerWithHints:requestIdentifier:completion:
presentRegistrationViewControllerWithCompletion:
previousRefreshTokenClaimName
printKey:
processInfo
promptUserForRegistration
propertyForName:
pssoAuthenticationMethod
pssoRegistrationToken
psso_DisplayRequest
psso_base64URLEncodedString
psso_initWithBase64URLEncodedString:
psso_sha256HashString
queryItemWithName:value:
queryItems
rangeOfCharacterFromSet:options:range:
rangeOfString:
rawAuthenticationTag
rawCipherText
rawHeader
rawIV
rawSignature
rawXMLString
realm
realmKeyName
refreshEndpointURL
refresh_token
refresh_token_expires_in
registerNamespaces:
registrationCompleted
registrationContext
registrationDidComplete
registrationFailed
registrationToken
registrationTokenForExtensionIdentifier:
registrationTokenWithCompletion:
remoteObjectProxyWithErrorHandler:
removeAllPendingNotificationRequests
removeDelegateForRequestIdentifier:
removeDeliveredNotificationsWithIdentifiers:
removeDeviceConfigurationForExtension:
removeDeviceConfigurationForExtension:completion:
removeItemAtPath:error:
removeItemAtURL:error:
removeLoginConfigurationForExtension:
removeLoginConfigurationForExtension:completion:
removeObject:
removeObjectForKey:
removePendingNotificationRequestsWithIdentifiers:
removeTokensFromKeychainWithService:username:
removeUserConfigurationForIdentifier:completion:
removeUserConfigurationForUserName:
repair
requestAuthorizationViewControllerWithCompletion:
requestDidCompleteWithError:
requestIdentifier
requestReauthenticationWithCompletion:
requestReauthenticationWithRequestIdentifier:completion:
requestUserAuthenticationWithUserInfo:
requestUserAuthenticationWithWindow:completion:
requestWithIdentifier:content:trigger:destinations:
request_nonce
reset
resetKeys
resetKeysWithCompletion:
resetStoredConfiguration
resetStoredConfigurationWithCompletion:
respondsToSelector:
restoreScreensaverRuleIfNeeded
resume
retain
retainCount
retrieveSigningKeyWithContext:loginConfiguration:jwksStorageProvider:keyId:completion:
retrieveTokensFromKeychainForService:username:returningTokens:metaData:
retry
saveCertificate:keyType:
saveConfiguration
saveCredentialForUserName:passwordContext:
saveCredentialForUserName:passwordContext:completion:
saveCurrentUserConfiguration
saveDelegate:forRequestIdentifier:
saveDeviceConfiguration:forExtension:
saveDeviceConfiguration:forExtension:completion:
saveLoginConfiguration:error:
saveLoginConfiguration:forExtension:
saveLoginConfiguration:forExtension:completion:
saveUserConfiguration:forIdentifier:completion:
saveUserConfiguration:forUserName:
scanDouble:
scanLocation
scanString:intoString:
scope
screenDidUnlockWithCompletion:
secIdentityProxyEndpointForKeyType:completion:
secKeyProxyEndpointForKeyType:completion:
securityExtensionPrefix
self
sepKey
sepKeyCertificate
serverNonce
serverNonceClaimName
serverTrust
serviceName
serviceNameKeyName
sessionKey
sessionKeyKeyName
sessionWithConfiguration:
sessionWithConfiguration:delegate:delegateQueue:
setAccountDisplayName:
setAction:
setAdditionalScopes:
setAddress:
setAgentProcess:
setAppliesTo:
setAssertion:
setAttributes:ofItemAtPath:error:
setAudArray:
setAudience:
setAuthMethod:
setAuthenticationCompletion:
setAuthenticationObserver:
setAuthenticationProcess:
setAuthenticationTimer:
setBody:
setBodyData:
setCacheName:
setCategoryIdentifier:
setCertificateData:keyType:completion:
setClientName:
setClientNameKeyName:
setClient_id:
setCode:
setConfigurationHost:
setConfigurationManager:
setContainerAppBundleIdentifier:
setContentPropertyName:type:
setCreated:
setCredential:type:
setCredentialContext:
setCustomAssertionRequestBodyClaims:
setCustomAssertionRequestBodyClaims:returningError:
setCustomAssertionRequestHeaderClaims:
setCustomAssertionRequestHeaderClaims:returningError:
setCustomFederationUserPreauthenticationRequestValues:
setCustomLoginRequestBodyClaims:
setCustomLoginRequestBodyClaims:returningError:
setCustomLoginRequestHeaderClaims:
setCustomLoginRequestHeaderClaims:returningError:
setCustomLoginRequestValues:
setCustomNonceRequestValues:
setCustomRefreshRequestBodyClaims:
setCustomRefreshRequestBodyClaims:returningError:
setCustomRefreshRequestHeaderClaims:
setCustomRefreshRequestHeaderClaims:returningError:
setCustomRefreshRequestValues:
setData:
setDataVaultInitialized:
setDateFormat:
setDecodedHeader:
setDelegate:
setDetail:
setDeviceEncryptionKey:
setDeviceSigningCertificate:
setDeviceSigningKey:
setDirectoryServices:
setEncryptionKeyType:
setEncryptionKeyTypeKeyName:
setEndpointReference:
setEndpointURLString:
setEnvelope:
setExchangeRequired:
setExpires:
setExpires_in:
setExpires_on:
setExtensionIdentifier:
setExtensionManager:
setFailureCount:
setFault:
setFaultCodeValue:
setFaultSubCodeValue:
setFaultactor:
setFaultcode:
setFederated:
setFederationMexURL:
setFederationMexURLKeypath:
setFederationPredicate:
setFederationRequestURN:
setFederationType:
setFederationUserPreauthenticationURL:
setForLogin:
setFormatOptions:
setFragment:
setGrant_type:
setHTTPBody:
setHTTPMethod:
setHeader:
setHostExtensionContext:
setIcon:
setId:
setId_token:
setImportSuccessful:
setIncludePreviousRefreshTokenInLoginRequest:
setInterruptionHandler:
setInterruptionLevel:
setInvalidCredentialPredicate:
setInvalidationHandler:
setIsSpecifiedKey:onElementWithName:
setJwksCache:
setJwksCache:forExtensionIdentifier:
setJwksEndpointURL:
setKerberosDelegate:
setKerberosHelper:
setKerberosStatus:
setKerberosTicketMappings:
setKeyBag:
setKeyIdentifier:
setKeyProxies:
setKeyType:
setKeyWrap:
setKeychainHelper:
setLastAuthenticationAttempt:
setLenient:
setLifetime:
setLocalAccount:
setLocale:
setLoginConfiguration:completion:
setLoginType:
setLoginUserName:
setLoginUserName:completion:
setMessageBuffer:
setMessageBufferKeyName:
setMustUnderstand:
setName:namespaceURI:forType:
setNode:
setNonce:
setNonceEndpointURL:
setNonceResponseKeypath:
setNotificationCategories:
setNotificationCenter:
setObject:forKey:
setObject:forKeyedSubscript:
setOptions:
setParseWSTrust13:
setParseWSTrust2005:
setPassword:
setPasswordData:
setPendingSSOTokens:
setPlatformSSOActive:
setPlatformSSOUnavailable
setPolicyName:
setPortName:
setPreviousRefreshTokenClaimName:
setProcess:
setProperty:forName:
setQuery:
setQueryItems:
setRawAuthenticationTag:
setRawBody:
setRawCipherText:
setRawEncryptedKey:
setRawHeader:
setRawIV:
setRawSignature:
setRealm:
setRealmKeyName:
setReason:
setRefreshEndpointURL:
setRefresh_token:
setRefresh_token_expires_in:
setRegistrationCompleted:
setRegistrationContext:
setRegistrationFailed:
setRegistrationToken:
setRegistrationToken:completion:
setRemoteObjectInterface:
setRepair:
setRequestIdentifier:
setRequestSecurityTokenResponse:
setRequest_nonce:
setRequestedAttachedReference:
setRequestedSecurityToken:
setRequestedUnattachedReference:
setResetKeys:
setRetry:
setScanLocation:
setScope:
setSecurityExtensionPrefix:
setSecurityTokenReference:
setSepKey:
setSepKeyCertificate:
setServerNonceClaimName:
setServiceNameKeyName:
setSessionKey:
setSessionKeyKeyName:
setShouldBackgroundDefaultAction:
setShouldPreventNotificationDismissalAfterDefaultAction:
setSsoExtension:
setSsoExtensionIdentifier:
setSsoTokens:
setSsoTokens:completion:
setStartupCompletion:
setState:
setSubcode:
setTaskDescription:
setText:
setTicketKeyPath:
setTimeZone:
setTimeoutIntervalForResource:
setTimestamp:
setTitle:
setTo:
setTokenEndpointURL:
setTokenExpires:
setTokenType:
setTokenTypeNamespace:
setToken_type:
setTokens:returningError:
setTolerance:
setType:forName:
setUniqueIdentifier:
setUnlockCompletion:
setUrlSession:
setUserInfo:
setUserName:
setUserNotificationCenter:
setUserNotified:
setUsername:
setUsernameToken:
setValue:
setValue:forKey:
setValueType:
setVersion:
setWaitForConnectivity:
setWaitsForConnectivity:
setWantsNotificationResponsesDelivered
setWithArray:
setWsTrustFederationMexURL:
setWsTrustFederationNonce:
setWsTrustFederationURL:
setWsTrustVersion:
setWstrustProcess:
setXmldoc:
setXmldocContext:
setXpathContext:
setXpathCtx:
setXpathObj:
setXpathResultSet:
setXpcConnection:
set_analytics:
set_contextData:
set_deviceEncryptionKeyData:
set_deviceSigningKeyData:
set_preventsAppSSO:
setupNonUISessionWithCompletion:
setupNotificationCategories
setupTimerForAuthentication
sharedInstance
sharedManager
signData:usingKey:
signedData
ssoExtension
ssoExtensionIdentifier
ssoMethodToUse:profile:
ssoTokens
ssoTokensWithCompletion:
standardUserDefaults
startObservingKeyBagLockStatusChanges
startupCompletion
state
statusCode
stopObservingKeyBagLockStatusChanges
string
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringForKey:
stringForKeyType:
stringForLoginResult:
stringForLoginType:
stringForUserState:
stringFromValue:
stringRepresentation
stringValue
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
subdataWithRange:
superclass
supportsSecureCoding
synchronousRemoteObjectProxyWithErrorHandler:
ticketKeyPath
timeIntervalSince1970
timeIntervalSinceNow
timeZone
timeZoneWithAbbreviation:
tokenEndpointURL
tokenExpires
tokenReceived
tokenType
tokenTypeNamespace
token_type
tokens
triggerVPNForRealm:
triggerWithTimeInterval:repeats:
type
typeForName:
types
unarchivedDictionaryWithKeysOfClasses:objectsOfClasses:fromData:error:
uniqueIdentifier
uniqueIdentifierForUserName:
unload
unlockCompletion
unsignedIntegerValue
unwrapBlob:
updateTriggerFile
urlSession
userConfigurationForIdentifier:passwordContext:completion:
userConfigurationForUserName:
userConfigurationForUserName:passwordContext:
userIdentifier
userInfo
userName
userNeedsReauthentication
userNeedsReauthenticationWithCompletion:
userNotificationCenter
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotified
userRegistered
userRegistrationsNeedsRepair
userRegistrationsNeedsRepairWithCompletion:
username
validateIdToken:context:loginConfiguration:key:
validatePartyUInfo:context:
validatePartyVInfo:context:publicKey:
validateWSTrustAuthenticationResponseWithContext:loginConfiguration:response:returningAssertion:
validateWSTrustMexResponseWithContext:response:
validatedProfileForPlatformSSO
value
valueForEntitlement:
valueForKey:
valueForKeyPath:
valueForProperty:
valueFromString:
verifySignature:onData:usingCertificateString:
verifySignature:onData:usingKey:
verifySignatureUsingKey:
waitForConnectivity
waitForKeyBagFirstUnlockOnStartupWithCompletion:
waitForKeyBagFirstUnlockWithCompletion:
whitespaceAndNewlineCharacterSet
windowDidClose
wrapBlob:
writeToFile:options:error:
writeToURL:options:error:
wsTrustFederationMexURL
wsTrustFederationNonce
wsTrustFederationURL
wsTrustVersion
wstrustProcess
xmldoc
xmldocContext
xpathContext
xpathCtx
xpathObj
xpathResultSet
xpcConnection
xpcQueue
zeroPassword
zone
@24@0:8@16
i48@0:8@16@24@32@40
i48@0:8@16@24^@32^@40
i32@0:8@16@24
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"POXSDefinition"16@0:8
B24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
B32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
v24@0:8@16
v16@0:8
@"NSString"
@"POJWTHeader"
@"POJWTBody"
@40@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24^{__SecCertificate=}32
@24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
@32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
@"POMutableJWTHeader"
@"POMutableJWTBody"
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSData"24@?<v@?@"POUserConfiguration"@"NSError">32
v40@0:8@"POUserConfiguration"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@?<v@?B@"NSError">16
@"NSXPCConnection"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8B16
v24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
B32@0:8@16^@24
B32@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
@20@0:8B16
@32@0:8@16@24
q16@0:8
v24@0:8q16
v24@0:8Q16
^{__SecCertificate=}16@0:8
v24@0:8^{__SecCertificate=}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
^{__SecCertificate=}
@"NSData"
@"LAContext"
@"NSArray"
@"POKeychainHelper"
^{__SecKey=}16@0:8
v24@0:8^{__SecKey=}16
^{__SecIdentity=}16@0:8
^{__SecKey=}
@24@0:8^{_NSZone=}16
#24@0:8@16
Q24@0:8@16
v32@0:8#16@24
@"NSMutableDictionary"
@?16@0:8
v40@0:8@16q24@?32
v32@0:8q16@?24
v40@0:8q16@24@?32
v24@0:8@?<v@?@"NSString"@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"POLoginConfiguration"@"NSError">16
v32@0:8@"POLoginConfiguration"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16q24@?<v@?B@"NSError">32
v32@0:8q16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v40@0:8q16@"NSData"24@?<v@?@"NSData"@"NSError">32
v24@0:8@?<v@?^{__SecCertificate=}@"NSError">16
@24@0:8q16
B32@0:8@16@24
v32@0:8@16q24
@"POConfigurationManager"
@"POAgentAuthenticationProcess"
@"NSMutableArray"
@"NSObject"
@"SOConfigurationHost"
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24@0:8q16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24@0:8@16
@24@0:8^{__SecCertificate=}16
^{__SecCertificate=}24@0:8@16
^{__SecIdentity=}32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^{__SecCertificate=}24
@32@0:8@16^{__SecKey=}24
B40@0:8@16@24^{__SecKey=}32
B40@0:8@16@24@32
@"NSData"32@0:8@"NSData"16^{__SecKey=}24
B40@0:8@"NSData"16@"NSData"24^{__SecKey=}32
B40@0:8@"NSData"16@"NSData"24@"NSString"32
v40@0:8@16@24@32
v40@0:8@"NSString"16@"SOAuthorizationCredential"24@"NSError"32
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@?<v@?Q>16
v32@0:8Q16@?24
v44@0:8@16i24Q28@?36
v32@0:8Q16@?<v@?q>24
v44@0:8@"NSString"16i24Q28@?<v@?q>36
v24@0:8@?<v@?B>16
@"SOExtension"
@"SORemoteExtensionViewController"
@"<POExtensionDelegate>"
@"NSArray"16@0:8
v32@0:8@16#24
v40@0:8@16#24@32
v40@0:8@16@24#32
v48@0:8@16@24#32@40
v32@0:8@16@24
v56@0:8@16@24#32Q40Q48
v60@0:8@16@24#32Q40Q48B56
v48@0:8@16@24@32@40
@40@0:8@16@24@32
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v24@0:8@"NSError"16
B24@0:8d16
v28@0:8B16^@20
v24@0:8B16B20
v28@0:8@16B24
v32@0:8@16B24B28
@"POAuthenticationProcess"
@"SOExtensionManager"
@"POKeyBag"
@"UNUserNotificationCenter"
@"NSNotificationCenter"
@"POKerberosHelper"
@"PODirectoryServices"
@"PORegistrationContext"
@"NSTimer"
@"NSDate"
@"<POAgentAuthenticationProcessKerberosDelegate>"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v72@0:8@16@24@32@40@48@56@?64
v80@0:8@16@24@32@40@48^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}56^{__SecCertificate=}64@?72
v64@0:8@16@24@32@40^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}48@?56
v80@0:8@16@24@32@40@48@56@64@?72
@48@0:8@16@24@32@40
Q48@0:8@16@24@32^@40
v64@0:8@16@24@32@40@48@?56
@32@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
@48@0:8@16@24@32^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}40
@64@0:8@16@24@32@40@48@56
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32@0:8@16@24
B48@0:8@16@24@32^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}40
B40@0:8@16@24^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32
@32@0:8@16^{__SecCertificate=}24
@"POWSTrustProcess"
@24@0:8#16
@40@0:8@16@24#32
@"POWSTrustAppliesToType"
@"POWSTrustEndpointReferenceType"
@"POWSTrustUsernameTokenType"
@"POWSTrustTimestampType"
@"POWSTrustRequestedSecurityTokenType"
@"POWSTrustReferenceType"
@"POWSTrustKeyIdentifierType"
@"POWSTrustSecurityTokenReferenceType"
^{_xmlDoc=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}ii^{_xmlDtd}^{_xmlDtd}^{_xmlNs}**^v^v*i^{_xmlDict}^vii}16@0:8
v24@0:8^{_xmlDoc=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}ii^{_xmlDtd}^{_xmlDtd}^{_xmlNs}**^v^v*i^{_xmlDict}^vii}16
^{_xmlDoc=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}ii^{_xmlDtd}^{_xmlDtd}^{_xmlNs}**^v^v*i^{_xmlDict}^vii}
^{_xmlNode=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}^{_xmlNs}*^{_xmlAttr}^{_xmlNs}^vSS}16@0:8
v24@0:8^{_xmlNode=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}^{_xmlNs}*^{_xmlAttr}^{_xmlNs}^vSS}16
^{_xmlNode=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}^{_xmlNs}*^{_xmlAttr}^{_xmlNs}^vSS}
@"POXMLXPathResult"
i16@0:8
^{_xmlXPathObject=i^{_xmlNodeSet}id*^vi^vi}16@0:8
v24@0:8^{_xmlXPathObject=i^{_xmlNodeSet}id*^vi^vi}16
^{_xmlXPathObject=i^{_xmlNodeSet}id*^vi^vi}
@"POXMLXPathContext"
^{_xmlXPathContext=^{_xmlDoc}^{_xmlNode}ii^{_xmlHashTable}ii^{_xmlXPathType}ii^{_xmlHashTable}ii^{_xmlXPathAxis}^^{_xmlNs}i^viii^{_xmlNode}^{_xmlNode}^{_xmlHashTable}^?^v^v**^?^v^^{_xmlNs}i^v^?{_xmlError=ii*i*i***ii^v^v}^{_xmlNode}^{_xmlDict}i^vQQi}16@0:8
v24@0:8^{_xmlXPathContext=^{_xmlDoc}^{_xmlNode}ii^{_xmlHashTable}ii^{_xmlXPathType}ii^{_xmlHashTable}ii^{_xmlXPathAxis}^^{_xmlNs}i^viii^{_xmlNode}^{_xmlNode}^{_xmlHashTable}^?^v^v**^?^v^^{_xmlNs}i^v^?{_xmlError=ii*i*i***ii^v^v}^{_xmlNode}^{_xmlDict}i^vQQi}16
^{_xmlXPathContext=^{_xmlDoc}^{_xmlNode}ii^{_xmlHashTable}ii^{_xmlXPathType}ii^{_xmlHashTable}ii^{_xmlXPathAxis}^^{_xmlNs}i^viii^{_xmlNode}^{_xmlNode}^{_xmlHashTable}^?^v^v**^?^v^^{_xmlNs}i^v^?{_xmlError=ii*i*i***ii^v^v}^{_xmlNode}^{_xmlDict}i^vQQi}
@"POXMLContext"
@"NSMapTable"
@24@0:8Q16
@"NSURLSession"
@"NSURL"
@32@0:8@16^@24
v28@0:8B16B20B24
v40@0:8@16Q24q32
B28@0:8^{__CFString=}16B24
v48@0:8@16@24Q32@40
v56@0:8@16@24@32Q40@48
v40@0:8@16Q24@32
v32@0:8Q16@24
@"POSOAPEnvelope"
@"POSOAPText"
@"NSData"16@0:8
v24@0:8@"NSData"16
@"PODaemonConnection"
@"POUserConfiguration"
@"POLoginConfiguration"
@"PODeviceConfiguration"
@"POConfigurationVersion"
@24@0:8I16B20
Q32@0:8@16^B24
Q36@0:8@16@24B32
Q32@0:8@16@24
@"POServiceConnection"
v20@0:8i16
@"POExtension"
@56@0:8@16@24@32@40@48
@"NSDictionary"
@"NSMutableData"
@32@0:8@16Q24
v44@0:8@16@24B32@?36
v32@0:8@"NSString"16@?<v@?QB@"NSError">24
v44@0:8@"NSString"16@"NSData"24B32@?<v@?Q@"NSError">36
v40@0:8@"NSString"16@"NSData"24@?<v@?Q@"NSError">32
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v40@0:8@"NSString"16@"NSData"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSError">16
I16@0:8
v20@0:8I16
@"POKeyWrap"
@"POSOAPFaultDetail"
@"POSOAPCode"
@"POSOAPReason"
^{gss_cred_id_t_desc_struct=}24@0:8@16
v32@0:8^{__SecCertificate=}16q24
^{__SecIdentity=}24@0:8q16
@"POServiceLoginManagerConnection"
@"<SOHostExtensionContextProtocol>"
@"POSOAPSubcode"
@32@0:8q16@24
@40@0:8q16@24@32
B24@0:8^@16
