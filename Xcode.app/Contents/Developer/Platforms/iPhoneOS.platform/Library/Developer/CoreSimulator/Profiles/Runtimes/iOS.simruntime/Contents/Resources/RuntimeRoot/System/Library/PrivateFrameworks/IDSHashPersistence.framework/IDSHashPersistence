@(#)PROGRAM:IDSHashPersistence  PROJECT:IDSHashPersistence-
v8@?0
IDSDMessageStore
IDSFoundation
Saving database.
v16@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8
Destroying database.
Closed database.
^{__CFString=}8@?0
v16@?0@"CSDBThreadedRecordStore"8
/Library/IdentityServices/
ids-hashes-%@.db
IDSHashMessageStore
Creating indexes on message_hash_data and expiration_date
CREATE INDEX idx_message_hash_data ON message_hash (message_hash_data); 
CREATE INDEX idx_creation_date ON message_hash (creation_date); 
Enabling auto vacuum.
PRAGMA auto_vacuum = 2;
Enabling WAL journal mode.
PRAGMA journal_mode = wal;
Enabling Foreign Key support.
PRAGMA foreign_keys = ON;
The current IDS database is v%d.  The current schema version is v%d
This DB can be migrated.
message_hash
message_hash_data
creation_date
INSERT INTO message_hash (message_hash_data, creation_date) VALUES (?, ?);
v32@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16^{CSDBSqliteStatement=^{CSDBSqliteConnection}^{sqlite3_stmt}i}24
SELECT COUNT(1) FROM message_hash WHERE message_hash_data = ? LIMIT 1;
UPDATE message_hash SET creation_date = ? WHERE message_hash_data = ?; 
UPDATE message_hash SET creation_date = ? WHERE creation_date > ?; 
DELETE from message_hash WHERE creation_date < ?; 
IDSMessageHashStore
Hash Store initialized
APSConnection
ApplePushService
Checking if message hash %@ is contained in the database
Database reports that this message hash %@ has been seen before
Storing temporarily %@
Adding message hash %@ to the database
Updating local cache %@
Performing initial database housekeeping
  => Setting cache size
Database
  => Invalidating caches
Closing database.
Scheduling Cleanup Timer
Scheduling timer called
Removing messages older than %@
Saving database.
Destroying database.
Closed database.
Creating indexes on message_hash_data and expiration_date
Enabling auto vacuum.
Enabling WAL journal mode.
Enabling Foreign Key support.
Hash Store initialized
Checking if message hash %@ is contained in the database
Database reports that this message hash %@ has been seen before
Storing temporarily %@
Adding message hash %@ to the database
Updating local cache %@
Performing initial database housekeeping
  => Setting cache size
  => Invalidating caches
Closing database.
Scheduling Cleanup Timer
Scheduling timer called
Removing messages older than %@
IDSHashPersistenceAWDLogging
IDSMessageHashStore
init
dealloc
sharedInstance
shouldSubmit
_submitAWDMetric:withContainer:
_metricContainerForMetricType:
duplicateMessageEncounted
stringWithUTF8String:
arrayWithObjects:
pathWithComponents:
fileSystemRepresentation
stringByResolvingAndStandardizingPath
processInfo
processName
stringWithFormat:
serverTime
_performInitialHousekeeping
_startCleanupTimer
containsObject:
_setDatabaseCloseTimerOnIvarQueue
defaultLogger
logMetric:
count
removeFirstObject
addObject:
_currentLocalTime
removeObject:
date
timeIntervalSince1970
initialProcessTime
initialServerTime
closeDatabase
_runCleanup
dateWithTimeIntervalSince1970:
dateByAddingTimeInterval:
containsMessageHash:
addMessageHash:
updateCreationDateForHash:
setInitialProcessTime:
setInitialServerTime:
ivarQueue
setIvarQueue:
databaseCloseTimer
setDatabaseCloseTimer:
databaseLastUpdateTime
setDatabaseLastUpdateTime:
recentlySeenHashes
setRecentlySeenHashes:
.cxx_destruct
_initialProcessTime
_initialServerTime
_ivarQueue
_databaseCloseTimer
_databaseLastUpdateTime
_recentlySeenHashes
TQ,N,V_initialProcessTime
TQ,N,V_initialServerTime
T@"NSObject<OS_dispatch_queue>",&,N,V_ivarQueue
T@"NSObject<OS_dispatch_source>",&,N,V_databaseCloseTimer
Td,N,V_databaseLastUpdateTime
T@"NSMutableArray",&,N,V_recentlySeenHashes
@16@0:8
v16@0:8
B16@0:8
v32@0:8@16@24
@20@0:8I16
B24@0:8@16
v24@0:8@16
Q16@0:8
v24@0:8Q16
d16@0:8
v24@0:8d16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSMutableArray"
@(#)PROGRAM:IDSHashPersistence  PROJECT:IDSHashPersistence-
v8@?0
IDSDMessageStore
IDSFoundation
Saving database.
v16@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8
Destroying database.
Closed database.
^{__CFString=}8@?0
v16@?0@"CSDBThreadedRecordStore"8
/Library/IdentityServices/
ids-hashes-%@.db
IDSHashMessageStore
Creating indexes on message_hash_data and expiration_date
CREATE INDEX idx_message_hash_data ON message_hash (message_hash_data); 
CREATE INDEX idx_creation_date ON message_hash (creation_date); 
Enabling auto vacuum.
PRAGMA auto_vacuum = 2;
Enabling WAL journal mode.
PRAGMA journal_mode = wal;
Enabling Foreign Key support.
PRAGMA foreign_keys = ON;
The current IDS database is v%d.  The current schema version is v%d
This DB can be migrated.
message_hash
message_hash_data
creation_date
INSERT INTO message_hash (message_hash_data, creation_date) VALUES (?, ?);
v32@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16^{CSDBSqliteStatement=^{CSDBSqliteConnection}^{sqlite3_stmt}i}24
SELECT COUNT(1) FROM message_hash WHERE message_hash_data = ? LIMIT 1;
UPDATE message_hash SET creation_date = ? WHERE message_hash_data = ?; 
UPDATE message_hash SET creation_date = ? WHERE creation_date > ?; 
DELETE from message_hash WHERE creation_date < ?; 
IDSMessageHashStore
Hash Store initialized
APSConnection
ApplePushService
Checking if message hash %@ is contained in the database
Database reports that this message hash %@ has been seen before
Storing temporarily %@
Adding message hash %@ to the database
Updating local cache %@
Performing initial database housekeeping
  => Setting cache size
Database
  => Invalidating caches
Closing database.
Scheduling Cleanup Timer
Scheduling timer called
Removing messages older than %@
Saving database.
Destroying database.
Closed database.
Creating indexes on message_hash_data and expiration_date
Enabling auto vacuum.
Enabling WAL journal mode.
Enabling Foreign Key support.
Hash Store initialized
Checking if message hash %@ is contained in the database
Database reports that this message hash %@ has been seen before
Storing temporarily %@
Adding message hash %@ to the database
Updating local cache %@
Performing initial database housekeeping
  => Setting cache size
  => Invalidating caches
Closing database.
Scheduling Cleanup Timer
Scheduling timer called
Removing messages older than %@
IDSHashPersistenceAWDLogging
IDSMessageHashStore
init
dealloc
sharedInstance
shouldSubmit
_submitAWDMetric:withContainer:
_metricContainerForMetricType:
duplicateMessageEncounted
stringWithUTF8String:
arrayWithObjects:
pathWithComponents:
fileSystemRepresentation
stringByResolvingAndStandardizingPath
processInfo
processName
stringWithFormat:
serverTime
_performInitialHousekeeping
_startCleanupTimer
containsObject:
_setDatabaseCloseTimerOnIvarQueue
defaultLogger
logMetric:
count
removeFirstObject
addObject:
_currentLocalTime
removeObject:
date
timeIntervalSince1970
initialProcessTime
initialServerTime
closeDatabase
_runCleanup
dateWithTimeIntervalSince1970:
dateByAddingTimeInterval:
containsMessageHash:
addMessageHash:
updateCreationDateForHash:
setInitialProcessTime:
setInitialServerTime:
ivarQueue
setIvarQueue:
databaseCloseTimer
setDatabaseCloseTimer:
databaseLastUpdateTime
setDatabaseLastUpdateTime:
recentlySeenHashes
setRecentlySeenHashes:
.cxx_destruct
_initialProcessTime
_initialServerTime
_ivarQueue
_databaseCloseTimer
_databaseLastUpdateTime
_recentlySeenHashes
TQ,N,V_initialProcessTime
TQ,N,V_initialServerTime
T@"NSObject<OS_dispatch_queue>",&,N,V_ivarQueue
T@"NSObject<OS_dispatch_source>",&,N,V_databaseCloseTimer
Td,N,V_databaseLastUpdateTime
T@"NSMutableArray",&,N,V_recentlySeenHashes
@16@0:8
v16@0:8
B16@0:8
v32@0:8@16@24
@20@0:8I16
B24@0:8@16
v24@0:8@16
Q16@0:8
v24@0:8Q16
d16@0:8
v24@0:8d16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSMutableArray"
