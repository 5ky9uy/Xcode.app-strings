:::2:::::
softlink:r:path:/System/Library/PrivateFrameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
softlink:r:path:/System/Library/PrivateFrameworks/TCC.framework/TCC
softlink:r:path:/System/Library/Frameworks/MediaToolbox.framework/MediaToolbox
softlink:r:path:/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/PrivateFrameworks/Celestial.framework/Celestial
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/PrivateFrameworks/AttentionAwareness.framework/AttentionAwareness
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/PrivateFrameworks/Celestial.framework/Celestial
softlink:r:path:/System/Library/Frameworks/CoreMedia.framework/CoreMedia
softlink:r:path:/System/Library/PrivateFrameworks/MediaPlayer.framework/MediaPlayer
<default>
texttone:Note
texttone:Text-Message-Alert-In-Conversation
texttone:Tri-tone
texttone:Sent Mail
texttone:Sent Tweet
texttone:Sharing Post
texttone:Photos Sharing Post
texttone:Calendar Alert
texttone:Reminder Alert
texttone:Air Drop Invitation
system:Radar
system:Default Timer
texttone:App Notification
texttone:Health
system:Sencha
sms-sound-identifier
voicemail-sound-identifier
newmail-sound-identifier
sentmail-sound-identifier
senttweet-sound-identifier
facebookpost-sound-identifier
calendaralert-sound-identifier
reminderalert-sound-identifier
airdrop-invitation-sound-identifier
alarm-sound-identifier
timer-sound-identifier
classroom-sound-identifier
sound-recognition-sound-identifier
-per-account
-watch-alert-policy
watch-prefers-salient-notification
-alert-override-policy
/Library/Ringtones
Opening
Reflection
Media/iTunes_Control/Ringtones
Media/iTunes_Control/iTunes/Ringtones.plist
Media/Purchases
Media/Purchases/Ringtones.plist
/System/Library/Audio/UISounds
AlertTones
Modern
nano
AlarmWakeUpRingtones
Album
Artist
Total Time
Genre
Name
GUID
Store Item ID
Store Front ID
Purchased
Media Kind
Artwork File
Protected Content
Private
File Extension
tone
Ringtones
import_
_TLToneManagerContentsChangedNotification
v8@?0
_TLToneManagerAccessQueue
_TLTonePreferencesDidChangeNotification
_TLAlertWatchPrefersSalientNotificationPreferenceDidChangeLocallyNotification
_TLAlertWatchPrefersSalientNotificationPreferenceDidChangeRemotelyNotification
com.apple.itunesstored.RingtoneAdded
v20@?0B8@"NSArray"12
v20@?0B8@"NSError"12
com.apple.ToneLibrary.lock
imported
purchased
synced
Failed to remove item at path '%s'. Error: %s.
Failed to remove item at path '%s' from store download manifest. Error: %s.
Removed %s %s with name '%s' at path '%s'.
ringtone
alert tone
v32@?0@"NSString"8@"TLITunesTone"16^B24
Removed tone manifest at path '%s'.
Removed tone manifest lock file at path '%s'.
sms-received1.caf
texttone:Chime
sms-received2.caf
texttone:Glass
sms-received3.caf
texttone:Horn
sms-received4.caf
texttone:Bell
sms-received5.caf
texttone:Electronic
sms-received6.caf
texttone:Anticipate
Anticipate.caf
texttone:Bloom
Bloom.caf
texttone:Calypso
Calypso.caf
texttone:Choo Choo
Choo_Choo.caf
texttone:Descent
Descent.caf
texttone:Fanfare
Fanfare.caf
texttone:Ladder
Ladder.caf
texttone:Minuet
Minuet.caf
texttone:News Flash
News_Flash.caf
texttone:Noir
Noir.caf
texttone:Sherwood Forest
Sherwood_Forest.caf
texttone:Spell
Spell.caf
texttone:Suspense
Suspense.caf
texttone:Telegraph
Telegraph.caf
texttone:Tiptoes
Tiptoes.caf
texttone:Typewriters
Typewriters.caf
texttone:Update
Update.caf
texttone:New Mail
new-mail.caf
mail-sent.caf
tweet_sent.caf
Swish.caf
ReceivedMessage.caf
texttone:Alert
alarm.caf
texttone:FaceTime-Group-Invitation
MultiwayInvitation.caf
texttone:FaceTime-Participant-Joined
MultiwayJoin.caf
texttone:Go-To-Sleep
go_to_sleep_alert.caf
texttone:App-Notification-Critical-Alert
3rd_party_critical.caf
texttone:Passbook-NFC-Scan-Complete
nfc_scan_complete.caf
health_notification.caf
texttone:Health-Urgent
HealthNotificationUrgent.caf
texttone:Headphone-Audio-Exposure-Limit-Exceeded
HeadphoneAudioExposureLimitExceeded.caf
texttone:SOS-Countdown-Tick
SOS-Countdown-Tick.caf
Note.m4r
texttone:Bamboo
Bamboo.m4r
texttone:Complete
Complete.m4r
texttone:Hello
Hello.m4r
texttone:Popcorn
Popcorn.m4r
texttone:Synth
Synth.m4r
texttone:Aurora
Aurora.m4r
texttone:Keys
Keys.m4r
texttone:Circles
Circles.m4r
texttone:Input
Input.m4r
Chord.m4r
Pulse.m4r
PhotosSharingPostTone.caf
texttone:Photos Memory
PhotosMemoriesNotification.caf
texttone:System Background Mic Usage
Background-Mic-Usage.wav
texttone:Text-Message-Acknowledgment-Heart
Text-Message-Acknowledgement-Heart.caf
texttone:Text-Message-Acknowledgment-Thumbs-Up
Text-Message-Acknowledgement-ThumbsUp.caf
texttone:Text-Message-Acknowledgment-Thumbs-Down
Text-Message-Acknowledgement-ThumbsDown.caf
texttone:Text-Message-Acknowledgment-HaHa
Text-Message-Acknowledgement-HaHa.caf
texttone:Text-Message-Acknowledgment-Exclamation
Text-Message-Acknowledgement-Exclamation.caf
texttone:Text-Message-Acknowledgment-Question-Mark
Text-Message-Acknowledgement-QuestionMark.caf
system:
itunes:
texttone:
alarmWakeUp:
mediaPlaybackArchive:
v16@?0@"NSError"8
v24@?0@"NSDictionary"8@"NSError"16
alarmWakeUp:Early_Riser
system:Doorbell
RINGTONE_PICKER_DEFAULT_MODERN_RINGTONE_NAME
RINGTONE_PICKER_DEFAULT_RINGTONE_NAME
com.apple.ToneLibrary.TLToneManager.soundCacheAccessQueue
RINGTONE_PICKER_NONE
v32@?0@"NSString"8@"TLAlertTone"16^B24
ToneEarlyUnduckTimes
plist
%@%@
was-affected-by-accidental-tone-deletion
requires-reset-sync-post-accidental-tone-deletion
com.apple.mobilemail
com.apple.mobilephone
PlaySentMailSound
PlayNewMailSound
calendar-alarm
VoicemailToneEnabled
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Tones/TLToneManager.m
+[TLToneManager _migrateLegacyToneSettings]
sms-sound
sound-identifier
sound
-sound-identifier
<%@: %p
; title = "%@"
; subtitle = "%@"
system:Opening
granted
denied
unknown
uninitialized
NPSDomainAccessor
Unable to find class %s
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/Contents/MacOS/NanoPreferencesSync
SSDownloadFileManifest
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
/System/Library/PrivateFrameworks/StoreServices.framework/Contents/MacOS/StoreServices
MPPlaybackArchive
/System/Library/PrivateFrameworks/MediaPlayer.framework/MediaPlayer
/System/Library/PrivateFrameworks/MediaPlayer.framework/Contents/MacOS/MediaPlayer
NPSManager
TCCAccessPreflight
/System/Library/PrivateFrameworks/TCC.framework/TCC
/System/Library/PrivateFrameworks/TCC.framework/Contents/MacOS/TCC
kTCCServiceMediaLibrary
Nothing to remove.
com.apple.springboard
SpringBoard
MTAudioProcessingTapCreate
/System/Library/Frameworks/MediaToolbox.framework/MediaToolbox
/System/Library/Frameworks/MediaToolbox.framework/Contents/MacOS/MediaToolbox
MTAudioProcessingTapGetStorage
MTAudioProcessingTapGetSourceAudio
com.apple.ToneLibrary
v32@?0@"NSString"8@"NSString"16@"NSString"24
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@8@16^B24
TLVibrationManagerUserGeneratedVibrationsDidChange
usergeneratedvibration:
Pattern
Media/Vibrations/UserGeneratedVibrationPatterns.plist
Unexpected type for %@: %@ (%@)
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Vibrations/TLVibrationPersistenceUtilities.m
+[TLVibrationPersistenceUtilities _objectIsValidUserGeneratedVibrationPattern:error:]_block_invoke
key of user generated vibration pattern wrapper
Invalid vibration pattern: %@
name of user generated vibration pattern
user generated vibration pattern wrapper
v32@?0^@8^@16^@24
+[TLVibrationPersistenceUtilities objectIsValidUserGeneratedVibrationPatternsDictionary:error:]_block_invoke
Invalid key object: %@. All key objects need to start with "%@"
key object
root object
; type = %@
; topic = "%@"
; toneIdentifier = "%@"
; vibrationIdentifier = "%@"
; externalToneFileURL = %@
; externalToneMediaLibraryItemIdentifier = %llu
; has externalVibrationPattern
; externalVibrationPatternFileURL = %@
; audioCategory = "%@"
; audioVolume = %f
; isForPreview = YES
; maximumDuration = %f
; shouldRepeat = YES
; shouldIgnoreRingerSwitch = YES
; shouldForcePlayingAtUserSelectedAudioVolume = YES
; shouldIgnoreAccessibilityDisabledVibrationSetting = YES
; audioPlaybackInitiationDelay = %f
; audioVolumeRampingDuration = %f
type
topic
toneIdentifier
vibrationIdentifier
externalToneFileURL
externalToneMediaLibraryItemIdentifier
externalVibrationPattern
externalVibrationPatternFileURL
audioCategory
audioVolume
maximumDuration
shouldRepeat
shouldIgnoreRingerSwitch
shouldForcePlayingAtUserSelectedAudioVolume
shouldIgnoreAccessibilityDisabledVibrationSetting
hasCustomAudioVolume
audioPlaybackInitiationDelay
audioVolumeRampingDuration
Instances of TLAlertConfiguration cannot be mutated once they've been used to make an instance of TLAlert. Please make a copy of the TLAlertConfiguration instead.
Fade In
Fade Out
; identifier = "%@"
; name = "%@"
; albumTitle = "%@"
; artistName = "%@"
; genreName = "%@"
; duration = %f
; mediaKind = %@
; isPurchased = YES
; isProtectedContent = YES
; isPrivateTone = YES
; storeItemIdentifier = %llu
; storeFrontIdentifier = "%@"
; syncIdentifier = %@
; filePath = %@
playedToEnd
reachedMaximumDuration
stopped
userInterruption
systemInterruption
failed
????
; soundFileURL = %@
; wasSoundCreated = NO
; soundID = kSystemSoundID_NoneTone
; soundID = %lu
; requiresLongFormPlayback = YES
v24@?0q8@"NSError"16
%@.%@-%@-%@
AccessQueue
%@.%@
redownloadAllTones
v32@?0@"NSNumber"8@"TLToneStoreDownload"16^B24
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Tones/ToneStoreDownloads/Embedded/TLToneStoreDownloadStoreServicesController.m
-[TLToneStoreDownloadStoreServicesController _assertRunningOnAccessQueue]
SSDownloadManagerOptions
SSDownloadKindRingtone
SSDownloadKindTone
SSDownloadExternalPropertyBytesDownloaded
SSDownloadExternalPropertyPercentComplete
SSDownloadExternalPropertyPolicySizeLimit
SSDownloadExternalPropertyRentalInformation
SSDownloadPropertyClientBundleIdentifier
SSDownloadPropertyDownloadPhase
SSDownloadPropertyEncodedErrorData
SSDownloadPropertyIsRestore
SSDownloadPropertyKind
SSDownloadPropertyReason
SSDownloadPropertyStoreItemIdentifier
SSDownloadPropertyTitle
SSDownloadPropertyHandlerID
SSDownloadPropertyCollectionName
SSDownloadPropertyArtistName
SSDownloadPropertyGenre
SSDownloadPropertyDurationInMilliseconds
SSDownloadManager
SSPurchaseManager
SSAccountStoreChangedNotification
SSAccountStore
SSItemKindTone
SSItemKindRingtone
SSItemStoreFrontURLForItemKind
UIApplication
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/UIKit.framework/Contents/MacOS/UIKit
SSTonePurchase
SSItemToneStyleRingtone
SSItemToneStyleTextTone
SSDownloadPropertyIsRedownload
SSMutableURLRequestProperties
SSDownloadPhaseFinished
SSDownloadPhaseFailed
SSDownloadPhaseCanceled
SSDownload
SSDownloadPropertyIsStoreDownload
TLAlertTypeNone
TLAlertTypeIncomingCall
TLAlertTypeTextMessage
TLAlertTypeTextMessageInConversation
TLAlertTypeNewVoicemail
TLAlertTypeNewMail
TLAlertTypeSentMail
TLAlertTypeSentTweet
TLAlertTypeFacebookPost
TLAlertTypePhotosNotification
TLAlertTypeCalendarAlert
TLAlertTypeReminderAlert
TLAlertTypeAirDropInvitation
TLAlertTypeAlarm
TLAlertTypeTimer
TLAlertTypeDigitalTouch
TLAlertTypeSystemNotification
TLAlertTypeAppNotification
TLAlertTypeEmergency
TLAlertTypeActivity
TLAlertTypePassbook
TLAlertTypeBreathe
TLAlertTypeSOS
TLAlertTypeContinuityKeyboard
TLAlertTypeWalkieTalkie
TLAlertTypeHealth
TLAlertTypeSleep
TLAlertTypeHandwashing
TLAlertTypeClassroom
TLAlertTypeSoundRecognition
none
incoming call
text message
text message in conversation
new voicemail
new mail
sent mail
sent tweet
facebook post
photos notification
calendar alert
reminder alert
airdrop invitation
alarm
timer
digital touch
system notification
app notification
emergency
activity
passbook
breathe
continuity keyboard
walkie talkie
health
sleep
handwashing
classroom
sound recognition
v16@?0q8
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Playback/TLAlertType.m
void _TLAlertTypeValidateConsistencyOfEnumeration(void)_block_invoke
Accent
Staccato
Text-Message-Alert-In-Conversation
Quick
<none>
Alert
Built-In-System-Sound-ID-Vibration
synchronizedvibration:
SystemCallVibrationIdentifier
SystemTextMessageVibrationIdentifier
SystemNewVoiceMailVibrationIdentifier
SystemNewMailVibrationIdentifier
SystemSentMailVibrationIdentifier
SystemTweetVibrationIdentifier
SystemFacebookPostVibrationIdentifier
SystemCalendarAlertVibrationIdentifier
SystemReminderAlertVibrationIdentifier
SystemAirDropInvitationVibrationIdentifier
SystemAlarmVibrationIdentifier
SystemTimerVibrationIdentifier
SystemClassroomVibrationIdentifier
SystemSoundRecognitionVibrationIdentifier
PerAccount
WatchAlertPolicy
vibration:
VIBRATION_PICKER_NONE
_TLVibrationManagerAccessQueue
Chord
Pulse
_TLVibrationPreferencesDidChangeNotification
com.apple.springboard.ring-vibrate.changed
com.apple.springboard.silent-vibrate.changed
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Vibrations/TLVibrationManager.m
-[TLVibrationManager dealloc]
*** -[%@ %@] Attempted to mutate the shared vibration manager: %@. Create your own instance of %@ manually if you need to mutate it.
UserSelectable
Classic
Text-Message-Acknowledgement
PhotosMemoriesNotification
App-Notification-Critical-Alert
SOS-Countdown-Tick
SOS-Dial-Start
SOS-Button-Chording-Timeout
SOS-Countdown-Preannounce
Background-Mic-Usage
Handwashing-Session-Start
Handwashing-Session-Progress-Tap-Haptics
Handwashing-Session-Progress-Vibe-Haptics
Handwashing-Session-End
Vibrations
@"NSDictionary"24@?0@"NSString"8@"NSString"16
Synchronized
Other
SYNCHRONIZED_VIBRATION_NAME
VIBRATION_UNKNOWN_NAME
Unexpected exception: %@.
ring-vibrate
silent-vibrate
SystemVibrationDataMigrationVersion
VibrationIdentifier
Vibration
; fadeOutDuration = %f
; shouldWaitUntilEndOfCurrentRepetition = YES
%@.%@-%@
PearlID_Equalizer
aupreset
v32@?0@"AVAudioUnitEQFilterParameters"8Q16^B24
PearlID_Reverb
r^{AudioBufferList=I[1{AudioBuffer=II^v}]}12@?0I8
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Playback/BackEnds/QueuePlayer/AttentionAwarenessEffects/TLAttentionAwarenessEffectProcessor.m
-[TLAttentionAwarenessEffectProcessor _assertRunningOnAccessQueue]
-[TLAttentionAwarenessEffectProcessor _assertNotRunningOnAccessQueue]
Atoms
Intensity
Looped
VibePattern
OnDuration
OffDuration
It is pretty much impossible to compute the duration of a modern vibration pattern that uses atoms. This is invalid.
%@.%@.%@
Failed to pre-heat alert %@.
kAudioServicesFlag_SuppressAudio
kAudioServicesFlag_SuppressVibe
%@ | %@
Failed to prepare tone sound ID for playback.
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Playback/BackEnds/SystemSound/TLAlertSystemSoundController.m
-[TLAlertSystemSoundController _endRequiringBacklightObservation]
toneStoreDownload:
; downloadProgress = %f
AssumeRunningOnAudioQueue
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Utilities/TLAudioQueue.m
-[TLAudioQueue assertNotRunningOnAudioQueue]
; identifier = %@
General
Playback
ToneManagement
VibrationManagement
com.apple.tonelibraryd
TLServiceCommunicationErrorDomain
TLServiceValidationErrorDomain
TLServicePersistenceErrorDomain
%@=%@, 
%@=%@
v24@?0@"NSSet"8@"NSError"16
8olRm6C1xqr7AJGpLRnpSw
HWModelStr
DeviceClassNumber
SSDeviceAvailableItemKindsChangedNotification
SSDevice
AttentionAwarenessClientQueue
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Utilities/TLAttentionAwarenessObserver.m
-[TLAttentionAwarenessObserver _beginPollingForAttention]
v24@?0Q8@"AWAttentionEvent"16
-[TLAttentionAwarenessObserver _endPollingForAttention]
-[TLAttentionAwarenessObserver _didCompleteInitialization]
-[TLAttentionAwarenessObserver _assertRunningOnAccessQueue]
-[TLAttentionAwarenessObserver _assertNotRunningOnAccessQueue]
AWAttentionAwarenessConfiguration
/System/Library/PrivateFrameworks/AttentionAwareness.framework/AttentionAwareness
/System/Library/PrivateFrameworks/AttentionAwareness.framework/Contents/MacOS/AttentionAwareness
AWAttentionAwarenessClient
TLAlertTopicIncomingCallFaceTimeGroupInvitation
TLAlertTopicIncomingCallFaceTimeParticipantJoined
TLAlertTopicTextMessageInConversation
TLAlertTopicTextMessageAcknowledgmentHeart
TLAlertTopicTextMessageAcknowledgmentThumbsUp
TLAlertTopicTextMessageAcknowledgmentThumbsDown
TLAlertTopicTextMessageAcknowledgmentHaHa
TLAlertTopicTextMessageAcknowledgmentExclamation
TLAlertTopicTextMessageAcknowledgmentQuestionMark
com.apple.mobilemail.bulletin-subsection.VIP
com.apple.mobilemail.bulletin-subsection.ThreadNotify
TLAlertTopicPhotosNotificationSharingPost
TLAlertTopicPhotosNotificationMemory
TLAlertTopicEmergencyNonInterrupting
TLAlertTopicAppNotificationCriticalAlert
TLAlertTopicAppNotificationFirstParty
TLAlertTopicSystemNotificationBackgroundMicUsage
TLAlertTopicSystemNotificationDoorbell
TLAlertTopicSystemNotificationFindMyDevice
TLAlertTopicSystemNotificationGeneric
TLAlertTopicSystemNotificationHeadphoneAudioExposure
TLAlertTopicActivityGoalAttained
TLAlertTopicActivityGoalBehind
TLAlertTopicActivityFriendsGoalAttained
TLAlertTopicPassbookGeofence
TLAlertTopicPassbookNFCScanComplete
TLAlertTopicSOSCountdownTick
TLAlertTopicSOSDialStart
TLAlertTopicSOSButtonChordingTimeout
TLAlertTopicSOSCountdownPreannounce
TLAlertTopicAlarmGoToSleep
TLAlertTopicAlarmNightstand
TLAlertTopicAlarmWakeUp
TLAlertTopicWalkieTalkieActiveStart
TLAlertTopicWalkieTalkieActiveEnd
TLAlertTopicHealthUrgent
TLAlertTopicSleepWakeDetection
TLAlertTopicHandwashingReminder
TLAlertTopicHandwashingSessionStart
TLAlertTopicHandwashingSessionProgressTapHaptics
TLAlertTopicHandwashingSessionProgressVibeHaptics
TLAlertTopicHandwashingSessionEnd
TLAlertTopicSoundRecognitionFireAlarm
TLAlertTopicSoundRecognitionSirenAlarm
TLAlertTopicSoundRecognitionSmokeAlarm
TLAlertTopicSoundRecognitionCatMeow
TLAlertTopicSoundRecognitionDogBark
TLAlertTopicSoundRecognitionApplianceNoise
TLAlertTopicSoundRecognitionCarHorn
TLAlertTopicSoundRecognitionDoorBell
TLAlertTopicSoundRecognitionDoorKnock
TLAlertTopicSoundRecognitionWaterRunning
TLAlertTopicSoundRecognitionBabyCrying
TLAlertTopicSoundRecognitionPersonShouting
TLAlertTopicSoundRecognitionCough
_TLAlertTopicIncomingCallDeemphasized
_TLAlertTopicClassroomDeemphasized
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Utilities/TLContentProtectionStateObserver.m
-[TLContentProtectionStateObserver _assertRunningOnAccessQueue]
-[TLContentProtectionStateObserver _assertNotRunningOnAccessQueue]
; sound = %@
; playbackCompletionContext = %@
; playbackObserver = %@
; hasPlaybackStarted = YES
; isBeingInterrupted = YES
; toneIdentifierForDeemphasizingAlert = %@
; isBeingDeemphasized = YES
; isDeemphasized = YES
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Utilities/TLSilentModeController.m
-[TLSilentModeController _assertRunningOnAccessQueue]
-[TLSilentModeController _assertNotRunningOnAccessQueue]
v12@?0i8
silent
tone1
com.apple.springboard.ringerstate
; alert = %@
; isAquired = YES
TLToneImportStatusCodeSuccessful
TLToneImportStatusCodeSkippedDuplicateEntry
TLToneImportStatusCodeTransientFailure
successful
skipped duplicate entry
transient failure
; statusCode = %@
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Utilities/TLBacklight.m
-[TLBacklight _assertRunningOnAccessQueue]
-[TLBacklight _assertNotRunningOnAccessQueue]
TLAlertErrorDomain
_TLAlertOverridePolicyDidChangeNotification
_TLAlertWatchPrefersSalientToneAndVibrationDidChangeNotification
externalTone:%@-%@
mediaLibrary:%llu-%@
externalVibration:%llu-%@
externalVibration:%@-%@
apple-internal-install
!= NULL
== NULL
 [%ld]
<%@: %p; type = %@>
; configuration = %@
; toneIdentifier = %@
; vibrationIdentifier = %@
disabled
mirror-companion
always-enabled
always-disabled
independent-inferred-from-companion
_TLAlertControllerShouldStopAllAlertsNotification
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Playback/TLAlertController.m
-[TLAlertController _assertRunningOnAccessQueue]
The method +[TLAlert _stopAllAlerts] should not be called from anywere except the %@ process.
Updating the audio volume of %@ is not supported. Please refer to TLAlert_Private.h for more details on the limitations of the audio volume dynamic update API.
Setting up an activation assertion for %@ is not supported.
v12@?0B8
Pre-heating for %@ is not supported.
currentItem
currentItem.status
<%@: %p>
; stateDescriptor = %@
/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-548/Library/Playback/BackEnds/QueuePlayer/TLAlertQueuePlayerController.m
-[TLAlertQueuePlayerController stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:]
auxiliary
shared
Stopping playing alert: %@
-[TLAlertQueuePlayerController _handleActivationAssertionStatusChangeForAlert:updatedStatus:previousStateDescriptor:updatedStateDescriptor:]
duration
playable
Failed to prepare tone asset for playback.
-[TLAlertQueuePlayerController _startPlaybackForStateDescriptor:usingConfirmedPlayableAsset:hasAlreadyDetectedUserAttention:]
 with mode 
ignored
queue-player
system-controller-before-activation
system-controller-after-activation
initialized
attention detected
Phone
LocatePhone
ToneLibrary
tlutil
Alarm
Ringtone
RingtonePreview
FindMyPhone
EmergencyAlert
EmergencyAlert_Muteable
-[TLAlertQueuePlayerController _endPreventingAudioSessionDeactivationForStateDescriptor:]
UIBackgroundTaskInvalid
CMTimeCompare
/System/Library/Frameworks/CoreMedia.framework/CoreMedia
/System/Library/Frameworks/CoreMedia.framework/Contents/MacOS/CoreMedia
CMTimeMake
MPMediaPropertyPredicate
MPMediaItemPropertyPersistentID
MPMediaQuery
MPMediaItemPropertyFilePath
CMTimeGetSeconds
CMTimeMakeWithSeconds
AVSystemController
/System/Library/PrivateFrameworks/Celestial.framework/Celestial
/System/Library/PrivateFrameworks/Celestial.framework/Contents/MacOS/Celestial
kCMTimeZero
CMTimeRangeMake
AVSystemController_CallIsActive
; playingAlert = %@
; alertForAudioEnvironmentSetup = %@
%{public}@: -_load
: Loaded %lu tones.
%{public}@: _tonesFromManifestPath:(%{public}@) mediaDirectoryPath:(%{public}@): Manifest file does not exist. Not loading any tones.
%{public}@: _tonesFromManifestPath:(%{public}@) mediaDirectoryPath:(%{public}@): About to load tones.
%{public}@: _tonesFromManifestPath:(%{public}@) mediaDirectoryPath:(%{public}@): Couldn't load manifest: %{public}@
%{public}@: _tonesFromManifestPath:(%{public}@) mediaDirectoryPath:(%{public}@): Couldn't find any tone entries in the manifest: %{public}@
%{public}@: _tonesFromManifestPath: Appending tone with identifier %{public}@ and file path: %{public}@.
%{public}@: _tonesFromManifestPath: Skipping inclusion of tone for file path: %{public}@.
%{public}@: _tonesFromManifestPath:(%{public}@) mediaDirectoryPath:(%{public}@): Loaded %lu tones from %lu entries in the manifest.
%{public}@: Skipping import of tone %{public}@ because it's a duplicate of the following existing tone: %{public}@.
%{public}@: Connected newly imported tone %{public}@ to old duplicate's metadata %{public}@ because its asset is missing at %{public}@.
%{public}@: Proceeding to import tone %{public}@ despite finding duplicate %{public}@ because they don't appear to be listed in the same manifest.
%{public}@: Could not update ringtones plist
%{public}@: Successfully removed %lu items from store download file manifest.
%{public}@: Failed to remove %lu items from store download file manifest. Invalid paths: %{public}@.
%{public}@: _removeToneWithIdentifier:(%{public}@) orSyncIdentifier:(%{public}@): Resolved supplied sync identifier to tone identifier: %{public}@.
%{public}@: _removeToneWithIdentifier:(%{public}@) orSyncIdentifier:(%{public}@): Successfully deleted tone at file path '%{public}@'.
%{public}@: _removeToneWithIdentifier:(%{public}@) orSyncIdentifier:(%{public}@): Failed to delete tone at file path '%{public}@'; error = %{public}@.
%{public}@: _removeToneWithIdentifier:(%{public}@) orSyncIdentifier:(%{public}@): Successfully removed item for tone at file path '%{public}@' from store download file manifest.
%{public}@: _removeToneWithIdentifier:(%{public}@) orSyncIdentifier:(%{public}@): Failed to remove item for tone at file path '%{public}@' from store download file manifest; error = %{public}@.
Unable to create file lock.
Unable to take file lock.
%{public}@: _removeAllTones: Successfully deleted tone at file path '%{public}@'.
%{public}@: _removeAllTones: Failed to delete tone at file path '%{public}@'; error = %{public}@.
Unexpected error while retrieving current tone preferences: %{public}@.
Failed retrieving current tone preferences: %{public}@.
Unexpected error trying to set a tone preference: %{public}@.
Failed setting a tone preference: %{public}@.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@).
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). Read Preferences value for key '%{public}@' from service: %{public}@.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). Per-topic: currentToneIdentifier = %{public}@.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). Read Preferences value for key '%{public}@' from domain '%{public}@': %{public}@.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). Per-topic: persistedToneIdentifier = %{public}@.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). persistedToneIdentifier = %{public}@.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). currentToneIdentifier = %{public}@.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). persistedToneIdentifierWasInvalid = YES.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). Falling back to current tone without topic. currentToneIdentifier = %{public}@.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). Persisted value was invalid, and fallback value is none. Ignoring fallback value. currentToneIdentifier = %{public}@.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). Persisted value was invalid; falling back to non-silent default tone. currentToneIdentifier = %{public}@.
%{public}@: -_currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). Returning: %{public}@.
%{public}@: -currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@).
%{public}@: -currentToneIdentifierForAlertType:(%{public}@) [
]: Falling back to none due to alert override policy. toneIdentifier = %{public}@.
%{public}@: -currentToneIdentifierForAlertType:(%{public}@) [
]: Skipping Preferences lookup for topic %{public}@.
%{public}@: -currentToneIdentifierForAlertType:(%{public}@) [
]: Value from Preferences lookup method: toneIdentifier = %{public}@.
%{public}@: -currentToneIdentifierForAlertType:(%{public}@) [
]: Value from Preferences lookup method was not %{public}@; ignoring it.
%{public}@: -currentToneIdentifierForAlertType:(%{public}@) [
]: Falling back to default due missing setting in Preferences. toneIdentifier = %{public}@.
%{public}@: -currentToneIdentifierForAlertType:(%{public}@) [
]: Detected topic for text message in conversation. toneIdentifier = %{public}@.
%{public}@: -currentToneIdentifierForAlertType:(%{public}@) [
]: Detected alert type for text message in conversation. toneIdentifier = %{public}@.
%{public}@: -currentToneIdentifierForAlertType:(%{public}@) [
]: Detected alert type for emergency alert. Resolving to current tone identifier for text messages: toneIdentifier = %{public}@.
%{public}@: -currentToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). Returning: %{public}@.
setCurrentToneIdentifier:@"%{public}@" forAlertType:%{public}@ topic:@"%{public}@"
setCurrentToneIdentifier:@"%{public}@" forAlertType:%{public}@
%{public}@: +_defaultToneIdentifierForAlertType:(%{public}@) topic:(%{public}@). Returning: %{public}@.
_soundForToneIdentifier %{public}@ ==> %{public}@
filePathForToneIdentifier: %{public}@ ==> %{public}@
%{public}@: Checking validity of tone with identifier '%{public}@': %@. Name: '%@'. File path: '%{public}@'. Is valid? %{BOOL}u.
%{public}@: Tone with identifier '%{public}@' is neither in of the collections for alert or iTunes tones.
%{public}@: _tonesByIdentifier (%p) currently has %lu entries; keys: %{public}@.
%{public}@: Performed basic check for validity of tone with identifier '%{public}@': %{BOOL}u.
%{public}@: -toneWithIdentifierIsValid:(%{public}@): Double checking that we have a valid name for this tone. Name: '%@', isValid: %{BOOL}u.
%{public}@: -toneWithIdentifierIsValid:(%{public}@): Returning %{BOOL}u.
%{public}@: removeImportedToneWithIdentifier:(%{public}@): Successfully deleted tone at file path '%{public}@'.
%{public}@: removeImportedToneWithIdentifier:(%{public}@): Failed to delete tone at file path '%{public}@'.
%{public}@: _removeToneWithSyncIdentifier:(%{public}@): Successfully deleted tone.
%{public}@: _removeToneWithSyncIdentifier:(%{public}@): Failed to delete tone.
%{public}@: _removeAllSyncedData: Successfully deleted tone at file path '%{public}@'.
%{public}@: _removeAllSyncedData: Failed to delete tone at file path '%{public}@'; error = %{public}@.
Unexpected value for preferences key associated to alertType %{public}@: %{public}@.
*** Assertion failure in %{private}s, %{private}@:%{private}lu.
%{private}@
*** Assertion failure.
Unexpected value for preferences key associated to alertType TLAlertTypeTextMessage: %{public}@.
Failed to update watch alert policy for alert type %{public}@ because it is not settable.
%{public}@: _watchPrefersSalientNotifications: Returning %{BOOL}u from cache.
%{public}@: _watchPrefersSalientNotifications: Read %{BOOL}u from %{public}@; caching this value, and returning it.
Failed to update alert override policy for alert type %{public}@ because it is not settable.
%{public}@: _toneIdentifierWithUnderlyingPlaybackArchive:(%{public}@): Failed to serialize playback archive with error: %{public}@.
%{public}@: _toneIdentifierWithUnderlyingPlaybackArchive:(%{public}@): Failed to encode serialized playback archive as a base 64 string.
%{public}@: _toneIdentifierWithUnderlyingPlaybackArchive:(%{public}@): Returning "%{public}@".
%{public}@: _underlyingPlaybackArchiveForToneIdentifier:(%{public}@): Failed to decode base 64 encoded serialized playback archive.
%{public}@: _underlyingPlaybackArchiveForToneIdentifier:(%{public}@): Failed to deserialize the serialized playback archive.
%{public}@: _underlyingPlaybackArchiveForToneIdentifier:(%{public}@): Returning %{public}@.
Failed to create directory at path: %{public}@. %{public}@.
%{public}@: Invoked TCCAccessPreflight(kTCCServiceMediaLibrary, NULL). Got result: %{public}@.
%{public}@: File exists at path %{public}@. TCCAccessPreflight status: %{public}@.
%{public}@: File DOES NOT exists at path %{public}@. TCCAccessPreflight status: %{public}@.
TLAttentionAwarenessEffectCoordinator: Encountered error with code %d upon getting source audio.
Pointers of validation block can't be NULL.
%{public}@: Returning nil from initializer because of a missing identifier. Available keys in property list representation: %{public}@.
%{public}@: -_prepareForDealloc. AudioServicesDisposeSystemSoundID for soundID = %lu returned %ld.
%{public}@: -beginRequiringUnderlyingSoundLoaded.
%{public}@: -_ensureUnderlyingSoundCreated. AudioServicesCreateSystemSoundIDWithOptions for URL %{public}@ produced soundID = %lu and returned %ld.
Issuing store purchase for tones.
Store purchase did complete successfully for tones.
Failed to add store purchase for tones with error: %{public}@.
Did finish store purchase with correlation key: %{public}@.
Store download metadata %{public}@ of tone was found to be a duplicate of the following upcoming tone download: %{public}@. This tone will not be re-downloaded.
Store download metadata %{public}@ of tone was found to be a duplicate of the following existing tone: %{public}@. This tone will not be re-downloaded.
Issuing store download for %{public}@: %{public}@ (based on %{public}@).
Adding %lu tone store downloads.
Failed to add store downloads for tones with error: %{public}@.
Successfully added store downloads for tones.
No previously purchased tone needs to be redownloaded. We're done here.
Expected to be running in access queue.
The minimum value of TLAlertType is expected to be TLAlertTypeNone, i.e. 0. Instead, it was: %ld
The maximum value of TLAlertType is expected to be %ld; instead, it was %ld. You probably forgot to update the definition of _TLAlertTypeMaximumAllowedValue in TLAlertType_Internal.h.
TLAlertType values are expected to be subsequent integer values.
Found no living vibration managers while deallocating %p.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@).
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@). Read Preferences value for key '%{public}@' from domain '%{public}@': %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@). Per-topic: persistedVibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@). persistedVibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@). currentVibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@). persistedVibrationIdentifierWasInvalid = YES.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@). Vibration is not settable for this alert type. Returning corresponding default vibration. currentVibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@). Falling back to current vibration without topic. currentVibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@). Persisted value was invalid, and fallback value is none. Ignoring fallback value. currentVibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@). Persisted value was invalid; falling back to non-silent default vibration. currentVibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@). Returning: %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@) correspondingToneIdentifier:(%{public}@) allowsNoneDefaultToAnyActualVibrationSubstitution:(%{BOOL}u).
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) [
]: Falling back to none due to alert override policy. vibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) [
]: Skipping Preferences lookup for topic %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) [
]: Value from Preferences lookup method: vibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) [
]: Sanitized: vibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) [
]: Value from Preferences lookup method was not %{public}@; ignoring it.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) [
]: Falling back to default due missing setting in Preferences. vibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) [
]: Detected topic for text message in conversation. vibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) [
]: Detected alert type for text message in conversation. vibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) [
]: Detected alert type for emergency alert. Resolving to current vibration identifier for incoming call: vibrationIdentifier = %{public}@.
%{public}@: -_currentVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@) correspondingToneIdentifier:(%{public}@) allowsNoneDefaultToAnyActualVibrationSubstitution:(%{BOOL}u). Returning: %{public}@.
%{public}@: -_defaultVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@) correspondingToneIdentifier:(%{public}@). areSynchronizedVibrationsAllowed = %{BOOL}u.
%{public}@: -_defaultVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@) correspondingToneIdentifier:(%{public}@). resolvedCorrespondingToneIdentifier = "%{public}@"; synchronizedVibrationIdentifier = "%{public}@".
%{public}@: -_defaultVibrationIdentifierForAlertType:(%{public}@) topic:(%{public}@) correspondingToneIdentifier:(%{public}@). Returning: %{public}@.
Looking up system vibrations for subdirectory %{public}@ at absolute path: %{public}@.
Using "none" vibration pattern for vibration identifier "%{public}@"
Vibration pattern for identifier "%{public}@" found at path: %{public}@.
Unexpected error while retrieving user generated vibration patterns: %{public}@.
Failed retrieving user generated vibration patterns: %{public}@.
Unexpected error while setting user generated vibration patterns: %{public}@.
Failed setting user generated vibration patterns with error: %{public}@.
Unexpected error while removing user generated vibration patterns: %{public}@.
Failed removing user generated vibration patterns with error: %{public}@.
Could not switch engine to offline mode, error %{public}@, format = %{public}@, maximumNumberOfFrames = %ld.
%{public}@: -init. Error loading equalizer preset: %{public}@.
%{public}@: -init. Equalizer bypass: %{BOOL}d. Number of bands: %lu.
%{public}@: -init. Equalizer band #%lu: filterType = %ld, gain = %f, frequency = %f, bypass = %{BOOL}d.
%{public}@: -init. Error loading reverb preset: %{public}@.
%{public}@: -init. Reverb wet dry mix: %f.
%{public}@: -setEffectParameters:. Current low pass filter global gain: %0.2f.
Could not start engine: %{public}@.
%{public}@: -_applyEffectParameters:. Volume for low pass filter global gain: %0.2f.
%{public}@: -_applyEffectParameters:. Set low pass filter global gain to %0.2f for audio session category %{public}@.
%{public}@: -_applyEffectParameters:. Low pass filter global gain is already set to %0.2f.
Expected not to be running in access queue.
%{public}@: _playAlert:(%{public}@) [
]. Sound: %{public}@.
%{public}@: _playAlert:(%{public}@) [
]. Failed to begin playback with invalid sound: %{public}@.
%{public}@: _playAlert:(%{public}@) [
]. Aborting playback because this alert is already being interrupted.
%{public}@: _considerDeferringPlayingAlertForBacklightStatusResolution:(%{public}@) [
]. Deemphasizing this alert is allowed but the backlight status is unknown. Deferring until the backlight status is known.
%{public}@: _processPlayTaskDescriptors:(%{public}@). Calling AudioServicesPlaySystemSoundWithOptions for soundID: %lu.
%{public}@: _playAlert:(%{public}@). Running completion block for AudioServicesPlaySystemSoundWithOptions for soundID: %lu.
%{public}@: _prepareForStoppingAlerts:([%lu alert%{public}s]) playbackCompletionType:(%@)
%{public}@: _prepareForStoppingAlerts
: Ignoring stop request for %{public}@ with system sound context: %{public}@.
%{public}@: _prepareForStoppingAlerts
: Beginning interruption of %{public}@ with system sound context: %{public}@.
%{public}@: _prepareForStoppingAlerts
: %{public}@ didn't even get a chance to begin playing. Merely processing playback completion context: %{public}@.
%{public}@: _processStopTasksDescriptor:. playbackCompletionType: %{public}@. Calling AudioServicesStopSystemSound for soundID: %lu with inStopNow = %{bool}d for alert %{public}@.
%{public}@: _preheatForAlert:(%{public}@). Pre-heating failed with sound: %{public}@ and soundID: %lu.
%{public}@: _preheatForAlert:(%{public}@). Pre-heating succeeded with sound: %{public}@ and soundID: %lu.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@) withSound:(%{public}@). kAudioServicesPlaySystemSoundOptionBehaviorKey => %lu.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@) withSound:(%{public}@). kAudioServicesPlaySystemSoundOptionFlagsKey => %{public}@.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@) withSound:(%{public}@). kAudioServicesPlaySystemSoundOptionVibrationPatternKey => non-nil.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@) withSound:(%{public}@). kAudioServicesPlaySystemSoundOptionLoopKey => true.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@) withSound:(%{public}@). kAudioServicesPlaySystemSoundOptionUnduckTimeKey => %.3f.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@) withSound:(%{public}@). kAudioServicesPlaySystemSoundOptionVolumeKey => %f.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@) withSound:(%{public}@). kAudioServicesPlaySystemSoundOptionIgnoreRingerSwitchKey => true.
%{public}@: _didCompletePlaybackForAlert:(%{public}@). About to begin playing deemphasized sound: %{public}@.
%{public}@: -_beginRequiringBacklightObservation.
Unbalanced calls to -_beginRequiringBacklightObservation and -_endRequiringBacklightObservation.
%{public}@: -_endRequiringBacklightObservation.
%{public}@: backlightStatusDidChange:(%{public}@). Backlight was turned on. Deemphasizing: %{public}@.
%{public}@: _processDeemphasizableAlertChanges
:(%{public}@). About to begin playing alert %{public}@ with sound: %{public}@.
Expected to be running outside of the audio queue from within a task executed with the option: TLAudioTaskOptionAssumeRunningOnAudioQueue.
%{public}@: -init: Created %{public}@.
%{public}@: -dealloc: Successfully invalidated %{public}@.
%{public}@: -dealloc: -invalidateWithError: on %{public}@ returned didSucceed = %{BOOL}d and error = %{public}@.
%{public}@: -_beginPollingForAttention: Not fully initialized yet.
%{public}@: -_beginPollingForAttention: Already polling for attention.
%{public}@: -_beginPollingForAttention.
%{public}@: -_beginPollingForAttention: Successfully resumed %{public}@.
%{public}@: -_beginPollingForAttention: -resumeWithError: on %{public}@ returned didSucceed = %{BOOL}d and error = %{public}@.
%{public}@: -_beginPollingForAttention: Will begin polling for attention until distant future (%f) with %{public}@.
%{public}@: -_beginPollingForAttention: Did begin polling successfully from %{public}@.
%{public}@: -_beginPollingForAttention: -pollForAttentionWithTimeout:error: on %{public}@ returned didSucceedInitializingPoll = %{BOOL}d and errorPolling = %{public}@.
%{public}@: -_endPollingForAttention: Not fully initialized yet.
%{public}@: -_endPollingForAttention: Already idle.
%{public}@: -_endPollingForAttention.
%{public}@: -_endPollingForAttention: Successfully cancelled poll for attention on %{public}@.
%{public}@: -_endPollingForAttention: -cancelPollForAttentionWithError: on %{public}@ returned didSucceed = %{BOOL}d and error = %{public}@.
%{public}@: -_endPollingForAttention: Successfully suspended %{public}@.
%{public}@: -_endPollingForAttention: -suspendWithError: on %{public}@ returned didSucceed = %{BOOL}d and error = %{public}@.
%{public}@: -_didReceiveAttentionPollingEventOfType:(%ld) attentionEvent:(%{public}@).
%{public}@: -_didCompleteInitialization: Already fully initialized.
%{public}@: Failed to cancel notify token for notify topic named "%{public}s"; notifyCancelStatus = %lu.
%{public}@: Failed to register notify token for notify topic named "%{public}s"; notifyRegisterDispatchStatus = %lu.
%{public}@: Retrieved ringerSwitchState = %llu (%{public}@) from notify token for topic named "%{public}s"; converted to silentModeStatus = %{public}@.
%{public}@: Failed to get state for notify topic named "%{public}s"; notifyStatus = %lu.
%{public}@: Failed to get state for notify topic named "%{public}s" because ringerSwitchChangedNotifyToken = NOTIFY_TOKEN_INVALID.
%{public}@: Notify block fired for topic named "%{public}s"; updating silent mode.
%{public}@: -acquire.
%{public}@: -relinquish.
%{public}@: was acquired.
%{public}@: was relinquished.
Sanitizing vibrationIdentifier: %{public}@, for alert type: %{public}@, toneIdentifier: %{public}@. Using instead vibrationIdentifier: %{public}@.
Instantiating alert with synchronized vibration (%{public}@), which does not match the associated tone (%{public}@).
Nothing to be played for alert configuration: %{public}@. Returning a nil alert.
%{public}@: -play
: completionHandler %{public}s.
%{public}@: -stop
: options = %{public}@.
%{public}@: -playAlert:(%{public}@) 
: Updated _stateDescriptor to %{public}@.
API misuse.
%{public}@: -stopPlayingAlerts:(<%lu alerts>) playbackCompletionType:(%{public}@).
%{public}@: -stopPlayingAlerts
: %{public}@ is playing. Interrupting it.
%{public}@: -stopPlayingAlerts
: %{public}@ is NOT playing. Skipping it.
%{public}@: -stopPlayingAlerts
: Updated _stateDescriptor to %{public}@.
%{public}@: -updateAudioVolumeDynamicallyForAlert:(%{public}@) toValue:(%f)
%{public}@: -handleActivationAssertionStatusChangeForAlert:(%{public}@) updatedStatus:(%{BOOL}d): Updated _stateDescriptor to %{public}@.
%{public}@: -_playAlertForStateDescriptor:(%{public}@) previousStateDescriptor:(%{public}@).
%{public}@: -_playAlert: Policy for picking between auxiliary and shared audio session for %{public}@ doesn't match current state. Allowing deactivation of %{public}s audio session %{public}@.
%{public}@: -_stopPlayingAlertForStateDescriptor:(%{public}@) withOptions:(%{public}@) playbackCompletionType:(%{public}@).
%{public}@: -_stopPlayingAlertFor
: Ended background task with name: "%{public}@"; identifier: %lu.
%{public}@: -_stopPlayingAlertFor
: Began background task with name: "%{public}@"; identifier: %lu.
SPI misuse.
%{public}@: -_handleActivationAssertionStatusChangeForAlert:(%{public}@) updatedStatus:(%{BOOL}d) previousStateDescriptor:(%{public}@) updatedStateDescriptor:(%{public}@).
%{public}@: -_canPlayToneAsset:(%{public}@). Can't play tone asset because property %{public}@ is not loaded.
%{public}@: -_canPlayToneAsset:(%{public}@). Can't play tone asset because its duration is too short.
%{public}@: -_canPlayToneAsset:(%{public}@). Can play!
%{public}@: -_reloadPlaybackForStateDescriptor:(%{public}@) withToneIdentifier:(%{public}@).
%{public}@: -_reloadPlayback
: [_queuePlayer status] == AVPlayerStatusFailed for %{public}@. Destroying player.
%{public}@: -_reloadPlayback
: found external media library asset at path %{public}@ for identifier %llu.
%{public}@: -_reloadPlayback
: [toneAsset loadValuesAsynchronouslyForKeys:
] for %{public}@.
%{public}@: -_reloadPlayback
: did finish loading values asynchronously for %{public}@.
%{public}@: -_reloadPlayback
: Failed to instantiate an AVURLAsset with URL: %{public}@.
%{public}@: -_reloadPlayback
: Failed to prepare tone asset for playback. Aborting.
%{public}@: -_reloadPlayback
: Updated _stateDescriptor to %{public}@.
%{public}@: -_startPlaybackForStateDescriptor:(%{public}@) usingAssetWithLoadedProperties:(%{public}@) shouldConfirmAlertStillPlaying:(%{BOOL}d).
%{public}@: -_startPlayback
 usingAssetWithLoadedProperties
: Playing alert for %{public}@ is no longer actually playing; aborting playback initiation.
%{public}@: -_startPlaybackForStateDescriptor:(%{public}@) usingConfirmedPlayableAsset:(%{public}@).
%{public}@: -_startPlayback
 usingConfirmedPlayableAsset
: [_queuePlayer removeAllItems] on %{public}@ before initiating playback.
%{public}@: -_startPlayback
 usingConfirmedPlayableAsset
: Currently polling for attention, and attention awareness subsystem not initialized yet. Waiting to see if we already have the user's attention.
%{public}@: -_startPlaybackForStateDescriptor:(%{public}@) usingConfirmedPlayableAsset:(%{public}@) hasAlreadyDetectedUserAttention:(%{BOOL}d).
%{public}@: -_startPlayback
 hasAlreadyDetected
: audioVolumeRampingDuration = %f, numberOfAdditionalPlayerItemsForAudioVolumeRamping = %lu.
%{public}@: -_startPlayback
 hasAlreadyDetected
: inserting %lu player items into %{public}@ for tone asset: %{public}@.
%{public}@: -_startPlayback
 hasAlreadyDetected
: (iteration #%lu) failed to create AVPlayerItem for tone asset: %{public}@.
%{public}@: -_startPlayback
 hasAlreadyDetected
: Failed to wrap external vibration pattern as an instance of TLVibrationPattern. Falling back to passing the external vibration pattern through.
Vibration pattern on the _queuePlayer was expected to be nil at this point.
%{public}@: -_startPlayback
 hasAlreadyDetected
:. Leaving [_queuePlayer vibrationPattern] as nil on player %{public}@ because the vibration identifier is %{public}@.
%{public}@: -_startPlayback
 hasAlreadyDetected
: [_queuePlayer setVibrationPattern:vibrationPattern] on player %{public}@ with a non-nil pattern.
%{public}@: -_startPlayback
 hasAlreadyDetected
: Skipping play command on %{public}@ because we need to honor a delay of %f seconds for the initiation of audio playback.
%{public}@: -_startPlayback
 hasAlreadyDetected
: [_queuePlayer play] on %{public}@.
%{public}@: -_performDelayedAudioPlaybackInitiationForStateDescriptor:(%{public}@).
%{public}@: -_performDelayedAudioPlaybackInitiation
: playingAlert (%{public}@) doesn't match with alert with delayed audio playback initiation (%{public}@). Aborting.
%{public}@: -_performDelayedAudioPlaybackInitiation
: [_queuePlayer play] for %{public}@.
%{public}@: -_stopPlaybackForStateDescriptor:(%{public}@) withOptions:(%{public}@) playerWasAlreadyPausedExternally:(%{BOOL}d).
%{public}@: -_stopPlaybackFor
: [_queuePlayer setRate:withVolumeRampDuration:] with fadeOutDuration %f for %{public}@.
%{public}@: -_stopPlaybackFor
: [_queuePlayer pause] for %{public}@.
%{public}@: -_stopPlaybackFor
: playerWasAlreadyPausedExternally = YES for %{public}@.
%{public}@: -_stopPlaybackFor
: [_queuePlayer removeAllItems] for %{public}@.
%{public}@: -_stopPlaybackFor
: [_queuePlayer setVibrationPattern:nil] for %{public}@.
%{public}@: -_willBeginPlayingAlertForStateDescriptor:(%{public}@).
%{public}@: -_willBeginPlaying
: Alert activation assertion acquired for %{public}@. Skipping audio environment preparation steps for %{public}@.
%{public}@: -_didEndPlayingAlertForStateDescriptor:(%{public}@).
%{public}@: -_didEndPlaying
: Alert activation assertion acquired for %{public}@. Skipping audio environment restoration steps for playing alert: %{public}@.
%{public}@: -_prepareAudioEnvironmentForStateDescriptor:(%{public}@). alertForAudioEnvironmentSetup = %{public}@
%{public}@: -_prepareAudioEnvironment. Using previous %{public}s audio session %{public}@ for %{public}@.
%{public}@: -_prepareAudioEnvironment. We are most likely about to being playing an alert which interrupted one that was already playing, and which was stopped while preventing the deactivation of the audio session.
%{public}@: -_prepareAudioEnvironment
: Using auxiliary audio session %{public}@ for %{public}@.
%{public}@: -_prepareAudioEnvironment
: Using shared audio session %{public}@ for %{public}@.
%{public}@: -_prepareAudioEnvironment
: Successfully set audio category to %{public}@%{public}s%{public}@ and options 0x%x on audio session %{public}@ for %{public}@.
%{public}@: -_prepareAudioEnvironment
: Failed setting audio category to %{public}@%{public}s%{public}@ and options 0x%x on audio session %{public}@ for %{public}@ with error: %{public}@.
%{public}@: -_prepareAudioEnvironment
: Failed reverting audio category back to %{public}@ with mode %{public}@ and options 0x%x on audio session %{public}@ with error: %{public}@.
%{public}@: -_prepareAudioEnvironment
: Successfully reverted audio category back to %{public}@ with mode %{public}@ and options 0x%x on audio session %{public}@.
%{public}@: -_prepareAudioEnvironment
: Successfully bypassed ringer switch policy on audio session %{public}@ for %{public}@.
%{public}@: -_prepareAudioEnvironment
: Failed bypassing ringer switch policy on audio session %{public}@ for %{public}@ with error: %{public}@.
%{public}@: -_prepareAudioEnvironment
: Successfully set prefersToVibeWhenVibrationsAreDisabled to YES on audio session %{public}@ for %{public}@.
%{public}@: -_prepareAudioEnvironment
: Failed setting prefersToVibeWhenVibrationsAreDisabled to YES on audio session %{public}@ for %{public}@ with error: %{public}@.
%{public}@: -_prepareAudioEnvironment
: Retrieved existing audio volume %f for Celestial audio category %{public}@ (active audio session category: %{public}@); did succeed: %{BOOL}d.
%{public}@: -_prepareAudioEnvironment
: Skipping attention awareness effects for %{public}@.
%{public}@: -_restoreAudioEnvironmentForStateDescriptor:(%{public}@).
%{public}@: -_restoreAudioEnvironment
: Reverted volume of %{public}@ to %f for %{public}@.
%{public}@: -_restoreAudioEnvironment
: Successfully set prefersToVibeWhenVibrationsAreDisabled to NO on audio session %{public}@ for %{public}@.
%{public}@: -_restoreAudioEnvironment
: Failed setting prefersToVibeWhenVibrationsAreDisabled to NO on audio session %{public}@ for %{public}@ with error: %{public}@.
%{public}@: -_restoreAudioEnvironment
: Successfully stopped bypassing ringer switch policy on audio session %{public}@ for %{public}@.
%{public}@: -_restoreAudioEnvironment
: Failed to stop bypassing ringer switch policy on audio session %{public}@ for %{public}@ with error: %{public}@.
%{public}@: -_restoreAudioEnvironment
: Successfully reverted audio category back to %{public}@ with mode %{public}@ and options 0x%x on audio session %{public}@.
%{public}@: -_restoreAudioEnvironment
: Failed reverting audio category back to %{public}@ with mode %{public}@ and options 0x%x on audio session %{public}@ with error: %{public}@.
%{public}@: -_restoreAudioEnvironment
: Currently preventing audio session deactivation. Hence, not clearing %{public}s audio session %{public}@.
%{public}@: -_restoreAudioEnvironment
: Cleared %{public}s audio session %{public}@.
%{public}@: -_restoreAudioEnvironment
: Skipping reset client priority because the audio session was not just deactivated.
%{public}@: -_resetClientPriorityForStateDescriptor:(%{public}@). Reset client priority to %ld on %{public}@ for %{public}@.
%{public}@: -_resetFlagsForSwitchingAuxiliaryAudioSession. Did reset internal flags related to auxiliary audio session %{public}@.
%{public}@: -_applyAudioVolume:(%f) forAlert:(%{public}@): Policy for applying audio volume: %{public}@.
%{public}@: -_applyAudioVolume
: Adjusted volume of %{public}@ to %f for %{public}@.
%{public}@: -_applyAudioVolume
: Existing volume of %{public}@ is already set to %f.
%{public}@: -_applyAudioVolume
: Adjusted volume on %{public}@ for celestial audio category %{public}@ to %f for %{public}@; did succeed: %{BOOL}d.
%{public}@: -_applyAudioVolume
: Existing volume on %{public}@ for celestial audio category %{public}@ matches requested volume %f for %{public}@.
%{public}@: -_applyAudioVolume
: Adjusted volume on %{public}@ for active audio category to %f for %{public}@; did succeed: %{BOOL}d.
%{public}@: -_applyAudioVolume
: Existing volume on %{public}@ for active audio category matches requested volume %f for %{public}@.
%{public}@: -_didReceiveAttentionPollingEventOfType:(%{public}@) stateDescriptor:(<%{public}@: %p>).
%{public}@: -_didReceiveAttentionPollingEventOfType:(%{public}@) [
]: alertForAudioEnvironmentSetup argument doesn't match with activeAlertForAudioEnvironmentSetup: %{public}@. Aborting logic to affect current playback state.
%{public}@: -_createQueuePlayerIfNecessaryForStateDescriptor:(%{public}@). clientName = %{public}@. clientPriority = %ld. shouldEnsureActiveAudioSessionWhenStartingPlayback = %{BOOL}d. shouldUseAuxiliaryAudioSession = %{BOOL}d.
%{public}@: -_createQueuePlayerIfNecessary
: Existing player is configured with clientName = %{public}@. clientPriority = %ld. ensuresActiveAudioSessionWhenStartingPlayback = %{BOOL}d. isUsingAuxiliaryAudioSession = %{BOOL}d.
%{public}@: -_createQueuePlayerIfNecessary
: Client name or priority don't match those of %{public}@. Destroying it.
%{public}@: -_createQueuePlayerIfNecessary
: Policy for ensuring active audio session when starting playback doesn't match that of %{public}@. Destroying it.
%{public}@: -_createQueuePlayerIfNecessary
: Policy for picking between auxiliary and shared audio session doesn't match that of %{public}@. Destroying it.
%{public}@: -_createQueuePlayerIfNecessary
: Created queue player: %{public}@.
%{public}@: -_destroyQueuePlayerForStateDescriptor:(%{public}@). _queuePlayer = %{public}@.
%{public}@: -_destroyQueuePlayer
: Tossing queue player: %{public}@.
%{public}@: -_startObservingQueuePlayer: %{public}@.
%{public}@: -_stopObservingQueuePlayer: %{public}@.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@.
%{public}@: currentItemWasUpdated
: Calling [removedItem seekToTime:kCMTimeZero completionHandler:NULL] on %{public}@.
%{public}@: currentItemWasUpdated
: Updated _stateDescriptor to %{public}@.
%{public}@: currentItemWasUpdated
: The queue was exhausted prematurely; this can happen if the ringtone asset contains corrupted audio data. Start over with default tone.
%{public}@: currentItemWasUpdated
: The queue was exhausted prematurely, but we are already waiting for a fallback tone to begin playing. Doing nothing.
%{public}@: currentItemWasUpdated
: Playback of non repeating tone completed by playing to end.
%{public}@: currentItemWasUpdated
: [_queuePlayer status] == AVPlayerStatusFailed for %{public}@.
%{public}@: currentItemWasUpdated
: Re-inserting that same item again: %{public}@.
%{public}@: currentItemWasUpdated
: Removed item %{public}@ has an audio mix. Not re-inserting it again.
%{public}@: currentItemStatusWasUpdatedToValue:(%ld) for %{public}@. itemStatus == AVPlayerItemStatusFailed. currentItemErrorCode: %ld.
%{public}@: currentItemStatusWasUpdatedToValue:(%ld) for %{public}@. Tone could not be prepared for playback. Start over with fallback tone.
%{public}@: currentItemStatusWasUpdatedToValue:(%ld) for %{public}@. Tone could not be prepared for playback, but we are already waiting for a fallback tone to begin playing. Doing nothing.
%{public}@: -_audioVolumeFor
: Did retrieve ringer volume successfully for fallback volume value for alert %{public}@: %f.
%{public}@: -_audioVolumeFor
: Failed to retrieve ringer volume for fallback volume value for alert %{public}@. Using default value instead: %f.
%{public}@: -_activateAudioSession
: Successfully activated audio session %{public}@ for %{public}@.
%{public}@: -_activateAudioSession
: Failed activating audio session %{public}@ for %{public}@ with error: %{public}@.
%{public}@: -_deactivateAudioSessionIfNeededForStateDescriptor:(%{public}@): _isAudioSessionActive = %{BOOL}d.
%{public}@: -_deactivateAudioSession
: Skipping audio session deactivation because it is currently being prevented.
%{public}@: -_deactivateAudioSession
: About to deactivate audio session %{public}@ for %{public}@.
%{public}@: -_deactivateAudioSession
: Successfully deactivated audio session %{public}@ for %{public}@.
%{public}@: -_deactivateAudioSession
: Failed to deactivate audio session %{public}@ for %{public}@ with error code AVAudioSessionErrorCodeIsBusy. Treating that as a successful audio session deactivation.
%{public}@: -_deactivateAudioSession
: Failed to deactivate audio session %{public}@ for %{public}@ with error: %{public}@.
%{public}@: -_startObservingAudioSessionInterruptionNotifications
: Started observing interruptions for %{public}@.
%{public}@: -_stopObservingAudioSessionInterruptionNotifications
: Stopped observing interruptions for %{public}@.
%{public}@: -_handleAudioSessionInterruption
: Handling interruption of type AVAudioSessionInterruptionTypeBegan.
%{public}@: -_handleAudioSessionInterruption
: Updated _stateDescriptor to %{public}@.
%{public}@: -_handleAudioSessionInterruption
: Resetting state and marking %{public}@ as interrupted by the system.
%{public}@: -_beginPreventingAudioSessionDeactivation.
Unbalanced calls to -_beginPreventingAudioSessionDeactivation
 and -_endPreventingAudioSessionDeactivation
%{public}@: -_endPreventingAudioSessionDeactivationForStateDescriptor:(%{public}@).
%{public}@: -_endPreventingAudioSessionDeactivation
: No alert was playing, calling -_deactivateAudioSessionIfNeeded
%{public}@: -_endPreventingAudioSessionDeactivation
: Skipping reset client priority because the audio session was NOT just deactivated.
%{public}@: Failed to prepare default tone for alert type %{public}@ for playback. All possible fallback cases have been exhausted. Bailing.
%{public}@: _audioMixForVolumeRampingWithDuration:(%f) toneAsset:(%{public}@) toneAssetDuration:(%f) itemIndex:(%lu): Ramping volume from %f to %f over %f seconds, between overall playback timestamps %f and %f.
%{public}@: _externalEnvironmentValuesForAlert:(%{public}@).
%{public}@: _externalEnvironmentValuesForAlert:(%{public}@): isIncomingCallActive = %{BOOL}d.
TLServiceAgentInterface
NSObject
TLToneManager
TLSystemApplication
TLAlertPlaybackPolicy
TLAttentionAwarenessEffectCoordinator
TLPreferencesUtilities
TLVibrationPersistenceUtilities
TLAlertConfiguration
NSCopying
NSSecureCoding
NSCoding
TLITunesTone
TLSystemSound
Deprecated
TLAlertTone
Deprecated_Private
TLToneStoreDownloadStoreServicesController
SSDownloadManagerObserver
SSPurchaseManagerDelegate
TLToneStoreDownloadController
TLVibrationManager
TLAlertStoppingOptions
TLAttentionAwarenessEffectProcessor
TLAlertContext
TLVibrationPattern
TLAccessQueue
TLAlertSystemSoundController
TLBacklightObserver
TLAlertPlaybackBackEndController
TLAlertPlaybackCompletionContext
TLToneStoreDownload
TLAudioQueue
TLExtensions
TLAttentionAwarenessEffectAudioTapContext
TLAlertSystemSoundPlayTaskDescriptor
TLDeemphasizableAlertSystemSoundBeginPlayingContext
TLCapabilitiesManager
TLAttentionAwarenessObserver
TLAlertSystemSoundStopTasksDescriptor
TLContentProtectionStateObserver
TLAlertSystemSoundContext
TLSilentModeController
TLAlertActivationAssertion
TLToneImportResponse
TLBacklight
TLAlert
TLAlertController
TLAlertQueuePlayerController
TLAlertQueuePlayerStateDescriptor
initWithITunesRingtonePlistAtPath:
init
initWithLabel:appendUUIDToLabel:
copySharedResourcesPreferencesDomain
perWatchPreferencesDomain
initWithDomain:
synchronize
_loadITunesRingtoneInfoPlistAtPath:
_loadAlertToneInfo
_loadToneIdentifierAliasMap
_performBlockInAccessQueue:
sharedContentProtectionStateObserver
_handleProtectionContentUnlockedEvent
performBlockAfterProtectedContentUnlocked:
performSynchronousBlock:
cancelBlockScheduledForProtectedContentUnlockedEventWithToken:
dealloc
_rootDirectory
stringByAppendingPathComponent:
_iTunesRingtoneDirectory
_tonesFromManifestPath:mediaDirectoryPath:
_iTunesRingtoneInformationPlist
addObjectsFromArray:
_deviceITunesRingtoneInformationPlist
_deviceITunesRingtoneDirectory
count
countByEnumeratingWithState:objects:count:
identifier
setObject:forKey:
syncIdentifier
isEqualToDictionary:
copy
defaultManager
fileExistsAtPath:
fileURLWithPath:isDirectory:
dictionaryWithContentsOfURL:error:
objectForKey:
allKeys
initWithPropertyListRepresentation:filePath:
filePath
addObject:
defaultCenter
postNotificationName:object:
_reloadTonesAfterExternalChange
allValues
UTF8String
_installedTones
attributesOfItemAtPath:error:
longLongValue
dictionaryWithObjects:forKeys:count:
_addToneEntries:toManifestAtPath:mediaDirectory:shouldSkipReload:
initWithStatusCode:toneIdentifier:
stringByDeletingLastPathComponent
_ensureDirectoryExistsAtPath:
_lockManifestAtPath:
initWithContentsOfFile:
assetWithURL:
hasProtectedContent
mutableCopy
numberWithBool:
isDuplicateOfTone:
lastPathComponent
removeObjectForKey:
hasPrefix:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
removeAllObjects
_reloadTones
initWithManifestType:
removeItemsWithAssetPaths:completionBlock:
_removeToneWithIdentifier:orSyncIdentifier:
assertNotRunningInAccessQueue
length
setWithObjects:
_removeTonesFromManifestAtPath:fileNames:shouldSkipReload:alreadyLockedManifest:removedEntries:
removeItemAtPath:error:
tl_nonRedundantDescription
removeItemWithAssetPath:completionBlock:
fileSystemRepresentation
arrayWithObjects:count:
objectAtIndex:
isRingtone
name
enumerateKeysAndObjectsUsingBlock:
bundleForClass:
resourcePath
_systemEmbeddedSoundDirectory
_baseDirectoryForAlertToneSoundFiles
_systemSoundDirectory
_systemNewSoundDirectory
_systemWatchSoundDirectory
initWithSoundFileURL:actualSoundID:previewSoundID:requiresLongFormPlayback:
_systemEmbeddedModernSoundDirectory
defaultRingtoneIdentifier
isEqualToString:
_toneWithIdentifierIsSystemAlertTone:
_aliasForToneIdentifier:
_underlyingPlaybackArchiveForToneIdentifier:
initWithServiceName:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
retrieveCurrentTonePreferencesWithCompletionHandler:
setCurrentToneIdentifier:keyedByTopic:forPreferenceKey:completionHandler:
retrieveUserGeneratedVibrationPatternsWithCompletionHandler:
setUserGeneratedVibrationPatterns:withCompletionHandler:
removeAllUserGeneratedVibrationPatternsWithCompletionHandler:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
_newServiceConnection
remoteObjectProxyWithErrorHandler:
invalidate
currentToneIdentifierForAlertType:topic:
setCurrentToneIdentifier:forAlertType:topic:
_systemWideTonePreferenceKeyForAlertType:
stringByAppendingString:
_tonePreferencesFromService
toneWithIdentifierIsValid:
stringWithString:
_currentToneIdentifierForAlertType:topic:
_defaultPreferablyNonSilentToneIdentifierForAlertType:topic:
_currentOverridePolicyForType:
defaultToneIdentifierForAlertType:topic:
_setToneIdentifierUsingService:keyedByTopic:forPreferenceKey:
preferencesDomain
_didSetTonePreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:
_setCurrentOverridePolicy:forType:
currentToneIdentifierForAlertType:
nameForToneIdentifier:
currentToneSoundIDForAlertType:topic:
_soundForToneIdentifier:
soundID
_defaultToneIdentifierForAlertType:topic:
defaultToneIdentifierForAlertType:
sharedCapabilitiesManager
wantsModernDefaultRingtone
filePathForToneIdentifier:
actualSound
_toneWithIdentifierIsITunesRingtone:
_toneWithIdentifierIsNonDefaultSystemRingtone:
_toneWithIdentifierIsDefaultRingtone:
_toneWithIdentifierIsAlarmWakeUp:
initWithSoundFileURL:soundID:requiresLongFormPlayback:
_filePathForToneIdentifier:isValid:
_fileNameFromToneIdentifier:withPrefix:
_systemRingtoneDirectory
stringByAppendingPathExtension:
_alarmWakeUpRingtoneDirectory
_ensureTCCAccessPreflightAndCheckForFileExistenceAtPath:
soundFileURL
path
_defaultRingtonePath
previewSound
_nameForToneIdentifier:isValid:
_localizedNameOfToneWithIdentifier:
_defaultRingtoneName
_toneWithIdentifierIsMediaPlaybackArchive:
displayProperties
title
subtitle
stringByDeletingPathExtension
_toneWithIdentifierIsValid:
containsObject:
URLForResource:withExtension:
dictionaryWithContentsOfURL:
doubleValue
UUID
UUIDString
stringWithFormat:
createFileAtPath:contents:attributes:
_addToneToManifestAtPath:metadata:fileName:mediaDirectory:
statusCode
toneIdentifier
_toneWithIdentifier:
_removeToneWithIdentifier:
_evaluateOrphanEntriesCleanupStatusForcingReevaluationIfPreviouslyDone:returningFilePathsForFoundOrphans:wasAffectedByAccidentalToneDeletion:
dictionaryWithContentsOfFile:
_removeOrphanedPlistEntriesInManifestAtPath:mediaDirectory:
unionSet:
copySharedResourcesPreferencesDomainForDomain:
boolValue
stringWithUTF8String:
callStackSymbols
migratePerTopicPreferencesInDomain:withRegularPreferenceKeys:regularPreferenceKeysCount:intoSinglePerTopicPreferenceWithSuffix:usingPreferencesScope:
stringByReplacingOccurrencesOfString:withString:
_currentToneWatchAlertPolicyForAlertType:topic:
_currentToneWatchAlertPolicyForAlertType:topic:didFindPersistedWatchAlertPolicy:
_currentToneWatchAlertPolicyPreferenceKeyForAlertType:topic:
_setCurrentToneWatchAlertPolicy:forAlertType:topic:
boolForKey:
setBool:forKey:
_handleWatchPrefersSalientNotificationDidChange
_watchPrefersSalientNotifications
sharedToneManager
_currentOverridePolicyForAlertType:didFindAlertOverridePolicy:
_currentOverridePolicyPreferenceKeyForAlertType:
substringToIndex:
initWithFormat:
appendFormat:
appendString:
_abbreviatedDescriptionOfMediaPlaybackArchive:
archivedDataWithRootObject:requiringSecureCoding:error:
base64EncodedStringWithOptions:
_abbreviatedDescriptionOfToneIdentifierWithUnderlyingMediaPlaybackArchiveForLogging:
substringFromIndex:
initWithBase64EncodedString:options:
unarchivedObjectOfClass:fromData:error:
rangeOfString:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_handleTonePreferencesChangedNotificationForPreferencesKinds:
synchronizeUserDefaultsDomain:keys:
synchronizeNanoDomain:keys:
_migrateLegacyToneSettings
T@"TLToneManager",R
_installedTonesSize
_removeToneFromManifestAtPath:fileName:
_removeAllTones
setCurrentToneIdentifier:forAlertType:
currentToneNameForAlertType:
currentToneSoundIDForAlertType:
hasSpecificDefaultToneIdentifierForAlertType:topic:
_previewSoundForToneIdentifier:
subtitleForToneIdentifier:
_toneIdentifierForFileAtPath:isValid:
_unduckTimeForToneIdentifier:
importTone:metadata:completionBlock:
removeImportedToneWithIdentifier:
_importPurchasedToneWithMetadata:fileName:
_transferPurchasedToITunes:
_wasAffectedByAccidentalToneDeletion
_allSyncedTones
_toneForSyncIdentifier:
_importSyncedToneWithMetadata:fileName:
_removeToneWithSyncIdentifier:
_removeAllSyncedData
_removeOrphanedManifestEntriesReturningFilePathsForFoundOrphans:
_registerDidRequestResetSyncPostAccidentalToneDeletion
_currentToneWatchAlertPolicyForAlertType:
_setCurrentToneWatchAlertPolicy:forAlertType:
_setWatchPrefersSalientNotifications:
_currentOverridePolicyForAlertType:
_setCurrentOverridePolicy:forAlertType:
_toneIdentifierWithUnderlyingPlaybackArchive:
_hasUnderlyingPlaybackArchiveForToneIdentifier:
_handleDeviceRingtonesChangedNotification
.cxx_destruct
_accessQueue
_tonesByIdentifier
_toneIdentifiersBySyncIdentifier
_alertTonesByIdentifier
_toneIdentifierAliasMap
_contentProtectionStateObserverToken
_cachedWatchPrefersSalientNotifications
_hasValidCachedWatchPrefersSalientNotifications
_shouldSkipNextWatchPrefersSalientNotificationsDidChangeNotification
_transientNanoPreferencesDomainAccessor
_shouldUseServiceToAccessTonePreferences
_cachedTonePreferences
_shouldIgnoreNextToneDidChangeNotification
T@"NSString",R,N
initWithBundleIdentifier:name:
defaultSystemApplication
T@"TLSystemApplication",R
bundleIdentifier
_bundleIdentifier
_name
T@"NSString",R,V_bundleIdentifier
T@"NSString",R,V_name
configuration
shouldRepeat
type
shouldRepeatVibrationForAlert:
tracks
mediaType
audioMix
audioMixInputParametersWithTrack:
setEffectCoordinator:
setAudioTapProcessor:
setInputParameters:
effectProcessor
setEffectParameters:
setEffectParameters:effectMixFadeDuration:
inputParameters
firstObject
audioTapProcessor
initWithStreamDescription:
effectParameters
initWithProcessingFormat:framesPerRender:audioSession:effectParameters:
setEffectProcessor:
start
stop
removeObject:
render:numberOfFrames:
initWithEffectParameters:audioSession:
audioMixForAsset:
isAttentionAwarenessAudioMix:
_prepareAudioProcessingWithEffectAudioTapContext:maximumNumberOfFrames:processingFormat:
_unprepareAudioProcessingWithEffectAudioTapContext:
_finalizeAudioProcessingWithEffectAudioTapContext:
_processAudioWithEffectAudioTapContext:bufferList:numberOfFramesRequested:numberOfFramesToProcess:
audioSession
_lock
_effectAudioTapContexts
_effectParameters
_audioSession
T@"AVAudioSession",R,N,V_audioSession
T{?=Bff},N
effectCoordinator
_existingPerTopicPreferenceKeyPrefixesWithRegularPreferenceKeys:regularPreferenceKeysCount:
_setValue:forKey:inDomain:usingPreferencesScope:
_enumerateKeysAndValuesWithEligibleKeyPrefixes:inDomain:usingPreferencesScope:withBlock:
_synchronizeDomain:usingPreferencesScope:
_copyAllKeysAndValuesFromDomain:usingPreferencesScope:
tl_errorWithDomain:description:
isValidVibrationPatternPropertyListRepresentation:
_validateObjectWithError:validationBlock:
_objectIsValidUserGeneratedVibrationPattern:error:
objectIsValidUserGeneratedVibrationPatternsDictionary:error:
userGeneratedVibrationStoreFileURL
T@"NSURL",R
initWithType:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
decodeObjectOfClasses:forKey:
decodeFloatForKey:
decodeDoubleForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeInt64:forKey:
encodeFloat:forKey:
encodeDouble:forKey:
encodeBool:forKey:
raise:format:
_throwForFrozenInstance
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
_freeze
setTopic:
setToneIdentifier:
setVibrationIdentifier:
setExternalToneFileURL:
setExternalToneMediaLibraryItemIdentifier:
setExternalVibrationPattern:
setExternalVibrationPatternFileURL:
setAudioCategory:
setAudioVolume:
setForPreview:
setMaximumDuration:
setShouldRepeat:
setShouldIgnoreRingerSwitch:
setShouldForcePlayingAtUserSelectedAudioVolume:
setShouldIgnoreAccessibilityDisabledVibrationSetting:
_setAudioPlaybackInitiationDelay:
_setAudioVolumeRampingDuration:
_hasCustomAudioVolume
_audioPlaybackInitiationDelay
_audioVolumeRampingDuration
topic
vibrationIdentifier
externalToneFileURL
externalToneMediaLibraryItemIdentifier
externalVibrationPattern
externalVibrationPatternFileURL
audioCategory
audioVolume
isForPreview
maximumDuration
shouldIgnoreRingerSwitch
shouldForcePlayingAtUserSelectedAudioVolume
shouldIgnoreAccessibilityDisabledVibrationSetting
_isFrozen
_hasCustomRepeatingFlag
_forPreview
_shouldRepeat
_shouldIgnoreRingerSwitch
_shouldForcePlayingAtUserSelectedAudioVolume
_shouldIgnoreAccessibilityDisabledVibrationSetting
_audioVolume
_type
_topic
_toneIdentifier
_vibrationIdentifier
_externalToneFileURL
_externalToneMediaLibraryItemIdentifier
_externalVibrationPattern
_externalVibrationPatternFileURL
_audioCategory
_maximumDuration
TB,R,N,V_hasCustomAudioVolume
Td,N,S_setAudioPlaybackInitiationDelay:,V_audioPlaybackInitiationDelay
Td,N,S_setAudioVolumeRampingDuration:,V_audioVolumeRampingDuration
Tq,R,N,V_type
T@"NSString",C,N,V_topic
T@"NSString",C,N,V_toneIdentifier
T@"NSString",C,N,V_vibrationIdentifier
T@"NSURL",C,N,V_externalToneFileURL
TQ,N,V_externalToneMediaLibraryItemIdentifier
T@"NSDictionary",C,N,V_externalVibrationPattern
T@"NSURL",C,N,V_externalVibrationPatternFileURL
T@"NSString",C,N,V_audioCategory
Tf,N,V_audioVolume
forPreview
TB,N,GisForPreview,V_forPreview
Td,N,V_maximumDuration
TB,N,V_shouldRepeat
TB,N,V_shouldIgnoreRingerSwitch
TB,N,V_shouldForcePlayingAtUserSelectedAudioVolume
TB,N,V_shouldIgnoreAccessibilityDisabledVibrationSetting
_identifierForPropertyListRepresentation:
albumTitle
artistName
genreName
storeItemIdentifier
duration
initWithToneStoreDownload:
storeFrontIdentifier
isPurchased
artworkFile
isProtectedContent
isPrivateTone
fadeInDurationNumber
fadeOutDurationNumber
_purchased
_ringtone
_protectedContent
_privateTone
_identifier
_albumTitle
_artistName
_genreName
_filePath
_syncIdentifier
_storeItemIdentifier
_storeFrontIdentifier
_artworkFile
_duration
_fadeInDurationNumber
_fadeOutDurationNumber
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_name
T@"NSString",R,N,V_albumTitle
T@"NSString",R,N,V_artistName
T@"NSString",R,N,V_genreName
T@"NSString",R,N,V_filePath
T@"NSNumber",R,N,V_syncIdentifier
TQ,R,N,V_storeItemIdentifier
T@"NSString",R,N,V_storeFrontIdentifier
purchased
TB,R,N,GisPurchased,V_purchased
ringtone
TB,R,N,GisRingtone,V_ringtone
T@"NSString",R,N,V_artworkFile
Td,R,N,V_duration
protectedContent
TB,R,N,GisProtectedContent,V_protectedContent
privateTone
TB,R,N,GisPrivateTone,V_privateTone
T@"NSNumber",R,N,V_fadeInDurationNumber
T@"NSNumber",R,N,V_fadeOutDurationNumber
unsignedLongLongValue
unsignedIntegerValue
isEqualToNumber:
_prepareForDealloc
_description
_ensureUnderlyingSoundCreated
isValid
beginRequiringUnderlyingSoundLoaded
endRequiringUnderlyingSoundLoaded
requiresLongFormPlayback
_soundID
_shouldDisposeOfSoundID
_requiresLongFormPlayback
_soundFileURL
T@"NSURL",R,N,V_soundFileURL
TI,R,N
TB,R,N,V_requiresLongFormPlayback
valid
TB,R,N,GisValid
playAlertForType:
alertWithConfiguration:
playWithCompletionHandler:
initWithType:accountIdentifier:
initWithType:toneIdentifier:vibrationIdentifier:
playWithCompletionHandler:targetQueue:
playToneAndVibrationForType:
_actualSoundID
_previewSoundID
_actualSound
_previewSound
T@"TLSystemSound",R,N
currentToneIdentifierForAlertType:accountIdentifier:
setCurrentToneIdentifier:forAlertType:accountIdentifier:
_currentToneWatchAlertPolicyForAlertType:accountIdentifier:
_setCurrentToneWatchAlertPolicy:forAlertType:accountIdentifier:
setDownloadKinds:
setPrefetchedDownloadExternalProperties:
setPrefetchedDownloadProperties:
setShouldFilterExternalOriginatedDownloads:
initWithManagerOptions:
addObserver:
mainBundle
initWithManagerIdentifier:
setDelegate:
_updateStoreAccountName
_performBlockOnAccessQueue:
_handleAccountStoreDidChangeNotification:
defaultStore
addObserver:selector:name:object:
_handleToneManagerContentsDidChangeNotification:
removeObserver:
removeObserver:name:object:
_assertRunningOnAccessQueue
activeAccount
accountName
_notifyObserversOfUpdatedStoreAccountName:
weakObjectsHashTable
allObjects
storeAccountNameDidChange:
didFinishCheckingForAvailableToneStoreDownloads:
toneStoreDownloadsDidStart:
toneStoreDownloadsDidProgress:
toneStoreDownloadsDidFinish:
_openToneStoreWithStoreItemKind:
sharedApplication
openURL:options:completionHandler:
setAllowedToneStyles:
setCreatesDownloads:
setValue:forDownloadProperty:
initWithURLRequest:
setURLBagKey:
setRequestProperties:
addPurchases:withCompletionBlock:
persistentIdentifier
numberWithLongLong:
downloadPhaseIdentifier
percentComplete
_setDownloadProgress:
_notifyObserversOfStartedToneStoreDownloads:progressedToneStoreDownload:finishedToneStoreDownloads:
URLResponse
storeCorrelationID
downloadsMetadata
kind
setKind:
_setName:
collectionName
_setAlbumTitle:
_setArtistName:
durationInMilliseconds
_setDuration:
genre
_setGenreName:
itemIdentifier
_setStoreItemIdentifier:
_setRingtone:
indexOfObject:
initWithDownloadMetadata:
setValue:forProperty:
_notifyObserversOfCheckingForDownloadsFinishedWithoutNeedToIssueAnyDownload
addEntriesFromDictionary:
addDownloads:completionBlock:
_setToneIdentifier:
removeObjectsForKeys:
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
downloadManagerNetworkUsageDidChange:
purchaseManager:didFinishPurchasesWithResponses:
openAlertToneStore
openRingtoneStore
redownloadAllTones
storeAccountName
_accessQueueLabel
_observers
_storeAccountName
_toneStoreDownloadsByStoreDownloadPersistentIdentifiers
_storeDownloadManager
_storePurchaseManager
isMainThread
_initWithSpecialBehaviors:
_handleVibrationPreferencesDidChangeNotificationForPreferencesKinds:atInitiativeOfVibrationManager:
_isUnitTestingModeEnabled
refresh
_userGeneratedVibrationPatterns
currentVibrationIdentifierForAlertType:topic:
setCurrentVibrationIdentifier:forAlertType:topic:
_systemWideVibrationPatternPreferenceKeyForAlertType:
vibrationWithIdentifierIsValid:
_defaultVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:
_currentVibrationIdentifierForAlertType:topic:
_defaultPreferablyNonSilentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:
_currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:allowsNoneDefaultToAnyActualVibrationSubstitution:
_sanitizeVibrationIdentifier:forAlertType:topic:correspondingToneIdentifier:useDefaultVibrationAsFallback:allowsNoneDefaultToAnyActualVibrationSubstitution:didFallback:
_currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:
_didSetVibrationPreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:
currentVibrationIdentifierForAlertType:
nameOfVibrationWithIdentifier:
patternForVibrationWithIdentifier:repeating:
defaultVibrationIdentifierForAlertType:topic:
_areSynchronizedVibrationsAllowedForAlertType:topic:
_synchronizedVibrationIdentifierForToneIdentifier:
_patternForSystemVibrationWithIdentifier:shouldLogAssetPath:
_systemVibrationIdentifiersForSubdirectory:
defaultVibrationIdentifierForAlertType:
noneVibrationPattern
propertyListRepresentation
deviceCodeName
fileExistsAtPath:isDirectory:
simplifiedDeviceCodeName
_completeSystemVibrationsSubdirectoryForSubdirectory:
pathsForResourcesOfType:inDirectory:
URLForResource:withExtension:subdirectory:
hasSynchronizedVibrationsCapability
_localizedNameForVibrationWithIdentifier:
patternForVibrationWithIdentifier:
_nameOfVibrationWithIdentifier:
initWithPropertyListRepresentation:
_artificiallyRepeatingPropertyListRepresentation
setByAddingObjectsFromSet:
_playbackBackEndForAlertType:topic:
_retrieveUserGeneratedVibrationPatternsUsingService
_handleUserGeneratedVibrationsDidChangeNotification
_setUserGeneratedVibrationPatternsUsingService:error:
_didChangeUserGeneratedVibrationPatterns
initWithDictionary:
_saveUserGeneratedVibrationPatterns:error:
_removeAllUserGeneratedVibrationPatternsUsingServiceWithError:
sharedSilentModeController
silentModeStatus
shouldVibrateOnSilent
shouldVibrateOnRing
_booleanPreferenceForKey:defaultValue:
_storedSystemVibrationDataMigrationVersion
setCurrentVibrationIdentifier:forAlertType:
_makeSystemVibrationDataMigrationVersionCurrentIfNecessary
_currentVibrationWatchAlertPolicyForAlertType:topic:
_currentVibrationWatchAlertPolicyForAlertType:topic:didFindPersistedWatchAlertPolicy:
_currentVibrationWatchAlertPolicyPreferenceKeyForAlertType:topic:
_setCurrentVibrationWatchAlertPolicy:forAlertType:topic:
sharedVibrationManager
_handleVibrateOnRingOrSilentDidChangeNotification
T@"TLVibrationManager",R
setAllowsAutoRefresh:
currentVibrationNameForAlertType:
currentVibrationPatternForAlertType:
defaultVibrationNameForAlertType:
defaultVibrationPatternForAlertType:
hasSpecificDefaultVibrationIdentifierForAlertType:topic:
noneVibrationName
allUserSelectableSystemVibrationIdentifiers
allUserGeneratedVibrationIdentifiers
_vibrationIsSettableForAlertType:
_sanitizeVibrationIdentifier:forAlertType:topic:correspondingToneIdentifier:didFallbackToCurrentVibrationIdentifier:
addUserGeneratedVibrationPattern:name:error:
setName:forUserGeneratedVibrationWithIdentifier:error:
deleteUserGeneratedVibrationPatternWithIdentifier:error:
_numberOfUserGeneratedVibrations
_removeAllUserGeneratedVibrationsWithError:
shouldVibrateForCurrentRingerSwitchState
_migrateLegacySettings
_currentVibrationWatchAlertPolicyForAlertType:
_setCurrentVibrationWatchAlertPolicy:forAlertType:
needsRefresh
allowsAutoRefresh
_specialBehaviors
_cachedSystemVibrationIdentifiers
_cachedSystemVibrationCompleteSubdirectories
_cachedUserGeneratedVibrationPatterns
_synchronizedVibrationPatternFromToneIdentifierMapping
_needsRefresh
_allowsAutoRefresh
TB,R,N,V_needsRefresh
TB,N,V_allowsAutoRefresh
TB,R,N
fadeOutDuration
setFadeOutDuration:
shouldWaitUntilEndOfCurrentRepetition
setShouldWaitUntilEndOfCurrentRepetition:
_shouldWaitUntilEndOfCurrentRepetition
_fadeOutDuration
Td,N,V_fadeOutDuration
TB,N,V_shouldWaitUntilEndOfCurrentRepetition
enableManualRenderingMode:format:maximumFrameCount:error:
inputNode
attachNode:
connect:to:format:
mainMixerNode
connect:to:fromBus:toBus:format:
initWithNode:bus:
connect:toConnectionPoints:fromBus:format:
loadAudioUnitPresetAtURL:error:
bands
bypass
filterType
gain
frequency
enumerateObjectsUsingBlock:
wetDryMix
setOutputVolume:
initWithPCMFormat:frameCapacity:
setFrameLength:
setManualRenderingInputPCMFormat:inputBlock:
_applyEffectParameters:includingEffectMix:
globalGain
_sanitizeEffectMix:
_applyEffectMix:
_currentEffectMix
isInManualRenderingMode
startAndReturnError:
manualRenderingBlock
mutableAudioBufferList
destinationForMixer:bus:
setVolume:
volume
setBypass:
category
setGlobalGain:
_assertNotRunningOnAccessQueue
_destinationPCMBuffer
_engine
_inputNode
_inputNodeInputBufferList
_lowPassFilter
_reverb
_effectMixFadingTimer
playbackBackEnd
setPlaybackBackEnd:
timeoutTimerSource
setTimeoutTimerSource:
isBeingInterrupted
setBeingInterrupted:
_beingInterrupted
_playbackBackEnd
_timeoutTimerSource
Tq,N,V_playbackBackEnd
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimerSource
beingInterrupted
TB,N,GisBeingInterrupted,V_beingInterrupted
floatValue
numberWithFloat:
numberWithInt:
_initWithPropertyListRepresentation:skipValidation:
dictionaryWithDictionary:
_computedDuration
intValue
simpleVibrationPatternWithVibrationDuration:pauseDuration:
complexVibrationPatternWithDurationsForVibrationsAndPauses:
appendVibrationComponentWithDuration:isPause:
contextObject
setContextObject:
_propertyListRepresentation
_complexPatternDescription
_contextObject
T@,R,N
T@,&,N,V_contextObject
objCType
currentThread
threadDictionary
_performSynchronousBlockInSerialQueue:
performAsynchronousBlock:
label
_threadLocalStorageKey
_serialQueue
_label
T@"NSString",R,N,V_label
sharedAudioQueue
initWithKeyOptions:valueOptions:capacity:
assertNotRunningOnAudioQueue
_prepareForStoppingAlerts:playbackCompletionType:
_processStopTasksDescriptor:withOptions:playbackCompletionType:completionHandler:
performSynchronousTaskWithBlock:
setCompletionHandler:
setPlaybackCompletionType:
playbackObserver
_toneIdentifierForDeemphasizingAlert:
setToneIdentifierForDeemphasizingAlert:
setPlaybackCompletionContext:
setPlaybackObserver:
_considerDeferringPlayingAlertForBacklightStatusResolution:alertSystemSoundContext:
_playAlert:alertSystemSoundContext:toneIdentifierForDeemphasizingAlert:backlightStatusResolutionDeferralContext:
performTaskWithBlock:
assertRunningOnAudioQueue
_soundForAlert:toneIdentifierForDeemphasizingAlert:
playbackCompletionContext
_recordPlaybackFailureIntoPlaybackCompletionContext:
setSound:
setDeemphasized:
_beginRequiringBacklightObservation
_prepareForPreemptingAlertsBeforeBeginningPlaybackOfAlert:withSound:playbackCompletionType:
_playTaskDescriptorForAlert:withSound:alertSystemSoundContext:
_processPlaybackCompletionContexts:completionHandler:
_processPlayTaskDescriptors:
toneIdentifierForDeemphasizingAlert
hasPlaybackStarted
initWithAlert:sound:alertSystemSoundContext:
alert
sound
alertSystemSoundContext
_optionsForSystemSoundAlert:withSound:
_didCompletePlaybackForAlert:
setHasPlaybackStarted:
alertDidBeginPlaying:
interruptedAlertsToSound
isBeingDeemphasized
setBeingDeemphasized:
_endRequiringBacklightObservation
setInterruptedAlertsToSound:
setPlaybackCompletionContextsToProcess:
playbackCompletionContextsToProcess
_preheatForAlert:backlightStatus:completionHandler:
hasVibratorCapability
_soundBehaviorForAlert:withSound:
numberWithUnsignedInt:
_componentSuppressionFlagsForAlert:
_descriptionForAlertComponentsSuppressionFlags:
_vibrationPatternForAlert:withSound:
numberWithDouble:
performSynchronousTaskWithOptions:block:
playbackCompletionType
error
completionHandler
setError:
sharedBacklight
setAlert:
setAlertSystemSoundContext:
isDeemphasized
_processDeemphasizableAlertChangesForBackglightStatus:stopTasksDescriptorForDeemphasizedAlerts:playbackCompletionTypeForDeemphasizedAlerts:deemphasizableAlertBeginPlayingContexts:
backlightStatusDidChange:
playAlert:withCompletionHandler:
stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:
handleActivationAssertionStatusChangeForAlert:updatedStatus:
preheatForAlert:completionHandler:
updateAudioVolumeDynamicallyForAlert:toValue:
_audioQueue
_alertSystemSoundContexts
_backlightStatus
_backlightObservationRequestsCount
currentVibrationIdentifierForAlertType:accountIdentifier:
setCurrentVibrationIdentifier:forAlertType:accountIdentifier:
_currentVibrationWatchAlertPolicyForAlertType:accountIdentifier:
_setCurrentVibrationWatchAlertPolicy:forAlertType:accountIdentifier:
_completionHandler
_playbackCompletionType
_error
T@?,C,N,V_completionHandler
Tq,N,V_playbackCompletionType
T@"NSError",C,N,V_error
downloadProgress
_isRingtone
_downloadProgress
T@"NSString",C,N,S_setName:
T@"NSString",C,N,S_setAlbumTitle:
T@"NSString",C,N,S_setArtistName:
Td,N,S_setDuration:
T@"NSString",C,N,S_setGenreName:
TB,N,GisRingtone,S_setRingtone:
TQ,N,S_setStoreItemIdentifier:
Tf,N,S_setDownloadProgress:
T@"NSString",C,N,S_setToneIdentifier:
_init
setValue:forKey:
_shouldAssumeRunningOnAudioQueue
T@"TLAudioQueue",R
_underlyingSerialQueue
_assumeRunningOnAudioQueueThreadLocalStorageKey
T@"NSObject<OS_dispatch_queue>",R,N
assetTrack
tl_hapticPlayerItemTrack
T@"AVPlayerItemTrack",R,N
_effectCoordinator
_effectProcessor
T@"TLAttentionAwarenessEffectCoordinator",&,N,V_effectCoordinator
T@"TLAttentionAwarenessEffectProcessor",&,N,V_effectProcessor
T@"NSUUID",R,N,V_identifier
_alert
_sound
_alertSystemSoundContext
T@"TLAlert",R,N,V_alert
T@"TLSystemSound",R,N,V_sound
T@"TLAlertSystemSoundContext",R,N,V_alertSystemSoundContext
_toneIdentifierForDeemphasizingAlert
T@"TLAlert",&,N,V_alert
T@"TLAlertSystemSoundContext",&,N,V_alertSystemSoundContext
T@"NSString",C,N,V_toneIdentifierForDeemphasizingAlert
T@"TLSystemSound",&,N,V_sound
initWithFormat:arguments:
errorWithDomain:code:userInfo:
userInfo
_handleStoreAvailableItemKindsChangedNotification:
_checkRingtoneStoreAvailability
_hasTelephonyCapability
currentDevice
_updateRingtoneStoreAvailabilityWithAvailableKinds:error:
getAvailableItemKindsWithBlock:
hasSuffix:
T@"TLCapabilitiesManager",R
isRingtoneStoreAvailable
isAlertToneStoreAvailable
hasUserGeneratedVibrationsCapability
isHomePod
_isRingtoneStoreAvailable
_isAlertToneStoreAvailable
_deviceCodeNameSimplicationMapping
ringtoneStoreAvailable
TB,R,N,GisRingtoneStoreAvailable
alertToneStoreAvailable
TB,R,N,GisAlertToneStoreAvailable
homePod
TB,R,N,GisHomePod
setEventMask:
setIdentifier:
setAttentionLostTimeouts:
setConfiguration:
_didCompleteInitialization
_endPollingForAttention
invalidateWithError:
_invokePollingForAttentionEventHandlers:eventType:
supportedEvents
_beginPollingForAttention
resumeWithError:
distantFuture
timeIntervalSinceNow
_didReceiveAttentionPollingEventOfType:attentionEvent:
pollForAttentionWithTimeout:queue:block:error:
cancelPollForAttentionWithError:
suspendWithError:
sharedAttentionAwarenessObserver
supportsAttenuatingTonesForAttentionDetected
T@"TLAttentionAwarenessObserver",R
pollForAttentionWithEventHandler:
cancelPollForAttentionWithToken:
_pollingForAttentionEventHandlers
_isFullyInitialized
_isPollingForAttention
_attentionAwarenessClient
_attentionAwarenessClientQueue
_interruptedAlertsToSound
_playbackCompletionContextsToProcess
T@"NSMapTable",&,N,V_interruptedAlertsToSound
T@"NSArray",C,N,V_playbackCompletionContextsToProcess
_performBlockAfterProtectedContentUnlocked:
_loadContentProtectionStatusIfNeeded
_loadUnlockedSinceBootStatusIfNeeded
_cancelBlockScheduledForProtectedContentUnlockedEventWithToken:
T@"TLContentProtectionStateObserver",R
_queryCurrentUnlockedSinceBootStatus
_blocksScheduledForProtectedContentUnlockedEvent
_contentProtectionStatus
_unlockedSinceBootStatus
_hasPlaybackStarted
_beingDeemphasized
_deemphasized
_playbackCompletionContext
_playbackObserver
T@"TLAlertPlaybackCompletionContext",&,N,V_playbackCompletionContext
T@"<TLAlertPlaybackObserver>",W,N,V_playbackObserver
TB,N,V_hasPlaybackStarted
beingDeemphasized
TB,N,GisBeingDeemphasized,V_beingDeemphasized
deemphasized
TB,N,GisDeemphasized,V_deemphasized
_registerRingerSwitchChangedNotifyToken
_silentModeStatusForRingerSwitchChangedNotifyToken:
_cancelRingerSwitchChangedNotifyToken
_updateSilentModeStatusUsingRingerSwitchChangedNotifyToken:
_setSilentModeStatus:
T@"TLSilentModeController",R
_ringerSwitchChangedNotifyToken
_silentModeStatus
Tq,R
_relinquish
_acquire
sharedAlertController
initWithAlert:
acquire
relinquish
_activeAcquisitionCount
_statusCode
Tq,R,N,V_statusCode
T@"NSString",R,N,V_toneIdentifier
_notifyObservers:ofUpdatedBacklightStatus:
_setObservingBacklight:
T@"TLBacklight",R
backlightStatus
_setBacklightStatus:
_isObservingBacklight
_initWithConfiguration:toneIdentifier:vibrationIdentifier:hasSynchronizedVibrationUnmatchedWithTone:
stopWithOptions:
stopAllAlerts
_descriptionForDebugging:
_watchPrefersSalientToneAndVibration
_setWatchPrefersSalientToneAndVibration:
_stopAllAlerts
play
preheatWithCompletionHandler:
_updateAudioVolumeDynamicallyToValue:
_hasSynchronizedVibrationUnmatchedWithTone
_instanceIndex
_configuration
TB,R,N,V_hasSynchronizedVibrationUnmatchedWithTone
T@"TLAlertConfiguration",R,N,V_configuration
T@"NSString",R,N,V_vibrationIdentifier
_stopAllAlertsInCurrentProcess
_prepareForPlayingAlert:
_didCompletePlaybackOfAlert:
_stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:
_playbackBackEndForAlert:
_controllerForPlaybackBackEnd:
_didReachTimeoutForAlert:
numberWithInteger:
integerValue
_queuePlayerController
_systemSoundController
_shouldStopAlertForUserInterruption:
T@"TLAlertController",R
_alertContexts
_destroyQueuePlayerForStateDescriptor:
playingAlert
initWithPlayingAlert:completionHandler:previousStateDescriptor:
_playAlertForStateDescriptor:previousStateDescriptor:
stateDescriptorForCompletedPlayback
_stopPlayingAlertForStateDescriptor:withOptions:playbackCompletionType:completionHandler:
_applyAudioVolume:forAlert:
initForAcquiringActivationAssertionWithAlertForAudioEnvironmentSetup:previousStateDescriptor:
alertForAudioEnvironmentSetup
isAlertActivationAssertionAcquired
stateDescriptorByRelinquishingActivationAssertion
_handleActivationAssertionStatusChangeForAlert:updatedStatus:previousStateDescriptor:updatedStateDescriptor:
_shouldUseAuxiliaryAudioSessionForAlert:
_beginPreventingAudioSessionDeactivation
_stopPlaybackForStateDescriptor:
invokePlayingAlertCompletionHandlerWithPlaybackCompletionType:error:
_reloadPlaybackForStateDescriptor:withToneIdentifier:
_endPreventingAudioSessionDeactivationForStateDescriptor:
endBackgroundTask:
beginBackgroundTaskWithName:expirationHandler:
_stopPlaybackForStateDescriptor:withOptions:playerWasAlreadyPausedExternally:
_restoreAudioEnvironmentForStateDescriptor:
_prepareAudioEnvironmentForStateDescriptor:
_propertyKeysOfInterestForToneAssets
statusOfValueForKey:error:
status
_createQueuePlayerIfNecessaryForStateDescriptor:
numberWithUnsignedLongLong:
predicateWithValue:forProperty:
songsQuery
addFilterPredicate:
items
lastObject
valueForProperty:
_startPlaybackForStateDescriptor:usingAssetWithLoadedProperties:shouldConfirmAlertStillPlaying:
loadValuesAsynchronouslyForKeys:completionHandler:
_fallbackToneIdentifierForStateDescriptor:
_canPlayToneAsset:
_startPlaybackForStateDescriptor:usingConfirmedPlayableAsset:
_stopObservingQueuePlayer
removeAllItems
_willBeginPlayingAlertForStateDescriptor:
_startPlaybackForStateDescriptor:usingConfirmedPlayableAsset:hasAlreadyDetectedUserAttention:
_shouldVibrateForAlert:
playerItemWithAsset:
setAudioMix:
_audioMixForVolumeRampingWithDuration:toneAsset:toneAssetDuration:itemIndex:
setAudioSpatializationAllowed:
insertItem:afterItem:
_startObservingQueuePlayer
vibrationPattern
setVibrationPattern:
_performDelayedAudioPlaybackInitiationForStateDescriptor:
setRate:withVolumeRampDuration:
pause
_didEndPlayingAlertForStateDescriptor:
_externalEnvironmentValuesForAlert:
auxiliarySession
setAudioSession:
_resetFlagsForSwitchingAuxiliaryAudioSession
sharedInstance
_audioCategoryForAlert:externalEnvironmentValues:
_audioCategoryOptionsForAlert:externalEnvironmentValues:
_audioModeForAlert:audioCategory:
categoryOptions
mode
setCategory:mode:options:error:
_shouldBypassRingerSwitchPolicyForAlert:
setBypassRingerSwitchPolicy:error:
setPrefersToVibeWhenVibrationsAreDisabled:error:
_audioVolumeForAlert:audioCategory:
_audioVolumeApplicationPolicyForAlert:externalEnvironmentValues:
_activateAudioSessionIfNeededForStateDescriptor:
_shouldApplyAttentionAwarenessEffectsForAlert:
_didReceiveAttentionPollingEventOfType:stateDescriptor:
sharedAVSystemController
_celestialAudioCategoryForAudioSessionCategory:
getVolume:forCategory:
_deactivateAudioSessionIfNeededForStateDescriptor:
_isPreventingAudioSessionDeactivation
_resetClientPriorityForStateDescriptor:
_setClientPriority:
setVolumeTo:forCategory:
getActiveCategoryVolume:andName:
setActiveCategoryVolumeTo:
_clientNameForAlert:
_clientPriorityForAlert:
_shouldEnsureActiveAudioSessionWhenStartingPlaybackForAlert:
_clientName
_clientPriority
_ensuresActiveAudioSessionWhenStartingPlayback
initWithDispatchQueue:
setAllowsExternalPlayback:
_setClientName:
_setEnsuresActiveAudioSessionWhenStartingPlayback:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
_queuePlayer:currentItemWasUpdatedFromValue:
_queuePlayer:currentItemStatusWasUpdatedToValue:
observeValueForKeyPath:ofObject:change:context:
seekToTime:completionHandler:
currentItem
code
_shouldHandleAudioSessionActivationForAlert:
processInfo
processName
setActive:error:
_startObservingAudioSessionInterruptionNotificationsForStateDescriptor:
_stopObservingAudioSessionInterruptionNotificationsForStateDescriptor:
setActive:withOptions:error:
_handleAudioSessionInterruptionNotification:
_handleAudioSessionInterruptionOfType:withOptions:
_adjustAudioVolumeForOptimalRampingPerception:
tracksWithMediaType:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
attributeForKey:
_stateDescriptor
_playingToneIdentifier
_toneAssetForPendingPlayingAlert
_hasToneAssetForPendingPlayingAlert
_isStoppingPlayingAlert
_isWaitingToCompleteReloadPlaybackRequest
_isObservingQueuePlayer
_queuePlayer
_isAudioEnvironmentSetup
_isUsingAuxiliaryAudioSession
_previousAudioCategory
_previousAudioCategoryOptions
_previousAudioMode
_isBypassingRingerSwitchPolicy
_isIgnoringAccessibilityDisabledVibrationSetting
_isAudioSessionActive
_audioSessionDeactivationPreventionRequestsCount
_isObservingAudioSessionInterruptionNotification
_attentionPollingToken
_isAttentionAwarenessSubsystemFullyInitialized
_lastAttentionPollingEventType
_externalEnvironmentValues
localizedStringForKey:value:table:
_transferPlayingAlertAndCompletionHandlerFromPreviousStateDescriptor:
_initForRelinquishingActivationAssertionWithAlertForAudioEnvironmentSetup:previousStateDescriptor:
setAlertActivationAssertionAcquired:
playingAlertCompletionHandler
setAlertForAudioEnvironmentSetup:
_hasInvokedCompletionHandlerForPlayingAlert
_isAlertActivationAssertionAcquired
_playingAlert
_playingAlertCompletionHandler
_alertForAudioEnvironmentSetup
T@"TLAlert",R,N,V_playingAlert
T@?,R,N,V_playingAlertCompletionHandler
alertActivationAssertionAcquired
TB,N,GisAlertActivationAssertionAcquired,V_isAlertActivationAssertionAcquired
T@"TLAlert",&,N,V_alertForAudioEnvironmentSetup
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
@24@0:8q16
@32@0:8q16@24
@24@0:8@16
v16@0:8
@32@0:8@16@24
@48@0:8@16@24@32@40
@44@0:8@16@24@32B40
B32@0:8@16@24
B48@0:8@16@24B32B36^@40
i24@0:8@16
B40@0:8@16@24@32
v32@0:8@16q24
v40@0:8@16q24@32
I24@0:8q16
I32@0:8q16@24
B32@0:8q16@24
@32@0:8@16^B24
d24@0:8@16
v40@0:8@16@24@?32
v24@0:8@16
q36@0:8B16^@20^B28
q24@0:8^@16
q24@0:8q16
q32@0:8q16@24
q40@0:8q16@24^B32
v32@0:8q16q24
v40@0:8q16q24@32
v20@0:8B16
q32@0:8q16^B24
v40@0:8@16@24Q32
v24@0:8Q16
@"TLAccessQueue"
@"NSDictionary"
@"<NSCopying>"
@"NPSDomainAccessor"
@"NSString"
@36@0:8{?=Bff}16@28
{?=Bff}16@0:8
v28@0:8{?=Bff}16
v36@0:8{?=Bff}16d28
v36@0:8@16I24r^{AudioStreamBasicDescription=dIIIIIIII}28
v40@0:8@16^{AudioBufferList=I[1{AudioBuffer=II^v}]}24I32I36
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableSet"
{?="shouldBypassLowPassFilter"B"volumeForLowPassFilterGlobalGain"f"effectMix"f}
@"AVAudioSession"
^{__CFString=}16@0:8
^{__CFString=}24@0:8^{__CFString=}16
v52@0:8^{__CFString=}16r^@24Q32@40i48
@32@0:8r^@16Q24
v44@0:8@16^{__CFString=}24i32@?36
^{__CFDictionary=}28@0:8^{__CFString=}16i24
v44@0:8^v16^{__CFString=}24^{__CFString=}32i40
v28@0:8^{__CFString=}16i24
B32@0:8^@16@?24
B32@0:8@16^@24
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8f16
v24@0:8d16
d16@0:8
q16@0:8
f16@0:8
@"NSURL"
@"NSNumber"
@32@0:8@16I24B28
I16@0:8
@40@0:8q16@24@32
B32@0:8@?16@24
v24@0:8q16
@36@0:8@16I24I28B32
@"TLSystemSound"
v32@0:8@16@24
v32@0:8@"SSDownloadManager"16@"NSArray"24
v24@0:8@"SSDownloadManager"16
v32@0:8@"SSPurchaseManager"16@"NSArray"24
v24@0:8@"<TLToneStoreDownloadObserver>"16
v40@0:8@16@24@32
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
@"NSMutableDictionary"
@"SSDownloadManager"
@"SSPurchaseManager"
v32@0:8Q16@24
@24@0:8Q16
@44@0:8q16@24@32B40
@28@0:8@16B24
B24@0:8q16
@56@0:8@16q24@32@40^B48
@64@0:8@16q24@32@40B48B52^B56
@40@0:8@16@24^@32
B40@0:8@16@24^@32
B24@0:8^@16
B28@0:8^{__CFString=}16B24
@48@0:8@16I24@28{?=Bff}36
^{AudioBufferList=I[1{AudioBuffer=II^v}]}28@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16I24
f20@0:8f16
v32@0:8{?=Bff}16B28
@"AVAudioPCMBuffer"
@"AVAudioEngine"
@"AVAudioInputNode"
^{AudioBufferList=I[1{AudioBuffer=II^v}]}
@"AVAudioUnitEQ"
@"AVAudioUnitReverb"
@"NSObject<OS_dispatch_source>"
@32@0:8d16d24
@24@0:8d16
v28@0:8d16B24
@"NSMutableArray"
I32@0:8@16@24
I24@0:8@16
@20@0:8I16
B48@0:8@16@24q32@?40
v28@0:8@16B24
v28@0:8@16f24
v32@0:8@"TLAlert"16@?<v@?q@"NSError">24
B48@0:8@"NSArray"16@"TLAlertStoppingOptions"24q32@?<v@?B>40
v28@0:8@"TLAlert"16B24
v32@0:8@"TLAlert"16@?<v@?B@"NSError">24
v28@0:8@"TLAlert"16f24
v56@0:8@16@24@32{?=qBB}40
{?=qBB}32@0:8@16@24
@40@0:8@16@24@32
@32@0:8@16q24
v48@0:8@16@24q32@?40
@40@0:8@16@24q32
v40@0:8@16q24@?32
v48@0:8q16@24q32@40
@"TLAudioQueue"
@"NSMapTable"
@?16@0:8
@"NSError"
v32@0:8Q16@?24
@"TLAttentionAwarenessEffectCoordinator"
@"TLAttentionAwarenessEffectProcessor"
@"NSUUID"
@"TLAlert"
@"TLAlertSystemSoundContext"
@24@0:8@?16
@"AWAttentionAwarenessClient"
@"NSArray"
@"TLAlertPlaybackCompletionContext"
@"<TLAlertPlaybackObserver>"
q20@0:8i16
v20@0:8i16
@20@0:8B16
@"TLAlertConfiguration"
q24@0:8@16
@"TLAlertQueuePlayerController"
@"TLAlertSystemSoundController"
@25@0:8@16{?=B}24
Q25@0:8@16{?=B}24
q25@0:8@16{?=B}24
{?=B}24@0:8@16
v44@0:8@16B24@28@36
v36@0:8@16@24B32
v28@0:8f16@20
v32@0:8q16@24
v48@0:8@16@24@32^v40
f32@0:8@16@24
v32@0:8Q16Q24
@48@0:8d16@24d32Q40
@"TLAlertQueuePlayerStateDescriptor"
@"AVAsset"
@"AVQueuePlayer"
{?="isIncomingCallActive"B}
@40@0:8@16@?24@32
