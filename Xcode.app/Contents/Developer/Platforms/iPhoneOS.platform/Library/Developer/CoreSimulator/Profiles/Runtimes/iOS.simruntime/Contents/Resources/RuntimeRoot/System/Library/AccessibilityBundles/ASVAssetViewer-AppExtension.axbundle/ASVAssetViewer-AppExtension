sharedInstance
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
installSafeCategory:canInteractWithTargetClass:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
init
accessibilityInitializeBundle
bundleForClass:
localizedStringForKey:value:table:
safeCategoryTargetClassName
safeCategoryBaseClass
_accessibilityPerformValidations:
isAccessibilityElement
accessibilityLabel
accessibilityTraits
validateClass:hasInstanceMethod:withFullSignature:
_accessibilityLoadAccessibilityInformation
safeValueForKey:
setShouldGroupAccessibilityChildren:
setAccessibilityTraits:
.cxx_destruct
entityController
setEntityController:
_entityController
validateClass:isKindOfClass:
validateClass:conformsToProtocol:
_axARView
_axBoundsForControls
_setAccessibilityFrameBlock:
setAccessibilityNavigationStyle:
_axUpdateARViewAccessibilityElements
_axHasHandledLoadAX
_axEmitterMode
_axStartVisibilityAnnouncementsIfStopped
_axSetHasHandledLoadAX:
safeUIViewForKey:
URLByDeletingPathExtension
lastPathComponent
length
bounds
_axControlsViewStack
convertRect:fromView:
bezierPath
moveToPoint:
addLineToPoint:
closePath
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
addArcWithCenter:radius:startAngle:endAngle:clockwise:
CGPath
safeBoolForKey:
_axShouldExposeControls
_setIsAccessibilityElementBlock:
localizedStringWithFormat:
safeFloatForKey:
_axDescriptionForRotationInDegrees:
_axDescriptionForPitchInDegrees:
initWithAccessibilityContainer:
_axNameForEntityController:
_axIsOffScreenForEntityController:
_axDescriptionForCurrentRotationForEntityController:
_axDescriptionForCurrentScreenCoverageForEntityController:
_axDescriptionForCurrentPitchForEntityController:
_setAccessibilityLabelBlock:
_axBoundingRectForEntityController:
_setAccessibilityHintBlock:
_axAnnotateAsControl:
_axGetAccessibilityFrame:path:forArrowTowardsEdge:isDoubleArrow:
_axGetAccessibilityFrame:path:forRotationControlClockwise:
setAccessibilityFrame:
setAccessibilityPath:
rotateByDeltaYaw:deltaPitch:
_setAccessibilityActivateBlock:
_accessibilitySetScannerActivateBehavior:
_axAssetScaleForEntityController:
_axUnifiedGestureRecognizerForEntityController:
unifiedGestureRecognizerBeganScaling:
unifiedGestureRecognizer:scaledAssetToScale:
unifiedGestureRecognizerEndedScaling:
assetScreenPosition
unifiedGestureRecognizer:doubleTappedAtScreenPoint:onAsset:
effectiveUserInterfaceLayoutDirection
bezierPathWithOvalInRect:
applyTransform:
accessibilityPath
_axAdjustScaleByMultiplier:entityController:
_setAccessibilityIncrementBlock:
_setAccessibilityDecrementBlock:
_axAssetScaleForAnnouncementsForEntityController:
_setAccessibilityValueBlock:
_axResetToInitialScaleForEntityAction:
initWithName:target:selector:
arrayWithObjects:count:
setAccessibilityCustomActions:
_axLevitationHeightForEntityController:
worldGestureRecognizer:levitatedAssetToScreenPoint:
worldGestureRecognizer:translatedAssetToScreenPoint:
_axDescriptionForCurrentPositionForEntityController:
_valueForPercentageFromRawValue:
calculateAssetScreenBoundingRectIn:
safeIntegerForKey:
safeArrayForKey:
array
_axCreateAssetElementForEntityController:
setAccessibilityRespondsToUserInteraction:
addObject:
_axControlForRotationWithDeltaYaw:deltaPitch:nameFormat:hintFormat:shouldUseArrows:entityController:
_axControlForScalingForEntityController:
_axControlForTranslationForLevitation:delta:nameFormat:entityController:
addObjectsFromArray:
_axARModeControls
_axEntityControllers
countByEnumeratingWithState:objects:count:
_axARModeControlsForEntityController:isRTL:
_axSetARModeControls:
_axRootEntityController
_axObjectModeControls
_axObjectModeControlsForEntityController:isRTL:
_axSetObjectModeControls:
setAccessibilityElements:
viewWillAppear:
viewWillDisappear:
_axStopVisibilityAnnouncements
handleTapAtPointWithPoint:
alpha
_accessibilitySetBoolValue:forKey:
_accessibilityBoolValueForKey:
_axSetOffScreen:forEntityController:
_axTimerForVisibilityAnnouncements
_axCheckForAppearanceOfEntityControllersWithTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_axSetTimerForVisibilityAnnouncements:
invalidate
stageBackToHologram
_axUpdateForOldEmitterMode:
transitionToObjectMode
transitionToARMode
placeModelOn:
entityDidPlaceOnARAnchor
entityController:doubleTappedAt:
setEntityControllers:
isEqualToArray:
setAccessibilityLabel:
_axDidRegisterForNotifications
defaultCenter
_axDidToggleAXSetting:
addObserver:selector:name:object:
_axSetDidRegisterForNotifications:
_axShouldDisableAutoHidingControls
updateOverlayVisibilityWithShowControls:overrideHideShutterButton:shouldUpdateFullScreen:animated:
startAutoHideControlsTimer
stopAutoHideControlsTimerWithShouldRestart:
enableWorldModeControl:
safeStringForKey:
_axSpeakUpdateToStatusPill
cancelPreviousPerformRequestsWithTarget:selector:object:
updateStatusPill
performSelector:withObject:afterDelay:
B16@?0@"AXValidationManager"8
ASVAssetViewer AX
ASVAssetViewer
v16@?0@"AXValidationManager"8
ARQuickLookOverlayControllerAccessibility
PreviewViewControllerAccessibility
CheckoutContainerViewAccessibility
ImageViewButtonAccessibility
Accessibility
ASVAssetViewer.ImageViewButton
CHECK_OUT
ASVAssetViewer.CheckoutContainerView
verticalTextStackView
titleLabel
entityController
T@,W,N,V_entityController
ASVAssetViewer.PreviewViewController
UIViewController
ASVAssetViewer.EntityController
ASVUnifiedGestureRecognizerDelegate
currentlyDisallowsUnifiedGestureRecognizerAction
handleTapAtPointWithPoint:
{CGPoint=dd}
overlayController
entityControllers
rootEntityController
accessibilityARView
stageBackToHologram
transitionToObjectMode
transitionToARMode
placeModelOn:
entityDidPlaceOnARAnchor
entityController:doubleTappedAt:
setEntityControllers:
ASVAssetViewer.ARQuickLookOverlayController
controlsViewStack
accessibilityAssetURL
assetYaw
assetPitch
assetScale
assetScreenPosition
rotateByDeltaYaw:deltaPitch:
worldGestureRecognizer:translatedAssetToScreenPoint:
worldGestureRecognizer:levitatedAssetToScreenPoint:
scaleTo:updateARScale:
worldGestureRecognizer
levitationHeight
calculateAssetScreenBoundingRectIn:
{CGRect={CGPoint=dd}{CGSize=dd}}
viewWillAppear:
viewWillDisappear:
ASVAssetViewer.ARQLView
emitterMode
{CGRect={CGPoint=dd}{CGSize=dd}}8@?0
DEFAULT_ASSET_NAME
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityBundles_Sim/AccessibilityBundles-2591.28/ASVAssetViewerAccessibility/PreviewViewControllerAccessibility.m
-[PreviewViewControllerAccessibility _axGetAccessibilityFrame:path:forArrowTowardsEdge:isDoubleArrow:]
Unexpected edge for asset view accessibility control: %lu
B8@?0
ROTATE_TO_ZERO_ANNOUNCEMENT
ROTATE_TO_180_ANNOUNCEMENT
ROTATE_TO_CLOCKWISE_ANNOUNCEMENT
ROTATE_TO_COUNTERCLOCKWISE_ANNOUNCEMENT
NOT_TILTED_ANNOUNCEMENT
UPSIDE_DOWN_ANNOUNCEMENT
TILTED_AWAY_ANNOUNCEMENT
TILTED_TOWARD_ANNOUNCEMENT
ASSET_IS_NOT_PLACED
__AXStringForVariablesSentinel
ASSET_IS_OFF_SCREEN
@"NSString"8@?0
TOGGLE_CONTROLS_HINT
v8@?0
SCALING_CONTROL
SCALING_CONTROL_HINT
SCALING_CONTROL_RESET
-[PreviewViewControllerAccessibility _axControlForTranslationForLevitation:delta:nameFormat:entityController:]
Unexpected delta for control for translation: %f, %f
FLOATING
NOT_FLOATING
UNABLE_TO_MOVE
TOP_LEFT
MIDDLE_LEFT
BOTTOM_LEFT
TOP_CENTER
MIDDLE_CENTER
BOTTOM_CENTER
TOP_RIGHT
MIDDLE_RIGHT
BOTTOM_RIGHT
POSITIONED_AT_ANNOUNCEMENT
-[PreviewViewControllerAccessibility _valueForPercentageFromRawValue:]
Had raw value %f, but should not have gotten here if the asset was not on screen at all
VISIBILITY_PERCENTAGE
COVERAGE_PERCENTAGE
-[PreviewViewControllerAccessibility _axDescriptionForCurrentScreenCoverageForEntityController:]
Unable to get view bounds: %@ or asset frame: %@
ROTATION_CONTROL_YAW_HINT
ROTATION_CONTROL_PITCH_HINT
ROTATION_CONTROL_CLOCKWISE
ROTATION_CONTROL_COUNTERCLOCKWISE
ROTATION_CONTROL_AWAY
ROTATION_CONTROL_TOWARD
TRANSLATION_CONTROL_LEFT
TRANSLATION_CONTROL_RIGHT
TRANSLATION_CONTROL_BACKWARD
TRANSLATION_CONTROL_FORWARD
TRANSLATION_CONTROL_UP
TRANSLATION_CONTROL_DOWN
CONTROLS_SHOWN
CONTROLS_HIDDEN
IsOffScreen
ASSET_MOVED_OFF_SCREEN
ASSET_MOVED_ON_SCREEN
ASSET_PLACED_IN_WORLD
RESET_SCALE_ANNOUNCEMENT
dismissButton
shareButton
ASVButton
button
startAutoHideControlsTimer
updateOverlayVisibilityWithShowControls:overrideHideShutterButton:shouldUpdateFullScreen:animated:
enableWorldModeControl:
updateStatusPill
statusPill
ASVTrackingStateStatusLabel
text
CLOSE_BUTTON
SHARE_BUTTON
AXASVAssetViewerGlue
__ImageViewButtonAccessibility_super
SafeCategory
ImageViewButtonAccessibility
__CheckoutContainerViewAccessibility_super
CheckoutContainerViewAccessibility
AXEntityControllerAction
__PreviewViewControllerAccessibility_super
PreviewViewControllerAccessibility
__ARQuickLookOverlayControllerAccessibility_super
ARQuickLookOverlayControllerAccessibility
v16@0:8
@16@0:8
#16@0:8
v24@0:8@16
B16@0:8
Q16@0:8
v20@0:8B16
@24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v44@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^@24Q32B40
v36@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^@24B32
@24@0:8q16
@52@0:8f16f20@24@32B40@44
f24@0:8@16
v28@0:8f16@20
@44@0:8B1620@28@36
d24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
q16@0:8
@28@0:8@16B24
v32@0:8{CGPoint=dd}16
v28@0:8B16@20
B24@0:8@16
v24@0:8q16
v40@0:8@16{CGPoint=dd}24
^8U)zj
$@UUUUUU
?UUUUUU
