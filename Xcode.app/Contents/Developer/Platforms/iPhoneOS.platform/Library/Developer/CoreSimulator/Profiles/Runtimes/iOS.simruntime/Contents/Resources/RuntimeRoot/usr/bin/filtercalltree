@(#)PROGRAM:filtercalltree  PROJECT:SamplingTools-64555.99.1
<file-with-call-tree> [options...]
help
v8@?0
invertCallTree
print call tree from hottest to coldest stack frame
pruneCount
count
remove branches with count less than <count>
v24@?0@"NSString"8^@16
pruneMallocSize
size
remove branches with malloc size less than <size>, such as 500K or 1.2M
invalid parameter for -pruneMallocSize: '%@'
invalid parameter format for -pruneMallocSize: '%@'
chargeSystemLibraries
charge stack frames from all libraries in /System and /usr to their callers
chargeLibrary
library-name
charge stack frames from <library-name> to their callers; this argument can be repeated
keepBoundaries
when charging libraries to callers, keep the top call into excluded libraries
call tree file name '%@' already specified; what is %@?
no call tree filename specified
Total number in stack (recursive counted multiple, when >=
Call graph:
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] Target task not available for analysis
v12@?0i8
%s[%d]: [fatal] %s kept pid %u suspended for too long - exiting to prevent watchdog timer from killing that process.
SAMPLING_TOOLS_ALL_PROCESSES
Target process is using %s so not generating corpse for better performance.
Target process is an ancestor and permitting live process for ancestors so not generating a corpse to save resources by default.
__check_mach_ports_lookup
%s[%d]: [fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
%s[%d]: Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
SIMULATOR_ROOT
SIMULATOR_SHARED_RESOURCES_DIRECTORY
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
v24@?0{_CSTypeRef=QQ}8
generated corpse for pid %u
Failed to generate corpse from the process: %d (%s)
%s[%d]: [fatal] %s, exiting
%s[%d]: %s - examining live process instead
BOOL _respawnToolIfNecessaryWithExitStatus(pid_t, task_read_t, VMURespawnToolOptions, int *)
Only one of kVMURespawnForAllProcesses and kVMURespawnForAllNonNativeProcesses can be set
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
DT_FORCE_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
%s[%d]: respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but the analysis process does not match the SDK variant of the target process %d.
Analysis of malloc zones may fail.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
DYLD_FORCE_PLATFORM
x86_64
i386
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
--al
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal] waitpid: %s
_respawnToolIfNecessaryWithExitStatus_block_invoke
sharedCode.m
WIFSIGNALED(child_status)
v12@?0I8
%s/usr/bin/%s
v20@?0I8@?<v@?>12
com.apple.dt.instruments
setSyntaxDescription:
setSingleHyphenLongNames:
setParametersShowAsAssignment:
usage:
intValue
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:handler:
initWithString:
scanFloat:
string
scanLocation
substringFromIndex:
isEqualToString:
length
array
addObject:
parseArguments:withBlock:
initWithCallGraphFile:fileHeader:topFunctionsList:binaryImagesList:
chargeSystemLibrariesToCallersAndKeepBoundaries:
chargeLibrariesToCallers:keepBoundaries:
pruneMallocSize:
pruneCount:
invertedNode
UTF8String
hasPrefix:
fullOutputWithThreshold:showPseudoNodes:
stringFromCallTreeIndentIfNoBranches:showPseudoNodes:
containsString:
hasSuffix:
stringByResolvingSymlinksInPath
defaultManager
fileExistsAtPath:isDirectory:
isExecutableFileAtPath:
attributesOfItemAtPath:error:
fileSize
dataWithContentsOfFile:options:error:
localizedDescription
processInfo
arguments
arrayWithArray:
objectAtIndexedSubscript:
lastPathComponent
setObject:atIndexedSubscript:
componentsJoinedByString:
appendFormat:
initWithTask:getBinariesList:
executablePath
parentPid
parentProcessPath
processName
mainBundle
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
stringByStandardizingPath
fileExistsAtPath:
initWithTask:
shouldAnalyzeWithCorpse
isSemiCriticalProcess
numberWithInt:
stringValue
initWithPid:
name
reason
callStackSymbols
stringWithFormat:
valueForEnvVar:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
is64Bit
numberWithUnsignedInt:
[fatal] Target task not available for analysis
[fatal] %s kept pid %u suspended for too long - exiting to prevent watchdog timer from killing that process.
[fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
[fatal] %s, exiting
[fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
[fatal] 'mach_ports_register' failed: %s (%d)
[fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
[fatal] waitpid: %s
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_port_deallocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dt.SamplingTools.filtercalltree</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.2</string>
<key>DTSDKBuild</key>
<string>20C47</string>
<key>DTSDKName</key>
<string>iphonesimulator16.2.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
@(#)PROGRAM:filtercalltree  PROJECT:SamplingTools-64555.99.1
<file-with-call-tree> [options...]
help
v8@?0
invertCallTree
print call tree from hottest to coldest stack frame
pruneCount
count
remove branches with count less than <count>
v24@?0@"NSString"8^@16
pruneMallocSize
size
remove branches with malloc size less than <size>, such as 500K or 1.2M
invalid parameter for -pruneMallocSize: '%@'
invalid parameter format for -pruneMallocSize: '%@'
chargeSystemLibraries
charge stack frames from all libraries in /System and /usr to their callers
chargeLibrary
library-name
charge stack frames from <library-name> to their callers; this argument can be repeated
keepBoundaries
when charging libraries to callers, keep the top call into excluded libraries
call tree file name '%@' already specified; what is %@?
no call tree filename specified
Total number in stack (recursive counted multiple, when >=
Call graph:
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] Target task not available for analysis
v12@?0i8
%s[%d]: [fatal] %s kept pid %u suspended for too long - exiting to prevent watchdog timer from killing that process.
SAMPLING_TOOLS_ALL_PROCESSES
Target process is using %s so not generating corpse for better performance.
Target process is an ancestor and permitting live process for ancestors so not generating a corpse to save resources by default.
__check_mach_ports_lookup
%s[%d]: [fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
%s[%d]: Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
SIMULATOR_ROOT
SIMULATOR_SHARED_RESOURCES_DIRECTORY
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
v24@?0{_CSTypeRef=QQ}8
generated corpse for pid %u
Failed to generate corpse from the process: %d (%s)
%s[%d]: [fatal] %s, exiting
%s[%d]: %s - examining live process instead
BOOL _respawnToolIfNecessaryWithExitStatus(pid_t, task_read_t, VMURespawnToolOptions, int *)
Only one of kVMURespawnForAllProcesses and kVMURespawnForAllNonNativeProcesses can be set
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
DT_FORCE_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
%s[%d]: respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but the analysis process does not match the SDK variant of the target process %d.
Analysis of malloc zones may fail.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
DYLD_FORCE_PLATFORM
arm64
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
--al
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal] waitpid: %s
_respawnToolIfNecessaryWithExitStatus_block_invoke
sharedCode.m
WIFSIGNALED(child_status)
v12@?0I8
%s/usr/bin/%s
v20@?0I8@?<v@?>12
com.apple.dt.instruments
[fatal] Target task not available for analysis
[fatal] %s kept pid %u suspended for too long - exiting to prevent watchdog timer from killing that process.
[fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
[fatal] %s, exiting
[fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
[fatal] 'mach_ports_register' failed: %s (%d)
[fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
[fatal] waitpid: %s
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_port_deallocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dt.SamplingTools.filtercalltree</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.2</string>
<key>DTSDKBuild</key>
<string>20C47</string>
<key>DTSDKName</key>
<string>iphonesimulator16.2.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
length
fullOutputWithThreshold:showPseudoNodes:
isEqualToString:
initWithString:
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:handler:
initWithCallGraphFile:fileHeader:topFunctionsList:binaryImagesList:
shouldAnalyzeWithCorpse
array
stringWithFormat:
setSyntaxDescription:
UTF8String
usage:
handleFailureInFunction:file:lineNumber:description:
valueForEnvVar:
scanLocation
isSemiCriticalProcess
addObject:
initWithTask:getBinariesList:
stringWithUTF8String:
initWithTask:
scanFloat:
pruneMallocSize:
setSingleHyphenLongNames:
numberWithInt:
stringValue
invertedNode
currentHandler
stringFromCallTreeIndentIfNoBranches:showPseudoNodes:
is64Bit
chargeSystemLibrariesToCallersAndKeepBoundaries:
setParametersShowAsAssignment:
string
numberWithUnsignedInt:
pruneCount:
hasPrefix:
intValue
chargeLibrariesToCallers:keepBoundaries:
substringFromIndex:
parseArguments:withBlock:
