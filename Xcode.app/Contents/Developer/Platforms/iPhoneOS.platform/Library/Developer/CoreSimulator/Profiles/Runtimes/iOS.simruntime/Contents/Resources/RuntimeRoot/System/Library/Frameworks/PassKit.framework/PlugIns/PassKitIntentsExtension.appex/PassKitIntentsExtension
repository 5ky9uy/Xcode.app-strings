PKGetCarLockStatusIntentHandler: Resolving car name.
PKGetCarLockStatusIntentHandler: Confirming if intent supported.
PKSetCarLockStatusIntentHandler: No CarKey.
PKSetCarLockStatusIntentHandler: Car not connected.
PKGetCarLockStatusIntentHandler: Car doesn't support locking functionality.
PKGetCarLockStatusIntentHandler: Car supports locking functionality.
PKGetCarLockStatusIntentHandler: Handling intent.
PKGetCarLockStatusIntentHandler: Unable to retrieve lock status of car.
PKGetCarLockStatusIntentHandler: Successfully retrieved lock status of car.
Received call to %{public}@ with intent %@
Received handleRequestPayment: for an intent without a stored peer payment request recipient
Received call to %@ with intent %@
Returning currency unsupported response %@
Returning amount below minimum response %@
Returning amount above maximum response %@
Returning failure response for generic unsupported amount. Response: %@
Intent confirmation successful. Returning ready response: %@
Calling %{public}@ completion with confirmation of inferred amount currency, %@.
Calling %{public}@ completion with needs value because we could not infer currency.
Do not have a sending address to use for identifyRecipient, fast forwarding to return continue in app intent response.
PKSetCarLockStatusIntentHandler; Resolving car name.
PKSetCarLockStatusIntentHandler: Resolving locking action.
PKSetCarLockStatusIntentHandler: Handler will %@ the car.
PKSetCarLockStatusIntentHandler: user to provide value for lock/unlock
PKSetCarLockStatusIntentHandler: Confirming if intent supported.
PKSetCarLockStatusIntentHandler: No car connected.
PKSetCarLockStatusIntentHandler: Car doesn't support locking functionality.
PKSetCarLockStatusIntentHandler: Car supports locking functionality.
PKSetCarLockStatusIntentHandler: Handling intent.
PKSetCarLockStatusIntentHandler: Unable to process intent because lock status was not specified. Should've been specified by this point.
PKSetCarLockStatusIntentHandler: Successfully set lock state of car.
PKSetCarLockStatusIntentHandler: Unable to send action to car.
Calling %{public}@ completion with preDeterminedIntentResponse %@
Calling %{public}@ completion with invalid registration status result %@
Calling %{public}@ completion with invalid account resolution result %@
Calling %{public}@ completion with success %@, intentResponse %@
Calling %{public}@ completion with fast forward response %@
Calling %{public}@ completion with not required result %@ due to registration status
Calling %{public}@ completion with not required result %@ due to account resolution status
Intent does not include a note.
Intent included note "%@", which was capitalized to "%@".
Calling %{public}@ completion with result %@
Calling %{public}@ completion with success %@, payeeResolutionResult %@
Calling %{public}@ completion with currency unsupported response
Calling %{public}@ completion with amount below minimum response
Calling %{public}@ completion with amount above maximum response
Calling %{public}@ completion with generic unsupported response
Calling %{public}@ completion with success for currency amount: %@
Calling %{public}@ completion with needs value.
Performing send payment intent operations %@
Cannot perform a quote without a stored peer payment quote
Could not fetch a valid quote.
Could not fetch a valid recipient.
Received successful response from performQuote, sending payment message
Received failure response from performQuote, returning error intent response
Received successful quote response.
Created payment record %@ from quote %@
Quote was not succesful, creating intent response from errror: %@
Resolved handle: %@ for person: %@
Recipient has a valid registration status.
Recipient lookup returned status: %@ error: %@
Recipient lookup returned status: %@ but no error
Calling %{public}@ completion with not required response
Calling %{public}@ completion with no handle result %@
Not checking payee elibility status for result that does not include a single resolved person.
Constructing PKPeerPaymentMessage
Could not construct peer payment message. Recipient: %@, currency: %@, amount: %@, performResponse: %@
PKBaseCarCommandHandler: Spoken Phrase: %@
PKBaseCarCommandHandler: Getting a generic request for carName. Returning all carKeyPasses
PKBaseCarCommandHandler: Found %lu exact match(es).
PKBaseCarCommandHandler: Can't find a car that match the spoken phrase, fail later on.
PKBaseCarCommandHandler: Matched phrase %@ to car (%@).
PKBaseCarCommandHandler: Multiple cars matched phrase %@. Disambiguate.
PKBaseCarCommandHandler: Disambiguating car names: %@.
PKBaseCarCommandHandler: No car was specified. Either we have no cars stored, or this is an error and we failed to set the identifier.
PKBaseCarCommandHandler: No supported functions matching %@.
Info: Base handler for isFunction:inDesiredState:currentStatus: was called. Either we have a simple car function, or we failed to handle a complex car function
PKBaseCarCommandHandler: No car was specified, or we unable to retrieve the function and function status. Either we have no cars stored, or this is an error and we failed to set the identifier.
PKBaseCarCommandHandler: No car was specified, or we were unable to retrieve the function and function status. Either we have no cars stored, or this is an error and we failed to set the identifier.
PKBaseCarCommandHandler: Requesting to set function (%@) to state (%li). Current status: (%li).
PKBaseCarCommandHandler: Function all ready in desired state.
PKBaseCarCommandHandler: Not NearField linkable or we're missing vital information, cannot send action.
Received call to handleSearchForAccounts: with intent %@
Calling handleSearchForAccounts: completion with failureAccountNotFound for non-empty organizationName %@
Calling handleSearchForAccounts: completion with invalid registration status result %@
Calling handleSearchForAccounts: completion with invalid account resolution result %@
Calling handleSearchForAccounts: completion with success
Calling handleSearchForAccounts: completion with failure for invalid PKCurrencyAmount %@
Connecting to IMDaemonController
Connected to IMDaemonController
User resolved disambiguation of aliases by selecting person: %@
Found %lu matching contacts
Resolved person from dictated phone number or email: %@
Resolved contact: %@
Resolved alias: %@
Contact has no phone numbers or email addresses
Asking user to disambiguate among %lu aliases for contact
Asking user to disambiguate among %lu contacts
Error fetching contacts: %@
Found %lu handles for contact
User has most recently interacted with handle: %@
User has not recently interacted with any of the handles
Contact %@ has no phone numbers or email addresses, using an empty person handle
Sending composition: %@
Could not construct composition for peer payment message: %@
Sending composition %@ to recipient %@
Resolved recipient IMHandle: %@
Sending IMMessage: %@
Could not create IMMessages with composition: %@ conversation %@
Could not resolve IMHandle for recipient %@
Found recent chats with %lu handles for contact: %@
Chat with %@ was on an iMessage thread
Chat with %@ was NOT on an iMessage thread
Using Siri language code: %@
Siri language code could not be determined, using device locale instead.
PKActivateCarSignalIntentHandler: Resolving car name.
PKSetCarLockStatusIntentHandler: Resolving signals to activate.
PKActivateCarSignalIntentHandler: Asking user to provide value for signal to trigger.
PKActivateCarSignalIntentHandler: Confirming if intent supported.
PKActivateCarSignalIntentHandler: Visible signals aren't supported yet.
PKActivateCarSignalIntentHandler: No CarKey.
PKActivateCarSignalIntentHandler: Car not connected.
PKActivateCarSignalIntentHandler: Car doesn't support alarm functionality.
PKActivateCarSignalIntentHandler: Car supports alarm functionality.
PKActivateCarSignalIntentHandler: Handling intent.
PKActivateCarSignalIntentHandler: Successfully started car alarm.
PKActivateCarSignalIntentHandler: Unable to send action to car.
No handler for intent of type %{public}@
carName
resolveCarNameForSpokenString:withCompletion:
setWithArray:
prepareCarWithResolvedCarName:toHandleDesiredFunctions:
initWithCode:userActivity:
handleGetCurrentFunctionState
integerValue
numberWithInt:
setLocked:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handleGetCarLockStatus:completion:
confirmGetCarLockStatus:completion:
resolveCarNameForGetCarLockStatus:withCompletion:
intentQueue
peerPaymentController
_responseForInvalidRegistrationStatus:
_responseForInvalidAccountResolution:
_queue_fetchRequestTokenForIntent:peerPaymentController:completion:
_intentResponseForGenericFailure
_queue_identifyRecipientWithIntent:peerPaymentController:completion:
peerPaymentRegistrationStatusWithCompletion:
currencyAmount
pkCurrencyAmountFromIntentAmount:
validateCurrencyAmount:completion:
notRequired
unsupportedForReason:
unsupported
successWithResolvedCurrencyAmount:
amount
currencyCode
peerPaymentService
account
currentBalance
currency
length
initWithAmount:currencyCode:
confirmationRequiredWithCurrencyAmountToConfirm:
needsValue
note
siriLocale
pk_uppercaseFirstStringForLocale:
successWithResolvedString:
payer
resolveSiriMatchesForPerson:
personResolutionResult
resolvedValue
personHandle
value
reset
successWithResolvedPerson:
selectMode:
_intentResponseFromWebServiceError:
unsupportedWithReason:
identifyRecipientWithAddress:senderAddress:completion:
isPersonWithNoHandle
initWithPersonResolutionResult:
senderPhoneOrEmail
_peerPaymentMessageForRequestWithCurrencyAmount:requestToken:recipientHandle:senderHandle:memo:
sendMessage:toRecipient:
inCurrencyAmountFromPKAmount:
applePayPaymentMethod
initWithPayee:payer:currencyAmount:paymentMethod:note:status:feeAmount:
setPaymentRecord:
formalRequestTokenForAmount:source:completion:
domain
isEqualToString:
userInfo
objectForKeyedSubscript:
code
initWithType:
setAmount:
setCurrency:
setSenderAddress:
setRecipientAddress:
setRequestToken:
setMemo:
setSource:
handleRequestPayment:completion:
confirmRequestPayment:completion:
resolvePayerForRequestPayment:withCompletion:
resolvePayerForRequestPayment:completion:
resolveCurrencyAmountForRequestPayment:withCompletion:
resolveCurrencyAmountForRequestPayment:completion:
resolveNoteForRequestPayment:withCompletion:
resolvedRecipient
setResolvedRecipient:
preDeterminedIntentResponse
setPreDeterminedIntentResponse:
.cxx_destruct
_resolvedRecipient
_preDeterminedIntentResponse
T@"PKPeerPaymentRecipient",&,N,V_resolvedRecipient
T@"INRequestPaymentIntentResponse",&,N,V_preDeterminedIntentResponse
caseInsensitiveCompare:
locked
boolValue
successWithResolvedValue:
handleSetCurrentFunctionToDesiredStatus:withCompletion:
handleSetCarLockStatus:completion:
confirmSetCarLockStatus:completion:
resolveLockedForSetCarLockStatus:withCompletion:
resolveCarNameForSetCarLockStatus:withCompletion:
isFunction:inDesiredState:currentStatus:
delegate
pk_didFinishInteractionForIntent:
_queue_performOperationsIfNecessary:intent:completion:
_queue_performQuoteForIntent:peerPaymentController:completion:
_queue_fetchQuoteForIntent:peerPaymentController:completion:
payee
_peerPaymentMessageForAuthorizedPaymentWithQuote:performResponse:recipientHandle:senderHandle:memo:
_paymentRecordFromQuote:payee:note:status:
performQuote:completion:
quoteWithAmount:source:completion:
totalReceiveAmountCurrency
totalReceiveAmount
updateWithPeerPaymentPerformResponse:
totalFees
totalFeesCurrency
handleSendPayment:completion:
confirmSendPayment:completion:
resolvePayeeForSendPayment:withCompletion:
resolvePayeeForSendPayment:completion:
resolveCurrencyAmountForSendPayment:withCompletion:
resolveCurrencyAmountForSendPayment:completion:
resolveNoteForSendPayment:withCompletion:
pendingQuote
setPendingQuote:
preDeterminedPayeeResolutionResult
setPreDeterminedPayeeResolutionResult:
_pendingQuote
_preDeterminedPayeeResolutionResult
T@"PKPeerPaymentQuote",&,N,V_pendingQuote
T@"INSendPaymentPayeeResolutionResult",&,N,V_preDeterminedPayeeResolutionResult
T@"INSendPaymentIntentResponse",&,N,V_preDeterminedIntentResponse
addObject:
init
invalidate
dealloc
invalidateSession
sharedInstance
passWithUniqueID:
secureElementPass
passesOfType:
isCarKeyPass
pk_objectsPassingTest:
spokenPhrase
_findExactMatchOnSpokenPhraseForCarPass:spokenPhrase:completion:
_carKeyPass:correspondsToAllSpokenPhrase:
count
lowercaseString
whitespaceCharacterSet
componentsSeparatedByCharactersInSet:
predicateWithFormat:
filteredArrayUsingPredicate:
localizedDescription
countByEnumeratingWithState:objects:count:
containsString:
anyObject
uniqueID
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
pk_setByApplyingBlock:
allObjects
disambiguationWithStringsToDisambiguate:
_secureElementPassCorrespondingToPhrase:completion:
vocabularyIdentifier
_carKeyPassForUniqueIdentifier:
initWithDelegate:
_queue
_invalidated
_trackedHandle
_paymentService
_currentCarKeyPass
_currentFunction
_currentFunctionStatus
_delegate
T@"<PKIntentHandlerDelegate>",R,W,N,V_delegate
organizationName
notANumber
_openPeerPaymentPassActivity
initWithSpokenPhrase:
initWithNickname:number:accountType:organizationName:balance:secondaryBalance:
arrayWithObjects:count:
setAccounts:
associatedPassUniqueID
initWithActivityType:
setEligibleForHandoff:
dictionaryWithObjects:forKeys:count:
setUserInfo:
handleSearchForAccounts:completion:
confirmSearchForAccounts:completion:
resolveAccountNicknameForSearchForAccounts:withCompletion:
resolveAccountTypeForSearchForAccounts:withCompletion:
resolveOrganizationNameForSearchForAccounts:withCompletion:
resolveRequestedBalanceTypeForSearchForAccounts:withCompletion:
setPersonResolutionResult:
setIsPersonWithNoHandle:
_isPersonWithNoHandle
_personResolutionResult
T@"INPersonResolutionResult",&,N,V_personResolutionResult
TB,N,V_isPersonWithNoHandle
addListenerID:capabilities:
blockUntilConnected
_setBlocksConnectionAtResume:
sharedService
initWithPeerPaymentWebService:
setDelegate:
_forceSuspended
_forceResumed
isEqualToNumber:
initWithAmount:currency:exponent:
_siriMatchResult:
customIdentifier
siriMatches
_contactsForPersons:
_personForDictatedPhoneNumberOrEmail:
firstObject
_personsForHandlesOnContactPreferringMostRecentlyUsed:
disambiguationWithPeopleToDisambiguate:
_personsForContactsUsingMostRecentlyUsedHandle:
sendToUserFeatureDescriptor
minimumAmount
maximumAmount
compare:
contactIdentifier
safelyAddObject:
copy
predicateForContactsWithIdentifiers:
unifiedContactsMatchingPredicate:keysToFetch:error:
_personForContactUsingMostRecentlyUsedHandle:
_allHandlesForContact:
_mostRecentlyUsedHandle:
removeObject:
identifier
_personForContact:handle:otherAliases:customIdentifier:
initWithCapacity:
phoneNumbers
stringValue
initWithValue:type:label:
emailAddresses
removeObjectAtIndex:
initWithValue:type:
nameComponents
pkFullyQualifiedName
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:aliases:suggestionType:
formatCounterpartHandle:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
underlyingMessage
memo
compositionWithMSMessage:appExtensionIdentifier:
initWithString:
compositionByAppendingText:
_sendComposition:toRecipient:
connectToIMDaemonController
sharedRegistry
chatWithHandle:
join
initWithChat:
refreshServiceForSending
messagesFromComposition:
iMessageService
sendMessage:onService:newComposition:
peerPaymentPass
registrationStatusWithCompletion:
_canonicalizedMessagesHandleForContactHandle:
setObject:forKeyedSubscript:
allKeys
hasPrefix:
_appearsToBePhoneNumber
_appearsToBeEmail
sharedPreferences
languageCode
localeWithLocaleIdentifier:
pk_preferredLocale
presentationSceneIdentifierForPeerPaymentController:
initWithDelegate:intentQueue:
contactStore
setContactStore:
registrationStatus
setRegistrationStatus:
accountResolution
setAccountResolution:
hasAccountResolution
setHasAccountResolution:
_hasAccountResolution
_peerPaymentService
_peerPaymentController
_intentQueue
_contactStore
_registrationStatus
_accountResolution
T@"CNContactStore",&,N,V_contactStore
TQ,N,V_registrationStatus
TQ,N,V_accountResolution
TB,N,V_hasAccountResolution
T@"PKPeerPaymentService",R,N,V_peerPaymentService
T@"PKPeerPaymentController",R,N,V_peerPaymentController
T@"NSObject<OS_dispatch_queue>",R,N,V_intentQueue
signals
successWithResolvedCarSignalOptions:
handleActivateCarSignal:completion:
confirmActivateCarSignal:completion:
resolveCarNameForActivateCarSignal:withCompletion:
resolveSignalsForActivateCarSignal:withCompletion:
objectForKey:
setObject:forKey:
removeObjectForKey:
handlerForIntent:
transactionWillBeginForIntentIdentifier:
transactionDidCompleteForIntentIdentifier:
intentHandlerCache
setIntentHandlerCache:
setIntentQueue:
_intentHandlerCache
T@"NSMutableDictionary",&,N,V_intentHandlerCache
T@"NSObject<OS_dispatch_queue>",&,N,V_intentQueue
v16@?0@"INRequestPaymentIntentResponse"8
v16@?0@"INRequestPaymentPayerResolutionResult"8
v24@?0Q8Q16
v8@?0
v24@?0B8B12B16B20
v16@?0@"INRequestPaymentCurrencyAmountResolutionResult"8
v16@?0@"INStringResolutionResult"8
v32@?0Q8@"PKPeerPaymentRecipient"16@"NSError"24
v28@?0B8@"PKPeerPaymentRequestToken"12@"NSError"20
lock
unlock
v12@?0B8
v16@?0@"INSendPaymentIntentResponse"8
v28@?0B8@"INSendPaymentIntentResponse"12@"INSendPaymentPayeeResolutionResult"20
v16@?0@"INSendPaymentPayeeResolutionResult"8
v16@?0@"INSendPaymentCurrencyAmountResolutionResult"8
v20@?0B8@"INSendPaymentIntentResponse"12
v24@?0@"INSendPaymentIntentResponse"8@"NSError"16
v28@?0B8@"PKPeerPaymentPerformResponse"12@"NSError"20
v28@?0B8@"PKPeerPaymentQuote"12@"NSError"20
RecipientLookUp
Quote
PerformQuote
com.apple.passkit.intents.session
B32@?0@"PKSecureElementPass"8Q16^B24
SELF != ''
@"INSpeakableString"16@?0@"PKSecureElementPass"8
v16@?0@"NSSet"8
v16@?0@"INSearchForAccountsIntentResponse"8
PassKitIntentExtension
v16@?0Q8
com.apple.PassKit.IntentRouter
PKGetCarLockStatusIntentHandler
INGetCarLockStatusIntentHandling
NSObject
PKRequestPaymentIntentHandler
INRequestPaymentIntentHandling
PKSetCarLockStatusIntentHandler
INSetCarLockStatusIntentHandling
PKSendPaymentIntentHandler
INSendPaymentIntentHandling
PKBaseCarCommandHandler
PKSearchForAccountsIntentHandler
INSearchForAccountsIntentHandling
PKSiriMatchesPersonResolutionResult
PKPeerPaymentIntentHandler
PKPeerPaymentControllerDelegate
PKActivateCarSignalIntentHandler
INActivateCarSignalIntentHandling
IntentRouter
PKIntentHandlerDelegate
INIntentHandlerProvidingPrivate
INIntentHandlerProviding
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"INGetCarLockStatusIntent"16@?<v@?@"INGetCarLockStatusIntentResponse">24
v32@0:8@"INGetCarLockStatusIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INRequestPaymentIntentResponse">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INPersonResolutionResult">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INRequestPaymentPayerResolutionResult">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INCurrencyAmountResolutionResult">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INRequestPaymentCurrencyAmountResolutionResult">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INStringResolutionResult">24
@24@0:8Q16
v40@0:8@16@24@?32
@24@0:8@16
@56@0:8@16@24@32@40@48
v24@0:8@16
v16@0:8
@"PKPeerPaymentRecipient"
@"INRequestPaymentIntentResponse"
v32@0:8@"INSetCarLockStatusIntent"16@?<v@?@"INSetCarLockStatusIntentResponse">24
v32@0:8@"INSetCarLockStatusIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@"INSetCarLockStatusIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
B40@0:8q16q24q32
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INSendPaymentIntentResponse">24
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INPersonResolutionResult">24
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INSendPaymentPayeeResolutionResult">24
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INCurrencyAmountResolutionResult">24
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INSendPaymentCurrencyAmountResolutionResult">24
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INStringResolutionResult">24
v40@0:8Q16@24@?32
@48@0:8@16@24@32q40
@"PKPeerPaymentQuote"
@"INSendPaymentPayeeResolutionResult"
@"INSendPaymentIntentResponse"
B40@0:8@16@24@?32
B32@0:8@16@24
q32@0:8@16@24
v32@0:8q16@?24
@"NSObject<OS_dispatch_queue>"
@"PKPaymentSessionHandle"
@"PKPaymentService"
@"PKSecureElementPass"
@"NSNumber"
@"<PKIntentHandlerDelegate>"
v32@0:8@"INSearchForAccountsIntent"16@?<v@?@"INSearchForAccountsIntentResponse">24
v32@0:8@"INSearchForAccountsIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForAccountsIntent"16@?<v@?@"INAccountTypeResolutionResult">24
v32@0:8@"INSearchForAccountsIntent"16@?<v@?@"INBalanceTypeResolutionResult">24
v20@0:8B16
@"INPersonResolutionResult"
@"NSString"24@0:8@"PKPeerPaymentController"16
@32@0:8@16@24
@48@0:8@16@24@32@40
v32@0:8@16@24
v24@0:8@?16
v24@0:8Q16
@"PKPeerPaymentService"
@"PKPeerPaymentController"
@"CNContactStore"
v32@0:8@"INActivateCarSignalIntent"16@?<v@?@"INActivateCarSignalIntentResponse">24
v32@0:8@"INActivateCarSignalIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INActivateCarSignalIntent"16@?<v@?@"INCarSignalOptionsResolutionResult">24
v24@0:8@"INIntent"16
@24@0:8@"INIntent"16
v24@0:8@"NSString"16
@"NSMutableDictionary"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.PassKit.PassKitIntentsExtension</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.appleidauthentication.defaultaccess</key>
<true/>
<key>com.apple.asd.allow</key>
<true/>
<key>com.apple.asd.client</key>
<string>7411143053</string>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.internal.seserviced.all.endpoints.and.cas</key>
<true/>
<key>com.apple.internal.seserviced.ptattestation</key>
<true/>
<key>com.apple.nfcd.hwmanager</key>
<true/>
<key>com.apple.nfcd.radio.powertoggle</key>
<true/>
<key>com.apple.nfcd.session.ecommerce</key>
<true/>
<key>com.apple.nfcd.session.fieldOperations</key>
<true/>
<key>com.apple.nfcd.session.peerpayment</key>
<true/>
<key>com.apple.nfcd.session.reader.internal</key>
<true/>
<key>com.apple.nfcd.session.se</key>
<true/>
<key>com.apple.nfcd.session.trust</key>
<true/>
<key>com.apple.nfcd.singleUser</key>
<true/>
<key>com.apple.payment.all-access</key>
<true/>
<key>com.apple.peerpayment.all-access</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
<string>UniqueChipID</string>
<string>SerialNumber</string>
</array>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>bundleID</string>
<key>value</key>
<string>com.apple.Passbook</string>
</dict>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.ids.phone-number-authentication</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.data-detection-access</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.imcore.spi.database-access</key>
<true/>
<key>com.apple.private.in-app-payments</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/mobile/Library/SMS/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Caches/PassKit/</string>
<string>/Library/Caches/com.apple.Passbook/</string>
<string>/Library/Preferences/com.apple.stockholm.plist</string>
<string>/Library/Passes/VASCache/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.seserviced.session</string>
<string>com.apple.NPKCompanionAgent.Server</string>
<string>com.apple.asd.scoring</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.passd.payment-continuity</string>
<string>com.apple.nfcd.hwmanager</string>
<string>com.apple.passd.assertions</string>
<string>com.apple.passd.payment</string>
<string>com.apple.passd.peer-payment</string>
<string>com.apple.passd.in-app-payment</string>
<string>com.apple.seld.tsmmanager</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.idsremoteurlconnectionagent.embedded.auth</string>
<string>com.apple.imdpersistence.IMDPersistenceAgent</string>
<string>com.apple.siri.vocabularyupdates</string>
<string>com.apple.symptom_diagnostics</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.MobileSMS</string>
</array>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.seld.tsmmanager</key>
<true/>
<key>com.apple.seserviced.key</key>
<true/>
<key>com.apple.seserviced.kmlXpcService</key>
<true/>
<key>com.apple.seserviced.session.dck</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
</dict>
</plist>
PKGetCarLockStatusIntentHandler: Resolving car name.
PKGetCarLockStatusIntentHandler: Confirming if intent supported.
PKSetCarLockStatusIntentHandler: No CarKey.
PKSetCarLockStatusIntentHandler: Car not connected.
PKGetCarLockStatusIntentHandler: Car doesn't support locking functionality.
PKGetCarLockStatusIntentHandler: Car supports locking functionality.
PKGetCarLockStatusIntentHandler: Handling intent.
PKGetCarLockStatusIntentHandler: Unable to retrieve lock status of car.
PKGetCarLockStatusIntentHandler: Successfully retrieved lock status of car.
Received call to %{public}@ with intent %@
Received handleRequestPayment: for an intent without a stored peer payment request recipient
Received call to %@ with intent %@
Returning currency unsupported response %@
Returning amount below minimum response %@
Returning amount above maximum response %@
Returning failure response for generic unsupported amount. Response: %@
Intent confirmation successful. Returning ready response: %@
Calling %{public}@ completion with confirmation of inferred amount currency, %@.
Calling %{public}@ completion with needs value because we could not infer currency.
Do not have a sending address to use for identifyRecipient, fast forwarding to return continue in app intent response.
PKSetCarLockStatusIntentHandler; Resolving car name.
PKSetCarLockStatusIntentHandler: Resolving locking action.
PKSetCarLockStatusIntentHandler: Handler will %@ the car.
PKSetCarLockStatusIntentHandler: user to provide value for lock/unlock
PKSetCarLockStatusIntentHandler: Confirming if intent supported.
PKSetCarLockStatusIntentHandler: No car connected.
PKSetCarLockStatusIntentHandler: Car doesn't support locking functionality.
PKSetCarLockStatusIntentHandler: Car supports locking functionality.
PKSetCarLockStatusIntentHandler: Handling intent.
PKSetCarLockStatusIntentHandler: Unable to process intent because lock status was not specified. Should've been specified by this point.
PKSetCarLockStatusIntentHandler: Successfully set lock state of car.
PKSetCarLockStatusIntentHandler: Unable to send action to car.
Calling %{public}@ completion with preDeterminedIntentResponse %@
Calling %{public}@ completion with invalid registration status result %@
Calling %{public}@ completion with invalid account resolution result %@
Calling %{public}@ completion with success %@, intentResponse %@
Calling %{public}@ completion with fast forward response %@
Calling %{public}@ completion with not required result %@ due to registration status
Calling %{public}@ completion with not required result %@ due to account resolution status
Intent does not include a note.
Intent included note "%@", which was capitalized to "%@".
Calling %{public}@ completion with result %@
Calling %{public}@ completion with success %@, payeeResolutionResult %@
Calling %{public}@ completion with currency unsupported response
Calling %{public}@ completion with amount below minimum response
Calling %{public}@ completion with amount above maximum response
Calling %{public}@ completion with generic unsupported response
Calling %{public}@ completion with success for currency amount: %@
Calling %{public}@ completion with needs value.
Performing send payment intent operations %@
Cannot perform a quote without a stored peer payment quote
Could not fetch a valid quote.
Could not fetch a valid recipient.
Received successful response from performQuote, sending payment message
Received failure response from performQuote, returning error intent response
Received successful quote response.
Created payment record %@ from quote %@
Quote was not succesful, creating intent response from errror: %@
Resolved handle: %@ for person: %@
Recipient has a valid registration status.
Recipient lookup returned status: %@ error: %@
Recipient lookup returned status: %@ but no error
Calling %{public}@ completion with not required response
Calling %{public}@ completion with no handle result %@
Not checking payee elibility status for result that does not include a single resolved person.
Constructing PKPeerPaymentMessage
Could not construct peer payment message. Recipient: %@, currency: %@, amount: %@, performResponse: %@
PKBaseCarCommandHandler: Spoken Phrase: %@
PKBaseCarCommandHandler: Getting a generic request for carName. Returning all carKeyPasses
PKBaseCarCommandHandler: Found %lu exact match(es).
PKBaseCarCommandHandler: Can't find a car that match the spoken phrase, fail later on.
PKBaseCarCommandHandler: Matched phrase %@ to car (%@).
PKBaseCarCommandHandler: Multiple cars matched phrase %@. Disambiguate.
PKBaseCarCommandHandler: Disambiguating car names: %@.
PKBaseCarCommandHandler: No car was specified. Either we have no cars stored, or this is an error and we failed to set the identifier.
PKBaseCarCommandHandler: No supported functions matching %@.
Info: Base handler for isFunction:inDesiredState:currentStatus: was called. Either we have a simple car function, or we failed to handle a complex car function
PKBaseCarCommandHandler: No car was specified, or we unable to retrieve the function and function status. Either we have no cars stored, or this is an error and we failed to set the identifier.
PKBaseCarCommandHandler: No car was specified, or we were unable to retrieve the function and function status. Either we have no cars stored, or this is an error and we failed to set the identifier.
PKBaseCarCommandHandler: Requesting to set function (%@) to state (%li). Current status: (%li).
PKBaseCarCommandHandler: Function all ready in desired state.
PKBaseCarCommandHandler: Not NearField linkable or we're missing vital information, cannot send action.
Received call to handleSearchForAccounts: with intent %@
Calling handleSearchForAccounts: completion with failureAccountNotFound for non-empty organizationName %@
Calling handleSearchForAccounts: completion with invalid registration status result %@
Calling handleSearchForAccounts: completion with invalid account resolution result %@
Calling handleSearchForAccounts: completion with success
Calling handleSearchForAccounts: completion with failure for invalid PKCurrencyAmount %@
Connecting to IMDaemonController
Connected to IMDaemonController
User resolved disambiguation of aliases by selecting person: %@
Found %lu matching contacts
Resolved person from dictated phone number or email: %@
Resolved contact: %@
Resolved alias: %@
Contact has no phone numbers or email addresses
Asking user to disambiguate among %lu aliases for contact
Asking user to disambiguate among %lu contacts
Error fetching contacts: %@
Found %lu handles for contact
User has most recently interacted with handle: %@
User has not recently interacted with any of the handles
Contact %@ has no phone numbers or email addresses, using an empty person handle
Sending composition: %@
Could not construct composition for peer payment message: %@
Sending composition %@ to recipient %@
Resolved recipient IMHandle: %@
Sending IMMessage: %@
Could not create IMMessages with composition: %@ conversation %@
Could not resolve IMHandle for recipient %@
Found recent chats with %lu handles for contact: %@
Chat with %@ was on an iMessage thread
Chat with %@ was NOT on an iMessage thread
Using Siri language code: %@
Siri language code could not be determined, using device locale instead.
PKActivateCarSignalIntentHandler: Resolving car name.
PKSetCarLockStatusIntentHandler: Resolving signals to activate.
PKActivateCarSignalIntentHandler: Asking user to provide value for signal to trigger.
PKActivateCarSignalIntentHandler: Confirming if intent supported.
PKActivateCarSignalIntentHandler: Visible signals aren't supported yet.
PKActivateCarSignalIntentHandler: No CarKey.
PKActivateCarSignalIntentHandler: Car not connected.
PKActivateCarSignalIntentHandler: Car doesn't support alarm functionality.
PKActivateCarSignalIntentHandler: Car supports alarm functionality.
PKActivateCarSignalIntentHandler: Handling intent.
PKActivateCarSignalIntentHandler: Successfully started car alarm.
PKActivateCarSignalIntentHandler: Unable to send action to car.
No handler for intent of type %{public}@
v16@?0@"INRequestPaymentIntentResponse"8
v16@?0@"INRequestPaymentPayerResolutionResult"8
v24@?0Q8Q16
v8@?0
v24@?0B8B12B16B20
v16@?0@"INRequestPaymentCurrencyAmountResolutionResult"8
v16@?0@"INStringResolutionResult"8
v32@?0Q8@"PKPeerPaymentRecipient"16@"NSError"24
v28@?0B8@"PKPeerPaymentRequestToken"12@"NSError"20
lock
unlock
v12@?0B8
v16@?0@"INSendPaymentIntentResponse"8
v28@?0B8@"INSendPaymentIntentResponse"12@"INSendPaymentPayeeResolutionResult"20
v16@?0@"INSendPaymentPayeeResolutionResult"8
v16@?0@"INSendPaymentCurrencyAmountResolutionResult"8
v20@?0B8@"INSendPaymentIntentResponse"12
v24@?0@"INSendPaymentIntentResponse"8@"NSError"16
v28@?0B8@"PKPeerPaymentPerformResponse"12@"NSError"20
v28@?0B8@"PKPeerPaymentQuote"12@"NSError"20
RecipientLookUp
Quote
PerformQuote
com.apple.passkit.intents.session
B32@?0@"PKSecureElementPass"8Q16^B24
SELF != ''
@"INSpeakableString"16@?0@"PKSecureElementPass"8
v16@?0@"NSSet"8
v16@?0@"INSearchForAccountsIntentResponse"8
PassKitIntentExtension
v16@?0Q8
com.apple.PassKit.IntentRouter
PKGetCarLockStatusIntentHandler
INGetCarLockStatusIntentHandling
NSObject
PKRequestPaymentIntentHandler
INRequestPaymentIntentHandling
PKSetCarLockStatusIntentHandler
INSetCarLockStatusIntentHandling
PKSendPaymentIntentHandler
INSendPaymentIntentHandling
PKBaseCarCommandHandler
PKSearchForAccountsIntentHandler
INSearchForAccountsIntentHandling
PKSiriMatchesPersonResolutionResult
PKPeerPaymentIntentHandler
PKPeerPaymentControllerDelegate
PKActivateCarSignalIntentHandler
INActivateCarSignalIntentHandling
IntentRouter
PKIntentHandlerDelegate
INIntentHandlerProvidingPrivate
INIntentHandlerProviding
quoteWithAmount:source:completion:
setSenderAddress:
minimumAmount
setDelegate:
initWithNickname:number:accountType:organizationName:balance:secondaryBalance:
vocabularyIdentifier
countByEnumeratingWithState:objects:count:
totalReceiveAmountCurrency
code
siriMatches
phoneNumbers
identifier
allObjects
disambiguationWithStringsToDisambiguate:
passWithUniqueID:
initWithValue:type:label:
safelyAddObject:
messagesFromComposition:
count
chatWithHandle:
setRequestToken:
value
iMessageService
totalReceiveAmount
allKeys
setCurrency:
initWithValue:type:
disambiguationWithPeopleToDisambiguate:
organizationName
resolvedValue
memo
copy
predicateWithFormat:
hasPrefix:
setRecipientAddress:
caseInsensitiveCompare:
totalFeesCurrency
signals
setAmount:
isEqualToString:
personHandle
dictionaryWithObjects:forKeys:count:
predicateForContactsWithIdentifiers:
addObject:
initWithType:
objectForKeyedSubscript:
maximumAmount
containsString:
isEqualToNumber:
initWithCode:userActivity:
userInfo
setAccounts:
totalFees
objectForKey:
performQuote:completion:
carName
_appearsToBePhoneNumber
initWithString:
sharedService
initWithChat:
addListenerID:capabilities:
contactIdentifier
lowercaseString
updateWithPeerPaymentPerformResponse:
setPaymentRecord:
pk_uppercaseFirstStringForLocale:
boolValue
successWithResolvedValue:
sharedRegistry
initWithSpokenPhrase:
setObject:forKeyedSubscript:
account
reset
numberWithInt:
initWithCapacity:
pk_setByApplyingBlock:
successWithResolvedString:
locked
unsupportedWithReason:
senderPhoneOrEmail
formatCounterpartHandle:
blockUntilConnected
isCarKeyPass
removeObjectForKey:
sharedPreferences
setObject:forKey:
initWithPersonResolutionResult:
note
customIdentifier
pk_preferredLocale
localizedDescription
peerPaymentPass
initWithAmount:currencyCode:
unsupportedForReason:
confirmationRequiredWithCurrencyAmountToConfirm:
sendToUserFeatureDescriptor
associatedPassUniqueID
invalidateSession
formalRequestTokenForAmount:source:completion:
successWithResolvedPerson:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:aliases:suggestionType:
removeObjectAtIndex:
_setBlocksConnectionAtResume:
localeWithLocaleIdentifier:
sharedInstance
notRequired
currentBalance
compositionWithMSMessage:appExtensionIdentifier:
initWithAmount:currency:exponent:
firstObject
pk_objectsPassingTest:
setMemo:
unsupported
_forceSuspended
arrayWithObjects:count:
successWithResolvedCurrencyAmount:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
removeObject:
compositionByAppendingText:
notANumber
currencyCode
setWithArray:
successWithResolvedCarSignalOptions:
initWithActivityType:
uniqueID
sendMessage:onService:newComposition:
setLocked:
length
_forceResumed
filteredArrayUsingPredicate:
applePayPaymentMethod
payer
registrationStatusWithCompletion:
initWithPeerPaymentWebService:
setUserInfo:
languageCode
needsValue
currencyAmount
pkFullyQualifiedName
unifiedContactsMatchingPredicate:keysToFetch:error:
stringValue
componentsSeparatedByCharactersInSet:
emailAddresses
anyObject
refreshServiceForSending
payee
selectMode:
integerValue
nameComponents
whitespaceCharacterSet
setSource:
join
initWithPayee:payer:currencyAmount:paymentMethod:note:status:feeAmount:
currency
underlyingMessage
_appearsToBeEmail
compare:
setEligibleForHandoff:
identifyRecipientWithAddress:senderAddress:completion:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
passesOfType:
spokenPhrase
secureElementPass
domain
amount
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handleGetCarLockStatus:completion:
confirmGetCarLockStatus:completion:
resolveCarNameForGetCarLockStatus:withCompletion:
handleRequestPayment:completion:
confirmRequestPayment:completion:
resolvePayerForRequestPayment:withCompletion:
resolvePayerForRequestPayment:completion:
resolveCurrencyAmountForRequestPayment:withCompletion:
resolveCurrencyAmountForRequestPayment:completion:
resolveNoteForRequestPayment:withCompletion:
_responseForInvalidRegistrationStatus:
_responseForInvalidAccountResolution:
_queue_identifyRecipientWithIntent:peerPaymentController:completion:
_queue_fetchRequestTokenForIntent:peerPaymentController:completion:
_intentResponseFromWebServiceError:
_intentResponseForGenericFailure
_peerPaymentMessageForRequestWithCurrencyAmount:requestToken:recipientHandle:senderHandle:memo:
resolvedRecipient
setResolvedRecipient:
preDeterminedIntentResponse
setPreDeterminedIntentResponse:
.cxx_destruct
_resolvedRecipient
_preDeterminedIntentResponse
T@"PKPeerPaymentRecipient",&,N,V_resolvedRecipient
T@"INRequestPaymentIntentResponse",&,N,V_preDeterminedIntentResponse
handleSetCarLockStatus:completion:
confirmSetCarLockStatus:completion:
resolveLockedForSetCarLockStatus:withCompletion:
resolveCarNameForSetCarLockStatus:withCompletion:
isFunction:inDesiredState:currentStatus:
handleSendPayment:completion:
confirmSendPayment:completion:
resolvePayeeForSendPayment:withCompletion:
resolvePayeeForSendPayment:completion:
resolveCurrencyAmountForSendPayment:withCompletion:
resolveCurrencyAmountForSendPayment:completion:
resolveNoteForSendPayment:withCompletion:
_queue_performOperationsIfNecessary:intent:completion:
_queue_performQuoteForIntent:peerPaymentController:completion:
_queue_fetchQuoteForIntent:peerPaymentController:completion:
_peerPaymentMessageForAuthorizedPaymentWithQuote:performResponse:recipientHandle:senderHandle:memo:
_paymentRecordFromQuote:payee:note:status:
pendingQuote
setPendingQuote:
preDeterminedPayeeResolutionResult
setPreDeterminedPayeeResolutionResult:
_pendingQuote
_preDeterminedPayeeResolutionResult
T@"PKPeerPaymentQuote",&,N,V_pendingQuote
T@"INSendPaymentPayeeResolutionResult",&,N,V_preDeterminedPayeeResolutionResult
T@"INSendPaymentIntentResponse",&,N,V_preDeterminedIntentResponse
init
dealloc
initWithDelegate:
invalidate
_carKeyPassForUniqueIdentifier:
_secureElementPassCorrespondingToPhrase:completion:
_findExactMatchOnSpokenPhraseForCarPass:spokenPhrase:completion:
_carKeyPass:correspondsToAllSpokenPhrase:
resolveCarNameForSpokenString:withCompletion:
prepareCarWithResolvedCarName:toHandleDesiredFunctions:
handleGetCurrentFunctionState
handleSetCurrentFunctionToDesiredStatus:withCompletion:
delegate
_queue
_invalidated
_trackedHandle
_paymentService
_currentCarKeyPass
_currentFunction
_currentFunctionStatus
_delegate
T@"<PKIntentHandlerDelegate>",R,W,N,V_delegate
handleSearchForAccounts:completion:
confirmSearchForAccounts:completion:
resolveAccountNicknameForSearchForAccounts:withCompletion:
resolveAccountTypeForSearchForAccounts:withCompletion:
resolveOrganizationNameForSearchForAccounts:withCompletion:
resolveRequestedBalanceTypeForSearchForAccounts:withCompletion:
_openPeerPaymentPassActivity
personResolutionResult
setPersonResolutionResult:
isPersonWithNoHandle
setIsPersonWithNoHandle:
_isPersonWithNoHandle
_personResolutionResult
T@"INPersonResolutionResult",&,N,V_personResolutionResult
TB,N,V_isPersonWithNoHandle
connectToIMDaemonController
presentationSceneIdentifierForPeerPaymentController:
initWithDelegate:intentQueue:
pkCurrencyAmountFromIntentAmount:
inCurrencyAmountFromPKAmount:
resolveSiriMatchesForPerson:
_siriMatchResult:
validateCurrencyAmount:completion:
_contactsForPersons:
_personsForContactsUsingMostRecentlyUsedHandle:
_personsForHandlesOnContactPreferringMostRecentlyUsed:
_allHandlesForContact:
_personForContactUsingMostRecentlyUsedHandle:
_personForContact:handle:otherAliases:customIdentifier:
_personForDictatedPhoneNumberOrEmail:
sendMessage:toRecipient:
_sendComposition:toRecipient:
peerPaymentRegistrationStatusWithCompletion:
_mostRecentlyUsedHandle:
_canonicalizedMessagesHandleForContactHandle:
siriLocale
peerPaymentService
peerPaymentController
intentQueue
contactStore
setContactStore:
registrationStatus
setRegistrationStatus:
accountResolution
setAccountResolution:
hasAccountResolution
setHasAccountResolution:
_hasAccountResolution
_peerPaymentService
_peerPaymentController
_intentQueue
_contactStore
_registrationStatus
_accountResolution
T@"CNContactStore",&,N,V_contactStore
TQ,N,V_registrationStatus
TQ,N,V_accountResolution
TB,N,V_hasAccountResolution
T@"PKPeerPaymentService",R,N,V_peerPaymentService
T@"PKPeerPaymentController",R,N,V_peerPaymentController
T@"NSObject<OS_dispatch_queue>",R,N,V_intentQueue
handleActivateCarSignal:completion:
confirmActivateCarSignal:completion:
resolveCarNameForActivateCarSignal:withCompletion:
resolveSignalsForActivateCarSignal:withCompletion:
pk_didFinishInteractionForIntent:
handlerForIntent:
transactionWillBeginForIntentIdentifier:
transactionDidCompleteForIntentIdentifier:
intentHandlerCache
setIntentHandlerCache:
setIntentQueue:
_intentHandlerCache
T@"NSMutableDictionary",&,N,V_intentHandlerCache
T@"NSObject<OS_dispatch_queue>",&,N,V_intentQueue
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"INGetCarLockStatusIntent"16@?<v@?@"INGetCarLockStatusIntentResponse">24
v32@0:8@"INGetCarLockStatusIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INRequestPaymentIntentResponse">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INPersonResolutionResult">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INRequestPaymentPayerResolutionResult">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INCurrencyAmountResolutionResult">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INRequestPaymentCurrencyAmountResolutionResult">24
v32@0:8@"INRequestPaymentIntent"16@?<v@?@"INStringResolutionResult">24
@24@0:8Q16
v40@0:8@16@24@?32
@24@0:8@16
@56@0:8@16@24@32@40@48
v24@0:8@16
v16@0:8
@"PKPeerPaymentRecipient"
@"INRequestPaymentIntentResponse"
v32@0:8@"INSetCarLockStatusIntent"16@?<v@?@"INSetCarLockStatusIntentResponse">24
v32@0:8@"INSetCarLockStatusIntent"16@?<v@?@"INBooleanResolutionResult">24
v32@0:8@"INSetCarLockStatusIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
B40@0:8q16q24q32
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INSendPaymentIntentResponse">24
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INPersonResolutionResult">24
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INSendPaymentPayeeResolutionResult">24
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INCurrencyAmountResolutionResult">24
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INSendPaymentCurrencyAmountResolutionResult">24
v32@0:8@"INSendPaymentIntent"16@?<v@?@"INStringResolutionResult">24
v40@0:8Q16@24@?32
@48@0:8@16@24@32q40
@"PKPeerPaymentQuote"
@"INSendPaymentPayeeResolutionResult"
@"INSendPaymentIntentResponse"
B40@0:8@16@24@?32
B32@0:8@16@24
q32@0:8@16@24
v32@0:8q16@?24
@"NSObject<OS_dispatch_queue>"
@"PKPaymentSessionHandle"
@"PKPaymentService"
@"PKSecureElementPass"
@"NSNumber"
@"<PKIntentHandlerDelegate>"
v32@0:8@"INSearchForAccountsIntent"16@?<v@?@"INSearchForAccountsIntentResponse">24
v32@0:8@"INSearchForAccountsIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForAccountsIntent"16@?<v@?@"INAccountTypeResolutionResult">24
v32@0:8@"INSearchForAccountsIntent"16@?<v@?@"INBalanceTypeResolutionResult">24
v20@0:8B16
@"INPersonResolutionResult"
@"NSString"24@0:8@"PKPeerPaymentController"16
@32@0:8@16@24
@48@0:8@16@24@32@40
v32@0:8@16@24
v24@0:8@?16
v24@0:8Q16
@"PKPeerPaymentService"
@"PKPeerPaymentController"
@"CNContactStore"
v32@0:8@"INActivateCarSignalIntent"16@?<v@?@"INActivateCarSignalIntentResponse">24
v32@0:8@"INActivateCarSignalIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INActivateCarSignalIntent"16@?<v@?@"INCarSignalOptionsResolutionResult">24
v24@0:8@"INIntent"16
@24@0:8@"INIntent"16
v24@0:8@"NSString"16
@"NSMutableDictionary"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.PassKit.PassKitIntentsExtension</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.appleidauthentication.defaultaccess</key>
<true/>
<key>com.apple.asd.allow</key>
<true/>
<key>com.apple.asd.client</key>
<string>7411143053</string>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.internal.seserviced.all.endpoints.and.cas</key>
<true/>
<key>com.apple.internal.seserviced.ptattestation</key>
<true/>
<key>com.apple.nfcd.hwmanager</key>
<true/>
<key>com.apple.nfcd.radio.powertoggle</key>
<true/>
<key>com.apple.nfcd.session.ecommerce</key>
<true/>
<key>com.apple.nfcd.session.fieldOperations</key>
<true/>
<key>com.apple.nfcd.session.peerpayment</key>
<true/>
<key>com.apple.nfcd.session.reader.internal</key>
<true/>
<key>com.apple.nfcd.session.se</key>
<true/>
<key>com.apple.nfcd.session.trust</key>
<true/>
<key>com.apple.nfcd.singleUser</key>
<true/>
<key>com.apple.payment.all-access</key>
<true/>
<key>com.apple.peerpayment.all-access</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
<string>UniqueChipID</string>
<string>SerialNumber</string>
</array>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>bundleID</string>
<key>value</key>
<string>com.apple.Passbook</string>
</dict>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.ids.phone-number-authentication</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.data-detection-access</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.imcore.spi.database-access</key>
<true/>
<key>com.apple.private.in-app-payments</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/mobile/Library/SMS/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Caches/PassKit/</string>
<string>/Library/Caches/com.apple.Passbook/</string>
<string>/Library/Preferences/com.apple.stockholm.plist</string>
<string>/Library/Passes/VASCache/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.seserviced.session</string>
<string>com.apple.NPKCompanionAgent.Server</string>
<string>com.apple.asd.scoring</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.passd.payment-continuity</string>
<string>com.apple.nfcd.hwmanager</string>
<string>com.apple.passd.assertions</string>
<string>com.apple.passd.payment</string>
<string>com.apple.passd.peer-payment</string>
<string>com.apple.passd.in-app-payment</string>
<string>com.apple.seld.tsmmanager</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.idsremoteurlconnectionagent.embedded.auth</string>
<string>com.apple.imdpersistence.IMDPersistenceAgent</string>
<string>com.apple.siri.vocabularyupdates</string>
<string>com.apple.symptom_diagnostics</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.MobileSMS</string>
</array>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.seld.tsmmanager</key>
<true/>
<key>com.apple.seserviced.key</key>
<true/>
<key>com.apple.seserviced.kmlXpcService</key>
<true/>
<key>com.apple.seserviced.session.dck</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
</dict>
</plist>
