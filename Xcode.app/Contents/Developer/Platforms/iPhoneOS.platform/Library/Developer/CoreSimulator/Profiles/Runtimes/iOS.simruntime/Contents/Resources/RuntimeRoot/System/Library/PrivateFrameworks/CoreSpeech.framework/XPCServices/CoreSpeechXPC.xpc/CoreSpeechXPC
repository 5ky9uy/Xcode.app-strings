Trial
CSJarvisTriggerModeMonitor
CoreSpeechXPCProtocol
CoreSpeechXPCFakeModelMonitor
ServiceDelegate
NSXPCListenerDelegate
NSObject
CoreSpeechXPC
CSTrialAssetManager
CSEventMonitor
CSAssetController
CSEventMonitorDelegate
Utils
CSVoiceTriggerRTModel
NSSecureCoding
NSCoding
NSCopying
LanguageCode
CSLanguageCodeUpdateMonitor
RTModel
NSXPC
CSFirstUnlockMonitor
CSSpeechEndpointAssetMetaUpdateMonitor
CSAsset
CSVoiceTriggerAssetMetaUpdateMonitor
CSLanguageCodeUpdateMonitorImpl
CSLanguageCodeUpdateMonitorImplDarwin
getAssetTypeForNamespace:
getTrialIdsForAssetType:withCompletion:
init
sharedInstance
triggerModeStringDescription:
_startMonitoringWithQueue:
_stopMonitoring
setTriggerMode:
getTriggerMode
installedVoiceTriggerAssetForLanguageCode:completion:
fetchRemoteVoiceTriggerAssetForLanguageCode:completion:
voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:locale:endpointId:downloadedModels:preinstalledModels:completion:
voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:
voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:
interfaceWithProtocol:
arrayWithObjects:count:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
_registerForFakeAssetRollNotification
UTF8String
setShouldRollFakeModel:
start
stop
lastFakeModelUsedHash
setLastFakeModelUsedHash:
shouldRollFakeModel
queue
setQueue:
fakeAssetRollNotificationRegistrationToken
setFakeAssetRollNotificationRegistrationToken:
.cxx_destruct
_shouldRollFakeModel
_fakeAssetRollNotificationRegistrationToken
_lastFakeModelUsedHash
_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
Ti,N,V_fakeAssetRollNotificationRegistrationToken
T@"NSString",&,V_lastFakeModelUsedHash
TB,V_shouldRollFakeModel
dealloc
setExportedInterface:
xpcConnection:hasEntitlement:
invalidate
initWithFakeMonitor:
setExportedObject:
resume
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
fakeModelMonitor
setFakeModelMonitor:
_fakeModelMonitor
T@"CoreSpeechXPCFakeModelMonitor",&,N,V_fakeModelMonitor
serviceListener
setDelegate:
defaultManager
fileExistsAtPath:
errorWithDomain:code:userInfo:
stringByAppendingPathComponent:
dataWithContentsOfFile:
JSONObjectWithData:options:error:
array
countByEnumeratingWithState:objects:count:
assetForAssetType:resourcePath:configVersion:
hearstRTModelWithMajorVersion:minorVersion:locale:
addObject:
count
firstObject
objectAtIndexedSubscript:
modelHash
objectAtIndex:
accessoryModelTypeToString:
sharedPreferences
setHearstFirstPassModelVersion:
setHearstSecondPassModelVersion:
getSiriLanguageWithFallback:
fakeHearstModelPath
_handleFakeHearstModelRequest:majorVersion:minorVersion:downloadedModels:preinstalledModels:completion:
localizedDescription
rtModelWithAccessoryRTModelType:majorVersion:minorVersion:locale:
rtModelLocaleMapWithModelType:
getAccessoryFallbackLocalTable
selectFallbackModelForLocale:downloadedModels:preinstalledModels:rtLocaleMap:
isEqualToString:
_fetchVoiceTriggerInstalledAssetWithLanguage:completion:
voiceTriggerHearstRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:
logLanguageMismatchMetricWithJarvisSelectedLocale:jarvisTriggerMode:
jarvisRTModelLocaleMap
getAccessoryFallbackFamilyLocal:fromLocaleMap:
objectForKeyedSubscript:
modelLocale
sharedController
installedAssetOfType:language:completion:
getInstalledAssetofType:forLocale:completion:
voiceTriggerRemoraRTModelForVersion:minorVersion:locale:endpointId:downloadedModels:preinstalledModels:completion:
fakeAssetMonitor
setFakeAssetMonitor:
_fakeAssetMonitor
T@"CoreSpeechXPCFakeModelMonitor",&,N,V_fakeAssetMonitor
weakObjectsHashTable
removeObject:
enumerateObservers:
CSEventMonitorDidReceiveEvent:
type
addObserver:
removeObserver:
enumerateObserversInQueue:
notifyObserver:
_observers
getVoiceTriggerAssetTypeString
getEndpointAssetTypeString
getLanguageDetectorAssetTypeString
getAdBlockerAssetTypeString
getSpeakerRecognitionAssetTypeString
dictionary
dictionaryWithObjects:forKeys:count:
_cleanUpMobileAssetV1Directory
_isReadyToUse
installedAssetOfType:withLanguage:
_fetchRemoteAssetOfType:withLanguage:completion:
_assetQueryForAssetType:
returnTypes:
queryMetaDataSync
results
filteredAssetsForAssets:assetType:language:
queryParams
isLatestCompareTo:
sortedArrayUsingComparator:
state
getCSAssetOfType:
enumerateObjectsUsingBlock:
installedAssetOfType:withLanguage:completion:
numberWithUnsignedInteger:
initWithType:
stringWithFormat:
addKeyValuePair:with:
addKeyValuePairForQuery:assetType:
_installedAssetOfType:query:withLanguage:completion:
_fetchRemoteAssetOfType:withLanguage:query:completion:
_installedAssetOfType:withLanguage:
_installedAssetOfType:withLanguage:completion:
_findLatestInstalledAsset:
queryMetaData:
attributes
isFirstUnlocked
fetchRemoteMetaOfType:allowRetry:
_runAssetQuery:completion:
_downloadAssetCatalogForAssetType:complete:
_updateFromRemoteToLocalAssets:forAssetType:completion:
_defaultDownloadOptions
_isRetryRecommendedWithResult:
startCatalogDownload:options:then:
isCSAssetInstalled
isDownloading
cancelDownloadSync
canBePurged
path
purgeSync
observers
CSAssetController:didDownloadNewAssetForType:
_downloadAsset:withComplete:
setAllowsCellularAccess:
setCanUseLocalCacheServer:
setDiscretionary:
assetServerUrl
_startDownloadingAsset:progress:completion:
expectedTimeRemaining
totalWritten
totalExpected
attachProgressCallBack:
spaceCheck:
startDownload:then:
setObject:forKeyedSubscript:
getAssetTypeStringForType:
assetOfType:language:
allInstalledAssetsOfType:language:
assetOfType:language:completion:
assetOfType:language:compatibilityVersion:completion:
installedAssetOfType:language:
fetchRemoteMetaOfType:
addObserver:forAssetType:
removeObserver:forAssetType:
assetsMigrationQueue
setAssetsMigrationQueue:
csAssetsDictionary
setCsAssetsDictionary:
setObservers:
_assetsMigrationQueue
_csAssetsDictionary
T@"NSObject<OS_dispatch_queue>",&,N,V_assetsMigrationQueue
T@"NSDictionary",&,N,V_csAssetsDictionary
T@"NSMutableDictionary",&,N,V_observers
valueForKey:
containsObject:
supportPremiumAssets
objectForKey:
getVoiceTriggerAssetCurrentCompatibilityVersion
getEndpointAssetCurrentCompatibilityVersion
getLanguageDetectorCurrentCompatibilityVersion
getAdBlockerCurrentCompatibilityVersion
getSpeakerRecognitionCurrentCompatibilityVersion
filteredAssetsForFetchRemoteMetaDataForAssets:assetType:
containsValueForKey:
decodeObjectOfClass:forKey:
copy
initWithData:hash:locale:digest:signature:certificate:
encodeObject:forKey:
stringByAppendingString:
string
length
base64EncodedStringWithOptions:
substringToIndex:
appendFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
initWithHash:locale:
initWithData:hash:locale:
builtInRTModelDictionary
modelData
digest
signature
certificate
_modelData
_modelLocale
_modelHash
_digest
_signature
_certificate
T@"NSData",R,N,V_modelData
T@"NSString",R,N,V_modelLocale
T@"NSString",R,N,V_modelHash
T@"NSData",R,N,V_digest
T@"NSData",R,N,V_signature
T@"NSData",R,N,V_certificate
isDarwinOS
languageCodeDarwin
getSiriLanguageWithEndpointId:fallbackLanguage:
notifySiriLanguageCodeChanged:
createRTModelWithLocale:
unsignedIntValue
resourcePath
_sha1:
substringWithRange:
_sha256:
localeMapWithName:
remoraRTModelLocaleMap
hearstRTModelLocaleMap
bytes
stringWithCapacity:
dataWithLength:
mutableBytes
RTModelWithFallbackLanguage:
latestHearstRTModelForLocale:
remoraRTModelWithMajorVersion:minorVersion:locale:
valueForEntitlement:
_checkFirstUnlocked
_didReceiveFirstUnlock:
_notifyObserver:withUnlocked:
CSFirstUnlockMonitor:didReceiveFirstUnlock:
_firstUnlockNotified
_didReceiveFirstUnlockInQueue:
_notifyToken
_firstUnlocked
_didReceiveNewSpeechEndpointAssetMetaData
_notifyObserver:
CSSpeechEndpointAssetMetaUpdateMonitor:didReceiveNewSpeechEndpointAssetMetaData:
getLocalUrl
_compatibilityVersion
stringValue
appendString:
_version
_footprint
integerValue
isPremium
_didReceiveNewVoiceTriggerAssetMetaData
_asssetMetaUpdatedKey
CSVoiceTriggerAssetMetaUpdateMonitor:didReceiveNewVoiceTriggerAssetMetaData:
notifyNewVoiceTriggerAssetMetaDataUpdated
_notifyObserver:withLanguageCode:
CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:
_didReceiveLanguageCodeUpdate
setSiriLanguageCodeDarwin:
_didReceiveLanguageCodeUpdate:
_currentLanguageCode
Q24@0:8@16
v32@0:8Q16@?24
@16@0:8
@24@0:8q16
v24@0:8@16
v16@0:8
v24@0:8q16
q16@0:8
v32@0:8@16@?24
v80@0:8Q16Q24q32@40@48@56@64@?72
v64@0:8Q16Q24@32@40@48@?56
v40@0:8@16@24@?32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
v80@0:8Q16Q24q32@"NSString"40@"NSUUID"48@"NSArray"56@"NSArray"64@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">72
v64@0:8Q16Q24@"NSString"32@"NSArray"40@"NSArray"48@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSString"@"NSError">32
B16@0:8
v20@0:8B16
i16@0:8
v20@0:8i16
@"NSString"
@"NSObject<OS_dispatch_queue>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"CoreSpeechXPCFakeModelMonitor"
v32@0:8@16q24
@24@0:8@16
v64@0:8@16Q24Q32@40@48@?56
v72@0:8Q16Q24@32@40@48@56@?64
@32@0:8@16@24
@48@0:8@16@24@32@40
v40@0:8Q16@24@?32
v24@0:8@?16
@"NSHashTable"
@24@0:8Q16
@32@0:8Q16@24
v48@0:8Q16@24Q32@?40
v48@0:8Q16@24@32@?40
v24@0:8Q16
v28@0:8Q16B24
B24@0:8q16
v40@0:8@16Q24@?32
v40@0:8@16@?24@?32
v32@0:8@16Q24
@"NSDictionary"
@"NSMutableDictionary"
@32@0:8@16Q24
@40@0:8@16Q24@32
v32@0:8^@16Q24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@64@0:8@16@24@32@40@48@56
@40@0:8@16@24@32
@"NSData"
@48@0:8q16Q24Q32@40
@40@0:8Q16Q24@32
v28@0:8@16B24
r*16@0:8
v32@0:8@16@24
unknown
com.apple.corespeech.fakeasset.rolling
v8@?0
-[CoreSpeechXPCFakeModelMonitor _registerForFakeAssetRollNotification]_block_invoke
v12@?0i8
-[CoreSpeechXPCFakeModelMonitor _registerForFakeAssetRollNotification]
corespeech.xpc
-[CoreSpeechXPC installedVoiceTriggerAssetForLanguageCode:completion:]
-[CoreSpeechXPC fetchRemoteVoiceTriggerAssetForLanguageCode:completion:]
-[CoreSpeechXPC _handleFakeHearstModelRequest:majorVersion:minorVersion:downloadedModels:preinstalledModels:completion:]
fakeModel.json
en-US
fakeModel
-[CoreSpeechXPC voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:locale:endpointId:downloadedModels:preinstalledModels:completion:]
v40@?0@"CSVoiceTriggerRTModel"8@"CSVoiceTriggerRTModel"16@"NSString"24@"NSError"32
-[CoreSpeechXPC voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:locale:endpointId:downloadedModels:preinstalledModels:completion:]_block_invoke
v24@?0@"CSAsset"8@"NSError"16
-[CoreSpeechXPC voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]_block_invoke
v24@?0@"NSString"8@"NSError"16
-[CoreSpeechXPC voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]
de-AT
de-DE
de-CH
en-AU
en-CA
en-GB
en-SG
en-IE
en-IN
en-ZA
en-NZ
it-IT
it-CH
ja-JP
zh-CN
zh-TW
nb-NO
nl-BE
nl-NL
sv-SE
tr-TR
fi-FI
he-IL
es-ES
es-US
es-CL
es-MX
fr-FR
fr-BE
fr-CA
fr-CH
ko-KR
zh-HK
yue-CN
da-DK
ms-MY
pt-BR
ru-RU
th-TH
ar-AE
ar-SA
default
Remora
Hearst
-[CoreSpeechXPC _fetchVoiceTriggerInstalledAssetWithLanguage:completion:]_block_invoke
Serial CSEventMonitor queue
-[CSEventMonitor _startMonitoringWithQueue:]
CSEventMonitor.m
-[CSEventMonitor _stopMonitoring]
com.apple.MobileAsset.VoiceTriggerAssetsMac
-[CSAssetController init]
Serial CSAssetController queue
V1 Assets Clean-up queue
-[CSAssetController _cleanUpMobileAssetV1Directory]
-[CSAssetController assetOfType:language:]
-[CSAssetController allInstalledAssetsOfType:language:]
q24@?0@"MAAsset"8@"MAAsset"16
v32@?0@"MAAsset"8Q16^B24
-[CSAssetController assetOfType:language:completion:]
-[CSAssetController assetOfType:language:compatibilityVersion:completion:]
v24@?0@"MAAsset"8@"NSError"16
-[CSAssetController installedAssetOfType:language:]
-[CSAssetController installedAssetOfType:language:completion:]
-[CSAssetController _installedAssetOfType:withLanguage:]
-[CSAssetController _installedAssetOfType:query:withLanguage:completion:]_block_invoke
v16@?0q8
-[CSAssetController _findLatestInstalledAsset:]
-[CSAssetController _assetQueryForAssetType:]
-[CSAssetController _runAssetQuery:completion:]
-[CSAssetController _runAssetQuery:completion:]_block_invoke
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]_block_invoke
v20@?0@"NSError"8B16
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:query:completion:]_block_invoke_2
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:query:completion:]_block_invoke
-[CSAssetController _downloadAssetCatalogForAssetType:complete:]_block_invoke
-[CSAssetController _updateFromRemoteToLocalAssets:forAssetType:completion:]
-[CSAssetController _downloadAsset:withComplete:]
v16@?0d8
-[CSAssetController _downloadAsset:withComplete:]_block_invoke
v16@?0@"NSError"8
-[CSAssetController _startDownloadingAsset:progress:completion:]
v16@?0@"MAProgressNotification"8
+[CSAssetController(Utils) addKeyValuePairForQuery:assetType:]
com.apple.MobileAsset.VoiceTriggerAssets
com.apple.MobileAsset.VoiceTriggerAssetsIPad
com.apple.MobileAsset.VoiceTriggerAssetsWatch
com.apple.MobileAsset.VoiceTriggerAssetsMarsh
com.apple.MobileAsset.VoiceTriggerAssetsTV
com.apple.MobileAsset.SpeechEndpointAssets
com.apple.MobileAsset.SpeechEndpointAssetsWatch
com.apple.MobileAsset.SpeechEndpointAssetsTV
com.apple.MobileAsset.LanguageDetectorAssets
com.apple.MobileAsset.AdBlockerAssets
com.apple.MobileAsset.SpeakerRecognitionAssets
RTModelData
RTModelHash
RTModelLocale
RTModelDigest
RTModelSignature
RTModelCertificate
RT Model for 
 from asset 
CorealisRTModel
CorealisRTModelVersion
dataSize(%d), hash(%@), locale(%@), digest(%@), cert(%@), signature(%@)
+[CSUtils(LanguageCode) getSiriLanguageWithFallback:]
+[CSUtils(LanguageCode) getSiriLanguageWithEndpointId:fallbackLanguage:]
-[CSLanguageCodeUpdateMonitor _startMonitoringWithQueue:]
CSLanguageCodeUpdateMonitor.m
-[CSLanguageCodeUpdateMonitor _stopMonitoring]
-[CSLanguageCodeUpdateMonitor notifySiriLanguageCodeChanged:]
rtblobs
adkblobs
blob
majorVersion
minorVersion
signature
cert
rtlocalemap
jarvislocalemap
adklocalemap
-[CSAsset(RTModel) createRTModelWithLocale:]
-[CSAsset(RTModel) latestHearstRTModelForLocale:]
-[CSAsset(RTModel) rtModelWithAccessoryRTModelType:majorVersion:minorVersion:locale:]
-[CSAsset(RTModel) localeMapWithName:]
%02x
com.apple.
com.apple.private.
-[CSFirstUnlockMonitor _stopMonitoring]
v16@?0@8
-[CSSpeechEndpointAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeechEndpointAssetMetaUpdateMonitor _didReceiveNewSpeechEndpointAssetMetaData]
com.apple.MobileAsset.SpeechEndpointAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.SpeechEndpointAssetsTV.ma.cached-metadata-updated
com.apple.MobileAsset.SpeechEndpointAssets.ma.cached-metadata-updated
Languages
Footprint
Premium
com.apple.corespeech
-[CSVoiceTriggerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetMetaUpdateMonitor _stopMonitoring]
-[CSVoiceTriggerAssetMetaUpdateMonitor _didReceiveNewVoiceTriggerAssetMetaData]
com.apple.MobileAsset.VoiceTriggerAssets.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsIPad.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsTV.ma.cached-metadata-updated
-[CSLanguageCodeUpdateMonitorImpl _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitorImpl _stopMonitoring]
-[CSLanguageCodeUpdateMonitorImpl _didReceiveLanguageCodeUpdate]
-[CSLanguageCodeUpdateMonitorImplDarwin _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitorImplDarwin _stopMonitoring]
-[CSLanguageCodeUpdateMonitorImplDarwin _didReceiveLanguageCodeUpdate:]
%s Received notification %@
%s Failed to register for notification %@ (status=%d)
%s Received a request for VoiceTrigger Asset for language code : %{public}@
%s Fake Model Path does not exist : %{public}@
%s fake model meta json does not exist : %{public}@
%s Unable to read fake model meta json : %{public}@
%s Unable to parse fake model meta json : %{public}@
%s Loading FakeModel : %{public}@
%s Cannot create RTModel from %{public}@
%s fake model number(%{public}d) is less than minimum fake model number((%{public}d)
%s Using fake model for the first time : %{public}@
%s Using fake model : %{public}@
%s %{public}@ fake model is selected for download
%s %{public}@ model is selected for fallback
%s Received a request for VoiceTriggerRTModel %{public}@ Firmware Version : %{public}d.%{public}d
%s Asking mobile asset with currentLanguageCode = %{public}@
%s DownloadModel : 
%s %{public}@
%s preinstalledModels : 
%s Hearst Fake Model request switch turned on, executing stress test mode with fakeModelPath : %{public}@
%s VoiceTriggerAsset is not available : %{public}@
%s rtLocaleMap is nil fallback to embedded locale map
%s accessoryRTBlobs are not available for the version(%{public}d.%{public}d) and locale:%{public}@, returning fallback model : %{public}@
%s Hash matched with downloadedModel : %{public}@, accessory will select this model
%s Hash matched with preinstalledModel : %{public}@, accessory will select this model
%s Ask for download : %{public}@, and use %{public}@ as fallback
%s Select keyword language as %{public}@, error : %{public}@
%s Language list and jarvis language not provided
%s current Siri language code : %{public}@
%s Jarvis locale map is nil, fallback to embedded locale map
%s Trial assets not available, fallback to MA assets
%s _csAssetsDictionary = %{public}@
%s CSAssetController cannot query for nil language
%s ::: found %{public}lu installed assets for assetType=%{public}lu, matching query: %{public}@
%s Error running asset-query for assetType:%{public}lu, query: %{public}@, error: %{public}lu
%s ::: found %{public}lu assets for assetType=%{public}lu, matching query: %{public}@
%s Asset state : %{public}ld
%s ::: %{public}s
%s ::: %{public}s; query: %{public}@
%s Found %{public}lu assets
%s Error running asset query: error %{public}lu, or result is empty
%s ::: Request Fetching RemoteMetaData : assetType : %{public}d
%s Fetching remote meta data failed, scheduled retry after %{public}f seconds
%s ::: Request fetching remote asset
%s ::: found %{public}lu assets for assetType %{public}lu
%s Failed to finish query for assetType %{public}lu with error %{public}lu
%s Meta data downloaded successfully for assetType %{public}lu
%s Failed to download meta data for assetType %{public}lu with error %{public}lu
%s ::: Fetching remote asset
%s ::: Purging installed asset : %{public}@
%s ::: Request downloading remote asset for assetType %{public}lu
%s ::: Start downloading asset
%s ::: download progress: %{public}3.0f%%
%s ::: Error downloading from %{public}@ with error %{public}@
%s ::: download completed successfully from %{public}@.
%s Attempting to download asset %{public}@, asset state : %{public}ld
%s ERR: Unknown AssetType: %{public}lu
%s Siri language is nil, falling back to %@
%s endpointUUID not provided, fallback to legacy query
%s Failed to query language code with endpointId %@, trying legacy query
%s CS doesn't have ndblobbuilder!
%s latestMajorVersion = %d, LatestMinorVersion = %d
%s corespeech.json doesn't contains rtblobs
%s blob file name is not exists
%s blob file is not exists at %{public}@
%s Reading blob from : %{public}@
%s Blob is nil : %{public}@
%s Locale map for %{public}@ is not available on asset
%s Stop monitoring : First unlock
%s Start monitoring : speech endpoint asset meta update
%s Stop monitoring : speech endpoint asset meta update
%s New speech endpoint asset is available
%s Start monitoring : VoiceTrigger Asset meta update
%s Stop monitoring : VoiceTrigger Asset meta update
%s New VoiceTrigger asset metadata is available
%s Start monitoring : Siri language code
%s Stop monitoring : Siri language code
%s Siri language changed to : %{public}@
%s Ignore notifying change of language code, since it is nil
%s language code already up-to-date : %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsIPad</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMac</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsTV</string>
</array>
<key>com.apple.private.xpc.launchd.per-user-lookup</key>
<true/>
<key>com.apple.trial.client</key>
<array>
<string>757</string>
</array>
</dict>
</plist>
Trial
CSJarvisTriggerModeMonitor
CoreSpeechXPCProtocol
CoreSpeechXPCFakeModelMonitor
ServiceDelegate
NSXPCListenerDelegate
NSObject
CoreSpeechXPC
CSTrialAssetManager
CSEventMonitor
CSAssetController
CSEventMonitorDelegate
Utils
CSVoiceTriggerRTModel
NSSecureCoding
NSCoding
NSCopying
LanguageCode
CSLanguageCodeUpdateMonitor
RTModel
NSXPC
CSFirstUnlockMonitor
CSSpeechEndpointAssetMetaUpdateMonitor
CSAsset
CSVoiceTriggerAssetMetaUpdateMonitor
CSLanguageCodeUpdateMonitorImpl
CSLanguageCodeUpdateMonitorImplDarwin
getAssetTypeForNamespace:
getTrialIdsForAssetType:withCompletion:
init
sharedInstance
triggerModeStringDescription:
_startMonitoringWithQueue:
_stopMonitoring
setTriggerMode:
getTriggerMode
installedVoiceTriggerAssetForLanguageCode:completion:
fetchRemoteVoiceTriggerAssetForLanguageCode:completion:
voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:locale:endpointId:downloadedModels:preinstalledModels:completion:
voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:
voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:
interfaceWithProtocol:
arrayWithObjects:count:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
_registerForFakeAssetRollNotification
UTF8String
setShouldRollFakeModel:
start
stop
lastFakeModelUsedHash
setLastFakeModelUsedHash:
shouldRollFakeModel
queue
setQueue:
fakeAssetRollNotificationRegistrationToken
setFakeAssetRollNotificationRegistrationToken:
.cxx_destruct
_shouldRollFakeModel
_fakeAssetRollNotificationRegistrationToken
_lastFakeModelUsedHash
_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
Ti,N,V_fakeAssetRollNotificationRegistrationToken
T@"NSString",&,V_lastFakeModelUsedHash
TB,V_shouldRollFakeModel
dealloc
setExportedInterface:
xpcConnection:hasEntitlement:
invalidate
initWithFakeMonitor:
setExportedObject:
resume
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
fakeModelMonitor
setFakeModelMonitor:
_fakeModelMonitor
T@"CoreSpeechXPCFakeModelMonitor",&,N,V_fakeModelMonitor
serviceListener
setDelegate:
defaultManager
fileExistsAtPath:
errorWithDomain:code:userInfo:
stringByAppendingPathComponent:
dataWithContentsOfFile:
JSONObjectWithData:options:error:
array
countByEnumeratingWithState:objects:count:
assetForAssetType:resourcePath:configVersion:
hearstRTModelWithMajorVersion:minorVersion:locale:
addObject:
count
firstObject
objectAtIndexedSubscript:
modelHash
objectAtIndex:
accessoryModelTypeToString:
sharedPreferences
setHearstFirstPassModelVersion:
setHearstSecondPassModelVersion:
getSiriLanguageWithFallback:
fakeHearstModelPath
_handleFakeHearstModelRequest:majorVersion:minorVersion:downloadedModels:preinstalledModels:completion:
localizedDescription
rtModelWithAccessoryRTModelType:majorVersion:minorVersion:locale:
rtModelLocaleMapWithModelType:
getAccessoryFallbackLocalTable
selectFallbackModelForLocale:downloadedModels:preinstalledModels:rtLocaleMap:
isEqualToString:
_fetchVoiceTriggerInstalledAssetWithLanguage:completion:
voiceTriggerHearstRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:
logLanguageMismatchMetricWithJarvisSelectedLocale:jarvisTriggerMode:
jarvisRTModelLocaleMap
getAccessoryFallbackFamilyLocal:fromLocaleMap:
objectForKeyedSubscript:
modelLocale
sharedController
installedAssetOfType:language:completion:
getInstalledAssetofType:forLocale:completion:
voiceTriggerRemoraRTModelForVersion:minorVersion:locale:endpointId:downloadedModels:preinstalledModels:completion:
fakeAssetMonitor
setFakeAssetMonitor:
_fakeAssetMonitor
T@"CoreSpeechXPCFakeModelMonitor",&,N,V_fakeAssetMonitor
weakObjectsHashTable
removeObject:
enumerateObservers:
CSEventMonitorDidReceiveEvent:
type
addObserver:
removeObserver:
enumerateObserversInQueue:
notifyObserver:
_observers
getVoiceTriggerAssetTypeString
getEndpointAssetTypeString
getLanguageDetectorAssetTypeString
getAdBlockerAssetTypeString
getSpeakerRecognitionAssetTypeString
dictionary
dictionaryWithObjects:forKeys:count:
_cleanUpMobileAssetV1Directory
_isReadyToUse
installedAssetOfType:withLanguage:
_fetchRemoteAssetOfType:withLanguage:completion:
_assetQueryForAssetType:
returnTypes:
queryMetaDataSync
results
filteredAssetsForAssets:assetType:language:
queryParams
isLatestCompareTo:
sortedArrayUsingComparator:
state
getCSAssetOfType:
enumerateObjectsUsingBlock:
installedAssetOfType:withLanguage:completion:
numberWithUnsignedInteger:
initWithType:
stringWithFormat:
addKeyValuePair:with:
addKeyValuePairForQuery:assetType:
_installedAssetOfType:query:withLanguage:completion:
_fetchRemoteAssetOfType:withLanguage:query:completion:
_installedAssetOfType:withLanguage:
_installedAssetOfType:withLanguage:completion:
_findLatestInstalledAsset:
queryMetaData:
attributes
isFirstUnlocked
fetchRemoteMetaOfType:allowRetry:
_runAssetQuery:completion:
_downloadAssetCatalogForAssetType:complete:
_updateFromRemoteToLocalAssets:forAssetType:completion:
_defaultDownloadOptions
_isRetryRecommendedWithResult:
startCatalogDownload:options:then:
isCSAssetInstalled
isDownloading
cancelDownloadSync
canBePurged
path
purgeSync
observers
CSAssetController:didDownloadNewAssetForType:
_downloadAsset:withComplete:
setAllowsCellularAccess:
setCanUseLocalCacheServer:
setDiscretionary:
assetServerUrl
_startDownloadingAsset:progress:completion:
expectedTimeRemaining
totalWritten
totalExpected
attachProgressCallBack:
spaceCheck:
startDownload:then:
setObject:forKeyedSubscript:
getAssetTypeStringForType:
assetOfType:language:
allInstalledAssetsOfType:language:
assetOfType:language:completion:
assetOfType:language:compatibilityVersion:completion:
installedAssetOfType:language:
fetchRemoteMetaOfType:
addObserver:forAssetType:
removeObserver:forAssetType:
assetsMigrationQueue
setAssetsMigrationQueue:
csAssetsDictionary
setCsAssetsDictionary:
setObservers:
_assetsMigrationQueue
_csAssetsDictionary
T@"NSObject<OS_dispatch_queue>",&,N,V_assetsMigrationQueue
T@"NSDictionary",&,N,V_csAssetsDictionary
T@"NSMutableDictionary",&,N,V_observers
valueForKey:
containsObject:
supportPremiumAssets
objectForKey:
getVoiceTriggerAssetCurrentCompatibilityVersion
getEndpointAssetCurrentCompatibilityVersion
getLanguageDetectorCurrentCompatibilityVersion
getAdBlockerCurrentCompatibilityVersion
getSpeakerRecognitionCurrentCompatibilityVersion
filteredAssetsForFetchRemoteMetaDataForAssets:assetType:
containsValueForKey:
decodeObjectOfClass:forKey:
copy
initWithData:hash:locale:digest:signature:certificate:
encodeObject:forKey:
stringByAppendingString:
string
length
base64EncodedStringWithOptions:
substringToIndex:
appendFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
initWithHash:locale:
initWithData:hash:locale:
builtInRTModelDictionary
modelData
digest
signature
certificate
_modelData
_modelLocale
_modelHash
_digest
_signature
_certificate
T@"NSData",R,N,V_modelData
T@"NSString",R,N,V_modelLocale
T@"NSString",R,N,V_modelHash
T@"NSData",R,N,V_digest
T@"NSData",R,N,V_signature
T@"NSData",R,N,V_certificate
isDarwinOS
languageCodeDarwin
getSiriLanguageWithEndpointId:fallbackLanguage:
notifySiriLanguageCodeChanged:
createRTModelWithLocale:
unsignedIntValue
resourcePath
_sha1:
substringWithRange:
_sha256:
localeMapWithName:
remoraRTModelLocaleMap
hearstRTModelLocaleMap
bytes
stringWithCapacity:
dataWithLength:
mutableBytes
RTModelWithFallbackLanguage:
latestHearstRTModelForLocale:
remoraRTModelWithMajorVersion:minorVersion:locale:
valueForEntitlement:
_checkFirstUnlocked
_didReceiveFirstUnlock:
_notifyObserver:withUnlocked:
CSFirstUnlockMonitor:didReceiveFirstUnlock:
_firstUnlockNotified
_didReceiveFirstUnlockInQueue:
_notifyToken
_firstUnlocked
_didReceiveNewSpeechEndpointAssetMetaData
_notifyObserver:
CSSpeechEndpointAssetMetaUpdateMonitor:didReceiveNewSpeechEndpointAssetMetaData:
getLocalUrl
_compatibilityVersion
stringValue
appendString:
_version
_footprint
integerValue
isPremium
_didReceiveNewVoiceTriggerAssetMetaData
_asssetMetaUpdatedKey
CSVoiceTriggerAssetMetaUpdateMonitor:didReceiveNewVoiceTriggerAssetMetaData:
notifyNewVoiceTriggerAssetMetaDataUpdated
_notifyObserver:withLanguageCode:
CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:
_didReceiveLanguageCodeUpdate
setSiriLanguageCodeDarwin:
_didReceiveLanguageCodeUpdate:
_currentLanguageCode
Q24@0:8@16
v32@0:8Q16@?24
@16@0:8
@24@0:8q16
v24@0:8@16
v16@0:8
v24@0:8q16
q16@0:8
v32@0:8@16@?24
v80@0:8Q16Q24q32@40@48@56@64@?72
v64@0:8Q16Q24@32@40@48@?56
v40@0:8@16@24@?32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
v80@0:8Q16Q24q32@"NSString"40@"NSUUID"48@"NSArray"56@"NSArray"64@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">72
v64@0:8Q16Q24@"NSString"32@"NSArray"40@"NSArray"48@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSString"@"NSError">32
B16@0:8
v20@0:8B16
i16@0:8
v20@0:8i16
@"NSString"
@"NSObject<OS_dispatch_queue>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"CoreSpeechXPCFakeModelMonitor"
v32@0:8@16q24
@24@0:8@16
v64@0:8@16Q24Q32@40@48@?56
v72@0:8Q16Q24@32@40@48@56@?64
@32@0:8@16@24
@48@0:8@16@24@32@40
v40@0:8Q16@24@?32
v24@0:8@?16
@"NSHashTable"
@24@0:8Q16
@32@0:8Q16@24
v48@0:8Q16@24Q32@?40
v48@0:8Q16@24@32@?40
v24@0:8Q16
v28@0:8Q16B24
B24@0:8q16
v40@0:8@16Q24@?32
v40@0:8@16@?24@?32
v32@0:8@16Q24
@"NSDictionary"
@"NSMutableDictionary"
@32@0:8@16Q24
@40@0:8@16Q24@32
v32@0:8^@16Q24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@64@0:8@16@24@32@40@48@56
@40@0:8@16@24@32
@"NSData"
@48@0:8q16Q24Q32@40
@40@0:8Q16Q24@32
v28@0:8@16B24
r*16@0:8
v32@0:8@16@24
unknown
com.apple.corespeech.fakeasset.rolling
v8@?0
-[CoreSpeechXPCFakeModelMonitor _registerForFakeAssetRollNotification]_block_invoke
v12@?0i8
-[CoreSpeechXPCFakeModelMonitor _registerForFakeAssetRollNotification]
corespeech.xpc
-[CoreSpeechXPC installedVoiceTriggerAssetForLanguageCode:completion:]
-[CoreSpeechXPC fetchRemoteVoiceTriggerAssetForLanguageCode:completion:]
-[CoreSpeechXPC _handleFakeHearstModelRequest:majorVersion:minorVersion:downloadedModels:preinstalledModels:completion:]
fakeModel.json
en-US
fakeModel
-[CoreSpeechXPC voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:locale:endpointId:downloadedModels:preinstalledModels:completion:]
v40@?0@"CSVoiceTriggerRTModel"8@"CSVoiceTriggerRTModel"16@"NSString"24@"NSError"32
-[CoreSpeechXPC voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:locale:endpointId:downloadedModels:preinstalledModels:completion:]_block_invoke
v24@?0@"CSAsset"8@"NSError"16
-[CoreSpeechXPC voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]_block_invoke
v24@?0@"NSString"8@"NSError"16
-[CoreSpeechXPC voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]
de-AT
de-DE
de-CH
en-AU
en-CA
en-GB
en-SG
en-IE
en-IN
en-ZA
en-NZ
it-IT
it-CH
ja-JP
zh-CN
zh-TW
nb-NO
nl-BE
nl-NL
sv-SE
tr-TR
fi-FI
he-IL
es-ES
es-US
es-CL
es-MX
fr-FR
fr-BE
fr-CA
fr-CH
ko-KR
zh-HK
yue-CN
da-DK
ms-MY
pt-BR
ru-RU
th-TH
ar-AE
ar-SA
default
Remora
Hearst
-[CoreSpeechXPC _fetchVoiceTriggerInstalledAssetWithLanguage:completion:]_block_invoke
Serial CSEventMonitor queue
-[CSEventMonitor _startMonitoringWithQueue:]
CSEventMonitor.m
-[CSEventMonitor _stopMonitoring]
com.apple.MobileAsset.VoiceTriggerAssetsMac
-[CSAssetController init]
Serial CSAssetController queue
V1 Assets Clean-up queue
-[CSAssetController _cleanUpMobileAssetV1Directory]
-[CSAssetController assetOfType:language:]
-[CSAssetController allInstalledAssetsOfType:language:]
q24@?0@"MAAsset"8@"MAAsset"16
v32@?0@"MAAsset"8Q16^B24
-[CSAssetController assetOfType:language:completion:]
-[CSAssetController assetOfType:language:compatibilityVersion:completion:]
v24@?0@"MAAsset"8@"NSError"16
-[CSAssetController installedAssetOfType:language:]
-[CSAssetController installedAssetOfType:language:completion:]
-[CSAssetController _installedAssetOfType:withLanguage:]
-[CSAssetController _installedAssetOfType:query:withLanguage:completion:]_block_invoke
v16@?0q8
-[CSAssetController _findLatestInstalledAsset:]
-[CSAssetController _assetQueryForAssetType:]
-[CSAssetController _runAssetQuery:completion:]
-[CSAssetController _runAssetQuery:completion:]_block_invoke
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]_block_invoke
v20@?0@"NSError"8B16
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:query:completion:]_block_invoke_2
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:query:completion:]_block_invoke
-[CSAssetController _downloadAssetCatalogForAssetType:complete:]_block_invoke
-[CSAssetController _updateFromRemoteToLocalAssets:forAssetType:completion:]
-[CSAssetController _downloadAsset:withComplete:]
v16@?0d8
-[CSAssetController _downloadAsset:withComplete:]_block_invoke
v16@?0@"NSError"8
-[CSAssetController _startDownloadingAsset:progress:completion:]
v16@?0@"MAProgressNotification"8
+[CSAssetController(Utils) addKeyValuePairForQuery:assetType:]
com.apple.MobileAsset.VoiceTriggerAssets
com.apple.MobileAsset.VoiceTriggerAssetsIPad
com.apple.MobileAsset.VoiceTriggerAssetsWatch
com.apple.MobileAsset.VoiceTriggerAssetsMarsh
com.apple.MobileAsset.VoiceTriggerAssetsTV
com.apple.MobileAsset.SpeechEndpointAssets
com.apple.MobileAsset.SpeechEndpointAssetsWatch
com.apple.MobileAsset.SpeechEndpointAssetsTV
com.apple.MobileAsset.LanguageDetectorAssets
com.apple.MobileAsset.AdBlockerAssets
com.apple.MobileAsset.SpeakerRecognitionAssets
RTModelData
RTModelHash
RTModelLocale
RTModelDigest
RTModelSignature
RTModelCertificate
RT Model for 
 from asset 
CorealisRTModel
CorealisRTModelVersion
dataSize(%d), hash(%@), locale(%@), digest(%@), cert(%@), signature(%@)
+[CSUtils(LanguageCode) getSiriLanguageWithFallback:]
+[CSUtils(LanguageCode) getSiriLanguageWithEndpointId:fallbackLanguage:]
-[CSLanguageCodeUpdateMonitor _startMonitoringWithQueue:]
CSLanguageCodeUpdateMonitor.m
-[CSLanguageCodeUpdateMonitor _stopMonitoring]
-[CSLanguageCodeUpdateMonitor notifySiriLanguageCodeChanged:]
rtblobs
adkblobs
blob
majorVersion
minorVersion
signature
cert
rtlocalemap
jarvislocalemap
adklocalemap
-[CSAsset(RTModel) createRTModelWithLocale:]
-[CSAsset(RTModel) latestHearstRTModelForLocale:]
-[CSAsset(RTModel) rtModelWithAccessoryRTModelType:majorVersion:minorVersion:locale:]
-[CSAsset(RTModel) localeMapWithName:]
%02x
com.apple.
com.apple.private.
-[CSFirstUnlockMonitor _stopMonitoring]
v16@?0@8
-[CSSpeechEndpointAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeechEndpointAssetMetaUpdateMonitor _didReceiveNewSpeechEndpointAssetMetaData]
com.apple.MobileAsset.SpeechEndpointAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.SpeechEndpointAssetsTV.ma.cached-metadata-updated
com.apple.MobileAsset.SpeechEndpointAssets.ma.cached-metadata-updated
Languages
Footprint
Premium
com.apple.corespeech
-[CSVoiceTriggerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetMetaUpdateMonitor _stopMonitoring]
-[CSVoiceTriggerAssetMetaUpdateMonitor _didReceiveNewVoiceTriggerAssetMetaData]
com.apple.MobileAsset.VoiceTriggerAssets.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsIPad.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsTV.ma.cached-metadata-updated
-[CSLanguageCodeUpdateMonitorImpl _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitorImpl _stopMonitoring]
-[CSLanguageCodeUpdateMonitorImpl _didReceiveLanguageCodeUpdate]
-[CSLanguageCodeUpdateMonitorImplDarwin _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitorImplDarwin _stopMonitoring]
-[CSLanguageCodeUpdateMonitorImplDarwin _didReceiveLanguageCodeUpdate:]
 %*/
%s Received notification %@
%s Failed to register for notification %@ (status=%d)
%s Received a request for VoiceTrigger Asset for language code : %{public}@
%s Fake Model Path does not exist : %{public}@
%s fake model meta json does not exist : %{public}@
%s Unable to read fake model meta json : %{public}@
%s Unable to parse fake model meta json : %{public}@
%s Loading FakeModel : %{public}@
%s Cannot create RTModel from %{public}@
%s fake model number(%{public}d) is less than minimum fake model number((%{public}d)
%s Using fake model for the first time : %{public}@
%s Using fake model : %{public}@
%s %{public}@ fake model is selected for download
%s %{public}@ model is selected for fallback
%s Received a request for VoiceTriggerRTModel %{public}@ Firmware Version : %{public}d.%{public}d
%s Asking mobile asset with currentLanguageCode = %{public}@
%s DownloadModel : 
%s preinstalledModels : 
%s %{public}@
%s Hearst Fake Model request switch turned on, executing stress test mode with fakeModelPath : %{public}@
%s VoiceTriggerAsset is not available : %{public}@
%s rtLocaleMap is nil fallback to embedded locale map
%s accessoryRTBlobs are not available for the version(%{public}d.%{public}d) and locale:%{public}@, returning fallback model : %{public}@
%s Hash matched with downloadedModel : %{public}@, accessory will select this model
%s Hash matched with preinstalledModel : %{public}@, accessory will select this model
%s Ask for download : %{public}@, and use %{public}@ as fallback
%s Select keyword language as %{public}@, error : %{public}@
%s Language list and jarvis language not provided
%s current Siri language code : %{public}@
%s Jarvis locale map is nil, fallback to embedded locale map
%s Trial assets not available, fallback to MA assets
%s _csAssetsDictionary = %{public}@
%s CSAssetController cannot query for nil language
%s ::: found %{public}lu installed assets for assetType=%{public}lu, matching query: %{public}@
%s Error running asset-query for assetType:%{public}lu, query: %{public}@, error: %{public}lu
%s ::: found %{public}lu assets for assetType=%{public}lu, matching query: %{public}@
%s Asset state : %{public}ld
%s ::: %{public}s
%s ::: %{public}s; query: %{public}@
%s Found %{public}lu assets
%s Error running asset query: error %{public}lu, or result is empty
%s ::: Request Fetching RemoteMetaData : assetType : %{public}d
%s Fetching remote meta data failed, scheduled retry after %{public}f seconds
%s ::: Request fetching remote asset
%s ::: found %{public}lu assets for assetType %{public}lu
%s Failed to finish query for assetType %{public}lu with error %{public}lu
%s Meta data downloaded successfully for assetType %{public}lu
%s Failed to download meta data for assetType %{public}lu with error %{public}lu
%s ::: Fetching remote asset
%s ::: Purging installed asset : %{public}@
%s ::: Request downloading remote asset for assetType %{public}lu
%s ::: Start downloading asset
%s ::: download progress: %{public}3.0f%%
%s ::: Error downloading from %{public}@ with error %{public}@
%s ::: download completed successfully from %{public}@.
%s Attempting to download asset %{public}@, asset state : %{public}ld
%s ERR: Unknown AssetType: %{public}lu
%s Siri language is nil, falling back to %@
%s endpointUUID not provided, fallback to legacy query
%s Failed to query language code with endpointId %@, trying legacy query
%s CS doesn't have ndblobbuilder!
%s latestMajorVersion = %d, LatestMinorVersion = %d
%s corespeech.json doesn't contains rtblobs
%s blob file name is not exists
%s blob file is not exists at %{public}@
%s Reading blob from : %{public}@
%s Blob is nil : %{public}@
%s Locale map for %{public}@ is not available on asset
%s Stop monitoring : First unlock
%s Start monitoring : speech endpoint asset meta update
%s Stop monitoring : speech endpoint asset meta update
%s New speech endpoint asset is available
%s Start monitoring : VoiceTrigger Asset meta update
%s Stop monitoring : VoiceTrigger Asset meta update
%s New VoiceTrigger asset metadata is available
%s Start monitoring : Siri language code
%s Stop monitoring : Siri language code
%s Siri language changed to : %{public}@
%s Ignore notifying change of language code, since it is nil
%s language code already up-to-date : %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsIPad</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMac</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsTV</string>
</array>
<key>com.apple.private.xpc.launchd.per-user-lookup</key>
<true/>
<key>com.apple.trial.client</key>
<array>
<string>757</string>
</array>
</dict>
</plist>
