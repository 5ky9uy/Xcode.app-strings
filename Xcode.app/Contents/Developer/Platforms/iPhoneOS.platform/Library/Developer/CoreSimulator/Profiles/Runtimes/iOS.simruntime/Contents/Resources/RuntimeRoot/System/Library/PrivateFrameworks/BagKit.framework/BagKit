@(#)PROGRAM:BagKit  PROJECT:BagKit-1
File
Unknown
Denied
Pending
Available
BAGFile.m
Invalid parameter not satisfying: %@
data
contentType
options
resource
<%@ : %p options: %@ contentType: %@>
BAGResourceVendorErrorDomain
BAGResourceVendor.m
queue
daemonController
updateBlock
v8@?0
v16@?0@"NSError"8
v16@?0@"IDSXPCDaemonController"8
BAGConfig.m
dictionary
config
keyType
BAGIsValidConfigKeyType(defaultKeyType)
<%@ : %p options: %@>
true
false
en_US
BAGIsValidConfigKeyType(keyType)
keyList
@16@?0@8
BAGResourceOptions.m
bundleID
name
BAGIsValidResourceType(type)
type
additionalOptions
<%@ : %p bundleID: %@, name: %@, type: %@ additionalOptions: %@>
BAGResourceUpdateContext.m
BAGIsValidLoadState(loadState)
loadState
error
<%@ : %p loadState: %@, error: %@>
com.apple.Registration
BagKitResourceVending
Init vendor %@
Dealloced vendor %@
%@ Requested fetch for options %@
%@ Canceled fetch for options %@
%@ XPC connection interrupted. Requesting bags
Self dealloced. Not handling interruption.
Self dealloced. Not performing fetch for options %@
Error fetching bag kit collaborator {error: %@}
Self dealloced. Not performing collaborator error update { options: %@, error: %@ }
%@ Performing fetch for options %@
Self dealloced. Not performing cancel for options %@
%@ Performing cancel for options %@
%@ Calling out to update blocks for { options : %@, context : %@, resource : %@ }
BAGXPCProtocol
NSObject
BAGXPCProtocolClient
BAGXPCInterface
BagKit
BAGFile
NSSecureCoding
NSCoding
BAGResource
BAGResourceVendor
BAGConfig
BAGResourceOptions
NSCopying
BAGResourceUpdateContext
BAGLog
_defaultKeyType
T#,R
dataForKeyList:
T@"BAGResourceOptions",R
dictionaryOfDataForKey:keyType:
T@"NSData",&,N,V_resource
isProxy
T@"NSDictionary",&,N,V_configuration
release
T@"NSMutableDictionary",&,N,V_updateBlocksByOptions
setContentType:
T@"NSObject<OS_os_log>",R
stopTrackingResourceForOptions:
.cxx_destruct
boolForKeyList:
T@"BAGResourceOptions",&,N,V_options
dealloc
T@"IDSXPCDaemonController",&,N,V_daemonController
initWithQueue:daemonController:
T@"NSDictionary",&,N,V_additionalOptions
options
T@"NSError",&,N,V_error
resourceVending
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
setWithObjects:
T@"NSString",&,N,V_bundleID
T@"NSString",&,N,V_contentType
T@"NSString",&,N,V_name
T@"NSString",R,C
T@"NSUUID",&,N,V_vendorID
TB,R
TQ,N,V_defaultKeyType
TQ,N,V_loadState
TQ,N,V_type
TQ,R
TQ,R,N
UUID
_additionalOptions
_boolNumberFromString:
_bundleID
_calloutToBlocksForOptions:withResource:andContext:
_checkIsArrayObject:typeBlock:
_checkIsBoolObject:
_checkIsDataObject:
_checkIsDictionaryObject:typeBlock:
_checkIsNumberObject:
_checkIsStringObject:
_configuration
_contentType
_daemonController
_error
_handleInterruption
_loadState
_name
_options
_performCancelForOptions:
_performFetchForOptions:
_queue
_resource
_traverseKeyList:
_type
_updateBlocksByOptions
_vendorID
addInterruptionHandler:forTarget:
addObject:
additionalOptions
arrayForKey:
arrayForKey:keyType:
arrayForKeyList:
arrayForKeyList:keyType:
arrayOfDataForKey:
arrayOfDataForKey:keyType:
arrayOfDataForKeyList:
arrayOfDataForKeyList:keyType:
arrayOfNumbersForKey:
arrayOfNumbersForKey:keyType:
arrayOfNumbersForKeyList:
arrayOfNumbersForKeyList:keyType:
arrayOfStringsForKey:
arrayOfStringsForKey:keyType:
arrayOfStringsForKeyList:
arrayOfStringsForKeyList:keyType:
autorelease
bagKitCollaboratorWithErrorHandler:
boolForKey:
boolForKey:keyType:
boolForKeyList:keyType:
boolValue
bundleID
cancelBagKitClientWithUUID:forOptions:
class
configuration
conformsToProtocol:
contentType
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentHandler
daemonController
dataForKey:
dataForKey:keyType:
dataForKeyList:keyType:
debugDescription
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultKeyType
description
dictionaryForKey:
dictionaryForKey:keyType:
dictionaryForKeyList:
dictionaryForKeyList:keyType:
dictionaryOfDataForKey:
dictionaryOfDataForKeyList:
dictionaryOfDataForKeyList:keyType:
dictionaryOfNumbersForKey:
dictionaryOfNumbersForKey:keyType:
dictionaryOfNumbersForKeyList:
dictionaryOfNumbersForKeyList:keyType:
dictionaryOfStringsForKey:
dictionaryOfStringsForKey:keyType:
dictionaryOfStringsForKeyList:
dictionaryOfStringsForKeyList:keyType:
dictionaryWithObjects:forKeys:count:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
error
errorWithDomain:code:userInfo:
handleFailureInMethod:object:file:lineNumber:description:
hash
init
initWithBase64EncodedString:options:
initWithBundleID:name:type:additionalOptions:
initWithCoder:
initWithData:contentType:options:
initWithDictionary:options:
initWithLoadState:error:
initWithLocaleIdentifier:
initWithName:type:
initWithName:type:additionalOptions:
initWithQueue:
intValue
integerValue
interface
interfaceWithProtocol:
isEqual:
isEqualToData:
isEqualToDictionary:
isEqualToString:
isKindOfClass:
isMemberOfClass:
loadState
name
numberForKey:
numberForKey:keyType:
numberForKeyList:
numberForKeyList:keyType:
numberFromString:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTask:
queue
removeInterruptionHandlerForTarget:
resource
resourceUpdated:forOptions:withContext:
respondsToSelector:
retain
retainCount
self
setAdditionalOptions:
setBundleID:
setClasses:forSelector:argumentIndex:ofReply:
setConfiguration:
setDaemonController:
setDefaultKeyType:
setError:
setInterface:forSelector:argumentIndex:ofReply:
setLoadState:
setLocale:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setOptions:
setQueue:
setResource:
setType:
setUpdateBlocksByOptions:
setVendorID:
setupBagKitClient:withUUID:forOptions:
stringForKey:
stringForKey:keyType:
stringForKeyList:
stringForKeyList:keyType:
stringWithFormat:
superclass
supportsSecureCoding
trackResourceForOptions:updateBlock:
type
updateBlocksByOptions
vendorID
weakSharedInstance
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@"<BAGXPCProtocolClient>"16@"NSUUID"24@"BAGResourceOptions"32
v32@0:8@"NSUUID"16@"BAGResourceOptions"24
v40@0:8@"<BAGResource>"16@"BAGResourceOptions"24@"BAGResourceUpdateContext"32
@24@0:8@?16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"BAGResourceOptions"16@0:8
@40@0:8@16@24@32
v16@0:8
@"BAGResourceOptions"
@"NSData"
@"NSString"
@32@0:8@16@24
v32@0:8@16@?24
@"NSObject<OS_dispatch_queue>"
@"IDSXPCDaemonController"
@"NSMutableDictionary"
@"NSUUID"
@32@0:8@16@?24
@32@0:8@16Q24
B32@0:8@16Q24
v24@0:8Q16
@"NSDictionary"
@24@0:8^{_NSZone=}16
@40@0:8@16Q24@32
@48@0:8@16@24Q32@40
@32@0:8Q16@24
@"NSError"
@(#)PROGRAM:BagKit  PROJECT:BagKit-1
File
Unknown
Denied
Pending
Available
BAGFile.m
Invalid parameter not satisfying: %@
data
contentType
options
resource
<%@ : %p options: %@ contentType: %@>
BAGResourceVendorErrorDomain
BAGResourceVendor.m
queue
daemonController
updateBlock
v8@?0
v16@?0@"NSError"8
v16@?0@"IDSXPCDaemonController"8
BAGConfig.m
dictionary
config
keyType
BAGIsValidConfigKeyType(defaultKeyType)
<%@ : %p options: %@>
true
false
en_US
BAGIsValidConfigKeyType(keyType)
keyList
@16@?0@8
BAGResourceOptions.m
bundleID
name
BAGIsValidResourceType(type)
type
additionalOptions
<%@ : %p bundleID: %@, name: %@, type: %@ additionalOptions: %@>
BAGResourceUpdateContext.m
BAGIsValidLoadState(loadState)
loadState
error
<%@ : %p loadState: %@, error: %@>
com.apple.Registration
BagKitResourceVending
Init vendor %@
Dealloced vendor %@
%@ Requested fetch for options %@
%@ Canceled fetch for options %@
%@ XPC connection interrupted. Requesting bags
Self dealloced. Not handling interruption.
Self dealloced. Not performing fetch for options %@
Error fetching bag kit collaborator {error: %@}
Self dealloced. Not performing collaborator error update { options: %@, error: %@ }
%@ Performing fetch for options %@
Self dealloced. Not performing cancel for options %@
%@ Performing cancel for options %@
%@ Calling out to update blocks for { options : %@, context : %@, resource : %@ }
BAGXPCProtocol
NSObject
BAGXPCProtocolClient
BAGXPCInterface
BagKit
BAGFile
NSSecureCoding
NSCoding
BAGResource
BAGResourceVendor
BAGConfig
BAGResourceOptions
NSCopying
BAGResourceUpdateContext
BAGLog
_defaultKeyType
T#,R
dataForKeyList:
T@"BAGResourceOptions",R
dictionaryOfDataForKey:keyType:
T@"NSData",&,N,V_resource
isProxy
T@"NSDictionary",&,N,V_configuration
release
T@"NSMutableDictionary",&,N,V_updateBlocksByOptions
setContentType:
T@"NSObject<OS_os_log>",R
stopTrackingResourceForOptions:
.cxx_destruct
boolForKeyList:
T@"BAGResourceOptions",&,N,V_options
dealloc
T@"IDSXPCDaemonController",&,N,V_daemonController
initWithQueue:daemonController:
T@"NSDictionary",&,N,V_additionalOptions
options
T@"NSError",&,N,V_error
resourceVending
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
setWithObjects:
T@"NSString",&,N,V_bundleID
T@"NSString",&,N,V_contentType
T@"NSString",&,N,V_name
T@"NSString",R,C
T@"NSUUID",&,N,V_vendorID
TB,R
TQ,N,V_defaultKeyType
TQ,N,V_loadState
TQ,N,V_type
TQ,R
TQ,R,N
UUID
_additionalOptions
_boolNumberFromString:
_bundleID
_calloutToBlocksForOptions:withResource:andContext:
_checkIsArrayObject:typeBlock:
_checkIsBoolObject:
_checkIsDataObject:
_checkIsDictionaryObject:typeBlock:
_checkIsNumberObject:
_checkIsStringObject:
_configuration
_contentType
_daemonController
_error
_handleInterruption
_loadState
_name
_options
_performCancelForOptions:
_performFetchForOptions:
_queue
_resource
_traverseKeyList:
_type
_updateBlocksByOptions
_vendorID
addInterruptionHandler:forTarget:
addObject:
additionalOptions
arrayForKey:
arrayForKey:keyType:
arrayForKeyList:
arrayForKeyList:keyType:
arrayOfDataForKey:
arrayOfDataForKey:keyType:
arrayOfDataForKeyList:
arrayOfDataForKeyList:keyType:
arrayOfNumbersForKey:
arrayOfNumbersForKey:keyType:
arrayOfNumbersForKeyList:
arrayOfNumbersForKeyList:keyType:
arrayOfStringsForKey:
arrayOfStringsForKey:keyType:
arrayOfStringsForKeyList:
arrayOfStringsForKeyList:keyType:
autorelease
bagKitCollaboratorWithErrorHandler:
boolForKey:
boolForKey:keyType:
boolForKeyList:keyType:
boolValue
bundleID
cancelBagKitClientWithUUID:forOptions:
class
configuration
conformsToProtocol:
contentType
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentHandler
daemonController
dataForKey:
dataForKey:keyType:
dataForKeyList:keyType:
debugDescription
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultKeyType
description
dictionaryForKey:
dictionaryForKey:keyType:
dictionaryForKeyList:
dictionaryForKeyList:keyType:
dictionaryOfDataForKey:
dictionaryOfDataForKeyList:
dictionaryOfDataForKeyList:keyType:
dictionaryOfNumbersForKey:
dictionaryOfNumbersForKey:keyType:
dictionaryOfNumbersForKeyList:
dictionaryOfNumbersForKeyList:keyType:
dictionaryOfStringsForKey:
dictionaryOfStringsForKey:keyType:
dictionaryOfStringsForKeyList:
dictionaryOfStringsForKeyList:keyType:
dictionaryWithObjects:forKeys:count:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
error
errorWithDomain:code:userInfo:
handleFailureInMethod:object:file:lineNumber:description:
hash
init
initWithBase64EncodedString:options:
initWithBundleID:name:type:additionalOptions:
initWithCoder:
initWithData:contentType:options:
initWithDictionary:options:
initWithLoadState:error:
initWithLocaleIdentifier:
initWithName:type:
initWithName:type:additionalOptions:
initWithQueue:
intValue
integerValue
interface
interfaceWithProtocol:
isEqual:
isEqualToData:
isEqualToDictionary:
isEqualToString:
isKindOfClass:
isMemberOfClass:
loadState
name
numberForKey:
numberForKey:keyType:
numberForKeyList:
numberForKeyList:keyType:
numberFromString:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTask:
queue
removeInterruptionHandlerForTarget:
resource
resourceUpdated:forOptions:withContext:
respondsToSelector:
retain
retainCount
self
setAdditionalOptions:
setBundleID:
setClasses:forSelector:argumentIndex:ofReply:
setConfiguration:
setDaemonController:
setDefaultKeyType:
setError:
setInterface:forSelector:argumentIndex:ofReply:
setLoadState:
setLocale:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setOptions:
setQueue:
setResource:
setType:
setUpdateBlocksByOptions:
setVendorID:
setupBagKitClient:withUUID:forOptions:
stringForKey:
stringForKey:keyType:
stringForKeyList:
stringForKeyList:keyType:
stringWithFormat:
superclass
supportsSecureCoding
trackResourceForOptions:updateBlock:
type
updateBlocksByOptions
vendorID
weakSharedInstance
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@"<BAGXPCProtocolClient>"16@"NSUUID"24@"BAGResourceOptions"32
v32@0:8@"NSUUID"16@"BAGResourceOptions"24
v40@0:8@"<BAGResource>"16@"BAGResourceOptions"24@"BAGResourceUpdateContext"32
@24@0:8@?16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"BAGResourceOptions"16@0:8
@40@0:8@16@24@32
v16@0:8
@"BAGResourceOptions"
@"NSData"
@"NSString"
@32@0:8@16@24
v32@0:8@16@?24
@"NSObject<OS_dispatch_queue>"
@"IDSXPCDaemonController"
@"NSMutableDictionary"
@"NSUUID"
@32@0:8@16@?24
@32@0:8@16Q24
B32@0:8@16Q24
v24@0:8Q16
@"NSDictionary"
@24@0:8^{_NSZone=}16
@40@0:8@16Q24@32
@48@0:8@16@24Q32@40
@32@0:8Q16@24
@"NSError"
