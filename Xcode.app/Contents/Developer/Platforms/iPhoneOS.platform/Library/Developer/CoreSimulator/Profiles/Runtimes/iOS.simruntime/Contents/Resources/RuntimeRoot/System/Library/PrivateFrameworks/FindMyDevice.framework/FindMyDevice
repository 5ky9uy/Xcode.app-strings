FRAMEWORK API: identityForPasscodeActivationUnlockWithContext:completion:
XPC error for identityForPasscodeActivationUnlockWithContext:completion: %li
FRAMEWORK API: %s
XPC error for %s %li
FMDNSXPCConnectionCache Invalid configuration
lostModeIsActive = %d
%s : %@
Reading Managed Lost Mode file from: %@
managedLostModeDict %@
Managed lost mode type? %lu
Could not read managed lost mode file %@
Reading NeedsLocateAck Lost Mode file from: %@
needsLocateAckLostModeDict %@
NeedsLocateAck lost mode type? %lu
Could not read NeedsLocateAck lost mode file %@
Checking if device is in managed lost mode
Checking if device is in fmip lost mode
Checking if device is in client lost mode
Checking if device is in wipe lost mode
Checking if device is in needsLocateAck lost mode
Could not read needsLocateAck lost mode file %@
Device is in lost mode
lostModeInfo = %@
%s with lost mode info %@
%s: error - %@
Error updating managed lost mode info : %@
Managed lost mode info updated
Error updating managed lost mode info to disabled : %@
Managed lost mode info updated to disabled
Error updating NeedsLocateAck lost mode into to disabled : %@
NeedsLocateAck lost mode info updated to disabled
Username : %@, personID : %@
%s in context %lu
%s with %s token
%s for paired device %@ with %s token
disableFMIPUsingToken: token present: %i
%s for paired device %@
markPairedDeviceWithUDID: token present: %i
needsLostModeExitAuth = %d
didReceiveLostModeExitAuthToken: token present: %i
%s enabled %s
%s for paired devices %@
XPC error for startPlayingSoundForAccessory:duration:rampUpDuration:channels:completion: %li
accessory %@
playSoundForAccessory encountered an error : %@
playSoundForAccessory sound started
XPC error for stopPlayingSoundForAccessory:rampDownDuration:completion %li
stopSoundForAccessory encountered an error : %@
stopSoundForAccessory sound did stop
XPC error for waitForRoutableAccessory:timeout:completion: %li
waitForRoutableAccessory encountered an error : %@
Accessory became routable %@
XPC error for soundStoppedForAccessoryIdentifier: %li
XPC error for clearData:completion: %li
Exiting Lost Mode, request to stop the Play Sound.
XPC error for _updateManagedLostModeWithInfo: %li
updateManagedLostModeInfo encountered an error : %@
updateManagedLostModeInfo completed
XPC error for _updateNeedsLocateAckLostModeWithInfo: %li
updateNeedsLocateAckLostModeInfo encountered an error : %@
updateNeedsLocateAckLostModeInfo completed
Disabling FMIP...
Cannot get managed lost mode file on watch or simulator
Static URL %@
XPC error for playSoundWithMessage:completion: %li
message %@
playSoundWithMessage encountered an error : %@
playSoundWithMessage sound started
XPC error for stopSoundMessageWithCompletion: %li
stop message sound
stopSoundMessageWithCompletion encountered an error : %@
stopSoundMessageWithCompletion sound stopped
Shared file present. Writing new FMiP sate.
Updating shared file with lost mode - %lu
Shared file found. Returning FMiP active - %i
Shared file not found. Returning FMiP active as - NO
Shared file found. Returning lost mode type as - %lu
Shared file not found. Returning lost mode type as - FMDLostModeTypeNone
Could not write the shared file. Error - %@
Could not remove the shared file. Error - %@
XPC error for eraseDeviceWithCompletion: %li
eraseMacDeviceWithCompletion encountered an error : %@
eraseMacDeviceWithCompletion completed
XPC error for publishInfo:completion: %li
Post wipe pref path could not obtain mobile's home directory
XPC error for setDailyLocateReportEnabled: %li
XPC error for showDailyLocateReport: %li
Framework (Private) : activationLockVersionWithCompletion
XPC error for activationLockVersionWithCompletion: %li
Creating xpc connection with exportedInterface but no exportedObject
FMNSXPCConnection Connection interrupted %@
FMNSXPCConnection Connection invalidated %@
FMNSXPCConnection could not create remote object proxy %@
v16@?0q8
v24@?0@"NSString"8@"NSError"16
-[FMDDeviceIdentityFactory baaIdentityAttestationForSigningRequest:completion:]
-[FMDDeviceIdentityFactory baaIdentityAttestationForSigningRequest:completion:]_block_invoke
v24@?0@"FMDBAAAttestation"8@"NSError"16
v8@?0
FMD-NSXPC-Mods-Queue
v32@?0@"FMNSXPCConnection"8Q16^B24
sharedCache
T@"FMNSXPCConnectionCache",R,N
modsSerialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_modsSerialQueue
connectionsByServiceName
T@"NSMutableDictionary",&,N,V_connectionsByServiceName
com.apple.icloud.FindMyDevice.FMDFMIPManager
-[FMDFMIPManager lostModeIsActive]
-[FMDFMIPManager isManagedLostModeActive]
-[FMDFMIPManager isLostModeActive]
-[FMDFMIPManager lostModeInfo]
-[FMDFMIPManager enableLostModeWithInfo:]
not supported
-[FMDFMIPManager disableLostMode]
-[FMDFMIPManager enableManagedLostModeWithInfo:completion:]
You have passed in lostModeEnabled as NO. This is invalid
v16@?0@"NSError"8
-[FMDFMIPManager disableManagedLostModeWithLocatedMessage:completion:]
Device is not in managed lost mode. Cannot disable it.
-[FMDFMIPManager userDidAckManagedLostModeLocateWithCompletion:]
Device is not waiting for locate ack. Invalid state.
-[FMDFMIPManager playSoundWithOptions:completion:]
-[FMDFMIPManager deviceActivationDidSucceed]
-[FMDFMIPManager lockdownShouldDisableDeviceRestore]
-[FMDFMIPManager lockdownShouldDisableDevicePairing]
-[FMDFMIPManager fmipStateWithCompletion:]
-[FMDFMIPManager fmipAccountWithCompletion:]
-[FMDFMIPManager fmipAccount]
-[FMDFMIPManager didChangeFMIPAccountInfo:]
-[FMDFMIPManager enableFMIPInContext:]
-[FMDFMIPManager disableFMIPUsingToken:inContext:]
non-nil
disableFMIPUsingToken:inContext:
timed out
-[FMDFMIPManager disableFMIPUsingToken:inContext:completion:]
-[FMDFMIPManager disableFMIPUsingToken:forPairedDeviceWithUDID:withCompletion:]
-[FMDFMIPManager markAsMissingSupportedForPairedDeviceWithUDID:withCompletion:]
-[FMDFMIPManager markPairedDeviceWithUDID:asMissingUsingToken:withCompletion:]
-[FMDFMIPManager isActivationLockAllowedWithCompletion:]
-[FMDFMIPManager isActivationLockEnabledWithCompletion:]
-[FMDFMIPManager isActivationLockedWithCompletion:]
-[FMDFMIPManager enableActivationLockWithCompletion:]
-[FMDFMIPManager needsLostModeExitAuth]
-[FMDFMIPManager didReceiveLostModeExitAuthToken:]
-[FMDFMIPManager initiateLostModeExitAuthWithCompletion:]
-[FMDFMIPManager initiateLostModeExitAuthForIDSDeviceID:withCompletion:]
-[FMDFMIPManager lowBatteryLocateEnabledWithCompletion:]
-[FMDFMIPManager setLowBatteryLocateEnabled:withCompletion:]
-[FMDFMIPManager userNotifiedOfActivationLockForAllPairedDevices]
-[FMDFMIPManager userNotifiedOfActivationLockForPairedDevices:]
-[FMDFMIPManager signatureHeadersWithData:completion:]
-[FMDFMIPManager soundStoppedForAccessoryIdentifier:]
-[FMDFMIPManager clearData:completion:]
-[FMDFMIPManager getAccessoriesWithCompletion:]
-[FMDFMIPManager _forceFMWUpgradeAlertWithCompletion:]
managedLostModeFileURL
T@"NSURL",&,N,V_managedLostModeFileURL
needsLocateAckLostModeFileURL
T@"NSURL",&,N,V_needsLocateAckLostModeFileURL
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
com.apple.icloud.findmydeviced.notbackedup
com.apple.icloud.findmydeviced
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
accessoryIdentifier
T@"NSObject<FMDIdentifiable>",R,N
audioSafetyStatus
TQ,R,N
audioRoutingIdentifier
T@"NSString",R,N
audioURL
T@"NSURL",R,N
playingSound
TB,R,N
FMDGenericAccessory(0x%lx), accessoryIdentifier - %@, audioRoutingIdentifier - %@, audioURL - %@
supportsSecureCoding
TB,R
T@"FMDAccessoryIdentifier",&,N,V_accessoryIdentifier
T@"NSString",&,N,V_audioRoutingIdentifier
T@"NSURL",&,N,V_audioURL
com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService
com.apple.icloud.FindMyDevice.FindMyDeviceUserNotificationsXPCService
com.apple.icloud.FindMyDevice.FindMyDeviceBTDiscoveryXPCService
com.apple.icloud.FindMyDevice.FindMyDeviceIdentityXPCService
com.apple.icloud.FindMyDevice.FindMyDeviceEmergencyCallInfoPublisherXPCService
com.apple.icloud.FindMyDevice.FindMyDeviceEraseXPCService
serviceName
options
remoteInterface
T@"NSXPCInterface",R,N
exportedInterface
machService
btDiscoveryConfiguration
T@"FMNSXPCConnectionConfiguration",R,N
userNotificationConfiguration
identityConfiguration
helperConfiguration
eraseDeviceServiceConfiguration
fmipConfiguration
emergencyCallInfoPublisherConfiguration
T@"NSString",&,N,V_serviceName
T@"NSXPCInterface",&,N,V_remoteInterface
T@"NSXPCInterface",&,N,V_exportedInterface
TQ,N,V_options
TB,N,V_machService
vibrate
TB,N,V_vibrate
soundName
T@"NSString",&,N,V_soundName
soundDuration
Ti,N,V_soundDuration
serverHost
%@(0x%lx) %@
T@"NSString",C,N,V_serverHost
com.apple.icloud.FindMyDevice.stateManager
fmipSharedFileStaticURL
T@"NSURL",&,V_fmipSharedFileStaticURL
stateManagerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_stateManagerQueue
lostModeEnabled
disableSlideToUnlock
message
phoneNumber
facetimeCapable
footnoteText
lostModeType
FMDLostModeInfo(0x%lx) message - %@, phoneNum - %@, facetimeCapable - %d, footnote - %@, inLostMode - %d, disableUnlock - %d, type - %ld
TQ,N,V_lostModeType
TB,N,V_lostModeEnabled
TB,N,V_disableSlideToUnlock
T@"NSString",&,N,V_message
T@"NSString",&,N,V_phoneNumber
TB,N,V_facetimeCapable
T@"NSString",&,N,V_footnoteText
FMNSXPCCachedConnectionSerialQueue
connection
T@"FMNSXPCConnection",&,N,V_connection
failureBlock
T@?,C,N,V_failureBlock
didInvalidate
T@?,C,N,V_didInvalidate
com.apple.AOSNotification.FMIPStateDidChange
com.apple.AOSNotification.ActivationLockAllowedMayHaveChanged
com.apple.AOSNotification.ActivationLockStateDidChange
com.apple.AOSNotification.FMIPLowBatteryLocateStateDidChange
com.apple.icloud.fmip.lostmode.enable
com.apple.icloud.fmip.lostmode.stopAlarm
com.apple.icloud.fmip.fmwEnabled
com.apple.icloud.fmip.accessoriesChanged
com.apple.findmy
username
personID
com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.PlaySoundError
FMDFMIPManagerUnregisterErrorDomain
com.apple.icloud.FindMyDevice
com.apple.icloud.findmydeviced.watch.playsoundstarted
com.apple.icloud.findmydeviced.watch.playsoundstopped
com.apple.icloud.findmydeviced.public.notbackedup
com.apple.icloud.findmydeviced.postwipe
com.apple.icloud.findmydeviced.watch
com.apple.icloud.findmydeviced.watch.notbackedup
com.apple.icloud.findmydeviced.LoggingPrefs
com.apple.icloud.findmydeviced.activationlockstatechanged
-[FMDEmergencyCallInfoPublisher initWithConfiguration:]
-[FMDEmergencyCallInfoPublisher publishInfo:completion:]
publisherConfig
T@"FMDEmergencyCallInfoPublisherConfiguration",&,N,V_publisherConfig
v32@?0@8@16^B24
dictionaryValue
T@"NSDictionary",R,N
dictionary
T@"NSDictionary",&,N,V_dictionary
valid
TB,R,N,GisValid
string
T@"NSString",&,N,V_string
BT_%@
%@_%@
FMIPLostModeInfo
ClientLostModeInfo
FMIPWipeLostModeInfo
lostModeMessage
lostModeOwnerNumber
lostModeFacetimeCapable
lostModeFootnoteTextPrefKey
/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.FMIPAccounts.plist
mobile
fmipActive
fmipLostModeType
kFMDEmergencyCallInfoPublisherConfigKey
kFMDEmergencyCallInfoPublisherInfoKey
-[FMDFMIPManager(Private) disableBiometricIDForLostModeWithCompletion:]
-[FMDFMIPManager(Private) setDailyLocateReportEnabled:]
-[FMDFMIPManager(Private) showDailyLocateReport]
-[FMDFMIPManager(Private) addNotificationRequest:completion:]
FMNSXPCConnectionErrorDomain
T@"NSXPCConnection",&,N,V_connection
future
T@"FMFuture",&,N,V_future
_testMockConnection
TB,N,V__testMockConnection
state
Tq,R,N
useObliteration
brickDevice
customDelay
maxDelayInterval
<%@: %p> useObliteration: %i, brickDevice - %i, maxDelay - %f, customDelay - %f
TB,N,V_useObliteration
TB,N,V_brickDevice
Td,N,V_customDelay
Td,N,V_maxDelayInterval
attestation
T@"NSData",&,N,V_attestation
signature
T@"NSData",&,N,V_signature
dataToSign
validityInMinutes
useSCRT
T@"NSData",&,N,V_dataToSign
TB,N,V_useSCRT
Tq,N,V_validityInMinutes
FMDDeviceIdentityFactory
FMNSXPCConnectionCache
FMDFMIPManager
FMDAccessory
NSObject
FMDAudioAccessory
FMDGenericAudioAccessory
NSSecureCoding
NSCoding
FindMyDeviceIdentityXPCInterface
FindMyDeviceEmergencyCallInfoPublisherXPCInterface
FindMyDeviceUserNotificationsXPCInterface
FindMyDeviceBTDiscoveryXPCInterface
FindMyDeviceBTDiscoveryDelegateXPCInterface
FMDFMIPProtocol
FindMyDeviceHelperXPCInterface
FindMyDeviceEraseXPCServiceProtocol
FMNSXPCConnectionConfiguration
FMNSXPCConnectionConfigurable
FMDGenericMessage
FMDEmergencyCallInfoPublisherConfiguration
FMDFMIPSharedStateManager
FMDLostModeInfo
FMNSXPCCachedConnection
FMNSXPCConnecting
FMDEraseProxy
FMDEmergencyCallInfoPublisher
FMDVolatileMetaDataRecord
FMDDictionaryRepresentable
FMDAccessoryIdentifier
FMDCodable
NSCopying
FMDIdentifiable
NSString
FMDBluetoothAccessory
FMDSupportedAccessory
Private
FMNSXPCConnection
FMDEraseOptions
FMDBAAAttestation
FMDIdentitySigningRequest
sharedCache
identityConfiguration
resumeConnectionWithConfiguration:
errorWithDomain:code:userInfo:
addFailureBlock:
remoteObjectProxy
invalidate
identityForPasscodeActivationUnlockWithContext:completion:
baaIdentityAttestationForSigningRequest:completion:
init
dictionary
modsSerialQueue
connectionsByServiceName
allValues
enumerateObjectsUsingBlock:
dealloc
serviceName
objectForKeyedSubscript:
state
initWithConfiguration:
setObject:forKeyedSubscript:
removeObjectForKey:
initWithFMNSXPCConnection:
setModsSerialQueue:
setConnectionsByServiceName:
.cxx_destruct
_modsSerialQueue
_connectionsByServiceName
_isRunningAsMobileUser
synchronizeDomain:
dictionaryForKey:inDomain:
objectForKey:
boolValue
_managedLostModeType
_needsAckLostModeType
_checkLostModeInSharedContainer
getManagedLostModeFileURL
fm_dictionaryWithContentsOfURL:error:
integerValue
fm_isFileNotFoundError
getNeedsLocateAckLostModeFileURL
setLostModeEnabled:
setMessage:
setPhoneNumber:
setFacetimeCapable:
setFootnoteText:
setDisableSlideToUnlock:
setLostModeType:
description
newErrorForCode:message:
code
lostModeEnabled
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
_updateManagedLostModeWithInfo:completion:
lostModeInfo
lostModeType
_stopAlarm
_updateNeedsLocateAckLostModeWithInfo:completion:
initWithObjectsAndKeys:
initWithDescription:andTimeout:
signal
_disableFMIPUsingToken:inContext:completion:
wait
timeoutOccurred
_initiateLostModeExitAuthForIDSDeviceID:withCompletion:
_postWipePrefPath
arrayWithObjects:count:
helperConfiguration
copyAccessory:
startPlayingSoundForAccessory:duration:rampUpDuration:channels:completion:
stopPlayingForAccessory:rampDownDuration:completion:
waitForRoutableAccessory:timeout:completion:
fmipConfiguration
soundStoppedForAccessoryIdentifier:
clearData:completion:
dictionaryWithObject:forKey:
updateManagedLostModeInfo:completion:
updateNeedsLocateAckLostModeInfo:completion:
managedLostModeFileURL
needsLocateAckLostModeFileURL
startPlayingSoundForMessage:completion:
stopSoundMessageWithCompletion:
sharedInstance
lostModeIsActive
isManagedLostModeActive
isLostModeActive
enableLostModeWithInfo:
disableLostMode
enableManagedLostModeWithInfo:completion:
disableManagedLostModeWithLocatedMessage:completion:
userDidAckManagedLostModeLocateWithCompletion:
playSoundWithOptions:completion:
deviceActivationDidSucceed
lockdownShouldDisableDeviceRestore
lockdownShouldDisableDevicePairing
fmipStateWithCompletion:
fmipAccountWithCompletion:
fmipAccount
didChangeFMIPAccountInfo:
enableFMIPInContext:
disableFMIPUsingToken:inContext:
disableFMIPUsingToken:inContext:completion:
disableFMIPUsingToken:forPairedDeviceWithUDID:withCompletion:
markAsMissingSupportedForPairedDeviceWithUDID:withCompletion:
markPairedDeviceWithUDID:asMissingUsingToken:withCompletion:
isActivationLockAllowedWithCompletion:
isActivationLockEnabledWithCompletion:
isActivationLockedWithCompletion:
enableActivationLockWithCompletion:
needsLostModeExitAuth
didReceiveLostModeExitAuthToken:
initiateLostModeExitAuthWithCompletion:
initiateLostModeExitAuthForIDSDeviceID:withCompletion:
lowBatteryLocateEnabledWithCompletion:
setLowBatteryLocateEnabled:withCompletion:
userNotifiedOfActivationLockForAllPairedDevices
userNotifiedOfActivationLockForPairedDevices:
pathsToPreserveAcrossWipe
signatureHeadersWithData:completion:
stopPlayingSoundForAccessory:rampDownDuration:completion:
getAccessoriesWithCompletion:
_forceFMWUpgradeAlertWithCompletion:
playSoundWithMessage:completion:
setManagedLostModeFileURL:
setNeedsLocateAckLostModeFileURL:
serialQueue
setSerialQueue:
_managedLostModeFileURL
_needsLocateAckLostModeFileURL
_serialQueue
boolForKey:inDomain:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
accessoryIdentifier
setAccessoryIdentifier:
updateAudioAsset:
updatePlaybackChannels:
audioSafetyStatus
audioRoutingIdentifier
audioURL
playingSound
shouldStopSoundNow
setAudioRoutingIdentifier:
setAudioURL:
decodeObjectOfClass:forKey:
stringWithFormat:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_accessoryIdentifier
_audioRoutingIdentifier
_audioURL
setServiceName:
setOptions:
setMachService:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteInterface:
publishInfo:completion:
addNotificationRequest:completion:
startDiscovery
stopDiscovery
didEndDiscoveryWithError:
didDiscoverDevice:
didLoseDevice:
setExportedInterface:
enableLostModeWithInfo:usingCallback:
disableLostModeUsingCallback:
deviceActivationDidSucceedUsingCallback:
getLockdownShouldDisableDeviceRestoreUsingCallback:
getLockdownShouldDisableDevicePairingUsingCallback:
getFMIPStateUsingCallback:
getFmipAccountUsingCallback:
didChangeFMIPAccountInfo:usingCallback:
enableFMIPInContext:usingCallback:
disableFMIPUsingToken:inContext:usingCallback:
disableFMIPUsingToken:forPairedDeviceWithUDID:usingCallback:
markAsMissingSupportedForPairedDeviceWithUDID:usingCallback:
markPairedDeviceWithUDID:asMissingUsingToken:callback:
isActivationLockAllowedUsingCallback:
isActivationLockEnabledUsingCallback:
isActivationLockedUsingCallback:
enableActivationLockUsingCallback:
activationLockVersionWithCompletion:
didReceiveLostModeExitAuthToken:usingCallback:
initiateLostModeExitAuthForApp:idsDeviceID:usingCallback:
lowBatteryLocateEnabledUsingCallback:
setLowBatteryLocateEnabled:usingCallback:
_forceFMWUpgradeAlertUsingCallback:
setDailyLocateReportEnabled:
showDailyLocateReport
disableBiometricIDWithCompletion:
eraseDeviceWithOptions:completion:
emergencyCallInfoPublisherConfiguration
userNotificationConfiguration
btDiscoveryConfiguration
eraseDeviceServiceConfiguration
options
remoteInterface
exportedInterface
machService
_machService
_serviceName
_remoteInterface
_exportedInterface
_options
vibrate
decodeBoolForKey:
setVibrate:
soundName
setSoundName:
soundDuration
decodeIntForKey:
setSoundDuration:
encodeBool:forKey:
encodeInt:forKey:
_vibrate
_soundDuration
_soundName
setServerHost:
serverHost
_serverHost
_fmipSharedFileURL
_readSharedInfo
numberWithBool:
mutableCopy
setObject:forKey:
_writeSharedInfo:
numberWithUnsignedInteger:
defaultManager
path
fileExistsAtPath:
initWithContentsOfURL:
writeToURL:error:
removeItemAtURL:error:
fmipSharedFileStaticURL
setFMiPActive:
recalculateLostMode
fmipActive
_removeSharedInfo
setFmipSharedFileStaticURL:
stateManagerQueue
setStateManagerQueue:
_fmipSharedFileStaticURL
_stateManagerQueue
unsignedIntegerValue
disableSlideToUnlock
message
phoneNumber
facetimeCapable
footnoteText
_lostModeEnabled
_disableSlideToUnlock
_facetimeCapable
_message
_phoneNumber
_lostModeType
_footnoteText
setConnection:
setFailureBlock:
connection
failureBlock
_invalidate
didInvalidate
setDidInvalidate:
_connection
_didInvalidate
_failureBlock
publisherConfig
setPublisherConfig:
_publisherConfig
fm_dictionaryByDeeplySettingValuesForKeysWithDictionary:
enumerateKeysAndObjectsUsingBlock:
setDictionary:
initWithDictionary:
dictionaryValue
appendMetaData:
_dictionary
string
isEqualToString:
length
setString:
allocWithZone:
stringValue
encodeString:forKey:
decodeStringForKey:
copyWithZone:
encodeWithFMDCoder:error:
initWithFMDCoder:error:
objectType
objectTypeKey
isValid
_string
initWithString:
computeAccessoryIdentifierWithAddress:
dataUsingEncoding:
fm_sha256Hash
fm_hexString
lowercaseString
initWithAddress:
initWithDeviceVendor:deviceProductId:
fileURLWithPath:isDirectory:
fm_preferencesPathURLForDomain:
_quickFetchFMIPEnabledstate
disableBiometricIDForLostModeWithCompletion:
initWithConfiguration:exportedObject:
destroyXPCConnection
setFuture:
initWithMachServiceName:options:
initWithServiceName:
setRemoteObjectInterface:
setExportedObject:
future
finishWithError:
setInterruptionHandler:
setInvalidationHandler:
resume
remoteObjectProxyWithErrorHandler:
domain
_testMockConnection
set_testMockConnection:
__testMockConnection
_future
encodeDouble:forKey:
decodeDoubleForKey:
useObliteration
brickDevice
maxDelayInterval
customDelay
setUseObliteration:
setBrickDevice:
setCustomDelay:
setMaxDelayInterval:
_useObliteration
_brickDevice
_customDelay
_maxDelayInterval
setAttestation:
setSignature:
attestation
signature
initWithAttestation:signature:
_attestation
_signature
setDataToSign:
setValidityInMinutes:
setUseSCRT:
dataToSign
validityInMinutes
numberWithInteger:
useSCRT
initWithData:
_useSCRT
_dataToSign
_validityInMinutes
v32@0:8@16@?24
@16@0:8
v16@0:8
@24@0:8@16
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
B16@0:8
Q16@0:8
v24@0:8@?16
@24@0:8Q16
@32@0:8@16Q24
v40@0:8@16Q24@?32
v40@0:8@16@24@?32
v28@0:8B16@?20
v56@0:8@16d24d32@40@?48
v40@0:8@16d24@?32
v32@0:8Q16@?24
@28@0:8i16@20
@"NSURL"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSObject<FMDIdentifiable>"16@0:8
B24@0:8@"<FMDAsset>"16
B24@0:8@"NSArray"16
@"NSURL"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"FMDAccessoryIdentifier"
@"NSString"
Vv32@0:8@16@?24
Vv32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
Vv32@0:8@"FMDIdentitySigningRequest"16@?<v@?@"FMDBAAAttestation"@"NSError">24
Vv32@0:8@"NSDictionary"16@?<v@?@"NSError">24
Vv32@0:8@"FMDUserNotificationContent"16@?<v@?@"NSError">24
Vv24@0:8@16
Vv24@0:8@"NSError"16
Vv24@0:8@"NSObject<FMDBluetoothDiscoveryDevice>"16
Vv24@0:8@?16
Vv32@0:8Q16@?24
Vv40@0:8@16Q24@?32
Vv40@0:8@16@24@?32
v20@0:8B16
Vv32@0:8@"FMDLostModeInfo"16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv24@0:8@?<v@?B@"NSError">16
Vv24@0:8@?<v@?Q@"NSError">16
Vv24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8Q16@?<v@?@"NSError">24
Vv40@0:8@"NSString"16Q24@?<v@?@"NSError">32
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSDictionary"@"NSError">24
Vv24@0:8@?<v@?@"NSError"@"NSArray">16
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
Vv24@0:8@"NSString"16
Vv56@0:8@16d24d32@40@?48
Vv40@0:8@16d24@?32
Vv56@0:8@"FMDGenericAudioAccessory"16d24d32@"NSArray"40@?<v@?@"NSError">48
Vv40@0:8@"FMDGenericAudioAccessory"16d24@?<v@?@"NSError">32
Vv40@0:8@"<FMDAudioAccessory>"16d24@?<v@?@"NSError">32
Vv32@0:8@"FMDGenericMessage"16@?<v@?@"NSError">24
v32@0:8@"FMDEraseOptions"16@?<v@?@"NSError">24
@"NSXPCInterface"16@0:8
v24@0:8Q16
@"NSXPCInterface"
i16@0:8
v20@0:8i16
v24@0:8@?<v@?q>16
@?16@0:8
@"FMNSXPCConnection"
@"FMDEmergencyCallInfoPublisherConfiguration"
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@"NSDictionary"
@24@0:8^{_NSZone=}16
B32@0:8@16^@24
@32@0:8@16^@24
B32@0:8@"<FMDEncoder>"16^@24
@32@0:8@"<FMDDecoder>"16^@24
@32@0:8@16@24
q16@0:8
@"NSXPCConnection"
@"FMFuture"
d16@0:8
v24@0:8d16
@"NSData"
v24@0:8q16
