?ffffff
?333333
TimeValuePair
AXBAccessibilityManager
AXBBlueLightManager
AXBDisplayFilterManager
AXUIClientDelegate
NSObject
AXBEventManager
AXBInternalBundleLoaderManager
AXBGuidedAccessManager
MCProfileConnectionObserver
AXBHardwareDisplayModifier
AXBHardwareKeyboardsManager
AXBLocalizationCaptionController
AXBLookingGlassManager
__AXBValidation
__PUIProgressWindowAccessibility_super
SafeCategory
PUIProgressWindowAccessibility
AXBSpeakThisManager
AXBHoverTextManager
AXBTouchAccommodationsController
AXBAssistiveTouchManager
AXBZoomTouchManager
BBOverride
AXBackBoardGlue
AXBackBoardServerInstanceDelegate
AXBackBoardServerInstance
__BKAccelerometerInterfaceAccessibility_super
BKAccelerometerInterfaceAccessibility
__BKUserEventTimerAccessibility_super
OS_dispatch_queue
OS_dispatch_object
BKUserEventTimerAccessibility
Td,N,V_reduceWhitePointRampTime
T#,R
_accessibilityIsInternalInstall
T@"AXUIClient",&,N,V_displayFilterUIClient
_eventListeners
T@"NSString",C,N,V_eventTapIdentifier
_handleConvertPointToContextId:
T@,&,N,Vvalue
_handleSetZoomInitialFocusRect:
TB,N,V_didEnableHWFilters
_notifyServerStickyKeysDisabled
TB,N,V_homeIsDown
_reduceWhitePointRampStartValue
TB,N,V_invertColorsWasEnabled
_server
TB,N,V_shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
_speakThisQueue
TQ,R
_updateEventTap
T^{__MADisplayFilter=},&,N,V_reduceWhitePointRampDownFilter
backBoardServerInstanceIfExists
Td,N,V_lastCommittedReduceWhitePointValue
bundleForClass:
Td,N,V_reduceWhitePointRampStartTime
containsString:
Td,N,VfireTime
dealloc
__os_unfair_lock__
homeClickSwallowedInSpringBoard
_accessibilityApplicationForContextId:
initWithPID:queue:deathHandler:
_accessibilityCarPlayApp
keyCode
_accessibilityConvertHostedViewPoint:fromContextId:displayId:
mainAccessQueue
_accessibilityHitTest:
payload
_accessibilityPerformValidations:
pidForBundleID:
_accessibilityRepostEvent:
release
_accessibilitySetHIDEventTapCallback:
removeObserver:
_accessibilitySystemApp
serverIfRunning
_accessibilitySystemAppApplicationPid
setDisplayFilterFromLastUpdate:
_accessibilityUIServerDeathWatcher
setPid:
_accessibilityViewPointFromHostedViewContext:displayId:
systemEventPort
_applyMatrixFilter:whitePointReduction:
.cxx_destruct
_accessibilityEventTapCallback:
T@"<AXBackBoardServerInstanceDelegate>",W,N,V_delegate
_areTouchAccommodationsInEffect
T@"AXUIClient",&,N,V_touchAccommodationsClient
_handleConvertFrameToContextId:
T@"NSString",R,C
_handleGetZoomInitialFocusRect:
TB,N,V_accelerometerDisabled
_inPreBoardMode
TB,N,V_grayscaleWasEnabled
_reduceWhitePointRampDownFilter
TB,N,V_ignoringNotifications
_runtimeManager
TB,N,V_reduceWhitePointWasEnabled
_slowKeysAcceptanceDelayChanged
TB,N,V_softwareFiltersEnabled
_touchAccommodationsEverEnabled
TVOutDisplay
additionalFlags
Td,N,V_lastCommittedReduceWhitePointEnabledStatus
blueLightClient
Td,N,V_reduceWhitePointRampEndValue
bundleWithPath:
Td,N,V_reduceWhitePointRampStartValue
contextIdForPosition:displayId:
UTF8String
hideHoldDurationTripleClickHelp
_accelerometerDisabled
initWithDomain:
_accessibilityAssistiveTouchApplication
isProxy
_accessibilityCarPlayApplicationPid
keyInfo
_accessibilityDisplayRequiresRotateForPoints:
numberWithBool:
_accessibilityNativeFocusedApplication
_accessibilityProcessExternHIDEvent:
processEvent:sender:dispatcher:
_accessibilitySetEventTapCallback:
removeEventTap:
_accessibilitySpringBoardApplication
safeBoolForKey:
_accessibilitySystemAppApplicationBundleId
serviceMachPort
_accessibilityUIServerApplication
setFullKeyboardAccessDaemonPID:
_accessibilityUnregister
showHoldDurationTripleClickHelp
_allowSoftwareFilters
valueWithPoint:
_assistiveTouchCapture:
_astDeathWatcher
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:secureName:
_axDesiredMode
_axDesiredTimeout
_axElementForUID:
_axIsTimerDisabled
_axPreferenceAsMobile:
_axSetDesiredMode:
_axSetDesiredTimeout:
_axSetTimerDisabled:
_blueLightStatusEnabled
_brightnessClient
_clientIdentifier
_commonEventRepForTouchEventWithType:location:force:flags:contextId:
_delegate
_deliveryManager
_didEnableHWFilters
_displayConvertFromCAScreen:
_displayConvertFromCAScreen:withDisplayIntegerId:
_displayConvertToCAScreen:
_displayConvertToCAScreen:withDisplayIntegerId:
_displayFilterFromLastUpdate
_displayFilterUIClient
_eventListenerEnabled
_eventTapClients
_eventTapIdentifier
_fkaDeathWatcher
_forceSoftwareFilters
_gaxBackboard
_gaxCapture:
_grayscaleWasEnabled
_guidedAccessServer
_handleAXUIServerPID:
_handleAdaptationEnabled:
_handleAssistiveTouchPID:
_handleBlueLightStatusEnabled:
_handleBrightnessFiltersEnabled:
_handleContextHostingIdForContextId:
_handleContextIdForPosition:
_handleConvertFrameFromContextId:
_handleConvertFrameFromContextIdToContextId:
_handleConvertPointFromContextId:
_handleDisableBrightnessFilters:
_handleEventListenerRegistration:
_handleFrameRateLimit
_handleFullKeyboardAccessDaemonPID:
_handleGetGuidedAccessAvailability:
_handleGetLastSetColorFilter:
_handleGuidedAccessAutomationCommand:completion:
_handleGuidedAccessCurrentModeAndSessionApp:
_handleGuidedAccessEffectiveAppBundleIdentifier:
_handleGuidedAccessIgnoredRegions:
_handleHearingAidServerPID:
_handleHomeClickSwallowedForGuidedAccess:
_handleInCheckerBoardMode:
_handleInPreBoardMode:
_handleInvertColorsChange:
_handleIsGuidedAccessActive:
_handleIsGuidedAccessInWorkspace:
_handleIsGuidedAccessSelfLockedToRequestingApp:
_handleIsGuidedAccessUnmanagedSelfLocked:
_handleIsRestrictedForAAC:
_handleItemChooserVisible:
_handleLoadGAXBundleForUnmanagedASAM:
_handleLockScreenDimTimerEnabled:
_handlePidForSpecialCases:
_handlePostEvent:
_handleRegisterAccessibilityUIServerPID:
_handleRegisterAssistiveTouchPID:
_handleRegisterFullKeyboardAccessDaemonPID:
_handleRegisterHearingAidServerPID:
_handleRegisterSiriViewServicePID:
_handleRegisterZoomConflict:
_handleResetAccessibilityFeatures:
_handleRestoreCachedBrightnessFilters:
_handleSessionIsLoginSession:
_handleSetCapsLockLightOn:
_handleSetGuidedAccessEnabledByRequestingApp:completion:
_handleSetInCheckerBoardMode:
_handleSetInPreBoardMode:
_handleSetIsSpeakScreenHighlightVisible:
_handleSetSessionIsLoginSession:
_handleSetSwitchControlHasScreenSwitch:
_handleSetSwitchControlRendersDeviceUnusable:
_handleSupportsAdaptation:
_handleToggleGuidedAccess:
_handleTripleClickHomeButtonFired:
_handleUserEventOccurred:
_handleZoomAdjustment:
_heardDeathWatcher
_hideHoldDurationTripleClickHelp
_homeIsDown
_ignoringNotifications
_inCheckerBoardMode
_initServer
_initialZoomFocusRect
_initializeHandlers
_inspectorCapture:
_invertColorsEnabled
_invertColorsWasEnabled
_iosAccessibilityAttributeValue:element:
_iosAccessibilityAttributeValue:forParameter:
_iosAccessibilityPerformAction:withValue:fencePort:
_iosAccessibilitySetValue:forAttribute:
_isDisplayBacklightOff
_isSerializableAccessibilityElement
_kickstartAssistiveTouchIfNeeded
_lastCommittedReduceWhitePointEnabledStatus
_lastCommittedReduceWhitePointValue
_lastHIDRecord
_loadAuxiliaryBundles
_loadBackboardServerBundle
_loadInternalBundle
_normalizeEventForContext:
_notificationToken
_notifyServerStickyKeyUpdatedForKeycode:usagePage:down:up:locked:
_notifyServerStickyKeysToggledViaShift
_notifySpeakThisOfSettingsChange
_overrideGestureRecognitionState
_processHIDEvent:
_processPassiveEventQueue
_reduceWhitePointRampEndValue
_reduceWhitePointRampStartTime
_reduceWhitePointRampTime
_reduceWhitePointWasEnabled
_registerForTouchAccommodationsAXSettingsUpdate
_releasePendingEvents:
_repeatAggregateStatistics
_repostNotificationIfNeeded
_screenReaderCapture:
_sendCancelTouchEvent
_sendEventRep:
_sendFingerEvent:location:force:flags:contextId:
_sendPressFingerEvent:location:force:flags:contextId:secureName:
_sendStylusEvent:location:force:altitude:azimuth:flags:contextId:
_sessionIsLoginSession
_setAXPreferenceAsMobile:
_setCapsLockLightOn:
_setDeviceOrientation:
_setDeviceOrientationCapability:
_shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
_shouldValidateEntitlements
_showHoldDurationTripleClickHelp
_showLookingGlassMenu
_showingBootUI
_slowKeysEnabledChanged
_softwareFiltersEnabled
_startPassiveResendThread
_startWatchingForDeathOfAccessibilityUIServerPID
_stickyKeysClient
_stickyKeysEnabledChanged
_stickyKeysShiftToggleChanged
_touchAccommodationsClient
_touchAccommodationsQueue
_uiServerDeathWatcher
_undoContextShiftedPoints:
_updateBrightnessFilters:
_updateCoreSupport
_updateFeature
_updateGrayScaleSettings
_updateKeyboardService:
_updateLookingGlassServicesIfNeeded
_updateMatrixSupport
_updateNotificationCache
_updateSettings:
_updateStateForKeyboardEvent:
_updateTouchAccommodationsSetting
_userDevice
_userEventOccurred
_wasEnabled
_whitePointRampDown
_zoomListeners
accelerometerDisabled
accessibilityAssistiveTouchPid
accessibilityConvertHostedViewFrame:fromContextId:displayId:
accessibilityConvertHostedViewFrame:toContextId:displayId:
accessibilityConvertHostedViewPoint:fromContextId:displayId:
accessibilityConvertHostedViewPoint:toContextId:displayId:
accessibilityFrame
accessibilityFullKeyboardAccessDaemonPid
accessibilityLabel
accessibilityLiveCaptionsPid
accessibilityTraits
accessibilityUIServerPid
accessibilityValue
adaptationClient
adaptationEnabled
addObject:
addObserver:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addRotorOptionsForLoginSession
addTarget:selector:
allJobLabels
allObjects
allowsTripleClickSheet
anyObject
array
arrayWithCapacity:
arrayWithObjects:count:
assistiveTouchPid
auditToken
autorelease
availabilityForExternalRequestWithSpringboardParameters:
axArrayByIgnoringNilElementsWithCount:
ax_filteredArrayUsingBlock:
backBoardServerInstance
blueLightStatusEnabled
boolForKey:
boolValue
brightnessFiltersEnabled
build:
bundleWithURL:
buttonRepresentationWithType:
class
classicInvertColors
clearLastRecordPostedThrougHID
clientId
clientPort
clientPortAtPosition:
clientPortForContextId:
clientPortOfContextId:
colorFilterFromLastUpdate
configureZoomForLoginSession
conformsToProtocol:
connectWithError:
connectionWithServiceWasInterruptedForUserInterfaceClient:
contextId
contextIdAtPosition:
contextIdForDisplayPoint:
contextIdHosterForContextId:
contextIdHostingContextId:
controller
convertFrame:fromContextId:displayId:
convertFrame:toContextId:displayId:
convertPoint:fromContextId:
convertPoint:fromContextId:displayId:
convertPoint:toContextId:
convertPoint:toContextId:displayId:
copy
copyClientForDestination:
copyClientForTaskPort:
count
countByEnumeratingWithState:objects:count:
currentDisplayLinkManager
currentGuidedAccessModeForBackboardServer
currentHandler
currentSessionApp
currentThread
dataRepresentation
dataWithBytes:length:
date
debugDescription
defaultCenter
defaultManager
delegate
description
destinationsForEvent:sender:
detachNewThreadSelector:toTarget:withObject:
dictionary
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didEnableHWFilters
didUpdateAccessibilityUIServerPID
disableAccessibility
disableAllFilters
disableBrightnessFilters
dispatchEventRepresentationToClient:
displayConvertFromCAScreen:withDisplayIntegerId:
displayConvertToCAScreen:withDisplayIntegerId:
displayFilterFromLastUpdate
displayFilterUIClient
displayId
displayType
displayWithDisplayId:
displays
distantFuture
doubleValue
effectiveBoolValueForSetting:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
eventTapIdentifier
eventType
fakeTouchScaleEventRepresentation:
fileURLWithPath:
fireTime
firstObject
firstPath
flags
floatValue
forceLoadGAXBundle
getBlueLightStatus:
getBytes:length:
getEnabled
getZoomBundlePrincipalClassForcingLoad:
grayscaleWasEnabled
handInfo
handleFailureInFunction:file:lineNumber:description:
handleGuidedAccessAutomationCommand:completion:
hasPrefix:
hash
hearingAidServerPid
hidClientConnectionManager
hideSpeechController:
homeIsDown
identifier
ignoreLogging
ignoringNotifications
inGuidedAccess
indexOfObjectPassingTest:
init
initWithIdentifier:serviceBundleName:
initWithKey:payload:
initWithPort:
initWithServiceName:perPidService:
initWithUTF8String:
initialize
initializeAccessibility
initializeAccessibilityMonitor
initializeMonitor
initializeZoomMonitor
installEventTap:identifier:type:
installKeyboardEventTap:identifier:matchingServiceHandler:
installSafeCategory:canInteractWithTargetClass:
intValue
integerValue
invalidate
invertColorsWasEnabled
invertsColors
isAccessibilityElement
isDisplayBacklightOff
isEqual:
isEqualToString:
isExternal
isGrayscale
isKindOfClass:
isMainThread
isMemberOfClass:
isRestrictedForAAC
isSelfLockedToAppWithIdentifier:
isSpotlightVisible
isUnmanagedSelfLocked
keyRepresentationWithType:
kickoffAggregateStatistics
lastCommittedReduceWhitePointEnabledStatus
lastCommittedReduceWhitePointValue
lastRecordPostedThroughHID
length
load
loadAndReturnError:
loadGAXBundleForUnmanagedASAM
localizationQACaptionMode
localizedStringForKey:value:table:
localizedStringWithFormat:
location
lock
machPortForPoint:
mainDisplay
mainQueue
name
newHIDEventRef
null
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observerClientDied
orientationManager:deviceOrientationMayHaveChanged:changeSource:isDeviceOrientationLocked:
originalType
pathAttributes
pathExtension
pathIndex
pathLocation
pathWindowContextID
paths
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performValidations:withPreValidationHandler:postValidationHandler:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
pointValue
postEvent:systemEvent:afterNamedTap:namedTaps:
postNotificationName:object:
postNotificationName:object:userInfo:
preciseLocationX
preciseLocationY
principalClass
processExternalHIDEvent:
processIdentifier
processInfo
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
rectValue
reduceWhitePointRampDownFilter
reduceWhitePointRampEndValue
reduceWhitePointRampStartTime
reduceWhitePointRampStartValue
reduceWhitePointRampTime
reduceWhitePointWasEnabled
registerEventListener:
registerUpdateBlock:forRetrieveSelector:withListener:
removeAllHandlersForTarget:
removeObjectAtIndex:
removeObserver:name:object:
removeTarget:selector:
replayWithName:attempts:interval:async:queue:replayBlock:completion:
replayer
representationWithData:
resetAccessibilityFeatures
resetAccessibilityUIHitPort
resetAssistiveTouchHitPort
resetTimer:mode:
respondsToSelector:
restoreCachedBrightnessFilters
retain
retainCount
runMatchingServiceHandlerForEventTap:
safeArrayForKey:
safeCategoryBaseClass
safeCategoryTargetClassName
safeFloatForKey:
safeStringForKey:
safeUnsignedIntForKey:
safeValueForKey:
secureName
self
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
sendEvent:afterTap:useGSEvent:namedTaps:options:
sendHIDSystemEvent:repostCreatorHIDEvent:senderID:
sendUserEventOccurred
senderBundleId
senderID
server
setAccelerometerDisabled:
setAccessibilityColorMatrix:scale:
setAccessibilityFrameRateLimitEnabled:
setAccessibilityUIServerPid:
setAdditionalFlags:
setAllowsExtendedDynamicRange:
setAltitude:
setApplicationElementCallback:
setAssistiveTouchPid:
setAttributeCallback:
setAuthenticationMessage:
setAzimuth:
setCapsLockLightOn:
setClientId:
setClientObserverCallback:
setContextId:
setDebugBuild:
setDelegate:
setDidEnableHWFilters:
setDisableSystemGestureRecognitionInEvents:
setDisplayFilterUIClient:
setEnabled:
setEnabled:fromAppWithIdentifier:withAuditToken:configuration:completion:
setEventTapIdentifier:
setEventTapPriority:priority:
setFireTime:
setGizmoApplicationAccessibilityEnabled:
setGrayscale:
setGrayscaleWasEnabled:
setHandlerWithTarget:selector:async:forKey:
setHandlerWithTarget:selector:async:forKey:possibleRequiredEntitlements:
setHandlerWithTarget:selector:forKey:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
setHearingAidServerPid:
setHitTestCallback:
setHomeIsDown:
setHoverTextEnabled:
setIgnoringNotifications:
setInstallationEventRepPost:
setInstallationGSCallback:
setInstallationHIDCallback:
setInvertColorsWasEnabled:
setInvertsColors:
setIsSpeakScreenHighlightVisible:
setKeyCode:
setLastCommittedReduceWhitePointEnabledStatus:
setLastCommittedReduceWhitePointValue:
setLiveCaptionsPid:
setLocation:
setLockScreenDimTimerEnabled:
setMaximumBrightness:
setMode:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setOrbValue:
setOverrideProcessName:
setParameterizedAttributeCallback:
setPathLocation:
setPathWindowContextID:
setPerformActionCallback:
setPortDeathHandler:
setQueueSize:
setReduceWhitePointRampDownFilter:
setReduceWhitePointRampEndValue:
setReduceWhitePointRampStartTime:
setReduceWhitePointRampStartValue:
setReduceWhitePointRampTime:
setReduceWhitePointWasEnabled:
setSecureName:
setSenderID:
setSetAttributeCallback:
setShouldNotUpdateHIDClientForNextStickyKeysEnabledChange:
setSiriViewServicePid:
setSoftwareFiltersEnabled:
setStatusNotificationBlock:
setStickyKeysEnabled:
setSupportsAdvancedDisplayFilters:
setSystemWideServer:
setTaskPort:
setTouchAccommodationsClient:
setTransducerType:
setValidationTargetName:
setValue:
setWindowLocation:
setZoomTouchEnabled:
sharedConnection
sharedInstance
sharedManager
shouldLimitDisplayRefreshRate
shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
showLookingGlassMenu
showSpeechController
showSpeechController:
simulatePressAtPoint:withContextId:withDelay:withForce:withSecureName:
siriViewServicePid
sleepForTimeInterval:
softwareFiltersEnabled
start
startHoverTextAndReturnError:
startServerWithError:
startService
stickyKeysEnabled
stickyKeysShiftToggleEnabled
stopHoverTextAndReturnError:
stopService
stringWithFormat:
stringWithUTF8String:
superclass
supported
supportsAccessibilityDisplayFilters
supportsAdaptation
supportsBlueLightReduction
synchronize
systemAppPid
taskNamePortOfContextId:
taskPort
timeIntervalSince1970
timeIntervalSinceNow
touchAccommodationsAreConfigured
touchAccommodationsClient
touchAccommodationsEnabled
touchAccommodationsHoldDurationEnabled
touchAccommodationsIgnoreRepeatEnabled
touchAccommodationsTapActivationMethod
touchCounter
touchRepresentationWithHandType:location:
type
uniqueId
unlock
unsignedIntValue
unused
updateAccessibilitySettings
updateLookingGlassServices
updateSettings
updateStatistics
usagePage
userEventOccurred
userEventOccurredOnDisplay:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
validateClass:
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasInstanceVariable:withType:
value
valueWithRect:
windowLocation
windowServer
windowServerDisplayForDisplayId:
zone
zoomListenerRegistered
d16@0:8
v24@0:8d16
@16@0:8
v24@0:8@16
v16@0:8
@32@0:8{?=QQ}16
B16@0:8
@32@0:8{CGPoint=dd}16
v20@0:8B16
i20@0:8I16
v32@0:8@16q24
@52@0:8I16{CGPoint=dd}20d36I44I48
v52@0:8I16{CGPoint=dd}20d36I44I48
v68@0:8I16{CGPoint=dd}20d36d44d52I60I64
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48I52
{CGPoint=dd}40@0:8{CGPoint=dd}16I32I36
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
v56@0:8B16{CGPoint=dd}20d36I44I48I52
v52@0:8{CGPoint=dd}16I32f36d40I48
@32@0:8q16@24
B32@0:8i16@20I28
B24@0:8@16
@20@0:8I16
B20@0:8I16
@"AXSimpleRuntimeManager"
@"CBClient"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
v24@0:8^{__MADisplayFilter=}16
^{__MADisplayFilter=}16@0:8
v32@0:8^{__MADisplayFilter=}16d24
^{__MADisplayFilter=}
@"AXUIClient"
i16@0:8
I16@0:8
v24@0:8^{__IOHIDEvent=}16
I20@0:8I16
v44@0:8@16B24@28@36
I36@0:8{CGPoint=dd}16I32
I32@0:8{CGPoint=dd}16
@"NSString"
^{__IOHIDUserDevice=}
@"AXEventRepresentation"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v24@0:8^{__IOHIDServiceClient=}16
v36@0:8S16I20B24B28B32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSObject<OS_dispatch_queue>"
@"BSProcessDeathWatcher"
#20@0:8B16
@44@0:8{CGPoint=dd}16I32@36
@48@0:8{CGPoint=dd}16I32@36I44
v20@0:8i16
v44@0:8@"AXEventRepresentation"16B24@"NSString"28@"NSArray"36
{AXBColorFilterDescription=[3[3d]]}16@0:8
@"<AXBackBoardServerInstanceDelegate>"16@0:8
@"<AXBackBoardServerInstance>"16@0:8
@24@0:8@16
v32@0:8@16@?24
@"AXIPCServer"
@"NSMutableArray"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"<AXBackBoardServerInstanceDelegate>"
q40@0:8N^^{__IOHIDEvent}16@24@32
v44@0:8@16q24q32B40
v28@0:8d16i24
v16@?0@"NSNotification"8
NanoAccessibilityDefaultsChanged
v8@?0
@32@?0{?=QQ}8q24
@40@?0{?=QQ}8q24@32
v40@?0{?=QQ}8q24@32
B40@?0{?=QQ}8i24@28I36
v16@?0@8
@8@?0
@44@?0{?=QQ}8{CGPoint=dd}24I40
BKBootUIPresenter
sharedInstance
isShowingBootUI
_overlay
BKDisplayRenderOverlayAppleLogo
_puiProgressWindow
com.apple.assistivetouchd
com.apple.accessibility.AccessibilityUIServer.gsEvents
GetJobs
BKSystemShellSentinel
systemApplications
B32@?0@8Q16^B24
bundleIdentifier
primarySystemShell
BKHIDSystemInterface
deliveryManager
processDescription
Spotlight
ACCESSIBILITY: SB has not checked in. No SB Pid!
ax-send-event-queue
AX Error: error reposting event. value expected to be data
contextId
point
displayId
TVOut
AXPassiveResentThread
com.apple.Accessibility
ApplicationAccessibilityEnabled
B16@?0@"AXEventRepresentation"8
BB-AX
AXBrightnessFilterCacheNightShift
AXBrightnessFilterCacheAutoWhiteBalance
v16@?0^{?=BBBi{?={?=ii}{?=ii}}QB}8
DisplayFilterIPrimaryClientID
%@-toggle-testing
showFilters
forceSoftwareFilter
systemApp unexpectedly returned nil
BKSHIDEventDeferringResolution
Could not dispatch this event because there's no connection for: %{private}@
No IOHIDSenderID recorded for this event, please add one: %@
/AppleInternal/Library/AccessibilityUIServices/AXBInternalBundleLoader.bundle
isActive
isInWorkspace
allowsTripleClickSheet
/System/Library/AccessibilityBundles/GAXBackboardServer.bundle
HIDStickyKeysDisabled
HIDStickyKeysOn
HIDStickyKeysShiftToggles
HIDSlowKeysDelay
v16@?0^{__IOHIDServiceClient=}8
AXBHardwareKeyboardsManager
StickyKeys
v24@?0@"NSDictionary"8@"NSError"16
Error sending message that sticky keys were enabled via shift: %@
Error disabling sticky keys: %@
Error updating sticky key state: %@
LookingGlassServices
Class getLookingGlassServicesClass(void)_block_invoke
AXBLookingGlassManager.m
Unable to find class %s
void *LookingGlassServicesLibrary(void)
B16@?0@"AXValidationManager"8
BKUserEventTimer
userEventOccurredOnDisplay:
BKAccessibility
_accessibilityProcessExternHIDEvent:
^{__IOHIDEvent=}
_accessibilitySetEventTapCallback:
_accessibilityEventTapCallback
_accessibilityHIDEventTapCallback
_accessibilitySetHIDEventTapCallback:
_displayConvertToCAScreen:
{CGPoint=dd}
_displayConvertFromCAScreen:
_objectWithinProximity
_isDisplayBacklightOff
_setCapsLockLightOn:
_eventRoutingClientConnectionManager
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:secureName:
BKSystemShellDescriptor
BKHIDClientConnectionManager
copyClientForDestination:
^{__IOHIDEventSystemConnection=}
copyClientForTaskPort:
pidForBundleID:
build:
BKSMutableHIDEventDeferringResolution
setPid:
BKHIDEventDeliveryManager
destinationsForEvent:sender:
_currentMode
_currentTimeout
_queue
NSObject<OS_dispatch_queue>
BKDisplayRenderOverlay
PUIProgressWindow
AX Backboard Bundle
Backboard Bundle
_currentProgress
data.migration.title
data.migration.value
SpeakThisQueue
v16@?0@"NSError"8
SpeakThisServices
Class getSpeakThisServicesClass(void)_block_invoke
AXBSpeakThisManager.m
void *SpeakThisServicesLibrary(void)
Accessibility
HoverText
id<HoverTextServiceProtocolObjC> HoverTextObjc_Soft(void)
AXBHoverTextManager.m
HoverTextObjc
void *HoverTextServicesLibrary(void)
TouchAccommodationsQueue
TouchAccommodationsClientIdentifier-%@
TouchAccommodations
backboardbundle
BBAXLoadingQueue
v16@?0^v8
v16@?0@"AXEventRepresentation"8
/System/Library/AccessibilityBundles/BackBoardExtras.axbundle
CMDeviceOrientationManager
AX Backboard
Backboard
v24@?0@"AXValidationManager"8Q16
v16@?0@"AXValidationManager"8
BKAccelerometerInterfaceAccessibility
BKUserEventTimerAccessibility
PUIProgressWindowAccessibility
B24@?0@"NSURL"8@"NSError"16
Repeating AX aggd
Kicking off AX aggd
notifyOnNextUserEvent
ZoomListenerRegistered
UIAXZoomRegisterConflict
com.apple.accessibility.physicalinteraction.client
com.apple.private.kernel.jetsam
com.apple.accessibility.voiceover
com.apple.accessibility.AccessibilityUIServer
com.apple.assistivetouch.daemon
com.apple.accessibility.api
com.apple.private.allow-explicit-graphics-priority
com.apple.ax.eventlisten
com.apple.voiceservices.tts.customvoice
com.apple.hearingaids
com.apple.accessibility.automation.client
com.apple.fullkeyboardaccess
com.apple.backboard.client
com.apple.GAX.SPI
com.apple.invert.colors.write.access
com.apple.private.iamlockdown
com.apple.accessibility.axctl
com.apple.commandandcontrol
com.apple.CoreRoutine.preferences
com.apple.AXApp
error: %@
Ping SpringBoard for unmanaged ASAM
B24@?0^@8^@16
v28@?0B8@12@"NSError"20
unable to ping SpringBoard to load the GAX bundle: %@
displayPoint
result
frame
fromContextId
toContextId
axbackboard-post
record
systemEvent
afterNamedTap
namedTaps
start
enabled
rect
GAXBackboard
inPreboardMode
inCheckerBoardMode
sesionIsLoginSession
availability
isPasscodeViewVisible
effectiveAppBundleIdentifier
v16@?0@"NSDictionary"8
Guided Access is not loaded
command
GAX Backbaord instance does not respond to handleGuidedAccessAutomationCommand:
ERROR:
ERROR: %@
error
v16@?0B8B12
_accessIgnoredTouchRegions
preference
value
notification
Resetting accessibility features on behalf of %@
filterData
visible
deviceOrientation
BKAccelerometerInterface
^^{__IOHIDEvent}
processEvent:sender:dispatcher:
orientationManager: deviceOrientationMayHaveChanged: changeSource: isDeviceOrientationLocked:
resetTimer: mode:
Found more than one non-CarPlay system app, returning first object: %@
Did not find any non-CarPlay system apps, returning systemApp from backboard.
Determined system app: %@
Pid from system app was not valid: %@ %@
Spotlight is still retaining keyboard focus when asking for native focus app
Simulating press: %@
AX: Setting frame rate limit: %d on %@
Apply ramp down: %@ -> percentage: %@ : startValue: %@
Finish white point ramp down: %@
White point start %@ -> end %@ : duration: %@
Setting Matrix; Gain: %f WhitePointReduction: %f Matrix: [ [%0.5f, %0.5f, %0.5f], [%0.5f, %0.5f, %0.5f], [%0.5f, %0.5f, %0.5f] ]
Could not create an event ref from: %@
%{public}@
****************** Loading GAX Backboard Server Bundle ****************
**** AX Error: Could not load GAXBackboardServer bundle. bundleWithPath came back nil
**** AX Error: Accessibility: Could not load GAXBackboardServer bundle
**** AX Error: Could not initialize GAXBackboardServer instance: %@
Initializing monitor: AXBLookingGlassManager
About to show looking glass menu
Clearing highlight state because backboardd just started up.
Error notifying SpeakThis of setting change: %@
Should have accessed AXUIServer PID on the main thread.
Not watching for death of AXUIServer, because Speak Screen was not enabled.
Start watching for death of AXUIServer: %i
Clearing highlight state because AXUIServer died.
Not watching for death of AXUIServer, because PID unavailable.
Asked to enable/disable HoverText but feature flag is off, so no
HoverText monitor asked to enable HoverText: %ld
Error toggling HoverText: %@
Starting up touch accommodations
Stopping touch accommodations
Loading AXBackBoardGlue
Error enumerating auxiliary bundles: %@
Failed to load auxiliary bundle %@: %@
FKA pid: %d
Setting highlight state to visible: %i.
Asked to set highlight state to visible %i, but AXUIServer PID wasn't registered. Clearing highlight state.
AST process went away, resetting pid
UIServer process went away, resetting pid
FKA process went away, resetting pid
Received request to set Guided Access enabled=%i, but GAXBackboard was nil.
_handleToggleGuidedAccess: %@
setting idle timer disabled: %d
Couldn't get the internal queue for BKUserEventTimer. This can lead to us accidentally making the timer get stuck off.
Someone asked to reset idle timer but it is disabled by accessibility. timeout: %f mode: %d
softlink:o:path:/System/Library/../../AppleInternal/Library/Frameworks/LookingGlassServices.framework/LookingGlassServices
softlink:r:path:/System/Library/PrivateFrameworks/SpeakThisServices.framework/SpeakThisServices
softlink:r:path:/System/Library/PrivateFrameworks/HoverTextServices.framework/HoverTextServices
P $(P,
?ffffff
?333333
TimeValuePair
AXBAccessibilityManager
AXBBlueLightManager
AXBDisplayFilterManager
AXUIClientDelegate
NSObject
AXBEventManager
AXBInternalBundleLoaderManager
AXBGuidedAccessManager
MCProfileConnectionObserver
AXBHardwareDisplayModifier
AXBHardwareKeyboardsManager
AXBLocalizationCaptionController
AXBLookingGlassManager
__AXBValidation
__PUIProgressWindowAccessibility_super
SafeCategory
PUIProgressWindowAccessibility
AXBSpeakThisManager
AXBHoverTextManager
AXBTouchAccommodationsController
AXBAssistiveTouchManager
AXBZoomTouchManager
BBOverride
AXBackBoardGlue
AXBackBoardServerInstanceDelegate
AXBackBoardServerInstance
__BKAccelerometerInterfaceAccessibility_super
BKAccelerometerInterfaceAccessibility
__BKUserEventTimerAccessibility_super
OS_dispatch_queue
OS_dispatch_object
BKUserEventTimerAccessibility
Td,N,V_reduceWhitePointRampTime
T#,R
_accessibilityIsInternalInstall
T@"AXUIClient",&,N,V_displayFilterUIClient
_eventListeners
T@"NSString",C,N,V_eventTapIdentifier
_handleConvertPointToContextId:
T@,&,N,Vvalue
_handleSetZoomInitialFocusRect:
TB,N,V_didEnableHWFilters
_notifyServerStickyKeysDisabled
TB,N,V_homeIsDown
_reduceWhitePointRampStartValue
TB,N,V_invertColorsWasEnabled
_server
TB,N,V_shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
_speakThisQueue
TQ,R
_updateEventTap
T^{__MADisplayFilter=},&,N,V_reduceWhitePointRampDownFilter
backBoardServerInstanceIfExists
Td,N,V_lastCommittedReduceWhitePointValue
bundleForClass:
Td,N,V_reduceWhitePointRampStartTime
containsString:
Td,N,VfireTime
dealloc
__os_unfair_lock__
homeClickSwallowedInSpringBoard
_accessibilityApplicationForContextId:
initWithPID:queue:deathHandler:
_accessibilityCarPlayApp
keyCode
_accessibilityConvertHostedViewPoint:fromContextId:displayId:
mainAccessQueue
_accessibilityHitTest:
payload
_accessibilityPerformValidations:
pidForBundleID:
_accessibilityRepostEvent:
release
_accessibilitySetHIDEventTapCallback:
removeObserver:
_accessibilitySystemApp
serverIfRunning
_accessibilitySystemAppApplicationPid
setDisplayFilterFromLastUpdate:
_accessibilityUIServerDeathWatcher
setPid:
_accessibilityViewPointFromHostedViewContext:displayId:
systemEventPort
_applyMatrixFilter:whitePointReduction:
.cxx_destruct
_accessibilityEventTapCallback:
T@"<AXBackBoardServerInstanceDelegate>",W,N,V_delegate
_areTouchAccommodationsInEffect
T@"AXUIClient",&,N,V_touchAccommodationsClient
_handleConvertFrameToContextId:
T@"NSString",R,C
_handleGetZoomInitialFocusRect:
TB,N,V_accelerometerDisabled
_inPreBoardMode
TB,N,V_grayscaleWasEnabled
_reduceWhitePointRampDownFilter
TB,N,V_ignoringNotifications
_runtimeManager
TB,N,V_reduceWhitePointWasEnabled
_slowKeysAcceptanceDelayChanged
TB,N,V_softwareFiltersEnabled
_touchAccommodationsEverEnabled
TVOutDisplay
additionalFlags
Td,N,V_lastCommittedReduceWhitePointEnabledStatus
blueLightClient
Td,N,V_reduceWhitePointRampEndValue
bundleWithPath:
Td,N,V_reduceWhitePointRampStartValue
contextIdForPosition:displayId:
UTF8String
hideHoldDurationTripleClickHelp
_accelerometerDisabled
initWithDomain:
_accessibilityAssistiveTouchApplication
isProxy
_accessibilityCarPlayApplicationPid
keyInfo
_accessibilityDisplayRequiresRotateForPoints:
numberWithBool:
_accessibilityNativeFocusedApplication
_accessibilityProcessExternHIDEvent:
processEvent:sender:dispatcher:
_accessibilitySetEventTapCallback:
removeEventTap:
_accessibilitySpringBoardApplication
safeBoolForKey:
_accessibilitySystemAppApplicationBundleId
serviceMachPort
_accessibilityUIServerApplication
setFullKeyboardAccessDaemonPID:
_accessibilityUnregister
showHoldDurationTripleClickHelp
_allowSoftwareFilters
valueWithPoint:
_assistiveTouchCapture:
_astDeathWatcher
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:secureName:
_axDesiredMode
_axDesiredTimeout
_axElementForUID:
_axIsTimerDisabled
_axPreferenceAsMobile:
_axSetDesiredMode:
_axSetDesiredTimeout:
_axSetTimerDisabled:
_blueLightStatusEnabled
_brightnessClient
_clientIdentifier
_commonEventRepForTouchEventWithType:location:force:flags:contextId:
_delegate
_deliveryManager
_didEnableHWFilters
_displayConvertFromCAScreen:
_displayConvertFromCAScreen:withDisplayIntegerId:
_displayConvertToCAScreen:
_displayConvertToCAScreen:withDisplayIntegerId:
_displayFilterFromLastUpdate
_displayFilterUIClient
_eventListenerEnabled
_eventTapClients
_eventTapIdentifier
_fkaDeathWatcher
_forceSoftwareFilters
_gaxBackboard
_gaxCapture:
_grayscaleWasEnabled
_guidedAccessServer
_handleAXUIServerPID:
_handleAdaptationEnabled:
_handleAssistiveTouchPID:
_handleBlueLightStatusEnabled:
_handleBrightnessFiltersEnabled:
_handleContextHostingIdForContextId:
_handleContextIdForPosition:
_handleConvertFrameFromContextId:
_handleConvertFrameFromContextIdToContextId:
_handleConvertPointFromContextId:
_handleDisableBrightnessFilters:
_handleEventListenerRegistration:
_handleFrameRateLimit
_handleFullKeyboardAccessDaemonPID:
_handleGetGuidedAccessAvailability:
_handleGetLastSetColorFilter:
_handleGuidedAccessAutomationCommand:completion:
_handleGuidedAccessCurrentModeAndSessionApp:
_handleGuidedAccessEffectiveAppBundleIdentifier:
_handleGuidedAccessIgnoredRegions:
_handleHearingAidServerPID:
_handleHomeClickSwallowedForGuidedAccess:
_handleInCheckerBoardMode:
_handleInPreBoardMode:
_handleInvertColorsChange:
_handleIsGuidedAccessActive:
_handleIsGuidedAccessInWorkspace:
_handleIsGuidedAccessSelfLockedToRequestingApp:
_handleIsGuidedAccessUnmanagedSelfLocked:
_handleIsRestrictedForAAC:
_handleItemChooserVisible:
_handleLoadGAXBundleForUnmanagedASAM:
_handleLockScreenDimTimerEnabled:
_handlePidForSpecialCases:
_handlePostEvent:
_handleRegisterAccessibilityUIServerPID:
_handleRegisterAssistiveTouchPID:
_handleRegisterFullKeyboardAccessDaemonPID:
_handleRegisterHearingAidServerPID:
_handleRegisterSiriViewServicePID:
_handleRegisterZoomConflict:
_handleResetAccessibilityFeatures:
_handleRestoreCachedBrightnessFilters:
_handleSessionIsLoginSession:
_handleSetCapsLockLightOn:
_handleSetGuidedAccessEnabledByRequestingApp:completion:
_handleSetInCheckerBoardMode:
_handleSetInPreBoardMode:
_handleSetIsSpeakScreenHighlightVisible:
_handleSetSessionIsLoginSession:
_handleSetSwitchControlHasScreenSwitch:
_handleSetSwitchControlRendersDeviceUnusable:
_handleSupportsAdaptation:
_handleToggleGuidedAccess:
_handleTripleClickHomeButtonFired:
_handleUserEventOccurred:
_handleZoomAdjustment:
_heardDeathWatcher
_hideHoldDurationTripleClickHelp
_homeIsDown
_ignoringNotifications
_inCheckerBoardMode
_initServer
_initialZoomFocusRect
_initializeHandlers
_inspectorCapture:
_invertColorsEnabled
_invertColorsWasEnabled
_iosAccessibilityAttributeValue:element:
_iosAccessibilityAttributeValue:forParameter:
_iosAccessibilityPerformAction:withValue:fencePort:
_iosAccessibilitySetValue:forAttribute:
_isDisplayBacklightOff
_isSerializableAccessibilityElement
_kickstartAssistiveTouchIfNeeded
_lastCommittedReduceWhitePointEnabledStatus
_lastCommittedReduceWhitePointValue
_lastHIDRecord
_loadAuxiliaryBundles
_loadBackboardServerBundle
_loadInternalBundle
_normalizeEventForContext:
_notificationToken
_notifyServerStickyKeyUpdatedForKeycode:usagePage:down:up:locked:
_notifyServerStickyKeysToggledViaShift
_notifySpeakThisOfSettingsChange
_overrideGestureRecognitionState
_processHIDEvent:
_processPassiveEventQueue
_reduceWhitePointRampEndValue
_reduceWhitePointRampStartTime
_reduceWhitePointRampTime
_reduceWhitePointWasEnabled
_registerForTouchAccommodationsAXSettingsUpdate
_releasePendingEvents:
_repeatAggregateStatistics
_repostNotificationIfNeeded
_screenReaderCapture:
_sendCancelTouchEvent
_sendEventRep:
_sendFingerEvent:location:force:flags:contextId:
_sendPressFingerEvent:location:force:flags:contextId:secureName:
_sendStylusEvent:location:force:altitude:azimuth:flags:contextId:
_sessionIsLoginSession
_setAXPreferenceAsMobile:
_setCapsLockLightOn:
_setDeviceOrientation:
_setDeviceOrientationCapability:
_shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
_shouldValidateEntitlements
_showHoldDurationTripleClickHelp
_showLookingGlassMenu
_showingBootUI
_slowKeysEnabledChanged
_softwareFiltersEnabled
_startPassiveResendThread
_startWatchingForDeathOfAccessibilityUIServerPID
_stickyKeysClient
_stickyKeysEnabledChanged
_stickyKeysShiftToggleChanged
_touchAccommodationsClient
_touchAccommodationsQueue
_uiServerDeathWatcher
_undoContextShiftedPoints:
_updateBrightnessFilters:
_updateCoreSupport
_updateFeature
_updateGrayScaleSettings
_updateKeyboardService:
_updateLookingGlassServicesIfNeeded
_updateMatrixSupport
_updateNotificationCache
_updateSettings:
_updateStateForKeyboardEvent:
_updateTouchAccommodationsSetting
_userDevice
_userEventOccurred
_wasEnabled
_whitePointRampDown
_zoomListeners
accelerometerDisabled
accessibilityAssistiveTouchPid
accessibilityConvertHostedViewFrame:fromContextId:displayId:
accessibilityConvertHostedViewFrame:toContextId:displayId:
accessibilityConvertHostedViewPoint:fromContextId:displayId:
accessibilityConvertHostedViewPoint:toContextId:displayId:
accessibilityFrame
accessibilityFullKeyboardAccessDaemonPid
accessibilityLabel
accessibilityLiveCaptionsPid
accessibilityTraits
accessibilityUIServerPid
accessibilityValue
adaptationClient
adaptationEnabled
addObject:
addObserver:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addRotorOptionsForLoginSession
addTarget:selector:
allJobLabels
allObjects
allowsTripleClickSheet
anyObject
array
arrayWithCapacity:
arrayWithObjects:count:
assistiveTouchPid
auditToken
autorelease
availabilityForExternalRequestWithSpringboardParameters:
axArrayByIgnoringNilElementsWithCount:
ax_filteredArrayUsingBlock:
backBoardServerInstance
blueLightStatusEnabled
boolForKey:
boolValue
brightnessFiltersEnabled
build:
bundleWithURL:
buttonRepresentationWithType:
class
classicInvertColors
clearLastRecordPostedThrougHID
clientId
clientPort
clientPortAtPosition:
clientPortForContextId:
clientPortOfContextId:
colorFilterFromLastUpdate
configureZoomForLoginSession
conformsToProtocol:
connectWithError:
connectionWithServiceWasInterruptedForUserInterfaceClient:
contextId
contextIdAtPosition:
contextIdForDisplayPoint:
contextIdHosterForContextId:
contextIdHostingContextId:
controller
convertFrame:fromContextId:displayId:
convertFrame:toContextId:displayId:
convertPoint:fromContextId:
convertPoint:fromContextId:displayId:
convertPoint:toContextId:
convertPoint:toContextId:displayId:
copy
copyClientForDestination:
copyClientForTaskPort:
count
countByEnumeratingWithState:objects:count:
currentDisplayLinkManager
currentGuidedAccessModeForBackboardServer
currentHandler
currentSessionApp
currentThread
dataRepresentation
dataWithBytes:length:
date
debugDescription
defaultCenter
defaultManager
delegate
description
destinationsForEvent:sender:
detachNewThreadSelector:toTarget:withObject:
dictionary
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didEnableHWFilters
didUpdateAccessibilityUIServerPID
disableAccessibility
disableAllFilters
disableBrightnessFilters
dispatchEventRepresentationToClient:
displayConvertFromCAScreen:withDisplayIntegerId:
displayConvertToCAScreen:withDisplayIntegerId:
displayFilterFromLastUpdate
displayFilterUIClient
displayId
displayType
displayWithDisplayId:
displays
distantFuture
doubleValue
effectiveBoolValueForSetting:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
eventTapIdentifier
eventType
fakeTouchScaleEventRepresentation:
fileURLWithPath:
fireTime
firstObject
firstPath
flags
floatValue
forceLoadGAXBundle
getBlueLightStatus:
getBytes:length:
getEnabled
getZoomBundlePrincipalClassForcingLoad:
grayscaleWasEnabled
handInfo
handleFailureInFunction:file:lineNumber:description:
handleGuidedAccessAutomationCommand:completion:
hasPrefix:
hash
hearingAidServerPid
hidClientConnectionManager
hideSpeechController:
homeIsDown
identifier
ignoreLogging
ignoringNotifications
inGuidedAccess
indexOfObjectPassingTest:
init
initWithIdentifier:serviceBundleName:
initWithKey:payload:
initWithPort:
initWithServiceName:perPidService:
initWithUTF8String:
initialize
initializeAccessibility
initializeAccessibilityMonitor
initializeMonitor
initializeZoomMonitor
installEventTap:identifier:type:
installKeyboardEventTap:identifier:matchingServiceHandler:
installSafeCategory:canInteractWithTargetClass:
intValue
integerValue
invalidate
invertColorsWasEnabled
invertsColors
isAccessibilityElement
isDisplayBacklightOff
isEqual:
isEqualToString:
isExternal
isGrayscale
isKindOfClass:
isMainThread
isMemberOfClass:
isRestrictedForAAC
isSelfLockedToAppWithIdentifier:
isSpotlightVisible
isUnmanagedSelfLocked
keyRepresentationWithType:
kickoffAggregateStatistics
lastCommittedReduceWhitePointEnabledStatus
lastCommittedReduceWhitePointValue
lastRecordPostedThroughHID
length
load
loadAndReturnError:
loadGAXBundleForUnmanagedASAM
localizationQACaptionMode
localizedStringForKey:value:table:
localizedStringWithFormat:
location
lock
machPortForPoint:
mainDisplay
mainQueue
name
newHIDEventRef
null
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observerClientDied
orientationManager:deviceOrientationMayHaveChanged:changeSource:isDeviceOrientationLocked:
originalType
pathAttributes
pathExtension
pathIndex
pathLocation
pathWindowContextID
paths
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performValidations:withPreValidationHandler:postValidationHandler:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
pointValue
postEvent:systemEvent:afterNamedTap:namedTaps:
postNotificationName:object:
postNotificationName:object:userInfo:
preciseLocationX
preciseLocationY
principalClass
processExternalHIDEvent:
processIdentifier
processInfo
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
rectValue
reduceWhitePointRampDownFilter
reduceWhitePointRampEndValue
reduceWhitePointRampStartTime
reduceWhitePointRampStartValue
reduceWhitePointRampTime
reduceWhitePointWasEnabled
registerEventListener:
registerUpdateBlock:forRetrieveSelector:withListener:
removeAllHandlersForTarget:
removeObjectAtIndex:
removeObserver:name:object:
removeTarget:selector:
replayWithName:attempts:interval:async:queue:replayBlock:completion:
replayer
representationWithData:
resetAccessibilityFeatures
resetAccessibilityUIHitPort
resetAssistiveTouchHitPort
resetTimer:mode:
respondsToSelector:
restoreCachedBrightnessFilters
retain
retainCount
runMatchingServiceHandlerForEventTap:
safeArrayForKey:
safeCategoryBaseClass
safeCategoryTargetClassName
safeFloatForKey:
safeStringForKey:
safeUnsignedIntForKey:
safeValueForKey:
secureName
self
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
sendEvent:afterTap:useGSEvent:namedTaps:options:
sendHIDSystemEvent:repostCreatorHIDEvent:senderID:
sendUserEventOccurred
senderBundleId
senderID
server
setAccelerometerDisabled:
setAccessibilityColorMatrix:scale:
setAccessibilityFrameRateLimitEnabled:
setAccessibilityUIServerPid:
setAdditionalFlags:
setAllowsExtendedDynamicRange:
setAltitude:
setApplicationElementCallback:
setAssistiveTouchPid:
setAttributeCallback:
setAuthenticationMessage:
setAzimuth:
setCapsLockLightOn:
setClientId:
setClientObserverCallback:
setContextId:
setDebugBuild:
setDelegate:
setDidEnableHWFilters:
setDisableSystemGestureRecognitionInEvents:
setDisplayFilterUIClient:
setEnabled:
setEnabled:fromAppWithIdentifier:withAuditToken:configuration:completion:
setEventTapIdentifier:
setEventTapPriority:priority:
setFireTime:
setGizmoApplicationAccessibilityEnabled:
setGrayscale:
setGrayscaleWasEnabled:
setHandlerWithTarget:selector:async:forKey:
setHandlerWithTarget:selector:async:forKey:possibleRequiredEntitlements:
setHandlerWithTarget:selector:forKey:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
setHearingAidServerPid:
setHitTestCallback:
setHomeIsDown:
setHoverTextEnabled:
setIgnoringNotifications:
setInstallationEventRepPost:
setInstallationGSCallback:
setInstallationHIDCallback:
setInvertColorsWasEnabled:
setInvertsColors:
setIsSpeakScreenHighlightVisible:
setKeyCode:
setLastCommittedReduceWhitePointEnabledStatus:
setLastCommittedReduceWhitePointValue:
setLiveCaptionsPid:
setLocation:
setLockScreenDimTimerEnabled:
setMaximumBrightness:
setMode:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setOrbValue:
setOverrideProcessName:
setParameterizedAttributeCallback:
setPathLocation:
setPathWindowContextID:
setPerformActionCallback:
setPortDeathHandler:
setQueueSize:
setReduceWhitePointRampDownFilter:
setReduceWhitePointRampEndValue:
setReduceWhitePointRampStartTime:
setReduceWhitePointRampStartValue:
setReduceWhitePointRampTime:
setReduceWhitePointWasEnabled:
setSecureName:
setSenderID:
setSetAttributeCallback:
setShouldNotUpdateHIDClientForNextStickyKeysEnabledChange:
setSiriViewServicePid:
setSoftwareFiltersEnabled:
setStatusNotificationBlock:
setStickyKeysEnabled:
setSupportsAdvancedDisplayFilters:
setSystemWideServer:
setTaskPort:
setTouchAccommodationsClient:
setTransducerType:
setValidationTargetName:
setValue:
setWindowLocation:
setZoomTouchEnabled:
sharedConnection
sharedInstance
sharedManager
shouldLimitDisplayRefreshRate
shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
showLookingGlassMenu
showSpeechController
showSpeechController:
simulatePressAtPoint:withContextId:withDelay:withForce:withSecureName:
siriViewServicePid
sleepForTimeInterval:
softwareFiltersEnabled
start
startHoverTextAndReturnError:
startServerWithError:
startService
stickyKeysEnabled
stickyKeysShiftToggleEnabled
stopHoverTextAndReturnError:
stopService
stringWithFormat:
stringWithUTF8String:
superclass
supported
supportsAccessibilityDisplayFilters
supportsAdaptation
supportsBlueLightReduction
synchronize
systemAppPid
taskNamePortOfContextId:
taskPort
timeIntervalSince1970
timeIntervalSinceNow
touchAccommodationsAreConfigured
touchAccommodationsClient
touchAccommodationsEnabled
touchAccommodationsHoldDurationEnabled
touchAccommodationsIgnoreRepeatEnabled
touchAccommodationsTapActivationMethod
touchCounter
touchRepresentationWithHandType:location:
type
uniqueId
unlock
unsignedIntValue
unused
updateAccessibilitySettings
updateLookingGlassServices
updateSettings
updateStatistics
usagePage
userEventOccurred
userEventOccurredOnDisplay:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
validateClass:
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
validateClass:hasInstanceVariable:withType:
value
valueWithRect:
windowLocation
windowServer
windowServerDisplayForDisplayId:
zone
zoomListenerRegistered
d16@0:8
v24@0:8d16
@16@0:8
v24@0:8@16
v16@0:8
@32@0:8{?=QQ}16
B16@0:8
@32@0:8{CGPoint=dd}16
v20@0:8B16
i20@0:8I16
v32@0:8@16q24
@52@0:8I16{CGPoint=dd}20d36I44I48
v52@0:8I16{CGPoint=dd}20d36I44I48
v68@0:8I16{CGPoint=dd}20d36d44d52I60I64
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48I52
{CGPoint=dd}40@0:8{CGPoint=dd}16I32I36
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
v56@0:8B16{CGPoint=dd}20d36I44I48I52
v52@0:8{CGPoint=dd}16I32f36d40I48
@32@0:8q16@24
B32@0:8i16@20I28
B24@0:8@16
@20@0:8I16
B20@0:8I16
@"AXSimpleRuntimeManager"
@"CBClient"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
v24@0:8^{__MADisplayFilter=}16
^{__MADisplayFilter=}16@0:8
v32@0:8^{__MADisplayFilter=}16d24
^{__MADisplayFilter=}
@"AXUIClient"
i16@0:8
I16@0:8
v24@0:8^{__IOHIDEvent=}16
I20@0:8I16
v44@0:8@16B24@28@36
I36@0:8{CGPoint=dd}16I32
I32@0:8{CGPoint=dd}16
@"NSString"
^{__IOHIDUserDevice=}
@"AXEventRepresentation"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v24@0:8^{__IOHIDServiceClient=}16
v36@0:8S16I20B24B28B32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSObject<OS_dispatch_queue>"
@"BSProcessDeathWatcher"
#20@0:8B16
@44@0:8{CGPoint=dd}16I32@36
@48@0:8{CGPoint=dd}16I32@36I44
v20@0:8i16
v44@0:8@"AXEventRepresentation"16B24@"NSString"28@"NSArray"36
{AXBColorFilterDescription=[3[3d]]}16@0:8
@"<AXBackBoardServerInstanceDelegate>"16@0:8
@"<AXBackBoardServerInstance>"16@0:8
@24@0:8@16
v32@0:8@16@?24
@"AXIPCServer"
@"NSMutableArray"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"<AXBackBoardServerInstanceDelegate>"
q40@0:8N^^{__IOHIDEvent}16@24@32
v44@0:8@16q24q32B40
v28@0:8d16i24
v16@?0@"NSNotification"8
NanoAccessibilityDefaultsChanged
v8@?0
@32@?0{?=QQ}8q24
@40@?0{?=QQ}8q24@32
v40@?0{?=QQ}8q24@32
B40@?0{?=QQ}8i24@28I36
v16@?0@8
@8@?0
@44@?0{?=QQ}8{CGPoint=dd}24I40
BKBootUIPresenter
sharedInstance
isShowingBootUI
_overlay
BKDisplayRenderOverlayAppleLogo
_puiProgressWindow
com.apple.assistivetouchd
com.apple.accessibility.AccessibilityUIServer.gsEvents
GetJobs
BKSystemShellSentinel
systemApplications
B32@?0@8Q16^B24
bundleIdentifier
primarySystemShell
BKHIDSystemInterface
deliveryManager
processDescription
Spotlight
ACCESSIBILITY: SB has not checked in. No SB Pid!
ax-send-event-queue
AX Error: error reposting event. value expected to be data
contextId
point
displayId
TVOut
AXPassiveResentThread
com.apple.Accessibility
ApplicationAccessibilityEnabled
B16@?0@"AXEventRepresentation"8
BB-AX
AXBrightnessFilterCacheNightShift
AXBrightnessFilterCacheAutoWhiteBalance
v16@?0^{?=BBBi{?={?=ii}{?=ii}}QB}8
DisplayFilterIPrimaryClientID
%@-toggle-testing
showFilters
forceSoftwareFilter
systemApp unexpectedly returned nil
BKSHIDEventDeferringResolution
Could not dispatch this event because there's no connection for: %{private}@
No IOHIDSenderID recorded for this event, please add one: %@
/AppleInternal/Library/AccessibilityUIServices/AXBInternalBundleLoader.bundle
isActive
isInWorkspace
allowsTripleClickSheet
/System/Library/AccessibilityBundles/GAXBackboardServer.bundle
HIDStickyKeysDisabled
HIDStickyKeysOn
HIDStickyKeysShiftToggles
HIDSlowKeysDelay
v16@?0^{__IOHIDServiceClient=}8
AXBHardwareKeyboardsManager
StickyKeys
v24@?0@"NSDictionary"8@"NSError"16
Error sending message that sticky keys were enabled via shift: %@
Error disabling sticky keys: %@
Error updating sticky key state: %@
LookingGlassServices
Class getLookingGlassServicesClass(void)_block_invoke
AXBLookingGlassManager.m
Unable to find class %s
void *LookingGlassServicesLibrary(void)
B16@?0@"AXValidationManager"8
BKUserEventTimer
userEventOccurredOnDisplay:
BKAccessibility
_accessibilityProcessExternHIDEvent:
^{__IOHIDEvent=}
_accessibilitySetEventTapCallback:
_accessibilityEventTapCallback
_accessibilityHIDEventTapCallback
_accessibilitySetHIDEventTapCallback:
_displayConvertToCAScreen:
{CGPoint=dd}
_displayConvertFromCAScreen:
_objectWithinProximity
_isDisplayBacklightOff
_setCapsLockLightOn:
_eventRoutingClientConnectionManager
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:secureName:
BKSystemShellDescriptor
BKHIDClientConnectionManager
copyClientForDestination:
^{__IOHIDEventSystemConnection=}
copyClientForTaskPort:
pidForBundleID:
build:
BKSMutableHIDEventDeferringResolution
setPid:
BKHIDEventDeliveryManager
destinationsForEvent:sender:
_currentMode
_currentTimeout
_queue
NSObject<OS_dispatch_queue>
BKDisplayRenderOverlay
PUIProgressWindow
AX Backboard Bundle
Backboard Bundle
_currentProgress
data.migration.title
data.migration.value
SpeakThisQueue
v16@?0@"NSError"8
SpeakThisServices
Class getSpeakThisServicesClass(void)_block_invoke
AXBSpeakThisManager.m
void *SpeakThisServicesLibrary(void)
Accessibility
HoverText
id<HoverTextServiceProtocolObjC> HoverTextObjc_Soft(void)
AXBHoverTextManager.m
HoverTextObjc
void *HoverTextServicesLibrary(void)
TouchAccommodationsQueue
TouchAccommodationsClientIdentifier-%@
TouchAccommodations
backboardbundle
BBAXLoadingQueue
v16@?0^v8
v16@?0@"AXEventRepresentation"8
/System/Library/AccessibilityBundles/BackBoardExtras.axbundle
CMDeviceOrientationManager
AX Backboard
Backboard
v24@?0@"AXValidationManager"8Q16
v16@?0@"AXValidationManager"8
BKAccelerometerInterfaceAccessibility
BKUserEventTimerAccessibility
PUIProgressWindowAccessibility
B24@?0@"NSURL"8@"NSError"16
Repeating AX aggd
Kicking off AX aggd
notifyOnNextUserEvent
ZoomListenerRegistered
UIAXZoomRegisterConflict
com.apple.accessibility.physicalinteraction.client
com.apple.private.kernel.jetsam
com.apple.accessibility.voiceover
com.apple.accessibility.AccessibilityUIServer
com.apple.assistivetouch.daemon
com.apple.accessibility.api
com.apple.private.allow-explicit-graphics-priority
com.apple.ax.eventlisten
com.apple.voiceservices.tts.customvoice
com.apple.hearingaids
com.apple.accessibility.automation.client
com.apple.fullkeyboardaccess
com.apple.backboard.client
com.apple.GAX.SPI
com.apple.invert.colors.write.access
com.apple.private.iamlockdown
com.apple.accessibility.axctl
com.apple.commandandcontrol
com.apple.CoreRoutine.preferences
com.apple.AXApp
error: %@
Ping SpringBoard for unmanaged ASAM
B24@?0^@8^@16
v28@?0B8@12@"NSError"20
unable to ping SpringBoard to load the GAX bundle: %@
displayPoint
result
frame
fromContextId
toContextId
axbackboard-post
record
systemEvent
afterNamedTap
namedTaps
start
enabled
rect
GAXBackboard
inPreboardMode
inCheckerBoardMode
sesionIsLoginSession
availability
isPasscodeViewVisible
effectiveAppBundleIdentifier
v16@?0@"NSDictionary"8
Guided Access is not loaded
command
GAX Backbaord instance does not respond to handleGuidedAccessAutomationCommand:
ERROR:
ERROR: %@
error
v16@?0B8B12
_accessIgnoredTouchRegions
preference
value
notification
Resetting accessibility features on behalf of %@
filterData
visible
deviceOrientation
BKAccelerometerInterface
^^{__IOHIDEvent}
processEvent:sender:dispatcher:
orientationManager: deviceOrientationMayHaveChanged: changeSource: isDeviceOrientationLocked:
resetTimer: mode:
Found more than one non-CarPlay system app, returning first object: %@
Did not find any non-CarPlay system apps, returning systemApp from backboard.
Determined system app: %@
Pid from system app was not valid: %@ %@
Spotlight is still retaining keyboard focus when asking for native focus app
Simulating press: %@
AX: Setting frame rate limit: %d on %@
Apply ramp down: %@ -> percentage: %@ : startValue: %@
Finish white point ramp down: %@
White point start %@ -> end %@ : duration: %@
Setting Matrix; Gain: %f WhitePointReduction: %f Matrix: [ [%0.5f, %0.5f, %0.5f], [%0.5f, %0.5f, %0.5f], [%0.5f, %0.5f, %0.5f] ]
Could not create an event ref from: %@
%{public}@
****************** Loading GAX Backboard Server Bundle ****************
**** AX Error: Could not load GAXBackboardServer bundle. bundleWithPath came back nil
**** AX Error: Accessibility: Could not load GAXBackboardServer bundle
**** AX Error: Could not initialize GAXBackboardServer instance: %@
Initializing monitor: AXBLookingGlassManager
About to show looking glass menu
Clearing highlight state because backboardd just started up.
Error notifying SpeakThis of setting change: %@
Should have accessed AXUIServer PID on the main thread.
Not watching for death of AXUIServer, because Speak Screen was not enabled.
Start watching for death of AXUIServer: %i
Clearing highlight state because AXUIServer died.
Not watching for death of AXUIServer, because PID unavailable.
Asked to enable/disable HoverText but feature flag is off, so no
HoverText monitor asked to enable HoverText: %ld
Error toggling HoverText: %@
Starting up touch accommodations
Stopping touch accommodations
Loading AXBackBoardGlue
Error enumerating auxiliary bundles: %@
Failed to load auxiliary bundle %@: %@
FKA pid: %d
Setting highlight state to visible: %i.
Asked to set highlight state to visible %i, but AXUIServer PID wasn't registered. Clearing highlight state.
AST process went away, resetting pid
UIServer process went away, resetting pid
FKA process went away, resetting pid
Received request to set Guided Access enabled=%i, but GAXBackboard was nil.
_handleToggleGuidedAccess: %@
setting idle timer disabled: %d
Couldn't get the internal queue for BKUserEventTimer. This can lead to us accidentally making the timer get stuck off.
Someone asked to reset idle timer but it is disabled by accessibility. timeout: %f mode: %d
softlink:o:path:/System/Library/../../AppleInternal/Library/Frameworks/LookingGlassServices.framework/LookingGlassServices
softlink:r:path:/System/Library/PrivateFrameworks/SpeakThisServices.framework/SpeakThisServices
softlink:r:path:/System/Library/PrivateFrameworks/HoverTextServices.framework/HoverTextServices
