?ffffff
?333333
TimeValuePair
AXBAccessibilityManager
AXBBlueLightManager
AXBDisplayFilterManager
AXUIClientDelegate
NSObject
AXBEventManager
AXBInternalBundleLoaderManager
AXBGuidedAccessManager
MCProfileConnectionObserver
AXBHardwareDisplayModifier
AXBHardwareKeyboardsManager
AXBLocalizationCaptionController
AXBLookingGlassManager
__AXBValidation
__PUIProgressWindowAccessibility_super
SafeCategory
PUIProgressWindowAccessibility
AXBSpeakThisManager
AXBHoverTextManager
AXBTouchAccommodationsController
AXBAssistiveTouchManager
AXBZoomTouchManager
BBOverride
AXBackBoardGlue
AXBackBoardServerInstanceDelegate
AXBackBoardServerInstance
__BKAccelerometerInterfaceAccessibility_super
BKAccelerometerInterfaceAccessibility
__BKUserEventTimerAccessibility_super
OS_dispatch_queue
OS_dispatch_object
BKUserEventTimerAccessibility
fireTime
setFireTime:
value
setValue:
.cxx_destruct
Td,N,VfireTime
T@,&,N,Vvalue
sharedManager
initializeAccessibility
disableAccessibility
updateAccessibilitySettings
defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
init
resetAssistiveTouchHitPort
addObserver:selector:name:object:
setSystemWideServer:
_axElementForUID:
_iosAccessibilityAttributeValue:element:
setAttributeCallback:
_iosAccessibilityAttributeValue:forParameter:
setParameterizedAttributeCallback:
_iosAccessibilitySetValue:forAttribute:
setSetAttributeCallback:
_iosAccessibilityPerformAction:withValue:fencePort:
setPerformActionCallback:
observerClientDied
setClientObserverCallback:
setApplicationElementCallback:
_accessibilityHitTest:
setHitTestCallback:
start
safeValueForKey:
safeBoolForKey:
_showingBootUI
numberWithFloat:
setAccelerometerDisabled:
_setDeviceOrientationCapability:
serverIfRunning
taskNamePortOfContextId:
hidClientConnectionManager
copyClientForTaskPort:
intValue
_handlePidForSpecialCases:
assistiveTouchPid
accessibilityUIServerPid
_accessibilitySystemAppApplicationPid
array
safeArrayForKey:
safeStringForKey:
isEqualToString:
ax_filteredArrayUsingBlock:
count
axArrayByIgnoringNilElementsWithCount:
firstObject
_accessibilitySystemApp
_accessibilityCarPlayApp
unsignedIntValue
numberWithInt:
_deliveryManager
keyRepresentationWithType:
keyInfo
setKeyCode:
newHIDEventRef
builtinDisplay
setAssociatedDisplay:
destinationsForEvent:sender:
anyObject
safeUnsignedIntForKey:
containsString:
server
isSpotlightVisible
systemAppPid
boolValue
floatValue
contextIdForPosition:displayId:
touchRepresentationWithHandType:location:
handInfo
paths
firstPath
setPathWindowContextID:
_accessibilityApplicationForContextId:
setPid:
accessibilityConvertHostedViewPoint:toContextId:displayId:
setPathLocation:
setTransducerType:
setContextId:
additionalFlags
setAdditionalFlags:
setOrbValue:
_commonEventRepForTouchEventWithType:location:force:flags:contextId:
_sendEventRep:
setAltitude:
setAzimuth:
_accessibilityViewPointFromHostedViewContext:displayId:
windowServer
contextIdAtPosition:
setSenderID:
setSecureName:
_sendPressFingerEvent:location:force:flags:contextId:secureName:
sleepForTimeInterval:
_accessibilityCarPlayApplicationPid
_accessibilitySpringBoardApplication
_accessibilityUIServerApplication
_accessibilityAssistiveTouchApplication
_accessibilityNativeFocusedApplication
numberWithBool:
accessibilityLabel
accessibilityValue
accessibilityTraits
numberWithUnsignedLongLong:
doubleValue
_releasePendingEvents:
representationWithData:
_accessibilityRepostEvent:
objectAtIndex:
pointValue
_sendFingerEvent:location:force:flags:contextId:
objectForKey:
simulatePressAtPoint:withContextId:withDelay:withForce:withSecureName:
sharedInstance
userEventOccurred
_sendCancelTouchEvent
objectAtIndexedSubscript:
_sendStylusEvent:location:force:altitude:azimuth:flags:contextId:
buttonRepresentationWithType:
sendHIDSystemEvent:repostCreatorHIDEvent:senderID:
valueWithPoint:
_accessibilityConvertHostedViewPoint:fromContextId:displayId:
windowServerDisplayForDisplayId:
displays
isEqual:
setObject:forKey:
numberWithUnsignedInt:
rectValue
accessibilityConvertHostedViewFrame:toContextId:displayId:
valueWithRect:
accessibilityConvertHostedViewFrame:fromContextId:displayId:
_accessibilityDisplayRequiresRotateForPoints:
name
TVOutDisplay
isExternal
mainDisplay
displayWithDisplayId:
sendUserEventOccurred
lock
unlock
distantFuture
timeIntervalSinceNow
removeObjectAtIndex:
dispatchEventRepresentationToClient:
length
getBytes:length:
machPortForPoint:
_processPassiveEventQueue
countByEnumeratingWithState:objects:count:
currentThread
setName:
originalType
_handleItemChooserVisible:
_userEventOccurred
type
pathWindowContextID
pathLocation
location
setLocation:
windowLocation
setWindowLocation:
copy
_undoContextShiftedPoints:
dataRepresentation
_startPassiveResendThread
detachNewThreadSelector:toTarget:withObject:
addObject:
_gaxCapture:
_inspectorCapture:
_assistiveTouchCapture:
_screenReaderCapture:
initializeAccessibilityMonitor
resetAccessibilityUIHitPort
_accessibilityIsInternalInstall
allJobLabels
_accessibilitySystemAppApplicationBundleId
accessibilityConvertHostedViewPoint:fromContextId:displayId:
_accessibilityEventTapCallback:
accelerometerDisabled
_runtimeManager
_accelerometerDisabled
TB,N,V_accelerometerDisabled
initWithDomain:
synchronize
boolForKey:
setGizmoApplicationAccessibilityEnabled:
arrayWithObjects:count:
sendEvent:afterTap:useGSEvent:namedTaps:options:
initWithUTF8String:
convertPoint:fromContextId:displayId:
convertPoint:toContextId:displayId:
removeEventTap:
installEventTap:identifier:type:
blueLightClient
setStatusNotificationBlock:
supportsBlueLightReduction
setSupportsAdvancedDisplayFilters:
dealloc
supported
blueLightStatusEnabled
getBlueLightStatus:
setMode:
setEnabled:
adaptationEnabled
adaptationClient
getEnabled
disableBrightnessFilters
brightnessFiltersEnabled
restoreCachedBrightnessFilters
supportsAdaptation
_brightnessClient
_blueLightStatusEnabled
disableAllFilters
_updateNotificationCache
stringWithFormat:
_handleFrameRateLimit
updateSettings
_updateSettings:
classicInvertColors
registerUpdateBlock:forRetrieveSelector:withListener:
setLastCommittedReduceWhitePointEnabledStatus:
setLastCommittedReduceWhitePointValue:
shouldLimitDisplayRefreshRate
displayType
setAccessibilityFrameRateLimitEnabled:
_allowSoftwareFilters
initWithIdentifier:serviceBundleName:
setDelegate:
_invertColorsEnabled
setInvertColorsWasEnabled:
setGrayscaleWasEnabled:
setReduceWhitePointWasEnabled:
setIgnoringNotifications:
invertColorsWasEnabled
grayscaleWasEnabled
reduceWhitePointWasEnabled
_forceSoftwareFilters
supportsAccessibilityDisplayFilters
invertsColors
setInvertsColors:
setAllowsExtendedDynamicRange:
isGrayscale
setGrayscale:
setMaximumBrightness:
reduceWhitePointRampStartTime
reduceWhitePointRampTime
reduceWhitePointRampStartValue
reduceWhitePointRampEndValue
reduceWhitePointRampDownFilter
_applyMatrixFilter:whitePointReduction:
numberWithDouble:
currentDisplayLinkManager
_whitePointRampDown
removeTarget:selector:
lastCommittedReduceWhitePointEnabledStatus
lastCommittedReduceWhitePointValue
setDisplayFilterFromLastUpdate:
didEnableHWFilters
setDidEnableHWFilters:
setReduceWhitePointRampStartTime:
setReduceWhitePointRampTime:
setReduceWhitePointRampEndValue:
setReduceWhitePointRampStartValue:
setReduceWhitePointRampDownFilter:
addTarget:selector:
softwareFiltersEnabled
setSoftwareFiltersEnabled:
displayFilterUIClient
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
setAccessibilityColorMatrix:scale:
ignoringNotifications
_updateMatrixSupport
_updateCoreSupport
removeObserver:
initializeMonitor
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
displayFilterFromLastUpdate
_updateBrightnessFilters:
_repostNotificationIfNeeded
setDisplayFilterUIClient:
_displayFilterFromLastUpdate
_softwareFiltersEnabled
_didEnableHWFilters
_invertColorsWasEnabled
_grayscaleWasEnabled
_reduceWhitePointWasEnabled
_ignoringNotifications
_displayFilterUIClient
_lastCommittedReduceWhitePointValue
_lastCommittedReduceWhitePointEnabledStatus
_reduceWhitePointRampStartTime
_reduceWhitePointRampTime
_reduceWhitePointRampStartValue
_reduceWhitePointRampEndValue
_reduceWhitePointRampDownFilter
T@"AXUIClient",&,N,V_displayFilterUIClient
TB,N,V_softwareFiltersEnabled
TB,N,V_didEnableHWFilters
TB,N,V_invertColorsWasEnabled
TB,N,V_grayscaleWasEnabled
TB,N,V_reduceWhitePointWasEnabled
TB,N,V_ignoringNotifications
Td,N,V_lastCommittedReduceWhitePointValue
Td,N,V_lastCommittedReduceWhitePointEnabledStatus
Td,N,V_reduceWhitePointRampStartTime
Td,N,V_reduceWhitePointRampTime
Td,N,V_reduceWhitePointRampStartValue
Td,N,V_reduceWhitePointRampEndValue
T^{__MADisplayFilter=},&,N,V_reduceWhitePointRampDownFilter
processExternalHIDEvent:
convertPoint:toContextId:
convertPoint:fromContextId:
fakeTouchScaleEventRepresentation:
pathIndex
touchCounter
contextId
displayId
uniqueId
_processHIDEvent:
clientId
taskPort
ignoreLogging
identifier
setClientId:
pidForBundleID:
build:
copyClientForDestination:
setTaskPort:
pathAttributes
preciseLocationX
preciseLocationY
displayConvertToCAScreen:withDisplayIntegerId:
secureName
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:secureName:
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:
setAuthenticationMessage:
contextIdHostingContextId:
eventType
systemEventPort
setHomeIsDown:
_normalizeEventForContext:
displayConvertFromCAScreen:withDisplayIntegerId:
clientPortOfContextId:
clientPortAtPosition:
registerEventListener:
setDisableSystemGestureRecognitionInEvents:
contextIdHosterForContextId:
postEvent:systemEvent:afterNamedTap:namedTaps:
lastRecordPostedThroughHID
clearLastRecordPostedThrougHID
clientPortForContextId:
homeIsDown
_eventTapIdentifier
_homeIsDown
_overrideGestureRecognitionState
_eventListenerEnabled
_userDevice
_lastHIDRecord
TB,N,V_homeIsDown
_loadInternalBundle
bundleWithPath:
principalClass
_loadBackboardServerBundle
sharedConnection
effectiveBoolValueForSetting:
addObserver:
_guidedAccessServer
loadAndReturnError:
inGuidedAccess
allowsTripleClickSheet
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
_notificationToken
_updateGrayScaleSettings
_updateEventTap
_stickyKeysEnabledChanged
stickyKeysEnabled
_stickyKeysShiftToggleChanged
stickyKeysShiftToggleEnabled
_slowKeysEnabledChanged
_slowKeysAcceptanceDelayChanged
removeObserver:name:object:
flags
keyCode
usagePage
_notifyServerStickyKeyUpdatedForKeycode:usagePage:down:up:locked:
setShouldNotUpdateHIDClientForNextStickyKeysEnabledChange:
setStickyKeysEnabled:
_notifyServerStickyKeysToggledViaShift
_notifyServerStickyKeysDisabled
numberWithUnsignedInteger:
eventTapIdentifier
senderID
_updateStateForKeyboardEvent:
_updateKeyboardService:
installKeyboardEventTap:identifier:matchingServiceHandler:
setEventTapIdentifier:
setEventTapPriority:priority:
runMatchingServiceHandlerForEventTap:
shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
_stickyKeysClient
mainAccessQueue
numberWithUnsignedShort:
numberWithInteger:
dictionaryWithObjects:forKeys:count:
_shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
T@"NSString",C,N,V_eventTapIdentifier
TB,N,V_shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
_updateFeature
localizationQACaptionMode
startService
stopService
controller
_wasEnabled
_showLookingGlassMenu
_updateLookingGlassServicesIfNeeded
updateLookingGlassServices
showLookingGlassMenu
unused
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
__os_unfair_lock__
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
validateClass:
validateClass:hasInstanceVariable:withType:
setDebugBuild:
setValidationTargetName:
setOverrideProcessName:
performValidations:withPreValidationHandler:postValidationHandler:
safeCategoryTargetClassName
safeCategoryBaseClass
safeFloatForKey:
localizedStringWithFormat:
_accessibilityUnregister
_accessibilityPerformValidations:
_isSerializableAccessibilityElement
isAccessibilityElement
accessibilityFrame
_startWatchingForDeathOfAccessibilityUIServerPID
_notifySpeakThisOfSettingsChange
showSpeechController
showSpeechController:
hideSpeechController:
isMainThread
invalidate
initWithPID:queue:deathHandler:
didUpdateAccessibilityUIServerPID
_speakThisQueue
_accessibilityUIServerDeathWatcher
startHoverTextAndReturnError:
stopHoverTextAndReturnError:
setHoverTextEnabled:
_showHoldDurationTripleClickHelp
_hideHoldDurationTripleClickHelp
_updateTouchAccommodationsSetting
touchAccommodationsHoldDurationEnabled
touchAccommodationsIgnoreRepeatEnabled
touchAccommodationsTapActivationMethod
touchAccommodationsEnabled
touchAccommodationsAreConfigured
touchAccommodationsClient
processInfo
processIdentifier
_clientIdentifier
showHoldDurationTripleClickHelp
hideHoldDurationTripleClickHelp
_registerForTouchAccommodationsAXSettingsUpdate
setTouchAccommodationsClient:
_areTouchAccommodationsInEffect
_touchAccommodationsQueue
_touchAccommodationsClient
T@"AXUIClient",&,N,V_touchAccommodationsClient
_kickstartAssistiveTouchIfNeeded
setZoomTouchEnabled:
initializeZoomMonitor
getZoomBundlePrincipalClassForcingLoad:
bundleForClass:
localizedStringForKey:value:table:
_shouldValidateEntitlements
_accessibilitySetEventTapCallback:
setInstallationGSCallback:
_accessibilitySetHIDEventTapCallback:
setInstallationHIDCallback:
setInstallationEventRepPost:
load
initialize
_loadAuxiliaryBundles
backBoardServerInstance
installSafeCategory:canInteractWithTargetClass:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
defaultManager
fileURLWithPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
allObjects
pathExtension
bundleWithURL:
updateStatistics
_repeatAggregateStatistics
resetTimer:mode:
userEventOccurredOnDisplay:
_displayConvertFromCAScreen:withDisplayIntegerId:
_displayConvertFromCAScreen:
_displayConvertToCAScreen:withDisplayIntegerId:
_displayConvertToCAScreen:
_accessibilityProcessExternHIDEvent:
setLockScreenDimTimerEnabled:
_axSetTimerDisabled:
_isDisplayBacklightOff
postNotificationName:object:
_setCapsLockLightOn:
kickoffAggregateStatistics
siriViewServicePid
isDisplayBacklightOff
convertFrame:fromContextId:displayId:
convertFrame:toContextId:displayId:
contextIdForDisplayPoint:
setAssistiveTouchPid:
accessibilityAssistiveTouchPid
setAccessibilityUIServerPid:
setFullKeyboardAccessDaemonPID:
accessibilityFullKeyboardAccessDaemonPid
setSiriViewServicePid:
hearingAidServerPid
setHearingAidServerPid:
zoomListenerRegistered
setCapsLockLightOn:
setIsSpeakScreenHighlightVisible:
_initServer
_handleRegisterZoomConflict:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
_handleZoomAdjustment:
_handleConvertFrameFromContextId:
_handleConvertFrameToContextId:
_handleConvertFrameFromContextIdToContextId:
_handleContextHostingIdForContextId:
_handleContextIdForPosition:
_handlePostEvent:
_handleUserEventOccurred:
_handleSetCapsLockLightOn:
_handleEventListenerRegistration:
_handleRegisterAssistiveTouchPID:
_handleRegisterAccessibilityUIServerPID:
_handleRegisterSiriViewServicePID:
_handleRegisterHearingAidServerPID:
_handleAXUIServerPID:
_handleAssistiveTouchPID:
_handleHearingAidServerPID:
_handleFullKeyboardAccessDaemonPID:
_handleRegisterFullKeyboardAccessDaemonPID:
_handleLockScreenDimTimerEnabled:
_handleGetGuidedAccessAvailability:
_handleSetInPreBoardMode:
_handleInPreBoardMode:
_handleSetInCheckerBoardMode:
_handleInCheckerBoardMode:
_handleSessionIsLoginSession:
_handleSetSessionIsLoginSession:
_handleIsGuidedAccessActive:
_handleIsGuidedAccessInWorkspace:
_handleGuidedAccessEffectiveAppBundleIdentifier:
_handleGuidedAccessIgnoredRegions:
_handleGuidedAccessAutomationCommand:completion:
setHandlerWithTarget:selector:async:forKey:possibleRequiredEntitlements:
_handleGuidedAccessCurrentModeAndSessionApp:
_handleIsGuidedAccessSelfLockedToRequestingApp:
_handleSetGuidedAccessEnabledByRequestingApp:completion:
_handleIsGuidedAccessUnmanagedSelfLocked:
setHandlerWithTarget:selector:forKey:
_handleIsRestrictedForAAC:
_handleInvertColorsChange:
_setAXPreferenceAsMobile:
_axPreferenceAsMobile:
_handleSetSwitchControlRendersDeviceUnusable:
_handleSetSwitchControlHasScreenSwitch:
_handleSetZoomInitialFocusRect:
setHandlerWithTarget:selector:async:forKey:
_handleGetZoomInitialFocusRect:
_handleTripleClickHomeButtonFired:
_handleHomeClickSwallowedForGuidedAccess:
_handleDisableBrightnessFilters:
_handleBrightnessFiltersEnabled:
_handleBlueLightStatusEnabled:
_handleRestoreCachedBrightnessFilters:
_handleAdaptationEnabled:
_handleSupportsAdaptation:
_handleLoadGAXBundleForUnmanagedASAM:
_handleResetAccessibilityFeatures:
_handleToggleGuidedAccess:
_handleGetLastSetColorFilter:
_handleConvertPointFromContextId:
_handleConvertPointToContextId:
_handleSetIsSpeakScreenHighlightVisible:
_setDeviceOrientation:
initWithServiceName:perPidService:
startServerWithError:
setQueueSize:
_initializeHandlers
removeAllHandlersForTarget:
replayer
loadGAXBundleForUnmanagedASAM
replayWithName:attempts:interval:async:queue:replayBlock:completion:
payload
postNotificationName:object:userInfo:
delegate
initWithKey:payload:
objectForKeyedSubscript:
dictionaryWithObject:forKey:
clientPort
serviceMachPort
indexOfObjectPassingTest:
initWithPort:
connectWithError:
setPortDeathHandler:
_inPreBoardMode
_inCheckerBoardMode
_gaxBackboard
homeClickSwallowedInSpringBoard
_sessionIsLoginSession
addRotorOptionsForLoginSession
configureZoomForLoginSession
availabilityForExternalRequestWithSpringboardParameters:
handleGuidedAccessAutomationCommand:completion:
dictionary
setObject:forKeyedSubscript:
hasPrefix:
senderBundleId
auditToken
setEnabled:fromAppWithIdentifier:withAuditToken:configuration:completion:
isSelfLockedToAppWithIdentifier:
isUnmanagedSelfLocked
isRestrictedForAAC
arrayWithCapacity:
currentGuidedAccessModeForBackboardServer
currentSessionApp
null
forceLoadGAXBundle
resetAccessibilityFeatures
colorFilterFromLastUpdate
dataWithBytes:length:
integerValue
backBoardServerInstanceIfExists
_server
_eventListeners
_zoomListeners
_initialZoomFocusRect
_eventTapClients
_heardDeathWatcher
_uiServerDeathWatcher
_astDeathWatcher
_fkaDeathWatcher
_delegate
T@"<AXBackBoardServerInstanceDelegate>",W,N,V_delegate
date
timeIntervalSince1970
UTF8String
processEvent:sender:dispatcher:
orientationManager:deviceOrientationMayHaveChanged:changeSource:isDeviceOrientationLocked:
_axIsTimerDisabled
_axSetDesiredTimeout:
_axSetDesiredMode:
_axDesiredTimeout
_axDesiredMode
d16@0:8
v24@0:8d16
@16@0:8
v24@0:8@16
v16@0:8
@32@0:8{?=QQ}16
B16@0:8
@32@0:8{CGPoint=dd}16
v20@0:8B16
i20@0:8I16
v32@0:8@16q24
@52@0:8I16{CGPoint=dd}20d36I44I48
v52@0:8I16{CGPoint=dd}20d36I44I48
v68@0:8I16{CGPoint=dd}20d36d44d52I60I64
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48I52
{CGPoint=dd}40@0:8{CGPoint=dd}16I32I36
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
v56@0:8B16{CGPoint=dd}20d36I44I48I52
v52@0:8{CGPoint=dd}16I32f36d40I48
@32@0:8q16@24
B32@0:8i16@20I28
B24@0:8@16
@20@0:8I16
B20@0:8I16
@"AXSimpleRuntimeManager"
@"CBClient"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
v24@0:8^{__MADisplayFilter=}16
^{__MADisplayFilter=}16@0:8
v32@0:8^{__MADisplayFilter=}16d24
^{__MADisplayFilter=}
@"AXUIClient"
i16@0:8
I16@0:8
v24@0:8^{__IOHIDEvent=}16
I20@0:8I16
v44@0:8@16B24@28@36
I36@0:8{CGPoint=dd}16I32
I32@0:8{CGPoint=dd}16
@"NSString"
^{__IOHIDUserDevice=}
@"AXEventRepresentation"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v24@0:8^{__IOHIDServiceClient=}16
v36@0:8S16I20B24B28B32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSObject<OS_dispatch_queue>"
@"BSProcessDeathWatcher"
#20@0:8B16
@44@0:8{CGPoint=dd}16I32@36
@48@0:8{CGPoint=dd}16I32@36I44
v20@0:8i16
v44@0:8@"AXEventRepresentation"16B24@"NSString"28@"NSArray"36
{AXBColorFilterDescription=[3[3d]]}16@0:8
@"<AXBackBoardServerInstanceDelegate>"16@0:8
@"<AXBackBoardServerInstance>"16@0:8
@24@0:8@16
v32@0:8@16@?24
@"AXIPCServer"
@"NSMutableArray"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"<AXBackBoardServerInstanceDelegate>"
q40@0:8N^^{__IOHIDEvent}16@24@32
v44@0:8@16q24q32B40
v28@0:8d16i24
v16@?0@"NSNotification"8
NanoAccessibilityDefaultsChanged
v8@?0
@32@?0{?=QQ}8q24
@40@?0{?=QQ}8q24@32
v40@?0{?=QQ}8q24@32
B40@?0{?=QQ}8i24@28I36
v16@?0@8
@8@?0
@44@?0{?=QQ}8{CGPoint=dd}24I40
BKBootUIPresenter
sharedInstance
isShowingBootUI
_overlay
BKDisplayRenderOverlayAppleLogo
_puiProgressWindow
com.apple.assistivetouchd
com.apple.accessibility.AccessibilityUIServer.gsEvents
GetJobs
BKSystemShellSentinel
systemApplications
B32@?0@8Q16^B24
bundleIdentifier
primarySystemShell
BKHIDSystemInterface
deliveryManager
processDescription
Spotlight
ACCESSIBILITY: SB has not checked in. No SB Pid!
ax-send-event-queue
AX Error: error reposting event. value expected to be data
contextId
point
displayId
TVOut
AXPassiveResentThread
com.apple.Accessibility
ApplicationAccessibilityEnabled
B16@?0@"AXEventRepresentation"8
BB-AX
AXBrightnessFilterCacheNightShift
AXBrightnessFilterCacheAutoWhiteBalance
v16@?0^{?=BBBi{?={?=ii}{?=ii}}QB}8
DisplayFilterIPrimaryClientID
%@-toggle-testing
showFilters
forceSoftwareFilter
systemApp unexpectedly returned nil
BKSHIDEventDeferringResolution
Could not dispatch this event because there's no connection for: %{private}@
No IOHIDSenderID recorded for this event, please add one: %@
/AppleInternal/Library/AccessibilityUIServices/AXBInternalBundleLoader.bundle
isActive
isInWorkspace
allowsTripleClickSheet
/System/Library/AccessibilityBundles/GAXBackboardServer.bundle
HIDStickyKeysDisabled
HIDStickyKeysOn
HIDStickyKeysShiftToggles
HIDSlowKeysDelay
v16@?0^{__IOHIDServiceClient=}8
AXBHardwareKeyboardsManager
StickyKeys
v24@?0@"NSDictionary"8@"NSError"16
Error sending message that sticky keys were enabled via shift: %@
Error disabling sticky keys: %@
Error updating sticky key state: %@
LookingGlassServices
Class getLookingGlassServicesClass(void)_block_invoke
AXBLookingGlassManager.m
Unable to find class %s
void *LookingGlassServicesLibrary(void)
B16@?0@"AXValidationManager"8
BKUserEventTimer
userEventOccurredOnDisplay:
BKAccessibility
_accessibilityProcessExternHIDEvent:
^{__IOHIDEvent=}
_accessibilitySetEventTapCallback:
_accessibilityEventTapCallback
_accessibilityHIDEventTapCallback
_accessibilitySetHIDEventTapCallback:
_displayConvertToCAScreen:
{CGPoint=dd}
_displayConvertFromCAScreen:
_objectWithinProximity
_isDisplayBacklightOff
_setCapsLockLightOn:
_eventRoutingClientConnectionManager
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:secureName:
BKSystemShellDescriptor
BKHIDClientConnectionManager
copyClientForDestination:
^{__IOHIDEventSystemConnection=}
copyClientForTaskPort:
pidForBundleID:
build:
BKSMutableHIDEventDeferringResolution
setPid:
BKHIDEventDeliveryManager
destinationsForEvent:sender:
_currentMode
_currentTimeout
_queue
NSObject<OS_dispatch_queue>
BKDisplayRenderOverlay
PUIProgressWindow
AX Backboard Bundle
Backboard Bundle
_currentProgress
data.migration.title
data.migration.value
SpeakThisQueue
v16@?0@"NSError"8
SpeakThisServices
Class getSpeakThisServicesClass(void)_block_invoke
AXBSpeakThisManager.m
void *SpeakThisServicesLibrary(void)
Accessibility
HoverText
id<HoverTextServiceProtocolObjC> HoverTextObjc_Soft(void)
AXBHoverTextManager.m
HoverTextObjc
void *HoverTextServicesLibrary(void)
TouchAccommodationsQueue
TouchAccommodationsClientIdentifier-%@
TouchAccommodations
backboardbundle
BBAXLoadingQueue
v16@?0^v8
v16@?0@"AXEventRepresentation"8
/System/Library/AccessibilityBundles/BackBoardExtras.axbundle
CMDeviceOrientationManager
AX Backboard
Backboard
v24@?0@"AXValidationManager"8Q16
v16@?0@"AXValidationManager"8
BKAccelerometerInterfaceAccessibility
BKUserEventTimerAccessibility
PUIProgressWindowAccessibility
B24@?0@"NSURL"8@"NSError"16
Repeating AX aggd
Kicking off AX aggd
notifyOnNextUserEvent
ZoomListenerRegistered
UIAXZoomRegisterConflict
com.apple.accessibility.physicalinteraction.client
com.apple.private.kernel.jetsam
com.apple.accessibility.voiceover
com.apple.accessibility.AccessibilityUIServer
com.apple.assistivetouch.daemon
com.apple.accessibility.api
com.apple.private.allow-explicit-graphics-priority
com.apple.ax.eventlisten
com.apple.voiceservices.tts.customvoice
com.apple.hearingaids
com.apple.accessibility.automation.client
com.apple.fullkeyboardaccess
com.apple.backboard.client
com.apple.GAX.SPI
com.apple.invert.colors.write.access
com.apple.private.iamlockdown
com.apple.commandandcontrol
com.apple.CoreRoutine.preferences
com.apple.AXApp
error: %@
Ping SpringBoard for unmanaged ASAM
B24@?0^@8^@16
v28@?0B8@12@"NSError"20
unable to ping SpringBoard to load the GAX bundle: %@
displayPoint
result
frame
fromContextId
toContextId
axbackboard-post
record
systemEvent
afterNamedTap
namedTaps
start
enabled
rect
GAXBackboard
inPreboardMode
inCheckerBoardMode
sesionIsLoginSession
availability
isPasscodeViewVisible
effectiveAppBundleIdentifier
v16@?0@"NSDictionary"8
Guided Access is not loaded
command
GAX Backbaord instance does not respond to handleGuidedAccessAutomationCommand:
ERROR:
ERROR: %@
error
v16@?0B8B12
_accessIgnoredTouchRegions
preference
value
notification
Resetting accessibility features on behalf of %@
filterData
visible
deviceOrientation
BKAccelerometerInterface
^^{__IOHIDEvent}
processEvent:sender:dispatcher:
orientationManager: deviceOrientationMayHaveChanged: changeSource: isDeviceOrientationLocked:
resetTimer: mode:
Found more than one non-CarPlay system app, returning first object: %@
Did not find any non-CarPlay system apps, returning systemApp from backboard.
Determined system app: %@
Pid from system app was not valid: %@ %@
Spotlight is still retaining keyboard focus when asking for native focus app
Simulating press: %@
AX: Setting frame rate limit: %d on %@
Apply ramp down: %@ -> percentage: %@ : startValue: %@
Finish white point ramp down: %@
White point start %@ -> end %@ : duration: %@
Setting Matrix; Gain: %f WhitePointReduction: %f Matrix: [ [%0.5f, %0.5f, %0.5f], [%0.5f, %0.5f, %0.5f], [%0.5f, %0.5f, %0.5f] ]
Could not create an event ref from: %@
%{public}@
****************** Loading GAX Backboard Server Bundle ****************
**** AX Error: Could not load GAXBackboardServer bundle. bundleWithPath came back nil
**** AX Error: Accessibility: Could not load GAXBackboardServer bundle
**** AX Error: Could not initialize GAXBackboardServer instance: %@
Initializing monitor: AXBLookingGlassManager
About to show looking glass menu
Clearing highlight state because backboardd just started up.
Error notifying SpeakThis of setting change: %@
Should have accessed AXUIServer PID on the main thread.
Not watching for death of AXUIServer, because Speak Screen was not enabled.
Start watching for death of AXUIServer: %i
Clearing highlight state because AXUIServer died.
Not watching for death of AXUIServer, because PID unavailable.
Asked to enable/disable HoverText but feature flag is off, so no
HoverText monitor asked to enable HoverText: %ld
Error toggling HoverText: %@
Error enumerating auxiliary bundles: %@
Failed to load auxiliary bundle %@: %@
FKA pid: %d
Setting highlight state to visible: %i.
Asked to set highlight state to visible %i, but AXUIServer PID wasn't registered. Clearing highlight state.
AST process went away, resetting pid
UIServer process went away, resetting pid
FKA process went away, resetting pid
Received request to set Guided Access enabled=%i, but GAXBackboard was nil.
_handleToggleGuidedAccess: %@
setting idle timer disabled: %d
Couldn't get the internal queue for BKUserEventTimer. This can lead to us accidentally making the timer get stuck off.
Someone asked to reset idle timer but it is disabled by accessibility. timeout: %f mode: %d
softlink:o:path:/System/Library/../../AppleInternal/Library/Frameworks/LookingGlassServices.framework/LookingGlassServices
softlink:r:path:/System/Library/PrivateFrameworks/SpeakThisServices.framework/SpeakThisServices
softlink:r:path:/System/Library/PrivateFrameworks/HoverTextServices.framework/HoverTextServices
P $(P,
?ffffff
?333333
TimeValuePair
AXBAccessibilityManager
AXBBlueLightManager
AXBDisplayFilterManager
AXUIClientDelegate
NSObject
AXBEventManager
AXBInternalBundleLoaderManager
AXBGuidedAccessManager
MCProfileConnectionObserver
AXBHardwareDisplayModifier
AXBHardwareKeyboardsManager
AXBLocalizationCaptionController
AXBLookingGlassManager
__AXBValidation
__PUIProgressWindowAccessibility_super
SafeCategory
PUIProgressWindowAccessibility
AXBSpeakThisManager
AXBHoverTextManager
AXBTouchAccommodationsController
AXBAssistiveTouchManager
AXBZoomTouchManager
BBOverride
AXBackBoardGlue
AXBackBoardServerInstanceDelegate
AXBackBoardServerInstance
__BKAccelerometerInterfaceAccessibility_super
BKAccelerometerInterfaceAccessibility
__BKUserEventTimerAccessibility_super
OS_dispatch_queue
OS_dispatch_object
BKUserEventTimerAccessibility
isSelfLockedToAppWithIdentifier:
pathWindowContextID
auditToken
TVOutDisplay
setAltitude:
synchronize
name
safeArrayForKey:
isRestrictedForAAC
currentDisplayLinkManager
setAllowsExtendedDynamicRange:
pathLocation
initWithPID:queue:deathHandler:
runMatchingServiceHandlerForEventTap:
initWithKey:payload:
clientPortOfContextId:
usagePage
floatValue
mainQueue
pathIndex
isMainThread
countByEnumeratingWithState:objects:count:
setAdditionalFlags:
setEventTapPriority:priority:
arrayWithObjects:count:
flags
clientPortAtPosition:
arrayWithCapacity:
mainDisplay
setKeyCode:
updateStatistics
pathExtension
initWithIdentifier:serviceBundleName:
count
isGrayscale
rectValue
clientPort
_displayConvertToCAScreen:
mainAccessQueue
pathAttributes
supportsAccessibilityDisplayFilters
firstPath
setAccessibilityFrameRateLimitEnabled:
setEnabled:fromAppWithIdentifier:withAuditToken:configuration:completion:
initWithDomain:
copyClientForTaskPort:
processInfo
sharedConnection
_setCapsLockLightOn:
isExternal
array
clientId
setInvertsColors:
_isDisplayBacklightOff
supported
firstObject
updateLookingGlassServices
copyClientForDestination:
setAccessibilityColorMatrix:scale:
_accessibilitySetHIDEventTapCallback:
originalType
processIdentifier
setEnabled:
isEqualToString:
anyObject
indexOfObjectPassingTest:
stringWithUTF8String:
setQueueSize:
lock
_displayConvertFromCAScreen:
allObjects
copy
setWindowLocation:
fileURLWithPath:
serviceMachPort
setInstallationHIDCallback:
stringWithFormat:
setPortDeathHandler:
buttonRepresentationWithType:
location
objectForKeyedSubscript:
unsignedIntValue
dictionaryWithObjects:forKeys:count:
principalClass
invertsColors
bundleWithURL:
additionalFlags
setInstallationGSCallback:
localizedStringWithFormat:
stopService
ignoreLogging
fakeTouchScaleEventRepresentation:
representationWithData:
convertPoint:toContextId:
unlock
objectForKey:
dictionaryWithObject:forKey:
serverIfRunning
setPid:
setValidationTargetName:
preciseLocationY
replayer
addTarget:selector:
setInstallationEventRepPost:
localizedStringForKey:value:table:
stopHoverTextAndReturnError:
uniqueId
bundleWithPath:
eventType
identifier
UTF8String
objectAtIndexedSubscript:
dictionary
server
setPerformActionCallback:
addRotorOptionsForLoginSession
invalidate
preciseLocationX
replayWithName:attempts:interval:async:queue:replayBlock:completion:
setTransducerType:
bundleForClass:
localizationQACaptionMode
integerValue
senderID
postNotificationName:object:userInfo:
convertPoint:fromContextId:
setDebugBuild:
type
objectAtIndex:
setPathWindowContextID:
setTaskPort:
detachNewThreadSelector:toTarget:withObject:
loadGAXBundleForUnmanagedASAM
addObserverForName:object:queue:usingBlock:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
builtinDisplay
senderBundleId
removeTarget:selector:
postNotificationName:object:
numberWithUnsignedShort:
setPathLocation:
addObserver:selector:name:object:
touchRepresentationWithHandType:location:
hideSpeechController:
setSystemWideServer:
loadAndReturnError:
setContextId:
destinationsForEvent:sender:
effectiveBoolValueForSetting:
intValue
build:
startService
removeObserver:name:object:
touchCounter
numberWithUnsignedLongLong:
setParameterizedAttributeCallback:
installSafeCategory:canInteractWithTargetClass:
addObserver:
startServerWithError:
setSupportsAdvancedDisplayFilters:
setClientObserverCallback:
load
removeObserver:
doubleValue
setHitTestCallback:
setOverrideProcessName:
numberWithUnsignedInteger:
defaultManager
contextIdHostingContextId:
sendHIDSystemEvent:repostCreatorHIDEvent:senderID:
installKeyboardEventTap:identifier:matchingServiceHandler:
setStickyKeysEnabled:
setClientId:
windowLocation
pointValue
addObject:
startHoverTextAndReturnError:
distantFuture
hasPrefix:
removeObjectAtIndex:
length
boolValue
numberWithUnsignedInt:
sendEvent:afterTap:useGSEvent:namedTaps:options:
setOrbValue:
pidForBundleID:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
setStatusNotificationBlock:
installEventTap:identifier:type:
valueWithRect:
defaultCenter
removeEventTap:
boolForKey:
displays
setObject:forKeyedSubscript:
start
touchAccommodationsAreConfigured
numberWithInteger:
date
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
removeAllHandlersForTarget:
adaptationClient
valueWithPoint:
setAzimuth:
setHandlerWithTarget:selector:forKey:
dataWithBytes:length:
displayWithDisplayId:
handleFailureInFunction:file:lineNumber:description:
secureName
timeIntervalSinceNow
setObject:forKey:
numberWithInt:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
setAuthenticationMessage:
setHandlerWithTarget:selector:async:forKey:possibleRequiredEntitlements:
displayType
registerUpdateBlock:forRetrieveSelector:withListener:
timeIntervalSince1970
_accessibilitySetEventTapCallback:
keyRepresentationWithType:
blueLightClient
sleepForTimeInterval:
setName:
validateClass:hasInstanceVariable:withType:
handInfo
numberWithFloat:
performValidations:withPreValidationHandler:postValidationHandler:
safeValueForKey:
contextIdAtPosition:
setHandlerWithTarget:selector:async:forKey:
setAttributeCallback:
dataRepresentation
displayId
keyInfo
taskPort
contextId
numberWithDouble:
validateClass:hasInstanceMethod:withFullSignature:
setMode:
safeUnsignedIntForKey:
showSpeechController:
currentThread
keyCode
setAssociatedDisplay:
setSetAttributeCallback:
setMaximumBrightness:
currentSessionApp
ax_filteredArrayUsingBlock:
getEnabled
numberWithBool:
payload
containsString:
safeStringForKey:
taskNamePortOfContextId:
validateClass:hasClassMethod:withFullSignature:
isUnmanagedSelfLocked
setSenderID:
initWithUTF8String:
null
connectWithError:
initWithServiceName:perPidService:
setGrayscale:
axArrayByIgnoringNilElementsWithCount:
validateClass:
safeFloatForKey:
currentHandler
availabilityForExternalRequestWithSpringboardParameters:
getBytes:length:
setSecureName:
paths
setApplicationElementCallback:
configureZoomForLoginSession
_accessibilityProcessExternHIDEvent:
currentGuidedAccessModeForBackboardServer
setGizmoApplicationAccessibilityEnabled:
isSpotlightVisible
initWithPort:
getBlueLightStatus:
setLocation:
userEventOccurredOnDisplay:
newHIDEventRef
safeBoolForKey:
fireTime
setFireTime:
value
setValue:
.cxx_destruct
Td,N,VfireTime
T@,&,N,Vvalue
init
resetAssistiveTouchHitPort
accessibilityLabel
accessibilityValue
accessibilityTraits
_startPassiveResendThread
updateAccessibilitySettings
initializeAccessibilityMonitor
sharedManager
_axElementForUID:
initializeAccessibility
disableAccessibility
_showingBootUI
_accessibilityHitTest:
resetAccessibilityUIHitPort
observerClientDied
_setDeviceOrientationCapability:
_sendCancelTouchEvent
_accessibilityRepostEvent:
_accessibilityApplicationForContextId:
_handlePidForSpecialCases:
_accessibilityIsInternalInstall
allJobLabels
_accessibilitySystemApp
_accessibilityCarPlayApp
_accessibilitySystemAppApplicationBundleId
_accessibilityCarPlayApplicationPid
_accessibilitySystemAppApplicationPid
_accessibilityUIServerApplication
_accessibilityAssistiveTouchApplication
_deliveryManager
_accessibilityNativeFocusedApplication
_accessibilitySpringBoardApplication
_iosAccessibilitySetValue:forAttribute:
_sendEventRep:
_commonEventRepForTouchEventWithType:location:force:flags:contextId:
_sendFingerEvent:location:force:flags:contextId:
_sendStylusEvent:location:force:altitude:azimuth:flags:contextId:
accessibilityConvertHostedViewFrame:fromContextId:displayId:
_accessibilityConvertHostedViewPoint:fromContextId:displayId:
_accessibilityViewPointFromHostedViewContext:displayId:
accessibilityConvertHostedViewFrame:toContextId:displayId:
accessibilityConvertHostedViewPoint:fromContextId:displayId:
accessibilityConvertHostedViewPoint:toContextId:displayId:
_sendPressFingerEvent:location:force:flags:contextId:secureName:
simulatePressAtPoint:withContextId:withDelay:withForce:withSecureName:
_iosAccessibilityAttributeValue:element:
_iosAccessibilityPerformAction:withValue:fencePort:
_iosAccessibilityAttributeValue:forParameter:
_accessibilityDisplayRequiresRotateForPoints:
windowServerDisplayForDisplayId:
_userEventOccurred
_processPassiveEventQueue
_releasePendingEvents:
_handleItemChooserVisible:
_screenReaderCapture:
_assistiveTouchCapture:
_inspectorCapture:
_gaxCapture:
_undoContextShiftedPoints:
_accessibilityEventTapCallback:
accelerometerDisabled
setAccelerometerDisabled:
_runtimeManager
_accelerometerDisabled
TB,N,V_accelerometerDisabled
dealloc
supportsBlueLightReduction
disableBrightnessFilters
brightnessFiltersEnabled
blueLightStatusEnabled
restoreCachedBrightnessFilters
adaptationEnabled
supportsAdaptation
_brightnessClient
_blueLightStatusEnabled
_updateSettings:
classicInvertColors
shouldLimitDisplayRefreshRate
_whitePointRampDown
disableAllFilters
sharedInstance
initializeMonitor
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
setDisplayFilterFromLastUpdate:
displayFilterFromLastUpdate
_handleFrameRateLimit
_updateBrightnessFilters:
_forceSoftwareFilters
_allowSoftwareFilters
_invertColorsEnabled
displayFilterUIClient
_updateNotificationCache
_repostNotificationIfNeeded
_updateCoreSupport
_updateMatrixSupport
_applyMatrixFilter:whitePointReduction:
updateSettings
setDisplayFilterUIClient:
softwareFiltersEnabled
setSoftwareFiltersEnabled:
didEnableHWFilters
setDidEnableHWFilters:
invertColorsWasEnabled
setInvertColorsWasEnabled:
grayscaleWasEnabled
setGrayscaleWasEnabled:
reduceWhitePointWasEnabled
setReduceWhitePointWasEnabled:
ignoringNotifications
setIgnoringNotifications:
lastCommittedReduceWhitePointValue
setLastCommittedReduceWhitePointValue:
lastCommittedReduceWhitePointEnabledStatus
setLastCommittedReduceWhitePointEnabledStatus:
reduceWhitePointRampStartTime
setReduceWhitePointRampStartTime:
reduceWhitePointRampTime
setReduceWhitePointRampTime:
reduceWhitePointRampStartValue
setReduceWhitePointRampStartValue:
reduceWhitePointRampEndValue
setReduceWhitePointRampEndValue:
reduceWhitePointRampDownFilter
setReduceWhitePointRampDownFilter:
_displayFilterFromLastUpdate
_softwareFiltersEnabled
_didEnableHWFilters
_invertColorsWasEnabled
_grayscaleWasEnabled
_reduceWhitePointWasEnabled
_ignoringNotifications
_displayFilterUIClient
_lastCommittedReduceWhitePointValue
_lastCommittedReduceWhitePointEnabledStatus
_reduceWhitePointRampStartTime
_reduceWhitePointRampTime
_reduceWhitePointRampStartValue
_reduceWhitePointRampEndValue
_reduceWhitePointRampDownFilter
T@"AXUIClient",&,N,V_displayFilterUIClient
TB,N,V_softwareFiltersEnabled
TB,N,V_didEnableHWFilters
TB,N,V_invertColorsWasEnabled
TB,N,V_grayscaleWasEnabled
TB,N,V_reduceWhitePointWasEnabled
TB,N,V_ignoringNotifications
Td,N,V_lastCommittedReduceWhitePointValue
Td,N,V_lastCommittedReduceWhitePointEnabledStatus
Td,N,V_reduceWhitePointRampStartTime
Td,N,V_reduceWhitePointRampTime
Td,N,V_reduceWhitePointRampStartValue
Td,N,V_reduceWhitePointRampEndValue
T^{__MADisplayFilter=},&,N,V_reduceWhitePointRampDownFilter
registerEventListener:
systemAppPid
windowServer
systemEventPort
_processHIDEvent:
convertPoint:toContextId:displayId:
convertPoint:fromContextId:displayId:
_normalizeEventForContext:
setDisableSystemGestureRecognitionInEvents:
dispatchEventRepresentationToClient:
contextIdHosterForContextId:
postEvent:systemEvent:afterNamedTap:namedTaps:
lastRecordPostedThroughHID
clearLastRecordPostedThrougHID
clientPortForContextId:
contextIdForPosition:displayId:
machPortForPoint:
homeIsDown
setHomeIsDown:
_eventTapIdentifier
_homeIsDown
_overrideGestureRecognitionState
_eventListenerEnabled
_userDevice
_lastHIDRecord
TB,N,V_homeIsDown
_loadInternalBundle
inGuidedAccess
allowsTripleClickSheet
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
_guidedAccessServer
_loadBackboardServerBundle
_notificationToken
_updateGrayScaleSettings
stickyKeysEnabled
stickyKeysShiftToggleEnabled
_slowKeysEnabledChanged
_slowKeysAcceptanceDelayChanged
_updateStateForKeyboardEvent:
_updateKeyboardService:
_updateEventTap
_stickyKeysClient
_stickyKeysEnabledChanged
_stickyKeysShiftToggleChanged
_notifyServerStickyKeysToggledViaShift
_notifyServerStickyKeysDisabled
_notifyServerStickyKeyUpdatedForKeycode:usagePage:down:up:locked:
eventTapIdentifier
setEventTapIdentifier:
shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
setShouldNotUpdateHIDClientForNextStickyKeysEnabledChange:
_shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
T@"NSString",C,N,V_eventTapIdentifier
TB,N,V_shouldNotUpdateHIDClientForNextStickyKeysEnabledChange
_updateFeature
controller
_wasEnabled
showLookingGlassMenu
unused
_updateLookingGlassServicesIfNeeded
_showLookingGlassMenu
__os_unfair_lock__
safeCategoryTargetClassName
safeCategoryBaseClass
_accessibilityUnregister
_accessibilityPerformValidations:
_isSerializableAccessibilityElement
isAccessibilityElement
accessibilityFrame
showSpeechController
_startWatchingForDeathOfAccessibilityUIServerPID
didUpdateAccessibilityUIServerPID
_notifySpeakThisOfSettingsChange
_speakThisQueue
_accessibilityUIServerDeathWatcher
setHoverTextEnabled:
touchAccommodationsHoldDurationEnabled
touchAccommodationsIgnoreRepeatEnabled
touchAccommodationsTapActivationMethod
touchAccommodationsEnabled
showHoldDurationTripleClickHelp
hideHoldDurationTripleClickHelp
_registerForTouchAccommodationsAXSettingsUpdate
_updateTouchAccommodationsSetting
_showHoldDurationTripleClickHelp
_hideHoldDurationTripleClickHelp
_clientIdentifier
touchAccommodationsClient
setTouchAccommodationsClient:
_areTouchAccommodationsInEffect
_touchAccommodationsQueue
_touchAccommodationsClient
T@"AXUIClient",&,N,V_touchAccommodationsClient
_kickstartAssistiveTouchIfNeeded
initializeZoomMonitor
getZoomBundlePrincipalClassForcingLoad:
setZoomTouchEnabled:
_shouldValidateEntitlements
_displayConvertFromCAScreen:withDisplayIntegerId:
_displayConvertToCAScreen:withDisplayIntegerId:
initialize
_loadAuxiliaryBundles
_repeatAggregateStatistics
kickoffAggregateStatistics
hidClientConnectionManager
sendUserEventOccurred
displayConvertFromCAScreen:withDisplayIntegerId:
displayConvertToCAScreen:withDisplayIntegerId:
processExternalHIDEvent:
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:secureName:
setLockScreenDimTimerEnabled:
accessibilityUIServerPid
assistiveTouchPid
siriViewServicePid
isDisplayBacklightOff
convertFrame:fromContextId:displayId:
convertFrame:toContextId:displayId:
contextIdForDisplayPoint:
userEventOccurred
setAssistiveTouchPid:
accessibilityAssistiveTouchPid
setAccessibilityUIServerPid:
setFullKeyboardAccessDaemonPID:
accessibilityFullKeyboardAccessDaemonPid
setSiriViewServicePid:
hearingAidServerPid
setHearingAidServerPid:
zoomListenerRegistered
setCapsLockLightOn:
setIsSpeakScreenHighlightVisible:
_handleRegisterZoomConflict:
_handleZoomAdjustment:
_handleConvertFrameFromContextId:
_handleConvertFrameToContextId:
_handleConvertFrameFromContextIdToContextId:
_handleContextHostingIdForContextId:
_handleContextIdForPosition:
_handlePostEvent:
_handleUserEventOccurred:
_handleSetCapsLockLightOn:
_handleEventListenerRegistration:
_handleRegisterAssistiveTouchPID:
_handleRegisterAccessibilityUIServerPID:
_handleRegisterSiriViewServicePID:
_handleRegisterHearingAidServerPID:
_handleAXUIServerPID:
_handleAssistiveTouchPID:
_handleHearingAidServerPID:
_handleFullKeyboardAccessDaemonPID:
_handleRegisterFullKeyboardAccessDaemonPID:
_handleLockScreenDimTimerEnabled:
_handleGetGuidedAccessAvailability:
_handleSetInPreBoardMode:
_handleInPreBoardMode:
_handleSetInCheckerBoardMode:
_handleInCheckerBoardMode:
_handleSessionIsLoginSession:
_handleSetSessionIsLoginSession:
_handleIsGuidedAccessActive:
_handleIsGuidedAccessInWorkspace:
_handleGuidedAccessEffectiveAppBundleIdentifier:
_handleGuidedAccessIgnoredRegions:
_handleGuidedAccessAutomationCommand:completion:
_handleGuidedAccessCurrentModeAndSessionApp:
_handleIsGuidedAccessSelfLockedToRequestingApp:
_handleSetGuidedAccessEnabledByRequestingApp:completion:
_handleIsGuidedAccessUnmanagedSelfLocked:
_handleIsRestrictedForAAC:
_handleInvertColorsChange:
_setAXPreferenceAsMobile:
_axPreferenceAsMobile:
_handleSetSwitchControlRendersDeviceUnusable:
_handleSetSwitchControlHasScreenSwitch:
_handleSetZoomInitialFocusRect:
_handleGetZoomInitialFocusRect:
_handleTripleClickHomeButtonFired:
_handleHomeClickSwallowedForGuidedAccess:
_handleDisableBrightnessFilters:
_handleBrightnessFiltersEnabled:
_handleBlueLightStatusEnabled:
_handleRestoreCachedBrightnessFilters:
_handleAdaptationEnabled:
_handleSupportsAdaptation:
_handleLoadGAXBundleForUnmanagedASAM:
_handleResetAccessibilityFeatures:
_handleToggleGuidedAccess:
_handleGetLastSetColorFilter:
_handleConvertPointFromContextId:
_handleConvertPointToContextId:
_handleSetIsSpeakScreenHighlightVisible:
_setDeviceOrientation:
homeClickSwallowedInSpringBoard
handleGuidedAccessAutomationCommand:completion:
backBoardServerInstance
backBoardServerInstanceIfExists
delegate
_inPreBoardMode
_inCheckerBoardMode
_sessionIsLoginSession
forceLoadGAXBundle
resetAccessibilityFeatures
colorFilterFromLastUpdate
_initializeHandlers
_initServer
_gaxBackboard
setDelegate:
_server
_eventListeners
_zoomListeners
_initialZoomFocusRect
_eventTapClients
_heardDeathWatcher
_uiServerDeathWatcher
_astDeathWatcher
_fkaDeathWatcher
_delegate
T@"<AXBackBoardServerInstanceDelegate>",W,N,V_delegate
processEvent:sender:dispatcher:
orientationManager:deviceOrientationMayHaveChanged:changeSource:isDeviceOrientationLocked:
resetTimer:mode:
_axSetDesiredTimeout:
_axDesiredTimeout
_axSetDesiredMode:
_axDesiredMode
_axIsTimerDisabled
_axSetTimerDisabled:
d16@0:8
v24@0:8d16
@16@0:8
v24@0:8@16
v16@0:8
@32@0:8{?=QQ}16
B16@0:8
@32@0:8{CGPoint=dd}16
v20@0:8B16
i20@0:8I16
v32@0:8@16q24
@52@0:8I16{CGPoint=dd}20d36I44I48
v52@0:8I16{CGPoint=dd}20d36I44I48
v68@0:8I16{CGPoint=dd}20d36d44d52I60I64
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48I52
{CGPoint=dd}40@0:8{CGPoint=dd}16I32I36
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
v56@0:8B16{CGPoint=dd}20d36I44I48I52
v52@0:8{CGPoint=dd}16I32f36d40I48
@32@0:8q16@24
B32@0:8i16@20I28
B24@0:8@16
@20@0:8I16
B20@0:8I16
@"AXSimpleRuntimeManager"
@"CBClient"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
v24@0:8^{__MADisplayFilter=}16
^{__MADisplayFilter=}16@0:8
v32@0:8^{__MADisplayFilter=}16d24
^{__MADisplayFilter=}
@"AXUIClient"
i16@0:8
I16@0:8
v24@0:8^{__IOHIDEvent=}16
I20@0:8I16
v44@0:8@16B24@28@36
I36@0:8{CGPoint=dd}16I32
I32@0:8{CGPoint=dd}16
@"NSString"
^{__IOHIDUserDevice=}
@"AXEventRepresentation"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v24@0:8^{__IOHIDServiceClient=}16
v36@0:8S16I20B24B28B32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSObject<OS_dispatch_queue>"
@"BSProcessDeathWatcher"
#20@0:8B16
@44@0:8{CGPoint=dd}16I32@36
@48@0:8{CGPoint=dd}16I32@36I44
v20@0:8i16
v44@0:8@"AXEventRepresentation"16B24@"NSString"28@"NSArray"36
{AXBColorFilterDescription=[3[3d]]}16@0:8
@"<AXBackBoardServerInstanceDelegate>"16@0:8
@"<AXBackBoardServerInstance>"16@0:8
@24@0:8@16
v32@0:8@16@?24
@"AXIPCServer"
@"NSMutableArray"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"<AXBackBoardServerInstanceDelegate>"
q40@0:8N^^{__IOHIDEvent}16@24@32
v44@0:8@16q24q32B40
v28@0:8d16i24
v16@?0@"NSNotification"8
NanoAccessibilityDefaultsChanged
v8@?0
@32@?0{?=QQ}8q24
@40@?0{?=QQ}8q24@32
v40@?0{?=QQ}8q24@32
B40@?0{?=QQ}8i24@28I36
v16@?0@8
@8@?0
@44@?0{?=QQ}8{CGPoint=dd}24I40
BKBootUIPresenter
sharedInstance
isShowingBootUI
_overlay
BKDisplayRenderOverlayAppleLogo
_puiProgressWindow
com.apple.assistivetouchd
com.apple.accessibility.AccessibilityUIServer.gsEvents
GetJobs
BKSystemShellSentinel
systemApplications
B32@?0@8Q16^B24
bundleIdentifier
primarySystemShell
BKHIDSystemInterface
deliveryManager
processDescription
Spotlight
ACCESSIBILITY: SB has not checked in. No SB Pid!
ax-send-event-queue
AX Error: error reposting event. value expected to be data
contextId
point
displayId
TVOut
AXPassiveResentThread
com.apple.Accessibility
ApplicationAccessibilityEnabled
B16@?0@"AXEventRepresentation"8
BB-AX
AXBrightnessFilterCacheNightShift
AXBrightnessFilterCacheAutoWhiteBalance
v16@?0^{?=BBBi{?={?=ii}{?=ii}}QB}8
DisplayFilterIPrimaryClientID
%@-toggle-testing
showFilters
forceSoftwareFilter
systemApp unexpectedly returned nil
BKSHIDEventDeferringResolution
Could not dispatch this event because there's no connection for: %{private}@
No IOHIDSenderID recorded for this event, please add one: %@
/AppleInternal/Library/AccessibilityUIServices/AXBInternalBundleLoader.bundle
isActive
isInWorkspace
allowsTripleClickSheet
/System/Library/AccessibilityBundles/GAXBackboardServer.bundle
HIDStickyKeysDisabled
HIDStickyKeysOn
HIDStickyKeysShiftToggles
HIDSlowKeysDelay
v16@?0^{__IOHIDServiceClient=}8
AXBHardwareKeyboardsManager
StickyKeys
v24@?0@"NSDictionary"8@"NSError"16
Error sending message that sticky keys were enabled via shift: %@
Error disabling sticky keys: %@
Error updating sticky key state: %@
LookingGlassServices
Class getLookingGlassServicesClass(void)_block_invoke
AXBLookingGlassManager.m
Unable to find class %s
void *LookingGlassServicesLibrary(void)
B16@?0@"AXValidationManager"8
BKUserEventTimer
userEventOccurredOnDisplay:
BKAccessibility
_accessibilityProcessExternHIDEvent:
^{__IOHIDEvent=}
_accessibilitySetEventTapCallback:
_accessibilityEventTapCallback
_accessibilityHIDEventTapCallback
_accessibilitySetHIDEventTapCallback:
_displayConvertToCAScreen:
{CGPoint=dd}
_displayConvertFromCAScreen:
_objectWithinProximity
_isDisplayBacklightOff
_setCapsLockLightOn:
_eventRoutingClientConnectionManager
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:
_authenticationMessageForLocationInCAScreenCoordinates:eventType:excludeContextIDsFromHitTest:secureName:
BKSystemShellDescriptor
BKHIDClientConnectionManager
copyClientForDestination:
^{__IOHIDEventSystemConnection=}
copyClientForTaskPort:
pidForBundleID:
build:
BKSMutableHIDEventDeferringResolution
setPid:
BKHIDEventDeliveryManager
destinationsForEvent:sender:
_currentMode
_currentTimeout
_queue
NSObject<OS_dispatch_queue>
BKDisplayRenderOverlay
PUIProgressWindow
AX Backboard Bundle
Backboard Bundle
_currentProgress
data.migration.title
data.migration.value
SpeakThisQueue
v16@?0@"NSError"8
SpeakThisServices
Class getSpeakThisServicesClass(void)_block_invoke
AXBSpeakThisManager.m
void *SpeakThisServicesLibrary(void)
Accessibility
HoverText
id<HoverTextServiceProtocolObjC> HoverTextObjc_Soft(void)
AXBHoverTextManager.m
HoverTextObjc
void *HoverTextServicesLibrary(void)
TouchAccommodationsQueue
TouchAccommodationsClientIdentifier-%@
TouchAccommodations
backboardbundle
BBAXLoadingQueue
v16@?0^v8
v16@?0@"AXEventRepresentation"8
/System/Library/AccessibilityBundles/BackBoardExtras.axbundle
CMDeviceOrientationManager
AX Backboard
Backboard
v24@?0@"AXValidationManager"8Q16
v16@?0@"AXValidationManager"8
BKAccelerometerInterfaceAccessibility
BKUserEventTimerAccessibility
PUIProgressWindowAccessibility
B24@?0@"NSURL"8@"NSError"16
Repeating AX aggd
Kicking off AX aggd
notifyOnNextUserEvent
ZoomListenerRegistered
UIAXZoomRegisterConflict
com.apple.accessibility.physicalinteraction.client
com.apple.private.kernel.jetsam
com.apple.accessibility.voiceover
com.apple.accessibility.AccessibilityUIServer
com.apple.assistivetouch.daemon
com.apple.accessibility.api
com.apple.private.allow-explicit-graphics-priority
com.apple.ax.eventlisten
com.apple.voiceservices.tts.customvoice
com.apple.hearingaids
com.apple.accessibility.automation.client
com.apple.fullkeyboardaccess
com.apple.backboard.client
com.apple.GAX.SPI
com.apple.invert.colors.write.access
com.apple.private.iamlockdown
com.apple.commandandcontrol
com.apple.CoreRoutine.preferences
com.apple.AXApp
error: %@
Ping SpringBoard for unmanaged ASAM
B24@?0^@8^@16
v28@?0B8@12@"NSError"20
unable to ping SpringBoard to load the GAX bundle: %@
displayPoint
result
frame
fromContextId
toContextId
axbackboard-post
record
systemEvent
afterNamedTap
namedTaps
start
enabled
rect
GAXBackboard
inPreboardMode
inCheckerBoardMode
sesionIsLoginSession
availability
isPasscodeViewVisible
effectiveAppBundleIdentifier
v16@?0@"NSDictionary"8
Guided Access is not loaded
command
GAX Backbaord instance does not respond to handleGuidedAccessAutomationCommand:
ERROR:
ERROR: %@
error
v16@?0B8B12
_accessIgnoredTouchRegions
preference
value
notification
Resetting accessibility features on behalf of %@
filterData
visible
deviceOrientation
BKAccelerometerInterface
^^{__IOHIDEvent}
processEvent:sender:dispatcher:
orientationManager: deviceOrientationMayHaveChanged: changeSource: isDeviceOrientationLocked:
resetTimer: mode:
Found more than one non-CarPlay system app, returning first object: %@
Did not find any non-CarPlay system apps, returning systemApp from backboard.
Determined system app: %@
Pid from system app was not valid: %@ %@
Spotlight is still retaining keyboard focus when asking for native focus app
Simulating press: %@
AX: Setting frame rate limit: %d on %@
Apply ramp down: %@ -> percentage: %@ : startValue: %@
Finish white point ramp down: %@
White point start %@ -> end %@ : duration: %@
Setting Matrix; Gain: %f WhitePointReduction: %f Matrix: [ [%0.5f, %0.5f, %0.5f], [%0.5f, %0.5f, %0.5f], [%0.5f, %0.5f, %0.5f] ]
Could not create an event ref from: %@
%{public}@
****************** Loading GAX Backboard Server Bundle ****************
**** AX Error: Could not load GAXBackboardServer bundle. bundleWithPath came back nil
**** AX Error: Accessibility: Could not load GAXBackboardServer bundle
**** AX Error: Could not initialize GAXBackboardServer instance: %@
Initializing monitor: AXBLookingGlassManager
About to show looking glass menu
Clearing highlight state because backboardd just started up.
Error notifying SpeakThis of setting change: %@
Should have accessed AXUIServer PID on the main thread.
Not watching for death of AXUIServer, because Speak Screen was not enabled.
Start watching for death of AXUIServer: %i
Clearing highlight state because AXUIServer died.
Not watching for death of AXUIServer, because PID unavailable.
Asked to enable/disable HoverText but feature flag is off, so no
HoverText monitor asked to enable HoverText: %ld
Error toggling HoverText: %@
Error enumerating auxiliary bundles: %@
Failed to load auxiliary bundle %@: %@
FKA pid: %d
Setting highlight state to visible: %i.
Asked to set highlight state to visible %i, but AXUIServer PID wasn't registered. Clearing highlight state.
AST process went away, resetting pid
UIServer process went away, resetting pid
FKA process went away, resetting pid
Received request to set Guided Access enabled=%i, but GAXBackboard was nil.
_handleToggleGuidedAccess: %@
setting idle timer disabled: %d
Couldn't get the internal queue for BKUserEventTimer. This can lead to us accidentally making the timer get stuck off.
Someone asked to reset idle timer but it is disabled by accessibility. timeout: %f mode: %d
softlink:o:path:/System/Library/../../AppleInternal/Library/Frameworks/LookingGlassServices.framework/LookingGlassServices
softlink:r:path:/System/Library/PrivateFrameworks/SpeakThisServices.framework/SpeakThisServices
softlink:r:path:/System/Library/PrivateFrameworks/HoverTextServices.framework/HoverTextServices
