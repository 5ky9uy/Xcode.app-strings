/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIAlert.m
+[AXUIAlert alertWithType:text:subtitleText:iconImage:styleProvider:userInfo:]
This type of alert: (%@) is not supported on this platform. 
UIScreen
_isMainScreen
_displayPeripheryInsetsRestrictedToScene
{UIEdgeInsets=dddd}
_displayPeripheryInsets
<%@: %p; identifier = "%@">
_transformLayer
AXUIServer-%f
 AXID: %@
<%@: %p; clientIdentifier = "%@">
AXUIServerModifiedWindowInterfaceStyle
v32@?0@"NSNumber"8@"UIWindow<AXUIWindowProtocol>"16^B24
v24@?0q8@"NSDictionary"16
v16@?0@"NSString"8
v16@?0@"NSDictionary"8
v12@?0B8
v8@?0
B32@?0@8Q16^B24
v32@?0@8@16^B24
%@|%@
v24@?0@"UIViewController"8^B16
v16@?0d8
<%@: %p>
AXUIAlert
__AXStringForVariablesSentinel
q24@?0@8@16
v32@?0@8Q16^B24
Got nubbit moving gesture recognizer %@, which had no nubbit associated with it.
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIDisplayManager.m
-[AXUIDisplayManager _beginMoveForNubbitContext:]
Should have made an animator for the nubbit when it was registered
Content view controllers of window at level %ld have conflicting supported interface orientations. Allowing portrait orientation nonetheless. One of these content view controllers needs to be moved to a different window using the method -desiredWindowLevelForContentViewController:userInteractionEnabled: from AXUIContentViewControllerDelegate, on the corresponding AXUIService: %{public}@.
H:|-[backdropView]-|
backdropView
V:|-[backdropView]-|
H:|[label]|
label
V:|[label]|
AXUIEventManagerHIDStream
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceEntitlementChecker.m
-[AXUIServiceEntitlementChecker serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:]
The client connections array and the entitlements caches array are supposed to have the same number of elements (%@).
NSBundle
NSExtensionPointIdentifier
com.apple.accessibility.AccessibilityUIServer
NSExtension
System/Library/AccessibilityBundles
AppleInternal/Library/AccessibilityUIServices
Developer/Library/PrivateFrameworks/AccessibilityAudit.framework/Resources
axuiservice
ServicesAccessQueue
EntitlementsCheckersAccessQueue
ResumingConnectionsQueue
Beginning transaction with identifier %{public}@ for service: %{public}@
Ending transaction with identifier %{public}@ for service: %{public}@
%{public}@ sending asynchronous message with identifier %lu and a completion handler but no target access queue; defaulting to the main access queue.
v24@?0@"NSDictionary"8@"NSError"16
AXUINSBundleOverride
AXUIUIScreenOverride
Current locale did change. Restarting AXUI Server %@ %@
v16@?0@"NSNotification"8
AXUI Server started at PreBoard. This is unexpected, but we'll restart once we're done.
%@.%@.%@-%p
v16@?0@"NSObject<OS_xpc_object>"8
v32@?0@"NSDictionary"8@"NSError"16@"<AXUIService>"24
Couldn't find service associated to client identifier: %@
One of the following entitlements is required: %@ for this operation: %d
Couldn't find client identifier associated to message.
AXUIServiceManager: Got invalid value for message identifier in client connection event handler: 0.
Lost connection with client.
Connection with client was supposed to be terminated imminently, but we are ignoring it for now.
Got unexpected error in client connection event handler: %{public}s.
Got object of unexpected type in client connection event handler: %{public}s.
v12@?0i8
Invalid service bundle path: %@
Failed to load service bundle at path: %@
Couldn't find principal class for service bundle at path: %@
Service: '%@' unable to process message:'%@'. Entitlements may be missing. required: %@ [client identifier: %@:%d]
Service instance does not conform to service protocol: %@.
Failed to instantiate service of class %@
Service bundle still not loaded, weird... Service bundle path: %@
Failed to create service bundle at path: %@
v32@?0@"NSString"8@"NSObject<OS_xpc_object>"16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceManager.m
-[AXUIServiceManager _unregisterAllClientsWithConnection:]
The client identifiers lists array is expected to be of same size as the affected services array.
No longer in PreBoard. AXUI Server is restarting.
"@333333
<ffffff
Cannot show alert. Text was empty
Cannot show alert service does not conform to AXUIService: %@
Unexpected size for window: %@
AXUIDisplayManager received unknown orientation, not forwarding
%{public}@
AXUIActiveWindow
_AXUIActiveRootWindow
AXUIAlert
__AXUIUIScreenOverride_super
SafeCategory
AXUIUIScreenOverride
_AXUIPassiveRootWindow
AXUIAlertContext
AXUIAlertStyleProvider
NSObject
AXUINubbitContext
AXUIWindow
AXUIWindowProtocol
AXUIClientMessenger
AXUIContentViewControllerDelegate
AXUIViewControllerTransitionHandler
AXUIService
AXUIAlertDelegate
AXUIDisplayManager
UIDynamicAnimatorDelegate
UICollisionBehaviorDelegate
AXUIPassiveWindow
AXStaticFrameView
AXUIRootViewController
AXStyleProviderUIAlert
AXUIServiceContext
AXUIEventManager
AXUIServiceEntitlementChecker
__AXUINSBundleOverride_super
AXUINSBundleOverride
_AXUIRootWindow
AXUIServiceManager
AXUIMessageSenderDelegate
rootViewController
view
convertPoint:fromView:
hitTest:withEvent:
pointInside:withEvent:
_accessibilityWindowVisible
_usesWindowServerHitTesting
numberWithUnsignedInteger:
initWithType:text:subtitleText:iconImage:styleProvider:userInfo:
alertWithType:text:subtitleText:iconImage:styleProvider:userInfo:
addToContainerView:
context
setContext:
userInfo
setUserInfo:
.cxx_destruct
_context
_userInfo
T@"AXUIAlertContext",W,N,V_context
T@"NSDictionary",&,N,V_userInfo
safeCategoryTargetClassName
safeCategoryBaseClass
validateClass:hasInstanceMethod:withFullSignature:
safeBoolForKey:
safeValueForKey:
UIEdgeInsetsValue
_displayPeripheryInsetsRestrictedToScene
_accessibilityPerformValidations:
accessibilityElementsHidden
_ignoresHitTest
identifier
stringWithFormat:
description
setIdentifier:
creationTimeInterval
setCreationTimeInterval:
fadeAnimationDuration
setFadeAnimationDuration:
showOrHideTimer
setShowOrHideTimer:
alertView
setAlertView:
service
setService:
priority
setPriority:
duration
setDuration:
text
setText:
subtitleText
setSubtitleText:
iconImage
setIconImage:
type
setType:
_identifier
_creationTimeInterval
_fadeAnimationDuration
_showOrHideTimer
_alertView
_service
_priority
_duration
_text
_subtitleText
_iconImage
_type
T@"NSString",C,N,V_identifier
Td,N,V_creationTimeInterval
Td,N,V_fadeAnimationDuration
T@"AXDispatchTimer",&,N,V_showOrHideTimer
T@"AXUIAlert",&,N,V_alertView
T@"<AXUIService>",&,N,V_service
TQ,N,V_priority
Td,N,V_duration
T@"NSString",C,N,V_text
T@"NSString",C,N,V_subtitleText
T@"UIImage",&,N,V_iconImage
TQ,N,V_type
bundleForClass:
sharedApplication
preferredContentSizeCategory
preferredFontForTextStyle:
_scaledValueForValue:
mainScreen
bounds
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
pointSize
fontWithDescriptor:size:
fontWithSize:
whiteColor
alertTextFontForType:
alertTextColorForType:
blackColor
colorWithAlphaComponent:
alertTextLineHeightOffsetForType:
styleProvider
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
alertBackgroundStyleForType:
alertBackgroundSizeForType:
alertShouldGrowInAxis:forType:
alertContentEdgeInsetsForType:
alertSubtitleTextFontForType:
alertSubtitleTextColorForType:
alertSubtitleTextLineHeightOffsetForType:
alertSubtitleTextVerticalSpacingHeightWithTextForType:
alertIconImageEdgeInsetsForType:
alertEdgeInsetsForType:
alertPositionForType:
alertFadeAnimationDurationForType:
alertBackgroundImageForType:
alertBackgroundImageCapInsetsForType:
alertBackgroundCornerRadiusForType:
bundle
setBundle:
_bundle
T@"NSBundle",&,N,V_bundle
nubbit
setNubbit:
delegate
setDelegate:
disableSystemGesturesAssertion
setDisableSystemGesturesAssertion:
disableDashBoardSystemGesturesAssertion
setDisableDashBoardSystemGesturesAssertion:
moveNubbitGestureRecognizer
setMoveNubbitGestureRecognizer:
fadeTimer
setFadeTimer:
dynamicAnimator
setDynamicAnimator:
gravityBehavior
setGravityBehavior:
followPanBehavior
setFollowPanBehavior:
snapToBoundaryBehavior
setSnapToBoundaryBehavior:
collisionBehavior
setCollisionBehavior:
dynamicItemBehavior
setDynamicItemBehavior:
originalAlpha
setOriginalAlpha:
_nubbit
_delegate
_disableSystemGesturesAssertion
_disableDashBoardSystemGesturesAssertion
_moveNubbitGestureRecognizer
_fadeTimer
_dynamicAnimator
_gravityBehavior
_followPanBehavior
_snapToBoundaryBehavior
_collisionBehavior
_dynamicItemBehavior
_originalAlpha
T@"UIView",&,N,V_nubbit
T@"<AXUINubbitDelegate>",W,N,V_delegate
T@"AXAssertion",&,N,V_disableSystemGesturesAssertion
T@"AXAssertion",&,N,V_disableDashBoardSystemGesturesAssertion
T@"UIPanGestureRecognizer",&,N,V_moveNubbitGestureRecognizer
T@"AXDispatchTimer",&,N,V_fadeTimer
T@"UIDynamicAnimator",&,N,V_dynamicAnimator
T@"UIGravityBehavior",&,N,V_gravityBehavior
T@"UIAttachmentBehavior",&,N,V_followPanBehavior
T@"UISnapBehavior",&,N,V_snapToBoundaryBehavior
T@"UICollisionBehavior",&,N,V_collisionBehavior
T@"UIDynamicItemBehavior",&,N,V_dynamicItemBehavior
Td,N,V_originalAlpha
windowLevel
childViewControllers
count
firstObject
title
accessibilityIdentifier
stringByAppendingFormat:
_windowInterfaceOrientation
_isSecure
shouldRespondToDarkModeChanges
setShouldRespondToDarkModeChanges:
isHandlingFullScreenPresentation
setIsHandlingFullScreenPresentation:
TB,N
_wantsSceneAssociation
_isWindowServerHostingManaged
keepContextInBackground
_shouldAutorotateToInterfaceOrientation:
_accessibilityIsIsolatedWindow
_layerForCoordinateSpaceConversion
_accessibilityElementCommunityIdentifier
accessibilityLabel
_interfaceOrientationForSceneSafeAreaInsetsIncludingStatusBar:
_normalizedSafeAreaInsets
_isHandlingFullScreenPresentation
_shouldRespondToDarkModeChanges
TB,N,V_shouldRespondToDarkModeChanges
TB,N,V_isHandlingFullScreenPresentation
sharedServiceManager
_clientMessengerWithIdentifier:
init
setClientIdentifier:
setConnection:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completionRequiresWritingBlock:completion:
_sendAsynchronousMessage:withIdentifier:toClientWithMessenger:targetAccessQueue:completionRequiresWritingBlock:completion:
_sendSynchronousMessage:withIdentifier:toClientWithMessenger:error:
clientIdentifier
clientMessengerWithIdentifier:
initWithClientIdentifier:connection:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
sendSynchronousMessage:withIdentifier:error:
connection
_clientIdentifier
_connection
T@"NSString",C,N,V_clientIdentifier
T@"NSObject<OS_xpc_object>",&,N,V_connection
displayManager
initWithServiceManager:
setDefaultAlertStyleProvider:
setServiceManager:
_attemptToInitializeActiveInterfaceOrientation
defaultCenter
_didReceiveMemoryWarning:
addObserver:selector:name:object:
server
isDarkModeActive
objectForKey:
integerValue
doubleValue
_activeInterfaceOrientationDidChange:duration:
objectForKeyedSubscript:
setUserInterfaceStyle:
setOverrideUserInterfaceStyle:
_enumerateWindowsUsingBlock:
postNotificationName:object:
setSystemServerActionHandlerIdentifier:
registerSpringBoardActionHandler:withIdentifierCallback:
_reachabilityToggledWithPayload:
setReachabilityHandlerIdentifier:
registerReachabilityHandler:withIdentifierCallback:
reachabilityOffset
setReachabilityOffset:
setWindowHostingController:
systemAppServerReady
systemServerActionHandlerIdentifier
removeActionHandler:
reachabilityHandlerIdentifier
removeReachabilityHandler:
removeObserver:name:object:
setAlertQueues:
setVisibleAlertContexts:
setActiveWindows:
setPassiveWindows:
setActiveContentViewControllers:
setPassiveContentViewControllers:
setNubbitContexts:
dealloc
activeInterfaceOrientation
_contentViewControllersWithUserInteractionEnabled:forService:createIfNeeded:
arrayWithArray:
addContentViewController:withUserInteractionEnabled:forService:context:completion:
addContentViewController:withUserInteractionEnabled:forService:context:userInterfaceStyle:allowSystemAppHosting:completion:
removeContentViewController:withUserInteractionEnabled:forService:context:completion:
addContentViewController:withUserInteractionEnabled:forService:context:userInterfaceStyle:completion:
containsObject:
addObject:
desiredWindowLevelForContentViewController:userInteractionEnabled:
shouldPreventAutorotatingAllContentViewControllers
_windowWithUserInteractionEnabled:windowLevel:createIfNeeded:purposeIdentifier:userInterfaceStyle:allowSystemAppHosting:
makeKeyAndVisible
setHidden:
_addContentViewController:toWindow:forService:context:completion:
removeObject:
_disposeOfContentViewControllersWithUserInteractionEnabled:forService:
transitionInWithContext:completion:
transitionOutWithContext:completion:
_removeContentViewController:forService:completion:
showAlertWithText:subtitleText:iconImage:type:priority:duration:forService:
showAlertWithText:subtitleText:iconImage:type:priority:duration:userInfo:forService:
length
processMessage:withIdentifier:fromClientWithIdentifier:error:
messageWithIdentifierShouldBeProcessedAsynchronously:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
accessQueueForProcessingMessageWithIdentifier:
messageWithIdentifierRequiresWritingBlock:
processInitializationMessage:
serviceWasFullyInitialized
connectionWillBeInterruptedForClientWithIdentifier:
sharedInstance
requiredEntitlementForProcessingMessageWithIdentifier:
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
UUID
UUIDString
timeIntervalSinceReferenceDate
_transactionIdentifierForDisplayingAlertWithContext:service:
serviceManager
beginTransactionWithIdentifier:forService:
_showOrEnqueueAlertWithContext:
visibleAlertContexts
cancel
_hideAlertWithContext:notifyDelegate:
alertQueues
isEqualToString:
indexOfObjectPassingTest:
objectAtIndex:
removeObjectAtIndex:
_didHideOrDequeueAlertWithContext:
enumerateKeysAndObjectsUsingBlock:
nubbitContexts
dictionary
_nubbitContextKeyForNubbit:
_handleMoveNubbitGestureRecognizer:
initWithTarget:action:
addGestureRecognizer:
initWithTargetSerialQueue:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
alpha
_scheduleFadeForNubbitContext:
_addDynamicAnimationsForNubbitContext:
setObject:forKeyedSubscript:
unregisterNubbit:shouldUndoFade:
removeGestureRecognizer:
_undoFadeForNubbitContext:
_removeDynamicAnimationsForNubbitContext:
removeObjectForKey:
activeWindows
passiveWindows
initWithDouble:
valueForKey:
initWithFrame:
initWithScreen:
setWindowLevel:
windowHostingController
_contextId
registerWindowWithContextID:atLevel:
clearColor
setBackgroundColor:
userInterfaceStyle
_setWindowControlsStatusBarOrientation:
setRootViewController:
_rotateWindow:toInterfaceOrientation:duration:force:
setValue:forKey:
setObject:forKey:
rangeOfString:
setAccessibilityIdentifier:
_setRotatableViewOrientation:duration:force:
frame
setFrame:
activeContentViewControllers
countByEnumeratingWithState:objects:count:
passiveContentViewControllers
sharedHelper
reachabilityOffsetForPayload:
window
hostingWindowShouldMoveForReachability
handleReachabilityToggled:
enumerateContentViewControllersUsingBlock:
didAnimateForReachabilityToOffset:
animateForReachability:payload:completion:
_uniqueIdentifierForService:
_transactionIdentifierForDisplayingContentViewController:service:
removeFromSuperview
setAutoresizingMask:
addChildViewController:
addSubview:
didMoveToParentViewController:
isViewLoaded
subviews
_reapHiddenWindows
parentViewController
willMoveToParentViewController:
removeFromParentViewController
endTransactionWithIdentifier:forService:
alertWithIdentifierWasEnqueued:
delayForDequeuingAlertWithIdentifier:
desiredWindowLevelForAlertWithIdentifier:
styleProviderForAlertWithIdentifier:
alertWithIdentifierDidAppear:
alertWithIdentifierDidDisappear:
alertWithIdentifierWasActivated:
alertWithIdentifierWasActivated:userInfo:
defaultAlertStyleProvider
setAlpha:
_windowWithUserInteractionEnabled:windowLevel:createIfNeeded:purposeIdentifier:
afterDelay:processBlock:
animateWithDuration:animations:completion:
frameOrigin
setFrameOrigin:
_handleNextAlertForType:
_hasVisibleAlertWithType:
_showAlertWithContext:
ax_enqueueObject:
sortUsingComparator:
enumerateObjectsWithOptions:usingBlock:
valueWithPointer:
superview
idleOpacityForNubbit:
animateWithDuration:animations:
_boundingViewForNubbit:
initWithReferenceView:
arrayWithObjects:count:
initWithItems:
setCollisionDelegate:
setTranslatesReferenceBoundsIntoBoundary:
addBehavior:
setAllowsRotation:
setFriction:
removeAllBehaviors
locationInView:
removeBehavior:
initWithItem:attachedToAnchor:
assertionWithType:identifier:
setAnchorPoint:
velocityInView:
addLinearVelocity:forItem:
_gravityBehaviorForNubbit:velocity:boundingView:
_endMoveForNubbitContext:
center
setGravityDirection:
_nubbitContextForGestureRecognizer:
state
_beginMoveForNubbitContext:
_changeNubbitPositionForNubbitContext:
setActiveInterfaceOrientation:
numberOfAttemptsToInitializeActiveInterfaceOrientation
setNumberOfAttemptsToInitializeActiveInterfaceOrientation:
performSelector:withObject:afterDelay:
_serviceWantsToPreventAutorotation:
_servicesForUniqueIdentifiers:
interfaceOrientation
_originalDurationForRotationFromInterfaceOrientation:toInterfaceOrientation:withAdjustedDuration:
allValues
nubbitDidUpdatePosition:
initWithItem:snapToPoint:
isHidden
unregisterWindowWithContextID:
removeObjectsForKeys:
removeAllObjects
sharedDisplayManager
dynamicAnimatorWillResume:
dynamicAnimatorDidPause:
collisionBehavior:beganContactForItem:withItem:atPoint:
collisionBehavior:endedContactForItem:withItem:
collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:
collisionBehavior:endedContactForItem:withBoundaryIdentifier:
contentViewControllersWithUserInteractionEnabled:forService:
addContentViewController:withUserInteractionEnabled:forService:
addContentViewController:withUserInteractionEnabled:forService:allowSystemAppHosting:
removeContentViewController:withUserInteractionEnabled:forService:
showAlertWithText:subtitleText:iconImage:type:forService:
hideAlertWithIdentifier:forService:
registerNubbit:delegate:
unregisterNubbit:
pinNubbitToEdge:
cancelNubbitFade:
_resetServiceManager
_defaultAlertStyleProvider
_activeInterfaceOrientation
_numberOfAttemptsToInitializeActiveInterfaceOrientation
_serviceManager
_alertQueues
_visibleAlertContexts
_activeWindows
_passiveWindows
_activeContentViewControllers
_passiveContentViewControllers
_systemServerActionHandlerIdentifier
_userInterfaceStyle
_nubbitContexts
_reachabilityHandlerIdentifier
_reachabilityOffset
_windowHostingController
T@"AXUIAlertStyleProvider",&,N,V_defaultAlertStyleProvider
Tq,N,V_activeInterfaceOrientation
Tq,N,V_userInterfaceStyle
TQ,N,V_numberOfAttemptsToInitializeActiveInterfaceOrientation
T@"AXUIServiceManager",W,N,V_serviceManager
T@"NSMutableDictionary",&,N,V_alertQueues
T@"NSMutableDictionary",&,N,V_visibleAlertContexts
T@"NSMutableDictionary",&,N,V_activeWindows
T@"NSMutableDictionary",&,N,V_passiveWindows
T@"NSMutableDictionary",&,N,V_activeContentViewControllers
T@"NSMutableDictionary",&,N,V_passiveContentViewControllers
T@"NSMutableDictionary",&,N,V_nubbitContexts
T@"NSString",C,N,V_systemServerActionHandlerIdentifier
T@"NSString",C,N,V_reachabilityHandlerIdentifier
Td,N,V_reachabilityOffset
T@"SBSAccessibilityWindowHostingController",&,N,V_windowHostingController
setView:
supportedInterfaceOrientations
ignoreLogging
viewWillTransitionToSize:withTransitionCoordinator:
_shouldForwardViewWillTransitionToSize
loadView
shouldAutorotate
_canShowWhileLocked
accessibilityPostScreenChangedForChildViewController:isAddition:
resizableImageWithCapInsets:
initWithImage:
initWithPrivateStyle:
effectWithStyle:
initWithEffect:
_setContinuousCornerRadius:
setTranslatesAutoresizingMaskIntoConstraints:
constraintsWithVisualFormat:options:metrics:views:
addConstraints:
layer
setCornerRadius:
setClipsToBounds:
setAllowsGroupOpacity:
initWithString:attributes:
_appendParagraphWithText:withTextColor:font:textAlignment:lineSpacing:paragraphSpacingBefore:toAttributedString:
setNumberOfLines:
setAttributedText:
setLineBreakMode:
effectForBlurEffect:
contentView
setMasksToBounds:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:priority:
size
ax_constrainLayoutAttribute:asEqualToConstant:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:
topAnchor
safeAreaLayoutGuide
constraintEqualToAnchor:
setActive:
setAlertType:
setStyleProvider:
_handleTapGestureRecognizer:
_handlePanGestureRecognizer:
setMaximumNumberOfTouches:
origin
_updateDismissalWithPanGesture:
_endDismissalWithPanGesture:
_cancelDismissalWithPanGesture:
translationInView:
_updateViewForDismissalPercentage:
alertType
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
defaultParagraphStyle
mutableCopy
labelFontSize
systemFontOfSize:
lineHeight
setParagraphSpacingBefore:
dictionaryWithObjects:forKeys:count:
appendAttributedString:
setAlignment:
setLineSpacing:
initWithObjectsAndKeys:
_dismissalGestureYOffset
_backgroundViewDismissalOrigin
_alertType
_styleProvider
TQ,N,V_alertType
T@"<AXUIAlertStyleProvider>",&,N,V_styleProvider
setServiceIdentifier:
clientMessengers
setClientMessengers:
_indexOfClientWithIdentifier:
initWithService:serviceIdentifier:
clientsCount
addClientWithIdentifier:connection:
removeClientWithIdentifier:
hasClientWithIdentifier:
enumerateClientsUsingBlock:
serviceIdentifier
_serviceIdentifier
_clientMessengers
T@"<NSObject><NSCopying>",C,N,V_serviceIdentifier
T@"NSMutableArray",&,N,V_clientMessengers
TQ,R,N
_init
laserEnabled
_hidEvent
eventHandlers
allObjects
handlePointerEvent:
weakObjectsHashTable
setEventHandlers:
sharedEventManager
_handleUIEvent:
registerEventHandler:
unregisterEventHandler:
_laserEnabled
_eventHandlers
T@"NSHashTable",&,N,V_eventHandlers
TB,R,N,V_laserEnabled
representationWithHIDEvent:hidStreamIdentifier:
setServiceClass:
setClientConnections:
setEntitlementsCaches:
clientConnections
entitlementsCaches
_indexOfClientConnection:
boolValue
_singleRequiredEntitlementForMessageWithIdentifier:
_possibleRequiredEntitlementForMessageWithIdentifier:
_clientProcessWithAuditToken:hasEntitlement:
numberWithBool:
setWithObjects:
UTF8String
serviceClass
initWithServiceClass:
serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
clientConnectionWillBeTerminated:
_serviceClass
_clientConnections
_entitlementsCaches
T#,N,V_serviceClass
T@"NSMutableArray",&,N,V_clientConnections
T@"NSMutableArray",&,N,V_entitlementsCaches
infoDictionary
mainBundle
initWithParentClass:description:appendUUIDToLabel:
setServicesAccessQueue:
setEntitlementsCheckersAccessQueue:
setResumingConnectionsQueue:
setMessageSender:
setDisplayManager:
_applicationDidReceiveMemoryWarning:
setTransactions:
registerAccessibilityUIServicePID:
transactions
servicesAccessQueue
serviceContexts
performSynchronousReadingBlock:
mainAccessQueue
messageSender
sendAsynchronousMessage:withIdentifier:context:targetAccessQueue:completionRequiresWritingBlock:completion:
sendSynchronousMessage:withIdentifier:context:error:
currentLocale
localeIdentifier
mainQueue
addObserverForName:object:queue:usingBlock:
initWithFormat:
initWithUTF8String:
_registerClientWithIdentifier:connection:serviceBundleName:initiatingMessageIdentifier:error:
sendReply:withError:andOriginalXPCMessage:usingConnection:customDataAddingBlock:
backgroundAccessQueue
performAsynchronousWritingBlock:
_serviceContextForClientWithIdentifier:
ax_errorWithDomain:description:
_serviceWithClass:canProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
dictionaryFromXPCMessage:error:
performAsynchronousReadingBlock:
_unregisterAllClientsWithConnection:
resumingConnectionsQueue
shouldAllowServicesToProcessMessages
pausedConnections
setPausedConnections:
entitlementsCheckersAccessQueue
entitlementsCheckers
setEntitlementsCheckers:
performSynchronousWritingBlock:
_registerForSystemAppDeath
terminateWithSuccess
initWithPID:queue:deathHandler:
pid:
setShouldAllowServicesToProcessMessages:
stringByAppendingPathComponent:
stringByStandardizingPath
stringByDeletingLastPathComponent
stringByAppendingPathExtension:
hasPrefix:
bundleWithPath:
isLoaded
loadAndReturnError:
principalClass
_serviceContextForService:
setServiceContexts:
lastUsedServiceIdentifier
setLastUsedServiceIdentifier:
removeObjectIdenticalTo:
valueWithNonretainedObject:
_releaseSharedServiceManager
messageSender:accessXPCConnectionForMessageWithContext:usingBlock:
messageSender:willSendXPCMessage:context:
messageSender:extractCustomDataFromXPCReply:numberOfKeyValuePairsForCustomData:
messageSender:processCustomDataFromXPCReply:
_start
_handleConnection:
_applicationDidFinishLaunching
_springBoardReaper
_shouldAllowServicesToProcessMessages
_displayManager
_resumingConnectionsQueue
_pausedConnections
_entitlementsCheckersAccessQueue
_entitlementsCheckers
_messageSender
_serviceContexts
_servicesAccessQueue
_lastUsedServiceIdentifier
_transactions
T@"NSMutableArray",&,N,V_pausedConnections
T@"AXAccessQueue",&,N,V_resumingConnectionsQueue
T@"NSMutableDictionary",&,N,V_entitlementsCheckers
T@"AXAccessQueue",&,N,V_entitlementsCheckersAccessQueue
T@"AXUIMessageSender",&,N,V_messageSender
T@"NSMutableArray",&,N,V_serviceContexts
T@"AXAccessQueue",&,N,V_servicesAccessQueue
TQ,N,V_lastUsedServiceIdentifier
TB,N,V_shouldAllowServicesToProcessMessages
T@"AXUIDisplayManager",&,N,V_displayManager
T@"NSMutableDictionary",&,N,V_transactions
B40@0:8{CGPoint=dd}16@32
B16@0:8
@64@0:8Q16@24@32@40@48@56
v24@0:8@16
@16@0:8
v16@0:8
@"AXUIAlertContext"
@"NSDictionary"
#16@0:8
{UIEdgeInsets=dddd}16@0:8
d16@0:8
v24@0:8d16
Q16@0:8
v24@0:8Q16
@"NSString"
@"AXDispatchTimer"
@"AXUIAlert"
@"<AXUIService>"
@"UIImage"
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i24@0:8Q16
{CGSize=dd}24@0:8Q16
B32@0:8q16Q24
{UIEdgeInsets=dddd}24@0:8Q16
@24@0:8Q16
d24@0:8Q16
@"UIFont"24@0:8Q16
@"UIColor"24@0:8Q16
@"UIImage"24@0:8Q16
@"NSBundle"
@"UIView"
@"<AXUINubbitDelegate>"
@"AXAssertion"
@"UIPanGestureRecognizer"
@"UIDynamicAnimator"
@"UIGravityBehavior"
@"UIAttachmentBehavior"
@"UISnapBehavior"
@"UICollisionBehavior"
@"UIDynamicItemBehavior"
v20@0:8B16
B24@0:8q16
q20@0:8B16
@24@0:8@16
@32@0:8@16@24
v48@0:8@16Q24@32@?40
v52@0:8@16Q24@32B40@?44
@40@0:8@16Q24^@32
@"NSObject<OS_xpc_object>"
d28@0:8@16B24
d28@0:8@"UIViewController"16B24
v32@0:8^v16@?24
v32@0:8^v16@?<v@?B>24
@48@0:8@16Q24@32^@40
B24@0:8Q16
@"NSDictionary"48@0:8@"NSDictionary"16Q24@"NSString"32^@40
v48@0:8@"NSDictionary"16Q24@"NSString"32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"24@0:8Q16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
@"NSString"24@0:8Q16
@"NSSet"24@0:8Q16
d24@0:8@16
v32@0:8@16@24
d24@0:8@"NSString"16
@"<AXUIAlertStyleProvider>"24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"UIDynamicAnimator"16
v56@0:8@16@24@32{CGPoint=dd}40
v40@0:8@16@24@32
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32
@28@0:8B16@20
v36@0:8@16B24@28
v40@0:8@16B24@28B36
v52@0:8@16B24@28^v36@?44
v60@0:8@16B24@28^v36q44@?52
v64@0:8@16B24@28^v36q44B52@?56
@56@0:8@16@24@32Q40@48
@72@0:8@16@24@32Q40Q48d56@64
@80@0:8@16@24@32Q40Q48d56@64@72
v28@0:8@16B24
v24@0:8@?16
@40@0:8B16d20B28@32
@52@0:8B16d20B28@32q40B48
v44@0:8@16q24d32B40
d40@0:8q16q24d32
@32@0:8B16@20B28
v28@0:8B16@20
v56@0:8@16@24@32^v40@?48
v40@0:8@16@24@?32
@48@0:8@16{CGPoint=dd}24@40
v32@0:8q16d24
q16@0:8
v24@0:8q16
@"AXUIAlertStyleProvider"
@"AXUIServiceManager"
@"NSMutableDictionary"
@"SBSAccessibilityWindowHostingController"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v40@0:8{CGSize=dd}16@32
B28@0:8@16B24
v72@0:8@16@24@32q40d48d56@64
{CGPoint="x"d"y"d}
@"<AXUIAlertStyleProvider>"
Q24@0:8@16
@"<NSObject><NSCopying>"
@"NSMutableArray"
@"NSHashTable"
@24@0:8#16
B40@0:8Q16@24^@32
B32@0:8^{?=[8I]}16@24
v24@0:8#16
v40@0:8@16^v24@?32
v40@0:8@16@24^v32
^v40@0:8@16@24^Q32
v32@0:8@16^v24
v40@0:8@"AXUIMessageSender"16^v24@?<v@?@"NSObject<OS_xpc_object>">32
v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^v32
^v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^Q32
v32@0:8@"AXUIMessageSender"16^v24
v60@0:8@16Q24@32@40B48@?52
B48@0:8#16Q24@32^@40
B56@0:8@16@24@32Q40^@48
@"BSProcessDeathWatcher"
@"AXUIDisplayManager"
@"AXAccessQueue"
@"AXUIMessageSender"
UUUUUU
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIAlert.m
+[AXUIAlert alertWithType:text:subtitleText:iconImage:styleProvider:userInfo:]
This type of alert: (%@) is not supported on this platform. 
UIScreen
_isMainScreen
_displayPeripheryInsetsRestrictedToScene
{UIEdgeInsets=dddd}
_displayPeripheryInsets
<%@: %p; identifier = "%@">
_transformLayer
AXUIServer-%f
 AXID: %@
<%@: %p; clientIdentifier = "%@">
AXUIServerModifiedWindowInterfaceStyle
v32@?0@"NSNumber"8@"UIWindow<AXUIWindowProtocol>"16^B24
v24@?0q8@"NSDictionary"16
v16@?0@"NSString"8
v16@?0@"NSDictionary"8
v12@?0B8
v8@?0
B32@?0@8Q16^B24
v32@?0@8@16^B24
%@|%@
v24@?0@"UIViewController"8^B16
v16@?0d8
<%@: %p>
AXUIAlert
__AXStringForVariablesSentinel
q24@?0@8@16
v32@?0@8Q16^B24
Got nubbit moving gesture recognizer %@, which had no nubbit associated with it.
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIDisplayManager.m
-[AXUIDisplayManager _beginMoveForNubbitContext:]
Should have made an animator for the nubbit when it was registered
Content view controllers of window at level %ld have conflicting supported interface orientations. Allowing portrait orientation nonetheless. One of these content view controllers needs to be moved to a different window using the method -desiredWindowLevelForContentViewController:userInteractionEnabled: from AXUIContentViewControllerDelegate, on the corresponding AXUIService: %{public}@.
H:|-[backdropView]-|
backdropView
V:|-[backdropView]-|
H:|[label]|
label
V:|[label]|
AXUIEventManagerHIDStream
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceEntitlementChecker.m
-[AXUIServiceEntitlementChecker serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:]
The client connections array and the entitlements caches array are supposed to have the same number of elements (%@).
NSBundle
NSExtensionPointIdentifier
com.apple.accessibility.AccessibilityUIServer
NSExtension
System/Library/AccessibilityBundles
AppleInternal/Library/AccessibilityUIServices
Developer/Library/PrivateFrameworks/AccessibilityAudit.framework/Resources
axuiservice
ServicesAccessQueue
EntitlementsCheckersAccessQueue
ResumingConnectionsQueue
Beginning transaction with identifier %{public}@ for service: %{public}@
Ending transaction with identifier %{public}@ for service: %{public}@
%{public}@ sending asynchronous message with identifier %lu and a completion handler but no target access queue; defaulting to the main access queue.
v24@?0@"NSDictionary"8@"NSError"16
AXUINSBundleOverride
AXUIUIScreenOverride
Current locale did change. Restarting AXUI Server %@ %@
v16@?0@"NSNotification"8
AXUI Server started at PreBoard. This is unexpected, but we'll restart once we're done.
%@.%@.%@-%p
v16@?0@"NSObject<OS_xpc_object>"8
v32@?0@"NSDictionary"8@"NSError"16@"<AXUIService>"24
Couldn't find service associated to client identifier: %@
One of the following entitlements is required: %@ for this operation: %d
Couldn't find client identifier associated to message.
AXUIServiceManager: Got invalid value for message identifier in client connection event handler: 0.
Lost connection with client.
Connection with client was supposed to be terminated imminently, but we are ignoring it for now.
Got unexpected error in client connection event handler: %{public}s.
Got object of unexpected type in client connection event handler: %{public}s.
v12@?0i8
Invalid service bundle path: %@
Failed to load service bundle at path: %@
Couldn't find principal class for service bundle at path: %@
Service: '%@' unable to process message:'%@'. Entitlements may be missing. required: %@ [client identifier: %@:%d]
Service instance does not conform to service protocol: %@.
Failed to instantiate service of class %@
Service bundle still not loaded, weird... Service bundle path: %@
Failed to create service bundle at path: %@
v32@?0@"NSString"8@"NSObject<OS_xpc_object>"16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceManager.m
-[AXUIServiceManager _unregisterAllClientsWithConnection:]
The client identifiers lists array is expected to be of same size as the affected services array.
No longer in PreBoard. AXUI Server is restarting.
?333333
ffffff
!&-o
Cannot show alert. Text was empty
Cannot show alert service does not conform to AXUIService: %@
Unexpected size for window: %@
AXUIDisplayManager received unknown orientation, not forwarding
%{public}@
AXUIActiveWindow
_AXUIActiveRootWindow
AXUIAlert
__AXUIUIScreenOverride_super
SafeCategory
AXUIUIScreenOverride
_AXUIPassiveRootWindow
AXUIAlertContext
AXUIAlertStyleProvider
NSObject
AXUINubbitContext
AXUIWindow
AXUIWindowProtocol
AXUIClientMessenger
AXUIContentViewControllerDelegate
AXUIViewControllerTransitionHandler
AXUIService
AXUIAlertDelegate
AXUIDisplayManager
UIDynamicAnimatorDelegate
UICollisionBehaviorDelegate
AXUIPassiveWindow
AXStaticFrameView
AXUIRootViewController
AXStyleProviderUIAlert
AXUIServiceContext
AXUIEventManager
AXUIServiceEntitlementChecker
__AXUINSBundleOverride_super
AXUINSBundleOverride
_AXUIRootWindow
AXUIServiceManager
AXUIMessageSenderDelegate
bounds
performSynchronousReadingBlock:
rootViewController
title
appendAttributedString:
initWithFrame:
willMoveToParentViewController:
containsObject:
isDarkModeActive
registerSpringBoardActionHandler:withIdentifierCallback:
setTranslatesReferenceBoundsIntoBoundary:
boolValue
size
_contextId
setHidden:
initWithFormat:
constraintsWithVisualFormat:options:metrics:views:
setTranslatesAutoresizingMaskIntoConstraints:
performSelector:withObject:afterDelay:
timeIntervalSinceReferenceDate
setCornerRadius:
interfaceOrientation
animateWithDuration:animations:completion:
performAsynchronousWritingBlock:
didMoveToParentViewController:
registerReachabilityHandler:withIdentifierCallback:
whiteColor
resizableImageWithCapInsets:
initWithEffect:
setGravityDirection:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
firstObject
blackColor
registerAccessibilityUIServicePID:
weakObjectsHashTable
animateWithDuration:animations:
terminateWithSuccess
integerValue
addConstraints:
performAsynchronousReadingBlock:
makeKeyAndVisible
initWithUTF8String:
constraintEqualToAnchor:
initWithDouble:
dictionaryWithObjects:forKeys:count:
reachabilityOffsetForPayload:
animateForReachability:payload:completion:
backgroundAccessQueue
representationWithHIDEvent:hidStreamIdentifier:
addConstraint:
setFriction:
mainScreen
dictionaryFromXPCMessage:error:
setParagraphSpacingBefore:
setActive:
setCollisionDelegate:
alpha
ax_errorWithDomain:description:
systemFontOfSize:
mainQueue
allValues
setFrameOrigin:
removeReachabilityHandler:
setOverrideUserInterfaceStyle:
UIEdgeInsetsValue
setAccessibilityIdentifier:
indexOfObjectPassingTest:
view
_setWindowControlsStatusBarOrientation:
mainBundle
dictionary
initWithTargetSerialQueue:
enumerateObjectsWithOptions:usingBlock:
ax_enqueueObject:
addChildViewController:
removeObserver:name:object:
ignoreLogging
allObjects
setClipsToBounds:
velocityInView:
_setRotatableViewOrientation:duration:force:
rangeOfString:
initWithTarget:action:
mainAccessQueue
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
removeObjectsForKeys:
addBehavior:
enumerateKeysAndObjectsUsingBlock:
parentViewController
setObject:forKeyedSubscript:
colorWithAlphaComponent:
_setContinuousCornerRadius:
initWithString:attributes:
removeObjectIdenticalTo:
valueWithPointer:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
locationInView:
valueWithNonretainedObject:
superview
setObject:forKey:
localeIdentifier
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:
removeObjectForKey:
origin
setNumberOfLines:
subviews
loadAndReturnError:
valueForKey:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
sharedHelper
removeObjectAtIndex:
objectForKeyedSubscript:
validateClass:hasInstanceMethod:withFullSignature:
setBackgroundColor:
lineHeight
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:
objectForKey:
accessibilityIdentifier
removeObject:
hitTest:withEvent:
principalClass
defaultParagraphStyle
_hidEvent
setAutoresizingMask:
initWithScreen:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:
removeGestureRecognizer:
length
sharedApplication
initWithReferenceView:
objectAtIndex:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
setWithObjects:
hasPrefix:
defaultCenter
preferredFontForTextStyle:
layer
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:priority:
removeFromSuperview
afterDelay:processBlock:
numberWithUnsignedInteger:
initWithPrivateStyle:
stringWithFormat:
server
setAttributedText:
unregisterWindowWithContextID:
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
effectWithStyle:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:
stringByStandardizingPath
removeFromParentViewController
setWindowLevel:
sendSynchronousMessage:withIdentifier:context:error:
numberWithBool:
currentLocale
UUIDString
initWithParentClass:description:appendUUIDToLabel:
stringByDeletingLastPathComponent
setAnchorPoint:
sendReply:withError:andOriginalXPCMessage:usingConnection:customDataAddingBlock:
preferredContentSizeCategory
effectForBlurEffect:
ax_constrainLayoutAttribute:asEqualToValueOfView:priority:
UTF8String
_windowInterfaceOrientation
setMaximumNumberOfTouches:
initWithPID:queue:deathHandler:
addSubview:
clearColor
UUID
setAlpha:
postNotificationName:object:
labelFontSize
stringByAppendingPathExtension:
ax_constrainLayoutAttribute:asEqualToValueOfView:
addObserverForName:object:queue:usingBlock:
setMasksToBounds:
initWithObjectsAndKeys:
childViewControllers
translationInView:
setAllowsRotation:
_scaledValueForValue:
countByEnumeratingWithState:objects:count:
stringByAppendingPathComponent:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
setView:
sendAsynchronousMessage:withIdentifier:context:targetAccessQueue:completionRequiresWritingBlock:completion:
removeBehavior:
isViewLoaded
setLineSpacing:
setAllowsGroupOpacity:
center
initWithItems:
addObserver:selector:name:object:
setRootViewController:
isLoaded
pointSize
count
setLineBreakMode:
ax_constrainLayoutAttribute:asEqualToConstant:
removeAllObjects
setValue:forKey:
frameOrigin
cancel
addObject:
stringByAppendingFormat:
safeValueForKey:
setAlignment:
isHidden
assertionWithType:identifier:
initWithItem:snapToPoint:
convertPoint:fromView:
removeAllBehaviors
bundleWithPath:
windowLevel
doubleValue
mutableCopy
pid:
state
addLinearVelocity:forItem:
frame
safeBoolForKey:
arrayWithObjects:count:
initWithItem:attachedToAnchor:
safeAreaLayoutGuide
isEqualToString:
sortUsingComparator:
removeActionHandler:
performSynchronousWritingBlock:
addGestureRecognizer:
fontWithSize:
bundleForClass:
contentView
initWithImage:
topAnchor
window
registerWindowWithContextID:atLevel:
fontWithDescriptor:size:
arrayWithArray:
pointInside:withEvent:
_accessibilityWindowVisible
_usesWindowServerHitTesting
alertWithType:text:subtitleText:iconImage:styleProvider:userInfo:
addToContainerView:
context
setContext:
userInfo
setUserInfo:
.cxx_destruct
_context
_userInfo
T@"AXUIAlertContext",W,N,V_context
T@"NSDictionary",&,N,V_userInfo
safeCategoryTargetClassName
safeCategoryBaseClass
_displayPeripheryInsetsRestrictedToScene
_accessibilityPerformValidations:
accessibilityElementsHidden
_ignoresHitTest
description
identifier
setIdentifier:
creationTimeInterval
setCreationTimeInterval:
fadeAnimationDuration
setFadeAnimationDuration:
showOrHideTimer
setShowOrHideTimer:
alertView
setAlertView:
service
setService:
priority
setPriority:
duration
setDuration:
text
setText:
subtitleText
setSubtitleText:
iconImage
setIconImage:
type
setType:
_identifier
_creationTimeInterval
_fadeAnimationDuration
_showOrHideTimer
_alertView
_service
_priority
_duration
_text
_subtitleText
_iconImage
_type
T@"NSString",C,N,V_identifier
Td,N,V_creationTimeInterval
Td,N,V_fadeAnimationDuration
T@"AXDispatchTimer",&,N,V_showOrHideTimer
T@"AXUIAlert",&,N,V_alertView
T@"<AXUIService>",&,N,V_service
TQ,N,V_priority
Td,N,V_duration
T@"NSString",C,N,V_text
T@"NSString",C,N,V_subtitleText
T@"UIImage",&,N,V_iconImage
TQ,N,V_type
styleProvider
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
alertBackgroundStyleForType:
alertBackgroundSizeForType:
alertShouldGrowInAxis:forType:
alertContentEdgeInsetsForType:
alertTextFontForType:
alertTextColorForType:
alertTextLineHeightOffsetForType:
alertSubtitleTextFontForType:
alertSubtitleTextColorForType:
alertSubtitleTextLineHeightOffsetForType:
alertSubtitleTextVerticalSpacingHeightWithTextForType:
alertIconImageEdgeInsetsForType:
alertEdgeInsetsForType:
alertPositionForType:
alertFadeAnimationDurationForType:
alertBackgroundImageForType:
alertBackgroundImageCapInsetsForType:
alertBackgroundCornerRadiusForType:
bundle
setBundle:
_bundle
T@"NSBundle",&,N,V_bundle
nubbit
setNubbit:
delegate
setDelegate:
disableSystemGesturesAssertion
setDisableSystemGesturesAssertion:
disableDashBoardSystemGesturesAssertion
setDisableDashBoardSystemGesturesAssertion:
moveNubbitGestureRecognizer
setMoveNubbitGestureRecognizer:
fadeTimer
setFadeTimer:
dynamicAnimator
setDynamicAnimator:
gravityBehavior
setGravityBehavior:
followPanBehavior
setFollowPanBehavior:
snapToBoundaryBehavior
setSnapToBoundaryBehavior:
collisionBehavior
setCollisionBehavior:
dynamicItemBehavior
setDynamicItemBehavior:
originalAlpha
setOriginalAlpha:
_nubbit
_delegate
_disableSystemGesturesAssertion
_disableDashBoardSystemGesturesAssertion
_moveNubbitGestureRecognizer
_fadeTimer
_dynamicAnimator
_gravityBehavior
_followPanBehavior
_snapToBoundaryBehavior
_collisionBehavior
_dynamicItemBehavior
_originalAlpha
T@"UIView",&,N,V_nubbit
T@"<AXUINubbitDelegate>",W,N,V_delegate
T@"AXAssertion",&,N,V_disableSystemGesturesAssertion
T@"AXAssertion",&,N,V_disableDashBoardSystemGesturesAssertion
T@"UIPanGestureRecognizer",&,N,V_moveNubbitGestureRecognizer
T@"AXDispatchTimer",&,N,V_fadeTimer
T@"UIDynamicAnimator",&,N,V_dynamicAnimator
T@"UIGravityBehavior",&,N,V_gravityBehavior
T@"UIAttachmentBehavior",&,N,V_followPanBehavior
T@"UISnapBehavior",&,N,V_snapToBoundaryBehavior
T@"UICollisionBehavior",&,N,V_collisionBehavior
T@"UIDynamicItemBehavior",&,N,V_dynamicItemBehavior
Td,N,V_originalAlpha
_isSecure
shouldRespondToDarkModeChanges
setShouldRespondToDarkModeChanges:
isHandlingFullScreenPresentation
setIsHandlingFullScreenPresentation:
TB,N
_wantsSceneAssociation
_isWindowServerHostingManaged
keepContextInBackground
_shouldAutorotateToInterfaceOrientation:
_accessibilityIsIsolatedWindow
_layerForCoordinateSpaceConversion
_accessibilityElementCommunityIdentifier
accessibilityLabel
_interfaceOrientationForSceneSafeAreaInsetsIncludingStatusBar:
_normalizedSafeAreaInsets
_isHandlingFullScreenPresentation
_shouldRespondToDarkModeChanges
TB,N,V_shouldRespondToDarkModeChanges
TB,N,V_isHandlingFullScreenPresentation
init
clientMessengerWithIdentifier:
initWithClientIdentifier:connection:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completionRequiresWritingBlock:completion:
sendSynchronousMessage:withIdentifier:error:
clientIdentifier
setClientIdentifier:
connection
setConnection:
_clientIdentifier
_connection
T@"NSString",C,N,V_clientIdentifier
T@"NSObject<OS_xpc_object>",&,N,V_connection
_didReceiveMemoryWarning:
dealloc
desiredWindowLevelForContentViewController:userInteractionEnabled:
shouldPreventAutorotatingAllContentViewControllers
transitionInWithContext:completion:
transitionOutWithContext:completion:
processMessage:withIdentifier:fromClientWithIdentifier:error:
messageWithIdentifierShouldBeProcessedAsynchronously:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
accessQueueForProcessingMessageWithIdentifier:
messageWithIdentifierRequiresWritingBlock:
processInitializationMessage:
serviceWasFullyInitialized
connectionWillBeInterruptedForClientWithIdentifier:
sharedInstance
requiredEntitlementForProcessingMessageWithIdentifier:
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
_handleMoveNubbitGestureRecognizer:
activeWindows
passiveWindows
hostingWindowShouldMoveForReachability
handleReachabilityToggled:
didAnimateForReachabilityToOffset:
activeContentViewControllers
passiveContentViewControllers
alertWithIdentifierWasEnqueued:
delayForDequeuingAlertWithIdentifier:
desiredWindowLevelForAlertWithIdentifier:
styleProviderForAlertWithIdentifier:
alertWithIdentifierDidAppear:
alertWithIdentifierDidDisappear:
alertWithIdentifierWasActivated:
alertWithIdentifierWasActivated:userInfo:
idleOpacityForNubbit:
nubbitDidUpdatePosition:
sharedDisplayManager
dynamicAnimatorWillResume:
dynamicAnimatorDidPause:
collisionBehavior:beganContactForItem:withItem:atPoint:
collisionBehavior:endedContactForItem:withItem:
collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:
collisionBehavior:endedContactForItem:withBoundaryIdentifier:
initWithServiceManager:
systemAppServerReady
contentViewControllersWithUserInteractionEnabled:forService:
addContentViewController:withUserInteractionEnabled:forService:
addContentViewController:withUserInteractionEnabled:forService:allowSystemAppHosting:
removeContentViewController:withUserInteractionEnabled:forService:
addContentViewController:withUserInteractionEnabled:forService:context:completion:
addContentViewController:withUserInteractionEnabled:forService:context:userInterfaceStyle:completion:
addContentViewController:withUserInteractionEnabled:forService:context:userInterfaceStyle:allowSystemAppHosting:completion:
removeContentViewController:withUserInteractionEnabled:forService:context:completion:
showAlertWithText:subtitleText:iconImage:type:forService:
showAlertWithText:subtitleText:iconImage:type:priority:duration:forService:
showAlertWithText:subtitleText:iconImage:type:priority:duration:userInfo:forService:
hideAlertWithIdentifier:forService:
registerNubbit:delegate:
unregisterNubbit:
unregisterNubbit:shouldUndoFade:
_enumerateWindowsUsingBlock:
_windowWithUserInteractionEnabled:windowLevel:createIfNeeded:purposeIdentifier:
_windowWithUserInteractionEnabled:windowLevel:createIfNeeded:purposeIdentifier:userInterfaceStyle:allowSystemAppHosting:
_rotateWindow:toInterfaceOrientation:duration:force:
_originalDurationForRotationFromInterfaceOrientation:toInterfaceOrientation:withAdjustedDuration:
enumerateContentViewControllersUsingBlock:
_reachabilityToggledWithPayload:
_contentViewControllersWithUserInteractionEnabled:forService:createIfNeeded:
_disposeOfContentViewControllersWithUserInteractionEnabled:forService:
_addContentViewController:toWindow:forService:context:completion:
_removeContentViewController:forService:completion:
_transactionIdentifierForDisplayingContentViewController:service:
_hasVisibleAlertWithType:
_showAlertWithContext:
_hideAlertWithContext:notifyDelegate:
_showOrEnqueueAlertWithContext:
_handleNextAlertForType:
_didHideOrDequeueAlertWithContext:
_transactionIdentifierForDisplayingAlertWithContext:service:
_nubbitContextKeyForNubbit:
_boundingViewForNubbit:
_nubbitContextForGestureRecognizer:
_scheduleFadeForNubbitContext:
_undoFadeForNubbitContext:
_addDynamicAnimationsForNubbitContext:
_removeDynamicAnimationsForNubbitContext:
_beginMoveForNubbitContext:
_changeNubbitPositionForNubbitContext:
_endMoveForNubbitContext:
pinNubbitToEdge:
_gravityBehaviorForNubbit:velocity:boundingView:
cancelNubbitFade:
_attemptToInitializeActiveInterfaceOrientation
_serviceWantsToPreventAutorotation:
_activeInterfaceOrientationDidChange:duration:
_resetServiceManager
_reapHiddenWindows
defaultAlertStyleProvider
setDefaultAlertStyleProvider:
activeInterfaceOrientation
setActiveInterfaceOrientation:
numberOfAttemptsToInitializeActiveInterfaceOrientation
setNumberOfAttemptsToInitializeActiveInterfaceOrientation:
serviceManager
setServiceManager:
alertQueues
setAlertQueues:
visibleAlertContexts
setVisibleAlertContexts:
setActiveWindows:
setPassiveWindows:
setActiveContentViewControllers:
setPassiveContentViewControllers:
systemServerActionHandlerIdentifier
setSystemServerActionHandlerIdentifier:
userInterfaceStyle
setUserInterfaceStyle:
nubbitContexts
setNubbitContexts:
reachabilityHandlerIdentifier
setReachabilityHandlerIdentifier:
reachabilityOffset
setReachabilityOffset:
windowHostingController
setWindowHostingController:
_defaultAlertStyleProvider
_activeInterfaceOrientation
_numberOfAttemptsToInitializeActiveInterfaceOrientation
_serviceManager
_alertQueues
_visibleAlertContexts
_activeWindows
_passiveWindows
_activeContentViewControllers
_passiveContentViewControllers
_systemServerActionHandlerIdentifier
_userInterfaceStyle
_nubbitContexts
_reachabilityHandlerIdentifier
_reachabilityOffset
_windowHostingController
T@"AXUIAlertStyleProvider",&,N,V_defaultAlertStyleProvider
Tq,N,V_activeInterfaceOrientation
Tq,N,V_userInterfaceStyle
TQ,N,V_numberOfAttemptsToInitializeActiveInterfaceOrientation
T@"AXUIServiceManager",W,N,V_serviceManager
T@"NSMutableDictionary",&,N,V_alertQueues
T@"NSMutableDictionary",&,N,V_visibleAlertContexts
T@"NSMutableDictionary",&,N,V_activeWindows
T@"NSMutableDictionary",&,N,V_passiveWindows
T@"NSMutableDictionary",&,N,V_activeContentViewControllers
T@"NSMutableDictionary",&,N,V_passiveContentViewControllers
T@"NSMutableDictionary",&,N,V_nubbitContexts
T@"NSString",C,N,V_systemServerActionHandlerIdentifier
T@"NSString",C,N,V_reachabilityHandlerIdentifier
Td,N,V_reachabilityOffset
T@"SBSAccessibilityWindowHostingController",&,N,V_windowHostingController
setFrame:
viewWillTransitionToSize:withTransitionCoordinator:
_shouldForwardViewWillTransitionToSize
loadView
shouldAutorotate
_canShowWhileLocked
supportedInterfaceOrientations
accessibilityPostScreenChangedForChildViewController:isAddition:
_handleTapGestureRecognizer:
_handlePanGestureRecognizer:
initWithType:text:subtitleText:iconImage:styleProvider:userInfo:
_updateDismissalWithPanGesture:
_updateViewForDismissalPercentage:
_endDismissalWithPanGesture:
_cancelDismissalWithPanGesture:
_appendParagraphWithText:withTextColor:font:textAlignment:lineSpacing:paragraphSpacingBefore:toAttributedString:
alertType
setAlertType:
setStyleProvider:
_dismissalGestureYOffset
_backgroundViewDismissalOrigin
_alertType
_styleProvider
TQ,N,V_alertType
T@"<AXUIAlertStyleProvider>",&,N,V_styleProvider
initWithService:serviceIdentifier:
clientsCount
addClientWithIdentifier:connection:
_indexOfClientWithIdentifier:
removeClientWithIdentifier:
hasClientWithIdentifier:
enumerateClientsUsingBlock:
serviceIdentifier
setServiceIdentifier:
clientMessengers
setClientMessengers:
_serviceIdentifier
_clientMessengers
T@"<NSObject><NSCopying>",C,N,V_serviceIdentifier
T@"NSMutableArray",&,N,V_clientMessengers
TQ,R,N
handlePointerEvent:
sharedEventManager
_init
_handleUIEvent:
registerEventHandler:
unregisterEventHandler:
eventHandlers
setEventHandlers:
laserEnabled
_laserEnabled
_eventHandlers
T@"NSHashTable",&,N,V_eventHandlers
TB,R,N,V_laserEnabled
initWithServiceClass:
serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
clientConnectionWillBeTerminated:
_indexOfClientConnection:
_clientProcessWithAuditToken:hasEntitlement:
_singleRequiredEntitlementForMessageWithIdentifier:
_possibleRequiredEntitlementForMessageWithIdentifier:
serviceClass
setServiceClass:
clientConnections
setClientConnections:
entitlementsCaches
setEntitlementsCaches:
_serviceClass
_clientConnections
_entitlementsCaches
T#,N,V_serviceClass
T@"NSMutableArray",&,N,V_clientConnections
T@"NSMutableArray",&,N,V_entitlementsCaches
infoDictionary
_applicationDidReceiveMemoryWarning:
sharedServiceManager
_releaseSharedServiceManager
messageSender:accessXPCConnectionForMessageWithContext:usingBlock:
messageSender:willSendXPCMessage:context:
messageSender:extractCustomDataFromXPCReply:numberOfKeyValuePairsForCustomData:
messageSender:processCustomDataFromXPCReply:
beginTransactionWithIdentifier:forService:
endTransactionWithIdentifier:forService:
_clientMessengerWithIdentifier:
_sendAsynchronousMessage:withIdentifier:toClientWithMessenger:targetAccessQueue:completionRequiresWritingBlock:completion:
_sendSynchronousMessage:withIdentifier:toClientWithMessenger:error:
_start
_handleConnection:
_serviceWithClass:canProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
_registerForSystemAppDeath
_applicationDidFinishLaunching
_registerClientWithIdentifier:connection:serviceBundleName:initiatingMessageIdentifier:error:
_unregisterAllClientsWithConnection:
_serviceContextForClientWithIdentifier:
_serviceContextForService:
_uniqueIdentifierForService:
_servicesForUniqueIdentifiers:
displayManager
setDisplayManager:
resumingConnectionsQueue
setResumingConnectionsQueue:
pausedConnections
setPausedConnections:
entitlementsCheckersAccessQueue
setEntitlementsCheckersAccessQueue:
entitlementsCheckers
setEntitlementsCheckers:
messageSender
setMessageSender:
serviceContexts
setServiceContexts:
servicesAccessQueue
setServicesAccessQueue:
lastUsedServiceIdentifier
setLastUsedServiceIdentifier:
shouldAllowServicesToProcessMessages
setShouldAllowServicesToProcessMessages:
transactions
setTransactions:
_springBoardReaper
_shouldAllowServicesToProcessMessages
_displayManager
_resumingConnectionsQueue
_pausedConnections
_entitlementsCheckersAccessQueue
_entitlementsCheckers
_messageSender
_serviceContexts
_servicesAccessQueue
_lastUsedServiceIdentifier
_transactions
T@"NSMutableArray",&,N,V_pausedConnections
T@"AXAccessQueue",&,N,V_resumingConnectionsQueue
T@"NSMutableDictionary",&,N,V_entitlementsCheckers
T@"AXAccessQueue",&,N,V_entitlementsCheckersAccessQueue
T@"AXUIMessageSender",&,N,V_messageSender
T@"NSMutableArray",&,N,V_serviceContexts
T@"AXAccessQueue",&,N,V_servicesAccessQueue
TQ,N,V_lastUsedServiceIdentifier
TB,N,V_shouldAllowServicesToProcessMessages
T@"AXUIDisplayManager",&,N,V_displayManager
T@"NSMutableDictionary",&,N,V_transactions
B40@0:8{CGPoint=dd}16@32
B16@0:8
@64@0:8Q16@24@32@40@48@56
v24@0:8@16
@16@0:8
v16@0:8
@"AXUIAlertContext"
@"NSDictionary"
#16@0:8
{UIEdgeInsets=dddd}16@0:8
d16@0:8
v24@0:8d16
Q16@0:8
v24@0:8Q16
@"NSString"
@"AXDispatchTimer"
@"AXUIAlert"
@"<AXUIService>"
@"UIImage"
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i24@0:8Q16
{CGSize=dd}24@0:8Q16
B32@0:8q16Q24
{UIEdgeInsets=dddd}24@0:8Q16
@24@0:8Q16
d24@0:8Q16
@"UIFont"24@0:8Q16
@"UIColor"24@0:8Q16
@"UIImage"24@0:8Q16
@"NSBundle"
@"UIView"
@"<AXUINubbitDelegate>"
@"AXAssertion"
@"UIPanGestureRecognizer"
@"UIDynamicAnimator"
@"UIGravityBehavior"
@"UIAttachmentBehavior"
@"UISnapBehavior"
@"UICollisionBehavior"
@"UIDynamicItemBehavior"
v20@0:8B16
B24@0:8q16
q20@0:8B16
@24@0:8@16
@32@0:8@16@24
v48@0:8@16Q24@32@?40
v52@0:8@16Q24@32B40@?44
@40@0:8@16Q24^@32
@"NSObject<OS_xpc_object>"
d28@0:8@16B24
d28@0:8@"UIViewController"16B24
v32@0:8^v16@?24
v32@0:8^v16@?<v@?B>24
@48@0:8@16Q24@32^@40
B24@0:8Q16
@"NSDictionary"48@0:8@"NSDictionary"16Q24@"NSString"32^@40
v48@0:8@"NSDictionary"16Q24@"NSString"32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"24@0:8Q16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
@"NSString"24@0:8Q16
@"NSSet"24@0:8Q16
d24@0:8@16
v32@0:8@16@24
d24@0:8@"NSString"16
@"<AXUIAlertStyleProvider>"24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"UIDynamicAnimator"16
v56@0:8@16@24@32{CGPoint=dd}40
v40@0:8@16@24@32
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32
@28@0:8B16@20
v36@0:8@16B24@28
v40@0:8@16B24@28B36
v52@0:8@16B24@28^v36@?44
v60@0:8@16B24@28^v36q44@?52
v64@0:8@16B24@28^v36q44B52@?56
@56@0:8@16@24@32Q40@48
@72@0:8@16@24@32Q40Q48d56@64
@80@0:8@16@24@32Q40Q48d56@64@72
v28@0:8@16B24
v24@0:8@?16
@40@0:8B16d20B28@32
@52@0:8B16d20B28@32q40B48
v44@0:8@16q24d32B40
d40@0:8q16q24d32
@32@0:8B16@20B28
v28@0:8B16@20
v56@0:8@16@24@32^v40@?48
v40@0:8@16@24@?32
@48@0:8@16{CGPoint=dd}24@40
v32@0:8q16d24
q16@0:8
v24@0:8q16
@"AXUIAlertStyleProvider"
@"AXUIServiceManager"
@"NSMutableDictionary"
@"SBSAccessibilityWindowHostingController"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v40@0:8{CGSize=dd}16@32
B28@0:8@16B24
v72@0:8@16@24@32q40d48d56@64
{CGPoint="x"d"y"d}
@"<AXUIAlertStyleProvider>"
Q24@0:8@16
@"<NSObject><NSCopying>"
@"NSMutableArray"
@"NSHashTable"
@24@0:8#16
B40@0:8Q16@24^@32
B32@0:8^{?=[8I]}16@24
v24@0:8#16
v40@0:8@16^v24@?32
v40@0:8@16@24^v32
^v40@0:8@16@24^Q32
v32@0:8@16^v24
v40@0:8@"AXUIMessageSender"16^v24@?<v@?@"NSObject<OS_xpc_object>">32
v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^v32
^v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^Q32
v32@0:8@"AXUIMessageSender"16^v24
v60@0:8@16Q24@32@40B48@?52
B48@0:8#16Q24@32^@40
B56@0:8@16@24@32Q40^@48
@"BSProcessDeathWatcher"
@"AXUIDisplayManager"
@"AXAccessQueue"
@"AXUIMessageSender"
UUUUUU
