/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIAlert.m
+[AXUIAlert alertWithType:text:subtitleText:iconImage:styleProvider:userInfo:]
This type of alert: (%@) is not supported on this platform. 
UIScreen
_isMainScreen
_displayPeripheryInsetsRestrictedToScene
{UIEdgeInsets=dddd}
_displayPeripheryInsets
<%@: %p; identifier = "%@">
_transformLayer
AXUIServer-%f
 AXID: %@
<%@: %p; clientIdentifier = "%@">
AXUIServerModifiedWindowInterfaceStyle
AXUIServerDefaultSceneClientIdentifier
v32@?0@"NSNumber"8@"UIWindow<AXUIWindowProtocol>"16^B24
v24@?0q8@"NSDictionary"16
v16@?0@"NSString"8
v16@?0@"NSDictionary"8
v8@?0
v12@?0B8
B32@?0@8Q16^B24
v32@?0@8@16^B24
MAIN-DISPLAY
%@|%@
v24@?0@"UIViewController"8^B16
v16@?0d8
<%@: %p>
AXUIAlert
__AXStringForVariablesSentinel
q24@?0@8@16
v32@?0@8Q16^B24
Got nubbit moving gesture recognizer %@, which had no nubbit associated with it.
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIDisplayManager.m
-[AXUIDisplayManager _beginMoveForNubbitContext:]
Should have made an animator for the nubbit when it was registered
foreheadRect
AXUIDisplayManager<%p>
Active Windows:
  ID: %@
    %@: %@
      Content: %@
Passive Windows:
Content view controllers of window at level %ld have conflicting supported interface orientations. Allowing portrait orientation nonetheless. One of these content view controllers needs to be moved to a different window using the method -desiredWindowLevelForContentViewController:userInteractionEnabled: from AXUIContentViewControllerDelegate, on the corresponding AXUIService: %{public}@.
AXUIRootViewController<%p> Content: %@
H:|-[backdropView]-|
backdropView
V:|-[backdropView]-|
H:|[label]|
label
V:|[label]|
AXUIEventManagerHIDStream
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceEntitlementChecker.m
-[AXUIServiceEntitlementChecker serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:]
The client connections array and the entitlements caches array are supposed to have the same number of elements (%@).
NSBundle
NSExtensionPointIdentifier
com.apple.accessibility.AccessibilityUIServer
NSExtension
System/Library/AccessibilityBundles
AppleInternal/Library/AccessibilityUIServices
Developer/Library/PrivateFrameworks/AccessibilityAudit.framework
axuiservice
ServicesAccessQueue
EntitlementsCheckersAccessQueue
ResumingConnectionsQueue
Beginning transaction with identifier %{public}@ for service: %{public}@
Ending transaction with identifier %{public}@ for service: %{public}@
v24@?0@"NSDictionary"8@"NSError"16
AXUINSBundleOverride
AXUIUIScreenOverride
v16@?0@"NSNotification"8
com.apple.accessibility
com.apple.AccessibilityUIServer
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
%@.%@.%@-%p
v16@?0@"NSObject<OS_xpc_object>"8
v32@?0@"NSDictionary"8@"NSError"16@"<AXUIService>"24
Couldn't find service associated to client identifier: %@
One of the following entitlements is required: %@ for this operation: %d
Couldn't find client identifier associated to message.
v12@?0i8
Invalid service bundle path: %@
Failed to load service bundle at path: %@
Couldn't find principal class for service bundle at path: %@
Service: '%@' unable to process message:'%@'. Entitlements may be missing. required: %@ [client identifier: %@:%d]
Service instance does not conform to service protocol: %@.
Failed to instantiate service of class %@
Service bundle still not loaded, weird... Service bundle path: %@
Failed to create service bundle at path: %@
v32@?0@"NSString"8@"AXMultiplexConnectionHandler"16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceManager.m
-[AXUIServiceManager _unregisterAllClientsWithConnection:]
The client identifiers lists array is expected to be of same size as the affected services array.
No longer in PreBoard. AXUI Server is restarting.
@333333
?ffffff
Adding contentVC=%p %@ service=%@ sceneClientIdentifier:%@ windowScene=%p, savedWindowScene=%p
Tried to add %@ before a scene was connected, queuing for later.
Cannot show alert. Text was empty
Cannot show alert service does not conform to AXUIService: %@
Made window with external scene: %@ %@
Made window with main scene: %@ %@
Made window for system app hosting %@
Made window for main screen %@
New window scene connected: %p for scene client: %@. Adding queued content view controllers
Window scene disconnected: %p, for scene client:%@
New external window scene connected: %p for scene client: %@. Notifying services.
External display scene connected for Service: %@, sceneClientIdentifier: %@
External display scene connected for Service: %@
Disconnecting external scene: %@
External display scene disconnected for Service: %@, sceneClientIdentifier: %@
External display scene disconnected for Service: %@
checking scene: %p, windows: %@
remove contentViewController: %@, service: %@ scene: %p
showAlert savedWindowScene:%p, context:%@
Need to request scene, queue alert request
%{public}@
%{public}@ sending asynchronous message with identifier %lu and a completion handler but no target access queue; defaulting to the main access queue.
Current locale did change. Restarting AXUI Server %@ %@
AXUI Server started at PreBoard. This is unexpected, but we'll restart once we're done.
Invalidation handler from connection: %@
Could not register client. ID=%@ serviceBundleName=%@ error=%@
AXUIServiceManager: Got invalid value for message identifier in client connection event handler: 0.
Lost connection with client.
Connection with client was supposed to be terminated imminently, but we are ignoring it for now.
Got unexpected error in client connection event handler: %{public}s.
Got object of unexpected type in client connection event handler: %{public}s.
AXUIActiveWindow
_AXUIActiveRootWindow
AXUIAlert
__AXUIUIScreenOverride_super
SafeCategory
AXUIUIScreenOverride
_AXUIPassiveRootWindow
AXUIAlertContext
AXUIAlertStyleProvider
NSObject
AXUINubbitContext
AXUIWindow
AXUIWindowProtocol
AXUIClientMessenger
AXUIViewControllerTransitionHandler
AXUIService
AXUIContentViewControllerDelegate
AXUIAlertDelegate
AXUIDisplayManager
UIDynamicAnimatorDelegate
UICollisionBehaviorDelegate
SBSSystemApertureLayoutMonitoring
AXUIPassiveWindow
AXStaticFrameView
AXUIRootViewController
AXStyleProviderUIAlert
AXUIServiceContext
AXUIEventManager
AXUIServiceEntitlementChecker
__AXUINSBundleOverride_super
AXUINSBundleOverride
_AXUIRootWindow
AXUIServiceManager
AXUIMessageSenderDelegate
BSServiceConnectionListenerDelegate
AccessibilityBoardServices_ServerProtocol
T@"<AXUIService>",&,N,V_service
CGRectValue
T@"NSString",C,N,V_subtitleText
T#,R
Td,N,V_duration
T@"<AXUINubbitDelegate>",W,N,V_delegate
_bundle
T@"<NSObject><NSCopying>",C,N,V_serviceIdentifier
_clientMessengerWithIdentifier:
T@"AXAccessQueue",&,N,V_resumingConnectionsQueue
_displayManager
T@"AXAssertion",&,N,V_disableDashBoardSystemGesturesAssertion
_handleUIEvent:
T@"AXDispatchTimer",&,N,V_fadeTimer
_nubbit
T@"AXMultiplexConnectionHandler",&,N,V_connection
_passiveWindows
T@"AXUIAlertContext",W,N,V_context
_shouldRespondToDarkModeChanges
T@"AXUIDisplayManager",&,N,V_displayManager
_updateDismissalWithPanGesture:
T@"AXUIServiceManager",W,N,V_serviceManager
addContentViewController:withUserInteractionEnabled:forService:
T@"NSHashTable",&,N,V_eventHandlers
allKeys
T@"NSMutableArray",&,N,V_clientMessengers
arrayWithArray:
T@"NSMutableArray",&,N,V_pausedConnections
bundleForClass:
T@"NSMutableDictionary",&,N,V_activeContentViewControllers
containsObject:
T@"NSMutableDictionary",&,N,V_addContentViewControllerBlocks
dealloc
T@"NSMutableDictionary",&,N,V_entitlementsCheckers
dynamicAnimator
T@"NSMutableDictionary",&,N,V_mainScenes
gravityBehavior
T@"NSMutableDictionary",&,N,V_passiveContentViewControllers
initWithEffect:
T@"NSMutableDictionary",&,N,V_sceneClients
initWithPID:queue:deathHandler:
T@"NSMutableDictionary",&,N,V_visibleAlertContexts
isProxy
T@"NSString",C,N,V_identifier
mainAccessQueue
T@"NSString",C,N,V_systemServerActionHandlerIdentifier
performSynchronousReadingBlock:
T@"NSString",R,C
T@"UIAttachmentBehavior",&,N,V_followPanBehavior
release
T@"UIDynamicAnimator",&,N,V_dynamicAnimator
safeBoolForKey:
T@"UIGravityBehavior",&,N,V_gravityBehavior
serviceContexts
T@"UIPanGestureRecognizer",&,N,V_moveNubbitGestureRecognizer
setAnchorPoint:
T@"UIView",&,N,V_nubbit
setLineSpacing:
TB,N,V_isHandlingFullScreenPresentation
setTargetQueue:
TB,N,V_shouldRespondToDarkModeChanges
setWithObjects:
TQ,N,V_alertType
showOrHideTimer
TQ,N,V_numberOfAttemptsToInitializeActiveInterfaceOrientation
stringByAppendingPathExtension:
TQ,R
willMoveToParentViewController:
Td,N,V_creationTimeInterval
.cxx_destruct
T@"NSDictionary",&,N,V_userInfo
T#,N,V_serviceClass
TQ,N,V_priority
T@"<AXUIAlertStyleProvider>",&,N,V_styleProvider
_addContentViewControllerBlocks
T@"<AXUIServiceManagerDelegate>",W,N,V_delegate
_cancelDismissalWithPanGesture:
T@"AXAccessQueue",&,N,V_entitlementsCheckersAccessQueue
_disableSystemGesturesAssertion
T@"AXAccessQueue",&,N,V_servicesAccessQueue
_externalScenes
T@"AXAssertion",&,N,V_disableSystemGesturesAssertion
_ignoresHitTest
T@"AXDispatchTimer",&,N,V_showOrHideTimer
_nubbitContexts
T@"AXUIAlert",&,N,V_alertView
_serviceManager
T@"AXUIAlertStyleProvider",&,N,V_defaultAlertStyleProvider
_showOrEnqueueAlertWithContext:
T@"AXUIMessageSender",&,N,V_messageSender
addConstraints:
T@"NSBundle",&,N,V_bundle
alertWithIdentifierWasEnqueued:
T@"NSMutableArray",&,N,V_clientConnections
animateWithDuration:animations:
T@"NSMutableArray",&,N,V_entitlementsCaches
ax_errorWithDomain:description:
T@"NSMutableArray",&,N,V_serviceContexts
bundleWithPath:
T@"NSMutableDictionary",&,N,V_activeWindows
context
T@"NSMutableDictionary",&,N,V_alertQueues
dictionaryFromXPCMessage:error:
T@"NSMutableDictionary",&,N,V_externalScenes
entitlementsCheckersAccessQueue
T@"NSMutableDictionary",&,N,V_nubbitContexts
initWithDouble:
T@"NSMutableDictionary",&,N,V_passiveWindows
initWithFormat:
T@"NSMutableDictionary",&,N,V_transactions
initWithScreen:
T@"NSString",C,N,V_clientIdentifier
locationInView:
T@"NSString",C,N,V_reachabilityHandlerIdentifier
numberWithBool:
T@"NSString",C,N,V_text
performSynchronousWritingBlock:
T@"SBSAccessibilityWindowHostingController",&,N,V_windowHostingController
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
T@"UICollisionBehavior",&,N,V_collisionBehavior
removeBehavior:
T@"UIDynamicItemBehavior",&,N,V_dynamicItemBehavior
service
T@"UIImage",&,N,V_iconImage
setAlertQueues:
T@"UISnapBehavior",&,N,V_snapToBoundaryBehavior
setFrameOrigin:
TB,N
setMoveNubbitGestureRecognizer:
TB,N,V_shouldAllowServicesToProcessMessages
setWindowLevel:
TB,R,N,V_laserEnabled
setXpc_handler:
TQ,N,V_lastUsedServiceIdentifier
stringByAppendingPathComponent:
TQ,N,V_type
velocityInView:
TQ,R,N
windows
Td,N,V_fadeAnimationDuration
Td,N,V_originalAlpha
Td,N,V_reachabilityOffset
Tq,N,V_activeInterfaceOrientation
Tq,N,V_userInterfaceStyle
UIEdgeInsetsValue
UTF8String
UUID
UUIDString
_accessibilityElementCommunityIdentifier
_accessibilityIsIsolatedWindow
_accessibilityPerformValidations:
_accessibilityWindowVisible
_activeContentViewControllers
_activeInterfaceOrientation
_activeWindows
_addContentViewController:toWindow:forService:context:completion:
_addDynamicAnimationsForNubbitContext:
_alertQueues
_alertType
_alertView
_allowsOcclusionDetectionOverride
_appendParagraphWithText:withTextColor:font:textAlignment:lineSpacing:paragraphSpacingBefore:toAttributedString:
_applicationDidFinishLaunching
_applicationDidReceiveMemoryWarning:
_attemptToInitializeActiveInterfaceOrientation
_axIsPointInForeheadRect:
_backgroundViewDismissalOrigin
_beginMoveForNubbitContext:
_boundingViewForNubbit:
_canShowWhileLocked
_changeNubbitPositionForNubbitContext:
_clientConnections
_clientIdentifier
_clientMessengers
_clientProcessWithAuditToken:hasEntitlement:
_collisionBehavior
_connection
_connectionListener
_contentViewControllersWithUserInteractionEnabled:forService:createIfNeeded:
_context
_contextId
_creationTimeInterval
_defaultAlertStyleProvider
_delegate
_didHideOrDequeueAlertWithContext:
_didReceiveMemoryWarning:
_disableDashBoardSystemGesturesAssertion
_dismissalGestureYOffset
_displayPeripheryInsetsRestrictedToScene
_disposeOfContentViewControllersWithUserInteractionEnabled:forService:
_duration
_dynamicAnimator
_dynamicItemBehavior
_endDismissalWithPanGesture:
_endMoveForNubbitContext:
_entitlementsCaches
_entitlementsCheckers
_entitlementsCheckersAccessQueue
_enumerateWindowsUsingBlock:
_eventHandlers
_externalDisplaySceneConnected:forSceneClientIdentifier:
_externalDisplaySceneDisconnected:forSceneClientIdentifier:
_fadeAnimationDuration
_fadeTimer
_followPanBehavior
_foreheadRect
_gravityBehavior
_gravityBehaviorForNubbit:velocity:boundingView:
_handleConnection:
_handleMoveNubbitGestureRecognizer:
_handleNextAlertForType:
_handlePanGestureRecognizer:
_handleTapGestureRecognizer:
_hasVisibleAlertWithType:
_hidEvent
_hideAlertWithContext:notifyDelegate:
_iconImage
_identifier
_indexOfClientConnection:
_indexOfClientWithIdentifier:
_init
_interfaceOrientationForSceneSafeAreaInsetsIncludingStatusBar:
_isHandlingFullScreenPresentation
_isSecure
_laserEnabled
_lastUsedServiceIdentifier
_layerForCoordinateSpaceConversion
_layoutMonitor
_mainScenes
_messageSender
_moveNubbitGestureRecognizer
_normalizedSafeAreaInsets
_nubbitContextForGestureRecognizer:
_nubbitContextKeyForNubbit:
_numberOfAttemptsToInitializeActiveInterfaceOrientation
_originalAlpha
_originalDurationForRotationFromInterfaceOrientation:toInterfaceOrientation:withAdjustedDuration:
_passiveContentViewControllers
_pausedConnections
_possibleRequiredEntitlementForMessageWithIdentifier:
_priority
_processXPCObject:context:
_reachabilityHandlerIdentifier
_reachabilityOffset
_reachabilityToggledWithPayload:
_reapHiddenWindows
_registerClientWithIdentifier:connection:serviceBundleName:initiatingMessageIdentifier:error:
_registerForSystemAppDeath
_releaseSharedServiceManager
_removeContentViewController:forService:completion:
_removeDynamicAnimationsForNubbitContext:
_resetServiceManager
_resumingConnectionsQueue
_scaledValueForValue:
_sceneClients
_sceneIdentifier
_scheduleFadeForNubbitContext:
_sendAsynchronousMessage:withIdentifier:toClientWithMessenger:targetAccessQueue:completionRequiresWritingBlock:completion:
_sendSynchronousMessage:withIdentifier:toClientWithMessenger:error:
_service
_serviceClass
_serviceContextForClientWithIdentifier:
_serviceContextForService:
_serviceContexts
_serviceIdentifier
_serviceWantsToPreventAutorotation:
_serviceWithClass:canProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
_services
_servicesAccessQueue
_servicesForUniqueIdentifiers:
_setContinuousCornerRadius:
_setWindowControlsStatusBarOrientation:
_shouldAllowServicesToProcessMessages
_shouldAutorotateToInterfaceOrientation:
_showAlertWithContext:
_showOrHideTimer
_singleRequiredEntitlementForMessageWithIdentifier:
_snapToBoundaryBehavior
_springBoardReaper
_start
_startLaunchAngel
_styleProvider
_subtitleText
_systemServerActionHandlerIdentifier
_text
_transactionIdentifierForDisplayingAlertWithContext:service:
_transactionIdentifierForDisplayingContentViewController:service:
_transactions
_type
_undoFadeForNubbitContext:
_uniqueIdentifierForService:
_unregisterAllClientsWithConnection:
_updateViewForDismissalPercentage:
_userInfo
_userInterfaceStyle
_usesWindowServerHitTesting
_visibleAlertContexts
_windowHostingController
_windowInterfaceOrientation
_windowSceneConnected:forSceneClientIdentifier:
_windowSceneDisconnected:forSceneClientIdentifier:
_windowWithUserInteractionEnabled:windowLevel:createIfNeeded:purposeIdentifier:
_windowWithUserInteractionEnabled:windowLevel:createIfNeeded:purposeIdentifier:userInterfaceStyle:allowSystemAppHosting:windowScene:savedWindowScene:
accessQueueForProcessingMessageWithIdentifier:
accessibilityElementsHidden
accessibilityIdentifier
accessibilityLabel
accessibilityPostScreenChangedForChildViewController:isAddition:
activate
activeContentViewControllers
activeInterfaceOrientation
activeWindows
addBehavior:
addBoundaryWithIdentifier:fromPoint:toPoint:
addChildViewController:
addClientWithIdentifier:connection:
addConstraint:
addContentViewController:withUserInteractionEnabled:forService:allowSystemAppHosting:
addContentViewController:withUserInteractionEnabled:forService:context:completion:
addContentViewController:withUserInteractionEnabled:forService:context:userInterfaceStyle:allowSystemAppHosting:forWindowScene:completion:
addContentViewController:withUserInteractionEnabled:forService:context:userInterfaceStyle:completion:
addContentViewController:withUserInteractionEnabled:forService:forSceneClientIdentifier:
addContentViewController:withUserInteractionEnabled:forService:forSceneClientIdentifier:context:userInterfaceStyle:allowSystemAppHosting:forWindowScene:completion:
addContentViewControllerBlocks
addGestureRecognizer:
addLinearVelocity:forItem:
addObject:
addObjectsFromArray:
addObserver:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addSubview:
addToContainerView:
afterDelay:processBlock:
alertBackgroundCornerRadiusForType:
alertBackgroundImageCapInsetsForType:
alertBackgroundImageForType:
alertBackgroundSizeForType:
alertBackgroundStyleForType:
alertContentEdgeInsetsForType:
alertEdgeInsetsForType:
alertFadeAnimationDurationForType:
alertIconImageEdgeInsetsForType:
alertPositionForType:
alertQueues
alertShouldGrowInAxis:forType:
alertSubtitleTextColorForType:
alertSubtitleTextFontForType:
alertSubtitleTextLineHeightOffsetForType:
alertSubtitleTextVerticalSpacingHeightWithTextForType:
alertTextColorForType:
alertTextFontForType:
alertTextLineHeightOffsetForType:
alertType
alertView
alertWithIdentifierDidAppear:
alertWithIdentifierDidDisappear:
alertWithIdentifierWasActivated:
alertWithIdentifierWasActivated:userInfo:
alertWithType:text:subtitleText:iconImage:styleProvider:userInfo:
allObjects
allValues
alpha
animateForReachability:payload:completion:
animateWithDuration:animations:completion:
appendAttributedString:
appendFormat:
array
arrayWithObjects:count:
assertionWithType:identifier:
auditToken
autorelease
ax_constrainLayoutAttribute:asEqualToConstant:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
ax_enqueueObject:
backgroundAccessQueue
beginTransactionWithIdentifier:forService:
blackColor
boolValue
bounds
bundle
cancel
cancelNubbitFade:
center
childViewControllers
class
clearColor
clientConnectionWillBeTerminated:
clientConnections
clientIdentifier
clientMessengerWithIdentifier:
clientMessengers
clientsCount
collisionBehavior
collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:
collisionBehavior:beganContactForItem:withItem:atPoint:
collisionBehavior:endedContactForItem:withBoundaryIdentifier:
collisionBehavior:endedContactForItem:withItem:
colorWithAlphaComponent:
configureConnection:
conformsToProtocol:
connection
connectionWillBeInterruptedForClientWithIdentifier:
constraintEqualToAnchor:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
constraintsWithVisualFormat:options:metrics:views:
contentView
contentViewControllersWithUserInteractionEnabled:forService:
convertPoint:fromView:
count
countByEnumeratingWithState:objects:count:
creationTimeInterval
currentContext
currentLocale
debugDescription
defaultAlertStyleProvider
defaultCenter
defaultParagraphStyle
delayForDequeuingAlertWithIdentifier:
delegate
description
desiredWindowLevelForAlertWithIdentifier:
desiredWindowLevelForContentViewController:userInteractionEnabled:
desiredWindowLevelForService:forContentViewController:userInteractionEnabled:
destroyScene:
destroyWindowSceneIfNeeded:
dictionary
dictionaryWithObjects:forKeys:count:
didAnimateForReachabilityToOffset:
didMoveToParentViewController:
disableDashBoardSystemGesturesAssertion
disableSystemGesturesAssertion
displayManager
duration
dynamicAnimatorDidPause:
dynamicAnimatorWillResume:
dynamicItemBehavior
effectForBlurEffect:
effectWithStyle:
endTransactionWithIdentifier:forService:
entitlementsCaches
entitlementsCheckers
enumerateClientsUsingBlock:
enumerateContentViewControllersUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
eventHandlers
externalDisplaySceneConnected:
externalDisplaySceneConnected:forSceneClientIdentifier:
externalDisplaySceneDisconnected:
externalDisplaySceneDisconnected:forSceneClientIdentifier:
externalScenes
fadeAnimationDuration
fadeTimer
firstObject
followPanBehavior
fontWithDescriptor:size:
fontWithSize:
frame
frameOrigin
handlePointerEvent:
handleReachabilityToggled:
hasClientWithIdentifier:
hasPrefix:
hash
hideAlertWithIdentifier:forService:
hitTest:withEvent:
hostingWindowShouldMoveForReachability
iconImage
identifier
idleOpacityForNubbit:
ignoreLogging
indexOfObjectPassingTest:
infoDictionary
init
initWithClientIdentifier:connection:
initWithFrame:
initWithImage:
initWithItem:attachedToAnchor:
initWithItem:snapToPoint:
initWithItems:
initWithObjectsAndKeys:
initWithParentClass:description:appendUUIDToLabel:
initWithPrivateStyle:
initWithReferenceView:
initWithService:serviceIdentifier:
initWithServiceClass:
initWithServiceManager:
initWithString:attributes:
initWithTarget:action:
initWithTargetSerialQueue:
initWithType:text:subtitleText:iconImage:styleProvider:userInfo:
initWithUTF8String:
initWithWindowScene:
integerValue
invalidate
isChamoisSupportEnabled
isDarkModeActive
isEqual:
isEqualToString:
isHandlingFullScreenPresentation
isHidden
isKindOfClass:
isLoaded
isMemberOfClass:
isViewLoaded
labelFontSize
laserEnabled
lastUsedServiceIdentifier
layer
length
lineHeight
listener:didReceiveConnection:withContext:
listenerWithConfigurator:
loadAndReturnError:
loadView
localeIdentifier
mainBundle
mainQueue
mainScenes
mainScreen
makeKeyAndVisible
messageSender
messageSender:accessLaunchAngelConnectionForMessageWithContext:usingBlock:
messageSender:accessXPCConnectionForMessageWithContext:usingBlock:
messageSender:extractCustomDataFromXPCReply:numberOfKeyValuePairsForCustomData:
messageSender:processCustomDataFromXPCReply:
messageSender:willSendXPCMessage:context:
messageWithIdentifierRequiresWritingBlock:
messageWithIdentifierShouldBeProcessedAsynchronously:
moveNubbitGestureRecognizer
mutableCopy
nubbit
nubbitContexts
nubbitDidUpdatePosition:
nubbitWillBeginDragging:
numberOfAttemptsToInitializeActiveInterfaceOrientation
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
origin
originalAlpha
parentViewController
passiveContentViewControllers
passiveWindows
pausedConnections
performAsynchronousReadingBlock:
performAsynchronousWritingBlock:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
pid:
pinNubbitToEdge:
pointInside:withEvent:
pointSize
postNotificationName:object:
preferredContentSizeCategory
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
preferredFontForTextStyle:
principalClass
priority
processHandle
processInitializationMessage:
processMessage:withIdentifier:fromClientWithIdentifier:error:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
rangeOfString:
reachabilityHandlerIdentifier
reachabilityOffset
reachabilityOffsetForPayload:
registerAccessibilityUIServicePID:
registerEventHandler:
registerNubbit:delegate:
registerReachabilityHandler:withIdentifierCallback:
registerSpringBoardActionHandler:withIdentifierCallback:
registerWindowWithContextID:atLevel:
remoteProcess
remoteTarget
removeActionHandler:
removeAllBehaviors
removeClientWithIdentifier:
removeContentViewController:withUserInteractionEnabled:forService:
removeContentViewController:withUserInteractionEnabled:forService:context:completion:
removeFromParentViewController
removeFromSuperview
removeGestureRecognizer:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectIdenticalTo:
removeObjectsForKeys:
removeObserver:name:object:
removeReachabilityHandler:
removeWindowSceneForSceneClientIdentifier:external:
representationWithHIDEvent:hidStreamIdentifier:
requestSceneForSceneClientIdentifier:scenePreferredLevel:
requiredEntitlementForProcessingMessageWithIdentifier:
resizableImageWithCapInsets:
respondsToSelector:
resumingConnectionsQueue
retain
retainCount
rootViewController
safeAreaLayoutGuide
safeCategoryBaseClass
safeCategoryTargetClassName
safeValueForKey:
saveAddContentViewControllerBlock:forSceneClientIdentifier:
saveWindowScene:forSceneClientIdentifier:external:
sceneClients
sceneRequestedForSceneClientIdentifier:
self
sendAsynchronousMessage:withIdentifier:context:targetAccessQueue:completionRequiresWritingBlock:completion:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completionRequiresWritingBlock:completion:
sendBoardServiceMessage:callback:
sendReply:withError:andOriginalXPCMessage:usingConnection:customDataAddingBlock:
sendSynchronousMessage:withIdentifier:context:error:
sendSynchronousMessage:withIdentifier:error:
server
serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
serviceClass
serviceConnection
serviceDidConnect:clientWithIdentifier:
serviceIdentifier
serviceManager
serviceWasFullyInitialized
servicesAccessQueue
setAccessibilityIdentifier:
setActive:
setActiveContentViewControllers:
setActiveInterfaceOrientation:
setActiveWindows:
setAddContentViewControllerBlocks:
setAlertType:
setAlertView:
setAlignment:
setAllowsGroupOpacity:
setAllowsRotation:
setAlpha:
setAttributedText:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
setAutoresizingMask:
setBackgroundColor:
setBundle:
setClientConnections:
setClientIdentifier:
setClientMessengers:
setClipsToBounds:
setCollisionBehavior:
setCollisionDelegate:
setConnection:
setContext:
setCornerRadius:
setCreationTimeInterval:
setDefaultAlertStyleProvider:
setDelegate:
setDisableDashBoardSystemGesturesAssertion:
setDisableSystemGesturesAssertion:
setDisplayManager:
setDomain:
setDuration:
setDynamicAnimator:
setDynamicItemBehavior:
setEntitlementsCaches:
setEntitlementsCheckers:
setEntitlementsCheckersAccessQueue:
setEventHandlers:
setExternalScenes:
setFadeAnimationDuration:
setFadeTimer:
setFollowPanBehavior:
setFrame:
setFriction:
setGravityBehavior:
setGravityDirection:
setHidden:
setIconImage:
setIdentifier:
setInterface:
setInterfaceTarget:
setInvalidationHandler:
setIsHandlingFullScreenPresentation:
setLastUsedServiceIdentifier:
setLineBreakMode:
setMainScenes:
setMasksToBounds:
setMaximumNumberOfTouches:
setMessageSender:
setNubbit:
setNubbitContexts:
setNumberOfAttemptsToInitializeActiveInterfaceOrientation:
setNumberOfLines:
setObject:forKey:
setObject:forKeyedSubscript:
setOriginalAlpha:
setOverrideUserInterfaceStyle:
setParagraphSpacingBefore:
setPassiveContentViewControllers:
setPassiveWindows:
setPausedConnections:
setPriority:
setProcessHandle:
setReachabilityHandlerIdentifier:
setReachabilityOffset:
setResumingConnectionsQueue:
setRootViewController:
setSceneClients:
setService:
setServiceClass:
setServiceConnection:
setServiceContexts:
setServiceIdentifier:
setServiceManager:
setServiceQuality:
setServicesAccessQueue:
setShouldAllowServicesToProcessMessages:
setShouldRespondToDarkModeChanges:
setShowOrHideTimer:
setSnapToBoundaryBehavior:
setState:
setStyleProvider:
setSubtitleText:
setSystemServerActionHandlerIdentifier:
setText:
setTransactions:
setTranslatesAutoresizingMaskIntoConstraints:
setTranslatesReferenceBoundsIntoBoundary:
setType:
setUserInfo:
setUserInterfaceStyle:
setValue:forKey:
setView:
setVisibleAlertContexts:
setWindowHostingController:
sharedApplication
sharedDisplayManager
sharedEventManager
sharedHelper
sharedInstance
sharedServiceManager
shouldAllowServicesToProcessMessages
shouldPreventAutorotatingAllContentViewControllers
shouldRespondToDarkModeChanges
showAlertWithText:subtitleText:iconImage:type:forService:
showAlertWithText:subtitleText:iconImage:type:priority:duration:forService:
showAlertWithText:subtitleText:iconImage:type:priority:duration:userInfo:forService:
size
snapToBoundaryBehavior
sortUsingComparator:
state
stringByAppendingFormat:
stringByStandardizingPath
stringWithFormat:
styleProvider
styleProviderForAlertWithIdentifier:
subtitleText
subviews
superclass
superview
supportedInterfaceOrientations
systemApertureLayoutDidChange:
systemAppServerReady
systemFontOfSize:
systemServerActionHandlerIdentifier
terminateWithSuccess
text
timeIntervalSinceReferenceDate
title
topAnchor
transactions
transitionInWithContext:completion:
transitionOutWithContext:completion:
translationInView:
type
unregisterEventHandler:
unregisterNubbit:
unregisterNubbit:shouldUndoFade:
unregisterWindowWithContextID:
userInfo
userInitiated
userInterfaceStyle
validateClass:hasInstanceMethod:withFullSignature:
valueForKey:
valueWithNonretainedObject:
valueWithPointer:
view
visibleAlertContexts
weakObjectsHashTable
whiteColor
window
windowHostingController
windowLevel
windowScene
windowSceneForSceneClientIdentifier:external:
xpc_handler
zone
B40@0:8{CGPoint=dd}16@32
B16@0:8
@64@0:8Q16@24@32@40@48@56
v24@0:8@16
@16@0:8
v16@0:8
@"AXUIAlertContext"
@"NSDictionary"
#16@0:8
{UIEdgeInsets=dddd}16@0:8
d16@0:8
v24@0:8d16
Q16@0:8
v24@0:8Q16
@"NSString"
@"AXDispatchTimer"
@"AXUIAlert"
@"<AXUIService>"
@"UIImage"
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i24@0:8Q16
{CGSize=dd}24@0:8Q16
B32@0:8q16Q24
{UIEdgeInsets=dddd}24@0:8Q16
@24@0:8Q16
d24@0:8Q16
@"UIFont"24@0:8Q16
@"UIColor"24@0:8Q16
@"UIImage"24@0:8Q16
@"NSBundle"
@"UIView"
@"<AXUINubbitDelegate>"
@"AXAssertion"
@"UIPanGestureRecognizer"
@"UIDynamicAnimator"
@"UIGravityBehavior"
@"UIAttachmentBehavior"
@"UISnapBehavior"
@"UICollisionBehavior"
@"UIDynamicItemBehavior"
v20@0:8B16
B24@0:8q16
q20@0:8B16
@24@0:8@16
@32@0:8@16@24
v48@0:8@16Q24@32@?40
v52@0:8@16Q24@32B40@?44
@40@0:8@16Q24^@32
@"AXMultiplexConnectionHandler"
v32@0:8^v16@?24
v32@0:8^v16@?<v@?B>24
@48@0:8@16Q24@32^@40
B24@0:8Q16
@"NSDictionary"48@0:8@"NSDictionary"16Q24@"NSString"32^@40
v48@0:8@"NSDictionary"16Q24@"NSString"32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"24@0:8Q16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
@"NSString"24@0:8Q16
@"NSSet"24@0:8Q16
d28@0:8@16B24
v32@0:8@16@24
d28@0:8@"UIViewController"16B24
v24@0:8@"UIWindowScene"16
v32@0:8@"UIWindowScene"16@"NSString"24
d24@0:8@16
d24@0:8@"NSString"16
@"<AXUIAlertStyleProvider>"24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"UIDynamicAnimator"16
v56@0:8@16@24@32{CGPoint=dd}40
v40@0:8@16@24@32
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32
v24@0:8@"NSArray"16
@28@0:8B16@20
v36@0:8@16B24@28
v44@0:8@16B24@28@36
v40@0:8@16B24@28B36
v52@0:8@16B24@28^v36@?44
v60@0:8@16B24@28^v36q44@?52
v72@0:8@16B24@28^v36q44B52@56@?64
v80@0:8@16B24@28@36^v44q52B60@64@?72
@56@0:8@16@24@32Q40@48
@72@0:8@16@24@32Q40Q48d56@64
@80@0:8@16@24@32Q40Q48d56@64@72
v28@0:8@16B24
v24@0:8@?16
@40@0:8B16d20B28@32
@68@0:8B16d20B28@32q40B48@52@60
d40@0:8q16q24d32
v36@0:8@16@24B32
@28@0:8@16B24
v32@0:8@?16@24
d36@0:8@16@24B32
@32@0:8B16@20B28
v28@0:8B16@20
v56@0:8@16@24@32^v40@?48
v40@0:8@16@24@?32
@48@0:8@16{CGPoint=dd}24@40
B32@0:8{CGPoint=dd}16
q16@0:8
v24@0:8q16
@"SBSSystemApertureLayoutMonitor"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"AXUIAlertStyleProvider"
@"AXUIServiceManager"
@"NSMutableDictionary"
@"SBSAccessibilityWindowHostingController"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B28@0:8@16B24
v72@0:8@16@24@32q40d48d56@64
{CGPoint="x"d"y"d}
@"<AXUIAlertStyleProvider>"
Q24@0:8@16
@"<NSObject><NSCopying>"
@"NSMutableArray"
@"NSHashTable"
@24@0:8#16
B40@0:8Q16@24^@32
B32@0:8^{?=[8I]}16@24
v24@0:8#16
v40@0:8@16^v24@?32
v40@0:8@16@24^v32
^v40@0:8@16@24^Q32
v32@0:8@16^v24
v40@0:8@"AXUIMessageSender"16^v24@?<v@?@"NSObject<OS_xpc_object>">32
v40@0:8@"AXUIMessageSender"16^v24@?<v@?@"<AccessibilityBoardServices_ServerProtocol>">32
v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^v32
^v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^Q32
v32@0:8@"AXUIMessageSender"16^v24
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
Vv32@0:8@16@?24
Vv32@0:8@"NSObject<OS_xpc_object>"16@?<v@?@"NSObject<OS_xpc_object>"@"NSError">24
v60@0:8@16Q24@32@40B48@?52
B48@0:8#16Q24@32^@40
B56@0:8@16@24@32Q40^@48
@"BSProcessDeathWatcher"
@"BSServiceConnectionListener"
@"AXUIDisplayManager"
@"AXAccessQueue"
@"AXUIMessageSender"
@"<AXUIServiceManagerDelegate>"
UUUUUU
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIAlert.m
+[AXUIAlert alertWithType:text:subtitleText:iconImage:styleProvider:userInfo:]
This type of alert: (%@) is not supported on this platform. 
UIScreen
_isMainScreen
_displayPeripheryInsetsRestrictedToScene
{UIEdgeInsets=dddd}
_displayPeripheryInsets
<%@: %p; identifier = "%@">
_transformLayer
AXUIServer-%f
 AXID: %@
<%@: %p; clientIdentifier = "%@">
AXUIServerModifiedWindowInterfaceStyle
AXUIServerDefaultSceneClientIdentifier
v32@?0@"NSNumber"8@"UIWindow<AXUIWindowProtocol>"16^B24
v24@?0q8@"NSDictionary"16
v16@?0@"NSString"8
v16@?0@"NSDictionary"8
v8@?0
v12@?0B8
B32@?0@8Q16^B24
v32@?0@8@16^B24
MAIN-DISPLAY
%@|%@
v24@?0@"UIViewController"8^B16
v16@?0d8
<%@: %p>
AXUIAlert
__AXStringForVariablesSentinel
q24@?0@8@16
v32@?0@8Q16^B24
Got nubbit moving gesture recognizer %@, which had no nubbit associated with it.
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIDisplayManager.m
-[AXUIDisplayManager _beginMoveForNubbitContext:]
Should have made an animator for the nubbit when it was registered
foreheadRect
AXUIDisplayManager<%p>
Active Windows:
  ID: %@
    %@: %@
      Content: %@
Passive Windows:
Content view controllers of window at level %ld have conflicting supported interface orientations. Allowing portrait orientation nonetheless. One of these content view controllers needs to be moved to a different window using the method -desiredWindowLevelForContentViewController:userInteractionEnabled: from AXUIContentViewControllerDelegate, on the corresponding AXUIService: %{public}@.
AXUIRootViewController<%p> Content: %@
H:|-[backdropView]-|
backdropView
V:|-[backdropView]-|
H:|[label]|
label
V:|[label]|
AXUIEventManagerHIDStream
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceEntitlementChecker.m
-[AXUIServiceEntitlementChecker serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:]
The client connections array and the entitlements caches array are supposed to have the same number of elements (%@).
NSBundle
NSExtensionPointIdentifier
com.apple.accessibility.AccessibilityUIServer
NSExtension
System/Library/AccessibilityBundles
AppleInternal/Library/AccessibilityUIServices
Developer/Library/PrivateFrameworks/AccessibilityAudit.framework
axuiservice
ServicesAccessQueue
EntitlementsCheckersAccessQueue
ResumingConnectionsQueue
Beginning transaction with identifier %{public}@ for service: %{public}@
Ending transaction with identifier %{public}@ for service: %{public}@
v24@?0@"NSDictionary"8@"NSError"16
AXUINSBundleOverride
AXUIUIScreenOverride
v16@?0@"NSNotification"8
com.apple.accessibility
com.apple.AccessibilityUIServer
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
%@.%@.%@-%p
v16@?0@"NSObject<OS_xpc_object>"8
v32@?0@"NSDictionary"8@"NSError"16@"<AXUIService>"24
Couldn't find service associated to client identifier: %@
One of the following entitlements is required: %@ for this operation: %d
Couldn't find client identifier associated to message.
v12@?0i8
Invalid service bundle path: %@
Failed to load service bundle at path: %@
Couldn't find principal class for service bundle at path: %@
Service: '%@' unable to process message:'%@'. Entitlements may be missing. required: %@ [client identifier: %@:%d]
Service instance does not conform to service protocol: %@.
Failed to instantiate service of class %@
Service bundle still not loaded, weird... Service bundle path: %@
Failed to create service bundle at path: %@
v32@?0@"NSString"8@"AXMultiplexConnectionHandler"16^B24
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceManager.m
-[AXUIServiceManager _unregisterAllClientsWithConnection:]
The client identifiers lists array is expected to be of same size as the affected services array.
No longer in PreBoard. AXUI Server is restarting.
?333333
<ffffff
I@)\
Adding contentVC=%p %@ service=%@ sceneClientIdentifier:%@ windowScene=%p, savedWindowScene=%p
Tried to add %@ before a scene was connected, queuing for later.
Cannot show alert. Text was empty
Cannot show alert service does not conform to AXUIService: %@
Made window with external scene: %@ %@
Made window with main scene: %@ %@
Made window for system app hosting %@
Made window for main screen %@
New window scene connected: %p for scene client: %@. Adding queued content view controllers
Window scene disconnected: %p, for scene client:%@
New external window scene connected: %p for scene client: %@. Notifying services.
External display scene connected for Service: %@, sceneClientIdentifier: %@
External display scene connected for Service: %@
Disconnecting external scene: %@
External display scene disconnected for Service: %@, sceneClientIdentifier: %@
External display scene disconnected for Service: %@
checking scene: %p, windows: %@
remove contentViewController: %@, service: %@ scene: %p
showAlert savedWindowScene:%p, context:%@
Need to request scene, queue alert request
%{public}@
%{public}@ sending asynchronous message with identifier %lu and a completion handler but no target access queue; defaulting to the main access queue.
Current locale did change. Restarting AXUI Server %@ %@
AXUI Server started at PreBoard. This is unexpected, but we'll restart once we're done.
Invalidation handler from connection: %@
Could not register client. ID=%@ serviceBundleName=%@ error=%@
AXUIServiceManager: Got invalid value for message identifier in client connection event handler: 0.
Lost connection with client.
Connection with client was supposed to be terminated imminently, but we are ignoring it for now.
Got unexpected error in client connection event handler: %{public}s.
Got object of unexpected type in client connection event handler: %{public}s.
AXUIActiveWindow
_AXUIActiveRootWindow
AXUIAlert
__AXUIUIScreenOverride_super
SafeCategory
AXUIUIScreenOverride
_AXUIPassiveRootWindow
AXUIAlertContext
AXUIAlertStyleProvider
NSObject
AXUINubbitContext
AXUIWindow
AXUIWindowProtocol
AXUIClientMessenger
AXUIViewControllerTransitionHandler
AXUIService
AXUIContentViewControllerDelegate
AXUIAlertDelegate
AXUIDisplayManager
UIDynamicAnimatorDelegate
UICollisionBehaviorDelegate
SBSSystemApertureLayoutMonitoring
AXUIPassiveWindow
AXStaticFrameView
AXUIRootViewController
AXStyleProviderUIAlert
AXUIServiceContext
AXUIEventManager
AXUIServiceEntitlementChecker
__AXUINSBundleOverride_super
AXUINSBundleOverride
_AXUIRootWindow
AXUIServiceManager
AXUIMessageSenderDelegate
BSServiceConnectionListenerDelegate
AccessibilityBoardServices_ServerProtocol
T@"<AXUIService>",&,N,V_service
CGRectValue
T@"NSString",C,N,V_subtitleText
T#,R
Td,N,V_duration
T@"<AXUINubbitDelegate>",W,N,V_delegate
_bundle
T@"<NSObject><NSCopying>",C,N,V_serviceIdentifier
_clientMessengerWithIdentifier:
T@"AXAccessQueue",&,N,V_resumingConnectionsQueue
_displayManager
T@"AXAssertion",&,N,V_disableDashBoardSystemGesturesAssertion
_handleUIEvent:
T@"AXDispatchTimer",&,N,V_fadeTimer
_nubbit
T@"AXMultiplexConnectionHandler",&,N,V_connection
_passiveWindows
T@"AXUIAlertContext",W,N,V_context
_shouldRespondToDarkModeChanges
T@"AXUIDisplayManager",&,N,V_displayManager
_updateDismissalWithPanGesture:
T@"AXUIServiceManager",W,N,V_serviceManager
addContentViewController:withUserInteractionEnabled:forService:
T@"NSHashTable",&,N,V_eventHandlers
allKeys
T@"NSMutableArray",&,N,V_clientMessengers
arrayWithArray:
T@"NSMutableArray",&,N,V_pausedConnections
bundleForClass:
T@"NSMutableDictionary",&,N,V_activeContentViewControllers
containsObject:
T@"NSMutableDictionary",&,N,V_addContentViewControllerBlocks
dealloc
T@"NSMutableDictionary",&,N,V_entitlementsCheckers
dynamicAnimator
T@"NSMutableDictionary",&,N,V_mainScenes
gravityBehavior
T@"NSMutableDictionary",&,N,V_passiveContentViewControllers
initWithEffect:
T@"NSMutableDictionary",&,N,V_sceneClients
initWithPID:queue:deathHandler:
T@"NSMutableDictionary",&,N,V_visibleAlertContexts
isProxy
T@"NSString",C,N,V_identifier
mainAccessQueue
T@"NSString",C,N,V_systemServerActionHandlerIdentifier
performSynchronousReadingBlock:
T@"NSString",R,C
T@"UIAttachmentBehavior",&,N,V_followPanBehavior
release
T@"UIDynamicAnimator",&,N,V_dynamicAnimator
safeBoolForKey:
T@"UIGravityBehavior",&,N,V_gravityBehavior
serviceContexts
T@"UIPanGestureRecognizer",&,N,V_moveNubbitGestureRecognizer
setAnchorPoint:
T@"UIView",&,N,V_nubbit
setLineSpacing:
TB,N,V_isHandlingFullScreenPresentation
setTargetQueue:
TB,N,V_shouldRespondToDarkModeChanges
setWithObjects:
TQ,N,V_alertType
showOrHideTimer
TQ,N,V_numberOfAttemptsToInitializeActiveInterfaceOrientation
stringByAppendingPathExtension:
TQ,R
willMoveToParentViewController:
Td,N,V_creationTimeInterval
.cxx_destruct
T@"NSDictionary",&,N,V_userInfo
T#,N,V_serviceClass
TQ,N,V_priority
T@"<AXUIAlertStyleProvider>",&,N,V_styleProvider
_addContentViewControllerBlocks
T@"<AXUIServiceManagerDelegate>",W,N,V_delegate
_cancelDismissalWithPanGesture:
T@"AXAccessQueue",&,N,V_entitlementsCheckersAccessQueue
_disableSystemGesturesAssertion
T@"AXAccessQueue",&,N,V_servicesAccessQueue
_externalScenes
T@"AXAssertion",&,N,V_disableSystemGesturesAssertion
_ignoresHitTest
T@"AXDispatchTimer",&,N,V_showOrHideTimer
_nubbitContexts
T@"AXUIAlert",&,N,V_alertView
_serviceManager
T@"AXUIAlertStyleProvider",&,N,V_defaultAlertStyleProvider
_showOrEnqueueAlertWithContext:
T@"AXUIMessageSender",&,N,V_messageSender
addConstraints:
T@"NSBundle",&,N,V_bundle
alertWithIdentifierWasEnqueued:
T@"NSMutableArray",&,N,V_clientConnections
animateWithDuration:animations:
T@"NSMutableArray",&,N,V_entitlementsCaches
ax_errorWithDomain:description:
T@"NSMutableArray",&,N,V_serviceContexts
bundleWithPath:
T@"NSMutableDictionary",&,N,V_activeWindows
context
T@"NSMutableDictionary",&,N,V_alertQueues
dictionaryFromXPCMessage:error:
T@"NSMutableDictionary",&,N,V_externalScenes
entitlementsCheckersAccessQueue
T@"NSMutableDictionary",&,N,V_nubbitContexts
initWithDouble:
T@"NSMutableDictionary",&,N,V_passiveWindows
initWithFormat:
T@"NSMutableDictionary",&,N,V_transactions
initWithScreen:
T@"NSString",C,N,V_clientIdentifier
locationInView:
T@"NSString",C,N,V_reachabilityHandlerIdentifier
numberWithBool:
T@"NSString",C,N,V_text
performSynchronousWritingBlock:
T@"SBSAccessibilityWindowHostingController",&,N,V_windowHostingController
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
T@"UICollisionBehavior",&,N,V_collisionBehavior
removeBehavior:
T@"UIDynamicItemBehavior",&,N,V_dynamicItemBehavior
service
T@"UIImage",&,N,V_iconImage
setAlertQueues:
T@"UISnapBehavior",&,N,V_snapToBoundaryBehavior
setFrameOrigin:
TB,N
setMoveNubbitGestureRecognizer:
TB,N,V_shouldAllowServicesToProcessMessages
setWindowLevel:
TB,R,N,V_laserEnabled
setXpc_handler:
TQ,N,V_lastUsedServiceIdentifier
stringByAppendingPathComponent:
TQ,N,V_type
velocityInView:
TQ,R,N
windows
Td,N,V_fadeAnimationDuration
Td,N,V_originalAlpha
Td,N,V_reachabilityOffset
Tq,N,V_activeInterfaceOrientation
Tq,N,V_userInterfaceStyle
UIEdgeInsetsValue
UTF8String
UUID
UUIDString
_accessibilityElementCommunityIdentifier
_accessibilityIsIsolatedWindow
_accessibilityPerformValidations:
_accessibilityWindowVisible
_activeContentViewControllers
_activeInterfaceOrientation
_activeWindows
_addContentViewController:toWindow:forService:context:completion:
_addDynamicAnimationsForNubbitContext:
_alertQueues
_alertType
_alertView
_allowsOcclusionDetectionOverride
_appendParagraphWithText:withTextColor:font:textAlignment:lineSpacing:paragraphSpacingBefore:toAttributedString:
_applicationDidFinishLaunching
_applicationDidReceiveMemoryWarning:
_attemptToInitializeActiveInterfaceOrientation
_axIsPointInForeheadRect:
_backgroundViewDismissalOrigin
_beginMoveForNubbitContext:
_boundingViewForNubbit:
_canShowWhileLocked
_changeNubbitPositionForNubbitContext:
_clientConnections
_clientIdentifier
_clientMessengers
_clientProcessWithAuditToken:hasEntitlement:
_collisionBehavior
_connection
_connectionListener
_contentViewControllersWithUserInteractionEnabled:forService:createIfNeeded:
_context
_contextId
_creationTimeInterval
_defaultAlertStyleProvider
_delegate
_didHideOrDequeueAlertWithContext:
_didReceiveMemoryWarning:
_disableDashBoardSystemGesturesAssertion
_dismissalGestureYOffset
_displayPeripheryInsetsRestrictedToScene
_disposeOfContentViewControllersWithUserInteractionEnabled:forService:
_duration
_dynamicAnimator
_dynamicItemBehavior
_endDismissalWithPanGesture:
_endMoveForNubbitContext:
_entitlementsCaches
_entitlementsCheckers
_entitlementsCheckersAccessQueue
_enumerateWindowsUsingBlock:
_eventHandlers
_externalDisplaySceneConnected:forSceneClientIdentifier:
_externalDisplaySceneDisconnected:forSceneClientIdentifier:
_fadeAnimationDuration
_fadeTimer
_followPanBehavior
_foreheadRect
_gravityBehavior
_gravityBehaviorForNubbit:velocity:boundingView:
_handleConnection:
_handleMoveNubbitGestureRecognizer:
_handleNextAlertForType:
_handlePanGestureRecognizer:
_handleTapGestureRecognizer:
_hasVisibleAlertWithType:
_hidEvent
_hideAlertWithContext:notifyDelegate:
_iconImage
_identifier
_indexOfClientConnection:
_indexOfClientWithIdentifier:
_init
_interfaceOrientationForSceneSafeAreaInsetsIncludingStatusBar:
_isHandlingFullScreenPresentation
_isSecure
_laserEnabled
_lastUsedServiceIdentifier
_layerForCoordinateSpaceConversion
_layoutMonitor
_mainScenes
_messageSender
_moveNubbitGestureRecognizer
_normalizedSafeAreaInsets
_nubbitContextForGestureRecognizer:
_nubbitContextKeyForNubbit:
_numberOfAttemptsToInitializeActiveInterfaceOrientation
_originalAlpha
_originalDurationForRotationFromInterfaceOrientation:toInterfaceOrientation:withAdjustedDuration:
_passiveContentViewControllers
_pausedConnections
_possibleRequiredEntitlementForMessageWithIdentifier:
_priority
_processXPCObject:context:
_reachabilityHandlerIdentifier
_reachabilityOffset
_reachabilityToggledWithPayload:
_reapHiddenWindows
_registerClientWithIdentifier:connection:serviceBundleName:initiatingMessageIdentifier:error:
_registerForSystemAppDeath
_releaseSharedServiceManager
_removeContentViewController:forService:completion:
_removeDynamicAnimationsForNubbitContext:
_resetServiceManager
_resumingConnectionsQueue
_scaledValueForValue:
_sceneClients
_sceneIdentifier
_scheduleFadeForNubbitContext:
_sendAsynchronousMessage:withIdentifier:toClientWithMessenger:targetAccessQueue:completionRequiresWritingBlock:completion:
_sendSynchronousMessage:withIdentifier:toClientWithMessenger:error:
_service
_serviceClass
_serviceContextForClientWithIdentifier:
_serviceContextForService:
_serviceContexts
_serviceIdentifier
_serviceWantsToPreventAutorotation:
_serviceWithClass:canProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
_services
_servicesAccessQueue
_servicesForUniqueIdentifiers:
_setContinuousCornerRadius:
_setWindowControlsStatusBarOrientation:
_shouldAllowServicesToProcessMessages
_shouldAutorotateToInterfaceOrientation:
_showAlertWithContext:
_showOrHideTimer
_singleRequiredEntitlementForMessageWithIdentifier:
_snapToBoundaryBehavior
_springBoardReaper
_start
_startLaunchAngel
_styleProvider
_subtitleText
_systemServerActionHandlerIdentifier
_text
_transactionIdentifierForDisplayingAlertWithContext:service:
_transactionIdentifierForDisplayingContentViewController:service:
_transactions
_type
_undoFadeForNubbitContext:
_uniqueIdentifierForService:
_unregisterAllClientsWithConnection:
_updateViewForDismissalPercentage:
_userInfo
_userInterfaceStyle
_usesWindowServerHitTesting
_visibleAlertContexts
_windowHostingController
_windowInterfaceOrientation
_windowSceneConnected:forSceneClientIdentifier:
_windowSceneDisconnected:forSceneClientIdentifier:
_windowWithUserInteractionEnabled:windowLevel:createIfNeeded:purposeIdentifier:
_windowWithUserInteractionEnabled:windowLevel:createIfNeeded:purposeIdentifier:userInterfaceStyle:allowSystemAppHosting:windowScene:savedWindowScene:
accessQueueForProcessingMessageWithIdentifier:
accessibilityElementsHidden
accessibilityIdentifier
accessibilityLabel
accessibilityPostScreenChangedForChildViewController:isAddition:
activate
activeContentViewControllers
activeInterfaceOrientation
activeWindows
addBehavior:
addBoundaryWithIdentifier:fromPoint:toPoint:
addChildViewController:
addClientWithIdentifier:connection:
addConstraint:
addContentViewController:withUserInteractionEnabled:forService:allowSystemAppHosting:
addContentViewController:withUserInteractionEnabled:forService:context:completion:
addContentViewController:withUserInteractionEnabled:forService:context:userInterfaceStyle:allowSystemAppHosting:forWindowScene:completion:
addContentViewController:withUserInteractionEnabled:forService:context:userInterfaceStyle:completion:
addContentViewController:withUserInteractionEnabled:forService:forSceneClientIdentifier:
addContentViewController:withUserInteractionEnabled:forService:forSceneClientIdentifier:context:userInterfaceStyle:allowSystemAppHosting:forWindowScene:completion:
addContentViewControllerBlocks
addGestureRecognizer:
addLinearVelocity:forItem:
addObject:
addObjectsFromArray:
addObserver:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addSubview:
addToContainerView:
afterDelay:processBlock:
alertBackgroundCornerRadiusForType:
alertBackgroundImageCapInsetsForType:
alertBackgroundImageForType:
alertBackgroundSizeForType:
alertBackgroundStyleForType:
alertContentEdgeInsetsForType:
alertEdgeInsetsForType:
alertFadeAnimationDurationForType:
alertIconImageEdgeInsetsForType:
alertPositionForType:
alertQueues
alertShouldGrowInAxis:forType:
alertSubtitleTextColorForType:
alertSubtitleTextFontForType:
alertSubtitleTextLineHeightOffsetForType:
alertSubtitleTextVerticalSpacingHeightWithTextForType:
alertTextColorForType:
alertTextFontForType:
alertTextLineHeightOffsetForType:
alertType
alertView
alertWithIdentifierDidAppear:
alertWithIdentifierDidDisappear:
alertWithIdentifierWasActivated:
alertWithIdentifierWasActivated:userInfo:
alertWithType:text:subtitleText:iconImage:styleProvider:userInfo:
allObjects
allValues
alpha
animateForReachability:payload:completion:
animateWithDuration:animations:completion:
appendAttributedString:
appendFormat:
array
arrayWithObjects:count:
assertionWithType:identifier:
auditToken
autorelease
ax_constrainLayoutAttribute:asEqualToConstant:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
ax_enqueueObject:
backgroundAccessQueue
beginTransactionWithIdentifier:forService:
blackColor
boolValue
bounds
bundle
cancel
cancelNubbitFade:
center
childViewControllers
class
clearColor
clientConnectionWillBeTerminated:
clientConnections
clientIdentifier
clientMessengerWithIdentifier:
clientMessengers
clientsCount
collisionBehavior
collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:
collisionBehavior:beganContactForItem:withItem:atPoint:
collisionBehavior:endedContactForItem:withBoundaryIdentifier:
collisionBehavior:endedContactForItem:withItem:
colorWithAlphaComponent:
configureConnection:
conformsToProtocol:
connection
connectionWillBeInterruptedForClientWithIdentifier:
constraintEqualToAnchor:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
constraintsWithVisualFormat:options:metrics:views:
contentView
contentViewControllersWithUserInteractionEnabled:forService:
convertPoint:fromView:
count
countByEnumeratingWithState:objects:count:
creationTimeInterval
currentContext
currentLocale
debugDescription
defaultAlertStyleProvider
defaultCenter
defaultParagraphStyle
delayForDequeuingAlertWithIdentifier:
delegate
description
desiredWindowLevelForAlertWithIdentifier:
desiredWindowLevelForContentViewController:userInteractionEnabled:
desiredWindowLevelForService:forContentViewController:userInteractionEnabled:
destroyScene:
destroyWindowSceneIfNeeded:
dictionary
dictionaryWithObjects:forKeys:count:
didAnimateForReachabilityToOffset:
didMoveToParentViewController:
disableDashBoardSystemGesturesAssertion
disableSystemGesturesAssertion
displayManager
duration
dynamicAnimatorDidPause:
dynamicAnimatorWillResume:
dynamicItemBehavior
effectForBlurEffect:
effectWithStyle:
endTransactionWithIdentifier:forService:
entitlementsCaches
entitlementsCheckers
enumerateClientsUsingBlock:
enumerateContentViewControllersUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
eventHandlers
externalDisplaySceneConnected:
externalDisplaySceneConnected:forSceneClientIdentifier:
externalDisplaySceneDisconnected:
externalDisplaySceneDisconnected:forSceneClientIdentifier:
externalScenes
fadeAnimationDuration
fadeTimer
firstObject
followPanBehavior
fontWithDescriptor:size:
fontWithSize:
frame
frameOrigin
handlePointerEvent:
handleReachabilityToggled:
hasClientWithIdentifier:
hasPrefix:
hash
hideAlertWithIdentifier:forService:
hitTest:withEvent:
hostingWindowShouldMoveForReachability
iconImage
identifier
idleOpacityForNubbit:
ignoreLogging
indexOfObjectPassingTest:
infoDictionary
init
initWithClientIdentifier:connection:
initWithFrame:
initWithImage:
initWithItem:attachedToAnchor:
initWithItem:snapToPoint:
initWithItems:
initWithObjectsAndKeys:
initWithParentClass:description:appendUUIDToLabel:
initWithPrivateStyle:
initWithReferenceView:
initWithService:serviceIdentifier:
initWithServiceClass:
initWithServiceManager:
initWithString:attributes:
initWithTarget:action:
initWithTargetSerialQueue:
initWithType:text:subtitleText:iconImage:styleProvider:userInfo:
initWithUTF8String:
initWithWindowScene:
integerValue
invalidate
isChamoisSupportEnabled
isDarkModeActive
isEqual:
isEqualToString:
isHandlingFullScreenPresentation
isHidden
isKindOfClass:
isLoaded
isMemberOfClass:
isViewLoaded
labelFontSize
laserEnabled
lastUsedServiceIdentifier
layer
length
lineHeight
listener:didReceiveConnection:withContext:
listenerWithConfigurator:
loadAndReturnError:
loadView
localeIdentifier
mainBundle
mainQueue
mainScenes
mainScreen
makeKeyAndVisible
messageSender
messageSender:accessLaunchAngelConnectionForMessageWithContext:usingBlock:
messageSender:accessXPCConnectionForMessageWithContext:usingBlock:
messageSender:extractCustomDataFromXPCReply:numberOfKeyValuePairsForCustomData:
messageSender:processCustomDataFromXPCReply:
messageSender:willSendXPCMessage:context:
messageWithIdentifierRequiresWritingBlock:
messageWithIdentifierShouldBeProcessedAsynchronously:
moveNubbitGestureRecognizer
mutableCopy
nubbit
nubbitContexts
nubbitDidUpdatePosition:
nubbitWillBeginDragging:
numberOfAttemptsToInitializeActiveInterfaceOrientation
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
origin
originalAlpha
parentViewController
passiveContentViewControllers
passiveWindows
pausedConnections
performAsynchronousReadingBlock:
performAsynchronousWritingBlock:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
pid:
pinNubbitToEdge:
pointInside:withEvent:
pointSize
postNotificationName:object:
preferredContentSizeCategory
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
preferredFontForTextStyle:
principalClass
priority
processHandle
processInitializationMessage:
processMessage:withIdentifier:fromClientWithIdentifier:error:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
rangeOfString:
reachabilityHandlerIdentifier
reachabilityOffset
reachabilityOffsetForPayload:
registerAccessibilityUIServicePID:
registerEventHandler:
registerNubbit:delegate:
registerReachabilityHandler:withIdentifierCallback:
registerSpringBoardActionHandler:withIdentifierCallback:
registerWindowWithContextID:atLevel:
remoteProcess
remoteTarget
removeActionHandler:
removeAllBehaviors
removeClientWithIdentifier:
removeContentViewController:withUserInteractionEnabled:forService:
removeContentViewController:withUserInteractionEnabled:forService:context:completion:
removeFromParentViewController
removeFromSuperview
removeGestureRecognizer:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectIdenticalTo:
removeObjectsForKeys:
removeObserver:name:object:
removeReachabilityHandler:
removeWindowSceneForSceneClientIdentifier:external:
representationWithHIDEvent:hidStreamIdentifier:
requestSceneForSceneClientIdentifier:scenePreferredLevel:
requiredEntitlementForProcessingMessageWithIdentifier:
resizableImageWithCapInsets:
respondsToSelector:
resumingConnectionsQueue
retain
retainCount
rootViewController
safeAreaLayoutGuide
safeCategoryBaseClass
safeCategoryTargetClassName
safeValueForKey:
saveAddContentViewControllerBlock:forSceneClientIdentifier:
saveWindowScene:forSceneClientIdentifier:external:
sceneClients
sceneRequestedForSceneClientIdentifier:
self
sendAsynchronousMessage:withIdentifier:context:targetAccessQueue:completionRequiresWritingBlock:completion:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completionRequiresWritingBlock:completion:
sendBoardServiceMessage:callback:
sendReply:withError:andOriginalXPCMessage:usingConnection:customDataAddingBlock:
sendSynchronousMessage:withIdentifier:context:error:
sendSynchronousMessage:withIdentifier:error:
server
serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
serviceClass
serviceConnection
serviceDidConnect:clientWithIdentifier:
serviceIdentifier
serviceManager
serviceWasFullyInitialized
servicesAccessQueue
setAccessibilityIdentifier:
setActive:
setActiveContentViewControllers:
setActiveInterfaceOrientation:
setActiveWindows:
setAddContentViewControllerBlocks:
setAlertType:
setAlertView:
setAlignment:
setAllowsGroupOpacity:
setAllowsRotation:
setAlpha:
setAttributedText:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
setAutoresizingMask:
setBackgroundColor:
setBundle:
setClientConnections:
setClientIdentifier:
setClientMessengers:
setClipsToBounds:
setCollisionBehavior:
setCollisionDelegate:
setConnection:
setContext:
setCornerRadius:
setCreationTimeInterval:
setDefaultAlertStyleProvider:
setDelegate:
setDisableDashBoardSystemGesturesAssertion:
setDisableSystemGesturesAssertion:
setDisplayManager:
setDomain:
setDuration:
setDynamicAnimator:
setDynamicItemBehavior:
setEntitlementsCaches:
setEntitlementsCheckers:
setEntitlementsCheckersAccessQueue:
setEventHandlers:
setExternalScenes:
setFadeAnimationDuration:
setFadeTimer:
setFollowPanBehavior:
setFrame:
setFriction:
setGravityBehavior:
setGravityDirection:
setHidden:
setIconImage:
setIdentifier:
setInterface:
setInterfaceTarget:
setInvalidationHandler:
setIsHandlingFullScreenPresentation:
setLastUsedServiceIdentifier:
setLineBreakMode:
setMainScenes:
setMasksToBounds:
setMaximumNumberOfTouches:
setMessageSender:
setNubbit:
setNubbitContexts:
setNumberOfAttemptsToInitializeActiveInterfaceOrientation:
setNumberOfLines:
setObject:forKey:
setObject:forKeyedSubscript:
setOriginalAlpha:
setOverrideUserInterfaceStyle:
setParagraphSpacingBefore:
setPassiveContentViewControllers:
setPassiveWindows:
setPausedConnections:
setPriority:
setProcessHandle:
setReachabilityHandlerIdentifier:
setReachabilityOffset:
setResumingConnectionsQueue:
setRootViewController:
setSceneClients:
setService:
setServiceClass:
setServiceConnection:
setServiceContexts:
setServiceIdentifier:
setServiceManager:
setServiceQuality:
setServicesAccessQueue:
setShouldAllowServicesToProcessMessages:
setShouldRespondToDarkModeChanges:
setShowOrHideTimer:
setSnapToBoundaryBehavior:
setState:
setStyleProvider:
setSubtitleText:
setSystemServerActionHandlerIdentifier:
setText:
setTransactions:
setTranslatesAutoresizingMaskIntoConstraints:
setTranslatesReferenceBoundsIntoBoundary:
setType:
setUserInfo:
setUserInterfaceStyle:
setValue:forKey:
setView:
setVisibleAlertContexts:
setWindowHostingController:
sharedApplication
sharedDisplayManager
sharedEventManager
sharedHelper
sharedInstance
sharedServiceManager
shouldAllowServicesToProcessMessages
shouldPreventAutorotatingAllContentViewControllers
shouldRespondToDarkModeChanges
showAlertWithText:subtitleText:iconImage:type:forService:
showAlertWithText:subtitleText:iconImage:type:priority:duration:forService:
showAlertWithText:subtitleText:iconImage:type:priority:duration:userInfo:forService:
size
snapToBoundaryBehavior
sortUsingComparator:
state
stringByAppendingFormat:
stringByStandardizingPath
stringWithFormat:
styleProvider
styleProviderForAlertWithIdentifier:
subtitleText
subviews
superclass
superview
supportedInterfaceOrientations
systemApertureLayoutDidChange:
systemAppServerReady
systemFontOfSize:
systemServerActionHandlerIdentifier
terminateWithSuccess
text
timeIntervalSinceReferenceDate
title
topAnchor
transactions
transitionInWithContext:completion:
transitionOutWithContext:completion:
translationInView:
type
unregisterEventHandler:
unregisterNubbit:
unregisterNubbit:shouldUndoFade:
unregisterWindowWithContextID:
userInfo
userInitiated
userInterfaceStyle
validateClass:hasInstanceMethod:withFullSignature:
valueForKey:
valueWithNonretainedObject:
valueWithPointer:
view
visibleAlertContexts
weakObjectsHashTable
whiteColor
window
windowHostingController
windowLevel
windowScene
windowSceneForSceneClientIdentifier:external:
xpc_handler
zone
B40@0:8{CGPoint=dd}16@32
B16@0:8
@64@0:8Q16@24@32@40@48@56
v24@0:8@16
@16@0:8
v16@0:8
@"AXUIAlertContext"
@"NSDictionary"
#16@0:8
{UIEdgeInsets=dddd}16@0:8
d16@0:8
v24@0:8d16
Q16@0:8
v24@0:8Q16
@"NSString"
@"AXDispatchTimer"
@"AXUIAlert"
@"<AXUIService>"
@"UIImage"
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
i24@0:8Q16
{CGSize=dd}24@0:8Q16
B32@0:8q16Q24
{UIEdgeInsets=dddd}24@0:8Q16
@24@0:8Q16
d24@0:8Q16
@"UIFont"24@0:8Q16
@"UIColor"24@0:8Q16
@"UIImage"24@0:8Q16
@"NSBundle"
@"UIView"
@"<AXUINubbitDelegate>"
@"AXAssertion"
@"UIPanGestureRecognizer"
@"UIDynamicAnimator"
@"UIGravityBehavior"
@"UIAttachmentBehavior"
@"UISnapBehavior"
@"UICollisionBehavior"
@"UIDynamicItemBehavior"
v20@0:8B16
B24@0:8q16
q20@0:8B16
@24@0:8@16
@32@0:8@16@24
v48@0:8@16Q24@32@?40
v52@0:8@16Q24@32B40@?44
@40@0:8@16Q24^@32
@"AXMultiplexConnectionHandler"
v32@0:8^v16@?24
v32@0:8^v16@?<v@?B>24
@48@0:8@16Q24@32^@40
B24@0:8Q16
@"NSDictionary"48@0:8@"NSDictionary"16Q24@"NSString"32^@40
v48@0:8@"NSDictionary"16Q24@"NSString"32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"24@0:8Q16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
@"NSString"24@0:8Q16
@"NSSet"24@0:8Q16
d28@0:8@16B24
v32@0:8@16@24
d28@0:8@"UIViewController"16B24
v24@0:8@"UIWindowScene"16
v32@0:8@"UIWindowScene"16@"NSString"24
d24@0:8@16
d24@0:8@"NSString"16
@"<AXUIAlertStyleProvider>"24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"UIDynamicAnimator"16
v56@0:8@16@24@32{CGPoint=dd}40
v40@0:8@16@24@32
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<UIDynamicItem>"32
v56@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32{CGPoint=dd}40
v40@0:8@"UICollisionBehavior"16@"<UIDynamicItem>"24@"<NSCopying>"32
v24@0:8@"NSArray"16
@28@0:8B16@20
v36@0:8@16B24@28
v44@0:8@16B24@28@36
v40@0:8@16B24@28B36
v52@0:8@16B24@28^v36@?44
v60@0:8@16B24@28^v36q44@?52
v72@0:8@16B24@28^v36q44B52@56@?64
v80@0:8@16B24@28@36^v44q52B60@64@?72
@56@0:8@16@24@32Q40@48
@72@0:8@16@24@32Q40Q48d56@64
@80@0:8@16@24@32Q40Q48d56@64@72
v28@0:8@16B24
v24@0:8@?16
@40@0:8B16d20B28@32
@68@0:8B16d20B28@32q40B48@52@60
d40@0:8q16q24d32
v36@0:8@16@24B32
@28@0:8@16B24
v32@0:8@?16@24
d36@0:8@16@24B32
@32@0:8B16@20B28
v28@0:8B16@20
v56@0:8@16@24@32^v40@?48
v40@0:8@16@24@?32
@48@0:8@16{CGPoint=dd}24@40
B32@0:8{CGPoint=dd}16
q16@0:8
v24@0:8q16
@"SBSSystemApertureLayoutMonitor"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"AXUIAlertStyleProvider"
@"AXUIServiceManager"
@"NSMutableDictionary"
@"SBSAccessibilityWindowHostingController"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B28@0:8@16B24
v72@0:8@16@24@32q40d48d56@64
{CGPoint="x"d"y"d}
@"<AXUIAlertStyleProvider>"
Q24@0:8@16
@"<NSObject><NSCopying>"
@"NSMutableArray"
@"NSHashTable"
@24@0:8#16
B40@0:8Q16@24^@32
B32@0:8^{?=[8I]}16@24
v24@0:8#16
v40@0:8@16^v24@?32
v40@0:8@16@24^v32
^v40@0:8@16@24^Q32
v32@0:8@16^v24
v40@0:8@"AXUIMessageSender"16^v24@?<v@?@"NSObject<OS_xpc_object>">32
v40@0:8@"AXUIMessageSender"16^v24@?<v@?@"<AccessibilityBoardServices_ServerProtocol>">32
v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^v32
^v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^Q32
v32@0:8@"AXUIMessageSender"16^v24
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
Vv32@0:8@16@?24
Vv32@0:8@"NSObject<OS_xpc_object>"16@?<v@?@"NSObject<OS_xpc_object>"@"NSError">24
v60@0:8@16Q24@32@40B48@?52
B48@0:8#16Q24@32^@40
B56@0:8@16@24@32Q40^@48
@"BSProcessDeathWatcher"
@"BSServiceConnectionListener"
@"AXUIDisplayManager"
@"AXAccessQueue"
@"AXUIMessageSender"
@"<AXUIServiceManagerDelegate>"
UUUUUU
