@(#)PROGRAM:SilexVideo  PROJECT:Silex-1
?333333
ffffff
ffffff
Play
Double tap to begin video playback
NSExtension
NSExtensionPointIdentifier
com.apple.widget-extension
play
play.fill
v8@?0
duration
v24@?0@"SVKeyValueObserver"8@"NSDictionary"16
v16@?0@"AVPlayerItem"8
v16@?0@"<SVPlayerItemObserving>"8
v16@?0@"SVTimeBasedAction"8
timeControlStatus
outputVolume
v12@?0B8
naturalSize
@"<SVVideoMetadata>"16@?0@"NSURL"8
v20@?0@"SVAVPlayer"8i16
v32@?0@"SVAVPlayer"8d16d24
v24@?0@"SVAVPlayer"8@"NSArray"16
playbackBufferFull
playbackLikelyToKeepUp
muted
presentationSize
v16@?0Q8
-[SVPlayerLayer setPlayer:]
/Library/Caches/com.apple.xbs/Sources/FeldsparServices_Sim/Feldspar-2985/Modules/silex/SilexVideo/Playback/Layer/SVPlayerLayer.m
Tried to re-set an already created AVPlayer!
status
readyForDisplay
v16@?0@"<SVVideoDurationObserving>"8
SKIP
SKIP IN %lu
tracks
nominalFrameRate
v32@?0{?=qiIq}8
loadedTimeRanges
currentItem
videoBounds
v20@?0B8@"NSError"12
Debugger
ant.circle
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
v16@?0@"<SVVideoVolumeObserving>"8
LEARN MORE
SVVideoErrorDomain
*** Assertion failure (Identifier: catch-all) : %s %s:%d %{public}@
SVAdPrivacyButton
SVPlayer
SVAVPlayerItemFactory
NSObject
SVVideoPlayButton
SVVideoDurationObserver
SVVideoDurationObserving
SVTouchAbsorbingView
SVAVURLAssetFactory
SVKeyValueObserver
SVTimeline
SVBundleClass
SVImageLayer
SVMediaPlaybackController
SVVideoVolumeObserver
SVVideoPlaybackObserver
SVVideoVolumeObserving
SVButton
SVPlaybackCoordinator
SVVideoMetadata
SVPlayerLayer
SVMaterialButton
SVLooper
SVTimeBasedAction
SVVideoAdSkipButton
SVNonAnimatingDelegate
CALayerDelegate
SVAudioSession
SVAXElementOcclusion
SVAVPlayer
AVPlayerItemDelegate
SVPlayerItemObserver
SVPlayerItemObserving
SVAudioSessionConfiguration
SVVideoAdViewControllerProvider
SVVideoAdViewControllerProviding
SVVolumeProvider
SVVolumeProviding
SVVolumeReporting
SVAutomaticFullscreenVideoPlaybackBehaviorManager
SVVideoPlaybackQueue
SVAVPlayerFactory
SVTouchForwardingView
SVVideoAdProviding
SVVideoProviding
SVVideoEventTracker
SVVideoURLProviding
SVVideoAdEventTracker
SVVideoPlayerViewController
AVPlayerViewControllerDelegate_WebKitOnly
AVPlayerViewControllerDelegate
AVPlayerViewControllerDelegatePrivate
SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate
UIGestureRecognizerDelegate
SVLearnMoreButton
SVVideoError
localizedStringForKey:value:table:
metricsForTextStyle:
systemFontOfSize:weight:
scaledFontForFont:
font
capHeight
title
dictionaryWithObjects:forKeys:count:
sizeWithAttributes:
height
initWithFrame:
titleLabel
setAdjustsFontForContentSizeCategory:
setTitle:forState:
setFont:
setTextAlignment:
whiteColor
setTitleColor:forState:
colorWithWhite:alpha:
colorWithRed:green:blue:alpha:
setBackgroundColor:
_setContinuousCornerRadius:
setTouchInsets:
intrinsicContentSize
svax_shouldBeOccluded
text
size
isAccessibilityElement
accessibilityElements
accessibilityLabel
initWithPlayerItem:
sharedSession
addInterestForPlayer:withMode:
removeInterestForPlayer:
dealloc
initWithAudioMode:
audioMode
_audioMode
Ti,R,N,V_audioMode
init
copy
assetFactory
createURLAssetWithURL:
automaticallyLoadedAssetKeys
playerItemWithAsset:automaticallyLoadedAssetKeys:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
createPlayerItemWithURL:
initWithAutomaticallyLoadedAssetKeys:assetFactory:
.cxx_destruct
_automaticallyLoadedAssetKeys
_assetFactory
T@"NSArray",R,C,N,V_automaticallyLoadedAssetKeys
T@"<SVAVURLAssetFactory>",R,N,V_assetFactory
setTintColor:
defaultCenter
updateBackgroundColor
addObserver:selector:name:object:
displayAsPaused
backgroundColor
colorWithAlphaComponent:
layoutSubviews
layer
bounds
setCornerRadius:
imageView
setBounds:
setCenter:
mainBundle
infoDictionary
objectForKeyedSubscript:
isEqualToString:
bundleForClass:
imageNamed:inBundle:withConfiguration:
configurationWithPointSize:
configurationWithWeight:
configurationByApplyingConfiguration:
systemImageNamed:withConfiguration:
imageWithTintColor:
playImage
setImage:forState:
accessibilityHint
duration
updateDuration:
objectForKey:
CMTimeValue
initWithKeyPath:ofObject:withOptions:change:
setPlayerItemDurationObserver:
playerItemObserver
item
onChange:
setDuration:
changeBlock
Td,R,N
T@?,C,N,SonChange:
initWithPlayerItemObserver:
playerItemDurationObserver
_playerItemObserver
_playerItemDurationObserver
_duration
T@"<SVPlayerItemObserving>",R,N,V_playerItemObserver
T@"SVKeyValueObserver",&,N,V_playerItemDurationObserver
Td,N,V_duration
T@?,C,N,SonChange:,VchangeBlock
isTracking
options
initWithURL:options:
initWithOptions:
_options
T@"NSDictionary",R,C,N,V_options
addObserver:forKeyPath:options:context:
object
keyPath
removeObserver:forKeyPath:
change
observeValueForKeyPath:ofObject:change:context:
_keyPath
_object
_change
T@"NSString",R,C,N,V_keyPath
T@"NSObject",R,W,N,V_object
TQ,R,N,V_options
T@?,R,C,N,V_change
array
removeAllObjects
addObject:
removeObject:
countByEnumeratingWithState:objects:count:
_time
_actions
CGImage
setContents:
setImage:
image
identifier
setIdentifier:
_image
_identifier
T@"UIImage",&,N,V_image
T@"NSString",C,N,V_identifier
weakToStrongObjectsMapTable
pause
setCurrentlyPlaying:
currentlyPlaying
timeControlStatus
updateCurrentlyPlaying:
timeControlStatusObservers
setObject:forKey:
removeObjectForKey:
registerPlayer:
unregisterPlayer:
_timeControlStatusObservers
_currentlyPlaying
T@"NSMapTable",R,N,V_timeControlStatusObservers
T@"AVPlayer",W,N,V_currentlyPlaying
addPlaybackObserver:
outputVolume
muted
updateWithVolume:muted:
audioSession
volumeChanged:
volumeChangeBlock
muteStateChangeBlock
playbackCoordinatorStartedPlayback:
playbackCoordinatorResumedPlayback:
playbackCoordinatorPausedPlayback:
playbackCoordinatorFinishedPlayback:
playbackCoordinator:playbackFailedWithError:
playbackCoordinator:timeElapsed:duration:
playbackCoordinator:loadingProgressed:
playbackCoordinatorPlaybackBufferFullStateChanged:
playbackCoordinatorPlaybackLikelyToKeepUpStateChanged:
playbackCoordinatorStateChanged:
playbackCoordinatorMuteStateChanged:
volume
onVolumeChange:
onMuteStateChange:
TB,R,N
Tf,R,N
T@?,C,N,SonVolumeChange:
T@?,C,N,SonMuteStateChange:
initWithPlaybackCoordinator:audioSession:
playbackCoordinator
outputVolumeObserver
_muted
_volume
_volumeChangeBlock
_muteStateChangeBlock
_playbackCoordinator
_audioSession
_outputVolumeObserver
T@"SVPlaybackCoordinator",R,W,N,V_playbackCoordinator
T@"AVAudioSession",R,W,N,V_audioSession
T@"SVKeyValueObserver",R,N,V_outputVolumeObserver
TB,R,N,V_muted
Tf,R,N,V_volume
T@?,C,N,SonVolumeChange:,V_volumeChangeBlock
T@?,C,N,SonMuteStateChange:,V_muteStateChangeBlock
_privateButtonTapped
addTarget:action:forControlEvents:
pointInside:withEvent:
touchInsets
touchUpInsideBlock
onTouchUpInside:
_touchUpInsideBlock
_touchInsets
T{UIEdgeInsets=dddd},N,V_touchInsets
T@?,C,N,SonTouchUpInside:,V_touchUpInsideBlock
weakObjectsHashTable
playbackInitiatedWithButtonTapped:
loadVideoIfNeeded
player
play
observers
setPlayer:
timeElapsed:duration:
seekToStartWithCompletionBlock:
seekToTime:completionHandler:
frameRate
elapsedTime
totalTimePlayed
currentItem
loadedTimeRanges
sharedInstance
firstObject
CMTimeRangeValue
tracks
assetTrack
statusOfValueForKey:error:
naturalSize
state
cancelHandler
setState:
video
setupPlayerWithURL:
setCancelHandler:
videoErrorWithErrorCode:
playbackFailedWithError:
loadWithCompletionBlock:
playerFactory
createPlayerWithURL:
setMuted:
addPlayerItemPresentationSizeObserver
addMuteStateObserver
addPlaybackBuferObserver
addPlaybackLikelyToKeepUpObserver
playbackReadyToStart
playbackPosition
playbackStarted
playbackResumed
playbackPaused
playbackFinished
error
videoErrorWithUnderlyingError:
setPlaybackStatusBlock:
setPlaybackProgressBlock:
loadedTimeRangesChanged
setLoadingProgressBlock:
host
initiatedPlayback
setPlaybackRequested:
setInitiatedPlayback:
configureTimeline
time
playbackPausedAtTime:
playbackResumedAtTime:
setError:
timeline
loadingProgress
isPlaybackBufferFull
playbackBufferFullStateChanged
setPlaybackBufferFullObserver:
isPlaybackLikelyToKeepUp
playbackLikelyToKeepUpStateChanged
setPlaybackLikelyToKeepUpObserver:
isMuted
muteStateChanged
setMuteStateObserver:
presentationSize
setDimensions:
setPlayerItemPresentationSizeObserver:
supportImpressionTracking
playbackPassedImpressionThreshold
impressionThreshold
supportsQuartileTracking
playbackPassedQuartile:
setPausedAtTime:
pausedAtTime
stateChanged
framerate
timePlayed
playbackState
T{CGSize=dd},R,N
TQ,R,N
initWithVideo:playerFactory:
playWithButtonTapped:
removePlaybackObserver:
setHost:
seekToTime:withCompletionBlock:
load
removePlayerItemPresentationSizeObserver
playbackLikelyToKeepUp
playbackBufferFull
dimensions
playbackRequested
playerItemPresentationSizeObserver
readyForDisplayObserver
setReadyForDisplayObserver:
muteStateObserver
playbackLikelyToKeepUpObserver
playbackBufferFullObserver
_playbackLikelyToKeepUp
_playbackBufferFull
_playbackRequested
_initiatedPlayback
_video
_state
_host
_error
_observers
_player
_cancelHandler
_playerItemPresentationSizeObserver
_readyForDisplayObserver
_playerFactory
_muteStateObserver
_playbackLikelyToKeepUpObserver
_playbackBufferFullObserver
_timeline
_pausedAtTime
_dimensions
TB,N,V_playbackRequested
T@"NSHashTable",R,N,V_observers
T@"SVAVPlayer",&,N,V_player
T@?,C,N,V_cancelHandler
TB,N,V_initiatedPlayback
T{CGSize=dd},N,V_dimensions
TQ,N,V_state
T@"SVKeyValueObserver",&,N,V_playerItemPresentationSizeObserver
T@"SVKeyValueObserver",&,N,V_readyForDisplayObserver
T@"NSError",&,N,V_error
T@"<SVAVPlayerFactory>",R,N,V_playerFactory
T@"SVKeyValueObserver",&,N,V_muteStateObserver
T@"SVKeyValueObserver",&,N,V_playbackLikelyToKeepUpObserver
T@"SVKeyValueObserver",&,N,V_playbackBufferFullObserver
T@"SVTimeline",R,N,V_timeline
Td,N,V_pausedAtTime
T@"<SVVideoProviding>",R,N,V_video
T@"NSArray",R,N
TB,R,N,V_playbackLikelyToKeepUp
TB,R,N,V_playbackBufferFull
T@"NSObject<SVVideoPlaybackHost>",W,N,V_host
TB,N,V_muted
setDelegate:
addSublayer:
sceneDidEnterBackground
sceneWillEnterForeground
reduceMotionStatusDidChange
initialize
initWithLayer:
layoutSublayers
stillImageLayer
setFrame:
playerLayer
initWithFormat:
status
setHidden:
videoGravity
begin
setValue:forKey:
setVideoGravity:
commit
null
setCurrentPlaybackKind:
initWithPlayer:
setLooper:
isReadyForDisplay
playWithPlaybackKind:looping:
currentPlaybackKind
defaultActionForKey:
initWithCoder:
shouldPlayInBackground
setShouldPlayInBackground:
setPlayerLayer:
looper
statusObserver
setStatusObserver:
nonAnimatingDelegate
setNonAnimatingDelegate:
_shouldPlayInBackground
_stillImageLayer
_playerLayer
_looper
_statusObserver
_nonAnimatingDelegate
_currentPlaybackKind
T@"AVPlayerLayer",&,N,V_playerLayer
T@"SVLooper",&,N,V_looper
T@"SVKeyValueObserver",&,N,V_statusObserver
T@"SVNonAnimatingDelegate",&,N,V_nonAnimatingDelegate
TQ,N,V_currentPlaybackKind
T@"SVImageLayer",R,V_stillImageLayer
T@"AVPlayer",&,N
T@"NSString",C,N
TB,N,V_shouldPlayInBackground
setUserInteractionEnabled:
setAutomaticallyDrawsRoundedCorners:
addSubview:
backgroundView
_backgroundView
T@"AVBackgroundView",R,N,V_backgroundView
setLoopTimeRange:
durationObserver
_durationObserver
T@"AVPlayer",R,N,V_player
T@"SVVideoDurationObserver",R,N,V_durationObserver
_block
titleForDuration:
setTextColor:
setEnabled:
addSubview:applyingMaterialStyle:tintEffectStyle:
setClipsToBounds:
stringWithFormat:
uppercaseString
setSkipDuration:
skipDuration
_skipDuration
TQ,N,V_skipDuration
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
playbackController
semaphore
players
numberWithInt:
registerPlaybackControlForPlayer:withMode:
setupAudioSessionCategory
activateAudioSessionCategory
deactivateAudioSessionCategory
count
desiredAudioSessionConfiguration
category
mode
routeSharingPolicy
initWithCategory:mode:policy:
isEqualToConfiguration:
needsToSetupAudioSessionCategory
setCategory:mode:routeSharingPolicy:options:error:
isAudioSessionActive
shouldActivateAudioSession
setActive:error:
setAudioSessionActive:
canDeactivateAudioSession
objectEnumerator
allObjects
setWithArray:
countForObject:
_audioSessionActive
_semaphore
_players
_playbackController
audioSessionActive
TB,N,GisAudioSessionActive,V_audioSessionActive
T@"NSObject<OS_dispatch_semaphore>",R,N,V_semaphore
T@"NSMapTable",R,N,V_players
T@"SVMediaPlaybackController",R,N,V_playbackController
accessibilityContainer
shouldOccludeAccessibilityElement:
initWithURL:audioMode:
assetWithURL:
initWithPlayerItem:audioMode:
setAllowedAudioSpatializationFormats:
setActionAtItemEnd:
addObservers
loadFrameRate
stopTimeObserver
currentTime
setElapsedTime:
setPlaybackPosition:
cumulativeTimePlayed
asset
tracksWithMediaType:
nominalFrameRate
setFrameRate:
loadValuesAsynchronouslyForKeys:completionHandler:
updateTime:duration:
setCumulativeTimePlayed:
addPeriodicTimeObserverForInterval:queue:usingBlock:
setTimeObserver:
setElapsedTime:duration:
timeObserver
removeTimeObserver:
timeControlStatusChanged
setTimeControlStatusObserver:
statusChanged
durationChanged
setDurationObserver:
setLoadedTimeRangesObserver:
playedToEnd:
setPlaybackStatus:
playbackProgressBlock
startTimeObserver
playbackStatusBlock
playbackStatus
loadingProgressBlock
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
initWithURL:
timeControlStatusObserver
loadedTimeRangesObserver
_playbackPosition
_playbackStatus
_playbackStatusBlock
_playbackProgressBlock
_loadingProgressBlock
_elapsedTime
_frameRate
_timeObserver
_timeControlStatusObserver
_loadedTimeRangesObserver
_cumulativeTimePlayed
Ti,N,V_playbackStatus
Td,N,V_elapsedTime
Td,N,V_frameRate
T@,&,N,V_timeObserver
T{?=qiIq},N,V_cumulativeTimePlayed
T@"SVKeyValueObserver",&,N,V_timeControlStatusObserver
T@"SVKeyValueObserver",&,N,V_durationObserver
T@"SVKeyValueObserver",&,N,V_loadedTimeRangesObserver
Ti,N,V_playbackPosition
T@?,C,N,V_playbackStatusBlock
T@?,C,N,V_playbackProgressBlock
T@?,C,N,V_loadingProgressBlock
setItem:
T@"AVPlayerItem",R,W,N
observer
_changeBlock
_item
_observer
T@"SVKeyValueObserver",R,N,V_observer
T@"AVPlayerItem",W,N,V_item
T@?,C,N,SonChange:,V_changeBlock
setCategory:
setMode:
setRouteSharingPolicy:
_category
_mode
_routeSharingPolicy
T@"NSString",C,N,V_category
T@"NSString",C,N,V_mode
TQ,N,V_routeSharingPolicy
viewControllerProvider
viewControllerForModalPresentation
T@"UIViewController",R,N
initWithViewControllerProvider:
_viewControllerProvider
T@"<SVVideoAdViewControllerProviding>",R,W,N,V_viewControllerProvider
muteStateChanged:
setVolume:
TB,N
Tf,N
initWithMuteState:volume:
addVolumeObserver:
removeVolumeObserver:
conditionsChanged
behavior
videoBounds
fullscreenPlaybackRequiredForCurrentConditions
delegate
fullscreenBehaviorManagerRequiresFullscreenPlayback:
setVideoBounds:
setBehavior:
_behavior
_delegate
_videoBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
TQ,N,V_behavior
T@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>",W,N,V_delegate
queue
insertObject:atIndex:
indexOfObject:
appendItem:
advance
prefetchItemAfterCoordinatorIfPossible:
lastObject
containsObject:
prependItem:
insertItem:afterItem:
_queue
T@"NSMutableArray",R,N,V_queue
playerItemFactory
initWithAudioMode:playerItemFactory:
_playerItemFactory
T@"<SVAVPlayerItemFactory>",R,N,V_playerItemFactory
hitTest:withEvent:
type
touchedBlock
lastTouchTimestamp
timestamp
setLastTouchTimestamp:
onTouch:
_touchedBlock
_lastTouchTimestamp
Td,N,V_lastTouchTimestamp
T@?,C,N,SonTouch:,V_touchedBlock
initWithNibName:bundle:
setAllowsPictureInPicturePlayback:
setModalPresentationStyle:
CGRectValue
setTranslatesAutoresizingMaskIntoConstraints:
learnMoreButtonTapped:
adSkipButtonTapped:
initWithActivityIndicatorStyle:
setHidesWhenStopped:
tapped
initWithTarget:action:
setView:
coordinator
viewDidAppear:
playerViewController
setUpdatesNowPlayingInfoCenter:
viewDidDisappear:
viewDidLoad
addChildViewController:
view
didMoveToParentViewController:
setShowsPlaybackControls:
activityIndicatorView
tapGesture
addGestureRecognizer:
customControlsView
learnMoreButton
skipButton
setAccessibilityElementsHidden:
setNeedsUpdateConstraints
viewDidLayoutSubviews
superview
unobscuredCenterAreaLayoutGuide
animatedUnobscuredCenterAreaLayoutGuide
transportControlsAreaLayoutGuide
adPrivacyButton
leadingAnchor
constraintEqualToAnchor:
setActive:
bottomAnchor
constraintEqualToAnchor:constant:
trailingAnchor
centerXAnchor
centerYAnchor
updateViewConstraints
setupQueueIfNeeded
setPlayButtonTapped:
startPlaybackForCoordinatorIfAllowed:
isFullscreen
layoutIfNeeded
setFullscreen:
enterFullScreenAnimated:completionHandler:
exitFullScreenAnimated:completionHandler:
isPictureInPictureActive
isPlaying
presentingViewController
isPictureInPictureSupported
enablePictureInPictureBehaviors
currentDevice
userInterfaceIdiom
startPictureInPicture
stopPictureInPicture
initWithTitle:type:
systemImageNamed:
setAction:
arrayWithObjects:count:
setCustomControlItems:
parentViewController
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
enterFullscreenWithCompletionBlock:
fullscreenBehaviorManager
setAlpha:
addCoordinatedAnimations:completion:
resignFirstResponder
videoPlayerViewControllerWillExitFullscreen:
isCancelled
viewForKey:
removeGestureRecognizer:
videoPlayerViewControllerDidExitFullscreen:
animateAlongsideTransition:completion:
videoPlayerViewControllerWillEnterFullscreen:
videoPlayerViewControllerWillStartPictureInPicture:
videoPlayerViewControllerDidStartPictureInPicture:
startedPictureInPicture
videoPlayerViewControllerWillStopPictureInPicture:
videoPlayerViewControllerDidStopPictureInPicture:
stoppedPictureInPicture
videoPlayerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
enteredFullscreen
exitedFullscreen
videoAd
nextVideoStartedPlaying
metricsView
setVideoAd:
refreshControlsForPlaybackCoordinator:
videoPlayerViewController:startedPlaybackOfVideo:
videoPlayerViewController:pausedPlaybackOfVideo:
videoPlayerViewController:resumedPlaybackOfVideo:
tappedToToggleControlVisibility:
skipped
presentAction
skipThreshold
hasAction
privacyMarker
T@"UIView",R,N
T@"UIButton",R,N
updateSkipButtonWithThreshold:time:
playbackAllowedForPlaybackCoordinator:
playButtonTapped
flashPlaybackControlsWithDuration:
startAnimating
stopAnimating
setRequiresLinearPlayback:
setCanStartPictureInPictureAutomaticallyFromInline:
dataSource
videoAdForVideoPlayerViewController:
contentOverlayView
setAutoresizingMask:
setAdPrivacyButton:
videoForVideoPlayerViewController:
setQueue:
videoPlayerViewController:initiatedPlaybackOfVideo:
transitionToCoordinator:
finished
setVolumeObserver:
volumeReporter
volumeObserver
setCoordinator:
videoPlayerViewControllerFinishedVideoPlayback:
videoPlayerViewControllerShouldStartPlayback:
viewControllerForFullScreenPresentation
showsPlaybackControls
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
playerViewController:shouldExitFullScreenWithReason:
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
playerViewControllerBeginReducingResourcesForPictureInPicture:
playerViewControllerEndReducingResourcesForPictureInPicture:
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
initWithVolumeReporter:
loadView
exitFullscreenWithCompletionBlock:
startPictureInPictureIfPossible
addDebuggerAction:
embedVideoPlayerIfNeeded
removeVideoPlayerIfNeeded
setFullscreenBehavior:
playerViewController:metricsCollectionEventOccured:
setDataSource:
setEnablePictureInPictureBehaviors:
fullscreenBehavior
setPlayerViewController:
setLearnMoreButton:
setSkipButton:
setActivityIndicatorView:
videoBoundsObserver
setVideoBoundsObserver:
_enablePictureInPictureBehaviors
_fullscreen
_playButtonTapped
_showsPlaybackControls
_dataSource
_fullscreenBehavior
_playerViewController
_coordinator
_videoAd
_learnMoreButton
_skipButton
_adPrivacyButton
_activityIndicatorView
_videoBoundsObserver
_fullscreenBehaviorManager
_volumeReporter
_volumeObserver
_tapGesture
T@"SVVideoPlaybackQueue",&,N,V_queue
T@"SVPlaybackCoordinator",&,N,V_coordinator
T@"<SVVideoAdProviding>",&,N,V_videoAd
TB,N,V_playButtonTapped
T@"SVLearnMoreButton",&,N,V_learnMoreButton
T@"SVVideoAdSkipButton",&,N,V_skipButton
T@"SVAdPrivacyButton",&,N,V_adPrivacyButton
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
T@"SVKeyValueObserver",&,N,V_videoBoundsObserver
T@"SVAutomaticFullscreenVideoPlaybackBehaviorManager",R,N,V_fullscreenBehaviorManager
TQ,N,V_mode
fullscreen
TB,N,GisFullscreen,V_fullscreen
T@"<SVVolumeReporting>",R,N,V_volumeReporter
T@"SVVideoVolumeObserver",&,N,V_volumeObserver
T@"UIGestureRecognizer",R,N,V_tapGesture
TB,N,V_showsPlaybackControls
T@"<SVVideoPlayerViewControllerDelegate>",W,N,V_delegate
T@"<SVVideoPlayerViewControllerDataSource>",W,N,V_dataSource
TB,N,V_enablePictureInPictureBehaviors
playing
TB,R,N,GisPlaying
TQ,N,V_fullscreenBehavior
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
T@"AVPlayerViewController",&,N,V_playerViewController
setHighlighted:
traitCollection
preferredContentSizeCategory
invalidateIntrinsicContentSize
traitCollectionDidChange:
domain
errorCodeForUnderlyingErrorDomain:
errorWithDomain:code:userInfo:
@16@0:8
d16@0:8
{CGSize=dd}16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
@20@0:8i16
v16@0:8
i16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"AVPlayerItem"24@0:8@"NSURL"16
@32@0:8@16@24
@"NSArray"
@"<SVAVURLAssetFactory>"
@?16@0:8
v24@0:8@?16
@?<v@?@"<SVVideoDurationObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoDurationObserving>">16
v40@0:8{?=qiIq}16
v24@0:8d16
v24@0:8@16
@"<SVPlayerItemObserving>"
@"SVKeyValueObserver"
@"AVURLAsset"24@0:8@"NSURL"16
@"NSDictionary"
@48@0:8@16@24Q32@?40
v48@0:8@16@24@32^v40
@"NSString"
@"NSObject"
@"NSMutableArray"
@"UIImage"
@"NSMapTable"
@"AVPlayer"
v32@0:8@16@24
v40@0:8@16d24d32
v32@0:8@16d24
v24@0:8@"SVPlaybackCoordinator"16
v32@0:8@"SVPlaybackCoordinator"16@"NSError"24
v40@0:8@"SVPlaybackCoordinator"16d24d32
v32@0:8@"SVPlaybackCoordinator"16d24
f16@0:8
@?<v@?@"<SVVideoVolumeObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoVolumeObserving>">16
v20@0:8f16
v24@0:8f16B20
@"SVPlaybackCoordinator"
@"AVAudioSession"
B40@0:8{CGPoint=dd}16@32
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v20@0:8B16
v32@0:8d16@?24
v32@0:8d16d24
v24@0:8Q16
v32@0:8{CGSize=dd}16
@"<SVVideoProviding>"
@"NSObject<SVVideoPlaybackHost>"
@"NSError"
@"NSHashTable"
@"SVAVPlayer"
@"<SVAVPlayerFactory>"
@"SVTimeline"
{CGSize="width"d"height"d}
v28@0:8Q16B24
@"SVImageLayer"
@"AVPlayerLayer"
@"SVLooper"
@"SVNonAnimatingDelegate"
@"AVBackgroundView"
@"SVVideoDurationObserver"
@24@0:8Q16
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
v28@0:8@16i24
@"NSObject<OS_dispatch_semaphore>"
@"SVMediaPlaybackController"
B48@0:8@16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
B48@0:8@"AVPlayerItem"16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
@28@0:8@16i24
v64@0:8{?=qiIq}16{?=qiIq}40
v20@0:8i16
{?=qiIq}16@0:8
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVPlayerItem"16@0:8
@?<v@?@"<SVPlayerItemObserving>">16@0:8
v24@0:8@?<v@?@"<SVPlayerItemObserving>">16
@"AVPlayerItem"
@40@0:8@16@24Q32
@"UIViewController"16@0:8
@"<SVVideoAdViewControllerProviding>"
@24@0:8B16f20
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"SVAVPlayer"24@0:8@"NSURL"16
@28@0:8i16@20
@"<SVAVPlayerItemFactory>"
@40@0:8{CGPoint=dd}16@32
v24@0:8@"NSError"16
@?24@0:8@?16
@?<v@?>24@0:8@?<@"<SVVideoMetadata>"@?@"NSURL">16
@"UIView"16@0:8
@"UIButton"16@0:8
v32@0:8@16@?24
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
B32@0:8@16q24
B32@0:8@"AVPlayerViewController"16q24
v36@0:8@16B24@28
v48@0:8@16{CGSize=dd}24@40
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
@"UIView"32@0:8@"AVPlayerViewController"16@"UIView"24
v48@0:8@"AVPlayerViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
v24@0:8@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8@16q24
v32@0:8Q16d24
@"<SVVideoPlayerViewControllerDelegate>"
@"<SVVideoPlayerViewControllerDataSource>"
@"AVPlayerViewController"
@"SVVideoPlaybackQueue"
@"<SVVideoAdProviding>"
@"SVLearnMoreButton"
@"SVVideoAdSkipButton"
@"SVAdPrivacyButton"
@"UIActivityIndicatorView"
@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"
@"<SVVolumeReporting>"
@"SVVideoVolumeObserver"
@"UIGestureRecognizer"
@24@0:8q16
q24@0:8@16
@(#)PROGRAM:SilexVideo  PROJECT:Silex-1
?333333
?ffffff
ffffff
Play
Double tap to begin video playback
NSExtension
NSExtensionPointIdentifier
com.apple.widget-extension
play
play.fill
v8@?0
duration
v24@?0@"SVKeyValueObserver"8@"NSDictionary"16
v16@?0@"AVPlayerItem"8
v16@?0@"<SVPlayerItemObserving>"8
v16@?0@"SVTimeBasedAction"8
timeControlStatus
outputVolume
v12@?0B8
naturalSize
@"<SVVideoMetadata>"16@?0@"NSURL"8
v20@?0@"SVAVPlayer"8i16
v32@?0@"SVAVPlayer"8d16d24
v24@?0@"SVAVPlayer"8@"NSArray"16
playbackBufferFull
playbackLikelyToKeepUp
muted
presentationSize
v16@?0Q8
-[SVPlayerLayer setPlayer:]
/Library/Caches/com.apple.xbs/Sources/FeldsparServices_Sim/Feldspar-2985/Modules/silex/SilexVideo/Playback/Layer/SVPlayerLayer.m
Tried to re-set an already created AVPlayer!
status
readyForDisplay
v16@?0@"<SVVideoDurationObserving>"8
SKIP
SKIP IN %lu
tracks
nominalFrameRate
v32@?0{?=qiIq}8
loadedTimeRanges
currentItem
videoBounds
v20@?0B8@"NSError"12
Debugger
ant.circle
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
v16@?0@"<SVVideoVolumeObserving>"8
LEARN MORE
SVVideoErrorDomain
*** Assertion failure (Identifier: catch-all) : %s %s:%d %{public}@
SVAdPrivacyButton
SVPlayer
SVAVPlayerItemFactory
NSObject
SVVideoPlayButton
SVVideoDurationObserver
SVVideoDurationObserving
SVTouchAbsorbingView
SVAVURLAssetFactory
SVKeyValueObserver
SVTimeline
SVBundleClass
SVImageLayer
SVMediaPlaybackController
SVVideoVolumeObserver
SVVideoPlaybackObserver
SVVideoVolumeObserving
SVButton
SVPlaybackCoordinator
SVVideoMetadata
SVPlayerLayer
SVMaterialButton
SVLooper
SVTimeBasedAction
SVVideoAdSkipButton
SVNonAnimatingDelegate
CALayerDelegate
SVAudioSession
SVAXElementOcclusion
SVAVPlayer
AVPlayerItemDelegate
SVPlayerItemObserver
SVPlayerItemObserving
SVAudioSessionConfiguration
SVVideoAdViewControllerProvider
SVVideoAdViewControllerProviding
SVVolumeProvider
SVVolumeProviding
SVVolumeReporting
SVAutomaticFullscreenVideoPlaybackBehaviorManager
SVVideoPlaybackQueue
SVAVPlayerFactory
SVTouchForwardingView
SVVideoAdProviding
SVVideoProviding
SVVideoEventTracker
SVVideoURLProviding
SVVideoAdEventTracker
SVVideoPlayerViewController
AVPlayerViewControllerDelegate_WebKitOnly
AVPlayerViewControllerDelegate
AVPlayerViewControllerDelegatePrivate
SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate
UIGestureRecognizerDelegate
SVLearnMoreButton
SVVideoError
localizedStringForKey:value:table:
metricsForTextStyle:
systemFontOfSize:weight:
scaledFontForFont:
font
capHeight
title
dictionaryWithObjects:forKeys:count:
sizeWithAttributes:
height
initWithFrame:
titleLabel
setAdjustsFontForContentSizeCategory:
setTitle:forState:
setFont:
setTextAlignment:
whiteColor
setTitleColor:forState:
colorWithWhite:alpha:
colorWithRed:green:blue:alpha:
setBackgroundColor:
_setContinuousCornerRadius:
setTouchInsets:
intrinsicContentSize
svax_shouldBeOccluded
text
size
isAccessibilityElement
accessibilityElements
accessibilityLabel
initWithPlayerItem:
sharedSession
addInterestForPlayer:withMode:
removeInterestForPlayer:
dealloc
initWithAudioMode:
audioMode
_audioMode
Ti,R,N,V_audioMode
init
copy
assetFactory
createURLAssetWithURL:
automaticallyLoadedAssetKeys
playerItemWithAsset:automaticallyLoadedAssetKeys:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
createPlayerItemWithURL:
initWithAutomaticallyLoadedAssetKeys:assetFactory:
.cxx_destruct
_automaticallyLoadedAssetKeys
_assetFactory
T@"NSArray",R,C,N,V_automaticallyLoadedAssetKeys
T@"<SVAVURLAssetFactory>",R,N,V_assetFactory
setTintColor:
defaultCenter
updateBackgroundColor
addObserver:selector:name:object:
displayAsPaused
backgroundColor
colorWithAlphaComponent:
layoutSubviews
layer
bounds
setCornerRadius:
imageView
setBounds:
setCenter:
mainBundle
infoDictionary
objectForKeyedSubscript:
isEqualToString:
bundleForClass:
imageNamed:inBundle:withConfiguration:
configurationWithPointSize:
configurationWithWeight:
configurationByApplyingConfiguration:
systemImageNamed:withConfiguration:
imageWithTintColor:
playImage
setImage:forState:
accessibilityHint
duration
updateDuration:
objectForKey:
CMTimeValue
initWithKeyPath:ofObject:withOptions:change:
setPlayerItemDurationObserver:
playerItemObserver
item
onChange:
setDuration:
changeBlock
Td,R,N
T@?,C,N,SonChange:
initWithPlayerItemObserver:
playerItemDurationObserver
_playerItemObserver
_playerItemDurationObserver
_duration
T@"<SVPlayerItemObserving>",R,N,V_playerItemObserver
T@"SVKeyValueObserver",&,N,V_playerItemDurationObserver
Td,N,V_duration
T@?,C,N,SonChange:,VchangeBlock
isTracking
options
initWithURL:options:
initWithOptions:
_options
T@"NSDictionary",R,C,N,V_options
addObserver:forKeyPath:options:context:
object
keyPath
removeObserver:forKeyPath:
change
observeValueForKeyPath:ofObject:change:context:
_keyPath
_object
_change
T@"NSString",R,C,N,V_keyPath
T@"NSObject",R,W,N,V_object
TQ,R,N,V_options
T@?,R,C,N,V_change
array
removeAllObjects
addObject:
removeObject:
countByEnumeratingWithState:objects:count:
_time
_actions
CGImage
setContents:
setImage:
image
identifier
setIdentifier:
_image
_identifier
T@"UIImage",&,N,V_image
T@"NSString",C,N,V_identifier
weakToStrongObjectsMapTable
pause
setCurrentlyPlaying:
currentlyPlaying
timeControlStatus
updateCurrentlyPlaying:
timeControlStatusObservers
setObject:forKey:
removeObjectForKey:
registerPlayer:
unregisterPlayer:
_timeControlStatusObservers
_currentlyPlaying
T@"NSMapTable",R,N,V_timeControlStatusObservers
T@"AVPlayer",W,N,V_currentlyPlaying
addPlaybackObserver:
outputVolume
muted
updateWithVolume:muted:
audioSession
volumeChanged:
volumeChangeBlock
muteStateChangeBlock
playbackCoordinatorStartedPlayback:
playbackCoordinatorResumedPlayback:
playbackCoordinatorPausedPlayback:
playbackCoordinatorFinishedPlayback:
playbackCoordinator:playbackFailedWithError:
playbackCoordinator:timeElapsed:duration:
playbackCoordinator:loadingProgressed:
playbackCoordinatorPlaybackBufferFullStateChanged:
playbackCoordinatorPlaybackLikelyToKeepUpStateChanged:
playbackCoordinatorStateChanged:
playbackCoordinatorMuteStateChanged:
volume
onVolumeChange:
onMuteStateChange:
TB,R,N
Tf,R,N
T@?,C,N,SonVolumeChange:
T@?,C,N,SonMuteStateChange:
initWithPlaybackCoordinator:audioSession:
playbackCoordinator
outputVolumeObserver
_muted
_volume
_volumeChangeBlock
_muteStateChangeBlock
_playbackCoordinator
_audioSession
_outputVolumeObserver
T@"SVPlaybackCoordinator",R,W,N,V_playbackCoordinator
T@"AVAudioSession",R,W,N,V_audioSession
T@"SVKeyValueObserver",R,N,V_outputVolumeObserver
TB,R,N,V_muted
Tf,R,N,V_volume
T@?,C,N,SonVolumeChange:,V_volumeChangeBlock
T@?,C,N,SonMuteStateChange:,V_muteStateChangeBlock
_privateButtonTapped
addTarget:action:forControlEvents:
pointInside:withEvent:
touchInsets
touchUpInsideBlock
onTouchUpInside:
_touchUpInsideBlock
_touchInsets
T{UIEdgeInsets=dddd},N,V_touchInsets
T@?,C,N,SonTouchUpInside:,V_touchUpInsideBlock
weakObjectsHashTable
playbackInitiatedWithButtonTapped:
loadVideoIfNeeded
player
play
observers
setPlayer:
timeElapsed:duration:
seekToStartWithCompletionBlock:
seekToTime:completionHandler:
frameRate
elapsedTime
totalTimePlayed
currentItem
loadedTimeRanges
sharedInstance
firstObject
CMTimeRangeValue
tracks
assetTrack
statusOfValueForKey:error:
naturalSize
state
cancelHandler
setState:
video
setupPlayerWithURL:
setCancelHandler:
videoErrorWithErrorCode:
playbackFailedWithError:
loadWithCompletionBlock:
playerFactory
createPlayerWithURL:
setMuted:
addPlayerItemPresentationSizeObserver
addMuteStateObserver
addPlaybackBuferObserver
addPlaybackLikelyToKeepUpObserver
playbackReadyToStart
playbackPosition
playbackStarted
playbackResumed
playbackPaused
playbackFinished
error
videoErrorWithUnderlyingError:
setPlaybackStatusBlock:
setPlaybackProgressBlock:
loadedTimeRangesChanged
setLoadingProgressBlock:
host
initiatedPlayback
setPlaybackRequested:
setInitiatedPlayback:
configureTimeline
time
playbackPausedAtTime:
playbackResumedAtTime:
setError:
timeline
loadingProgress
isPlaybackBufferFull
playbackBufferFullStateChanged
setPlaybackBufferFullObserver:
isPlaybackLikelyToKeepUp
playbackLikelyToKeepUpStateChanged
setPlaybackLikelyToKeepUpObserver:
isMuted
muteStateChanged
setMuteStateObserver:
presentationSize
setDimensions:
setPlayerItemPresentationSizeObserver:
supportImpressionTracking
playbackPassedImpressionThreshold
impressionThreshold
supportsQuartileTracking
playbackPassedQuartile:
setPausedAtTime:
pausedAtTime
stateChanged
framerate
timePlayed
playbackState
T{CGSize=dd},R,N
TQ,R,N
initWithVideo:playerFactory:
playWithButtonTapped:
removePlaybackObserver:
setHost:
seekToTime:withCompletionBlock:
load
removePlayerItemPresentationSizeObserver
playbackLikelyToKeepUp
playbackBufferFull
dimensions
playbackRequested
playerItemPresentationSizeObserver
readyForDisplayObserver
setReadyForDisplayObserver:
muteStateObserver
playbackLikelyToKeepUpObserver
playbackBufferFullObserver
_playbackLikelyToKeepUp
_playbackBufferFull
_playbackRequested
_initiatedPlayback
_video
_state
_host
_error
_observers
_player
_cancelHandler
_playerItemPresentationSizeObserver
_readyForDisplayObserver
_playerFactory
_muteStateObserver
_playbackLikelyToKeepUpObserver
_playbackBufferFullObserver
_timeline
_pausedAtTime
_dimensions
TB,N,V_playbackRequested
T@"NSHashTable",R,N,V_observers
T@"SVAVPlayer",&,N,V_player
T@?,C,N,V_cancelHandler
TB,N,V_initiatedPlayback
T{CGSize=dd},N,V_dimensions
TQ,N,V_state
T@"SVKeyValueObserver",&,N,V_playerItemPresentationSizeObserver
T@"SVKeyValueObserver",&,N,V_readyForDisplayObserver
T@"NSError",&,N,V_error
T@"<SVAVPlayerFactory>",R,N,V_playerFactory
T@"SVKeyValueObserver",&,N,V_muteStateObserver
T@"SVKeyValueObserver",&,N,V_playbackLikelyToKeepUpObserver
T@"SVKeyValueObserver",&,N,V_playbackBufferFullObserver
T@"SVTimeline",R,N,V_timeline
Td,N,V_pausedAtTime
T@"<SVVideoProviding>",R,N,V_video
T@"NSArray",R,N
TB,R,N,V_playbackLikelyToKeepUp
TB,R,N,V_playbackBufferFull
T@"NSObject<SVVideoPlaybackHost>",W,N,V_host
TB,N,V_muted
setDelegate:
addSublayer:
sceneDidEnterBackground
sceneWillEnterForeground
reduceMotionStatusDidChange
initialize
initWithLayer:
layoutSublayers
stillImageLayer
setFrame:
playerLayer
initWithFormat:
status
setHidden:
videoGravity
begin
setValue:forKey:
setVideoGravity:
commit
null
setCurrentPlaybackKind:
initWithPlayer:
setLooper:
isReadyForDisplay
playWithPlaybackKind:looping:
currentPlaybackKind
defaultActionForKey:
initWithCoder:
shouldPlayInBackground
setShouldPlayInBackground:
setPlayerLayer:
looper
statusObserver
setStatusObserver:
nonAnimatingDelegate
setNonAnimatingDelegate:
_shouldPlayInBackground
_stillImageLayer
_playerLayer
_looper
_statusObserver
_nonAnimatingDelegate
_currentPlaybackKind
T@"AVPlayerLayer",&,N,V_playerLayer
T@"SVLooper",&,N,V_looper
T@"SVKeyValueObserver",&,N,V_statusObserver
T@"SVNonAnimatingDelegate",&,N,V_nonAnimatingDelegate
TQ,N,V_currentPlaybackKind
T@"SVImageLayer",R,V_stillImageLayer
T@"AVPlayer",&,N
T@"NSString",C,N
TB,N,V_shouldPlayInBackground
setUserInteractionEnabled:
setAutomaticallyDrawsRoundedCorners:
addSubview:
backgroundView
_backgroundView
T@"AVBackgroundView",R,N,V_backgroundView
setLoopTimeRange:
durationObserver
_durationObserver
T@"AVPlayer",R,N,V_player
T@"SVVideoDurationObserver",R,N,V_durationObserver
_block
titleForDuration:
setTextColor:
setEnabled:
addSubview:applyingMaterialStyle:tintEffectStyle:
setClipsToBounds:
stringWithFormat:
uppercaseString
setSkipDuration:
skipDuration
_skipDuration
TQ,N,V_skipDuration
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
playbackController
semaphore
players
numberWithInt:
registerPlaybackControlForPlayer:withMode:
setupAudioSessionCategory
activateAudioSessionCategory
deactivateAudioSessionCategory
count
desiredAudioSessionConfiguration
category
mode
routeSharingPolicy
initWithCategory:mode:policy:
isEqualToConfiguration:
needsToSetupAudioSessionCategory
setCategory:mode:routeSharingPolicy:options:error:
isAudioSessionActive
shouldActivateAudioSession
setActive:error:
setAudioSessionActive:
canDeactivateAudioSession
objectEnumerator
allObjects
setWithArray:
countForObject:
_audioSessionActive
_semaphore
_players
_playbackController
audioSessionActive
TB,N,GisAudioSessionActive,V_audioSessionActive
T@"NSObject<OS_dispatch_semaphore>",R,N,V_semaphore
T@"NSMapTable",R,N,V_players
T@"SVMediaPlaybackController",R,N,V_playbackController
accessibilityContainer
shouldOccludeAccessibilityElement:
initWithURL:audioMode:
assetWithURL:
initWithPlayerItem:audioMode:
setAllowedAudioSpatializationFormats:
setActionAtItemEnd:
addObservers
loadFrameRate
stopTimeObserver
currentTime
setElapsedTime:
setPlaybackPosition:
cumulativeTimePlayed
asset
tracksWithMediaType:
nominalFrameRate
setFrameRate:
loadValuesAsynchronouslyForKeys:completionHandler:
updateTime:duration:
setCumulativeTimePlayed:
addPeriodicTimeObserverForInterval:queue:usingBlock:
setTimeObserver:
setElapsedTime:duration:
timeObserver
removeTimeObserver:
timeControlStatusChanged
setTimeControlStatusObserver:
statusChanged
durationChanged
setDurationObserver:
setLoadedTimeRangesObserver:
playedToEnd:
setPlaybackStatus:
playbackProgressBlock
startTimeObserver
playbackStatusBlock
playbackStatus
loadingProgressBlock
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
initWithURL:
timeControlStatusObserver
loadedTimeRangesObserver
_playbackPosition
_playbackStatus
_playbackStatusBlock
_playbackProgressBlock
_loadingProgressBlock
_elapsedTime
_frameRate
_timeObserver
_timeControlStatusObserver
_loadedTimeRangesObserver
_cumulativeTimePlayed
Ti,N,V_playbackStatus
Td,N,V_elapsedTime
Td,N,V_frameRate
T@,&,N,V_timeObserver
T{?=qiIq},N,V_cumulativeTimePlayed
T@"SVKeyValueObserver",&,N,V_timeControlStatusObserver
T@"SVKeyValueObserver",&,N,V_durationObserver
T@"SVKeyValueObserver",&,N,V_loadedTimeRangesObserver
Ti,N,V_playbackPosition
T@?,C,N,V_playbackStatusBlock
T@?,C,N,V_playbackProgressBlock
T@?,C,N,V_loadingProgressBlock
setItem:
T@"AVPlayerItem",R,W,N
observer
_changeBlock
_item
_observer
T@"SVKeyValueObserver",R,N,V_observer
T@"AVPlayerItem",W,N,V_item
T@?,C,N,SonChange:,V_changeBlock
setCategory:
setMode:
setRouteSharingPolicy:
_category
_mode
_routeSharingPolicy
T@"NSString",C,N,V_category
T@"NSString",C,N,V_mode
TQ,N,V_routeSharingPolicy
viewControllerProvider
viewControllerForModalPresentation
T@"UIViewController",R,N
initWithViewControllerProvider:
_viewControllerProvider
T@"<SVVideoAdViewControllerProviding>",R,W,N,V_viewControllerProvider
muteStateChanged:
setVolume:
TB,N
Tf,N
initWithMuteState:volume:
addVolumeObserver:
removeVolumeObserver:
conditionsChanged
behavior
videoBounds
fullscreenPlaybackRequiredForCurrentConditions
delegate
fullscreenBehaviorManagerRequiresFullscreenPlayback:
setVideoBounds:
setBehavior:
_behavior
_delegate
_videoBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
TQ,N,V_behavior
T@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>",W,N,V_delegate
queue
insertObject:atIndex:
indexOfObject:
appendItem:
advance
prefetchItemAfterCoordinatorIfPossible:
lastObject
containsObject:
prependItem:
insertItem:afterItem:
_queue
T@"NSMutableArray",R,N,V_queue
playerItemFactory
initWithAudioMode:playerItemFactory:
_playerItemFactory
T@"<SVAVPlayerItemFactory>",R,N,V_playerItemFactory
hitTest:withEvent:
type
touchedBlock
lastTouchTimestamp
timestamp
setLastTouchTimestamp:
onTouch:
_touchedBlock
_lastTouchTimestamp
Td,N,V_lastTouchTimestamp
T@?,C,N,SonTouch:,V_touchedBlock
initWithNibName:bundle:
setAllowsPictureInPicturePlayback:
setModalPresentationStyle:
CGRectValue
setTranslatesAutoresizingMaskIntoConstraints:
learnMoreButtonTapped:
adSkipButtonTapped:
initWithActivityIndicatorStyle:
setHidesWhenStopped:
tapped
initWithTarget:action:
setView:
coordinator
viewDidAppear:
playerViewController
setUpdatesNowPlayingInfoCenter:
viewDidDisappear:
viewDidLoad
addChildViewController:
view
didMoveToParentViewController:
setShowsPlaybackControls:
activityIndicatorView
tapGesture
addGestureRecognizer:
customControlsView
learnMoreButton
skipButton
setAccessibilityElementsHidden:
setNeedsUpdateConstraints
viewDidLayoutSubviews
superview
unobscuredCenterAreaLayoutGuide
animatedUnobscuredCenterAreaLayoutGuide
transportControlsAreaLayoutGuide
adPrivacyButton
leadingAnchor
constraintEqualToAnchor:
setActive:
bottomAnchor
constraintEqualToAnchor:constant:
trailingAnchor
centerXAnchor
centerYAnchor
updateViewConstraints
setupQueueIfNeeded
setPlayButtonTapped:
startPlaybackForCoordinatorIfAllowed:
isFullscreen
layoutIfNeeded
setFullscreen:
enterFullScreenAnimated:completionHandler:
exitFullScreenAnimated:completionHandler:
isPictureInPictureActive
isPlaying
presentingViewController
isPictureInPictureSupported
enablePictureInPictureBehaviors
currentDevice
userInterfaceIdiom
startPictureInPicture
stopPictureInPicture
initWithTitle:type:
systemImageNamed:
setAction:
arrayWithObjects:count:
setCustomControlItems:
parentViewController
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
enterFullscreenWithCompletionBlock:
fullscreenBehaviorManager
setAlpha:
addCoordinatedAnimations:completion:
resignFirstResponder
videoPlayerViewControllerWillExitFullscreen:
isCancelled
viewForKey:
removeGestureRecognizer:
videoPlayerViewControllerDidExitFullscreen:
animateAlongsideTransition:completion:
videoPlayerViewControllerWillEnterFullscreen:
videoPlayerViewControllerWillStartPictureInPicture:
videoPlayerViewControllerDidStartPictureInPicture:
startedPictureInPicture
videoPlayerViewControllerWillStopPictureInPicture:
videoPlayerViewControllerDidStopPictureInPicture:
stoppedPictureInPicture
videoPlayerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
enteredFullscreen
exitedFullscreen
videoAd
nextVideoStartedPlaying
metricsView
setVideoAd:
refreshControlsForPlaybackCoordinator:
videoPlayerViewController:startedPlaybackOfVideo:
videoPlayerViewController:pausedPlaybackOfVideo:
videoPlayerViewController:resumedPlaybackOfVideo:
tappedToToggleControlVisibility:
skipped
presentAction
skipThreshold
hasAction
privacyMarker
T@"UIView",R,N
T@"UIButton",R,N
updateSkipButtonWithThreshold:time:
playbackAllowedForPlaybackCoordinator:
playButtonTapped
flashPlaybackControlsWithDuration:
startAnimating
stopAnimating
setRequiresLinearPlayback:
setCanStartPictureInPictureAutomaticallyFromInline:
dataSource
videoAdForVideoPlayerViewController:
contentOverlayView
setAutoresizingMask:
setAdPrivacyButton:
videoForVideoPlayerViewController:
setQueue:
videoPlayerViewController:initiatedPlaybackOfVideo:
transitionToCoordinator:
finished
setVolumeObserver:
volumeReporter
volumeObserver
setCoordinator:
videoPlayerViewControllerFinishedVideoPlayback:
videoPlayerViewControllerShouldStartPlayback:
viewControllerForFullScreenPresentation
showsPlaybackControls
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
playerViewController:shouldExitFullScreenWithReason:
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
playerViewControllerBeginReducingResourcesForPictureInPicture:
playerViewControllerEndReducingResourcesForPictureInPicture:
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
initWithVolumeReporter:
loadView
exitFullscreenWithCompletionBlock:
startPictureInPictureIfPossible
addDebuggerAction:
embedVideoPlayerIfNeeded
removeVideoPlayerIfNeeded
setFullscreenBehavior:
playerViewController:metricsCollectionEventOccured:
setDataSource:
setEnablePictureInPictureBehaviors:
fullscreenBehavior
setPlayerViewController:
setLearnMoreButton:
setSkipButton:
setActivityIndicatorView:
videoBoundsObserver
setVideoBoundsObserver:
_enablePictureInPictureBehaviors
_fullscreen
_playButtonTapped
_showsPlaybackControls
_dataSource
_fullscreenBehavior
_playerViewController
_coordinator
_videoAd
_learnMoreButton
_skipButton
_adPrivacyButton
_activityIndicatorView
_videoBoundsObserver
_fullscreenBehaviorManager
_volumeReporter
_volumeObserver
_tapGesture
T@"SVVideoPlaybackQueue",&,N,V_queue
T@"SVPlaybackCoordinator",&,N,V_coordinator
T@"<SVVideoAdProviding>",&,N,V_videoAd
TB,N,V_playButtonTapped
T@"SVLearnMoreButton",&,N,V_learnMoreButton
T@"SVVideoAdSkipButton",&,N,V_skipButton
T@"SVAdPrivacyButton",&,N,V_adPrivacyButton
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
T@"SVKeyValueObserver",&,N,V_videoBoundsObserver
T@"SVAutomaticFullscreenVideoPlaybackBehaviorManager",R,N,V_fullscreenBehaviorManager
TQ,N,V_mode
fullscreen
TB,N,GisFullscreen,V_fullscreen
T@"<SVVolumeReporting>",R,N,V_volumeReporter
T@"SVVideoVolumeObserver",&,N,V_volumeObserver
T@"UIGestureRecognizer",R,N,V_tapGesture
TB,N,V_showsPlaybackControls
T@"<SVVideoPlayerViewControllerDelegate>",W,N,V_delegate
T@"<SVVideoPlayerViewControllerDataSource>",W,N,V_dataSource
TB,N,V_enablePictureInPictureBehaviors
playing
TB,R,N,GisPlaying
TQ,N,V_fullscreenBehavior
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
T@"AVPlayerViewController",&,N,V_playerViewController
setHighlighted:
traitCollection
preferredContentSizeCategory
invalidateIntrinsicContentSize
traitCollectionDidChange:
domain
errorCodeForUnderlyingErrorDomain:
errorWithDomain:code:userInfo:
@16@0:8
d16@0:8
{CGSize=dd}16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
@20@0:8i16
v16@0:8
i16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"AVPlayerItem"24@0:8@"NSURL"16
@32@0:8@16@24
@"NSArray"
@"<SVAVURLAssetFactory>"
@?16@0:8
v24@0:8@?16
@?<v@?@"<SVVideoDurationObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoDurationObserving>">16
v40@0:8{?=qiIq}16
v24@0:8d16
v24@0:8@16
@"<SVPlayerItemObserving>"
@"SVKeyValueObserver"
@"AVURLAsset"24@0:8@"NSURL"16
@"NSDictionary"
@48@0:8@16@24Q32@?40
v48@0:8@16@24@32^v40
@"NSString"
@"NSObject"
@"NSMutableArray"
@"UIImage"
@"NSMapTable"
@"AVPlayer"
v32@0:8@16@24
v40@0:8@16d24d32
v32@0:8@16d24
v24@0:8@"SVPlaybackCoordinator"16
v32@0:8@"SVPlaybackCoordinator"16@"NSError"24
v40@0:8@"SVPlaybackCoordinator"16d24d32
v32@0:8@"SVPlaybackCoordinator"16d24
f16@0:8
@?<v@?@"<SVVideoVolumeObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoVolumeObserving>">16
v20@0:8f16
v24@0:8f16B20
@"SVPlaybackCoordinator"
@"AVAudioSession"
B40@0:8{CGPoint=dd}16@32
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v20@0:8B16
v32@0:8d16@?24
v32@0:8d16d24
v24@0:8Q16
v32@0:8{CGSize=dd}16
@"<SVVideoProviding>"
@"NSObject<SVVideoPlaybackHost>"
@"NSError"
@"NSHashTable"
@"SVAVPlayer"
@"<SVAVPlayerFactory>"
@"SVTimeline"
{CGSize="width"d"height"d}
v28@0:8Q16B24
@"SVImageLayer"
@"AVPlayerLayer"
@"SVLooper"
@"SVNonAnimatingDelegate"
@"AVBackgroundView"
@"SVVideoDurationObserver"
@24@0:8Q16
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
v28@0:8@16i24
@"NSObject<OS_dispatch_semaphore>"
@"SVMediaPlaybackController"
B48@0:8@16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
B48@0:8@"AVPlayerItem"16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
@28@0:8@16i24
v64@0:8{?=qiIq}16{?=qiIq}40
v20@0:8i16
{?=qiIq}16@0:8
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVPlayerItem"16@0:8
@?<v@?@"<SVPlayerItemObserving>">16@0:8
v24@0:8@?<v@?@"<SVPlayerItemObserving>">16
@"AVPlayerItem"
@40@0:8@16@24Q32
@"UIViewController"16@0:8
@"<SVVideoAdViewControllerProviding>"
@24@0:8B16f20
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"SVAVPlayer"24@0:8@"NSURL"16
@28@0:8i16@20
@"<SVAVPlayerItemFactory>"
@40@0:8{CGPoint=dd}16@32
v24@0:8@"NSError"16
@?24@0:8@?16
@?<v@?>24@0:8@?<@"<SVVideoMetadata>"@?@"NSURL">16
@"UIView"16@0:8
@"UIButton"16@0:8
v32@0:8@16@?24
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
B32@0:8@16q24
B32@0:8@"AVPlayerViewController"16q24
v36@0:8@16B24@28
v48@0:8@16{CGSize=dd}24@40
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
@"UIView"32@0:8@"AVPlayerViewController"16@"UIView"24
v48@0:8@"AVPlayerViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
v24@0:8@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8@16q24
v32@0:8Q16d24
@"<SVVideoPlayerViewControllerDelegate>"
@"<SVVideoPlayerViewControllerDataSource>"
@"AVPlayerViewController"
@"SVVideoPlaybackQueue"
@"<SVVideoAdProviding>"
@"SVLearnMoreButton"
@"SVVideoAdSkipButton"
@"SVAdPrivacyButton"
@"UIActivityIndicatorView"
@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"
@"<SVVolumeReporting>"
@"SVVideoVolumeObserver"
@"UIGestureRecognizer"
@24@0:8q16
q24@0:8@16
