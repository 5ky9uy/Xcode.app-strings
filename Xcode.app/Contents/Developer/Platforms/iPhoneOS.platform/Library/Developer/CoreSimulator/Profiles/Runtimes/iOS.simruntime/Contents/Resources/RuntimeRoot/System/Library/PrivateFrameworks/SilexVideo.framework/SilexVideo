@(#)PROGRAM:SilexVideo  PROJECT:Silex-1
?ffffff
$@}}}}}}
?333333
@ffffff
v8@?0
Play
Double tap to begin video playback
NSExtension
NSExtensionPointIdentifier
com.apple.widget-extension
play
play.fill
duration
v24@?0@"SVKeyValueObserver"8@"NSDictionary"16
v16@?0@"AVPlayerItem"8
v16@?0@"<SVPlayerItemObserving>"8
v16@?0@"SVTimeBasedAction"8
timeControlStatus
outputVolume
v12@?0B8
naturalSize
@"<SVVideoMetadata>"16@?0@"NSURL"8
v16@?0@"NSTimer"8
v20@?0@"SVAVPlayer"8i16
v32@?0@"SVAVPlayer"8d16d24
v24@?0@"SVAVPlayer"8@"NSArray"16
playbackBufferFull
playbackLikelyToKeepUp
muted
presentationSize
v16@?0Q8
-[SVPlayerLayer setPlayer:]
/Library/Caches/com.apple.xbs/Sources/FeldsparServices_Sim/Modules/silex/SilexVideo/Playback/Layer/SVPlayerLayer.m
Tried to re-set an already created AVPlayer!
status
readyForDisplay
v16@?0@"<SVVideoDurationObserving>"8
Skip
Skip in %lu
forward.end.fill
tracks
nominalFrameRate
v32@?0{?=qiIq}8
loadedTimeRanges
currentItem
videoBounds
v20@?0B8@"NSError"12
Debugger
ant.circle
AVFullScreenViewController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
v16@?0@"<SVVideoVolumeObserving>"8
Learn More
chevron.right
SVVideoErrorDomain
*** Assertion failure (Identifier: catch-all) : %s %s:%d %{public}@
SVAdPrivacyButton
SVAdditions
SVAVPlayerItemFactory
NSObject
SVVideoPlayButton
SVVideoDurationObserver
SVVideoDurationObserving
SVTouchAbsorbingView
SVAVURLAssetFactory
SVKeyValueObserver
SVTimeline
SVBundleClass
SVImageLayer
SVMediaPlaybackController
SVVideoVolumeObserver
SVVideoPlaybackObserver
SVVideoVolumeObserving
SVButton
SVVideoAdProviding
SVVideoProviding
SVVideoEventTracker
SVVideoURLProviding
SVVideoAdEventTracker
SVPlaybackCoordinator
SVVideoMetadata
SVPlayerLayer
SVAdGradientView
SVMaterialButton
SVLooper
SVTimeBasedAction
SVVideoAdSkipButton
SVNonAnimatingDelegate
CALayerDelegate
SVAudioSession
SVAXElementOcclusion
SVAVPlayer
AVPlayerItemDelegate
SVPlayerItemObserver
SVPlayerItemObserving
SVAudioSessionConfiguration
SVVideoAdViewControllerProvider
SVVideoAdViewControllerProviding
SVAutomaticFullscreenVideoPlaybackBehaviorManager
SVVideoPlaybackQueue
SVAVPlayerFactory
SVTouchForwardingView
SVVideoPlayerViewController
AVPlayerViewControllerDelegate_WebKitOnly
AVPlayerViewControllerDelegate
AVPlayerViewControllerDelegatePrivate
SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate
UIGestureRecognizerDelegate
SVLearnMoreButton
SVVideoError
CGColor
CGRectValue
T@"NSArray",R,N
CMTimeValue
T@"SVKeyValueObserver",&,N,V_playerItemPresentationSizeObserver
T@"<SVAVPlayerFactory>",R,N,V_playerFactory
T@?,C,N,V_playbackProgressBlock
T@"<SVAVURLAssetFactory>",R,N,V_assetFactory
TB,R,N,V_playbackLikelyToKeepUp
T@"<SVPlayerItemObserving>",R,N,V_playerItemObserver
Td,N,V_duration
T@"<SVVideoAdViewControllerProviding>",R,W,N,V_viewControllerProvider
_adGradientView
T@"<SVVideoPlayerViewControllerDelegate>",W,N,V_delegate
_change
T@"AVAudioSession",R,N,V_audioSession
_object
T@"AVBackgroundView",R,N,V_backgroundView
_playbackStatus
T@"AVPlayer",R,N,V_player
_preferredForwardBufferDuration
T@"AVPlayerItem",R,W,N
_volume
T@"AVPlayerLayer",&,N,V_playerLayer
adPrivacyButton
T@"NSArray",R,C,N,V_automaticallyLoadedAssetKeys
attributedStringWithAttachment:
T@"NSError",&,N,V_error
bundleForClass:
T@"NSMapTable",R,N,V_timeControlStatusObservers
countForObject:
T@"NSObject",R,W,N,V_object
displayAsPaused
T@"NSObject<SVVideoPlaybackHost>",W,N,V_host
enablePictureInPictureBehaviors
T@"NSString",C,N,V_category
initWithFormat:
T@"NSString",C,N,V_mode
initWithString:
T@"NSString",R,C,N,V_keyPath
isMuted
T@"NSURL",&,N,V_videoURL
isValid
T@"SVAVPlayer",&,N,V_player
layoutSublayers
T@"SVAdPrivacyButton",&,N,V_adPrivacyButton
loading
T@"SVImageLayer",R,V_stillImageLayer
onVolumeChange:
T@"SVKeyValueObserver",&,N,V_loadedTimeRangesObserver
playbackResumed
T@"SVKeyValueObserver",&,N,V_playbackBufferFullObserver
players
T@"SVKeyValueObserver",&,N,V_playerItemDurationObserver
registerPlayer:
T@"SVKeyValueObserver",&,N,V_statusObserver
seekToStartWithCompletionBlock:
T@"SVKeyValueObserver",&,N,V_videoBoundsObserver
setAccessibilityElementsHidden:
T@"SVKeyValueObserver",R,N,V_outputVolumeObserver
setCoordinator:
T@"SVLooper",&,N,V_looper
setHighlighted:
T@"SVNonAnimatingDelegate",&,N,V_nonAnimatingDelegate
setTouchInsets:
T@"SVPlaybackCoordinator",&,N,V_primaryContentCoordinator
setVideoBounds:
T@"SVTimeline",R,N,V_timeline
startPictureInPictureIfPossible
T@"SVVideoDurationObserver",R,N,V_durationObserver
systemTealColor
T@"SVVideoVolumeObserver",&,N,V_volumeObserver
traitCollection
T@"UIButton",R,N
videoAd
T@"UIImage",&,N,V_image
.cxx_destruct
CGImage
CMTimeRangeValue
T@"NSHashTable",R,N,V_observers
T#,R
T@?,C,N,SonChange:,VchangeBlock
T@"<SVAVPlayerItemFactory>",R,N,V_playerItemFactory
TB,N,GisFullscreen,V_fullscreen
T@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>",W,N,V_delegate
TQ,N,V_behavior
T@"<SVVideoAdProviding>",&,N,V_videoAd
Tf,R,N,V_volume
T@"<SVVideoPlayerViewControllerDataSource>",W,N,V_dataSource
_backgroundView
T@"<SVVideoProviding>",R,N,V_video
_looper
T@"AVAudioSession",R,W,N,V_audioSession
_playbackLikelyToKeepUpObserver
T@"AVPlayer",&,N
_player
T@"AVPlayer",W,N,V_currentlyPlaying
_statusObserver
T@"AVPlayerItem",W,N,V_item
_volumeObserver
T@"AVPlayerViewController",&,N,V_playerViewController
advance
T@"NSDictionary",R,C,N,V_options
backgroundColor
T@"NSMapTable",R,N,V_players
containsObject:
T@"NSMutableArray",R,N,V_queue
dealloc
T@"NSObject<OS_dispatch_semaphore>",R,N,V_semaphore
durationChanged
T@"NSString",C,N
initWithActivityIndicatorStyle:
T@"NSString",C,N,V_identifier
initWithPlayer:
T@"NSString",R,C
initWithViewControllerProvider:
T@"NSTimer",&,N,V_readyToPlayTimer
isProxy
T@"NSURL",R,N
keyPath
T@"SVAdGradientView",&,N,V_adGradientView
learnMoreButton
T@"SVAutomaticFullscreenVideoPlaybackBehaviorManager",R,N,V_fullscreenBehaviorManager
loadingProgress
T@"SVKeyValueObserver",&,N,V_durationObserver
options
T@"SVKeyValueObserver",&,N,V_muteStateObserver
playbackStarted
T@"SVKeyValueObserver",&,N,V_playbackLikelyToKeepUpObserver
playing
T@"SVKeyValueObserver",&,N,V_readyForDisplayObserver
release
T@"SVKeyValueObserver",&,N,V_timeControlStatusObserver
seekToTime:withCompletionBlock:
T@"SVKeyValueObserver",R,N,V_observer
setContentMode:
T@"SVLearnMoreButton",&,N,V_learnMoreButton
setElapsedTime:
T@"SVMediaPlaybackController",R,N,V_playbackController
setPlayerLayer:
T@"SVPlaybackCoordinator",&,N,V_coordinator
setUpdatesNowPlayingInfoCenter:
T@"SVPlaybackCoordinator",R,W,N,V_playbackCoordinator
skipped
T@"SVVideoAdSkipButton",&,N,V_skipButton
stillImageLayer
T@"SVVideoPlaybackQueue",&,N,V_queue
totalTimePlayed
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
updateDuration:
T@"UIGestureRecognizer",R,N,V_tapGesture
willMoveToParentViewController:
T@"UIView",R,N
T@"UIViewController",R,N
T@,&,N,V_timeObserver
T@?,C,N,SonChange:
T@?,C,N,SonChange:,V_changeBlock
T@?,C,N,SonMuteStateChange:
T@?,C,N,SonMuteStateChange:,V_muteStateChangeBlock
T@?,C,N,SonTouch:,V_touchedBlock
T@?,C,N,SonTouchUpInside:,V_touchUpInsideBlock
T@?,C,N,SonVolumeChange:
T@?,C,N,SonVolumeChange:,V_volumeChangeBlock
T@?,C,N,V_cancelHandler
T@?,C,N,V_loadingProgressBlock
T@?,C,N,V_playbackStatusBlock
T@?,R,C,N,V_change
TB,N,GisAudioSessionActive,V_audioSessionActive
TB,N,V_enablePictureInPictureBehaviors
TB,N,V_initiatedPlayback
TB,N,V_muted
TB,N,V_playButtonTapped
TB,N,V_playbackRequested
TB,N,V_showsPlaybackControls
TB,R,N
TB,R,N,GisFullscreenInProgress
TB,R,N,GisLoading
TB,R,N,GisPictureInPictureActive
TB,R,N,GisPlaying
TB,R,N,V_muted
TB,R,N,V_playbackBufferFull
TQ,N,V_currentPlaybackKind
TQ,N,V_fullscreenBehavior
TQ,N,V_mode
TQ,N,V_routeSharingPolicy
TQ,N,V_skipDuration
TQ,N,V_state
TQ,R
TQ,R,N
TQ,R,N,V_options
Td,N,V_elapsedTime
Td,N,V_frameRate
Td,N,V_lastTouchTimestamp
Td,N,V_pausedAtTime
Td,R,N
Td,R,N,V_preferredForwardBufferDuration
Tf,R,N
Ti,N,V_playbackPosition
Ti,N,V_playbackStatus
Ti,R,N,V_audioMode
T{?=qiIq},N,V_cumulativeTimePlayed
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
T{CGSize=dd},N,V_dimensions
T{CGSize=dd},R,N
T{UIEdgeInsets=dddd},N,V_touchInsets
_actions
_activityIndicatorView
_adPrivacyButton
_assetFactory
_audioMode
_audioSession
_audioSessionActive
_automaticallyLoadedAssetKeys
_behavior
_block
_cancelHandler
_category
_changeBlock
_coordinator
_cumulativeTimePlayed
_currentPlaybackKind
_currentlyPlaying
_dataSource
_delegate
_dimensions
_duration
_durationObserver
_elapsedTime
_enablePictureInPictureBehaviors
_error
_frameRate
_fullscreen
_fullscreenBehavior
_fullscreenBehaviorManager
_host
_identifier
_image
_initiatedPlayback
_item
_keyPath
_lastTouchTimestamp
_learnMoreButton
_loadedTimeRangesObserver
_loadingProgressBlock
_mode
_muteStateChangeBlock
_muteStateObserver
_muted
_nonAnimatingDelegate
_observer
_observers
_options
_outputVolumeObserver
_pausedAtTime
_playButtonTapped
_playbackBufferFull
_playbackBufferFullObserver
_playbackController
_playbackCoordinator
_playbackLikelyToKeepUp
_playbackPosition
_playbackProgressBlock
_playbackRequested
_playbackStatusBlock
_playerFactory
_playerItemDurationObserver
_playerItemFactory
_playerItemObserver
_playerItemPresentationSizeObserver
_playerLayer
_playerViewController
_players
_primaryContentCoordinator
_privateButtonTapped
_queue
_readyForDisplayObserver
_readyToPlayTimer
_routeSharingPolicy
_semaphore
_setContinuousCornerRadius:
_showsPlaybackControls
_skipButton
_skipDuration
_state
_stillImageLayer
_tapGesture
_time
_timeControlStatusObserver
_timeControlStatusObservers
_timeObserver
_timeline
_touchInsets
_touchUpInsideBlock
_touchedBlock
_video
_videoAd
_videoBounds
_videoBoundsObserver
_videoURL
_viewControllerProvider
_volumeChangeBlock
accessibilityContainer
accessibilityElements
accessibilityHint
accessibilityLabel
actionForLayer:forKey:
activateAudioSessionCategory
activityIndicatorView
adGradientView
adSkipButtonTapped:
addAttribute:value:range:
addChildViewController:
addCoordinatedAnimations:completion:
addDebuggerAction:
addGestureRecognizer:
addInterestForPlayer:withMode:
addMuteStateObserver
addObject:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addObservers
addPeriodicTimeObserverForInterval:queue:usingBlock:
addPlaybackBufferObserver
addPlaybackLikelyToKeepUpObserver
addPlaybackObserver:
addPlayerItemPresentationSizeObserver
addSublayer:
addSubview:
addTarget:action:forControlEvents:
allObjects
allowsPictureInPicturePlayback
animateAlongsideTransition:completion:
animatedUnobscuredCenterAreaLayoutGuide
appendAttributedString:
appendItem:
array
arrayWithObjects:
arrayWithObjects:count:
asset
assetFactory
assetTrack
assetWithURL:
audioMode
audioSession
audioSessionActive
automaticallyLoadedAssetKeys
autorelease
backgroundView
begin
behavior
blackColor
bottomAnchor
bounds
canDeactivateAudioSession
cancelHandler
capHeight
category
centerXAnchor
centerYAnchor
change
changeBlock
class
colorWithAlphaComponent:
colorWithRed:green:blue:alpha:
colorWithWhite:alpha:
commit
conditionsChanged
configurationWithPointSize:
configurationWithPointSize:weight:
configureTimeline
conformsToProtocol:
constraintEqualToAnchor:
constraintEqualToAnchor:constant:
contentOverlayView
coordinator
copy
count
countByEnumeratingWithState:objects:count:
createPlayerItemWithURL:
createPlayerWithURL:
createURLAssetWithURL:
cumulativeTimePlayed
currentDevice
currentItem
currentPlaybackKind
currentTime
currentlyPlaying
customControlsView
dataSource
deactivateAudioSessionCategory
debugDescription
defaultActionForKey:
defaultCenter
delegate
description
desiredAudioSessionConfiguration
dictionaryWithObjects:forKeys:count:
didMoveToParentViewController:
dimensions
displayLayer:
domain
drawLayer:inContext:
duration
durationObserver
elapsedTime
embedVideoPlayerIfNeeded
enterFullScreenAnimated:completionHandler:
enterFullscreenWithCompletionBlock:
enteredFullscreen
error
errorCodeForUnderlyingErrorDomain:
errorWithDomain:code:userInfo:
exitFullScreenAnimated:completionHandler:
exitFullscreenWithCompletionBlock:
exitedFullscreen
finished
finishedLoadingVideoURL:
finishedLoadingVideoWithURL:
firstObject
font
frameRate
framerate
fullscreen
fullscreenBehavior
fullscreenBehaviorManager
fullscreenBehaviorManagerRequiresFullscreenPlayback:
fullscreenInProgress
fullscreenPlaybackRequiredForCurrentConditions
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveEvent:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizerShouldBegin:
hasAction
hash
height
hitTest:withEvent:
host
identifier
image
imageNamed:inBundle:withConfiguration:
imageView
imageWithTintColor:
impressionThreshold
indexOfObject:
infoDictionary
init
initAuxiliarySession
initWithAudioMode:playerItemFactory:
initWithAudioSession:
initWithAutomaticallyLoadedAssetKeys:assetFactory:preferredForwardBufferDuration:
initWithCategory:mode:policy:
initWithCoder:
initWithFrame:
initWithKeyPath:ofObject:withOptions:change:
initWithLayer:
initWithNibName:bundle:
initWithOptions:
initWithPlaybackCoordinator:audioSession:
initWithPlayerItem:
initWithPlayerItem:audioMode:
initWithPlayerItemObserver:
initWithTarget:action:
initWithTitle:type:
initWithURL:
initWithURL:audioMode:
initWithURL:options:
initWithVideo:playerFactory:
initialize
initiatedPlayback
insertItem:afterItem:
insertObject:atIndex:
intrinsicContentSize
invalidate
invalidateIntrinsicContentSize
isAccessibilityElement
isAudioSessionActive
isCancelled
isEqual:
isEqualToConfiguration:
isEqualToString:
isFullscreen
isFullscreenInProgress
isKindOfClass:
isLoading
isMemberOfClass:
isPictureInPictureActive
isPictureInPictureSupported
isPlaybackBufferFull
isPlaybackLikelyToKeepUp
isPlaying
isReadyForDisplay
isTracking
item
lastObject
lastTouchTimestamp
layer
layerClass
layerWillDraw:
layoutIfNeeded
layoutSublayersOfLayer:
layoutSubviews
leadingAnchor
learnMoreButtonTapped:
length
load
loadFrameRate
loadValuesAsynchronouslyForKeys:completionHandler:
loadVideoIfNeeded
loadView
loadWithCompletionBlock:
loadedTimeRanges
loadedTimeRangesChanged
loadedTimeRangesObserver
loadingProgressBlock
localizedStringForKey:value:table:
looper
mainBundle
metricsForTextStyle:
metricsView
mode
muteStateChangeBlock
muteStateChanged
muteStateChanged:
muteStateObserver
muted
naturalSize
needsToSetupAudioSessionCategory
nextVideoStartedPlaying
nominalFrameRate
nonAnimatingDelegate
null
numberWithFloat:
numberWithInt:
object
objectEnumerator
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
observer
observers
onChange:
onMuteStateChange:
onTouch:
onTouchUpInside:
outputVolume
outputVolumeObserver
parentViewController
pause
pausedAtTime
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pictureInPictureActive
play
playButtonTapped
playImage
playWithButtonTapped:
playWithPlaybackKind:looping:
playbackAllowedForPlaybackCoordinator:
playbackBufferFull
playbackBufferFullObserver
playbackBufferFullStateChanged
playbackController
playbackCoordinator
playbackCoordinator:loadingProgressed:
playbackCoordinator:playbackFailedWithError:
playbackCoordinator:timeElapsed:duration:
playbackCoordinatorFinishedLoadingVideoURL:
playbackCoordinatorFinishedPlayback:
playbackCoordinatorMuteStateChanged:
playbackCoordinatorPausedPlayback:
playbackCoordinatorPlaybackBufferFullStateChanged:
playbackCoordinatorPlaybackLikelyToKeepUpStateChanged:
playbackCoordinatorResumedPlayback:
playbackCoordinatorStartedLoadingVideo:
playbackCoordinatorStartedPlayback:
playbackCoordinatorStateChanged:
playbackFailedWithError:
playbackFinished
playbackInitiatedWithButtonTapped:
playbackLikelyToKeepUp
playbackLikelyToKeepUpObserver
playbackLikelyToKeepUpStateChanged
playbackPassedImpressionThreshold
playbackPassedQuartile:
playbackPaused
playbackPausedAtTime:
playbackPosition
playbackProgressBlock
playbackReadyToStart
playbackRequested
playbackResumedAtTime:
playbackState
playbackStatus
playbackStatusBlock
playedToEnd:
player
playerFactory
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
playerItemDurationObserver
playerItemFactory
playerItemObserver
playerItemPresentationSizeObserver
playerItemWithAsset:automaticallyLoadedAssetKeys:
playerLayer
playerViewController
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewController:didPresentInterstitialTimeRange:
playerViewController:displayNameForMediaSelectionOption:
playerViewController:failedToStartPictureInPictureWithError:
playerViewController:metricsCollectionEventOccured:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
playerViewController:shouldExitFullScreenWithReason:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:willPresentInterstitialTimeRange:
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
playerViewControllerBeginReducingResourcesForPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerEndReducingResourcesForPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
playerViewControllerWillPerformAnalysisCalloutAction:
playerViewControllerWillStartPictureInPicture:
playerViewControllerWillStopPictureInPicture:
pointInside:withEvent:
preferredContentSizeCategory
preferredForwardBufferDuration
prefetchItemAfterCoordinatorIfPossible:
prependItem:
prerollReadyToPlayTimeout
presentAction
presentationSize
presentedViewController
primaryContentCoordinator
privacyMarker
queue
readyForDisplayObserver
readyToPlayTimer
refreshControlsForPlaybackCoordinator:
registerPlaybackControlForPlayer:withMode:
removeAllObjects
removeFromParentViewController
removeFromSuperview
removeGestureRecognizer:
removeInterestForPlayer:
removeObject:
removeObjectForKey:
removeObserver:forKeyPath:
removePlaybackObserver:
removePlayerItemPresentationSizeObserver
removeTimeObserver:
removeVideoPlayerIfNeeded
resignFirstResponder
respondsToSelector:
retain
retainCount
routeSharingPolicy
scaledFontForFont:
scheduledTimerWithTimeInterval:repeats:block:
seekToTime:completionHandler:
self
semaphore
setAction:
setActionAtItemEnd:
setActive:
setActive:error:
setActivityIndicatorView:
setAdGradientView:
setAdPrivacyButton:
setAdjustsFontForContentSizeCategory:
setAlignment:
setAllowedAudioSpatializationFormats:
setAllowsPictureInPicturePlayback:
setAlpha:
setAttributedTitle:forState:
setAudioSession:
setAudioSessionActive:
setAutomaticallyDrawsRoundedCorners:
setAutoresizingMask:
setBackgroundColor:
setBehavior:
setBounds:
setCanStartPictureInPictureAutomaticallyFromInline:
setCancelHandler:
setCategory:
setCategory:mode:routeSharingPolicy:options:error:
setCenter:
setColors:
setContents:
setCornerRadius:
setCumulativeTimePlayed:
setCurrentPlaybackKind:
setCurrentlyPlaying:
setCustomControlItems:
setDataSource:
setDelegate:
setDimensions:
setDuration:
setDurationObserver:
setElapsedTime:duration:
setEnablePictureInPictureBehaviors:
setEnabled:
setEndPoint:
setError:
setFont:
setFrame:
setFrameRate:
setFullscreen:
setFullscreenBehavior:
setHidden:
setHidden:withShowDelay:
setHidesWhenStopped:
setHost:
setIdentifier:
setImage:
setImage:forState:
setInitiatedPlayback:
setItem:
setLastTouchTimestamp:
setLearnMoreButton:
setLoadedTimeRangesObserver:
setLoadingProgressBlock:
setLocations:
setLoopTimeRange:
setLooper:
setModalPresentationStyle:
setMode:
setMuteStateObserver:
setMuted:
setNeedsUpdateConstraints
setNonAnimatingDelegate:
setObject:forKey:
setPausedAtTime:
setPlayButtonTapped:
setPlaybackBufferFullObserver:
setPlaybackLikelyToKeepUpObserver:
setPlaybackPosition:
setPlaybackProgressBlock:
setPlaybackRequested:
setPlaybackStatus:
setPlaybackStatusBlock:
setPlayer:
setPlayerItemDurationObserver:
setPlayerItemPresentationSizeObserver:
setPlayerViewController:
setPreferredForwardBufferDuration:
setPrimaryContentCoordinator:
setQueue:
setReadyForDisplayObserver:
setReadyToPlayTimer:
setRequiresLinearPlayback:
setRouteSharingPolicy:
setShowsPlaybackControls:
setSkipButton:
setSkipDuration:
setStartPoint:
setState:
setStatusObserver:
setTextAlignment:
setTimeControlStatusObserver:
setTimeObserver:
setTintColor:
setTitle:forState:
setTitleColor:forState:
setTranslatesAutoresizingMaskIntoConstraints:
setUserInteractionEnabled:
setValue:forKey:
setVideoAd:
setVideoBoundsObserver:
setVideoGravity:
setVideoURL:
setView:
setVolumeObserver:
setWithArray:
setupAudioSessionCategory
setupPlayerWithURL:
setupQueueIfNeeded
sharedInstance
sharedSession
sharedSessionForMode:
sharedSilentSession
shouldActivateAudioSession
shouldOccludeAccessibilityElement:
showsPlaybackControls
size
sizeWithAttributes:
skipButton
skipDuration
skipThreshold
startAnimating
startPictureInPicture
startPlaybackForCoordinatorIfAllowed:
startTimeObserver
startedLoadingVideo
startedPictureInPicture
state
stateChanged
status
statusChanged
statusObserver
statusOfValueForKey:error:
stopAnimating
stopPictureInPicture
stopTimeObserver
stoppedPictureInPicture
stringWithFormat:
superclass
superview
supportImpressionTracking
supportsQuartileTracking
svax_shouldBeOccluded
systemFontOfSize:weight:
systemImageNamed:
systemImageNamed:withConfiguration:
tapGesture
tapped
tappedToToggleControlVisibility:
text
time
timeControlStatus
timeControlStatusChanged
timeControlStatusObserver
timeControlStatusObservers
timeElapsed:duration:
timeObserver
timePlayed
timeline
timestamp
title
titleForDuration:
titleLabel
topAnchor
touchInsets
touchUpInsideBlock
touchedBlock
tracks
tracksWithMediaType:
trailingAnchor
traitCollectionDidChange:
transitionToCoordinator:
transportControlsAreaLayoutGuide
type
unregisterPlayer:
updateAdsButtonsVisibility
updateBackgroundColor
updateCurrentlyPlaying:
updateSkipButtonWithThreshold:time:
updateTime:duration:
updateViewConstraints
updateWithVolume:muted:
userInterfaceIdiom
video
videoAdForVideoPlayerViewController:
videoBounds
videoBoundsObserver
videoErrorWithErrorCode:
videoErrorWithUnderlyingError:
videoForVideoPlayerViewController:
videoGravity
videoPlayerViewController:initiatedPlaybackOfVideo:
videoPlayerViewController:pausedPlaybackOfVideo:
videoPlayerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
videoPlayerViewController:resumedPlaybackOfVideo:
videoPlayerViewController:startedPlaybackOfVideo:
videoPlayerViewControllerDidExitFullscreen:
videoPlayerViewControllerDidStartPictureInPicture:
videoPlayerViewControllerDidStopPictureInPicture:
videoPlayerViewControllerFinishedVideoPlayback:
videoPlayerViewControllerShouldStartPlayback:
videoPlayerViewControllerWillEnterFullscreen:
videoPlayerViewControllerWillExitFullscreen:
videoPlayerViewControllerWillStartPictureInPicture:
videoPlayerViewControllerWillStopPictureInPicture:
videoURL
view
viewControllerForFullScreenPresentation
viewControllerForModalPresentation
viewControllerProvider
viewDidLayoutSubviews
viewDidLoad
viewForKey:
volume
volumeChangeBlock
volumeChanged:
volumeObserver
weakObjectsHashTable
weakToStrongObjectsMapTable
whiteColor
willUnload
zone
@16@0:8
d16@0:8
{CGSize=dd}16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
v28@0:8B16d20
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"AVPlayerItem"24@0:8@"NSURL"16
@40@0:8@16@24d32
v16@0:8
@"NSArray"
@"<SVAVURLAssetFactory>"
@?16@0:8
v24@0:8@?16
@?<v@?@"<SVVideoDurationObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoDurationObserving>">16
v40@0:8{?=qiIq}16
v24@0:8d16
v24@0:8@16
@"<SVPlayerItemObserving>"
@"SVKeyValueObserver"
@"AVURLAsset"24@0:8@"NSURL"16
@"NSDictionary"
@48@0:8@16@24Q32@?40
v48@0:8@16@24@32^v40
@"NSString"
@"NSObject"
@"NSMutableArray"
@"UIImage"
@"NSMapTable"
@"AVPlayer"
v32@0:8@16@24
v40@0:8@16d24d32
v32@0:8@16d24
v24@0:8@"SVPlaybackCoordinator"16
v32@0:8@"SVPlaybackCoordinator"16@"NSError"24
v40@0:8@"SVPlaybackCoordinator"16d24d32
v32@0:8@"SVPlaybackCoordinator"16d24
f16@0:8
@?<v@?@"<SVVideoVolumeObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoVolumeObserving>">16
@32@0:8@16@24
v20@0:8f16
v24@0:8f16B20
@"SVPlaybackCoordinator"
@"AVAudioSession"
B40@0:8{CGPoint=dd}16@32
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v20@0:8B16
v32@0:8d16d24
v24@0:8Q16
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
@?24@0:8@?16
@?<v@?>24@0:8@?<@"<SVVideoMetadata>"@?@"NSURL">16
@"UIView"16@0:8
@"UIButton"16@0:8
@"NSURL"16@0:8
v32@0:8d16@?24
v32@0:8{CGSize=dd}16
@"<SVVideoProviding>"
@"NSObject<SVVideoPlaybackHost>"
@"NSError"
@"NSHashTable"
@"SVAVPlayer"
@"<SVAVPlayerFactory>"
@"SVTimeline"
@"NSURL"
@"NSTimer"
{CGSize="width"d"height"d}
v28@0:8Q16B24
@"SVImageLayer"
@"AVPlayerLayer"
@"SVLooper"
@"SVNonAnimatingDelegate"
@"AVBackgroundView"
@"SVVideoDurationObserver"
@24@0:8Q16
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@20@0:8i16
v28@0:8@16i24
@"NSObject<OS_dispatch_semaphore>"
@"SVMediaPlaybackController"
B48@0:8@16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
B48@0:8@"AVPlayerItem"16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
@28@0:8@16i24
v64@0:8{?=qiIq}16{?=qiIq}40
v20@0:8i16
i16@0:8
{?=qiIq}16@0:8
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVPlayerItem"16@0:8
@?<v@?@"<SVPlayerItemObserving>">16@0:8
v24@0:8@?<v@?@"<SVPlayerItemObserving>">16
@"AVPlayerItem"
@40@0:8@16@24Q32
@"UIViewController"16@0:8
@"<SVVideoAdViewControllerProviding>"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"SVAVPlayer"24@0:8@"NSURL"16
@28@0:8i16@20
@"<SVAVPlayerItemFactory>"
@40@0:8{CGPoint=dd}16@32
v32@0:8@16@?24
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"AVInterstitialTimeRange"24
B32@0:8@16q24
B32@0:8@"AVPlayerViewController"16q24
v36@0:8@16B24@28
v48@0:8@16{CGSize=dd}24@40
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
@"UIView"32@0:8@"AVPlayerViewController"16@"UIView"24
v48@0:8@"AVPlayerViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
@"NSString"32@0:8@"AVPlayerViewController"16@"AVMediaSelectionOption"24
v24@0:8@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8@16q24
v32@0:8Q16d24
@"<SVVideoPlayerViewControllerDelegate>"
@"<SVVideoPlayerViewControllerDataSource>"
@"AVPlayerViewController"
@"SVVideoPlaybackQueue"
@"<SVVideoAdProviding>"
@"SVLearnMoreButton"
@"SVVideoAdSkipButton"
@"SVAdPrivacyButton"
@"SVAdGradientView"
@"UIActivityIndicatorView"
@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"
@"SVVideoVolumeObserver"
@"UIGestureRecognizer"
@24@0:8q16
q24@0:8@16
@(#)PROGRAM:SilexVideo  PROJECT:Silex-1
?ffffff
?}}}}}}
?333333
ffffff
v8@?0
Play
Double tap to begin video playback
NSExtension
NSExtensionPointIdentifier
com.apple.widget-extension
play
play.fill
duration
v24@?0@"SVKeyValueObserver"8@"NSDictionary"16
v16@?0@"AVPlayerItem"8
v16@?0@"<SVPlayerItemObserving>"8
v16@?0@"SVTimeBasedAction"8
timeControlStatus
outputVolume
v12@?0B8
naturalSize
@"<SVVideoMetadata>"16@?0@"NSURL"8
v16@?0@"NSTimer"8
v20@?0@"SVAVPlayer"8i16
v32@?0@"SVAVPlayer"8d16d24
v24@?0@"SVAVPlayer"8@"NSArray"16
playbackBufferFull
playbackLikelyToKeepUp
muted
presentationSize
v16@?0Q8
-[SVPlayerLayer setPlayer:]
/Library/Caches/com.apple.xbs/Sources/FeldsparServices_Sim/Modules/silex/SilexVideo/Playback/Layer/SVPlayerLayer.m
Tried to re-set an already created AVPlayer!
status
readyForDisplay
v16@?0@"<SVVideoDurationObserving>"8
Skip
Skip in %lu
forward.end.fill
tracks
nominalFrameRate
v32@?0{?=qiIq}8
loadedTimeRanges
currentItem
videoBounds
v20@?0B8@"NSError"12
Debugger
ant.circle
AVFullScreenViewController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
v16@?0@"<SVVideoVolumeObserving>"8
Learn More
chevron.right
SVVideoErrorDomain
*** Assertion failure (Identifier: catch-all) : %s %s:%d %{public}@
SVAdPrivacyButton
SVAdditions
SVAVPlayerItemFactory
NSObject
SVVideoPlayButton
SVVideoDurationObserver
SVVideoDurationObserving
SVTouchAbsorbingView
SVAVURLAssetFactory
SVKeyValueObserver
SVTimeline
SVBundleClass
SVImageLayer
SVMediaPlaybackController
SVVideoVolumeObserver
SVVideoPlaybackObserver
SVVideoVolumeObserving
SVButton
SVVideoAdProviding
SVVideoProviding
SVVideoEventTracker
SVVideoURLProviding
SVVideoAdEventTracker
SVPlaybackCoordinator
SVVideoMetadata
SVPlayerLayer
SVAdGradientView
SVMaterialButton
SVLooper
SVTimeBasedAction
SVVideoAdSkipButton
SVNonAnimatingDelegate
CALayerDelegate
SVAudioSession
SVAXElementOcclusion
SVAVPlayer
AVPlayerItemDelegate
SVPlayerItemObserver
SVPlayerItemObserving
SVAudioSessionConfiguration
SVVideoAdViewControllerProvider
SVVideoAdViewControllerProviding
SVAutomaticFullscreenVideoPlaybackBehaviorManager
SVVideoPlaybackQueue
SVAVPlayerFactory
SVTouchForwardingView
SVVideoPlayerViewController
AVPlayerViewControllerDelegate_WebKitOnly
AVPlayerViewControllerDelegate
AVPlayerViewControllerDelegatePrivate
SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate
UIGestureRecognizerDelegate
SVLearnMoreButton
SVVideoError
CGColor
CGRectValue
T@"NSArray",R,N
CMTimeValue
T@"SVKeyValueObserver",&,N,V_playerItemPresentationSizeObserver
T@"<SVAVPlayerFactory>",R,N,V_playerFactory
T@?,C,N,V_playbackProgressBlock
T@"<SVAVURLAssetFactory>",R,N,V_assetFactory
TB,R,N,V_playbackLikelyToKeepUp
T@"<SVPlayerItemObserving>",R,N,V_playerItemObserver
Td,N,V_duration
T@"<SVVideoAdViewControllerProviding>",R,W,N,V_viewControllerProvider
_adGradientView
T@"<SVVideoPlayerViewControllerDelegate>",W,N,V_delegate
_change
T@"AVAudioSession",R,N,V_audioSession
_object
T@"AVBackgroundView",R,N,V_backgroundView
_playbackStatus
T@"AVPlayer",R,N,V_player
_preferredForwardBufferDuration
T@"AVPlayerItem",R,W,N
_volume
T@"AVPlayerLayer",&,N,V_playerLayer
adPrivacyButton
T@"NSArray",R,C,N,V_automaticallyLoadedAssetKeys
attributedStringWithAttachment:
T@"NSError",&,N,V_error
bundleForClass:
T@"NSMapTable",R,N,V_timeControlStatusObservers
countForObject:
T@"NSObject",R,W,N,V_object
displayAsPaused
T@"NSObject<SVVideoPlaybackHost>",W,N,V_host
enablePictureInPictureBehaviors
T@"NSString",C,N,V_category
initWithFormat:
T@"NSString",C,N,V_mode
initWithString:
T@"NSString",R,C,N,V_keyPath
isMuted
T@"NSURL",&,N,V_videoURL
isValid
T@"SVAVPlayer",&,N,V_player
layoutSublayers
T@"SVAdPrivacyButton",&,N,V_adPrivacyButton
loading
T@"SVImageLayer",R,V_stillImageLayer
onVolumeChange:
T@"SVKeyValueObserver",&,N,V_loadedTimeRangesObserver
playbackResumed
T@"SVKeyValueObserver",&,N,V_playbackBufferFullObserver
players
T@"SVKeyValueObserver",&,N,V_playerItemDurationObserver
registerPlayer:
T@"SVKeyValueObserver",&,N,V_statusObserver
seekToStartWithCompletionBlock:
T@"SVKeyValueObserver",&,N,V_videoBoundsObserver
setAccessibilityElementsHidden:
T@"SVKeyValueObserver",R,N,V_outputVolumeObserver
setCoordinator:
T@"SVLooper",&,N,V_looper
setHighlighted:
T@"SVNonAnimatingDelegate",&,N,V_nonAnimatingDelegate
setTouchInsets:
T@"SVPlaybackCoordinator",&,N,V_primaryContentCoordinator
setVideoBounds:
T@"SVTimeline",R,N,V_timeline
startPictureInPictureIfPossible
T@"SVVideoDurationObserver",R,N,V_durationObserver
systemTealColor
T@"SVVideoVolumeObserver",&,N,V_volumeObserver
traitCollection
T@"UIButton",R,N
videoAd
T@"UIImage",&,N,V_image
.cxx_destruct
CGImage
CMTimeRangeValue
T@"NSHashTable",R,N,V_observers
T#,R
T@?,C,N,SonChange:,VchangeBlock
T@"<SVAVPlayerItemFactory>",R,N,V_playerItemFactory
TB,N,GisFullscreen,V_fullscreen
T@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>",W,N,V_delegate
TQ,N,V_behavior
T@"<SVVideoAdProviding>",&,N,V_videoAd
Tf,R,N,V_volume
T@"<SVVideoPlayerViewControllerDataSource>",W,N,V_dataSource
_backgroundView
T@"<SVVideoProviding>",R,N,V_video
_looper
T@"AVAudioSession",R,W,N,V_audioSession
_playbackLikelyToKeepUpObserver
T@"AVPlayer",&,N
_player
T@"AVPlayer",W,N,V_currentlyPlaying
_statusObserver
T@"AVPlayerItem",W,N,V_item
_volumeObserver
T@"AVPlayerViewController",&,N,V_playerViewController
advance
T@"NSDictionary",R,C,N,V_options
backgroundColor
T@"NSMapTable",R,N,V_players
containsObject:
T@"NSMutableArray",R,N,V_queue
dealloc
T@"NSObject<OS_dispatch_semaphore>",R,N,V_semaphore
durationChanged
T@"NSString",C,N
initWithActivityIndicatorStyle:
T@"NSString",C,N,V_identifier
initWithPlayer:
T@"NSString",R,C
initWithViewControllerProvider:
T@"NSTimer",&,N,V_readyToPlayTimer
isProxy
T@"NSURL",R,N
keyPath
T@"SVAdGradientView",&,N,V_adGradientView
learnMoreButton
T@"SVAutomaticFullscreenVideoPlaybackBehaviorManager",R,N,V_fullscreenBehaviorManager
loadingProgress
T@"SVKeyValueObserver",&,N,V_durationObserver
options
T@"SVKeyValueObserver",&,N,V_muteStateObserver
playbackStarted
T@"SVKeyValueObserver",&,N,V_playbackLikelyToKeepUpObserver
playing
T@"SVKeyValueObserver",&,N,V_readyForDisplayObserver
release
T@"SVKeyValueObserver",&,N,V_timeControlStatusObserver
seekToTime:withCompletionBlock:
T@"SVKeyValueObserver",R,N,V_observer
setContentMode:
T@"SVLearnMoreButton",&,N,V_learnMoreButton
setElapsedTime:
T@"SVMediaPlaybackController",R,N,V_playbackController
setPlayerLayer:
T@"SVPlaybackCoordinator",&,N,V_coordinator
setUpdatesNowPlayingInfoCenter:
T@"SVPlaybackCoordinator",R,W,N,V_playbackCoordinator
skipped
T@"SVVideoAdSkipButton",&,N,V_skipButton
stillImageLayer
T@"SVVideoPlaybackQueue",&,N,V_queue
totalTimePlayed
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
updateDuration:
T@"UIGestureRecognizer",R,N,V_tapGesture
willMoveToParentViewController:
T@"UIView",R,N
T@"UIViewController",R,N
T@,&,N,V_timeObserver
T@?,C,N,SonChange:
T@?,C,N,SonChange:,V_changeBlock
T@?,C,N,SonMuteStateChange:
T@?,C,N,SonMuteStateChange:,V_muteStateChangeBlock
T@?,C,N,SonTouch:,V_touchedBlock
T@?,C,N,SonTouchUpInside:,V_touchUpInsideBlock
T@?,C,N,SonVolumeChange:
T@?,C,N,SonVolumeChange:,V_volumeChangeBlock
T@?,C,N,V_cancelHandler
T@?,C,N,V_loadingProgressBlock
T@?,C,N,V_playbackStatusBlock
T@?,R,C,N,V_change
TB,N,GisAudioSessionActive,V_audioSessionActive
TB,N,V_enablePictureInPictureBehaviors
TB,N,V_initiatedPlayback
TB,N,V_muted
TB,N,V_playButtonTapped
TB,N,V_playbackRequested
TB,N,V_showsPlaybackControls
TB,R,N
TB,R,N,GisFullscreenInProgress
TB,R,N,GisLoading
TB,R,N,GisPictureInPictureActive
TB,R,N,GisPlaying
TB,R,N,V_muted
TB,R,N,V_playbackBufferFull
TQ,N,V_currentPlaybackKind
TQ,N,V_fullscreenBehavior
TQ,N,V_mode
TQ,N,V_routeSharingPolicy
TQ,N,V_skipDuration
TQ,N,V_state
TQ,R
TQ,R,N
TQ,R,N,V_options
Td,N,V_elapsedTime
Td,N,V_frameRate
Td,N,V_lastTouchTimestamp
Td,N,V_pausedAtTime
Td,R,N
Td,R,N,V_preferredForwardBufferDuration
Tf,R,N
Ti,N,V_playbackPosition
Ti,N,V_playbackStatus
Ti,R,N,V_audioMode
T{?=qiIq},N,V_cumulativeTimePlayed
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
T{CGSize=dd},N,V_dimensions
T{CGSize=dd},R,N
T{UIEdgeInsets=dddd},N,V_touchInsets
_actions
_activityIndicatorView
_adPrivacyButton
_assetFactory
_audioMode
_audioSession
_audioSessionActive
_automaticallyLoadedAssetKeys
_behavior
_block
_cancelHandler
_category
_changeBlock
_coordinator
_cumulativeTimePlayed
_currentPlaybackKind
_currentlyPlaying
_dataSource
_delegate
_dimensions
_duration
_durationObserver
_elapsedTime
_enablePictureInPictureBehaviors
_error
_frameRate
_fullscreen
_fullscreenBehavior
_fullscreenBehaviorManager
_host
_identifier
_image
_initiatedPlayback
_item
_keyPath
_lastTouchTimestamp
_learnMoreButton
_loadedTimeRangesObserver
_loadingProgressBlock
_mode
_muteStateChangeBlock
_muteStateObserver
_muted
_nonAnimatingDelegate
_observer
_observers
_options
_outputVolumeObserver
_pausedAtTime
_playButtonTapped
_playbackBufferFull
_playbackBufferFullObserver
_playbackController
_playbackCoordinator
_playbackLikelyToKeepUp
_playbackPosition
_playbackProgressBlock
_playbackRequested
_playbackStatusBlock
_playerFactory
_playerItemDurationObserver
_playerItemFactory
_playerItemObserver
_playerItemPresentationSizeObserver
_playerLayer
_playerViewController
_players
_primaryContentCoordinator
_privateButtonTapped
_queue
_readyForDisplayObserver
_readyToPlayTimer
_routeSharingPolicy
_semaphore
_setContinuousCornerRadius:
_showsPlaybackControls
_skipButton
_skipDuration
_state
_stillImageLayer
_tapGesture
_time
_timeControlStatusObserver
_timeControlStatusObservers
_timeObserver
_timeline
_touchInsets
_touchUpInsideBlock
_touchedBlock
_video
_videoAd
_videoBounds
_videoBoundsObserver
_videoURL
_viewControllerProvider
_volumeChangeBlock
accessibilityContainer
accessibilityElements
accessibilityHint
accessibilityLabel
actionForLayer:forKey:
activateAudioSessionCategory
activityIndicatorView
adGradientView
adSkipButtonTapped:
addAttribute:value:range:
addChildViewController:
addCoordinatedAnimations:completion:
addDebuggerAction:
addGestureRecognizer:
addInterestForPlayer:withMode:
addMuteStateObserver
addObject:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addObservers
addPeriodicTimeObserverForInterval:queue:usingBlock:
addPlaybackBufferObserver
addPlaybackLikelyToKeepUpObserver
addPlaybackObserver:
addPlayerItemPresentationSizeObserver
addSublayer:
addSubview:
addTarget:action:forControlEvents:
allObjects
allowsPictureInPicturePlayback
animateAlongsideTransition:completion:
animatedUnobscuredCenterAreaLayoutGuide
appendAttributedString:
appendItem:
array
arrayWithObjects:
arrayWithObjects:count:
asset
assetFactory
assetTrack
assetWithURL:
audioMode
audioSession
audioSessionActive
automaticallyLoadedAssetKeys
autorelease
backgroundView
begin
behavior
blackColor
bottomAnchor
bounds
canDeactivateAudioSession
cancelHandler
capHeight
category
centerXAnchor
centerYAnchor
change
changeBlock
class
colorWithAlphaComponent:
colorWithRed:green:blue:alpha:
colorWithWhite:alpha:
commit
conditionsChanged
configurationWithPointSize:
configurationWithPointSize:weight:
configureTimeline
conformsToProtocol:
constraintEqualToAnchor:
constraintEqualToAnchor:constant:
contentOverlayView
coordinator
copy
count
countByEnumeratingWithState:objects:count:
createPlayerItemWithURL:
createPlayerWithURL:
createURLAssetWithURL:
cumulativeTimePlayed
currentDevice
currentItem
currentPlaybackKind
currentTime
currentlyPlaying
customControlsView
dataSource
deactivateAudioSessionCategory
debugDescription
defaultActionForKey:
defaultCenter
delegate
description
desiredAudioSessionConfiguration
dictionaryWithObjects:forKeys:count:
didMoveToParentViewController:
dimensions
displayLayer:
domain
drawLayer:inContext:
duration
durationObserver
elapsedTime
embedVideoPlayerIfNeeded
enterFullScreenAnimated:completionHandler:
enterFullscreenWithCompletionBlock:
enteredFullscreen
error
errorCodeForUnderlyingErrorDomain:
errorWithDomain:code:userInfo:
exitFullScreenAnimated:completionHandler:
exitFullscreenWithCompletionBlock:
exitedFullscreen
finished
finishedLoadingVideoURL:
finishedLoadingVideoWithURL:
firstObject
font
frameRate
framerate
fullscreen
fullscreenBehavior
fullscreenBehaviorManager
fullscreenBehaviorManagerRequiresFullscreenPlayback:
fullscreenInProgress
fullscreenPlaybackRequiredForCurrentConditions
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveEvent:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizerShouldBegin:
hasAction
hash
height
hitTest:withEvent:
host
identifier
image
imageNamed:inBundle:withConfiguration:
imageView
imageWithTintColor:
impressionThreshold
indexOfObject:
infoDictionary
init
initAuxiliarySession
initWithAudioMode:playerItemFactory:
initWithAudioSession:
initWithAutomaticallyLoadedAssetKeys:assetFactory:preferredForwardBufferDuration:
initWithCategory:mode:policy:
initWithCoder:
initWithFrame:
initWithKeyPath:ofObject:withOptions:change:
initWithLayer:
initWithNibName:bundle:
initWithOptions:
initWithPlaybackCoordinator:audioSession:
initWithPlayerItem:
initWithPlayerItem:audioMode:
initWithPlayerItemObserver:
initWithTarget:action:
initWithTitle:type:
initWithURL:
initWithURL:audioMode:
initWithURL:options:
initWithVideo:playerFactory:
initialize
initiatedPlayback
insertItem:afterItem:
insertObject:atIndex:
intrinsicContentSize
invalidate
invalidateIntrinsicContentSize
isAccessibilityElement
isAudioSessionActive
isCancelled
isEqual:
isEqualToConfiguration:
isEqualToString:
isFullscreen
isFullscreenInProgress
isKindOfClass:
isLoading
isMemberOfClass:
isPictureInPictureActive
isPictureInPictureSupported
isPlaybackBufferFull
isPlaybackLikelyToKeepUp
isPlaying
isReadyForDisplay
isTracking
item
lastObject
lastTouchTimestamp
layer
layerClass
layerWillDraw:
layoutIfNeeded
layoutSublayersOfLayer:
layoutSubviews
leadingAnchor
learnMoreButtonTapped:
length
load
loadFrameRate
loadValuesAsynchronouslyForKeys:completionHandler:
loadVideoIfNeeded
loadView
loadWithCompletionBlock:
loadedTimeRanges
loadedTimeRangesChanged
loadedTimeRangesObserver
loadingProgressBlock
localizedStringForKey:value:table:
looper
mainBundle
metricsForTextStyle:
metricsView
mode
muteStateChangeBlock
muteStateChanged
muteStateChanged:
muteStateObserver
muted
naturalSize
needsToSetupAudioSessionCategory
nextVideoStartedPlaying
nominalFrameRate
nonAnimatingDelegate
null
numberWithFloat:
numberWithInt:
object
objectEnumerator
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
observer
observers
onChange:
onMuteStateChange:
onTouch:
onTouchUpInside:
outputVolume
outputVolumeObserver
parentViewController
pause
pausedAtTime
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pictureInPictureActive
play
playButtonTapped
playImage
playWithButtonTapped:
playWithPlaybackKind:looping:
playbackAllowedForPlaybackCoordinator:
playbackBufferFull
playbackBufferFullObserver
playbackBufferFullStateChanged
playbackController
playbackCoordinator
playbackCoordinator:loadingProgressed:
playbackCoordinator:playbackFailedWithError:
playbackCoordinator:timeElapsed:duration:
playbackCoordinatorFinishedLoadingVideoURL:
playbackCoordinatorFinishedPlayback:
playbackCoordinatorMuteStateChanged:
playbackCoordinatorPausedPlayback:
playbackCoordinatorPlaybackBufferFullStateChanged:
playbackCoordinatorPlaybackLikelyToKeepUpStateChanged:
playbackCoordinatorResumedPlayback:
playbackCoordinatorStartedLoadingVideo:
playbackCoordinatorStartedPlayback:
playbackCoordinatorStateChanged:
playbackFailedWithError:
playbackFinished
playbackInitiatedWithButtonTapped:
playbackLikelyToKeepUp
playbackLikelyToKeepUpObserver
playbackLikelyToKeepUpStateChanged
playbackPassedImpressionThreshold
playbackPassedQuartile:
playbackPaused
playbackPausedAtTime:
playbackPosition
playbackProgressBlock
playbackReadyToStart
playbackRequested
playbackResumedAtTime:
playbackState
playbackStatus
playbackStatusBlock
playedToEnd:
player
playerFactory
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
playerItemDurationObserver
playerItemFactory
playerItemObserver
playerItemPresentationSizeObserver
playerItemWithAsset:automaticallyLoadedAssetKeys:
playerLayer
playerViewController
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewController:didPresentInterstitialTimeRange:
playerViewController:displayNameForMediaSelectionOption:
playerViewController:failedToStartPictureInPictureWithError:
playerViewController:metricsCollectionEventOccured:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
playerViewController:shouldExitFullScreenWithReason:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:willPresentInterstitialTimeRange:
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
playerViewControllerBeginReducingResourcesForPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerEndReducingResourcesForPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
playerViewControllerWillPerformAnalysisCalloutAction:
playerViewControllerWillStartPictureInPicture:
playerViewControllerWillStopPictureInPicture:
pointInside:withEvent:
preferredContentSizeCategory
preferredForwardBufferDuration
prefetchItemAfterCoordinatorIfPossible:
prependItem:
prerollReadyToPlayTimeout
presentAction
presentationSize
presentedViewController
primaryContentCoordinator
privacyMarker
queue
readyForDisplayObserver
readyToPlayTimer
refreshControlsForPlaybackCoordinator:
registerPlaybackControlForPlayer:withMode:
removeAllObjects
removeFromParentViewController
removeFromSuperview
removeGestureRecognizer:
removeInterestForPlayer:
removeObject:
removeObjectForKey:
removeObserver:forKeyPath:
removePlaybackObserver:
removePlayerItemPresentationSizeObserver
removeTimeObserver:
removeVideoPlayerIfNeeded
resignFirstResponder
respondsToSelector:
retain
retainCount
routeSharingPolicy
scaledFontForFont:
scheduledTimerWithTimeInterval:repeats:block:
seekToTime:completionHandler:
self
semaphore
setAction:
setActionAtItemEnd:
setActive:
setActive:error:
setActivityIndicatorView:
setAdGradientView:
setAdPrivacyButton:
setAdjustsFontForContentSizeCategory:
setAlignment:
setAllowedAudioSpatializationFormats:
setAllowsPictureInPicturePlayback:
setAlpha:
setAttributedTitle:forState:
setAudioSession:
setAudioSessionActive:
setAutomaticallyDrawsRoundedCorners:
setAutoresizingMask:
setBackgroundColor:
setBehavior:
setBounds:
setCanStartPictureInPictureAutomaticallyFromInline:
setCancelHandler:
setCategory:
setCategory:mode:routeSharingPolicy:options:error:
setCenter:
setColors:
setContents:
setCornerRadius:
setCumulativeTimePlayed:
setCurrentPlaybackKind:
setCurrentlyPlaying:
setCustomControlItems:
setDataSource:
setDelegate:
setDimensions:
setDuration:
setDurationObserver:
setElapsedTime:duration:
setEnablePictureInPictureBehaviors:
setEnabled:
setEndPoint:
setError:
setFont:
setFrame:
setFrameRate:
setFullscreen:
setFullscreenBehavior:
setHidden:
setHidden:withShowDelay:
setHidesWhenStopped:
setHost:
setIdentifier:
setImage:
setImage:forState:
setInitiatedPlayback:
setItem:
setLastTouchTimestamp:
setLearnMoreButton:
setLoadedTimeRangesObserver:
setLoadingProgressBlock:
setLocations:
setLoopTimeRange:
setLooper:
setModalPresentationStyle:
setMode:
setMuteStateObserver:
setMuted:
setNeedsUpdateConstraints
setNonAnimatingDelegate:
setObject:forKey:
setPausedAtTime:
setPlayButtonTapped:
setPlaybackBufferFullObserver:
setPlaybackLikelyToKeepUpObserver:
setPlaybackPosition:
setPlaybackProgressBlock:
setPlaybackRequested:
setPlaybackStatus:
setPlaybackStatusBlock:
setPlayer:
setPlayerItemDurationObserver:
setPlayerItemPresentationSizeObserver:
setPlayerViewController:
setPreferredForwardBufferDuration:
setPrimaryContentCoordinator:
setQueue:
setReadyForDisplayObserver:
setReadyToPlayTimer:
setRequiresLinearPlayback:
setRouteSharingPolicy:
setShowsPlaybackControls:
setSkipButton:
setSkipDuration:
setStartPoint:
setState:
setStatusObserver:
setTextAlignment:
setTimeControlStatusObserver:
setTimeObserver:
setTintColor:
setTitle:forState:
setTitleColor:forState:
setTranslatesAutoresizingMaskIntoConstraints:
setUserInteractionEnabled:
setValue:forKey:
setVideoAd:
setVideoBoundsObserver:
setVideoGravity:
setVideoURL:
setView:
setVolumeObserver:
setWithArray:
setupAudioSessionCategory
setupPlayerWithURL:
setupQueueIfNeeded
sharedInstance
sharedSession
sharedSessionForMode:
sharedSilentSession
shouldActivateAudioSession
shouldOccludeAccessibilityElement:
showsPlaybackControls
size
sizeWithAttributes:
skipButton
skipDuration
skipThreshold
startAnimating
startPictureInPicture
startPlaybackForCoordinatorIfAllowed:
startTimeObserver
startedLoadingVideo
startedPictureInPicture
state
stateChanged
status
statusChanged
statusObserver
statusOfValueForKey:error:
stopAnimating
stopPictureInPicture
stopTimeObserver
stoppedPictureInPicture
stringWithFormat:
superclass
superview
supportImpressionTracking
supportsQuartileTracking
svax_shouldBeOccluded
systemFontOfSize:weight:
systemImageNamed:
systemImageNamed:withConfiguration:
tapGesture
tapped
tappedToToggleControlVisibility:
text
time
timeControlStatus
timeControlStatusChanged
timeControlStatusObserver
timeControlStatusObservers
timeElapsed:duration:
timeObserver
timePlayed
timeline
timestamp
title
titleForDuration:
titleLabel
topAnchor
touchInsets
touchUpInsideBlock
touchedBlock
tracks
tracksWithMediaType:
trailingAnchor
traitCollectionDidChange:
transitionToCoordinator:
transportControlsAreaLayoutGuide
type
unregisterPlayer:
updateAdsButtonsVisibility
updateBackgroundColor
updateCurrentlyPlaying:
updateSkipButtonWithThreshold:time:
updateTime:duration:
updateViewConstraints
updateWithVolume:muted:
userInterfaceIdiom
video
videoAdForVideoPlayerViewController:
videoBounds
videoBoundsObserver
videoErrorWithErrorCode:
videoErrorWithUnderlyingError:
videoForVideoPlayerViewController:
videoGravity
videoPlayerViewController:initiatedPlaybackOfVideo:
videoPlayerViewController:pausedPlaybackOfVideo:
videoPlayerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
videoPlayerViewController:resumedPlaybackOfVideo:
videoPlayerViewController:startedPlaybackOfVideo:
videoPlayerViewControllerDidExitFullscreen:
videoPlayerViewControllerDidStartPictureInPicture:
videoPlayerViewControllerDidStopPictureInPicture:
videoPlayerViewControllerFinishedVideoPlayback:
videoPlayerViewControllerShouldStartPlayback:
videoPlayerViewControllerWillEnterFullscreen:
videoPlayerViewControllerWillExitFullscreen:
videoPlayerViewControllerWillStartPictureInPicture:
videoPlayerViewControllerWillStopPictureInPicture:
videoURL
view
viewControllerForFullScreenPresentation
viewControllerForModalPresentation
viewControllerProvider
viewDidLayoutSubviews
viewDidLoad
viewForKey:
volume
volumeChangeBlock
volumeChanged:
volumeObserver
weakObjectsHashTable
weakToStrongObjectsMapTable
whiteColor
willUnload
zone
@16@0:8
d16@0:8
{CGSize=dd}16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
v28@0:8B16d20
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"AVPlayerItem"24@0:8@"NSURL"16
@40@0:8@16@24d32
v16@0:8
@"NSArray"
@"<SVAVURLAssetFactory>"
@?16@0:8
v24@0:8@?16
@?<v@?@"<SVVideoDurationObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoDurationObserving>">16
v40@0:8{?=qiIq}16
v24@0:8d16
v24@0:8@16
@"<SVPlayerItemObserving>"
@"SVKeyValueObserver"
@"AVURLAsset"24@0:8@"NSURL"16
@"NSDictionary"
@48@0:8@16@24Q32@?40
v48@0:8@16@24@32^v40
@"NSString"
@"NSObject"
@"NSMutableArray"
@"UIImage"
@"NSMapTable"
@"AVPlayer"
v32@0:8@16@24
v40@0:8@16d24d32
v32@0:8@16d24
v24@0:8@"SVPlaybackCoordinator"16
v32@0:8@"SVPlaybackCoordinator"16@"NSError"24
v40@0:8@"SVPlaybackCoordinator"16d24d32
v32@0:8@"SVPlaybackCoordinator"16d24
f16@0:8
@?<v@?@"<SVVideoVolumeObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoVolumeObserving>">16
@32@0:8@16@24
v20@0:8f16
v24@0:8f16B20
@"SVPlaybackCoordinator"
@"AVAudioSession"
B40@0:8{CGPoint=dd}16@32
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v20@0:8B16
v32@0:8d16d24
v24@0:8Q16
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
@?24@0:8@?16
@?<v@?>24@0:8@?<@"<SVVideoMetadata>"@?@"NSURL">16
@"UIView"16@0:8
@"UIButton"16@0:8
@"NSURL"16@0:8
v32@0:8d16@?24
v32@0:8{CGSize=dd}16
@"<SVVideoProviding>"
@"NSObject<SVVideoPlaybackHost>"
@"NSError"
@"NSHashTable"
@"SVAVPlayer"
@"<SVAVPlayerFactory>"
@"SVTimeline"
@"NSURL"
@"NSTimer"
{CGSize="width"d"height"d}
v28@0:8Q16B24
@"SVImageLayer"
@"AVPlayerLayer"
@"SVLooper"
@"SVNonAnimatingDelegate"
@"AVBackgroundView"
@"SVVideoDurationObserver"
@24@0:8Q16
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@20@0:8i16
v28@0:8@16i24
@"NSObject<OS_dispatch_semaphore>"
@"SVMediaPlaybackController"
B48@0:8@16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
B48@0:8@"AVPlayerItem"16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
@28@0:8@16i24
v64@0:8{?=qiIq}16{?=qiIq}40
v20@0:8i16
i16@0:8
{?=qiIq}16@0:8
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVPlayerItem"16@0:8
@?<v@?@"<SVPlayerItemObserving>">16@0:8
v24@0:8@?<v@?@"<SVPlayerItemObserving>">16
@"AVPlayerItem"
@40@0:8@16@24Q32
@"UIViewController"16@0:8
@"<SVVideoAdViewControllerProviding>"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"SVAVPlayer"24@0:8@"NSURL"16
@28@0:8i16@20
@"<SVAVPlayerItemFactory>"
@40@0:8{CGPoint=dd}16@32
v32@0:8@16@?24
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"AVInterstitialTimeRange"24
B32@0:8@16q24
B32@0:8@"AVPlayerViewController"16q24
v36@0:8@16B24@28
v48@0:8@16{CGSize=dd}24@40
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
@"UIView"32@0:8@"AVPlayerViewController"16@"UIView"24
v48@0:8@"AVPlayerViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
@"NSString"32@0:8@"AVPlayerViewController"16@"AVMediaSelectionOption"24
v24@0:8@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8@16q24
v32@0:8Q16d24
@"<SVVideoPlayerViewControllerDelegate>"
@"<SVVideoPlayerViewControllerDataSource>"
@"AVPlayerViewController"
@"SVVideoPlaybackQueue"
@"<SVVideoAdProviding>"
@"SVLearnMoreButton"
@"SVVideoAdSkipButton"
@"SVAdPrivacyButton"
@"SVAdGradientView"
@"UIActivityIndicatorView"
@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"
@"SVVideoVolumeObserver"
@"UIGestureRecognizer"
@24@0:8q16
q24@0:8@16
