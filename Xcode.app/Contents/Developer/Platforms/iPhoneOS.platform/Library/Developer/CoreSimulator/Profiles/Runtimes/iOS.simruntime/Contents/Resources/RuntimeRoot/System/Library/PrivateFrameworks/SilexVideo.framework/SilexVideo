@(#)PROGRAM:SilexVideo  PROJECT:Silex-1
?ffffff
$@}}}}}}
?333333
ffffff
v8@?0
Play
Double tap to begin video playback
NSExtension
NSExtensionPointIdentifier
com.apple.widget-extension
play
play.fill
duration
v24@?0@"SVKeyValueObserver"8@"NSDictionary"16
v16@?0@"AVPlayerItem"8
v16@?0@"<SVPlayerItemObserving>"8
v16@?0@"SVTimeBasedAction"8
timeControlStatus
outputVolume
v12@?0B8
naturalSize
@"<SVVideoMetadata>"16@?0@"NSURL"8
v16@?0@"NSTimer"8
v20@?0@"SVAVPlayer"8i16
v32@?0@"SVAVPlayer"8d16d24
v24@?0@"SVAVPlayer"8@"NSArray"16
playbackBufferFull
playbackLikelyToKeepUp
muted
presentationSize
v16@?0Q8
-[SVPlayerLayer setPlayer:]
/Library/Caches/com.apple.xbs/Sources/FeldsparServices_Sim/Modules/silex/SilexVideo/Playback/Layer/SVPlayerLayer.m
Tried to re-set an already created AVPlayer!
status
readyForDisplay
v16@?0@"<SVVideoDurationObserving>"8
Skip
Skip in %lu
forward.end.fill
tracks
nominalFrameRate
v32@?0{?=qiIq}8
loadedTimeRanges
currentItem
videoBounds
v20@?0B8@"NSError"12
Debugger
ant.circle
AVFullScreenViewController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
v16@?0@"<SVVideoVolumeObserving>"8
Learn More
chevron.right
SVVideoErrorDomain
*** Assertion failure (Identifier: catch-all) : %s %s:%d %{public}@
SVAdPrivacyButton
SVAdditions
SVAVPlayerItemFactory
NSObject
SVVideoPlayButton
SVVideoDurationObserver
SVVideoDurationObserving
SVTouchAbsorbingView
SVAVURLAssetFactory
SVKeyValueObserver
SVTimeline
SVBundleClass
SVImageLayer
SVMediaPlaybackController
SVVideoVolumeObserver
SVVideoPlaybackObserver
SVVideoVolumeObserving
SVButton
SVVideoAdProviding
SVVideoProviding
SVVideoEventTracker
SVVideoURLProviding
SVVideoAdEventTracker
SVPlaybackCoordinator
SVVideoMetadata
SVPlayerLayer
SVAdGradientView
SVMaterialButton
SVLooper
SVTimeBasedAction
SVVideoAdSkipButton
SVNonAnimatingDelegate
CALayerDelegate
SVAudioSession
SVAXElementOcclusion
SVAVPlayer
AVPlayerItemDelegate
SVPlayerItemObserver
SVPlayerItemObserving
SVAudioSessionConfiguration
SVVideoAdViewControllerProvider
SVVideoAdViewControllerProviding
SVAutomaticFullscreenVideoPlaybackBehaviorManager
SVVideoPlaybackQueue
SVAVPlayerFactory
SVTouchForwardingView
SVVideoPlayerViewController
AVPlayerViewControllerDelegate_WebKitOnly
AVPlayerViewControllerDelegate
AVPlayerViewControllerDelegatePrivate
SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate
UIGestureRecognizerDelegate
SVLearnMoreButton
SVVideoError
localizedStringForKey:value:table:
metricsForTextStyle:
systemFontOfSize:weight:
scaledFontForFont:
font
capHeight
title
dictionaryWithObjects:forKeys:count:
sizeWithAttributes:
height
initWithFrame:
titleLabel
setAdjustsFontForContentSizeCategory:
setTitle:forState:
setFont:
setTextAlignment:
whiteColor
setTitleColor:forState:
colorWithWhite:alpha:
systemTealColor
setBackgroundColor:
_setContinuousCornerRadius:
setTouchInsets:
intrinsicContentSize
svax_shouldBeOccluded
text
size
isAccessibilityElement
accessibilityElements
accessibilityLabel
setHidden:
setHidden:withShowDelay:
init
copy
assetFactory
createURLAssetWithURL:
automaticallyLoadedAssetKeys
playerItemWithAsset:automaticallyLoadedAssetKeys:
preferredForwardBufferDuration
setPreferredForwardBufferDuration:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
createPlayerItemWithURL:
initWithAutomaticallyLoadedAssetKeys:assetFactory:preferredForwardBufferDuration:
.cxx_destruct
_automaticallyLoadedAssetKeys
_assetFactory
_preferredForwardBufferDuration
T@"NSArray",R,C,N,V_automaticallyLoadedAssetKeys
T@"<SVAVURLAssetFactory>",R,N,V_assetFactory
Td,R,N,V_preferredForwardBufferDuration
setTintColor:
colorWithRed:green:blue:alpha:
imageView
setContentMode:
defaultCenter
updateBackgroundColor
addObserver:selector:name:object:
displayAsPaused
backgroundColor
colorWithAlphaComponent:
layoutSubviews
layer
bounds
setCornerRadius:
setFrame:
setCenter:
mainBundle
infoDictionary
objectForKeyedSubscript:
isEqualToString:
bundleForClass:
imageNamed:inBundle:withConfiguration:
configurationWithPointSize:
systemImageNamed:withConfiguration:
imageWithTintColor:
playImage
setImage:forState:
accessibilityHint
duration
updateDuration:
objectForKey:
CMTimeValue
initWithKeyPath:ofObject:withOptions:change:
setPlayerItemDurationObserver:
playerItemObserver
item
onChange:
setDuration:
changeBlock
Td,R,N
T@?,C,N,SonChange:
initWithPlayerItemObserver:
playerItemDurationObserver
_playerItemObserver
_playerItemDurationObserver
_duration
T@"<SVPlayerItemObserving>",R,N,V_playerItemObserver
T@"SVKeyValueObserver",&,N,V_playerItemDurationObserver
Td,N,V_duration
T@?,C,N,SonChange:,VchangeBlock
isTracking
options
initWithURL:options:
initWithOptions:
_options
T@"NSDictionary",R,C,N,V_options
addObserver:forKeyPath:options:context:
object
keyPath
removeObserver:forKeyPath:
dealloc
change
observeValueForKeyPath:ofObject:change:context:
_keyPath
_object
_change
T@"NSString",R,C,N,V_keyPath
T@"NSObject",R,W,N,V_object
TQ,R,N,V_options
T@?,R,C,N,V_change
array
removeAllObjects
addObject:
removeObject:
countByEnumeratingWithState:objects:count:
_time
_actions
CGImage
setContents:
setImage:
image
identifier
setIdentifier:
_image
_identifier
T@"UIImage",&,N,V_image
T@"NSString",C,N,V_identifier
weakToStrongObjectsMapTable
pause
setCurrentlyPlaying:
currentlyPlaying
timeControlStatus
updateCurrentlyPlaying:
timeControlStatusObservers
setObject:forKey:
removeObjectForKey:
registerPlayer:
unregisterPlayer:
_timeControlStatusObservers
_currentlyPlaying
T@"NSMapTable",R,N,V_timeControlStatusObservers
T@"AVPlayer",W,N,V_currentlyPlaying
addPlaybackObserver:
outputVolume
muted
updateWithVolume:muted:
audioSession
volumeChanged:
volumeChangeBlock
muteStateChangeBlock
playbackCoordinatorStartedPlayback:
playbackCoordinatorResumedPlayback:
playbackCoordinatorPausedPlayback:
playbackCoordinatorFinishedPlayback:
playbackCoordinator:playbackFailedWithError:
playbackCoordinator:timeElapsed:duration:
playbackCoordinator:loadingProgressed:
playbackCoordinatorPlaybackBufferFullStateChanged:
playbackCoordinatorPlaybackLikelyToKeepUpStateChanged:
playbackCoordinatorStateChanged:
playbackCoordinatorMuteStateChanged:
playbackCoordinatorStartedLoadingVideo:
playbackCoordinatorFinishedLoadingVideoURL:
volume
onVolumeChange:
onMuteStateChange:
TB,R,N
Tf,R,N
T@?,C,N,SonVolumeChange:
T@?,C,N,SonMuteStateChange:
initWithPlaybackCoordinator:audioSession:
playbackCoordinator
outputVolumeObserver
_muted
_volume
_volumeChangeBlock
_muteStateChangeBlock
_playbackCoordinator
_audioSession
_outputVolumeObserver
T@"SVPlaybackCoordinator",R,W,N,V_playbackCoordinator
T@"AVAudioSession",R,W,N,V_audioSession
T@"SVKeyValueObserver",R,N,V_outputVolumeObserver
TB,R,N,V_muted
Tf,R,N,V_volume
T@?,C,N,SonVolumeChange:,V_volumeChangeBlock
T@?,C,N,SonMuteStateChange:,V_muteStateChangeBlock
_privateButtonTapped
addTarget:action:forControlEvents:
pointInside:withEvent:
touchInsets
touchUpInsideBlock
onTouchUpInside:
_touchUpInsideBlock
_touchInsets
T{UIEdgeInsets=dddd},N,V_touchInsets
T@?,C,N,SonTouchUpInside:,V_touchUpInsideBlock
weakObjectsHashTable
playbackInitiatedWithButtonTapped:
loadVideoIfNeeded
player
play
observers
setPlayer:
currentItem
timeElapsed:duration:
seekToStartWithCompletionBlock:
seekToTime:completionHandler:
frameRate
elapsedTime
totalTimePlayed
loadedTimeRanges
sharedInstance
firstObject
CMTimeRangeValue
tracks
assetTrack
statusOfValueForKey:error:
naturalSize
state
cancelHandler
startedLoadingVideo
video
setupPlayerWithURL:
setCancelHandler:
finishedLoadingVideoURL:
setVideoURL:
videoErrorWithErrorCode:
playbackFailedWithError:
loadWithCompletionBlock:
playerFactory
createPlayerWithURL:
setMuted:
addPlayerItemPresentationSizeObserver
addMuteStateObserver
addPlaybackBufferObserver
addPlaybackLikelyToKeepUpObserver
finishedLoadingVideoWithURL:
playbackReadyToStart
playbackStarted
playbackPaused
playbackResumed
playbackFinished
muteStateChanged:
enteredFullscreen
exitedFullscreen
tappedToToggleControlVisibility:
playbackPassedImpressionThreshold
playbackPassedQuartile:
startedPictureInPicture
stoppedPictureInPicture
impressionThreshold
skipped
nextVideoStartedPlaying
willUnload
presentAction
skipThreshold
hasAction
prerollReadyToPlayTimeout
metricsView
privacyMarker
TQ,R,N
T@"UIView",R,N
T@"UIButton",R,N
scheduledTimerWithTimeInterval:repeats:block:
setReadyToPlayTimer:
readyToPlayTimer
isValid
invalidate
playbackPosition
error
videoErrorWithUnderlyingError:
setPlaybackStatusBlock:
setPlaybackProgressBlock:
loadedTimeRangesChanged
setLoadingProgressBlock:
host
setState:
initiatedPlayback
setPlaybackRequested:
setInitiatedPlayback:
configureTimeline
time
playbackPausedAtTime:
playbackResumedAtTime:
setError:
timeline
loadingProgress
isPlaybackBufferFull
playbackBufferFullStateChanged
setPlaybackBufferFullObserver:
isPlaybackLikelyToKeepUp
playbackLikelyToKeepUpStateChanged
setPlaybackLikelyToKeepUpObserver:
isMuted
muteStateChanged
setMuteStateObserver:
presentationSize
setDimensions:
setPlayerItemPresentationSizeObserver:
supportImpressionTracking
supportsQuartileTracking
setPausedAtTime:
pausedAtTime
stateChanged
framerate
timePlayed
playbackState
videoURL
T{CGSize=dd},R,N
T@"NSURL",R,N
initWithVideo:playerFactory:
playWithButtonTapped:
removePlaybackObserver:
setHost:
seekToTime:withCompletionBlock:
load
removePlayerItemPresentationSizeObserver
playbackLikelyToKeepUp
playbackBufferFull
dimensions
playbackRequested
playerItemPresentationSizeObserver
readyForDisplayObserver
setReadyForDisplayObserver:
muteStateObserver
playbackLikelyToKeepUpObserver
playbackBufferFullObserver
_playbackLikelyToKeepUp
_playbackBufferFull
_playbackRequested
_initiatedPlayback
_video
_state
_host
_error
_observers
_player
_cancelHandler
_playerItemPresentationSizeObserver
_readyForDisplayObserver
_playerFactory
_muteStateObserver
_playbackLikelyToKeepUpObserver
_playbackBufferFullObserver
_timeline
_pausedAtTime
_videoURL
_readyToPlayTimer
_dimensions
TB,N,V_playbackRequested
T@"NSHashTable",R,N,V_observers
T@"SVAVPlayer",&,N,V_player
T@?,C,N,V_cancelHandler
TB,N,V_initiatedPlayback
T{CGSize=dd},N,V_dimensions
TQ,N,V_state
T@"SVKeyValueObserver",&,N,V_playerItemPresentationSizeObserver
T@"SVKeyValueObserver",&,N,V_readyForDisplayObserver
T@"NSError",&,N,V_error
T@"<SVAVPlayerFactory>",R,N,V_playerFactory
T@"SVKeyValueObserver",&,N,V_muteStateObserver
T@"SVKeyValueObserver",&,N,V_playbackLikelyToKeepUpObserver
T@"SVKeyValueObserver",&,N,V_playbackBufferFullObserver
T@"SVTimeline",R,N,V_timeline
Td,N,V_pausedAtTime
T@"NSURL",&,N,V_videoURL
T@"NSTimer",&,N,V_readyToPlayTimer
T@"<SVVideoProviding>",R,N,V_video
T@"NSArray",R,N
TB,R,N,V_playbackLikelyToKeepUp
TB,R,N,V_playbackBufferFull
T@"NSObject<SVVideoPlaybackHost>",W,N,V_host
TB,N,V_muted
setDelegate:
addSublayer:
initialize
initWithLayer:
layoutSublayers
stillImageLayer
playerLayer
initWithFormat:
sharedSessionForMode:
removeInterestForPlayer:
addInterestForPlayer:withMode:
status
videoGravity
begin
setValue:forKey:
setVideoGravity:
commit
null
setCurrentPlaybackKind:
initWithPlayer:
setLooper:
isReadyForDisplay
playWithPlaybackKind:looping:
defaultActionForKey:
initWithCoder:
setPlayerLayer:
looper
statusObserver
setStatusObserver:
nonAnimatingDelegate
setNonAnimatingDelegate:
currentPlaybackKind
_stillImageLayer
_playerLayer
_looper
_statusObserver
_nonAnimatingDelegate
_currentPlaybackKind
T@"AVPlayerLayer",&,N,V_playerLayer
T@"SVLooper",&,N,V_looper
T@"SVKeyValueObserver",&,N,V_statusObserver
T@"SVNonAnimatingDelegate",&,N,V_nonAnimatingDelegate
TQ,N,V_currentPlaybackKind
T@"SVImageLayer",R,V_stillImageLayer
T@"AVPlayer",&,N
T@"NSString",C,N
setStartPoint:
setEndPoint:
CGColor
arrayWithObjects:
setColors:
numberWithFloat:
setLocations:
layerClass
setUserInteractionEnabled:
setAutomaticallyDrawsRoundedCorners:
addSubview:
backgroundView
_backgroundView
T@"AVBackgroundView",R,N,V_backgroundView
setLoopTimeRange:
durationObserver
_durationObserver
T@"AVPlayer",R,N,V_player
T@"SVVideoDurationObserver",R,N,V_durationObserver
_block
titleForDuration:
setAttributedTitle:forState:
setEnabled:
stringWithFormat:
initWithString:
length
addAttribute:value:range:
setBounds:
attributedStringWithAttachment:
appendAttributedString:
configurationWithPointSize:weight:
setAlignment:
setSkipDuration:
skipDuration
_skipDuration
TQ,N,V_skipDuration
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
sharedSilentSession
sharedSession
initWithAudioSession:
initAuxiliarySession
setCategory:mode:routeSharingPolicy:options:error:
playbackController
semaphore
players
numberWithInt:
registerPlaybackControlForPlayer:withMode:
setupAudioSessionCategory
setAudioSession:
activateAudioSessionCategory
deactivateAudioSessionCategory
count
desiredAudioSessionConfiguration
category
mode
routeSharingPolicy
initWithCategory:mode:policy:
isEqualToConfiguration:
needsToSetupAudioSessionCategory
isAudioSessionActive
shouldActivateAudioSession
setActive:error:
setAudioSessionActive:
canDeactivateAudioSession
objectEnumerator
allObjects
setWithArray:
countForObject:
_audioSessionActive
_semaphore
_players
_playbackController
audioSessionActive
TB,N,GisAudioSessionActive,V_audioSessionActive
T@"NSObject<OS_dispatch_semaphore>",R,N,V_semaphore
T@"NSMapTable",R,N,V_players
T@"SVMediaPlaybackController",R,N,V_playbackController
T@"AVAudioSession",R,N,V_audioSession
accessibilityContainer
shouldOccludeAccessibilityElement:
initWithURL:audioMode:
assetWithURL:
initWithPlayerItem:audioMode:
initWithPlayerItem:
setAllowedAudioSpatializationFormats:
setActionAtItemEnd:
addObservers
loadFrameRate
stopTimeObserver
audioMode
currentTime
setElapsedTime:
setPlaybackPosition:
cumulativeTimePlayed
asset
tracksWithMediaType:
nominalFrameRate
setFrameRate:
loadValuesAsynchronouslyForKeys:completionHandler:
updateTime:duration:
setCumulativeTimePlayed:
addPeriodicTimeObserverForInterval:queue:usingBlock:
setTimeObserver:
setElapsedTime:duration:
timeObserver
removeTimeObserver:
timeControlStatusChanged
setTimeControlStatusObserver:
statusChanged
durationChanged
setDurationObserver:
setLoadedTimeRangesObserver:
playedToEnd:
setPlaybackStatus:
playbackProgressBlock
startTimeObserver
playbackStatusBlock
playbackStatus
loadingProgressBlock
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
initWithURL:
timeControlStatusObserver
loadedTimeRangesObserver
_audioMode
_playbackPosition
_playbackStatus
_playbackStatusBlock
_playbackProgressBlock
_loadingProgressBlock
_elapsedTime
_frameRate
_timeObserver
_timeControlStatusObserver
_loadedTimeRangesObserver
_cumulativeTimePlayed
Ti,N,V_playbackStatus
Td,N,V_elapsedTime
Td,N,V_frameRate
T@,&,N,V_timeObserver
T{?=qiIq},N,V_cumulativeTimePlayed
T@"SVKeyValueObserver",&,N,V_timeControlStatusObserver
T@"SVKeyValueObserver",&,N,V_durationObserver
T@"SVKeyValueObserver",&,N,V_loadedTimeRangesObserver
Ti,R,N,V_audioMode
Ti,N,V_playbackPosition
T@?,C,N,V_playbackStatusBlock
T@?,C,N,V_playbackProgressBlock
T@?,C,N,V_loadingProgressBlock
setItem:
T@"AVPlayerItem",R,W,N
observer
_changeBlock
_item
_observer
T@"SVKeyValueObserver",R,N,V_observer
T@"AVPlayerItem",W,N,V_item
T@?,C,N,SonChange:,V_changeBlock
setCategory:
setMode:
setRouteSharingPolicy:
_category
_mode
_routeSharingPolicy
T@"NSString",C,N,V_category
T@"NSString",C,N,V_mode
TQ,N,V_routeSharingPolicy
viewControllerProvider
viewControllerForModalPresentation
T@"UIViewController",R,N
initWithViewControllerProvider:
_viewControllerProvider
T@"<SVVideoAdViewControllerProviding>",R,W,N,V_viewControllerProvider
conditionsChanged
behavior
videoBounds
fullscreenPlaybackRequiredForCurrentConditions
delegate
fullscreenBehaviorManagerRequiresFullscreenPlayback:
setVideoBounds:
setBehavior:
_behavior
_delegate
_videoBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
TQ,N,V_behavior
T@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>",W,N,V_delegate
queue
insertObject:atIndex:
indexOfObject:
appendItem:
advance
prefetchItemAfterCoordinatorIfPossible:
lastObject
containsObject:
prependItem:
insertItem:afterItem:
_queue
T@"NSMutableArray",R,N,V_queue
playerItemFactory
initWithAudioMode:playerItemFactory:
_playerItemFactory
T@"<SVAVPlayerItemFactory>",R,N,V_playerItemFactory
hitTest:withEvent:
type
touchedBlock
lastTouchTimestamp
timestamp
setLastTouchTimestamp:
onTouch:
_touchedBlock
_lastTouchTimestamp
Td,N,V_lastTouchTimestamp
T@?,C,N,SonTouch:,V_touchedBlock
initWithNibName:bundle:
setAllowsPictureInPicturePlayback:
setModalPresentationStyle:
setUpdatesNowPlayingInfoCenter:
CGRectValue
setTranslatesAutoresizingMaskIntoConstraints:
learnMoreButtonTapped:
adSkipButtonTapped:
initWithActivityIndicatorStyle:
setHidesWhenStopped:
tapped
initWithTarget:action:
setView:
coordinator
viewDidLoad
playerViewController
addChildViewController:
view
didMoveToParentViewController:
setShowsPlaybackControls:
blackColor
activityIndicatorView
tapGesture
addGestureRecognizer:
customControlsView
learnMoreButton
skipButton
contentOverlayView
adGradientView
setAccessibilityElementsHidden:
setNeedsUpdateConstraints
viewDidLayoutSubviews
superview
animatedUnobscuredCenterAreaLayoutGuide
transportControlsAreaLayoutGuide
adPrivacyButton
leadingAnchor
constraintEqualToAnchor:
setActive:
bottomAnchor
constraintEqualToAnchor:constant:
trailingAnchor
centerXAnchor
centerYAnchor
topAnchor
updateViewConstraints
setupQueueIfNeeded
setPlayButtonTapped:
startPlaybackForCoordinatorIfAllowed:
isFullscreen
layoutIfNeeded
setFullscreen:
enterFullScreenAnimated:completionHandler:
exitFullScreenAnimated:completionHandler:
isPictureInPictureActive
isPlaying
isPictureInPictureSupported
allowsPictureInPicturePlayback
enablePictureInPictureBehaviors
currentDevice
userInterfaceIdiom
startPictureInPicture
stopPictureInPicture
initWithTitle:type:
systemImageNamed:
setAction:
arrayWithObjects:count:
setCustomControlItems:
parentViewController
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
videoAd
presentedViewController
enterFullscreenWithCompletionBlock:
fullscreenBehaviorManager
setAlpha:
addCoordinatedAnimations:completion:
resignFirstResponder
videoPlayerViewControllerWillExitFullscreen:
isCancelled
viewForKey:
removeGestureRecognizer:
videoPlayerViewControllerDidExitFullscreen:
updateAdsButtonsVisibility
animateAlongsideTransition:completion:
videoPlayerViewControllerWillEnterFullscreen:
videoPlayerViewControllerWillStartPictureInPicture:
videoPlayerViewControllerDidStartPictureInPicture:
videoPlayerViewControllerWillStopPictureInPicture:
videoPlayerViewControllerDidStopPictureInPicture:
videoPlayerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
setVideoAd:
refreshControlsForPlaybackCoordinator:
videoPlayerViewController:startedPlaybackOfVideo:
videoPlayerViewController:pausedPlaybackOfVideo:
videoPlayerViewController:resumedPlaybackOfVideo:
updateSkipButtonWithThreshold:time:
playbackAllowedForPlaybackCoordinator:
playButtonTapped
startAnimating
stopAnimating
setRequiresLinearPlayback:
setCanStartPictureInPictureAutomaticallyFromInline:
dataSource
videoAdForVideoPlayerViewController:
setAutoresizingMask:
setAdPrivacyButton:
videoForVideoPlayerViewController:
setPrimaryContentCoordinator:
setQueue:
videoPlayerViewController:initiatedPlaybackOfVideo:
transitionToCoordinator:
finished
setCoordinator:
setVolumeObserver:
volumeObserver
videoPlayerViewControllerFinishedVideoPlayback:
videoPlayerViewControllerShouldStartPlayback:
viewControllerForFullScreenPresentation
showsPlaybackControls
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
playerViewController:willPresentInterstitialTimeRange:
playerViewController:didPresentInterstitialTimeRange:
playerViewController:shouldExitFullScreenWithReason:
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
playerViewControllerBeginReducingResourcesForPictureInPicture:
playerViewControllerEndReducingResourcesForPictureInPicture:
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
playerViewControllerWillPerformAnalysisCalloutAction:
playerViewController:displayNameForMediaSelectionOption:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
loadView
exitFullscreenWithCompletionBlock:
startPictureInPictureIfPossible
isLoading
addDebuggerAction:
embedVideoPlayerIfNeeded
removeVideoPlayerIfNeeded
isFullscreenInProgress
setFullscreenBehavior:
playerViewController:metricsCollectionEventOccured:
setDataSource:
setEnablePictureInPictureBehaviors:
fullscreenBehavior
setPlayerViewController:
primaryContentCoordinator
setLearnMoreButton:
setSkipButton:
setAdGradientView:
setActivityIndicatorView:
videoBoundsObserver
setVideoBoundsObserver:
_enablePictureInPictureBehaviors
_fullscreen
_playButtonTapped
_showsPlaybackControls
_dataSource
_fullscreenBehavior
_playerViewController
_coordinator
_primaryContentCoordinator
_videoAd
_learnMoreButton
_skipButton
_adPrivacyButton
_adGradientView
_activityIndicatorView
_videoBoundsObserver
_fullscreenBehaviorManager
_volumeObserver
_tapGesture
T@"SVVideoPlaybackQueue",&,N,V_queue
T@"SVPlaybackCoordinator",&,N,V_coordinator
T@"SVPlaybackCoordinator",&,N,V_primaryContentCoordinator
T@"<SVVideoAdProviding>",&,N,V_videoAd
TB,N,V_playButtonTapped
T@"SVLearnMoreButton",&,N,V_learnMoreButton
T@"SVVideoAdSkipButton",&,N,V_skipButton
T@"SVAdPrivacyButton",&,N,V_adPrivacyButton
T@"SVAdGradientView",&,N,V_adGradientView
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
T@"SVKeyValueObserver",&,N,V_videoBoundsObserver
T@"SVAutomaticFullscreenVideoPlaybackBehaviorManager",R,N,V_fullscreenBehaviorManager
TQ,N,V_mode
fullscreen
TB,N,GisFullscreen,V_fullscreen
T@"SVVideoVolumeObserver",&,N,V_volumeObserver
T@"UIGestureRecognizer",R,N,V_tapGesture
TB,N,V_showsPlaybackControls
T@"<SVVideoPlayerViewControllerDelegate>",W,N,V_delegate
T@"<SVVideoPlayerViewControllerDataSource>",W,N,V_dataSource
TB,N,V_enablePictureInPictureBehaviors
playing
TB,R,N,GisPlaying
loading
TB,R,N,GisLoading
fullscreenInProgress
TB,R,N,GisFullscreenInProgress
TQ,N,V_fullscreenBehavior
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
T@"AVPlayerViewController",&,N,V_playerViewController
setHighlighted:
traitCollection
preferredContentSizeCategory
invalidateIntrinsicContentSize
traitCollectionDidChange:
domain
errorCodeForUnderlyingErrorDomain:
errorWithDomain:code:userInfo:
@16@0:8
d16@0:8
{CGSize=dd}16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
v28@0:8B16d20
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"AVPlayerItem"24@0:8@"NSURL"16
@40@0:8@16@24d32
v16@0:8
@"NSArray"
@"<SVAVURLAssetFactory>"
@?16@0:8
v24@0:8@?16
@?<v@?@"<SVVideoDurationObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoDurationObserving>">16
v40@0:8{?=qiIq}16
v24@0:8d16
v24@0:8@16
@"<SVPlayerItemObserving>"
@"SVKeyValueObserver"
@"AVURLAsset"24@0:8@"NSURL"16
@"NSDictionary"
@48@0:8@16@24Q32@?40
v48@0:8@16@24@32^v40
@"NSString"
@"NSObject"
@"NSMutableArray"
@"UIImage"
@"NSMapTable"
@"AVPlayer"
v32@0:8@16@24
v40@0:8@16d24d32
v32@0:8@16d24
v24@0:8@"SVPlaybackCoordinator"16
v32@0:8@"SVPlaybackCoordinator"16@"NSError"24
v40@0:8@"SVPlaybackCoordinator"16d24d32
v32@0:8@"SVPlaybackCoordinator"16d24
f16@0:8
@?<v@?@"<SVVideoVolumeObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoVolumeObserving>">16
@32@0:8@16@24
v20@0:8f16
v24@0:8f16B20
@"SVPlaybackCoordinator"
@"AVAudioSession"
B40@0:8{CGPoint=dd}16@32
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v20@0:8B16
v32@0:8d16d24
v24@0:8Q16
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
@?24@0:8@?16
@?<v@?>24@0:8@?<@"<SVVideoMetadata>"@?@"NSURL">16
@"UIView"16@0:8
@"UIButton"16@0:8
@"NSURL"16@0:8
v32@0:8d16@?24
v32@0:8{CGSize=dd}16
@"<SVVideoProviding>"
@"NSObject<SVVideoPlaybackHost>"
@"NSError"
@"NSHashTable"
@"SVAVPlayer"
@"<SVAVPlayerFactory>"
@"SVTimeline"
@"NSURL"
@"NSTimer"
{CGSize="width"d"height"d}
v28@0:8Q16B24
@"SVImageLayer"
@"AVPlayerLayer"
@"SVLooper"
@"SVNonAnimatingDelegate"
@"AVBackgroundView"
@"SVVideoDurationObserver"
@24@0:8Q16
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@20@0:8i16
v28@0:8@16i24
@"NSObject<OS_dispatch_semaphore>"
@"SVMediaPlaybackController"
B48@0:8@16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
B48@0:8@"AVPlayerItem"16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
@28@0:8@16i24
v64@0:8{?=qiIq}16{?=qiIq}40
v20@0:8i16
i16@0:8
{?=qiIq}16@0:8
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVPlayerItem"16@0:8
@?<v@?@"<SVPlayerItemObserving>">16@0:8
v24@0:8@?<v@?@"<SVPlayerItemObserving>">16
@"AVPlayerItem"
@40@0:8@16@24Q32
@"UIViewController"16@0:8
@"<SVVideoAdViewControllerProviding>"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"SVAVPlayer"24@0:8@"NSURL"16
@28@0:8i16@20
@"<SVAVPlayerItemFactory>"
@40@0:8{CGPoint=dd}16@32
v32@0:8@16@?24
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"AVInterstitialTimeRange"24
B32@0:8@16q24
B32@0:8@"AVPlayerViewController"16q24
v36@0:8@16B24@28
v48@0:8@16{CGSize=dd}24@40
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
@"UIView"32@0:8@"AVPlayerViewController"16@"UIView"24
v48@0:8@"AVPlayerViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
@"NSString"32@0:8@"AVPlayerViewController"16@"AVMediaSelectionOption"24
v24@0:8@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8@16q24
v32@0:8Q16d24
@"<SVVideoPlayerViewControllerDelegate>"
@"<SVVideoPlayerViewControllerDataSource>"
@"AVPlayerViewController"
@"SVVideoPlaybackQueue"
@"<SVVideoAdProviding>"
@"SVLearnMoreButton"
@"SVVideoAdSkipButton"
@"SVAdPrivacyButton"
@"SVAdGradientView"
@"UIActivityIndicatorView"
@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"
@"SVVideoVolumeObserver"
@"UIGestureRecognizer"
@24@0:8q16
q24@0:8@16
@(#)PROGRAM:SilexVideo  PROJECT:Silex-1
?ffffff
?}}}}}}
?333333
ffffff
v8@?0
Play
Double tap to begin video playback
NSExtension
NSExtensionPointIdentifier
com.apple.widget-extension
play
play.fill
duration
v24@?0@"SVKeyValueObserver"8@"NSDictionary"16
v16@?0@"AVPlayerItem"8
v16@?0@"<SVPlayerItemObserving>"8
v16@?0@"SVTimeBasedAction"8
timeControlStatus
outputVolume
v12@?0B8
naturalSize
@"<SVVideoMetadata>"16@?0@"NSURL"8
v16@?0@"NSTimer"8
v20@?0@"SVAVPlayer"8i16
v32@?0@"SVAVPlayer"8d16d24
v24@?0@"SVAVPlayer"8@"NSArray"16
playbackBufferFull
playbackLikelyToKeepUp
muted
presentationSize
v16@?0Q8
-[SVPlayerLayer setPlayer:]
/Library/Caches/com.apple.xbs/Sources/FeldsparServices_Sim/Modules/silex/SilexVideo/Playback/Layer/SVPlayerLayer.m
Tried to re-set an already created AVPlayer!
status
readyForDisplay
v16@?0@"<SVVideoDurationObserving>"8
Skip
Skip in %lu
forward.end.fill
tracks
nominalFrameRate
v32@?0{?=qiIq}8
loadedTimeRanges
currentItem
videoBounds
v20@?0B8@"NSError"12
Debugger
ant.circle
AVFullScreenViewController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
v16@?0@"<SVVideoVolumeObserving>"8
Learn More
chevron.right
SVVideoErrorDomain
*** Assertion failure (Identifier: catch-all) : %s %s:%d %{public}@
SVAdPrivacyButton
SVAdditions
SVAVPlayerItemFactory
NSObject
SVVideoPlayButton
SVVideoDurationObserver
SVVideoDurationObserving
SVTouchAbsorbingView
SVAVURLAssetFactory
SVKeyValueObserver
SVTimeline
SVBundleClass
SVImageLayer
SVMediaPlaybackController
SVVideoVolumeObserver
SVVideoPlaybackObserver
SVVideoVolumeObserving
SVButton
SVVideoAdProviding
SVVideoProviding
SVVideoEventTracker
SVVideoURLProviding
SVVideoAdEventTracker
SVPlaybackCoordinator
SVVideoMetadata
SVPlayerLayer
SVAdGradientView
SVMaterialButton
SVLooper
SVTimeBasedAction
SVVideoAdSkipButton
SVNonAnimatingDelegate
CALayerDelegate
SVAudioSession
SVAXElementOcclusion
SVAVPlayer
AVPlayerItemDelegate
SVPlayerItemObserver
SVPlayerItemObserving
SVAudioSessionConfiguration
SVVideoAdViewControllerProvider
SVVideoAdViewControllerProviding
SVAutomaticFullscreenVideoPlaybackBehaviorManager
SVVideoPlaybackQueue
SVAVPlayerFactory
SVTouchForwardingView
SVVideoPlayerViewController
AVPlayerViewControllerDelegate_WebKitOnly
AVPlayerViewControllerDelegate
AVPlayerViewControllerDelegatePrivate
SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate
UIGestureRecognizerDelegate
SVLearnMoreButton
SVVideoError
allowsPictureInPicturePlayback
isMuted
dictionaryWithObjects:forKeys:count:
bottomAnchor
constraintEqualToAnchor:constant:
trailingAnchor
setEnabled:
presentationSize
allObjects
scheduledTimerWithTimeInterval:repeats:block:
setModalPresentationStyle:
systemTealColor
setBackgroundColor:
blackColor
constraintEqualToAnchor:
tracksWithMediaType:
numberWithInt:
setAutoresizingMask:
isEqualToString:
scaledFontForFont:
loadValuesAsynchronouslyForKeys:completionHandler:
firstObject
systemImageNamed:withConfiguration:
startPictureInPicture
numberWithFloat:
initWithFormat:
tracks
setLoopTimeRange:
viewForKey:
addTarget:action:forControlEvents:
defaultCenter
systemImageNamed:
setAutomaticallyDrawsRoundedCorners:
begin
startAnimating
isCancelled
null
resignFirstResponder
addSubview:
setLocations:
setPreferredForwardBufferDuration:
systemFontOfSize:weight:
nominalFrameRate
configurationWithPointSize:weight:
setValue:forKey:
removeTimeObserver:
addSublayer:
setAudioSession:
length
preferredContentSizeCategory
invalidateIntrinsicContentSize
backgroundColor
setUserInteractionEnabled:
configurationWithPointSize:
customControlsView
viewControllerForFullScreenPresentation
CMTimeValue
setAttributedTitle:forState:
CGRectValue
setUpdatesNowPlayingInfoCenter:
setAlpha:
invalidate
exitFullScreenAnimated:completionHandler:
removeObserver:forKeyPath:
leadingAnchor
view
setCustomControlItems:
topAnchor
initWithActivityIndicatorStyle:
currentTime
setTranslatesAutoresizingMaskIntoConstraints:
commit
errorWithDomain:code:userInfo:
removeObjectForKey:
sizeWithAttributes:
layoutIfNeeded
superview
setAllowsPictureInPicturePlayback:
initAuxiliarySession
titleLabel
colorWithWhite:alpha:
userInterfaceIdiom
insertObject:atIndex:
currentItem
removeObject:
setAllowedAudioSpatializationFormats:
stringWithFormat:
attributedStringWithAttachment:
layer
currentDevice
infoDictionary
addPeriodicTimeObserverForInterval:queue:usingBlock:
playerItemWithAsset:automaticallyLoadedAssetKeys:
setTitleColor:forState:
colorWithRed:green:blue:alpha:
setImage:forState:
assetWithURL:
setAlignment:
colorWithAlphaComponent:
setTitle:forState:
indexOfObject:
removeGestureRecognizer:
lastObject
assetTrack
setAdjustsFontForContentSizeCategory:
setCornerRadius:
removeFromSuperview
setTintColor:
timestamp
addObserver:selector:name:object:
removeFromParentViewController
parentViewController
imageWithTintColor:
setHidesWhenStopped:
CGColor
stopAnimating
addObserver:forKeyPath:options:context:
initWithURL:options:
enterFullScreenAnimated:completionHandler:
asset
setActive:error:
centerYAnchor
CGImage
setContents:
imageView
CMTimeRangeValue
arrayWithObjects:count:
outputVolume
addObject:
removeAllObjects
setActive:
centerXAnchor
isValid
initWithTitle:type:
imageNamed:inBundle:withConfiguration:
countForObject:
setTextAlignment:
metricsForTextStyle:
setContentMode:
sharedInstance
setHidden:
setActionAtItemEnd:
arrayWithObjects:
isReadyForDisplay
statusOfValueForKey:error:
setColors:
mainBundle
initWithTarget:action:
setAction:
countByEnumeratingWithState:objects:count:
array
addGestureRecognizer:
capHeight
setCenter:
localizedStringForKey:value:table:
setAccessibilityElementsHidden:
initWithString:
status
willMoveToParentViewController:
isPlaybackLikelyToKeepUp
setObject:forKey:
addCoordinatedAnimations:completion:
setCategory:mode:routeSharingPolicy:options:error:
setStartPoint:
type
timeControlStatus
domain
copy
setFrame:
setNeedsUpdateConstraints
appendAttributedString:
accessibilityContainer
isPlaybackBufferFull
transportControlsAreaLayoutGuide
addChildViewController:
whiteColor
setCanStartPictureInPictureAutomaticallyFromInline:
setWithArray:
objectForKeyedSubscript:
setFont:
isPictureInPictureSupported
animatedUnobscuredCenterAreaLayoutGuide
weakToStrongObjectsMapTable
bundleForClass:
text
contentOverlayView
addAttribute:value:range:
objectForKey:
_setContinuousCornerRadius:
animateAlongsideTransition:completion:
didMoveToParentViewController:
setRequiresLinearPlayback:
seekToTime:completionHandler:
traitCollection
setBounds:
weakObjectsHashTable
bounds
presentedViewController
setView:
containsObject:
objectEnumerator
setEndPoint:
initWithFrame:
title
font
height
size
intrinsicContentSize
isAccessibilityElement
accessibilityElements
accessibilityLabel
setHidden:withShowDelay:
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
createPlayerItemWithURL:
initWithAutomaticallyLoadedAssetKeys:assetFactory:preferredForwardBufferDuration:
automaticallyLoadedAssetKeys
assetFactory
preferredForwardBufferDuration
.cxx_destruct
_automaticallyLoadedAssetKeys
_assetFactory
_preferredForwardBufferDuration
T@"NSArray",R,C,N,V_automaticallyLoadedAssetKeys
T@"<SVAVURLAssetFactory>",R,N,V_assetFactory
Td,R,N,V_preferredForwardBufferDuration
updateBackgroundColor
layoutSubviews
playImage
accessibilityHint
displayAsPaused
duration
changeBlock
onChange:
Td,R,N
T@?,C,N,SonChange:
initWithPlayerItemObserver:
updateDuration:
setDuration:
playerItemObserver
playerItemDurationObserver
setPlayerItemDurationObserver:
_playerItemObserver
_playerItemDurationObserver
_duration
T@"<SVPlayerItemObserving>",R,N,V_playerItemObserver
T@"SVKeyValueObserver",&,N,V_playerItemDurationObserver
Td,N,V_duration
T@?,C,N,SonChange:,VchangeBlock
isTracking
createURLAssetWithURL:
initWithOptions:
options
_options
T@"NSDictionary",R,C,N,V_options
dealloc
initWithKeyPath:ofObject:withOptions:change:
observeValueForKeyPath:ofObject:change:context:
keyPath
object
change
_keyPath
_object
_change
T@"NSString",R,C,N,V_keyPath
T@"NSObject",R,W,N,V_object
TQ,R,N,V_options
T@?,R,C,N,V_change
_time
_actions
setImage:
image
identifier
setIdentifier:
_image
_identifier
T@"UIImage",&,N,V_image
T@"NSString",C,N,V_identifier
updateCurrentlyPlaying:
registerPlayer:
unregisterPlayer:
timeControlStatusObservers
currentlyPlaying
setCurrentlyPlaying:
_timeControlStatusObservers
_currentlyPlaying
T@"NSMapTable",R,N,V_timeControlStatusObservers
T@"AVPlayer",W,N,V_currentlyPlaying
playbackCoordinatorStartedPlayback:
playbackCoordinatorResumedPlayback:
playbackCoordinatorPausedPlayback:
playbackCoordinatorFinishedPlayback:
playbackCoordinator:playbackFailedWithError:
playbackCoordinator:timeElapsed:duration:
playbackCoordinator:loadingProgressed:
playbackCoordinatorPlaybackBufferFullStateChanged:
playbackCoordinatorPlaybackLikelyToKeepUpStateChanged:
playbackCoordinatorStateChanged:
playbackCoordinatorMuteStateChanged:
playbackCoordinatorStartedLoadingVideo:
playbackCoordinatorFinishedLoadingVideoURL:
muted
volume
volumeChangeBlock
onVolumeChange:
muteStateChangeBlock
onMuteStateChange:
TB,R,N
Tf,R,N
T@?,C,N,SonVolumeChange:
T@?,C,N,SonMuteStateChange:
initWithPlaybackCoordinator:audioSession:
volumeChanged:
updateWithVolume:muted:
playbackCoordinator
audioSession
outputVolumeObserver
_muted
_volume
_volumeChangeBlock
_muteStateChangeBlock
_playbackCoordinator
_audioSession
_outputVolumeObserver
T@"SVPlaybackCoordinator",R,W,N,V_playbackCoordinator
T@"AVAudioSession",R,W,N,V_audioSession
T@"SVKeyValueObserver",R,N,V_outputVolumeObserver
TB,R,N,V_muted
Tf,R,N,V_volume
T@?,C,N,SonVolumeChange:,V_volumeChangeBlock
T@?,C,N,SonMuteStateChange:,V_muteStateChangeBlock
_privateButtonTapped
pointInside:withEvent:
touchInsets
setTouchInsets:
touchUpInsideBlock
onTouchUpInside:
_touchUpInsideBlock
_touchInsets
T{UIEdgeInsets=dddd},N,V_touchInsets
T@?,C,N,SonTouchUpInside:,V_touchUpInsideBlock
playbackInitiatedWithButtonTapped:
startedLoadingVideo
finishedLoadingVideoWithURL:
playbackReadyToStart
playbackStarted
playbackPaused
playbackResumed
playbackFinished
playbackFailedWithError:
timeElapsed:duration:
muteStateChanged:
enteredFullscreen
exitedFullscreen
tappedToToggleControlVisibility:
playbackPassedImpressionThreshold
playbackPassedQuartile:
startedPictureInPicture
stoppedPictureInPicture
impressionThreshold
loadWithCompletionBlock:
skipped
nextVideoStartedPlaying
willUnload
presentAction
skipThreshold
hasAction
prerollReadyToPlayTimeout
metricsView
privacyMarker
TQ,R,N
T@"UIView",R,N
T@"UIButton",R,N
time
framerate
timePlayed
naturalSize
playbackState
videoURL
T{CGSize=dd},R,N
T@"NSURL",R,N
initWithVideo:playerFactory:
playWithButtonTapped:
pause
addPlaybackObserver:
removePlaybackObserver:
setHost:
seekToTime:withCompletionBlock:
loadedTimeRanges
loadingProgress
load
loadVideoIfNeeded
setupPlayerWithURL:
finishedLoadingVideoURL:
loadedTimeRangesChanged
stateChanged
addPlaybackBufferObserver
playbackBufferFullStateChanged
addPlaybackLikelyToKeepUpObserver
playbackLikelyToKeepUpStateChanged
addMuteStateObserver
muteStateChanged
addPlayerItemPresentationSizeObserver
removePlayerItemPresentationSizeObserver
configureTimeline
playbackPausedAtTime:
playbackResumedAtTime:
supportImpressionTracking
supportsQuartileTracking
setState:
setMuted:
playbackLikelyToKeepUp
playbackBufferFull
video
state
dimensions
setDimensions:
host
error
setError:
playbackRequested
setPlaybackRequested:
observers
player
setPlayer:
cancelHandler
setCancelHandler:
initiatedPlayback
setInitiatedPlayback:
playerItemPresentationSizeObserver
setPlayerItemPresentationSizeObserver:
readyForDisplayObserver
setReadyForDisplayObserver:
playerFactory
muteStateObserver
setMuteStateObserver:
playbackLikelyToKeepUpObserver
setPlaybackLikelyToKeepUpObserver:
playbackBufferFullObserver
setPlaybackBufferFullObserver:
timeline
pausedAtTime
setPausedAtTime:
setVideoURL:
readyToPlayTimer
setReadyToPlayTimer:
_playbackLikelyToKeepUp
_playbackBufferFull
_playbackRequested
_initiatedPlayback
_video
_state
_host
_error
_observers
_player
_cancelHandler
_playerItemPresentationSizeObserver
_readyForDisplayObserver
_playerFactory
_muteStateObserver
_playbackLikelyToKeepUpObserver
_playbackBufferFullObserver
_timeline
_pausedAtTime
_videoURL
_readyToPlayTimer
_dimensions
TB,N,V_playbackRequested
T@"NSHashTable",R,N,V_observers
T@"SVAVPlayer",&,N,V_player
T@?,C,N,V_cancelHandler
TB,N,V_initiatedPlayback
T{CGSize=dd},N,V_dimensions
TQ,N,V_state
T@"SVKeyValueObserver",&,N,V_playerItemPresentationSizeObserver
T@"SVKeyValueObserver",&,N,V_readyForDisplayObserver
T@"NSError",&,N,V_error
T@"<SVAVPlayerFactory>",R,N,V_playerFactory
T@"SVKeyValueObserver",&,N,V_muteStateObserver
T@"SVKeyValueObserver",&,N,V_playbackLikelyToKeepUpObserver
T@"SVKeyValueObserver",&,N,V_playbackBufferFullObserver
T@"SVTimeline",R,N,V_timeline
Td,N,V_pausedAtTime
T@"NSURL",&,N,V_videoURL
T@"NSTimer",&,N,V_readyToPlayTimer
T@"<SVVideoProviding>",R,N,V_video
T@"NSArray",R,N
TB,R,N,V_playbackLikelyToKeepUp
TB,R,N,V_playbackBufferFull
T@"NSObject<SVVideoPlaybackHost>",W,N,V_host
TB,N,V_muted
initWithLayer:
layoutSublayers
defaultActionForKey:
initialize
initWithCoder:
videoGravity
setVideoGravity:
playWithPlaybackKind:looping:
play
stillImageLayer
playerLayer
setPlayerLayer:
looper
setLooper:
statusObserver
setStatusObserver:
nonAnimatingDelegate
setNonAnimatingDelegate:
currentPlaybackKind
setCurrentPlaybackKind:
_stillImageLayer
_playerLayer
_looper
_statusObserver
_nonAnimatingDelegate
_currentPlaybackKind
T@"AVPlayerLayer",&,N,V_playerLayer
T@"SVLooper",&,N,V_looper
T@"SVKeyValueObserver",&,N,V_statusObserver
T@"SVNonAnimatingDelegate",&,N,V_nonAnimatingDelegate
TQ,N,V_currentPlaybackKind
T@"SVImageLayer",R,V_stillImageLayer
T@"AVPlayer",&,N
T@"NSString",C,N
layerClass
backgroundView
_backgroundView
T@"AVBackgroundView",R,N,V_backgroundView
initWithPlayer:
durationObserver
_durationObserver
T@"AVPlayer",R,N,V_player
T@"SVVideoDurationObserver",R,N,V_durationObserver
_block
setSkipDuration:
titleForDuration:
skipDuration
_skipDuration
TQ,N,V_skipDuration
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
sharedSessionForMode:
sharedSession
sharedSilentSession
initWithAudioSession:
registerPlaybackControlForPlayer:withMode:
addInterestForPlayer:withMode:
removeInterestForPlayer:
shouldActivateAudioSession
canDeactivateAudioSession
needsToSetupAudioSessionCategory
setupAudioSessionCategory
activateAudioSessionCategory
deactivateAudioSessionCategory
desiredAudioSessionConfiguration
isAudioSessionActive
setAudioSessionActive:
semaphore
players
playbackController
_audioSessionActive
_semaphore
_players
_playbackController
audioSessionActive
TB,N,GisAudioSessionActive,V_audioSessionActive
T@"NSObject<OS_dispatch_semaphore>",R,N,V_semaphore
T@"NSMapTable",R,N,V_players
T@"SVMediaPlaybackController",R,N,V_playbackController
T@"AVAudioSession",R,N,V_audioSession
shouldOccludeAccessibilityElement:
svax_shouldBeOccluded
initWithPlayerItem:
playedToEnd:
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
initWithURL:
initWithURL:audioMode:
initWithPlayerItem:audioMode:
seekToStartWithCompletionBlock:
totalTimePlayed
loadFrameRate
startTimeObserver
updateTime:duration:
stopTimeObserver
addObservers
setElapsedTime:duration:
setPlaybackStatus:
statusChanged
timeControlStatusChanged
durationChanged
audioMode
playbackPosition
setPlaybackPosition:
playbackStatus
playbackStatusBlock
setPlaybackStatusBlock:
playbackProgressBlock
setPlaybackProgressBlock:
loadingProgressBlock
setLoadingProgressBlock:
elapsedTime
setElapsedTime:
frameRate
setFrameRate:
timeObserver
setTimeObserver:
cumulativeTimePlayed
setCumulativeTimePlayed:
timeControlStatusObserver
setTimeControlStatusObserver:
setDurationObserver:
loadedTimeRangesObserver
setLoadedTimeRangesObserver:
_audioMode
_playbackPosition
_playbackStatus
_playbackStatusBlock
_playbackProgressBlock
_loadingProgressBlock
_elapsedTime
_frameRate
_timeObserver
_timeControlStatusObserver
_loadedTimeRangesObserver
_cumulativeTimePlayed
Ti,N,V_playbackStatus
Td,N,V_elapsedTime
Td,N,V_frameRate
T@,&,N,V_timeObserver
T{?=qiIq},N,V_cumulativeTimePlayed
T@"SVKeyValueObserver",&,N,V_timeControlStatusObserver
T@"SVKeyValueObserver",&,N,V_durationObserver
T@"SVKeyValueObserver",&,N,V_loadedTimeRangesObserver
Ti,R,N,V_audioMode
Ti,N,V_playbackPosition
T@?,C,N,V_playbackStatusBlock
T@?,C,N,V_playbackProgressBlock
T@?,C,N,V_loadingProgressBlock
item
T@"AVPlayerItem",R,W,N
setItem:
observer
_changeBlock
_item
_observer
T@"SVKeyValueObserver",R,N,V_observer
T@"AVPlayerItem",W,N,V_item
T@?,C,N,SonChange:,V_changeBlock
initWithCategory:mode:policy:
isEqualToConfiguration:
category
setCategory:
mode
setMode:
routeSharingPolicy
setRouteSharingPolicy:
_category
_mode
_routeSharingPolicy
T@"NSString",C,N,V_category
T@"NSString",C,N,V_mode
TQ,N,V_routeSharingPolicy
viewControllerForModalPresentation
T@"UIViewController",R,N
initWithViewControllerProvider:
viewControllerProvider
_viewControllerProvider
T@"<SVVideoAdViewControllerProviding>",R,W,N,V_viewControllerProvider
fullscreenBehaviorManagerRequiresFullscreenPlayback:
setVideoBounds:
setBehavior:
fullscreenPlaybackRequiredForCurrentConditions
conditionsChanged
videoBounds
behavior
delegate
setDelegate:
_behavior
_delegate
_videoBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
TQ,N,V_behavior
T@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>",W,N,V_delegate
appendItem:
prependItem:
insertItem:afterItem:
advance
count
prefetchItemAfterCoordinatorIfPossible:
queue
_queue
T@"NSMutableArray",R,N,V_queue
createPlayerWithURL:
initWithAudioMode:playerItemFactory:
playerItemFactory
_playerItemFactory
T@"<SVAVPlayerItemFactory>",R,N,V_playerItemFactory
hitTest:withEvent:
touchedBlock
onTouch:
lastTouchTimestamp
setLastTouchTimestamp:
_touchedBlock
_lastTouchTimestamp
Td,N,V_lastTouchTimestamp
T@?,C,N,SonTouch:,V_touchedBlock
initWithNibName:bundle:
learnMoreButtonTapped:
adSkipButtonTapped:
tapped
viewDidLoad
viewDidLayoutSubviews
updateViewConstraints
videoPlayerViewControllerWillExitFullscreen:
videoPlayerViewControllerDidExitFullscreen:
videoPlayerViewControllerWillEnterFullscreen:
videoPlayerViewControllerWillStartPictureInPicture:
videoPlayerViewControllerDidStartPictureInPicture:
videoPlayerViewControllerWillStopPictureInPicture:
videoPlayerViewControllerDidStopPictureInPicture:
videoPlayerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
videoPlayerViewController:startedPlaybackOfVideo:
videoPlayerViewController:pausedPlaybackOfVideo:
videoPlayerViewController:resumedPlaybackOfVideo:
videoAdForVideoPlayerViewController:
videoForVideoPlayerViewController:
videoPlayerViewController:initiatedPlaybackOfVideo:
videoPlayerViewControllerFinishedVideoPlayback:
videoPlayerViewControllerShouldStartPlayback:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
playerViewController:willPresentInterstitialTimeRange:
playerViewController:didPresentInterstitialTimeRange:
playerViewController:shouldExitFullScreenWithReason:
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
playerViewControllerBeginReducingResourcesForPictureInPicture:
playerViewControllerEndReducingResourcesForPictureInPicture:
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
playerViewControllerWillPerformAnalysisCalloutAction:
playerViewController:displayNameForMediaSelectionOption:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
loadView
enterFullscreenWithCompletionBlock:
exitFullscreenWithCompletionBlock:
startPictureInPictureIfPossible
stopPictureInPicture
isPlaying
isLoading
isPictureInPictureActive
addDebuggerAction:
embedVideoPlayerIfNeeded
removeVideoPlayerIfNeeded
isFullscreenInProgress
setFullscreenBehavior:
playerViewController:metricsCollectionEventOccured:
refreshControlsForPlaybackCoordinator:
setupQueueIfNeeded
transitionToCoordinator:
finished
startPlaybackForCoordinatorIfAllowed:
playbackAllowedForPlaybackCoordinator:
updateSkipButtonWithThreshold:time:
updateAdsButtonsVisibility
dataSource
setDataSource:
enablePictureInPictureBehaviors
setEnablePictureInPictureBehaviors:
isFullscreen
setFullscreen:
fullscreenBehavior
playerViewController
setPlayerViewController:
setQueue:
coordinator
setCoordinator:
primaryContentCoordinator
setPrimaryContentCoordinator:
videoAd
setVideoAd:
playButtonTapped
setPlayButtonTapped:
learnMoreButton
setLearnMoreButton:
skipButton
setSkipButton:
adPrivacyButton
setAdPrivacyButton:
adGradientView
setAdGradientView:
activityIndicatorView
setActivityIndicatorView:
videoBoundsObserver
setVideoBoundsObserver:
fullscreenBehaviorManager
volumeObserver
setVolumeObserver:
tapGesture
showsPlaybackControls
setShowsPlaybackControls:
_enablePictureInPictureBehaviors
_fullscreen
_playButtonTapped
_showsPlaybackControls
_dataSource
_fullscreenBehavior
_playerViewController
_coordinator
_primaryContentCoordinator
_videoAd
_learnMoreButton
_skipButton
_adPrivacyButton
_adGradientView
_activityIndicatorView
_videoBoundsObserver
_fullscreenBehaviorManager
_volumeObserver
_tapGesture
T@"SVVideoPlaybackQueue",&,N,V_queue
T@"SVPlaybackCoordinator",&,N,V_coordinator
T@"SVPlaybackCoordinator",&,N,V_primaryContentCoordinator
T@"<SVVideoAdProviding>",&,N,V_videoAd
TB,N,V_playButtonTapped
T@"SVLearnMoreButton",&,N,V_learnMoreButton
T@"SVVideoAdSkipButton",&,N,V_skipButton
T@"SVAdPrivacyButton",&,N,V_adPrivacyButton
T@"SVAdGradientView",&,N,V_adGradientView
T@"UIActivityIndicatorView",&,N,V_activityIndicatorView
T@"SVKeyValueObserver",&,N,V_videoBoundsObserver
T@"SVAutomaticFullscreenVideoPlaybackBehaviorManager",R,N,V_fullscreenBehaviorManager
TQ,N,V_mode
fullscreen
TB,N,GisFullscreen,V_fullscreen
T@"SVVideoVolumeObserver",&,N,V_volumeObserver
T@"UIGestureRecognizer",R,N,V_tapGesture
TB,N,V_showsPlaybackControls
T@"<SVVideoPlayerViewControllerDelegate>",W,N,V_delegate
T@"<SVVideoPlayerViewControllerDataSource>",W,N,V_dataSource
TB,N,V_enablePictureInPictureBehaviors
playing
TB,R,N,GisPlaying
loading
TB,R,N,GisLoading
fullscreenInProgress
TB,R,N,GisFullscreenInProgress
TQ,N,V_fullscreenBehavior
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
T@"AVPlayerViewController",&,N,V_playerViewController
setHighlighted:
traitCollectionDidChange:
videoErrorWithUnderlyingError:
videoErrorWithErrorCode:
errorCodeForUnderlyingErrorDomain:
@16@0:8
d16@0:8
{CGSize=dd}16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
v28@0:8B16d20
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"AVPlayerItem"24@0:8@"NSURL"16
@40@0:8@16@24d32
v16@0:8
@"NSArray"
@"<SVAVURLAssetFactory>"
@?16@0:8
v24@0:8@?16
@?<v@?@"<SVVideoDurationObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoDurationObserving>">16
v40@0:8{?=qiIq}16
v24@0:8d16
v24@0:8@16
@"<SVPlayerItemObserving>"
@"SVKeyValueObserver"
@"AVURLAsset"24@0:8@"NSURL"16
@"NSDictionary"
@48@0:8@16@24Q32@?40
v48@0:8@16@24@32^v40
@"NSString"
@"NSObject"
@"NSMutableArray"
@"UIImage"
@"NSMapTable"
@"AVPlayer"
v32@0:8@16@24
v40@0:8@16d24d32
v32@0:8@16d24
v24@0:8@"SVPlaybackCoordinator"16
v32@0:8@"SVPlaybackCoordinator"16@"NSError"24
v40@0:8@"SVPlaybackCoordinator"16d24d32
v32@0:8@"SVPlaybackCoordinator"16d24
f16@0:8
@?<v@?@"<SVVideoVolumeObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoVolumeObserving>">16
@32@0:8@16@24
v20@0:8f16
v24@0:8f16B20
@"SVPlaybackCoordinator"
@"AVAudioSession"
B40@0:8{CGPoint=dd}16@32
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v20@0:8B16
v32@0:8d16d24
v24@0:8Q16
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
@?24@0:8@?16
@?<v@?>24@0:8@?<@"<SVVideoMetadata>"@?@"NSURL">16
@"UIView"16@0:8
@"UIButton"16@0:8
@"NSURL"16@0:8
v32@0:8d16@?24
v32@0:8{CGSize=dd}16
@"<SVVideoProviding>"
@"NSObject<SVVideoPlaybackHost>"
@"NSError"
@"NSHashTable"
@"SVAVPlayer"
@"<SVAVPlayerFactory>"
@"SVTimeline"
@"NSURL"
@"NSTimer"
{CGSize="width"d"height"d}
v28@0:8Q16B24
@"SVImageLayer"
@"AVPlayerLayer"
@"SVLooper"
@"SVNonAnimatingDelegate"
@"AVBackgroundView"
@"SVVideoDurationObserver"
@24@0:8Q16
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@20@0:8i16
v28@0:8@16i24
@"NSObject<OS_dispatch_semaphore>"
@"SVMediaPlaybackController"
B48@0:8@16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
B48@0:8@"AVPlayerItem"16^{?=qiIq}24^{?=qiIq}32^{?=qiIq}40
@28@0:8@16i24
v64@0:8{?=qiIq}16{?=qiIq}40
v20@0:8i16
i16@0:8
{?=qiIq}16@0:8
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVPlayerItem"16@0:8
@?<v@?@"<SVPlayerItemObserving>">16@0:8
v24@0:8@?<v@?@"<SVPlayerItemObserving>">16
@"AVPlayerItem"
@40@0:8@16@24Q32
@"UIViewController"16@0:8
@"<SVVideoAdViewControllerProviding>"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"<SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"SVAVPlayer"24@0:8@"NSURL"16
@28@0:8i16@20
@"<SVAVPlayerItemFactory>"
@40@0:8{CGPoint=dd}16@32
v32@0:8@16@?24
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"AVInterstitialTimeRange"24
B32@0:8@16q24
B32@0:8@"AVPlayerViewController"16q24
v36@0:8@16B24@28
v48@0:8@16{CGSize=dd}24@40
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
@"UIView"32@0:8@"AVPlayerViewController"16@"UIView"24
v48@0:8@"AVPlayerViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
@"NSString"32@0:8@"AVPlayerViewController"16@"AVMediaSelectionOption"24
v24@0:8@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8@16q24
v32@0:8Q16d24
@"<SVVideoPlayerViewControllerDelegate>"
@"<SVVideoPlayerViewControllerDataSource>"
@"AVPlayerViewController"
@"SVVideoPlaybackQueue"
@"<SVVideoAdProviding>"
@"SVLearnMoreButton"
@"SVVideoAdSkipButton"
@"SVAdPrivacyButton"
@"SVAdGradientView"
@"UIActivityIndicatorView"
@"SVAutomaticFullscreenVideoPlaybackBehaviorManager"
@"SVVideoVolumeObserver"
@"UIGestureRecognizer"
@24@0:8q16
q24@0:8@16
