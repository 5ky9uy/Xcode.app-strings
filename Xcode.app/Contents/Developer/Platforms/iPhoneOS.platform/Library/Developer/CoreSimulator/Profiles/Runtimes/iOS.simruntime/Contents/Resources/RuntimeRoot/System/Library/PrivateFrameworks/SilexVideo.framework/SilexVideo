@(#)PROGRAM:SilexVideo  PROJECT:Silex-1
?ffffff
audioMode
Ti,R,N,V_audioMode
Play
Double tap to begin video playback
NSExtension
NSExtensionPointIdentifier
com.apple.widget-extension
play
play.fill
v8@?0
duration
v24@?0@"SVKeyValueObserver"8@"NSDictionary"16
v16@?0@"AVPlayerItem"8
v16@?0@"<SVPlayerItemObserving>"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Td,R,N
changeBlock
T@?,C,N,SonChange:
playerItemObserver
T@"<SVPlayerItemObserving>",R,N,V_playerItemObserver
playerItemDurationObserver
T@"SVKeyValueObserver",&,N,V_playerItemDurationObserver
Td,N,V_duration
T@?,C,N,SonChange:,VchangeBlock
keyPath
T@"NSString",R,C,N,V_keyPath
object
T@"NSObject",R,W,N,V_object
options
TQ,R,N,V_options
change
T@?,R,C,N,V_change
image
T@"UIImage",&,N,V_image
identifier
T@"NSString",C,N,V_identifier
timeControlStatus
timeControlStatusObservers
T@"NSMapTable",R,N,V_timeControlStatusObservers
currentlyPlaying
T@"AVPlayer",W,N,V_currentlyPlaying
touchInsets
T{UIEdgeInsets=dddd},N,V_touchInsets
touchUpInsideBlock
T@?,C,N,SonTouchUpInside:,V_touchUpInsideBlock
-[SVPlayerLayer setPlayer:]
/Library/Caches/com.apple.xbs/Sources/FeldsparServices_Sim/Feldspar-2624.2/Modules/silex/SilexVideo/Playback/Layer/SVPlayerLayer.m
Tried to re-set an already created AVPlayer!
status
readyForDisplay
playerLayer
T@"AVPlayerLayer",&,N,V_playerLayer
looper
T@"SVLooper",&,N,V_looper
readyForDisplayObserver
T@"SVKeyValueObserver",&,N,V_readyForDisplayObserver
statusObserver
T@"SVKeyValueObserver",&,N,V_statusObserver
nonAnimatingDelegate
T@"SVNonAnimatingDelegate",&,N,V_nonAnimatingDelegate
currentPlaybackKind
TQ,N,V_currentPlaybackKind
stillImageLayer
T@"SVImageLayer",R,V_stillImageLayer
player
T@"AVPlayer",&,N
videoGravity
T@"NSString",C,N
v16@?0@"<SVVideoDurationObserving>"8
T@"AVPlayer",R,N,V_player
durationObserver
T@"SVVideoDurationObserver",R,N,V_durationObserver
audioSessionActive
TB,N,GisAudioSessionActive,V_audioSessionActive
semaphore
T@"NSObject<OS_dispatch_semaphore>",R,N,V_semaphore
players
T@"NSMapTable",R,N,V_players
playbackController
T@"SVMediaPlaybackController",R,N,V_playbackController
currentItem
item
T@"AVPlayerItem",R,W,N
observer
T@"SVKeyValueObserver",R,N,V_observer
T@"AVPlayerItem",W,N,V_item
T@?,C,N,SonChange:,V_changeBlock
category
T@"NSString",C,N,V_category
mode
T@"NSString",C,N,V_mode
routeSharingPolicy
TQ,N,V_routeSharingPolicy
*** Assertion failure (Identifier: catch-all) : %s %s:%d %{public}@
SVPlayer
SVVideoPlayButton
SVVideoDurationObserver
SVVideoDurationObserving
NSObject
SVKeyValueObserver
SVBundleClass
SVImageLayer
SVMediaPlaybackController
SVButton
SVPlayerLayer
SVLooper
SVNonAnimatingDelegate
CALayerDelegate
SVAudioSession
SVAXElementOcclusion
SVPlayerItemObserver
SVPlayerItemObserving
SVAudioSessionConfiguration
initWithPlayerItem:
sharedSession
addInterestForPlayer:withMode:
removeInterestForPlayer:
dealloc
initWithAudioMode:
audioMode
_audioMode
initWithFrame:
whiteColor
setTintColor:
colorWithRed:green:blue:alpha:
setBackgroundColor:
defaultCenter
updateBackgroundColor
addObserver:selector:name:object:
displayAsPaused
backgroundColor
colorWithAlphaComponent:
layoutSubviews
layer
bounds
setCornerRadius:
imageView
setBounds:
setCenter:
svax_shouldBeOccluded
localizedStringForKey:value:table:
mainBundle
infoDictionary
objectForKeyedSubscript:
isEqualToString:
bundleForClass:
imageNamed:inBundle:withConfiguration:
configurationWithPointSize:
configurationWithWeight:
configurationByApplyingConfiguration:
systemImageNamed:withConfiguration:
imageWithTintColor:
playImage
setImage:forState:
isAccessibilityElement
accessibilityLabel
accessibilityHint
init
duration
updateDuration:
objectForKey:
CMTimeValue
initWithKeyPath:ofObject:withOptions:change:
setPlayerItemDurationObserver:
playerItemObserver
item
onChange:
setDuration:
changeBlock
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
initWithPlayerItemObserver:
playerItemDurationObserver
.cxx_destruct
_playerItemObserver
_playerItemDurationObserver
_duration
copy
addObserver:forKeyPath:options:context:
object
keyPath
removeObserver:forKeyPath:
change
observeValueForKeyPath:ofObject:change:context:
options
_keyPath
_object
_options
_change
CGImage
setContents:
setImage:
image
identifier
setIdentifier:
_image
_identifier
weakToStrongObjectsMapTable
pause
setCurrentlyPlaying:
currentlyPlaying
timeControlStatus
updateCurrentlyPlaying:
timeControlStatusObservers
setObject:forKey:
removeObjectForKey:
registerPlayer:
unregisterPlayer:
_timeControlStatusObservers
_currentlyPlaying
_privateButtonTapped
addTarget:action:forControlEvents:
pointInside:withEvent:
touchInsets
touchUpInsideBlock
setTouchInsets:
onTouchUpInside:
_touchUpInsideBlock
_touchInsets
setDelegate:
addSublayer:
sceneDidEnterBackground
sceneWillEnterForeground
reduceMotionStatusDidChange
initialize
initWithLayer:
layoutSublayers
stillImageLayer
setFrame:
playerLayer
player
initWithFormat:
setPlayer:
status
setHidden:
videoGravity
begin
setValue:forKey:
setVideoGravity:
commit
null
setCurrentPlaybackKind:
initWithPlayer:
setLooper:
isReadyForDisplay
setReadyForDisplayObserver:
play
playWithPlaybackKind:looping:
currentPlaybackKind
defaultActionForKey:
initWithCoder:
setPlayerLayer:
looper
readyForDisplayObserver
statusObserver
setStatusObserver:
nonAnimatingDelegate
setNonAnimatingDelegate:
_stillImageLayer
_playerLayer
_looper
_readyForDisplayObserver
_statusObserver
_nonAnimatingDelegate
_currentPlaybackKind
setLoopTimeRange:
durationObserver
_player
_durationObserver
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
playbackController
semaphore
players
numberWithInt:
registerPlaybackControlForPlayer:withMode:
setupAudioSessionCategory
activateAudioSessionCategory
deactivateAudioSessionCategory
count
sharedInstance
desiredAudioSessionConfiguration
category
mode
routeSharingPolicy
initWithCategory:mode:policy:
isEqualToConfiguration:
needsToSetupAudioSessionCategory
setCategory:mode:routeSharingPolicy:options:error:
isAudioSessionActive
shouldActivateAudioSession
setActive:error:
setAudioSessionActive:
canDeactivateAudioSession
objectEnumerator
allObjects
setWithArray:
countForObject:
_audioSessionActive
_semaphore
_players
_playbackController
accessibilityContainer
shouldOccludeAccessibilityElement:
setItem:
currentItem
observer
_changeBlock
_item
_observer
setCategory:
setMode:
setRouteSharingPolicy:
_category
_mode
_routeSharingPolicy
@20@0:8i16
v16@0:8
i16@0:8
@16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
d16@0:8
@?16@0:8
v24@0:8@?16
@?<v@?@"<SVVideoDurationObserving>">16@0:8
v24@0:8@?<v@?@"<SVVideoDurationObserving>">16
@24@0:8@16
v40@0:8{?=qiIq}16
v24@0:8d16
v24@0:8@16
@"<SVPlayerItemObserving>"
@"SVKeyValueObserver"
@48@0:8@16@24Q32@?40
v48@0:8@16@24@32^v40
@"NSString"
@"NSObject"
@"UIImage"
@"NSMapTable"
@"AVPlayer"
B40@0:8{CGPoint=dd}16@32
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v28@0:8Q16B24
v24@0:8Q16
@"SVImageLayer"
@"AVPlayerLayer"
@"SVLooper"
@"SVNonAnimatingDelegate"
@"SVVideoDurationObserver"
v32@0:8@16^{CGContext=}24
@32@0:8@16@24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
v28@0:8@16i24
v20@0:8B16
@"NSObject<OS_dispatch_semaphore>"
@"SVMediaPlaybackController"
@"AVPlayerItem"16@0:8
@?<v@?@"<SVPlayerItemObserving>">16@0:8
v24@0:8@?<v@?@"<SVPlayerItemObserving>">16
@"AVPlayerItem"
@40@0:8@16@24Q32
