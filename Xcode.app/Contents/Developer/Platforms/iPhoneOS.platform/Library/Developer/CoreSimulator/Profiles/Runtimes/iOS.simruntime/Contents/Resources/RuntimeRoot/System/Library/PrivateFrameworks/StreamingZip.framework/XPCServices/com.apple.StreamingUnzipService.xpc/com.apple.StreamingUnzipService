unzip_service
v8@?0
com.apple.streamingzip
-[StreamingUnzipServiceDelegate listener:shouldAcceptNewConnection:]
Got connection from process %@ at qos %@
EnableDebugLogging
main
Debug logging is enabled
Feb 10 2023
09:36:10
Streaming unzip service built at %s %s started
main_block_invoke
Got SIGTERM; Exiting...
%@ (pid %d)
Unknown Process Name (pid %d)
USER_INTERACTIVE
USER_INITIATED
DEFAULT
UTILITY
BACKGROUND
UNSPECIFIED
UNKNOWN_QOS: 0x%x
SHA1
Removed1
Removed2
SHA224
SHA256
SHA384
SHA512
StreamingZip
Failed to create log string
%s: %s:%d (0x%p): %s
META-INF/
META-INF/com.apple.ZipMetadata.plist
META-INF/com.apple.FixedZipMetadata.bin
RecordCount
TotalUncompressedBytes
Version
StandardFilePerms
StandardDirectoryPerms
SZExtractorOptionsHashType
SZExtractorOptionsHashesArray
SZExtractorOptionsHashedChunkSize
SZExtractorOptionsDenyInvalidSymlinks
SZExtractorOptionsPerformCachedWrites
SZExtractorOptionsQuarantineInfo
SZExtractorHashTypeMD5
SZExtractorHashTypeSHA1
SZExtractorHashTypeSHA224
SZExtractorHashTypeSHA256
SZExtractorHashTypeSHA384
SZExtractorHashTypeSHA512
SZExtractorOptionsAssertQOS
-[SZExtractor init]
options
extractionPath
isLocalExtractor
-[SZExtractor initWithCoder:]
%@: deserialized
-[SZExtractor encodeWithCoder:]
%@: suspending stream in preparation for serializing ourselves
-[SZExtractor encodeWithCoder:]_block_invoke
%@: Suspending stream prior to encoding failed with error: %@
v24@?0Q8@"NSError"16
%@: serialized
SZExtractorOptionsHashesArray must be an array, but is a %@
SZExtractor requires SZExtractorOptionsHashedChunkSize if passing multiple hashes in SZExtractorOptionsHashesArray
-[SZExtractor _setUpWithPath:options:]
%@: initialized with path: %@ options: %@
-[SZExtractor _synchronouslyPrepareForExtractionAtOffset:]_block_invoke
%@: prepare for extraction failed: %@
+[SZExtractor _serviceConnectionWithError:]
Failed to create NSXPCConnection
com.apple.StreamingZip.SZExtractorBufferSubmissionQueue
-[SZExtractor _prepareForRemoteExtractionSynchronously:withCompletionBlock:]_block_invoke
Connection interrupted to streaming unzip service.
Connection invalidated to streaming unzip service.
Failed to create extraction directory at path %@: %@
Failed to realpath "%@" at "%s": %s
com.apple.StreamingUnzipService
Failed to issue sandbox extension for "%s" : %s
%@: prepare returning error %@
v16@?0@"NSError"8
%@: calling prepare completion block with offset %llu, error %@
v24@?0@"NSError"8Q16
com.apple.StreamingZip.SZExtractor_in_process
In-process unzipper
-[SZExtractor _prepareForLocalExtraction:]_block_invoke
com.apple.StreamingZip.SZExtractor_in_proces_delegate
-[SZExtractor _prepareForExtractionSynchronously:withCompletionBlock:]
%@: preparing
extractionPath was nil. Did you mean to call -prepareForExtractionToPath:completionBlock: instead?
Calling %s after any calls to other non-init methods on this instance is an error.
%@: prepare called on extractor that had already returned error %@
%@: prepare called on object that was already prepared; returning resumption offset %llu
-[SZExtractor prepareForExtractionToPath:completionBlock:]
%@: preparing for extraction to path %@
-[SZExtractor _invalidateObject]
%@: invalidating
com.apple.streamingzip.signposts
v20@?0@"NSError"8B16
-[SZExtractor supplyBytes:withCompletionBlock:]
%@: supply called on extractor that had already returned error %@
%s called before -[SZExtractor prepareForExtraction:] on %@
%s called on an invalidated object: %@
-[SZExtractor supplyBytes:withCompletionBlock:]_block_invoke
%@: calling completion block with error %@
%@: calling completion block with no error, dataComplete=%c
v28@?0@"NSError"8B16Q20
Supplying entire byte range data of length %lu
Already processed {%lu, %lu}
Reserved %ld bytes; adding to existing length %ld
Failed to reserve last range; falling out with last range {%lu, %lu}
v40@?0r^v8{_NSRange=QQ}16^B32
SZExtractor.m
NSNotFound != lastByteRange.location
Waiting for %lu bytes to become available
Reserved %ld bytes for too-big partial range {%lu, %lu}
Reserved %ld bytes at %ld for too-big partial range {%lu, %lu}
Supplying byte range data of length %lu at location %lu
Active partial range {%lu, %lu} exhausted
-[SZExtractor _suspendStreamWithCompletionBlockSynchronously:completion:]
%@: suspending stream
%@: suspend called on extractor that had already returned error %@
-[SZExtractor _suspendStreamWithCompletionBlockSynchronously:completion:]_block_invoke
%@: calling completion block with offset %llu, error %@
-[SZExtractor finishStreamWithCompletionBlock:]
%@: finishing stream
%@: finish called on extractor that had already returned error %@
-[SZExtractor finishStreamWithCompletionBlock:]_block_invoke
-[SZExtractor terminateStreamWithError:completionBlock:]
%@: terminating stream with error %@
%@: terminate called on extractor that had already returned error %@
-[SZExtractor terminateStreamWithError:completionBlock:]_block_invoke
-[SZExtractor setExtractorDelegate:]
%@: %s was called before -[SZExtractor prepareForExtraction:]; this doesn't do anything
%@: %s was called on an invalidated object
%@: Setting extractor delegate to 0x%p
-[SZExtractor setActiveExtractorDelegateMethods:]
%@: setting active extractor delegate methods to 0x%x
-[SZExtractor setActiveExtractorDelegateMethods:]_block_invoke
%@: Failed to set delegate methods enabled: %@
pathEnding:%@/%@
path:nil
<%@<%p> prepared:%c valid:%c %@ error:%@>
+[SZExtractor(Testing) servicePIDWithError:]_block_invoke
remoteObjectProxy returning error %@
v20@?0i8@"NSError"12
XX_REMOVEME_XX
SerializationVersion
StreamInfoDict
LastChunkPartialHash
UnsureData
InMemoryFileData
LocalFileRecord
StageBytesComplete
CurrentOffset
CurrentCRC32
RecordsProcessed
LocalFileMode
StreamState
StoreCurrentFileInMemory
OpenCurrentOutputFile
CurrentOutputFileOffset
TotalFileSizeWritten
SerializedCompressionState
HashContext
DataDescriptorUnion
com.apple.StreamingUnzipResumptionData
-[StreamingUnzipState init]
StreamingUnzipState.m
false
-[StreamingUnzipState setStreamState:]
Updating stream state from %@ to %@
kStreamStateCompleteLFData == _streamState || kStreamStateIncompleteLFRecord == _streamState
kStreamStateReadNextRecordSignature == _streamState
kStreamStateIncompleteLFRecord == _streamState
kStreamStateIncompleteLFData == _streamState
kStreamStateIncompleteDataDescriptor == _streamState|| kStreamStateIncompleteLFData == _streamState || kStreamStateIncompleteLFRecord == _streamState
-[StreamingUnzipState serializeState]
Failed to create archive for passthrough EA on path %@
Failed to set passthrough EA %s on path %@: %s
Mismatch between uncompressed bytes output (%llu) and output file offset (%lld)
Failed to create archive for resumption data to path %@
Serializing %lu bytes of resumption data for offset %llu
Failed to save resumption data to path %@: %@
-[StreamingUnzipState _checkHashForOffset:]
Cannot validate hash; this chunk is index %llu, but we only have %lu hashes.
Hash mismatch for chunk containing offset %llu: expected %@, got %@
Verified that hashed data offset %llu matches index %llu: %@
-[StreamingUnzipState checkLastChunkPartialHash]
Hash mismatch for last partial chunk: expected %@, got %@
Verified that last chunk partial hash matches: %@
-[StreamingUnzipState updateHashFromOffset:withBytes:length:onlyFinishCurrentChunk:]
Ambiguous or missing hash chunk size: chunk size is %llu but have %lu hashes
sizeToHash <= length
_bytesHashedInChunk <= _hashedChunkSize
-[StreamingUnzipState finishStream]
Finishing an incomplete stream! This stream will not be resumable.
-[StreamingUnzipState openCurrentOutputFDForPath:withOpenFlags:mode:error:]
Failed to open %s : %d (%s)
Could not mark %s static: %d (%s)
Unable to set F_NOCACHE accessing file %s : %d (%s)
Unable to set F_SINGLE_WRITER on %s : %d (%s)
-[StreamingUnzipState initWithPath:options:error:]
Failed to init
Options dictionary supplied has one or more options with an incorrect type: %@
Could not allocate memory for local file record
Ambiguous chunk size (hashes > 1 but chunkSize == 0)
Hash chunk size given as > 0, but no hashes
Performing cached writes to extraction under %@
Failed to stat path %@: %s
Extraction path at %@ should be a file or directory, but was not (had mode 0x%ho)
Failed to get size of xattr %s from path %@: %s
Expected to read %ld bytes but got %ld for EA %s on %@; resuming from offset 0
Failed to remove EA %s from %s: %s
Found resumption data version %d, but expected %d at %@; resuming from offset 0
Unable to deserialize resumption data (%@); resuming from offset 0
Computed index of current hash chunk (%llu) is not within supplied hashes array of %lu elements; resuming from offset 0
Serialized %s context (%lu bytes) did not match size of struct (%lu bytes); resuming from offset 0
Failed to open output file at path %@
Failed to read resumption data from path %@: %@; starting from offset 0
Failed to remove %@: %@
Failed to deserialize resumption data (%@); resuming from offset 0
Failed to get path from current local file record.
Resuming %@ at offset %lld
Failed to get serialized compression state from save data
Compression save state was not valid.
Failed to seek to offset %llu in output file at path %@: %s
Invalid state in resumption data at path %@
ReadNextRecordSignature
IncompleteLFRecord
IncompleteLFData
IncompleteDataDescriptor
CompleteLFData
WriteThrough
FinishHashing
Complete
Error
Unknown
com.apple.StreamingPassthroughResumptionData
_ValidateDictionaryKeyValueType
Value of key %@ in options dictionary was not an object of type %@. Was %@
_HashTypeForString
Unsupported hash type: %@. Defaulting to MD5
_RemoveAndRecreateDirectoryAtPath
Failed to remove bad extraction path at %@: %@
_GetDataProtectionClassForPath
Failed to open %s : %s
Failed to get protection class on %s : %s
_SetDataProtectionClassOnPath
Failed to set protection class on %s to %d: %s
Unzip session on behalf of %@
-[StreamingUnzipper setupUnzipperWithOutputPath:sandboxExtensionToken:options:withReply:]
Streaming Unzipper running with unexpected QOS: expected=0x%x actual=0x%x
Failed to consume sandbox extension token "%s" for "%@" : %s
Initialized with path %@ ; hashed chunk size %llu ; hashes %@
StreamingUnzipper.m
error || _currentState
com.apple.streamingzip.incomplete_extraction
Failed to set incomplete extraction xattr on %@ : %s
-[StreamingUnzipper setActiveDelegateMethods:]
Set active delegate methods to 0x%x
-[StreamingUnzipper dealloc]
Deallocating state for extraction to %@
-[StreamingUnzipper _setErrorState]
Failed to remove unzip path at %@ : %@
-[StreamingUnzipper _beginNonStreamablePassthroughWithRemainingBytes:length:]
Beginning passthrough of non-streamable zip file to %@
Failed to open passthrough output file at %@
Failed to write initial data to passthrough output file: %s
Failed to write remaining initial data to passthrough output file: %s
-[StreamingUnzipper _supplyBytes:length:withReply:]
Unzipper did not have any state! Client should suspend stream and resume from the given offset.
_currentState.currentLFRecord
_currentState.thisStageBytesComplete <= peekSignatureSize
Got unexpected local file signature %c%c%c%c ; entering passthrough mode
Finished central directory signature at offset %llu and we are also at a chunk boundary.
Last chunk's partial hash did not validate (store hashed chunk size mismatch?); consuming more data to check full chunk.
No last chunk partial hash; will need full chunk to validate.
Finished central directory signature; updating hash with remainder of stream data
After hitting Central Directory, we had enough data already to finish the chunk
lengthToRead == length
After hitting Central Directory, we need more data to finish the chunk
Encountered unexpectedly non-stream-compliant data in stream!
Got zero-length filename; entering passthrough mode
Encountered zero-length filename for local file record at offset %llu
Got unexpected compression method: %hu; entering passthrough mode
Encountered unsupported compression method %hu in stream at offset %llu
_currentState.thisStageBytesComplete >= sizeof(LocalFileRecord)
_currentState.thisStageBytesComplete == fullLFRSize
File has 0-length compressed size but non-zero uncompressed size; entering passthrough mode
Encountered inconsistency in stream data: file at offset %llu has a 0-length compressed size but a non-zero uncompressed size
Stored file has compressed size != uncompressed size; entering passthrough mode
Encountered inconsistency in stream data: file at offset %llu is stored without compression but the uncompressed and compressed sizes are not equal (%llu != %llu)
Failed to get filename for file; entering passthrough mode
Failed to get filename for file at offset %llu.
Got directory %s with non-zero compressed data size; entering passthrough mode
Directory %s has a non-zero compressed size; directories aren't supposed to have data.
_currentState.recordsProcessed <= 2
mimetype
Item %lld (%s) in archive was not 'mimetype' or %s; entering passthrough mode
File %s is metadata file, so keeping in memory
File %s is fixed metadata file, so keeping in memory
File %s is a symlink (mode = 0%o), so keeping in memory
File %s is larger than 5 MB (%llu) so not keeping in memory
Parent path %@ did not exist
Failed to create parent directory %@: %s
Can't determine if parent path exists %@: %s
Failed to create directory at path %@: %s
Failed to set proper mode on directory %@: %s
_currentState.currentOutputFD < 0
advisory preallocation of %lld bytes for %@ failed: %s
_currentState.currentOutputFD >= 0
Failed to write data to output file %@: %s
Failed to initialize compression: %d
compression_stream_process consumed %zu bytes
outputSize >= cmpState->dst_size
compression_stream_process did not consume data for output file %@; input buffer size: %zu, output buffer size: %zu
compression_stream_process returned unexpected result %d
Failed to write decompressed data to output file %@ : %s
Hit compression stream end with %llu compressed bytes remaining for file %@
Hit compression stream end at %llu bytes output for file %@, but expected uncompressed file size of %llu bytes
Unknown compression method %hu for file %@
0 == length
_currentState.thisStageBytesComplete == expected_size
Data descriptor did not match expected signature (found 0x%02hhx%02hhx%02hhx%02hhx); entering passthrough mode
Data descriptor did not match expected signature (found 0x%02hhx%02hhx%02hhx%02hhx).
Got data descriptor with CRC 0x%x, uncompressed size %llu, compressed size %llu
Got data descriptor with CRC 0x%x, uncompressed size %u, compressed size %u
Decompression failed to produce all expected output data for file %@; produced %llu bytes, expected %llu
CRC mismatch; got: 0x%lx expected: 0x%x for file %@
Couldn't get filename for stream metadata file; entering passthrough mode
Couldn't get filename for current file "%s"
_currentState.inMemoryFileData
Failed to decode stream metadata; entering passthrough mode
Failed to read stream metadata from %@; entering passthrough mode
Got stream metadata: %@
Stream metadata was incompatible version or not present; entering passthrough mode
Failed to read fixed stream metadata from %@: %@
Got last chunk partial hash %@
Found last chunk partial hash data but the hash was not computed.
Got a fixed metadata file that did not match expected content (length %lu). Ignoring.
Failed to read symlink path from %@
Invalid symlink: %s -> %s (absolute symlinks are forbidden)
Invalid symlink: %s -> %s
Failed to create symlink at %s to %s: %s
Failed to set mode of %@ to 0%o: %s
Not doing anything with data for file %@
Failed to write data to passthrough output file: %s
Invalid unzip state encountered: %hhu
-[StreamingUnzipper supplyBytes:withReply:]_block_invoke
Got block of length %lu at offset %lu
-[StreamingUnzipper suspendStreamWithReply:]
Suspending extraction at offset %llu for %@
-[StreamingUnzipper finishStreamWithReply:]
Finishing extraction for %@
Failed to remove xattr named %s on %@ : %s
-[StreamingUnzipper terminateStreamWithReply:]
Unzipper did not have any state, but the client was terminating the stream anyway.
Terminating extraction for %@
_GetUncompressedSize
currentState.streamState > kStreamStateIncompleteDataDescriptor
NULL != currentState.dataDescriptor
_GetCompressedSize
_GetCRC32
_CheckRealpathHasBasePrefix
Call to realpath failed for suspicious path %s: %s
Rejecting "%s" because its resolved path "%@" points outside or to the unzip dir %@
_ValidateAllSymlinksUnderPath
base directory path cannot be nil
base directory URL cannot be nil (created from path: "%@")
B24@?0^{_ftsent=^{_ftsent}^{_ftsent}^{_ftsent}q^v**iiSSQiSsSSS^{stat}[1c]}8^@16
_TraverseDirectory
directory url fileSystemRepresentation cannot be NULL
fts_open failed for %s with error %s
Error for path %s: %s
fts_close on FTS for %s returned %s
SZExtractorErrorDomain
SZExtractorFileOffsetErrorKey
SZExtractorCompressionLibErrorKey
SZExtractorFunctionNameErrorKey
SZExtractorSourceFileLineErrorKey
SZExtractorActualHashValueErrorKey
SZExtractorHashChunkIndexErrorKey
GetFileNameStringFromLocalFileRecord
Failed to get name from local file record.
%02x
StreamingUnzipServiceDelegate
NSXPCListenerDelegate
NSObject
StreamingUnzipProtocol
StreamingUnzipDelegateProtocol
SZExtractorInternalDelegate
SZExtractor
NSSecureCoding
NSCoding
STExtractor
NSCopying
Testing
SZAdditions
StreamingUnzipState
StreamingUnzipper
T@"SZExtractorInternalDelegate",R,N,V_internalExtractorDelegate
SZ_stringByDeletingTrailingSlashes
_dataDescriptor
T@"<STExtractorDelegate>",W,N
_hashes
T@"<SZExtractorDelegate>",W,Vdelegate
clearSavedState
T@"NSDictionary",&,N,V_streamInfoDict
currentLFRequiresDataDescriptor
T@"NSError",&,N,V_error
dealloc
T@"NSMutableData",&,N,V_unsureData
isProxy
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
release
T@"NSString",C,N,V_extractionPath
setStreamState:
T@"NSString",R,N,V_unzipPath
.cxx_destruct
TB,N,V_storeCurrentFileInMemory
T#,R
_extractionPath
T@"<SZExtractorDelegate>",W,N
_streamInfoDict
T@"<StreamingUnzipDelegateProtocol>",W,N,VinProcessExtractorDelegate
currentLFRecord
T@"NSDictionary",R,C,N,V_options
currentOutputFD
T@"NSMutableData",&,N,V_inMemoryFileData
hashedChunkSize
T@"NSObject<OS_dispatch_queue>",&,N,VinProcessDelegateQueue
options
T@"NSString",&,N,V_lastChunkPartialHash
serviceListener
T@"NSString",R,C
stringByAppendingPathComponent:
T@"NSXPCConnection",R,N,V_unzipServiceConnection
T@"NSXPCConnection",W,N,VxpcConnection
T@"StreamingUnzipper",R,N,V_inProcessUnzipper
TB,N,V_currentLFRequiresDataDescriptor
TB,N,V_denyInvalidSymlinks
TB,N,V_hasHadPostSetupMethodsCalled
TB,N,V_needsPreparation
TB,N,V_performCachedWrites
TB,N,V_performingExtraction
TB,R
TB,R,D,N
TB,R,N
TB,R,N,V_isLocalExtractor
TC,N,V_streamState
TQ,N,V_currentCRC32
TQ,N,V_currentLFRecordAllocationSize
TQ,N,V_currentOffset
TQ,N,V_lastResumptionOffset
TQ,N,V_recordsProcessed
TQ,N,V_thisStageBytesComplete
TQ,N,V_totalFileSizeWritten
TQ,N,V_totalRecordCount
TQ,N,V_totalUncompressedBytes
TQ,N,V_uncompressedBytesOutput
TQ,R
TQ,R,N,V_bytesHashedInChunk
TQ,R,N,V_hashedChunkSize
TS,N,V_currentLFMode
T^{?=*Q*Q^v},R,N
T^{?=[4C](?={?={?=I}{?=Q}{?=Q}}{?={?=I}{?=I}{?=I}})},N,V_dataDescriptor
T^{?=[4C]{?=S}{?=S}{?=S}(?={?={?=S}{?=S}}{?=I}){?=I}{?=I}{?=I}{?=S}{?=S}[0C]},N,V_currentLFRecord
Ti,N,V_currentOutputFD
T{?=i(?={CC_MD5state_st=IIIIII[16I]i}{CC_SHA1state_st=IIIIIII[16I]i}{CC_SHA256state_st=[2I][8I][16I]}{CC_SHA256state_st=[2I][8I][16I]}{CC_SHA512state_st=[2Q][8Q][16Q]}{CC_SHA512state_st=[2Q][8Q][16Q]})},R,N,V_hashContext
UTF8String
_activeDelegateMethods
_beginNonStreamablePassthroughWithRemainingBytes:length:
_bytesHashedInChunk
_checkHashForOffset:
_cmpState
_currentCRC32
_currentLFMode
_currentLFRecord
_currentLFRecordAllocationSize
_currentLFRequiresDataDescriptor
_currentOffset
_currentOutputFD
_currentState
_decompressionOutputBuffer
_denyInvalidSymlinks
_error
_extractionEnteredPassThroughMode
_hasHadPostSetupMethodsCalled
_hashContext
_hashedChunkSize
_inMemoryFileData
_inProcessUnzipper
_internalExtractorDelegate
_internalSetStreamState:
_invalidateObject
_isLocalExtractor
_isValidObject
_lastChunkPartialHash
_lastExtractionProgressSent
_lastResumptionOffset
_lastResumptionSavedOffset
_needsPreparation
_options
_performCachedWrites
_performingExtraction
_prepareForExtractionSynchronously:withCompletionBlock:
_prepareForLocalExtraction:
_prepareForRemoteExtractionSynchronously:withCompletionBlock:
_recordsProcessed
_sandboxToken
_sendExtractionCompleteAtArchivePath:
_sendExtractionProgress:
_serialQueue
_serviceConnectionWithError:
_sessionTransaction
_setErrorState
_setUpWithPath:options:
_storeCurrentFileInMemory
_streamState
_supplyBytes:length:withReply:
_suspendStreamWithCompletionBlockSynchronously:completion:
_synchronouslyPrepareForExtractionAtOffset:
_thisStageBytesComplete
_totalFileSizeWritten
_totalRecordCount
_totalUncompressedBytes
_uncompressedBytesOutput
_unsureData
_unzipPath
_unzipServiceConnection
allocWithZone:
appendBytes:length:
appendFormat:
autorelease
boolForKey:
boolValue
bytes
bytesHashedInChunk
caseInsensitiveCompare:
checkLastChunkPartialHash
class
cmpState
code
componentsJoinedByString:
componentsSeparatedByString:
conformsToProtocol:
contentsOfDirectoryAtPath:error:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentCRC32
currentLFMode
currentLFRecordAllocationSize
currentOffset
dataDescriptor
dataWithBytesNoCopy:length:freeWhenDone:
dataWithCapacity:
dataWithContentsOfFile:options:error:
debugDescription
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeIntForKey:
decodeObjectOfClass:forKey:
decodePropertyListForKey:
defaultCStringEncoding
defaultManager
delegate
denyInvalidSymlinks
description
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
doesConsumeExtractedData
domain
enableDebugLogging
encodeBool:forKey:
encodeBytes:length:forKey:
encodeInt:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedData
enumerateByteRangesUsingBlock:
error
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
extractionCompleteAtArchivePath:
extractionEnteredPassThroughMode
extractionPath
extractorDelegate
fileExistsAtPath:
fileSystemRepresentation
fileSystemRepresentationWithPath:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileURLWithPath:isDirectory:
finishDecoding
finishStream
finishStreamWithCompletionBlock:
finishStreamWithReply:
getBytes:length:
getPidForTestingWithReply:
hasHadPostSetupMethodsCalled
hash
hashContext
inMemoryFileData
inProcessDelegateQueue
inProcessExtractorDelegate
inProcessUnzipper
init
initForClient:
initForLocalExtractionWithPath:options:resumptionOffset:
initForReadingFromData:error:
initForRemoteExtractionWithPath:options:resumptionOffset:
initRequiringSecureCoding:
initWithBytes:length:encoding:
initWithCoder:
initWithFormat:arguments:
initWithOptions:
initWithPath:md5Hashes:hashedChunkSize:resumptionOffset:
initWithPath:options:
initWithPath:options:error:
initWithPath:options:resumptionOffset:
initWithPath:resumptionOffset:
initWithServiceName:
inputStreamWithFileAtPath:
intValue
interfaceWithProtocol:
internalExtractorDelegate
invalidate
isEqual:
isEqualToString:
isKindOfClass:
isLocalExtractor
isMemberOfClass:
lastChunkPartialHash
lastPathComponent
lastResumptionOffset
length
listener:shouldAcceptNewConnection:
markResumptionPoint
mutableBytes
mutableCopy
needsPreparation
numberWithInt:
numberWithUnsignedChar:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
openCurrentOutputFDForPath:withOpenFlags:mode:error:
path
pathComponents
performCachedWrites
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performingExtraction
prepareForExtraction:
prepareForExtractionToPath:completionBlock:
processIdentifier
propertyListWithData:options:format:error:
propertyListWithStream:options:format:error:
recordsProcessed
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
removeItemAtPath:error:
removeObjectAtIndex:
respondsToSelector:
resume
retain
retainCount
self
serialQueue
serializeState
servicePIDWithError:
setActiveDelegateMethods:
setActiveExtractorDelegateMethods:
setCurrentCRC32:
setCurrentLFMode:
setCurrentLFRecord:
setCurrentLFRecordAllocationSize:
setCurrentLFRequiresDataDescriptor:
setCurrentOffset:
setCurrentOutputFD:
setDataDescriptor:
setDecodingFailurePolicy:
setDelegate:
setDenyInvalidSymlinks:
setError:
setExportedInterface:
setExportedObject:
setExtractionPath:
setExtractionProgress:
setExtractorDelegate:
setHasHadPostSetupMethodsCalled:
setInMemoryFileData:
setInProcessDelegateQueue:
setInProcessExtractorDelegate:
setInterruptionHandler:
setInvalidationHandler:
setLastChunkPartialHash:
setLastResumptionOffset:
setLength:
setNeedsPreparation:
setObject:forKeyedSubscript:
setOutputFormat:
setPerformCachedWrites:
setPerformingExtraction:
setRecordsProcessed:
setRemoteObjectInterface:
setStoreCurrentFileInMemory:
setStreamInfoDict:
setThisStageBytesComplete:
setTotalFileSizeWritten:
setTotalRecordCount:
setTotalUncompressedBytes:
setUncompressedBytesOutput:
setUnsureData:
setXpcConnection:
setupUnzipperWithOutputPath:sandboxExtensionToken:options:withReply:
standardUserDefaults
storeCurrentFileInMemory
streamInfoDict
streamState
stringByDeletingLastPathComponent
stringWithCapacity:
stringWithFileSystemRepresentation:length:
stringWithFormat:
stringWithUTF8String:
subdataWithRange:
superclass
supplyBytes:withCompletionBlock:
supplyBytes:withReply:
supportsSecureCoding
suspendStreamWithCompletionBlock:
suspendStreamWithReply:
synchronousRemoteObjectProxyWithErrorHandler:
terminateStreamWithError:completionBlock:
terminateStreamWithReply:
thisStageBytesComplete
totalFileSizeWritten
totalRecordCount
totalUncompressedBytes
uncompressedBytesOutput
unsignedCharValue
unsignedIntValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
unsureData
unzipPath
unzipServiceConnection
unzipStateWithPath:options:error:
updateHashFromOffset:withBytes:length:
updateHashFromOffset:withBytes:length:onlyFinishCurrentChunk:
writeToFile:options:error:
xpcConnection
zone
Got connection from process %@ at qos %@
Debug logging is enabled
Streaming unzip service built at %s %s started
Got SIGTERM; Exiting...
%s not available.
%@: deserialized
%@: suspending stream in preparation for serializing ourselves
%@: Suspending stream prior to encoding failed with error: %@
%@: serialized
%@: initialized with path: %@ options: %@
%@: prepare for extraction failed: %@
Failed to create NSXPCConnection
Connection interrupted to streaming unzip service.
Failed to create extraction directory at path %@: %@
Failed to realpath "%@" at "%s": %s
Failed to issue sandbox extension for "%s" : %s
%@: prepare returning error %@
%@: calling prepare completion block with offset %llu, error %@
%@: preparing
extractionPath was nil. Did you mean to call -prepareForExtractionToPath:completionBlock: instead?
Calling %s after any calls to other non-init methods on this instance is an error.
%@: prepare called on extractor that had already returned error %@
%@: prepare called on object that was already prepared; returning resumption offset %llu
%@: preparing for extraction to path %@
%@: invalidating
%@: Supply bytes with length %lu began
SUPPLY_BYTES
Supply bytes with length %lu succeeded: %c
%@: supply called on extractor that had already returned error %@
%s called before -[SZExtractor prepareForExtraction:] on %@
%s called on an invalidated object: %@
%@: calling completion block with no error, dataComplete=%c
Supplying entire byte range data of length %lu
Sending buffer of size %lu to the unzip service over XPC
Finished (Succeeded: N) processing buffer of size %lu sent to the unzip service over XPC
Finished (Succeeded: %c) processing buffer of size %lu sent to the unzip service over XPC
DATA_OVER_XPC
Starting fragmentation of the supplied buffer of length : %lu
Already processed {%lu, %lu}
Reserved %ld bytes; adding to existing length %ld
Failed to reserve last range; falling out with last range {%lu, %lu}
Waiting for %lu bytes to become available
Reserved %ld bytes for too-big partial range {%lu, %lu}
Reserved %ld bytes at %ld for too-big partial range {%lu, %lu}
Supplying byte range data of length %lu at location %lu
Active partial range {%lu, %lu} exhausted
Ending fragmentation of the supplied buffer
FRAGMENT_DATA
%@: suspending stream
%@: suspend called on extractor that had already returned error %@
%@: calling completion block with offset %llu, error %@
%@: finishing stream
%@: finish called on extractor that had already returned error %@
%@: calling completion block with error %@
%@: terminating stream with error %@
%@: terminate called on extractor that had already returned error %@
%@: %s was called before -[SZExtractor prepareForExtraction:]; this doesn't do anything
%@: %s was called on an invalidated object
%@: Setting extractor delegate to 0x%p
%@: setting active extractor delegate methods to 0x%x
%@: Failed to set delegate methods enabled: %@
remoteObjectProxy returning error %@
Updating stream state from %@ to %@
Failed to create archive for passthrough EA on path %@
Failed to set passthrough EA %s on path %@: %s
Mismatch between uncompressed bytes output (%llu) and output file offset (%lld)
Failed to create archive for resumption data to path %@
Serializing %lu bytes of resumption data for offset %llu
Failed to save resumption data to path %@: %@
Cannot validate hash; this chunk is index %llu, but we only have %lu hashes.
Hash mismatch for chunk containing offset %llu: expected %@, got %@
Verified that hashed data offset %llu matches index %llu: %@
Hash mismatch for last partial chunk: expected %@, got %@
Verified that last chunk partial hash matches: %@
Ambiguous or missing hash chunk size: chunk size is %llu but have %lu hashes
Finishing an incomplete stream! This stream will not be resumable.
Failed to open %s : %d (%s)
Could not mark %s static: %d (%s)
Unable to set F_NOCACHE accessing file %s : %d (%s)
Unable to set F_SINGLE_WRITER on %s : %d (%s)
Failed to init
Options dictionary supplied has one or more options with an incorrect type: %@
Could not allocate memory for local file record
Ambiguous chunk size (hashes > 1 but chunkSize == 0)
Hash chunk size given as > 0, but no hashes
Performing cached writes to extraction under %@
Failed to stat path %@: %s
Extraction path at %@ should be a file or directory, but was not (had mode 0x%ho)
Failed to get size of xattr %s from path %@: %s
Expected to read %ld bytes but got %ld for EA %s on %@; resuming from offset 0
Failed to remove EA %s from %s: %s
Unable to deserialize resumption data (%@); resuming from offset 0
Computed index of current hash chunk (%llu) is not within supplied hashes array of %lu elements; resuming from offset 0
Failed to read resumption data from path %@: %@; starting from offset 0
Failed to remove %@: %@
Found resumption data version %d, but expected %d at %@; resuming from offset 0
Failed to deserialize resumption data (%@); resuming from offset 0
Serialized %s context (%lu bytes) did not match size of struct (%lu bytes); resuming from offset 0
Failed to get path from current local file record.
Resuming %@ at offset %lld
Failed to open output file at path %@
Failed to get serialized compression state from save data
Compression save state was not valid.
Failed to seek to offset %llu in output file at path %@: %s
Invalid state in resumption data at path %@
Value of key %@ in options dictionary was not an object of type %@. Was %@
Unsupported hash type: %@. Defaulting to MD5
Failed to remove bad extraction path at %@: %@
Failed to get protection class on %s : %s
Failed to open %s : %s
Failed to set protection class on %s to %d: %s
Streaming Unzipper running with unexpected QOS: expected=0x%x actual=0x%x
Failed to consume sandbox extension token "%s" for "%@" : %s
Initialized with path %@ ; hashed chunk size %llu ; hashes %@
Failed to set incomplete extraction xattr on %@ : %s
Set active delegate methods to 0x%x
Deallocating state for extraction to %@
Failed to remove unzip path at %@ : %@
Extraction entered passthrough mode
Beginning passthrough of non-streamable zip file to %@
PASSTHROUGH_MODE
Failed to open passthrough output file at %@
Failed to write initial data to passthrough output file: %s
Failed to write remaining initial data to passthrough output file: %s
Unzipper did not have any state! Client should suspend stream and resume from the given offset.
Got unexpected local file signature %c%c%c%c ; entering passthrough mode
Finished central directory signature at offset %llu and we are also at a chunk boundary.
Last chunk's partial hash did not validate (store hashed chunk size mismatch?); consuming more data to check full chunk.
No last chunk partial hash; will need full chunk to validate.
Finished central directory signature; updating hash with remainder of stream data
After hitting Central Directory, we had enough data already to finish the chunk
After hitting Central Directory, we need more data to finish the chunk
Encountered unexpectedly non-stream-compliant data in stream!
Got zero-length filename; entering passthrough mode
Encountered zero-length filename for local file record at offset %llu
Got unexpected compression method: %hu; entering passthrough mode
Encountered unsupported compression method %hu in stream at offset %llu
File has 0-length compressed size but non-zero uncompressed size; entering passthrough mode
Encountered inconsistency in stream data: file at offset %llu has a 0-length compressed size but a non-zero uncompressed size
Stored file has compressed size != uncompressed size; entering passthrough mode
Encountered inconsistency in stream data: file at offset %llu is stored without compression but the uncompressed and compressed sizes are not equal (%llu != %llu)
Failed to get filename for file; entering passthrough mode
Failed to get filename for file at offset %llu.
Processing file %@ (csize: ??; usize: ??; cmethod: %hu)
EXTRACTION
Processing file %@ (csize: %llu; usize: %llu; cmethod: %hu)
Got directory %s with non-zero compressed data size; entering passthrough mode
Directory %s has a non-zero compressed size; directories aren't supposed to have data.
Item %lld (%s) in archive was not 'mimetype' or %s; entering passthrough mode
File %s is metadata file, so keeping in memory
File %s is fixed metadata file, so keeping in memory
File %s is a symlink (mode = 0%o), so keeping in memory
File %s is larger than 5 MB (%llu) so not keeping in memory
Parent path %@ did not exist
Failed to create parent directory %@: %s
Can't determine if parent path exists %@: %s
Failed to create directory at path %@: %s
Failed to set proper mode on directory %@: %s
advisory preallocation of %lld bytes for %@ failed: %s
Failed to write data to output file %@: %s
Failed to initialize compression: %d
compression_stream_process consumed %zu bytes
compression_stream_process did not consume data for output file %@; input buffer size: %zu, output buffer size: %zu
compression_stream_process returned unexpected result %d
Failed to write decompressed data to output file %@ : %s
Hit compression stream end with %llu compressed bytes remaining for file %@
Hit compression stream end at %llu bytes output for file %@, but expected uncompressed file size of %llu bytes
Unknown compression method %hu for file %@
Data descriptor did not match expected signature (found 0x%02hhx%02hhx%02hhx%02hhx); entering passthrough mode
Data descriptor did not match expected signature (found 0x%02hhx%02hhx%02hhx%02hhx).
Got data descriptor with CRC 0x%x, uncompressed size %llu, compressed size %llu
Got data descriptor with CRC 0x%x, uncompressed size %u, compressed size %u
Decompression failed to produce all expected output data for file %@; produced %llu bytes, expected %llu
CRC mismatch; got: 0x%lx expected: 0x%x for file %@
Couldn't get filename for stream metadata file; entering passthrough mode
Couldn't get filename for current file "%s"
Failed to read stream metadata from %@; entering passthrough mode
Failed to decode stream metadata; entering passthrough mode
Got stream metadata: %@
Stream metadata was incompatible version or not present; entering passthrough mode
Failed to read fixed stream metadata from %@: %@
Got last chunk partial hash %@
Found last chunk partial hash data but the hash was not computed.
Got a fixed metadata file that did not match expected content (length %lu). Ignoring.
Failed to read symlink path from %@
Invalid symlink: %s -> %s (absolute symlinks are forbidden)
Invalid symlink: %s -> %s
Failed to create symlink at %s to %s: %s
Failed to set mode of %@ to 0%o: %s
Not doing anything with data for file %@
Extraction completed successfully for file %@
Failed to write data to passthrough output file: %s
Invalid unzip state encountered: %hhu
Extraction failed
Begin processing %lu bytes in StreamingUnzipper
Got block of length %lu at offset %lu
End processing %lu bytes in StreamingUnzipper
SUPPLY_BYTES_UNZIP_SERVICE
Suspending extraction at offset %llu for %@
Finishing extraction for %@
Failed to remove xattr named %s on %@ : %s
Unzipper did not have any state, but the client was terminating the stream anyway.
Terminating extraction for %@
Call to realpath failed for suspicious path %s: %s
Rejecting "%s" because its resolved path "%@" points outside or to the unzip dir %@
base directory path cannot be nil
base directory URL cannot be nil (created from path: "%@")
directory url fileSystemRepresentation cannot be NULL
fts_open failed for %s with error %s
Error for path %s: %s
fts_close on FTS for %s returned %s
Failed to get name from local file record.
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8@16*24@32@?40
v32@0:8@16@?24
v24@0:8@?16
v20@0:8i16
v48@0:8@"NSString"16*24@"NSDictionary"32@?<v@?@"NSError"Q>40
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?i@"NSError">16
v24@0:8d16
v24@0:8@16
v16@0:8
v24@0:8@"NSString"16
@"<SZExtractorDelegate>"
@24@0:8^@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"<STExtractorDelegate>"16@0:8
v24@0:8@"<STExtractorDelegate>"16
@"<SZExtractorDelegate>"16@0:8
v24@0:8@"<SZExtractorDelegate>"16
@24@0:8^{_NSZone=}16
v32@0:8@16@24
@32@0:8@16@24
@32@0:8@16^Q24
@40@0:8@16@24^Q32
@48@0:8@16@24Q32^Q40
B24@0:8^Q16
v28@0:8B16@?20
v24@0:8Q16
v20@0:8B16
@"NSString"
@"NSDictionary"
@"NSXPCConnection"
@"StreamingUnzipper"
@"NSObject<OS_dispatch_queue>"
@"SZExtractorInternalDelegate"
@"NSError"
i24@0:8^@16
@40@0:8@16@24^@32
^{?=*Q*Q^v}16@0:8
v20@0:8C16
@24@0:8Q16
@44@0:8Q16r^v24Q32B40
@40@0:8Q16r^v24Q32
B40@0:8@16i24S28^@32
{?=i(?={CC_MD5state_st=IIIIII[16I]i}{CC_SHA1state_st=IIIIIII[16I]i}{CC_SHA256state_st=[2I][8I][16I]}{CC_SHA256state_st=[2I][8I][16I]}{CC_SHA512state_st=[2Q][8Q][16Q]}{CC_SHA512state_st=[2Q][8Q][16Q]})}16@0:8
^{?=[4C]{?=S}{?=S}{?=S}(?={?={?=S}{?=S}}{?=I}){?=I}{?=I}{?=I}{?=S}{?=S}[0C]}16@0:8
v24@0:8^{?=[4C]{?=S}{?=S}{?=S}(?={?={?=S}{?=S}}{?=I}){?=I}{?=I}{?=I}{?=S}{?=S}[0C]}16
i16@0:8
S16@0:8
v20@0:8S16
C16@0:8
^{?=[4C](?={?={?=I}{?=Q}{?=Q}}{?={?=I}{?=I}{?=I}})}16@0:8
v24@0:8^{?=[4C](?={?={?=I}{?=Q}{?=Q}}{?={?=I}{?=I}{?=I}})}16
{?="dst_ptr"*"dst_size"Q"src_ptr"*"src_size"Q"state"^v}
@"NSArray"
{?="hashType"i"context"(?="md5"{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}"sha1"{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}"sha224"{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}"sha256"{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}"sha384"{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}"sha512"{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]})}
@"NSMutableData"
^{?=[4C]{?=S}{?=S}{?=S}(?={?={?=S}{?=S}}{?=I}){?=I}{?=I}{?=I}{?=S}{?=S}[0C]}
^{?=[4C](?={?={?=I}{?=Q}{?=Q}}{?={?=I}{?=I}{?=I}})}
@32@0:8r^v16Q24
v40@0:8r*16Q24@?32
@"StreamingUnzipState"
@"NSObject<OS_os_transaction>"
@"<StreamingUnzipDelegateProtocol>"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>seatbelt-profiles</key>
<array>
<string>StreamingUnzipService</string>
</array>
</dict>
</plist>
.0,
seatbelt-profiles0
StreamingUnzipService
SZMdFx
SZMdFx
!%8/*
unzip_service
v8@?0
com.apple.streamingzip
-[StreamingUnzipServiceDelegate listener:shouldAcceptNewConnection:]
Got connection from process %@ at qos %@
EnableDebugLogging
main
Debug logging is enabled
Feb 10 2023
09:36:10
Streaming unzip service built at %s %s started
main_block_invoke
Got SIGTERM; Exiting...
%@ (pid %d)
Unknown Process Name (pid %d)
USER_INTERACTIVE
USER_INITIATED
DEFAULT
UTILITY
BACKGROUND
UNSPECIFIED
UNKNOWN_QOS: 0x%x
SHA1
Removed1
Removed2
SHA224
SHA256
SHA384
SHA512
StreamingZip
Failed to create log string
%s: %s:%d (0x%p): %s
META-INF/
META-INF/com.apple.ZipMetadata.plist
META-INF/com.apple.FixedZipMetadata.bin
RecordCount
TotalUncompressedBytes
Version
StandardFilePerms
StandardDirectoryPerms
SZExtractorOptionsHashType
SZExtractorOptionsHashesArray
SZExtractorOptionsHashedChunkSize
SZExtractorOptionsDenyInvalidSymlinks
SZExtractorOptionsPerformCachedWrites
SZExtractorOptionsQuarantineInfo
SZExtractorHashTypeMD5
SZExtractorHashTypeSHA1
SZExtractorHashTypeSHA224
SZExtractorHashTypeSHA256
SZExtractorHashTypeSHA384
SZExtractorHashTypeSHA512
SZExtractorOptionsAssertQOS
-[SZExtractor init]
options
extractionPath
isLocalExtractor
-[SZExtractor initWithCoder:]
%@: deserialized
-[SZExtractor encodeWithCoder:]
%@: suspending stream in preparation for serializing ourselves
-[SZExtractor encodeWithCoder:]_block_invoke
%@: Suspending stream prior to encoding failed with error: %@
v24@?0Q8@"NSError"16
%@: serialized
SZExtractorOptionsHashesArray must be an array, but is a %@
SZExtractor requires SZExtractorOptionsHashedChunkSize if passing multiple hashes in SZExtractorOptionsHashesArray
-[SZExtractor _setUpWithPath:options:]
%@: initialized with path: %@ options: %@
-[SZExtractor _synchronouslyPrepareForExtractionAtOffset:]_block_invoke
%@: prepare for extraction failed: %@
+[SZExtractor _serviceConnectionWithError:]
Failed to create NSXPCConnection
com.apple.StreamingZip.SZExtractorBufferSubmissionQueue
-[SZExtractor _prepareForRemoteExtractionSynchronously:withCompletionBlock:]_block_invoke
Connection interrupted to streaming unzip service.
Connection invalidated to streaming unzip service.
Failed to create extraction directory at path %@: %@
Failed to realpath "%@" at "%s": %s
com.apple.StreamingUnzipService
Failed to issue sandbox extension for "%s" : %s
%@: prepare returning error %@
v16@?0@"NSError"8
%@: calling prepare completion block with offset %llu, error %@
v24@?0@"NSError"8Q16
com.apple.StreamingZip.SZExtractor_in_process
In-process unzipper
-[SZExtractor _prepareForLocalExtraction:]_block_invoke
com.apple.StreamingZip.SZExtractor_in_proces_delegate
-[SZExtractor _prepareForExtractionSynchronously:withCompletionBlock:]
%@: preparing
extractionPath was nil. Did you mean to call -prepareForExtractionToPath:completionBlock: instead?
Calling %s after any calls to other non-init methods on this instance is an error.
%@: prepare called on extractor that had already returned error %@
%@: prepare called on object that was already prepared; returning resumption offset %llu
-[SZExtractor prepareForExtractionToPath:completionBlock:]
%@: preparing for extraction to path %@
-[SZExtractor _invalidateObject]
%@: invalidating
com.apple.streamingzip.signposts
v20@?0@"NSError"8B16
-[SZExtractor supplyBytes:withCompletionBlock:]
%@: supply called on extractor that had already returned error %@
%s called before -[SZExtractor prepareForExtraction:] on %@
%s called on an invalidated object: %@
-[SZExtractor supplyBytes:withCompletionBlock:]_block_invoke
%@: calling completion block with error %@
%@: calling completion block with no error, dataComplete=%c
v28@?0@"NSError"8B16Q20
Supplying entire byte range data of length %lu
Already processed {%lu, %lu}
Reserved %ld bytes; adding to existing length %ld
Failed to reserve last range; falling out with last range {%lu, %lu}
v40@?0r^v8{_NSRange=QQ}16^B32
-[SZExtractor supplyBytes:withCompletionBlock:]_block_invoke_2
SZExtractor.m
NSNotFound != lastByteRange.location
Waiting for %lu bytes to become available
Reserved %ld bytes for too-big partial range {%lu, %lu}
Reserved %ld bytes at %ld for too-big partial range {%lu, %lu}
Supplying byte range data of length %lu at location %lu
Active partial range {%lu, %lu} exhausted
-[SZExtractor _suspendStreamWithCompletionBlockSynchronously:completion:]
%@: suspending stream
%@: suspend called on extractor that had already returned error %@
-[SZExtractor _suspendStreamWithCompletionBlockSynchronously:completion:]_block_invoke
%@: calling completion block with offset %llu, error %@
-[SZExtractor finishStreamWithCompletionBlock:]
%@: finishing stream
%@: finish called on extractor that had already returned error %@
-[SZExtractor finishStreamWithCompletionBlock:]_block_invoke
-[SZExtractor terminateStreamWithError:completionBlock:]
%@: terminating stream with error %@
%@: terminate called on extractor that had already returned error %@
-[SZExtractor terminateStreamWithError:completionBlock:]_block_invoke
-[SZExtractor setExtractorDelegate:]
%@: %s was called before -[SZExtractor prepareForExtraction:]; this doesn't do anything
%@: %s was called on an invalidated object
%@: Setting extractor delegate to 0x%p
-[SZExtractor setActiveExtractorDelegateMethods:]
%@: setting active extractor delegate methods to 0x%x
-[SZExtractor setActiveExtractorDelegateMethods:]_block_invoke
%@: Failed to set delegate methods enabled: %@
pathEnding:%@/%@
path:nil
<%@<%p> prepared:%c valid:%c %@ error:%@>
+[SZExtractor(Testing) servicePIDWithError:]_block_invoke
remoteObjectProxy returning error %@
v20@?0i8@"NSError"12
XX_REMOVEME_XX
SerializationVersion
StreamInfoDict
LastChunkPartialHash
UnsureData
InMemoryFileData
LocalFileRecord
StageBytesComplete
CurrentOffset
CurrentCRC32
RecordsProcessed
LocalFileMode
StreamState
StoreCurrentFileInMemory
OpenCurrentOutputFile
CurrentOutputFileOffset
TotalFileSizeWritten
SerializedCompressionState
HashContext
DataDescriptorUnion
com.apple.StreamingUnzipResumptionData
-[StreamingUnzipState init]
StreamingUnzipState.m
false
-[StreamingUnzipState setStreamState:]
Updating stream state from %@ to %@
kStreamStateCompleteLFData == _streamState || kStreamStateIncompleteLFRecord == _streamState
kStreamStateReadNextRecordSignature == _streamState
kStreamStateIncompleteLFRecord == _streamState
kStreamStateIncompleteLFData == _streamState
kStreamStateIncompleteDataDescriptor == _streamState|| kStreamStateIncompleteLFData == _streamState || kStreamStateIncompleteLFRecord == _streamState
-[StreamingUnzipState serializeState]
Failed to create archive for passthrough EA on path %@
Failed to set passthrough EA %s on path %@: %s
Mismatch between uncompressed bytes output (%llu) and output file offset (%lld)
Failed to create archive for resumption data to path %@
Serializing %lu bytes of resumption data for offset %llu
Failed to save resumption data to path %@: %@
-[StreamingUnzipState _checkHashForOffset:]
Cannot validate hash; this chunk is index %llu, but we only have %lu hashes.
Hash mismatch for chunk containing offset %llu: expected %@, got %@
Verified that hashed data offset %llu matches index %llu: %@
-[StreamingUnzipState checkLastChunkPartialHash]
Hash mismatch for last partial chunk: expected %@, got %@
Verified that last chunk partial hash matches: %@
-[StreamingUnzipState updateHashFromOffset:withBytes:length:onlyFinishCurrentChunk:]
Ambiguous or missing hash chunk size: chunk size is %llu but have %lu hashes
sizeToHash <= length
_bytesHashedInChunk <= _hashedChunkSize
-[StreamingUnzipState finishStream]
Finishing an incomplete stream! This stream will not be resumable.
-[StreamingUnzipState openCurrentOutputFDForPath:withOpenFlags:mode:error:]
Failed to open %s : %d (%s)
Could not mark %s static: %d (%s)
Unable to set F_NOCACHE accessing file %s : %d (%s)
Unable to set F_SINGLE_WRITER on %s : %d (%s)
-[StreamingUnzipState initWithPath:options:error:]
Failed to init
Options dictionary supplied has one or more options with an incorrect type: %@
Could not allocate memory for local file record
Ambiguous chunk size (hashes > 1 but chunkSize == 0)
Hash chunk size given as > 0, but no hashes
Performing cached writes to extraction under %@
Failed to stat path %@: %s
Extraction path at %@ should be a file or directory, but was not (had mode 0x%ho)
Failed to get size of xattr %s from path %@: %s
Expected to read %ld bytes but got %ld for EA %s on %@; resuming from offset 0
Failed to remove EA %s from %s: %s
Found resumption data version %d, but expected %d at %@; resuming from offset 0
Unable to deserialize resumption data (%@); resuming from offset 0
Computed index of current hash chunk (%llu) is not within supplied hashes array of %lu elements; resuming from offset 0
Serialized %s context (%lu bytes) did not match size of struct (%lu bytes); resuming from offset 0
Failed to open output file at path %@
Failed to read resumption data from path %@: %@; starting from offset 0
Failed to remove %@: %@
Failed to deserialize resumption data (%@); resuming from offset 0
Failed to get path from current local file record.
Resuming %@ at offset %lld
Failed to get serialized compression state from save data
Compression save state was not valid.
Failed to seek to offset %llu in output file at path %@: %s
Invalid state in resumption data at path %@
ReadNextRecordSignature
IncompleteLFRecord
IncompleteLFData
IncompleteDataDescriptor
CompleteLFData
WriteThrough
FinishHashing
Complete
Error
Unknown
com.apple.StreamingPassthroughResumptionData
_ValidateDictionaryKeyValueType
Value of key %@ in options dictionary was not an object of type %@. Was %@
_HashTypeForString
Unsupported hash type: %@. Defaulting to MD5
_RemoveAndRecreateDirectoryAtPath
Failed to remove bad extraction path at %@: %@
_GetDataProtectionClassForPath
Failed to open %s : %s
Failed to get protection class on %s : %s
_SetDataProtectionClassOnPath
Failed to set protection class on %s to %d: %s
Unzip session on behalf of %@
-[StreamingUnzipper setupUnzipperWithOutputPath:sandboxExtensionToken:options:withReply:]
Streaming Unzipper running with unexpected QOS: expected=0x%x actual=0x%x
Failed to consume sandbox extension token "%s" for "%@" : %s
Initialized with path %@ ; hashed chunk size %llu ; hashes %@
StreamingUnzipper.m
error || _currentState
com.apple.streamingzip.incomplete_extraction
Failed to set incomplete extraction xattr on %@ : %s
-[StreamingUnzipper setActiveDelegateMethods:]
Set active delegate methods to 0x%x
-[StreamingUnzipper dealloc]
Deallocating state for extraction to %@
-[StreamingUnzipper _setErrorState]
Failed to remove unzip path at %@ : %@
-[StreamingUnzipper _beginNonStreamablePassthroughWithRemainingBytes:length:]
Beginning passthrough of non-streamable zip file to %@
Failed to open passthrough output file at %@
Failed to write initial data to passthrough output file: %s
Failed to write remaining initial data to passthrough output file: %s
-[StreamingUnzipper _supplyBytes:length:withReply:]
Unzipper did not have any state! Client should suspend stream and resume from the given offset.
_currentState.currentLFRecord
_currentState.thisStageBytesComplete <= peekSignatureSize
Got unexpected local file signature %c%c%c%c ; entering passthrough mode
Finished central directory signature at offset %llu and we are also at a chunk boundary.
Last chunk's partial hash did not validate (store hashed chunk size mismatch?); consuming more data to check full chunk.
No last chunk partial hash; will need full chunk to validate.
Finished central directory signature; updating hash with remainder of stream data
After hitting Central Directory, we had enough data already to finish the chunk
lengthToRead == length
After hitting Central Directory, we need more data to finish the chunk
Encountered unexpectedly non-stream-compliant data in stream!
Got zero-length filename; entering passthrough mode
Encountered zero-length filename for local file record at offset %llu
Got unexpected compression method: %hu; entering passthrough mode
Encountered unsupported compression method %hu in stream at offset %llu
_currentState.thisStageBytesComplete >= sizeof(LocalFileRecord)
_currentState.thisStageBytesComplete == fullLFRSize
File has 0-length compressed size but non-zero uncompressed size; entering passthrough mode
Encountered inconsistency in stream data: file at offset %llu has a 0-length compressed size but a non-zero uncompressed size
Stored file has compressed size != uncompressed size; entering passthrough mode
Encountered inconsistency in stream data: file at offset %llu is stored without compression but the uncompressed and compressed sizes are not equal (%llu != %llu)
Failed to get filename for file; entering passthrough mode
Failed to get filename for file at offset %llu.
Got directory %s with non-zero compressed data size; entering passthrough mode
Directory %s has a non-zero compressed size; directories aren't supposed to have data.
_currentState.recordsProcessed <= 2
mimetype
Item %lld (%s) in archive was not 'mimetype' or %s; entering passthrough mode
File %s is metadata file, so keeping in memory
File %s is fixed metadata file, so keeping in memory
File %s is a symlink (mode = 0%o), so keeping in memory
File %s is larger than 5 MB (%llu) so not keeping in memory
Parent path %@ did not exist
Failed to create parent directory %@: %s
Can't determine if parent path exists %@: %s
Failed to create directory at path %@: %s
Failed to set proper mode on directory %@: %s
_currentState.currentOutputFD < 0
advisory preallocation of %lld bytes for %@ failed: %s
_currentState.currentOutputFD >= 0
Failed to write data to output file %@: %s
Failed to initialize compression: %d
compression_stream_process consumed %zu bytes
outputSize >= cmpState->dst_size
compression_stream_process did not consume data for output file %@; input buffer size: %zu, output buffer size: %zu
compression_stream_process returned unexpected result %d
Failed to write decompressed data to output file %@ : %s
Hit compression stream end with %llu compressed bytes remaining for file %@
Hit compression stream end at %llu bytes output for file %@, but expected uncompressed file size of %llu bytes
Unknown compression method %hu for file %@
0 == length
_currentState.thisStageBytesComplete == expected_size
Data descriptor did not match expected signature (found 0x%02hhx%02hhx%02hhx%02hhx); entering passthrough mode
Data descriptor did not match expected signature (found 0x%02hhx%02hhx%02hhx%02hhx).
Got data descriptor with CRC 0x%x, uncompressed size %llu, compressed size %llu
Got data descriptor with CRC 0x%x, uncompressed size %u, compressed size %u
Decompression failed to produce all expected output data for file %@; produced %llu bytes, expected %llu
CRC mismatch; got: 0x%lx expected: 0x%x for file %@
Couldn't get filename for stream metadata file; entering passthrough mode
Couldn't get filename for current file "%s"
_currentState.inMemoryFileData
Failed to decode stream metadata; entering passthrough mode
Failed to read stream metadata from %@; entering passthrough mode
Got stream metadata: %@
Stream metadata was incompatible version or not present; entering passthrough mode
Failed to read fixed stream metadata from %@: %@
Got last chunk partial hash %@
Found last chunk partial hash data but the hash was not computed.
Got a fixed metadata file that did not match expected content (length %lu). Ignoring.
Failed to read symlink path from %@
Invalid symlink: %s -> %s (absolute symlinks are forbidden)
Invalid symlink: %s -> %s
Failed to create symlink at %s to %s: %s
Failed to set mode of %@ to 0%o: %s
Not doing anything with data for file %@
Failed to write data to passthrough output file: %s
Invalid unzip state encountered: %hhu
-[StreamingUnzipper supplyBytes:withReply:]_block_invoke
Got block of length %lu at offset %lu
-[StreamingUnzipper suspendStreamWithReply:]
Suspending extraction at offset %llu for %@
-[StreamingUnzipper finishStreamWithReply:]
Finishing extraction for %@
Failed to remove xattr named %s on %@ : %s
-[StreamingUnzipper terminateStreamWithReply:]
Unzipper did not have any state, but the client was terminating the stream anyway.
Terminating extraction for %@
_GetUncompressedSize
currentState.streamState > kStreamStateIncompleteDataDescriptor
NULL != currentState.dataDescriptor
_GetCompressedSize
_GetCRC32
_CheckRealpathHasBasePrefix
Call to realpath failed for suspicious path %s: %s
Rejecting "%s" because its resolved path "%@" points outside or to the unzip dir %@
_ValidateAllSymlinksUnderPath
base directory path cannot be nil
base directory URL cannot be nil (created from path: "%@")
B24@?0^{_ftsent=^{_ftsent}^{_ftsent}^{_ftsent}q^v**iiSSQiSsSSS^{stat}[1c]}8^@16
_TraverseDirectory
directory url fileSystemRepresentation cannot be NULL
fts_open failed for %s with error %s
Error for path %s: %s
fts_close on FTS for %s returned %s
SZExtractorErrorDomain
SZExtractorFileOffsetErrorKey
SZExtractorCompressionLibErrorKey
SZExtractorFunctionNameErrorKey
SZExtractorSourceFileLineErrorKey
SZExtractorActualHashValueErrorKey
SZExtractorHashChunkIndexErrorKey
GetFileNameStringFromLocalFileRecord
Failed to get name from local file record.
%02x
StreamingUnzipServiceDelegate
NSXPCListenerDelegate
NSObject
StreamingUnzipProtocol
StreamingUnzipDelegateProtocol
SZExtractorInternalDelegate
SZExtractor
NSSecureCoding
NSCoding
STExtractor
NSCopying
Testing
SZAdditions
StreamingUnzipState
StreamingUnzipper
Got connection from process %@ at qos %@
Debug logging is enabled
Streaming unzip service built at %s %s started
Got SIGTERM; Exiting...
%s not available.
%@: deserialized
%@: suspending stream in preparation for serializing ourselves
%@: Suspending stream prior to encoding failed with error: %@
%@: serialized
%@: initialized with path: %@ options: %@
%@: prepare for extraction failed: %@
Failed to create NSXPCConnection
Connection interrupted to streaming unzip service.
Failed to create extraction directory at path %@: %@
Failed to realpath "%@" at "%s": %s
Failed to issue sandbox extension for "%s" : %s
%@: prepare returning error %@
%@: calling prepare completion block with offset %llu, error %@
%@: preparing
extractionPath was nil. Did you mean to call -prepareForExtractionToPath:completionBlock: instead?
Calling %s after any calls to other non-init methods on this instance is an error.
%@: prepare called on extractor that had already returned error %@
%@: prepare called on object that was already prepared; returning resumption offset %llu
%@: preparing for extraction to path %@
%@: invalidating
%@: Supply bytes with length %lu began
SUPPLY_BYTES
Supply bytes with length %lu succeeded: %c
%@: supply called on extractor that had already returned error %@
%s called before -[SZExtractor prepareForExtraction:] on %@
%s called on an invalidated object: %@
%@: calling completion block with no error, dataComplete=%c
Supplying entire byte range data of length %lu
Sending buffer of size %lu to the unzip service over XPC
DATA_OVER_XPC
Finished (Succeeded: N) processing buffer of size %lu sent to the unzip service over XPC
Finished (Succeeded: %c) processing buffer of size %lu sent to the unzip service over XPC
Starting fragmentation of the supplied buffer of length : %lu
Already processed {%lu, %lu}
Reserved %ld bytes; adding to existing length %ld
Failed to reserve last range; falling out with last range {%lu, %lu}
Waiting for %lu bytes to become available
Reserved %ld bytes for too-big partial range {%lu, %lu}
Reserved %ld bytes at %ld for too-big partial range {%lu, %lu}
Supplying byte range data of length %lu at location %lu
Active partial range {%lu, %lu} exhausted
Ending fragmentation of the supplied buffer
FRAGMENT_DATA
%@: suspending stream
%@: suspend called on extractor that had already returned error %@
%@: calling completion block with offset %llu, error %@
%@: finishing stream
%@: finish called on extractor that had already returned error %@
%@: calling completion block with error %@
%@: terminating stream with error %@
%@: terminate called on extractor that had already returned error %@
%@: %s was called before -[SZExtractor prepareForExtraction:]; this doesn't do anything
%@: %s was called on an invalidated object
%@: Setting extractor delegate to 0x%p
%@: setting active extractor delegate methods to 0x%x
%@: Failed to set delegate methods enabled: %@
remoteObjectProxy returning error %@
Updating stream state from %@ to %@
Failed to create archive for passthrough EA on path %@
Failed to set passthrough EA %s on path %@: %s
Mismatch between uncompressed bytes output (%llu) and output file offset (%lld)
Failed to create archive for resumption data to path %@
Serializing %lu bytes of resumption data for offset %llu
Failed to save resumption data to path %@: %@
Cannot validate hash; this chunk is index %llu, but we only have %lu hashes.
Hash mismatch for chunk containing offset %llu: expected %@, got %@
Verified that hashed data offset %llu matches index %llu: %@
Hash mismatch for last partial chunk: expected %@, got %@
Verified that last chunk partial hash matches: %@
Ambiguous or missing hash chunk size: chunk size is %llu but have %lu hashes
Finishing an incomplete stream! This stream will not be resumable.
Failed to open %s : %d (%s)
Could not mark %s static: %d (%s)
Unable to set F_NOCACHE accessing file %s : %d (%s)
Unable to set F_SINGLE_WRITER on %s : %d (%s)
Failed to init
Options dictionary supplied has one or more options with an incorrect type: %@
Could not allocate memory for local file record
Ambiguous chunk size (hashes > 1 but chunkSize == 0)
Hash chunk size given as > 0, but no hashes
Performing cached writes to extraction under %@
Failed to stat path %@: %s
Extraction path at %@ should be a file or directory, but was not (had mode 0x%ho)
Failed to get size of xattr %s from path %@: %s
Expected to read %ld bytes but got %ld for EA %s on %@; resuming from offset 0
Failed to remove EA %s from %s: %s
Unable to deserialize resumption data (%@); resuming from offset 0
Failed to read resumption data from path %@: %@; starting from offset 0
Failed to remove %@: %@
Found resumption data version %d, but expected %d at %@; resuming from offset 0
Failed to deserialize resumption data (%@); resuming from offset 0
Computed index of current hash chunk (%llu) is not within supplied hashes array of %lu elements; resuming from offset 0
Serialized %s context (%lu bytes) did not match size of struct (%lu bytes); resuming from offset 0
Failed to get path from current local file record.
Resuming %@ at offset %lld
Failed to open output file at path %@
Failed to get serialized compression state from save data
Compression save state was not valid.
Failed to seek to offset %llu in output file at path %@: %s
Invalid state in resumption data at path %@
Value of key %@ in options dictionary was not an object of type %@. Was %@
Unsupported hash type: %@. Defaulting to MD5
Failed to remove bad extraction path at %@: %@
Failed to get protection class on %s : %s
Failed to open %s : %s
Failed to set protection class on %s to %d: %s
Streaming Unzipper running with unexpected QOS: expected=0x%x actual=0x%x
Failed to consume sandbox extension token "%s" for "%@" : %s
Initialized with path %@ ; hashed chunk size %llu ; hashes %@
Failed to set incomplete extraction xattr on %@ : %s
Set active delegate methods to 0x%x
Deallocating state for extraction to %@
Failed to remove unzip path at %@ : %@
Extraction entered passthrough mode
EXTRACTION
Beginning passthrough of non-streamable zip file to %@
PASSTHROUGH_MODE
Failed to open passthrough output file at %@
Failed to write initial data to passthrough output file: %s
Failed to write remaining initial data to passthrough output file: %s
Unzipper did not have any state! Client should suspend stream and resume from the given offset.
Got unexpected local file signature %c%c%c%c ; entering passthrough mode
Finished central directory signature at offset %llu and we are also at a chunk boundary.
Last chunk's partial hash did not validate (store hashed chunk size mismatch?); consuming more data to check full chunk.
No last chunk partial hash; will need full chunk to validate.
Finished central directory signature; updating hash with remainder of stream data
After hitting Central Directory, we had enough data already to finish the chunk
After hitting Central Directory, we need more data to finish the chunk
Encountered unexpectedly non-stream-compliant data in stream!
Got zero-length filename; entering passthrough mode
Encountered zero-length filename for local file record at offset %llu
Got unexpected compression method: %hu; entering passthrough mode
Encountered unsupported compression method %hu in stream at offset %llu
File has 0-length compressed size but non-zero uncompressed size; entering passthrough mode
Encountered inconsistency in stream data: file at offset %llu has a 0-length compressed size but a non-zero uncompressed size
Stored file has compressed size != uncompressed size; entering passthrough mode
Encountered inconsistency in stream data: file at offset %llu is stored without compression but the uncompressed and compressed sizes are not equal (%llu != %llu)
Failed to get filename for file; entering passthrough mode
Failed to get filename for file at offset %llu.
Processing file %@ (csize: ??; usize: ??; cmethod: %hu)
Processing file %@ (csize: %llu; usize: %llu; cmethod: %hu)
Got directory %s with non-zero compressed data size; entering passthrough mode
Directory %s has a non-zero compressed size; directories aren't supposed to have data.
Item %lld (%s) in archive was not 'mimetype' or %s; entering passthrough mode
File %s is metadata file, so keeping in memory
File %s is fixed metadata file, so keeping in memory
File %s is a symlink (mode = 0%o), so keeping in memory
File %s is larger than 5 MB (%llu) so not keeping in memory
Parent path %@ did not exist
Failed to create parent directory %@: %s
Can't determine if parent path exists %@: %s
Failed to create directory at path %@: %s
Failed to set proper mode on directory %@: %s
advisory preallocation of %lld bytes for %@ failed: %s
Failed to write data to output file %@: %s
Failed to initialize compression: %d
compression_stream_process consumed %zu bytes
compression_stream_process did not consume data for output file %@; input buffer size: %zu, output buffer size: %zu
compression_stream_process returned unexpected result %d
Failed to write decompressed data to output file %@ : %s
Hit compression stream end with %llu compressed bytes remaining for file %@
Hit compression stream end at %llu bytes output for file %@, but expected uncompressed file size of %llu bytes
Unknown compression method %hu for file %@
Data descriptor did not match expected signature (found 0x%02hhx%02hhx%02hhx%02hhx); entering passthrough mode
Data descriptor did not match expected signature (found 0x%02hhx%02hhx%02hhx%02hhx).
Got data descriptor with CRC 0x%x, uncompressed size %llu, compressed size %llu
Got data descriptor with CRC 0x%x, uncompressed size %u, compressed size %u
Decompression failed to produce all expected output data for file %@; produced %llu bytes, expected %llu
CRC mismatch; got: 0x%lx expected: 0x%x for file %@
Couldn't get filename for stream metadata file; entering passthrough mode
Couldn't get filename for current file "%s"
Failed to read stream metadata from %@; entering passthrough mode
Failed to decode stream metadata; entering passthrough mode
Got stream metadata: %@
Stream metadata was incompatible version or not present; entering passthrough mode
Failed to read fixed stream metadata from %@: %@
Got last chunk partial hash %@
Found last chunk partial hash data but the hash was not computed.
Got a fixed metadata file that did not match expected content (length %lu). Ignoring.
Failed to read symlink path from %@
Invalid symlink: %s -> %s (absolute symlinks are forbidden)
Invalid symlink: %s -> %s
Failed to create symlink at %s to %s: %s
Failed to set mode of %@ to 0%o: %s
Not doing anything with data for file %@
Extraction completed successfully for file %@
Failed to write data to passthrough output file: %s
Invalid unzip state encountered: %hhu
Extraction failed
Begin processing %lu bytes in StreamingUnzipper
Got block of length %lu at offset %lu
End processing %lu bytes in StreamingUnzipper
SUPPLY_BYTES_UNZIP_SERVICE
Suspending extraction at offset %llu for %@
Finishing extraction for %@
Failed to remove xattr named %s on %@ : %s
Unzipper did not have any state, but the client was terminating the stream anyway.
Terminating extraction for %@
Call to realpath failed for suspicious path %s: %s
Rejecting "%s" because its resolved path "%@" points outside or to the unzip dir %@
base directory path cannot be nil
base directory URL cannot be nil (created from path: "%@")
directory url fileSystemRepresentation cannot be NULL
fts_open failed for %s with error %s
Error for path %s: %s
fts_close on FTS for %s returned %s
Failed to get name from local file record.
T@"SZExtractorInternalDelegate",R,N,V_internalExtractorDelegate
SZ_stringByDeletingTrailingSlashes
_dataDescriptor
T@"<STExtractorDelegate>",W,N
_hashes
T@"<SZExtractorDelegate>",W,Vdelegate
clearSavedState
T@"NSDictionary",&,N,V_streamInfoDict
currentLFRequiresDataDescriptor
T@"NSError",&,N,V_error
dealloc
T@"NSMutableData",&,N,V_unsureData
isProxy
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
release
T@"NSString",C,N,V_extractionPath
setStreamState:
T@"NSString",R,N,V_unzipPath
.cxx_destruct
TB,N,V_storeCurrentFileInMemory
T#,R
_extractionPath
T@"<SZExtractorDelegate>",W,N
_streamInfoDict
T@"<StreamingUnzipDelegateProtocol>",W,N,VinProcessExtractorDelegate
currentLFRecord
T@"NSDictionary",R,C,N,V_options
currentOutputFD
T@"NSMutableData",&,N,V_inMemoryFileData
hashedChunkSize
T@"NSObject<OS_dispatch_queue>",&,N,VinProcessDelegateQueue
options
T@"NSString",&,N,V_lastChunkPartialHash
serviceListener
T@"NSString",R,C
stringByAppendingPathComponent:
T@"NSXPCConnection",R,N,V_unzipServiceConnection
T@"NSXPCConnection",W,N,VxpcConnection
T@"StreamingUnzipper",R,N,V_inProcessUnzipper
TB,N,V_currentLFRequiresDataDescriptor
TB,N,V_denyInvalidSymlinks
TB,N,V_hasHadPostSetupMethodsCalled
TB,N,V_needsPreparation
TB,N,V_performCachedWrites
TB,N,V_performingExtraction
TB,R
TB,R,D,N
TB,R,N
TB,R,N,V_isLocalExtractor
TC,N,V_streamState
TQ,N,V_currentCRC32
TQ,N,V_currentLFRecordAllocationSize
TQ,N,V_currentOffset
TQ,N,V_lastResumptionOffset
TQ,N,V_recordsProcessed
TQ,N,V_thisStageBytesComplete
TQ,N,V_totalFileSizeWritten
TQ,N,V_totalRecordCount
TQ,N,V_totalUncompressedBytes
TQ,N,V_uncompressedBytesOutput
TQ,R
TQ,R,N,V_bytesHashedInChunk
TQ,R,N,V_hashedChunkSize
TS,N,V_currentLFMode
T^{?=*Q*Q^v},R,N
T^{?=[4C](?={?={?=I}{?=Q}{?=Q}}{?={?=I}{?=I}{?=I}})},N,V_dataDescriptor
T^{?=[4C]{?=S}{?=S}{?=S}(?={?={?=S}{?=S}}{?=I}){?=I}{?=I}{?=I}{?=S}{?=S}[0C]},N,V_currentLFRecord
Ti,N,V_currentOutputFD
T{?=i(?={CC_MD5state_st=IIIIII[16I]i}{CC_SHA1state_st=IIIIIII[16I]i}{CC_SHA256state_st=[2I][8I][16I]}{CC_SHA256state_st=[2I][8I][16I]}{CC_SHA512state_st=[2Q][8Q][16Q]}{CC_SHA512state_st=[2Q][8Q][16Q]})},R,N,V_hashContext
UTF8String
_activeDelegateMethods
_beginNonStreamablePassthroughWithRemainingBytes:length:
_bytesHashedInChunk
_checkHashForOffset:
_cmpState
_currentCRC32
_currentLFMode
_currentLFRecord
_currentLFRecordAllocationSize
_currentLFRequiresDataDescriptor
_currentOffset
_currentOutputFD
_currentState
_decompressionOutputBuffer
_denyInvalidSymlinks
_error
_extractionEnteredPassThroughMode
_hasHadPostSetupMethodsCalled
_hashContext
_hashedChunkSize
_inMemoryFileData
_inProcessUnzipper
_internalExtractorDelegate
_internalSetStreamState:
_invalidateObject
_isLocalExtractor
_isValidObject
_lastChunkPartialHash
_lastExtractionProgressSent
_lastResumptionOffset
_lastResumptionSavedOffset
_needsPreparation
_options
_performCachedWrites
_performingExtraction
_prepareForExtractionSynchronously:withCompletionBlock:
_prepareForLocalExtraction:
_prepareForRemoteExtractionSynchronously:withCompletionBlock:
_recordsProcessed
_sandboxToken
_sendExtractionCompleteAtArchivePath:
_sendExtractionProgress:
_serialQueue
_serviceConnectionWithError:
_sessionTransaction
_setErrorState
_setUpWithPath:options:
_storeCurrentFileInMemory
_streamState
_supplyBytes:length:withReply:
_suspendStreamWithCompletionBlockSynchronously:completion:
_synchronouslyPrepareForExtractionAtOffset:
_thisStageBytesComplete
_totalFileSizeWritten
_totalRecordCount
_totalUncompressedBytes
_uncompressedBytesOutput
_unsureData
_unzipPath
_unzipServiceConnection
allocWithZone:
appendBytes:length:
appendFormat:
autorelease
boolForKey:
boolValue
bytes
bytesHashedInChunk
caseInsensitiveCompare:
checkLastChunkPartialHash
class
cmpState
code
componentsJoinedByString:
componentsSeparatedByString:
conformsToProtocol:
contentsOfDirectoryAtPath:error:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentCRC32
currentLFMode
currentLFRecordAllocationSize
currentOffset
dataDescriptor
dataWithBytesNoCopy:length:freeWhenDone:
dataWithCapacity:
dataWithContentsOfFile:options:error:
debugDescription
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeIntForKey:
decodeObjectOfClass:forKey:
decodePropertyListForKey:
defaultCStringEncoding
defaultManager
delegate
denyInvalidSymlinks
description
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
doesConsumeExtractedData
domain
enableDebugLogging
encodeBool:forKey:
encodeBytes:length:forKey:
encodeInt:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedData
enumerateByteRangesUsingBlock:
error
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
extractionCompleteAtArchivePath:
extractionEnteredPassThroughMode
extractionPath
extractorDelegate
fileExistsAtPath:
fileSystemRepresentation
fileSystemRepresentationWithPath:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileURLWithPath:isDirectory:
finishDecoding
finishStream
finishStreamWithCompletionBlock:
finishStreamWithReply:
getBytes:length:
getPidForTestingWithReply:
hasHadPostSetupMethodsCalled
hash
hashContext
inMemoryFileData
inProcessDelegateQueue
inProcessExtractorDelegate
inProcessUnzipper
init
initForClient:
initForLocalExtractionWithPath:options:resumptionOffset:
initForReadingFromData:error:
initForRemoteExtractionWithPath:options:resumptionOffset:
initRequiringSecureCoding:
initWithBytes:length:encoding:
initWithCoder:
initWithFormat:arguments:
initWithOptions:
initWithPath:md5Hashes:hashedChunkSize:resumptionOffset:
initWithPath:options:
initWithPath:options:error:
initWithPath:options:resumptionOffset:
initWithPath:resumptionOffset:
initWithServiceName:
inputStreamWithFileAtPath:
intValue
interfaceWithProtocol:
internalExtractorDelegate
invalidate
isEqual:
isEqualToString:
isKindOfClass:
isLocalExtractor
isMemberOfClass:
lastChunkPartialHash
lastPathComponent
lastResumptionOffset
length
listener:shouldAcceptNewConnection:
markResumptionPoint
mutableBytes
mutableCopy
needsPreparation
numberWithInt:
numberWithUnsignedChar:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
openCurrentOutputFDForPath:withOpenFlags:mode:error:
path
pathComponents
performCachedWrites
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performingExtraction
prepareForExtraction:
prepareForExtractionToPath:completionBlock:
processIdentifier
propertyListWithData:options:format:error:
propertyListWithStream:options:format:error:
recordsProcessed
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
removeItemAtPath:error:
removeObjectAtIndex:
respondsToSelector:
resume
retain
retainCount
self
serialQueue
serializeState
servicePIDWithError:
setActiveDelegateMethods:
setActiveExtractorDelegateMethods:
setCurrentCRC32:
setCurrentLFMode:
setCurrentLFRecord:
setCurrentLFRecordAllocationSize:
setCurrentLFRequiresDataDescriptor:
setCurrentOffset:
setCurrentOutputFD:
setDataDescriptor:
setDecodingFailurePolicy:
setDelegate:
setDenyInvalidSymlinks:
setError:
setExportedInterface:
setExportedObject:
setExtractionPath:
setExtractionProgress:
setExtractorDelegate:
setHasHadPostSetupMethodsCalled:
setInMemoryFileData:
setInProcessDelegateQueue:
setInProcessExtractorDelegate:
setInterruptionHandler:
setInvalidationHandler:
setLastChunkPartialHash:
setLastResumptionOffset:
setLength:
setNeedsPreparation:
setObject:forKeyedSubscript:
setOutputFormat:
setPerformCachedWrites:
setPerformingExtraction:
setRecordsProcessed:
setRemoteObjectInterface:
setStoreCurrentFileInMemory:
setStreamInfoDict:
setThisStageBytesComplete:
setTotalFileSizeWritten:
setTotalRecordCount:
setTotalUncompressedBytes:
setUncompressedBytesOutput:
setUnsureData:
setXpcConnection:
setupUnzipperWithOutputPath:sandboxExtensionToken:options:withReply:
standardUserDefaults
storeCurrentFileInMemory
streamInfoDict
streamState
stringByDeletingLastPathComponent
stringWithCapacity:
stringWithFileSystemRepresentation:length:
stringWithFormat:
stringWithUTF8String:
subdataWithRange:
superclass
supplyBytes:withCompletionBlock:
supplyBytes:withReply:
supportsSecureCoding
suspendStreamWithCompletionBlock:
suspendStreamWithReply:
synchronousRemoteObjectProxyWithErrorHandler:
terminateStreamWithError:completionBlock:
terminateStreamWithReply:
thisStageBytesComplete
totalFileSizeWritten
totalRecordCount
totalUncompressedBytes
uncompressedBytesOutput
unsignedCharValue
unsignedIntValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
unsureData
unzipPath
unzipServiceConnection
unzipStateWithPath:options:error:
updateHashFromOffset:withBytes:length:
updateHashFromOffset:withBytes:length:onlyFinishCurrentChunk:
writeToFile:options:error:
xpcConnection
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8@16*24@32@?40
v32@0:8@16@?24
v24@0:8@?16
v20@0:8i16
v48@0:8@"NSString"16*24@"NSDictionary"32@?<v@?@"NSError"Q>40
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?i@"NSError">16
v24@0:8d16
v24@0:8@16
v16@0:8
v24@0:8@"NSString"16
@"<SZExtractorDelegate>"
@24@0:8^@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"<STExtractorDelegate>"16@0:8
v24@0:8@"<STExtractorDelegate>"16
@"<SZExtractorDelegate>"16@0:8
v24@0:8@"<SZExtractorDelegate>"16
@24@0:8^{_NSZone=}16
v32@0:8@16@24
@32@0:8@16@24
@32@0:8@16^Q24
@40@0:8@16@24^Q32
@48@0:8@16@24Q32^Q40
B24@0:8^Q16
v28@0:8B16@?20
v24@0:8Q16
v20@0:8B16
@"NSString"
@"NSDictionary"
@"NSXPCConnection"
@"StreamingUnzipper"
@"NSObject<OS_dispatch_queue>"
@"SZExtractorInternalDelegate"
@"NSError"
i24@0:8^@16
@40@0:8@16@24^@32
^{?=*Q*Q^v}16@0:8
v20@0:8C16
@24@0:8Q16
@44@0:8Q16r^v24Q32B40
@40@0:8Q16r^v24Q32
B40@0:8@16i24S28^@32
{?=i(?={CC_MD5state_st=IIIIII[16I]i}{CC_SHA1state_st=IIIIIII[16I]i}{CC_SHA256state_st=[2I][8I][16I]}{CC_SHA256state_st=[2I][8I][16I]}{CC_SHA512state_st=[2Q][8Q][16Q]}{CC_SHA512state_st=[2Q][8Q][16Q]})}16@0:8
^{?=[4C]{?=S}{?=S}{?=S}(?={?={?=S}{?=S}}{?=I}){?=I}{?=I}{?=I}{?=S}{?=S}[0C]}16@0:8
v24@0:8^{?=[4C]{?=S}{?=S}{?=S}(?={?={?=S}{?=S}}{?=I}){?=I}{?=I}{?=I}{?=S}{?=S}[0C]}16
i16@0:8
S16@0:8
v20@0:8S16
C16@0:8
^{?=[4C](?={?={?=I}{?=Q}{?=Q}}{?={?=I}{?=I}{?=I}})}16@0:8
v24@0:8^{?=[4C](?={?={?=I}{?=Q}{?=Q}}{?={?=I}{?=I}{?=I}})}16
{?="dst_ptr"*"dst_size"Q"src_ptr"*"src_size"Q"state"^v}
@"NSArray"
{?="hashType"i"context"(?="md5"{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}"sha1"{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}"sha224"{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}"sha256"{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}"sha384"{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}"sha512"{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]})}
@"NSMutableData"
^{?=[4C]{?=S}{?=S}{?=S}(?={?={?=S}{?=S}}{?=I}){?=I}{?=I}{?=I}{?=S}{?=S}[0C]}
^{?=[4C](?={?={?=I}{?=Q}{?=Q}}{?={?=I}{?=I}{?=I}})}
@32@0:8r^v16Q24
v40@0:8r*16Q24@?32
@"StreamingUnzipState"
@"NSObject<OS_os_transaction>"
@"<StreamingUnzipDelegateProtocol>"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>seatbelt-profiles</key>
<array>
<string>StreamingUnzipService</string>
</array>
</dict>
</plist>
.0,
seatbelt-profiles0
StreamingUnzipService
