v16@?0@"AVOutputContextDestinationChange"8
v16@?0@"NSNotification"8
invalid parameter not satisfying: %s
player != nil
itemToLoop != nil
! CMTIMERANGE_IS_EMPTY(loopRange)
! CMTIMERANGE_IS_INDEFINITE(loopRange)
CMTIME_COMPARE_INLINE(loopRange.start, >=, kCMTimeZero)
com.apple.avplayerlooper.ivars
duration
v8@?0
error
status
Loop range must start within [0, item duration]
Loop range must be within [0, item duration]
Template AVPlayerItem's duration must not be 0
loopingPlayerItems
currentItem
AVPlayerLooperObservationCurrentItemContext
AVPlayerLooperObservationItemStatusContext
loopCount
trackOutput != nil
[[trackOutput mediaType] isEqualToString:AVMediaTypeMetadata]
Cannot initialize an instance of %@ with a track output which was used to initialize another instance of %@
Cannot initialize an instance of %@ with a track output which has already progressed beyond AVAssetReaderStatusUnknown
cannot call method until the track output is attached to an asset reader and -startReading has been called on that asset reader
AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification
AVOutputDeviceDiscoverySessionAvailableOutputDeviceGroupsDidChangeNotification
outputdevicediscoverysession_trace
com.apple.avfoundation
com.apple.avfoundation.avodds.ivars
-[AVOutputDeviceDiscoverySession impl]
-[AVOutputDeviceDiscoverySession setDiscoveryMode:forClientIdentifiers:]
q24@?0@8@16
AVAPSyncControllerOutputDeviceImplGetLocalDeviceCompletion
AVAPSyncControllerOutputDeviceImplVolumeDidChange
AVAPSyncControllerOutputDeviceImplVolumeControlSupportedDidChange
AVAPSyncControllerOutputDeviceImplVolumeControlTypeDidChange
AVAPSyncControllerOutputDeviceImplProposedGroupIDDidChange
AVAPSyncControllerOutputDeviceImplLocalDeviceDidChange
AVPlayerLayerVisibilityDidChangeNotification
AVPlayerLayerIsPartOfForegroundSceneDidChangeNotification
UISceneDidEnterBackgroundNotification
UISceneWillEnterForegroundNotification
AVPlayerLayerQueue
com.apple.avfoundation.playerlayer.configuration
contentsAreFlipped
AVPlayerLayerContentsAreFlippedObservationContext
UIWindow
@16@?0@8
bounds.size
bounds
position
sublayerTransform.scale.x
sublayerTransform.scale.y
%@_x
%@_y
sublayerTransform
AVPlayerLayer_PIPPlaceholderLayer_Bounds_%@
AVPlayerLayer_PIPPlaceholderLayer_Position_%@
AVPlayerLayer_MaskLayer_Bounds_%@
AVPlayerLayer_MaskLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@
AVPlayerLayer_VideoLayer_Position_%@
AVPlayerLayer_VideoLayer_SublayerTransform_%@
v16@?0@"CAPropertyAnimation"8
AVPlayerLayer_VideoLayer_SublayerTransform_%@_x
AVPlayerLayer_VideoLayer_SublayerTransform_%@_y
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_x
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_y
playerCurrentItemPresentationSize
player
cachedPresentationSizeOfCurrentItem
@"AVPropertyValuePublisher"16@?0@"AVPlayerItem"8
v16@?0@"NSValue"8
v16@?0@"AVPlayerItem"8
v16@?0@"NSArray"8
v16@?0@"NSNumber"8
AVPlayerLayerPlayerDidChangeNotification
readyForDisplay
videoRect
videoGravity
v32@?0@8@16^B24
Layer %@ is not a permitted sublayer during Picture-in-Picture, will be temporarily removed from the layer tree
targetLayer != nil
[targetLayer isKindOfClass:[AVPlayerLayer class]]
[targetLayer player] == nil
newPlayerLayerForPIP != nil
[newPlayerLayerForPIP isKindOfClass:[AVPlayerLayer class]]
[newPlayerLayerForPIP player] == nil
PIPModeEnabled
maskLayer
videoLayer
subtitleLayer
closedCaptionLayer
interstitialLayers
{?=qiIq}
CMTime: %@
[coder allowsKeyedCoding]
CMTime
{?={?=qiIq}{?=qiIq}}
CMTimeRange: %@
CMTimeRange
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}
CMTimeMapping: {%@, %@}
CMTimeMapping
timebase
A time observer token object was released without first being removed from the object it was created from using -removeTimeObserver:
((Boolean)(((interval).flags & (kCMTimeFlags_Valid | kCMTimeFlags_ImpliedValueFlagsMask)) == kCMTimeFlags_Valid))
((Boolean)(CMTimeCompare(interval, kCMTimeZero) > 0))
block != ((void *)0)
[times count] > 0
B32@?0@8Q16^B24
block
com.apple.avplayeritemmetadatacollector.ivars
newDelegateQueue == NULL
newDelegateQueue != NULL
playerItem != nil
v16@?0@8
obtainCoordinator != nil
com.apple.avplayeriteminterstitialeventcollector.ivars
comn
title
creator
subject
description
publisher
contributor
creationDate
lastModifiedDate
type
format
identifier
source
language
relation
location
copyrights
albumName
author
artist
artwork
make
model
software
accessibilityDescription
com.apple.quicktime.udta
udta
@alb
@arg
@ART
@aut
@chp
@cmt
@com
@cpy
@day
@des
@dir
@dis
@enc
@nam
@gen
@hst
@inf
@key
@mak
@mod
@ope
@fmt
@src
@prf
@prd
@pub
@PRD
@swr
@req
@trk
@wrn
@wrt
@url
@xyz
tnam
@phg
name
tagc
@ade
org.mp4ra
uiso
cprt
date
ades
auth
perf
gnre
yrrc
loci
titl
dscp
coll
urat
thmb
albm
kywd
clsf
rtng
com.apple.quicktime.mdta
mdta
com.apple.quicktime.author
com.apple.quicktime.comment
com.apple.quicktime.copyright
com.apple.quicktime.creationdate
com.apple.quicktime.director
com.apple.quicktime.displayname
com.apple.quicktime.information
com.apple.quicktime.keywords
com.apple.quicktime.producer
com.apple.quicktime.publisher
com.apple.quicktime.album
com.apple.quicktime.artist
com.apple.quicktime.artwork
com.apple.quicktime.description
com.apple.quicktime.software
com.apple.quicktime.year
com.apple.quicktime.genre
info.ixml.xml
com.apple.quicktime.location.ISO6709
com.apple.quicktime.make
com.apple.quicktime.model
com.apple.quicktime.arranger
com.apple.quicktime.encodedby
com.apple.quicktime.originalartist
com.apple.quicktime.performer
com.apple.quicktime.composer
com.apple.quicktime.credits
com.apple.quicktime.phonogramrights
com.apple.quicktime.camera.identifier
com.apple.quicktime.camera.framereadouttimeinmicroseconds
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
com.apple.quicktime.live-photo.vitality-disabled
com.apple.quicktime.is-montage
com.apple.quicktime.title
com.apple.quicktime.collection.user
com.apple.quicktime.rating.user
com.apple.quicktime.location.name
com.apple.quicktime.location.body
com.apple.quicktime.location.note
com.apple.quicktime.location.role
com.apple.quicktime.location.date
com.apple.quicktime.direction.facing
com.apple.quicktime.direction.motion
com.apple.quicktime.content.identifier
com.apple.quicktime.spatial-overcapture.group-identifier
com.apple.quicktime.contains-spatial-overcapture
com.apple.quicktime.accessibility.description
com.apple.itunes
itsk
itlk
covr
@st3
@too
aART
akID
apID
atID
cnID
cpil
disk
geID
grup
plID
tmpo
trkn
@ard
@lyr
@cak
@con
@equ
@lnt
@sne
@sol
@thx
@xpd
org.id3
AENC
APIC
ASPI
COMM
COMR
ENCR
EQUA
EQU2
ETCO
GEOB
GRID
IPLS
LINK
MCDI
MLLT
OWNE
PRIV
PCNT
POPM
POSS
RBUF
RVAD
RVA2
RVRB
SEEK
SIGN
SYLT
SYTC
TALB
TBPM
TCOM
TCON
TCOP
TDAT
TDEN
TDLY
TDOR
TDRC
TDRL
TDTG
TENC
TEXT
TFLT
TIME
TIPL
TIT1
TIT2
TIT3
TKEY
TLAN
TLEN
TMCL
TMED
TMOO
TOAL
TOFN
TOLY
TOPE
TORY
TOWN
TPE1
TPE2
TPE3
TPE4
TPOS
TPRO
TPUB
TRCK
TRDA
TRSN
TRSO
TSIZ
TSOA
TSOP
TSOT
TSRC
TSSE
TSST
TYER
TXXX
UFID
USER
USLT
WCOM
WCOP
WOAF
WOAR
WOAS
WORS
WPAY
WPUB
WXXX
StreamTitle
StreamUrl
com.apple.quicktime.HLS
lsdr
m3u8
NAME
caaf
public.unknown
HREF
dataType
dataTypeNamespace
pictureType
baseURL
info
CurrentEventDidChangeNotification
EventsDidChangeNotification
AVPlayerWaitingDuringInterstitialEventReason
EventNoCue
EventJoinCue
EventLeaveCue
CMTIME_IS_NUMERIC(time)
date != nil
Template items for interstitial events must employ assets that can be referenced by URL (AVURLAssets)
date != nil || CMTIME_IS_NUMERIC(time)
com.apple.avplayerinterstitialevent.ivars
<%@: %p, primaryItem = %p, ctx = %p, templateItems = %p>
events returned by AVPlayerInterstitialEventMonitor are not mutable; modify a copy instead
Cannot create an InterstitialEventMonitor for an interstitial player.
Could not obtain the interstitial player.
Use %@ instead.
com.apple.avplayerinterstitialeventcontroller
invalid event %@ (%d)
com.apple.avfoundation.avsamplebuffervideooutput
delegateQueue == NULL
delegateQueue != NULL
important
default
storageManagementPolicy != nil
downloadStorageURL != nil
bundleIdentifier != nil
Not a fileURL %@
No file at %@
<%@: %p, ExpirationDate: %@ Priority: %@>
ExpirationDate
Priority
AVOutputDeviceGroupAddOutputDeviceOptionAuthorizationToken
AVOutputDeviceGroupAddOutputDeviceOptionCancelIfAuthRequiredKey
AVOutputDeviceGroupAddOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputDeviceGroupVolumeDidChangeNotification
AVOutputDeviceGroupVolumeControlTypeDidChangeNotification
AVOutputDeviceGroupOutputDevicesDidChangeNotification
AVOutputDeviceGroupMembershipChangeInitiator
AVOutputDeviceGroupMembershipChangeResultCancellationReasonAuthorizationSkipped
outputdevicegroup_trace
<%@: %p>
-[AVOutputDeviceGroup outputDeviceGroupImpl:didChangeOutputDevicesWithInitiator:]
-[AVOutputDeviceGroup addOutputDevice:withOptions:completionHandler:]
-[AVOutputDeviceGroup addOutputDevice:withOptions:completionHandler:]_block_invoke
v16@?0@"AVOutputDeviceGroupMembershipChangeResult"8
-[AVOutputDeviceGroup removeOutputDevice:withOptions:completionHandler:]
-[AVOutputDeviceGroup removeOutputDevice:withOptions:completionHandler:]_block_invoke
-[AVOutputDeviceGroup outputDeviceGroupImplDidChangeVolume:]
-[AVOutputDeviceGroup outputDeviceGroupImplDidChangeVolumeControlType:]
MIMEtype
languageCode
v24@?0Q8^B16
v16@?0@"AVMetadataItemValueRequest"8
 length=%lu
<%@: %p, identifier=%@, keySpace=%@, key class = %@, key=%@, commonKey=%@, extendedLanguageTag=%@, dataType=%@, time=%@, duration=%@, startDate=%@, extras=%@, value class=%@, value%@>
Metadata item %p has no data type
Metadata item %p has no identifier.  If the item was given a key and key space, use +[%@ %@] to check whether an identifier can be made from that key and key space
+[NSJSONSerialization isValidJSONObject:] returned NO for the AVMetadataItem's value
Bad identifier. Identifier should be of the form "<keySpace>/<key>". Try using +%@ to generate an identifier from key and keySpace.
keySpace
com.apple.avfoundation.avmetadataitem
value
com.apple.avfoundation.avchaptermetadataitem
<%@: %p, chapterType=%@, locale identifier=%@, value=%@, time=%@, duration=%@, extras=%@>
extraAttributes
com.apple.iTunes.iTunSMPB
com.apple.iTunes.iTunNORM
ludt
AVMetadataMakeMetadataObjectFromBoxedMetadata
/System/Library/PrivateFrameworks/AVFCapture.framework/AVFCapture
AVMetadataMakeDependentSpecificationsForValue
AVMetadataObjectCreateBoxedMetadataFromObjectAndFormatDescription
Value
http
https
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
moop
mpvr
AVURLAssetPreferPreciseDurationAndTimingKey
AVURLAssetReferenceRestrictionsKey
AVURLAssetTypeKey
AVURLAssetClientBundleIdentifierKey
AVURLAssetClientAuditTokenKey
AVURLAssetParentNetworkActivityKey
AVURLAssetAlternativeConfigurationOptionsKey
ServiceIdentifier
HierarchyToken
MediaIdentifier
ContentProvider
iTunesServiceMonitoringKey
ServiceInformationKey
AVURLAssetInspectorLoaderKey
AVURLAssetProtectedContentSupportStorageURLKey
AVURLAssetCacheKey
AVURLAssetShouldMatchDataInCacheByURLPathComponentOnlyKey
AVURLAssetShouldMatchDataInCacheByURLWithoutQueryComponentKey
AVURLAssetOutOfBandMIMETypeKey
AVURLAssetAllowableTypeCategoriesKey
AVURLAssetAllowableAudioCodecTypesKey
AVURLAssetAllowableVideoCodecTypesKey
AVURLAssetAllowableCaptionFormatsKey
AVAssetRequiresInProcessOperationKey
AVAssetPrefersSandboxedParsingOptionKey
AVURLAssetHTTPUserAgentKey
AVURLAssetHTTPHeaderFieldsKey
AVURLAssetHTTPCookiesKey
AVURLAssetAllowsCellularAccessKey
AVURLAssetAllowsExpensiveNetworkAccessKey
AVURLAssetAllowsConstrainedNetworkAccessKey
AVURLAssetURLRequestAttributionKey
AVURLAssetByteRangeInFileKey
AVURLAssetClientURLLoadingRepresentsAccurateNetworkStatistics
AVURLAssetVideoNotEligibleForAppRecordingKey
AVURLAssetRequiresCustomURLLoadingKey
AVURLAssetUseClientURLLoadingExclusively
AVURLAssetCacheUseNonPurgeableMemoryKey
AVURLAssetCacheNonPurgeableMemoryLimitKey
AVURLAssetUsesNoPersistentCacheKey
AVURLAssetPreloadDurationWhenNextItemKey
AVURLAssetDownloadDestinationURLKey
AVURLAssetDownloadIsLowPriorityKey
AVURLAssetPurchaseBundleKey
AVURLAssetAirPlayAuthorizationInfoKey
AVURLAssetMaxSizeAllowedForCellularAccessKey
AVURLAssetNetworkProbeRequestDisabledKey
AVURLAssetReadAheadOnByteStreamCreationEnabledKey
AVURLAssetRemoteCustomURLHandlerContextKey
AVURLAssetSSLPropertiesKey
AVURLAssetNetworkLatencyMitigationKeyPodcastsOnly
AVURLAssetDownloadCompleteSuccessNotification
AVURLAssetDownloadCompleteFailedNotification
AVURLAssetDownloadCompleteNotificationErrorKey
AVURLAssetDownloadTokenKey
AVURLAssetBoundNetworkInterfaceName
AVURLAssetUseAppleWirelessDirectLinkKey
AVURLAssetInheritURIQueryComponentFromReferencingURIKey
AVURLAssetAllowedHTTPProtocolTypesKey
AVURLAssetApplicationTransportSecurityKey
AVURLAssetOptimizeAccessForLinearMoviePlaybackKey
AVURLAssetShouldEnableLegacyWebKitCompatibilityModeForContentKeyRequests
AVURLAssetiTunesStoreContentInfoKey
AVURLAssetiTunesStoreContentIDKey
AVURLAssetiTunesStoreContentTypeKey
AVURLAssetiTunesStoreContentUserAgentKey
AVURLAssetiTunesStoreContentDownloadParametersKey
AVURLAssetiTunesStoreContentDSIDKey
AVURLAssetiTunesStoreContentPurchasedMediaKindKey
AVURLAssetiTunesStoreContentRentalIDKey
AVURLAssetiTunesStoreContentAlternateContentInfoKey
AVURLAssetiTunesStoreContentAlternateContentInfoAssetURLStringKey
AVURLAssetiTunesStoreContentHLSAssetURLStringKey
AVAssetPreferPreciseDurationAndTimingKey
AVAssetReferenceRestrictionsKey
AVAssetMediaServicesWereResetNotification
AVAssetMediaServicesWereResetErrorKey
AVAssetPrepareForIncrementalFragmentsKey
AVURLAssetPrimarySessionIdentifierKey
chap
tmcd
ssrc
fall
sbtl
forc
cdsc
folw
AVURLAssetOutOfBandAlternateTracksKey
MediaSelectionOptionsName
MediaSelectionOptionsExtendedLanguageTag
MediaSelectionOptionsIsDefault
MediaSelectionOptionsTaggedMediaCharacteristics
MediaSelectionOptionsClientIdentifier
MediaSelectionOptionsURL
AVMetadataFormatTypedID3Metadata
AVPropertyListForProxyCreationOption_ReduceMetadataForPhotoLibrary
AVAssetDurationDidChangeNotification
AVAssetChapterMetadataGroupsDidChangeNotification
AVAssetMediaSelectionGroupsDidChangeNotification
AVAssetContainsFragmentsDidChangeNotification
AVAssetWasDefragmentedNotification
AVURLAssetEnableQUICKey
AVURLAssetForceQUICKey
AVURLAssetWhitelistQUICKey
AVURLAssetEnableMultiPath
AVURLAssetPreferLargeResourceRequests
AVURLAssetLoggingIdentifier
AVURLAssetUnitTestOptions
AVURLAssetCustomURLLoaderKey
contentType != nil
[data length] > 0
streaming
tracks
naturalSize
availableMediaCharacteristicsWithMediaSelectionOptions
v16@?0@"NSError"8
availableMetadataFormats
AVChapterGroupTypeKey
AVChapterGroupLanguageCodeKey
AVChapterGroupExtendedLanguageTagKey
AVChapterGroupPerChapterInfoKey
AVChapterGroupChaptersKey
availableChapterLocales
index %d out of bounds.
MediaValidator.plist
public.playlist
AVURLAssetMaxSizeAllowedForCellularAccessKey and AVURLAssetAllowsCellularAccessKey options are incompatible
User-Agent
v32@?0@8Q16^B24
AVURLAssetDownloadDestinationURLKey and AVURLAssetUsesNoPersistentCacheKey options are incompatible
AVURLAssetHasSecurityScopedURLKey
com.apple.avurlasset.tracks
Cannot honor specified AVURLAsset initialization options for AVURLAsset <%p>%@
: %@
<%@: %p, URL = %@>
^{OpaqueFigAsset=}8@?0
com.apple.avfoundation.avurlasset.instanceIdentifierMapping
Data length cannot exceed %llu bytes
AVURLAssetItemProviderURLWrapperKey
AVURLAssetItemProviderAssetInitializationOptionsKey
com.apple.avfoundation.urlasset
Reading data from the type identifier %@ is not supported by AVURLAsset.
Reading file representations for the type identifier %@ is not supported by AVURLAsset.
Writing to NSItemProviders is not supported for non file:/// scheme URLs: %@
Loading data from the type identifier %@ is not supported by AVURLAsset.
Loading file representations for the type identifier %@ is not supported by AVURLAsset.
supports only keyed archivers
assetCreationOptions
httpCookies
minimumCutOffFrequency < maximumCutOffFrequency
0. <= bypassThreshold && bypassThreshold <= 1.
0. <= sweepValue && sweepValue <= 1.
CleanAperture
ProductionAperture
EncodedPixels
com.apple.avfoundation.requestsqueue
com.apple.avfoundation.imagerequestqueue
com.apple.avfoundation.generateimagesasyncqueue
handler != nil
RequestID
RequestedTime
CompletionHandler
Self
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
AVAssetImageGenerator can't use a video composition with a renderScale other than 1.0
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl _didReceiveData:]
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl _didCloseCommunicationChannel]
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl sendData:completionHandler:]
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImplHandleEvent
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImplSendDataCompletion
vmap
mdep
AVAssetTrackTimeRangeDidChangeNotification
AVAssetTrackSegmentsDidChangeNotification
AVAssetTrackTrackAssociationsDidChangeNotification
AVAssetTrackMetadataDidChangeNotification
<%@: %p, trackID = %d, mediaType = %@>
segments
availableTrackAssociationTypes
AVPlayerWaitingToMinimizeStallsReason
AVPlayerWaitingWhileEvaluatingBufferingRateReason
AVPlayerWaitingWithNoItemToPlayReason
AVPlayerWaitingForCoordinatedPlaybackReason
An AVPlayerItem can occupy only one position in a player's queue at a time.
AVPlayerCurrentItemDidChangeNotification
ReasonForCurrentItemDidChange
ReasonAddToPlayQueue
ReasonRemoveFromPlayqueue
ReasonAdvanceAtEnd
ReasonAdvanceForOverlappedPlayback
ReasonAdvanceDueToError
ReasonUnknown
AVPlayerAvailableHDRModesDidChangeNotification
AVPlayerEligibleForHDRPlaybackDidChangeNotification
AVPlayerPlaybackWasInterruptedNotification
MatchMultichannelTrackPreferenceToAudioDevice
PreferStereo
PreferAC3ViaExclusivePassthrough
CoreTextSubtitleRenderer
CaptionDisplayService
CFAttributedStrings
FigCaptions
AVPlayerRateDidChangeNotification
AVPlayerRateDidChangeReasonKey
AVPlayerRateDidChangeRateChangeIdentifierKey
AVPlayerRateDidChangeOriginatingParticipantKey
AVPlayerRateDidChangeReasonAudioSessionInterrupted
AVPlayerRateDidChangeReasonSetRateCalled
AVPlayerRateDidChangeReasonSetRateFailed
AVPlayerRateDidChangeReasonAppBackgrounded
AVPlayerRateDidChangeReasonRouteChanged
AVPlayerRateDidChangeReasonPlaybackResumed
AVPlayerRateDidChangeReasonPlaybackStalled
AVPlayerRateDidChangeReasonPauseAtItemEnd
AVPlayerRateDidChangeReasonStatusChanged
AVPlayerRateDidChangeReasonCoordinatedPlayback
AVPlayerBackgroundPIPAuthorizationTokenDidChangeNotification
AVPlayerAudiovisualBackgroundPlaybackPolicyDidChangeNotification
AVPlayerInterstitialPlayerDidChangeNotification
Scanning
avplayer_trace
Item must be an instance of AVPlayerItem.
B24@?0^B8^@16
AvoidConcurrentKVOForAVPlayerCurrentItem
com.apple.avplayer.figplayer
com.apple.avplayer.playerlayer
com.apple.avplayer.ivars
com.apple.avplayer.current-item-properties
com.apple.avplayer.configuration
com.apple.avplayer.layers
avplayer_logperformance
AVPlayer %p deallocated while a pending preroll is still in progress; leaking completion handler. Use -cancelPendingPrerolls to deallocate an AVPlayer safely while a preroll is still pending.
masterClock
sourceClock
-[AVPlayer _changeStatusToFailedWithError:]
rate
AVPlayerCurrentItemDidChangeForPublishersNotification
isDisplayingClosedCaptions
AVPlayerIsDisplayingClosedCaptionsDidChangeNotification
-[AVPlayer _setCurrentItem:]
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:]_block_invoke
timeControlStatus
reasonForWaitingToPlay
-[AVPlayer _advanceCurrentItemAccordingToFigPlaybackItem:]
-[AVPlayer _advanceToNextItem]
Item must be a non-nil instance of AVPlayerItem.
v16@?0q8
-[AVPlayer _insertItem:afterItem:]
surrogate_player_disabled
coordinator_player_disabled
airPlayVideoActive
externalPlaybackActive
mxSessionID
PIPModePossible
avplaybackcoordinator_always
AVPlayer_FigPlayerProperty_Rate
AVPlayer_FigPlayerProperty_RateOptions
v24@?0@"NSArray"8@"NSArray"16
AVPlayer's expectedAssetTypes can't be after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
AVPlayer.m
Invalid parameter not satisfying: %@
item != nil
-[AVPlayer _removeItem:]
-[AVPlayer replaceCurrentItemWithPlayerItem:]
v24@?0@"AVPlayerItem"8^B16
-[AVPlayer _setRate:rateChangeReason:figPlayerSetRateHandler:]_block_invoke
v20@?0^{OpaqueFigPlayer=}8i16
-[AVPlayer setAutomaticallyWaitsToMinimizeStalling:]_block_invoke
AVPlayer's _usesLegacyAutomaticWaitingBehavior can't be set after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: until its status is AVPlayerStatusReadyToPlay.
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: when automaticallyWaitsToMinimizeStalling is YES
AVPlayer cannot service a preroll request until its status is AVPlayerStatusReadyToPlay.
AVPlayerActionAtItemEndAdvance is not allowed for a player of class %@
%d is not a valid actionAtItemEnd for a player of class %@
-[AVPlayer play]
block != nil
v32@?0{?=qiIq}8
An instance of AVPlayer cannot remove a time observer that was added by a different instance of AVPlayer.
You did not supply a reference to an object returned by either -addPeriodicTimeObserverForInterval:queue:usingBlock: or -addBoundaryTimeObserverForTimes:queue:usingBlock:
-[AVPlayer _copyDisplayedPixelBuffer]
OverlappedPlaybackDidComplete
++++++++++++++++++++++++++++++++++++++++++
------------------------------------------
UIApplication
com.apple.iapd.notify.extendedMode
com.apple.avfoundation.tool-has-foreground-exemption
AVPlayer background assertion
com.apple.common
FinishTaskInterruptable
MusicPlayer
audioSession != nil
Cannot set preservesAudioSessionSampleRate after the AVPlayer has begun preparing for playback.
Not available.  Use %@ or %@ instead
AVPlayerItem *AVPlayerFindItemMatchingFigPlaybackItem(NSArray *, FigPlaybackItemRef, NSArray **)
figPlaybackItemToFind != NULL
@"AVPlayerRateState"20@?0@"AVPlayerRateState"8B16
avplayer_fpInterstitialCoordinatorNotificationCallback_block_invoke
AVController_Volume
_AVPlayer_Volume
_AVPlayer_VolumeDidChangeNotification
muted
outputObscuredDueToInsufficientExternalProtection
isSilencedDueToConflictWithOtherPlayback
OverlappedPlaybackID
TimeReachedDuringOverlappedPlayback
avplayer_fpNotificationCallback_block_invoke_2
com.apple.avfoundation.avplayer.iapd
variantQualifiers
mediaSelections
preferredMediaSelection
asset != nil
title != nil
assetURL
downloadToken
artworkData
primaryContentConfig
auxiliaryContentConfigs
optimizesAuxiliaryContentConfigs
Unexpected terminal status %d
-[`AVUXMDisplayManager` init] unavailable
com.apple.avuxmdisplaymanager
AVSampleBufferAudioRendererWasFlushedAutomaticallyNotification
AVSampleBufferAudioRendererFlushTimeKey
AVSampleBufferAudioRendererOutputConfigurationDidChangeNotification
outputContext != nil
audioOutputDeviceUniqueID != nil
newAudioTimePitchAlgorithm != nil
The AudioRenderer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
sampleBuffer != NULL
Sample buffer has media type '%@' instead of '%@'
completionHandler != nil
queue != NULL
AVSampleBufferAudioRendererFigFactoryKey
input != nil
[[input mediaType] isEqual:AVMediaTypeMetadata]
Cannot create a new metadata adaptor with an asset writer input that is already attached to a metadata adaptor
Cannot create a new metadata adaptor with an asset writer input that has already started writing
Cannot create a new metadata adaptor with an asset writer that does not carry a source format hint
%@ only knows how to produce data with media subtype '%@', so it must be initialized with an instance of AVAssetWriterInput that is expecting data in that format
<%@: %p, assetWriterInput = %@>
group != nil
CMTIME_IS_NUMERIC([group timeRange].start)
! CMTIME_IS_NEGATIVE_INFINITY([group timeRange].duration)
Cannot invoke method before the attached asset writer input has been added to an asset writer and -startWriting has been called on that asset writer
Cannot write to file timed metadata group %p%@
AVExternalProtectionMonitorExternalProtectionStateChangedNotification
formatDescriptions
video format desc 
audio format desc 
(%@) 
- codec:%.4s 
video-range:%@
, bit-depth:%@
, channels:%u
, sample-rate:%uHz
kbps
Mbps
%0.2f%@
HDR10
DolbyVision 8.4
DolbyVision 5
Unknown
average bitrate 
mediaType
estimatedDataRate
video:
audio:
%@  
unknown
streaming (HLS)
local file
progressive download (CRABS)
custom-loaded
nominalFrameRate
[ M-Ch ]
[ 2-Ch ]
[ S-Ch ]
[ ?-Ch ]
asset type:%@
session-id:%@
configurationGroup: %@
display resolution:%0.0f x %0.0f
, refresh-rate:%0.2fHz
, video-range:%@
video approximate-display-size:%0.0f x %0.0f  
video approximate-display-size:-  
natural-size:%0.0f x %0.0f
current frame rate:%0.2f
nominal frame rate:%0.2f
network bandwidth:%@
video:%@  
audio:%@
indicated bitrate 
peak:%@  
average:%@  
stalls total:%ld  current-variant:%ld
frame drops 
total:%ld  
decode:%d  
imageQ:%d
buffered video before:%0.1fs  
after:%0.1fs
Helvetica-Bold
enable
spatial
interval
color
opacity
fontsize
show_complete_uri
xoffset
yoffset
InternalBuild
main-screen-scale
com.apple.avfoundation.videoperformancehud
AVPlayerItemTimebaseChangedNotification
GaplessInfoHeuristicInfoKey
GaplessInfoEncodingDelayInFramesKey
GaplessInfoEncodingDrainInFramesKey
GaplessInfoDurationInFramesKey
GaplessInfoLastPacketsResyncKey
RampInOutInfoInDuration
RampInOutInfoOutDuration
AudibleDRMInfoGroupID
AVPlayerItemTimeJumpedNotification
AVPlayerItemTimeJumpedOriginatingParticipantKey
AVPlayerItemTimeJumpedReasonKey
AVPlayerItemDidPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeErrorKey
AVPlayerItemPlaybackStalledNotification
AVPlayerItemRecommendedTimeOffsetFromLiveDidChangeNotification
AVPlayerItemNewAccessLogEntry
AVPlayerItemNewErrorLogEntry
AVPlayerItemMediaSelectionDidChangeNotification
AVProtectedContentProviderFairPlay
AVInitializeProtectedContentPlaybackSupportStorageURLKey
AVInitializeProtectedContentPlaybackSupportVideoKey
AVInitializeProtectedContentPlaybackSupportExternalProtectionKey
AVPlayerItemBecameCurrentNotification
AVPlayerItemStoppedBeingCurrentNotification
AVPlayerItemVariantChangedNotification
AVPlayerItemSuppressesVideoLayersDidChangeNotification
AVPlayerItemHasEnqueuedVideoFrameDidChangeNotification
AVPlayerItemPreferredPixelBufferAttributesDidChangeNotification
AVPlayerItemSpatialAudioRenderingDidChangeNotification
AVPlayerItemReachedTimeToPauseBufferingNotification
AVPlayerItemReachedTimeToPausePlaybackNotification
AVPlayerItemOverlappedPlaybackWillBeginNotification
AVPlayerItemOverlappedPlaybackDidCompleteNotification
AVPlayerItemSeekDidCompleteNotification
AVPlayerItemSeekDidCancelNotification
AVPlayerItemSeekIDKey
AVPlayerItemTimeJumpedReasonUnknown
AVPlayerItemTimeJumpedReasonClientInitiated
AVPlayerItemTimeJumpedReasonJoiningCoordinatedPlayback
AVPlayerItemTimeJumpedReasonChangeInCoordinatedPlaybackTiming
AVPlayerItemTimeJumpedReasonEndOfCoordinatedPlaybackSuspension
AVPlayerItemTimeJumpedReasonRejoiningCoordinatedPlayback
AVPlayerItemTimeJumpedReasonInterstitialResumptionOffset
SessionID
PlayInfo
avplayeritem_trace
%@ does not support playback via AVPlayer
com.apple.avplayeritem.ivars
com.apple.avplayeritem.figplaybackitem
com.apple.avplayeritem.figplaybackitem.accessor
com.apple.avplayeritem.figplaybackitem.setter
com.apple.avplayeritem.seek
-[AVPlayerItem dealloc]
AVPlayerItem %p deallocated while a pending seek is still in progress; leaking completion handler. Use -cancelPendingSeeks to deallocate an AVPlayerItem safely while a seek operation is still pending.
<%@: %p, %@>
asset = %@
URL = %@
with no asset and no URL
_externalProtectionRequiredForPlayback
timedMetadata
-[AVPlayerItem _configurePlaybackItem]
An AVPlayerItem cannot be associated with more than one instance of AVPlayer
AVPlayerItem.m
previousItem != nil
presentationSize
AVPlayerItemPresentationSizeDidChangeNotification
AVPlayerItemTracksDidChangeNotification
isNonForcedSubtitleDisplayEnabled
AVPlayerItemNonForcedSubtitleDisplayEnabledDidChangeNotification
asset
%@, 
See -[AVPlayerItem errorLog] for %d events
OverlappedPlaybackWillBegin
Invalid SeekID
seekID was not created by this player item
Seeking is not possible to time %@
toleranceBefore seekToTime must be valid
toleranceBefore seekToTime may not be negative
toleranceAfter seekToTime must be valid
toleranceAfter seekToTime may not be negative
 (must be called from the main queue)
-[AVPlayerItem seekToDate:]
-[AVPlayerItem stepByCount:]
preferredForwardBufferDuration >= 0.0
AudioCurves
AVVideoCompositions using AVVideoCompositionCoreAnimationTool cannot be used with AVPlayerItem. AVVideoCompositionCoreAnimationTool is for offline rendering only.
BytesStillNeededToEnd
DurationFromNowToEnd
CurrentMeasuredBytesPerSecond
RawMeasuredBytesPerSecond
BandwidthSlopFactor
EstimatedTimeToLikelyToKeepUp
RemoteIPAddress
Default
-[AVPlayerItem selectMediaOption:inMediaSelectionGroup:]
-[AVPlayerItem selectMediaOptionAutomaticallyInMediaSelectionGroup:]
^{OpaqueFigPlayerInterstitialCoordinator=}8@?0
canPlaySlowForward
canPlayFastForward
canPlayReverse
canPlaySlowReverse
canPlayFastReverse
canStepForward
canStepBackward
-[AVPlayerItem _updateItemIdentifierForCoordinatedPlayback]_block_invoke
AVPlayerItem does not support the specified protected content provider
AVPlayerItem could not uninitialize the specified protected content support session
AVPlayerItem._externalProtectionRequiredForPlayback can only be set to YES
Cannot get rental expiration date information from an AVPlayerItem that does not contain rental content
Cannot get rental playback date information from an AVPlayerItem that does not contain rental content or when rental playback has not started
playerReference != nil
playerItemReference != nil
<%@: %p, player = %@, playerItem = %@>
Player connections are one-shot objects.  Cannot connect a player connection that was already disconnected.  To re-connect an AVPlayerItem to an AVPlayer, create a new player AVPlayerConnection object
Cannot connect a player connection that is already connected
Cannot disconnect a player connection that was already disconnected
Cannot attach AVPlayerItemSampleBufferOutput to AVPlayerItem
Cannot attach an output that is already attached or nil output
Cannot attach a collector that is already attached
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSObject)]
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSCopying)]
None
Adaptive
LivePhoto
DigitalZoom
hasEnabledAudio
hasEnabledVideo
hasVideo
nonForcedSubtitleDisplayEnabled
playbackLikelyToKeepUp
playbackBufferEmpty
playbackBufferFull
seekableTimeRanges
seekableTimeRangesLastModifiedTime
loadedTimeRanges
AVPlayerItemWasRemovedFromPlayQueueNotification
avplayeritemtrack_trace
com.apple.avplayeritemtrack.ivars
<%@: %p, assetTrack = %@>
VideoEnhancementFilterOptions
DisableColorMatching
ActiveHapticChannelIndex
Volume
Cannot add any AVPlayerItemOutput other than AVPlayerItemSampleBufferOutput to AVPlayerItemTrack
Cannot remove any AVPlayerItemOutput other than AVPlayerItemSampleBufferOutput from AVPlayerItemTrack
Identifier name must be 6 chars or less
Identifier name must not contain more than one period
Identifier name must not contain non-numeric character after period
%@.%02d
I/%@
P/%@
<%@: %p tracks = %@>
Cannot honor specified AVURLAsset initialization options for AVMutableComposition <%p>%@
URLAssetInitializationOptions
compositionMetadataArray
trackID
naturalTimeScale
extendedLanguageTag
preferredTransform
preferredVolume
alternateGroupID
formatDescriptionReplacements
originalFormatDescription
replacementFormatDescription
trackMetadataArray
%c%c%c
root
[identifiers count] > 0
com.apple.avplayeritemmetadataoutput.ivars
com.apple.avplayeritemmetadataoutput.accumulationqueue
<%@: %p trackID = %d, mediaType = %@, editCount = %d>
Count of timeRanges array and count of tracks array do not match.
originalFormatDescription != NULL
Media type of the new format description must match that of the existing format description
<%@: %p object=%@>
avpubsub_trace
<%@: %p key=%@, object=%@, notification=%@>
<%@: %p upstream=%@>
v16@?0@"AVPublisher"8
<%@: %p upstream=%@
<%@: %p publisher=%@>
MediaUIStyle
MediaUIFullWidth
MediaUIFormatTemplate
arab
-[AVTimeFormatter stringFromTimeInterval:]: unsupported style
%@+%@
-[AVTimeFormatter setStyle:]: unsupported style
AVCrackTime
AVTimeFormatter.m
time >= 0.0
<%@: %p timeRange [%.3f,+%.3f] 
is empty
from trackID %d of asset %@ sourceTimeRange [%.3f,+%.3f]
sourceURL
sourceTrackID
trackGroups
<%@: %p, trackID = %d, mediaType = %@, sampleReferenceBaseURL = %@>
formatDescription != NULL
newFormatDescription != NULL
Source asset must have a value of YES for providesPreciseDurationAndTiming
Media type of sample buffer must match receiver's media type ("%@")
CMSampleBuffers containing image buffers are not supported; you must provide CMSampleBuffers containing encoded video
CMSampleBuffers containing caption groups are not supported; you must provide CMSampleBuffers containing encoded media data
data != nil
the tracks being associated must belong to the same movie
the tracks being dissociated must belong to the same movie
%@ status read/write queue
Cannot initialize an instance of %@ with an asset at non-local URL '%@'
formatReader
<%@: %p, asset = %@, outputs = %@>
cannot be called after reading has started
cannot add an output that has already been added to the receiver
cannot add an output after reading has started
cannot add an output that has already been added to another AVAssetReader
output != nil
finished
v24@?0@"AVAssetReader"8@"NSDictionary"16
cannot be called again after reading has already started
AVAssetReaderOutput.m
The receiver cannot already be attached to an AVAssetReader.
cannot copy next sample buffer before adding this output to an instance of AVAssetReader (using -addOutput:) and calling -startReading on that asset reader
timeRanges != nil
Each entry in timeRanges must be an instance of %@
Start time of each time range must be numeric - see CMTIME_IS_NUMERIC
Duration of each time range must be nonnegative & numeric or positive infinity - see CMTIME_IS_NUMERIC
Start time of each time range must be greater than or equal to the end time of the previous time range
cannot be called before reading has started
cannot be called after the asset reader has entered a failure state
cannot be called until all samples have been read (i.e. %@ returns NULL)
cannot be called without setting %@ to YES
cannot be called after calling %@
track != nil
%@ does not currently support AVVideoCleanApertureKey or AVVideoPixelAspectRatioKey
%@ does not currently support AVVideoScalingModeKey
Output settings are not compatible with media type %@
AVAssetReaderOutput does not currently support compressed output
AVAssetReaderOutput does not support AVSampleRateConverterAudioQualityKey
<%@: %p, track = %@, outputSettings = %@>
audioTimePitchAlgorithm must be one of: %@
cannot copy sample buffers when attached to an adaptor
audioTracks != nil
[audioTracks count] >= 1
tracks must all have media type AVMediaTypeAudio
tracks must all be part of the same AVAsset
<%@: %p, audioTracks = %@, audioSettings = %@>
track must be one of the tracks used to create the receiver
videoTracks != nil
[videoTracks count] >= 1
tracks must all have media type AVMediaTypeVideo
%@ does not currently support AVVideoDecompressionPropertiesKey
<%@: %p, videoTracks = %@>
AVAssetReaderVideoCompositionOutput can't use a video composition with a renderScale other than 1.0
*** AVAssetReaderVideoCompositionOutput.videoComposition needs to be set
<%@: %p, track = %@>
outputURL != nil
[outputURL isFileURL]
outputFileType != nil
outputContentType != nil
%@ helper read/write queue
<%@: %p, outputURL = %@, outputFileType = %@>
helper
CMTIME_COMPARE_INLINE(interval, >=, kCMTimeZero)
(CMTIME_IS_NUMERIC(hint) && CMTIME_COMPARE_INLINE(hint, >=, kCMTimeZero)) || CMTIME_IS_INVALID(hint)
movieTimeScale >= 0
0 < sequenceNumber
fileSize > 0
mediaDataSize > 0
inputGroup != nil
CMTIME_IS_NUMERIC(startTime)
CMTIME_IS_NUMERIC(endTime)
-flushSegment can be called only if the delegate method to output segment data is implemented.
-flushSegment can be called only if the value of the preferredOutputSegmentInterval property is kCMTimeIndefinite.
[configurationState mediaFileType] != nil
[configurationState inputs] != nil
[configurationState inputGroups] != nil
[configurationState metadataItems] != nil
Cannot use the virtual capture card
The output file type %@ does not support mutually exclusive relationships among tracks.
At least one AVAssetWriterInput in the given inputGroup is also present in an inputGroup already added.
At least one provisional AVAssetWriterInput in the given inputGroup is also present as a provisional input in an inputGroup already added.
figFragmentedMediaDataReportDict != nil
com.apple.avfoundation.avassetwriter.writing.assetwriteraccessqueue
The outputURL and the delegate method to output segment data cannot be specified at same time. Only one of them must be specified.
The outputURL and the delegate method to produce fragmented data cannot be specified at same time. Only one of them must be specified.
The delegate method to output segment data and the delegate method to produce fragmented data cannot be specified at same time. Only one of them must be specified.
Neither the outputURL nor the delegate method to output segment data is specified. One of them must be specified.
The value of the outputFileTypeProfile property must be file type profile AppleHLS or CMAFCompliant to output segment data.
The value of the outputFileType must be AVFileTypeMPEG4 for file type profile %@.
The value of the preferredOutputSegmentInterval property must be kCMTimeIndefinite or a positive numeric time to output segment data.
The value of the initialSegmentStartTime property must be a numeric time to output segment data.
AVAssetWriter supports file type profile %@ if the delegate method to output segment data is implemented. Please use -initWithContentType: initializer and implement -assetWriter:didOutputSegmentData:segmentType:segmentReport: or -assetWriter:didOutputSegmentData:segmentType: delegate method.
The preferredOutputSegmentInterval property is used if the delegate method to output segment data is implemented. Please use -initWithContentType: initializer and implemen -assetWriter:didOutputSegmentData:segmentType:segmentReport: or -assetWriter:didOutputSegmentData:segmentType: delegate method.
Media type '%@' is not allowed for file type profile %@.
More than one track is not allowed for file type profile %@.
Closed caption track is not allowed for file type profile %@.
More than one video track is not allowed for file type profile %@.
More than one audio track is not allowed for file type profile %@.
More than one closed caption track is not allowed for file type profile %@.
Closed caption track must accompany video track for file type profile %@.
AVAssetWriter does not support encoding of video track and passthrough of audio track at same time for file type profile %@. Please match both AVAssetWriterInput's output settings.
AVAssetWriter does not support encoding of audio track and passthrough of video track at same time for file type profile %@. Please match both AVAssetWriterInput's output settings.
If the value of the preferredOutputSegmentInterval property is a positive numeric time, AVAssetWriter does not support passthrough of video track and audio track at same time for file type profile %@. Please specify a non-nil output settings dictionary for both AVAssetWriterInput. Otherwise, please add one of them.
If the value of the preferredOutputSegmentInterval property is kCMTimeIndefinite, AVAssetWriter only supports pssthrough for file type profile %@. Please specify nil for all AVAssetWriterInput's output settings.
Cannot end a session without first starting a session
WARNING: -finishWriting should not be called on the main thread.
q16@?0^@8
com.apple.avfoundation.assetwriter.finishwriting
Finish writing file at %@, initiated by %@
Prepare for finishing input %@
assetWriter != nil
figAssetWriter != NULL
Call finish-writing delegate
Invalidate FigAssetWriter, to ensure that audio files are finalized properly
Transition to terminal status
Not available.  Use %@ instead.
terminalError != nil
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled)
configurationState != nil
Cannot call method when status is %d
media type %@ is not allowed for this asset writer
In order to perform passthrough to file type %@, please provide a format hint in the AVAssetWriterInput initializer
AVAssetWriter does not support passthrough for media type %@ to file type %@.
  Please specify a non-nil output settings dictionary.
AVAssetWriter does not support passthrough of media with type '%@' and subtype '%@' to file type %@
AVAssetWriter currently does not support writing uncompressed video in a specific format.
Output settings must match supplied media type.  Media type %@ is not compatible with output settings %@.
output file type %@ does not support track associations
inputs != nil
[inputs count] > 0
defaultInput == nil || [inputs containsObject:defaultInput]
metadata
trackReferences
options
! [[NSSet setWithArray:inputs] intersectsSet:[NSSet setWithArray:provisionalInputs]]
[inputs count] > 0 || [provisionalInputs count] > 0
displaysNonForcedSubtitles
AVAssetWriterInputGroupOptionsChangedContext
UnsafeUnretainedPointerData
AVCoordinatedPlaybackSuspensionReasonAudioSessionInterrupted
AVCoordinatedPlaybackSuspensionReasonStallRecovery
AVCoordinatedPlaybackSuspensionReasonPlayingInterstitial
AVCoordinatedPlaybackSuspensionReasonCoordinatedPlaybackNotPossible
AVCoordinatedPlaybackSuspensionReasonUserActionRequired
AVCoordinatedPlaybackSuspensionReasonUserIsChangingCurrentTime
AVPlaybackCoordinatorOtherParticipantsDidChangeNotification
AVPlaybackCoordinatorSuspensionReasonsDidChangeNotification
Identifier
OriginatorUUID
Time
NetworkTime
Rate
PrerollRate
SeekPrecision
LamportTimestamp
IsAuthoritative
UUID
ProtocolVersion
SuspensionReasons
CoordinatingStart
ReadyToSetNonZeroRate
CurrentIdentifier
NextIdentifier
ExpectedEndTime
Cannot initialize AVCoordinatedPlaybackSuspension with nil reason.
avplaybackcoordinator_trace
-[AVPlaybackCoordinator init] unavailable
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectNotification
AVPlaybackCoordinatorItemIdentifierForCoordinatedPlaybackDidChangeNotification
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyParticipantUUID
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyCommand
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyRate
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyTime
AVPlaybackCoordinatorPlaybackObjectCommandSetRate
AVPlaybackCoordinatorPlaybackObjectCommandSetTime
AVPlaybackCoordinatorPlaybackObjectCommandSetRateAndTime
com.apple.avplaybackcoordinator.ivars
com.apple.avplaybackcoordinator.figplaybackcoordinator.config
figPlaybackCoordinator != NULL
FigPlaybackCoordinator associated with an AVPlayer should not change
-[AVPlayerPlaybackCoordinator setFigPlaybackCoordinator:]_block_invoke
B32@?0@"AVCoordinatedPlaybackParticipant"8Q16^B24
-[AVPlayerPlaybackCoordinator _updateTransportControlStateDictionaryWithTransportControlState:]_block_invoke
B32@?0@"NSDictionary"8Q16^B24
-[AVPlayerPlaybackCoordinator handleNewTransportControlStateDictionary:]_block_invoke
-[AVPlayerPlaybackCoordinator handleNewTransportControlStateDictionary:]
-[AVPlayerPlaybackCoordinator handleNewParticipantStateDictionary:]_block_invoke
-[AVPlayerPlaybackCoordinator handleNewParticipantStateDictionary:]
-[AVPlayerPlaybackCoordinator handleReplacementParticipantStateDictionaries:]_block_invoke
-[AVPlayerPlaybackCoordinator handleReplacementParticipantStateDictionaries:]
AVPlayerPlaybackCoordinatorBroadcastTransportControlStateCallback
AVPlayerPlaybackCoordinatorBroadcastParticipantStateCallback
AVPlayerPlaybackCoordinatorAsynchronouslyReloadTransportControlStateCallback
AVOutputDeviceAuthorizationRequestRetryReasonIncorrectAuthorizationToken
AVOutputDeviceAuthorizationTokenTypePassword
AVOutputDeviceAuthorizationTokenTypePIN
outputdeviceauthorizationsession_trace
com.apple.avfoundation.outputdeviceauthorizationsession.ivars
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:]
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:]
com.apple.avfoundation.output-device-auth-session.ivars
<%@: %p, ID=%@, outputDevice=%@, tokenType=%@>
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]_block_invoke
v24@?0q8@"NSError"16
-[AVOutputDeviceAuthorizationRequest cancel]
AVAssetWriterInputMediaDataLocationInterleavedWithMainMediaData
AVAssetWriterInputMediaDataLocationBeforeMainMediaDataNotInterleaved
AVAssetWriterInputMediaDataLocationSparselyInterleavedWithMainMediaData
mediaType != nil
The media type of sourceFormatHint must match mediaType
Width and height of video format hint must be positive
Output settings must match supplied media type
AVAssetWriterInput does not currently support AVVideoScalingModeFit
AVAssetWriterInput does not support AVSampleRateConverterAudioQualityKey
AVAssetWriterInput does not support AVVideoDecompressionPropertiesKey
<%@: %p> helper queue
<%@: %p> "number of append failures" read/write queue
currentPassDescription
<%@: %p, mediaType = %@, outputSettings = %@>
mediaTimeScale >= 0
naturalSize.width >= 0.0 && naturalSize.height >= 0.0
Cannot set marksOutputTrackAsEnabled of the receiver in an input group
media chunk duration must be numeric.  See CMTIME_IS_NUMERIC
media chunk duration must be a positive value
AVAssetWriterInput.m
preferredMediaChunkAlignment >= 0
preferredMediaChunkSize >= 0
canPerformMultiplePasses
readyForMoreMediaData
pixelBufferPool
cannot be called more than once.
Cannot append sample buffer: %@
trackAssociationType != nil
[configurationState trackReferences] != nil
Cannot set a non-default media time scale on an asset writer input with media type AVMediaTypeAudio
languageCode %@ does not conform to the ISO 639-2/T language code
extendedLanguageTag %@ does not conform to the IETF BCP 47 (RFC 4646) language identifier
performsMultiPassEncodingIfSupported
Associations of type AVTrackAssociationTypeForcedSubtitlesOnly are supported only between tracks with media type AVMediaTypeSubtitle or AVMediaTypeText.
Associations of type AVTrackAssociationTypeSelectionFollower are supported only between AVMediaTypeAudio and AVMediaTypeSubtitle tracks.
Associations of type AVTrackAssociationTypeChapterList are supported only between (AVMediaTypeVideo/AVMediaTypeAudio) and (AVMediaTypeVideo/AVMediaTypeMetadata/AVMediaTypeText) tracks.
Associations of type AVTrackAssociationTypeMetadataReferent are supported only between tracks of mediaType AVMediaTypeMetadata and other tracks.
trackAssociationType %@ must be 4 characters long.
cannot be called before attaching to an instance of AVAssetWriter and calling -startWriting on this attached asset writer
assetWriterTrack != nil
AVAssetWriterInputWritingHelperMediaDataRequester
AVAssetWriterInputWritingHelperReadyForMoreMediaDataObserver
assetWriterTrack
aboveHighWaterLevel
readyForMoreMediaData is NO.
A pixel buffer cannot be appended when readyForMoreMediaData is NO.
A pixel buffer pool cannot be created with the receiver's sourcePixelBufferAttributes. The pixel buffer attributes must specify a width, height, and either a pixel format or a pixel format description.
writingHelper != nil
v28@?0B8@"AVAssetWriterInputPassDescription"12@"NSError"20
cannot be called between the invocation of %@ and the beginning of the next pass
not allowed between the invocation of %@ and the beginning of the next pass
Cannot call %@ more than once for the same pass
cannot be called when no media data is being requested.  Check the value of %@.
not allowed when no media data is being requested.  Check the value of %@.
cannot be called after the final pass
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled) || (terminalStatus == AVAssetWriterStatusFailed)
cannot be called after canceling or finishing writing
<%@: %p, status=%d>
[[input mediaType] isEqualToString:AVMediaTypeVideo] || [[input mediaType] isEqualToString:AVMediaTypeAuxiliaryPicture]
Cannot create a new pixel buffer adaptor with an asset writer input that is already attached to a pixel buffer adaptor
Cannot create a new pixel buffer adaptor with an asset writer input that has already started writing
<%@: %p, assetWriterInput = %@, sourcePixelBufferAttributes = %@>
assetWriterInput
pixelBuffer != NULL
CMTIME_IS_NUMERIC(presentationTime)
mediaFileType != nil
<%@: %p> water level queue
com.apple.avfoundation.assetwriterinput
Input buffer must be in an uncompressed format when outputSettings is not nil
First input buffer must have an appropriate kCMSampleBufferAttachmentKey_TrimDurationAtStart since the codec has encoder delay
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) first
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) before appending pixel buffers
com.apple.avfoundation.assetwriterinput.endpass
com.apple.avfoundation.mediadatarequester.ivars
AVAssetWriterInputPassDescriptionResponder serialization queue
trackID != kCMPersistentTrackID_Invalid
<%@: %p, sourceTimeRanges=%@>
AVAssetWriterInputCurrentPassDescriptionChangeContext
AVAssetWriterInputWritingHelperNudgeMediaDataRequesterObservationContext
VideoCompositor_DeviceSpecific
VideoCompositor_Basic
VideoCompositor_OpenGL
StartTime
EndTime
BackgroundColorARGB
BackgroundColorICCProfile
LayerStack
ContainsTweening
InstructionIdentifier
RequiredSampleDataTrackIDArray
SourceVideoTrackID
ConstantOpacity
TweenedOpacity
ConstantAffineMatrix
TweenedAffineMatrix
EnablePostProcessing
RequiredVideoTrackIDArray
PassthroughSourceVideoTrackID
AVVideoCompositionInstruction
TweenedCropRectangle
AVVideoCompositionInstruction %@
AVVideoCompositionLayerTrackID
AVVideoCompositionLayerTransformRamps
AVVideoCompositionLayerOpacityRamps
AVVideoCompositionLayerCropRectangleRamps
The timeRange of a transform ramp must not overlap the timeRange of an existing transform ramp.
StartTransform
EndTransform
The time of a transform setting must be numeric.
The timeRange of a transform ramp must have a numeric start time and a numeric duration.
The timeRange of an opacity ramp must not overlap the timeRange of an existing opacity ramp.
The time of an opacity setting must be numeric.
The timeRange of an opacity ramp must have a numeric start time and a numeric duration.
The timeRange of a crop rectangle ramp must not overlap the timeRange of an existing crop rectangle ramp.
StartCropRectangle
EndCropRectangle
The time of a crop rectangle setting must be numeric.
The timeRange of a crop rectangle ramp must have a numeric start time and a numeric duration.
ConstantCropRectangle
video composition must have a positive renderSize
video composition must have a positive renderScale
video composition must have a positive frameDuration
video composition must have a positive sourceTrackIDForFrameTiming
customVideoCompositorClass
renderSize
renderScale
frameDuration
sourceTrackIDForFrameTiming
instructions
handler
applier != nil
v24@?0@"AVMutableVideoComposition"8@"NSError"16
AVAssetExportPresetLowQuality
AVAssetExportPresetMediumQuality
AVAssetExportPresetHighestQuality
AVAssetExportPreset640x480
AVAssetExportPreset1280x720
AVAssetExportPreset960x540
AVAssetExportPreset1920x1080
AVAssetExportPreset3840x2160
AVAssetExportPresetHEVCHighestQuality
AVAssetExportPresetHEVCHighestQualityWithAlpha
AVAssetExportPresetHEVC1920x1080
AVAssetExportPresetHEVC1920x1080WithAlpha
AVAssetExportPresetHEVC3840x2160
AVAssetExportPresetHEVC3840x2160WithAlpha
AVAssetExportPresetHEVC7680x4320
AVAssetExportPresetAppleM4A
AVAssetExportPresetVoiceMemoALAC
AVAssetExportPresetAppleProRes422LPCM
AVAssetExportPresetAppleProRes4444LPCM
AVAssetExportPresetPassthrough
AVAssetExportPresetPhotoStream
AVAssetExportPresetPhotoStreamHD
AVAssetExportPresetICPL480x480
AVAssetExportPresetICPL
AVAssetExportPresetICPL960x960
AVAssetExportPresetICPLHD
AVAssetExportPresetICPLHEVC1920x1080
AVAssetExportPresetICPLHEVC960x960WithHDR
AVAssetExportPresetICPLHEVC1280x1280WithHDR
AVAssetExportPresetICPLHEVC1440x1440WithHDR
AVAssetExportPresetICPLHEVC1920x1920WithHDR
AVAssetExportPresetICPLAux
AVAssetExportPresetICPLAuxHD
AVAssetExportPresetAuxSmall
AVAssetExportPresetMMS
AVAssetExportPreset3GPRelease6MMS
AVAssetExportPresetAudioOnlyMMS
AVAssetExportPresetYouTube
AVAssetExportPresetMail
AVAssetExportPresetHEVCAnimojiWithAlpha
AVAssetExportPresetAVCAnimoji
AVAssetExportPresetYouTubeHD
AVAssetExportPresetMessage
AVAssetExportPresetMessageHEVCWithHDR
AVAssetExportPresetMessageAudio
AVAssetExportPresetMessageAux
handler cannot be nil
completionHandler is nil
<%@: %p, asset = %@, presetName = %@, outputFileType = %@
Cannot alter output file type attribute on an AVAssetExportSession after an export has started.
Cannot set outputFileType to nil
Invalid output file type
Cannot alter output URL attribute on an AVAssetExportSession after an export has started.
Cannot set outputURL to nil
Cannot call exportAsynchronouslyWithCompletionHandler: more than once.
outputURL cannot be nil
Cannot set both audioMix and audioOutputGroupHandling.
outputFileType cannot be nil
Cannot alter time range attribute on an AVAssetExportSession after an export has started.
Cannot alter min frame duration attribute on an AVAssetExportSession after an export has started.
Cannot set non-numeric min video frame duration.
Min video frame duration must be greater than zero.
Cannot alter max frame duration attribute on an AVAssetExportSession after an export has started.
Invalid frame rate conversion algorithm.
Cannot alter preserve sync frame attribute on an AVAssetExportSession after an export has started.
timeRange
Cannot alter metadata attribute on an AVAssetExportSession after an export has started.
Cannot alter metadataItemFilter attribute on an AVAssetExportSession after an export has started.
Cannot alter output file length limit attribute on an AVAssetExportSession after an export has started.
Cannot alter audio time pitch algorithm attribute on an AVAssetExportSession after an export has started.
Cannot alter audio mix attribute on an AVAssetExportSession after an export has started.
Cannot alter output audioTrackGroupHandling attribute on an AVAssetExportSession after an export has started.
Cannot alter video composition attribute on an AVAssetExportSession after an export has started.
video composition must have composition instructions
renderScale must be 1.0 when used with AVAssetExportSession.
Cannot alter optimize for network use attribute on an AVAssetExportSession after an export has started.
Cannot alter canPerformMultiplePassesOverSourceMediaData attribute on an AVAssetExportSession after an export has started.
Cannot alter directoryForTemporaryFiles attribute on an AVAssetExportSession after an export has started.
AVContentKeyRequestProtocolVersionsKey
com.apple.AVStreamDataParser._threadSafetyQ
must only set allowableMIMETypes before any stream data is appended
Ignoring appendStreamData:withFlags: because we're failed or expired, create a new AVStreamDataParser to try again
Ignoring providePendingMediaData because we're failed or expired, create a new AVStreamDataParser to try again
trackID must be valid
figManifold
sbuf
flags
avc3
avc1
hev1
hvc1
dvhe
dvh1
data
contiguousBlock
Aborting parsing due to unsupported interleaving, cache size %d bytes exceeding %d
Aborting parsing due to unsupported interleaving, cache duration %.3f seconds exceeding %.3f
formatDescription
AVStreamDataParser can't attach to an AVContentKeySession when it's already attached to an AVStreamSession
AVStreamDataParser can't attach to an AVContentKeySession after it started using its own AVContentKeySession for key loading
com.apple.coremedia
DeviceClass
iPad
com.apple.avfoundation.internal-build-allow-avstreamdataparser
sinf
codc
mtyp
cont
mpts
mediaDataConsumer != nil
requestQueue != NULL
requestBlock != nil
[mediaDataConsumer respondsToSelector:@selector(isReadyForMoreMediaData)]
com.apple.avfoundation.device-comm-channel-manager
-[AVAPSyncOutputDeviceCommunicationChannelManager openCommunicationChannelWithOptions:completionHandler:]
-[AVAPSyncOutputDeviceCommunicationChannelManager openCommunicationChannelWithOptions:completionHandler:]_block_invoke
v36@?0^{OpaqueAPSyncController=}8i16^{__CFString=}20^{__CFDictionary=}28
-[AVAPSyncOutputDeviceCommunicationChannelManager _didReceiveData:fromDeviceWithID:fromChannelWithUUID:]
-[AVAPSyncOutputDeviceCommunicationChannelManager _didCloseCommChannelWithUUID:forDeviceWithID:]
-[AVAPSyncOutputDeviceCommunicationChannelImpl sendData:completionHandler:]
AVAPSyncOutputDeviceCommunicationChannelSendDataCompletion
avsynchronizedlayer_trace
AVSynchronizedLayerQueue
com.apple.avsynchronizedlayer.ivars
common/title
common/creator
common/subject
common/description
common/publisher
common/contributor
common/creationDate
common/lastModifiedDate
common/type
common/format
common/identifier
common/source
common/language
common/relation
common/location
common/copyrights
common/albumName
common/author
common/artist
common/artwork
common/make
common/model
common/software
common/accessibilityDescription
udta/%A9alb
udta/%A9arg
udta/%A9ART
udta/%A9aut
udta/%A9chp
udta/%A9cmt
udta/%A9com
udta/%A9cpy
udta/%A9day
udta/%A9des
udta/%A9dir
udta/%A9dis
udta/%A9enc
udta/%A9nam
udta/%A9gen
udta/%A9hst
udta/%A9inf
udta/%A9key
udta/%A9mak
udta/%A9mod
udta/%A9ope
udta/%A9fmt
udta/%A9src
udta/%A9prf
udta/%A9prd
udta/%A9pub
udta/%A9PRD
udta/%A9swr
udta/%A9req
udta/%A9trk
udta/%A9wrn
udta/%A9wrt
udta/%A9url
udta/%A9xyz
udta/tnam
udta/%A9phg
udta/name
udta/tagc
udta/%A9ade
uiso/cprt
uiso/date
uiso/tagc
uiso/ades
uiso/auth
uiso/perf
uiso/gnre
uiso/yrrc
uiso/loci
uiso/titl
uiso/dscp
uiso/coll
uiso/urat
uiso/thmb
uiso/albm
uiso/kywd
uiso/clsf
uiso/rtng
mdta/com.apple.quicktime.author
mdta/com.apple.quicktime.comment
mdta/com.apple.quicktime.copyright
mdta/com.apple.quicktime.creationdate
mdta/com.apple.quicktime.director
mdta/com.apple.quicktime.displayname
mdta/com.apple.quicktime.information
mdta/com.apple.quicktime.keywords
mdta/com.apple.quicktime.producer
mdta/com.apple.quicktime.publisher
mdta/com.apple.quicktime.album
mdta/com.apple.quicktime.artist
mdta/com.apple.quicktime.artwork
mdta/com.apple.quicktime.description
mdta/com.apple.quicktime.software
mdta/com.apple.quicktime.year
mdta/com.apple.quicktime.genre
mdta/info.ixml.xml
mdta/com.apple.quicktime.location.ISO6709
mdta/com.apple.quicktime.make
mdta/com.apple.quicktime.model
mdta/com.apple.quicktime.arranger
mdta/com.apple.quicktime.encodedby
mdta/com.apple.quicktime.originalartist
mdta/com.apple.quicktime.performer
mdta/com.apple.quicktime.composer
mdta/com.apple.quicktime.credits
mdta/com.apple.quicktime.phonogramrights
mdta/com.apple.quicktime.camera.identifier
mdta/com.apple.quicktime.camera.framereadouttimeinmicroseconds
mdta/com.apple.quicktime.title
mdta/com.apple.quicktime.collection.user
mdta/com.apple.quicktime.rating.user
mdta/com.apple.quicktime.location.name
mdta/com.apple.quicktime.location.body
mdta/com.apple.quicktime.location.note
mdta/com.apple.quicktime.location.role
mdta/com.apple.quicktime.location.date
mdta/com.apple.quicktime.direction.facing
mdta/com.apple.quicktime.direction.motion
mdta/com.apple.quicktime.detected-face
mdta/com.apple.quicktime.detected-human-body
mdta/com.apple.quicktime.detected-cat-body
mdta/com.apple.quicktime.detected-dog-body
mdta/com.apple.quicktime.detected-salient-object
mdta/com.apple.quicktime.preferred-affine-transform
mdta/com.apple.quicktime.video-orientation
mdta/com.apple.quicktime.content.identifier
mdta/com.apple.quicktime.accessibility.description
mdta/com.apple.quicktime.core-motion
mdta/com.apple.quicktime.camera-debug-info
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
mdta/com.apple.quicktime.is-montage
mdta/com.apple.quicktime.live-photo.auto
mdta/com.apple.quicktime.live-photo.vitality-score
mdta/com.apple.quicktime.live-photo.vitality-scoring-version
mdta/com.apple.quicktime.spatial-overcapture.quality-score
mdta/com.apple.quicktime.spatial-overcapture.quality-scoring-version
mdta/com.apple.quicktime.location.accuracy.horizontal
itsk/%A9alb
itsk/%A9ART
itsk/%A9cmt
itsk/covr
itsk/cprt
itsk/%A9day
itsk/%A9enc
itsk/gnre
itsk/%A9gen
itsk/%A9nam
itsk/%A9st3
itsk/%A9too
itsk/%A9wrt
itsk/aART
itsk/akID
itsk/apID
itsk/atID
itsk/cnID
itsk/cpil
itsk/disk
itsk/geID
itsk/grup
itsk/plID
itsk/rtng
itsk/tmpo
itsk/trkn
itsk/%A9ard
itsk/%A9arg
itsk/%A9aut
itsk/%A9lyr
itsk/%A9cak
itsk/%A9con
itsk/%A9des
itsk/%A9dir
itsk/%A9equ
itsk/%A9lnt
itsk/%A9mak
itsk/%A9ope
itsk/%A9phg
itsk/%A9prd
itsk/%A9prf
itsk/%A9pub
itsk/%A9sne
itsk/%A9sol
itsk/%A9src
itsk/%A9thx
itsk/%A9url
itsk/%A9xpd
id3/AENC
id3/APIC
id3/ASPI
id3/COMM
id3/COMR
id3/ENCR
id3/EQUA
id3/EQU2
id3/ETCO
id3/GEOB
id3/GRID
id3/IPLS
id3/LINK
id3/MCDI
id3/MLLT
id3/OWNE
id3/PRIV
id3/PCNT
id3/POPM
id3/POSS
id3/RBUF
id3/RVAD
id3/RVA2
id3/RVRB
id3/SEEK
id3/SIGN
id3/SYLT
id3/SYTC
id3/TALB
id3/TBPM
id3/TCOM
id3/TCON
id3/TCOP
id3/TDAT
id3/TDEN
id3/TDLY
id3/TDOR
id3/TDRC
id3/TDRL
id3/TDTG
id3/TENC
id3/TEXT
id3/TFLT
id3/TIME
id3/TIPL
id3/TIT1
id3/TIT2
id3/TIT3
id3/TKEY
id3/TLAN
id3/TLEN
id3/TMCL
id3/TMED
id3/TMOO
id3/TOAL
id3/TOFN
id3/TOLY
id3/TOPE
id3/TORY
id3/TOWN
id3/TPE1
id3/TPE2
id3/TPE3
id3/TPE4
id3/TPOS
id3/TPRO
id3/TPUB
id3/TRCK
id3/TRDA
id3/TRSN
id3/TRSO
id3/TSIZ
id3/TSOA
id3/TSOP
id3/TSOT
id3/TSRC
id3/TSSE
id3/TSST
id3/TYER
id3/TXXX
id3/UFID
id3/USER
id3/USLT
id3/WCOM
id3/WCOP
id3/WOAF
id3/WOAR
id3/WOAS
id3/WORS
id3/WPAY
id3/WPUB
id3/WXXX
icy/StreamTitle
icy/StreamUrl
m3u8/NAME
AVOutputDeviceBatteryLevelCaseKey
AVOutputDeviceBatteryLevelLeftKey
AVOutputDeviceBatteryLevelRightKey
AVOutputDeviceSupportsDataOverACLProtocolKey
AVOutputDeviceIsInEarKey
AVOutputDeviceBluetoothListeningModeNormal
AVOutputDeviceBluetoothListeningModeActiveNoiseCancellation
AVOutputDeviceBluetoothListeningModeAudioTransparency
AVOutputDeviceVolumeDidChangeNotification
AVOutputDeviceCanSetVolumeDidChangeNotification
AVOutputDeviceVolumeControlTypeDidChangeNotification
AVOutputDeviceProposedGroupIDDidChangeNotification
AVOutputDeviceLocalDeviceDidChangeNotification
AVOutputDeviceConfigurationOptionCancelConfigurationIfAuthRequired
AVOutputDeviceConfigurationCancellationReasonAuthorizationSkipped
AVOutputDeviceSecondDisplayModeDefault
AVOutputDeviceSecondDisplayModeMediaPresentation
AVOutputDeviceCommunicationChannelOptionControlType
AVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired
AVOutputDeviceCommunicationChannelOptionCorrelationID
AVOutputDeviceCommunicationChannelOptionInitiator
AVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate
AVOutputDeviceCommunicationChannelControlTypeDirect
AVOutputDeviceCommunicationChannelControlTypeRelayed
AVOutputDeviceCommunicationChannelDataDestinationMediaRemote
AVOutputDeviceCommunicationChannelDataDestinationFitness
AVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped
AVOutputDeviceHeadTrackedSpatialAudioModeNever
AVOutputDeviceHeadTrackedSpatialAudioModeAlways
AVOutputDeviceHeadTrackedSpatialAudioModeAutomatic
AVOutputDeviceHeadTrackedSpatialAudioModeMultichannelOnly
outputdevice_trace
Not available
%@: %@
-[AVOutputDevice setSecondDisplayEnabled:]
-[AVOutputDevice setSecondDisplayMode:completionHandler:]
-[AVOutputDevice setSecondDisplayMode:completionHandler:]_block_invoke
non-nil
v24@?0@8@"NSError"16
-[AVOutputDevice outputDeviceImplDidChangeVolume:]
-[AVOutputDevice outputDeviceImplDidChangeCanChangeVolume:]
-[AVOutputDevice outputDeviceImplDidChangeVolumeControlType:]
+[AVOutputDevice localDeviceDidChange]
-[AVOutputDevice setVolume:]
-[AVOutputDevice increaseVolumeByCount:]
-[AVOutputDevice decreaseVolumeByCount:]
-[AVOutputDevice outputDeviceImplDidChangeProposedGroupID:]
-[AVOutputDevice setAllowsHeadTrackedSpatialAudio:error:]
-[AVOutputDevice setHeadTrackedSpatialAudioMode:error:]
-[AVOutputDevice setCurrentBluetoothListeningMode:]
-[AVOutputDevice setCurrentBluetoothListeningMode:error:]
-[AVOutputDevice openCommunicationChannelToDestination:options:completionHandler:]
-[AVOutputDevice openCommunicationChannelToDestination:options:completionHandler:]_block_invoke
Error retrieving system remote pool context.
-[AVOutputDevice setCommunicationChannelDelegate:]
-[AVOutputDevice communicationChannelManager:didReceiveData:fromCommunicationChannel:]
-[AVOutputDevice communicationChannelManager:didCloseCommunicationChannel:]
-[AVOutputDevice configureUsingBlock:options:completionHandler:]
-[AVOutputDevice configureUsingBlock:options:completionHandler:]_block_invoke
v40@?0q8@"<AVOutputDeviceConfigurationRetrieval>"16@"NSString"24@"NSError"32
-[AVOutputDevice configureUsingBlock:completionHandler:]
-[AVOutputDevice configureUsingBlock:completionHandler:]_block_invoke
FrecencyScore
LastUsedTimestamp
+[AVOutputDeviceFrecencyManager updateFrecencyListForDeviceID:]
+[AVOutputDeviceFrecencyManager frecencyScoreForDeviceID:]
Frecents
%@.plist
com.apple.avfoundation.frecents
+[AVOutputDeviceFrecencyManager _frecentsFilePath]_block_invoke
+[AVOutputDeviceFrecencyManager _frecentsReaderAfterMigrationIfNecessary]_block_invoke
+[AVOutputDeviceFrecencyManager _migrateFrecentsFromCFPreferencesToFrecentsFilePath:]
-[AVOutputDeviceFrecentsReader initWithFrecentsFilePath:error:]
-[AVOutputDeviceFrecentsReader frecencyInfoForDeviceWithID:]
My Device
-[AVOutputDeviceCommunicationChannel setDelegate:]
-[AVOutputDeviceCommunicationChannel communicationChannelImpl:didReceiveData:]
-[AVOutputDeviceCommunicationChannel communicationChannelImplDidClose:]
_UIApplicationDidFinishSuspensionSnapshotNotification
UIApplicationDidEnterBackgroundNotification
UIApplicationWillResignActiveNotification
UIApplicationWillEnterForegroundNotification
adts
AVFoundationErrorDomain
AVErrorDeviceKey
AVErrorTimeKey
AVErrorFileSizeKey
AVErrorPIDKey
AVErrorRecordingSuccessfullyFinishedKey
AVErrorRecordingFailureDomainKey
AVErrorMediaTypeKey
AVErrorMediaSubTypeKey
AVErrorPresentationTimeStampKey
AVErrorPersistentTrackIDKey
AVErrorFileTypeKey
AVErrorExceptionKey
AVErrorFourCharCode
AVError
_Description
_FailureReason
_RecoverySuggestion
Source frame missing
Render dimensions unknown
Source frame unsupported format
Destination frame unsupported format
Invalid parameter
Invalid composition instruction
Blitting failed
No output callback
Frame was cancelled
No custom callbacks
Custom compositor failed with client NSError
Media format - invalid parameter
Media format - sample description is invalid (e.g. invalid size)
Media format - format description is invalid (e.g. invalid size)
Media format - format description has an incompatible format (e.g. unknown format / incompatible atom)
Media format - sample description is unsupported for the specified format flavor
Media format - slice has an invalid value
Media writing - no such property
Media writing - read only property
Media writing - no such track
Media writing - invalid timestamp
Media writing - invalid format
Media writing - invalid edit
Media writing - predetermined file size too small
Media writing - predetermined media data size too small
Media writing - segment is not allowed to star with a non-sync sample.
Cannot append media data after ending session
JSON format error
iTT requires languageCode or extendedLanguageTag property to be set
AVErrorUnknown
AVErrorOutOfMemory
AVErrorSessionNotRunning
AVErrorDeviceAlreadyUsedByAnotherSession
AVErrorNoDataCaptured
AVErrorSessionConfigurationChanged
AVErrorDiskFull
AVErrorDeviceWasDisconnected
AVErrorMediaChanged
AVErrorMaximumDurationReached
AVErrorMaximumFileSizeReached
AVErrorMediaDiscontinuity
AVErrorMaximumNumberOfSamplesForFileFormatReached
AVErrorDeviceNotConnected
AVErrorDeviceInUseByAnotherApplication
AVErrorDeviceLockedForConfigurationByAnotherProcess
AVErrorSessionWasInterrupted
AVErrorMediaServicesWereReset
AVErrorRecordingNotAllowedWhenMultipleAppsAreForeground
AVErrorExportFailed
AVErrorDecodeFailed
AVErrorInvalidSourceMedia
AVErrorFileAlreadyExists
AVErrorCompositionTrackSegmentsNotContiguous
AVErrorInvalidCompositionTrackSegmentDuration
AVErrorInvalidCompositionTrackSegmentSourceStartTime
AVErrorInvalidCompositionTrackSegmentSourceDuration
AVErrorFileFormatNotRecognized
AVErrorFileFailedToParse
AVErrorMaximumStillImageCaptureRequestsExceeded
AVErrorContentIsProtected
AVErrorNoImageAtTime
AVErrorDecoderNotFound
AVErrorEncoderNotFound
AVErrorContentIsNotAuthorized
AVErrorApplicationIsNotAuthorized
AVErrorDeviceIsNotAvailableInBackground
AVErrorFileChecksumFailed
AVErrorOperationNotSupportedForAsset
AVErrorDecoderTemporarilyUnavailable
AVErrorEncoderTemporarilyUnavailable
AVErrorInvalidVideoComposition
AVErrorReferenceForbiddenByReferencePolicy
AVErrorInvalidFileAtDownloadDestinationURL
AVErrorInvalidOutputURLPathExtension
AVErrorTorchLevelUnavailable
AVErrorOperationInterrupted
AVErrorIncompatibleAsset
AVErrorFailedToLoadMediaData
AVErrorServerIncorrectlyConfigured
AVErrorApplicationIsNotAuthorizedToUseDevice
AVErrorFailedToParse
AVErrorFileTypeDoesNotSupportSampleReferences
AVErrorUndecodableMediaData
AVErrorClientProgrammingError
AVErrorAirPlayControllerRequiresInternet
AVErrorAirPlayReceiverRequiresInternet
AVErrorVideoCompositorFailed
AVErrorRecordingAlreadyInProgress
AVErrorUnsupportedOutputSettings
AVErrorOperationNotAllowed
AVErrorContentIsUnavailable
AVErrorFileWritingExceededPredeterminedSize
AVErrorMediaDataWritingExceededPredeterminedSize
AVErrorFormatUnsupported
AVErrorMalformedDepth
AVErrorIncorrectPIN
AVErrorIncorrectPassword
AVErrorPointlessOverCapture
AVErrorContentNotUpdated
AVErrorNoLongerPlayable
AVErrorNoCompatibleAlternatesForExternalDisplay
AVErrorNoSourceTrack
AVErrorExternalPlaybackNotSupportedForAsset
AVErrorOperationNotSupportedForPreset
AVErrorSessionHardwareCostOverage
AVErrorUnsupportedDeviceActiveFormat
AVErrorOperationRequiresBothBudsInEar
AVErrorIncorrectlyConfigured
AVErrorSegmentStartedWithNonSyncSample
AVErrorRosettaNotInstalled
AVErrorOperationCancelled
AVErrorInvalidSampleCursor
AVErrorFailedToLoadSampleData
'%@'
AVSampleBufferVideoRendererDidFailToDecodeNotification
AVSampleBufferVideoRendererDidFailToDecodeNotificationErrorKey
AVSampleBufferVideoRendererRequiresFlushToResumeDecodingDidChangeNotification
AVSampleBufferVideoRendererOutputObscuredDueToInsufficientExternalProtectionDidChangeNotification
AVSampleBufferVideoRendererVisibilityDidChangeNotification
AVSampleBufferSTSLabelDidChangeNotification
avsamplebuffervideorenderer_trace
The control timebase can not be changed after the display layer or video renderer has been added to a synchronizer
The display layer or video renderer cannot be added to a synchronizer if the control timebase has already been set.
-[AVSampleBufferVideoRenderer _setStatus:error:]_block_invoke
No Error
-[AVSampleBufferVideoRenderer _resetStatusWithOSStatus:]_block_invoke
-[AVSampleBufferVideoRenderer _setCreateVideoQueueFailedWithOSStatus:]_block_invoke
AVSampleBufferVideoRenderer serial
AVSampleBufferVideoRenderer videoQueue
AVSampleBufferVideoRenderer layerQueue
AVSampleBufferVideoRendererCallbackListQueue
AVSampleBufferVideoRendererFlushCallbackQueue
AVSampleBufferVideoRendererQueueForProtectingPrerollCompleteCallback
AVSampleBufferVideoRendererQueueForCallingPrerollCompleteCallback
-[AVSampleBufferVideoRenderer init]
-[AVSampleBufferVideoRenderer dealloc]
An object conforming to AVQueuedSampleBufferRendering, configured to request more media data via requestMediaDataWhenReadyOnQueue:usingBlock:, was released without first having been messaged stopRequestingMediaData:.
The DisplayLayer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
STSLabel
An AVSampleBufferDisplayLayer or video target must be added to the AVSampleBufferVideoRenderer prior to enqueueing sample buffers.
Ignoring enqueueSampleBuffer: because status is "failed"
-[AVSampleBufferVideoRenderer prerollDecodeWithCompletionHandler:]
Cannot add AVSampleBufferDisplayLayer while enqueueing sample buffers.
An AVSampleBufferDisplayLayer is already attached to the AVSampleBufferVideoRenderer.  Only 1 is allowed at a time.
Cannot add video target while enqueueing sample buffers.
The FigVideoTarget is already attached to the AVSampleBufferVideoRenderer.
<%@: %p, AVSBDLs = %d, FVTs = %d>
The AVSampleBufferVideoOutput has already been added to the AVSampleBufferVideoRenderer.
The video target was removed, but not already attached to AVSampleBufferVideoRenderer.
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) copyDisplayedPixelBuffer]_block_invoke
AVVideoCodecKey
jpeg
ap4h
apcn
apch
apcs
apco
muxa
AVVideoWidthKey
AVVideoHeightKey
AVVideoPixelAspectRatioKey
AVVideoPixelAspectRatioHorizontalSpacingKey
AVVideoPixelAspectRatioVerticalSpacingKey
AVVideoCleanApertureKey
AVVideoCleanApertureWidthKey
AVVideoCleanApertureHeightKey
AVVideoCleanApertureHorizontalOffsetKey
AVVideoCleanApertureVerticalOffsetKey
AVVideoScalingModeKey
AVVideoScalingModeFit
AVVideoScalingModeResize
AVVideoScalingModeResizeAspect
AVVideoScalingModeResizeAspectFill
AVVideoColorPropertiesKey
ColorPrimaries
ITU_R_709_2
SMPTE_C
P3_D65
ITU_R_2020
TransferFunction
SMPTE_ST_2084_PQ
ITU_R_2100_HLG
Linear
YCbCrMatrix
ITU_R_601_4
AVVideoAllowWideColorKey
AVVideoCompressionPropertiesKey
AverageBitRate
Quality
MaxKeyFrameInterval
MaxKeyFrameIntervalDuration
AppleProRAWBitDepthKey
ProfileLevel
H264_Baseline_3_0
H264_Baseline_3_1
H264_Baseline_4_1
H264_Baseline_AutoLevel
H264_Main_3_0
H264_Main_3_1
H264_Main_3_2
H264_Main_4_1
H264_Main_AutoLevel
H264_High_4_0
H264_High_4_1
H264_High_AutoLevel
H264EntropyMode
CAVLC
CABAC
ExpectedFrameRate
AllowFrameReordering
AverageNonDroppableFrameRate
AVVideoDecompressionPropertiesKey
AVVideoMinimumFrameDuration
AVVideoFrameRateConversionAlgorithm
AVVideoFrameRateConversionAlgorithmFast
AVVideoFrameRateConversionAlgorithmPrecise
PerceptualQualityOptimization
AVVideoEmitSequencesAtSyncFramesOnly
AVVideoMinimumIntervalForSyncFrames
figEndpoint != NULL
BluetoothFeatures
GAPA
IsGenuineAppleAccessory
AVOutputDeviceSetAllowsHeadTrackedSpatialAudioOnEndpoint
AVOutputDeviceSetHeadTrackedSpatialAudioModeOnEndpoint
-[AVFigEndpointOutputDeviceImpl setCurrentBluetoothListeningMode:]
-[AVFigEndpointOutputDeviceImpl setCurrentBluetoothListeningMode:error:]
Output device %@ screen %@
disable
AVOutputDeviceSetSecondDisplayEnabledOnEndpoint
v12@?0i8
FigRoutingContext is not available on this platform
request
B32@?0@"NSString"8Q16^B24
v24@?0@"NSError"8d16
Accept
identity
Accept-Encoding
Keep-Alive
Connection
bytes=%llu-
Range
bytes=%llu-%llu
v32@?0@"NSURLSessionDataTask"8@"AVAssetCustomURLRequest"16^B24
com.apple.avfoundation.customurl.nsurlsession
com.apple.avfoundation.customurl.cfurlconnection
com.apple.avfoundation.authkeychain.callback
com.apple.avfoundation.authkeychain
Content-Range
bytes
Content-Length
<%@: %p, %@, target = %@>
empty
source = %@
timeMapping
description=AVFoundation_AVFCore_Sim-2135.13.1
<%@: %p, input parameters = %@>
<%@: %p, track ID = %d, audioTimePitchAlgorithm: %@, audioTapProcessor: %p, volume mix: %@>
effectParameters == nil || [effectParameters isMemberOfClass:[AVAudioMixSweepFilterEffectParameters class]]
The timeRange of a volume ramp must have a numeric start time and a numeric duration.
The time of a volume setting must be numeric.
introFadeDuration must be numeric and >= 0
fadeOutStart must be >= 0 if numeric
fadeOutDuration must be numeric and >= 0
AVOutputContextDeviceGroupControlOptionCancelAddDeviceIfAuthRequired
AVOutputContextDestinationChangeInitiatedNotification
AVOutputContextDestinationChangeKey
AVOutputContextOutputDeviceDidChangeNotification
AVOutputContextGlobalOutputDeviceConfigurationDidChangeNotification
AVOutputContextOutputDevicesDidChangeNotification
AVOutputContextDestinationChangeInitiatorKey
AVOutputContextSetOutputDevicePasswordKey
AVOutputContextSetOutputDeviceCancelIfAuthRequiredKey
AVOutputContextSetOutputDeviceSuppressUserInteractionOnSenderOnlyKey
AVOutputContextSetOutputDeviceInitiatorKey
AVOutputContextSetOutputDevicesOptionInitiator
AVOutputContextAddOutputDeviceOptionAuthorizationToken
AVOutputContextAddOutputDeviceCancelIfAuthRequiredKey
AVOutputContextAddOutputDeviceOptionInitiator
AVOutputContextAddOutputDeviceOptionCorrelationID
AVOutputContextRemoveOutputDeviceOptionInitiator
AVOutputContextRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputContextSetOutputDeviceFadePlaybackKey
AVOutputContextSetOutputDevicesOptionFadePlayback
AVOutputContextAddOutputDeviceOptionFadePlayback
AVOutputContextRemoveOutputDeviceOptionFadePlayback
AVOutputContextDestinationChangeReasonKey
AVOutputContextDestinationChangeDeviceIDKey
AVOutputContextDestinationChangePreviousDeviceIDsKey
AVOutputContextDestinationChangeReasonIdleDisconnect
AVOutputContextPredictedOutputDeviceDidChangeNotification
AVOutputContextManagerOutputContextDidFailToConnectToOutputDeviceNotification
AVOutputContextManagerOutputDeviceKey
AVOutputContextManagerFailureReasonKey
AVOutputContextDeviceConnectionFailureReasonDeviceInUse
AVOutputContextDeviceConnectionFailureReasonDeviceOutOfRange
AVOutputContextDeviceConnectionFailureReasonNotAPeerInHomeGroup
AVOutputContextDeviceConnectionFailureReasonDeviceNotConnectedToInternet
AVOutputContextDeviceConnectionFailureReasonDeviceNotMFiCertified
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailed2GHzNetwork
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailedMultiDFSNetwork
AVOutputContextTypeSharedSystemAudio
AVOutputContextTypeSharedSystemScreen
AVOutputContextTypeSharedAudioPresentation
AVOutputContextTypeAudio
AVOutputContextTypeVideo
AVOutputContextTypeScreen
AVOutputContextTypeGroupControl
AVOutputContextTypeSharedSystemRemotePool
AVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification
AVOutputContextVolumeDidChangeNotification
AVOutputContextCanSetVolumeDidChangeNotification
AVOutputContextVolumeControlTypeDidChangeNotification
AVOutputContextCommunicationChannelOptionControlType
AVOutputContextCommunicationChannelControlTypeDirect
AVOutputContextCommunicationChannelControlTypeRelayed
AVOutputContextDestinationChangeCancellationReasonAuthorizationSkipped
outputcontext_trace
com.apple.UIKit.screenpicker
com.apple.avfoundation.allow-system-wide-context
com.apple.avfoundation.outputcontext.ivars
AVOutputContextSerializationKeyContextID
AVOutputContextSerializationKeyContextType
<%@: %p, ID=%@, type=%@>
-[AVOutputContext setApplicationProcessID:]
-[AVOutputContext setOutputDevice:options:completionHandler:]
-[AVOutputContext setOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext setOutputDevice:forFeatures:]
-[AVOutputContext setOutputDevice:options:]
+[AVOutputContext resetOutputDeviceForAllOutputContexts]
-[AVOutputContext outputContextImpl:didInitiateDestinationChange:]
-[AVOutputContext outputContextImpl:didChangeOutputDeviceWithInitiator:]
-[AVOutputContext outputContextImplDidChangeGlobalOutputDeviceConfiguration:]
-[AVOutputContext outputContextImpl:didChangeOutputDevicesWithInitiator:reason:deviceID:previousDeviceIDs:]
-[AVOutputContext setOutputDevices:]
-[AVOutputContext setOutputDevices:options:completionHandler:]
-[AVOutputContext setOutputDevices:options:completionHandler:]_block_invoke
-[AVOutputContext addOutputDevice:options:completionHandler:]
-[AVOutputContext addOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext addOutputDevice:]
-[AVOutputContext removeOutputDevice:options:completionHandler:]
-[AVOutputContext removeOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext removeOutputDevice:]
-[AVOutputContext outputContextImplDidChangePredictedOutputDevice:]
-[AVOutputContext resetPredictedOutputDevice]
-[AVOutputContext outputContextImplDidChangeProvidesControlForAllVolumeFeatures:]
-[AVOutputContext outputContextImplDidChangeVolume:]
-[AVOutputContext outputContextImplDidChangeCanSetVolume:]
-[AVOutputContext outputContextImplDidChangeVolumeControlType:]
-[AVOutputContext openCommunicationChannelWithOptions:error:]
-[AVOutputContext setCommunicationChannelDelegate:]
-[AVOutputContext outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:]
-[AVOutputContext outputContextImpl:didReceiveData:fromCommunicationChannel:]
-[AVOutputContext outputContextImpl:didCloseCommunicationChannel:]
server death
-[AVOutputContextCommunicationChannel sendData:completionHandler:]
com.apple.avfoundation.outputcontext.destinationchange
<%@: %p, status=%d, cancellationReason=%@>
com.apple.avfoundation.outputcontextmanager.ivars
-[AVOutputContextManager outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:]
AVAssetPlaybackConfigurationOptionStereoVideo
AVAssetPlaybackConfigurationOptionStereoMultiviewVideo
playbackCapabilities
avrunloopcondition_trace
AVRunLoopConditionSignalRunLoopMode
-[AVRunLoopCondition _waitInMode:untilDate:]
AVLayerVideoGravityResize
AVLayerVideoGravityResizeAspect
AVLayerVideoGravityResizeAspectFill
vide
soun
text
clcp
meta
mobj
muxx
hapt
dpth
auxv
scen
AVVideoRangeSDR
AVVideoRangeHLG
AVVideoRangePQ
AVMediaCharacteristicVisual
AVMediaCharacteristicAudible
AVMediaCharacteristicLegible
AVMediaCharacteristicFrameBased
public.uses-wide-gamut-color-space
public.contains-hdr-video
public.contains-alpha-channel
public.main-program-content
public.auxiliary-content
public.original-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.easy-to-read
public.accessibility.describes-video
com.apple.has-language-display-name-as-name
public.binaural-for-headphones
public.downmix
public.translation
public.translation.dubbed
public.translation.voice-over
com.apple.quicktime.video-map
com.apple.quicktime.video-map.depth
com.apple.quicktime-movie
public.mpeg-4
com.apple.m4v-video
com.apple.m4a-audio
public.3gpp
public.3gpp2
com.apple.coreaudio-format
com.microsoft.waveform-audio
public.aiff-audio
public.aifc-audio
org.3gpp.adaptive-multi-rate-audio
public.ac3-audio
public.enhanced-ac3-audio
public.au-audio
public.mp3
public.jpeg
com.adobe.raw-image
public.heic
public.avci
public.heif
public.tiff
org.w3.webvtt
public.mpeg-2-transport-stream
com.apple.streamingkeydelivery.contentkey
com.apple.streamingkeydelivery.persistentcontentkey
MPEG4AppleHLS
MPEG4CMAFCompliant
<%@: %p, volume mix: %@>
The timeRange of a volume ramp must not overlap the timeRange of an existing volume ramp.
through
, changing instantaneously to 
, holding steady at 
, interpolated to 
 with %@ ramp style
volume %1.3f %@ time %1.3f%@%@
com.apple.avfoundation.avoperation.ivars
requestedStatus != AVOperationStatusUnknown
isExecuting
isFinished
com.apple.avfoundation.globaloperationqueue.%p
<%@: %p, unfinishedOperations=%@>
AVDepartureAnnouncingObjectMonitorKey
com.apple.avfoundation.waitForNotificationOrDeallocationOperation
Cannot enter a terminal state until the receiver starts executing
Cannot regress from a terminal state %d to a non-terminal state %d
<%@: %p> delegate serialization queue
-[AVWeakReferencingDelegateStorage _delegate]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/Utilities/AVDelegateUtilities.m
-[AVWeakReferencingDelegateStorage _setDelegateViaWeakReference:]
assetinspectorloader_trace
keys
AVAsynchronousLoadingPropertyBatchIDKey
AVAsynchronousLoadingCompletionHandlerKey
com.apple.avfoundation.avasset.completionsQueue
trackPropertyForMediaSelectionOptions
trackPropertyForPlaybackCapabilities
-[AVAsset statusOfValueForKey:error:] invoked with unrecognized key %@.
v24@?0@8^B16
%@ invoked with unrecognized keys %@.
-[AVFigAssetInspectorLoader loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:]
(keys == nil) || [keys isKindOfClass:[NSArray class]]
[keysForCollectionKeys isKindOfClass:[NSDictionary class]]
[[keysForCollectionKeys objectForKey:thisKey] isKindOfClass:[NSArray class]]
-[AVAsset loadValuesAsynchronouslyForKeys:completionHandler:]
-[AVAsset loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:] invoked with unrecognized AVAssetTrack keys %@.
AVAsynchronousLoadingTrackPropertyBatchIDKey
-[AVFigAssetInspectorLoader _ensureAllDependenciesOfKeyAreLoaded:]
exportable
readable
composable
, batchID = %ld
, track batchID = %ld
-[AVFigAssetInspectorLoader _invokeCompletionHandlerForLoadingBatches:]
assetCache
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
cacheKey
downloadDestinationURL
isProxy
variants
contentKeySpecifiersEligibleForPreloading
preferredRate
preferredSoundCheckVolumeNormalization
providesPreciseDurationAndTiming
referenceRestrictions
lyrics
commonMetadata
ID3Metadata
allMediaSelections
hasProtectedContent
originalNetworkContentURL
playable
compatibleWithSavedPhotosAlbum
compatibleWithAirPlayVideo
audioAlternatesTrackGroup
subtitleAlternatesTrackGroup
alternateTrackGroups
identifyingTag
identifyingTagClass
httpSessionIdentifier
resolvedURL
SHA1Digest
figAsset
playbackItem
canContainFragments
containsFragments
canContainMovieFragments
containsMovieFragments
firstFragmentSequenceNumber
fragmentCount
overallDurationHint
moovAtomSize
propertyListForProxy
supportsAnalysisReporting
assetAnalysisMessages
maximumVideoResolution
availableVideoDynamicRanges
preferredDisplayCriteria
minimumTimeOffsetFromLive
resourceLoader
mayRequireContentKeysForMediaDataProcessing
handleFigAssetLoadingNotification
handleFigAssetLoadingNotification_block_invoke
AVRoutingSessionManagerCurrentSessionDidChangeNotification
AVRoutingSessionManagerLikelyExternalDestinationsDidChangeNotification
AVRoutingSessionManagerAllLikelyDestinationsDidChangeNotification
routingsession_trace
+[AVRoutingSessionManager initialize]
<%@: %p, currentRoutingSession=%@, likelyExternalDestinations=%@>
-[AVRoutingSessionManager updateCurrentRoutingSessionFromLikelyDestinationsWithCompletionHandler:]
Missing required entitlement com.apple.avfoundation.allow-identifying-output-device-details
-[AVRoutingSessionManager startRoutingSessionForHighConfidenceExternalDestinationIfPresentWithCompletionHandler:]
-[AVRoutingSessionManager startRoutingSessionWithOutputDeviceDescriptions:error:]
-[AVRoutingSessionManager startSuppressingLikelyDestinationsUntilNextPlayEventAndReturnError:]
-[AVRoutingSessionManager stopSuppressingLikelyDestinationsAndReturnError:]
com.apple.avfoundation.allows-set-output-device
%c%c%c%c
decodable
playabilityValidationResult
enabled
selfContained
totalSampleDataLength
mediaPresentationTimeRange
mediaDecodeTimeRange
requiresFrameReordering
peakDataRate
mediaCharacteristics
dimensions
loudnessInfo
minFrameDuration
segmentsExcludeAudioPrimingAndRemainderDurations
gaplessSourceTimeRange
segmentsAsPresented
layer
defaultAlternateGroupID
provisionalAlternateGroupID
excludedFromAutoselectionInTrackGroup
locale
containsMixedSubtitles
containsOnlyForcedSubtitles
fallbackTrack
associatedSubtitleTrack
pairedForcedOnlySubtitlesTrack
hasAudibleBooksContent
isAudibleBooksContentAuthorized
canProvideSampleCursors
com.apple.avfoundation.avassettrack.completionsQueue
-[AVAssetTrack statusOfValueForKey:error:] invoked with unrecognized key %@.
-[AVAssetTrack loadValuesAsynchronouslyForKeys:completionHandler:] invoked with unrecognized keys %@.
HasSeamSamples
%c[%@ %@]
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ only defined for abstract class.  Define %@!
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
com.apple.AVFCore
xxxxDefaultValuexxxx
<%@: %p, referencedObject = %@>
request != nil
batch cannot be nil
batch does not belong to this generator
createSampleBufferForRequest must only be called before makeDataReadyWithCompletionHandler.
com.apple.avfoundation.avsamplebuffergenerator.data-ready-notifications
generator != nil
makeDataReadyWithCompletionHandler should only be called once.
com.apple.avfoundation.avsamplebuffergenerator.batch-ready-notifications
{CGPoint=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
{CGSize=dd}
figSampleInformationoDict != nil
figSegmentTrackReportDict != nil
figSegmentReportDict != nil
%@ read/write queue
callbackContext != nil
callbackContextToken != AVCallbackContextTokenInvalid
Cannot unregister token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
Cannot look up token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
%@ only supports listening to notifications from CMNotificationCenterGetDefaultLocalCenter
cmNotificationCenter != NULL
com.apple.avfoundation.avcmnotificationdispatcher.ivars
Cannot remove a listener %@ (callback %p) for %@ from object %p that was never added.  Break on AVCMNotificationDispatcherUnbalancedUnregistrationBreak() to debug.
avblockserializer_trace
-[AVSerializedMostlySynchronousReentrantBlockScheduler scheduleBlock:]
%@ %@
*** %@
Cannot create format description for metadata group %p%@
<%@: %p, timeRange=%@, items=%@>
<%@: %p, startDate=%@, endDate=%@ classifyingLabel=%@ uniqueID=%@ items=%@>
[propertyList isKindOfClass:[NSDictionary class]]
The identifier for one or more of the following items is invalid: %@.  See +[%@ %@] for a way to construct a valid identifier from a key and key space
Data type "%@" does not conform to any built-in data type.  See CMMetadataDataTypeRegistryRegisterDataType.
Metadata item %p has no value
No entry in format description %p for metadata item %p with identifier %@, data type %@ and extended language tag %@.  If you created this format description using -[%@ %@], make sure the instance of %@ used to create the format description contains a representative sample of metadata items which includes an item with the same combination of identifier, dataType, and extended language tag as this one
Value "%@" of class %@ in metadata item %p is not compatible with base data type %@
B32@?0@"AVMediaSelectionOption"8Q16^B24
AVPlatformIdentifierMacOS
AVPlatformIdentifierIOS
AVPlatformIdentifierWatchOS
AVPlatformIdentifierTVOS
AVExecutionEnvironmentCurrentPlatformIdentifierKey
{?=ii}
-[AVDelegatingPlaybackCoordinatorPlaybackControlCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorPlayCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorBufferingCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorPauseCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorSeekCommand init] unavailable
com.apple.avfoundation.avdelegatingplaybackcoordinator.timelinecontrol
com.apple.avdelegatingplaybackcoordinator.figtimelinecoordinator.config
com.apple.avfoundation.avdelegatingplaybackcoordinator.ivars
-[AVDelegatingPlaybackCoordinator _updateTransportControlStateDictionaryWithTransportControlState:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleNewTransportControlStateDictionary:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleNewParticipantStateDictionary:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleReplacementParticipantStateDictionaries:]_block_invoke
AVDelegatingPlaybackCoordinatorBroadcastTimelineStateCallback
AVDelegatingPlaybackCoordinatorBroadcastParticipantStateCallback
AVDelegatingPlaybackCoordinatorAsynchronouslyReloadTimelineStateCallback
AVFragmentedMovieDurationDidChangeNotification
AVFragmentedMovieWasDefragmentedNotification
AVFragmentedMovieContainsMovieFragmentsDidChangeNotification
AVFragmentedMovieTrackTimeRangeDidChangeNotification
AVFragmentedMovieTrackSegmentsDidChangeNotification
AVExternalPlaybackMonitorAirPlayVideoActiveDidChangeNotification
AVExternalPlaybackMonitorAirPlayVideoPlayingDidChangeNotification
playbackmonitor_trace
+[AVExternalPlaybackMonitor initialize]
<%@: %p, airPlayVideoActive=%d, airPlayVideoPlaying=%d>
Audio/Video
UserInterfaceSoundEffects
LiveAudio
Ringtone
RingtonePreview
PhoneCall
TTYCall
AVAudioSessionMediaPlayerOnlyModeMoviePlayback
AVAudioSessionMediaPlayerOnlyModeSpokenAudio
FindMyPhone
AVAudioSessionPickableRoutesDidChangeNotification
AVAudioSessionCanEnterPIPModeDidChangeNotification
property
non-resumable
<%@: %p, options = %@, allowsEmptySelection = %@>
AVMediaSelectionTrackOptionCharacteristicsKey
AVMediaSelectionTrackOptionTrackIDKey
AVMediaSelectionTrackOptionSettingsKey
AVMediaSelectionKeyValueOptionMediaTypeKey
AVMediaSelectionKeyValueOptionGroupIDKey
<%@: %p, language = %@%@>
, title = %@
, associated language = %@
, tagged media characteristics = {%@}
, default = YES
, auxiliary = YES
, fallback track or variant IDs = {%@}
, forced subtitles only
, associated forced-only option = <%@: %p>
'%c%c%c%c'
, mediaSubTypes = {%@}
, mediaType = '%@'%@%@%@%@%@%@%@
SUBTITLE_TRACK_DISPLAY_FORMAT
AVMediaSelectionOption
%2$@
SDH_SUBTITLE_FORMAT
%1$@
FORCEDONLY_SUBTITLE_FORMAT
EASYTOREAD_SUBTITLE_FORMAT
CC_SUBTITLE_FORMAT
DESCRIBESVIDEO_AUDIO_FORMAT
VOICEOVERTRANSLATION_AUDIO_FORMAT
ORIGINAL_AUDIO_FORMAT
AUDIOENCODING_AUDIO_FORMAT
UNKNOWN_LANGUAGE
displayNameWithLocale requires an NSLocale
nil selection option for the following group: %@
%@%@
Output settings dictionary is empty and valid
Output settings dictionary is valid
Output settings dictionary contains one or more invalid keys: %@
outputSettingsDictionary != nil
Output settings dictionary does not contain any recognized keys
<%@: %p, outputSettingsDictionary=%@>
UTI != nil
Invalid file type UTI.  Available file types are: %@
<%@: %p, UTI = %@>
formatDesc != NULL
fileType != nil
Format ID '%@' is not compatible with file type %@
Cannot write non-interleaved audio to a file
[[fileType UTI] isEqualToString:AVFileTypeWAVE]
WAVE files cannot contain floating-point LPCM
WAVE files cannot contain big-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFF]
AIFF files cannot contain floating-point LPCM
AIFF files cannot contain little-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFC]
AIFC files cannot contain little-endian LPCM
The video codec %@ is not compatible with file type %@
Uncompressed video is not allowed for file type %@
not implemented
avAudioSettingsDictionary != nil
AVAudioSettings dictionary must contain AVFormatIDKey
Cannot specify both AVEncoderBitRateKey and AVEncoderBitRatePerChannelKey
If one of AVLinearPCMIsFloatKey and AVLinearPCMBitDepthKey is specified, both must be specified
Bit depth can only be one of: %@
Bit depth hint can only be one of: %@
Bit rate strategy can only be one of: %@
Value for AVEncoderAudioQualityForVBRKey must be an instance of %@
Cannot specify a value for AVEncoderAudioQualityForVBRKey without also specifying AVAudioBitRateStrategy_Variable for AVEncoderBitRateStrategyKey
Floating-point LPCM must be 32-bit
Channel count must be positive
AudioChannelLayout is invalid
AudioChannelLayout channel count must be positive
AudioChannelLayout channel count does not match AVNumberOfChannelsKey channel count
Invalid value %.2f for AVSampleRateKey; sample rate must be between 8.0 and 192.0 kHz inclusive
Value for AVSampleRateConverterAlgorithmKey must be an instance of NSString
Unrecognized value "%@" for AVSampleRateConverterAlgorithmKey
The following keys are not allowed when format ID is '%@': %@
%g Hz is not a valid sample rate for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeSampleRates (<AudioToolbox/AudioFormat.h>) to enumerate available rates for a given format.
%d is not a valid channel count for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeNumberChannels (<AudioToolbox/AudioFormat.h>) to enumerate available channel counts for a given format.
Channel layout is not valid for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeChannelLayoutTags (<AudioToolbox/AudioFormat.h>) to enumerate available channel layout tags for a given format.
Missing required key %@
Unrecognized bit rate strategy
Unrecognized value for %@: %@
Pixel buffer attributes width and height must be nonnegative
Value for AVVideoScalingModeKey must be one of: %@
Value for kCVPixelBufferMetalCompatibilityKey must be an NSNumber wrapping a BOOL
Compression property %@ is not supported for video codec type %@
Video codec type %@ expects a value for compression property %@ in a particular numeric range, but property value %@ is not numeric
Video codec type %@ does not allow values for %@ that are numerically less than %@
Video codec type %@ does not allow values for %@ that are numerically greater than %@
For compression property %@, video codec type %@ only allows the following values: %@
av_kVTPropertyInitialValueKey
For compression property %@, video codec type %@ only allows the value %@
avVideoSettingsDictionary != nil
AVVideoSettings dictionary must contain AVVideoCodecKey
AVVideoSettings dictionary must specify a height if it specifies a width
AVVideoSettings dictionary must specify a width if it specifies a height
AVVideoSettings dictionary must specify a positive width
AVVideoSettings dictionary must specify a positive height
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoAverageBitRateKey
AVVideoCompressionPropertiesKey dictionary must specify a value between 0.0 and 1.0 for AVVideoQualityKey
AVVideoCompressionPropertiesKey dictionary must specify a non-negative value for AVVideoMaxKeyFrameIntervalDurationKey
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoMaxKeyFrameIntervalKey
Value for AVVideoH264EntropyModeKey must be an instance of NSString
Value for AVVideoExpectedSourceFrameRateKey must be an instance of NSNumber
Value for AVVideoAllowFrameReorderingKey must be an instance of NSNumber
Value for AVVideoAverageNonDroppableFrameRateKey must be an instance of NSNumber
Dictionary for AVVideoPixelAspectRatioKey contains one or more unrecognized keys: %@
Value for AVVideoPixelAspectRatioKey must be an instance of NSDictionary
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioHorizontalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must contain NSNumber values for both AVVideoPixelAspectRatioHorizontalSpacingKey and AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoCleanApertureKey contains one or more unrecognized keys: %@
Clean aperture region must be contained within the bounds specified by width & height
Value for AVVideoCleanApertureKey must be an instance of NSDictionary
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHorizontalOffsetKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureVerticalOffsetKey
Value for AVVideoCleanApertureWidthKey must be an instance of NSNumber
Value for AVVideoCleanApertureHeightKey must be an instance of NSNumber
Value for AVVideoCleanApertureHorizontalOffsetKey must be an instance of NSNumber
Value for AVVideoCleanApertureVerticalOffsetKey must be an instance of NSNumber
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoColorPropertiesKey must contain all three color keys (AVVideoColorPrimariesKey, AVVideoTransferFunctionKey, AVVideoYCbCrMatrixKey) and it may not contain any other keys
Value for AVVideoColorPrimariesKey must be one of: %@
Value for AVVideoTransferFunctionKey must be one of: %@
Value for AVVideoYCbCrMatrixKey must be one of: %@
Dictionary for AVVideoColorPropertiesKey must be an NSDictionary
Dictionary for AVVideoAllowWideColorKey must be an NSNumber
AVVideoMinimumFrameDuration must be numeric
AVVideoMinimumFrameDuration must be greater than kCMTimeZero
Dictionary for AVVideoMinimumFrameDuration must be an NSDictionary
AVVideoFrameRateConversionAlgorithm must be either AVVideoFrameRateConversionAlgorithmFast or AVVideoFrameRateConversionAlgorithmPrecise
String for AVVideoFrameRateConversionAlgorithm must be an NSString
kVTDecompressionPropertyKey_FieldMode must be one of: kVTDecompressionProperty_FieldMode_BothFields, kVTDecompressionProperty_FieldMode_TopFieldOnly, kVTDecompressionProperty_FieldMode_BottomFieldOnly, kVTDecompressionProperty_FieldMode_SingleField, or kVTDecompressionProperty_FieldMode_DeinterlaceFields
String for kVTDecompressionPropertyKey_FieldMode must be an NSString
Value for kVTDecompressionPropertyKey_PropagatePerFrameHDRDisplayMetadata must be an NSNumber
AVVideoEmitSequencesAtSyncFramesOnly must be greater than zero
AVVideoEmitSequencesAtSyncFramesOnly must be an NSNumber
AVVideoPixelAspectRatioKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Pixel aspect ratio can only be specified once
Value for pixel aspect ratio must be an instance of NSDictionary
AVVideoCleanApertureKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Clean aperture can only be specified once
Value for clean aperture must be an instance of NSDictionary
<%@: %p, minimum = %f, maximum = %f>
AVAssetDownloadSessionDownloadSucceededNotification
AVAssetDownloadSessionDownloadFailedNotification
AVAssetDownloadSessionFileSizeAvailableNotification
AVAssetDownloadSessionLoadedTimeRangesChangedNotification
AVAssetDownloadSessionCurrentLoadedTimeRangesKey
AVAssetDownloadSessionNewlyLoadedTimeRangeKey
AVAssetDownloadSessionTimeRangeExpectedToLoadKey
AVAssetDownloadSessionDidResolveMediaSelectionNotification
AVAssetDownloadSessionPriorityKey
AVAssetDownloadSessionProtectedContentSupportStorageURLKey
AVAssetDownloadSessionPurchaseBundleKey
AVAssetDownloadSessionAirPlayAuthorizationInfoKey
AVAssetDownloadSessionCachePrimingDownloadTokenKey
AVAssetDownloadSessioniTunesStoreContentInfoKey
AVAssetDownloadSessioniTunesStoreContentIDKey
AVAssetDownloadSessioniTunesStoreContentTypeKey
AVAssetDownloadSessioniTunesStoreContentUserAgentKey
AVAssetDownloadSessioniTunesStoreContentDownloadParametersKey
AVAssetDownloadSessioniTunesStoreContentDSIDKey
AVAssetDownloadSessioniTunesStoreContentPurchasedMediaKindKey
AVAssetDownloadSessionHTTPCookiesKey
AVAssetDownloadSessionClientBundleIdentifierKey
AVAssetDownloadSessionHTTPHeaderFieldsKey
AVAssetDownloadSessionClientAuditTokenKey
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey
AVAssetDownloadSessionAllowsCellularAccessKey
AVAssetDownloadSessionAllowsExpensiveNetworkAccessKey
AVAssetDownloadSessionAllowsConstrainedNetworkAccessKey
AVAssetDownloadSessionMinimumRequiredMediaBitrateKey
AVAssetDownloadSessionMediaSelectionKey
AVAssetDownloadSessionDeleteDownloadWhenAssetFinalizesKey
AVAssetDownloadSessionLinkAssetURLToDestinationURLKey
AVAssetDownloadSessionShouldStoreEligibleContentKeysKey
AVAssetDownloadSessionAssetNameKey
AVAssetDownloadSessionAssetImageDataKey
AVAssetDownloadSessionOptimizeAccessForLinearMoviePlaybackKey
AVAssetDownloadSessionAlternativeConfigurationOptionsKey
AVAssetDownloadSessionMediaSelectionPrefersMultichannelKey
AVAssetDownloadSessionDebugIdentifierKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AVAssetDownloadTaskMediaSelectionKey
AVAssetDownloadTaskShouldStoreEligibleContentKeysKey
AVAssetDownloadTaskDestinationURLKey
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
AVAssetDownloadTaskAllowHighDynamicRangeKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelOnlyKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelForMostPreferredLanguageOnlyKey
AVAssetDownloadTaskMediaSelectionsForMultichannelKey
AVAssetDownloadTaskPrefersHDRKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateForHEVCKey
AVAssetDownloadTaskPrefersMostCompatibleRenditionKey
AVAssetDownloadSessionRetryErrorKey
AVAssetDownloadTaskClientIsCatalyst
AVAssetDownloadTaskPrefersLosslessAudioKey
AVAssetDownloadTaskMaximumAudioSampleRateKey
AVAssetDownloadTaskDownloadConfigurationKey
com.apple.avfoundation.avassetdownloadsession
URL != nil
[destinationURL isFileURL]
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey and AVAssetDownloadSessionAllowsCellularAccessKey options are incompatible
downloadToken > 0
asset != nil || options[AVAssetDownloadTaskDownloadConfigurationKey] != nil
(asset != nil && [asset isKindOfClass:[AVURLAsset class]]) || asset == nil
mediaSelections == nil || [mediaSelections isKindOfClass:[NSArray class]]
<%@: %p, PTS = %@, DTS = %@>
<%@: %p> timebase read/write queue
AVPlayerItemVideoOutput does not support compressed output
AVPlayerItemOutput queue
com.apple.avfoundation.avfragmentedassetminder
An %@ cannot mind fragmented assets more frequently than once per millisecond (requested interval was %f)
An %@ cannot mind instances of %@
%@ cannot add an %@ that's already being minded by another fragment minder
*** -[%@ addFragmentedAsset:] specifies an asset that's already associated with a fragment minder. Ignoring.
AVPixelBufferAttributeMediatorPixelBufferAttributesDidChangeNotification
AVSampleBufferDisplayLayerFailedToDecodeNotification
AVSampleBufferDisplayLayerFailedToDecodeNotificationErrorKey
AVSampleBufferDisplayLayerRequiresFlushToResumeDecodingDidChangeNotification
AVSampleBufferDisplayLayerOutputObscuredDueToInsufficientExternalProtectionDidChangeNotification
AVSampleBufferDisplayLayerVideoRectDidChangeNotification
AVSampleBufferDisplayLayerVisibilityDidChangeNotification
AVSampleBufferDisplayLayerQueue
separatedOptions.STSLabel
sampleBufferVideoRenderer.status
sampleBufferVideoRenderer.error
sampleBufferVideoRenderer.outputObscuredDueToInsufficientExternalProtection
AVSampleBufferDisplayLayer: No formatDescription found in sampleBuffer
StreamingContentKeyRequestRequiresPersistentKey
StreamingContentKeyRequiresiTunesProvisioningKey
can be decoded only by a NSXPCCoder
endpoint
NSXPCCoder returned NULL endpoint
customURLHandlerObjectID
authHandlerObjectID
contentKeySessionHandlerObjectID
can be encoded only by a NSXPCCoder
com.apple.avfoundation.avassetresourceloader.state
com.apple.avfoundation.avassetresourceloader.contentInformationCaching
com.apple.avfoundation.avassetresourceloader.handler
AVAssetResourceLoader
com.apple.avfoundation.avassetresourceloader.authhandler
AVAssetResourceLoader-authentication
NULL delegateQueue passed
delegate
delegateQueue
v16@?0@"<AVAssetResourceLoaderDelegate>"8
v12@?0B8
The specified challenge must be an instance of NSURLAuthenticationChallenge previously provided by AVAssetResourceLoader
The specified credential must be an instance of NSURLCredential
<%@: %p, content type = "%@", content length = %lld, byte range access supported = %@, disk caching permitted = %@, renewal date = %@>
Accept-Ranges
no-cache
Content-Type
com.apple.avfoundation.avassetresourceloadingdatarequest
<%@: %p, requested offset = %lld, requested length = %lld, requests all data to end of resource = %@, current offset = %lld>
com.apple.avfoundation.avassetresourceloadingrequest.dataCaching
bytes=%lld-%lld
AVAssetResourceLoadingRequest %p deallocated while a streaming content key request is still being generated; leaking completion handler. Either keep a retain of the AVAssetResourceLoadingRequest in -generateStreamingContentKeyRequestDataAsynchronouslyForApp's completionHandler or wait until completionHandler is called before calling -finishLoading/-finishLoadingWithError:.
<%@: %p, URL request = %@, request ID = %llu, content information request = %@, data request = %@>
Already have a cachedContentInformation
FCUP_Response_RequestID
FCUP_Response_URL
FCUP_Response_Headers
FCUP_Response_IsContentKeyRequest
no contentKeySession
*** -[AVAssetResourceLoadingRequest finishLoading] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
Must respond with a contentType contained in AVAssetResourceLoadingContentInformationRequest.allowedContentTypes.
*** -[AVAssetResourceLoadingRequest finishLoadingWithError:] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
StreamingContentKeyIsForAirPlayKey
CSKRO_RemoteContext
Cannot generate content key request when AVAsset is attached to AVContentKeySession
appIdentifier != nil
contentIdentifier != nil
A streaming content key request is already being generated on this AVAssetResourceLoadingRequest.
keyVendorResponse != NULL
AVSampleBufferRenderSynchronizerRateDidChangeNotification
com.apple.avfoundation.avsamplebufferrendersynchronizer.ratequeue
com.apple.avfoundation.avsamplebufferrendersynchronizer.synchronizeraccessqueue
com.apple.avfoundation.avsamplebufferrendersynchronizer.rendererlistqueue
rendersynchronizer_sts_label
com.apple.avfoundation.STS.%d-%d
newRate >= 0.0
Invalid renderer configuration; forcing rate to 0. rather than %1.3f
v16@?0@"NSString"8
invalid renderer
Cannot add renderer %p %@
The SampleBufferRenderer cannot be added to a Synchronizer more than once.
Multiple AudioRenderers not allowed when using Long Form Routing Policy.
An instance of AVSampleBufferRenderSynchronizer cannot remove a time observer that was added by a different instance of AVSampleBufferRenderSynchronizer.
renderer
onceTimebaseObserver
clientCompletionHandler
AVSampleBufferRenderSynchronizerFigFactoryKey
BOOL AVCanWriteFilesToDirectoryAtURL(NSURL *, NSError **)
AVFileSystemUtilities.m
directoryURL != nil
TemporaryFileForAVFoundation
<%@: %p, peakBitRate:%d averageBitRate:%d video:%@ audio:%@>
variant
[mediaSelectionOption isKindOfClass:[AVMediaSelectionOption class]]
<%@: %p, formatIDs:%@>
one of the constituent parts of %@ are not supported by AVAssetVariantQualifier error:%@
predicate
channelCount
mediaSelectionOption
operator
creation using format string is not supported
<%@: %p, count:%d operator:%@ option:%@>
width
<%@: %p, width:%lf operator:%@>
height
<%@: %p, height:%lf operator:%@>
AVCGColorAttributes
Not available.  Use %@ instead
<%@: %p
, principalMediaCharacteristics = %@
, preferredLanguages = %@
, preferredMediaCharacteristics = %@
, preferredMediaSubTypes = %@
, precludedMediaSubTypes = %@
, preferMultichannelAudio
, precludeMultichannelAudio
preferredLanguages must contain only items of type NSString
preferredMediaCharacteristics must contain only items of type NSString
principalMediaCharacteristics must contain only items of type NSString
preferredMediaSubTypes must contain only items of type NSNumber
precludedMediaSubTypes must contain only items of type NSNumber
filteredImage != nil
com.apple.AVStorylineCustomVideoCompositor._renderContextQ
Expecting video composition to contain only AVCoreImageFilterVideoCompositionInstruction
B8@?0
@"CIContext"8@?0
AVPlayerItemLegibleOutputTextStylingResolutionDefault
AVPlayerItemLegibleOutputTextStylingResolutionSourceAndRulesOnly
subtypes != nil
com.apple.avplayeritemlegibleoutput.ivars
[mediaSubtypeObject isKindOfClass:[NSNumber class]]
integerValueAppearsToBeAFourCC
Native representation is not available for media subtype 'c608'
Invalid text styling resolution %@
AVOutputSettingsPreset640x480
AVOutputSettingsPreset960x540
AVOutputSettingsPreset1280x720
AVOutputSettingsPreset1920x1080
AVOutputSettingsPreset3840x2160
AVOutputSettingsPresetHEVC1920x1080
AVOutputSettingsPresetHEVC1920x1080WithAlpha
AVOutputSettingsPresetHEVC3840x2160
AVOutputSettingsPresetHEVC3840x2160WithAlpha
AVOutputSettingsPresetHEVC7680x4320
CMTIME_IS_NUMERIC(sourceVideoAverageFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoAverageFrameDuration, >, kCMTimeZero)
CMTIME_IS_NUMERIC(sourceVideoMinFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoMinFrameDuration, >, kCMTimeZero)
AVMediaSelection_DefaultSelection
[propertyList isKindOfClass:[NSArray class]]
 %@ : %@ 
<%@: %p, group characteristics and selected options = %@>
widthPixels
heightPixels
imageData
prerendered
Knobs
LowFidelityTouch
HighFidelityTouch
Touchpad
softKeyboard
softPhoneKeypad
nonMusicLists
musicLists
japanMaps
ExternalDevice_ScreenBecameAvailable
ExternalDevice_ScreenBecameUnavailable
ExternalDevice_NightModeChangedNotification
ExternalDevice_LimitedUIChangedNotification
ExternalDevice_OwnsTurnByTurnNavigationChangedNotification
ExternalDevice_PerformanceReportNotificationPosted
ExternalDevice_MFiCertificateSerialNumberChangedNotification
ExternalDevice_ElectronicTollCollectionChangedNotification
ExternalDevice_NavigationAidedDrivingChangedNotification
enhancedRequestCarUI
com.apple.AVFoundation.AVExternalDevice
com.apple.AVFoundation.AVExternalDevice.ViewAreas
viewAreaIndex
adjacentViewAreas
active
com.apple.springboard
InitialCarPlayConnection
TestTakeScreenAway
payload
TestNotification
uuid
AVPlayerCaptionLayerQueue
com.apple.avfoundation.playercaptionlayer.configuration
com.apple.avcustomvideocompositorsession.clientcustomcompositorq
com.apple.avcustomvideocompositorsession.rendercontextq
com.apple.avcustomvideocompositorsession.clienterrorq
com.apple.avcustomvideocompositorsession.videocompositionq
com.apple.avcustomvideocompositorsession.finishedrequestq
sourcePixelBufferAttributes must not be nil. (AVVideoCompositing=%p)
sourcePixelBufferAttributes must be an NSDictionary. (AVVideoCompositing=%p)
sourcePixelBufferAttributes must contain kCVPixelBufferPixelFormatTypeKey. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must contain at least one item. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must be either an NSArray or an NSNumber. (AVVideoCompositing=%p)
requiredPixelBufferAttributesForRenderContext must not be nil. (AVVideoCompositing=%p)
requiredPixelBufferAttributesForRenderContext must contain kCVPixelBufferPixelFormatTypeKey. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in requiredPixelBufferAttributesForRenderContext must contain at least one item. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in requiredPixelBufferAttributesForRenderContext must be either an NSArray or an NSNumber. (AVVideoCompositing=%p)
This instance is never deallocated
observedObject != nil
keyPath != nil
dependentProperty
v16@?0@"NSDictionary"8
v24@?0@"NSObject<AVWeakObservable>"8@"NSDictionary"16
callbackContextRegistry != nil
observer != nil
object != nil
*** Weakly-observed object %p was deallocated without cancelling outstanding registration %p.  You are most likely about to get an exception from KVO.  To fix, make sure that %p properly implements the %@ protocol
*** Received KVO for object %p that is being deallocated.  This can cause other objects to get a reference to %p while it is in an inconsistent state.  Break on AVKVODispatcherKVODuringObjectTeardownBreak() to debug
v24@?0@"NSObject"8@"NSDictionary"16
Cannot safely use %@ with %@ or its subclasses, due to rdar://problem/26865139, until we
 stop supporting legacy versions of iWork apps
dependentPropertyKey != nil
dependencyKeyPath != nil
com.apple.avfoundation.keypathdependency.registration
<%@: %p, target=%@, dependentKey="%@", dependencyKeyPath="%@">
<deallocated>
Must invoke with object passed to initializer
v32@?0@"AVKeyPathDependency"8@"NSObject<AVWeakObservable>"16@"NSDictionary"24
v24@?0@"AVKeyPathDependency"8@"NSDictionary"16
%@.%@
topLevelDependencyProperty
observedObject
unfinished AVAsynchronousVideoCompositionRequest deallocated - should have called finishWithComposedVideoFrame:, finishWithError: or finishCancelledRequest
finishWithComposedVideoFrame requires a CVPixelBuffer
ignored -[AVAsynchronousVideoCompositionRequest finishWithComposedVideoFrame:] because already finished
ignored -[AVAsynchronousVideoCompositionRequest finishWithError:] because already finished
ignored -[AVAsynchronousVideoCompositionRequest finishCancelledRequest:] because already finished
AVRouteDetectorMultipleRoutesDetectedDidChangeNotification
routedetector_trace
com.apple.avfoundation.avroutedetector.ivars
v16@?0@"DAEvent"8
-[AVRouteDetector _didEnterBackground]
-[AVRouteDetector _didEnterForeground]
DADiscoveryConfiguration
/System/Library/PrivateFrameworks/DeviceAccess.framework/DeviceAccess
DADiscovery
com.apple.avvideocompositionrendercontext.pixelbufferpoolq
LowQualityZeroLatency
TimeDomain
Spectral
Varispeed
AVMovieReferenceRestrictionsKey
AVMovieShouldPrepareToOptimizeForExclusivePlaybackKey
AVMovieShouldSupportAliasDataReferencesKey
[[AVMovie movieTypes] containsObject:contentType]
![self isMemberOfClass:[AVMutableMovie class]]
<%@: %p defaultMediaDataStorage = %@, tracks = %@ >
<%@: %p tracks = %@ >
Can't copy settings from an AVAssetTrack with a non-matching media type
existingTracks != nil
[track isKindOfClass:[AVAssetTrack class]]
AVPlayerItemSampleBufferOutput state
AVContentKeySessionLegacyWebKitCompatibilityMode
FairPlayStreaming
ClearKeySystem
AuthorizationTokenSystem
ProtocolVersionsKey
RequiresValidationDataInSecureTokenKey
RequiresExtendedValidationDataInSecureTokenKey
SupportsAirPlayDecryptionKey
ServerChallenge
CreateDecryptorUsingFormatDescription
ReceivedKeyResponseAfterSPCTimedOut
ReceivedKeyResponseWithExpiredLease
ReceivedObsoleteKeyResponse
%@ does not support key persistence
HLSMethodKey
-[AVContentKeyRequest initWithContentKeySession:reportGroup:identifier:contentIdentifier:keyIDFromInitializationData:initializationData:preloadingRequestOptions:providesPersistableKey:]
-[AVContentKeyRequest initWithContentKeySession:reportGroup:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:isRenewalRequest:]
-[AVContentKeyRequest initWithContentKeySession:contentKeyBoss:useContentKeyBoss:keySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:isRenewalRequest:requestID:providesPersistableKey:preloadingRequestOptions:identifier:]
<%@: %p status:%d>
-[AVContentKeyRequest _setError:]_block_invoke
v16@?0@"<AVContentKeySessionDelegate>"8
-[AVContentKeyRequest _handleKeyResponseError:]
-[AVContentKeyRequest _handleKeyResponseError:]_block_invoke
-[AVContentKeyRequest _handleKeyResponseSuccessWithCryptor:]_block_invoke
-[AVContentKeyRequest ensureCryptorWithFormatDescription:error:]
value against AVContentKeyRequestProtocolVersionsKey should be an array of NSNumber objects
ISO_23001_7
SAMPLE-AES
value against AVContentKeyRequestHLSMethodKey is not recognized
value against AVContentKeySessionServerPlaybackContextOptionServerChallenge should be a NSData instance
Server challenge should be 8 bytes in length
AVContentKeyRequestRequiresExtendedValidationDataInSecureTokenKey value should be an object of NSData class
valid completionHandler is required
valid appIdentifier is required
-[AVContentKeyRequest makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:]_block_invoke
content key request cancelled or already failed
valid responseData is required
-[AVContentKeyRequest processContentKeyResponseData:renewalDate:error:]
valid keyResponse is required
AVContentKeySession's keySystem is not same as that of keyResponse
%@ does not support this operation
keyResponse should be an object of AVContentKeyResponseFairPlayStreaming class
valid FPS key response data is required
-[AVContentKeyRequest processContentKeyResponse:]
keyResponse should be an object of AVContentKeyResponseClearKey class
valid ClearKey key data is required
keyResponse should be an object of AVContentKeyResponseAuthorizationToken class
identifier and authorizationTokenData must be valid
identifier should be an object of NSString class
%@ does not support key renewal
client's delegate should respond to contentKeySession:didProvidePersistableContentKeyRequest: method in order to be able to request persistable content key request
-[AVContentKeyRequest respondByRequestingPersistableContentKeyRequestAndReturnError:]
displays is nil
-[AVContentKeyRequest(AVContentKeyReportInternal) setReportGroup:]
valid keyVendorResponse is required
persistable content key cannot be created at this time
-[AVPersistableContentKeyRequest persistableContentKeyFromKeyVendorResponse:options:error:]
FairPlay Streaming is not supported on simulators
avcontentkeysession_trace
input keySystem is not supported
%@ does not support storage URL
com.apple.AVContentKeySession._threadSafetyQ
<%@: %p> contentkeysession delegate serialization queue
-[AVContentKeySession initWithKeySystem:storageDirectoryAtURL:legacyWebKitCompatibilityMode:]
<%@: %p expired:%d>
valid delegateQueue is required
cannot add this object as an AVContentKeyRecipient
-[AVContentKeySession addContentKeyRecipient:]_block_invoke
Content key session is already expired or failed
Can't add object as an AVContentKeyRecipient after it has established its own content protection
Content key recipient cannot be associated with more than one instance of AVContentKeySession
-[AVContentKeySession addContentKeyRecipient:]
-[AVContentKeySession removeContentKeyRecipient:]_block_invoke
-[AVContentKeySession expire]
An expired content key session cannot process content key request
valid contentKeyRequest is required
Cannot renew content key request since there's no delegate set on the content key session
Cannot renew content key request using an expired content key session
Cannot renew content key request that was previously cancelled or failed
Cannot renew while content key request is waiting for a response
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]_block_invoke
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]
valid completion handler is required
valid persistableContentKeyData is required
-[AVContentKeySession makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:]
-[AVContentKeySession makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:]_block_invoke
-[AVContentKeySession invalidatePersistableContentKey:options:completionHandler:]
-[AVContentKeySession invalidatePersistableContentKey:options:completionHandler:]_block_invoke_2
valid application certificate is required
-[AVContentKeySession invalidateAllPersistableContentKeysForApp:options:completionHandler:]
-[AVContentKeySession invalidateAllPersistableContentKeysForApp:options:completionHandler:]_block_invoke_2
valid storageURL is required
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:]
expiredSessionReports should be an array of NSData objects
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:]
-[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) _handleSecureStopDidFinalizeRecordCallback]_block_invoke
%@_%llu
-[AVContentKeySession(AVContentKeySessionPrivateUtilities) _handleUpdateToPersistentKey:forKeyIdentifier:]_block_invoke
-[AVContentKeySession(AVContentKeySessionPrivateUtilities) _handleContentProtectionSessionIdentifierDidChange:]_block_invoke
appIdentifier can't change once set
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequests:forInitializationData:]_block_invoke
-[AVContentKeySession(AVContentKeyRequestSupport) issuePersistableContentKeyRequest:]
-[AVContentKeySession(AVContentKeyRequestSupport) issueRenewableContentKeyRequest:]
-[AVContentKeySession(AVContentKeyRequestSupport) contentKeyRequestDidProduceContentKey:]_block_invoke_2
valid delegate is required to deliver a key request
-[AVContentKeySession(AVContentKeySession_Internal) issueContentKeyRequestForInitializationData:]_block_invoke
cannot get content key identifier
no content key present
CoreMedia
EnableContentKeyBossForAirPlay
CoreMediaErrorDomain
-[AVContentKeySession(AVContentKeySession_Internal) _handleRequest:withRequestID:fromHandler:willHandleRequest:]
com.apple.avfoundation.avcontentkeysession.handler
AVContentKeySession
-[AVContentKeySession(AVContentKeyGroup_Support) makeContentKeyGroup]
identifier is not string or url
identifier or initializationData must be valid
AVContentKeySession is nil
-[AVContentKeyReportGroup processContentKeyRequestWithIdentifier:initializationData:options:]
-[AVContentKeyReportGroup associateContentKeyRequest:]
-[AVContentKeyReportGroup expire]
com.apple.avfoundation.avcontentkeyreportgroup
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) initWithKeySystem:keySession:contentKeyBoss:useContentKeyBoss:groupID:storageDirectoryAtURL:]
sample buffer does not have format description
Content key is not valid
pssh
AVAPSyncControllerRemoteOutputDeviceGroupImplGroupMembersChanged
AVAPSyncControllerRemoteOutputDeviceGroupImplSetSpeakerGroupCallback
AVAPSyncControllerRemoteOutputDeviceGroupImplVolumeChanged
AVAPSyncControllerRemoteOutputDeviceGroupImplVolumeControlTypeChanged
@ffffff
MbP?
<<<< AVOutputDeviceDiscoverySession >>>> %s: *** nil impl! ***
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (session=%p, discoveryMode=%d, clientIdentifiers=%@)
<<<< AVOutputDevice (APSyncController) >>>> %s: called (inLocalSpeakerUUID = %@, inError = %d)
<<<< AVOutputDevice (APSyncController) >>>> %s: called (endpointID=%{private}@)
<<<< AVOutputDevice (APSyncController) >>>> %s: called
<<<< AVOutputDeviceGroup >>>> %s: Posting %{public}@ with initiator %{public}@
<<<< AVOutputDeviceGroup >>>> %s: called (device=%{private}@ authToken? %d cancelIfAuthRequired=%{public}@, initiator=%{public}@)
<<<< AVOutputDeviceGroup >>>> %s: Result: %{public}@
<<<< AVOutputDeviceGroup >>>> %s: called (device=%{private}@, initiator=%{public}@
<<<< AVOutputDeviceGroup >>>> %s: Posting %{public}@
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p, dataLength=%d)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: Sending %d bytes through comm channel via FigEndpointRemoteControlSessionSendMessage for channel=%p
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p, inEventType=%{public}@, dataLength=%d)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: FigEndpointRemoteControlSessionSendMessage finished with response params %{public}@ (err=%d)
<<<< AVPlayer >>>> %s: Player status changed to failed with error: %d
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ updating current item from %{public}@ to %{public}@
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ will willChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ did willChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: %{public}@ setting timeControlStatus=%d, reasonForWaitingToPlay=%{public}@
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ will didChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ did didChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called with %{public}@ (afterItem = %{public}@)
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called with %{public}@
<<<< AVPlayer >>>> %s: %{public}@ skipping setting new rate on FigPlayer because another rate change has intervened
<<<< AVPlayer >>>> %s: %@ SDK check skipped, using rate 1.0
<<<< AVPlayer >>>> %s: %{public}@ failed to copy currently displayed pixel buffer w/ err %d
<<<< AVPlayer >>>> %s: %{public}@ cannot copy displayed pixel buffer while player's rate is non-zero
<<<< AVPlayer >>>> %s: %{public}@ no change to timeControlStatus or reasonForWaitingToPlay
<<<< AVPlayerItem >>>> %s: currentItem KVO: called
<<<< AVPlayerItem >>>> %s: currentItem KVO: %{public}@
<<<< AVPlayerItem >>>> %s: *** Called from the wrong queue%@.  Break on AVPotentialRaceCondition() to debug ***
<<<< AVPlayerItem >>>> %s: self %{public}@: "%{public}@" in group %{public}@
<<<< AVPlayerItem >>>> %s: self %{public}@: %{public}@
<<<< AVPlayerItem >>>> %s: self %{public}@: setting coordination identifier to %{public}@
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) replacing participant states.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) updating timeline state.
<<<< AVPlaybackCoordinator >>>> %s: States aren't distinguishable. Assuming existing state is better for %{public}@.
<<<< AVPlaybackCoordinator >>>> %s: Ignoring stale state for %{public}@
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling new control state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle new control state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling new participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle new participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling replacement participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle replacement participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to broadcast transport state but coordination medium delegate is nil
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to broadcast participant state but coordination medium delegate is nil
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to fetch timeline state but coordination medium delegate is nil.  Clearing delegate and calling completion handler.
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Calling -outputDeviceAuthorizationSession:didProvideAuthorizationRequest: on delegate (request/ID=%{public}@, request/outputDevice=%{private}@, request/authorizationTokenType=%{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Not messaging delegate because there is no delegate or it does not respond to -outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Calling -outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason: on delegate (request/ID=%{public}@, reason=%{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Not messaging delegate because there is no delegate or it does not respond to -outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (authorizationToken=%{private}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Result: %d (error: %{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Calling APSyncControllerOpenSpeakerCommChannel (controlType: %d, clientTypeUUID: %@)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: APSyncControllerOpenSpeakerCommChannel finished for comm channel ID %{public}@ (err=%d)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (commChannelUUID=%{public}@ dataLength=%d)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (commChannelUUID=%{public}@)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Sending %d bytes through comm channel ID %{public}@ via APSyncControllerSendSpeakerData
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: APSyncControllerSendSpeakerData finished for comm channel ID %{public}@ (err=%d)
<<<< AVOutputDevice >>>> %s: called (enabled=%d)
<<<< AVOutputDevice >>>> %s: setting second display mode to %{public}@...
<<<< AVOutputDevice >>>> %s: ...done setting second display mode (token=%{public}@, error=%{public}@/%d)
<<<< AVOutputDevice >>>> %s: Posting %{public}@
<<<< AVOutputDevice >>>> %s: called (volume=%f)
<<<< AVOutputDevice >>>> %s: called (count=%ld)
<<<< AVOutputDevice >>>> %s: called (allows=%d)
<<<< AVOutputDevice >>>> %s: called (mode=%{public}@)
<<<< AVOutputDevice >>>> %s: called (device=%{private}@, dataDestination=%{public}@, cancelIfAuthRequired=%{public}@, correlationID=%{private}@, initiator=%{private}@, controlType=%{public}@)
<<<< AVOutputDevice >>>> %s: Open comm channel completed (err=%d, channel=%p, correlationID=%{private}@)
<<<< AVOutputDevice >>>> %s: called (delegate? %d)
<<<< AVOutputDevice >>>> %s: Invoking -outputDevice:didReceiveData:fromCommunicationChannel: with %d bytes
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -outputDevice:didReceiveData:fromCommunicationChannel
<<<< AVOutputDevice >>>> %s: Invoking -outputDevice:didCloseCommunicationChannel:
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -outputDevice:didCloseCommunicationChannel:
<<<< AVOutputDevice >>>> %s: called (cancelIfAuthRequired=%{public}@)
<<<< AVOutputDevice >>>> %s: result=%d, cancellationReason=%{public}@, error=%{public}@
<<<< AVOutputDevice >>>> %s: called
<<<< AVOutputDevice >>>> %s: Ignoring non-date last used timestamp "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: Ignoring non-number frecency score "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: Removing frecents entry for device %{private}@ which previously had an invalid or missing LastUsedTimestamp
<<<< AVOutputDevice >>>> %s: Using frecents file at %{public}@
<<<< AVOutputDevice >>>> %s: Using legacy CFPreferences-based frecents
<<<< AVOutputDevice >>>> %s: Migrating frecents from CFPreferences to %{public}@
<<<< AVOutputDevice >>>> %s: Ignoring failure to read plist from data %{private}@ (%{private}@)
<<<< AVOutputDevice >>>> %s: Ignoring invalid frecents plist "%{private}@"
<<<< AVOutputDevice >>>> %s: Ignoring malformed frecents entry "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: called (channel=%p, delegate? %d)
<<<< AVOutputDevice >>>> %s: Invoking -communicationChannel:didReceiveData: with %d bytes for channel=%p
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -communicationChannel:didReceiveData: for channel=%p
<<<< AVOutputDevice >>>> %s: Invoking -communicationChannelDidClose: for channel=%p
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -communicationChannelDidClose: for channel=%p
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) change status from %d to %d, newError %@
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) reset status from %d to 0
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) set _createVideoQueueFailed to %d
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) Failed to create FigVideoQueue with error %d, moving state to fail state, will attempt re-create after client flushes
<<<< AVSampleBufferVideoRenderer >>>> %s: failed to create AVSampleBufferVideoRender %d
<<<< AVSampleBufferVideoRenderer >>>> %s: AVSampleBufferVideoRender Create [%p, %p]
<<<< AVSampleBufferVideoRenderer >>>> %s: AVSampleBufferVideoRender dealloc [%p, %p]
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p: %p] requestDecodeForPreroll
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p, %p] failed to copy currently displayed pixel buffer w/ err %d
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Setting %@ = %@
<<<< AVOutputDevice (FigEndpoint) >>>> %s: setting kFigEndpointProperty_ListeningMode to %d
<<<< AVOutputDevice (FigEndpoint) >>>> %s: calling FigEndpointBorrowScreen (clientName=%{public}@, reason=%{private}@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: calling FigEndpointUnborrowScreen (clientName=%{public}@, reason=%{private}@)
<<<< AVOutputContext >>>> %s: setting applicationProcessID to %d
<<<< AVOutputContext >>>> %s: called (context=%p, outputDevice=%{private}@, password? %d, cancelIfAuthRequired=%{public}@, suppressUserInteractionOnSenderOnly=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: Result: %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: called (outputDevice=%{private}@, features=%d)
<<<< AVOutputContext >>>> %s: called (outputDevice=%{private}@, password? %d, cancelIfAuthRequired=%{public}@, suppressUserInteractionOnSenderOnly=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called
<<<< AVOutputContext >>>> %s: Posting %{public}@ with destination change %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: Posting %{public}@ with initiator %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: Posting %{public}@)
<<<< AVOutputContext >>>> %s: Posting %{public}@ with initiator %{public}@, reason %{public}@, deviceID %{private}@, and previousDeviceIDs %{private}@ for context=%p
<<<< AVOutputContext >>>> %s: called (devices=%{private}@)
<<<< AVOutputContext >>>> %s: called (context=%p, devices=%{private}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called (context=%p, device=%{private}@, authToken? %d, cancelIfAuthRequired=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called (device=%{private}@)
<<<< AVOutputContext >>>> %s: called (context=%p, device=%{private}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: Posting %{public}@
<<<< AVOutputContext >>>> %s: called (controlType=%{public}@)
<<<< AVOutputContext >>>> %s: called (delegate? %d>)
<<<< AVOutputContext >>>> %s: Invoking -outputContextOutgoingCommunicationChannelDidBecomeAvailable:
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContextOutgoingCommunicationChannelDidBecomeAvailable:
<<<< AVOutputContext >>>> %s: Invoking -outputContext:didReceiveData:fromCommunicationChannel: with %d bytes
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContext:didReceiveData:fromCommunicationChannel:
<<<< AVOutputContext >>>> %s: Invoking -outputContext:didCloseCommunicationChannel:
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContext:didCloseCommunicationChannel:
<<<< AVOutputContext >>>> %s: sending %d bytes
<<<< AVOutputContext >>>> %s: Posting %{public}@ with outputDevice: %{private}@ failureReason: %{public}@
<<<< AVRunLoopCondition >>>> %s: reached timeout
<<<< AVAssetInspectorLoader >>>> %s: called (self: %p, keys: %{public}@, keysForCollectionKeys: %{public}@, handler: %{public}@)
<<<< AVAssetInspectorLoader >>>> %s: Calling FigAssetLoadValuesAsyncForProperties for properties %{public}@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: asset batch ID = %ld (err=%d, alreadyLoaded=%d)
<<<< AVAssetInspectorLoader >>>> %s: Calling FigAssetLoadValuesAsyncForTrackProperties for properties %{public}@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: track batch ID = %ld (err=%d, alreadyLoaded=%d)
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: invoking completion handler immediately
<<<< AVAssetInspectorLoader >>>> %s: Been waiting for key "%{public}@" to load since %{public}@.  Current status is %d.  First non-loaded dependency key is "%{public}@"
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: dispatching completion handler%{public}@%{public}@
<<<< AVAssetInspectorLoader >>>> %s: No completion handler to invoke
<<<< AVAssetInspectorLoader >>>> %s: No completed batches
<<<< AVAssetInspectorLoader >>>> %s: Received kFigAssetNotification_BatchPropertyLoadComplete (payload: %{public}@)
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: Marking asset batch ID %ld as complete
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: Marking track batch ID %ld as complete
<<<< AVRoutingSessionManager >>>> %s: Using non-FigRoutingSessionManager path
<<<< AVRoutingSessionManager >>>> %s: called
<<<< AVRoutingSessionManager >>>> %s: invoking completion handler with error %{public}@
<<<< AVRoutingSessionManager >>>> %s: called (deviceDescriptions=%{private}@)
<<<< AVBlockScheduler >>>> %s: Some thread is already running a block with this serializer.  Enqueued this block and letting that thread execute it
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: States aren't distinguishable. Assuming existing state is better for %{public}@.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: Ignoring stale state for %{public}@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling new control state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling new participant state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling replacement participant state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to broadcast timeline state but coordination medium delegate is nil
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to broadcast participant state but coordination medium delegate is nil
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to reload timeline state but coordination medium delegate is nil.  Clearing delegate and calling completion handler.
<<<< AVExternalPlaybackMonitor >>>> %s: Using non-FigRoutingSessionManager path
<<<< AVRouteDetector >>>> %s: AVRouteDetector did enter background.
<<<< AVRouteDetector >>>> %s: AVRouteDetector did enter foreground.
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p created request %p with identifier: %{public}@ initializationData: %p
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p request with identifier %{public}@ requestID: %lld failed err=%d
<<<< AVContentKeySession >>>> %s: %p cryptor:%p cryptorUUID:%{public}@ keyRequestId: %llu
<<<< AVContentKeySession >>>> %s: %p %p requestID:%lld
<<<< AVContentKeySession >>>> %s: %p %p did fail content key request %{public}@
<<<< AVContentKeySession >>>> %s: %p retrying key request because %@. status is set to retried
<<<< AVContentKeySession >>>> %s: %p %p key request failed since the client did not retry
<<<< AVContentKeySession >>>> %s: %p %p key request did succeed
<<<< AVContentKeySession >>>> %s: %p cryptor:%p cryptorUUID:%{public}@ cryptorKeyRequestID:%lld isInchargeOfKeyRequest:%d
<<<< AVContentKeySession >>>> %s: %p created key request:%p key-request-length:%lu for contentId:%{public}@ options:%{public}@ err:%{public}@
<<<< AVContentKeySession >>>> %s: %p setting content key response data %p to renew at %{public}@
<<<< AVContentKeySession >>>> %s: %p %p setting content key response data %p to renew at %{public}@
<<<< AVContentKeySession >>>> %s: %p processing content key response with data %p
<<<< AVContentKeySession >>>> %s: %p %p requesting persistable key request
<<<< AVContentKeySession >>>> %s: %p set report group success:%d
<<<< AVContentKeySession >>>> %s: %p %p key-respone:%p length:%lu offline-key:%p offline-key-legth:%lu err:%d
<<<< AVContentKeySession >>>> %s: %p: created with %{public}@ storageURL:%{public}@
<<<< AVContentKeySession >>>> %s: %p added content key recipient %p
<<<< AVContentKeySession >>>> %s: %p: failed to add %p as a content key recipient with error:%@
<<<< AVContentKeySession >>>> %s: %p removed content key recipient %p
<<<< AVContentKeySession >>>> %s: %p expiring recipient %p
<<<< AVContentKeySession >>>> %s: %p expiring session
<<<< AVContentKeySession >>>> %s: %p %p issuing renewable key request
<<<< AVContentKeySession >>>> %s: %p %p renewing with err:%@
<<<< AVContentKeySession >>>> %s: %p token:%p token-length:%lu error:%{public}@
<<<< AVContentKeySession >>>> %s: %{public}@ token:%p token-length:%lu error:%{public}@
<<<< AVContentKeySession >>>> %s: %p copying expired session reports for appIdentifier:%p storageURL:%{public}@ reports:%p
<<<< AVContentKeySession >>>> %s: %p remove pending session reports for appIdentifier:%p storageURL:%@
<<<< AVContentKeySession >>>> %s: %p issuing session report generation note
<<<< AVContentKeySession >>>> %s: %p issuing updated offline key %p for %{public}@
<<<< AVContentKeySession >>>> %s: %p issuing content protection identifier change for report group: %p
<<<< AVContentKeySession >>>> %s: %p issuing content protection identifier change
<<<< AVContentKeySession >>>> %s: %p issuing multiple key requests: %{public}@
<<<< AVContentKeySession >>>> %s: %p %p issuing key request
<<<< AVContentKeySession >>>> %s: %p %p issuing persistable key request
<<<< AVContentKeySession >>>> %s: %p issued content key %{public}@
<<<< AVContentKeySession >>>> %s: %p reusing preloaded cryptor %p for cryptor %p
<<<< AVContentKeySession >>>> %s: %p creating content key group: %p error: %@
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p processing key request with identifier %{public}@ and initData %{public}@ options %{public}@
<<<< AVContentKeySession >>>> %s: %p associate key request %p to reportGroup:%p
<<<< AVContentKeySession >>>> %s: %p expire reportGroup:%p
<<<< AVContentKeySession >>>> %s: %p created reportGroup:%p with figCKS: %p
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (groupID=%{private}@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (inResult = %d)
AVOutputContext
AVOutputContextLocalOutputDeviceGroupImpl
AVOutputDeviceGroupImpl
NSObject
AVPlayerLooperInternal
AVPlayerLooper
AVResult
AVAssetReaderOutputMetadataAdaptorInternal
AVAssetReaderOutputMetadataAdaptor
AVAssetReaderOutputAdaptor
AVVideoPerformanceMetricsInternal
AVVideoPerformanceMetrics
AVOutputDeviceDiscoverySessionInternal
AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal
AVOutputDeviceDiscoverySession
AVEmptyOutputDeviceDiscoverySessionAvailableOutputDevices
AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices
AVAPSyncControllerOutputDeviceImpl
AVOutputDeviceImpl
AVPlayerLayerIntermediateLayer
AVPlayerLayerInternal
AVPlayerLayer
AVKeyPathDependencyHost
AVWeakObservable
CMTimeAsValue
CMTimeRangeAsValue
CMTimeMappingAsValue
NSValueCMTimeExtensions
AVTimeCoding
AVTimebaseObserver
AVPeriodicTimebaseObserver
AVOccasionalTimebaseObserver
AVOnceTimebaseObserver
AVPlayerItemMetadataCollectorMetadataItemFiltering
AVPlayerItemMetadataCollectorInternal
AVPlayerItemMetadataCollector
AVPlayerItemMediaDataCollector_Internal
AVPlayerItemInterstitialEventCollector
AVPlayerInterstitialEvent
NSCopying
AVPlayerInterstitialEventMonitor
AVPlayerInterstitialEventController
AVSampleBufferVideoOutputInternal
AVSampleBufferVideoOutput
AVAssetDownloadStorageManager
AVAssetDownloadStorageManagementPolicy
NSMutableCopying
AVMutableAssetDownloadStorageManagementPolicy
AVAssetDownloadStorageManagementPolicyInternal
AVOutputDeviceGroup
AVOutputDeviceGroupMembershipChangeResult
AVMetadataItemInternal
AVMetadataItem_Local
AVMetadataItemTypeCoercion
AVMetadataItem
AVAsynchronousKeyValueLoading
AVMutableMetadataItem
AVLazyValueLoadingMetadataItemInternal
AVLazyValueLoadingMetadataItem
AVMetadataItemValueRequestInternal
AVMetadataItemValueRequest
AVMetadataItemLazyValueLoading
AVChapterMetadataItemInternal
AVChapterMetadataItem
AVMetadataItemFilterForSharing
AVMetadataItemFilterInternal
AVMetadataItemFilter
AVAssetProxy
AVAssetProxyInternal
AVAssetInternal
AVAsset
AVAssetChapterInspection
AVAsset_ExportAndSerializationSupport
AVAssetMovieAtomInfo_Private
AVAssetFragmentInternal
AVAssetFragment
AVFragmentedAssetsArray
AVAssetFragmentSequenceInfo_Private
AVURLAssetInternal
AVURLAsset
AVAssetCache
AVURLAssetCache_Private
AVAssetVariantInspection
AVURLAssetURLHandlingInternal
AVURLAssetURLHandling
AVAssetClientURLRequestHelper
AVURLAssetInstanceIdentiferMapping
AVDataAsset
AVAssetTrackEnumerator
AVURLAssetContentKeyEligibility
AVContentKeyRecipient
AVURLAssetContentKeyEligibilityInternal
AVContentKeyRecipientInternal
AVURLAssetCustomURLHandling
AVURLAssetItemProviderData
NSSecureCoding
NSCoding
NSItemProvider
AVURLAssetLoggingIdentifier
AVAssetSerializableCreationOptions
AVAssetSerializableCreationOptionsSupport
AVAudioMixEffectParameters
AVAudioMixSweepFilterEffectParameters
AVAudioMixSweepFilterEffectParametersInternal
AVAssetImageGeneratorInternal
AVAssetImageGenerator
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl
AVOutputDeviceCommunicationChannelImpl
AVAssetTrackInternal
AVAssetTrack
AVAssetTrack_ExportAndSerializationSupport
AVPlayerSetRateOptions
AVPlayerInternal
AVPlayer
AVPlayerVideoDisplaySleepPrevention
AVPlayerAutomaticBackgroundPrevention
AVPlayerProtectedContentPrivate
AVPlayer_PIPSupport
AVPlayerAudioPlaybackRateLimits
AVPlayerMultitaskSupport
AVPlayerSupportForMediaPlayer
AVAudioSessionMediaPlayerOnly
AVPlayerPixelBufferPoolSharing
AVPlayerFormatRestrictions
AVPlayerAutomaticMediaSelection
AVPlayerAutomaticMediaSelectionPrivate
AVPlayerAudioDeviceSupport
AVPlayerOutOfBandTextTrackRendering
AVPlayerMultichannelAudioStrategy
AVPlayerCaptionStrategySelection
AVPlayerAudioSessionParticipant
AVAudioSessionParticipant
AVPlayerQueueModificationDescription
AVPlayerVideoDecoderGPUSupport
AVPlayerLoggingIdentifier
AVPlayerAutoPauseOnRouteRemoval
AVPlayerImplicitInterruption
AVPlayerSTSLabel
AVPlayerPIPSupport
FigVideoTargetSupport
AVPlayerInterstitialSupport_Internal
PlaybackCoordination
AVPlayerLegibleFallback
AVPlayerOverlappedPlaybackSupport_Internal
AVPlayerRateState
AVAssetDownloadContentConfiguration
SecureCoding
AVAssetDownloadDefaultPrimaryContentConfiguration
AVAssetDownloadDefaultAuxiliaryContentConfiguration
AVAssetDownloadConfiguration
Internal
AVUXMDisplayManager
AVVideoCompositionRenderHintInternal
AVVideoCompositionRenderHint
AVSampleBufferAudioRendererInternal
AVSampleBufferAudioRenderer
AVMediaDataRequesterConsumer
AVQueuedSampleBufferRenderingInternal
AVQueuedSampleBufferRendering
AVSampleBufferAudioRendererContentKeyEligibility
AVSampleBufferAudioRendererContentKeyEligibilityInternal
Simulation
AVFigSampleBufferAudioRendererFactory
AVAssetWriterInputMetadataAdaptorInternal
AVAssetWriterInputMetadataAdaptor
AVExternalProtectionMonitorInternal
AVExternalProtectionMonitor
AVHUDStringGenerator
AVNetworkPlaybackPerfHUDLayer
AVPlayerItemInternal
AVPlayerItem
AVPlayerItemProtectedContent
AVPlayerItemProtectedContentPrivate
AVPlayerItemLogging
AVPlayerConnection
AVPlayerItemSupportForMediaPlayer
AVPlayerItemOutputs
AVPlayerItemMediaDataCollectors
AVPlayerItemServiceIdentifier_Private
LegibleOutputSupport
MetadataOutputSupport
AVPlayerItemAVKit
AVPlayerItemVideoEnhancement
AVPlayerInterstitialSupport
AVPlayerItemTrackInternal
AVPlayerItemTrack
AVQueuePlayer
AVQueuePlayerInternal
AVPlayerAdvanceWithOverlap
AVSpecifiedLoggingIdentifierInternal
AVSpecifiedLoggingIdentifier
AVLoggingIdentifier
AVLoggingDerivedIdentifier
AVAssetLoggingIdentifierInternal
AVAssetLoggingIdentifier
AVPlayerLoggingIdentifierInternal
AVCompositionInternal
AVComposition
AVMutableCompositionInternal
AVMutableComposition
AVCompositionFormatReaderInspector
AVComposition_NSCoding
AVPlayerItemMetadataOutputInternal
AVPlayerItemMetadataOutput
AVPlayerItemMetadataOutput_Internal
AVCompositionTrackFormatDescriptionReplacement
AVCompositionTrackInternal
AVCompositionTrack
AVMutableCompositionTrackInternal
AVMutableCompositionTrack
AVNotificationSubscription
AVCancellable
AVPublisher
AVPropertyValuePublisher
AVMapPublisher
AVSwitchToLatestPublisher
AVSinkSubscriber
AVTimeFormatterInternal
AVTimeFormatter
AVCompositionTrackSegmentInternal
AVCompositionTrackSegment
AVMovieTrackInternal
AVMovieTrack
AVMutableMovieTrackInternal
AVMutableMovieTrack
AVMutableMovieTrackFormatDescriptions
AVMutableMovieTrack_FormatDescriptions
AVMutableMovieTrackTrackLevelEditing
AVMutableMovieTrackSampleLevelEditing
AVMutableMovieTrack_SampleLevelEditingPrivate
AVMutableMovieTrackMetadataEditing
AVMutableMovieTrackTrackAssociations
AVAssetReaderInternal
AVAssetReader
AVAssetReaderOutputInternal
AVAssetReaderOutput
AVAssetReaderTrackOutputInternal
AVDecodedVideoSettingsForFig
AVAssetReaderTrackOutput
AVAssetReaderAudioMixOutputInternal
AVAssetReaderAudioMixOutput
AVAssetReaderVideoCompositionOutputInternal
AVAssetReaderVideoCompositionOutput
AVAssetReaderSampleReferenceOutputInternal
AVAssetReaderSampleReferenceOutput
AVAssetWriterConfigurationState
AVAssetWriterInternal
AVAssetWriter
AVAssetWriterUnknownHelper
AVAssetWriterFigAssetWriterNotificationHandler
AVFragmentedMediaDataReportInternal
AVFragmentedMediaDataReport
AVAssetWriterWritingHelper
AVAssetWriterFigAssetWriterNotificationHandlerDelegate
AVWorkaroundNSBlockOperation
AVAssetWriterFinishWritingHelper
AVFigAssetWriterFinishWritingAsyncOperation
AVAssetWriterTerminalHelper
AVAssetWriterFailedTerminalHelper
AVAssetWriterClientInitiatedTerminalHelper
AVAssetWriterHelper
AVAssetWriterInputGroupInternal
AVAssetWriterInputGroup
AVAssetWriterInputSelectionOption
AVCoordinatedPlaybackSuspension
AVCoordinatedPlaybackParticipant
AVPlaybackCoordinator
AVPlayerPlaybackCoordinator
AVOutputDeviceAuthorizationSessionInternal
AVOutputDeviceAuthorizationSession
AVOutputDeviceAuthorizationRequestInternal
AVOutputDeviceAuthorizationRequest
AVAssetWriterInputConfigurationState
AVAssetWriterInputInternal
AVAssetWriterInput
AVAssetWriterInputUnknownHelper
AVAssetWriterInputWritingHelper
AVAssetWriterInputMediaDataRequesterDelegate
AVAssetWriterInputInterPassAnalysisHelper
AVAssetWriterInputNoMorePassesHelper
AVAssetWriterInputTerminalHelper
AVAssetWriterInputHelper
AVAssetWriterInputPixelBufferAdaptorInternal
AVAssetWriterInputPixelBufferAdaptor
AVFigAssetWriterTrack
AVFigAssetWriterAudioTrack
AVFigAssetWriterVideoTrack
AVFigAssetWriterGenericTrack
AVAssetWriterInputMediaDataRequester
AVAssetWriterInputPassDescriptionResponder
AVAssetWriterInputFigAssetWriterEndPassOperation
AVAssetWriterInputPassDescriptionInternal
AVAssetWriterInputPassDescription
AVVideoCompositionInstructionInternal
AVVideoCompositionInstruction
AVMutableVideoCompositionInstruction
AVVideoCompositionLayerInstructionInternal
AVVideoCompositionLayerInstruction
AVMutableVideoCompositionLayerInstruction
AVVideoCompositionInternal
AVVideoCompositing
AVVideoComposition
AVVideoCompositionColorimetery
AVVideoCompositionColorimeteryUtilities
AVVideoCompositionFiltering
AVMutableVideoComposition
AVVideoCompositionCoreAnimationTool
AVVideoCompositionCoreAnimationToolInternal
AVAssetVideoCompositionUtility
AVAssetExportSessionInternal
AVAssetExportSession
AVStreamDataParserInternal
AVStreamDataParser
AVStreamDataParserTypeSupport
AVStreamDataParser_FigManifold
AVStreamDataParser_ContentKeySessionDelegate
AVContentKeySessionDelegate
AVStreamDataParser_ContentKeyRequestSupport
AVStreamDataParser_Internal
AVStreamDataParserContentKeyEligibility
AVMediaDataRequester
AVAPSyncOutputDeviceCommunicationChannelManager
AVOutputDeviceCommunicationChannelManager
AVAPSyncOutputDeviceCommunicationChannelImpl
AVSynchronizedLayerInternal
AVSynchronizedLayer
AVOutputDeviceInternal
AVOutputDevice
AVOutputDeviceFrecencyManager
AVOutputDeviceFrecentsReader
AVOutputDeviceFrecentsReading
AVOutputDeviceFrecentsWriter
AVOutputDeviceFrecentsWriting
AVOutputDeviceLegacyFrecentsReader
AVOutputDeviceLegacyFrecentsWriter
AVOutputDeviceAuthorizedPeerInternal
AVOutputDeviceAuthorizedPeer
AVPairedDeviceInternal
AVPairedDevice
AVLocalOutputDeviceImpl
AVOutputDeviceCommunicationChannel
AVClusterComponentOutputDeviceDescription
AVOutputDeviceDescription
AVSampleBufferVideoRenderer
AVFigVideoQueueFactory
VideoPerformanceMetrics
AVSampleBufferVideoRendererProtectedContent
AVSampleBufferVideoRendererImageProtection
AVSampleBufferVideoRendererVideoDisplaySleepPrevention
PowerOptimization
AVSampleBufferVideoRendererOutputs
AVMetadataEnumerator
AVFigEndpointOutputDeviceImpl
AVOutputDeviceFigEndpointImplFetching
AVFigEndpointSecondDisplayModeToken
AVAssetCustomURLRequest
AVAssetCustomURLBridgeForNSURLSession
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
AVNSURLProtocolRequest
AVAssetCustomURLBridgeForNSURLProtocol
AVAssetCustomURLAuthentication
AVAssetTrackSegment
AVAudioMix
AVMutableAudioMix
AVAudioMixInternal
AVAudioMixInputParameters
AVAudioMixInputParametersInternal
AVMutableAudioMixInputParameters
AVAudioMixCrossFadeUtility
AVOutputContextInternal
AVOutputContextCommunicationChannelInternal
AVOutputContextCommunicationChannel
AVOutputContextDestinationChangeInternal
AVOutputContextDestinationChange
AVOutputContextManagerInternal
AVOutputContextManager
AVAssetPlaybackAssistant
AVRunLoopConditionRunLoopState
AVRunLoopCondition
AVAssetInspector
AVFormatReaderInspector
AVPlaybackItemInspector
AVStreamingResourceInspector
AVFigAssetInspector
AVScheduledAudioParametersInternal
AVScheduledAudioParameters
AVScheduledAudioParameters_Internal
AVMutableScheduledAudioParameters
AVOperation
ArrayOfOperations
AVBlockOperation
AVGlobalOperationQueue
AVOperationQueueWithFundamentalDependency
AVDepartureAnnouncingObjectMonitor
AVWaitForNotificationOrDeallocationOperation
AVObjectMonitoring
AVWeakReferencingDelegateStorage
AVDelegateStorage
AVAssetInspectorLoader
AVAssetSynchronousInspectorLoader
AVAssetMakeReadyForInspectionLoader
AVPlaybackItemInspectorLoader
AVFigAssetInspectorLoader
AVUnreachableAssetInspectorLoader
AVRoutingSessionManager
AVRoutingSession
AVRoutingSessionDestination
AVAssetTrackInspector
AVTrackReaderInspector
AVFigAssetTrackInspector
AVCompositionTrackReaderInspector
AVPlaybackItemTrackInspector
AVWeakReference
AVRetainReleaseWeakReference
AVSampleBufferGeneratorInternal
AVSampleBufferGenerator
AVSampleBufferRequestInternal
AVSampleBufferRequest
AVSampleBufferGeneratorBatch
AVAssetSegmentReportSampleInformation
AVAssetSegmentTrackReport
AVAssetSegmentReport
AVCallbackContextRegistry
AVStreamDataAssetTrackInspector
AVStreamDataAssetInspector
AVStreamDataInspectionOnlyAsset
AVStreamDataAsset
AVStreamDataAsset_StreamDataParsing
AVPlayerItemMediaDataCollectorInternal
AVPlayerItemMediaDataCollector
AVCMNotificationDispatcher
AVCMNotificationDispatcherListenerKey
AVSynchronousBlockScheduler
AVBlockScheduler
AVSerializedMostlySynchronousReentrantBlockScheduler
AVEventWaiter
AVDispatchOnce
AVAssetTrackGroupInternal
AVAssetTrackGroup
AVMetadataGroup
AVMetadataGroupSerializationSupport
AVMetadataGroupIdentification
AVTimedMetadataGroupInternal
AVTimedMetadataGroup
AVTimedMetadataGroupSerializationSupport
AVMutableTimedMetadataGroup
AVDateRangeMetadataGroupInternal
AVDateRangeMetadataGroup
AVDateRangeMetadataGroup_Private
AVDateRangeMetadataGroup_Internal
AVDateRangeMetadataGroup_Local
AVMutableDateRangeMetadataGroup
AVManagedAssetCacheInternal
AVManagedAssetCache
AVAssetDownloadCacheInternal
AVAssetDownloadCache
AVExecutionEnvironment
NSValueCMVideoDimensionsExtensions
AVDelegatingPlaybackCoordinatorPlaybackControlCommand
AVDelegatingPlaybackCoordinatorPlayCommand
AVDelegatingPlaybackCoordinatorBufferingCommand
AVDelegatingPlaybackCoordinatorPauseCommand
AVDelegatingPlaybackCoordinatorSeekCommand
AVDelegatingPlaybackCoordinator
AVPlayerItemAccessLogInternal
AVPlayerItemAccessLog
AVPlayerItemAccessLogEventInternal
AVPlayerItemAccessLogEvent
AVPlayerItemAccessLogEventServiceIdentifier_Private
AVFragmentedMovie
AVFragmentMinding
AVFragmentedMovieMinder
AVFragmentedMovieTrackInternal
AVFragmentedMovieTrack
AVPlayerItemErrorLogInternal
AVPlayerItemErrorLog
AVPlayerItemErrorLogEventInternal
AVPlayerItemErrorLogEvent
AVExternalPlaybackMonitor
AVAudioSessionMediaPlayerOnlyInternal
AVMediaSelectionGroupInternal
AVMediaSelectionGroup
AVAssetMediaSelectionGroup
AVMediaSelectionOptionInternal
AVMediaSelectionOption
AVMediaSelectionTrackOption
AVMediaSelectionKeyValueOption
AVMediaSelectionNilOption
AVFigObjectInspector
AVOutputSettings
AVFormatSpecification
AVMediaFileType
AVMediaFileOutputSettingsValidator
AVOutputSettingsValidation
AVWAVEOutputSettingsValidator
AVAIFFOutputSettingsValidator
AVAIFCOutputSettingsValidator
AVISOOutputSettingsValidator
AVGenericMediaFileOutputSettingsValidator
AVAudioOutputSettings
AVAVAudioSettingsAudioOutputSettings
AVReencodedAudioSettingsForFig
AVDecodedAudioSettingsForFig
AVVideoOutputSettings
AVPixelBufferAttributesVideoOutputSettings
AVAVVideoSettingsVideoOutputSettings
AVReencodedVideoSettingsForFig
AVAudioSettingsValueConstrainer
AVFloat64Range
AVAggregateAssetDownloadTask
AVAssetDownloadSessionInternal
AVAssetDownloadSession
AVAssetDownloadSession_DelegateSupport
AVAssetDownloadSession_StreamingAssetOrchestratorSupport
AVAssetDownloadSession_Local
AVSampleCursorInternal
AVSampleCursor
AVPlayerItemOutputInternal
AVPlayerItemOutput
AVPlayerItemVideoOutputInternal
AVPlayerItemVideoOutput
AVFragmentedAssetInternal
AVFragmentedAsset
AVFragmentedAssetMinderInternal
AVFragmentedAssetMinder
AVFragmentedAssetTrackInternal
AVFragmentedAssetTrack
AVPixelBufferAttributeMediator
AVSampleBufferDisplayLayerContentLayer
AVSampleBufferDisplayLayer
AVSampleBufferDisplayLayerContentKeyEligibility
AVSampleBufferDisplayLayerContentKeyEligibilityInternal
AVSampleBufferDisplayLayerQueueManagement
ProtectedContent
AVSampleBufferDisplayLayerImageProtection
AVSampleBufferDisplayLayerVideoDisplaySleepPrevention
AVSampleBufferDisplayLayerPowerOptimization
AVSampleBufferDisplayLayerOutput
AVAssetResourceLoaderRemoteHandlerContext
AVURLAuthenticationChallenge
AVAssetResourceLoaderRequest
AVAssetResourceLoaderInternal
AVAssetResourceLoader
AVAssetResourceLoaderContentKeySupport
AVAssetResourceLoaderURLAuthenticationChallengeSender
NSURLAuthenticationChallengeSender
AVAssetResourceLoaderContentInformationCache
AVAssetResourceLoaderURLSessionSupport
AVAssetResourceLoaderRemoteHandlerSupport
AVAssetResourceLoadingContentInformationRequestInternal
AVAssetResourceLoadingContentInformationRequest
AVAssetResourceLoadingDataRequestInternal
AVAssetResourceLoadingDataRequest
AVAssetResourceLoadingRequestInternal
AVAssetResourceLoadingRequest
AVAssetResourceLoadingRequestorInternal
AVAssetResourceRenewalRequest
AVAssetResourceLoadingRequestor
AVSampleBufferRenderSynchronizerInternal
AVSampleBufferRenderSynchronizer
AVSampleBufferRenderSynchronizerRendererManagement
AVSampleBufferRenderSynchronizerRendererRestrictions
AVSampleBufferRenderSynchronizerTimeObservation
AVLocalFigSampleBufferRenderSynchronizerFactory
AVFigSampleBufferRenderSynchronizerFactory
AVAssetVariant
AVAssetVariantVideoAttributes
AVAssetVariantAudioAttributes
AVAssetVariantAudioRenditionSpecificAttributes
AVAssetVariantQualifier
EnvironmentalConditions
AVAssetVariantChannelCountPredicate
AVAssetVariantPresentationWidthPredicate
AVAssetVariantPresentationHeightPredicate
AVTextStyleRuleInternal
AVTextStyleRule
AVPlayerMediaSelectionCriteria
FigDictionaryRepresentation
AVAsynchronousCIImageFilteringRequestInternal
AVAsynchronousCIImageFilteringRequest
AVCoreImageFilterVideoCompositionInstruction
AVCoreImageFilterCustomVideoCompositor
AVPlayerItemLegibleOutputRealDependencyFactory
AVPlayerItemLegibleOutputDependencyFactory
AVPlayerItemLegibleOutputInternal
AVPlayerItemLegibleOutput
AVOutputSettingsAssistantInternal
AVOutputSettingsAssistant
Dependencies
AVExportSettingsOutputSettingsAssistantBaseSettings
AVOutputSettingsAssistantBaseSettingsProvider
AVExportSettingsOutputSettingsAssistantVideoSettingsAdjuster
AVOutputSettingsAssistantVideoSettingsAdjuster
AVIOKitOutputSettingsAssistantVideoEncoderCapabilities
AVOutputSettingsAssistantVideoEncoderCapabilities
AVMediaSelectionInternal
AVMediaSelection_Local
AVMediaSelection
AVMutableMediaSelection
AVExternalDeviceHIDInternal
AVExternalDeviceHID
AVExternalDeviceIconInternal
AVExternalDeviceIcon
AVExternalDeviceInternal
AVExternalDeviceScreenBorrowToken
AVExternalDeviceTurnByTurnToken
AVExternalDevice
AVFigEndpointOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices_FigEndpointImpl
AVPlayerCaptionLayer
AVVideoCompositingParameterValidationDelegate
AVCustomVideoCompositorSession
AVCustomVideoCompositorSession_FigCallbackHandling
AVDisplayCriteriaInternal
AVDisplayCriteria
_AVDisplayCriteriaPrivateMethods
AVKVODispatcher
AVObservationBlockFactory
AVWeakObservationBlockFactory
AVClientBlockKVONotifier
AVKVONotifier
AVCallbackCancellation
AVKVOIntrospection
AVWeaklyObservedObjectClientBlockKVONotifier
AVWeakObservableCallbackCancellationHelper
LegacyCallbackMethod
AVKeyPathDependencyManager
AVKeyPathDependencyRegistration
AVKeyPathDependency
AVTwoPartKeyPath
AVKeyPath
AVKeyPathFlattener
AVKeyPathFlattenerKVOIntrospectionShim
AVAsynchronousVideoCompositionRequestInternal
AVAsynchronousVideoCompositionRequest
AVRouteDetectorInternal
AVRouteDetector
AVVideoCompositionRenderContextInternal
AVVideoCompositionRenderContext
AVMediaDataStorageInternal
AVMediaDataStorage
AVMovieInternal
AVMovie
AVMovieMovieHeaderSupport
AVMutableMovieInternal
AVMutableMovie
AVMutableMovieMovieLevelEditing
AVMutableMovieTrackLevelEditing
AVMutableMovieMetadataEditing
AVPlayerItemSampleBufferOutputConfiguration
AVPlayerItemSampleBufferOutput
AVPlayerItemSampleBufferOutput_Internal
AVContentKeyRequestInternal
AVContentKeyRequest
AVContentKeyRequest_ExternalProtectionStateSupport
AVContentKeyReportInternal
AVPersistableContentKeyRequest
AVContentKeyResponseFairPlayStreaming
AVContentKeyResponseClearKey
AVContentKeyResponseAuthorizationToken
AVContentKeyResponseInternal
AVContentKeyPSSHRequestTracker
AVContentKeyRequestParams
AVContentKeyResponse
AVContentKeySessionInternal
AVContentKeySession
AVContentKeySessionPendingExpiredSessionReports
AVContentKeySessionPrivateUtilities
AVContentKeyRequestSupport
AVContentKeySession_Internal
AVContentKeyGroup_Support
FigContentKeyBoss
AVContentKeyReportGroup
AVContentKeyReportGroup_Internal
AVContentKeyReportGroupPrivateUtilities
AVContentKeySpecifier
Private
AVContentKey
APSyncController
AVAPSyncControllerRemoteOutputDeviceGroupImpl
sharedAudioPresentationOutputContext
initWithOutputContext:
initWithOutputDeviceGroupImpl:
sharedAudioPresentationOutputGroup
init
dealloc
outputDevices
userInfo
objectForKey:
parentOutputDeviceGroup
outputDeviceGroupImpl:didChangeOutputDevicesWithInitiator:
addOutputDevice:options:completionHandler:
dictionary
objectForKeyedSubscript:
setObject:forKey:
removeOutputDevice:options:completionHandler:
volume
outputDeviceGroupImplDidChangeVolume:
setVolume:
canSetVolume
outputDeviceGroupImplDidChangeVolumeControlType:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
addOutputDevice:withOptions:completionHandler:
removeOutputDevice:withOptions:completionhandler:
volumeControlType
setParentOutputDeviceGroup:
receivesLongFormAudioFromLocalDevice
groupLeader
T@"AVOutputDeviceGroup",W
TB,R
T@"NSArray",R
T@"AVOutputDevice",R
Tf,R
_contextOutputDevicesDidChange:
_contextVolumeDidChange
_contextCanSetVolumeDidChange
.cxx_destruct
_outputContext
_parentOutputDeviceGroup
T@"AVOutputDeviceGroup",W,V_parentOutputDeviceGroup
defaultCenter
addObserverForName:object:queue:usingBlock:
status
cancellationReason
isEqualToString:
initWithStatus:cancellationReason:
loopingPlayer
loopingItem
loopingItemCopies
loopRange
loopCount
ivarAccessQueue
playerOriginalActionAtItemEnd
forwardPlaybackStartTime
lastEnqueuedLoopingItem
waitingForLastLoopingCopyToFinish
error
playerCurrentItemKVOInvoker
loopingItemStatusKVOInvokers
weakReference
listeningForItemFailedToPlayToEndTime
initWithPlayer:templateItem:timeRange:
stringWithFormat:
exceptionWithName:reason:userInfo:
initWithCapacity:
initWithReferencedObject:
asset
dispatchQueue
statusOfValueForKey:error:
_setupLoopingReturningError:
_changeStatusToFailedWithError:
loadValuesAsynchronouslyForKeys:completionHandler:
notificationDispatcherForCMNotificationCenter:
countByEnumeratingWithState:objects:count:
removeListenerWithWeakReference:callback:name:object:
removeItem:
setActionAtItemEnd:
willChangeValueForKey:
copy
didChangeValueForKey:
_turnOffLooping
arrayWithArray:
setReversePlaybackEndTime:
setForwardPlaybackEndTime:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
duration
dictionaryWithObjects:forKeys:count:
_calculateNumberOfCopiesNeeded
arrayWithCapacity:
copyWithZone:
addObject:
addObjectsFromArray:
rate
setRate:
actionAtItemEnd
currentItem
_configureLoopingItem:
insertItem:afterItem:
sharedKVODispatcher
startObservingObject:weakObserver:forKeyPath:options:context:
addListenerWithWeakReference:callback:name:object:flags:
_isWaitingForLastCopyToFinishSet
cancelCallbacks
null
indexOfObjectIdenticalTo:
_cleanupAfterPlayingLastLoopingCopy
initialize
playerLooperWithPlayer:templateItem:timeRange:
playerLooperWithPlayer:templateItem:
disableLooping
loopingPlayerItems
observeValueForKeyPath:ofObject:change:context:
_looper
Tq,R
T@"NSError",R
T@"NSArray",R,N
getStatus:error:
markAsCompleted
markAsFailedWithError:
isFailed
_ivarAccessLock
_status
_error
failed
TB,R,GisFailed
trackOutput
initWithAssetReaderTrackOutput:
mediaType
_isAttachedToAdaptor
_setAttachedAdaptor:
track
trackID
_copyNextSampleBufferForAdaptor
initWithSampleBuffer:
assetReaderOutputMetadataAdaptorWithAssetReaderTrackOutput:
addExtractionForOutput:figAssetReader:options:withOutputExtactionID:
assetReaderTrackOutput
nextTimedMetadataGroup
_internal
T@"AVAssetReaderTrackOutput",R,N
_metricsDictionary
initWithDictionary:
unsignedLongValue
doubleValue
totalNumberOfVideoFrames
numberOfDroppedVideoFrames
numberOfCorruptedVideoFrames
numberOfDisplayCompositedVideoFrames
numberOfNonDisplayCompositedVideoFrames
totalFrameDelay
_performanceMetricsInternal
TQ,R,N
Td,R,N
impl
discoveryMode
_recentlyUsedDevices
_otherDevices
initWithDeviceFeatures:
outputDeviceDiscoverySessionFactory
outputDeviceDiscoverySessionOfClass:withDeviceFeatures:
setParentOutputDeviceDiscoverySession:
targetAudioSession
setTargetAudioSession:
setDiscoveryMode:forClientIdentifiers:
outputDeviceDiscoverySessionDidChangeDiscoveryMode:forClientIdentifiers:
array
availableOutputDevicesObject
recentlyUsedDevices
otherDevices
name
localizedStandardCompare:
sortUsingComparator:
availableOutputDeviceGroups
devicePresenceDetected
notificationWithName:object:userInfo:
postNotification:
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDevices:
initWithOutputDeviceDiscoverySessionImpl:
setDiscoveryMode:
availableOutputDevices
outputDeviceDiscoverySessionImpl:didExpireWithReplacement:
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDeviceGroups:
_outputDeviceDiscoverySession
Tq,N
T@"AVAudioSession",&,N
T@"AVOutputDeviceDiscoverySessionAvailableOutputDevices",R,N
TB,R,N
allDevices
initWithOutputDeviceDiscoverySessionAvailableOutputDevicesImpl:
isEqualToArray:
frecencyScore
count
sharedLocalDevice
_loadOutputDevices
_availableOutputDevices
secondaryImpl
deviceType
boolValue
deviceSubType
manufacturer
modelID
serialNumber
firmwareVersion
identifyingMACAddress
objectAtIndex:
intValue
initWithDeviceID:deviceName:deviceSubType:isClusterLeader:modelID:
producesLowFidelityAudio
isAppleAccessory
isEligibleToBePredictedOutputDevice
batteryLevel
caseBatteryLevel
leftBatteryLevel
rightBatteryLevel
supportsDataOverACLProtocol
isInEar
airPlayProperties
isInUseByPairedDevice
connectedPairedDevices
deviceFeatures
requiresAuthorization
automaticallyAllowsConnectionsFromPeersInHomeGroup
onlyAllowsConnectionsFromPeersInHomeGroup
canAccessRemoteAssets
canAccessAppleMusic
canAccessiCloudMusicLibrary
supportsBufferedAirPlay
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
supportsBluetoothSharing
availableBluetoothListeningModes
currentBluetoothListeningMode
setCurrentBluetoothListeningMode:error:
setSecondDisplayEnabled:
setSecondDisplayMode:completionHandler:
HAPConformance
supportsHeadTrackedSpatialAudio
allowsHeadTrackedSpatialAudio
setAllowsHeadTrackedSpatialAudio:error:
headTrackedSpatialAudioMode
setHeadTrackedSpatialAudioMode:error:
isHeadTrackedSpatialAudioActive
floatValue
implEventListener
outputDeviceImplDidChangeVolume:
outputDeviceImplDidChangeVolumeControlType:
outputDeviceImplDidChangeCanChangeVolume:
canBeGrouped
outputDeviceImplDidChangeProposedGroupID:
groupID
groupContainsGroupLeader
logicalDeviceID
isLogicalDeviceLeader
canCommunicateWithAllLogicalDeviceMembers
canRelayCommunicationChannel
supportsFitnessDataDestination
configureUsingBlock:options:completionHandler:
localDeviceWithCompletion:
registerLocalDeviceDidChangeListener:
increaseVolumeByCount:
decreaseVolumeByCount:
setImplEventListener:
clusterType
configuredClusterSize
clusteredDeviceDescriptions
isClusterLeader
clusterID
proposedGroupID
canBeGroupLeader
isGroupLeader
participatesInGroupPlayback
T@"<AVOutputDeviceImplSupport>",W
T@"NSString",R,C,N
Tq,R,N
T@"NSString",R,N
T@"NSData",R,C,N
appleAccessory
TB,R,N,GisAppleAccessory
eligibleToBePredictedOutputDevice
TB,R,N,GisEligibleToBePredictedOutputDevice
T@"NSNumber",R,N
T@"NSDictionary",R,N
inUseByPairedDevice
TB,R,N,GisInUseByPairedDevice
T@"NSArray",R,C,N
headTrackedSpatialAudioActive
TB,R,N,GisHeadTrackedSpatialAudioActive
initWithSyncController:secondaryImpl:
_volumeDidChangeForEndpointWithID:
_volumeControlSupportedDidChangeForEndpointWithID:
_volumeControlTypeDidChangeForEndpointWithID:
_proposedGroupIDDidChangeForEndpointWithID:
_syncController
_secondaryImpl
_implEventListener
T@"<AVOutputDeviceImpl>",R,V_secondaryImpl
T@"<AVOutputDeviceImplSupport>",W,V_implEventListener
localDeviceDidChange
hudLayer
serialQueue
isPresentationLayer
isReadyForDisplayMutex
configurationQueue
dependencyManager
playerItemHasEnqueuedVideoFrameListener
windowSceneDidEnterBackgroundListener
windowSceneWillEnterForegroundListener
player
videoGravity
pixelBufferAttributes
lanczosDownscalingEnabled
lanczosDownscalingFactor
maskLayer
videoLayer
subtitleLayer
closedCaptionLayer
interstitialLayer
isLegibleDisplayEnabled
isForScrubbingOnly
associatedRemoteModeLayer
willManageSublayersAsSwappedLayers
activeMode
isPartOfForegroundScene
showInterstitialInstead
isReadyForDisplay
playerBeingObserved
latestAppliedPresentationSize
preventsChangesToSublayerHierarchy
clientLayers
isPIPModeEnabled
placeholderContentLayerDuringPIPMode
isConnectedToSecondScreen
legibleContentInsets
honorContentScale
screenScale
lastWindowSceneEvent
isVisible
playerCurrentItemSink
currentItemPresentationSizeSink
currentItemTracksSink
currentItemNonForcedSubtitlesEnabledSink
playerIsDisplayingClosedCaptionsSink
setPlayer:
setEdgeAntialiasingMask:
setMasksToBounds:
addSublayer:
setVideoGravity:
makeClosedCaptionLayer
setHidden:
hudEnabled
setPlayerLayer:
startDispatchTimer
currentItemChanged
currentItemTracksChanged
readHudSettingsAndCallCompletionHandler:
setSubtitleGravityNonObscuring:
addObserver:forKeyPath:options:context:
hasEnqueuedVideoFrameChanged:
_windowSceneDidEnterBackground:
_windowSceneWillEnterForeground:
_currentWindowSceneIsForegroundDefault
initWithDependencyHost:
dependencyHostIsFullyInitialized
initWithLayer:
_getMaskLayer:videoLayer:subtitleLayer:closedCaptionLayer:interstitialLayer:
bounds
_playerCurrentItemPresentationSize
begin
activateBackground:
setDisableActions:
setFrame:
setVideosize:
setVideoRelativeToViewport:
setViewport:
setShouldResizeVideoLayer:
setBounds:
setNeedsLayout
setPosition:
updateBounds:
setSublayerTransform:
isLanczosFilterDownscalingEnabled
_videoLayer
sublayers
firstObject
setMinificationFilter:
commit
_updateClosedCaptionLayerBounds:videoRelativeToViewport:captionsAvoidanceMargins:
layoutSublayers
_notifyPlayerOfDisplaySize
setContentsScale:
isAdditive
setKeyPath:
setDelegate:
addAnimation:forKey:
sizeValue
valueWithPoint:
rectValue
numberWithDouble:
setFromValue:
setToValue:
valueWithCATransform3D:
_addBoundsAnimationToLayer:usingAnimation:forKey:
_addPositionAnimationToLayer:usingAnimation:forKey:
_maskLayer
_closedCaptionLayer
sublayerTransform
_addSublayerTransformAnimationToLayer:fromTransform:usingAnimation:gravity:presentationSize:forKey:
keyPath
animations
_forBoundsAnimations:applyBlock:
_addAnimationsForPIPPlaceholderLayer:forKey:
_addAnimationsForMaskLayer:forKey:
_addAnimationsForVideoLayer:size:gravity:forKey:
_addAnimationsForClosedCaptionLayer:gravity:forKey:
addAnimations:forKey:
animationForKey:
removeAnimationForKey:
removeAnimationsForKey:
removeAllAnimations
addCallbackToCancel:
_stopObservingPlayer:
removeObserver:
cancelAllCallbacks
_removeLayer:videoLayer:closedCaptionLayer:subtitleLayer:interstitialLayer:
_updateConnectionToSecondScreen
removeObserver:forKeyPath:
context
layer
convertRect:toLayer:
contentsScale
_evaluateDisplaySizeOfAllAttachedLayers
valueForKey:dependsOnValueAtKeyPath:
_cachedPresentationSizeOfCurrentItem
currentItemPublisher
presentationSizePublisher
mapPublisherWithUpstream:transform:
switchToLatestPublisherWithUpstream:
_applyCurrentItemPresentationSizeChangeAndForceUpdate:
initWithPublisher:requestingInitialValue:sink:
_willManageSublayersAsSwappedLayers
_handlePlayerCurrentItemDidChangeForPlayer:
tracksPublisher
nonForcedSubtitleDisplayEnabledPublisher
_handleNonForcedSubtitleDisplayDidChange:player:
closedCaptionsDisplayPublisher
_handleIsDisplayingClosedCaptionsDidChange:player:
cancel
contentsAreFlipped
setGeometryFlipped:
_subtitleLayer
updateNonForcedSubtitleDisplayEnabled:
clear
_updateReadyForDisplayForPlayerCurrentItem
propertyValuePublisherWithObject:key:notificationName:
_setPlayer:forPIP:
_showInterstitialInstead
_setShowInterstitialInstead:
_associatedRemoteModeLayer
_activeMode
_configurePlayerWhenLeavingPIP
_swapSublayersBetweenPlayerLayer:andPlayerLayer:
_removeLayer:
_startObservingPlayer:
notificationWithName:object:
_addLayer:
_configurePlayerWhenEnteringPIP
_updateIsPartOfForegroundScene
layerDidBecomeVisible:
object
_hasEnqueuedVideoFrame
superlayer
disableActions
animation
_pixelBufferAttributesDidChangeForLayer:
removeFromSuperlayer
isOverscanSubtitleSupportEnabled
setOverscanSubtitleSupportEnabled:
_performanceDictionary
_setIsConnectedToSecondScreen:
setWithObjects:
videoRect
setCaptionsAvoidanceMargins:
setForScrubbingOnly:
setToneMapToStandardDynamicRange:
_copyDisplayedPixelBuffer
setPlayerRole:synchronously:
setShouldReduceResourceUsage:
_sublayersForPIP
_setSublayersForPIP:
indexPathWithIndex:
enumerateKeysAndObjectsUsingBlock:
_restoreClientLayers:intoMaskLayer:
_ensureVideoLayersAreAttached
_setSublayersPreventChangesToSublayerHierarchy:
_stashClientLayers
_setPreventsChangesToSublayerHierarchy:
_setWillManageSublayersAsSwappedLayers:
_interstitialLayer
_mergeClientLayersIntoMaskLayer:
_unstashClientLayers
stopRedirectingVideoToLayer:
_enterPIPModeRedirectingVideoToLayer:
_enterSecondScreenModeRedirectingVideoToLayer:
_leavePIPModeForLayer:
_leaveSecondScreenModeForLayer:
_isConnectedToSecondScreen
_associateWithLayer:forMode:
_disassociateWithLayerForMode:
insertSublayer:above:
setPIPModeEnabled:
allKeys
length
indexAtPosition:
insertSublayer:atIndex:
setPreventsChangesToSublayerHierarchy:
_forceLayout
_preventsChangesToSublayerHierarchy
setSublayers:
insertSublayer:below:
replaceSublayer:with:
contextId
_windowWithContextId:
windowScene
activationState
_windowSceneDidEnterBackground
_setIsPartOfForegroundScene:
_windowSceneWillEnterForeground
_currentWindowSceneIsForeground
_isPartOfForegroundScene
_notifyPlayerOfLayerForegroundStateChange
playerLayerWithPlayer:
keyPathsForValuesAffectingVideoRect
declareKeyPathDependenciesWithRegistry:
addCallbackToCancelDuringDeallocation:
_percentCoverageRelativeToRootLayer
_displaySize
playerPublisher
setPixelBufferAttributes:
videoPerformanceMetrics
setLanczosFilterDownscalingEnabled:
lanczosFilterDownscaleFactor
setLanczosFilterDownscaleFactor:
_videoRectForBounds:
setLegibleContentInsets:
setLegibleDisplayEnabled:
copyDisplayedPixelBuffer
startRedirectingVideoToLayer:forMode:
enterPIPModeRedirectingVideoToLayer:
leavePIPMode
setPlaceholderContentLayerDuringPIPMode:
_forceWindowSceneEvent:
_playerLayer
T@"AVPlayer",&,N
T@"NSString",C
readyForDisplay
TB,R,N,GisReadyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T@"NSDictionary",C,N
fromValue
toValue
byValue
setByValue:
values
setValues:
indexOfObject:
indexPathByAddingIndex:
addEntriesFromDictionary:
sortedArrayUsingComparator:
charValue
unsignedCharValue
shortValue
unsignedShortValue
unsignedIntValue
longValue
longLongValue
unsignedLongLongValue
integerValue
unsignedIntegerValue
CMTimeValue
valueWithCMTime:
allowsKeyedCoding
decodeCMTimeForKey:
encodeCMTime:forKey:
supportsSecureCoding
getValue:
objCType
isEqualToValue:
initWithCoder:
encodeWithCoder:
classForCoder
_time
CMTimeRangeValue
valueWithCMTimeRange:
decodeCMTimeRangeForKey:
encodeCMTimeRange:forKey:
_timeRange
CMTimeMappingValue
valueWithCMTimeMapping:
decodeCMTimeMappingForKey:
encodeCMTimeMapping:forKey:
_timeMapping
encodeObject:forKey:
decodeObjectOfClasses:forKey:
initWithObjects:
invalidate
invalidated
_reallyInvalidate
_removeTimebaseFromTimerSource
_stopObservingTimebaseNotifications
_attachTimerSourceToTimebase
_startObservingTimebaseNotifications
_effectiveRateChanged
_weakReference
initWithTimebase:queue:
timebase
_resetNextFireTime
_handleTimeDiscontinuity
_finishInitializationWithTimerEventHandler:
_timerQueue
_timerSource
_timebase
_isObservingTimebase
_lastRate
_currentRate
_invalid
T@"AVWeakReference",R,N,G_weakReference,V_weakReference
T^{OpaqueCMTimebase=},R
_fireBlockForTime:
drain
initWithTimebase:interval:queue:block:
_intervalRequested
_lastIntervalUsed
_lastPeriodicFireTime
_lastNonperiodicFireTime
_lastStopTime
_sequenceNum
_block
_fireBlock
indexOfObjectPassingTest:
_nextFiringTimeAfterTime:
_previousFiringTimeBeforeTime:
initWithTimebase:times:queue:block:
_times
initWithTimebase:fireTime:queue:block:
didFire
_fireTime
_didFire
identifier
containsObject:
metadataItemsFromArray:filteredByIdentifiers:
delegateStorage
identifiers
classifyingLabels
mostRecentlyModifiedMetadataGroupTimestamp
weakReferenceToPlayerItem
initWithIdentifiers:classifyingLabels:
initWithTimeIntervalSinceReferenceDate:
setDelegate:queue:
delegate
delegateQueue
_metadataCollectorInternal
T@"<AVPlayerItemMetadataCollectorPushDelegate>",R,W,N
T@"NSObject<OS_dispatch_queue>",R,N
indexSet
_initWithTaggedRangeMetadataDictionary:items:
classifyingLabel
modificationTimestamp
items
mutableCopy
setItems:
discoveryTimestamp
timeIntervalSinceReferenceDate
addIndex:
_getFilteredMetadataGroups:fromIdentifiers:andClassifyingLabels:modifiedIndexesOut:newIndexesOut:
_isAttachedToPlayerItem
metadataCollector:didCollectDateRangeMetadataGroups:indexesOfNewGroups:indexesOfModifiedGroups:
invokeDelegateCallbackWithBlock:
_attachToPlayerItem:
_detatchFromPlayerItem
_updateTaggedRangeMetadataArray:
initWithCoordinatorGenerator:
_ivarAccessQueue
_obtainCoordinator
_weakReferenceToPlayerItem
initWithPrimaryItem:identifier:time:date:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
initWithPrimaryItemAndFigEvent:templateItems:figEvent:
_absoluteURL
newItemArrayWithCopiedItems:
assetURLsReturningError:
code
initWithPrimaryItem:time:date:
primaryItem
checkMutability
interstitialEventWithPrimaryItem:identifier:time:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
interstitialEventWithPrimaryItem:identifier:date:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
interstitialEventWithPrimaryItem:templateItems:figEvent:
interstitialEventWithPrimaryItem:time:
interstitialEventWithPrimaryItem:date:
setImmutable
setPrimaryItem:
setIdentifier:
time
setTime:
date
setDate:
templateItems
setTemplateItems:
restrictions
setRestrictions:
resumptionOffset
setResumptionOffset:
playoutLimit
setPlayoutLimit:
alignsStartWithPrimarySegmentBoundary
setAlignsStartWithPrimarySegmentBoundary:
alignsResumptionWithPrimarySegmentBoundary
setAlignsResumptionWithPrimarySegmentBoundary:
setCue:
willPlayOnce
setWillPlayOnce:
userDefinedAttributes
setUserDefinedAttributes:
figEvent
_internalTemplateItems
validate:
_primaryItem
_figEvent
_templateItems
T@"AVPlayerItem",R,W,N
T{?=qiIq},R,N
T@"NSDate",R,N
initWithPrimaryPlayer:
_isInterstitialPlayer
interstitialPlayer
retainInterstitialEventCoordinator
_addMonitorListeners:
_removeMonitorListeners
makeCopyOf:immutable:
interstitialEventMonitorWithPrimaryPlayer:
primaryPlayer
events
currentEvent
_primaryPlayer
_interstitialPlayer
_observedCoord
T@"AVPlayer",R,W,N
T@"AVQueuePlayer",R,N
T@"NSArray",R,C
T@"AVPlayerInterstitialEvent",R
interstitialEventControllerWithPrimaryPlayer:
setEvents:
cancelCurrentEventWithResumptionOffset:
_ivarQueue
T@"NSArray",C,D
pixelBufferConformer
stateQueue
lastImageTime
dictionaryWithObjectsAndKeys:
setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:
_copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:
copyPixelBufferForSourceTime:sourceTimeForDisplay:
outputSequenceWasFlushed:
setOutputDelegate:queue:
outputDelegate
hasNewPixelBufferForSourceTime:
copyLastPixelBuffer:
_configureWithVideoQueue:
_resetLastImageTime
_visualContext
_dispatchOutputSequenceWasFlushed
_videoOutputInternal
T@"<AVSampleBufferVideoOutputPullDelegate>",R,W,N
referencedObject
mainBundle
bundleIdentifier
defaultManager
isFileURL
path
fileExistsAtPath:
expirationDate
priority
setExpirationDate:
setPriority:
sharedDownloadStorageManager
setStorageManagementPolicy:forURL:
storageManagementPolicyForURL:
allocWithZone:
_setPolicyDictionary:
_policyDictionary
isEqualToDictionary:
setValue:forKey:
mutableCopyWithZone:
_storageManagementPolicy
T@"NSDate",R,C,N
T@"NSString",C,N
T@"NSDate",C,N
policyDictionary
postNotificationName:object:userInfo:
postNotificationName:object:
removeOutputDevice:withOptions:completionHandler:
_impl
_cancellationReason
T@"NSString",R
reader
itemIndex
keySpace
commonKey
locale
extendedLanguageTag
languageCode
value
startDate
dataType
extras
_extractPropertiesFromDictionary:
_valueFromCFType:
JSONObjectWithData:options:error:
identifierForKey:keySpace:
localeWithLocaleIdentifier:
_updateCommonKey
removeObjectForKey:
_makeValueReady
_makePropertiesReady
_updateIdentifier
_updateLanguageInformationFromLocale:
_updateLanguageInformationFromExtendedLanguageTag:
_keyAsString
stringValue
absoluteString
setLocale:
numberFromString:
dataWithPropertyList:format:options:error:
numberValue
dateValue
dataValue
imageValue
T@"NSData",R,N
localeIdentifier
arrayWithObjects:count:
metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:
canonicalLocaleIdentifierFromString:
unicodeLanguageIdentifier
unicodeLanguageCode
indexesOfObjectsPassingTest:
containsIndex:
enumerateIndexesUsingBlock:
addIndexes:
keySpaceForIdentifier:
keyForIdentifier:
metadataItemsFromArray:withKey:keySpace:
objectsAtIndexes:
whitelist
valueForKey:
_metadataItemWithFigMetadataDictionary:containerURL:securityOptions:
_initWithFigMetadataDictionary:valueLoadingHandler:
_initWithFigMetadataDictionary:
_figMetadataDictionary
intrinsicAttributesOfExtraAttributes:
extraAttributes
_areExtraAttributesOf:comparableToExtraAttributesOf:
dictionaryWithDictionary:
_copyValueAsCFTypeWithFormatDescription:error:
typeWithIdentifier:
conformsToType:
_figMetadataDictionaryWithValue:diviningValueDataType:
_serializationDataType
_conformingDataTypes
pointValue
_createJSONEncodedDataFromValue:error:
isValidJSONObject:
dataWithJSONObject:options:error:
_clientExpectsISOUserDataKeysInQuickTimeUserDataKeySpace
_isoUserDataKeysRequiringKeySpaceConversion
setWithObject:
setKeySpace:
_replaceQuickTimeUserDataKeySpaceWithISOUserDataKeySpaceIfRequired:
_figMetadataFormat
fastestEncoding
dataTypeForValue:
metadataItemsFromArray:withLocale:
metadataItemsFromArray:filteredByIdentifier:
metadataItemsFromArray:withStringValue:
metadataItemsFromArray:filteredByMetadataItemFilter:
_metadataItemWithFigMetadataDictionary:
_figMetadataPropertyFromMetadataItems:
_initWithReader:itemIndex:
_figMetadataSpecificationReturningError:
cancelLoading
_priv
T@"NSLocale",R,C,N
T@"<NSObject><NSCopying>",R,C,N
T@"NSDictionary",R,C,N
setKey:
setExtraAttributes:
metadataItem
keyPathsForValuesAffectingIdentifier
setExtendedLanguageTag:
setDuration:
setStartDate:
setValue:
setDataType:
_mutablePriv
T@"NSLocale",C,N
T{?=qiIq},N
T@"<NSObject><NSCopying>",C,N
valueRequest
valueLoadingHandler
valueStatus
valueLoadingError
loadingCompletionHandlers
readWriteQueue
metadataItemValueRequestWithMetadataItem:
_valueForKeyDependsOnMetadataValue:
_valueStatus
arrayWithObject:
_waitForLoadingOfValueDependentKey:
metadataItemWithPropertiesOfMetadataItem:valueLoadingHandler:
_valueRequestDidFinish
_lazyMetadataItem
weakReferenceToMetadataItem
initWithMetadataItem:
respondWithValue:dataType:
respondWithValue:
respondWithError:
_valueRequest
T@"AVMetadataItem",R,W
figAsset
chapterGroupIndex
chapterIndex
chapterType
chapterDataType
valueErrorCode
completions
_initWithAsset:chapterGroupIndex:chapterIndex:chapterType:extendedLanguageTag:languageCode:chapterDataType:time:duration:
_figAsset
_addFigAssetNotifications
_removeFigAssetNotifications
_ensureValueLoadedSync
initWithObjectsAndKeys:
_setValueStatus:figErrorCode:
removeAllObjects
_takeValueFrom:
_chapterGroupIndex
_chapterIndex
_privChapter
addKeySpace:key:toWhitelistDictionary:
addIdentifier:toWhitelistDictionary:
metadataItemFilterForSharing
_itemFilterInternal
T@"NSDictionary",R
dataWithLength:
mutableBytes
rangeOfString:options:
URLWithString:
URLWithString:relativeToURL:
dictionaryWithObject:forKey:
sharedSession
scheme
statusCode
MIMEType
dataTaskWithURL:completionHandler:
resume
assetProxyWithPropertyList:
_assetInspector
propertyListForProxy
makePropertyListForProxyWithOptions:
T@,R,N
loader
tracks
makeTracksArrayOnce
numberWithShort:
initWithPropertyList:
initWithFigAsset:forAsset:
_formatReader
assetInspector
_classForTrackInspectors
trackCount
_initWithAsset:trackIndex:
runBlockOnce:
makePropertyListForMovieProxyHeader:name:
_playbackItem
_assetInspectorLoader
_assetProxy
loadChapterInfoOnce
chapterGroupInfo
anchorChapterType
availableChapterLanguages
availableCanonicalizedChapterLanguages
availableChapterLocales
loggingIdentifier
URLAssetWithURL:options:
initWithURL:options:
initWithURL:playbackItem:trackIDs:dynamicBehavior:
initWithData:contentType:options:
makeAssetLoggingIdentifier
valueWithNonretainedObject:
_isStreaming
numberWithBool:
valueForUndefinedKey:
loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:
_mindsFragments
_fragmentMindingInterval
_setFragmentMindingInterval:
_setIsAssociatedWithFragmentMinder:
preferredRate
preferredVolume
preferredSoundCheckVolumeNormalization
preferredTransform
maximumVideoResolution
availableVideoDynamicRanges
preferredDisplayCriteria
minimumTimeOffsetFromLive
_ensureAllDependenciesOfKeyAreLoaded:
tracksWithMediaType:
naturalSize
naturalTimeScale
providesPreciseDurationAndTiming
alternateTrackGroups
initWithAsset:trackIDs:
trackGroups
trackIDs
trackWithTrackID:
_firstTrackGroupWithMediaTypes:
_mediaSelectionGroupDictionaries
allObjects
mediaSelectionGroupWithAsset:dictionary:
mediaSelectionGroupForMediaCharacteristic:
_plistHasOptionIdentifier:
mediaSelectionOptionWithPropertyList:
_initWithAsset:
preferredMediaSelection
availableMediaCharacteristicsWithMediaSelectionOptions
options
selectMediaOption:inMediaSelectionGroup:
trackReferences
creationDate
lyrics
commonMetadata
availableMetadataFormats
arrayByAddingObject:
metadataForFormat:
arrayByAddingObjectsFromArray:
_initWithAsset:trackID:
initWithAsset:mediaType:
tracksWithMediaCharacteristics:
tracksWithMediaCharacteristic:
initWithAsset:mediaCharacteristics:
compatibleTrackForCompositionTrack:
hasProtectedContent
isPlayable
isExportable
isReadable
isComposable
isCompatibleWithPhotosTranscodingServiceWithOptions:
isCompatibleWithSavedPhotosAlbum
isCompatibleWithAirPlayVideo
canContainFragments
containsFragments
overallDurationHint
supportsAnalysisReporting
_assetAnalysisMessages
assetWithURL:
assetWithURL:figPlaybackItem:trackIDs:dynamicBehavior:
assetWithData:contentType:options:
_assetCreationOptionsRequiresInProcessOperation:
_assetCreationOptionsPrefersSandboxedOption:
expectsPropertyRevisedNotifications
supportsPlayerItems
_setLoggingIdentifier:
_nameForLogging
_comparisonToken
statusOfValueForKey:
_loadValuesSynchronouslyForKeys:trackKeys:
_mutableComposition
_needsLegacyChangeNotifications
referenceRestrictions
audioAlternatesTrackGroup
subtitleAlternatesTrackGroup
loadMediaSelectionGroupForMediaCharacteristic:completionHandler:
mediaSelectionGroupForPropertyList:mediaSelectionOption:
allMediaSelections
loadMetadataForFormat:completionHandler:
metadata
_ID3Metadata
_tracksWithClass:
_tracksDidChange
loadTrackWithTrackID:completionHandler:
loadTracksWithMediaType:completionHandler:
loadTracksWithMediaCharacteristic:completionHandler:
findCompatibleTrackForCompositionTrack:completionHandler:
_requiresInProcessOperation
_hasResourceLoaderDelegate
_handleURLRequest:
_asset
Tf,R,N
T{CGAffineTransform=dddddd},R,N
T{CGSize=dd},R,N
T@"AVDisplayCriteria",R,N
figChapterGroupInfo
figChapters
initWithLocaleIdentifier:
_loadChapterInfo
timeRange
canonicalLanguageIdentifierFromString:
_chapterDataTypeForMediaSubType:
initWithItems:timeRange:
replaceObjectAtIndex:withObject:
_addChapterMetadataItem:timeRange:toChapters:fromIndex:
_chapterMetadataGroupsWithFigChapterGroups:titleLanguage:containingItemsWithCommonKeys:
_availableCanonicalizedChapterLanguages
_chapterMetadataGroupsWithTitleLanguage:containingItemsWithCommonKeys:
_chapterMetadataGroupsBestMatchingPreferredLanguages:containingItemsWithCommonKeys:
chapterMetadataGroupsBestMatchingPreferredLanguages:
chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:
loadChapterMetadataGroupsBestMatchingPreferredLanguages:completionHandler:
loadChapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:completionHandler:
_chapterTracks
moovAtomSize
_sequenceNumber
initWithSequenceNumber:
fragmentWithSequenceNumber:
sequenceNumber
initWithCount:firstSequenceNumber:
numberWithInteger:
_count
_firstSequenceNumber
_cachedFragments
firstFragmentSequenceNumber
fragmentCount
fragments
URLRequestHelper
customURLBridgeForNSURLProtocol
customURLAuthenticationUsingKeychain
resourceLoader
makeOneResourceLoaderOnly
assetCache
makeOneAssetDownloadCacheOnly
tracksAccessQueue
initializationOptions
hasInstanceIdentifierMapping
requiresSecurityScopeRelease
sessionReference
propertyList:isValidForFormat:
_figFileMIMETypes
unionSet:
_figStreamingMIMETypes
_figStreamingUTIs
typesWithTag:tagClass:conformingToType:
UTTypeIDArrayFromUTTypeArray:
_figFileUTIs
_figFilePathExtensions
allFileTypeIdentifiers
_fileUTTypes
_streamingUTTypes
_UTTypes
_figMIMETypes
audiovisualMIMETypes
_avfValidationPlist
_getFigAssetiTunesStoreContentInfoFromURLAssetiTunesStoreContentInfo:
numberWithInt:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
componentsSeparatedByString:
caseInsensitiveCompare:
enumerateObjectsUsingBlock:
isProgressiveDownloadCacheEnabled
isHTTPLiveStreamingCacheEnabled
properties
UUIDString
startAccessingSecurityScopedResource
initWithAsset:
_classForFigAssetInspectorLoader
initWithFigError:userInfo:
_setAssetInspectorLoader:
_getFigAssetCreationOptionsFromURLAssetInitializationOptions:assetLoggingIdentifier:figAssetCreationFlags:error:
reason
initWithURL:figAssetCreationFlags:figAssetCreationOptions:avAssetInitializationOptions:forAsset:
initWithFigAsset:
_resourceLoaderWithRemoteHandlerContext:
numberWithLongLong:
_errorForFigNotificationPayload:key:
_removeUserInfoObject
stopAccessingSecurityScopedResource
setFigAssetProvider:
_classForAssetTracks
resolvedURL
absoluteURL
httpSessionIdentifier
contentKeySpecifiersEligibleForPreloading
_figHFSFileTypes
audiovisualTypes
isPlayableExtendedMIMEType:
_initializationOptionsClasses
initWithFileURL:offset:length:options:
_ensureAssetDownloadCache
creationOptions
_URLAsset
T@"NSURL",R,C,N
T@"NSUUID",R,N
_managedAssetCache
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
identifyingTagClass
identifyingTag
originalNetworkContentURL
downloadToken
SHA1Digest
cacheKey
downloadDestinationURL
_shouldOptimizeAccessForLinearMoviePlayback
_clientURLLoadingRepresentsAccurateNetworkStatistics
variants
initWithURLRequestHelper:asset:remoteCustomURLHandlerContext:
T@"AVAssetResourceLoader",R,N
URLAsset
setResourceLoader:
figAssetProvider
_weakReferenceToSelf
_weakReferenceToAsset
_figAssetProvider
_weakReferenceToResourceLoader
T@?,C,N,V_figAssetProvider
T@"AVAssetResourceLoader",W,N
Tr^{OpaqueFigAsset=},R,N
initWithKeyOptions:valueOptions:capacity:
_setUserInfoObject:
instanceIdentifierMapTable
userInfoObjectForURLAssetInstanceIdentifier:
setUserInfoObject:forURLAsset:
userInfoObjectForURLAsset:
_getFigAssetCreationOptionsFromDataAssetInitializationOptions:figAssetCreationFlags:
_dataLengthLimit
initWithData:contentType:
_initializationOptions
_loader
_allocateTracksOnceOnly
_tracks
objectEnumerator
setMediaType:
setMediaCharacteristics:
nextObject
hasMediaCharacteristics:
trackEnumeratorWithAsset:
_mediaType
_mediaCharacteristics
_enumerator
mayRequireContentKeysForMediaDataProcessing
contentKeySession:didProvideContentKey:
_contentKeyGroups
_figContentKeySession
createAndInstallCustomURLHandlerForAsset:outHandler:
_setContentKeySessionCustomURLHandler:
isInternal
_attachToContentKeySession:contentKeyBoss:failedSinceAlreadyAttachedToAnotherSession:
contentKeySession
_attachedToExternalContentKeySession
expire
setMaxConcurrentOperationCount:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
setSession:
_installHandlerForNSURLSessionConfiguration:queue:
initWithURL:readonly:
initWithURL:assetInitializationOptions:
decodeObjectOfClass:forKey:
itemProviderDataWithURL:assetInitializationOptions:
securityScopedURL
assetInitializationOptions
_securityScopedURLWrapper
_assetInitializationOptions
T@"NSURL",R,N
T@"NSDictionary",R,N,V_assetInitializationOptions
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
loadDataWithTypeIdentifier:forItemProviderCompletionHandler:
_loadFileRepresentationOfTypeIdentifier:forItemProviderCompletionHandler:
readableTypeIdentifiersForItemProvider
objectWithItemProviderData:typeIdentifier:error:
_preferredRepresentationForItemProviderReadableTypeIdentifier:
_objectWithItemProviderFileURL:typeIdentifier:isInPlace:error:
writableTypeIdentifiersForItemProvider
itemProviderVisibilityForRepresentationWithTypeIdentifier:
_preferredRepresentationForItemProviderWritableTypeIdentifier:
T@"<AVLoggingIdentifier>",R,&,N
cookieWithProperties:
initWithCreationOptions:
_creationOptions
_serializableCreationOptions
_audioEffect
initWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
sweepFilterEffectParametersWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
sweepValue
minimumCutOffFrequency
maximumCutOffFrequency
bypassThreshold
sweepFilterEffectWithSweepValue:
_sweepFilterAudioEffect
Ti,R,N
generator
appliesPreferredTrackTransform
maximumSize
apertureMode
requestedTimeToleranceBefore
requestedTimeToleranceAfter
requests
requestsQueue
nextRequestID
videoComposition
customVideoCompositorSession
imageRequestQueue
cancelledRequestIDThreshold
generateImagesAsyncQueue
prefersStandardDynamicRange
_NSErrorForError:
setObject:forKeyedSubscript:
renderSize
_scaledSizeForRenderSize:
_videoSettingWithSize:
assetReaderWithAsset:error:
initWithArray:
assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:
_setVideoComposition:customVideoCompositorSession:
setVideoComposition:
assetReaderTrackOutputWithTrack:outputSettings:
setAppliesPreferredTrackTransform:
addOutput:
_makeAutoreleasedAssetReader
_copyCGImageAtTime:usingAssetReader:error:
_optionsDictionary
_ensureFigAssetImageGeneratorAllowingSynchronousPropertyLoad:error:
removeObject:
generateCGImagesAsynchronouslyForTimes:completionHandler:
_isValidReturningExceptionReason:
renderScale
_copyFigVideoCompositor:andSession:recyclingSession:forFigRemaker:error:
customVideoCompositor
_requestWithRequestID:
outputs
setTimeRange:
_setReadSingleSample:
startReading
copyNextSampleBuffer
cancelReading
assetImageGeneratorWithAsset:
copyCGImageAtTime:actualTime:error:
generateCGImageAsynchronouslyForTime:completionHandler:
cancelAllCGImageGeneration
setPrefersStandardDynamicRange:
setMaximumSize:
setApertureMode:
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
_didGenerateCGImage:
_failedToGenerateCGImage:
_serverDied
T@"AVAsset",R,N
TB,N
T{CGSize=dd},N
T@"AVVideoComposition",C,N
T@"<AVVideoCompositing>",R,N
close
parentChannel
communicationChannelImpl:didReceiveData:
communicationChannelImplDidClose:
sendData:completionHandler:
setParentChannel:
T@"AVOutputDeviceCommunicationChannel",W
initWithRemoteControlSession:
_didReceiveData:
_didCloseCommunicationChannel
_remoteControlSession
_parentChannel
T@"AVOutputDeviceCommunicationChannel",W,V_parentChannel
weakReferenceToSelf
trackInspector
assetWeakReference
figAssetTrackNotificationListenerWeakReference
figAssetTrackNotificationSource
arrayWithObjects:
_figAssetTrack
assetTrackInspectorWithAsset:trackID:trackIndex:
_startListeningToFigAssetTrackNotifications
_initWithAsset:trackID:trackIndex:
_stopListeningToFigAssetTrackNotifications
_figTrackReader
formatDescriptions
isDecodable
playabilityValidationResult
isEnabled
isSelfContained
totalSampleDataLength
mediaCharacteristics
hasMediaCharacteristic:
mediaPresentationTimeRange
mediaDecodeTimeRange
latentBaseDecodeTimeStampOfFirstTrackFragment
requiresFrameReordering
hasAudioSampleDependencies
estimatedDataRate
peakDataRate
dimensions
loudnessInfo
nominalFrameRate
minSampleDuration
mediaCharacteristicsForMediaTypes
segments
segmentForTrackTime:
segmentsExcludeAudioPrimingAndRemainderDurations
gaplessSourceTimeRange
segmentsAsPresented
samplePresentationTimeForTrackTime:
alternateGroupID
defaultAlternateGroupID
provisionalAlternateGroupID
isExcludedFromAutoselectionInTrackGroup
associatedTracksOfType:
_firstAssociatedTrackWithAssociationType:
_trackReferences
hasAudibleBooksContent
isAudibleBooksContentAuthorized
hasSeamSamples
canProvideSampleCursors
makeSampleCursorWithPresentationTimeStamp:
makeSampleCursorAtFirstSampleInDecodeOrder
makeSampleCursorAtLastSampleInDecodeOrder
_assetTrackInspector
keyPathsForValuesAffectingTimeRange
_subtitleFormatDescriptionMatchesTextDisplayFlags:flagsMask:
minFrameDuration
loadSegmentForTrackTime:completionHandler:
loadSamplePresentationTimeForTrackTime:completionHandler:
_fallbackTrack
_pairedForcedOnlySubtitlesTrack
availableTrackAssociationTypes
loadAssociatedTracksOfType:completionHandler:
_track
T@"AVAsset",R,W,N
timeMapping
_hasMultipleEdits
_hasScaledEdits
_hasEmptyEdits
_hasMultipleDistinctFormatDescriptions
_firstFormatDescriptionIsLPCM
preferCoordinatedPlaybackBehavior
setPreferCoordinatedPlaybackBehavior:
_preferCoordinatedPlaybackBehavior
TB,N,V_preferCoordinatedPlaybackBehavior
fullyInitializedAndNotDeallocating
pixelBufferAttributeMediator
stateDispatchQueue
figConfigurationQueue
layerInteractionQueue
currentItemPropertyUpdateQueue
layersQ
proxyTimebase
logPerformanceData
primaryAirPlayID
didFinishSuspensionNotificationToken
didEnterBackgroundNotificationToken
willEnterForegroundNotificationToken
audioSessionMediaPlayerOnly
IAPDCallbackToken
prerollIDMutex
layerForegroundingChangeToken
KVOChangeSerializer
lastItem
queueModifications
pendingFigPlayerProperties
audioSession
vibrationPattern
outputContext
IOwnTheFigPlayer
audiovisualBackgroundPlaybackPolicy
handlersToCallWhenReadyToPlay
shouldReduceResourceUsage
resourceConservationLevelWhilePaused
playerRole
externalPlaybackVideoGravity
userVolume
minRateForAudioPlayback
maxRateForAudioPlayback
autoSwitchStreamVariants
preparesItemsForPlaybackAsynchronously
allowsOutOfBandTextTrackRendering
muted
closedCaptionDisplayEnabled
appliesMediaSelectionCriteriaAutomatically
dynamicallyChoosesInitialVariant
limitsBandwidthForCellularAccess
usesAudioOnlyModeForExternalPlayback
allowsPixelBufferPoolSharing
disallowsAMRAudio
disallowsHardwareAcceleratedVideoDecoder
layerDestinationIsTVOut
preventsDisplaySleepDuringVideoPlayback
preventsAutomaticBackgroundingDuringVideoPlayback
disallowsVideoLayerDisplayCompositing
allowsExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
captionPipelineStrategy
audioOutputDeviceUniqueID
clientName
STSLabel
multichannelAudioStrategy
clientPriority
PIPModePossible
isDisplayingClosedCaptions
externalPlaybackActive
airPlayVideoActive
isConnectedToPhysicalSecondScreen
outputObscuredDueToInsufficientExternalProtection
externalProtectionStatus
ancillaryPerformanceInformationForDisplay
rateState
rateChangeIdentifier
defaultRate
currentItemPresentationSize
currentItemNonForcedSubtitlesEnabled
preferredVideoDecoderGPURegistryID
disallowsAutoPauseOnRouteRemovalIfNoAudio
ensuresActiveAudioSessionWhenStartingPlayback
hostApplicationInForeground
preservesAudioSessionSampleRate
silencesOtherPlaybackDuringPIP
prefersPlayingSilentlyWhenConflictingWithOtherPlayback
suppressesAudioRendering
isInterstitialPlayer
isSilencedDueToConflictWithOtherPlayback
mxSessionID
videoTargets
shouldWaitForVideoTarget
playbackCoordinator
clientRequestedPlaybackCoordinator
backgroundPIPAuthorizationToken
rateDidChangeNotificationIncludesExtendedDiagnosticPayload
cachedFigMediaSelectionCriteriaProperty
interstitialEventCoordinator
videoLayers
subtitleLayers
closedCaptionLayers
avPlayerLayers
nextPrerollIDToGenerate
pendingPrerollID
prerollCompletionHandler
currentItemSuppressesVideoLayersNotificationToken
currentItemPreferredPixelBufferAttributesNotificationToken
figPlayer
figPlaybackItemToIdentifyNextCurrentItem
needsToCreateFigPlayer
allowsLegibleFallbackForAllAudibleMediaSelections
cachedFigLegibleFallbackMediaSelectionCriteriaProperty
itemsInFigPlayQueue
expectedAssetTypes
reevaluateBackgroundPlayback
hadAssociatedOnscreenPlayerLayerWhenSuspended
suspensionExpected
rateUpdateDuringTransitionDecided
videoLayersAreAttached
figSourceClock
captionRenderingStrategy
displaysUsedForPlayback
overlappedPlaybackID
overlappedPlaybackItem
registerForScreenConnectionChanges
initWithURL:
initWithPlayerItem:
_attachToPlayer:
_addItemToLinkedList_invokeOnIvarAccessQueue:afterItem:
_runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:
playerItemWithURL:
worksAroundConcurrentKVOCrash
weakObjectsHashTable
makePlayerLoggingIdentifier
setAllowsExternalPlayback:
setAppliesMediaSelectionCriteriaAutomatically:
_setPendingFigPlayerProperty:forKey:
initWithAutomaticallyWaitsToMinimizeStalling:usesLegacyAutomaticWaitingBehavior:timeControlStatus:
_updateAutomaticallyWaitsToMinimizeStallingOnFigPlayer
initWithPlayer:
currentProcess
currentState
taskState
endowmentNamespaces
_hostApplicationHasForegroundExemption
_didFinishSuspension:
_didEnterBackground:
_willEnterForeground:
_layerForegroundStateChanged:
sharedCallbackContextRegistry
registerCallbackContextObject:
_addFPListeners
initWithFigPlayer:
unregisterCallbackContextForToken:
_removeFPListeners
_removePropertyObserversOfCurrentItemCalledOnStateDispatchQueueChecked:
_removeAllLayers
_removeFPInterstitialCoordinatorListeners
_nameForLogging_fromIvarAccessQueue
_stateDispatchQueue
removeObserver:forKeyPath:context:
masterClock
sourceClock
setMasterClock:
setSourceClock:
setValue:forUndefinedKey:
_items
_playerChangeStatusToFailedWithError:
makeObjectsPerformSelector:withObject:
_rateDidChangeNotificationPayloadForAVFRateChangeReason:reasonIsExtendedDiagnostic:rateChangeIdentifier:rateChangeOriginator:
_copyFigPlayer
removeRequestedPixelBufferAttributesAttributesForKey:
_preferredPixelBufferAttributes
_suppressesVideoLayers
setRequestedPixelBufferAttributes:forKey:
setLayersAreSuppressed:
mediatedPixelBufferAttributes
_updateDecoderPixelBufferAttributes:onFigPlayer:
_stopObservingPropertiesOfCurrentItem:
_startObservingPropertiesOfCurrentItem:
_isReadyForInspectionOfPresentationSize
_getCachedPresentationSize:
_getCachedNonForcedSubtitleEnabled:
_copyProxyTimebase
_hasCurrentInterstitialEvent
rateStateByInferringTimeControlStatusAndWaitingReasonBasedOnPresenceOfCurrentItem:hasCurrentInterstitialEvent:nameForLogging:
timeControlStatus
reasonForWaitingToPlay
_synchronizeWithNewCurrentItem
_updateCurrentItemPreferredPixelBufferAttributesAndVideoLayerSuppression
_removeItem:
_applyPlayQueueChangesToFigPlayerWithCompletionHandler:
_updateProxyTimebaseFromNewCurrentItem
scheduleBlock:
_itemOkayToPlayWhileTransitioningToBackground:
_hostApplicationInForeground
pause
_removeItemFromLinkedList_invokeOnIvarAccessQueue:
_makeReadyForEnqueueingWithCompletionHandler:
_createAndConfigureFigPlayerWithType:completionHandler:
_preservesAudioSessionSampleRate
_pendingFigPlayerPropertyForKey:
_createFigPlayerWithType:options:player:
_isAirPlayVideoActive
isExternalPlaybackActive
_isPIPModePossible
_clientRequestedPlaybackCoordinator
_ensureFigPlaybackCoordinatorIsConnected
_cachedMediaSelectionCriteria
legibleFallbackMediaSelectionCriteria
figDictionary
_pendingFigPlayerProperties
_hasForegroundLayers
_isVideoPlaybackAllowedWhileInBackground
_hasAssociatedAVPlayerLayerInPIPMode
_attachVideoLayersToFigPlayer
_attachClosedCaptionLayersToFigPlayer
_attachFigPlayerToSubtitleLayers
_setNeroVideoGravityOnFigPlayer
_addToPlayQueueOfFigPlayerOfPlayer:afterFigPlaybackItemOfItem:
_applyLinkedListOfItemsToFigPlayerUsingBlock:
_interstitialPlayerIfCreated
linkInterstitialFigPlayersOnQueue
_retainInterstitialCoordinatorIfCreated
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_insertAfterItem:
_setCurrentItem:
modificationForInsertingItem:afterItem:
_enqueuePlayQueueModification_invokeOnIvarAccessQueue:
_items_invokeOnIvarAccessQueue
item
modificationType
afterItem
_removeFromPlayQueueOfFigPlayerOfAttachedPlayer
_nextItem
_previousItem
_removeFromItems
modificationForRemovingItem:
_enumerateItemsUsingBlock:
_rateDidChangeNotificationIncludesExtendedDiagnosticPayload
_playbackCoordinatorWithoutTriggeringFullSetup
participantForIdentifier:
_rateState
rateStateBySettingRate:nameForLogging:
_rateDidChangeNotificationPayloadForFigRateChangeReason:rateChangeIdentifier:rateChangeOriginator:
numberWithFloat:
_setRate:rateChangeReason:figPlayerSetRateHandler:
_setRate:withVolumeRampDuration:playImmediately:rateChangeReason:affectsCoordinatedPlayback:
automaticallyWaitsToMinimizeStalling
rateStateBySettingAutomaticallyWaitsToMinimizeStalling:
usesLegacyAutomaticWaitingBehavior
rateStateBySettingUsesLegacyAutomaticWaitingBehavior:
_usesLegacyAutomaticWaitingBehavior
currentTime
currentUnfoldedTime
seekToDate:completionHandler:
seekToTime:completionHandler:
setRate:time:atHostTime:options:
_createPrerollID
_cancelPendingPrerollAndRegisterPrerollCompletionHandler:
_unregisterAndReturnRetainedPrerollCompletionHandler
category
playerAVAudioSession
sharedAVSystemController
getVolume:forCategory:
isMuted
figPlayerActionForActionAtItemEnd:
_setActionAtItemEnd:allowingAdvance:
isClosedCaptionDisplayEnabled
outputContextForID:
contextID
_detachVideoLayersFromFigPlayer:
_detachClosedCaptionLayersFromFigPlayer:
_detachFigPlayerFromSubtitleLayers
_closedCaptionLayers
numberWithUnsignedInteger:
_avPlayerLayers
opacity
_maximumAVPlayerLayerDisplaySize
_subtitleLayers
_videoLayers
_isIAPDExtendedModeActive
_updatePixelBufferAttributesForLayer:
setCaptionRenderingStrategy:
_externalPlaybackVideoGravity
_fpNotificationNames
_copyPerformanceDataForCurrentItem
_dynamicallyChoosesInitialVariant
_limitsBandwidthForCellularAccess
setAudiovisualBackgroundPlaybackPolicy:
availableHDRModes
fireAvailableHDRModesDidChangeNotification
fireEligibleForHDRPlaybackDidChangeNotification
playerWithURL:
playerWithPlayerItem:
playerWithFigPlayer:
automaticallyNotifiesObserversOfCurrentItem
automaticallyNotifiesObserversOfRate
automaticallyNotifiesObserversOfUsesLegacyAutomaticWaitingBehavior
automaticallyNotifiesObserversOfUserVolume
automaticallyNotifiesObserversOfVibrationPattern
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingActionAtItemEnd
keyPathsForValuesAffectingClosedCaptionDisplayEnabled
automaticallyNotifiesObserversOfExternalPlaybackActive
automaticallyNotifiesObserversOfUsesAudioOnlyModeForExternalPlayback
automaticallyNotifiesObserversOfAirPlayVideoActive
automaticallyNotifiesObserversOfUsesAirPlayVideoWhileAirPlayScreenIsActive
checkForAvailableHDRModesChanges
eligibleForHDRPlayback
initWithDispatchQueue:
_noteNewPresentationSizeForPlayerItem:
_cachedNonForcedSubtitleDisplayEnabledForCurrentItem
_noteNewNonForcedSubtitleDisplayEnabledForPlayerItem:
_itemIsReadyToPlay:
_advanceCurrentItemAccordingToFigPlaybackItem:
_advanceToNextItem
prepareItem:withCompletionHandler:
_insertItem:afterItem:
setExpectedAssetTypes:
_setAncillaryPerformanceInformationForDisplay:
_ancillaryPerformanceInformationForDisplay
replaceCurrentItemWithPlayerItem:
_removeAllItems
_rate
setRate:withVolumeRampDuration:
setDefaultRate:
playImmediatelyAtRate:
pauseWithoutAffectingCoordinatedPlayback
_setRateDidChangeNotificationIncludesExtendedDiagnosticPayload:
setAutomaticallyWaitsToMinimizeStalling:
_setUsesLegacyAutomaticWaitingBehavior:
seekToDate:
seekToTime:
seekToTime:toleranceBefore:toleranceAfter:
setRate:time:atHostTime:
prerollAtRate:completionHandler:
cancelPendingPrerolls
prerollOperationDidComplete:notificationPayload:
_userVolume
_setUserVolume:
setVibrationPattern:
_playerVolume
_isMuted
setMuted:
setClosedCaptionDisplayEnabled:
_isDisplayingClosedCaptions
setResourceConservationLevelWhilePaused:
setPlayerRole:
setUsesExternalPlaybackWhileExternalScreenIsActive:
_externalPlaybackActive
externalPlaybackType
setUsesAudioOnlyModeForExternalPlayback:
setOutputContext:
allowsAirPlayVideo
setAllowsAirPlayVideo:
_airPlayVideoActive
isAirPlayVideoActive
usesAirPlayVideoWhileAirPlayScreenIsActive
setUsesAirPlayVideoWhileAirPlayScreenIsActive:
play
addPeriodicTimeObserverForInterval:queue:usingBlock:
addBoundaryTimeObserverForTimes:queue:usingBlock:
removeTimeObserver:
_pixelBufferAttributeMediator
_setOptions:onClosedCaptionLayer:
_setSeparated:onClosedCaptionLayer:
_addCaptionLayer:subtitleLayer:
_removeCaptionLayer:subtitleLayer:
setExternalPlaybackVideoGravity:
_addFPInterstitialCoordinatorListeners
_setFigPlaybackItemToMakeCurrent:
_getDisplayVideoRange:displaySize:refreshRate:
_shouldLogPerformanceData
_logPerformanceDataForPreviousItem
_logPerformanceDataForCurrentItem
_setDynamicallyChoosesInitialVariant:
_setLimitsBandwidthForCellularAccess:
_setPausesAudioVisualPlaybackInBackground:
_pausesAudioVisualPlaybackInBackground
_suppressesAudioRendering
_setSuppressesAudioRendering:
_player
setPreventsDisplaySleepDuringVideoPlayback:
setPreventsAutomaticBackgroundingDuringVideoPlayback:
_extractFPExternalProtectionStatus:
allKeysForObject:
_playbackDisplaysForFigPlayer
_displaysUsedForPlayback
_setDisplaysUsedForPlayback:
_externalProtectionStatusCopiedFromFig
_externalProtectionStatus
T@"NSArray",C,N,S_setDisplaysUsedForPlayback:
TB,R,N,G_isPIPModePossible
removeAudioPlaybackRateLimits
isAudioPlaybackEnabledAtAllRates
setMinRateForAudioPlayback:
setMaxRateForAudioPlayback:
audioPlaybackEnabledAtAllRates
TB,R,N,GisAudioPlaybackEnabledAtAllRates
currentCarPlayExternalDevice
otherParticipants
_setHostApplicationInForeground:
_CALayerDestinationIsTVOut
_carplayIsActive
_applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock
_canContinuePlaybackInBackgrounBasedOnAudiovisualBackgroundPlaybackPolicy:
assetTrack
_detachVideoLayersForSuspension
attributeWithDomain:name:
initWithExplanation:target:attributes:
acquireWithError:
_acquireBackgroundAssertion
_hasAssociatedOnscreenAVPlayerLayer
_shouldDetachVideoLayersFromFigPlayer
_clientName
_hasEnabledVideo
setActive:error:
_forceHostApplicationInForeground:
_rateUpdateDuringTransitionDecided
isIAPDExtendedModeActive
_clientPriority
_isConnectedToPhysicalSecondScreen
_setCALayerDestinationIsTVOut:
errorWithDomain:code:userInfo:
_setWantsVolumeChangesWhenPausedOrInactive:
_setEQPreset:
_setStoppingFadeOutDuration:
_setClientName:
_setClientPriority:
_setPreventsSleepDuringVideoPlayback:
_preventsSleepDuringVideoPlayback
_setPreferredLanguageList:
_resumePlayback:error:
setAllowsPixelBufferPoolSharing:
setDisallowsAMRAudio:
setDisallowsHardwareAcceleratedVideoDecoder:
initWithFigDictionary:
setMediaSelectionCriteria:forMediaCharacteristic:
mediaSelectionCriteriaForMediaCharacteristic:
defaultMediaSelectionCriteriaForMediaCharacteristic:
setAudioOutputDeviceUniqueID:
setAutoSwitchStreamVariants:
setPreparesItemsForPlaybackAsynchronously:
automaticallyNotifiesObserversOfAutoSwitchStreamVariants
setAllowsOutOfBandTextTrackRendering:
setMultichannelAudioStrategy:
setCaptionPipelineStrategy:
setAudioSession:
_setPreservesAudioSessionSampleRate:
T@"AVAudioSession",&
TB,N,G_preservesAudioSessionSampleRate,S_setPreservesAudioSessionSampleRate:
initWithModificationType:item:afterItem:
_modificationType
_item
_afterItem
Tq,R,N,V_modificationType
T@"AVPlayerItem",R,N,V_item
T@"AVPlayerItem",R,N,V_afterItem
setPreferredVideoDecoderGPURegistryID:
TQ,N
setLoggingIdentifier:
T@"<AVLoggingIdentifier>",&,N
_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:
_disallowsAutoPauseOnRouteRemovalIfNoAudio
TB,N,G_disallowsAutoPauseOnRouteRemovalIfNoAudio,S_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:
_setEnsuresActiveAudioSessionWhenStartingPlayback:
_ensuresActiveAudioSessionWhenStartingPlayback
_STSLabel
_setSTSLabel:
T@"NSString",&,N,G_STSLabel,S_setSTSLabel:
setPrefersPlayingSilentlyWhenConflictingWithOtherPlayback:
_silencesOtherPlaybackDuringPIP
_setSilencesOtherPlaybackDuringPIP:
setBackgroundPIPAuthorizationToken:
TB,N,G_silencesOtherPlaybackDuringPIP,S_setSilencesOtherPlaybackDuringPIP:
_updateVideoTargetOnFigPlayer
addVideoTarget:
removeVideoTarget:
setShouldWaitForVideoTarget:
sharedInstance
_setIsInterstitialPlayer:
_setInterstitialPlayerGuts:
syncAudioSessionToInterstitialPlayer:
_setInterstitialPlayer:
_noteRemoteInterstitialEvents:forItem:
_noteCurrentRemoteInterstitialEvent:
_copyFigPlaybackCoordinator
setFigPlaybackCoordinator:
T@"AVPlayerPlaybackCoordinator",R
setAllowsLegibleFallbackForAllAudibleMediaSelections:
setLegibleFallbackMediaSelectionCriteria:
T@"AVPlayerMediaSelectionCriteria",&,N
_overlappedPlaybackWillBeginForItem:withID:
rateStateBySettingTimeControlStatus:reasonForWaitingToPlay:nameForLogging:
rateStateByUpdatingBasedOnPresenceOfCurrentInterstitialEvent:nameForLogging:
rateStateByUpdatingBasedOnFigPlayerPlaybackState:hasCurrentInterstitialEvent:nameForLogging:
rateStateByUpdatingBasedOnFigPlayer:hasCurrentItem:hasCurrentInterstitialEvent:nameForLogging:
_automaticallyWaitsToMinimizeStalling
_timeControlStatus
_reasonForWaitingToPlay
Tf,R,N,V_rate
TB,R,N,V_automaticallyWaitsToMinimizeStalling
TB,R,N,V_usesLegacyAutomaticWaitingBehavior
Tq,R,N,V_timeControlStatus
T@"NSString",R,N,V_reasonForWaitingToPlay
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
_copyFigPlaybackItem
_setTimedMetadata:
cancelPendingSeeks
setMaximumTimePlayedToDuringOverlappedPlayback:
initWithUUIDString:
callbackContextForToken:
playerItemWithAsset:
copyWithZone:newAssetOptions:
addContentKeyRecipient:
setAutomaticallyHandlesInterstitialEvents:
_setTemplatePlayerItem:
setVariantQualifiers:
setMediaSelections:
environmentalConditions
_predicate
_variant
_figAlternate
_selectedMediaArray
_createFigContentConfigForEnvironmentalCondition:
_serializeIntoDownloadConfig:environmentalCondition:
_serializeIntoDownloadConfig:asset:
variantQualifiers
mediaSelections
_variantQualifiers
_mediaSelections
T@"NSArray",C,N,V_variantQualifiers
T@"NSArray",C,N,V_mediaSelections
propertyList
initWithAsset:propertyList:
selectedMediaOptionInMediaSelectionGroup:
predicateForChannelCount:mediaSelectionOption:operatorType:
assetVariantQualifierWithPredicate:
_setupContentConfigWithDownloadConfig:asset:
initWithAsset:title:
downloadConfigurationWithAsset:title:
artworkData
setArtworkData:
primaryContentConfiguration
auxiliaryContentConfigurations
setAuxiliaryContentConfigurations:
optimizesAuxiliaryContentConfigurations
setOptimizesAuxiliaryContentConfigurations:
_title
_artworkData
_primaryContentConfiguration
_auxiliaryContentConfigurations
_optimizesAuxiliaryContentConfigurations
T@"NSData",C,N,V_artworkData
T@"AVAssetDownloadContentConfiguration",R,N,V_primaryContentConfiguration
T@"NSArray",C,N,V_auxiliaryContentConfigurations
TB,N,V_optimizesAuxiliaryContentConfigurations
_serializableRepresentation
encodeInt64:forKey:
encodeBool:forKey:
decodeInt64ForKey:
numberWithUnsignedLongLong:
decodeBoolForKey:
setPreferredDisplayCriteria:
_updateUXMWithDisplayCriteria:
sharedAVKitUXMDisplayManager
T@"AVUXMDisplayManager",R,N
currentUXMDisplayCriteria
_updateUXMWithDisplayCriteriaWithLock:
initInternal
_preferredDisplayCriteria
T@"AVDisplayCriteria",C,N
_startCompositionTime
_endCompositionTime
_subsequentStartCompositionTime
_subsequentEndCompositionTime
initWithStartCompositionTime:endCompositionTime:subsequentStartCompositionTime:subsequentEndCompositionTime:
startCompositionTime
endCompositionTime
subsequentStartCompositionTime
subsequentEndCompositionTime
audioTimePitchAlgorithm
allowedAudioSpatializationFormats
audioProcessingTap
mediaDataRequester
scheduledAudioParameters
readOnlyControlTimebase
weakReferenceToSynchronizer
weakContentKeySession
lastFormatDescription
lastCryptor
figAudioRenderer
startRequestingMediaData
currentFigAudioRendererFactory
_initializeTimebase
createAudioRendererWithAllocator:options:error:
setAudioTimePitchAlgorithm:
_installNotificationHandlers
_uninstallNotificationHandlers
opaqueSessionID
retrieveSessionWithID:
_transitionToStatus:error:
_transitionToFailedStatusWithOSStatus:
copyCryptorForFormatDescription:cryptorOut:errorOut:
initWithMediaDataConsumer:requestQueue:requestBlock:
sampleBufferAudioRenderer
isReadyForMoreMediaData
copyFigSampleBufferAudioRenderer:
setRenderSynchronizer:error:
setSTSLabel:
enqueueSampleBuffer:
flush
requestMediaDataWhenReadyOnQueue:usingBlock:
stopRequestingMediaData
hasSufficientMediaDataForReliablePlaybackStart
T^{OpaqueCMTimebase=},R,&
readyForMoreMediaData
TB,R,GisReadyForMoreMediaData
_triggerMediaRequestCallback
_wasFlushedAutomaticallyAtTime:
willTrimShortDurationSamples
setAudioTapProcessor:
audioTapProcessor
setAllowedAudioSpatializationFormats:
flushFromSourceTime:completionHandler:
_audioRendererInternal
T@"NSError",R,N
setFigAudioRendererFactory:forQueue:
input
initWithAssetWriterInput:
sourceFormatHint
assetWriterInput
_createSerializedRepresentationWithFormatDescription:error:
_appendSampleBuffer:error:
_tellAssetWriterToTransitionToFailedStatusWithError:
assetWriterInputMetadataAdaptorWithAssetWriterInput:
appendTimedMetadataGroup:
T@"AVAssetWriterInput",R,N
externalProtectionState
_monitor
stringWithString:
appendFormat:
descriptionStringForVideoRangeOfFormatDescription:
appendString:
string
setString:
descriptionStringForBitRate:
accessLog
lastObject
playbackSessionID
configurationGroup
numberWithLong:
loadedTimeRanges
descriptionStringForFormatOfTrack:
currentVideoFrameRate
presentationSize
observedBitrate
averageVideoBitrate
averageAudioBitrate
descriptionStringForTracksOfPlayerItem:
indicatedBitrate
indicatedAverageBitrate
variantIndex
numberOfStalls
updateFromPlayer
updateFromPlayerItem
update
formattedDisplayString
spatialDiagnostics
setSpatialDiagnostics:
captureCompleteURI
setCaptureCompleteURI:
prevVariantIdx
setPrevVariantIdx:
prevStallCount
setPrevStallCount:
totalStallCount
setTotalStallCount:
displayResolutionWidth
displayResolutionHeight
audioSpatializationMode
_audioSpatializationMode
_playerItemURL
_assetType
_sessionID
_configurationGroup
_trackFormatDescriptions
_displayResolutionHeight
_displayResolutionWidth
_refreshRate
_videoRange
_videoApproximateDisplaySizeHeight
_videoApproximateDisplaySizeWidth
_presentationSizeHeight
_presentationSizeWidth
_currentFrameRate
_nominalFrameRate
_networkBandiwdth
_averageVideoBitrate
_averageAudioBitrate
_assetTrackInfo
_peakIndicatedBitrate
_averageIndicatedBitrate
_variantIndex
_totalFrameDrops
_decoderFrameDrops
_imageQueueFrameDrops
_bufferedVideoPlayed
_bufferedVideoRemaining
_customPerfInfo
_totalStalls
_prevVariantIdx
_prevStallCount
_totalStallCount
_spatialDiagnostics
_captureCompleteURI
_formattedDisplayString
T@"AVPlayer",W,V_player
TB,N,V_spatialDiagnostics
TB,N,V_captureCompleteURI
Tq,N,V_prevVariantIdx
Tq,N,V_prevStallCount
Tq,N,V_totalStallCount
T@"NSString",R,N,V_formattedDisplayString
T@"NSNumber",R,N,V_displayResolutionHeight
T@"NSNumber",R,N,V_displayResolutionWidth
T@"NSNumber",R,N,V_audioSpatializationMode
setAnchorPoint:
setFont:
setTruncationMode:
setWrapped:
setAlignmentMode:
setForegroundColor:
mainDisplay
getHudSetting
_hudUpdateTrigger
numberWithUnsignedLong:
setColor:
setOpacity:
setFontSize:
setBackgroundColor:
preferredFrameSize
frame
getScaleFactorForDisplaySize:
isHidden
displayStringGenerator
copyPropertiesFromStringGenerator:
updateHudWithDisplayString:
valueLoadedForKey:onObject:
playerLayer
_hudTimer
_showHud
_colorId
_opacity
_fontSizeInt
_updateUISettings
_hudXoffset
_hudYoffset
_hudUpdateInterval
_showCompleteURI
_requestInFlight
_loadingStatusCache
T@"AVPlayerLayer",W,V_playerLayer
figPlaybackItemAccessorQueue
figPlaybackItemSetterQueue
seekQueue
seekIDMutex
proxyUnfoldedTimebase
proxyFoldedTimebase
automaticallyLoadedAssetKeys
wasInitializedWithURL
figPlaybackItem
cachedTracks
syncLayers
itemOutputs
itemVideoOutputs
itemLegibleOutputsForKeys
itemMetadataOutputsForKeys
suppressesVideoLayers
foldedTimebase
unfoldedFigTimebase
didBecomeReadyForInspectionOfTracks
didBecomeReadyForInspectionOfPresentationSize
didBecomeReadyForInspectionOfDuration
figAssetDidBecomeReadyForInspectionOfMediaSelectionOptions
didBecomeReadyForInspectionOfRecommendedTimeOffsetFromLive
assetWithFigPlaybackItem
trackIDsForAssetWithFigPlaybackItem
needTimedMetadataNotification
didBecomeReadyForBasicInspection
audioMix
forwardPlaybackEndTime
reversePlaybackEndTime
timeToPauseBuffering
timeToPausePlayback
advanceTimeForOverlappedPlayback
advanceTimeForOverlappedPlaybackWasSet
maximumTimePlayedToDuringOverlappedPlayback
snapTimeToPausePlayback
preservesTimeOffsetFromLive
configuredTimeOffsetFromLive
recommendedTimeOffsetFromLive
seekingWaitsForVideoCompositionRendering
textStyleRules
textHighlightArray
initialFigTimePitchAlgorithm
canUseNetworkResourcesForLiveStreamingWhilePaused
maximumForwardBufferDuration
maximumTrailingBufferDuration
preferredPeakBitRate
preferredPeakBitRateForExpensiveNetworks
startsOnFirstEligibleVariant
itemCollectors
itemMetadataCollectors
interstitialEventCollector
RTCReportingFlags
gaplessInfo
soundCheckVolumeNormalization
volumeAdjustment
initialLimitReadAhead
mediaKind
reversesMoreVideoFramesInMemory
reversesMoreVideoFramesInMemoryWasSet
aggressivelyCachesVideoFrames
aggressivelyCachesVideoFramesWasSet
decodesAllFramesDuringOrdinaryPlayback
decodesAllFramesDuringOrdinaryPlaybackWasSet
initialContinuesPlayingDuringPrerollForSeek
initialContinuesPlayingDuringPrerollForRateChange
usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet
usesIFrameOnlyPlaybackForHighRateScaledEdits
minimumIntervalForIFrameOnlyPlayback
minimumIntervalForIFrameOnlyPlaybackWasSet
speedThresholdForIFrameOnlyPlayback
speedThresholdForIFrameOnlyPlaybackWasSet
refreshesClosedCaptionsImmediatelyAfterSeeking
initialDate
initialEstimatedDate
requiresAccessLog
suppressesAudioOnlyVariants
prefersOfflinePlayableVariants
autoSwitchAtmosStreamVariants
variantPreferences
preferredMaximumAudioSampleRate
imageQueueInterpolationCurve
imageQueueInterpolationCurveWasSet
blendsVideoFrames
blendsVideoFramesWasSet
appliesPerFrameHDRDisplayMetadata
appliesPerFrameHDRDisplayMetadataWasSet
videoApertureMode
usesMinimalLatencyForVideoCompositionRendering
initialAlwaysMonitorsPlayability
initialPlaybackLikelyToKeepUpTrigger
savesDownloadedDataToDiskWhenDone
networkUsuallyExceedsMaxBitRate
allowProgressiveSwitchUp
allowProgressiveStartup
allowProgressiveResume
IFramePrefetchTargetDimensions
AVKitData
preferredMaximumResolution
preferredMaximumResolutionForExpensiveNetworks
preferredMinimumResolution
canPlayFastForward
canPlayFastReverse
canPlayReverse
canPlaySlowReverse
canPlaySlowForward
canStepForward
canStepBackward
playbackBufferEmpty
playbackBufferFull
playbackLikelyToKeepUp
restrictsAutomaticMediaSelectionToAvailableOfflineOptions
nonForcedSubtitlesEnabled
hasEnabledVideo
hasVideo
hasEnabledAudio
hasEnqueuedVideoFrame
externalProtectionRequested
automaticallyHandlesInterstitialEvents
seekableTimeRanges
seekableTimeRangesLastModifiedTime
loopTimeRange
currentMediaSelection
videoEnhancementMode
isRenderingSpatialAudio
playerPlaybackCoordinator
coordinatedPlaybackIdentifierChangeNotificationToken
timeJumpedNotificationIncludesExtendedDiagnosticPayload
serviceIdentifier
needToSeekAfterCreatingFigPlaybackItem
initialTime
initialSetTimeFlags
initialMinSnapTime
initialMaxSnapTime
nextSeekIDToGenerate
pendingSeekID
seekCompletionHandler
previousItem
nextItem
playerConnection
initialWillNeverSeekBackwardsHint
clientsOriginalVideoComposition
figVideoCompositor
interstitialTemplate
eqPreset
rampInOutInfo
audibleDRMInfo
initialVariantIndex
currentStableVariantID
mediaOptionsSelectedByClient
timedMetadata
handlersToCallWhenReadyForEnqueueing
haveInitialSamples
haveCPEProtector
didInformObserversAboutAvailabilityOfTracks
didFireKVOForAssetForNonStreamingItem
mostRecentlyAppliedAudioMix
audioSpatializationAllowed
audioSpatializationAllowedWasSet
allowedAudioSpatializationFormatsWasSet
playerReference
didSetAssetToAssetWithFigPlaybackItem
figCPEProtector
initWithAsset:automaticallyLoadedAssetKeys:
_hasOverrideForSelector:
makeDerivedIdentifier
_setURL:
_setAsset:
_removeFAListeners
_removeFoldedTBListeners
setAudioMix:
setTextStyleRules:
setTextHighlightArray:
setRequiresAccessLog:
setSuppressesAudioOnlyVariants:
setPrefersOfflinePlayableVariants:
setTimeToPauseBuffering:
setTimeToPausePlayback:
setSnapTimeToPausePlayback:
setAdvanceTimeForOverlappedPlayback:
automaticallyPreservesTimeOffsetFromLive
setAutomaticallyPreservesTimeOffsetFromLive:
setConfiguredTimeOffsetFromLive:
setImageQueueInterpolationCurve:
setBlendsVideoFrames:
setAppliesPerFrameHDRDisplayMetadata:
setReversesMoreVideoFramesInMemory:
setAggressivelyCachesVideoFrames:
setDecodesAllFramesDuringOrdinaryPlayback:
setLoudnessInfo:
setAVKitData:
setServiceIdentifier:
setSoundCheckVolumeNormalization:
setVolumeAdjustment:
setMediaKind:
continuesPlayingDuringPrerollForRateChange
setContinuesPlayingDuringPrerollForRateChange:
continuesPlayingDuringPrerollForSeek
setContinuesPlayingDuringPrerollForSeek:
setUsesIFrameOnlyPlaybackForHighRateScaledEdits:
setMinimumIntervalForIFrameOnlyPlayback:
setSpeedThresholdForIFrameOnlyPlayback:
setRefreshesClosedCaptionsImmediatelyAfterSeeking:
isAudioSpatializationAllowed
setAudioSpatializationAllowed:
setVariantPreferences:
setPreferredMaximumAudioSampleRate:
setAutoSwitchAtmosStreamVariants:
isNonForcedSubtitleDisplayEnabled
setNonForcedSubtitleDisplayEnabled:
setVideoEnhancementMode:
setStartsOnFirstEligibleVariant:
_URL
_isExternalProtectionRequiredForPlayback
_copyFigPlaybackItemLocked:
dispatchIVarWrite:locked:block:
_getVideoComposition:customVideoCompositorSession:figVideoCompositor:
commitCustomVideoCompositorPropertiesAndReturnError:
_mapAssetKeys:toFigAssetPropertySet:figAssetTrackPropertySet:callerName:
setSavesDownloadedDataToDiskWhenDone:
_updateLoopTimeRangeOnFigPlaybackItem
_updateForwardPlaybackEndTimeOnFigPlaybackItem
_updateReversePlaybackEndTimeOnFigPlaybackItem
_timeToPauseBuffering
_updateTimeToPauseBufferingOnFigPlaybackItem
_timeToPausePlayback
_updateTimeToPausePlaybackOnFigPlaybackItem
_updateAdvanceTimeForOverlappedPlaybackOnFigPlaybackItem
_updateImageQueueInterpolationCurveOnFigPlaybackItem
_updateBlendsVideoFramesOnFigPlaybackItem
_updateAppliesPerFrameHDRDisplayMetadataOnFigPlaybackItem
_updateReversesMoreVideoFramesInMemoryOnFigPlaybackItem
_updateAggressivelyCachesVideoFramesOnFigPlaybackItem
_updateDecodesAllFramesDuringOrdinaryPlaybackOnFigPlaybackItem
_updateContinuesPlayingDuringPrerollForSeekOnFigPlaybackItem
_updateContinuesPlayingDuringPrerollForRateChangeOnFigPlaybackItem
_updateUsesIFrameOnlyPlaybackForHighRateScaledEditsOnFigPlaybackItem
_updateMinimumIntervalForIFrameOnlyPlaybackOnFigPlaybackItem
_updateSpeedThresholdForIFrameOnlyPlaybackOnFigPlaybackItem
_updateRefreshesClosedCaptionsImmediatelyAfterSeekingOnFigPlaybackItem
_updateAudioSpatializationAllowed
_updateAllowedAudioSpatializationFormats
_updateCanUseNetworkResourcesForLiveStreamingWhilePausedOnFigPlaybackItem
_updatePreservesTimeOffsetFromLive
_updateConfiguredTimeOffsetFromLiveOnFigPlaybackItem
_applyCurrentVideoComposition
_applyCurrentAudioMix
_updateSeekingWaitsForVideoCompositionRenderingOnFigPlaybackItem
_quietlySetEQPreset:
_updatePlaybackPropertiesOnFigPlaybackItem
_quietlySetVariantIndex:
_updateSoundCheckVolumeNormalizationOnFigPlaybackItem
_updateVolumeAdjustmentOnFigPlaybackItem
_updateFigTimePitchAlgorithmOnFigPlaybackItem
_updateLoudnessInfoOnFigPlaybackItem
_updateAudioTapProcessorOnFigPlaybackItem
_applyMediaSelectionOptions
_updateTextStyleRulesOnFigPlaybackItem
_updateTextHighlightArrayOnFigPlaybackItem
_updateMediaKindOnFigPlaybackItem
_updateRestrictionsOnFigPlaybackItem
_quietlySetServiceIdentifier
_setSyncLayersOnFigPlaybackItem
_updateTimebase
_updateIFramePrefetchTargetDimensionsOnFigPlaybackItem
_updatePreferredPeakBitRateOnFigPlaybackItem
_updatePreferredPeakBitRateForExpensiveNetworksOnFigPlaybackItem
_updatePreferredMaximumResolutionOnFigPlaybackItem
_updatePreferredMaximumResolutionForExpensiveNetworksOnFigPlaybackItem
_updatePreferredMinimumResolutionOnFigPlaybackItem
_updateMaximumTrailingBufferDurationOnFigPlaybackItem
_updateMaximumForwardBufferDurationOnFigPlaybackItem
_updateVideoApertureModeOnFigPlaybackItem
_updateVariantPreferencesOnFigPlaybackItem
_updatePreferredMaximumAudioSampleRateOnFigPlaybackItem
_updateRTCReportingFlagsOnFigPlaybackItem
_metadataCollectors
_updateVideoEnhancementModeOnFigPlaybackItem
_updateStartsOnFirstEligibleVariantOnFigPlaybackItem
_updateAutoSwitchAtmosStreamVariantsOnFigPlaybackItem
_createFigPlaybackItemForFigPlayer:asset:URL:flags:options:playbackItem:
_configurePlaybackItemAndReturnError:
_updateLimitReadAheadOnFigPlaybackItem
playbackLikelyToKeepUpTrigger
_updatePlaybackLikelyToKeepUpTriggerOnFigPlaybackItem
willNeverSeekBackwardsHint
_updateWillNeverSeekBackwardsHintOnFigPlaybackItem
alwaysMonitorsPlayability
_updateAlwaysMonitorsPlayabilityOnFigPlaybackItem
_updateNonForcedSubtitleDisplayEnabledOnFigPlaybackItem
_updateUsesMinimalLatencyForVideoCompositionRenderingOnFigPlaybackItem
_updateRestrictsAutomaticMediaSelectionToAvailableOfflineOptions
_cachedTracks
_attachToFigPlaybackItemOfPlayerItem:
_evaluateVideoOutputs
_evaluateLegibleOutputs
_evaluateMetadataOutputs
_respondToBecomingReadyForBasicInspection
_addInterstitialEventCollector
_attachToFigPlayer
initWithWeakReferenceToPlayer:weakReferenceToPlayerItem:
addItemToPlayQueueAfterPlaybackItemOfItem:
removeItemFromPlayQueue
mediaSelectionNilOptionForGroup:
_addFAListeners
_isReadyForInspectionOfDuration
_markAsReadyForInspectionOfDuration
_duration
_markAsReadyForInspectionOfTracks
_markFigAssetAsReadyForInspectionOfMediaSelectionOptions
_informObserversAboutAvailabilityOfCurrentMediaSelection
_forStreamingItemsVendAssetWithFigPlaybackItem
_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection
_presentationSize
_isFigAssetReadyForInspectionOfMediaSelectionOptionsAndFigPlaybackItemIsReadyForInspection
_figSelectedMediaArray
_currentMediaSelectionFromFigSelectedMediaArray:
_setCurrentMediaSelection:
errorLog
domain
_ensureAssetWithFigPlaybackItemWithTrackIDs:
playerItemTrackWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
_isReadyForInspectionOfTracks
_tracksWithFPTrackIDArray:fromFigPlaybackItem:
_tracksFromAssetTrackIDs
_copyFoldedTimebase
_respondToBecomingReadyForBasicInspectionWithDuration:
_informObserversAboutAvailabilityOfDuration:
_markAsReadyForBasicInspection
_markAsReadyForInspectionOfPresentationSize
_respondToFigPlaybackItemBecomingReadyForInpection
makeObjectsPerformSelector:
_kickAssetObserversIfAppropriate
_informObserversAboutAvailabilityOfTracks:
_informObserversAboutAvailabilityOfPresentationSize
_isReadyForBasicInspection
_invokeReadyForEnqueueingHandlers
_canStepForward
_isReadyForInspectionOfRecommendedTimeOffsetFromLive
_currentTimeWithOptionalFoldedTimebase:
_CreateSeekID
_postSeekCompletionNotificationWithSeekID:andResult:
makeSeekID
_seekToTime:toleranceBefore:toleranceAfter:seekID:completionHandler:
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
_cancelPendingSeekAndRegisterSeekID:withCompletionHandler:
_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:finished:
numberWithUnsignedInt:
_copyStateDispatchQueue
_snapTimeToPausePlayback
_updateSnapTimeToPausePlaybackOnFigPlaybackItem
_copyProxyFoldedTimebase
_copyProxyUnfoldedTimebase
_copyTimebaseFromFigPlaybackItem:
_addFoldedTBListeners
limitReadAhead
setMaximumForwardBufferDuration:
_audioVolumeCurve
inputParameters
audioMixInputParametersForTrackID:
audioMixInputParameters
setTrackID:
_setAudioCurvesAccordingToInputParameters:forTrackID:
_setAudioTapProcessor:forTrackID:
_setAudioTimePitchAlgorithm:forTrackID:
effectParameters
_setAudioEffectParameters:forTrackID:
frameDuration
_setVideoCompositionFrameDuration:
sourceTrackIDForFrameTiming
_setVideoCompositionSourceTrackIDForFrameTiming:
_setVideoCompositionRenderSize:
_setVideoCompositionRenderScale:
_configureVideoCompositionColorProperties
_serializableInstructions
_setVideoCompositionInstructions:
sourceSampleDataTrackIDs
_setVideoCompositionSourceSampleDataTrackIDs:
_setVideoCompositor:
animationTool
_changeSeed
_deepCopy
detachVideoComposition
propertyListForTextStyleRules:
_seekableTimeRangesFromFPSeekableTimeIntervals:
_loadedTimeRangesFromFPPlaybableTimeIntervals:
_playbackProperties
_mediaOptionsSelectedByClient
_selectMediaOption:inMediaSelectionGroup:
_isStreamingGroup
_setMediaOptionsSelectedByClient:forKey:
allowsEmptySelection
_mediaOptionsSelectedByClientForKey:
_matchesGroupID:mediaType:
_propertyListForMediaSelection:forGroup:
displayName
_primaryMediaCharacteristic
_cacheMediaSelectionOption:forMediaSelectionGroup:
_clearCachedMediaSelectionGroup:
_propertyListForSelectedMediaOptionUsingFigSelectedMediaArrayObtainedFromGroup:
_hasSelectionInCachedMediaSelectionGroup:
_representsNilSelection
defaultOption
_isFigAssetReadyForInspectionOfMediaSelectionOptions
_initWithAsset:selectedMediaArray:
_initWithDeferredLoadingOfAsset:selectedMediaArray:
_initWithAssetWithoutGroupDictionaries:
getAndClearClientError
suppressesPlayerRendering
_suppressionForOutputs:
_setSuppressesVideoLayers:
setPreferredPeakBitRate:
setPreferredMaximumResolution:
_videoOutputs
_legibleOutputsForKeys
allValues
_updateVideoSuppressionOnFigPlaybackItem:basedOnOutputs:
_updateLegibleSuppressionOnFigPlaybackItem:basedOnOutputs:
_addInterstitialEventCollectorLocked:
addMediaDataCollector:locked:
_removeInterstitialEventCollectorLocked:
removeMediaDataCollector:locked:
_canPlayFastForward
_canPlayReverse
_canPlayFastReverse
_canStepBackward
_playbackCoordinator
interstitialTimeRangesForPlayerItem:
identifierForPlayerItem:
_updateItemIdentifierForCoordinatedPlayback
playerItemWithAsset:automaticallyLoadedAssetKeys:
automaticallyNotifiesObserversOfSavesDownloadedDataToDiskWhenDone
automaticallyNotifiesObserversOfUsesMinimalLatencyForVideoCompositionRendering
automaticallyNotifiesObserversOfVariantIndex
automaticallyNotifiesObserversOfHasEnabledVideo
automaticallyNotifiesObserversOfHasEnabledAudio
automaticallyNotifiesObserversOfNetworkUsuallyExceedsMaxBitRate
automaticallyNotifiesObserversOfAllowProgressiveSwitchUp
automaticallyNotifiesObserversOfAllowProgressiveStartup
automaticallyNotifiesObserversOfAllowProgressiveResume
automaticallyNotifiesObserversOfStatus
automaticallyNotifiesObserversOfAsset
automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp
automaticallyNotifiesObserversOfPlaybackBufferEmpty
automaticallyNotifiesObserversOfPlaybackBufferFull
automaticallyNotifiesObserversOfSeekableTimeRanges
automaticallyNotifiesObserversOfLoadedTimeRanges
automaticallyNotifiesObserversOfPresentationSize
automaticallyNotifiesObserversOfTracks
_timeJumpedNotificationIncludesExtendedDiagnosticPayload
_setTimeJumpedNotificationIncludesExtendedDiagnosticPayload:
_playerConnection
_markAsNeedingNewAssetWithFigPlaybackItem
_setAssetToAssetWithFigPlaybackItemIfAppropriate
_markAssetWithFigPlaybackItemAsNeedingNewTracks
_trackWithTrackID:
_enabledTrackFormatDescriptions
_isAFileBasedItemThatsReadyToPlay
_configuredTimeOffsetFromLive
_markAsReadyForInspectionOfRecommendedTimeOffsetFromLive
_recommendedTimeOffsetFromLive
seekToTime:toleranceBefore:toleranceAfter:seekID:
currentDate
setInitialDate:
currentEstimatedDate
setInitialEstimatedDate:
stepByCount:
_copyUnfoldedFigTimebase
unfoldedTimebase
setRTCReportingFlags:
setLimitReadAhead:
allowsExtendedReadAhead
setAllowsExtendedReadAhead:
preferredForwardBufferDuration
setPreferredForwardBufferDuration:
setMaximumTrailingBufferDuration:
setAlwaysMonitorsPlayability:
setPlaybackLikelyToKeepUpTrigger:
setWillNeverSeekBackwardsHint:
_setVideoCompositionColorPrimaries:
_setVideoCompositionColorYCbCrMatrix:
_setVideoCompositionColorTransferFunction:
setSeekingWaitsForVideoCompositionRendering:
setUsesMinimalLatencyForVideoCompositionRendering:
isPlaybackLikelyToKeepUp
isPlaybackBufferFull
isPlaybackBufferEmpty
progressTowardsPlaybackLikelyToKeepUp
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
playabilityMetrics
setLoopTimeRange:
_seekableTimeRanges
_loadedTimeRanges
setGaplessInfo:
liveUpdateInterval
setVariantIndex:
_removeMediaOptionsSelectedByClient
selectMediaOptionAutomaticallyInMediaSelectionGroup:
playerAppliesAutomaticMediaSelectionToGroup:
setRestrictsAutomaticMediaSelectionToAvailableOfflineOptions:
_isNonForcedSubtitleDisplayEnabled
_copyFigCPEProtector
_removeSyncLayer:
_addSyncLayer:
_playbackItemNotificationPayloadToError:
_hasEnabledAudio
setNetworkUsuallyExceedsMaxBitRate:
setAllowProgressiveSwitchUp:
setAllowProgressiveStartup:
setAllowProgressiveResume:
setIFramePrefetchTargetDimensions:
setPreferredPeakBitRateForExpensiveNetworks:
maximumBitRate
setMaximumBitRate:
preferredPeakPresentationSize
setPreferredPeakPresentationSize:
setPreferredMaximumResolutionForExpensiveNetworks:
setPreferredMinimumResolution:
_renderingSuppressionDidChangeForOutput:
setVideoApertureMode:
resetAudioBufferedAhead
_removeInterstitialEventCollector
_updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:
maximumTimePlayedToSinceLastSeek
_updateAllowedAudioSpatializationFormatsFromFigItem
_setPlaybackCoordinator:
_playerItem
isAuthorizationRequiredForPlayback
isApplicationAuthorizedForPlayback
isContentAuthorizedForPlayback
authorizationRequiredForPlayback
TB,R,N,GisAuthorizationRequiredForPlayback
applicationAuthorizedForPlayback
TB,R,N,GisApplicationAuthorizedForPlayback
contentAuthorizedForPlayback
TB,R,N,GisContentAuthorizedForPlayback
_isExternalProtectionRequiredForPlaybackInternal
_setExternalProtectionRequiredForPlayback:
_isRental
_rentalStartDate
_rentalExpirationDate
_isRentalPlaybackStarted
_rentalPlaybackStartedDate
_rentalPlaybackExpirationDate
_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:withOptions:
_uninitializeProtectedContentPlaybackSupportSession:
_externalProtectionRequiredForPlayback
TB,N,G_isExternalProtectionRequiredForPlayback,S_setExternalProtectionRequiredForPlayback:
_rental
TB,R,N,G_isRental
_rentalPlaybackStarted
TB,R,N,G_isRentalPlaybackStarted
initWithLogArray:
playerItem
_playerReference
_playerItemReference
_setRampInOutInfo:
_setAudibleDRMInfo:
_fileSize
_availableFileSize
dictionaryWithCapacity:
_figLegibleOutputsDictionaryOptions
_metadataOutputsForKeys
_figMetadataOutputsDictionaryOptions
videoCompositionOutputColorPropertiesWithCustomCompositor:formatDescriptions:colorPrimaries:transferFunction:yCbCrMatrix:
_pixelBufferAttributes
_addVideoOutput:
_addLegibleOutput:
_addMetadataOutput:
_setTimebase:
_detachFromPlayerItem
_removeVideoOutput:
_removeLegibleOutput:
_removeMetadataOutput:
removeOutput:
_addMetadataCollector:locked:
_removeMetadataCollector:locked:
mediaDataCollectors
_addMetadataCollector:
_removeMetadataCollector:
addMediaDataCollector:
removeMediaDataCollector:
_updateTaggedMetadataArray:
_legibleOutputForKey:
_pushAttributedStrings:andSampleBuffers:atItemTime:
_signalFlush
_figPlaybackItem:didOutputAttributedStrings:nativeSampleBuffers:atItemTime:withLegibleOutputsDictionaryKey:
_figPlaybackItem:didFlushLegibleOutputWithDictionaryKey:
_metadataOutputForKey:
_pushTimedMetadataGroups:fromPlayerItemTrack:
_figPlaybackItem:didOutputSampleBuffers:fromTrackWithID:forMetadataOutputWithDictionaryKey:
_figPlaybackItem:didFlushMetadataOutputWithDictionaryKey:
T@"<NSObject><NSCopying>",&
templatePlayerItem
T@"AVPlayerItem",R,N
figPlaybackItemIsReadyForInspection
videoFieldMode
videoEnhancementFilterOptions
enabled
enabledWasSet
disableColorMatching
disableColorMatchingWasSet
activeHapticChannelIndex
activeHapticChannelIndexWasSet
hapticVolume
hapticVolumeWasSet
sampleBufferOutputs
_initWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
_transferEnabledToFig
_figPlaybackItemIsReadyForInspection
_transferLoudnessInfoToFig
_transferVideoEnhancementOptionsToFig
_transferDisableColorMatchingToFig
_transferActiveHapticChannelIndexToFig
_transferHapticVolumeToFig
_extractionID
_updateTrackExtractionIDArrayProperty
setEnabled:
fallbackTrack
effectiveLoudnessInfo
effectiveEQPreset
willTrimShortDurationAudioSamples
setVideoEnhancementFilterOptions:
setDisableColorMatching:
setActiveHapticChannelIndex:
setHapticVolume:
_playerItemTrack
T@"AVAssetTrack",R,N
TB,N,GisEnabled
_setTrackID:
_setExtractionID:
_attachToPlayerItemTrack:figPlaybackItem:
_advanceInterval
_detachFromPlayerItemTrack
initWithItems:
queuePlayerWithItems:
_defaultActionAtItemEnd
advanceToNextItem
canInsertItem:afterItem:
removeAllItems
_queuePlayer
canOverlapPlaybackFromPlayerItem:toPlayerItem:
identifierName
derivedIdentifierCounter
characterAtIndex:
initWithSpecifiedName:
_specifiedLoggingIdentifier
initWithFormat:
mutableComposition
formatReaderInitializationOnce
assetInspectorInitializationOnce
tracksInitializationOnce
formatReader
assetInspectorLoader
URLAssetInitializationOptions
figAssetInitializationOnce
_createEmptyMutableCompositionIfNeeded
_initWithComposition:
initWithFormatReader:
initWithAssetInspector:
_loadAssetInspectorAndLoaderOnce
_newTrackForIndex:
_mutableTracks
_clientProvidesNaturalSize
_setNaturalSize:
_setURLAssetInitializationOptions:error:
_notifyTracksThatSegmentsWillChange:
_notifyTracksThatSegmentsDidChange:successfully:
insertTimeRange:ofAsset:atTime:error:
removeObjectAtIndex:
composition
compositionWithURLAssetInitializationOptions:
setNaturalSize:
setMetadata:
insertTimeRange:ofAsset:atTime:completionHandler:
insertEmptyTimeRange:
removeTimeRange:
scaleTimeRange:toDuration:
addMutableTrackWithMediaType:preferredTrackID:
removeTrack:
mutableTrackCompatibleWithTrack:
setSegments:
setNaturalTimeScale:
setLanguageCode:
setPreferredTransform:
setPreferredVolume:
setAlternateGroupID:
replaceFormatDescription:withFormatDescription:
formatDescriptionReplacements
originalFormatDescription
replacementFormatDescription
getCString:maxLength:encoding:
componentsFromLocaleIdentifier:
stringByReplacingOccurrencesOfString:withString:
compare:options:
lowercaseString
metadataIdentifiers
accumulationQueue
weakReferenceToHost
advanceInterval
accumulatedMetadataGroups
initWithIdentifiers:
_collectUncollectables
advanceIntervalForDelegateInvocation
setAdvanceIntervalForDelegateInvocation:
_metadataOutputInternal
T@"<AVPlayerItemMetadataOutputPushDelegate>",R,W,N
Td,N
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
figMetadataOutputsDictionaryOptions
T@"NSDictionary",R,N,G_figMetadataOutputsDictionaryOptions
initWithOriginalFormatDescription:andReplacementFormatDescription:
_originalFormatDescription
_replacementFormatDescription
Tr^{opaqueCMFormatDescription=},R
_notifyAssetThatDurationWillChange
_notifyAssetThatDurationDidChangeWithSuccess:
_setTrackReaderPropertyValue:forKey:
sourceURL
sourceTrackID
_notifySelfThatSegmentsWillChange
_notifySelfThatSegmentsDidChangeWithSuccess:
_updateTrackAssociationToTrack:type:operation:
insertTimeRange:ofTrack:atTime:error:
insertTimeRanges:ofTracks:atTime:error:
validateTrackSegments:error:
addTrackAssociationToTrack:type:
removeTrackAssociationToTrack:type:
Ti,N
T{CGAffineTransform=dddddd},N
Tf,N
T@"NSArray",C,N
initWithObject:notificationName:callbackBlock:
_object
_observerToken
_callback
_cancelMutex
subscribeRequestingInitialValue:block:
initWithObject:key:notificationName:
_key
_notificationName
initWithUpstream:transform:
_upstream
_transform
initWithUpstream:
_callbackMutex
_outputPublisherSubscription
_publisherIndex
_publisher
_sink
_token
style
formatTemplate
isFullWidth
isRightToLeft
cachedDateFormatterFormat
cachedDateFormatterTemplate
numberFormatterWithOneMinimumIntegerDigits
numberFormatterWithTwoMinimumIntegerDigits
decodeIntegerForKey:
decodeDoubleForKey:
encodeInteger:forKey:
encodeDouble:forKey:
setStyle:
setFullWidth:
setFormatTemplate:
stringFromSeconds:
stringFromTimeInterval:
currentLocale
setCachedDateFormatterFormat:
setCachedDateFormatterTemplate:
setNumberFormatterWithOneMinimumIntegerDigits:
setMinimumIntegerDigits:
setNumberStyle:
setNumberFormatterWithTwoMinimumIntegerDigits:
stringByAppendingFormat:
stringByAppendingString:
dateFormatFromTemplate:options:locale:
whitespaceAndNewlineCharacterSet
stringFromNumber:
stringFromCMTime:
stringForObjectValue:
getObjectValue:forString:errorDescription:
setIsRightToLeft:
fullWidth
TB,N,GisFullWidth
editAssetURL
editAssetTrackID
initWithURL:trackID:sourceTimeRange:targetTimeRange:
initWithTimeRange:
_initWithTimeMapping:
isEmpty
decodeInt32ForKey:
encodeInt32:forKey:
compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:
compositionTrackSegmentWithTimeRange:
empty
TB,R,N,GisEmpty
metadataWaitingSemaphore
mediaDataStorage
_movieTrackInternal
T{?={?=qiIq}{?=qiIq}},R,N
figMutableMovie
figAssetTrack
initWithTrackID:forMovie:
_figMutableMovie
_addFigAssetTrackNotifications
_removeFigAssetTrackNotifications
_stringForProperty:
_sizeForProperty:
_setString:forProperty:
_setSize:forProperty:
sampleReferenceBaseURL
trackWithTrackID:forMovie:
_signalMetadataUpdated
timescale
cleanApertureDimensions
productionApertureDimensions
encodedPixelsDimensions
isModified
preferredMediaChunkSize
preferredMediaChunkDuration
preferredMediaChunkAlignment
setSampleReferenceBaseURL:
setMediaDataStorage:
setTimescale:
setCleanApertureDimensions:
setProductionApertureDimensions:
setEncodedPixelsDimensions:
setLayer:
setModified:
setPreferredMediaChunkSize:
setPreferredMediaChunkDuration:
setPreferredMediaChunkAlignment:
_mutableMovieTrackInternal
T@"AVMediaDataStorage",C,N
T@"NSURL",C,N
modified
TB,N,GisModified
isCompatibleWithFormatDescription:
insertTimeRange:ofTrack:atTime:copySampleData:error:
appendSampleBuffer:decodeTime:presentationTime:error:
insertMediaTimeRange:intoTimeRange:
appendMediaData:dataOffset:
metadataEnumeratorWithMetadataReader:
removeObjectsInArray:
figAssetReader
readSingleSample
outputFinishedCallbackInvokers
errorThatOccurredBeforeStartReading
statusReadWriteQueue
initWithAsset:error:
UTF8String
_errorForOSStatus:
_tearDownFigAssetReader
_transitionToStatus:failureError:
_canAddOutput:exceptionReason:
_attachToWeakReferenceToAssetReader:
_outputDidFinish:
observationBlockForWeakObserver:passedToBlock:
startObservingValueAtKeyPath:ofObject:options:usingBlock:
_isFinished
_prepareForReadingReturningError:
_readSingleSample
_cancelReading
_failWithError:
canAddOutput:
_figAssetReader
T^{OpaqueFigAssetReader=},R,N,G_figAssetReader
TB,N,G_readSingleSample,S_setReadSingleSample:
T@"AVAsset",R,&,N
T{?={?=qiIq}{?=qiIq}},N
alwaysCopiesSampleData
supportsRandomAccess
currentTimeRanges
weakReferenceToAssetReader
extractionID
sampleBufferAvailabilityCondition
currentConfigurationIsFinal
extractionCompleteForCurrentConfiguration
finished
maximizePowerEfficiency
_setFigAssetReader:
_weakReferenceToAssetReader
_trimsSampleDurations
videoScalingProperties
colorPropertiesConsideringFormatDescriptions:colorPrimaries:transferFunction:ycbcrMatrix:
_enableTrackExtractionReturningError:
_markAsFinished
lock
signal
unlock
markConfigurationAsFinal
_updateTimeRangesOnFigAssetReaderReturningError:
_figAssetReaderVideoScalingPropertiesFromVideoSettings:withFormatDescription:
setAlwaysCopiesSampleData:
setMaximizePowerEfficiency:
setSupportsRandomAccess:
_figAssetReaderExtractionOptions
_figAssetReaderSampleBufferDidBecomeAvailableForExtractionID:
resetForReadingTimeRanges:
_figAssetReaderDecodeError
_figAssetReaderFailed
T@"AVWeakReference",R,N,G_weakReferenceToAssetReader
Ti,N,G_extractionID,S_setExtractionID:
figAssetReaderExtractionOptions
T@"NSDictionary",R,N,G_figAssetReaderExtractionOptions
trimsSampleDurations
TB,R,N,G_trimsSampleDurations
outputSettings
weakReferenceToAttachedAdaptor
initWithTrack:outputSettings:
_outputSettingsWithOutputSettingsDictionary:mediaType:exceptionReason:
compatibleMediaTypes
willYieldCompressedSamples
outputSettingsDictionary
componentsJoinedByString:
frameRateConversionAlgorithm
fieldMode
videoCodecType
width
height
videoEncoderSpecification
pixelTransferProperties
videoCompressionProperties
minimumFrameDuration
_formatDescriptions
getAudioStreamBasicDescription:forAudioFileTypeID:sourceFormatDescription:
copyAudioChannelLayoutForSourceFormatDescription:audioChannelLayoutSize:
audioOptions
_getUniformMediaSubtypeIfExists
_attachedAdaptor
_trackOutputInternal
attachedToAdaptor
TB,R,N,G_isAttachedToAdaptor
audioTracks
audioVolumeCurvesForTracks
audioTimePitchAlgorithmsForTracks
audioTapProcessorsForTracks
audioOutputSettings
initWithAudioTracks:audioSettings:
_audioOutputSettingsWithAudioSettingsDictionary:exceptionReason:
audioSettings
audioSettingsDictionary
_setAudioVolumeCurve:forTrack:
_setAudioTimePitchAlgorithm:forTrack:
_setAudioTapProcessor:forTrack:
_audioVolumeCurveForTrack:
_audioTimePitchAlgorithmForTrack:
_audioTapProcessorForTrack:
assetReaderAudioMixOutputWithAudioTracks:audioSettings:
_audioMixOutputInternal
T@"AVAudioMix",C,N
videoTracks
sampleDataTrackIDs
videoOutputSettings
initWithVideoTracks:videoSettings:
_videoOutputSettingsWithVideoSettingsDictionary:exceptionReason:
videoSettingsDictionary
_setVideoComposition:
_copyFigVideoCompositor
isValidForAsset:timeRange:validationDelegate:
_videoCompositionProcessorColorProperties
_hasLayerAsAuxiliaryTrack
_auxiliaryTrackLayer
_hasPostProcessingLayers
_postProcessingRootLayer
_auxiliaryTrackID
_postProcessingVideoLayers
videoSettings
_videoCompositionOutputInternal
initWithTrack:
assetReaderSampleReferenceOutputWithTrack:
_sampleReferenceOutputInternal
setURL:
mediaFileType
setMediaFileType:
movieFragmentInterval
setMovieFragmentInterval:
setOverallDurationHint:
shouldOptimizeForNetworkUse
setShouldOptimizeForNetworkUse:
directoryForTemporaryFiles
setDirectoryForTemporaryFiles:
metadataItems
setMetadataItems:
movieTimeScale
setMovieTimeScale:
setPreferredRate:
singlePassFileSize
setSinglePassFileSize:
singlePassMediaDataSize
setSinglePassMediaDataSize:
inputs
setInputs:
inputGroups
setInputGroups:
preferredOutputSegmentInterval
setPreferredOutputSegmentInterval:
initialSegmentStartTime
setInitialSegmentStartTime:
outputFileTypeProfile
setOutputFileTypeProfile:
initialMovieFragmentSequenceNumber
setInitialMovieFragmentSequenceNumber:
producesCombinableFragments
setProducesCombinableFragments:
usesVirtualCaptureCard
setUsesVirtualCaptureCard:
_delegate
_mediaFileType
_movieFragmentInterval
_overallDurationHint
_shouldOptimizeForNetworkUse
_directoryForTemporaryFiles
_metadataItems
_movieTimeScale
_preferredTransform
_preferredVolume
_preferredRate
_singlePassFileSize
_singlePassMediaDataSize
_inputs
_inputGroups
_preferredOutputSegmentInterval
_initialSegmentStartTime
_outputFileTypeProfile
_initialMovieFragmentSequenceNumber
_producesCombinableFragments
_usesVirtualCaptureCard
T@"NSURL",C,N,V_URL
T@"<AVAssetWriterDelegate>",W,V_delegate
T@"AVMediaFileType",C,N,V_mediaFileType
T{?=qiIq},N,V_movieFragmentInterval
T{?=qiIq},N,V_overallDurationHint
TB,N,V_shouldOptimizeForNetworkUse
T@"NSURL",C,N,V_directoryForTemporaryFiles
T@"NSArray",C,N,V_metadataItems
Ti,N,V_movieTimeScale
T{CGAffineTransform=dddddd},N,V_preferredTransform
Tf,N,V_preferredVolume
Tf,N,V_preferredRate
Tq,N,V_singlePassFileSize
Tq,N,V_singlePassMediaDataSize
T@"NSArray",C,N,V_inputs
T@"NSArray",C,N,V_inputGroups
T{?=qiIq},N,V_preferredOutputSegmentInterval
T{?=qiIq},N,V_initialSegmentStartTime
T@"NSString",C,N,V_outputFileTypeProfile
Tq,N,V_initialMovieFragmentSequenceNumber
TB,N,V_producesCombinableFragments
TB,N,V_usesVirtualCaptureCard
helper
helperReadWriteQueue
keyPathDependencyManager
finishWritingDelegate
initWithURL:fileType:error:
_initInternalObject
_mediaFileTypeWithFileTypeIdentifier:exceptionReason:
initWithURL:fileType:
setWeakReferenceToAssetWriter:
outputURL
outputFileType
_setHelper:ifCurrentHelper:withBlock:
_helper
availableMediaTypes
supportsSampleReferences
automaticallyNotifiesObserversForKey:
assetWriter:didProduceFragmentedHeaderData:
assetWriter:didProduceFragmentedMediaData:fragmentedMediaDataReport:
isVirtualCaptureCardSupported
canApplyOutputSettings:forMediaType:
canAddInput:
addInput:
canAddInputGroup:
addInputGroup:
startWriting
startSessionAtSourceTime:
endSessionAtSourceTime:
cancelWriting
finishWriting
finishWritingWithCompletionHandler:
transitionToFailedStatusWithError:
assetWriter:didOutputSegmentData:segmentType:segmentReport:
assetWriter:didOutputSegmentData:segmentType:
flushSegment
assetWriterWithURL:fileType:error:
initWithContentType:
initWithFileType:error:
_setHelper:ifCurrentHelper:
_supportsSampleReferencesReturningError:
setWritesSinglePassUsingPredeterminedFileSize:mediaDataSize:
setFinishWritingDelegate:
_transitionToFailedStatusWithError:
T@"AVAssetWriterHelper",R,&,G_helper
initWithConfigurationState:
setDefaultPropertyValuesToConfigurationState:outputURL:fileType:
configurationState
_outputSettingsObject
_canApplyOutputSettings:forMediaType:sourceFormat:exceptionReason:
_canApplyTrackReferences:exceptionReason:
_canAddInput:exceptionReason:
weakReferenceToAssetWriter
_setWeakReferenceToAssetWriter:
setWithArray:
provisionalInputs
intersectsSet:
_canAddInputGroup:exceptionReason:
defaultInput
setMarksOutputTrackAsEnabled:
_setAlternateGroupID:
_setProvisionalAlternateGroupID:
initWithConfigurationState:assetWriter:error:
_transitionToClientInitiatedTerminalStatus:
_alternateGroupID
_weakReferenceToDelegate
_setWeakReferenceToDelegate:
_teardownNotificationHandlers
didReceiveFigAssetWriterNotificationWithSuccess:error:
_callDelegateIfNotCalledWithSuccess:error:
initWithFigAssetWriter:
_handleCompletedWritingNotification
_handleFailedNotificationWithError:
_figAssetWriter
_didNotCallDelegate
_notificationHandlersAreRegistered
weakReferenceToDelegate
T@"AVWeakReference",&,G_weakReferenceToDelegate,S_setWeakReferenceToDelegate:,V_weakReferenceToDelegate
T@"<AVAssetWriterFigAssetWriterNotificationHandlerDelegate>",W
figFragmentedMediaDataReportDict
initWithFigFragmentedMediaDataReportDictionary:
numberOfBytesToEndOfFirstVideoFrame
pathExtension
checkConfigurationToOutputSegmentDataReturningDebugDescription:
figFormatReaderFileFormat
figFileTypeProfileFromAVFileTypeProfile:
expectsMediaDataInRealTime
_prepareForWritingWithFigAssetWriter:mediaFileType:error:
figTrackReferences
checkAVAssetWriterInputConfigurationToOutputSegmentDataForOutputFileTypeProfile:preferredOutputSegmentInterval:returningDebugDescription:
outputTrackID
keyEnumerator
_retainedFigAssetWriter
_didStartInitialSession
_prepareToEndSession
removeItemAtURL:error:
currentThread
mainThread
initWithBlock:
_makeFinishWritingOperationsWithCustomFigAssetWriterFinishOperation:
_transitionToFinishWritingHelperWithFinishWritingOperations:
setName:
addOperations:waitUntilFinished:
addOperation:
waitUntilFinished
defaultQueue
setCompletionBlock:
enqueueOperation:
finishWritingDelegateOperationWithAssetWriter:andFigAssetWriter:andDelegate:
prepareInputsOperationsWithInputs:
finalStepWorkaroundOperationWithFigAssetWriter:
addDependency:
initWithConfigurationState:finishWritingOperations:figAssetWriterCallbackContextToken:
transitionToTerminalStatusOperation
_prepareToFinishWritingReturningError:
assetWriterInput:shouldReplaceFormatDescription:replacementFormatDescription:
initWithConfigurationState:assetWriter:
_figAssetWriterAccessQueue
_startSessionCalled
_notificationHandler
_figAssetWriterCallbackContextToken
dependencies
isFinished
isReady
_finishWritingOperationsDidFinish
blockOperationWithBlock:
statusOfOperations:error:
_finishWritingOperations
_transitionToTerminalStatusOperation
T@"NSOperation",R,N,V_transitionToTerminalStatusOperation
evaluateDependenciesAndMarkAsExecuting
markAsCancelled
isAsynchronous
start
didEnterTerminalState
initWithConfigurationState:terminalError:
_terminalError
initWithConfigurationState:terminalStatus:
_terminalStatus
supportedMediaTypes
supportsFormat:
supportsOutputSettings:reason:
_transitionToTerminalStatus:
_configurationState
_weakReferenceToAssetWriter
T@"AVAssetWriterConfigurationState",R,N,V_configurationState
T@"AVWeakReference",&,V_weakReferenceToAssetWriter
T@"AVMediaFileType",R,N
T@"<AVAssetWriterDelegate>",W
virtualCaptureCardSupported
TB,R,N,GisVirtualCaptureCardSupported
initWithInputs:defaultInput:
_startObservingInputPropertiesThatMayChangeValueOfOptions
_stopObservingInputPropertiesThatMayChangeValueOfOptions
assetWriterInputSelectionOptionWithAssetWriterInput:displaysNonForcedSubtitles:
assetWriterInputSelectionOptionWithAssetWriterInput:
initWithInputs:provisionalInputs:defaultInput:
getBytes:length:
assetWriterInputGroupWithInputs:defaultInput:
assetWriterInputGroupWithInputs:provisionalInputs:defaultInput:
initWithAssetWriterInput:displaysNonForcedSubtitles:
marksOutputTrackAsEnabled
_hasEqualValueForKey:asObject:
_taggedCharacteristics
dataWithBytes:length:
_ancillaryDescription
mediaSubTypes
_isAuxiliaryContent
_isDesignatedDefault
associatedMediaSelectionOptionInMediaSelectionGroup:
displaysNonForcedSubtitles
_input
_outputSettings
_sourceFormatHint
_languageCode
_extendedLanguageTag
_metadata
_displaysNonForcedSubtitles
_enabled
T@"NSString",R,N,V_mediaType
T@"NSDictionary",R,N,V_outputSettings
T^{opaqueCMFormatDescription=},R,N,V_sourceFormatHint
T@"NSString",R,N,V_languageCode
T@"NSString",R,N,V_extendedLanguageTag
T@"NSArray",R,N,V_metadata
T@"NSDictionary",R,N,V_trackReferences
TB,R,N,V_displaysNonForcedSubtitles
T@"AVAssetWriterInput",R,N,V_input
initWithFigSegmentReportDictionary:
isEqualToSet:
_endSuspension:
_endSuspension:proposingNewTime:
initWithCoordinator:reason:
_figSuspension
endProposingNewTime:
beginDate
_reason
_coordinator
_beginDate
_iVarMutex
T@"NSString",R,N,V_reason
T@"NSDate",R,N,V_beginDate
isReadyToPlay
suspensionReasons
initWithParticipantIdentifier:readyToPlay:suspensionReasons:
_suspensionReasons
_readyToPlay
_identifier
T@"NSArray",R,N,V_suspensionReasons
readyToPlay
TB,R,N,GisReadyToPlay,V_readyToPlay
T@"NSUUID",R,N,V_identifier
beginSuspensionForReason:
expectedItemTimeAtHostTime:
setParticipantLimit:forWaitingOutSuspensionsWithReason:
participantLimitForWaitingOutSuspensionsWithReason:
setSuspensionReasonsThatTriggerWaiting:
suspensionReasonsThatTriggerWaiting
setPauseSnapsToMediaTimeOfOriginator:
pauseSnapsToMediaTimeOfOriginator
_currentWaitingPoliciesArray
_updateSuspensionReasons:
_updateOtherParticipantsUsingFigParticipantUUIDs:
_removeFigPlaybackCoordinatorListeners
_addFigPlaybackCoordinatorListeners:
currentSuspensions
_setMediumCallbacksOnFigPlaybackCoordinator:
coordinationMediumDelegate
localParticipantUUIDForPlaybackCoordinator:
_setLocalParticipantUUID:onFigPlaybackCoordinator:
_setWaitingPolicies:onFigPlaybackCoordinator:
trackedTransportControlStateDictionaries
participantStates
playbackCoordinator:identifierForPlayerItem:
playbackCoordinator:interstitialTimeRangesForPlayerItem:
setIsExpanseMediaSession:error:
avfParticipantsForFigParticipantsUUIDs:
_setIsInExpanseMediaPlaybackOnAVAudioSession
objectAtIndexedSubscript:
_removeAllTransportControlStates
_removeAllParticipantStates
compare:
_updateTransportControlStateDictionaryWithTransportControlState:
_transportControlStateForItemIdentifier:
_updateParticipantStateDictionaryWithParticipantState:
_removeUnusedTransportControlStates
_participantStateForIdentifier:
_replaceParticipantStates:
_removeParticipantStateWithIdentifier:
_synchronizeFigPlayerEvents
_updateWaitingPoliciesArrayWithPolicies:
_doesSuspensionReasonTriggerWaiting:
figPlaybackCoordinatorConfigQueue
setCoordinationMediumDelegate:
setMediumLoggingIdentifier:
mediumLoggingIdentifier
handleNewTransportControlStateDictionary:
handleNewParticipantStateDictionary:
handleReplacementParticipantStateDictionaries:
handleRemovalOfParticipant:
_weakPlayer
_figPlaybackCoordinatorConfigQueue
_figPlaybackCoordinator
_otherParticipants
_controlStates
_participantStates
_participantLimitPerSuspensionReason
_suspensionReasonsThatTriggerWaiting
_pauseSnapsToMediaTimeOfOriginator
_waitingPoliciesArray
_currentSuspensions
_suspensionsChangedNotificationToken
_participantsChangedNotificationToken
_didIssueCommandToPlaybackObjectNotificationToken
_coordinationMediumDelegate
_isInExpanseMediaPlayback
_mediumLoggingIdentifier
T@"<AVPlayerPlaybackCoordinatorDelegate>",W
playbackCoordinator:broadcastTransportControlStateDictionary:forItemWithIdentifier:
playbackCoordinator:broadcastLocalParticipantStateDictionary:
playbackCoordinator:reloadTransportControlStateForItemWithIdentifier:completionHandler:
setParentAuthorizationSession:
outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
outputDevice
authorizationTokenType
outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
sharedAuthorizationSession
initWithOutputDeviceAuthorizationSessionImpl:
outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:
outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:
outputDeviceAuthorizationSessionImplDidExpireWithReplacementImpl:
_ivars
T@"<AVOutputDeviceAuthorizationSessionDelegate>",W
respondWithAuthorizationToken:completionHandler:
initWithOutputDeviceAuthorizationRequestImpl:
T@"AVOutputDevice",R,N
setOutputSettings:
setSourceFormatHint:
sourcePixelBufferAttributes
setSourcePixelBufferAttributes:
transform
setTransform:
mediaTimeScale
setMediaTimeScale:
setExpectsMediaDataInRealTime:
setProvisionalAlternateGroupID:
setTrackReferences:
performsMultiPassEncodingIfSupported
setPerformsMultiPassEncodingIfSupported:
mediaDataLocation
setMediaDataLocation:
_trackID
_sourcePixelBufferAttributes
_mediaTimeScale
_expectsMediaDataInRealTime
_naturalSize
_marksOutputTrackAsEnabled
_layer
_provisionalAlternateGroupID
_performsMultiPassEncodingIfSupported
_chunkDuration
_chunkAlignment
_chunkSize
_mediaDataLocation
_sampleReferenceBaseURL
_maximizePowerEfficiency
T@"NSString",C,N,V_mediaType
T@"AVOutputSettings",C,N,V_outputSettings
T^{opaqueCMFormatDescription=},&,N,V_sourceFormatHint
Ti,N,V_trackID
T@"NSDictionary",C,N,V_sourcePixelBufferAttributes
T{CGAffineTransform=dddddd},N,V_transform
Ti,N,V_mediaTimeScale
TB,N,V_expectsMediaDataInRealTime
T{CGSize=dd},N,V_naturalSize
T@"NSString",C,N,V_languageCode
T@"NSString",C,N,V_extendedLanguageTag
TB,N,V_marksOutputTrackAsEnabled
Tq,N,V_layer
Ts,N,V_alternateGroupID
Ts,N,V_provisionalAlternateGroupID
T@"NSDictionary",C,N,V_trackReferences
TB,N,V_performsMultiPassEncodingIfSupported
T{?=qiIq},N,V_chunkDuration
Tq,N,V_chunkAlignment
Tq,N,V_chunkSize
T@"NSString",C,N,V_mediaDataLocation
T@"NSURL",C,N,V_sampleReferenceBaseURL
TB,N,V_maximizePowerEfficiency
helperQueue
numberOfAppendFailures
markAsFinishedCalled
appendFailureReadWriteQueue
passDescriptionResponder
initWithMediaType:outputSettings:
initWithMediaType:outputSettings:sourceFormatHint:
canFullySpecifyOutputFormatReturningReason:
setWeakReferenceToAssetWriterInput:
pixelBufferPool
encoderIsAvailableOnCurrentSystemReturningError:
formatSpecificationWithOutputSettings:sourceFormatDescription:
assetWriterTrackWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:attachedAdaptor:error:
setSampleBufferCoalescingInterval:
initWithConfigurationState:assetWriterTrack:error:
_setHelper:
didStartInitialSession
prepareToEndSession
prepareToFinishWritingReturningError:
transitionToAndReturnTerminalHelperWithTerminalStatus:
canPerformMultiplePasses
currentPassDescription
canStartRespondingToEachPassDescriptionReturningReason:
initWithCallbackQueue:block:
shouldRespondToInitialPassDescription
respondToNewPassDescription:
appendSampleBuffer:error:
appendPixelBuffer:withPresentationTime:
stopRespondingToPassDescriptions
markAsFinished
markCurrentPassAsFinished
canAddTrackAssociationWithTrackOfInput:type:
addTrackAssociationWithTrackOfInput:type:
associatedInputsWithTrackAssociationType:
assetWriterInputWithMediaType:outputSettings:
assetWriterInputWithMediaType:outputSettings:sourceFormatHint:
writesMediaDataToBeginningOfFile
setWritesMediaDataToBeginningOfFile:
_pixelBufferPool
_setSourcePixelBufferAttributes:
respondToEachPassDescriptionOnQueue:usingBlock:
appendSampleBuffer:
_appendPixelBuffer:withPresentationTime:
_markAsFinishedCalled
TB,R,G_markAsFinishedCalled
T@"AVAssetWriterInputHelper",&,N,G_helper,S_setHelper:
T@"NSDictionary",C,N,G_sourcePixelBufferAttributes,S_setSourcePixelBufferAttributes:
T^{__CVPixelBufferPool=},R,N,G_pixelBufferPool
outputSettingsObject
T@"AVOutputSettings",R,N,G_outputSettingsObject
Tq,R,N,G_status
T@"AVWeakReference",&,N,G_weakReferenceToAssetWriter,S_setWeakReferenceToAssetWriter:
Ts,N,G_alternateGroupID,S_setAlternateGroupID:
Ts,N,G_provisionalAlternateGroupID,S_setProvisionalAlternateGroupID:
T@"NSDictionary",R,N,G_trackReferences
Tr^{opaqueCMFormatDescription=},R,N
TB,R,N,GisReadyForMoreMediaData
_validateLanguageCode:
_canAddTrackAssociationWithTrackOfInput:type:exceptionReason:
keyPathsForValuesAffectingCanPerformMultiplePasses
setFormatDescriptions:
setFigMetadata:
setExcludeFromAutoSelection:
setFigTrackMatrix:
setFigDimensions:
setTrackVolume:
setPreferredChunkDuration:
setPreferredChunkAlignment:
setPreferredChunkSize:
initWithTimeRanges:
_assetWriterTrack
encoderSupportsMultiPass
isAboveHighWaterLevel
initWithRequestQueue:requestBlock:
_startObservingReadyForMoreMediaDataKeyPath
_nudgeMediaDataRequesterIfAppropriate:
_stopObservingReadyForMoreMediaDataKeyPath
requestQueue
requestMediaDataIfNecessary
weakReferenceToAssetWriterInput
beginPassIfAppropriate
beginPassReturningError:
transitionAssetWriterAndAllInputsToFailedStatusWithError:
addSampleBuffer:error:
addPixelBuffer:atPresentationTime:error:
markEndOfDataReturningError:
initWithWritingHelper:
startPassAnalysis
markAsFinishedAndTransitionCurrentHelper:
requestMediaDataOnceIfNecessaryWithMediaDataRequester:
mediaDataRequesterShouldRequestMediaData
setCurrentPassDescription:
_mediaDataRequester
_observingSelf
_currentPassDescription
_keyPathDependencyManager
_mediaDataRequesterSerialQueue
_readyForMoreMediaDataObserverSerialQueue
assetWriterTrack
T@"AVFigAssetWriterTrack",R,N,G_assetWriterTrack,V_assetWriterTrack
T@"AVAssetWriterInputPassDescription",&,N,V_currentPassDescription
endPassWithCompletionHandler:
_writingHelper
_initialPassDescription
_didRequestMediaDataOnce
_weakReferenceToAssetWriterInput
T@"AVAssetWriterInputConfigurationState",R,N,V_configurationState
T@"AVWeakReference",&,V_weakReferenceToAssetWriterInput
T@"AVOutputSettings",R,N
T^{opaqueCMFormatDescription=},R,N
Ts,N
T@"AVAssetWriterInputPassDescription",R,N
T^{__CVPixelBufferPool=},R,N
initWithAssetWriterInput:sourcePixelBufferAttributes:
assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:
initWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:error:
_attachToFigAssetWriterUsingFormatSpecification:sourcePixelBufferAttributes:multiPass:error:
_refreshAboveHighWaterLevel
figAssetWriter
initWithFigAssetWriter:trackID:
descriptionForNextPass
_figAssetWriterDidDropBelowLowWaterLevelForTrackID:
sampleBufferCoalescingInterval
_aboveHighWaterLevelQueue
_aboveHighWaterLevel
_sampleBufferCoalescingInterval
_operationQueue
T^{OpaqueFigAssetWriter=},R,N,V_figAssetWriter
T@"AVMediaFileType",R,N,V_mediaFileType
Ti,R,N,V_trackID
aboveHighWaterLevel
TB,R,GisAboveHighWaterLevel
T{?=qiIq},N,V_sampleBufferCoalescingInterval
sourceFormatDescription
audioFileTypeID
_flushPendingSampleBuffersReturningError:
_pendingAudioSampleBuffers
_collectUncollectables_invokedFromDeallocAndFinalize
_requestQueue
_requestBlock
T@"NSObject<OS_dispatch_queue>",R,N,V_requestQueue
T@"<AVAssetWriterInputMediaDataRequesterDelegate>",W
_hasStoppedResponding
_releaseAndClearCallbackBlock_invokeOnSerializationQueue
_callbackQueue
_stoppedResponding
_serializationQueue
_hasRespondedAtLeastOnce
_mostRecentPassDescription
_callbackBlock
_notifyWhetherMorePassesAreNeeded:timeRanges:forTrackWithID:
_nextPassDescription
T@"AVAssetWriterInputPassDescription",R,N,V_nextPassDescription
timeRanges
sourceTimeRanges
bytes
backgroundColor
layerInstructions
enablePostProcessing
blendingTransferFunction
requiredSourceSampleDataTrackIDs
setVersion:
setEnablePostProcessing:
_setValuesFromDictionary:
dictionaryRepresentation
setLayerInstructions:
setRequiredSourceSampleDataTrackIDs:
dictionaryRepresentationWithTimeRange:
_setValuesFromDictionary:timeRange:
containsTweening
requiredSourceTrackIDs
passthroughTrackID
setBlendingTransferFunction:
_instruction
T^{CGColor=},R,&,N
videoCompositionInstruction
_mutableInstruction
T^{CGColor=},&,N
transformRamps
opacityRamps
cropRectangleRamps
_setTransformRamps:
_setOpacityRamps:
_setCropRectangleRamps:
insertObject:atIndex:
_setTransformRampFromStartTransform:toEndTransform:timeRange:selector:
_setOpacityRampFromStartOpacity:toEndOpacity:timeRange:selector:
_setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:selector:
setTransform:atTime:
setOpacity:atTime:
setCropRectangle:atTime:
setTransformRampFromStartTransform:toEndTransform:timeRange:
setOpacityRampFromStartOpacity:toEndOpacity:timeRange:
setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:
getTransformRampForTime:startTransform:endTransform:timeRange:
getOpacityRampForTime:startOpacity:endOpacity:timeRange:
getCropRectangleRampForTime:startCropRectangle:endCropRectangle:timeRange:
_layerInstruction
videoCompositionLayerInstructionWithAssetTrack:
videoCompositionLayerInstruction
_mutableLayerInstruction
changeSeed
builtInCompositorName
customCompositorClass
colorPrimaries
colorYCbCrMatrix
colorTransferFunction
instructions
auxiliaryTrackLayerSetLast
sourceSampleDataTracks
videoCompositionWithPropertiesOfAsset:
videoCompositionWithPropertiesOfAsset:videoGravity:
setBuiltInCompositorName:
customVideoCompositorClass
setCustomVideoCompositorClass:
setFrameDuration:
setSourceTrackIDForFrameTiming:
setRenderSize:
setRenderScale:
setColorPrimaries:
setColorYCbCrMatrix:
setColorTransferFunction:
setInstructions:
setAnimationTool:
setSourceSampleDataTrackIDs:
sessionWithVideoComposition:recyclingSession:
videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:
renderContextChanged:
startVideoCompositionRequest:
requiredPixelBufferAttributesForRenderContext
cancelAllPendingVideoCompositionRequests
anticipateRenderingUsingHint:
prerollForRenderingUsingHint:
supportsWideColorSourceFrames
supportsHDRSourceFrames
canConformColorOfSourceFrames
videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:
videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:
videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:
videoCompositionWithPropertiesOfAsset:completionHandler:
_bumpChangeSeed
_postProcessingVideoLayer
instructionForFigInstruction:
determineValidityForAsset:timeRange:validationDelegate:completionHandler:
_setFrameDurationForFrameRate:sourceTrackIDForFrameTiming:
_videoComposition
T#,R,N
T@"AVVideoCompositionCoreAnimationTool",R,&,N
initWithTimeRange:sourceTrackIDs:handler:
setSourceTrackPreferredTransform:
_mutableVideoCompositionWithAsset:applyingCIFiltersWithHandler:
videoCompositionWithAsset:applyingCIFiltersWithHandler:
videoCompositionWithAsset:applyingCIFiltersWithHandler:completionHandler:
videoCompositionWithPropertiesOfAsset:prototypeInstruction:
videoCompositionWithPropertiesOfAsset:prototypeInstruction:completionHandler:
sortedArrayUsingFunction:context:
_mutableVideoComposition
T#,&,N
T@"AVVideoCompositionCoreAnimationTool",&,N
initWithMagicTrackID:animationLayer:videoLayers:
videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:inLayer:
_videoCompositionTool
animationLayer
auxiliaryTrackID
postProcessingVideoLayers
unusedTrackID
findUnusedTrackIDWithCompletionHandler:
figExportSession
audioTrackGroupHandling
metadataItemFilter
handler
initWithAsset:presetName:
presetName
allExportPresets
exportPresetsCompatibleWithAsset:
determineCompatibilityOfExportPreset:withAsset:outputFileType:completionHandler:
exportSessionWithAsset:presetName:
maximumDurationForPreset:properties:
estimatedOutputFileLengthForPreset:duration:properties:
keyPathsForValuesAffectingEstimatedOutputFileLength
estimateMaximumDurationWithCompletionHandler:
estimateOutputFileLengthWithCompletionHandler:
supportedFileTypes
determineCompatibleFileTypesWithCompletionHandler:
setOutputFileType:
setOutputURL:
progress
AVExportSessionExportAsynchronouslyCompletionHandler
exportAsynchronouslyWithCompletionHandler:
cancelExport
maxDuration
setMinVideoFrameDuration:
minVideoFrameDuration
setVideoFrameRateConversionAlgorithm:
videoFrameRateConversionAlgorithm
setPreserveSyncFrames:
preserveSyncFrames
estimatedOutputFileLength
setMetadataItemFilter:
fileLengthLimit
setFileLengthLimit:
setAudioTrackGroupHandling:
canPerformMultiplePassesOverSourceMediaData
setCanPerformMultiplePassesOverSourceMediaData:
_exportSession
_threadSafetyQ
_trackIDsNotProvidingMedia
_allowableMIMETypes
_figManifold
_typeIdOfInitialFigManifold
_accumulatedInitializationData
_encounteredStreamDiscontinuity
_legacyStreamSession
_defaultContentKeySession
_contentKeySession
_sessionKeyRequest
_startedUsingInternalContentKeySession
_currentTrackID
_tracksBecomingReadyByTrackID
_samplesBeforeReady
_samplesBeforeReadyTotalSize
_samplesBeforeReadyTotalDuration
_trackDecryptorsByTrackID
_trackFormatDescriptionsByTrackID
_unregisterForFigManifoldCallbacksForTrackID:
_willDeallocOrFinalize
appendStreamData:withFlags:
setStatus:
streamDataParser:didFailToParseStreamDataWithError:
_fullListOfAllowableMIMETypes
status2
_createFigManifoldWithBlockBuffer:manifold:
providePendingMediaData
_appendStreamData:withFlags:
_setError:
_createBlockBufferUsingNSData:withOffset:withLength:
inspectionOnlyAssetWithFigAsset:
inspectionOnlyAssetWithStreamDataParser:tracks:
streamDataParser:didParseStreamDataAsAsset:withDiscontinuity:
_figManifold:pushedSampleBuffer:trackID:flags:
canParseExtendedMIMEType:
appendStreamData:
setAllowableMIMETypes:
allowableMIMETypes
fullListOfAllowableMIMETypes
setShouldProvideMediaData:forTrackID:
shouldProvideMediaDataForTrackID:
_createAssetIfNecessary
_parser
T@"<AVStreamDataParserOutputHandling>",R,N
outputMIMECodecParameterForInputMIMECodecParameter:
dataWithBytesNoCopy:length:freeWhenDone:
copyAssetWithReplacementFormatDescription:forTrackID:
streamDataParser:didProvideMediaData:forTrackID:mediaType:flags:
copyAssetRemovingTrackID:
streamDataParser:didReachEndOfTrackWithTrackID:mediaType:
streamDataParser:didProvideContentKeySpecifier:forTrackID:
initForKeySystem:initializationData:
streamDataParserWillProvideContentKeyRequestInitializationData:forTrackID:
streamDataParser:didProvideContentKeyRequestInitializationData:forTrackID:
initWithKeySystem:storageDirectoryAtURL:internal:
copyCryptorForInitializationData:
issueContentKeyRequestForInitializationData:
createCryptorIfNecessaryForInitializationData:formatDescription:error:
formatDescriptionsForTrackID:
_registerForFigManifoldCallbacksForTrackID:
copyAssetWithAdditionalTrackID:mediaType:
_WebVTTIsAllowed
_MovieFragmentStreamIsAllowed
_MPEG2TSIsAllowed
_ICYIsAllowed
_figManifold:trackDidEnd:
_figManifold:formatDescription:orDecryptorDidChange:forTrackID:
_figManifoldAllNewTracksReady:
_figManifold:discoveredNewTrackID:mediaType:
_createNSDataWithBlockBuffer:
initializationData
contentKeySession:didProvideContentKeyRequest:
contentProtectionSessionIdentifier
setFigCPEProtectorSessionIdentifier:
contentKeySession:didProvideContentKeyRenewalRequest:
contentKeySessionContentProtectionSessionIdentifierDidChange:
contentKeySession:didProvideRenewingContentKeyRequest:
contentKeySession:didProvidePersistableContentKeyRequest:
contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:
contentKeySession:contentKeyRequest:didFailWithError:
contentKeySession:shouldRetryContentKeyRequest:reason:
contentKeySession:contentKeyRequestDidSucceed:
contentKeySessionDidGenerateExpiredSessionReport:
streamDataParsers
contentKeyResponseWithFairPlayStreamingKeyResponseData:
processContentKeyResponse:
processContentKeyResponseError:
renewExpiringContentKeyResponseData
setAppIdentifier:
contentKeyRequestDataForApp:contentIdentifier:options:error:
processContentKeyResponseData:forTrackID:
processContentKeyResponseError:forTrackID:
renewExpiringContentKeyResponseDataForTrackID:
streamingContentKeyRequestDataForApp:contentIdentifier:trackID:options:error:
T@"NSData",R
hasProtector
base64EncodedStringWithOptions:
_requestMediaDataIfReady
_setInvalidatePending
_isInvalidatePending
requestBlock
_mediaDataConsumer
_invalidateMutex
_invalidatePending
T@?,R,N,V_requestBlock
initWithDeviceID:channelUUID:syncController:
initWithOutputDeviceCommunicationChannelImpl:
_saveCommChannel:forUUID:
parentOutputDevice
communicationChannelManager:didReceiveData:fromCommunicationChannel:
communicationChannelManager:didCloseCommunicationChannel:
openCommunicationChannelWithOptions:completionHandler:
setParentOutputDevice:
T@"AVOutputDevice",W
initWithDeviceID:syncController:
_didReceiveData:fromDeviceWithID:fromChannelWithUUID:
_didCloseCommChannelWithUUID:forDeviceWithID:
_parentOutputDevice
_deviceID
_communicationChannelsForUUIDs
T@"AVOutputDevice",W,V_parentOutputDevice
_commChannelUUID
oldPlayerItems
setPlayerItem:
setInheritsTiming:
_popAllOldPlayerItems
_removeSelfFromPlayerItem:
_isVisible
_updatePlayerItemState
synchronizedLayerWithPlayerItem:
_syncLayer
T@"AVPlayerItem",&,N
MACAddress
communicationChannelDelegate
commChannelManager
initWithOutputDeviceImpl:commChannelManager:
deviceID
openCommunicationChannelToDestination:options:completionHandler:
sharedSystemRemotePoolContext
outputDevice:didReceiveData:fromCommunicationChannel:
outputDevice:didCloseCommunicationChannel:
updateFrecencyListForDeviceID:
frecencyScoreForDeviceID:
deviceName
hasBatteryLevel
modelSpecificInformation
setCurrentBluetoothListeningMode:
setCommunicationChannelDelegate:
configureUsingBlock:completionHandler:
updateFrecencyScore
_outputDevice
_frecentsReaderAfterMigrationIfNecessary
_frecentsWriter
deviceIDs
frecencyInfoForDeviceWithID:
timeIntervalSinceDate:
setFrecencyInfo:forDeviceID:
removeFrecencyInfoForDeviceID:
numberOfKeysToBeSet
persistToDiskReturningError:
stringWithCString:encoding:
_applicationSupportPath
stringByAppendingPathComponent:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_frecentsContainerPath
stringByAbbreviatingWithTildeInPath
sharedExecutionEnvironment
platformIdentifier
_frecentsFilePath
initWithFrecentsFilePath:error:
_migrateFrecentsFromCFPreferencesToFrecentsFilePath:
defaultFrecentsReader
defaultFrecentsWriter
initWithFrecentsFilePath:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
_frecents
writeToFile:options:error:
_updatedFrecentsList
_keysToRemove
publicKey
isAdmin
initWithID:publicKey:hasAdministratorPrivileges:
peerID
isEqualToData:
hasAdministratorPrivileges
playing
productName
pairedDeviceID
pairedDevicesConnectedToOutputDevice:
initWithName:ID:modelID:playing:productName:
isPlaying
TB,R,N,GisPlaying
_implSupportEventListener
T@"<AVOutputDeviceImplSupport>",W,V_implSupportEventListener
communicationChannel:didReceiveData:
communicationChannelDidClose:
T@"<AVOutputDeviceCommunicationChannelDelegate>",W
_deviceType
_deviceSubType
_isClusterLeader
_modelID
_deviceName
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_deviceID
Tq,R,N,V_deviceType
Tq,R,N,V_deviceSubType
TB,R,N,V_isClusterLeader
T@"NSString",R,N,V_modelID
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
isMainThread
typeWithFilenameExtension:
preferredFilenameExtension
stringByDeletingPathExtension
stringByAppendingPathExtension:
_web_errorWithDomain:code:URL:
localizedName
localizedDescription
stringWithValidatedFormat:validFormatSpecifiers:error:
_setContentLayerOnFigVideoQueue:
_readOnlyVideoQueueTimebase
_createVideoQueue:errorStep:
_isCreateVideoQueueErrorRetryable:
_copyVideoQueue
_setStatus:error:
_initializeTimebases
currentFigVideoQueueFactory
createVideoQueue:
_setCreateVideoQueueFailedWithOSStatus:
_resetStatusWithOSStatus:
_setRequiresFlushToResumeDecoding:
_addFigVideoQueueListeners
_callOldPrerollCompletionHandlerWithSuccess:andSetNewPrerollCompletionHandler:forRequestID:
_removeFigVideoQueueListeners
_setSynchronizerTimebase:error:
enqueueSampleBuffer:bufferEnqueueingInfo:
flushWithRemovalOfDisplayedImage:completionHandler:
_createVideoQueueFailed
resetUpcomingSampleBufferPresentationTimeExpectations
_hasEverEnqueued
_updateVideoTargetsOnVideoQueue
_contentLayer
setControlTimebase:
_setOutputObscuredDueToInsufficientExternalProtection:
controlTimebase
setDisplayLayerVisibility:
_STSLabelPublisher
_displayLayer
setContentKeySession:
attachToContentKeySession:contentKeyBoss:failedSinceAlreadyAttachedToAnotherSession:
attachedToExternalContentKeySession
_enqueueSingleSampleBuffer:bufferEnqueueingInfo:
flushAndRemoveImage
_flushComplete
_completedDecodeForPrerollForRequestID:
prerollDecodeWithCompletionHandler:
requiresFlushToResumeDecoding
addSampleBufferDisplayLayer:
_videoQueue
_outputObscured
_weakDisplayLayer
_figVideoTargets
_preventsDisplaySleepDuringVideoPlayback
_requiresFlushToResumeDecoding
_isRequestingMediaData
_serialQueue
_videoQueueQueue
_layerQueue
_weakReferenceToSynchronizer
_addedToSynchronizer
_controlTimebaseSetByUserIsInUse
_controlTimebaseSetByUser
_readOnlyRenderingTimebase
_flushCallbackListQueue
_flushCallbackQueue
_flushCallbacks
_queueForProtectingPrerollCompleteCallback
_pendingPrerollCompleteCallback
_pendingPrerollRequestID
_queueForCallingPrerollCompleteCallback
_upcomingPTSExpectation
_minimumUpcomingPTS
_weakContentKeySession
_lastFormatDescription
_lastCryptor
_didFinishSuspensionNotificationToken
setPreventsCapture:
preventsCapture
_setUpcomingPresentationTimeExpectations:minimumPresentationTime:
expectMinimumUpcomingSampleBufferPresentationTime:
expectMonotonicallyIncreasingUpcomingSampleBufferPresentationTimes
_updateVideoOutputs
T@"NSString",C,N,G_STSLabel
initWithMetadataReader:
initWithArray:key:keySpace:locale:
initWithMetadataReader:array:key:keySpace:locale:
_setMetadataReader:
_setArrayEnumerator:
_setKey:
_setKeySpace:
_setLocale:
metadataEnumeratorWithArray:key:keySpace:locale:
_reader
_arrayEnumerator
_keySpace
_locale
_index
initWithFigEndpoint:
figEndpoint
_figEndpointPropertyValueForKey:
processInfo
processName
initWithEndpoint:
_endpointVolumeControlTypeDidChangeForEndpointWithID:
_canSetEndpointVolumeDidChangeForEndpointWithID:
_weakObserver
_figEndpoint
figEndpointOutputDeviceImpl
outputDeviceWithFigEndpoint:
outputDeviceWithFigEndpoint:routingContextFactory:
_endpoint
initWithRequest:id:
requestWithRequest:id:
customURLRequest
setCustomURLRequest:
customURLResponse
setCustomURLResponse:
requestID
metrics
setMetrics:
_requestID
_customURLRequest
_customURLResponse
_metrics
TQ,R,N,V_requestID
T@"NSURLSessionTaskMetrics",&,N,V_metrics
session
sendH2Ping:pongHandler:
setValue:forHTTPHeaderField:
dataTaskWithRequest:
_registerRequest:id:forDataTask:
_unregisterRequestForDataTask:
_lookupRequestForDataTask:
allHeaderFields
typeWithMIMEType:
transactionMetrics
networkProtocolName
_privacyStance
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_handleRequest:requestID:canHandleRequestOut:
_cancelRequestID:
_taskToRequest
_session
_handler
T@"NSURLSession",&,N,V_session
connection
setConnection:
bridge
setBridge:
_bridge
_connection
T@"AVAssetCustomURLBridgeForNSURLProtocol",W,N,V_bridge
T^{_CFURLConnection=},N
_cancelPendingRequests
_cancelAndFinishRequest:error:
_handleRequest:requestID:
_didFinish:error:
_willSendRequest:request:redirectionResponse:
_didReceiveResponse:response:
_didReceiveData:data:
_requestIDToDownload
copyKeychainCredentialForUrl:
sendAuthResponse:requestID:disposition:credential:authHandler:
host
port
initWithData:encoding:
initWithUser:password:persistence:
_handleAuthChallenge:requestID:canHandleRequestOut:
expectedContentLength
scannerWithString:
scanString:intoString:
scanUnsignedLongLong:
characterSetWithCharactersInString:
scanCharactersFromSet:intoString:
isAtEnd
T{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}},R,N,V_timeMapping
setInputParameters:
_audioMix
_mutableAudioMix
_volumeCurveAsString
_setScheduledAudioParameters:
setEffectParameters:
setVolumeRampFromStartVolume:toEndVolume:timeRange:rampMode:
setVolume:atTime:
_setVolumeRampFromStartVolume:toEndVolume:timeRange:rampMode:
_setVolume:atTime:
getVolumeRampForTime:startVolume:endVolume:timeRange:rampMode:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
getVolumeRampForTime:startVolume:endVolume:timeRange:
_inputParameters
Tr^{opaqueMTAudioProcessingTap=},R,&,N
audioMixInputParametersWithTrack:
_mutableInputParameters
Tr^{opaqueMTAudioProcessingTap=},&,N
audioMixInputParametersWithAssetTrack:introFadeDuration:fadeOutStart:fadeOutDuration:
outputDeviceFeatures
applicationPID
applicationPIDWasSet
defaultOutputContextImplClass
platformDependentScreenOrVideoContext
initWithOutputContextImpl:
auxiliaryOutputContext
sharedSystemAudioContext
sharedSystemScreenContext
iTunesAudioContext
addSharedAudioOutputContextImpl
allSharedAudioOutputContextImpls
defaultSharedOutputContextImpl
outputContextImplForControllingOutputDeviceGroupWithID:options:
outputContextForControllingOutputDeviceGroupWithID:options:
outputContextImplForID:type:
setParentOutputContext:
outputContextType
getApplicationProcessID:
outputContextDidChangeApplicationProcessID:
supportsMultipleOutputDevices
setOutputDevice:options:completionHandler:
resetOutputDeviceForAllOutputContexts
outputContextExistsWithRemoteOutputDevice
supportsMultipleBluetoothOutputDevices
setOutputDevices:options:completionHandler:
predictedOutputDevice
resetPredictedOutputDevice
providesControlForAllVolumeFeatures
outgoingCommunicationChannel
openCommunicationChannelWithOptions:error:
outputContextOutgoingCommunicationChannelDidBecomeAvailable:
outputContext:didReceiveData:fromCommunicationChannel:
outputContext:didCloseCommunicationChannel:
outputContextImpl:didChangeOutputDevicesWithInitiator:reason:deviceID:previousDeviceIDs:
outputContextImplDidChangeGlobalOutputDeviceConfiguration:
addSharedAudioOutputContext
allSharedAudioOutputContexts
defaultSharedOutputContext
outputContextForControllingOutputDeviceGroupWithID:
applicationProcessID
setApplicationProcessID:
setOutputDevice:forFeatures:
setOutputDevice:options:
outputContextImpl:didInitiateDestinationChange:
outputContextImpl:didChangeOutputDeviceWithInitiator:
setOutputDevices:
addOutputDevice:
removeOutputDevice:
outputContextImplDidChangePredictedOutputDevice:
outputContextImplDidChangeProvidesControlForAllVolumeFeatures:
outputContextImplDidChangeVolume:
outputContextImplDidChangeCanSetVolume:
outputContextImplDidChangeVolumeControlType:
outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:
outputContextImpl:didReceiveData:fromCommunicationChannel:
outputContextImpl:didCloseCommunicationChannel:
outputContextImpl:didExpireWithReplacement:
setParentCommunicationChannel:
initWithOutputContextCommunicationChannelImpl:
T@"<AVOutputContextCommunicationChannelImpl>",R,N
_setStatus:cancellationReason:
markAsInProgress
markAsFailed
markAsCancelledWithReason:
setParentOutputContextManager:
outputContextManagerForAllOutputContexts
initWithOutputContextManagerImpl:
outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:
outputContextManagerImplDidExpireWithReplacementImpl:
_playbackConfigurationOptions
assetPlaybackAssistantWithAsset:
loadPlaybackConfigurationOptionsWithCompletionHandler:
initWithRunLoop:
runLoopStateWithRunLoop:
runLoop
signalSource
setSignalSource:
signaled
setSignaled:
_runLoop
_signalSource
_signaled
T^{__CFRunLoop=},R,N,V_runLoop
T^{__CFRunLoopSource=},N,V_signalSource
TB,N,V_signaled
waitInMode:
waitUntilDate:inMode:
_waitInMode:untilDate:
timeIntervalSinceNow
_signalRunLoopWithState:
wait
waitUntilDate:
broadcast
_runLoopStateList
initWithRefreshRate:videoDynamicRange:
mediaSelectionGroupDictionaries
T@"NSArray",R,N,G_mediaSelectionGroupDictionaries
T@"AVMetadataItem",R,N
playable
TB,R,N,GisPlayable
exportable
TB,R,N,GisExportable
readable
TB,R,N,GisReadable
composable
TB,R,N,GisComposable
compatibleWithSavedPhotosAlbum
TB,R,N,GisCompatibleWithSavedPhotosAlbum
compatibleWithAirPlayVideo
TB,R,N,GisCompatibleWithAirPlayVideo
assetAnalysisMessages
T@"NSArray",R,N,G_assetAnalysisMessages
_setFormatReader:
_timeForProperty:
_floatForProperty:defaultValue:
_affineTransformForProperty:
_SInt32ForProperty:
_booleanForProperty:
_nonNilArrayForProperty:
_dictionaryForProperty:
_hasQTSaveRestriction
_valueAsCFTypeForProperty:
didCheckForSaveRestriction
hasSaveRestriction
T^{OpaqueFigFormatReader=},&,N,G_formatReader,S_setFormatReader:
_setPlaybackItem:
_arrayForProperty:
initWithPlaybackItem:trackIDs:
_trackIDs
playbackItem
T^{OpaqueFigPlaybackItem=},&,N,G_playbackItem,S_setPlaybackItem:
initWithFigAlternate:
_timeForProperty:defaultValue:
_nonNilDictionaryForProperty:
_tollFreeBridgedObjectForProperty:
contentKeySpecifierForKeySystem:identifier:options:
lastPathComponent
_dataForProperty:
_nameForProxy
minusSet:
_formatReaderOnce
_checkIsStreamingOnce
_makeDisplayCriteriaOnce
_displayCriteria
T^{OpaqueFigAsset=},R,N,G_figAsset
T^{OpaqueFigFormatReader=},R,N,G_formatReader
streaming
TB,R,N,G_isStreaming
ramps
_setRamps:
_ramps
_scheduledParametersInternal
T@"NSArray",C,N,G_ramps,S_setRamps:
_mutableScheduledParametersInternal
_setStatus:error:resultingStatus:failureReason:
isCancelled
isExecuting
unfinishedOperations
operations
initWithFundamentalOperation:
_fundamentalOperation
initWithMonitoringObject:
attachDepartureAnnouncingObjectMonitorToObject:monitoringObject:
_weakReferenceToMonitoringObject
_registerForObjectNotifications
_balanceMonitoringIsFinishedSemaphore
_unregisterForObjectNotifications
_signalMonitoringIsFinishedIfNeeded
_waitUntilFinishedIfNeeded
monitoredObjectHasDeparted
initWithObject:notificationNames:
_monitoredObject
main
_weakReferenceToMonitoredObject
_operationStateSerializationQueue
_monitoringIsFinishedSemaphore
_notificationNames
_registeredForObjectNotifications
_started
_finished
getRetainedDelegate:retainedDelegateQueue:
_setDelegateViaWeakReference:
invokeDelegateCallbackWithBlock:synchronouslyIfDelegateQueueIsQueue:
_delegateReadWriteQueue
_detectorForWeakReferenceToDelegate
_delegateQueue
isAssociatedWithFragmentMinder
_createAVErrorForError:andFigErrorCode:
T@"AVWeakReference",R,N,G_weakReference
T^{OpaqueFigPlaybackItem=},R,N,G_playbackItem
classForTrackInspectors
T#,R,N,G_classForTrackInspectors
associatedWithFragmentMinder
TB,R,N,GisAssociatedWithFragmentMinder
fragmentMindingInterval
Td,N,G_fragmentMindingInterval,S_setFragmentMindingInterval:
_setStatus:figErrorCode:
_copyFormatReaderFromFigObjectWithFigErrorCode:
_dictionaryOfSpecialGettersForKeyValueStatus
_statusOfValueWhileMutexLockedForKey:error:
_statusOfValuesIsTerminalWhileMutexLockedForKeys:
_inspectionRequiresAFormatReader
_updateStatusWhileMutexLocked:figErrorCode:
_getAndPruneCompletionsWhileMutexLocked
setWithCapacity:
_dictionaryOfSpecialLoadingMethodsForKeys
_loadValuesUsingDefaultLoadingMethodWhileMutexLockedForKeys:
_loadValuesWhileMutexLockedForKeys:
_loadingMutex
_providesAccurateTiming
_statusOfValueForKeyThatIsAlwaysLoaded
_keysAwaitingCompletion
_basicInspectionFailureCode
_addFigObjectNotifications
_removeFigObjectNotifications
objectsForKeys:notFoundMarker:
_playbackItemPropertiesForKeys:
_shouldCacheDuration
_cachedDuration
_figAssetTrackMediaSelectionPropertiesArray
_figAssetMediaSelectionPropertiesArray
_statusOfValueForKey:error:firstNonLoadedDependencyKey:
_figAssetPropertiesForKeys
_loadStatusForProperty:figAsset:error:
_figAssetTrackPropertiesForKeys
dateWithTimeIntervalSinceNow:
_completionHandlerQueue
_loadingBatches
_invokeCompletionHandlerForLoadingBatches:
_figAssetCreationStatus
_assetInspectorOnce
_loadingCanceled
_registeredForFigAssetNotifications
_fragmentMinderAssociationCount
initForUnitTests
_figError
_figErrorUserInfo
_statusOfValueForKeyReturnsLoaded
value:withObjCType:
removeObjectsAtIndexes:
currentRoutingSession
likelyExternalDestinations
longFormVideoRoutingSessionManager
longFormVideoManagerCanHaveCurrentSessionWithDestinationOfType:subType:
allLikelyDestinations
prefersLikelyDestinationsOverCurrentRoutingSession
updateCurrentRoutingSessionFromLikelyDestinationsWithCompletionHandler:
startRoutingSessionForHighConfidenceExternalDestinationIfPresentWithCompletionHandler:
startRoutingSessionWithOutputDeviceDescriptions:error:
startSuppressingLikelyDestinationsUntilNextPlayEventAndReturnError:
stopSuppressingLikelyDestinationsAndReturnError:
T@"AVRoutingSession",R
destination
establishedAutomaticallyFromLikelyDestination
T@"AVRoutingSessionDestination",R
outputDeviceDescriptions
probability
providesExternalVideoPlayback
_figMediaType
_getFigSampleCursorServiceReportingTimeAccuracy:
sampleCursorWithFigSampleCursor:
_synthesizeMediaCharacteristicsOnce
_cachedMediaCharacteristics
figMediaType
TI,R,N,G_figMediaType
figTrackReader
T^{OpaqueFigTrackReader=},R,N,G_figTrackReader
T^{OpaqueFigAssetTrack=},R,N,G_figAssetTrack
decodable
TB,R,N,GisDecodable
TB,R,N,GisEnabled
selfContained
TB,R,N,GisSelfContained
T@"NSLocale",R,N
excludedFromAutoselectionInTrackGroup
TB,R,N,GisExcludedFromAutoselectionInTrackGroup
decodabilityValidationResult
_longLongForProperty:
_floatForProperty:
_sizeForProperty:defaultValue:
_SInt16ForProperty:
_trackReader
_copySampleCursorServiceOnce
_figSampleCursorService
_sampleCursorTimeAccuracyIsExact
_addFigNotifications
_removeFigNotifications
_loadStatusForFigAssetTrackProperty:error:
_figFormatReader
_timeRangeForProperty:
_segmentsForProperty:
_copyFigFormatReaderOnce
_copyFigTrackReaderOnce
_figMutableComposition
T^{OpaqueFigMutableComposition=},R,N,G_mutableComposition
raise:format:
bundleWithIdentifier:
localizedStringForKey:value:table:
T@,R,W
_cachedReferencedObjectDescription
_weakStorage
figSampleGenerator
weakReferenceToAsset
initWithAsset:timebase:
initWithGenerator:
startCursor
_figSampleCursor
preferredMinSampleCount
maxSampleCount
direction
limitCursor
_figSampleGeneratorReadPolicy
_figSampleGeneratorReadFlags
createSampleBufferForRequest:error:
_generator
isOpenToRequests
createAndAddSampleBufferForRequest:error:
notifyOfDataReadyForSampleBuffer:completionHandler:
_figSampleGenerator
makeBatch
createSampleBufferForRequest:
createSampleBufferForRequest:addingToBatch:error:
mode
overrideTime
initWithStartCursor:
sampleBufferRequestWithStartCursor:
setDirection:
setLimitCursor:
setPreferredMinSampleCount:
setMaxSampleCount:
setMode:
setOverrideTime:
_request
T@"AVSampleCursor",R,&,N
T@"AVSampleCursor",&,N
_completionHandler
makeDataReadyWithCompletionHandler:
_sampleGenerator
_sampleGeneratorBatch
_openToRequests
_stateMutex
T@"AVSampleBufferGenerator",R,N
valueWithBytes:objCType:
initWithFigSegmentReportSampleInformationDictionary:
presentationTimeStamp
offset
isSyncSample
_presentationTimeStamp
_offset
_length
_isSyncSample
T{?=qiIq},R,N,V_presentationTimeStamp
Tq,R,N,V_offset
Tq,R,N,V_length
TB,R,N,V_isSyncSample
initWithFigSegmentTrackReportDictionary:
earliestPresentationTimeStamp
firstVideoSampleInformation
_earliestPresentationTimeStamp
_firstVideoSampleInformation
T{?=qiIq},R,N,V_earliestPresentationTimeStamp
T{?=qiIq},R,N,V_duration
T@"AVAssetSegmentReportSampleInformation",R,N,V_firstVideoSampleInformation
segmentType
trackReports
_segmentType
_trackReports
Tq,R,N,V_segmentType
T@"NSArray",R,N,V_trackReports
valueWithPointer:
_contextsForTokens
_currentToken
_readWriteQueue
mediaTypeForTrackID:
parser
initWithTrackIDs:
initWithParser:tracks:
_weakReferenceToParser
_inspector
_inspectorLoader
_tracksOnce
_trackDictsByTrackID
_collectorInternal
initWithCMNotificationCenter:
CMNotificationCenter
listenerKeyWithWeakReferenceToListener:callback:name:object:
_copyAndRemoveObserverForWeakReferenceToListener:callback:name:object:
_cmNotificationCenter
_listenerObjectsQueue
_observersForListenerKeys
T^{opaqueCMNotificationCenter=},R,N
initWithWeakReferenceToListener:callback:name:object:
_weakReferenceToListener
_name
indexSetWithIndex:
initWithInsertIndexes:insertedObjects:removeIndexes:removedObjects:
arrayByApplyingDifference:
_blocks
_blockSerializationLock
initWithFormat:arguments:
markEventAsCompleted
waitUntilEventIsCompleted
_condition
_eventCompleted
_lock
_testFlag
assetComparisonToken
_assetComparisonToken
_assetTrackGroup
copyFormatDescription
uniqueID
backingSBuf
_timedMetadataGroupInternal
timedMetadataGroupInternal
T@"AVTimedMetadataGroupInternal",R,N,G_timedMetadataGroupInternal
endDate
cueingOptions
extraFigProperties
initWithItems:startDate:endDate:
_taggedRangeMetadataDictionary
_extractPropertiesFromTaggedRangeMetadataDictionary:
_figMetadataArrayForMetadataItems:
dateByAddingTimeInterval:
_metadataItemsForFigMetadataArray:
_dateRangeMetadataGroupInternal
dateRangeMetadataGroupInternal
T@"AVDateRangeMetadataGroupInternal",R,N,G_dateRangeMetadataGroupInternal
setEndDate:
assetCacheWithURL:
assetCacheForHTTPLiveStreamingWithURL:
assetCacheForProgressiveDownloadWithURL:
assetCacheForProgressiveDownloadAndHTTPLiveStreamingWithURL:
_init
mediaSelectionOptionsInMediaSelectionGroup:
isPlayableOffline
maxSize
maxEntrySize
currentSize
removeEntryForKey:
sizeOfEntryForKey:
lastModifiedDateOfEntryForKey:
playableOffline
TB,R,N,GisPlayableOffline
enableHLSCache
enableCRABSCache
initWithURL:enableCRABSCache:enableHLSCache:
setMaxSize:
setMaxEntrySize:
assetCacheInspector
currentPlatformIdentifier
setPlatformIdentifier:forQueue:
resetPlatformIdentifierForQueue:
CMVideoDimensionsValue
valueWithCMVideoDimensions:
T{?=ii},R
originator
expectedCurrentItemIdentifier
T@"AVCoordinatedPlaybackParticipant",R,N
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:rate:itemTime:hostClockTime:
itemTime
hostClockTime
_originator
_expectedCurrentItemIdentifier
_commandOrderIndex
_itemTime
_hostClockTime
T{?=qiIq},R,N,V_itemTime
T{?=qiIq},R,N,V_hostClockTime
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:anticipatedPlaybackRate:completionDueDate:
anticipatedPlaybackRate
completionDueDate
_anticipatedPlaybackRate
_completionDueDate
Tf,R,N,V_anticipatedPlaybackRate
T@"NSDate",R,N,V_completionDueDate
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:shouldBufferInAnticipationOfPlayback:anticipatedPlaybackRate:
shouldBufferInAnticipationOfPlayback
_shouldBufferInAnticipationOfPlayback
TB,R,N,V_shouldBufferInAnticipationOfPlayback
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:itemTime:shouldPause:shouldBufferInAnticipationOfPlayback:anticipatedPlaybackRate:completionDueDate:
_shouldPause
_setWaitingPolicies:
applyFigPauseSnapsToMediaTimeOfOriginator
_prepareToInitiatePlayback
initWithPlaybackControlDelegate:
playbackControlDelegate
figTimelineCoordinatorConfigQueue
_latestRateCommandOrderIndex
_latestSeekCommandOrderIndex
coordinateRateChangeToRate:options:
coordinateSeekToTime:options:
currentItemIdentifier
transitionToItemWithIdentifier:proposingInitialTimingBasedOnTimebase:
reapplyCurrentItemStateToPlaybackControlDelegate
_figTimelineCoordinator
_timelineControlQueue
_figTimelineCoordinatorConfigQueue
_currentItemIdentifier
T@"<AVPlaybackCoordinatorPlaybackControlDelegate>",R,W,N
playbackCoordinator:didIssuePlayCommand:completionHandler:
playbackCoordinator:didIssueSeekCommand:completionHandler:
playbackCoordinator:didIssuePauseCommand:completionHandler:
playbackCoordinator:didIssueBufferingCommand:completionHandler:
logArray
_common_init
extendedLogData
extendedLogDataStringEncoding
canBeConvertedToEncoding:
dataUsingEncoding:allowLossyConversion:
_accessLogArray
_playerItemAccessLog
dict
numberOfMediaRequests
numberOfSegmentsDownloaded
playbackStartDate
serverAddress
numberOfServerAddressChanges
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfBytesTransferred
transferDuration
currentObservedBitrate
startupTime
downloadOverdue
entryReasonCode
observedMaxBitrate
observedMinBitrate
observedBitrateStandardDeviation
playbackType
mediaRequestsWWAN
switchBitrate
_playerItemAccessLogEvent
_classForMovieTracks
initWithMovie:mindingInterval:
initWithAsset:mindingInterval:
mindingInterval
setMindingInterval:
assets
addFragmentedAsset:
removeFragmentedAsset:
fragmentedMovieMinderWithMovie:mindingInterval:
_throwsWhenAlreadyMindedAssetIsAdded
movies
addFragmentedMovie:
removeFragmentedMovie:
_fragmentedMovieTrack
_errorLogArray
_playerItemErrorLog
errorStatusCode
errorDomain
errorComment
_playerItemErrorLogEvent
isAirPlayVideoPlaying
longFormVideoExternalPlaybackMonitor
TB,R,GisAirPlayVideoActive
airPlayVideoPlaying
TB,R,GisAirPlayVideoPlaying
isAppAudioSession
isActive
activationContext
usingLongFormAudio
setActive:withFlags:error:
setApplicationAudioSession:
setCategory:error:
setMode:error:
setActivationContext:error:
setUsingLongFormAudio:error:
setPreferredHardwareSampleRate:error:
setPreferredIOBufferDuration:error:
preferredHardwareSampleRate
preferredIOBufferDuration
inputIsAvailable
currentHardwareSampleRate
currentHardwareInputNumberOfChannels
currentHardwareOutputNumberOfChannels
isApplicationAudioSession
canEnterPIPMode
_audioSession
T@"<AVAudioSessionDelegateMediaPlayerOnly>"
Td,R
beginInterruptionFromInterruptor:
beginInterruption
rangeOfString:
endInterruptionFromInterruptor:category:flags:
endInterruptionWithFlags:
endInterruption
currentBundleIdentifier
initWithAsset:dictionary:
_groupMediaCharacteristics
_groupID
_groupMediaType
mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:
playableMediaSelectionOptionsFromArray:
mediaSelectionOptionsFromArray:withLocale:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
_optionWithID:displaysNonForcedSubtitles:
setCurrentBundleIdentifier:
_mediaSelectionGroup
T@"AVMediaSelectionOption",R,N
mediaSelectionOptionForAsset:group:dictionary:hasUnderlyingTrack:
optionID
fallbackIDs
outOfBandIdentifier
outOfBandSource
_optionWithID:identifier:source:displaysNonForcedSubtitles:
_dictionary
_options
_defaultOption
_displayName
_displayNameLocaleIdentifier
_optionMediaCharacteristics
initWithAsset:group:dictionary:
initWithGroup:
group
_taggedMediaCharacteristics
associatedExtendedLanguageTag
preferredLanguages
associatedPersistentIDs
_isMainProgramContent
_preferredMetadataTitleAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:excludeM3U8Metadata:
_updateDisplayNameWithLocale:fallingBackToMatchingUndeterminedAndMultilingual:context:
displayNameForKey:value:
_languageDisplayNameFromMetadataAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:
hasPrefix:
_displayNameWithLocale:fallingBackToMatchingUndeterminedAndMultilingual:
associatedUnicodeLanguageIdentifier
displayNameWithLocale:
_mediaSelectionOption
_weakReferenceToGroup
_optionMediaType
localizedStringForLanguage:context:
registeredOutputSettingsClasses
eligibleOutputSettingsDictionaryKeys
_validateOutputSettingsDictionary:compatibilityDescription:
setWithSet:
supportsEmptyOutputSettingsDictionary
intersectSet:
defaultAudioOutputSettings
defaultVideoOutputSettings
initWithOutputSettingsDictionary:exceptionReason:
validateOutputSettingsDictionary:
outputSettingsWithOutputSettingsDictionary:mediaType:
defaultOutputSettingsForMediaType:
validateUsingOutputSettingsValidator:reason:
_outputSettingsDictionary
T@"NSSet",R,N
T@"NSDictionary",R,N,V_outputSettingsDictionary
initWithOutputSettings:sourceFormatDescription:
_sourceFormatDescription
initWithFileTypeIdentifier:exceptionReason:
mediaFileOutputSettingsValidatorForFileType:
mediaFileTypeWithFileTypeIdentifier:
isoFileTypes
defaultFileExtension
_uti
_supportsSampleReferencesOnce
_supportsSampleReferences
TI,R,N
initWithFileType:
fileType
validateAudioOutputSettings:reason:
validateVideoOutputSettings:reason:
_fileType
initWithTrustedAVAudioSettingsDictionary:
audioOutputSettingsWithAudioSettingsDictionary:
audioOutputSettingsWithTrustedAudioSettingsDictionary:
audioConverterPropertiesForAudioSettingsDictionary:
initWithAudioSettingsDictionary:exceptionReason:
initWithAVAudioSettingsDictionary:exceptionReason:
setInputPropertiesFromASBD:
setOutputFormat:
setOutputFormatFlags:
setOutputBitsPerChannel:
setOutputSampleRate:
setOutputChannelCount:
setOutputDataRate:
availableOutputChannelCountForDesiredChannelCount:rounding:
applicableOutputSampleRateForDesiredSampleRate:rounding:
initWithTrustedPixelBufferAttributes:
initWithTrustedAVVideoSettingsDictionary:
videoOutputSettingsWithVideoSettingsDictionary:
setWithObjects:count:
allowWideColor
_validValuesForScalingMode
videoOutputSettingsWithTrustedVideoSettingsDictionary:
initWithVideoSettingsDictionary:exceptionReason:
pixelAspectRatioDictionary
cleanApertureDictionary
dimensionsAreBoundingBox
setByAddingObjectsFromSet:
initWithPixelBufferAttributes:exceptionReason:
dictionaryWithValuesForKeys:
_VTPixelAspectRatioDictionary
_VTCleanApertureDictionary
initWithAVVideoSettingsDictionary:exceptionReason:
_validateVideoCompressionProperties:againstSupportedPropertyDictionary:forCodecType:exceptionReason:
_adaptedVideoCompressionProperties
minimum
_buildAudioConverter
_fetchApplicableOutputDataRates
_buildAvailableSampleRates
_buildApplicableDataRatesForSampleRates
_bringUpToDate
outputDataRate
_getAvailableOutputSampleRateFor:rounding:
float64RangeWithMinimum:maximum:
outputSampleRate
outputFormat
outputFormatFlags
outputBitsPerChannel
outputChannelCount
_inputASBD
_outputASBD
_audioConverter
_outputDataRate
_needNewConverter
_needAvailableSampleRates
_needApplicableParameters
_availableOutputSampleRates
_availableOutputDataRates
_applicableOutputSampleRatesForDataRate
_applicableOutputDataRatesForSampleRate
TI,N
initWithMinimum:maximum:
initWithAudioValueRange:
maximum
float64RangeWithAudioValueRange:
_minimum
_maximum
Td,R,N,V_minimum
Td,R,N,V_maximum
originalRequest
currentRequest
response
T@"AVURLAsset",R,N
T@"NSURLRequest",R,C
T@"NSURLResponse",R,C
assetTypeLoadingStatus
didStartLoadingMetadata
destinationURL
cachePrimingDownloadTokenNum
assetDownloader
fileDownloadProgressTimer
_setFileFigAsset:
_setupFigClientObjectAsync:
_removeFigAssetListeners
_removeFigPlaybackItemListeners
cancelAndReleaseProgressTimerOnQueue
initWithURL:destinationURL:options:
initWithDownloadToken:
initWithAsset:mediaSelections:destinationURL:options:
_startOnQueue
_transitionToTerminalStatus:error:
_startLoadingMetadataOnQueue
availableFileSize
assetDownloadSessionWithURL:destinationURL:options:
assetDownloadSessionWithDownloadToken:
assetDownloadSessionWithAsset:destinationURL:options:
registerDownloadLocation:forURLAsset:
assetDownloadSessionWithAsset:mediaSelections:destinationURL:options:
stop
startLoadingMetadata
fileSize
countOfBytesReceived
resolvedMediaSelection
T@"AVMediaSelection",R,N
assetDownloadSessionDidFinishDownload:
assetDownloadSession:didFailWithError:
assetDownloadSession:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
assetDownloadSession:didResolveMediaSelection:
assetDownloadSession:didFinishDownloadForMediaSelection:
assetDownloadSession:didUpdateProgressWithExpectedBytes:bytesDownloaded:
assetDownloadSession:willDownloadVariants:
_sendDownloadSuccessToDelegate
_sendDownloadFailureToDelegateWithError:
_sendLoadedTimeRangesChangedToDelegateWithNewlyLoadedTimeRange:currentLoadedTimeRanges:timeRangeExpectedToLoad:selectedMediaArray:
_sendDidResolveMediaSelectionWithMediaSelection:
_sendDidFinishDownloadForMediaSelectionWithMediaSelection:
_sendProgessUpdateWithExpectedBytesToDownload:bytesDownloaded:
_sendWillDownloadVariants:
_downloadSuccessCallback
_downloadFailureCallbackWithError:
_createDuplicateFigAssetFromAVAsset:
_addFigAssetListeners
_setupFigClientObjectForStreaming:
_setupFigClientObjectForFileDownload:
_startOnQueueFirstTime
_addFigPlaybackItemListeners
_verifyDownloadConfigurationForAssetType
_primeCache
_readyForInspection
startProgressTimerOnQueueWithError:
_figAssetNotificationNames
_figPlaybackItemNotificationNames
_primeCacheOnDispatchQueue
_errorFromAssetNotificationPayload:
figSampleCursor
implementsGetDecodeTimeStamp
implementsGetDuration
implementsGetDependencyInfo
implementsTestReorderingBoundary
implementsCreateSampleBuffer
implementsCopyChunkDetails
implementsCopySampleLocation
implementsGetMPEG2FrameType
initWithFigSampleCursor:
decodeTimeStamp
stepByDecodeTime:wasPinned:
stepByPresentationTime:wasPinned:
currentSampleStorageRange
stepInDecodeOrderByCount:
stepInPresentationOrderByCount:
stepByDecodeTime:
stepByPresentationTime:
comparePositionInDecodeOrderWithPositionOfCursor:
samplesWithEarlierDecodeTimeStampsMayHaveLaterPresentationTimeStampsThanCursor:
samplesWithLaterDecodeTimeStampsMayHaveEarlierPresentationTimeStampsThanCursor:
canProvideSampleBuffers
createSampleBufferForCurrentSampleReturningError:
createSampleBufferFromCurrentSampleToEndCursor:error:
currentSampleDuration
copyCurrentSampleFormatDescription
currentSampleSyncInfo
currentSampleDependencyInfo
currentSampleAudioDependencyInfo
currentSampleDependencyAttachments
currentChunkStorageURL
currentChunkStorageRange
currentChunkInfo
currentSampleIndexInChunk
samplesRequiredForDecoderRefresh
seamIdentifier
_sampleCursor
timebaseReadWriteQueue
_copyTimebase
_itemTimeForHostTimeAsCMTime:
itemTimeForHostTime:
itemTimeForMachAbsoluteTime:
setSuppressesPlayerRendering:
_outputInternal
currentRate
playerItemWeakReference
delegateWakeupSource
advanceWakeUpInterval
advanceWakeUpIntervalIsValid
wakeUpImageTime
immediateWakeUp
clientStateOnRequestedMediaDataChangeNotification
shouldTagBuffersWithInfo
_dispatchOutputMediaDataWillChange
initWithPixelBufferAttributes:
_respondToPlayerItemFormatDescriptionsChange
hasNewPixelBufferForItemTime:
_stopObservingTimebaseNotificationsForTimebase:
_startObservingTimebaseNotificationsForTimebase:
outputMediaDataWillChange:
initWithOutputSettings:
earliestAvailablePixelBufferItemTime
requestNotificationOfMediaDataChangeWithAdvanceInterval:
requestNotificationOfMediaDataChangeAsSoonAsPossible
copyPixelBufferForItemTime:itemTimeForDisplay:
copyPixelBufferForItemTime:remove:itemTimeForDisplay:
_setTagBuffersWithConversionInformation
T@"<AVPlayerItemOutputPullDelegate>",R,W
fragmentedAssetWithURL:options:
_fragmentedAsset
accessSerializer
_setMindingInterval:removeAllAssets:
fragmentedAssetMinderWithAsset:mindingInterval:
_fragmentedAssetMinder
_fragmentedAssetTrack
_mediator
defaultActionForKey:
actionForKey:
_destRectForAspectRatio:
animationKeys
timingFunction
animationWithKeyPath:
setTimingFunction:
postVideoRectDidChangeNotification
_updateLayerTreeGeometryWithVideoGravity:presentationSize:videoGravityShouldTriggerAnimation:
makeVideoRenderer
_sampleBufferVideoRenderer
setSeparated:
setValue:forKeyPath:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingError
keyPathsForValuesAffectingOutputObscuredDueToInsufficientExternalProtection
_updatePresentationSize:
_videoGravity
_bounds
_videoOutput
_STSLayer
sampleBufferVideoRenderer
T@"AVSampleBufferVideoRenderer",R,N,G_sampleBufferVideoRenderer,V_sampleBufferVideoRenderer
T^{OpaqueCMTimebase=},&
output
setOutput:
T@"AVSampleBufferVideoOutput",N
decodeXPCObjectForKey:
initWithEndpoint:customURLHandlerObjectID:authHandlerObjectID:contentKeySessionHandlerObjectID:
encodeXPCObject:forKey:
endpoint
customURLHandlerObjectID
authHandlerObjectID
contentKeySessionHandlerObjectID
_customURLHandlerObjectID
_authHandlerObjectID
_contentKeySessionHandlerObjectID
T@"NSObject<OS_xpc_object>",R,N,V_endpoint
TQ,R,N,V_customURLHandlerObjectID
TQ,R,N,V_authHandlerObjectID
TQ,R,N,V_contentKeySessionHandlerObjectID
initWithAuthenticationChallenge:sender:requestInfo:requestID:
initWithAuthenticationChallenge:sender:
resourceLoader:didCancelAuthenticationChallenge:
sender
cancelAuthenticationChallenge:
_selectorForInformingDelegateOfCancellationByFig
_requestInfo
_performCancellationByClient
_shouldInformDelegateOfFigCancellation
initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:
T^{__CFDictionary=},R,N,V_requestInfo
customURLLoader
customURLHandler
authHandler
contentKeySessionCustomURLHandler
loadingCancelled
pendingRequests
contentInformationCachingQueue
contentInformationCache
preloadsEligibleContentKeys
URLSession
bridgeBetweenHandlerAndSession
URLSessionOperationQueue
initWithURLRequestHelper:asset:
_setDelegateOnStateQueue:
_getDelegateOnStateQueue
_performDelegateCallbackSynchronouslyIfCurrentDelegateQueueIsQueue:delegateCallbackBlock:
instanceMethodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
setTarget:
setArgument:atIndex:
invoke
methodReturnLength
getReturnValue:
_performDelegateSelector:withObject:representingNewRequest:key:fallbackHandler:
_cancelRequestWithKey:fallbackHandler:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
performDefaultHandlingForAuthenticationChallenge:
_poseAuthenticationChallengeWithKey:challenge:fallbackHandler:
initWithResourceLoader:requestInfo:requestID:
_issueLoadingRequestWithKey:loadingRequest:isRenewalRequest:fallbackHandler:
_authHandler
_customURLHandler
_customURLLoader
_cancelRequest:requestID:
_poseAuthenticationChallengeWithRequestInfo:requestID:challenge:
_noteFinishingOfRequest:
_handleRequest:requestID:willHandleRequest:
_contentKeySessionCustomURLHandler
_resourceLoader
T@"<AVAssetResourceLoaderDelegate>",R,W,N
setPreloadsEligibleContentKeys:
_sendAuthResponseForChallenge:disposition:credential:error:
useCredential:forAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
rejectProtectionSpaceAndContinueWithChallenge:
cacheContentInformation:forURL:
cachedContentInformationForURL:
URLSessionDataDelegate
URLSessionDataDelegateQueue
setURLSession:
T@"<NSURLSessionDataDelegate>",R,N
T@"NSOperationQueue",R,N
T@"NSURLSession",&,N
remoteCustomURLHandlerContextForPID:
contentType
allowedContentTypes
contentLength
entireLengthAvailableOnDemand
byteRangeAccessSupported
renewalDate
diskCachingPermitted
initWithLoadingRequest:allowedContentTypes:
isByteRangeAccessSupported
isDiskCachingPermitted
setContentType:
setContentLength:
setByteRangeAccessSupported:
setRenewalDate:
setDiskCachingPermitted:
setEntireLengthAvailableOnDemand:
isEntireLengthAvailableOnDemand
_contentInformationRequest
TB,N,GisByteRangeAccessSupported
TB,N,GisEntireLengthAvailableOnDemand
requestedOffset
requestedLength
currentOffset
dataResponseQueue
requestsAllDataToEndOfResource
canSupplyIncrementalDataImmediately
weakReferenceToLoadingRequest
initWithLoadingRequest:requestedOffset:requestedLength:requestsAllDataToEndOfResource:canSupplyIncrementalDataImmediately:
_loadingRequest
_sendDataToCustomURLHandler:
_appendToCachedData:
respondWithData:
_dataRequest
weakReferenceToResourceLoader
requestInfo
responseInfoSentOnceToken
URLRequest
redirect
dataCachingQueue
cachedData
cachedContentInformation
contentInformationRequest
dataRequest
cancelled
sentContentInfo
streamingKeyRequestCompletionHandler
figCryptor
requestor
cryptorKeyRequestID
initWithResourceLoader:URL:httpRequestHeaders:requestOffset:requestLength:allowedContentTypes:figCryptor:cryptorKeyRequestID:
setAllHTTPHeaderFields:
_setContentInformationRequest:
_setDataRequest:
request
_tryToMarkAsCancelled
resourceLoader:didCancelLoadingRequest:
finishLoadingWithError:
appendData:
_isRequestForContentKey
_canSetOrUseCachedContentInformation
allHTTPHeaderFields
_sendResponseInfoToCustomURLHandler
_ensureResponseInfoSentToCustomURLHandler
_cacheContentInformation:
_sendFinishLoadingToCustomURLHandlerWithError:
_contentKeySessionIsAttached
forwardRequestToContentKeySession
_getAndClearCachedData
_sendFinishLoadingToCustomURLHandler
setResponse:
setRedirect:
finishLoading
keyRequestDataUsingCryptorForApp:contentIdentifier:options:performAsync:error:
initWithRequestInfo:
serializableRepresentation
finishLoadingWithResponse:data:redirect:
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
generateStreamingContentKeyRequestDataAsynchronouslyForApp:contentIdentifier:options:completionHandler:
persistentContentKeyFromKeyVendorResponse:options:error:
T@"NSURLRequest",R,N
TB,R,N,GisFinished
TB,R,N,GisCancelled
T@"AVAssetResourceLoadingContentInformationRequest",R,N
T@"AVAssetResourceLoadingDataRequest",R,N
T@"NSURLResponse",C,N
T@"NSURLRequest",C,N
T@"AVAssetResourceLoadingRequestor",R,N
providesExpiredSessionReports
_requestor
weakObserver
readOnlyTimebase
rateQueue
mostRecentlySetTime
rendererListQueue
renderers
timedRenderRemovals
figSynchronizerAccessQueue
figSynchronizer
rendererTrackedBySTS
STSLabelSinks
currentFigRenderSynchronizerFactory
createRenderSynchronizerWithAllocator:options:error:
setRate:time:
_setRate:time:atHostTime:
_rendererConfigurationIsValid:
_updateRateFromTimebase
enableSTSLabels
_makeSTSLabel
_videoRendererForRenderer:
setRate:time:atHostTime:error:
delaysRateChangeUntilHasSufficientMediaData
setDelaysRateChangeUntilHasSufficientMediaData:
_synchronizerInternal
_canAddRendererInternal:error:
_addRenderer:error:
_performRendererRemoval:
_getTimebaseObserverForRenderer:
_getClientCompletionHandlerForRenderer:
_removeTimebaseObserverForRenderer:
_createOnceTimebaseObserverForRemovalOfRenderer:atTime:
_storeObserver:clientCompletionHandler:forRenderer:
removeRenderer:atTime:completionHandler:
_scheduleTimedRendererRemovalAtTime:atTime:withClientCompletionHandler:
addRenderer:
removeRenderer:atTime:withCompletionHandler:
_multipleAudioRenderersDisallowed
_addedAudioRendererCountInternal
_addedAudioRendererCount
routeSharingPolicy
setFigRenderSynchronizerFactory:forQueue:
URLByAppendingPathComponent:
data
writeToURL:options:error:
peakBitRate
averageBitRate
videoAttributes
initWithFigAlternateObjC:
audioAttributes
_figAlternateObjC
_videoAttributes
_audioAttributes
_mutex
T@"AVAssetVariantVideoAttributes",R,N
T@"AVAssetVariantAudioAttributes",R,N
figAlternate
videoRange
codecTypes
formatIDs
initWithFigAlternateObjC:mediaSelectionOption:
renditionSpecificAttributesForMediaOption:
_renditionSpecificAttributesForMediaSelection
channelCountForMediaOption:
isBinauralMediaOption:
isDownmixMediaOption:
sampleRateForMediaOption:
channelCount
isBinaural
isDownmix
sampleRate
initWithPredicate:
validateWithError:
_validatePredicate:error:
initWithVariant:predicate:
initWithChannelCount:mediaSelectionOption:operatorType:
initWithPresentationWidth:operatorType:
initWithPresentationHeight:operatorType:
assetVariantQualifierWithVariant:
predicateForPresentationWidth:operatorType:
predicateForPresentationHeight:operatorType:
_environmentalConditions
setEnvironmentalConditions:
operatorWithType:modifier:options:
requiresSecureCoding
performOperationUsingObject:andObject:
visitPredicate:
evaluateWithObject:substitutionVariables:
acceptVisitor:flags:
predicateFormat
_channelcount
_mediaSelectionOptionPlist
_operator
_width
_height
textSelector
textMarkupAttributes
_dictionaryPlistRepresentation
textStyleRuleWithTextMarkupAttributes:textSelector:
initWithTextMarkupAttributes:textSelector:
textStyleRulesFromPropertyList:
textStyleRuleWithTextMarkupAttributes:
initWithTextMarkupAttributes:
_textStyleRule
initWithPreferredLanguages:preferredMediaCharacteristics:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:
principalMediaCharacteristics
preferredMediaCharacteristics
preferredMediaSubTypes
precludedMediaSubTypes
preferMultichannelAudio
precludeMultichannelAudio
initWithPrincipalMediaCharacteristics:preferredLanguages:preferredMediaCharacteristics:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:preferMultichannelAudio:precludeMultichannelAudio:
initWithPreferredLanguages:preferredMediaCharacteristics:fallbackPreferredLanguages:fallbackPreferredMediaCharacteristics:captionDisplayType:
_criteriaInternal
compositingRequest
setCompositingRequest:
cancellationTest
setCancellationTest:
defaultCIContextProvider
setDefaultCIContextProvider:
completionHandler
setCompletionHandler:
sourceCIImage
setSourceCIImage:
sourcePBuf
setSourcePBuf:
_compositingRequest
_cancellationTest
_defaultCIContextProvider
_sourceCIImage
_sourcePBuf
T@"AVAsynchronousVideoCompositionRequest",&,N,V_compositingRequest
T@?,C,N,V_cancellationTest
T@?,C,N,V_defaultCIContextProvider
T@?,C,N,V_completionHandler
T@"CIImage",&,N,V_sourceCIImage
T^{__CVBuffer=},&,N,V_sourcePBuf
renderContext
size
colorWithRed:green:blue:
imageWithColor:
sourceTrackPreferredTransform
extent
imageByApplyingTransform:
renderTransform
compositionTime
pixelBuffer
newPixelBuffer
render:toCVPixelBuffer:
finishWithComposedVideoFrame:
finishCancelledRequest
finishWithError:
initUsingCompositingRequest:sourceFrame:cancellationTest:defaultCIContextProvider:completionHandler:
sourceImage
finishWithImage:context:
T@"CIImage",R,N
_requiredSourceTrackIDs
_sourceTrackPreferredTransform
T@?,R,N,V_handler
T{CGAffineTransform=dddddd},N,V_sourceTrackPreferredTransform
T{?={?=qiIq}{?=qiIq}},R,N,V_timeRange
TB,R,D,N
T@"NSArray",R,N,V_requiredSourceTrackIDs
Ti,R,D,N
shouldCancelAllRequests
sourceTrackIDs
sourceFrameByTrackID:
defaultCIContext
filteringRequestsInFlight
setShouldCancelAllRequests:
_filteringRequestsInFlight
_shouldCancelAllRequests
_defaultCIContextThreadSafety
_defaultCIContext
TB,V_shouldCancelAllRequests
T@"NSObject<OS_dispatch_group>",R,V_filteringRequestsInFlight
imageWithCVPixelBuffer:
playerItemOutputHostForPlayerItem:
dependencyFactory
nativeRepresentationSubtypes
textStylingResolution
initWithMediaSubtypesForNativeRepresentation:
initWithDependencyFactory:mediaSubtypesForNativeRepresentation:
legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:
setTextStylingResolution:
_legibleOutputInternal
T@"<AVPlayerItemLegibleOutputPushDelegate>",R,W,N
baseSettingsProvider
videoSettingsAdjuster
sourceVideoFormat
sourceAudioFormat
sourceVideoAverageFrameDuration
sourceVideoMinFrameDuration
_allOutputSettingsPresets
baseSettingsProviderForPreset:
initWithPreset:
videoSettingsAdjusterForPreset:
baseAudioSettings
baseVideoSettings
averageBitRateForSourceFormatDescription:andTargetFrameRate:andEncoderSpecification:
videoEncoderCapabilities
averageNonDroppableFrameIntervalIsSupportedByDefaultEncoderForVideoCodec:
colorSpaceFromSourceFormatDescriptions:andRendererColorSpace:
validatesSourceVideoMinFrameDuration
availableOutputSettingsPresets
outputSettingsAssistantWithPreset:
setSourceAudioFormat:
setSourceVideoFormat:
setSourceVideoAverageFrameDuration:
setSourceVideoMinFrameDuration:
setVideoEncoderSpecification:
initWithOutputSettingsPreset:
_exportSettings
_outputSettingsPresetIdentifier
groupDictionaries
selectedMediaArray
_loadiVarsIfNeeded
_createDefaultMediaSelectionOptions
_groupDictionaries
_dictionaryGroupsWithSelectedOption
_propertyListForSelectedMediaOptionInMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
_mediaSelection
_validatedGroupIdentifierKey:
_isValidMediaSelectionOption:forMediaSelectionGroup:
weakReferenceToExternalDevice
UUID
screenID
inputMode
_externalDevice
_figEndpointHIDInputMode
initWithExternalDeviceAndHIDDictionary:hidDictionary:
setInputMode:
_externalDeviceHID
_size
_data
_prerendered
pixelSize
imageData
isPrerendered
_externalDeviceIcon
prerendered
TB,R,N,GisPrerendered
_HIDs
_makeHIDsOnlyOnce
_MFiCertSerial
_queue
_oemIcons
_screenInfo
_viewAreasQueue
_currentViewAreas
_makeIconsOnlyOnce
initWithExternalDevice:client:reason:
client
_client
T@"NSString",R,N,V_client
initWithExternalDevice:
screenIDs
setViewAreaIndex:andAdjacentViewAreas:forScreenID:
valueWithRect:
externalDeviceHIDs
OEMIcons
requestCarUIForURL:withUUID:
currentExternalDevice
screenViewAreas
screenSafeAreas
screenInputCapabilities
screenPrimaryInputDevices
externalDeviceHIDWithUUID:
OEMIcon
OEMIconLabel
OEMIconVisible
modelName
nightMode
nightModeSupported
rightHandDrive
limitedUIElements
limitedUI
ownsTurnByTurnNavigation
ownsScreen
recognizingSpeech
supportedFeatures
electronicTollCollection
navigationAidedDriving
transportType
MFiCertificateSerialNumber
requestCarUI
requestCarUIForURL:
requestViewArea:forScreenID:
requestTurnByTurnNavigationOwnership
borrowScreenForClient:reason:
takeScreenForClient:reason:
takeScreenForConnection
sendCommand:withParameters:
_triggerFakeNotificationNamed:withPayload:
T@"<AVExternalDeviceDelegate>",N
iOSUIRequestedForApplicationURL:
siriRequestedWithAction:
initWithAvailableFigEndpoints:
_figEndpoints
outputDeviceDiscoverySessionAvailableOutputDevicesWithAvailableFigEndpoints:
startObservingObject:weakObserver:forTwoPartKeyPath:options:context:
captionLayerWithPlayer:
setCaptionContentInsets:
captionContentInsets
_configurationQueue
_playerBeingObserved
_KVOInvokers
_legibleContentInsets
T{NSEdgeInsets=dddd},N
overscanSubtitleSupportEnabled
TB,N,GisOverscanSubtitleSupportEnabled
initWithVideoComposition:
_setupFigCallbacks
_validateSourcePixelBufferAttributes:andReturnException:
_validateRequiredPixelBufferAttributesForRenderContext:andReturnException:
customVideoCompositor:wouldHaveTriggeredException:
_cleanupFigCallbacks
_colorPropertiesAreSetInVideoComposition:
compositionFrame:didFinishWithComposedPixelBuffer:
compositionFrame:didFinishWithError:
compositionFrameDidCancel:
_figCustomCompositor
_hasRegisteredFigCustomCompositorCallbacks
_clientRequiredPixelBufferAttributes
_weakSelf
_callbackContextToken
_videoCompositionQ
_videoCompositionDidChange
_clientCustomCompositorQ
_clientCustomCompositor
_clientErrorQ
_clientError
_renderContextQ
_renderContext
_finishedRequestQ
initWithFigVideoCompositor:clientRequiredPixelBufferAttributes:videoComposition:pixelBufferPool:
initUsingSession:withRenderContext:compositionFrame:atTime:usingSources:instruction:withSampleBuffers:
hasEqualPropertiesToFigVideoCompositor:
_compositionFrame:atTime:requiresRenderUsingSources:requiresSampleBuffersUsingSources:withInstruction:
_customCompositorShouldAnticipateRenderingFromTime:toTime:andThenFromTime:toTime:
_customCompositorShouldPrerollForRenderingFromTime:toTime:andThenFromTime:toTime:requestID:
_customCompositorShouldCancelPendingFrames
_customCompositorFigPropertyDidChange
processIdentifier
videoDynamicRange
refreshRate
Ti,R
initWithDescriptionOfHowAllObservedPropertyChangesAreSerializedWithDispatcherDeallocation:
initWithCallbackContextRegistry:observer:object:keyPath:options:block:
initForObservingValueAtKeyPath:onObject:
initWithObservedObject:realNotifier:
callbackDidFireWithChangeDictionary:
startObservingValueAtTwoPartKeyPath:ofObject:options:usingBlock:
startObservingValueAtKeyPath:withoutKeepingAliveObservedObject:options:usingBlock:
_callbackContextRegistry
weakObservationBlockForWeakObserver:passedToBlock:
observedObject
T@"NSObject",R,N
_observer
_keyPath
_weakReferenceToObject
_unsafeUnretainedObject
_callbackRegistrations
keyPathString
initializationIsCompleteForObject:
initWithObject:thatHasPropertyWithKey:whoseValueDependsOnValueAtKeyPath:
_weakReferenceToDependencyHost
_callbackCancellationHelper
_keyPathDependencies
topLevelPropertyKey
_reactToTopLevelPropertyChange:
_startObservingSecondLevelPropertyOnNewCurrentValueForTopLevelDependencyProperty:
secondLevelPropertyKey
_reactToSecondLevelPropertyChange:
_subObjectRegistrationQueue
_KVODispatcher
_dependentKey
_dependencyKeyPath
_leafPropertyChangeNotifier
initWithTopLevelPropertyKey:secondLevelPropertyKey:
_topLevelKey
_secondLevelKey
T@"NSString",R,N,V_topLevelKey
T@"NSString",R,N,V_secondLevelKey
valueForKeyForKVO:
topLevelDependencyProperty
dependentProperty
_dependencyManager
_observedObject
_realNotifier
setRenderContext:
compositionFrame
setCompositionFrame:
setCompositionTime:
sourcesByTrackID
setSourcesByTrackID:
sourceTrackIDsInClientOrder
setSourceTrackIDsInClientOrder:
sampleBufferSourcesByTrackID
setSampleBufferSourcesByTrackID:
sourceSampleBufferTrackIDsInClientOrder
setSourceSampleBufferTrackIDsInClientOrder:
instruction
setInstruction:
setIsFinished:
_compositionFrame
_compositionTime
_sourcesByTrackID
_sourceTrackIDsInClientOrder
_sampleBufferSourcesByTrackID
_sourceSampleBufferTrackIDsInClientOrder
T@"AVWeakReference",&,N,V_session
T@"AVVideoCompositionRenderContext",&,N,V_renderContext
T^{OpaqueFigVideoCompositorFrame=},N,V_compositionFrame
T{?=qiIq},N,V_compositionTime
T@"NSDictionary",&,N,V_sourcesByTrackID
T@"NSArray",&,N,V_sourceTrackIDsInClientOrder
T@"NSDictionary",&,N,V_sampleBufferSourcesByTrackID
T@"NSArray",&,N,V_sourceSampleBufferTrackIDsInClientOrder
T@"<AVVideoCompositionInstruction>",&,N,V_instruction
TB,N,V_isFinished
sourceSampleBufferByTrackID:
sourceTimedMetadataByTrackID:
T@"AVVideoCompositionRenderContext",R,N
T@"<AVVideoCompositionInstruction>",R,N
routeDetectionEnabled
multipleRoutesDetected
detectsCustomRoutes
outputDeviceDiscoverySession
outputDevicesChangeNotificationToken
didEnterForegroundNotificationToken
customRouteDiscoverySession
customRoutesPresent
routeDetectionSuspended
mainQueue
_updateMultipleRoutesDetected
_didEnterBackground
_didEnterForeground
_updateRouteDetectionEnabled
isRouteDetectionEnabled
_isAirPlayDevicePresenceDetected
_isCustomRoutePresenceDetected
setBundleID:
setBluetoothServices:
setBluetoothCompanyIdentifiers:
setBonjourServiceTypes:
setPresenceOnly:
initWithConfiguration:error:
setDispatchQueue:
eventType
devicesPresent
setEventHandler:
activate
setRouteDetectionEnabled:
setDetectsCustomRoutes:
_routeDetectorInternal
TB,GisRouteDetectionEnabled
_basisProperties
_renderTransform
_renderScale
_pixelAspectRatio
_edgeWidths
_highQualityRendering
_destinationDesiredPixelBufferAttributes
_destinationDesiredPixelBufferYCbCrMatrix
_destinationDesiredPixelBufferColorPrimaries
_destinationDesiredPixelBufferTransferFunction
_blendingTransferFunction
pixelFormatFamily
_pixelAspectRatioDict
_cleanApertureDict
_destinationPixelBufferDimensions
_bufferPoollInitMutex
_pixelBufferPoolQ
isBufferYCbCr:
pixelAspectRatio
edgeWidths
highQualityRendering
T{?=qq},R,N
T{?=dddd},R,N
T@"AVVideoComposition",R,N
renderContextPropertiesFromFigCompositor:
_mediaDataStorageInternal
_startListeningToLoaderNotifications
initWithData:options:
movieTypes
_initWithFormatReader:URL:data:options:
_stopListeningToLoaderNotifications
movieWithURL:options:
movieWithData:options:
_initWithFigAsset:
_initWithFigError:userInfo:
_figMutableMovieFromFormatReader:
defaultMediaDataStorage
canContainMovieFragments
containsMovieFragments
_movie
T@"AVMediaDataStorage",R,N
_mutableMovieForFileType:
movieHeaderWithFileType:error:
writeMovieHeaderToURL:fileType:options:error:
isCompatibleWithFileType:
trackWaitingSemaphore
initWithURL:options:error:
initWithData:options:error:
initWithSettingsFromMovie:options:error:
movieWithURL:options:error:
movieWithData:options:error:
movieWithSettingsFromMovie:options:error:
initWithSettingsFromMovie:options:
initWithFileType:copySettingsFromMovie:options:
_signalTracksUpdated
interleavingPeriod
setInterleavingPeriod:
setDefaultMediaDataStorage:
_mutableMovieInternal
insertTimeRange:ofAsset:atTime:copySampleData:error:
_addMutableTrackWithMediaType:copySettingsFromTrack:options:
addMutableTrackWithMediaType:copySettingsFromTrack:options:
addMutableTracksCopyingSettingsFromTracks:options:
advanceIntervalForDataAvailability
setAdvanceIntervalForDataAvailability:
_advanceIntervalForDataAvailability
Td,N,V_advanceIntervalForDataAvailability
initWithConfiguration:
_figPlaybackItem
outputMediaDataAvailable:trackID:
outputSequenceWasFlushed:trackID:
_setFigPlaybackItem:
_weakReferenceToPlayerItemTrack
copyNextSampleBufferForTrackID:flags:
_figPlaybackItemTrackSampleBufferDidBecomeAvailableForTrackID:extractionID:
_figPlaybackItemTrackOutputSequenceWasFlushedForTrackID:extractionID:
_stateQueue
_delegateStorage
T@"<AVPlayerItemSampleBufferOutputDelegate>",R,W
weakSession
reportGroup
keyIDFromInitializationData
responseParamsSent
providesPersistableKey
preloadingRequestOptions
customURLRequestID
isRenewalRequest
cryptorUUID
isInchargeOfKeyRequest
stateMutex
hasAnyKeyRequestSucceeded
contentKeySpecifier
contentKey
contentIdentifier
weakContentKeyBoss
useContentKeyBoss
keySpecifier
keySystem
_validateProtocolVersionList:
_validateHLSEncryptionMethod:
initForKeySystem:identifier:initializationData:options:
_keySystem
_setWeakReferenceForContentKeyRequest:withCryptorUUID:
initWithContentKeySession:reportGroup:identifier:contentIdentifier:keyIDFromInitializationData:initializationData:preloadingRequestOptions:providesPersistableKey:
_copyAndStoreCryptorUUID
initWithSpecifier:andCryptor:
contentKeyRequestDidProduceContentKey:
_clearContext
_prepareCryptor:forRenewal:andReturnKeyRequestID:isInchargeOfKeyRequest:error:
_setStatus:
_finishLoadingCustomURLRequestWithError:
_invokeDelegateCallbackWithBlock:synchronouslyWhenDelegateQueueIsNULL:
_getRetryReasonForError:
createCryptorIfNecessaryForIdentifier:initializationData:formatDescription:hlsMethod:error:
_ensureProtocolVersionList:
_validateServerChallenge:
configureAppIdentifier:
_mergePreloadingRequestOptions:withCreateKeyRequestOptions:
ensureCryptorWithFormatDescription:error:
_createKeyRequestDictionaryForApp:persistentKey:serverChallenge:cryptorKeyRequestID:purpose:
createProtectorSessionIdentifierIfNecessary
_copyContentKeyBoss
_makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:error:
processContentKeyResponseData:renewalDate:error:
_setContentKeyRequest:forCryptorUUID:cryptorKeyRequestID:
_finishLoadingCustomURLRequestWithResponseData:renewalDate:
_handleKeyResponseError:
_processContentKeyResponse:renewalDate:initalizationVector:error:
_setAuthorizationToken:forIdentifier:error:
_processContentKeyResponseError:
renewExpiringResponseDataForContentKeyRequest:
clientCanReceivePersistableContentKeyRequest
_canRespondByRequestingPersistableContentKeyRequest
issuePersistableContentKeyRequestForKeySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:requestID:preloadingRequestOptions:identifier:
issueContentKeyRequestWithCustomURLHandler:identifier:requestInfo:requestID:providesPersistableKey:
issueContentKeyRequestWithPreloadingRequestOptions:identifier:initializationData:providesPersistableKey:
respondByRequestingPersistableContentKeyRequestAndReturnError:
_sendResponseInfoToCustomURLHandlerWithRenewalDate:
initWithContentKeySession:reportGroup:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:isRenewalRequest:
initWithContentKeySession:contentKeyBoss:useContentKeyBoss:keySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:isRenewalRequest:requestID:providesPersistableKey:preloadingRequestOptions:identifier:
_encryptionMode
_prepareForKeyRenewalReturningError:
renewsExpiringResponseData
canProvidePersistableContentKey
_handleKeyResponseSuccessWithCryptor:
makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:
processContentKeyResponseData:
respondByRequestingPersistableContentKeyRequest
_contentKeyRequest
T@,R
T@"NSDictionary",R,C
T@"AVContentKeySpecifier",R
T@"AVContentKey",R
externalProtectionStatusForCryptor:withDisplays:
willOutputBeObscuredDueToInsufficientExternalProtectionForDisplays:
externalContentProtectionStatus
setReportGroup:
persistableContentKeyFromKeyVendorResponse:options:error:
initWithKeySystem:
initWithKeyData:renewalDate:
_keyData
_renewalDate
initWithKeyData:initializationVector:
_initializationVector
initWithAuthorizationTokenData:
_authorizationTokenData
initWithRequestCount:
addRequest:
haveAllRequestsBeenReceived
_totalExpectedRequestCount
_requests
initWithInitializationData:contentIdentifier:keyIDFromInitializationData:options:identifier:
setInitializationData:
setContentIdentifier:
setKeyIDFromInitializationData:
setOptions:
_initializationData
_contentIdentifier
_keyIDFromInitializationData
T@"NSData",C,V_initializationData
T@"NSData",C,V_contentIdentifier
T@"NSData",C,V_keyIDFromInitializationData
T@"NSDictionary",C,V_options
T@,C,V_identifier
contentKeyResponseWithFairPlayStreamingKeyResponseData:renewalDate:
contentKeyResponseWithClearKeyData:initializationVector:
contentKeyResponseWithAuthorizationTokenData:
_keyResponse
_storageURL
_appIdentifier
_isExpired
_defaultContentKeyGroup
_contentKeyRecipients
keyRequestsByRequestID
cryptorUUIDToContentKeyRequestMap
keyRequestParamsByRequestID
keyRequestTrackerByRequestID
cryptorsByIdentifer
contentKeyRequestByKeySpecifierMap
_contentKeyBoss
_useContentKeyBoss
contentKeySessionWithKeySystem:
initWithKeySystem:storageDirectoryAtURL:legacyWebKitCompatibilityMode:
trackRequest:byRequestID:
issueContentKeyRequests:forInitializationData:
issueRenewableContentKeyRequest:
issueContentKeyRequest:
keyRequestByID:
removeResourcesForID:
contentKeySession:externalProtectionStatusDidChangeForContentKeyRequest:
strongToWeakObjectsMapTable
defaultGroupID
initWithKeySystem:keySession:contentKeyBoss:useContentKeyBoss:groupID:storageDirectoryAtURL:
getUUIDBytes:
_processContentKeyRequestWithIdentifier:encryptionMode:supportedProtocolVersions:groupID:error:
processContentKeyRequestForPSSHEntries:initializationData:groupID:options:
processContentKeyRequestForSinf:initializationData:groupID:options:
processContentKeyRequestForTransportStreamWithCodecType:initializationData:groupID:options:
processContentKeyRequestWithIdentifier:initializationData:options:
_processContentKeyRequestWithIdentifier:initializationData:options:groupID:
_renewKeyWithIdentifier:encryptionMode:error:
copyDefaultSecureStopManagerForAppIdentifier:storageDirectoryAtURL:
contentKeySessionWithLegacyWebKitCompatibilityModeAndKeySystem:storageDirectoryAtURL:
contentKeySessionWithKeySystem:storageDirectoryAtURL:
initWithStorageDirectoryAtURL:
didProvideKeyRequestWithBoss:keySpecifier:requestID:renewalRequest:
contentKeyRequestDidSucceedWithBoss:keySpecifier:requestID:cryptor:
externalProtectionStateChangedCallbackWithBoss:keySpecifier:
storageURL
removeContentKeyRecipient:
contentKeyRecipients
makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:
invalidatePersistableContentKey:options:completionHandler:
invalidateAllPersistableContentKeysForApp:options:completionHandler:
T@"<AVContentKeySessionDelegate>",R,W
T@"NSObject<OS_dispatch_queue>",R
T@"NSURL",R
_handleSecureStopDidFinalizeRecordCallback
_handleExternalProtectionStateChangedCallbackForCryptKeyIdentifier:
pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:
removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:
_uniqueIDForCyptorUUID:cryptorKeyRequestID:
_contentKeyRequestForCryptorUUID:cryptorKeyRequestID:
_removeContentKeyRequestForCryptorUUID:cryptorKeyRequestID:
contentKeySession:contentProtectionSessionIdentifierDidChangeForReportGroup:
_internalQueue
_handleKeyResponseError:forCryptorUUID:andCryptorKeyRequestID:
_handleKeyResponseSuccessfullyProcessedForCryptorUUID:andCryptorKeyRequestID:
_handleUpdateToPersistentKey:forKeyIdentifier:
_handleContentProtectionSessionIdentifierDidChange:
contentKeySession:didProvideContentKeyRequests:forInitializationData:
issueContentKeyRequest:toDelegateWithCallbackSelector:
issuePersistableContentKeyRequest:
copyCryptorForIdentifier:initializationData:
copyCryptorForCryptKeyAttributes:
_sendFinishLoadingForPreloadedKeyRequest:withRequestID:fromHandler:error:
_handleRequest:withRequestID:fromHandler:willHandleRequest:
internal
TB,R,N,GisInternal
_makeContentKeyGroupWithIDOut:error:
defaultContentKeyGroup
makeContentKeyGroup
T@"AVContentKeyReportGroup",R
failProcessingContentKeyRequestWithIdentifier:initializationData:error:
_processContentKeyRequestWithKeyRequestFromPSSH:decryptFormatType:initializationData:options:
_processContentKeyRequestWithIdentifier:contentIdentifier:keyIDFromInitializationData:initializationData:options:
_associateRequestWithGroupWithRequestID:error:
_destroyContentKeyGroupWithError:
cryptorOptionsForIdentifier:initializationData:formatDescription:hlsMethod:
associateContentKeyRequest:
_contentKeySessionWeakReference
_protectorSessionIdentifier
_cryptorsList
_weakContentKeyBoss
initForKeySystem:identifier:options:
T@"NSString",R,V_keySystem
T@,R,V_identifier
T@"NSDictionary",R,V_options
contentKeyWithSpecifier:andCryptor:
cryptor
_cryptor
T@"AVContentKeySpecifier",R,VcontentKeySpecifier
dataUsingEncoding:
initWithBase64EncodedData:options:
initWithRemoteGroupID:syncController:
outputDeviceGroupWithRemoteGroupID:syncController:
_outputDevicesFromProperty:withQualifier:
_outputDeviceForID:
_groupMembersChangedForGroupWithID:
_volumeChangedForGroupWithID:
_volumeControlTypeChangedForGroupWithID:
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v20@0:8f16
q16@0:8
v24@0:8@16
f16@0:8
v40@0:8@"AVOutputDevice"16@"NSDictionary"24@?<v@?@"AVOutputDeviceGroupMembershipChangeResult">32
@"AVOutputDeviceGroup"16@0:8
v24@0:8@"AVOutputDeviceGroup"16
@"NSArray"16@0:8
@"AVOutputDevice"16@0:8
@24@0:8@16
v16@0:8
@"AVOutputContext"
@"AVOutputDeviceGroup"
@"AVQueuePlayer"
@"AVPlayerItem"
@"NSMutableArray"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
@"NSObject<OS_dispatch_queue>"
{?="value"q"timescale"i"flags"I"epoch"q}
@"NSError"
@"<AVCallbackCancellation>"
@"AVWeakReference"
@80@0:8@16@24{?={?=qiIq}{?=qiIq}}32
@32@0:8@16@24
i16@0:8
B24@0:8^@16
v48@0:8@16@24@32^v40
@"AVPlayerLooperInternal"
v32@0:8^q16^@24
^{OpaqueFigSimpleMutex=}
@"AVAssetReaderTrackOutput"
i48@0:8@16^{OpaqueFigAssetReader=}24@32^i40
i48@0:8@"AVAssetReaderTrackOutput"16^{OpaqueFigAssetReader=}24@"NSDictionary"32^i40
@"AVAssetReaderOutputMetadataAdaptorInternal"
@"NSDictionary"
d16@0:8
@"AVVideoPerformanceMetricsInternal"
@"<AVOutputDeviceDiscoverySessionImpl>"
@"<AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl>"
@24@0:8Q16
v24@0:8q16
v32@0:8q16@24
v32@0:8@16@24
@"AVOutputDeviceDiscoverySessionInternal"
@"AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal"
v24@0:8@?16
v24@0:8#16
v20@0:8B16
v32@0:8@16@?24
B28@0:8B16^@20
B32@0:8@16^@24
v40@0:8@?16@24@?32
v32@0:8@"NSString"16@?<v@?@@"NSError">24
B32@0:8@"NSString"16^@24
v40@0:8@?<v@?@"<AVOutputDeviceConfigurationModification>">16@"NSDictionary"24@?<v@?q@"<AVOutputDeviceConfigurationRetrieval>"@"NSString"@"NSError">32
@"<AVOutputDeviceImplSupport>"16@0:8
v24@0:8@"<AVOutputDeviceImplSupport>"16
@"NSData"16@0:8
@"NSNumber"16@0:8
@"NSDictionary"16@0:8
@32@0:8^{OpaqueAPSyncController=}16@24
v24@0:8^{__CFString=}16
^{OpaqueAPSyncController=}
@"<AVOutputDeviceImpl>"
@"<AVOutputDeviceImplSupport>"
@"AVNetworkPlaybackPerfHUDLayer"
@"AVKeyPathDependencyManager"
@"AVPlayer"
@"NSString"
@"FigBaseCALayer"
@"FigVideoContainerLayer"
@"FigSubtitleCALayer"
@"AVPlayerLayer"
{CGSize="width"d"height"d}
@"CALayer"
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
@"AVSinkSubscriber"
v24@0:8@"<AVKeyPathDependencyRegistration>"16
v24@0:8@"<AVCallbackCancellation>"16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
v40@0:8@16@24@32
v192@0:8@16{CATransform3D=dddddddddddddddd}24@152@160{CGSize=dd}168@184
v56@0:8@16{CGSize=dd}24@40@48
{CGSize=dd}16@0:8
v28@0:8B16@20
v28@0:8@16B24
v56@0:8^@16^@24^@32^@40^@48
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{NSEdgeInsets=dddd}16
{NSEdgeInsets=dddd}16@0:8
^{__CVBuffer=}16@0:8
v32@0:8@16q24
v28@0:8@16I24
@"AVPlayerLayerInternal"
@40@0:8{?=qiIq}16
{?=qiIq}16@0:8
v24@0:8^v16
r*16@0:8
c16@0:8
C16@0:8
s16@0:8
S16@0:8
I16@0:8
@24@0:8^{_NSZone=}16
@64@0:8{?={?=qiIq}{?=qiIq}}16
{?={?=qiIq}{?=qiIq}}16@0:8
@112@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@0:8
{?="source"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}"target"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}}
v48@0:8{?=qiIq}16@40
{?=qiIq}24@0:8@16
v72@0:8{?={?=qiIq}{?=qiIq}}16@64
{?={?=qiIq}{?=qiIq}}24@0:8@16
v120@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@112
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}24@0:8@16
@32@0:8^{OpaqueCMTimebase=}16@24
^{OpaqueCMTimebase=}16@0:8
@"NSObject<OS_dispatch_source>"
^{OpaqueCMTimebase=}
@64@0:8^{OpaqueCMTimebase=}16{?=qiIq}24@48@?56
v40@0:8{?=qiIq}16
@48@0:8^{OpaqueCMTimebase=}16@24@32@?40
{?=qiIq}40@0:8{?=qiIq}16
@"NSArray"
@"AVWeakReferencingDelegateStorage"
@"NSDate"
@"AVPlayerItemMetadataCollectorInternal"
@56@0:8@16@24@32^@40^@48
@24@0:8@?16
@128@0:8@16@24{?=qiIq}32@56Q64{?=qiIq}72{?=qiIq}96@120
@112@0:8@16@24@32@40Q48{?=qiIq}56{?=qiIq}80@104
@40@0:8@16@24^{OpaqueFigPlayerInterstitialEvent=}32
@48@0:8@16{?=qiIq}24
@24@0:8^@16
@136@0:8@16@24{?=qiIq}32@56@64Q72{?=qiIq}80{?=qiIq}104@128
@56@0:8@16{?=qiIq}24@48
v24@0:8Q16
^{OpaqueFigPlayerInterstitialEvent=}16@0:8
B24@0:8^i16
^{OpaqueFigPlayerInterstitialEvent=}
@28@0:8@16B24
v24@0:8^{OpaqueFigPlayerInterstitialCoordinator=}16
^{OpaqueFigPlayerInterstitialCoordinator=}
^{OpaqueFigVisualContext=}
^{OpaqueVTPixelBufferConformer=}
B36@0:8@16B24^@28
^{__CVBuffer=}52@0:8{?=qiIq}16^{?=qiIq}40I48
B40@0:8{?=qiIq}16
^{__CVBuffer=}48@0:8{?=qiIq}16^{?=qiIq}40
^{__CVBuffer=}24@0:8^{?=qiIq}16
B24@0:8^{OpaqueFigVideoQueue=}16
^{OpaqueFigVisualContext=}16@0:8
@"AVSampleBufferVideoOutputInternal"
@"AVAssetDownloadStorageManagementPolicyInternal"
@"NSMutableDictionary"
@"<AVOutputDeviceGroupImpl>"
@32@0:8q16@24
^{OpaqueFigMetadataReader=}
@"<NSObject><NSCopying>"
@"NSLocale"
@24@0:8^v16
^{CGImage=}16@0:8
@40@0:8@16@24@32
@36@0:8@16@24I32
q32@0:8@16^@24
q32@0:8@"NSString"16^@24
v32@0:8@"NSArray"16@?<v@?>24
@32@0:8^{OpaqueFigMetadataReader=}16q24
B32@0:8@16@24
@24@0:8B16B20
^v32@0:8^{opaqueCMFormatDescription=}16^@24
@32@0:8@16^@24
@"AVMetadataItemInternal"
@"AVMutableMetadataItemInternal"
@"AVMetadataItemValueRequest"
@32@0:8@16@?24
@"AVLazyValueLoadingMetadataItemInternal"
@"AVMetadataItemValueRequestInternal"
^{OpaqueFigAsset=}
@120@0:8@16q24q32@40@48@56@64{?=qiIq}72{?=qiIq}96
v28@0:8q16i24
@"AVChapterMetadataItemInternal"
@"AVMetadataItemFilterInternal"
@"AVAssetInspectorLoader"
@"AVDispatchOnce"
^{OpaqueFigAsset=}16@0:8
^{OpaqueFigFormatReader=}16@0:8
^{OpaqueFigPlaybackItem=}16@0:8
@"AVAssetProxyInternal"
@"<AVLoggingIdentifier>"
@44@0:8@16^{OpaqueFigPlaybackItem=}24@32B40
q24@0:8@16
^{OpaqueFigMutableComposition=}16@0:8
{CGAffineTransform=dddddd}16@0:8
@24@0:8#16
@20@0:8i16
v28@0:8i16@?20
@"AVAssetInternal"
Q88@0:8@16{?={?=qiIq}{?=qiIq}}24@72Q80
@24@0:8q16
@"AVAssetFragmentInternal"
@32@0:8Q16Q24
@"AVAssetClientURLRequestHelper"
@"AVAssetCustomURLBridgeForNSURLProtocol"
@"AVAssetCustomURLAuthentication"
@"NSURL"
@"AVAssetResourceLoader"
@"AVAssetCache"
@48@0:8@16@24^Q32^@40
@48@0:8@16q24q32@40
@32@0:8^{__CFDictionary=}16^{__CFString=}24
@"AVURLAssetInternal"
r^{OpaqueFigAsset=}16@0:8
@?16@0:8
@32@0:8@16^Q24
@"NSEnumerator"
v32@0:8@"AVContentKeySession"16@"AVContentKey"24
i40@0:8@16^{CMBaseObject=}24^B32
i40@0:8@"AVContentKeySession"16^{CMBaseObject=}24^B32
@"AVContentKeySession"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSSecurityScopedURLWrapper"
@40@0:8@16@24^@32
@44@0:8@16@24B32^@36
@"AVAudioMixEffectParametersInternal"
@32@0:8I16I20f24f28
@20@0:8f16
@"AVAudioMixSweepFilterEffectParametersInternal"
^{OpaqueFigAssetImageGenerator=}
@"AVAsset"
@"AVVideoComposition"
@"AVCustomVideoCompositorSession"
@32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16^{?=qiIq}40^@48
v48@0:8{?=qiIq}16@?40
v32@0:8{CGSize=dd}16
{CGSize=dd}32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16@40^@48
@"AVAssetImageGeneratorInternal"
v32@0:8@"NSData"16@?<v@?@"NSError">24
@"AVOutputDeviceCommunicationChannel"16@0:8
v24@0:8@"AVOutputDeviceCommunicationChannel"16
@24@0:8^{OpaqueFigEndpointRemoteControlSession=}16
^{OpaqueFigEndpointRemoteControlSession=}
@"AVOutputDeviceCommunicationChannel"
@"AVAssetTrackInspector"
^{OpaqueFigAssetTrack=}
@36@0:8@16i24q28
@28@0:8@16i24
@32@0:8@16q24
^{OpaqueFigTrackReader=}16@0:8
^{OpaqueFigAssetTrack=}16@0:8
B24@0:8I16I20
@"AVAssetTrackInternal"
@"AVPixelBufferAttributeMediator"
^{__CFNumber=}
@"AVAudioSessionMediaPlayerOnly"
@"<AVBlockScheduler>"
@"NSMutableSet"
@"AVAudioSession"
@"AVPlayerRateState"
@"NSNumber"
@"AVPlayerPlaybackCoordinator"
@"NSHashTable"
^{OpaqueFigPlayer=}
^{OpaqueFigPlaybackItem=}
@"AVPlayerMediaSelectionCriteria"
^{OpaqueCMClock=}
@24@0:8^{OpaqueFigPlayer=}16
i40@0:8q16r^{__CFDictionary=}24^^{OpaqueFigPlayer}32
^{OpaqueFigPlayer=}16@0:8
v48@0:8@16@24Q32^v40
v32@0:8@16^{OpaqueFigPlayer=}24
B40@0:8@?16@?24^@32
v24@0:8^{OpaqueFigPlaybackItem=}16
v32@0:8q16@?24
@44@0:8@16B24@28@36
@36@0:8i16@20@28
B32@0:8f16i20@?24
v56@0:8f16{?=qiIq}20B44i48B52
v44@0:8f16{?=qiIq}20
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
v68@0:8f16{?=qiIq}20{?=qiIq}44
v76@0:8f16{?=qiIq}20{?=qiIq}44@68
i24@0:8@?16
v28@0:8f16@?20
v28@0:8B16^{__CFDictionary=}20
^{OpaqueCMClock=}16@0:8
v24@0:8^{OpaqueCMClock=}16
^{__CFString=}24@0:8q16
v28@0:8q16B24
@56@0:8{?=qiIq}16@40@?48
@40@0:8@16@24@?32
v40@0:8@16r^{CGRect={CGPoint=dd}{CGSize=dd}}24r^{NSEdgeInsets=dddd}32
v24@0:8^{OpaqueFigPlayer=}16
v56@0:8@16@24@32@40@48
B40@0:8^@16^{CGSize=dd}24^@32
@"AVPlayerInternal"
B24@0:8q16
v20@0:8i16
B32@0:8d16^@24
@"AVAudioSession"16@0:8
v24@0:8@"AVAudioSession"16
@40@0:8q16@24@32
v24@0:8^{OpaqueFigVideoTarget=}16
^{OpaqueFigPlayerInterstitialCoordinator=}16@0:8
@32@0:8B16B20q24
@28@0:8f16@20
@20@0:8B16
@28@0:8B16@20
@32@0:8i16B20@24
@32@0:8B16B20@24
@40@0:8^{OpaqueFigPlayer=}16B24B28@32
r^v24@0:8q16
v32@0:8^v16q24
v32@0:8^v16@24
@"AVURLAsset"
@"NSData"
@"AVAssetDownloadContentConfiguration"
@"AVDisplayCriteria"
@112@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88
@"AVVideoCompositionRenderHintInternal"
^{opaqueMTAudioProcessingTap=}
{?="mutex"^{OpaqueFigSimpleMutex}"requester"@"AVMediaDataRequester"}
@"AVScheduledAudioParameters"
@"AVContentKeySession"
^{opaqueCMFormatDescription=}
^{OpaqueFigCPECryptor=}
^{OpaqueFigSampleBufferAudioRenderer=}
v24@0:8^^{OpaqueFigSampleBufferAudioRenderer}16
B32@0:8@"AVSampleBufferRenderSynchronizer"16^@24
v24@0:8@"NSString"16
v24@0:8^{opaqueCMSampleBuffer=}16
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v24@0:8^{opaqueMTAudioProcessingTap=}16
^{opaqueMTAudioProcessingTap=}16@0:8
@"AVSampleBufferAudioRendererInternal"
^{OpaqueFigSampleBufferAudioRenderer=}40@0:8r^{__CFAllocator=}16r^{__CFDictionary=}24^@32
@"AVAssetWriterInput"
@"AVAssetWriterInputMetadataAdaptorInternal"
@"AVExternalProtectionMonitorInternal"
@24@0:8d16
@24@0:8^{opaqueCMFormatDescription=}16
f32@0:8{CGSize=dd}16
^{OpaqueVTPixelBufferAttributesMediator=}
@"<AVPlayerItemDelegate>"
@"AVAudioMix"
^{__CFString=}
@"AVPlayerItemInterstitialEventCollector"
@"AVMediaSelection"
@"AVPlayerConnection"
^{OpaqueFigCPEProtector=}
i60@0:8^{OpaqueFigPlayer=}16@24@32I40^{__CFDictionary=}44^^{OpaqueFigPlaybackItem}52
^{OpaqueCMTimebase=}24@0:8^{OpaqueFigPlaybackItem=}16
@32@0:8^{_NSZone=}16@24
^{OpaqueFigPlaybackItem=}20@0:8B16
B24@0:8^{CGSize=dd}16
B24@0:8^B16
@32@0:8@16^{OpaqueFigPlaybackItem=}24
{?=qiIq}24@0:8^{OpaqueCMTimebase=}16
v24@0:8i16B20
v92@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64i88
v100@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64i88@?92
B32@0:8@16@?24
v20@0:8C16
v20@0:8I16
v28@0:8@16i24
v28@0:8^{opaqueMTAudioProcessingTap=}16i24
v40@0:8^@16^@24^^{OpaqueFigVideoCompositor}32
v64@0:8{?={?=qiIq}{?=qiIq}}16
^{OpaqueFigCPEProtector=}16@0:8
@24@0:8^{__CFDictionary=}16
v32@0:8^{OpaqueFigPlaybackItem=}16@24
v32@0:8B16B20@?24
@"AVPlayerItemInternal"
v72@0:8^{OpaqueFigPlaybackItem=}16@24@32{?=qiIq}40@64
v44@0:8^{OpaqueFigPlaybackItem=}16@24i32@36
@48@0:8^{OpaqueFigPlaybackItem=}16B24i28@32@40
@"AVPlayerItemTrackInternal"
@"AVQueuePlayerInternal"
@"AVSpecifiedLoggingIdentifierInternal"
@"AVAssetLoggingIdentifierInternal"
@"AVPlayerLoggingIdentifierInternal"
^{OpaqueFigMutableComposition=}
^{OpaqueFigFormatReader=}
@"AVAssetInspector"
@"AVCompositionInternal"
B104@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72^@96
v104@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72@?96
v88@0:8{?={?=qiIq}{?=qiIq}}16{?=qiIq}64
@"AVMutableCompositionInternal"
^{__CFDictionary=}
@"AVPlayerItemMetadataOutputInternal"
@32@0:8^{opaqueCMFormatDescription=}16^{opaqueCMFormatDescription=}24
r^{opaqueCMFormatDescription=}16@0:8
@"AVCompositionTrackInternal"
B64@0:8@16@24{?=qiIq}32^@56
v32@0:8^v16^{__CFString=}24
v64@0:8{CGAffineTransform=dddddd}16
v40@0:8@16@24q32
v32@0:8^{opaqueCMFormatDescription=}16^{opaqueCMFormatDescription=}24
@"AVMutableCompositionTrackInternal"
@"NSObject"
@28@0:8B16@?20
@"AVPublisher"
^{OpaqueFigReentrantMutex=}
@"AVNotificationSubscription"
@36@0:8@16B24@?28
@"<AVCancellable>"
@"NSNumberFormatter"
B40@0:8o^@16@24o^@32
@"AVTimeFormatterInternal"
@124@0:8@16i24{?={?=qiIq}{?=qiIq}}28{?={?=qiIq}{?=qiIq}}76
@"AVCompositionTrackSegmentInternal"
@"NSObject<OS_dispatch_semaphore>"
@"AVMovieTrackInternal"
^{OpaqueFigMutableMovie=}
@28@0:8i16@20
^{OpaqueFigMutableMovie=}16@0:8
{CGSize=dd}24@0:8^{__CFString=}16
v40@0:8{CGSize=dd}16^{__CFString=}32
@24@0:8^{__CFString=}16
v32@0:8@16^{__CFString=}24
@"AVMutableMovieTrackInternal"
B24@0:8^{opaqueCMFormatDescription=}16
B108@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72B96^@100
B48@0:8^{opaqueCMSampleBuffer=}16^{?=qiIq}24^{?=qiIq}32^@40
B112@0:8{?={?=qiIq}{?=qiIq}}16{?={?=qiIq}{?=qiIq}}64
B32@0:8@16^q24
^{OpaqueFigAssetReader=}
^{OpaqueFigAssetReader=}16@0:8
@"AVAssetReaderInternal"
@"AVRunLoopCondition"
v24@0:8^{OpaqueFigAssetReader=}16
^{opaqueCMSampleBuffer=}16@0:8
@"AVAssetReaderOutputInternal"
@"AVAssetTrack"
@"AVOutputSettings"
@"AVAssetReaderTrackOutputInternal"
@"AVAudioOutputSettings"
^{opaqueMTAudioProcessingTap=}24@0:8@16
v32@0:8^{opaqueMTAudioProcessingTap=}16@24
@"AVAssetReaderAudioMixOutputInternal"
@"AVVideoOutputSettings"
@"AVAssetReaderVideoCompositionOutputInternal"
@"AVAssetReaderSampleReferenceOutputInternal"
@"<AVAssetWriterDelegate>"
@"AVMediaFileType"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"AVAssetWriterHelper"
@"<AVAssetWriterFinishWritingDelegate>"
B40@0:8@16@24@?32
v32@0:8q16q24
@"AVAssetWriterInternal"
@24@0:8^{OpaqueFigAssetWriter=}16
^{OpaqueFigAssetWriter=}
@"AVFragmentedMediaDataReportInternal"
@40@0:8@16^{OpaqueFigAssetWriter=}24@32
v28@0:8B16@"NSError"20
B56@0:8@16{?=qiIq}24^@48
^{OpaqueFigAssetWriter=}16@0:8
@"AVAssetWriterFigAssetWriterNotificationHandler"
@40@0:8@16@24^v32
@"NSOperation"
B48@0:8@16@24^{opaqueCMFormatDescription=}32^@40
@"AVAssetWriterConfigurationState"
@"AVAssetWriterInputGroupInternal"
^{opaqueCMFormatDescription=}16@0:8
^{OpaqueFigTimelineCoordinatorSuspension=}16@0:8
@"AVPlaybackCoordinator"
^{OpaqueFigTimelineCoordinatorSuspension=}
@36@0:8@16B24@28
@"NSUUID"
v24@0:8^{OpaqueFigTimelineCoordinatorSuspension=}16
v48@0:8^{OpaqueFigTimelineCoordinatorSuspension=}16{?=qiIq}24
v24@0:8^{OpaqueFigPlaybackCoordinator=}16
^{OpaqueFigPlaybackCoordinator=}16@0:8
v32@0:8@16^{OpaqueFigPlaybackCoordinator=}24
^{OpaqueFigPlaybackCoordinator=}
@"<AVPlayerPlaybackCoordinatorDelegate>"
@"<AVPlaybackCoordinationMediumDelegate>"
@"<AVOutputDeviceAuthorizationSessionDelegate>"
@"<AVOutputDeviceAuthorizationSessionImpl>"
B40@0:8@16@24@32
@"AVOutputDeviceAuthorizationSessionInternal"
@"<AVOutputDeviceAuthorizationRequestImpl>"
@"AVOutputDeviceAuthorizationRequestInternal"
v24@0:8^{opaqueCMFormatDescription=}16
v20@0:8s16
@"AVAssetWriterInputHelper"
@"AVAssetWriterInputPassDescriptionResponder"
@40@0:8@16@24^{opaqueCMFormatDescription=}32
^{__CVPixelBufferPool=}16@0:8
B40@0:8^{OpaqueFigAssetWriter=}16@24^@32
q32@0:8^{opaqueCMSampleBuffer=}16^@24
B24@0:8^{opaqueCMSampleBuffer=}16
B48@0:8^{__CVBuffer=}16{?=qiIq}24
@"AVAssetWriterInputInternal"
B40@0:8@16@24^@32
@"AVFigAssetWriterTrack"
@"AVAssetWriterInputMediaDataRequester"
^{__CVPixelBufferPool=}
@"AVAssetWriterInputPassDescription"
@"AVAssetWriterInputWritingHelper"
@"AVAssetWriterInputConfigurationState"
@"AVAssetWriterInputPixelBufferAdaptorInternal"
@76@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56@60^@68
@68@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56^@60
B32@0:8^{opaqueCMSampleBuffer=}16^@24
B56@0:8^{__CVBuffer=}16{?=qiIq}24^@48
i44@0:8@16@24B32^@36
@"NSOperationQueue"
@28@0:8^{OpaqueFigAssetWriter=}16i24
v32@0:8B16@20i28
@"AVAssetWriterInputPassDescriptionInternal"
^{CGColor=}
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
@"AVVideoCompositionInstructionInternal"
@"AVMutableVideoCompositionInstructionInternal"
v168@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112:160
v88@0:8{CGAffineTransform=dddddd}16{?=qiIq}64
v160@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112
B64@0:8{?=qiIq}16^{CGAffineTransform=dddddd}40^{CGAffineTransform=dddddd}48^{?={?=qiIq}{?=qiIq}}56
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24:72
v72@0:8f16f20{?={?=qiIq}{?=qiIq}}24
B64@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56
v136@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80:128
v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{?=qiIq}48
v128@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80
B64@0:8{?=qiIq}16^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48^{?={?=qiIq}{?=qiIq}}56
v72@0:8@16{?={?=qiIq}{?=qiIq}}24
@"AVVideoCompositionLayerInstructionInternal"
@"AVMutableVideoCompositionLayerInstructionInternal"
@"AVVideoCompositionCoreAnimationTool"
v24@0:8@"AVVideoCompositionRenderContext"16
v24@0:8@"AVAsynchronousVideoCompositionRequest"16
v24@0:8@"AVVideoCompositionRenderHint"16
B52@0:8r^^v16^@24@32B40^@44
B80@0:8@16{?={?=qiIq}{?=qiIq}}24@72
v88@0:8@16{?={?=qiIq}{?=qiIq}}24@72@?80
v24@0:8f16i20
@"AVVideoCompositionInternal"
v56@0:8@16@24^@32^@40^@48
v40@0:8@16@?24@?32
@"AVMutableVideoCompositionInternal"
@"AVVideoCompositionCoreAnimationToolInternal"
^{OpaqueFigAssetExportSession=}
@"AVMetadataItemFilter"
v48@0:8@16@24@32@?40
{?=qiIq}32@0:8@16@24
q56@0:8@16{?=qiIq}24@48
@"AVAssetExportSessionInternal"
@"<AVStreamDataParserOutputHandling>"
^{OpaqueFigManifold=}
^{OpaqueCMBlockBuffer=}
@"AVContentKeyRequest"
v32@0:8^{OpaqueCMBlockBuffer=}16Q24
v32@0:8@16Q24
v24@0:8B16i20
B20@0:8i16
@"AVStreamDataParserInternal"
i40@0:8^{OpaqueFigManifold=}16^{opaqueCMSampleBuffer=}24i32I36
i28@0:8^{OpaqueFigManifold=}16i24
i44@0:8^{OpaqueFigManifold=}16^{opaqueCMFormatDescription=}24^v32i40
i20@0:8i16
v24@0:8^{OpaqueFigManifold=}16
i36@0:8^{OpaqueFigManifold=}16i24@28
i32@0:8^{OpaqueCMBlockBuffer=}16^^{OpaqueFigManifold}24
^{OpaqueCMBlockBuffer=}40@0:8@16Q24Q32
@24@0:8^{OpaqueCMBlockBuffer=}16
v32@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24
v32@0:8@"AVContentKeySession"16@"AVPersistableContentKeyRequest"24
v40@0:8@"AVContentKeySession"16@"NSData"24@32
v40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSError"32
B40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSString"32
v24@0:8@"AVContentKeySession"16
@52@0:8@16@24i32@36^@44
@"<AVMediaDataRequesterConsumer>"
v32@0:8@"NSDictionary"16@?<v@?@"AVOutputDeviceCommunicationChannel"@"NSError"@"NSString">24
v24@0:8@"AVOutputDevice"16
@32@0:8@16^{OpaqueAPSyncController=}24
v40@0:8^{__CFData=}16^{__CFString=}24^{__CFString=}32
v32@0:8^{__CFString=}16^{__CFString=}24
@"AVOutputDevice"
@40@0:8@16^{__CFString=}24^{OpaqueAPSyncController=}32
@"AVSynchronizedLayerInternal"
@"<AVOutputDeviceCommunicationChannelDelegate>"
@"<AVOutputDeviceCommunicationChannelManager>"
v32@0:8@?16@?24
@"AVOutputDeviceInternal"
d24@0:8@16
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@"NSString"24
@36@0:8@16@24B32
@"AVOutputDeviceAuthorizedPeerInternal"
@52@0:8@16@24@32B40@44
@"AVPairedDeviceInternal"
@"<AVOutputDeviceCommunicationChannelImpl>"
@52@0:8@16@24q32B40@44
i24@0:8^^{OpaqueFigVideoQueue}16
v24@0:8^{OpaqueCMTimebase=}16
B32@0:8^{OpaqueCMTimebase=}16^@24
i32@0:8^^{OpaqueFigVideoQueue}16^@24
^{OpaqueFigVideoQueue=}16@0:8
i32@0:8^{opaqueCMSampleBuffer=}16^{?={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}}24
v32@0:8^{opaqueCMSampleBuffer=}16^{?={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}}24
v28@0:8B16@?20
v32@0:8B16@?20i28
i24@0:8^{OpaqueFigVideoQueue=}16
^{OpaqueFigVideoQueue=}
@"AVSampleBufferDisplayLayer"
^{__CFArray=}
@"AVMediaDataRequester"
@"AVSampleBufferRenderSynchronizer"
B44@0:8i16{?=qiIq}20
@24@0:8^{OpaqueFigMetadataReader=}16
@48@0:8@16@24@32@40
@56@0:8^{OpaqueFigMetadataReader=}16@24@32@40@48
v24@0:8^{OpaqueFigMetadataReader=}16
@24@0:8^{OpaqueFigEndpoint=}16
^{OpaqueFigEndpoint=}16@0:8
^{OpaqueFigEndpoint=}
@32@0:8^{OpaqueFigEndpoint=}16@24
@32@0:8^{__CFDictionary=}16Q24
^{__CFDictionary=}16@0:8
v24@0:8^{__CFDictionary=}16
@"NSURLSessionTaskMetrics"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v40@0:8^{__CFDictionary=}16Q24@32
i40@0:8^{__CFDictionary=}16Q24^B32
i24@0:8Q16
@24@0:8^{OpaqueFigAsset=}16
@"NSURLSession"
^{OpaqueFigCustomURLHandler=}
^{_CFURLConnection=}16@0:8
v24@0:8^{_CFURLConnection=}16
^{_CFURLConnection=}
^{__CFError=}
i32@0:8^{__CFDictionary=}16Q24
v32@0:8@16^{__CFError=}24
B40@0:8@16^{_CFURLRequest=}24^{_CFURLResponse=}32
v32@0:8@16^{_CFURLResponse=}24
v32@0:8@16^{__CFData=}24
i56@0:8^{__CFDictionary=}16Q24q32@40^{OpaqueFigCustomURLHandler=}48
i40@0:8^{__CFDictionary=}16Q24*32
@"AVAudioMixInternal"
@"AVMutableAudioMixInternal"
r^{opaqueMTAudioProcessingTap=}16@0:8
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24q72
B72@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56^q64
@"AVAudioMixInputParametersInternal"
@"AVMutableScheduledAudioParameters"
@"AVAudioMixEffectParameters"
@"AVMutableAudioMixInputParametersInternal"
@96@0:8@16{?=qiIq}24{?=qiIq}48{?=qiIq}72
@"<AVOutputContextImpl>"
@"<AVOutputContextCommunicationChannelDelegate>"
B32@0:8@16Q24
@"AVOutputContextInternal"
@"<AVOutputContextCommunicationChannelImpl>"
@"AVOutputContextCommunicationChannelInternal"
@"AVOutputContextDestinationChangeInternal"
@"<AVOutputContextManagerImpl>"
@"AVOutputContextManagerInternal"
@24@0:8^{__CFRunLoop=}16
^{__CFRunLoop=}16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
^{__CFRunLoop=}
^{__CFRunLoopSource=}
@24@0:8^{OpaqueFigFormatReader=}16
v24@0:8^{OpaqueFigFormatReader=}16
^v24@0:8^{__CFString=}16
@32@0:8^{OpaqueFigPlaybackItem=}16@24
@"AVScheduledAudioParametersInternal"
@"AVMutableScheduledAudioParametersInternal"
B48@0:8q16@24^q32^@40
v32@0:8^@16^@24
v32@0:8@?16@24
^{OpaqueConcurrentAccessDetector=}
^{OpaqueFigSimpleMutex=}16@0:8
^{OpaqueFigFormatReader=}24@0:8^i16
B28@0:8q16i24
v48@0:8@16@24@32@40
@56@0:8@16Q24@32@40@48
@32@0:8^{OpaqueFigAsset=}16@24
q40@0:8@16^{OpaqueFigAsset=}24^@32
q40@0:8@16^@24^@32
B32@0:8q16q24
@"AVRoutingSessionManagerInternal"
@"AVRoutingSessionInternal"
@"AVRoutingSessionDestinationInternal"
^{OpaqueFigSampleCursorService=}24@0:8^B16
^{OpaqueFigTrackReader=}
^{OpaqueFigSampleCursorService=}
^{OpaqueFigSampleGenerator=}
v32@0:8^{opaqueCMSampleBuffer=}16@?24
@32@0:8@16^{OpaqueCMTimebase=}24
^{OpaqueFigSampleGenerator=}16@0:8
^{opaqueCMSampleBuffer=}32@0:8@16^@24
^{opaqueCMSampleBuffer=}24@0:8@16
^{opaqueCMSampleBuffer=}40@0:8@16@24^@32
@"AVSampleBufferGeneratorInternal"
@"AVSampleCursor"
@"AVSampleBufferRequestInternal"
@"AVSampleBufferGenerator"
^{OpaqueFigSampleGeneratorBatch=}
@"AVAssetSegmentReportSampleInformation"
^v24@0:8@16
@28@0:8^{opaqueCMFormatDescription=}16i24
@"AVStreamDataParser"
@"AVStreamDataAssetInspector"
@"AVAssetSynchronousInspectorLoader"
@"AVPlayerItemMediaDataCollectorInternal"
@24@0:8^{opaqueCMNotificationCenter=}16
^{opaqueCMNotificationCenter=}16@0:8
v52@0:8@16^?24^{__CFString=}32^v40I48
v48@0:8@16^?24^{__CFString=}32^v40
@48@0:8@16^?24^{__CFString=}32^v40
^{opaqueCMNotificationCenter=}
@48@0:8@16^?24@32^v40
v24@0:8@?<v@?>16
@"NSCondition"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"AVAssetTrackGroupInternal"
^{opaqueCMSampleBuffer=}
@72@0:8@16{?={?=qiIq}{?=qiIq}}24
@24@0:8^{opaqueCMSampleBuffer=}16
@"AVTimedMetadataGroupInternal"
^{opaqueCMSampleBuffer=}32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVDateRangeMetadataGroupInternal"
@32@0:8@16B24B28
@"AVManagedAssetCacheInternal"
^{CMBaseObject=}
@"AVAssetDownloadCacheInternal"
{?=ii}16@0:8
@24@0:8{?=ii}16
@100@0:8@16@24@32q40f48{?=qiIq}52{?=qiIq}76
@"AVDelegatingPlaybackCoordinator"
@"AVCoordinatedPlaybackParticipant"
@60@0:8@16@24@32q40f48@52
@56@0:8@16@24@32q40B48f52
@92@0:8@16@24@32q40{?=qiIq}48B72B76f80@84
v28@0:8f16Q20
v48@0:8{?=qiIq}16Q40
v32@0:8@16^{OpaqueCMTimebase=}24
^{OpaqueFigTimelineCoordinator=}
@"<AVPlaybackCoordinatorPlaybackControlDelegate>"
@"AVPlayerItemAccessLogInternal"
@"AVPlayerItemAccessLogEventInternal"
@32@0:8@16d24
@"AVFragmentedMovieTrackInternal"
@"AVPlayerItemErrorLogInternal"
@"AVPlayerItemErrorLogEventInternal"
@"AVExternalPlaybackMonitorInternal"
@"<AVAudioSessionDelegateMediaPlayerOnly>"
B36@0:8B16q20^@28
@"AVAudioSessionMediaPlayerOnlyInternal"
@"AVMediaSelectionGroupInternal"
@44@0:8@16@24@32B40
@"AVMediaSelectionOption"
B36@0:8@16B24q28
@"AVMediaSelectionOptionInternal"
{?=qiIq}48@0:8^{__CFString=}16{?=qiIq}24
{?=qiIq}24@0:8^{__CFString=}16
{?={?=qiIq}{?=qiIq}}24@0:8^{__CFString=}16
f28@0:8^{__CFString=}16f24
f24@0:8^{__CFString=}16
s24@0:8^{__CFString=}16
i24@0:8^{__CFString=}16
q24@0:8^{__CFString=}16
C24@0:8^{__CFString=}16
{CGSize=dd}40@0:8^{__CFString=}16{CGSize=dd}24
{CGAffineTransform=dddddd}24@0:8^{__CFString=}16
Q24@0:8@16
Q32@0:8@16^@24
@32@0:8@16^{opaqueCMFormatDescription=}24
^{__CFString=}24@0:8@16
B32@0:8@"AVAudioOutputSettings"16^@24
B32@0:8@"AVVideoOutputSettings"16^@24
v36@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24^{opaqueCMFormatDescription=}28
^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}32@0:8^{opaqueCMFormatDescription=}16^Q24
v48@0:8@16^@24^@32^@40
B48@0:8@16@24@32^@40
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
f28@0:8f16q20
I28@0:8I16q20
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
^{OpaqueAudioConverter=}
@32@0:8d16d24
@32@0:8{AudioValueRange=dd}16
@"AVAssetDownloadSessionInternal"
v32@0:8Q16Q24
i24@0:8^{OpaqueFigAsset=}16
^{OpaqueFigAsset=}24@0:8@16
^{OpaqueFigSampleCursor=}
@24@0:8^{OpaqueFigSampleCursor=}16
^{OpaqueFigSampleCursor=}16@0:8
q24@0:8q16
{?=qiIq}48@0:8{?=qiIq}16^B40
^{opaqueCMSampleBuffer=}24@0:8^@16
{?=BBB}16@0:8
{?=BBBBBB}16@0:8
{?=Bq}16@0:8
{?=qq}16@0:8
{?=qBBB}16@0:8
@"AVSampleCursorInternal"
{?=qiIq}24@0:8d16
{?=qiIq}24@0:8q16
@"AVPlayerItemOutputInternal"
^{__CVBuffer=}52@0:8{?=qiIq}16B40^{?=qiIq}44
@"AVPlayerItemVideoOutputInternal"
@"AVFragmentedAssetInternal"
v28@0:8d16B24
@"AVFragmentedAssetMinderInternal"
@"AVFragmentedAssetTrackInternal"
v44@0:8@16{CGSize=dd}24B40
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGSize=dd}16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"AVSampleBufferVideoRenderer"
@"AVSampleBufferVideoOutput"
@48@0:8@16Q24Q32Q40
@"NSObject<OS_xpc_object>"
:16@0:8
@"AVWeakReference"16@0:8
@48@0:8@16@24^{__CFDictionary=}32Q40
@64@0:8@16@24q32@40@48@56
^{OpaqueFigCustomURLLoader=}
@"AVAssetCustomURLBridgeForNSURLSession"
^{OpaqueFigCustomURLHandler=}16@0:8
^{OpaqueFigCustomURLLoader=}16@0:8
v52@0:8:16@24B32@36@?44
v32@0:8^{__CFDictionary=}16Q24
v44@0:8@16@24B32@?36
v40@0:8^{__CFDictionary=}16Q24^B32
v24@0:8^{OpaqueFigCustomURLHandler=}16
@"AVAssetResourceLoaderInternal"
v48@0:8@16q24@32@40
v32@0:8@"NSURLCredential"16@"NSURLAuthenticationChallenge"24
v24@0:8@"NSURLAuthenticationChallenge"16
@"AVAssetResourceLoadingContentInformationRequestInternal"
@48@0:8@16q24q32B40B44
@"AVAssetResourceLoadingDataRequestInternal"
@"NSMutableURLRequest"
@"NSURLResponse"
@"NSURLRequest"
@"NSMutableData"
@"AVAssetResourceLoadingContentInformationRequest"
@"AVAssetResourceLoadingDataRequest"
@"AVAssetResourceLoadingRequestor"
@40@0:8@16^{__CFDictionary=}24Q32
@80@0:8@16@24@32@40@48@56^{OpaqueFigCPECryptor=}64Q72
@52@0:8@16@24@32B40^@44
@48@0:8@16@24@32^@40
@"AVAssetResourceLoadingRequestInternal"
@"AVAssetResourceLoadingRequestorInternal"
^{OpaqueFigSampleBufferRenderSynchronizer=}
B76@0:8f16{?=qiIq}20{?=qiIq}44^@68
i68@0:8f16{?=qiIq}20{?=qiIq}44
@"AVSampleBufferRenderSynchronizerInternal"
@?24@0:8@16
v40@0:8@16@?24@32
B56@0:8@16{?=qiIq}24@?48
v56@0:8@16{?=qiIq}24@?48
^{OpaqueFigSampleBufferRenderSynchronizer=}40@0:8r^{__CFAllocator=}16r^{__CFDictionary=}24^@32
@"FigAlternateObjC"
@"AVAssetVariantVideoAttributes"
@"AVAssetVariantAudioAttributes"
@24@0:8^{OpaqueFigAlternate=}16
^{OpaqueFigAlternate=}16@0:8
@40@0:8q16@24Q32
@32@0:8d16Q24
@"NSPredicate"
@"AVAssetVariant"
@"NSPredicateOperator"
@"AVTextStyleRuleInternal"
@56@0:8@16@24@32@40B48B52
@56@0:8@16@24@32@40q48
v24@0:8^{__CVBuffer=}16
@"AVAsynchronousVideoCompositionRequest"
@"CIImage"
^{__CVBuffer=}
@56@0:8@16^{__CVBuffer=}24@?32@?40@?48
@"AVAsynchronousCIImageFilteringRequestInternal"
@80@0:8{?={?=qiIq}{?=qiIq}}16@64@?72
@"NSObject<OS_dispatch_group>"
@"CIContext"
@"<AVPlayerItemOutputHost>"24@0:8@"AVPlayerItem"16
@"<AVPlayerItemLegibleOutputDependencyFactory>"
v56@0:8@16@24{?=qiIq}32
@"AVPlayerItemLegibleOutputInternal"
@"<AVOutputSettingsAssistantBaseSettingsProvider>"
@"<AVOutputSettingsAssistantVideoSettingsAdjuster>"
@"AVOutputSettingsAssistantInternal"
q36@0:8^{opaqueCMFormatDescription=}16f24@28
q36@0:8^{opaqueCMFormatDescription=}16f24@"NSDictionary"28
@"NSDictionary"32@0:8@"NSArray"16@"NSDictionary"24
B24@0:8@"NSString"16
@"AVMediaSelectionInternal"
@"AVExternalDeviceHIDInternal"
@"AVExternalDeviceIconInternal"
@"<AVExternalDeviceDelegate>"
@"AVExternalDevice"
@"AVExternalDeviceInternal"
@"AVPlayerLayerIntermediateLayer"
@"NSSet"
v32@0:8@"<AVVideoCompositing>"16@"NSException"24
^{OpaqueFigVideoCompositor=}16@0:8
v32@0:8^{OpaqueFigVideoCompositorFrame=}16^{__CVBuffer=}24
v32@0:8^{OpaqueFigVideoCompositorFrame=}16@24
v24@0:8^{OpaqueFigVideoCompositorFrame=}16
^{OpaqueFigVideoCompositor=}
@"<AVVideoCompositing>"
@"AVVideoCompositionRenderContext"
i72@0:8^{OpaqueFigVideoCompositorFrame=}16{?=qiIq}24@48@56^v64
i112@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88
i120@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88q112
@24@0:8f16i20
@"AVDisplayCriteriaInternal"
@48@0:8@16@24Q32@?40
@"AVCallbackContextRegistry"
@?32@0:8@16@?24
v24@0:8@"NSDictionary"16
@"NSObject"16@0:8
@64@0:8@16@24@32@40Q48@?56
@"NSObject<AVWeakObservable>"
@56@0:8@16@24@32Q40^v48
v32@0:8@"NSString"16@"AVTwoPartKeyPath"24
@"AVWeakObservableCallbackCancellationHelper"
@"AVKVODispatcher"
@"AVTwoPartKeyPath"
@"<AVKVOIntrospection><AVCallbackCancellation>"
^{OpaqueFigVideoCompositorFrame=}16@0:8
^{OpaqueFigVideoCompositorFrame=}
@"<AVVideoCompositionInstruction>"
^{__CVBuffer=}20@0:8i16
^{opaqueCMSampleBuffer=}20@0:8i16
@"AVAsynchronousVideoCompositionRequestInternal"
@88@0:8@16@24^{OpaqueFigVideoCompositorFrame=}32{?=qiIq}40@64@72@80
@"AVOutputDeviceDiscoverySession"
@"DADiscovery"
@"AVRouteDetectorInternal"
{?="horizontalSpacing"q"verticalSpacing"q}
{?="left"d"top"d"right"d"bottom"d}
{?="width"i"height"i}
{?=dddd}16@0:8
@"AVVideoCompositionRenderContextInternal"
@48@0:8^{OpaqueFigVideoCompositor=}16@24@32^{__CVPixelBufferPool=}40
B24@0:8^{OpaqueFigVideoCompositor=}16
B24@0:8^{__CVBuffer=}16
@24@0:8^{OpaqueFigVideoCompositor=}16
@"AVMediaDataStorageInternal"
@48@0:8^{OpaqueFigFormatReader=}16@24@32@40
^{OpaqueFigMutableMovie=}24@0:8^{OpaqueFigFormatReader=}16
@"AVMovieInternal"
^{OpaqueFigMutableMovie=}24@0:8@16
B48@0:8@16@24Q32^@40
@"AVMutableMovieInternal"
^{opaqueCMSampleBuffer=}28@0:8i16^I20
v24@0:8i16i20
v32@0:8@16^{OpaqueFigPlaybackItem=}24
@"AVContentKeyReportGroup"
@"AVContentKeySpecifier"
@"AVContentKey"
^{OpaqueFigCFWeakReferenceHolder=}
^{FigContentKeySpecifier=}
B52@0:8^{OpaqueFigCPECryptor=}16B24^Q28^B36^@44
@52@0:8@16@24@32Q40i48
@76@0:8@16@24@32@40@48@56@64B72
@72@0:8@16@24^{OpaqueFigCustomURLHandler=}32@40^{__CFDictionary=}48Q56B64B68
@100@0:8@16^{CMBaseObject=}24B32^{FigContentKeySpecifier=}36@44@52@60B68q72B80@84@92
^{CMBaseObject=}16@0:8
^{OpaqueFigCPECryptor=}16@0:8
v24@0:8^{OpaqueFigCPECryptor=}16
B32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVContentKeyRequestInternal"
@56@0:8@16@24@32@40@48
@"AVContentKeyResponseInternal"
@"NSMapTable"
^{OpaqueFigSecureStopManager=}32@0:8@16@24
v44@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24q32B40
v48@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24q32^{OpaqueFigCPECryptor=}40
v32@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24
v48@0:8@16@24q32@40
v48@0:8@16@24@32q40
@"AVContentKeySessionInternal"
v40@0:8@16@24Q32
@32@0:8@16Q24
v28@0:8@?16B24
i24@0:8@16
v32@0:8@16:24
v52@0:8^{OpaqueFigCustomURLHandler=}16@24^{__CFDictionary=}32Q40B48
v44@0:8@16@24@32B40
v72@0:8^{FigContentKeySpecifier=}16@24@32@40q48@56@64
v48@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32@40
r^{OpaqueFigCPECryptor=}24@0:8@16
B40@0:8^{opaqueCMFormatDescription=}16r^^{OpaqueFigCPECryptor}24^@32
r^{OpaqueFigCPECryptor=}40@0:8@16^{opaqueCMFormatDescription=}24^@32
^{OpaqueFigCPECryptor=}24@0:8@16
v48@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32^B40
i32@0:8@16^^{OpaqueFigCustomURLHandler}24
q52@0:8@16i24@28q36^@44
q36@0:8@16i24^@28
B32@0:8^q16^@24
@48@0:8@16@24^{opaqueCMFormatDescription=}32@40
B32@0:8q16^@24
^{OpaqueFigContentKeySession=}
r^{OpaqueFigCPECryptor=}56@0:8@16@24^{opaqueCMFormatDescription=}32@40^@48
r^{OpaqueFigCPECryptor=}32@0:8@16@24
r^{OpaqueFigContentKeySession=}16@0:8
@60@0:8@16@24^{CMBaseObject=}32B40q44@52
i32@0:8^{OpaqueFigCPECryptor=}16@24
@32@0:8@16^{OpaqueFigCPECryptor=}24
@32@0:8^{__CFString=}16^{OpaqueAPSyncController=}24
@32@0:8^{__CFString=}16^{__CFString=}24
v024
f024
ARGB
024x
02fx
ILODU
<R?RRRB
@ffffff
MbP?
v16@?0@"AVOutputContextDestinationChange"8
v16@?0@"NSNotification"8
invalid parameter not satisfying: %s
player != nil
itemToLoop != nil
! CMTIMERANGE_IS_EMPTY(loopRange)
! CMTIMERANGE_IS_INDEFINITE(loopRange)
CMTIME_COMPARE_INLINE(loopRange.start, >=, kCMTimeZero)
com.apple.avplayerlooper.ivars
duration
v8@?0
error
status
Loop range must start within [0, item duration]
Loop range must be within [0, item duration]
Template AVPlayerItem's duration must not be 0
loopingPlayerItems
currentItem
AVPlayerLooperObservationCurrentItemContext
AVPlayerLooperObservationItemStatusContext
loopCount
trackOutput != nil
[[trackOutput mediaType] isEqualToString:AVMediaTypeMetadata]
Cannot initialize an instance of %@ with a track output which was used to initialize another instance of %@
Cannot initialize an instance of %@ with a track output which has already progressed beyond AVAssetReaderStatusUnknown
cannot call method until the track output is attached to an asset reader and -startReading has been called on that asset reader
AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification
AVOutputDeviceDiscoverySessionAvailableOutputDeviceGroupsDidChangeNotification
outputdevicediscoverysession_trace
com.apple.avfoundation
com.apple.avfoundation.avodds.ivars
-[AVOutputDeviceDiscoverySession impl]
-[AVOutputDeviceDiscoverySession setDiscoveryMode:forClientIdentifiers:]
q24@?0@8@16
AVAPSyncControllerOutputDeviceImplGetLocalDeviceCompletion
AVAPSyncControllerOutputDeviceImplVolumeDidChange
AVAPSyncControllerOutputDeviceImplVolumeControlSupportedDidChange
AVAPSyncControllerOutputDeviceImplVolumeControlTypeDidChange
AVAPSyncControllerOutputDeviceImplProposedGroupIDDidChange
AVAPSyncControllerOutputDeviceImplLocalDeviceDidChange
AVPlayerLayerVisibilityDidChangeNotification
AVPlayerLayerIsPartOfForegroundSceneDidChangeNotification
UISceneDidEnterBackgroundNotification
UISceneWillEnterForegroundNotification
AVPlayerLayerQueue
com.apple.avfoundation.playerlayer.configuration
contentsAreFlipped
AVPlayerLayerContentsAreFlippedObservationContext
UIWindow
@16@?0@8
bounds.size
bounds
position
sublayerTransform.scale.x
sublayerTransform.scale.y
%@_x
%@_y
sublayerTransform
AVPlayerLayer_PIPPlaceholderLayer_Bounds_%@
AVPlayerLayer_PIPPlaceholderLayer_Position_%@
AVPlayerLayer_MaskLayer_Bounds_%@
AVPlayerLayer_MaskLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@
AVPlayerLayer_VideoLayer_Position_%@
AVPlayerLayer_VideoLayer_SublayerTransform_%@
v16@?0@"CAPropertyAnimation"8
AVPlayerLayer_VideoLayer_SublayerTransform_%@_x
AVPlayerLayer_VideoLayer_SublayerTransform_%@_y
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_x
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_y
playerCurrentItemPresentationSize
player
cachedPresentationSizeOfCurrentItem
@"AVPropertyValuePublisher"16@?0@"AVPlayerItem"8
v16@?0@"NSValue"8
v16@?0@"AVPlayerItem"8
v16@?0@"NSArray"8
v16@?0@"NSNumber"8
AVPlayerLayerPlayerDidChangeNotification
readyForDisplay
videoRect
videoGravity
v32@?0@8@16^B24
Layer %@ is not a permitted sublayer during Picture-in-Picture, will be temporarily removed from the layer tree
targetLayer != nil
[targetLayer isKindOfClass:[AVPlayerLayer class]]
[targetLayer player] == nil
newPlayerLayerForPIP != nil
[newPlayerLayerForPIP isKindOfClass:[AVPlayerLayer class]]
[newPlayerLayerForPIP player] == nil
PIPModeEnabled
maskLayer
videoLayer
subtitleLayer
closedCaptionLayer
interstitialLayers
{?=qiIq}
CMTime: %@
[coder allowsKeyedCoding]
CMTime
{?={?=qiIq}{?=qiIq}}
CMTimeRange: %@
CMTimeRange
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}
CMTimeMapping: {%@, %@}
CMTimeMapping
timebase
A time observer token object was released without first being removed from the object it was created from using -removeTimeObserver:
((Boolean)(((interval).flags & (kCMTimeFlags_Valid | kCMTimeFlags_ImpliedValueFlagsMask)) == kCMTimeFlags_Valid))
((Boolean)(CMTimeCompare(interval, kCMTimeZero) > 0))
block != ((void *)0)
[times count] > 0
B32@?0@8Q16^B24
block
com.apple.avplayeritemmetadatacollector.ivars
newDelegateQueue == NULL
newDelegateQueue != NULL
playerItem != nil
v16@?0@8
obtainCoordinator != nil
com.apple.avplayeriteminterstitialeventcollector.ivars
comn
title
creator
subject
description
publisher
contributor
creationDate
lastModifiedDate
type
format
identifier
source
language
relation
location
copyrights
albumName
author
artist
artwork
make
model
software
accessibilityDescription
com.apple.quicktime.udta
udta
@alb
@arg
@ART
@aut
@chp
@cmt
@com
@cpy
@day
@des
@dir
@dis
@enc
@nam
@gen
@hst
@inf
@key
@mak
@mod
@ope
@fmt
@src
@prf
@prd
@pub
@PRD
@swr
@req
@trk
@wrn
@wrt
@url
@xyz
tnam
@phg
name
tagc
@ade
org.mp4ra
uiso
cprt
date
ades
auth
perf
gnre
yrrc
loci
titl
dscp
coll
urat
thmb
albm
kywd
clsf
rtng
com.apple.quicktime.mdta
mdta
com.apple.quicktime.author
com.apple.quicktime.comment
com.apple.quicktime.copyright
com.apple.quicktime.creationdate
com.apple.quicktime.director
com.apple.quicktime.displayname
com.apple.quicktime.information
com.apple.quicktime.keywords
com.apple.quicktime.producer
com.apple.quicktime.publisher
com.apple.quicktime.album
com.apple.quicktime.artist
com.apple.quicktime.artwork
com.apple.quicktime.description
com.apple.quicktime.software
com.apple.quicktime.year
com.apple.quicktime.genre
info.ixml.xml
com.apple.quicktime.location.ISO6709
com.apple.quicktime.make
com.apple.quicktime.model
com.apple.quicktime.arranger
com.apple.quicktime.encodedby
com.apple.quicktime.originalartist
com.apple.quicktime.performer
com.apple.quicktime.composer
com.apple.quicktime.credits
com.apple.quicktime.phonogramrights
com.apple.quicktime.camera.identifier
com.apple.quicktime.camera.framereadouttimeinmicroseconds
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
com.apple.quicktime.live-photo.vitality-disabled
com.apple.quicktime.is-montage
com.apple.quicktime.title
com.apple.quicktime.collection.user
com.apple.quicktime.rating.user
com.apple.quicktime.location.name
com.apple.quicktime.location.body
com.apple.quicktime.location.note
com.apple.quicktime.location.role
com.apple.quicktime.location.date
com.apple.quicktime.direction.facing
com.apple.quicktime.direction.motion
com.apple.quicktime.content.identifier
com.apple.quicktime.spatial-overcapture.group-identifier
com.apple.quicktime.contains-spatial-overcapture
com.apple.quicktime.accessibility.description
com.apple.itunes
itsk
itlk
covr
@st3
@too
aART
akID
apID
atID
cnID
cpil
disk
geID
grup
plID
tmpo
trkn
@ard
@lyr
@cak
@con
@equ
@lnt
@sne
@sol
@thx
@xpd
org.id3
AENC
APIC
ASPI
COMM
COMR
ENCR
EQUA
EQU2
ETCO
GEOB
GRID
IPLS
LINK
MCDI
MLLT
OWNE
PRIV
PCNT
POPM
POSS
RBUF
RVAD
RVA2
RVRB
SEEK
SIGN
SYLT
SYTC
TALB
TBPM
TCOM
TCON
TCOP
TDAT
TDEN
TDLY
TDOR
TDRC
TDRL
TDTG
TENC
TEXT
TFLT
TIME
TIPL
TIT1
TIT2
TIT3
TKEY
TLAN
TLEN
TMCL
TMED
TMOO
TOAL
TOFN
TOLY
TOPE
TORY
TOWN
TPE1
TPE2
TPE3
TPE4
TPOS
TPRO
TPUB
TRCK
TRDA
TRSN
TRSO
TSIZ
TSOA
TSOP
TSOT
TSRC
TSSE
TSST
TYER
TXXX
UFID
USER
USLT
WCOM
WCOP
WOAF
WOAR
WOAS
WORS
WPAY
WPUB
WXXX
StreamTitle
StreamUrl
com.apple.quicktime.HLS
lsdr
m3u8
NAME
caaf
public.unknown
HREF
dataType
dataTypeNamespace
pictureType
baseURL
info
CurrentEventDidChangeNotification
EventsDidChangeNotification
AVPlayerWaitingDuringInterstitialEventReason
EventNoCue
EventJoinCue
EventLeaveCue
CMTIME_IS_NUMERIC(time)
date != nil
Template items for interstitial events must employ assets that can be referenced by URL (AVURLAssets)
date != nil || CMTIME_IS_NUMERIC(time)
com.apple.avplayerinterstitialevent.ivars
<%@: %p, primaryItem = %p, ctx = %p, templateItems = %p>
events returned by AVPlayerInterstitialEventMonitor are not mutable; modify a copy instead
Cannot create an InterstitialEventMonitor for an interstitial player.
Could not obtain the interstitial player.
Use %@ instead.
com.apple.avplayerinterstitialeventcontroller
invalid event %@ (%d)
com.apple.avfoundation.avsamplebuffervideooutput
delegateQueue == NULL
delegateQueue != NULL
important
default
storageManagementPolicy != nil
downloadStorageURL != nil
bundleIdentifier != nil
Not a fileURL %@
No file at %@
<%@: %p, ExpirationDate: %@ Priority: %@>
ExpirationDate
Priority
AVOutputDeviceGroupAddOutputDeviceOptionAuthorizationToken
AVOutputDeviceGroupAddOutputDeviceOptionCancelIfAuthRequiredKey
AVOutputDeviceGroupAddOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputDeviceGroupVolumeDidChangeNotification
AVOutputDeviceGroupVolumeControlTypeDidChangeNotification
AVOutputDeviceGroupOutputDevicesDidChangeNotification
AVOutputDeviceGroupMembershipChangeInitiator
AVOutputDeviceGroupMembershipChangeResultCancellationReasonAuthorizationSkipped
outputdevicegroup_trace
<%@: %p>
-[AVOutputDeviceGroup outputDeviceGroupImpl:didChangeOutputDevicesWithInitiator:]
-[AVOutputDeviceGroup addOutputDevice:withOptions:completionHandler:]
-[AVOutputDeviceGroup addOutputDevice:withOptions:completionHandler:]_block_invoke
v16@?0@"AVOutputDeviceGroupMembershipChangeResult"8
-[AVOutputDeviceGroup removeOutputDevice:withOptions:completionHandler:]
-[AVOutputDeviceGroup removeOutputDevice:withOptions:completionHandler:]_block_invoke
-[AVOutputDeviceGroup outputDeviceGroupImplDidChangeVolume:]
-[AVOutputDeviceGroup outputDeviceGroupImplDidChangeVolumeControlType:]
MIMEtype
languageCode
v24@?0Q8^B16
v16@?0@"AVMetadataItemValueRequest"8
 length=%lu
<%@: %p, identifier=%@, keySpace=%@, key class = %@, key=%@, commonKey=%@, extendedLanguageTag=%@, dataType=%@, time=%@, duration=%@, startDate=%@, extras=%@, value class=%@, value%@>
Metadata item %p has no data type
Metadata item %p has no identifier.  If the item was given a key and key space, use +[%@ %@] to check whether an identifier can be made from that key and key space
+[NSJSONSerialization isValidJSONObject:] returned NO for the AVMetadataItem's value
Bad identifier. Identifier should be of the form "<keySpace>/<key>". Try using +%@ to generate an identifier from key and keySpace.
keySpace
com.apple.avfoundation.avmetadataitem
value
com.apple.avfoundation.avchaptermetadataitem
<%@: %p, chapterType=%@, locale identifier=%@, value=%@, time=%@, duration=%@, extras=%@>
extraAttributes
com.apple.iTunes.iTunSMPB
com.apple.iTunes.iTunNORM
ludt
AVMetadataMakeMetadataObjectFromBoxedMetadata
/System/Library/PrivateFrameworks/AVFCapture.framework/AVFCapture
AVMetadataMakeDependentSpecificationsForValue
AVMetadataObjectCreateBoxedMetadataFromObjectAndFormatDescription
Value
http
https
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
moop
mpvr
AVURLAssetPreferPreciseDurationAndTimingKey
AVURLAssetReferenceRestrictionsKey
AVURLAssetTypeKey
AVURLAssetClientBundleIdentifierKey
AVURLAssetClientAuditTokenKey
AVURLAssetParentNetworkActivityKey
AVURLAssetAlternativeConfigurationOptionsKey
ServiceIdentifier
HierarchyToken
MediaIdentifier
ContentProvider
iTunesServiceMonitoringKey
ServiceInformationKey
AVURLAssetInspectorLoaderKey
AVURLAssetProtectedContentSupportStorageURLKey
AVURLAssetCacheKey
AVURLAssetShouldMatchDataInCacheByURLPathComponentOnlyKey
AVURLAssetShouldMatchDataInCacheByURLWithoutQueryComponentKey
AVURLAssetOutOfBandMIMETypeKey
AVURLAssetAllowableTypeCategoriesKey
AVURLAssetAllowableAudioCodecTypesKey
AVURLAssetAllowableVideoCodecTypesKey
AVURLAssetAllowableCaptionFormatsKey
AVAssetRequiresInProcessOperationKey
AVAssetPrefersSandboxedParsingOptionKey
AVURLAssetHTTPUserAgentKey
AVURLAssetHTTPHeaderFieldsKey
AVURLAssetHTTPCookiesKey
AVURLAssetAllowsCellularAccessKey
AVURLAssetAllowsExpensiveNetworkAccessKey
AVURLAssetAllowsConstrainedNetworkAccessKey
AVURLAssetURLRequestAttributionKey
AVURLAssetByteRangeInFileKey
AVURLAssetClientURLLoadingRepresentsAccurateNetworkStatistics
AVURLAssetVideoNotEligibleForAppRecordingKey
AVURLAssetRequiresCustomURLLoadingKey
AVURLAssetUseClientURLLoadingExclusively
AVURLAssetCacheUseNonPurgeableMemoryKey
AVURLAssetCacheNonPurgeableMemoryLimitKey
AVURLAssetUsesNoPersistentCacheKey
AVURLAssetPreloadDurationWhenNextItemKey
AVURLAssetDownloadDestinationURLKey
AVURLAssetDownloadIsLowPriorityKey
AVURLAssetPurchaseBundleKey
AVURLAssetAirPlayAuthorizationInfoKey
AVURLAssetMaxSizeAllowedForCellularAccessKey
AVURLAssetNetworkProbeRequestDisabledKey
AVURLAssetReadAheadOnByteStreamCreationEnabledKey
AVURLAssetRemoteCustomURLHandlerContextKey
AVURLAssetSSLPropertiesKey
AVURLAssetNetworkLatencyMitigationKeyPodcastsOnly
AVURLAssetDownloadCompleteSuccessNotification
AVURLAssetDownloadCompleteFailedNotification
AVURLAssetDownloadCompleteNotificationErrorKey
AVURLAssetDownloadTokenKey
AVURLAssetBoundNetworkInterfaceName
AVURLAssetUseAppleWirelessDirectLinkKey
AVURLAssetInheritURIQueryComponentFromReferencingURIKey
AVURLAssetAllowedHTTPProtocolTypesKey
AVURLAssetApplicationTransportSecurityKey
AVURLAssetOptimizeAccessForLinearMoviePlaybackKey
AVURLAssetShouldEnableLegacyWebKitCompatibilityModeForContentKeyRequests
AVURLAssetiTunesStoreContentInfoKey
AVURLAssetiTunesStoreContentIDKey
AVURLAssetiTunesStoreContentTypeKey
AVURLAssetiTunesStoreContentUserAgentKey
AVURLAssetiTunesStoreContentDownloadParametersKey
AVURLAssetiTunesStoreContentDSIDKey
AVURLAssetiTunesStoreContentPurchasedMediaKindKey
AVURLAssetiTunesStoreContentRentalIDKey
AVURLAssetiTunesStoreContentAlternateContentInfoKey
AVURLAssetiTunesStoreContentAlternateContentInfoAssetURLStringKey
AVURLAssetiTunesStoreContentHLSAssetURLStringKey
AVAssetPreferPreciseDurationAndTimingKey
AVAssetReferenceRestrictionsKey
AVAssetMediaServicesWereResetNotification
AVAssetMediaServicesWereResetErrorKey
AVAssetPrepareForIncrementalFragmentsKey
AVURLAssetPrimarySessionIdentifierKey
chap
tmcd
ssrc
fall
sbtl
forc
cdsc
folw
AVURLAssetOutOfBandAlternateTracksKey
MediaSelectionOptionsName
MediaSelectionOptionsExtendedLanguageTag
MediaSelectionOptionsIsDefault
MediaSelectionOptionsTaggedMediaCharacteristics
MediaSelectionOptionsClientIdentifier
MediaSelectionOptionsURL
AVMetadataFormatTypedID3Metadata
AVPropertyListForProxyCreationOption_ReduceMetadataForPhotoLibrary
AVAssetDurationDidChangeNotification
AVAssetChapterMetadataGroupsDidChangeNotification
AVAssetMediaSelectionGroupsDidChangeNotification
AVAssetContainsFragmentsDidChangeNotification
AVAssetWasDefragmentedNotification
AVURLAssetEnableQUICKey
AVURLAssetForceQUICKey
AVURLAssetWhitelistQUICKey
AVURLAssetEnableMultiPath
AVURLAssetPreferLargeResourceRequests
AVURLAssetLoggingIdentifier
AVURLAssetUnitTestOptions
AVURLAssetCustomURLLoaderKey
contentType != nil
[data length] > 0
streaming
tracks
naturalSize
availableMediaCharacteristicsWithMediaSelectionOptions
v16@?0@"NSError"8
availableMetadataFormats
AVChapterGroupTypeKey
AVChapterGroupLanguageCodeKey
AVChapterGroupExtendedLanguageTagKey
AVChapterGroupPerChapterInfoKey
AVChapterGroupChaptersKey
availableChapterLocales
index %d out of bounds.
MediaValidator.plist
public.playlist
AVURLAssetMaxSizeAllowedForCellularAccessKey and AVURLAssetAllowsCellularAccessKey options are incompatible
User-Agent
v32@?0@8Q16^B24
AVURLAssetDownloadDestinationURLKey and AVURLAssetUsesNoPersistentCacheKey options are incompatible
AVURLAssetHasSecurityScopedURLKey
com.apple.avurlasset.tracks
Cannot honor specified AVURLAsset initialization options for AVURLAsset <%p>%@
: %@
<%@: %p, URL = %@>
^{OpaqueFigAsset=}8@?0
com.apple.avfoundation.avurlasset.instanceIdentifierMapping
Data length cannot exceed %llu bytes
AVURLAssetItemProviderURLWrapperKey
AVURLAssetItemProviderAssetInitializationOptionsKey
com.apple.avfoundation.urlasset
Reading data from the type identifier %@ is not supported by AVURLAsset.
Reading file representations for the type identifier %@ is not supported by AVURLAsset.
Writing to NSItemProviders is not supported for non file:/// scheme URLs: %@
Loading data from the type identifier %@ is not supported by AVURLAsset.
Loading file representations for the type identifier %@ is not supported by AVURLAsset.
supports only keyed archivers
assetCreationOptions
httpCookies
minimumCutOffFrequency < maximumCutOffFrequency
0. <= bypassThreshold && bypassThreshold <= 1.
0. <= sweepValue && sweepValue <= 1.
CleanAperture
ProductionAperture
EncodedPixels
com.apple.avfoundation.requestsqueue
com.apple.avfoundation.imagerequestqueue
com.apple.avfoundation.generateimagesasyncqueue
handler != nil
RequestID
RequestedTime
CompletionHandler
Self
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
AVAssetImageGenerator can't use a video composition with a renderScale other than 1.0
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl _didReceiveData:]
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl _didCloseCommunicationChannel]
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl sendData:completionHandler:]
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImplHandleEvent
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImplSendDataCompletion
vmap
mdep
AVAssetTrackTimeRangeDidChangeNotification
AVAssetTrackSegmentsDidChangeNotification
AVAssetTrackTrackAssociationsDidChangeNotification
AVAssetTrackMetadataDidChangeNotification
<%@: %p, trackID = %d, mediaType = %@>
segments
availableTrackAssociationTypes
AVPlayerWaitingToMinimizeStallsReason
AVPlayerWaitingWhileEvaluatingBufferingRateReason
AVPlayerWaitingWithNoItemToPlayReason
AVPlayerWaitingForCoordinatedPlaybackReason
An AVPlayerItem can occupy only one position in a player's queue at a time.
AVPlayerCurrentItemDidChangeNotification
ReasonForCurrentItemDidChange
ReasonAddToPlayQueue
ReasonRemoveFromPlayqueue
ReasonAdvanceAtEnd
ReasonAdvanceForOverlappedPlayback
ReasonAdvanceDueToError
ReasonUnknown
AVPlayerAvailableHDRModesDidChangeNotification
AVPlayerEligibleForHDRPlaybackDidChangeNotification
AVPlayerPlaybackWasInterruptedNotification
MatchMultichannelTrackPreferenceToAudioDevice
PreferStereo
PreferAC3ViaExclusivePassthrough
CoreTextSubtitleRenderer
CaptionDisplayService
CFAttributedStrings
FigCaptions
AVPlayerRateDidChangeNotification
AVPlayerRateDidChangeReasonKey
AVPlayerRateDidChangeRateChangeIdentifierKey
AVPlayerRateDidChangeOriginatingParticipantKey
AVPlayerRateDidChangeReasonAudioSessionInterrupted
AVPlayerRateDidChangeReasonSetRateCalled
AVPlayerRateDidChangeReasonSetRateFailed
AVPlayerRateDidChangeReasonAppBackgrounded
AVPlayerRateDidChangeReasonRouteChanged
AVPlayerRateDidChangeReasonPlaybackResumed
AVPlayerRateDidChangeReasonPlaybackStalled
AVPlayerRateDidChangeReasonPauseAtItemEnd
AVPlayerRateDidChangeReasonStatusChanged
AVPlayerRateDidChangeReasonCoordinatedPlayback
AVPlayerBackgroundPIPAuthorizationTokenDidChangeNotification
AVPlayerAudiovisualBackgroundPlaybackPolicyDidChangeNotification
AVPlayerInterstitialPlayerDidChangeNotification
Scanning
avplayer_trace
Item must be an instance of AVPlayerItem.
B24@?0^B8^@16
AvoidConcurrentKVOForAVPlayerCurrentItem
com.apple.avplayer.figplayer
com.apple.avplayer.playerlayer
com.apple.avplayer.ivars
com.apple.avplayer.current-item-properties
com.apple.avplayer.configuration
com.apple.avplayer.layers
avplayer_logperformance
AVPlayer %p deallocated while a pending preroll is still in progress; leaking completion handler. Use -cancelPendingPrerolls to deallocate an AVPlayer safely while a preroll is still pending.
masterClock
sourceClock
-[AVPlayer _changeStatusToFailedWithError:]
rate
AVPlayerCurrentItemDidChangeForPublishersNotification
isDisplayingClosedCaptions
AVPlayerIsDisplayingClosedCaptionsDidChangeNotification
-[AVPlayer _setCurrentItem:]
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:]_block_invoke_2
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:]_block_invoke
timeControlStatus
reasonForWaitingToPlay
-[AVPlayer _advanceCurrentItemAccordingToFigPlaybackItem:]
-[AVPlayer _advanceToNextItem]
Item must be a non-nil instance of AVPlayerItem.
v16@?0q8
-[AVPlayer _insertItem:afterItem:]
surrogate_player_disabled
coordinator_player_disabled
airPlayVideoActive
externalPlaybackActive
mxSessionID
PIPModePossible
avplaybackcoordinator_always
AVPlayer_FigPlayerProperty_Rate
AVPlayer_FigPlayerProperty_RateOptions
v24@?0@"NSArray"8@"NSArray"16
AVPlayer's expectedAssetTypes can't be after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
AVPlayer.m
Invalid parameter not satisfying: %@
item != nil
-[AVPlayer _removeItem:]
-[AVPlayer replaceCurrentItemWithPlayerItem:]
v24@?0@"AVPlayerItem"8^B16
-[AVPlayer _setRate:rateChangeReason:figPlayerSetRateHandler:]_block_invoke
v20@?0^{OpaqueFigPlayer=}8i16
-[AVPlayer setAutomaticallyWaitsToMinimizeStalling:]_block_invoke
AVPlayer's _usesLegacyAutomaticWaitingBehavior can't be set after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: until its status is AVPlayerStatusReadyToPlay.
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: when automaticallyWaitsToMinimizeStalling is YES
AVPlayer cannot service a preroll request until its status is AVPlayerStatusReadyToPlay.
AVPlayerActionAtItemEndAdvance is not allowed for a player of class %@
%d is not a valid actionAtItemEnd for a player of class %@
-[AVPlayer play]
block != nil
v32@?0{?=qiIq}8
An instance of AVPlayer cannot remove a time observer that was added by a different instance of AVPlayer.
You did not supply a reference to an object returned by either -addPeriodicTimeObserverForInterval:queue:usingBlock: or -addBoundaryTimeObserverForTimes:queue:usingBlock:
-[AVPlayer _copyDisplayedPixelBuffer]
OverlappedPlaybackDidComplete
++++++++++++++++++++++++++++++++++++++++++
------------------------------------------
UIApplication
com.apple.iapd.notify.extendedMode
com.apple.avfoundation.tool-has-foreground-exemption
AVPlayer background assertion
com.apple.common
FinishTaskInterruptable
MusicPlayer
audioSession != nil
Cannot set preservesAudioSessionSampleRate after the AVPlayer has begun preparing for playback.
Not available.  Use %@ or %@ instead
AVPlayerItem *AVPlayerFindItemMatchingFigPlaybackItem(NSArray *, FigPlaybackItemRef, NSArray **)
figPlaybackItemToFind != NULL
@"AVPlayerRateState"20@?0@"AVPlayerRateState"8B16
avplayer_fpInterstitialCoordinatorNotificationCallback_block_invoke_4
avplayer_fpInterstitialCoordinatorNotificationCallback_block_invoke
AVController_Volume
_AVPlayer_Volume
_AVPlayer_VolumeDidChangeNotification
muted
outputObscuredDueToInsufficientExternalProtection
isSilencedDueToConflictWithOtherPlayback
OverlappedPlaybackID
TimeReachedDuringOverlappedPlayback
avplayer_fpNotificationCallback_block_invoke_9
com.apple.avfoundation.avplayer.iapd
variantQualifiers
mediaSelections
preferredMediaSelection
asset != nil
title != nil
assetURL
downloadToken
artworkData
primaryContentConfig
auxiliaryContentConfigs
optimizesAuxiliaryContentConfigs
Unexpected terminal status %d
-[`AVUXMDisplayManager` init] unavailable
com.apple.avuxmdisplaymanager
AVSampleBufferAudioRendererWasFlushedAutomaticallyNotification
AVSampleBufferAudioRendererFlushTimeKey
AVSampleBufferAudioRendererOutputConfigurationDidChangeNotification
outputContext != nil
audioOutputDeviceUniqueID != nil
newAudioTimePitchAlgorithm != nil
The AudioRenderer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
sampleBuffer != NULL
Sample buffer has media type '%@' instead of '%@'
completionHandler != nil
queue != NULL
AVSampleBufferAudioRendererFigFactoryKey
input != nil
[[input mediaType] isEqual:AVMediaTypeMetadata]
Cannot create a new metadata adaptor with an asset writer input that is already attached to a metadata adaptor
Cannot create a new metadata adaptor with an asset writer input that has already started writing
Cannot create a new metadata adaptor with an asset writer that does not carry a source format hint
%@ only knows how to produce data with media subtype '%@', so it must be initialized with an instance of AVAssetWriterInput that is expecting data in that format
<%@: %p, assetWriterInput = %@>
group != nil
CMTIME_IS_NUMERIC([group timeRange].start)
! CMTIME_IS_NEGATIVE_INFINITY([group timeRange].duration)
Cannot invoke method before the attached asset writer input has been added to an asset writer and -startWriting has been called on that asset writer
Cannot write to file timed metadata group %p%@
AVExternalProtectionMonitorExternalProtectionStateChangedNotification
formatDescriptions
video format desc 
audio format desc 
(%@) 
- codec:%.4s 
video-range:%@
, bit-depth:%@
, channels:%u
, sample-rate:%uHz
kbps
Mbps
%0.2f%@
HDR10
DolbyVision 8.4
DolbyVision 5
Unknown
average bitrate 
mediaType
estimatedDataRate
video:
audio:
%@  
unknown
streaming (HLS)
local file
progressive download (CRABS)
custom-loaded
nominalFrameRate
[ M-Ch ]
[ 2-Ch ]
[ S-Ch ]
[ ?-Ch ]
asset type:%@
session-id:%@
configurationGroup: %@
display resolution:%0.0f x %0.0f
, refresh-rate:%0.2fHz
, video-range:%@
video approximate-display-size:%0.0f x %0.0f  
video approximate-display-size:-  
natural-size:%0.0f x %0.0f
current frame rate:%0.2f
nominal frame rate:%0.2f
network bandwidth:%@
video:%@  
audio:%@
indicated bitrate 
peak:%@  
average:%@  
stalls total:%ld  current-variant:%ld
frame drops 
total:%ld  
decode:%d  
imageQ:%d
buffered video before:%0.1fs  
after:%0.1fs
Helvetica-Bold
enable
spatial
interval
color
opacity
fontsize
show_complete_uri
xoffset
yoffset
InternalBuild
main-screen-scale
com.apple.avfoundation.videoperformancehud
AVPlayerItemTimebaseChangedNotification
GaplessInfoHeuristicInfoKey
GaplessInfoEncodingDelayInFramesKey
GaplessInfoEncodingDrainInFramesKey
GaplessInfoDurationInFramesKey
GaplessInfoLastPacketsResyncKey
RampInOutInfoInDuration
RampInOutInfoOutDuration
AudibleDRMInfoGroupID
AVPlayerItemTimeJumpedNotification
AVPlayerItemTimeJumpedOriginatingParticipantKey
AVPlayerItemTimeJumpedReasonKey
AVPlayerItemDidPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeErrorKey
AVPlayerItemPlaybackStalledNotification
AVPlayerItemRecommendedTimeOffsetFromLiveDidChangeNotification
AVPlayerItemNewAccessLogEntry
AVPlayerItemNewErrorLogEntry
AVPlayerItemMediaSelectionDidChangeNotification
AVProtectedContentProviderFairPlay
AVInitializeProtectedContentPlaybackSupportStorageURLKey
AVInitializeProtectedContentPlaybackSupportVideoKey
AVInitializeProtectedContentPlaybackSupportExternalProtectionKey
AVPlayerItemBecameCurrentNotification
AVPlayerItemStoppedBeingCurrentNotification
AVPlayerItemVariantChangedNotification
AVPlayerItemSuppressesVideoLayersDidChangeNotification
AVPlayerItemHasEnqueuedVideoFrameDidChangeNotification
AVPlayerItemPreferredPixelBufferAttributesDidChangeNotification
AVPlayerItemSpatialAudioRenderingDidChangeNotification
AVPlayerItemReachedTimeToPauseBufferingNotification
AVPlayerItemReachedTimeToPausePlaybackNotification
AVPlayerItemOverlappedPlaybackWillBeginNotification
AVPlayerItemOverlappedPlaybackDidCompleteNotification
AVPlayerItemSeekDidCompleteNotification
AVPlayerItemSeekDidCancelNotification
AVPlayerItemSeekIDKey
AVPlayerItemTimeJumpedReasonUnknown
AVPlayerItemTimeJumpedReasonClientInitiated
AVPlayerItemTimeJumpedReasonJoiningCoordinatedPlayback
AVPlayerItemTimeJumpedReasonChangeInCoordinatedPlaybackTiming
AVPlayerItemTimeJumpedReasonEndOfCoordinatedPlaybackSuspension
AVPlayerItemTimeJumpedReasonRejoiningCoordinatedPlayback
AVPlayerItemTimeJumpedReasonInterstitialResumptionOffset
SessionID
PlayInfo
avplayeritem_trace
%@ does not support playback via AVPlayer
com.apple.avplayeritem.ivars
com.apple.avplayeritem.figplaybackitem
com.apple.avplayeritem.figplaybackitem.accessor
com.apple.avplayeritem.figplaybackitem.setter
com.apple.avplayeritem.seek
-[AVPlayerItem dealloc]
AVPlayerItem %p deallocated while a pending seek is still in progress; leaking completion handler. Use -cancelPendingSeeks to deallocate an AVPlayerItem safely while a seek operation is still pending.
<%@: %p, %@>
asset = %@
URL = %@
with no asset and no URL
_externalProtectionRequiredForPlayback
timedMetadata
-[AVPlayerItem _configurePlaybackItem]
An AVPlayerItem cannot be associated with more than one instance of AVPlayer
AVPlayerItem.m
previousItem != nil
presentationSize
AVPlayerItemPresentationSizeDidChangeNotification
AVPlayerItemTracksDidChangeNotification
isNonForcedSubtitleDisplayEnabled
AVPlayerItemNonForcedSubtitleDisplayEnabledDidChangeNotification
asset
%@, 
See -[AVPlayerItem errorLog] for %d events
OverlappedPlaybackWillBegin
Invalid SeekID
seekID was not created by this player item
Seeking is not possible to time %@
toleranceBefore seekToTime must be valid
toleranceBefore seekToTime may not be negative
toleranceAfter seekToTime must be valid
toleranceAfter seekToTime may not be negative
 (must be called from the main queue)
-[AVPlayerItem seekToDate:]
-[AVPlayerItem stepByCount:]
preferredForwardBufferDuration >= 0.0
AudioCurves
AVVideoCompositions using AVVideoCompositionCoreAnimationTool cannot be used with AVPlayerItem. AVVideoCompositionCoreAnimationTool is for offline rendering only.
BytesStillNeededToEnd
DurationFromNowToEnd
CurrentMeasuredBytesPerSecond
RawMeasuredBytesPerSecond
BandwidthSlopFactor
EstimatedTimeToLikelyToKeepUp
RemoteIPAddress
Default
-[AVPlayerItem selectMediaOption:inMediaSelectionGroup:]
-[AVPlayerItem selectMediaOptionAutomaticallyInMediaSelectionGroup:]
^{OpaqueFigPlayerInterstitialCoordinator=}8@?0
canPlaySlowForward
canPlayFastForward
canPlayReverse
canPlaySlowReverse
canPlayFastReverse
canStepForward
canStepBackward
-[AVPlayerItem _updateItemIdentifierForCoordinatedPlayback]_block_invoke
AVPlayerItem does not support the specified protected content provider
AVPlayerItem could not uninitialize the specified protected content support session
AVPlayerItem._externalProtectionRequiredForPlayback can only be set to YES
Cannot get rental expiration date information from an AVPlayerItem that does not contain rental content
Cannot get rental playback date information from an AVPlayerItem that does not contain rental content or when rental playback has not started
playerReference != nil
playerItemReference != nil
<%@: %p, player = %@, playerItem = %@>
Player connections are one-shot objects.  Cannot connect a player connection that was already disconnected.  To re-connect an AVPlayerItem to an AVPlayer, create a new player AVPlayerConnection object
Cannot connect a player connection that is already connected
Cannot disconnect a player connection that was already disconnected
Cannot attach AVPlayerItemSampleBufferOutput to AVPlayerItem
Cannot attach an output that is already attached or nil output
Cannot attach a collector that is already attached
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSObject)]
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSCopying)]
None
Adaptive
LivePhoto
DigitalZoom
hasEnabledAudio
hasEnabledVideo
hasVideo
nonForcedSubtitleDisplayEnabled
playbackLikelyToKeepUp
playbackBufferEmpty
playbackBufferFull
seekableTimeRanges
seekableTimeRangesLastModifiedTime
loadedTimeRanges
AVPlayerItemWasRemovedFromPlayQueueNotification
avplayeritemtrack_trace
com.apple.avplayeritemtrack.ivars
<%@: %p, assetTrack = %@>
VideoEnhancementFilterOptions
DisableColorMatching
ActiveHapticChannelIndex
Volume
Cannot add any AVPlayerItemOutput other than AVPlayerItemSampleBufferOutput to AVPlayerItemTrack
Cannot remove any AVPlayerItemOutput other than AVPlayerItemSampleBufferOutput from AVPlayerItemTrack
Identifier name must be 6 chars or less
Identifier name must not contain more than one period
Identifier name must not contain non-numeric character after period
%@.%02d
I/%@
P/%@
<%@: %p tracks = %@>
Cannot honor specified AVURLAsset initialization options for AVMutableComposition <%p>%@
URLAssetInitializationOptions
compositionMetadataArray
trackID
naturalTimeScale
extendedLanguageTag
preferredTransform
preferredVolume
alternateGroupID
formatDescriptionReplacements
originalFormatDescription
replacementFormatDescription
trackMetadataArray
%c%c%c
root
[identifiers count] > 0
com.apple.avplayeritemmetadataoutput.ivars
com.apple.avplayeritemmetadataoutput.accumulationqueue
<%@: %p trackID = %d, mediaType = %@, editCount = %d>
Count of timeRanges array and count of tracks array do not match.
originalFormatDescription != NULL
Media type of the new format description must match that of the existing format description
<%@: %p object=%@>
avpubsub_trace
<%@: %p key=%@, object=%@, notification=%@>
<%@: %p upstream=%@>
v16@?0@"AVPublisher"8
<%@: %p upstream=%@
<%@: %p publisher=%@>
MediaUIStyle
MediaUIFullWidth
MediaUIFormatTemplate
arab
-[AVTimeFormatter stringFromTimeInterval:]: unsupported style
%@+%@
-[AVTimeFormatter setStyle:]: unsupported style
AVCrackTime
AVTimeFormatter.m
time >= 0.0
<%@: %p timeRange [%.3f,+%.3f] 
is empty
from trackID %d of asset %@ sourceTimeRange [%.3f,+%.3f]
sourceURL
sourceTrackID
trackGroups
<%@: %p, trackID = %d, mediaType = %@, sampleReferenceBaseURL = %@>
formatDescription != NULL
newFormatDescription != NULL
Source asset must have a value of YES for providesPreciseDurationAndTiming
Media type of sample buffer must match receiver's media type ("%@")
CMSampleBuffers containing image buffers are not supported; you must provide CMSampleBuffers containing encoded video
CMSampleBuffers containing caption groups are not supported; you must provide CMSampleBuffers containing encoded media data
data != nil
the tracks being associated must belong to the same movie
the tracks being dissociated must belong to the same movie
%@ status read/write queue
Cannot initialize an instance of %@ with an asset at non-local URL '%@'
formatReader
<%@: %p, asset = %@, outputs = %@>
cannot be called after reading has started
cannot add an output that has already been added to the receiver
cannot add an output after reading has started
cannot add an output that has already been added to another AVAssetReader
output != nil
finished
v24@?0@"AVAssetReader"8@"NSDictionary"16
cannot be called again after reading has already started
AVAssetReaderOutput.m
The receiver cannot already be attached to an AVAssetReader.
cannot copy next sample buffer before adding this output to an instance of AVAssetReader (using -addOutput:) and calling -startReading on that asset reader
timeRanges != nil
Each entry in timeRanges must be an instance of %@
Start time of each time range must be numeric - see CMTIME_IS_NUMERIC
Duration of each time range must be nonnegative & numeric or positive infinity - see CMTIME_IS_NUMERIC
Start time of each time range must be greater than or equal to the end time of the previous time range
cannot be called before reading has started
cannot be called after the asset reader has entered a failure state
cannot be called until all samples have been read (i.e. %@ returns NULL)
cannot be called without setting %@ to YES
cannot be called after calling %@
track != nil
%@ does not currently support AVVideoCleanApertureKey or AVVideoPixelAspectRatioKey
%@ does not currently support AVVideoScalingModeKey
Output settings are not compatible with media type %@
AVAssetReaderOutput does not currently support compressed output
AVAssetReaderOutput does not support AVSampleRateConverterAudioQualityKey
<%@: %p, track = %@, outputSettings = %@>
audioTimePitchAlgorithm must be one of: %@
cannot copy sample buffers when attached to an adaptor
audioTracks != nil
[audioTracks count] >= 1
tracks must all have media type AVMediaTypeAudio
tracks must all be part of the same AVAsset
<%@: %p, audioTracks = %@, audioSettings = %@>
track must be one of the tracks used to create the receiver
videoTracks != nil
[videoTracks count] >= 1
tracks must all have media type AVMediaTypeVideo
%@ does not currently support AVVideoDecompressionPropertiesKey
<%@: %p, videoTracks = %@>
AVAssetReaderVideoCompositionOutput can't use a video composition with a renderScale other than 1.0
*** AVAssetReaderVideoCompositionOutput.videoComposition needs to be set
<%@: %p, track = %@>
outputURL != nil
[outputURL isFileURL]
outputFileType != nil
outputContentType != nil
%@ helper read/write queue
<%@: %p, outputURL = %@, outputFileType = %@>
helper
CMTIME_COMPARE_INLINE(interval, >=, kCMTimeZero)
(CMTIME_IS_NUMERIC(hint) && CMTIME_COMPARE_INLINE(hint, >=, kCMTimeZero)) || CMTIME_IS_INVALID(hint)
movieTimeScale >= 0
0 < sequenceNumber
fileSize > 0
mediaDataSize > 0
inputGroup != nil
CMTIME_IS_NUMERIC(startTime)
CMTIME_IS_NUMERIC(endTime)
-flushSegment can be called only if the delegate method to output segment data is implemented.
-flushSegment can be called only if the value of the preferredOutputSegmentInterval property is kCMTimeIndefinite.
[configurationState mediaFileType] != nil
[configurationState inputs] != nil
[configurationState inputGroups] != nil
[configurationState metadataItems] != nil
Cannot use the virtual capture card
The output file type %@ does not support mutually exclusive relationships among tracks.
At least one AVAssetWriterInput in the given inputGroup is also present in an inputGroup already added.
At least one provisional AVAssetWriterInput in the given inputGroup is also present as a provisional input in an inputGroup already added.
figFragmentedMediaDataReportDict != nil
com.apple.avfoundation.avassetwriter.writing.assetwriteraccessqueue
The outputURL and the delegate method to output segment data cannot be specified at same time. Only one of them must be specified.
The outputURL and the delegate method to produce fragmented data cannot be specified at same time. Only one of them must be specified.
The delegate method to output segment data and the delegate method to produce fragmented data cannot be specified at same time. Only one of them must be specified.
Neither the outputURL nor the delegate method to output segment data is specified. One of them must be specified.
The value of the outputFileTypeProfile property must be file type profile AppleHLS or CMAFCompliant to output segment data.
The value of the outputFileType must be AVFileTypeMPEG4 for file type profile %@.
The value of the preferredOutputSegmentInterval property must be kCMTimeIndefinite or a positive numeric time to output segment data.
The value of the initialSegmentStartTime property must be a numeric time to output segment data.
AVAssetWriter supports file type profile %@ if the delegate method to output segment data is implemented. Please use -initWithContentType: initializer and implement -assetWriter:didOutputSegmentData:segmentType:segmentReport: or -assetWriter:didOutputSegmentData:segmentType: delegate method.
The preferredOutputSegmentInterval property is used if the delegate method to output segment data is implemented. Please use -initWithContentType: initializer and implemen -assetWriter:didOutputSegmentData:segmentType:segmentReport: or -assetWriter:didOutputSegmentData:segmentType: delegate method.
Media type '%@' is not allowed for file type profile %@.
More than one track is not allowed for file type profile %@.
Closed caption track is not allowed for file type profile %@.
More than one video track is not allowed for file type profile %@.
More than one audio track is not allowed for file type profile %@.
More than one closed caption track is not allowed for file type profile %@.
Closed caption track must accompany video track for file type profile %@.
AVAssetWriter does not support encoding of video track and passthrough of audio track at same time for file type profile %@. Please match both AVAssetWriterInput's output settings.
AVAssetWriter does not support encoding of audio track and passthrough of video track at same time for file type profile %@. Please match both AVAssetWriterInput's output settings.
If the value of the preferredOutputSegmentInterval property is a positive numeric time, AVAssetWriter does not support passthrough of video track and audio track at same time for file type profile %@. Please specify a non-nil output settings dictionary for both AVAssetWriterInput. Otherwise, please add one of them.
If the value of the preferredOutputSegmentInterval property is kCMTimeIndefinite, AVAssetWriter only supports pssthrough for file type profile %@. Please specify nil for all AVAssetWriterInput's output settings.
Cannot end a session without first starting a session
WARNING: -finishWriting should not be called on the main thread.
q16@?0^@8
com.apple.avfoundation.assetwriter.finishwriting
Finish writing file at %@, initiated by %@
Prepare for finishing input %@
assetWriter != nil
figAssetWriter != NULL
Call finish-writing delegate
Invalidate FigAssetWriter, to ensure that audio files are finalized properly
Transition to terminal status
Not available.  Use %@ instead.
terminalError != nil
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled)
configurationState != nil
Cannot call method when status is %d
media type %@ is not allowed for this asset writer
In order to perform passthrough to file type %@, please provide a format hint in the AVAssetWriterInput initializer
AVAssetWriter does not support passthrough for media type %@ to file type %@.
  Please specify a non-nil output settings dictionary.
AVAssetWriter does not support passthrough of media with type '%@' and subtype '%@' to file type %@
AVAssetWriter currently does not support writing uncompressed video in a specific format.
Output settings must match supplied media type.  Media type %@ is not compatible with output settings %@.
output file type %@ does not support track associations
inputs != nil
[inputs count] > 0
defaultInput == nil || [inputs containsObject:defaultInput]
metadata
trackReferences
options
! [[NSSet setWithArray:inputs] intersectsSet:[NSSet setWithArray:provisionalInputs]]
[inputs count] > 0 || [provisionalInputs count] > 0
displaysNonForcedSubtitles
AVAssetWriterInputGroupOptionsChangedContext
UnsafeUnretainedPointerData
AVCoordinatedPlaybackSuspensionReasonAudioSessionInterrupted
AVCoordinatedPlaybackSuspensionReasonStallRecovery
AVCoordinatedPlaybackSuspensionReasonPlayingInterstitial
AVCoordinatedPlaybackSuspensionReasonCoordinatedPlaybackNotPossible
AVCoordinatedPlaybackSuspensionReasonUserActionRequired
AVCoordinatedPlaybackSuspensionReasonUserIsChangingCurrentTime
AVPlaybackCoordinatorOtherParticipantsDidChangeNotification
AVPlaybackCoordinatorSuspensionReasonsDidChangeNotification
Identifier
OriginatorUUID
Time
NetworkTime
Rate
PrerollRate
SeekPrecision
LamportTimestamp
IsAuthoritative
UUID
ProtocolVersion
SuspensionReasons
CoordinatingStart
ReadyToSetNonZeroRate
CurrentIdentifier
NextIdentifier
ExpectedEndTime
Cannot initialize AVCoordinatedPlaybackSuspension with nil reason.
avplaybackcoordinator_trace
-[AVPlaybackCoordinator init] unavailable
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectNotification
AVPlaybackCoordinatorItemIdentifierForCoordinatedPlaybackDidChangeNotification
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyParticipantUUID
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyCommand
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyRate
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyTime
AVPlaybackCoordinatorPlaybackObjectCommandSetRate
AVPlaybackCoordinatorPlaybackObjectCommandSetTime
AVPlaybackCoordinatorPlaybackObjectCommandSetRateAndTime
com.apple.avplaybackcoordinator.ivars
com.apple.avplaybackcoordinator.figplaybackcoordinator.config
figPlaybackCoordinator != NULL
FigPlaybackCoordinator associated with an AVPlayer should not change
-[AVPlayerPlaybackCoordinator setFigPlaybackCoordinator:]_block_invoke_2
-[AVPlayerPlaybackCoordinator setFigPlaybackCoordinator:]_block_invoke
B32@?0@"AVCoordinatedPlaybackParticipant"8Q16^B24
-[AVPlayerPlaybackCoordinator _updateTransportControlStateDictionaryWithTransportControlState:]_block_invoke
B32@?0@"NSDictionary"8Q16^B24
-[AVPlayerPlaybackCoordinator handleNewTransportControlStateDictionary:]_block_invoke
-[AVPlayerPlaybackCoordinator handleNewTransportControlStateDictionary:]
-[AVPlayerPlaybackCoordinator handleNewParticipantStateDictionary:]_block_invoke
-[AVPlayerPlaybackCoordinator handleNewParticipantStateDictionary:]
-[AVPlayerPlaybackCoordinator handleReplacementParticipantStateDictionaries:]_block_invoke
-[AVPlayerPlaybackCoordinator handleReplacementParticipantStateDictionaries:]
AVPlayerPlaybackCoordinatorBroadcastTransportControlStateCallback
AVPlayerPlaybackCoordinatorBroadcastParticipantStateCallback
AVPlayerPlaybackCoordinatorAsynchronouslyReloadTransportControlStateCallback
AVOutputDeviceAuthorizationRequestRetryReasonIncorrectAuthorizationToken
AVOutputDeviceAuthorizationTokenTypePassword
AVOutputDeviceAuthorizationTokenTypePIN
outputdeviceauthorizationsession_trace
com.apple.avfoundation.outputdeviceauthorizationsession.ivars
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:]
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:]
com.apple.avfoundation.output-device-auth-session.ivars
<%@: %p, ID=%@, outputDevice=%@, tokenType=%@>
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]_block_invoke
v24@?0q8@"NSError"16
-[AVOutputDeviceAuthorizationRequest cancel]
AVAssetWriterInputMediaDataLocationInterleavedWithMainMediaData
AVAssetWriterInputMediaDataLocationBeforeMainMediaDataNotInterleaved
AVAssetWriterInputMediaDataLocationSparselyInterleavedWithMainMediaData
mediaType != nil
The media type of sourceFormatHint must match mediaType
Width and height of video format hint must be positive
Output settings must match supplied media type
AVAssetWriterInput does not currently support AVVideoScalingModeFit
AVAssetWriterInput does not support AVSampleRateConverterAudioQualityKey
AVAssetWriterInput does not support AVVideoDecompressionPropertiesKey
<%@: %p> helper queue
<%@: %p> "number of append failures" read/write queue
currentPassDescription
<%@: %p, mediaType = %@, outputSettings = %@>
mediaTimeScale >= 0
naturalSize.width >= 0.0 && naturalSize.height >= 0.0
Cannot set marksOutputTrackAsEnabled of the receiver in an input group
media chunk duration must be numeric.  See CMTIME_IS_NUMERIC
media chunk duration must be a positive value
AVAssetWriterInput.m
preferredMediaChunkAlignment >= 0
preferredMediaChunkSize >= 0
canPerformMultiplePasses
readyForMoreMediaData
pixelBufferPool
cannot be called more than once.
Cannot append sample buffer: %@
trackAssociationType != nil
[configurationState trackReferences] != nil
Cannot set a non-default media time scale on an asset writer input with media type AVMediaTypeAudio
languageCode %@ does not conform to the ISO 639-2/T language code
extendedLanguageTag %@ does not conform to the IETF BCP 47 (RFC 4646) language identifier
performsMultiPassEncodingIfSupported
Associations of type AVTrackAssociationTypeForcedSubtitlesOnly are supported only between tracks with media type AVMediaTypeSubtitle or AVMediaTypeText.
Associations of type AVTrackAssociationTypeSelectionFollower are supported only between AVMediaTypeAudio and AVMediaTypeSubtitle tracks.
Associations of type AVTrackAssociationTypeChapterList are supported only between (AVMediaTypeVideo/AVMediaTypeAudio) and (AVMediaTypeVideo/AVMediaTypeMetadata/AVMediaTypeText) tracks.
Associations of type AVTrackAssociationTypeMetadataReferent are supported only between tracks of mediaType AVMediaTypeMetadata and other tracks.
trackAssociationType %@ must be 4 characters long.
cannot be called before attaching to an instance of AVAssetWriter and calling -startWriting on this attached asset writer
assetWriterTrack != nil
AVAssetWriterInputWritingHelperMediaDataRequester
AVAssetWriterInputWritingHelperReadyForMoreMediaDataObserver
assetWriterTrack
aboveHighWaterLevel
readyForMoreMediaData is NO.
A pixel buffer cannot be appended when readyForMoreMediaData is NO.
A pixel buffer pool cannot be created with the receiver's sourcePixelBufferAttributes. The pixel buffer attributes must specify a width, height, and either a pixel format or a pixel format description.
writingHelper != nil
v28@?0B8@"AVAssetWriterInputPassDescription"12@"NSError"20
cannot be called between the invocation of %@ and the beginning of the next pass
not allowed between the invocation of %@ and the beginning of the next pass
Cannot call %@ more than once for the same pass
cannot be called when no media data is being requested.  Check the value of %@.
not allowed when no media data is being requested.  Check the value of %@.
cannot be called after the final pass
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled) || (terminalStatus == AVAssetWriterStatusFailed)
cannot be called after canceling or finishing writing
<%@: %p, status=%d>
[[input mediaType] isEqualToString:AVMediaTypeVideo] || [[input mediaType] isEqualToString:AVMediaTypeAuxiliaryPicture]
Cannot create a new pixel buffer adaptor with an asset writer input that is already attached to a pixel buffer adaptor
Cannot create a new pixel buffer adaptor with an asset writer input that has already started writing
<%@: %p, assetWriterInput = %@, sourcePixelBufferAttributes = %@>
assetWriterInput
pixelBuffer != NULL
CMTIME_IS_NUMERIC(presentationTime)
mediaFileType != nil
<%@: %p> water level queue
com.apple.avfoundation.assetwriterinput
Input buffer must be in an uncompressed format when outputSettings is not nil
First input buffer must have an appropriate kCMSampleBufferAttachmentKey_TrimDurationAtStart since the codec has encoder delay
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) first
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) before appending pixel buffers
com.apple.avfoundation.assetwriterinput.endpass
com.apple.avfoundation.mediadatarequester.ivars
AVAssetWriterInputPassDescriptionResponder serialization queue
trackID != kCMPersistentTrackID_Invalid
<%@: %p, sourceTimeRanges=%@>
AVAssetWriterInputCurrentPassDescriptionChangeContext
AVAssetWriterInputWritingHelperNudgeMediaDataRequesterObservationContext
VideoCompositor_DeviceSpecific
VideoCompositor_Basic
VideoCompositor_OpenGL
StartTime
EndTime
BackgroundColorARGB
BackgroundColorICCProfile
LayerStack
ContainsTweening
InstructionIdentifier
RequiredSampleDataTrackIDArray
SourceVideoTrackID
ConstantOpacity
TweenedOpacity
ConstantAffineMatrix
TweenedAffineMatrix
EnablePostProcessing
RequiredVideoTrackIDArray
PassthroughSourceVideoTrackID
AVVideoCompositionInstruction
TweenedCropRectangle
AVVideoCompositionInstruction %@
AVVideoCompositionLayerTrackID
AVVideoCompositionLayerTransformRamps
AVVideoCompositionLayerOpacityRamps
AVVideoCompositionLayerCropRectangleRamps
The timeRange of a transform ramp must not overlap the timeRange of an existing transform ramp.
StartTransform
EndTransform
The time of a transform setting must be numeric.
The timeRange of a transform ramp must have a numeric start time and a numeric duration.
The timeRange of an opacity ramp must not overlap the timeRange of an existing opacity ramp.
The time of an opacity setting must be numeric.
The timeRange of an opacity ramp must have a numeric start time and a numeric duration.
The timeRange of a crop rectangle ramp must not overlap the timeRange of an existing crop rectangle ramp.
StartCropRectangle
EndCropRectangle
The time of a crop rectangle setting must be numeric.
The timeRange of a crop rectangle ramp must have a numeric start time and a numeric duration.
ConstantCropRectangle
video composition must have a positive renderSize
video composition must have a positive renderScale
video composition must have a positive frameDuration
video composition must have a positive sourceTrackIDForFrameTiming
customVideoCompositorClass
renderSize
renderScale
frameDuration
sourceTrackIDForFrameTiming
instructions
handler
applier != nil
v24@?0@"AVMutableVideoComposition"8@"NSError"16
AVAssetExportPresetLowQuality
AVAssetExportPresetMediumQuality
AVAssetExportPresetHighestQuality
AVAssetExportPreset640x480
AVAssetExportPreset1280x720
AVAssetExportPreset960x540
AVAssetExportPreset1920x1080
AVAssetExportPreset3840x2160
AVAssetExportPresetHEVCHighestQuality
AVAssetExportPresetHEVCHighestQualityWithAlpha
AVAssetExportPresetHEVC1920x1080
AVAssetExportPresetHEVC1920x1080WithAlpha
AVAssetExportPresetHEVC3840x2160
AVAssetExportPresetHEVC3840x2160WithAlpha
AVAssetExportPresetHEVC7680x4320
AVAssetExportPresetAppleM4A
AVAssetExportPresetVoiceMemoALAC
AVAssetExportPresetAppleProRes422LPCM
AVAssetExportPresetAppleProRes4444LPCM
AVAssetExportPresetPassthrough
AVAssetExportPresetPhotoStream
AVAssetExportPresetPhotoStreamHD
AVAssetExportPresetICPL480x480
AVAssetExportPresetICPL
AVAssetExportPresetICPL960x960
AVAssetExportPresetICPLHD
AVAssetExportPresetICPLHEVC1920x1080
AVAssetExportPresetICPLHEVC960x960WithHDR
AVAssetExportPresetICPLHEVC1280x1280WithHDR
AVAssetExportPresetICPLHEVC1440x1440WithHDR
AVAssetExportPresetICPLHEVC1920x1920WithHDR
AVAssetExportPresetICPLAux
AVAssetExportPresetICPLAuxHD
AVAssetExportPresetAuxSmall
AVAssetExportPresetMMS
AVAssetExportPreset3GPRelease6MMS
AVAssetExportPresetAudioOnlyMMS
AVAssetExportPresetYouTube
AVAssetExportPresetMail
AVAssetExportPresetHEVCAnimojiWithAlpha
AVAssetExportPresetAVCAnimoji
AVAssetExportPresetYouTubeHD
AVAssetExportPresetMessage
AVAssetExportPresetMessageHEVCWithHDR
AVAssetExportPresetMessageAudio
AVAssetExportPresetMessageAux
handler cannot be nil
completionHandler is nil
<%@: %p, asset = %@, presetName = %@, outputFileType = %@
Cannot alter output file type attribute on an AVAssetExportSession after an export has started.
Cannot set outputFileType to nil
Invalid output file type
Cannot alter output URL attribute on an AVAssetExportSession after an export has started.
Cannot set outputURL to nil
Cannot call exportAsynchronouslyWithCompletionHandler: more than once.
outputURL cannot be nil
Cannot set both audioMix and audioOutputGroupHandling.
outputFileType cannot be nil
Cannot alter time range attribute on an AVAssetExportSession after an export has started.
Cannot alter min frame duration attribute on an AVAssetExportSession after an export has started.
Cannot set non-numeric min video frame duration.
Min video frame duration must be greater than zero.
Cannot alter max frame duration attribute on an AVAssetExportSession after an export has started.
Invalid frame rate conversion algorithm.
Cannot alter preserve sync frame attribute on an AVAssetExportSession after an export has started.
timeRange
Cannot alter metadata attribute on an AVAssetExportSession after an export has started.
Cannot alter metadataItemFilter attribute on an AVAssetExportSession after an export has started.
Cannot alter output file length limit attribute on an AVAssetExportSession after an export has started.
Cannot alter audio time pitch algorithm attribute on an AVAssetExportSession after an export has started.
Cannot alter audio mix attribute on an AVAssetExportSession after an export has started.
Cannot alter output audioTrackGroupHandling attribute on an AVAssetExportSession after an export has started.
Cannot alter video composition attribute on an AVAssetExportSession after an export has started.
video composition must have composition instructions
renderScale must be 1.0 when used with AVAssetExportSession.
Cannot alter optimize for network use attribute on an AVAssetExportSession after an export has started.
Cannot alter canPerformMultiplePassesOverSourceMediaData attribute on an AVAssetExportSession after an export has started.
Cannot alter directoryForTemporaryFiles attribute on an AVAssetExportSession after an export has started.
AVContentKeyRequestProtocolVersionsKey
com.apple.AVStreamDataParser._threadSafetyQ
must only set allowableMIMETypes before any stream data is appended
Ignoring appendStreamData:withFlags: because we're failed or expired, create a new AVStreamDataParser to try again
Ignoring providePendingMediaData because we're failed or expired, create a new AVStreamDataParser to try again
trackID must be valid
figManifold
sbuf
flags
avc3
avc1
hev1
hvc1
dvhe
dvh1
data
contiguousBlock
Aborting parsing due to unsupported interleaving, cache size %d bytes exceeding %d
Aborting parsing due to unsupported interleaving, cache duration %.3f seconds exceeding %.3f
formatDescription
AVStreamDataParser can't attach to an AVContentKeySession when it's already attached to an AVStreamSession
AVStreamDataParser can't attach to an AVContentKeySession after it started using its own AVContentKeySession for key loading
com.apple.coremedia
DeviceClass
iPad
com.apple.avfoundation.internal-build-allow-avstreamdataparser
sinf
codc
mtyp
cont
mpts
mediaDataConsumer != nil
requestQueue != NULL
requestBlock != nil
[mediaDataConsumer respondsToSelector:@selector(isReadyForMoreMediaData)]
com.apple.avfoundation.device-comm-channel-manager
-[AVAPSyncOutputDeviceCommunicationChannelManager openCommunicationChannelWithOptions:completionHandler:]
-[AVAPSyncOutputDeviceCommunicationChannelManager openCommunicationChannelWithOptions:completionHandler:]_block_invoke
v36@?0^{OpaqueAPSyncController=}8i16^{__CFString=}20^{__CFDictionary=}28
-[AVAPSyncOutputDeviceCommunicationChannelManager _didReceiveData:fromDeviceWithID:fromChannelWithUUID:]
-[AVAPSyncOutputDeviceCommunicationChannelManager _didCloseCommChannelWithUUID:forDeviceWithID:]
-[AVAPSyncOutputDeviceCommunicationChannelImpl sendData:completionHandler:]
AVAPSyncOutputDeviceCommunicationChannelSendDataCompletion
avsynchronizedlayer_trace
AVSynchronizedLayerQueue
com.apple.avsynchronizedlayer.ivars
common/title
common/creator
common/subject
common/description
common/publisher
common/contributor
common/creationDate
common/lastModifiedDate
common/type
common/format
common/identifier
common/source
common/language
common/relation
common/location
common/copyrights
common/albumName
common/author
common/artist
common/artwork
common/make
common/model
common/software
common/accessibilityDescription
udta/%A9alb
udta/%A9arg
udta/%A9ART
udta/%A9aut
udta/%A9chp
udta/%A9cmt
udta/%A9com
udta/%A9cpy
udta/%A9day
udta/%A9des
udta/%A9dir
udta/%A9dis
udta/%A9enc
udta/%A9nam
udta/%A9gen
udta/%A9hst
udta/%A9inf
udta/%A9key
udta/%A9mak
udta/%A9mod
udta/%A9ope
udta/%A9fmt
udta/%A9src
udta/%A9prf
udta/%A9prd
udta/%A9pub
udta/%A9PRD
udta/%A9swr
udta/%A9req
udta/%A9trk
udta/%A9wrn
udta/%A9wrt
udta/%A9url
udta/%A9xyz
udta/tnam
udta/%A9phg
udta/name
udta/tagc
udta/%A9ade
uiso/cprt
uiso/date
uiso/tagc
uiso/ades
uiso/auth
uiso/perf
uiso/gnre
uiso/yrrc
uiso/loci
uiso/titl
uiso/dscp
uiso/coll
uiso/urat
uiso/thmb
uiso/albm
uiso/kywd
uiso/clsf
uiso/rtng
mdta/com.apple.quicktime.author
mdta/com.apple.quicktime.comment
mdta/com.apple.quicktime.copyright
mdta/com.apple.quicktime.creationdate
mdta/com.apple.quicktime.director
mdta/com.apple.quicktime.displayname
mdta/com.apple.quicktime.information
mdta/com.apple.quicktime.keywords
mdta/com.apple.quicktime.producer
mdta/com.apple.quicktime.publisher
mdta/com.apple.quicktime.album
mdta/com.apple.quicktime.artist
mdta/com.apple.quicktime.artwork
mdta/com.apple.quicktime.description
mdta/com.apple.quicktime.software
mdta/com.apple.quicktime.year
mdta/com.apple.quicktime.genre
mdta/info.ixml.xml
mdta/com.apple.quicktime.location.ISO6709
mdta/com.apple.quicktime.make
mdta/com.apple.quicktime.model
mdta/com.apple.quicktime.arranger
mdta/com.apple.quicktime.encodedby
mdta/com.apple.quicktime.originalartist
mdta/com.apple.quicktime.performer
mdta/com.apple.quicktime.composer
mdta/com.apple.quicktime.credits
mdta/com.apple.quicktime.phonogramrights
mdta/com.apple.quicktime.camera.identifier
mdta/com.apple.quicktime.camera.framereadouttimeinmicroseconds
mdta/com.apple.quicktime.title
mdta/com.apple.quicktime.collection.user
mdta/com.apple.quicktime.rating.user
mdta/com.apple.quicktime.location.name
mdta/com.apple.quicktime.location.body
mdta/com.apple.quicktime.location.note
mdta/com.apple.quicktime.location.role
mdta/com.apple.quicktime.location.date
mdta/com.apple.quicktime.direction.facing
mdta/com.apple.quicktime.direction.motion
mdta/com.apple.quicktime.detected-face
mdta/com.apple.quicktime.detected-human-body
mdta/com.apple.quicktime.detected-cat-body
mdta/com.apple.quicktime.detected-dog-body
mdta/com.apple.quicktime.detected-salient-object
mdta/com.apple.quicktime.preferred-affine-transform
mdta/com.apple.quicktime.video-orientation
mdta/com.apple.quicktime.content.identifier
mdta/com.apple.quicktime.accessibility.description
mdta/com.apple.quicktime.core-motion
mdta/com.apple.quicktime.camera-debug-info
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
mdta/com.apple.quicktime.is-montage
mdta/com.apple.quicktime.live-photo.auto
mdta/com.apple.quicktime.live-photo.vitality-score
mdta/com.apple.quicktime.live-photo.vitality-scoring-version
mdta/com.apple.quicktime.spatial-overcapture.quality-score
mdta/com.apple.quicktime.spatial-overcapture.quality-scoring-version
mdta/com.apple.quicktime.location.accuracy.horizontal
itsk/%A9alb
itsk/%A9ART
itsk/%A9cmt
itsk/covr
itsk/cprt
itsk/%A9day
itsk/%A9enc
itsk/gnre
itsk/%A9gen
itsk/%A9nam
itsk/%A9st3
itsk/%A9too
itsk/%A9wrt
itsk/aART
itsk/akID
itsk/apID
itsk/atID
itsk/cnID
itsk/cpil
itsk/disk
itsk/geID
itsk/grup
itsk/plID
itsk/rtng
itsk/tmpo
itsk/trkn
itsk/%A9ard
itsk/%A9arg
itsk/%A9aut
itsk/%A9lyr
itsk/%A9cak
itsk/%A9con
itsk/%A9des
itsk/%A9dir
itsk/%A9equ
itsk/%A9lnt
itsk/%A9mak
itsk/%A9ope
itsk/%A9phg
itsk/%A9prd
itsk/%A9prf
itsk/%A9pub
itsk/%A9sne
itsk/%A9sol
itsk/%A9src
itsk/%A9thx
itsk/%A9url
itsk/%A9xpd
id3/AENC
id3/APIC
id3/ASPI
id3/COMM
id3/COMR
id3/ENCR
id3/EQUA
id3/EQU2
id3/ETCO
id3/GEOB
id3/GRID
id3/IPLS
id3/LINK
id3/MCDI
id3/MLLT
id3/OWNE
id3/PRIV
id3/PCNT
id3/POPM
id3/POSS
id3/RBUF
id3/RVAD
id3/RVA2
id3/RVRB
id3/SEEK
id3/SIGN
id3/SYLT
id3/SYTC
id3/TALB
id3/TBPM
id3/TCOM
id3/TCON
id3/TCOP
id3/TDAT
id3/TDEN
id3/TDLY
id3/TDOR
id3/TDRC
id3/TDRL
id3/TDTG
id3/TENC
id3/TEXT
id3/TFLT
id3/TIME
id3/TIPL
id3/TIT1
id3/TIT2
id3/TIT3
id3/TKEY
id3/TLAN
id3/TLEN
id3/TMCL
id3/TMED
id3/TMOO
id3/TOAL
id3/TOFN
id3/TOLY
id3/TOPE
id3/TORY
id3/TOWN
id3/TPE1
id3/TPE2
id3/TPE3
id3/TPE4
id3/TPOS
id3/TPRO
id3/TPUB
id3/TRCK
id3/TRDA
id3/TRSN
id3/TRSO
id3/TSIZ
id3/TSOA
id3/TSOP
id3/TSOT
id3/TSRC
id3/TSSE
id3/TSST
id3/TYER
id3/TXXX
id3/UFID
id3/USER
id3/USLT
id3/WCOM
id3/WCOP
id3/WOAF
id3/WOAR
id3/WOAS
id3/WORS
id3/WPAY
id3/WPUB
id3/WXXX
icy/StreamTitle
icy/StreamUrl
m3u8/NAME
AVOutputDeviceBatteryLevelCaseKey
AVOutputDeviceBatteryLevelLeftKey
AVOutputDeviceBatteryLevelRightKey
AVOutputDeviceSupportsDataOverACLProtocolKey
AVOutputDeviceIsInEarKey
AVOutputDeviceBluetoothListeningModeNormal
AVOutputDeviceBluetoothListeningModeActiveNoiseCancellation
AVOutputDeviceBluetoothListeningModeAudioTransparency
AVOutputDeviceVolumeDidChangeNotification
AVOutputDeviceCanSetVolumeDidChangeNotification
AVOutputDeviceVolumeControlTypeDidChangeNotification
AVOutputDeviceProposedGroupIDDidChangeNotification
AVOutputDeviceLocalDeviceDidChangeNotification
AVOutputDeviceConfigurationOptionCancelConfigurationIfAuthRequired
AVOutputDeviceConfigurationCancellationReasonAuthorizationSkipped
AVOutputDeviceSecondDisplayModeDefault
AVOutputDeviceSecondDisplayModeMediaPresentation
AVOutputDeviceCommunicationChannelOptionControlType
AVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired
AVOutputDeviceCommunicationChannelOptionCorrelationID
AVOutputDeviceCommunicationChannelOptionInitiator
AVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate
AVOutputDeviceCommunicationChannelControlTypeDirect
AVOutputDeviceCommunicationChannelControlTypeRelayed
AVOutputDeviceCommunicationChannelDataDestinationMediaRemote
AVOutputDeviceCommunicationChannelDataDestinationFitness
AVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped
AVOutputDeviceHeadTrackedSpatialAudioModeNever
AVOutputDeviceHeadTrackedSpatialAudioModeAlways
AVOutputDeviceHeadTrackedSpatialAudioModeAutomatic
AVOutputDeviceHeadTrackedSpatialAudioModeMultichannelOnly
outputdevice_trace
Not available
%@: %@
-[AVOutputDevice setSecondDisplayEnabled:]
-[AVOutputDevice setSecondDisplayMode:completionHandler:]
-[AVOutputDevice setSecondDisplayMode:completionHandler:]_block_invoke
non-nil
v24@?0@8@"NSError"16
-[AVOutputDevice outputDeviceImplDidChangeVolume:]
-[AVOutputDevice outputDeviceImplDidChangeCanChangeVolume:]
-[AVOutputDevice outputDeviceImplDidChangeVolumeControlType:]
+[AVOutputDevice localDeviceDidChange]
-[AVOutputDevice setVolume:]
-[AVOutputDevice increaseVolumeByCount:]
-[AVOutputDevice decreaseVolumeByCount:]
-[AVOutputDevice outputDeviceImplDidChangeProposedGroupID:]
-[AVOutputDevice setAllowsHeadTrackedSpatialAudio:error:]
-[AVOutputDevice setHeadTrackedSpatialAudioMode:error:]
-[AVOutputDevice setCurrentBluetoothListeningMode:]
-[AVOutputDevice setCurrentBluetoothListeningMode:error:]
-[AVOutputDevice openCommunicationChannelToDestination:options:completionHandler:]
-[AVOutputDevice openCommunicationChannelToDestination:options:completionHandler:]_block_invoke
Error retrieving system remote pool context.
-[AVOutputDevice setCommunicationChannelDelegate:]
-[AVOutputDevice communicationChannelManager:didReceiveData:fromCommunicationChannel:]
-[AVOutputDevice communicationChannelManager:didCloseCommunicationChannel:]
-[AVOutputDevice configureUsingBlock:options:completionHandler:]
-[AVOutputDevice configureUsingBlock:options:completionHandler:]_block_invoke
v40@?0q8@"<AVOutputDeviceConfigurationRetrieval>"16@"NSString"24@"NSError"32
-[AVOutputDevice configureUsingBlock:completionHandler:]
-[AVOutputDevice configureUsingBlock:completionHandler:]_block_invoke
FrecencyScore
LastUsedTimestamp
+[AVOutputDeviceFrecencyManager updateFrecencyListForDeviceID:]
+[AVOutputDeviceFrecencyManager frecencyScoreForDeviceID:]
Frecents
%@.plist
com.apple.avfoundation.frecents
+[AVOutputDeviceFrecencyManager _frecentsFilePath]_block_invoke
+[AVOutputDeviceFrecencyManager _frecentsReaderAfterMigrationIfNecessary]_block_invoke
+[AVOutputDeviceFrecencyManager _migrateFrecentsFromCFPreferencesToFrecentsFilePath:]
-[AVOutputDeviceFrecentsReader initWithFrecentsFilePath:error:]
-[AVOutputDeviceFrecentsReader frecencyInfoForDeviceWithID:]
My Device
-[AVOutputDeviceCommunicationChannel setDelegate:]
-[AVOutputDeviceCommunicationChannel communicationChannelImpl:didReceiveData:]
-[AVOutputDeviceCommunicationChannel communicationChannelImplDidClose:]
_UIApplicationDidFinishSuspensionSnapshotNotification
UIApplicationDidEnterBackgroundNotification
UIApplicationWillResignActiveNotification
UIApplicationWillEnterForegroundNotification
adts
AVFoundationErrorDomain
AVErrorDeviceKey
AVErrorTimeKey
AVErrorFileSizeKey
AVErrorPIDKey
AVErrorRecordingSuccessfullyFinishedKey
AVErrorRecordingFailureDomainKey
AVErrorMediaTypeKey
AVErrorMediaSubTypeKey
AVErrorPresentationTimeStampKey
AVErrorPersistentTrackIDKey
AVErrorFileTypeKey
AVErrorExceptionKey
AVErrorFourCharCode
AVError
_Description
_FailureReason
_RecoverySuggestion
Source frame missing
Render dimensions unknown
Source frame unsupported format
Destination frame unsupported format
Invalid parameter
Invalid composition instruction
Blitting failed
No output callback
Frame was cancelled
No custom callbacks
Custom compositor failed with client NSError
Media format - invalid parameter
Media format - sample description is invalid (e.g. invalid size)
Media format - format description is invalid (e.g. invalid size)
Media format - format description has an incompatible format (e.g. unknown format / incompatible atom)
Media format - sample description is unsupported for the specified format flavor
Media format - slice has an invalid value
Media writing - no such property
Media writing - read only property
Media writing - no such track
Media writing - invalid timestamp
Media writing - invalid format
Media writing - invalid edit
Media writing - predetermined file size too small
Media writing - predetermined media data size too small
Media writing - segment is not allowed to star with a non-sync sample.
Cannot append media data after ending session
JSON format error
iTT requires languageCode or extendedLanguageTag property to be set
AVErrorUnknown
AVErrorOutOfMemory
AVErrorSessionNotRunning
AVErrorDeviceAlreadyUsedByAnotherSession
AVErrorNoDataCaptured
AVErrorSessionConfigurationChanged
AVErrorDiskFull
AVErrorDeviceWasDisconnected
AVErrorMediaChanged
AVErrorMaximumDurationReached
AVErrorMaximumFileSizeReached
AVErrorMediaDiscontinuity
AVErrorMaximumNumberOfSamplesForFileFormatReached
AVErrorDeviceNotConnected
AVErrorDeviceInUseByAnotherApplication
AVErrorDeviceLockedForConfigurationByAnotherProcess
AVErrorSessionWasInterrupted
AVErrorMediaServicesWereReset
AVErrorRecordingNotAllowedWhenMultipleAppsAreForeground
AVErrorExportFailed
AVErrorDecodeFailed
AVErrorInvalidSourceMedia
AVErrorFileAlreadyExists
AVErrorCompositionTrackSegmentsNotContiguous
AVErrorInvalidCompositionTrackSegmentDuration
AVErrorInvalidCompositionTrackSegmentSourceStartTime
AVErrorInvalidCompositionTrackSegmentSourceDuration
AVErrorFileFormatNotRecognized
AVErrorFileFailedToParse
AVErrorMaximumStillImageCaptureRequestsExceeded
AVErrorContentIsProtected
AVErrorNoImageAtTime
AVErrorDecoderNotFound
AVErrorEncoderNotFound
AVErrorContentIsNotAuthorized
AVErrorApplicationIsNotAuthorized
AVErrorDeviceIsNotAvailableInBackground
AVErrorFileChecksumFailed
AVErrorOperationNotSupportedForAsset
AVErrorDecoderTemporarilyUnavailable
AVErrorEncoderTemporarilyUnavailable
AVErrorInvalidVideoComposition
AVErrorReferenceForbiddenByReferencePolicy
AVErrorInvalidFileAtDownloadDestinationURL
AVErrorInvalidOutputURLPathExtension
AVErrorTorchLevelUnavailable
AVErrorOperationInterrupted
AVErrorIncompatibleAsset
AVErrorFailedToLoadMediaData
AVErrorServerIncorrectlyConfigured
AVErrorApplicationIsNotAuthorizedToUseDevice
AVErrorFailedToParse
AVErrorFileTypeDoesNotSupportSampleReferences
AVErrorUndecodableMediaData
AVErrorClientProgrammingError
AVErrorAirPlayControllerRequiresInternet
AVErrorAirPlayReceiverRequiresInternet
AVErrorVideoCompositorFailed
AVErrorRecordingAlreadyInProgress
AVErrorUnsupportedOutputSettings
AVErrorOperationNotAllowed
AVErrorContentIsUnavailable
AVErrorFileWritingExceededPredeterminedSize
AVErrorMediaDataWritingExceededPredeterminedSize
AVErrorFormatUnsupported
AVErrorMalformedDepth
AVErrorIncorrectPIN
AVErrorIncorrectPassword
AVErrorPointlessOverCapture
AVErrorContentNotUpdated
AVErrorNoLongerPlayable
AVErrorNoCompatibleAlternatesForExternalDisplay
AVErrorNoSourceTrack
AVErrorExternalPlaybackNotSupportedForAsset
AVErrorOperationNotSupportedForPreset
AVErrorSessionHardwareCostOverage
AVErrorUnsupportedDeviceActiveFormat
AVErrorOperationRequiresBothBudsInEar
AVErrorIncorrectlyConfigured
AVErrorSegmentStartedWithNonSyncSample
AVErrorRosettaNotInstalled
AVErrorOperationCancelled
AVErrorInvalidSampleCursor
AVErrorFailedToLoadSampleData
'%@'
AVSampleBufferVideoRendererDidFailToDecodeNotification
AVSampleBufferVideoRendererDidFailToDecodeNotificationErrorKey
AVSampleBufferVideoRendererRequiresFlushToResumeDecodingDidChangeNotification
AVSampleBufferVideoRendererOutputObscuredDueToInsufficientExternalProtectionDidChangeNotification
AVSampleBufferVideoRendererVisibilityDidChangeNotification
AVSampleBufferSTSLabelDidChangeNotification
avsamplebuffervideorenderer_trace
The control timebase can not be changed after the display layer or video renderer has been added to a synchronizer
The display layer or video renderer cannot be added to a synchronizer if the control timebase has already been set.
-[AVSampleBufferVideoRenderer _setStatus:error:]_block_invoke
No Error
-[AVSampleBufferVideoRenderer _resetStatusWithOSStatus:]_block_invoke
-[AVSampleBufferVideoRenderer _setCreateVideoQueueFailedWithOSStatus:]_block_invoke
AVSampleBufferVideoRenderer serial
AVSampleBufferVideoRenderer videoQueue
AVSampleBufferVideoRenderer layerQueue
AVSampleBufferVideoRendererCallbackListQueue
AVSampleBufferVideoRendererFlushCallbackQueue
AVSampleBufferVideoRendererQueueForProtectingPrerollCompleteCallback
AVSampleBufferVideoRendererQueueForCallingPrerollCompleteCallback
-[AVSampleBufferVideoRenderer init]
-[AVSampleBufferVideoRenderer dealloc]
An object conforming to AVQueuedSampleBufferRendering, configured to request more media data via requestMediaDataWhenReadyOnQueue:usingBlock:, was released without first having been messaged stopRequestingMediaData:.
The DisplayLayer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
STSLabel
An AVSampleBufferDisplayLayer or video target must be added to the AVSampleBufferVideoRenderer prior to enqueueing sample buffers.
Ignoring enqueueSampleBuffer: because status is "failed"
-[AVSampleBufferVideoRenderer prerollDecodeWithCompletionHandler:]
Cannot add AVSampleBufferDisplayLayer while enqueueing sample buffers.
An AVSampleBufferDisplayLayer is already attached to the AVSampleBufferVideoRenderer.  Only 1 is allowed at a time.
Cannot add video target while enqueueing sample buffers.
The FigVideoTarget is already attached to the AVSampleBufferVideoRenderer.
<%@: %p, AVSBDLs = %d, FVTs = %d>
The AVSampleBufferVideoOutput has already been added to the AVSampleBufferVideoRenderer.
The video target was removed, but not already attached to AVSampleBufferVideoRenderer.
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) copyDisplayedPixelBuffer]_block_invoke
AVVideoCodecKey
jpeg
ap4h
apcn
apch
apcs
apco
muxa
AVVideoWidthKey
AVVideoHeightKey
AVVideoPixelAspectRatioKey
AVVideoPixelAspectRatioHorizontalSpacingKey
AVVideoPixelAspectRatioVerticalSpacingKey
AVVideoCleanApertureKey
AVVideoCleanApertureWidthKey
AVVideoCleanApertureHeightKey
AVVideoCleanApertureHorizontalOffsetKey
AVVideoCleanApertureVerticalOffsetKey
AVVideoScalingModeKey
AVVideoScalingModeFit
AVVideoScalingModeResize
AVVideoScalingModeResizeAspect
AVVideoScalingModeResizeAspectFill
AVVideoColorPropertiesKey
ColorPrimaries
ITU_R_709_2
SMPTE_C
P3_D65
ITU_R_2020
TransferFunction
SMPTE_ST_2084_PQ
ITU_R_2100_HLG
Linear
YCbCrMatrix
ITU_R_601_4
AVVideoAllowWideColorKey
AVVideoCompressionPropertiesKey
AverageBitRate
Quality
MaxKeyFrameInterval
MaxKeyFrameIntervalDuration
AppleProRAWBitDepthKey
ProfileLevel
H264_Baseline_3_0
H264_Baseline_3_1
H264_Baseline_4_1
H264_Baseline_AutoLevel
H264_Main_3_0
H264_Main_3_1
H264_Main_3_2
H264_Main_4_1
H264_Main_AutoLevel
H264_High_4_0
H264_High_4_1
H264_High_AutoLevel
H264EntropyMode
CAVLC
CABAC
ExpectedFrameRate
AllowFrameReordering
AverageNonDroppableFrameRate
AVVideoDecompressionPropertiesKey
AVVideoMinimumFrameDuration
AVVideoFrameRateConversionAlgorithm
AVVideoFrameRateConversionAlgorithmFast
AVVideoFrameRateConversionAlgorithmPrecise
PerceptualQualityOptimization
AVVideoEmitSequencesAtSyncFramesOnly
AVVideoMinimumIntervalForSyncFrames
figEndpoint != NULL
BluetoothFeatures
GAPA
IsGenuineAppleAccessory
AVOutputDeviceSetAllowsHeadTrackedSpatialAudioOnEndpoint
AVOutputDeviceSetHeadTrackedSpatialAudioModeOnEndpoint
-[AVFigEndpointOutputDeviceImpl setCurrentBluetoothListeningMode:]
-[AVFigEndpointOutputDeviceImpl setCurrentBluetoothListeningMode:error:]
Output device %@ screen %@
disable
AVOutputDeviceSetSecondDisplayEnabledOnEndpoint
v12@?0i8
FigRoutingContext is not available on this platform
request
B32@?0@"NSString"8Q16^B24
v24@?0@"NSError"8d16
Accept
identity
Accept-Encoding
Keep-Alive
Connection
bytes=%llu-
Range
bytes=%llu-%llu
v32@?0@"NSURLSessionDataTask"8@"AVAssetCustomURLRequest"16^B24
com.apple.avfoundation.customurl.nsurlsession
com.apple.avfoundation.customurl.cfurlconnection
com.apple.avfoundation.authkeychain.callback
com.apple.avfoundation.authkeychain
Content-Range
bytes
Content-Length
<%@: %p, %@, target = %@>
empty
source = %@
timeMapping
description=AVFoundation_AVFCore_Sim-2135.13.1
<%@: %p, input parameters = %@>
<%@: %p, track ID = %d, audioTimePitchAlgorithm: %@, audioTapProcessor: %p, volume mix: %@>
effectParameters == nil || [effectParameters isMemberOfClass:[AVAudioMixSweepFilterEffectParameters class]]
The timeRange of a volume ramp must have a numeric start time and a numeric duration.
The time of a volume setting must be numeric.
introFadeDuration must be numeric and >= 0
fadeOutStart must be >= 0 if numeric
fadeOutDuration must be numeric and >= 0
AVOutputContextDeviceGroupControlOptionCancelAddDeviceIfAuthRequired
AVOutputContextDestinationChangeInitiatedNotification
AVOutputContextDestinationChangeKey
AVOutputContextOutputDeviceDidChangeNotification
AVOutputContextGlobalOutputDeviceConfigurationDidChangeNotification
AVOutputContextOutputDevicesDidChangeNotification
AVOutputContextDestinationChangeInitiatorKey
AVOutputContextSetOutputDevicePasswordKey
AVOutputContextSetOutputDeviceCancelIfAuthRequiredKey
AVOutputContextSetOutputDeviceSuppressUserInteractionOnSenderOnlyKey
AVOutputContextSetOutputDeviceInitiatorKey
AVOutputContextSetOutputDevicesOptionInitiator
AVOutputContextAddOutputDeviceOptionAuthorizationToken
AVOutputContextAddOutputDeviceCancelIfAuthRequiredKey
AVOutputContextAddOutputDeviceOptionInitiator
AVOutputContextAddOutputDeviceOptionCorrelationID
AVOutputContextRemoveOutputDeviceOptionInitiator
AVOutputContextRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputContextSetOutputDeviceFadePlaybackKey
AVOutputContextSetOutputDevicesOptionFadePlayback
AVOutputContextAddOutputDeviceOptionFadePlayback
AVOutputContextRemoveOutputDeviceOptionFadePlayback
AVOutputContextDestinationChangeReasonKey
AVOutputContextDestinationChangeDeviceIDKey
AVOutputContextDestinationChangePreviousDeviceIDsKey
AVOutputContextDestinationChangeReasonIdleDisconnect
AVOutputContextPredictedOutputDeviceDidChangeNotification
AVOutputContextManagerOutputContextDidFailToConnectToOutputDeviceNotification
AVOutputContextManagerOutputDeviceKey
AVOutputContextManagerFailureReasonKey
AVOutputContextDeviceConnectionFailureReasonDeviceInUse
AVOutputContextDeviceConnectionFailureReasonDeviceOutOfRange
AVOutputContextDeviceConnectionFailureReasonNotAPeerInHomeGroup
AVOutputContextDeviceConnectionFailureReasonDeviceNotConnectedToInternet
AVOutputContextDeviceConnectionFailureReasonDeviceNotMFiCertified
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailed2GHzNetwork
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailedMultiDFSNetwork
AVOutputContextTypeSharedSystemAudio
AVOutputContextTypeSharedSystemScreen
AVOutputContextTypeSharedAudioPresentation
AVOutputContextTypeAudio
AVOutputContextTypeVideo
AVOutputContextTypeScreen
AVOutputContextTypeGroupControl
AVOutputContextTypeSharedSystemRemotePool
AVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification
AVOutputContextVolumeDidChangeNotification
AVOutputContextCanSetVolumeDidChangeNotification
AVOutputContextVolumeControlTypeDidChangeNotification
AVOutputContextCommunicationChannelOptionControlType
AVOutputContextCommunicationChannelControlTypeDirect
AVOutputContextCommunicationChannelControlTypeRelayed
AVOutputContextDestinationChangeCancellationReasonAuthorizationSkipped
outputcontext_trace
com.apple.UIKit.screenpicker
com.apple.avfoundation.allow-system-wide-context
com.apple.avfoundation.outputcontext.ivars
AVOutputContextSerializationKeyContextID
AVOutputContextSerializationKeyContextType
<%@: %p, ID=%@, type=%@>
-[AVOutputContext setApplicationProcessID:]
-[AVOutputContext setOutputDevice:options:completionHandler:]
-[AVOutputContext setOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext setOutputDevice:forFeatures:]
-[AVOutputContext setOutputDevice:options:]
+[AVOutputContext resetOutputDeviceForAllOutputContexts]
-[AVOutputContext outputContextImpl:didInitiateDestinationChange:]
-[AVOutputContext outputContextImpl:didChangeOutputDeviceWithInitiator:]
-[AVOutputContext outputContextImplDidChangeGlobalOutputDeviceConfiguration:]
-[AVOutputContext outputContextImpl:didChangeOutputDevicesWithInitiator:reason:deviceID:previousDeviceIDs:]
-[AVOutputContext setOutputDevices:]
-[AVOutputContext setOutputDevices:options:completionHandler:]
-[AVOutputContext setOutputDevices:options:completionHandler:]_block_invoke
-[AVOutputContext addOutputDevice:options:completionHandler:]
-[AVOutputContext addOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext addOutputDevice:]
-[AVOutputContext removeOutputDevice:options:completionHandler:]
-[AVOutputContext removeOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext removeOutputDevice:]
-[AVOutputContext outputContextImplDidChangePredictedOutputDevice:]
-[AVOutputContext resetPredictedOutputDevice]
-[AVOutputContext outputContextImplDidChangeProvidesControlForAllVolumeFeatures:]
-[AVOutputContext outputContextImplDidChangeVolume:]
-[AVOutputContext outputContextImplDidChangeCanSetVolume:]
-[AVOutputContext outputContextImplDidChangeVolumeControlType:]
-[AVOutputContext openCommunicationChannelWithOptions:error:]
-[AVOutputContext setCommunicationChannelDelegate:]
-[AVOutputContext outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:]
-[AVOutputContext outputContextImpl:didReceiveData:fromCommunicationChannel:]
-[AVOutputContext outputContextImpl:didCloseCommunicationChannel:]
server death
-[AVOutputContextCommunicationChannel sendData:completionHandler:]
com.apple.avfoundation.outputcontext.destinationchange
<%@: %p, status=%d, cancellationReason=%@>
com.apple.avfoundation.outputcontextmanager.ivars
-[AVOutputContextManager outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:]
AVAssetPlaybackConfigurationOptionStereoVideo
AVAssetPlaybackConfigurationOptionStereoMultiviewVideo
playbackCapabilities
avrunloopcondition_trace
AVRunLoopConditionSignalRunLoopMode
-[AVRunLoopCondition _waitInMode:untilDate:]
AVLayerVideoGravityResize
AVLayerVideoGravityResizeAspect
AVLayerVideoGravityResizeAspectFill
vide
soun
text
clcp
meta
mobj
muxx
hapt
dpth
auxv
scen
AVVideoRangeSDR
AVVideoRangeHLG
AVVideoRangePQ
AVMediaCharacteristicVisual
AVMediaCharacteristicAudible
AVMediaCharacteristicLegible
AVMediaCharacteristicFrameBased
public.uses-wide-gamut-color-space
public.contains-hdr-video
public.contains-alpha-channel
public.main-program-content
public.auxiliary-content
public.original-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.easy-to-read
public.accessibility.describes-video
com.apple.has-language-display-name-as-name
public.binaural-for-headphones
public.downmix
public.translation
public.translation.dubbed
public.translation.voice-over
com.apple.quicktime.video-map
com.apple.quicktime.video-map.depth
com.apple.quicktime-movie
public.mpeg-4
com.apple.m4v-video
com.apple.m4a-audio
public.3gpp
public.3gpp2
com.apple.coreaudio-format
com.microsoft.waveform-audio
public.aiff-audio
public.aifc-audio
org.3gpp.adaptive-multi-rate-audio
public.ac3-audio
public.enhanced-ac3-audio
public.au-audio
public.mp3
public.jpeg
com.adobe.raw-image
public.heic
public.avci
public.heif
public.tiff
org.w3.webvtt
public.mpeg-2-transport-stream
com.apple.streamingkeydelivery.contentkey
com.apple.streamingkeydelivery.persistentcontentkey
MPEG4AppleHLS
MPEG4CMAFCompliant
<%@: %p, volume mix: %@>
The timeRange of a volume ramp must not overlap the timeRange of an existing volume ramp.
through
, changing instantaneously to 
, holding steady at 
, interpolated to 
 with %@ ramp style
volume %1.3f %@ time %1.3f%@%@
com.apple.avfoundation.avoperation.ivars
requestedStatus != AVOperationStatusUnknown
isExecuting
isFinished
com.apple.avfoundation.globaloperationqueue.%p
<%@: %p, unfinishedOperations=%@>
AVDepartureAnnouncingObjectMonitorKey
com.apple.avfoundation.waitForNotificationOrDeallocationOperation
Cannot enter a terminal state until the receiver starts executing
Cannot regress from a terminal state %d to a non-terminal state %d
<%@: %p> delegate serialization queue
-[AVWeakReferencingDelegateStorage _delegate]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/Utilities/AVDelegateUtilities.m
-[AVWeakReferencingDelegateStorage _setDelegateViaWeakReference:]
assetinspectorloader_trace
keys
AVAsynchronousLoadingPropertyBatchIDKey
AVAsynchronousLoadingCompletionHandlerKey
com.apple.avfoundation.avasset.completionsQueue
trackPropertyForMediaSelectionOptions
trackPropertyForPlaybackCapabilities
-[AVAsset statusOfValueForKey:error:] invoked with unrecognized key %@.
v24@?0@8^B16
%@ invoked with unrecognized keys %@.
-[AVFigAssetInspectorLoader loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:]
(keys == nil) || [keys isKindOfClass:[NSArray class]]
[keysForCollectionKeys isKindOfClass:[NSDictionary class]]
[[keysForCollectionKeys objectForKey:thisKey] isKindOfClass:[NSArray class]]
-[AVAsset loadValuesAsynchronouslyForKeys:completionHandler:]
-[AVAsset loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:] invoked with unrecognized AVAssetTrack keys %@.
AVAsynchronousLoadingTrackPropertyBatchIDKey
-[AVFigAssetInspectorLoader _ensureAllDependenciesOfKeyAreLoaded:]
exportable
readable
composable
, batchID = %ld
, track batchID = %ld
-[AVFigAssetInspectorLoader _invokeCompletionHandlerForLoadingBatches:]
assetCache
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
cacheKey
downloadDestinationURL
isProxy
variants
contentKeySpecifiersEligibleForPreloading
preferredRate
preferredSoundCheckVolumeNormalization
providesPreciseDurationAndTiming
referenceRestrictions
lyrics
commonMetadata
ID3Metadata
allMediaSelections
hasProtectedContent
originalNetworkContentURL
playable
compatibleWithSavedPhotosAlbum
compatibleWithAirPlayVideo
audioAlternatesTrackGroup
subtitleAlternatesTrackGroup
alternateTrackGroups
identifyingTag
identifyingTagClass
httpSessionIdentifier
resolvedURL
SHA1Digest
figAsset
playbackItem
canContainFragments
containsFragments
canContainMovieFragments
containsMovieFragments
firstFragmentSequenceNumber
fragmentCount
overallDurationHint
moovAtomSize
propertyListForProxy
supportsAnalysisReporting
assetAnalysisMessages
maximumVideoResolution
availableVideoDynamicRanges
preferredDisplayCriteria
minimumTimeOffsetFromLive
resourceLoader
mayRequireContentKeysForMediaDataProcessing
handleFigAssetLoadingNotification
handleFigAssetLoadingNotification_block_invoke
AVRoutingSessionManagerCurrentSessionDidChangeNotification
AVRoutingSessionManagerLikelyExternalDestinationsDidChangeNotification
AVRoutingSessionManagerAllLikelyDestinationsDidChangeNotification
routingsession_trace
+[AVRoutingSessionManager initialize]
<%@: %p, currentRoutingSession=%@, likelyExternalDestinations=%@>
-[AVRoutingSessionManager updateCurrentRoutingSessionFromLikelyDestinationsWithCompletionHandler:]
Missing required entitlement com.apple.avfoundation.allow-identifying-output-device-details
-[AVRoutingSessionManager startRoutingSessionForHighConfidenceExternalDestinationIfPresentWithCompletionHandler:]
-[AVRoutingSessionManager startRoutingSessionWithOutputDeviceDescriptions:error:]
-[AVRoutingSessionManager startSuppressingLikelyDestinationsUntilNextPlayEventAndReturnError:]
-[AVRoutingSessionManager stopSuppressingLikelyDestinationsAndReturnError:]
com.apple.avfoundation.allows-set-output-device
%c%c%c%c
decodable
playabilityValidationResult
enabled
selfContained
totalSampleDataLength
mediaPresentationTimeRange
mediaDecodeTimeRange
requiresFrameReordering
peakDataRate
mediaCharacteristics
dimensions
loudnessInfo
minFrameDuration
segmentsExcludeAudioPrimingAndRemainderDurations
gaplessSourceTimeRange
segmentsAsPresented
layer
defaultAlternateGroupID
provisionalAlternateGroupID
excludedFromAutoselectionInTrackGroup
locale
containsMixedSubtitles
containsOnlyForcedSubtitles
fallbackTrack
associatedSubtitleTrack
pairedForcedOnlySubtitlesTrack
hasAudibleBooksContent
isAudibleBooksContentAuthorized
canProvideSampleCursors
com.apple.avfoundation.avassettrack.completionsQueue
-[AVAssetTrack statusOfValueForKey:error:] invoked with unrecognized key %@.
-[AVAssetTrack loadValuesAsynchronouslyForKeys:completionHandler:] invoked with unrecognized keys %@.
HasSeamSamples
%c[%@ %@]
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ only defined for abstract class.  Define %@!
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
com.apple.AVFCore
xxxxDefaultValuexxxx
<%@: %p, referencedObject = %@>
request != nil
batch cannot be nil
batch does not belong to this generator
createSampleBufferForRequest must only be called before makeDataReadyWithCompletionHandler.
com.apple.avfoundation.avsamplebuffergenerator.data-ready-notifications
generator != nil
makeDataReadyWithCompletionHandler should only be called once.
com.apple.avfoundation.avsamplebuffergenerator.batch-ready-notifications
{CGPoint=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
{CGSize=dd}
figSampleInformationoDict != nil
figSegmentTrackReportDict != nil
figSegmentReportDict != nil
%@ read/write queue
callbackContext != nil
callbackContextToken != AVCallbackContextTokenInvalid
Cannot unregister token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
Cannot look up token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
%@ only supports listening to notifications from CMNotificationCenterGetDefaultLocalCenter
cmNotificationCenter != NULL
com.apple.avfoundation.avcmnotificationdispatcher.ivars
Cannot remove a listener %@ (callback %p) for %@ from object %p that was never added.  Break on AVCMNotificationDispatcherUnbalancedUnregistrationBreak() to debug.
avblockserializer_trace
-[AVSerializedMostlySynchronousReentrantBlockScheduler scheduleBlock:]
%@ %@
*** %@
Cannot create format description for metadata group %p%@
<%@: %p, timeRange=%@, items=%@>
<%@: %p, startDate=%@, endDate=%@ classifyingLabel=%@ uniqueID=%@ items=%@>
[propertyList isKindOfClass:[NSDictionary class]]
The identifier for one or more of the following items is invalid: %@.  See +[%@ %@] for a way to construct a valid identifier from a key and key space
Data type "%@" does not conform to any built-in data type.  See CMMetadataDataTypeRegistryRegisterDataType.
Metadata item %p has no value
No entry in format description %p for metadata item %p with identifier %@, data type %@ and extended language tag %@.  If you created this format description using -[%@ %@], make sure the instance of %@ used to create the format description contains a representative sample of metadata items which includes an item with the same combination of identifier, dataType, and extended language tag as this one
Value "%@" of class %@ in metadata item %p is not compatible with base data type %@
B32@?0@"AVMediaSelectionOption"8Q16^B24
AVPlatformIdentifierMacOS
AVPlatformIdentifierIOS
AVPlatformIdentifierWatchOS
AVPlatformIdentifierTVOS
AVExecutionEnvironmentCurrentPlatformIdentifierKey
{?=ii}
-[AVDelegatingPlaybackCoordinatorPlaybackControlCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorPlayCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorBufferingCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorPauseCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorSeekCommand init] unavailable
com.apple.avfoundation.avdelegatingplaybackcoordinator.timelinecontrol
com.apple.avdelegatingplaybackcoordinator.figtimelinecoordinator.config
com.apple.avfoundation.avdelegatingplaybackcoordinator.ivars
-[AVDelegatingPlaybackCoordinator _updateTransportControlStateDictionaryWithTransportControlState:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleNewTransportControlStateDictionary:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleNewParticipantStateDictionary:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleReplacementParticipantStateDictionaries:]_block_invoke
AVDelegatingPlaybackCoordinatorBroadcastTimelineStateCallback
AVDelegatingPlaybackCoordinatorBroadcastParticipantStateCallback
AVDelegatingPlaybackCoordinatorAsynchronouslyReloadTimelineStateCallback
AVFragmentedMovieDurationDidChangeNotification
AVFragmentedMovieWasDefragmentedNotification
AVFragmentedMovieContainsMovieFragmentsDidChangeNotification
AVFragmentedMovieTrackTimeRangeDidChangeNotification
AVFragmentedMovieTrackSegmentsDidChangeNotification
AVExternalPlaybackMonitorAirPlayVideoActiveDidChangeNotification
AVExternalPlaybackMonitorAirPlayVideoPlayingDidChangeNotification
playbackmonitor_trace
+[AVExternalPlaybackMonitor initialize]
<%@: %p, airPlayVideoActive=%d, airPlayVideoPlaying=%d>
Audio/Video
UserInterfaceSoundEffects
LiveAudio
Ringtone
RingtonePreview
PhoneCall
TTYCall
AVAudioSessionMediaPlayerOnlyModeMoviePlayback
AVAudioSessionMediaPlayerOnlyModeSpokenAudio
FindMyPhone
AVAudioSessionPickableRoutesDidChangeNotification
AVAudioSessionCanEnterPIPModeDidChangeNotification
property
non-resumable
<%@: %p, options = %@, allowsEmptySelection = %@>
AVMediaSelectionTrackOptionCharacteristicsKey
AVMediaSelectionTrackOptionTrackIDKey
AVMediaSelectionTrackOptionSettingsKey
AVMediaSelectionKeyValueOptionMediaTypeKey
AVMediaSelectionKeyValueOptionGroupIDKey
<%@: %p, language = %@%@>
, title = %@
, associated language = %@
, tagged media characteristics = {%@}
, default = YES
, auxiliary = YES
, fallback track or variant IDs = {%@}
, forced subtitles only
, associated forced-only option = <%@: %p>
'%c%c%c%c'
, mediaSubTypes = {%@}
, mediaType = '%@'%@%@%@%@%@%@%@
SUBTITLE_TRACK_DISPLAY_FORMAT
AVMediaSelectionOption
%2$@
SDH_SUBTITLE_FORMAT
%1$@
FORCEDONLY_SUBTITLE_FORMAT
EASYTOREAD_SUBTITLE_FORMAT
CC_SUBTITLE_FORMAT
DESCRIBESVIDEO_AUDIO_FORMAT
VOICEOVERTRANSLATION_AUDIO_FORMAT
ORIGINAL_AUDIO_FORMAT
AUDIOENCODING_AUDIO_FORMAT
UNKNOWN_LANGUAGE
displayNameWithLocale requires an NSLocale
nil selection option for the following group: %@
%@%@
Output settings dictionary is empty and valid
Output settings dictionary is valid
Output settings dictionary contains one or more invalid keys: %@
outputSettingsDictionary != nil
Output settings dictionary does not contain any recognized keys
<%@: %p, outputSettingsDictionary=%@>
UTI != nil
Invalid file type UTI.  Available file types are: %@
<%@: %p, UTI = %@>
formatDesc != NULL
fileType != nil
Format ID '%@' is not compatible with file type %@
Cannot write non-interleaved audio to a file
[[fileType UTI] isEqualToString:AVFileTypeWAVE]
WAVE files cannot contain floating-point LPCM
WAVE files cannot contain big-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFF]
AIFF files cannot contain floating-point LPCM
AIFF files cannot contain little-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFC]
AIFC files cannot contain little-endian LPCM
The video codec %@ is not compatible with file type %@
Uncompressed video is not allowed for file type %@
not implemented
avAudioSettingsDictionary != nil
AVAudioSettings dictionary must contain AVFormatIDKey
Cannot specify both AVEncoderBitRateKey and AVEncoderBitRatePerChannelKey
If one of AVLinearPCMIsFloatKey and AVLinearPCMBitDepthKey is specified, both must be specified
Bit depth can only be one of: %@
Bit depth hint can only be one of: %@
Bit rate strategy can only be one of: %@
Value for AVEncoderAudioQualityForVBRKey must be an instance of %@
Cannot specify a value for AVEncoderAudioQualityForVBRKey without also specifying AVAudioBitRateStrategy_Variable for AVEncoderBitRateStrategyKey
Floating-point LPCM must be 32-bit
Channel count must be positive
AudioChannelLayout is invalid
AudioChannelLayout channel count must be positive
AudioChannelLayout channel count does not match AVNumberOfChannelsKey channel count
Invalid value %.2f for AVSampleRateKey; sample rate must be between 8.0 and 192.0 kHz inclusive
Value for AVSampleRateConverterAlgorithmKey must be an instance of NSString
Unrecognized value "%@" for AVSampleRateConverterAlgorithmKey
The following keys are not allowed when format ID is '%@': %@
%g Hz is not a valid sample rate for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeSampleRates (<AudioToolbox/AudioFormat.h>) to enumerate available rates for a given format.
%d is not a valid channel count for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeNumberChannels (<AudioToolbox/AudioFormat.h>) to enumerate available channel counts for a given format.
Channel layout is not valid for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeChannelLayoutTags (<AudioToolbox/AudioFormat.h>) to enumerate available channel layout tags for a given format.
Missing required key %@
Unrecognized bit rate strategy
Unrecognized value for %@: %@
Pixel buffer attributes width and height must be nonnegative
Value for AVVideoScalingModeKey must be one of: %@
Value for kCVPixelBufferMetalCompatibilityKey must be an NSNumber wrapping a BOOL
Compression property %@ is not supported for video codec type %@
Video codec type %@ expects a value for compression property %@ in a particular numeric range, but property value %@ is not numeric
Video codec type %@ does not allow values for %@ that are numerically less than %@
Video codec type %@ does not allow values for %@ that are numerically greater than %@
For compression property %@, video codec type %@ only allows the following values: %@
av_kVTPropertyInitialValueKey
For compression property %@, video codec type %@ only allows the value %@
avVideoSettingsDictionary != nil
AVVideoSettings dictionary must contain AVVideoCodecKey
AVVideoSettings dictionary must specify a height if it specifies a width
AVVideoSettings dictionary must specify a width if it specifies a height
AVVideoSettings dictionary must specify a positive width
AVVideoSettings dictionary must specify a positive height
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoAverageBitRateKey
AVVideoCompressionPropertiesKey dictionary must specify a value between 0.0 and 1.0 for AVVideoQualityKey
AVVideoCompressionPropertiesKey dictionary must specify a non-negative value for AVVideoMaxKeyFrameIntervalDurationKey
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoMaxKeyFrameIntervalKey
Value for AVVideoH264EntropyModeKey must be an instance of NSString
Value for AVVideoExpectedSourceFrameRateKey must be an instance of NSNumber
Value for AVVideoAllowFrameReorderingKey must be an instance of NSNumber
Value for AVVideoAverageNonDroppableFrameRateKey must be an instance of NSNumber
Dictionary for AVVideoPixelAspectRatioKey contains one or more unrecognized keys: %@
Value for AVVideoPixelAspectRatioKey must be an instance of NSDictionary
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioHorizontalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must contain NSNumber values for both AVVideoPixelAspectRatioHorizontalSpacingKey and AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoCleanApertureKey contains one or more unrecognized keys: %@
Clean aperture region must be contained within the bounds specified by width & height
Value for AVVideoCleanApertureKey must be an instance of NSDictionary
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHorizontalOffsetKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureVerticalOffsetKey
Value for AVVideoCleanApertureWidthKey must be an instance of NSNumber
Value for AVVideoCleanApertureHeightKey must be an instance of NSNumber
Value for AVVideoCleanApertureHorizontalOffsetKey must be an instance of NSNumber
Value for AVVideoCleanApertureVerticalOffsetKey must be an instance of NSNumber
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoColorPropertiesKey must contain all three color keys (AVVideoColorPrimariesKey, AVVideoTransferFunctionKey, AVVideoYCbCrMatrixKey) and it may not contain any other keys
Value for AVVideoColorPrimariesKey must be one of: %@
Value for AVVideoTransferFunctionKey must be one of: %@
Value for AVVideoYCbCrMatrixKey must be one of: %@
Dictionary for AVVideoColorPropertiesKey must be an NSDictionary
Dictionary for AVVideoAllowWideColorKey must be an NSNumber
AVVideoMinimumFrameDuration must be numeric
AVVideoMinimumFrameDuration must be greater than kCMTimeZero
Dictionary for AVVideoMinimumFrameDuration must be an NSDictionary
AVVideoFrameRateConversionAlgorithm must be either AVVideoFrameRateConversionAlgorithmFast or AVVideoFrameRateConversionAlgorithmPrecise
String for AVVideoFrameRateConversionAlgorithm must be an NSString
kVTDecompressionPropertyKey_FieldMode must be one of: kVTDecompressionProperty_FieldMode_BothFields, kVTDecompressionProperty_FieldMode_TopFieldOnly, kVTDecompressionProperty_FieldMode_BottomFieldOnly, kVTDecompressionProperty_FieldMode_SingleField, or kVTDecompressionProperty_FieldMode_DeinterlaceFields
String for kVTDecompressionPropertyKey_FieldMode must be an NSString
Value for kVTDecompressionPropertyKey_PropagatePerFrameHDRDisplayMetadata must be an NSNumber
AVVideoEmitSequencesAtSyncFramesOnly must be greater than zero
AVVideoEmitSequencesAtSyncFramesOnly must be an NSNumber
AVVideoPixelAspectRatioKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Pixel aspect ratio can only be specified once
Value for pixel aspect ratio must be an instance of NSDictionary
AVVideoCleanApertureKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Clean aperture can only be specified once
Value for clean aperture must be an instance of NSDictionary
<%@: %p, minimum = %f, maximum = %f>
AVAssetDownloadSessionDownloadSucceededNotification
AVAssetDownloadSessionDownloadFailedNotification
AVAssetDownloadSessionFileSizeAvailableNotification
AVAssetDownloadSessionLoadedTimeRangesChangedNotification
AVAssetDownloadSessionCurrentLoadedTimeRangesKey
AVAssetDownloadSessionNewlyLoadedTimeRangeKey
AVAssetDownloadSessionTimeRangeExpectedToLoadKey
AVAssetDownloadSessionDidResolveMediaSelectionNotification
AVAssetDownloadSessionPriorityKey
AVAssetDownloadSessionProtectedContentSupportStorageURLKey
AVAssetDownloadSessionPurchaseBundleKey
AVAssetDownloadSessionAirPlayAuthorizationInfoKey
AVAssetDownloadSessionCachePrimingDownloadTokenKey
AVAssetDownloadSessioniTunesStoreContentInfoKey
AVAssetDownloadSessioniTunesStoreContentIDKey
AVAssetDownloadSessioniTunesStoreContentTypeKey
AVAssetDownloadSessioniTunesStoreContentUserAgentKey
AVAssetDownloadSessioniTunesStoreContentDownloadParametersKey
AVAssetDownloadSessioniTunesStoreContentDSIDKey
AVAssetDownloadSessioniTunesStoreContentPurchasedMediaKindKey
AVAssetDownloadSessionHTTPCookiesKey
AVAssetDownloadSessionClientBundleIdentifierKey
AVAssetDownloadSessionHTTPHeaderFieldsKey
AVAssetDownloadSessionClientAuditTokenKey
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey
AVAssetDownloadSessionAllowsCellularAccessKey
AVAssetDownloadSessionAllowsExpensiveNetworkAccessKey
AVAssetDownloadSessionAllowsConstrainedNetworkAccessKey
AVAssetDownloadSessionMinimumRequiredMediaBitrateKey
AVAssetDownloadSessionMediaSelectionKey
AVAssetDownloadSessionDeleteDownloadWhenAssetFinalizesKey
AVAssetDownloadSessionLinkAssetURLToDestinationURLKey
AVAssetDownloadSessionShouldStoreEligibleContentKeysKey
AVAssetDownloadSessionAssetNameKey
AVAssetDownloadSessionAssetImageDataKey
AVAssetDownloadSessionOptimizeAccessForLinearMoviePlaybackKey
AVAssetDownloadSessionAlternativeConfigurationOptionsKey
AVAssetDownloadSessionMediaSelectionPrefersMultichannelKey
AVAssetDownloadSessionDebugIdentifierKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AVAssetDownloadTaskMediaSelectionKey
AVAssetDownloadTaskShouldStoreEligibleContentKeysKey
AVAssetDownloadTaskDestinationURLKey
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
AVAssetDownloadTaskAllowHighDynamicRangeKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelOnlyKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelForMostPreferredLanguageOnlyKey
AVAssetDownloadTaskMediaSelectionsForMultichannelKey
AVAssetDownloadTaskPrefersHDRKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateForHEVCKey
AVAssetDownloadTaskPrefersMostCompatibleRenditionKey
AVAssetDownloadSessionRetryErrorKey
AVAssetDownloadTaskClientIsCatalyst
AVAssetDownloadTaskPrefersLosslessAudioKey
AVAssetDownloadTaskMaximumAudioSampleRateKey
AVAssetDownloadTaskDownloadConfigurationKey
com.apple.avfoundation.avassetdownloadsession
URL != nil
[destinationURL isFileURL]
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey and AVAssetDownloadSessionAllowsCellularAccessKey options are incompatible
downloadToken > 0
asset != nil || options[AVAssetDownloadTaskDownloadConfigurationKey] != nil
(asset != nil && [asset isKindOfClass:[AVURLAsset class]]) || asset == nil
mediaSelections == nil || [mediaSelections isKindOfClass:[NSArray class]]
<%@: %p, PTS = %@, DTS = %@>
<%@: %p> timebase read/write queue
AVPlayerItemVideoOutput does not support compressed output
AVPlayerItemOutput queue
com.apple.avfoundation.avfragmentedassetminder
An %@ cannot mind fragmented assets more frequently than once per millisecond (requested interval was %f)
An %@ cannot mind instances of %@
%@ cannot add an %@ that's already being minded by another fragment minder
*** -[%@ addFragmentedAsset:] specifies an asset that's already associated with a fragment minder. Ignoring.
AVPixelBufferAttributeMediatorPixelBufferAttributesDidChangeNotification
AVSampleBufferDisplayLayerFailedToDecodeNotification
AVSampleBufferDisplayLayerFailedToDecodeNotificationErrorKey
AVSampleBufferDisplayLayerRequiresFlushToResumeDecodingDidChangeNotification
AVSampleBufferDisplayLayerOutputObscuredDueToInsufficientExternalProtectionDidChangeNotification
AVSampleBufferDisplayLayerVideoRectDidChangeNotification
AVSampleBufferDisplayLayerVisibilityDidChangeNotification
AVSampleBufferDisplayLayerQueue
separatedOptions.STSLabel
sampleBufferVideoRenderer.status
sampleBufferVideoRenderer.error
sampleBufferVideoRenderer.outputObscuredDueToInsufficientExternalProtection
AVSampleBufferDisplayLayer: No formatDescription found in sampleBuffer
StreamingContentKeyRequestRequiresPersistentKey
StreamingContentKeyRequiresiTunesProvisioningKey
can be decoded only by a NSXPCCoder
endpoint
NSXPCCoder returned NULL endpoint
customURLHandlerObjectID
authHandlerObjectID
contentKeySessionHandlerObjectID
can be encoded only by a NSXPCCoder
com.apple.avfoundation.avassetresourceloader.state
com.apple.avfoundation.avassetresourceloader.contentInformationCaching
com.apple.avfoundation.avassetresourceloader.handler
AVAssetResourceLoader
com.apple.avfoundation.avassetresourceloader.authhandler
AVAssetResourceLoader-authentication
NULL delegateQueue passed
delegate
delegateQueue
v16@?0@"<AVAssetResourceLoaderDelegate>"8
v12@?0B8
The specified challenge must be an instance of NSURLAuthenticationChallenge previously provided by AVAssetResourceLoader
The specified credential must be an instance of NSURLCredential
<%@: %p, content type = "%@", content length = %lld, byte range access supported = %@, disk caching permitted = %@, renewal date = %@>
Accept-Ranges
no-cache
Content-Type
com.apple.avfoundation.avassetresourceloadingdatarequest
<%@: %p, requested offset = %lld, requested length = %lld, requests all data to end of resource = %@, current offset = %lld>
com.apple.avfoundation.avassetresourceloadingrequest.dataCaching
bytes=%lld-%lld
AVAssetResourceLoadingRequest %p deallocated while a streaming content key request is still being generated; leaking completion handler. Either keep a retain of the AVAssetResourceLoadingRequest in -generateStreamingContentKeyRequestDataAsynchronouslyForApp's completionHandler or wait until completionHandler is called before calling -finishLoading/-finishLoadingWithError:.
<%@: %p, URL request = %@, request ID = %llu, content information request = %@, data request = %@>
Already have a cachedContentInformation
FCUP_Response_RequestID
FCUP_Response_URL
FCUP_Response_Headers
FCUP_Response_IsContentKeyRequest
no contentKeySession
*** -[AVAssetResourceLoadingRequest finishLoading] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
Must respond with a contentType contained in AVAssetResourceLoadingContentInformationRequest.allowedContentTypes.
*** -[AVAssetResourceLoadingRequest finishLoadingWithError:] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
StreamingContentKeyIsForAirPlayKey
CSKRO_RemoteContext
Cannot generate content key request when AVAsset is attached to AVContentKeySession
appIdentifier != nil
contentIdentifier != nil
A streaming content key request is already being generated on this AVAssetResourceLoadingRequest.
keyVendorResponse != NULL
AVSampleBufferRenderSynchronizerRateDidChangeNotification
com.apple.avfoundation.avsamplebufferrendersynchronizer.ratequeue
com.apple.avfoundation.avsamplebufferrendersynchronizer.synchronizeraccessqueue
com.apple.avfoundation.avsamplebufferrendersynchronizer.rendererlistqueue
rendersynchronizer_sts_label
com.apple.avfoundation.STS.%d-%d
newRate >= 0.0
Invalid renderer configuration; forcing rate to 0. rather than %1.3f
v16@?0@"NSString"8
invalid renderer
Cannot add renderer %p %@
The SampleBufferRenderer cannot be added to a Synchronizer more than once.
Multiple AudioRenderers not allowed when using Long Form Routing Policy.
An instance of AVSampleBufferRenderSynchronizer cannot remove a time observer that was added by a different instance of AVSampleBufferRenderSynchronizer.
renderer
onceTimebaseObserver
clientCompletionHandler
AVSampleBufferRenderSynchronizerFigFactoryKey
BOOL AVCanWriteFilesToDirectoryAtURL(NSURL *, NSError **)
AVFileSystemUtilities.m
directoryURL != nil
TemporaryFileForAVFoundation
<%@: %p, peakBitRate:%d averageBitRate:%d video:%@ audio:%@>
variant
[mediaSelectionOption isKindOfClass:[AVMediaSelectionOption class]]
<%@: %p, formatIDs:%@>
one of the constituent parts of %@ are not supported by AVAssetVariantQualifier error:%@
predicate
channelCount
mediaSelectionOption
operator
creation using format string is not supported
<%@: %p, count:%d operator:%@ option:%@>
width
<%@: %p, width:%lf operator:%@>
height
<%@: %p, height:%lf operator:%@>
AVCGColorAttributes
Not available.  Use %@ instead
<%@: %p
, principalMediaCharacteristics = %@
, preferredLanguages = %@
, preferredMediaCharacteristics = %@
, preferredMediaSubTypes = %@
, precludedMediaSubTypes = %@
, preferMultichannelAudio
, precludeMultichannelAudio
preferredLanguages must contain only items of type NSString
preferredMediaCharacteristics must contain only items of type NSString
principalMediaCharacteristics must contain only items of type NSString
preferredMediaSubTypes must contain only items of type NSNumber
precludedMediaSubTypes must contain only items of type NSNumber
filteredImage != nil
com.apple.AVStorylineCustomVideoCompositor._renderContextQ
Expecting video composition to contain only AVCoreImageFilterVideoCompositionInstruction
B8@?0
@"CIContext"8@?0
AVPlayerItemLegibleOutputTextStylingResolutionDefault
AVPlayerItemLegibleOutputTextStylingResolutionSourceAndRulesOnly
subtypes != nil
com.apple.avplayeritemlegibleoutput.ivars
[mediaSubtypeObject isKindOfClass:[NSNumber class]]
integerValueAppearsToBeAFourCC
Native representation is not available for media subtype 'c608'
Invalid text styling resolution %@
AVOutputSettingsPreset640x480
AVOutputSettingsPreset960x540
AVOutputSettingsPreset1280x720
AVOutputSettingsPreset1920x1080
AVOutputSettingsPreset3840x2160
AVOutputSettingsPresetHEVC1920x1080
AVOutputSettingsPresetHEVC1920x1080WithAlpha
AVOutputSettingsPresetHEVC3840x2160
AVOutputSettingsPresetHEVC3840x2160WithAlpha
AVOutputSettingsPresetHEVC7680x4320
CMTIME_IS_NUMERIC(sourceVideoAverageFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoAverageFrameDuration, >, kCMTimeZero)
CMTIME_IS_NUMERIC(sourceVideoMinFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoMinFrameDuration, >, kCMTimeZero)
AVMediaSelection_DefaultSelection
[propertyList isKindOfClass:[NSArray class]]
 %@ : %@ 
<%@: %p, group characteristics and selected options = %@>
widthPixels
heightPixels
imageData
prerendered
Knobs
LowFidelityTouch
HighFidelityTouch
Touchpad
softKeyboard
softPhoneKeypad
nonMusicLists
musicLists
japanMaps
ExternalDevice_ScreenBecameAvailable
ExternalDevice_ScreenBecameUnavailable
ExternalDevice_NightModeChangedNotification
ExternalDevice_LimitedUIChangedNotification
ExternalDevice_OwnsTurnByTurnNavigationChangedNotification
ExternalDevice_PerformanceReportNotificationPosted
ExternalDevice_MFiCertificateSerialNumberChangedNotification
ExternalDevice_ElectronicTollCollectionChangedNotification
ExternalDevice_NavigationAidedDrivingChangedNotification
enhancedRequestCarUI
com.apple.AVFoundation.AVExternalDevice
com.apple.AVFoundation.AVExternalDevice.ViewAreas
viewAreaIndex
adjacentViewAreas
active
com.apple.springboard
InitialCarPlayConnection
TestTakeScreenAway
payload
TestNotification
uuid
AVPlayerCaptionLayerQueue
com.apple.avfoundation.playercaptionlayer.configuration
com.apple.avcustomvideocompositorsession.clientcustomcompositorq
com.apple.avcustomvideocompositorsession.rendercontextq
com.apple.avcustomvideocompositorsession.clienterrorq
com.apple.avcustomvideocompositorsession.videocompositionq
com.apple.avcustomvideocompositorsession.finishedrequestq
sourcePixelBufferAttributes must not be nil. (AVVideoCompositing=%p)
sourcePixelBufferAttributes must be an NSDictionary. (AVVideoCompositing=%p)
sourcePixelBufferAttributes must contain kCVPixelBufferPixelFormatTypeKey. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must contain at least one item. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must be either an NSArray or an NSNumber. (AVVideoCompositing=%p)
requiredPixelBufferAttributesForRenderContext must not be nil. (AVVideoCompositing=%p)
requiredPixelBufferAttributesForRenderContext must contain kCVPixelBufferPixelFormatTypeKey. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in requiredPixelBufferAttributesForRenderContext must contain at least one item. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in requiredPixelBufferAttributesForRenderContext must be either an NSArray or an NSNumber. (AVVideoCompositing=%p)
This instance is never deallocated
observedObject != nil
keyPath != nil
dependentProperty
v16@?0@"NSDictionary"8
v24@?0@"NSObject<AVWeakObservable>"8@"NSDictionary"16
callbackContextRegistry != nil
observer != nil
object != nil
*** Weakly-observed object %p was deallocated without cancelling outstanding registration %p.  You are most likely about to get an exception from KVO.  To fix, make sure that %p properly implements the %@ protocol
*** Received KVO for object %p that is being deallocated.  This can cause other objects to get a reference to %p while it is in an inconsistent state.  Break on AVKVODispatcherKVODuringObjectTeardownBreak() to debug
v24@?0@"NSObject"8@"NSDictionary"16
Cannot safely use %@ with %@ or its subclasses, due to rdar://problem/26865139, until we
 stop supporting legacy versions of iWork apps
dependentPropertyKey != nil
dependencyKeyPath != nil
com.apple.avfoundation.keypathdependency.registration
<%@: %p, target=%@, dependentKey="%@", dependencyKeyPath="%@">
<deallocated>
Must invoke with object passed to initializer
v32@?0@"AVKeyPathDependency"8@"NSObject<AVWeakObservable>"16@"NSDictionary"24
v24@?0@"AVKeyPathDependency"8@"NSDictionary"16
%@.%@
topLevelDependencyProperty
observedObject
unfinished AVAsynchronousVideoCompositionRequest deallocated - should have called finishWithComposedVideoFrame:, finishWithError: or finishCancelledRequest
finishWithComposedVideoFrame requires a CVPixelBuffer
ignored -[AVAsynchronousVideoCompositionRequest finishWithComposedVideoFrame:] because already finished
ignored -[AVAsynchronousVideoCompositionRequest finishWithError:] because already finished
ignored -[AVAsynchronousVideoCompositionRequest finishCancelledRequest:] because already finished
AVRouteDetectorMultipleRoutesDetectedDidChangeNotification
routedetector_trace
com.apple.avfoundation.avroutedetector.ivars
v16@?0@"DAEvent"8
-[AVRouteDetector _didEnterBackground]
-[AVRouteDetector _didEnterForeground]
DADiscoveryConfiguration
/System/Library/PrivateFrameworks/DeviceAccess.framework/DeviceAccess
DADiscovery
com.apple.avvideocompositionrendercontext.pixelbufferpoolq
LowQualityZeroLatency
TimeDomain
Spectral
Varispeed
AVMovieReferenceRestrictionsKey
AVMovieShouldPrepareToOptimizeForExclusivePlaybackKey
AVMovieShouldSupportAliasDataReferencesKey
[[AVMovie movieTypes] containsObject:contentType]
![self isMemberOfClass:[AVMutableMovie class]]
<%@: %p defaultMediaDataStorage = %@, tracks = %@ >
<%@: %p tracks = %@ >
Can't copy settings from an AVAssetTrack with a non-matching media type
existingTracks != nil
[track isKindOfClass:[AVAssetTrack class]]
AVPlayerItemSampleBufferOutput state
AVContentKeySessionLegacyWebKitCompatibilityMode
FairPlayStreaming
ClearKeySystem
AuthorizationTokenSystem
ProtocolVersionsKey
RequiresValidationDataInSecureTokenKey
RequiresExtendedValidationDataInSecureTokenKey
SupportsAirPlayDecryptionKey
ServerChallenge
CreateDecryptorUsingFormatDescription
ReceivedKeyResponseAfterSPCTimedOut
ReceivedKeyResponseWithExpiredLease
ReceivedObsoleteKeyResponse
%@ does not support key persistence
HLSMethodKey
-[AVContentKeyRequest initWithContentKeySession:reportGroup:identifier:contentIdentifier:keyIDFromInitializationData:initializationData:preloadingRequestOptions:providesPersistableKey:]
-[AVContentKeyRequest initWithContentKeySession:reportGroup:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:isRenewalRequest:]
-[AVContentKeyRequest initWithContentKeySession:contentKeyBoss:useContentKeyBoss:keySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:isRenewalRequest:requestID:providesPersistableKey:preloadingRequestOptions:identifier:]
<%@: %p status:%d>
-[AVContentKeyRequest _setError:]_block_invoke
v16@?0@"<AVContentKeySessionDelegate>"8
-[AVContentKeyRequest _handleKeyResponseError:]
-[AVContentKeyRequest _handleKeyResponseError:]_block_invoke
-[AVContentKeyRequest _handleKeyResponseSuccessWithCryptor:]_block_invoke
-[AVContentKeyRequest ensureCryptorWithFormatDescription:error:]
value against AVContentKeyRequestProtocolVersionsKey should be an array of NSNumber objects
ISO_23001_7
SAMPLE-AES
value against AVContentKeyRequestHLSMethodKey is not recognized
value against AVContentKeySessionServerPlaybackContextOptionServerChallenge should be a NSData instance
Server challenge should be 8 bytes in length
AVContentKeyRequestRequiresExtendedValidationDataInSecureTokenKey value should be an object of NSData class
valid completionHandler is required
valid appIdentifier is required
-[AVContentKeyRequest makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:]_block_invoke
content key request cancelled or already failed
valid responseData is required
-[AVContentKeyRequest processContentKeyResponseData:renewalDate:error:]
valid keyResponse is required
AVContentKeySession's keySystem is not same as that of keyResponse
%@ does not support this operation
keyResponse should be an object of AVContentKeyResponseFairPlayStreaming class
valid FPS key response data is required
-[AVContentKeyRequest processContentKeyResponse:]
keyResponse should be an object of AVContentKeyResponseClearKey class
valid ClearKey key data is required
keyResponse should be an object of AVContentKeyResponseAuthorizationToken class
identifier and authorizationTokenData must be valid
identifier should be an object of NSString class
%@ does not support key renewal
client's delegate should respond to contentKeySession:didProvidePersistableContentKeyRequest: method in order to be able to request persistable content key request
-[AVContentKeyRequest respondByRequestingPersistableContentKeyRequestAndReturnError:]
displays is nil
-[AVContentKeyRequest(AVContentKeyReportInternal) setReportGroup:]
valid keyVendorResponse is required
persistable content key cannot be created at this time
-[AVPersistableContentKeyRequest persistableContentKeyFromKeyVendorResponse:options:error:]
FairPlay Streaming is not supported on simulators
avcontentkeysession_trace
input keySystem is not supported
%@ does not support storage URL
com.apple.AVContentKeySession._threadSafetyQ
<%@: %p> contentkeysession delegate serialization queue
-[AVContentKeySession initWithKeySystem:storageDirectoryAtURL:legacyWebKitCompatibilityMode:]
<%@: %p expired:%d>
valid delegateQueue is required
cannot add this object as an AVContentKeyRecipient
-[AVContentKeySession addContentKeyRecipient:]_block_invoke
Content key session is already expired or failed
Can't add object as an AVContentKeyRecipient after it has established its own content protection
Content key recipient cannot be associated with more than one instance of AVContentKeySession
-[AVContentKeySession addContentKeyRecipient:]
-[AVContentKeySession removeContentKeyRecipient:]_block_invoke
-[AVContentKeySession expire]
An expired content key session cannot process content key request
valid contentKeyRequest is required
Cannot renew content key request since there's no delegate set on the content key session
Cannot renew content key request using an expired content key session
Cannot renew content key request that was previously cancelled or failed
Cannot renew while content key request is waiting for a response
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]_block_invoke
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]
valid completion handler is required
valid persistableContentKeyData is required
-[AVContentKeySession makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:]
-[AVContentKeySession makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:]_block_invoke_2
-[AVContentKeySession invalidatePersistableContentKey:options:completionHandler:]
-[AVContentKeySession invalidatePersistableContentKey:options:completionHandler:]_block_invoke_2
valid application certificate is required
-[AVContentKeySession invalidateAllPersistableContentKeysForApp:options:completionHandler:]
-[AVContentKeySession invalidateAllPersistableContentKeysForApp:options:completionHandler:]_block_invoke_2
valid storageURL is required
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:]
expiredSessionReports should be an array of NSData objects
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:]
-[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) _handleSecureStopDidFinalizeRecordCallback]_block_invoke
%@_%llu
-[AVContentKeySession(AVContentKeySessionPrivateUtilities) _handleUpdateToPersistentKey:forKeyIdentifier:]_block_invoke
-[AVContentKeySession(AVContentKeySessionPrivateUtilities) _handleContentProtectionSessionIdentifierDidChange:]_block_invoke
appIdentifier can't change once set
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequests:forInitializationData:]_block_invoke
-[AVContentKeySession(AVContentKeyRequestSupport) issuePersistableContentKeyRequest:]
-[AVContentKeySession(AVContentKeyRequestSupport) issueRenewableContentKeyRequest:]
-[AVContentKeySession(AVContentKeyRequestSupport) contentKeyRequestDidProduceContentKey:]_block_invoke_2
valid delegate is required to deliver a key request
-[AVContentKeySession(AVContentKeySession_Internal) issueContentKeyRequestForInitializationData:]_block_invoke
cannot get content key identifier
no content key present
CoreMedia
EnableContentKeyBossForAirPlay
CoreMediaErrorDomain
-[AVContentKeySession(AVContentKeySession_Internal) _handleRequest:withRequestID:fromHandler:willHandleRequest:]
com.apple.avfoundation.avcontentkeysession.handler
AVContentKeySession
-[AVContentKeySession(AVContentKeyGroup_Support) makeContentKeyGroup]
identifier is not string or url
identifier or initializationData must be valid
AVContentKeySession is nil
-[AVContentKeyReportGroup processContentKeyRequestWithIdentifier:initializationData:options:]
-[AVContentKeyReportGroup associateContentKeyRequest:]
-[AVContentKeyReportGroup expire]
com.apple.avfoundation.avcontentkeyreportgroup
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) initWithKeySystem:keySession:contentKeyBoss:useContentKeyBoss:groupID:storageDirectoryAtURL:]
sample buffer does not have format description
Content key is not valid
pssh
AVAPSyncControllerRemoteOutputDeviceGroupImplGroupMembersChanged
AVAPSyncControllerRemoteOutputDeviceGroupImplSetSpeakerGroupCallback
AVAPSyncControllerRemoteOutputDeviceGroupImplVolumeChanged
AVAPSyncControllerRemoteOutputDeviceGroupImplVolumeControlTypeChanged
<<<< AVOutputDeviceDiscoverySession >>>> %s: *** nil impl! ***
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (session=%p, discoveryMode=%d, clientIdentifiers=%@)
<<<< AVOutputDevice (APSyncController) >>>> %s: called (inLocalSpeakerUUID = %@, inError = %d)
<<<< AVOutputDevice (APSyncController) >>>> %s: called (endpointID=%{private}@)
<<<< AVOutputDevice (APSyncController) >>>> %s: called
<<<< AVOutputDeviceGroup >>>> %s: Posting %{public}@ with initiator %{public}@
<<<< AVOutputDeviceGroup >>>> %s: called (device=%{private}@ authToken? %d cancelIfAuthRequired=%{public}@, initiator=%{public}@)
<<<< AVOutputDeviceGroup >>>> %s: Result: %{public}@
<<<< AVOutputDeviceGroup >>>> %s: called (device=%{private}@, initiator=%{public}@
<<<< AVOutputDeviceGroup >>>> %s: Posting %{public}@
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p, dataLength=%d)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: Sending %d bytes through comm channel via FigEndpointRemoteControlSessionSendMessage for channel=%p
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p, inEventType=%{public}@, dataLength=%d)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: FigEndpointRemoteControlSessionSendMessage finished with response params %{public}@ (err=%d)
<<<< AVPlayer >>>> %s: Player status changed to failed with error: %d
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ updating current item from %{public}@ to %{public}@
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ will willChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ did willChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: %{public}@ setting timeControlStatus=%d, reasonForWaitingToPlay=%{public}@
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ will didChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ did didChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called with %{public}@ (afterItem = %{public}@)
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called with %{public}@
<<<< AVPlayer >>>> %s: %{public}@ skipping setting new rate on FigPlayer because another rate change has intervened
<<<< AVPlayer >>>> %s: %@ SDK check skipped, using rate 1.0
<<<< AVPlayer >>>> %s: %{public}@ failed to copy currently displayed pixel buffer w/ err %d
<<<< AVPlayer >>>> %s: %{public}@ cannot copy displayed pixel buffer while player's rate is non-zero
<<<< AVPlayer >>>> %s: %{public}@ no change to timeControlStatus or reasonForWaitingToPlay
<<<< AVPlayerItem >>>> %s: currentItem KVO: called
<<<< AVPlayerItem >>>> %s: currentItem KVO: %{public}@
<<<< AVPlayerItem >>>> %s: *** Called from the wrong queue%@.  Break on AVPotentialRaceCondition() to debug ***
<<<< AVPlayerItem >>>> %s: self %{public}@: "%{public}@" in group %{public}@
<<<< AVPlayerItem >>>> %s: self %{public}@: %{public}@
<<<< AVPlayerItem >>>> %s: self %{public}@: setting coordination identifier to %{public}@
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) replacing participant states.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) updating timeline state.
<<<< AVPlaybackCoordinator >>>> %s: States aren't distinguishable. Assuming existing state is better for %{public}@.
<<<< AVPlaybackCoordinator >>>> %s: Ignoring stale state for %{public}@
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling new control state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle new control state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling new participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle new participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling replacement participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle replacement participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to broadcast transport state but coordination medium delegate is nil
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to broadcast participant state but coordination medium delegate is nil
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to fetch timeline state but coordination medium delegate is nil.  Clearing delegate and calling completion handler.
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Calling -outputDeviceAuthorizationSession:didProvideAuthorizationRequest: on delegate (request/ID=%{public}@, request/outputDevice=%{private}@, request/authorizationTokenType=%{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Not messaging delegate because there is no delegate or it does not respond to -outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Calling -outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason: on delegate (request/ID=%{public}@, reason=%{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Not messaging delegate because there is no delegate or it does not respond to -outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (authorizationToken=%{private}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Result: %d (error: %{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Calling APSyncControllerOpenSpeakerCommChannel (controlType: %d, clientTypeUUID: %@)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: APSyncControllerOpenSpeakerCommChannel finished for comm channel ID %{public}@ (err=%d)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (commChannelUUID=%{public}@ dataLength=%d)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (commChannelUUID=%{public}@)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Sending %d bytes through comm channel ID %{public}@ via APSyncControllerSendSpeakerData
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: APSyncControllerSendSpeakerData finished for comm channel ID %{public}@ (err=%d)
<<<< AVOutputDevice >>>> %s: called (enabled=%d)
<<<< AVOutputDevice >>>> %s: setting second display mode to %{public}@...
<<<< AVOutputDevice >>>> %s: ...done setting second display mode (token=%{public}@, error=%{public}@/%d)
<<<< AVOutputDevice >>>> %s: Posting %{public}@
<<<< AVOutputDevice >>>> %s: called (volume=%f)
<<<< AVOutputDevice >>>> %s: called (count=%ld)
<<<< AVOutputDevice >>>> %s: called (allows=%d)
<<<< AVOutputDevice >>>> %s: called (mode=%{public}@)
<<<< AVOutputDevice >>>> %s: called (device=%{private}@, dataDestination=%{public}@, cancelIfAuthRequired=%{public}@, correlationID=%{private}@, initiator=%{private}@, controlType=%{public}@)
<<<< AVOutputDevice >>>> %s: Open comm channel completed (err=%d, channel=%p, correlationID=%{private}@)
<<<< AVOutputDevice >>>> %s: called (delegate? %d)
<<<< AVOutputDevice >>>> %s: Invoking -outputDevice:didReceiveData:fromCommunicationChannel: with %d bytes
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -outputDevice:didReceiveData:fromCommunicationChannel
<<<< AVOutputDevice >>>> %s: Invoking -outputDevice:didCloseCommunicationChannel:
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -outputDevice:didCloseCommunicationChannel:
<<<< AVOutputDevice >>>> %s: called (cancelIfAuthRequired=%{public}@)
<<<< AVOutputDevice >>>> %s: result=%d, cancellationReason=%{public}@, error=%{public}@
<<<< AVOutputDevice >>>> %s: called
<<<< AVOutputDevice >>>> %s: Ignoring non-date last used timestamp "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: Ignoring non-number frecency score "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: Removing frecents entry for device %{private}@ which previously had an invalid or missing LastUsedTimestamp
<<<< AVOutputDevice >>>> %s: Using frecents file at %{public}@
<<<< AVOutputDevice >>>> %s: Using legacy CFPreferences-based frecents
<<<< AVOutputDevice >>>> %s: Migrating frecents from CFPreferences to %{public}@
<<<< AVOutputDevice >>>> %s: Ignoring failure to read plist from data %{private}@ (%{private}@)
<<<< AVOutputDevice >>>> %s: Ignoring invalid frecents plist "%{private}@"
<<<< AVOutputDevice >>>> %s: Ignoring malformed frecents entry "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: called (channel=%p, delegate? %d)
<<<< AVOutputDevice >>>> %s: Invoking -communicationChannel:didReceiveData: with %d bytes for channel=%p
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -communicationChannel:didReceiveData: for channel=%p
<<<< AVOutputDevice >>>> %s: Invoking -communicationChannelDidClose: for channel=%p
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -communicationChannelDidClose: for channel=%p
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) change status from %d to %d, newError %@
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) reset status from %d to 0
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) set _createVideoQueueFailed to %d
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) Failed to create FigVideoQueue with error %d, moving state to fail state, will attempt re-create after client flushes
<<<< AVSampleBufferVideoRenderer >>>> %s: failed to create AVSampleBufferVideoRender %d
<<<< AVSampleBufferVideoRenderer >>>> %s: AVSampleBufferVideoRender Create [%p, %p]
<<<< AVSampleBufferVideoRenderer >>>> %s: AVSampleBufferVideoRender dealloc [%p, %p]
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p: %p] requestDecodeForPreroll
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p, %p] failed to copy currently displayed pixel buffer w/ err %d
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Setting %@ = %@
<<<< AVOutputDevice (FigEndpoint) >>>> %s: setting kFigEndpointProperty_ListeningMode to %d
<<<< AVOutputDevice (FigEndpoint) >>>> %s: calling FigEndpointBorrowScreen (clientName=%{public}@, reason=%{private}@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: calling FigEndpointUnborrowScreen (clientName=%{public}@, reason=%{private}@)
<<<< AVOutputContext >>>> %s: setting applicationProcessID to %d
<<<< AVOutputContext >>>> %s: called (context=%p, outputDevice=%{private}@, password? %d, cancelIfAuthRequired=%{public}@, suppressUserInteractionOnSenderOnly=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: Result: %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: called (outputDevice=%{private}@, features=%d)
<<<< AVOutputContext >>>> %s: called (outputDevice=%{private}@, password? %d, cancelIfAuthRequired=%{public}@, suppressUserInteractionOnSenderOnly=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called
<<<< AVOutputContext >>>> %s: Posting %{public}@ with destination change %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: Posting %{public}@ with initiator %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: Posting %{public}@)
<<<< AVOutputContext >>>> %s: Posting %{public}@ with initiator %{public}@, reason %{public}@, deviceID %{private}@, and previousDeviceIDs %{private}@ for context=%p
<<<< AVOutputContext >>>> %s: called (devices=%{private}@)
<<<< AVOutputContext >>>> %s: called (context=%p, devices=%{private}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called (context=%p, device=%{private}@, authToken? %d, cancelIfAuthRequired=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called (device=%{private}@)
<<<< AVOutputContext >>>> %s: called (context=%p, device=%{private}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: Posting %{public}@
<<<< AVOutputContext >>>> %s: called (controlType=%{public}@)
<<<< AVOutputContext >>>> %s: called (delegate? %d>)
<<<< AVOutputContext >>>> %s: Invoking -outputContextOutgoingCommunicationChannelDidBecomeAvailable:
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContextOutgoingCommunicationChannelDidBecomeAvailable:
<<<< AVOutputContext >>>> %s: Invoking -outputContext:didReceiveData:fromCommunicationChannel: with %d bytes
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContext:didReceiveData:fromCommunicationChannel:
<<<< AVOutputContext >>>> %s: Invoking -outputContext:didCloseCommunicationChannel:
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContext:didCloseCommunicationChannel:
<<<< AVOutputContext >>>> %s: sending %d bytes
<<<< AVOutputContext >>>> %s: Posting %{public}@ with outputDevice: %{private}@ failureReason: %{public}@
<<<< AVRunLoopCondition >>>> %s: reached timeout
<<<< AVAssetInspectorLoader >>>> %s: called (self: %p, keys: %{public}@, keysForCollectionKeys: %{public}@, handler: %{public}@)
<<<< AVAssetInspectorLoader >>>> %s: Calling FigAssetLoadValuesAsyncForProperties for properties %{public}@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: asset batch ID = %ld (err=%d, alreadyLoaded=%d)
<<<< AVAssetInspectorLoader >>>> %s: Calling FigAssetLoadValuesAsyncForTrackProperties for properties %{public}@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: track batch ID = %ld (err=%d, alreadyLoaded=%d)
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: invoking completion handler immediately
<<<< AVAssetInspectorLoader >>>> %s: Been waiting for key "%{public}@" to load since %{public}@.  Current status is %d.  First non-loaded dependency key is "%{public}@"
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: dispatching completion handler%{public}@%{public}@
<<<< AVAssetInspectorLoader >>>> %s: No completion handler to invoke
<<<< AVAssetInspectorLoader >>>> %s: No completed batches
<<<< AVAssetInspectorLoader >>>> %s: Received kFigAssetNotification_BatchPropertyLoadComplete (payload: %{public}@)
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: Marking asset batch ID %ld as complete
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: Marking track batch ID %ld as complete
<<<< AVRoutingSessionManager >>>> %s: Using non-FigRoutingSessionManager path
<<<< AVRoutingSessionManager >>>> %s: called
<<<< AVRoutingSessionManager >>>> %s: invoking completion handler with error %{public}@
<<<< AVRoutingSessionManager >>>> %s: called (deviceDescriptions=%{private}@)
<<<< AVBlockScheduler >>>> %s: Some thread is already running a block with this serializer.  Enqueued this block and letting that thread execute it
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: States aren't distinguishable. Assuming existing state is better for %{public}@.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: Ignoring stale state for %{public}@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling new control state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling new participant state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling replacement participant state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to broadcast timeline state but coordination medium delegate is nil
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to broadcast participant state but coordination medium delegate is nil
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to reload timeline state but coordination medium delegate is nil.  Clearing delegate and calling completion handler.
<<<< AVExternalPlaybackMonitor >>>> %s: Using non-FigRoutingSessionManager path
<<<< AVRouteDetector >>>> %s: AVRouteDetector did enter background.
<<<< AVRouteDetector >>>> %s: AVRouteDetector did enter foreground.
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p created request %p with identifier: %{public}@ initializationData: %p
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p request with identifier %{public}@ requestID: %lld failed err=%d
<<<< AVContentKeySession >>>> %s: %p cryptor:%p cryptorUUID:%{public}@ keyRequestId: %llu
<<<< AVContentKeySession >>>> %s: %p %p requestID:%lld
<<<< AVContentKeySession >>>> %s: %p %p did fail content key request %{public}@
<<<< AVContentKeySession >>>> %s: %p retrying key request because %@. status is set to retried
<<<< AVContentKeySession >>>> %s: %p %p key request failed since the client did not retry
<<<< AVContentKeySession >>>> %s: %p %p key request did succeed
<<<< AVContentKeySession >>>> %s: %p cryptor:%p cryptorUUID:%{public}@ cryptorKeyRequestID:%lld isInchargeOfKeyRequest:%d
<<<< AVContentKeySession >>>> %s: %p created key request:%p key-request-length:%lu for contentId:%{public}@ options:%{public}@ err:%{public}@
<<<< AVContentKeySession >>>> %s: %p setting content key response data %p to renew at %{public}@
<<<< AVContentKeySession >>>> %s: %p %p setting content key response data %p to renew at %{public}@
<<<< AVContentKeySession >>>> %s: %p processing content key response with data %p
<<<< AVContentKeySession >>>> %s: %p %p requesting persistable key request
<<<< AVContentKeySession >>>> %s: %p set report group success:%d
<<<< AVContentKeySession >>>> %s: %p %p key-respone:%p length:%lu offline-key:%p offline-key-legth:%lu err:%d
<<<< AVContentKeySession >>>> %s: %p: created with %{public}@ storageURL:%{public}@
<<<< AVContentKeySession >>>> %s: %p added content key recipient %p
<<<< AVContentKeySession >>>> %s: %p: failed to add %p as a content key recipient with error:%@
<<<< AVContentKeySession >>>> %s: %p removed content key recipient %p
<<<< AVContentKeySession >>>> %s: %p expiring recipient %p
<<<< AVContentKeySession >>>> %s: %p expiring session
<<<< AVContentKeySession >>>> %s: %p %p issuing renewable key request
<<<< AVContentKeySession >>>> %s: %p %p renewing with err:%@
<<<< AVContentKeySession >>>> %s: %p token:%p token-length:%lu error:%{public}@
<<<< AVContentKeySession >>>> %s: %{public}@ token:%p token-length:%lu error:%{public}@
<<<< AVContentKeySession >>>> %s: %p copying expired session reports for appIdentifier:%p storageURL:%{public}@ reports:%p
<<<< AVContentKeySession >>>> %s: %p remove pending session reports for appIdentifier:%p storageURL:%@
<<<< AVContentKeySession >>>> %s: %p issuing session report generation note
<<<< AVContentKeySession >>>> %s: %p issuing updated offline key %p for %{public}@
<<<< AVContentKeySession >>>> %s: %p issuing content protection identifier change for report group: %p
<<<< AVContentKeySession >>>> %s: %p issuing content protection identifier change
<<<< AVContentKeySession >>>> %s: %p issuing multiple key requests: %{public}@
<<<< AVContentKeySession >>>> %s: %p %p issuing key request
<<<< AVContentKeySession >>>> %s: %p %p issuing persistable key request
<<<< AVContentKeySession >>>> %s: %p issued content key %{public}@
<<<< AVContentKeySession >>>> %s: %p reusing preloaded cryptor %p for cryptor %p
<<<< AVContentKeySession >>>> %s: %p creating content key group: %p error: %@
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p processing key request with identifier %{public}@ and initData %{public}@ options %{public}@
<<<< AVContentKeySession >>>> %s: %p associate key request %p to reportGroup:%p
<<<< AVContentKeySession >>>> %s: %p expire reportGroup:%p
<<<< AVContentKeySession >>>> %s: %p created reportGroup:%p with figCKS: %p
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (groupID=%{private}@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (inResult = %d)
AVOutputContext
AVOutputContextLocalOutputDeviceGroupImpl
AVOutputDeviceGroupImpl
NSObject
AVPlayerLooperInternal
AVPlayerLooper
AVResult
AVAssetReaderOutputMetadataAdaptorInternal
AVAssetReaderOutputMetadataAdaptor
AVAssetReaderOutputAdaptor
AVVideoPerformanceMetricsInternal
AVVideoPerformanceMetrics
AVOutputDeviceDiscoverySessionInternal
AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal
AVOutputDeviceDiscoverySession
AVEmptyOutputDeviceDiscoverySessionAvailableOutputDevices
AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices
AVAPSyncControllerOutputDeviceImpl
AVOutputDeviceImpl
AVPlayerLayerIntermediateLayer
AVPlayerLayerInternal
AVPlayerLayer
AVKeyPathDependencyHost
AVWeakObservable
CMTimeAsValue
CMTimeRangeAsValue
CMTimeMappingAsValue
NSValueCMTimeExtensions
AVTimeCoding
AVTimebaseObserver
AVPeriodicTimebaseObserver
AVOccasionalTimebaseObserver
AVOnceTimebaseObserver
AVPlayerItemMetadataCollectorMetadataItemFiltering
AVPlayerItemMetadataCollectorInternal
AVPlayerItemMetadataCollector
AVPlayerItemMediaDataCollector_Internal
AVPlayerItemInterstitialEventCollector
AVPlayerInterstitialEvent
NSCopying
AVPlayerInterstitialEventMonitor
AVPlayerInterstitialEventController
AVSampleBufferVideoOutputInternal
AVSampleBufferVideoOutput
AVAssetDownloadStorageManager
AVAssetDownloadStorageManagementPolicy
NSMutableCopying
AVMutableAssetDownloadStorageManagementPolicy
AVAssetDownloadStorageManagementPolicyInternal
AVOutputDeviceGroup
AVOutputDeviceGroupMembershipChangeResult
AVMetadataItemInternal
AVMetadataItem_Local
AVMetadataItemTypeCoercion
AVMetadataItem
AVAsynchronousKeyValueLoading
AVMutableMetadataItem
AVLazyValueLoadingMetadataItemInternal
AVLazyValueLoadingMetadataItem
AVMetadataItemValueRequestInternal
AVMetadataItemValueRequest
AVMetadataItemLazyValueLoading
AVChapterMetadataItemInternal
AVChapterMetadataItem
AVMetadataItemFilterForSharing
AVMetadataItemFilterInternal
AVMetadataItemFilter
AVAssetProxy
AVAssetProxyInternal
AVAssetInternal
AVAsset
AVAssetChapterInspection
AVAsset_ExportAndSerializationSupport
AVAssetMovieAtomInfo_Private
AVAssetFragmentInternal
AVAssetFragment
AVFragmentedAssetsArray
AVAssetFragmentSequenceInfo_Private
AVURLAssetInternal
AVURLAsset
AVAssetCache
AVURLAssetCache_Private
AVAssetVariantInspection
AVURLAssetURLHandlingInternal
AVURLAssetURLHandling
AVAssetClientURLRequestHelper
AVURLAssetInstanceIdentiferMapping
AVDataAsset
AVAssetTrackEnumerator
AVURLAssetContentKeyEligibility
AVContentKeyRecipient
AVURLAssetContentKeyEligibilityInternal
AVContentKeyRecipientInternal
AVURLAssetCustomURLHandling
AVURLAssetItemProviderData
NSSecureCoding
NSCoding
NSItemProvider
AVURLAssetLoggingIdentifier
AVAssetSerializableCreationOptions
AVAssetSerializableCreationOptionsSupport
AVAudioMixEffectParameters
AVAudioMixSweepFilterEffectParameters
AVAudioMixSweepFilterEffectParametersInternal
AVAssetImageGeneratorInternal
AVAssetImageGenerator
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl
AVOutputDeviceCommunicationChannelImpl
AVAssetTrackInternal
AVAssetTrack
AVAssetTrack_ExportAndSerializationSupport
AVPlayerSetRateOptions
AVPlayerInternal
AVPlayer
AVPlayerVideoDisplaySleepPrevention
AVPlayerAutomaticBackgroundPrevention
AVPlayerProtectedContentPrivate
AVPlayer_PIPSupport
AVPlayerAudioPlaybackRateLimits
AVPlayerMultitaskSupport
AVPlayerSupportForMediaPlayer
AVAudioSessionMediaPlayerOnly
AVPlayerPixelBufferPoolSharing
AVPlayerFormatRestrictions
AVPlayerAutomaticMediaSelection
AVPlayerAutomaticMediaSelectionPrivate
AVPlayerAudioDeviceSupport
AVPlayerOutOfBandTextTrackRendering
AVPlayerMultichannelAudioStrategy
AVPlayerCaptionStrategySelection
AVPlayerAudioSessionParticipant
AVAudioSessionParticipant
AVPlayerQueueModificationDescription
AVPlayerVideoDecoderGPUSupport
AVPlayerLoggingIdentifier
AVPlayerAutoPauseOnRouteRemoval
AVPlayerImplicitInterruption
AVPlayerSTSLabel
AVPlayerPIPSupport
FigVideoTargetSupport
AVPlayerInterstitialSupport_Internal
PlaybackCoordination
AVPlayerLegibleFallback
AVPlayerOverlappedPlaybackSupport_Internal
AVPlayerRateState
AVAssetDownloadContentConfiguration
SecureCoding
AVAssetDownloadDefaultPrimaryContentConfiguration
AVAssetDownloadDefaultAuxiliaryContentConfiguration
AVAssetDownloadConfiguration
Internal
AVUXMDisplayManager
AVVideoCompositionRenderHintInternal
AVVideoCompositionRenderHint
AVSampleBufferAudioRendererInternal
AVSampleBufferAudioRenderer
AVMediaDataRequesterConsumer
AVQueuedSampleBufferRenderingInternal
AVQueuedSampleBufferRendering
AVSampleBufferAudioRendererContentKeyEligibility
AVSampleBufferAudioRendererContentKeyEligibilityInternal
Simulation
AVFigSampleBufferAudioRendererFactory
AVAssetWriterInputMetadataAdaptorInternal
AVAssetWriterInputMetadataAdaptor
AVExternalProtectionMonitorInternal
AVExternalProtectionMonitor
AVHUDStringGenerator
AVNetworkPlaybackPerfHUDLayer
AVPlayerItemInternal
AVPlayerItem
AVPlayerItemProtectedContent
AVPlayerItemProtectedContentPrivate
AVPlayerItemLogging
AVPlayerConnection
AVPlayerItemSupportForMediaPlayer
AVPlayerItemOutputs
AVPlayerItemMediaDataCollectors
AVPlayerItemServiceIdentifier_Private
LegibleOutputSupport
MetadataOutputSupport
AVPlayerItemAVKit
AVPlayerItemVideoEnhancement
AVPlayerInterstitialSupport
AVPlayerItemTrackInternal
AVPlayerItemTrack
AVQueuePlayer
AVQueuePlayerInternal
AVPlayerAdvanceWithOverlap
AVSpecifiedLoggingIdentifierInternal
AVSpecifiedLoggingIdentifier
AVLoggingIdentifier
AVLoggingDerivedIdentifier
AVAssetLoggingIdentifierInternal
AVAssetLoggingIdentifier
AVPlayerLoggingIdentifierInternal
AVCompositionInternal
AVComposition
AVMutableCompositionInternal
AVMutableComposition
AVCompositionFormatReaderInspector
AVComposition_NSCoding
AVPlayerItemMetadataOutputInternal
AVPlayerItemMetadataOutput
AVPlayerItemMetadataOutput_Internal
AVCompositionTrackFormatDescriptionReplacement
AVCompositionTrackInternal
AVCompositionTrack
AVMutableCompositionTrackInternal
AVMutableCompositionTrack
AVNotificationSubscription
AVCancellable
AVPublisher
AVPropertyValuePublisher
AVMapPublisher
AVSwitchToLatestPublisher
AVSinkSubscriber
AVTimeFormatterInternal
AVTimeFormatter
AVCompositionTrackSegmentInternal
AVCompositionTrackSegment
AVMovieTrackInternal
AVMovieTrack
AVMutableMovieTrackInternal
AVMutableMovieTrack
AVMutableMovieTrackFormatDescriptions
AVMutableMovieTrack_FormatDescriptions
AVMutableMovieTrackTrackLevelEditing
AVMutableMovieTrackSampleLevelEditing
AVMutableMovieTrack_SampleLevelEditingPrivate
AVMutableMovieTrackMetadataEditing
AVMutableMovieTrackTrackAssociations
AVAssetReaderInternal
AVAssetReader
AVAssetReaderOutputInternal
AVAssetReaderOutput
AVAssetReaderTrackOutputInternal
AVDecodedVideoSettingsForFig
AVAssetReaderTrackOutput
AVAssetReaderAudioMixOutputInternal
AVAssetReaderAudioMixOutput
AVAssetReaderVideoCompositionOutputInternal
AVAssetReaderVideoCompositionOutput
AVAssetReaderSampleReferenceOutputInternal
AVAssetReaderSampleReferenceOutput
AVAssetWriterConfigurationState
AVAssetWriterInternal
AVAssetWriter
AVAssetWriterUnknownHelper
AVAssetWriterFigAssetWriterNotificationHandler
AVFragmentedMediaDataReportInternal
AVFragmentedMediaDataReport
AVAssetWriterWritingHelper
AVAssetWriterFigAssetWriterNotificationHandlerDelegate
AVWorkaroundNSBlockOperation
AVAssetWriterFinishWritingHelper
AVFigAssetWriterFinishWritingAsyncOperation
AVAssetWriterTerminalHelper
AVAssetWriterFailedTerminalHelper
AVAssetWriterClientInitiatedTerminalHelper
AVAssetWriterHelper
AVAssetWriterInputGroupInternal
AVAssetWriterInputGroup
AVAssetWriterInputSelectionOption
AVCoordinatedPlaybackSuspension
AVCoordinatedPlaybackParticipant
AVPlaybackCoordinator
AVPlayerPlaybackCoordinator
AVOutputDeviceAuthorizationSessionInternal
AVOutputDeviceAuthorizationSession
AVOutputDeviceAuthorizationRequestInternal
AVOutputDeviceAuthorizationRequest
AVAssetWriterInputConfigurationState
AVAssetWriterInputInternal
AVAssetWriterInput
AVAssetWriterInputUnknownHelper
AVAssetWriterInputWritingHelper
AVAssetWriterInputMediaDataRequesterDelegate
AVAssetWriterInputInterPassAnalysisHelper
AVAssetWriterInputNoMorePassesHelper
AVAssetWriterInputTerminalHelper
AVAssetWriterInputHelper
AVAssetWriterInputPixelBufferAdaptorInternal
AVAssetWriterInputPixelBufferAdaptor
AVFigAssetWriterTrack
AVFigAssetWriterAudioTrack
AVFigAssetWriterVideoTrack
AVFigAssetWriterGenericTrack
AVAssetWriterInputMediaDataRequester
AVAssetWriterInputPassDescriptionResponder
AVAssetWriterInputFigAssetWriterEndPassOperation
AVAssetWriterInputPassDescriptionInternal
AVAssetWriterInputPassDescription
AVVideoCompositionInstructionInternal
AVVideoCompositionInstruction
AVMutableVideoCompositionInstruction
AVVideoCompositionLayerInstructionInternal
AVVideoCompositionLayerInstruction
AVMutableVideoCompositionLayerInstruction
AVVideoCompositionInternal
AVVideoCompositing
AVVideoComposition
AVVideoCompositionColorimetery
AVVideoCompositionColorimeteryUtilities
AVVideoCompositionFiltering
AVMutableVideoComposition
AVVideoCompositionCoreAnimationTool
AVVideoCompositionCoreAnimationToolInternal
AVAssetVideoCompositionUtility
AVAssetExportSessionInternal
AVAssetExportSession
AVStreamDataParserInternal
AVStreamDataParser
AVStreamDataParserTypeSupport
AVStreamDataParser_FigManifold
AVStreamDataParser_ContentKeySessionDelegate
AVContentKeySessionDelegate
AVStreamDataParser_ContentKeyRequestSupport
AVStreamDataParser_Internal
AVStreamDataParserContentKeyEligibility
AVMediaDataRequester
AVAPSyncOutputDeviceCommunicationChannelManager
AVOutputDeviceCommunicationChannelManager
AVAPSyncOutputDeviceCommunicationChannelImpl
AVSynchronizedLayerInternal
AVSynchronizedLayer
AVOutputDeviceInternal
AVOutputDevice
AVOutputDeviceFrecencyManager
AVOutputDeviceFrecentsReader
AVOutputDeviceFrecentsReading
AVOutputDeviceFrecentsWriter
AVOutputDeviceFrecentsWriting
AVOutputDeviceLegacyFrecentsReader
AVOutputDeviceLegacyFrecentsWriter
AVOutputDeviceAuthorizedPeerInternal
AVOutputDeviceAuthorizedPeer
AVPairedDeviceInternal
AVPairedDevice
AVLocalOutputDeviceImpl
AVOutputDeviceCommunicationChannel
AVClusterComponentOutputDeviceDescription
AVOutputDeviceDescription
AVSampleBufferVideoRenderer
AVFigVideoQueueFactory
VideoPerformanceMetrics
AVSampleBufferVideoRendererProtectedContent
AVSampleBufferVideoRendererImageProtection
AVSampleBufferVideoRendererVideoDisplaySleepPrevention
PowerOptimization
AVSampleBufferVideoRendererOutputs
AVMetadataEnumerator
AVFigEndpointOutputDeviceImpl
AVOutputDeviceFigEndpointImplFetching
AVFigEndpointSecondDisplayModeToken
AVAssetCustomURLRequest
AVAssetCustomURLBridgeForNSURLSession
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
AVNSURLProtocolRequest
AVAssetCustomURLBridgeForNSURLProtocol
AVAssetCustomURLAuthentication
AVAssetTrackSegment
AVAudioMix
AVMutableAudioMix
AVAudioMixInternal
AVAudioMixInputParameters
AVAudioMixInputParametersInternal
AVMutableAudioMixInputParameters
AVAudioMixCrossFadeUtility
AVOutputContextInternal
AVOutputContextCommunicationChannelInternal
AVOutputContextCommunicationChannel
AVOutputContextDestinationChangeInternal
AVOutputContextDestinationChange
AVOutputContextManagerInternal
AVOutputContextManager
AVAssetPlaybackAssistant
AVRunLoopConditionRunLoopState
AVRunLoopCondition
AVAssetInspector
AVFormatReaderInspector
AVPlaybackItemInspector
AVStreamingResourceInspector
AVFigAssetInspector
AVScheduledAudioParametersInternal
AVScheduledAudioParameters
AVScheduledAudioParameters_Internal
AVMutableScheduledAudioParameters
AVOperation
ArrayOfOperations
AVBlockOperation
AVGlobalOperationQueue
AVOperationQueueWithFundamentalDependency
AVDepartureAnnouncingObjectMonitor
AVWaitForNotificationOrDeallocationOperation
AVObjectMonitoring
AVWeakReferencingDelegateStorage
AVDelegateStorage
AVAssetInspectorLoader
AVAssetSynchronousInspectorLoader
AVAssetMakeReadyForInspectionLoader
AVPlaybackItemInspectorLoader
AVFigAssetInspectorLoader
AVUnreachableAssetInspectorLoader
AVRoutingSessionManager
AVRoutingSession
AVRoutingSessionDestination
AVAssetTrackInspector
AVTrackReaderInspector
AVFigAssetTrackInspector
AVCompositionTrackReaderInspector
AVPlaybackItemTrackInspector
AVWeakReference
AVRetainReleaseWeakReference
AVSampleBufferGeneratorInternal
AVSampleBufferGenerator
AVSampleBufferRequestInternal
AVSampleBufferRequest
AVSampleBufferGeneratorBatch
AVAssetSegmentReportSampleInformation
AVAssetSegmentTrackReport
AVAssetSegmentReport
AVCallbackContextRegistry
AVStreamDataAssetTrackInspector
AVStreamDataAssetInspector
AVStreamDataInspectionOnlyAsset
AVStreamDataAsset
AVStreamDataAsset_StreamDataParsing
AVPlayerItemMediaDataCollectorInternal
AVPlayerItemMediaDataCollector
AVCMNotificationDispatcher
AVCMNotificationDispatcherListenerKey
AVSynchronousBlockScheduler
AVBlockScheduler
AVSerializedMostlySynchronousReentrantBlockScheduler
AVEventWaiter
AVDispatchOnce
AVAssetTrackGroupInternal
AVAssetTrackGroup
AVMetadataGroup
AVMetadataGroupSerializationSupport
AVMetadataGroupIdentification
AVTimedMetadataGroupInternal
AVTimedMetadataGroup
AVTimedMetadataGroupSerializationSupport
AVMutableTimedMetadataGroup
AVDateRangeMetadataGroupInternal
AVDateRangeMetadataGroup
AVDateRangeMetadataGroup_Private
AVDateRangeMetadataGroup_Internal
AVDateRangeMetadataGroup_Local
AVMutableDateRangeMetadataGroup
AVManagedAssetCacheInternal
AVManagedAssetCache
AVAssetDownloadCacheInternal
AVAssetDownloadCache
AVExecutionEnvironment
NSValueCMVideoDimensionsExtensions
AVDelegatingPlaybackCoordinatorPlaybackControlCommand
AVDelegatingPlaybackCoordinatorPlayCommand
AVDelegatingPlaybackCoordinatorBufferingCommand
AVDelegatingPlaybackCoordinatorPauseCommand
AVDelegatingPlaybackCoordinatorSeekCommand
AVDelegatingPlaybackCoordinator
AVPlayerItemAccessLogInternal
AVPlayerItemAccessLog
AVPlayerItemAccessLogEventInternal
AVPlayerItemAccessLogEvent
AVPlayerItemAccessLogEventServiceIdentifier_Private
AVFragmentedMovie
AVFragmentMinding
AVFragmentedMovieMinder
AVFragmentedMovieTrackInternal
AVFragmentedMovieTrack
AVPlayerItemErrorLogInternal
AVPlayerItemErrorLog
AVPlayerItemErrorLogEventInternal
AVPlayerItemErrorLogEvent
AVExternalPlaybackMonitor
AVAudioSessionMediaPlayerOnlyInternal
AVMediaSelectionGroupInternal
AVMediaSelectionGroup
AVAssetMediaSelectionGroup
AVMediaSelectionOptionInternal
AVMediaSelectionOption
AVMediaSelectionTrackOption
AVMediaSelectionKeyValueOption
AVMediaSelectionNilOption
AVFigObjectInspector
AVOutputSettings
AVFormatSpecification
AVMediaFileType
AVMediaFileOutputSettingsValidator
AVOutputSettingsValidation
AVWAVEOutputSettingsValidator
AVAIFFOutputSettingsValidator
AVAIFCOutputSettingsValidator
AVISOOutputSettingsValidator
AVGenericMediaFileOutputSettingsValidator
AVAudioOutputSettings
AVAVAudioSettingsAudioOutputSettings
AVReencodedAudioSettingsForFig
AVDecodedAudioSettingsForFig
AVVideoOutputSettings
AVPixelBufferAttributesVideoOutputSettings
AVAVVideoSettingsVideoOutputSettings
AVReencodedVideoSettingsForFig
AVAudioSettingsValueConstrainer
AVFloat64Range
AVAggregateAssetDownloadTask
AVAssetDownloadSessionInternal
AVAssetDownloadSession
AVAssetDownloadSession_DelegateSupport
AVAssetDownloadSession_StreamingAssetOrchestratorSupport
AVAssetDownloadSession_Local
AVSampleCursorInternal
AVSampleCursor
AVPlayerItemOutputInternal
AVPlayerItemOutput
AVPlayerItemVideoOutputInternal
AVPlayerItemVideoOutput
AVFragmentedAssetInternal
AVFragmentedAsset
AVFragmentedAssetMinderInternal
AVFragmentedAssetMinder
AVFragmentedAssetTrackInternal
AVFragmentedAssetTrack
AVPixelBufferAttributeMediator
AVSampleBufferDisplayLayerContentLayer
AVSampleBufferDisplayLayer
AVSampleBufferDisplayLayerContentKeyEligibility
AVSampleBufferDisplayLayerContentKeyEligibilityInternal
AVSampleBufferDisplayLayerQueueManagement
ProtectedContent
AVSampleBufferDisplayLayerImageProtection
AVSampleBufferDisplayLayerVideoDisplaySleepPrevention
AVSampleBufferDisplayLayerPowerOptimization
AVSampleBufferDisplayLayerOutput
AVAssetResourceLoaderRemoteHandlerContext
AVURLAuthenticationChallenge
AVAssetResourceLoaderRequest
AVAssetResourceLoaderInternal
AVAssetResourceLoader
AVAssetResourceLoaderContentKeySupport
AVAssetResourceLoaderURLAuthenticationChallengeSender
NSURLAuthenticationChallengeSender
AVAssetResourceLoaderContentInformationCache
AVAssetResourceLoaderURLSessionSupport
AVAssetResourceLoaderRemoteHandlerSupport
AVAssetResourceLoadingContentInformationRequestInternal
AVAssetResourceLoadingContentInformationRequest
AVAssetResourceLoadingDataRequestInternal
AVAssetResourceLoadingDataRequest
AVAssetResourceLoadingRequestInternal
AVAssetResourceLoadingRequest
AVAssetResourceLoadingRequestorInternal
AVAssetResourceRenewalRequest
AVAssetResourceLoadingRequestor
AVSampleBufferRenderSynchronizerInternal
AVSampleBufferRenderSynchronizer
AVSampleBufferRenderSynchronizerRendererManagement
AVSampleBufferRenderSynchronizerRendererRestrictions
AVSampleBufferRenderSynchronizerTimeObservation
AVLocalFigSampleBufferRenderSynchronizerFactory
AVFigSampleBufferRenderSynchronizerFactory
AVAssetVariant
AVAssetVariantVideoAttributes
AVAssetVariantAudioAttributes
AVAssetVariantAudioRenditionSpecificAttributes
AVAssetVariantQualifier
EnvironmentalConditions
AVAssetVariantChannelCountPredicate
AVAssetVariantPresentationWidthPredicate
AVAssetVariantPresentationHeightPredicate
AVTextStyleRuleInternal
AVTextStyleRule
AVPlayerMediaSelectionCriteria
FigDictionaryRepresentation
AVAsynchronousCIImageFilteringRequestInternal
AVAsynchronousCIImageFilteringRequest
AVCoreImageFilterVideoCompositionInstruction
AVCoreImageFilterCustomVideoCompositor
AVPlayerItemLegibleOutputRealDependencyFactory
AVPlayerItemLegibleOutputDependencyFactory
AVPlayerItemLegibleOutputInternal
AVPlayerItemLegibleOutput
AVOutputSettingsAssistantInternal
AVOutputSettingsAssistant
Dependencies
AVExportSettingsOutputSettingsAssistantBaseSettings
AVOutputSettingsAssistantBaseSettingsProvider
AVExportSettingsOutputSettingsAssistantVideoSettingsAdjuster
AVOutputSettingsAssistantVideoSettingsAdjuster
AVIOKitOutputSettingsAssistantVideoEncoderCapabilities
AVOutputSettingsAssistantVideoEncoderCapabilities
AVMediaSelectionInternal
AVMediaSelection_Local
AVMediaSelection
AVMutableMediaSelection
AVExternalDeviceHIDInternal
AVExternalDeviceHID
AVExternalDeviceIconInternal
AVExternalDeviceIcon
AVExternalDeviceInternal
AVExternalDeviceScreenBorrowToken
AVExternalDeviceTurnByTurnToken
AVExternalDevice
AVFigEndpointOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices_FigEndpointImpl
AVPlayerCaptionLayer
AVVideoCompositingParameterValidationDelegate
AVCustomVideoCompositorSession
AVCustomVideoCompositorSession_FigCallbackHandling
AVDisplayCriteriaInternal
AVDisplayCriteria
_AVDisplayCriteriaPrivateMethods
AVKVODispatcher
AVObservationBlockFactory
AVWeakObservationBlockFactory
AVClientBlockKVONotifier
AVKVONotifier
AVCallbackCancellation
AVKVOIntrospection
AVWeaklyObservedObjectClientBlockKVONotifier
AVWeakObservableCallbackCancellationHelper
LegacyCallbackMethod
AVKeyPathDependencyManager
AVKeyPathDependencyRegistration
AVKeyPathDependency
AVTwoPartKeyPath
AVKeyPath
AVKeyPathFlattener
AVKeyPathFlattenerKVOIntrospectionShim
AVAsynchronousVideoCompositionRequestInternal
AVAsynchronousVideoCompositionRequest
AVRouteDetectorInternal
AVRouteDetector
AVVideoCompositionRenderContextInternal
AVVideoCompositionRenderContext
AVMediaDataStorageInternal
AVMediaDataStorage
AVMovieInternal
AVMovie
AVMovieMovieHeaderSupport
AVMutableMovieInternal
AVMutableMovie
AVMutableMovieMovieLevelEditing
AVMutableMovieTrackLevelEditing
AVMutableMovieMetadataEditing
AVPlayerItemSampleBufferOutputConfiguration
AVPlayerItemSampleBufferOutput
AVPlayerItemSampleBufferOutput_Internal
AVContentKeyRequestInternal
AVContentKeyRequest
AVContentKeyRequest_ExternalProtectionStateSupport
AVContentKeyReportInternal
AVPersistableContentKeyRequest
AVContentKeyResponseFairPlayStreaming
AVContentKeyResponseClearKey
AVContentKeyResponseAuthorizationToken
AVContentKeyResponseInternal
AVContentKeyPSSHRequestTracker
AVContentKeyRequestParams
AVContentKeyResponse
AVContentKeySessionInternal
AVContentKeySession
AVContentKeySessionPendingExpiredSessionReports
AVContentKeySessionPrivateUtilities
AVContentKeyRequestSupport
AVContentKeySession_Internal
AVContentKeyGroup_Support
FigContentKeyBoss
AVContentKeyReportGroup
AVContentKeyReportGroup_Internal
AVContentKeyReportGroupPrivateUtilities
AVContentKeySpecifier
Private
AVContentKey
APSyncController
AVAPSyncControllerRemoteOutputDeviceGroupImpl
encodeInteger:forKey:
setToValue:
blockOperationWithBlock:
mutableCopy
indexAtPosition:
addSharedAudioOutputContextImpl
encodeInt64:forKey:
preferredFrameSize
setTimingFunction:
setIsExpanseMediaSession:error:
mutableBytes
willChangeValueForKey:
encodeInt32:forKey:
retrieveSessionWithID:
preferredFilenameExtension
encodeDouble:forKey:
whitespaceCharacterSet
resume
imageWithColor:
whitespaceAndNewlineCharacterSet
imageWithCVPixelBuffer:
encodeBool:forKey:
begin
setTarget:
imageByApplyingTransform:
isMainThread
weakObjectsHashTable
setInheritsTiming:
waitUntilFinished
addObserverForName:object:queue:usingBlock:
postNotificationName:object:userInfo:
setSubtitleGravityNonObscuring:
drain
superlayer
postNotificationName:object:
setSublayerTransform:
minusSet:
base64EncodedStringWithOptions:
addObjectsFromArray:
postNotification:
sublayers
port
addObject:
setString:
setHidden:
domain
sublayerTransform
cookieWithProperties:
pointValue
initWithObjectsAndKeys:
convertRect:toLayer:
strongToWeakObjectsMapTable
setGeometryFlipped:
isHidden
initWithObjects:
stringWithValidatedFormat:validFormatSpecifiers:error:
visitPredicate:
requiresSecureCoding
setFromValue:
stringWithUTF8String:
displayNameForKey:value:
stringWithString:
host
contextId
stringWithFormat:
stringWithCString:encoding:
setFrame:
addIndexes:
context
methodReturnLength
isFileURL
addIndex:
contentsScale
contentsAreFlipped
setForegroundColor:
stringFromNumber:
stringByTrimmingCharactersInSet:
addEntriesFromDictionary:
disableActions
setFontSize:
addDependency:
stringByReplacingOccurrencesOfString:withString:
isEqualToString:
setFont:
stringByDeletingPathExtension
isEqualToSet:
playbackCoordinator:didIssueSeekCommand:completionHandler:
hasPrefix:
stringByAppendingString:
isEqualToDictionary:
playbackCoordinator:didIssuePlayCommand:completionHandler:
stringByAppendingPathExtension:
isEqualToData:
playbackCoordinator:didIssuePauseCommand:completionHandler:
stringByAppendingPathComponent:
addAnimations:forKey:
isEqualToArray:
playbackCoordinator:didIssueBufferingCommand:completionHandler:
stringByAppendingFormat:
setFigCPEProtectorSessionIdentifier:
stringByAbbreviatingWithTildeInPath
activationState
string
activateBackground:
initWithLocaleIdentifier:
activate
streamDataParsers
didChangeValueForKey:
setShouldResizeVideoLayer:
dictionaryWithValuesForKeys:
isDownmixMediaOption:
acquireWithError:
dictionaryWithObjectsAndKeys:
platformDependentScreenOrVideoContext
dictionaryWithObjects:forKeys:count:
handleFailureInMethod:object:file:lineNumber:description:
_privacyStance
absoluteURL
replaceObjectAtIndex:withObject:
dictionaryWithObject:forKey:
setEventHandler:
handleFailureInFunction:file:lineNumber:description:
dictionaryWithDictionary:
absoluteString
initWithKeyOptions:valueOptions:capacity:
dictionaryWithCapacity:
_windowWithContextId:
pixelBuffer
setSeparated:
setSelector:
setEdgeAntialiasingMask:
devicesPresent
performOperationUsingObject:andObject:
setDispatchQueue:
getVolume:forCategory:
stopAccessingSecurityScopedResource
initWithInsertIndexes:insertedObjects:removeIndexes:removedObjects:
getUUIDBytes:
setDisableActions:
render:toCVPixelBuffer:
isBinauralMediaOption:
_web_errorWithDomain:code:URL:
getReturnValue:
statusCode
containsObject:
pathExtension
containsIndex:
isAtEnd
path
getCString:maxLength:encoding:
values
valueWithRect:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
valueWithPointer:
getBytes:length:
conformsToType:
attributeWithDomain:name:
valueWithPoint:
valueWithNonretainedObject:
initWithFormat:arguments:
removeObserver:forKeyPath:
isAdditive
removeObserver:
initWithFormat:
removeObjectsInArray:
removeObjectsAtIndexes:
dependencies
UUIDString
valueWithCATransform3D:
invoke
removeObjectForKey:
valueWithBytes:objCType:
fromValue
invocationWithMethodSignature:
removeObjectAtIndex:
removeObject:
defaultSharedOutputContextImpl
UTF8String
valueForKey:
URLWithString:relativeToURL:
value:withObjCType:
URLWithString:
removeItemAtURL:error:
frame
URLByAppendingPathComponent:
validateWithError:
intersectsSet:
intersectSet:
startAccessingSecurityScopedResource
defaultManager
removeAnimationsForKey:
componentsSeparatedByString:
setCompletionBlock:
componentsJoinedByString:
removeAllObjects
componentsFromLocaleIdentifier:
setPreventsChangesToSublayerHierarchy:
defaultCenter
instanceMethodSignatureForSelector:
setPresenceOnly:
MIMEType
compare:options:
JSONObjectWithData:options:error:
compare:
setCaptionsAvoidanceMargins:
userInfo
initWithExplanation:target:attributes:
updateNonForcedSubtitleDisplayEnabled:
decodeXPCObjectForKey:
setByValue:
insertObject:atIndex:
rectValue
setByAddingObjectsFromSet:
decodeObjectOfClasses:forKey:
setBundleID:
makeObjectsPerformSelector:withObject:
decodeObjectOfClass:forKey:
outputDeviceDiscoverySessionOfClass:withDeviceFeatures:
makeObjectsPerformSelector:
firstObject
decodeIntegerForKey:
decodeInt64ForKey:
decodeInt32ForKey:
commit
outputDeviceDiscoverySessionDidChangeDiscoveryMode:forClientIdentifiers:
setBonjourServiceTypes:
decodeDoubleForKey:
setBluetoothServices:
colorWithRed:green:blue:
setBluetoothCompanyIdentifiers:
mainThread
mainQueue
setPosition:
mainDisplay
decodeBoolForKey:
mainBundle
sortedArrayUsingFunction:context:
initWithData:encoding:
sortedArrayUsingComparator:
lowercaseString
sortUsingComparator:
code
dateWithTimeIntervalSinceNow:
outputContextImplForID:type:
unlock
arrayWithObjects:count:
dateFormatFromTemplate:options:locale:
rangeOfString:options:
sizeValue
outputContextImplForControllingOutputDeviceGroupWithID:options:
arrayWithObjects:
rangeOfString:
dateByAddingTimeInterval:
setParentOutputDeviceDiscoverySession:
unionSet:
arrayWithObject:
raise:format:
arrayWithCapacity:
dataWithPropertyList:format:options:error:
setParentOutputContextManager:
initWithUser:password:persistence:
arrayWithArray:
dataWithLength:
setParentOutputContext:
setArgument:atIndex:
arrayByApplyingDifference:
dataWithJSONObject:options:error:
setParentCommunicationChannel:
clear
lock
fileExistsAtPath:
arrayByAddingObjectsFromArray:
dataWithContentsOfFile:options:error:
outputContextDidChangeApplicationProcessID:
localizedStringForLanguage:context:
unarchivedObjectOfClass:fromData:error:
arrayByAddingObject:
dataWithBytesNoCopy:length:freeWhenDone:
initWithUUIDString:
setParentAuthorizationSession:
localizedStringForKey:value:table:
typesWithTag:tagClass:conformingToType:
array
dataWithBytes:length:
typeWithMIMEType:
archivedDataWithRootObject:requiringSecureCoding:error:
localizedStandardCompare:
localizedName
dataUsingEncoding:allowLossyConversion:
typeWithIdentifier:
localizedDescription
typeWithFilenameExtension:
dataUsingEncoding:
propertyListWithData:options:format:error:
initWithURL:readonly:
characterSetWithCharactersInString:
setAnchorPoint:
localeWithLocaleIdentifier:
characterAtIndex:
localeIdentifier
propertyList:isValidForFormat:
dataTaskWithURL:completionHandler:
localParticipantUUIDForPlaybackCoordinator:
dataTaskWithRequest:
initWithConfiguration:error:
appendString:
properties
channelCountForMediaOption:
setAllHTTPHeaderFields:
transactionMetrics
setAlignmentMode:
operatorWithType:modifier:options:
caseInsensitiveCompare:
initWithCapacity:
processName
operations
appendFormat:
processInfo
sharedSession
appendData:
canonicalLocaleIdentifierFromString:
processIdentifier
canonicalLanguageIdentifierFromString:
figAlternate
opaqueSessionID
animations
sharedInstance
initWithBase64EncodedData:options:
setOpacity:
opacity
animationWithKeyPath:
fastestEncoding
setObject:forKeyedSubscript:
setObject:forKey:
animationKeys
currentThread
setNumberStyle:
animationForKey:
sharedAVSystemController
sessionWithConfiguration:delegate:delegateQueue:
animation
setWrapped:
currentState
objectsForKeys:notFoundMarker:
setWithSet:
objectsAtIndexes:
setWithObjects:count:
setNeedsLayout
objectForKeyedSubscript:
currentProcess
setWithObjects:
extent
objectForKey:
sender
setWithObject:
objectEnumerator
lastPathComponent
setWithCapacity:
objectAtIndexedSubscript:
setName:
lastObject
setWithArray:
object
allowsKeyedCoding
currentLocale
initWithTimeIntervalSinceReferenceDate:
toValue
timingFunction
numberWithUnsignedLongLong:
numberWithUnsignedLong:
numberWithUnsignedInteger:
expectedContentLength
setMinimumIntegerDigits:
numberWithUnsignedInt:
currentHandler
setViewport:
numberWithShort:
setMinificationFilter:
keyPath
numberWithLongLong:
exceptionWithName:reason:userInfo:
setVideosize:
numberWithLong:
timeIntervalSinceReferenceDate
setVideoRelativeToViewport:
numberWithInteger:
eventType
timeIntervalSinceNow
keyEnumerator
numberWithInt:
timeIntervalSinceDate:
numberWithFloat:
numberWithDouble:
allValues
errorWithDomain:code:userInfo:
setVersion:
numberWithBool:
allSharedAudioOutputContextImpls
canBeConvertedToEncoding:
allObjects
scheme
allKeysForObject:
setValues:
initWithArray:
scannerWithString:
enumerateObjectsUsingBlock:
setValue:forKeyPath:
scanUnsignedLongLong:
allHeaderFields
enumerateKeysAndObjectsUsingBlock:
setValue:forKey:
allHTTPHeaderFields
scanString:intoString:
enumerateIndexesUsingBlock:
setValue:forHTTPHeaderField:
numberFromString:
scanCharactersFromSet:intoString:
taskState
null
setMaxConcurrentOperationCount:
notificationWithName:object:userInfo:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
notificationWithName:object:
sampleRateForMediaOption:
setMasksToBounds:
endowmentNamespaces
setUnderlyingQueue:
isValidJSONObject:
setTruncationMode:
bytes
indexesOfObjectsPassingTest:
indexSetWithIndex:
byValue
bundleWithIdentifier:
countByEnumeratingWithState:objects:count:
indexSet
writeToURL:options:error:
networkProtocolName
bundleIdentifier
indexPathWithIndex:
initWithPredicate:
writeToFile:options:error:
routeSharingPolicy
indexPathByAddingIndex:
indexOfObjectPassingTest:
setKeyPath:
encodeXPCObject:forKey:
windowScene
bounds
indexOfObjectIdenticalTo:
encodeObject:forKey:
indexOfObject:
sharedAudioPresentationOutputGroup
init
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
addOutputDevice:withOptions:completionHandler:
removeOutputDevice:withOptions:completionhandler:
setVolume:
volumeControlType
parentOutputDeviceGroup
setParentOutputDeviceGroup:
receivesLongFormAudioFromLocalDevice
outputDevices
groupLeader
volume
T@"AVOutputDeviceGroup",W
TB,R
T@"NSArray",R
T@"AVOutputDevice",R
Tf,R
initWithOutputContext:
_contextOutputDevicesDidChange:
_contextVolumeDidChange
_contextCanSetVolumeDidChange
.cxx_destruct
_outputContext
_parentOutputDeviceGroup
T@"AVOutputDeviceGroup",W,V_parentOutputDeviceGroup
loopingPlayer
loopingItem
loopingItemCopies
loopRange
loopCount
ivarAccessQueue
playerOriginalActionAtItemEnd
forwardPlaybackStartTime
lastEnqueuedLoopingItem
waitingForLastLoopingCopyToFinish
status
error
playerCurrentItemKVOInvoker
loopingItemStatusKVOInvokers
weakReference
listeningForItemFailedToPlayToEndTime
initialize
playerLooperWithPlayer:templateItem:timeRange:
playerLooperWithPlayer:templateItem:
initWithPlayer:templateItem:timeRange:
_changeStatusToFailedWithError:
disableLooping
loopingPlayerItems
_configureLoopingItem:
_calculateNumberOfCopiesNeeded
_setupLoopingReturningError:
_turnOffLooping
_isWaitingForLastCopyToFinishSet
_cleanupAfterPlayingLastLoopingCopy
observeValueForKeyPath:ofObject:change:context:
_looper
Tq,R
T@"NSError",R
T@"NSArray",R,N
markAsCompleted
markAsFailedWithError:
getStatus:error:
isFailed
_ivarAccessLock
_status
_error
failed
TB,R,GisFailed
trackOutput
assetReaderOutputMetadataAdaptorWithAssetReaderTrackOutput:
addExtractionForOutput:figAssetReader:options:withOutputExtactionID:
initWithAssetReaderTrackOutput:
assetReaderTrackOutput
nextTimedMetadataGroup
_internal
T@"AVAssetReaderTrackOutput",R,N
_metricsDictionary
initWithDictionary:
totalNumberOfVideoFrames
numberOfDroppedVideoFrames
numberOfCorruptedVideoFrames
numberOfDisplayCompositedVideoFrames
numberOfNonDisplayCompositedVideoFrames
totalFrameDelay
_performanceMetricsInternal
TQ,R,N
Td,R,N
impl
discoveryMode
_recentlyUsedDevices
_otherDevices
outputDeviceDiscoverySessionFactory
initWithDeviceFeatures:
initWithOutputDeviceDiscoverySessionImpl:
targetAudioSession
setTargetAudioSession:
setDiscoveryMode:
setDiscoveryMode:forClientIdentifiers:
availableOutputDevices
availableOutputDeviceGroups
availableOutputDevicesObject
devicePresenceDetected
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDevices:
outputDeviceDiscoverySessionImpl:didExpireWithReplacement:
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDeviceGroups:
_outputDeviceDiscoverySession
Tq,N
T@"AVAudioSession",&,N
T@"AVOutputDeviceDiscoverySessionAvailableOutputDevices",R,N
TB,R,N
allDevices
initWithOutputDeviceDiscoverySessionAvailableOutputDevicesImpl:
_loadOutputDevices
recentlyUsedDevices
otherDevices
_availableOutputDevices
localDeviceWithCompletion:
registerLocalDeviceDidChangeListener:
setSecondDisplayEnabled:
setSecondDisplayMode:completionHandler:
increaseVolumeByCount:
decreaseVolumeByCount:
setAllowsHeadTrackedSpatialAudio:error:
setHeadTrackedSpatialAudioMode:error:
setCurrentBluetoothListeningMode:error:
configureUsingBlock:options:completionHandler:
supportsFitnessDataDestination
implEventListener
setImplEventListener:
name
deviceType
deviceSubType
clusterType
configuredClusterSize
manufacturer
modelID
serialNumber
firmwareVersion
identifyingMACAddress
clusteredDeviceDescriptions
isClusterLeader
clusterID
producesLowFidelityAudio
isAppleAccessory
isEligibleToBePredictedOutputDevice
batteryLevel
caseBatteryLevel
leftBatteryLevel
rightBatteryLevel
supportsDataOverACLProtocol
isInEar
airPlayProperties
isInUseByPairedDevice
connectedPairedDevices
deviceFeatures
requiresAuthorization
automaticallyAllowsConnectionsFromPeersInHomeGroup
onlyAllowsConnectionsFromPeersInHomeGroup
canAccessRemoteAssets
canAccessAppleMusic
canAccessiCloudMusicLibrary
supportsBufferedAirPlay
canSetVolume
canBeGrouped
groupID
proposedGroupID
canBeGroupLeader
isGroupLeader
participatesInGroupPlayback
groupContainsGroupLeader
logicalDeviceID
isLogicalDeviceLeader
canCommunicateWithAllLogicalDeviceMembers
canRelayCommunicationChannel
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
supportsBluetoothSharing
HAPConformance
supportsHeadTrackedSpatialAudio
allowsHeadTrackedSpatialAudio
headTrackedSpatialAudioMode
isHeadTrackedSpatialAudioActive
availableBluetoothListeningModes
currentBluetoothListeningMode
T@"<AVOutputDeviceImplSupport>",W
T@"NSString",R,C,N
Tq,R,N
T@"NSString",R,N
T@"NSData",R,C,N
appleAccessory
TB,R,N,GisAppleAccessory
eligibleToBePredictedOutputDevice
TB,R,N,GisEligibleToBePredictedOutputDevice
T@"NSNumber",R,N
T@"NSDictionary",R,N
inUseByPairedDevice
TB,R,N,GisInUseByPairedDevice
T@"NSArray",R,C,N
headTrackedSpatialAudioActive
TB,R,N,GisHeadTrackedSpatialAudioActive
initWithSyncController:secondaryImpl:
_volumeDidChangeForEndpointWithID:
_volumeControlSupportedDidChangeForEndpointWithID:
_volumeControlTypeDidChangeForEndpointWithID:
_proposedGroupIDDidChangeForEndpointWithID:
secondaryImpl
_syncController
_secondaryImpl
_implEventListener
T@"<AVOutputDeviceImpl>",R,V_secondaryImpl
T@"<AVOutputDeviceImplSupport>",W,V_implEventListener
hudLayer
serialQueue
isPresentationLayer
isReadyForDisplayMutex
configurationQueue
dependencyManager
playerItemHasEnqueuedVideoFrameListener
windowSceneDidEnterBackgroundListener
windowSceneWillEnterForegroundListener
player
videoGravity
pixelBufferAttributes
lanczosDownscalingEnabled
lanczosDownscalingFactor
maskLayer
videoLayer
subtitleLayer
closedCaptionLayer
interstitialLayer
isLegibleDisplayEnabled
isForScrubbingOnly
associatedRemoteModeLayer
willManageSublayersAsSwappedLayers
activeMode
isPartOfForegroundScene
showInterstitialInstead
isReadyForDisplay
playerBeingObserved
latestAppliedPresentationSize
preventsChangesToSublayerHierarchy
clientLayers
isPIPModeEnabled
placeholderContentLayerDuringPIPMode
isConnectedToSecondScreen
legibleContentInsets
honorContentScale
screenScale
lastWindowSceneEvent
isVisible
playerCurrentItemSink
currentItemPresentationSizeSink
currentItemTracksSink
currentItemNonForcedSubtitlesEnabledSink
playerIsDisplayingClosedCaptionsSink
initWithLayer:
layoutSublayers
setBounds:
setContentsScale:
addAnimation:forKey:
removeAnimationForKey:
removeAllAnimations
layerDidBecomeVisible:
setToneMapToStandardDynamicRange:
setSublayers:
addSublayer:
insertSublayer:atIndex:
insertSublayer:below:
insertSublayer:above:
replaceSublayer:with:
removeFromSuperlayer
playerLayerWithPlayer:
makeClosedCaptionLayer
keyPathsForValuesAffectingVideoRect
_swapSublayersBetweenPlayerLayer:andPlayerLayer:
declareKeyPathDependenciesWithRegistry:
addCallbackToCancelDuringDeallocation:
_addBoundsAnimationToLayer:usingAnimation:forKey:
_addPositionAnimationToLayer:usingAnimation:forKey:
_addSublayerTransformAnimationToLayer:fromTransform:usingAnimation:gravity:presentationSize:forKey:
_addAnimationsForPIPPlaceholderLayer:forKey:
_addAnimationsForMaskLayer:forKey:
_addAnimationsForClosedCaptionLayer:gravity:forKey:
_addAnimationsForVideoLayer:size:gravity:forKey:
_forBoundsAnimations:applyBlock:
_percentCoverageRelativeToRootLayer
_displaySize
_notifyPlayerOfDisplaySize
_playerCurrentItemPresentationSize
_applyCurrentItemPresentationSizeChangeAndForceUpdate:
_startObservingPlayer:
_stopObservingPlayer:
_handleNonForcedSubtitleDisplayDidChange:player:
_handlePlayerCurrentItemDidChangeForPlayer:
_handleIsDisplayingClosedCaptionsDidChange:player:
playerPublisher
setPlayer:
_setPlayer:forPIP:
hasEnqueuedVideoFrameChanged:
_updateReadyForDisplayForPlayerCurrentItem
setVideoGravity:
setPixelBufferAttributes:
_getMaskLayer:videoLayer:subtitleLayer:closedCaptionLayer:interstitialLayer:
_maskLayer
_videoLayer
_closedCaptionLayer
_subtitleLayer
_interstitialLayer
_showInterstitialInstead
_setShowInterstitialInstead:
isOverscanSubtitleSupportEnabled
setOverscanSubtitleSupportEnabled:
videoPerformanceMetrics
_setIsConnectedToSecondScreen:
_isConnectedToSecondScreen
isLanczosFilterDownscalingEnabled
setLanczosFilterDownscalingEnabled:
lanczosFilterDownscaleFactor
setLanczosFilterDownscaleFactor:
videoRect
_videoRectForBounds:
setLegibleContentInsets:
setLegibleDisplayEnabled:
setForScrubbingOnly:
copyDisplayedPixelBuffer
_configurePlayerWhenEnteringPIP
_configurePlayerWhenLeavingPIP
_stashClientLayers
_unstashClientLayers
_associateWithLayer:forMode:
_associatedRemoteModeLayer
_activeMode
_disassociateWithLayerForMode:
startRedirectingVideoToLayer:forMode:
stopRedirectingVideoToLayer:
_enterSecondScreenModeRedirectingVideoToLayer:
_leaveSecondScreenModeForLayer:
enterPIPModeRedirectingVideoToLayer:
_enterPIPModeRedirectingVideoToLayer:
leavePIPMode
_leavePIPModeForLayer:
setPIPModeEnabled:
_forceLayout
_sublayersForPIP
_mergeClientLayersIntoMaskLayer:
_restoreClientLayers:intoMaskLayer:
_setSublayersPreventChangesToSublayerHierarchy:
_setSublayersForPIP:
_willManageSublayersAsSwappedLayers
_setWillManageSublayersAsSwappedLayers:
_preventsChangesToSublayerHierarchy
_setPreventsChangesToSublayerHierarchy:
setPlaceholderContentLayerDuringPIPMode:
_currentWindowSceneIsForegroundDefault
_currentWindowSceneIsForeground
_windowSceneDidEnterBackground
_windowSceneDidEnterBackground:
_windowSceneWillEnterForeground
_windowSceneWillEnterForeground:
_forceWindowSceneEvent:
_updateIsPartOfForegroundScene
_notifyPlayerOfLayerForegroundStateChange
_setIsPartOfForegroundScene:
_isPartOfForegroundScene
_playerLayer
T@"AVPlayer",&,N
T@"NSString",C
readyForDisplay
TB,R,N,GisReadyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T@"NSDictionary",C,N
valueWithCMTime:
supportsSecureCoding
CMTimeValue
getValue:
objCType
floatValue
doubleValue
charValue
unsignedCharValue
shortValue
unsignedShortValue
intValue
unsignedIntValue
longValue
unsignedLongValue
longLongValue
unsignedLongLongValue
boolValue
integerValue
unsignedIntegerValue
isEqualToValue:
copyWithZone:
initWithCoder:
encodeWithCoder:
classForCoder
_time
valueWithCMTimeRange:
CMTimeRangeValue
_timeRange
valueWithCMTimeMapping:
CMTimeMappingValue
_timeMapping
encodeCMTime:forKey:
decodeCMTimeForKey:
encodeCMTimeRange:forKey:
decodeCMTimeRangeForKey:
encodeCMTimeMapping:forKey:
decodeCMTimeMappingForKey:
initWithTimebase:queue:
timebase
invalidate
_reallyInvalidate
_resetNextFireTime
_handleTimeDiscontinuity
_effectiveRateChanged
invalidated
_attachTimerSourceToTimebase
_finishInitializationWithTimerEventHandler:
_removeTimebaseFromTimerSource
_startObservingTimebaseNotifications
_stopObservingTimebaseNotifications
_weakReference
_timerQueue
_timerSource
_timebase
_isObservingTimebase
_lastRate
_currentRate
_invalid
T@"AVWeakReference",R,N,G_weakReference,V_weakReference
T^{OpaqueCMTimebase=},R
initWithTimebase:interval:queue:block:
_fireBlockForTime:
_intervalRequested
_lastIntervalUsed
_lastPeriodicFireTime
_lastNonperiodicFireTime
_lastStopTime
_sequenceNum
_block
initWithTimebase:times:queue:block:
_fireBlock
_previousFiringTimeBeforeTime:
_nextFiringTimeAfterTime:
_times
initWithTimebase:fireTime:queue:block:
didFire
_fireTime
_didFire
metadataItemsFromArray:filteredByIdentifiers:
delegateStorage
identifiers
classifyingLabels
mostRecentlyModifiedMetadataGroupTimestamp
weakReferenceToPlayerItem
initWithIdentifiers:classifyingLabels:
setDelegate:queue:
delegate
delegateQueue
_metadataCollectorInternal
T@"<AVPlayerItemMetadataCollectorPushDelegate>",R,W,N
T@"NSObject<OS_dispatch_queue>",R,N
metadataCollector:didCollectDateRangeMetadataGroups:indexesOfNewGroups:indexesOfModifiedGroups:
_attachToPlayerItem:
_detatchFromPlayerItem
_isAttachedToPlayerItem
_getFilteredMetadataGroups:fromIdentifiers:andClassifyingLabels:modifiedIndexesOut:newIndexesOut:
_updateTaggedRangeMetadataArray:
initWithCoordinatorGenerator:
_ivarAccessQueue
_obtainCoordinator
_weakReferenceToPlayerItem
interstitialEventWithPrimaryItem:identifier:time:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
interstitialEventWithPrimaryItem:identifier:date:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
interstitialEventWithPrimaryItem:templateItems:figEvent:
newItemArrayWithCopiedItems:
interstitialEventWithPrimaryItem:time:
interstitialEventWithPrimaryItem:date:
assetURLsReturningError:
initWithPrimaryItem:identifier:time:date:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
initWithPrimaryItem:time:date:
initWithPrimaryItemAndFigEvent:templateItems:figEvent:
setImmutable
checkMutability
primaryItem
setPrimaryItem:
identifier
setIdentifier:
time
setTime:
date
setDate:
templateItems
setTemplateItems:
restrictions
setRestrictions:
resumptionOffset
setResumptionOffset:
playoutLimit
setPlayoutLimit:
alignsStartWithPrimarySegmentBoundary
setAlignsStartWithPrimarySegmentBoundary:
alignsResumptionWithPrimarySegmentBoundary
setAlignsResumptionWithPrimarySegmentBoundary:
setCue:
willPlayOnce
setWillPlayOnce:
userDefinedAttributes
setUserDefinedAttributes:
figEvent
_internalTemplateItems
validate:
_primaryItem
_figEvent
_templateItems
T@"AVPlayerItem",R,W,N
T{?=qiIq},R,N
T@"NSDate",R,N
initWithPrimaryPlayer:
interstitialEventMonitorWithPrimaryPlayer:
primaryPlayer
interstitialPlayer
makeCopyOf:immutable:
events
currentEvent
_addMonitorListeners:
_removeMonitorListeners
_primaryPlayer
_interstitialPlayer
_observedCoord
T@"AVPlayer",R,W,N
T@"AVQueuePlayer",R,N
T@"NSArray",R,C
T@"AVPlayerInterstitialEvent",R
interstitialEventControllerWithPrimaryPlayer:
setEvents:
cancelCurrentEventWithResumptionOffset:
_ivarQueue
T@"NSArray",C,D
pixelBufferConformer
stateQueue
lastImageTime
outputSequenceWasFlushed:
setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:
setOutputDelegate:queue:
outputDelegate
_copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:
hasNewPixelBufferForSourceTime:
copyPixelBufferForSourceTime:sourceTimeForDisplay:
copyLastPixelBuffer:
_configureWithVideoQueue:
_resetLastImageTime
_visualContext
_dispatchOutputSequenceWasFlushed
_videoOutputInternal
T@"<AVSampleBufferVideoOutputPullDelegate>",R,W,N
sharedDownloadStorageManager
setStorageManagementPolicy:forURL:
storageManagementPolicyForURL:
mutableCopyWithZone:
_setPolicyDictionary:
_policyDictionary
setExpirationDate:
setPriority:
expirationDate
priority
_storageManagementPolicy
T@"NSDate",R,C,N
T@"NSString",C,N
T@"NSDate",C,N
policyDictionary
initWithOutputDeviceGroupImpl:
outputDeviceGroupImpl:didChangeOutputDevicesWithInitiator:
removeOutputDevice:withOptions:completionHandler:
outputDeviceGroupImplDidChangeVolume:
outputDeviceGroupImplDidChangeVolumeControlType:
_impl
initWithStatus:cancellationReason:
cancellationReason
_cancellationReason
T@"NSString",R
reader
itemIndex
keySpace
commonKey
locale
extendedLanguageTag
languageCode
value
duration
startDate
discoveryTimestamp
dataType
extras
_makeValueReady
_valueFromCFType:
_makePropertiesReady
_updateCommonKey
_updateIdentifier
_updateLanguageInformationFromLocale:
_updateLanguageInformationFromExtendedLanguageTag:
_extractPropertiesFromDictionary:
_keyAsString
stringValue
numberValue
dateValue
dataValue
imageValue
T@"NSData",R,N
identifierForKey:keySpace:
metadataItemsFromArray:withLocale:
metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:
metadataItemsFromArray:filteredByIdentifier:
metadataItemsFromArray:withKey:keySpace:
metadataItemsFromArray:withStringValue:
metadataItemsFromArray:filteredByMetadataItemFilter:
keyForIdentifier:
keySpaceForIdentifier:
_metadataItemWithFigMetadataDictionary:
_metadataItemWithFigMetadataDictionary:containerURL:securityOptions:
_clientExpectsISOUserDataKeysInQuickTimeUserDataKeySpace
_isoUserDataKeysRequiringKeySpaceConversion
_replaceQuickTimeUserDataKeySpaceWithISOUserDataKeySpaceIfRequired:
_figMetadataPropertyFromMetadataItems:
dataTypeForValue:
statusOfValueForKey:error:
loadValuesAsynchronouslyForKeys:completionHandler:
_initWithReader:itemIndex:
_initWithFigMetadataDictionary:
intrinsicAttributesOfExtraAttributes:
_areExtraAttributesOf:comparableToExtraAttributesOf:
_figMetadataDictionaryWithValue:diviningValueDataType:
_figMetadataDictionary
_figMetadataFormat
_figMetadataSpecificationReturningError:
_copyValueAsCFTypeWithFormatDescription:error:
_createJSONEncodedDataFromValue:error:
unicodeLanguageIdentifier
unicodeLanguageCode
_serializationDataType
extraAttributes
_conformingDataTypes
cancelLoading
_priv
T@"NSLocale",R,C,N
T@"<NSObject><NSCopying>",R,C,N
T@"NSDictionary",R,C,N
metadataItem
keyPathsForValuesAffectingIdentifier
setKey:
setKeySpace:
setLocale:
setExtendedLanguageTag:
setDuration:
setStartDate:
setValue:
setDataType:
setExtraAttributes:
_mutablePriv
T@"NSLocale",C,N
T{?=qiIq},N
T@"<NSObject><NSCopying>",C,N
valueRequest
valueLoadingHandler
valueStatus
valueLoadingError
loadingCompletionHandlers
readWriteQueue
metadataItemWithPropertiesOfMetadataItem:valueLoadingHandler:
_initWithFigMetadataDictionary:valueLoadingHandler:
_valueRequestDidFinish
_valueForKeyDependsOnMetadataValue:
_valueStatus
_waitForLoadingOfValueDependentKey:
_lazyMetadataItem
weakReferenceToMetadataItem
metadataItemValueRequestWithMetadataItem:
initWithMetadataItem:
respondWithValue:dataType:
respondWithValue:
respondWithError:
_valueRequest
T@"AVMetadataItem",R,W
figAsset
chapterGroupIndex
chapterIndex
chapterType
chapterDataType
valueErrorCode
completions
_initWithAsset:chapterGroupIndex:chapterIndex:chapterType:extendedLanguageTag:languageCode:chapterDataType:time:duration:
_addFigAssetNotifications
_removeFigAssetNotifications
_takeValueFrom:
_chapterGroupIndex
_chapterIndex
_setValueStatus:figErrorCode:
_ensureValueLoadedSync
_privChapter
addKeySpace:key:toWhitelistDictionary:
addIdentifier:toWhitelistDictionary:
whitelist
metadataItemFilterForSharing
_itemFilterInternal
T@"NSDictionary",R
propertyListForProxy
makePropertyListForProxyWithOptions:
assetProxyWithPropertyList:
T@,R,N
loader
tracks
makeTracksArrayOnce
makePropertyListForMovieProxyHeader:name:
initWithPropertyList:
_figAsset
_formatReader
_playbackItem
_assetInspectorLoader
_assetInspector
_classForTrackInspectors
_assetProxy
loadChapterInfoOnce
chapterGroupInfo
anchorChapterType
availableChapterLanguages
availableCanonicalizedChapterLanguages
availableChapterLocales
loggingIdentifier
valueForUndefinedKey:
assetWithURL:
assetWithURL:figPlaybackItem:trackIDs:dynamicBehavior:
assetWithData:contentType:options:
_assetCreationOptionsRequiresInProcessOperation:
_assetCreationOptionsPrefersSandboxedOption:
expectsPropertyRevisedNotifications
supportsPlayerItems
initWithURL:options:
initWithData:contentType:options:
_setLoggingIdentifier:
_nameForLogging
_comparisonToken
statusOfValueForKey:
_loadValuesSynchronouslyForKeys:trackKeys:
loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:
_absoluteURL
_mutableComposition
_isStreaming
_fragmentMindingInterval
_mindsFragments
_needsLegacyChangeNotifications
_setFragmentMindingInterval:
_setIsAssociatedWithFragmentMinder:
preferredRate
preferredVolume
preferredSoundCheckVolumeNormalization
preferredTransform
maximumVideoResolution
availableVideoDynamicRanges
preferredDisplayCriteria
minimumTimeOffsetFromLive
naturalSize
naturalTimeScale
providesPreciseDurationAndTiming
referenceRestrictions
trackGroups
_firstTrackGroupWithMediaTypes:
audioAlternatesTrackGroup
subtitleAlternatesTrackGroup
alternateTrackGroups
_mediaSelectionGroupDictionaries
availableMediaCharacteristicsWithMediaSelectionOptions
mediaSelectionGroupForMediaCharacteristic:
loadMediaSelectionGroupForMediaCharacteristic:completionHandler:
mediaSelectionGroupForPropertyList:mediaSelectionOption:
preferredMediaSelection
allMediaSelections
trackReferences
creationDate
lyrics
commonMetadata
availableMetadataFormats
metadataForFormat:
loadMetadataForFormat:completionHandler:
metadata
_ID3Metadata
_tracksWithClass:
_tracksDidChange
trackWithTrackID:
loadTrackWithTrackID:completionHandler:
tracksWithMediaType:
loadTracksWithMediaType:completionHandler:
tracksWithMediaCharacteristic:
loadTracksWithMediaCharacteristic:completionHandler:
tracksWithMediaCharacteristics:
compatibleTrackForCompositionTrack:
findCompatibleTrackForCompositionTrack:completionHandler:
_requiresInProcessOperation
hasProtectedContent
isPlayable
isExportable
isReadable
isComposable
isCompatibleWithPhotosTranscodingServiceWithOptions:
isCompatibleWithSavedPhotosAlbum
isCompatibleWithAirPlayVideo
canContainFragments
containsFragments
overallDurationHint
_hasResourceLoaderDelegate
_handleURLRequest:
supportsAnalysisReporting
_assetAnalysisMessages
_asset
Tf,R,N
T{CGAffineTransform=dddddd},R,N
T{CGSize=dd},R,N
T@"AVDisplayCriteria",R,N
_loadChapterInfo
_availableCanonicalizedChapterLanguages
_addChapterMetadataItem:timeRange:toChapters:fromIndex:
_chapterDataTypeForMediaSubType:
_chapterMetadataGroupsWithFigChapterGroups:titleLanguage:containingItemsWithCommonKeys:
_chapterMetadataGroupsWithTitleLanguage:containingItemsWithCommonKeys:
_chapterMetadataGroupsBestMatchingPreferredLanguages:containingItemsWithCommonKeys:
chapterMetadataGroupsBestMatchingPreferredLanguages:
loadChapterMetadataGroupsBestMatchingPreferredLanguages:completionHandler:
chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:
loadChapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:completionHandler:
_chapterTracks
moovAtomSize
_sequenceNumber
initWithSequenceNumber:
fragmentWithSequenceNumber:
sequenceNumber
initWithCount:firstSequenceNumber:
count
objectAtIndex:
_count
_firstSequenceNumber
_cachedFragments
fragments
URLRequestHelper
customURLBridgeForNSURLProtocol
customURLAuthenticationUsingKeychain
resourceLoader
makeOneResourceLoaderOnly
assetCache
makeOneAssetDownloadCacheOnly
tracksAccessQueue
initializationOptions
hasInstanceIdentifierMapping
requiresSecurityScopeRelease
sessionReference
_avfValidationPlist
_figStreamingUTIs
_figStreamingMIMETypes
_figFileMIMETypes
_figFilePathExtensions
_figHFSFileTypes
_figFileUTIs
_figMIMETypes
UTTypeIDArrayFromUTTypeArray:
_streamingUTTypes
_fileUTTypes
_UTTypes
audiovisualTypes
audiovisualMIMETypes
isPlayableExtendedMIMEType:
URLAssetWithURL:options:
_getFigAssetiTunesStoreContentInfoFromURLAssetiTunesStoreContentInfo:
_initializationOptionsClasses
_getFigAssetCreationOptionsFromURLAssetInitializationOptions:assetLoggingIdentifier:figAssetCreationFlags:error:
initWithFileURL:offset:length:options:
_errorForFigNotificationPayload:key:
_ensureAssetDownloadCache
_setAssetInspectorLoader:
_classForFigAssetInspectorLoader
_classForAssetTracks
httpSessionIdentifier
creationOptions
contentKeySpecifiersEligibleForPreloading
_URLAsset
T@"NSURL",R,C,N
T@"NSUUID",R,N
_managedAssetCache
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
cacheKey
identifyingTagClass
identifyingTag
resolvedURL
originalNetworkContentURL
downloadDestinationURL
downloadToken
SHA1Digest
_shouldOptimizeAccessForLinearMoviePlayback
_clientURLLoadingRepresentsAccurateNetworkStatistics
variants
_resourceLoaderWithRemoteHandlerContext:
T@"AVAssetResourceLoader",R,N
initWithAsset:
URLAsset
setResourceLoader:
figAssetProvider
setFigAssetProvider:
_weakReferenceToSelf
_weakReferenceToAsset
_figAssetProvider
_weakReferenceToResourceLoader
T@?,C,N,V_figAssetProvider
T@"AVAssetResourceLoader",W,N
Tr^{OpaqueFigAsset=},R,N
_removeUserInfoObject
_setUserInfoObject:
instanceIdentifierMapTable
setUserInfoObject:forURLAsset:
userInfoObjectForURLAsset:
userInfoObjectForURLAssetInstanceIdentifier:
_dataLengthLimit
_getFigAssetCreationOptionsFromDataAssetInitializationOptions:figAssetCreationFlags:
initWithData:contentType:
_initializationOptions
_loader
_allocateTracksOnceOnly
_tracks
trackEnumeratorWithAsset:
initWithAsset:mediaType:
initWithAsset:mediaCharacteristics:
setMediaType:
setMediaCharacteristics:
nextObject
_mediaType
_mediaCharacteristics
_enumerator
mayRequireContentKeysForMediaDataProcessing
contentKeySession:didProvideContentKey:
_attachToContentKeySession:contentKeyBoss:failedSinceAlreadyAttachedToAnotherSession:
contentKeySession
_attachedToExternalContentKeySession
expire
_installHandlerForNSURLSessionConfiguration:queue:
itemProviderDataWithURL:assetInitializationOptions:
initWithURL:assetInitializationOptions:
securityScopedURL
assetInitializationOptions
_securityScopedURLWrapper
_assetInitializationOptions
T@"NSURL",R,N
T@"NSDictionary",R,N,V_assetInitializationOptions
loadDataWithTypeIdentifier:forItemProviderCompletionHandler:
_loadFileRepresentationOfTypeIdentifier:forItemProviderCompletionHandler:
readableTypeIdentifiersForItemProvider
objectWithItemProviderData:typeIdentifier:error:
_preferredRepresentationForItemProviderReadableTypeIdentifier:
_objectWithItemProviderFileURL:typeIdentifier:isInPlace:error:
writableTypeIdentifiersForItemProvider
itemProviderVisibilityForRepresentationWithTypeIdentifier:
_preferredRepresentationForItemProviderWritableTypeIdentifier:
makeAssetLoggingIdentifier
T@"<AVLoggingIdentifier>",R,&,N
initWithCreationOptions:
_creationOptions
_serializableCreationOptions
_audioEffect
sweepFilterEffectParametersWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
initWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
sweepFilterEffectWithSweepValue:
minimumCutOffFrequency
maximumCutOffFrequency
bypassThreshold
sweepValue
_sweepFilterAudioEffect
Ti,R,N
generator
asset
appliesPreferredTrackTransform
maximumSize
apertureMode
requestedTimeToleranceBefore
requestedTimeToleranceAfter
requests
requestsQueue
nextRequestID
videoComposition
customVideoCompositorSession
imageRequestQueue
cancelledRequestIDThreshold
generateImagesAsyncQueue
prefersStandardDynamicRange
assetImageGeneratorWithAsset:
_ensureFigAssetImageGeneratorAllowingSynchronousPropertyLoad:error:
_videoSettingWithSize:
_makeAutoreleasedAssetReader
copyCGImageAtTime:actualTime:error:
generateCGImagesAsynchronouslyForTimes:completionHandler:
generateCGImageAsynchronouslyForTime:completionHandler:
cancelAllCGImageGeneration
setAppliesPreferredTrackTransform:
setPrefersStandardDynamicRange:
setMaximumSize:
setApertureMode:
setVideoComposition:
customVideoCompositor
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
_optionsDictionary
_didGenerateCGImage:
_failedToGenerateCGImage:
_serverDied
_requestWithRequestID:
_scaledSizeForRenderSize:
_copyCGImageAtTime:usingAssetReader:error:
_NSErrorForError:
T@"AVAsset",R,N
TB,N
T{CGSize=dd},N
T@"AVVideoComposition",C,N
T@"<AVVideoCompositing>",R,N
sendData:completionHandler:
close
parentChannel
setParentChannel:
T@"AVOutputDeviceCommunicationChannel",W
initWithRemoteControlSession:
_didReceiveData:
_didCloseCommunicationChannel
_remoteControlSession
_parentChannel
T@"AVOutputDeviceCommunicationChannel",W,V_parentChannel
weakReferenceToSelf
trackInspector
assetWeakReference
figAssetTrackNotificationListenerWeakReference
figAssetTrackNotificationSource
mediaCharacteristicsForMediaTypes
keyPathsForValuesAffectingTimeRange
_startListeningToFigAssetTrackNotifications
_stopListeningToFigAssetTrackNotifications
_initWithAsset:trackID:trackIndex:
_initWithAsset:trackID:
_initWithAsset:trackIndex:
_assetTrackInspector
_figTrackReader
_figAssetTrack
trackID
mediaType
formatDescriptions
isDecodable
playabilityValidationResult
isEnabled
isSelfContained
totalSampleDataLength
_subtitleFormatDescriptionMatchesTextDisplayFlags:flagsMask:
hasMediaCharacteristic:
hasMediaCharacteristics:
mediaCharacteristics
timeRange
mediaPresentationTimeRange
mediaDecodeTimeRange
latentBaseDecodeTimeStampOfFirstTrackFragment
requiresFrameReordering
hasAudioSampleDependencies
estimatedDataRate
peakDataRate
dimensions
layer
loudnessInfo
nominalFrameRate
minFrameDuration
segments
segmentForTrackTime:
loadSegmentForTrackTime:completionHandler:
segmentsExcludeAudioPrimingAndRemainderDurations
gaplessSourceTimeRange
segmentsAsPresented
samplePresentationTimeForTrackTime:
loadSamplePresentationTimeForTrackTime:completionHandler:
alternateGroupID
defaultAlternateGroupID
provisionalAlternateGroupID
isExcludedFromAutoselectionInTrackGroup
_firstAssociatedTrackWithAssociationType:
_fallbackTrack
_pairedForcedOnlySubtitlesTrack
_trackReferences
hasAudibleBooksContent
isAudibleBooksContentAuthorized
hasSeamSamples
availableTrackAssociationTypes
associatedTracksOfType:
loadAssociatedTracksOfType:completionHandler:
canProvideSampleCursors
makeSampleCursorWithPresentationTimeStamp:
makeSampleCursorAtFirstSampleInDecodeOrder
makeSampleCursorAtLastSampleInDecodeOrder
_track
T@"AVAsset",R,W,N
_hasMultipleEdits
_hasScaledEdits
_hasEmptyEdits
_hasMultipleDistinctFormatDescriptions
_firstFormatDescriptionIsLPCM
preferCoordinatedPlaybackBehavior
setPreferCoordinatedPlaybackBehavior:
_preferCoordinatedPlaybackBehavior
TB,N,V_preferCoordinatedPlaybackBehavior
fullyInitializedAndNotDeallocating
pixelBufferAttributeMediator
stateDispatchQueue
figConfigurationQueue
layerInteractionQueue
currentItemPropertyUpdateQueue
layersQ
proxyTimebase
logPerformanceData
primaryAirPlayID
didFinishSuspensionNotificationToken
didEnterBackgroundNotificationToken
willEnterForegroundNotificationToken
audioSessionMediaPlayerOnly
IAPDCallbackToken
prerollIDMutex
layerForegroundingChangeToken
KVOChangeSerializer
currentItem
lastItem
items
queueModifications
pendingFigPlayerProperties
audioSession
vibrationPattern
outputContext
IOwnTheFigPlayer
audiovisualBackgroundPlaybackPolicy
handlersToCallWhenReadyToPlay
shouldReduceResourceUsage
resourceConservationLevelWhilePaused
playerRole
externalPlaybackVideoGravity
actionAtItemEnd
userVolume
minRateForAudioPlayback
maxRateForAudioPlayback
autoSwitchStreamVariants
preparesItemsForPlaybackAsynchronously
allowsOutOfBandTextTrackRendering
muted
closedCaptionDisplayEnabled
appliesMediaSelectionCriteriaAutomatically
dynamicallyChoosesInitialVariant
limitsBandwidthForCellularAccess
usesAudioOnlyModeForExternalPlayback
allowsPixelBufferPoolSharing
disallowsAMRAudio
disallowsHardwareAcceleratedVideoDecoder
layerDestinationIsTVOut
preventsDisplaySleepDuringVideoPlayback
preventsAutomaticBackgroundingDuringVideoPlayback
disallowsVideoLayerDisplayCompositing
allowsExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
captionPipelineStrategy
audioOutputDeviceUniqueID
clientName
STSLabel
multichannelAudioStrategy
clientPriority
PIPModePossible
isDisplayingClosedCaptions
externalPlaybackActive
airPlayVideoActive
isConnectedToPhysicalSecondScreen
outputObscuredDueToInsufficientExternalProtection
externalProtectionStatus
ancillaryPerformanceInformationForDisplay
rateState
rateChangeIdentifier
defaultRate
currentItemPresentationSize
currentItemNonForcedSubtitlesEnabled
preferredVideoDecoderGPURegistryID
disallowsAutoPauseOnRouteRemovalIfNoAudio
ensuresActiveAudioSessionWhenStartingPlayback
hostApplicationInForeground
preservesAudioSessionSampleRate
silencesOtherPlaybackDuringPIP
prefersPlayingSilentlyWhenConflictingWithOtherPlayback
suppressesAudioRendering
isInterstitialPlayer
isSilencedDueToConflictWithOtherPlayback
mxSessionID
videoTargets
shouldWaitForVideoTarget
playbackCoordinator
clientRequestedPlaybackCoordinator
backgroundPIPAuthorizationToken
rateDidChangeNotificationIncludesExtendedDiagnosticPayload
cachedFigMediaSelectionCriteriaProperty
interstitialEventCoordinator
videoLayers
subtitleLayers
closedCaptionLayers
avPlayerLayers
nextPrerollIDToGenerate
pendingPrerollID
prerollCompletionHandler
currentItemSuppressesVideoLayersNotificationToken
currentItemPreferredPixelBufferAttributesNotificationToken
figPlayer
figPlaybackItemToIdentifyNextCurrentItem
needsToCreateFigPlayer
allowsLegibleFallbackForAllAudibleMediaSelections
cachedFigLegibleFallbackMediaSelectionCriteriaProperty
itemsInFigPlayQueue
expectedAssetTypes
reevaluateBackgroundPlayback
hadAssociatedOnscreenPlayerLayerWhenSuspended
suspensionExpected
rateUpdateDuringTransitionDecided
videoLayersAreAttached
figSourceClock
captionRenderingStrategy
displaysUsedForPlayback
overlappedPlaybackID
overlappedPlaybackItem
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
setValue:forUndefinedKey:
_playerChangeStatusToFailedWithError:
playerWithURL:
playerWithPlayerItem:
worksAroundConcurrentKVOCrash
playerWithFigPlayer:
automaticallyNotifiesObserversOfCurrentItem
_createFigPlayerWithType:options:player:
automaticallyNotifiesObserversOfRate
automaticallyNotifiesObserversOfUsesLegacyAutomaticWaitingBehavior
automaticallyNotifiesObserversOfUserVolume
automaticallyNotifiesObserversOfVibrationPattern
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingActionAtItemEnd
keyPathsForValuesAffectingClosedCaptionDisplayEnabled
automaticallyNotifiesObserversOfExternalPlaybackActive
automaticallyNotifiesObserversOfUsesAudioOnlyModeForExternalPlayback
automaticallyNotifiesObserversOfAirPlayVideoActive
automaticallyNotifiesObserversOfUsesAirPlayVideoWhileAirPlayScreenIsActive
checkForAvailableHDRModesChanges
fireAvailableHDRModesDidChangeNotification
fireEligibleForHDRPlaybackDidChangeNotification
registerForScreenConnectionChanges
availableHDRModes
eligibleForHDRPlayback
initWithPlayerItem:
initWithURL:
initWithDispatchQueue:
initWithFigPlayer:
_nameForLogging_fromIvarAccessQueue
dispatchQueue
_stateDispatchQueue
_copyFigPlayer
_updateDecoderPixelBufferAttributes:onFigPlayer:
currentItemPublisher
closedCaptionsDisplayPublisher
_updateCurrentItemPreferredPixelBufferAttributesAndVideoLayerSuppression
_setCurrentItem:
_synchronizeWithNewCurrentItem
_updateProxyTimebaseFromNewCurrentItem
_runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:
_cachedPresentationSizeOfCurrentItem
_noteNewPresentationSizeForPlayerItem:
_cachedNonForcedSubtitleDisplayEnabledForCurrentItem
_noteNewNonForcedSubtitleDisplayEnabledForPlayerItem:
_startObservingPropertiesOfCurrentItem:
_removePropertyObserversOfCurrentItemCalledOnStateDispatchQueueChecked:
_stopObservingPropertiesOfCurrentItem:
_itemIsReadyToPlay:
_advanceCurrentItemAccordingToFigPlaybackItem:
_advanceToNextItem
prepareItem:withCompletionHandler:
_insertItem:afterItem:
_pendingFigPlayerProperties
_pendingFigPlayerPropertyForKey:
_setPendingFigPlayerProperty:forKey:
linkInterstitialFigPlayersOnQueue
_createAndConfigureFigPlayerWithType:completionHandler:
setExpectedAssetTypes:
_setAncillaryPerformanceInformationForDisplay:
_ancillaryPerformanceInformationForDisplay
_addItemToLinkedList_invokeOnIvarAccessQueue:afterItem:
_applyLinkedListOfItemsToFigPlayerUsingBlock:
_applyPlayQueueChangesToFigPlayerWithCompletionHandler:
_enqueuePlayQueueModification_invokeOnIvarAccessQueue:
_removeItemFromLinkedList_invokeOnIvarAccessQueue:
_removeItem:
replaceCurrentItemWithPlayerItem:
_enumerateItemsUsingBlock:
_items_invokeOnIvarAccessQueue
_items
_removeAllItems
_rateDidChangeNotificationPayloadForAVFRateChangeReason:reasonIsExtendedDiagnostic:rateChangeIdentifier:rateChangeOriginator:
_rateDidChangeNotificationPayloadForFigRateChangeReason:rateChangeIdentifier:rateChangeOriginator:
_rate
_rateState
rate
_setRate:rateChangeReason:figPlayerSetRateHandler:
_setRate:withVolumeRampDuration:playImmediately:rateChangeReason:affectsCoordinatedPlayback:
setRate:withVolumeRampDuration:
setRate:
setDefaultRate:
playImmediatelyAtRate:
pauseWithoutAffectingCoordinatedPlayback
_rateDidChangeNotificationIncludesExtendedDiagnosticPayload
_setRateDidChangeNotificationIncludesExtendedDiagnosticPayload:
timeControlStatus
reasonForWaitingToPlay
automaticallyWaitsToMinimizeStalling
setAutomaticallyWaitsToMinimizeStalling:
_updateAutomaticallyWaitsToMinimizeStallingOnFigPlayer
_setUsesLegacyAutomaticWaitingBehavior:
_usesLegacyAutomaticWaitingBehavior
currentTime
currentUnfoldedTime
seekToDate:
seekToDate:completionHandler:
seekToTime:
seekToTime:toleranceBefore:toleranceAfter:
seekToTime:completionHandler:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
setRate:time:atHostTime:
setRate:time:atHostTime:options:
_createPrerollID
_cancelPendingPrerollAndRegisterPrerollCompletionHandler:
_unregisterAndReturnRetainedPrerollCompletionHandler
prerollAtRate:completionHandler:
cancelPendingPrerolls
prerollOperationDidComplete:notificationPayload:
masterClock
setMasterClock:
sourceClock
setSourceClock:
_userVolume
_setUserVolume:
setVibrationPattern:
_playerVolume
_isMuted
isMuted
setMuted:
figPlayerActionForActionAtItemEnd:
_setActionAtItemEnd:allowingAdvance:
setActionAtItemEnd:
isClosedCaptionDisplayEnabled
setClosedCaptionDisplayEnabled:
_isDisplayingClosedCaptions
setShouldReduceResourceUsage:
setResourceConservationLevelWhilePaused:
setPlayerRole:synchronously:
setPlayerRole:
setAllowsExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
_externalPlaybackActive
isExternalPlaybackActive
externalPlaybackType
setUsesAudioOnlyModeForExternalPlayback:
setOutputContext:
allowsAirPlayVideo
setAllowsAirPlayVideo:
_airPlayVideoActive
_isAirPlayVideoActive
isAirPlayVideoActive
usesAirPlayVideoWhileAirPlayScreenIsActive
setUsesAirPlayVideoWhileAirPlayScreenIsActive:
play
pause
addPeriodicTimeObserverForInterval:queue:usingBlock:
addBoundaryTimeObserverForTimes:queue:usingBlock:
removeTimeObserver:
_removeAllLayers
_pixelBufferAttributeMediator
_subtitleLayers
_closedCaptionLayers
_videoLayers
_avPlayerLayers
_updateClosedCaptionLayerBounds:videoRelativeToViewport:captionsAvoidanceMargins:
_setOptions:onClosedCaptionLayer:
_setSeparated:onClosedCaptionLayer:
_addCaptionLayer:subtitleLayer:
_removeCaptionLayer:subtitleLayer:
_maximumAVPlayerLayerDisplaySize
_evaluateDisplaySizeOfAllAttachedLayers
_copyDisplayedPixelBuffer
_attachFigPlayerToSubtitleLayers
_detachFigPlayerFromSubtitleLayers
_attachVideoLayersToFigPlayer
_detachVideoLayersFromFigPlayer:
_attachClosedCaptionLayersToFigPlayer
_detachClosedCaptionLayersFromFigPlayer:
_removeLayer:
_removeLayer:videoLayer:closedCaptionLayer:subtitleLayer:interstitialLayer:
_addLayer:
_hasForegroundLayers
_pixelBufferAttributesDidChangeForLayer:
_updatePixelBufferAttributesForLayer:
_performanceDictionary
_externalPlaybackVideoGravity
setExternalPlaybackVideoGravity:
_setNeroVideoGravityOnFigPlayer
_fpNotificationNames
_addFPInterstitialCoordinatorListeners
_removeFPInterstitialCoordinatorListeners
_addFPListeners
_removeFPListeners
_setFigPlaybackItemToMakeCurrent:
_getDisplayVideoRange:displaySize:refreshRate:
_shouldLogPerformanceData
_logPerformanceDataForPreviousItem
_copyPerformanceDataForCurrentItem
_logPerformanceDataForCurrentItem
_setDynamicallyChoosesInitialVariant:
_dynamicallyChoosesInitialVariant
_setLimitsBandwidthForCellularAccess:
_limitsBandwidthForCellularAccess
_isVideoPlaybackAllowedWhileInBackground
_setPausesAudioVisualPlaybackInBackground:
_pausesAudioVisualPlaybackInBackground
setAudiovisualBackgroundPlaybackPolicy:
_suppressesAudioRendering
_setSuppressesAudioRendering:
_player
setPreventsDisplaySleepDuringVideoPlayback:
setPreventsAutomaticBackgroundingDuringVideoPlayback:
_playbackDisplaysForFigPlayer
_displaysUsedForPlayback
_setDisplaysUsedForPlayback:
_externalProtectionStatusCopiedFromFig
_externalProtectionStatus
_extractFPExternalProtectionStatus:
T@"NSArray",C,N,S_setDisplaysUsedForPlayback:
_isPIPModePossible
TB,R,N,G_isPIPModePossible
removeAudioPlaybackRateLimits
isAudioPlaybackEnabledAtAllRates
setMinRateForAudioPlayback:
setMaxRateForAudioPlayback:
audioPlaybackEnabledAtAllRates
TB,R,N,GisAudioPlaybackEnabledAtAllRates
_hasAssociatedAVPlayerLayerInPIPMode
_applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock
_hasAssociatedOnscreenAVPlayerLayer
_isIAPDExtendedModeActive
_carplayIsActive
_hostApplicationHasForegroundExemption
_hostApplicationInForeground
_setHostApplicationInForeground:
_canContinuePlaybackInBackgrounBasedOnAudiovisualBackgroundPlaybackPolicy:
_forceHostApplicationInForeground:
_itemOkayToPlayWhileTransitioningToBackground:
_shouldDetachVideoLayersFromFigPlayer
_layerForegroundStateChanged:
_acquireBackgroundAssertion
_didEnterBackground:
_didFinishSuspension:
_detachVideoLayersForSuspension
_rateUpdateDuringTransitionDecided
_willEnterForeground:
_ensureVideoLayersAreAttached
isIAPDExtendedModeActive
_setWantsVolumeChangesWhenPausedOrInactive:
_setEQPreset:
_setStoppingFadeOutDuration:
_clientName
_setClientName:
_clientPriority
_setClientPriority:
_setCALayerDestinationIsTVOut:
_CALayerDestinationIsTVOut
_updateConnectionToSecondScreen
_isConnectedToPhysicalSecondScreen
_setPreventsSleepDuringVideoPlayback:
_preventsSleepDuringVideoPlayback
_setPreferredLanguageList:
_resumePlayback:error:
playerAVAudioSession
setAllowsPixelBufferPoolSharing:
setDisallowsAMRAudio:
setDisallowsHardwareAcceleratedVideoDecoder:
setAppliesMediaSelectionCriteriaAutomatically:
setMediaSelectionCriteria:forMediaCharacteristic:
_cachedMediaSelectionCriteria
mediaSelectionCriteriaForMediaCharacteristic:
defaultMediaSelectionCriteriaForMediaCharacteristic:
setAudioOutputDeviceUniqueID:
setAutoSwitchStreamVariants:
setPreparesItemsForPlaybackAsynchronously:
automaticallyNotifiesObserversOfAutoSwitchStreamVariants
setAllowsOutOfBandTextTrackRendering:
setMultichannelAudioStrategy:
setCaptionPipelineStrategy:
setCaptionRenderingStrategy:
setAudioSession:
_setPreservesAudioSessionSampleRate:
_preservesAudioSessionSampleRate
T@"AVAudioSession",&
TB,N,G_preservesAudioSessionSampleRate,S_setPreservesAudioSessionSampleRate:
modificationForInsertingItem:afterItem:
modificationForRemovingItem:
initWithModificationType:item:afterItem:
modificationType
item
afterItem
_modificationType
_item
_afterItem
Tq,R,N,V_modificationType
T@"AVPlayerItem",R,N,V_item
T@"AVPlayerItem",R,N,V_afterItem
setPreferredVideoDecoderGPURegistryID:
TQ,N
setLoggingIdentifier:
makePlayerLoggingIdentifier
T@"<AVLoggingIdentifier>",&,N
_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:
_disallowsAutoPauseOnRouteRemovalIfNoAudio
TB,N,G_disallowsAutoPauseOnRouteRemovalIfNoAudio,S_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:
_setEnsuresActiveAudioSessionWhenStartingPlayback:
_ensuresActiveAudioSessionWhenStartingPlayback
_STSLabel
_setSTSLabel:
T@"NSString",&,N,G_STSLabel,S_setSTSLabel:
setPrefersPlayingSilentlyWhenConflictingWithOtherPlayback:
_silencesOtherPlaybackDuringPIP
_setSilencesOtherPlaybackDuringPIP:
setBackgroundPIPAuthorizationToken:
TB,N,G_silencesOtherPlaybackDuringPIP,S_setSilencesOtherPlaybackDuringPIP:
_updateVideoTargetOnFigPlayer
addVideoTarget:
removeVideoTarget:
setShouldWaitForVideoTarget:
_isInterstitialPlayer
_setIsInterstitialPlayer:
syncAudioSessionToInterstitialPlayer:
_setInterstitialPlayerGuts:
_interstitialPlayerIfCreated
_retainInterstitialCoordinatorIfCreated
_hasCurrentInterstitialEvent
retainInterstitialEventCoordinator
_setInterstitialPlayer:
_noteRemoteInterstitialEvents:forItem:
_noteCurrentRemoteInterstitialEvent:
_clientRequestedPlaybackCoordinator
_playbackCoordinatorWithoutTriggeringFullSetup
_ensureFigPlaybackCoordinatorIsConnected
T@"AVPlayerPlaybackCoordinator",R
setAllowsLegibleFallbackForAllAudibleMediaSelections:
legibleFallbackMediaSelectionCriteria
setLegibleFallbackMediaSelectionCriteria:
T@"AVPlayerMediaSelectionCriteria",&,N
_overlappedPlaybackWillBeginForItem:withID:
initWithAutomaticallyWaitsToMinimizeStalling:usesLegacyAutomaticWaitingBehavior:timeControlStatus:
rateStateBySettingRate:nameForLogging:
rateStateBySettingUsesLegacyAutomaticWaitingBehavior:
rateStateBySettingAutomaticallyWaitsToMinimizeStalling:
rateStateBySettingTimeControlStatus:reasonForWaitingToPlay:nameForLogging:
rateStateByUpdatingBasedOnPresenceOfCurrentInterstitialEvent:nameForLogging:
rateStateByUpdatingBasedOnFigPlayerPlaybackState:hasCurrentInterstitialEvent:nameForLogging:
rateStateByInferringTimeControlStatusAndWaitingReasonBasedOnPresenceOfCurrentItem:hasCurrentInterstitialEvent:nameForLogging:
rateStateByUpdatingBasedOnFigPlayer:hasCurrentItem:hasCurrentInterstitialEvent:nameForLogging:
usesLegacyAutomaticWaitingBehavior
_automaticallyWaitsToMinimizeStalling
_timeControlStatus
_reasonForWaitingToPlay
Tf,R,N,V_rate
TB,R,N,V_automaticallyWaitsToMinimizeStalling
TB,R,N,V_usesLegacyAutomaticWaitingBehavior
Tq,R,N,V_timeControlStatus
T@"NSString",R,N,V_reasonForWaitingToPlay
_createFigContentConfigForEnvironmentalCondition:
_serializeIntoDownloadConfig:environmentalCondition:
_serializeIntoDownloadConfig:asset:
variantQualifiers
setVariantQualifiers:
mediaSelections
setMediaSelections:
_variantQualifiers
_mediaSelections
T@"NSArray",C,N,V_variantQualifiers
T@"NSArray",C,N,V_mediaSelections
_setupContentConfigWithDownloadConfig:asset:
downloadConfigurationWithAsset:title:
initWithAsset:title:
artworkData
setArtworkData:
primaryContentConfiguration
auxiliaryContentConfigurations
setAuxiliaryContentConfigurations:
optimizesAuxiliaryContentConfigurations
setOptimizesAuxiliaryContentConfigurations:
_title
_artworkData
_primaryContentConfiguration
_auxiliaryContentConfigurations
_optimizesAuxiliaryContentConfigurations
T@"NSData",C,N,V_artworkData
T@"AVAssetDownloadContentConfiguration",R,N,V_primaryContentConfiguration
T@"NSArray",C,N,V_auxiliaryContentConfigurations
TB,N,V_optimizesAuxiliaryContentConfigurations
_serializableRepresentation
sharedAVKitUXMDisplayManager
T@"AVUXMDisplayManager",R,N
currentUXMDisplayCriteria
_updateUXMWithDisplayCriteriaWithLock:
_updateUXMWithDisplayCriteria:
setPreferredDisplayCriteria:
initInternal
_preferredDisplayCriteria
T@"AVDisplayCriteria",C,N
_startCompositionTime
_endCompositionTime
_subsequentStartCompositionTime
_subsequentEndCompositionTime
initWithStartCompositionTime:endCompositionTime:subsequentStartCompositionTime:subsequentEndCompositionTime:
startCompositionTime
endCompositionTime
subsequentStartCompositionTime
subsequentEndCompositionTime
audioTimePitchAlgorithm
allowedAudioSpatializationFormats
audioProcessingTap
mediaDataRequester
scheduledAudioParameters
readOnlyControlTimebase
weakReferenceToSynchronizer
weakContentKeySession
lastFormatDescription
lastCryptor
figAudioRenderer
sampleBufferAudioRenderer
isReadyForMoreMediaData
copyFigSampleBufferAudioRenderer:
setRenderSynchronizer:error:
setSTSLabel:
enqueueSampleBuffer:
flush
requestMediaDataWhenReadyOnQueue:usingBlock:
stopRequestingMediaData
hasSufficientMediaDataForReliablePlaybackStart
T^{OpaqueCMTimebase=},R,&
readyForMoreMediaData
TB,R,GisReadyForMoreMediaData
_initializeTimebase
_triggerMediaRequestCallback
_wasFlushedAutomaticallyAtTime:
_installNotificationHandlers
_uninstallNotificationHandlers
_transitionToStatus:error:
_transitionToFailedStatusWithOSStatus:
setAudioTimePitchAlgorithm:
willTrimShortDurationSamples
setAudioTapProcessor:
audioTapProcessor
setAllowedAudioSpatializationFormats:
flushFromSourceTime:completionHandler:
_audioRendererInternal
T@"NSError",R,N
currentFigAudioRendererFactory
setFigAudioRendererFactory:forQueue:
createAudioRendererWithAllocator:options:error:
input
assetWriterInputMetadataAdaptorWithAssetWriterInput:
initWithAssetWriterInput:
assetWriterInput
appendTimedMetadataGroup:
T@"AVAssetWriterInput",R,N
externalProtectionState
_monitor
descriptionStringForFormatOfTrack:
descriptionStringForBitRate:
descriptionStringForVideoRangeOfFormatDescription:
descriptionStringForTracksOfPlayerItem:
updateFromPlayer
updateFromPlayerItem
update
formattedDisplayString
spatialDiagnostics
setSpatialDiagnostics:
captureCompleteURI
setCaptureCompleteURI:
prevVariantIdx
setPrevVariantIdx:
prevStallCount
setPrevStallCount:
totalStallCount
setTotalStallCount:
displayResolutionWidth
displayResolutionHeight
audioSpatializationMode
_audioSpatializationMode
_playerItemURL
_assetType
_sessionID
_configurationGroup
_trackFormatDescriptions
_displayResolutionHeight
_displayResolutionWidth
_refreshRate
_videoRange
_videoApproximateDisplaySizeHeight
_videoApproximateDisplaySizeWidth
_presentationSizeHeight
_presentationSizeWidth
_currentFrameRate
_nominalFrameRate
_networkBandiwdth
_averageVideoBitrate
_averageAudioBitrate
_assetTrackInfo
_peakIndicatedBitrate
_averageIndicatedBitrate
_variantIndex
_totalFrameDrops
_decoderFrameDrops
_imageQueueFrameDrops
_bufferedVideoPlayed
_bufferedVideoRemaining
_customPerfInfo
_totalStalls
_prevVariantIdx
_prevStallCount
_totalStallCount
_spatialDiagnostics
_captureCompleteURI
_formattedDisplayString
T@"AVPlayer",W,V_player
TB,N,V_spatialDiagnostics
TB,N,V_captureCompleteURI
Tq,N,V_prevVariantIdx
Tq,N,V_prevStallCount
Tq,N,V_totalStallCount
T@"NSString",R,N,V_formattedDisplayString
T@"NSNumber",R,N,V_displayResolutionHeight
T@"NSNumber",R,N,V_displayResolutionWidth
T@"NSNumber",R,N,V_audioSpatializationMode
hudEnabled
updateBounds:
setColor:
getHudSetting
readHudSettingsAndCallCompletionHandler:
startDispatchTimer
getScaleFactorForDisplaySize:
currentItemChanged
currentItemTracksChanged
valueLoadedForKey:onObject:
updateHudWithDisplayString:
displayStringGenerator
copyPropertiesFromStringGenerator:
_hudUpdateTrigger
playerLayer
setPlayerLayer:
_hudTimer
_showHud
_colorId
_opacity
_fontSizeInt
_updateUISettings
_hudXoffset
_hudYoffset
_hudUpdateInterval
_showCompleteURI
_requestInFlight
_loadingStatusCache
T@"AVPlayerLayer",W,V_playerLayer
figPlaybackItemAccessorQueue
figPlaybackItemSetterQueue
seekQueue
seekIDMutex
proxyUnfoldedTimebase
proxyFoldedTimebase
automaticallyLoadedAssetKeys
wasInitializedWithURL
figPlaybackItem
cachedTracks
syncLayers
itemOutputs
itemVideoOutputs
itemLegibleOutputsForKeys
itemMetadataOutputsForKeys
suppressesVideoLayers
foldedTimebase
unfoldedFigTimebase
didBecomeReadyForInspectionOfTracks
didBecomeReadyForInspectionOfPresentationSize
didBecomeReadyForInspectionOfDuration
figAssetDidBecomeReadyForInspectionOfMediaSelectionOptions
didBecomeReadyForInspectionOfRecommendedTimeOffsetFromLive
assetWithFigPlaybackItem
trackIDsForAssetWithFigPlaybackItem
needTimedMetadataNotification
didBecomeReadyForBasicInspection
audioMix
forwardPlaybackEndTime
reversePlaybackEndTime
timeToPauseBuffering
timeToPausePlayback
advanceTimeForOverlappedPlayback
advanceTimeForOverlappedPlaybackWasSet
maximumTimePlayedToDuringOverlappedPlayback
snapTimeToPausePlayback
preservesTimeOffsetFromLive
configuredTimeOffsetFromLive
recommendedTimeOffsetFromLive
seekingWaitsForVideoCompositionRendering
textStyleRules
textHighlightArray
initialFigTimePitchAlgorithm
canUseNetworkResourcesForLiveStreamingWhilePaused
maximumForwardBufferDuration
maximumTrailingBufferDuration
preferredPeakBitRate
preferredPeakBitRateForExpensiveNetworks
startsOnFirstEligibleVariant
itemCollectors
itemMetadataCollectors
interstitialEventCollector
RTCReportingFlags
gaplessInfo
soundCheckVolumeNormalization
volumeAdjustment
initialLimitReadAhead
mediaKind
reversesMoreVideoFramesInMemory
reversesMoreVideoFramesInMemoryWasSet
aggressivelyCachesVideoFrames
aggressivelyCachesVideoFramesWasSet
decodesAllFramesDuringOrdinaryPlayback
decodesAllFramesDuringOrdinaryPlaybackWasSet
initialContinuesPlayingDuringPrerollForSeek
initialContinuesPlayingDuringPrerollForRateChange
usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet
usesIFrameOnlyPlaybackForHighRateScaledEdits
minimumIntervalForIFrameOnlyPlayback
minimumIntervalForIFrameOnlyPlaybackWasSet
speedThresholdForIFrameOnlyPlayback
speedThresholdForIFrameOnlyPlaybackWasSet
refreshesClosedCaptionsImmediatelyAfterSeeking
initialDate
initialEstimatedDate
requiresAccessLog
suppressesAudioOnlyVariants
prefersOfflinePlayableVariants
autoSwitchAtmosStreamVariants
variantPreferences
preferredMaximumAudioSampleRate
imageQueueInterpolationCurve
imageQueueInterpolationCurveWasSet
blendsVideoFrames
blendsVideoFramesWasSet
appliesPerFrameHDRDisplayMetadata
appliesPerFrameHDRDisplayMetadataWasSet
videoApertureMode
usesMinimalLatencyForVideoCompositionRendering
initialAlwaysMonitorsPlayability
initialPlaybackLikelyToKeepUpTrigger
savesDownloadedDataToDiskWhenDone
networkUsuallyExceedsMaxBitRate
allowProgressiveSwitchUp
allowProgressiveStartup
allowProgressiveResume
IFramePrefetchTargetDimensions
AVKitData
preferredMaximumResolution
preferredMaximumResolutionForExpensiveNetworks
preferredMinimumResolution
canPlayFastForward
canPlayFastReverse
canPlayReverse
canPlaySlowReverse
canPlaySlowForward
canStepForward
canStepBackward
presentationSize
playbackBufferEmpty
playbackBufferFull
playbackLikelyToKeepUp
restrictsAutomaticMediaSelectionToAvailableOfflineOptions
nonForcedSubtitlesEnabled
hasEnabledVideo
hasVideo
hasEnabledAudio
hasEnqueuedVideoFrame
externalProtectionRequested
automaticallyHandlesInterstitialEvents
seekableTimeRanges
seekableTimeRangesLastModifiedTime
loadedTimeRanges
loopTimeRange
currentMediaSelection
videoEnhancementMode
isRenderingSpatialAudio
playerPlaybackCoordinator
coordinatedPlaybackIdentifierChangeNotificationToken
timeJumpedNotificationIncludesExtendedDiagnosticPayload
serviceIdentifier
needToSeekAfterCreatingFigPlaybackItem
initialTime
initialSetTimeFlags
initialMinSnapTime
initialMaxSnapTime
nextSeekIDToGenerate
pendingSeekID
seekCompletionHandler
previousItem
nextItem
playerConnection
initialWillNeverSeekBackwardsHint
clientsOriginalVideoComposition
figVideoCompositor
interstitialTemplate
eqPreset
rampInOutInfo
audibleDRMInfo
initialVariantIndex
currentStableVariantID
mediaOptionsSelectedByClient
timedMetadata
handlersToCallWhenReadyForEnqueueing
haveInitialSamples
haveCPEProtector
didInformObserversAboutAvailabilityOfTracks
didFireKVOForAssetForNonStreamingItem
mostRecentlyAppliedAudioMix
audioSpatializationAllowed
audioSpatializationAllowedWasSet
allowedAudioSpatializationFormatsWasSet
playerReference
didSetAssetToAssetWithFigPlaybackItem
figCPEProtector
copy
_attachToFigPlaybackItemOfPlayerItem:
_respondToFigPlaybackItemBecomingReadyForInpection
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
_forStreamingItemsVendAssetWithFigPlaybackItem
_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection
playerItemWithURL:
playerItemWithAsset:
playerItemWithAsset:automaticallyLoadedAssetKeys:
_hasOverrideForSelector:
_createFigPlaybackItemForFigPlayer:asset:URL:flags:options:playbackItem:
_copyTimebaseFromFigPlaybackItem:
automaticallyNotifiesObserversOfSavesDownloadedDataToDiskWhenDone
automaticallyNotifiesObserversOfUsesMinimalLatencyForVideoCompositionRendering
automaticallyNotifiesObserversOfVariantIndex
automaticallyNotifiesObserversOfHasEnabledVideo
automaticallyNotifiesObserversOfHasEnabledAudio
automaticallyNotifiesObserversOfNetworkUsuallyExceedsMaxBitRate
automaticallyNotifiesObserversOfAllowProgressiveSwitchUp
automaticallyNotifiesObserversOfAllowProgressiveStartup
automaticallyNotifiesObserversOfAllowProgressiveResume
automaticallyNotifiesObserversOfStatus
automaticallyNotifiesObserversOfAsset
automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp
automaticallyNotifiesObserversOfPlaybackBufferEmpty
automaticallyNotifiesObserversOfPlaybackBufferFull
automaticallyNotifiesObserversOfSeekableTimeRanges
automaticallyNotifiesObserversOfLoadedTimeRanges
automaticallyNotifiesObserversOfPresentationSize
automaticallyNotifiesObserversOfTracks
initWithAsset:automaticallyLoadedAssetKeys:
copyWithZone:newAssetOptions:
setDelegate:
_timeJumpedNotificationIncludesExtendedDiagnosticPayload
_setTimeJumpedNotificationIncludesExtendedDiagnosticPayload:
_copyStateDispatchQueue
_copyFigPlaybackItem
_copyFigPlaybackItemLocked:
_getCachedPresentationSize:
_getCachedNonForcedSubtitleEnabled:
_configurePlaybackItemAndReturnError:
_playerConnection
_attachToPlayer:
_attachToFigPlayer
_addToPlayQueueOfFigPlayerOfPlayer:afterFigPlaybackItemOfItem:
_removeFromPlayQueueOfFigPlayerOfAttachedPlayer
_nextItem
_previousItem
_insertAfterItem:
_removeFromItems
presentationSizePublisher
tracksPublisher
nonForcedSubtitleDisplayEnabledPublisher
_propertyListForMediaSelection:forGroup:
_URL
_setURL:
_setAsset:
_ensureAssetWithFigPlaybackItemWithTrackIDs:
_markAsNeedingNewAssetWithFigPlaybackItem
_setAssetToAssetWithFigPlaybackItemIfAppropriate
_markAssetWithFigPlaybackItemAsNeedingNewTracks
_kickAssetObserversIfAppropriate
_informObserversAboutAvailabilityOfTracks:
_informObserversAboutAvailabilityOfPresentationSize
_informObserversAboutAvailabilityOfDuration:
_informObserversAboutAvailabilityOfCurrentMediaSelection
_isReadyForInspectionOfDuration
_markAsReadyForInspectionOfDuration
_duration
_tracksWithFPTrackIDArray:fromFigPlaybackItem:
_cachedTracks
_tracksFromAssetTrackIDs
_isReadyForInspectionOfTracks
_markAsReadyForInspectionOfTracks
_trackWithTrackID:
_enabledTrackFormatDescriptions
_addFAListeners
_removeFAListeners
_addFoldedTBListeners
_removeFoldedTBListeners
_respondToBecomingReadyForBasicInspection
_isReadyForBasicInspection
_markAsReadyForBasicInspection
_respondToBecomingReadyForBasicInspectionWithDuration:
_invokeReadyForEnqueueingHandlers
_makeReadyForEnqueueingWithCompletionHandler:
_canPlayFastForward
_canPlayFastReverse
_isAFileBasedItemThatsReadyToPlay
_canPlayReverse
_canStepForward
_canStepBackward
automaticallyPreservesTimeOffsetFromLive
_updatePreservesTimeOffsetFromLive
setAutomaticallyPreservesTimeOffsetFromLive:
_configuredTimeOffsetFromLive
_updateConfiguredTimeOffsetFromLiveOnFigPlaybackItem
setConfiguredTimeOffsetFromLive:
_isReadyForInspectionOfRecommendedTimeOffsetFromLive
_markAsReadyForInspectionOfRecommendedTimeOffsetFromLive
_recommendedTimeOffsetFromLive
_isReadyForInspectionOfPresentationSize
_markAsReadyForInspectionOfPresentationSize
_presentationSize
_currentTimeWithOptionalFoldedTimebase:
makeSeekID
_CreateSeekID
_cancelPendingSeekAndRegisterSeekID:withCompletionHandler:
_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:finished:
_postSeekCompletionNotificationWithSeekID:andResult:
seekToTime:toleranceBefore:toleranceAfter:seekID:
_seekToTime:toleranceBefore:toleranceAfter:seekID:completionHandler:
cancelPendingSeeks
currentDate
setInitialDate:
currentEstimatedDate
setInitialEstimatedDate:
stepByCount:
_updateForwardPlaybackEndTimeOnFigPlaybackItem
setForwardPlaybackEndTime:
_updateReversePlaybackEndTimeOnFigPlaybackItem
setReversePlaybackEndTime:
_timeToPauseBuffering
_updateTimeToPauseBufferingOnFigPlaybackItem
setTimeToPauseBuffering:
_timeToPausePlayback
_updateTimeToPausePlaybackOnFigPlaybackItem
setTimeToPausePlayback:
_snapTimeToPausePlayback
_updateSnapTimeToPausePlaybackOnFigPlaybackItem
setSnapTimeToPausePlayback:
_updateImageQueueInterpolationCurveOnFigPlaybackItem
setImageQueueInterpolationCurve:
_updateBlendsVideoFramesOnFigPlaybackItem
setBlendsVideoFrames:
_updateAppliesPerFrameHDRDisplayMetadataOnFigPlaybackItem
setAppliesPerFrameHDRDisplayMetadata:
_updateReversesMoreVideoFramesInMemoryOnFigPlaybackItem
setReversesMoreVideoFramesInMemory:
_updateAggressivelyCachesVideoFramesOnFigPlaybackItem
setAggressivelyCachesVideoFrames:
_updateDecodesAllFramesDuringOrdinaryPlaybackOnFigPlaybackItem
setDecodesAllFramesDuringOrdinaryPlayback:
_copyFoldedTimebase
_copyProxyUnfoldedTimebase
_copyProxyFoldedTimebase
_copyProxyTimebase
_copyUnfoldedFigTimebase
unfoldedTimebase
_updateTimebase
_updateRTCReportingFlagsOnFigPlaybackItem
setRTCReportingFlags:
limitReadAhead
_updateLimitReadAheadOnFigPlaybackItem
setLimitReadAhead:
allowsExtendedReadAhead
setAllowsExtendedReadAhead:
preferredForwardBufferDuration
setPreferredForwardBufferDuration:
_updateMaximumTrailingBufferDurationOnFigPlaybackItem
setMaximumTrailingBufferDuration:
_updateMaximumForwardBufferDurationOnFigPlaybackItem
setMaximumForwardBufferDuration:
alwaysMonitorsPlayability
_updateAlwaysMonitorsPlayabilityOnFigPlaybackItem
setAlwaysMonitorsPlayability:
playbackLikelyToKeepUpTrigger
_updatePlaybackLikelyToKeepUpTriggerOnFigPlaybackItem
setPlaybackLikelyToKeepUpTrigger:
willNeverSeekBackwardsHint
_updateWillNeverSeekBackwardsHintOnFigPlaybackItem
setWillNeverSeekBackwardsHint:
setSavesDownloadedDataToDiskWhenDone:
continuesPlayingDuringPrerollForSeek
_updateContinuesPlayingDuringPrerollForSeekOnFigPlaybackItem
setContinuesPlayingDuringPrerollForSeek:
continuesPlayingDuringPrerollForRateChange
_updateContinuesPlayingDuringPrerollForRateChangeOnFigPlaybackItem
setContinuesPlayingDuringPrerollForRateChange:
_updateUsesIFrameOnlyPlaybackForHighRateScaledEditsOnFigPlaybackItem
setUsesIFrameOnlyPlaybackForHighRateScaledEdits:
_updateMinimumIntervalForIFrameOnlyPlaybackOnFigPlaybackItem
setMinimumIntervalForIFrameOnlyPlayback:
_updateSpeedThresholdForIFrameOnlyPlaybackOnFigPlaybackItem
setSpeedThresholdForIFrameOnlyPlayback:
_updateRefreshesClosedCaptionsImmediatelyAfterSeekingOnFigPlaybackItem
setRefreshesClosedCaptionsImmediatelyAfterSeeking:
_setAudioCurvesAccordingToInputParameters:forTrackID:
_setAudioTapProcessor:forTrackID:
_setAudioTimePitchAlgorithm:forTrackID:
_setAudioEffectParameters:forTrackID:
_applyCurrentAudioMix
setAudioMix:
_getVideoComposition:customVideoCompositorSession:figVideoCompositor:
_applyCurrentVideoComposition
_setVideoCompositionFrameDuration:
_setVideoCompositionSourceTrackIDForFrameTiming:
_setVideoCompositionRenderSize:
_setVideoCompositionRenderScale:
_setVideoCompositionColorPrimaries:
_setVideoCompositionColorYCbCrMatrix:
_setVideoCompositionColorTransferFunction:
_setVideoCompositionInstructions:
_setVideoCompositionSourceSampleDataTrackIDs:
_setVideoCompositor:
_updateSeekingWaitsForVideoCompositionRenderingOnFigPlaybackItem
setSeekingWaitsForVideoCompositionRendering:
_updateUsesMinimalLatencyForVideoCompositionRenderingOnFigPlaybackItem
_updateRestrictsAutomaticMediaSelectionToAvailableOfflineOptions
setUsesMinimalLatencyForVideoCompositionRendering:
_updateTextStyleRulesOnFigPlaybackItem
_updateTextHighlightArrayOnFigPlaybackItem
setTextStyleRules:
setTextHighlightArray:
_updateFigTimePitchAlgorithmOnFigPlaybackItem
isPlaybackLikelyToKeepUp
isPlaybackBufferFull
isPlaybackBufferEmpty
progressTowardsPlaybackLikelyToKeepUp
_updateCanUseNetworkResourcesForLiveStreamingWhilePausedOnFigPlaybackItem
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
_updateStartsOnFirstEligibleVariantOnFigPlaybackItem
setStartsOnFirstEligibleVariant:
playabilityMetrics
_seekableTimeRangesFromFPSeekableTimeIntervals:
_updateLoopTimeRangeOnFigPlaybackItem
setLoopTimeRange:
_seekableTimeRanges
_loadedTimeRangesFromFPPlaybableTimeIntervals:
_loadedTimeRanges
_playbackProperties
_updatePlaybackPropertiesOnFigPlaybackItem
setGaplessInfo:
configurationGroup
variantIndex
liveUpdateInterval
_quietlySetVariantIndex:
setVariantIndex:
_updateSoundCheckVolumeNormalizationOnFigPlaybackItem
setSoundCheckVolumeNormalization:
_updateVolumeAdjustmentOnFigPlaybackItem
setVolumeAdjustment:
_mediaOptionsSelectedByClient
_mediaOptionsSelectedByClientForKey:
_setMediaOptionsSelectedByClient:forKey:
_removeMediaOptionsSelectedByClient
_isFigAssetReadyForInspectionOfMediaSelectionOptionsAndFigPlaybackItemIsReadyForInspection
_isFigAssetReadyForInspectionOfMediaSelectionOptions
_markFigAssetAsReadyForInspectionOfMediaSelectionOptions
_applyMediaSelectionOptions
_cacheMediaSelectionOption:forMediaSelectionGroup:
_clearCachedMediaSelectionGroup:
_hasSelectionInCachedMediaSelectionGroup:
_propertyListForSelectedMediaOptionUsingFigSelectedMediaArrayObtainedFromGroup:
_selectMediaOption:inMediaSelectionGroup:
selectMediaOption:inMediaSelectionGroup:
selectMediaOptionAutomaticallyInMediaSelectionGroup:
playerAppliesAutomaticMediaSelectionToGroup:
selectedMediaOptionInMediaSelectionGroup:
_figSelectedMediaArray
_currentMediaSelectionFromFigSelectedMediaArray:
_setCurrentMediaSelection:
setRestrictsAutomaticMediaSelectionToAvailableOfflineOptions:
_updateNonForcedSubtitleDisplayEnabledOnFigPlaybackItem
_isNonForcedSubtitleDisplayEnabled
isNonForcedSubtitleDisplayEnabled
setNonForcedSubtitleDisplayEnabled:
_copyFigCPEProtector
_setTimedMetadata:
_setSyncLayersOnFigPlaybackItem
_removeSyncLayer:
_addSyncLayer:
_playbackItemNotificationPayloadToError:
_hasEnabledVideo
_hasEnabledAudio
_suppressionForOutputs:
_suppressesVideoLayers
_setSuppressesVideoLayers:
_updateVideoSuppressionOnFigPlaybackItem:basedOnOutputs:
_updateLegibleSuppressionOnFigPlaybackItem:basedOnOutputs:
_hasEnqueuedVideoFrame
setNetworkUsuallyExceedsMaxBitRate:
setAllowProgressiveSwitchUp:
setAllowProgressiveStartup:
setAllowProgressiveResume:
_updateIFramePrefetchTargetDimensionsOnFigPlaybackItem
setIFramePrefetchTargetDimensions:
_updatePreferredPeakBitRateOnFigPlaybackItem
setPreferredPeakBitRate:
_updatePreferredPeakBitRateForExpensiveNetworksOnFigPlaybackItem
setPreferredPeakBitRateForExpensiveNetworks:
maximumBitRate
setMaximumBitRate:
preferredPeakPresentationSize
setPreferredPeakPresentationSize:
_updatePreferredMaximumResolutionOnFigPlaybackItem
setPreferredMaximumResolution:
_updatePreferredMaximumResolutionForExpensiveNetworksOnFigPlaybackItem
setPreferredMaximumResolutionForExpensiveNetworks:
_updatePreferredMinimumResolutionOnFigPlaybackItem
setPreferredMinimumResolution:
_renderingSuppressionDidChangeForOutput:
setRequiresAccessLog:
setSuppressesAudioOnlyVariants:
setPrefersOfflinePlayableVariants:
_updateVariantPreferencesOnFigPlaybackItem
setVariantPreferences:
_updatePreferredMaximumAudioSampleRateOnFigPlaybackItem
setPreferredMaximumAudioSampleRate:
_updateAutoSwitchAtmosStreamVariantsOnFigPlaybackItem
setAutoSwitchAtmosStreamVariants:
_updateVideoApertureModeOnFigPlaybackItem
setVideoApertureMode:
_updateRestrictionsOnFigPlaybackItem
_updateMediaKindOnFigPlaybackItem
setMediaKind:
_updateLoudnessInfoOnFigPlaybackItem
setLoudnessInfo:
_updateAudioTapProcessorOnFigPlaybackItem
resetAudioBufferedAhead
_addInterstitialEventCollector
_addInterstitialEventCollectorLocked:
_removeInterstitialEventCollector
_removeInterstitialEventCollectorLocked:
_updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:
_updateAdvanceTimeForOverlappedPlaybackOnFigPlaybackItem
setAdvanceTimeForOverlappedPlayback:
setMaximumTimePlayedToDuringOverlappedPlayback:
maximumTimePlayedToSinceLastSeek
isAudioSpatializationAllowed
_updateAudioSpatializationAllowed
setAudioSpatializationAllowed:
_updateAllowedAudioSpatializationFormats
_updateAllowedAudioSpatializationFormatsFromFigItem
_updateItemIdentifierForCoordinatedPlayback
_playbackCoordinator
_setPlaybackCoordinator:
dispatchIVarWrite:locked:block:
_playerItem
isAuthorizationRequiredForPlayback
isApplicationAuthorizedForPlayback
isContentAuthorizedForPlayback
authorizationRequiredForPlayback
TB,R,N,GisAuthorizationRequiredForPlayback
applicationAuthorizedForPlayback
TB,R,N,GisApplicationAuthorizedForPlayback
contentAuthorizedForPlayback
TB,R,N,GisContentAuthorizedForPlayback
_isExternalProtectionRequiredForPlaybackInternal
_isExternalProtectionRequiredForPlayback
_setExternalProtectionRequiredForPlayback:
_isRental
_rentalStartDate
_rentalExpirationDate
_isRentalPlaybackStarted
_rentalPlaybackStartedDate
_rentalPlaybackExpirationDate
_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:withOptions:
_uninitializeProtectedContentPlaybackSupportSession:
_externalProtectionRequiredForPlayback
TB,N,G_isExternalProtectionRequiredForPlayback,S_setExternalProtectionRequiredForPlayback:
_rental
TB,R,N,G_isRental
_rentalPlaybackStarted
TB,R,N,G_isRentalPlaybackStarted
accessLog
errorLog
initWithWeakReferenceToPlayer:weakReferenceToPlayerItem:
playerItem
addItemToPlayQueueAfterPlaybackItemOfItem:
removeItemFromPlayQueue
_playerReference
_playerItemReference
_quietlySetEQPreset:
_setRampInOutInfo:
_setAudibleDRMInfo:
_fileSize
_availableFileSize
_videoOutputs
_legibleOutputsForKeys
_metadataOutputsForKeys
_evaluateVideoOutputs
_evaluateLegibleOutputs
_evaluateMetadataOutputs
_configureVideoCompositionColorProperties
_preferredPixelBufferAttributes
_addVideoOutput:
_addLegibleOutput:
_addMetadataOutput:
addOutput:
_removeVideoOutput:
_removeLegibleOutput:
_removeMetadataOutput:
removeOutput:
outputs
_addMetadataCollector:
_addMetadataCollector:locked:
_removeMetadataCollector:
_removeMetadataCollector:locked:
addMediaDataCollector:
addMediaDataCollector:locked:
removeMediaDataCollector:
removeMediaDataCollector:locked:
mediaDataCollectors
_metadataCollectors
_updateTaggedMetadataArray:
_quietlySetServiceIdentifier
setServiceIdentifier:
_legibleOutputForKey:
_figPlaybackItem:didOutputAttributedStrings:nativeSampleBuffers:atItemTime:withLegibleOutputsDictionaryKey:
_figPlaybackItem:didFlushLegibleOutputWithDictionaryKey:
_metadataOutputForKey:
_figPlaybackItem:didOutputSampleBuffers:fromTrackWithID:forMetadataOutputWithDictionaryKey:
_figPlaybackItem:didFlushMetadataOutputWithDictionaryKey:
setAVKitData:
T@"<NSObject><NSCopying>",&
_updateVideoEnhancementModeOnFigPlaybackItem
setVideoEnhancementMode:
setAutomaticallyHandlesInterstitialEvents:
templatePlayerItem
_setTemplatePlayerItem:
T@"AVPlayerItem",R,N
figPlaybackItemIsReadyForInspection
videoFieldMode
videoEnhancementFilterOptions
enabled
enabledWasSet
disableColorMatching
disableColorMatchingWasSet
activeHapticChannelIndex
activeHapticChannelIndexWasSet
hapticVolume
hapticVolumeWasSet
sampleBufferOutputs
playerItemTrackWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
_initWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
assetTrack
_transferEnabledToFig
setEnabled:
fallbackTrack
currentVideoFrameRate
effectiveLoudnessInfo
_transferLoudnessInfoToFig
effectiveEQPreset
willTrimShortDurationAudioSamples
_transferVideoEnhancementOptionsToFig
setVideoEnhancementFilterOptions:
_transferDisableColorMatchingToFig
setDisableColorMatching:
setActiveHapticChannelIndex:
_transferActiveHapticChannelIndexToFig
setHapticVolume:
_transferHapticVolumeToFig
_updateTrackExtractionIDArrayProperty
_figPlaybackItemIsReadyForInspection
_playerItemTrack
T@"AVAssetTrack",R,N
TB,N,GisEnabled
queuePlayerWithItems:
initWithItems:
_defaultActionAtItemEnd
advanceToNextItem
canInsertItem:afterItem:
insertItem:afterItem:
removeItem:
removeAllItems
_queuePlayer
canOverlapPlaybackFromPlayerItem:toPlayerItem:
identifierName
derivedIdentifierCounter
initWithSpecifiedName:
_specifiedLoggingIdentifier
makeDerivedIdentifier
mutableComposition
formatReaderInitializationOnce
assetInspectorInitializationOnce
tracksInitializationOnce
formatReader
assetInspectorLoader
assetInspector
URLAssetInitializationOptions
figAssetInitializationOnce
_createEmptyMutableCompositionIfNeeded
_initWithComposition:
_loadAssetInspectorAndLoaderOnce
_newTrackForIndex:
_mutableTracks
_clientProvidesNaturalSize
_setNaturalSize:
_setURLAssetInitializationOptions:error:
composition
compositionWithURLAssetInitializationOptions:
setNaturalSize:
setMetadata:
insertTimeRange:ofAsset:atTime:error:
insertTimeRange:ofAsset:atTime:completionHandler:
insertEmptyTimeRange:
removeTimeRange:
scaleTimeRange:toDuration:
addMutableTrackWithMediaType:preferredTrackID:
removeTrack:
mutableTrackCompatibleWithTrack:
_notifyTracksThatSegmentsWillChange:
_notifyTracksThatSegmentsDidChange:successfully:
metadataIdentifiers
accumulationQueue
weakReferenceToHost
advanceInterval
accumulatedMetadataGroups
initWithIdentifiers:
_collectUncollectables
_detachFromPlayerItem
advanceIntervalForDelegateInvocation
setAdvanceIntervalForDelegateInvocation:
_metadataOutputInternal
T@"<AVPlayerItemMetadataOutputPushDelegate>",R,W,N
Td,N
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
_signalFlush
_figMetadataOutputsDictionaryOptions
_pushTimedMetadataGroups:fromPlayerItemTrack:
figMetadataOutputsDictionaryOptions
T@"NSDictionary",R,N,G_figMetadataOutputsDictionaryOptions
initWithOriginalFormatDescription:andReplacementFormatDescription:
originalFormatDescription
replacementFormatDescription
_originalFormatDescription
_replacementFormatDescription
Tr^{opaqueCMFormatDescription=},R
formatDescriptionReplacements
_notifyAssetThatDurationWillChange
_notifyAssetThatDurationDidChangeWithSuccess:
_notifySelfThatSegmentsWillChange
_notifySelfThatSegmentsDidChangeWithSuccess:
setSegments:
insertTimeRange:ofTrack:atTime:error:
insertTimeRanges:ofTracks:atTime:error:
validateTrackSegments:error:
_setTrackReaderPropertyValue:forKey:
setNaturalTimeScale:
setLanguageCode:
setPreferredTransform:
setPreferredVolume:
setAlternateGroupID:
_updateTrackAssociationToTrack:type:operation:
addTrackAssociationToTrack:type:
removeTrackAssociationToTrack:type:
replaceFormatDescription:withFormatDescription:
Ti,N
T{CGAffineTransform=dddddd},N
Tf,N
T@"NSArray",C,N
cancel
initWithObject:notificationName:callbackBlock:
_object
_observerToken
_callback
_cancelMutex
subscribeRequestingInitialValue:block:
propertyValuePublisherWithObject:key:notificationName:
initWithObject:key:notificationName:
_key
_notificationName
mapPublisherWithUpstream:transform:
initWithUpstream:transform:
_upstream
_transform
switchToLatestPublisherWithUpstream:
initWithUpstream:
_callbackMutex
_outputPublisherSubscription
_publisherIndex
initWithPublisher:requestingInitialValue:sink:
_publisher
_sink
_token
style
formatTemplate
isFullWidth
isRightToLeft
cachedDateFormatterFormat
cachedDateFormatterTemplate
numberFormatterWithOneMinimumIntegerDigits
numberFormatterWithTwoMinimumIntegerDigits
stringFromCMTime:
stringFromSeconds:
stringFromTimeInterval:
stringForObjectValue:
getObjectValue:forString:errorDescription:
setStyle:
setFormatTemplate:
setFullWidth:
setIsRightToLeft:
setCachedDateFormatterFormat:
setCachedDateFormatterTemplate:
setNumberFormatterWithOneMinimumIntegerDigits:
setNumberFormatterWithTwoMinimumIntegerDigits:
fullWidth
TB,N,GisFullWidth
editAssetURL
editAssetTrackID
_initWithTimeMapping:
isEmpty
compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:
compositionTrackSegmentWithTimeRange:
initWithURL:trackID:sourceTimeRange:targetTimeRange:
initWithTimeRange:
sourceURL
sourceTrackID
empty
TB,R,N,GisEmpty
metadataWaitingSemaphore
mediaDataStorage
_movieTrackInternal
T{?={?=qiIq}{?=qiIq}},R,N
figMutableMovie
figAssetTrack
trackWithTrackID:forMovie:
initWithTrackID:forMovie:
_signalMetadataUpdated
_addFigAssetTrackNotifications
_removeFigAssetTrackNotifications
_figMutableMovie
timescale
cleanApertureDimensions
productionApertureDimensions
encodedPixelsDimensions
isModified
preferredMediaChunkSize
preferredMediaChunkDuration
preferredMediaChunkAlignment
_sizeForProperty:
_setSize:forProperty:
_stringForProperty:
_setString:forProperty:
sampleReferenceBaseURL
setSampleReferenceBaseURL:
setMediaDataStorage:
setTimescale:
setCleanApertureDimensions:
setProductionApertureDimensions:
setEncodedPixelsDimensions:
setLayer:
setModified:
setPreferredMediaChunkSize:
setPreferredMediaChunkDuration:
setPreferredMediaChunkAlignment:
_mutableMovieTrackInternal
T@"AVMediaDataStorage",C,N
T@"NSURL",C,N
modified
TB,N,GisModified
isCompatibleWithFormatDescription:
insertTimeRange:ofTrack:atTime:copySampleData:error:
appendSampleBuffer:decodeTime:presentationTime:error:
insertMediaTimeRange:intoTimeRange:
appendMediaData:dataOffset:
figAssetReader
readSingleSample
outputFinishedCallbackInvokers
errorThatOccurredBeforeStartReading
statusReadWriteQueue
assetReaderWithAsset:error:
_errorForOSStatus:
initWithAsset:error:
_tearDownFigAssetReader
_transitionToStatus:failureError:
_failWithError:
setTimeRange:
_readSingleSample
_setReadSingleSample:
_canAddOutput:exceptionReason:
canAddOutput:
_outputDidFinish:
startReading
cancelReading
_figAssetReader
T^{OpaqueFigAssetReader=},R,N,G_figAssetReader
TB,N,G_readSingleSample,S_setReadSingleSample:
T@"AVAsset",R,&,N
T{?={?=qiIq}{?=qiIq}},N
alwaysCopiesSampleData
supportsRandomAccess
currentTimeRanges
weakReferenceToAssetReader
extractionID
sampleBufferAvailabilityCondition
currentConfigurationIsFinal
extractionCompleteForCurrentConfiguration
finished
maximizePowerEfficiency
copyNextSampleBuffer
markConfigurationAsFinal
_figAssetReaderVideoScalingPropertiesFromVideoSettings:withFormatDescription:
setAlwaysCopiesSampleData:
setMaximizePowerEfficiency:
setSupportsRandomAccess:
_setFigAssetReader:
_weakReferenceToAssetReader
_attachToWeakReferenceToAssetReader:
_extractionID
_setExtractionID:
_figAssetReaderExtractionOptions
_trimsSampleDurations
_updateTimeRangesOnFigAssetReaderReturningError:
_prepareForReadingReturningError:
_enableTrackExtractionReturningError:
_isFinished
_markAsFinished
_cancelReading
_figAssetReaderSampleBufferDidBecomeAvailableForExtractionID:
resetForReadingTimeRanges:
_figAssetReaderDecodeError
_figAssetReaderFailed
T@"AVWeakReference",R,N,G_weakReferenceToAssetReader
Ti,N,G_extractionID,S_setExtractionID:
figAssetReaderExtractionOptions
T@"NSDictionary",R,N,G_figAssetReaderExtractionOptions
trimsSampleDurations
TB,R,N,G_trimsSampleDurations
track
outputSettings
weakReferenceToAttachedAdaptor
fieldMode
assetReaderTrackOutputWithTrack:outputSettings:
initWithTrack:outputSettings:
_setAttachedAdaptor:
_attachedAdaptor
_isAttachedToAdaptor
_copyNextSampleBufferForAdaptor
_formatDescriptions
_getUniformMediaSubtypeIfExists
_trackOutputInternal
attachedToAdaptor
TB,R,N,G_isAttachedToAdaptor
audioTracks
audioVolumeCurvesForTracks
audioTimePitchAlgorithmsForTracks
audioTapProcessorsForTracks
audioOutputSettings
assetReaderAudioMixOutputWithAudioTracks:audioSettings:
initWithAudioTracks:audioSettings:
audioSettings
_audioVolumeCurveForTrack:
_setAudioVolumeCurve:forTrack:
_audioTimePitchAlgorithmForTrack:
_setAudioTimePitchAlgorithm:forTrack:
_audioTapProcessorForTrack:
_setAudioTapProcessor:forTrack:
_audioMixOutputInternal
T@"AVAudioMix",C,N
videoTracks
sampleDataTrackIDs
videoOutputSettings
assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:
initWithVideoTracks:videoSettings:
videoSettings
_setVideoComposition:
_setVideoComposition:customVideoCompositorSession:
_videoCompositionProcessorColorProperties
_videoCompositionOutputInternal
assetReaderSampleReferenceOutputWithTrack:
initWithTrack:
_sampleReferenceOutputInternal
setURL:
mediaFileType
setMediaFileType:
movieFragmentInterval
setMovieFragmentInterval:
setOverallDurationHint:
shouldOptimizeForNetworkUse
setShouldOptimizeForNetworkUse:
directoryForTemporaryFiles
setDirectoryForTemporaryFiles:
metadataItems
setMetadataItems:
movieTimeScale
setMovieTimeScale:
setPreferredRate:
singlePassFileSize
setSinglePassFileSize:
singlePassMediaDataSize
setSinglePassMediaDataSize:
inputs
setInputs:
inputGroups
setInputGroups:
preferredOutputSegmentInterval
setPreferredOutputSegmentInterval:
initialSegmentStartTime
setInitialSegmentStartTime:
outputFileTypeProfile
setOutputFileTypeProfile:
initialMovieFragmentSequenceNumber
setInitialMovieFragmentSequenceNumber:
producesCombinableFragments
setProducesCombinableFragments:
usesVirtualCaptureCard
setUsesVirtualCaptureCard:
_delegate
_mediaFileType
_movieFragmentInterval
_overallDurationHint
_shouldOptimizeForNetworkUse
_directoryForTemporaryFiles
_metadataItems
_movieTimeScale
_preferredTransform
_preferredVolume
_preferredRate
_singlePassFileSize
_singlePassMediaDataSize
_inputs
_inputGroups
_preferredOutputSegmentInterval
_initialSegmentStartTime
_outputFileTypeProfile
_initialMovieFragmentSequenceNumber
_producesCombinableFragments
_usesVirtualCaptureCard
T@"NSURL",C,N,V_URL
T@"<AVAssetWriterDelegate>",W,V_delegate
T@"AVMediaFileType",C,N,V_mediaFileType
T{?=qiIq},N,V_movieFragmentInterval
T{?=qiIq},N,V_overallDurationHint
TB,N,V_shouldOptimizeForNetworkUse
T@"NSURL",C,N,V_directoryForTemporaryFiles
T@"NSArray",C,N,V_metadataItems
Ti,N,V_movieTimeScale
T{CGAffineTransform=dddddd},N,V_preferredTransform
Tf,N,V_preferredVolume
Tf,N,V_preferredRate
Tq,N,V_singlePassFileSize
Tq,N,V_singlePassMediaDataSize
T@"NSArray",C,N,V_inputs
T@"NSArray",C,N,V_inputGroups
T{?=qiIq},N,V_preferredOutputSegmentInterval
T{?=qiIq},N,V_initialSegmentStartTime
T@"NSString",C,N,V_outputFileTypeProfile
Tq,N,V_initialMovieFragmentSequenceNumber
TB,N,V_producesCombinableFragments
TB,N,V_usesVirtualCaptureCard
helper
helperReadWriteQueue
keyPathDependencyManager
finishWritingDelegate
automaticallyNotifiesObserversForKey:
assetWriter:didProduceFragmentedHeaderData:
assetWriter:didProduceFragmentedMediaData:fragmentedMediaDataReport:
assetWriter:didOutputSegmentData:segmentType:segmentReport:
assetWriter:didOutputSegmentData:segmentType:
assetWriterWithURL:fileType:error:
initWithURL:fileType:error:
initWithContentType:
initWithFileType:error:
_initInternalObject
_helper
_setHelper:ifCurrentHelper:
_setHelper:ifCurrentHelper:withBlock:
outputURL
outputFileType
availableMediaTypes
_supportsSampleReferencesReturningError:
isVirtualCaptureCardSupported
setWritesSinglePassUsingPredeterminedFileSize:mediaDataSize:
canApplyOutputSettings:forMediaType:
canAddInput:
addInput:
canAddInputGroup:
addInputGroup:
startWriting
startSessionAtSourceTime:
endSessionAtSourceTime:
cancelWriting
finishWriting
finishWritingWithCompletionHandler:
setFinishWritingDelegate:
_transitionToFailedStatusWithError:
flushSegment
T@"AVAssetWriterHelper",R,&,G_helper
initWithConfigurationState:
initWithURL:fileType:
setDefaultPropertyValuesToConfigurationState:outputURL:fileType:
_canAddInput:exceptionReason:
_canAddInputGroup:exceptionReason:
_alternateGroupID
initWithFigAssetWriter:
_callDelegateIfNotCalledWithSuccess:error:
_teardownNotificationHandlers
_handleCompletedWritingNotification
_handleFailedNotificationWithError:
_weakReferenceToDelegate
_setWeakReferenceToDelegate:
_figAssetWriter
_didNotCallDelegate
_notificationHandlersAreRegistered
weakReferenceToDelegate
T@"AVWeakReference",&,G_weakReferenceToDelegate,S_setWeakReferenceToDelegate:,V_weakReferenceToDelegate
T@"<AVAssetWriterFigAssetWriterNotificationHandlerDelegate>",W
figFragmentedMediaDataReportDict
initWithFigFragmentedMediaDataReportDictionary:
numberOfBytesToEndOfFirstVideoFrame
assetWriterInput:shouldReplaceFormatDescription:replacementFormatDescription:
transitionToFailedStatusWithError:
prepareInputsOperationsWithInputs:
finishWritingDelegateOperationWithAssetWriter:andFigAssetWriter:andDelegate:
finalStepWorkaroundOperationWithFigAssetWriter:
didReceiveFigAssetWriterNotificationWithSuccess:error:
initWithConfigurationState:assetWriter:
initWithConfigurationState:assetWriter:error:
checkConfigurationToOutputSegmentDataReturningDebugDescription:
checkAVAssetWriterInputConfigurationToOutputSegmentDataForOutputFileTypeProfile:preferredOutputSegmentInterval:returningDebugDescription:
figTrackReferences
_retainedFigAssetWriter
_makeFinishWritingOperationsWithCustomFigAssetWriterFinishOperation:
_transitionToFinishWritingHelperWithFinishWritingOperations:
_figAssetWriterAccessQueue
_startSessionCalled
_notificationHandler
_figAssetWriterCallbackContextToken
isReady
initWithConfigurationState:finishWritingOperations:figAssetWriterCallbackContextToken:
_finishWritingOperationsDidFinish
transitionToTerminalStatusOperation
_finishWritingOperations
_transitionToTerminalStatusOperation
T@"NSOperation",R,N,V_transitionToTerminalStatusOperation
isAsynchronous
start
didEnterTerminalState
initWithConfigurationState:terminalError:
_terminalError
initWithConfigurationState:terminalStatus:
_terminalStatus
_canApplyOutputSettings:forMediaType:sourceFormat:exceptionReason:
_canApplyTrackReferences:exceptionReason:
_transitionToClientInitiatedTerminalStatus:
configurationState
weakReferenceToAssetWriter
setWeakReferenceToAssetWriter:
_configurationState
_weakReferenceToAssetWriter
T@"AVAssetWriterConfigurationState",R,N,V_configurationState
T@"AVWeakReference",&,V_weakReferenceToAssetWriter
T@"AVMediaFileType",R,N
T@"<AVAssetWriterDelegate>",W
virtualCaptureCardSupported
TB,R,N,GisVirtualCaptureCardSupported
defaultInput
provisionalInputs
assetWriterInputGroupWithInputs:defaultInput:
assetWriterInputGroupWithInputs:provisionalInputs:defaultInput:
initWithInputs:defaultInput:
_startObservingInputPropertiesThatMayChangeValueOfOptions
_stopObservingInputPropertiesThatMayChangeValueOfOptions
options
initWithInputs:provisionalInputs:defaultInput:
mediaSelectionOptionWithPropertyList:
assetWriterInputSelectionOptionWithAssetWriterInput:
assetWriterInputSelectionOptionWithAssetWriterInput:displaysNonForcedSubtitles:
initWithAssetWriterInput:displaysNonForcedSubtitles:
_hasEqualValueForKey:asObject:
_ancillaryDescription
mediaSubTypes
_taggedCharacteristics
_isAuxiliaryContent
_isDesignatedDefault
associatedMediaSelectionOptionInMediaSelectionGroup:
propertyList
sourceFormatHint
displaysNonForcedSubtitles
_input
_outputSettings
_sourceFormatHint
_languageCode
_extendedLanguageTag
_metadata
_displaysNonForcedSubtitles
_enabled
T@"NSString",R,N,V_mediaType
T@"NSDictionary",R,N,V_outputSettings
T^{opaqueCMFormatDescription=},R,N,V_sourceFormatHint
T@"NSString",R,N,V_languageCode
T@"NSString",R,N,V_extendedLanguageTag
T@"NSArray",R,N,V_metadata
T@"NSDictionary",R,N,V_trackReferences
TB,R,N,V_displaysNonForcedSubtitles
T@"AVAssetWriterInput",R,N,V_input
initWithCoordinator:reason:
_figSuspension
endProposingNewTime:
reason
beginDate
_reason
_coordinator
_beginDate
_iVarMutex
T@"NSString",R,N,V_reason
T@"NSDate",R,N,V_beginDate
initWithParticipantIdentifier:readyToPlay:suspensionReasons:
suspensionReasons
isReadyToPlay
_suspensionReasons
_readyToPlay
_identifier
T@"NSArray",R,N,V_suspensionReasons
readyToPlay
TB,R,N,GisReadyToPlay,V_readyToPlay
T@"NSUUID",R,N,V_identifier
otherParticipants
beginSuspensionForReason:
_endSuspension:
_endSuspension:proposingNewTime:
expectedItemTimeAtHostTime:
setParticipantLimit:forWaitingOutSuspensionsWithReason:
participantLimitForWaitingOutSuspensionsWithReason:
setSuspensionReasonsThatTriggerWaiting:
suspensionReasonsThatTriggerWaiting
setPauseSnapsToMediaTimeOfOriginator:
pauseSnapsToMediaTimeOfOriginator
_currentWaitingPoliciesArray
playbackCoordinator:identifierForPlayerItem:
playbackCoordinator:interstitialTimeRangesForPlayerItem:
initWithPlayer:
_addFigPlaybackCoordinatorListeners:
_removeFigPlaybackCoordinatorListeners
setFigPlaybackCoordinator:
_copyFigPlaybackCoordinator
figPlaybackCoordinatorConfigQueue
_setMediumCallbacksOnFigPlaybackCoordinator:
identifierForPlayerItem:
interstitialTimeRangesForPlayerItem:
_setLocalParticipantUUID:onFigPlaybackCoordinator:
_setIsInExpanseMediaPlaybackOnAVAudioSession
avfParticipantsForFigParticipantsUUIDs:
_updateOtherParticipantsUsingFigParticipantUUIDs:
participantForIdentifier:
setCoordinationMediumDelegate:
coordinationMediumDelegate
setMediumLoggingIdentifier:
mediumLoggingIdentifier
trackedTransportControlStateDictionaries
_updateTransportControlStateDictionaryWithTransportControlState:
_transportControlStateForItemIdentifier:
_removeUnusedTransportControlStates
_removeAllTransportControlStates
participantStates
_updateParticipantStateDictionaryWithParticipantState:
_participantStateForIdentifier:
_removeParticipantStateWithIdentifier:
_removeAllParticipantStates
_replaceParticipantStates:
handleNewTransportControlStateDictionary:
handleNewParticipantStateDictionary:
handleReplacementParticipantStateDictionaries:
handleRemovalOfParticipant:
_updateSuspensionReasons:
currentSuspensions
_synchronizeFigPlayerEvents
_updateWaitingPoliciesArrayWithPolicies:
_setWaitingPolicies:onFigPlaybackCoordinator:
_doesSuspensionReasonTriggerWaiting:
_weakPlayer
_figPlaybackCoordinatorConfigQueue
_figPlaybackCoordinator
_otherParticipants
_controlStates
_participantStates
_participantLimitPerSuspensionReason
_suspensionReasonsThatTriggerWaiting
_pauseSnapsToMediaTimeOfOriginator
_waitingPoliciesArray
_currentSuspensions
_suspensionsChangedNotificationToken
_participantsChangedNotificationToken
_didIssueCommandToPlaybackObjectNotificationToken
_coordinationMediumDelegate
_isInExpanseMediaPlayback
_mediumLoggingIdentifier
T@"<AVPlayerPlaybackCoordinatorDelegate>",W
playbackCoordinator:broadcastTransportControlStateDictionary:forItemWithIdentifier:
playbackCoordinator:broadcastLocalParticipantStateDictionary:
playbackCoordinator:reloadTransportControlStateForItemWithIdentifier:completionHandler:
outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
sharedAuthorizationSession
initWithOutputDeviceAuthorizationSessionImpl:
outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:
outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:
outputDeviceAuthorizationSessionImplDidExpireWithReplacementImpl:
_ivars
T@"<AVOutputDeviceAuthorizationSessionDelegate>",W
initWithOutputDeviceAuthorizationRequestImpl:
outputDevice
authorizationTokenType
respondWithAuthorizationToken:completionHandler:
T@"AVOutputDevice",R,N
setOutputSettings:
setSourceFormatHint:
setTrackID:
sourcePixelBufferAttributes
setSourcePixelBufferAttributes:
transform
setTransform:
mediaTimeScale
setMediaTimeScale:
expectsMediaDataInRealTime
setExpectsMediaDataInRealTime:
marksOutputTrackAsEnabled
setMarksOutputTrackAsEnabled:
setProvisionalAlternateGroupID:
setTrackReferences:
performsMultiPassEncodingIfSupported
setPerformsMultiPassEncodingIfSupported:
mediaDataLocation
setMediaDataLocation:
_trackID
_sourcePixelBufferAttributes
_mediaTimeScale
_expectsMediaDataInRealTime
_naturalSize
_marksOutputTrackAsEnabled
_layer
_provisionalAlternateGroupID
_performsMultiPassEncodingIfSupported
_chunkDuration
_chunkAlignment
_chunkSize
_mediaDataLocation
_sampleReferenceBaseURL
_maximizePowerEfficiency
T@"NSString",C,N,V_mediaType
T@"AVOutputSettings",C,N,V_outputSettings
T^{opaqueCMFormatDescription=},&,N,V_sourceFormatHint
Ti,N,V_trackID
T@"NSDictionary",C,N,V_sourcePixelBufferAttributes
T{CGAffineTransform=dddddd},N,V_transform
Ti,N,V_mediaTimeScale
TB,N,V_expectsMediaDataInRealTime
T{CGSize=dd},N,V_naturalSize
T@"NSString",C,N,V_languageCode
T@"NSString",C,N,V_extendedLanguageTag
TB,N,V_marksOutputTrackAsEnabled
Tq,N,V_layer
Ts,N,V_alternateGroupID
Ts,N,V_provisionalAlternateGroupID
T@"NSDictionary",C,N,V_trackReferences
TB,N,V_performsMultiPassEncodingIfSupported
T{?=qiIq},N,V_chunkDuration
Tq,N,V_chunkAlignment
Tq,N,V_chunkSize
T@"NSString",C,N,V_mediaDataLocation
T@"NSURL",C,N,V_sampleReferenceBaseURL
TB,N,V_maximizePowerEfficiency
helperQueue
numberOfAppendFailures
markAsFinishedCalled
appendFailureReadWriteQueue
passDescriptionResponder
assetWriterInputWithMediaType:outputSettings:
assetWriterInputWithMediaType:outputSettings:sourceFormatHint:
initWithMediaType:outputSettings:
initWithMediaType:outputSettings:sourceFormatHint:
_setWeakReferenceToAssetWriter:
_tellAssetWriterToTransitionToFailedStatusWithError:
_setHelper:
_outputSettingsObject
outputTrackID
_setAlternateGroupID:
_setProvisionalAlternateGroupID:
writesMediaDataToBeginningOfFile
setWritesMediaDataToBeginningOfFile:
_pixelBufferPool
_setSourcePixelBufferAttributes:
_prepareForWritingWithFigAssetWriter:mediaFileType:error:
_didStartInitialSession
_prepareToEndSession
_prepareToFinishWritingReturningError:
_transitionToTerminalStatus:
canPerformMultiplePasses
currentPassDescription
respondToEachPassDescriptionOnQueue:usingBlock:
_appendSampleBuffer:error:
appendSampleBuffer:
_appendPixelBuffer:withPresentationTime:
markAsFinished
_markAsFinishedCalled
markCurrentPassAsFinished
canAddTrackAssociationWithTrackOfInput:type:
addTrackAssociationWithTrackOfInput:type:
associatedInputsWithTrackAssociationType:
TB,R,G_markAsFinishedCalled
T@"AVAssetWriterInputHelper",&,N,G_helper,S_setHelper:
T@"NSDictionary",C,N,G_sourcePixelBufferAttributes,S_setSourcePixelBufferAttributes:
pixelBufferPool
T^{__CVPixelBufferPool=},R,N,G_pixelBufferPool
outputSettingsObject
T@"AVOutputSettings",R,N,G_outputSettingsObject
Tq,R,N,G_status
T@"AVWeakReference",&,N,G_weakReferenceToAssetWriter,S_setWeakReferenceToAssetWriter:
Ts,N,G_alternateGroupID,S_setAlternateGroupID:
Ts,N,G_provisionalAlternateGroupID,S_setProvisionalAlternateGroupID:
T@"NSDictionary",R,N,G_trackReferences
Tr^{opaqueCMFormatDescription=},R,N
TB,R,N,GisReadyForMoreMediaData
keyPathsForValuesAffectingCanPerformMultiplePasses
_validateLanguageCode:
_canAddTrackAssociationWithTrackOfInput:type:exceptionReason:
canStartRespondingToEachPassDescriptionReturningReason:
transitionToAndReturnTerminalHelperWithTerminalStatus:
mediaDataRequesterShouldRequestMediaData
initWithConfigurationState:assetWriterTrack:error:
_nudgeMediaDataRequesterIfAppropriate:
_startObservingReadyForMoreMediaDataKeyPath
_stopObservingReadyForMoreMediaDataKeyPath
didStartInitialSession
beginPassIfAppropriate
appendSampleBuffer:error:
appendPixelBuffer:withPresentationTime:
prepareToEndSession
prepareToFinishWritingReturningError:
markAsFinishedAndTransitionCurrentHelper:
_assetWriterTrack
setCurrentPassDescription:
_mediaDataRequester
_observingSelf
_currentPassDescription
_keyPathDependencyManager
_mediaDataRequesterSerialQueue
_readyForMoreMediaDataObserverSerialQueue
assetWriterTrack
T@"AVFigAssetWriterTrack",R,N,G_assetWriterTrack,V_assetWriterTrack
T@"AVAssetWriterInputPassDescription",&,N,V_currentPassDescription
initWithWritingHelper:
startPassAnalysis
shouldRespondToInitialPassDescription
_writingHelper
_initialPassDescription
requestMediaDataOnceIfNecessaryWithMediaDataRequester:
_didRequestMediaDataOnce
transitionAssetWriterAndAllInputsToFailedStatusWithError:
weakReferenceToAssetWriterInput
setWeakReferenceToAssetWriterInput:
_weakReferenceToAssetWriterInput
T@"AVAssetWriterInputConfigurationState",R,N,V_configurationState
T@"AVWeakReference",&,V_weakReferenceToAssetWriterInput
T@"AVOutputSettings",R,N
T^{opaqueCMFormatDescription=},R,N
Ts,N
T@"AVAssetWriterInputPassDescription",R,N
T^{__CVPixelBufferPool=},R,N
assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:
initWithAssetWriterInput:sourcePixelBufferAttributes:
assetWriterTrackWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:attachedAdaptor:error:
initWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:error:
_figAssetWriterDidDropBelowLowWaterLevelForTrackID:
_refreshAboveHighWaterLevel
encoderSupportsMultiPass
isAboveHighWaterLevel
beginPassReturningError:
addSampleBuffer:error:
addPixelBuffer:atPresentationTime:error:
endPassWithCompletionHandler:
markEndOfDataReturningError:
setFigMetadata:
setFigTrackMatrix:
setFigDimensions:
setTrackVolume:
setExcludeFromAutoSelection:
setPreferredChunkDuration:
setPreferredChunkAlignment:
setPreferredChunkSize:
setFormatDescriptions:
_attachToFigAssetWriterUsingFormatSpecification:sourcePixelBufferAttributes:multiPass:error:
sampleBufferCoalescingInterval
setSampleBufferCoalescingInterval:
figAssetWriter
_aboveHighWaterLevelQueue
_aboveHighWaterLevel
_sampleBufferCoalescingInterval
_operationQueue
T^{OpaqueFigAssetWriter=},R,N,V_figAssetWriter
T@"AVMediaFileType",R,N,V_mediaFileType
Ti,R,N,V_trackID
aboveHighWaterLevel
TB,R,GisAboveHighWaterLevel
T{?=qiIq},N,V_sampleBufferCoalescingInterval
_flushPendingSampleBuffersReturningError:
_pendingAudioSampleBuffers
initWithRequestQueue:requestBlock:
_collectUncollectables_invokedFromDeallocAndFinalize
requestMediaDataIfNecessary
requestQueue
_requestQueue
_requestBlock
T@"NSObject<OS_dispatch_queue>",R,N,V_requestQueue
T@"<AVAssetWriterInputMediaDataRequesterDelegate>",W
initWithCallbackQueue:block:
respondToNewPassDescription:
_releaseAndClearCallbackBlock_invokeOnSerializationQueue
stopRespondingToPassDescriptions
_hasStoppedResponding
_callbackQueue
_stoppedResponding
_serializationQueue
_hasRespondedAtLeastOnce
_mostRecentPassDescription
_callbackBlock
initWithFigAssetWriter:trackID:
_notifyWhetherMorePassesAreNeeded:timeRanges:forTrackWithID:
descriptionForNextPass
_nextPassDescription
T@"AVAssetWriterInputPassDescription",R,N,V_nextPassDescription
timeRanges
initWithTimeRanges:
sourceTimeRanges
backgroundColor
layerInstructions
enablePostProcessing
blendingTransferFunction
requiredSourceSampleDataTrackIDs
containsTweening
requiredSourceTrackIDs
passthroughTrackID
_deepCopy
setBackgroundColor:
setLayerInstructions:
setEnablePostProcessing:
setBlendingTransferFunction:
setRequiredSourceSampleDataTrackIDs:
dictionaryRepresentation
_setValuesFromDictionary:
_instruction
T^{CGColor=},R,&,N
videoCompositionInstruction
_mutableInstruction
T^{CGColor=},&,N
transformRamps
opacityRamps
cropRectangleRamps
_setTransformRamps:
_setOpacityRamps:
_setCropRectangleRamps:
_setTransformRampFromStartTransform:toEndTransform:timeRange:selector:
setTransform:atTime:
setTransformRampFromStartTransform:toEndTransform:timeRange:
getTransformRampForTime:startTransform:endTransform:timeRange:
_setOpacityRampFromStartOpacity:toEndOpacity:timeRange:selector:
setOpacity:atTime:
setOpacityRampFromStartOpacity:toEndOpacity:timeRange:
getOpacityRampForTime:startOpacity:endOpacity:timeRange:
_setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:selector:
setCropRectangle:atTime:
setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:
getCropRectangleRampForTime:startCropRectangle:endCropRectangle:timeRange:
dictionaryRepresentationWithTimeRange:
_setValuesFromDictionary:timeRange:
_layerInstruction
videoCompositionLayerInstructionWithAssetTrack:
videoCompositionLayerInstruction
_mutableLayerInstruction
changeSeed
builtInCompositorName
customCompositorClass
frameDuration
sourceTrackIDForFrameTiming
renderSize
renderScale
colorPrimaries
colorYCbCrMatrix
colorTransferFunction
instructions
auxiliaryTrackLayerSetLast
animationTool
sourceSampleDataTracks
videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:
renderContextChanged:
startVideoCompositionRequest:
requiredPixelBufferAttributesForRenderContext
cancelAllPendingVideoCompositionRequests
anticipateRenderingUsingHint:
prerollForRenderingUsingHint:
supportsWideColorSourceFrames
supportsHDRSourceFrames
canConformColorOfSourceFrames
videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:
videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:
videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:
videoCompositionWithPropertiesOfAsset:
videoCompositionWithPropertiesOfAsset:completionHandler:
videoCompositionWithPropertiesOfAsset:videoGravity:
_changeSeed
_bumpChangeSeed
setBuiltInCompositorName:
customVideoCompositorClass
setCustomVideoCompositorClass:
_copyFigVideoCompositor:andSession:recyclingSession:forFigRemaker:error:
setFrameDuration:
setSourceTrackIDForFrameTiming:
setRenderSize:
setRenderScale:
setInstructions:
_hasLayerAsAuxiliaryTrack
_auxiliaryTrackLayer
_auxiliaryTrackID
_hasPostProcessingLayers
_postProcessingVideoLayer
_postProcessingVideoLayers
_postProcessingRootLayer
setAnimationTool:
sourceSampleDataTrackIDs
setSourceSampleDataTrackIDs:
_serializableInstructions
instructionForFigInstruction:
_isValidReturningExceptionReason:
isValidForAsset:timeRange:validationDelegate:
determineValidityForAsset:timeRange:validationDelegate:completionHandler:
_setFrameDurationForFrameRate:sourceTrackIDForFrameTiming:
setColorPrimaries:
setColorYCbCrMatrix:
setColorTransferFunction:
_videoComposition
T#,R,N
T@"AVVideoCompositionCoreAnimationTool",R,&,N
videoCompositionOutputColorPropertiesWithCustomCompositor:formatDescriptions:colorPrimaries:transferFunction:yCbCrMatrix:
_mutableVideoCompositionWithAsset:applyingCIFiltersWithHandler:
videoCompositionWithAsset:applyingCIFiltersWithHandler:
videoCompositionWithAsset:applyingCIFiltersWithHandler:completionHandler:
videoCompositionWithPropertiesOfAsset:prototypeInstruction:
videoCompositionWithPropertiesOfAsset:prototypeInstruction:completionHandler:
_mutableVideoComposition
T#,&,N
T@"AVVideoCompositionCoreAnimationTool",&,N
videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:inLayer:
initWithMagicTrackID:animationLayer:videoLayers:
_videoCompositionTool
animationLayer
auxiliaryTrackID
postProcessingVideoLayers
unusedTrackID
findUnusedTrackIDWithCompletionHandler:
figExportSession
audioTrackGroupHandling
metadataItemFilter
handler
allExportPresets
exportPresetsCompatibleWithAsset:
determineCompatibilityOfExportPreset:withAsset:outputFileType:completionHandler:
exportSessionWithAsset:presetName:
maximumDurationForPreset:properties:
estimatedOutputFileLengthForPreset:duration:properties:
keyPathsForValuesAffectingEstimatedOutputFileLength
estimateMaximumDurationWithCompletionHandler:
estimateOutputFileLengthWithCompletionHandler:
initWithAsset:presetName:
presetName
supportedFileTypes
determineCompatibleFileTypesWithCompletionHandler:
setOutputFileType:
setOutputURL:
progress
AVExportSessionExportAsynchronouslyCompletionHandler
exportAsynchronouslyWithCompletionHandler:
cancelExport
maxDuration
setMinVideoFrameDuration:
minVideoFrameDuration
setVideoFrameRateConversionAlgorithm:
videoFrameRateConversionAlgorithm
setPreserveSyncFrames:
preserveSyncFrames
estimatedOutputFileLength
setMetadataItemFilter:
fileLengthLimit
setFileLengthLimit:
setAudioTrackGroupHandling:
canPerformMultiplePassesOverSourceMediaData
setCanPerformMultiplePassesOverSourceMediaData:
_exportSession
_threadSafetyQ
_trackIDsNotProvidingMedia
_allowableMIMETypes
_figManifold
_typeIdOfInitialFigManifold
_accumulatedInitializationData
_encounteredStreamDiscontinuity
_legacyStreamSession
_defaultContentKeySession
_contentKeySession
_sessionKeyRequest
_startedUsingInternalContentKeySession
_currentTrackID
_tracksBecomingReadyByTrackID
_samplesBeforeReady
_samplesBeforeReadyTotalSize
_samplesBeforeReadyTotalDuration
_trackDecryptorsByTrackID
_trackFormatDescriptionsByTrackID
streamDataParser:didFailToParseStreamDataWithError:
streamDataParser:didParseStreamDataAsAsset:withDiscontinuity:
canParseExtendedMIMEType:
_willDeallocOrFinalize
status2
setStatus:
appendStreamData:
_setError:
setAllowableMIMETypes:
allowableMIMETypes
fullListOfAllowableMIMETypes
_appendStreamData:withFlags:
appendStreamData:withFlags:
providePendingMediaData
setShouldProvideMediaData:forTrackID:
shouldProvideMediaDataForTrackID:
_createAssetIfNecessary
_parser
T@"<AVStreamDataParserOutputHandling>",R,N
outputMIMECodecParameterForInputMIMECodecParameter:
streamDataParser:didProvideMediaData:forTrackID:mediaType:flags:
streamDataParser:didReachEndOfTrackWithTrackID:mediaType:
streamDataParser:didProvideContentKeySpecifier:forTrackID:
streamDataParserWillProvideContentKeyRequestInitializationData:forTrackID:
streamDataParser:didProvideContentKeyRequestInitializationData:forTrackID:
_figManifold:pushedSampleBuffer:trackID:flags:
_figManifold:trackDidEnd:
_figManifold:formatDescription:orDecryptorDidChange:forTrackID:
_registerForFigManifoldCallbacksForTrackID:
_unregisterForFigManifoldCallbacksForTrackID:
_figManifoldAllNewTracksReady:
_figManifold:discoveredNewTrackID:mediaType:
_WebVTTIsAllowed
_MPEG2TSIsAllowed
_MovieFragmentStreamIsAllowed
_ICYIsAllowed
_fullListOfAllowableMIMETypes
_createFigManifoldWithBlockBuffer:manifold:
_createBlockBufferUsingNSData:withOffset:withLength:
_createNSDataWithBlockBuffer:
contentKeySession:didProvideContentKeyRequest:
contentKeySession:didProvideContentKeyRenewalRequest:
contentKeySessionContentProtectionSessionIdentifierDidChange:
contentKeySession:didProvideRenewingContentKeyRequest:
contentKeySession:didProvidePersistableContentKeyRequest:
contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:
contentKeySession:contentKeyRequest:didFailWithError:
contentKeySession:shouldRetryContentKeyRequest:reason:
contentKeySession:contentKeyRequestDidSucceed:
contentKeySessionDidGenerateExpiredSessionReport:
contentProtectionSessionIdentifier
processContentKeyResponseData:forTrackID:
processContentKeyResponseError:forTrackID:
renewExpiringContentKeyResponseDataForTrackID:
streamingContentKeyRequestDataForApp:contentIdentifier:trackID:options:error:
T@"NSData",R
hasProtector
setSession:
initWithMediaDataConsumer:requestQueue:requestBlock:
startRequestingMediaData
_setInvalidatePending
_isInvalidatePending
_requestMediaDataIfReady
requestBlock
_mediaDataConsumer
_invalidateMutex
_invalidatePending
T@?,R,N,V_requestBlock
openCommunicationChannelWithOptions:completionHandler:
parentOutputDevice
setParentOutputDevice:
T@"AVOutputDevice",W
initWithDeviceID:syncController:
_saveCommChannel:forUUID:
_didReceiveData:fromDeviceWithID:fromChannelWithUUID:
_didCloseCommChannelWithUUID:forDeviceWithID:
_parentOutputDevice
_deviceID
_communicationChannelsForUUIDs
T@"AVOutputDevice",W,V_parentOutputDevice
initWithDeviceID:channelUUID:syncController:
_commChannelUUID
oldPlayerItems
synchronizedLayerWithPlayerItem:
_isVisible
_popAllOldPlayerItems
_removeSelfFromPlayerItem:
_updatePlayerItemState
setPlayerItem:
_syncLayer
T@"AVPlayerItem",&,N
MACAddress
communicationChannelDelegate
commChannelManager
outputDevice:didReceiveData:fromCommunicationChannel:
outputDevice:didCloseCommunicationChannel:
sharedLocalDevice
localDeviceDidChange
initWithOutputDeviceImpl:commChannelManager:
deviceName
deviceID
hasBatteryLevel
modelSpecificInformation
outputDeviceImplDidChangeVolume:
outputDeviceImplDidChangeCanChangeVolume:
outputDeviceImplDidChangeVolumeControlType:
outputDeviceImplDidChangeProposedGroupID:
setCurrentBluetoothListeningMode:
openCommunicationChannelToDestination:options:completionHandler:
setCommunicationChannelDelegate:
communicationChannelManager:didReceiveData:fromCommunicationChannel:
communicationChannelManager:didCloseCommunicationChannel:
configureUsingBlock:completionHandler:
updateFrecencyScore
frecencyScore
_outputDevice
updateFrecencyListForDeviceID:
frecencyScoreForDeviceID:
_applicationSupportPath
_frecentsContainerPath
_frecentsFilePath
_frecentsReaderAfterMigrationIfNecessary
_migrateFrecentsFromCFPreferencesToFrecentsFilePath:
_frecentsWriter
frecencyInfoForDeviceWithID:
deviceIDs
initWithFrecentsFilePath:error:
_frecents
setFrecencyInfo:forDeviceID:
removeFrecencyInfoForDeviceID:
persistToDiskReturningError:
numberOfKeysToBeSet
initWithFrecentsFilePath:
defaultFrecentsReader
defaultFrecentsWriter
_updatedFrecentsList
_keysToRemove
publicKey
isAdmin
initWithID:publicKey:hasAdministratorPrivileges:
peerID
hasAdministratorPrivileges
playing
productName
pairedDevicesConnectedToOutputDevice:
initWithName:ID:modelID:playing:productName:
pairedDeviceID
isPlaying
TB,R,N,GisPlaying
_implSupportEventListener
T@"<AVOutputDeviceImplSupport>",W,V_implSupportEventListener
communicationChannel:didReceiveData:
communicationChannelDidClose:
initWithOutputDeviceCommunicationChannelImpl:
communicationChannelImpl:didReceiveData:
communicationChannelImplDidClose:
T@"<AVOutputDeviceCommunicationChannelDelegate>",W
initWithDeviceID:deviceName:deviceSubType:isClusterLeader:modelID:
_deviceType
_deviceSubType
_isClusterLeader
_modelID
_deviceName
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_deviceID
Tq,R,N,V_deviceType
Tq,R,N,V_deviceSubType
TB,R,N,V_isClusterLeader
T@"NSString",R,N,V_modelID
createVideoQueue:
setControlTimebase:
_setSynchronizerTimebase:error:
_readOnlyVideoQueueTimebase
_initializeTimebases
_createVideoQueue:errorStep:
_isCreateVideoQueueErrorRetryable:
_copyVideoQueue
_hasEverEnqueued
_setStatus:error:
_resetStatusWithOSStatus:
_setOutputObscuredDueToInsufficientExternalProtection:
currentFigVideoQueueFactory
_addFigVideoQueueListeners
_removeFigVideoQueueListeners
_setRequiresFlushToResumeDecoding:
_setCreateVideoQueueFailedWithOSStatus:
_createVideoQueueFailed
controlTimebase
setDisplayLayerVisibility:
_STSLabelPublisher
_displayLayer
setContentKeySession:
attachToContentKeySession:contentKeyBoss:failedSinceAlreadyAttachedToAnotherSession:
attachedToExternalContentKeySession
_enqueueSingleSampleBuffer:bufferEnqueueingInfo:
enqueueSampleBuffer:bufferEnqueueingInfo:
flushAndRemoveImage
flushWithRemovalOfDisplayedImage:completionHandler:
_flushComplete
_callOldPrerollCompletionHandlerWithSuccess:andSetNewPrerollCompletionHandler:forRequestID:
_completedDecodeForPrerollForRequestID:
prerollDecodeWithCompletionHandler:
requiresFlushToResumeDecoding
addSampleBufferDisplayLayer:
_updateVideoTargetsOnVideoQueue
_setContentLayerOnFigVideoQueue:
_videoQueue
_outputObscured
_weakDisplayLayer
_figVideoTargets
_preventsDisplaySleepDuringVideoPlayback
_requiresFlushToResumeDecoding
_isRequestingMediaData
_serialQueue
_videoQueueQueue
_layerQueue
_weakReferenceToSynchronizer
_addedToSynchronizer
_controlTimebaseSetByUserIsInUse
_controlTimebaseSetByUser
_readOnlyRenderingTimebase
_flushCallbackListQueue
_flushCallbackQueue
_flushCallbacks
_queueForProtectingPrerollCompleteCallback
_pendingPrerollCompleteCallback
_pendingPrerollRequestID
_queueForCallingPrerollCompleteCallback
_upcomingPTSExpectation
_minimumUpcomingPTS
_weakContentKeySession
_lastFormatDescription
_lastCryptor
_didFinishSuspensionNotificationToken
setPreventsCapture:
preventsCapture
_setUpcomingPresentationTimeExpectations:minimumPresentationTime:
expectMinimumUpcomingSampleBufferPresentationTime:
expectMonotonicallyIncreasingUpcomingSampleBufferPresentationTimes
resetUpcomingSampleBufferPresentationTimeExpectations
_updateVideoOutputs
T@"NSString",C,N,G_STSLabel
metadataEnumeratorWithMetadataReader:
metadataEnumeratorWithArray:key:keySpace:locale:
initWithMetadataReader:
initWithArray:key:keySpace:locale:
initWithMetadataReader:array:key:keySpace:locale:
_setMetadataReader:
_setArrayEnumerator:
_setKey:
_setKeySpace:
_setLocale:
_reader
_arrayEnumerator
_keySpace
_locale
_index
initWithFigEndpoint:
_figEndpointPropertyValueForKey:
figEndpoint
_endpointVolumeControlTypeDidChangeForEndpointWithID:
_canSetEndpointVolumeDidChangeForEndpointWithID:
_weakObserver
_figEndpoint
figEndpointOutputDeviceImpl
outputDeviceWithFigEndpoint:
outputDeviceWithFigEndpoint:routingContextFactory:
initWithEndpoint:
_endpoint
requestWithRequest:id:
initWithRequest:id:
customURLRequest
setCustomURLRequest:
customURLResponse
setCustomURLResponse:
requestID
metrics
setMetrics:
_requestID
_customURLRequest
_customURLResponse
_metrics
TQ,R,N,V_requestID
T@"NSURLSessionTaskMetrics",&,N,V_metrics
sendH2Ping:pongHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_registerRequest:id:forDataTask:
_unregisterRequestForDataTask:
_lookupRequestForDataTask:
_handleRequest:requestID:canHandleRequestOut:
_cancelRequestID:
initWithFigAsset:
session
_taskToRequest
_session
_handler
T@"NSURLSession",&,N,V_session
connection
setConnection:
bridge
setBridge:
_bridge
_connection
T@"AVAssetCustomURLBridgeForNSURLProtocol",W,N,V_bridge
T^{_CFURLConnection=},N
_cancelPendingRequests
_handleRequest:requestID:
_cancelAndFinishRequest:error:
_didFinish:error:
_willSendRequest:request:redirectionResponse:
_didReceiveResponse:response:
_didReceiveData:data:
_requestIDToDownload
copyKeychainCredentialForUrl:
sendAuthResponse:requestID:disposition:credential:authHandler:
_handleAuthChallenge:requestID:canHandleRequestOut:
timeMapping
T{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}},R,N,V_timeMapping
inputParameters
setInputParameters:
audioMixInputParametersForTrackID:
_audioMix
_mutableAudioMix
effectParameters
setEffectParameters:
_setVolumeRampFromStartVolume:toEndVolume:timeRange:rampMode:
_setVolume:atTime:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
setVolumeRampFromStartVolume:toEndVolume:timeRange:rampMode:
setVolume:atTime:
getVolumeRampForTime:startVolume:endVolume:timeRange:
getVolumeRampForTime:startVolume:endVolume:timeRange:rampMode:
_setScheduledAudioParameters:
_audioVolumeCurve
_volumeCurveAsString
_inputParameters
Tr^{opaqueMTAudioProcessingTap=},R,&,N
audioMixInputParametersWithTrack:
audioMixInputParameters
_mutableInputParameters
Tr^{opaqueMTAudioProcessingTap=},&,N
audioMixInputParametersWithAssetTrack:introFadeDuration:fadeOutStart:fadeOutDuration:
outputDeviceFeatures
applicationPID
applicationPIDWasSet
outputContextOutgoingCommunicationChannelDidBecomeAvailable:
outputContext:didReceiveData:fromCommunicationChannel:
outputContext:didCloseCommunicationChannel:
defaultOutputContextImplClass
sharedAudioPresentationOutputContext
auxiliaryOutputContext
sharedSystemAudioContext
sharedSystemScreenContext
sharedSystemRemotePoolContext
iTunesAudioContext
addSharedAudioOutputContext
allSharedAudioOutputContexts
defaultSharedOutputContext
outputContextForControllingOutputDeviceGroupWithID:options:
outputContextForControllingOutputDeviceGroupWithID:
outputContextForID:
resetOutputDeviceForAllOutputContexts
outputContextExistsWithRemoteOutputDevice
initWithOutputContextImpl:
contextID
outputContextType
applicationProcessID
getApplicationProcessID:
setApplicationProcessID:
setOutputDevice:options:completionHandler:
setOutputDevice:forFeatures:
setOutputDevice:options:
outputContextImpl:didInitiateDestinationChange:
outputContextImpl:didChangeOutputDeviceWithInitiator:
outputContextImplDidChangeGlobalOutputDeviceConfiguration:
supportsMultipleOutputDevices
supportsMultipleBluetoothOutputDevices
outputContextImpl:didChangeOutputDevicesWithInitiator:reason:deviceID:previousDeviceIDs:
setOutputDevices:
setOutputDevices:options:completionHandler:
addOutputDevice:options:completionHandler:
addOutputDevice:
removeOutputDevice:options:completionHandler:
removeOutputDevice:
predictedOutputDevice
outputContextImplDidChangePredictedOutputDevice:
resetPredictedOutputDevice
providesControlForAllVolumeFeatures
outputContextImplDidChangeProvidesControlForAllVolumeFeatures:
outputContextImplDidChangeVolume:
outputContextImplDidChangeCanSetVolume:
outputContextImplDidChangeVolumeControlType:
outgoingCommunicationChannel
openCommunicationChannelWithOptions:error:
outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:
outputContextImpl:didReceiveData:fromCommunicationChannel:
outputContextImpl:didCloseCommunicationChannel:
outputContextImpl:didExpireWithReplacement:
initWithOutputContextCommunicationChannelImpl:
T@"<AVOutputContextCommunicationChannelImpl>",R,N
markAsInProgress
markAsFailed
markAsCancelledWithReason:
_setStatus:cancellationReason:
outputContextManagerForAllOutputContexts
initWithOutputContextManagerImpl:
outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:
outputContextManagerImplDidExpireWithReplacementImpl:
assetPlaybackAssistantWithAsset:
_playbackConfigurationOptions
loadPlaybackConfigurationOptionsWithCompletionHandler:
runLoopStateWithRunLoop:
initWithRunLoop:
runLoop
signalSource
setSignalSource:
signaled
setSignaled:
_runLoop
_signalSource
_signaled
T^{__CFRunLoop=},R,N,V_runLoop
T^{__CFRunLoopSource=},N,V_signalSource
TB,N,V_signaled
wait
waitUntilDate:
waitInMode:
waitUntilDate:inMode:
_waitInMode:untilDate:
signal
broadcast
_signalRunLoopWithState:
_runLoopStateList
trackCount
trackIDs
firstFragmentSequenceNumber
fragmentCount
mediaSelectionGroupDictionaries
T@"NSArray",R,N,G_mediaSelectionGroupDictionaries
T@"AVMetadataItem",R,N
playable
TB,R,N,GisPlayable
exportable
TB,R,N,GisExportable
readable
TB,R,N,GisReadable
composable
TB,R,N,GisComposable
compatibleWithSavedPhotosAlbum
TB,R,N,GisCompatibleWithSavedPhotosAlbum
compatibleWithAirPlayVideo
TB,R,N,GisCompatibleWithAirPlayVideo
assetAnalysisMessages
T@"NSArray",R,N,G_assetAnalysisMessages
initWithFormatReader:
_setFormatReader:
_valueAsCFTypeForProperty:
_hasQTSaveRestriction
didCheckForSaveRestriction
hasSaveRestriction
T^{OpaqueFigFormatReader=},&,N,G_formatReader,S_setFormatReader:
initWithPlaybackItem:trackIDs:
_setPlaybackItem:
_trackIDs
playbackItem
T^{OpaqueFigPlaybackItem=},&,N,G_playbackItem,S_setPlaybackItem:
figChapterGroupInfo
figChapters
_nameForProxy
_formatReaderOnce
_checkIsStreamingOnce
_makeDisplayCriteriaOnce
_displayCriteria
T^{OpaqueFigAsset=},R,N,G_figAsset
T^{OpaqueFigFormatReader=},R,N,G_formatReader
streaming
TB,R,N,G_isStreaming
ramps
_ramps
_setRamps:
_scheduledParametersInternal
T@"NSArray",C,N,G_ramps,S_setRamps:
_mutableScheduledParametersInternal
evaluateDependenciesAndMarkAsExecuting
isExecuting
isFinished
_setStatus:error:resultingStatus:failureReason:
markAsCancelled
statusOfOperations:error:
initWithBlock:
defaultQueue
enqueueOperation:
unfinishedOperations
addOperation:
addOperations:waitUntilFinished:
initWithFundamentalOperation:
_fundamentalOperation
attachDepartureAnnouncingObjectMonitorToObject:monitoringObject:
initWithMonitoringObject:
_weakReferenceToMonitoringObject
monitoredObjectHasDeparted
initWithObject:notificationNames:
_registerForObjectNotifications
_unregisterForObjectNotifications
_monitoredObject
_signalMonitoringIsFinishedIfNeeded
_waitUntilFinishedIfNeeded
_balanceMonitoringIsFinishedSemaphore
main
_weakReferenceToMonitoredObject
_operationStateSerializationQueue
_monitoringIsFinishedSemaphore
_notificationNames
_registeredForObjectNotifications
_started
_finished
getRetainedDelegate:retainedDelegateQueue:
_setDelegateViaWeakReference:
invokeDelegateCallbackWithBlock:
invokeDelegateCallbackWithBlock:synchronouslyIfDelegateQueueIsQueue:
_delegateReadWriteQueue
_detectorForWeakReferenceToDelegate
_delegateQueue
isAssociatedWithFragmentMinder
_ensureAllDependenciesOfKeyAreLoaded:
_createAVErrorForError:andFigErrorCode:
T@"AVWeakReference",R,N,G_weakReference
T^{OpaqueFigPlaybackItem=},R,N,G_playbackItem
classForTrackInspectors
T#,R,N,G_classForTrackInspectors
associatedWithFragmentMinder
TB,R,N,GisAssociatedWithFragmentMinder
fragmentMindingInterval
Td,N,G_fragmentMindingInterval,S_setFragmentMindingInterval:
initWithAssetInspector:
_loadingMutex
_providesAccurateTiming
_copyFormatReaderFromFigObjectWithFigErrorCode:
_inspectionRequiresAFormatReader
_statusOfValueForKeyThatIsAlwaysLoaded
_dictionaryOfSpecialGettersForKeyValueStatus
_statusOfValueWhileMutexLockedForKey:error:
_statusOfValuesIsTerminalWhileMutexLockedForKeys:
_getAndPruneCompletionsWhileMutexLocked
_updateStatusWhileMutexLocked:figErrorCode:
_setStatus:figErrorCode:
_loadValuesUsingDefaultLoadingMethodWhileMutexLockedForKeys:
_dictionaryOfSpecialLoadingMethodsForKeys
_loadValuesWhileMutexLockedForKeys:
_keysAwaitingCompletion
_basicInspectionFailureCode
initWithURL:playbackItem:trackIDs:dynamicBehavior:
_addFigObjectNotifications
_removeFigObjectNotifications
_playbackItemPropertiesForKeys:
_shouldCacheDuration
_cachedDuration
_figAssetPropertiesForKeys
_figAssetTrackPropertiesForKeys
_mapAssetKeys:toFigAssetPropertySet:figAssetTrackPropertySet:callerName:
_figAssetMediaSelectionPropertiesArray
_figAssetTrackMediaSelectionPropertiesArray
initWithURL:figAssetCreationFlags:figAssetCreationOptions:avAssetInitializationOptions:forAsset:
initWithFigAsset:forAsset:
_completionHandlerQueue
_loadingBatches
_loadStatusForProperty:figAsset:error:
_statusOfValueForKey:error:firstNonLoadedDependencyKey:
_invokeCompletionHandlerForLoadingBatches:
_figAssetCreationStatus
_assetInspectorOnce
_loadingCanceled
_registeredForFigAssetNotifications
_fragmentMinderAssociationCount
initWithFigError:userInfo:
initForUnitTests
_figError
_figErrorUserInfo
_statusOfValueForKeyReturnsLoaded
longFormVideoRoutingSessionManager
longFormVideoManagerCanHaveCurrentSessionWithDestinationOfType:subType:
currentRoutingSession
likelyExternalDestinations
allLikelyDestinations
prefersLikelyDestinationsOverCurrentRoutingSession
updateCurrentRoutingSessionFromLikelyDestinationsWithCompletionHandler:
startRoutingSessionForHighConfidenceExternalDestinationIfPresentWithCompletionHandler:
startRoutingSessionWithOutputDeviceDescriptions:error:
startSuppressingLikelyDestinationsUntilNextPlayEventAndReturnError:
stopSuppressingLikelyDestinationsAndReturnError:
T@"AVRoutingSession",R
destination
establishedAutomaticallyFromLikelyDestination
T@"AVRoutingSessionDestination",R
outputDeviceDescriptions
probability
providesExternalVideoPlayback
assetTrackInspectorWithAsset:trackID:trackIndex:
_figMediaType
minSampleDuration
_getFigSampleCursorServiceReportingTimeAccuracy:
_synthesizeMediaCharacteristicsOnce
_cachedMediaCharacteristics
figMediaType
TI,R,N,G_figMediaType
figTrackReader
T^{OpaqueFigTrackReader=},R,N,G_figTrackReader
T^{OpaqueFigAssetTrack=},R,N,G_figAssetTrack
decodable
TB,R,N,GisDecodable
TB,R,N,GisEnabled
selfContained
TB,R,N,GisSelfContained
T@"NSLocale",R,N
excludedFromAutoselectionInTrackGroup
TB,R,N,GisExcludedFromAutoselectionInTrackGroup
decodabilityValidationResult
_trackReader
_copySampleCursorServiceOnce
_figSampleCursorService
_sampleCursorTimeAccuracyIsExact
_addFigNotifications
_removeFigNotifications
_loadStatusForFigAssetTrackProperty:error:
_figFormatReader
_segmentsForProperty:
_copyFigFormatReaderOnce
_copyFigTrackReaderOnce
_figMutableComposition
T^{OpaqueFigMutableComposition=},R,N,G_mutableComposition
allocWithZone:
initWithReferencedObject:
referencedObject
T@,R,W
_cachedReferencedObjectDescription
_weakStorage
figSampleGenerator
weakReferenceToAsset
notifyOfDataReadyForSampleBuffer:completionHandler:
initWithAsset:timebase:
_figSampleGenerator
makeBatch
createSampleBufferForRequest:error:
createSampleBufferForRequest:
createSampleBufferForRequest:addingToBatch:error:
_generator
startCursor
direction
limitCursor
preferredMinSampleCount
maxSampleCount
mode
overrideTime
sampleBufferRequestWithStartCursor:
initWithStartCursor:
setDirection:
setLimitCursor:
setPreferredMinSampleCount:
setMaxSampleCount:
_figSampleGeneratorReadPolicy
_figSampleGeneratorReadFlags
setMode:
setOverrideTime:
_request
T@"AVSampleCursor",R,&,N
T@"AVSampleCursor",&,N
initWithGenerator:
_completionHandler
isOpenToRequests
createAndAddSampleBufferForRequest:error:
makeDataReadyWithCompletionHandler:
_sampleGenerator
_sampleGeneratorBatch
_openToRequests
_stateMutex
T@"AVSampleBufferGenerator",R,N
initWithFigSegmentReportSampleInformationDictionary:
presentationTimeStamp
offset
length
isSyncSample
_presentationTimeStamp
_offset
_length
_isSyncSample
T{?=qiIq},R,N,V_presentationTimeStamp
Tq,R,N,V_offset
Tq,R,N,V_length
TB,R,N,V_isSyncSample
initWithFigSegmentTrackReportDictionary:
earliestPresentationTimeStamp
firstVideoSampleInformation
_earliestPresentationTimeStamp
_firstVideoSampleInformation
T{?=qiIq},R,N,V_earliestPresentationTimeStamp
T{?=qiIq},R,N,V_duration
T@"AVAssetSegmentReportSampleInformation",R,N,V_firstVideoSampleInformation
initWithFigSegmentReportDictionary:
segmentType
trackReports
_segmentType
_trackReports
Tq,R,N,V_segmentType
T@"NSArray",R,N,V_trackReports
sharedCallbackContextRegistry
registerCallbackContextObject:
unregisterCallbackContextForToken:
callbackContextForToken:
_contextsForTokens
_currentToken
_readWriteQueue
initWithTrackIDs:
initWithParser:tracks:
parser
copyAssetWithAdditionalTrackID:mediaType:
copyAssetWithReplacementFormatDescription:forTrackID:
copyAssetRemovingTrackID:
mediaTypeForTrackID:
formatDescriptionsForTrackID:
_weakReferenceToParser
_inspector
_inspectorLoader
_tracksOnce
_trackDictsByTrackID
inspectionOnlyAssetWithFigAsset:
inspectionOnlyAssetWithStreamDataParser:tracks:
_collectorInternal
notificationDispatcherForCMNotificationCenter:
initWithCMNotificationCenter:
CMNotificationCenter
addListenerWithWeakReference:callback:name:object:flags:
removeListenerWithWeakReference:callback:name:object:
_copyAndRemoveObserverForWeakReferenceToListener:callback:name:object:
_cmNotificationCenter
_listenerObjectsQueue
_observersForListenerKeys
T^{opaqueCMNotificationCenter=},R,N
listenerKeyWithWeakReferenceToListener:callback:name:object:
initWithWeakReferenceToListener:callback:name:object:
_weakReferenceToListener
_name
scheduleBlock:
_blocks
_blockSerializationLock
markEventAsCompleted
waitUntilEventIsCompleted
_condition
_eventCompleted
runBlockOnce:
_lock
_testFlag
assetComparisonToken
initWithAsset:trackIDs:
_assetComparisonToken
_assetTrackGroup
copyFormatDescription
classifyingLabel
uniqueID
backingSBuf
initWithItems:timeRange:
initWithSampleBuffer:
_timedMetadataGroupInternal
timedMetadataGroupInternal
T@"AVTimedMetadataGroupInternal",R,N,G_timedMetadataGroupInternal
_createSerializedRepresentationWithFormatDescription:error:
setItems:
endDate
cueingOptions
modificationTimestamp
extraFigProperties
initWithItems:startDate:endDate:
_initWithTaggedRangeMetadataDictionary:items:
_dateRangeMetadataGroupInternal
_taggedRangeMetadataDictionary
_extractPropertiesFromTaggedRangeMetadataDictionary:
_figMetadataArrayForMetadataItems:
_metadataItemsForFigMetadataArray:
dateRangeMetadataGroupInternal
T@"AVDateRangeMetadataGroupInternal",R,N,G_dateRangeMetadataGroupInternal
setEndDate:
assetCacheWithURL:
assetCacheForHTTPLiveStreamingWithURL:
assetCacheForProgressiveDownloadWithURL:
assetCacheForProgressiveDownloadAndHTTPLiveStreamingWithURL:
_init
mediaSelectionOptionsInMediaSelectionGroup:
isPlayableOffline
maxSize
maxEntrySize
currentSize
removeEntryForKey:
sizeOfEntryForKey:
lastModifiedDateOfEntryForKey:
allKeys
playableOffline
TB,R,N,GisPlayableOffline
enableHLSCache
enableCRABSCache
initWithURL:enableCRABSCache:enableHLSCache:
setMaxSize:
setMaxEntrySize:
isProgressiveDownloadCacheEnabled
isHTTPLiveStreamingCacheEnabled
assetCacheInspector
sharedExecutionEnvironment
currentPlatformIdentifier
setPlatformIdentifier:forQueue:
resetPlatformIdentifierForQueue:
platformIdentifier
CMVideoDimensionsValue
valueWithCMVideoDimensions:
T{?=ii},R
originator
expectedCurrentItemIdentifier
T@"AVCoordinatedPlaybackParticipant",R,N
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:rate:itemTime:hostClockTime:
itemTime
hostClockTime
_originator
_expectedCurrentItemIdentifier
_commandOrderIndex
_itemTime
_hostClockTime
T{?=qiIq},R,N,V_itemTime
T{?=qiIq},R,N,V_hostClockTime
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:anticipatedPlaybackRate:completionDueDate:
anticipatedPlaybackRate
completionDueDate
_anticipatedPlaybackRate
_completionDueDate
Tf,R,N,V_anticipatedPlaybackRate
T@"NSDate",R,N,V_completionDueDate
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:shouldBufferInAnticipationOfPlayback:anticipatedPlaybackRate:
shouldBufferInAnticipationOfPlayback
_shouldBufferInAnticipationOfPlayback
TB,R,N,V_shouldBufferInAnticipationOfPlayback
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:itemTime:shouldPause:shouldBufferInAnticipationOfPlayback:anticipatedPlaybackRate:completionDueDate:
_shouldPause
_prepareToInitiatePlayback
initWithPlaybackControlDelegate:
playbackControlDelegate
figTimelineCoordinatorConfigQueue
_latestRateCommandOrderIndex
_latestSeekCommandOrderIndex
coordinateRateChangeToRate:options:
coordinateSeekToTime:options:
currentItemIdentifier
transitionToItemWithIdentifier:proposingInitialTimingBasedOnTimebase:
reapplyCurrentItemStateToPlaybackControlDelegate
_setWaitingPolicies:
applyFigPauseSnapsToMediaTimeOfOriginator
_figTimelineCoordinator
_timelineControlQueue
_figTimelineCoordinatorConfigQueue
_currentItemIdentifier
T@"<AVPlaybackCoordinatorPlaybackControlDelegate>",R,W,N
logArray
_common_init
initWithLogArray:
extendedLogData
extendedLogDataStringEncoding
_accessLogArray
_playerItemAccessLog
dict
numberOfMediaRequests
numberOfSegmentsDownloaded
playbackStartDate
serverAddress
numberOfServerAddressChanges
playbackSessionID
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfStalls
numberOfBytesTransferred
transferDuration
observedBitrate
currentObservedBitrate
indicatedBitrate
indicatedAverageBitrate
averageVideoBitrate
averageAudioBitrate
startupTime
downloadOverdue
entryReasonCode
observedMaxBitrate
observedMinBitrate
observedBitrateStandardDeviation
playbackType
mediaRequestsWWAN
switchBitrate
_playerItemAccessLogEvent
_classForMovieTracks
initWithAsset:mindingInterval:
mindingInterval
setMindingInterval:
assets
addFragmentedAsset:
removeFragmentedAsset:
fragmentedMovieMinderWithMovie:mindingInterval:
initWithMovie:mindingInterval:
_throwsWhenAlreadyMindedAssetIsAdded
movies
addFragmentedMovie:
removeFragmentedMovie:
_fragmentedMovieTrack
_errorLogArray
_playerItemErrorLog
errorStatusCode
errorDomain
errorComment
_playerItemErrorLogEvent
longFormVideoExternalPlaybackMonitor
isAirPlayVideoPlaying
TB,R,GisAirPlayVideoActive
airPlayVideoPlaying
TB,R,GisAirPlayVideoPlaying
isAppAudioSession
isActive
category
activationContext
usingLongFormAudio
setActive:error:
setActive:withFlags:error:
setCategory:error:
setPreferredHardwareSampleRate:error:
setPreferredIOBufferDuration:error:
preferredHardwareSampleRate
preferredIOBufferDuration
inputIsAvailable
currentHardwareSampleRate
currentHardwareInputNumberOfChannels
currentHardwareOutputNumberOfChannels
setMode:error:
isApplicationAudioSession
setApplicationAudioSession:
setActivationContext:error:
setUsingLongFormAudio:error:
canEnterPIPMode
_audioSession
T@"<AVAudioSessionDelegateMediaPlayerOnly>"
Td,R
beginInterruptionFromInterruptor:
beginInterruption
endInterruptionFromInterruptor:category:flags:
endInterruptionWithFlags:
endInterruption
currentBundleIdentifier
mediaSelectionGroupWithAsset:dictionary:
playableMediaSelectionOptionsFromArray:
mediaSelectionOptionsFromArray:withLocale:
mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
allowsEmptySelection
dictionary
_groupID
_groupMediaType
_groupMediaCharacteristics
_primaryMediaCharacteristic
_matchesGroupID:mediaType:
_isStreamingGroup
defaultOption
_optionWithID:displaysNonForcedSubtitles:
setCurrentBundleIdentifier:
_mediaSelectionGroup
T@"AVMediaSelectionOption",R,N
initWithAsset:dictionary:
_optionWithID:identifier:source:displaysNonForcedSubtitles:
_dictionary
_options
_defaultOption
_displayName
_displayNameLocaleIdentifier
_optionMediaCharacteristics
_plistHasOptionIdentifier:
mediaSelectionOptionForAsset:group:dictionary:hasUnderlyingTrack:
mediaSelectionNilOptionForGroup:
initWithGroup:
optionID
group
_isMainProgramContent
_taggedMediaCharacteristics
associatedExtendedLanguageTag
associatedUnicodeLanguageIdentifier
associatedPersistentIDs
fallbackIDs
_representsNilSelection
_preferredMetadataTitleAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:excludeM3U8Metadata:
_languageDisplayNameFromMetadataAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:
_displayNameWithLocale:fallingBackToMatchingUndeterminedAndMultilingual:
_updateDisplayNameWithLocale:fallingBackToMatchingUndeterminedAndMultilingual:context:
displayNameWithLocale:
displayName
outOfBandSource
outOfBandIdentifier
_mediaSelectionOption
initWithAsset:group:dictionary:
_weakReferenceToGroup
_optionMediaType
_timeForProperty:defaultValue:
_timeForProperty:
_timeRangeForProperty:
_floatForProperty:defaultValue:
_floatForProperty:
_SInt16ForProperty:
_SInt32ForProperty:
_longLongForProperty:
_booleanForProperty:
_sizeForProperty:defaultValue:
_affineTransformForProperty:
_tollFreeBridgedObjectForProperty:
_arrayForProperty:
_nonNilArrayForProperty:
_dictionaryForProperty:
_nonNilDictionaryForProperty:
_dataForProperty:
registeredOutputSettingsClasses
eligibleOutputSettingsDictionaryKeys
validateOutputSettingsDictionary:
_validateOutputSettingsDictionary:compatibilityDescription:
outputSettingsWithOutputSettingsDictionary:mediaType:
_outputSettingsWithOutputSettingsDictionary:mediaType:exceptionReason:
defaultOutputSettingsForMediaType:
supportsEmptyOutputSettingsDictionary
initWithOutputSettingsDictionary:exceptionReason:
compatibleMediaTypes
willYieldCompressedSamples
canFullySpecifyOutputFormatReturningReason:
validateUsingOutputSettingsValidator:reason:
encoderIsAvailableOnCurrentSystemReturningError:
outputSettingsDictionary
_outputSettingsDictionary
T@"NSSet",R,N
T@"NSDictionary",R,N,V_outputSettingsDictionary
formatSpecificationWithOutputSettings:sourceFormatDescription:
initWithOutputSettings:sourceFormatDescription:
sourceFormatDescription
_sourceFormatDescription
allFileTypeIdentifiers
mediaFileTypeWithFileTypeIdentifier:
_mediaFileTypeWithFileTypeIdentifier:exceptionReason:
isoFileTypes
figFileTypeProfileFromAVFileTypeProfile:
initWithFileTypeIdentifier:exceptionReason:
defaultFileExtension
supportedMediaTypes
supportsSampleReferences
figFormatReaderFileFormat
audioFileTypeID
supportsOutputSettings:reason:
supportsFormat:
_uti
_supportsSampleReferencesOnce
_supportsSampleReferences
TI,R,N
mediaFileOutputSettingsValidatorForFileType:
validateAudioOutputSettings:reason:
validateVideoOutputSettings:reason:
initWithFileType:
fileType
_fileType
audioOutputSettingsWithAudioSettingsDictionary:
audioOutputSettingsWithTrustedAudioSettingsDictionary:
_audioOutputSettingsWithAudioSettingsDictionary:exceptionReason:
defaultAudioOutputSettings
audioConverterPropertiesForAudioSettingsDictionary:
initWithAudioSettingsDictionary:exceptionReason:
audioSettingsDictionary
getAudioStreamBasicDescription:forAudioFileTypeID:sourceFormatDescription:
copyAudioChannelLayoutForSourceFormatDescription:audioChannelLayoutSize:
audioOptions
initWithAVAudioSettingsDictionary:exceptionReason:
initWithTrustedAVAudioSettingsDictionary:
_validValuesForScalingMode
videoOutputSettingsWithVideoSettingsDictionary:
videoOutputSettingsWithTrustedVideoSettingsDictionary:
_videoOutputSettingsWithVideoSettingsDictionary:exceptionReason:
defaultVideoOutputSettings
initWithVideoSettingsDictionary:exceptionReason:
videoSettingsDictionary
width
height
pixelAspectRatioDictionary
cleanApertureDictionary
videoScalingProperties
pixelTransferProperties
colorPropertiesConsideringFormatDescriptions:colorPrimaries:transferFunction:ycbcrMatrix:
dimensionsAreBoundingBox
minimumFrameDuration
frameRateConversionAlgorithm
allowWideColor
initWithPixelBufferAttributes:exceptionReason:
initWithTrustedPixelBufferAttributes:
_VTPixelAspectRatioDictionary
_VTCleanApertureDictionary
_validateVideoCompressionProperties:againstSupportedPropertyDictionary:forCodecType:exceptionReason:
videoCodecType
videoEncoderSpecification
videoCompressionProperties
initWithAVVideoSettingsDictionary:exceptionReason:
initWithTrustedAVVideoSettingsDictionary:
_adaptedVideoCompressionProperties
_buildAudioConverter
_buildAvailableSampleRates
_buildApplicableDataRatesForSampleRates
_fetchApplicableOutputDataRates
_bringUpToDate
setInputPropertiesFromASBD:
outputSampleRate
setOutputSampleRate:
outputFormat
setOutputFormat:
outputFormatFlags
setOutputFormatFlags:
outputBitsPerChannel
setOutputBitsPerChannel:
outputChannelCount
setOutputChannelCount:
outputDataRate
setOutputDataRate:
applicableOutputSampleRateForDesiredSampleRate:rounding:
availableOutputChannelCountForDesiredChannelCount:rounding:
_getAvailableOutputSampleRateFor:rounding:
_inputASBD
_outputASBD
_audioConverter
_outputDataRate
_needNewConverter
_needAvailableSampleRates
_needApplicableParameters
_availableOutputSampleRates
_availableOutputDataRates
_applicableOutputSampleRatesForDataRate
_applicableOutputDataRatesForSampleRate
TI,N
float64RangeWithMinimum:maximum:
float64RangeWithAudioValueRange:
initWithMinimum:maximum:
initWithAudioValueRange:
minimum
maximum
_minimum
_maximum
Td,R,N,V_minimum
Td,R,N,V_maximum
originalRequest
currentRequest
response
T@"AVURLAsset",R,N
T@"NSURLRequest",R,C
T@"NSURLResponse",R,C
assetTypeLoadingStatus
didStartLoadingMetadata
destinationURL
cachePrimingDownloadTokenNum
assetDownloader
fileDownloadProgressTimer
assetDownloadSessionWithURL:destinationURL:options:
assetDownloadSessionWithDownloadToken:
assetDownloadSessionWithAsset:destinationURL:options:
registerDownloadLocation:forURLAsset:
assetDownloadSessionWithAsset:mediaSelections:destinationURL:options:
initWithURL:destinationURL:options:
initWithDownloadToken:
initWithAsset:mediaSelections:destinationURL:options:
stop
startLoadingMetadata
fileSize
availableFileSize
countOfBytesReceived
resolvedMediaSelection
T@"AVMediaSelection",R,N
assetDownloadSessionDidFinishDownload:
assetDownloadSession:didFailWithError:
assetDownloadSession:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
assetDownloadSession:didResolveMediaSelection:
assetDownloadSession:didFinishDownloadForMediaSelection:
assetDownloadSession:didUpdateProgressWithExpectedBytes:bytesDownloaded:
assetDownloadSession:willDownloadVariants:
_sendDownloadSuccessToDelegate
_sendDownloadFailureToDelegateWithError:
_sendLoadedTimeRangesChangedToDelegateWithNewlyLoadedTimeRange:currentLoadedTimeRanges:timeRangeExpectedToLoad:selectedMediaArray:
_sendDidResolveMediaSelectionWithMediaSelection:
_sendDidFinishDownloadForMediaSelectionWithMediaSelection:
_sendProgessUpdateWithExpectedBytesToDownload:bytesDownloaded:
_sendWillDownloadVariants:
_downloadSuccessCallback
_downloadFailureCallbackWithError:
startProgressTimerOnQueueWithError:
cancelAndReleaseProgressTimerOnQueue
_setupFigClientObjectForFileDownload:
_setupFigClientObjectForStreaming:
_setupFigClientObjectAsync:
_setFileFigAsset:
_startLoadingMetadataOnQueue
_startOnQueueFirstTime
_startOnQueue
_transitionToTerminalStatus:error:
_primeCacheOnDispatchQueue
_primeCache
_readyForInspection
_verifyDownloadConfigurationForAssetType
_createDuplicateFigAssetFromAVAsset:
_errorFromAssetNotificationPayload:
_figAssetNotificationNames
_addFigAssetListeners
_removeFigAssetListeners
_figPlaybackItemNotificationNames
_addFigPlaybackItemListeners
_removeFigPlaybackItemListeners
figSampleCursor
implementsGetDecodeTimeStamp
implementsGetDuration
implementsGetDependencyInfo
implementsTestReorderingBoundary
implementsCreateSampleBuffer
implementsCopyChunkDetails
implementsCopySampleLocation
implementsGetMPEG2FrameType
sampleCursorWithFigSampleCursor:
initWithFigSampleCursor:
_figSampleCursor
stepInDecodeOrderByCount:
stepInPresentationOrderByCount:
stepByDecodeTime:wasPinned:
stepByDecodeTime:
stepByPresentationTime:wasPinned:
stepByPresentationTime:
decodeTimeStamp
comparePositionInDecodeOrderWithPositionOfCursor:
samplesWithEarlierDecodeTimeStampsMayHaveLaterPresentationTimeStampsThanCursor:
samplesWithLaterDecodeTimeStampsMayHaveEarlierPresentationTimeStampsThanCursor:
canProvideSampleBuffers
createSampleBufferForCurrentSampleReturningError:
createSampleBufferFromCurrentSampleToEndCursor:error:
currentSampleDuration
copyCurrentSampleFormatDescription
currentSampleSyncInfo
currentSampleDependencyInfo
currentSampleAudioDependencyInfo
currentSampleDependencyAttachments
currentChunkStorageURL
currentChunkStorageRange
currentChunkInfo
currentSampleIndexInChunk
currentSampleStorageRange
samplesRequiredForDecoderRefresh
seamIdentifier
_sampleCursor
timebaseReadWriteQueue
_itemTimeForHostTimeAsCMTime:
itemTimeForHostTime:
itemTimeForMachAbsoluteTime:
setSuppressesPlayerRendering:
suppressesPlayerRendering
_copyTimebase
_setTimebase:
_outputInternal
currentRate
playerItemWeakReference
delegateWakeupSource
advanceWakeUpInterval
advanceWakeUpIntervalIsValid
wakeUpImageTime
immediateWakeUp
clientStateOnRequestedMediaDataChangeNotification
shouldTagBuffersWithInfo
outputMediaDataWillChange:
initWithPixelBufferAttributes:
initWithOutputSettings:
_pixelBufferAttributes
earliestAvailablePixelBufferItemTime
requestNotificationOfMediaDataChangeWithAdvanceInterval:
requestNotificationOfMediaDataChangeAsSoonAsPossible
hasNewPixelBufferForItemTime:
copyPixelBufferForItemTime:itemTimeForDisplay:
copyPixelBufferForItemTime:remove:itemTimeForDisplay:
_respondToPlayerItemFormatDescriptionsChange
_setTagBuffersWithConversionInformation
_stopObservingTimebaseNotificationsForTimebase:
_startObservingTimebaseNotificationsForTimebase:
_dispatchOutputMediaDataWillChange
T@"<AVPlayerItemOutputPullDelegate>",R,W
fragmentedAssetWithURL:options:
_fragmentedAsset
accessSerializer
fragmentedAssetMinderWithAsset:mindingInterval:
_setMindingInterval:removeAllAssets:
_fragmentedAssetMinder
_fragmentedAssetTrack
setRequestedPixelBufferAttributes:forKey:
removeRequestedPixelBufferAttributesAttributesForKey:
setLayersAreSuppressed:
mediatedPixelBufferAttributes
_mediator
defaultActionForKey:
actionForKey:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingError
keyPathsForValuesAffectingOutputObscuredDueToInsufficientExternalProtection
_updateLayerTreeGeometryWithVideoGravity:presentationSize:videoGravityShouldTriggerAnimation:
_updatePresentationSize:
_destRectForAspectRatio:
postVideoRectDidChangeNotification
makeVideoRenderer
_contentLayer
_sampleBufferVideoRenderer
_videoGravity
_bounds
_videoOutput
_STSLayer
sampleBufferVideoRenderer
T@"AVSampleBufferVideoRenderer",R,N,G_sampleBufferVideoRenderer,V_sampleBufferVideoRenderer
T^{OpaqueCMTimebase=},&
output
setOutput:
T@"AVSampleBufferVideoOutput",N
initWithEndpoint:customURLHandlerObjectID:authHandlerObjectID:contentKeySessionHandlerObjectID:
endpoint
customURLHandlerObjectID
authHandlerObjectID
contentKeySessionHandlerObjectID
_customURLHandlerObjectID
_authHandlerObjectID
_contentKeySessionHandlerObjectID
T@"NSObject<OS_xpc_object>",R,N,V_endpoint
TQ,R,N,V_customURLHandlerObjectID
TQ,R,N,V_authHandlerObjectID
TQ,R,N,V_contentKeySessionHandlerObjectID
initWithAuthenticationChallenge:sender:
resourceLoader:didCancelAuthenticationChallenge:
_selectorForInformingDelegateOfCancellationByFig
_requestInfo
_performCancellationByClient
_shouldInformDelegateOfFigCancellation
initWithAuthenticationChallenge:sender:requestInfo:requestID:
initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:
T^{__CFDictionary=},R,N,V_requestInfo
customURLLoader
customURLHandler
authHandler
contentKeySessionCustomURLHandler
loadingCancelled
pendingRequests
contentInformationCachingQueue
contentInformationCache
preloadsEligibleContentKeys
URLSession
bridgeBetweenHandlerAndSession
URLSessionOperationQueue
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
initWithURLRequestHelper:asset:
initWithURLRequestHelper:asset:remoteCustomURLHandlerContext:
_setDelegateOnStateQueue:
_getDelegateOnStateQueue
_authHandler
_customURLHandler
_customURLLoader
_performDelegateCallbackSynchronouslyIfCurrentDelegateQueueIsQueue:delegateCallbackBlock:
_performDelegateSelector:withObject:representingNewRequest:key:fallbackHandler:
_cancelRequestWithKey:fallbackHandler:
_cancelRequest:requestID:
_issueLoadingRequestWithKey:loadingRequest:isRenewalRequest:fallbackHandler:
_poseAuthenticationChallengeWithKey:challenge:fallbackHandler:
_poseAuthenticationChallengeWithRequestInfo:requestID:challenge:
_noteFinishingOfRequest:
_handleRequest:requestID:willHandleRequest:
_setContentKeySessionCustomURLHandler:
_contentKeySessionCustomURLHandler
_resourceLoader
T@"<AVAssetResourceLoaderDelegate>",R,W,N
setPreloadsEligibleContentKeys:
_sendAuthResponseForChallenge:disposition:credential:error:
useCredential:forAuthenticationChallenge:
cancelAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
rejectProtectionSpaceAndContinueWithChallenge:
performDefaultHandlingForAuthenticationChallenge:
cacheContentInformation:forURL:
cachedContentInformationForURL:
URLSessionDataDelegate
URLSessionDataDelegateQueue
setURLSession:
T@"<NSURLSessionDataDelegate>",R,N
T@"NSOperationQueue",R,N
T@"NSURLSession",&,N
remoteCustomURLHandlerContextForPID:
contentType
allowedContentTypes
contentLength
entireLengthAvailableOnDemand
byteRangeAccessSupported
renewalDate
diskCachingPermitted
initWithLoadingRequest:allowedContentTypes:
setContentType:
setContentLength:
setByteRangeAccessSupported:
isByteRangeAccessSupported
setRenewalDate:
setDiskCachingPermitted:
isDiskCachingPermitted
setEntireLengthAvailableOnDemand:
isEntireLengthAvailableOnDemand
_contentInformationRequest
TB,N,GisByteRangeAccessSupported
TB,N,GisEntireLengthAvailableOnDemand
requestedOffset
requestedLength
currentOffset
dataResponseQueue
requestsAllDataToEndOfResource
canSupplyIncrementalDataImmediately
weakReferenceToLoadingRequest
initWithLoadingRequest:requestedOffset:requestedLength:requestsAllDataToEndOfResource:canSupplyIncrementalDataImmediately:
_loadingRequest
respondWithData:
_dataRequest
weakReferenceToResourceLoader
requestInfo
responseInfoSentOnceToken
URLRequest
redirect
dataCachingQueue
cachedData
cachedContentInformation
contentInformationRequest
dataRequest
cancelled
sentContentInfo
streamingKeyRequestCompletionHandler
figCryptor
requestor
cryptorKeyRequestID
resourceLoader:didCancelLoadingRequest:
initWithResourceLoader:requestInfo:requestID:
initWithResourceLoader:URL:httpRequestHeaders:requestOffset:requestLength:allowedContentTypes:figCryptor:cryptorKeyRequestID:
request
_tryToMarkAsCancelled
isCancelled
_setContentInformationRequest:
_setDataRequest:
setResponse:
setRedirect:
_getAndClearCachedData
_appendToCachedData:
_canSetOrUseCachedContentInformation
_cacheContentInformation:
_isRequestForContentKey
serializableRepresentation
_sendResponseInfoToCustomURLHandler
_ensureResponseInfoSentToCustomURLHandler
_sendDataToCustomURLHandler:
_sendFinishLoadingToCustomURLHandlerWithError:
_sendFinishLoadingToCustomURLHandler
forwardRequestToContentKeySession
finishLoading
finishLoadingWithError:
finishLoadingWithResponse:data:redirect:
keyRequestDataUsingCryptorForApp:contentIdentifier:options:performAsync:error:
_contentKeySessionIsAttached
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
generateStreamingContentKeyRequestDataAsynchronouslyForApp:contentIdentifier:options:completionHandler:
persistentContentKeyFromKeyVendorResponse:options:error:
T@"NSURLRequest",R,N
TB,R,N,GisFinished
TB,R,N,GisCancelled
T@"AVAssetResourceLoadingContentInformationRequest",R,N
T@"AVAssetResourceLoadingDataRequest",R,N
T@"NSURLResponse",C,N
T@"NSURLRequest",C,N
T@"AVAssetResourceLoadingRequestor",R,N
providesExpiredSessionReports
initWithRequestInfo:
_requestor
weakObserver
readOnlyTimebase
rateQueue
mostRecentlySetTime
rendererListQueue
renderers
timedRenderRemovals
figSynchronizerAccessQueue
figSynchronizer
rendererTrackedBySTS
STSLabelSinks
enableSTSLabels
_makeSTSLabel
_videoRendererForRenderer:
setRate:time:
setRate:time:atHostTime:error:
_setRate:time:atHostTime:
delaysRateChangeUntilHasSufficientMediaData
setDelaysRateChangeUntilHasSufficientMediaData:
_updateRateFromTimebase
_synchronizerInternal
_addRenderer:error:
addRenderer:
_getTimebaseObserverForRenderer:
_getClientCompletionHandlerForRenderer:
_removeTimebaseObserverForRenderer:
_storeObserver:clientCompletionHandler:forRenderer:
_createOnceTimebaseObserverForRemovalOfRenderer:atTime:
_scheduleTimedRendererRemovalAtTime:atTime:withClientCompletionHandler:
removeRenderer:atTime:withCompletionHandler:
removeRenderer:atTime:completionHandler:
_performRendererRemoval:
_canAddRendererInternal:error:
_rendererConfigurationIsValid:
_multipleAudioRenderersDisallowed
_addedAudioRendererCount
_addedAudioRendererCountInternal
currentFigRenderSynchronizerFactory
setFigRenderSynchronizerFactory:forQueue:
createRenderSynchronizerWithAllocator:options:error:
peakBitRate
averageBitRate
videoAttributes
audioAttributes
_figAlternateObjC
_videoAttributes
_audioAttributes
_mutex
T@"AVAssetVariantVideoAttributes",R,N
T@"AVAssetVariantAudioAttributes",R,N
initWithFigAlternate:
_figAlternate
videoRange
codecTypes
initWithFigAlternateObjC:
formatIDs
renditionSpecificAttributesForMediaOption:
_renditionSpecificAttributesForMediaSelection
channelCount
isBinaural
isDownmix
sampleRate
initWithFigAlternateObjC:mediaSelectionOption:
assetVariantQualifierWithPredicate:
assetVariantQualifierWithVariant:
predicateForChannelCount:mediaSelectionOption:operatorType:
predicateForPresentationWidth:operatorType:
predicateForPresentationHeight:operatorType:
_validatePredicate:error:
initWithVariant:predicate:
_predicate
_variant
_environmentalConditions
environmentalConditions
setEnvironmentalConditions:
initWithChannelCount:mediaSelectionOption:operatorType:
evaluateWithObject:substitutionVariables:
acceptVisitor:flags:
predicateFormat
_channelcount
_mediaSelectionOptionPlist
_operator
initWithPresentationWidth:operatorType:
_width
initWithPresentationHeight:operatorType:
_height
textSelector
textMarkupAttributes
initWithTextMarkupAttributes:textSelector:
propertyListForTextStyleRules:
textStyleRulesFromPropertyList:
textStyleRuleWithTextMarkupAttributes:
textStyleRuleWithTextMarkupAttributes:textSelector:
initWithTextMarkupAttributes:
_dictionaryPlistRepresentation
_textStyleRule
initWithPreferredLanguages:preferredMediaCharacteristics:
initWithPrincipalMediaCharacteristics:preferredLanguages:preferredMediaCharacteristics:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:preferMultichannelAudio:precludeMultichannelAudio:
initWithPreferredLanguages:preferredMediaCharacteristics:fallbackPreferredLanguages:fallbackPreferredMediaCharacteristics:captionDisplayType:
preferredLanguages
preferredMediaCharacteristics
principalMediaCharacteristics
preferredMediaSubTypes
precludedMediaSubTypes
preferMultichannelAudio
precludeMultichannelAudio
_criteriaInternal
figDictionary
initWithFigDictionary:
compositingRequest
setCompositingRequest:
cancellationTest
setCancellationTest:
defaultCIContextProvider
setDefaultCIContextProvider:
completionHandler
setCompletionHandler:
sourceCIImage
setSourceCIImage:
sourcePBuf
setSourcePBuf:
_compositingRequest
_cancellationTest
_defaultCIContextProvider
_sourceCIImage
_sourcePBuf
T@"AVAsynchronousVideoCompositionRequest",&,N,V_compositingRequest
T@?,C,N,V_cancellationTest
T@?,C,N,V_defaultCIContextProvider
T@?,C,N,V_completionHandler
T@"CIImage",&,N,V_sourceCIImage
T^{__CVBuffer=},&,N,V_sourcePBuf
initUsingCompositingRequest:sourceFrame:cancellationTest:defaultCIContextProvider:completionHandler:
sourceImage
compositionTime
finishWithImage:context:
finishWithError:
T@"CIImage",R,N
initWithTimeRange:sourceTrackIDs:handler:
sourceTrackPreferredTransform
setSourceTrackPreferredTransform:
_requiredSourceTrackIDs
_sourceTrackPreferredTransform
T@?,R,N,V_handler
T{CGAffineTransform=dddddd},N,V_sourceTrackPreferredTransform
T{?={?=qiIq}{?=qiIq}},R,N,V_timeRange
TB,R,D,N
T@"NSArray",R,N,V_requiredSourceTrackIDs
Ti,R,D,N
filteringRequestsInFlight
defaultCIContext
shouldCancelAllRequests
setShouldCancelAllRequests:
_filteringRequestsInFlight
_shouldCancelAllRequests
_defaultCIContextThreadSafety
_defaultCIContext
TB,V_shouldCancelAllRequests
T@"NSObject<OS_dispatch_group>",R,V_filteringRequestsInFlight
playerItemOutputHostForPlayerItem:
dependencyFactory
nativeRepresentationSubtypes
textStylingResolution
legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:
initWithMediaSubtypesForNativeRepresentation:
initWithDependencyFactory:mediaSubtypesForNativeRepresentation:
_pushAttributedStrings:andSampleBuffers:atItemTime:
_figLegibleOutputsDictionaryOptions
setTextStylingResolution:
_legibleOutputInternal
T@"<AVPlayerItemLegibleOutputPushDelegate>",R,W,N
baseSettingsProvider
videoSettingsAdjuster
sourceVideoFormat
sourceAudioFormat
sourceVideoAverageFrameDuration
sourceVideoMinFrameDuration
_allOutputSettingsPresets
availableOutputSettingsPresets
outputSettingsAssistantWithPreset:
initWithPreset:
setSourceAudioFormat:
setSourceVideoFormat:
setSourceVideoAverageFrameDuration:
setSourceVideoMinFrameDuration:
setVideoEncoderSpecification:
baseSettingsProviderForPreset:
videoSettingsAdjusterForPreset:
videoEncoderCapabilities
validatesSourceVideoMinFrameDuration
baseAudioSettings
baseVideoSettings
initWithOutputSettingsPreset:
_exportSettings
averageBitRateForSourceFormatDescription:andTargetFrameRate:andEncoderSpecification:
colorSpaceFromSourceFormatDescriptions:andRendererColorSpace:
_outputSettingsPresetIdentifier
averageNonDroppableFrameIntervalIsSupportedByDefaultEncoderForVideoCodec:
groupDictionaries
selectedMediaArray
_initWithAsset:selectedMediaArray:
_initWithDeferredLoadingOfAsset:selectedMediaArray:
_initWithAsset:
_initWithAssetWithoutGroupDictionaries:
_selectedMediaArray
_groupDictionaries
_loadiVarsIfNeeded
_createDefaultMediaSelectionOptions
initWithAsset:propertyList:
_dictionaryGroupsWithSelectedOption
_propertyListForSelectedMediaOptionInMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
_mediaSelection
_isValidMediaSelectionOption:forMediaSelectionGroup:
_validatedGroupIdentifierKey:
weakReferenceToExternalDevice
UUID
screenID
inputMode
_figEndpointHIDInputMode
initWithExternalDeviceAndHIDDictionary:hidDictionary:
setInputMode:
_externalDevice
_externalDeviceHID
_size
_data
_prerendered
pixelSize
imageData
isPrerendered
_externalDeviceIcon
prerendered
TB,R,N,GisPrerendered
_HIDs
_makeHIDsOnlyOnce
_MFiCertSerial
_queue
_oemIcons
_screenInfo
_viewAreasQueue
_currentViewAreas
_makeIconsOnlyOnce
initWithExternalDevice:client:reason:
client
_client
T@"NSString",R,N,V_client
initWithExternalDevice:
setViewAreaIndex:andAdjacentViewAreas:forScreenID:
currentExternalDevice
currentCarPlayExternalDevice
screenIDs
screenViewAreas
screenSafeAreas
screenInputCapabilities
screenPrimaryInputDevices
externalDeviceHIDs
externalDeviceHIDWithUUID:
OEMIcon
OEMIcons
OEMIconLabel
OEMIconVisible
modelName
nightMode
nightModeSupported
rightHandDrive
limitedUIElements
limitedUI
ownsTurnByTurnNavigation
ownsScreen
recognizingSpeech
supportedFeatures
electronicTollCollection
navigationAidedDriving
transportType
MFiCertificateSerialNumber
requestCarUI
requestCarUIForURL:
requestCarUIForURL:withUUID:
requestViewArea:forScreenID:
requestTurnByTurnNavigationOwnership
borrowScreenForClient:reason:
takeScreenForClient:reason:
takeScreenForConnection
sendCommand:withParameters:
_triggerFakeNotificationNamed:withPayload:
T@"<AVExternalDeviceDelegate>",N
iOSUIRequestedForApplicationURL:
siriRequestedWithAction:
initWithAvailableFigEndpoints:
_figEndpoints
outputDeviceDiscoverySessionAvailableOutputDevicesWithAvailableFigEndpoints:
captionLayerWithPlayer:
setCaptionContentInsets:
captionContentInsets
_configurationQueue
_playerBeingObserved
_KVOInvokers
_legibleContentInsets
T{NSEdgeInsets=dddd},N
overscanSubtitleSupportEnabled
TB,N,GisOverscanSubtitleSupportEnabled
customVideoCompositor:wouldHaveTriggeredException:
sessionWithVideoComposition:recyclingSession:
_colorPropertiesAreSetInVideoComposition:
initWithVideoComposition:
_validateSourcePixelBufferAttributes:andReturnException:
_validateRequiredPixelBufferAttributesForRenderContext:andReturnException:
commitCustomVideoCompositorPropertiesAndReturnError:
detachVideoComposition
_copyFigVideoCompositor
getAndClearClientError
compositionFrame:didFinishWithComposedPixelBuffer:
compositionFrame:didFinishWithError:
compositionFrameDidCancel:
_figCustomCompositor
_hasRegisteredFigCustomCompositorCallbacks
_clientRequiredPixelBufferAttributes
_weakSelf
_callbackContextToken
_videoCompositionQ
_videoCompositionDidChange
_clientCustomCompositorQ
_clientCustomCompositor
_clientErrorQ
_clientError
_renderContextQ
_renderContext
_finishedRequestQ
_compositionFrame:atTime:requiresRenderUsingSources:requiresSampleBuffersUsingSources:withInstruction:
_customCompositorShouldAnticipateRenderingFromTime:toTime:andThenFromTime:toTime:
_customCompositorShouldPrerollForRenderingFromTime:toTime:andThenFromTime:toTime:requestID:
_customCompositorShouldCancelPendingFrames
_customCompositorFigPropertyDidChange
_setupFigCallbacks
_cleanupFigCallbacks
initWithRefreshRate:videoDynamicRange:
videoDynamicRange
refreshRate
Ti,R
sharedKVODispatcher
initWithDescriptionOfHowAllObservedPropertyChangesAreSerializedWithDispatcherDeallocation:
startObservingValueAtKeyPath:ofObject:options:usingBlock:
startObservingValueAtTwoPartKeyPath:ofObject:options:usingBlock:
startObservingValueAtKeyPath:withoutKeepingAliveObservedObject:options:usingBlock:
_callbackContextRegistry
observationBlockForWeakObserver:passedToBlock:
weakObservationBlockForWeakObserver:passedToBlock:
cancelCallbacks
callbackDidFireWithChangeDictionary:
observedObject
T@"NSObject",R,N
initWithCallbackContextRegistry:observer:object:keyPath:options:block:
_observer
_keyPath
_weakReferenceToObject
_unsafeUnretainedObject
addCallbackToCancel:
cancelAllCallbacks
_callbackRegistrations
startObservingObject:weakObserver:forKeyPath:options:context:
startObservingObject:weakObserver:forTwoPartKeyPath:options:context:
valueForKey:dependsOnValueAtKeyPath:
initWithDependencyHost:
dependencyHostIsFullyInitialized
_weakReferenceToDependencyHost
_callbackCancellationHelper
_keyPathDependencies
initWithObject:thatHasPropertyWithKey:whoseValueDependsOnValueAtKeyPath:
initializationIsCompleteForObject:
_startObservingSecondLevelPropertyOnNewCurrentValueForTopLevelDependencyProperty:
_reactToTopLevelPropertyChange:
_reactToSecondLevelPropertyChange:
_subObjectRegistrationQueue
_KVODispatcher
_dependentKey
_dependencyKeyPath
_leafPropertyChangeNotifier
keyPathString
initWithTopLevelPropertyKey:secondLevelPropertyKey:
topLevelPropertyKey
secondLevelPropertyKey
_topLevelKey
_secondLevelKey
T@"NSString",R,N,V_topLevelKey
T@"NSString",R,N,V_secondLevelKey
initForObservingValueAtKeyPath:onObject:
valueForKeyForKVO:
topLevelDependencyProperty
dependentProperty
_dependencyManager
_observedObject
initWithObservedObject:realNotifier:
_realNotifier
renderContext
setRenderContext:
compositionFrame
setCompositionFrame:
setCompositionTime:
sourcesByTrackID
setSourcesByTrackID:
sourceTrackIDsInClientOrder
setSourceTrackIDsInClientOrder:
sampleBufferSourcesByTrackID
setSampleBufferSourcesByTrackID:
sourceSampleBufferTrackIDsInClientOrder
setSourceSampleBufferTrackIDsInClientOrder:
instruction
setInstruction:
setIsFinished:
_compositionFrame
_compositionTime
_sourcesByTrackID
_sourceTrackIDsInClientOrder
_sampleBufferSourcesByTrackID
_sourceSampleBufferTrackIDsInClientOrder
T@"AVWeakReference",&,N,V_session
T@"AVVideoCompositionRenderContext",&,N,V_renderContext
T^{OpaqueFigVideoCompositorFrame=},N,V_compositionFrame
T{?=qiIq},N,V_compositionTime
T@"NSDictionary",&,N,V_sourcesByTrackID
T@"NSArray",&,N,V_sourceTrackIDsInClientOrder
T@"NSDictionary",&,N,V_sampleBufferSourcesByTrackID
T@"NSArray",&,N,V_sourceSampleBufferTrackIDsInClientOrder
T@"<AVVideoCompositionInstruction>",&,N,V_instruction
TB,N,V_isFinished
sourceTrackIDs
sourceFrameByTrackID:
sourceSampleBufferByTrackID:
sourceTimedMetadataByTrackID:
finishWithComposedVideoFrame:
finishCancelledRequest
T@"AVVideoCompositionRenderContext",R,N
T@"<AVVideoCompositionInstruction>",R,N
initUsingSession:withRenderContext:compositionFrame:atTime:usingSources:instruction:withSampleBuffers:
routeDetectionEnabled
multipleRoutesDetected
detectsCustomRoutes
outputDeviceDiscoverySession
outputDevicesChangeNotificationToken
didEnterForegroundNotificationToken
customRouteDiscoverySession
customRoutesPresent
routeDetectionSuspended
isRouteDetectionEnabled
setRouteDetectionEnabled:
setDetectsCustomRoutes:
_updateMultipleRoutesDetected
_updateRouteDetectionEnabled
_isAirPlayDevicePresenceDetected
_isCustomRoutePresenceDetected
_didEnterBackground
_didEnterForeground
_routeDetectorInternal
TB,GisRouteDetectionEnabled
_basisProperties
_renderTransform
_renderScale
_pixelAspectRatio
_edgeWidths
_highQualityRendering
_destinationDesiredPixelBufferAttributes
_destinationDesiredPixelBufferYCbCrMatrix
_destinationDesiredPixelBufferColorPrimaries
_destinationDesiredPixelBufferTransferFunction
_blendingTransferFunction
pixelFormatFamily
_pixelAspectRatioDict
_cleanApertureDict
_destinationPixelBufferDimensions
_bufferPoollInitMutex
_pixelBufferPoolQ
size
renderTransform
pixelAspectRatio
edgeWidths
highQualityRendering
newPixelBuffer
T{?=qq},R,N
T{?=dddd},R,N
T@"AVVideoComposition",R,N
initWithFigVideoCompositor:clientRequiredPixelBufferAttributes:videoComposition:pixelBufferPool:
hasEqualPropertiesToFigVideoCompositor:
isBufferYCbCr:
renderContextPropertiesFromFigCompositor:
_mediaDataStorageInternal
data
movieTypes
movieWithURL:options:
movieWithData:options:
_startListeningToLoaderNotifications
_stopListeningToLoaderNotifications
initWithData:options:
_initWithFigAsset:
_initWithFormatReader:URL:data:options:
_initWithFigError:userInfo:
_figMutableMovieFromFormatReader:
defaultMediaDataStorage
canContainMovieFragments
containsMovieFragments
_movie
T@"AVMediaDataStorage",R,N
_mutableMovieForFileType:
movieHeaderWithFileType:error:
writeMovieHeaderToURL:fileType:options:error:
isCompatibleWithFileType:
trackWaitingSemaphore
movieWithURL:options:error:
movieWithData:options:error:
movieWithSettingsFromMovie:options:error:
initWithSettingsFromMovie:options:
initWithURL:options:error:
initWithData:options:error:
initWithFileType:copySettingsFromMovie:options:
initWithSettingsFromMovie:options:error:
_signalTracksUpdated
interleavingPeriod
setInterleavingPeriod:
setDefaultMediaDataStorage:
_mutableMovieInternal
insertTimeRange:ofAsset:atTime:copySampleData:error:
_addMutableTrackWithMediaType:copySettingsFromTrack:options:
addMutableTrackWithMediaType:copySettingsFromTrack:options:
addMutableTracksCopyingSettingsFromTracks:options:
advanceIntervalForDataAvailability
setAdvanceIntervalForDataAvailability:
_advanceIntervalForDataAvailability
Td,N,V_advanceIntervalForDataAvailability
outputMediaDataAvailable:trackID:
outputSequenceWasFlushed:trackID:
initWithConfiguration:
_figPlaybackItem
_setFigPlaybackItem:
_weakReferenceToPlayerItemTrack
copyNextSampleBufferForTrackID:flags:
_figPlaybackItemTrackSampleBufferDidBecomeAvailableForTrackID:extractionID:
_figPlaybackItemTrackOutputSequenceWasFlushedForTrackID:extractionID:
_stateQueue
_delegateStorage
_advanceInterval
T@"<AVPlayerItemSampleBufferOutputDelegate>",R,W
_attachToPlayerItemTrack:figPlaybackItem:
_detachFromPlayerItemTrack
_setTrackID:
weakSession
reportGroup
keyIDFromInitializationData
initializationData
responseParamsSent
providesPersistableKey
preloadingRequestOptions
customURLRequestID
isRenewalRequest
cryptorUUID
isInchargeOfKeyRequest
stateMutex
hasAnyKeyRequestSucceeded
contentKeySpecifier
contentKey
contentIdentifier
weakContentKeyBoss
useContentKeyBoss
keySpecifier
_prepareCryptor:forRenewal:andReturnKeyRequestID:isInchargeOfKeyRequest:error:
_mergePreloadingRequestOptions:withCreateKeyRequestOptions:
_validateProtocolVersionList:
_validateHLSEncryptionMethod:
_validateServerChallenge:
_ensureProtocolVersionList:
_createKeyRequestDictionaryForApp:persistentKey:serverChallenge:cryptorKeyRequestID:purpose:
initWithContentKeySession:reportGroup:identifier:contentIdentifier:keyIDFromInitializationData:initializationData:preloadingRequestOptions:providesPersistableKey:
_copyAndStoreCryptorUUID
initWithContentKeySession:reportGroup:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:isRenewalRequest:
initWithContentKeySession:contentKeyBoss:useContentKeyBoss:keySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:isRenewalRequest:requestID:providesPersistableKey:preloadingRequestOptions:identifier:
_keySystem
_copyContentKeyBoss
_encryptionMode
_setStatus:
_clearContext
_prepareForKeyRenewalReturningError:
renewsExpiringResponseData
canProvidePersistableContentKey
_getRetryReasonForError:
_handleKeyResponseError:
_handleKeyResponseSuccessWithCryptor:
ensureCryptorWithFormatDescription:error:
contentKeyRequestDataForApp:contentIdentifier:options:error:
_makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:error:
makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:
processContentKeyResponseData:
processContentKeyResponseData:renewalDate:error:
_processContentKeyResponse:renewalDate:initalizationVector:error:
processContentKeyResponse:
_processContentKeyResponseError:
processContentKeyResponseError:
renewExpiringContentKeyResponseData
_canRespondByRequestingPersistableContentKeyRequest
respondByRequestingPersistableContentKeyRequestAndReturnError:
respondByRequestingPersistableContentKeyRequest
_sendResponseInfoToCustomURLHandlerWithRenewalDate:
_finishLoadingCustomURLRequestWithResponseData:renewalDate:
_finishLoadingCustomURLRequestWithError:
_contentKeyRequest
T@,R
T@"NSDictionary",R,C
T@"AVContentKeySpecifier",R
T@"AVContentKey",R
willOutputBeObscuredDueToInsufficientExternalProtectionForDisplays:
externalContentProtectionStatus
setReportGroup:
persistableContentKeyFromKeyVendorResponse:options:error:
initWithKeySystem:
initWithKeyData:renewalDate:
_keyData
_renewalDate
initWithKeyData:initializationVector:
_initializationVector
initWithAuthorizationTokenData:
_authorizationTokenData
initWithRequestCount:
addRequest:
haveAllRequestsBeenReceived
_totalExpectedRequestCount
_requests
initWithInitializationData:contentIdentifier:keyIDFromInitializationData:options:identifier:
setInitializationData:
setContentIdentifier:
setKeyIDFromInitializationData:
setOptions:
_initializationData
_contentIdentifier
_keyIDFromInitializationData
T@"NSData",C,V_initializationData
T@"NSData",C,V_contentIdentifier
T@"NSData",C,V_keyIDFromInitializationData
T@"NSDictionary",C,V_options
T@,C,V_identifier
contentKeyResponseWithFairPlayStreamingKeyResponseData:
contentKeyResponseWithFairPlayStreamingKeyResponseData:renewalDate:
contentKeyResponseWithClearKeyData:initializationVector:
contentKeyResponseWithAuthorizationTokenData:
keySystem
_keyResponse
_storageURL
_appIdentifier
_isExpired
_defaultContentKeyGroup
_contentKeyRecipients
keyRequestsByRequestID
_contentKeyGroups
cryptorUUIDToContentKeyRequestMap
keyRequestParamsByRequestID
keyRequestTrackerByRequestID
cryptorsByIdentifer
contentKeyRequestByKeySpecifierMap
_contentKeyBoss
_useContentKeyBoss
contentKeySessionWithKeySystem:
contentKeySession:externalProtectionStatusDidChangeForContentKeyRequest:
copyDefaultSecureStopManagerForAppIdentifier:storageDirectoryAtURL:
contentKeySessionWithLegacyWebKitCompatibilityModeAndKeySystem:storageDirectoryAtURL:
contentKeySessionWithKeySystem:storageDirectoryAtURL:
initWithStorageDirectoryAtURL:
didProvideKeyRequestWithBoss:keySpecifier:requestID:renewalRequest:
removeResourcesForID:
contentKeyRequestDidSucceedWithBoss:keySpecifier:requestID:cryptor:
externalProtectionStateChangedCallbackWithBoss:keySpecifier:
defaultGroupID
initWithKeySystem:storageDirectoryAtURL:legacyWebKitCompatibilityMode:
storageURL
isInternal
addContentKeyRecipient:
removeContentKeyRecipient:
contentKeyRecipients
processContentKeyRequestForSinf:initializationData:groupID:options:
processContentKeyRequestForPSSHEntries:initializationData:groupID:options:
processContentKeyRequestForTransportStreamWithCodecType:initializationData:groupID:options:
_processContentKeyRequestWithIdentifier:initializationData:options:groupID:
processContentKeyRequestWithIdentifier:initializationData:options:
renewExpiringResponseDataForContentKeyRequest:
makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:
invalidatePersistableContentKey:options:completionHandler:
invalidateAllPersistableContentKeysForApp:options:completionHandler:
T@"<AVContentKeySessionDelegate>",R,W
T@"NSObject<OS_dispatch_queue>",R
T@"NSURL",R
_handleSecureStopDidFinalizeRecordCallback
_handleExternalProtectionStateChangedCallbackForCryptKeyIdentifier:
pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:
removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:
contentKeySession:contentProtectionSessionIdentifierDidChangeForReportGroup:
_internalQueue
_setContentKeyRequest:forCryptorUUID:cryptorKeyRequestID:
_contentKeyRequestForCryptorUUID:cryptorKeyRequestID:
_removeContentKeyRequestForCryptorUUID:cryptorKeyRequestID:
_setWeakReferenceForContentKeyRequest:withCryptorUUID:
_invokeDelegateCallbackWithBlock:synchronouslyWhenDelegateQueueIsNULL:
_handleKeyResponseError:forCryptorUUID:andCryptorKeyRequestID:
_handleKeyResponseSuccessfullyProcessedForCryptorUUID:andCryptorKeyRequestID:
_handleUpdateToPersistentKey:forKeyIdentifier:
_handleContentProtectionSessionIdentifierDidChange:
_uniqueIDForCyptorUUID:cryptorKeyRequestID:
contentKeySession:didProvideContentKeyRequests:forInitializationData:
setAppIdentifier:
clientCanReceivePersistableContentKeyRequest
issueContentKeyRequests:forInitializationData:
issueContentKeyRequest:toDelegateWithCallbackSelector:
issueContentKeyRequest:
issuePersistableContentKeyRequest:
issueRenewableContentKeyRequest:
issueContentKeyRequestWithCustomURLHandler:identifier:requestInfo:requestID:providesPersistableKey:
issueContentKeyRequestWithPreloadingRequestOptions:identifier:initializationData:providesPersistableKey:
contentKeyRequestDidProduceContentKey:
issuePersistableContentKeyRequestForKeySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:requestID:preloadingRequestOptions:identifier:
keyRequestByID:
trackRequest:byRequestID:
initWithKeySystem:storageDirectoryAtURL:internal:
issueContentKeyRequestForInitializationData:
_sendFinishLoadingForPreloadedKeyRequest:withRequestID:fromHandler:error:
copyCryptorForInitializationData:
copyCryptorForFormatDescription:cryptorOut:errorOut:
createCryptorIfNecessaryForInitializationData:formatDescription:error:
copyCryptorForCryptKeyAttributes:
_handleRequest:withRequestID:fromHandler:willHandleRequest:
createAndInstallCustomURLHandlerForAsset:outHandler:
internal
TB,R,N,GisInternal
defaultContentKeyGroup
makeContentKeyGroup
T@"AVContentKeyReportGroup",R
_processContentKeyRequestWithIdentifier:encryptionMode:supportedProtocolVersions:groupID:error:
_renewKeyWithIdentifier:encryptionMode:error:
_makeContentKeyGroupWithIDOut:error:
cryptorOptionsForIdentifier:initializationData:formatDescription:hlsMethod:
failProcessingContentKeyRequestWithIdentifier:initializationData:error:
_processContentKeyRequestWithIdentifier:contentIdentifier:keyIDFromInitializationData:initializationData:options:
_processContentKeyRequestWithKeyRequestFromPSSH:decryptFormatType:initializationData:options:
_associateRequestWithGroupWithRequestID:error:
associateContentKeyRequest:
_destroyContentKeyGroupWithError:
_contentKeySessionWeakReference
_figContentKeySession
_protectorSessionIdentifier
_cryptorsList
_weakContentKeyBoss
createCryptorIfNecessaryForIdentifier:initializationData:formatDescription:hlsMethod:error:
copyCryptorForIdentifier:initializationData:
initWithKeySystem:keySession:contentKeyBoss:useContentKeyBoss:groupID:storageDirectoryAtURL:
createProtectorSessionIdentifierIfNecessary
configureAppIdentifier:
_setAuthorizationToken:forIdentifier:error:
externalProtectionStatusForCryptor:withDisplays:
contentKeySpecifierForKeySystem:identifier:options:
initForKeySystem:identifier:initializationData:options:
initForKeySystem:identifier:options:
T@"NSString",R,V_keySystem
T@,R,V_identifier
T@"NSDictionary",R,V_options
initForKeySystem:initializationData:
contentKeyWithSpecifier:andCryptor:
initWithSpecifier:andCryptor:
cryptor
_cryptor
T@"AVContentKeySpecifier",R,VcontentKeySpecifier
outputDeviceGroupWithRemoteGroupID:syncController:
initWithRemoteGroupID:syncController:
_outputDevicesFromProperty:withQualifier:
_outputDeviceForID:
_groupMembersChangedForGroupWithID:
_volumeChangedForGroupWithID:
_volumeControlTypeChangedForGroupWithID:
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v20@0:8f16
q16@0:8
v24@0:8@16
f16@0:8
v40@0:8@"AVOutputDevice"16@"NSDictionary"24@?<v@?@"AVOutputDeviceGroupMembershipChangeResult">32
@"AVOutputDeviceGroup"16@0:8
v24@0:8@"AVOutputDeviceGroup"16
@"NSArray"16@0:8
@"AVOutputDevice"16@0:8
@24@0:8@16
v16@0:8
@"AVOutputContext"
@"AVOutputDeviceGroup"
@"AVQueuePlayer"
@"AVPlayerItem"
@"NSMutableArray"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
@"NSObject<OS_dispatch_queue>"
{?="value"q"timescale"i"flags"I"epoch"q}
@"NSError"
@"<AVCallbackCancellation>"
@"AVWeakReference"
@80@0:8@16@24{?={?=qiIq}{?=qiIq}}32
@32@0:8@16@24
i16@0:8
B24@0:8^@16
v48@0:8@16@24@32^v40
@"AVPlayerLooperInternal"
v32@0:8^q16^@24
^{OpaqueFigSimpleMutex=}
@"AVAssetReaderTrackOutput"
i48@0:8@16^{OpaqueFigAssetReader=}24@32^i40
i48@0:8@"AVAssetReaderTrackOutput"16^{OpaqueFigAssetReader=}24@"NSDictionary"32^i40
@"AVAssetReaderOutputMetadataAdaptorInternal"
@"NSDictionary"
d16@0:8
@"AVVideoPerformanceMetricsInternal"
@"<AVOutputDeviceDiscoverySessionImpl>"
@"<AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl>"
@24@0:8Q16
v24@0:8q16
v32@0:8q16@24
v32@0:8@16@24
@"AVOutputDeviceDiscoverySessionInternal"
@"AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal"
v24@0:8@?16
v24@0:8#16
v20@0:8B16
v32@0:8@16@?24
B28@0:8B16^@20
B32@0:8@16^@24
v40@0:8@?16@24@?32
v32@0:8@"NSString"16@?<v@?@@"NSError">24
B32@0:8@"NSString"16^@24
v40@0:8@?<v@?@"<AVOutputDeviceConfigurationModification>">16@"NSDictionary"24@?<v@?q@"<AVOutputDeviceConfigurationRetrieval>"@"NSString"@"NSError">32
@"<AVOutputDeviceImplSupport>"16@0:8
v24@0:8@"<AVOutputDeviceImplSupport>"16
@"NSData"16@0:8
@"NSNumber"16@0:8
@"NSDictionary"16@0:8
@32@0:8^{OpaqueAPSyncController=}16@24
v24@0:8^{__CFString=}16
^{OpaqueAPSyncController=}
@"<AVOutputDeviceImpl>"
@"<AVOutputDeviceImplSupport>"
@"AVNetworkPlaybackPerfHUDLayer"
@"AVKeyPathDependencyManager"
@"AVPlayer"
@"NSString"
@"FigBaseCALayer"
@"FigVideoContainerLayer"
@"FigSubtitleCALayer"
@"AVPlayerLayer"
{CGSize="width"d"height"d}
@"CALayer"
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
@"AVSinkSubscriber"
v24@0:8@"<AVKeyPathDependencyRegistration>"16
v24@0:8@"<AVCallbackCancellation>"16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
v40@0:8@16@24@32
v192@0:8@16{CATransform3D=dddddddddddddddd}24@152@160{CGSize=dd}168@184
v56@0:8@16{CGSize=dd}24@40@48
{CGSize=dd}16@0:8
v28@0:8B16@20
v28@0:8@16B24
v56@0:8^@16^@24^@32^@40^@48
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{NSEdgeInsets=dddd}16
{NSEdgeInsets=dddd}16@0:8
^{__CVBuffer=}16@0:8
v32@0:8@16q24
v28@0:8@16I24
@"AVPlayerLayerInternal"
@40@0:8{?=qiIq}16
{?=qiIq}16@0:8
v24@0:8^v16
r*16@0:8
c16@0:8
C16@0:8
s16@0:8
S16@0:8
I16@0:8
@24@0:8^{_NSZone=}16
@64@0:8{?={?=qiIq}{?=qiIq}}16
{?={?=qiIq}{?=qiIq}}16@0:8
@112@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@0:8
{?="source"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}"target"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}}
v48@0:8{?=qiIq}16@40
{?=qiIq}24@0:8@16
v72@0:8{?={?=qiIq}{?=qiIq}}16@64
{?={?=qiIq}{?=qiIq}}24@0:8@16
v120@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@112
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}24@0:8@16
@32@0:8^{OpaqueCMTimebase=}16@24
^{OpaqueCMTimebase=}16@0:8
@"NSObject<OS_dispatch_source>"
^{OpaqueCMTimebase=}
@64@0:8^{OpaqueCMTimebase=}16{?=qiIq}24@48@?56
v40@0:8{?=qiIq}16
@48@0:8^{OpaqueCMTimebase=}16@24@32@?40
{?=qiIq}40@0:8{?=qiIq}16
@"NSArray"
@"AVWeakReferencingDelegateStorage"
@"NSDate"
@"AVPlayerItemMetadataCollectorInternal"
@56@0:8@16@24@32^@40^@48
@24@0:8@?16
@128@0:8@16@24{?=qiIq}32@56Q64{?=qiIq}72{?=qiIq}96@120
@112@0:8@16@24@32@40Q48{?=qiIq}56{?=qiIq}80@104
@40@0:8@16@24^{OpaqueFigPlayerInterstitialEvent=}32
@48@0:8@16{?=qiIq}24
@24@0:8^@16
@136@0:8@16@24{?=qiIq}32@56@64Q72{?=qiIq}80{?=qiIq}104@128
@56@0:8@16{?=qiIq}24@48
v24@0:8Q16
^{OpaqueFigPlayerInterstitialEvent=}16@0:8
B24@0:8^i16
^{OpaqueFigPlayerInterstitialEvent=}
@28@0:8@16B24
v24@0:8^{OpaqueFigPlayerInterstitialCoordinator=}16
^{OpaqueFigPlayerInterstitialCoordinator=}
^{OpaqueFigVisualContext=}
^{OpaqueVTPixelBufferConformer=}
B36@0:8@16B24^@28
^{__CVBuffer=}52@0:8{?=qiIq}16^{?=qiIq}40I48
B40@0:8{?=qiIq}16
^{__CVBuffer=}48@0:8{?=qiIq}16^{?=qiIq}40
^{__CVBuffer=}24@0:8^{?=qiIq}16
B24@0:8^{OpaqueFigVideoQueue=}16
^{OpaqueFigVisualContext=}16@0:8
@"AVSampleBufferVideoOutputInternal"
@"AVAssetDownloadStorageManagementPolicyInternal"
@"NSMutableDictionary"
@"<AVOutputDeviceGroupImpl>"
@32@0:8q16@24
^{OpaqueFigMetadataReader=}
@"<NSObject><NSCopying>"
@"NSLocale"
@24@0:8^v16
^{CGImage=}16@0:8
@40@0:8@16@24@32
@36@0:8@16@24I32
q32@0:8@16^@24
q32@0:8@"NSString"16^@24
v32@0:8@"NSArray"16@?<v@?>24
@32@0:8^{OpaqueFigMetadataReader=}16q24
B32@0:8@16@24
@24@0:8B16B20
^v32@0:8^{opaqueCMFormatDescription=}16^@24
@32@0:8@16^@24
@"AVMetadataItemInternal"
@"AVMutableMetadataItemInternal"
@"AVMetadataItemValueRequest"
@32@0:8@16@?24
@"AVLazyValueLoadingMetadataItemInternal"
@"AVMetadataItemValueRequestInternal"
^{OpaqueFigAsset=}
@120@0:8@16q24q32@40@48@56@64{?=qiIq}72{?=qiIq}96
v28@0:8q16i24
@"AVChapterMetadataItemInternal"
@"AVMetadataItemFilterInternal"
@"AVAssetInspectorLoader"
@"AVDispatchOnce"
^{OpaqueFigAsset=}16@0:8
^{OpaqueFigFormatReader=}16@0:8
^{OpaqueFigPlaybackItem=}16@0:8
@"AVAssetProxyInternal"
@"<AVLoggingIdentifier>"
@44@0:8@16^{OpaqueFigPlaybackItem=}24@32B40
q24@0:8@16
^{OpaqueFigMutableComposition=}16@0:8
{CGAffineTransform=dddddd}16@0:8
@24@0:8#16
@20@0:8i16
v28@0:8i16@?20
@"AVAssetInternal"
Q88@0:8@16{?={?=qiIq}{?=qiIq}}24@72Q80
@24@0:8q16
@"AVAssetFragmentInternal"
@32@0:8Q16Q24
@"AVAssetClientURLRequestHelper"
@"AVAssetCustomURLBridgeForNSURLProtocol"
@"AVAssetCustomURLAuthentication"
@"NSURL"
@"AVAssetResourceLoader"
@"AVAssetCache"
@48@0:8@16@24^Q32^@40
@48@0:8@16q24q32@40
@32@0:8^{__CFDictionary=}16^{__CFString=}24
@"AVURLAssetInternal"
r^{OpaqueFigAsset=}16@0:8
@?16@0:8
@32@0:8@16^Q24
@"NSEnumerator"
v32@0:8@"AVContentKeySession"16@"AVContentKey"24
i40@0:8@16^{CMBaseObject=}24^B32
i40@0:8@"AVContentKeySession"16^{CMBaseObject=}24^B32
@"AVContentKeySession"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSSecurityScopedURLWrapper"
@40@0:8@16@24^@32
@44@0:8@16@24B32^@36
@"AVAudioMixEffectParametersInternal"
@32@0:8I16I20f24f28
@20@0:8f16
@"AVAudioMixSweepFilterEffectParametersInternal"
^{OpaqueFigAssetImageGenerator=}
@"AVAsset"
@"AVVideoComposition"
@"AVCustomVideoCompositorSession"
@32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16^{?=qiIq}40^@48
v48@0:8{?=qiIq}16@?40
v32@0:8{CGSize=dd}16
{CGSize=dd}32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16@40^@48
@"AVAssetImageGeneratorInternal"
v32@0:8@"NSData"16@?<v@?@"NSError">24
@"AVOutputDeviceCommunicationChannel"16@0:8
v24@0:8@"AVOutputDeviceCommunicationChannel"16
@24@0:8^{OpaqueFigEndpointRemoteControlSession=}16
^{OpaqueFigEndpointRemoteControlSession=}
@"AVOutputDeviceCommunicationChannel"
@"AVAssetTrackInspector"
^{OpaqueFigAssetTrack=}
@36@0:8@16i24q28
@28@0:8@16i24
@32@0:8@16q24
^{OpaqueFigTrackReader=}16@0:8
^{OpaqueFigAssetTrack=}16@0:8
B24@0:8I16I20
@"AVAssetTrackInternal"
@"AVPixelBufferAttributeMediator"
^{__CFNumber=}
@"AVAudioSessionMediaPlayerOnly"
@"<AVBlockScheduler>"
@"NSMutableSet"
@"AVAudioSession"
@"AVPlayerRateState"
@"NSNumber"
@"AVPlayerPlaybackCoordinator"
@"NSHashTable"
^{OpaqueFigPlayer=}
^{OpaqueFigPlaybackItem=}
@"AVPlayerMediaSelectionCriteria"
^{OpaqueCMClock=}
@24@0:8^{OpaqueFigPlayer=}16
i40@0:8q16r^{__CFDictionary=}24^^{OpaqueFigPlayer}32
^{OpaqueFigPlayer=}16@0:8
v48@0:8@16@24Q32^v40
v32@0:8@16^{OpaqueFigPlayer=}24
B40@0:8@?16@?24^@32
v24@0:8^{OpaqueFigPlaybackItem=}16
v32@0:8q16@?24
@44@0:8@16B24@28@36
@36@0:8i16@20@28
B32@0:8f16i20@?24
v56@0:8f16{?=qiIq}20B44i48B52
v44@0:8f16{?=qiIq}20
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
v68@0:8f16{?=qiIq}20{?=qiIq}44
v76@0:8f16{?=qiIq}20{?=qiIq}44@68
i24@0:8@?16
v28@0:8f16@?20
v28@0:8B16^{__CFDictionary=}20
^{OpaqueCMClock=}16@0:8
v24@0:8^{OpaqueCMClock=}16
^{__CFString=}24@0:8q16
v28@0:8q16B24
@56@0:8{?=qiIq}16@40@?48
@40@0:8@16@24@?32
v40@0:8@16r^{CGRect={CGPoint=dd}{CGSize=dd}}24r^{NSEdgeInsets=dddd}32
v24@0:8^{OpaqueFigPlayer=}16
v56@0:8@16@24@32@40@48
B40@0:8^@16^{CGSize=dd}24^@32
@"AVPlayerInternal"
B24@0:8q16
v20@0:8i16
B32@0:8d16^@24
@"AVAudioSession"16@0:8
v24@0:8@"AVAudioSession"16
@40@0:8q16@24@32
v24@0:8^{OpaqueFigVideoTarget=}16
^{OpaqueFigPlayerInterstitialCoordinator=}16@0:8
@32@0:8B16B20q24
@28@0:8f16@20
@20@0:8B16
@28@0:8B16@20
@32@0:8i16B20@24
@32@0:8B16B20@24
@40@0:8^{OpaqueFigPlayer=}16B24B28@32
r^v24@0:8q16
v32@0:8^v16q24
v32@0:8^v16@24
@"AVURLAsset"
@"NSData"
@"AVAssetDownloadContentConfiguration"
@"AVDisplayCriteria"
@112@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88
@"AVVideoCompositionRenderHintInternal"
^{opaqueMTAudioProcessingTap=}
{?="mutex"^{OpaqueFigSimpleMutex}"requester"@"AVMediaDataRequester"}
@"AVScheduledAudioParameters"
@"AVContentKeySession"
^{opaqueCMFormatDescription=}
^{OpaqueFigCPECryptor=}
^{OpaqueFigSampleBufferAudioRenderer=}
v24@0:8^^{OpaqueFigSampleBufferAudioRenderer}16
B32@0:8@"AVSampleBufferRenderSynchronizer"16^@24
v24@0:8@"NSString"16
v24@0:8^{opaqueCMSampleBuffer=}16
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v24@0:8^{opaqueMTAudioProcessingTap=}16
^{opaqueMTAudioProcessingTap=}16@0:8
@"AVSampleBufferAudioRendererInternal"
^{OpaqueFigSampleBufferAudioRenderer=}40@0:8r^{__CFAllocator=}16r^{__CFDictionary=}24^@32
@"AVAssetWriterInput"
@"AVAssetWriterInputMetadataAdaptorInternal"
@"AVExternalProtectionMonitorInternal"
@24@0:8d16
@24@0:8^{opaqueCMFormatDescription=}16
f32@0:8{CGSize=dd}16
^{OpaqueVTPixelBufferAttributesMediator=}
@"<AVPlayerItemDelegate>"
@"AVAudioMix"
^{__CFString=}
@"AVPlayerItemInterstitialEventCollector"
@"AVMediaSelection"
@"AVPlayerConnection"
^{OpaqueFigCPEProtector=}
i60@0:8^{OpaqueFigPlayer=}16@24@32I40^{__CFDictionary=}44^^{OpaqueFigPlaybackItem}52
^{OpaqueCMTimebase=}24@0:8^{OpaqueFigPlaybackItem=}16
@32@0:8^{_NSZone=}16@24
^{OpaqueFigPlaybackItem=}20@0:8B16
B24@0:8^{CGSize=dd}16
B24@0:8^B16
@32@0:8@16^{OpaqueFigPlaybackItem=}24
{?=qiIq}24@0:8^{OpaqueCMTimebase=}16
v24@0:8i16B20
v92@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64i88
v100@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64i88@?92
B32@0:8@16@?24
v20@0:8C16
v20@0:8I16
v28@0:8@16i24
v28@0:8^{opaqueMTAudioProcessingTap=}16i24
v40@0:8^@16^@24^^{OpaqueFigVideoCompositor}32
v64@0:8{?={?=qiIq}{?=qiIq}}16
^{OpaqueFigCPEProtector=}16@0:8
@24@0:8^{__CFDictionary=}16
v32@0:8^{OpaqueFigPlaybackItem=}16@24
v32@0:8B16B20@?24
@"AVPlayerItemInternal"
v72@0:8^{OpaqueFigPlaybackItem=}16@24@32{?=qiIq}40@64
v44@0:8^{OpaqueFigPlaybackItem=}16@24i32@36
@48@0:8^{OpaqueFigPlaybackItem=}16B24i28@32@40
@"AVPlayerItemTrackInternal"
@"AVQueuePlayerInternal"
@"AVSpecifiedLoggingIdentifierInternal"
@"AVAssetLoggingIdentifierInternal"
@"AVPlayerLoggingIdentifierInternal"
^{OpaqueFigMutableComposition=}
^{OpaqueFigFormatReader=}
@"AVAssetInspector"
@"AVCompositionInternal"
B104@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72^@96
v104@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72@?96
v88@0:8{?={?=qiIq}{?=qiIq}}16{?=qiIq}64
@"AVMutableCompositionInternal"
^{__CFDictionary=}
@"AVPlayerItemMetadataOutputInternal"
@32@0:8^{opaqueCMFormatDescription=}16^{opaqueCMFormatDescription=}24
r^{opaqueCMFormatDescription=}16@0:8
@"AVCompositionTrackInternal"
B64@0:8@16@24{?=qiIq}32^@56
v32@0:8^v16^{__CFString=}24
v64@0:8{CGAffineTransform=dddddd}16
v40@0:8@16@24q32
v32@0:8^{opaqueCMFormatDescription=}16^{opaqueCMFormatDescription=}24
@"AVMutableCompositionTrackInternal"
@"NSObject"
@28@0:8B16@?20
@"AVPublisher"
^{OpaqueFigReentrantMutex=}
@"AVNotificationSubscription"
@36@0:8@16B24@?28
@"<AVCancellable>"
@"NSNumberFormatter"
B40@0:8o^@16@24o^@32
@"AVTimeFormatterInternal"
@124@0:8@16i24{?={?=qiIq}{?=qiIq}}28{?={?=qiIq}{?=qiIq}}76
@"AVCompositionTrackSegmentInternal"
@"NSObject<OS_dispatch_semaphore>"
@"AVMovieTrackInternal"
^{OpaqueFigMutableMovie=}
@28@0:8i16@20
^{OpaqueFigMutableMovie=}16@0:8
{CGSize=dd}24@0:8^{__CFString=}16
v40@0:8{CGSize=dd}16^{__CFString=}32
@24@0:8^{__CFString=}16
v32@0:8@16^{__CFString=}24
@"AVMutableMovieTrackInternal"
B24@0:8^{opaqueCMFormatDescription=}16
B108@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72B96^@100
B48@0:8^{opaqueCMSampleBuffer=}16^{?=qiIq}24^{?=qiIq}32^@40
B112@0:8{?={?=qiIq}{?=qiIq}}16{?={?=qiIq}{?=qiIq}}64
B32@0:8@16^q24
^{OpaqueFigAssetReader=}
^{OpaqueFigAssetReader=}16@0:8
@"AVAssetReaderInternal"
@"AVRunLoopCondition"
v24@0:8^{OpaqueFigAssetReader=}16
^{opaqueCMSampleBuffer=}16@0:8
@"AVAssetReaderOutputInternal"
@"AVAssetTrack"
@"AVOutputSettings"
@"AVAssetReaderTrackOutputInternal"
@"AVAudioOutputSettings"
^{opaqueMTAudioProcessingTap=}24@0:8@16
v32@0:8^{opaqueMTAudioProcessingTap=}16@24
@"AVAssetReaderAudioMixOutputInternal"
@"AVVideoOutputSettings"
@"AVAssetReaderVideoCompositionOutputInternal"
@"AVAssetReaderSampleReferenceOutputInternal"
@"<AVAssetWriterDelegate>"
@"AVMediaFileType"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"AVAssetWriterHelper"
@"<AVAssetWriterFinishWritingDelegate>"
B40@0:8@16@24@?32
v32@0:8q16q24
@"AVAssetWriterInternal"
@24@0:8^{OpaqueFigAssetWriter=}16
^{OpaqueFigAssetWriter=}
@"AVFragmentedMediaDataReportInternal"
@40@0:8@16^{OpaqueFigAssetWriter=}24@32
v28@0:8B16@"NSError"20
B56@0:8@16{?=qiIq}24^@48
^{OpaqueFigAssetWriter=}16@0:8
@"AVAssetWriterFigAssetWriterNotificationHandler"
@40@0:8@16@24^v32
@"NSOperation"
B48@0:8@16@24^{opaqueCMFormatDescription=}32^@40
@"AVAssetWriterConfigurationState"
@"AVAssetWriterInputGroupInternal"
^{opaqueCMFormatDescription=}16@0:8
^{OpaqueFigTimelineCoordinatorSuspension=}16@0:8
@"AVPlaybackCoordinator"
^{OpaqueFigTimelineCoordinatorSuspension=}
@36@0:8@16B24@28
@"NSUUID"
v24@0:8^{OpaqueFigTimelineCoordinatorSuspension=}16
v48@0:8^{OpaqueFigTimelineCoordinatorSuspension=}16{?=qiIq}24
v24@0:8^{OpaqueFigPlaybackCoordinator=}16
^{OpaqueFigPlaybackCoordinator=}16@0:8
v32@0:8@16^{OpaqueFigPlaybackCoordinator=}24
^{OpaqueFigPlaybackCoordinator=}
@"<AVPlayerPlaybackCoordinatorDelegate>"
@"<AVPlaybackCoordinationMediumDelegate>"
@"<AVOutputDeviceAuthorizationSessionDelegate>"
@"<AVOutputDeviceAuthorizationSessionImpl>"
B40@0:8@16@24@32
@"AVOutputDeviceAuthorizationSessionInternal"
@"<AVOutputDeviceAuthorizationRequestImpl>"
@"AVOutputDeviceAuthorizationRequestInternal"
v24@0:8^{opaqueCMFormatDescription=}16
v20@0:8s16
@"AVAssetWriterInputHelper"
@"AVAssetWriterInputPassDescriptionResponder"
@40@0:8@16@24^{opaqueCMFormatDescription=}32
^{__CVPixelBufferPool=}16@0:8
B40@0:8^{OpaqueFigAssetWriter=}16@24^@32
q32@0:8^{opaqueCMSampleBuffer=}16^@24
B24@0:8^{opaqueCMSampleBuffer=}16
B48@0:8^{__CVBuffer=}16{?=qiIq}24
@"AVAssetWriterInputInternal"
B40@0:8@16@24^@32
@"AVFigAssetWriterTrack"
@"AVAssetWriterInputMediaDataRequester"
^{__CVPixelBufferPool=}
@"AVAssetWriterInputPassDescription"
@"AVAssetWriterInputWritingHelper"
@"AVAssetWriterInputConfigurationState"
@"AVAssetWriterInputPixelBufferAdaptorInternal"
@76@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56@60^@68
@68@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56^@60
B32@0:8^{opaqueCMSampleBuffer=}16^@24
B56@0:8^{__CVBuffer=}16{?=qiIq}24^@48
i44@0:8@16@24B32^@36
@"NSOperationQueue"
@28@0:8^{OpaqueFigAssetWriter=}16i24
v32@0:8B16@20i28
@"AVAssetWriterInputPassDescriptionInternal"
^{CGColor=}
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
@"AVVideoCompositionInstructionInternal"
@"AVMutableVideoCompositionInstructionInternal"
v168@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112:160
v88@0:8{CGAffineTransform=dddddd}16{?=qiIq}64
v160@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112
B64@0:8{?=qiIq}16^{CGAffineTransform=dddddd}40^{CGAffineTransform=dddddd}48^{?={?=qiIq}{?=qiIq}}56
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24:72
v72@0:8f16f20{?={?=qiIq}{?=qiIq}}24
B64@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56
v136@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80:128
v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{?=qiIq}48
v128@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80
B64@0:8{?=qiIq}16^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48^{?={?=qiIq}{?=qiIq}}56
v72@0:8@16{?={?=qiIq}{?=qiIq}}24
@"AVVideoCompositionLayerInstructionInternal"
@"AVMutableVideoCompositionLayerInstructionInternal"
@"AVVideoCompositionCoreAnimationTool"
v24@0:8@"AVVideoCompositionRenderContext"16
v24@0:8@"AVAsynchronousVideoCompositionRequest"16
v24@0:8@"AVVideoCompositionRenderHint"16
B52@0:8r^^v16^@24@32B40^@44
B80@0:8@16{?={?=qiIq}{?=qiIq}}24@72
v88@0:8@16{?={?=qiIq}{?=qiIq}}24@72@?80
v24@0:8f16i20
@"AVVideoCompositionInternal"
v56@0:8@16@24^@32^@40^@48
v40@0:8@16@?24@?32
@"AVMutableVideoCompositionInternal"
@"AVVideoCompositionCoreAnimationToolInternal"
^{OpaqueFigAssetExportSession=}
@"AVMetadataItemFilter"
v48@0:8@16@24@32@?40
{?=qiIq}32@0:8@16@24
q56@0:8@16{?=qiIq}24@48
@"AVAssetExportSessionInternal"
@"<AVStreamDataParserOutputHandling>"
^{OpaqueFigManifold=}
^{OpaqueCMBlockBuffer=}
@"AVContentKeyRequest"
v32@0:8^{OpaqueCMBlockBuffer=}16Q24
v32@0:8@16Q24
v24@0:8B16i20
B20@0:8i16
@"AVStreamDataParserInternal"
i40@0:8^{OpaqueFigManifold=}16^{opaqueCMSampleBuffer=}24i32I36
i28@0:8^{OpaqueFigManifold=}16i24
i44@0:8^{OpaqueFigManifold=}16^{opaqueCMFormatDescription=}24^v32i40
i20@0:8i16
v24@0:8^{OpaqueFigManifold=}16
i36@0:8^{OpaqueFigManifold=}16i24@28
i32@0:8^{OpaqueCMBlockBuffer=}16^^{OpaqueFigManifold}24
^{OpaqueCMBlockBuffer=}40@0:8@16Q24Q32
@24@0:8^{OpaqueCMBlockBuffer=}16
v32@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24
v32@0:8@"AVContentKeySession"16@"AVPersistableContentKeyRequest"24
v40@0:8@"AVContentKeySession"16@"NSData"24@32
v40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSError"32
B40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSString"32
v24@0:8@"AVContentKeySession"16
@52@0:8@16@24i32@36^@44
@"<AVMediaDataRequesterConsumer>"
v32@0:8@"NSDictionary"16@?<v@?@"AVOutputDeviceCommunicationChannel"@"NSError"@"NSString">24
v24@0:8@"AVOutputDevice"16
@32@0:8@16^{OpaqueAPSyncController=}24
v40@0:8^{__CFData=}16^{__CFString=}24^{__CFString=}32
v32@0:8^{__CFString=}16^{__CFString=}24
@"AVOutputDevice"
@40@0:8@16^{__CFString=}24^{OpaqueAPSyncController=}32
@"AVSynchronizedLayerInternal"
@"<AVOutputDeviceCommunicationChannelDelegate>"
@"<AVOutputDeviceCommunicationChannelManager>"
v32@0:8@?16@?24
@"AVOutputDeviceInternal"
d24@0:8@16
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@"NSString"24
@36@0:8@16@24B32
@"AVOutputDeviceAuthorizedPeerInternal"
@52@0:8@16@24@32B40@44
@"AVPairedDeviceInternal"
@"<AVOutputDeviceCommunicationChannelImpl>"
@52@0:8@16@24q32B40@44
i24@0:8^^{OpaqueFigVideoQueue}16
v24@0:8^{OpaqueCMTimebase=}16
B32@0:8^{OpaqueCMTimebase=}16^@24
i32@0:8^^{OpaqueFigVideoQueue}16^@24
^{OpaqueFigVideoQueue=}16@0:8
i32@0:8^{opaqueCMSampleBuffer=}16^{?={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}}24
v32@0:8^{opaqueCMSampleBuffer=}16^{?={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}}24
v28@0:8B16@?20
v32@0:8B16@?20i28
i24@0:8^{OpaqueFigVideoQueue=}16
^{OpaqueFigVideoQueue=}
@"AVSampleBufferDisplayLayer"
^{__CFArray=}
@"AVMediaDataRequester"
@"AVSampleBufferRenderSynchronizer"
B44@0:8i16{?=qiIq}20
@24@0:8^{OpaqueFigMetadataReader=}16
@48@0:8@16@24@32@40
@56@0:8^{OpaqueFigMetadataReader=}16@24@32@40@48
v24@0:8^{OpaqueFigMetadataReader=}16
@24@0:8^{OpaqueFigEndpoint=}16
^{OpaqueFigEndpoint=}16@0:8
^{OpaqueFigEndpoint=}
@32@0:8^{OpaqueFigEndpoint=}16@24
@32@0:8^{__CFDictionary=}16Q24
^{__CFDictionary=}16@0:8
v24@0:8^{__CFDictionary=}16
@"NSURLSessionTaskMetrics"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v40@0:8^{__CFDictionary=}16Q24@32
i40@0:8^{__CFDictionary=}16Q24^B32
i24@0:8Q16
@24@0:8^{OpaqueFigAsset=}16
@"NSURLSession"
^{OpaqueFigCustomURLHandler=}
^{_CFURLConnection=}16@0:8
v24@0:8^{_CFURLConnection=}16
^{_CFURLConnection=}
^{__CFError=}
i32@0:8^{__CFDictionary=}16Q24
v32@0:8@16^{__CFError=}24
B40@0:8@16^{_CFURLRequest=}24^{_CFURLResponse=}32
v32@0:8@16^{_CFURLResponse=}24
v32@0:8@16^{__CFData=}24
i56@0:8^{__CFDictionary=}16Q24q32@40^{OpaqueFigCustomURLHandler=}48
i40@0:8^{__CFDictionary=}16Q24*32
@"AVAudioMixInternal"
@"AVMutableAudioMixInternal"
r^{opaqueMTAudioProcessingTap=}16@0:8
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24q72
B72@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56^q64
@"AVAudioMixInputParametersInternal"
@"AVMutableScheduledAudioParameters"
@"AVAudioMixEffectParameters"
@"AVMutableAudioMixInputParametersInternal"
@96@0:8@16{?=qiIq}24{?=qiIq}48{?=qiIq}72
@"<AVOutputContextImpl>"
@"<AVOutputContextCommunicationChannelDelegate>"
B32@0:8@16Q24
@"AVOutputContextInternal"
@"<AVOutputContextCommunicationChannelImpl>"
@"AVOutputContextCommunicationChannelInternal"
@"AVOutputContextDestinationChangeInternal"
@"<AVOutputContextManagerImpl>"
@"AVOutputContextManagerInternal"
@24@0:8^{__CFRunLoop=}16
^{__CFRunLoop=}16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
^{__CFRunLoop=}
^{__CFRunLoopSource=}
@24@0:8^{OpaqueFigFormatReader=}16
v24@0:8^{OpaqueFigFormatReader=}16
^v24@0:8^{__CFString=}16
@32@0:8^{OpaqueFigPlaybackItem=}16@24
@"AVScheduledAudioParametersInternal"
@"AVMutableScheduledAudioParametersInternal"
B48@0:8q16@24^q32^@40
v32@0:8^@16^@24
v32@0:8@?16@24
^{OpaqueConcurrentAccessDetector=}
^{OpaqueFigSimpleMutex=}16@0:8
^{OpaqueFigFormatReader=}24@0:8^i16
B28@0:8q16i24
v48@0:8@16@24@32@40
@56@0:8@16Q24@32@40@48
@32@0:8^{OpaqueFigAsset=}16@24
q40@0:8@16^{OpaqueFigAsset=}24^@32
q40@0:8@16^@24^@32
B32@0:8q16q24
@"AVRoutingSessionManagerInternal"
@"AVRoutingSessionInternal"
@"AVRoutingSessionDestinationInternal"
^{OpaqueFigSampleCursorService=}24@0:8^B16
^{OpaqueFigTrackReader=}
^{OpaqueFigSampleCursorService=}
^{OpaqueFigSampleGenerator=}
v32@0:8^{opaqueCMSampleBuffer=}16@?24
@32@0:8@16^{OpaqueCMTimebase=}24
^{OpaqueFigSampleGenerator=}16@0:8
^{opaqueCMSampleBuffer=}32@0:8@16^@24
^{opaqueCMSampleBuffer=}24@0:8@16
^{opaqueCMSampleBuffer=}40@0:8@16@24^@32
@"AVSampleBufferGeneratorInternal"
@"AVSampleCursor"
@"AVSampleBufferRequestInternal"
@"AVSampleBufferGenerator"
^{OpaqueFigSampleGeneratorBatch=}
@"AVAssetSegmentReportSampleInformation"
^v24@0:8@16
@28@0:8^{opaqueCMFormatDescription=}16i24
@"AVStreamDataParser"
@"AVStreamDataAssetInspector"
@"AVAssetSynchronousInspectorLoader"
@"AVPlayerItemMediaDataCollectorInternal"
@24@0:8^{opaqueCMNotificationCenter=}16
^{opaqueCMNotificationCenter=}16@0:8
v52@0:8@16^?24^{__CFString=}32^v40I48
v48@0:8@16^?24^{__CFString=}32^v40
@48@0:8@16^?24^{__CFString=}32^v40
^{opaqueCMNotificationCenter=}
@48@0:8@16^?24@32^v40
v24@0:8@?<v@?>16
@"NSCondition"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"AVAssetTrackGroupInternal"
^{opaqueCMSampleBuffer=}
@72@0:8@16{?={?=qiIq}{?=qiIq}}24
@24@0:8^{opaqueCMSampleBuffer=}16
@"AVTimedMetadataGroupInternal"
^{opaqueCMSampleBuffer=}32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVDateRangeMetadataGroupInternal"
@32@0:8@16B24B28
@"AVManagedAssetCacheInternal"
^{CMBaseObject=}
@"AVAssetDownloadCacheInternal"
{?=ii}16@0:8
@24@0:8{?=ii}16
@100@0:8@16@24@32q40f48{?=qiIq}52{?=qiIq}76
@"AVDelegatingPlaybackCoordinator"
@"AVCoordinatedPlaybackParticipant"
@60@0:8@16@24@32q40f48@52
@56@0:8@16@24@32q40B48f52
@92@0:8@16@24@32q40{?=qiIq}48B72B76f80@84
v28@0:8f16Q20
v48@0:8{?=qiIq}16Q40
v32@0:8@16^{OpaqueCMTimebase=}24
^{OpaqueFigTimelineCoordinator=}
@"<AVPlaybackCoordinatorPlaybackControlDelegate>"
@"AVPlayerItemAccessLogInternal"
@"AVPlayerItemAccessLogEventInternal"
@32@0:8@16d24
@"AVFragmentedMovieTrackInternal"
@"AVPlayerItemErrorLogInternal"
@"AVPlayerItemErrorLogEventInternal"
@"AVExternalPlaybackMonitorInternal"
@"<AVAudioSessionDelegateMediaPlayerOnly>"
B36@0:8B16q20^@28
@"AVAudioSessionMediaPlayerOnlyInternal"
@"AVMediaSelectionGroupInternal"
@44@0:8@16@24@32B40
@"AVMediaSelectionOption"
B36@0:8@16B24q28
@"AVMediaSelectionOptionInternal"
{?=qiIq}48@0:8^{__CFString=}16{?=qiIq}24
{?=qiIq}24@0:8^{__CFString=}16
{?={?=qiIq}{?=qiIq}}24@0:8^{__CFString=}16
f28@0:8^{__CFString=}16f24
f24@0:8^{__CFString=}16
s24@0:8^{__CFString=}16
i24@0:8^{__CFString=}16
q24@0:8^{__CFString=}16
C24@0:8^{__CFString=}16
{CGSize=dd}40@0:8^{__CFString=}16{CGSize=dd}24
{CGAffineTransform=dddddd}24@0:8^{__CFString=}16
Q24@0:8@16
Q32@0:8@16^@24
@32@0:8@16^{opaqueCMFormatDescription=}24
^{__CFString=}24@0:8@16
B32@0:8@"AVAudioOutputSettings"16^@24
B32@0:8@"AVVideoOutputSettings"16^@24
v36@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24^{opaqueCMFormatDescription=}28
^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}32@0:8^{opaqueCMFormatDescription=}16^Q24
v48@0:8@16^@24^@32^@40
B48@0:8@16@24@32^@40
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
f28@0:8f16q20
I28@0:8I16q20
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
^{OpaqueAudioConverter=}
@32@0:8d16d24
@32@0:8{AudioValueRange=dd}16
@"AVAssetDownloadSessionInternal"
v32@0:8Q16Q24
i24@0:8^{OpaqueFigAsset=}16
^{OpaqueFigAsset=}24@0:8@16
^{OpaqueFigSampleCursor=}
@24@0:8^{OpaqueFigSampleCursor=}16
^{OpaqueFigSampleCursor=}16@0:8
q24@0:8q16
{?=qiIq}48@0:8{?=qiIq}16^B40
^{opaqueCMSampleBuffer=}24@0:8^@16
{?=BBB}16@0:8
{?=BBBBBB}16@0:8
{?=Bq}16@0:8
{?=qq}16@0:8
{?=qBBB}16@0:8
@"AVSampleCursorInternal"
{?=qiIq}24@0:8d16
{?=qiIq}24@0:8q16
@"AVPlayerItemOutputInternal"
^{__CVBuffer=}52@0:8{?=qiIq}16B40^{?=qiIq}44
@"AVPlayerItemVideoOutputInternal"
@"AVFragmentedAssetInternal"
v28@0:8d16B24
@"AVFragmentedAssetMinderInternal"
@"AVFragmentedAssetTrackInternal"
v44@0:8@16{CGSize=dd}24B40
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGSize=dd}16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"AVSampleBufferVideoRenderer"
@"AVSampleBufferVideoOutput"
@48@0:8@16Q24Q32Q40
@"NSObject<OS_xpc_object>"
:16@0:8
@"AVWeakReference"16@0:8
@48@0:8@16@24^{__CFDictionary=}32Q40
@64@0:8@16@24q32@40@48@56
^{OpaqueFigCustomURLLoader=}
@"AVAssetCustomURLBridgeForNSURLSession"
^{OpaqueFigCustomURLHandler=}16@0:8
^{OpaqueFigCustomURLLoader=}16@0:8
v52@0:8:16@24B32@36@?44
v32@0:8^{__CFDictionary=}16Q24
v44@0:8@16@24B32@?36
v40@0:8^{__CFDictionary=}16Q24^B32
v24@0:8^{OpaqueFigCustomURLHandler=}16
@"AVAssetResourceLoaderInternal"
v48@0:8@16q24@32@40
v32@0:8@"NSURLCredential"16@"NSURLAuthenticationChallenge"24
v24@0:8@"NSURLAuthenticationChallenge"16
@"AVAssetResourceLoadingContentInformationRequestInternal"
@48@0:8@16q24q32B40B44
@"AVAssetResourceLoadingDataRequestInternal"
@"NSMutableURLRequest"
@"NSURLResponse"
@"NSURLRequest"
@"NSMutableData"
@"AVAssetResourceLoadingContentInformationRequest"
@"AVAssetResourceLoadingDataRequest"
@"AVAssetResourceLoadingRequestor"
@40@0:8@16^{__CFDictionary=}24Q32
@80@0:8@16@24@32@40@48@56^{OpaqueFigCPECryptor=}64Q72
@52@0:8@16@24@32B40^@44
@48@0:8@16@24@32^@40
@"AVAssetResourceLoadingRequestInternal"
@"AVAssetResourceLoadingRequestorInternal"
^{OpaqueFigSampleBufferRenderSynchronizer=}
B76@0:8f16{?=qiIq}20{?=qiIq}44^@68
i68@0:8f16{?=qiIq}20{?=qiIq}44
@"AVSampleBufferRenderSynchronizerInternal"
@?24@0:8@16
v40@0:8@16@?24@32
B56@0:8@16{?=qiIq}24@?48
v56@0:8@16{?=qiIq}24@?48
^{OpaqueFigSampleBufferRenderSynchronizer=}40@0:8r^{__CFAllocator=}16r^{__CFDictionary=}24^@32
@"FigAlternateObjC"
@"AVAssetVariantVideoAttributes"
@"AVAssetVariantAudioAttributes"
@24@0:8^{OpaqueFigAlternate=}16
^{OpaqueFigAlternate=}16@0:8
@40@0:8q16@24Q32
@32@0:8d16Q24
@"NSPredicate"
@"AVAssetVariant"
@"NSPredicateOperator"
@"AVTextStyleRuleInternal"
@56@0:8@16@24@32@40B48B52
@56@0:8@16@24@32@40q48
v24@0:8^{__CVBuffer=}16
@"AVAsynchronousVideoCompositionRequest"
@"CIImage"
^{__CVBuffer=}
@56@0:8@16^{__CVBuffer=}24@?32@?40@?48
@"AVAsynchronousCIImageFilteringRequestInternal"
@80@0:8{?={?=qiIq}{?=qiIq}}16@64@?72
@"NSObject<OS_dispatch_group>"
@"CIContext"
@"<AVPlayerItemOutputHost>"24@0:8@"AVPlayerItem"16
@"<AVPlayerItemLegibleOutputDependencyFactory>"
v56@0:8@16@24{?=qiIq}32
@"AVPlayerItemLegibleOutputInternal"
@"<AVOutputSettingsAssistantBaseSettingsProvider>"
@"<AVOutputSettingsAssistantVideoSettingsAdjuster>"
@"AVOutputSettingsAssistantInternal"
q36@0:8^{opaqueCMFormatDescription=}16f24@28
q36@0:8^{opaqueCMFormatDescription=}16f24@"NSDictionary"28
@"NSDictionary"32@0:8@"NSArray"16@"NSDictionary"24
B24@0:8@"NSString"16
@"AVMediaSelectionInternal"
@"AVExternalDeviceHIDInternal"
@"AVExternalDeviceIconInternal"
@"<AVExternalDeviceDelegate>"
@"AVExternalDevice"
@"AVExternalDeviceInternal"
@"AVPlayerLayerIntermediateLayer"
@"NSSet"
v32@0:8@"<AVVideoCompositing>"16@"NSException"24
^{OpaqueFigVideoCompositor=}16@0:8
v32@0:8^{OpaqueFigVideoCompositorFrame=}16^{__CVBuffer=}24
v32@0:8^{OpaqueFigVideoCompositorFrame=}16@24
v24@0:8^{OpaqueFigVideoCompositorFrame=}16
^{OpaqueFigVideoCompositor=}
@"<AVVideoCompositing>"
@"AVVideoCompositionRenderContext"
i72@0:8^{OpaqueFigVideoCompositorFrame=}16{?=qiIq}24@48@56^v64
i112@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88
i120@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88q112
@24@0:8f16i20
@"AVDisplayCriteriaInternal"
@48@0:8@16@24Q32@?40
@"AVCallbackContextRegistry"
@?32@0:8@16@?24
v24@0:8@"NSDictionary"16
@"NSObject"16@0:8
@64@0:8@16@24@32@40Q48@?56
@"NSObject<AVWeakObservable>"
@56@0:8@16@24@32Q40^v48
v32@0:8@"NSString"16@"AVTwoPartKeyPath"24
@"AVWeakObservableCallbackCancellationHelper"
@"AVKVODispatcher"
@"AVTwoPartKeyPath"
@"<AVKVOIntrospection><AVCallbackCancellation>"
^{OpaqueFigVideoCompositorFrame=}16@0:8
^{OpaqueFigVideoCompositorFrame=}
@"<AVVideoCompositionInstruction>"
^{__CVBuffer=}20@0:8i16
^{opaqueCMSampleBuffer=}20@0:8i16
@"AVAsynchronousVideoCompositionRequestInternal"
@88@0:8@16@24^{OpaqueFigVideoCompositorFrame=}32{?=qiIq}40@64@72@80
@"AVOutputDeviceDiscoverySession"
@"DADiscovery"
@"AVRouteDetectorInternal"
{?="horizontalSpacing"q"verticalSpacing"q}
{?="left"d"top"d"right"d"bottom"d}
{?="width"i"height"i}
{?=dddd}16@0:8
@"AVVideoCompositionRenderContextInternal"
@48@0:8^{OpaqueFigVideoCompositor=}16@24@32^{__CVPixelBufferPool=}40
B24@0:8^{OpaqueFigVideoCompositor=}16
B24@0:8^{__CVBuffer=}16
@24@0:8^{OpaqueFigVideoCompositor=}16
@"AVMediaDataStorageInternal"
@48@0:8^{OpaqueFigFormatReader=}16@24@32@40
^{OpaqueFigMutableMovie=}24@0:8^{OpaqueFigFormatReader=}16
@"AVMovieInternal"
^{OpaqueFigMutableMovie=}24@0:8@16
B48@0:8@16@24Q32^@40
@"AVMutableMovieInternal"
^{opaqueCMSampleBuffer=}28@0:8i16^I20
v24@0:8i16i20
v32@0:8@16^{OpaqueFigPlaybackItem=}24
@"AVContentKeyReportGroup"
@"AVContentKeySpecifier"
@"AVContentKey"
^{OpaqueFigCFWeakReferenceHolder=}
^{FigContentKeySpecifier=}
B52@0:8^{OpaqueFigCPECryptor=}16B24^Q28^B36^@44
@52@0:8@16@24@32Q40i48
@76@0:8@16@24@32@40@48@56@64B72
@72@0:8@16@24^{OpaqueFigCustomURLHandler=}32@40^{__CFDictionary=}48Q56B64B68
@100@0:8@16^{CMBaseObject=}24B32^{FigContentKeySpecifier=}36@44@52@60B68q72B80@84@92
^{CMBaseObject=}16@0:8
^{OpaqueFigCPECryptor=}16@0:8
v24@0:8^{OpaqueFigCPECryptor=}16
B32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVContentKeyRequestInternal"
@56@0:8@16@24@32@40@48
@"AVContentKeyResponseInternal"
@"NSMapTable"
^{OpaqueFigSecureStopManager=}32@0:8@16@24
v44@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24q32B40
v48@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24q32^{OpaqueFigCPECryptor=}40
v32@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24
v48@0:8@16@24q32@40
v48@0:8@16@24@32q40
@"AVContentKeySessionInternal"
v40@0:8@16@24Q32
@32@0:8@16Q24
v28@0:8@?16B24
i24@0:8@16
v32@0:8@16:24
v52@0:8^{OpaqueFigCustomURLHandler=}16@24^{__CFDictionary=}32Q40B48
v44@0:8@16@24@32B40
v72@0:8^{FigContentKeySpecifier=}16@24@32@40q48@56@64
v48@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32@40
r^{OpaqueFigCPECryptor=}24@0:8@16
B40@0:8^{opaqueCMFormatDescription=}16r^^{OpaqueFigCPECryptor}24^@32
r^{OpaqueFigCPECryptor=}40@0:8@16^{opaqueCMFormatDescription=}24^@32
^{OpaqueFigCPECryptor=}24@0:8@16
v48@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32^B40
i32@0:8@16^^{OpaqueFigCustomURLHandler}24
q52@0:8@16i24@28q36^@44
q36@0:8@16i24^@28
B32@0:8^q16^@24
@48@0:8@16@24^{opaqueCMFormatDescription=}32@40
B32@0:8q16^@24
^{OpaqueFigContentKeySession=}
r^{OpaqueFigCPECryptor=}56@0:8@16@24^{opaqueCMFormatDescription=}32@40^@48
r^{OpaqueFigCPECryptor=}32@0:8@16@24
r^{OpaqueFigContentKeySession=}16@0:8
@60@0:8@16@24^{CMBaseObject=}32B40q44@52
i32@0:8^{OpaqueFigCPECryptor=}16@24
@32@0:8@16^{OpaqueFigCPECryptor=}24
@32@0:8^{__CFString=}16^{OpaqueAPSyncController=}24
@32@0:8^{__CFString=}16^{__CFString=}24
v024
f024
ARGB
024x
02fx
