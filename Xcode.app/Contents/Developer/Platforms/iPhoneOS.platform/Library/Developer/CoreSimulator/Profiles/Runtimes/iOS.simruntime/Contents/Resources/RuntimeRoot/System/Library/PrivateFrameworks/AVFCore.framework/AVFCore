<<<< AVOutputDeviceGroup (AVOutputContext) >>>> %s: called (self=%p)
<<<< AVOutputDeviceGroup (AVOutputContext) >>>> %s: called (self=%p, outputDevice=%@, options=%@)
<<<< AVPlayerLooper >>>> %s: Create with player %p and item %p
<<<< AVPlayerLooper >>>> %s: AVPlayerLooperInternal allocation failed
<<<< AVPlayerLooper >>>> %s: ivarAccessQueue allocation failed
<<<< AVPlayerLooper >>>> %s: loopingItemCopies allocation failed
<<<< AVPlayerLooper >>>> %s: Couldn't set up for looping. Change status to Failed
<<<< AVPlayerLooper >>>> %s: Couldn't load asset duration. Change status to Failed
<<<< AVPlayerLooper >>>> %s: Change to Failed status with error %@
<<<< AVPlayerLooper >>>> %s: Already in Failed state so not updating error
<<<< AVPlayerLooper >>>> %s: Time range duration is %1.3f
<<<< AVPlayerLooper >>>> %s: Loop item duration is %1.3f
<<<< AVPlayerLooper >>>> %s: Using loop duration of %1.3f
<<<< AVPlayerLooper >>>> %s: Looping item duration is 0. Can't loop
<<<< AVPlayerLooper >>>> %s: Loop duration is less than minimum so capped number of copies to %d
<<<< AVPlayerLooper >>>> %s: Need %d copies for looping
<<<< AVPlayerLooper >>>> %s: The minimum number of copies (%d) is sufficient for looping
<<<< AVPlayerLooper >>>> %s: Loop time range starts past item duration
<<<< AVPlayerLooper >>>> %s: Loop time range end is past item duration
<<<< AVPlayerLooper >>>> %s: Need to create %d item copies
<<<< AVPlayerLooper >>>> %s: Can't loop with 0 item copies
<<<< AVPlayerLooper >>>> %s: Failed to allocate item copy
<<<< AVPlayerLooper >>>> %s: Pausing player (current rate: %1.1f) during set up
<<<< AVPlayerLooper >>>> %s: Changing player's action-at-end to Advance
<<<< AVPlayerLooper >>>> %s: In Failed or cancelled state so cannot advance to Ready
<<<< AVPlayerLooper >>>> %s: Restoring player rate(%1.1f)
<<<< AVPlayerLooper >>>> %s: observeValueForKeyPath:ofObject:change:context: called for %@
<<<< AVPlayerLooper >>>> %s: Looping turned off and not waiting for looping copy to finish so ignoring
<<<< AVPlayerLooper >>>> %s: Looping item(%p) failed to become ready so disabling looping
<<<< AVPlayerLooper >>>> %s: Unknown context(%p). Ignoring
<<<< AVPlayerLooper >>>> %s: [%p]Disabling looping since item(%p) failed to play to end with error %@
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputDeviceDiscoverySession >>>> %s: *** nil impl! ***
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (targetAudioSession=%@)
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (session=%p, discoveryMode=%d, clientIdentifiers=%@)
<<<< AVOutputDeviceDiscoverySession >>>> %s: Available output devices: %@
<<<< AVOutputDeviceDiscoverySession >>>> %s: Returning %@
<<<< AVOutputDeviceDiscoverySession >>>> %s: Posting %@
<<<< AVOutputDeviceDiscoverySession >>>> %s: recentlyUsedDevices = %@
<<<< AVOutputDeviceDiscoverySession >>>> %s: otherDevices = %@
<<<< AVOutputDevice (APSyncController) >>>> %s: Registering local device listeners.
<<<< AVOutputDevice (APSyncController) >>>> %s: Failed to copy SyncController with error: %d
<<<< AVOutputDevice (APSyncController) >>>> %s: called (self=%p, syncController=%p, backupImpl=%@)
<<<< AVOutputDevice (APSyncController) >>>> %s: called (self=%p)
<<<< AVOutputDevice (APSyncController) >>>> %s: Device description for device with ID %@, type %@ and name %@ not constructed.
<<<< AVOutputDevice (APSyncController) >>>> %s: called (self=%p, ID=%@, endpointID=%@)
<<<< AVOutputDevice (APSyncController) >>>> %s: called (inLocalSpeakerUUID = %@, inError = %d)
<<<< AVOutputDevice (APSyncController) >>>> %s: called (endpointID=%{private}@)
<<<< AVOutputDevice (APSyncController) >>>> %s: called
<<<< AVPlayerLayer >>>> %s: <%p> Hiding video layer since the presentation size is 0x0
<<<< AVPlayerLayer >>>> %s: called (self=%p)
<<<< AVPlayerLayer >>>> %s:  <%p> Hiding video layer since the presentation size for player %p is 0x0
<<<< AVPlayerLayer >>>> %s: %@ frame is { %f, %f }
<<<< AVPlayerLayer >>>> %s: <%p> Unhiding video layer since the presentation size for player %p is { %f, %f }
<<<< AVPlayerLayer >>>> %s: <%p> Setting closed caption layer bounds to %@
<<<< AVPlayerLayer >>>> %s: <%p> Using box filter downscale
<<<< AVPlayerLayer >>>> %s: Called (self=%p, bounds=%@)
<<<< AVPlayerLayer >>>> %s: displaySize is %f x %f rootSize is %f x %f percentage %f
<<<< AVPlayerLayer >>>> %s: Display Size is %f x %f scale is %f
<<<< AVPlayerLayer >>>> %s: %p notifying player %p about new display size %@
<<<< AVPlayerLayer >>>> %s: Called (self=%p)
<<<< AVPlayerLayer >>>> %s: <%p> size needs update from { %f, %f } to { %f, %f } (force=%s)
<<<< AVPlayerLayer >>>> %s: <%p> size needs no update using cached value { %f, %f }
<<<< AVPlayerLayer >>>> %s: %@ commence player <%p> observation
<<<< AVPlayerLayer >>>> %s: %@ resign player <%p> observation over currentItem.presentationSize
<<<< AVPlayerLayer >>>> %s: <%p> Did cancel all observation of old player
<<<< AVPlayerLayer >>>> %s: called (keyPath=%@, object=%@, change=%@, context=%p
<<<< AVPlayerLayer >>>> %s: %@ AVPlayerLayer's net flip status does not match CoreAnimation default; adding a flip at videoLayer
<<<< AVPlayerLayer >>>> %s: %@ AVPlayerLayer's net flip status does match CoreAnimation default
<<<< AVPlayerLayer >>>> %s: <%p> Not applying new value of AVPlayer.currentItem.nonForcedSubtitleDisplayEnabled for player %p not currently being observed (expected %p)
<<<< AVPlayerLayer >>>> %s: <%p> Not applying new value of AVPlayer.isDisplayingClosedCaptions for player %p not currently being observed (expected %p)
<<<< AVPlayerLayer >>>> %s: <%p> %@ closed caption layer
<<<< AVPlayerLayer >>>> %s: %@ setting player to <%p> forPIP:%d
<<<< AVPlayerLayer >>>> %s: Setting readyForDisplay to NO due to detaching from player %@ (self=%p)
<<<< AVPlayerLayer >>>> %s: sync to player (self=%p, player=%p)
<<<< AVPlayerLayer >>>> %s: %@ setting self on player <%p>
<<<< AVPlayerLayer >>>> %s: <%p> called
<<<< AVPlayerLayer >>>> %s: %@ visibility became YES
<<<< AVPlayerLayer >>>> %s: %@ visibility became NO
<<<< AVPlayerLayer >>>> %s: <%p> finished
<<<< AVPlayerLayer >>>> %s: called (self=%p, item=%p, readyForDisplay=%d)
<<<< AVPlayerLayer >>>> %s: requesting the pixelBufferAttributes property on a presentation layer is invalid
<<<< AVPlayerLayer >>>> %s: creating interstitialLayer %p for primary playerLayer %p
<<<< AVPlayerLayer >>>> %s: Scheduling interstitialLayer %p visibility to %d and primary (mask) layer %p visibility to %d (delayed to %f, now %f)
<<<< AVPlayerLayer >>>> %s: Setting interstitialLayer %p visibility to %d and primary (mask) layer %p visibility to %d
<<<< AVPlayerLayer >>>> %s: scalingFactor(%d) is not between 2 and 8
<<<< AVPlayerLayer >>>> %s: setting forScrubbingOnly = %d
<<<< AVPlayerLayer >>>> %s: %@ showing interstitial, call interstitial player _copyDisplayedPixelBuffer
<<<< AVPlayerLayer >>>> %s: player layer %p <-> player layer %p
<<<< AVPlayerLayer >>>> %s: AVPlayerLayer already connected to second screen
<<<< AVPlayerLayer >>>> %s: %@ entering second screen mode using %p
<<<< AVPlayerLayer >>>> %s: %@ leaving second screen mode
<<<< AVPlayerLayer >>>> %s: %@ left second screen mode
<<<< AVPlayerLayer >>>> %s: %@ already in PIP mode but will use %p instead of %p
<<<< AVPlayerLayer >>>> %s: %@ entering PIP mode using %p
<<<< AVPlayerLayer >>>> %s: %@ became PIP'ed
<<<< AVPlayerLayer >>>> %s: %@ leaving PIP mode
<<<< AVPlayerLayer >>>> %s: %@ left PIP mode
<<<< AVPlayerLayer >>>> %s: Error in traversing layer tree
<<<< AVPlayerLayer >>>> %s: <%p> Restoring client layer %@ with indexPath %@
<<<< AVPlayerLayer >>>> %s: <%p> setting new sublayers: videoLayer(%p), closedCaptionLayer(%p), subtitleLayer(%p), interstitialLayers = %@
<<<< AVPlayerLayer >>>> %s: Cannot set sublayers while PIP is active
<<<< AVPlayerLayer >>>> %s: Cannot add sublayer while PIP is active
<<<< AVPlayerLayer >>>> %s: Cannot insert sublayer while PIP is active
<<<< AVPlayerLayer >>>> %s: Cannot replace sublayer while PIP is active
<<<< AVPlayerLayer >>>> %s: <%p> Regardless of the state of PIP the layer is in, removeFromSuperLayer is always allowed
<<<< AVPlayerLayer >>>> %s: <%p> return default based on last window scene event %d
<<<< AVPlayerLayer >>>> %s: %p got window scene in state %ld
<<<< AVPlayerLayer >>>> %s: no window scene in _currentWindowSceneIsForeground <%p> , return default %d
<<<< AVPlayerLayer >>>> %s: Window scene containing layer <%p> did enter background
<<<< AVPlayerLayer >>>> %s: Window scene containing layer <%p> will enter foreground
<<<< AVPlayerLayer >>>> %s: %p check should notify player _playerLayer->lastWindowSceneEvent > None (%d), isVisible (%d), _isPartOfForegroundScene (%d)
<<<< AVPlayerLayer >>>> %s: %p skip notifying player as isVisible (%d) !=  _isPartOfForegroundScene
<<<< AVPlayerLayer >>>> %s: <%p> layer active state changed to %d
<<<< AVPlayerLayer >>>> %s: Storing client layer %@ with indexPath %@
<<<< AVTimebaseObserver >>>> %s: engage timebase <%p> notifications for <%p>
<<<< AVTimebaseObserver >>>> %s: firing at time == %@
<<<< AVTimebaseObserver >>>> %s: timebase rate change from [%f] to [%f]
<<<< AVTimebaseObserver >>>> %s: Playback stopped. Observe immediate.
<<<< AVTimebaseObserver >>>> %s: Playback resumed. Observe immediate.
<<<< AVTimebaseObserver >>>> %s: rescheduling after non-periodic firing near time == %@
<<<< AVTimebaseObserver >>>> %s: rescheduling after periodic firing at time == %@
<<<< AVTimebaseObserver >>>> %s: scheduling for == %@
<<<< AVTimebaseObserver >>>> %s: Periodic Observer <%p>: Detected stop time jump to the last time where rate fell to zero and have winnowed this event
<<<< AVTimebaseObserver >>>> %s: Periodic Observer <%p> Jumped to time [%f]
<<<< AVTimebaseObserver >>>> %s: Occasional timebase observer <%p> created with timebase %p and fire times: %@
<<<< AVTimebaseObserver >>>> %s: Occasional timebase observer <%p> Firing at current time [%1.3f]
<<<< AVTimebaseObserver >>>> %s: Playback direction did change. Resetting timer
<<<< AVTimebaseObserver >>>> %s: Occasional timebase observer <%p> with source <%p> at current time [%f] nextfire [%f]
<<<< AVTimebaseObserver >>>> %s: Absolute timebase observer <%p> created for firing time [%1.3f]
<<<< AVTimebaseObserver >>>> %s: Absolute timebase observer <%p> firing for firing time [%1.3f] at current time [%1.3f]
<<<< AVTimebaseObserver >>>> %s: Absolute timebase observer <%p> with source <%p> at current time [%f] nextfire [%f]
<<<< AVTimebaseObserver >>>> %s: Timebase observer invalidated, ignoring notification
<<<< AVTimebaseObserver >>>> %s: Timebase returned time(%@), clamped from time(%@)
<<<< AVTimebaseObserver >>>> %s: Timebase returned time(%@)
<<<< AVTimebaseObserver >>>> %s: Timebase returned non-numeric time (%lld/%d/%#x/%lld)) so setting to kCMTimeZero
<<<< AVTimebaseObserver >>>> %s: Timebase returned time with non-zero epoch(%lld) so setting to kCMTimeZero
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVPlayerInterstitialEventController.m %s:  Unrecognized notification: %@
<<<< AVSampleBufferVideoOutput >>>> %s: FigVisualContextCreate failed: %d
<<<< AVSampleBufferVideoOutput >>>> %s: FigVisualContextSetImageAvailableImmediateCallback failed: %d
<<<< AVSampleBufferVideoOutput >>>> %s: Unable to copy next image from visual context. Bailing.
<<<< AVSampleBufferVideoOutput >>>> %s: FigVisualContextCopyImageForTime did not provide a imageOriginalTimeOut value. Bailing.
<<<< AVSampleBufferVideoOutput >>>> %s: copyPixelBufferForSourceTime requestTime %1.3f pb %p time %1.3f
<<<< AVSampleBufferVideoOutput >>>> %s: FigVideoQueueSetProperty for kFigVideoQueueProperty_VisualContextArray failed: %d
<<<< AVSampleBufferVideoOutput >>>> %s: FigVideoQueueSetProperty for kFigVideoQueueProperty_VisualContextArrayOptions failed: %d
<<<< AVSampleBufferVideoOutput >>>> %s: Dispatching -outputSequenceWasFlushed:
<<<< AVSampleBufferVideoOutput >>>> %s: Sending -outputSequenceWasFlushed: to delegate
<<<< AVAssetDownloadStorageManager >>>> %s: Set storageManagementPolicy %@ for asset at URL %@
<<<< AVAssetDownloadStorageManager >>>> %s: StorageManagementPolicy for asset at URL %@ is  %@ 
<<<< AVOutputDeviceGroup >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputDeviceGroup >>>> %s: outputDevices = %@
<<<< AVOutputDeviceGroup >>>> %s: Posting %{public}@ with initiator %{public}@
<<<< AVOutputDeviceGroup >>>> %s: called (device=%{private}@ authToken? %d cancelIfAuthRequired=%{public}@, initiator=%{public}@)
<<<< AVOutputDeviceGroup >>>> %s: Result: %{public}@
<<<< AVOutputDeviceGroup >>>> %s: called (device=%{private}@, initiator=%{public}@
<<<< AVOutputDeviceGroup >>>> %s: Posting %{public}@
<<<< AVMetadataItem >>>> %s: Value %p does not conform to NSObject and/or NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Keyspace must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Key must conform to NSObject and NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Locale must be an instance of NSLocale
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_ExtendedLanguageTag must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_LanguageCode must be an instance of NSString or of NSNumber
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Value must be CMBoxedMetadata or conform to NSObject and NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DataTypeNamespace must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_ConformingDataTypes must be an instance of NSArray
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DataLength must be an instance of NSNumber
<<<< AVMetadataItem >>>> %s: Identifier value %@ must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Timestamp must be an instance of CFDictionary
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Duration must be an instance of CFDictionary
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Date must be an instance of NSDate
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DiscoveryTimestamp must be an instance of NSDate
<<<< AVMetadataItem >>>> %s: *** Could not canonicalize language: %@. ***
<<<< AVMetadataItem >>>> %s: <%p> initiating asynchronous loading of lazily-loaded metadata value
<<<< AVMetadataItem >>>> %s: <%p> completed asynchronous loading of lazily-loaded metadata value
<<<< AVMetadataItem >>>> %s: keyspace not found %@
<<<< AVMetadataItem >>>> %s: key not found %@
<<<< AVAsset >>>> %s: <%p> called for property list %@, mediaSelectionOptionOut = <%p>
<<<< AVAsset >>>> %s: <%p> resolved to group %@ and option %@
<<<< AVAsset >>>> %s: *** Could not canonicalize language: %@. ***
<<<< AVAsset >>>> %s: *** MediaValidator.plist was not loaded for this platform! Defaulting to no video support. ***
<<<< AVAsset >>>> %s: asset created with AVAssetRequiresInProcessOperationKey
<<<< AVAsset >>>> %s: asset created with AVAssetPrefersSandboxedParsingOptionKey
<<<< AVAsset >>>> %s: %@ <%p> FigAssetCopyAssetWithDownloadToken for downloadToken %llu returned %d
<<<< AVAsset >>>> %s: creating AVAssetInspectorLoader
<<<< AVAsset >>>> %s: using custom AVAssetInspectorLoader
<<<< AVAsset >>>> %s: %@ creating AVFigAssetInspectorLoader
<<<< AVAsset >>>> %s: %@ Created %p
<<<< AVAsset >>>> %s: Cannot create AVAssetDownloadCache when an AVManagedAssetCache is already present.
<<<< AVAsset >>>> %s: %@ Received notification for %@
<<<< AVAsset >>>> %s: %s
<<<< AVAsset >>>> %s: _URLAsset->resourceLoader was unexpectedly non-nil
<<<< AVAssetImageGenerator >>>> %s: Creating FigAssetImageGenerator from FigAsset
<<<< AVAssetImageGenerator >>>> %s: called
<<<< AVAssetImageGenerator >>>> %s: composition => using AVAssetReader
<<<< AVAssetImageGenerator >>>> %s: not a composition => using FigAssetImageGenerator
<<<< AVAssetImageGenerator >>>> %s: calling FigAssetImageGeneratorCopyCGImageAtTime time %.3f options %@
<<<< AVAssetImageGenerator >>>> %s: no FigAssetImageGenerator instance!
<<<< AVAssetImageGenerator >>>> %s: calling FigAssetImageGeneratorRequestCGImageAtTimeAsync time %.3f options %@
<<<< AVAssetImageGenerator >>>> %s: calling handler with failed status, error %@
<<<< AVAssetImageGenerator >>>> %s: calling handler with succeeded status, actualTime %.3f
<<<< AVAssetImageGenerator >>>> %s: calling handler with cancelled status
<<<< AVAssetImageGenerator >>>> %s: calling handler with failed status, error %d
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p, dataLength=%d)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: Sending %d bytes through comm channel via FigEndpointRemoteControlSessionSendMessage for channel=%p
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p, inEventType=%{public}@, dataLength=%d)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: Unrecognized event type: %@
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: FigEndpointRemoteControlSessionSendMessage finished with response params %{public}@ (err=%d)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVAssetTrack.m %s: %s
<<<< AVPlayer >>>> %s: <%@>. isRunning %d, hasForegroundVisibility %d appIsInForeground %d, processIsViewService %d
<<<< AVPlayer >>>> %s: Player status changed to failed with error: %d
<<<< AVPlayer >>>> %s: Posting AVPlayerRateDidChangeNotification for status change
<<<< AVPlayer >>>> %s: called on <%@>. Setting attributes on decoder to:
<%@>
<<<< AVPlayer >>>> %s: %@ called (self = %p, new current item = %@)
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ updating current item from %{public}@ to %{public}@
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ will willChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ did willChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: %{public}@ setting timeControlStatus=%d, reasonForWaitingToPlay=%{public}@
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ will didChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ did didChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: dispatching call to -_applyPlayQueueChangesToFigPlayerWithCompletionHandler: (self=%p)
<<<< AVPlayer >>>> %s: Item <%p> Now ReadyToPlay. Reevaluting if okay to play while transition to background.
<<<< AVPlayer >>>> %s: Item <%p> Reevalution complete. Not okay to play while transition to background. Pausing.
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called
<<<< AVPlayer >>>> %s: The FigPlaybackItem that posted ItemBecameCurrent has already been removed from the queue; fall back to identifying the current item using FigPlayerCopyPlayQueueItem
<<<< AVPlayer >>>> %s: Handling removal of item %@ (self = %@)
<<<< AVPlayer >>>> %s: %@ New current item: %@ %@ (self = %@)
<<<< AVPlayer >>>> %s: removed current item, now have %@
<<<< AVPlayer >>>> %s: %@ called (self = %@)
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called with %{public}@ (afterItem = %{public}@)
<<<< AVPlayer >>>> %s: now have %@
<<<< AVPlayer >>>> %s: Error inserting item: %@
<<<< AVPlayer >>>> %s: Surrogate player enabled = %d
<<<< AVPlayer >>>> %s: Creating instance of %s
<<<< AVPlayer >>>> %s: Coordinator player disabled
<<<< AVPlayer >>>> %s: %@ called (self=%p)
<<<< AVPlayer >>>> %s: %@ Dispatching FigPlayer copy property block (self=%p) to a background queue if necessary
<<<< AVPlayer >>>> %s: Dispatching FigPlayer configuration block (self=%p) to state dispatch queue
<<<< AVPlayer >>>> %s: %@ Will update status (self=%p)
<<<< AVPlayer >>>> %s: %@ setting up FigPlayer <%p>
<<<< AVPlayer >>>> %s: underlying FigPlayer did not implement SetRateWithOptions. Fall back to SetRateWithFade
<<<< AVPlayer >>>> %s: underlying FigPlayer did neither implement SetRateWithOptions nor SetRateWithFade. Fall back to SetRate
<<<< AVPlayer >>>> %s: %@ (self=%p) attach video layers _hostApplicationInForeground %@ _hasForegroundLayers %@ _isVideoPlaybackAllowedWhileInBackground %@ _hasAssociatedAVPlayerLayerInPIPMode %@
<<<< AVPlayer >>>> %s: %@ (self=%p) skip attach video layers _hostApplicationInForeground %d _hasForegroundLayers %d _isVideoPlaybackAllowedWhileInBackground %d _hasAssociatedAVPlayerLayerInPIPMode %d
<<<< AVPlayer >>>> %s: Failed adding playback item of %@ to play queue immediately (self = %@), will remove item
<<<< AVPlayer >>>> %s: figplayer creation failed [%d]
<<<< AVPlayer >>>> %s: %@ Did update status to %d (self=%p)
<<<< AVPlayer >>>> %s: setExpectedAssetTypes %@
<<<< AVPlayer >>>> %s: sawFileType = %d, sawStreamingType = %d
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called with %{public}@
<<<< AVPlayer >>>> %s: %@ removed %@ %@, now have %@
<<<< AVPlayer >>>> %s: Error replacing current item: %@
<<<< AVPlayer >>>> %s: %@ called. Rate changed from [%f] -> [%f], changed because %s
<<<< AVPlayer >>>> %s: %{public}@ skipping setting new rate on FigPlayer because another rate change has intervened
<<<< AVPlayer >>>> %s: Posting AVPlayerRateDidChangeNotification with payload %@
<<<< AVPlayer >>>> %s: %@ called. set to [%f]
<<<< AVPlayer >>>> %s: %@ _setUsesLegacyAutomaticWaitingBehavior: %s
<<<< AVPlayer >>>> %s: seekToDate called without any attached item
<<<< AVPlayer >>>> %s: seekToTime called without any attached item
<<<< AVPlayer >>>> %s: Obtaining volume for category [%@]
<<<< AVPlayer >>>> %s: %@ setting to %d
<<<< AVPlayer >>>> %s: %@ setting from %d to %d
<<<< AVPlayer >>>> %s: setting to %@
<<<< AVPlayer >>>> %s: Unrecognized player role %@
<<<< AVPlayer >>>> %s: Player role %@ set synchronously before we had a fig player.
<<<< AVPlayer >>>> %s: %@ Trying to set picker id : %@
<<<< AVPlayer >>>> %s: No figPlayer found, cannot set picker id
<<<< AVPlayer >>>> %s: %@ SDK check skipped, using rate 1.0
<<<< AVPlayer >>>> %s: %@ called (self = <%p>, time observer = <%p>)
<<<< AVPlayer >>>> %s: closedCaptionLayers array snapshot:%@
<<<< AVPlayer >>>> %s: videoLayers array snapshot:%@
<<<< AVPlayer >>>> %s: %@ dispatching (self = %p)
<<<< AVPlayer >>>> %s: %@ maximumLayerDisplaySize = %@ (self = %p)
<<<< AVPlayer >>>> %s: %@ (self = %p)
<<<< AVPlayer >>>> %s: %{public}@ failed to copy currently displayed pixel buffer w/ err %d
<<<< AVPlayer >>>> %s: %@ failed to copy currently displayed pixel buffer although no error
<<<< AVPlayer >>>> %s: %@ cannot copy displayed pixel buffer, figPlayer is NULL
<<<< AVPlayer >>>> %s: %{public}@ cannot copy displayed pixel buffer while player's rate is non-zero
<<<< AVPlayer >>>> %s: %@ attached video layer array with %lu layers on FigPlayer
<<<< AVPlayer >>>> %s: %@ detached video layer array from FigPlayer
<<<< AVPlayer >>>> %s: %@ (self=%p) _detachVideoLayersFromFigPlayer _hostApplicationInForeground %@ _hasForegroundLayers %@ _isVideoPlaybackAllowedWhileInBackground %@ _hasAssociatedAVPlayerLayerInPIPMode %@
<<<< AVPlayer >>>> %s: %@ AVPlayerLayer(%p) and its closedCaptionLayer(%p)
<<<< AVPlayer >>>> %s: %@ AVPlayerLayer(%p) is adding videoLayer(%p), closedCaptionLayer(%p), and subtitleLayer(%p) sublayers
<<<< AVPlayer >>>> %s: %@ updating video layers due to adding layer %p (self=%@)
<<<< AVPlayer >>>> %s: %@ (self=%p) not updating video layers _hostApplicationInForeground %@ _hasForegroundLayers %@ _isVideoPlaybackAllowedWhileInBackground %@ _hasAssociatedAVPlayerLayerInPIPMode %@
<<<< AVPlayer >>>> %s: %@ not updating video layers, despite adding layer %p (self=%@)
<<<< AVPlayer >>>> %s: Posting AVPlayerAudiovisualBackgroundPlaybackPolicyDidChangeNotification for policy change
<<<< AVPlayer >>>> %s: Posting AVPlayerAvailableHDRModesDidChangeNotification
<<<< AVPlayer >>>> %s: Posting AVPlayerEligibleForHDRPlaybackDidChangeNotification
<<<< AVPlayer >>>> %s: availableHDRModes returning %d
<<<< AVPlayer >>>> %s: Returning hasAVPlayerLayerInPIPMode: %s
<<<< AVPlayer >>>> %s: Found non-LCD CAContext so externally displayed
<<<< AVPlayer >>>> %s: isExternalPlaybackActive is YES
<<<< AVPlayer >>>> %s: Not suspended under lock
<<<< AVPlayer >>>> %s: Player <%@ %@> audiovisual background policy set to ContinuesIfPossible
<<<< AVPlayer >>>> %s: Player <%@ %@> audiovisual background policy set to Automatic, use coordinator other participant count %d to decide
<<<< AVPlayer >>>> %s: Player <%@ %@> audiovisual background policy set to Pauses
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ No associated video layers ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ MMP SPI says so ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as an associated AVPlayerLayer is in PIP mode
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ CarPlay is active ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ Under device lock and playing to external display ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ IAP extended mode is active ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ policy set to %d ] 
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ No enabled video ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background: %d
<<<< AVPlayer >>>> %s: %@ PIP mode is active
<<<< AVPlayer >>>> %s: %@ Under device lock and has external display active
<<<< AVPlayer >>>> %s: %@ Extended mode is active
<<<< AVPlayer >>>> %s: %@ Host application is in foreground with foreground layers
<<<< AVPlayer >>>> %s: %@ Should Detach: [%@]
<<<< AVPlayer >>>> %s: %@ has no more foreground layers left, detaching video layers
<<<< AVPlayer >>>> %s: %@ has foreground layers, attaching video layers
<<<< AVPlayer >>>> %s: %@ failed to take background assertion with err %@
<<<< AVPlayer >>>> %s: %@ got background assertion
<<<< AVPlayer >>>> %s: called
<<<< AVPlayer >>>> %s: scheduling _didFinishSuspension block
<<<< AVPlayer >>>> %s: synthesizing _didFinishSuspension notification
<<<< AVPlayer >>>> %s: skipping _didFinishSuspension
<<<< AVPlayer >>>> %s: %@ releasing background assertion
<<<< AVPlayer >>>> %s: %@ (self=%p) Pausing item since cannot transition to background _hostApplicationInForeground %d _hasForegroundLayers %d _isVideoPlaybackAllowedWhileInBackground %d
<<<< AVPlayer >>>> %s: Item <%@ %p> Pausing since cannot transition to background
<<<< AVPlayer >>>> %s: Item <%@ %p> Unable to evaluate if okay to play while transition to background. Will reevaluate when ReadyToPlay
<<<< AVPlayer >>>> %s: %@ (self=%p) issue _detachVideoLayersFromFigPlayer _hostApplicationInForeground %d _hasForegroundLayers %d _isVideoPlaybackAllowedWhileInBackground %d, _hasAssociatedAVPlayerLayerInPIPMode %d
<<<< AVPlayer >>>> %s: %@ (self=%p) skip _detachVideoLayersFromFigPlayer  _hostApplicationInForeground %d _hasForegroundLayers %d _isVideoPlaybackAllowedWhileInBackground %d _hasAssociatedAVPlayerLayerInPIPMode %d
<<<< AVPlayer >>>> %s: video layers are still attached
<<<< AVPlayer >>>> %s: %@: isConnectedToPhysicalSecondScreen changed %d
<<<< AVPlayer >>>> %s: %@ called. Set rate to 1.0 because %s
<<<< AVPlayer >>>> %s: Posting AVPlayerBackgroundPIPAuthorizationTokenDidChangeNotification for token change
<<<< AVPlayer >>>> %s: AVPlayer %@ setShouldWaitForVideoTarget to %d
<<<< AVPlayer >>>> %s: Directly set kFigPlayerProperty_ShouldWaitForVideoTarget on FigPlayer %@
<<<< AVPlayer >>>> %s: Set ShouldWaitForVideoTarget as creation option or right after creation of player %@
<<<< AVPlayer >>>> %s: Posting AVPlayerInterstitialPlayerDidChangeNotification
<<<< AVPlayer >>>> %s: current event %@ %f
<<<< AVPlayer >>>> %s: %@ current interstitial event %@
<<<< AVPlayer >>>> %s: %@ NULL FigPlayerInterstitialCoordinator
<<<< AVPlayer >>>> %s: replaced local interstitialEventCoordinator %p with remote %p
<<<< AVPlayer >>>> %s: fig playback coordinator already connected clientRequested
<<<< AVPlayer >>>> %s: connect fig playback coordinator
<<<< AVPlayer >>>> %s: %@ setting rate to %f
<<<< AVPlayer >>>> %s: %@ called. oldReason %@ newReason %@ for timeControlStatus %d to %d
<<<< AVPlayer >>>> %s: %@ kFigPlayerProperty_PlaybackState is %@
<<<< AVPlayer >>>> %s: %@ inferred time control status: %d (waiting reason: %@)
<<<< AVPlayer >>>> %s: called (asset=%p)
<<<< AVPlayer >>>> %s: %@ called (self = %@, inNotificationName = %@, inNotificationPayload = %@)
<<<< AVPlayer >>>> %s: %@ dispatched (self = %@, inNotificationName = %@)
<<<< AVPlayer >>>> %s: %{public}@ no change to timeControlStatus or reasonForWaitingToPlay
<<<< AVPlayer >>>> %s: %@ called (self = %@, inNotificationName = %@)
<<<< AVPlayer >>>> %s: Posting _AVPlayer_VolumeDidChangeNotification with payload %@
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_MutedDidChange (self = %@ value [%d])
<<<< AVPlayer >>>> %s: Posting AVPlayerCurrentItemDidChangeNotification with reason %@
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_CurrentItemDidChange (self = %@, FigPlaybackItem = %p
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_CurrentItemDidChange due to AddTo/RemoveFrom-PlayQueue. No need to advance current item to match Fig
<<<< AVPlayer >>>> %s: %@ player <%p> failed to create fig sub item (error: %@)
<<<< AVPlayer >>>> %s: %@ received %@ (payload: %@)
<<<< AVPlayer >>>> %s: Posting AVPlayerPlaybackWasInterruptedNotification
<<<< AVPlayer >>>> %s: Posting AVPlayerItemOverlappedPlaybackDidCompleteNotification
<<<< AVPlayer >>>> %s: Received updated %@. Rate changed from [%f] -> [%f], changed because %s
<<<< AVPlayer >>>> %s: %@ called (self = %@, notification = %@)
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: iapd extended mode has changed. Conditions to maintain videoLayer->figPlayer don't hold. Detaching.
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: iapd extended mode has changed. Conditions to maintain videoLayer->figPlayer do hold. Attaching.
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: has no layers or no figPlayer. Nothing to attach/detach for iapd
<<<< AVUXMDisplayManager >>>> %s: <%p> preferredDisplayCriteria set to %p
<<<< AVSampleBufferAudioRenderer >>>> %s: adding notification listener to %p with listener %p
<<<< AVSampleBufferAudioRenderer >>>> %s: removing notification listener to %p with listener %p
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] found contextUUID : %@
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] setting routing context id : %@
<<<< AVSampleBufferAudioRenderer >>>> %s: called
<<<< AVSampleBufferAudioRenderer >>>> %s: Failed to create FigSampleBufferAudioRenderer: %@
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] created
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] Transitioning to status: %d
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %@
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %lu
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %1.3f
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %d
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] trying to add to a synchronizer (%p) when we already are added to a synchronizer (%p).
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %p
<<<< AVAssetWriterInputMetadataAdaptor >>>> %s: Unrecognized asset writer status %d
<<<< AVPlayerItem >>>> %s: %@ AVPlayerItem <%p> created with asset at URL [%@], automatically loaded asset keys %@
<<<< AVPlayerItem >>>> %s: currentItem KVO: called
<<<< AVPlayerItem >>>> %s: currentItem KVO: %{public}@
<<<< AVPlayerItem >>>> %s: %@ Requesting automatic loading of FigAsset properties %@
<<<< AVPlayerItem >>>> %s: %@ Requesting automatic loading of FigAssetTrack properties %@
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSeekToDate() failed for initial date
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSetProperty() failed witih %d for initial estimated date
<<<< AVPlayerItem >>>> %s: %@ called (self = %p) attaching player %p weak ref %p
<<<< AVPlayerItem >>>> %s: %@ item (self = %p) already attached to a different player, new weak ref %p old weak ref %p
<<<< AVPlayerItem >>>> %s: %@ item (self = %p) already attached to same player, new weak ref %p old weak ref %p
<<<< AVPlayerItem >>>> %s: We have neither a FigAsset, URL, nor FigFormatReader, so cannot create a FigPlaybackItem
<<<< AVPlayerItem >>>> %s: %@ called (self = %p)
<<<< AVPlayerItem >>>> %s: %@ Adding playback item of %p to play queue immediately (player = %@)
<<<< AVPlayerItem >>>> %s: %@ item <%p> status changing to AVPlayerItemStatusFailed with error %@
<<<< AVPlayerItem >>>> %s: %@ Item <%p> is fetching TrackIDArray
<<<< AVPlayerItem >>>> %s: %@ called (self = %p) to invoke %d handlers
<<<< AVPlayerItem >>>> %s: %@ basics already ready
<<<< AVPlayerItem >>>> %s: %@ initialSamples already ready
<<<< AVPlayerItem >>>> %s: %@ CPEProtector already ready
<<<< AVPlayerItem >>>> %s: Either everything necessary is already ready, or making it all ready has failed
<<<< AVPlayerItem >>>> %s: Copying completion handler for later invocation in response to readiness notifications
<<<< AVPlayerItem >>>> %s: %@ Item <%p> is fetching its dimensions
<<<< AVPlayerItem >>>> %s: Invoking completion handler for cancelled seek %d
<<<< AVPlayerItem >>>> %s: Invoking seek completion handler for seek id %d
<<<< AVPlayerItem >>>> %s: Posting %@ for seekID %d
<<<< AVPlayerItem >>>> %s: %@ Item <%p> Seek to time %1.3f with tolerance <%1.3f, %1.3f>
<<<< AVPlayerItem >>>> %s: %@ Using seek ID %d
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSeekToDateWithID() failed
<<<< AVPlayerItem >>>> %s: *** Called from the wrong queue%@.  Break on AVPotentialRaceCondition() to debug ***
<<<< AVPlayerItem >>>> %s: can't create looping timebase! item will not loop.
<<<< AVPlayerItem >>>> %s: Unknown AVAudioMixEffectParameters type.
<<<< AVPlayerItem >>>> %s: %@ setting video composition instructions to %@
<<<< AVPlayerItem >>>> %s: Neither applied nor cached media option. Selection will be discarded.
<<<< AVPlayerItem >>>> %s: %@ called (self=%p, option=%@, group=%@)
<<<< AVPlayerItem >>>> %s: %@ <%p> with asset <%p> called for media selection option %@ in group %@
<<<< AVPlayerItem >>>> %s: self %{public}@: "%{public}@" in group %{public}@
<<<< AVPlayerItem >>>> %s: %@ <%p> with asset <%p> called for media selection group %@
<<<< AVPlayerItem >>>> %s: self %{public}@: %{public}@
<<<< AVPlayerItem >>>> %s: %@ Item <%p> avoided synchronous FigAsset/FigAssetTrack property fetch while forumlating currentMediaSelection
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemMediaSelectionDidChangeNotification
<<<< AVPlayerItem >>>> %s: %@ <%p> returning %@
<<<< AVPlayerItem >>>> %s: %@ item <%p> updateStatusToReadyToPlay:%d
<<<< AVPlayerItem >>>> %s: %@ item <%p> status changing to AVPlayerItemStatusReadyToPlay
<<<< AVPlayerItem >>>> %s: %@ item <%p> set can and step flags
<<<< AVPlayerItem >>>> %s: %@ item <%p> updateStatusToReadyToPlay:%d complete
<<<< AVPlayerItem >>>> %s: self %@: setting interstitial time ranges to %@
<<<< AVPlayerItem >>>> %s: self %{public}@: setting coordination identifier to %{public}@
<<<< AVPlayerItem >>>> %s: Not calling FigPlayerAddToPlayQueue because item's status is the failure status (item = %@ %@, previous item = %@ %@, FigPlaybackItem = %p)
<<<< AVPlayerItem >>>> %s: Calling FigPlayerAddToPlayQueue (item = %@ %@, previous item = %@ %@, FigPlaybackItem = %p)
<<<< AVPlayerItem >>>> %s: Failed to set kFigPlaybackItemProperty_MetadataOutputsDictionary
<<<< AVPlayerItem >>>> %s: Video Enhancement mode is not valid
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimeJumpedNotification
<<<< AVPlayerItem >>>> %s: %@ item <%p> ready for inspection of %@
<<<< AVPlayerItem >>>> %s: %@ item <%p> ready for playback
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimebaseChangedNotification
<<<< AVPlayerItem >>>> %s: %@ item <%p> failed to become ready for %@ (error: %@)
<<<< AVPlayerItem >>>> %s: %@ item <%p> failed to create fig sub item (error: %@)
<<<< AVPlayerItem >>>> %s: %@ NewRecommendedTimeOffsetFromLive: %@
<<<< AVPlayerItem >>>> %s: %@ stream likely to keep up: YES
<<<< AVPlayerItem >>>> %s: %@ stream likely to keep up: NO
<<<< AVPlayerItem >>>> %s: %@ stream buffer empty: YES
<<<< AVPlayerItem >>>> %s: %@ stream buffer full: YES
<<<< AVPlayerItem >>>> %s: %@ playback stalled
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemPlaybackStalledNotification
<<<< AVPlayerItem >>>> %s: %@ seekable ranges changed
<<<< AVPlayerItem >>>> %s: %@ playback buffer Full: NO
<<<< AVPlayerItem >>>> %s: %@ playback buffer empty: NO
<<<< AVPlayerItem >>>> %s: %@ loaded ranges changed
<<<< AVPlayerItem >>>> %s: %@ dimensions changed to %@
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemDidPlayToEndTimeNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemFailedToPlayToEndTimeNotification with error %@
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemNewAccessLogEntryNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemNewErrorLogEntryNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimeJumpedNotification for seek with originator
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> became the FigPlayer's current item
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> stopped being the FigPlayer's current item
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> was removed from the FigPlayer's item queue
<<<< AVPlayerItem >>>> %s: %@ alternate stream changed
<<<< AVPlayerItem >>>> %s: %@ Chosen tracks changed
<<<< AVPlayerItem >>>> %s: %@ Display non-forced subtitles changed
<<<< AVPlayerItem >>>> %s: %@ ExternalProtectionRequiredForPlayback changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasEnabledAudio changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasEnabledVideo changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasVideo changed to YES
<<<< AVPlayerItem >>>> %s: %@ item selected media options changed
<<<< AVPlayerItem >>>> %s: %@ CurrentSelectedMediaArray not in payload or nil.
<<<< AVPlayerItem >>>> %s: %@ item <%p> SpatialAudioRenderingChange: default, no payload
<<<< AVPlayerItem >>>> %s: %@ item <%p> SpatialAudioRenderingChange: %@
<<<< AVPlayerItem >>>> %s: %@ item <%p> AllowedSpatialization changed
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> reached timeToPauseBuffering
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> reached timeToPausePlayback
<<<< AVPlayerItemTrack >>>> %s: <rdar://100445728> CurrentVideoFrameRate type is not CFNumberRef, value = {%@}
<<<< AVPlayerItemTrack >>>> %s: attached output %@ with extractionID %d
<<<< AVPlayerItemTrack >>>> %s: removed output %@
<<<< AVQueuePlayer >>>> %s: called (self = %@, item = %@, afterItem = %@
<<<< AVQueuePlayer >>>> %s: called (self = %@, item = %@)
<<<< AVQueuePlayer >>>> %s: called (self = %@)
<<<< AVQueuePlayer >>>> %s: %p %@. NO since action-at-end is NOT advance
<<<< AVQueuePlayer >>>> %s: %p %@. NO since AirPlay Video is active
<<<< AVQueuePlayer >>>> %s: %p %@. NO since one of items is HLS
<<<< AVQueuePlayer >>>> %s: %p %@. NO since one of items doesn't have 1 track
<<<< AVQueuePlayer >>>> %s: %p %@. NO since one of items doesn't have audio track
<<<< AVLoggingIdentifier >>>> %s: nil specifiedName
<<<< AVLoggingIdentifier >>>> %s: Identifier string is %@
<<<< AVComposition >>>> %s: [%p] called
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p asset: %p timeRange.start: %.3f timeRange.duration: %.3f startTime: %.3f
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p timeRange.start: %.3f timeRange.duration: %.3f
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p timeRange.start: %.3f timeRange.duration: %.3f duration: %.3f
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p mediaType: %@ preferredTrackID: %d
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p track: %p trackID: %d
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p track: %p trackAssetURL: %@ trackID: %d
<<<< AVComposition >>>> %s: AVAsset with nil _absoluteURL and NULL _mutableComposition
<<<< AVPlayerItemMetadataOutput >>>> %s: metadata output flushed
<<<< AVPlayerItemMetadataOutput >>>> %s: Notifying delegate of a flush
<<<< AVPlayerItemMetadataOutput >>>> %s: Invoking metadata delegate %p with %@ dictionary from %@ item track
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVCompositionTrack.m %s: [%p] called
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d track: %p timeRange.start: %.3f timeRange.duration: %.3f startTime: %.3f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d timeRange.start: %.3f timeRange.duration: %.3f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d timeRange.start: %.3f timeRange.duration: %.3f duration: %.3f
<<<< AVPubSub >>>> %s: Adding observer for %@ in %@
<<<< AVPubSub >>>> %s: Notification observer calling callback in %@
<<<< AVPubSub >>>> %s:  called for %@
<<<< AVPubSub >>>> %s: Removing observer in %@
<<<< AVPubSub >>>> %s: Calling subscriber block because %@ fired for %@
<<<< AVPubSub >>>> %s: Calling subscriber block with initial value for %@
<<<< AVPubSub >>>> %s: Calling subscriber block for %@
<<<< AVPubSub >>>> %s: Calling subscriber block from output publisher for %@
<<<< AVPubSub >>>> %s: Not publishing stale value to subscriber block for %@
<<<< AVPubSub >>>> %s: Calling subscriber block with nil publisher for %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVMovieTrack.m %s: FigCreate3x3MatrixArrayFromCGAffineTransform returned a NULL matrix.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVMovieTrack.m %s: Layer value passed to setLayer: is too large.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVMovieTrack.m %s: CFNumberCreate returned a NULL number.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVMovieTrack.m %s: Alternate group ID value passed to setAlternateGroupID: is too large.
<<<< AVAssetReaderOutput >>>> %s: FigAssetReaderExtractAndRetainNextSampleBuffer returned %d, extractionComplete=%d, sampleBuffer=%p, self=%p
<<<< AVAssetReaderOutput >>>> %s: %p received %@, extractionID=%d
<<<< AVAssetReaderOutput >>>> %s: %p received %@
<<<< AVAssetWriter >>>> %s: called (self=%p)
<<<< AVAssetWriter >>>> %s: invalid file extension in outputURL
<<<< AVAssetWriter >>>> %s: -[NSFileManager removeItemAtURL:] failed: %s
<<<< AVAssetWriter >>>> %s: Calling FigAssetWriterFinish
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinish failed: %d
<<<< AVAssetWriter >>>> %s: calling completion handler
<<<< AVAssetWriter >>>> %s: Invalidating FigAssetWriter, to ensure that audio files are finalized properly
<<<< AVAssetWriter >>>> %s: "Transition to terminal status" operation invoked
<<<< AVAssetWriter >>>> %s: calling FigAssetWriterFinishAsync (self=%p)
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinishAsync showed cancellation (self=%p)
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinishAsync failed: %d
<<<< AVAssetWriter >>>> %s: called, self=%p
<<<< AVAssetWriter >>>> %s: Unexpected terminal status %d
<<<< AVAssetWriter >>>> %s: called, success=%d, error=%@ (self=%p)
<<<< AVAssetWriter >>>> %s: called with payload %@
<<<< AVPlaybackCoordinator >>>> %s: Could not create FigTimelineCoordinatorSuspensionRef
<<<< AVPlaybackCoordinator >>>> %s: called (self = %@, for SuspensionReasonsChanged notification, with payload = %@)
<<<< AVPlaybackCoordinator >>>> %s: called (self = %@, for ParticipantsChanged notification, with payload = %@)
<<<< AVPlaybackCoordinator >>>> %s: called (self = %@, for DidIssueCommandToFigPlayer notification, with payload = %@)
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) replacing participant states.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator updating %d control states.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) updating timeline state.
<<<< AVPlaybackCoordinator >>>> %s: Posting AVPlaybackCoordinatorItemIdentifierForCoordinatedPlaybackDidChangeNotification in response to delegate change
<<<< AVPlaybackCoordinator >>>> %s: %@ Setting IsExpanseMediaSession %s on AVAudioSession error %@
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator gave a participantID which is not present in otherParticipants
<<<< AVPlaybackCoordinator >>>> %s: <%p> setting coordinationMediumDelegate:%p on playback coordinator with UUID %@
<<<< AVPlaybackCoordinator >>>> %s: <%p> setting coordinationMediumDelegate:%p on playback coordinator, but NULL figPlaybackCoordinator
<<<< AVPlaybackCoordinator >>>> %s: States aren't distinguishable. Assuming state from the outside is better.
<<<< AVPlaybackCoordinator >>>> %s: States aren't distinguishable. Assuming existing state is better for %{public}@.
<<<< AVPlaybackCoordinator >>>> %s: Ignoring stale state for %{public}@
<<<< AVPlaybackCoordinator >>>> %s: %{public}@ updating transport control state cache for item identifier %@
<<<< AVPlaybackCoordinator >>>> %s: %{public}@ skipping updating transport control state cache since the lamport timestamp for the update is older or the update is not authoritative
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling new control state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle new control state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling new participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle new participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling replacement participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle replacement participant state.
<<<< AVPlaybackCoordinator >>>> %s: <%p> beginning suspension with reason %@
<<<< AVPlaybackCoordinator >>>> %s: <%p> ending suspension %p
<<<< AVPlaybackCoordinator >>>> %s: <%p> ending suspension %p proposing new time %f
<<<< AVPlaybackCoordinator >>>> %s: <%p> setting waiting policies %@ on playback coordinator
<<<< AVPlaybackCoordinator >>>> %s: <%p> setting pauseSnapsToMediaTimeOfOrginator:%@ on playback coordinator
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to broadcast transport state but coordination medium delegate is nil
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to broadcast participant state but coordination medium delegate is nil
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to fetch timeline state but coordination medium delegate is nil.  Clearing delegate and calling completion handler.
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, delegate=%@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Calling -outputDeviceAuthorizationSession:didProvideAuthorizationRequest: on delegate (request/ID=%{public}@, request/outputDevice=%{private}@, request/authorizationTokenType=%{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Not messaging delegate because there is no delegate or it does not respond to -outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Calling -outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason: on delegate (request/ID=%{public}@, reason=%{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Not messaging delegate because there is no delegate or it does not respond to -outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
<<<< AVOutputDeviceAuthorizationSession >>>> %s: self=%p, impl=%@, replacementImpl=%@
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (authorizationToken=%{private}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Result: %d (error: %{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called
<<<< AVAssetWriterInput >>>> %s: called, old=%@ new=%@
<<<< AVAssetWriterInput >>>> %s: called, self=%p
<<<< AVAssetWriterInput >>>> %s: called (self=%p, queue=%p, block=%p)
<<<< AVAssetWriterInput >>>> %s: Informing pass description responder to respond to initial pass description
<<<< AVAssetWriterInput >>>> %s: Not responding to initial pass description, per helper %@
<<<< AVAssetWriterInput >>>> %s: called (self=%p)
<<<< AVAssetWriterInput >>>> %s: Client will see -appendSampleBuffer: fail with error %@
<<<< AVAssetWriterInput >>>> %s: called (keyPath=%@, object=%@, change=%@, contect=%p)
<<<< AVAssetWriterInput >>>> %s: called (self = %p)
<<<< AVAssetWriterInput >>>> %s: Client will see -appendPixelBuffer: fail with error %@
<<<< AVAssetWriterInput >>>> %s: Transitioning to terminal status %d (self = %p)
<<<< AVAssetWriterInput >>>> %s: Dispatching request block one extra time, to make sure client sees the failure
<<<< AVAssetWriterInput >>>> %s: end pass operation succeeded, nextPassDescription=%@
<<<< AVAssetWriterInput >>>> %s: Client will see -appendSampleBuffer: return NO due to input already having transitioned to terminal status
<<<< AVAssetWriterInput >>>> %s: Client will see -appendPixelBuffer: return NO due to input already having transitioned to terminal status
<<<< AVAssetWriterInput >>>> %s: FigAssetWriterIsTrackQueueAboveHighWaterLevel returned %d (self=%p)
<<<< AVAssetWriterInput >>>> %s: setting kFigFormatWriterTrackProperty_FormatDescriptionArray to %@
<<<< AVAssetWriterInput >>>> %s: Invoking request block normally
<<<< AVAssetWriterInput >>>> %s: Client exited request block
<<<< AVAssetWriterInput >>>> %s: Dispatching request block because previous request block invocation returned before filling the buffer queue or marking input finished (delegate = %@)
<<<< AVAssetWriterInput >>>> %s: We thought we might want to invoke the request block, but we are not actually going to
<<<< AVAssetWriterInput >>>> %s: will invoke per-pass block (self=%p)
<<<< AVAssetWriterInput >>>> %s: did invoke per-pass block (self=%p)
<<<< AVAssetWriterInput >>>> %s: registering for kFigAssetWriterNotification_PassFinished on FigAssetWriter %p
<<<< AVAssetWriterInput >>>> %s: Calling FigAssetWriterEndPass
<<<< AVAssetWriterInput >>>> %s: called (self=%p, trackID=%d)
<<<< AVAssetWriterInput >>>> %s: unregistering from kFigAssetWriterNotification_PassFinished
<<<< AVAssetWriterInput >>>> %s: Received kFigAssetWriterNotification_PassFinished
<<<< AVVideoComposition >>>> %s: dictionaryRepresentation only accepts RGB color space for backgroundColor
<<<< AVVideoComposition >>>> %s: Using video compositor: %@
<<<< AVVideoComposition >>>> %s: Unknown video compositor name for FigRemaker: %@
<<<< AVAssetExportSession >>>> %s: no asset, no presetName, or no export settings => nil: asset=%@, presetName=%@
<<<< AVAssetExportSession >>>> %s: no export session => nil
<<<< AVAssetExportSession >>>> %s: Could not create fig export session. err=%d
<<<< AVAssetExportSession >>>> %s: fileLengthLimit: %lld
<<<< AVAssetExportSession >>>> %s: maximize power efficiency %s
<<<< AVStreamDataParser >>>> %s: init
<<<< AVStreamDataParser >>>> %s: AVStreamDataParser is not allowed under current configuration
<<<< AVStreamDataParser >>>> %s: dealloc
<<<< AVStreamDataParser >>>> %s: appending stream data (flags 0x%x) %@
<<<< AVStreamDataParser >>>> %s: no manifold, sniffing data to initialize one...
<<<< AVStreamDataParser >>>> %s: sniffing stream data (flags 0x%x) %@
<<<< AVStreamDataParser >>>> %s: changing manifold type not permitted during AVStreamDataParser session
<<<< AVStreamDataParser >>>> %s: created a FigManifold
<<<< AVStreamDataParser >>>> %s: abandoning manifold initialization after %ld bytes (max %ld bytes)
<<<< AVStreamDataParser >>>> %s: need more data to sniff
<<<< AVStreamDataParser >>>> %s: switching manifold
<<<< AVStreamDataParser >>>> %s: providePendingMediaData
<<<< AVStreamDataParser >>>> %s: setShouldProvideMediaData:forTrackId:%d, not providing media for %@
<<<< AVStreamDataParser >>>> %s: new AVStreamDataAsset using manifold's FigAsset
<<<< AVStreamDataParser >>>> %s: new AVStreamDataAsset with tracks %@
<<<< AVStreamDataParser >>>> %s: failed to create CMBlockBuffer for %d bytes with data at %p and offset %d, status = %d
<<<< AVStreamDataParser >>>> %s: manifold sent PTS %1.5f %d bytes, %@/%@, track %d, flags %d
<<<< AVStreamDataParser >>>> %s: rebuilding AVStreamDataAsset because we've not got a CMFormatDescription for trackID %d
<<<< AVStreamDataParser >>>> %s: shouldProvideMediaDataForTrackID said no, ignoring media for trackID %d
<<<< AVStreamDataParser >>>> %s: no asset yet so caching sample buffer (now cached %d bytes, %.3f seconds)
<<<< AVStreamDataParser >>>> %s: rebuilding AVStreamDataAsset because trackID %d ended
<<<< AVStreamDataParser >>>> %s: trackID %ld is using supported encryption
<<<< AVStreamDataParser >>>> %s: Exception when creating default key session: %@
<<<< AVStreamDataParser >>>> %s: trackID %ld is not encrypted or using unsupported encryption. Removing the cached decryptor for this track.
<<<< AVStreamDataParser >>>> %s: rebuilding AVStreamDataAsset because trackID %ld got a new format description
<<<< AVStreamDataParser >>>> %s: trackID %ld got a new format description, remembered for AllNewTracksReady
<<<< AVStreamDataParser >>>> %s: registering for manifold callbacks from trackID %d
<<<< AVStreamDataParser >>>> %s: unregistering for manifold callbacks from trackID %d
<<<< AVStreamDataParser >>>> %s: manifold all new tracks ready, building inspection-only asset
<<<< AVStreamDataParser >>>> %s: rebuilding AVStreamDataAsset with additional trackID %d
<<<< AVStreamDataParser >>>> %s: manifold discovered trackID %ld, mediaType %@, remembered for AllNewTracksReady
<<<< AVStreamDataParser >>>> %s: need delegate to implement streamDataParser:didProvideContentKeyRequestInitializationData:forTrackID:
<<<< AVStreamDataParser >>>> %s: Expected NSData sinf, ignoring unexpected "%@"
<<<< AVStreamDataParser >>>> %s: Expected NSData or NSArray, ignoring unexpected "%@"
<<<< AVStreamDataParser >>>> %s: manifold error %d, track %d, %@
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (self=%p)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: initialized (self=%p)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (self=%p, options=%@, completionHandler=%p)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Calling APSyncControllerOpenSpeakerCommChannel (controlType: %d, clientTypeUUID: %@)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: APSyncControllerOpenSpeakerCommChannel finished for comm channel ID %{public}@ (err=%d)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Removing comm channel UUID %@ for device with ID %@
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: No comm channel found for ID %@ for device %@, synthesizing one for the delegate.
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Sending %d bytes through comm channel ID %{public}@ via APSyncControllerSendSpeakerData
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (syncController=%p, commChannelUUID=%@, cancellationResponse=%@, refCon=%p, err=%d)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (commChannelUUID=%{public}@ dataLength=%d)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (commChannelUUID=%{public}@)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: APSyncControllerSendSpeakerData finished for comm channel ID %{public}@ (err=%d)
<<<< AVOutputDevice >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputDevice >>>> %s: called (enabled=%d)
<<<< AVOutputDevice >>>> %s: setting second display mode to %{public}@...
<<<< AVOutputDevice >>>> %s: ...done setting second display mode (token=%{public}@, error=%{public}@/%d)
<<<< AVOutputDevice >>>> %s: Posting %{public}@
<<<< AVOutputDevice >>>> %s: called (volume=%f)
<<<< AVOutputDevice >>>> %s: called (count=%ld)
<<<< AVOutputDevice >>>> %s: called (allows=%d)
<<<< AVOutputDevice >>>> %s: called (mode=%{public}@)
<<<< AVOutputDevice >>>> %s: called (self=%p, options=%@, completionHandler=%p)
<<<< AVOutputDevice >>>> %s: called (device=%{private}@, dataDestination=%{public}@, cancelIfAuthRequired=%{public}@, correlationID=%{private}@, initiator=%{private}@, controlType=%{public}@)
<<<< AVOutputDevice >>>> %s: Open comm channel completed (err=%d, channel=%p, correlationID=%{private}@)
<<<< AVOutputDevice >>>> %s: No System Remote Pool to add to!
<<<< AVOutputDevice >>>> %s: called (delegate? %d)
<<<< AVOutputDevice >>>> %s: Invoking -outputDevice:didReceiveData:fromCommunicationChannel: with %d bytes
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -outputDevice:didReceiveData:fromCommunicationChannel
<<<< AVOutputDevice >>>> %s: Invoking -outputDevice:didCloseCommunicationChannel:
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -outputDevice:didCloseCommunicationChannel:
<<<< AVOutputDevice >>>> %s: called (cancelIfAuthRequired=%{public}@)
<<<< AVOutputDevice >>>> %s: result=%d, cancellationReason=%{public}@, error=%{public}@
<<<< AVOutputDevice >>>> %s: called
<<<< AVOutputDevice >>>> %s: Ignoring non-date last used timestamp "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: Ignoring non-number frecency score "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: Removing frecents entry for device %{private}@ which previously had an invalid or missing LastUsedTimestamp
<<<< AVOutputDevice >>>> %s: Using frecents file at %{public}@
<<<< AVOutputDevice >>>> %s: Using legacy CFPreferences-based frecents
<<<< AVOutputDevice >>>> %s: Migrating frecents from CFPreferences to %{public}@
<<<< AVOutputDevice >>>> %s: Ignoring failure to read plist from data %{private}@ (%{private}@)
<<<< AVOutputDevice >>>> %s: Ignoring invalid frecents plist "%{private}@"
<<<< AVOutputDevice >>>> %s: Ignoring malformed frecents entry "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: called (channel=%p, delegate? %d)
<<<< AVOutputDevice >>>> %s: Invoking -communicationChannel:didReceiveData: with %d bytes for channel=%p
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -communicationChannel:didReceiveData: for channel=%p
<<<< AVOutputDevice >>>> %s: Invoking -communicationChannelDidClose: for channel=%p
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -communicationChannelDidClose: for channel=%p
<<<< AVUtilities >>>> %s: called (queue=%p, currentQueue=%p, dispatch_get_main_queue()=%p, NSThread isMainThread=%d)
<<<< AVUtilities >>>> %s: running block synchronously
<<<< AVUtilities >>>> %s: dispatching block to queue
<<<< AVUtilities >>>> %s: dispatching to background queue
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVError.m %s: Could not load localized description for %@ %ld (%@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVError.m %s: Could not load localized recovery suggestion or failure reason for %@ %ld (%@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVError.m %s: Could not load localized recovery suggestion for %@ %ld (%@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVError.m %s: Could not load localized failure reason for %@ %ld (%@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVError.m %s: Invalid format string '%@', error %@, %@ %ld (%@)
<<<< AVSampleBufferVideoRenderer >>>> %s: failed to create video queue: %d
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) change status from %d to %d, newError %@
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) reset status from %d to 0
<<<< AVSampleBufferVideoRenderer >>>> %s: output obscured: %d, post notification: %@
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) set _createVideoQueueFailed to %d
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) Failed to create FigVideoQueue with error %d, moving state to fail state, will attempt re-create after client flushes
<<<< AVSampleBufferVideoRenderer >>>> %s: failed to create AVSampleBufferVideoRender %d
<<<< AVSampleBufferVideoRenderer >>>> %s: AVSampleBufferVideoRender Create [%p, %p]
<<<< AVSampleBufferVideoRenderer >>>> %s: AVSampleBufferVideoRender dealloc [%p, %p]
<<<< AVSampleBufferVideoRenderer >>>> %s: visibility changed: %s, post notification: %@
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p] trying to add to a synchronizer (%p) when we already are added to a synchronizer (%p).
<<<< AVSampleBufferVideoRenderer >>>> %s: UpcomingPTSExpectation is enabled, but enqueuePTS:%.3f is smaller than expectedMinimumUpcomingPTS:%.3f
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p, %p] enqueueFrame failed, returned %d
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p] called, removeDisplayedImage=%s, handler=%p
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p] detected error (%d) or createVideoQueueFailed failed %d. Recreating FigVideoQueue.
<<<< AVSampleBufferVideoRenderer >>>> %s: FigVideoQueueFlush returned %d
<<<< AVSampleBufferVideoRenderer >>>> %s: flush completed but no pending callback block found
<<<< AVSampleBufferVideoRenderer >>>> %s: no pending preroll callback
<<<< AVSampleBufferVideoRenderer >>>> %s: skip stale callback, requestId(%d) != pendingPrerollRequestID (%d)
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p: %p] requestDecodeForPreroll
<<<< AVSampleBufferVideoRenderer >>>> %s: Adding %p
<<<< AVSampleBufferVideoRenderer >>>> %s: Setting %d video targets.
<<<< AVSampleBufferVideoRenderer >>>> %s: Setting display layer %p.
<<<< AVSampleBufferVideoRenderer >>>> %s:  Unable to set expectMinimumUpcomingSampleBufferPresentationTime because minimumUpcomingPresentationTime is not numeric 
<<<< AVSampleBufferVideoRenderer >>>> %s: Adding %p.
<<<< AVSampleBufferVideoRenderer >>>> %s: Removing %p.
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p, %p] failed to copy currently displayed pixel buffer w/ err %d
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p, %p] failed to copy currently displayed pixel buffer although no error
<<<< AVSampleBufferVideoRenderer >>>> %s: failed to copy currently displayed pixel buffer as there is no video queue
<<<< AVSampleBufferVideoRenderer >>>> %s: Received decode error from video queue, %@
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p] handling VideoQueueFailed with error (%d).
<<<< AVOutputDevice (FigEndpoint) >>>> %s: RouteUID %@ or RouteName %@ is nil, can't construct description.
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, figEndpoint=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Endpoint property '%@' not supported
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Endpoint property '%@' has value: %@
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  Only a subset of possible device types can be communicated by FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to discover detailed device subtype for most devices from FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: GAPA feature not enabled
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to get DataOverACL information from FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to get isInEar information from FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to discover connected paired devices from FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Setting %@ = %@
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Unrecognized mode %@
<<<< AVOutputDevice (FigEndpoint) >>>> %s: setting kFigEndpointProperty_ListeningMode to %d
<<<< AVOutputDevice (FigEndpoint) >>>> %s: calling FigEndpointBorrowScreen (clientName=%{public}@, reason=%{private}@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: calling FigEndpointUnborrowScreen (clientName=%{public}@, reason=%{private}@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, ID=%@, endpointID=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, configuratorBlock=%@, options=%@, completionHandler=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (endpoint=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Unrecognized head-tracked spatial audio mode %@
<<<< AVAssetCustomURL >>>> %s: cancelling abandoned AVNSURLProtocolRequest %p
<<<< AVOutputContext >>>> %s: Defaulting to AVOutputContext impl %@
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputContext >>>> %s: called (self=%p)
<<<< AVOutputContext >>>> %s: contextID = %@
<<<< AVOutputContext >>>> %s: setting applicationProcessID to %d
<<<< AVOutputContext >>>> %s: outputDevice = %@
<<<< AVOutputContext >>>> %s: called (context=%p, outputDevice=%{private}@, password? %d, cancelIfAuthRequired=%{public}@, suppressUserInteractionOnSenderOnly=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: Result: %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: called (outputDevice=%{private}@, features=%d)
<<<< AVOutputContext >>>> %s: called (outputDevice=%{private}@, password? %d, cancelIfAuthRequired=%{public}@, suppressUserInteractionOnSenderOnly=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called
<<<< AVOutputContext >>>> %s: Posting %{public}@ with destination change %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: Posting %{public}@ with initiator %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: Posting %{public}@)
<<<< AVOutputContext >>>> %s: outputDevices = %@
<<<< AVOutputContext >>>> %s: Posting %{public}@ with initiator %{public}@, reason %{public}@, deviceID %{private}@, and previousDeviceIDs %{private}@ for context=%p
<<<< AVOutputContext >>>> %s: called (devices=%{private}@)
<<<< AVOutputContext >>>> %s: called (context=%p, devices=%{private}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called (context=%p, device=%{private}@, authToken? %d, cancelIfAuthRequired=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called (device=%{private}@)
<<<< AVOutputContext >>>> %s: called (context=%p, device=%{private}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: predictedOutputDevice = %@
<<<< AVOutputContext >>>> %s: Posting %{public}@
<<<< AVOutputContext >>>> %s: called (controlType=%{public}@)
<<<< AVOutputContext >>>> %s: called (delegate? %d>)
<<<< AVOutputContext >>>> %s: Invoking -outputContextOutgoingCommunicationChannelDidBecomeAvailable:
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContextOutgoingCommunicationChannelDidBecomeAvailable:
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, data=%@, channel=%@)
<<<< AVOutputContext >>>> %s: Invoking -outputContext:didReceiveData:fromCommunicationChannel: with %d bytes
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContext:didReceiveData:fromCommunicationChannel:
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, channel=%@)
<<<< AVOutputContext >>>> %s: Invoking -outputContext:didCloseCommunicationChannel:
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContext:didCloseCommunicationChannel:
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, replacementImpl=%@)
<<<< AVOutputContext >>>> %s: sending %d bytes
<<<< AVOutputContext >>>> %s: called (self=%p, status=%d)
<<<< AVOutputContext >>>> %s: Posting %{public}@ with outputDevice: %{private}@ failureReason: %{public}@
<<<< AVRunLoopCondition >>>> %s: reached timeout
<<<< AVAssetInspector >>>> %s: %p cannot create AVAssetVariant for %@
<<<< AVOperation >>>> %s: already cancelled (self=%p)
<<<< AVOperation >>>> %s: marking as failed due to previous failure in dependency (self=%@)
<<<< AVOperation >>>> %s: marking as cancelled due to cancellation of dependency (self=%@)
<<<< AVOperation >>>> %s: advancing status from %d to %d (self=%p)
<<<< AVOperation >>>> %s: called (self=%@)
<<<< AVOperation >>>> %s: called (self=%@, error=%@)
<<<< AVOperation >>>> %s: Got unrecognized status %d
<<<< AVOperation >>>> %s: called (self=%p)
<<<< AVOperation >>>> %s: Client block cancelled with status %d (self=%p)
<<<< AVOperation >>>> %s: called (self=%p, name=%@)
<<<< AVOperation >>>> %s: Ignoring attempt to cancel before execution has begun.  The expectation is that the implementation will notice the cancelled state as part of normal execution
<<<< AVOperation >>>> %s: ignoring attempt to move from terminal status %d to status %d
<<<< AVDelegateUtilities >>>> %s: called (newDelegate=%@, newDelegateQueue=%p
<<<< AVDelegateUtilities >>>> %s: called (delegateStorage = %@, expectedDelegateQueue = %p, delegateCallbackBlock = %p)
<<<< AVDelegateUtilities >>>> %s: current delegate: %@, current delegate queue: %p
<<<< AVDelegateUtilities >>>> %s: Invoking delegate callback synchronously
<<<< AVDelegateUtilities >>>> %s: Dispatching to queue %p
<<<< AVAssetInspectorLoader >>>> %s: <%p> FigAssetGetStatusOfValueForProperty for property <%@> returned %d and load error %d - %@
<<<< AVAssetInspectorLoader >>>> %s: <%p> status requested for key %@ after loading was canceled
<<<< AVAssetInspectorLoader >>>> %s: called (self: %p, keys: %{public}@, keysForCollectionKeys: %{public}@, handler: %{public}@)
<<<< AVAssetInspectorLoader >>>> %s: <%p> loadValuesAsynchronouslyForKeys:%@ keysForCollectionKeys:%@ completionHandler:<%p>
<<<< AVAssetInspectorLoader >>>> %s: Calling FigAssetLoadValuesAsyncForProperties for properties %{public}@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: asset batch ID = %ld (err=%d, alreadyLoaded=%d)
<<<< AVAssetInspectorLoader >>>> %s: Calling FigAssetLoadValuesAsyncForTrackProperties for properties %{public}@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: track batch ID = %ld (err=%d, alreadyLoaded=%d)
<<<< AVAssetInspectorLoader >>>> %s: <%p> storing completion handler [%p] for later invocation
<<<< AVAssetInspectorLoader >>>> %s: <%p> storing loading batch [%p] with %@
<<<< AVAssetInspectorLoader >>>> %s: <%p> invoking completion handler [%p] immediately
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: invoking completion handler immediately
<<<< AVAssetInspectorLoader >>>> %s: Been waiting for key "%{public}@" to load since %{public}@.  Current status is %d.  First non-loaded dependency key is "%{public}@"
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: dispatching completion handler%{public}@%{public}@
<<<< AVAssetInspectorLoader >>>> %s: <%p> dispatching completion handler [%p]
<<<< AVAssetInspectorLoader >>>> %s: No completion handler to invoke
<<<< AVAssetInspectorLoader >>>> %s: No completed batches
<<<< AVAssetInspectorLoader >>>> %s: FigAssetCreateWithURL for URL <%@> returned %d
<<<< AVAssetInspectorLoader >>>> %s: <%p> got notification <%@>
<<<< AVAssetInspectorLoader >>>> %s: Received kFigAssetNotification_BatchPropertyLoadComplete (payload: %{public}@)
<<<< AVAssetInspectorLoader >>>> %s: Received %@ from %p (payload: %@)
<<<< AVAssetInspectorLoader >>>> %s: <%p> got notification <%@> for batchID %@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: Marking asset batch ID %ld as complete
<<<< AVAssetInspectorLoader >>>> %s: <%p> loading batch [%p] has count of %d on entry
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: Marking track batch ID %ld as complete
<<<< AVAssetInspectorLoader >>>> %s: <%p> loading batch [%p] has count of %d on exit with %@
<<<< AVRoutingSessionManager >>>> %s: Using non-FigRoutingSessionManager path
<<<< AVRoutingSessionManager >>>> %s: called
<<<< AVRoutingSessionManager >>>> %s: Returning %@
<<<< AVRoutingSessionManager >>>> %s: called (self=%p)
<<<< AVRoutingSessionManager >>>> %s: returning %@ (self=%p)
<<<< AVRoutingSessionManager >>>> %s: returning %d (self=%p)
<<<< AVRoutingSessionManager >>>> %s: invoking completion handler with error %{public}@
<<<< AVRoutingSessionManager >>>> %s: called (deviceDescriptions=%{private}@)
<<<< AVAssetTrackInspector >>>> %s: Created track inspector of class %@ 
<<<< AVAssetTrackInspector >>>> %s: can't get FigTrackReader; invalid trackID and negative trackIndex
<<<< AVAssetTrackInspector >>>> %s: can't get FigAssetTrack; invalid trackID and negative trackIndex
<<<< AVAssetTrackInspector >>>> %s: FigAssetTrackGetStatusOfValueForProperty for property <%@> returned %d and load error %d - %@
<<<< AVAssetTrackInspector >>>> %s: FigAssetTrackLoadValuesAsyncForProperties for properties %@ returned %d with loaded == %@ and batchID == %d
<<<< AVAssetTrackInspector >>>> %s: storing completion handler [%p] for later invocation
<<<< AVAssetTrackInspector >>>> %s: storing loading batch [%p] with %@
<<<< AVAssetTrackInspector >>>> %s: dispatching completion handler [%p]
<<<< AVAssetTrackInspector >>>> %s: [%p] called
<<<< AVAssetTrackInspector >>>> %s: got notification <%@> for batchID %@
<<<< AVAssetTrackInspector >>>> %s: loading batch [%p] has count of %d on entry
<<<< AVAssetTrackInspector >>>> %s: loading batch [%p] has count of %d on exit with %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/Utilities/AVBundleResources.m %s: AVLocalizedStringFromTableWithLocaleWithBundleIdentifier unable to find a localized string; returning an empty string
<<<< AVCallbackContextRegistry >>>> %s: registering observer %p (token %p), new observer count %d (self=%p)
<<<< AVCallbackContextRegistry >>>> %s: unregistering callback context token %p, new observer count %d (self=%p)
<<<< AVBlockScheduler >>>> %s: Some thread is already running a block with this serializer.  Enqueued this block and letting that thread execute it
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_StartDate must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Duration must be an instance of NSNumber
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_MetadataArray must be an instance of NSArray
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Class must be an instance of NSString
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_ID must be an instance of NSString
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Cue must be an instance of NSString
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_DiscoveryTimestamp must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_ModificationTimestamp must be an instance of NSDate
<<<< AVAssetCache >>>> %s: Initialized with URL %@
<<<< AVAssetCache >>>> %s: Set maxSize = %lld
<<<< AVAssetCache >>>> %s: Set maxEntrySize = %lld
<<<< AVAssetCache >>>> %s: Remove entry with key = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: %@ Setting IsExpanseMediaSession %s on AVAudioSession error %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: called (self = %@, for SuspensionReasonsChanged notification, with payload = %@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: called (self = %@, for ParticipantsChanged notification, with payload = %@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: called (self = %@, for DidIssueCommandToTimelineControl notification, with payload = %@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: Error creating timeline coordinator: %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator gave a participantID which is not present in otherParticipants
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: States aren't distinguishable. Assuming state from the outside is better.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: States aren't distinguishable. Assuming existing state is better for %{public}@.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: Ignoring stale state for %{public}@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: updating transport control state cache for item identifier %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: skipping updating transport control state cache since the lamport timestamp for the update is older or the update is not authoritative
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling new control state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling new participant state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling replacement participant state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> beginning suspension with reason %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> ending figSuspension %p
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> ending figSuspension %p proposing new time %f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> setting waiting policies %@ on playback coordinator
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> setting pauseSnapsToMediaTimeOfOrginator:%@ on playback coordinator
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to broadcast timeline state but coordination medium delegate is nil
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to broadcast participant state but coordination medium delegate is nil
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to reload timeline state but coordination medium delegate is nil.  Clearing delegate and calling completion handler.
<<<< AVExternalPlaybackMonitor >>>> %s: Using non-FigRoutingSessionManager path
<<<< AVExternalPlaybackMonitor >>>> %s: called
<<<< AVExternalPlaybackMonitor >>>> %s: returning %@
<<<< AVExternalPlaybackMonitor >>>> %s: called (self=%p)
<<<< AVExternalPlaybackMonitor >>>> %s: returning %d (self=%p)
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> setActive figPlayer <%p>
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> called with category = %@%@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: audio category set %@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> called with mode = %@%@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: mode set %@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: Attempt to attach AVAudioSessionMediaPlayerOnly to AVPlayer <%p> with no FigPlayer
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: set category failed
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: set mode failed
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: Attempt to attach AVAudioSessionMediaPlayerOnly to AVPlayer <%p> when already attached
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: called (self = %@, inNotificationName = %@)
<<<< AVMediaSelectionGroup >>>> %s: *** Could not canonicalize language: %@. ***
<<<< AVMediaSelectionGroup >>>> %s: <%p> called with property list %@
<<<< AVMediaSelectionGroup >>>> %s: <%p> resolved to option %@
<<<< AVMediaSelectionGroup >>>> %s: Invalid format string '%@', error %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/Utilities/AVAudioOutputSettings.m %s: Need to either provide fully-formed dictionary or source format description
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/Utilities/AVAudioOutputSettings.m %s: Invalid source format flags - not one of the supported lossless bit depths
<<<< AVAssetDownloadSession >>>> %s: [%p] Download from %@ to %@
<<<< AVAssetDownloadSession >>>> %s: [%p] FigAssetCreateWithURL for URL <%@> returned %d
<<<< AVAssetDownloadSession >>>> %s: [%p] Called with %lld
<<<< AVAssetDownloadSession >>>> %s: [%p] Called with asset:%@ destinationURL:%@
<<<< AVAssetDownloadSession >>>> %s: Failed to start - %@
<<<< AVAssetDownloadSession >>>> %s: [%p] Pause download
<<<< AVAssetDownloadSession >>>> %s: [%p] Stop download
<<<< AVAssetDownloadSession >>>> %s: %p downloaded %lld / %lld
<<<< AVAssetDownloadSession >>>> %s: [%p] loaded assetType:[%s] loadingStatus:%d error:%@
<<<< AVAssetDownloadSession >>>> %s: [%p] Start download
<<<< AVAssetDownloadSession >>>> %s: [%p] Going from paused to start download
<<<< AVAssetDownloadSession >>>> %s: [%p] Download %s
<<<< AVAssetDownloadSession >>>> %s: [%p] Called
<<<< AVAssetDownloadSession >>>> %s: Failed to prime cache - %@
<<<< AVAssetDownloadSession >>>> %s: [%p] Priming cache with download token %@
<<<< AVAssetDownloadSession >>>> %s: Must initialize AVAssetDownloadSession with initWithAsset:destinationURL:options: for streaming assets.
<<<< AVAssetDownloadSession >>>> %s: [%p] called with notification name %@
<<<< AVAssetDownloadSession >>>> %s: Failed to load property %@ - %@
<<<< AVAssetDownloadSession >>>> %s: Failed to download to destination - %@
<<<< AVAssetDownloadSession >>>> %s: [%p] called with notification name %@ payload %@
<<<< AVAssetDownloadSession >>>> %s: Failed to make ready for inspection - %@
<<<< AVSampleCursor >>>> %s: FigSampleCursorStepByDecodeTime failed (%d)
<<<< AVSampleCursor >>>> %s: FigSampleCursorGetDecodeTimeStamp failed (%d)
<<<< AVSampleCursor >>>> %s: FigSampleCursorStepByPresentationTime failed (%d)
<<<< AVSampleCursor >>>> %s: FigSampleCursorGetPresentationTimeStamp failed (%d)
<<<< AVSampleCursor >>>> %s: FigSampleCursorCreateSampleBuffer failed (%d)
<<<< AVPlayerItemOutput >>>> %s: Unable to convert host time stamp to item time. Client sees kCMTimeInvalid.
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextCreate failed: %d
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextSetImageAvailableSequentialCallback failed: %d
<<<< AVPlayerItemOutput >>>> %s:  Error: requestNotificationOfMediaDataChangeAsSoonAsPossible was valid when requesting requestNotificationOfMediaDataChangeWithAdvanceInterval. requestNotificationOfMediaDataChangeAsSoonAsPossible has been deactivated
<<<< AVPlayerItemOutput >>>> %s: scheduled wakeup for now
<<<< AVPlayerItemOutput >>>> %s: scheduled wakeup in %.3f s
<<<< AVPlayerItemOutput >>>> %s:  Error: requestNotificationOfMediaDataChangeWithAdvanceInterval was valid when requesting requestNotificationOfMediaDataChangeAsSoonAsPossible. requestNotificationOfMediaDataChangeWithAdvanceInterval is deactivated
<<<< AVPlayerItemOutput >>>> %s: Unable to copy next image from visual context. Bailing.
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextCopyImageForTime did not provide a imageOriginalTimeOut value. Bailing.
<<<< AVPlayerItemOutput >>>> %s: Sending -outputMediaDataWillChange: to delegate
<<<< AVPlayerItemOutput >>>> %s: Dispatching -outputSequenceWasFlushed:
<<<< AVPlayerItemOutput >>>> %s: Sending -outputSequenceWasFlushed: to delegate
<<<< AVSampleBufferDisplayLayer >>>> %s: Hiding contentLayer because bounds is CGSizeZero
<<<< AVSampleBufferDisplayLayer >>>> %s: Unhiding contentLayer because bounds is nonzero
<<<< AVSampleBufferDisplayLayer >>>> %s: Setting position(%d,%d), bounds(%dx%d), transform scale(%.3fx%.3f), offset(%d,%d)
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p] created
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p]
<<<< AVSampleBufferDisplayLayer >>>> %s: AVSBDL did become visible: %d
<<<< AVSampleBufferDisplayLayer >>>> %s: videoRect: (%d, %d, %d, %d)
<<<< AVSampleBufferDisplayLayer >>>> %s: post notification: %@
<<<< AVSampleBufferDisplayLayer >>>> %s: <%p> new (%@), current %@, layer %@
<<<< AVSampleBufferDisplayLayer >>>> %s: Removing label from layer %@
<<<< AVSampleBufferDisplayLayer >>>> %s: Created layer %@
<<<< AVSampleBufferDisplayLayer >>>> %s: Setting label %@ on layer %@
<<<< AVAssetResourceLoader >>>> %s: AVAssetResourceLoader delegate does not respond to selector %@
<<<< AVAssetResourceLoader >>>> %s: data for current offset %lld of length %lld provided to %@
<<<< AVAssetResourceLoader >>>> %s: caching data for current offset %lld of length %lld that was provided to %@
<<<< AVAssetResourceLoader >>>> %s: cached data has grown to length %lld for %@
<<<< AVAssetResourceLoader >>>> %s: swallowing sendResponseInfo for cancelled request %@
<<<< AVAssetResourceLoader >>>> %s: swallowing sendData with data of len %lu for cancelled request %@
<<<< AVAssetResourceLoader >>>> %s: swallowing finishLoading for cancelled request %@
<<<< AVAssetResourceLoader >>>> %s: called on %@
<<<< AVAssetResourceLoader >>>> %s: [AVAssetResourceLoadingRequest finishLoading] is called for a content key request while an AVContentKeySession instance is attached to AVURLAsset. Generating event
<<<< AVAssetResourceLoader >>>> %s: called with error %@ on %@
<<<< AVAssetResourceLoader >>>> %s: called with handlingClient: %@, handler: %@, requestInfo: <%p>, requestID %llu
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Failed to create FigSampleBufferRenderSynchronizer: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] created (internal: %p)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] dealloc
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Render synchronizer %s participate in STS -- thank you for setting "defaults write com.apple.avfoundation rendersynchronizer_sts_label -bool %s"
<<<< AVSampleBufferRenderSynchronizer >>>> %s: error: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] rate: %1.3f; time: %1.3f; hostTime: %1.3f; fig error: %d
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Setting self as render synchronizer on renderer (%p) failed
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Error adding an AudioRenderer to the FigSynchronizer: %d
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Failed to add Renderer %@; error returned from _addRenderer: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] removalBlock called; weakToSelf: %p; weakToRenderer: %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] called for renderer %p; time: %1.3f
<<<< AVSampleBufferRenderSynchronizer >>>> %s: unknown renderer: %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] old once observer already fired before we could invalidate it (renderer: %p)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] invalidated old scheduled removal of renderer %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] successfully scheduled removal of renderer %p at time %1.3f
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Trying to add a renderer (%p) to same synchronizer
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Trying to add multiple audio renderers when disallowed
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Too many audio renderers
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called (self = <%p>, time observer = <%p>)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called (center=%@, listener=%p, name=%@, object=%p, payload=%@)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Was tracking AVSBDL=%p, switching to AVSBVR=%p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Selecting AVSBVR=%p with label
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Selecting AVSBDL=%p that already contains a label
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Setting new STSLabel on AVSBDL=%p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Setting STSLabel %@ on renderer=%p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Cleaning-up renderer %p for synchronizerInternal %p
<<<< AVFileSystemUtilities >>>> %s: Failed to remove temporary file at %@: %@
<<<< AVAssetVariant >>>> %s: %@: encountered invalid obj: %p while evaluating
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: source CIImage %@ (colorSpace %@) from CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with CIImage %@
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: CIImage %@ (colorSpace %@) already has a CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: rendered CIImage %@ (colorSpace %@) to CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with error %@
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with request %@
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: cancelling begin
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: cancelling done
<<<< AVPlayerItemLegibleOutput >>>> %s: Invoking legible delegate %p with %d attributed string(s) and %d native sample(s) at time %f:%@
<<<< AVPlayerItemLegibleOutput >>>> %s: called
<<<< AVPlayerItemLegibleOutput >>>> %s: Notifying delegate of a flush
<<<< AVExternalDevice >>>> %s: Endpoint HID input mode: %@
<<<< AVExternalDevice >>>> %s: called with externalDevice %p hidDictionary %@
<<<< AVExternalDevice >>>> %s: Endpoint HID Setting inputMode to %@
<<<< AVExternalDevice >>>> %s: called with dictionary %@
<<<< AVExternalDevice >>>> %s: called with externalDevice %p client %@ reason %@
<<<< AVExternalDevice >>>> %s: called with externalDevice %p
<<<< AVExternalDevice >>>> %s: Endpoint property '%@' not supported
<<<< AVExternalDevice >>>> %s: Endpoint property '%@' has value: %@
<<<< AVExternalDevice >>>> %s: Endpoint screen IDs: %@
<<<< AVExternalDevice >>>> %s: Endpoint capabilities: %@
<<<< AVExternalDevice >>>> %s: adding endpointDeviceHID: %@
<<<< AVExternalDevice >>>> %s: Invalid Siri Requested Action: %@
<<<< AVPlayerCaptionLayer >>>> %s: Called (self=%p)
<<<< AVPlayerCaptionLayer >>>> %s: Called (self=%p, bounds=%@)
<<<< AVPlayerCaptionLayer >>>> %s: old player=%p, new player=%p
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Observing isDisplayingClosedCaptions on player %p
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Did cancel all observation of old player
<<<< AVPlayerCaptionLayer >>>> %s: called (keyPath=%@, object=%@, change=%@, context=%p
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Not applying new value of AVPlayer.currentItem.nonForcedSubtitleDisplayEnabled for player %p not currently being observed (expected %p)
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Not applying new value of AVPlayer.isDisplayingClosedCaptions for player %p not currently being observed (expected %p)
<<<< AVPlayerCaptionLayer >>>> %s: <%p> %@ closed caption layer
<<<< AVCustomCompositor >>>> %s: videoComposition %p
<<<< AVCustomCompositor >>>> %s: creating instance of "%@"
<<<< AVCustomCompositor >>>> %s: src pixel buffer attributes %@
<<<< AVCustomCompositor >>>> %s: canConformColorOfSourceFrames %d
<<<< AVCustomCompositor >>>> %s: intializing new render context (videoCompositionDidChange %d
<<<< AVCustomCompositor >>>> %s: render context no longer suitable, need to create a new one
<<<< AVKVODispatcher >>>> %s: called (self=%p, keyPath=%@, object=%@, change=%@, context=%p)
<<<< AVKVODispatcher >>>> %s: %p no longer observing %@ with observer %@, for key path %@, and context %p
<<<< AVKVODispatcher >>>> %s: %p observing %@ with observer %@, for key path %@, options %d, and context %p
<<<< AVKVODispatcher >>>> %s: Registering for %@ (self = %@)
<<<< AVKVODispatcher >>>> %s: Calling -willChange for %@.%@, in response to top-level property change (self=%p)
<<<< AVKVODispatcher >>>> %s: cancelling second-level observation
<<<< AVKVODispatcher >>>> %s: Calling -willChange for %@.%@, in response to second-level property change (self=%p)
<<<< AVKVODispatcher >>>> %s: Calling -didChange for %@.%@, in response to second-level property change (self=%p)
<<<< AVRouteDetector >>>> %s: app is not in the foreground/active. route detection is suspended.
<<<< AVRouteDetector >>>> %s: app is in the foreground/active. route detection is allowed.
<<<< AVRouteDetector >>>> %s: AirPlay devices present: %d
<<<< AVRouteDetector >>>> %s: Custom routes present: %d
<<<< AVRouteDetector >>>> %s: Posting AVRouteDetectorMultipleRoutesDetectedDidChangeNotification.
<<<< AVRouteDetector >>>> %s: AirPlay device discovery enabled.
<<<< AVRouteDetector >>>> %s: Creating DADiscoverySession failed with error: %@
<<<< AVRouteDetector >>>> %s: Received DAEventTypeDevicesPresentChanged. Devices present: %d
<<<< AVRouteDetector >>>> %s: Received custom route discovery event, but AVRouteDetector.detectsCustomRoutes has since been disabled. Ignoring event.
<<<< AVRouteDetector >>>> %s: Custom route discovery enabled.
<<<< AVRouteDetector >>>> %s: Custom route discovery disabled.
<<<< AVRouteDetector >>>> %s: AirPlay device discovery disabled.
<<<< AVRouteDetector >>>> %s: AVRouteDetector did enter background.
<<<< AVRouteDetector >>>> %s: AVRouteDetector did enter foreground.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: CVPixelBufferPoolCreatePixelBufferWithAuxAttributes failed (error %d)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: initializing
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderDimensions = %d %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderScale = %f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderPixelAspectRatio = %d %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderEdgeProcessingPixels = %f %f %f %f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_HighQualityRendering = %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredAttributes = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredYCbCrMatrix = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredColorPrimaries = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredTransferFunction = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_BlendingTransferFunction = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: Failed to resolve pixel buffer attributes (error %d), required client attributes %@, desired destination attributes %@
<<<< AVMovie >>>> %s: AVMovie %p, AVAssetInspectorLoader %p
<<<< AVMovie >>>> %s: AVMutableMovie %p, FigMutableMovie %p, FigAsset %p, FigFormatReader %p
<<<< AVMovie >>>> %s: AVMutableMovie %p failed initialization with error %@
<<<< AVMovie >>>> %s: FigCreate3x3MatrixArrayFromCGAffineTransform returned a NULL matrix.
<<<< AVPlayerItemSampleBufferOutput >>>> %s: %p: wrong trackID %d (right trackID is %d)
<<<< AVPlayerItemSampleBufferOutput >>>> %s: FigPlaybackItemExtractAndRetainNextSampleBuffer returned %d, sampleBuffer=%p, self=%p
<<<< AVPlayerItemSampleBufferOutput >>>> %s: No delegate
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Sending -outputMediaDataAvailable:trackID: to delegate
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Delegate does not implement -outputMediaDataAvailable:trackID:
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Sending -outputSequenceWasFlushed:trackID: to delegate
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Delegate does not implement -outputSequenceWasFlushed:trackID:
<<<< AVPlayerItemSampleBufferOutput >>>> %s: %p received %@, extractionID=%d
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p created request %p with identifier: %{public}@ initializationData: %p
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p request with identifier %{public}@ requestID: %lld failed err=%d
<<<< AVContentKeySession >>>> %s: %p cryptor:%p cryptorUUID:%{public}@ keyRequestId: %llu
<<<< AVContentKeySession >>>> %s: %p %p requestID:%lld
<<<< AVContentKeySession >>>> %s: %p %p did fail content key request %{public}@
<<<< AVContentKeySession >>>> %s: %p retrying key request because %@. status is set to retried
<<<< AVContentKeySession >>>> %s: %p %p key request failed since the client did not retry
<<<< AVContentKeySession >>>> %s: %p %p key request did succeed
<<<< AVContentKeySession >>>> %s: cryptor is NULL
<<<< AVContentKeySession >>>> %s: %p cryptor:%p cryptorUUID:%{public}@ cryptorKeyRequestID:%lld isInchargeOfKeyRequest:%d
<<<< AVContentKeySession >>>> %s: %p created key request:%p key-request-length:%lu for contentId:%{public}@ options:%{public}@ err:%{public}@
<<<< AVContentKeySession >>>> %s: %p setting content key response data %p to renew at %{public}@
<<<< AVContentKeySession >>>> %s: %p %p setting content key response data %p to renew at %{public}@
<<<< AVContentKeySession >>>> %s: %p processing content key response with data %p
<<<< AVContentKeySession >>>> %s: %p %p requesting persistable key request
<<<< AVContentKeySession >>>> %s: %p set report group success:%d
<<<< AVContentKeySession >>>> %s: %p %p key-respone:%p length:%lu offline-key:%p offline-key-legth:%lu err:%d
<<<< AVContentKeySession >>>> %s: failed to copy default secure stop manager due to error: %d
<<<< AVContentKeySession >>>> %s: %p: created with %{public}@ storageURL:%{public}@
<<<< AVContentKeySession >>>> %s: %p added content key recipient %p
<<<< AVContentKeySession >>>> %s: %p: failed to add %p as a content key recipient with error:%@
<<<< AVContentKeySession >>>> %s: %p removed content key recipient %p
<<<< AVContentKeySession >>>> %s: %p expiring recipient %p
<<<< AVContentKeySession >>>> %s: %p expiring session
<<<< AVContentKeySession >>>> %s: %p %p issuing renewable key request
<<<< AVContentKeySession >>>> %s: %p %p renewing with err:%@
<<<< AVContentKeySession >>>> %s: %p token:%p token-length:%lu error:%{public}@
<<<< AVContentKeySession >>>> %s: %{public}@ token:%p token-length:%lu error:%{public}@
<<<< AVContentKeySession >>>> %s: %p copying expired session reports for appIdentifier:%p storageURL:%{public}@ reports:%p
<<<< AVContentKeySession >>>> %s: %p remove pending session reports for appIdentifier:%p storageURL:%@
<<<< AVContentKeySession >>>> %s: %p issuing session report generation note
<<<< AVContentKeySession >>>> %s: %p issuing updated offline key %p for %{public}@
<<<< AVContentKeySession >>>> %s: %p issuing content protection identifier change for report group: %p
<<<< AVContentKeySession >>>> %s: %p issuing content protection identifier change
<<<< AVContentKeySession >>>> %s: %p failed to issue content key request due to an internal error
<<<< AVContentKeySession >>>> %s: %p failed to issue content key request because delegate's already gone
<<<< AVContentKeySession >>>> %s: %p issuing multiple key requests: %{public}@
<<<< AVContentKeySession >>>> %s: %p %p issuing key request
<<<< AVContentKeySession >>>> %s: %p %p issuing persistable key request
<<<< AVContentKeySession >>>> %s: %p initializing content key request with identifier %@ and initialization data %@
<<<< AVContentKeySession >>>> %s: %p Ignore produced contentKey (%@) because content key session is expired
<<<< AVContentKeySession >>>> %s: %p issued content key %{public}@
<<<< AVContentKeySession >>>> %s: %p reusing preloaded cryptor %p for cryptor %p
<<<< AVContentKeySession >>>> %s: %p creating content key group: %p error: %@
<<<< AVContentKeySession >>>> %s: %p creating cryptor using sinfs
<<<< AVContentKeySession >>>> %s: Invalid key system used in AVContentKeySystem
<<<< AVContentKeySession >>>> %s: %@ failed to process content key request for identifier %@ and initialization data %@ due to %@
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p processing key request with identifier %{public}@ and initData %{public}@ options %{public}@
<<<< AVContentKeySession >>>> %s: %p associate key request %p to reportGroup:%p
<<<< AVContentKeySession >>>> %s: %p expire reportGroup:%p
<<<< AVContentKeySession >>>> %s: %p created reportGroup:%p with figCKS: %p
<<<< AVContentKeySession >>>> %s: setting authorizationToken failed due to err=%d
<<<< AVContentKeySession >>>> %s: badly formatted key request init data (encoded sinf not UTF8)
<<<< AVContentKeySession >>>> %s: badly formatted key request init data (encoded sinf not base64)
<<<< AVContentKeySession >>>> %s: called with handlingClient: %@, handler: %@, requestInfo: %@, requestID %llu
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptorUUID: %@, cryptorRequestID: %llu, keyResponseError: %@
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptorUUID: %@, cryptorRequestID: %llu
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptKeyIdentifier: %@, updatedPersistentKey: %@
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: outputDevices=%@
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (propertyName=%@, qualifier=%@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (deviceID=%@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (self=%p, groupID=%@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (self=%p, groupID=%@, groupLeader=%@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (self=%p, outputDevice=%@, options=%@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (groupID=%{private}@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (inResult = %d)
-[AVOutputContextLocalOutputDeviceGroupImpl _contextOutputDevicesDidChange:]
-[AVOutputContextLocalOutputDeviceGroupImpl addOutputDevice:withOptions:completionHandler:]
v16@?0@"AVOutputContextDestinationChange"8
-[AVOutputContextLocalOutputDeviceGroupImpl removeOutputDevice:withOptions:completionhandler:]
v16@?0@"NSNotification"8
avplayerlooper_trace
com.apple.avfoundation
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]
invalid parameter not satisfying: %s
player != nil
itemToLoop != nil
! CMTIMERANGE_IS_EMPTY(loopRange)
! CMTIMERANGE_IS_INDEFINITE(loopRange)
CMTIME_COMPARE_INLINE(loopRange.start, >=, kCMTimeZero)
com.apple.avplayerlooper.ivars
duration
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]_block_invoke_2
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]_block_invoke
v8@?0
-[AVPlayerLooper _changeStatusToFailedWithError:]
error
status
-[AVPlayerLooper _changeStatusToFailedWithError:]_block_invoke
-[AVPlayerLooper _calculateNumberOfCopiesNeeded]
-[AVPlayerLooper _setupLoopingReturningError:]
Loop range must start within [0, item duration]
Loop range must be within [0, item duration]
Template AVPlayerItem's duration must not be 0
loopingPlayerItems
-[AVPlayerLooper _setupLoopingReturningError:]_block_invoke
currentItem
AVPlayerLooperObservationCurrentItemContext
AVPlayerLooperObservationItemStatusContext
-[AVPlayerLooper observeValueForKeyPath:ofObject:change:context:]
loopCount
_avplLoopingItemFailedToPlayToEndTimeNotificationHandler
trackOutput != nil
[[trackOutput mediaType] isEqualToString:AVMediaTypeMetadata]
Cannot initialize an instance of %@ with a track output which was used to initialize another instance of %@
Cannot initialize an instance of %@ with a track output which has already progressed beyond AVAssetReaderStatusUnknown
cannot call method until the track output is attached to an asset reader and -startReading has been called on that asset reader
AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification
AVOutputDeviceDiscoverySessionAvailableOutputDeviceGroupsDidChangeNotification
outputdevicediscoverysession_trace
-[AVOutputDeviceDiscoverySession initWithOutputDeviceDiscoverySessionImpl:]
com.apple.avfoundation.avodds.ivars
-[AVOutputDeviceDiscoverySession impl]
-[AVOutputDeviceDiscoverySession setTargetAudioSession:]
-[AVOutputDeviceDiscoverySession setDiscoveryMode:forClientIdentifiers:]
q24@?0@8@16
-[AVOutputDeviceDiscoverySession availableOutputDevices]
-[AVOutputDeviceDiscoverySession devicePresenceDetected]
-[AVOutputDeviceDiscoverySession outputDeviceDiscoverySessionImplDidChangeAvailableOutputDevices:]
-[AVOutputDeviceDiscoverySession outputDeviceDiscoverySessionImplDidChangeAvailableOutputDeviceGroups:]
-[AVOutputDeviceDiscoverySessionAvailableOutputDevices recentlyUsedDevices]
-[AVOutputDeviceDiscoverySessionAvailableOutputDevices otherDevices]
+[AVAPSyncControllerOutputDeviceImpl registerLocalDeviceDidChangeListener:]
-[AVAPSyncControllerOutputDeviceImpl initWithSyncController:secondaryImpl:]
-[AVAPSyncControllerOutputDeviceImpl dealloc]
-[AVAPSyncControllerOutputDeviceImpl clusteredDeviceDescriptions]
-[AVAPSyncControllerOutputDeviceImpl _volumeDidChangeForEndpointWithID:]
-[AVAPSyncControllerOutputDeviceImpl _volumeControlSupportedDidChangeForEndpointWithID:]
-[AVAPSyncControllerOutputDeviceImpl _volumeControlTypeDidChangeForEndpointWithID:]
-[AVAPSyncControllerOutputDeviceImpl _proposedGroupIDDidChangeForEndpointWithID:]
AVAPSyncControllerOutputDeviceImplGetLocalDeviceCompletion
AVAPSyncControllerOutputDeviceImplVolumeDidChange
AVAPSyncControllerOutputDeviceImplVolumeControlSupportedDidChange
AVAPSyncControllerOutputDeviceImplVolumeControlTypeDidChange
AVAPSyncControllerOutputDeviceImplProposedGroupIDDidChange
AVAPSyncControllerOutputDeviceImplLocalDeviceDidChange
AVPlayerLayerVisibilityDidChangeNotification
AVPlayerLayerIsPartOfForegroundSceneDidChangeNotification
UISceneDidEnterBackgroundNotification
UISceneWillEnterForegroundNotification
avplayerlayer_trace
AVPlayerLayerQueue
com.apple.avfoundation.playerlayer.configuration
AVPlayerLayer <%p>
AVPlayerLayer <%p> (videoLayer)
AVPlayerLayer <%p> (closedCaptionLayer)
FigSubtitleCALayer
-[AVPlayerLayer init]
contentsAreFlipped
AVPlayerLayerContentsAreFlippedObservationContext
UIWindow
<AVPlayerLayer %p%@%@%@>
, player %p
, associatedLayer %p
, is in playback mode
-[AVPlayerLayer layoutSublayers]
-[AVPlayerLayer setBounds:]
@16@?0@8
bounds.size
bounds
position
sublayerTransform.scale.x
sublayerTransform.scale.y
%@_x
%@_y
sublayerTransform
AVPlayerLayer_PIPPlaceholderLayer_Bounds_%@
AVPlayerLayer_PIPPlaceholderLayer_Position_%@
AVPlayerLayer_MaskLayer_Bounds_%@
AVPlayerLayer_MaskLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@
AVPlayerLayer_VideoLayer_Position_%@
AVPlayerLayer_VideoLayer_SublayerTransform_%@
v16@?0@"CAPropertyAnimation"8
AVPlayerLayer_VideoLayer_SublayerTransform_%@_x
AVPlayerLayer_VideoLayer_SublayerTransform_%@_y
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_x
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_y
-[AVPlayerLayer _percentCoverageRelativeToRootLayer]
-[AVPlayerLayer _displaySize]
-[AVPlayerLayer _notifyPlayerOfDisplaySize]
playerCurrentItemPresentationSize
player
cachedPresentationSizeOfCurrentItem
-[AVPlayerLayer _applyCurrentItemPresentationSizeChangeAndForceUpdate:]
-[AVPlayerLayer _applyCurrentItemPresentationSizeChangeAndForceUpdate:]_block_invoke
-[AVPlayerLayer _startObservingPlayer:]
@"AVPropertyValuePublisher"16@?0@"AVPlayerItem"8
v16@?0@"NSValue"8
v16@?0@"AVPlayerItem"8
v16@?0@"NSArray"8
v16@?0@"NSNumber"8
-[AVPlayerLayer _stopObservingPlayer:]
-[AVPlayerLayer observeValueForKeyPath:ofObject:change:context:]
-[AVPlayerLayer _handleNonForcedSubtitleDisplayDidChange:player:]_block_invoke
-[AVPlayerLayer _handleIsDisplayingClosedCaptionsDidChange:player:]_block_invoke
Showing
Hiding
AVPlayerLayerPlayerDidChangeNotification
-[AVPlayerLayer _setPlayer:forPIP:]
readyForDisplay
-[AVPlayerLayer _setPlayer:forPIP:]_block_invoke
-[AVPlayerLayer layerDidBecomeVisible:]
-[AVPlayerLayer _updateReadyForDisplayForPlayerCurrentItem]_block_invoke
-[AVPlayerLayer pixelBufferAttributes]
-[AVPlayerLayer _interstitialLayer]
-[AVPlayerLayer _setShowInterstitialInstead:afterDelay:]
videoRect
-[AVPlayerLayer _setShowInterstitialInstead:afterDelay:]_block_invoke
-[AVPlayerLayer setLanczosFilterDownscaleFactor:]
videoGravity
-[AVPlayerLayer setForScrubbingOnly:]
-[AVPlayerLayer copyDisplayedPixelBuffer]
+[AVPlayerLayer _swapSublayersBetweenPlayerLayer:andPlayerLayer:]
v32@?0@8@16^B24
Layer %@ is not a permitted sublayer during Picture-in-Picture, will be temporarily removed from the layer tree
targetLayer != nil
[targetLayer isKindOfClass:[AVPlayerLayer class]]
[targetLayer player] == nil
-[AVPlayerLayer _enterSecondScreenModeRedirectingVideoToLayer:]
-[AVPlayerLayer _leaveSecondScreenModeForLayer:]
newPlayerLayerForPIP != nil
[newPlayerLayerForPIP isKindOfClass:[AVPlayerLayer class]]
[newPlayerLayerForPIP player] == nil
PIPModeEnabled
-[AVPlayerLayer _enterPIPModeRedirectingVideoToLayer:]
-[AVPlayerLayer _leavePIPModeForLayer:]
-[AVPlayerLayer _forceLayout]
maskLayer
videoLayer
subtitleLayer
closedCaptionLayer
interstitialLayers
-[AVPlayerLayer _restoreClientLayers:intoMaskLayer:]
-[AVPlayerLayer _setSublayersForPIP:]
-[AVPlayerLayer setSublayers:]
-[AVPlayerLayer addSublayer:]
-[AVPlayerLayer insertSublayer:atIndex:]
-[AVPlayerLayer insertSublayer:below:]
-[AVPlayerLayer insertSublayer:above:]
-[AVPlayerLayer replaceSublayer:with:]
-[AVPlayerLayer removeFromSuperlayer]
-[AVPlayerLayer _currentWindowSceneIsForegroundDefault]
-[AVPlayerLayer _currentWindowSceneIsForeground]
-[AVPlayerLayer _windowSceneDidEnterBackground]
-[AVPlayerLayer _windowSceneWillEnterForeground]
-[AVPlayerLayer _notifyPlayerOfLayerForegroundStateChange]
-[AVPlayerLayer _setIsPartOfForegroundScene:]_block_invoke
AVPlayerLayerFilterClientLayersFromLayerWithIndexPath
{?=qiIq}
CMTime: %@
[coder allowsKeyedCoding]
CMTime
{?={?=qiIq}{?=qiIq}}
CMTimeRange: %@
CMTimeRange
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}
CMTimeMapping: {%@, %@}
CMTimeMapping
avtimebaseobserver_trace
timebase
A time observer token object was released without first being removed from the object it was created from using -removeTimeObserver:
-[AVTimebaseObserver _finishInitializationWithTimerEventHandler:]
((Boolean)(((interval).flags & (kCMTimeFlags_Valid | kCMTimeFlags_ImpliedValueFlagsMask)) == kCMTimeFlags_Valid))
((Boolean)(CMTimeCompare(interval, kCMTimeZero) > 0))
block != ((void *)0)
-[AVPeriodicTimebaseObserver _fireBlockForTime:]
-[AVPeriodicTimebaseObserver _effectiveRateChanged]
-[AVPeriodicTimebaseObserver _resetNextFireTime]
-[AVPeriodicTimebaseObserver _handleTimeDiscontinuity]
[times count] > 0
-[AVOccasionalTimebaseObserver initWithTimebase:times:queue:block:]
-[AVOccasionalTimebaseObserver _fireBlock]
-[AVOccasionalTimebaseObserver _effectiveRateChanged]
B32@?0@8Q16^B24
-[AVOccasionalTimebaseObserver _resetNextFireTime]
block
-[AVOnceTimebaseObserver initWithTimebase:fireTime:queue:block:]
-[AVOnceTimebaseObserver _fireBlock]
-[AVOnceTimebaseObserver _resetNextFireTime]_block_invoke
AVTimebaseObserver_timebaseNotificationCallback_block_invoke
AVTimebaseObserver_figTimebaseGetTime
avplayeritemmetadatacollector_trace
com.apple.avplayeritemmetadatacollector.ivars
newDelegateQueue == NULL
newDelegateQueue != NULL
playerItem != nil
v16@?0@8
obtainCoordinator != nil
com.apple.avplayeriteminterstitialeventcollector.ivars
comn
title
creator
subject
description
publisher
contributor
creationDate
lastModifiedDate
type
format
identifier
source
language
relation
location
copyrights
albumName
author
artist
artwork
make
model
software
accessibilityDescription
com.apple.quicktime.udta
udta
@alb
@arg
@ART
@aut
@chp
@cmt
@com
@cpy
@day
@des
@dir
@dis
@enc
@nam
@gen
@hst
@inf
@key
@mak
@mod
@ope
@fmt
@src
@prf
@prd
@pub
@PRD
@swr
@req
@trk
@wrn
@wrt
@url
@xyz
tnam
@phg
name
tagc
@ade
org.mp4ra
uiso
cprt
date
ades
auth
perf
gnre
yrrc
loci
titl
dscp
coll
urat
thmb
albm
kywd
clsf
rtng
com.apple.quicktime.mdta
mdta
com.apple.quicktime.author
com.apple.quicktime.comment
com.apple.quicktime.copyright
com.apple.quicktime.creationdate
com.apple.quicktime.director
com.apple.quicktime.displayname
com.apple.quicktime.information
com.apple.quicktime.keywords
com.apple.quicktime.producer
com.apple.quicktime.publisher
com.apple.quicktime.album
com.apple.quicktime.artist
com.apple.quicktime.artwork
com.apple.quicktime.description
com.apple.quicktime.software
com.apple.quicktime.year
com.apple.quicktime.genre
info.ixml.xml
com.apple.quicktime.location.ISO6709
com.apple.quicktime.make
com.apple.quicktime.model
com.apple.quicktime.arranger
com.apple.quicktime.encodedby
com.apple.quicktime.originalartist
com.apple.quicktime.performer
com.apple.quicktime.composer
com.apple.quicktime.credits
com.apple.quicktime.phonogramrights
com.apple.quicktime.camera.identifier
com.apple.quicktime.camera.framereadouttimeinmicroseconds
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
com.apple.quicktime.live-photo.vitality-disabled
com.apple.quicktime.is-montage
com.apple.quicktime.title
com.apple.quicktime.collection.user
com.apple.quicktime.rating.user
com.apple.quicktime.location.name
com.apple.quicktime.location.body
com.apple.quicktime.location.note
com.apple.quicktime.location.role
com.apple.quicktime.location.date
com.apple.quicktime.direction.facing
com.apple.quicktime.direction.motion
com.apple.quicktime.content.identifier
com.apple.quicktime.spatial-overcapture.group-identifier
com.apple.quicktime.contains-spatial-overcapture
com.apple.quicktime.accessibility.description
com.apple.itunes
itsk
itlk
covr
@st3
@too
aART
akID
apID
atID
cnID
cpil
disk
geID
grup
plID
tmpo
trkn
@ard
@lyr
@cak
@con
@equ
@lnt
@sne
@sol
@thx
@xpd
org.id3
AENC
APIC
ASPI
COMM
COMR
ENCR
EQUA
EQU2
ETCO
GEOB
GRID
IPLS
LINK
MCDI
MLLT
OWNE
PRIV
PCNT
POPM
POSS
RBUF
RVAD
RVA2
RVRB
SEEK
SIGN
SYLT
SYTC
TALB
TBPM
TCOM
TCON
TCOP
TDAT
TDEN
TDLY
TDOR
TDRC
TDRL
TDTG
TENC
TEXT
TFLT
TIME
TIPL
TIT1
TIT2
TIT3
TKEY
TLAN
TLEN
TMCL
TMED
TMOO
TOAL
TOFN
TOLY
TOPE
TORY
TOWN
TPE1
TPE2
TPE3
TPE4
TPOS
TPRO
TPUB
TRCK
TRDA
TRSN
TRSO
TSIZ
TSOA
TSOP
TSOT
TSRC
TSSE
TSST
TYER
TXXX
UFID
USER
USLT
WCOM
WCOP
WOAF
WOAR
WOAS
WORS
WPAY
WPUB
WXXX
StreamTitle
StreamUrl
com.apple.quicktime.HLS
lsdr
m3u8
NAME
caaf
public.unknown
HREF
dataType
dataTypeNamespace
pictureType
baseURL
info
CurrentEventDidChangeNotification
EventsDidChangeNotification
AssetListResponseStatusDidChangeNotification
AssetListResponseStatusDidChangeEventKey
AssetListResponseStatusDidChangeStatusKey
AssetListResponseStatusDidChangeErrorKey
AVPlayerWaitingDuringInterstitialEventReason
EventNoCue
EventJoinCue
EventLeaveCue
CMTIME_IS_NUMERIC(time)
date != nil
Template items for interstitial events must employ assets that can be referenced by URL (AVURLAssets)
date != nil || CMTIME_IS_NUMERIC(time)
com.apple.avplayerinterstitialevent.ivars
<%@: %p, primaryItem = %p, ctx = %p, templateItems = %p>
events returned by AVPlayerInterstitialEventMonitor are not mutable; modify a copy instead
Cannot create an InterstitialEventMonitor for an interstitial player.
Could not obtain the interstitial player.
Use %@ instead.
com.apple.avplayerinterstitialeventcontroller
invalid event %@ (%d)
avplayerinterstitialeventmonitor_fpNotificationCallback
-[AVSampleBufferVideoOutput setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:]
com.apple.avfoundation.avsamplebuffervideooutput
avsamplebuffervideooutput_trace
delegateQueue == NULL
delegateQueue != NULL
-[AVSampleBufferVideoOutput _copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:]
-[AVSampleBufferVideoOutput copyLastPixelBuffer:]
-[AVSampleBufferVideoOutput _configureWithVideoQueue:]
-[AVSampleBufferVideoOutput _dispatchOutputSequenceWasFlushed]
-[AVSampleBufferVideoOutput _dispatchOutputSequenceWasFlushed]_block_invoke
important
default
avassetstoragemanager_trace
storageManagementPolicy != nil
downloadStorageURL != nil
bundleIdentifier != nil
Not a fileURL %@
No file at %@
-[AVAssetDownloadStorageManager setStorageManagementPolicy:forURL:]
-[AVAssetDownloadStorageManager storageManagementPolicyForURL:]
<%@: %p, ExpirationDate: %@ Priority: %@>
ExpirationDate
Priority
AVOutputDeviceGroupAddOutputDeviceOptionAuthorizationToken
AVOutputDeviceGroupAddOutputDeviceOptionCancelIfAuthRequiredKey
AVOutputDeviceGroupAddOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputDeviceGroupVolumeDidChangeNotification
AVOutputDeviceGroupVolumeControlTypeDidChangeNotification
AVOutputDeviceGroupOutputDevicesDidChangeNotification
AVOutputDeviceGroupMembershipChangeInitiator
AVOutputDeviceGroupMembershipChangeResultCancellationReasonAuthorizationSkipped
outputdevicegroup_trace
-[AVOutputDeviceGroup initWithOutputDeviceGroupImpl:]
<%@: %p>
-[AVOutputDeviceGroup outputDevices]
-[AVOutputDeviceGroup outputDeviceGroupImpl:didChangeOutputDevicesWithInitiator:]
-[AVOutputDeviceGroup addOutputDevice:withOptions:completionHandler:]
-[AVOutputDeviceGroup addOutputDevice:withOptions:completionHandler:]_block_invoke
v16@?0@"AVOutputDeviceGroupMembershipChangeResult"8
-[AVOutputDeviceGroup removeOutputDevice:withOptions:completionHandler:]
-[AVOutputDeviceGroup removeOutputDevice:withOptions:completionHandler:]_block_invoke
-[AVOutputDeviceGroup outputDeviceGroupImplDidChangeVolume:]
-[AVOutputDeviceGroup outputDeviceGroupImplDidChangeVolumeControlType:]
MIMEtype
languageCode
-[AVMetadataItem(AVMetadataItem_Local) _valueFromCFType:]
-[AVMetadataItem(AVMetadataItem_Local) _extractPropertiesFromDictionary:]
avmetadataitem_trace
+[AVMetadataItem metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:]
v24@?0Q8^B16
v16@?0@"AVMetadataItemValueRequest"8
 length=%lu
<%@: %p, identifier=%@, keySpace=%@, key class = %@, key=%@, commonKey=%@, extendedLanguageTag=%@, dataType=%@, time=%@, duration=%@, startDate=%@, extras=%@, value class=%@, value%@>
Metadata item %p has no data type
Metadata item %p has no identifier.  If the item was given a key and key space, use +[%@ %@] to check whether an identifier can be made from that key and key space
+[NSJSONSerialization isValidJSONObject:] returned NO for the AVMetadataItem's value
Bad identifier. Identifier should be of the form "<keySpace>/<key>". Try using +%@ to generate an identifier from key and keySpace.
keySpace
com.apple.avfoundation.avmetadataitem
-[AVLazyValueLoadingMetadataItem loadValuesAsynchronouslyForKeys:completionHandler:]_block_invoke_2
-[AVLazyValueLoadingMetadataItem loadValuesAsynchronouslyForKeys:completionHandler:]_block_invoke
value
com.apple.avfoundation.avchaptermetadataitem
<%@: %p, chapterType=%@, locale identifier=%@, value=%@, time=%@, duration=%@, extras=%@>
extraAttributes
+[AVMetadataItemFilterForSharing addIdentifier:toWhitelistDictionary:]
com.apple.iTunes.iTunSMPB
com.apple.iTunes.iTunNORM
ludt
AVMetadataMakeMetadataObjectFromBoxedMetadata
/System/Library/PrivateFrameworks/AVFCapture.framework/AVFCapture
%s signalled err=%d (%s) (%s) at %s:%d
kFigMetadataReaderError_AllocationFailed
Failed to allocate buffer for FigBoxedMetadata -> CFData conversion
AVMetadataItemMakeDataFromBoxedMetadata
AVMetadataItem.m
AVMetadataMakeDependentSpecificationsForValue
AVMetadataObjectCreateBoxedMetadataFromObjectAndFormatDescription
Value
http
https
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
moop
mpvr
AVURLAssetPreferPreciseDurationAndTimingKey
AVURLAssetReferenceRestrictionsKey
AVURLAssetTypeKey
AVURLAssetClientBundleIdentifierKey
AVURLAssetClientAuditTokenKey
AVURLAssetParentNetworkActivityKey
AVURLAssetAlternativeConfigurationOptionsKey
ServiceIdentifier
HierarchyToken
MediaIdentifier
ContentProvider
iTunesServiceMonitoringKey
ServiceInformationKey
AVURLAssetInspectorLoaderKey
AVURLAssetProtectedContentSupportStorageURLKey
AVURLAssetCacheKey
AVURLAssetShouldMatchDataInCacheByURLPathComponentOnlyKey
AVURLAssetShouldMatchDataInCacheByURLWithoutQueryComponentKey
AVURLAssetOutOfBandMIMETypeKey
AVURLAssetAllowableTypeCategoriesKey
AVURLAssetAllowableAudioCodecTypesKey
AVURLAssetAllowableVideoCodecTypesKey
AVURLAssetAllowableCaptionFormatsKey
AVAssetRequiresInProcessOperationKey
AVAssetPrefersSandboxedParsingOptionKey
AVURLAssetHTTPUserAgentKey
AVURLAssetHTTPHeaderFieldsKey
AVURLAssetHTTPCookiesKey
AVURLAssetAllowsCellularAccessKey
AVURLAssetAllowsExpensiveNetworkAccessKey
AVURLAssetAllowsConstrainedNetworkAccessKey
AVURLAssetURLRequestAttributionKey
AVURLAssetByteRangeInFileKey
AVURLAssetClientURLLoadingRepresentsAccurateNetworkStatistics
AVURLAssetVideoNotEligibleForAppRecordingKey
AVURLAssetRequiresCustomURLLoadingKey
AVURLAssetUseClientURLLoadingExclusively
AVURLAssetCacheUseNonPurgeableMemoryKey
AVURLAssetCacheNonPurgeableMemoryLimitKey
AVURLAssetUsesNoPersistentCacheKey
AVURLAssetPreloadDurationWhenNextItemKey
AVURLAssetDownloadDestinationURLKey
AVURLAssetDownloadIsLowPriorityKey
AVURLAssetPurchaseBundleKey
AVURLAssetAirPlayAuthorizationInfoKey
AVURLAssetMaxSizeAllowedForCellularAccessKey
AVURLAssetNetworkProbeRequestDisabledKey
AVURLAssetReadAheadOnByteStreamCreationEnabledKey
AVURLAssetRemoteCustomURLHandlerContextKey
AVURLAssetSSLPropertiesKey
AVURLAssetNetworkLatencyMitigationKeyPodcastsOnly
AVURLAssetDownloadCompleteSuccessNotification
AVURLAssetDownloadCompleteFailedNotification
AVURLAssetDownloadCompleteNotificationErrorKey
AVURLAssetDownloadTokenKey
AVURLAssetBoundNetworkInterfaceName
AVURLAssetUseAppleWirelessDirectLinkKey
AVURLAssetInheritURIQueryComponentFromReferencingURIKey
AVURLAssetAllowedHTTPProtocolTypesKey
AVURLAssetApplicationTransportSecurityKey
AVURLAssetOptimizeAccessForLinearMoviePlaybackKey
AVURLAssetShouldEnableLegacyWebKitCompatibilityModeForContentKeyRequests
AVURLAssetiTunesStoreContentInfoKey
AVURLAssetiTunesStoreContentIDKey
AVURLAssetiTunesStoreContentTypeKey
AVURLAssetiTunesStoreContentUserAgentKey
AVURLAssetiTunesStoreContentDownloadParametersKey
AVURLAssetiTunesStoreContentDSIDKey
AVURLAssetiTunesStoreContentPurchasedMediaKindKey
AVURLAssetiTunesStoreContentRentalIDKey
AVURLAssetiTunesStoreContentAlternateContentInfoKey
AVURLAssetiTunesStoreContentAlternateContentInfoAssetURLStringKey
AVURLAssetiTunesStoreContentHLSAssetURLStringKey
AVAssetPreferPreciseDurationAndTimingKey
AVAssetReferenceRestrictionsKey
AVAssetMediaServicesWereResetNotification
AVAssetMediaServicesWereResetErrorKey
AVAssetPrepareForIncrementalFragmentsKey
AVURLAssetPrimarySessionIdentifierKey
chap
tmcd
ssrc
fall
sbtl
forc
cdsc
folw
AVURLAssetOutOfBandAlternateTracksKey
MediaSelectionOptionsName
MediaSelectionOptionsExtendedLanguageTag
MediaSelectionOptionsIsDefault
MediaSelectionOptionsTaggedMediaCharacteristics
MediaSelectionOptionsClientIdentifier
MediaSelectionOptionsURL
AVMetadataFormatTypedID3Metadata
AVPropertyListForProxyCreationOption_ReduceMetadataForPhotoLibrary
AVAssetDurationDidChangeNotification
AVAssetChapterMetadataGroupsDidChangeNotification
AVAssetMediaSelectionGroupsDidChangeNotification
AVAssetContainsFragmentsDidChangeNotification
AVAssetWasDefragmentedNotification
AVURLAssetEnableQUICKey
AVURLAssetForceQUICKey
AVURLAssetWhitelistQUICKey
AVURLAssetEnableMultiPath
AVURLAssetPreferLargeResourceRequests
AVURLAssetLoggingIdentifier
AVURLAssetUnitTestOptions
AVURLAssetCustomURLLoaderKey
contentType != nil
[data length] > 0
avasset_trace
streaming
tracks
naturalSize
availableMediaCharacteristicsWithMediaSelectionOptions
v16@?0@"NSError"8
-[AVAsset mediaSelectionGroupForPropertyList:mediaSelectionOption:]
availableMetadataFormats
AVChapterGroupTypeKey
AVChapterGroupLanguageCodeKey
AVChapterGroupExtendedLanguageTagKey
AVChapterGroupPerChapterInfoKey
AVChapterGroupChaptersKey
-[AVAsset(AVAssetChapterInspection) _chapterMetadataGroupsBestMatchingPreferredLanguages:containingItemsWithCommonKeys:]
availableChapterLocales
index %d out of bounds.
MediaValidator.plist
+[AVURLAsset _avfValidationPlist]_block_invoke
public.playlist
AVURLAssetMaxSizeAllowedForCellularAccessKey and AVURLAssetAllowsCellularAccessKey options are incompatible
+[AVURLAsset _getFigAssetCreationOptionsFromURLAssetInitializationOptions:assetLoggingIdentifier:figAssetCreationFlags:error:]
User-Agent
v32@?0@8Q16^B24
AVURLAssetDownloadDestinationURLKey and AVURLAssetUsesNoPersistentCacheKey options are incompatible
AVURLAssetHasSecurityScopedURLKey
com.apple.avurlasset.tracks
-[AVURLAsset initWithURL:options:]
Cannot honor specified AVURLAsset initialization options for AVURLAsset <%p>%@
: %@
-[AVURLAsset _ensureAssetDownloadCache]_block_invoke
figLoaderNotificationHandler
*** SHOULD NOT receive kFigAssetNotification_PropertyRevised / kFigStdAssetProperty_Duration notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
<%@: %p, URL = %@>
^{OpaqueFigAsset=}8@?0
-[AVURLAsset(AVURLAssetURLHandlingInternal) _resourceLoaderWithRemoteHandlerContext:]_block_invoke
com.apple.avfoundation.avurlasset.instanceIdentifierMapping
+[AVDataAsset _getFigAssetCreationOptionsFromDataAssetInitializationOptions:figAssetCreationFlags:]
Data length cannot exceed %llu bytes
AVErrorUnknown
self.figAsset NULL
-[AVURLAsset(AVURLAssetContentKeyEligibilityInternal) _attachToContentKeySession:contentKeyBoss:failedSinceAlreadyAttachedToAnotherSession:]
AVAsset.m
AVURLAssetItemProviderURLWrapperKey
AVURLAssetItemProviderAssetInitializationOptionsKey
com.apple.avfoundation.urlasset
Reading data from the type identifier %@ is not supported by AVURLAsset.
Reading file representations for the type identifier %@ is not supported by AVURLAsset.
Writing to NSItemProviders is not supported for non file:/// scheme URLs: %@
Loading data from the type identifier %@ is not supported by AVURLAsset.
Loading file representations for the type identifier %@ is not supported by AVURLAsset.
supports only keyed archivers
assetCreationOptions
httpCookies
minimumCutOffFrequency < maximumCutOffFrequency
0. <= bypassThreshold && bypassThreshold <= 1.
0. <= sweepValue && sweepValue <= 1.
CleanAperture
ProductionAperture
EncodedPixels
aig_trace
com.apple.avfoundation.requestsqueue
com.apple.avfoundation.imagerequestqueue
com.apple.avfoundation.generateimagesasyncqueue
-[AVAssetImageGenerator _ensureFigAssetImageGeneratorAllowingSynchronousPropertyLoad:error:]
-[AVAssetImageGenerator copyCGImageAtTime:actualTime:error:]
-[AVAssetImageGenerator generateCGImagesAsynchronouslyForTimes:completionHandler:]
handler != nil
-[AVAssetImageGenerator generateCGImagesAsynchronouslyForTimes:completionHandler:]_block_invoke
RequestID
RequestedTime
CompletionHandler
Self
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
-[AVAssetImageGenerator cancelAllCGImageGeneration]
AVAssetImageGenerator can't use a video composition with a renderScale other than 1.0
-[AVAssetImageGenerator _didGenerateCGImage:]
-[AVAssetImageGenerator _failedToGenerateCGImage:]
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl _didReceiveData:]
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl _didCloseCommunicationChannel]
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl sendData:completionHandler:]
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImplHandleEvent
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImplSendDataCompletion
vmap
mdep
AVAssetTrackTimeRangeDidChangeNotification
AVAssetTrackSegmentsDidChangeNotification
AVAssetTrackTrackAssociationsDidChangeNotification
AVAssetTrackMetadataDidChangeNotification
<%@: %p, trackID = %d, mediaType = %@>
segments
availableTrackAssociationTypes
assetTrackNotificationHandler
*** SHOULD NOT receive kFigAssetTrackNotification_PropertyRevised / kFigStdTrackProperty_TimeRange notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
*** SHOULD NOT receive kFigAssetTrackNotification_PropertyRevised / kFigAssetTrackProperty_EditSegmentData notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
AVPlayerWaitingToMinimizeStallsReason
AVPlayerWaitingWhileEvaluatingBufferingRateReason
AVPlayerWaitingWithNoItemToPlayReason
AVPlayerWaitingForCoordinatedPlaybackReason
An AVPlayerItem can occupy only one position in a player's queue at a time.
AVPlayerCurrentItemDidChangeNotification
ReasonForCurrentItemDidChange
ReasonAddToPlayQueue
ReasonRemoveFromPlayqueue
ReasonAdvanceAtEnd
ReasonAdvanceForOverlappedPlayback
ReasonAdvanceDueToError
ReasonUnknown
AVPlayerAvailableHDRModesDidChangeNotification
AVPlayerEligibleForHDRPlaybackDidChangeNotification
AVPlayerPlaybackWasInterruptedNotification
MatchMultichannelTrackPreferenceToAudioDevice
PreferStereo
PreferAC3ViaExclusivePassthrough
CoreTextSubtitleRenderer
CaptionDisplayService
CFAttributedStrings
FigCaptions
AVPlayerRateDidChangeNotification
AVPlayerRateDidChangeReasonKey
AVPlayerRateDidChangeRateChangeIdentifierKey
AVPlayerRateDidChangeOriginatingParticipantKey
AVPlayerRateDidChangeReasonAudioSessionInterrupted
AVPlayerRateDidChangeReasonSetRateCalled
AVPlayerRateDidChangeReasonSetRateFailed
AVPlayerRateDidChangeReasonAppBackgrounded
AVPlayerRateDidChangeReasonRouteChanged
AVPlayerRateDidChangeReasonPlaybackResumed
AVPlayerRateDidChangeReasonPlaybackStalled
AVPlayerRateDidChangeReasonPauseAtItemEnd
AVPlayerRateDidChangeReasonStatusChanged
AVPlayerRateDidChangeReasonCoordinatedPlayback
AVPlayerBackgroundPIPAuthorizationTokenDidChangeNotification
AVPlayerAudiovisualBackgroundPlaybackPolicyDidChangeNotification
AVPlayerInterstitialPlayerDidChangeNotification
Scanning
avplayer_trace
Item must be an instance of AVPlayerItem.
B24@?0^B8^@16
AvoidConcurrentKVOForAVPlayerCurrentItem
com.apple.avplayer.figplayer
com.apple.avplayer.playerlayer
com.apple.avplayer.ivars
com.apple.avplayer.current-item-properties
com.apple.avplayer.configuration
com.apple.avplayer.layers
-[AVPlayer init]
avplayer_logperformance
AVPlayer %p deallocated while a pending preroll is still in progress; leaking completion handler. Use -cancelPendingPrerolls to deallocate an AVPlayer safely while a preroll is still pending.
masterClock
sourceClock
-[AVPlayer _changeStatusToFailedWithError:]
rate
-[AVPlayer _updateDecoderPixelBufferAttributes:onFigPlayer:]
AVPlayerCurrentItemDidChangeForPublishersNotification
isDisplayingClosedCaptions
AVPlayerIsDisplayingClosedCaptionsDidChangeNotification
-[AVPlayer _setCurrentItem:]
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:]_block_invoke
timeControlStatus
reasonForWaitingToPlay
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:]
-[AVPlayer _itemIsReadyToPlay:]_block_invoke
-[AVPlayer _advanceCurrentItemAccordingToFigPlaybackItem:]
-[AVPlayer _advanceToNextItem]
Item must be a non-nil instance of AVPlayerItem.
-[AVPlayer prepareItem:withCompletionHandler:]
v16@?0q8
-[AVPlayer _insertItem:afterItem:]
surrogate_player_disabled
+[AVPlayer _createFigPlayerWithType:options:player:]
FigPlayer_File
FigPlayer_Stream
coordinator_player_disabled
com.apple.avfoundation.AVPlayer.%d-%d
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke
airPlayVideoActive
externalPlaybackActive
mxSessionID
PIPModePossible
avplaybackcoordinator_always
AVPlayer_FigPlayerProperty_Rate
AVPlayer_FigPlayerProperty_RateOptions
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke_2
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke_3
v24@?0@"NSArray"8@"NSArray"16
-[AVPlayer setExpectedAssetTypes:]
AVPlayer's expectedAssetTypes can't be after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
-[AVPlayer setExpectedAssetTypes:]_block_invoke_2
AVPlayer.m
Invalid parameter not satisfying: %@
item != nil
-[AVPlayer _applyPlayQueueChangesToFigPlayerWithCompletionHandler:]
-[AVPlayer _applyPlayQueueChangesToFigPlayerWithCompletionHandler:]_block_invoke
-[AVPlayer _removeItem:]
-[AVPlayer replaceCurrentItemWithPlayerItem:]
v24@?0@"AVPlayerItem"8^B16
-[AVPlayer _setRate:rateChangeReason:figPlayerSetRateHandler:]
-[AVPlayer _setRate:rateChangeReason:figPlayerSetRateHandler:]_block_invoke
-[AVPlayer _setRate:withVolumeRampDuration:playImmediately:rateChangeReason:affectsCoordinatedPlayback:]_block_invoke
v20@?0^{OpaqueFigPlayer=}8i16
-[AVPlayer setDefaultRate:]
-[AVPlayer setAutomaticallyWaitsToMinimizeStalling:]_block_invoke
-[AVPlayer _setUsesLegacyAutomaticWaitingBehavior:]
AVPlayer's _usesLegacyAutomaticWaitingBehavior can't be set after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
-[AVPlayer seekToDate:completionHandler:]
-[AVPlayer seekToTime:completionHandler:]
-[AVPlayer seekToTime:toleranceBefore:toleranceAfter:completionHandler:]
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: until its status is AVPlayerStatusReadyToPlay.
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: when automaticallyWaitsToMinimizeStalling is YES
AVPlayer cannot service a preroll request until its status is AVPlayerStatusReadyToPlay.
-[AVPlayer _userVolume]
AVPlayerActionAtItemEndAdvance is not allowed for a player of class %@
%d is not a valid actionAtItemEnd for a player of class %@
-[AVPlayer setShouldReduceResourceUsage:]
-[AVPlayer setResourceConservationLevelWhilePaused:]
-[AVPlayer setPlayerRole:synchronously:]
-[AVPlayer setOutputContext:]
-[AVPlayer play]
block != nil
v32@?0{?=qiIq}8
-[AVPlayer removeTimeObserver:]
An instance of AVPlayer cannot remove a time observer that was added by a different instance of AVPlayer.
You did not supply a reference to an object returned by either -addPeriodicTimeObserverForInterval:queue:usingBlock: or -addBoundaryTimeObserverForTimes:queue:usingBlock:
-[AVPlayer _closedCaptionLayers]
-[AVPlayer _videoLayers]
-[AVPlayer _evaluateDisplaySizeOfAllAttachedLayers]
-[AVPlayer _evaluateDisplaySizeOfAllAttachedLayers]_block_invoke
-[AVPlayer _copyDisplayedPixelBuffer]
-[AVPlayer _attachVideoLayersToFigPlayer]
-[AVPlayer _detachVideoLayersFromFigPlayer:]
-[AVPlayer _removeLayer:videoLayer:closedCaptionLayer:subtitleLayer:interstitialLayer:]_block_invoke_2
-[AVPlayer _addLayer:]
-[AVPlayer _addLayer:]_block_invoke
OverlappedPlaybackDidComplete
++++++++++++++++++++++++++++++++++++++++++
------------------------------------------
-[AVPlayer setAudiovisualBackgroundPlaybackPolicy:]
+[AVPlayer fireAvailableHDRModesDidChangeNotification]
+[AVPlayer fireEligibleForHDRPlaybackDidChangeNotification]
+[AVPlayer availableHDRModes]
-[AVPlayer(AVPlayerMultitaskSupport) _hasAssociatedAVPlayerLayerInPIPMode]
UIApplication
-[AVPlayer(AVPlayerMultitaskSupport) _applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock]
com.apple.iapd.notify.extendedMode
com.apple.avfoundation.tool-has-foreground-exemption
-[AVPlayer(AVPlayerMultitaskSupport) _canContinuePlaybackInBackgrounBasedOnAudiovisualBackgroundPlaybackPolicy:]
-[AVPlayer(AVPlayerMultitaskSupport) _itemOkayToPlayWhileTransitioningToBackground:]
-[AVPlayer(AVPlayerMultitaskSupport) _shouldDetachVideoLayersFromFigPlayer]
-[AVPlayer(AVPlayerMultitaskSupport) _layerForegroundStateChanged:]_block_invoke
AVPlayer background assertion
com.apple.common
FinishTaskInterruptable
-[AVPlayer(AVPlayerMultitaskSupport) _acquireBackgroundAssertion]
-[AVPlayer(AVPlayerMultitaskSupport) _didEnterBackground:]
-[AVPlayer(AVPlayerMultitaskSupport) _didEnterBackground:]_block_invoke
-[AVPlayer(AVPlayerMultitaskSupport) _didFinishSuspension:]
-[AVPlayer(AVPlayerMultitaskSupport) _detachVideoLayersForSuspension]_block_invoke_3
-[AVPlayer(AVPlayerMultitaskSupport) _detachVideoLayersForSuspension]_block_invoke
-[AVPlayer(AVPlayerMultitaskSupport) _detachVideoLayersForSuspension]_block_invoke_2
-[AVPlayer(AVPlayerMultitaskSupport) _willEnterForeground:]
MusicPlayer
-[AVPlayer(AVPlayerMultitaskSupport) _ensureVideoLayersAreAttached]_block_invoke
-[AVPlayer(AVPlayerSupportForMediaPlayer) _updateConnectionToSecondScreen]
-[AVPlayer(AVPlayerSupportForMediaPlayer) _resumePlayback:error:]
audioSession != nil
Cannot set preservesAudioSessionSampleRate after the AVPlayer has begun preparing for playback.
Not available.  Use %@ or %@ instead
-[AVPlayer(AVPlayerPIPSupport) setBackgroundPIPAuthorizationToken:]
-[AVPlayer(FigVideoTargetSupport) setShouldWaitForVideoTarget:]
-[AVPlayer(FigVideoTargetSupport) setShouldWaitForVideoTarget:]_block_invoke
-[AVPlayer(AVPlayerInterstitialSupport_Internal) _linkAndSyncAudioSessionWithInterstitialPlayer:]
-[AVPlayer(AVPlayerInterstitialSupport_Internal) _hasCurrentInterstitialEvent]
NULL
non-NULL
-[AVPlayer(AVPlayerInterstitialSupport_Internal) _copyInterstitialEventCoordinatorEnsuringItIsRemote:forceCreate:]_block_invoke
-[AVPlayer(PlaybackCoordination) _ensureFigPlaybackCoordinatorIsConnected]
-[AVPlayerRateState rateStateBySettingRate:nameForLogging:]
-[AVPlayerRateState rateStateByUpdatingBasedOnPresenceOfCurrentInterstitialEvent:nameForLogging:]
-[AVPlayerRateState rateStateByUpdatingBasedOnFigPlayer:hasCurrentItem:hasCurrentInterstitialEvent:nameForLogging:]
AVPlayerItem *AVPlayerFindItemMatchingFigPlaybackItem(NSArray *, FigPlaybackItemRef, NSArray **)
figPlaybackItemToFind != NULL
AVPlayerGetFigPlayerTypeForAsset
avplayer_fpInterstitialCoordinatorNotificationCallback
avplayer_fpInterstitialCoordinatorNotificationCallback_block_invoke
@"AVPlayerRateState"20@?0@"AVPlayerRateState"8B16
avplayer_fpNotificationCallback
avplayer_fpNotificationCallback_block_invoke
AVController_Volume
_AVPlayer_Volume
_AVPlayer_VolumeDidChangeNotification
muted
avplayer_fpNotificationCallback_block_invoke_2
outputObscuredDueToInsufficientExternalProtection
isSilencedDueToConflictWithOtherPlayback
OverlappedPlaybackID
TimeReachedDuringOverlappedPlayback
avplayer_fpNotificationCallback_block_invoke_3
avplayer_iapdNotificationCallback
avplayer_iapdNotificationCallback_block_invoke
avplayer_iapdNotificationCallback_block_invoke_2
com.apple.avfoundation.avplayer.iapd
variantQualifiers
mediaSelections
preferredMediaSelection
asset != nil
title != nil
assetURL
downloadToken
artworkData
primaryContentConfig
auxiliaryContentConfigs
optimizesAuxiliaryContentConfigs
avasynchronouskeyvalueloading_trace
Unexpected terminal status %d
-[AVUXMDisplayManager setPreferredDisplayCriteria:]_block_invoke
-[`AVUXMDisplayManager` init] unavailable
avuxm_trace
com.apple.avuxmdisplaymanager
AVSampleBufferAudioRendererWasFlushedAutomaticallyNotification
AVSampleBufferAudioRendererFlushTimeKey
AVSampleBufferAudioRendererOutputConfigurationDidChangeNotification
-[AVSampleBufferAudioRenderer _installNotificationHandlers]
-[AVSampleBufferAudioRenderer _uninstallNotificationHandlers]
-[AVSampleBufferAudioRenderer outputContext]
outputContext != nil
-[AVSampleBufferAudioRenderer setOutputContext:]
avsamplebufferaudiorenderer_trace
-[AVSampleBufferAudioRenderer init]
-[AVSampleBufferAudioRenderer dealloc]
-[AVSampleBufferAudioRenderer _transitionToStatus:error:]
-[AVSampleBufferAudioRenderer status]
-[AVSampleBufferAudioRenderer error]
-[AVSampleBufferAudioRenderer setAudioOutputDeviceUniqueID:]
audioOutputDeviceUniqueID != nil
-[AVSampleBufferAudioRenderer audioOutputDeviceUniqueID]
-[AVSampleBufferAudioRenderer setAudioTimePitchAlgorithm:]
newAudioTimePitchAlgorithm != nil
-[AVSampleBufferAudioRenderer audioTimePitchAlgorithm]
-[AVSampleBufferAudioRenderer setAudioTapProcessor:]
-[AVSampleBufferAudioRenderer audioTapProcessor]
-[AVSampleBufferAudioRenderer setAllowedAudioSpatializationFormats:]
-[AVSampleBufferAudioRenderer allowedAudioSpatializationFormats]
-[AVSampleBufferAudioRenderer setVolume:]
-[AVSampleBufferAudioRenderer volume]
-[AVSampleBufferAudioRenderer setMuted:]
-[AVSampleBufferAudioRenderer isMuted]
-[AVSampleBufferAudioRenderer timebase]
-[AVSampleBufferAudioRenderer copyFigSampleBufferAudioRenderer:]
-[AVSampleBufferAudioRenderer setRenderSynchronizer:error:]
The AudioRenderer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
-[AVSampleBufferAudioRenderer setSTSLabel:]
-[AVSampleBufferAudioRenderer enqueueSampleBuffer:]
sampleBuffer != NULL
Sample buffer has media type '%@' instead of '%@'
-[AVSampleBufferAudioRenderer flush]
completionHandler != nil
-[AVSampleBufferAudioRenderer flushFromSourceTime:completionHandler:]
-[AVSampleBufferAudioRenderer isReadyForMoreMediaData]
-[AVSampleBufferAudioRenderer requestMediaDataWhenReadyOnQueue:usingBlock:]
queue != NULL
-[AVSampleBufferAudioRenderer stopRequestingMediaData]
AVSampleBufferAudioRendererFigFactoryKey
assetwriterinputmetadataadaptor_trace
input != nil
[[input mediaType] isEqual:AVMediaTypeMetadata]
Cannot create a new metadata adaptor with an asset writer input that is already attached to a metadata adaptor
Cannot create a new metadata adaptor with an asset writer input that has already started writing
Cannot create a new metadata adaptor with an asset writer that does not carry a source format hint
%@ only knows how to produce data with media subtype '%@', so it must be initialized with an instance of AVAssetWriterInput that is expecting data in that format
<%@: %p, assetWriterInput = %@>
group != nil
CMTIME_IS_NUMERIC([group timeRange].start)
! CMTIME_IS_NEGATIVE_INFINITY([group timeRange].duration)
Cannot invoke method before the attached asset writer input has been added to an asset writer and -startWriting has been called on that asset writer
-[AVAssetWriterInputMetadataAdaptor appendTimedMetadataGroup:]
Cannot write to file timed metadata group %p%@
AVExternalProtectionMonitorExternalProtectionStateChangedNotification
formatDescriptions
video format desc 
audio format desc 
(%@) 
- codec:%.4s 
video-range:%@
, bit-depth:%@
, channels:%u
, sample-rate:%uHz
kbps
Mbps
%0.2f%@
HDR10
DolbyVision 8.4
DolbyVision 5
Unknown
average bitrate 
mediaType
estimatedDataRate
video:
audio:
%@  
unknown
streaming (HLS)
local file
progressive download (CRABS)
custom-loaded
nominalFrameRate
[ M-Ch ]
[ 2-Ch ]
[ S-Ch ]
[ ?-Ch ]
asset type:%@
session-id:%@
configurationGroup: %@
display resolution:%0.0f x %0.0f
, refresh-rate:%0.2fHz
, video-range:%@
video approximate-display-size:%0.0f x %0.0f  
video approximate-display-size:-  
natural-size:%0.0f x %0.0f
current frame rate:%0.2f
nominal frame rate:%0.2f
network bandwidth:%@
video:%@  
audio:%@
indicated bitrate 
peak:%@  
average:%@  
stalls total:%ld  current-variant:%ld
frame drops 
total:%ld  
decode:%d  
imageQ:%d
buffered video before:%0.1fs  
after:%0.1fs
Helvetica-Bold
enable
spatial
interval
color
opacity
fontsize
show_complete_uri
xoffset
yoffset
InternalBuild
main-screen-scale
com.apple.avfoundation.videoperformancehud
AVPlayerItemTimebaseChangedNotification
GaplessInfoHeuristicInfoKey
GaplessInfoEncodingDelayInFramesKey
GaplessInfoEncodingDrainInFramesKey
GaplessInfoDurationInFramesKey
GaplessInfoLastPacketsResyncKey
RampInOutInfoInDuration
RampInOutInfoOutDuration
AudibleDRMInfoGroupID
AVPlayerItemTimeJumpedNotification
AVPlayerItemTimeJumpedOriginatingParticipantKey
AVPlayerItemTimeJumpedReasonKey
AVPlayerItemDidPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeErrorKey
AVPlayerItemPlaybackStalledNotification
AVPlayerItemRecommendedTimeOffsetFromLiveDidChangeNotification
AVPlayerItemNewAccessLogEntry
AVPlayerItemNewErrorLogEntry
AVPlayerItemMediaSelectionDidChangeNotification
AVProtectedContentProviderFairPlay
AVInitializeProtectedContentPlaybackSupportStorageURLKey
AVInitializeProtectedContentPlaybackSupportVideoKey
AVInitializeProtectedContentPlaybackSupportExternalProtectionKey
AVPlayerItemBecameCurrentNotification
AVPlayerItemStoppedBeingCurrentNotification
AVPlayerItemVariantChangedNotification
AVPlayerItemSuppressesVideoLayersDidChangeNotification
AVPlayerItemHasEnqueuedVideoFrameDidChangeNotification
AVPlayerItemPreferredPixelBufferAttributesDidChangeNotification
AVPlayerItemSpatialAudioRenderingDidChangeNotification
AVPlayerItemReachedTimeToPauseBufferingNotification
AVPlayerItemReachedTimeToPausePlaybackNotification
AVPlayerItemOverlappedPlaybackWillBeginNotification
AVPlayerItemOverlappedPlaybackDidCompleteNotification
AVPlayerItemSeekDidCompleteNotification
AVPlayerItemSeekDidCancelNotification
AVPlayerItemSeekIDKey
AVPlayerItemTimeJumpedReasonUnknown
AVPlayerItemTimeJumpedReasonClientInitiated
AVPlayerItemTimeJumpedReasonJoiningCoordinatedPlayback
AVPlayerItemTimeJumpedReasonChangeInCoordinatedPlaybackTiming
AVPlayerItemTimeJumpedReasonEndOfCoordinatedPlaybackSuspension
AVPlayerItemTimeJumpedReasonRejoiningCoordinatedPlayback
AVPlayerItemTimeJumpedReasonInterstitialResumptionOffset
SessionID
PlayInfo
avplayeritem_trace
%@ does not support playback via AVPlayer
com.apple.avplayeritem.ivars
com.apple.avplayeritem.figplaybackitem
com.apple.avplayeritem.figplaybackitem.accessor
com.apple.avplayeritem.figplaybackitem.setter
com.apple.avplayeritem.seek
-[AVPlayerItem initWithAsset:automaticallyLoadedAssetKeys:]
-[AVPlayerItem dealloc]
AVPlayerItem %p deallocated while a pending seek is still in progress; leaking completion handler. Use -cancelPendingSeeks to deallocate an AVPlayerItem safely while a seek operation is still pending.
<%@: %p, %@>
asset = %@
URL = %@
with no asset and no URL
_externalProtectionRequiredForPlayback
timedMetadata
-[AVPlayerItem _configurePlaybackItem]
-[AVPlayerItem _configurePlaybackItemAndReturnError:]
-[AVPlayerItem _attachToPlayer:]
An AVPlayerItem cannot be associated with more than one instance of AVPlayer
+[AVPlayerItem _createFigPlaybackItemForFigPlayer:asset:URL:flags:options:playbackItem:]
-[AVPlayerItem _attachToFigPlayer]
-[AVPlayerItem _addToPlayQueueOfFigPlayerOfPlayer:afterFigPlaybackItemOfItem:]
AVPlayerItem.m
previousItem != nil
presentationSize
AVPlayerItemPresentationSizeDidChangeNotification
AVPlayerItemTracksDidChangeNotification
isNonForcedSubtitleDisplayEnabled
AVPlayerItemNonForcedSubtitleDisplayEnabledDidChangeNotification
asset
%@, 
See -[AVPlayerItem errorLog] for %d events
-[AVPlayerItem _changeStatusToFailedWithError:]
-[AVPlayerItem _tracks]
OverlappedPlaybackWillBegin
-[AVPlayerItem _invokeReadyForEnqueueingHandlers]
-[AVPlayerItem _makeReadyForEnqueueingWithCompletionHandler:]
-[AVPlayerItem _presentationSize]
-[AVPlayerItem _cancelPendingSeekAndRegisterSeekID:withCompletionHandler:]
-[AVPlayerItem _unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:finished:]
-[AVPlayerItem _postSeekCompletionNotificationWithSeekID:andResult:]
Invalid SeekID
seekID was not created by this player item
Seeking is not possible to time %@
toleranceBefore seekToTime must be valid
toleranceBefore seekToTime may not be negative
toleranceAfter seekToTime must be valid
toleranceAfter seekToTime may not be negative
-[AVPlayerItem _seekToTime:toleranceBefore:toleranceAfter:seekID:completionHandler:]
-[AVPlayerItem seekToDate:completionHandler:]
 (must be called from the main queue)
-[AVPlayerItem seekToDate:]
-[AVPlayerItem stepByCount:]
-[AVPlayerItem _updateTimebase]_block_invoke_2
preferredForwardBufferDuration >= 0.0
AudioCurves
-[AVPlayerItem _setAudioEffectParameters:forTrackID:]
AVVideoCompositions using AVVideoCompositionCoreAnimationTool cannot be used with AVPlayerItem. AVVideoCompositionCoreAnimationTool is for offline rendering only.
-[AVPlayerItem _setVideoCompositionInstructions:]
BytesStillNeededToEnd
DurationFromNowToEnd
CurrentMeasuredBytesPerSecond
RawMeasuredBytesPerSecond
BandwidthSlopFactor
EstimatedTimeToLikelyToKeepUp
RemoteIPAddress
Default
-[AVPlayerItem _applyMediaSelectionOptions]_block_invoke
-[AVPlayerItem _selectMediaOption:inMediaSelectionGroup:]
-[AVPlayerItem selectMediaOption:inMediaSelectionGroup:]
-[AVPlayerItem selectMediaOption:inMediaSelectionGroup:]_block_invoke
-[AVPlayerItem selectMediaOptionAutomaticallyInMediaSelectionGroup:]
-[AVPlayerItem _currentMediaSelectionFromFigSelectedMediaArray:]
-[AVPlayerItem _setCurrentMediaSelection:]
-[AVPlayerItem currentMediaSelection]
^{OpaqueFigPlayerInterstitialCoordinator=}8@?0
-[AVPlayerItem _updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:]
canPlaySlowForward
canPlayFastForward
canPlayReverse
canPlaySlowReverse
canPlayFastReverse
canStepForward
canStepBackward
-[AVPlayerItem _updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:]_block_invoke
-[AVPlayerItem _updateItemIdentifierForCoordinatedPlayback]_block_invoke
AVPlayerItem does not support the specified protected content provider
AVPlayerItem could not uninitialize the specified protected content support session
AVPlayerItem._externalProtectionRequiredForPlayback can only be set to YES
Cannot get rental expiration date information from an AVPlayerItem that does not contain rental content
Cannot get rental playback date information from an AVPlayerItem that does not contain rental content or when rental playback has not started
playerReference != nil
playerItemReference != nil
<%@: %p, player = %@, playerItem = %@>
Player connections are one-shot objects.  Cannot connect a player connection that was already disconnected.  To re-connect an AVPlayerItem to an AVPlayer, create a new player AVPlayerConnection object
Cannot connect a player connection that is already connected
-[AVPlayerConnection addItemToPlayQueueAfterPlaybackItemOfItem:]
Cannot disconnect a player connection that was already disconnected
-[AVPlayerItem(AVPlayerItemOutputs) _evaluateMetadataOutputs]_block_invoke
Cannot attach AVPlayerItemSampleBufferOutput to AVPlayerItem
Cannot attach an output that is already attached or nil output
Cannot attach a collector that is already attached
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSObject)]
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSCopying)]
None
Adaptive
LivePhoto
DigitalZoom
-[AVPlayerItem(AVPlayerItemVideoEnhancement) setVideoEnhancementMode:]
cmTimebaseNotificationCallback_TimeJumped
basics
avplayeritem_fpItemNotificationCallback_block_invoke
hasEnabledAudio
hasEnabledVideo
hasVideo
nonForcedSubtitleDisplayEnabled
avplayeritem_fpItemNotificationCallback_block_invoke_7
playback
inspection
playbackLikelyToKeepUp
avplayeritem_fpItemNotificationCallback_block_invoke_2
playbackBufferEmpty
playbackBufferFull
seekableTimeRanges
seekableTimeRangesLastModifiedTime
loadedTimeRanges
avplayeritem_fpItemNotificationCallback_block_invoke_3
AVPlayerItemWasRemovedFromPlayQueueNotification
avplayeritem_fpItemNotificationCallback_block_invoke_4
not spatial
avplayeritemtrack_trace
com.apple.avplayeritemtrack.ivars
<%@: %p, assetTrack = %@>
-[AVPlayerItemTrack currentVideoFrameRate]
<rdar://100445728> CurrentVideoFrameRate type is not CFNumberRef, value = {%@}
<rdar://100445728> failed to get content of CurrentVideoFrameRate
VideoEnhancementFilterOptions
DisableColorMatching
ActiveHapticChannelIndex
Volume
Cannot add any AVPlayerItemOutput other than AVPlayerItemSampleBufferOutput to AVPlayerItemTrack
-[AVPlayerItemTrack(AVPlayerItemOutputs) addOutput:]
Cannot remove any AVPlayerItemOutput other than AVPlayerItemSampleBufferOutput from AVPlayerItemTrack
-[AVPlayerItemTrack(AVPlayerItemOutputs) removeOutput:]
avqueueplayer_trace
-[AVQueuePlayer insertItem:afterItem:]
-[AVQueuePlayer removeItem:]
-[AVQueuePlayer removeAllItems]
-[AVQueuePlayer(AVPlayerAdvanceWithOverlap) canOverlapPlaybackFromPlayerItem:toPlayerItem:]
-[AVSpecifiedLoggingIdentifier initWithSpecifiedName:]
Identifier name must be 6 chars or less
Identifier name must not contain more than one period
Identifier name must not contain non-numeric character after period
avloggingidentifier_trace
%@.%02d
I/%@
-[AVAssetLoggingIdentifier init]
P/%@
-[AVPlayerLoggingIdentifier init]
composition_trace
-[AVComposition _initWithComposition:]
<%@: %p tracks = %@>
-[AVComposition mutableCopyWithZone:]
Cannot honor specified AVURLAsset initialization options for AVMutableComposition <%p>%@
-[AVMutableComposition insertTimeRange:ofAsset:atTime:error:]
-[AVMutableComposition insertEmptyTimeRange:]
-[AVMutableComposition removeTimeRange:]
-[AVMutableComposition scaleTimeRange:toDuration:]
-[AVMutableComposition addMutableTrackWithMediaType:preferredTrackID:]
-[AVMutableComposition removeTrack:]
-[AVMutableComposition mutableTrackCompatibleWithTrack:]
URLAssetInitializationOptions
compositionMetadataArray
trackID
naturalTimeScale
extendedLanguageTag
preferredTransform
preferredVolume
alternateGroupID
formatDescriptionReplacements
originalFormatDescription
replacementFormatDescription
trackMetadataArray
%c%c%c
root
avplayeritemmetadataoutput_trace
[identifiers count] > 0
com.apple.avplayeritemmetadataoutput.ivars
com.apple.avplayeritemmetadataoutput.accumulationqueue
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _signalFlush]_block_invoke
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _signalFlush]_block_invoke_2
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _pushTimedMetadataGroups:fromPlayerItemTrack:]_block_invoke_3
<%@: %p trackID = %d, mediaType = %@, editCount = %d>
-[AVMutableCompositionTrack setSegments:]
-[AVMutableCompositionTrack insertTimeRange:ofTrack:atTime:error:]
kFigBaseObjectError_ParamErr
Invalid asset track
AVCompositionTrack.m
Count of timeRanges array and count of tracks array do not match.
-[AVMutableCompositionTrack insertTimeRanges:ofTracks:atTime:error:]
-[AVMutableCompositionTrack insertEmptyTimeRange:]
-[AVMutableCompositionTrack removeTimeRange:]
-[AVMutableCompositionTrack scaleTimeRange:toDuration:]
-[AVMutableCompositionTrack validateTrackSegments:error:]
originalFormatDescription != NULL
Media type of the new format description must match that of the existing format description
-[AVNotificationSubscription initWithObject:notificationName:callbackBlock:]
-[AVNotificationSubscription initWithObject:notificationName:callbackBlock:]_block_invoke
-[AVNotificationSubscription cancel]
<%@: %p object=%@>
avpubsub_trace
-[AVPropertyValuePublisher subscribeRequestingInitialValue:block:]_block_invoke
-[AVPropertyValuePublisher subscribeRequestingInitialValue:block:]
<%@: %p key=%@, object=%@, notification=%@>
-[AVMapPublisher subscribeRequestingInitialValue:block:]_block_invoke
<%@: %p upstream=%@>
-[AVSwitchToLatestPublisher subscribeRequestingInitialValue:block:]_block_invoke_2
-[AVSwitchToLatestPublisher subscribeRequestingInitialValue:block:]_block_invoke
v16@?0@"AVPublisher"8
<%@: %p upstream=%@
-[AVSinkSubscriber cancel]
<%@: %p publisher=%@>
MediaUIStyle
MediaUIFullWidth
MediaUIFormatTemplate
arab
-[AVTimeFormatter stringFromTimeInterval:]: unsupported style
%@+%@
-[AVTimeFormatter setStyle:]: unsupported style
AVCrackTime
AVTimeFormatter.m
time >= 0.0
<%@: %p timeRange [%.3f,+%.3f] 
is empty
from trackID %d of asset %@ sourceTimeRange [%.3f,+%.3f]
sourceURL
sourceTrackID
-[AVMutableMovieTrack setPreferredTransform:]
-[AVMutableMovieTrack setLayer:]
-[AVMutableMovieTrack setAlternateGroupID:]
trackGroups
<%@: %p, trackID = %d, mediaType = %@, sampleReferenceBaseURL = %@>
formatDescription != NULL
newFormatDescription != NULL
Source asset must have a value of YES for providesPreciseDurationAndTiming
Media type of sample buffer must match receiver's media type ("%@")
CMSampleBuffers containing image buffers are not supported; you must provide CMSampleBuffers containing encoded video
CMSampleBuffers containing caption groups are not supported; you must provide CMSampleBuffers containing encoded media data
data != nil
the tracks being associated must belong to the same movie
the tracks being dissociated must belong to the same movie
%@ status read/write queue
Cannot initialize an instance of %@ with an asset at non-local URL '%@'
formatReader
<%@: %p, asset = %@, outputs = %@>
cannot be called after reading has started
cannot add an output that has already been added to the receiver
cannot add an output after reading has started
cannot add an output that has already been added to another AVAssetReader
output != nil
finished
v24@?0@"AVAssetReader"8@"NSDictionary"16
cannot be called again after reading has already started
assetreaderoutput_trace
AVAssetReaderOutput.m
The receiver cannot already be attached to an AVAssetReader.
cannot copy next sample buffer before adding this output to an instance of AVAssetReader (using -addOutput:) and calling -startReading on that asset reader
-[AVAssetReaderOutput copyNextSampleBuffer]
timeRanges != nil
Each entry in timeRanges must be an instance of %@
Start time of each time range must be numeric - see CMTIME_IS_NUMERIC
Duration of each time range must be nonnegative & numeric or positive infinity - see CMTIME_IS_NUMERIC
Start time of each time range must be greater than or equal to the end time of the previous time range
cannot be called before reading has started
cannot be called after the asset reader has entered a failure state
cannot be called until all samples have been read (i.e. %@ returns NULL)
cannot be called without setting %@ to YES
cannot be called after calling %@
track != nil
%@ does not currently support AVVideoCleanApertureKey or AVVideoPixelAspectRatioKey
%@ does not currently support AVVideoScalingModeKey
Output settings are not compatible with media type %@
AVAssetReaderOutput does not currently support compressed output
AVAssetReaderOutput does not support AVSampleRateConverterAudioQualityKey
<%@: %p, track = %@, outputSettings = %@>
audioTimePitchAlgorithm must be one of: %@
cannot copy sample buffers when attached to an adaptor
audioTracks != nil
[audioTracks count] >= 1
tracks must all have media type AVMediaTypeAudio
tracks must all be part of the same AVAsset
<%@: %p, audioTracks = %@, audioSettings = %@>
track must be one of the tracks used to create the receiver
videoTracks != nil
[videoTracks count] >= 1
tracks must all have media type AVMediaTypeVideo
%@ does not currently support AVVideoDecompressionPropertiesKey
<%@: %p, videoTracks = %@>
AVAssetReaderVideoCompositionOutput can't use a video composition with a renderScale other than 1.0
*** AVAssetReaderVideoCompositionOutput.videoComposition needs to be set
<%@: %p, track = %@>
figAssetReaderSampleBufferDidBecomeAvailable
figAssetReaderDecodeError
figAssetReaderFailed
assetwriter_trace
outputURL != nil
[outputURL isFileURL]
outputFileType != nil
outputContentType != nil
%@ helper read/write queue
<%@: %p, outputURL = %@, outputFileType = %@>
helper
CMTIME_COMPARE_INLINE(interval, >=, kCMTimeZero)
(CMTIME_IS_NUMERIC(hint) && CMTIME_COMPARE_INLINE(hint, >=, kCMTimeZero)) || CMTIME_IS_INVALID(hint)
movieTimeScale >= 0
0 < sequenceNumber
fileSize > 0
mediaDataSize > 0
-[AVAssetWriter addInput:]
inputGroup != nil
-[AVAssetWriter addInputGroup:]
-[AVAssetWriter startWriting]
CMTIME_IS_NUMERIC(startTime)
-[AVAssetWriter startSessionAtSourceTime:]
CMTIME_IS_NUMERIC(endTime)
-[AVAssetWriter endSessionAtSourceTime:]
-[AVAssetWriter cancelWriting]
-[AVAssetWriter finishWriting]
-[AVAssetWriter finishWritingWithCompletionHandler:]
-[AVAssetWriter flush]
-[AVAssetWriter flushSegment]
-flushSegment can be called only if the delegate method to output segment data is implemented.
-flushSegment can be called only if the value of the preferredOutputSegmentInterval property is kCMTimeIndefinite.
[configurationState mediaFileType] != nil
[configurationState inputs] != nil
[configurationState inputGroups] != nil
[configurationState metadataItems] != nil
Cannot use the virtual capture card
The output file type %@ does not support mutually exclusive relationships among tracks.
At least one AVAssetWriterInput in the given inputGroup is also present in an inputGroup already added.
At least one provisional AVAssetWriterInput in the given inputGroup is also present as a provisional input in an inputGroup already added.
figFragmentedMediaDataReportDict != nil
-[AVAssetWriterWritingHelper initWithConfigurationState:assetWriter:error:]
com.apple.avfoundation.avassetwriter.writing.assetwriteraccessqueue
The outputURL and the delegate method to output segment data cannot be specified at same time. Only one of them must be specified.
The outputURL and the delegate method to produce fragmented data cannot be specified at same time. Only one of them must be specified.
The delegate method to output segment data and the delegate method to produce fragmented data cannot be specified at same time. Only one of them must be specified.
Neither the outputURL nor the delegate method to output segment data is specified. One of them must be specified.
The value of the outputFileTypeProfile property must be file type profile AppleHLS or CMAFCompliant to output segment data.
The value of the outputFileType must be AVFileTypeMPEG4 for file type profile %@.
The value of the preferredOutputSegmentInterval property must be kCMTimeIndefinite or a positive numeric time to output segment data.
The value of the initialSegmentStartTime property must be a numeric time to output segment data.
AVAssetWriter supports file type profile %@ if the delegate method to output segment data is implemented. Please use -initWithContentType: initializer and implement -assetWriter:didOutputSegmentData:segmentType:segmentReport: or -assetWriter:didOutputSegmentData:segmentType: delegate method.
The preferredOutputSegmentInterval property is used if the delegate method to output segment data is implemented. Please use -initWithContentType: initializer and implemen -assetWriter:didOutputSegmentData:segmentType:segmentReport: or -assetWriter:didOutputSegmentData:segmentType: delegate method.
Media type '%@' is not allowed for file type profile %@.
More than one track is not allowed for file type profile %@.
Closed caption track is not allowed for file type profile %@.
Metadata track is not allowed for file type profile %@.
More than one video track is not allowed for file type profile %@.
More than one audio track is not allowed for file type profile %@.
More than one closed caption track is not allowed for file type profile %@.
More than one metadata track is not allowed for file type profile %@.
Closed caption track must accompany video track for file type profile %@.
Metadata track must accompany video track or audio track for file type profile %@.
AVAssetWriter does not support encoding of video track and passthrough of audio track at same time for file type profile %@. Please match both AVAssetWriterInput's output settings.
AVAssetWriter does not support encoding of audio track and passthrough of video track at same time for file type profile %@. Please match both AVAssetWriterInput's output settings.
If the value of the preferredOutputSegmentInterval property is a positive numeric time, AVAssetWriter does not support passthrough of video track and audio track at same time for file type profile %@. Please specify a non-nil output settings dictionary for both AVAssetWriterInput. Otherwise, please add one of them.
If the value of the preferredOutputSegmentInterval property is kCMTimeIndefinite, AVAssetWriter only supports pssthrough for file type profile %@. Please specify nil for all AVAssetWriterInput's output settings.
Cannot end a session without first starting a session
-[AVAssetWriterWritingHelper cancelWriting]
WARNING: -finishWriting should not be called on the main thread.
-[AVAssetWriterWritingHelper finishWriting]_block_invoke
q16@?0^@8
com.apple.avfoundation.assetwriter.finishwriting
-[AVAssetWriterWritingHelper finishWritingWithCompletionHandler:]_block_invoke
Finish writing file at %@, initiated by %@
Prepare for finishing input %@
assetWriter != nil
figAssetWriter != NULL
Call finish-writing delegate
+[AVAssetWriterWritingHelper finalStepWorkaroundOperationWithFigAssetWriter:]_block_invoke
Invalidate FigAssetWriter, to ensure that audio files are finalized properly
-[AVAssetWriterFinishWritingHelper initWithConfigurationState:finishWritingOperations:figAssetWriterCallbackContextToken:]_block_invoke
Transition to terminal status
-[AVAssetWriterFinishWritingHelper _finishWritingOperationsDidFinish]
Not available.  Use %@ instead.
-[AVFigAssetWriterFinishWritingAsyncOperation start]
-[AVFigAssetWriterFinishWritingAsyncOperation cancel]
-[AVFigAssetWriterFinishWritingAsyncOperation didEnterTerminalState]
-[AVFigAssetWriterFinishWritingAsyncOperation didReceiveFigAssetWriterNotificationWithSuccess:error:]
terminalError != nil
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled)
configurationState != nil
Cannot call method when status is %d
media type %@ is not allowed for this asset writer
In order to perform passthrough to file type %@, please provide a format hint in the AVAssetWriterInput initializer
AVAssetWriter does not support passthrough for media type %@ to file type %@.
  Please specify a non-nil output settings dictionary.
AVAssetWriter does not support passthrough of media with type '%@' and subtype '%@' to file type %@
AVAssetWriter currently does not support writing uncompressed video in a specific format.
Output settings must match supplied media type.  Media type %@ is not compatible with output settings %@.
output file type %@ does not support track associations
inputs != nil
[inputs count] > 0
defaultInput == nil || [inputs containsObject:defaultInput]
metadata
trackReferences
options
! [[NSSet setWithArray:inputs] intersectsSet:[NSSet setWithArray:provisionalInputs]]
[inputs count] > 0 || [provisionalInputs count] > 0
displaysNonForcedSubtitles
AVAssetWriterFigAssetWriterHandleCompletedNotification
AVAssetWriterFigAssetWriterHandleFailedNotification
AVAssetWriterInputGroupOptionsChangedContext
UnsafeUnretainedPointerData
AVCoordinatedPlaybackSuspensionReasonAudioSessionInterrupted
AVCoordinatedPlaybackSuspensionReasonStallRecovery
AVCoordinatedPlaybackSuspensionReasonPlayingInterstitial
AVCoordinatedPlaybackSuspensionReasonCoordinatedPlaybackNotPossible
AVCoordinatedPlaybackSuspensionReasonUserActionRequired
AVCoordinatedPlaybackSuspensionReasonUserIsChangingCurrentTime
AVPlaybackCoordinatorOtherParticipantsDidChangeNotification
AVPlaybackCoordinatorSuspensionReasonsDidChangeNotification
Identifier
OriginatorUUID
Time
NetworkTime
Rate
PrerollRate
SeekPrecision
LamportTimestamp
IsAuthoritative
UUID
ProtocolVersion
SuspensionReasons
CoordinatingStart
ReadyToSetNonZeroRate
CurrentIdentifier
NextIdentifier
ExpectedEndTime
Cannot initialize AVCoordinatedPlaybackSuspension with nil reason.
-[AVCoordinatedPlaybackSuspension initWithCoordinator:reason:]
avplaybackcoordinator_trace
-[AVPlaybackCoordinator init] unavailable
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectNotification
AVPlaybackCoordinatorItemIdentifierForCoordinatedPlaybackDidChangeNotification
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyParticipantUUID
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyCommand
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyRate
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyTime
AVPlaybackCoordinatorPlaybackObjectCommandSetRate
AVPlaybackCoordinatorPlaybackObjectCommandSetTime
AVPlaybackCoordinatorPlaybackObjectCommandSetRateAndTime
com.apple.avplaybackcoordinator.ivars
com.apple.avplaybackcoordinator.figplaybackcoordinator.config
-[AVPlayerPlaybackCoordinator _addFigPlaybackCoordinatorListeners:]_block_invoke
figPlaybackCoordinator != NULL
FigPlaybackCoordinator associated with an AVPlayer should not change
-[AVPlayerPlaybackCoordinator setFigPlaybackCoordinator:]_block_invoke
-[AVPlayerPlaybackCoordinator setDelegate:]
-[AVPlayerPlaybackCoordinator _setIsInExpanseMediaPlaybackOnAVAudioSession]
true
false
B32@?0@"AVCoordinatedPlaybackParticipant"8Q16^B24
-[AVPlayerPlaybackCoordinator participantForIdentifier:]_block_invoke
-[AVPlayerPlaybackCoordinator setCoordinationMediumDelegate:]
-[AVPlayerPlaybackCoordinator _updateTransportControlStateDictionaryWithTransportControlState:]_block_invoke
B32@?0@"NSDictionary"8Q16^B24
-[AVPlayerPlaybackCoordinator handleNewTransportControlStateDictionary:]_block_invoke
-[AVPlayerPlaybackCoordinator handleNewTransportControlStateDictionary:]
-[AVPlayerPlaybackCoordinator handleNewParticipantStateDictionary:]_block_invoke
-[AVPlayerPlaybackCoordinator handleNewParticipantStateDictionary:]
-[AVPlayerPlaybackCoordinator handleReplacementParticipantStateDictionaries:]_block_invoke
-[AVPlayerPlaybackCoordinator handleReplacementParticipantStateDictionaries:]
-[AVPlayerPlaybackCoordinator beginSuspensionForReason:]
-[AVPlayerPlaybackCoordinator _endSuspension:]
-[AVPlayerPlaybackCoordinator _endSuspension:proposingNewTime:]
-[AVPlayerPlaybackCoordinator _setWaitingPolicies:onFigPlaybackCoordinator:]
-[AVPlayerPlaybackCoordinator setPauseSnapsToMediaTimeOfOriginator:]_block_invoke
AVPlayerPlaybackCoordinatorBroadcastTransportControlStateCallback
AVPlayerPlaybackCoordinatorBroadcastParticipantStateCallback
AVPlayerPlaybackCoordinatorAsynchronouslyReloadTransportControlStateCallback
AVOutputDeviceAuthorizationRequestRetryReasonIncorrectAuthorizationToken
AVOutputDeviceAuthorizationTokenTypePassword
AVOutputDeviceAuthorizationTokenTypePIN
outputdeviceauthorizationsession_trace
-[AVOutputDeviceAuthorizationSession initWithOutputDeviceAuthorizationSessionImpl:]
com.apple.avfoundation.outputdeviceauthorizationsession.ivars
-[AVOutputDeviceAuthorizationSession setDelegate:]
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:]
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:]
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImplDidExpireWithReplacementImpl:]
com.apple.avfoundation.output-device-auth-session.ivars
<%@: %p, ID=%@, outputDevice=%@, tokenType=%@>
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]_block_invoke
v24@?0q8@"NSError"16
-[AVOutputDeviceAuthorizationRequest cancel]
AVAssetWriterInputMediaDataLocationInterleavedWithMainMediaData
AVAssetWriterInputMediaDataLocationBeforeMainMediaDataNotInterleaved
AVAssetWriterInputMediaDataLocationSparselyInterleavedWithMainMediaData
assetwriterinput_trace
mediaType != nil
The media type of sourceFormatHint must match mediaType
Width and height of video format hint must be positive
Output settings must match supplied media type
AVAssetWriterInput does not currently support AVVideoScalingModeFit
AVAssetWriterInput does not support AVSampleRateConverterAudioQualityKey
AVAssetWriterInput does not support AVVideoDecompressionPropertiesKey
<%@: %p> helper queue
<%@: %p> "number of append failures" read/write queue
currentPassDescription
<%@: %p, mediaType = %@, outputSettings = %@>
-[AVAssetWriterInput _setHelper:]_block_invoke
mediaTimeScale >= 0
naturalSize.width >= 0.0 && naturalSize.height >= 0.0
Cannot set marksOutputTrackAsEnabled of the receiver in an input group
media chunk duration must be numeric.  See CMTIME_IS_NUMERIC
media chunk duration must be a positive value
AVAssetWriterInput.m
preferredMediaChunkAlignment >= 0
preferredMediaChunkSize >= 0
-[AVAssetWriterInput _prepareToFinishWritingReturningError:]
canPerformMultiplePasses
readyForMoreMediaData
pixelBufferPool
-[AVAssetWriterInput respondToEachPassDescriptionOnQueue:usingBlock:]
cannot be called more than once.
-[AVAssetWriterInput requestMediaDataWhenReadyOnQueue:usingBlock:]
-[AVAssetWriterInput appendSampleBuffer:]
Cannot append sample buffer: %@
-[AVAssetWriterInput markAsFinished]
-[AVAssetWriterInput markCurrentPassAsFinished]
trackAssociationType != nil
[configurationState trackReferences] != nil
Cannot set a non-default media time scale on an asset writer input with media type AVMediaTypeAudio
languageCode %@ does not conform to the ISO 639-2/T language code
extendedLanguageTag %@ does not conform to the IETF BCP 47 (RFC 4646) language identifier
performsMultiPassEncodingIfSupported
Associations of type AVTrackAssociationTypeForcedSubtitlesOnly are supported only between tracks with media type AVMediaTypeSubtitle or AVMediaTypeText.
Associations of type AVTrackAssociationTypeSelectionFollower are supported only between AVMediaTypeAudio and AVMediaTypeSubtitle tracks.
Associations of type AVTrackAssociationTypeChapterList are supported only between (AVMediaTypeVideo/AVMediaTypeAudio) and (AVMediaTypeVideo/AVMediaTypeMetadata/AVMediaTypeText) tracks.
Associations of type AVTrackAssociationTypeMetadataReferent are supported only between tracks of mediaType AVMediaTypeMetadata and other tracks.
trackAssociationType %@ must be 4 characters long.
cannot be called before attaching to an instance of AVAssetWriter and calling -startWriting on this attached asset writer
assetWriterTrack != nil
AVAssetWriterInputWritingHelperMediaDataRequester
AVAssetWriterInputWritingHelperReadyForMoreMediaDataObserver
assetWriterTrack
aboveHighWaterLevel
-[AVAssetWriterInputWritingHelper observeValueForKeyPath:ofObject:change:context:]
-[AVAssetWriterInputWritingHelper appendSampleBuffer:error:]
readyForMoreMediaData is NO.
-[AVAssetWriterInputWritingHelper appendPixelBuffer:withPresentationTime:]
A pixel buffer cannot be appended when readyForMoreMediaData is NO.
-[AVAssetWriterInputWritingHelper transitionToAndReturnTerminalHelperWithTerminalStatus:]
A pixel buffer pool cannot be created with the receiver's sourcePixelBufferAttributes. The pixel buffer attributes must specify a width, height, and either a pixel format or a pixel format description.
writingHelper != nil
-[AVAssetWriterInputInterPassAnalysisHelper startPassAnalysis]_block_invoke
v28@?0B8@"AVAssetWriterInputPassDescription"12@"NSError"20
cannot be called between the invocation of %@ and the beginning of the next pass
not allowed between the invocation of %@ and the beginning of the next pass
Cannot call %@ more than once for the same pass
cannot be called when no media data is being requested.  Check the value of %@.
not allowed when no media data is being requested.  Check the value of %@.
cannot be called after the final pass
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled) || (terminalStatus == AVAssetWriterStatusFailed)
cannot be called after canceling or finishing writing
-[AVAssetWriterInputTerminalHelper appendSampleBuffer:error:]
-[AVAssetWriterInputTerminalHelper appendPixelBuffer:withPresentationTime:]
<%@: %p, status=%d>
[[input mediaType] isEqualToString:AVMediaTypeVideo] || [[input mediaType] isEqualToString:AVMediaTypeAuxiliaryPicture]
Cannot create a new pixel buffer adaptor with an asset writer input that is already attached to a pixel buffer adaptor
Cannot create a new pixel buffer adaptor with an asset writer input that has already started writing
<%@: %p, assetWriterInput = %@, sourcePixelBufferAttributes = %@>
assetWriterInput
pixelBuffer != NULL
CMTIME_IS_NUMERIC(presentationTime)
mediaFileType != nil
<%@: %p> water level queue
com.apple.avfoundation.assetwriterinput
-[AVFigAssetWriterTrack _refreshAboveHighWaterLevel]_block_invoke
Input buffer must be in an uncompressed format when outputSettings is not nil
First input buffer must have an appropriate kCMSampleBufferAttachmentKey_TrimDurationAtStart since the codec has encoder delay
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) first
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) before appending pixel buffers
-[AVFigAssetWriterTrack endPassWithCompletionHandler:]
com.apple.avfoundation.assetwriterinput.endpass
-[AVFigAssetWriterTrack setFormatDescriptions:]
com.apple.avfoundation.mediadatarequester.ivars
-[AVAssetWriterInputMediaDataRequester requestMediaDataIfNecessary]
AVAssetWriterInputPassDescriptionResponder serialization queue
-[AVAssetWriterInputPassDescriptionResponder respondToNewPassDescription:]
-[AVAssetWriterInputPassDescriptionResponder respondToNewPassDescription:]_block_invoke
trackID != kCMPersistentTrackID_Invalid
-[AVAssetWriterInputFigAssetWriterEndPassOperation dealloc]
-[AVAssetWriterInputFigAssetWriterEndPassOperation start]
-[AVAssetWriterInputFigAssetWriterEndPassOperation _notifyWhetherMorePassesAreNeeded:timeRanges:forTrackWithID:]
<%@: %p, sourceTimeRanges=%@>
AVAssetWriterInputCurrentPassDescriptionChangeContext
AVAssetWriterInputWritingHelperNudgeMediaDataRequesterObservationContext
AVAssetWriterInputFigAssetWriterEndPassOperationPassFinished
VideoCompositor_DeviceSpecific
VideoCompositor_Basic
VideoCompositor_OpenGL
StartTime
EndTime
BackgroundColorARGB
BackgroundColorICCProfile
LayerStack
ContainsTweening
InstructionIdentifier
RequiredSampleDataTrackIDArray
SourceVideoTrackID
ConstantOpacity
TweenedOpacity
ConstantAffineMatrix
TweenedAffineMatrix
EnablePostProcessing
RequiredVideoTrackIDArray
PassthroughSourceVideoTrackID
AVVideoCompositionInstruction
TweenedCropRectangle
-[AVVideoCompositionInstruction dictionaryRepresentation]
AVVideoCompositionInstruction %@
AVVideoCompositionLayerTrackID
AVVideoCompositionLayerTransformRamps
AVVideoCompositionLayerOpacityRamps
AVVideoCompositionLayerCropRectangleRamps
The timeRange of a transform ramp must not overlap the timeRange of an existing transform ramp.
StartTransform
EndTransform
The time of a transform setting must be numeric.
The timeRange of a transform ramp must have a numeric start time and a numeric duration.
The timeRange of an opacity ramp must not overlap the timeRange of an existing opacity ramp.
The time of an opacity setting must be numeric.
The timeRange of an opacity ramp must have a numeric start time and a numeric duration.
The timeRange of a crop rectangle ramp must not overlap the timeRange of an existing crop rectangle ramp.
StartCropRectangle
EndCropRectangle
The time of a crop rectangle setting must be numeric.
The timeRange of a crop rectangle ramp must have a numeric start time and a numeric duration.
ConstantCropRectangle
avvideocomposition_trace
-[AVVideoComposition init]
-[AVVideoComposition _copyFigVideoCompositor:andSession:recyclingSession:forFigRemaker:error:]
video composition must have a positive renderSize
video composition must have a positive renderScale
video composition must have a positive frameDuration
video composition must have a positive sourceTrackIDForFrameTiming
customVideoCompositorClass
renderSize
renderScale
frameDuration
sourceTrackIDForFrameTiming
instructions
handler
applier != nil
v24@?0@"AVMutableVideoComposition"8@"NSError"16
AVAssetExportPresetLowQuality
AVAssetExportPresetMediumQuality
AVAssetExportPresetHighestQuality
AVAssetExportPreset640x480
AVAssetExportPreset1280x720
AVAssetExportPreset960x540
AVAssetExportPreset1920x1080
AVAssetExportPreset3840x2160
AVAssetExportPresetHEVCHighestQuality
AVAssetExportPresetHEVCHighestQualityWithAlpha
AVAssetExportPresetHEVC1920x1080
AVAssetExportPresetHEVC1920x1080WithAlpha
AVAssetExportPresetHEVC3840x2160
AVAssetExportPresetHEVC3840x2160WithAlpha
AVAssetExportPresetHEVC7680x4320
AVAssetExportPresetAppleM4A
AVAssetExportPresetVoiceMemoALAC
AVAssetExportPresetAppleProRes422LPCM
AVAssetExportPresetAppleProRes4444LPCM
AVAssetExportPresetPassthrough
AVAssetExportPresetPhotoStream
AVAssetExportPresetPhotoStreamHD
AVAssetExportPresetICPL480x480
AVAssetExportPresetICPL
AVAssetExportPresetICPL960x960
AVAssetExportPresetICPLHD
AVAssetExportPresetICPLHEVC1920x1080
AVAssetExportPresetICPLHEVC960x960WithHDR
AVAssetExportPresetICPLHEVC1280x1280WithHDR
AVAssetExportPresetICPLHEVC1440x1440WithHDR
AVAssetExportPresetICPLHEVC1920x1920WithHDR
AVAssetExportPresetICPLAux
AVAssetExportPresetICPLAuxHD
AVAssetExportPresetAuxSmall
AVAssetExportPresetMMS
AVAssetExportPreset3GPRelease6MMS
AVAssetExportPresetAudioOnlyMMS
AVAssetExportPresetYouTube
AVAssetExportPresetMail
AVAssetExportPresetHEVCAnimojiWithAlpha
AVAssetExportPresetAVCAnimoji
AVAssetExportPresetYouTubeHD
AVAssetExportPresetMessage
AVAssetExportPresetMessageHEVCWithHDR
AVAssetExportPresetMessageAudio
AVAssetExportPresetMessageAux
handler cannot be nil
completionHandler is nil
avexport_trace
-[AVAssetExportSession initWithAsset:presetName:]
<%@: %p, asset = %@, presetName = %@, outputFileType = %@
Cannot alter output file type attribute on an AVAssetExportSession after an export has started.
Cannot set outputFileType to nil
Invalid output file type
Cannot alter output URL attribute on an AVAssetExportSession after an export has started.
Cannot set outputURL to nil
Cannot call exportAsynchronouslyWithCompletionHandler: more than once.
outputURL cannot be nil
Cannot set both audioMix and audioOutputGroupHandling.
outputFileType cannot be nil
Cannot alter time range attribute on an AVAssetExportSession after an export has started.
Cannot alter min frame duration attribute on an AVAssetExportSession after an export has started.
Cannot set non-numeric min video frame duration.
Min video frame duration must be greater than zero.
Cannot alter max frame duration attribute on an AVAssetExportSession after an export has started.
Invalid frame rate conversion algorithm.
Cannot alter preserve sync frame attribute on an AVAssetExportSession after an export has started.
timeRange
Cannot alter metadata attribute on an AVAssetExportSession after an export has started.
Cannot alter metadataItemFilter attribute on an AVAssetExportSession after an export has started.
Cannot alter output file length limit attribute on an AVAssetExportSession after an export has started.
-[AVAssetExportSession setFileLengthLimit:]
-[AVAssetExportSession setMaximizePowerEfficiency:]
Cannot alter audio time pitch algorithm attribute on an AVAssetExportSession after an export has started.
Cannot alter audio mix attribute on an AVAssetExportSession after an export has started.
Cannot alter output audioTrackGroupHandling attribute on an AVAssetExportSession after an export has started.
Cannot alter video composition attribute on an AVAssetExportSession after an export has started.
video composition must have composition instructions
renderScale must be 1.0 when used with AVAssetExportSession.
Cannot alter optimize for network use attribute on an AVAssetExportSession after an export has started.
Cannot alter canPerformMultiplePassesOverSourceMediaData attribute on an AVAssetExportSession after an export has started.
Cannot alter directoryForTemporaryFiles attribute on an AVAssetExportSession after an export has started.
AVContentKeyRequestProtocolVersionsKey
avstreamdataparser_trace
-[AVStreamDataParser init]
com.apple.AVStreamDataParser._threadSafetyQ
-[AVStreamDataParser dealloc]
must only set allowableMIMETypes before any stream data is appended
Ignoring appendStreamData:withFlags: because we're failed or expired, create a new AVStreamDataParser to try again
-[AVStreamDataParser _appendStreamData:withFlags:]
Ignoring providePendingMediaData because we're failed or expired, create a new AVStreamDataParser to try again
-[AVStreamDataParser providePendingMediaData]
trackID must be valid
-[AVStreamDataParser setShouldProvideMediaData:forTrackID:]
-[AVStreamDataParser _createAssetIfNecessary]
figManifold
sbuf
flags
avc3
avc1
hev1
hvc1
dvhe
dvh1
+[AVStreamDataParser(AVStreamDataParser_FigManifold) _createBlockBufferUsingNSData:withOffset:withLength:]
data
contiguousBlock
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _figManifold:pushedSampleBuffer:trackID:flags:]
Aborting parsing due to unsupported interleaving, cache size %d bytes exceeding %d
Aborting parsing due to unsupported interleaving, cache duration %.3f seconds exceeding %.3f
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _figManifold:trackDidEnd:]
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _figManifold:formatDescription:orDecryptorDidChange:forTrackID:]
(OSStatus)error.code
could not create trackDecryptor
AVStreamDataParser.m
formatDescription
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _registerForFigManifoldCallbacksForTrackID:]
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _unregisterForFigManifoldCallbacksForTrackID:]
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _figManifoldAllNewTracksReady:]
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _figManifold:discoveredNewTrackID:mediaType:]
-[AVStreamDataParser(AVStreamDataParser_ContentKeySessionDelegate) contentKeySession:didProvideContentKeyRequest:]
AVStreamDataParser can't attach to an AVContentKeySession when it's already attached to an AVStreamSession
AVStreamDataParser can't attach to an AVContentKeySession after it started using its own AVContentKeySession for key loading
com.apple.coremedia
DeviceClass
iPad
com.apple.avfoundation.internal-build-allow-avstreamdataparser
%02x
%d bytes [ %@ ] [ %@ ]
sinf
codc
mtyp
cont
mpts
_sampleDescriptionExtensionAtomForKey
_figManifoldError
mediaDataConsumer != nil
requestQueue != NULL
requestBlock != nil
[mediaDataConsumer respondsToSelector:@selector(isReadyForMoreMediaData)]
-[AVAPSyncOutputDeviceCommunicationChannelManager initWithDeviceID:syncController:]
com.apple.avfoundation.device-comm-channel-manager
-[AVAPSyncOutputDeviceCommunicationChannelManager dealloc]
-[AVAPSyncOutputDeviceCommunicationChannelManager openCommunicationChannelWithOptions:completionHandler:]
-[AVAPSyncOutputDeviceCommunicationChannelManager openCommunicationChannelWithOptions:completionHandler:]_block_invoke
v36@?0^{OpaqueAPSyncController=}8i16^{__CFString=}20^{__CFDictionary=}28
-[AVAPSyncOutputDeviceCommunicationChannelManager _didReceiveData:fromDeviceWithID:fromChannelWithUUID:]
-[AVAPSyncOutputDeviceCommunicationChannelManager _didCloseCommChannelWithUUID:forDeviceWithID:]
-[AVAPSyncOutputDeviceCommunicationChannelManager _didCloseCommChannelWithUUID:forDeviceWithID:]_block_invoke
-[AVAPSyncOutputDeviceCommunicationChannelImpl sendData:completionHandler:]
AVAPSyncOutputDeviceCommunicationChannelManagerOpenCompletion
AVAPSyncOutputDeviceCommunicationChannelManagerDidReceiveData
AVAPSyncOutputDeviceCommunicationChannelManagerDidCloseCommChannel
AVAPSyncOutputDeviceCommunicationChannelSendDataCompletion
avsynchronizedlayer_trace
AVSynchronizedLayerQueue
com.apple.avsynchronizedlayer.ivars
common/title
common/creator
common/subject
common/description
common/publisher
common/contributor
common/creationDate
common/lastModifiedDate
common/type
common/format
common/identifier
common/source
common/language
common/relation
common/location
common/copyrights
common/albumName
common/author
common/artist
common/artwork
common/make
common/model
common/software
common/accessibilityDescription
udta/%A9alb
udta/%A9arg
udta/%A9ART
udta/%A9aut
udta/%A9chp
udta/%A9cmt
udta/%A9com
udta/%A9cpy
udta/%A9day
udta/%A9des
udta/%A9dir
udta/%A9dis
udta/%A9enc
udta/%A9nam
udta/%A9gen
udta/%A9hst
udta/%A9inf
udta/%A9key
udta/%A9mak
udta/%A9mod
udta/%A9ope
udta/%A9fmt
udta/%A9src
udta/%A9prf
udta/%A9prd
udta/%A9pub
udta/%A9PRD
udta/%A9swr
udta/%A9req
udta/%A9trk
udta/%A9wrn
udta/%A9wrt
udta/%A9url
udta/%A9xyz
udta/tnam
udta/%A9phg
udta/name
udta/tagc
udta/%A9ade
uiso/cprt
uiso/date
uiso/tagc
uiso/ades
uiso/auth
uiso/perf
uiso/gnre
uiso/yrrc
uiso/loci
uiso/titl
uiso/dscp
uiso/coll
uiso/urat
uiso/thmb
uiso/albm
uiso/kywd
uiso/clsf
uiso/rtng
mdta/com.apple.quicktime.author
mdta/com.apple.quicktime.comment
mdta/com.apple.quicktime.copyright
mdta/com.apple.quicktime.creationdate
mdta/com.apple.quicktime.director
mdta/com.apple.quicktime.displayname
mdta/com.apple.quicktime.information
mdta/com.apple.quicktime.keywords
mdta/com.apple.quicktime.producer
mdta/com.apple.quicktime.publisher
mdta/com.apple.quicktime.album
mdta/com.apple.quicktime.artist
mdta/com.apple.quicktime.artwork
mdta/com.apple.quicktime.description
mdta/com.apple.quicktime.software
mdta/com.apple.quicktime.year
mdta/com.apple.quicktime.genre
mdta/info.ixml.xml
mdta/com.apple.quicktime.location.ISO6709
mdta/com.apple.quicktime.make
mdta/com.apple.quicktime.model
mdta/com.apple.quicktime.arranger
mdta/com.apple.quicktime.encodedby
mdta/com.apple.quicktime.originalartist
mdta/com.apple.quicktime.performer
mdta/com.apple.quicktime.composer
mdta/com.apple.quicktime.credits
mdta/com.apple.quicktime.phonogramrights
mdta/com.apple.quicktime.camera.identifier
mdta/com.apple.quicktime.camera.framereadouttimeinmicroseconds
mdta/com.apple.quicktime.title
mdta/com.apple.quicktime.collection.user
mdta/com.apple.quicktime.rating.user
mdta/com.apple.quicktime.location.name
mdta/com.apple.quicktime.location.body
mdta/com.apple.quicktime.location.note
mdta/com.apple.quicktime.location.role
mdta/com.apple.quicktime.location.date
mdta/com.apple.quicktime.direction.facing
mdta/com.apple.quicktime.direction.motion
mdta/com.apple.quicktime.detected-face
mdta/com.apple.quicktime.detected-human-body
mdta/com.apple.quicktime.detected-cat-body
mdta/com.apple.quicktime.detected-dog-body
mdta/com.apple.quicktime.detected-salient-object
mdta/com.apple.quicktime.preferred-affine-transform
mdta/com.apple.quicktime.video-orientation
mdta/com.apple.quicktime.content.identifier
mdta/com.apple.quicktime.accessibility.description
mdta/com.apple.quicktime.core-motion
mdta/com.apple.quicktime.camera-debug-info
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
mdta/com.apple.quicktime.is-montage
mdta/com.apple.quicktime.live-photo.auto
mdta/com.apple.quicktime.live-photo.vitality-score
mdta/com.apple.quicktime.live-photo.vitality-scoring-version
mdta/com.apple.quicktime.spatial-overcapture.quality-score
mdta/com.apple.quicktime.spatial-overcapture.quality-scoring-version
mdta/com.apple.quicktime.location.accuracy.horizontal
itsk/%A9alb
itsk/%A9ART
itsk/%A9cmt
itsk/covr
itsk/cprt
itsk/%A9day
itsk/%A9enc
itsk/gnre
itsk/%A9gen
itsk/%A9nam
itsk/%A9st3
itsk/%A9too
itsk/%A9wrt
itsk/aART
itsk/akID
itsk/apID
itsk/atID
itsk/cnID
itsk/cpil
itsk/disk
itsk/geID
itsk/grup
itsk/plID
itsk/rtng
itsk/tmpo
itsk/trkn
itsk/%A9ard
itsk/%A9arg
itsk/%A9aut
itsk/%A9lyr
itsk/%A9cak
itsk/%A9con
itsk/%A9des
itsk/%A9dir
itsk/%A9equ
itsk/%A9lnt
itsk/%A9mak
itsk/%A9ope
itsk/%A9phg
itsk/%A9prd
itsk/%A9prf
itsk/%A9pub
itsk/%A9sne
itsk/%A9sol
itsk/%A9src
itsk/%A9thx
itsk/%A9url
itsk/%A9xpd
id3/AENC
id3/APIC
id3/ASPI
id3/COMM
id3/COMR
id3/ENCR
id3/EQUA
id3/EQU2
id3/ETCO
id3/GEOB
id3/GRID
id3/IPLS
id3/LINK
id3/MCDI
id3/MLLT
id3/OWNE
id3/PRIV
id3/PCNT
id3/POPM
id3/POSS
id3/RBUF
id3/RVAD
id3/RVA2
id3/RVRB
id3/SEEK
id3/SIGN
id3/SYLT
id3/SYTC
id3/TALB
id3/TBPM
id3/TCOM
id3/TCON
id3/TCOP
id3/TDAT
id3/TDEN
id3/TDLY
id3/TDOR
id3/TDRC
id3/TDRL
id3/TDTG
id3/TENC
id3/TEXT
id3/TFLT
id3/TIME
id3/TIPL
id3/TIT1
id3/TIT2
id3/TIT3
id3/TKEY
id3/TLAN
id3/TLEN
id3/TMCL
id3/TMED
id3/TMOO
id3/TOAL
id3/TOFN
id3/TOLY
id3/TOPE
id3/TORY
id3/TOWN
id3/TPE1
id3/TPE2
id3/TPE3
id3/TPE4
id3/TPOS
id3/TPRO
id3/TPUB
id3/TRCK
id3/TRDA
id3/TRSN
id3/TRSO
id3/TSIZ
id3/TSOA
id3/TSOP
id3/TSOT
id3/TSRC
id3/TSSE
id3/TSST
id3/TYER
id3/TXXX
id3/UFID
id3/USER
id3/USLT
id3/WCOM
id3/WCOP
id3/WOAF
id3/WOAR
id3/WOAS
id3/WORS
id3/WPAY
id3/WPUB
id3/WXXX
icy/StreamTitle
icy/StreamUrl
m3u8/NAME
AVOutputDeviceBatteryLevelCaseKey
AVOutputDeviceBatteryLevelLeftKey
AVOutputDeviceBatteryLevelRightKey
AVOutputDeviceSupportsDataOverACLProtocolKey
AVOutputDeviceIsInEarKey
AVOutputDeviceBluetoothListeningModeNormal
AVOutputDeviceBluetoothListeningModeActiveNoiseCancellation
AVOutputDeviceBluetoothListeningModeAudioTransparency
AVOutputDeviceVolumeDidChangeNotification
AVOutputDeviceCanSetVolumeDidChangeNotification
AVOutputDeviceVolumeControlTypeDidChangeNotification
AVOutputDeviceProposedGroupIDDidChangeNotification
AVOutputDeviceLocalDeviceDidChangeNotification
AVOutputDeviceConfigurationOptionCancelConfigurationIfAuthRequired
AVOutputDeviceConfigurationCancellationReasonAuthorizationSkipped
AVOutputDeviceSecondDisplayModeDefault
AVOutputDeviceSecondDisplayModeMediaPresentation
AVOutputDeviceCommunicationChannelOptionControlType
AVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired
AVOutputDeviceCommunicationChannelOptionCorrelationID
AVOutputDeviceCommunicationChannelOptionInitiator
AVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate
AVOutputDeviceCommunicationChannelControlTypeDirect
AVOutputDeviceCommunicationChannelControlTypeRelayed
AVOutputDeviceCommunicationChannelDataDestinationMediaRemote
AVOutputDeviceCommunicationChannelDataDestinationFitness
AVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped
AVOutputDeviceHeadTrackedSpatialAudioModeNever
AVOutputDeviceHeadTrackedSpatialAudioModeAlways
AVOutputDeviceHeadTrackedSpatialAudioModeAutomatic
AVOutputDeviceHeadTrackedSpatialAudioModeMultichannelOnly
outputdevice_trace
Not available
-[AVOutputDevice initWithOutputDeviceImpl:commChannelManager:]
%@: %@
-[AVOutputDevice setSecondDisplayEnabled:]
-[AVOutputDevice setSecondDisplayMode:completionHandler:]
-[AVOutputDevice setSecondDisplayMode:completionHandler:]_block_invoke
non-nil
v24@?0@8@"NSError"16
-[AVOutputDevice outputDeviceImplDidChangeVolume:]
-[AVOutputDevice outputDeviceImplDidChangeCanChangeVolume:]
-[AVOutputDevice outputDeviceImplDidChangeVolumeControlType:]
+[AVOutputDevice localDeviceDidChange]
-[AVOutputDevice setVolume:]
-[AVOutputDevice increaseVolumeByCount:]
-[AVOutputDevice decreaseVolumeByCount:]
-[AVOutputDevice outputDeviceImplDidChangeProposedGroupID:]
-[AVOutputDevice setAllowsHeadTrackedSpatialAudio:error:]
-[AVOutputDevice setHeadTrackedSpatialAudioMode:error:]
-[AVOutputDevice setCurrentBluetoothListeningMode:]
-[AVOutputDevice setCurrentBluetoothListeningMode:error:]
-[AVOutputDevice openCommunicationChannelWithOptions:completionHandler:]
-[AVOutputDevice openCommunicationChannelToDestination:options:completionHandler:]
-[AVOutputDevice openCommunicationChannelToDestination:options:completionHandler:]_block_invoke
Error retrieving system remote pool context.
-[AVOutputDevice setCommunicationChannelDelegate:]
-[AVOutputDevice communicationChannelManager:didReceiveData:fromCommunicationChannel:]
-[AVOutputDevice communicationChannelManager:didCloseCommunicationChannel:]
-[AVOutputDevice configureUsingBlock:options:completionHandler:]
-[AVOutputDevice configureUsingBlock:options:completionHandler:]_block_invoke
v40@?0q8@"<AVOutputDeviceConfigurationRetrieval>"16@"NSString"24@"NSError"32
-[AVOutputDevice configureUsingBlock:completionHandler:]
-[AVOutputDevice configureUsingBlock:completionHandler:]_block_invoke
FrecencyScore
LastUsedTimestamp
+[AVOutputDeviceFrecencyManager updateFrecencyListForDeviceID:]
+[AVOutputDeviceFrecencyManager frecencyScoreForDeviceID:]
Frecents
%@.plist
com.apple.avfoundation.frecents
+[AVOutputDeviceFrecencyManager _frecentsFilePath]_block_invoke
+[AVOutputDeviceFrecencyManager _frecentsReaderAfterMigrationIfNecessary]_block_invoke
+[AVOutputDeviceFrecencyManager _migrateFrecentsFromCFPreferencesToFrecentsFilePath:]
-[AVOutputDeviceFrecentsReader initWithFrecentsFilePath:error:]
-[AVOutputDeviceFrecentsReader frecencyInfoForDeviceWithID:]
My Device
-[AVOutputDeviceCommunicationChannel setDelegate:]
-[AVOutputDeviceCommunicationChannel communicationChannelImpl:didReceiveData:]
-[AVOutputDeviceCommunicationChannel communicationChannelImplDidClose:]
_UIApplicationDidFinishSuspensionSnapshotNotification
UIApplicationDidEnterBackgroundNotification
UIApplicationWillResignActiveNotification
UIApplicationWillEnterForegroundNotification
adts
avutilities_trace
AVSerializeOnQueueAsyncIfNecessary
AVEnsureNotOnMainThread
AVFoundationErrorDomain
AVErrorDeviceKey
AVErrorTimeKey
AVErrorFileSizeKey
AVErrorPIDKey
AVErrorRecordingSuccessfullyFinishedKey
AVErrorRecordingFailureDomainKey
AVErrorMediaTypeKey
AVErrorMediaSubTypeKey
AVErrorPresentationTimeStampKey
AVErrorPersistentTrackIDKey
AVErrorFileTypeKey
AVErrorExceptionKey
AVErrorFourCharCode
AVError
_Description
_FailureReason
_RecoverySuggestion
AVLocalizedError
Source frame missing
Render dimensions unknown
Source frame unsupported format
Destination frame unsupported format
Invalid parameter
Invalid composition instruction
Blitting failed
No output callback
Frame was cancelled
No custom callbacks
Custom compositor failed with client NSError
Media format - invalid parameter
Media format - sample description is invalid (e.g. invalid size)
Media format - format description is invalid (e.g. invalid size)
Media format - format description has an incompatible format (e.g. unknown format / incompatible atom)
Media format - sample description is unsupported for the specified format flavor
Media format - slice has an invalid value
Media writing - no such property
Media writing - read only property
Media writing - no such track
Media writing - invalid timestamp
Media writing - invalid format
Media writing - invalid edit
Media writing - predetermined file size too small
Media writing - predetermined media data size too small
Media writing - segment is not allowed to star with a non-sync sample.
Cannot append media data after ending session
JSON format error
iTT requires languageCode or extendedLanguageTag property to be set
AVErrorOutOfMemory
AVErrorSessionNotRunning
AVErrorDeviceAlreadyUsedByAnotherSession
AVErrorNoDataCaptured
AVErrorSessionConfigurationChanged
AVErrorDiskFull
AVErrorDeviceWasDisconnected
AVErrorMediaChanged
AVErrorMaximumDurationReached
AVErrorMaximumFileSizeReached
AVErrorMediaDiscontinuity
AVErrorMaximumNumberOfSamplesForFileFormatReached
AVErrorDeviceNotConnected
AVErrorDeviceInUseByAnotherApplication
AVErrorDeviceLockedForConfigurationByAnotherProcess
AVErrorSessionWasInterrupted
AVErrorMediaServicesWereReset
AVErrorRecordingNotAllowedWhenMultipleAppsAreForeground
AVErrorExportFailed
AVErrorDecodeFailed
AVErrorEncodeFailed
AVErrorInvalidSourceMedia
AVErrorFileAlreadyExists
AVErrorCompositionTrackSegmentsNotContiguous
AVErrorInvalidCompositionTrackSegmentDuration
AVErrorInvalidCompositionTrackSegmentSourceStartTime
AVErrorInvalidCompositionTrackSegmentSourceDuration
AVErrorFileFormatNotRecognized
AVErrorFileFailedToParse
AVErrorMaximumStillImageCaptureRequestsExceeded
AVErrorContentIsProtected
AVErrorNoImageAtTime
AVErrorDecoderNotFound
AVErrorEncoderNotFound
AVErrorContentIsNotAuthorized
AVErrorApplicationIsNotAuthorized
AVErrorDeviceIsNotAvailableInBackground
AVErrorFileChecksumFailed
AVErrorOperationNotSupportedForAsset
AVErrorDecoderTemporarilyUnavailable
AVErrorEncoderTemporarilyUnavailable
AVErrorInvalidVideoComposition
AVErrorReferenceForbiddenByReferencePolicy
AVErrorInvalidFileAtDownloadDestinationURL
AVErrorInvalidOutputURLPathExtension
AVErrorTorchLevelUnavailable
AVErrorOperationInterrupted
AVErrorIncompatibleAsset
AVErrorFailedToLoadMediaData
AVErrorServerIncorrectlyConfigured
AVErrorApplicationIsNotAuthorizedToUseDevice
AVErrorFailedToParse
AVErrorFileTypeDoesNotSupportSampleReferences
AVErrorUndecodableMediaData
AVErrorClientProgrammingError
AVErrorAirPlayControllerRequiresInternet
AVErrorAirPlayReceiverRequiresInternet
AVErrorVideoCompositorFailed
AVErrorRecordingAlreadyInProgress
AVErrorUnsupportedOutputSettings
AVErrorOperationNotAllowed
AVErrorContentIsUnavailable
AVErrorFileWritingExceededPredeterminedSize
AVErrorMediaDataWritingExceededPredeterminedSize
AVErrorFormatUnsupported
AVErrorMalformedDepth
AVErrorIncorrectPIN
AVErrorIncorrectPassword
AVErrorPointlessOverCapture
AVErrorContentNotUpdated
AVErrorNoLongerPlayable
AVErrorNoCompatibleAlternatesForExternalDisplay
AVErrorNoSourceTrack
AVErrorExternalPlaybackNotSupportedForAsset
AVErrorOperationNotSupportedForPreset
AVErrorSessionHardwareCostOverage
AVErrorUnsupportedDeviceActiveFormat
AVErrorOperationRequiresBothBudsInEar
AVErrorIncorrectlyConfigured
AVErrorSegmentStartedWithNonSyncSample
AVErrorRosettaNotInstalled
AVErrorOperationCancelled
AVErrorInvalidSampleCursor
AVErrorFailedToLoadSampleData
AVErrorAirPlayReceiverTemporarilyUnavailable
AVErrorSandboxExtensionDenied
stringWithValidatedFormatInteger
stringWithValidatedFormatString
'%@'
AVSampleBufferVideoRendererDidFailToDecodeNotification
AVSampleBufferVideoRendererDidFailToDecodeNotificationErrorKey
AVSampleBufferVideoRendererRequiresFlushToResumeDecodingDidChangeNotification
AVSampleBufferVideoRendererOutputObscuredDueToInsufficientExternalProtectionDidChangeNotification
AVSampleBufferVideoRendererVisibilityDidChangeNotification
AVSampleBufferSTSLabelDidChangeNotification
avsamplebuffervideorenderer_trace
The control timebase can not be changed after the display layer or video renderer has been added to a synchronizer
The display layer or video renderer cannot be added to a synchronizer if the control timebase has already been set.
FigVideoQueueCreate
FVQSetProperty(DisplayLayer)
FigVideoQueueStart
FVQSetProperty(ControlTimebase)
-[AVSampleBufferVideoRenderer _createVideoQueue:errorStep:]
AVSBVR failed with err=%d at %s.
-[AVSampleBufferVideoRenderer _setStatus:error:]_block_invoke
No Error
-[AVSampleBufferVideoRenderer _resetStatusWithOSStatus:]_block_invoke
-[AVSampleBufferVideoRenderer _setOutputObscuredDueToInsufficientExternalProtection:]
-[AVSampleBufferVideoRenderer _setCreateVideoQueueFailedWithOSStatus:]_block_invoke
AVSampleBufferVideoRenderer serial
AVSampleBufferVideoRenderer videoQueue
AVSampleBufferVideoRenderer layerQueue
AVSampleBufferVideoRendererCallbackListQueue
AVSampleBufferVideoRendererFlushCallbackQueue
AVSampleBufferVideoRendererQueueForProtectingPrerollCompleteCallback
AVSampleBufferVideoRendererQueueForCallingPrerollCompleteCallback
_initializeTimebases
-[AVSampleBufferVideoRenderer init]
bail error check
-[AVSampleBufferVideoRenderer dealloc]
An object conforming to AVQueuedSampleBufferRendering, configured to request more media data via requestMediaDataWhenReadyOnQueue:usingBlock:, was released without first having been messaged stopRequestingMediaData:.
-[AVSampleBufferVideoRenderer setDisplayLayerVisibility:]_block_invoke
visible
NOT visible
-[AVSampleBufferVideoRenderer setRenderSynchronizer:error:]
The DisplayLayer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
STSLabel
-[AVSampleBufferVideoRenderer _enqueueSingleSampleBuffer:bufferEnqueueingInfo:]
An AVSampleBufferDisplayLayer or video target must be added to the AVSampleBufferVideoRenderer prior to enqueueing sample buffers.
Ignoring enqueueSampleBuffer: because status is "failed"
-[AVSampleBufferVideoRenderer flushWithRemovalOfDisplayedImage:completionHandler:]
-[AVSampleBufferVideoRenderer _flushComplete]
-[AVSampleBufferVideoRenderer _completedDecodeForPrerollForRequestID:]_block_invoke
-[AVSampleBufferVideoRenderer prerollDecodeWithCompletionHandler:]
-[AVSampleBufferVideoRenderer addSampleBufferDisplayLayer:]
Cannot add AVSampleBufferDisplayLayer while enqueueing sample buffers.
An AVSampleBufferDisplayLayer is already attached to the AVSampleBufferVideoRenderer.  Only 1 is allowed at a time.
addSampleBufferDisplayLayer failed to set content layer
-[AVSampleBufferVideoRenderer _updateVideoTargetsOnVideoQueue]
Failed to set video target array on video queue.
-[AVSampleBufferVideoRenderer addVideoTarget:]
Cannot add video target while enqueueing sample buffers.
The FigVideoTarget is already attached to the AVSampleBufferVideoRenderer.
-[AVSampleBufferVideoRenderer _setContentLayerOnFigVideoQueue:]
The AVSampleBufferDisplayLayer's content layer is nil.
<%@: %p, AVSBDLs = %d, FVTs = %d>
-[AVSampleBufferVideoRenderer(PowerOptimization) expectMinimumUpcomingSampleBufferPresentationTime:]
The AVSampleBufferVideoOutput has already been added to the AVSampleBufferVideoRenderer.
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) addOutput:]
The video target was removed, but not already attached to AVSampleBufferVideoRenderer.
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) removeOutput:]
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) copyDisplayedPixelBuffer]_block_invoke
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) copyDisplayedPixelBuffer]
_figVideoQueueDecodeError
_figVideoQueueFailed
nil reference
_enqueueSingleSampleBufferStatic
AVSampleBufferVideoRenderer.m
AVVideoCodecKey
jpeg
ap4h
apcn
apch
apcs
apco
muxa
AVVideoWidthKey
AVVideoHeightKey
AVVideoPixelAspectRatioKey
AVVideoPixelAspectRatioHorizontalSpacingKey
AVVideoPixelAspectRatioVerticalSpacingKey
AVVideoCleanApertureKey
AVVideoCleanApertureWidthKey
AVVideoCleanApertureHeightKey
AVVideoCleanApertureHorizontalOffsetKey
AVVideoCleanApertureVerticalOffsetKey
AVVideoScalingModeKey
AVVideoScalingModeFit
AVVideoScalingModeResize
AVVideoScalingModeResizeAspect
AVVideoScalingModeResizeAspectFill
AVVideoColorPropertiesKey
ColorPrimaries
ITU_R_709_2
SMPTE_C
P3_D65
ITU_R_2020
TransferFunction
SMPTE_ST_2084_PQ
ITU_R_2100_HLG
Linear
YCbCrMatrix
ITU_R_601_4
AVVideoAllowWideColorKey
AVVideoCompressionPropertiesKey
AverageBitRate
Quality
MaxKeyFrameInterval
MaxKeyFrameIntervalDuration
AppleProRAWBitDepthKey
ProfileLevel
H264_Baseline_3_0
H264_Baseline_3_1
H264_Baseline_4_1
H264_Baseline_AutoLevel
H264_Main_3_0
H264_Main_3_1
H264_Main_3_2
H264_Main_4_1
H264_Main_AutoLevel
H264_High_4_0
H264_High_4_1
H264_High_AutoLevel
H264EntropyMode
CAVLC
CABAC
ExpectedFrameRate
AllowFrameReordering
AverageNonDroppableFrameRate
AVVideoDecompressionPropertiesKey
AVVideoMinimumFrameDuration
AVVideoFrameRateConversionAlgorithm
AVVideoFrameRateConversionAlgorithmFast
AVVideoFrameRateConversionAlgorithmPrecise
PerceptualQualityOptimization
AVVideoEmitSequencesAtSyncFramesOnly
AVVideoMinimumIntervalForSyncFrames
AVOutputDeviceDescriptionsFromFigDescriptions
-[AVFigEndpointOutputDeviceImpl initWithFigEndpoint:]
figEndpoint != NULL
-[AVFigEndpointOutputDeviceImpl _figEndpointPropertyValueForKey:]
-[AVFigEndpointOutputDeviceImpl deviceType]
-[AVFigEndpointOutputDeviceImpl deviceSubType]
BluetoothFeatures
GAPA
-[AVFigEndpointOutputDeviceImpl isAppleAccessory]
IsGenuineAppleAccessory
-[AVFigEndpointOutputDeviceImpl supportsDataOverACLProtocol]
-[AVFigEndpointOutputDeviceImpl isInEar]
-[AVFigEndpointOutputDeviceImpl isInUseByPairedDevice]
-[AVFigEndpointOutputDeviceImpl connectedPairedDevices]
AVOutputDeviceSetAllowsHeadTrackedSpatialAudioOnEndpoint
AVOutputDeviceHeadTrackedSpatialAudioModeFromFigMode
AVOutputDeviceSetHeadTrackedSpatialAudioModeOnEndpoint
-[AVFigEndpointOutputDeviceImpl setCurrentBluetoothListeningMode:]
-[AVFigEndpointOutputDeviceImpl setCurrentBluetoothListeningMode:error:]
Output device %@ screen %@
disable
AVOutputDeviceSetSecondDisplayEnabledOnEndpoint
v12@?0i8
-[AVFigEndpointOutputDeviceImpl _volumeDidChangeForEndpointWithID:]
-[AVFigEndpointOutputDeviceImpl _endpointVolumeControlTypeDidChangeForEndpointWithID:]
-[AVFigEndpointOutputDeviceImpl _canSetEndpointVolumeDidChangeForEndpointWithID:]
-[AVFigEndpointOutputDeviceImpl configureUsingBlock:options:completionHandler:]
FigRoutingContext is not available on this platform
+[AVOutputDevice(AVOutputDeviceFigEndpointImplFetching) outputDeviceWithFigEndpoint:]
+[AVOutputDevice(AVOutputDeviceFigEndpointImplFetching) outputDeviceWithFigEndpoint:routingContextFactory:]
(error %d)
(name: %@, ID: %@)
AVOutputDeviceCopyFigModeForSpatialAudioMode
request
B32@?0@"NSString"8Q16^B24
v24@?0@"NSError"8d16
Accept
identity
Accept-Encoding
Keep-Alive
Connection
bytes=%llu-
Range
bytes=%llu-%llu
v32@?0@"NSURLSessionDataTask"8@"AVAssetCustomURLRequest"16^B24
com.apple.avfoundation.customurl.nsurlsession
com.apple.avfoundation.customurl.cfurlconnection
-[AVAssetCustomURLBridgeForNSURLProtocol _cancelPendingRequests]
com.apple.avfoundation.authkeychain.callback
com.apple.avfoundation.authkeychain
Content-Range
bytes
Content-Length
<%@: %p, %@, target = %@>
empty
source = %@
timeMapping
description=AVFoundation_AVFCore_Sim-2150.21.1
<%@: %p, input parameters = %@>
<%@: %p, track ID = %d, audioTimePitchAlgorithm: %@, audioTapProcessor: %p, volume mix: %@>
effectParameters == nil || [effectParameters isMemberOfClass:[AVAudioMixSweepFilterEffectParameters class]]
The timeRange of a volume ramp must have a numeric start time and a numeric duration.
The time of a volume setting must be numeric.
introFadeDuration must be numeric and >= 0
fadeOutStart must be >= 0 if numeric
fadeOutDuration must be numeric and >= 0
AVOutputContextDeviceGroupControlOptionCancelAddDeviceIfAuthRequired
AVOutputContextDestinationChangeInitiatedNotification
AVOutputContextDestinationChangeKey
AVOutputContextOutputDeviceDidChangeNotification
AVOutputContextGlobalOutputDeviceConfigurationDidChangeNotification
AVOutputContextOutputDevicesDidChangeNotification
AVOutputContextDestinationChangeInitiatorKey
AVOutputContextSetOutputDevicePasswordKey
AVOutputContextSetOutputDeviceCancelIfAuthRequiredKey
AVOutputContextSetOutputDeviceSuppressUserInteractionOnSenderOnlyKey
AVOutputContextSetOutputDeviceInitiatorKey
AVOutputContextSetOutputDevicesOptionInitiator
AVOutputContextAddOutputDeviceOptionAuthorizationToken
AVOutputContextAddOutputDeviceCancelIfAuthRequiredKey
AVOutputContextAddOutputDeviceOptionInitiator
AVOutputContextAddOutputDeviceOptionCorrelationID
AVOutputContextRemoveOutputDeviceOptionInitiator
AVOutputContextRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputContextSetOutputDeviceFadePlaybackKey
AVOutputContextSetOutputDevicesOptionFadePlayback
AVOutputContextAddOutputDeviceOptionFadePlayback
AVOutputContextRemoveOutputDeviceOptionFadePlayback
AVOutputContextDestinationChangeReasonKey
AVOutputContextDestinationChangeDeviceIDKey
AVOutputContextDestinationChangePreviousDeviceIDsKey
AVOutputContextDestinationChangeReasonIdleDisconnect
AVOutputContextPredictedOutputDeviceDidChangeNotification
AVOutputContextManagerOutputContextDidFailToConnectToOutputDeviceNotification
AVOutputContextManagerOutputDeviceKey
AVOutputContextManagerFailureReasonKey
AVOutputContextDeviceConnectionFailureReasonDeviceInUse
AVOutputContextDeviceConnectionFailureReasonDeviceOutOfRange
AVOutputContextDeviceConnectionFailureReasonNotAPeerInHomeGroup
AVOutputContextDeviceConnectionFailureReasonDeviceNotConnectedToInternet
AVOutputContextDeviceConnectionFailureReasonDeviceNotMFiCertified
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailed2GHzNetwork
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailedMultiDFSNetwork
AVOutputContextTypeSharedSystemAudio
AVOutputContextTypeSharedSystemScreen
AVOutputContextTypeSharedAudioPresentation
AVOutputContextTypeAudio
AVOutputContextTypeVideo
AVOutputContextTypeScreen
AVOutputContextTypeGroupControl
AVOutputContextTypeSharedSystemRemotePool
AVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification
AVOutputContextVolumeDidChangeNotification
AVOutputContextCanSetVolumeDidChangeNotification
AVOutputContextVolumeControlTypeDidChangeNotification
AVOutputContextCommunicationChannelOptionControlType
AVOutputContextCommunicationChannelControlTypeDirect
AVOutputContextCommunicationChannelControlTypeRelayed
AVOutputContextDestinationChangeCancellationReasonAuthorizationSkipped
outputcontext_trace
+[AVOutputContext defaultOutputContextImplClass]
com.apple.UIKit.screenpicker
com.apple.avfoundation.allow-system-wide-context
-[AVOutputContext initWithOutputContextImpl:]
com.apple.avfoundation.outputcontext.ivars
-[AVOutputContext initWithCoder:]
AVOutputContextSerializationKeyContextID
AVOutputContextSerializationKeyContextType
-[AVOutputContext encodeWithCoder:]
<%@: %p, ID=%@, type=%@>
-[AVOutputContext ID]
-[AVOutputContext setApplicationProcessID:]
-[AVOutputContext outputDevice]
-[AVOutputContext setOutputDevice:options:completionHandler:]
-[AVOutputContext setOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext setOutputDevice:forFeatures:]
-[AVOutputContext setOutputDevice:options:]
+[AVOutputContext resetOutputDeviceForAllOutputContexts]
-[AVOutputContext outputContextImpl:didInitiateDestinationChange:]
-[AVOutputContext outputContextImpl:didChangeOutputDeviceWithInitiator:]
-[AVOutputContext outputContextImplDidChangeGlobalOutputDeviceConfiguration:]
-[AVOutputContext outputDevices]
-[AVOutputContext outputContextImpl:didChangeOutputDevicesWithInitiator:reason:deviceID:previousDeviceIDs:]
-[AVOutputContext setOutputDevices:]
-[AVOutputContext setOutputDevices:options:completionHandler:]
-[AVOutputContext setOutputDevices:options:completionHandler:]_block_invoke
-[AVOutputContext addOutputDevice:options:completionHandler:]
-[AVOutputContext addOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext addOutputDevice:]
-[AVOutputContext removeOutputDevice:options:completionHandler:]
-[AVOutputContext removeOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext removeOutputDevice:]
-[AVOutputContext predictedOutputDevice]
-[AVOutputContext outputContextImplDidChangePredictedOutputDevice:]
-[AVOutputContext resetPredictedOutputDevice]
-[AVOutputContext outputContextImplDidChangeProvidesControlForAllVolumeFeatures:]
-[AVOutputContext outputContextImplDidChangeVolume:]
-[AVOutputContext outputContextImplDidChangeCanSetVolume:]
-[AVOutputContext outputContextImplDidChangeVolumeControlType:]
-[AVOutputContext openCommunicationChannelWithOptions:error:]
-[AVOutputContext setCommunicationChannelDelegate:]
-[AVOutputContext outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:]
-[AVOutputContext outputContextImpl:didReceiveData:fromCommunicationChannel:]
-[AVOutputContext outputContextImpl:didCloseCommunicationChannel:]
-[AVOutputContext outputContextImpl:didExpireWithReplacement:]
server death
-[AVOutputContextCommunicationChannel sendData:completionHandler:]
com.apple.avfoundation.outputcontext.destinationchange
<%@: %p, status=%d, cancellationReason=%@>
-[AVOutputContextDestinationChange _setStatus:cancellationReason:]
com.apple.avfoundation.outputcontextmanager.ivars
-[AVOutputContextManager outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:]
AVAssetPlaybackConfigurationOptionStereoVideo
AVAssetPlaybackConfigurationOptionStereoMultiviewVideo
playbackCapabilities
avrunloopcondition_trace
AVRunLoopConditionSignalRunLoopMode
-[AVRunLoopCondition _waitInMode:untilDate:]
AVLayerVideoGravityResize
AVLayerVideoGravityResizeAspect
AVLayerVideoGravityResizeAspectFill
vide
soun
text
clcp
meta
mobj
muxx
hapt
dpth
auxv
scen
AVVideoRangeSDR
AVVideoRangeHLG
AVVideoRangePQ
AVMediaCharacteristicVisual
AVMediaCharacteristicAudible
AVMediaCharacteristicLegible
AVMediaCharacteristicFrameBased
public.uses-wide-gamut-color-space
public.contains-hdr-video
public.contains-alpha-channel
public.main-program-content
public.auxiliary-content
public.original-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.easy-to-read
public.accessibility.describes-video
com.apple.has-language-display-name-as-name
public.binaural-for-headphones
public.downmix
public.translation
public.translation.dubbed
public.translation.voice-over
com.apple.quicktime.video-map
com.apple.quicktime.video-map.depth
com.apple.quicktime-movie
public.mpeg-4
com.apple.m4v-video
com.apple.m4a-audio
public.3gpp
public.3gpp2
com.apple.coreaudio-format
com.microsoft.waveform-audio
public.aiff-audio
public.aifc-audio
org.3gpp.adaptive-multi-rate-audio
public.ac3-audio
public.enhanced-ac3-audio
public.au-audio
public.mp3
public.jpeg
com.adobe.raw-image
public.heic
public.avci
public.heif
public.tiff
org.w3.webvtt
public.mpeg-2-transport-stream
com.apple.streamingkeydelivery.contentkey
com.apple.streamingkeydelivery.persistentcontentkey
MPEG4AppleHLS
MPEG4CMAFCompliant
assetinspector_trace
-[AVFigAssetInspector variants]
<%@: %p, volume mix: %@>
The timeRange of a volume ramp must not overlap the timeRange of an existing volume ramp.
through
, changing instantaneously to 
, holding steady at 
, interpolated to 
 with %@ ramp style
volume %1.3f %@ time %1.3f%@%@
avoperation_trace
com.apple.avfoundation.avoperation.ivars
-[AVOperation evaluateDependenciesAndMarkAsExecuting]
requestedStatus != AVOperationStatusUnknown
isExecuting
isFinished
-[AVOperation _setStatus:error:resultingStatus:failureReason:]_block_invoke
-[AVOperation didEnterTerminalState]
-[AVOperation markAsCompleted]
-[AVOperation markAsFailedWithError:]
-[AVOperation markAsCancelled]
+[AVOperation(ArrayOfOperations) statusOfOperations:error:]
-[AVBlockOperation start]
-[AVBlockOperation cancel]
com.apple.avfoundation.globaloperationqueue.%p
<%@: %p, unfinishedOperations=%@>
AVDepartureAnnouncingObjectMonitorKey
com.apple.avfoundation.waitForNotificationOrDeallocationOperation
AVOperationStatusResolveOldAndNew
Cannot enter a terminal state until the receiver starts executing
Cannot regress from a terminal state %d to a non-terminal state %d
delegateutils_trace
<%@: %p> delegate serialization queue
-[AVWeakReferencingDelegateStorage _delegate]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/Utilities/AVDelegateUtilities.m
-[AVWeakReferencingDelegateStorage _setDelegateViaWeakReference:]
-[AVWeakReferencingDelegateStorage setDelegate:queue:]
AVPerformDelegateCallbackSynchronouslyForDelegateStorageIfCurrentDelegateQueueIsQueueElseDispatchToCurrentDelegateQueue
assetinspectorloader_trace
keys
AVAsynchronousLoadingPropertyBatchIDKey
AVAsynchronousLoadingCompletionHandlerKey
com.apple.avfoundation.avasset.completionsQueue
trackPropertyForMediaSelectionOptions
trackPropertyForPlaybackCapabilities
-[AVFigAssetInspectorLoader _loadStatusForProperty:figAsset:error:]
-[AVFigAssetInspectorLoader _statusOfValueForKey:error:firstNonLoadedDependencyKey:]
-[AVAsset statusOfValueForKey:error:] invoked with unrecognized key %@.
v24@?0@8^B16
%@ invoked with unrecognized keys %@.
-[AVFigAssetInspectorLoader loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:]
(keys == nil) || [keys isKindOfClass:[NSArray class]]
[keysForCollectionKeys isKindOfClass:[NSDictionary class]]
[[keysForCollectionKeys objectForKey:thisKey] isKindOfClass:[NSArray class]]
-[AVAsset loadValuesAsynchronouslyForKeys:completionHandler:]
-[AVAsset loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:] invoked with unrecognized AVAssetTrack keys %@.
AVAsynchronousLoadingTrackPropertyBatchIDKey
-[AVFigAssetInspectorLoader _ensureAllDependenciesOfKeyAreLoaded:]
exportable
readable
composable
, batchID = %ld
, track batchID = %ld
-[AVFigAssetInspectorLoader _invokeCompletionHandlerForLoadingBatches:]
assetCache
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
cacheKey
downloadDestinationURL
isProxy
variants
contentKeySpecifiersEligibleForPreloading
preferredRate
preferredSoundCheckVolumeNormalization
providesPreciseDurationAndTiming
referenceRestrictions
lyrics
commonMetadata
ID3Metadata
allMediaSelections
hasProtectedContent
originalNetworkContentURL
playable
compatibleWithSavedPhotosAlbum
compatibleWithAirPlayVideo
audioAlternatesTrackGroup
subtitleAlternatesTrackGroup
alternateTrackGroups
identifyingTag
identifyingTagClass
httpSessionIdentifier
resolvedURL
SHA1Digest
figAsset
playbackItem
canContainFragments
containsFragments
canContainMovieFragments
containsMovieFragments
firstFragmentSequenceNumber
fragmentCount
overallDurationHint
moovAtomSize
propertyListForProxy
supportsAnalysisReporting
assetAnalysisMessages
maximumVideoResolution
availableVideoDynamicRanges
preferredDisplayCriteria
minimumTimeOffsetFromLive
resourceLoader
mayRequireContentKeysForMediaDataProcessing
createFigAsset
handleAndReflectFigAssetNotification
handleFigAssetLoadingNotification
handleFigAssetLoadingNotification_block_invoke
AVRoutingSessionManagerCurrentSessionDidChangeNotification
AVRoutingSessionManagerLikelyExternalDestinationsDidChangeNotification
AVRoutingSessionManagerAllLikelyDestinationsDidChangeNotification
routingsession_trace
+[AVRoutingSessionManager initialize]
+[AVRoutingSessionManager longFormVideoRoutingSessionManager]
-[AVRoutingSessionManager dealloc]
<%@: %p, currentRoutingSession=%@, likelyExternalDestinations=%@>
-[AVRoutingSessionManager currentRoutingSession]
-[AVRoutingSessionManager likelyExternalDestinations]
-[AVRoutingSessionManager allLikelyDestinations]
-[AVRoutingSessionManager prefersLikelyDestinationsOverCurrentRoutingSession]
-[AVRoutingSessionManager updateCurrentRoutingSessionFromLikelyDestinationsWithCompletionHandler:]
Missing required entitlement com.apple.avfoundation.allow-identifying-output-device-details
-[AVRoutingSessionManager startRoutingSessionForHighConfidenceExternalDestinationIfPresentWithCompletionHandler:]
-[AVRoutingSessionManager startRoutingSessionWithOutputDeviceDescriptions:error:]
-[AVRoutingSessionManager startSuppressingLikelyDestinationsUntilNextPlayEventAndReturnError:]
-[AVRoutingSessionManager stopSuppressingLikelyDestinationsAndReturnError:]
com.apple.avfoundation.allows-set-output-device
+[AVAssetTrackInspector assetTrackInspectorWithAsset:trackID:trackIndex:]
assettrackinspector_trace
-[AVTrackReaderInspector _initWithAsset:trackID:trackIndex:]
%c%c%c%c
decodable
playabilityValidationResult
enabled
selfContained
totalSampleDataLength
mediaPresentationTimeRange
mediaDecodeTimeRange
requiresFrameReordering
peakDataRate
mediaCharacteristics
dimensions
loudnessInfo
minFrameDuration
segmentsExcludeAudioPrimingAndRemainderDurations
gaplessSourceTimeRange
segmentsAsPresented
layer
defaultAlternateGroupID
provisionalAlternateGroupID
excludedFromAutoselectionInTrackGroup
locale
containsMixedSubtitles
containsOnlyForcedSubtitles
fallbackTrack
associatedSubtitleTrack
pairedForcedOnlySubtitlesTrack
hasAudibleBooksContent
isAudibleBooksContentAuthorized
canProvideSampleCursors
-[AVFigAssetTrackInspector _initWithAsset:trackID:trackIndex:]
com.apple.avfoundation.avassettrack.completionsQueue
-[AVFigAssetTrackInspector _loadStatusForFigAssetTrackProperty:error:]
-[AVAssetTrack statusOfValueForKey:error:] invoked with unrecognized key %@.
-[AVAssetTrack loadValuesAsynchronouslyForKeys:completionHandler:] invoked with unrecognized keys %@.
-[AVFigAssetTrackInspector loadValuesAsynchronouslyForKeys:completionHandler:]
HasSeamSamples
-[AVFigAssetTrackInspector _invokeCompletionHandlerForLoadingBatches:]
-[AVCompositionTrackReaderInspector segments]
handleFigAssetTrackNotification
handleFigAssetTrackNotification_block_invoke
%c[%@ %@]
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ only defined for abstract class.  Define %@!
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
com.apple.AVFCore
xxxxDefaultValuexxxx
AVLocalizedStringFromTableWithLocaleWithBundleIdentifier
<%@: %p, referencedObject = %@>
avsamplebuffergenerator_trace
request != nil
batch cannot be nil
batch does not belong to this generator
createSampleBufferForRequest must only be called before makeDataReadyWithCompletionHandler.
com.apple.avfoundation.avsamplebuffergenerator.data-ready-notifications
generator != nil
makeDataReadyWithCompletionHandler should only be called once.
com.apple.avfoundation.avsamplebuffergenerator.batch-ready-notifications
{CGPoint=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
{CGSize=dd}
figSampleInformationoDict != nil
figSegmentTrackReportDict != nil
figSegmentReportDict != nil
ccr_trace
%@ read/write queue
callbackContext != nil
-[AVCallbackContextRegistry registerCallbackContextObject:]_block_invoke
callbackContextToken != AVCallbackContextTokenInvalid
-[AVCallbackContextRegistry unregisterCallbackContextForToken:]_block_invoke
Cannot unregister token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
Cannot look up token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
avplayeritemmediadatacollector_trace
%@ only supports listening to notifications from CMNotificationCenterGetDefaultLocalCenter
cmNotificationCenter != NULL
com.apple.avfoundation.avcmnotificationdispatcher.ivars
Cannot remove a listener %@ (callback %p) for %@ from object %p that was never added.  Break on AVCMNotificationDispatcherUnbalancedUnregistrationBreak() to debug.
avblockserializer_trace
-[AVSerializedMostlySynchronousReentrantBlockScheduler scheduleBlock:]
%@ %@
*** %@
avtimedmetadatagroup_trace
Cannot create format description for metadata group %p%@
<%@: %p, timeRange=%@, items=%@>
<%@: %p, startDate=%@, endDate=%@ classifyingLabel=%@ uniqueID=%@ items=%@>
[propertyList isKindOfClass:[NSDictionary class]]
-[AVDateRangeMetadataGroup(AVDateRangeMetadataGroup_Local) _extractPropertiesFromTaggedRangeMetadataDictionary:]
The identifier for one or more of the following items is invalid: %@.  See +[%@ %@] for a way to construct a valid identifier from a key and key space
Data type "%@" does not conform to any built-in data type.  See CMMetadataDataTypeRegistryRegisterDataType.
Metadata item %p has no value
No entry in format description %p for metadata item %p with identifier %@, data type %@ and extended language tag %@.  If you created this format description using -[%@ %@], make sure the instance of %@ used to create the format description contains a representative sample of metadata items which includes an item with the same combination of identifier, dataType, and extended language tag as this one
Value "%@" of class %@ in metadata item %p is not compatible with base data type %@
avassetcache_trace
-[AVManagedAssetCache initWithURL:enableCRABSCache:enableHLSCache:]
-[AVManagedAssetCache setMaxSize:]
-[AVManagedAssetCache setMaxEntrySize:]
-[AVManagedAssetCache removeEntryForKey:]
B32@?0@"AVMediaSelectionOption"8Q16^B24
AVPlatformIdentifierMacOS
AVPlatformIdentifierIOS
AVPlatformIdentifierWatchOS
AVPlatformIdentifierTVOS
platformutilities_trace
AVExecutionEnvironmentCurrentPlatformIdentifierKey
{?=ii}
-[AVDelegatingPlaybackCoordinatorPlaybackControlCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorPlayCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorBufferingCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorPauseCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorSeekCommand init] unavailable
-[AVDelegatingPlaybackCoordinator _setIsInExpanseMediaPlaybackOnAVAudioSession]
com.apple.avfoundation.avdelegatingplaybackcoordinator.timelinecontrol
com.apple.avdelegatingplaybackcoordinator.figtimelinecoordinator.config
com.apple.avfoundation.avdelegatingplaybackcoordinator.ivars
-[AVDelegatingPlaybackCoordinator initWithPlaybackControlDelegate:]_block_invoke
-[AVDelegatingPlaybackCoordinator initWithPlaybackControlDelegate:]
-[AVDelegatingPlaybackCoordinator participantForIdentifier:]_block_invoke
-[AVDelegatingPlaybackCoordinator _updateTransportControlStateDictionaryWithTransportControlState:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleNewTransportControlStateDictionary:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleNewParticipantStateDictionary:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleReplacementParticipantStateDictionaries:]_block_invoke
-[AVDelegatingPlaybackCoordinator beginSuspensionForReason:]
-[AVDelegatingPlaybackCoordinator _endSuspension:]
-[AVDelegatingPlaybackCoordinator _endSuspension:proposingNewTime:]
-[AVDelegatingPlaybackCoordinator _setWaitingPolicies:]
-[AVDelegatingPlaybackCoordinator applyFigPauseSnapsToMediaTimeOfOriginator]_block_invoke
AVDelegatingPlaybackCoordinatorBroadcastTimelineStateCallback
AVDelegatingPlaybackCoordinatorBroadcastParticipantStateCallback
AVDelegatingPlaybackCoordinatorAsynchronouslyReloadTimelineStateCallback
AVFragmentedMovieDurationDidChangeNotification
AVFragmentedMovieWasDefragmentedNotification
AVFragmentedMovieContainsMovieFragmentsDidChangeNotification
AVFragmentedMovieTrackTimeRangeDidChangeNotification
AVFragmentedMovieTrackSegmentsDidChangeNotification
AVExternalPlaybackMonitorAirPlayVideoActiveDidChangeNotification
AVExternalPlaybackMonitorAirPlayVideoPlayingDidChangeNotification
playbackmonitor_trace
+[AVExternalPlaybackMonitor initialize]
+[AVExternalPlaybackMonitor longFormVideoExternalPlaybackMonitor]
-[AVExternalPlaybackMonitor dealloc]
<%@: %p, airPlayVideoActive=%d, airPlayVideoPlaying=%d>
-[AVExternalPlaybackMonitor isAirPlayVideoActive]
-[AVExternalPlaybackMonitor isAirPlayVideoPlaying]
Audio/Video
UserInterfaceSoundEffects
LiveAudio
Ringtone
RingtonePreview
PhoneCall
TTYCall
AVAudioSessionMediaPlayerOnlyModeMoviePlayback
AVAudioSessionMediaPlayerOnlyModeSpokenAudio
FindMyPhone
AVAudioSessionPickableRoutesDidChangeNotification
AVAudioSessionCanEnterPIPModeDidChangeNotification
avaudiosessionmediaplayeronly_trace
-[AVAudioSessionMediaPlayerOnly setActive:withFlags:error:]
-[AVAudioSessionMediaPlayerOnly setCategory:error:]
 from
property
-[AVAudioSessionMediaPlayerOnly setMode:error:]
 from
-[AVAudioSessionMediaPlayerOnly _attachToPlayer:]
avaudiosession_fpNotificationCallback
non-resumable
avmediaselectiongroup_trace
<%@: %p, options = %@, allowsEmptySelection = %@>
+[AVMediaSelectionGroup mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:]
AVMediaSelectionTrackOptionCharacteristicsKey
-[AVAssetMediaSelectionGroup mediaSelectionOptionWithPropertyList:]
AVMediaSelectionTrackOptionTrackIDKey
AVMediaSelectionTrackOptionSettingsKey
AVMediaSelectionKeyValueOptionMediaTypeKey
AVMediaSelectionKeyValueOptionGroupIDKey
<%@: %p, language = %@%@>
, title = %@
, associated language = %@
, tagged media characteristics = {%@}
, default = YES
, auxiliary = YES
, fallback track or variant IDs = {%@}
, forced subtitles only
, associated forced-only option = <%@: %p>
'%c%c%c%c'
, mediaSubTypes = {%@}
, mediaType = '%@'%@%@%@%@%@%@%@
SUBTITLE_TRACK_DISPLAY_FORMAT
AVMediaSelectionOption
%2$@
SDH_SUBTITLE_FORMAT
%1$@
FORCEDONLY_SUBTITLE_FORMAT
EASYTOREAD_SUBTITLE_FORMAT
CC_SUBTITLE_FORMAT
DESCRIBESVIDEO_AUDIO_FORMAT
VOICEOVERTRANSLATION_AUDIO_FORMAT
ORIGINAL_AUDIO_FORMAT
AUDIOENCODING_AUDIO_FORMAT
UNKNOWN_LANGUAGE
displayNameWithLocale requires an NSLocale
nil selection option for the following group: %@
%@%@
stringWithValidatedFormatArg2
stringWithValidatedFormat
inspector_trace
Output settings dictionary is empty and valid
Output settings dictionary is valid
Output settings dictionary contains one or more invalid keys: %@
outputSettingsDictionary != nil
Output settings dictionary does not contain any recognized keys
<%@: %p, outputSettingsDictionary=%@>
UTI != nil
Invalid file type UTI.  Available file types are: %@
<%@: %p, UTI = %@>
formatDesc != NULL
fileType != nil
Format ID '%@' is not compatible with file type %@
Cannot write non-interleaved audio to a file
[[fileType UTI] isEqualToString:AVFileTypeWAVE]
WAVE files cannot contain floating-point LPCM
WAVE files cannot contain big-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFF]
AIFF files cannot contain floating-point LPCM
AIFF files cannot contain little-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFC]
AIFC files cannot contain little-endian LPCM
The video codec %@ is not compatible with file type %@
Uncompressed video is not allowed for file type %@
not implemented
avAudioSettingsDictionary != nil
AVAudioSettings dictionary must contain AVFormatIDKey
Cannot specify both AVEncoderBitRateKey and AVEncoderBitRatePerChannelKey
If one of AVLinearPCMIsFloatKey and AVLinearPCMBitDepthKey is specified, both must be specified
Bit depth can only be one of: %@
Bit depth hint can only be one of: %@
Bit rate strategy can only be one of: %@
Value for AVEncoderAudioQualityForVBRKey must be an instance of %@
Cannot specify a value for AVEncoderAudioQualityForVBRKey without also specifying AVAudioBitRateStrategy_Variable for AVEncoderBitRateStrategyKey
Floating-point LPCM must be 32-bit
Channel count must be positive
AudioChannelLayout is invalid
AudioChannelLayout channel count must be positive
AudioChannelLayout channel count does not match AVNumberOfChannelsKey channel count
Invalid value %.2f for AVSampleRateKey; sample rate must be between 8.0 and 192.0 kHz inclusive
Value for AVSampleRateConverterAlgorithmKey must be an instance of NSString
Unrecognized value "%@" for AVSampleRateConverterAlgorithmKey
The following keys are not allowed when format ID is '%@': %@
%g Hz is not a valid sample rate for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeSampleRates (<AudioToolbox/AudioFormat.h>) to enumerate available rates for a given format.
%d is not a valid channel count for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeNumberChannels (<AudioToolbox/AudioFormat.h>) to enumerate available channel counts for a given format.
Channel layout is not valid for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeChannelLayoutTags (<AudioToolbox/AudioFormat.h>) to enumerate available channel layout tags for a given format.
Missing required key %@
-[AVAVAudioSettingsAudioOutputSettings getAudioStreamBasicDescription:forAudioFileTypeID:sourceFormatDescription:]
Unrecognized bit rate strategy
Unrecognized value for %@: %@
Pixel buffer attributes width and height must be nonnegative
Value for AVVideoScalingModeKey must be one of: %@
Value for kCVPixelBufferMetalCompatibilityKey must be an NSNumber wrapping a BOOL
Compression property %@ is not supported for video codec type %@
Video codec type %@ expects a value for compression property %@ in a particular numeric range, but property value %@ is not numeric
Video codec type %@ does not allow values for %@ that are numerically less than %@
Video codec type %@ does not allow values for %@ that are numerically greater than %@
For compression property %@, video codec type %@ only allows the following values: %@
av_kVTPropertyInitialValueKey
For compression property %@, video codec type %@ only allows the value %@
avVideoSettingsDictionary != nil
AVVideoSettings dictionary must contain AVVideoCodecKey
AVVideoSettings dictionary must specify a height if it specifies a width
AVVideoSettings dictionary must specify a width if it specifies a height
AVVideoSettings dictionary must specify a positive width
AVVideoSettings dictionary must specify a positive height
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoAverageBitRateKey
AVVideoCompressionPropertiesKey dictionary must specify a value between 0.0 and 1.0 for AVVideoQualityKey
AVVideoCompressionPropertiesKey dictionary must specify a non-negative value for AVVideoMaxKeyFrameIntervalDurationKey
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoMaxKeyFrameIntervalKey
Value for AVVideoH264EntropyModeKey must be an instance of NSString
Value for AVVideoExpectedSourceFrameRateKey must be an instance of NSNumber
Value for AVVideoAllowFrameReorderingKey must be an instance of NSNumber
Value for AVVideoAverageNonDroppableFrameRateKey must be an instance of NSNumber
Dictionary for AVVideoPixelAspectRatioKey contains one or more unrecognized keys: %@
Value for AVVideoPixelAspectRatioKey must be an instance of NSDictionary
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioHorizontalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must contain NSNumber values for both AVVideoPixelAspectRatioHorizontalSpacingKey and AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoCleanApertureKey contains one or more unrecognized keys: %@
Clean aperture region must be contained within the bounds specified by width & height
Value for AVVideoCleanApertureKey must be an instance of NSDictionary
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHorizontalOffsetKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureVerticalOffsetKey
Value for AVVideoCleanApertureWidthKey must be an instance of NSNumber
Value for AVVideoCleanApertureHeightKey must be an instance of NSNumber
Value for AVVideoCleanApertureHorizontalOffsetKey must be an instance of NSNumber
Value for AVVideoCleanApertureVerticalOffsetKey must be an instance of NSNumber
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoColorPropertiesKey must contain all three color keys (AVVideoColorPrimariesKey, AVVideoTransferFunctionKey, AVVideoYCbCrMatrixKey) and it may not contain any other keys
Value for AVVideoColorPrimariesKey must be one of: %@
Value for AVVideoTransferFunctionKey must be one of: %@
Value for AVVideoYCbCrMatrixKey must be one of: %@
Dictionary for AVVideoColorPropertiesKey must be an NSDictionary
Dictionary for AVVideoAllowWideColorKey must be an NSNumber
AVVideoMinimumFrameDuration must be numeric
AVVideoMinimumFrameDuration must be greater than kCMTimeZero
Dictionary for AVVideoMinimumFrameDuration must be an NSDictionary
AVVideoFrameRateConversionAlgorithm must be either AVVideoFrameRateConversionAlgorithmFast or AVVideoFrameRateConversionAlgorithmPrecise
String for AVVideoFrameRateConversionAlgorithm must be an NSString
kVTDecompressionPropertyKey_FieldMode must be one of: kVTDecompressionProperty_FieldMode_BothFields, kVTDecompressionProperty_FieldMode_TopFieldOnly, kVTDecompressionProperty_FieldMode_BottomFieldOnly, kVTDecompressionProperty_FieldMode_SingleField, or kVTDecompressionProperty_FieldMode_DeinterlaceFields
String for kVTDecompressionPropertyKey_FieldMode must be an NSString
Value for kVTDecompressionPropertyKey_PropagatePerFrameHDRDisplayMetadata must be an NSNumber
AVVideoEmitSequencesAtSyncFramesOnly must be greater than zero
AVVideoEmitSequencesAtSyncFramesOnly must be an NSNumber
AVVideoPixelAspectRatioKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Pixel aspect ratio can only be specified once
Value for pixel aspect ratio must be an instance of NSDictionary
AVVideoCleanApertureKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Clean aperture can only be specified once
Value for clean aperture must be an instance of NSDictionary
<%@: %p, minimum = %f, maximum = %f>
AVAssetDownloadSessionDownloadSucceededNotification
AVAssetDownloadSessionDownloadFailedNotification
AVAssetDownloadSessionFileSizeAvailableNotification
AVAssetDownloadSessionLoadedTimeRangesChangedNotification
AVAssetDownloadSessionCurrentLoadedTimeRangesKey
AVAssetDownloadSessionNewlyLoadedTimeRangeKey
AVAssetDownloadSessionTimeRangeExpectedToLoadKey
AVAssetDownloadSessionDidResolveMediaSelectionNotification
AVAssetDownloadSessionPriorityKey
AVAssetDownloadSessionProtectedContentSupportStorageURLKey
AVAssetDownloadSessionPurchaseBundleKey
AVAssetDownloadSessionAirPlayAuthorizationInfoKey
AVAssetDownloadSessionCachePrimingDownloadTokenKey
AVAssetDownloadSessioniTunesStoreContentInfoKey
AVAssetDownloadSessioniTunesStoreContentIDKey
AVAssetDownloadSessioniTunesStoreContentTypeKey
AVAssetDownloadSessioniTunesStoreContentUserAgentKey
AVAssetDownloadSessioniTunesStoreContentDownloadParametersKey
AVAssetDownloadSessioniTunesStoreContentDSIDKey
AVAssetDownloadSessioniTunesStoreContentPurchasedMediaKindKey
AVAssetDownloadSessionHTTPCookiesKey
AVAssetDownloadSessionClientBundleIdentifierKey
AVAssetDownloadSessionHTTPHeaderFieldsKey
AVAssetDownloadSessionClientAuditTokenKey
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey
AVAssetDownloadSessionAllowsCellularAccessKey
AVAssetDownloadSessionAllowsExpensiveNetworkAccessKey
AVAssetDownloadSessionAllowsConstrainedNetworkAccessKey
AVAssetDownloadSessionMinimumRequiredMediaBitrateKey
AVAssetDownloadSessionMediaSelectionKey
AVAssetDownloadSessionDeleteDownloadWhenAssetFinalizesKey
AVAssetDownloadSessionLinkAssetURLToDestinationURLKey
AVAssetDownloadSessionShouldStoreEligibleContentKeysKey
AVAssetDownloadSessionAssetNameKey
AVAssetDownloadSessionAssetImageDataKey
AVAssetDownloadSessionOptimizeAccessForLinearMoviePlaybackKey
AVAssetDownloadSessionAlternativeConfigurationOptionsKey
AVAssetDownloadSessionMediaSelectionPrefersMultichannelKey
AVAssetDownloadSessionDebugIdentifierKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AVAssetDownloadTaskMediaSelectionKey
AVAssetDownloadTaskShouldStoreEligibleContentKeysKey
AVAssetDownloadTaskDestinationURLKey
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
AVAssetDownloadTaskAllowHighDynamicRangeKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelOnlyKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelForMostPreferredLanguageOnlyKey
AVAssetDownloadTaskMediaSelectionsForMultichannelKey
AVAssetDownloadTaskPrefersHDRKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateForHEVCKey
AVAssetDownloadTaskPrefersMostCompatibleRenditionKey
AVAssetDownloadSessionRetryErrorKey
AVAssetDownloadTaskClientIsCatalyst
AVAssetDownloadTaskPrefersLosslessAudioKey
AVAssetDownloadTaskMaximumAudioSampleRateKey
AVAssetDownloadTaskDownloadConfigurationKey
download_trace
com.apple.avfoundation.avassetdownloadsession
URL != nil
[destinationURL isFileURL]
-[AVAssetDownloadSession initWithURL:destinationURL:options:]
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey and AVAssetDownloadSessionAllowsCellularAccessKey options are incompatible
downloadToken > 0
-[AVAssetDownloadSession initWithDownloadToken:]
asset != nil || options[AVAssetDownloadTaskDownloadConfigurationKey] != nil
(asset != nil && [asset isKindOfClass:[AVURLAsset class]]) || asset == nil
mediaSelections == nil || [mediaSelections isKindOfClass:[NSArray class]]
-[AVAssetDownloadSession initWithAsset:mediaSelections:destinationURL:options:]
-[AVAssetDownloadSession start]
-[AVAssetDownloadSession pause]_block_invoke
-[AVAssetDownloadSession stop]_block_invoke
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) ensureProgressTimerIsRunningOnQueueWithError:]_block_invoke
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _setupFigClientObjectAsync:]_block_invoke_2
file
NULL figAsset
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _setFileFigAsset:]
AVAssetDownloadSession.m
figAsset already set
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _startOnQueueFirstTime]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _startOnQueue]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _transitionToTerminalStatus:error:]_block_invoke
completed
failed
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _primeCacheOnDispatchQueue]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _primeCache]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _readyForInspection]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _verifyDownloadConfigurationForAssetType]
avAssetDownloadSession_figAssetNotificationCallback
avAssetDownloadSession_figPlaybackItemNotificationCallback
avsamplecursor_trace
<%@: %p, PTS = %@, DTS = %@>
-[AVSampleCursor stepByDecodeTime:wasPinned:]
-[AVSampleCursor stepByPresentationTime:wasPinned:]
-[AVSampleCursor createSampleBufferForCurrentSampleReturningError:]
-[AVSampleCursor createSampleBufferFromCurrentSampleToEndCursor:error:]
avplayeritemoutput_trace
<%@: %p> timebase read/write queue
-[AVPlayerItemOutput _itemTimeForHostTimeAsCMTime:]
AVPlayerItemVideoOutput does not support compressed output
-[AVPlayerItemVideoOutput setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:]
AVPlayerItemOutput queue
-[AVPlayerItemVideoOutput requestNotificationOfMediaDataChangeWithAdvanceInterval:]_block_invoke
-[AVPlayerItemVideoOutput requestNotificationOfMediaDataChangeAsSoonAsPossible]_block_invoke
-[AVPlayerItemVideoOutput _copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:]
-[AVPlayerItemVideoOutput _dispatchOutputMediaDataWillChange]_block_invoke
-[AVPlayerItemVideoOutput _dispatchOutputSequenceWasFlushed]
-[AVPlayerItemVideoOutput _dispatchOutputSequenceWasFlushed]_block_invoke
AVPlayerItemVideoOutput_timebaseNotificationCallback_block_invoke
AVPlayerItemVideoOutput_figVCSequentialAvailable_block_invoke_3
com.apple.avfoundation.avfragmentedassetminder
An %@ cannot mind fragmented assets more frequently than once per millisecond (requested interval was %f)
An %@ cannot mind instances of %@
%@ cannot add an %@ that's already being minded by another fragment minder
*** -[%@ addFragmentedAsset:] specifies an asset that's already associated with a fragment minder. Ignoring.
AVPixelBufferAttributeMediatorPixelBufferAttributesDidChangeNotification
avpixelbufferattributemediator_trace
AVSampleBufferDisplayLayerFailedToDecodeNotification
AVSampleBufferDisplayLayerFailedToDecodeNotificationErrorKey
AVSampleBufferDisplayLayerRequiresFlushToResumeDecodingDidChangeNotification
AVSampleBufferDisplayLayerOutputObscuredDueToInsufficientExternalProtectionDidChangeNotification
AVSampleBufferDisplayLayerVideoRectDidChangeNotification
AVSampleBufferDisplayLayerVisibilityDidChangeNotification
-[AVSampleBufferDisplayLayer _updateLayerTreeGeometryWithVideoGravity:presentationSize:videoGravityShouldTriggerAnimation:]
avsamplebufferdisplaylayer_trace
AVSampleBufferDisplayLayerQueue
AVSampleBufferDisplayLayer <%p>
AVSampleBufferDisplayLayer <%p> (content layer)
-[AVSampleBufferDisplayLayer init]
-[AVSampleBufferDisplayLayer dealloc]
-[AVSampleBufferDisplayLayer layerDidBecomeVisible:]
-[AVSampleBufferDisplayLayer videoRect]
-[AVSampleBufferDisplayLayer postVideoRectDidChangeNotification]
-[AVSampleBufferDisplayLayer setSTSLabel:]
-[AVSampleBufferDisplayLayer setSTSLabel:]_block_invoke
separatedOptions.STSLabel
sampleBufferVideoRenderer.status
sampleBufferVideoRenderer.error
sampleBufferVideoRenderer.outputObscuredDueToInsufficientExternalProtection
AVSampleBufferDisplayLayer: No formatDescription found in sampleBuffer
StreamingContentKeyRequestRequiresPersistentKey
StreamingContentKeyRequiresiTunesProvisioningKey
can be decoded only by a NSXPCCoder
endpoint
NSXPCCoder returned NULL endpoint
customURLHandlerObjectID
authHandlerObjectID
contentKeySessionHandlerObjectID
can be encoded only by a NSXPCCoder
avassetresourceloader_trace
com.apple.avfoundation.avassetresourceloader.state
com.apple.avfoundation.avassetresourceloader.contentInformationCaching
com.apple.avfoundation.avassetresourceloader.handler
AVAssetResourceLoader
com.apple.avfoundation.avassetresourceloader.authhandler
AVAssetResourceLoader-authentication
not an AVAssetResourceLoaderRemoteHandlerContext
-[AVAssetResourceLoader initWithURLRequestHelper:asset:remoteCustomURLHandlerContext:]
AVAssetResourceLoader.m
NULL delegateQueue passed
delegate
delegateQueue
-[AVAssetResourceLoader _performDelegateSelector:withObject:representingNewRequest:key:fallbackHandler:]_block_invoke
v16@?0@"<AVAssetResourceLoaderDelegate>"8
v12@?0B8
The specified challenge must be an instance of NSURLAuthenticationChallenge previously provided by AVAssetResourceLoader
The specified credential must be an instance of NSURLCredential
<%@: %p, content type = "%@", content length = %lld, byte range access supported = %@, disk caching permitted = %@, renewal date = %@>
Accept-Ranges
no-cache
Content-Type
com.apple.avfoundation.avassetresourceloadingdatarequest
<%@: %p, requested offset = %lld, requested length = %lld, requests all data to end of resource = %@, current offset = %lld>
-[AVAssetResourceLoadingDataRequest respondWithData:]
com.apple.avfoundation.avassetresourceloadingrequest.dataCaching
bytes=%lld-%lld
AVAssetResourceLoadingRequest %p deallocated while a streaming content key request is still being generated; leaking completion handler. Either keep a retain of the AVAssetResourceLoadingRequest in -generateStreamingContentKeyRequestDataAsynchronouslyForApp's completionHandler or wait until completionHandler is called before calling -finishLoading/-finishLoadingWithError:.
<%@: %p, URL request = %@, request ID = %llu, content information request = %@, data request = %@>
-[AVAssetResourceLoadingRequest _appendToCachedData:]
-[AVAssetResourceLoadingRequest _appendToCachedData:]_block_invoke
Already have a cachedContentInformation
FCUP_Response_RequestID
FCUP_Response_URL
FCUP_Response_Headers
FCUP_Response_IsContentKeyRequest
-[AVAssetResourceLoadingRequest _sendResponseInfoToCustomURLHandler]
-[AVAssetResourceLoadingRequest _sendDataToCustomURLHandler:]
-[AVAssetResourceLoadingRequest _sendFinishLoadingToCustomURLHandlerWithError:]
no contentKeySession
-[AVAssetResourceLoadingRequest finishLoading]
*** -[AVAssetResourceLoadingRequest finishLoading] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
Must respond with a contentType contained in AVAssetResourceLoadingContentInformationRequest.allowedContentTypes.
-[AVAssetResourceLoadingRequest finishLoadingWithError:]
*** -[AVAssetResourceLoadingRequest finishLoadingWithError:] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
StreamingContentKeyIsForAirPlayKey
CSKRO_RemoteContext
kFigCPEError_InvalidState
Cryptor is not available to create key request.
-[AVAssetResourceLoadingRequest keyRequestDataUsingCryptorForApp:contentIdentifier:options:performAsync:error:]
Cannot generate content key request when AVAsset is attached to AVContentKeySession
appIdentifier != nil
contentIdentifier != nil
A streaming content key request is already being generated on this AVAssetResourceLoadingRequest.
keyVendorResponse != NULL
-[AVAssetResourceLoadingRequest persistentContentKeyFromKeyVendorResponse:options:error:]
customURLHandlerHandleRequestCallback
not an AVAssetResourceLoader
mismatched handler
customURLHandlerRequestCancelled
customURLAuthHandlerHandleRequestCallback
customURLAuthHandlerRequestCancelled
AVSampleBufferRenderSynchronizerRateDidChangeNotification
avsamplebufferrendersynchronizer_trace
-[AVSampleBufferRenderSynchronizer init]
com.apple.avfoundation.avsamplebufferrendersynchronizer.ratequeue
com.apple.avfoundation.avsamplebufferrendersynchronizer.synchronizeraccessqueue
com.apple.avfoundation.avsamplebufferrendersynchronizer.rendererlistqueue
-[AVSampleBufferRenderSynchronizer dealloc]
rendersynchronizer_sts_label
+[AVSampleBufferRenderSynchronizer _makeSTSLabel]_block_invoke
WILL
WILL NOT
com.apple.avfoundation.STS.%d-%d
newRate >= 0.0
Invalid renderer configuration; forcing rate to 0. rather than %1.3f
-[AVSampleBufferRenderSynchronizer _setRate:time:atHostTime:]
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _addRenderer:error:]
v16@?0@"NSString"8
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _addRenderer:error:]_block_invoke
invalid renderer
Cannot add renderer %p %@
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) addRenderer:]
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _createOnceTimebaseObserverForRemovalOfRenderer:atTime:]_block_invoke
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _scheduleTimedRendererRemovalAtTime:atTime:withClientCompletionHandler:]
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererRestrictions) _canAddRendererInternal:error:]
The SampleBufferRenderer cannot be added to a Synchronizer more than once.
Multiple AudioRenderers not allowed when using Long Form Routing Policy.
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererRestrictions) _rendererConfigurationIsValid:]
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerTimeObservation) removeTimeObserver:]
An instance of AVSampleBufferRenderSynchronizer cannot remove a time observer that was added by a different instance of AVSampleBufferRenderSynchronizer.
avrendersynchronizer_timebaseRateChanged
renderer
onceTimebaseObserver
clientCompletionHandler
avrendersynchronize_electRendererForSTSAndSendLabelToAudioRenderers
avrendersynchronize_cleanUpAllAddedRenderers
AVSampleBufferRenderSynchronizerFigFactoryKey
BOOL AVCanWriteFilesToDirectoryAtURL(NSURL *, NSError **)
AVFileSystemUtilities.m
directoryURL != nil
filesystemutilities_trace
TemporaryFileForAVFoundation
AVCanWriteFilesToDirectoryAtURL
<%@: %p, peakBitRate:%d averageBitRate:%d video:%@ audio:%@>
variant
hlsvariant_trace
[mediaSelectionOption isKindOfClass:[AVMediaSelectionOption class]]
<%@: %p, formatIDs:%@>
one of the constituent parts of %@ are not supported by AVAssetVariantQualifier error:%@
predicate
channelCount
mediaSelectionOption
operator
-[AVAssetVariantChannelCountPredicate evaluateWithObject:substitutionVariables:]
creation using format string is not supported
<%@: %p, count:%d operator:%@ option:%@>
width
-[AVAssetVariantPresentationWidthPredicate evaluateWithObject:substitutionVariables:]
<%@: %p, width:%lf operator:%@>
height
-[AVAssetVariantPresentationHeightPredicate evaluateWithObject:substitutionVariables:]
<%@: %p, height:%lf operator:%@>
AVCGColorAttributes
Not available.  Use %@ instead
<%@: %p
, principalMediaCharacteristics = %@
, preferredLanguages = %@
, preferredMediaCharacteristics = %@
, preferredMediaSubTypes = %@
, precludedMediaSubTypes = %@
, preferMultichannelAudio
, precludeMultichannelAudio
preferredLanguages must contain only items of type NSString
preferredMediaCharacteristics must contain only items of type NSString
principalMediaCharacteristics must contain only items of type NSString
preferredMediaSubTypes must contain only items of type NSNumber
precludedMediaSubTypes must contain only items of type NSNumber
-[AVAsynchronousCIImageFilteringRequest sourceImage]
-[AVAsynchronousCIImageFilteringRequest finishWithImage:context:]
filteredImage != nil
-[AVAsynchronousCIImageFilteringRequest finishWithError:]
avcifilter_trace
com.apple.AVStorylineCustomVideoCompositor._renderContextQ
-[AVCoreImageFilterCustomVideoCompositor renderContextChanged:]
-[AVCoreImageFilterCustomVideoCompositor startVideoCompositionRequest:]
Expecting video composition to contain only AVCoreImageFilterVideoCompositionInstruction
B8@?0
@"CIContext"8@?0
-[AVCoreImageFilterCustomVideoCompositor cancelAllPendingVideoCompositionRequests]
AVPlayerItemLegibleOutputTextStylingResolutionDefault
AVPlayerItemLegibleOutputTextStylingResolutionSourceAndRulesOnly
avplayeritemlegibleoutput_trace
subtypes != nil
com.apple.avplayeritemlegibleoutput.ivars
[mediaSubtypeObject isKindOfClass:[NSNumber class]]
integerValueAppearsToBeAFourCC
Native representation is not available for media subtype 'c608'
"%@"
-[AVPlayerItemLegibleOutput _pushAttributedStrings:andSampleBuffers:atItemTime:]_block_invoke
-[AVPlayerItemLegibleOutput _signalFlush]
-[AVPlayerItemLegibleOutput _signalFlush]_block_invoke
Invalid text styling resolution %@
AVOutputSettingsPreset640x480
AVOutputSettingsPreset960x540
AVOutputSettingsPreset1280x720
AVOutputSettingsPreset1920x1080
AVOutputSettingsPreset3840x2160
AVOutputSettingsPresetHEVC1920x1080
AVOutputSettingsPresetHEVC1920x1080WithAlpha
AVOutputSettingsPresetHEVC3840x2160
AVOutputSettingsPresetHEVC3840x2160WithAlpha
AVOutputSettingsPresetHEVC7680x4320
CMTIME_IS_NUMERIC(sourceVideoAverageFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoAverageFrameDuration, >, kCMTimeZero)
CMTIME_IS_NUMERIC(sourceVideoMinFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoMinFrameDuration, >, kCMTimeZero)
AVMediaSelection_DefaultSelection
[propertyList isKindOfClass:[NSArray class]]
 %@ : %@ 
<%@: %p, group characteristics and selected options = %@>
-[AVExternalDeviceHID _figEndpointHIDInputMode]
-[AVExternalDeviceHID initWithExternalDeviceAndHIDDictionary:hidDictionary:]
-[AVExternalDeviceHID setInputMode:]
-[AVExternalDeviceIcon initWithDictionary:]
widthPixels
heightPixels
imageData
prerendered
Knobs
LowFidelityTouch
HighFidelityTouch
Touchpad
softKeyboard
softPhoneKeypad
nonMusicLists
musicLists
japanMaps
ExternalDevice_ScreenBecameAvailable
ExternalDevice_ScreenBecameUnavailable
ExternalDevice_NightModeChangedNotification
ExternalDevice_LimitedUIChangedNotification
ExternalDevice_OwnsTurnByTurnNavigationChangedNotification
ExternalDevice_PerformanceReportNotificationPosted
ExternalDevice_MFiCertificateSerialNumberChangedNotification
ExternalDevice_ElectronicTollCollectionChangedNotification
ExternalDevice_NavigationAidedDrivingChangedNotification
enhancedRequestCarUI
-[AVExternalDeviceScreenBorrowToken initWithExternalDevice:client:reason:]
-[AVExternalDeviceScreenBorrowToken dealloc]
-[AVExternalDeviceTurnByTurnToken initWithExternalDevice:]
-[AVExternalDeviceTurnByTurnToken dealloc]
externaldevice_trace
com.apple.AVFoundation.AVExternalDevice
com.apple.AVFoundation.AVExternalDevice.ViewAreas
viewAreaIndex
adjacentViewAreas
-[AVExternalDevice _figEndpointPropertyValueForKey:]
-[AVExternalDevice screenIDs]
-[AVExternalDevice screenInputCapabilities]
-[AVExternalDevice screenPrimaryInputDevices]
-[AVExternalDevice externalDeviceHIDs]_block_invoke
active
com.apple.springboard
InitialCarPlayConnection
TestTakeScreenAway
payload
TestNotification
figEndpointNotificationCallback
uuid
avplayercaptionlayer_trace
AVPlayerCaptionLayerQueue
com.apple.avfoundation.playercaptionlayer.configuration
AVPlayerCaptionLayer <%p>
-[AVPlayerCaptionLayer layoutSublayers]
-[AVPlayerCaptionLayer setBounds:]
-[AVPlayerCaptionLayer setPlayer:]
-[AVPlayerCaptionLayer _startObservingPlayer:]
-[AVPlayerCaptionLayer _stopObservingPlayer:]
-[AVPlayerCaptionLayer observeValueForKeyPath:ofObject:change:context:]
-[AVPlayerCaptionLayer observeValueForKeyPath:ofObject:change:context:]_block_invoke
avcc_trace
-[AVCustomVideoCompositorSession initWithVideoComposition:]
com.apple.avcustomvideocompositorsession.clientcustomcompositorq
com.apple.avcustomvideocompositorsession.rendercontextq
com.apple.avcustomvideocompositorsession.clienterrorq
com.apple.avcustomvideocompositorsession.videocompositionq
com.apple.avcustomvideocompositorsession.finishedrequestq
sourcePixelBufferAttributes must not be nil. (AVVideoCompositing=%p)
sourcePixelBufferAttributes must be an NSDictionary. (AVVideoCompositing=%p)
sourcePixelBufferAttributes must contain kCVPixelBufferPixelFormatTypeKey. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must contain at least one item. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must be either an NSArray or an NSNumber. (AVVideoCompositing=%p)
requiredPixelBufferAttributesForRenderContext must not be nil. (AVVideoCompositing=%p)
requiredPixelBufferAttributesForRenderContext must contain kCVPixelBufferPixelFormatTypeKey. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in requiredPixelBufferAttributesForRenderContext must contain at least one item. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in requiredPixelBufferAttributesForRenderContext must be either an NSArray or an NSNumber. (AVVideoCompositing=%p)
-[AVCustomVideoCompositorSession commitCustomVideoCompositorPropertiesAndReturnError:]
-[AVCustomVideoCompositorSession(AVCustomVideoCompositorSession_FigCallbackHandling) _compositionFrame:atTime:requiresRenderUsingSources:requiresSampleBuffersUsingSources:withInstruction:]_block_invoke
-[AVCustomVideoCompositorSession(AVCustomVideoCompositorSession_FigCallbackHandling) _customCompositorFigPropertyDidChange]_block_invoke
This instance is never deallocated
observedObject != nil
keyPath != nil
dependentProperty
-[AVKVODispatcher observeValueForKeyPath:ofObject:change:context:]
v16@?0@"NSDictionary"8
v24@?0@"NSObject<AVWeakObservable>"8@"NSDictionary"16
callbackContextRegistry != nil
observer != nil
object != nil
-[AVClientBlockKVONotifier dealloc]
-[AVClientBlockKVONotifier start]
-[AVClientBlockKVONotifier cancelCallbacks]
*** Weakly-observed object %p was deallocated without cancelling outstanding registration %p.  You are most likely about to get an exception from KVO.  To fix, make sure that %p properly implements the %@ protocol
-[AVWeaklyObservedObjectClientBlockKVONotifier start]
*** Received KVO for object %p that is being deallocated.  This can cause other objects to get a reference to %p while it is in an inconsistent state.  Break on AVKVODispatcherKVODuringObjectTeardownBreak() to debug
-[AVWeaklyObservedObjectClientBlockKVONotifier cancelCallbacks]
v24@?0@"NSObject"8@"NSDictionary"16
Cannot safely use %@ with %@ or its subclasses, due to rdar://problem/26865139, until we
 stop supporting legacy versions of iWork apps
kvodispatcher_trace
dependentPropertyKey != nil
dependencyKeyPath != nil
com.apple.avfoundation.keypathdependency.registration
<%@: %p, target=%@, dependentKey="%@", dependencyKeyPath="%@">
<deallocated>
Must invoke with object passed to initializer
v32@?0@"AVKeyPathDependency"8@"NSObject<AVWeakObservable>"16@"NSDictionary"24
-[AVKeyPathDependency _startObservingSecondLevelPropertyOnNewCurrentValueForTopLevelDependencyProperty:]
v24@?0@"AVKeyPathDependency"8@"NSDictionary"16
-[AVKeyPathDependency _reactToTopLevelPropertyChange:]
-[AVKeyPathDependency _reactToTopLevelPropertyChange:]_block_invoke
-[AVKeyPathDependency _reactToSecondLevelPropertyChange:]
%@.%@
topLevelDependencyProperty
observedObject
unfinished AVAsynchronousVideoCompositionRequest deallocated - should have called finishWithComposedVideoFrame:, finishWithError: or finishCancelledRequest
finishWithComposedVideoFrame requires a CVPixelBuffer
ignored -[AVAsynchronousVideoCompositionRequest finishWithComposedVideoFrame:] because already finished
ignored -[AVAsynchronousVideoCompositionRequest finishWithError:] because already finished
ignored -[AVAsynchronousVideoCompositionRequest finishCancelledRequest:] because already finished
AVRouteDetectorMultipleRoutesDetectedDidChangeNotification
routedetector_trace
com.apple.avfoundation.avroutedetector.ivars
-[AVRouteDetector init]_block_invoke_3
-[AVRouteDetector init]_block_invoke
-[AVRouteDetector _updateMultipleRoutesDetected]
-[AVRouteDetector _updateRouteDetectionEnabled]
-[AVRouteDetector _updateRouteDetectionEnabled]_block_invoke
v16@?0@"DAEvent"8
-[AVRouteDetector _didEnterBackground]
-[AVRouteDetector _didEnterForeground]
sharedApplication
applicationState
DADiscoveryConfiguration
/System/Library/PrivateFrameworks/DeviceAccess.framework/DeviceAccess
DADiscovery
-[AVVideoCompositionRenderContext newPixelBuffer]_block_invoke
-[AVVideoCompositionRenderContext(Internal) initWithFigVideoCompositor:clientRequiredPixelBufferAttributes:videoComposition:pixelBufferPool:]
com.apple.avvideocompositionrendercontext.pixelbufferpoolq
-[AVVideoCompositionRenderContext(Internal) pixelBufferPool]
LowQualityZeroLatency
TimeDomain
Spectral
Varispeed
AVMovieReferenceRestrictionsKey
AVMovieShouldPrepareToOptimizeForExclusivePlaybackKey
AVMovieShouldSupportAliasDataReferencesKey
avmovie_trace
-[AVMovie init]
-[AVMovie initWithURL:options:]
-[AVMovie initWithData:options:]
[[AVMovie movieTypes] containsObject:contentType]
-[AVMovie _initWithFigAsset:]
-[AVMovie _initWithFormatReader:URL:data:options:]
-[AVMovie _initWithFigError:userInfo:]
-[AVMutableMovie initWithURL:options:error:]
-[AVMutableMovie initWithData:options:error:]
-[AVMutableMovie initWithSettingsFromMovie:options:error:]
-[AVMutableMovie _initWithFormatReader:URL:data:options:]
![self isMemberOfClass:[AVMutableMovie class]]
-[AVMutableMovie setPreferredTransform:]
<%@: %p defaultMediaDataStorage = %@, tracks = %@ >
<%@: %p tracks = %@ >
Can't copy settings from an AVAssetTrack with a non-matching media type
existingTracks != nil
[track isKindOfClass:[AVAssetTrack class]]
avsamplebufferoutput_trace
AVPlayerItemSampleBufferOutput state
-[AVPlayerItemSampleBufferOutput copyNextSampleBufferForTrackID:flags:]
-[AVPlayerItemSampleBufferOutput _figPlaybackItemTrackSampleBufferDidBecomeAvailableForTrackID:extractionID:]_block_invoke_2
-[AVPlayerItemSampleBufferOutput _figPlaybackItemTrackSampleBufferDidBecomeAvailableForTrackID:extractionID:]_block_invoke
-[AVPlayerItemSampleBufferOutput _figPlaybackItemTrackOutputSequenceWasFlushedForTrackID:extractionID:]_block_invoke_2
-[AVPlayerItemSampleBufferOutput _figPlaybackItemTrackOutputSequenceWasFlushedForTrackID:extractionID:]_block_invoke
figPlaybackItemTrackSampleBufferDidBecomeAvailable
figPlaybackItemTrackResetSampleBufferExtraction
AVContentKeySessionLegacyWebKitCompatibilityMode
FairPlayStreaming
ClearKeySystem
AuthorizationTokenSystem
ProtocolVersionsKey
RequiresValidationDataInSecureTokenKey
RequiresExtendedValidationDataInSecureTokenKey
SupportsAirPlayDecryptionKey
ServerChallenge
CreateDecryptorUsingFormatDescription
ReceivedKeyResponseAfterSPCTimedOut
ReceivedKeyResponseWithExpiredLease
ReceivedObsoleteKeyResponse
%@ does not support key persistence
HLSMethodKey
failed to alloc content key request
-[AVContentKeyRequest initWithContentKeySession:reportGroup:identifier:contentIdentifier:keyIDFromInitializationData:initializationData:preloadingRequestOptions:providesPersistableKey:]
AVContentKeySession.m
Failed on init
-[AVContentKeyRequest initWithContentKeySession:reportGroup:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:isRenewalRequest:]
-[AVContentKeyRequest initWithContentKeySession:contentKeyBoss:useContentKeyBoss:keySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:isRenewalRequest:requestID:providesPersistableKey:preloadingRequestOptions:identifier:]
<%@: %p status:%d>
-[AVContentKeyRequest _setError:]_block_invoke
v16@?0@"<AVContentKeySessionDelegate>"8
-[AVContentKeyRequest _handleKeyResponseError:]
-[AVContentKeyRequest _handleKeyResponseError:]_block_invoke
-[AVContentKeyRequest _handleKeyResponseSuccessWithCryptor:]_block_invoke
-[AVContentKeyRequest ensureCryptorWithFormatDescription:error:]
value against AVContentKeyRequestProtocolVersionsKey should be an array of NSNumber objects
ISO_23001_7
SAMPLE-AES
value against AVContentKeyRequestHLSMethodKey is not recognized
value against AVContentKeySessionServerPlaybackContextOptionServerChallenge should be a NSData instance
Server challenge should be 8 bytes in length
AVContentKeyRequestRequiresExtendedValidationDataInSecureTokenKey value should be an object of NSData class
valid completionHandler is required
valid appIdentifier is required
-[AVContentKeyRequest makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:]_block_invoke
content key request cancelled or already failed
valid responseData is required
-[AVContentKeyRequest processContentKeyResponseData:renewalDate:error:]
Could not set KeyResponseReceived state on cryptor.
valid keyResponse is required
AVContentKeySession's keySystem is not same as that of keyResponse
%@ does not support this operation
keyResponse should be an object of AVContentKeyResponseFairPlayStreaming class
valid FPS key response data is required
-[AVContentKeyRequest processContentKeyResponse:]
keyResponse should be an object of AVContentKeyResponseClearKey class
valid ClearKey key data is required
keyResponse should be an object of AVContentKeyResponseAuthorizationToken class
identifier and authorizationTokenData must be valid
identifier should be an object of NSString class
kCMBaseObjectError_ParamErr
boss NULL
-[AVContentKeyRequest _processContentKeyResponseError:]
%@ does not support key renewal
client's delegate should respond to contentKeySession:didProvidePersistableContentKeyRequest: method in order to be able to request persistable content key request
-[AVContentKeyRequest respondByRequestingPersistableContentKeyRequestAndReturnError:]
displays is nil
key request has not succeeded. value not available.
-[AVContentKeyRequest(AVContentKeyRequest_ExternalProtectionStateSupport) willOutputBeObscuredDueToInsufficientExternalProtectionForDisplays:]
cryptor is NULL
-[AVContentKeyRequest(AVContentKeyRequest_ExternalProtectionStateSupport) externalContentProtectionStatus]
-[AVContentKeyRequest(AVContentKeyReportInternal) setReportGroup:]
valid keyVendorResponse is required
persistable content key cannot be created at this time
-[AVPersistableContentKeyRequest persistableContentKeyFromKeyVendorResponse:options:error:]
FairPlay Streaming is not supported on simulators
+[AVContentKeySession copyDefaultSecureStopManagerForAppIdentifier:storageDirectoryAtURL:]
avcontentkeysession_trace
input keySystem is not supported
%@ does not support storage URL
com.apple.AVContentKeySession._threadSafetyQ
<%@: %p> contentkeysession delegate serialization queue
-[AVContentKeySession initWithKeySystem:storageDirectoryAtURL:legacyWebKitCompatibilityMode:]
<%@: %p expired:%d>
valid delegateQueue is required
cannot add this object as an AVContentKeyRecipient
-[AVContentKeySession addContentKeyRecipient:]_block_invoke
Content key session is already expired or failed
Can't add object as an AVContentKeyRecipient after it has established its own content protection
Content key recipient cannot be associated with more than one instance of AVContentKeySession
-[AVContentKeySession addContentKeyRecipient:]
-[AVContentKeySession removeContentKeyRecipient:]_block_invoke
-[AVContentKeySession expire]
An expired content key session cannot process content key request
valid contentKeyRequest is required
Cannot renew content key request since there's no delegate set on the content key session
Cannot renew content key request using an expired content key session
Cannot renew content key request that was previously cancelled or failed
Cannot renew while content key request is waiting for a response
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]_block_invoke
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]
valid completion handler is required
valid persistableContentKeyData is required
-[AVContentKeySession makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:]
-[AVContentKeySession makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:]_block_invoke
-[AVContentKeySession invalidatePersistableContentKey:options:completionHandler:]
-[AVContentKeySession invalidatePersistableContentKey:options:completionHandler:]_block_invoke_2
valid application certificate is required
-[AVContentKeySession invalidateAllPersistableContentKeysForApp:options:completionHandler:]
-[AVContentKeySession invalidateAllPersistableContentKeysForApp:options:completionHandler:]_block_invoke_2
valid storageURL is required
kFigSSMError_InvalidState
failed to query records due to an internal error
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:]
expiredSessionReports should be an array of NSData objects
failed to remove records due to an internal error
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:]
-[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) _handleSecureStopDidFinalizeRecordCallback]_block_invoke
%@_%llu
-[AVContentKeySession(AVContentKeySessionPrivateUtilities) _handleUpdateToPersistentKey:forKeyIdentifier:]_block_invoke
-[AVContentKeySession(AVContentKeySessionPrivateUtilities) _handleContentProtectionSessionIdentifierDidChange:]_block_invoke
appIdentifier can't change once set
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequests:forInitializationData:]
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequests:forInitializationData:]_block_invoke
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequest:toDelegateWithCallbackSelector:]
-[AVContentKeySession(AVContentKeyRequestSupport) issuePersistableContentKeyRequest:]
-[AVContentKeySession(AVContentKeyRequestSupport) issueRenewableContentKeyRequest:]
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequestWithPreloadingRequestOptions:identifier:initializationData:providesPersistableKey:]
-[AVContentKeySession(AVContentKeyRequestSupport) contentKeyRequestDidProduceContentKey:]_block_invoke_2
-[AVContentKeySession(AVContentKeyRequestSupport) contentKeyRequestDidProduceContentKey:]_block_invoke
valid delegate is required to deliver a key request
-[AVContentKeySession(AVContentKeySession_Internal) issueContentKeyRequestForInitializationData:]
-[AVContentKeySession(AVContentKeySession_Internal) issueContentKeyRequestForInitializationData:]_block_invoke
cannot get content key identifier
no content key present
CoreMedia
EnableContentKeyBossForAirPlay
CoreMediaErrorDomain
-[AVContentKeySession(AVContentKeySession_Internal) _handleRequest:withRequestID:fromHandler:willHandleRequest:]
no figAsset
-[AVContentKeySession(AVContentKeySession_Internal) createAndInstallCustomURLHandlerForAsset:outHandler:]
com.apple.avfoundation.avcontentkeysession.handler
AVContentKeySession
-[AVContentKeySession(AVContentKeyGroup_Support) makeContentKeyGroup]
identifier is not string or url
-[AVContentKeyReportGroup cryptorOptionsForIdentifier:initializationData:formatDescription:hlsMethod:]
-[AVContentKeyReportGroup failProcessingContentKeyRequestWithIdentifier:initializationData:error:]
identifier or initializationData must be valid
AVContentKeySession is nil
-[AVContentKeyReportGroup processContentKeyRequestWithIdentifier:initializationData:options:]
-[AVContentKeyReportGroup associateContentKeyRequest:]
-[AVContentKeyReportGroup expire]
No FCKS available
-[AVContentKeyReportGroup(AVContentKeyReportGroup_Internal) createCryptorIfNecessaryForIdentifier:initializationData:formatDescription:hlsMethod:error:]_block_invoke
-[AVContentKeyReportGroup(AVContentKeyReportGroup_Internal) copyCryptorForIdentifier:initializationData:]_block_invoke
com.apple.avfoundation.avcontentkeyreportgroup
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) initWithKeySystem:keySession:contentKeyBoss:useContentKeyBoss:groupID:storageDirectoryAtURL:]
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) createProtectorSessionIdentifierIfNecessary]_block_invoke
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) configureAppIdentifier:]
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) _setAuthorizationToken:forIdentifier:error:]_block_invoke
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) _setAuthorizationToken:forIdentifier:error:]
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) hasProtector]
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) copyCryptorForCryptKeyAttributes:]
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) externalProtectionStatusForCryptor:withDisplays:]
sample buffer does not have format description
Content key is not valid
initializationData is nil
avcks_decodeInitializationDataAndCopyInformation
failed to convert initializationData to a JSON object
pssh
expected initialization data to be a JSON dictionary containing an array of SINF data
badly formatted key request init data - sinf array not found
badly formatted key request init data - codecType not valid
badly formatted key request init data - mediaType not valid
badly formatted key request init data - containerType not valid
badly formatted PSSH data
not an AVContentKeySession
avckrg_keyResponseErrorCallback
not an AVContentKeyReportGroup
avckrg_keyResponseSuccessfullyProcessedCallback
avckrg_persistentKeyUpdatedCallback
avckrg_secureStopDidFinalizeRecordCallback
avckrg_externalProtectionStateChangedCallback
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl outputDevices]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _outputDevicesFromProperty:withQualifier:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _outputDeviceForID:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _groupMembersChangedForGroupWithID:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl groupLeader]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl addOutputDevice:withOptions:completionHandler:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl removeOutputDevice:withOptions:completionhandler:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _volumeChangedForGroupWithID:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _volumeControlTypeChangedForGroupWithID:]
AVAPSyncControllerRemoteOutputDeviceGroupImplGroupMembersChanged
AVAPSyncControllerRemoteOutputDeviceGroupImplSetSpeakerGroupCallback
AVAPSyncControllerRemoteOutputDeviceGroupImplVolumeChanged
AVAPSyncControllerRemoteOutputDeviceGroupImplVolumeControlTypeChanged
@ffffff
MbP?
AVOutputContext
AVOutputContextLocalOutputDeviceGroupImpl
AVOutputDeviceGroupImpl
NSObject
AVPlayerLooperInternal
AVPlayerLooper
AVResult
AVAssetReaderOutputMetadataAdaptorInternal
AVAssetReaderOutputMetadataAdaptor
AVAssetReaderOutputAdaptor
AVVideoPerformanceMetricsInternal
AVVideoPerformanceMetrics
AVOutputDeviceDiscoverySessionInternal
AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal
AVOutputDeviceDiscoverySession
AVEmptyOutputDeviceDiscoverySessionAvailableOutputDevices
AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices
AVAPSyncControllerOutputDeviceImpl
AVOutputDeviceImpl
AVPlayerLayerIntermediateLayer
AVPlayerLayerInternal
AVPlayerLayer
AVKeyPathDependencyHost
AVWeakObservable
CMTimeAsValue
CMTimeRangeAsValue
CMTimeMappingAsValue
NSValueCMTimeExtensions
AVTimeCoding
AVTimebaseObserver
AVPeriodicTimebaseObserver
AVOccasionalTimebaseObserver
AVOnceTimebaseObserver
AVPlayerItemMetadataCollectorMetadataItemFiltering
AVPlayerItemMetadataCollectorInternal
AVPlayerItemMetadataCollector
AVPlayerItemMediaDataCollector_Internal
AVPlayerItemInterstitialEventCollector
AVPlayerInterstitialEvent
NSCopying
AVPlayerInterstitialEventMonitor
AVPlayerInterstitialEventController
AVSampleBufferVideoOutputInternal
AVSampleBufferVideoOutput
AVAssetDownloadStorageManager
AVAssetDownloadStorageManagementPolicy
NSMutableCopying
AVMutableAssetDownloadStorageManagementPolicy
AVAssetDownloadStorageManagementPolicyInternal
AVOutputDeviceGroup
AVOutputDeviceGroupMembershipChangeResult
AVMetadataItemInternal
AVMetadataItem_Local
AVMetadataItemTypeCoercion
AVMetadataItem
AVAsynchronousKeyValueLoading
AVMutableMetadataItem
AVLazyValueLoadingMetadataItemInternal
AVLazyValueLoadingMetadataItem
AVMetadataItemValueRequestInternal
AVMetadataItemValueRequest
AVMetadataItemLazyValueLoading
AVChapterMetadataItemInternal
AVChapterMetadataItem
AVMetadataItemFilterForSharing
AVMetadataItemFilterInternal
AVMetadataItemFilter
AVAssetProxy
AVAssetProxyInternal
AVAssetInternal
AVAsset
AVAssetChapterInspection
AVAsset_ExportAndSerializationSupport
AVAssetMovieAtomInfo_Private
AVAssetFragmentInternal
AVAssetFragment
AVFragmentedAssetsArray
AVAssetFragmentSequenceInfo_Private
AVURLAssetInternal
AVURLAsset
AVAssetCache
AVURLAssetCache_Private
AVAssetVariantInspection
AVURLAssetURLHandlingInternal
AVURLAssetURLHandling
AVAssetClientURLRequestHelper
AVURLAssetInstanceIdentiferMapping
AVDataAsset
AVAssetTrackEnumerator
AVURLAssetContentKeyEligibility
AVContentKeyRecipient
AVURLAssetContentKeyEligibilityInternal
AVContentKeyRecipientInternal
AVURLAssetCustomURLHandling
AVURLAssetItemProviderData
NSSecureCoding
NSCoding
NSItemProvider
AVURLAssetLoggingIdentifier
AVAssetSerializableCreationOptions
AVAssetSerializableCreationOptionsSupport
AVAudioMixEffectParameters
AVAudioMixSweepFilterEffectParameters
AVAudioMixSweepFilterEffectParametersInternal
AVAssetImageGeneratorInternal
AVAssetImageGenerator
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl
AVOutputDeviceCommunicationChannelImpl
AVAssetTrackInternal
AVAssetTrack
AVAssetTrack_ExportAndSerializationSupport
AVPlayerSetRateOptions
AVPlayerInternal
AVPlayer
AVPlayerVideoDisplaySleepPrevention
AVPlayerAutomaticBackgroundPrevention
AVPlayerProtectedContentPrivate
AVPlayer_PIPSupport
AVPlayerAudioPlaybackRateLimits
AVPlayerMultitaskSupport
AVPlayerSupportForMediaPlayer
AVAudioSessionMediaPlayerOnly
AVPlayerPixelBufferPoolSharing
AVPlayerFormatRestrictions
AVPlayerAutomaticMediaSelection
AVPlayerAutomaticMediaSelectionPrivate
AVPlayerAudioDeviceSupport
AVPlayerOutOfBandTextTrackRendering
AVPlayerMultichannelAudioStrategy
AVPlayerCaptionStrategySelection
AVPlayerAudioSessionParticipant
AVAudioSessionParticipant
AVPlayerQueueModificationDescription
AVPlayerVideoDecoderGPUSupport
AVPlayerLoggingIdentifier
AVPlayerAutoPauseOnRouteRemoval
AVPlayerImplicitInterruption
AVPlayerSTSLabel
AVPlayerPIPSupport
FigVideoTargetSupport
AVPlayerInterstitialSupport_Internal
PlaybackCoordination
AVPlayerLegibleFallback
AVPlayerOverlappedPlaybackSupport_Internal
AVPlayerRateState
AVAssetDownloadContentConfiguration
SecureCoding
AVAssetDownloadDefaultPrimaryContentConfiguration
AVAssetDownloadDefaultAuxiliaryContentConfiguration
AVAssetDownloadConfiguration
Internal
AVUXMDisplayManager
AVVideoCompositionRenderHintInternal
AVVideoCompositionRenderHint
AVSampleBufferAudioRendererInternal
AVSampleBufferAudioRenderer
AVMediaDataRequesterConsumer
AVQueuedSampleBufferRenderingInternal
AVQueuedSampleBufferRendering
AVSampleBufferAudioRendererContentKeyEligibility
AVSampleBufferAudioRendererContentKeyEligibilityInternal
Simulation
AVFigSampleBufferAudioRendererFactory
AVAssetWriterInputMetadataAdaptorInternal
AVAssetWriterInputMetadataAdaptor
AVExternalProtectionMonitorInternal
AVExternalProtectionMonitor
AVHUDStringGenerator
AVNetworkPlaybackPerfHUDLayer
AVPlayerItemInternal
AVPlayerItem
AVPlayerItemProtectedContent
AVPlayerItemProtectedContentPrivate
AVPlayerItemLogging
AVPlayerConnection
AVPlayerItemSupportForMediaPlayer
AVPlayerItemOutputs
AVPlayerItemMediaDataCollectors
AVPlayerItemServiceIdentifier_Private
LegibleOutputSupport
MetadataOutputSupport
AVPlayerItemAVKit
AVPlayerItemVideoEnhancement
AVPlayerInterstitialSupport
AVPlayerItemTrackInternal
AVPlayerItemTrack
AVQueuePlayer
AVQueuePlayerInternal
AVPlayerAdvanceWithOverlap
AVSpecifiedLoggingIdentifierInternal
AVSpecifiedLoggingIdentifier
AVLoggingIdentifier
AVLoggingDerivedIdentifier
AVAssetLoggingIdentifierInternal
AVAssetLoggingIdentifier
AVPlayerLoggingIdentifierInternal
AVCompositionInternal
AVComposition
AVMutableCompositionInternal
AVMutableComposition
AVCompositionFormatReaderInspector
AVComposition_NSCoding
AVPlayerItemMetadataOutputInternal
AVPlayerItemMetadataOutput
AVPlayerItemMetadataOutput_Internal
AVCompositionTrackFormatDescriptionReplacement
AVCompositionTrackInternal
AVCompositionTrack
AVMutableCompositionTrackInternal
AVMutableCompositionTrack
AVNotificationSubscription
AVCancellable
AVPublisher
AVPropertyValuePublisher
AVMapPublisher
AVSwitchToLatestPublisher
AVSinkSubscriber
AVTimeFormatterInternal
AVTimeFormatter
AVCompositionTrackSegmentInternal
AVCompositionTrackSegment
AVMovieTrackInternal
AVMovieTrack
AVMutableMovieTrackInternal
AVMutableMovieTrack
AVMutableMovieTrackFormatDescriptions
AVMutableMovieTrack_FormatDescriptions
AVMutableMovieTrackTrackLevelEditing
AVMutableMovieTrackSampleLevelEditing
AVMutableMovieTrack_SampleLevelEditingPrivate
AVMutableMovieTrackMetadataEditing
AVMutableMovieTrackTrackAssociations
AVAssetReaderInternal
AVAssetReader
AVAssetReaderOutputInternal
AVAssetReaderOutput
AVAssetReaderTrackOutputInternal
AVDecodedVideoSettingsForFig
AVAssetReaderTrackOutput
AVAssetReaderAudioMixOutputInternal
AVAssetReaderAudioMixOutput
AVAssetReaderVideoCompositionOutputInternal
AVAssetReaderVideoCompositionOutput
AVAssetReaderSampleReferenceOutputInternal
AVAssetReaderSampleReferenceOutput
AVAssetWriterConfigurationState
AVAssetWriterInternal
AVAssetWriter
AVAssetWriterUnknownHelper
AVAssetWriterFigAssetWriterNotificationHandler
AVFragmentedMediaDataReportInternal
AVFragmentedMediaDataReport
AVAssetWriterWritingHelper
AVAssetWriterFigAssetWriterNotificationHandlerDelegate
AVWorkaroundNSBlockOperation
AVAssetWriterFinishWritingHelper
AVFigAssetWriterFinishWritingAsyncOperation
AVAssetWriterTerminalHelper
AVAssetWriterFailedTerminalHelper
AVAssetWriterClientInitiatedTerminalHelper
AVAssetWriterHelper
AVAssetWriterInputGroupInternal
AVAssetWriterInputGroup
AVAssetWriterInputSelectionOption
AVCoordinatedPlaybackSuspension
AVCoordinatedPlaybackParticipant
AVPlaybackCoordinator
AVPlayerPlaybackCoordinator
AVOutputDeviceAuthorizationSessionInternal
AVOutputDeviceAuthorizationSession
AVOutputDeviceAuthorizationRequestInternal
AVOutputDeviceAuthorizationRequest
AVAssetWriterInputConfigurationState
AVAssetWriterInputInternal
AVAssetWriterInput
AVAssetWriterInputUnknownHelper
AVAssetWriterInputWritingHelper
AVAssetWriterInputMediaDataRequesterDelegate
AVAssetWriterInputInterPassAnalysisHelper
AVAssetWriterInputNoMorePassesHelper
AVAssetWriterInputTerminalHelper
AVAssetWriterInputHelper
AVAssetWriterInputPixelBufferAdaptorInternal
AVAssetWriterInputPixelBufferAdaptor
AVFigAssetWriterTrack
AVFigAssetWriterAudioTrack
AVFigAssetWriterVideoTrack
AVFigAssetWriterGenericTrack
AVAssetWriterInputMediaDataRequester
AVAssetWriterInputPassDescriptionResponder
AVAssetWriterInputFigAssetWriterEndPassOperation
AVAssetWriterInputPassDescriptionInternal
AVAssetWriterInputPassDescription
AVVideoCompositionInstructionInternal
AVVideoCompositionInstruction
AVMutableVideoCompositionInstruction
AVVideoCompositionLayerInstructionInternal
AVVideoCompositionLayerInstruction
AVMutableVideoCompositionLayerInstruction
AVVideoCompositionInternal
AVVideoCompositing
AVVideoComposition
AVVideoCompositionColorimetery
AVVideoCompositionColorimeteryUtilities
AVVideoCompositionFiltering
AVMutableVideoComposition
AVVideoCompositionCoreAnimationTool
AVVideoCompositionCoreAnimationToolInternal
AVAssetVideoCompositionUtility
AVAssetExportSessionInternal
AVAssetExportSession
AVStreamDataParserInternal
AVStreamDataParser
AVStreamDataParserTypeSupport
AVStreamDataParser_FigManifold
AVStreamDataParser_ContentKeySessionDelegate
AVContentKeySessionDelegate
AVStreamDataParser_ContentKeyRequestSupport
AVStreamDataParser_Internal
AVStreamDataParserContentKeyEligibility
AVMediaDataRequester
AVAPSyncOutputDeviceCommunicationChannelManager
AVOutputDeviceCommunicationChannelManager
AVAPSyncOutputDeviceCommunicationChannelImpl
AVSynchronizedLayerInternal
AVSynchronizedLayer
AVOutputDeviceInternal
AVOutputDevice
AVOutputDeviceFrecencyManager
AVOutputDeviceFrecentsReader
AVOutputDeviceFrecentsReading
AVOutputDeviceFrecentsWriter
AVOutputDeviceFrecentsWriting
AVOutputDeviceLegacyFrecentsReader
AVOutputDeviceLegacyFrecentsWriter
AVOutputDeviceAuthorizedPeerInternal
AVOutputDeviceAuthorizedPeer
AVPairedDeviceInternal
AVPairedDevice
AVLocalOutputDeviceImpl
AVOutputDeviceCommunicationChannel
AVClusterComponentOutputDeviceDescription
AVOutputDeviceDescription
AVSampleBufferVideoRenderer
AVFigVideoQueueFactory
VideoPerformanceMetrics
AVSampleBufferVideoRendererProtectedContent
AVSampleBufferVideoRendererImageProtection
AVSampleBufferVideoRendererVideoDisplaySleepPrevention
PowerOptimization
AVSampleBufferVideoRendererOutputs
AVMetadataEnumerator
AVFigEndpointOutputDeviceImpl
AVOutputDeviceFigEndpointImplFetching
AVFigEndpointSecondDisplayModeToken
AVAssetCustomURLRequest
AVAssetCustomURLBridgeForNSURLSession
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
AVNSURLProtocolRequest
AVAssetCustomURLBridgeForNSURLProtocol
AVAssetCustomURLAuthentication
AVAssetTrackSegment
AVAudioMix
AVMutableAudioMix
AVAudioMixInternal
AVAudioMixInputParameters
AVAudioMixInputParametersInternal
AVMutableAudioMixInputParameters
AVAudioMixCrossFadeUtility
AVOutputContextInternal
AVOutputContextCommunicationChannelInternal
AVOutputContextCommunicationChannel
AVOutputContextDestinationChangeInternal
AVOutputContextDestinationChange
AVOutputContextManagerInternal
AVOutputContextManager
AVAssetPlaybackAssistant
AVRunLoopConditionRunLoopState
AVRunLoopCondition
AVAssetInspector
AVFormatReaderInspector
AVPlaybackItemInspector
AVStreamingResourceInspector
AVFigAssetInspector
AVScheduledAudioParametersInternal
AVScheduledAudioParameters
AVScheduledAudioParameters_Internal
AVMutableScheduledAudioParameters
AVOperation
ArrayOfOperations
AVBlockOperation
AVGlobalOperationQueue
AVOperationQueueWithFundamentalDependency
AVDepartureAnnouncingObjectMonitor
AVWaitForNotificationOrDeallocationOperation
AVObjectMonitoring
AVWeakReferencingDelegateStorage
AVDelegateStorage
AVAssetInspectorLoader
AVAssetSynchronousInspectorLoader
AVAssetMakeReadyForInspectionLoader
AVPlaybackItemInspectorLoader
AVFigAssetInspectorLoader
AVUnreachableAssetInspectorLoader
AVRoutingSessionManager
AVRoutingSession
AVRoutingSessionDestination
AVAssetTrackInspector
AVTrackReaderInspector
AVFigAssetTrackInspector
AVCompositionTrackReaderInspector
AVPlaybackItemTrackInspector
AVWeakReference
AVRetainReleaseWeakReference
AVSampleBufferGeneratorInternal
AVSampleBufferGenerator
AVSampleBufferRequestInternal
AVSampleBufferRequest
AVSampleBufferGeneratorBatch
AVAssetSegmentReportSampleInformation
AVAssetSegmentTrackReport
AVAssetSegmentReport
AVCallbackContextRegistry
AVStreamDataAssetTrackInspector
AVStreamDataAssetInspector
AVStreamDataInspectionOnlyAsset
AVStreamDataAsset
AVStreamDataAsset_StreamDataParsing
AVPlayerItemMediaDataCollectorInternal
AVPlayerItemMediaDataCollector
AVCMNotificationDispatcher
AVCMNotificationDispatcherListenerKey
AVSynchronousBlockScheduler
AVBlockScheduler
AVSerializedMostlySynchronousReentrantBlockScheduler
AVEventWaiter
AVDispatchOnce
AVAssetTrackGroupInternal
AVAssetTrackGroup
AVMetadataGroup
AVMetadataGroupSerializationSupport
AVMetadataGroupIdentification
AVTimedMetadataGroupInternal
AVTimedMetadataGroup
AVTimedMetadataGroupSerializationSupport
AVMutableTimedMetadataGroup
AVDateRangeMetadataGroupInternal
AVDateRangeMetadataGroup
AVDateRangeMetadataGroup_Private
AVDateRangeMetadataGroup_Internal
AVDateRangeMetadataGroup_Local
AVMutableDateRangeMetadataGroup
AVManagedAssetCacheInternal
AVManagedAssetCache
AVAssetDownloadCacheInternal
AVAssetDownloadCache
AVExecutionEnvironment
NSValueCMVideoDimensionsExtensions
AVDelegatingPlaybackCoordinatorPlaybackControlCommand
AVDelegatingPlaybackCoordinatorPlayCommand
AVDelegatingPlaybackCoordinatorBufferingCommand
AVDelegatingPlaybackCoordinatorPauseCommand
AVDelegatingPlaybackCoordinatorSeekCommand
AVDelegatingPlaybackCoordinator
AVPlayerItemAccessLogInternal
AVPlayerItemAccessLog
AVPlayerItemAccessLogEventInternal
AVPlayerItemAccessLogEvent
AVPlayerItemAccessLogEventServiceIdentifier_Private
AVFragmentedMovie
AVFragmentMinding
AVFragmentedMovieMinder
AVFragmentedMovieTrackInternal
AVFragmentedMovieTrack
AVPlayerItemErrorLogInternal
AVPlayerItemErrorLog
AVPlayerItemErrorLogEventInternal
AVPlayerItemErrorLogEvent
AVExternalPlaybackMonitor
AVAudioSessionMediaPlayerOnlyInternal
AVMediaSelectionGroupInternal
AVMediaSelectionGroup
AVAssetMediaSelectionGroup
AVMediaSelectionOptionInternal
AVMediaSelectionOption
AVMediaSelectionTrackOption
AVMediaSelectionKeyValueOption
AVMediaSelectionNilOption
AVFigObjectInspector
AVOutputSettings
AVFormatSpecification
AVMediaFileType
AVMediaFileOutputSettingsValidator
AVOutputSettingsValidation
AVWAVEOutputSettingsValidator
AVAIFFOutputSettingsValidator
AVAIFCOutputSettingsValidator
AVISOOutputSettingsValidator
AVGenericMediaFileOutputSettingsValidator
AVAudioOutputSettings
AVAVAudioSettingsAudioOutputSettings
AVReencodedAudioSettingsForFig
AVDecodedAudioSettingsForFig
AVVideoOutputSettings
AVPixelBufferAttributesVideoOutputSettings
AVAVVideoSettingsVideoOutputSettings
AVReencodedVideoSettingsForFig
AVAudioSettingsValueConstrainer
AVFloat64Range
AVAggregateAssetDownloadTask
AVAssetDownloadSessionInternal
AVAssetDownloadSession
AVAssetDownloadSession_DelegateSupport
AVAssetDownloadSession_StreamingAssetOrchestratorSupport
AVAssetDownloadSession_Local
AVSampleCursorInternal
AVSampleCursor
AVPlayerItemOutputInternal
AVPlayerItemOutput
AVPlayerItemVideoOutputInternal
AVPlayerItemVideoOutput
AVFragmentedAssetInternal
AVFragmentedAsset
AVFragmentedAssetMinderInternal
AVFragmentedAssetMinder
AVFragmentedAssetTrackInternal
AVFragmentedAssetTrack
AVPixelBufferAttributeMediator
AVSampleBufferDisplayLayerContentLayer
AVSampleBufferDisplayLayer
AVSampleBufferDisplayLayerContentKeyEligibility
AVSampleBufferDisplayLayerContentKeyEligibilityInternal
AVSampleBufferDisplayLayerQueueManagement
ProtectedContent
AVSampleBufferDisplayLayerImageProtection
AVSampleBufferDisplayLayerVideoDisplaySleepPrevention
AVSampleBufferDisplayLayerPowerOptimization
AVSampleBufferDisplayLayerOutput
AVAssetResourceLoaderRemoteHandlerContext
AVURLAuthenticationChallenge
AVAssetResourceLoaderRequest
AVAssetResourceLoaderInternal
AVAssetResourceLoader
AVAssetResourceLoaderContentKeySupport
AVAssetResourceLoaderURLAuthenticationChallengeSender
NSURLAuthenticationChallengeSender
AVAssetResourceLoaderContentInformationCache
AVAssetResourceLoaderURLSessionSupport
AVAssetResourceLoaderRemoteHandlerSupport
AVAssetResourceLoadingContentInformationRequestInternal
AVAssetResourceLoadingContentInformationRequest
AVAssetResourceLoadingDataRequestInternal
AVAssetResourceLoadingDataRequest
AVAssetResourceLoadingRequestInternal
AVAssetResourceLoadingRequest
AVAssetResourceLoadingRequestorInternal
AVAssetResourceRenewalRequest
AVAssetResourceLoadingRequestor
AVSampleBufferRenderSynchronizerInternal
AVSampleBufferRenderSynchronizer
AVSampleBufferRenderSynchronizerRendererManagement
AVSampleBufferRenderSynchronizerRendererRestrictions
AVSampleBufferRenderSynchronizerTimeObservation
AVLocalFigSampleBufferRenderSynchronizerFactory
AVFigSampleBufferRenderSynchronizerFactory
AVAssetVariant
AVAssetVariantVideoAttributes
AVAssetVariantAudioAttributes
AVAssetVariantAudioRenditionSpecificAttributes
AVAssetVariantQualifier
EnvironmentalConditions
AVAssetVariantChannelCountPredicate
AVAssetVariantPresentationWidthPredicate
AVAssetVariantPresentationHeightPredicate
AVTextStyleRuleInternal
AVTextStyleRule
AVPlayerMediaSelectionCriteria
FigDictionaryRepresentation
AVAsynchronousCIImageFilteringRequestInternal
AVAsynchronousCIImageFilteringRequest
AVCoreImageFilterVideoCompositionInstruction
AVCoreImageFilterCustomVideoCompositor
AVPlayerItemLegibleOutputRealDependencyFactory
AVPlayerItemLegibleOutputDependencyFactory
AVPlayerItemLegibleOutputInternal
AVPlayerItemLegibleOutput
AVOutputSettingsAssistantInternal
AVOutputSettingsAssistant
Dependencies
AVExportSettingsOutputSettingsAssistantBaseSettings
AVOutputSettingsAssistantBaseSettingsProvider
AVExportSettingsOutputSettingsAssistantVideoSettingsAdjuster
AVOutputSettingsAssistantVideoSettingsAdjuster
AVIOKitOutputSettingsAssistantVideoEncoderCapabilities
AVOutputSettingsAssistantVideoEncoderCapabilities
AVMediaSelectionInternal
AVMediaSelection_Local
AVMediaSelection
AVMutableMediaSelection
AVExternalDeviceHIDInternal
AVExternalDeviceHID
AVExternalDeviceIconInternal
AVExternalDeviceIcon
AVExternalDeviceInternal
AVExternalDeviceScreenBorrowToken
AVExternalDeviceTurnByTurnToken
AVExternalDevice
AVFigEndpointOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices_FigEndpointImpl
AVPlayerCaptionLayer
AVVideoCompositingParameterValidationDelegate
AVCustomVideoCompositorSession
AVCustomVideoCompositorSession_FigCallbackHandling
AVDisplayCriteriaInternal
AVDisplayCriteria
_AVDisplayCriteriaPrivateMethods
AVKVODispatcher
AVObservationBlockFactory
AVWeakObservationBlockFactory
AVClientBlockKVONotifier
AVKVONotifier
AVCallbackCancellation
AVKVOIntrospection
AVWeaklyObservedObjectClientBlockKVONotifier
AVWeakObservableCallbackCancellationHelper
LegacyCallbackMethod
AVKeyPathDependencyManager
AVKeyPathDependencyRegistration
AVKeyPathDependency
AVTwoPartKeyPath
AVKeyPath
AVKeyPathFlattener
AVKeyPathFlattenerKVOIntrospectionShim
AVAsynchronousVideoCompositionRequestInternal
AVAsynchronousVideoCompositionRequest
AVRouteDetectorInternal
AVRouteDetector
AVVideoCompositionRenderContextInternal
AVVideoCompositionRenderContext
AVMediaDataStorageInternal
AVMediaDataStorage
AVMovieInternal
AVMovie
AVMovieMovieHeaderSupport
AVMutableMovieInternal
AVMutableMovie
AVMutableMovieMovieLevelEditing
AVMutableMovieTrackLevelEditing
AVMutableMovieMetadataEditing
AVPlayerItemSampleBufferOutputConfiguration
AVPlayerItemSampleBufferOutput
AVPlayerItemSampleBufferOutput_Internal
AVContentKeyRequestInternal
AVContentKeyRequest
AVContentKeyRequest_ExternalProtectionStateSupport
AVContentKeyReportInternal
AVPersistableContentKeyRequest
AVContentKeyResponseFairPlayStreaming
AVContentKeyResponseClearKey
AVContentKeyResponseAuthorizationToken
AVContentKeyResponseInternal
AVContentKeyPSSHRequestTracker
AVContentKeyRequestParams
AVContentKeyResponse
AVContentKeySessionInternal
AVContentKeySession
AVContentKeySessionPendingExpiredSessionReports
AVContentKeySessionPrivateUtilities
AVContentKeyRequestSupport
AVContentKeySession_Internal
AVContentKeyGroup_Support
FigContentKeyBoss
AVContentKeyReportGroup
AVContentKeyReportGroup_Internal
AVContentKeyReportGroupPrivateUtilities
AVContentKeySpecifier
Private
AVContentKey
APSyncController
AVAPSyncControllerRemoteOutputDeviceGroupImpl
OEMIcon
AVExportSessionExportAsynchronouslyCompletionHandler
T@"<AVLoggingIdentifier>",R,&,N
CMNotificationCenter
T@"AVAsset",R,N
CMTimeRangeValue
T@"AVPlayerInterstitialEvent",R
CMVideoDimensionsValue
T@"AVSampleBufferVideoOutput",N
IAPDCallbackToken
T@"CIImage",R,N
IFramePrefetchTargetDimensions
T@"NSArray",C,N
JSONObjectWithData:options:error:
T@"NSArray",R,C
MACAddress
T@"NSError",R,N
MIMEType
T@"NSString",R,N,V_languageCode
OEMIconVisible
TB,N,GisEnabled
RTCReportingFlags
TB,R,N,GisEmpty
STSLabel
Tq,R,N,G_status
T#,&,N
Tq,R,N,V_offset
T#,R,N
T{CGAffineTransform=dddddd},R,N
T@"<AVAssetResourceLoaderDelegate>",R,W,N
T@"<AVAssetWriterDelegate>",W,V_delegate
_accessLogArray
T@"<AVAssetWriterInputMediaDataRequesterDelegate>",W
_addFAListeners
T@"<AVContentKeySessionDelegate>",R,W
_assetInspector
T@"<AVLoggingIdentifier>",&,N
_audioConverter
T@"<AVOutputDeviceAuthorizationSessionDelegate>",W
_avPlayerLayers
T@"<AVOutputDeviceImpl>",R,V_secondaryImpl
_bounds
T@"<AVOutputDeviceImplSupport>",W,V_implEventListener
_bumpChangeSeed
T@"<AVPlaybackCoordinatorPlaybackControlDelegate>",R,W,N
_canPlayReverse
T@"<AVPlayerItemMetadataCollectorPushDelegate>",R,W,N
_changeStatusToFailedWithError:
T@"<AVPlayerItemOutputPullDelegate>",R,W
_client
T@"<AVPlayerPlaybackCoordinatorDelegate>",W
_configurePlayerWhenEnteringPIP
T@"<AVStreamDataParserOutputHandling>",R,N
_contentKeySessionWeakReference
T@"<AVVideoCompositionInstruction>",&,N,V_instruction
_copyNextSampleBufferForAdaptor
T@"<NSObject><NSCopying>",&
_currentTrackID
T@"<NSURLSessionDataDelegate>",R,N
_customPerfInfo
T@"AVAsset",R,W,N
_detachVideoLayersForSuspension
T@"AVAssetDownloadContentConfiguration",R,N,V_primaryContentConfiguration
_encounteredStreamDiscontinuity
T@"AVAssetResourceLoader",R,N
_endSuspension:
T@"AVAssetResourceLoadingContentInformationRequest",R,N
_exportSettings
T@"AVAssetResourceLoadingRequestor",R,N
_failWithError:
T@"AVAssetTrack",R,N
_figAssetReader
T@"AVAssetVariantVideoAttributes",R,N
_figAssetWriter
T@"AVAssetWriterHelper",R,&,G_helper
_figTrackReader
T@"AVAssetWriterInput",R,N,V_input
_floatForProperty:defaultValue:
T@"AVAssetWriterInputHelper",&,N,G_helper,S_setHelper:
_fragmentMinderAssociationCount
T@"AVAssetWriterInputPassDescription",R,N
_getUniformMediaSubtypeIfExists
T@"AVAudioMix",C,N
_hasScaledEdits
T@"AVAudioSession",&,N
_helper
T@"AVContentKeyReportGroup",R
_initWithFigMetadataDictionary:
T@"AVContentKeySpecifier",R,VcontentKeySpecifier
_isReadyForInspectionOfDuration
T@"AVDateRangeMetadataGroupInternal",R,N,G_dateRangeMetadataGroupInternal
_leaveSecondScreenModeForLayer:
T@"AVDisplayCriteria",R,N
_loader
T@"AVMediaDataStorage",C,N
_loadingRequest
T@"AVMediaFileType",C,N,V_mediaFileType
_looper
T@"AVMediaFileType",R,N,V_mediaFileType
_makeValueReady
T@"AVMediaSelectionOption",R,N
_mediaSelection
T@"AVMetadataItem",R,W
_mindsFragments
T@"AVOutputDevice",R,N
_mutableVideoCompositionWithAsset:applyingCIFiltersWithHandler:
T@"AVOutputDevice",W,V_parentOutputDevice
_needsLegacyChangeNotifications
T@"AVOutputDeviceCommunicationChannel",W,V_parentChannel
_observedObject
T@"AVOutputDeviceGroup",W
_openToRequests
T@"AVOutputSettings",C,N,V_outputSettings
_outputDataRate
T@"AVOutputSettings",R,N,G_outputSettingsObject
_outputObscured
T@"AVPlayer",R,W,N
_outputSettingsPresetIdentifier
T@"AVPlayerItem",&,N
_parser
T@"AVPlayerItem",R,N,V_afterItem
_pendingPrerollCompleteCallback
T@"AVPlayerItem",R,W,N
_player
T@"AVPlayerMediaSelectionCriteria",&,N
_preferredPixelBufferAttributes
T@"AVQueuePlayer",R,N
_prevVariantIdx
T@"AVRoutingSessionDestination",R
_reactToTopLevelPropertyChange:
T@"AVSampleCursor",&,N
_reader
T@"AVTimedMetadataGroupInternal",R,N,G_timedMetadataGroupInternal
_registerForObjectNotifications
T@"AVUXMDisplayManager",R,N
_removeFigPlaybackItemListeners
T@"AVVideoComposition",R,N
_rental
T@"AVVideoCompositionCoreAnimationTool",R,&,N
_sampleBufferCoalescingInterval
T@"AVVideoCompositionRenderContext",R,N
_sequenceNumber
T@"AVWeakReference",&,N,G_weakReferenceToAssetWriter,S_setWeakReferenceToAssetWriter:
_setClientName:
T@"AVWeakReference",&,V_weakReferenceToAssetWriter
_setParticipatesInAudioSession:
T@"AVWeakReference",R,N,G_weakReference
_setSyncLayersOnFigPlaybackItem
T@"AVWeakReference",R,N,G_weakReferenceToAssetReader
_setUserVolume:
T@"NSArray",&,N,V_sourceTrackIDsInClientOrder
_setWeakReferenceToAssetWriter:
T@"NSArray",C,N,S_setDisplaysUsedForPlayback:
_status
T@"NSArray",C,N,V_inputGroups
_subtitleLayers
T@"NSArray",C,N,V_mediaSelections
_takeValueFrom:
T@"NSArray",R
_tracks
T@"NSArray",R,N,G_assetAnalysisMessages
_updateConnectionToSecondScreen
T@"NSArray",R,N,V_metadata
_updateVideoTargetsOnVideoQueue
T@"NSArray",R,N,V_suspensionReasons
_viewAreasQueue
T@"NSData",C,N,V_artworkData
_weakReferenceToMonitoredObject
T@"NSData",C,V_initializationData
_windowSceneDidEnterBackground:
T@"NSData",R
actionAtItemEnd
T@"NSData",R,N
addSharedAudioOutputContextImpl
T@"NSDate",R,C,N
advanceInterval
T@"NSDate",R,N,V_beginDate
allKeys
T@"NSDictionary",&,N,V_sampleBufferSourcesByTrackID
assetDownloader
T@"NSDictionary",C,N
assetWriterInputGroupWithInputs:provisionalInputs:defaultInput:
T@"NSDictionary",C,N,V_sourcePixelBufferAttributes
audioFileTypeID
T@"NSDictionary",C,V_options
backgroundPIPAuthorizationToken
T@"NSDictionary",R,C
byValue
T@"NSDictionary",R,N
cacheContentInformation:forURL:
T@"NSDictionary",R,N,G_figMetadataOutputsDictionaryOptions
canEnterPIPMode
T@"NSDictionary",R,N,V_assetInitializationOptions
canStepBackward
T@"NSDictionary",R,N,V_outputSettingsDictionary
chapterDataType
T@"NSDictionary",R,V_options
checkMutability
T@"NSLocale",C,N
componentsFromLocaleIdentifier:
T@"NSLocale",R,N
conformsToType:
T@"NSNumber",R,N,V_audioSpatializationMode
contentKeySessionWithKeySystem:
T@"NSNumber",R,N,V_displayResolutionWidth
controlTimebase
T@"NSObject<OS_dispatch_group>",R,V_filteringRequestsInFlight
cryptor
T@"NSObject<OS_dispatch_queue>",R,N
currentItemPresentationSizeSink
T@"NSObject<OS_xpc_object>",R,N,V_endpoint
customURLLoader
T@"NSOperationQueue",R,N
dealloc
T@"NSString",&,N,G_STSLabel,S_setSTSLabel:
delegateStorage
T@"NSString",C,N
dispatchIVarWrite:locked:block:
T@"NSString",C,N,V_extendedLanguageTag
durationWatched
T@"NSString",C,N,V_mediaType
enabled
T@"NSString",R
endDate
T@"NSString",R,C,N
entryReasonCode
T@"NSString",R,N,V_client
extendedLogData
T@"NSString",R,N,V_deviceName
extraAttributes
T@"NSString",R,N,V_formattedDisplayString
figAssetReaderExtractionOptions
T@"NSString",R,N,V_modelID
figCPEProtector
T@"NSString",R,N,V_reasonForWaitingToPlay
figPlaybackItem
T@"NSString",R,N,V_topLevelKey
figSynchronizer
T@"NSURL",C,N
firmwareVersion
T@"NSURL",C,N,V_directoryForTemporaryFiles
getReturnValue:
T@"NSURL",R
handler
T@"NSURLRequest",C,N
hasEnabledAudio
T@"NSURLRequest",R,N
hasNewPixelBufferForSourceTime:
T@"NSURLResponse",R,C
immediateWakeUp
T@"NSURLSession",&,N,V_session
initWithAssetReaderTrackOutput:
T@"NSUUID",R,N
initWithDependencyFactory:mediaSubtypesForNativeRepresentation:
T@,C,V_identifier
initWithFormat:
T@,R,N
initWithOutputDeviceDiscoverySessionAvailableOutputDevicesImpl:
T@,R,W
initWithPreset:
T@?,C,N,V_completionHandler
inputParameters
T@?,C,N,V_figAssetProvider
isAtEnd
T@?,R,N,V_requestBlock
isClusterLeader
TB,GisRouteDetectionEnabled
isEntireLengthAvailableOnDemand
TB,N,G_disallowsAutoPauseOnRouteRemovalIfNoAudio,S_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:
isEqualToValue:
TB,N,G_participatesInAudioSession,S_setParticipatesInAudioSession:
isHeadTrackedSpatialAudioActive
TB,N,G_readSingleSample,S_setReadSingleSample:
isMuted
TB,N,GisByteRangeAccessSupported
isReady
TB,N,GisFullWidth
ivarAccessQueue
TB,N,GisOverscanSubtitleSupportEnabled
keyPath
TB,N,V_expectsMediaDataInRealTime
keyPathsForValuesAffectingMuted
TB,N,V_marksOutputTrackAsEnabled
layersQ
TB,N,V_optimizesAuxiliaryContentConfigurations
logicalDeviceID
TB,N,V_preferCoordinatedPlaybackBehavior
markAsCancelled
TB,N,V_requiresInProcessOperation
maxSize
TB,N,V_spatialDiagnostics
mediaSelectionGroupDictionaries
TB,R
metrics
TB,R,G_markAsFinishedCalled
minimum
TB,R,GisAirPlayVideoActive
numberWithBool:
TB,R,GisFailed
observedBitrate
TB,R,N
opaqueSessionID
TB,R,N,G_isPIPModePossible
originalRequest
TB,R,N,G_isRentalPlaybackStarted
outputContextImplForControllingOutputDeviceGroupWithID:options:
TB,R,N,G_trimsSampleDurations
pendingRequests
TB,R,N,GisApplicationAuthorizedForPlayback
playableOffline
TB,R,N,GisAudioPlaybackEnabledAtAllRates
playerPublisher
TB,R,N,GisCancelled
playing
TB,R,N,GisCompatibleWithSavedPhotosAlbum
preferredMaximumAudioSampleRate
TB,R,N,GisContentAuthorizedForPlayback
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
TB,R,N,GisEligibleToBePredictedOutputDevice
preventsCapture
TB,R,N,GisExcludedFromAutoselectionInTrackGroup
proposedGroupID
TB,R,N,GisFinished
registeredOutputSettingsClasses
TB,R,N,GisInUseByPairedDevice
removeObserver:
TB,R,N,GisPlayable
request
TB,R,N,GisPlaying
requestedOffset
TB,R,N,GisReadable
runLoop
TB,R,N,GisReadyToPlay,V_readyToPlay
screenViewAreas
TB,R,N,GisVirtualCaptureCardSupported
session
TB,R,N,V_displaysNonForcedSubtitles
setAnchorPoint:
TB,R,N,V_isSyncSample
setBluetoothCompanyIdentifiers:
TB,R,N,V_usesLegacyAutomaticWaitingBehavior
setBorderWidth:
TI,N
setClosedCaptionDisplayEnabled:
TI,R,N,G_figMediaType
setCue:
TQ,R
setFigMetadata:
TQ,R,N,V_authHandlerObjectID
setInitialDate:
TQ,R,N,V_customURLHandlerObjectID
setInstruction:
T^{CGColor=},&,N
setKey:
T^{OpaqueCMTimebase=},&
setLimitCursor:
T^{OpaqueCMTimebase=},R,&
setMaxConcurrentOperationCount:
T^{OpaqueFigAssetReader=},R,N,G_figAssetReader
setNaturalSize:
T^{OpaqueFigAssetWriter=},R,N,V_figAssetWriter
setPlatformIdentifier:forQueue:
T^{OpaqueFigFormatReader=},R,N,G_formatReader
setPreferredMediaChunkDuration:
T^{OpaqueFigPlaybackItem=},&,N,G_playbackItem,S_setPlaybackItem:
setPreloadsEligibleContentKeys:
T^{OpaqueFigTrackReader=},R,N,G_figTrackReader
setProducesCombinableFragments:
T^{_CFURLConnection=},N
setRate:withVolumeRampDuration:
T^{__CFRunLoop=},R,N,V_runLoop
setRenewalDate:
T^{__CVBuffer=},&,N,V_sourcePBuf
setRequestedTimeToleranceAfter:
T^{__CVPixelBufferPool=},R,N,G_pixelBufferPool
setSourceClock:
T^{opaqueCMFormatDescription=},R,N
setSourceTrackIDForFrameTiming:
T^{opaqueCMNotificationCenter=},R,N
setSourceVideoMinFrameDuration:
Td,N,G_fragmentMindingInterval,S_setFragmentMindingInterval:
setSuppressesAudioOnlyVariants:
Td,R
setURL:
Td,R,N,V_maximum
sourceVideoAverageFrameDuration
stepInPresentationOrderByCount:
Tf,N,V_preferredRate
stringByAppendingPathExtension:
Tf,R
supportsHeadTrackedSpatialAudio
Tf,R,N,V_anticipatedPlaybackRate
textStyleRulesFromPropertyList:
Ti,N
totalFrameDelay
Ti,N,V_mediaTimeScale
trackID
Ti,N,V_trackID
tracksPublisher
Ti,R,D,N
Ti,R,N,V_trackID
videoAttributes
Tq,N,V_chunkAlignment
videoSettingsAdjusterForPreset:
Tq,N,V_initialMovieFragmentSequenceNumber
wakeUpImageTime
Tq,N,V_prevStallCount
weakReferenceToAssetWriterInput
.cxx_destruct
PIPModePossible
AVKitData
T@"<NSObject><NSCopying>",R,C,N
CMTimeMappingValue
T@"AVAssetWriterInputPassDescription",R,N,V_nextPassDescription
CMTimeValue
T@"AVSampleBufferGenerator",R,N
HAPConformance
T@"CIImage",&,N,V_sourceCIImage
T@"NSArray",C,D
IOwnTheFigPlayer
T@"NSArray",C,N,V_metadataItems
KVOChangeSerializer
T@"NSArray",R,N
MFiCertificateSerialNumber
T@"NSString",C,N,V_languageCode
OEMIconLabel
T@"NSURL",R,C,N
OEMIcons
TB,N,V_signaled
SHA1Digest
TB,R,N,GisReadyForMoreMediaData
STSLabelSinks
Tq,R,N,V_length
T#,R
T{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}},R,N,V_timeMapping
T#,R,N,G_classForTrackInspectors
T@"<AVAssetWriterDelegate>",W
T@"<AVAssetWriterFigAssetWriterNotificationHandlerDelegate>",W
_addCaptionLayer:subtitleLayer:
T@"<AVAudioSessionDelegateMediaPlayerOnly>"
_addFPListeners
T@"<AVExternalDeviceDelegate>",N
_assetTrackInfo
T@"<AVOutputContextCommunicationChannelImpl>",R,N
_auxiliaryContentConfigurations
T@"<AVOutputDeviceCommunicationChannelDelegate>",W
_blocks
T@"<AVOutputDeviceImplSupport>",W
_bridge
T@"<AVOutputDeviceImplSupport>",W,V_implSupportEventListener
_cachedDuration
T@"<AVPlayerItemLegibleOutputPushDelegate>",R,W,N
_canStepForward
T@"<AVPlayerItemMetadataOutputPushDelegate>",R,W,N
_chunkAlignment
T@"<AVPlayerItemSampleBufferOutputDelegate>",R,W
_clientPriority
T@"<AVSampleBufferVideoOutputPullDelegate>",R,W,N
_contentKeyBoss
T@"<AVVideoCompositing>",R,N
_contextOutputDevicesDidChange:
T@"<AVVideoCompositionInstruction>",R,N
_copyVideoQueue
T@"<NSObject><NSCopying>",C,N
_currentWindowSceneIsForeground
T@"AVAsset",R,&,N
_dateRangeMetadataGroupInternal
T@"AVAssetCustomURLBridgeForNSURLProtocol",W,N,V_bridge
_enabledTrackFormatDescriptions
T@"AVAssetReaderTrackOutput",R,N
_encryptionMode
T@"AVAssetResourceLoader",W,N
_eventCompleted
T@"AVAssetResourceLoadingDataRequest",R,N
_externalDevice
T@"AVAssetSegmentReportSampleInformation",R,N,V_firstVideoSampleInformation
_fetchApplicableOutputDataRates
T@"AVAssetVariantAudioAttributes",R,N
_figAssetTrackPropertiesForKeys
T@"AVAssetWriterConfigurationState",R,N,V_configurationState
_figManifold:formatDescription:orDecryptorDidChange:forTrackID:
T@"AVAssetWriterInput",R,N
_firstTrackGroupWithMediaTypes:
T@"AVAssetWriterInputConfigurationState",R,N,V_configurationState
_flushCallbacks
T@"AVAssetWriterInputPassDescription",&,N,V_currentPassDescription
_frecentsWriter
T@"AVAsynchronousVideoCompositionRequest",&,N,V_compositingRequest
_groupMediaType
T@"AVAudioSession",&
_height
T@"AVContentKey",R
_initWithAsset:
T@"AVContentKeySpecifier",R
_inputs
T@"AVCoordinatedPlaybackParticipant",R,N
_ivarAccessLock
T@"AVDisplayCriteria",C,N
_length
T@"AVFigAssetWriterTrack",R,N,G_assetWriterTrack,V_assetWriterTrack
_loadingBatches
T@"AVMediaDataStorage",R,N
_locale
T@"AVMediaFileType",R,N
_makePlayerName
T@"AVMediaSelection",R,N
_markAsFinished
T@"AVMetadataItem",R,N
_mediaTimeScale
T@"AVOutputDevice",R
_movieTimeScale
T@"AVOutputDevice",W
_nameForLogging
T@"AVOutputDeviceCommunicationChannel",W
_object
T@"AVOutputDeviceDiscoverySessionAvailableOutputDevices",R,N
_offset
T@"AVOutputDeviceGroup",W,V_parentOutputDeviceGroup
_operationQueue
T@"AVOutputSettings",R,N
_outputInternal
T@"AVPlayer",&,N
_outputSettings
T@"AVPlayer",W,V_player
_pairedForcedOnlySubtitlesTrack
T@"AVPlayerItem",R,N
_participantStateForIdentifier:
T@"AVPlayerItem",R,N,V_item
_playbackItemPropertiesForKeys:
T@"AVPlayerLayer",W,V_playerLayer
_preferredOutputSegmentInterval
T@"AVPlayerPlaybackCoordinator",R
_prevStallCount
T@"AVRoutingSession",R
_publisherIndex
T@"AVSampleBufferVideoRenderer",R,N,G_sampleBufferVideoRenderer,V_sampleBufferVideoRenderer
_readWriteQueue
T@"AVSampleCursor",R,&,N
_reason
T@"AVURLAsset",R,N
_removeAllItems
T@"AVVideoComposition",C,N
_renderContextQ
T@"AVVideoCompositionCoreAnimationTool",&,N
_resourceLoader
T@"AVVideoCompositionRenderContext",&,N,V_renderContext
_secondLevelKey
T@"AVWeakReference",&,G_weakReferenceToDelegate,S_setWeakReferenceToDelegate:,V_weakReferenceToDelegate
_setAudioTapProcessor:forTrack:
T@"AVWeakReference",&,N,V_session
_setNeroVideoGravityOnFigPlayer
T@"AVWeakReference",&,V_weakReferenceToAssetWriterInput
_setRateDidChangeNotificationIncludesExtendedDiagnosticPayload:
T@"AVWeakReference",R,N,G_weakReference,V_weakReference
_setSynchronizerTimebase:error:
T@"NSArray",&,N,V_sourceSampleBufferTrackIDsInClientOrder
_setVideoCompositionRenderSize:
T@"NSArray",C,N,G_ramps,S_setRamps:
_silencesOtherPlaybackDuringPIP
T@"NSArray",C,N,V_auxiliaryContentConfigurations
_subsequentStartCompositionTime
T@"NSArray",C,N,V_inputs
_syncController
T@"NSArray",C,N,V_variantQualifiers
_terminalStatus
T@"NSArray",R,C,N
_turnOffLooping
T@"NSArray",R,N,G_mediaSelectionGroupDictionaries
_updateTimebase
T@"NSArray",R,N,V_requiredSourceTrackIDs
_videoCompositionOutputInternal
T@"NSArray",R,N,V_trackReports
_wasFlushedAutomaticallyAtTime:
T@"NSData",C,V_contentIdentifier
_weakReferenceToPlayerItemTrack
T@"NSData",C,V_keyIDFromInitializationData
_windowSceneWillEnterForeground
T@"NSData",R,C,N
activationState
T@"NSDate",C,N
addVideoTarget:
T@"NSDate",R,N
allHeaderFields
T@"NSDate",R,N,V_completionDueDate
arrayWithArray:
T@"NSDictionary",&,N,V_sourcesByTrackID
assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:
T@"NSDictionary",C,N,G_sourcePixelBufferAttributes,S_setSourcePixelBufferAttributes:
audioAttributes
T@"NSDictionary",C,N,V_trackReferences
backgroundColor
T@"NSDictionary",R
base64EncodedStringWithOptions:
T@"NSDictionary",R,C,N
bypassThreshold
T@"NSDictionary",R,N,G_figAssetReaderExtractionOptions
cachedContentInformationForURL:
T@"NSDictionary",R,N,G_trackReferences
canProvidePersistableContentKey
T@"NSDictionary",R,N,V_outputSettings
cancelCallbacks
T@"NSDictionary",R,N,V_trackReferences
checkConfigurationToOutputSegmentDataReturningDebugDescription:
T@"NSError",R
clientsOriginalVideoComposition
T@"NSLocale",R,C,N
compositionTime
T@"NSNumber",R,N
containsObject:
T@"NSNumber",R,N,V_displayResolutionHeight
context
T@"NSObject",R,N
creationOptions
T@"NSObject<OS_dispatch_queue>",R
T@"NSObject<OS_dispatch_queue>",R,N,V_requestQueue
customURLBridgeForNSURLProtocol
T@"NSOperation",R,N,V_transitionToTerminalStatusOperation
dataWithLength:
T@"NSSet",R,N
decodeTimeStamp
T@"NSString",C
didFire
T@"NSString",C,N,G_STSLabel
downloadOverdue
T@"NSString",C,N,V_mediaDataLocation
enableSTSLabels
T@"NSString",C,N,V_outputFileTypeProfile
T@"NSString",R,C
endInterruption
T@"NSString",R,N
errorStatusCode
T@"NSString",R,N,V_deviceID
externalContentProtectionStatus
T@"NSString",R,N,V_extendedLanguageTag
fastestEncoding
T@"NSString",R,N,V_mediaType
figAssetTrackNotificationSource
T@"NSString",R,N,V_reason
figMutableMovie
T@"NSString",R,N,V_secondLevelKey
figSampleCursor
T@"NSString",R,V_keySystem
fileLengthLimit
T@"NSURL",C,N,V_URL
fragmentedAssetWithURL:options:
T@"NSURL",C,N,V_sampleReferenceBaseURL
groupID
T@"NSURL",R,N
hasBatteryLevel
T@"NSURLRequest",R,C
hasEnabledVideo
T@"NSURLResponse",C,N
imageWithColor:
T@"NSURLSession",&,N
initWithAsset:group:dictionary:
T@"NSURLSessionTaskMetrics",&,N,V_metrics
initWithAuthorizationTokenData:
T@"NSUUID",R,N,V_identifier
initWithFigAssetWriter:trackID:
T@,R
initWithFrecentsFilePath:error:
T@,R,V_identifier
initWithPlayer:
T@?,C,N,V_cancellationTest
initWithURLRequestHelper:asset:
T@?,C,N,V_defaultCIContextProvider
isAdmin
T@?,R,N,V_handler
isAudibleBooksContentAuthorized
isEmpty
TB,N
isEqualToArray:
TB,N,G_isExternalProtectionRequiredForPlayback,S_setExternalProtectionRequiredForPlayback:
isHTTPLiveStreamingCacheEnabled
TB,N,G_preservesAudioSessionSampleRate,S_setPreservesAudioSessionSampleRate:
isInEar
TB,N,G_silencesOtherPlaybackDuringPIP,S_setSilencesOtherPlaybackDuringPIP:
isProxy
TB,N,GisEntireLengthAvailableOnDemand
isSelfContained
TB,N,GisModified
TB,N,V_captureCompleteURI
keyPathsForValuesAffectingError
TB,N,V_isFinished
keyRequestByID:
TB,N,V_maximizePowerEfficiency
layoutSublayers
TB,N,V_performsMultiPassEncodingIfSupported
lowercaseString
TB,N,V_producesCombinableFragments
markAsCompleted
TB,N,V_shouldOptimizeForNetworkUse
maximum
TB,N,V_usesVirtualCaptureCard
mediaSelections
TB,R,D,N
mindingInterval
TB,R,GisAboveHighWaterLevel
modelID
TB,R,GisAirPlayVideoPlaying
numberWithLong:
TB,R,GisReadyForMoreMediaData
opacity
TB,R,N,G_isAttachedToAdaptor
options
TB,R,N,G_isRental
outOfBandSource
TB,R,N,G_isStreaming
outputs
TB,R,N,GisAppleAccessory
pixelBufferPool
TB,R,N,GisAssociatedWithFragmentMinder
playbackCoordinator:didIssueBufferingCommand:completionHandler:
TB,R,N,GisAuthorizationRequiredForPlayback
playerReference
TB,R,N,GisCompatibleWithAirPlayVideo
predicateFormat
TB,R,N,GisComposable
preferredVolume
TB,R,N,GisDecodable
preservesAudioSessionSampleRate
TB,R,N,GisEnabled
processContentKeyResponseError:
TB,R,N,GisExportable
readyForDisplay
TB,R,N,GisHeadTrackedSpatialAudioActive
release
TB,R,N,GisInternal
renderTransform
TB,R,N,GisPlayableOffline
requestedLength
TB,R,N,GisPrerendered
reversesMoreVideoFramesInMemory
TB,R,N,GisReadyForDisplay
screenSafeAreas
TB,R,N,GisSelfContained
sentContentInfo
TB,R,N,V_automaticallyWaitsToMinimizeStalling
TB,R,N,V_isClusterLeader
setArtworkData:
TB,R,N,V_shouldBufferInAnticipationOfPlayback
setBorderColor:
TB,V_shouldCancelAllRequests
setCachedDateFormatterTemplate:
TI,R,N
setContentType:
TQ,N
setDefaultRate:
TQ,R,N
setGaplessInfo:
TQ,R,N,V_contentKeySessionHandlerObjectID
setInputGroups:
TQ,R,N,V_requestID
setIsExpanseMediaSession:error:
T^{CGColor=},R,&,N
setKeyIDFromInitializationData:
T^{OpaqueCMTimebase=},R
setMasterClock:
T^{OpaqueFigAsset=},R,N,G_figAsset
setMaximumSize:
T^{OpaqueFigAssetTrack=},R,N,G_figAssetTrack
setNumberStyle:
T^{OpaqueFigFormatReader=},&,N,G_formatReader,S_setFormatReader:
setPlayerLayer:
T^{OpaqueFigMutableComposition=},R,N,G_mutableComposition
setPrefersStandardDynamicRange:
T^{OpaqueFigPlaybackItem=},R,N,G_playbackItem
setPrimaryItem:
T^{OpaqueFigVideoCompositorFrame=},N,V_compositionFrame
setProvisionalAlternateGroupID:
T^{__CFDictionary=},R,N,V_requestInfo
setRenderScale:
T^{__CFRunLoopSource=},N,V_signalSource
setReportGroup:
T^{__CVPixelBufferPool=},R,N
setShouldOptimizeForNetworkUse:
T^{opaqueCMFormatDescription=},&,N,V_sourceFormatHint
setSourcePixelBufferAttributes:
T^{opaqueCMFormatDescription=},R,N,V_sourceFormatHint
setSourceTrackIDsInClientOrder:
Td,N
setSubtitleGravityNonObscuring:
Td,N,V_advanceIntervalForDataAvailability
setTrackVolume:
Td,R,N
setWithObjects:
Td,R,N,V_minimum
status2
Tf,N
stringByAppendingPathComponent:
Tf,N,V_preferredVolume
supportsFormat:
Tf,R,N
Tf,R,N,V_rate
toValue
Ti,N,G_extractionID,S_setExtractionID:
totalStallCount
Ti,N,V_movieTimeScale
trackReferences
Ti,R
tracksWithMediaCharacteristics:
Ti,R,N
valueWithPoint:
Tq,N
videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:
Tq,N,V_chunkSize
visitPredicate:
Tq,N,V_layer
Tq,N,V_prevVariantIdx
Tq,N,V_singlePassFileSize
Tq,N,V_singlePassMediaDataSize
Tq,N,V_totalStallCount
Tq,R
Tq,R,N
Tq,R,N,V_deviceSubType
Tq,R,N,V_deviceType
Tq,R,N,V_modificationType
Tq,R,N,V_segmentType
Tq,R,N,V_timeControlStatus
Tr^{OpaqueFigAsset=},R,N
Tr^{opaqueCMFormatDescription=},R
Tr^{opaqueCMFormatDescription=},R,N
Tr^{opaqueMTAudioProcessingTap=},&,N
Tr^{opaqueMTAudioProcessingTap=},R,&,N
Ts,N
Ts,N,G_alternateGroupID,S_setAlternateGroupID:
Ts,N,G_provisionalAlternateGroupID,S_setProvisionalAlternateGroupID:
Ts,N,V_alternateGroupID
Ts,N,V_provisionalAlternateGroupID
T{?=dddd},R,N
T{?=ii},R
T{?=qiIq},N
T{?=qiIq},N,V_chunkDuration
T{?=qiIq},N,V_compositionTime
T{?=qiIq},N,V_initialSegmentStartTime
T{?=qiIq},N,V_movieFragmentInterval
T{?=qiIq},N,V_overallDurationHint
T{?=qiIq},N,V_preferredOutputSegmentInterval
T{?=qiIq},N,V_sampleBufferCoalescingInterval
T{?=qiIq},R,N
T{?=qiIq},R,N,V_duration
T{?=qiIq},R,N,V_earliestPresentationTimeStamp
T{?=qiIq},R,N,V_hostClockTime
T{?=qiIq},R,N,V_itemTime
T{?=qiIq},R,N,V_presentationTimeStamp
T{?=qq},R,N
T{?={?=qiIq}{?=qiIq}},N
T{?={?=qiIq}{?=qiIq}},R,N
T{?={?=qiIq}{?=qiIq}},R,N,V_timeRange
T{CGAffineTransform=dddddd},N
T{CGAffineTransform=dddddd},N,V_preferredTransform
T{CGAffineTransform=dddddd},N,V_sourceTrackPreferredTransform
T{CGAffineTransform=dddddd},N,V_transform
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGSize=dd},N
T{CGSize=dd},N,V_naturalSize
T{CGSize=dd},R,N
T{NSEdgeInsets=dddd},N
URLAsset
URLAssetInitializationOptions
URLAssetWithURL:options:
URLByAppendingPathComponent:
URLRequest
URLRequestHelper
URLSession
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSessionDataDelegate
URLSessionDataDelegateQueue
URLSessionDidFinishEventsForBackgroundURLSession:
URLSessionOperationQueue
URLWithString:
URLWithString:relativeToURL:
UTF8String
UTTypeIDArrayFromUTTypeArray:
UUID
UUIDString
_CALayerDestinationIsTVOut
_CreateSeekID
_HIDs
_ICYIsAllowed
_ID3Metadata
_KVODispatcher
_KVOInvokers
_MFiCertSerial
_MPEG2TSIsAllowed
_MovieFragmentStreamIsAllowed
_NSErrorForError:
_SInt16ForProperty:
_SInt32ForProperty:
_STSLabel
_STSLabelPublisher
_STSLayer
_URL
_URLAsset
_UTTypes
_VTCleanApertureDictionary
_VTPixelAspectRatioDictionary
_WebVTTIsAllowed
_aboveHighWaterLevel
_aboveHighWaterLevelQueue
_absoluteURL
_accumulatedInitializationData
_acquireBackgroundAssertion
_activeMode
_adaptedVideoCompressionProperties
_addAnimationsForClosedCaptionLayer:gravity:forKey:
_addAnimationsForMaskLayer:forKey:
_addAnimationsForPIPPlaceholderLayer:forKey:
_addAnimationsForVideoLayer:size:gravity:forKey:
_addBoundsAnimationToLayer:usingAnimation:forKey:
_addChapterMetadataItem:timeRange:toChapters:fromIndex:
_addFigAssetListeners
_addFigAssetNotifications
_addFigAssetTrackNotifications
_addFigNotifications
_addFigObjectNotifications
_addFigPlaybackCoordinatorListeners:
_addFigPlaybackItemListeners
_addFigVideoQueueListeners
_addFoldedTBListeners
_addInterstitialEventCollector
_addInterstitialEventCollectorLocked:
_addItemToLinkedList_invokeOnIvarAccessQueue:afterItem:
_addLayer:
_addLegibleOutput:
_addListenersToInterstitialCoordinator:
_addMetadataCollector:
_addMetadataCollector:locked:
_addMetadataOutput:
_addMonitorListeners:
_addMutableTrackWithMediaType:copySettingsFromTrack:options:
_addPositionAnimationToLayer:usingAnimation:forKey:
_addRenderer:error:
_addSublayerTransformAnimationToLayer:fromTransform:usingAnimation:gravity:presentationSize:forKey:
_addSyncLayer:
_addToPlayQueueOfFigPlayerOfPlayer:afterFigPlaybackItemOfItem:
_addVideoOutput:
_addedAudioRendererCount
_addedAudioRendererCountInternal
_addedToSynchronizer
_advanceCurrentItemAccordingToFigPlaybackItem:
_advanceInterval
_advanceIntervalForDataAvailability
_advanceToNextItem
_affineTransformForProperty:
_afterItem
_airPlayVideoActive
_allOutputSettingsPresets
_allocateTracksOnceOnly
_allowableMIMETypes
_alternateGroupID
_ancillaryDescription
_ancillaryPerformanceInformationForDisplay
_anticipatedPlaybackRate
_appIdentifier
_appendPixelBuffer:withPresentationTime:
_appendSampleBuffer:error:
_appendStreamData:withFlags:
_appendToCachedData:
_applicableOutputDataRatesForSampleRate
_applicableOutputSampleRatesForDataRate
_applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock
_applicationSupportPath
_applyCurrentAudioMix
_applyCurrentItemPresentationSizeChangeAndForceUpdate:
_applyCurrentVideoComposition
_applyLinkedListOfItemsToFigPlayerUsingBlock:
_applyMediaSelectionOptions
_applyPlayQueueChangesToFigPlayerWithCompletionHandler:
_areExtraAttributesOf:comparableToExtraAttributesOf:
_arrayEnumerator
_arrayForProperty:
_artworkData
_asset
_assetAnalysisMessages
_assetComparisonToken
_assetCreationOptionsPrefersSandboxedOption:
_assetCreationOptionsRequiresInProcessOperation:
_assetInitializationOptions
_assetInspectorLoader
_assetInspectorOnce
_assetProxy
_assetTrackGroup
_assetTrackInspector
_assetType
_assetWriterTrack
_associateRequestWithGroupWithRequestID:error:
_associateWithLayer:forMode:
_associatedRemoteModeLayer
_attachClosedCaptionLayersToFigPlayer
_attachFigPlayerToSubtitleLayers
_attachTimerSourceToTimebase
_attachToContentKeySession:contentKeyBoss:failedSinceAlreadyAttachedToAnotherSession:
_attachToFigAssetWriterUsingFormatSpecification:sourcePixelBufferAttributes:multiPass:error:
_attachToFigPlaybackItemOfPlayerItem:
_attachToFigPlayer
_attachToPlayer:
_attachToPlayerItem:
_attachToPlayerItemTrack:figPlaybackItem:
_attachToWeakReferenceToAssetReader:
_attachVideoLayersToFigPlayer
_attachedAdaptor
_attachedToExternalContentKeySession
_audioAttributes
_audioEffect
_audioMix
_audioMixOutputInternal
_audioOutputSettingsWithAudioSettingsDictionary:exceptionReason:
_audioRendererInternal
_audioSession
_audioSpatializationMode
_audioTapProcessorForTrack:
_audioTimePitchAlgorithmForTrack:
_audioVolumeCurve
_audioVolumeCurveForTrack:
_authHandler
_authHandlerObjectID
_authorizationTokenData
_automaticallyWaitsToMinimizeStalling
_auxiliaryTrackID
_auxiliaryTrackLayer
_availableCanonicalizedChapterLanguages
_availableFileSize
_availableOutputDataRates
_availableOutputDevices
_availableOutputSampleRates
_averageAudioBitrate
_averageIndicatedBitrate
_averageVideoBitrate
_avfValidationPlist
_balanceMonitoringIsFinishedSemaphore
_basicInspectionFailureCode
_basisProperties
_beginDate
_blendingTransferFunction
_block
_blockSerializationLock
_booleanForProperty:
_bringUpToDate
_bufferPoollInitMutex
_bufferedVideoPlayed
_bufferedVideoRemaining
_buildApplicableDataRatesForSampleRates
_buildAudioConverter
_buildAvailableSampleRates
_cacheContentInformation:
_cacheMediaSelectionOption:forMediaSelectionGroup:
_cachedFragments
_cachedMediaCharacteristics
_cachedMediaSelectionCriteria
_cachedNonForcedSubtitleDisplayEnabledForCurrentItem
_cachedPresentationSizeOfCurrentItem
_cachedReferencedObjectDescription
_cachedTracks
_calculateNumberOfCopiesNeeded
_callDelegateIfNotCalledWithSuccess:error:
_callOldPrerollCompletionHandlerWithSuccess:andSetNewPrerollCompletionHandler:forRequestID:
_callback
_callbackBlock
_callbackCancellationHelper
_callbackContextRegistry
_callbackContextToken
_callbackMutex
_callbackQueue
_callbackRegistrations
_canAddInput:exceptionReason:
_canAddInputGroup:exceptionReason:
_canAddOutput:exceptionReason:
_canAddRendererInternal:error:
_canAddTrackAssociationWithTrackOfInput:type:exceptionReason:
_canApplyOutputSettings:forMediaType:sourceFormat:exceptionReason:
_canApplyTrackReferences:exceptionReason:
_canContinuePlaybackInBackgrounBasedOnAudiovisualBackgroundPlaybackPolicy:
_canPlayFastForward
_canPlayFastReverse
_canRespondByRequestingPersistableContentKeyRequest
_canSetEndpointVolumeDidChangeForEndpointWithID:
_canSetOrUseCachedContentInformation
_canStepBackward
_cancelAndFinishRequest:error:
_cancelMutex
_cancelPendingPrerollAndRegisterPrerollCompletionHandler:
_cancelPendingRequests
_cancelPendingSeekAndRegisterSeekID:withCompletionHandler:
_cancelReading
_cancelRequest:requestID:
_cancelRequestID:
_cancelRequestWithKey:fallbackHandler:
_cancellationReason
_cancellationTest
_captureCompleteURI
_carplayIsActive
_changeSeed
_channelcount
_chapterDataTypeForMediaSubType:
_chapterGroupIndex
_chapterIndex
_chapterMetadataGroupsBestMatchingPreferredLanguages:containingItemsWithCommonKeys:
_chapterMetadataGroupsWithFigChapterGroups:titleLanguage:containingItemsWithCommonKeys:
_chapterMetadataGroupsWithTitleLanguage:containingItemsWithCommonKeys:
_chapterTracks
_checkIsStreamingOnce
_chunkDuration
_chunkSize
_classForAssetTracks
_classForFigAssetInspectorLoader
_classForMovieTracks
_classForTrackInspectors
_cleanApertureDict
_cleanupAfterPlayingLastLoopingCopy
_cleanupFigCallbacks
_clearCachedMediaSelectionGroup:
_clearContext
_clientCustomCompositor
_clientCustomCompositorQ
_clientError
_clientErrorQ
_clientExpectsISOUserDataKeysInQuickTimeUserDataKeySpace
_clientName
_clientProvidesNaturalSize
_clientRequestedPlaybackCoordinator
_clientRequiredPixelBufferAttributes
_clientURLLoadingRepresentsAccurateNetworkStatistics
_closedCaptionLayer
_closedCaptionLayers
_cmNotificationCenter
_collectUncollectables
_collectUncollectables_invokedFromDeallocAndFinalize
_collectorInternal
_colorId
_colorPropertiesAreSetInVideoComposition:
_commChannelUUID
_commandOrderIndex
_common_init
_communicationChannelsForUUIDs
_compactDescription
_comparisonToken
_completedDecodeForPrerollForRequestID:
_completionDueDate
_completionHandler
_completionHandlerQueue
_compositingRequest
_compositionFrame
_compositionFrame:atTime:requiresRenderUsingSources:requiresSampleBuffersUsingSources:withInstruction:
_compositionTime
_condition
_configurationGroup
_configurationQueue
_configurationState
_configureLoopingItem:
_configurePlaybackItemAndReturnError:
_configurePlayerWhenLeavingPIP
_configureVideoCompositionColorProperties
_configureWithVideoQueue:
_configuredTimeOffsetFromLive
_conformingDataTypes
_connection
_contentIdentifier
_contentInformationRequest
_contentKeyGroups
_contentKeyRecipients
_contentKeyRequest
_contentKeyRequestForCryptorUUID:cryptorKeyRequestID:
_contentKeySession
_contentKeySessionCustomURLHandler
_contentKeySessionHandlerObjectID
_contentKeySessionIsAttached
_contentLayer
_contextCanSetVolumeDidChange
_contextVolumeDidChange
_contextsForTokens
_controlStates
_controlTimebaseSetByUser
_controlTimebaseSetByUserIsInUse
_coordinationMediumDelegate
_coordinator
_copyAndRemoveObserverForWeakReferenceToListener:callback:name:object:
_copyAndStoreCryptorUUID
_copyCGImageAtTime:usingAssetReader:error:
_copyContentKeyBoss
_copyDisplayedPixelBuffer
_copyFigCPEProtector
_copyFigFormatReaderOnce
_copyFigPlaybackCoordinator
_copyFigPlaybackItem
_copyFigPlaybackItemLocked:
_copyFigPlayer
_copyFigTrackReaderOnce
_copyFigVideoCompositor
_copyFigVideoCompositor:andSession:recyclingSession:forFigRemaker:error:
_copyFoldedTimebase
_copyFormatReaderFromFigObjectWithFigErrorCode:
_copyInterstitialEventCoordinatorEnsuringItIsRemote:forceCreate:
_copyPerformanceDataForCurrentItem
_copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:
_copyProxyFoldedTimebase
_copyProxyTimebase
_copyProxyUnfoldedTimebase
_copySampleCursorServiceOnce
_copyStateDispatchQueue
_copyTimebase
_copyTimebaseFromFigPlaybackItem:
_copyUnfoldedFigTimebase
_copyValueAsCFTypeWithFormatDescription:error:
_count
_createAVErrorForError:andFigErrorCode:
_createAndConfigureFigPlayerWithType:completionHandler:
_createAssetIfNecessary
_createBlockBufferUsingNSData:withOffset:withLength:
_createDefaultMediaSelectionOptions
_createDuplicateFigAssetFromAVAsset:
_createEmptyMutableCompositionIfNeeded
_createFigContentConfigForEnvironmentalCondition:
_createFigManifoldWithBlockBuffer:manifold:
_createFigPlaybackItemForFigPlayer:asset:URL:flags:options:playbackItem:
_createFigPlayerWithType:options:player:
_createJSONEncodedDataFromValue:error:
_createKeyRequestDictionaryForApp:persistentKey:serverChallenge:cryptorKeyRequestID:purpose:
_createNSDataWithBlockBuffer:
_createOnceTimebaseObserverForRemovalOfRenderer:atTime:
_createPrerollID
_createSerializedRepresentationWithFormatDescription:error:
_createVideoQueue:errorStep:
_createVideoQueueFailed
_creationOptions
_criteriaInternal
_cryptor
_cryptorsList
_currentFrameRate
_currentItemIdentifier
_currentMediaSelectionFromFigSelectedMediaArray:
_currentPassDescription
_currentRate
_currentSuspensions
_currentTimeWithOptionalFoldedTimebase:
_currentToken
_currentViewAreas
_currentWaitingPoliciesArray
_currentWindowSceneIsForegroundDefault
_customCompositorFigPropertyDidChange
_customCompositorShouldAnticipateRenderingFromTime:toTime:andThenFromTime:toTime:
_customCompositorShouldCancelPendingFrames
_customCompositorShouldPrerollForRenderingFromTime:toTime:andThenFromTime:toTime:requestID:
_customURLHandler
_customURLHandlerObjectID
_customURLLoader
_customURLRequest
_customURLResponse
_data
_dataForProperty:
_dataLengthLimit
_dataRequest
_decoderFrameDrops
_deepCopy
_defaultActionAtItemEnd
_defaultCIContext
_defaultCIContextProvider
_defaultCIContextThreadSafety
_defaultContentKeyGroup
_defaultContentKeySession
_defaultOption
_delegate
_delegateQueue
_delegateReadWriteQueue
_delegateStorage
_dependencyKeyPath
_dependencyManager
_dependentKey
_destRectForAspectRatio:
_destinationDesiredPixelBufferAttributes
_destinationDesiredPixelBufferColorPrimaries
_destinationDesiredPixelBufferTransferFunction
_destinationDesiredPixelBufferYCbCrMatrix
_destinationPixelBufferDimensions
_destroyContentKeyGroupWithError:
_detachClosedCaptionLayersFromFigPlayer:
_detachFigPlayerFromSubtitleLayers
_detachFromPlayerItem
_detachFromPlayerItemTrack
_detachVideoLayersFromFigPlayer:
_detatchFromPlayerItem
_detectorForWeakReferenceToDelegate
_deviceID
_deviceName
_deviceSubType
_deviceType
_dictionary
_dictionaryForProperty:
_dictionaryGroupsWithSelectedOption
_dictionaryOfSpecialGettersForKeyValueStatus
_dictionaryOfSpecialLoadingMethodsForKeys
_dictionaryPlistRepresentation
_didCloseCommChannelWithUUID:forDeviceWithID:
_didCloseCommunicationChannel
_didEnterBackground
_didEnterBackground:
_didEnterForeground
_didFinish:error:
_didFinishSuspension:
_didFinishSuspensionNotificationToken
_didFire
_didGenerateCGImage:
_didIssueCommandToPlaybackObjectNotificationToken
_didNotCallDelegate
_didReceiveData:
_didReceiveData:data:
_didReceiveData:fromDeviceWithID:fromChannelWithUUID:
_didReceiveResponse:response:
_didRequestMediaDataOnce
_didStartInitialSession
_directoryForTemporaryFiles
_disallowsAutoPauseOnRouteRemovalIfNoAudio
_disassociateWithLayerForMode:
_dispatchOutputMediaDataWillChange
_dispatchOutputSequenceWasFlushed
_displayCriteria
_displayLayer
_displayName
_displayNameLocaleIdentifier
_displayNameWithLocale:fallingBackToMatchingUndeterminedAndMultilingual:
_displayResolutionHeight
_displayResolutionWidth
_displaySize
_displaysNonForcedSubtitles
_displaysUsedForPlayback
_doesSuspensionReasonTriggerWaiting:
_downloadFailureCallbackWithError:
_downloadSuccessCallback
_duration
_earliestPresentationTimeStamp
_edgeWidths
_effectiveRateChanged
_enableTrackExtractionReturningError:
_enabled
_endCompositionTime
_endSuspension:proposingNewTime:
_endpoint
_endpointVolumeControlTypeDidChangeForEndpointWithID:
_enqueuePlayQueueModification_invokeOnIvarAccessQueue:
_enqueueSingleSampleBuffer:bufferEnqueueingInfo:
_ensureAllDependenciesOfKeyAreLoaded:
_ensureAssetDownloadCache
_ensureAssetWithFigPlaybackItemWithTrackIDs:
_ensureFigAssetImageGeneratorAllowingSynchronousPropertyLoad:error:
_ensureFigPlaybackCoordinatorIsConnected
_ensureProtocolVersionList:
_ensureResponseInfoSentToCustomURLHandler
_ensureValueLoadedSync
_ensureVideoLayersAreAttached
_ensuresActiveAudioSessionWhenStartingPlayback
_enterPIPModeRedirectingVideoToLayer:
_enterSecondScreenModeRedirectingVideoToLayer:
_enumerateItemsUsingBlock:
_enumerator
_environmentalConditions
_error
_errorForFigNotificationPayload:key:
_errorForOSStatus:
_errorFromAssetNotificationPayload:
_errorLogArray
_evaluateDisplaySizeOfAllAttachedLayers
_evaluateLegibleOutputs
_evaluateMetadataOutputs
_evaluateVideoOutputs
_expectedCurrentItemIdentifier
_expectsMediaDataInRealTime
_exportSession
_extendedLanguageTag
_externalDeviceHID
_externalDeviceIcon
_externalPlaybackActive
_externalPlaybackVideoGravity
_externalProtectionRequiredForPlayback
_externalProtectionStatus
_externalProtectionStatusCopiedFromFig
_extractFPExternalProtectionStatus:
_extractPropertiesFromDictionary:
_extractPropertiesFromTaggedRangeMetadataDictionary:
_extractionID
_failedToGenerateCGImage:
_fallbackTrack
_figAlternate
_figAlternateObjC
_figAsset
_figAssetCreationStatus
_figAssetMediaSelectionPropertiesArray
_figAssetNotificationNames
_figAssetPropertiesForKeys
_figAssetProvider
_figAssetReaderDecodeError
_figAssetReaderExtractionOptions
_figAssetReaderFailed
_figAssetReaderSampleBufferDidBecomeAvailableForExtractionID:
_figAssetReaderVideoScalingPropertiesFromVideoSettings:withFormatDescription:
_figAssetTrack
_figAssetTrackMediaSelectionPropertiesArray
_figAssetWriterAccessQueue
_figAssetWriterCallbackContextToken
_figAssetWriterDidDropBelowLowWaterLevelForTrackID:
_figContentKeySession
_figCustomCompositor
_figEndpoint
_figEndpointHIDInputMode
_figEndpointPropertyValueForKey:
_figEndpoints
_figError
_figErrorUserInfo
_figEvent
_figFileMIMETypes
_figFilePathExtensions
_figFileUTIs
_figFormatReader
_figHFSFileTypes
_figLegibleOutputsDictionaryOptions
_figMIMETypes
_figManifold
_figManifold:discoveredNewTrackID:mediaType:
_figManifold:pushedSampleBuffer:trackID:flags:
_figManifold:trackDidEnd:
_figManifoldAllNewTracksReady:
_figMediaType
_figMetadataArrayForMetadataItems:
_figMetadataDictionary
_figMetadataDictionaryWithValue:diviningValueDataType:
_figMetadataFormat
_figMetadataOutputsDictionaryOptions
_figMetadataPropertyFromMetadataItems:
_figMetadataSpecificationReturningError:
_figMutableComposition
_figMutableMovie
_figMutableMovieFromFormatReader:
_figPlaybackCoordinator
_figPlaybackCoordinatorConfigQueue
_figPlaybackItem
_figPlaybackItem:didFlushLegibleOutputWithDictionaryKey:
_figPlaybackItem:didFlushMetadataOutputWithDictionaryKey:
_figPlaybackItem:didOutputAttributedStrings:nativeSampleBuffers:atItemTime:withLegibleOutputsDictionaryKey:
_figPlaybackItem:didOutputSampleBuffers:fromTrackWithID:forMetadataOutputWithDictionaryKey:
_figPlaybackItemIsReadyForInspection
_figPlaybackItemNotificationNames
_figPlaybackItemTrackOutputSequenceWasFlushedForTrackID:extractionID:
_figPlaybackItemTrackSampleBufferDidBecomeAvailableForTrackID:extractionID:
_figSampleCursor
_figSampleCursorService
_figSampleGenerator
_figSampleGeneratorReadFlags
_figSampleGeneratorReadPolicy
_figSelectedMediaArray
_figStreamingMIMETypes
_figStreamingUTIs
_figSuspension
_figTimelineCoordinator
_figTimelineCoordinatorConfigQueue
_figVideoTargets
_fileSize
_fileType
_fileUTTypes
_filteringRequestsInFlight
_finishInitializationWithTimerEventHandler:
_finishLoadingCustomURLRequestWithError:
_finishLoadingCustomURLRequestWithResponseData:renewalDate:
_finishWritingOperations
_finishWritingOperationsDidFinish
_finished
_finishedRequestQ
_fireBlock
_fireBlockForTime:
_fireTime
_firstAssociatedTrackWithAssociationType:
_firstFormatDescriptionIsLPCM
_firstSequenceNumber
_firstVideoSampleInformation
_floatForProperty:
_flushCallbackListQueue
_flushCallbackQueue
_flushComplete
_flushPendingSampleBuffersReturningError:
_fontSizeInt
_forBoundsAnimations:applyBlock:
_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection
_forStreamingItemsVendAssetWithFigPlaybackItem
_forceHostApplicationInForeground:
_forceLayout
_forceWindowSceneEvent:
_formatDescriptions
_formatReader
_formatReaderOnce
_formattedDisplayString
_fpNotificationNames
_fragmentMindingInterval
_fragmentedAsset
_fragmentedAssetMinder
_fragmentedAssetTrack
_fragmentedMovieTrack
_frecents
_frecentsContainerPath
_frecentsFilePath
_frecentsReaderAfterMigrationIfNecessary
_fullListOfAllowableMIMETypes
_fundamentalOperation
_generator
_getAndClearCachedData
_getAndPruneCompletionsWhileMutexLocked
_getAvailableOutputSampleRateFor:rounding:
_getCachedNonForcedSubtitleEnabled:
_getCachedPresentationSize:
_getClientCompletionHandlerForRenderer:
_getDelegateOnStateQueue
_getDisplayVideoRange:displaySize:refreshRate:
_getFigAssetCreationOptionsFromDataAssetInitializationOptions:figAssetCreationFlags:
_getFigAssetCreationOptionsFromURLAssetInitializationOptions:assetLoggingIdentifier:figAssetCreationFlags:error:
_getFigAssetiTunesStoreContentInfoFromURLAssetiTunesStoreContentInfo:
_getFigSampleCursorServiceReportingTimeAccuracy:
_getFilteredMetadataGroups:fromIdentifiers:andClassifyingLabels:modifiedIndexesOut:newIndexesOut:
_getMaskLayer:videoLayer:subtitleLayer:closedCaptionLayer:interstitialLayer:
_getRetryReasonForError:
_getTimebaseObserverForRenderer:
_getVideoComposition:customVideoCompositorSession:figVideoCompositor:
_groupDictionaries
_groupID
_groupMediaCharacteristics
_groupMembersChangedForGroupWithID:
_handleAuthChallenge:requestID:canHandleRequestOut:
_handleCompletedWritingNotification
_handleContentProtectionSessionIdentifierDidChange:
_handleExternalProtectionStateChangedCallbackForCryptKeyIdentifier:
_handleFailedNotificationWithError:
_handleIsDisplayingClosedCaptionsDidChange:player:
_handleKeyResponseError:
_handleKeyResponseError:forCryptorUUID:andCryptorKeyRequestID:
_handleKeyResponseSuccessWithCryptor:
_handleKeyResponseSuccessfullyProcessedForCryptorUUID:andCryptorKeyRequestID:
_handleNonForcedSubtitleDisplayDidChange:player:
_handlePlayerCurrentItemDidChangeForPlayer:
_handleRequest:requestID:
_handleRequest:requestID:canHandleRequestOut:
_handleRequest:requestID:willHandleRequest:
_handleRequest:withRequestID:fromHandler:willHandleRequest:
_handleSecureStopDidFinalizeRecordCallback
_handleTimeDiscontinuity
_handleURLRequest:
_handleUpdateToPersistentKey:forKeyIdentifier:
_handler
_hasAssociatedAVPlayerLayerInPIPMode
_hasAssociatedOnscreenAVPlayerLayer
_hasCurrentInterstitialEvent
_hasEmptyEdits
_hasEnabledAudio
_hasEnabledVideo
_hasEnqueuedVideoFrame
_hasEqualValueForKey:asObject:
_hasEverEnqueued
_hasForegroundLayers
_hasLayerAsAuxiliaryTrack
_hasMultipleDistinctFormatDescriptions
_hasMultipleEdits
_hasOverrideForSelector:
_hasPostProcessingLayers
_hasQTSaveRestriction
_hasRegisteredFigCustomCompositorCallbacks
_hasResourceLoaderDelegate
_hasRespondedAtLeastOnce
_hasSelectionInCachedMediaSelectionGroup:
_hasStoppedResponding
_highQualityRendering
_hostApplicationHasForegroundExemption
_hostApplicationInForeground
_hostClockTime
_hudTimer
_hudUpdateInterval
_hudUpdateTrigger
_hudXoffset
_hudYoffset
_iVarMutex
_identifier
_imageQueueFrameDrops
_impl
_implEventListener
_implSupportEventListener
_index
_informObserversAboutAvailabilityOfCurrentMediaSelection
_informObserversAboutAvailabilityOfDuration:
_informObserversAboutAvailabilityOfPresentationSize
_informObserversAboutAvailabilityOfTracks:
_init
_initInternalObject
_initWithAsset:chapterGroupIndex:chapterIndex:chapterType:extendedLanguageTag:languageCode:chapterDataType:time:duration:
_initWithAsset:selectedMediaArray:
_initWithAsset:trackID:
_initWithAsset:trackID:trackIndex:
_initWithAsset:trackIndex:
_initWithAssetWithoutGroupDictionaries:
_initWithComposition:
_initWithDeferredLoadingOfAsset:selectedMediaArray:
_initWithFigAsset:
_initWithFigError:userInfo:
_initWithFigMetadataDictionary:valueLoadingHandler:
_initWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
_initWithFormatReader:URL:data:options:
_initWithReader:itemIndex:
_initWithTaggedRangeMetadataDictionary:items:
_initWithTimeMapping:
_initialMovieFragmentSequenceNumber
_initialPassDescription
_initialSegmentStartTime
_initializationData
_initializationOptions
_initializationOptionsClasses
_initializationVector
_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:withOptions:
_initializeTimebase
_initializeTimebases
_input
_inputASBD
_inputGroups
_inputParameters
_insertAfterItem:
_insertItem:afterItem:
_inspectionRequiresAFormatReader
_inspector
_inspectorLoader
_installHandlerForNSURLSessionConfiguration:queue:
_installNotificationHandlers
_instruction
_internal
_internalQueue
_internalTemplateItems
_interstitialLayer
_interstitialPlayer
_interstitialPlayerIfCreated
_intervalRequested
_invalid
_invalidateMutex
_invalidatePending
_invokeCompletionHandlerForLoadingBatches:
_invokeDelegateCallbackWithBlock:synchronouslyWhenDelegateQueueIsNULL:
_invokeReadyForEnqueueingHandlers
_isAFileBasedItemThatsReadyToPlay
_isAirPlayDevicePresenceDetected
_isAirPlayVideoActive
_isAttachedToAdaptor
_isAttachedToPlayerItem
_isAuxiliaryContent
_isClusterLeader
_isConnectedToPhysicalSecondScreen
_isConnectedToSecondScreen
_isCreateVideoQueueErrorRetryable:
_isCustomRoutePresenceDetected
_isDesignatedDefault
_isDisplayingClosedCaptions
_isExpired
_isExternalProtectionRequiredForPlayback
_isExternalProtectionRequiredForPlaybackInternal
_isFigAssetReadyForInspectionOfMediaSelectionOptions
_isFigAssetReadyForInspectionOfMediaSelectionOptionsAndFigPlaybackItemIsReadyForInspection
_isFinished
_isIAPDExtendedModeActive
_isInExpanseMediaPlayback
_isInterstitialPlayer
_isInvalidatePending
_isMainProgramContent
_isMuted
_isNonForcedSubtitleDisplayEnabled
_isObservingTimebase
_isPIPModePossible
_isPartOfForegroundScene
_isReadyForBasicInspection
_isReadyForInspectionOfPresentationSize
_isReadyForInspectionOfRecommendedTimeOffsetFromLive
_isReadyForInspectionOfTracks
_isRental
_isRentalPlaybackStarted
_isRequestForContentKey
_isRequestingMediaData
_isStreaming
_isStreamingGroup
_isSyncSample
_isValidMediaSelectionOption:forMediaSelectionGroup:
_isValidReturningExceptionReason:
_isVideoPlaybackAllowedWhileInBackground
_isVisible
_isWaitingForLastCopyToFinishSet
_isoUserDataKeysRequiringKeySpaceConversion
_issueLoadingRequestWithKey:loadingRequest:isRenewalRequest:fallbackHandler:
_item
_itemFilterInternal
_itemIsReadyToPlay:
_itemOkayToPlayWhileTransitioningToBackground:
_itemTime
_itemTimeForHostTimeAsCMTime:
_items
_items_invokeOnIvarAccessQueue
_ivarAccessQueue
_ivarQueue
_ivars
_key
_keyAsString
_keyData
_keyIDFromInitializationData
_keyPath
_keyPathDependencies
_keyPathDependencyManager
_keyResponse
_keySpace
_keySystem
_keysAwaitingCompletion
_keysToRemove
_kickAssetObserversIfAppropriate
_languageCode
_languageDisplayNameFromMetadataAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:
_lastCryptor
_lastFormatDescription
_lastIntervalUsed
_lastNonperiodicFireTime
_lastPeriodicFireTime
_lastRate
_lastStopTime
_latestRateCommandOrderIndex
_latestSeekCommandOrderIndex
_layer
_layerForegroundStateChanged:
_layerInstruction
_layerQueue
_lazyMetadataItem
_leafPropertyChangeNotifier
_leavePIPModeForLayer:
_legacyStreamSession
_legibleContentInsets
_legibleOutputForKey:
_legibleOutputInternal
_legibleOutputsForKeys
_limitsBandwidthForCellularAccess
_linkAndSyncAudioSessionWithInterstitialPlayer:
_listenerObjectsQueue
_loadAssetInspectorAndLoaderOnce
_loadChapterInfo
_loadFileRepresentationOfTypeIdentifier:forItemProviderCompletionHandler:
_loadOutputDevices
_loadStatusForFigAssetTrackProperty:error:
_loadStatusForProperty:figAsset:error:
_loadValuesSynchronouslyForKeys:trackKeys:
_loadValuesUsingDefaultLoadingMethodWhileMutexLockedForKeys:
_loadValuesWhileMutexLockedForKeys:
_loadedTimeRanges
_loadedTimeRangesFromFPPlaybableTimeIntervals:
_loadiVarsIfNeeded
_loadingCanceled
_loadingMutex
_loadingStatusCache
_lock
_logPerformanceDataForCurrentItem
_logPerformanceDataForPreviousItem
_longLongForProperty:
_lookupRequestForDataTask:
_makeAutoreleasedAssetReader
_makeContentKeyGroupWithIDOut:error:
_makeDisplayCriteriaOnce
_makeFinishWritingOperationsWithCustomFigAssetWriterFinishOperation:
_makeHIDsOnlyOnce
_makeIconsOnlyOnce
_makePropertiesReady
_makeReadyForEnqueueingWithCompletionHandler:
_makeSTSLabel
_makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:error:
_managedAssetCache
_mapAssetKeys:toFigAssetPropertySet:figAssetTrackPropertySet:callerName:
_markAsFinishedCalled
_markAsNeedingNewAssetWithFigPlaybackItem
_markAsReadyForBasicInspection
_markAsReadyForInspectionOfDuration
_markAsReadyForInspectionOfPresentationSize
_markAsReadyForInspectionOfRecommendedTimeOffsetFromLive
_markAsReadyForInspectionOfTracks
_markAssetWithFigPlaybackItemAsNeedingNewTracks
_markFigAssetAsReadyForInspectionOfMediaSelectionOptions
_marksOutputTrackAsEnabled
_maskLayer
_matchesGroupID:mediaType:
_maximizePowerEfficiency
_maximum
_maximumAVPlayerLayerDisplaySize
_mediaCharacteristics
_mediaDataConsumer
_mediaDataLocation
_mediaDataRequester
_mediaDataRequesterSerialQueue
_mediaDataStorageInternal
_mediaFileType
_mediaFileTypeWithFileTypeIdentifier:exceptionReason:
_mediaOptionsSelectedByClient
_mediaOptionsSelectedByClientForKey:
_mediaSelectionGroup
_mediaSelectionGroupDictionaries
_mediaSelectionOption
_mediaSelectionOptionPlist
_mediaSelections
_mediaType
_mediator
_mediumLoggingIdentifier
_mergeClientLayersIntoMaskLayer:
_mergePreloadingRequestOptions:withCreateKeyRequestOptions:
_metadata
_metadataCollectorInternal
_metadataCollectors
_metadataItemWithFigMetadataDictionary:
_metadataItemWithFigMetadataDictionary:containerURL:securityOptions:
_metadataItems
_metadataItemsForFigMetadataArray:
_metadataOutputForKey:
_metadataOutputInternal
_metadataOutputsForKeys
_metrics
_metricsDictionary
_migrateFrecentsFromCFPreferencesToFrecentsFilePath:
_minimum
_minimumUpcomingPTS
_modelID
_modificationType
_monitor
_monitoredObject
_monitoringIsFinishedSemaphore
_mostRecentPassDescription
_movie
_movieFragmentInterval
_movieTrackInternal
_multipleAudioRenderersDisallowed
_mutableAudioMix
_mutableComposition
_mutableInputParameters
_mutableInstruction
_mutableLayerInstruction
_mutableMovieForFileType:
_mutableMovieInternal
_mutableMovieTrackInternal
_mutablePriv
_mutableScheduledParametersInternal
_mutableTracks
_mutableVideoComposition
_mutex
_name
_nameForLogging_fromIvarAccessQueue
_nameForProxy
_naturalSize
_needApplicableParameters
_needAvailableSampleRates
_needNewConverter
_networkBandiwdth
_newTrackForIndex:
_nextFiringTimeAfterTime:
_nextItem
_nextPassDescription
_nominalFrameRate
_nonNilArrayForProperty:
_nonNilDictionaryForProperty:
_noteCurrentRemoteInterstitialEvent:
_noteFinishingOfRequest:
_noteNewNonForcedSubtitleDisplayEnabledForPlayerItem:
_noteNewPresentationSizeForPlayerItem:
_noteRemoteInterstitialEvents:forItem:
_notificationHandler
_notificationHandlersAreRegistered
_notificationName
_notificationNames
_notifyAssetThatDurationDidChangeWithSuccess:
_notifyAssetThatDurationWillChange
_notifyPlayerOfDisplaySize
_notifyPlayerOfLayerForegroundStateChange
_notifySelfThatSegmentsDidChangeWithSuccess:
_notifySelfThatSegmentsWillChange
_notifyTracksThatSegmentsDidChange:successfully:
_notifyTracksThatSegmentsWillChange:
_notifyWhetherMorePassesAreNeeded:timeRanges:forTrackWithID:
_nudgeMediaDataRequesterIfAppropriate:
_objectWithItemProviderFileURL:typeIdentifier:isInPlace:error:
_observedCoord
_observer
_observerToken
_observersForListenerKeys
_observingSelf
_obtainCoordinator
_oemIcons
_opacity
_operationStateSerializationQueue
_operator
_optimizesAuxiliaryContentConfigurations
_optionMediaCharacteristics
_optionMediaType
_optionWithID:displaysNonForcedSubtitles:
_optionWithID:identifier:source:displaysNonForcedSubtitles:
_options
_optionsDictionary
_originalFormatDescription
_originator
_otherDevices
_otherParticipants
_outputASBD
_outputContext
_outputDevice
_outputDeviceDiscoverySession
_outputDeviceForID:
_outputDevicesFromProperty:withQualifier:
_outputDidFinish:
_outputFileTypeProfile
_outputPublisherSubscription
_outputSettingsDictionary
_outputSettingsObject
_outputSettingsWithOutputSettingsDictionary:mediaType:exceptionReason:
_overallDurationHint
_overlappedPlaybackWillBeginForItem:withID:
_parentChannel
_parentOutputDevice
_parentOutputDeviceGroup
_participantLimitPerSuspensionReason
_participantStates
_participantsChangedNotificationToken
_participatesInAudioSession
_pauseSnapsToMediaTimeOfOriginator
_pausesAudioVisualPlaybackInBackground
_peakIndicatedBitrate
_pendingAudioSampleBuffers
_pendingFigPlayerProperties
_pendingFigPlayerPropertyForKey:
_pendingPrerollRequestID
_percentCoverageRelativeToRootLayer
_performCancellationByClient
_performDelegateCallbackSynchronouslyIfCurrentDelegateQueueIsQueue:delegateCallbackBlock:
_performDelegateSelector:withObject:representingNewRequest:key:fallbackHandler:
_performRendererRemoval:
_performanceDictionary
_performanceMetricsInternal
_performsMultiPassEncodingIfSupported
_pixelAspectRatio
_pixelAspectRatioDict
_pixelBufferAttributeMediator
_pixelBufferAttributes
_pixelBufferAttributesDidChangeForLayer:
_pixelBufferPool
_pixelBufferPoolQ
_playbackConfigurationOptions
_playbackCoordinator
_playbackCoordinatorWithoutTriggeringFullSetup
_playbackDisplaysForFigPlayer
_playbackItem
_playbackItemNotificationPayloadToError:
_playbackProperties
_playerBeingObserved
_playerChangeStatusToFailedWithError:
_playerConnection
_playerCurrentItemPresentationSize
_playerItem
_playerItemAccessLog
_playerItemAccessLogEvent
_playerItemErrorLog
_playerItemErrorLogEvent
_playerItemReference
_playerItemTrack
_playerItemURL
_playerLayer
_playerReference
_playerVolume
_plistHasOptionIdentifier:
_policyDictionary
_popAllOldPlayerItems
_poseAuthenticationChallengeWithKey:challenge:fallbackHandler:
_poseAuthenticationChallengeWithRequestInfo:requestID:challenge:
_postProcessingRootLayer
_postProcessingVideoLayer
_postProcessingVideoLayers
_postSeekCompletionNotificationWithSeekID:andResult:
_predicate
_preferCoordinatedPlaybackBehavior
_preferredDisplayCriteria
_preferredMetadataTitleAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:excludeM3U8Metadata:
_preferredRate
_preferredRepresentationForItemProviderReadableTypeIdentifier:
_preferredRepresentationForItemProviderWritableTypeIdentifier:
_preferredTransform
_preferredVolume
_prepareCryptor:forRenewal:andReturnKeyRequestID:isInchargeOfKeyRequest:error:
_prepareForKeyRenewalReturningError:
_prepareForReadingReturningError:
_prepareForWritingWithFigAssetWriter:mediaFileType:error:
_prepareToEndSession
_prepareToFinishWritingReturningError:
_prepareToInitiatePlayback
_prerendered
_presentationSize
_presentationSizeHeight
_presentationSizeWidth
_presentationTimeStamp
_preservesAudioSessionSampleRate
_preventsChangesToSublayerHierarchy
_preventsDisplaySleepDuringVideoPlayback
_preventsSleepDuringVideoPlayback
_previousFiringTimeBeforeTime:
_previousItem
_primaryContentConfiguration
_primaryItem
_primaryMediaCharacteristic
_primaryPlayer
_primeCache
_primeCacheOnDispatchQueue
_priv
_privChapter
_privacyStance
_processContentKeyRequestWithIdentifier:contentIdentifier:keyIDFromInitializationData:initializationData:options:
_processContentKeyRequestWithIdentifier:encryptionMode:supportedProtocolVersions:groupID:error:
_processContentKeyRequestWithIdentifier:initializationData:options:groupID:
_processContentKeyRequestWithKeyRequestFromPSSH:decryptFormatType:initializationData:options:
_processContentKeyResponse:renewalDate:initalizationVector:error:
_processContentKeyResponseError:
_producesCombinableFragments
_propertyListForMediaSelection:forGroup:
_propertyListForSelectedMediaOptionInMediaSelectionGroup:
_propertyListForSelectedMediaOptionUsingFigSelectedMediaArrayObtainedFromGroup:
_proposedGroupIDDidChangeForEndpointWithID:
_protectorSessionIdentifier
_providesAccurateTiming
_provisionalAlternateGroupID
_publisher
_pushAttributedStrings:andSampleBuffers:atItemTime:
_pushTimedMetadataGroups:fromPlayerItemTrack:
_queue
_queueForCallingPrerollCompleteCallback
_queueForProtectingPrerollCompleteCallback
_queuePlayer
_quietlySetEQPreset:
_quietlySetServiceIdentifier
_quietlySetVariantIndex:
_ramps
_rate
_rateDidChangeNotificationIncludesExtendedDiagnosticPayload
_rateDidChangeNotificationPayloadForAVFRateChangeReason:reasonIsExtendedDiagnostic:rateChangeIdentifier:rateChangeOriginator:
_rateDidChangeNotificationPayloadForFigRateChangeReason:rateChangeIdentifier:rateChangeOriginator:
_rateState
_rateUpdateDuringTransitionDecided
_reactToSecondLevelPropertyChange:
_readOnlyRenderingTimebase
_readOnlyVideoQueueTimebase
_readSingleSample
_readyForInspection
_readyForMoreMediaDataObserverSerialQueue
_readyToPlay
_realNotifier
_reallyInvalidate
_reasonForWaitingToPlay
_recentlyUsedDevices
_recommendedTimeOffsetFromLive
_refreshAboveHighWaterLevel
_refreshRate
_registerForFigManifoldCallbacksForTrackID:
_registerRequest:id:forDataTask:
_registeredForFigAssetNotifications
_registeredForObjectNotifications
_releaseAndClearCallbackBlock_invokeOnSerializationQueue
_remoteControlSession
_removeAllLayers
_removeAllParticipantStates
_removeAllTransportControlStates
_removeCaptionLayer:subtitleLayer:
_removeContentKeyRequestForCryptorUUID:cryptorKeyRequestID:
_removeFAListeners
_removeFPListeners
_removeFigAssetListeners
_removeFigAssetNotifications
_removeFigAssetTrackNotifications
_removeFigNotifications
_removeFigObjectNotifications
_removeFigPlaybackCoordinatorListeners
_removeFigVideoQueueListeners
_removeFoldedTBListeners
_removeFromItems
_removeFromPlayQueueOfFigPlayerOfAttachedPlayer
_removeInterstitialEventCollector
_removeInterstitialEventCollectorLocked:
_removeItem:
_removeItemFromLinkedList_invokeOnIvarAccessQueue:
_removeLayer:
_removeLayer:videoLayer:closedCaptionLayer:subtitleLayer:interstitialLayer:
_removeLegibleOutput:
_removeListenersFromInterstitialCoordinator:
_removeMediaOptionsSelectedByClient
_removeMetadataCollector:
_removeMetadataCollector:locked:
_removeMetadataOutput:
_removeMonitorListeners
_removeParticipantStateWithIdentifier:
_removePropertyObserversOfCurrentItemCalledOnStateDispatchQueueChecked:
_removeSelfFromPlayerItem:
_removeSyncLayer:
_removeTimebaseFromTimerSource
_removeTimebaseObserverForRenderer:
_removeUnusedTransportControlStates
_removeUserInfoObject
_removeVideoOutput:
_renderContext
_renderScale
_renderTransform
_rendererConfigurationIsValid:
_renderingSuppressionDidChangeForOutput:
_renditionSpecificAttributesForMediaSelection
_renewKeyWithIdentifier:encryptionMode:error:
_renewalDate
_rentalExpirationDate
_rentalPlaybackExpirationDate
_rentalPlaybackStarted
_rentalPlaybackStartedDate
_rentalStartDate
_replaceParticipantStates:
_replaceQuickTimeUserDataKeySpaceWithISOUserDataKeySpaceIfRequired:
_replacementFormatDescription
_representsNilSelection
_request
_requestBlock
_requestID
_requestIDToDownload
_requestInFlight
_requestInfo
_requestMediaDataIfReady
_requestQueue
_requestWithRequestID:
_requestor
_requests
_requiredSourceTrackIDs
_requiresFlushToResumeDecoding
_requiresInProcessOperation
_resetLastImageTime
_resetNextFireTime
_resetStatusWithOSStatus:
_resourceLoaderWithRemoteHandlerContext:
_respondToBecomingReadyForBasicInspection
_respondToBecomingReadyForBasicInspectionWithDuration:
_respondToFigPlaybackItemBecomingReadyForInpection
_respondToPlayerItemFormatDescriptionsChange
_restoreClientLayers:intoMaskLayer:
_resumePlayback:error:
_retainInterstitialCoordinatorIfCreated
_retainedFigAssetWriter
_routeDetectorInternal
_runLoop
_runLoopStateList
_runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:
_sampleBufferSourcesByTrackID
_sampleBufferVideoRenderer
_sampleCursor
_sampleCursorTimeAccuracyIsExact
_sampleGenerator
_sampleGeneratorBatch
_sampleReferenceBaseURL
_sampleReferenceOutputInternal
_samplesBeforeReady
_samplesBeforeReadyTotalDuration
_samplesBeforeReadyTotalSize
_saveCommChannel:forUUID:
_scaledSizeForRenderSize:
_scheduleTimedRendererRemovalAtTime:atTime:withClientCompletionHandler:
_scheduledParametersInternal
_screenInfo
_secondaryImpl
_securityScopedURLWrapper
_seekToTime:toleranceBefore:toleranceAfter:seekID:completionHandler:
_seekableTimeRanges
_seekableTimeRangesFromFPSeekableTimeIntervals:
_segmentType
_segmentsForProperty:
_selectMediaOption:inMediaSelectionGroup:
_selectedMediaArray
_selectorForInformingDelegateOfCancellationByFig
_sendAuthResponseForChallenge:disposition:credential:error:
_sendDataToCustomURLHandler:
_sendDidFinishDownloadForMediaSelectionWithMediaSelection:
_sendDidResolveMediaSelectionWithMediaSelection:
_sendDownloadFailureToDelegateWithError:
_sendDownloadSuccessToDelegate
_sendFinishLoadingForPreloadedKeyRequest:withRequestID:fromHandler:error:
_sendFinishLoadingToCustomURLHandler
_sendFinishLoadingToCustomURLHandlerWithError:
_sendLoadedTimeRangesChangedToDelegateWithNewlyLoadedTimeRange:currentLoadedTimeRanges:timeRangeExpectedToLoad:selectedMediaArray:
_sendProgessUpdateWithExpectedBytesToDownload:bytesDownloaded:
_sendResponseInfoToCustomURLHandler
_sendResponseInfoToCustomURLHandlerWithRenewalDate:
_sendWillDownloadVariants:
_sequenceNum
_serialQueue
_serializableCreationOptions
_serializableInstructions
_serializableRepresentation
_serializationDataType
_serializationQueue
_serializeIntoDownloadConfig:asset:
_serializeIntoDownloadConfig:environmentalCondition:
_serverDied
_session
_sessionID
_sessionKeyRequest
_setActionAtItemEnd:allowingAdvance:
_setAlternateGroupID:
_setAncillaryPerformanceInformationForDisplay:
_setArrayEnumerator:
_setAsset:
_setAssetInspectorLoader:
_setAssetToAssetWithFigPlaybackItemIfAppropriate
_setAttachedAdaptor:
_setAudibleDRMInfo:
_setAudioCurvesAccordingToInputParameters:forTrackID:
_setAudioEffectParameters:forTrackID:
_setAudioTapProcessor:forTrackID:
_setAudioTimePitchAlgorithm:forTrack:
_setAudioTimePitchAlgorithm:forTrackID:
_setAudioVolumeCurve:forTrack:
_setAuthorizationToken:forIdentifier:error:
_setCALayerDestinationIsTVOut:
_setClientPriority:
_setContentInformationRequest:
_setContentKeyRequest:forCryptorUUID:cryptorKeyRequestID:
_setContentKeySessionCustomURLHandler:
_setContentLayerOnFigVideoQueue:
_setCreateVideoQueueFailedWithOSStatus:
_setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:selector:
_setCropRectangleRamps:
_setCurrentItem:
_setCurrentMediaSelection:
_setDataRequest:
_setDelegateOnStateQueue:
_setDelegateViaWeakReference:
_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:
_setDisplaysUsedForPlayback:
_setEQPreset:
_setEnsuresActiveAudioSessionWhenStartingPlayback:
_setError:
_setExternalProtectionRequiredForPlayback:
_setExtractionID:
_setFigAssetReader:
_setFigPlaybackItem:
_setFigPlaybackItemToMakeCurrent:
_setFileFigAsset:
_setFormatReader:
_setFragmentMindingInterval:
_setFrameDurationForFrameRate:sourceTrackIDForFrameTiming:
_setHelper:
_setHelper:ifCurrentHelper:
_setHelper:ifCurrentHelper:withBlock:
_setHostApplicationInForeground:
_setInterstitialEventCoordinator:
_setInterstitialEventCoordinator_invokeOnIvarAccessQueue:
_setInterstitialPlayer:
_setInterstitialPlayerGuts_invokeOnIvarAccessQueue:
_setInvalidatePending
_setIsAssociatedWithFragmentMinder:
_setIsConnectedToSecondScreen:
_setIsInExpanseMediaPlaybackOnAVAudioSession
_setIsInterstitialPlayer:
_setIsPartOfForegroundScene:
_setKey:
_setKeySpace:
_setLimitsBandwidthForCellularAccess:
_setLocalParticipantUUID:onFigPlaybackCoordinator:
_setLocale:
_setLoggingIdentifier:
_setMediaOptionsSelectedByClient:forKey:
_setMediumCallbacksOnFigPlaybackCoordinator:
_setMetadataReader:
_setMindingInterval:removeAllAssets:
_setNaturalSize:
_setOpacityRampFromStartOpacity:toEndOpacity:timeRange:selector:
_setOpacityRamps:
_setOptions:onClosedCaptionLayer:
_setOutputObscuredDueToInsufficientExternalProtection:
_setPausesAudioVisualPlaybackInBackground:
_setPendingFigPlayerProperty:forKey:
_setPlaybackCoordinator:
_setPlaybackItem:
_setPlayer:forPIP:
_setPolicyDictionary:
_setPreferredLanguageList:
_setPreservesAudioSessionSampleRate:
_setPreventsChangesToSublayerHierarchy:
_setPreventsSleepDuringVideoPlayback:
_setPrimaryPlayerNameForInterstitial:
_setProvisionalAlternateGroupID:
_setRampInOutInfo:
_setRamps:
_setRate:rateChangeReason:figPlayerSetRateHandler:
_setRate:time:atHostTime:
_setRate:withVolumeRampDuration:playImmediately:rateChangeReason:affectsCoordinatedPlayback:
_setReadSingleSample:
_setRequiresFlushToResumeDecoding:
_setSTSLabel:
_setScheduledAudioParameters:
_setSeparated:onClosedCaptionLayer:
_setShowInterstitialInstead:
_setShowInterstitialInstead:afterDelay:
_setSilencesOtherPlaybackDuringPIP:
_setSize:forProperty:
_setSourcePixelBufferAttributes:
_setStatus:
_setStatus:cancellationReason:
_setStatus:error:
_setStatus:error:resultingStatus:failureReason:
_setStatus:figErrorCode:
_setStoppingFadeOutDuration:
_setString:forProperty:
_setSublayersForPIP:
_setSublayersPreventChangesToSublayerHierarchy:
_setSuppressesAudioRendering:
_setSuppressesVideoLayers:
_setTagBuffersWithConversionInformation
_setTemplatePlayerItem:
_setTimeJumpedNotificationIncludesExtendedDiagnosticPayload:
_setTimebase:
_setTimedMetadata:
_setTrackID:
_setTrackReaderPropertyValue:forKey:
_setTransformRampFromStartTransform:toEndTransform:timeRange:selector:
_setTransformRamps:
_setURL:
_setURLAssetInitializationOptions:error:
_setUpcomingPresentationTimeExpectations:minimumPresentationTime:
_setUserInfoObject:
_setUsesLegacyAutomaticWaitingBehavior:
_setValueStatus:figErrorCode:
_setValuesFromDictionary:
_setValuesFromDictionary:timeRange:
_setVideoComposition:
_setVideoComposition:customVideoCompositorSession:
_setVideoCompositionColorPrimaries:
_setVideoCompositionColorTransferFunction:
_setVideoCompositionColorYCbCrMatrix:
_setVideoCompositionFrameDuration:
_setVideoCompositionInstructions:
_setVideoCompositionRenderScale:
_setVideoCompositionSourceSampleDataTrackIDs:
_setVideoCompositionSourceTrackIDForFrameTiming:
_setVideoCompositor:
_setVolume:atTime:
_setVolumeRampFromStartVolume:toEndVolume:timeRange:rampMode:
_setWaitingPolicies:
_setWaitingPolicies:onFigPlaybackCoordinator:
_setWantsVolumeChangesWhenPausedOrInactive:
_setWeakReferenceForContentKeyRequest:withCryptorUUID:
_setWeakReferenceToDelegate:
_setWillManageSublayersAsSwappedLayers:
_setupContentConfigWithDownloadConfig:asset:
_setupFigCallbacks
_setupFigClientObjectAsync:
_setupFigClientObjectForFileDownload:
_setupFigClientObjectForStreaming:
_setupLoopingReturningError:
_shouldBufferInAnticipationOfPlayback
_shouldCacheDuration
_shouldCancelAllRequests
_shouldDetachVideoLayersFromFigPlayer
_shouldInformDelegateOfFigCancellation
_shouldLogPerformanceData
_shouldOptimizeAccessForLinearMoviePlayback
_shouldOptimizeForNetworkUse
_shouldPause
_showCompleteURI
_showHud
_showInterstitialInstead
_signalFlush
_signalMetadataUpdated
_signalMonitoringIsFinishedIfNeeded
_signalRunLoopWithState:
_signalSource
_signalTracksUpdated
_signaled
_singlePassFileSize
_singlePassMediaDataSize
_sink
_size
_sizeForProperty:
_sizeForProperty:defaultValue:
_snapTimeToPausePlayback
_sourceCIImage
_sourceFormatDescription
_sourceFormatHint
_sourcePBuf
_sourcePixelBufferAttributes
_sourceSampleBufferTrackIDsInClientOrder
_sourceTrackIDsInClientOrder
_sourceTrackPreferredTransform
_sourcesByTrackID
_spatialDiagnostics
_specifiedLoggingIdentifier
_startCompositionTime
_startListeningToFigAssetTrackNotifications
_startListeningToLoaderNotifications
_startLoadingMetadataOnQueue
_startObservingInputPropertiesThatMayChangeValueOfOptions
_startObservingPlayer:
_startObservingPropertiesOfCurrentItem:
_startObservingReadyForMoreMediaDataKeyPath
_startObservingSecondLevelPropertyOnNewCurrentValueForTopLevelDependencyProperty:
_startObservingTimebaseNotifications
_startObservingTimebaseNotificationsForTimebase:
_startOnQueue
_startOnQueueFirstTime
_startSessionCalled
_started
_startedUsingInternalContentKeySession
_stashClientLayers
_stateDispatchQueue
_stateMutex
_stateQueue
_statusOfValueForKey:error:firstNonLoadedDependencyKey:
_statusOfValueForKeyReturnsLoaded
_statusOfValueForKeyThatIsAlwaysLoaded
_statusOfValueWhileMutexLockedForKey:error:
_statusOfValuesIsTerminalWhileMutexLockedForKeys:
_stopListeningToFigAssetTrackNotifications
_stopListeningToLoaderNotifications
_stopObservingInputPropertiesThatMayChangeValueOfOptions
_stopObservingPlayer:
_stopObservingPropertiesOfCurrentItem:
_stopObservingReadyForMoreMediaDataKeyPath
_stopObservingTimebaseNotifications
_stopObservingTimebaseNotificationsForTimebase:
_stoppedResponding
_storageManagementPolicy
_storageURL
_storeObserver:clientCompletionHandler:forRenderer:
_streamingUTTypes
_stringForProperty:
_subObjectRegistrationQueue
_sublayersForPIP
_subsequentEndCompositionTime
_subtitleFormatDescriptionMatchesTextDisplayFlags:flagsMask:
_subtitleLayer
_supportsSampleReferences
_supportsSampleReferencesOnce
_supportsSampleReferencesReturningError:
_suppressesAudioRendering
_suppressesVideoLayers
_suppressionForOutputs:
_suspensionReasons
_suspensionReasonsThatTriggerWaiting
_suspensionsChangedNotificationToken
_swapSublayersBetweenPlayerLayer:andPlayerLayer:
_sweepFilterAudioEffect
_syncLayer
_synchronizeFigPlayerEvents
_synchronizeWithNewCurrentItem
_synchronizerInternal
_synthesizeMediaCharacteristicsOnce
_taggedCharacteristics
_taggedMediaCharacteristics
_taggedRangeMetadataDictionary
_taskToRequest
_tearDownFigAssetReader
_teardownNotificationHandlers
_tellAssetWriterToTransitionToFailedStatusWithError:
_templateItems
_terminalError
_testFlag
_textStyleRule
_threadSafetyQ
_throwsWhenAlreadyMindedAssetIsAdded
_time
_timeControlStatus
_timeForProperty:
_timeForProperty:defaultValue:
_timeJumpedNotificationIncludesExtendedDiagnosticPayload
_timeMapping
_timeRange
_timeRangeForProperty:
_timeToPauseBuffering
_timeToPausePlayback
_timebase
_timedMetadataGroupInternal
_timelineControlQueue
_timerQueue
_timerSource
_times
_title
_token
_tollFreeBridgedObjectForProperty:
_topLevelKey
_totalExpectedRequestCount
_totalFrameDrops
_totalStallCount
_totalStalls
_track
_trackDecryptorsByTrackID
_trackDictsByTrackID
_trackFormatDescriptions
_trackFormatDescriptionsByTrackID
_trackID
_trackIDs
_trackIDsNotProvidingMedia
_trackOutputInternal
_trackReader
_trackReferences
_trackReports
_trackWithTrackID:
_tracksBecomingReadyByTrackID
_tracksDidChange
_tracksFromAssetTrackIDs
_tracksOnce
_tracksWithClass:
_tracksWithFPTrackIDArray:fromFigPlaybackItem:
_transferActiveHapticChannelIndexToFig
_transferDisableColorMatchingToFig
_transferEnabledToFig
_transferHapticVolumeToFig
_transferLoudnessInfoToFig
_transferVideoEnhancementOptionsToFig
_transform
_transitionToClientInitiatedTerminalStatus:
_transitionToFailedStatusWithError:
_transitionToFailedStatusWithOSStatus:
_transitionToFinishWritingHelperWithFinishWritingOperations:
_transitionToStatus:error:
_transitionToStatus:failureError:
_transitionToTerminalStatus:
_transitionToTerminalStatus:error:
_transitionToTerminalStatusOperation
_transportControlStateForItemIdentifier:
_triggerFakeNotificationNamed:withPayload:
_triggerMediaRequestCallback
_trimsSampleDurations
_tryToMarkAsCancelled
_typeIdOfInitialFigManifold
_uninitializeProtectedContentPlaybackSupportSession:
_uninstallNotificationHandlers
_uniqueIDForCyptorUUID:cryptorKeyRequestID:
_unregisterAndReturnRetainedPrerollCompletionHandler
_unregisterForFigManifoldCallbacksForTrackID:
_unregisterForObjectNotifications
_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:finished:
_unregisterRequestForDataTask:
_unsafeUnretainedObject
_unstashClientLayers
_upcomingPTSExpectation
_updateAdvanceTimeForOverlappedPlaybackOnFigPlaybackItem
_updateAggressivelyCachesVideoFramesOnFigPlaybackItem
_updateAllowedAudioSpatializationFormats
_updateAllowedAudioSpatializationFormatsFromFigItem
_updateAlwaysMonitorsPlayabilityOnFigPlaybackItem
_updateAppliesPerFrameHDRDisplayMetadataOnFigPlaybackItem
_updateAudioSpatializationAllowed
_updateAudioTapProcessorOnFigPlaybackItem
_updateAutoSwitchAtmosStreamVariantsOnFigPlaybackItem
_updateAutomaticallyWaitsToMinimizeStallingOnFigPlayer
_updateBlendsVideoFramesOnFigPlaybackItem
_updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:
_updateCanUseNetworkResourcesForLiveStreamingWhilePausedOnFigPlaybackItem
_updateClosedCaptionLayerBounds:videoRelativeToViewport:captionsAvoidanceMargins:
_updateCommonKey
_updateConfiguredTimeOffsetFromLiveOnFigPlaybackItem
_updateContinuesPlayingDuringPrerollForRateChangeOnFigPlaybackItem
_updateContinuesPlayingDuringPrerollForSeekOnFigPlaybackItem
_updateCurrentItemPreferredPixelBufferAttributesAndVideoLayerSuppression
_updateDecoderPixelBufferAttributes:onFigPlayer:
_updateDecodesAllFramesDuringOrdinaryPlaybackOnFigPlaybackItem
_updateDisplayNameWithLocale:fallingBackToMatchingUndeterminedAndMultilingual:context:
_updateFigTimePitchAlgorithmOnFigPlaybackItem
_updateForwardPlaybackEndTimeOnFigPlaybackItem
_updateIFramePrefetchTargetDimensionsOnFigPlaybackItem
_updateIdentifier
_updateImageQueueInterpolationCurveOnFigPlaybackItem
_updateIsPartOfForegroundScene
_updateItemIdentifierForCoordinatedPlayback
_updateLanguageInformationFromExtendedLanguageTag:
_updateLanguageInformationFromLocale:
_updateLayerTreeGeometryWithVideoGravity:presentationSize:videoGravityShouldTriggerAnimation:
_updateLegibleSuppressionOnFigPlaybackItem:basedOnOutputs:
_updateLimitReadAheadOnFigPlaybackItem
_updateLoopTimeRangeOnFigPlaybackItem
_updateLoudnessInfoOnFigPlaybackItem
_updateMaximumForwardBufferDurationOnFigPlaybackItem
_updateMaximumTrailingBufferDurationOnFigPlaybackItem
_updateMediaKindOnFigPlaybackItem
_updateMinimumIntervalForIFrameOnlyPlaybackOnFigPlaybackItem
_updateMultipleRoutesDetected
_updateNonForcedSubtitleDisplayEnabledOnFigPlaybackItem
_updateOtherParticipantsUsingFigParticipantUUIDs:
_updateParticipantStateDictionaryWithParticipantState:
_updatePixelBufferAttributesForLayer:
_updatePlaybackLikelyToKeepUpTriggerOnFigPlaybackItem
_updatePlaybackPropertiesOnFigPlaybackItem
_updatePlayerItemState
_updatePreferredMaximumAudioSampleRateOnFigPlaybackItem
_updatePreferredMaximumResolutionForExpensiveNetworksOnFigPlaybackItem
_updatePreferredMaximumResolutionOnFigPlaybackItem
_updatePreferredMinimumResolutionOnFigPlaybackItem
_updatePreferredPeakBitRateForExpensiveNetworksOnFigPlaybackItem
_updatePreferredPeakBitRateOnFigPlaybackItem
_updatePresentationSize:
_updatePreservesTimeOffsetFromLive
_updateProxyTimebaseFromNewCurrentItem
_updateRTCReportingFlagsOnFigPlaybackItem
_updateRateFromTimebase
_updateReadyForDisplayForPlayerCurrentItem
_updateRefreshesClosedCaptionsImmediatelyAfterSeekingOnFigPlaybackItem
_updateRestrictionsOnFigPlaybackItem
_updateRestrictsAutomaticMediaSelectionToAvailableOfflineOptions
_updateReversePlaybackEndTimeOnFigPlaybackItem
_updateReversesMoreVideoFramesInMemoryOnFigPlaybackItem
_updateRouteDetectionEnabled
_updateSeekingWaitsForVideoCompositionRenderingOnFigPlaybackItem
_updateSnapTimeToPausePlaybackOnFigPlaybackItem
_updateSoundCheckVolumeNormalizationOnFigPlaybackItem
_updateSpeedThresholdForIFrameOnlyPlaybackOnFigPlaybackItem
_updateStartsOnFirstEligibleVariantOnFigPlaybackItem
_updateStatusWhileMutexLocked:figErrorCode:
_updateSuspensionReasons:
_updateTaggedMetadataArray:
_updateTaggedRangeMetadataArray:
_updateTextHighlightArrayOnFigPlaybackItem
_updateTextStyleRulesOnFigPlaybackItem
_updateTimeRangesOnFigAssetReaderReturningError:
_updateTimeToPauseBufferingOnFigPlaybackItem
_updateTimeToPausePlaybackOnFigPlaybackItem
_updateTrackAssociationToTrack:type:operation:
_updateTrackExtractionIDArrayProperty
_updateTransportControlStateDictionaryWithTransportControlState:
_updateUISettings
_updateUXMWithDisplayCriteria:
_updateUXMWithDisplayCriteriaWithLock:
_updateUsesIFrameOnlyPlaybackForHighRateScaledEditsOnFigPlaybackItem
_updateUsesMinimalLatencyForVideoCompositionRenderingOnFigPlaybackItem
_updateVariantPreferencesOnFigPlaybackItem
_updateVideoApertureModeOnFigPlaybackItem
_updateVideoEnhancementModeOnFigPlaybackItem
_updateVideoOutputs
_updateVideoSuppressionOnFigPlaybackItem:basedOnOutputs:
_updateVideoTargetOnFigPlayer
_updateVolumeAdjustmentOnFigPlaybackItem
_updateWaitingPoliciesArrayWithPolicies:
_updateWillNeverSeekBackwardsHintOnFigPlaybackItem
_updatedFrecentsList
_upstream
_useContentKeyBoss
_userVolume
_usesLegacyAutomaticWaitingBehavior
_usesVirtualCaptureCard
_uti
_validValuesForScalingMode
_validateHLSEncryptionMethod:
_validateLanguageCode:
_validateOutputSettingsDictionary:compatibilityDescription:
_validatePredicate:error:
_validateProtocolVersionList:
_validateRequiredPixelBufferAttributesForRenderContext:andReturnException:
_validateServerChallenge:
_validateSourcePixelBufferAttributes:andReturnException:
_validateVideoCompressionProperties:againstSupportedPropertyDictionary:forCodecType:exceptionReason:
_validatedGroupIdentifierKey:
_valueAsCFTypeForProperty:
_valueForKeyDependsOnMetadataValue:
_valueFromCFType:
_valueRequest
_valueRequestDidFinish
_valueStatus
_variant
_variantIndex
_variantQualifiers
_verifyDownloadConfigurationForAssetType
_videoApproximateDisplaySizeHeight
_videoApproximateDisplaySizeWidth
_videoAttributes
_videoComposition
_videoCompositionDidChange
_videoCompositionProcessorColorProperties
_videoCompositionQ
_videoCompositionTool
_videoGravity
_videoLayer
_videoLayers
_videoOutput
_videoOutputInternal
_videoOutputSettingsWithVideoSettingsDictionary:exceptionReason:
_videoOutputs
_videoQueue
_videoQueueQueue
_videoRange
_videoRectForBounds:
_videoRendererForRenderer:
_videoSettingWithSize:
_visualContext
_volumeChangedForGroupWithID:
_volumeControlSupportedDidChangeForEndpointWithID:
_volumeControlTypeChangedForGroupWithID:
_volumeControlTypeDidChangeForEndpointWithID:
_volumeCurveAsString
_volumeDidChangeForEndpointWithID:
_waitForLoadingOfValueDependentKey:
_waitInMode:untilDate:
_waitUntilFinishedIfNeeded
_waitingPoliciesArray
_weakContentKeyBoss
_weakContentKeySession
_weakDisplayLayer
_weakObserver
_weakPlayer
_weakReference
_weakReferenceToAsset
_weakReferenceToAssetReader
_weakReferenceToAssetWriter
_weakReferenceToAssetWriterInput
_weakReferenceToDelegate
_weakReferenceToDependencyHost
_weakReferenceToGroup
_weakReferenceToListener
_weakReferenceToMonitoringObject
_weakReferenceToObject
_weakReferenceToParser
_weakReferenceToPlayerItem
_weakReferenceToResourceLoader
_weakReferenceToSelf
_weakReferenceToSynchronizer
_weakSelf
_weakStorage
_web_errorWithDomain:code:URL:
_width
_willDeallocOrFinalize
_willEnterForeground:
_willManageSublayersAsSwappedLayers
_willSendRequest:request:redirectionResponse:
_windowSceneDidEnterBackground
_windowSceneWillEnterForeground:
_windowWithContextId:
_writingHelper
aboveHighWaterLevel
absoluteString
absoluteURL
acceptVisitor:flags:
accessLog
accessSerializer
accumulatedMetadataGroups
accumulationQueue
acquireWithError:
actionForKey:
activate
activateBackground:
activationContext
activeHapticChannelIndex
activeHapticChannelIndexWasSet
activeMode
addAnimation:forKey:
addAnimations:forKey:
addBoundaryTimeObserverForTimes:queue:usingBlock:
addCallbackToCancel:
addCallbackToCancelDuringDeallocation:
addContentKeyRecipient:
addDependency:
addEntriesFromDictionary:
addExtractionForOutput:figAssetReader:options:withOutputExtactionID:
addFragmentedAsset:
addFragmentedMovie:
addIdentifier:toWhitelistDictionary:
addIndex:
addIndexes:
addInput:
addInputGroup:
addItemToPlayQueueAfterPlaybackItemOfItem:
addKeySpace:key:toWhitelistDictionary:
addListenerWithWeakReference:callback:name:object:flags:
addMediaDataCollector:
addMediaDataCollector:locked:
addMutableTrackWithMediaType:copySettingsFromTrack:options:
addMutableTrackWithMediaType:preferredTrackID:
addMutableTracksCopyingSettingsFromTracks:options:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addObserverForName:object:queue:usingBlock:
addOperation:
addOperations:waitUntilFinished:
addOutput:
addOutputDevice:
addOutputDevice:options:completionHandler:
addOutputDevice:withOptions:completionHandler:
addPeriodicTimeObserverForInterval:queue:usingBlock:
addPixelBuffer:atPresentationTime:error:
addRenderer:
addRequest:
addSampleBuffer:error:
addSampleBufferDisplayLayer:
addSharedAudioOutputContext
addSublayer:
addTrackAssociationToTrack:type:
addTrackAssociationWithTrackOfInput:type:
advanceIntervalForDataAvailability
advanceIntervalForDelegateInvocation
advanceTimeForOverlappedPlayback
advanceTimeForOverlappedPlaybackWasSet
advanceToNextItem
advanceWakeUpInterval
advanceWakeUpIntervalIsValid
afterItem
aggressivelyCachesVideoFrames
aggressivelyCachesVideoFramesWasSet
airPlayProperties
airPlayVideoActive
airPlayVideoPlaying
alignsResumptionWithPrimarySegmentBoundary
alignsStartWithPrimarySegmentBoundary
allDevices
allExportPresets
allFileTypeIdentifiers
allHTTPHeaderFields
allKeysForObject:
allLikelyDestinations
allMediaSelections
allObjects
allSharedAudioOutputContextImpls
allSharedAudioOutputContexts
allValues
allocWithZone:
allowProgressiveResume
allowProgressiveStartup
allowProgressiveSwitchUp
allowWideColor
allowableMIMETypes
allowedAudioSpatializationFormats
allowedAudioSpatializationFormatsWasSet
allowedContentTypes
allowsAirPlayVideo
allowsEmptySelection
allowsExtendedReadAhead
allowsExternalPlayback
allowsHeadTrackedSpatialAudio
allowsKeyedCoding
allowsLegibleFallbackForAllAudibleMediaSelections
allowsOutOfBandTextTrackRendering
allowsPixelBufferPoolSharing
alternateGroupID
alternateTrackGroups
alwaysCopiesSampleData
alwaysMonitorsPlayability
anchorChapterType
ancillaryPerformanceInformationForDisplay
animation
animationForKey:
animationKeys
animationLayer
animationTool
animationWithKeyPath:
animations
anticipateRenderingUsingHint:
anticipatedPlaybackRate
apertureMode
appendData:
appendFailureReadWriteQueue
appendFormat:
appendMediaData:dataOffset:
appendPixelBuffer:withPresentationTime:
appendSampleBuffer:
appendSampleBuffer:decodeTime:presentationTime:error:
appendSampleBuffer:error:
appendStreamData:
appendStreamData:withFlags:
appendString:
appendTimedMetadataGroup:
appleAccessory
applicableOutputSampleRateForDesiredSampleRate:rounding:
applicationAuthorizedForPlayback
applicationPID
applicationPIDWasSet
applicationProcessID
appliesMediaSelectionCriteriaAutomatically
appliesPerFrameHDRDisplayMetadata
appliesPerFrameHDRDisplayMetadataWasSet
appliesPreferredTrackTransform
applyFigPauseSnapsToMediaTimeOfOriginator
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayByApplyingDifference:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
artworkData
asset
assetAnalysisMessages
assetCache
assetCacheForHTTPLiveStreamingWithURL:
assetCacheForProgressiveDownloadAndHTTPLiveStreamingWithURL:
assetCacheForProgressiveDownloadWithURL:
assetCacheInspector
assetCacheWithURL:
assetComparisonToken
assetDownloadSession:didFailWithError:
assetDownloadSession:didFinishDownloadForMediaSelection:
assetDownloadSession:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
assetDownloadSession:didResolveMediaSelection:
assetDownloadSession:didUpdateProgressWithExpectedBytes:bytesDownloaded:
assetDownloadSession:willDownloadVariants:
assetDownloadSessionDidFinishDownload:
assetDownloadSessionWithAsset:destinationURL:options:
assetDownloadSessionWithAsset:mediaSelections:destinationURL:options:
assetDownloadSessionWithDownloadToken:
assetDownloadSessionWithURL:destinationURL:options:
assetImageGeneratorWithAsset:
assetInitializationOptions
assetInspector
assetInspectorInitializationOnce
assetInspectorLoader
assetListResponse
assetPlaybackAssistantWithAsset:
assetProxyWithPropertyList:
assetReaderAudioMixOutputWithAudioTracks:audioSettings:
assetReaderOutputMetadataAdaptorWithAssetReaderTrackOutput:
assetReaderSampleReferenceOutputWithTrack:
assetReaderTrackOutput
assetReaderTrackOutputWithTrack:outputSettings:
assetReaderWithAsset:error:
assetTrack
assetTrackInspectorWithAsset:trackID:trackIndex:
assetTypeLoadingStatus
assetURLsReturningError:
assetVariantQualifierWithPredicate:
assetVariantQualifierWithVariant:
assetWeakReference
assetWithData:contentType:options:
assetWithFigPlaybackItem
assetWithURL:
assetWithURL:figPlaybackItem:trackIDs:dynamicBehavior:
assetWriter:didOutputSegmentData:segmentType:
assetWriter:didOutputSegmentData:segmentType:segmentReport:
assetWriter:didProduceFragmentedHeaderData:
assetWriter:didProduceFragmentedMediaData:fragmentedMediaDataReport:
assetWriterInput
assetWriterInput:shouldReplaceFormatDescription:replacementFormatDescription:
assetWriterInputGroupWithInputs:defaultInput:
assetWriterInputMetadataAdaptorWithAssetWriterInput:
assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:
assetWriterInputSelectionOptionWithAssetWriterInput:
assetWriterInputSelectionOptionWithAssetWriterInput:displaysNonForcedSubtitles:
assetWriterInputWithMediaType:outputSettings:
assetWriterInputWithMediaType:outputSettings:sourceFormatHint:
assetWriterTrack
assetWriterTrackWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:attachedAdaptor:error:
assetWriterWithURL:fileType:error:
assets
associateContentKeyRequest:
associatedExtendedLanguageTag
associatedInputsWithTrackAssociationType:
associatedMediaSelectionOptionInMediaSelectionGroup:
associatedPersistentIDs
associatedRemoteModeLayer
associatedTracksOfType:
associatedUnicodeLanguageIdentifier
associatedWithFragmentMinder
attachDepartureAnnouncingObjectMonitorToObject:monitoringObject:
attachToContentKeySession:contentKeyBoss:failedSinceAlreadyAttachedToAnotherSession:
attachedToAdaptor
attachedToExternalContentKeySession
attributeWithDomain:name:
audibleDRMInfo
audioAlternatesTrackGroup
audioConverterPropertiesForAudioSettingsDictionary:
audioMix
audioMixInputParameters
audioMixInputParametersForTrackID:
audioMixInputParametersWithAssetTrack:introFadeDuration:fadeOutStart:fadeOutDuration:
audioMixInputParametersWithTrack:
audioOptions
audioOutputDeviceUniqueID
audioOutputSettings
audioOutputSettingsWithAudioSettingsDictionary:
audioOutputSettingsWithTrustedAudioSettingsDictionary:
audioPlaybackEnabledAtAllRates
audioProcessingTap
audioSession
audioSessionMediaPlayerOnly
audioSettings
audioSettingsDictionary
audioSpatializationAllowed
audioSpatializationAllowedWasSet
audioSpatializationMode
audioTapProcessor
audioTapProcessorsForTracks
audioTimePitchAlgorithm
audioTimePitchAlgorithmsForTracks
audioTrackGroupHandling
audioTracks
audioVolumeCurvesForTracks
audiovisualBackgroundPlaybackPolicy
audiovisualMIMETypes
audiovisualTypes
authHandler
authHandlerObjectID
authorizationRequiredForPlayback
authorizationTokenType
autoSwitchAtmosStreamVariants
autoSwitchStreamVariants
automaticallyAllowsConnectionsFromPeersInHomeGroup
automaticallyHandlesInterstitialEvents
automaticallyLoadedAssetKeys
automaticallyNotifiesObserversForKey:
automaticallyNotifiesObserversOfAirPlayVideoActive
automaticallyNotifiesObserversOfAllowProgressiveResume
automaticallyNotifiesObserversOfAllowProgressiveStartup
automaticallyNotifiesObserversOfAllowProgressiveSwitchUp
automaticallyNotifiesObserversOfAsset
automaticallyNotifiesObserversOfAutoSwitchStreamVariants
automaticallyNotifiesObserversOfCurrentItem
automaticallyNotifiesObserversOfExternalPlaybackActive
automaticallyNotifiesObserversOfHasEnabledAudio
automaticallyNotifiesObserversOfHasEnabledVideo
automaticallyNotifiesObserversOfLoadedTimeRanges
automaticallyNotifiesObserversOfPlaybackBufferEmpty
automaticallyNotifiesObserversOfPlaybackBufferFull
automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp
automaticallyNotifiesObserversOfPresentationSize
automaticallyNotifiesObserversOfRate
automaticallyNotifiesObserversOfSavesDownloadedDataToDiskWhenDone
automaticallyNotifiesObserversOfSeekableTimeRanges
automaticallyNotifiesObserversOfStatus
automaticallyNotifiesObserversOfTracks
automaticallyNotifiesObserversOfUserVolume
automaticallyNotifiesObserversOfUsesAirPlayVideoWhileAirPlayScreenIsActive
automaticallyNotifiesObserversOfUsesAudioOnlyModeForExternalPlayback
automaticallyNotifiesObserversOfUsesLegacyAutomaticWaitingBehavior
automaticallyNotifiesObserversOfUsesMinimalLatencyForVideoCompositionRendering
automaticallyNotifiesObserversOfVariantIndex
automaticallyNotifiesObserversOfVibrationPattern
automaticallyPreservesTimeOffsetFromLive
automaticallyWaitsToMinimizeStalling
autorelease
auxiliaryContentConfigurations
auxiliaryOutputContext
auxiliaryTrackID
auxiliaryTrackLayerSetLast
avPlayerLayers
availableBluetoothListeningModes
availableCanonicalizedChapterLanguages
availableChapterLanguages
availableChapterLocales
availableFileSize
availableHDRModes
availableMediaCharacteristicsWithMediaSelectionOptions
availableMediaTypes
availableMetadataFormats
availableOutputChannelCountForDesiredChannelCount:rounding:
availableOutputDeviceGroups
availableOutputDevices
availableOutputDevicesObject
availableOutputSettingsPresets
availableTrackAssociationTypes
availableVideoDynamicRanges
averageAudioBitrate
averageBitRate
averageBitRateForSourceFormatDescription:andTargetFrameRate:andEncoderSpecification:
averageNonDroppableFrameIntervalIsSupportedByDefaultEncoderForVideoCodec:
averageVideoBitrate
avfParticipantsForFigParticipantsUUIDs:
backingSBuf
baseAudioSettings
baseSettingsProvider
baseSettingsProviderForPreset:
baseVideoSettings
batteryLevel
begin
beginDate
beginInterruption
beginInterruptionFromInterruptor:
beginPassIfAppropriate
beginPassReturningError:
beginSuspensionForReason:
blendingTransferFunction
blendsVideoFrames
blendsVideoFramesWasSet
blockOperationWithBlock:
boolValue
borrowScreenForClient:reason:
bounds
bridge
bridgeBetweenHandlerAndSession
broadcast
builtInCompositorName
bundleIdentifier
bundleWithIdentifier:
byteRangeAccessSupported
bytes
cacheKey
cachePrimingDownloadTokenNum
cachedContentInformation
cachedData
cachedDateFormatterFormat
cachedDateFormatterTemplate
cachedFigLegibleFallbackMediaSelectionCriteriaProperty
cachedFigMediaSelectionCriteriaProperty
cachedTracks
callbackContextForToken:
callbackDidFireWithChangeDictionary:
canAccessAppleMusic
canAccessRemoteAssets
canAccessiCloudMusicLibrary
canAddInput:
canAddInputGroup:
canAddOutput:
canAddTrackAssociationWithTrackOfInput:type:
canApplyOutputSettings:forMediaType:
canBeConvertedToEncoding:
canBeGroupLeader
canBeGrouped
canCommunicateWithAllLogicalDeviceMembers
canConformColorOfSourceFrames
canContainFragments
canContainMovieFragments
canFetchMediaDataFromSender
canFullySpecifyOutputFormatReturningReason:
canInsertItem:afterItem:
canOverlapPlaybackFromPlayerItem:toPlayerItem:
canParseExtendedMIMEType:
canPerformMultiplePasses
canPerformMultiplePassesOverSourceMediaData
canPlayEncryptedProgressiveDownloadAssets
canPlayFastForward
canPlayFastReverse
canPlayReverse
canPlaySlowForward
canPlaySlowReverse
canProvideSampleBuffers
canProvideSampleCursors
canRelayCommunicationChannel
canSetVolume
canStartRespondingToEachPassDescriptionReturningReason:
canStepForward
canSupplyIncrementalDataImmediately
canUseNetworkResourcesForLiveStreamingWhilePaused
cancel
cancelAllCGImageGeneration
cancelAllCallbacks
cancelAllPendingVideoCompositionRequests
cancelAndReleaseProgressTimerOnQueue
cancelAuthenticationChallenge:
cancelCurrentEventWithResumptionOffset:
cancelExport
cancelLoading
cancelPendingPrerolls
cancelPendingSeeks
cancelReading
cancelWriting
cancellationReason
cancellationTest
cancelled
cancelledRequestIDThreshold
canonicalLanguageIdentifierFromString:
canonicalLocaleIdentifierFromString:
captionContentInsets
captionLayerWithPlayer:
captionPipelineStrategy
captionRenderingStrategy
captureCompleteURI
caseBatteryLevel
caseInsensitiveCompare:
category
changeSeed
channelCount
channelCountForMediaOption:
chapterGroupIndex
chapterGroupInfo
chapterIndex
chapterMetadataGroupsBestMatchingPreferredLanguages:
chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:
chapterType
charValue
characterAtIndex:
characterSetWithCharactersInString:
checkAVAssetWriterInputConfigurationToOutputSegmentDataForOutputFileTypeProfile:preferredOutputSegmentInterval:returningDebugDescription:
checkForAvailableHDRModesChanges
class
classForCoder
classForTrackInspectors
classifyingLabel
classifyingLabels
cleanApertureDictionary
cleanApertureDimensions
clear
client
clientCanReceivePersistableContentKeyRequest
clientLayers
clientName
clientPriority
clientRequestedPlaybackCoordinator
clientStateOnRequestedMediaDataChangeNotification
close
closedCaptionDisplayEnabled
closedCaptionLayer
closedCaptionLayers
closedCaptionsDisplayPublisher
clusterID
clusterType
clusteredDeviceDescriptions
code
codecTypes
colorPrimaries
colorPropertiesConsideringFormatDescriptions:colorPrimaries:transferFunction:ycbcrMatrix:
colorSpace
colorSpaceFromSourceFormatDescriptions:andRendererColorSpace:
colorTransferFunction
colorWithRed:green:blue:
colorYCbCrMatrix
commChannelManager
commit
commitCustomVideoCompositorPropertiesAndReturnError:
commonKey
commonMetadata
communicationChannel:didReceiveData:
communicationChannelDelegate
communicationChannelDidClose:
communicationChannelImpl:didReceiveData:
communicationChannelImplDidClose:
communicationChannelManager:didCloseCommunicationChannel:
communicationChannelManager:didReceiveData:fromCommunicationChannel:
compare:
compare:options:
comparePositionInDecodeOrderWithPositionOfCursor:
compatibleMediaTypes
compatibleTrackForCompositionTrack:
compatibleWithAirPlayVideo
compatibleWithSavedPhotosAlbum
completionDueDate
completionHandler
completions
componentsJoinedByString:
componentsSeparatedByString:
composable
compositingRequest
composition
compositionFrame
compositionFrame:didFinishWithComposedPixelBuffer:
compositionFrame:didFinishWithError:
compositionFrameDidCancel:
compositionTrackSegmentWithTimeRange:
compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:
compositionWithURLAssetInitializationOptions:
configurationGroup
configurationQueue
configurationState
configureAppIdentifier:
configureUsingBlock:completionHandler:
configureUsingBlock:options:completionHandler:
configuredClusterSize
configuredTimeOffsetFromLive
conformsToProtocol:
connectedPairedDevices
connection
containsFragments
containsIndex:
containsMovieFragments
containsTweening
contentAuthorizedForPlayback
contentIdentifier
contentInformationCache
contentInformationCachingQueue
contentInformationRequest
contentKey
contentKeyRecipients
contentKeyRequestByKeySpecifierMap
contentKeyRequestDataForApp:contentIdentifier:options:error:
contentKeyRequestDidProduceContentKey:
contentKeyRequestDidSucceedWithBoss:keySpecifier:requestID:cryptor:
contentKeyResponseWithAuthorizationTokenData:
contentKeyResponseWithClearKeyData:initializationVector:
contentKeyResponseWithFairPlayStreamingKeyResponseData:
contentKeyResponseWithFairPlayStreamingKeyResponseData:renewalDate:
contentKeySession
contentKeySession:contentKeyRequest:didFailWithError:
contentKeySession:contentKeyRequestDidSucceed:
contentKeySession:contentProtectionSessionIdentifierDidChangeForReportGroup:
contentKeySession:didProvideContentKey:
contentKeySession:didProvideContentKeyRenewalRequest:
contentKeySession:didProvideContentKeyRequest:
contentKeySession:didProvideContentKeyRequests:forInitializationData:
contentKeySession:didProvidePersistableContentKeyRequest:
contentKeySession:didProvideRenewingContentKeyRequest:
contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:
contentKeySession:externalProtectionStatusDidChangeForContentKeyRequest:
contentKeySession:shouldRetryContentKeyRequest:reason:
contentKeySessionContentProtectionSessionIdentifierDidChange:
contentKeySessionCustomURLHandler
contentKeySessionDidGenerateExpiredSessionReport:
contentKeySessionHandlerObjectID
contentKeySessionWithKeySystem:storageDirectoryAtURL:
contentKeySessionWithLegacyWebKitCompatibilityModeAndKeySystem:storageDirectoryAtURL:
contentKeySpecifier
contentKeySpecifierForKeySystem:identifier:options:
contentKeySpecifiersEligibleForPreloading
contentKeyWithSpecifier:andCryptor:
contentLength
contentProtectionSessionIdentifier
contentType
contentsAreFlipped
contentsScale
contextID
contextId
continueWithoutCredentialForAuthenticationChallenge:
continuesPlayingDuringPrerollForRateChange
continuesPlayingDuringPrerollForSeek
convertRect:toLayer:
cookieWithProperties:
coordinateRateChangeToRate:options:
coordinateSeekToTime:options:
coordinatedPlaybackIdentifierChangeNotificationToken
coordinationMediumDelegate
copy
copyAssetRemovingTrackID:
copyAssetWithAdditionalTrackID:mediaType:
copyAssetWithReplacementFormatDescription:forTrackID:
copyAudioChannelLayoutForSourceFormatDescription:audioChannelLayoutSize:
copyCGImageAtTime:actualTime:error:
copyCryptorForCryptKeyAttributes:
copyCryptorForFormatDescription:cryptorOut:errorOut:
copyCryptorForIdentifier:initializationData:
copyCryptorForInitializationData:
copyCurrentSampleFormatDescription
copyDefaultSecureStopManagerForAppIdentifier:storageDirectoryAtURL:
copyDisplayedPixelBuffer
copyFigSampleBufferAudioRenderer:
copyFormatDescription
copyKeychainCredentialForUrl:
copyLastPixelBuffer:
copyNextSampleBuffer
copyNextSampleBufferForTrackID:flags:
copyPixelBufferForItemTime:itemTimeForDisplay:
copyPixelBufferForItemTime:remove:itemTimeForDisplay:
copyPixelBufferForSourceTime:sourceTimeForDisplay:
copyPropertiesFromStringGenerator:
copyWithZone:
copyWithZone:newAssetOptions:
count
countByEnumeratingWithState:objects:count:
countOfBytesReceived
createAndAddSampleBufferForRequest:error:
createAndInstallCustomURLHandlerForAsset:outHandler:
createAudioRendererWithAllocator:options:error:
createCryptorIfNecessaryForIdentifier:initializationData:formatDescription:hlsMethod:error:
createCryptorIfNecessaryForInitializationData:formatDescription:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createProtectorSessionIdentifierIfNecessary
createRenderSynchronizerWithAllocator:options:error:
createSampleBufferForCurrentSampleReturningError:
createSampleBufferForRequest:
createSampleBufferForRequest:addingToBatch:error:
createSampleBufferForRequest:error:
createSampleBufferFromCurrentSampleToEndCursor:error:
createVideoQueue:
creationDate
cropRectangleRamps
cryptorKeyRequestID
cryptorOptionsForIdentifier:initializationData:formatDescription:hlsMethod:
cryptorUUID
cryptorUUIDToContentKeyRequestMap
cryptorsByIdentifer
cueingOptions
currentBluetoothListeningMode
currentBundleIdentifier
currentCarPlayExternalDevice
currentChunkInfo
currentChunkStorageRange
currentChunkStorageURL
currentConfigurationIsFinal
currentDate
currentEstimatedDate
currentEvent
currentExternalDevice
currentFigAudioRendererFactory
currentFigRenderSynchronizerFactory
currentFigVideoQueueFactory
currentHandler
currentHardwareInputNumberOfChannels
currentHardwareOutputNumberOfChannels
currentHardwareSampleRate
currentItem
currentItemChanged
currentItemIdentifier
currentItemNonForcedSubtitlesEnabled
currentItemNonForcedSubtitlesEnabledSink
currentItemPreferredPixelBufferAttributesNotificationToken
currentItemPresentationSize
currentItemPropertyUpdateQueue
currentItemPublisher
currentItemSuppressesVideoLayersNotificationToken
currentItemTracksChanged
currentItemTracksSink
currentLocale
currentMediaSelection
currentObservedBitrate
currentOffset
currentPassDescription
currentPlatformIdentifier
currentProcess
currentRate
currentRequest
currentRoutingSession
currentSampleAudioDependencyInfo
currentSampleDependencyAttachments
currentSampleDependencyInfo
currentSampleDuration
currentSampleIndexInChunk
currentSampleStorageRange
currentSampleSyncInfo
currentSize
currentStableVariantID
currentState
currentSuspensions
currentThread
currentTime
currentTimeRanges
currentUXMDisplayCriteria
currentUnfoldedTime
currentVideoFrameRate
customCompositorClass
customRouteDiscoverySession
customRoutesPresent
customURLAuthenticationUsingKeychain
customURLHandler
customURLHandlerObjectID
customURLRequest
customURLRequestID
customURLResponse
customVideoCompositor
customVideoCompositor:wouldHaveTriggeredException:
customVideoCompositorClass
customVideoCompositorSession
data
dataCachingQueue
dataRequest
dataResponseQueue
dataTaskWithRequest:
dataTaskWithURL:completionHandler:
dataType
dataTypeForValue:
dataUsingEncoding:
dataUsingEncoding:allowLossyConversion:
dataValue
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithContentsOfFile:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
date
dateByAddingTimeInterval:
dateFormatFromTemplate:options:locale:
dateRangeMetadataGroupInternal
dateValue
dateWithTimeIntervalSinceNow:
debugDescription
declareKeyPathDependenciesWithRegistry:
decodabilityValidationResult
decodable
decodeBoolForKey:
decodeCMTimeForKey:
decodeCMTimeMappingForKey:
decodeCMTimeRangeForKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeXPCObjectForKey:
decodesAllFramesDuringOrdinaryPlayback
decodesAllFramesDuringOrdinaryPlaybackWasSet
decreaseVolumeByCount:
defaultActionForKey:
defaultAlternateGroupID
defaultAudioOutputSettings
defaultCIContext
defaultCIContextProvider
defaultCenter
defaultContentKeyGroup
defaultFileExtension
defaultFrecentsReader
defaultFrecentsWriter
defaultGroupID
defaultInput
defaultManager
defaultMediaDataStorage
defaultMediaSelectionCriteriaForMediaCharacteristic:
defaultOption
defaultOutputContextImplClass
defaultOutputSettingsForMediaType:
defaultQueue
defaultRate
defaultSharedOutputContext
defaultSharedOutputContextImpl
defaultVideoOutputSettings
delaysRateChangeUntilHasSufficientMediaData
delegate
delegateQueue
delegateWakeupSource
dependencies
dependencyFactory
dependencyHostIsFullyInitialized
dependencyManager
dependentProperty
derivedIdentifierCounter
description
descriptionForNextPass
descriptionStringForBitRate:
descriptionStringForFormatOfTrack:
descriptionStringForTracksOfPlayerItem:
descriptionStringForVideoRangeOfFormatDescription:
destination
destinationURL
detachVideoComposition
detectsCustomRoutes
determineCompatibilityOfExportPreset:withAsset:outputFileType:completionHandler:
determineCompatibleFileTypesWithCompletionHandler:
determineValidityForAsset:timeRange:validationDelegate:completionHandler:
deviceFeatures
deviceID
deviceIDs
deviceName
devicePresenceDetected
deviceSubType
deviceType
devicesPresent
dict
dictionary
dictionaryRepresentation
dictionaryRepresentationWithTimeRange:
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
dictionaryWithValuesForKeys:
didBecomeReadyForBasicInspection
didBecomeReadyForInspectionOfDuration
didBecomeReadyForInspectionOfPresentationSize
didBecomeReadyForInspectionOfRecommendedTimeOffsetFromLive
didBecomeReadyForInspectionOfTracks
didChangeValueForKey:
didCheckForSaveRestriction
didEnterBackgroundNotificationToken
didEnterForegroundNotificationToken
didEnterTerminalState
didFinishSuspensionNotificationToken
didFireKVOForAssetForNonStreamingItem
didInformObserversAboutAvailabilityOfTracks
didProvideKeyRequestWithBoss:keySpecifier:requestID:renewalRequest:
didReceiveFigAssetWriterNotificationWithSuccess:error:
didSetAssetToAssetWithFigPlaybackItem
didStartInitialSession
didStartLoadingMetadata
dimensions
dimensionsAreBoundingBox
direction
directoryForTemporaryFiles
disableActions
disableColorMatching
disableColorMatchingWasSet
disableLooping
disallowsAMRAudio
disallowsAutoPauseOnRouteRemovalIfNoAudio
disallowsHardwareAcceleratedVideoDecoder
disallowsVideoLayerDisplayCompositing
discoveryMode
discoveryTimestamp
diskCachingPermitted
dispatchQueue
displayName
displayNameForKey:value:
displayNameWithLocale:
displayResolutionHeight
displayResolutionWidth
displayStringGenerator
displaysNonForcedSubtitles
displaysUsedForPlayback
domain
doubleValue
downloadConfigurationWithAsset:title:
downloadDestinationURL
downloadToken
drain
duration
earliestAvailablePixelBufferItemTime
earliestPresentationTimeStamp
edgeWidths
editAssetTrackID
editAssetURL
effectParameters
effectiveEQPreset
effectiveLoudnessInfo
electronicTollCollection
eligibleForHDRPlayback
eligibleOutputSettingsDictionaryKeys
eligibleToBePredictedOutputDevice
empty
enableCRABSCache
enableHLSCache
enablePostProcessing
enabledWasSet
encodeBool:forKey:
encodeCMTime:forKey:
encodeCMTimeMapping:forKey:
encodeCMTimeRange:forKey:
encodeDouble:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodeXPCObject:forKey:
encodedPixelsDimensions
encoderIsAvailableOnCurrentSystemReturningError:
encoderSupportsMultiPass
endCompositionTime
endInterruptionFromInterruptor:category:flags:
endInterruptionWithFlags:
endPassWithCompletionHandler:
endProposingNewTime:
endSessionAtSourceTime:
endowmentNamespaces
endpoint
enqueueOperation:
enqueueSampleBuffer:
enqueueSampleBuffer:bufferEnqueueingInfo:
ensureCryptorWithFormatDescription:error:
ensureProgressTimerIsRunningOnQueueWithError:
ensuresActiveAudioSessionWhenStartingPlayback
enterPIPModeRedirectingVideoToLayer:
entireLengthAvailableOnDemand
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
environmentalConditions
eqPreset
error
errorComment
errorDomain
errorLog
errorThatOccurredBeforeStartReading
errorWithDomain:code:userInfo:
establishedAutomaticallyFromLikelyDestination
estimateMaximumDurationWithCompletionHandler:
estimateOutputFileLengthWithCompletionHandler:
estimatedDataRate
estimatedOutputFileLength
estimatedOutputFileLengthForPreset:duration:properties:
evaluateDependenciesAndMarkAsExecuting
evaluateWithObject:substitutionVariables:
eventType
events
exceptionWithName:reason:userInfo:
excludedFromAutoselectionInTrackGroup
expectMinimumUpcomingSampleBufferPresentationTime:
expectMonotonicallyIncreasingUpcomingSampleBufferPresentationTimes
expectedAssetTypes
expectedContentLength
expectedCurrentItemIdentifier
expectedItemTimeAtHostTime:
expectsMediaDataInRealTime
expectsPropertyRevisedNotifications
expirationDate
expire
exportAsynchronouslyWithCompletionHandler:
exportPresetsCompatibleWithAsset:
exportSessionWithAsset:presetName:
exportable
extendedLanguageTag
extendedLogDataStringEncoding
extent
externalDeviceHIDWithUUID:
externalDeviceHIDs
externalPlaybackActive
externalPlaybackType
externalPlaybackVideoGravity
externalProtectionRequested
externalProtectionState
externalProtectionStateChangedCallbackWithBoss:keySpecifier:
externalProtectionStatus
externalProtectionStatusForCryptor:withDisplays:
extraFigProperties
extractionCompleteForCurrentConfiguration
extractionID
extras
failProcessingContentKeyRequestWithIdentifier:initializationData:error:
failed
fallbackIDs
fallbackTrack
fieldMode
figAlternate
figAsset
figAssetDidBecomeReadyForInspectionOfMediaSelectionOptions
figAssetInitializationOnce
figAssetProvider
figAssetReader
figAssetTrack
figAssetTrackNotificationListenerWeakReference
figAssetWriter
figAudioRenderer
figChapterGroupInfo
figChapters
figConfigurationQueue
figCryptor
figDictionary
figEndpoint
figEndpointOutputDeviceImpl
figEvent
figExportSession
figFileTypeProfileFromAVFileTypeProfile:
figFormatReaderFileFormat
figFragmentedMediaDataReportDict
figMediaType
figMetadataOutputsDictionaryOptions
figPlaybackCoordinatorConfigQueue
figPlaybackItemAccessorQueue
figPlaybackItemIsReadyForInspection
figPlaybackItemSetterQueue
figPlaybackItemToIdentifyNextCurrentItem
figPlayer
figPlayerActionForActionAtItemEnd:
figSampleGenerator
figSourceClock
figSynchronizerAccessQueue
figTimelineCoordinatorConfigQueue
figTrackReader
figTrackReferences
figVideoCompositor
fileDownloadProgressTimer
fileExistsAtPath:
fileSize
fileType
filteringRequestsInFlight
finalStepWorkaroundOperationWithFigAssetWriter:
findCompatibleTrackForCompositionTrack:completionHandler:
findUnusedTrackIDWithCompletionHandler:
finishCancelledRequest
finishLoading
finishLoadingWithError:
finishLoadingWithResponse:data:redirect:
finishWithComposedVideoFrame:
finishWithError:
finishWithImage:context:
finishWriting
finishWritingDelegate
finishWritingDelegateOperationWithAssetWriter:andFigAssetWriter:andDelegate:
finishWritingWithCompletionHandler:
finished
fireAvailableHDRModesDidChangeNotification
fireEligibleForHDRPlaybackDidChangeNotification
firstFragmentSequenceNumber
firstObject
firstVideoSampleInformation
float64RangeWithAudioValueRange:
float64RangeWithMinimum:maximum:
floatValue
flush
flushAndRemoveImage
flushFromSourceTime:completionHandler:
flushSegment
flushWithRemovalOfDisplayedImage:completionHandler:
foldedTimebase
formatDescriptionReplacements
formatDescriptions
formatDescriptionsForTrackID:
formatIDs
formatReader
formatReaderInitializationOnce
formatSpecificationWithOutputSettings:sourceFormatDescription:
formatTemplate
formattedDisplayString
forwardPlaybackEndTime
forwardPlaybackStartTime
forwardRequestToContentKeySession
fragmentCount
fragmentMindingInterval
fragmentWithSequenceNumber:
fragmentedAssetMinderWithAsset:mindingInterval:
fragmentedMovieMinderWithMovie:mindingInterval:
fragments
frame
frameDuration
frameRateConversionAlgorithm
frecencyInfoForDeviceWithID:
frecencyScore
frecencyScoreForDeviceID:
fromValue
fullListOfAllowableMIMETypes
fullWidth
fullyInitializedAndNotDeallocating
gaplessInfo
gaplessSourceTimeRange
generateCGImageAsynchronouslyForTime:completionHandler:
generateCGImagesAsynchronouslyForTimes:completionHandler:
generateImagesAsyncQueue
generateStreamingContentKeyRequestDataAsynchronouslyForApp:contentIdentifier:options:completionHandler:
generator
getAndClearClientError
getApplicationProcessID:
getAudioStreamBasicDescription:forAudioFileTypeID:sourceFormatDescription:
getBytes:length:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
getCString:maxLength:encoding:
getCropRectangleRampForTime:startCropRectangle:endCropRectangle:timeRange:
getHudSetting
getObjectValue:forString:errorDescription:
getOpacityRampForTime:startOpacity:endOpacity:timeRange:
getRetainedDelegate:retainedDelegateQueue:
getScaleFactorForDisplaySize:
getStatus:error:
getTransformRampForTime:startTransform:endTransform:timeRange:
getUUIDBytes:
getValue:
getVolume:forCategory:
getVolumeRampForTime:startVolume:endVolume:timeRange:
getVolumeRampForTime:startVolume:endVolume:timeRange:rampMode:
group
groupContainsGroupLeader
groupDictionaries
groupLeader
hadAssociatedOnscreenPlayerLayerWhenSuspended
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleNewParticipantStateDictionary:
handleNewTransportControlStateDictionary:
handleRemovalOfParticipant:
handleReplacementParticipantStateDictionaries:
handlersToCallWhenReadyForEnqueueing
handlersToCallWhenReadyToPlay
hapticVolume
hapticVolumeWasSet
hasAdministratorPrivileges
hasAnyKeyRequestSucceeded
hasAudibleBooksContent
hasAudioSampleDependencies
hasEnqueuedVideoFrame
hasEnqueuedVideoFrameChanged:
hasEqualPropertiesToFigVideoCompositor:
hasInstanceIdentifierMapping
hasMediaCharacteristic:
hasMediaCharacteristics:
hasNewPixelBufferForItemTime:
hasPrefix:
hasProtectedContent
hasProtector
hasSaveRestriction
hasSeamSamples
hasSufficientMediaDataForReliablePlaybackStart
hasVideo
hash
haveAllRequestsBeenReceived
haveCPEProtector
haveInitialSamples
headTrackedSpatialAudioActive
headTrackedSpatialAudioMode
height
helper
helperQueue
helperReadWriteQueue
highQualityRendering
honorContentScale
host
hostApplicationInForeground
hostClockTime
httpSessionIdentifier
hudEnabled
hudLayer
iOSUIRequestedForApplicationURL:
iTunesAudioContext
identifier
identifierForKey:keySpace:
identifierForPlayerItem:
identifierName
identifiers
identifyingMACAddress
identifyingTag
identifyingTagClass
imageByApplyingTransform:
imageData
imageQueueInterpolationCurve
imageQueueInterpolationCurveWasSet
imageRequestQueue
imageValue
imageWithCVPixelBuffer:
impl
implEventListener
implementsCopyChunkDetails
implementsCopySampleLocation
implementsCreateSampleBuffer
implementsGetDecodeTimeStamp
implementsGetDependencyInfo
implementsGetDuration
implementsGetMPEG2FrameType
implementsTestReorderingBoundary
inUseByPairedDevice
increaseVolumeByCount:
indexAtPosition:
indexOfObject:
indexOfObjectIdenticalTo:
indexOfObjectPassingTest:
indexPathByAddingIndex:
indexPathWithIndex:
indexSet
indexSetWithIndex:
indexesOfObjectsPassingTest:
indicatedAverageBitrate
indicatedBitrate
init
initForKeySystem:identifier:initializationData:options:
initForKeySystem:identifier:options:
initForKeySystem:initializationData:
initForObservingValueAtKeyPath:onObject:
initForUnitTests
initInternal
initUsingCompositingRequest:sourceFrame:cancellationTest:defaultCIContextProvider:completionHandler:
initUsingSession:withRenderContext:compositionFrame:atTime:usingSources:instruction:withSampleBuffers:
initWithAVAudioSettingsDictionary:exceptionReason:
initWithAVVideoSettingsDictionary:exceptionReason:
initWithArray:
initWithArray:key:keySpace:locale:
initWithAsset:
initWithAsset:automaticallyLoadedAssetKeys:
initWithAsset:dictionary:
initWithAsset:error:
initWithAsset:mediaCharacteristics:
initWithAsset:mediaSelections:destinationURL:options:
initWithAsset:mediaType:
initWithAsset:mindingInterval:
initWithAsset:presetName:
initWithAsset:propertyList:
initWithAsset:timebase:
initWithAsset:title:
initWithAsset:trackIDs:
initWithAssetInspector:
initWithAssetWriterInput:
initWithAssetWriterInput:displaysNonForcedSubtitles:
initWithAssetWriterInput:sourcePixelBufferAttributes:
initWithAudioSettingsDictionary:exceptionReason:
initWithAudioTracks:audioSettings:
initWithAudioValueRange:
initWithAuthenticationChallenge:sender:
initWithAuthenticationChallenge:sender:requestInfo:requestID:
initWithAutomaticallyWaitsToMinimizeStalling:usesLegacyAutomaticWaitingBehavior:timeControlStatus:
initWithAvailableFigEndpoints:
initWithBase64EncodedData:options:
initWithBlock:
initWithCMNotificationCenter:
initWithCallbackContextRegistry:observer:object:keyPath:options:block:
initWithCallbackQueue:block:
initWithCapacity:
initWithChannelCount:mediaSelectionOption:operatorType:
initWithCoder:
initWithConfiguration:
initWithConfiguration:error:
initWithConfigurationState:
initWithConfigurationState:assetWriter:
initWithConfigurationState:assetWriter:error:
initWithConfigurationState:assetWriterTrack:error:
initWithConfigurationState:finishWritingOperations:figAssetWriterCallbackContextToken:
initWithConfigurationState:terminalError:
initWithConfigurationState:terminalStatus:
initWithContentKeySession:contentKeyBoss:useContentKeyBoss:keySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:isRenewalRequest:requestID:providesPersistableKey:preloadingRequestOptions:identifier:
initWithContentKeySession:reportGroup:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:isRenewalRequest:
initWithContentKeySession:reportGroup:identifier:contentIdentifier:keyIDFromInitializationData:initializationData:preloadingRequestOptions:providesPersistableKey:
initWithContentType:
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:anticipatedPlaybackRate:completionDueDate:
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:itemTime:shouldPause:shouldBufferInAnticipationOfPlayback:anticipatedPlaybackRate:completionDueDate:
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:rate:itemTime:hostClockTime:
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:shouldBufferInAnticipationOfPlayback:anticipatedPlaybackRate:
initWithCoordinator:reason:
initWithCoordinatorGenerator:
initWithCount:firstSequenceNumber:
initWithCreationOptions:
initWithData:contentType:
initWithData:contentType:options:
initWithData:encoding:
initWithData:options:
initWithData:options:error:
initWithDependencyHost:
initWithDescriptionOfHowAllObservedPropertyChangesAreSerializedWithDispatcherDeallocation:
initWithDeviceFeatures:
initWithDeviceID:channelUUID:syncController:
initWithDeviceID:deviceName:deviceSubType:isClusterLeader:modelID:
initWithDeviceID:syncController:
initWithDictionary:
initWithDispatchQueue:
initWithDownloadToken:
initWithEndpoint:
initWithEndpoint:customURLHandlerObjectID:authHandlerObjectID:contentKeySessionHandlerObjectID:
initWithExplanation:target:attributes:
initWithExternalDevice:
initWithExternalDevice:client:reason:
initWithExternalDeviceAndHIDDictionary:hidDictionary:
initWithFigAlternate:
initWithFigAlternateObjC:
initWithFigAlternateObjC:mediaSelectionOption:
initWithFigAsset:
initWithFigAsset:forAsset:
initWithFigAssetWriter:
initWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:error:
initWithFigDictionary:
initWithFigEndpoint:
initWithFigError:userInfo:
initWithFigFragmentedMediaDataReportDictionary:
initWithFigPlayer:
initWithFigSampleCursor:
initWithFigSegmentReportDictionary:
initWithFigSegmentReportSampleInformationDictionary:
initWithFigSegmentTrackReportDictionary:
initWithFigVideoCompositor:clientRequiredPixelBufferAttributes:videoComposition:pixelBufferPool:
initWithFileType:
initWithFileType:copySettingsFromMovie:options:
initWithFileType:error:
initWithFileTypeIdentifier:exceptionReason:
initWithFileURL:offset:length:options:
initWithFormat:arguments:
initWithFormatReader:
initWithFrecentsFilePath:
initWithFundamentalOperation:
initWithGenerator:
initWithGroup:
initWithID:publicKey:hasAdministratorPrivileges:
initWithIdentifiers:
initWithIdentifiers:classifyingLabels:
initWithInitializationData:contentIdentifier:keyIDFromInitializationData:options:identifier:
initWithInputs:defaultInput:
initWithInputs:provisionalInputs:defaultInput:
initWithInsertIndexes:insertedObjects:removeIndexes:removedObjects:
initWithItems:
initWithItems:startDate:endDate:
initWithItems:timeRange:
initWithKeyData:initializationVector:
initWithKeyData:renewalDate:
initWithKeyOptions:valueOptions:capacity:
initWithKeySystem:
initWithKeySystem:keySession:contentKeyBoss:useContentKeyBoss:groupID:storageDirectoryAtURL:
initWithKeySystem:storageDirectoryAtURL:internal:
initWithKeySystem:storageDirectoryAtURL:legacyWebKitCompatibilityMode:
initWithLayer:
initWithLoadingRequest:allowedContentTypes:
initWithLoadingRequest:requestedOffset:requestedLength:requestsAllDataToEndOfResource:canSupplyIncrementalDataImmediately:
initWithLocaleIdentifier:
initWithLogArray:
initWithMagicTrackID:animationLayer:videoLayers:
initWithMediaDataConsumer:requestQueue:requestBlock:
initWithMediaSubtypesForNativeRepresentation:
initWithMediaType:outputSettings:
initWithMediaType:outputSettings:sourceFormatHint:
initWithMetadataItem:
initWithMetadataReader:
initWithMetadataReader:array:key:keySpace:locale:
initWithMinimum:maximum:
initWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
initWithModificationType:item:afterItem:
initWithMonitoringObject:
initWithMovie:mindingInterval:
initWithName:ID:modelID:playing:productName:
initWithObject:key:notificationName:
initWithObject:notificationName:callbackBlock:
initWithObject:notificationNames:
initWithObject:thatHasPropertyWithKey:whoseValueDependsOnValueAtKeyPath:
initWithObjects:
initWithObjectsAndKeys:
initWithObservedObject:realNotifier:
initWithOriginalFormatDescription:andReplacementFormatDescription:
initWithOutputContext:
initWithOutputContextCommunicationChannelImpl:
initWithOutputContextImpl:
initWithOutputContextManagerImpl:
initWithOutputDeviceAuthorizationRequestImpl:
initWithOutputDeviceAuthorizationSessionImpl:
initWithOutputDeviceCommunicationChannelImpl:
initWithOutputDeviceDiscoverySessionImpl:
initWithOutputDeviceGroupImpl:
initWithOutputDeviceImpl:commChannelManager:
initWithOutputSettings:
initWithOutputSettings:sourceFormatDescription:
initWithOutputSettingsDictionary:exceptionReason:
initWithOutputSettingsPreset:
initWithParser:tracks:
initWithParticipantIdentifier:readyToPlay:suspensionReasons:
initWithPixelBufferAttributes:
initWithPixelBufferAttributes:exceptionReason:
initWithPlaybackControlDelegate:
initWithPlaybackItem:trackIDs:
initWithPlayer:templateItem:timeRange:
initWithPlayerItem:
initWithPredicate:
initWithPreferredLanguages:preferredMediaCharacteristics:
initWithPreferredLanguages:preferredMediaCharacteristics:fallbackPreferredLanguages:fallbackPreferredMediaCharacteristics:captionDisplayType:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:preferMultichannelAudio:precludeMultichannelAudio:
initWithPresentationHeight:operatorType:
initWithPresentationWidth:operatorType:
initWithPrimaryItem:identifier:time:date:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
initWithPrimaryItem:time:date:
initWithPrimaryItemAndFigEvent:templateItems:figEvent:
initWithPrimaryPlayer:
initWithPrincipalMediaCharacteristics:preferredLanguages:preferredMediaCharacteristics:
initWithPropertyList:
initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:
initWithPublisher:requestingInitialValue:sink:
initWithReferencedObject:
initWithRefreshRate:videoDynamicRange:
initWithRemoteControlSession:
initWithRemoteGroupID:syncController:
initWithRequest:id:
initWithRequestCount:
initWithRequestInfo:
initWithRequestQueue:requestBlock:
initWithResourceLoader:URL:httpRequestHeaders:requestOffset:requestLength:allowedContentTypes:figCryptor:cryptorKeyRequestID:
initWithResourceLoader:requestInfo:requestID:
initWithRunLoop:
initWithSampleBuffer:
initWithSequenceNumber:
initWithSettingsFromMovie:options:
initWithSettingsFromMovie:options:error:
initWithSpecifiedName:
initWithSpecifier:andCryptor:
initWithStartCompositionTime:endCompositionTime:subsequentStartCompositionTime:subsequentEndCompositionTime:
initWithStartCursor:
initWithStatus:cancellationReason:
initWithStorageDirectoryAtURL:
initWithSyncController:secondaryImpl:
initWithTextMarkupAttributes:
initWithTextMarkupAttributes:textSelector:
initWithTimeIntervalSinceReferenceDate:
initWithTimeRange:
initWithTimeRange:sourceTrackIDs:handler:
initWithTimeRanges:
initWithTimebase:fireTime:queue:block:
initWithTimebase:interval:queue:block:
initWithTimebase:queue:
initWithTimebase:times:queue:block:
initWithTopLevelPropertyKey:secondLevelPropertyKey:
initWithTrack:
initWithTrack:outputSettings:
initWithTrackID:forMovie:
initWithTrackIDs:
initWithTrustedAVAudioSettingsDictionary:
initWithTrustedAVVideoSettingsDictionary:
initWithTrustedPixelBufferAttributes:
initWithURL:
initWithURL:assetInitializationOptions:
initWithURL:destinationURL:options:
initWithURL:enableCRABSCache:enableHLSCache:
initWithURL:figAssetCreationFlags:figAssetCreationOptions:avAssetInitializationOptions:forAsset:
initWithURL:fileType:
initWithURL:fileType:error:
initWithURL:options:
initWithURL:options:error:
initWithURL:playbackItem:trackIDs:dynamicBehavior:
initWithURL:readonly:
initWithURL:trackID:sourceTimeRange:targetTimeRange:
initWithURLRequestHelper:asset:remoteCustomURLHandlerContext:
initWithUUIDString:
initWithUpstream:
initWithUpstream:transform:
initWithUser:password:persistence:
initWithVariant:predicate:
initWithVideoComposition:
initWithVideoSettingsDictionary:exceptionReason:
initWithVideoTracks:videoSettings:
initWithWeakReferenceToListener:callback:name:object:
initWithWeakReferenceToPlayer:weakReferenceToPlayerItem:
initWithWritingHelper:
initialAlwaysMonitorsPlayability
initialContinuesPlayingDuringPrerollForRateChange
initialContinuesPlayingDuringPrerollForSeek
initialDate
initialEstimatedDate
initialFigTimePitchAlgorithm
initialLimitReadAhead
initialMaxSnapTime
initialMinSnapTime
initialMovieFragmentSequenceNumber
initialPlaybackLikelyToKeepUpTrigger
initialSegmentStartTime
initialSetTimeFlags
initialTime
initialVariantIndex
initialWillNeverSeekBackwardsHint
initializationData
initializationIsCompleteForObject:
initializationOptions
initialize
input
inputGroups
inputIsAvailable
inputMode
inputs
insertEmptyTimeRange:
insertItem:afterItem:
insertMediaTimeRange:intoTimeRange:
insertObject:atIndex:
insertSublayer:above:
insertSublayer:atIndex:
insertSublayer:below:
insertTimeRange:ofAsset:atTime:completionHandler:
insertTimeRange:ofAsset:atTime:copySampleData:error:
insertTimeRange:ofAsset:atTime:error:
insertTimeRange:ofTrack:atTime:copySampleData:error:
insertTimeRange:ofTrack:atTime:error:
insertTimeRanges:ofTracks:atTime:error:
inspectionOnlyAssetWithFigAsset:
inspectionOnlyAssetWithStreamDataParser:tracks:
instanceIdentifierMapTable
instanceMethodSignatureForSelector:
instruction
instructionForFigInstruction:
instructions
intValue
integerValue
interleavingPeriod
internal
intersectSet:
intersectsSet:
interstitialEventCollector
interstitialEventControllerWithPrimaryPlayer:
interstitialEventCoordinator
interstitialEventMonitorWithPrimaryPlayer:
interstitialEventWithPrimaryItem:date:
interstitialEventWithPrimaryItem:identifier:date:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
interstitialEventWithPrimaryItem:identifier:time:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
interstitialEventWithPrimaryItem:templateItems:figEvent:
interstitialEventWithPrimaryItem:time:
interstitialLayer
interstitialPlayer
interstitialTemplate
interstitialTimeRangesForPlayerItem:
intrinsicAttributesOfExtraAttributes:
invalidate
invalidateAllPersistableContentKeysForApp:options:completionHandler:
invalidatePersistableContentKey:options:completionHandler:
invalidated
invocationWithMethodSignature:
invoke
invokeDelegateCallbackWithBlock:
invokeDelegateCallbackWithBlock:synchronouslyIfDelegateQueueIsQueue:
isAboveHighWaterLevel
isActive
isAdditive
isAirPlayVideoActive
isAirPlayVideoPlaying
isAppAudioSession
isAppleAccessory
isApplicationAudioSession
isApplicationAuthorizedForPlayback
isAssociatedWithFragmentMinder
isAsynchronous
isAudioPlaybackEnabledAtAllRates
isAudioSpatializationAllowed
isAuthorizationRequiredForPlayback
isBinaural
isBinauralMediaOption:
isBufferYCbCr:
isByteRangeAccessSupported
isCancelled
isClosedCaptionDisplayEnabled
isCompatibleWithAirPlayVideo
isCompatibleWithFileType:
isCompatibleWithFormatDescription:
isCompatibleWithPhotosTranscodingServiceWithOptions:
isCompatibleWithSavedPhotosAlbum
isComposable
isConnectedToPhysicalSecondScreen
isConnectedToSecondScreen
isContentAuthorizedForPlayback
isDecodable
isDiskCachingPermitted
isDisplayingClosedCaptions
isDownmix
isDownmixMediaOption:
isEligibleToBePredictedOutputDevice
isEnabled
isEqual:
isEqualToData:
isEqualToDictionary:
isEqualToSet:
isEqualToString:
isExcludedFromAutoselectionInTrackGroup
isExecuting
isExportable
isExternalPlaybackActive
isFailed
isFileURL
isFinished
isForScrubbingOnly
isFullWidth
isGroupLeader
isHidden
isIAPDExtendedModeActive
isInUseByPairedDevice
isInchargeOfKeyRequest
isInternal
isInterstitialPlayer
isKindOfClass:
isLanczosFilterDownscalingEnabled
isLegibleDisplayEnabled
isLogicalDeviceLeader
isMainThread
isMemberOfClass:
isModified
isNonForcedSubtitleDisplayEnabled
isOpenToRequests
isOverscanSubtitleSupportEnabled
isPIPModeEnabled
isPartOfForegroundScene
isPlayable
isPlayableExtendedMIMEType:
isPlayableOffline
isPlaybackBufferEmpty
isPlaybackBufferFull
isPlaybackLikelyToKeepUp
isPlaying
isPrerendered
isPresentationLayer
isProgressiveDownloadCacheEnabled
isReadable
isReadyForDisplay
isReadyForDisplayMutex
isReadyForMoreMediaData
isReadyToPlay
isRenderingSpatialAudio
isRenewalRequest
isRightToLeft
isRouteDetectionEnabled
isSilencedDueToConflictWithOtherPlayback
isSyncSample
isValidForAsset:timeRange:validationDelegate:
isValidJSONObject:
isVirtualCaptureCardSupported
isVisible
isoFileTypes
issueContentKeyRequest:
issueContentKeyRequest:toDelegateWithCallbackSelector:
issueContentKeyRequestForInitializationData:
issueContentKeyRequestWithCustomURLHandler:identifier:requestInfo:requestID:providesPersistableKey:
issueContentKeyRequestWithPreloadingRequestOptions:identifier:initializationData:providesPersistableKey:
issueContentKeyRequests:forInitializationData:
issuePersistableContentKeyRequest:
issuePersistableContentKeyRequestForKeySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:requestID:preloadingRequestOptions:identifier:
issueRenewableContentKeyRequest:
item
itemCollectors
itemIndex
itemLegibleOutputsForKeys
itemMetadataCollectors
itemMetadataOutputsForKeys
itemOutputs
itemProviderDataWithURL:assetInitializationOptions:
itemProviderVisibilityForRepresentationWithTypeIdentifier:
itemTime
itemTimeForHostTime:
itemTimeForMachAbsoluteTime:
itemVideoOutputs
items
itemsInFigPlayQueue
keyEnumerator
keyForIdentifier:
keyIDFromInitializationData
keyPathDependencyManager
keyPathString
keyPathsForValuesAffectingActionAtItemEnd
keyPathsForValuesAffectingCanPerformMultiplePasses
keyPathsForValuesAffectingClosedCaptionDisplayEnabled
keyPathsForValuesAffectingEstimatedOutputFileLength
keyPathsForValuesAffectingIdentifier
keyPathsForValuesAffectingOutputObscuredDueToInsufficientExternalProtection
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingTimeRange
keyPathsForValuesAffectingVideoRect
keyPathsForValuesAffectingVolume
keyRequestDataUsingCryptorForApp:contentIdentifier:options:performAsync:error:
keyRequestParamsByRequestID
keyRequestTrackerByRequestID
keyRequestsByRequestID
keySpace
keySpaceForIdentifier:
keySpecifier
keySystem
lanczosDownscalingEnabled
lanczosDownscalingFactor
lanczosFilterDownscaleFactor
languageCode
lastCryptor
lastEnqueuedLoopingItem
lastFormatDescription
lastImageTime
lastItem
lastModifiedDateOfEntryForKey:
lastObject
lastPathComponent
lastWindowSceneEvent
latentBaseDecodeTimeStampOfFirstTrackFragment
latestAppliedPresentationSize
layer
layerDestinationIsTVOut
layerDidBecomeVisible:
layerForegroundingChangeToken
layerInstructions
layerInteractionQueue
leavePIPMode
leftBatteryLevel
legibleContentInsets
legibleFallbackMediaSelectionCriteria
legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:
length
likelyExternalDestinations
limitCursor
limitReadAhead
limitedUI
limitedUIElements
limitsBandwidthForCellularAccess
listenerKeyWithWeakReferenceToListener:callback:name:object:
listeningForItemFailedToPlayToEndTime
liveUpdateInterval
loadAssociatedTracksOfType:completionHandler:
loadChapterInfoOnce
loadChapterMetadataGroupsBestMatchingPreferredLanguages:completionHandler:
loadChapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:completionHandler:
loadDataWithTypeIdentifier:forItemProviderCompletionHandler:
loadMediaSelectionGroupForMediaCharacteristic:completionHandler:
loadMetadataForFormat:completionHandler:
loadPlaybackConfigurationOptionsWithCompletionHandler:
loadSamplePresentationTimeForTrackTime:completionHandler:
loadSegmentForTrackTime:completionHandler:
loadTrackWithTrackID:completionHandler:
loadTracksWithMediaCharacteristic:completionHandler:
loadTracksWithMediaType:completionHandler:
loadValuesAsynchronouslyForKeys:completionHandler:
loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:
loadedTimeRanges
loader
loadingCancelled
loadingCompletionHandlers
localDeviceDidChange
localDeviceWithCompletion:
localParticipantUUIDForPlaybackCoordinator:
locale
localeIdentifier
localeWithLocaleIdentifier:
localizedDescription
localizedName
localizedStandardCompare:
localizedStringForKey:value:table:
localizedStringForLanguage:context:
lock
logArray
logPerformanceData
loggingIdentifier
longFormVideoExternalPlaybackMonitor
longFormVideoManagerCanHaveCurrentSessionWithDestinationOfType:subType:
longFormVideoRoutingSessionManager
longLongValue
longValue
loopCount
loopRange
loopTimeRange
loopingItem
loopingItemCopies
loopingItemStatusKVOInvokers
loopingPlayer
loopingPlayerItems
loudnessInfo
lyrics
main
mainBundle
mainDisplay
mainQueue
mainThread
makeAssetLoggingIdentifier
makeBatch
makeClosedCaptionLayer
makeContentKeyGroup
makeCopyOf:immutable:
makeDataReadyWithCompletionHandler:
makeDerivedIdentifier
makeObjectsPerformSelector:
makeObjectsPerformSelector:withObject:
makeOneAssetDownloadCacheOnly
makeOneResourceLoaderOnly
makePlayerLoggingIdentifier
makePropertyListForMovieProxyHeader:name:
makePropertyListForProxyWithOptions:
makeSampleCursorAtFirstSampleInDecodeOrder
makeSampleCursorAtLastSampleInDecodeOrder
makeSampleCursorWithPresentationTimeStamp:
makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:
makeSeekID
makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:
makeTracksArrayOnce
makeVideoRenderer
manufacturer
mapPublisherWithUpstream:transform:
markAsCancelledWithReason:
markAsFailed
markAsFailedWithError:
markAsFinished
markAsFinishedAndTransitionCurrentHelper:
markAsFinishedCalled
markAsInProgress
markConfigurationAsFinal
markCurrentPassAsFinished
markEndOfDataReturningError:
markEventAsCompleted
marksOutputTrackAsEnabled
maskLayer
masterClock
maxDuration
maxEntrySize
maxRateForAudioPlayback
maxSampleCount
maximizePowerEfficiency
maximumBitRate
maximumCutOffFrequency
maximumDurationForPreset:properties:
maximumForwardBufferDuration
maximumSize
maximumTimePlayedToDuringOverlappedPlayback
maximumTimePlayedToSinceLastSeek
maximumTrailingBufferDuration
maximumVideoResolution
mayRequireContentKeysForMediaDataProcessing
mediaCharacteristics
mediaCharacteristicsForMediaTypes
mediaDataCollectors
mediaDataLocation
mediaDataRequester
mediaDataRequesterShouldRequestMediaData
mediaDataStorage
mediaDecodeTimeRange
mediaFileOutputSettingsValidatorForFileType:
mediaFileType
mediaFileTypeWithFileTypeIdentifier:
mediaKind
mediaOptionsSelectedByClient
mediaPresentationTimeRange
mediaRequestsWWAN
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
mediaSelectionCriteriaForMediaCharacteristic:
mediaSelectionGroupForMediaCharacteristic:
mediaSelectionGroupForPropertyList:mediaSelectionOption:
mediaSelectionGroupWithAsset:dictionary:
mediaSelectionNilOptionForGroup:
mediaSelectionOptionForAsset:group:dictionary:hasUnderlyingTrack:
mediaSelectionOptionWithPropertyList:
mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:
mediaSelectionOptionsFromArray:withLocale:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsInMediaSelectionGroup:
mediaSubTypes
mediaTimeScale
mediaType
mediaTypeForTrackID:
mediatedPixelBufferAttributes
mediumLoggingIdentifier
metadata
metadataCollector:didCollectDateRangeMetadataGroups:indexesOfNewGroups:indexesOfModifiedGroups:
metadataEnumeratorWithArray:key:keySpace:locale:
metadataEnumeratorWithMetadataReader:
metadataForFormat:
metadataIdentifiers
metadataItem
metadataItemFilter
metadataItemFilterForSharing
metadataItemValueRequestWithMetadataItem:
metadataItemWithPropertiesOfMetadataItem:valueLoadingHandler:
metadataItems
metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:
metadataItemsFromArray:filteredByIdentifier:
metadataItemsFromArray:filteredByIdentifiers:
metadataItemsFromArray:filteredByMetadataItemFilter:
metadataItemsFromArray:withKey:keySpace:
metadataItemsFromArray:withLocale:
metadataItemsFromArray:withStringValue:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
metadataWaitingSemaphore
methodReturnLength
minFrameDuration
minRateForAudioPlayback
minSampleDuration
minVideoFrameDuration
minimumCutOffFrequency
minimumFrameDuration
minimumIntervalForIFrameOnlyPlayback
minimumIntervalForIFrameOnlyPlaybackWasSet
minimumTimeOffsetFromLive
minusSet:
mode
modelName
modelSpecificInformation
modificationForInsertingItem:afterItem:
modificationForRemovingItem:
modificationTimestamp
modificationType
modified
monitoredObjectHasDeparted
moovAtomSize
mostRecentlyAppliedAudioMix
mostRecentlyModifiedMetadataGroupTimestamp
mostRecentlySetTime
movieFragmentInterval
movieHeaderWithFileType:error:
movieTimeScale
movieTypes
movieWithData:options:
movieWithData:options:error:
movieWithSettingsFromMovie:options:error:
movieWithURL:options:
movieWithURL:options:error:
movies
multichannelAudioStrategy
multipleRoutesDetected
mutableBytes
mutableComposition
mutableCopy
mutableCopyWithZone:
mutableTrackCompatibleWithTrack:
muted
mxSessionID
name
nativeRepresentationSubtypes
naturalSize
naturalTimeScale
navigationAidedDriving
needTimedMetadataNotification
needToSeekAfterCreatingFigPlaybackItem
needsToCreateFigPlayer
networkProtocolName
newItemArrayWithCopiedItems:
newPixelBuffer
nextItem
nextObject
nextPrerollIDToGenerate
nextRequestID
nextSeekIDToGenerate
nextTimedMetadataGroup
nightMode
nightModeSupported
nominalFrameRate
nonForcedSubtitleDisplayEnabledPublisher
nonForcedSubtitlesEnabled
notificationDispatcherForCMNotificationCenter:
notificationWithName:object:
notificationWithName:object:userInfo:
notifyOfDataReadyForSampleBuffer:completionHandler:
null
numberFormatterWithOneMinimumIntegerDigits
numberFormatterWithTwoMinimumIntegerDigits
numberFromString:
numberOfAppendFailures
numberOfBytesToEndOfFirstVideoFrame
numberOfBytesTransferred
numberOfCorruptedVideoFrames
numberOfDisplayCompositedVideoFrames
numberOfDroppedVideoFrames
numberOfKeysToBeSet
numberOfMediaRequests
numberOfNonDisplayCompositedVideoFrames
numberOfSegmentsDownloaded
numberOfServerAddressChanges
numberOfStalls
numberValue
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithShort:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objCType
object
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
objectWithItemProviderData:typeIdentifier:error:
objectsAtIndexes:
objectsForKeys:notFoundMarker:
observationBlockForWeakObserver:passedToBlock:
observeValueForKeyPath:ofObject:change:context:
observedBitrateStandardDeviation
observedMaxBitrate
observedMinBitrate
observedObject
offset
oldPlayerItems
onlyAllowsConnectionsFromPeersInHomeGroup
opacityRamps
openCommunicationChannelToDestination:options:completionHandler:
openCommunicationChannelWithOptions:completionHandler:
openCommunicationChannelWithOptions:error:
operations
operatorWithType:modifier:options:
optimizesAuxiliaryContentConfigurations
optionID
originalFormatDescription
originalNetworkContentURL
originator
otherDevices
otherParticipants
outOfBandIdentifier
outgoingCommunicationChannel
output
outputBitsPerChannel
outputChannelCount
outputContext
outputContext:didCloseCommunicationChannel:
outputContext:didReceiveData:fromCommunicationChannel:
outputContextDidChangeApplicationProcessID:
outputContextExistsWithRemoteOutputDevice
outputContextForControllingOutputDeviceGroupWithID:
outputContextForControllingOutputDeviceGroupWithID:options:
outputContextForID:
outputContextImpl:didChangeOutputDeviceWithInitiator:
outputContextImpl:didChangeOutputDevicesWithInitiator:reason:deviceID:previousDeviceIDs:
outputContextImpl:didCloseCommunicationChannel:
outputContextImpl:didExpireWithReplacement:
outputContextImpl:didInitiateDestinationChange:
outputContextImpl:didReceiveData:fromCommunicationChannel:
outputContextImplDidChangeCanSetVolume:
outputContextImplDidChangeGlobalOutputDeviceConfiguration:
outputContextImplDidChangePredictedOutputDevice:
outputContextImplDidChangeProvidesControlForAllVolumeFeatures:
outputContextImplDidChangeVolume:
outputContextImplDidChangeVolumeControlType:
outputContextImplForID:type:
outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:
outputContextManagerForAllOutputContexts
outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:
outputContextManagerImplDidExpireWithReplacementImpl:
outputContextOutgoingCommunicationChannelDidBecomeAvailable:
outputContextType
outputDataRate
outputDelegate
outputDevice
outputDevice:didCloseCommunicationChannel:
outputDevice:didReceiveData:fromCommunicationChannel:
outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:
outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:
outputDeviceAuthorizationSessionImplDidExpireWithReplacementImpl:
outputDeviceDescriptions
outputDeviceDiscoverySession
outputDeviceDiscoverySessionAvailableOutputDevicesWithAvailableFigEndpoints:
outputDeviceDiscoverySessionDidChangeDiscoveryMode:forClientIdentifiers:
outputDeviceDiscoverySessionFactory
outputDeviceDiscoverySessionImpl:didExpireWithReplacement:
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDeviceGroups:
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDevices:
outputDeviceDiscoverySessionOfClass:withDeviceFeatures:
outputDeviceFeatures
outputDeviceGroupImpl:didChangeOutputDevicesWithInitiator:
outputDeviceGroupImplDidChangeVolume:
outputDeviceGroupImplDidChangeVolumeControlType:
outputDeviceGroupWithRemoteGroupID:syncController:
outputDeviceImplDidChangeCanChangeVolume:
outputDeviceImplDidChangeProposedGroupID:
outputDeviceImplDidChangeVolume:
outputDeviceImplDidChangeVolumeControlType:
outputDeviceWithFigEndpoint:
outputDeviceWithFigEndpoint:routingContextFactory:
outputDevices
outputDevicesChangeNotificationToken
outputFileType
outputFileTypeProfile
outputFinishedCallbackInvokers
outputFormat
outputFormatFlags
outputMIMECodecParameterForInputMIMECodecParameter:
outputMediaDataAvailable:trackID:
outputMediaDataWillChange:
outputObscuredDueToInsufficientExternalProtection
outputSampleRate
outputSequenceWasFlushed:
outputSequenceWasFlushed:trackID:
outputSettings
outputSettingsAssistantWithPreset:
outputSettingsDictionary
outputSettingsObject
outputSettingsWithOutputSettingsDictionary:mediaType:
outputTrackID
outputURL
overallDurationHint
overlappedPlaybackID
overlappedPlaybackItem
overrideTime
overscanSubtitleSupportEnabled
ownsScreen
ownsTurnByTurnNavigation
pairedDeviceID
pairedDevicesConnectedToOutputDevice:
parentChannel
parentOutputDevice
parentOutputDeviceGroup
parser
participantForIdentifier:
participantLimitForWaitingOutSuspensionsWithReason:
participantStates
participatesInAudioSession
participatesInGroupPlayback
passDescriptionResponder
passthroughTrackID
path
pathExtension
pathWithComponents:
pause
pauseSnapsToMediaTimeOfOriginator
pauseWithoutAffectingCoordinatedPlayback
peakBitRate
peakDataRate
peerID
pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:
pendingFigPlayerProperties
pendingPrerollID
pendingSeekID
performDefaultHandlingForAuthenticationChallenge:
performOperationUsingObject:andObject:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performsMultiPassEncodingIfSupported
persistToDiskReturningError:
persistableContentKeyFromKeyVendorResponse:options:error:
persistentContentKeyFromKeyVendorResponse:options:error:
pixelAspectRatio
pixelAspectRatioDictionary
pixelBuffer
pixelBufferAttributeMediator
pixelBufferAttributes
pixelBufferConformer
pixelFormatFamily
pixelSize
pixelTransferProperties
placeholderContentLayerDuringPIPMode
platformDependentScreenOrVideoContext
platformIdentifier
play
playImmediatelyAtRate:
playabilityMetrics
playabilityValidationResult
playable
playableMediaSelectionOptionsFromArray:
playbackBufferEmpty
playbackBufferFull
playbackControlDelegate
playbackCoordinator
playbackCoordinator:broadcastLocalParticipantStateDictionary:
playbackCoordinator:broadcastTransportControlStateDictionary:forItemWithIdentifier:
playbackCoordinator:didIssuePauseCommand:completionHandler:
playbackCoordinator:didIssuePlayCommand:completionHandler:
playbackCoordinator:didIssueSeekCommand:completionHandler:
playbackCoordinator:identifierForPlayerItem:
playbackCoordinator:interstitialTimeRangesForPlayerItem:
playbackCoordinator:reloadTransportControlStateForItemWithIdentifier:completionHandler:
playbackItem
playbackLikelyToKeepUp
playbackLikelyToKeepUpTrigger
playbackSessionID
playbackStartDate
playbackStartOffset
playbackType
player
playerAVAudioSession
playerAppliesAutomaticMediaSelectionToGroup:
playerBeingObserved
playerConnection
playerCurrentItemKVOInvoker
playerCurrentItemSink
playerIsDisplayingClosedCaptionsSink
playerItem
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
playerItemHasEnqueuedVideoFrameListener
playerItemOutputHostForPlayerItem:
playerItemTrackWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
playerItemWeakReference
playerItemWithAsset:
playerItemWithAsset:automaticallyLoadedAssetKeys:
playerItemWithURL:
playerLayer
playerLayerWithPlayer:
playerLooperWithPlayer:templateItem:
playerLooperWithPlayer:templateItem:timeRange:
playerName
playerOriginalActionAtItemEnd
playerPlaybackCoordinator
playerRole
playerWithFigPlayer:
playerWithPlayerItem:
playerWithURL:
playoutLimit
pointValue
policyDictionary
port
postNotification:
postNotificationName:object:
postNotificationName:object:userInfo:
postProcessingVideoLayers
postVideoRectDidChangeNotification
precludeMultichannelAudio
precludedMediaSubTypes
predicateForChannelCount:mediaSelectionOption:operatorType:
predicateForPresentationHeight:operatorType:
predicateForPresentationWidth:operatorType:
predictedOutputDevice
preferCoordinatedPlaybackBehavior
preferMultichannelAudio
preferredDisplayCriteria
preferredFilenameExtension
preferredForwardBufferDuration
preferredFrameSize
preferredHardwareSampleRate
preferredIOBufferDuration
preferredLanguages
preferredMaximumResolution
preferredMaximumResolutionForExpensiveNetworks
preferredMediaCharacteristics
preferredMediaChunkAlignment
preferredMediaChunkDuration
preferredMediaChunkSize
preferredMediaSelection
preferredMediaSubTypes
preferredMinSampleCount
preferredMinimumResolution
preferredOutputSegmentInterval
preferredPeakBitRate
preferredPeakBitRateForExpensiveNetworks
preferredPeakPresentationSize
preferredRate
preferredSoundCheckVolumeNormalization
preferredTransform
preferredVideoDecoderGPURegistryID
prefersLikelyDestinationsOverCurrentRoutingSession
prefersOfflinePlayableVariants
prefersPlayingSilentlyWhenConflictingWithOtherPlayback
prefersStandardDynamicRange
preloadingRequestOptions
preloadsEligibleContentKeys
prepareInputsOperationsWithInputs:
prepareItem:withCompletionHandler:
prepareToEndSession
prepareToFinishWritingReturningError:
preparesItemsForPlaybackAsynchronously
prerendered
prerollAtRate:completionHandler:
prerollCompletionHandler
prerollDecodeWithCompletionHandler:
prerollForRenderingUsingHint:
prerollIDMutex
prerollOperationDidComplete:notificationPayload:
presentationSize
presentationSizePublisher
presentationTimeStamp
preserveSyncFrames
preservesTimeOffsetFromLive
presetName
prevStallCount
prevVariantIdx
preventsAutomaticBackgroundingDuringVideoPlayback
preventsChangesToSublayerHierarchy
preventsDisplaySleepDuringVideoPlayback
previousItem
primaryContentConfiguration
primaryItem
primaryPlayer
principalMediaCharacteristics
priority
probability
processContentKeyRequestForPSSHEntries:initializationData:groupID:options:
processContentKeyRequestForSinf:initializationData:groupID:options:
processContentKeyRequestForTransportStreamWithCodecType:initializationData:groupID:options:
processContentKeyRequestWithIdentifier:initializationData:options:
processContentKeyResponse:
processContentKeyResponseData:
processContentKeyResponseData:forTrackID:
processContentKeyResponseData:renewalDate:error:
processContentKeyResponseError:forTrackID:
processIdentifier
processInfo
processName
producesCombinableFragments
producesLowFidelityAudio
productName
productionApertureDimensions
progress
progressTowardsPlaybackLikelyToKeepUp
properties
propertyList
propertyList:isValidForFormat:
propertyListForProxy
propertyListForTextStyleRules:
propertyListWithData:options:format:error:
propertyValuePublisherWithObject:key:notificationName:
providePendingMediaData
providesControlForAllVolumeFeatures
providesExpiredSessionReports
providesExternalVideoPlayback
providesPersistableKey
providesPreciseDurationAndTiming
provisionalAlternateGroupID
provisionalInputs
proxyFoldedTimebase
proxyTimebase
proxyUnfoldedTimebase
publicKey
queueModifications
queuePlayerWithItems:
raise:format:
rampInOutInfo
ramps
rangeOfString:
rangeOfString:options:
rate
rateChangeIdentifier
rateDidChangeNotificationIncludesExtendedDiagnosticPayload
rateQueue
rateState
rateStateByInferringTimeControlStatusAndWaitingReasonBasedOnPresenceOfCurrentItem:hasCurrentInterstitialEvent:nameForLogging:
rateStateBySettingAutomaticallyWaitsToMinimizeStalling:
rateStateBySettingRate:nameForLogging:
rateStateBySettingTimeControlStatus:reasonForWaitingToPlay:nameForLogging:
rateStateBySettingUsesLegacyAutomaticWaitingBehavior:
rateStateByUpdatingBasedOnFigPlayer:hasCurrentItem:hasCurrentInterstitialEvent:nameForLogging:
rateStateByUpdatingBasedOnFigPlayerPlaybackState:hasCurrentInterstitialEvent:nameForLogging:
rateStateByUpdatingBasedOnPresenceOfCurrentInterstitialEvent:nameForLogging:
rateUpdateDuringTransitionDecided
readHudSettingsAndCallCompletionHandler:
readOnlyControlTimebase
readOnlyTimebase
readSingleSample
readWriteQueue
readable
readableTypeIdentifiersForItemProvider
reader
readyForMoreMediaData
readyToPlay
reapplyCurrentItemStateToPlaybackControlDelegate
reason
reasonForWaitingToPlay
receivesLongFormAudioFromLocalDevice
recentlyUsedDevices
recognizingSpeech
recommendedTimeOffsetFromLive
rectValue
redirect
reevaluateBackgroundPlayback
referenceRestrictions
referencedObject
refreshRate
refreshesClosedCaptionsImmediatelyAfterSeeking
registerCallbackContextObject:
registerDownloadLocation:forURLAsset:
registerForScreenConnectionChanges
registerLocalDeviceDidChangeListener:
rejectProtectionSpaceAndContinueWithChallenge:
remoteCustomURLHandlerContextForPID:
removeAllAnimations
removeAllItems
removeAllObjects
removeAnimationForKey:
removeAnimationsForKey:
removeAudioPlaybackRateLimits
removeContentKeyRecipient:
removeEntryForKey:
removeFragmentedAsset:
removeFragmentedMovie:
removeFrecencyInfoForDeviceID:
removeFromSuperlayer
removeItem:
removeItemAtURL:error:
removeItemFromPlayQueue
removeListenerWithWeakReference:callback:name:object:
removeMediaDataCollector:
removeMediaDataCollector:locked:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsInArray:
removeObserver:forKeyPath:
removeObserver:forKeyPath:context:
removeOutput:
removeOutputDevice:
removeOutputDevice:options:completionHandler:
removeOutputDevice:withOptions:completionHandler:
removeOutputDevice:withOptions:completionhandler:
removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:
removeRenderer:atTime:completionHandler:
removeRenderer:atTime:withCompletionHandler:
removeRequestedPixelBufferAttributesAttributesForKey:
removeResourcesForID:
removeTimeObserver:
removeTimeRange:
removeTrack:
removeTrackAssociationToTrack:type:
removeVideoTarget:
render:toCVPixelBuffer:
renderContext
renderContextChanged:
renderContextPropertiesFromFigCompositor:
renderScale
renderSize
rendererListQueue
rendererTrackedBySTS
renderers
renditionSpecificAttributesForMediaOption:
renewExpiringContentKeyResponseData
renewExpiringContentKeyResponseDataForTrackID:
renewExpiringResponseDataForContentKeyRequest:
renewalDate
renewsExpiringResponseData
replaceCurrentItemWithPlayerItem:
replaceFormatDescription:withFormatDescription:
replaceObjectAtIndex:withObject:
replaceSublayer:with:
replacementFormatDescription
reportGroup
requestBlock
requestCarUI
requestCarUIForURL:
requestCarUIForURL:withUUID:
requestID
requestInfo
requestMediaDataIfNecessary
requestMediaDataOnceIfNecessaryWithMediaDataRequester:
requestMediaDataWhenReadyOnQueue:usingBlock:
requestNotificationOfMediaDataChangeAsSoonAsPossible
requestNotificationOfMediaDataChangeWithAdvanceInterval:
requestQueue
requestTurnByTurnNavigationOwnership
requestViewArea:forScreenID:
requestWithRequest:id:
requestedTimeToleranceAfter
requestedTimeToleranceBefore
requestor
requests
requestsAllDataToEndOfResource
requestsQueue
requiredPixelBufferAttributesForRenderContext
requiredSourceSampleDataTrackIDs
requiredSourceTrackIDs
requiresAccessLog
requiresAuthorization
requiresFlushToResumeDecoding
requiresFrameReordering
requiresInProcessOperation
requiresSecureCoding
requiresSecurityScopeRelease
resetAudioBufferedAhead
resetForReadingTimeRanges:
resetOutputDeviceForAllOutputContexts
resetPlatformIdentifierForQueue:
resetPredictedOutputDevice
resetUpcomingSampleBufferPresentationTimeExpectations
resolvedMediaSelection
resolvedURL
resourceConservationLevelWhilePaused
resourceLoader
resourceLoader:didCancelAuthenticationChallenge:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
respondByRequestingPersistableContentKeyRequest
respondByRequestingPersistableContentKeyRequestAndReturnError:
respondToEachPassDescriptionOnQueue:usingBlock:
respondToNewPassDescription:
respondWithAuthorizationToken:completionHandler:
respondWithData:
respondWithError:
respondWithValue:
respondWithValue:dataType:
respondsToSelector:
response
responseInfoSentOnceToken
responseParamsSent
restrictions
restrictsAutomaticMediaSelectionToAvailableOfflineOptions
resume
resumptionOffset
retain
retainCount
retainInterstitialEventCoordinator
retrieveSessionWithID:
reversePlaybackEndTime
reversesMoreVideoFramesInMemoryWasSet
rightBatteryLevel
rightHandDrive
routeDetectionEnabled
routeDetectionSuspended
routeSharingPolicy
runBlockOnce:
runLoopStateWithRunLoop:
sampleBufferAudioRenderer
sampleBufferAvailabilityCondition
sampleBufferCoalescingInterval
sampleBufferOutputs
sampleBufferRequestWithStartCursor:
sampleBufferSourcesByTrackID
sampleBufferVideoRenderer
sampleCursorWithFigSampleCursor:
sampleDataTrackIDs
samplePresentationTimeForTrackTime:
sampleRate
sampleRateForMediaOption:
sampleReferenceBaseURL
samplesRequiredForDecoderRefresh
samplesWithEarlierDecodeTimeStampsMayHaveLaterPresentationTimeStampsThanCursor:
samplesWithLaterDecodeTimeStampsMayHaveEarlierPresentationTimeStampsThanCursor:
savesDownloadedDataToDiskWhenDone
scaleTimeRange:toDuration:
scanCharactersFromSet:intoString:
scanString:intoString:
scanUnsignedLongLong:
scannerWithString:
scheduleBlock:
scheduledAudioParameters
scheme
screenID
screenIDs
screenInputCapabilities
screenPrimaryInputDevices
screenScale
seamIdentifier
secondLevelPropertyKey
secondaryImpl
securityScopedURL
seekCompletionHandler
seekIDMutex
seekQueue
seekToDate:
seekToDate:completionHandler:
seekToTime:
seekToTime:completionHandler:
seekToTime:toleranceBefore:toleranceAfter:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
seekToTime:toleranceBefore:toleranceAfter:seekID:
seekableTimeRanges
seekableTimeRangesLastModifiedTime
seekingWaitsForVideoCompositionRendering
segmentForTrackTime:
segmentType
segments
segmentsAsPresented
segmentsDownloadedDuration
segmentsExcludeAudioPrimingAndRemainderDurations
selectMediaOption:inMediaSelectionGroup:
selectMediaOptionAutomaticallyInMediaSelectionGroup:
selectedMediaArray
selectedMediaOptionInMediaSelectionGroup:
self
selfContained
sendAuthResponse:requestID:disposition:credential:authHandler:
sendCommand:withParameters:
sendData:completionHandler:
sendH2Ping:pongHandler:
sender
sequenceNumber
serialNumber
serialQueue
serializableRepresentation
serverAddress
serviceIdentifier
sessionReference
sessionWithConfiguration:delegate:delegateQueue:
sessionWithVideoComposition:recyclingSession:
setAVKitData:
setActionAtItemEnd:
setActivationContext:error:
setActive:error:
setActive:withFlags:error:
setActiveHapticChannelIndex:
setAdvanceIntervalForDataAvailability:
setAdvanceIntervalForDelegateInvocation:
setAdvanceTimeForOverlappedPlayback:
setAggressivelyCachesVideoFrames:
setAlignmentMode:
setAlignsResumptionWithPrimarySegmentBoundary:
setAlignsStartWithPrimarySegmentBoundary:
setAllHTTPHeaderFields:
setAllowProgressiveResume:
setAllowProgressiveStartup:
setAllowProgressiveSwitchUp:
setAllowableMIMETypes:
setAllowedAudioSpatializationFormats:
setAllowsAirPlayVideo:
setAllowsExtendedReadAhead:
setAllowsExternalPlayback:
setAllowsHeadTrackedSpatialAudio:error:
setAllowsLegibleFallbackForAllAudibleMediaSelections:
setAllowsOutOfBandTextTrackRendering:
setAllowsPixelBufferPoolSharing:
setAlternateGroupID:
setAlwaysCopiesSampleData:
setAlwaysMonitorsPlayability:
setAnimationTool:
setApertureMode:
setAppIdentifier:
setApplicationAudioSession:
setApplicationProcessID:
setAppliesMediaSelectionCriteriaAutomatically:
setAppliesPerFrameHDRDisplayMetadata:
setAppliesPreferredTrackTransform:
setArgument:atIndex:
setAudioMix:
setAudioOutputDeviceUniqueID:
setAudioSession:
setAudioSpatializationAllowed:
setAudioTapProcessor:
setAudioTimePitchAlgorithm:
setAudioTrackGroupHandling:
setAudiovisualBackgroundPlaybackPolicy:
setAutoSwitchAtmosStreamVariants:
setAutoSwitchStreamVariants:
setAutomaticallyHandlesInterstitialEvents:
setAutomaticallyPreservesTimeOffsetFromLive:
setAutomaticallyWaitsToMinimizeStalling:
setAuxiliaryContentConfigurations:
setBackgroundColor:
setBackgroundPIPAuthorizationToken:
setBlendingTransferFunction:
setBlendsVideoFrames:
setBluetoothServices:
setBonjourServiceTypes:
setBounds:
setBridge:
setBuiltInCompositorName:
setBundleID:
setByAddingObjectsFromSet:
setByValue:
setByteRangeAccessSupported:
setCachedDateFormatterFormat:
setCanPerformMultiplePassesOverSourceMediaData:
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
setCancellationTest:
setCaptionContentInsets:
setCaptionPipelineStrategy:
setCaptionRenderingStrategy:
setCaptionsAvoidanceMargins:
setCaptureCompleteURI:
setCategory:error:
setCleanApertureDimensions:
setColor:
setColorPrimaries:
setColorTransferFunction:
setColorYCbCrMatrix:
setCommitTime:
setCommunicationChannelDelegate:
setCompletionBlock:
setCompletionHandler:
setCompositingRequest:
setCompositionFrame:
setCompositionTime:
setConfiguredTimeOffsetFromLive:
setConnection:
setContentIdentifier:
setContentKeySession:
setContentLength:
setContentsScale:
setContinuesPlayingDuringPrerollForRateChange:
setContinuesPlayingDuringPrerollForSeek:
setControlTimebase:
setCoordinationMediumDelegate:
setCropRectangle:atTime:
setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:
setCurrentBluetoothListeningMode:
setCurrentBluetoothListeningMode:error:
setCurrentBundleIdentifier:
setCurrentPassDescription:
setCustomURLRequest:
setCustomURLResponse:
setCustomVideoCompositorClass:
setDataType:
setDate:
setDecodesAllFramesDuringOrdinaryPlayback:
setDefaultCIContextProvider:
setDefaultMediaDataStorage:
setDefaultPropertyValuesToConfigurationState:outputURL:fileType:
setDelaysRateChangeUntilHasSufficientMediaData:
setDelegate:
setDelegate:queue:
setDetectsCustomRoutes:
setDirection:
setDirectoryForTemporaryFiles:
setDisableActions:
setDisableColorMatching:
setDisallowsAMRAudio:
setDisallowsHardwareAcceleratedVideoDecoder:
setDiscoveryMode:
setDiscoveryMode:forClientIdentifiers:
setDiskCachingPermitted:
setDispatchQueue:
setDisplayLayerVisibility:
setDuration:
setEdgeAntialiasingMask:
setEffectParameters:
setEnablePostProcessing:
setEnabled:
setEncodedPixelsDimensions:
setEndDate:
setEntireLengthAvailableOnDemand:
setEnvironmentalConditions:
setEventHandler:
setEvents:
setExcludeFromAutoSelection:
setExpectedAssetTypes:
setExpectsMediaDataInRealTime:
setExpirationDate:
setExtendedLanguageTag:
setExternalPlaybackVideoGravity:
setExtraAttributes:
setFigAssetProvider:
setFigAudioRendererFactory:forQueue:
setFigCPEProtectorSessionIdentifier:
setFigDimensions:
setFigPlaybackCoordinator:
setFigRenderSynchronizerFactory:forQueue:
setFigTrackMatrix:
setFileLengthLimit:
setFinishWritingDelegate:
setFont:
setFontSize:
setForScrubbingOnly:
setForegroundColor:
setFormatDescriptions:
setFormatTemplate:
setForwardPlaybackEndTime:
setFrame:
setFrameDuration:
setFrecencyInfo:forDeviceID:
setFromValue:
setFullWidth:
setGeometryFlipped:
setHapticVolume:
setHeadTrackedSpatialAudioMode:error:
setHidden:
setIFramePrefetchTargetDimensions:
setIdentifier:
setImageQueueInterpolationCurve:
setImmutable
setImplEventListener:
setInheritsTiming:
setInitialEstimatedDate:
setInitialMovieFragmentSequenceNumber:
setInitialSegmentStartTime:
setInitializationData:
setInputMode:
setInputParameters:
setInputPropertiesFromASBD:
setInputs:
setInstructions:
setInterleavingPeriod:
setIsFinished:
setIsRightToLeft:
setItems:
setKeyPath:
setKeySpace:
setLanczosFilterDownscaleFactor:
setLanczosFilterDownscalingEnabled:
setLanguageCode:
setLayer:
setLayerInstructions:
setLayersAreSuppressed:
setLegibleContentInsets:
setLegibleDisplayEnabled:
setLegibleFallbackMediaSelectionCriteria:
setLimitReadAhead:
setLocale:
setLoggingIdentifier:
setLoopTimeRange:
setLoudnessInfo:
setMarksOutputTrackAsEnabled:
setMasksToBounds:
setMaxEntrySize:
setMaxRateForAudioPlayback:
setMaxSampleCount:
setMaxSize:
setMaximizePowerEfficiency:
setMaximumBitRate:
setMaximumForwardBufferDuration:
setMaximumTimePlayedToDuringOverlappedPlayback:
setMaximumTrailingBufferDuration:
setMediaCharacteristics:
setMediaDataLocation:
setMediaDataStorage:
setMediaFileType:
setMediaKind:
setMediaSelectionCriteria:forMediaCharacteristic:
setMediaSelections:
setMediaTimeScale:
setMediaType:
setMediumLoggingIdentifier:
setMetadata:
setMetadataItemFilter:
setMetadataItems:
setMetrics:
setMinRateForAudioPlayback:
setMinVideoFrameDuration:
setMindingInterval:
setMinificationFilter:
setMinimumIntegerDigits:
setMinimumIntervalForIFrameOnlyPlayback:
setMode:
setMode:error:
setModified:
setMovieFragmentInterval:
setMovieTimeScale:
setMultichannelAudioStrategy:
setMuted:
setName:
setNaturalTimeScale:
setNeedsLayout
setNonForcedSubtitleDisplayEnabled:
setNumberFormatterWithOneMinimumIntegerDigits:
setNumberFormatterWithTwoMinimumIntegerDigits:
setObject:forKey:
setObject:forKeyedSubscript:
setOpacity:
setOpacity:atTime:
setOpacityRampFromStartOpacity:toEndOpacity:timeRange:
setOptimizesAuxiliaryContentConfigurations:
setOptions:
setOutput:
setOutputBitsPerChannel:
setOutputChannelCount:
setOutputContext:
setOutputDataRate:
setOutputDelegate:queue:
setOutputDevice:forFeatures:
setOutputDevice:options:
setOutputDevice:options:completionHandler:
setOutputDevices:
setOutputDevices:options:completionHandler:
setOutputFileType:
setOutputFileTypeProfile:
setOutputFormat:
setOutputFormatFlags:
setOutputSampleRate:
setOutputSettings:
setOutputURL:
setOverallDurationHint:
setOverrideTime:
setOverscanSubtitleSupportEnabled:
setPIPModeEnabled:
setParentAuthorizationSession:
setParentChannel:
setParentCommunicationChannel:
setParentOutputContext:
setParentOutputContextManager:
setParentOutputDevice:
setParentOutputDeviceDiscoverySession:
setParentOutputDeviceGroup:
setParticipantLimit:forWaitingOutSuspensionsWithReason:
setPauseSnapsToMediaTimeOfOriginator:
setPerformsMultiPassEncodingIfSupported:
setPixelBufferAttributes:
setPlaceholderContentLayerDuringPIPMode:
setPlaybackLikelyToKeepUpTrigger:
setPlayer:
setPlayerItem:
setPlayerRole:
setPlayerRole:synchronously:
setPlayoutLimit:
setPosition:
setPreferCoordinatedPlaybackBehavior:
setPreferredChunkAlignment:
setPreferredChunkDuration:
setPreferredChunkSize:
setPreferredDisplayCriteria:
setPreferredForwardBufferDuration:
setPreferredHardwareSampleRate:error:
setPreferredIOBufferDuration:error:
setPreferredMaximumAudioSampleRate:
setPreferredMaximumResolution:
setPreferredMaximumResolutionForExpensiveNetworks:
setPreferredMediaChunkAlignment:
setPreferredMediaChunkSize:
setPreferredMinSampleCount:
setPreferredMinimumResolution:
setPreferredOutputSegmentInterval:
setPreferredPeakBitRate:
setPreferredPeakBitRateForExpensiveNetworks:
setPreferredPeakPresentationSize:
setPreferredRate:
setPreferredTransform:
setPreferredVideoDecoderGPURegistryID:
setPreferredVolume:
setPrefersOfflinePlayableVariants:
setPrefersPlayingSilentlyWhenConflictingWithOtherPlayback:
setPreparesItemsForPlaybackAsynchronously:
setPresenceOnly:
setPreserveSyncFrames:
setPrevStallCount:
setPrevVariantIdx:
setPreventsAutomaticBackgroundingDuringVideoPlayback:
setPreventsCapture:
setPreventsChangesToSublayerHierarchy:
setPreventsDisplaySleepDuringVideoPlayback:
setPriority:
setProductionApertureDimensions:
setRTCReportingFlags:
setRate:
setRate:time:
setRate:time:atHostTime:
setRate:time:atHostTime:error:
setRate:time:atHostTime:options:
setRedirect:
setRefreshesClosedCaptionsImmediatelyAfterSeeking:
setRenderContext:
setRenderSize:
setRenderSynchronizer:error:
setRequestedPixelBufferAttributes:forKey:
setRequestedTimeToleranceBefore:
setRequiredSourceSampleDataTrackIDs:
setRequiresAccessLog:
setRequiresInProcessOperation:
setResourceConservationLevelWhilePaused:
setResourceLoader:
setResponse:
setRestrictions:
setRestrictsAutomaticMediaSelectionToAvailableOfflineOptions:
setResumptionOffset:
setReversePlaybackEndTime:
setReversesMoreVideoFramesInMemory:
setRouteDetectionEnabled:
setSTSLabel:
setSampleBufferCoalescingInterval:
setSampleBufferSourcesByTrackID:
setSampleReferenceBaseURL:
setSavesDownloadedDataToDiskWhenDone:
setSecondDisplayEnabled:
setSecondDisplayMode:completionHandler:
setSeekingWaitsForVideoCompositionRendering:
setSegments:
setSelector:
setSeparatedState:
setServiceIdentifier:
setSession:
setShouldCancelAllRequests:
setShouldProvideMediaData:forTrackID:
setShouldReduceResourceUsage:
setShouldResizeVideoLayer:
setShouldWaitForVideoTarget:
setSignalSource:
setSignaled:
setSinglePassFileSize:
setSinglePassMediaDataSize:
setSnapTimeToPausePlayback:
setSoundCheckVolumeNormalization:
setSourceAudioFormat:
setSourceCIImage:
setSourceFormatHint:
setSourcePBuf:
setSourceSampleBufferTrackIDsInClientOrder:
setSourceSampleDataTrackIDs:
setSourceTrackPreferredTransform:
setSourceVideoAverageFrameDuration:
setSourceVideoFormat:
setSourcesByTrackID:
setSpatialDiagnostics:
setSpeedThresholdForIFrameOnlyPlayback:
setStartDate:
setStartsOnFirstEligibleVariant:
setStatus:
setStorageManagementPolicy:forURL:
setString:
setStyle:
setSublayerTransform:
setSublayers:
setSupportsRandomAccess:
setSuppressesPlayerRendering:
setSuspensionReasonsThatTriggerWaiting:
setTarget:
setTargetAudioSession:
setTemplateItems:
setTextHighlightArray:
setTextStyleRules:
setTextStylingResolution:
setTime:
setTimeRange:
setTimeToPauseBuffering:
setTimeToPausePlayback:
setTimescale:
setTimingFunction:
setToValue:
setToneMapToStandardDynamicRange:
setTotalStallCount:
setTrackID:
setTrackReferences:
setTransform:
setTransform:atTime:
setTransformRampFromStartTransform:toEndTransform:timeRange:
setTruncationMode:
setURLSession:
setUnderlyingQueue:
setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:
setUserDefinedAttributes:
setUserInfoObject:forURLAsset:
setUsesAirPlayVideoWhileAirPlayScreenIsActive:
setUsesAudioOnlyModeForExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setUsesIFrameOnlyPlaybackForHighRateScaledEdits:
setUsesMinimalLatencyForVideoCompositionRendering:
setUsesVirtualCaptureCard:
setUsingLongFormAudio:error:
setValue:
setValue:forHTTPHeaderField:
setValue:forKey:
setValue:forKeyPath:
setValue:forUndefinedKey:
setValues:
setVariantIndex:
setVariantPreferences:
setVariantQualifiers:
setVersion:
setVibrationPattern:
setVideoApertureMode:
setVideoComposition:
setVideoEncoderSpecification:
setVideoEnhancementFilterOptions:
setVideoEnhancementMode:
setVideoFrameRateConversionAlgorithm:
setVideoGravity:
setVideoRelativeToViewport:
setVideosize:
setViewAreaIndex:andAdjacentViewAreas:forScreenID:
setViewport:
setVolume:
setVolume:atTime:
setVolumeAdjustment:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
setVolumeRampFromStartVolume:toEndVolume:timeRange:rampMode:
setWeakReferenceToAssetWriter:
setWeakReferenceToAssetWriterInput:
setWillNeverSeekBackwardsHint:
setWillPlayOnce:
setWithArray:
setWithCapacity:
setWithObject:
setWithObjects:count:
setWithSet:
setWrapped:
setWritesMediaDataToBeginningOfFile:
setWritesSinglePassUsingPredeterminedFileSize:mediaDataSize:
sharedAVKitUXMDisplayManager
sharedAVSystemController
sharedAudioPresentationOutputContext
sharedAudioPresentationOutputGroup
sharedAuthorizationSession
sharedCallbackContextRegistry
sharedDownloadStorageManager
sharedExecutionEnvironment
sharedInstance
sharedKVODispatcher
sharedLocalDevice
sharedSession
sharedSystemAudioContext
sharedSystemRemotePoolContext
sharedSystemScreenContext
shortValue
shouldBufferInAnticipationOfPlayback
shouldCancelAllRequests
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
shouldOptimizeForNetworkUse
shouldProvideMediaDataForTrackID:
shouldReduceResourceUsage
shouldRespondToInitialPassDescription
shouldTagBuffersWithInfo
shouldWaitForVideoTarget
showInterstitialInstead
signal
signalSource
signaled
silencesOtherPlaybackDuringPIP
singlePassFileSize
singlePassMediaDataSize
siriRequestedWithAction:
size
sizeOfEntryForKey:
sizeValue
snapTimeToPausePlayback
sortUsingComparator:
sortedArrayUsingComparator:
sortedArrayUsingFunction:context:
soundCheckVolumeNormalization
sourceAudioFormat
sourceCIImage
sourceClock
sourceFormatDescription
sourceFormatHint
sourceFrameByTrackID:
sourceImage
sourcePBuf
sourcePixelBufferAttributes
sourceSampleBufferByTrackID:
sourceSampleBufferTrackIDsInClientOrder
sourceSampleDataTrackIDs
sourceSampleDataTracks
sourceTimeRanges
sourceTimedMetadataByTrackID:
sourceTrackID
sourceTrackIDForFrameTiming
sourceTrackIDs
sourceTrackIDsInClientOrder
sourceTrackPreferredTransform
sourceURL
sourceVideoFormat
sourceVideoMinFrameDuration
sourcesByTrackID
spatialDiagnostics
speedThresholdForIFrameOnlyPlayback
speedThresholdForIFrameOnlyPlaybackWasSet
start
startAccessingSecurityScopedResource
startCompositionTime
startCursor
startDate
startDispatchTimer
startLoadingMetadata
startObservingObject:weakObserver:forKeyPath:options:context:
startObservingObject:weakObserver:forTwoPartKeyPath:options:context:
startObservingValueAtKeyPath:ofObject:options:usingBlock:
startObservingValueAtKeyPath:withoutKeepingAliveObservedObject:options:usingBlock:
startObservingValueAtTwoPartKeyPath:ofObject:options:usingBlock:
startPassAnalysis
startReading
startRedirectingVideoToLayer:forMode:
startRequestingMediaData
startRoutingSessionForHighConfidenceExternalDestinationIfPresentWithCompletionHandler:
startRoutingSessionWithOutputDeviceDescriptions:error:
startSessionAtSourceTime:
startSuppressingLikelyDestinationsUntilNextPlayEventAndReturnError:
startVideoCompositionRequest:
startWriting
startsOnFirstEligibleVariant
startupTime
stateDispatchQueue
stateMutex
stateQueue
status
statusCode
statusOfOperations:error:
statusOfValueForKey:
statusOfValueForKey:error:
statusReadWriteQueue
stepByCount:
stepByDecodeTime:
stepByDecodeTime:wasPinned:
stepByPresentationTime:
stepByPresentationTime:wasPinned:
stepInDecodeOrderByCount:
stop
stopAccessingSecurityScopedResource
stopRedirectingVideoToLayer:
stopRequestingMediaData
stopRespondingToPassDescriptions
stopSuppressingLikelyDestinationsAndReturnError:
storageManagementPolicyForURL:
storageURL
streamDataParser:didFailToParseStreamDataWithError:
streamDataParser:didParseStreamDataAsAsset:withDiscontinuity:
streamDataParser:didProvideContentKeyRequestInitializationData:forTrackID:
streamDataParser:didProvideContentKeySpecifier:forTrackID:
streamDataParser:didProvideMediaData:forTrackID:mediaType:flags:
streamDataParser:didReachEndOfTrackWithTrackID:mediaType:
streamDataParserWillProvideContentKeyRequestInitializationData:forTrackID:
streamDataParsers
streaming
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
streamingContentKeyRequestDataForApp:contentIdentifier:trackID:options:error:
streamingKeyRequestCompletionHandler
string
stringByAbbreviatingWithTildeInPath
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringForObjectValue:
stringFromCMTime:
stringFromNumber:
stringFromSeconds:
stringFromTimeInterval:
stringValue
stringWithCString:encoding:
stringWithFormat:
stringWithString:
stringWithUTF8String:
stringWithValidatedFormat:validFormatSpecifiers:error:
strongToWeakObjectsMapTable
style
subarrayWithRange:
sublayerTransform
sublayers
subscribeRequestingInitialValue:block:
subsequentEndCompositionTime
subsequentStartCompositionTime
subtitleAlternatesTrackGroup
subtitleLayer
subtitleLayers
superclass
superlayer
supportedFeatures
supportedFileTypes
supportedMediaTypes
supportsAnalysisReporting
supportsBluetoothSharing
supportsBufferedAirPlay
supportsDataOverACLProtocol
supportsEmptyOutputSettingsDictionary
supportsFitnessDataDestination
supportsHDRSourceFrames
supportsMultipleBluetoothOutputDevices
supportsMultipleOutputDevices
supportsOutputSettings:reason:
supportsPlayerItems
supportsRandomAccess
supportsSampleReferences
supportsSecureCoding
supportsWideColorSourceFrames
suppressesAudioOnlyVariants
suppressesAudioRendering
suppressesPlayerRendering
suppressesVideoLayers
suspensionExpected
suspensionReasons
suspensionReasonsThatTriggerWaiting
sweepFilterEffectParametersWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
sweepFilterEffectWithSweepValue:
sweepValue
switchBitrate
switchToLatestPublisherWithUpstream:
syncAudioSessionToInterstitialPlayer:
syncLayers
synchronizedLayerWithPlayerItem:
takeScreenForClient:reason:
takeScreenForConnection
targetAudioSession
taskState
templateItems
templatePlayerItem
textHighlightArray
textMarkupAttributes
textSelector
textStyleRuleWithTextMarkupAttributes:
textStyleRuleWithTextMarkupAttributes:textSelector:
textStyleRules
textStylingResolution
time
timeControlStatus
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeJumpedNotificationIncludesExtendedDiagnosticPayload
timeMapping
timeRange
timeRanges
timeToPauseBuffering
timeToPausePlayback
timebase
timebaseReadWriteQueue
timedMetadata
timedMetadataGroupInternal
timedRenderRemovals
timescale
timingFunction
topLevelDependencyProperty
topLevelPropertyKey
totalNumberOfVideoFrames
totalSampleDataLength
track
trackCount
trackEnumeratorWithAsset:
trackGroups
trackIDs
trackIDsForAssetWithFigPlaybackItem
trackInspector
trackOutput
trackReports
trackRequest:byRequestID:
trackWaitingSemaphore
trackWithTrackID:
trackWithTrackID:forMovie:
trackedTransportControlStateDictionaries
tracks
tracksAccessQueue
tracksInitializationOnce
tracksWithMediaCharacteristic:
tracksWithMediaType:
transactionMetrics
transferDuration
transform
transformRamps
transitionAssetWriterAndAllInputsToFailedStatusWithError:
transitionToAndReturnTerminalHelperWithTerminalStatus:
transitionToFailedStatusWithError:
transitionToItemWithIdentifier:proposingInitialTimingBasedOnTimebase:
transitionToTerminalStatusOperation
transportType
trimsSampleDurations
typeWithFilenameExtension:
typeWithIdentifier:
typeWithMIMEType:
typesWithTag:tagClass:conformingToType:
unarchivedObjectOfClass:fromData:error:
unfinishedOperations
unfoldedFigTimebase
unfoldedTimebase
unicodeLanguageCode
unicodeLanguageIdentifier
unionSet:
uniqueID
unlock
unregisterCallbackContextForToken:
unsignedCharValue
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
unusedTrackID
update
updateBounds:
updateCurrentRoutingSessionFromLikelyDestinationsWithCompletionHandler:
updateFrecencyListForDeviceID:
updateFrecencyScore
updateFromPlayer
updateFromPlayerItem
updateHudWithDisplayString:
updateNonForcedSubtitleDisplayEnabled:
useContentKeyBoss
useCredential:forAuthenticationChallenge:
userDefinedAttributes
userInfo
userInfoObjectForURLAsset:
userInfoObjectForURLAssetInstanceIdentifier:
userVolume
usesAirPlayVideoWhileAirPlayScreenIsActive
usesAudioOnlyModeForExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
usesIFrameOnlyPlaybackForHighRateScaledEdits
usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet
usesLegacyAutomaticWaitingBehavior
usesMinimalLatencyForVideoCompositionRendering
usesVirtualCaptureCard
usingLongFormAudio
validate:
validateAudioOutputSettings:reason:
validateOutputSettingsDictionary:
validateTrackSegments:error:
validateUsingOutputSettingsValidator:reason:
validateVideoOutputSettings:reason:
validateWithError:
validatesSourceVideoMinFrameDuration
value
value:withObjCType:
valueErrorCode
valueForKey:
valueForKey:dependsOnValueAtKeyPath:
valueForKeyForKVO:
valueForUndefinedKey:
valueLoadedForKey:onObject:
valueLoadingError
valueLoadingHandler
valueRequest
valueStatus
valueWithBytes:objCType:
valueWithCATransform3D:
valueWithCMTime:
valueWithCMTimeMapping:
valueWithCMTimeRange:
valueWithCMVideoDimensions:
valueWithNonretainedObject:
valueWithPointer:
valueWithRect:
values
variantIndex
variantPreferences
variantQualifiers
variants
vibrationPattern
videoApertureMode
videoCodecType
videoComposition
videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:
videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:
videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:
videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:inLayer:
videoCompositionInstruction
videoCompositionLayerInstruction
videoCompositionLayerInstructionWithAssetTrack:
videoCompositionOutputColorPropertiesWithCustomCompositor:formatDescriptions:colorPrimaries:transferFunction:yCbCrMatrix:
videoCompositionWithAsset:applyingCIFiltersWithHandler:
videoCompositionWithAsset:applyingCIFiltersWithHandler:completionHandler:
videoCompositionWithPropertiesOfAsset:
videoCompositionWithPropertiesOfAsset:completionHandler:
videoCompositionWithPropertiesOfAsset:prototypeInstruction:
videoCompositionWithPropertiesOfAsset:prototypeInstruction:completionHandler:
videoCompositionWithPropertiesOfAsset:videoGravity:
videoCompressionProperties
videoDynamicRange
videoEncoderCapabilities
videoEncoderSpecification
videoEnhancementFilterOptions
videoEnhancementMode
videoFieldMode
videoFrameRateConversionAlgorithm
videoGravity
videoLayer
videoLayers
videoLayersAreAttached
videoOutputSettings
videoOutputSettingsWithTrustedVideoSettingsDictionary:
videoOutputSettingsWithVideoSettingsDictionary:
videoPerformanceMetrics
videoRange
videoRect
videoScalingProperties
videoSettings
videoSettingsAdjuster
videoSettingsDictionary
videoTargets
videoTracks
virtualCaptureCardSupported
volume
volumeAdjustment
volumeControlType
wait
waitInMode:
waitUntilDate:
waitUntilDate:inMode:
waitUntilEventIsCompleted
waitUntilFinished
waitingForLastLoopingCopyToFinish
wasInitializedWithURL
weakContentKeyBoss
weakContentKeySession
weakObjectsHashTable
weakObservationBlockForWeakObserver:passedToBlock:
weakObserver
weakReference
weakReferenceToAsset
weakReferenceToAssetReader
weakReferenceToAssetWriter
weakReferenceToAttachedAdaptor
weakReferenceToDelegate
weakReferenceToExternalDevice
weakReferenceToHost
weakReferenceToLoadingRequest
weakReferenceToMetadataItem
weakReferenceToPlayerItem
weakReferenceToResourceLoader
weakReferenceToSelf
weakReferenceToSynchronizer
weakSession
whitelist
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
width
willChangeValueForKey:
willEnterForegroundNotificationToken
willManageSublayersAsSwappedLayers
willNeverSeekBackwardsHint
willOutputBeObscuredDueToInsufficientExternalProtectionForDisplays:
willPlayOnce
willTrimShortDurationAudioSamples
willTrimShortDurationSamples
willYieldCompressedSamples
windowScene
windowSceneDidEnterBackgroundListener
windowSceneWillEnterForegroundListener
worksAroundConcurrentKVOCrash
writableTypeIdentifiersForItemProvider
writeMovieHeaderToURL:fileType:options:error:
writeToFile:options:error:
writeToURL:options:error:
writesMediaDataToBeginningOfFile
zone
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v20@0:8f16
q16@0:8
v24@0:8@16
f16@0:8
v40@0:8@"AVOutputDevice"16@"NSDictionary"24@?<v@?@"AVOutputDeviceGroupMembershipChangeResult">32
@"AVOutputDeviceGroup"16@0:8
v24@0:8@"AVOutputDeviceGroup"16
@"NSArray"16@0:8
@"AVOutputDevice"16@0:8
@24@0:8@16
v16@0:8
@"AVOutputContext"
@"AVOutputDeviceGroup"
@"AVQueuePlayer"
@"AVPlayerItem"
@"NSMutableArray"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
@"NSObject<OS_dispatch_queue>"
{?="value"q"timescale"i"flags"I"epoch"q}
@"NSError"
@"<AVCallbackCancellation>"
@"AVWeakReference"
@80@0:8@16@24{?={?=qiIq}{?=qiIq}}32
@32@0:8@16@24
i16@0:8
B24@0:8^@16
v48@0:8@16@24@32^v40
@"AVPlayerLooperInternal"
v32@0:8^q16^@24
^{OpaqueFigSimpleMutex=}
@"AVAssetReaderTrackOutput"
i48@0:8@16^{OpaqueFigAssetReader=}24@32^i40
i48@0:8@"AVAssetReaderTrackOutput"16^{OpaqueFigAssetReader=}24@"NSDictionary"32^i40
@"AVAssetReaderOutputMetadataAdaptorInternal"
@"NSDictionary"
d16@0:8
@"AVVideoPerformanceMetricsInternal"
@"<AVOutputDeviceDiscoverySessionImpl>"
@"<AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl>"
@24@0:8Q16
v24@0:8q16
v32@0:8q16@24
v32@0:8@16@24
@"AVOutputDeviceDiscoverySessionInternal"
@"AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal"
v24@0:8@?16
v24@0:8#16
v20@0:8B16
v32@0:8@16@?24
B28@0:8B16^@20
B32@0:8@16^@24
v40@0:8@?16@24@?32
v32@0:8@"NSString"16@?<v@?@@"NSError">24
B32@0:8@"NSString"16^@24
v40@0:8@?<v@?@"<AVOutputDeviceConfigurationModification>">16@"NSDictionary"24@?<v@?q@"<AVOutputDeviceConfigurationRetrieval>"@"NSString"@"NSError">32
@"<AVOutputDeviceImplSupport>"16@0:8
v24@0:8@"<AVOutputDeviceImplSupport>"16
@"NSData"16@0:8
@"NSNumber"16@0:8
@"NSDictionary"16@0:8
@32@0:8^{OpaqueAPSyncController=}16@24
v24@0:8^{__CFString=}16
^{OpaqueAPSyncController=}
@"<AVOutputDeviceImpl>"
@"<AVOutputDeviceImplSupport>"
@"AVNetworkPlaybackPerfHUDLayer"
@"AVKeyPathDependencyManager"
@"AVPlayer"
@"NSString"
@"FigBaseCALayer"
@"FigVideoContainerLayer"
@"FigSubtitleCALayer"
@"AVPlayerLayer"
{CGSize="width"d"height"d}
@"CALayer"
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
@"AVSinkSubscriber"
v24@0:8@"<AVKeyPathDependencyRegistration>"16
v24@0:8@"<AVCallbackCancellation>"16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
v40@0:8@16@24@32
v192@0:8@16{CATransform3D=dddddddddddddddd}24@152@160{CGSize=dd}168@184
v56@0:8@16{CGSize=dd}24@40@48
{CGSize=dd}16@0:8
v28@0:8B16@20
v28@0:8@16B24
v56@0:8^@16^@24^@32^@40^@48
v28@0:8B16d20
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{NSEdgeInsets=dddd}16
{NSEdgeInsets=dddd}16@0:8
^{__CVBuffer=}16@0:8
v32@0:8@16q24
v28@0:8@16I24
@"AVPlayerLayerInternal"
@40@0:8{?=qiIq}16
{?=qiIq}16@0:8
v24@0:8^v16
r*16@0:8
c16@0:8
C16@0:8
s16@0:8
S16@0:8
I16@0:8
@24@0:8^{_NSZone=}16
@64@0:8{?={?=qiIq}{?=qiIq}}16
{?={?=qiIq}{?=qiIq}}16@0:8
@112@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@0:8
{?="source"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}"target"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}}
v48@0:8{?=qiIq}16@40
{?=qiIq}24@0:8@16
v72@0:8{?={?=qiIq}{?=qiIq}}16@64
{?={?=qiIq}{?=qiIq}}24@0:8@16
v120@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@112
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}24@0:8@16
@32@0:8^{OpaqueCMTimebase=}16@24
^{OpaqueCMTimebase=}16@0:8
@"NSObject<OS_dispatch_source>"
^{OpaqueCMTimebase=}
@64@0:8^{OpaqueCMTimebase=}16{?=qiIq}24@48@?56
v40@0:8{?=qiIq}16
@48@0:8^{OpaqueCMTimebase=}16@24@32@?40
{?=qiIq}40@0:8{?=qiIq}16
@"NSArray"
@"AVWeakReferencingDelegateStorage"
@"NSDate"
@"AVPlayerItemMetadataCollectorInternal"
@56@0:8@16@24@32^@40^@48
@24@0:8@?16
@128@0:8@16@24{?=qiIq}32@56Q64{?=qiIq}72{?=qiIq}96@120
@112@0:8@16@24@32@40Q48{?=qiIq}56{?=qiIq}80@104
@40@0:8@16@24^{OpaqueFigPlayerInterstitialEvent=}32
@48@0:8@16{?=qiIq}24
@24@0:8^@16
@136@0:8@16@24{?=qiIq}32@56@64Q72{?=qiIq}80{?=qiIq}104@128
@56@0:8@16{?=qiIq}24@48
v24@0:8Q16
^{OpaqueFigPlayerInterstitialEvent=}16@0:8
B24@0:8^i16
^{OpaqueFigPlayerInterstitialEvent=}
@28@0:8@16B24
v24@0:8^{OpaqueFigPlayerInterstitialCoordinator=}16
^{OpaqueFigPlayerInterstitialCoordinator=}
^{OpaqueFigVisualContext=}
^{OpaqueVTPixelBufferConformer=}
B36@0:8@16B24^@28
^{__CVBuffer=}52@0:8{?=qiIq}16^{?=qiIq}40I48
B40@0:8{?=qiIq}16
^{__CVBuffer=}48@0:8{?=qiIq}16^{?=qiIq}40
^{__CVBuffer=}24@0:8^{?=qiIq}16
B24@0:8^{OpaqueFigVideoQueue=}16
^{OpaqueFigVisualContext=}16@0:8
@"AVSampleBufferVideoOutputInternal"
@"AVAssetDownloadStorageManagementPolicyInternal"
@"NSMutableDictionary"
@"<AVOutputDeviceGroupImpl>"
@32@0:8q16@24
^{OpaqueFigMetadataReader=}
@"<NSObject><NSCopying>"
@"NSLocale"
@24@0:8^v16
^{CGImage=}16@0:8
@40@0:8@16@24@32
@36@0:8@16@24I32
q32@0:8@16^@24
q32@0:8@"NSString"16^@24
v32@0:8@"NSArray"16@?<v@?>24
@32@0:8^{OpaqueFigMetadataReader=}16q24
B32@0:8@16@24
@24@0:8B16B20
^v32@0:8^{opaqueCMFormatDescription=}16^@24
@32@0:8@16^@24
@"AVMetadataItemInternal"
@"AVMutableMetadataItemInternal"
@"AVMetadataItemValueRequest"
@32@0:8@16@?24
@"AVLazyValueLoadingMetadataItemInternal"
@"AVMetadataItemValueRequestInternal"
^{OpaqueFigAsset=}
@120@0:8@16q24q32@40@48@56@64{?=qiIq}72{?=qiIq}96
v28@0:8q16i24
@"AVChapterMetadataItemInternal"
@"AVMetadataItemFilterInternal"
@"AVAssetInspectorLoader"
@"AVDispatchOnce"
^{OpaqueFigAsset=}16@0:8
^{OpaqueFigFormatReader=}16@0:8
^{OpaqueFigPlaybackItem=}16@0:8
@"AVAssetProxyInternal"
@"<AVLoggingIdentifier>"
@44@0:8@16^{OpaqueFigPlaybackItem=}24@32B40
q24@0:8@16
^{OpaqueFigMutableComposition=}16@0:8
{CGAffineTransform=dddddd}16@0:8
@24@0:8#16
@20@0:8i16
v28@0:8i16@?20
@"AVAssetInternal"
Q88@0:8@16{?={?=qiIq}{?=qiIq}}24@72Q80
@24@0:8q16
@"AVAssetFragmentInternal"
@32@0:8Q16Q24
@"AVAssetClientURLRequestHelper"
@"AVAssetCustomURLBridgeForNSURLProtocol"
@"AVAssetCustomURLAuthentication"
@"NSURL"
@"AVAssetResourceLoader"
@"AVAssetCache"
@48@0:8@16@24^Q32^@40
@48@0:8@16q24q32@40
@32@0:8^{__CFDictionary=}16^{__CFString=}24
@"AVURLAssetInternal"
r^{OpaqueFigAsset=}16@0:8
@?16@0:8
@32@0:8@16^Q24
@"NSEnumerator"
v32@0:8@"AVContentKeySession"16@"AVContentKey"24
i40@0:8@16^{CMBaseObject=}24^B32
i40@0:8@"AVContentKeySession"16^{CMBaseObject=}24^B32
@"AVContentKeySession"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSSecurityScopedURLWrapper"
@40@0:8@16@24^@32
@44@0:8@16@24B32^@36
@"AVAudioMixEffectParametersInternal"
@32@0:8I16I20f24f28
@20@0:8f16
@"AVAudioMixSweepFilterEffectParametersInternal"
^{OpaqueFigAssetImageGenerator=}
@"AVAsset"
@"AVVideoComposition"
@"AVCustomVideoCompositorSession"
@32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16^{?=qiIq}40^@48
v48@0:8{?=qiIq}16@?40
v32@0:8{CGSize=dd}16
{CGSize=dd}32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16@40^@48
@"AVAssetImageGeneratorInternal"
v32@0:8@"NSData"16@?<v@?@"NSError">24
@"AVOutputDeviceCommunicationChannel"16@0:8
v24@0:8@"AVOutputDeviceCommunicationChannel"16
@24@0:8^{OpaqueFigEndpointRemoteControlSession=}16
^{OpaqueFigEndpointRemoteControlSession=}
@"AVOutputDeviceCommunicationChannel"
@"AVAssetTrackInspector"
^{OpaqueFigAssetTrack=}
@36@0:8@16i24q28
@28@0:8@16i24
@32@0:8@16q24
^{OpaqueFigTrackReader=}16@0:8
^{OpaqueFigAssetTrack=}16@0:8
B24@0:8I16I20
@"AVAssetTrackInternal"
@"AVPixelBufferAttributeMediator"
@"AVAudioSessionMediaPlayerOnly"
@"<AVBlockScheduler>"
@"NSMutableSet"
@"AVAudioSession"
@"AVPlayerRateState"
@"NSNumber"
@"AVPlayerPlaybackCoordinator"
@"NSHashTable"
^{OpaqueFigPlayer=}
^{OpaqueFigPlaybackItem=}
@"AVPlayerMediaSelectionCriteria"
^{OpaqueCMClock=}
@24@0:8^{OpaqueFigPlayer=}16
i40@0:8q16r^{__CFDictionary=}24^^{OpaqueFigPlayer}32
^{OpaqueFigPlayer=}16@0:8
v48@0:8@16@24Q32^v40
v32@0:8@16^{OpaqueFigPlayer=}24
B40@0:8@?16@?24^@32
v24@0:8^{OpaqueFigPlaybackItem=}16
v32@0:8q16@?24
@44@0:8@16B24@28@36
@36@0:8i16@20@28
B32@0:8f16i20@?24
v56@0:8f16{?=qiIq}20B44i48B52
v44@0:8f16{?=qiIq}20
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
v68@0:8f16{?=qiIq}20{?=qiIq}44
v76@0:8f16{?=qiIq}20{?=qiIq}44@68
i24@0:8@?16
v28@0:8f16@?20
v28@0:8B16^{__CFDictionary=}20
^{OpaqueCMClock=}16@0:8
v24@0:8^{OpaqueCMClock=}16
^{__CFString=}24@0:8q16
v28@0:8q16B24
@56@0:8{?=qiIq}16@40@?48
@40@0:8@16@24@?32
v40@0:8@16r^{CGRect={CGPoint=dd}{CGSize=dd}}24r^{NSEdgeInsets=dddd}32
v24@0:8^{OpaqueFigPlayer=}16
v56@0:8@16@24@32@40@48
B40@0:8^@16^{CGSize=dd}24^@32
@"AVPlayerInternal"
B24@0:8q16
v20@0:8i16
B32@0:8d16^@24
@"AVAudioSession"16@0:8
v24@0:8@"AVAudioSession"16
@40@0:8q16@24@32
v24@0:8^{OpaqueFigVideoTarget=}16
^{OpaqueFigPlayerInterstitialCoordinator=}16@0:8
^{OpaqueFigPlayerInterstitialCoordinator=}24@0:8B16B20
@32@0:8B16B20q24
@28@0:8f16@20
@20@0:8B16
@28@0:8B16@20
@32@0:8i16B20@24
@32@0:8B16B20@24
@40@0:8^{OpaqueFigPlayer=}16B24B28@32
r^v24@0:8q16
v32@0:8^v16q24
v32@0:8^v16@24
@"AVURLAsset"
@"NSData"
@"AVAssetDownloadContentConfiguration"
@"AVDisplayCriteria"
@112@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88
@"AVVideoCompositionRenderHintInternal"
^{opaqueMTAudioProcessingTap=}
{?="mutex"^{OpaqueFigSimpleMutex}"requester"@"AVMediaDataRequester"}
@"AVScheduledAudioParameters"
@"AVContentKeySession"
^{opaqueCMFormatDescription=}
^{OpaqueFigCPECryptor=}
^{OpaqueFigSampleBufferAudioRenderer=}
v24@0:8^^{OpaqueFigSampleBufferAudioRenderer}16
B32@0:8@"AVSampleBufferRenderSynchronizer"16^@24
v24@0:8@"NSString"16
v24@0:8^{opaqueCMSampleBuffer=}16
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v24@0:8^{opaqueMTAudioProcessingTap=}16
^{opaqueMTAudioProcessingTap=}16@0:8
@"AVSampleBufferAudioRendererInternal"
^{OpaqueFigSampleBufferAudioRenderer=}40@0:8r^{__CFAllocator=}16r^{__CFDictionary=}24^@32
@"AVAssetWriterInput"
@"AVAssetWriterInputMetadataAdaptorInternal"
@"AVExternalProtectionMonitorInternal"
@24@0:8d16
@24@0:8^{opaqueCMFormatDescription=}16
f32@0:8{CGSize=dd}16
^{OpaqueVTPixelBufferAttributesMediator=}
@"<AVPlayerItemDelegate>"
@"AVAudioMix"
^{__CFString=}
@"AVPlayerItemInterstitialEventCollector"
@"AVMediaSelection"
@"AVPlayerConnection"
^{OpaqueFigCPEProtector=}
i60@0:8^{OpaqueFigPlayer=}16@24@32I40^{__CFDictionary=}44^^{OpaqueFigPlaybackItem}52
^{OpaqueCMTimebase=}24@0:8^{OpaqueFigPlaybackItem=}16
@32@0:8^{_NSZone=}16@24
^{OpaqueFigPlaybackItem=}20@0:8B16
B24@0:8^{CGSize=dd}16
B24@0:8^B16
@32@0:8@16^{OpaqueFigPlaybackItem=}24
{?=qiIq}24@0:8^{OpaqueCMTimebase=}16
v24@0:8i16B20
v92@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64i88
v100@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64i88@?92
B32@0:8@16@?24
v20@0:8C16
v20@0:8I16
v28@0:8@16i24
v28@0:8^{opaqueMTAudioProcessingTap=}16i24
v40@0:8^@16^@24^^{OpaqueFigVideoCompositor}32
v64@0:8{?={?=qiIq}{?=qiIq}}16
^{OpaqueFigCPEProtector=}16@0:8
@24@0:8^{__CFDictionary=}16
v32@0:8^{OpaqueFigPlaybackItem=}16@24
v32@0:8B16B20@?24
@"AVPlayerItemInternal"
v72@0:8^{OpaqueFigPlaybackItem=}16@24@32{?=qiIq}40@64
v44@0:8^{OpaqueFigPlaybackItem=}16@24i32@36
@48@0:8^{OpaqueFigPlaybackItem=}16B24i28@32@40
@"AVPlayerItemTrackInternal"
@"AVQueuePlayerInternal"
@"AVSpecifiedLoggingIdentifierInternal"
@"AVAssetLoggingIdentifierInternal"
@"AVPlayerLoggingIdentifierInternal"
^{OpaqueFigMutableComposition=}
^{OpaqueFigFormatReader=}
@"AVAssetInspector"
@"AVCompositionInternal"
B104@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72^@96
v104@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72@?96
v88@0:8{?={?=qiIq}{?=qiIq}}16{?=qiIq}64
@"AVMutableCompositionInternal"
^{__CFDictionary=}
@"AVPlayerItemMetadataOutputInternal"
@32@0:8^{opaqueCMFormatDescription=}16^{opaqueCMFormatDescription=}24
r^{opaqueCMFormatDescription=}16@0:8
@"AVCompositionTrackInternal"
B64@0:8@16@24{?=qiIq}32^@56
v32@0:8^v16^{__CFString=}24
v64@0:8{CGAffineTransform=dddddd}16
v40@0:8@16@24q32
v32@0:8^{opaqueCMFormatDescription=}16^{opaqueCMFormatDescription=}24
@"AVMutableCompositionTrackInternal"
@"NSObject"
@28@0:8B16@?20
@"AVPublisher"
^{OpaqueFigReentrantMutex=}
@"AVNotificationSubscription"
@36@0:8@16B24@?28
@"<AVCancellable>"
@"NSNumberFormatter"
B40@0:8o^@16@24o^@32
@"AVTimeFormatterInternal"
@124@0:8@16i24{?={?=qiIq}{?=qiIq}}28{?={?=qiIq}{?=qiIq}}76
@"AVCompositionTrackSegmentInternal"
@"NSObject<OS_dispatch_semaphore>"
@"AVMovieTrackInternal"
^{OpaqueFigMutableMovie=}
@28@0:8i16@20
^{OpaqueFigMutableMovie=}16@0:8
{CGSize=dd}24@0:8^{__CFString=}16
v40@0:8{CGSize=dd}16^{__CFString=}32
@24@0:8^{__CFString=}16
v32@0:8@16^{__CFString=}24
@"AVMutableMovieTrackInternal"
B24@0:8^{opaqueCMFormatDescription=}16
B108@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72B96^@100
B48@0:8^{opaqueCMSampleBuffer=}16^{?=qiIq}24^{?=qiIq}32^@40
B112@0:8{?={?=qiIq}{?=qiIq}}16{?={?=qiIq}{?=qiIq}}64
B32@0:8@16^q24
^{OpaqueFigAssetReader=}
^{OpaqueFigAssetReader=}16@0:8
@"AVAssetReaderInternal"
@"AVRunLoopCondition"
v24@0:8^{OpaqueFigAssetReader=}16
^{opaqueCMSampleBuffer=}16@0:8
@"AVAssetReaderOutputInternal"
@"AVAssetTrack"
@"AVOutputSettings"
@"AVAssetReaderTrackOutputInternal"
@"AVAudioOutputSettings"
^{opaqueMTAudioProcessingTap=}24@0:8@16
v32@0:8^{opaqueMTAudioProcessingTap=}16@24
@"AVAssetReaderAudioMixOutputInternal"
@"AVVideoOutputSettings"
@"AVAssetReaderVideoCompositionOutputInternal"
@"AVAssetReaderSampleReferenceOutputInternal"
@"<AVAssetWriterDelegate>"
@"AVMediaFileType"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"AVAssetWriterHelper"
@"<AVAssetWriterFinishWritingDelegate>"
B40@0:8@16@24@?32
v32@0:8q16q24
@"AVAssetWriterInternal"
@24@0:8^{OpaqueFigAssetWriter=}16
^{OpaqueFigAssetWriter=}
@"AVFragmentedMediaDataReportInternal"
@40@0:8@16^{OpaqueFigAssetWriter=}24@32
v28@0:8B16@"NSError"20
B56@0:8@16{?=qiIq}24^@48
^{OpaqueFigAssetWriter=}16@0:8
@"AVAssetWriterFigAssetWriterNotificationHandler"
@40@0:8@16@24^v32
@"NSOperation"
B48@0:8@16@24^{opaqueCMFormatDescription=}32^@40
@"AVAssetWriterConfigurationState"
@"AVAssetWriterInputGroupInternal"
^{opaqueCMFormatDescription=}16@0:8
^{OpaqueFigTimelineCoordinatorSuspension=}16@0:8
@"AVPlaybackCoordinator"
^{OpaqueFigTimelineCoordinatorSuspension=}
@36@0:8@16B24@28
@"NSUUID"
v24@0:8^{OpaqueFigTimelineCoordinatorSuspension=}16
v48@0:8^{OpaqueFigTimelineCoordinatorSuspension=}16{?=qiIq}24
v24@0:8^{OpaqueFigPlaybackCoordinator=}16
^{OpaqueFigPlaybackCoordinator=}16@0:8
v32@0:8@16^{OpaqueFigPlaybackCoordinator=}24
^{OpaqueFigPlaybackCoordinator=}
@"<AVPlayerPlaybackCoordinatorDelegate>"
@"<AVPlaybackCoordinationMediumDelegate>"
@"<AVOutputDeviceAuthorizationSessionDelegate>"
@"<AVOutputDeviceAuthorizationSessionImpl>"
B40@0:8@16@24@32
@"AVOutputDeviceAuthorizationSessionInternal"
@"<AVOutputDeviceAuthorizationRequestImpl>"
@"AVOutputDeviceAuthorizationRequestInternal"
v24@0:8^{opaqueCMFormatDescription=}16
v20@0:8s16
@"AVAssetWriterInputHelper"
@"AVAssetWriterInputPassDescriptionResponder"
@40@0:8@16@24^{opaqueCMFormatDescription=}32
^{__CVPixelBufferPool=}16@0:8
B40@0:8^{OpaqueFigAssetWriter=}16@24^@32
q32@0:8^{opaqueCMSampleBuffer=}16^@24
B24@0:8^{opaqueCMSampleBuffer=}16
B48@0:8^{__CVBuffer=}16{?=qiIq}24
@"AVAssetWriterInputInternal"
B40@0:8@16@24^@32
@"AVFigAssetWriterTrack"
@"AVAssetWriterInputMediaDataRequester"
^{__CVPixelBufferPool=}
@"AVAssetWriterInputPassDescription"
@"AVAssetWriterInputWritingHelper"
@"AVAssetWriterInputConfigurationState"
@"AVAssetWriterInputPixelBufferAdaptorInternal"
@76@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56@60^@68
@68@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56^@60
B32@0:8^{opaqueCMSampleBuffer=}16^@24
B56@0:8^{__CVBuffer=}16{?=qiIq}24^@48
i44@0:8@16@24B32^@36
@"NSOperationQueue"
@28@0:8^{OpaqueFigAssetWriter=}16i24
v32@0:8B16@20i28
@"AVAssetWriterInputPassDescriptionInternal"
^{CGColor=}
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
@"AVVideoCompositionInstructionInternal"
@"AVMutableVideoCompositionInstructionInternal"
v168@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112:160
v88@0:8{CGAffineTransform=dddddd}16{?=qiIq}64
v160@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112
B64@0:8{?=qiIq}16^{CGAffineTransform=dddddd}40^{CGAffineTransform=dddddd}48^{?={?=qiIq}{?=qiIq}}56
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24:72
v72@0:8f16f20{?={?=qiIq}{?=qiIq}}24
B64@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56
v136@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80:128
v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{?=qiIq}48
v128@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80
B64@0:8{?=qiIq}16^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48^{?={?=qiIq}{?=qiIq}}56
v72@0:8@16{?={?=qiIq}{?=qiIq}}24
@"AVVideoCompositionLayerInstructionInternal"
@"AVMutableVideoCompositionLayerInstructionInternal"
@"AVVideoCompositionCoreAnimationTool"
v24@0:8@"AVVideoCompositionRenderContext"16
v24@0:8@"AVAsynchronousVideoCompositionRequest"16
v24@0:8@"AVVideoCompositionRenderHint"16
B52@0:8r^^v16^@24@32B40^@44
B80@0:8@16{?={?=qiIq}{?=qiIq}}24@72
v88@0:8@16{?={?=qiIq}{?=qiIq}}24@72@?80
v24@0:8f16i20
@"AVVideoCompositionInternal"
v56@0:8@16@24^@32^@40^@48
v40@0:8@16@?24@?32
@"AVMutableVideoCompositionInternal"
@"AVVideoCompositionCoreAnimationToolInternal"
^{OpaqueFigAssetExportSession=}
@"AVMetadataItemFilter"
v48@0:8@16@24@32@?40
{?=qiIq}32@0:8@16@24
q56@0:8@16{?=qiIq}24@48
@"AVAssetExportSessionInternal"
@"<AVStreamDataParserOutputHandling>"
^{OpaqueFigManifold=}
^{OpaqueCMBlockBuffer=}
@"AVContentKeyRequest"
v32@0:8^{OpaqueCMBlockBuffer=}16Q24
v32@0:8@16Q24
v24@0:8B16i20
B20@0:8i16
@"AVStreamDataParserInternal"
i40@0:8^{OpaqueFigManifold=}16^{opaqueCMSampleBuffer=}24i32I36
i28@0:8^{OpaqueFigManifold=}16i24
i44@0:8^{OpaqueFigManifold=}16^{opaqueCMFormatDescription=}24^v32i40
i20@0:8i16
v24@0:8^{OpaqueFigManifold=}16
i36@0:8^{OpaqueFigManifold=}16i24@28
i32@0:8^{OpaqueCMBlockBuffer=}16^^{OpaqueFigManifold}24
^{OpaqueCMBlockBuffer=}40@0:8@16Q24Q32
@24@0:8^{OpaqueCMBlockBuffer=}16
v32@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24
v32@0:8@"AVContentKeySession"16@"AVPersistableContentKeyRequest"24
v40@0:8@"AVContentKeySession"16@"NSData"24@32
v40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSError"32
B40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSString"32
v24@0:8@"AVContentKeySession"16
@52@0:8@16@24i32@36^@44
@"<AVMediaDataRequesterConsumer>"
v32@0:8@"NSDictionary"16@?<v@?@"AVOutputDeviceCommunicationChannel"@"NSError"@"NSString">24
v24@0:8@"AVOutputDevice"16
@32@0:8@16^{OpaqueAPSyncController=}24
v40@0:8^{__CFData=}16^{__CFString=}24^{__CFString=}32
v32@0:8^{__CFString=}16^{__CFString=}24
@"AVOutputDevice"
@40@0:8@16^{__CFString=}24^{OpaqueAPSyncController=}32
@"AVSynchronizedLayerInternal"
@"<AVOutputDeviceCommunicationChannelDelegate>"
@"<AVOutputDeviceCommunicationChannelManager>"
v32@0:8@?16@?24
@"AVOutputDeviceInternal"
d24@0:8@16
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@"NSString"24
@36@0:8@16@24B32
@"AVOutputDeviceAuthorizedPeerInternal"
@52@0:8@16@24@32B40@44
@"AVPairedDeviceInternal"
@"<AVOutputDeviceCommunicationChannelImpl>"
@52@0:8@16@24q32B40@44
i24@0:8^^{OpaqueFigVideoQueue}16
v24@0:8^{OpaqueCMTimebase=}16
B32@0:8^{OpaqueCMTimebase=}16^@24
i32@0:8^^{OpaqueFigVideoQueue}16^@24
^{OpaqueFigVideoQueue=}16@0:8
i32@0:8^{opaqueCMSampleBuffer=}16^{?={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}}24
v32@0:8^{opaqueCMSampleBuffer=}16^{?={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}}24
v28@0:8B16@?20
v32@0:8B16@?20i28
i24@0:8^{OpaqueFigVideoQueue=}16
^{OpaqueFigVideoQueue=}
@"AVSampleBufferDisplayLayer"
^{__CFArray=}
@"AVMediaDataRequester"
@"AVSampleBufferRenderSynchronizer"
B44@0:8i16{?=qiIq}20
@24@0:8^{OpaqueFigMetadataReader=}16
@48@0:8@16@24@32@40
@56@0:8^{OpaqueFigMetadataReader=}16@24@32@40@48
v24@0:8^{OpaqueFigMetadataReader=}16
@24@0:8^{OpaqueFigEndpoint=}16
^{OpaqueFigEndpoint=}16@0:8
^{OpaqueFigEndpoint=}
@32@0:8^{OpaqueFigEndpoint=}16@24
@32@0:8^{__CFDictionary=}16Q24
^{__CFDictionary=}16@0:8
v24@0:8^{__CFDictionary=}16
@"NSURLSessionTaskMetrics"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v40@0:8^{__CFDictionary=}16Q24@32
i40@0:8^{__CFDictionary=}16Q24^B32
i24@0:8Q16
@24@0:8^{OpaqueFigAsset=}16
@"NSURLSession"
^{OpaqueFigCustomURLHandler=}
^{_CFURLConnection=}16@0:8
v24@0:8^{_CFURLConnection=}16
^{_CFURLConnection=}
^{__CFError=}
i32@0:8^{__CFDictionary=}16Q24
v32@0:8@16^{__CFError=}24
B40@0:8@16^{_CFURLRequest=}24^{_CFURLResponse=}32
v32@0:8@16^{_CFURLResponse=}24
v32@0:8@16^{__CFData=}24
i56@0:8^{__CFDictionary=}16Q24q32@40^{OpaqueFigCustomURLHandler=}48
i40@0:8^{__CFDictionary=}16Q24*32
@"AVAudioMixInternal"
@"AVMutableAudioMixInternal"
r^{opaqueMTAudioProcessingTap=}16@0:8
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24q72
B72@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56^q64
@"AVAudioMixInputParametersInternal"
@"AVMutableScheduledAudioParameters"
@"AVAudioMixEffectParameters"
@"AVMutableAudioMixInputParametersInternal"
@96@0:8@16{?=qiIq}24{?=qiIq}48{?=qiIq}72
@"<AVOutputContextImpl>"
@"<AVOutputContextCommunicationChannelDelegate>"
B32@0:8@16Q24
@"AVOutputContextInternal"
@"<AVOutputContextCommunicationChannelImpl>"
@"AVOutputContextCommunicationChannelInternal"
@"AVOutputContextDestinationChangeInternal"
@"<AVOutputContextManagerImpl>"
@"AVOutputContextManagerInternal"
@24@0:8^{__CFRunLoop=}16
^{__CFRunLoop=}16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
^{__CFRunLoop=}
^{__CFRunLoopSource=}
@24@0:8^{OpaqueFigFormatReader=}16
v24@0:8^{OpaqueFigFormatReader=}16
^v24@0:8^{__CFString=}16
@32@0:8^{OpaqueFigPlaybackItem=}16@24
@"AVScheduledAudioParametersInternal"
@"AVMutableScheduledAudioParametersInternal"
B48@0:8q16@24^q32^@40
v32@0:8^@16^@24
v32@0:8@?16@24
^{OpaqueConcurrentAccessDetector=}
^{OpaqueFigSimpleMutex=}16@0:8
^{OpaqueFigFormatReader=}24@0:8^i16
B28@0:8q16i24
v48@0:8@16@24@32@40
@56@0:8@16Q24@32@40@48
@32@0:8^{OpaqueFigAsset=}16@24
q40@0:8@16^{OpaqueFigAsset=}24^@32
q40@0:8@16^@24^@32
B32@0:8q16q24
@"AVRoutingSessionManagerInternal"
@"AVRoutingSessionInternal"
@"AVRoutingSessionDestinationInternal"
^{OpaqueFigSampleCursorService=}24@0:8^B16
^{OpaqueFigTrackReader=}
^{OpaqueFigSampleCursorService=}
^{OpaqueFigSampleGenerator=}
v32@0:8^{opaqueCMSampleBuffer=}16@?24
@32@0:8@16^{OpaqueCMTimebase=}24
^{OpaqueFigSampleGenerator=}16@0:8
^{opaqueCMSampleBuffer=}32@0:8@16^@24
^{opaqueCMSampleBuffer=}24@0:8@16
^{opaqueCMSampleBuffer=}40@0:8@16@24^@32
@"AVSampleBufferGeneratorInternal"
@"AVSampleCursor"
@"AVSampleBufferRequestInternal"
@"AVSampleBufferGenerator"
^{OpaqueFigSampleGeneratorBatch=}
@"AVAssetSegmentReportSampleInformation"
^v24@0:8@16
@28@0:8^{opaqueCMFormatDescription=}16i24
@"AVStreamDataParser"
@"AVStreamDataAssetInspector"
@"AVAssetSynchronousInspectorLoader"
@"AVPlayerItemMediaDataCollectorInternal"
@24@0:8^{opaqueCMNotificationCenter=}16
^{opaqueCMNotificationCenter=}16@0:8
v52@0:8@16^?24^{__CFString=}32^v40I48
v48@0:8@16^?24^{__CFString=}32^v40
@48@0:8@16^?24^{__CFString=}32^v40
^{opaqueCMNotificationCenter=}
@48@0:8@16^?24@32^v40
v24@0:8@?<v@?>16
@"NSCondition"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"AVAssetTrackGroupInternal"
^{opaqueCMSampleBuffer=}
@72@0:8@16{?={?=qiIq}{?=qiIq}}24
@24@0:8^{opaqueCMSampleBuffer=}16
@"AVTimedMetadataGroupInternal"
^{opaqueCMSampleBuffer=}32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVDateRangeMetadataGroupInternal"
@32@0:8@16B24B28
@"AVManagedAssetCacheInternal"
^{CMBaseObject=}
@"AVAssetDownloadCacheInternal"
{?=ii}16@0:8
@24@0:8{?=ii}16
@100@0:8@16@24@32q40f48{?=qiIq}52{?=qiIq}76
@"AVDelegatingPlaybackCoordinator"
@"AVCoordinatedPlaybackParticipant"
@60@0:8@16@24@32q40f48@52
@56@0:8@16@24@32q40B48f52
@92@0:8@16@24@32q40{?=qiIq}48B72B76f80@84
v28@0:8f16Q20
v48@0:8{?=qiIq}16Q40
v32@0:8@16^{OpaqueCMTimebase=}24
^{OpaqueFigTimelineCoordinator=}
@"<AVPlaybackCoordinatorPlaybackControlDelegate>"
@"AVPlayerItemAccessLogInternal"
@"AVPlayerItemAccessLogEventInternal"
@32@0:8@16d24
@"AVFragmentedMovieTrackInternal"
@"AVPlayerItemErrorLogInternal"
@"AVPlayerItemErrorLogEventInternal"
@"AVExternalPlaybackMonitorInternal"
@"<AVAudioSessionDelegateMediaPlayerOnly>"
B36@0:8B16q20^@28
@"AVAudioSessionMediaPlayerOnlyInternal"
@"AVMediaSelectionGroupInternal"
@44@0:8@16@24@32B40
@"AVMediaSelectionOption"
B36@0:8@16B24q28
@"AVMediaSelectionOptionInternal"
{?=qiIq}48@0:8^{__CFString=}16{?=qiIq}24
{?=qiIq}24@0:8^{__CFString=}16
{?={?=qiIq}{?=qiIq}}24@0:8^{__CFString=}16
f28@0:8^{__CFString=}16f24
f24@0:8^{__CFString=}16
s24@0:8^{__CFString=}16
i24@0:8^{__CFString=}16
q24@0:8^{__CFString=}16
C24@0:8^{__CFString=}16
{CGSize=dd}40@0:8^{__CFString=}16{CGSize=dd}24
{CGAffineTransform=dddddd}24@0:8^{__CFString=}16
Q24@0:8@16
Q32@0:8@16^@24
@32@0:8@16^{opaqueCMFormatDescription=}24
^{__CFString=}24@0:8@16
B32@0:8@"AVAudioOutputSettings"16^@24
B32@0:8@"AVVideoOutputSettings"16^@24
v36@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24^{opaqueCMFormatDescription=}28
^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}32@0:8^{opaqueCMFormatDescription=}16^Q24
v48@0:8@16^@24^@32^@40
B48@0:8@16@24@32^@40
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
f28@0:8f16q20
I28@0:8I16q20
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
^{OpaqueAudioConverter=}
@32@0:8d16d24
@32@0:8{AudioValueRange=dd}16
@"AVAssetDownloadSessionInternal"
v32@0:8Q16Q24
i24@0:8^{OpaqueFigAsset=}16
^{OpaqueFigAsset=}24@0:8@16
^{OpaqueFigSampleCursor=}
@24@0:8^{OpaqueFigSampleCursor=}16
^{OpaqueFigSampleCursor=}16@0:8
q24@0:8q16
{?=qiIq}48@0:8{?=qiIq}16^B40
^{opaqueCMSampleBuffer=}24@0:8^@16
{?=BBB}16@0:8
{?=BBBBBB}16@0:8
{?=Bq}16@0:8
{?=qq}16@0:8
{?=qBBB}16@0:8
@"AVSampleCursorInternal"
{?=qiIq}24@0:8d16
{?=qiIq}24@0:8q16
@"AVPlayerItemOutputInternal"
^{__CVBuffer=}52@0:8{?=qiIq}16B40^{?=qiIq}44
@"AVPlayerItemVideoOutputInternal"
@"AVFragmentedAssetInternal"
v28@0:8d16B24
@"AVFragmentedAssetMinderInternal"
@"AVFragmentedAssetTrackInternal"
v44@0:8@16{CGSize=dd}24B40
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGSize=dd}16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"AVSampleBufferVideoRenderer"
@"AVSampleBufferVideoOutput"
@48@0:8@16Q24Q32Q40
@"NSObject<OS_xpc_object>"
:16@0:8
@"AVWeakReference"16@0:8
@48@0:8@16@24^{__CFDictionary=}32Q40
@64@0:8@16@24q32@40@48@56
^{OpaqueFigCustomURLLoader=}
@"AVAssetCustomURLBridgeForNSURLSession"
^{OpaqueFigCustomURLHandler=}16@0:8
^{OpaqueFigCustomURLLoader=}16@0:8
v52@0:8:16@24B32@36@?44
v32@0:8^{__CFDictionary=}16Q24
v44@0:8@16@24B32@?36
v40@0:8^{__CFDictionary=}16Q24^B32
v24@0:8^{OpaqueFigCustomURLHandler=}16
@"AVAssetResourceLoaderInternal"
v48@0:8@16q24@32@40
v32@0:8@"NSURLCredential"16@"NSURLAuthenticationChallenge"24
v24@0:8@"NSURLAuthenticationChallenge"16
@"AVAssetResourceLoadingContentInformationRequestInternal"
@48@0:8@16q24q32B40B44
@"AVAssetResourceLoadingDataRequestInternal"
@"NSMutableURLRequest"
@"NSURLResponse"
@"NSURLRequest"
@"NSMutableData"
@"AVAssetResourceLoadingContentInformationRequest"
@"AVAssetResourceLoadingDataRequest"
@"AVAssetResourceLoadingRequestor"
@40@0:8@16^{__CFDictionary=}24Q32
@80@0:8@16@24@32@40@48@56^{OpaqueFigCPECryptor=}64Q72
@52@0:8@16@24@32B40^@44
@48@0:8@16@24@32^@40
@"AVAssetResourceLoadingRequestInternal"
@"AVAssetResourceLoadingRequestorInternal"
^{OpaqueFigSampleBufferRenderSynchronizer=}
B76@0:8f16{?=qiIq}20{?=qiIq}44^@68
i68@0:8f16{?=qiIq}20{?=qiIq}44
@"AVSampleBufferRenderSynchronizerInternal"
@?24@0:8@16
v40@0:8@16@?24@32
B56@0:8@16{?=qiIq}24@?48
v56@0:8@16{?=qiIq}24@?48
^{OpaqueFigSampleBufferRenderSynchronizer=}40@0:8r^{__CFAllocator=}16r^{__CFDictionary=}24^@32
@"FigAlternateObjC"
@"AVAssetVariantVideoAttributes"
@"AVAssetVariantAudioAttributes"
@24@0:8^{OpaqueFigAlternate=}16
^{OpaqueFigAlternate=}16@0:8
@40@0:8q16@24Q32
@32@0:8d16Q24
@"NSPredicate"
@"AVAssetVariant"
@"NSPredicateOperator"
@"AVTextStyleRuleInternal"
@56@0:8@16@24@32@40B48B52
@56@0:8@16@24@32@40q48
v24@0:8^{__CVBuffer=}16
@"AVAsynchronousVideoCompositionRequest"
@"CIImage"
^{__CVBuffer=}
@56@0:8@16^{__CVBuffer=}24@?32@?40@?48
@"AVAsynchronousCIImageFilteringRequestInternal"
@80@0:8{?={?=qiIq}{?=qiIq}}16@64@?72
@"NSObject<OS_dispatch_group>"
@"CIContext"
@"<AVPlayerItemOutputHost>"24@0:8@"AVPlayerItem"16
@"<AVPlayerItemLegibleOutputDependencyFactory>"
v56@0:8@16@24{?=qiIq}32
@"AVPlayerItemLegibleOutputInternal"
@"<AVOutputSettingsAssistantBaseSettingsProvider>"
@"<AVOutputSettingsAssistantVideoSettingsAdjuster>"
@"AVOutputSettingsAssistantInternal"
q36@0:8^{opaqueCMFormatDescription=}16f24@28
q36@0:8^{opaqueCMFormatDescription=}16f24@"NSDictionary"28
@"NSDictionary"32@0:8@"NSArray"16@"NSDictionary"24
B24@0:8@"NSString"16
@"AVMediaSelectionInternal"
@"AVExternalDeviceHIDInternal"
@"AVExternalDeviceIconInternal"
@"<AVExternalDeviceDelegate>"
@"AVExternalDevice"
@"AVExternalDeviceInternal"
@"AVPlayerLayerIntermediateLayer"
@"NSSet"
v32@0:8@"<AVVideoCompositing>"16@"NSException"24
^{OpaqueFigVideoCompositor=}16@0:8
v32@0:8^{OpaqueFigVideoCompositorFrame=}16^{__CVBuffer=}24
v32@0:8^{OpaqueFigVideoCompositorFrame=}16@24
v24@0:8^{OpaqueFigVideoCompositorFrame=}16
^{OpaqueFigVideoCompositor=}
@"<AVVideoCompositing>"
@"AVVideoCompositionRenderContext"
i72@0:8^{OpaqueFigVideoCompositorFrame=}16{?=qiIq}24@48@56^v64
i112@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88
i120@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88q112
@24@0:8f16i20
@"AVDisplayCriteriaInternal"
@48@0:8@16@24Q32@?40
@"AVCallbackContextRegistry"
@?32@0:8@16@?24
v24@0:8@"NSDictionary"16
@"NSObject"16@0:8
@64@0:8@16@24@32@40Q48@?56
@"NSObject<AVWeakObservable>"
@56@0:8@16@24@32Q40^v48
v32@0:8@"NSString"16@"AVTwoPartKeyPath"24
@"AVWeakObservableCallbackCancellationHelper"
@"AVKVODispatcher"
@"AVTwoPartKeyPath"
@"<AVKVOIntrospection><AVCallbackCancellation>"
^{OpaqueFigVideoCompositorFrame=}16@0:8
^{OpaqueFigVideoCompositorFrame=}
@"<AVVideoCompositionInstruction>"
^{__CVBuffer=}20@0:8i16
^{opaqueCMSampleBuffer=}20@0:8i16
@"AVAsynchronousVideoCompositionRequestInternal"
@88@0:8@16@24^{OpaqueFigVideoCompositorFrame=}32{?=qiIq}40@64@72@80
@"AVOutputDeviceDiscoverySession"
@"DADiscovery"
@"AVRouteDetectorInternal"
{?="horizontalSpacing"q"verticalSpacing"q}
{?="left"d"top"d"right"d"bottom"d}
{?="width"i"height"i}
{?=dddd}16@0:8
@"AVVideoCompositionRenderContextInternal"
@48@0:8^{OpaqueFigVideoCompositor=}16@24@32^{__CVPixelBufferPool=}40
B24@0:8^{OpaqueFigVideoCompositor=}16
B24@0:8^{__CVBuffer=}16
@24@0:8^{OpaqueFigVideoCompositor=}16
@"AVMediaDataStorageInternal"
@48@0:8^{OpaqueFigFormatReader=}16@24@32@40
^{OpaqueFigMutableMovie=}24@0:8^{OpaqueFigFormatReader=}16
@"AVMovieInternal"
^{OpaqueFigMutableMovie=}24@0:8@16
B48@0:8@16@24Q32^@40
@"AVMutableMovieInternal"
^{opaqueCMSampleBuffer=}28@0:8i16^I20
v24@0:8i16i20
v32@0:8@16^{OpaqueFigPlaybackItem=}24
@"AVContentKeyReportGroup"
@"AVContentKeySpecifier"
@"AVContentKey"
^{OpaqueFigCFWeakReferenceHolder=}
^{FigContentKeySpecifier=}
B52@0:8^{OpaqueFigCPECryptor=}16B24^Q28^B36^@44
@52@0:8@16@24@32Q40i48
@76@0:8@16@24@32@40@48@56@64B72
@72@0:8@16@24^{OpaqueFigCustomURLHandler=}32@40^{__CFDictionary=}48Q56B64B68
@100@0:8@16^{CMBaseObject=}24B32^{FigContentKeySpecifier=}36@44@52@60B68q72B80@84@92
^{CMBaseObject=}16@0:8
^{OpaqueFigCPECryptor=}16@0:8
v24@0:8^{OpaqueFigCPECryptor=}16
B32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVContentKeyRequestInternal"
@56@0:8@16@24@32@40@48
@"AVContentKeyResponseInternal"
@"NSMapTable"
^{OpaqueFigSecureStopManager=}32@0:8@16@24
v44@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24q32B40
v48@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24q32^{OpaqueFigCPECryptor=}40
v32@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24
v48@0:8@16@24q32@40
v48@0:8@16@24@32q40
@"AVContentKeySessionInternal"
v40@0:8@16@24Q32
@32@0:8@16Q24
v28@0:8@?16B24
i24@0:8@16
v32@0:8@16:24
v52@0:8^{OpaqueFigCustomURLHandler=}16@24^{__CFDictionary=}32Q40B48
v44@0:8@16@24@32B40
v72@0:8^{FigContentKeySpecifier=}16@24@32@40q48@56@64
v48@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32@40
r^{OpaqueFigCPECryptor=}24@0:8@16
B40@0:8^{opaqueCMFormatDescription=}16r^^{OpaqueFigCPECryptor}24^@32
r^{OpaqueFigCPECryptor=}40@0:8@16^{opaqueCMFormatDescription=}24^@32
^{OpaqueFigCPECryptor=}24@0:8@16
v48@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32^B40
i32@0:8@16^^{OpaqueFigCustomURLHandler}24
q52@0:8@16i24@28q36^@44
q36@0:8@16i24^@28
B32@0:8^q16^@24
@48@0:8@16@24^{opaqueCMFormatDescription=}32@40
B32@0:8q16^@24
^{OpaqueFigContentKeySession=}
r^{OpaqueFigCPECryptor=}56@0:8@16@24^{opaqueCMFormatDescription=}32@40^@48
r^{OpaqueFigCPECryptor=}32@0:8@16@24
r^{OpaqueFigContentKeySession=}16@0:8
@60@0:8@16@24^{CMBaseObject=}32B40q44@52
i32@0:8^{OpaqueFigCPECryptor=}16@24
@32@0:8@16^{OpaqueFigCPECryptor=}24
@32@0:8^{__CFString=}16^{OpaqueAPSyncController=}24
@32@0:8^{__CFString=}16^{__CFString=}24
v024
f024
ARGB
024x
02fx
ILODU
<R?RRRB
@ffffff
MbP?
<<<< AVOutputDeviceGroup (AVOutputContext) >>>> %s: called (self=%p)
<<<< AVOutputDeviceGroup (AVOutputContext) >>>> %s: called (self=%p, outputDevice=%@, options=%@)
<<<< AVPlayerLooper >>>> %s: Create with player %p and item %p
<<<< AVPlayerLooper >>>> %s: AVPlayerLooperInternal allocation failed
<<<< AVPlayerLooper >>>> %s: ivarAccessQueue allocation failed
<<<< AVPlayerLooper >>>> %s: loopingItemCopies allocation failed
<<<< AVPlayerLooper >>>> %s: Couldn't set up for looping. Change status to Failed
<<<< AVPlayerLooper >>>> %s: Couldn't load asset duration. Change status to Failed
<<<< AVPlayerLooper >>>> %s: Change to Failed status with error %@
<<<< AVPlayerLooper >>>> %s: Already in Failed state so not updating error
<<<< AVPlayerLooper >>>> %s: Time range duration is %1.3f
<<<< AVPlayerLooper >>>> %s: Loop item duration is %1.3f
<<<< AVPlayerLooper >>>> %s: Using loop duration of %1.3f
<<<< AVPlayerLooper >>>> %s: Looping item duration is 0. Can't loop
<<<< AVPlayerLooper >>>> %s: Loop duration is less than minimum so capped number of copies to %d
<<<< AVPlayerLooper >>>> %s: Need %d copies for looping
<<<< AVPlayerLooper >>>> %s: The minimum number of copies (%d) is sufficient for looping
<<<< AVPlayerLooper >>>> %s: Loop time range starts past item duration
<<<< AVPlayerLooper >>>> %s: Loop time range end is past item duration
<<<< AVPlayerLooper >>>> %s: Need to create %d item copies
<<<< AVPlayerLooper >>>> %s: Can't loop with 0 item copies
<<<< AVPlayerLooper >>>> %s: Failed to allocate item copy
<<<< AVPlayerLooper >>>> %s: Pausing player (current rate: %1.1f) during set up
<<<< AVPlayerLooper >>>> %s: Changing player's action-at-end to Advance
<<<< AVPlayerLooper >>>> %s: In Failed or cancelled state so cannot advance to Ready
<<<< AVPlayerLooper >>>> %s: Restoring player rate(%1.1f)
<<<< AVPlayerLooper >>>> %s: observeValueForKeyPath:ofObject:change:context: called for %@
<<<< AVPlayerLooper >>>> %s: Looping turned off and not waiting for looping copy to finish so ignoring
<<<< AVPlayerLooper >>>> %s: Looping item(%p) failed to become ready so disabling looping
<<<< AVPlayerLooper >>>> %s: Unknown context(%p). Ignoring
<<<< AVPlayerLooper >>>> %s: [%p]Disabling looping since item(%p) failed to play to end with error %@
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputDeviceDiscoverySession >>>> %s: *** nil impl! ***
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (targetAudioSession=%@)
<<<< AVOutputDeviceDiscoverySession >>>> %s: called (session=%p, discoveryMode=%d, clientIdentifiers=%@)
<<<< AVOutputDeviceDiscoverySession >>>> %s: Available output devices: %@
<<<< AVOutputDeviceDiscoverySession >>>> %s: Returning %@
<<<< AVOutputDeviceDiscoverySession >>>> %s: Posting %@
<<<< AVOutputDeviceDiscoverySession >>>> %s: recentlyUsedDevices = %@
<<<< AVOutputDeviceDiscoverySession >>>> %s: otherDevices = %@
<<<< AVOutputDevice (APSyncController) >>>> %s: Registering local device listeners.
<<<< AVOutputDevice (APSyncController) >>>> %s: Failed to copy SyncController with error: %d
<<<< AVOutputDevice (APSyncController) >>>> %s: called (self=%p, syncController=%p, backupImpl=%@)
<<<< AVOutputDevice (APSyncController) >>>> %s: called (self=%p)
<<<< AVOutputDevice (APSyncController) >>>> %s: Device description for device with ID %@, type %@ and name %@ not constructed.
<<<< AVOutputDevice (APSyncController) >>>> %s: called (self=%p, ID=%@, endpointID=%@)
<<<< AVOutputDevice (APSyncController) >>>> %s: called (inLocalSpeakerUUID = %@, inError = %d)
<<<< AVOutputDevice (APSyncController) >>>> %s: called (endpointID=%{private}@)
<<<< AVOutputDevice (APSyncController) >>>> %s: called
<<<< AVPlayerLayer >>>> %s: <%p> Hiding video layer since the presentation size is 0x0
<<<< AVPlayerLayer >>>> %s: called (self=%p)
<<<< AVPlayerLayer >>>> %s:  <%p> Hiding video layer since the presentation size for player %p is 0x0
<<<< AVPlayerLayer >>>> %s: %@ frame is { %f, %f }
<<<< AVPlayerLayer >>>> %s: <%p> Unhiding video layer since the presentation size for player %p is { %f, %f }
<<<< AVPlayerLayer >>>> %s: <%p> Setting closed caption layer bounds to %@
<<<< AVPlayerLayer >>>> %s: <%p> Using box filter downscale
<<<< AVPlayerLayer >>>> %s: Called (self=%p, bounds=%@)
<<<< AVPlayerLayer >>>> %s: displaySize is %f x %f rootSize is %f x %f percentage %f
<<<< AVPlayerLayer >>>> %s: Display Size is %f x %f scale is %f
<<<< AVPlayerLayer >>>> %s: %p notifying player %p about new display size %@
<<<< AVPlayerLayer >>>> %s: Called (self=%p)
<<<< AVPlayerLayer >>>> %s: <%p> size needs update from { %f, %f } to { %f, %f } (force=%s)
<<<< AVPlayerLayer >>>> %s: <%p> size needs no update using cached value { %f, %f }
<<<< AVPlayerLayer >>>> %s: %@ commence player <%p> observation
<<<< AVPlayerLayer >>>> %s: %@ resign player <%p> observation over currentItem.presentationSize
<<<< AVPlayerLayer >>>> %s: <%p> Did cancel all observation of old player
<<<< AVPlayerLayer >>>> %s: called (keyPath=%@, object=%@, change=%@, context=%p
<<<< AVPlayerLayer >>>> %s: %@ AVPlayerLayer's net flip status does not match CoreAnimation default; adding a flip at videoLayer
<<<< AVPlayerLayer >>>> %s: %@ AVPlayerLayer's net flip status does match CoreAnimation default
<<<< AVPlayerLayer >>>> %s: <%p> Not applying new value of AVPlayer.currentItem.nonForcedSubtitleDisplayEnabled for player %p not currently being observed (expected %p)
<<<< AVPlayerLayer >>>> %s: <%p> Not applying new value of AVPlayer.isDisplayingClosedCaptions for player %p not currently being observed (expected %p)
<<<< AVPlayerLayer >>>> %s: <%p> %@ closed caption layer
<<<< AVPlayerLayer >>>> %s: %@ setting player to <%p> forPIP:%d
<<<< AVPlayerLayer >>>> %s: Setting readyForDisplay to NO due to detaching from player %@ (self=%p)
<<<< AVPlayerLayer >>>> %s: sync to player (self=%p, player=%p)
<<<< AVPlayerLayer >>>> %s: %@ setting self on player <%p>
<<<< AVPlayerLayer >>>> %s: <%p> called
<<<< AVPlayerLayer >>>> %s: %@ visibility became YES
<<<< AVPlayerLayer >>>> %s: %@ visibility became NO
<<<< AVPlayerLayer >>>> %s: <%p> finished
<<<< AVPlayerLayer >>>> %s: called (self=%p, item=%p, readyForDisplay=%d)
<<<< AVPlayerLayer >>>> %s: requesting the pixelBufferAttributes property on a presentation layer is invalid
<<<< AVPlayerLayer >>>> %s: creating interstitialLayer %p for primary playerLayer %p
<<<< AVPlayerLayer >>>> %s: Scheduling interstitialLayer %p visibility to %d and primary (mask) layer %p visibility to %d (delayed to %f, now %f)
<<<< AVPlayerLayer >>>> %s: Setting interstitialLayer %p visibility to %d and primary (mask) layer %p visibility to %d
<<<< AVPlayerLayer >>>> %s: scalingFactor(%d) is not between 2 and 8
<<<< AVPlayerLayer >>>> %s: setting forScrubbingOnly = %d
<<<< AVPlayerLayer >>>> %s: %@ showing interstitial, call interstitial player _copyDisplayedPixelBuffer
<<<< AVPlayerLayer >>>> %s: player layer %p <-> player layer %p
<<<< AVPlayerLayer >>>> %s: AVPlayerLayer already connected to second screen
<<<< AVPlayerLayer >>>> %s: %@ entering second screen mode using %p
<<<< AVPlayerLayer >>>> %s: %@ leaving second screen mode
<<<< AVPlayerLayer >>>> %s: %@ left second screen mode
<<<< AVPlayerLayer >>>> %s: %@ already in PIP mode but will use %p instead of %p
<<<< AVPlayerLayer >>>> %s: %@ entering PIP mode using %p
<<<< AVPlayerLayer >>>> %s: %@ became PIP'ed
<<<< AVPlayerLayer >>>> %s: %@ leaving PIP mode
<<<< AVPlayerLayer >>>> %s: %@ left PIP mode
<<<< AVPlayerLayer >>>> %s: Error in traversing layer tree
<<<< AVPlayerLayer >>>> %s: <%p> Restoring client layer %@ with indexPath %@
<<<< AVPlayerLayer >>>> %s: <%p> setting new sublayers: videoLayer(%p), closedCaptionLayer(%p), subtitleLayer(%p), interstitialLayers = %@
<<<< AVPlayerLayer >>>> %s: Cannot set sublayers while PIP is active
<<<< AVPlayerLayer >>>> %s: Cannot add sublayer while PIP is active
<<<< AVPlayerLayer >>>> %s: Cannot insert sublayer while PIP is active
<<<< AVPlayerLayer >>>> %s: Cannot replace sublayer while PIP is active
<<<< AVPlayerLayer >>>> %s: <%p> Regardless of the state of PIP the layer is in, removeFromSuperLayer is always allowed
<<<< AVPlayerLayer >>>> %s: <%p> return default based on last window scene event %d
<<<< AVPlayerLayer >>>> %s: %p got window scene in state %ld
<<<< AVPlayerLayer >>>> %s: no window scene in _currentWindowSceneIsForeground <%p> , return default %d
<<<< AVPlayerLayer >>>> %s: Window scene containing layer <%p> did enter background
<<<< AVPlayerLayer >>>> %s: Window scene containing layer <%p> will enter foreground
<<<< AVPlayerLayer >>>> %s: %p check should notify player _playerLayer->lastWindowSceneEvent > None (%d), isVisible (%d), _isPartOfForegroundScene (%d)
<<<< AVPlayerLayer >>>> %s: %p skip notifying player as isVisible (%d) !=  _isPartOfForegroundScene
<<<< AVPlayerLayer >>>> %s: <%p> layer active state changed to %d
<<<< AVPlayerLayer >>>> %s: Storing client layer %@ with indexPath %@
<<<< AVTimebaseObserver >>>> %s: engage timebase <%p> notifications for <%p>
<<<< AVTimebaseObserver >>>> %s: firing at time == %@
<<<< AVTimebaseObserver >>>> %s: timebase rate change from [%f] to [%f]
<<<< AVTimebaseObserver >>>> %s: Playback stopped. Observe immediate.
<<<< AVTimebaseObserver >>>> %s: Playback resumed. Observe immediate.
<<<< AVTimebaseObserver >>>> %s: rescheduling after non-periodic firing near time == %@
<<<< AVTimebaseObserver >>>> %s: rescheduling after periodic firing at time == %@
<<<< AVTimebaseObserver >>>> %s: scheduling for == %@
<<<< AVTimebaseObserver >>>> %s: Periodic Observer <%p>: Detected stop time jump to the last time where rate fell to zero and have winnowed this event
<<<< AVTimebaseObserver >>>> %s: Periodic Observer <%p> Jumped to time [%f]
<<<< AVTimebaseObserver >>>> %s: Occasional timebase observer <%p> created with timebase %p and fire times: %@
<<<< AVTimebaseObserver >>>> %s: Occasional timebase observer <%p> Firing at current time [%1.3f]
<<<< AVTimebaseObserver >>>> %s: Playback direction did change. Resetting timer
<<<< AVTimebaseObserver >>>> %s: Occasional timebase observer <%p> with source <%p> at current time [%f] nextfire [%f]
<<<< AVTimebaseObserver >>>> %s: Absolute timebase observer <%p> created for firing time [%1.3f]
<<<< AVTimebaseObserver >>>> %s: Absolute timebase observer <%p> firing for firing time [%1.3f] at current time [%1.3f]
<<<< AVTimebaseObserver >>>> %s: Absolute timebase observer <%p> with source <%p> at current time [%f] nextfire [%f]
<<<< AVTimebaseObserver >>>> %s: Timebase observer invalidated, ignoring notification
<<<< AVTimebaseObserver >>>> %s: Timebase returned time(%@), clamped from time(%@)
<<<< AVTimebaseObserver >>>> %s: Timebase returned time(%@)
<<<< AVTimebaseObserver >>>> %s: Timebase returned non-numeric time (%lld/%d/%#x/%lld)) so setting to kCMTimeZero
<<<< AVTimebaseObserver >>>> %s: Timebase returned time with non-zero epoch(%lld) so setting to kCMTimeZero
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVPlayerInterstitialEventController.m %s:  Unrecognized notification: %@
<<<< AVSampleBufferVideoOutput >>>> %s: FigVisualContextCreate failed: %d
<<<< AVSampleBufferVideoOutput >>>> %s: FigVisualContextSetImageAvailableImmediateCallback failed: %d
<<<< AVSampleBufferVideoOutput >>>> %s: Unable to copy next image from visual context. Bailing.
<<<< AVSampleBufferVideoOutput >>>> %s: FigVisualContextCopyImageForTime did not provide a imageOriginalTimeOut value. Bailing.
<<<< AVSampleBufferVideoOutput >>>> %s: copyPixelBufferForSourceTime requestTime %1.3f pb %p time %1.3f
<<<< AVSampleBufferVideoOutput >>>> %s: FigVideoQueueSetProperty for kFigVideoQueueProperty_VisualContextArray failed: %d
<<<< AVSampleBufferVideoOutput >>>> %s: FigVideoQueueSetProperty for kFigVideoQueueProperty_VisualContextArrayOptions failed: %d
<<<< AVSampleBufferVideoOutput >>>> %s: Dispatching -outputSequenceWasFlushed:
<<<< AVSampleBufferVideoOutput >>>> %s: Sending -outputSequenceWasFlushed: to delegate
<<<< AVAssetDownloadStorageManager >>>> %s: Set storageManagementPolicy %@ for asset at URL %@
<<<< AVAssetDownloadStorageManager >>>> %s: StorageManagementPolicy for asset at URL %@ is  %@ 
<<<< AVOutputDeviceGroup >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputDeviceGroup >>>> %s: outputDevices = %@
<<<< AVOutputDeviceGroup >>>> %s: Posting %{public}@ with initiator %{public}@
<<<< AVOutputDeviceGroup >>>> %s: called (device=%{private}@ authToken? %d cancelIfAuthRequired=%{public}@, initiator=%{public}@)
<<<< AVOutputDeviceGroup >>>> %s: Result: %{public}@
<<<< AVOutputDeviceGroup >>>> %s: called (device=%{private}@, initiator=%{public}@
<<<< AVOutputDeviceGroup >>>> %s: Posting %{public}@
<<<< AVMetadataItem >>>> %s: Value %p does not conform to NSObject and/or NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Keyspace must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Key must conform to NSObject and NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Locale must be an instance of NSLocale
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_ExtendedLanguageTag must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_LanguageCode must be an instance of NSString or of NSNumber
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Value must be CMBoxedMetadata or conform to NSObject and NSCopying
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DataTypeNamespace must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_ConformingDataTypes must be an instance of NSArray
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DataLength must be an instance of NSNumber
<<<< AVMetadataItem >>>> %s: Identifier value %@ must be an instance of NSString
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Timestamp must be an instance of CFDictionary
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Duration must be an instance of CFDictionary
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_Date must be an instance of NSDate
<<<< AVMetadataItem >>>> %s: Value %@ for kFigMetadataItemProperty_DiscoveryTimestamp must be an instance of NSDate
<<<< AVMetadataItem >>>> %s: *** Could not canonicalize language: %@. ***
<<<< AVMetadataItem >>>> %s: <%p> initiating asynchronous loading of lazily-loaded metadata value
<<<< AVMetadataItem >>>> %s: <%p> completed asynchronous loading of lazily-loaded metadata value
<<<< AVMetadataItem >>>> %s: keyspace not found %@
<<<< AVMetadataItem >>>> %s: key not found %@
<<<< AVAsset >>>> %s: <%p> called for property list %@, mediaSelectionOptionOut = <%p>
<<<< AVAsset >>>> %s: <%p> resolved to group %@ and option %@
<<<< AVAsset >>>> %s: *** Could not canonicalize language: %@. ***
<<<< AVAsset >>>> %s: *** MediaValidator.plist was not loaded for this platform! Defaulting to no video support. ***
<<<< AVAsset >>>> %s: asset created with AVAssetRequiresInProcessOperationKey
<<<< AVAsset >>>> %s: asset created with AVAssetPrefersSandboxedParsingOptionKey
<<<< AVAsset >>>> %s: %@ <%p> FigAssetCopyAssetWithDownloadToken for downloadToken %llu returned %d
<<<< AVAsset >>>> %s: creating AVAssetInspectorLoader
<<<< AVAsset >>>> %s: using custom AVAssetInspectorLoader
<<<< AVAsset >>>> %s: %@ creating AVFigAssetInspectorLoader
<<<< AVAsset >>>> %s: %@ Created %p
<<<< AVAsset >>>> %s: Cannot create AVAssetDownloadCache when an AVManagedAssetCache is already present.
<<<< AVAsset >>>> %s: %@ Received notification for %@
<<<< AVAsset >>>> %s: %s
<<<< AVAsset >>>> %s: _URLAsset->resourceLoader was unexpectedly non-nil
<<<< AVAssetImageGenerator >>>> %s: Creating FigAssetImageGenerator from FigAsset
<<<< AVAssetImageGenerator >>>> %s: called
<<<< AVAssetImageGenerator >>>> %s: composition => using AVAssetReader
<<<< AVAssetImageGenerator >>>> %s: not a composition => using FigAssetImageGenerator
<<<< AVAssetImageGenerator >>>> %s: calling FigAssetImageGeneratorCopyCGImageAtTime time %.3f options %@
<<<< AVAssetImageGenerator >>>> %s: no FigAssetImageGenerator instance!
<<<< AVAssetImageGenerator >>>> %s: calling FigAssetImageGeneratorRequestCGImageAtTimeAsync time %.3f options %@
<<<< AVAssetImageGenerator >>>> %s: calling handler with failed status, error %@
<<<< AVAssetImageGenerator >>>> %s: calling handler with succeeded status, actualTime %.3f
<<<< AVAssetImageGenerator >>>> %s: calling handler with cancelled status
<<<< AVAssetImageGenerator >>>> %s: calling handler with failed status, error %d
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p, dataLength=%d)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: Sending %d bytes through comm channel via FigEndpointRemoteControlSessionSendMessage for channel=%p
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: called (channel=%p, inEventType=%{public}@, dataLength=%d)
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: Unrecognized event type: %@
<<<< AVOutputDeviceCommunicationChannel (FigRemoteControlSession) >>>> %s: FigEndpointRemoteControlSessionSendMessage finished with response params %{public}@ (err=%d)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVAssetTrack.m %s: %s
<<<< AVPlayer >>>> %s: <%@>. isRunning %d, hasForegroundVisibility %d appIsInForeground %d, processIsViewService %d
<<<< AVPlayer >>>> %s: Player status changed to failed with error: %d
<<<< AVPlayer >>>> %s: Posting AVPlayerRateDidChangeNotification for status change
<<<< AVPlayer >>>> %s: called on <%@>. Setting attributes on decoder to:
<%@>
<<<< AVPlayer >>>> %s: %@ called (self = %p, new current item = %@)
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ updating current item from %{public}@ to %{public}@
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ will willChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ did willChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: %{public}@ setting timeControlStatus=%d, reasonForWaitingToPlay=%{public}@
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ will didChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ did didChange AVPlayer.currentItem
<<<< AVPlayer >>>> %s: dispatching call to -_applyPlayQueueChangesToFigPlayerWithCompletionHandler: (self=%p)
<<<< AVPlayer >>>> %s: Item <%p> Now ReadyToPlay. Reevaluting if okay to play while transition to background.
<<<< AVPlayer >>>> %s: Item <%p> Reevalution complete. Not okay to play while transition to background. Pausing.
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called
<<<< AVPlayer >>>> %s: The FigPlaybackItem that posted ItemBecameCurrent has already been removed from the queue; fall back to identifying the current item using FigPlayerCopyPlayQueueItem
<<<< AVPlayer >>>> %s: Handling removal of item %@ (self = %@)
<<<< AVPlayer >>>> %s: %@ New current item: %@ %@ (self = %@)
<<<< AVPlayer >>>> %s: removed current item, now have %@
<<<< AVPlayer >>>> %s: %@ called (self = %@)
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called with %{public}@ (afterItem = %{public}@)
<<<< AVPlayer >>>> %s: now have %@
<<<< AVPlayer >>>> %s: Error inserting item: %@
<<<< AVPlayer >>>> %s: Surrogate player enabled = %d
<<<< AVPlayer >>>> %s: Creating instance of %s
<<<< AVPlayer >>>> %s: Coordinator player disabled
<<<< AVPlayer >>>> %s: %@ called (self=%p)
<<<< AVPlayer >>>> %s: %@ Dispatching FigPlayer copy property block (self=%p) to a background queue if necessary
<<<< AVPlayer >>>> %s: Dispatching FigPlayer configuration block (self=%p) to state dispatch queue
<<<< AVPlayer >>>> %s: %@ Will update status (self=%p)
<<<< AVPlayer >>>> %s: %@ setting up FigPlayer <%p>
<<<< AVPlayer >>>> %s: underlying FigPlayer did not implement SetRateWithOptions. Fall back to SetRateWithFade
<<<< AVPlayer >>>> %s: underlying FigPlayer did neither implement SetRateWithOptions nor SetRateWithFade. Fall back to SetRate
<<<< AVPlayer >>>> %s: %@ (self=%p) attach video layers _hostApplicationInForeground %@ _hasForegroundLayers %@ _isVideoPlaybackAllowedWhileInBackground %@ _hasAssociatedAVPlayerLayerInPIPMode %@
<<<< AVPlayer >>>> %s: %@ (self=%p) skip attach video layers _hostApplicationInForeground %d _hasForegroundLayers %d _isVideoPlaybackAllowedWhileInBackground %d _hasAssociatedAVPlayerLayerInPIPMode %d
<<<< AVPlayer >>>> %s: Failed adding playback item of %@ to play queue immediately (self = %@), will remove item
<<<< AVPlayer >>>> %s: figplayer creation failed [%d]
<<<< AVPlayer >>>> %s: %@ Did update status to %d (self=%p)
<<<< AVPlayer >>>> %s: setExpectedAssetTypes %@
<<<< AVPlayer >>>> %s: sawFileType = %d, sawStreamingType = %d
<<<< AVPlayer >>>> %s: currentItem KVO: %{public}@ called with %{public}@
<<<< AVPlayer >>>> %s: %@ removed %@ %@, now have %@
<<<< AVPlayer >>>> %s: Error replacing current item: %@
<<<< AVPlayer >>>> %s: %@ called. Rate changed from [%f] -> [%f], changed because %s
<<<< AVPlayer >>>> %s: %{public}@ skipping setting new rate on FigPlayer because another rate change has intervened
<<<< AVPlayer >>>> %s: Posting AVPlayerRateDidChangeNotification with payload %@
<<<< AVPlayer >>>> %s: %@ called. set to [%f]
<<<< AVPlayer >>>> %s: %@ _setUsesLegacyAutomaticWaitingBehavior: %s
<<<< AVPlayer >>>> %s: seekToDate called without any attached item
<<<< AVPlayer >>>> %s: seekToTime called without any attached item
<<<< AVPlayer >>>> %s: Obtaining volume for category [%@]
<<<< AVPlayer >>>> %s: %@ setting to %d
<<<< AVPlayer >>>> %s: %@ setting from %d to %d
<<<< AVPlayer >>>> %s: setting to %@
<<<< AVPlayer >>>> %s: Unrecognized player role %@
<<<< AVPlayer >>>> %s: Player role %@ set synchronously before we had a fig player.
<<<< AVPlayer >>>> %s: %@ Trying to set picker id : %@
<<<< AVPlayer >>>> %s: No figPlayer found, cannot set picker id
<<<< AVPlayer >>>> %s: %@ SDK check skipped, using rate 1.0
<<<< AVPlayer >>>> %s: %@ called (self = <%p>, time observer = <%p>)
<<<< AVPlayer >>>> %s: closedCaptionLayers array snapshot:%@
<<<< AVPlayer >>>> %s: videoLayers array snapshot:%@
<<<< AVPlayer >>>> %s: %@ dispatching (self = %p)
<<<< AVPlayer >>>> %s: %@ maximumLayerDisplaySize = %@ (self = %p)
<<<< AVPlayer >>>> %s: %@ (self = %p)
<<<< AVPlayer >>>> %s: %{public}@ failed to copy currently displayed pixel buffer w/ err %d
<<<< AVPlayer >>>> %s: %@ failed to copy currently displayed pixel buffer although no error
<<<< AVPlayer >>>> %s: %@ cannot copy displayed pixel buffer, figPlayer is NULL
<<<< AVPlayer >>>> %s: %{public}@ cannot copy displayed pixel buffer while player's rate is non-zero
<<<< AVPlayer >>>> %s: %@ attached video layer array with %lu layers on FigPlayer
<<<< AVPlayer >>>> %s: %@ detached video layer array from FigPlayer
<<<< AVPlayer >>>> %s: %@ (self=%p) _detachVideoLayersFromFigPlayer _hostApplicationInForeground %@ _hasForegroundLayers %@ _isVideoPlaybackAllowedWhileInBackground %@ _hasAssociatedAVPlayerLayerInPIPMode %@
<<<< AVPlayer >>>> %s: %@ AVPlayerLayer(%p) and its closedCaptionLayer(%p)
<<<< AVPlayer >>>> %s: %@ AVPlayerLayer(%p) is adding videoLayer(%p), closedCaptionLayer(%p), and subtitleLayer(%p) sublayers
<<<< AVPlayer >>>> %s: %@ updating video layers due to adding layer %p (self=%@)
<<<< AVPlayer >>>> %s: %@ (self=%p) not updating video layers _hostApplicationInForeground %@ _hasForegroundLayers %@ _isVideoPlaybackAllowedWhileInBackground %@ _hasAssociatedAVPlayerLayerInPIPMode %@
<<<< AVPlayer >>>> %s: %@ not updating video layers, despite adding layer %p (self=%@)
<<<< AVPlayer >>>> %s: Posting AVPlayerAudiovisualBackgroundPlaybackPolicyDidChangeNotification for policy change
<<<< AVPlayer >>>> %s: Posting AVPlayerAvailableHDRModesDidChangeNotification
<<<< AVPlayer >>>> %s: Posting AVPlayerEligibleForHDRPlaybackDidChangeNotification
<<<< AVPlayer >>>> %s: availableHDRModes returning %d
<<<< AVPlayer >>>> %s: Returning hasAVPlayerLayerInPIPMode: %s
<<<< AVPlayer >>>> %s: Found non-LCD CAContext so externally displayed
<<<< AVPlayer >>>> %s: isExternalPlaybackActive is YES
<<<< AVPlayer >>>> %s: Not suspended under lock
<<<< AVPlayer >>>> %s: Player <%@ %@> audiovisual background policy set to ContinuesIfPossible
<<<< AVPlayer >>>> %s: Player <%@ %@> audiovisual background policy set to Automatic, use coordinator other participant count %d to decide
<<<< AVPlayer >>>> %s: Player <%@ %@> audiovisual background policy set to Pauses
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ No associated video layers ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ MMP SPI says so ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as an associated AVPlayerLayer is in PIP mode
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ CarPlay is active ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ Under device lock and playing to external display ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ IAP extended mode is active ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ policy set to %d ] 
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background reason: [ No enabled video ]
<<<< AVPlayer >>>> %s: Item <%@ %@> can continue to play with Player <%@ %@> as the application transitions to background: %d
<<<< AVPlayer >>>> %s: %@ PIP mode is active
<<<< AVPlayer >>>> %s: %@ Under device lock and has external display active
<<<< AVPlayer >>>> %s: %@ Extended mode is active
<<<< AVPlayer >>>> %s: %@ Host application is in foreground with foreground layers
<<<< AVPlayer >>>> %s: %@ Should Detach: [%@]
<<<< AVPlayer >>>> %s: %@ has no more foreground layers left, detaching video layers
<<<< AVPlayer >>>> %s: %@ has foreground layers, attaching video layers
<<<< AVPlayer >>>> %s: %@ failed to take background assertion with err %@
<<<< AVPlayer >>>> %s: %@ got background assertion
<<<< AVPlayer >>>> %s: called
<<<< AVPlayer >>>> %s: scheduling _didFinishSuspension block
<<<< AVPlayer >>>> %s: synthesizing _didFinishSuspension notification
<<<< AVPlayer >>>> %s: skipping _didFinishSuspension
<<<< AVPlayer >>>> %s: %@ releasing background assertion
<<<< AVPlayer >>>> %s: %@ (self=%p) Pausing item since cannot transition to background _hostApplicationInForeground %d _hasForegroundLayers %d _isVideoPlaybackAllowedWhileInBackground %d
<<<< AVPlayer >>>> %s: Item <%@ %p> Pausing since cannot transition to background
<<<< AVPlayer >>>> %s: Item <%@ %p> Unable to evaluate if okay to play while transition to background. Will reevaluate when ReadyToPlay
<<<< AVPlayer >>>> %s: %@ (self=%p) issue _detachVideoLayersFromFigPlayer _hostApplicationInForeground %d _hasForegroundLayers %d _isVideoPlaybackAllowedWhileInBackground %d, _hasAssociatedAVPlayerLayerInPIPMode %d
<<<< AVPlayer >>>> %s: %@ (self=%p) skip _detachVideoLayersFromFigPlayer  _hostApplicationInForeground %d _hasForegroundLayers %d _isVideoPlaybackAllowedWhileInBackground %d _hasAssociatedAVPlayerLayerInPIPMode %d
<<<< AVPlayer >>>> %s: video layers are still attached
<<<< AVPlayer >>>> %s: %@: isConnectedToPhysicalSecondScreen changed %d
<<<< AVPlayer >>>> %s: %@ called. Set rate to 1.0 because %s
<<<< AVPlayer >>>> %s: Posting AVPlayerBackgroundPIPAuthorizationTokenDidChangeNotification for token change
<<<< AVPlayer >>>> %s: AVPlayer %@ setShouldWaitForVideoTarget to %d
<<<< AVPlayer >>>> %s: Directly set kFigPlayerProperty_ShouldWaitForVideoTarget on FigPlayer %@
<<<< AVPlayer >>>> %s: Set ShouldWaitForVideoTarget as creation option or right after creation of player %@
<<<< AVPlayer >>>> %s: Posting AVPlayerInterstitialPlayerDidChangeNotification
<<<< AVPlayer >>>> %s: current event %@ %f
<<<< AVPlayer >>>> %s: %@ current interstitial event %@
<<<< AVPlayer >>>> %s: %@ NULL FigPlayerInterstitialCoordinator
<<<< AVPlayer >>>> %s: replaced local interstitialEventCoordinator %p with remote %p
<<<< AVPlayer >>>> %s: fig playback coordinator already connected clientRequested
<<<< AVPlayer >>>> %s: connect fig playback coordinator
<<<< AVPlayer >>>> %s: %@ setting rate to %f
<<<< AVPlayer >>>> %s: %@ called. oldReason %@ newReason %@ for timeControlStatus %d to %d
<<<< AVPlayer >>>> %s: %@ kFigPlayerProperty_PlaybackState is %@
<<<< AVPlayer >>>> %s: %@ inferred time control status: %d (waiting reason: %@)
<<<< AVPlayer >>>> %s: called (asset=%p)
<<<< AVPlayer >>>> %s: %@ called (self = %@, inNotificationName = %@, inNotificationPayload = %@)
<<<< AVPlayer >>>> %s: %@ dispatched (self = %@, inNotificationName = %@)
<<<< AVPlayer >>>> %s: %{public}@ no change to timeControlStatus or reasonForWaitingToPlay
<<<< AVPlayer >>>> %s: %@ called (self = %@, inNotificationName = %@)
<<<< AVPlayer >>>> %s: Posting _AVPlayer_VolumeDidChangeNotification with payload %@
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_MutedDidChange (self = %@ value [%d])
<<<< AVPlayer >>>> %s: Posting AVPlayerCurrentItemDidChangeNotification with reason %@
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_CurrentItemDidChange (self = %@, FigPlaybackItem = %p
<<<< AVPlayer >>>> %s: %@ kFigPlayerNotification_CurrentItemDidChange due to AddTo/RemoveFrom-PlayQueue. No need to advance current item to match Fig
<<<< AVPlayer >>>> %s: %@ player <%p> failed to create fig sub item (error: %@)
<<<< AVPlayer >>>> %s: %@ received %@ (payload: %@)
<<<< AVPlayer >>>> %s: Posting AVPlayerPlaybackWasInterruptedNotification
<<<< AVPlayer >>>> %s: Posting AVPlayerItemOverlappedPlaybackDidCompleteNotification
<<<< AVPlayer >>>> %s: Received updated %@. Rate changed from [%f] -> [%f], changed because %s
<<<< AVPlayer >>>> %s: %@ called (self = %@, notification = %@)
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: iapd extended mode has changed. Conditions to maintain videoLayer->figPlayer don't hold. Detaching.
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: iapd extended mode has changed. Conditions to maintain videoLayer->figPlayer do hold. Attaching.
<<<< AVPlayer >>>> %s: %@ AVPlayer <%p>: has no layers or no figPlayer. Nothing to attach/detach for iapd
<<<< AVUXMDisplayManager >>>> %s: <%p> preferredDisplayCriteria set to %p
<<<< AVSampleBufferAudioRenderer >>>> %s: adding notification listener to %p with listener %p
<<<< AVSampleBufferAudioRenderer >>>> %s: removing notification listener to %p with listener %p
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] found contextUUID : %@
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] setting routing context id : %@
<<<< AVSampleBufferAudioRenderer >>>> %s: called
<<<< AVSampleBufferAudioRenderer >>>> %s: Failed to create FigSampleBufferAudioRenderer: %@
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] created
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p]
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] Transitioning to status: %d
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %@
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %lu
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %1.3f
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %d
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] trying to add to a synchronizer (%p) when we already are added to a synchronizer (%p).
<<<< AVSampleBufferAudioRenderer >>>> %s: [%p] called: %p
<<<< AVAssetWriterInputMetadataAdaptor >>>> %s: Unrecognized asset writer status %d
<<<< AVPlayerItem >>>> %s: %@ AVPlayerItem <%p> created with asset at URL [%@], automatically loaded asset keys %@
<<<< AVPlayerItem >>>> %s: currentItem KVO: called
<<<< AVPlayerItem >>>> %s: currentItem KVO: %{public}@
<<<< AVPlayerItem >>>> %s: %@ Requesting automatic loading of FigAsset properties %@
<<<< AVPlayerItem >>>> %s: %@ Requesting automatic loading of FigAssetTrack properties %@
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSeekToDate() failed for initial date
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSetProperty() failed witih %d for initial estimated date
<<<< AVPlayerItem >>>> %s: %@ called (self = %p) attaching player %p weak ref %p
<<<< AVPlayerItem >>>> %s: %@ item (self = %p) already attached to a different player, new weak ref %p old weak ref %p
<<<< AVPlayerItem >>>> %s: %@ item (self = %p) already attached to same player, new weak ref %p old weak ref %p
<<<< AVPlayerItem >>>> %s: We have neither a FigAsset, URL, nor FigFormatReader, so cannot create a FigPlaybackItem
<<<< AVPlayerItem >>>> %s: %@ called (self = %p)
<<<< AVPlayerItem >>>> %s: %@ Adding playback item of %p to play queue immediately (player = %@)
<<<< AVPlayerItem >>>> %s: %@ item <%p> status changing to AVPlayerItemStatusFailed with error %@
<<<< AVPlayerItem >>>> %s: %@ Item <%p> is fetching TrackIDArray
<<<< AVPlayerItem >>>> %s: %@ called (self = %p) to invoke %d handlers
<<<< AVPlayerItem >>>> %s: %@ basics already ready
<<<< AVPlayerItem >>>> %s: %@ initialSamples already ready
<<<< AVPlayerItem >>>> %s: %@ CPEProtector already ready
<<<< AVPlayerItem >>>> %s: Either everything necessary is already ready, or making it all ready has failed
<<<< AVPlayerItem >>>> %s: Copying completion handler for later invocation in response to readiness notifications
<<<< AVPlayerItem >>>> %s: %@ Item <%p> is fetching its dimensions
<<<< AVPlayerItem >>>> %s: Invoking completion handler for cancelled seek %d
<<<< AVPlayerItem >>>> %s: Invoking seek completion handler for seek id %d
<<<< AVPlayerItem >>>> %s: Posting %@ for seekID %d
<<<< AVPlayerItem >>>> %s: %@ Item <%p> Seek to time %1.3f with tolerance <%1.3f, %1.3f>
<<<< AVPlayerItem >>>> %s: %@ Using seek ID %d
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItemSeekToDateWithID() failed
<<<< AVPlayerItem >>>> %s: *** Called from the wrong queue%@.  Break on AVPotentialRaceCondition() to debug ***
<<<< AVPlayerItem >>>> %s: can't create looping timebase! item will not loop.
<<<< AVPlayerItem >>>> %s: Unknown AVAudioMixEffectParameters type.
<<<< AVPlayerItem >>>> %s: %@ setting video composition instructions to %@
<<<< AVPlayerItem >>>> %s: Neither applied nor cached media option. Selection will be discarded.
<<<< AVPlayerItem >>>> %s: %@ called (self=%p, option=%@, group=%@)
<<<< AVPlayerItem >>>> %s: %@ <%p> with asset <%p> called for media selection option %@ in group %@
<<<< AVPlayerItem >>>> %s: self %{public}@: "%{public}@" in group %{public}@
<<<< AVPlayerItem >>>> %s: %@ <%p> with asset <%p> called for media selection group %@
<<<< AVPlayerItem >>>> %s: self %{public}@: %{public}@
<<<< AVPlayerItem >>>> %s: %@ Item <%p> avoided synchronous FigAsset/FigAssetTrack property fetch while forumlating currentMediaSelection
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemMediaSelectionDidChangeNotification
<<<< AVPlayerItem >>>> %s: %@ <%p> returning %@
<<<< AVPlayerItem >>>> %s: %@ item <%p> updateStatusToReadyToPlay:%d
<<<< AVPlayerItem >>>> %s: %@ item <%p> status changing to AVPlayerItemStatusReadyToPlay
<<<< AVPlayerItem >>>> %s: %@ item <%p> set can and step flags
<<<< AVPlayerItem >>>> %s: %@ item <%p> updateStatusToReadyToPlay:%d complete
<<<< AVPlayerItem >>>> %s: self %@: setting interstitial time ranges to %@
<<<< AVPlayerItem >>>> %s: self %{public}@: setting coordination identifier to %{public}@
<<<< AVPlayerItem >>>> %s: Not calling FigPlayerAddToPlayQueue because item's status is the failure status (item = %@ %@, previous item = %@ %@, FigPlaybackItem = %p)
<<<< AVPlayerItem >>>> %s: Calling FigPlayerAddToPlayQueue (item = %@ %@, previous item = %@ %@, FigPlaybackItem = %p)
<<<< AVPlayerItem >>>> %s: Failed to set kFigPlaybackItemProperty_MetadataOutputsDictionary
<<<< AVPlayerItem >>>> %s: Video Enhancement mode is not valid
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimeJumpedNotification
<<<< AVPlayerItem >>>> %s: %@ item <%p> ready for inspection of %@
<<<< AVPlayerItem >>>> %s: %@ item <%p> ready for playback
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimebaseChangedNotification
<<<< AVPlayerItem >>>> %s: %@ item <%p> failed to become ready for %@ (error: %@)
<<<< AVPlayerItem >>>> %s: %@ item <%p> failed to create fig sub item (error: %@)
<<<< AVPlayerItem >>>> %s: %@ NewRecommendedTimeOffsetFromLive: %@
<<<< AVPlayerItem >>>> %s: %@ stream likely to keep up: YES
<<<< AVPlayerItem >>>> %s: %@ stream likely to keep up: NO
<<<< AVPlayerItem >>>> %s: %@ stream buffer empty: YES
<<<< AVPlayerItem >>>> %s: %@ stream buffer full: YES
<<<< AVPlayerItem >>>> %s: %@ playback stalled
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemPlaybackStalledNotification
<<<< AVPlayerItem >>>> %s: %@ seekable ranges changed
<<<< AVPlayerItem >>>> %s: %@ playback buffer Full: NO
<<<< AVPlayerItem >>>> %s: %@ playback buffer empty: NO
<<<< AVPlayerItem >>>> %s: %@ loaded ranges changed
<<<< AVPlayerItem >>>> %s: %@ dimensions changed to %@
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemDidPlayToEndTimeNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemFailedToPlayToEndTimeNotification with error %@
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemNewAccessLogEntryNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemNewErrorLogEntryNotification
<<<< AVPlayerItem >>>> %s: Posting AVPlayerItemTimeJumpedNotification for seek with originator
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> became the FigPlayer's current item
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> stopped being the FigPlayer's current item
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> was removed from the FigPlayer's item queue
<<<< AVPlayerItem >>>> %s: %@ alternate stream changed
<<<< AVPlayerItem >>>> %s: %@ Chosen tracks changed
<<<< AVPlayerItem >>>> %s: %@ Display non-forced subtitles changed
<<<< AVPlayerItem >>>> %s: %@ ExternalProtectionRequiredForPlayback changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasEnabledAudio changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasEnabledVideo changed
<<<< AVPlayerItem >>>> %s: %@ item <%p> hasVideo changed to YES
<<<< AVPlayerItem >>>> %s: %@ item selected media options changed
<<<< AVPlayerItem >>>> %s: %@ CurrentSelectedMediaArray not in payload or nil.
<<<< AVPlayerItem >>>> %s: %@ item <%p> SpatialAudioRenderingChange: default, no payload
<<<< AVPlayerItem >>>> %s: %@ item <%p> SpatialAudioRenderingChange: %@
<<<< AVPlayerItem >>>> %s: %@ item <%p> AllowedSpatialization changed
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> reached timeToPauseBuffering
<<<< AVPlayerItem >>>> %s: %@ FigPlaybackItem <%p> reached timeToPausePlayback
<<<< AVPlayerItemTrack >>>> %s: <rdar://100445728> CurrentVideoFrameRate type is not CFNumberRef, value = {%@}
<<<< AVPlayerItemTrack >>>> %s: attached output %@ with extractionID %d
<<<< AVPlayerItemTrack >>>> %s: removed output %@
<<<< AVQueuePlayer >>>> %s: called (self = %@, item = %@, afterItem = %@
<<<< AVQueuePlayer >>>> %s: called (self = %@, item = %@)
<<<< AVQueuePlayer >>>> %s: called (self = %@)
<<<< AVQueuePlayer >>>> %s: %p %@. NO since action-at-end is NOT advance
<<<< AVQueuePlayer >>>> %s: %p %@. NO since AirPlay Video is active
<<<< AVQueuePlayer >>>> %s: %p %@. NO since one of items is HLS
<<<< AVQueuePlayer >>>> %s: %p %@. NO since one of items doesn't have 1 track
<<<< AVQueuePlayer >>>> %s: %p %@. NO since one of items doesn't have audio track
<<<< AVLoggingIdentifier >>>> %s: nil specifiedName
<<<< AVLoggingIdentifier >>>> %s: Identifier string is %@
<<<< AVComposition >>>> %s: [%p] called
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p asset: %p timeRange.start: %.3f timeRange.duration: %.3f startTime: %.3f
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p timeRange.start: %.3f timeRange.duration: %.3f
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p timeRange.start: %.3f timeRange.duration: %.3f duration: %.3f
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p mediaType: %@ preferredTrackID: %d
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p track: %p trackID: %d
<<<< AVComposition >>>> %s: [%p] called mutableComposition: %p track: %p trackAssetURL: %@ trackID: %d
<<<< AVComposition >>>> %s: AVAsset with nil _absoluteURL and NULL _mutableComposition
<<<< AVPlayerItemMetadataOutput >>>> %s: metadata output flushed
<<<< AVPlayerItemMetadataOutput >>>> %s: Notifying delegate of a flush
<<<< AVPlayerItemMetadataOutput >>>> %s: Invoking metadata delegate %p with %@ dictionary from %@ item track
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVCompositionTrack.m %s: [%p] called
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d track: %p timeRange.start: %.3f timeRange.duration: %.3f startTime: %.3f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d timeRange.start: %.3f timeRange.duration: %.3f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVCompositionTrack.m %s: [%p] called mutableComposition: %p destTrackID: %d timeRange.start: %.3f timeRange.duration: %.3f duration: %.3f
<<<< AVPubSub >>>> %s: Adding observer for %@ in %@
<<<< AVPubSub >>>> %s: Notification observer calling callback in %@
<<<< AVPubSub >>>> %s:  called for %@
<<<< AVPubSub >>>> %s: Removing observer in %@
<<<< AVPubSub >>>> %s: Calling subscriber block because %@ fired for %@
<<<< AVPubSub >>>> %s: Calling subscriber block with initial value for %@
<<<< AVPubSub >>>> %s: Calling subscriber block for %@
<<<< AVPubSub >>>> %s: Calling subscriber block from output publisher for %@
<<<< AVPubSub >>>> %s: Not publishing stale value to subscriber block for %@
<<<< AVPubSub >>>> %s: Calling subscriber block with nil publisher for %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVMovieTrack.m %s: FigCreate3x3MatrixArrayFromCGAffineTransform returned a NULL matrix.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVMovieTrack.m %s: Layer value passed to setLayer: is too large.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVMovieTrack.m %s: CFNumberCreate returned a NULL number.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVMovieTrack.m %s: Alternate group ID value passed to setAlternateGroupID: is too large.
<<<< AVAssetReaderOutput >>>> %s: FigAssetReaderExtractAndRetainNextSampleBuffer returned %d, extractionComplete=%d, sampleBuffer=%p, self=%p
<<<< AVAssetReaderOutput >>>> %s: %p received %@, extractionID=%d
<<<< AVAssetReaderOutput >>>> %s: %p received %@
<<<< AVAssetWriter >>>> %s: called (self=%p)
<<<< AVAssetWriter >>>> %s: invalid file extension in outputURL
<<<< AVAssetWriter >>>> %s: -[NSFileManager removeItemAtURL:] failed: %s
<<<< AVAssetWriter >>>> %s: Calling FigAssetWriterFinish
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinish failed: %d
<<<< AVAssetWriter >>>> %s: calling completion handler
<<<< AVAssetWriter >>>> %s: Invalidating FigAssetWriter, to ensure that audio files are finalized properly
<<<< AVAssetWriter >>>> %s: "Transition to terminal status" operation invoked
<<<< AVAssetWriter >>>> %s: calling FigAssetWriterFinishAsync (self=%p)
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinishAsync showed cancellation (self=%p)
<<<< AVAssetWriter >>>> %s: FigAssetWriterFinishAsync failed: %d
<<<< AVAssetWriter >>>> %s: called, self=%p
<<<< AVAssetWriter >>>> %s: Unexpected terminal status %d
<<<< AVAssetWriter >>>> %s: called, success=%d, error=%@ (self=%p)
<<<< AVAssetWriter >>>> %s: called with payload %@
<<<< AVPlaybackCoordinator >>>> %s: Could not create FigTimelineCoordinatorSuspensionRef
<<<< AVPlaybackCoordinator >>>> %s: called (self = %@, for SuspensionReasonsChanged notification, with payload = %@)
<<<< AVPlaybackCoordinator >>>> %s: called (self = %@, for ParticipantsChanged notification, with payload = %@)
<<<< AVPlaybackCoordinator >>>> %s: called (self = %@, for DidIssueCommandToFigPlayer notification, with payload = %@)
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) replacing participant states.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator updating %d control states.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) updating timeline state.
<<<< AVPlaybackCoordinator >>>> %s: Posting AVPlaybackCoordinatorItemIdentifierForCoordinatedPlaybackDidChangeNotification in response to delegate change
<<<< AVPlaybackCoordinator >>>> %s: %@ Setting IsExpanseMediaSession %s on AVAudioSession error %@
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator gave a participantID which is not present in otherParticipants
<<<< AVPlaybackCoordinator >>>> %s: <%p> setting coordinationMediumDelegate:%p on playback coordinator with UUID %@
<<<< AVPlaybackCoordinator >>>> %s: <%p> setting coordinationMediumDelegate:%p on playback coordinator, but NULL figPlaybackCoordinator
<<<< AVPlaybackCoordinator >>>> %s: States aren't distinguishable. Assuming state from the outside is better.
<<<< AVPlaybackCoordinator >>>> %s: States aren't distinguishable. Assuming existing state is better for %{public}@.
<<<< AVPlaybackCoordinator >>>> %s: Ignoring stale state for %{public}@
<<<< AVPlaybackCoordinator >>>> %s: %{public}@ updating transport control state cache for item identifier %@
<<<< AVPlaybackCoordinator >>>> %s: %{public}@ skipping updating transport control state cache since the lamport timestamp for the update is older or the update is not authoritative
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling new control state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle new control state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling new participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle new participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator returned error (%d) handling replacement participant state.
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator is NULL when trying to handle replacement participant state.
<<<< AVPlaybackCoordinator >>>> %s: <%p> beginning suspension with reason %@
<<<< AVPlaybackCoordinator >>>> %s: <%p> ending suspension %p
<<<< AVPlaybackCoordinator >>>> %s: <%p> ending suspension %p proposing new time %f
<<<< AVPlaybackCoordinator >>>> %s: <%p> setting waiting policies %@ on playback coordinator
<<<< AVPlaybackCoordinator >>>> %s: <%p> setting pauseSnapsToMediaTimeOfOrginator:%@ on playback coordinator
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to broadcast transport state but coordination medium delegate is nil
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to broadcast participant state but coordination medium delegate is nil
<<<< AVPlaybackCoordinator >>>> %s: FigPlaybackCoordinator trying to fetch timeline state but coordination medium delegate is nil.  Clearing delegate and calling completion handler.
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (self=%p, delegate=%@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Calling -outputDeviceAuthorizationSession:didProvideAuthorizationRequest: on delegate (request/ID=%{public}@, request/outputDevice=%{private}@, request/authorizationTokenType=%{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Not messaging delegate because there is no delegate or it does not respond to -outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Calling -outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason: on delegate (request/ID=%{public}@, reason=%{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Not messaging delegate because there is no delegate or it does not respond to -outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
<<<< AVOutputDeviceAuthorizationSession >>>> %s: self=%p, impl=%@, replacementImpl=%@
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called (authorizationToken=%{private}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: Result: %d (error: %{public}@)
<<<< AVOutputDeviceAuthorizationSession >>>> %s: called
<<<< AVAssetWriterInput >>>> %s: called, old=%@ new=%@
<<<< AVAssetWriterInput >>>> %s: called, self=%p
<<<< AVAssetWriterInput >>>> %s: called (self=%p, queue=%p, block=%p)
<<<< AVAssetWriterInput >>>> %s: Informing pass description responder to respond to initial pass description
<<<< AVAssetWriterInput >>>> %s: Not responding to initial pass description, per helper %@
<<<< AVAssetWriterInput >>>> %s: called (self=%p)
<<<< AVAssetWriterInput >>>> %s: Client will see -appendSampleBuffer: fail with error %@
<<<< AVAssetWriterInput >>>> %s: called (keyPath=%@, object=%@, change=%@, contect=%p)
<<<< AVAssetWriterInput >>>> %s: called (self = %p)
<<<< AVAssetWriterInput >>>> %s: Client will see -appendPixelBuffer: fail with error %@
<<<< AVAssetWriterInput >>>> %s: Transitioning to terminal status %d (self = %p)
<<<< AVAssetWriterInput >>>> %s: Dispatching request block one extra time, to make sure client sees the failure
<<<< AVAssetWriterInput >>>> %s: end pass operation succeeded, nextPassDescription=%@
<<<< AVAssetWriterInput >>>> %s: Client will see -appendSampleBuffer: return NO due to input already having transitioned to terminal status
<<<< AVAssetWriterInput >>>> %s: Client will see -appendPixelBuffer: return NO due to input already having transitioned to terminal status
<<<< AVAssetWriterInput >>>> %s: FigAssetWriterIsTrackQueueAboveHighWaterLevel returned %d (self=%p)
<<<< AVAssetWriterInput >>>> %s: setting kFigFormatWriterTrackProperty_FormatDescriptionArray to %@
<<<< AVAssetWriterInput >>>> %s: Invoking request block normally
<<<< AVAssetWriterInput >>>> %s: Client exited request block
<<<< AVAssetWriterInput >>>> %s: Dispatching request block because previous request block invocation returned before filling the buffer queue or marking input finished (delegate = %@)
<<<< AVAssetWriterInput >>>> %s: We thought we might want to invoke the request block, but we are not actually going to
<<<< AVAssetWriterInput >>>> %s: will invoke per-pass block (self=%p)
<<<< AVAssetWriterInput >>>> %s: did invoke per-pass block (self=%p)
<<<< AVAssetWriterInput >>>> %s: registering for kFigAssetWriterNotification_PassFinished on FigAssetWriter %p
<<<< AVAssetWriterInput >>>> %s: Calling FigAssetWriterEndPass
<<<< AVAssetWriterInput >>>> %s: called (self=%p, trackID=%d)
<<<< AVAssetWriterInput >>>> %s: unregistering from kFigAssetWriterNotification_PassFinished
<<<< AVAssetWriterInput >>>> %s: Received kFigAssetWriterNotification_PassFinished
<<<< AVVideoComposition >>>> %s: dictionaryRepresentation only accepts RGB color space for backgroundColor
<<<< AVVideoComposition >>>> %s: Using video compositor: %@
<<<< AVVideoComposition >>>> %s: Unknown video compositor name for FigRemaker: %@
<<<< AVAssetExportSession >>>> %s: no asset, no presetName, or no export settings => nil: asset=%@, presetName=%@
<<<< AVAssetExportSession >>>> %s: no export session => nil
<<<< AVAssetExportSession >>>> %s: Could not create fig export session. err=%d
<<<< AVAssetExportSession >>>> %s: fileLengthLimit: %lld
<<<< AVAssetExportSession >>>> %s: maximize power efficiency %s
<<<< AVStreamDataParser >>>> %s: init
<<<< AVStreamDataParser >>>> %s: AVStreamDataParser is not allowed under current configuration
<<<< AVStreamDataParser >>>> %s: dealloc
<<<< AVStreamDataParser >>>> %s: appending stream data (flags 0x%x) %@
<<<< AVStreamDataParser >>>> %s: no manifold, sniffing data to initialize one...
<<<< AVStreamDataParser >>>> %s: sniffing stream data (flags 0x%x) %@
<<<< AVStreamDataParser >>>> %s: changing manifold type not permitted during AVStreamDataParser session
<<<< AVStreamDataParser >>>> %s: created a FigManifold
<<<< AVStreamDataParser >>>> %s: abandoning manifold initialization after %ld bytes (max %ld bytes)
<<<< AVStreamDataParser >>>> %s: need more data to sniff
<<<< AVStreamDataParser >>>> %s: switching manifold
<<<< AVStreamDataParser >>>> %s: providePendingMediaData
<<<< AVStreamDataParser >>>> %s: setShouldProvideMediaData:forTrackId:%d, not providing media for %@
<<<< AVStreamDataParser >>>> %s: new AVStreamDataAsset using manifold's FigAsset
<<<< AVStreamDataParser >>>> %s: new AVStreamDataAsset with tracks %@
<<<< AVStreamDataParser >>>> %s: failed to create CMBlockBuffer for %d bytes with data at %p and offset %d, status = %d
<<<< AVStreamDataParser >>>> %s: manifold sent PTS %1.5f %d bytes, %@/%@, track %d, flags %d
<<<< AVStreamDataParser >>>> %s: rebuilding AVStreamDataAsset because we've not got a CMFormatDescription for trackID %d
<<<< AVStreamDataParser >>>> %s: shouldProvideMediaDataForTrackID said no, ignoring media for trackID %d
<<<< AVStreamDataParser >>>> %s: no asset yet so caching sample buffer (now cached %d bytes, %.3f seconds)
<<<< AVStreamDataParser >>>> %s: rebuilding AVStreamDataAsset because trackID %d ended
<<<< AVStreamDataParser >>>> %s: trackID %ld is using supported encryption
<<<< AVStreamDataParser >>>> %s: Exception when creating default key session: %@
<<<< AVStreamDataParser >>>> %s: trackID %ld is not encrypted or using unsupported encryption. Removing the cached decryptor for this track.
<<<< AVStreamDataParser >>>> %s: rebuilding AVStreamDataAsset because trackID %ld got a new format description
<<<< AVStreamDataParser >>>> %s: trackID %ld got a new format description, remembered for AllNewTracksReady
<<<< AVStreamDataParser >>>> %s: registering for manifold callbacks from trackID %d
<<<< AVStreamDataParser >>>> %s: unregistering for manifold callbacks from trackID %d
<<<< AVStreamDataParser >>>> %s: manifold all new tracks ready, building inspection-only asset
<<<< AVStreamDataParser >>>> %s: rebuilding AVStreamDataAsset with additional trackID %d
<<<< AVStreamDataParser >>>> %s: manifold discovered trackID %ld, mediaType %@, remembered for AllNewTracksReady
<<<< AVStreamDataParser >>>> %s: need delegate to implement streamDataParser:didProvideContentKeyRequestInitializationData:forTrackID:
<<<< AVStreamDataParser >>>> %s: Expected NSData sinf, ignoring unexpected "%@"
<<<< AVStreamDataParser >>>> %s: Expected NSData or NSArray, ignoring unexpected "%@"
<<<< AVStreamDataParser >>>> %s: manifold error %d, track %d, %@
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (self=%p)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: initialized (self=%p)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (self=%p, options=%@, completionHandler=%p)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Calling APSyncControllerOpenSpeakerCommChannel (controlType: %d, clientTypeUUID: %@)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: APSyncControllerOpenSpeakerCommChannel finished for comm channel ID %{public}@ (err=%d)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Removing comm channel UUID %@ for device with ID %@
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: No comm channel found for ID %@ for device %@, synthesizing one for the delegate.
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: Sending %d bytes through comm channel ID %{public}@ via APSyncControllerSendSpeakerData
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (syncController=%p, commChannelUUID=%@, cancellationResponse=%@, refCon=%p, err=%d)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (commChannelUUID=%{public}@ dataLength=%d)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: called (commChannelUUID=%{public}@)
<<<< AVOutputDeviceCommunicationChannelManager (APSync) >>>> %s: APSyncControllerSendSpeakerData finished for comm channel ID %{public}@ (err=%d)
<<<< AVOutputDevice >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputDevice >>>> %s: called (enabled=%d)
<<<< AVOutputDevice >>>> %s: setting second display mode to %{public}@...
<<<< AVOutputDevice >>>> %s: ...done setting second display mode (token=%{public}@, error=%{public}@/%d)
<<<< AVOutputDevice >>>> %s: Posting %{public}@
<<<< AVOutputDevice >>>> %s: called (volume=%f)
<<<< AVOutputDevice >>>> %s: called (count=%ld)
<<<< AVOutputDevice >>>> %s: called (allows=%d)
<<<< AVOutputDevice >>>> %s: called (mode=%{public}@)
<<<< AVOutputDevice >>>> %s: called (self=%p, options=%@, completionHandler=%p)
<<<< AVOutputDevice >>>> %s: called (device=%{private}@, dataDestination=%{public}@, cancelIfAuthRequired=%{public}@, correlationID=%{private}@, initiator=%{private}@, controlType=%{public}@)
<<<< AVOutputDevice >>>> %s: Open comm channel completed (err=%d, channel=%p, correlationID=%{private}@)
<<<< AVOutputDevice >>>> %s: No System Remote Pool to add to!
<<<< AVOutputDevice >>>> %s: called (delegate? %d)
<<<< AVOutputDevice >>>> %s: Invoking -outputDevice:didReceiveData:fromCommunicationChannel: with %d bytes
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -outputDevice:didReceiveData:fromCommunicationChannel
<<<< AVOutputDevice >>>> %s: Invoking -outputDevice:didCloseCommunicationChannel:
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -outputDevice:didCloseCommunicationChannel:
<<<< AVOutputDevice >>>> %s: called (cancelIfAuthRequired=%{public}@)
<<<< AVOutputDevice >>>> %s: result=%d, cancellationReason=%{public}@, error=%{public}@
<<<< AVOutputDevice >>>> %s: called
<<<< AVOutputDevice >>>> %s: Ignoring non-date last used timestamp "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: Ignoring non-number frecency score "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: Removing frecents entry for device %{private}@ which previously had an invalid or missing LastUsedTimestamp
<<<< AVOutputDevice >>>> %s: Using frecents file at %{public}@
<<<< AVOutputDevice >>>> %s: Using legacy CFPreferences-based frecents
<<<< AVOutputDevice >>>> %s: Migrating frecents from CFPreferences to %{public}@
<<<< AVOutputDevice >>>> %s: Ignoring failure to read plist from data %{private}@ (%{private}@)
<<<< AVOutputDevice >>>> %s: Ignoring invalid frecents plist "%{private}@"
<<<< AVOutputDevice >>>> %s: Ignoring malformed frecents entry "%{private}@" for device %{private}@
<<<< AVOutputDevice >>>> %s: called (channel=%p, delegate? %d)
<<<< AVOutputDevice >>>> %s: Invoking -communicationChannel:didReceiveData: with %d bytes for channel=%p
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -communicationChannel:didReceiveData: for channel=%p
<<<< AVOutputDevice >>>> %s: Invoking -communicationChannelDidClose: for channel=%p
<<<< AVOutputDevice >>>> %s: Delegate missing or does not implement -communicationChannelDidClose: for channel=%p
<<<< AVUtilities >>>> %s: called (queue=%p, currentQueue=%p, dispatch_get_main_queue()=%p, NSThread isMainThread=%d)
<<<< AVUtilities >>>> %s: running block synchronously
<<<< AVUtilities >>>> %s: dispatching block to queue
<<<< AVUtilities >>>> %s: dispatching to background queue
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVError.m %s: Could not load localized description for %@ %ld (%@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVError.m %s: Could not load localized recovery suggestion or failure reason for %@ %ld (%@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVError.m %s: Could not load localized recovery suggestion for %@ %ld (%@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVError.m %s: Could not load localized failure reason for %@ %ld (%@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVError.m %s: Invalid format string '%@', error %@, %@ %ld (%@)
<<<< AVSampleBufferVideoRenderer >>>> %s: failed to create video queue: %d
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) change status from %d to %d, newError %@
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) reset status from %d to 0
<<<< AVSampleBufferVideoRenderer >>>> %s: output obscured: %d, post notification: %@
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) set _createVideoQueueFailed to %d
<<<< AVSampleBufferVideoRenderer >>>> %s: (%p) Failed to create FigVideoQueue with error %d, moving state to fail state, will attempt re-create after client flushes
<<<< AVSampleBufferVideoRenderer >>>> %s: failed to create AVSampleBufferVideoRender %d
<<<< AVSampleBufferVideoRenderer >>>> %s: AVSampleBufferVideoRender Create [%p, %p]
<<<< AVSampleBufferVideoRenderer >>>> %s: AVSampleBufferVideoRender dealloc [%p, %p]
<<<< AVSampleBufferVideoRenderer >>>> %s: visibility changed: %s, post notification: %@
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p] trying to add to a synchronizer (%p) when we already are added to a synchronizer (%p).
<<<< AVSampleBufferVideoRenderer >>>> %s: UpcomingPTSExpectation is enabled, but enqueuePTS:%.3f is smaller than expectedMinimumUpcomingPTS:%.3f
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p, %p] enqueueFrame failed, returned %d
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p] called, removeDisplayedImage=%s, handler=%p
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p] detected error (%d) or createVideoQueueFailed failed %d. Recreating FigVideoQueue.
<<<< AVSampleBufferVideoRenderer >>>> %s: FigVideoQueueFlush returned %d
<<<< AVSampleBufferVideoRenderer >>>> %s: flush completed but no pending callback block found
<<<< AVSampleBufferVideoRenderer >>>> %s: no pending preroll callback
<<<< AVSampleBufferVideoRenderer >>>> %s: skip stale callback, requestId(%d) != pendingPrerollRequestID (%d)
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p: %p] requestDecodeForPreroll
<<<< AVSampleBufferVideoRenderer >>>> %s: Adding %p
<<<< AVSampleBufferVideoRenderer >>>> %s: Setting %d video targets.
<<<< AVSampleBufferVideoRenderer >>>> %s: Setting display layer %p.
<<<< AVSampleBufferVideoRenderer >>>> %s:  Unable to set expectMinimumUpcomingSampleBufferPresentationTime because minimumUpcomingPresentationTime is not numeric 
<<<< AVSampleBufferVideoRenderer >>>> %s: Adding %p.
<<<< AVSampleBufferVideoRenderer >>>> %s: Removing %p.
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p, %p] failed to copy currently displayed pixel buffer w/ err %d
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p, %p] failed to copy currently displayed pixel buffer although no error
<<<< AVSampleBufferVideoRenderer >>>> %s: failed to copy currently displayed pixel buffer as there is no video queue
<<<< AVSampleBufferVideoRenderer >>>> %s: Received decode error from video queue, %@
<<<< AVSampleBufferVideoRenderer >>>> %s: [%p] handling VideoQueueFailed with error (%d).
<<<< AVOutputDevice (FigEndpoint) >>>> %s: RouteUID %@ or RouteName %@ is nil, can't construct description.
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, figEndpoint=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Endpoint property '%@' not supported
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Endpoint property '%@' has value: %@
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  Only a subset of possible device types can be communicated by FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to discover detailed device subtype for most devices from FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: GAPA feature not enabled
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to get DataOverACL information from FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to get isInEar information from FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Warning: FigEndpoint implementation is only intended for use on macOS.  There is no way to discover connected paired devices from FigEndpoint
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Setting %@ = %@
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Unrecognized mode %@
<<<< AVOutputDevice (FigEndpoint) >>>> %s: setting kFigEndpointProperty_ListeningMode to %d
<<<< AVOutputDevice (FigEndpoint) >>>> %s: calling FigEndpointBorrowScreen (clientName=%{public}@, reason=%{private}@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: calling FigEndpointUnborrowScreen (clientName=%{public}@, reason=%{private}@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, ID=%@, endpointID=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (self=%p, configuratorBlock=%@, options=%@, completionHandler=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: called (endpoint=%@)
<<<< AVOutputDevice (FigEndpoint) >>>> %s: Unrecognized head-tracked spatial audio mode %@
<<<< AVAssetCustomURL >>>> %s: cancelling abandoned AVNSURLProtocolRequest %p
<<<< AVOutputContext >>>> %s: Defaulting to AVOutputContext impl %@
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@)
<<<< AVOutputContext >>>> %s: called (self=%p)
<<<< AVOutputContext >>>> %s: contextID = %@
<<<< AVOutputContext >>>> %s: setting applicationProcessID to %d
<<<< AVOutputContext >>>> %s: outputDevice = %@
<<<< AVOutputContext >>>> %s: called (context=%p, outputDevice=%{private}@, password? %d, cancelIfAuthRequired=%{public}@, suppressUserInteractionOnSenderOnly=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: Result: %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: called (outputDevice=%{private}@, features=%d)
<<<< AVOutputContext >>>> %s: called (outputDevice=%{private}@, password? %d, cancelIfAuthRequired=%{public}@, suppressUserInteractionOnSenderOnly=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called
<<<< AVOutputContext >>>> %s: Posting %{public}@ with destination change %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: Posting %{public}@ with initiator %{public}@ for context=%p
<<<< AVOutputContext >>>> %s: Posting %{public}@)
<<<< AVOutputContext >>>> %s: outputDevices = %@
<<<< AVOutputContext >>>> %s: Posting %{public}@ with initiator %{public}@, reason %{public}@, deviceID %{private}@, and previousDeviceIDs %{private}@ for context=%p
<<<< AVOutputContext >>>> %s: called (devices=%{private}@)
<<<< AVOutputContext >>>> %s: called (context=%p, devices=%{private}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called (context=%p, device=%{private}@, authToken? %d, cancelIfAuthRequired=%{public}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: called (device=%{private}@)
<<<< AVOutputContext >>>> %s: called (context=%p, device=%{private}@, initiator=%{public}@, fadePlayback=%{public}@)
<<<< AVOutputContext >>>> %s: predictedOutputDevice = %@
<<<< AVOutputContext >>>> %s: Posting %{public}@
<<<< AVOutputContext >>>> %s: called (controlType=%{public}@)
<<<< AVOutputContext >>>> %s: called (delegate? %d>)
<<<< AVOutputContext >>>> %s: Invoking -outputContextOutgoingCommunicationChannelDidBecomeAvailable:
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContextOutgoingCommunicationChannelDidBecomeAvailable:
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, data=%@, channel=%@)
<<<< AVOutputContext >>>> %s: Invoking -outputContext:didReceiveData:fromCommunicationChannel: with %d bytes
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContext:didReceiveData:fromCommunicationChannel:
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, channel=%@)
<<<< AVOutputContext >>>> %s: Invoking -outputContext:didCloseCommunicationChannel:
<<<< AVOutputContext >>>> %s: Delegate missing or does not implement -outputContext:didCloseCommunicationChannel:
<<<< AVOutputContext >>>> %s: called (self=%p, impl=%@, replacementImpl=%@)
<<<< AVOutputContext >>>> %s: sending %d bytes
<<<< AVOutputContext >>>> %s: called (self=%p, status=%d)
<<<< AVOutputContext >>>> %s: Posting %{public}@ with outputDevice: %{private}@ failureReason: %{public}@
<<<< AVRunLoopCondition >>>> %s: reached timeout
<<<< AVAssetInspector >>>> %s: %p cannot create AVAssetVariant for %@
<<<< AVOperation >>>> %s: already cancelled (self=%p)
<<<< AVOperation >>>> %s: marking as failed due to previous failure in dependency (self=%@)
<<<< AVOperation >>>> %s: marking as cancelled due to cancellation of dependency (self=%@)
<<<< AVOperation >>>> %s: advancing status from %d to %d (self=%p)
<<<< AVOperation >>>> %s: called (self=%@)
<<<< AVOperation >>>> %s: called (self=%@, error=%@)
<<<< AVOperation >>>> %s: Got unrecognized status %d
<<<< AVOperation >>>> %s: called (self=%p)
<<<< AVOperation >>>> %s: Client block cancelled with status %d (self=%p)
<<<< AVOperation >>>> %s: called (self=%p, name=%@)
<<<< AVOperation >>>> %s: Ignoring attempt to cancel before execution has begun.  The expectation is that the implementation will notice the cancelled state as part of normal execution
<<<< AVOperation >>>> %s: ignoring attempt to move from terminal status %d to status %d
<<<< AVDelegateUtilities >>>> %s: called (newDelegate=%@, newDelegateQueue=%p
<<<< AVDelegateUtilities >>>> %s: called (delegateStorage = %@, expectedDelegateQueue = %p, delegateCallbackBlock = %p)
<<<< AVDelegateUtilities >>>> %s: current delegate: %@, current delegate queue: %p
<<<< AVDelegateUtilities >>>> %s: Invoking delegate callback synchronously
<<<< AVDelegateUtilities >>>> %s: Dispatching to queue %p
<<<< AVAssetInspectorLoader >>>> %s: <%p> FigAssetGetStatusOfValueForProperty for property <%@> returned %d and load error %d - %@
<<<< AVAssetInspectorLoader >>>> %s: <%p> status requested for key %@ after loading was canceled
<<<< AVAssetInspectorLoader >>>> %s: called (self: %p, keys: %{public}@, keysForCollectionKeys: %{public}@, handler: %{public}@)
<<<< AVAssetInspectorLoader >>>> %s: <%p> loadValuesAsynchronouslyForKeys:%@ keysForCollectionKeys:%@ completionHandler:<%p>
<<<< AVAssetInspectorLoader >>>> %s: Calling FigAssetLoadValuesAsyncForProperties for properties %{public}@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: asset batch ID = %ld (err=%d, alreadyLoaded=%d)
<<<< AVAssetInspectorLoader >>>> %s: Calling FigAssetLoadValuesAsyncForTrackProperties for properties %{public}@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: track batch ID = %ld (err=%d, alreadyLoaded=%d)
<<<< AVAssetInspectorLoader >>>> %s: <%p> storing completion handler [%p] for later invocation
<<<< AVAssetInspectorLoader >>>> %s: <%p> storing loading batch [%p] with %@
<<<< AVAssetInspectorLoader >>>> %s: <%p> invoking completion handler [%p] immediately
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: invoking completion handler immediately
<<<< AVAssetInspectorLoader >>>> %s: Been waiting for key "%{public}@" to load since %{public}@.  Current status is %d.  First non-loaded dependency key is "%{public}@"
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: dispatching completion handler%{public}@%{public}@
<<<< AVAssetInspectorLoader >>>> %s: <%p> dispatching completion handler [%p]
<<<< AVAssetInspectorLoader >>>> %s: No completion handler to invoke
<<<< AVAssetInspectorLoader >>>> %s: No completed batches
<<<< AVAssetInspectorLoader >>>> %s: FigAssetCreateWithURL for URL <%@> returned %d
<<<< AVAssetInspectorLoader >>>> %s: <%p> got notification <%@>
<<<< AVAssetInspectorLoader >>>> %s: Received kFigAssetNotification_BatchPropertyLoadComplete (payload: %{public}@)
<<<< AVAssetInspectorLoader >>>> %s: Received %@ from %p (payload: %@)
<<<< AVAssetInspectorLoader >>>> %s: <%p> got notification <%@> for batchID %@
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: Marking asset batch ID %ld as complete
<<<< AVAssetInspectorLoader >>>> %s: <%p> loading batch [%p] has count of %d on entry
<<<< AVAssetInspectorLoader >>>> %s: Batch %p: Marking track batch ID %ld as complete
<<<< AVAssetInspectorLoader >>>> %s: <%p> loading batch [%p] has count of %d on exit with %@
<<<< AVRoutingSessionManager >>>> %s: Using non-FigRoutingSessionManager path
<<<< AVRoutingSessionManager >>>> %s: called
<<<< AVRoutingSessionManager >>>> %s: Returning %@
<<<< AVRoutingSessionManager >>>> %s: called (self=%p)
<<<< AVRoutingSessionManager >>>> %s: returning %@ (self=%p)
<<<< AVRoutingSessionManager >>>> %s: returning %d (self=%p)
<<<< AVRoutingSessionManager >>>> %s: invoking completion handler with error %{public}@
<<<< AVRoutingSessionManager >>>> %s: called (deviceDescriptions=%{private}@)
<<<< AVAssetTrackInspector >>>> %s: Created track inspector of class %@ 
<<<< AVAssetTrackInspector >>>> %s: can't get FigTrackReader; invalid trackID and negative trackIndex
<<<< AVAssetTrackInspector >>>> %s: can't get FigAssetTrack; invalid trackID and negative trackIndex
<<<< AVAssetTrackInspector >>>> %s: FigAssetTrackGetStatusOfValueForProperty for property <%@> returned %d and load error %d - %@
<<<< AVAssetTrackInspector >>>> %s: FigAssetTrackLoadValuesAsyncForProperties for properties %@ returned %d with loaded == %@ and batchID == %d
<<<< AVAssetTrackInspector >>>> %s: storing completion handler [%p] for later invocation
<<<< AVAssetTrackInspector >>>> %s: storing loading batch [%p] with %@
<<<< AVAssetTrackInspector >>>> %s: dispatching completion handler [%p]
<<<< AVAssetTrackInspector >>>> %s: [%p] called
<<<< AVAssetTrackInspector >>>> %s: got notification <%@> for batchID %@
<<<< AVAssetTrackInspector >>>> %s: loading batch [%p] has count of %d on entry
<<<< AVAssetTrackInspector >>>> %s: loading batch [%p] has count of %d on exit with %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/Utilities/AVBundleResources.m %s: AVLocalizedStringFromTableWithLocaleWithBundleIdentifier unable to find a localized string; returning an empty string
<<<< AVCallbackContextRegistry >>>> %s: registering observer %p (token %p), new observer count %d (self=%p)
<<<< AVCallbackContextRegistry >>>> %s: unregistering callback context token %p, new observer count %d (self=%p)
<<<< AVBlockScheduler >>>> %s: Some thread is already running a block with this serializer.  Enqueued this block and letting that thread execute it
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_StartDate must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Duration must be an instance of NSNumber
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_MetadataArray must be an instance of NSArray
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Class must be an instance of NSString
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_ID must be an instance of NSString
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_Cue must be an instance of NSString
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_DiscoveryTimestamp must be an instance of NSDate
<<<< AVTimedMetadataGroup >>>> %s: Value %@ for kFigPlaybackItemTaggedRangeMetadataKey_ModificationTimestamp must be an instance of NSDate
<<<< AVAssetCache >>>> %s: Initialized with URL %@
<<<< AVAssetCache >>>> %s: Set maxSize = %lld
<<<< AVAssetCache >>>> %s: Set maxEntrySize = %lld
<<<< AVAssetCache >>>> %s: Remove entry with key = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: %@ Setting IsExpanseMediaSession %s on AVAudioSession error %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: called (self = %@, for SuspensionReasonsChanged notification, with payload = %@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: called (self = %@, for ParticipantsChanged notification, with payload = %@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: called (self = %@, for DidIssueCommandToTimelineControl notification, with payload = %@)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: Error creating timeline coordinator: %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator gave a participantID which is not present in otherParticipants
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: States aren't distinguishable. Assuming state from the outside is better.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: States aren't distinguishable. Assuming existing state is better for %{public}@.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: Ignoring stale state for %{public}@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: updating transport control state cache for item identifier %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: skipping updating transport control state cache since the lamport timestamp for the update is older or the update is not authoritative
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling new control state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling new participant state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator returned error (%d) handling replacement participant state.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> beginning suspension with reason %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> ending figSuspension %p
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> ending figSuspension %p proposing new time %f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> setting waiting policies %@ on playback coordinator
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: <%p> setting pauseSnapsToMediaTimeOfOrginator:%@ on playback coordinator
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to broadcast timeline state but coordination medium delegate is nil
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to broadcast participant state but coordination medium delegate is nil
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVDelegatingPlaybackCoordinator.m %s: FigTimelineCoordinator trying to reload timeline state but coordination medium delegate is nil.  Clearing delegate and calling completion handler.
<<<< AVExternalPlaybackMonitor >>>> %s: Using non-FigRoutingSessionManager path
<<<< AVExternalPlaybackMonitor >>>> %s: called
<<<< AVExternalPlaybackMonitor >>>> %s: returning %@
<<<< AVExternalPlaybackMonitor >>>> %s: called (self=%p)
<<<< AVExternalPlaybackMonitor >>>> %s: returning %d (self=%p)
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> setActive figPlayer <%p>
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> called with category = %@%@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: audio category set %@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: <%p> called with mode = %@%@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: mode set %@
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: Attempt to attach AVAudioSessionMediaPlayerOnly to AVPlayer <%p> with no FigPlayer
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: set category failed
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: set mode failed
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: Attempt to attach AVAudioSessionMediaPlayerOnly to AVPlayer <%p> when already attached
<<<< AVAudioSessionMediaPlayerOnly >>>> %s: called (self = %@, inNotificationName = %@)
<<<< AVMediaSelectionGroup >>>> %s: *** Could not canonicalize language: %@. ***
<<<< AVMediaSelectionGroup >>>> %s: <%p> called with property list %@
<<<< AVMediaSelectionGroup >>>> %s: <%p> resolved to option %@
<<<< AVMediaSelectionGroup >>>> %s: Invalid format string '%@', error %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/Utilities/AVAudioOutputSettings.m %s: Invalid source format flags - not one of the supported lossless bit depths
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/Utilities/AVAudioOutputSettings.m %s: Need to either provide fully-formed dictionary or source format description
<<<< AVAssetDownloadSession >>>> %s: [%p] Download from %@ to %@
<<<< AVAssetDownloadSession >>>> %s: [%p] FigAssetCreateWithURL for URL <%@> returned %d
<<<< AVAssetDownloadSession >>>> %s: [%p] Called with %lld
<<<< AVAssetDownloadSession >>>> %s: [%p] Called with asset:%@ destinationURL:%@
<<<< AVAssetDownloadSession >>>> %s: Failed to start - %@
<<<< AVAssetDownloadSession >>>> %s: [%p] Pause download
<<<< AVAssetDownloadSession >>>> %s: [%p] Stop download
<<<< AVAssetDownloadSession >>>> %s: %p downloaded %lld / %lld
<<<< AVAssetDownloadSession >>>> %s: [%p] loaded assetType:[%s] loadingStatus:%d error:%@
<<<< AVAssetDownloadSession >>>> %s: [%p] Start download
<<<< AVAssetDownloadSession >>>> %s: [%p] Going from paused to start download
<<<< AVAssetDownloadSession >>>> %s: [%p] Download %s
<<<< AVAssetDownloadSession >>>> %s: [%p] Called
<<<< AVAssetDownloadSession >>>> %s: Failed to prime cache - %@
<<<< AVAssetDownloadSession >>>> %s: [%p] Priming cache with download token %@
<<<< AVAssetDownloadSession >>>> %s: Must initialize AVAssetDownloadSession with initWithAsset:destinationURL:options: for streaming assets.
<<<< AVAssetDownloadSession >>>> %s: [%p] called with notification name %@
<<<< AVAssetDownloadSession >>>> %s: Failed to load property %@ - %@
<<<< AVAssetDownloadSession >>>> %s: Failed to download to destination - %@
<<<< AVAssetDownloadSession >>>> %s: [%p] called with notification name %@ payload %@
<<<< AVAssetDownloadSession >>>> %s: Failed to make ready for inspection - %@
<<<< AVSampleCursor >>>> %s: FigSampleCursorStepByDecodeTime failed (%d)
<<<< AVSampleCursor >>>> %s: FigSampleCursorGetDecodeTimeStamp failed (%d)
<<<< AVSampleCursor >>>> %s: FigSampleCursorStepByPresentationTime failed (%d)
<<<< AVSampleCursor >>>> %s: FigSampleCursorGetPresentationTimeStamp failed (%d)
<<<< AVSampleCursor >>>> %s: FigSampleCursorCreateSampleBuffer failed (%d)
<<<< AVPlayerItemOutput >>>> %s: Unable to convert host time stamp to item time. Client sees kCMTimeInvalid.
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextCreate failed: %d
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextSetImageAvailableSequentialCallback failed: %d
<<<< AVPlayerItemOutput >>>> %s:  Error: requestNotificationOfMediaDataChangeAsSoonAsPossible was valid when requesting requestNotificationOfMediaDataChangeWithAdvanceInterval. requestNotificationOfMediaDataChangeAsSoonAsPossible has been deactivated
<<<< AVPlayerItemOutput >>>> %s: scheduled wakeup for now
<<<< AVPlayerItemOutput >>>> %s: scheduled wakeup in %.3f s
<<<< AVPlayerItemOutput >>>> %s:  Error: requestNotificationOfMediaDataChangeWithAdvanceInterval was valid when requesting requestNotificationOfMediaDataChangeAsSoonAsPossible. requestNotificationOfMediaDataChangeWithAdvanceInterval is deactivated
<<<< AVPlayerItemOutput >>>> %s: Unable to copy next image from visual context. Bailing.
<<<< AVPlayerItemOutput >>>> %s: FigVisualContextCopyImageForTime did not provide a imageOriginalTimeOut value. Bailing.
<<<< AVPlayerItemOutput >>>> %s: Sending -outputMediaDataWillChange: to delegate
<<<< AVPlayerItemOutput >>>> %s: Dispatching -outputSequenceWasFlushed:
<<<< AVPlayerItemOutput >>>> %s: Sending -outputSequenceWasFlushed: to delegate
<<<< AVSampleBufferDisplayLayer >>>> %s: Hiding contentLayer because bounds is CGSizeZero
<<<< AVSampleBufferDisplayLayer >>>> %s: Unhiding contentLayer because bounds is nonzero
<<<< AVSampleBufferDisplayLayer >>>> %s: Setting position(%d,%d), bounds(%dx%d), transform scale(%.3fx%.3f), offset(%d,%d)
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p] created
<<<< AVSampleBufferDisplayLayer >>>> %s: [%p]
<<<< AVSampleBufferDisplayLayer >>>> %s: AVSBDL did become visible: %d
<<<< AVSampleBufferDisplayLayer >>>> %s: videoRect: (%d, %d, %d, %d)
<<<< AVSampleBufferDisplayLayer >>>> %s: post notification: %@
<<<< AVSampleBufferDisplayLayer >>>> %s: <%p> new (%@), current %@, layer %@
<<<< AVSampleBufferDisplayLayer >>>> %s: Removing label from layer %@
<<<< AVSampleBufferDisplayLayer >>>> %s: Created layer %@
<<<< AVSampleBufferDisplayLayer >>>> %s: Setting label %@ on layer %@
<<<< AVAssetResourceLoader >>>> %s: AVAssetResourceLoader delegate does not respond to selector %@
<<<< AVAssetResourceLoader >>>> %s: data for current offset %lld of length %lld provided to %@
<<<< AVAssetResourceLoader >>>> %s: caching data for current offset %lld of length %lld that was provided to %@
<<<< AVAssetResourceLoader >>>> %s: cached data has grown to length %lld for %@
<<<< AVAssetResourceLoader >>>> %s: swallowing sendResponseInfo for cancelled request %@
<<<< AVAssetResourceLoader >>>> %s: swallowing sendData with data of len %lu for cancelled request %@
<<<< AVAssetResourceLoader >>>> %s: swallowing finishLoading for cancelled request %@
<<<< AVAssetResourceLoader >>>> %s: called on %@
<<<< AVAssetResourceLoader >>>> %s: [AVAssetResourceLoadingRequest finishLoading] is called for a content key request while an AVContentKeySession instance is attached to AVURLAsset. Generating event
<<<< AVAssetResourceLoader >>>> %s: called with error %@ on %@
<<<< AVAssetResourceLoader >>>> %s: called with handlingClient: %@, handler: %@, requestInfo: <%p>, requestID %llu
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Failed to create FigSampleBufferRenderSynchronizer: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] created (internal: %p)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] dealloc
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Render synchronizer %s participate in STS -- thank you for setting "defaults write com.apple.avfoundation rendersynchronizer_sts_label -bool %s"
<<<< AVSampleBufferRenderSynchronizer >>>> %s: error: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] rate: %1.3f; time: %1.3f; hostTime: %1.3f; fig error: %d
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Setting self as render synchronizer on renderer (%p) failed
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Error adding an AudioRenderer to the FigSynchronizer: %d
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Failed to add Renderer %@; error returned from _addRenderer: %@
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] removalBlock called; weakToSelf: %p; weakToRenderer: %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] called for renderer %p; time: %1.3f
<<<< AVSampleBufferRenderSynchronizer >>>> %s: unknown renderer: %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] old once observer already fired before we could invalidate it (renderer: %p)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] invalidated old scheduled removal of renderer %p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] successfully scheduled removal of renderer %p at time %1.3f
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Trying to add a renderer (%p) to same synchronizer
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Trying to add multiple audio renderers when disallowed
<<<< AVSampleBufferRenderSynchronizer >>>> %s: [%p] Too many audio renderers
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called (self = <%p>, time observer = <%p>)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: called (center=%@, listener=%p, name=%@, object=%p, payload=%@)
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Was tracking AVSBDL=%p, switching to AVSBVR=%p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Selecting AVSBVR=%p with label
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Selecting AVSBDL=%p that already contains a label
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Setting new STSLabel on AVSBDL=%p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Setting STSLabel %@ on renderer=%p
<<<< AVSampleBufferRenderSynchronizer >>>> %s: Cleaning-up renderer %p for synchronizerInternal %p
<<<< AVFileSystemUtilities >>>> %s: Failed to remove temporary file at %@: %@
<<<< AVAssetVariant >>>> %s: %@: encountered invalid obj: %p while evaluating
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: source CIImage %@ (colorSpace %@) from CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with CIImage %@
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: CIImage %@ (colorSpace %@) already has a CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: rendered CIImage %@ (colorSpace %@) to CVPixelBuffer %@ (attachments %@)
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with error %@
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: called with request %@
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: cancelling begin
<<<< AVCoreImageFilterCustomVideoCompositor >>>> %s: cancelling done
<<<< AVPlayerItemLegibleOutput >>>> %s: Invoking legible delegate %p with %d attributed string(s) and %d native sample(s) at time %f:%@
<<<< AVPlayerItemLegibleOutput >>>> %s: called
<<<< AVPlayerItemLegibleOutput >>>> %s: Notifying delegate of a flush
<<<< AVExternalDevice >>>> %s: Endpoint HID input mode: %@
<<<< AVExternalDevice >>>> %s: called with externalDevice %p hidDictionary %@
<<<< AVExternalDevice >>>> %s: Endpoint HID Setting inputMode to %@
<<<< AVExternalDevice >>>> %s: called with dictionary %@
<<<< AVExternalDevice >>>> %s: called with externalDevice %p client %@ reason %@
<<<< AVExternalDevice >>>> %s: called with externalDevice %p
<<<< AVExternalDevice >>>> %s: Endpoint property '%@' not supported
<<<< AVExternalDevice >>>> %s: Endpoint property '%@' has value: %@
<<<< AVExternalDevice >>>> %s: Endpoint screen IDs: %@
<<<< AVExternalDevice >>>> %s: Endpoint capabilities: %@
<<<< AVExternalDevice >>>> %s: adding endpointDeviceHID: %@
<<<< AVExternalDevice >>>> %s: Invalid Siri Requested Action: %@
<<<< AVPlayerCaptionLayer >>>> %s: Called (self=%p)
<<<< AVPlayerCaptionLayer >>>> %s: Called (self=%p, bounds=%@)
<<<< AVPlayerCaptionLayer >>>> %s: old player=%p, new player=%p
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Observing isDisplayingClosedCaptions on player %p
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Did cancel all observation of old player
<<<< AVPlayerCaptionLayer >>>> %s: called (keyPath=%@, object=%@, change=%@, context=%p
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Not applying new value of AVPlayer.currentItem.nonForcedSubtitleDisplayEnabled for player %p not currently being observed (expected %p)
<<<< AVPlayerCaptionLayer >>>> %s: <%p> Not applying new value of AVPlayer.isDisplayingClosedCaptions for player %p not currently being observed (expected %p)
<<<< AVPlayerCaptionLayer >>>> %s: <%p> %@ closed caption layer
<<<< AVCustomCompositor >>>> %s: videoComposition %p
<<<< AVCustomCompositor >>>> %s: creating instance of "%@"
<<<< AVCustomCompositor >>>> %s: src pixel buffer attributes %@
<<<< AVCustomCompositor >>>> %s: canConformColorOfSourceFrames %d
<<<< AVCustomCompositor >>>> %s: intializing new render context (videoCompositionDidChange %d
<<<< AVCustomCompositor >>>> %s: render context no longer suitable, need to create a new one
<<<< AVKVODispatcher >>>> %s: called (self=%p, keyPath=%@, object=%@, change=%@, context=%p)
<<<< AVKVODispatcher >>>> %s: %p no longer observing %@ with observer %@, for key path %@, and context %p
<<<< AVKVODispatcher >>>> %s: %p observing %@ with observer %@, for key path %@, options %d, and context %p
<<<< AVKVODispatcher >>>> %s: Registering for %@ (self = %@)
<<<< AVKVODispatcher >>>> %s: Calling -willChange for %@.%@, in response to top-level property change (self=%p)
<<<< AVKVODispatcher >>>> %s: cancelling second-level observation
<<<< AVKVODispatcher >>>> %s: Calling -willChange for %@.%@, in response to second-level property change (self=%p)
<<<< AVKVODispatcher >>>> %s: Calling -didChange for %@.%@, in response to second-level property change (self=%p)
<<<< AVRouteDetector >>>> %s: app is not in the foreground/active. route detection is suspended.
<<<< AVRouteDetector >>>> %s: app is in the foreground/active. route detection is allowed.
<<<< AVRouteDetector >>>> %s: AirPlay devices present: %d
<<<< AVRouteDetector >>>> %s: Custom routes present: %d
<<<< AVRouteDetector >>>> %s: Posting AVRouteDetectorMultipleRoutesDetectedDidChangeNotification.
<<<< AVRouteDetector >>>> %s: AirPlay device discovery enabled.
<<<< AVRouteDetector >>>> %s: Creating DADiscoverySession failed with error: %@
<<<< AVRouteDetector >>>> %s: Received DAEventTypeDevicesPresentChanged. Devices present: %d
<<<< AVRouteDetector >>>> %s: Received custom route discovery event, but AVRouteDetector.detectsCustomRoutes has since been disabled. Ignoring event.
<<<< AVRouteDetector >>>> %s: Custom route discovery enabled.
<<<< AVRouteDetector >>>> %s: Custom route discovery disabled.
<<<< AVRouteDetector >>>> %s: AirPlay device discovery disabled.
<<<< AVRouteDetector >>>> %s: AVRouteDetector did enter background.
<<<< AVRouteDetector >>>> %s: AVRouteDetector did enter foreground.
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: CVPixelBufferPoolCreatePixelBufferWithAuxAttributes failed (error %d)
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: initializing
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderDimensions = %d %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderScale = %f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderPixelAspectRatio = %d %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_RenderEdgeProcessingPixels = %f %f %f %f
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_HighQualityRendering = %d
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredAttributes = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredYCbCrMatrix = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredColorPrimaries = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_DestinationPixelBufferDesiredTransferFunction = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: kFigVideoCompositorProperty_BlendingTransferFunction = %@
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/AVVideoCompositionRenderContext.m %s: Failed to resolve pixel buffer attributes (error %d), required client attributes %@, desired destination attributes %@
<<<< AVMovie >>>> %s: AVMovie %p, AVAssetInspectorLoader %p
<<<< AVMovie >>>> %s: AVMutableMovie %p, FigMutableMovie %p, FigAsset %p, FigFormatReader %p
<<<< AVMovie >>>> %s: AVMutableMovie %p failed initialization with error %@
<<<< AVMovie >>>> %s: FigCreate3x3MatrixArrayFromCGAffineTransform returned a NULL matrix.
<<<< AVPlayerItemSampleBufferOutput >>>> %s: %p: wrong trackID %d (right trackID is %d)
<<<< AVPlayerItemSampleBufferOutput >>>> %s: FigPlaybackItemExtractAndRetainNextSampleBuffer returned %d, sampleBuffer=%p, self=%p
<<<< AVPlayerItemSampleBufferOutput >>>> %s: No delegate
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Sending -outputMediaDataAvailable:trackID: to delegate
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Delegate does not implement -outputMediaDataAvailable:trackID:
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Sending -outputSequenceWasFlushed:trackID: to delegate
<<<< AVPlayerItemSampleBufferOutput >>>> %s: Delegate does not implement -outputSequenceWasFlushed:trackID:
<<<< AVPlayerItemSampleBufferOutput >>>> %s: %p received %@, extractionID=%d
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p created request %p with identifier: %{public}@ initializationData: %p
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p request with identifier %{public}@ requestID: %lld failed err=%d
<<<< AVContentKeySession >>>> %s: %p cryptor:%p cryptorUUID:%{public}@ keyRequestId: %llu
<<<< AVContentKeySession >>>> %s: %p %p requestID:%lld
<<<< AVContentKeySession >>>> %s: %p %p did fail content key request %{public}@
<<<< AVContentKeySession >>>> %s: %p retrying key request because %@. status is set to retried
<<<< AVContentKeySession >>>> %s: %p %p key request failed since the client did not retry
<<<< AVContentKeySession >>>> %s: %p %p key request did succeed
<<<< AVContentKeySession >>>> %s: cryptor is NULL
<<<< AVContentKeySession >>>> %s: %p cryptor:%p cryptorUUID:%{public}@ cryptorKeyRequestID:%lld isInchargeOfKeyRequest:%d
<<<< AVContentKeySession >>>> %s: %p created key request:%p key-request-length:%lu for contentId:%{public}@ options:%{public}@ err:%{public}@
<<<< AVContentKeySession >>>> %s: %p setting content key response data %p to renew at %{public}@
<<<< AVContentKeySession >>>> %s: %p %p setting content key response data %p to renew at %{public}@
<<<< AVContentKeySession >>>> %s: %p processing content key response with data %p
<<<< AVContentKeySession >>>> %s: %p %p requesting persistable key request
<<<< AVContentKeySession >>>> %s: %p set report group success:%d
<<<< AVContentKeySession >>>> %s: %p %p key-respone:%p length:%lu offline-key:%p offline-key-legth:%lu err:%d
<<<< AVContentKeySession >>>> %s: failed to copy default secure stop manager due to error: %d
<<<< AVContentKeySession >>>> %s: %p: created with %{public}@ storageURL:%{public}@
<<<< AVContentKeySession >>>> %s: %p added content key recipient %p
<<<< AVContentKeySession >>>> %s: %p: failed to add %p as a content key recipient with error:%@
<<<< AVContentKeySession >>>> %s: %p removed content key recipient %p
<<<< AVContentKeySession >>>> %s: %p expiring recipient %p
<<<< AVContentKeySession >>>> %s: %p expiring session
<<<< AVContentKeySession >>>> %s: %p %p issuing renewable key request
<<<< AVContentKeySession >>>> %s: %p %p renewing with err:%@
<<<< AVContentKeySession >>>> %s: %p token:%p token-length:%lu error:%{public}@
<<<< AVContentKeySession >>>> %s: %{public}@ token:%p token-length:%lu error:%{public}@
<<<< AVContentKeySession >>>> %s: %p copying expired session reports for appIdentifier:%p storageURL:%{public}@ reports:%p
<<<< AVContentKeySession >>>> %s: %p remove pending session reports for appIdentifier:%p storageURL:%@
<<<< AVContentKeySession >>>> %s: %p issuing session report generation note
<<<< AVContentKeySession >>>> %s: %p issuing updated offline key %p for %{public}@
<<<< AVContentKeySession >>>> %s: %p issuing content protection identifier change for report group: %p
<<<< AVContentKeySession >>>> %s: %p issuing content protection identifier change
<<<< AVContentKeySession >>>> %s: %p failed to issue content key request due to an internal error
<<<< AVContentKeySession >>>> %s: %p failed to issue content key request because delegate's already gone
<<<< AVContentKeySession >>>> %s: %p issuing multiple key requests: %{public}@
<<<< AVContentKeySession >>>> %s: %p %p issuing key request
<<<< AVContentKeySession >>>> %s: %p %p issuing persistable key request
<<<< AVContentKeySession >>>> %s: %p initializing content key request with identifier %@ and initialization data %@
<<<< AVContentKeySession >>>> %s: %p Ignore produced contentKey (%@) because content key session is expired
<<<< AVContentKeySession >>>> %s: %p issued content key %{public}@
<<<< AVContentKeySession >>>> %s: %p reusing preloaded cryptor %p for cryptor %p
<<<< AVContentKeySession >>>> %s: %p creating content key group: %p error: %@
<<<< AVContentKeySession >>>> %s: %p creating cryptor using sinfs
<<<< AVContentKeySession >>>> %s: Invalid key system used in AVContentKeySystem
<<<< AVContentKeySession >>>> %s: %@ failed to process content key request for identifier %@ and initialization data %@ due to %@
<<<< AVContentKeySession >>>> %s: %p reportGroup:%p processing key request with identifier %{public}@ and initData %{public}@ options %{public}@
<<<< AVContentKeySession >>>> %s: %p associate key request %p to reportGroup:%p
<<<< AVContentKeySession >>>> %s: %p expire reportGroup:%p
<<<< AVContentKeySession >>>> %s: %p created reportGroup:%p with figCKS: %p
<<<< AVContentKeySession >>>> %s: setting authorizationToken failed due to err=%d
<<<< AVContentKeySession >>>> %s: badly formatted key request init data (encoded sinf not UTF8)
<<<< AVContentKeySession >>>> %s: badly formatted key request init data (encoded sinf not base64)
<<<< AVContentKeySession >>>> %s: called with handlingClient: %@, handler: %@, requestInfo: %@, requestID %llu
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptorUUID: %@, cryptorRequestID: %llu, keyResponseError: %@
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptorUUID: %@, cryptorRequestID: %llu
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@, cryptKeyIdentifier: %@, updatedPersistentKey: %@
<<<< AVContentKeySession >>>> %s: called with callbackClient: %@
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: outputDevices=%@
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (propertyName=%@, qualifier=%@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (deviceID=%@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (self=%p, groupID=%@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (self=%p, groupID=%@, groupLeader=%@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (self=%p, outputDevice=%@, options=%@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (groupID=%{private}@)
<<<< AVOutputDeviceGroup (APSyncController) >>>> %s: called (inResult = %d)
-[AVOutputContextLocalOutputDeviceGroupImpl _contextOutputDevicesDidChange:]
-[AVOutputContextLocalOutputDeviceGroupImpl addOutputDevice:withOptions:completionHandler:]
v16@?0@"AVOutputContextDestinationChange"8
-[AVOutputContextLocalOutputDeviceGroupImpl removeOutputDevice:withOptions:completionhandler:]
v16@?0@"NSNotification"8
avplayerlooper_trace
com.apple.avfoundation
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]
invalid parameter not satisfying: %s
player != nil
itemToLoop != nil
! CMTIMERANGE_IS_EMPTY(loopRange)
! CMTIMERANGE_IS_INDEFINITE(loopRange)
CMTIME_COMPARE_INLINE(loopRange.start, >=, kCMTimeZero)
com.apple.avplayerlooper.ivars
duration
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]_block_invoke_2
-[AVPlayerLooper initWithPlayer:templateItem:timeRange:]_block_invoke
v8@?0
-[AVPlayerLooper _changeStatusToFailedWithError:]
error
status
-[AVPlayerLooper _changeStatusToFailedWithError:]_block_invoke
-[AVPlayerLooper _calculateNumberOfCopiesNeeded]
-[AVPlayerLooper _setupLoopingReturningError:]
Loop range must start within [0, item duration]
Loop range must be within [0, item duration]
Template AVPlayerItem's duration must not be 0
loopingPlayerItems
-[AVPlayerLooper _setupLoopingReturningError:]_block_invoke
currentItem
AVPlayerLooperObservationCurrentItemContext
AVPlayerLooperObservationItemStatusContext
-[AVPlayerLooper observeValueForKeyPath:ofObject:change:context:]
loopCount
_avplLoopingItemFailedToPlayToEndTimeNotificationHandler
trackOutput != nil
[[trackOutput mediaType] isEqualToString:AVMediaTypeMetadata]
Cannot initialize an instance of %@ with a track output which was used to initialize another instance of %@
Cannot initialize an instance of %@ with a track output which has already progressed beyond AVAssetReaderStatusUnknown
cannot call method until the track output is attached to an asset reader and -startReading has been called on that asset reader
AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification
AVOutputDeviceDiscoverySessionAvailableOutputDeviceGroupsDidChangeNotification
outputdevicediscoverysession_trace
-[AVOutputDeviceDiscoverySession initWithOutputDeviceDiscoverySessionImpl:]
com.apple.avfoundation.avodds.ivars
-[AVOutputDeviceDiscoverySession impl]
-[AVOutputDeviceDiscoverySession setTargetAudioSession:]
-[AVOutputDeviceDiscoverySession setDiscoveryMode:forClientIdentifiers:]
q24@?0@8@16
-[AVOutputDeviceDiscoverySession availableOutputDevices]
-[AVOutputDeviceDiscoverySession devicePresenceDetected]
-[AVOutputDeviceDiscoverySession outputDeviceDiscoverySessionImplDidChangeAvailableOutputDevices:]
-[AVOutputDeviceDiscoverySession outputDeviceDiscoverySessionImplDidChangeAvailableOutputDeviceGroups:]
-[AVOutputDeviceDiscoverySessionAvailableOutputDevices recentlyUsedDevices]
-[AVOutputDeviceDiscoverySessionAvailableOutputDevices otherDevices]
+[AVAPSyncControllerOutputDeviceImpl registerLocalDeviceDidChangeListener:]
-[AVAPSyncControllerOutputDeviceImpl initWithSyncController:secondaryImpl:]
-[AVAPSyncControllerOutputDeviceImpl dealloc]
-[AVAPSyncControllerOutputDeviceImpl clusteredDeviceDescriptions]
-[AVAPSyncControllerOutputDeviceImpl _volumeDidChangeForEndpointWithID:]
-[AVAPSyncControllerOutputDeviceImpl _volumeControlSupportedDidChangeForEndpointWithID:]
-[AVAPSyncControllerOutputDeviceImpl _volumeControlTypeDidChangeForEndpointWithID:]
-[AVAPSyncControllerOutputDeviceImpl _proposedGroupIDDidChangeForEndpointWithID:]
AVAPSyncControllerOutputDeviceImplGetLocalDeviceCompletion
AVAPSyncControllerOutputDeviceImplVolumeDidChange
AVAPSyncControllerOutputDeviceImplVolumeControlSupportedDidChange
AVAPSyncControllerOutputDeviceImplVolumeControlTypeDidChange
AVAPSyncControllerOutputDeviceImplProposedGroupIDDidChange
AVAPSyncControllerOutputDeviceImplLocalDeviceDidChange
AVPlayerLayerVisibilityDidChangeNotification
AVPlayerLayerIsPartOfForegroundSceneDidChangeNotification
UISceneDidEnterBackgroundNotification
UISceneWillEnterForegroundNotification
avplayerlayer_trace
AVPlayerLayerQueue
com.apple.avfoundation.playerlayer.configuration
AVPlayerLayer <%p>
AVPlayerLayer <%p> (videoLayer)
AVPlayerLayer <%p> (closedCaptionLayer)
FigSubtitleCALayer
-[AVPlayerLayer init]
contentsAreFlipped
AVPlayerLayerContentsAreFlippedObservationContext
UIWindow
<AVPlayerLayer %p%@%@%@>
, player %p
, associatedLayer %p
, is in playback mode
-[AVPlayerLayer layoutSublayers]
-[AVPlayerLayer setBounds:]
@16@?0@8
bounds.size
bounds
position
sublayerTransform.scale.x
sublayerTransform.scale.y
%@_x
%@_y
sublayerTransform
AVPlayerLayer_PIPPlaceholderLayer_Bounds_%@
AVPlayerLayer_PIPPlaceholderLayer_Position_%@
AVPlayerLayer_MaskLayer_Bounds_%@
AVPlayerLayer_MaskLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_Position_%@
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@
AVPlayerLayer_VideoLayer_Position_%@
AVPlayerLayer_VideoLayer_SublayerTransform_%@
v16@?0@"CAPropertyAnimation"8
AVPlayerLayer_VideoLayer_SublayerTransform_%@_x
AVPlayerLayer_VideoLayer_SublayerTransform_%@_y
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_x
AVPlayerLayer_ClosedCaptionLayer_SublayerTransform_%@_y
-[AVPlayerLayer _percentCoverageRelativeToRootLayer]
-[AVPlayerLayer _displaySize]
-[AVPlayerLayer _notifyPlayerOfDisplaySize]
playerCurrentItemPresentationSize
player
cachedPresentationSizeOfCurrentItem
-[AVPlayerLayer _applyCurrentItemPresentationSizeChangeAndForceUpdate:]
-[AVPlayerLayer _applyCurrentItemPresentationSizeChangeAndForceUpdate:]_block_invoke
-[AVPlayerLayer _startObservingPlayer:]
@"AVPropertyValuePublisher"16@?0@"AVPlayerItem"8
v16@?0@"NSValue"8
v16@?0@"AVPlayerItem"8
v16@?0@"NSArray"8
v16@?0@"NSNumber"8
-[AVPlayerLayer _stopObservingPlayer:]
-[AVPlayerLayer observeValueForKeyPath:ofObject:change:context:]
-[AVPlayerLayer _handleNonForcedSubtitleDisplayDidChange:player:]_block_invoke
-[AVPlayerLayer _handleIsDisplayingClosedCaptionsDidChange:player:]_block_invoke
Showing
Hiding
AVPlayerLayerPlayerDidChangeNotification
-[AVPlayerLayer _setPlayer:forPIP:]
readyForDisplay
-[AVPlayerLayer _setPlayer:forPIP:]_block_invoke
-[AVPlayerLayer layerDidBecomeVisible:]
-[AVPlayerLayer _updateReadyForDisplayForPlayerCurrentItem]_block_invoke
-[AVPlayerLayer pixelBufferAttributes]
-[AVPlayerLayer _interstitialLayer]
-[AVPlayerLayer _setShowInterstitialInstead:afterDelay:]
videoRect
-[AVPlayerLayer _setShowInterstitialInstead:afterDelay:]_block_invoke
-[AVPlayerLayer setLanczosFilterDownscaleFactor:]
videoGravity
-[AVPlayerLayer setForScrubbingOnly:]
-[AVPlayerLayer copyDisplayedPixelBuffer]
+[AVPlayerLayer _swapSublayersBetweenPlayerLayer:andPlayerLayer:]
v32@?0@8@16^B24
Layer %@ is not a permitted sublayer during Picture-in-Picture, will be temporarily removed from the layer tree
targetLayer != nil
[targetLayer isKindOfClass:[AVPlayerLayer class]]
[targetLayer player] == nil
-[AVPlayerLayer _enterSecondScreenModeRedirectingVideoToLayer:]
-[AVPlayerLayer _leaveSecondScreenModeForLayer:]
newPlayerLayerForPIP != nil
[newPlayerLayerForPIP isKindOfClass:[AVPlayerLayer class]]
[newPlayerLayerForPIP player] == nil
PIPModeEnabled
-[AVPlayerLayer _enterPIPModeRedirectingVideoToLayer:]
-[AVPlayerLayer _leavePIPModeForLayer:]
-[AVPlayerLayer _forceLayout]
maskLayer
videoLayer
subtitleLayer
closedCaptionLayer
interstitialLayers
-[AVPlayerLayer _restoreClientLayers:intoMaskLayer:]
-[AVPlayerLayer _setSublayersForPIP:]
-[AVPlayerLayer setSublayers:]
-[AVPlayerLayer addSublayer:]
-[AVPlayerLayer insertSublayer:atIndex:]
-[AVPlayerLayer insertSublayer:below:]
-[AVPlayerLayer insertSublayer:above:]
-[AVPlayerLayer replaceSublayer:with:]
-[AVPlayerLayer removeFromSuperlayer]
-[AVPlayerLayer _currentWindowSceneIsForegroundDefault]
-[AVPlayerLayer _currentWindowSceneIsForeground]
-[AVPlayerLayer _windowSceneDidEnterBackground]
-[AVPlayerLayer _windowSceneWillEnterForeground]
-[AVPlayerLayer _notifyPlayerOfLayerForegroundStateChange]
-[AVPlayerLayer _setIsPartOfForegroundScene:]_block_invoke
AVPlayerLayerFilterClientLayersFromLayerWithIndexPath
{?=qiIq}
CMTime: %@
[coder allowsKeyedCoding]
CMTime
{?={?=qiIq}{?=qiIq}}
CMTimeRange: %@
CMTimeRange
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}
CMTimeMapping: {%@, %@}
CMTimeMapping
avtimebaseobserver_trace
timebase
A time observer token object was released without first being removed from the object it was created from using -removeTimeObserver:
-[AVTimebaseObserver _finishInitializationWithTimerEventHandler:]
((Boolean)(((interval).flags & (kCMTimeFlags_Valid | kCMTimeFlags_ImpliedValueFlagsMask)) == kCMTimeFlags_Valid))
((Boolean)(CMTimeCompare(interval, kCMTimeZero) > 0))
block != ((void *)0)
-[AVPeriodicTimebaseObserver _fireBlockForTime:]
-[AVPeriodicTimebaseObserver _effectiveRateChanged]
-[AVPeriodicTimebaseObserver _resetNextFireTime]
-[AVPeriodicTimebaseObserver _handleTimeDiscontinuity]
[times count] > 0
-[AVOccasionalTimebaseObserver initWithTimebase:times:queue:block:]
-[AVOccasionalTimebaseObserver _fireBlock]
-[AVOccasionalTimebaseObserver _effectiveRateChanged]
B32@?0@8Q16^B24
-[AVOccasionalTimebaseObserver _resetNextFireTime]
block
-[AVOnceTimebaseObserver initWithTimebase:fireTime:queue:block:]
-[AVOnceTimebaseObserver _fireBlock]
-[AVOnceTimebaseObserver _resetNextFireTime]_block_invoke
AVTimebaseObserver_timebaseNotificationCallback_block_invoke
AVTimebaseObserver_figTimebaseGetTime
avplayeritemmetadatacollector_trace
com.apple.avplayeritemmetadatacollector.ivars
newDelegateQueue == NULL
newDelegateQueue != NULL
playerItem != nil
v16@?0@8
obtainCoordinator != nil
com.apple.avplayeriteminterstitialeventcollector.ivars
comn
title
creator
subject
description
publisher
contributor
creationDate
lastModifiedDate
type
format
identifier
source
language
relation
location
copyrights
albumName
author
artist
artwork
make
model
software
accessibilityDescription
com.apple.quicktime.udta
udta
@alb
@arg
@ART
@aut
@chp
@cmt
@com
@cpy
@day
@des
@dir
@dis
@enc
@nam
@gen
@hst
@inf
@key
@mak
@mod
@ope
@fmt
@src
@prf
@prd
@pub
@PRD
@swr
@req
@trk
@wrn
@wrt
@url
@xyz
tnam
@phg
name
tagc
@ade
org.mp4ra
uiso
cprt
date
ades
auth
perf
gnre
yrrc
loci
titl
dscp
coll
urat
thmb
albm
kywd
clsf
rtng
com.apple.quicktime.mdta
mdta
com.apple.quicktime.author
com.apple.quicktime.comment
com.apple.quicktime.copyright
com.apple.quicktime.creationdate
com.apple.quicktime.director
com.apple.quicktime.displayname
com.apple.quicktime.information
com.apple.quicktime.keywords
com.apple.quicktime.producer
com.apple.quicktime.publisher
com.apple.quicktime.album
com.apple.quicktime.artist
com.apple.quicktime.artwork
com.apple.quicktime.description
com.apple.quicktime.software
com.apple.quicktime.year
com.apple.quicktime.genre
info.ixml.xml
com.apple.quicktime.location.ISO6709
com.apple.quicktime.make
com.apple.quicktime.model
com.apple.quicktime.arranger
com.apple.quicktime.encodedby
com.apple.quicktime.originalartist
com.apple.quicktime.performer
com.apple.quicktime.composer
com.apple.quicktime.credits
com.apple.quicktime.phonogramrights
com.apple.quicktime.camera.identifier
com.apple.quicktime.camera.framereadouttimeinmicroseconds
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
com.apple.quicktime.live-photo.vitality-disabled
com.apple.quicktime.is-montage
com.apple.quicktime.title
com.apple.quicktime.collection.user
com.apple.quicktime.rating.user
com.apple.quicktime.location.name
com.apple.quicktime.location.body
com.apple.quicktime.location.note
com.apple.quicktime.location.role
com.apple.quicktime.location.date
com.apple.quicktime.direction.facing
com.apple.quicktime.direction.motion
com.apple.quicktime.content.identifier
com.apple.quicktime.spatial-overcapture.group-identifier
com.apple.quicktime.contains-spatial-overcapture
com.apple.quicktime.accessibility.description
com.apple.itunes
itsk
itlk
covr
@st3
@too
aART
akID
apID
atID
cnID
cpil
disk
geID
grup
plID
tmpo
trkn
@ard
@lyr
@cak
@con
@equ
@lnt
@sne
@sol
@thx
@xpd
org.id3
AENC
APIC
ASPI
COMM
COMR
ENCR
EQUA
EQU2
ETCO
GEOB
GRID
IPLS
LINK
MCDI
MLLT
OWNE
PRIV
PCNT
POPM
POSS
RBUF
RVAD
RVA2
RVRB
SEEK
SIGN
SYLT
SYTC
TALB
TBPM
TCOM
TCON
TCOP
TDAT
TDEN
TDLY
TDOR
TDRC
TDRL
TDTG
TENC
TEXT
TFLT
TIME
TIPL
TIT1
TIT2
TIT3
TKEY
TLAN
TLEN
TMCL
TMED
TMOO
TOAL
TOFN
TOLY
TOPE
TORY
TOWN
TPE1
TPE2
TPE3
TPE4
TPOS
TPRO
TPUB
TRCK
TRDA
TRSN
TRSO
TSIZ
TSOA
TSOP
TSOT
TSRC
TSSE
TSST
TYER
TXXX
UFID
USER
USLT
WCOM
WCOP
WOAF
WOAR
WOAS
WORS
WPAY
WPUB
WXXX
StreamTitle
StreamUrl
com.apple.quicktime.HLS
lsdr
m3u8
NAME
caaf
public.unknown
HREF
dataType
dataTypeNamespace
pictureType
baseURL
info
CurrentEventDidChangeNotification
EventsDidChangeNotification
AssetListResponseStatusDidChangeNotification
AssetListResponseStatusDidChangeEventKey
AssetListResponseStatusDidChangeStatusKey
AssetListResponseStatusDidChangeErrorKey
AVPlayerWaitingDuringInterstitialEventReason
EventNoCue
EventJoinCue
EventLeaveCue
CMTIME_IS_NUMERIC(time)
date != nil
Template items for interstitial events must employ assets that can be referenced by URL (AVURLAssets)
date != nil || CMTIME_IS_NUMERIC(time)
com.apple.avplayerinterstitialevent.ivars
<%@: %p, primaryItem = %p, ctx = %p, templateItems = %p>
events returned by AVPlayerInterstitialEventMonitor are not mutable; modify a copy instead
Cannot create an InterstitialEventMonitor for an interstitial player.
Could not obtain the interstitial player.
Use %@ instead.
com.apple.avplayerinterstitialeventcontroller
invalid event %@ (%d)
avplayerinterstitialeventmonitor_fpNotificationCallback
-[AVSampleBufferVideoOutput setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:]
com.apple.avfoundation.avsamplebuffervideooutput
avsamplebuffervideooutput_trace
delegateQueue == NULL
delegateQueue != NULL
-[AVSampleBufferVideoOutput _copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:]
-[AVSampleBufferVideoOutput copyLastPixelBuffer:]
-[AVSampleBufferVideoOutput _configureWithVideoQueue:]
-[AVSampleBufferVideoOutput _dispatchOutputSequenceWasFlushed]
-[AVSampleBufferVideoOutput _dispatchOutputSequenceWasFlushed]_block_invoke
important
default
avassetstoragemanager_trace
storageManagementPolicy != nil
downloadStorageURL != nil
bundleIdentifier != nil
Not a fileURL %@
No file at %@
-[AVAssetDownloadStorageManager setStorageManagementPolicy:forURL:]
-[AVAssetDownloadStorageManager storageManagementPolicyForURL:]
<%@: %p, ExpirationDate: %@ Priority: %@>
ExpirationDate
Priority
AVOutputDeviceGroupAddOutputDeviceOptionAuthorizationToken
AVOutputDeviceGroupAddOutputDeviceOptionCancelIfAuthRequiredKey
AVOutputDeviceGroupAddOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputDeviceGroupVolumeDidChangeNotification
AVOutputDeviceGroupVolumeControlTypeDidChangeNotification
AVOutputDeviceGroupOutputDevicesDidChangeNotification
AVOutputDeviceGroupMembershipChangeInitiator
AVOutputDeviceGroupMembershipChangeResultCancellationReasonAuthorizationSkipped
outputdevicegroup_trace
-[AVOutputDeviceGroup initWithOutputDeviceGroupImpl:]
<%@: %p>
-[AVOutputDeviceGroup outputDevices]
-[AVOutputDeviceGroup outputDeviceGroupImpl:didChangeOutputDevicesWithInitiator:]
-[AVOutputDeviceGroup addOutputDevice:withOptions:completionHandler:]
-[AVOutputDeviceGroup addOutputDevice:withOptions:completionHandler:]_block_invoke
v16@?0@"AVOutputDeviceGroupMembershipChangeResult"8
-[AVOutputDeviceGroup removeOutputDevice:withOptions:completionHandler:]
-[AVOutputDeviceGroup removeOutputDevice:withOptions:completionHandler:]_block_invoke
-[AVOutputDeviceGroup outputDeviceGroupImplDidChangeVolume:]
-[AVOutputDeviceGroup outputDeviceGroupImplDidChangeVolumeControlType:]
MIMEtype
languageCode
-[AVMetadataItem(AVMetadataItem_Local) _valueFromCFType:]
-[AVMetadataItem(AVMetadataItem_Local) _extractPropertiesFromDictionary:]
avmetadataitem_trace
+[AVMetadataItem metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:]
v24@?0Q8^B16
v16@?0@"AVMetadataItemValueRequest"8
 length=%lu
<%@: %p, identifier=%@, keySpace=%@, key class = %@, key=%@, commonKey=%@, extendedLanguageTag=%@, dataType=%@, time=%@, duration=%@, startDate=%@, extras=%@, value class=%@, value%@>
Metadata item %p has no data type
Metadata item %p has no identifier.  If the item was given a key and key space, use +[%@ %@] to check whether an identifier can be made from that key and key space
+[NSJSONSerialization isValidJSONObject:] returned NO for the AVMetadataItem's value
Bad identifier. Identifier should be of the form "<keySpace>/<key>". Try using +%@ to generate an identifier from key and keySpace.
keySpace
com.apple.avfoundation.avmetadataitem
-[AVLazyValueLoadingMetadataItem loadValuesAsynchronouslyForKeys:completionHandler:]_block_invoke_2
-[AVLazyValueLoadingMetadataItem loadValuesAsynchronouslyForKeys:completionHandler:]_block_invoke
value
com.apple.avfoundation.avchaptermetadataitem
<%@: %p, chapterType=%@, locale identifier=%@, value=%@, time=%@, duration=%@, extras=%@>
extraAttributes
+[AVMetadataItemFilterForSharing addIdentifier:toWhitelistDictionary:]
com.apple.iTunes.iTunSMPB
com.apple.iTunes.iTunNORM
ludt
AVMetadataMakeMetadataObjectFromBoxedMetadata
/System/Library/PrivateFrameworks/AVFCapture.framework/AVFCapture
%s signalled err=%d (%s) (%s) at %s:%d
kFigMetadataReaderError_AllocationFailed
Failed to allocate buffer for FigBoxedMetadata -> CFData conversion
AVMetadataItemMakeDataFromBoxedMetadata
AVMetadataItem.m
AVMetadataMakeDependentSpecificationsForValue
AVMetadataObjectCreateBoxedMetadataFromObjectAndFormatDescription
Value
http
https
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
moop
mpvr
AVURLAssetPreferPreciseDurationAndTimingKey
AVURLAssetReferenceRestrictionsKey
AVURLAssetTypeKey
AVURLAssetClientBundleIdentifierKey
AVURLAssetClientAuditTokenKey
AVURLAssetParentNetworkActivityKey
AVURLAssetAlternativeConfigurationOptionsKey
ServiceIdentifier
HierarchyToken
MediaIdentifier
ContentProvider
iTunesServiceMonitoringKey
ServiceInformationKey
AVURLAssetInspectorLoaderKey
AVURLAssetProtectedContentSupportStorageURLKey
AVURLAssetCacheKey
AVURLAssetShouldMatchDataInCacheByURLPathComponentOnlyKey
AVURLAssetShouldMatchDataInCacheByURLWithoutQueryComponentKey
AVURLAssetOutOfBandMIMETypeKey
AVURLAssetAllowableTypeCategoriesKey
AVURLAssetAllowableAudioCodecTypesKey
AVURLAssetAllowableVideoCodecTypesKey
AVURLAssetAllowableCaptionFormatsKey
AVAssetRequiresInProcessOperationKey
AVAssetPrefersSandboxedParsingOptionKey
AVURLAssetHTTPUserAgentKey
AVURLAssetHTTPHeaderFieldsKey
AVURLAssetHTTPCookiesKey
AVURLAssetAllowsCellularAccessKey
AVURLAssetAllowsExpensiveNetworkAccessKey
AVURLAssetAllowsConstrainedNetworkAccessKey
AVURLAssetURLRequestAttributionKey
AVURLAssetByteRangeInFileKey
AVURLAssetClientURLLoadingRepresentsAccurateNetworkStatistics
AVURLAssetVideoNotEligibleForAppRecordingKey
AVURLAssetRequiresCustomURLLoadingKey
AVURLAssetUseClientURLLoadingExclusively
AVURLAssetCacheUseNonPurgeableMemoryKey
AVURLAssetCacheNonPurgeableMemoryLimitKey
AVURLAssetUsesNoPersistentCacheKey
AVURLAssetPreloadDurationWhenNextItemKey
AVURLAssetDownloadDestinationURLKey
AVURLAssetDownloadIsLowPriorityKey
AVURLAssetPurchaseBundleKey
AVURLAssetAirPlayAuthorizationInfoKey
AVURLAssetMaxSizeAllowedForCellularAccessKey
AVURLAssetNetworkProbeRequestDisabledKey
AVURLAssetReadAheadOnByteStreamCreationEnabledKey
AVURLAssetRemoteCustomURLHandlerContextKey
AVURLAssetSSLPropertiesKey
AVURLAssetNetworkLatencyMitigationKeyPodcastsOnly
AVURLAssetDownloadCompleteSuccessNotification
AVURLAssetDownloadCompleteFailedNotification
AVURLAssetDownloadCompleteNotificationErrorKey
AVURLAssetDownloadTokenKey
AVURLAssetBoundNetworkInterfaceName
AVURLAssetUseAppleWirelessDirectLinkKey
AVURLAssetInheritURIQueryComponentFromReferencingURIKey
AVURLAssetAllowedHTTPProtocolTypesKey
AVURLAssetApplicationTransportSecurityKey
AVURLAssetOptimizeAccessForLinearMoviePlaybackKey
AVURLAssetShouldEnableLegacyWebKitCompatibilityModeForContentKeyRequests
AVURLAssetiTunesStoreContentInfoKey
AVURLAssetiTunesStoreContentIDKey
AVURLAssetiTunesStoreContentTypeKey
AVURLAssetiTunesStoreContentUserAgentKey
AVURLAssetiTunesStoreContentDownloadParametersKey
AVURLAssetiTunesStoreContentDSIDKey
AVURLAssetiTunesStoreContentPurchasedMediaKindKey
AVURLAssetiTunesStoreContentRentalIDKey
AVURLAssetiTunesStoreContentAlternateContentInfoKey
AVURLAssetiTunesStoreContentAlternateContentInfoAssetURLStringKey
AVURLAssetiTunesStoreContentHLSAssetURLStringKey
AVAssetPreferPreciseDurationAndTimingKey
AVAssetReferenceRestrictionsKey
AVAssetMediaServicesWereResetNotification
AVAssetMediaServicesWereResetErrorKey
AVAssetPrepareForIncrementalFragmentsKey
AVURLAssetPrimarySessionIdentifierKey
chap
tmcd
ssrc
fall
sbtl
forc
cdsc
folw
AVURLAssetOutOfBandAlternateTracksKey
MediaSelectionOptionsName
MediaSelectionOptionsExtendedLanguageTag
MediaSelectionOptionsIsDefault
MediaSelectionOptionsTaggedMediaCharacteristics
MediaSelectionOptionsClientIdentifier
MediaSelectionOptionsURL
AVMetadataFormatTypedID3Metadata
AVPropertyListForProxyCreationOption_ReduceMetadataForPhotoLibrary
AVAssetDurationDidChangeNotification
AVAssetChapterMetadataGroupsDidChangeNotification
AVAssetMediaSelectionGroupsDidChangeNotification
AVAssetContainsFragmentsDidChangeNotification
AVAssetWasDefragmentedNotification
AVURLAssetEnableQUICKey
AVURLAssetForceQUICKey
AVURLAssetWhitelistQUICKey
AVURLAssetEnableMultiPath
AVURLAssetPreferLargeResourceRequests
AVURLAssetLoggingIdentifier
AVURLAssetUnitTestOptions
AVURLAssetCustomURLLoaderKey
contentType != nil
[data length] > 0
avasset_trace
streaming
tracks
naturalSize
availableMediaCharacteristicsWithMediaSelectionOptions
v16@?0@"NSError"8
-[AVAsset mediaSelectionGroupForPropertyList:mediaSelectionOption:]
availableMetadataFormats
AVChapterGroupTypeKey
AVChapterGroupLanguageCodeKey
AVChapterGroupExtendedLanguageTagKey
AVChapterGroupPerChapterInfoKey
AVChapterGroupChaptersKey
-[AVAsset(AVAssetChapterInspection) _chapterMetadataGroupsBestMatchingPreferredLanguages:containingItemsWithCommonKeys:]
availableChapterLocales
index %d out of bounds.
MediaValidator.plist
+[AVURLAsset _avfValidationPlist]_block_invoke
public.playlist
AVURLAssetMaxSizeAllowedForCellularAccessKey and AVURLAssetAllowsCellularAccessKey options are incompatible
+[AVURLAsset _getFigAssetCreationOptionsFromURLAssetInitializationOptions:assetLoggingIdentifier:figAssetCreationFlags:error:]
User-Agent
v32@?0@8Q16^B24
AVURLAssetDownloadDestinationURLKey and AVURLAssetUsesNoPersistentCacheKey options are incompatible
AVURLAssetHasSecurityScopedURLKey
com.apple.avurlasset.tracks
-[AVURLAsset initWithURL:options:]
Cannot honor specified AVURLAsset initialization options for AVURLAsset <%p>%@
: %@
-[AVURLAsset _ensureAssetDownloadCache]_block_invoke
figLoaderNotificationHandler
*** SHOULD NOT receive kFigAssetNotification_PropertyRevised / kFigStdAssetProperty_Duration notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
<%@: %p, URL = %@>
^{OpaqueFigAsset=}8@?0
-[AVURLAsset(AVURLAssetURLHandlingInternal) _resourceLoaderWithRemoteHandlerContext:]_block_invoke
com.apple.avfoundation.avurlasset.instanceIdentifierMapping
+[AVDataAsset _getFigAssetCreationOptionsFromDataAssetInitializationOptions:figAssetCreationFlags:]
Data length cannot exceed %llu bytes
AVErrorUnknown
self.figAsset NULL
-[AVURLAsset(AVURLAssetContentKeyEligibilityInternal) _attachToContentKeySession:contentKeyBoss:failedSinceAlreadyAttachedToAnotherSession:]
AVAsset.m
AVURLAssetItemProviderURLWrapperKey
AVURLAssetItemProviderAssetInitializationOptionsKey
com.apple.avfoundation.urlasset
Reading data from the type identifier %@ is not supported by AVURLAsset.
Reading file representations for the type identifier %@ is not supported by AVURLAsset.
Writing to NSItemProviders is not supported for non file:/// scheme URLs: %@
Loading data from the type identifier %@ is not supported by AVURLAsset.
Loading file representations for the type identifier %@ is not supported by AVURLAsset.
supports only keyed archivers
assetCreationOptions
httpCookies
minimumCutOffFrequency < maximumCutOffFrequency
0. <= bypassThreshold && bypassThreshold <= 1.
0. <= sweepValue && sweepValue <= 1.
CleanAperture
ProductionAperture
EncodedPixels
aig_trace
com.apple.avfoundation.requestsqueue
com.apple.avfoundation.imagerequestqueue
com.apple.avfoundation.generateimagesasyncqueue
-[AVAssetImageGenerator _ensureFigAssetImageGeneratorAllowingSynchronousPropertyLoad:error:]
-[AVAssetImageGenerator copyCGImageAtTime:actualTime:error:]
-[AVAssetImageGenerator generateCGImagesAsynchronouslyForTimes:completionHandler:]
handler != nil
-[AVAssetImageGenerator generateCGImagesAsynchronouslyForTimes:completionHandler:]_block_invoke
RequestID
RequestedTime
CompletionHandler
Self
-[AVAssetImageGenerator generateCGImagesAsynchronouslyForTimes:completionHandler:]_block_invoke_4
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
-[AVAssetImageGenerator cancelAllCGImageGeneration]
AVAssetImageGenerator can't use a video composition with a renderScale other than 1.0
-[AVAssetImageGenerator _didGenerateCGImage:]
-[AVAssetImageGenerator _failedToGenerateCGImage:]
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl _didReceiveData:]
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl _didCloseCommunicationChannel]
-[AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl sendData:completionHandler:]
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImplHandleEvent
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImplSendDataCompletion
vmap
mdep
AVAssetTrackTimeRangeDidChangeNotification
AVAssetTrackSegmentsDidChangeNotification
AVAssetTrackTrackAssociationsDidChangeNotification
AVAssetTrackMetadataDidChangeNotification
<%@: %p, trackID = %d, mediaType = %@>
segments
availableTrackAssociationTypes
assetTrackNotificationHandler
*** SHOULD NOT receive kFigAssetTrackNotification_PropertyRevised / kFigStdTrackProperty_TimeRange notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
*** SHOULD NOT receive kFigAssetTrackNotification_PropertyRevised / kFigAssetTrackProperty_EditSegmentData notification from %s, if you see this message please file a radar with logs and repro steps and assign it to AVFoundation ***
AVPlayerWaitingToMinimizeStallsReason
AVPlayerWaitingWhileEvaluatingBufferingRateReason
AVPlayerWaitingWithNoItemToPlayReason
AVPlayerWaitingForCoordinatedPlaybackReason
An AVPlayerItem can occupy only one position in a player's queue at a time.
AVPlayerCurrentItemDidChangeNotification
ReasonForCurrentItemDidChange
ReasonAddToPlayQueue
ReasonRemoveFromPlayqueue
ReasonAdvanceAtEnd
ReasonAdvanceForOverlappedPlayback
ReasonAdvanceDueToError
ReasonUnknown
AVPlayerAvailableHDRModesDidChangeNotification
AVPlayerEligibleForHDRPlaybackDidChangeNotification
AVPlayerPlaybackWasInterruptedNotification
MatchMultichannelTrackPreferenceToAudioDevice
PreferStereo
PreferAC3ViaExclusivePassthrough
CoreTextSubtitleRenderer
CaptionDisplayService
CFAttributedStrings
FigCaptions
AVPlayerRateDidChangeNotification
AVPlayerRateDidChangeReasonKey
AVPlayerRateDidChangeRateChangeIdentifierKey
AVPlayerRateDidChangeOriginatingParticipantKey
AVPlayerRateDidChangeReasonAudioSessionInterrupted
AVPlayerRateDidChangeReasonSetRateCalled
AVPlayerRateDidChangeReasonSetRateFailed
AVPlayerRateDidChangeReasonAppBackgrounded
AVPlayerRateDidChangeReasonRouteChanged
AVPlayerRateDidChangeReasonPlaybackResumed
AVPlayerRateDidChangeReasonPlaybackStalled
AVPlayerRateDidChangeReasonPauseAtItemEnd
AVPlayerRateDidChangeReasonStatusChanged
AVPlayerRateDidChangeReasonCoordinatedPlayback
AVPlayerBackgroundPIPAuthorizationTokenDidChangeNotification
AVPlayerAudiovisualBackgroundPlaybackPolicyDidChangeNotification
AVPlayerInterstitialPlayerDidChangeNotification
Scanning
avplayer_trace
Item must be an instance of AVPlayerItem.
B24@?0^B8^@16
AvoidConcurrentKVOForAVPlayerCurrentItem
com.apple.avplayer.figplayer
com.apple.avplayer.playerlayer
com.apple.avplayer.ivars
com.apple.avplayer.current-item-properties
com.apple.avplayer.configuration
com.apple.avplayer.layers
-[AVPlayer init]
avplayer_logperformance
AVPlayer %p deallocated while a pending preroll is still in progress; leaking completion handler. Use -cancelPendingPrerolls to deallocate an AVPlayer safely while a preroll is still pending.
masterClock
sourceClock
-[AVPlayer _changeStatusToFailedWithError:]
rate
-[AVPlayer _updateDecoderPixelBufferAttributes:onFigPlayer:]
AVPlayerCurrentItemDidChangeForPublishersNotification
isDisplayingClosedCaptions
AVPlayerIsDisplayingClosedCaptionsDidChangeNotification
-[AVPlayer _setCurrentItem:]
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:]_block_invoke_2
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:]_block_invoke
timeControlStatus
reasonForWaitingToPlay
-[AVPlayer _runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:]
-[AVPlayer _itemIsReadyToPlay:]_block_invoke
-[AVPlayer _advanceCurrentItemAccordingToFigPlaybackItem:]
-[AVPlayer _advanceToNextItem]
Item must be a non-nil instance of AVPlayerItem.
-[AVPlayer prepareItem:withCompletionHandler:]
v16@?0q8
-[AVPlayer _insertItem:afterItem:]
surrogate_player_disabled
+[AVPlayer _createFigPlayerWithType:options:player:]
FigPlayer_File
FigPlayer_Stream
coordinator_player_disabled
com.apple.avfoundation.AVPlayer.%d-%d
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke
airPlayVideoActive
externalPlaybackActive
mxSessionID
PIPModePossible
avplaybackcoordinator_always
AVPlayer_FigPlayerProperty_Rate
AVPlayer_FigPlayerProperty_RateOptions
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke_6
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke_3
-[AVPlayer _createAndConfigureFigPlayerWithType:completionHandler:]_block_invoke_2
v24@?0@"NSArray"8@"NSArray"16
-[AVPlayer setExpectedAssetTypes:]
AVPlayer's expectedAssetTypes can't be after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
-[AVPlayer setExpectedAssetTypes:]_block_invoke_2
AVPlayer.m
Invalid parameter not satisfying: %@
item != nil
-[AVPlayer _applyPlayQueueChangesToFigPlayerWithCompletionHandler:]
-[AVPlayer _applyPlayQueueChangesToFigPlayerWithCompletionHandler:]_block_invoke
-[AVPlayer _removeItem:]
-[AVPlayer replaceCurrentItemWithPlayerItem:]
v24@?0@"AVPlayerItem"8^B16
-[AVPlayer _setRate:rateChangeReason:figPlayerSetRateHandler:]
-[AVPlayer _setRate:rateChangeReason:figPlayerSetRateHandler:]_block_invoke
-[AVPlayer _setRate:withVolumeRampDuration:playImmediately:rateChangeReason:affectsCoordinatedPlayback:]_block_invoke
v20@?0^{OpaqueFigPlayer=}8i16
-[AVPlayer setDefaultRate:]
-[AVPlayer setAutomaticallyWaitsToMinimizeStalling:]_block_invoke
-[AVPlayer _setUsesLegacyAutomaticWaitingBehavior:]
AVPlayer's _usesLegacyAutomaticWaitingBehavior can't be set after any AVPlayerItems have been enqueued or after the AVPlayer's status changes from AVPlayerStatusUnknown.
-[AVPlayer seekToDate:completionHandler:]
-[AVPlayer seekToTime:completionHandler:]
-[AVPlayer seekToTime:toleranceBefore:toleranceAfter:completionHandler:]
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: until its status is AVPlayerStatusReadyToPlay.
AVPlayer cannot service a synchronized playback request via setRate:time:atHostTime: when automaticallyWaitsToMinimizeStalling is YES
AVPlayer cannot service a preroll request until its status is AVPlayerStatusReadyToPlay.
-[AVPlayer _userVolume]
AVPlayerActionAtItemEndAdvance is not allowed for a player of class %@
%d is not a valid actionAtItemEnd for a player of class %@
-[AVPlayer setShouldReduceResourceUsage:]
-[AVPlayer setResourceConservationLevelWhilePaused:]
-[AVPlayer setPlayerRole:synchronously:]
-[AVPlayer setOutputContext:]
-[AVPlayer play]
block != nil
v32@?0{?=qiIq}8
-[AVPlayer removeTimeObserver:]
An instance of AVPlayer cannot remove a time observer that was added by a different instance of AVPlayer.
You did not supply a reference to an object returned by either -addPeriodicTimeObserverForInterval:queue:usingBlock: or -addBoundaryTimeObserverForTimes:queue:usingBlock:
-[AVPlayer _closedCaptionLayers]
-[AVPlayer _videoLayers]
-[AVPlayer _evaluateDisplaySizeOfAllAttachedLayers]
-[AVPlayer _evaluateDisplaySizeOfAllAttachedLayers]_block_invoke
-[AVPlayer _copyDisplayedPixelBuffer]
-[AVPlayer _attachVideoLayersToFigPlayer]
-[AVPlayer _detachVideoLayersFromFigPlayer:]
-[AVPlayer _removeLayer:videoLayer:closedCaptionLayer:subtitleLayer:interstitialLayer:]_block_invoke_3
-[AVPlayer _addLayer:]
-[AVPlayer _addLayer:]_block_invoke
OverlappedPlaybackDidComplete
++++++++++++++++++++++++++++++++++++++++++
------------------------------------------
-[AVPlayer setAudiovisualBackgroundPlaybackPolicy:]
+[AVPlayer fireAvailableHDRModesDidChangeNotification]
+[AVPlayer fireEligibleForHDRPlaybackDidChangeNotification]
+[AVPlayer availableHDRModes]
-[AVPlayer(AVPlayerMultitaskSupport) _hasAssociatedAVPlayerLayerInPIPMode]
UIApplication
-[AVPlayer(AVPlayerMultitaskSupport) _applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock]
com.apple.iapd.notify.extendedMode
com.apple.avfoundation.tool-has-foreground-exemption
-[AVPlayer(AVPlayerMultitaskSupport) _canContinuePlaybackInBackgrounBasedOnAudiovisualBackgroundPlaybackPolicy:]
-[AVPlayer(AVPlayerMultitaskSupport) _itemOkayToPlayWhileTransitioningToBackground:]
-[AVPlayer(AVPlayerMultitaskSupport) _shouldDetachVideoLayersFromFigPlayer]
-[AVPlayer(AVPlayerMultitaskSupport) _layerForegroundStateChanged:]_block_invoke
AVPlayer background assertion
com.apple.common
FinishTaskInterruptable
-[AVPlayer(AVPlayerMultitaskSupport) _acquireBackgroundAssertion]
-[AVPlayer(AVPlayerMultitaskSupport) _didEnterBackground:]
-[AVPlayer(AVPlayerMultitaskSupport) _didEnterBackground:]_block_invoke
-[AVPlayer(AVPlayerMultitaskSupport) _didFinishSuspension:]
-[AVPlayer(AVPlayerMultitaskSupport) _detachVideoLayersForSuspension]_block_invoke_3
-[AVPlayer(AVPlayerMultitaskSupport) _detachVideoLayersForSuspension]_block_invoke
-[AVPlayer(AVPlayerMultitaskSupport) _detachVideoLayersForSuspension]_block_invoke_2
-[AVPlayer(AVPlayerMultitaskSupport) _willEnterForeground:]
MusicPlayer
-[AVPlayer(AVPlayerMultitaskSupport) _ensureVideoLayersAreAttached]_block_invoke
-[AVPlayer(AVPlayerSupportForMediaPlayer) _updateConnectionToSecondScreen]
-[AVPlayer(AVPlayerSupportForMediaPlayer) _resumePlayback:error:]
audioSession != nil
Cannot set preservesAudioSessionSampleRate after the AVPlayer has begun preparing for playback.
Not available.  Use %@ or %@ instead
-[AVPlayer(AVPlayerPIPSupport) setBackgroundPIPAuthorizationToken:]
-[AVPlayer(FigVideoTargetSupport) setShouldWaitForVideoTarget:]
-[AVPlayer(FigVideoTargetSupport) setShouldWaitForVideoTarget:]_block_invoke
-[AVPlayer(AVPlayerInterstitialSupport_Internal) _linkAndSyncAudioSessionWithInterstitialPlayer:]
-[AVPlayer(AVPlayerInterstitialSupport_Internal) _hasCurrentInterstitialEvent]
NULL
non-NULL
-[AVPlayer(AVPlayerInterstitialSupport_Internal) _copyInterstitialEventCoordinatorEnsuringItIsRemote:forceCreate:]_block_invoke
-[AVPlayer(PlaybackCoordination) _ensureFigPlaybackCoordinatorIsConnected]
-[AVPlayerRateState rateStateBySettingRate:nameForLogging:]
-[AVPlayerRateState rateStateByUpdatingBasedOnPresenceOfCurrentInterstitialEvent:nameForLogging:]
-[AVPlayerRateState rateStateByUpdatingBasedOnFigPlayer:hasCurrentItem:hasCurrentInterstitialEvent:nameForLogging:]
AVPlayerItem *AVPlayerFindItemMatchingFigPlaybackItem(NSArray *, FigPlaybackItemRef, NSArray **)
figPlaybackItemToFind != NULL
AVPlayerGetFigPlayerTypeForAsset
avplayer_fpInterstitialCoordinatorNotificationCallback
avplayer_fpInterstitialCoordinatorNotificationCallback_block_invoke
@"AVPlayerRateState"20@?0@"AVPlayerRateState"8B16
avplayer_fpInterstitialCoordinatorNotificationCallback_block_invoke_3
avplayer_fpNotificationCallback
avplayer_fpNotificationCallback_block_invoke
AVController_Volume
_AVPlayer_Volume
_AVPlayer_VolumeDidChangeNotification
muted
avplayer_fpNotificationCallback_block_invoke_2
outputObscuredDueToInsufficientExternalProtection
avplayer_fpNotificationCallback_block_invoke_3
isSilencedDueToConflictWithOtherPlayback
OverlappedPlaybackID
TimeReachedDuringOverlappedPlayback
avplayer_iapdNotificationCallback
avplayer_iapdNotificationCallback_block_invoke
avplayer_iapdNotificationCallback_block_invoke_2
com.apple.avfoundation.avplayer.iapd
variantQualifiers
mediaSelections
preferredMediaSelection
asset != nil
title != nil
assetURL
downloadToken
artworkData
primaryContentConfig
auxiliaryContentConfigs
optimizesAuxiliaryContentConfigs
avasynchronouskeyvalueloading_trace
Unexpected terminal status %d
-[AVUXMDisplayManager setPreferredDisplayCriteria:]_block_invoke
-[`AVUXMDisplayManager` init] unavailable
avuxm_trace
com.apple.avuxmdisplaymanager
AVSampleBufferAudioRendererWasFlushedAutomaticallyNotification
AVSampleBufferAudioRendererFlushTimeKey
AVSampleBufferAudioRendererOutputConfigurationDidChangeNotification
-[AVSampleBufferAudioRenderer _installNotificationHandlers]
-[AVSampleBufferAudioRenderer _uninstallNotificationHandlers]
-[AVSampleBufferAudioRenderer outputContext]
outputContext != nil
-[AVSampleBufferAudioRenderer setOutputContext:]
avsamplebufferaudiorenderer_trace
-[AVSampleBufferAudioRenderer init]
-[AVSampleBufferAudioRenderer dealloc]
-[AVSampleBufferAudioRenderer _transitionToStatus:error:]
-[AVSampleBufferAudioRenderer status]
-[AVSampleBufferAudioRenderer error]
-[AVSampleBufferAudioRenderer setAudioOutputDeviceUniqueID:]
audioOutputDeviceUniqueID != nil
-[AVSampleBufferAudioRenderer audioOutputDeviceUniqueID]
-[AVSampleBufferAudioRenderer setAudioTimePitchAlgorithm:]
newAudioTimePitchAlgorithm != nil
-[AVSampleBufferAudioRenderer audioTimePitchAlgorithm]
-[AVSampleBufferAudioRenderer setAudioTapProcessor:]
-[AVSampleBufferAudioRenderer audioTapProcessor]
-[AVSampleBufferAudioRenderer setAllowedAudioSpatializationFormats:]
-[AVSampleBufferAudioRenderer allowedAudioSpatializationFormats]
-[AVSampleBufferAudioRenderer setVolume:]
-[AVSampleBufferAudioRenderer volume]
-[AVSampleBufferAudioRenderer setMuted:]
-[AVSampleBufferAudioRenderer isMuted]
-[AVSampleBufferAudioRenderer timebase]
-[AVSampleBufferAudioRenderer copyFigSampleBufferAudioRenderer:]
-[AVSampleBufferAudioRenderer setRenderSynchronizer:error:]
The AudioRenderer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
-[AVSampleBufferAudioRenderer setSTSLabel:]
-[AVSampleBufferAudioRenderer enqueueSampleBuffer:]
sampleBuffer != NULL
Sample buffer has media type '%@' instead of '%@'
-[AVSampleBufferAudioRenderer flush]
completionHandler != nil
-[AVSampleBufferAudioRenderer flushFromSourceTime:completionHandler:]
-[AVSampleBufferAudioRenderer isReadyForMoreMediaData]
-[AVSampleBufferAudioRenderer requestMediaDataWhenReadyOnQueue:usingBlock:]
queue != NULL
-[AVSampleBufferAudioRenderer stopRequestingMediaData]
AVSampleBufferAudioRendererFigFactoryKey
assetwriterinputmetadataadaptor_trace
input != nil
[[input mediaType] isEqual:AVMediaTypeMetadata]
Cannot create a new metadata adaptor with an asset writer input that is already attached to a metadata adaptor
Cannot create a new metadata adaptor with an asset writer input that has already started writing
Cannot create a new metadata adaptor with an asset writer that does not carry a source format hint
%@ only knows how to produce data with media subtype '%@', so it must be initialized with an instance of AVAssetWriterInput that is expecting data in that format
<%@: %p, assetWriterInput = %@>
group != nil
CMTIME_IS_NUMERIC([group timeRange].start)
! CMTIME_IS_NEGATIVE_INFINITY([group timeRange].duration)
Cannot invoke method before the attached asset writer input has been added to an asset writer and -startWriting has been called on that asset writer
-[AVAssetWriterInputMetadataAdaptor appendTimedMetadataGroup:]
Cannot write to file timed metadata group %p%@
AVExternalProtectionMonitorExternalProtectionStateChangedNotification
formatDescriptions
video format desc 
audio format desc 
(%@) 
- codec:%.4s 
video-range:%@
, bit-depth:%@
, channels:%u
, sample-rate:%uHz
kbps
Mbps
%0.2f%@
HDR10
DolbyVision 8.4
DolbyVision 5
Unknown
average bitrate 
mediaType
estimatedDataRate
video:
audio:
%@  
unknown
streaming (HLS)
local file
progressive download (CRABS)
custom-loaded
nominalFrameRate
[ M-Ch ]
[ 2-Ch ]
[ S-Ch ]
[ ?-Ch ]
asset type:%@
session-id:%@
configurationGroup: %@
display resolution:%0.0f x %0.0f
, refresh-rate:%0.2fHz
, video-range:%@
video approximate-display-size:%0.0f x %0.0f  
video approximate-display-size:-  
natural-size:%0.0f x %0.0f
current frame rate:%0.2f
nominal frame rate:%0.2f
network bandwidth:%@
video:%@  
audio:%@
indicated bitrate 
peak:%@  
average:%@  
stalls total:%ld  current-variant:%ld
frame drops 
total:%ld  
decode:%d  
imageQ:%d
buffered video before:%0.1fs  
after:%0.1fs
Helvetica-Bold
enable
spatial
interval
color
opacity
fontsize
show_complete_uri
xoffset
yoffset
InternalBuild
main-screen-scale
com.apple.avfoundation.videoperformancehud
AVPlayerItemTimebaseChangedNotification
GaplessInfoHeuristicInfoKey
GaplessInfoEncodingDelayInFramesKey
GaplessInfoEncodingDrainInFramesKey
GaplessInfoDurationInFramesKey
GaplessInfoLastPacketsResyncKey
RampInOutInfoInDuration
RampInOutInfoOutDuration
AudibleDRMInfoGroupID
AVPlayerItemTimeJumpedNotification
AVPlayerItemTimeJumpedOriginatingParticipantKey
AVPlayerItemTimeJumpedReasonKey
AVPlayerItemDidPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeNotification
AVPlayerItemFailedToPlayToEndTimeErrorKey
AVPlayerItemPlaybackStalledNotification
AVPlayerItemRecommendedTimeOffsetFromLiveDidChangeNotification
AVPlayerItemNewAccessLogEntry
AVPlayerItemNewErrorLogEntry
AVPlayerItemMediaSelectionDidChangeNotification
AVProtectedContentProviderFairPlay
AVInitializeProtectedContentPlaybackSupportStorageURLKey
AVInitializeProtectedContentPlaybackSupportVideoKey
AVInitializeProtectedContentPlaybackSupportExternalProtectionKey
AVPlayerItemBecameCurrentNotification
AVPlayerItemStoppedBeingCurrentNotification
AVPlayerItemVariantChangedNotification
AVPlayerItemSuppressesVideoLayersDidChangeNotification
AVPlayerItemHasEnqueuedVideoFrameDidChangeNotification
AVPlayerItemPreferredPixelBufferAttributesDidChangeNotification
AVPlayerItemSpatialAudioRenderingDidChangeNotification
AVPlayerItemReachedTimeToPauseBufferingNotification
AVPlayerItemReachedTimeToPausePlaybackNotification
AVPlayerItemOverlappedPlaybackWillBeginNotification
AVPlayerItemOverlappedPlaybackDidCompleteNotification
AVPlayerItemSeekDidCompleteNotification
AVPlayerItemSeekDidCancelNotification
AVPlayerItemSeekIDKey
AVPlayerItemTimeJumpedReasonUnknown
AVPlayerItemTimeJumpedReasonClientInitiated
AVPlayerItemTimeJumpedReasonJoiningCoordinatedPlayback
AVPlayerItemTimeJumpedReasonChangeInCoordinatedPlaybackTiming
AVPlayerItemTimeJumpedReasonEndOfCoordinatedPlaybackSuspension
AVPlayerItemTimeJumpedReasonRejoiningCoordinatedPlayback
AVPlayerItemTimeJumpedReasonInterstitialResumptionOffset
SessionID
PlayInfo
avplayeritem_trace
%@ does not support playback via AVPlayer
com.apple.avplayeritem.ivars
com.apple.avplayeritem.figplaybackitem
com.apple.avplayeritem.figplaybackitem.accessor
com.apple.avplayeritem.figplaybackitem.setter
com.apple.avplayeritem.seek
-[AVPlayerItem initWithAsset:automaticallyLoadedAssetKeys:]
-[AVPlayerItem dealloc]
AVPlayerItem %p deallocated while a pending seek is still in progress; leaking completion handler. Use -cancelPendingSeeks to deallocate an AVPlayerItem safely while a seek operation is still pending.
<%@: %p, %@>
asset = %@
URL = %@
with no asset and no URL
_externalProtectionRequiredForPlayback
timedMetadata
-[AVPlayerItem _configurePlaybackItem]
-[AVPlayerItem _configurePlaybackItemAndReturnError:]
-[AVPlayerItem _attachToPlayer:]
An AVPlayerItem cannot be associated with more than one instance of AVPlayer
+[AVPlayerItem _createFigPlaybackItemForFigPlayer:asset:URL:flags:options:playbackItem:]
-[AVPlayerItem _attachToFigPlayer]
-[AVPlayerItem _addToPlayQueueOfFigPlayerOfPlayer:afterFigPlaybackItemOfItem:]
AVPlayerItem.m
previousItem != nil
presentationSize
AVPlayerItemPresentationSizeDidChangeNotification
AVPlayerItemTracksDidChangeNotification
isNonForcedSubtitleDisplayEnabled
AVPlayerItemNonForcedSubtitleDisplayEnabledDidChangeNotification
asset
%@, 
See -[AVPlayerItem errorLog] for %d events
-[AVPlayerItem _changeStatusToFailedWithError:]
-[AVPlayerItem _tracks]
OverlappedPlaybackWillBegin
-[AVPlayerItem _invokeReadyForEnqueueingHandlers]
-[AVPlayerItem _makeReadyForEnqueueingWithCompletionHandler:]
-[AVPlayerItem _presentationSize]
-[AVPlayerItem _cancelPendingSeekAndRegisterSeekID:withCompletionHandler:]
-[AVPlayerItem _unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:finished:]
-[AVPlayerItem _postSeekCompletionNotificationWithSeekID:andResult:]
Invalid SeekID
seekID was not created by this player item
Seeking is not possible to time %@
toleranceBefore seekToTime must be valid
toleranceBefore seekToTime may not be negative
toleranceAfter seekToTime must be valid
toleranceAfter seekToTime may not be negative
-[AVPlayerItem _seekToTime:toleranceBefore:toleranceAfter:seekID:completionHandler:]
-[AVPlayerItem seekToDate:completionHandler:]
 (must be called from the main queue)
-[AVPlayerItem seekToDate:]
-[AVPlayerItem stepByCount:]
-[AVPlayerItem _updateTimebase]_block_invoke_2
preferredForwardBufferDuration >= 0.0
AudioCurves
-[AVPlayerItem _setAudioEffectParameters:forTrackID:]
AVVideoCompositions using AVVideoCompositionCoreAnimationTool cannot be used with AVPlayerItem. AVVideoCompositionCoreAnimationTool is for offline rendering only.
-[AVPlayerItem _setVideoCompositionInstructions:]
BytesStillNeededToEnd
DurationFromNowToEnd
CurrentMeasuredBytesPerSecond
RawMeasuredBytesPerSecond
BandwidthSlopFactor
EstimatedTimeToLikelyToKeepUp
RemoteIPAddress
Default
-[AVPlayerItem _applyMediaSelectionOptions]_block_invoke
-[AVPlayerItem _selectMediaOption:inMediaSelectionGroup:]
-[AVPlayerItem selectMediaOption:inMediaSelectionGroup:]
-[AVPlayerItem selectMediaOption:inMediaSelectionGroup:]_block_invoke
-[AVPlayerItem selectMediaOptionAutomaticallyInMediaSelectionGroup:]
-[AVPlayerItem _currentMediaSelectionFromFigSelectedMediaArray:]
-[AVPlayerItem _setCurrentMediaSelection:]
-[AVPlayerItem currentMediaSelection]
^{OpaqueFigPlayerInterstitialCoordinator=}8@?0
-[AVPlayerItem _updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:]
canPlaySlowForward
canPlayFastForward
canPlayReverse
canPlaySlowReverse
canPlayFastReverse
canStepForward
canStepBackward
-[AVPlayerItem _updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:]_block_invoke
-[AVPlayerItem _updateItemIdentifierForCoordinatedPlayback]_block_invoke
AVPlayerItem does not support the specified protected content provider
AVPlayerItem could not uninitialize the specified protected content support session
AVPlayerItem._externalProtectionRequiredForPlayback can only be set to YES
Cannot get rental expiration date information from an AVPlayerItem that does not contain rental content
Cannot get rental playback date information from an AVPlayerItem that does not contain rental content or when rental playback has not started
playerReference != nil
playerItemReference != nil
<%@: %p, player = %@, playerItem = %@>
Player connections are one-shot objects.  Cannot connect a player connection that was already disconnected.  To re-connect an AVPlayerItem to an AVPlayer, create a new player AVPlayerConnection object
Cannot connect a player connection that is already connected
-[AVPlayerConnection addItemToPlayQueueAfterPlaybackItemOfItem:]
Cannot disconnect a player connection that was already disconnected
-[AVPlayerItem(AVPlayerItemOutputs) _evaluateMetadataOutputs]_block_invoke
Cannot attach AVPlayerItemSampleBufferOutput to AVPlayerItem
Cannot attach an output that is already attached or nil output
Cannot attach a collector that is already attached
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSObject)]
newAVKitData == nil || [newAVKitData conformsToProtocol:@protocol(NSCopying)]
None
Adaptive
LivePhoto
DigitalZoom
-[AVPlayerItem(AVPlayerItemVideoEnhancement) setVideoEnhancementMode:]
cmTimebaseNotificationCallback_TimeJumped
basics
avplayeritem_fpItemNotificationCallback_block_invoke
hasEnabledAudio
hasEnabledVideo
hasVideo
nonForcedSubtitleDisplayEnabled
avplayeritem_fpItemNotificationCallback_block_invoke_7
playback
inspection
avplayeritem_fpItemNotificationCallback_block_invoke_2
playbackLikelyToKeepUp
playbackBufferEmpty
playbackBufferFull
seekableTimeRanges
seekableTimeRangesLastModifiedTime
loadedTimeRanges
avplayeritem_fpItemNotificationCallback_block_invoke_6
avplayeritem_fpItemNotificationCallback_block_invoke_3
AVPlayerItemWasRemovedFromPlayQueueNotification
avplayeritem_fpItemNotificationCallback_block_invoke_4
not spatial
avplayeritemtrack_trace
com.apple.avplayeritemtrack.ivars
<%@: %p, assetTrack = %@>
-[AVPlayerItemTrack currentVideoFrameRate]
<rdar://100445728> CurrentVideoFrameRate type is not CFNumberRef, value = {%@}
<rdar://100445728> failed to get content of CurrentVideoFrameRate
VideoEnhancementFilterOptions
DisableColorMatching
ActiveHapticChannelIndex
Volume
Cannot add any AVPlayerItemOutput other than AVPlayerItemSampleBufferOutput to AVPlayerItemTrack
-[AVPlayerItemTrack(AVPlayerItemOutputs) addOutput:]
Cannot remove any AVPlayerItemOutput other than AVPlayerItemSampleBufferOutput from AVPlayerItemTrack
-[AVPlayerItemTrack(AVPlayerItemOutputs) removeOutput:]
avqueueplayer_trace
-[AVQueuePlayer insertItem:afterItem:]
-[AVQueuePlayer removeItem:]
-[AVQueuePlayer removeAllItems]
-[AVQueuePlayer(AVPlayerAdvanceWithOverlap) canOverlapPlaybackFromPlayerItem:toPlayerItem:]
-[AVSpecifiedLoggingIdentifier initWithSpecifiedName:]
Identifier name must be 6 chars or less
Identifier name must not contain more than one period
Identifier name must not contain non-numeric character after period
avloggingidentifier_trace
%@.%02d
I/%@
-[AVAssetLoggingIdentifier init]
P/%@
-[AVPlayerLoggingIdentifier init]
composition_trace
-[AVComposition _initWithComposition:]
<%@: %p tracks = %@>
-[AVComposition mutableCopyWithZone:]
Cannot honor specified AVURLAsset initialization options for AVMutableComposition <%p>%@
-[AVMutableComposition insertTimeRange:ofAsset:atTime:error:]
-[AVMutableComposition insertEmptyTimeRange:]
-[AVMutableComposition removeTimeRange:]
-[AVMutableComposition scaleTimeRange:toDuration:]
-[AVMutableComposition addMutableTrackWithMediaType:preferredTrackID:]
-[AVMutableComposition removeTrack:]
-[AVMutableComposition mutableTrackCompatibleWithTrack:]
URLAssetInitializationOptions
compositionMetadataArray
trackID
naturalTimeScale
extendedLanguageTag
preferredTransform
preferredVolume
alternateGroupID
formatDescriptionReplacements
originalFormatDescription
replacementFormatDescription
trackMetadataArray
%c%c%c
root
avplayeritemmetadataoutput_trace
[identifiers count] > 0
com.apple.avplayeritemmetadataoutput.ivars
com.apple.avplayeritemmetadataoutput.accumulationqueue
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _signalFlush]_block_invoke
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _signalFlush]_block_invoke_2
-[AVPlayerItemMetadataOutput(AVPlayerItemMetadataOutput_Internal) _pushTimedMetadataGroups:fromPlayerItemTrack:]_block_invoke_3
<%@: %p trackID = %d, mediaType = %@, editCount = %d>
-[AVMutableCompositionTrack setSegments:]
-[AVMutableCompositionTrack insertTimeRange:ofTrack:atTime:error:]
kFigBaseObjectError_ParamErr
Invalid asset track
AVCompositionTrack.m
Count of timeRanges array and count of tracks array do not match.
-[AVMutableCompositionTrack insertTimeRanges:ofTracks:atTime:error:]
-[AVMutableCompositionTrack insertEmptyTimeRange:]
-[AVMutableCompositionTrack removeTimeRange:]
-[AVMutableCompositionTrack scaleTimeRange:toDuration:]
-[AVMutableCompositionTrack validateTrackSegments:error:]
originalFormatDescription != NULL
Media type of the new format description must match that of the existing format description
-[AVNotificationSubscription initWithObject:notificationName:callbackBlock:]
-[AVNotificationSubscription initWithObject:notificationName:callbackBlock:]_block_invoke
-[AVNotificationSubscription cancel]
<%@: %p object=%@>
avpubsub_trace
-[AVPropertyValuePublisher subscribeRequestingInitialValue:block:]_block_invoke
-[AVPropertyValuePublisher subscribeRequestingInitialValue:block:]
<%@: %p key=%@, object=%@, notification=%@>
-[AVMapPublisher subscribeRequestingInitialValue:block:]_block_invoke
<%@: %p upstream=%@>
-[AVSwitchToLatestPublisher subscribeRequestingInitialValue:block:]_block_invoke_2
-[AVSwitchToLatestPublisher subscribeRequestingInitialValue:block:]_block_invoke
v16@?0@"AVPublisher"8
<%@: %p upstream=%@
-[AVSinkSubscriber cancel]
<%@: %p publisher=%@>
MediaUIStyle
MediaUIFullWidth
MediaUIFormatTemplate
arab
-[AVTimeFormatter stringFromTimeInterval:]: unsupported style
%@+%@
-[AVTimeFormatter setStyle:]: unsupported style
AVCrackTime
AVTimeFormatter.m
time >= 0.0
<%@: %p timeRange [%.3f,+%.3f] 
is empty
from trackID %d of asset %@ sourceTimeRange [%.3f,+%.3f]
sourceURL
sourceTrackID
-[AVMutableMovieTrack setPreferredTransform:]
-[AVMutableMovieTrack setLayer:]
-[AVMutableMovieTrack setAlternateGroupID:]
trackGroups
<%@: %p, trackID = %d, mediaType = %@, sampleReferenceBaseURL = %@>
formatDescription != NULL
newFormatDescription != NULL
Source asset must have a value of YES for providesPreciseDurationAndTiming
Media type of sample buffer must match receiver's media type ("%@")
CMSampleBuffers containing image buffers are not supported; you must provide CMSampleBuffers containing encoded video
CMSampleBuffers containing caption groups are not supported; you must provide CMSampleBuffers containing encoded media data
data != nil
the tracks being associated must belong to the same movie
the tracks being dissociated must belong to the same movie
%@ status read/write queue
Cannot initialize an instance of %@ with an asset at non-local URL '%@'
formatReader
<%@: %p, asset = %@, outputs = %@>
cannot be called after reading has started
cannot add an output that has already been added to the receiver
cannot add an output after reading has started
cannot add an output that has already been added to another AVAssetReader
output != nil
finished
v24@?0@"AVAssetReader"8@"NSDictionary"16
cannot be called again after reading has already started
assetreaderoutput_trace
AVAssetReaderOutput.m
The receiver cannot already be attached to an AVAssetReader.
cannot copy next sample buffer before adding this output to an instance of AVAssetReader (using -addOutput:) and calling -startReading on that asset reader
-[AVAssetReaderOutput copyNextSampleBuffer]
timeRanges != nil
Each entry in timeRanges must be an instance of %@
Start time of each time range must be numeric - see CMTIME_IS_NUMERIC
Duration of each time range must be nonnegative & numeric or positive infinity - see CMTIME_IS_NUMERIC
Start time of each time range must be greater than or equal to the end time of the previous time range
cannot be called before reading has started
cannot be called after the asset reader has entered a failure state
cannot be called until all samples have been read (i.e. %@ returns NULL)
cannot be called without setting %@ to YES
cannot be called after calling %@
track != nil
%@ does not currently support AVVideoCleanApertureKey or AVVideoPixelAspectRatioKey
%@ does not currently support AVVideoScalingModeKey
Output settings are not compatible with media type %@
AVAssetReaderOutput does not currently support compressed output
AVAssetReaderOutput does not support AVSampleRateConverterAudioQualityKey
<%@: %p, track = %@, outputSettings = %@>
audioTimePitchAlgorithm must be one of: %@
cannot copy sample buffers when attached to an adaptor
audioTracks != nil
[audioTracks count] >= 1
tracks must all have media type AVMediaTypeAudio
tracks must all be part of the same AVAsset
<%@: %p, audioTracks = %@, audioSettings = %@>
track must be one of the tracks used to create the receiver
videoTracks != nil
[videoTracks count] >= 1
tracks must all have media type AVMediaTypeVideo
%@ does not currently support AVVideoDecompressionPropertiesKey
<%@: %p, videoTracks = %@>
AVAssetReaderVideoCompositionOutput can't use a video composition with a renderScale other than 1.0
*** AVAssetReaderVideoCompositionOutput.videoComposition needs to be set
<%@: %p, track = %@>
figAssetReaderSampleBufferDidBecomeAvailable
figAssetReaderDecodeError
figAssetReaderFailed
assetwriter_trace
outputURL != nil
[outputURL isFileURL]
outputFileType != nil
outputContentType != nil
%@ helper read/write queue
<%@: %p, outputURL = %@, outputFileType = %@>
helper
CMTIME_COMPARE_INLINE(interval, >=, kCMTimeZero)
(CMTIME_IS_NUMERIC(hint) && CMTIME_COMPARE_INLINE(hint, >=, kCMTimeZero)) || CMTIME_IS_INVALID(hint)
movieTimeScale >= 0
0 < sequenceNumber
fileSize > 0
mediaDataSize > 0
-[AVAssetWriter addInput:]
inputGroup != nil
-[AVAssetWriter addInputGroup:]
-[AVAssetWriter startWriting]
CMTIME_IS_NUMERIC(startTime)
-[AVAssetWriter startSessionAtSourceTime:]
CMTIME_IS_NUMERIC(endTime)
-[AVAssetWriter endSessionAtSourceTime:]
-[AVAssetWriter cancelWriting]
-[AVAssetWriter finishWriting]
-[AVAssetWriter finishWritingWithCompletionHandler:]
-[AVAssetWriter flush]
-[AVAssetWriter flushSegment]
-flushSegment can be called only if the delegate method to output segment data is implemented.
-flushSegment can be called only if the value of the preferredOutputSegmentInterval property is kCMTimeIndefinite.
[configurationState mediaFileType] != nil
[configurationState inputs] != nil
[configurationState inputGroups] != nil
[configurationState metadataItems] != nil
Cannot use the virtual capture card
The output file type %@ does not support mutually exclusive relationships among tracks.
At least one AVAssetWriterInput in the given inputGroup is also present in an inputGroup already added.
At least one provisional AVAssetWriterInput in the given inputGroup is also present as a provisional input in an inputGroup already added.
figFragmentedMediaDataReportDict != nil
-[AVAssetWriterWritingHelper initWithConfigurationState:assetWriter:error:]
com.apple.avfoundation.avassetwriter.writing.assetwriteraccessqueue
The outputURL and the delegate method to output segment data cannot be specified at same time. Only one of them must be specified.
The outputURL and the delegate method to produce fragmented data cannot be specified at same time. Only one of them must be specified.
The delegate method to output segment data and the delegate method to produce fragmented data cannot be specified at same time. Only one of them must be specified.
Neither the outputURL nor the delegate method to output segment data is specified. One of them must be specified.
The value of the outputFileTypeProfile property must be file type profile AppleHLS or CMAFCompliant to output segment data.
The value of the outputFileType must be AVFileTypeMPEG4 for file type profile %@.
The value of the preferredOutputSegmentInterval property must be kCMTimeIndefinite or a positive numeric time to output segment data.
The value of the initialSegmentStartTime property must be a numeric time to output segment data.
AVAssetWriter supports file type profile %@ if the delegate method to output segment data is implemented. Please use -initWithContentType: initializer and implement -assetWriter:didOutputSegmentData:segmentType:segmentReport: or -assetWriter:didOutputSegmentData:segmentType: delegate method.
The preferredOutputSegmentInterval property is used if the delegate method to output segment data is implemented. Please use -initWithContentType: initializer and implemen -assetWriter:didOutputSegmentData:segmentType:segmentReport: or -assetWriter:didOutputSegmentData:segmentType: delegate method.
Media type '%@' is not allowed for file type profile %@.
More than one track is not allowed for file type profile %@.
Closed caption track is not allowed for file type profile %@.
Metadata track is not allowed for file type profile %@.
More than one video track is not allowed for file type profile %@.
More than one audio track is not allowed for file type profile %@.
More than one closed caption track is not allowed for file type profile %@.
More than one metadata track is not allowed for file type profile %@.
Closed caption track must accompany video track for file type profile %@.
Metadata track must accompany video track or audio track for file type profile %@.
AVAssetWriter does not support encoding of video track and passthrough of audio track at same time for file type profile %@. Please match both AVAssetWriterInput's output settings.
AVAssetWriter does not support encoding of audio track and passthrough of video track at same time for file type profile %@. Please match both AVAssetWriterInput's output settings.
If the value of the preferredOutputSegmentInterval property is a positive numeric time, AVAssetWriter does not support passthrough of video track and audio track at same time for file type profile %@. Please specify a non-nil output settings dictionary for both AVAssetWriterInput. Otherwise, please add one of them.
If the value of the preferredOutputSegmentInterval property is kCMTimeIndefinite, AVAssetWriter only supports pssthrough for file type profile %@. Please specify nil for all AVAssetWriterInput's output settings.
Cannot end a session without first starting a session
-[AVAssetWriterWritingHelper cancelWriting]
WARNING: -finishWriting should not be called on the main thread.
-[AVAssetWriterWritingHelper finishWriting]_block_invoke
q16@?0^@8
com.apple.avfoundation.assetwriter.finishwriting
-[AVAssetWriterWritingHelper finishWritingWithCompletionHandler:]_block_invoke
Finish writing file at %@, initiated by %@
Prepare for finishing input %@
assetWriter != nil
figAssetWriter != NULL
Call finish-writing delegate
+[AVAssetWriterWritingHelper finalStepWorkaroundOperationWithFigAssetWriter:]_block_invoke
Invalidate FigAssetWriter, to ensure that audio files are finalized properly
-[AVAssetWriterFinishWritingHelper initWithConfigurationState:finishWritingOperations:figAssetWriterCallbackContextToken:]_block_invoke
Transition to terminal status
-[AVAssetWriterFinishWritingHelper _finishWritingOperationsDidFinish]
Not available.  Use %@ instead.
-[AVFigAssetWriterFinishWritingAsyncOperation start]
-[AVFigAssetWriterFinishWritingAsyncOperation cancel]
-[AVFigAssetWriterFinishWritingAsyncOperation didEnterTerminalState]
-[AVFigAssetWriterFinishWritingAsyncOperation didReceiveFigAssetWriterNotificationWithSuccess:error:]
terminalError != nil
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled)
configurationState != nil
Cannot call method when status is %d
media type %@ is not allowed for this asset writer
In order to perform passthrough to file type %@, please provide a format hint in the AVAssetWriterInput initializer
AVAssetWriter does not support passthrough for media type %@ to file type %@.
  Please specify a non-nil output settings dictionary.
AVAssetWriter does not support passthrough of media with type '%@' and subtype '%@' to file type %@
AVAssetWriter currently does not support writing uncompressed video in a specific format.
Output settings must match supplied media type.  Media type %@ is not compatible with output settings %@.
output file type %@ does not support track associations
inputs != nil
[inputs count] > 0
defaultInput == nil || [inputs containsObject:defaultInput]
metadata
trackReferences
options
! [[NSSet setWithArray:inputs] intersectsSet:[NSSet setWithArray:provisionalInputs]]
[inputs count] > 0 || [provisionalInputs count] > 0
displaysNonForcedSubtitles
AVAssetWriterFigAssetWriterHandleCompletedNotification
AVAssetWriterFigAssetWriterHandleFailedNotification
AVAssetWriterInputGroupOptionsChangedContext
UnsafeUnretainedPointerData
AVCoordinatedPlaybackSuspensionReasonAudioSessionInterrupted
AVCoordinatedPlaybackSuspensionReasonStallRecovery
AVCoordinatedPlaybackSuspensionReasonPlayingInterstitial
AVCoordinatedPlaybackSuspensionReasonCoordinatedPlaybackNotPossible
AVCoordinatedPlaybackSuspensionReasonUserActionRequired
AVCoordinatedPlaybackSuspensionReasonUserIsChangingCurrentTime
AVPlaybackCoordinatorOtherParticipantsDidChangeNotification
AVPlaybackCoordinatorSuspensionReasonsDidChangeNotification
Identifier
OriginatorUUID
Time
NetworkTime
Rate
PrerollRate
SeekPrecision
LamportTimestamp
IsAuthoritative
UUID
ProtocolVersion
SuspensionReasons
CoordinatingStart
ReadyToSetNonZeroRate
CurrentIdentifier
NextIdentifier
ExpectedEndTime
Cannot initialize AVCoordinatedPlaybackSuspension with nil reason.
-[AVCoordinatedPlaybackSuspension initWithCoordinator:reason:]
avplaybackcoordinator_trace
-[AVPlaybackCoordinator init] unavailable
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectNotification
AVPlaybackCoordinatorItemIdentifierForCoordinatedPlaybackDidChangeNotification
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyParticipantUUID
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyCommand
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyRate
AVPlaybackCoordinatorDidIssueCommandToPlaybackObjectKeyTime
AVPlaybackCoordinatorPlaybackObjectCommandSetRate
AVPlaybackCoordinatorPlaybackObjectCommandSetTime
AVPlaybackCoordinatorPlaybackObjectCommandSetRateAndTime
com.apple.avplaybackcoordinator.ivars
com.apple.avplaybackcoordinator.figplaybackcoordinator.config
-[AVPlayerPlaybackCoordinator _addFigPlaybackCoordinatorListeners:]_block_invoke
figPlaybackCoordinator != NULL
FigPlaybackCoordinator associated with an AVPlayer should not change
-[AVPlayerPlaybackCoordinator setFigPlaybackCoordinator:]_block_invoke_2
-[AVPlayerPlaybackCoordinator setFigPlaybackCoordinator:]_block_invoke
-[AVPlayerPlaybackCoordinator setDelegate:]
-[AVPlayerPlaybackCoordinator _setIsInExpanseMediaPlaybackOnAVAudioSession]
true
false
B32@?0@"AVCoordinatedPlaybackParticipant"8Q16^B24
-[AVPlayerPlaybackCoordinator participantForIdentifier:]_block_invoke
-[AVPlayerPlaybackCoordinator setCoordinationMediumDelegate:]
-[AVPlayerPlaybackCoordinator _updateTransportControlStateDictionaryWithTransportControlState:]_block_invoke
B32@?0@"NSDictionary"8Q16^B24
-[AVPlayerPlaybackCoordinator handleNewTransportControlStateDictionary:]_block_invoke
-[AVPlayerPlaybackCoordinator handleNewTransportControlStateDictionary:]
-[AVPlayerPlaybackCoordinator handleNewParticipantStateDictionary:]_block_invoke
-[AVPlayerPlaybackCoordinator handleNewParticipantStateDictionary:]
-[AVPlayerPlaybackCoordinator handleReplacementParticipantStateDictionaries:]_block_invoke
-[AVPlayerPlaybackCoordinator handleReplacementParticipantStateDictionaries:]
-[AVPlayerPlaybackCoordinator beginSuspensionForReason:]
-[AVPlayerPlaybackCoordinator _endSuspension:]
-[AVPlayerPlaybackCoordinator _endSuspension:proposingNewTime:]
-[AVPlayerPlaybackCoordinator _setWaitingPolicies:onFigPlaybackCoordinator:]
-[AVPlayerPlaybackCoordinator setPauseSnapsToMediaTimeOfOriginator:]_block_invoke_2
AVPlayerPlaybackCoordinatorBroadcastTransportControlStateCallback
AVPlayerPlaybackCoordinatorBroadcastParticipantStateCallback
AVPlayerPlaybackCoordinatorAsynchronouslyReloadTransportControlStateCallback
AVOutputDeviceAuthorizationRequestRetryReasonIncorrectAuthorizationToken
AVOutputDeviceAuthorizationTokenTypePassword
AVOutputDeviceAuthorizationTokenTypePIN
outputdeviceauthorizationsession_trace
-[AVOutputDeviceAuthorizationSession initWithOutputDeviceAuthorizationSessionImpl:]
com.apple.avfoundation.outputdeviceauthorizationsession.ivars
-[AVOutputDeviceAuthorizationSession setDelegate:]
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:]
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:]
-[AVOutputDeviceAuthorizationSession outputDeviceAuthorizationSessionImplDidExpireWithReplacementImpl:]
com.apple.avfoundation.output-device-auth-session.ivars
<%@: %p, ID=%@, outputDevice=%@, tokenType=%@>
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]
-[AVOutputDeviceAuthorizationRequest respondWithAuthorizationToken:completionHandler:]_block_invoke
v24@?0q8@"NSError"16
-[AVOutputDeviceAuthorizationRequest cancel]
AVAssetWriterInputMediaDataLocationInterleavedWithMainMediaData
AVAssetWriterInputMediaDataLocationBeforeMainMediaDataNotInterleaved
AVAssetWriterInputMediaDataLocationSparselyInterleavedWithMainMediaData
assetwriterinput_trace
mediaType != nil
The media type of sourceFormatHint must match mediaType
Width and height of video format hint must be positive
Output settings must match supplied media type
AVAssetWriterInput does not currently support AVVideoScalingModeFit
AVAssetWriterInput does not support AVSampleRateConverterAudioQualityKey
AVAssetWriterInput does not support AVVideoDecompressionPropertiesKey
<%@: %p> helper queue
<%@: %p> "number of append failures" read/write queue
currentPassDescription
<%@: %p, mediaType = %@, outputSettings = %@>
-[AVAssetWriterInput _setHelper:]_block_invoke
mediaTimeScale >= 0
naturalSize.width >= 0.0 && naturalSize.height >= 0.0
Cannot set marksOutputTrackAsEnabled of the receiver in an input group
media chunk duration must be numeric.  See CMTIME_IS_NUMERIC
media chunk duration must be a positive value
AVAssetWriterInput.m
preferredMediaChunkAlignment >= 0
preferredMediaChunkSize >= 0
-[AVAssetWriterInput _prepareToFinishWritingReturningError:]
canPerformMultiplePasses
readyForMoreMediaData
pixelBufferPool
-[AVAssetWriterInput respondToEachPassDescriptionOnQueue:usingBlock:]
cannot be called more than once.
-[AVAssetWriterInput requestMediaDataWhenReadyOnQueue:usingBlock:]
-[AVAssetWriterInput appendSampleBuffer:]
Cannot append sample buffer: %@
-[AVAssetWriterInput markAsFinished]
-[AVAssetWriterInput markCurrentPassAsFinished]
trackAssociationType != nil
[configurationState trackReferences] != nil
Cannot set a non-default media time scale on an asset writer input with media type AVMediaTypeAudio
languageCode %@ does not conform to the ISO 639-2/T language code
extendedLanguageTag %@ does not conform to the IETF BCP 47 (RFC 4646) language identifier
performsMultiPassEncodingIfSupported
Associations of type AVTrackAssociationTypeForcedSubtitlesOnly are supported only between tracks with media type AVMediaTypeSubtitle or AVMediaTypeText.
Associations of type AVTrackAssociationTypeSelectionFollower are supported only between AVMediaTypeAudio and AVMediaTypeSubtitle tracks.
Associations of type AVTrackAssociationTypeChapterList are supported only between (AVMediaTypeVideo/AVMediaTypeAudio) and (AVMediaTypeVideo/AVMediaTypeMetadata/AVMediaTypeText) tracks.
Associations of type AVTrackAssociationTypeMetadataReferent are supported only between tracks of mediaType AVMediaTypeMetadata and other tracks.
trackAssociationType %@ must be 4 characters long.
cannot be called before attaching to an instance of AVAssetWriter and calling -startWriting on this attached asset writer
assetWriterTrack != nil
AVAssetWriterInputWritingHelperMediaDataRequester
AVAssetWriterInputWritingHelperReadyForMoreMediaDataObserver
assetWriterTrack
aboveHighWaterLevel
-[AVAssetWriterInputWritingHelper observeValueForKeyPath:ofObject:change:context:]
-[AVAssetWriterInputWritingHelper appendSampleBuffer:error:]
readyForMoreMediaData is NO.
-[AVAssetWriterInputWritingHelper appendPixelBuffer:withPresentationTime:]
A pixel buffer cannot be appended when readyForMoreMediaData is NO.
-[AVAssetWriterInputWritingHelper transitionToAndReturnTerminalHelperWithTerminalStatus:]
A pixel buffer pool cannot be created with the receiver's sourcePixelBufferAttributes. The pixel buffer attributes must specify a width, height, and either a pixel format or a pixel format description.
writingHelper != nil
-[AVAssetWriterInputInterPassAnalysisHelper startPassAnalysis]_block_invoke
v28@?0B8@"AVAssetWriterInputPassDescription"12@"NSError"20
cannot be called between the invocation of %@ and the beginning of the next pass
not allowed between the invocation of %@ and the beginning of the next pass
Cannot call %@ more than once for the same pass
cannot be called when no media data is being requested.  Check the value of %@.
not allowed when no media data is being requested.  Check the value of %@.
cannot be called after the final pass
(terminalStatus == AVAssetWriterStatusCompleted) || (terminalStatus == AVAssetWriterStatusCancelled) || (terminalStatus == AVAssetWriterStatusFailed)
cannot be called after canceling or finishing writing
-[AVAssetWriterInputTerminalHelper appendSampleBuffer:error:]
-[AVAssetWriterInputTerminalHelper appendPixelBuffer:withPresentationTime:]
<%@: %p, status=%d>
[[input mediaType] isEqualToString:AVMediaTypeVideo] || [[input mediaType] isEqualToString:AVMediaTypeAuxiliaryPicture]
Cannot create a new pixel buffer adaptor with an asset writer input that is already attached to a pixel buffer adaptor
Cannot create a new pixel buffer adaptor with an asset writer input that has already started writing
<%@: %p, assetWriterInput = %@, sourcePixelBufferAttributes = %@>
assetWriterInput
pixelBuffer != NULL
CMTIME_IS_NUMERIC(presentationTime)
mediaFileType != nil
<%@: %p> water level queue
com.apple.avfoundation.assetwriterinput
-[AVFigAssetWriterTrack _refreshAboveHighWaterLevel]_block_invoke
Input buffer must be in an uncompressed format when outputSettings is not nil
First input buffer must have an appropriate kCMSampleBufferAttachmentKey_TrimDurationAtStart since the codec has encoder delay
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) first
Must start a session (using -[AVAssetWriter startSessionAtSourceTime:) before appending pixel buffers
-[AVFigAssetWriterTrack endPassWithCompletionHandler:]
com.apple.avfoundation.assetwriterinput.endpass
-[AVFigAssetWriterTrack setFormatDescriptions:]
com.apple.avfoundation.mediadatarequester.ivars
-[AVAssetWriterInputMediaDataRequester requestMediaDataIfNecessary]
AVAssetWriterInputPassDescriptionResponder serialization queue
-[AVAssetWriterInputPassDescriptionResponder respondToNewPassDescription:]
-[AVAssetWriterInputPassDescriptionResponder respondToNewPassDescription:]_block_invoke
trackID != kCMPersistentTrackID_Invalid
-[AVAssetWriterInputFigAssetWriterEndPassOperation dealloc]
-[AVAssetWriterInputFigAssetWriterEndPassOperation start]
-[AVAssetWriterInputFigAssetWriterEndPassOperation _notifyWhetherMorePassesAreNeeded:timeRanges:forTrackWithID:]
<%@: %p, sourceTimeRanges=%@>
AVAssetWriterInputCurrentPassDescriptionChangeContext
AVAssetWriterInputWritingHelperNudgeMediaDataRequesterObservationContext
AVAssetWriterInputFigAssetWriterEndPassOperationPassFinished
VideoCompositor_DeviceSpecific
VideoCompositor_Basic
VideoCompositor_OpenGL
StartTime
EndTime
BackgroundColorARGB
BackgroundColorICCProfile
LayerStack
ContainsTweening
InstructionIdentifier
RequiredSampleDataTrackIDArray
SourceVideoTrackID
ConstantOpacity
TweenedOpacity
ConstantAffineMatrix
TweenedAffineMatrix
EnablePostProcessing
RequiredVideoTrackIDArray
PassthroughSourceVideoTrackID
AVVideoCompositionInstruction
TweenedCropRectangle
-[AVVideoCompositionInstruction dictionaryRepresentation]
AVVideoCompositionInstruction %@
AVVideoCompositionLayerTrackID
AVVideoCompositionLayerTransformRamps
AVVideoCompositionLayerOpacityRamps
AVVideoCompositionLayerCropRectangleRamps
The timeRange of a transform ramp must not overlap the timeRange of an existing transform ramp.
StartTransform
EndTransform
The time of a transform setting must be numeric.
The timeRange of a transform ramp must have a numeric start time and a numeric duration.
The timeRange of an opacity ramp must not overlap the timeRange of an existing opacity ramp.
The time of an opacity setting must be numeric.
The timeRange of an opacity ramp must have a numeric start time and a numeric duration.
The timeRange of a crop rectangle ramp must not overlap the timeRange of an existing crop rectangle ramp.
StartCropRectangle
EndCropRectangle
The time of a crop rectangle setting must be numeric.
The timeRange of a crop rectangle ramp must have a numeric start time and a numeric duration.
ConstantCropRectangle
avvideocomposition_trace
-[AVVideoComposition init]
-[AVVideoComposition _copyFigVideoCompositor:andSession:recyclingSession:forFigRemaker:error:]
video composition must have a positive renderSize
video composition must have a positive renderScale
video composition must have a positive frameDuration
video composition must have a positive sourceTrackIDForFrameTiming
customVideoCompositorClass
renderSize
renderScale
frameDuration
sourceTrackIDForFrameTiming
instructions
handler
applier != nil
v24@?0@"AVMutableVideoComposition"8@"NSError"16
AVAssetExportPresetLowQuality
AVAssetExportPresetMediumQuality
AVAssetExportPresetHighestQuality
AVAssetExportPreset640x480
AVAssetExportPreset1280x720
AVAssetExportPreset960x540
AVAssetExportPreset1920x1080
AVAssetExportPreset3840x2160
AVAssetExportPresetHEVCHighestQuality
AVAssetExportPresetHEVCHighestQualityWithAlpha
AVAssetExportPresetHEVC1920x1080
AVAssetExportPresetHEVC1920x1080WithAlpha
AVAssetExportPresetHEVC3840x2160
AVAssetExportPresetHEVC3840x2160WithAlpha
AVAssetExportPresetHEVC7680x4320
AVAssetExportPresetAppleM4A
AVAssetExportPresetVoiceMemoALAC
AVAssetExportPresetAppleProRes422LPCM
AVAssetExportPresetAppleProRes4444LPCM
AVAssetExportPresetPassthrough
AVAssetExportPresetPhotoStream
AVAssetExportPresetPhotoStreamHD
AVAssetExportPresetICPL480x480
AVAssetExportPresetICPL
AVAssetExportPresetICPL960x960
AVAssetExportPresetICPLHD
AVAssetExportPresetICPLHEVC1920x1080
AVAssetExportPresetICPLHEVC960x960WithHDR
AVAssetExportPresetICPLHEVC1280x1280WithHDR
AVAssetExportPresetICPLHEVC1440x1440WithHDR
AVAssetExportPresetICPLHEVC1920x1920WithHDR
AVAssetExportPresetICPLAux
AVAssetExportPresetICPLAuxHD
AVAssetExportPresetAuxSmall
AVAssetExportPresetMMS
AVAssetExportPreset3GPRelease6MMS
AVAssetExportPresetAudioOnlyMMS
AVAssetExportPresetYouTube
AVAssetExportPresetMail
AVAssetExportPresetHEVCAnimojiWithAlpha
AVAssetExportPresetAVCAnimoji
AVAssetExportPresetYouTubeHD
AVAssetExportPresetMessage
AVAssetExportPresetMessageHEVCWithHDR
AVAssetExportPresetMessageAudio
AVAssetExportPresetMessageAux
handler cannot be nil
completionHandler is nil
avexport_trace
-[AVAssetExportSession initWithAsset:presetName:]
<%@: %p, asset = %@, presetName = %@, outputFileType = %@
Cannot alter output file type attribute on an AVAssetExportSession after an export has started.
Cannot set outputFileType to nil
Invalid output file type
Cannot alter output URL attribute on an AVAssetExportSession after an export has started.
Cannot set outputURL to nil
Cannot call exportAsynchronouslyWithCompletionHandler: more than once.
outputURL cannot be nil
Cannot set both audioMix and audioOutputGroupHandling.
outputFileType cannot be nil
Cannot alter time range attribute on an AVAssetExportSession after an export has started.
Cannot alter min frame duration attribute on an AVAssetExportSession after an export has started.
Cannot set non-numeric min video frame duration.
Min video frame duration must be greater than zero.
Cannot alter max frame duration attribute on an AVAssetExportSession after an export has started.
Invalid frame rate conversion algorithm.
Cannot alter preserve sync frame attribute on an AVAssetExportSession after an export has started.
timeRange
Cannot alter metadata attribute on an AVAssetExportSession after an export has started.
Cannot alter metadataItemFilter attribute on an AVAssetExportSession after an export has started.
Cannot alter output file length limit attribute on an AVAssetExportSession after an export has started.
-[AVAssetExportSession setFileLengthLimit:]
-[AVAssetExportSession setMaximizePowerEfficiency:]
Cannot alter audio time pitch algorithm attribute on an AVAssetExportSession after an export has started.
Cannot alter audio mix attribute on an AVAssetExportSession after an export has started.
Cannot alter output audioTrackGroupHandling attribute on an AVAssetExportSession after an export has started.
Cannot alter video composition attribute on an AVAssetExportSession after an export has started.
video composition must have composition instructions
renderScale must be 1.0 when used with AVAssetExportSession.
Cannot alter optimize for network use attribute on an AVAssetExportSession after an export has started.
Cannot alter canPerformMultiplePassesOverSourceMediaData attribute on an AVAssetExportSession after an export has started.
Cannot alter directoryForTemporaryFiles attribute on an AVAssetExportSession after an export has started.
AVContentKeyRequestProtocolVersionsKey
avstreamdataparser_trace
-[AVStreamDataParser init]
com.apple.AVStreamDataParser._threadSafetyQ
-[AVStreamDataParser dealloc]
must only set allowableMIMETypes before any stream data is appended
Ignoring appendStreamData:withFlags: because we're failed or expired, create a new AVStreamDataParser to try again
-[AVStreamDataParser _appendStreamData:withFlags:]
Ignoring providePendingMediaData because we're failed or expired, create a new AVStreamDataParser to try again
-[AVStreamDataParser providePendingMediaData]
trackID must be valid
-[AVStreamDataParser setShouldProvideMediaData:forTrackID:]
-[AVStreamDataParser _createAssetIfNecessary]
figManifold
sbuf
flags
avc3
avc1
hev1
hvc1
dvhe
dvh1
+[AVStreamDataParser(AVStreamDataParser_FigManifold) _createBlockBufferUsingNSData:withOffset:withLength:]
data
contiguousBlock
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _figManifold:pushedSampleBuffer:trackID:flags:]
Aborting parsing due to unsupported interleaving, cache size %d bytes exceeding %d
Aborting parsing due to unsupported interleaving, cache duration %.3f seconds exceeding %.3f
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _figManifold:trackDidEnd:]
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _figManifold:formatDescription:orDecryptorDidChange:forTrackID:]
(OSStatus)error.code
could not create trackDecryptor
AVStreamDataParser.m
formatDescription
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _registerForFigManifoldCallbacksForTrackID:]
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _unregisterForFigManifoldCallbacksForTrackID:]
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _figManifoldAllNewTracksReady:]
-[AVStreamDataParser(AVStreamDataParser_FigManifold) _figManifold:discoveredNewTrackID:mediaType:]
-[AVStreamDataParser(AVStreamDataParser_ContentKeySessionDelegate) contentKeySession:didProvideContentKeyRequest:]
AVStreamDataParser can't attach to an AVContentKeySession when it's already attached to an AVStreamSession
AVStreamDataParser can't attach to an AVContentKeySession after it started using its own AVContentKeySession for key loading
com.apple.coremedia
DeviceClass
iPad
com.apple.avfoundation.internal-build-allow-avstreamdataparser
%02x
%d bytes [ %@ ] [ %@ ]
sinf
codc
mtyp
cont
mpts
_sampleDescriptionExtensionAtomForKey
_figManifoldError
mediaDataConsumer != nil
requestQueue != NULL
requestBlock != nil
[mediaDataConsumer respondsToSelector:@selector(isReadyForMoreMediaData)]
-[AVAPSyncOutputDeviceCommunicationChannelManager initWithDeviceID:syncController:]
com.apple.avfoundation.device-comm-channel-manager
-[AVAPSyncOutputDeviceCommunicationChannelManager dealloc]
-[AVAPSyncOutputDeviceCommunicationChannelManager openCommunicationChannelWithOptions:completionHandler:]
-[AVAPSyncOutputDeviceCommunicationChannelManager openCommunicationChannelWithOptions:completionHandler:]_block_invoke
v36@?0^{OpaqueAPSyncController=}8i16^{__CFString=}20^{__CFDictionary=}28
-[AVAPSyncOutputDeviceCommunicationChannelManager _didReceiveData:fromDeviceWithID:fromChannelWithUUID:]
-[AVAPSyncOutputDeviceCommunicationChannelManager _didCloseCommChannelWithUUID:forDeviceWithID:]
-[AVAPSyncOutputDeviceCommunicationChannelManager _didCloseCommChannelWithUUID:forDeviceWithID:]_block_invoke
-[AVAPSyncOutputDeviceCommunicationChannelImpl sendData:completionHandler:]
AVAPSyncOutputDeviceCommunicationChannelManagerOpenCompletion
AVAPSyncOutputDeviceCommunicationChannelManagerDidReceiveData
AVAPSyncOutputDeviceCommunicationChannelManagerDidCloseCommChannel
AVAPSyncOutputDeviceCommunicationChannelSendDataCompletion
avsynchronizedlayer_trace
AVSynchronizedLayerQueue
com.apple.avsynchronizedlayer.ivars
common/title
common/creator
common/subject
common/description
common/publisher
common/contributor
common/creationDate
common/lastModifiedDate
common/type
common/format
common/identifier
common/source
common/language
common/relation
common/location
common/copyrights
common/albumName
common/author
common/artist
common/artwork
common/make
common/model
common/software
common/accessibilityDescription
udta/%A9alb
udta/%A9arg
udta/%A9ART
udta/%A9aut
udta/%A9chp
udta/%A9cmt
udta/%A9com
udta/%A9cpy
udta/%A9day
udta/%A9des
udta/%A9dir
udta/%A9dis
udta/%A9enc
udta/%A9nam
udta/%A9gen
udta/%A9hst
udta/%A9inf
udta/%A9key
udta/%A9mak
udta/%A9mod
udta/%A9ope
udta/%A9fmt
udta/%A9src
udta/%A9prf
udta/%A9prd
udta/%A9pub
udta/%A9PRD
udta/%A9swr
udta/%A9req
udta/%A9trk
udta/%A9wrn
udta/%A9wrt
udta/%A9url
udta/%A9xyz
udta/tnam
udta/%A9phg
udta/name
udta/tagc
udta/%A9ade
uiso/cprt
uiso/date
uiso/tagc
uiso/ades
uiso/auth
uiso/perf
uiso/gnre
uiso/yrrc
uiso/loci
uiso/titl
uiso/dscp
uiso/coll
uiso/urat
uiso/thmb
uiso/albm
uiso/kywd
uiso/clsf
uiso/rtng
mdta/com.apple.quicktime.author
mdta/com.apple.quicktime.comment
mdta/com.apple.quicktime.copyright
mdta/com.apple.quicktime.creationdate
mdta/com.apple.quicktime.director
mdta/com.apple.quicktime.displayname
mdta/com.apple.quicktime.information
mdta/com.apple.quicktime.keywords
mdta/com.apple.quicktime.producer
mdta/com.apple.quicktime.publisher
mdta/com.apple.quicktime.album
mdta/com.apple.quicktime.artist
mdta/com.apple.quicktime.artwork
mdta/com.apple.quicktime.description
mdta/com.apple.quicktime.software
mdta/com.apple.quicktime.year
mdta/com.apple.quicktime.genre
mdta/info.ixml.xml
mdta/com.apple.quicktime.location.ISO6709
mdta/com.apple.quicktime.make
mdta/com.apple.quicktime.model
mdta/com.apple.quicktime.arranger
mdta/com.apple.quicktime.encodedby
mdta/com.apple.quicktime.originalartist
mdta/com.apple.quicktime.performer
mdta/com.apple.quicktime.composer
mdta/com.apple.quicktime.credits
mdta/com.apple.quicktime.phonogramrights
mdta/com.apple.quicktime.camera.identifier
mdta/com.apple.quicktime.camera.framereadouttimeinmicroseconds
mdta/com.apple.quicktime.title
mdta/com.apple.quicktime.collection.user
mdta/com.apple.quicktime.rating.user
mdta/com.apple.quicktime.location.name
mdta/com.apple.quicktime.location.body
mdta/com.apple.quicktime.location.note
mdta/com.apple.quicktime.location.role
mdta/com.apple.quicktime.location.date
mdta/com.apple.quicktime.direction.facing
mdta/com.apple.quicktime.direction.motion
mdta/com.apple.quicktime.detected-face
mdta/com.apple.quicktime.detected-human-body
mdta/com.apple.quicktime.detected-cat-body
mdta/com.apple.quicktime.detected-dog-body
mdta/com.apple.quicktime.detected-salient-object
mdta/com.apple.quicktime.preferred-affine-transform
mdta/com.apple.quicktime.video-orientation
mdta/com.apple.quicktime.content.identifier
mdta/com.apple.quicktime.accessibility.description
mdta/com.apple.quicktime.core-motion
mdta/com.apple.quicktime.camera-debug-info
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-numerator
mdta/com.apple.quicktime.live-photo.video-stabilization-crop-percentage-denominator
mdta/com.apple.quicktime.is-montage
mdta/com.apple.quicktime.live-photo.auto
mdta/com.apple.quicktime.live-photo.vitality-score
mdta/com.apple.quicktime.live-photo.vitality-scoring-version
mdta/com.apple.quicktime.spatial-overcapture.quality-score
mdta/com.apple.quicktime.spatial-overcapture.quality-scoring-version
mdta/com.apple.quicktime.location.accuracy.horizontal
itsk/%A9alb
itsk/%A9ART
itsk/%A9cmt
itsk/covr
itsk/cprt
itsk/%A9day
itsk/%A9enc
itsk/gnre
itsk/%A9gen
itsk/%A9nam
itsk/%A9st3
itsk/%A9too
itsk/%A9wrt
itsk/aART
itsk/akID
itsk/apID
itsk/atID
itsk/cnID
itsk/cpil
itsk/disk
itsk/geID
itsk/grup
itsk/plID
itsk/rtng
itsk/tmpo
itsk/trkn
itsk/%A9ard
itsk/%A9arg
itsk/%A9aut
itsk/%A9lyr
itsk/%A9cak
itsk/%A9con
itsk/%A9des
itsk/%A9dir
itsk/%A9equ
itsk/%A9lnt
itsk/%A9mak
itsk/%A9ope
itsk/%A9phg
itsk/%A9prd
itsk/%A9prf
itsk/%A9pub
itsk/%A9sne
itsk/%A9sol
itsk/%A9src
itsk/%A9thx
itsk/%A9url
itsk/%A9xpd
id3/AENC
id3/APIC
id3/ASPI
id3/COMM
id3/COMR
id3/ENCR
id3/EQUA
id3/EQU2
id3/ETCO
id3/GEOB
id3/GRID
id3/IPLS
id3/LINK
id3/MCDI
id3/MLLT
id3/OWNE
id3/PRIV
id3/PCNT
id3/POPM
id3/POSS
id3/RBUF
id3/RVAD
id3/RVA2
id3/RVRB
id3/SEEK
id3/SIGN
id3/SYLT
id3/SYTC
id3/TALB
id3/TBPM
id3/TCOM
id3/TCON
id3/TCOP
id3/TDAT
id3/TDEN
id3/TDLY
id3/TDOR
id3/TDRC
id3/TDRL
id3/TDTG
id3/TENC
id3/TEXT
id3/TFLT
id3/TIME
id3/TIPL
id3/TIT1
id3/TIT2
id3/TIT3
id3/TKEY
id3/TLAN
id3/TLEN
id3/TMCL
id3/TMED
id3/TMOO
id3/TOAL
id3/TOFN
id3/TOLY
id3/TOPE
id3/TORY
id3/TOWN
id3/TPE1
id3/TPE2
id3/TPE3
id3/TPE4
id3/TPOS
id3/TPRO
id3/TPUB
id3/TRCK
id3/TRDA
id3/TRSN
id3/TRSO
id3/TSIZ
id3/TSOA
id3/TSOP
id3/TSOT
id3/TSRC
id3/TSSE
id3/TSST
id3/TYER
id3/TXXX
id3/UFID
id3/USER
id3/USLT
id3/WCOM
id3/WCOP
id3/WOAF
id3/WOAR
id3/WOAS
id3/WORS
id3/WPAY
id3/WPUB
id3/WXXX
icy/StreamTitle
icy/StreamUrl
m3u8/NAME
AVOutputDeviceBatteryLevelCaseKey
AVOutputDeviceBatteryLevelLeftKey
AVOutputDeviceBatteryLevelRightKey
AVOutputDeviceSupportsDataOverACLProtocolKey
AVOutputDeviceIsInEarKey
AVOutputDeviceBluetoothListeningModeNormal
AVOutputDeviceBluetoothListeningModeActiveNoiseCancellation
AVOutputDeviceBluetoothListeningModeAudioTransparency
AVOutputDeviceVolumeDidChangeNotification
AVOutputDeviceCanSetVolumeDidChangeNotification
AVOutputDeviceVolumeControlTypeDidChangeNotification
AVOutputDeviceProposedGroupIDDidChangeNotification
AVOutputDeviceLocalDeviceDidChangeNotification
AVOutputDeviceConfigurationOptionCancelConfigurationIfAuthRequired
AVOutputDeviceConfigurationCancellationReasonAuthorizationSkipped
AVOutputDeviceSecondDisplayModeDefault
AVOutputDeviceSecondDisplayModeMediaPresentation
AVOutputDeviceCommunicationChannelOptionControlType
AVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired
AVOutputDeviceCommunicationChannelOptionCorrelationID
AVOutputDeviceCommunicationChannelOptionInitiator
AVOutputDeviceCommunicationChannelOptionUsePerCommChannelDelegate
AVOutputDeviceCommunicationChannelControlTypeDirect
AVOutputDeviceCommunicationChannelControlTypeRelayed
AVOutputDeviceCommunicationChannelDataDestinationMediaRemote
AVOutputDeviceCommunicationChannelDataDestinationFitness
AVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped
AVOutputDeviceHeadTrackedSpatialAudioModeNever
AVOutputDeviceHeadTrackedSpatialAudioModeAlways
AVOutputDeviceHeadTrackedSpatialAudioModeAutomatic
AVOutputDeviceHeadTrackedSpatialAudioModeMultichannelOnly
outputdevice_trace
Not available
-[AVOutputDevice initWithOutputDeviceImpl:commChannelManager:]
%@: %@
-[AVOutputDevice setSecondDisplayEnabled:]
-[AVOutputDevice setSecondDisplayMode:completionHandler:]
-[AVOutputDevice setSecondDisplayMode:completionHandler:]_block_invoke
non-nil
v24@?0@8@"NSError"16
-[AVOutputDevice outputDeviceImplDidChangeVolume:]
-[AVOutputDevice outputDeviceImplDidChangeCanChangeVolume:]
-[AVOutputDevice outputDeviceImplDidChangeVolumeControlType:]
+[AVOutputDevice localDeviceDidChange]
-[AVOutputDevice setVolume:]
-[AVOutputDevice increaseVolumeByCount:]
-[AVOutputDevice decreaseVolumeByCount:]
-[AVOutputDevice outputDeviceImplDidChangeProposedGroupID:]
-[AVOutputDevice setAllowsHeadTrackedSpatialAudio:error:]
-[AVOutputDevice setHeadTrackedSpatialAudioMode:error:]
-[AVOutputDevice setCurrentBluetoothListeningMode:]
-[AVOutputDevice setCurrentBluetoothListeningMode:error:]
-[AVOutputDevice openCommunicationChannelWithOptions:completionHandler:]
-[AVOutputDevice openCommunicationChannelToDestination:options:completionHandler:]
-[AVOutputDevice openCommunicationChannelToDestination:options:completionHandler:]_block_invoke
Error retrieving system remote pool context.
-[AVOutputDevice setCommunicationChannelDelegate:]
-[AVOutputDevice communicationChannelManager:didReceiveData:fromCommunicationChannel:]
-[AVOutputDevice communicationChannelManager:didCloseCommunicationChannel:]
-[AVOutputDevice configureUsingBlock:options:completionHandler:]
-[AVOutputDevice configureUsingBlock:options:completionHandler:]_block_invoke
v40@?0q8@"<AVOutputDeviceConfigurationRetrieval>"16@"NSString"24@"NSError"32
-[AVOutputDevice configureUsingBlock:completionHandler:]
-[AVOutputDevice configureUsingBlock:completionHandler:]_block_invoke
FrecencyScore
LastUsedTimestamp
+[AVOutputDeviceFrecencyManager updateFrecencyListForDeviceID:]
+[AVOutputDeviceFrecencyManager frecencyScoreForDeviceID:]
Frecents
%@.plist
com.apple.avfoundation.frecents
+[AVOutputDeviceFrecencyManager _frecentsFilePath]_block_invoke
+[AVOutputDeviceFrecencyManager _frecentsReaderAfterMigrationIfNecessary]_block_invoke
+[AVOutputDeviceFrecencyManager _migrateFrecentsFromCFPreferencesToFrecentsFilePath:]
-[AVOutputDeviceFrecentsReader initWithFrecentsFilePath:error:]
-[AVOutputDeviceFrecentsReader frecencyInfoForDeviceWithID:]
My Device
-[AVOutputDeviceCommunicationChannel setDelegate:]
-[AVOutputDeviceCommunicationChannel communicationChannelImpl:didReceiveData:]
-[AVOutputDeviceCommunicationChannel communicationChannelImplDidClose:]
_UIApplicationDidFinishSuspensionSnapshotNotification
UIApplicationDidEnterBackgroundNotification
UIApplicationWillResignActiveNotification
UIApplicationWillEnterForegroundNotification
adts
avutilities_trace
AVSerializeOnQueueAsyncIfNecessary
AVEnsureNotOnMainThread
AVFoundationErrorDomain
AVErrorDeviceKey
AVErrorTimeKey
AVErrorFileSizeKey
AVErrorPIDKey
AVErrorRecordingSuccessfullyFinishedKey
AVErrorRecordingFailureDomainKey
AVErrorMediaTypeKey
AVErrorMediaSubTypeKey
AVErrorPresentationTimeStampKey
AVErrorPersistentTrackIDKey
AVErrorFileTypeKey
AVErrorExceptionKey
AVErrorFourCharCode
AVError
_Description
_FailureReason
_RecoverySuggestion
AVLocalizedError
Source frame missing
Render dimensions unknown
Source frame unsupported format
Destination frame unsupported format
Invalid parameter
Invalid composition instruction
Blitting failed
No output callback
Frame was cancelled
No custom callbacks
Custom compositor failed with client NSError
Media format - invalid parameter
Media format - sample description is invalid (e.g. invalid size)
Media format - format description is invalid (e.g. invalid size)
Media format - format description has an incompatible format (e.g. unknown format / incompatible atom)
Media format - sample description is unsupported for the specified format flavor
Media format - slice has an invalid value
Media writing - no such property
Media writing - read only property
Media writing - no such track
Media writing - invalid timestamp
Media writing - invalid format
Media writing - invalid edit
Media writing - predetermined file size too small
Media writing - predetermined media data size too small
Media writing - segment is not allowed to star with a non-sync sample.
Cannot append media data after ending session
JSON format error
iTT requires languageCode or extendedLanguageTag property to be set
AVErrorOutOfMemory
AVErrorSessionNotRunning
AVErrorDeviceAlreadyUsedByAnotherSession
AVErrorNoDataCaptured
AVErrorSessionConfigurationChanged
AVErrorDiskFull
AVErrorDeviceWasDisconnected
AVErrorMediaChanged
AVErrorMaximumDurationReached
AVErrorMaximumFileSizeReached
AVErrorMediaDiscontinuity
AVErrorMaximumNumberOfSamplesForFileFormatReached
AVErrorDeviceNotConnected
AVErrorDeviceInUseByAnotherApplication
AVErrorDeviceLockedForConfigurationByAnotherProcess
AVErrorSessionWasInterrupted
AVErrorMediaServicesWereReset
AVErrorRecordingNotAllowedWhenMultipleAppsAreForeground
AVErrorExportFailed
AVErrorDecodeFailed
AVErrorEncodeFailed
AVErrorInvalidSourceMedia
AVErrorFileAlreadyExists
AVErrorCompositionTrackSegmentsNotContiguous
AVErrorInvalidCompositionTrackSegmentDuration
AVErrorInvalidCompositionTrackSegmentSourceStartTime
AVErrorInvalidCompositionTrackSegmentSourceDuration
AVErrorFileFormatNotRecognized
AVErrorFileFailedToParse
AVErrorMaximumStillImageCaptureRequestsExceeded
AVErrorContentIsProtected
AVErrorNoImageAtTime
AVErrorDecoderNotFound
AVErrorEncoderNotFound
AVErrorContentIsNotAuthorized
AVErrorApplicationIsNotAuthorized
AVErrorDeviceIsNotAvailableInBackground
AVErrorFileChecksumFailed
AVErrorOperationNotSupportedForAsset
AVErrorDecoderTemporarilyUnavailable
AVErrorEncoderTemporarilyUnavailable
AVErrorInvalidVideoComposition
AVErrorReferenceForbiddenByReferencePolicy
AVErrorInvalidFileAtDownloadDestinationURL
AVErrorInvalidOutputURLPathExtension
AVErrorTorchLevelUnavailable
AVErrorOperationInterrupted
AVErrorIncompatibleAsset
AVErrorFailedToLoadMediaData
AVErrorServerIncorrectlyConfigured
AVErrorApplicationIsNotAuthorizedToUseDevice
AVErrorFailedToParse
AVErrorFileTypeDoesNotSupportSampleReferences
AVErrorUndecodableMediaData
AVErrorClientProgrammingError
AVErrorAirPlayControllerRequiresInternet
AVErrorAirPlayReceiverRequiresInternet
AVErrorVideoCompositorFailed
AVErrorRecordingAlreadyInProgress
AVErrorUnsupportedOutputSettings
AVErrorOperationNotAllowed
AVErrorContentIsUnavailable
AVErrorFileWritingExceededPredeterminedSize
AVErrorMediaDataWritingExceededPredeterminedSize
AVErrorFormatUnsupported
AVErrorMalformedDepth
AVErrorIncorrectPIN
AVErrorIncorrectPassword
AVErrorPointlessOverCapture
AVErrorContentNotUpdated
AVErrorNoLongerPlayable
AVErrorNoCompatibleAlternatesForExternalDisplay
AVErrorNoSourceTrack
AVErrorExternalPlaybackNotSupportedForAsset
AVErrorOperationNotSupportedForPreset
AVErrorSessionHardwareCostOverage
AVErrorUnsupportedDeviceActiveFormat
AVErrorOperationRequiresBothBudsInEar
AVErrorIncorrectlyConfigured
AVErrorSegmentStartedWithNonSyncSample
AVErrorRosettaNotInstalled
AVErrorOperationCancelled
AVErrorInvalidSampleCursor
AVErrorFailedToLoadSampleData
AVErrorAirPlayReceiverTemporarilyUnavailable
AVErrorSandboxExtensionDenied
stringWithValidatedFormatInteger
stringWithValidatedFormatString
'%@'
AVSampleBufferVideoRendererDidFailToDecodeNotification
AVSampleBufferVideoRendererDidFailToDecodeNotificationErrorKey
AVSampleBufferVideoRendererRequiresFlushToResumeDecodingDidChangeNotification
AVSampleBufferVideoRendererOutputObscuredDueToInsufficientExternalProtectionDidChangeNotification
AVSampleBufferVideoRendererVisibilityDidChangeNotification
AVSampleBufferSTSLabelDidChangeNotification
avsamplebuffervideorenderer_trace
The control timebase can not be changed after the display layer or video renderer has been added to a synchronizer
The display layer or video renderer cannot be added to a synchronizer if the control timebase has already been set.
FigVideoQueueCreate
FVQSetProperty(DisplayLayer)
FigVideoQueueStart
FVQSetProperty(ControlTimebase)
-[AVSampleBufferVideoRenderer _createVideoQueue:errorStep:]
AVSBVR failed with err=%d at %s.
-[AVSampleBufferVideoRenderer _setStatus:error:]_block_invoke
No Error
-[AVSampleBufferVideoRenderer _resetStatusWithOSStatus:]_block_invoke
-[AVSampleBufferVideoRenderer _setOutputObscuredDueToInsufficientExternalProtection:]
-[AVSampleBufferVideoRenderer _setCreateVideoQueueFailedWithOSStatus:]_block_invoke
AVSampleBufferVideoRenderer serial
AVSampleBufferVideoRenderer videoQueue
AVSampleBufferVideoRenderer layerQueue
AVSampleBufferVideoRendererCallbackListQueue
AVSampleBufferVideoRendererFlushCallbackQueue
AVSampleBufferVideoRendererQueueForProtectingPrerollCompleteCallback
AVSampleBufferVideoRendererQueueForCallingPrerollCompleteCallback
_initializeTimebases
-[AVSampleBufferVideoRenderer init]
bail error check
-[AVSampleBufferVideoRenderer dealloc]
An object conforming to AVQueuedSampleBufferRendering, configured to request more media data via requestMediaDataWhenReadyOnQueue:usingBlock:, was released without first having been messaged stopRequestingMediaData:.
-[AVSampleBufferVideoRenderer setDisplayLayerVisibility:]_block_invoke
visible
NOT visible
-[AVSampleBufferVideoRenderer setRenderSynchronizer:error:]
The DisplayLayer cannot be added to a Synchronizer when it has already been added to a Synchronizer.
STSLabel
-[AVSampleBufferVideoRenderer _enqueueSingleSampleBuffer:bufferEnqueueingInfo:]
An AVSampleBufferDisplayLayer or video target must be added to the AVSampleBufferVideoRenderer prior to enqueueing sample buffers.
Ignoring enqueueSampleBuffer: because status is "failed"
-[AVSampleBufferVideoRenderer flushWithRemovalOfDisplayedImage:completionHandler:]
-[AVSampleBufferVideoRenderer _flushComplete]
-[AVSampleBufferVideoRenderer _completedDecodeForPrerollForRequestID:]_block_invoke
-[AVSampleBufferVideoRenderer prerollDecodeWithCompletionHandler:]
-[AVSampleBufferVideoRenderer addSampleBufferDisplayLayer:]
Cannot add AVSampleBufferDisplayLayer while enqueueing sample buffers.
An AVSampleBufferDisplayLayer is already attached to the AVSampleBufferVideoRenderer.  Only 1 is allowed at a time.
addSampleBufferDisplayLayer failed to set content layer
-[AVSampleBufferVideoRenderer _updateVideoTargetsOnVideoQueue]
Failed to set video target array on video queue.
-[AVSampleBufferVideoRenderer addVideoTarget:]
Cannot add video target while enqueueing sample buffers.
The FigVideoTarget is already attached to the AVSampleBufferVideoRenderer.
-[AVSampleBufferVideoRenderer _setContentLayerOnFigVideoQueue:]
The AVSampleBufferDisplayLayer's content layer is nil.
<%@: %p, AVSBDLs = %d, FVTs = %d>
-[AVSampleBufferVideoRenderer(PowerOptimization) expectMinimumUpcomingSampleBufferPresentationTime:]
The AVSampleBufferVideoOutput has already been added to the AVSampleBufferVideoRenderer.
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) addOutput:]
The video target was removed, but not already attached to AVSampleBufferVideoRenderer.
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) removeOutput:]
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) copyDisplayedPixelBuffer]_block_invoke
-[AVSampleBufferVideoRenderer(AVSampleBufferVideoRendererOutputs) copyDisplayedPixelBuffer]
_figVideoQueueDecodeError
_figVideoQueueFailed
nil reference
_enqueueSingleSampleBufferStatic
AVSampleBufferVideoRenderer.m
AVVideoCodecKey
jpeg
ap4h
apcn
apch
apcs
apco
muxa
AVVideoWidthKey
AVVideoHeightKey
AVVideoPixelAspectRatioKey
AVVideoPixelAspectRatioHorizontalSpacingKey
AVVideoPixelAspectRatioVerticalSpacingKey
AVVideoCleanApertureKey
AVVideoCleanApertureWidthKey
AVVideoCleanApertureHeightKey
AVVideoCleanApertureHorizontalOffsetKey
AVVideoCleanApertureVerticalOffsetKey
AVVideoScalingModeKey
AVVideoScalingModeFit
AVVideoScalingModeResize
AVVideoScalingModeResizeAspect
AVVideoScalingModeResizeAspectFill
AVVideoColorPropertiesKey
ColorPrimaries
ITU_R_709_2
SMPTE_C
P3_D65
ITU_R_2020
TransferFunction
SMPTE_ST_2084_PQ
ITU_R_2100_HLG
Linear
YCbCrMatrix
ITU_R_601_4
AVVideoAllowWideColorKey
AVVideoCompressionPropertiesKey
AverageBitRate
Quality
MaxKeyFrameInterval
MaxKeyFrameIntervalDuration
AppleProRAWBitDepthKey
ProfileLevel
H264_Baseline_3_0
H264_Baseline_3_1
H264_Baseline_4_1
H264_Baseline_AutoLevel
H264_Main_3_0
H264_Main_3_1
H264_Main_3_2
H264_Main_4_1
H264_Main_AutoLevel
H264_High_4_0
H264_High_4_1
H264_High_AutoLevel
H264EntropyMode
CAVLC
CABAC
ExpectedFrameRate
AllowFrameReordering
AverageNonDroppableFrameRate
AVVideoDecompressionPropertiesKey
AVVideoMinimumFrameDuration
AVVideoFrameRateConversionAlgorithm
AVVideoFrameRateConversionAlgorithmFast
AVVideoFrameRateConversionAlgorithmPrecise
PerceptualQualityOptimization
AVVideoEmitSequencesAtSyncFramesOnly
AVVideoMinimumIntervalForSyncFrames
AVOutputDeviceDescriptionsFromFigDescriptions
-[AVFigEndpointOutputDeviceImpl initWithFigEndpoint:]
figEndpoint != NULL
-[AVFigEndpointOutputDeviceImpl _figEndpointPropertyValueForKey:]
-[AVFigEndpointOutputDeviceImpl deviceType]
-[AVFigEndpointOutputDeviceImpl deviceSubType]
BluetoothFeatures
GAPA
-[AVFigEndpointOutputDeviceImpl isAppleAccessory]
IsGenuineAppleAccessory
-[AVFigEndpointOutputDeviceImpl supportsDataOverACLProtocol]
-[AVFigEndpointOutputDeviceImpl isInEar]
-[AVFigEndpointOutputDeviceImpl isInUseByPairedDevice]
-[AVFigEndpointOutputDeviceImpl connectedPairedDevices]
AVOutputDeviceSetAllowsHeadTrackedSpatialAudioOnEndpoint
AVOutputDeviceHeadTrackedSpatialAudioModeFromFigMode
AVOutputDeviceSetHeadTrackedSpatialAudioModeOnEndpoint
-[AVFigEndpointOutputDeviceImpl setCurrentBluetoothListeningMode:]
-[AVFigEndpointOutputDeviceImpl setCurrentBluetoothListeningMode:error:]
Output device %@ screen %@
disable
AVOutputDeviceSetSecondDisplayEnabledOnEndpoint
v12@?0i8
-[AVFigEndpointOutputDeviceImpl _volumeDidChangeForEndpointWithID:]
-[AVFigEndpointOutputDeviceImpl _endpointVolumeControlTypeDidChangeForEndpointWithID:]
-[AVFigEndpointOutputDeviceImpl _canSetEndpointVolumeDidChangeForEndpointWithID:]
-[AVFigEndpointOutputDeviceImpl configureUsingBlock:options:completionHandler:]
FigRoutingContext is not available on this platform
+[AVOutputDevice(AVOutputDeviceFigEndpointImplFetching) outputDeviceWithFigEndpoint:]
+[AVOutputDevice(AVOutputDeviceFigEndpointImplFetching) outputDeviceWithFigEndpoint:routingContextFactory:]
(error %d)
(name: %@, ID: %@)
AVOutputDeviceCopyFigModeForSpatialAudioMode
request
B32@?0@"NSString"8Q16^B24
v24@?0@"NSError"8d16
Accept
identity
Accept-Encoding
Keep-Alive
Connection
bytes=%llu-
Range
bytes=%llu-%llu
v32@?0@"NSURLSessionDataTask"8@"AVAssetCustomURLRequest"16^B24
com.apple.avfoundation.customurl.nsurlsession
com.apple.avfoundation.customurl.cfurlconnection
-[AVAssetCustomURLBridgeForNSURLProtocol _cancelPendingRequests]
com.apple.avfoundation.authkeychain.callback
com.apple.avfoundation.authkeychain
Content-Range
bytes
Content-Length
<%@: %p, %@, target = %@>
empty
source = %@
timeMapping
description=AVFoundation_AVFCore_Sim-2150.21.1
<%@: %p, input parameters = %@>
<%@: %p, track ID = %d, audioTimePitchAlgorithm: %@, audioTapProcessor: %p, volume mix: %@>
effectParameters == nil || [effectParameters isMemberOfClass:[AVAudioMixSweepFilterEffectParameters class]]
The timeRange of a volume ramp must have a numeric start time and a numeric duration.
The time of a volume setting must be numeric.
introFadeDuration must be numeric and >= 0
fadeOutStart must be >= 0 if numeric
fadeOutDuration must be numeric and >= 0
AVOutputContextDeviceGroupControlOptionCancelAddDeviceIfAuthRequired
AVOutputContextDestinationChangeInitiatedNotification
AVOutputContextDestinationChangeKey
AVOutputContextOutputDeviceDidChangeNotification
AVOutputContextGlobalOutputDeviceConfigurationDidChangeNotification
AVOutputContextOutputDevicesDidChangeNotification
AVOutputContextDestinationChangeInitiatorKey
AVOutputContextSetOutputDevicePasswordKey
AVOutputContextSetOutputDeviceCancelIfAuthRequiredKey
AVOutputContextSetOutputDeviceSuppressUserInteractionOnSenderOnlyKey
AVOutputContextSetOutputDeviceInitiatorKey
AVOutputContextSetOutputDevicesOptionInitiator
AVOutputContextAddOutputDeviceOptionAuthorizationToken
AVOutputContextAddOutputDeviceCancelIfAuthRequiredKey
AVOutputContextAddOutputDeviceOptionInitiator
AVOutputContextAddOutputDeviceOptionCorrelationID
AVOutputContextRemoveOutputDeviceOptionInitiator
AVOutputContextRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputContextSetOutputDeviceFadePlaybackKey
AVOutputContextSetOutputDevicesOptionFadePlayback
AVOutputContextAddOutputDeviceOptionFadePlayback
AVOutputContextRemoveOutputDeviceOptionFadePlayback
AVOutputContextDestinationChangeReasonKey
AVOutputContextDestinationChangeDeviceIDKey
AVOutputContextDestinationChangePreviousDeviceIDsKey
AVOutputContextDestinationChangeReasonIdleDisconnect
AVOutputContextPredictedOutputDeviceDidChangeNotification
AVOutputContextManagerOutputContextDidFailToConnectToOutputDeviceNotification
AVOutputContextManagerOutputDeviceKey
AVOutputContextManagerFailureReasonKey
AVOutputContextDeviceConnectionFailureReasonDeviceInUse
AVOutputContextDeviceConnectionFailureReasonDeviceOutOfRange
AVOutputContextDeviceConnectionFailureReasonNotAPeerInHomeGroup
AVOutputContextDeviceConnectionFailureReasonDeviceNotConnectedToInternet
AVOutputContextDeviceConnectionFailureReasonDeviceNotMFiCertified
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailed2GHzNetwork
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailedMultiDFSNetwork
AVOutputContextTypeSharedSystemAudio
AVOutputContextTypeSharedSystemScreen
AVOutputContextTypeSharedAudioPresentation
AVOutputContextTypeAudio
AVOutputContextTypeVideo
AVOutputContextTypeScreen
AVOutputContextTypeGroupControl
AVOutputContextTypeSharedSystemRemotePool
AVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification
AVOutputContextVolumeDidChangeNotification
AVOutputContextCanSetVolumeDidChangeNotification
AVOutputContextVolumeControlTypeDidChangeNotification
AVOutputContextCommunicationChannelOptionControlType
AVOutputContextCommunicationChannelControlTypeDirect
AVOutputContextCommunicationChannelControlTypeRelayed
AVOutputContextDestinationChangeCancellationReasonAuthorizationSkipped
outputcontext_trace
+[AVOutputContext defaultOutputContextImplClass]
com.apple.UIKit.screenpicker
com.apple.avfoundation.allow-system-wide-context
-[AVOutputContext initWithOutputContextImpl:]
com.apple.avfoundation.outputcontext.ivars
-[AVOutputContext initWithCoder:]
AVOutputContextSerializationKeyContextID
AVOutputContextSerializationKeyContextType
-[AVOutputContext encodeWithCoder:]
<%@: %p, ID=%@, type=%@>
-[AVOutputContext ID]
-[AVOutputContext setApplicationProcessID:]
-[AVOutputContext outputDevice]
-[AVOutputContext setOutputDevice:options:completionHandler:]
-[AVOutputContext setOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext setOutputDevice:forFeatures:]
-[AVOutputContext setOutputDevice:options:]
+[AVOutputContext resetOutputDeviceForAllOutputContexts]
-[AVOutputContext outputContextImpl:didInitiateDestinationChange:]
-[AVOutputContext outputContextImpl:didChangeOutputDeviceWithInitiator:]
-[AVOutputContext outputContextImplDidChangeGlobalOutputDeviceConfiguration:]
-[AVOutputContext outputDevices]
-[AVOutputContext outputContextImpl:didChangeOutputDevicesWithInitiator:reason:deviceID:previousDeviceIDs:]
-[AVOutputContext setOutputDevices:]
-[AVOutputContext setOutputDevices:options:completionHandler:]
-[AVOutputContext setOutputDevices:options:completionHandler:]_block_invoke
-[AVOutputContext addOutputDevice:options:completionHandler:]
-[AVOutputContext addOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext addOutputDevice:]
-[AVOutputContext removeOutputDevice:options:completionHandler:]
-[AVOutputContext removeOutputDevice:options:completionHandler:]_block_invoke
-[AVOutputContext removeOutputDevice:]
-[AVOutputContext predictedOutputDevice]
-[AVOutputContext outputContextImplDidChangePredictedOutputDevice:]
-[AVOutputContext resetPredictedOutputDevice]
-[AVOutputContext outputContextImplDidChangeProvidesControlForAllVolumeFeatures:]
-[AVOutputContext outputContextImplDidChangeVolume:]
-[AVOutputContext outputContextImplDidChangeCanSetVolume:]
-[AVOutputContext outputContextImplDidChangeVolumeControlType:]
-[AVOutputContext openCommunicationChannelWithOptions:error:]
-[AVOutputContext setCommunicationChannelDelegate:]
-[AVOutputContext outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:]
-[AVOutputContext outputContextImpl:didReceiveData:fromCommunicationChannel:]
-[AVOutputContext outputContextImpl:didCloseCommunicationChannel:]
-[AVOutputContext outputContextImpl:didExpireWithReplacement:]
server death
-[AVOutputContextCommunicationChannel sendData:completionHandler:]
com.apple.avfoundation.outputcontext.destinationchange
<%@: %p, status=%d, cancellationReason=%@>
-[AVOutputContextDestinationChange _setStatus:cancellationReason:]
com.apple.avfoundation.outputcontextmanager.ivars
-[AVOutputContextManager outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:]
AVAssetPlaybackConfigurationOptionStereoVideo
AVAssetPlaybackConfigurationOptionStereoMultiviewVideo
playbackCapabilities
avrunloopcondition_trace
AVRunLoopConditionSignalRunLoopMode
-[AVRunLoopCondition _waitInMode:untilDate:]
AVLayerVideoGravityResize
AVLayerVideoGravityResizeAspect
AVLayerVideoGravityResizeAspectFill
vide
soun
text
clcp
meta
mobj
muxx
hapt
dpth
auxv
scen
AVVideoRangeSDR
AVVideoRangeHLG
AVVideoRangePQ
AVMediaCharacteristicVisual
AVMediaCharacteristicAudible
AVMediaCharacteristicLegible
AVMediaCharacteristicFrameBased
public.uses-wide-gamut-color-space
public.contains-hdr-video
public.contains-alpha-channel
public.main-program-content
public.auxiliary-content
public.original-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.easy-to-read
public.accessibility.describes-video
com.apple.has-language-display-name-as-name
public.binaural-for-headphones
public.downmix
public.translation
public.translation.dubbed
public.translation.voice-over
com.apple.quicktime.video-map
com.apple.quicktime.video-map.depth
com.apple.quicktime-movie
public.mpeg-4
com.apple.m4v-video
com.apple.m4a-audio
public.3gpp
public.3gpp2
com.apple.coreaudio-format
com.microsoft.waveform-audio
public.aiff-audio
public.aifc-audio
org.3gpp.adaptive-multi-rate-audio
public.ac3-audio
public.enhanced-ac3-audio
public.au-audio
public.mp3
public.jpeg
com.adobe.raw-image
public.heic
public.avci
public.heif
public.tiff
org.w3.webvtt
public.mpeg-2-transport-stream
com.apple.streamingkeydelivery.contentkey
com.apple.streamingkeydelivery.persistentcontentkey
MPEG4AppleHLS
MPEG4CMAFCompliant
assetinspector_trace
-[AVFigAssetInspector variants]
<%@: %p, volume mix: %@>
The timeRange of a volume ramp must not overlap the timeRange of an existing volume ramp.
through
, changing instantaneously to 
, holding steady at 
, interpolated to 
 with %@ ramp style
volume %1.3f %@ time %1.3f%@%@
avoperation_trace
com.apple.avfoundation.avoperation.ivars
-[AVOperation evaluateDependenciesAndMarkAsExecuting]
requestedStatus != AVOperationStatusUnknown
isExecuting
isFinished
-[AVOperation _setStatus:error:resultingStatus:failureReason:]_block_invoke
-[AVOperation didEnterTerminalState]
-[AVOperation markAsCompleted]
-[AVOperation markAsFailedWithError:]
-[AVOperation markAsCancelled]
+[AVOperation(ArrayOfOperations) statusOfOperations:error:]
-[AVBlockOperation start]
-[AVBlockOperation cancel]
com.apple.avfoundation.globaloperationqueue.%p
<%@: %p, unfinishedOperations=%@>
AVDepartureAnnouncingObjectMonitorKey
com.apple.avfoundation.waitForNotificationOrDeallocationOperation
AVOperationStatusResolveOldAndNew
Cannot enter a terminal state until the receiver starts executing
Cannot regress from a terminal state %d to a non-terminal state %d
delegateutils_trace
<%@: %p> delegate serialization queue
-[AVWeakReferencingDelegateStorage _delegate]
/Library/Caches/com.apple.xbs/Sources/AVFoundation_AVFCore_Sim/Fig/Utilities/AVDelegateUtilities.m
-[AVWeakReferencingDelegateStorage _setDelegateViaWeakReference:]
-[AVWeakReferencingDelegateStorage setDelegate:queue:]
AVPerformDelegateCallbackSynchronouslyForDelegateStorageIfCurrentDelegateQueueIsQueueElseDispatchToCurrentDelegateQueue
assetinspectorloader_trace
keys
AVAsynchronousLoadingPropertyBatchIDKey
AVAsynchronousLoadingCompletionHandlerKey
com.apple.avfoundation.avasset.completionsQueue
trackPropertyForMediaSelectionOptions
trackPropertyForPlaybackCapabilities
-[AVFigAssetInspectorLoader _loadStatusForProperty:figAsset:error:]
-[AVFigAssetInspectorLoader _statusOfValueForKey:error:firstNonLoadedDependencyKey:]
-[AVAsset statusOfValueForKey:error:] invoked with unrecognized key %@.
v24@?0@8^B16
%@ invoked with unrecognized keys %@.
-[AVFigAssetInspectorLoader loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:]
(keys == nil) || [keys isKindOfClass:[NSArray class]]
[keysForCollectionKeys isKindOfClass:[NSDictionary class]]
[[keysForCollectionKeys objectForKey:thisKey] isKindOfClass:[NSArray class]]
-[AVAsset loadValuesAsynchronouslyForKeys:completionHandler:]
-[AVAsset loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:] invoked with unrecognized AVAssetTrack keys %@.
AVAsynchronousLoadingTrackPropertyBatchIDKey
-[AVFigAssetInspectorLoader _ensureAllDependenciesOfKeyAreLoaded:]
exportable
readable
composable
, batchID = %ld
, track batchID = %ld
-[AVFigAssetInspectorLoader _invokeCompletionHandlerForLoadingBatches:]
assetCache
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
cacheKey
downloadDestinationURL
isProxy
variants
contentKeySpecifiersEligibleForPreloading
preferredRate
preferredSoundCheckVolumeNormalization
providesPreciseDurationAndTiming
referenceRestrictions
lyrics
commonMetadata
ID3Metadata
allMediaSelections
hasProtectedContent
originalNetworkContentURL
playable
compatibleWithSavedPhotosAlbum
compatibleWithAirPlayVideo
audioAlternatesTrackGroup
subtitleAlternatesTrackGroup
alternateTrackGroups
identifyingTag
identifyingTagClass
httpSessionIdentifier
resolvedURL
SHA1Digest
figAsset
playbackItem
canContainFragments
containsFragments
canContainMovieFragments
containsMovieFragments
firstFragmentSequenceNumber
fragmentCount
overallDurationHint
moovAtomSize
propertyListForProxy
supportsAnalysisReporting
assetAnalysisMessages
maximumVideoResolution
availableVideoDynamicRanges
preferredDisplayCriteria
minimumTimeOffsetFromLive
resourceLoader
mayRequireContentKeysForMediaDataProcessing
createFigAsset
handleAndReflectFigAssetNotification
handleFigAssetLoadingNotification
handleFigAssetLoadingNotification_block_invoke
AVRoutingSessionManagerCurrentSessionDidChangeNotification
AVRoutingSessionManagerLikelyExternalDestinationsDidChangeNotification
AVRoutingSessionManagerAllLikelyDestinationsDidChangeNotification
routingsession_trace
+[AVRoutingSessionManager initialize]
+[AVRoutingSessionManager longFormVideoRoutingSessionManager]
-[AVRoutingSessionManager dealloc]
<%@: %p, currentRoutingSession=%@, likelyExternalDestinations=%@>
-[AVRoutingSessionManager currentRoutingSession]
-[AVRoutingSessionManager likelyExternalDestinations]
-[AVRoutingSessionManager allLikelyDestinations]
-[AVRoutingSessionManager prefersLikelyDestinationsOverCurrentRoutingSession]
-[AVRoutingSessionManager updateCurrentRoutingSessionFromLikelyDestinationsWithCompletionHandler:]
Missing required entitlement com.apple.avfoundation.allow-identifying-output-device-details
-[AVRoutingSessionManager startRoutingSessionForHighConfidenceExternalDestinationIfPresentWithCompletionHandler:]
-[AVRoutingSessionManager startRoutingSessionWithOutputDeviceDescriptions:error:]
-[AVRoutingSessionManager startSuppressingLikelyDestinationsUntilNextPlayEventAndReturnError:]
-[AVRoutingSessionManager stopSuppressingLikelyDestinationsAndReturnError:]
com.apple.avfoundation.allows-set-output-device
+[AVAssetTrackInspector assetTrackInspectorWithAsset:trackID:trackIndex:]
assettrackinspector_trace
-[AVTrackReaderInspector _initWithAsset:trackID:trackIndex:]
%c%c%c%c
decodable
playabilityValidationResult
enabled
selfContained
totalSampleDataLength
mediaPresentationTimeRange
mediaDecodeTimeRange
requiresFrameReordering
peakDataRate
mediaCharacteristics
dimensions
loudnessInfo
minFrameDuration
segmentsExcludeAudioPrimingAndRemainderDurations
gaplessSourceTimeRange
segmentsAsPresented
layer
defaultAlternateGroupID
provisionalAlternateGroupID
excludedFromAutoselectionInTrackGroup
locale
containsMixedSubtitles
containsOnlyForcedSubtitles
fallbackTrack
associatedSubtitleTrack
pairedForcedOnlySubtitlesTrack
hasAudibleBooksContent
isAudibleBooksContentAuthorized
canProvideSampleCursors
-[AVFigAssetTrackInspector _initWithAsset:trackID:trackIndex:]
com.apple.avfoundation.avassettrack.completionsQueue
-[AVFigAssetTrackInspector _loadStatusForFigAssetTrackProperty:error:]
-[AVAssetTrack statusOfValueForKey:error:] invoked with unrecognized key %@.
-[AVAssetTrack loadValuesAsynchronouslyForKeys:completionHandler:] invoked with unrecognized keys %@.
-[AVFigAssetTrackInspector loadValuesAsynchronouslyForKeys:completionHandler:]
HasSeamSamples
-[AVFigAssetTrackInspector _invokeCompletionHandlerForLoadingBatches:]
-[AVCompositionTrackReaderInspector segments]
handleFigAssetTrackNotification
handleFigAssetTrackNotification_block_invoke
%c[%@ %@]
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ only defined for abstract class.  Define %@!
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
com.apple.AVFCore
xxxxDefaultValuexxxx
AVLocalizedStringFromTableWithLocaleWithBundleIdentifier
<%@: %p, referencedObject = %@>
avsamplebuffergenerator_trace
request != nil
batch cannot be nil
batch does not belong to this generator
createSampleBufferForRequest must only be called before makeDataReadyWithCompletionHandler.
com.apple.avfoundation.avsamplebuffergenerator.data-ready-notifications
generator != nil
makeDataReadyWithCompletionHandler should only be called once.
com.apple.avfoundation.avsamplebuffergenerator.batch-ready-notifications
{CGPoint=dd}
{CGRect={CGPoint=dd}{CGSize=dd}}
{CGSize=dd}
figSampleInformationoDict != nil
figSegmentTrackReportDict != nil
figSegmentReportDict != nil
ccr_trace
%@ read/write queue
callbackContext != nil
-[AVCallbackContextRegistry registerCallbackContextObject:]_block_invoke
callbackContextToken != AVCallbackContextTokenInvalid
-[AVCallbackContextRegistry unregisterCallbackContextForToken:]_block_invoke
Cannot unregister token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
Cannot look up token %p that was not vended by %@.  Break on AVCallbackContextRegistryUnrecognizedTokenBreak() to debug.
avplayeritemmediadatacollector_trace
%@ only supports listening to notifications from CMNotificationCenterGetDefaultLocalCenter
cmNotificationCenter != NULL
com.apple.avfoundation.avcmnotificationdispatcher.ivars
Cannot remove a listener %@ (callback %p) for %@ from object %p that was never added.  Break on AVCMNotificationDispatcherUnbalancedUnregistrationBreak() to debug.
avblockserializer_trace
-[AVSerializedMostlySynchronousReentrantBlockScheduler scheduleBlock:]
%@ %@
*** %@
avtimedmetadatagroup_trace
Cannot create format description for metadata group %p%@
<%@: %p, timeRange=%@, items=%@>
<%@: %p, startDate=%@, endDate=%@ classifyingLabel=%@ uniqueID=%@ items=%@>
[propertyList isKindOfClass:[NSDictionary class]]
-[AVDateRangeMetadataGroup(AVDateRangeMetadataGroup_Local) _extractPropertiesFromTaggedRangeMetadataDictionary:]
The identifier for one or more of the following items is invalid: %@.  See +[%@ %@] for a way to construct a valid identifier from a key and key space
Data type "%@" does not conform to any built-in data type.  See CMMetadataDataTypeRegistryRegisterDataType.
Metadata item %p has no value
No entry in format description %p for metadata item %p with identifier %@, data type %@ and extended language tag %@.  If you created this format description using -[%@ %@], make sure the instance of %@ used to create the format description contains a representative sample of metadata items which includes an item with the same combination of identifier, dataType, and extended language tag as this one
Value "%@" of class %@ in metadata item %p is not compatible with base data type %@
avassetcache_trace
-[AVManagedAssetCache initWithURL:enableCRABSCache:enableHLSCache:]
-[AVManagedAssetCache setMaxSize:]
-[AVManagedAssetCache setMaxEntrySize:]
-[AVManagedAssetCache removeEntryForKey:]
B32@?0@"AVMediaSelectionOption"8Q16^B24
AVPlatformIdentifierMacOS
AVPlatformIdentifierIOS
AVPlatformIdentifierWatchOS
AVPlatformIdentifierTVOS
platformutilities_trace
AVExecutionEnvironmentCurrentPlatformIdentifierKey
{?=ii}
-[AVDelegatingPlaybackCoordinatorPlaybackControlCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorPlayCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorBufferingCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorPauseCommand init] unavailable
-[AVDelegatingPlaybackCoordinatorSeekCommand init] unavailable
-[AVDelegatingPlaybackCoordinator _setIsInExpanseMediaPlaybackOnAVAudioSession]
com.apple.avfoundation.avdelegatingplaybackcoordinator.timelinecontrol
com.apple.avdelegatingplaybackcoordinator.figtimelinecoordinator.config
com.apple.avfoundation.avdelegatingplaybackcoordinator.ivars
-[AVDelegatingPlaybackCoordinator initWithPlaybackControlDelegate:]_block_invoke
-[AVDelegatingPlaybackCoordinator initWithPlaybackControlDelegate:]
-[AVDelegatingPlaybackCoordinator participantForIdentifier:]_block_invoke
-[AVDelegatingPlaybackCoordinator _updateTransportControlStateDictionaryWithTransportControlState:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleNewTransportControlStateDictionary:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleNewParticipantStateDictionary:]_block_invoke
-[AVDelegatingPlaybackCoordinator handleReplacementParticipantStateDictionaries:]_block_invoke
-[AVDelegatingPlaybackCoordinator beginSuspensionForReason:]
-[AVDelegatingPlaybackCoordinator _endSuspension:]
-[AVDelegatingPlaybackCoordinator _endSuspension:proposingNewTime:]
-[AVDelegatingPlaybackCoordinator _setWaitingPolicies:]
-[AVDelegatingPlaybackCoordinator applyFigPauseSnapsToMediaTimeOfOriginator]_block_invoke
AVDelegatingPlaybackCoordinatorBroadcastTimelineStateCallback
AVDelegatingPlaybackCoordinatorBroadcastParticipantStateCallback
AVDelegatingPlaybackCoordinatorAsynchronouslyReloadTimelineStateCallback
AVFragmentedMovieDurationDidChangeNotification
AVFragmentedMovieWasDefragmentedNotification
AVFragmentedMovieContainsMovieFragmentsDidChangeNotification
AVFragmentedMovieTrackTimeRangeDidChangeNotification
AVFragmentedMovieTrackSegmentsDidChangeNotification
AVExternalPlaybackMonitorAirPlayVideoActiveDidChangeNotification
AVExternalPlaybackMonitorAirPlayVideoPlayingDidChangeNotification
playbackmonitor_trace
+[AVExternalPlaybackMonitor initialize]
+[AVExternalPlaybackMonitor longFormVideoExternalPlaybackMonitor]
-[AVExternalPlaybackMonitor dealloc]
<%@: %p, airPlayVideoActive=%d, airPlayVideoPlaying=%d>
-[AVExternalPlaybackMonitor isAirPlayVideoActive]
-[AVExternalPlaybackMonitor isAirPlayVideoPlaying]
Audio/Video
UserInterfaceSoundEffects
LiveAudio
Ringtone
RingtonePreview
PhoneCall
TTYCall
AVAudioSessionMediaPlayerOnlyModeMoviePlayback
AVAudioSessionMediaPlayerOnlyModeSpokenAudio
FindMyPhone
AVAudioSessionPickableRoutesDidChangeNotification
AVAudioSessionCanEnterPIPModeDidChangeNotification
avaudiosessionmediaplayeronly_trace
-[AVAudioSessionMediaPlayerOnly setActive:withFlags:error:]
-[AVAudioSessionMediaPlayerOnly setCategory:error:]
 from
property
-[AVAudioSessionMediaPlayerOnly setMode:error:]
 from
-[AVAudioSessionMediaPlayerOnly _attachToPlayer:]
avaudiosession_fpNotificationCallback
non-resumable
avmediaselectiongroup_trace
<%@: %p, options = %@, allowsEmptySelection = %@>
+[AVMediaSelectionGroup mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:]
AVMediaSelectionTrackOptionCharacteristicsKey
-[AVAssetMediaSelectionGroup mediaSelectionOptionWithPropertyList:]
AVMediaSelectionTrackOptionTrackIDKey
AVMediaSelectionTrackOptionSettingsKey
AVMediaSelectionKeyValueOptionMediaTypeKey
AVMediaSelectionKeyValueOptionGroupIDKey
<%@: %p, language = %@%@>
, title = %@
, associated language = %@
, tagged media characteristics = {%@}
, default = YES
, auxiliary = YES
, fallback track or variant IDs = {%@}
, forced subtitles only
, associated forced-only option = <%@: %p>
'%c%c%c%c'
, mediaSubTypes = {%@}
, mediaType = '%@'%@%@%@%@%@%@%@
SUBTITLE_TRACK_DISPLAY_FORMAT
AVMediaSelectionOption
%2$@
SDH_SUBTITLE_FORMAT
%1$@
FORCEDONLY_SUBTITLE_FORMAT
EASYTOREAD_SUBTITLE_FORMAT
CC_SUBTITLE_FORMAT
DESCRIBESVIDEO_AUDIO_FORMAT
VOICEOVERTRANSLATION_AUDIO_FORMAT
ORIGINAL_AUDIO_FORMAT
AUDIOENCODING_AUDIO_FORMAT
UNKNOWN_LANGUAGE
displayNameWithLocale requires an NSLocale
nil selection option for the following group: %@
%@%@
stringWithValidatedFormatArg2
stringWithValidatedFormat
inspector_trace
Output settings dictionary is empty and valid
Output settings dictionary is valid
Output settings dictionary contains one or more invalid keys: %@
outputSettingsDictionary != nil
Output settings dictionary does not contain any recognized keys
<%@: %p, outputSettingsDictionary=%@>
UTI != nil
Invalid file type UTI.  Available file types are: %@
<%@: %p, UTI = %@>
formatDesc != NULL
fileType != nil
Format ID '%@' is not compatible with file type %@
Cannot write non-interleaved audio to a file
[[fileType UTI] isEqualToString:AVFileTypeWAVE]
WAVE files cannot contain floating-point LPCM
WAVE files cannot contain big-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFF]
AIFF files cannot contain floating-point LPCM
AIFF files cannot contain little-endian LPCM
[[fileType UTI] isEqualToString:AVFileTypeAIFC]
AIFC files cannot contain little-endian LPCM
The video codec %@ is not compatible with file type %@
Uncompressed video is not allowed for file type %@
not implemented
avAudioSettingsDictionary != nil
AVAudioSettings dictionary must contain AVFormatIDKey
Cannot specify both AVEncoderBitRateKey and AVEncoderBitRatePerChannelKey
If one of AVLinearPCMIsFloatKey and AVLinearPCMBitDepthKey is specified, both must be specified
Bit depth can only be one of: %@
Bit depth hint can only be one of: %@
Bit rate strategy can only be one of: %@
Value for AVEncoderAudioQualityForVBRKey must be an instance of %@
Cannot specify a value for AVEncoderAudioQualityForVBRKey without also specifying AVAudioBitRateStrategy_Variable for AVEncoderBitRateStrategyKey
Floating-point LPCM must be 32-bit
Channel count must be positive
AudioChannelLayout is invalid
AudioChannelLayout channel count must be positive
AudioChannelLayout channel count does not match AVNumberOfChannelsKey channel count
Invalid value %.2f for AVSampleRateKey; sample rate must be between 8.0 and 192.0 kHz inclusive
Value for AVSampleRateConverterAlgorithmKey must be an instance of NSString
Unrecognized value "%@" for AVSampleRateConverterAlgorithmKey
The following keys are not allowed when format ID is '%@': %@
%g Hz is not a valid sample rate for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeSampleRates (<AudioToolbox/AudioFormat.h>) to enumerate available rates for a given format.
%d is not a valid channel count for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeNumberChannels (<AudioToolbox/AudioFormat.h>) to enumerate available channel counts for a given format.
Channel layout is not valid for Format ID '%@'.  Use kAudioFormatProperty_AvailableEncodeChannelLayoutTags (<AudioToolbox/AudioFormat.h>) to enumerate available channel layout tags for a given format.
Missing required key %@
-[AVAVAudioSettingsAudioOutputSettings getAudioStreamBasicDescription:forAudioFileTypeID:sourceFormatDescription:]
Unrecognized bit rate strategy
Unrecognized value for %@: %@
Pixel buffer attributes width and height must be nonnegative
Value for AVVideoScalingModeKey must be one of: %@
Value for kCVPixelBufferMetalCompatibilityKey must be an NSNumber wrapping a BOOL
Compression property %@ is not supported for video codec type %@
Video codec type %@ expects a value for compression property %@ in a particular numeric range, but property value %@ is not numeric
Video codec type %@ does not allow values for %@ that are numerically less than %@
Video codec type %@ does not allow values for %@ that are numerically greater than %@
For compression property %@, video codec type %@ only allows the following values: %@
av_kVTPropertyInitialValueKey
For compression property %@, video codec type %@ only allows the value %@
avVideoSettingsDictionary != nil
AVVideoSettings dictionary must contain AVVideoCodecKey
AVVideoSettings dictionary must specify a height if it specifies a width
AVVideoSettings dictionary must specify a width if it specifies a height
AVVideoSettings dictionary must specify a positive width
AVVideoSettings dictionary must specify a positive height
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoAverageBitRateKey
AVVideoCompressionPropertiesKey dictionary must specify a value between 0.0 and 1.0 for AVVideoQualityKey
AVVideoCompressionPropertiesKey dictionary must specify a non-negative value for AVVideoMaxKeyFrameIntervalDurationKey
AVVideoCompressionPropertiesKey dictionary must specify a positive value for AVVideoMaxKeyFrameIntervalKey
Value for AVVideoH264EntropyModeKey must be an instance of NSString
Value for AVVideoExpectedSourceFrameRateKey must be an instance of NSNumber
Value for AVVideoAllowFrameReorderingKey must be an instance of NSNumber
Value for AVVideoAverageNonDroppableFrameRateKey must be an instance of NSNumber
Dictionary for AVVideoPixelAspectRatioKey contains one or more unrecognized keys: %@
Value for AVVideoPixelAspectRatioKey must be an instance of NSDictionary
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioHorizontalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must specify a positive value for AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoPixelAspectRatioKey must contain NSNumber values for both AVVideoPixelAspectRatioHorizontalSpacingKey and AVVideoPixelAspectRatioVerticalSpacingKey
Dictionary for AVVideoCleanApertureKey contains one or more unrecognized keys: %@
Clean aperture region must be contained within the bounds specified by width & height
Value for AVVideoCleanApertureKey must be an instance of NSDictionary
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureHorizontalOffsetKey
Dictionary for AVVideoCleanApertureKey must specify a value for AVVideoCleanApertureVerticalOffsetKey
Value for AVVideoCleanApertureWidthKey must be an instance of NSNumber
Value for AVVideoCleanApertureHeightKey must be an instance of NSNumber
Value for AVVideoCleanApertureHorizontalOffsetKey must be an instance of NSNumber
Value for AVVideoCleanApertureVerticalOffsetKey must be an instance of NSNumber
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureWidthKey
Dictionary for AVVideoCleanApertureKey must specify a positive value for AVVideoCleanApertureHeightKey
Dictionary for AVVideoColorPropertiesKey must contain all three color keys (AVVideoColorPrimariesKey, AVVideoTransferFunctionKey, AVVideoYCbCrMatrixKey) and it may not contain any other keys
Value for AVVideoColorPrimariesKey must be one of: %@
Value for AVVideoTransferFunctionKey must be one of: %@
Value for AVVideoYCbCrMatrixKey must be one of: %@
Dictionary for AVVideoColorPropertiesKey must be an NSDictionary
Dictionary for AVVideoAllowWideColorKey must be an NSNumber
AVVideoMinimumFrameDuration must be numeric
AVVideoMinimumFrameDuration must be greater than kCMTimeZero
Dictionary for AVVideoMinimumFrameDuration must be an NSDictionary
AVVideoFrameRateConversionAlgorithm must be either AVVideoFrameRateConversionAlgorithmFast or AVVideoFrameRateConversionAlgorithmPrecise
String for AVVideoFrameRateConversionAlgorithm must be an NSString
kVTDecompressionPropertyKey_FieldMode must be one of: kVTDecompressionProperty_FieldMode_BothFields, kVTDecompressionProperty_FieldMode_TopFieldOnly, kVTDecompressionProperty_FieldMode_BottomFieldOnly, kVTDecompressionProperty_FieldMode_SingleField, or kVTDecompressionProperty_FieldMode_DeinterlaceFields
String for kVTDecompressionPropertyKey_FieldMode must be an NSString
Value for kVTDecompressionPropertyKey_PropagatePerFrameHDRDisplayMetadata must be an NSNumber
AVVideoEmitSequencesAtSyncFramesOnly must be greater than zero
AVVideoEmitSequencesAtSyncFramesOnly must be an NSNumber
AVVideoPixelAspectRatioKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Pixel aspect ratio can only be specified once
Value for pixel aspect ratio must be an instance of NSDictionary
AVVideoCleanApertureKey can only be specified at the top level of the dictionary or in the AVVideoCompressionPropertiesKey sub-dictionary, not both
Clean aperture can only be specified once
Value for clean aperture must be an instance of NSDictionary
<%@: %p, minimum = %f, maximum = %f>
AVAssetDownloadSessionDownloadSucceededNotification
AVAssetDownloadSessionDownloadFailedNotification
AVAssetDownloadSessionFileSizeAvailableNotification
AVAssetDownloadSessionLoadedTimeRangesChangedNotification
AVAssetDownloadSessionCurrentLoadedTimeRangesKey
AVAssetDownloadSessionNewlyLoadedTimeRangeKey
AVAssetDownloadSessionTimeRangeExpectedToLoadKey
AVAssetDownloadSessionDidResolveMediaSelectionNotification
AVAssetDownloadSessionPriorityKey
AVAssetDownloadSessionProtectedContentSupportStorageURLKey
AVAssetDownloadSessionPurchaseBundleKey
AVAssetDownloadSessionAirPlayAuthorizationInfoKey
AVAssetDownloadSessionCachePrimingDownloadTokenKey
AVAssetDownloadSessioniTunesStoreContentInfoKey
AVAssetDownloadSessioniTunesStoreContentIDKey
AVAssetDownloadSessioniTunesStoreContentTypeKey
AVAssetDownloadSessioniTunesStoreContentUserAgentKey
AVAssetDownloadSessioniTunesStoreContentDownloadParametersKey
AVAssetDownloadSessioniTunesStoreContentDSIDKey
AVAssetDownloadSessioniTunesStoreContentPurchasedMediaKindKey
AVAssetDownloadSessionHTTPCookiesKey
AVAssetDownloadSessionClientBundleIdentifierKey
AVAssetDownloadSessionHTTPHeaderFieldsKey
AVAssetDownloadSessionClientAuditTokenKey
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey
AVAssetDownloadSessionAllowsCellularAccessKey
AVAssetDownloadSessionAllowsExpensiveNetworkAccessKey
AVAssetDownloadSessionAllowsConstrainedNetworkAccessKey
AVAssetDownloadSessionMinimumRequiredMediaBitrateKey
AVAssetDownloadSessionMediaSelectionKey
AVAssetDownloadSessionDeleteDownloadWhenAssetFinalizesKey
AVAssetDownloadSessionLinkAssetURLToDestinationURLKey
AVAssetDownloadSessionShouldStoreEligibleContentKeysKey
AVAssetDownloadSessionAssetNameKey
AVAssetDownloadSessionAssetImageDataKey
AVAssetDownloadSessionOptimizeAccessForLinearMoviePlaybackKey
AVAssetDownloadSessionAlternativeConfigurationOptionsKey
AVAssetDownloadSessionMediaSelectionPrefersMultichannelKey
AVAssetDownloadSessionDebugIdentifierKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AVAssetDownloadTaskMediaSelectionKey
AVAssetDownloadTaskShouldStoreEligibleContentKeysKey
AVAssetDownloadTaskDestinationURLKey
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
AVAssetDownloadTaskAllowHighDynamicRangeKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelOnlyKey
AVAssetDownloadTaskMediaSelectionPrefersMultichannelForMostPreferredLanguageOnlyKey
AVAssetDownloadTaskMediaSelectionsForMultichannelKey
AVAssetDownloadTaskPrefersHDRKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateForHEVCKey
AVAssetDownloadTaskPrefersMostCompatibleRenditionKey
AVAssetDownloadSessionRetryErrorKey
AVAssetDownloadTaskClientIsCatalyst
AVAssetDownloadTaskPrefersLosslessAudioKey
AVAssetDownloadTaskMaximumAudioSampleRateKey
AVAssetDownloadTaskDownloadConfigurationKey
download_trace
com.apple.avfoundation.avassetdownloadsession
URL != nil
[destinationURL isFileURL]
-[AVAssetDownloadSession initWithURL:destinationURL:options:]
AVAssetDownloadSessionMaxSizeAllowedForCellularAccessKey and AVAssetDownloadSessionAllowsCellularAccessKey options are incompatible
downloadToken > 0
-[AVAssetDownloadSession initWithDownloadToken:]
asset != nil || options[AVAssetDownloadTaskDownloadConfigurationKey] != nil
(asset != nil && [asset isKindOfClass:[AVURLAsset class]]) || asset == nil
mediaSelections == nil || [mediaSelections isKindOfClass:[NSArray class]]
-[AVAssetDownloadSession initWithAsset:mediaSelections:destinationURL:options:]
-[AVAssetDownloadSession start]
-[AVAssetDownloadSession pause]_block_invoke
-[AVAssetDownloadSession stop]_block_invoke
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) ensureProgressTimerIsRunningOnQueueWithError:]_block_invoke
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _setupFigClientObjectAsync:]_block_invoke_2
file
NULL figAsset
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _setFileFigAsset:]
AVAssetDownloadSession.m
figAsset already set
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _startOnQueueFirstTime]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _startOnQueue]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _transitionToTerminalStatus:error:]_block_invoke
completed
failed
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _primeCacheOnDispatchQueue]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _primeCache]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _readyForInspection]
-[AVAssetDownloadSession(AVAssetDownloadSession_Local) _verifyDownloadConfigurationForAssetType]
avAssetDownloadSession_figAssetNotificationCallback
avAssetDownloadSession_figPlaybackItemNotificationCallback
avsamplecursor_trace
<%@: %p, PTS = %@, DTS = %@>
-[AVSampleCursor stepByDecodeTime:wasPinned:]
-[AVSampleCursor stepByPresentationTime:wasPinned:]
-[AVSampleCursor createSampleBufferForCurrentSampleReturningError:]
-[AVSampleCursor createSampleBufferFromCurrentSampleToEndCursor:error:]
avplayeritemoutput_trace
<%@: %p> timebase read/write queue
-[AVPlayerItemOutput _itemTimeForHostTimeAsCMTime:]
AVPlayerItemVideoOutput does not support compressed output
-[AVPlayerItemVideoOutput setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:]
AVPlayerItemOutput queue
-[AVPlayerItemVideoOutput requestNotificationOfMediaDataChangeWithAdvanceInterval:]_block_invoke
-[AVPlayerItemVideoOutput requestNotificationOfMediaDataChangeAsSoonAsPossible]_block_invoke
-[AVPlayerItemVideoOutput _copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:]
-[AVPlayerItemVideoOutput _dispatchOutputMediaDataWillChange]_block_invoke
-[AVPlayerItemVideoOutput _dispatchOutputSequenceWasFlushed]
-[AVPlayerItemVideoOutput _dispatchOutputSequenceWasFlushed]_block_invoke
AVPlayerItemVideoOutput_timebaseNotificationCallback_block_invoke
AVPlayerItemVideoOutput_figVCSequentialAvailable_block_invoke_3
com.apple.avfoundation.avfragmentedassetminder
An %@ cannot mind fragmented assets more frequently than once per millisecond (requested interval was %f)
An %@ cannot mind instances of %@
%@ cannot add an %@ that's already being minded by another fragment minder
*** -[%@ addFragmentedAsset:] specifies an asset that's already associated with a fragment minder. Ignoring.
AVPixelBufferAttributeMediatorPixelBufferAttributesDidChangeNotification
avpixelbufferattributemediator_trace
AVSampleBufferDisplayLayerFailedToDecodeNotification
AVSampleBufferDisplayLayerFailedToDecodeNotificationErrorKey
AVSampleBufferDisplayLayerRequiresFlushToResumeDecodingDidChangeNotification
AVSampleBufferDisplayLayerOutputObscuredDueToInsufficientExternalProtectionDidChangeNotification
AVSampleBufferDisplayLayerVideoRectDidChangeNotification
AVSampleBufferDisplayLayerVisibilityDidChangeNotification
-[AVSampleBufferDisplayLayer _updateLayerTreeGeometryWithVideoGravity:presentationSize:videoGravityShouldTriggerAnimation:]
avsamplebufferdisplaylayer_trace
AVSampleBufferDisplayLayerQueue
AVSampleBufferDisplayLayer <%p>
AVSampleBufferDisplayLayer <%p> (content layer)
-[AVSampleBufferDisplayLayer init]
-[AVSampleBufferDisplayLayer dealloc]
-[AVSampleBufferDisplayLayer layerDidBecomeVisible:]
-[AVSampleBufferDisplayLayer videoRect]
-[AVSampleBufferDisplayLayer postVideoRectDidChangeNotification]
-[AVSampleBufferDisplayLayer setSTSLabel:]
-[AVSampleBufferDisplayLayer setSTSLabel:]_block_invoke
separatedOptions.STSLabel
sampleBufferVideoRenderer.status
sampleBufferVideoRenderer.error
sampleBufferVideoRenderer.outputObscuredDueToInsufficientExternalProtection
AVSampleBufferDisplayLayer: No formatDescription found in sampleBuffer
StreamingContentKeyRequestRequiresPersistentKey
StreamingContentKeyRequiresiTunesProvisioningKey
can be decoded only by a NSXPCCoder
endpoint
NSXPCCoder returned NULL endpoint
customURLHandlerObjectID
authHandlerObjectID
contentKeySessionHandlerObjectID
can be encoded only by a NSXPCCoder
avassetresourceloader_trace
com.apple.avfoundation.avassetresourceloader.state
com.apple.avfoundation.avassetresourceloader.contentInformationCaching
com.apple.avfoundation.avassetresourceloader.handler
AVAssetResourceLoader
com.apple.avfoundation.avassetresourceloader.authhandler
AVAssetResourceLoader-authentication
not an AVAssetResourceLoaderRemoteHandlerContext
-[AVAssetResourceLoader initWithURLRequestHelper:asset:remoteCustomURLHandlerContext:]
AVAssetResourceLoader.m
NULL delegateQueue passed
delegate
delegateQueue
-[AVAssetResourceLoader _performDelegateSelector:withObject:representingNewRequest:key:fallbackHandler:]_block_invoke
v16@?0@"<AVAssetResourceLoaderDelegate>"8
v12@?0B8
The specified challenge must be an instance of NSURLAuthenticationChallenge previously provided by AVAssetResourceLoader
The specified credential must be an instance of NSURLCredential
<%@: %p, content type = "%@", content length = %lld, byte range access supported = %@, disk caching permitted = %@, renewal date = %@>
Accept-Ranges
no-cache
Content-Type
com.apple.avfoundation.avassetresourceloadingdatarequest
<%@: %p, requested offset = %lld, requested length = %lld, requests all data to end of resource = %@, current offset = %lld>
-[AVAssetResourceLoadingDataRequest respondWithData:]
com.apple.avfoundation.avassetresourceloadingrequest.dataCaching
bytes=%lld-%lld
AVAssetResourceLoadingRequest %p deallocated while a streaming content key request is still being generated; leaking completion handler. Either keep a retain of the AVAssetResourceLoadingRequest in -generateStreamingContentKeyRequestDataAsynchronouslyForApp's completionHandler or wait until completionHandler is called before calling -finishLoading/-finishLoadingWithError:.
<%@: %p, URL request = %@, request ID = %llu, content information request = %@, data request = %@>
-[AVAssetResourceLoadingRequest _appendToCachedData:]
-[AVAssetResourceLoadingRequest _appendToCachedData:]_block_invoke
Already have a cachedContentInformation
FCUP_Response_RequestID
FCUP_Response_URL
FCUP_Response_Headers
FCUP_Response_IsContentKeyRequest
-[AVAssetResourceLoadingRequest _sendResponseInfoToCustomURLHandler]
-[AVAssetResourceLoadingRequest _sendDataToCustomURLHandler:]
-[AVAssetResourceLoadingRequest _sendFinishLoadingToCustomURLHandlerWithError:]
no contentKeySession
-[AVAssetResourceLoadingRequest finishLoading]
*** -[AVAssetResourceLoadingRequest finishLoading] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
Must respond with a contentType contained in AVAssetResourceLoadingContentInformationRequest.allowedContentTypes.
-[AVAssetResourceLoadingRequest finishLoadingWithError:]
*** -[AVAssetResourceLoadingRequest finishLoadingWithError:] was sent to an instance of AVAssetResourceLoadingRequest that was already finished. Ignoring.
StreamingContentKeyIsForAirPlayKey
CSKRO_RemoteContext
kFigCPEError_InvalidState
Cryptor is not available to create key request.
-[AVAssetResourceLoadingRequest keyRequestDataUsingCryptorForApp:contentIdentifier:options:performAsync:error:]
Cannot generate content key request when AVAsset is attached to AVContentKeySession
appIdentifier != nil
contentIdentifier != nil
A streaming content key request is already being generated on this AVAssetResourceLoadingRequest.
keyVendorResponse != NULL
-[AVAssetResourceLoadingRequest persistentContentKeyFromKeyVendorResponse:options:error:]
customURLHandlerHandleRequestCallback
not an AVAssetResourceLoader
mismatched handler
customURLHandlerRequestCancelled
customURLAuthHandlerHandleRequestCallback
customURLAuthHandlerRequestCancelled
AVSampleBufferRenderSynchronizerRateDidChangeNotification
avsamplebufferrendersynchronizer_trace
-[AVSampleBufferRenderSynchronizer init]
com.apple.avfoundation.avsamplebufferrendersynchronizer.ratequeue
com.apple.avfoundation.avsamplebufferrendersynchronizer.synchronizeraccessqueue
com.apple.avfoundation.avsamplebufferrendersynchronizer.rendererlistqueue
-[AVSampleBufferRenderSynchronizer dealloc]
rendersynchronizer_sts_label
+[AVSampleBufferRenderSynchronizer _makeSTSLabel]_block_invoke
WILL
WILL NOT
com.apple.avfoundation.STS.%d-%d
newRate >= 0.0
Invalid renderer configuration; forcing rate to 0. rather than %1.3f
-[AVSampleBufferRenderSynchronizer _setRate:time:atHostTime:]
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _addRenderer:error:]
v16@?0@"NSString"8
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _addRenderer:error:]_block_invoke_2
invalid renderer
Cannot add renderer %p %@
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) addRenderer:]
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _createOnceTimebaseObserverForRemovalOfRenderer:atTime:]_block_invoke
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererManagement) _scheduleTimedRendererRemovalAtTime:atTime:withClientCompletionHandler:]
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererRestrictions) _canAddRendererInternal:error:]
The SampleBufferRenderer cannot be added to a Synchronizer more than once.
Multiple AudioRenderers not allowed when using Long Form Routing Policy.
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerRendererRestrictions) _rendererConfigurationIsValid:]
-[AVSampleBufferRenderSynchronizer(AVSampleBufferRenderSynchronizerTimeObservation) removeTimeObserver:]
An instance of AVSampleBufferRenderSynchronizer cannot remove a time observer that was added by a different instance of AVSampleBufferRenderSynchronizer.
avrendersynchronizer_timebaseRateChanged
renderer
onceTimebaseObserver
clientCompletionHandler
avrendersynchronize_electRendererForSTSAndSendLabelToAudioRenderers
avrendersynchronize_cleanUpAllAddedRenderers
AVSampleBufferRenderSynchronizerFigFactoryKey
BOOL AVCanWriteFilesToDirectoryAtURL(NSURL *, NSError **)
AVFileSystemUtilities.m
directoryURL != nil
filesystemutilities_trace
TemporaryFileForAVFoundation
AVCanWriteFilesToDirectoryAtURL
<%@: %p, peakBitRate:%d averageBitRate:%d video:%@ audio:%@>
variant
hlsvariant_trace
[mediaSelectionOption isKindOfClass:[AVMediaSelectionOption class]]
<%@: %p, formatIDs:%@>
one of the constituent parts of %@ are not supported by AVAssetVariantQualifier error:%@
predicate
channelCount
mediaSelectionOption
operator
-[AVAssetVariantChannelCountPredicate evaluateWithObject:substitutionVariables:]
creation using format string is not supported
<%@: %p, count:%d operator:%@ option:%@>
width
-[AVAssetVariantPresentationWidthPredicate evaluateWithObject:substitutionVariables:]
<%@: %p, width:%lf operator:%@>
height
-[AVAssetVariantPresentationHeightPredicate evaluateWithObject:substitutionVariables:]
<%@: %p, height:%lf operator:%@>
AVCGColorAttributes
Not available.  Use %@ instead
<%@: %p
, principalMediaCharacteristics = %@
, preferredLanguages = %@
, preferredMediaCharacteristics = %@
, preferredMediaSubTypes = %@
, precludedMediaSubTypes = %@
, preferMultichannelAudio
, precludeMultichannelAudio
preferredLanguages must contain only items of type NSString
preferredMediaCharacteristics must contain only items of type NSString
principalMediaCharacteristics must contain only items of type NSString
preferredMediaSubTypes must contain only items of type NSNumber
precludedMediaSubTypes must contain only items of type NSNumber
-[AVAsynchronousCIImageFilteringRequest sourceImage]
-[AVAsynchronousCIImageFilteringRequest finishWithImage:context:]
filteredImage != nil
-[AVAsynchronousCIImageFilteringRequest finishWithError:]
avcifilter_trace
com.apple.AVStorylineCustomVideoCompositor._renderContextQ
-[AVCoreImageFilterCustomVideoCompositor renderContextChanged:]
-[AVCoreImageFilterCustomVideoCompositor startVideoCompositionRequest:]
Expecting video composition to contain only AVCoreImageFilterVideoCompositionInstruction
B8@?0
@"CIContext"8@?0
-[AVCoreImageFilterCustomVideoCompositor cancelAllPendingVideoCompositionRequests]
AVPlayerItemLegibleOutputTextStylingResolutionDefault
AVPlayerItemLegibleOutputTextStylingResolutionSourceAndRulesOnly
avplayeritemlegibleoutput_trace
subtypes != nil
com.apple.avplayeritemlegibleoutput.ivars
[mediaSubtypeObject isKindOfClass:[NSNumber class]]
integerValueAppearsToBeAFourCC
Native representation is not available for media subtype 'c608'
"%@"
-[AVPlayerItemLegibleOutput _pushAttributedStrings:andSampleBuffers:atItemTime:]_block_invoke
-[AVPlayerItemLegibleOutput _signalFlush]
-[AVPlayerItemLegibleOutput _signalFlush]_block_invoke
Invalid text styling resolution %@
AVOutputSettingsPreset640x480
AVOutputSettingsPreset960x540
AVOutputSettingsPreset1280x720
AVOutputSettingsPreset1920x1080
AVOutputSettingsPreset3840x2160
AVOutputSettingsPresetHEVC1920x1080
AVOutputSettingsPresetHEVC1920x1080WithAlpha
AVOutputSettingsPresetHEVC3840x2160
AVOutputSettingsPresetHEVC3840x2160WithAlpha
AVOutputSettingsPresetHEVC7680x4320
CMTIME_IS_NUMERIC(sourceVideoAverageFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoAverageFrameDuration, >, kCMTimeZero)
CMTIME_IS_NUMERIC(sourceVideoMinFrameDuration)
CMTIME_COMPARE_INLINE(sourceVideoMinFrameDuration, >, kCMTimeZero)
AVMediaSelection_DefaultSelection
[propertyList isKindOfClass:[NSArray class]]
 %@ : %@ 
<%@: %p, group characteristics and selected options = %@>
-[AVExternalDeviceHID _figEndpointHIDInputMode]
-[AVExternalDeviceHID initWithExternalDeviceAndHIDDictionary:hidDictionary:]
-[AVExternalDeviceHID setInputMode:]
-[AVExternalDeviceIcon initWithDictionary:]
widthPixels
heightPixels
imageData
prerendered
Knobs
LowFidelityTouch
HighFidelityTouch
Touchpad
softKeyboard
softPhoneKeypad
nonMusicLists
musicLists
japanMaps
ExternalDevice_ScreenBecameAvailable
ExternalDevice_ScreenBecameUnavailable
ExternalDevice_NightModeChangedNotification
ExternalDevice_LimitedUIChangedNotification
ExternalDevice_OwnsTurnByTurnNavigationChangedNotification
ExternalDevice_PerformanceReportNotificationPosted
ExternalDevice_MFiCertificateSerialNumberChangedNotification
ExternalDevice_ElectronicTollCollectionChangedNotification
ExternalDevice_NavigationAidedDrivingChangedNotification
enhancedRequestCarUI
-[AVExternalDeviceScreenBorrowToken initWithExternalDevice:client:reason:]
-[AVExternalDeviceScreenBorrowToken dealloc]
-[AVExternalDeviceTurnByTurnToken initWithExternalDevice:]
-[AVExternalDeviceTurnByTurnToken dealloc]
externaldevice_trace
com.apple.AVFoundation.AVExternalDevice
com.apple.AVFoundation.AVExternalDevice.ViewAreas
viewAreaIndex
adjacentViewAreas
-[AVExternalDevice _figEndpointPropertyValueForKey:]
-[AVExternalDevice screenIDs]
-[AVExternalDevice screenInputCapabilities]
-[AVExternalDevice screenPrimaryInputDevices]
-[AVExternalDevice externalDeviceHIDs]_block_invoke
active
com.apple.springboard
InitialCarPlayConnection
TestTakeScreenAway
payload
TestNotification
figEndpointNotificationCallback
uuid
avplayercaptionlayer_trace
AVPlayerCaptionLayerQueue
com.apple.avfoundation.playercaptionlayer.configuration
AVPlayerCaptionLayer <%p>
-[AVPlayerCaptionLayer layoutSublayers]
-[AVPlayerCaptionLayer setBounds:]
-[AVPlayerCaptionLayer setPlayer:]
-[AVPlayerCaptionLayer _startObservingPlayer:]
-[AVPlayerCaptionLayer _stopObservingPlayer:]
-[AVPlayerCaptionLayer observeValueForKeyPath:ofObject:change:context:]
-[AVPlayerCaptionLayer observeValueForKeyPath:ofObject:change:context:]_block_invoke
avcc_trace
-[AVCustomVideoCompositorSession initWithVideoComposition:]
com.apple.avcustomvideocompositorsession.clientcustomcompositorq
com.apple.avcustomvideocompositorsession.rendercontextq
com.apple.avcustomvideocompositorsession.clienterrorq
com.apple.avcustomvideocompositorsession.videocompositionq
com.apple.avcustomvideocompositorsession.finishedrequestq
sourcePixelBufferAttributes must not be nil. (AVVideoCompositing=%p)
sourcePixelBufferAttributes must be an NSDictionary. (AVVideoCompositing=%p)
sourcePixelBufferAttributes must contain kCVPixelBufferPixelFormatTypeKey. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must contain at least one item. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in AVVideoCompositing sourcePixelBufferAttributes must be either an NSArray or an NSNumber. (AVVideoCompositing=%p)
requiredPixelBufferAttributesForRenderContext must not be nil. (AVVideoCompositing=%p)
requiredPixelBufferAttributesForRenderContext must contain kCVPixelBufferPixelFormatTypeKey. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in requiredPixelBufferAttributesForRenderContext must contain at least one item. (AVVideoCompositing=%p)
Value of kCVPixelBufferPixelFormatTypeKey in requiredPixelBufferAttributesForRenderContext must be either an NSArray or an NSNumber. (AVVideoCompositing=%p)
-[AVCustomVideoCompositorSession commitCustomVideoCompositorPropertiesAndReturnError:]
-[AVCustomVideoCompositorSession(AVCustomVideoCompositorSession_FigCallbackHandling) _compositionFrame:atTime:requiresRenderUsingSources:requiresSampleBuffersUsingSources:withInstruction:]_block_invoke_2
-[AVCustomVideoCompositorSession(AVCustomVideoCompositorSession_FigCallbackHandling) _customCompositorFigPropertyDidChange]_block_invoke
This instance is never deallocated
observedObject != nil
keyPath != nil
dependentProperty
-[AVKVODispatcher observeValueForKeyPath:ofObject:change:context:]
v16@?0@"NSDictionary"8
v24@?0@"NSObject<AVWeakObservable>"8@"NSDictionary"16
callbackContextRegistry != nil
observer != nil
object != nil
-[AVClientBlockKVONotifier dealloc]
-[AVClientBlockKVONotifier start]
-[AVClientBlockKVONotifier cancelCallbacks]
*** Weakly-observed object %p was deallocated without cancelling outstanding registration %p.  You are most likely about to get an exception from KVO.  To fix, make sure that %p properly implements the %@ protocol
-[AVWeaklyObservedObjectClientBlockKVONotifier start]
*** Received KVO for object %p that is being deallocated.  This can cause other objects to get a reference to %p while it is in an inconsistent state.  Break on AVKVODispatcherKVODuringObjectTeardownBreak() to debug
-[AVWeaklyObservedObjectClientBlockKVONotifier cancelCallbacks]
v24@?0@"NSObject"8@"NSDictionary"16
Cannot safely use %@ with %@ or its subclasses, due to rdar://problem/26865139, until we
 stop supporting legacy versions of iWork apps
kvodispatcher_trace
dependentPropertyKey != nil
dependencyKeyPath != nil
com.apple.avfoundation.keypathdependency.registration
<%@: %p, target=%@, dependentKey="%@", dependencyKeyPath="%@">
<deallocated>
Must invoke with object passed to initializer
v32@?0@"AVKeyPathDependency"8@"NSObject<AVWeakObservable>"16@"NSDictionary"24
-[AVKeyPathDependency _startObservingSecondLevelPropertyOnNewCurrentValueForTopLevelDependencyProperty:]
v24@?0@"AVKeyPathDependency"8@"NSDictionary"16
-[AVKeyPathDependency _reactToTopLevelPropertyChange:]
-[AVKeyPathDependency _reactToTopLevelPropertyChange:]_block_invoke
-[AVKeyPathDependency _reactToSecondLevelPropertyChange:]
%@.%@
topLevelDependencyProperty
observedObject
unfinished AVAsynchronousVideoCompositionRequest deallocated - should have called finishWithComposedVideoFrame:, finishWithError: or finishCancelledRequest
finishWithComposedVideoFrame requires a CVPixelBuffer
ignored -[AVAsynchronousVideoCompositionRequest finishWithComposedVideoFrame:] because already finished
ignored -[AVAsynchronousVideoCompositionRequest finishWithError:] because already finished
ignored -[AVAsynchronousVideoCompositionRequest finishCancelledRequest:] because already finished
AVRouteDetectorMultipleRoutesDetectedDidChangeNotification
routedetector_trace
com.apple.avfoundation.avroutedetector.ivars
-[AVRouteDetector init]_block_invoke_4
-[AVRouteDetector init]_block_invoke
-[AVRouteDetector _updateMultipleRoutesDetected]
-[AVRouteDetector _updateRouteDetectionEnabled]
-[AVRouteDetector _updateRouteDetectionEnabled]_block_invoke
v16@?0@"DAEvent"8
-[AVRouteDetector _didEnterBackground]
-[AVRouteDetector _didEnterForeground]
sharedApplication
applicationState
DADiscoveryConfiguration
/System/Library/PrivateFrameworks/DeviceAccess.framework/DeviceAccess
DADiscovery
-[AVVideoCompositionRenderContext newPixelBuffer]_block_invoke
-[AVVideoCompositionRenderContext(Internal) initWithFigVideoCompositor:clientRequiredPixelBufferAttributes:videoComposition:pixelBufferPool:]
com.apple.avvideocompositionrendercontext.pixelbufferpoolq
-[AVVideoCompositionRenderContext(Internal) pixelBufferPool]
LowQualityZeroLatency
TimeDomain
Spectral
Varispeed
AVMovieReferenceRestrictionsKey
AVMovieShouldPrepareToOptimizeForExclusivePlaybackKey
AVMovieShouldSupportAliasDataReferencesKey
avmovie_trace
-[AVMovie init]
-[AVMovie initWithURL:options:]
-[AVMovie initWithData:options:]
[[AVMovie movieTypes] containsObject:contentType]
-[AVMovie _initWithFigAsset:]
-[AVMovie _initWithFormatReader:URL:data:options:]
-[AVMovie _initWithFigError:userInfo:]
-[AVMutableMovie initWithURL:options:error:]
-[AVMutableMovie initWithData:options:error:]
-[AVMutableMovie initWithSettingsFromMovie:options:error:]
-[AVMutableMovie _initWithFormatReader:URL:data:options:]
![self isMemberOfClass:[AVMutableMovie class]]
-[AVMutableMovie setPreferredTransform:]
<%@: %p defaultMediaDataStorage = %@, tracks = %@ >
<%@: %p tracks = %@ >
Can't copy settings from an AVAssetTrack with a non-matching media type
existingTracks != nil
[track isKindOfClass:[AVAssetTrack class]]
avsamplebufferoutput_trace
AVPlayerItemSampleBufferOutput state
-[AVPlayerItemSampleBufferOutput copyNextSampleBufferForTrackID:flags:]
-[AVPlayerItemSampleBufferOutput _figPlaybackItemTrackSampleBufferDidBecomeAvailableForTrackID:extractionID:]_block_invoke_2
-[AVPlayerItemSampleBufferOutput _figPlaybackItemTrackSampleBufferDidBecomeAvailableForTrackID:extractionID:]_block_invoke
-[AVPlayerItemSampleBufferOutput _figPlaybackItemTrackOutputSequenceWasFlushedForTrackID:extractionID:]_block_invoke_2
-[AVPlayerItemSampleBufferOutput _figPlaybackItemTrackOutputSequenceWasFlushedForTrackID:extractionID:]_block_invoke
figPlaybackItemTrackSampleBufferDidBecomeAvailable
figPlaybackItemTrackResetSampleBufferExtraction
AVContentKeySessionLegacyWebKitCompatibilityMode
FairPlayStreaming
ClearKeySystem
AuthorizationTokenSystem
ProtocolVersionsKey
RequiresValidationDataInSecureTokenKey
RequiresExtendedValidationDataInSecureTokenKey
SupportsAirPlayDecryptionKey
ServerChallenge
CreateDecryptorUsingFormatDescription
ReceivedKeyResponseAfterSPCTimedOut
ReceivedKeyResponseWithExpiredLease
ReceivedObsoleteKeyResponse
%@ does not support key persistence
HLSMethodKey
failed to alloc content key request
-[AVContentKeyRequest initWithContentKeySession:reportGroup:identifier:contentIdentifier:keyIDFromInitializationData:initializationData:preloadingRequestOptions:providesPersistableKey:]
AVContentKeySession.m
Failed on init
-[AVContentKeyRequest initWithContentKeySession:reportGroup:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:isRenewalRequest:]
-[AVContentKeyRequest initWithContentKeySession:contentKeyBoss:useContentKeyBoss:keySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:isRenewalRequest:requestID:providesPersistableKey:preloadingRequestOptions:identifier:]
<%@: %p status:%d>
-[AVContentKeyRequest _setError:]_block_invoke
v16@?0@"<AVContentKeySessionDelegate>"8
-[AVContentKeyRequest _handleKeyResponseError:]
-[AVContentKeyRequest _handleKeyResponseError:]_block_invoke
-[AVContentKeyRequest _handleKeyResponseSuccessWithCryptor:]_block_invoke
-[AVContentKeyRequest ensureCryptorWithFormatDescription:error:]
value against AVContentKeyRequestProtocolVersionsKey should be an array of NSNumber objects
ISO_23001_7
SAMPLE-AES
value against AVContentKeyRequestHLSMethodKey is not recognized
value against AVContentKeySessionServerPlaybackContextOptionServerChallenge should be a NSData instance
Server challenge should be 8 bytes in length
AVContentKeyRequestRequiresExtendedValidationDataInSecureTokenKey value should be an object of NSData class
valid completionHandler is required
valid appIdentifier is required
-[AVContentKeyRequest makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:]_block_invoke
content key request cancelled or already failed
valid responseData is required
-[AVContentKeyRequest processContentKeyResponseData:renewalDate:error:]
Could not set KeyResponseReceived state on cryptor.
valid keyResponse is required
AVContentKeySession's keySystem is not same as that of keyResponse
%@ does not support this operation
keyResponse should be an object of AVContentKeyResponseFairPlayStreaming class
valid FPS key response data is required
-[AVContentKeyRequest processContentKeyResponse:]
keyResponse should be an object of AVContentKeyResponseClearKey class
valid ClearKey key data is required
keyResponse should be an object of AVContentKeyResponseAuthorizationToken class
identifier and authorizationTokenData must be valid
identifier should be an object of NSString class
kCMBaseObjectError_ParamErr
boss NULL
-[AVContentKeyRequest _processContentKeyResponseError:]
%@ does not support key renewal
client's delegate should respond to contentKeySession:didProvidePersistableContentKeyRequest: method in order to be able to request persistable content key request
-[AVContentKeyRequest respondByRequestingPersistableContentKeyRequestAndReturnError:]
displays is nil
key request has not succeeded. value not available.
-[AVContentKeyRequest(AVContentKeyRequest_ExternalProtectionStateSupport) willOutputBeObscuredDueToInsufficientExternalProtectionForDisplays:]
cryptor is NULL
-[AVContentKeyRequest(AVContentKeyRequest_ExternalProtectionStateSupport) externalContentProtectionStatus]
-[AVContentKeyRequest(AVContentKeyReportInternal) setReportGroup:]
valid keyVendorResponse is required
persistable content key cannot be created at this time
-[AVPersistableContentKeyRequest persistableContentKeyFromKeyVendorResponse:options:error:]
FairPlay Streaming is not supported on simulators
+[AVContentKeySession copyDefaultSecureStopManagerForAppIdentifier:storageDirectoryAtURL:]
avcontentkeysession_trace
input keySystem is not supported
%@ does not support storage URL
com.apple.AVContentKeySession._threadSafetyQ
<%@: %p> contentkeysession delegate serialization queue
-[AVContentKeySession initWithKeySystem:storageDirectoryAtURL:legacyWebKitCompatibilityMode:]
<%@: %p expired:%d>
valid delegateQueue is required
cannot add this object as an AVContentKeyRecipient
-[AVContentKeySession addContentKeyRecipient:]_block_invoke
Content key session is already expired or failed
Can't add object as an AVContentKeyRecipient after it has established its own content protection
Content key recipient cannot be associated with more than one instance of AVContentKeySession
-[AVContentKeySession addContentKeyRecipient:]
-[AVContentKeySession removeContentKeyRecipient:]_block_invoke
-[AVContentKeySession expire]
An expired content key session cannot process content key request
valid contentKeyRequest is required
Cannot renew content key request since there's no delegate set on the content key session
Cannot renew content key request using an expired content key session
Cannot renew content key request that was previously cancelled or failed
Cannot renew while content key request is waiting for a response
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]_block_invoke
-[AVContentKeySession renewExpiringResponseDataForContentKeyRequest:]
valid completion handler is required
valid persistableContentKeyData is required
-[AVContentKeySession makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:]
-[AVContentKeySession makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:]_block_invoke_2
-[AVContentKeySession invalidatePersistableContentKey:options:completionHandler:]
-[AVContentKeySession invalidatePersistableContentKey:options:completionHandler:]_block_invoke_2
valid application certificate is required
-[AVContentKeySession invalidateAllPersistableContentKeysForApp:options:completionHandler:]
-[AVContentKeySession invalidateAllPersistableContentKeysForApp:options:completionHandler:]_block_invoke_2
valid storageURL is required
kFigSSMError_InvalidState
failed to query records due to an internal error
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:]
expiredSessionReports should be an array of NSData objects
failed to remove records due to an internal error
+[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:]
-[AVContentKeySession(AVContentKeySessionPendingExpiredSessionReports) _handleSecureStopDidFinalizeRecordCallback]_block_invoke
%@_%llu
-[AVContentKeySession(AVContentKeySessionPrivateUtilities) _handleUpdateToPersistentKey:forKeyIdentifier:]_block_invoke
-[AVContentKeySession(AVContentKeySessionPrivateUtilities) _handleContentProtectionSessionIdentifierDidChange:]_block_invoke
appIdentifier can't change once set
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequests:forInitializationData:]
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequests:forInitializationData:]_block_invoke
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequest:toDelegateWithCallbackSelector:]
-[AVContentKeySession(AVContentKeyRequestSupport) issuePersistableContentKeyRequest:]
-[AVContentKeySession(AVContentKeyRequestSupport) issueRenewableContentKeyRequest:]
-[AVContentKeySession(AVContentKeyRequestSupport) issueContentKeyRequestWithPreloadingRequestOptions:identifier:initializationData:providesPersistableKey:]
-[AVContentKeySession(AVContentKeyRequestSupport) contentKeyRequestDidProduceContentKey:]_block_invoke_2
-[AVContentKeySession(AVContentKeyRequestSupport) contentKeyRequestDidProduceContentKey:]_block_invoke
valid delegate is required to deliver a key request
-[AVContentKeySession(AVContentKeySession_Internal) issueContentKeyRequestForInitializationData:]
-[AVContentKeySession(AVContentKeySession_Internal) issueContentKeyRequestForInitializationData:]_block_invoke
cannot get content key identifier
no content key present
CoreMedia
EnableContentKeyBossForAirPlay
CoreMediaErrorDomain
-[AVContentKeySession(AVContentKeySession_Internal) _handleRequest:withRequestID:fromHandler:willHandleRequest:]
no figAsset
-[AVContentKeySession(AVContentKeySession_Internal) createAndInstallCustomURLHandlerForAsset:outHandler:]
com.apple.avfoundation.avcontentkeysession.handler
AVContentKeySession
-[AVContentKeySession(AVContentKeyGroup_Support) makeContentKeyGroup]
identifier is not string or url
-[AVContentKeyReportGroup cryptorOptionsForIdentifier:initializationData:formatDescription:hlsMethod:]
-[AVContentKeyReportGroup failProcessingContentKeyRequestWithIdentifier:initializationData:error:]
identifier or initializationData must be valid
AVContentKeySession is nil
-[AVContentKeyReportGroup processContentKeyRequestWithIdentifier:initializationData:options:]
-[AVContentKeyReportGroup associateContentKeyRequest:]
-[AVContentKeyReportGroup expire]
No FCKS available
-[AVContentKeyReportGroup(AVContentKeyReportGroup_Internal) createCryptorIfNecessaryForIdentifier:initializationData:formatDescription:hlsMethod:error:]_block_invoke
-[AVContentKeyReportGroup(AVContentKeyReportGroup_Internal) copyCryptorForIdentifier:initializationData:]_block_invoke
com.apple.avfoundation.avcontentkeyreportgroup
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) initWithKeySystem:keySession:contentKeyBoss:useContentKeyBoss:groupID:storageDirectoryAtURL:]
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) createProtectorSessionIdentifierIfNecessary]_block_invoke
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) configureAppIdentifier:]
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) _setAuthorizationToken:forIdentifier:error:]_block_invoke
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) _setAuthorizationToken:forIdentifier:error:]
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) hasProtector]
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) copyCryptorForCryptKeyAttributes:]
-[AVContentKeyReportGroup(AVContentKeyReportGroupPrivateUtilities) externalProtectionStatusForCryptor:withDisplays:]
sample buffer does not have format description
Content key is not valid
initializationData is nil
avcks_decodeInitializationDataAndCopyInformation
failed to convert initializationData to a JSON object
pssh
expected initialization data to be a JSON dictionary containing an array of SINF data
badly formatted key request init data - sinf array not found
badly formatted key request init data - codecType not valid
badly formatted key request init data - mediaType not valid
badly formatted key request init data - containerType not valid
badly formatted PSSH data
not an AVContentKeySession
avckrg_keyResponseErrorCallback
not an AVContentKeyReportGroup
avckrg_keyResponseSuccessfullyProcessedCallback
avckrg_persistentKeyUpdatedCallback
avckrg_secureStopDidFinalizeRecordCallback
avckrg_externalProtectionStateChangedCallback
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl outputDevices]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _outputDevicesFromProperty:withQualifier:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _outputDeviceForID:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _groupMembersChangedForGroupWithID:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl groupLeader]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl addOutputDevice:withOptions:completionHandler:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl removeOutputDevice:withOptions:completionhandler:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _volumeChangedForGroupWithID:]
-[AVAPSyncControllerRemoteOutputDeviceGroupImpl _volumeControlTypeChangedForGroupWithID:]
AVAPSyncControllerRemoteOutputDeviceGroupImplGroupMembersChanged
AVAPSyncControllerRemoteOutputDeviceGroupImplSetSpeakerGroupCallback
AVAPSyncControllerRemoteOutputDeviceGroupImplVolumeChanged
AVAPSyncControllerRemoteOutputDeviceGroupImplVolumeControlTypeChanged
AVOutputContext
AVOutputContextLocalOutputDeviceGroupImpl
AVOutputDeviceGroupImpl
NSObject
AVPlayerLooperInternal
AVPlayerLooper
AVResult
AVAssetReaderOutputMetadataAdaptorInternal
AVAssetReaderOutputMetadataAdaptor
AVAssetReaderOutputAdaptor
AVVideoPerformanceMetricsInternal
AVVideoPerformanceMetrics
AVOutputDeviceDiscoverySessionInternal
AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal
AVOutputDeviceDiscoverySession
AVEmptyOutputDeviceDiscoverySessionAvailableOutputDevices
AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices
AVAPSyncControllerOutputDeviceImpl
AVOutputDeviceImpl
AVPlayerLayerIntermediateLayer
AVPlayerLayerInternal
AVPlayerLayer
AVKeyPathDependencyHost
AVWeakObservable
CMTimeAsValue
CMTimeRangeAsValue
CMTimeMappingAsValue
NSValueCMTimeExtensions
AVTimeCoding
AVTimebaseObserver
AVPeriodicTimebaseObserver
AVOccasionalTimebaseObserver
AVOnceTimebaseObserver
AVPlayerItemMetadataCollectorMetadataItemFiltering
AVPlayerItemMetadataCollectorInternal
AVPlayerItemMetadataCollector
AVPlayerItemMediaDataCollector_Internal
AVPlayerItemInterstitialEventCollector
AVPlayerInterstitialEvent
NSCopying
AVPlayerInterstitialEventMonitor
AVPlayerInterstitialEventController
AVSampleBufferVideoOutputInternal
AVSampleBufferVideoOutput
AVAssetDownloadStorageManager
AVAssetDownloadStorageManagementPolicy
NSMutableCopying
AVMutableAssetDownloadStorageManagementPolicy
AVAssetDownloadStorageManagementPolicyInternal
AVOutputDeviceGroup
AVOutputDeviceGroupMembershipChangeResult
AVMetadataItemInternal
AVMetadataItem_Local
AVMetadataItemTypeCoercion
AVMetadataItem
AVAsynchronousKeyValueLoading
AVMutableMetadataItem
AVLazyValueLoadingMetadataItemInternal
AVLazyValueLoadingMetadataItem
AVMetadataItemValueRequestInternal
AVMetadataItemValueRequest
AVMetadataItemLazyValueLoading
AVChapterMetadataItemInternal
AVChapterMetadataItem
AVMetadataItemFilterForSharing
AVMetadataItemFilterInternal
AVMetadataItemFilter
AVAssetProxy
AVAssetProxyInternal
AVAssetInternal
AVAsset
AVAssetChapterInspection
AVAsset_ExportAndSerializationSupport
AVAssetMovieAtomInfo_Private
AVAssetFragmentInternal
AVAssetFragment
AVFragmentedAssetsArray
AVAssetFragmentSequenceInfo_Private
AVURLAssetInternal
AVURLAsset
AVAssetCache
AVURLAssetCache_Private
AVAssetVariantInspection
AVURLAssetURLHandlingInternal
AVURLAssetURLHandling
AVAssetClientURLRequestHelper
AVURLAssetInstanceIdentiferMapping
AVDataAsset
AVAssetTrackEnumerator
AVURLAssetContentKeyEligibility
AVContentKeyRecipient
AVURLAssetContentKeyEligibilityInternal
AVContentKeyRecipientInternal
AVURLAssetCustomURLHandling
AVURLAssetItemProviderData
NSSecureCoding
NSCoding
NSItemProvider
AVURLAssetLoggingIdentifier
AVAssetSerializableCreationOptions
AVAssetSerializableCreationOptionsSupport
AVAudioMixEffectParameters
AVAudioMixSweepFilterEffectParameters
AVAudioMixSweepFilterEffectParametersInternal
AVAssetImageGeneratorInternal
AVAssetImageGenerator
AVFigEndpointRemoteControlSessionOutputDeviceCommunicationChannelImpl
AVOutputDeviceCommunicationChannelImpl
AVAssetTrackInternal
AVAssetTrack
AVAssetTrack_ExportAndSerializationSupport
AVPlayerSetRateOptions
AVPlayerInternal
AVPlayer
AVPlayerVideoDisplaySleepPrevention
AVPlayerAutomaticBackgroundPrevention
AVPlayerProtectedContentPrivate
AVPlayer_PIPSupport
AVPlayerAudioPlaybackRateLimits
AVPlayerMultitaskSupport
AVPlayerSupportForMediaPlayer
AVAudioSessionMediaPlayerOnly
AVPlayerPixelBufferPoolSharing
AVPlayerFormatRestrictions
AVPlayerAutomaticMediaSelection
AVPlayerAutomaticMediaSelectionPrivate
AVPlayerAudioDeviceSupport
AVPlayerOutOfBandTextTrackRendering
AVPlayerMultichannelAudioStrategy
AVPlayerCaptionStrategySelection
AVPlayerAudioSessionParticipant
AVAudioSessionParticipant
AVPlayerQueueModificationDescription
AVPlayerVideoDecoderGPUSupport
AVPlayerLoggingIdentifier
AVPlayerAutoPauseOnRouteRemoval
AVPlayerImplicitInterruption
AVPlayerSTSLabel
AVPlayerPIPSupport
FigVideoTargetSupport
AVPlayerInterstitialSupport_Internal
PlaybackCoordination
AVPlayerLegibleFallback
AVPlayerOverlappedPlaybackSupport_Internal
AVPlayerRateState
AVAssetDownloadContentConfiguration
SecureCoding
AVAssetDownloadDefaultPrimaryContentConfiguration
AVAssetDownloadDefaultAuxiliaryContentConfiguration
AVAssetDownloadConfiguration
Internal
AVUXMDisplayManager
AVVideoCompositionRenderHintInternal
AVVideoCompositionRenderHint
AVSampleBufferAudioRendererInternal
AVSampleBufferAudioRenderer
AVMediaDataRequesterConsumer
AVQueuedSampleBufferRenderingInternal
AVQueuedSampleBufferRendering
AVSampleBufferAudioRendererContentKeyEligibility
AVSampleBufferAudioRendererContentKeyEligibilityInternal
Simulation
AVFigSampleBufferAudioRendererFactory
AVAssetWriterInputMetadataAdaptorInternal
AVAssetWriterInputMetadataAdaptor
AVExternalProtectionMonitorInternal
AVExternalProtectionMonitor
AVHUDStringGenerator
AVNetworkPlaybackPerfHUDLayer
AVPlayerItemInternal
AVPlayerItem
AVPlayerItemProtectedContent
AVPlayerItemProtectedContentPrivate
AVPlayerItemLogging
AVPlayerConnection
AVPlayerItemSupportForMediaPlayer
AVPlayerItemOutputs
AVPlayerItemMediaDataCollectors
AVPlayerItemServiceIdentifier_Private
LegibleOutputSupport
MetadataOutputSupport
AVPlayerItemAVKit
AVPlayerItemVideoEnhancement
AVPlayerInterstitialSupport
AVPlayerItemTrackInternal
AVPlayerItemTrack
AVQueuePlayer
AVQueuePlayerInternal
AVPlayerAdvanceWithOverlap
AVSpecifiedLoggingIdentifierInternal
AVSpecifiedLoggingIdentifier
AVLoggingIdentifier
AVLoggingDerivedIdentifier
AVAssetLoggingIdentifierInternal
AVAssetLoggingIdentifier
AVPlayerLoggingIdentifierInternal
AVCompositionInternal
AVComposition
AVMutableCompositionInternal
AVMutableComposition
AVCompositionFormatReaderInspector
AVComposition_NSCoding
AVPlayerItemMetadataOutputInternal
AVPlayerItemMetadataOutput
AVPlayerItemMetadataOutput_Internal
AVCompositionTrackFormatDescriptionReplacement
AVCompositionTrackInternal
AVCompositionTrack
AVMutableCompositionTrackInternal
AVMutableCompositionTrack
AVNotificationSubscription
AVCancellable
AVPublisher
AVPropertyValuePublisher
AVMapPublisher
AVSwitchToLatestPublisher
AVSinkSubscriber
AVTimeFormatterInternal
AVTimeFormatter
AVCompositionTrackSegmentInternal
AVCompositionTrackSegment
AVMovieTrackInternal
AVMovieTrack
AVMutableMovieTrackInternal
AVMutableMovieTrack
AVMutableMovieTrackFormatDescriptions
AVMutableMovieTrack_FormatDescriptions
AVMutableMovieTrackTrackLevelEditing
AVMutableMovieTrackSampleLevelEditing
AVMutableMovieTrack_SampleLevelEditingPrivate
AVMutableMovieTrackMetadataEditing
AVMutableMovieTrackTrackAssociations
AVAssetReaderInternal
AVAssetReader
AVAssetReaderOutputInternal
AVAssetReaderOutput
AVAssetReaderTrackOutputInternal
AVDecodedVideoSettingsForFig
AVAssetReaderTrackOutput
AVAssetReaderAudioMixOutputInternal
AVAssetReaderAudioMixOutput
AVAssetReaderVideoCompositionOutputInternal
AVAssetReaderVideoCompositionOutput
AVAssetReaderSampleReferenceOutputInternal
AVAssetReaderSampleReferenceOutput
AVAssetWriterConfigurationState
AVAssetWriterInternal
AVAssetWriter
AVAssetWriterUnknownHelper
AVAssetWriterFigAssetWriterNotificationHandler
AVFragmentedMediaDataReportInternal
AVFragmentedMediaDataReport
AVAssetWriterWritingHelper
AVAssetWriterFigAssetWriterNotificationHandlerDelegate
AVWorkaroundNSBlockOperation
AVAssetWriterFinishWritingHelper
AVFigAssetWriterFinishWritingAsyncOperation
AVAssetWriterTerminalHelper
AVAssetWriterFailedTerminalHelper
AVAssetWriterClientInitiatedTerminalHelper
AVAssetWriterHelper
AVAssetWriterInputGroupInternal
AVAssetWriterInputGroup
AVAssetWriterInputSelectionOption
AVCoordinatedPlaybackSuspension
AVCoordinatedPlaybackParticipant
AVPlaybackCoordinator
AVPlayerPlaybackCoordinator
AVOutputDeviceAuthorizationSessionInternal
AVOutputDeviceAuthorizationSession
AVOutputDeviceAuthorizationRequestInternal
AVOutputDeviceAuthorizationRequest
AVAssetWriterInputConfigurationState
AVAssetWriterInputInternal
AVAssetWriterInput
AVAssetWriterInputUnknownHelper
AVAssetWriterInputWritingHelper
AVAssetWriterInputMediaDataRequesterDelegate
AVAssetWriterInputInterPassAnalysisHelper
AVAssetWriterInputNoMorePassesHelper
AVAssetWriterInputTerminalHelper
AVAssetWriterInputHelper
AVAssetWriterInputPixelBufferAdaptorInternal
AVAssetWriterInputPixelBufferAdaptor
AVFigAssetWriterTrack
AVFigAssetWriterAudioTrack
AVFigAssetWriterVideoTrack
AVFigAssetWriterGenericTrack
AVAssetWriterInputMediaDataRequester
AVAssetWriterInputPassDescriptionResponder
AVAssetWriterInputFigAssetWriterEndPassOperation
AVAssetWriterInputPassDescriptionInternal
AVAssetWriterInputPassDescription
AVVideoCompositionInstructionInternal
AVVideoCompositionInstruction
AVMutableVideoCompositionInstruction
AVVideoCompositionLayerInstructionInternal
AVVideoCompositionLayerInstruction
AVMutableVideoCompositionLayerInstruction
AVVideoCompositionInternal
AVVideoCompositing
AVVideoComposition
AVVideoCompositionColorimetery
AVVideoCompositionColorimeteryUtilities
AVVideoCompositionFiltering
AVMutableVideoComposition
AVVideoCompositionCoreAnimationTool
AVVideoCompositionCoreAnimationToolInternal
AVAssetVideoCompositionUtility
AVAssetExportSessionInternal
AVAssetExportSession
AVStreamDataParserInternal
AVStreamDataParser
AVStreamDataParserTypeSupport
AVStreamDataParser_FigManifold
AVStreamDataParser_ContentKeySessionDelegate
AVContentKeySessionDelegate
AVStreamDataParser_ContentKeyRequestSupport
AVStreamDataParser_Internal
AVStreamDataParserContentKeyEligibility
AVMediaDataRequester
AVAPSyncOutputDeviceCommunicationChannelManager
AVOutputDeviceCommunicationChannelManager
AVAPSyncOutputDeviceCommunicationChannelImpl
AVSynchronizedLayerInternal
AVSynchronizedLayer
AVOutputDeviceInternal
AVOutputDevice
AVOutputDeviceFrecencyManager
AVOutputDeviceFrecentsReader
AVOutputDeviceFrecentsReading
AVOutputDeviceFrecentsWriter
AVOutputDeviceFrecentsWriting
AVOutputDeviceLegacyFrecentsReader
AVOutputDeviceLegacyFrecentsWriter
AVOutputDeviceAuthorizedPeerInternal
AVOutputDeviceAuthorizedPeer
AVPairedDeviceInternal
AVPairedDevice
AVLocalOutputDeviceImpl
AVOutputDeviceCommunicationChannel
AVClusterComponentOutputDeviceDescription
AVOutputDeviceDescription
AVSampleBufferVideoRenderer
AVFigVideoQueueFactory
VideoPerformanceMetrics
AVSampleBufferVideoRendererProtectedContent
AVSampleBufferVideoRendererImageProtection
AVSampleBufferVideoRendererVideoDisplaySleepPrevention
PowerOptimization
AVSampleBufferVideoRendererOutputs
AVMetadataEnumerator
AVFigEndpointOutputDeviceImpl
AVOutputDeviceFigEndpointImplFetching
AVFigEndpointSecondDisplayModeToken
AVAssetCustomURLRequest
AVAssetCustomURLBridgeForNSURLSession
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
AVNSURLProtocolRequest
AVAssetCustomURLBridgeForNSURLProtocol
AVAssetCustomURLAuthentication
AVAssetTrackSegment
AVAudioMix
AVMutableAudioMix
AVAudioMixInternal
AVAudioMixInputParameters
AVAudioMixInputParametersInternal
AVMutableAudioMixInputParameters
AVAudioMixCrossFadeUtility
AVOutputContextInternal
AVOutputContextCommunicationChannelInternal
AVOutputContextCommunicationChannel
AVOutputContextDestinationChangeInternal
AVOutputContextDestinationChange
AVOutputContextManagerInternal
AVOutputContextManager
AVAssetPlaybackAssistant
AVRunLoopConditionRunLoopState
AVRunLoopCondition
AVAssetInspector
AVFormatReaderInspector
AVPlaybackItemInspector
AVStreamingResourceInspector
AVFigAssetInspector
AVScheduledAudioParametersInternal
AVScheduledAudioParameters
AVScheduledAudioParameters_Internal
AVMutableScheduledAudioParameters
AVOperation
ArrayOfOperations
AVBlockOperation
AVGlobalOperationQueue
AVOperationQueueWithFundamentalDependency
AVDepartureAnnouncingObjectMonitor
AVWaitForNotificationOrDeallocationOperation
AVObjectMonitoring
AVWeakReferencingDelegateStorage
AVDelegateStorage
AVAssetInspectorLoader
AVAssetSynchronousInspectorLoader
AVAssetMakeReadyForInspectionLoader
AVPlaybackItemInspectorLoader
AVFigAssetInspectorLoader
AVUnreachableAssetInspectorLoader
AVRoutingSessionManager
AVRoutingSession
AVRoutingSessionDestination
AVAssetTrackInspector
AVTrackReaderInspector
AVFigAssetTrackInspector
AVCompositionTrackReaderInspector
AVPlaybackItemTrackInspector
AVWeakReference
AVRetainReleaseWeakReference
AVSampleBufferGeneratorInternal
AVSampleBufferGenerator
AVSampleBufferRequestInternal
AVSampleBufferRequest
AVSampleBufferGeneratorBatch
AVAssetSegmentReportSampleInformation
AVAssetSegmentTrackReport
AVAssetSegmentReport
AVCallbackContextRegistry
AVStreamDataAssetTrackInspector
AVStreamDataAssetInspector
AVStreamDataInspectionOnlyAsset
AVStreamDataAsset
AVStreamDataAsset_StreamDataParsing
AVPlayerItemMediaDataCollectorInternal
AVPlayerItemMediaDataCollector
AVCMNotificationDispatcher
AVCMNotificationDispatcherListenerKey
AVSynchronousBlockScheduler
AVBlockScheduler
AVSerializedMostlySynchronousReentrantBlockScheduler
AVEventWaiter
AVDispatchOnce
AVAssetTrackGroupInternal
AVAssetTrackGroup
AVMetadataGroup
AVMetadataGroupSerializationSupport
AVMetadataGroupIdentification
AVTimedMetadataGroupInternal
AVTimedMetadataGroup
AVTimedMetadataGroupSerializationSupport
AVMutableTimedMetadataGroup
AVDateRangeMetadataGroupInternal
AVDateRangeMetadataGroup
AVDateRangeMetadataGroup_Private
AVDateRangeMetadataGroup_Internal
AVDateRangeMetadataGroup_Local
AVMutableDateRangeMetadataGroup
AVManagedAssetCacheInternal
AVManagedAssetCache
AVAssetDownloadCacheInternal
AVAssetDownloadCache
AVExecutionEnvironment
NSValueCMVideoDimensionsExtensions
AVDelegatingPlaybackCoordinatorPlaybackControlCommand
AVDelegatingPlaybackCoordinatorPlayCommand
AVDelegatingPlaybackCoordinatorBufferingCommand
AVDelegatingPlaybackCoordinatorPauseCommand
AVDelegatingPlaybackCoordinatorSeekCommand
AVDelegatingPlaybackCoordinator
AVPlayerItemAccessLogInternal
AVPlayerItemAccessLog
AVPlayerItemAccessLogEventInternal
AVPlayerItemAccessLogEvent
AVPlayerItemAccessLogEventServiceIdentifier_Private
AVFragmentedMovie
AVFragmentMinding
AVFragmentedMovieMinder
AVFragmentedMovieTrackInternal
AVFragmentedMovieTrack
AVPlayerItemErrorLogInternal
AVPlayerItemErrorLog
AVPlayerItemErrorLogEventInternal
AVPlayerItemErrorLogEvent
AVExternalPlaybackMonitor
AVAudioSessionMediaPlayerOnlyInternal
AVMediaSelectionGroupInternal
AVMediaSelectionGroup
AVAssetMediaSelectionGroup
AVMediaSelectionOptionInternal
AVMediaSelectionOption
AVMediaSelectionTrackOption
AVMediaSelectionKeyValueOption
AVMediaSelectionNilOption
AVFigObjectInspector
AVOutputSettings
AVFormatSpecification
AVMediaFileType
AVMediaFileOutputSettingsValidator
AVOutputSettingsValidation
AVWAVEOutputSettingsValidator
AVAIFFOutputSettingsValidator
AVAIFCOutputSettingsValidator
AVISOOutputSettingsValidator
AVGenericMediaFileOutputSettingsValidator
AVAudioOutputSettings
AVAVAudioSettingsAudioOutputSettings
AVReencodedAudioSettingsForFig
AVDecodedAudioSettingsForFig
AVVideoOutputSettings
AVPixelBufferAttributesVideoOutputSettings
AVAVVideoSettingsVideoOutputSettings
AVReencodedVideoSettingsForFig
AVAudioSettingsValueConstrainer
AVFloat64Range
AVAggregateAssetDownloadTask
AVAssetDownloadSessionInternal
AVAssetDownloadSession
AVAssetDownloadSession_DelegateSupport
AVAssetDownloadSession_StreamingAssetOrchestratorSupport
AVAssetDownloadSession_Local
AVSampleCursorInternal
AVSampleCursor
AVPlayerItemOutputInternal
AVPlayerItemOutput
AVPlayerItemVideoOutputInternal
AVPlayerItemVideoOutput
AVFragmentedAssetInternal
AVFragmentedAsset
AVFragmentedAssetMinderInternal
AVFragmentedAssetMinder
AVFragmentedAssetTrackInternal
AVFragmentedAssetTrack
AVPixelBufferAttributeMediator
AVSampleBufferDisplayLayerContentLayer
AVSampleBufferDisplayLayer
AVSampleBufferDisplayLayerContentKeyEligibility
AVSampleBufferDisplayLayerContentKeyEligibilityInternal
AVSampleBufferDisplayLayerQueueManagement
ProtectedContent
AVSampleBufferDisplayLayerImageProtection
AVSampleBufferDisplayLayerVideoDisplaySleepPrevention
AVSampleBufferDisplayLayerPowerOptimization
AVSampleBufferDisplayLayerOutput
AVAssetResourceLoaderRemoteHandlerContext
AVURLAuthenticationChallenge
AVAssetResourceLoaderRequest
AVAssetResourceLoaderInternal
AVAssetResourceLoader
AVAssetResourceLoaderContentKeySupport
AVAssetResourceLoaderURLAuthenticationChallengeSender
NSURLAuthenticationChallengeSender
AVAssetResourceLoaderContentInformationCache
AVAssetResourceLoaderURLSessionSupport
AVAssetResourceLoaderRemoteHandlerSupport
AVAssetResourceLoadingContentInformationRequestInternal
AVAssetResourceLoadingContentInformationRequest
AVAssetResourceLoadingDataRequestInternal
AVAssetResourceLoadingDataRequest
AVAssetResourceLoadingRequestInternal
AVAssetResourceLoadingRequest
AVAssetResourceLoadingRequestorInternal
AVAssetResourceRenewalRequest
AVAssetResourceLoadingRequestor
AVSampleBufferRenderSynchronizerInternal
AVSampleBufferRenderSynchronizer
AVSampleBufferRenderSynchronizerRendererManagement
AVSampleBufferRenderSynchronizerRendererRestrictions
AVSampleBufferRenderSynchronizerTimeObservation
AVLocalFigSampleBufferRenderSynchronizerFactory
AVFigSampleBufferRenderSynchronizerFactory
AVAssetVariant
AVAssetVariantVideoAttributes
AVAssetVariantAudioAttributes
AVAssetVariantAudioRenditionSpecificAttributes
AVAssetVariantQualifier
EnvironmentalConditions
AVAssetVariantChannelCountPredicate
AVAssetVariantPresentationWidthPredicate
AVAssetVariantPresentationHeightPredicate
AVTextStyleRuleInternal
AVTextStyleRule
AVPlayerMediaSelectionCriteria
FigDictionaryRepresentation
AVAsynchronousCIImageFilteringRequestInternal
AVAsynchronousCIImageFilteringRequest
AVCoreImageFilterVideoCompositionInstruction
AVCoreImageFilterCustomVideoCompositor
AVPlayerItemLegibleOutputRealDependencyFactory
AVPlayerItemLegibleOutputDependencyFactory
AVPlayerItemLegibleOutputInternal
AVPlayerItemLegibleOutput
AVOutputSettingsAssistantInternal
AVOutputSettingsAssistant
Dependencies
AVExportSettingsOutputSettingsAssistantBaseSettings
AVOutputSettingsAssistantBaseSettingsProvider
AVExportSettingsOutputSettingsAssistantVideoSettingsAdjuster
AVOutputSettingsAssistantVideoSettingsAdjuster
AVIOKitOutputSettingsAssistantVideoEncoderCapabilities
AVOutputSettingsAssistantVideoEncoderCapabilities
AVMediaSelectionInternal
AVMediaSelection_Local
AVMediaSelection
AVMutableMediaSelection
AVExternalDeviceHIDInternal
AVExternalDeviceHID
AVExternalDeviceIconInternal
AVExternalDeviceIcon
AVExternalDeviceInternal
AVExternalDeviceScreenBorrowToken
AVExternalDeviceTurnByTurnToken
AVExternalDevice
AVFigEndpointOutputDeviceDiscoverySessionAvailableOutputDevicesImpl
AVOutputDeviceDiscoverySessionAvailableOutputDevices_FigEndpointImpl
AVPlayerCaptionLayer
AVVideoCompositingParameterValidationDelegate
AVCustomVideoCompositorSession
AVCustomVideoCompositorSession_FigCallbackHandling
AVDisplayCriteriaInternal
AVDisplayCriteria
_AVDisplayCriteriaPrivateMethods
AVKVODispatcher
AVObservationBlockFactory
AVWeakObservationBlockFactory
AVClientBlockKVONotifier
AVKVONotifier
AVCallbackCancellation
AVKVOIntrospection
AVWeaklyObservedObjectClientBlockKVONotifier
AVWeakObservableCallbackCancellationHelper
LegacyCallbackMethod
AVKeyPathDependencyManager
AVKeyPathDependencyRegistration
AVKeyPathDependency
AVTwoPartKeyPath
AVKeyPath
AVKeyPathFlattener
AVKeyPathFlattenerKVOIntrospectionShim
AVAsynchronousVideoCompositionRequestInternal
AVAsynchronousVideoCompositionRequest
AVRouteDetectorInternal
AVRouteDetector
AVVideoCompositionRenderContextInternal
AVVideoCompositionRenderContext
AVMediaDataStorageInternal
AVMediaDataStorage
AVMovieInternal
AVMovie
AVMovieMovieHeaderSupport
AVMutableMovieInternal
AVMutableMovie
AVMutableMovieMovieLevelEditing
AVMutableMovieTrackLevelEditing
AVMutableMovieMetadataEditing
AVPlayerItemSampleBufferOutputConfiguration
AVPlayerItemSampleBufferOutput
AVPlayerItemSampleBufferOutput_Internal
AVContentKeyRequestInternal
AVContentKeyRequest
AVContentKeyRequest_ExternalProtectionStateSupport
AVContentKeyReportInternal
AVPersistableContentKeyRequest
AVContentKeyResponseFairPlayStreaming
AVContentKeyResponseClearKey
AVContentKeyResponseAuthorizationToken
AVContentKeyResponseInternal
AVContentKeyPSSHRequestTracker
AVContentKeyRequestParams
AVContentKeyResponse
AVContentKeySessionInternal
AVContentKeySession
AVContentKeySessionPendingExpiredSessionReports
AVContentKeySessionPrivateUtilities
AVContentKeyRequestSupport
AVContentKeySession_Internal
AVContentKeyGroup_Support
FigContentKeyBoss
AVContentKeyReportGroup
AVContentKeyReportGroup_Internal
AVContentKeyReportGroupPrivateUtilities
AVContentKeySpecifier
Private
AVContentKey
APSyncController
AVAPSyncControllerRemoteOutputDeviceGroupImpl
OEMIcon
AVExportSessionExportAsynchronouslyCompletionHandler
T@"<AVLoggingIdentifier>",R,&,N
CMNotificationCenter
T@"AVAsset",R,N
CMTimeRangeValue
T@"AVPlayerInterstitialEvent",R
CMVideoDimensionsValue
T@"AVSampleBufferVideoOutput",N
IAPDCallbackToken
T@"CIImage",R,N
IFramePrefetchTargetDimensions
T@"NSArray",C,N
JSONObjectWithData:options:error:
T@"NSArray",R,C
MACAddress
T@"NSError",R,N
MIMEType
T@"NSString",R,N,V_languageCode
OEMIconVisible
TB,N,GisEnabled
RTCReportingFlags
TB,R,N,GisEmpty
STSLabel
Tq,R,N,G_status
T#,&,N
Tq,R,N,V_offset
T#,R,N
T{CGAffineTransform=dddddd},R,N
T@"<AVAssetResourceLoaderDelegate>",R,W,N
T@"<AVAssetWriterDelegate>",W,V_delegate
_accessLogArray
T@"<AVAssetWriterInputMediaDataRequesterDelegate>",W
_addFAListeners
T@"<AVContentKeySessionDelegate>",R,W
_assetInspector
T@"<AVLoggingIdentifier>",&,N
_audioConverter
T@"<AVOutputDeviceAuthorizationSessionDelegate>",W
_avPlayerLayers
T@"<AVOutputDeviceImpl>",R,V_secondaryImpl
_bounds
T@"<AVOutputDeviceImplSupport>",W,V_implEventListener
_bumpChangeSeed
T@"<AVPlaybackCoordinatorPlaybackControlDelegate>",R,W,N
_canPlayReverse
T@"<AVPlayerItemMetadataCollectorPushDelegate>",R,W,N
_changeStatusToFailedWithError:
T@"<AVPlayerItemOutputPullDelegate>",R,W
_client
T@"<AVPlayerPlaybackCoordinatorDelegate>",W
_configurePlayerWhenEnteringPIP
T@"<AVStreamDataParserOutputHandling>",R,N
_contentKeySessionWeakReference
T@"<AVVideoCompositionInstruction>",&,N,V_instruction
_copyNextSampleBufferForAdaptor
T@"<NSObject><NSCopying>",&
_currentTrackID
T@"<NSURLSessionDataDelegate>",R,N
_customPerfInfo
T@"AVAsset",R,W,N
_detachVideoLayersForSuspension
T@"AVAssetDownloadContentConfiguration",R,N,V_primaryContentConfiguration
_encounteredStreamDiscontinuity
T@"AVAssetResourceLoader",R,N
_endSuspension:
T@"AVAssetResourceLoadingContentInformationRequest",R,N
_exportSettings
T@"AVAssetResourceLoadingRequestor",R,N
_failWithError:
T@"AVAssetTrack",R,N
_figAssetReader
T@"AVAssetVariantVideoAttributes",R,N
_figAssetWriter
T@"AVAssetWriterHelper",R,&,G_helper
_figTrackReader
T@"AVAssetWriterInput",R,N,V_input
_floatForProperty:defaultValue:
T@"AVAssetWriterInputHelper",&,N,G_helper,S_setHelper:
_fragmentMinderAssociationCount
T@"AVAssetWriterInputPassDescription",R,N
_getUniformMediaSubtypeIfExists
T@"AVAudioMix",C,N
_hasScaledEdits
T@"AVAudioSession",&,N
_helper
T@"AVContentKeyReportGroup",R
_initWithFigMetadataDictionary:
T@"AVContentKeySpecifier",R,VcontentKeySpecifier
_isReadyForInspectionOfDuration
T@"AVDateRangeMetadataGroupInternal",R,N,G_dateRangeMetadataGroupInternal
_leaveSecondScreenModeForLayer:
T@"AVDisplayCriteria",R,N
_loader
T@"AVMediaDataStorage",C,N
_loadingRequest
T@"AVMediaFileType",C,N,V_mediaFileType
_looper
T@"AVMediaFileType",R,N,V_mediaFileType
_makeValueReady
T@"AVMediaSelectionOption",R,N
_mediaSelection
T@"AVMetadataItem",R,W
_mindsFragments
T@"AVOutputDevice",R,N
_mutableVideoCompositionWithAsset:applyingCIFiltersWithHandler:
T@"AVOutputDevice",W,V_parentOutputDevice
_needsLegacyChangeNotifications
T@"AVOutputDeviceCommunicationChannel",W,V_parentChannel
_observedObject
T@"AVOutputDeviceGroup",W
_openToRequests
T@"AVOutputSettings",C,N,V_outputSettings
_outputDataRate
T@"AVOutputSettings",R,N,G_outputSettingsObject
_outputObscured
T@"AVPlayer",R,W,N
_outputSettingsPresetIdentifier
T@"AVPlayerItem",&,N
_parser
T@"AVPlayerItem",R,N,V_afterItem
_pendingPrerollCompleteCallback
T@"AVPlayerItem",R,W,N
_player
T@"AVPlayerMediaSelectionCriteria",&,N
_preferredPixelBufferAttributes
T@"AVQueuePlayer",R,N
_prevVariantIdx
T@"AVRoutingSessionDestination",R
_reactToTopLevelPropertyChange:
T@"AVSampleCursor",&,N
_reader
T@"AVTimedMetadataGroupInternal",R,N,G_timedMetadataGroupInternal
_registerForObjectNotifications
T@"AVUXMDisplayManager",R,N
_removeFigPlaybackItemListeners
T@"AVVideoComposition",R,N
_rental
T@"AVVideoCompositionCoreAnimationTool",R,&,N
_sampleBufferCoalescingInterval
T@"AVVideoCompositionRenderContext",R,N
_sequenceNumber
T@"AVWeakReference",&,N,G_weakReferenceToAssetWriter,S_setWeakReferenceToAssetWriter:
_setClientName:
T@"AVWeakReference",&,V_weakReferenceToAssetWriter
_setParticipatesInAudioSession:
T@"AVWeakReference",R,N,G_weakReference
_setSyncLayersOnFigPlaybackItem
T@"AVWeakReference",R,N,G_weakReferenceToAssetReader
_setUserVolume:
T@"NSArray",&,N,V_sourceTrackIDsInClientOrder
_setWeakReferenceToAssetWriter:
T@"NSArray",C,N,S_setDisplaysUsedForPlayback:
_status
T@"NSArray",C,N,V_inputGroups
_subtitleLayers
T@"NSArray",C,N,V_mediaSelections
_takeValueFrom:
T@"NSArray",R
_tracks
T@"NSArray",R,N,G_assetAnalysisMessages
_updateConnectionToSecondScreen
T@"NSArray",R,N,V_metadata
_updateVideoTargetsOnVideoQueue
T@"NSArray",R,N,V_suspensionReasons
_viewAreasQueue
T@"NSData",C,N,V_artworkData
_weakReferenceToMonitoredObject
T@"NSData",C,V_initializationData
_windowSceneDidEnterBackground:
T@"NSData",R
actionAtItemEnd
T@"NSData",R,N
addSharedAudioOutputContextImpl
T@"NSDate",R,C,N
advanceInterval
T@"NSDate",R,N,V_beginDate
allKeys
T@"NSDictionary",&,N,V_sampleBufferSourcesByTrackID
assetDownloader
T@"NSDictionary",C,N
assetWriterInputGroupWithInputs:provisionalInputs:defaultInput:
T@"NSDictionary",C,N,V_sourcePixelBufferAttributes
audioFileTypeID
T@"NSDictionary",C,V_options
backgroundPIPAuthorizationToken
T@"NSDictionary",R,C
byValue
T@"NSDictionary",R,N
cacheContentInformation:forURL:
T@"NSDictionary",R,N,G_figMetadataOutputsDictionaryOptions
canEnterPIPMode
T@"NSDictionary",R,N,V_assetInitializationOptions
canStepBackward
T@"NSDictionary",R,N,V_outputSettingsDictionary
chapterDataType
T@"NSDictionary",R,V_options
checkMutability
T@"NSLocale",C,N
componentsFromLocaleIdentifier:
T@"NSLocale",R,N
conformsToType:
T@"NSNumber",R,N,V_audioSpatializationMode
contentKeySessionWithKeySystem:
T@"NSNumber",R,N,V_displayResolutionWidth
controlTimebase
T@"NSObject<OS_dispatch_group>",R,V_filteringRequestsInFlight
cryptor
T@"NSObject<OS_dispatch_queue>",R,N
currentItemPresentationSizeSink
T@"NSObject<OS_xpc_object>",R,N,V_endpoint
customURLLoader
T@"NSOperationQueue",R,N
dealloc
T@"NSString",&,N,G_STSLabel,S_setSTSLabel:
delegateStorage
T@"NSString",C,N
dispatchIVarWrite:locked:block:
T@"NSString",C,N,V_extendedLanguageTag
durationWatched
T@"NSString",C,N,V_mediaType
enabled
T@"NSString",R
endDate
T@"NSString",R,C,N
entryReasonCode
T@"NSString",R,N,V_client
extendedLogData
T@"NSString",R,N,V_deviceName
extraAttributes
T@"NSString",R,N,V_formattedDisplayString
figAssetReaderExtractionOptions
T@"NSString",R,N,V_modelID
figCPEProtector
T@"NSString",R,N,V_reasonForWaitingToPlay
figPlaybackItem
T@"NSString",R,N,V_topLevelKey
figSynchronizer
T@"NSURL",C,N
firmwareVersion
T@"NSURL",C,N,V_directoryForTemporaryFiles
getReturnValue:
T@"NSURL",R
handler
T@"NSURLRequest",C,N
hasEnabledAudio
T@"NSURLRequest",R,N
hasNewPixelBufferForSourceTime:
T@"NSURLResponse",R,C
immediateWakeUp
T@"NSURLSession",&,N,V_session
initWithAssetReaderTrackOutput:
T@"NSUUID",R,N
initWithDependencyFactory:mediaSubtypesForNativeRepresentation:
T@,C,V_identifier
initWithFormat:
T@,R,N
initWithOutputDeviceDiscoverySessionAvailableOutputDevicesImpl:
T@,R,W
initWithPreset:
T@?,C,N,V_completionHandler
inputParameters
T@?,C,N,V_figAssetProvider
isAtEnd
T@?,R,N,V_requestBlock
isClusterLeader
TB,GisRouteDetectionEnabled
isEntireLengthAvailableOnDemand
TB,N,G_disallowsAutoPauseOnRouteRemovalIfNoAudio,S_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:
isEqualToValue:
TB,N,G_participatesInAudioSession,S_setParticipatesInAudioSession:
isHeadTrackedSpatialAudioActive
TB,N,G_readSingleSample,S_setReadSingleSample:
isMuted
TB,N,GisByteRangeAccessSupported
isReady
TB,N,GisFullWidth
ivarAccessQueue
TB,N,GisOverscanSubtitleSupportEnabled
keyPath
TB,N,V_expectsMediaDataInRealTime
keyPathsForValuesAffectingMuted
TB,N,V_marksOutputTrackAsEnabled
layersQ
TB,N,V_optimizesAuxiliaryContentConfigurations
logicalDeviceID
TB,N,V_preferCoordinatedPlaybackBehavior
markAsCancelled
TB,N,V_requiresInProcessOperation
maxSize
TB,N,V_spatialDiagnostics
mediaSelectionGroupDictionaries
TB,R
metrics
TB,R,G_markAsFinishedCalled
minimum
TB,R,GisAirPlayVideoActive
numberWithBool:
TB,R,GisFailed
observedBitrate
TB,R,N
opaqueSessionID
TB,R,N,G_isPIPModePossible
originalRequest
TB,R,N,G_isRentalPlaybackStarted
outputContextImplForControllingOutputDeviceGroupWithID:options:
TB,R,N,G_trimsSampleDurations
pendingRequests
TB,R,N,GisApplicationAuthorizedForPlayback
playableOffline
TB,R,N,GisAudioPlaybackEnabledAtAllRates
playerPublisher
TB,R,N,GisCancelled
playing
TB,R,N,GisCompatibleWithSavedPhotosAlbum
preferredMaximumAudioSampleRate
TB,R,N,GisContentAuthorizedForPlayback
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
TB,R,N,GisEligibleToBePredictedOutputDevice
preventsCapture
TB,R,N,GisExcludedFromAutoselectionInTrackGroup
proposedGroupID
TB,R,N,GisFinished
registeredOutputSettingsClasses
TB,R,N,GisInUseByPairedDevice
removeObserver:
TB,R,N,GisPlayable
request
TB,R,N,GisPlaying
requestedOffset
TB,R,N,GisReadable
runLoop
TB,R,N,GisReadyToPlay,V_readyToPlay
screenViewAreas
TB,R,N,GisVirtualCaptureCardSupported
session
TB,R,N,V_displaysNonForcedSubtitles
setAnchorPoint:
TB,R,N,V_isSyncSample
setBluetoothCompanyIdentifiers:
TB,R,N,V_usesLegacyAutomaticWaitingBehavior
setBorderWidth:
TI,N
setClosedCaptionDisplayEnabled:
TI,R,N,G_figMediaType
setCue:
TQ,R
setFigMetadata:
TQ,R,N,V_authHandlerObjectID
setInitialDate:
TQ,R,N,V_customURLHandlerObjectID
setInstruction:
T^{CGColor=},&,N
setKey:
T^{OpaqueCMTimebase=},&
setLimitCursor:
T^{OpaqueCMTimebase=},R,&
setMaxConcurrentOperationCount:
T^{OpaqueFigAssetReader=},R,N,G_figAssetReader
setNaturalSize:
T^{OpaqueFigAssetWriter=},R,N,V_figAssetWriter
setPlatformIdentifier:forQueue:
T^{OpaqueFigFormatReader=},R,N,G_formatReader
setPreferredMediaChunkDuration:
T^{OpaqueFigPlaybackItem=},&,N,G_playbackItem,S_setPlaybackItem:
setPreloadsEligibleContentKeys:
T^{OpaqueFigTrackReader=},R,N,G_figTrackReader
setProducesCombinableFragments:
T^{_CFURLConnection=},N
setRate:withVolumeRampDuration:
T^{__CFRunLoop=},R,N,V_runLoop
setRenewalDate:
T^{__CVBuffer=},&,N,V_sourcePBuf
setRequestedTimeToleranceAfter:
T^{__CVPixelBufferPool=},R,N,G_pixelBufferPool
setSourceClock:
T^{opaqueCMFormatDescription=},R,N
setSourceTrackIDForFrameTiming:
T^{opaqueCMNotificationCenter=},R,N
setSourceVideoMinFrameDuration:
Td,N,G_fragmentMindingInterval,S_setFragmentMindingInterval:
setSuppressesAudioOnlyVariants:
Td,R
setURL:
Td,R,N,V_maximum
sourceVideoAverageFrameDuration
stepInPresentationOrderByCount:
Tf,N,V_preferredRate
stringByAppendingPathExtension:
Tf,R
supportsHeadTrackedSpatialAudio
Tf,R,N,V_anticipatedPlaybackRate
textStyleRulesFromPropertyList:
Ti,N
totalFrameDelay
Ti,N,V_mediaTimeScale
trackID
Ti,N,V_trackID
tracksPublisher
Ti,R,D,N
Ti,R,N,V_trackID
videoAttributes
Tq,N,V_chunkAlignment
videoSettingsAdjusterForPreset:
Tq,N,V_initialMovieFragmentSequenceNumber
wakeUpImageTime
Tq,N,V_prevStallCount
weakReferenceToAssetWriterInput
.cxx_destruct
PIPModePossible
AVKitData
T@"<NSObject><NSCopying>",R,C,N
CMTimeMappingValue
T@"AVAssetWriterInputPassDescription",R,N,V_nextPassDescription
CMTimeValue
T@"AVSampleBufferGenerator",R,N
HAPConformance
T@"CIImage",&,N,V_sourceCIImage
T@"NSArray",C,D
IOwnTheFigPlayer
T@"NSArray",C,N,V_metadataItems
KVOChangeSerializer
T@"NSArray",R,N
MFiCertificateSerialNumber
T@"NSString",C,N,V_languageCode
OEMIconLabel
T@"NSURL",R,C,N
OEMIcons
TB,N,V_signaled
SHA1Digest
TB,R,N,GisReadyForMoreMediaData
STSLabelSinks
Tq,R,N,V_length
T#,R
T{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}},R,N,V_timeMapping
T#,R,N,G_classForTrackInspectors
T@"<AVAssetWriterDelegate>",W
T@"<AVAssetWriterFigAssetWriterNotificationHandlerDelegate>",W
_addCaptionLayer:subtitleLayer:
T@"<AVAudioSessionDelegateMediaPlayerOnly>"
_addFPListeners
T@"<AVExternalDeviceDelegate>",N
_assetTrackInfo
T@"<AVOutputContextCommunicationChannelImpl>",R,N
_auxiliaryContentConfigurations
T@"<AVOutputDeviceCommunicationChannelDelegate>",W
_blocks
T@"<AVOutputDeviceImplSupport>",W
_bridge
T@"<AVOutputDeviceImplSupport>",W,V_implSupportEventListener
_cachedDuration
T@"<AVPlayerItemLegibleOutputPushDelegate>",R,W,N
_canStepForward
T@"<AVPlayerItemMetadataOutputPushDelegate>",R,W,N
_chunkAlignment
T@"<AVPlayerItemSampleBufferOutputDelegate>",R,W
_clientPriority
T@"<AVSampleBufferVideoOutputPullDelegate>",R,W,N
_contentKeyBoss
T@"<AVVideoCompositing>",R,N
_contextOutputDevicesDidChange:
T@"<AVVideoCompositionInstruction>",R,N
_copyVideoQueue
T@"<NSObject><NSCopying>",C,N
_currentWindowSceneIsForeground
T@"AVAsset",R,&,N
_dateRangeMetadataGroupInternal
T@"AVAssetCustomURLBridgeForNSURLProtocol",W,N,V_bridge
_enabledTrackFormatDescriptions
T@"AVAssetReaderTrackOutput",R,N
_encryptionMode
T@"AVAssetResourceLoader",W,N
_eventCompleted
T@"AVAssetResourceLoadingDataRequest",R,N
_externalDevice
T@"AVAssetSegmentReportSampleInformation",R,N,V_firstVideoSampleInformation
_fetchApplicableOutputDataRates
T@"AVAssetVariantAudioAttributes",R,N
_figAssetTrackPropertiesForKeys
T@"AVAssetWriterConfigurationState",R,N,V_configurationState
_figManifold:formatDescription:orDecryptorDidChange:forTrackID:
T@"AVAssetWriterInput",R,N
_firstTrackGroupWithMediaTypes:
T@"AVAssetWriterInputConfigurationState",R,N,V_configurationState
_flushCallbacks
T@"AVAssetWriterInputPassDescription",&,N,V_currentPassDescription
_frecentsWriter
T@"AVAsynchronousVideoCompositionRequest",&,N,V_compositingRequest
_groupMediaType
T@"AVAudioSession",&
_height
T@"AVContentKey",R
_initWithAsset:
T@"AVContentKeySpecifier",R
_inputs
T@"AVCoordinatedPlaybackParticipant",R,N
_ivarAccessLock
T@"AVDisplayCriteria",C,N
_length
T@"AVFigAssetWriterTrack",R,N,G_assetWriterTrack,V_assetWriterTrack
_loadingBatches
T@"AVMediaDataStorage",R,N
_locale
T@"AVMediaFileType",R,N
_makePlayerName
T@"AVMediaSelection",R,N
_markAsFinished
T@"AVMetadataItem",R,N
_mediaTimeScale
T@"AVOutputDevice",R
_movieTimeScale
T@"AVOutputDevice",W
_nameForLogging
T@"AVOutputDeviceCommunicationChannel",W
_object
T@"AVOutputDeviceDiscoverySessionAvailableOutputDevices",R,N
_offset
T@"AVOutputDeviceGroup",W,V_parentOutputDeviceGroup
_operationQueue
T@"AVOutputSettings",R,N
_outputInternal
T@"AVPlayer",&,N
_outputSettings
T@"AVPlayer",W,V_player
_pairedForcedOnlySubtitlesTrack
T@"AVPlayerItem",R,N
_participantStateForIdentifier:
T@"AVPlayerItem",R,N,V_item
_playbackItemPropertiesForKeys:
T@"AVPlayerLayer",W,V_playerLayer
_preferredOutputSegmentInterval
T@"AVPlayerPlaybackCoordinator",R
_prevStallCount
T@"AVRoutingSession",R
_publisherIndex
T@"AVSampleBufferVideoRenderer",R,N,G_sampleBufferVideoRenderer,V_sampleBufferVideoRenderer
_readWriteQueue
T@"AVSampleCursor",R,&,N
_reason
T@"AVURLAsset",R,N
_removeAllItems
T@"AVVideoComposition",C,N
_renderContextQ
T@"AVVideoCompositionCoreAnimationTool",&,N
_resourceLoader
T@"AVVideoCompositionRenderContext",&,N,V_renderContext
_secondLevelKey
T@"AVWeakReference",&,G_weakReferenceToDelegate,S_setWeakReferenceToDelegate:,V_weakReferenceToDelegate
_setAudioTapProcessor:forTrack:
T@"AVWeakReference",&,N,V_session
_setNeroVideoGravityOnFigPlayer
T@"AVWeakReference",&,V_weakReferenceToAssetWriterInput
_setRateDidChangeNotificationIncludesExtendedDiagnosticPayload:
T@"AVWeakReference",R,N,G_weakReference,V_weakReference
_setSynchronizerTimebase:error:
T@"NSArray",&,N,V_sourceSampleBufferTrackIDsInClientOrder
_setVideoCompositionRenderSize:
T@"NSArray",C,N,G_ramps,S_setRamps:
_silencesOtherPlaybackDuringPIP
T@"NSArray",C,N,V_auxiliaryContentConfigurations
_subsequentStartCompositionTime
T@"NSArray",C,N,V_inputs
_syncController
T@"NSArray",C,N,V_variantQualifiers
_terminalStatus
T@"NSArray",R,C,N
_turnOffLooping
T@"NSArray",R,N,G_mediaSelectionGroupDictionaries
_updateTimebase
T@"NSArray",R,N,V_requiredSourceTrackIDs
_videoCompositionOutputInternal
T@"NSArray",R,N,V_trackReports
_wasFlushedAutomaticallyAtTime:
T@"NSData",C,V_contentIdentifier
_weakReferenceToPlayerItemTrack
T@"NSData",C,V_keyIDFromInitializationData
_windowSceneWillEnterForeground
T@"NSData",R,C,N
activationState
T@"NSDate",C,N
addVideoTarget:
T@"NSDate",R,N
allHeaderFields
T@"NSDate",R,N,V_completionDueDate
arrayWithArray:
T@"NSDictionary",&,N,V_sourcesByTrackID
assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:
T@"NSDictionary",C,N,G_sourcePixelBufferAttributes,S_setSourcePixelBufferAttributes:
audioAttributes
T@"NSDictionary",C,N,V_trackReferences
backgroundColor
T@"NSDictionary",R
base64EncodedStringWithOptions:
T@"NSDictionary",R,C,N
bypassThreshold
T@"NSDictionary",R,N,G_figAssetReaderExtractionOptions
cachedContentInformationForURL:
T@"NSDictionary",R,N,G_trackReferences
canProvidePersistableContentKey
T@"NSDictionary",R,N,V_outputSettings
cancelCallbacks
T@"NSDictionary",R,N,V_trackReferences
checkConfigurationToOutputSegmentDataReturningDebugDescription:
T@"NSError",R
clientsOriginalVideoComposition
T@"NSLocale",R,C,N
compositionTime
T@"NSNumber",R,N
containsObject:
T@"NSNumber",R,N,V_displayResolutionHeight
context
T@"NSObject",R,N
creationOptions
T@"NSObject<OS_dispatch_queue>",R
T@"NSObject<OS_dispatch_queue>",R,N,V_requestQueue
customURLBridgeForNSURLProtocol
T@"NSOperation",R,N,V_transitionToTerminalStatusOperation
dataWithLength:
T@"NSSet",R,N
decodeTimeStamp
T@"NSString",C
didFire
T@"NSString",C,N,G_STSLabel
downloadOverdue
T@"NSString",C,N,V_mediaDataLocation
enableSTSLabels
T@"NSString",C,N,V_outputFileTypeProfile
T@"NSString",R,C
endInterruption
T@"NSString",R,N
errorStatusCode
T@"NSString",R,N,V_deviceID
externalContentProtectionStatus
T@"NSString",R,N,V_extendedLanguageTag
fastestEncoding
T@"NSString",R,N,V_mediaType
figAssetTrackNotificationSource
T@"NSString",R,N,V_reason
figMutableMovie
T@"NSString",R,N,V_secondLevelKey
figSampleCursor
T@"NSString",R,V_keySystem
fileLengthLimit
T@"NSURL",C,N,V_URL
fragmentedAssetWithURL:options:
T@"NSURL",C,N,V_sampleReferenceBaseURL
groupID
T@"NSURL",R,N
hasBatteryLevel
T@"NSURLRequest",R,C
hasEnabledVideo
T@"NSURLResponse",C,N
imageWithColor:
T@"NSURLSession",&,N
initWithAsset:group:dictionary:
T@"NSURLSessionTaskMetrics",&,N,V_metrics
initWithAuthorizationTokenData:
T@"NSUUID",R,N,V_identifier
initWithFigAssetWriter:trackID:
T@,R
initWithFrecentsFilePath:error:
T@,R,V_identifier
initWithPlayer:
T@?,C,N,V_cancellationTest
initWithURLRequestHelper:asset:
T@?,C,N,V_defaultCIContextProvider
isAdmin
T@?,R,N,V_handler
isAudibleBooksContentAuthorized
isEmpty
TB,N
isEqualToArray:
TB,N,G_isExternalProtectionRequiredForPlayback,S_setExternalProtectionRequiredForPlayback:
isHTTPLiveStreamingCacheEnabled
TB,N,G_preservesAudioSessionSampleRate,S_setPreservesAudioSessionSampleRate:
isInEar
TB,N,G_silencesOtherPlaybackDuringPIP,S_setSilencesOtherPlaybackDuringPIP:
isProxy
TB,N,GisEntireLengthAvailableOnDemand
isSelfContained
TB,N,GisModified
TB,N,V_captureCompleteURI
keyPathsForValuesAffectingError
TB,N,V_isFinished
keyRequestByID:
TB,N,V_maximizePowerEfficiency
layoutSublayers
TB,N,V_performsMultiPassEncodingIfSupported
lowercaseString
TB,N,V_producesCombinableFragments
markAsCompleted
TB,N,V_shouldOptimizeForNetworkUse
maximum
TB,N,V_usesVirtualCaptureCard
mediaSelections
TB,R,D,N
mindingInterval
TB,R,GisAboveHighWaterLevel
modelID
TB,R,GisAirPlayVideoPlaying
numberWithLong:
TB,R,GisReadyForMoreMediaData
opacity
TB,R,N,G_isAttachedToAdaptor
options
TB,R,N,G_isRental
outOfBandSource
TB,R,N,G_isStreaming
outputs
TB,R,N,GisAppleAccessory
pixelBufferPool
TB,R,N,GisAssociatedWithFragmentMinder
playbackCoordinator:didIssueBufferingCommand:completionHandler:
TB,R,N,GisAuthorizationRequiredForPlayback
playerReference
TB,R,N,GisCompatibleWithAirPlayVideo
predicateFormat
TB,R,N,GisComposable
preferredVolume
TB,R,N,GisDecodable
preservesAudioSessionSampleRate
TB,R,N,GisEnabled
processContentKeyResponseError:
TB,R,N,GisExportable
readyForDisplay
TB,R,N,GisHeadTrackedSpatialAudioActive
release
TB,R,N,GisInternal
renderTransform
TB,R,N,GisPlayableOffline
requestedLength
TB,R,N,GisPrerendered
reversesMoreVideoFramesInMemory
TB,R,N,GisReadyForDisplay
screenSafeAreas
TB,R,N,GisSelfContained
sentContentInfo
TB,R,N,V_automaticallyWaitsToMinimizeStalling
TB,R,N,V_isClusterLeader
setArtworkData:
TB,R,N,V_shouldBufferInAnticipationOfPlayback
setBorderColor:
TB,V_shouldCancelAllRequests
setCachedDateFormatterTemplate:
TI,R,N
setContentType:
TQ,N
setDefaultRate:
TQ,R,N
setGaplessInfo:
TQ,R,N,V_contentKeySessionHandlerObjectID
setInputGroups:
TQ,R,N,V_requestID
setIsExpanseMediaSession:error:
T^{CGColor=},R,&,N
setKeyIDFromInitializationData:
T^{OpaqueCMTimebase=},R
setMasterClock:
T^{OpaqueFigAsset=},R,N,G_figAsset
setMaximumSize:
T^{OpaqueFigAssetTrack=},R,N,G_figAssetTrack
setNumberStyle:
T^{OpaqueFigFormatReader=},&,N,G_formatReader,S_setFormatReader:
setPlayerLayer:
T^{OpaqueFigMutableComposition=},R,N,G_mutableComposition
setPrefersStandardDynamicRange:
T^{OpaqueFigPlaybackItem=},R,N,G_playbackItem
setPrimaryItem:
T^{OpaqueFigVideoCompositorFrame=},N,V_compositionFrame
setProvisionalAlternateGroupID:
T^{__CFDictionary=},R,N,V_requestInfo
setRenderScale:
T^{__CFRunLoopSource=},N,V_signalSource
setReportGroup:
T^{__CVPixelBufferPool=},R,N
setShouldOptimizeForNetworkUse:
T^{opaqueCMFormatDescription=},&,N,V_sourceFormatHint
setSourcePixelBufferAttributes:
T^{opaqueCMFormatDescription=},R,N,V_sourceFormatHint
setSourceTrackIDsInClientOrder:
Td,N
setSubtitleGravityNonObscuring:
Td,N,V_advanceIntervalForDataAvailability
setTrackVolume:
Td,R,N
setWithObjects:
Td,R,N,V_minimum
status2
Tf,N
stringByAppendingPathComponent:
Tf,N,V_preferredVolume
supportsFormat:
Tf,R,N
Tf,R,N,V_rate
toValue
Ti,N,G_extractionID,S_setExtractionID:
totalStallCount
Ti,N,V_movieTimeScale
trackReferences
Ti,R
tracksWithMediaCharacteristics:
Ti,R,N
valueWithPoint:
Tq,N
videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:
Tq,N,V_chunkSize
visitPredicate:
Tq,N,V_layer
Tq,N,V_prevVariantIdx
Tq,N,V_singlePassFileSize
Tq,N,V_singlePassMediaDataSize
Tq,N,V_totalStallCount
Tq,R
Tq,R,N
Tq,R,N,V_deviceSubType
Tq,R,N,V_deviceType
Tq,R,N,V_modificationType
Tq,R,N,V_segmentType
Tq,R,N,V_timeControlStatus
Tr^{OpaqueFigAsset=},R,N
Tr^{opaqueCMFormatDescription=},R
Tr^{opaqueCMFormatDescription=},R,N
Tr^{opaqueMTAudioProcessingTap=},&,N
Tr^{opaqueMTAudioProcessingTap=},R,&,N
Ts,N
Ts,N,G_alternateGroupID,S_setAlternateGroupID:
Ts,N,G_provisionalAlternateGroupID,S_setProvisionalAlternateGroupID:
Ts,N,V_alternateGroupID
Ts,N,V_provisionalAlternateGroupID
T{?=dddd},R,N
T{?=ii},R
T{?=qiIq},N
T{?=qiIq},N,V_chunkDuration
T{?=qiIq},N,V_compositionTime
T{?=qiIq},N,V_initialSegmentStartTime
T{?=qiIq},N,V_movieFragmentInterval
T{?=qiIq},N,V_overallDurationHint
T{?=qiIq},N,V_preferredOutputSegmentInterval
T{?=qiIq},N,V_sampleBufferCoalescingInterval
T{?=qiIq},R,N
T{?=qiIq},R,N,V_duration
T{?=qiIq},R,N,V_earliestPresentationTimeStamp
T{?=qiIq},R,N,V_hostClockTime
T{?=qiIq},R,N,V_itemTime
T{?=qiIq},R,N,V_presentationTimeStamp
T{?=qq},R,N
T{?={?=qiIq}{?=qiIq}},N
T{?={?=qiIq}{?=qiIq}},R,N
T{?={?=qiIq}{?=qiIq}},R,N,V_timeRange
T{CGAffineTransform=dddddd},N
T{CGAffineTransform=dddddd},N,V_preferredTransform
T{CGAffineTransform=dddddd},N,V_sourceTrackPreferredTransform
T{CGAffineTransform=dddddd},N,V_transform
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGSize=dd},N
T{CGSize=dd},N,V_naturalSize
T{CGSize=dd},R,N
T{NSEdgeInsets=dddd},N
URLAsset
URLAssetInitializationOptions
URLAssetWithURL:options:
URLByAppendingPathComponent:
URLRequest
URLRequestHelper
URLSession
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSessionDataDelegate
URLSessionDataDelegateQueue
URLSessionDidFinishEventsForBackgroundURLSession:
URLSessionOperationQueue
URLWithString:
URLWithString:relativeToURL:
UTF8String
UTTypeIDArrayFromUTTypeArray:
UUID
UUIDString
_CALayerDestinationIsTVOut
_CreateSeekID
_HIDs
_ICYIsAllowed
_ID3Metadata
_KVODispatcher
_KVOInvokers
_MFiCertSerial
_MPEG2TSIsAllowed
_MovieFragmentStreamIsAllowed
_NSErrorForError:
_SInt16ForProperty:
_SInt32ForProperty:
_STSLabel
_STSLabelPublisher
_STSLayer
_URL
_URLAsset
_UTTypes
_VTCleanApertureDictionary
_VTPixelAspectRatioDictionary
_WebVTTIsAllowed
_aboveHighWaterLevel
_aboveHighWaterLevelQueue
_absoluteURL
_accumulatedInitializationData
_acquireBackgroundAssertion
_activeMode
_adaptedVideoCompressionProperties
_addAnimationsForClosedCaptionLayer:gravity:forKey:
_addAnimationsForMaskLayer:forKey:
_addAnimationsForPIPPlaceholderLayer:forKey:
_addAnimationsForVideoLayer:size:gravity:forKey:
_addBoundsAnimationToLayer:usingAnimation:forKey:
_addChapterMetadataItem:timeRange:toChapters:fromIndex:
_addFigAssetListeners
_addFigAssetNotifications
_addFigAssetTrackNotifications
_addFigNotifications
_addFigObjectNotifications
_addFigPlaybackCoordinatorListeners:
_addFigPlaybackItemListeners
_addFigVideoQueueListeners
_addFoldedTBListeners
_addInterstitialEventCollector
_addInterstitialEventCollectorLocked:
_addItemToLinkedList_invokeOnIvarAccessQueue:afterItem:
_addLayer:
_addLegibleOutput:
_addListenersToInterstitialCoordinator:
_addMetadataCollector:
_addMetadataCollector:locked:
_addMetadataOutput:
_addMonitorListeners:
_addMutableTrackWithMediaType:copySettingsFromTrack:options:
_addPositionAnimationToLayer:usingAnimation:forKey:
_addRenderer:error:
_addSublayerTransformAnimationToLayer:fromTransform:usingAnimation:gravity:presentationSize:forKey:
_addSyncLayer:
_addToPlayQueueOfFigPlayerOfPlayer:afterFigPlaybackItemOfItem:
_addVideoOutput:
_addedAudioRendererCount
_addedAudioRendererCountInternal
_addedToSynchronizer
_advanceCurrentItemAccordingToFigPlaybackItem:
_advanceInterval
_advanceIntervalForDataAvailability
_advanceToNextItem
_affineTransformForProperty:
_afterItem
_airPlayVideoActive
_allOutputSettingsPresets
_allocateTracksOnceOnly
_allowableMIMETypes
_alternateGroupID
_ancillaryDescription
_ancillaryPerformanceInformationForDisplay
_anticipatedPlaybackRate
_appIdentifier
_appendPixelBuffer:withPresentationTime:
_appendSampleBuffer:error:
_appendStreamData:withFlags:
_appendToCachedData:
_applicableOutputDataRatesForSampleRate
_applicableOutputSampleRatesForDataRate
_applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock
_applicationSupportPath
_applyCurrentAudioMix
_applyCurrentItemPresentationSizeChangeAndForceUpdate:
_applyCurrentVideoComposition
_applyLinkedListOfItemsToFigPlayerUsingBlock:
_applyMediaSelectionOptions
_applyPlayQueueChangesToFigPlayerWithCompletionHandler:
_areExtraAttributesOf:comparableToExtraAttributesOf:
_arrayEnumerator
_arrayForProperty:
_artworkData
_asset
_assetAnalysisMessages
_assetComparisonToken
_assetCreationOptionsPrefersSandboxedOption:
_assetCreationOptionsRequiresInProcessOperation:
_assetInitializationOptions
_assetInspectorLoader
_assetInspectorOnce
_assetProxy
_assetTrackGroup
_assetTrackInspector
_assetType
_assetWriterTrack
_associateRequestWithGroupWithRequestID:error:
_associateWithLayer:forMode:
_associatedRemoteModeLayer
_attachClosedCaptionLayersToFigPlayer
_attachFigPlayerToSubtitleLayers
_attachTimerSourceToTimebase
_attachToContentKeySession:contentKeyBoss:failedSinceAlreadyAttachedToAnotherSession:
_attachToFigAssetWriterUsingFormatSpecification:sourcePixelBufferAttributes:multiPass:error:
_attachToFigPlaybackItemOfPlayerItem:
_attachToFigPlayer
_attachToPlayer:
_attachToPlayerItem:
_attachToPlayerItemTrack:figPlaybackItem:
_attachToWeakReferenceToAssetReader:
_attachVideoLayersToFigPlayer
_attachedAdaptor
_attachedToExternalContentKeySession
_audioAttributes
_audioEffect
_audioMix
_audioMixOutputInternal
_audioOutputSettingsWithAudioSettingsDictionary:exceptionReason:
_audioRendererInternal
_audioSession
_audioSpatializationMode
_audioTapProcessorForTrack:
_audioTimePitchAlgorithmForTrack:
_audioVolumeCurve
_audioVolumeCurveForTrack:
_authHandler
_authHandlerObjectID
_authorizationTokenData
_automaticallyWaitsToMinimizeStalling
_auxiliaryTrackID
_auxiliaryTrackLayer
_availableCanonicalizedChapterLanguages
_availableFileSize
_availableOutputDataRates
_availableOutputDevices
_availableOutputSampleRates
_averageAudioBitrate
_averageIndicatedBitrate
_averageVideoBitrate
_avfValidationPlist
_balanceMonitoringIsFinishedSemaphore
_basicInspectionFailureCode
_basisProperties
_beginDate
_blendingTransferFunction
_block
_blockSerializationLock
_booleanForProperty:
_bringUpToDate
_bufferPoollInitMutex
_bufferedVideoPlayed
_bufferedVideoRemaining
_buildApplicableDataRatesForSampleRates
_buildAudioConverter
_buildAvailableSampleRates
_cacheContentInformation:
_cacheMediaSelectionOption:forMediaSelectionGroup:
_cachedFragments
_cachedMediaCharacteristics
_cachedMediaSelectionCriteria
_cachedNonForcedSubtitleDisplayEnabledForCurrentItem
_cachedPresentationSizeOfCurrentItem
_cachedReferencedObjectDescription
_cachedTracks
_calculateNumberOfCopiesNeeded
_callDelegateIfNotCalledWithSuccess:error:
_callOldPrerollCompletionHandlerWithSuccess:andSetNewPrerollCompletionHandler:forRequestID:
_callback
_callbackBlock
_callbackCancellationHelper
_callbackContextRegistry
_callbackContextToken
_callbackMutex
_callbackQueue
_callbackRegistrations
_canAddInput:exceptionReason:
_canAddInputGroup:exceptionReason:
_canAddOutput:exceptionReason:
_canAddRendererInternal:error:
_canAddTrackAssociationWithTrackOfInput:type:exceptionReason:
_canApplyOutputSettings:forMediaType:sourceFormat:exceptionReason:
_canApplyTrackReferences:exceptionReason:
_canContinuePlaybackInBackgrounBasedOnAudiovisualBackgroundPlaybackPolicy:
_canPlayFastForward
_canPlayFastReverse
_canRespondByRequestingPersistableContentKeyRequest
_canSetEndpointVolumeDidChangeForEndpointWithID:
_canSetOrUseCachedContentInformation
_canStepBackward
_cancelAndFinishRequest:error:
_cancelMutex
_cancelPendingPrerollAndRegisterPrerollCompletionHandler:
_cancelPendingRequests
_cancelPendingSeekAndRegisterSeekID:withCompletionHandler:
_cancelReading
_cancelRequest:requestID:
_cancelRequestID:
_cancelRequestWithKey:fallbackHandler:
_cancellationReason
_cancellationTest
_captureCompleteURI
_carplayIsActive
_changeSeed
_channelcount
_chapterDataTypeForMediaSubType:
_chapterGroupIndex
_chapterIndex
_chapterMetadataGroupsBestMatchingPreferredLanguages:containingItemsWithCommonKeys:
_chapterMetadataGroupsWithFigChapterGroups:titleLanguage:containingItemsWithCommonKeys:
_chapterMetadataGroupsWithTitleLanguage:containingItemsWithCommonKeys:
_chapterTracks
_checkIsStreamingOnce
_chunkDuration
_chunkSize
_classForAssetTracks
_classForFigAssetInspectorLoader
_classForMovieTracks
_classForTrackInspectors
_cleanApertureDict
_cleanupAfterPlayingLastLoopingCopy
_cleanupFigCallbacks
_clearCachedMediaSelectionGroup:
_clearContext
_clientCustomCompositor
_clientCustomCompositorQ
_clientError
_clientErrorQ
_clientExpectsISOUserDataKeysInQuickTimeUserDataKeySpace
_clientName
_clientProvidesNaturalSize
_clientRequestedPlaybackCoordinator
_clientRequiredPixelBufferAttributes
_clientURLLoadingRepresentsAccurateNetworkStatistics
_closedCaptionLayer
_closedCaptionLayers
_cmNotificationCenter
_collectUncollectables
_collectUncollectables_invokedFromDeallocAndFinalize
_collectorInternal
_colorId
_colorPropertiesAreSetInVideoComposition:
_commChannelUUID
_commandOrderIndex
_common_init
_communicationChannelsForUUIDs
_compactDescription
_comparisonToken
_completedDecodeForPrerollForRequestID:
_completionDueDate
_completionHandler
_completionHandlerQueue
_compositingRequest
_compositionFrame
_compositionFrame:atTime:requiresRenderUsingSources:requiresSampleBuffersUsingSources:withInstruction:
_compositionTime
_condition
_configurationGroup
_configurationQueue
_configurationState
_configureLoopingItem:
_configurePlaybackItemAndReturnError:
_configurePlayerWhenLeavingPIP
_configureVideoCompositionColorProperties
_configureWithVideoQueue:
_configuredTimeOffsetFromLive
_conformingDataTypes
_connection
_contentIdentifier
_contentInformationRequest
_contentKeyGroups
_contentKeyRecipients
_contentKeyRequest
_contentKeyRequestForCryptorUUID:cryptorKeyRequestID:
_contentKeySession
_contentKeySessionCustomURLHandler
_contentKeySessionHandlerObjectID
_contentKeySessionIsAttached
_contentLayer
_contextCanSetVolumeDidChange
_contextVolumeDidChange
_contextsForTokens
_controlStates
_controlTimebaseSetByUser
_controlTimebaseSetByUserIsInUse
_coordinationMediumDelegate
_coordinator
_copyAndRemoveObserverForWeakReferenceToListener:callback:name:object:
_copyAndStoreCryptorUUID
_copyCGImageAtTime:usingAssetReader:error:
_copyContentKeyBoss
_copyDisplayedPixelBuffer
_copyFigCPEProtector
_copyFigFormatReaderOnce
_copyFigPlaybackCoordinator
_copyFigPlaybackItem
_copyFigPlaybackItemLocked:
_copyFigPlayer
_copyFigTrackReaderOnce
_copyFigVideoCompositor
_copyFigVideoCompositor:andSession:recyclingSession:forFigRemaker:error:
_copyFoldedTimebase
_copyFormatReaderFromFigObjectWithFigErrorCode:
_copyInterstitialEventCoordinatorEnsuringItIsRemote:forceCreate:
_copyPerformanceDataForCurrentItem
_copyPixelBufferForItemTimeWithOptions:itemTimeForDisplay:options:
_copyProxyFoldedTimebase
_copyProxyTimebase
_copyProxyUnfoldedTimebase
_copySampleCursorServiceOnce
_copyStateDispatchQueue
_copyTimebase
_copyTimebaseFromFigPlaybackItem:
_copyUnfoldedFigTimebase
_copyValueAsCFTypeWithFormatDescription:error:
_count
_createAVErrorForError:andFigErrorCode:
_createAndConfigureFigPlayerWithType:completionHandler:
_createAssetIfNecessary
_createBlockBufferUsingNSData:withOffset:withLength:
_createDefaultMediaSelectionOptions
_createDuplicateFigAssetFromAVAsset:
_createEmptyMutableCompositionIfNeeded
_createFigContentConfigForEnvironmentalCondition:
_createFigManifoldWithBlockBuffer:manifold:
_createFigPlaybackItemForFigPlayer:asset:URL:flags:options:playbackItem:
_createFigPlayerWithType:options:player:
_createJSONEncodedDataFromValue:error:
_createKeyRequestDictionaryForApp:persistentKey:serverChallenge:cryptorKeyRequestID:purpose:
_createNSDataWithBlockBuffer:
_createOnceTimebaseObserverForRemovalOfRenderer:atTime:
_createPrerollID
_createSerializedRepresentationWithFormatDescription:error:
_createVideoQueue:errorStep:
_createVideoQueueFailed
_creationOptions
_criteriaInternal
_cryptor
_cryptorsList
_currentFrameRate
_currentItemIdentifier
_currentMediaSelectionFromFigSelectedMediaArray:
_currentPassDescription
_currentRate
_currentSuspensions
_currentTimeWithOptionalFoldedTimebase:
_currentToken
_currentViewAreas
_currentWaitingPoliciesArray
_currentWindowSceneIsForegroundDefault
_customCompositorFigPropertyDidChange
_customCompositorShouldAnticipateRenderingFromTime:toTime:andThenFromTime:toTime:
_customCompositorShouldCancelPendingFrames
_customCompositorShouldPrerollForRenderingFromTime:toTime:andThenFromTime:toTime:requestID:
_customURLHandler
_customURLHandlerObjectID
_customURLLoader
_customURLRequest
_customURLResponse
_data
_dataForProperty:
_dataLengthLimit
_dataRequest
_decoderFrameDrops
_deepCopy
_defaultActionAtItemEnd
_defaultCIContext
_defaultCIContextProvider
_defaultCIContextThreadSafety
_defaultContentKeyGroup
_defaultContentKeySession
_defaultOption
_delegate
_delegateQueue
_delegateReadWriteQueue
_delegateStorage
_dependencyKeyPath
_dependencyManager
_dependentKey
_destRectForAspectRatio:
_destinationDesiredPixelBufferAttributes
_destinationDesiredPixelBufferColorPrimaries
_destinationDesiredPixelBufferTransferFunction
_destinationDesiredPixelBufferYCbCrMatrix
_destinationPixelBufferDimensions
_destroyContentKeyGroupWithError:
_detachClosedCaptionLayersFromFigPlayer:
_detachFigPlayerFromSubtitleLayers
_detachFromPlayerItem
_detachFromPlayerItemTrack
_detachVideoLayersFromFigPlayer:
_detatchFromPlayerItem
_detectorForWeakReferenceToDelegate
_deviceID
_deviceName
_deviceSubType
_deviceType
_dictionary
_dictionaryForProperty:
_dictionaryGroupsWithSelectedOption
_dictionaryOfSpecialGettersForKeyValueStatus
_dictionaryOfSpecialLoadingMethodsForKeys
_dictionaryPlistRepresentation
_didCloseCommChannelWithUUID:forDeviceWithID:
_didCloseCommunicationChannel
_didEnterBackground
_didEnterBackground:
_didEnterForeground
_didFinish:error:
_didFinishSuspension:
_didFinishSuspensionNotificationToken
_didFire
_didGenerateCGImage:
_didIssueCommandToPlaybackObjectNotificationToken
_didNotCallDelegate
_didReceiveData:
_didReceiveData:data:
_didReceiveData:fromDeviceWithID:fromChannelWithUUID:
_didReceiveResponse:response:
_didRequestMediaDataOnce
_didStartInitialSession
_directoryForTemporaryFiles
_disallowsAutoPauseOnRouteRemovalIfNoAudio
_disassociateWithLayerForMode:
_dispatchOutputMediaDataWillChange
_dispatchOutputSequenceWasFlushed
_displayCriteria
_displayLayer
_displayName
_displayNameLocaleIdentifier
_displayNameWithLocale:fallingBackToMatchingUndeterminedAndMultilingual:
_displayResolutionHeight
_displayResolutionWidth
_displaySize
_displaysNonForcedSubtitles
_displaysUsedForPlayback
_doesSuspensionReasonTriggerWaiting:
_downloadFailureCallbackWithError:
_downloadSuccessCallback
_duration
_earliestPresentationTimeStamp
_edgeWidths
_effectiveRateChanged
_enableTrackExtractionReturningError:
_enabled
_endCompositionTime
_endSuspension:proposingNewTime:
_endpoint
_endpointVolumeControlTypeDidChangeForEndpointWithID:
_enqueuePlayQueueModification_invokeOnIvarAccessQueue:
_enqueueSingleSampleBuffer:bufferEnqueueingInfo:
_ensureAllDependenciesOfKeyAreLoaded:
_ensureAssetDownloadCache
_ensureAssetWithFigPlaybackItemWithTrackIDs:
_ensureFigAssetImageGeneratorAllowingSynchronousPropertyLoad:error:
_ensureFigPlaybackCoordinatorIsConnected
_ensureProtocolVersionList:
_ensureResponseInfoSentToCustomURLHandler
_ensureValueLoadedSync
_ensureVideoLayersAreAttached
_ensuresActiveAudioSessionWhenStartingPlayback
_enterPIPModeRedirectingVideoToLayer:
_enterSecondScreenModeRedirectingVideoToLayer:
_enumerateItemsUsingBlock:
_enumerator
_environmentalConditions
_error
_errorForFigNotificationPayload:key:
_errorForOSStatus:
_errorFromAssetNotificationPayload:
_errorLogArray
_evaluateDisplaySizeOfAllAttachedLayers
_evaluateLegibleOutputs
_evaluateMetadataOutputs
_evaluateVideoOutputs
_expectedCurrentItemIdentifier
_expectsMediaDataInRealTime
_exportSession
_extendedLanguageTag
_externalDeviceHID
_externalDeviceIcon
_externalPlaybackActive
_externalPlaybackVideoGravity
_externalProtectionRequiredForPlayback
_externalProtectionStatus
_externalProtectionStatusCopiedFromFig
_extractFPExternalProtectionStatus:
_extractPropertiesFromDictionary:
_extractPropertiesFromTaggedRangeMetadataDictionary:
_extractionID
_failedToGenerateCGImage:
_fallbackTrack
_figAlternate
_figAlternateObjC
_figAsset
_figAssetCreationStatus
_figAssetMediaSelectionPropertiesArray
_figAssetNotificationNames
_figAssetPropertiesForKeys
_figAssetProvider
_figAssetReaderDecodeError
_figAssetReaderExtractionOptions
_figAssetReaderFailed
_figAssetReaderSampleBufferDidBecomeAvailableForExtractionID:
_figAssetReaderVideoScalingPropertiesFromVideoSettings:withFormatDescription:
_figAssetTrack
_figAssetTrackMediaSelectionPropertiesArray
_figAssetWriterAccessQueue
_figAssetWriterCallbackContextToken
_figAssetWriterDidDropBelowLowWaterLevelForTrackID:
_figContentKeySession
_figCustomCompositor
_figEndpoint
_figEndpointHIDInputMode
_figEndpointPropertyValueForKey:
_figEndpoints
_figError
_figErrorUserInfo
_figEvent
_figFileMIMETypes
_figFilePathExtensions
_figFileUTIs
_figFormatReader
_figHFSFileTypes
_figLegibleOutputsDictionaryOptions
_figMIMETypes
_figManifold
_figManifold:discoveredNewTrackID:mediaType:
_figManifold:pushedSampleBuffer:trackID:flags:
_figManifold:trackDidEnd:
_figManifoldAllNewTracksReady:
_figMediaType
_figMetadataArrayForMetadataItems:
_figMetadataDictionary
_figMetadataDictionaryWithValue:diviningValueDataType:
_figMetadataFormat
_figMetadataOutputsDictionaryOptions
_figMetadataPropertyFromMetadataItems:
_figMetadataSpecificationReturningError:
_figMutableComposition
_figMutableMovie
_figMutableMovieFromFormatReader:
_figPlaybackCoordinator
_figPlaybackCoordinatorConfigQueue
_figPlaybackItem
_figPlaybackItem:didFlushLegibleOutputWithDictionaryKey:
_figPlaybackItem:didFlushMetadataOutputWithDictionaryKey:
_figPlaybackItem:didOutputAttributedStrings:nativeSampleBuffers:atItemTime:withLegibleOutputsDictionaryKey:
_figPlaybackItem:didOutputSampleBuffers:fromTrackWithID:forMetadataOutputWithDictionaryKey:
_figPlaybackItemIsReadyForInspection
_figPlaybackItemNotificationNames
_figPlaybackItemTrackOutputSequenceWasFlushedForTrackID:extractionID:
_figPlaybackItemTrackSampleBufferDidBecomeAvailableForTrackID:extractionID:
_figSampleCursor
_figSampleCursorService
_figSampleGenerator
_figSampleGeneratorReadFlags
_figSampleGeneratorReadPolicy
_figSelectedMediaArray
_figStreamingMIMETypes
_figStreamingUTIs
_figSuspension
_figTimelineCoordinator
_figTimelineCoordinatorConfigQueue
_figVideoTargets
_fileSize
_fileType
_fileUTTypes
_filteringRequestsInFlight
_finishInitializationWithTimerEventHandler:
_finishLoadingCustomURLRequestWithError:
_finishLoadingCustomURLRequestWithResponseData:renewalDate:
_finishWritingOperations
_finishWritingOperationsDidFinish
_finished
_finishedRequestQ
_fireBlock
_fireBlockForTime:
_fireTime
_firstAssociatedTrackWithAssociationType:
_firstFormatDescriptionIsLPCM
_firstSequenceNumber
_firstVideoSampleInformation
_floatForProperty:
_flushCallbackListQueue
_flushCallbackQueue
_flushComplete
_flushPendingSampleBuffersReturningError:
_fontSizeInt
_forBoundsAnimations:applyBlock:
_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection
_forStreamingItemsVendAssetWithFigPlaybackItem
_forceHostApplicationInForeground:
_forceLayout
_forceWindowSceneEvent:
_formatDescriptions
_formatReader
_formatReaderOnce
_formattedDisplayString
_fpNotificationNames
_fragmentMindingInterval
_fragmentedAsset
_fragmentedAssetMinder
_fragmentedAssetTrack
_fragmentedMovieTrack
_frecents
_frecentsContainerPath
_frecentsFilePath
_frecentsReaderAfterMigrationIfNecessary
_fullListOfAllowableMIMETypes
_fundamentalOperation
_generator
_getAndClearCachedData
_getAndPruneCompletionsWhileMutexLocked
_getAvailableOutputSampleRateFor:rounding:
_getCachedNonForcedSubtitleEnabled:
_getCachedPresentationSize:
_getClientCompletionHandlerForRenderer:
_getDelegateOnStateQueue
_getDisplayVideoRange:displaySize:refreshRate:
_getFigAssetCreationOptionsFromDataAssetInitializationOptions:figAssetCreationFlags:
_getFigAssetCreationOptionsFromURLAssetInitializationOptions:assetLoggingIdentifier:figAssetCreationFlags:error:
_getFigAssetiTunesStoreContentInfoFromURLAssetiTunesStoreContentInfo:
_getFigSampleCursorServiceReportingTimeAccuracy:
_getFilteredMetadataGroups:fromIdentifiers:andClassifyingLabels:modifiedIndexesOut:newIndexesOut:
_getMaskLayer:videoLayer:subtitleLayer:closedCaptionLayer:interstitialLayer:
_getRetryReasonForError:
_getTimebaseObserverForRenderer:
_getVideoComposition:customVideoCompositorSession:figVideoCompositor:
_groupDictionaries
_groupID
_groupMediaCharacteristics
_groupMembersChangedForGroupWithID:
_handleAuthChallenge:requestID:canHandleRequestOut:
_handleCompletedWritingNotification
_handleContentProtectionSessionIdentifierDidChange:
_handleExternalProtectionStateChangedCallbackForCryptKeyIdentifier:
_handleFailedNotificationWithError:
_handleIsDisplayingClosedCaptionsDidChange:player:
_handleKeyResponseError:
_handleKeyResponseError:forCryptorUUID:andCryptorKeyRequestID:
_handleKeyResponseSuccessWithCryptor:
_handleKeyResponseSuccessfullyProcessedForCryptorUUID:andCryptorKeyRequestID:
_handleNonForcedSubtitleDisplayDidChange:player:
_handlePlayerCurrentItemDidChangeForPlayer:
_handleRequest:requestID:
_handleRequest:requestID:canHandleRequestOut:
_handleRequest:requestID:willHandleRequest:
_handleRequest:withRequestID:fromHandler:willHandleRequest:
_handleSecureStopDidFinalizeRecordCallback
_handleTimeDiscontinuity
_handleURLRequest:
_handleUpdateToPersistentKey:forKeyIdentifier:
_handler
_hasAssociatedAVPlayerLayerInPIPMode
_hasAssociatedOnscreenAVPlayerLayer
_hasCurrentInterstitialEvent
_hasEmptyEdits
_hasEnabledAudio
_hasEnabledVideo
_hasEnqueuedVideoFrame
_hasEqualValueForKey:asObject:
_hasEverEnqueued
_hasForegroundLayers
_hasLayerAsAuxiliaryTrack
_hasMultipleDistinctFormatDescriptions
_hasMultipleEdits
_hasOverrideForSelector:
_hasPostProcessingLayers
_hasQTSaveRestriction
_hasRegisteredFigCustomCompositorCallbacks
_hasResourceLoaderDelegate
_hasRespondedAtLeastOnce
_hasSelectionInCachedMediaSelectionGroup:
_hasStoppedResponding
_highQualityRendering
_hostApplicationHasForegroundExemption
_hostApplicationInForeground
_hostClockTime
_hudTimer
_hudUpdateInterval
_hudUpdateTrigger
_hudXoffset
_hudYoffset
_iVarMutex
_identifier
_imageQueueFrameDrops
_impl
_implEventListener
_implSupportEventListener
_index
_informObserversAboutAvailabilityOfCurrentMediaSelection
_informObserversAboutAvailabilityOfDuration:
_informObserversAboutAvailabilityOfPresentationSize
_informObserversAboutAvailabilityOfTracks:
_init
_initInternalObject
_initWithAsset:chapterGroupIndex:chapterIndex:chapterType:extendedLanguageTag:languageCode:chapterDataType:time:duration:
_initWithAsset:selectedMediaArray:
_initWithAsset:trackID:
_initWithAsset:trackID:trackIndex:
_initWithAsset:trackIndex:
_initWithAssetWithoutGroupDictionaries:
_initWithComposition:
_initWithDeferredLoadingOfAsset:selectedMediaArray:
_initWithFigAsset:
_initWithFigError:userInfo:
_initWithFigMetadataDictionary:valueLoadingHandler:
_initWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
_initWithFormatReader:URL:data:options:
_initWithReader:itemIndex:
_initWithTaggedRangeMetadataDictionary:items:
_initWithTimeMapping:
_initialMovieFragmentSequenceNumber
_initialPassDescription
_initialSegmentStartTime
_initializationData
_initializationOptions
_initializationOptionsClasses
_initializationVector
_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:withOptions:
_initializeTimebase
_initializeTimebases
_input
_inputASBD
_inputGroups
_inputParameters
_insertAfterItem:
_insertItem:afterItem:
_inspectionRequiresAFormatReader
_inspector
_inspectorLoader
_installHandlerForNSURLSessionConfiguration:queue:
_installNotificationHandlers
_instruction
_internal
_internalQueue
_internalTemplateItems
_interstitialLayer
_interstitialPlayer
_interstitialPlayerIfCreated
_intervalRequested
_invalid
_invalidateMutex
_invalidatePending
_invokeCompletionHandlerForLoadingBatches:
_invokeDelegateCallbackWithBlock:synchronouslyWhenDelegateQueueIsNULL:
_invokeReadyForEnqueueingHandlers
_isAFileBasedItemThatsReadyToPlay
_isAirPlayDevicePresenceDetected
_isAirPlayVideoActive
_isAttachedToAdaptor
_isAttachedToPlayerItem
_isAuxiliaryContent
_isClusterLeader
_isConnectedToPhysicalSecondScreen
_isConnectedToSecondScreen
_isCreateVideoQueueErrorRetryable:
_isCustomRoutePresenceDetected
_isDesignatedDefault
_isDisplayingClosedCaptions
_isExpired
_isExternalProtectionRequiredForPlayback
_isExternalProtectionRequiredForPlaybackInternal
_isFigAssetReadyForInspectionOfMediaSelectionOptions
_isFigAssetReadyForInspectionOfMediaSelectionOptionsAndFigPlaybackItemIsReadyForInspection
_isFinished
_isIAPDExtendedModeActive
_isInExpanseMediaPlayback
_isInterstitialPlayer
_isInvalidatePending
_isMainProgramContent
_isMuted
_isNonForcedSubtitleDisplayEnabled
_isObservingTimebase
_isPIPModePossible
_isPartOfForegroundScene
_isReadyForBasicInspection
_isReadyForInspectionOfPresentationSize
_isReadyForInspectionOfRecommendedTimeOffsetFromLive
_isReadyForInspectionOfTracks
_isRental
_isRentalPlaybackStarted
_isRequestForContentKey
_isRequestingMediaData
_isStreaming
_isStreamingGroup
_isSyncSample
_isValidMediaSelectionOption:forMediaSelectionGroup:
_isValidReturningExceptionReason:
_isVideoPlaybackAllowedWhileInBackground
_isVisible
_isWaitingForLastCopyToFinishSet
_isoUserDataKeysRequiringKeySpaceConversion
_issueLoadingRequestWithKey:loadingRequest:isRenewalRequest:fallbackHandler:
_item
_itemFilterInternal
_itemIsReadyToPlay:
_itemOkayToPlayWhileTransitioningToBackground:
_itemTime
_itemTimeForHostTimeAsCMTime:
_items
_items_invokeOnIvarAccessQueue
_ivarAccessQueue
_ivarQueue
_ivars
_key
_keyAsString
_keyData
_keyIDFromInitializationData
_keyPath
_keyPathDependencies
_keyPathDependencyManager
_keyResponse
_keySpace
_keySystem
_keysAwaitingCompletion
_keysToRemove
_kickAssetObserversIfAppropriate
_languageCode
_languageDisplayNameFromMetadataAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:
_lastCryptor
_lastFormatDescription
_lastIntervalUsed
_lastNonperiodicFireTime
_lastPeriodicFireTime
_lastRate
_lastStopTime
_latestRateCommandOrderIndex
_latestSeekCommandOrderIndex
_layer
_layerForegroundStateChanged:
_layerInstruction
_layerQueue
_lazyMetadataItem
_leafPropertyChangeNotifier
_leavePIPModeForLayer:
_legacyStreamSession
_legibleContentInsets
_legibleOutputForKey:
_legibleOutputInternal
_legibleOutputsForKeys
_limitsBandwidthForCellularAccess
_linkAndSyncAudioSessionWithInterstitialPlayer:
_listenerObjectsQueue
_loadAssetInspectorAndLoaderOnce
_loadChapterInfo
_loadFileRepresentationOfTypeIdentifier:forItemProviderCompletionHandler:
_loadOutputDevices
_loadStatusForFigAssetTrackProperty:error:
_loadStatusForProperty:figAsset:error:
_loadValuesSynchronouslyForKeys:trackKeys:
_loadValuesUsingDefaultLoadingMethodWhileMutexLockedForKeys:
_loadValuesWhileMutexLockedForKeys:
_loadedTimeRanges
_loadedTimeRangesFromFPPlaybableTimeIntervals:
_loadiVarsIfNeeded
_loadingCanceled
_loadingMutex
_loadingStatusCache
_lock
_logPerformanceDataForCurrentItem
_logPerformanceDataForPreviousItem
_longLongForProperty:
_lookupRequestForDataTask:
_makeAutoreleasedAssetReader
_makeContentKeyGroupWithIDOut:error:
_makeDisplayCriteriaOnce
_makeFinishWritingOperationsWithCustomFigAssetWriterFinishOperation:
_makeHIDsOnlyOnce
_makeIconsOnlyOnce
_makePropertiesReady
_makeReadyForEnqueueingWithCompletionHandler:
_makeSTSLabel
_makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:error:
_managedAssetCache
_mapAssetKeys:toFigAssetPropertySet:figAssetTrackPropertySet:callerName:
_markAsFinishedCalled
_markAsNeedingNewAssetWithFigPlaybackItem
_markAsReadyForBasicInspection
_markAsReadyForInspectionOfDuration
_markAsReadyForInspectionOfPresentationSize
_markAsReadyForInspectionOfRecommendedTimeOffsetFromLive
_markAsReadyForInspectionOfTracks
_markAssetWithFigPlaybackItemAsNeedingNewTracks
_markFigAssetAsReadyForInspectionOfMediaSelectionOptions
_marksOutputTrackAsEnabled
_maskLayer
_matchesGroupID:mediaType:
_maximizePowerEfficiency
_maximum
_maximumAVPlayerLayerDisplaySize
_mediaCharacteristics
_mediaDataConsumer
_mediaDataLocation
_mediaDataRequester
_mediaDataRequesterSerialQueue
_mediaDataStorageInternal
_mediaFileType
_mediaFileTypeWithFileTypeIdentifier:exceptionReason:
_mediaOptionsSelectedByClient
_mediaOptionsSelectedByClientForKey:
_mediaSelectionGroup
_mediaSelectionGroupDictionaries
_mediaSelectionOption
_mediaSelectionOptionPlist
_mediaSelections
_mediaType
_mediator
_mediumLoggingIdentifier
_mergeClientLayersIntoMaskLayer:
_mergePreloadingRequestOptions:withCreateKeyRequestOptions:
_metadata
_metadataCollectorInternal
_metadataCollectors
_metadataItemWithFigMetadataDictionary:
_metadataItemWithFigMetadataDictionary:containerURL:securityOptions:
_metadataItems
_metadataItemsForFigMetadataArray:
_metadataOutputForKey:
_metadataOutputInternal
_metadataOutputsForKeys
_metrics
_metricsDictionary
_migrateFrecentsFromCFPreferencesToFrecentsFilePath:
_minimum
_minimumUpcomingPTS
_modelID
_modificationType
_monitor
_monitoredObject
_monitoringIsFinishedSemaphore
_mostRecentPassDescription
_movie
_movieFragmentInterval
_movieTrackInternal
_multipleAudioRenderersDisallowed
_mutableAudioMix
_mutableComposition
_mutableInputParameters
_mutableInstruction
_mutableLayerInstruction
_mutableMovieForFileType:
_mutableMovieInternal
_mutableMovieTrackInternal
_mutablePriv
_mutableScheduledParametersInternal
_mutableTracks
_mutableVideoComposition
_mutex
_name
_nameForLogging_fromIvarAccessQueue
_nameForProxy
_naturalSize
_needApplicableParameters
_needAvailableSampleRates
_needNewConverter
_networkBandiwdth
_newTrackForIndex:
_nextFiringTimeAfterTime:
_nextItem
_nextPassDescription
_nominalFrameRate
_nonNilArrayForProperty:
_nonNilDictionaryForProperty:
_noteCurrentRemoteInterstitialEvent:
_noteFinishingOfRequest:
_noteNewNonForcedSubtitleDisplayEnabledForPlayerItem:
_noteNewPresentationSizeForPlayerItem:
_noteRemoteInterstitialEvents:forItem:
_notificationHandler
_notificationHandlersAreRegistered
_notificationName
_notificationNames
_notifyAssetThatDurationDidChangeWithSuccess:
_notifyAssetThatDurationWillChange
_notifyPlayerOfDisplaySize
_notifyPlayerOfLayerForegroundStateChange
_notifySelfThatSegmentsDidChangeWithSuccess:
_notifySelfThatSegmentsWillChange
_notifyTracksThatSegmentsDidChange:successfully:
_notifyTracksThatSegmentsWillChange:
_notifyWhetherMorePassesAreNeeded:timeRanges:forTrackWithID:
_nudgeMediaDataRequesterIfAppropriate:
_objectWithItemProviderFileURL:typeIdentifier:isInPlace:error:
_observedCoord
_observer
_observerToken
_observersForListenerKeys
_observingSelf
_obtainCoordinator
_oemIcons
_opacity
_operationStateSerializationQueue
_operator
_optimizesAuxiliaryContentConfigurations
_optionMediaCharacteristics
_optionMediaType
_optionWithID:displaysNonForcedSubtitles:
_optionWithID:identifier:source:displaysNonForcedSubtitles:
_options
_optionsDictionary
_originalFormatDescription
_originator
_otherDevices
_otherParticipants
_outputASBD
_outputContext
_outputDevice
_outputDeviceDiscoverySession
_outputDeviceForID:
_outputDevicesFromProperty:withQualifier:
_outputDidFinish:
_outputFileTypeProfile
_outputPublisherSubscription
_outputSettingsDictionary
_outputSettingsObject
_outputSettingsWithOutputSettingsDictionary:mediaType:exceptionReason:
_overallDurationHint
_overlappedPlaybackWillBeginForItem:withID:
_parentChannel
_parentOutputDevice
_parentOutputDeviceGroup
_participantLimitPerSuspensionReason
_participantStates
_participantsChangedNotificationToken
_participatesInAudioSession
_pauseSnapsToMediaTimeOfOriginator
_pausesAudioVisualPlaybackInBackground
_peakIndicatedBitrate
_pendingAudioSampleBuffers
_pendingFigPlayerProperties
_pendingFigPlayerPropertyForKey:
_pendingPrerollRequestID
_percentCoverageRelativeToRootLayer
_performCancellationByClient
_performDelegateCallbackSynchronouslyIfCurrentDelegateQueueIsQueue:delegateCallbackBlock:
_performDelegateSelector:withObject:representingNewRequest:key:fallbackHandler:
_performRendererRemoval:
_performanceDictionary
_performanceMetricsInternal
_performsMultiPassEncodingIfSupported
_pixelAspectRatio
_pixelAspectRatioDict
_pixelBufferAttributeMediator
_pixelBufferAttributes
_pixelBufferAttributesDidChangeForLayer:
_pixelBufferPool
_pixelBufferPoolQ
_playbackConfigurationOptions
_playbackCoordinator
_playbackCoordinatorWithoutTriggeringFullSetup
_playbackDisplaysForFigPlayer
_playbackItem
_playbackItemNotificationPayloadToError:
_playbackProperties
_playerBeingObserved
_playerChangeStatusToFailedWithError:
_playerConnection
_playerCurrentItemPresentationSize
_playerItem
_playerItemAccessLog
_playerItemAccessLogEvent
_playerItemErrorLog
_playerItemErrorLogEvent
_playerItemReference
_playerItemTrack
_playerItemURL
_playerLayer
_playerReference
_playerVolume
_plistHasOptionIdentifier:
_policyDictionary
_popAllOldPlayerItems
_poseAuthenticationChallengeWithKey:challenge:fallbackHandler:
_poseAuthenticationChallengeWithRequestInfo:requestID:challenge:
_postProcessingRootLayer
_postProcessingVideoLayer
_postProcessingVideoLayers
_postSeekCompletionNotificationWithSeekID:andResult:
_predicate
_preferCoordinatedPlaybackBehavior
_preferredDisplayCriteria
_preferredMetadataTitleAccordingToPreferredLanguages:fallingBackToMatchingEmptyLocale:excludeM3U8Metadata:
_preferredRate
_preferredRepresentationForItemProviderReadableTypeIdentifier:
_preferredRepresentationForItemProviderWritableTypeIdentifier:
_preferredTransform
_preferredVolume
_prepareCryptor:forRenewal:andReturnKeyRequestID:isInchargeOfKeyRequest:error:
_prepareForKeyRenewalReturningError:
_prepareForReadingReturningError:
_prepareForWritingWithFigAssetWriter:mediaFileType:error:
_prepareToEndSession
_prepareToFinishWritingReturningError:
_prepareToInitiatePlayback
_prerendered
_presentationSize
_presentationSizeHeight
_presentationSizeWidth
_presentationTimeStamp
_preservesAudioSessionSampleRate
_preventsChangesToSublayerHierarchy
_preventsDisplaySleepDuringVideoPlayback
_preventsSleepDuringVideoPlayback
_previousFiringTimeBeforeTime:
_previousItem
_primaryContentConfiguration
_primaryItem
_primaryMediaCharacteristic
_primaryPlayer
_primeCache
_primeCacheOnDispatchQueue
_priv
_privChapter
_privacyStance
_processContentKeyRequestWithIdentifier:contentIdentifier:keyIDFromInitializationData:initializationData:options:
_processContentKeyRequestWithIdentifier:encryptionMode:supportedProtocolVersions:groupID:error:
_processContentKeyRequestWithIdentifier:initializationData:options:groupID:
_processContentKeyRequestWithKeyRequestFromPSSH:decryptFormatType:initializationData:options:
_processContentKeyResponse:renewalDate:initalizationVector:error:
_processContentKeyResponseError:
_producesCombinableFragments
_propertyListForMediaSelection:forGroup:
_propertyListForSelectedMediaOptionInMediaSelectionGroup:
_propertyListForSelectedMediaOptionUsingFigSelectedMediaArrayObtainedFromGroup:
_proposedGroupIDDidChangeForEndpointWithID:
_protectorSessionIdentifier
_providesAccurateTiming
_provisionalAlternateGroupID
_publisher
_pushAttributedStrings:andSampleBuffers:atItemTime:
_pushTimedMetadataGroups:fromPlayerItemTrack:
_queue
_queueForCallingPrerollCompleteCallback
_queueForProtectingPrerollCompleteCallback
_queuePlayer
_quietlySetEQPreset:
_quietlySetServiceIdentifier
_quietlySetVariantIndex:
_ramps
_rate
_rateDidChangeNotificationIncludesExtendedDiagnosticPayload
_rateDidChangeNotificationPayloadForAVFRateChangeReason:reasonIsExtendedDiagnostic:rateChangeIdentifier:rateChangeOriginator:
_rateDidChangeNotificationPayloadForFigRateChangeReason:rateChangeIdentifier:rateChangeOriginator:
_rateState
_rateUpdateDuringTransitionDecided
_reactToSecondLevelPropertyChange:
_readOnlyRenderingTimebase
_readOnlyVideoQueueTimebase
_readSingleSample
_readyForInspection
_readyForMoreMediaDataObserverSerialQueue
_readyToPlay
_realNotifier
_reallyInvalidate
_reasonForWaitingToPlay
_recentlyUsedDevices
_recommendedTimeOffsetFromLive
_refreshAboveHighWaterLevel
_refreshRate
_registerForFigManifoldCallbacksForTrackID:
_registerRequest:id:forDataTask:
_registeredForFigAssetNotifications
_registeredForObjectNotifications
_releaseAndClearCallbackBlock_invokeOnSerializationQueue
_remoteControlSession
_removeAllLayers
_removeAllParticipantStates
_removeAllTransportControlStates
_removeCaptionLayer:subtitleLayer:
_removeContentKeyRequestForCryptorUUID:cryptorKeyRequestID:
_removeFAListeners
_removeFPListeners
_removeFigAssetListeners
_removeFigAssetNotifications
_removeFigAssetTrackNotifications
_removeFigNotifications
_removeFigObjectNotifications
_removeFigPlaybackCoordinatorListeners
_removeFigVideoQueueListeners
_removeFoldedTBListeners
_removeFromItems
_removeFromPlayQueueOfFigPlayerOfAttachedPlayer
_removeInterstitialEventCollector
_removeInterstitialEventCollectorLocked:
_removeItem:
_removeItemFromLinkedList_invokeOnIvarAccessQueue:
_removeLayer:
_removeLayer:videoLayer:closedCaptionLayer:subtitleLayer:interstitialLayer:
_removeLegibleOutput:
_removeListenersFromInterstitialCoordinator:
_removeMediaOptionsSelectedByClient
_removeMetadataCollector:
_removeMetadataCollector:locked:
_removeMetadataOutput:
_removeMonitorListeners
_removeParticipantStateWithIdentifier:
_removePropertyObserversOfCurrentItemCalledOnStateDispatchQueueChecked:
_removeSelfFromPlayerItem:
_removeSyncLayer:
_removeTimebaseFromTimerSource
_removeTimebaseObserverForRenderer:
_removeUnusedTransportControlStates
_removeUserInfoObject
_removeVideoOutput:
_renderContext
_renderScale
_renderTransform
_rendererConfigurationIsValid:
_renderingSuppressionDidChangeForOutput:
_renditionSpecificAttributesForMediaSelection
_renewKeyWithIdentifier:encryptionMode:error:
_renewalDate
_rentalExpirationDate
_rentalPlaybackExpirationDate
_rentalPlaybackStarted
_rentalPlaybackStartedDate
_rentalStartDate
_replaceParticipantStates:
_replaceQuickTimeUserDataKeySpaceWithISOUserDataKeySpaceIfRequired:
_replacementFormatDescription
_representsNilSelection
_request
_requestBlock
_requestID
_requestIDToDownload
_requestInFlight
_requestInfo
_requestMediaDataIfReady
_requestQueue
_requestWithRequestID:
_requestor
_requests
_requiredSourceTrackIDs
_requiresFlushToResumeDecoding
_requiresInProcessOperation
_resetLastImageTime
_resetNextFireTime
_resetStatusWithOSStatus:
_resourceLoaderWithRemoteHandlerContext:
_respondToBecomingReadyForBasicInspection
_respondToBecomingReadyForBasicInspectionWithDuration:
_respondToFigPlaybackItemBecomingReadyForInpection
_respondToPlayerItemFormatDescriptionsChange
_restoreClientLayers:intoMaskLayer:
_resumePlayback:error:
_retainInterstitialCoordinatorIfCreated
_retainedFigAssetWriter
_routeDetectorInternal
_runLoop
_runLoopStateList
_runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:modificationBlock:error:
_sampleBufferSourcesByTrackID
_sampleBufferVideoRenderer
_sampleCursor
_sampleCursorTimeAccuracyIsExact
_sampleGenerator
_sampleGeneratorBatch
_sampleReferenceBaseURL
_sampleReferenceOutputInternal
_samplesBeforeReady
_samplesBeforeReadyTotalDuration
_samplesBeforeReadyTotalSize
_saveCommChannel:forUUID:
_scaledSizeForRenderSize:
_scheduleTimedRendererRemovalAtTime:atTime:withClientCompletionHandler:
_scheduledParametersInternal
_screenInfo
_secondaryImpl
_securityScopedURLWrapper
_seekToTime:toleranceBefore:toleranceAfter:seekID:completionHandler:
_seekableTimeRanges
_seekableTimeRangesFromFPSeekableTimeIntervals:
_segmentType
_segmentsForProperty:
_selectMediaOption:inMediaSelectionGroup:
_selectedMediaArray
_selectorForInformingDelegateOfCancellationByFig
_sendAuthResponseForChallenge:disposition:credential:error:
_sendDataToCustomURLHandler:
_sendDidFinishDownloadForMediaSelectionWithMediaSelection:
_sendDidResolveMediaSelectionWithMediaSelection:
_sendDownloadFailureToDelegateWithError:
_sendDownloadSuccessToDelegate
_sendFinishLoadingForPreloadedKeyRequest:withRequestID:fromHandler:error:
_sendFinishLoadingToCustomURLHandler
_sendFinishLoadingToCustomURLHandlerWithError:
_sendLoadedTimeRangesChangedToDelegateWithNewlyLoadedTimeRange:currentLoadedTimeRanges:timeRangeExpectedToLoad:selectedMediaArray:
_sendProgessUpdateWithExpectedBytesToDownload:bytesDownloaded:
_sendResponseInfoToCustomURLHandler
_sendResponseInfoToCustomURLHandlerWithRenewalDate:
_sendWillDownloadVariants:
_sequenceNum
_serialQueue
_serializableCreationOptions
_serializableInstructions
_serializableRepresentation
_serializationDataType
_serializationQueue
_serializeIntoDownloadConfig:asset:
_serializeIntoDownloadConfig:environmentalCondition:
_serverDied
_session
_sessionID
_sessionKeyRequest
_setActionAtItemEnd:allowingAdvance:
_setAlternateGroupID:
_setAncillaryPerformanceInformationForDisplay:
_setArrayEnumerator:
_setAsset:
_setAssetInspectorLoader:
_setAssetToAssetWithFigPlaybackItemIfAppropriate
_setAttachedAdaptor:
_setAudibleDRMInfo:
_setAudioCurvesAccordingToInputParameters:forTrackID:
_setAudioEffectParameters:forTrackID:
_setAudioTapProcessor:forTrackID:
_setAudioTimePitchAlgorithm:forTrack:
_setAudioTimePitchAlgorithm:forTrackID:
_setAudioVolumeCurve:forTrack:
_setAuthorizationToken:forIdentifier:error:
_setCALayerDestinationIsTVOut:
_setClientPriority:
_setContentInformationRequest:
_setContentKeyRequest:forCryptorUUID:cryptorKeyRequestID:
_setContentKeySessionCustomURLHandler:
_setContentLayerOnFigVideoQueue:
_setCreateVideoQueueFailedWithOSStatus:
_setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:selector:
_setCropRectangleRamps:
_setCurrentItem:
_setCurrentMediaSelection:
_setDataRequest:
_setDelegateOnStateQueue:
_setDelegateViaWeakReference:
_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:
_setDisplaysUsedForPlayback:
_setEQPreset:
_setEnsuresActiveAudioSessionWhenStartingPlayback:
_setError:
_setExternalProtectionRequiredForPlayback:
_setExtractionID:
_setFigAssetReader:
_setFigPlaybackItem:
_setFigPlaybackItemToMakeCurrent:
_setFileFigAsset:
_setFormatReader:
_setFragmentMindingInterval:
_setFrameDurationForFrameRate:sourceTrackIDForFrameTiming:
_setHelper:
_setHelper:ifCurrentHelper:
_setHelper:ifCurrentHelper:withBlock:
_setHostApplicationInForeground:
_setInterstitialEventCoordinator:
_setInterstitialEventCoordinator_invokeOnIvarAccessQueue:
_setInterstitialPlayer:
_setInterstitialPlayerGuts_invokeOnIvarAccessQueue:
_setInvalidatePending
_setIsAssociatedWithFragmentMinder:
_setIsConnectedToSecondScreen:
_setIsInExpanseMediaPlaybackOnAVAudioSession
_setIsInterstitialPlayer:
_setIsPartOfForegroundScene:
_setKey:
_setKeySpace:
_setLimitsBandwidthForCellularAccess:
_setLocalParticipantUUID:onFigPlaybackCoordinator:
_setLocale:
_setLoggingIdentifier:
_setMediaOptionsSelectedByClient:forKey:
_setMediumCallbacksOnFigPlaybackCoordinator:
_setMetadataReader:
_setMindingInterval:removeAllAssets:
_setNaturalSize:
_setOpacityRampFromStartOpacity:toEndOpacity:timeRange:selector:
_setOpacityRamps:
_setOptions:onClosedCaptionLayer:
_setOutputObscuredDueToInsufficientExternalProtection:
_setPausesAudioVisualPlaybackInBackground:
_setPendingFigPlayerProperty:forKey:
_setPlaybackCoordinator:
_setPlaybackItem:
_setPlayer:forPIP:
_setPolicyDictionary:
_setPreferredLanguageList:
_setPreservesAudioSessionSampleRate:
_setPreventsChangesToSublayerHierarchy:
_setPreventsSleepDuringVideoPlayback:
_setPrimaryPlayerNameForInterstitial:
_setProvisionalAlternateGroupID:
_setRampInOutInfo:
_setRamps:
_setRate:rateChangeReason:figPlayerSetRateHandler:
_setRate:time:atHostTime:
_setRate:withVolumeRampDuration:playImmediately:rateChangeReason:affectsCoordinatedPlayback:
_setReadSingleSample:
_setRequiresFlushToResumeDecoding:
_setSTSLabel:
_setScheduledAudioParameters:
_setSeparated:onClosedCaptionLayer:
_setShowInterstitialInstead:
_setShowInterstitialInstead:afterDelay:
_setSilencesOtherPlaybackDuringPIP:
_setSize:forProperty:
_setSourcePixelBufferAttributes:
_setStatus:
_setStatus:cancellationReason:
_setStatus:error:
_setStatus:error:resultingStatus:failureReason:
_setStatus:figErrorCode:
_setStoppingFadeOutDuration:
_setString:forProperty:
_setSublayersForPIP:
_setSublayersPreventChangesToSublayerHierarchy:
_setSuppressesAudioRendering:
_setSuppressesVideoLayers:
_setTagBuffersWithConversionInformation
_setTemplatePlayerItem:
_setTimeJumpedNotificationIncludesExtendedDiagnosticPayload:
_setTimebase:
_setTimedMetadata:
_setTrackID:
_setTrackReaderPropertyValue:forKey:
_setTransformRampFromStartTransform:toEndTransform:timeRange:selector:
_setTransformRamps:
_setURL:
_setURLAssetInitializationOptions:error:
_setUpcomingPresentationTimeExpectations:minimumPresentationTime:
_setUserInfoObject:
_setUsesLegacyAutomaticWaitingBehavior:
_setValueStatus:figErrorCode:
_setValuesFromDictionary:
_setValuesFromDictionary:timeRange:
_setVideoComposition:
_setVideoComposition:customVideoCompositorSession:
_setVideoCompositionColorPrimaries:
_setVideoCompositionColorTransferFunction:
_setVideoCompositionColorYCbCrMatrix:
_setVideoCompositionFrameDuration:
_setVideoCompositionInstructions:
_setVideoCompositionRenderScale:
_setVideoCompositionSourceSampleDataTrackIDs:
_setVideoCompositionSourceTrackIDForFrameTiming:
_setVideoCompositor:
_setVolume:atTime:
_setVolumeRampFromStartVolume:toEndVolume:timeRange:rampMode:
_setWaitingPolicies:
_setWaitingPolicies:onFigPlaybackCoordinator:
_setWantsVolumeChangesWhenPausedOrInactive:
_setWeakReferenceForContentKeyRequest:withCryptorUUID:
_setWeakReferenceToDelegate:
_setWillManageSublayersAsSwappedLayers:
_setupContentConfigWithDownloadConfig:asset:
_setupFigCallbacks
_setupFigClientObjectAsync:
_setupFigClientObjectForFileDownload:
_setupFigClientObjectForStreaming:
_setupLoopingReturningError:
_shouldBufferInAnticipationOfPlayback
_shouldCacheDuration
_shouldCancelAllRequests
_shouldDetachVideoLayersFromFigPlayer
_shouldInformDelegateOfFigCancellation
_shouldLogPerformanceData
_shouldOptimizeAccessForLinearMoviePlayback
_shouldOptimizeForNetworkUse
_shouldPause
_showCompleteURI
_showHud
_showInterstitialInstead
_signalFlush
_signalMetadataUpdated
_signalMonitoringIsFinishedIfNeeded
_signalRunLoopWithState:
_signalSource
_signalTracksUpdated
_signaled
_singlePassFileSize
_singlePassMediaDataSize
_sink
_size
_sizeForProperty:
_sizeForProperty:defaultValue:
_snapTimeToPausePlayback
_sourceCIImage
_sourceFormatDescription
_sourceFormatHint
_sourcePBuf
_sourcePixelBufferAttributes
_sourceSampleBufferTrackIDsInClientOrder
_sourceTrackIDsInClientOrder
_sourceTrackPreferredTransform
_sourcesByTrackID
_spatialDiagnostics
_specifiedLoggingIdentifier
_startCompositionTime
_startListeningToFigAssetTrackNotifications
_startListeningToLoaderNotifications
_startLoadingMetadataOnQueue
_startObservingInputPropertiesThatMayChangeValueOfOptions
_startObservingPlayer:
_startObservingPropertiesOfCurrentItem:
_startObservingReadyForMoreMediaDataKeyPath
_startObservingSecondLevelPropertyOnNewCurrentValueForTopLevelDependencyProperty:
_startObservingTimebaseNotifications
_startObservingTimebaseNotificationsForTimebase:
_startOnQueue
_startOnQueueFirstTime
_startSessionCalled
_started
_startedUsingInternalContentKeySession
_stashClientLayers
_stateDispatchQueue
_stateMutex
_stateQueue
_statusOfValueForKey:error:firstNonLoadedDependencyKey:
_statusOfValueForKeyReturnsLoaded
_statusOfValueForKeyThatIsAlwaysLoaded
_statusOfValueWhileMutexLockedForKey:error:
_statusOfValuesIsTerminalWhileMutexLockedForKeys:
_stopListeningToFigAssetTrackNotifications
_stopListeningToLoaderNotifications
_stopObservingInputPropertiesThatMayChangeValueOfOptions
_stopObservingPlayer:
_stopObservingPropertiesOfCurrentItem:
_stopObservingReadyForMoreMediaDataKeyPath
_stopObservingTimebaseNotifications
_stopObservingTimebaseNotificationsForTimebase:
_stoppedResponding
_storageManagementPolicy
_storageURL
_storeObserver:clientCompletionHandler:forRenderer:
_streamingUTTypes
_stringForProperty:
_subObjectRegistrationQueue
_sublayersForPIP
_subsequentEndCompositionTime
_subtitleFormatDescriptionMatchesTextDisplayFlags:flagsMask:
_subtitleLayer
_supportsSampleReferences
_supportsSampleReferencesOnce
_supportsSampleReferencesReturningError:
_suppressesAudioRendering
_suppressesVideoLayers
_suppressionForOutputs:
_suspensionReasons
_suspensionReasonsThatTriggerWaiting
_suspensionsChangedNotificationToken
_swapSublayersBetweenPlayerLayer:andPlayerLayer:
_sweepFilterAudioEffect
_syncLayer
_synchronizeFigPlayerEvents
_synchronizeWithNewCurrentItem
_synchronizerInternal
_synthesizeMediaCharacteristicsOnce
_taggedCharacteristics
_taggedMediaCharacteristics
_taggedRangeMetadataDictionary
_taskToRequest
_tearDownFigAssetReader
_teardownNotificationHandlers
_tellAssetWriterToTransitionToFailedStatusWithError:
_templateItems
_terminalError
_testFlag
_textStyleRule
_threadSafetyQ
_throwsWhenAlreadyMindedAssetIsAdded
_time
_timeControlStatus
_timeForProperty:
_timeForProperty:defaultValue:
_timeJumpedNotificationIncludesExtendedDiagnosticPayload
_timeMapping
_timeRange
_timeRangeForProperty:
_timeToPauseBuffering
_timeToPausePlayback
_timebase
_timedMetadataGroupInternal
_timelineControlQueue
_timerQueue
_timerSource
_times
_title
_token
_tollFreeBridgedObjectForProperty:
_topLevelKey
_totalExpectedRequestCount
_totalFrameDrops
_totalStallCount
_totalStalls
_track
_trackDecryptorsByTrackID
_trackDictsByTrackID
_trackFormatDescriptions
_trackFormatDescriptionsByTrackID
_trackID
_trackIDs
_trackIDsNotProvidingMedia
_trackOutputInternal
_trackReader
_trackReferences
_trackReports
_trackWithTrackID:
_tracksBecomingReadyByTrackID
_tracksDidChange
_tracksFromAssetTrackIDs
_tracksOnce
_tracksWithClass:
_tracksWithFPTrackIDArray:fromFigPlaybackItem:
_transferActiveHapticChannelIndexToFig
_transferDisableColorMatchingToFig
_transferEnabledToFig
_transferHapticVolumeToFig
_transferLoudnessInfoToFig
_transferVideoEnhancementOptionsToFig
_transform
_transitionToClientInitiatedTerminalStatus:
_transitionToFailedStatusWithError:
_transitionToFailedStatusWithOSStatus:
_transitionToFinishWritingHelperWithFinishWritingOperations:
_transitionToStatus:error:
_transitionToStatus:failureError:
_transitionToTerminalStatus:
_transitionToTerminalStatus:error:
_transitionToTerminalStatusOperation
_transportControlStateForItemIdentifier:
_triggerFakeNotificationNamed:withPayload:
_triggerMediaRequestCallback
_trimsSampleDurations
_tryToMarkAsCancelled
_typeIdOfInitialFigManifold
_uninitializeProtectedContentPlaybackSupportSession:
_uninstallNotificationHandlers
_uniqueIDForCyptorUUID:cryptorKeyRequestID:
_unregisterAndReturnRetainedPrerollCompletionHandler
_unregisterForFigManifoldCallbacksForTrackID:
_unregisterForObjectNotifications
_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:finished:
_unregisterRequestForDataTask:
_unsafeUnretainedObject
_unstashClientLayers
_upcomingPTSExpectation
_updateAdvanceTimeForOverlappedPlaybackOnFigPlaybackItem
_updateAggressivelyCachesVideoFramesOnFigPlaybackItem
_updateAllowedAudioSpatializationFormats
_updateAllowedAudioSpatializationFormatsFromFigItem
_updateAlwaysMonitorsPlayabilityOnFigPlaybackItem
_updateAppliesPerFrameHDRDisplayMetadataOnFigPlaybackItem
_updateAudioSpatializationAllowed
_updateAudioTapProcessorOnFigPlaybackItem
_updateAutoSwitchAtmosStreamVariantsOnFigPlaybackItem
_updateAutomaticallyWaitsToMinimizeStallingOnFigPlayer
_updateBlendsVideoFramesOnFigPlaybackItem
_updateCanPlayAndCanStepPropertiesWhenReadyToPlayWithNotificationPayload:updateStatusToReadyToPlay:
_updateCanUseNetworkResourcesForLiveStreamingWhilePausedOnFigPlaybackItem
_updateClosedCaptionLayerBounds:videoRelativeToViewport:captionsAvoidanceMargins:
_updateCommonKey
_updateConfiguredTimeOffsetFromLiveOnFigPlaybackItem
_updateContinuesPlayingDuringPrerollForRateChangeOnFigPlaybackItem
_updateContinuesPlayingDuringPrerollForSeekOnFigPlaybackItem
_updateCurrentItemPreferredPixelBufferAttributesAndVideoLayerSuppression
_updateDecoderPixelBufferAttributes:onFigPlayer:
_updateDecodesAllFramesDuringOrdinaryPlaybackOnFigPlaybackItem
_updateDisplayNameWithLocale:fallingBackToMatchingUndeterminedAndMultilingual:context:
_updateFigTimePitchAlgorithmOnFigPlaybackItem
_updateForwardPlaybackEndTimeOnFigPlaybackItem
_updateIFramePrefetchTargetDimensionsOnFigPlaybackItem
_updateIdentifier
_updateImageQueueInterpolationCurveOnFigPlaybackItem
_updateIsPartOfForegroundScene
_updateItemIdentifierForCoordinatedPlayback
_updateLanguageInformationFromExtendedLanguageTag:
_updateLanguageInformationFromLocale:
_updateLayerTreeGeometryWithVideoGravity:presentationSize:videoGravityShouldTriggerAnimation:
_updateLegibleSuppressionOnFigPlaybackItem:basedOnOutputs:
_updateLimitReadAheadOnFigPlaybackItem
_updateLoopTimeRangeOnFigPlaybackItem
_updateLoudnessInfoOnFigPlaybackItem
_updateMaximumForwardBufferDurationOnFigPlaybackItem
_updateMaximumTrailingBufferDurationOnFigPlaybackItem
_updateMediaKindOnFigPlaybackItem
_updateMinimumIntervalForIFrameOnlyPlaybackOnFigPlaybackItem
_updateMultipleRoutesDetected
_updateNonForcedSubtitleDisplayEnabledOnFigPlaybackItem
_updateOtherParticipantsUsingFigParticipantUUIDs:
_updateParticipantStateDictionaryWithParticipantState:
_updatePixelBufferAttributesForLayer:
_updatePlaybackLikelyToKeepUpTriggerOnFigPlaybackItem
_updatePlaybackPropertiesOnFigPlaybackItem
_updatePlayerItemState
_updatePreferredMaximumAudioSampleRateOnFigPlaybackItem
_updatePreferredMaximumResolutionForExpensiveNetworksOnFigPlaybackItem
_updatePreferredMaximumResolutionOnFigPlaybackItem
_updatePreferredMinimumResolutionOnFigPlaybackItem
_updatePreferredPeakBitRateForExpensiveNetworksOnFigPlaybackItem
_updatePreferredPeakBitRateOnFigPlaybackItem
_updatePresentationSize:
_updatePreservesTimeOffsetFromLive
_updateProxyTimebaseFromNewCurrentItem
_updateRTCReportingFlagsOnFigPlaybackItem
_updateRateFromTimebase
_updateReadyForDisplayForPlayerCurrentItem
_updateRefreshesClosedCaptionsImmediatelyAfterSeekingOnFigPlaybackItem
_updateRestrictionsOnFigPlaybackItem
_updateRestrictsAutomaticMediaSelectionToAvailableOfflineOptions
_updateReversePlaybackEndTimeOnFigPlaybackItem
_updateReversesMoreVideoFramesInMemoryOnFigPlaybackItem
_updateRouteDetectionEnabled
_updateSeekingWaitsForVideoCompositionRenderingOnFigPlaybackItem
_updateSnapTimeToPausePlaybackOnFigPlaybackItem
_updateSoundCheckVolumeNormalizationOnFigPlaybackItem
_updateSpeedThresholdForIFrameOnlyPlaybackOnFigPlaybackItem
_updateStartsOnFirstEligibleVariantOnFigPlaybackItem
_updateStatusWhileMutexLocked:figErrorCode:
_updateSuspensionReasons:
_updateTaggedMetadataArray:
_updateTaggedRangeMetadataArray:
_updateTextHighlightArrayOnFigPlaybackItem
_updateTextStyleRulesOnFigPlaybackItem
_updateTimeRangesOnFigAssetReaderReturningError:
_updateTimeToPauseBufferingOnFigPlaybackItem
_updateTimeToPausePlaybackOnFigPlaybackItem
_updateTrackAssociationToTrack:type:operation:
_updateTrackExtractionIDArrayProperty
_updateTransportControlStateDictionaryWithTransportControlState:
_updateUISettings
_updateUXMWithDisplayCriteria:
_updateUXMWithDisplayCriteriaWithLock:
_updateUsesIFrameOnlyPlaybackForHighRateScaledEditsOnFigPlaybackItem
_updateUsesMinimalLatencyForVideoCompositionRenderingOnFigPlaybackItem
_updateVariantPreferencesOnFigPlaybackItem
_updateVideoApertureModeOnFigPlaybackItem
_updateVideoEnhancementModeOnFigPlaybackItem
_updateVideoOutputs
_updateVideoSuppressionOnFigPlaybackItem:basedOnOutputs:
_updateVideoTargetOnFigPlayer
_updateVolumeAdjustmentOnFigPlaybackItem
_updateWaitingPoliciesArrayWithPolicies:
_updateWillNeverSeekBackwardsHintOnFigPlaybackItem
_updatedFrecentsList
_upstream
_useContentKeyBoss
_userVolume
_usesLegacyAutomaticWaitingBehavior
_usesVirtualCaptureCard
_uti
_validValuesForScalingMode
_validateHLSEncryptionMethod:
_validateLanguageCode:
_validateOutputSettingsDictionary:compatibilityDescription:
_validatePredicate:error:
_validateProtocolVersionList:
_validateRequiredPixelBufferAttributesForRenderContext:andReturnException:
_validateServerChallenge:
_validateSourcePixelBufferAttributes:andReturnException:
_validateVideoCompressionProperties:againstSupportedPropertyDictionary:forCodecType:exceptionReason:
_validatedGroupIdentifierKey:
_valueAsCFTypeForProperty:
_valueForKeyDependsOnMetadataValue:
_valueFromCFType:
_valueRequest
_valueRequestDidFinish
_valueStatus
_variant
_variantIndex
_variantQualifiers
_verifyDownloadConfigurationForAssetType
_videoApproximateDisplaySizeHeight
_videoApproximateDisplaySizeWidth
_videoAttributes
_videoComposition
_videoCompositionDidChange
_videoCompositionProcessorColorProperties
_videoCompositionQ
_videoCompositionTool
_videoGravity
_videoLayer
_videoLayers
_videoOutput
_videoOutputInternal
_videoOutputSettingsWithVideoSettingsDictionary:exceptionReason:
_videoOutputs
_videoQueue
_videoQueueQueue
_videoRange
_videoRectForBounds:
_videoRendererForRenderer:
_videoSettingWithSize:
_visualContext
_volumeChangedForGroupWithID:
_volumeControlSupportedDidChangeForEndpointWithID:
_volumeControlTypeChangedForGroupWithID:
_volumeControlTypeDidChangeForEndpointWithID:
_volumeCurveAsString
_volumeDidChangeForEndpointWithID:
_waitForLoadingOfValueDependentKey:
_waitInMode:untilDate:
_waitUntilFinishedIfNeeded
_waitingPoliciesArray
_weakContentKeyBoss
_weakContentKeySession
_weakDisplayLayer
_weakObserver
_weakPlayer
_weakReference
_weakReferenceToAsset
_weakReferenceToAssetReader
_weakReferenceToAssetWriter
_weakReferenceToAssetWriterInput
_weakReferenceToDelegate
_weakReferenceToDependencyHost
_weakReferenceToGroup
_weakReferenceToListener
_weakReferenceToMonitoringObject
_weakReferenceToObject
_weakReferenceToParser
_weakReferenceToPlayerItem
_weakReferenceToResourceLoader
_weakReferenceToSelf
_weakReferenceToSynchronizer
_weakSelf
_weakStorage
_web_errorWithDomain:code:URL:
_width
_willDeallocOrFinalize
_willEnterForeground:
_willManageSublayersAsSwappedLayers
_willSendRequest:request:redirectionResponse:
_windowSceneDidEnterBackground
_windowSceneWillEnterForeground:
_windowWithContextId:
_writingHelper
aboveHighWaterLevel
absoluteString
absoluteURL
acceptVisitor:flags:
accessLog
accessSerializer
accumulatedMetadataGroups
accumulationQueue
acquireWithError:
actionForKey:
activate
activateBackground:
activationContext
activeHapticChannelIndex
activeHapticChannelIndexWasSet
activeMode
addAnimation:forKey:
addAnimations:forKey:
addBoundaryTimeObserverForTimes:queue:usingBlock:
addCallbackToCancel:
addCallbackToCancelDuringDeallocation:
addContentKeyRecipient:
addDependency:
addEntriesFromDictionary:
addExtractionForOutput:figAssetReader:options:withOutputExtactionID:
addFragmentedAsset:
addFragmentedMovie:
addIdentifier:toWhitelistDictionary:
addIndex:
addIndexes:
addInput:
addInputGroup:
addItemToPlayQueueAfterPlaybackItemOfItem:
addKeySpace:key:toWhitelistDictionary:
addListenerWithWeakReference:callback:name:object:flags:
addMediaDataCollector:
addMediaDataCollector:locked:
addMutableTrackWithMediaType:copySettingsFromTrack:options:
addMutableTrackWithMediaType:preferredTrackID:
addMutableTracksCopyingSettingsFromTracks:options:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addObserverForName:object:queue:usingBlock:
addOperation:
addOperations:waitUntilFinished:
addOutput:
addOutputDevice:
addOutputDevice:options:completionHandler:
addOutputDevice:withOptions:completionHandler:
addPeriodicTimeObserverForInterval:queue:usingBlock:
addPixelBuffer:atPresentationTime:error:
addRenderer:
addRequest:
addSampleBuffer:error:
addSampleBufferDisplayLayer:
addSharedAudioOutputContext
addSublayer:
addTrackAssociationToTrack:type:
addTrackAssociationWithTrackOfInput:type:
advanceIntervalForDataAvailability
advanceIntervalForDelegateInvocation
advanceTimeForOverlappedPlayback
advanceTimeForOverlappedPlaybackWasSet
advanceToNextItem
advanceWakeUpInterval
advanceWakeUpIntervalIsValid
afterItem
aggressivelyCachesVideoFrames
aggressivelyCachesVideoFramesWasSet
airPlayProperties
airPlayVideoActive
airPlayVideoPlaying
alignsResumptionWithPrimarySegmentBoundary
alignsStartWithPrimarySegmentBoundary
allDevices
allExportPresets
allFileTypeIdentifiers
allHTTPHeaderFields
allKeysForObject:
allLikelyDestinations
allMediaSelections
allObjects
allSharedAudioOutputContextImpls
allSharedAudioOutputContexts
allValues
allocWithZone:
allowProgressiveResume
allowProgressiveStartup
allowProgressiveSwitchUp
allowWideColor
allowableMIMETypes
allowedAudioSpatializationFormats
allowedAudioSpatializationFormatsWasSet
allowedContentTypes
allowsAirPlayVideo
allowsEmptySelection
allowsExtendedReadAhead
allowsExternalPlayback
allowsHeadTrackedSpatialAudio
allowsKeyedCoding
allowsLegibleFallbackForAllAudibleMediaSelections
allowsOutOfBandTextTrackRendering
allowsPixelBufferPoolSharing
alternateGroupID
alternateTrackGroups
alwaysCopiesSampleData
alwaysMonitorsPlayability
anchorChapterType
ancillaryPerformanceInformationForDisplay
animation
animationForKey:
animationKeys
animationLayer
animationTool
animationWithKeyPath:
animations
anticipateRenderingUsingHint:
anticipatedPlaybackRate
apertureMode
appendData:
appendFailureReadWriteQueue
appendFormat:
appendMediaData:dataOffset:
appendPixelBuffer:withPresentationTime:
appendSampleBuffer:
appendSampleBuffer:decodeTime:presentationTime:error:
appendSampleBuffer:error:
appendStreamData:
appendStreamData:withFlags:
appendString:
appendTimedMetadataGroup:
appleAccessory
applicableOutputSampleRateForDesiredSampleRate:rounding:
applicationAuthorizedForPlayback
applicationPID
applicationPIDWasSet
applicationProcessID
appliesMediaSelectionCriteriaAutomatically
appliesPerFrameHDRDisplayMetadata
appliesPerFrameHDRDisplayMetadataWasSet
appliesPreferredTrackTransform
applyFigPauseSnapsToMediaTimeOfOriginator
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayByApplyingDifference:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
artworkData
asset
assetAnalysisMessages
assetCache
assetCacheForHTTPLiveStreamingWithURL:
assetCacheForProgressiveDownloadAndHTTPLiveStreamingWithURL:
assetCacheForProgressiveDownloadWithURL:
assetCacheInspector
assetCacheWithURL:
assetComparisonToken
assetDownloadSession:didFailWithError:
assetDownloadSession:didFinishDownloadForMediaSelection:
assetDownloadSession:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
assetDownloadSession:didResolveMediaSelection:
assetDownloadSession:didUpdateProgressWithExpectedBytes:bytesDownloaded:
assetDownloadSession:willDownloadVariants:
assetDownloadSessionDidFinishDownload:
assetDownloadSessionWithAsset:destinationURL:options:
assetDownloadSessionWithAsset:mediaSelections:destinationURL:options:
assetDownloadSessionWithDownloadToken:
assetDownloadSessionWithURL:destinationURL:options:
assetImageGeneratorWithAsset:
assetInitializationOptions
assetInspector
assetInspectorInitializationOnce
assetInspectorLoader
assetListResponse
assetPlaybackAssistantWithAsset:
assetProxyWithPropertyList:
assetReaderAudioMixOutputWithAudioTracks:audioSettings:
assetReaderOutputMetadataAdaptorWithAssetReaderTrackOutput:
assetReaderSampleReferenceOutputWithTrack:
assetReaderTrackOutput
assetReaderTrackOutputWithTrack:outputSettings:
assetReaderWithAsset:error:
assetTrack
assetTrackInspectorWithAsset:trackID:trackIndex:
assetTypeLoadingStatus
assetURLsReturningError:
assetVariantQualifierWithPredicate:
assetVariantQualifierWithVariant:
assetWeakReference
assetWithData:contentType:options:
assetWithFigPlaybackItem
assetWithURL:
assetWithURL:figPlaybackItem:trackIDs:dynamicBehavior:
assetWriter:didOutputSegmentData:segmentType:
assetWriter:didOutputSegmentData:segmentType:segmentReport:
assetWriter:didProduceFragmentedHeaderData:
assetWriter:didProduceFragmentedMediaData:fragmentedMediaDataReport:
assetWriterInput
assetWriterInput:shouldReplaceFormatDescription:replacementFormatDescription:
assetWriterInputGroupWithInputs:defaultInput:
assetWriterInputMetadataAdaptorWithAssetWriterInput:
assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:
assetWriterInputSelectionOptionWithAssetWriterInput:
assetWriterInputSelectionOptionWithAssetWriterInput:displaysNonForcedSubtitles:
assetWriterInputWithMediaType:outputSettings:
assetWriterInputWithMediaType:outputSettings:sourceFormatHint:
assetWriterTrack
assetWriterTrackWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:attachedAdaptor:error:
assetWriterWithURL:fileType:error:
assets
associateContentKeyRequest:
associatedExtendedLanguageTag
associatedInputsWithTrackAssociationType:
associatedMediaSelectionOptionInMediaSelectionGroup:
associatedPersistentIDs
associatedRemoteModeLayer
associatedTracksOfType:
associatedUnicodeLanguageIdentifier
associatedWithFragmentMinder
attachDepartureAnnouncingObjectMonitorToObject:monitoringObject:
attachToContentKeySession:contentKeyBoss:failedSinceAlreadyAttachedToAnotherSession:
attachedToAdaptor
attachedToExternalContentKeySession
attributeWithDomain:name:
audibleDRMInfo
audioAlternatesTrackGroup
audioConverterPropertiesForAudioSettingsDictionary:
audioMix
audioMixInputParameters
audioMixInputParametersForTrackID:
audioMixInputParametersWithAssetTrack:introFadeDuration:fadeOutStart:fadeOutDuration:
audioMixInputParametersWithTrack:
audioOptions
audioOutputDeviceUniqueID
audioOutputSettings
audioOutputSettingsWithAudioSettingsDictionary:
audioOutputSettingsWithTrustedAudioSettingsDictionary:
audioPlaybackEnabledAtAllRates
audioProcessingTap
audioSession
audioSessionMediaPlayerOnly
audioSettings
audioSettingsDictionary
audioSpatializationAllowed
audioSpatializationAllowedWasSet
audioSpatializationMode
audioTapProcessor
audioTapProcessorsForTracks
audioTimePitchAlgorithm
audioTimePitchAlgorithmsForTracks
audioTrackGroupHandling
audioTracks
audioVolumeCurvesForTracks
audiovisualBackgroundPlaybackPolicy
audiovisualMIMETypes
audiovisualTypes
authHandler
authHandlerObjectID
authorizationRequiredForPlayback
authorizationTokenType
autoSwitchAtmosStreamVariants
autoSwitchStreamVariants
automaticallyAllowsConnectionsFromPeersInHomeGroup
automaticallyHandlesInterstitialEvents
automaticallyLoadedAssetKeys
automaticallyNotifiesObserversForKey:
automaticallyNotifiesObserversOfAirPlayVideoActive
automaticallyNotifiesObserversOfAllowProgressiveResume
automaticallyNotifiesObserversOfAllowProgressiveStartup
automaticallyNotifiesObserversOfAllowProgressiveSwitchUp
automaticallyNotifiesObserversOfAsset
automaticallyNotifiesObserversOfAutoSwitchStreamVariants
automaticallyNotifiesObserversOfCurrentItem
automaticallyNotifiesObserversOfExternalPlaybackActive
automaticallyNotifiesObserversOfHasEnabledAudio
automaticallyNotifiesObserversOfHasEnabledVideo
automaticallyNotifiesObserversOfLoadedTimeRanges
automaticallyNotifiesObserversOfPlaybackBufferEmpty
automaticallyNotifiesObserversOfPlaybackBufferFull
automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp
automaticallyNotifiesObserversOfPresentationSize
automaticallyNotifiesObserversOfRate
automaticallyNotifiesObserversOfSavesDownloadedDataToDiskWhenDone
automaticallyNotifiesObserversOfSeekableTimeRanges
automaticallyNotifiesObserversOfStatus
automaticallyNotifiesObserversOfTracks
automaticallyNotifiesObserversOfUserVolume
automaticallyNotifiesObserversOfUsesAirPlayVideoWhileAirPlayScreenIsActive
automaticallyNotifiesObserversOfUsesAudioOnlyModeForExternalPlayback
automaticallyNotifiesObserversOfUsesLegacyAutomaticWaitingBehavior
automaticallyNotifiesObserversOfUsesMinimalLatencyForVideoCompositionRendering
automaticallyNotifiesObserversOfVariantIndex
automaticallyNotifiesObserversOfVibrationPattern
automaticallyPreservesTimeOffsetFromLive
automaticallyWaitsToMinimizeStalling
autorelease
auxiliaryContentConfigurations
auxiliaryOutputContext
auxiliaryTrackID
auxiliaryTrackLayerSetLast
avPlayerLayers
availableBluetoothListeningModes
availableCanonicalizedChapterLanguages
availableChapterLanguages
availableChapterLocales
availableFileSize
availableHDRModes
availableMediaCharacteristicsWithMediaSelectionOptions
availableMediaTypes
availableMetadataFormats
availableOutputChannelCountForDesiredChannelCount:rounding:
availableOutputDeviceGroups
availableOutputDevices
availableOutputDevicesObject
availableOutputSettingsPresets
availableTrackAssociationTypes
availableVideoDynamicRanges
averageAudioBitrate
averageBitRate
averageBitRateForSourceFormatDescription:andTargetFrameRate:andEncoderSpecification:
averageNonDroppableFrameIntervalIsSupportedByDefaultEncoderForVideoCodec:
averageVideoBitrate
avfParticipantsForFigParticipantsUUIDs:
backingSBuf
baseAudioSettings
baseSettingsProvider
baseSettingsProviderForPreset:
baseVideoSettings
batteryLevel
begin
beginDate
beginInterruption
beginInterruptionFromInterruptor:
beginPassIfAppropriate
beginPassReturningError:
beginSuspensionForReason:
blendingTransferFunction
blendsVideoFrames
blendsVideoFramesWasSet
blockOperationWithBlock:
boolValue
borrowScreenForClient:reason:
bounds
bridge
bridgeBetweenHandlerAndSession
broadcast
builtInCompositorName
bundleIdentifier
bundleWithIdentifier:
byteRangeAccessSupported
bytes
cacheKey
cachePrimingDownloadTokenNum
cachedContentInformation
cachedData
cachedDateFormatterFormat
cachedDateFormatterTemplate
cachedFigLegibleFallbackMediaSelectionCriteriaProperty
cachedFigMediaSelectionCriteriaProperty
cachedTracks
callbackContextForToken:
callbackDidFireWithChangeDictionary:
canAccessAppleMusic
canAccessRemoteAssets
canAccessiCloudMusicLibrary
canAddInput:
canAddInputGroup:
canAddOutput:
canAddTrackAssociationWithTrackOfInput:type:
canApplyOutputSettings:forMediaType:
canBeConvertedToEncoding:
canBeGroupLeader
canBeGrouped
canCommunicateWithAllLogicalDeviceMembers
canConformColorOfSourceFrames
canContainFragments
canContainMovieFragments
canFetchMediaDataFromSender
canFullySpecifyOutputFormatReturningReason:
canInsertItem:afterItem:
canOverlapPlaybackFromPlayerItem:toPlayerItem:
canParseExtendedMIMEType:
canPerformMultiplePasses
canPerformMultiplePassesOverSourceMediaData
canPlayEncryptedProgressiveDownloadAssets
canPlayFastForward
canPlayFastReverse
canPlayReverse
canPlaySlowForward
canPlaySlowReverse
canProvideSampleBuffers
canProvideSampleCursors
canRelayCommunicationChannel
canSetVolume
canStartRespondingToEachPassDescriptionReturningReason:
canStepForward
canSupplyIncrementalDataImmediately
canUseNetworkResourcesForLiveStreamingWhilePaused
cancel
cancelAllCGImageGeneration
cancelAllCallbacks
cancelAllPendingVideoCompositionRequests
cancelAndReleaseProgressTimerOnQueue
cancelAuthenticationChallenge:
cancelCurrentEventWithResumptionOffset:
cancelExport
cancelLoading
cancelPendingPrerolls
cancelPendingSeeks
cancelReading
cancelWriting
cancellationReason
cancellationTest
cancelled
cancelledRequestIDThreshold
canonicalLanguageIdentifierFromString:
canonicalLocaleIdentifierFromString:
captionContentInsets
captionLayerWithPlayer:
captionPipelineStrategy
captionRenderingStrategy
captureCompleteURI
caseBatteryLevel
caseInsensitiveCompare:
category
changeSeed
channelCount
channelCountForMediaOption:
chapterGroupIndex
chapterGroupInfo
chapterIndex
chapterMetadataGroupsBestMatchingPreferredLanguages:
chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:
chapterType
charValue
characterAtIndex:
characterSetWithCharactersInString:
checkAVAssetWriterInputConfigurationToOutputSegmentDataForOutputFileTypeProfile:preferredOutputSegmentInterval:returningDebugDescription:
checkForAvailableHDRModesChanges
class
classForCoder
classForTrackInspectors
classifyingLabel
classifyingLabels
cleanApertureDictionary
cleanApertureDimensions
clear
client
clientCanReceivePersistableContentKeyRequest
clientLayers
clientName
clientPriority
clientRequestedPlaybackCoordinator
clientStateOnRequestedMediaDataChangeNotification
close
closedCaptionDisplayEnabled
closedCaptionLayer
closedCaptionLayers
closedCaptionsDisplayPublisher
clusterID
clusterType
clusteredDeviceDescriptions
code
codecTypes
colorPrimaries
colorPropertiesConsideringFormatDescriptions:colorPrimaries:transferFunction:ycbcrMatrix:
colorSpace
colorSpaceFromSourceFormatDescriptions:andRendererColorSpace:
colorTransferFunction
colorWithRed:green:blue:
colorYCbCrMatrix
commChannelManager
commit
commitCustomVideoCompositorPropertiesAndReturnError:
commonKey
commonMetadata
communicationChannel:didReceiveData:
communicationChannelDelegate
communicationChannelDidClose:
communicationChannelImpl:didReceiveData:
communicationChannelImplDidClose:
communicationChannelManager:didCloseCommunicationChannel:
communicationChannelManager:didReceiveData:fromCommunicationChannel:
compare:
compare:options:
comparePositionInDecodeOrderWithPositionOfCursor:
compatibleMediaTypes
compatibleTrackForCompositionTrack:
compatibleWithAirPlayVideo
compatibleWithSavedPhotosAlbum
completionDueDate
completionHandler
completions
componentsJoinedByString:
componentsSeparatedByString:
composable
compositingRequest
composition
compositionFrame
compositionFrame:didFinishWithComposedPixelBuffer:
compositionFrame:didFinishWithError:
compositionFrameDidCancel:
compositionTrackSegmentWithTimeRange:
compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:
compositionWithURLAssetInitializationOptions:
configurationGroup
configurationQueue
configurationState
configureAppIdentifier:
configureUsingBlock:completionHandler:
configureUsingBlock:options:completionHandler:
configuredClusterSize
configuredTimeOffsetFromLive
conformsToProtocol:
connectedPairedDevices
connection
containsFragments
containsIndex:
containsMovieFragments
containsTweening
contentAuthorizedForPlayback
contentIdentifier
contentInformationCache
contentInformationCachingQueue
contentInformationRequest
contentKey
contentKeyRecipients
contentKeyRequestByKeySpecifierMap
contentKeyRequestDataForApp:contentIdentifier:options:error:
contentKeyRequestDidProduceContentKey:
contentKeyRequestDidSucceedWithBoss:keySpecifier:requestID:cryptor:
contentKeyResponseWithAuthorizationTokenData:
contentKeyResponseWithClearKeyData:initializationVector:
contentKeyResponseWithFairPlayStreamingKeyResponseData:
contentKeyResponseWithFairPlayStreamingKeyResponseData:renewalDate:
contentKeySession
contentKeySession:contentKeyRequest:didFailWithError:
contentKeySession:contentKeyRequestDidSucceed:
contentKeySession:contentProtectionSessionIdentifierDidChangeForReportGroup:
contentKeySession:didProvideContentKey:
contentKeySession:didProvideContentKeyRenewalRequest:
contentKeySession:didProvideContentKeyRequest:
contentKeySession:didProvideContentKeyRequests:forInitializationData:
contentKeySession:didProvidePersistableContentKeyRequest:
contentKeySession:didProvideRenewingContentKeyRequest:
contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:
contentKeySession:externalProtectionStatusDidChangeForContentKeyRequest:
contentKeySession:shouldRetryContentKeyRequest:reason:
contentKeySessionContentProtectionSessionIdentifierDidChange:
contentKeySessionCustomURLHandler
contentKeySessionDidGenerateExpiredSessionReport:
contentKeySessionHandlerObjectID
contentKeySessionWithKeySystem:storageDirectoryAtURL:
contentKeySessionWithLegacyWebKitCompatibilityModeAndKeySystem:storageDirectoryAtURL:
contentKeySpecifier
contentKeySpecifierForKeySystem:identifier:options:
contentKeySpecifiersEligibleForPreloading
contentKeyWithSpecifier:andCryptor:
contentLength
contentProtectionSessionIdentifier
contentType
contentsAreFlipped
contentsScale
contextID
contextId
continueWithoutCredentialForAuthenticationChallenge:
continuesPlayingDuringPrerollForRateChange
continuesPlayingDuringPrerollForSeek
convertRect:toLayer:
cookieWithProperties:
coordinateRateChangeToRate:options:
coordinateSeekToTime:options:
coordinatedPlaybackIdentifierChangeNotificationToken
coordinationMediumDelegate
copy
copyAssetRemovingTrackID:
copyAssetWithAdditionalTrackID:mediaType:
copyAssetWithReplacementFormatDescription:forTrackID:
copyAudioChannelLayoutForSourceFormatDescription:audioChannelLayoutSize:
copyCGImageAtTime:actualTime:error:
copyCryptorForCryptKeyAttributes:
copyCryptorForFormatDescription:cryptorOut:errorOut:
copyCryptorForIdentifier:initializationData:
copyCryptorForInitializationData:
copyCurrentSampleFormatDescription
copyDefaultSecureStopManagerForAppIdentifier:storageDirectoryAtURL:
copyDisplayedPixelBuffer
copyFigSampleBufferAudioRenderer:
copyFormatDescription
copyKeychainCredentialForUrl:
copyLastPixelBuffer:
copyNextSampleBuffer
copyNextSampleBufferForTrackID:flags:
copyPixelBufferForItemTime:itemTimeForDisplay:
copyPixelBufferForItemTime:remove:itemTimeForDisplay:
copyPixelBufferForSourceTime:sourceTimeForDisplay:
copyPropertiesFromStringGenerator:
copyWithZone:
copyWithZone:newAssetOptions:
count
countByEnumeratingWithState:objects:count:
countOfBytesReceived
createAndAddSampleBufferForRequest:error:
createAndInstallCustomURLHandlerForAsset:outHandler:
createAudioRendererWithAllocator:options:error:
createCryptorIfNecessaryForIdentifier:initializationData:formatDescription:hlsMethod:error:
createCryptorIfNecessaryForInitializationData:formatDescription:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createProtectorSessionIdentifierIfNecessary
createRenderSynchronizerWithAllocator:options:error:
createSampleBufferForCurrentSampleReturningError:
createSampleBufferForRequest:
createSampleBufferForRequest:addingToBatch:error:
createSampleBufferForRequest:error:
createSampleBufferFromCurrentSampleToEndCursor:error:
createVideoQueue:
creationDate
cropRectangleRamps
cryptorKeyRequestID
cryptorOptionsForIdentifier:initializationData:formatDescription:hlsMethod:
cryptorUUID
cryptorUUIDToContentKeyRequestMap
cryptorsByIdentifer
cueingOptions
currentBluetoothListeningMode
currentBundleIdentifier
currentCarPlayExternalDevice
currentChunkInfo
currentChunkStorageRange
currentChunkStorageURL
currentConfigurationIsFinal
currentDate
currentEstimatedDate
currentEvent
currentExternalDevice
currentFigAudioRendererFactory
currentFigRenderSynchronizerFactory
currentFigVideoQueueFactory
currentHandler
currentHardwareInputNumberOfChannels
currentHardwareOutputNumberOfChannels
currentHardwareSampleRate
currentItem
currentItemChanged
currentItemIdentifier
currentItemNonForcedSubtitlesEnabled
currentItemNonForcedSubtitlesEnabledSink
currentItemPreferredPixelBufferAttributesNotificationToken
currentItemPresentationSize
currentItemPropertyUpdateQueue
currentItemPublisher
currentItemSuppressesVideoLayersNotificationToken
currentItemTracksChanged
currentItemTracksSink
currentLocale
currentMediaSelection
currentObservedBitrate
currentOffset
currentPassDescription
currentPlatformIdentifier
currentProcess
currentRate
currentRequest
currentRoutingSession
currentSampleAudioDependencyInfo
currentSampleDependencyAttachments
currentSampleDependencyInfo
currentSampleDuration
currentSampleIndexInChunk
currentSampleStorageRange
currentSampleSyncInfo
currentSize
currentStableVariantID
currentState
currentSuspensions
currentThread
currentTime
currentTimeRanges
currentUXMDisplayCriteria
currentUnfoldedTime
currentVideoFrameRate
customCompositorClass
customRouteDiscoverySession
customRoutesPresent
customURLAuthenticationUsingKeychain
customURLHandler
customURLHandlerObjectID
customURLRequest
customURLRequestID
customURLResponse
customVideoCompositor
customVideoCompositor:wouldHaveTriggeredException:
customVideoCompositorClass
customVideoCompositorSession
data
dataCachingQueue
dataRequest
dataResponseQueue
dataTaskWithRequest:
dataTaskWithURL:completionHandler:
dataType
dataTypeForValue:
dataUsingEncoding:
dataUsingEncoding:allowLossyConversion:
dataValue
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithContentsOfFile:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
date
dateByAddingTimeInterval:
dateFormatFromTemplate:options:locale:
dateRangeMetadataGroupInternal
dateValue
dateWithTimeIntervalSinceNow:
debugDescription
declareKeyPathDependenciesWithRegistry:
decodabilityValidationResult
decodable
decodeBoolForKey:
decodeCMTimeForKey:
decodeCMTimeMappingForKey:
decodeCMTimeRangeForKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeXPCObjectForKey:
decodesAllFramesDuringOrdinaryPlayback
decodesAllFramesDuringOrdinaryPlaybackWasSet
decreaseVolumeByCount:
defaultActionForKey:
defaultAlternateGroupID
defaultAudioOutputSettings
defaultCIContext
defaultCIContextProvider
defaultCenter
defaultContentKeyGroup
defaultFileExtension
defaultFrecentsReader
defaultFrecentsWriter
defaultGroupID
defaultInput
defaultManager
defaultMediaDataStorage
defaultMediaSelectionCriteriaForMediaCharacteristic:
defaultOption
defaultOutputContextImplClass
defaultOutputSettingsForMediaType:
defaultQueue
defaultRate
defaultSharedOutputContext
defaultSharedOutputContextImpl
defaultVideoOutputSettings
delaysRateChangeUntilHasSufficientMediaData
delegate
delegateQueue
delegateWakeupSource
dependencies
dependencyFactory
dependencyHostIsFullyInitialized
dependencyManager
dependentProperty
derivedIdentifierCounter
description
descriptionForNextPass
descriptionStringForBitRate:
descriptionStringForFormatOfTrack:
descriptionStringForTracksOfPlayerItem:
descriptionStringForVideoRangeOfFormatDescription:
destination
destinationURL
detachVideoComposition
detectsCustomRoutes
determineCompatibilityOfExportPreset:withAsset:outputFileType:completionHandler:
determineCompatibleFileTypesWithCompletionHandler:
determineValidityForAsset:timeRange:validationDelegate:completionHandler:
deviceFeatures
deviceID
deviceIDs
deviceName
devicePresenceDetected
deviceSubType
deviceType
devicesPresent
dict
dictionary
dictionaryRepresentation
dictionaryRepresentationWithTimeRange:
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
dictionaryWithValuesForKeys:
didBecomeReadyForBasicInspection
didBecomeReadyForInspectionOfDuration
didBecomeReadyForInspectionOfPresentationSize
didBecomeReadyForInspectionOfRecommendedTimeOffsetFromLive
didBecomeReadyForInspectionOfTracks
didChangeValueForKey:
didCheckForSaveRestriction
didEnterBackgroundNotificationToken
didEnterForegroundNotificationToken
didEnterTerminalState
didFinishSuspensionNotificationToken
didFireKVOForAssetForNonStreamingItem
didInformObserversAboutAvailabilityOfTracks
didProvideKeyRequestWithBoss:keySpecifier:requestID:renewalRequest:
didReceiveFigAssetWriterNotificationWithSuccess:error:
didSetAssetToAssetWithFigPlaybackItem
didStartInitialSession
didStartLoadingMetadata
dimensions
dimensionsAreBoundingBox
direction
directoryForTemporaryFiles
disableActions
disableColorMatching
disableColorMatchingWasSet
disableLooping
disallowsAMRAudio
disallowsAutoPauseOnRouteRemovalIfNoAudio
disallowsHardwareAcceleratedVideoDecoder
disallowsVideoLayerDisplayCompositing
discoveryMode
discoveryTimestamp
diskCachingPermitted
dispatchQueue
displayName
displayNameForKey:value:
displayNameWithLocale:
displayResolutionHeight
displayResolutionWidth
displayStringGenerator
displaysNonForcedSubtitles
displaysUsedForPlayback
domain
doubleValue
downloadConfigurationWithAsset:title:
downloadDestinationURL
downloadToken
drain
duration
earliestAvailablePixelBufferItemTime
earliestPresentationTimeStamp
edgeWidths
editAssetTrackID
editAssetURL
effectParameters
effectiveEQPreset
effectiveLoudnessInfo
electronicTollCollection
eligibleForHDRPlayback
eligibleOutputSettingsDictionaryKeys
eligibleToBePredictedOutputDevice
empty
enableCRABSCache
enableHLSCache
enablePostProcessing
enabledWasSet
encodeBool:forKey:
encodeCMTime:forKey:
encodeCMTimeMapping:forKey:
encodeCMTimeRange:forKey:
encodeDouble:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodeXPCObject:forKey:
encodedPixelsDimensions
encoderIsAvailableOnCurrentSystemReturningError:
encoderSupportsMultiPass
endCompositionTime
endInterruptionFromInterruptor:category:flags:
endInterruptionWithFlags:
endPassWithCompletionHandler:
endProposingNewTime:
endSessionAtSourceTime:
endowmentNamespaces
endpoint
enqueueOperation:
enqueueSampleBuffer:
enqueueSampleBuffer:bufferEnqueueingInfo:
ensureCryptorWithFormatDescription:error:
ensureProgressTimerIsRunningOnQueueWithError:
ensuresActiveAudioSessionWhenStartingPlayback
enterPIPModeRedirectingVideoToLayer:
entireLengthAvailableOnDemand
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
environmentalConditions
eqPreset
error
errorComment
errorDomain
errorLog
errorThatOccurredBeforeStartReading
errorWithDomain:code:userInfo:
establishedAutomaticallyFromLikelyDestination
estimateMaximumDurationWithCompletionHandler:
estimateOutputFileLengthWithCompletionHandler:
estimatedDataRate
estimatedOutputFileLength
estimatedOutputFileLengthForPreset:duration:properties:
evaluateDependenciesAndMarkAsExecuting
evaluateWithObject:substitutionVariables:
eventType
events
exceptionWithName:reason:userInfo:
excludedFromAutoselectionInTrackGroup
expectMinimumUpcomingSampleBufferPresentationTime:
expectMonotonicallyIncreasingUpcomingSampleBufferPresentationTimes
expectedAssetTypes
expectedContentLength
expectedCurrentItemIdentifier
expectedItemTimeAtHostTime:
expectsMediaDataInRealTime
expectsPropertyRevisedNotifications
expirationDate
expire
exportAsynchronouslyWithCompletionHandler:
exportPresetsCompatibleWithAsset:
exportSessionWithAsset:presetName:
exportable
extendedLanguageTag
extendedLogDataStringEncoding
extent
externalDeviceHIDWithUUID:
externalDeviceHIDs
externalPlaybackActive
externalPlaybackType
externalPlaybackVideoGravity
externalProtectionRequested
externalProtectionState
externalProtectionStateChangedCallbackWithBoss:keySpecifier:
externalProtectionStatus
externalProtectionStatusForCryptor:withDisplays:
extraFigProperties
extractionCompleteForCurrentConfiguration
extractionID
extras
failProcessingContentKeyRequestWithIdentifier:initializationData:error:
failed
fallbackIDs
fallbackTrack
fieldMode
figAlternate
figAsset
figAssetDidBecomeReadyForInspectionOfMediaSelectionOptions
figAssetInitializationOnce
figAssetProvider
figAssetReader
figAssetTrack
figAssetTrackNotificationListenerWeakReference
figAssetWriter
figAudioRenderer
figChapterGroupInfo
figChapters
figConfigurationQueue
figCryptor
figDictionary
figEndpoint
figEndpointOutputDeviceImpl
figEvent
figExportSession
figFileTypeProfileFromAVFileTypeProfile:
figFormatReaderFileFormat
figFragmentedMediaDataReportDict
figMediaType
figMetadataOutputsDictionaryOptions
figPlaybackCoordinatorConfigQueue
figPlaybackItemAccessorQueue
figPlaybackItemIsReadyForInspection
figPlaybackItemSetterQueue
figPlaybackItemToIdentifyNextCurrentItem
figPlayer
figPlayerActionForActionAtItemEnd:
figSampleGenerator
figSourceClock
figSynchronizerAccessQueue
figTimelineCoordinatorConfigQueue
figTrackReader
figTrackReferences
figVideoCompositor
fileDownloadProgressTimer
fileExistsAtPath:
fileSize
fileType
filteringRequestsInFlight
finalStepWorkaroundOperationWithFigAssetWriter:
findCompatibleTrackForCompositionTrack:completionHandler:
findUnusedTrackIDWithCompletionHandler:
finishCancelledRequest
finishLoading
finishLoadingWithError:
finishLoadingWithResponse:data:redirect:
finishWithComposedVideoFrame:
finishWithError:
finishWithImage:context:
finishWriting
finishWritingDelegate
finishWritingDelegateOperationWithAssetWriter:andFigAssetWriter:andDelegate:
finishWritingWithCompletionHandler:
finished
fireAvailableHDRModesDidChangeNotification
fireEligibleForHDRPlaybackDidChangeNotification
firstFragmentSequenceNumber
firstObject
firstVideoSampleInformation
float64RangeWithAudioValueRange:
float64RangeWithMinimum:maximum:
floatValue
flush
flushAndRemoveImage
flushFromSourceTime:completionHandler:
flushSegment
flushWithRemovalOfDisplayedImage:completionHandler:
foldedTimebase
formatDescriptionReplacements
formatDescriptions
formatDescriptionsForTrackID:
formatIDs
formatReader
formatReaderInitializationOnce
formatSpecificationWithOutputSettings:sourceFormatDescription:
formatTemplate
formattedDisplayString
forwardPlaybackEndTime
forwardPlaybackStartTime
forwardRequestToContentKeySession
fragmentCount
fragmentMindingInterval
fragmentWithSequenceNumber:
fragmentedAssetMinderWithAsset:mindingInterval:
fragmentedMovieMinderWithMovie:mindingInterval:
fragments
frame
frameDuration
frameRateConversionAlgorithm
frecencyInfoForDeviceWithID:
frecencyScore
frecencyScoreForDeviceID:
fromValue
fullListOfAllowableMIMETypes
fullWidth
fullyInitializedAndNotDeallocating
gaplessInfo
gaplessSourceTimeRange
generateCGImageAsynchronouslyForTime:completionHandler:
generateCGImagesAsynchronouslyForTimes:completionHandler:
generateImagesAsyncQueue
generateStreamingContentKeyRequestDataAsynchronouslyForApp:contentIdentifier:options:completionHandler:
generator
getAndClearClientError
getApplicationProcessID:
getAudioStreamBasicDescription:forAudioFileTypeID:sourceFormatDescription:
getBytes:length:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
getCString:maxLength:encoding:
getCropRectangleRampForTime:startCropRectangle:endCropRectangle:timeRange:
getHudSetting
getObjectValue:forString:errorDescription:
getOpacityRampForTime:startOpacity:endOpacity:timeRange:
getRetainedDelegate:retainedDelegateQueue:
getScaleFactorForDisplaySize:
getStatus:error:
getTransformRampForTime:startTransform:endTransform:timeRange:
getUUIDBytes:
getValue:
getVolume:forCategory:
getVolumeRampForTime:startVolume:endVolume:timeRange:
getVolumeRampForTime:startVolume:endVolume:timeRange:rampMode:
group
groupContainsGroupLeader
groupDictionaries
groupLeader
hadAssociatedOnscreenPlayerLayerWhenSuspended
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleNewParticipantStateDictionary:
handleNewTransportControlStateDictionary:
handleRemovalOfParticipant:
handleReplacementParticipantStateDictionaries:
handlersToCallWhenReadyForEnqueueing
handlersToCallWhenReadyToPlay
hapticVolume
hapticVolumeWasSet
hasAdministratorPrivileges
hasAnyKeyRequestSucceeded
hasAudibleBooksContent
hasAudioSampleDependencies
hasEnqueuedVideoFrame
hasEnqueuedVideoFrameChanged:
hasEqualPropertiesToFigVideoCompositor:
hasInstanceIdentifierMapping
hasMediaCharacteristic:
hasMediaCharacteristics:
hasNewPixelBufferForItemTime:
hasPrefix:
hasProtectedContent
hasProtector
hasSaveRestriction
hasSeamSamples
hasSufficientMediaDataForReliablePlaybackStart
hasVideo
hash
haveAllRequestsBeenReceived
haveCPEProtector
haveInitialSamples
headTrackedSpatialAudioActive
headTrackedSpatialAudioMode
height
helper
helperQueue
helperReadWriteQueue
highQualityRendering
honorContentScale
host
hostApplicationInForeground
hostClockTime
httpSessionIdentifier
hudEnabled
hudLayer
iOSUIRequestedForApplicationURL:
iTunesAudioContext
identifier
identifierForKey:keySpace:
identifierForPlayerItem:
identifierName
identifiers
identifyingMACAddress
identifyingTag
identifyingTagClass
imageByApplyingTransform:
imageData
imageQueueInterpolationCurve
imageQueueInterpolationCurveWasSet
imageRequestQueue
imageValue
imageWithCVPixelBuffer:
impl
implEventListener
implementsCopyChunkDetails
implementsCopySampleLocation
implementsCreateSampleBuffer
implementsGetDecodeTimeStamp
implementsGetDependencyInfo
implementsGetDuration
implementsGetMPEG2FrameType
implementsTestReorderingBoundary
inUseByPairedDevice
increaseVolumeByCount:
indexAtPosition:
indexOfObject:
indexOfObjectIdenticalTo:
indexOfObjectPassingTest:
indexPathByAddingIndex:
indexPathWithIndex:
indexSet
indexSetWithIndex:
indexesOfObjectsPassingTest:
indicatedAverageBitrate
indicatedBitrate
init
initForKeySystem:identifier:initializationData:options:
initForKeySystem:identifier:options:
initForKeySystem:initializationData:
initForObservingValueAtKeyPath:onObject:
initForUnitTests
initInternal
initUsingCompositingRequest:sourceFrame:cancellationTest:defaultCIContextProvider:completionHandler:
initUsingSession:withRenderContext:compositionFrame:atTime:usingSources:instruction:withSampleBuffers:
initWithAVAudioSettingsDictionary:exceptionReason:
initWithAVVideoSettingsDictionary:exceptionReason:
initWithArray:
initWithArray:key:keySpace:locale:
initWithAsset:
initWithAsset:automaticallyLoadedAssetKeys:
initWithAsset:dictionary:
initWithAsset:error:
initWithAsset:mediaCharacteristics:
initWithAsset:mediaSelections:destinationURL:options:
initWithAsset:mediaType:
initWithAsset:mindingInterval:
initWithAsset:presetName:
initWithAsset:propertyList:
initWithAsset:timebase:
initWithAsset:title:
initWithAsset:trackIDs:
initWithAssetInspector:
initWithAssetWriterInput:
initWithAssetWriterInput:displaysNonForcedSubtitles:
initWithAssetWriterInput:sourcePixelBufferAttributes:
initWithAudioSettingsDictionary:exceptionReason:
initWithAudioTracks:audioSettings:
initWithAudioValueRange:
initWithAuthenticationChallenge:sender:
initWithAuthenticationChallenge:sender:requestInfo:requestID:
initWithAutomaticallyWaitsToMinimizeStalling:usesLegacyAutomaticWaitingBehavior:timeControlStatus:
initWithAvailableFigEndpoints:
initWithBase64EncodedData:options:
initWithBlock:
initWithCMNotificationCenter:
initWithCallbackContextRegistry:observer:object:keyPath:options:block:
initWithCallbackQueue:block:
initWithCapacity:
initWithChannelCount:mediaSelectionOption:operatorType:
initWithCoder:
initWithConfiguration:
initWithConfiguration:error:
initWithConfigurationState:
initWithConfigurationState:assetWriter:
initWithConfigurationState:assetWriter:error:
initWithConfigurationState:assetWriterTrack:error:
initWithConfigurationState:finishWritingOperations:figAssetWriterCallbackContextToken:
initWithConfigurationState:terminalError:
initWithConfigurationState:terminalStatus:
initWithContentKeySession:contentKeyBoss:useContentKeyBoss:keySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:isRenewalRequest:requestID:providesPersistableKey:preloadingRequestOptions:identifier:
initWithContentKeySession:reportGroup:customURLHandler:identifier:requestInfo:requestID:providesPersistableKey:isRenewalRequest:
initWithContentKeySession:reportGroup:identifier:contentIdentifier:keyIDFromInitializationData:initializationData:preloadingRequestOptions:providesPersistableKey:
initWithContentType:
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:anticipatedPlaybackRate:completionDueDate:
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:itemTime:shouldPause:shouldBufferInAnticipationOfPlayback:anticipatedPlaybackRate:completionDueDate:
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:rate:itemTime:hostClockTime:
initWithCoordinator:originator:expectedCurrentItemIdentifier:commandOrderIndex:shouldBufferInAnticipationOfPlayback:anticipatedPlaybackRate:
initWithCoordinator:reason:
initWithCoordinatorGenerator:
initWithCount:firstSequenceNumber:
initWithCreationOptions:
initWithData:contentType:
initWithData:contentType:options:
initWithData:encoding:
initWithData:options:
initWithData:options:error:
initWithDependencyHost:
initWithDescriptionOfHowAllObservedPropertyChangesAreSerializedWithDispatcherDeallocation:
initWithDeviceFeatures:
initWithDeviceID:channelUUID:syncController:
initWithDeviceID:deviceName:deviceSubType:isClusterLeader:modelID:
initWithDeviceID:syncController:
initWithDictionary:
initWithDispatchQueue:
initWithDownloadToken:
initWithEndpoint:
initWithEndpoint:customURLHandlerObjectID:authHandlerObjectID:contentKeySessionHandlerObjectID:
initWithExplanation:target:attributes:
initWithExternalDevice:
initWithExternalDevice:client:reason:
initWithExternalDeviceAndHIDDictionary:hidDictionary:
initWithFigAlternate:
initWithFigAlternateObjC:
initWithFigAlternateObjC:mediaSelectionOption:
initWithFigAsset:
initWithFigAsset:forAsset:
initWithFigAssetWriter:
initWithFigAssetWriter:mediaType:mediaFileType:formatSpecification:sourcePixelBufferAttributes:multiPass:error:
initWithFigDictionary:
initWithFigEndpoint:
initWithFigError:userInfo:
initWithFigFragmentedMediaDataReportDictionary:
initWithFigPlayer:
initWithFigSampleCursor:
initWithFigSegmentReportDictionary:
initWithFigSegmentReportSampleInformationDictionary:
initWithFigSegmentTrackReportDictionary:
initWithFigVideoCompositor:clientRequiredPixelBufferAttributes:videoComposition:pixelBufferPool:
initWithFileType:
initWithFileType:copySettingsFromMovie:options:
initWithFileType:error:
initWithFileTypeIdentifier:exceptionReason:
initWithFileURL:offset:length:options:
initWithFormat:arguments:
initWithFormatReader:
initWithFrecentsFilePath:
initWithFundamentalOperation:
initWithGenerator:
initWithGroup:
initWithID:publicKey:hasAdministratorPrivileges:
initWithIdentifiers:
initWithIdentifiers:classifyingLabels:
initWithInitializationData:contentIdentifier:keyIDFromInitializationData:options:identifier:
initWithInputs:defaultInput:
initWithInputs:provisionalInputs:defaultInput:
initWithInsertIndexes:insertedObjects:removeIndexes:removedObjects:
initWithItems:
initWithItems:startDate:endDate:
initWithItems:timeRange:
initWithKeyData:initializationVector:
initWithKeyData:renewalDate:
initWithKeyOptions:valueOptions:capacity:
initWithKeySystem:
initWithKeySystem:keySession:contentKeyBoss:useContentKeyBoss:groupID:storageDirectoryAtURL:
initWithKeySystem:storageDirectoryAtURL:internal:
initWithKeySystem:storageDirectoryAtURL:legacyWebKitCompatibilityMode:
initWithLayer:
initWithLoadingRequest:allowedContentTypes:
initWithLoadingRequest:requestedOffset:requestedLength:requestsAllDataToEndOfResource:canSupplyIncrementalDataImmediately:
initWithLocaleIdentifier:
initWithLogArray:
initWithMagicTrackID:animationLayer:videoLayers:
initWithMediaDataConsumer:requestQueue:requestBlock:
initWithMediaSubtypesForNativeRepresentation:
initWithMediaType:outputSettings:
initWithMediaType:outputSettings:sourceFormatHint:
initWithMetadataItem:
initWithMetadataReader:
initWithMetadataReader:array:key:keySpace:locale:
initWithMinimum:maximum:
initWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
initWithModificationType:item:afterItem:
initWithMonitoringObject:
initWithMovie:mindingInterval:
initWithName:ID:modelID:playing:productName:
initWithObject:key:notificationName:
initWithObject:notificationName:callbackBlock:
initWithObject:notificationNames:
initWithObject:thatHasPropertyWithKey:whoseValueDependsOnValueAtKeyPath:
initWithObjects:
initWithObjectsAndKeys:
initWithObservedObject:realNotifier:
initWithOriginalFormatDescription:andReplacementFormatDescription:
initWithOutputContext:
initWithOutputContextCommunicationChannelImpl:
initWithOutputContextImpl:
initWithOutputContextManagerImpl:
initWithOutputDeviceAuthorizationRequestImpl:
initWithOutputDeviceAuthorizationSessionImpl:
initWithOutputDeviceCommunicationChannelImpl:
initWithOutputDeviceDiscoverySessionImpl:
initWithOutputDeviceGroupImpl:
initWithOutputDeviceImpl:commChannelManager:
initWithOutputSettings:
initWithOutputSettings:sourceFormatDescription:
initWithOutputSettingsDictionary:exceptionReason:
initWithOutputSettingsPreset:
initWithParser:tracks:
initWithParticipantIdentifier:readyToPlay:suspensionReasons:
initWithPixelBufferAttributes:
initWithPixelBufferAttributes:exceptionReason:
initWithPlaybackControlDelegate:
initWithPlaybackItem:trackIDs:
initWithPlayer:templateItem:timeRange:
initWithPlayerItem:
initWithPredicate:
initWithPreferredLanguages:preferredMediaCharacteristics:
initWithPreferredLanguages:preferredMediaCharacteristics:fallbackPreferredLanguages:fallbackPreferredMediaCharacteristics:captionDisplayType:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:
initWithPreferredLanguages:preferredMediaCharacteristics:preferredMediaSubTypes:precludedMediaSubTypes:preferMultichannelAudio:precludeMultichannelAudio:
initWithPresentationHeight:operatorType:
initWithPresentationWidth:operatorType:
initWithPrimaryItem:identifier:time:date:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
initWithPrimaryItem:time:date:
initWithPrimaryItemAndFigEvent:templateItems:figEvent:
initWithPrimaryPlayer:
initWithPrincipalMediaCharacteristics:preferredLanguages:preferredMediaCharacteristics:
initWithPropertyList:
initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:
initWithPublisher:requestingInitialValue:sink:
initWithReferencedObject:
initWithRefreshRate:videoDynamicRange:
initWithRemoteControlSession:
initWithRemoteGroupID:syncController:
initWithRequest:id:
initWithRequestCount:
initWithRequestInfo:
initWithRequestQueue:requestBlock:
initWithResourceLoader:URL:httpRequestHeaders:requestOffset:requestLength:allowedContentTypes:figCryptor:cryptorKeyRequestID:
initWithResourceLoader:requestInfo:requestID:
initWithRunLoop:
initWithSampleBuffer:
initWithSequenceNumber:
initWithSettingsFromMovie:options:
initWithSettingsFromMovie:options:error:
initWithSpecifiedName:
initWithSpecifier:andCryptor:
initWithStartCompositionTime:endCompositionTime:subsequentStartCompositionTime:subsequentEndCompositionTime:
initWithStartCursor:
initWithStatus:cancellationReason:
initWithStorageDirectoryAtURL:
initWithSyncController:secondaryImpl:
initWithTextMarkupAttributes:
initWithTextMarkupAttributes:textSelector:
initWithTimeIntervalSinceReferenceDate:
initWithTimeRange:
initWithTimeRange:sourceTrackIDs:handler:
initWithTimeRanges:
initWithTimebase:fireTime:queue:block:
initWithTimebase:interval:queue:block:
initWithTimebase:queue:
initWithTimebase:times:queue:block:
initWithTopLevelPropertyKey:secondLevelPropertyKey:
initWithTrack:
initWithTrack:outputSettings:
initWithTrackID:forMovie:
initWithTrackIDs:
initWithTrustedAVAudioSettingsDictionary:
initWithTrustedAVVideoSettingsDictionary:
initWithTrustedPixelBufferAttributes:
initWithURL:
initWithURL:assetInitializationOptions:
initWithURL:destinationURL:options:
initWithURL:enableCRABSCache:enableHLSCache:
initWithURL:figAssetCreationFlags:figAssetCreationOptions:avAssetInitializationOptions:forAsset:
initWithURL:fileType:
initWithURL:fileType:error:
initWithURL:options:
initWithURL:options:error:
initWithURL:playbackItem:trackIDs:dynamicBehavior:
initWithURL:readonly:
initWithURL:trackID:sourceTimeRange:targetTimeRange:
initWithURLRequestHelper:asset:remoteCustomURLHandlerContext:
initWithUUIDString:
initWithUpstream:
initWithUpstream:transform:
initWithUser:password:persistence:
initWithVariant:predicate:
initWithVideoComposition:
initWithVideoSettingsDictionary:exceptionReason:
initWithVideoTracks:videoSettings:
initWithWeakReferenceToListener:callback:name:object:
initWithWeakReferenceToPlayer:weakReferenceToPlayerItem:
initWithWritingHelper:
initialAlwaysMonitorsPlayability
initialContinuesPlayingDuringPrerollForRateChange
initialContinuesPlayingDuringPrerollForSeek
initialDate
initialEstimatedDate
initialFigTimePitchAlgorithm
initialLimitReadAhead
initialMaxSnapTime
initialMinSnapTime
initialMovieFragmentSequenceNumber
initialPlaybackLikelyToKeepUpTrigger
initialSegmentStartTime
initialSetTimeFlags
initialTime
initialVariantIndex
initialWillNeverSeekBackwardsHint
initializationData
initializationIsCompleteForObject:
initializationOptions
initialize
input
inputGroups
inputIsAvailable
inputMode
inputs
insertEmptyTimeRange:
insertItem:afterItem:
insertMediaTimeRange:intoTimeRange:
insertObject:atIndex:
insertSublayer:above:
insertSublayer:atIndex:
insertSublayer:below:
insertTimeRange:ofAsset:atTime:completionHandler:
insertTimeRange:ofAsset:atTime:copySampleData:error:
insertTimeRange:ofAsset:atTime:error:
insertTimeRange:ofTrack:atTime:copySampleData:error:
insertTimeRange:ofTrack:atTime:error:
insertTimeRanges:ofTracks:atTime:error:
inspectionOnlyAssetWithFigAsset:
inspectionOnlyAssetWithStreamDataParser:tracks:
instanceIdentifierMapTable
instanceMethodSignatureForSelector:
instruction
instructionForFigInstruction:
instructions
intValue
integerValue
interleavingPeriod
internal
intersectSet:
intersectsSet:
interstitialEventCollector
interstitialEventControllerWithPrimaryPlayer:
interstitialEventCoordinator
interstitialEventMonitorWithPrimaryPlayer:
interstitialEventWithPrimaryItem:date:
interstitialEventWithPrimaryItem:identifier:date:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
interstitialEventWithPrimaryItem:identifier:time:templateItems:restrictions:resumptionOffset:playoutLimit:userDefinedAttributes:
interstitialEventWithPrimaryItem:templateItems:figEvent:
interstitialEventWithPrimaryItem:time:
interstitialLayer
interstitialPlayer
interstitialTemplate
interstitialTimeRangesForPlayerItem:
intrinsicAttributesOfExtraAttributes:
invalidate
invalidateAllPersistableContentKeysForApp:options:completionHandler:
invalidatePersistableContentKey:options:completionHandler:
invalidated
invocationWithMethodSignature:
invoke
invokeDelegateCallbackWithBlock:
invokeDelegateCallbackWithBlock:synchronouslyIfDelegateQueueIsQueue:
isAboveHighWaterLevel
isActive
isAdditive
isAirPlayVideoActive
isAirPlayVideoPlaying
isAppAudioSession
isAppleAccessory
isApplicationAudioSession
isApplicationAuthorizedForPlayback
isAssociatedWithFragmentMinder
isAsynchronous
isAudioPlaybackEnabledAtAllRates
isAudioSpatializationAllowed
isAuthorizationRequiredForPlayback
isBinaural
isBinauralMediaOption:
isBufferYCbCr:
isByteRangeAccessSupported
isCancelled
isClosedCaptionDisplayEnabled
isCompatibleWithAirPlayVideo
isCompatibleWithFileType:
isCompatibleWithFormatDescription:
isCompatibleWithPhotosTranscodingServiceWithOptions:
isCompatibleWithSavedPhotosAlbum
isComposable
isConnectedToPhysicalSecondScreen
isConnectedToSecondScreen
isContentAuthorizedForPlayback
isDecodable
isDiskCachingPermitted
isDisplayingClosedCaptions
isDownmix
isDownmixMediaOption:
isEligibleToBePredictedOutputDevice
isEnabled
isEqual:
isEqualToData:
isEqualToDictionary:
isEqualToSet:
isEqualToString:
isExcludedFromAutoselectionInTrackGroup
isExecuting
isExportable
isExternalPlaybackActive
isFailed
isFileURL
isFinished
isForScrubbingOnly
isFullWidth
isGroupLeader
isHidden
isIAPDExtendedModeActive
isInUseByPairedDevice
isInchargeOfKeyRequest
isInternal
isInterstitialPlayer
isKindOfClass:
isLanczosFilterDownscalingEnabled
isLegibleDisplayEnabled
isLogicalDeviceLeader
isMainThread
isMemberOfClass:
isModified
isNonForcedSubtitleDisplayEnabled
isOpenToRequests
isOverscanSubtitleSupportEnabled
isPIPModeEnabled
isPartOfForegroundScene
isPlayable
isPlayableExtendedMIMEType:
isPlayableOffline
isPlaybackBufferEmpty
isPlaybackBufferFull
isPlaybackLikelyToKeepUp
isPlaying
isPrerendered
isPresentationLayer
isProgressiveDownloadCacheEnabled
isReadable
isReadyForDisplay
isReadyForDisplayMutex
isReadyForMoreMediaData
isReadyToPlay
isRenderingSpatialAudio
isRenewalRequest
isRightToLeft
isRouteDetectionEnabled
isSilencedDueToConflictWithOtherPlayback
isSyncSample
isValidForAsset:timeRange:validationDelegate:
isValidJSONObject:
isVirtualCaptureCardSupported
isVisible
isoFileTypes
issueContentKeyRequest:
issueContentKeyRequest:toDelegateWithCallbackSelector:
issueContentKeyRequestForInitializationData:
issueContentKeyRequestWithCustomURLHandler:identifier:requestInfo:requestID:providesPersistableKey:
issueContentKeyRequestWithPreloadingRequestOptions:identifier:initializationData:providesPersistableKey:
issueContentKeyRequests:forInitializationData:
issuePersistableContentKeyRequest:
issuePersistableContentKeyRequestForKeySpecifier:initializationData:keyIDFromInitializationData:contentIdentifier:requestID:preloadingRequestOptions:identifier:
issueRenewableContentKeyRequest:
item
itemCollectors
itemIndex
itemLegibleOutputsForKeys
itemMetadataCollectors
itemMetadataOutputsForKeys
itemOutputs
itemProviderDataWithURL:assetInitializationOptions:
itemProviderVisibilityForRepresentationWithTypeIdentifier:
itemTime
itemTimeForHostTime:
itemTimeForMachAbsoluteTime:
itemVideoOutputs
items
itemsInFigPlayQueue
keyEnumerator
keyForIdentifier:
keyIDFromInitializationData
keyPathDependencyManager
keyPathString
keyPathsForValuesAffectingActionAtItemEnd
keyPathsForValuesAffectingCanPerformMultiplePasses
keyPathsForValuesAffectingClosedCaptionDisplayEnabled
keyPathsForValuesAffectingEstimatedOutputFileLength
keyPathsForValuesAffectingIdentifier
keyPathsForValuesAffectingOutputObscuredDueToInsufficientExternalProtection
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingTimeRange
keyPathsForValuesAffectingVideoRect
keyPathsForValuesAffectingVolume
keyRequestDataUsingCryptorForApp:contentIdentifier:options:performAsync:error:
keyRequestParamsByRequestID
keyRequestTrackerByRequestID
keyRequestsByRequestID
keySpace
keySpaceForIdentifier:
keySpecifier
keySystem
lanczosDownscalingEnabled
lanczosDownscalingFactor
lanczosFilterDownscaleFactor
languageCode
lastCryptor
lastEnqueuedLoopingItem
lastFormatDescription
lastImageTime
lastItem
lastModifiedDateOfEntryForKey:
lastObject
lastPathComponent
lastWindowSceneEvent
latentBaseDecodeTimeStampOfFirstTrackFragment
latestAppliedPresentationSize
layer
layerDestinationIsTVOut
layerDidBecomeVisible:
layerForegroundingChangeToken
layerInstructions
layerInteractionQueue
leavePIPMode
leftBatteryLevel
legibleContentInsets
legibleFallbackMediaSelectionCriteria
legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:
length
likelyExternalDestinations
limitCursor
limitReadAhead
limitedUI
limitedUIElements
limitsBandwidthForCellularAccess
listenerKeyWithWeakReferenceToListener:callback:name:object:
listeningForItemFailedToPlayToEndTime
liveUpdateInterval
loadAssociatedTracksOfType:completionHandler:
loadChapterInfoOnce
loadChapterMetadataGroupsBestMatchingPreferredLanguages:completionHandler:
loadChapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:completionHandler:
loadDataWithTypeIdentifier:forItemProviderCompletionHandler:
loadMediaSelectionGroupForMediaCharacteristic:completionHandler:
loadMetadataForFormat:completionHandler:
loadPlaybackConfigurationOptionsWithCompletionHandler:
loadSamplePresentationTimeForTrackTime:completionHandler:
loadSegmentForTrackTime:completionHandler:
loadTrackWithTrackID:completionHandler:
loadTracksWithMediaCharacteristic:completionHandler:
loadTracksWithMediaType:completionHandler:
loadValuesAsynchronouslyForKeys:completionHandler:
loadValuesAsynchronouslyForKeys:keysForCollectionKeys:completionHandler:
loadedTimeRanges
loader
loadingCancelled
loadingCompletionHandlers
localDeviceDidChange
localDeviceWithCompletion:
localParticipantUUIDForPlaybackCoordinator:
locale
localeIdentifier
localeWithLocaleIdentifier:
localizedDescription
localizedName
localizedStandardCompare:
localizedStringForKey:value:table:
localizedStringForLanguage:context:
lock
logArray
logPerformanceData
loggingIdentifier
longFormVideoExternalPlaybackMonitor
longFormVideoManagerCanHaveCurrentSessionWithDestinationOfType:subType:
longFormVideoRoutingSessionManager
longLongValue
longValue
loopCount
loopRange
loopTimeRange
loopingItem
loopingItemCopies
loopingItemStatusKVOInvokers
loopingPlayer
loopingPlayerItems
loudnessInfo
lyrics
main
mainBundle
mainDisplay
mainQueue
mainThread
makeAssetLoggingIdentifier
makeBatch
makeClosedCaptionLayer
makeContentKeyGroup
makeCopyOf:immutable:
makeDataReadyWithCompletionHandler:
makeDerivedIdentifier
makeObjectsPerformSelector:
makeObjectsPerformSelector:withObject:
makeOneAssetDownloadCacheOnly
makeOneResourceLoaderOnly
makePlayerLoggingIdentifier
makePropertyListForMovieProxyHeader:name:
makePropertyListForProxyWithOptions:
makeSampleCursorAtFirstSampleInDecodeOrder
makeSampleCursorAtLastSampleInDecodeOrder
makeSampleCursorWithPresentationTimeStamp:
makeSecureTokenForExpirationDateOfPersistableContentKey:completionHandler:
makeSeekID
makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:
makeTracksArrayOnce
makeVideoRenderer
manufacturer
mapPublisherWithUpstream:transform:
markAsCancelledWithReason:
markAsFailed
markAsFailedWithError:
markAsFinished
markAsFinishedAndTransitionCurrentHelper:
markAsFinishedCalled
markAsInProgress
markConfigurationAsFinal
markCurrentPassAsFinished
markEndOfDataReturningError:
markEventAsCompleted
marksOutputTrackAsEnabled
maskLayer
masterClock
maxDuration
maxEntrySize
maxRateForAudioPlayback
maxSampleCount
maximizePowerEfficiency
maximumBitRate
maximumCutOffFrequency
maximumDurationForPreset:properties:
maximumForwardBufferDuration
maximumSize
maximumTimePlayedToDuringOverlappedPlayback
maximumTimePlayedToSinceLastSeek
maximumTrailingBufferDuration
maximumVideoResolution
mayRequireContentKeysForMediaDataProcessing
mediaCharacteristics
mediaCharacteristicsForMediaTypes
mediaDataCollectors
mediaDataLocation
mediaDataRequester
mediaDataRequesterShouldRequestMediaData
mediaDataStorage
mediaDecodeTimeRange
mediaFileOutputSettingsValidatorForFileType:
mediaFileType
mediaFileTypeWithFileTypeIdentifier:
mediaKind
mediaOptionsSelectedByClient
mediaPresentationTimeRange
mediaRequestsWWAN
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
mediaSelectionCriteriaForMediaCharacteristic:
mediaSelectionGroupForMediaCharacteristic:
mediaSelectionGroupForPropertyList:mediaSelectionOption:
mediaSelectionGroupWithAsset:dictionary:
mediaSelectionNilOptionForGroup:
mediaSelectionOptionForAsset:group:dictionary:hasUnderlyingTrack:
mediaSelectionOptionWithPropertyList:
mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:
mediaSelectionOptionsFromArray:withLocale:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsInMediaSelectionGroup:
mediaSubTypes
mediaTimeScale
mediaType
mediaTypeForTrackID:
mediatedPixelBufferAttributes
mediumLoggingIdentifier
metadata
metadataCollector:didCollectDateRangeMetadataGroups:indexesOfNewGroups:indexesOfModifiedGroups:
metadataEnumeratorWithArray:key:keySpace:locale:
metadataEnumeratorWithMetadataReader:
metadataForFormat:
metadataIdentifiers
metadataItem
metadataItemFilter
metadataItemFilterForSharing
metadataItemValueRequestWithMetadataItem:
metadataItemWithPropertiesOfMetadataItem:valueLoadingHandler:
metadataItems
metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:
metadataItemsFromArray:filteredByIdentifier:
metadataItemsFromArray:filteredByIdentifiers:
metadataItemsFromArray:filteredByMetadataItemFilter:
metadataItemsFromArray:withKey:keySpace:
metadataItemsFromArray:withLocale:
metadataItemsFromArray:withStringValue:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
metadataWaitingSemaphore
methodReturnLength
minFrameDuration
minRateForAudioPlayback
minSampleDuration
minVideoFrameDuration
minimumCutOffFrequency
minimumFrameDuration
minimumIntervalForIFrameOnlyPlayback
minimumIntervalForIFrameOnlyPlaybackWasSet
minimumTimeOffsetFromLive
minusSet:
mode
modelName
modelSpecificInformation
modificationForInsertingItem:afterItem:
modificationForRemovingItem:
modificationTimestamp
modificationType
modified
monitoredObjectHasDeparted
moovAtomSize
mostRecentlyAppliedAudioMix
mostRecentlyModifiedMetadataGroupTimestamp
mostRecentlySetTime
movieFragmentInterval
movieHeaderWithFileType:error:
movieTimeScale
movieTypes
movieWithData:options:
movieWithData:options:error:
movieWithSettingsFromMovie:options:error:
movieWithURL:options:
movieWithURL:options:error:
movies
multichannelAudioStrategy
multipleRoutesDetected
mutableBytes
mutableComposition
mutableCopy
mutableCopyWithZone:
mutableTrackCompatibleWithTrack:
muted
mxSessionID
name
nativeRepresentationSubtypes
naturalSize
naturalTimeScale
navigationAidedDriving
needTimedMetadataNotification
needToSeekAfterCreatingFigPlaybackItem
needsToCreateFigPlayer
networkProtocolName
newItemArrayWithCopiedItems:
newPixelBuffer
nextItem
nextObject
nextPrerollIDToGenerate
nextRequestID
nextSeekIDToGenerate
nextTimedMetadataGroup
nightMode
nightModeSupported
nominalFrameRate
nonForcedSubtitleDisplayEnabledPublisher
nonForcedSubtitlesEnabled
notificationDispatcherForCMNotificationCenter:
notificationWithName:object:
notificationWithName:object:userInfo:
notifyOfDataReadyForSampleBuffer:completionHandler:
null
numberFormatterWithOneMinimumIntegerDigits
numberFormatterWithTwoMinimumIntegerDigits
numberFromString:
numberOfAppendFailures
numberOfBytesToEndOfFirstVideoFrame
numberOfBytesTransferred
numberOfCorruptedVideoFrames
numberOfDisplayCompositedVideoFrames
numberOfDroppedVideoFrames
numberOfKeysToBeSet
numberOfMediaRequests
numberOfNonDisplayCompositedVideoFrames
numberOfSegmentsDownloaded
numberOfServerAddressChanges
numberOfStalls
numberValue
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithShort:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objCType
object
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
objectWithItemProviderData:typeIdentifier:error:
objectsAtIndexes:
objectsForKeys:notFoundMarker:
observationBlockForWeakObserver:passedToBlock:
observeValueForKeyPath:ofObject:change:context:
observedBitrateStandardDeviation
observedMaxBitrate
observedMinBitrate
observedObject
offset
oldPlayerItems
onlyAllowsConnectionsFromPeersInHomeGroup
opacityRamps
openCommunicationChannelToDestination:options:completionHandler:
openCommunicationChannelWithOptions:completionHandler:
openCommunicationChannelWithOptions:error:
operations
operatorWithType:modifier:options:
optimizesAuxiliaryContentConfigurations
optionID
originalFormatDescription
originalNetworkContentURL
originator
otherDevices
otherParticipants
outOfBandIdentifier
outgoingCommunicationChannel
output
outputBitsPerChannel
outputChannelCount
outputContext
outputContext:didCloseCommunicationChannel:
outputContext:didReceiveData:fromCommunicationChannel:
outputContextDidChangeApplicationProcessID:
outputContextExistsWithRemoteOutputDevice
outputContextForControllingOutputDeviceGroupWithID:
outputContextForControllingOutputDeviceGroupWithID:options:
outputContextForID:
outputContextImpl:didChangeOutputDeviceWithInitiator:
outputContextImpl:didChangeOutputDevicesWithInitiator:reason:deviceID:previousDeviceIDs:
outputContextImpl:didCloseCommunicationChannel:
outputContextImpl:didExpireWithReplacement:
outputContextImpl:didInitiateDestinationChange:
outputContextImpl:didReceiveData:fromCommunicationChannel:
outputContextImplDidChangeCanSetVolume:
outputContextImplDidChangeGlobalOutputDeviceConfiguration:
outputContextImplDidChangePredictedOutputDevice:
outputContextImplDidChangeProvidesControlForAllVolumeFeatures:
outputContextImplDidChangeVolume:
outputContextImplDidChangeVolumeControlType:
outputContextImplForID:type:
outputContextImplOutgoingCommunicationChannelDidBecomeAvailable:
outputContextManagerForAllOutputContexts
outputContextManagerImpl:observedFailureToConnectToOutputDevice:reason:
outputContextManagerImplDidExpireWithReplacementImpl:
outputContextOutgoingCommunicationChannelDidBecomeAvailable:
outputContextType
outputDataRate
outputDelegate
outputDevice
outputDevice:didCloseCommunicationChannel:
outputDevice:didReceiveData:fromCommunicationChannel:
outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
outputDeviceAuthorizationSessionImpl:didProvideAuthorizationRequest:
outputDeviceAuthorizationSessionImpl:shouldRetryAuthorizationRequest:reason:
outputDeviceAuthorizationSessionImplDidExpireWithReplacementImpl:
outputDeviceDescriptions
outputDeviceDiscoverySession
outputDeviceDiscoverySessionAvailableOutputDevicesWithAvailableFigEndpoints:
outputDeviceDiscoverySessionDidChangeDiscoveryMode:forClientIdentifiers:
outputDeviceDiscoverySessionFactory
outputDeviceDiscoverySessionImpl:didExpireWithReplacement:
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDeviceGroups:
outputDeviceDiscoverySessionImplDidChangeAvailableOutputDevices:
outputDeviceDiscoverySessionOfClass:withDeviceFeatures:
outputDeviceFeatures
outputDeviceGroupImpl:didChangeOutputDevicesWithInitiator:
outputDeviceGroupImplDidChangeVolume:
outputDeviceGroupImplDidChangeVolumeControlType:
outputDeviceGroupWithRemoteGroupID:syncController:
outputDeviceImplDidChangeCanChangeVolume:
outputDeviceImplDidChangeProposedGroupID:
outputDeviceImplDidChangeVolume:
outputDeviceImplDidChangeVolumeControlType:
outputDeviceWithFigEndpoint:
outputDeviceWithFigEndpoint:routingContextFactory:
outputDevices
outputDevicesChangeNotificationToken
outputFileType
outputFileTypeProfile
outputFinishedCallbackInvokers
outputFormat
outputFormatFlags
outputMIMECodecParameterForInputMIMECodecParameter:
outputMediaDataAvailable:trackID:
outputMediaDataWillChange:
outputObscuredDueToInsufficientExternalProtection
outputSampleRate
outputSequenceWasFlushed:
outputSequenceWasFlushed:trackID:
outputSettings
outputSettingsAssistantWithPreset:
outputSettingsDictionary
outputSettingsObject
outputSettingsWithOutputSettingsDictionary:mediaType:
outputTrackID
outputURL
overallDurationHint
overlappedPlaybackID
overlappedPlaybackItem
overrideTime
overscanSubtitleSupportEnabled
ownsScreen
ownsTurnByTurnNavigation
pairedDeviceID
pairedDevicesConnectedToOutputDevice:
parentChannel
parentOutputDevice
parentOutputDeviceGroup
parser
participantForIdentifier:
participantLimitForWaitingOutSuspensionsWithReason:
participantStates
participatesInAudioSession
participatesInGroupPlayback
passDescriptionResponder
passthroughTrackID
path
pathExtension
pathWithComponents:
pause
pauseSnapsToMediaTimeOfOriginator
pauseWithoutAffectingCoordinatedPlayback
peakBitRate
peakDataRate
peerID
pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:
pendingFigPlayerProperties
pendingPrerollID
pendingSeekID
performDefaultHandlingForAuthenticationChallenge:
performOperationUsingObject:andObject:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performsMultiPassEncodingIfSupported
persistToDiskReturningError:
persistableContentKeyFromKeyVendorResponse:options:error:
persistentContentKeyFromKeyVendorResponse:options:error:
pixelAspectRatio
pixelAspectRatioDictionary
pixelBuffer
pixelBufferAttributeMediator
pixelBufferAttributes
pixelBufferConformer
pixelFormatFamily
pixelSize
pixelTransferProperties
placeholderContentLayerDuringPIPMode
platformDependentScreenOrVideoContext
platformIdentifier
play
playImmediatelyAtRate:
playabilityMetrics
playabilityValidationResult
playable
playableMediaSelectionOptionsFromArray:
playbackBufferEmpty
playbackBufferFull
playbackControlDelegate
playbackCoordinator
playbackCoordinator:broadcastLocalParticipantStateDictionary:
playbackCoordinator:broadcastTransportControlStateDictionary:forItemWithIdentifier:
playbackCoordinator:didIssuePauseCommand:completionHandler:
playbackCoordinator:didIssuePlayCommand:completionHandler:
playbackCoordinator:didIssueSeekCommand:completionHandler:
playbackCoordinator:identifierForPlayerItem:
playbackCoordinator:interstitialTimeRangesForPlayerItem:
playbackCoordinator:reloadTransportControlStateForItemWithIdentifier:completionHandler:
playbackItem
playbackLikelyToKeepUp
playbackLikelyToKeepUpTrigger
playbackSessionID
playbackStartDate
playbackStartOffset
playbackType
player
playerAVAudioSession
playerAppliesAutomaticMediaSelectionToGroup:
playerBeingObserved
playerConnection
playerCurrentItemKVOInvoker
playerCurrentItemSink
playerIsDisplayingClosedCaptionsSink
playerItem
playerItem:shouldSeekToTime:toleranceBefore:toleranceAfter:
playerItemHasEnqueuedVideoFrameListener
playerItemOutputHostForPlayerItem:
playerItemTrackWithFigPlaybackItem:readyForInspection:trackID:asset:playerItem:
playerItemWeakReference
playerItemWithAsset:
playerItemWithAsset:automaticallyLoadedAssetKeys:
playerItemWithURL:
playerLayer
playerLayerWithPlayer:
playerLooperWithPlayer:templateItem:
playerLooperWithPlayer:templateItem:timeRange:
playerName
playerOriginalActionAtItemEnd
playerPlaybackCoordinator
playerRole
playerWithFigPlayer:
playerWithPlayerItem:
playerWithURL:
playoutLimit
pointValue
policyDictionary
port
postNotification:
postNotificationName:object:
postNotificationName:object:userInfo:
postProcessingVideoLayers
postVideoRectDidChangeNotification
precludeMultichannelAudio
precludedMediaSubTypes
predicateForChannelCount:mediaSelectionOption:operatorType:
predicateForPresentationHeight:operatorType:
predicateForPresentationWidth:operatorType:
predictedOutputDevice
preferCoordinatedPlaybackBehavior
preferMultichannelAudio
preferredDisplayCriteria
preferredFilenameExtension
preferredForwardBufferDuration
preferredFrameSize
preferredHardwareSampleRate
preferredIOBufferDuration
preferredLanguages
preferredMaximumResolution
preferredMaximumResolutionForExpensiveNetworks
preferredMediaCharacteristics
preferredMediaChunkAlignment
preferredMediaChunkDuration
preferredMediaChunkSize
preferredMediaSelection
preferredMediaSubTypes
preferredMinSampleCount
preferredMinimumResolution
preferredOutputSegmentInterval
preferredPeakBitRate
preferredPeakBitRateForExpensiveNetworks
preferredPeakPresentationSize
preferredRate
preferredSoundCheckVolumeNormalization
preferredTransform
preferredVideoDecoderGPURegistryID
prefersLikelyDestinationsOverCurrentRoutingSession
prefersOfflinePlayableVariants
prefersPlayingSilentlyWhenConflictingWithOtherPlayback
prefersStandardDynamicRange
preloadingRequestOptions
preloadsEligibleContentKeys
prepareInputsOperationsWithInputs:
prepareItem:withCompletionHandler:
prepareToEndSession
prepareToFinishWritingReturningError:
preparesItemsForPlaybackAsynchronously
prerendered
prerollAtRate:completionHandler:
prerollCompletionHandler
prerollDecodeWithCompletionHandler:
prerollForRenderingUsingHint:
prerollIDMutex
prerollOperationDidComplete:notificationPayload:
presentationSize
presentationSizePublisher
presentationTimeStamp
preserveSyncFrames
preservesTimeOffsetFromLive
presetName
prevStallCount
prevVariantIdx
preventsAutomaticBackgroundingDuringVideoPlayback
preventsChangesToSublayerHierarchy
preventsDisplaySleepDuringVideoPlayback
previousItem
primaryContentConfiguration
primaryItem
primaryPlayer
principalMediaCharacteristics
priority
probability
processContentKeyRequestForPSSHEntries:initializationData:groupID:options:
processContentKeyRequestForSinf:initializationData:groupID:options:
processContentKeyRequestForTransportStreamWithCodecType:initializationData:groupID:options:
processContentKeyRequestWithIdentifier:initializationData:options:
processContentKeyResponse:
processContentKeyResponseData:
processContentKeyResponseData:forTrackID:
processContentKeyResponseData:renewalDate:error:
processContentKeyResponseError:forTrackID:
processIdentifier
processInfo
processName
producesCombinableFragments
producesLowFidelityAudio
productName
productionApertureDimensions
progress
progressTowardsPlaybackLikelyToKeepUp
properties
propertyList
propertyList:isValidForFormat:
propertyListForProxy
propertyListForTextStyleRules:
propertyListWithData:options:format:error:
propertyValuePublisherWithObject:key:notificationName:
providePendingMediaData
providesControlForAllVolumeFeatures
providesExpiredSessionReports
providesExternalVideoPlayback
providesPersistableKey
providesPreciseDurationAndTiming
provisionalAlternateGroupID
provisionalInputs
proxyFoldedTimebase
proxyTimebase
proxyUnfoldedTimebase
publicKey
queueModifications
queuePlayerWithItems:
raise:format:
rampInOutInfo
ramps
rangeOfString:
rangeOfString:options:
rate
rateChangeIdentifier
rateDidChangeNotificationIncludesExtendedDiagnosticPayload
rateQueue
rateState
rateStateByInferringTimeControlStatusAndWaitingReasonBasedOnPresenceOfCurrentItem:hasCurrentInterstitialEvent:nameForLogging:
rateStateBySettingAutomaticallyWaitsToMinimizeStalling:
rateStateBySettingRate:nameForLogging:
rateStateBySettingTimeControlStatus:reasonForWaitingToPlay:nameForLogging:
rateStateBySettingUsesLegacyAutomaticWaitingBehavior:
rateStateByUpdatingBasedOnFigPlayer:hasCurrentItem:hasCurrentInterstitialEvent:nameForLogging:
rateStateByUpdatingBasedOnFigPlayerPlaybackState:hasCurrentInterstitialEvent:nameForLogging:
rateStateByUpdatingBasedOnPresenceOfCurrentInterstitialEvent:nameForLogging:
rateUpdateDuringTransitionDecided
readHudSettingsAndCallCompletionHandler:
readOnlyControlTimebase
readOnlyTimebase
readSingleSample
readWriteQueue
readable
readableTypeIdentifiersForItemProvider
reader
readyForMoreMediaData
readyToPlay
reapplyCurrentItemStateToPlaybackControlDelegate
reason
reasonForWaitingToPlay
receivesLongFormAudioFromLocalDevice
recentlyUsedDevices
recognizingSpeech
recommendedTimeOffsetFromLive
rectValue
redirect
reevaluateBackgroundPlayback
referenceRestrictions
referencedObject
refreshRate
refreshesClosedCaptionsImmediatelyAfterSeeking
registerCallbackContextObject:
registerDownloadLocation:forURLAsset:
registerForScreenConnectionChanges
registerLocalDeviceDidChangeListener:
rejectProtectionSpaceAndContinueWithChallenge:
remoteCustomURLHandlerContextForPID:
removeAllAnimations
removeAllItems
removeAllObjects
removeAnimationForKey:
removeAnimationsForKey:
removeAudioPlaybackRateLimits
removeContentKeyRecipient:
removeEntryForKey:
removeFragmentedAsset:
removeFragmentedMovie:
removeFrecencyInfoForDeviceID:
removeFromSuperlayer
removeItem:
removeItemAtURL:error:
removeItemFromPlayQueue
removeListenerWithWeakReference:callback:name:object:
removeMediaDataCollector:
removeMediaDataCollector:locked:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsInArray:
removeObserver:forKeyPath:
removeObserver:forKeyPath:context:
removeOutput:
removeOutputDevice:
removeOutputDevice:options:completionHandler:
removeOutputDevice:withOptions:completionHandler:
removeOutputDevice:withOptions:completionhandler:
removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:
removeRenderer:atTime:completionHandler:
removeRenderer:atTime:withCompletionHandler:
removeRequestedPixelBufferAttributesAttributesForKey:
removeResourcesForID:
removeTimeObserver:
removeTimeRange:
removeTrack:
removeTrackAssociationToTrack:type:
removeVideoTarget:
render:toCVPixelBuffer:
renderContext
renderContextChanged:
renderContextPropertiesFromFigCompositor:
renderScale
renderSize
rendererListQueue
rendererTrackedBySTS
renderers
renditionSpecificAttributesForMediaOption:
renewExpiringContentKeyResponseData
renewExpiringContentKeyResponseDataForTrackID:
renewExpiringResponseDataForContentKeyRequest:
renewalDate
renewsExpiringResponseData
replaceCurrentItemWithPlayerItem:
replaceFormatDescription:withFormatDescription:
replaceObjectAtIndex:withObject:
replaceSublayer:with:
replacementFormatDescription
reportGroup
requestBlock
requestCarUI
requestCarUIForURL:
requestCarUIForURL:withUUID:
requestID
requestInfo
requestMediaDataIfNecessary
requestMediaDataOnceIfNecessaryWithMediaDataRequester:
requestMediaDataWhenReadyOnQueue:usingBlock:
requestNotificationOfMediaDataChangeAsSoonAsPossible
requestNotificationOfMediaDataChangeWithAdvanceInterval:
requestQueue
requestTurnByTurnNavigationOwnership
requestViewArea:forScreenID:
requestWithRequest:id:
requestedTimeToleranceAfter
requestedTimeToleranceBefore
requestor
requests
requestsAllDataToEndOfResource
requestsQueue
requiredPixelBufferAttributesForRenderContext
requiredSourceSampleDataTrackIDs
requiredSourceTrackIDs
requiresAccessLog
requiresAuthorization
requiresFlushToResumeDecoding
requiresFrameReordering
requiresInProcessOperation
requiresSecureCoding
requiresSecurityScopeRelease
resetAudioBufferedAhead
resetForReadingTimeRanges:
resetOutputDeviceForAllOutputContexts
resetPlatformIdentifierForQueue:
resetPredictedOutputDevice
resetUpcomingSampleBufferPresentationTimeExpectations
resolvedMediaSelection
resolvedURL
resourceConservationLevelWhilePaused
resourceLoader
resourceLoader:didCancelAuthenticationChallenge:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
respondByRequestingPersistableContentKeyRequest
respondByRequestingPersistableContentKeyRequestAndReturnError:
respondToEachPassDescriptionOnQueue:usingBlock:
respondToNewPassDescription:
respondWithAuthorizationToken:completionHandler:
respondWithData:
respondWithError:
respondWithValue:
respondWithValue:dataType:
respondsToSelector:
response
responseInfoSentOnceToken
responseParamsSent
restrictions
restrictsAutomaticMediaSelectionToAvailableOfflineOptions
resume
resumptionOffset
retain
retainCount
retainInterstitialEventCoordinator
retrieveSessionWithID:
reversePlaybackEndTime
reversesMoreVideoFramesInMemoryWasSet
rightBatteryLevel
rightHandDrive
routeDetectionEnabled
routeDetectionSuspended
routeSharingPolicy
runBlockOnce:
runLoopStateWithRunLoop:
sampleBufferAudioRenderer
sampleBufferAvailabilityCondition
sampleBufferCoalescingInterval
sampleBufferOutputs
sampleBufferRequestWithStartCursor:
sampleBufferSourcesByTrackID
sampleBufferVideoRenderer
sampleCursorWithFigSampleCursor:
sampleDataTrackIDs
samplePresentationTimeForTrackTime:
sampleRate
sampleRateForMediaOption:
sampleReferenceBaseURL
samplesRequiredForDecoderRefresh
samplesWithEarlierDecodeTimeStampsMayHaveLaterPresentationTimeStampsThanCursor:
samplesWithLaterDecodeTimeStampsMayHaveEarlierPresentationTimeStampsThanCursor:
savesDownloadedDataToDiskWhenDone
scaleTimeRange:toDuration:
scanCharactersFromSet:intoString:
scanString:intoString:
scanUnsignedLongLong:
scannerWithString:
scheduleBlock:
scheduledAudioParameters
scheme
screenID
screenIDs
screenInputCapabilities
screenPrimaryInputDevices
screenScale
seamIdentifier
secondLevelPropertyKey
secondaryImpl
securityScopedURL
seekCompletionHandler
seekIDMutex
seekQueue
seekToDate:
seekToDate:completionHandler:
seekToTime:
seekToTime:completionHandler:
seekToTime:toleranceBefore:toleranceAfter:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
seekToTime:toleranceBefore:toleranceAfter:seekID:
seekableTimeRanges
seekableTimeRangesLastModifiedTime
seekingWaitsForVideoCompositionRendering
segmentForTrackTime:
segmentType
segments
segmentsAsPresented
segmentsDownloadedDuration
segmentsExcludeAudioPrimingAndRemainderDurations
selectMediaOption:inMediaSelectionGroup:
selectMediaOptionAutomaticallyInMediaSelectionGroup:
selectedMediaArray
selectedMediaOptionInMediaSelectionGroup:
self
selfContained
sendAuthResponse:requestID:disposition:credential:authHandler:
sendCommand:withParameters:
sendData:completionHandler:
sendH2Ping:pongHandler:
sender
sequenceNumber
serialNumber
serialQueue
serializableRepresentation
serverAddress
serviceIdentifier
sessionReference
sessionWithConfiguration:delegate:delegateQueue:
sessionWithVideoComposition:recyclingSession:
setAVKitData:
setActionAtItemEnd:
setActivationContext:error:
setActive:error:
setActive:withFlags:error:
setActiveHapticChannelIndex:
setAdvanceIntervalForDataAvailability:
setAdvanceIntervalForDelegateInvocation:
setAdvanceTimeForOverlappedPlayback:
setAggressivelyCachesVideoFrames:
setAlignmentMode:
setAlignsResumptionWithPrimarySegmentBoundary:
setAlignsStartWithPrimarySegmentBoundary:
setAllHTTPHeaderFields:
setAllowProgressiveResume:
setAllowProgressiveStartup:
setAllowProgressiveSwitchUp:
setAllowableMIMETypes:
setAllowedAudioSpatializationFormats:
setAllowsAirPlayVideo:
setAllowsExtendedReadAhead:
setAllowsExternalPlayback:
setAllowsHeadTrackedSpatialAudio:error:
setAllowsLegibleFallbackForAllAudibleMediaSelections:
setAllowsOutOfBandTextTrackRendering:
setAllowsPixelBufferPoolSharing:
setAlternateGroupID:
setAlwaysCopiesSampleData:
setAlwaysMonitorsPlayability:
setAnimationTool:
setApertureMode:
setAppIdentifier:
setApplicationAudioSession:
setApplicationProcessID:
setAppliesMediaSelectionCriteriaAutomatically:
setAppliesPerFrameHDRDisplayMetadata:
setAppliesPreferredTrackTransform:
setArgument:atIndex:
setAudioMix:
setAudioOutputDeviceUniqueID:
setAudioSession:
setAudioSpatializationAllowed:
setAudioTapProcessor:
setAudioTimePitchAlgorithm:
setAudioTrackGroupHandling:
setAudiovisualBackgroundPlaybackPolicy:
setAutoSwitchAtmosStreamVariants:
setAutoSwitchStreamVariants:
setAutomaticallyHandlesInterstitialEvents:
setAutomaticallyPreservesTimeOffsetFromLive:
setAutomaticallyWaitsToMinimizeStalling:
setAuxiliaryContentConfigurations:
setBackgroundColor:
setBackgroundPIPAuthorizationToken:
setBlendingTransferFunction:
setBlendsVideoFrames:
setBluetoothServices:
setBonjourServiceTypes:
setBounds:
setBridge:
setBuiltInCompositorName:
setBundleID:
setByAddingObjectsFromSet:
setByValue:
setByteRangeAccessSupported:
setCachedDateFormatterFormat:
setCanPerformMultiplePassesOverSourceMediaData:
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
setCancellationTest:
setCaptionContentInsets:
setCaptionPipelineStrategy:
setCaptionRenderingStrategy:
setCaptionsAvoidanceMargins:
setCaptureCompleteURI:
setCategory:error:
setCleanApertureDimensions:
setColor:
setColorPrimaries:
setColorTransferFunction:
setColorYCbCrMatrix:
setCommitTime:
setCommunicationChannelDelegate:
setCompletionBlock:
setCompletionHandler:
setCompositingRequest:
setCompositionFrame:
setCompositionTime:
setConfiguredTimeOffsetFromLive:
setConnection:
setContentIdentifier:
setContentKeySession:
setContentLength:
setContentsScale:
setContinuesPlayingDuringPrerollForRateChange:
setContinuesPlayingDuringPrerollForSeek:
setControlTimebase:
setCoordinationMediumDelegate:
setCropRectangle:atTime:
setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:
setCurrentBluetoothListeningMode:
setCurrentBluetoothListeningMode:error:
setCurrentBundleIdentifier:
setCurrentPassDescription:
setCustomURLRequest:
setCustomURLResponse:
setCustomVideoCompositorClass:
setDataType:
setDate:
setDecodesAllFramesDuringOrdinaryPlayback:
setDefaultCIContextProvider:
setDefaultMediaDataStorage:
setDefaultPropertyValuesToConfigurationState:outputURL:fileType:
setDelaysRateChangeUntilHasSufficientMediaData:
setDelegate:
setDelegate:queue:
setDetectsCustomRoutes:
setDirection:
setDirectoryForTemporaryFiles:
setDisableActions:
setDisableColorMatching:
setDisallowsAMRAudio:
setDisallowsHardwareAcceleratedVideoDecoder:
setDiscoveryMode:
setDiscoveryMode:forClientIdentifiers:
setDiskCachingPermitted:
setDispatchQueue:
setDisplayLayerVisibility:
setDuration:
setEdgeAntialiasingMask:
setEffectParameters:
setEnablePostProcessing:
setEnabled:
setEncodedPixelsDimensions:
setEndDate:
setEntireLengthAvailableOnDemand:
setEnvironmentalConditions:
setEventHandler:
setEvents:
setExcludeFromAutoSelection:
setExpectedAssetTypes:
setExpectsMediaDataInRealTime:
setExpirationDate:
setExtendedLanguageTag:
setExternalPlaybackVideoGravity:
setExtraAttributes:
setFigAssetProvider:
setFigAudioRendererFactory:forQueue:
setFigCPEProtectorSessionIdentifier:
setFigDimensions:
setFigPlaybackCoordinator:
setFigRenderSynchronizerFactory:forQueue:
setFigTrackMatrix:
setFileLengthLimit:
setFinishWritingDelegate:
setFont:
setFontSize:
setForScrubbingOnly:
setForegroundColor:
setFormatDescriptions:
setFormatTemplate:
setForwardPlaybackEndTime:
setFrame:
setFrameDuration:
setFrecencyInfo:forDeviceID:
setFromValue:
setFullWidth:
setGeometryFlipped:
setHapticVolume:
setHeadTrackedSpatialAudioMode:error:
setHidden:
setIFramePrefetchTargetDimensions:
setIdentifier:
setImageQueueInterpolationCurve:
setImmutable
setImplEventListener:
setInheritsTiming:
setInitialEstimatedDate:
setInitialMovieFragmentSequenceNumber:
setInitialSegmentStartTime:
setInitializationData:
setInputMode:
setInputParameters:
setInputPropertiesFromASBD:
setInputs:
setInstructions:
setInterleavingPeriod:
setIsFinished:
setIsRightToLeft:
setItems:
setKeyPath:
setKeySpace:
setLanczosFilterDownscaleFactor:
setLanczosFilterDownscalingEnabled:
setLanguageCode:
setLayer:
setLayerInstructions:
setLayersAreSuppressed:
setLegibleContentInsets:
setLegibleDisplayEnabled:
setLegibleFallbackMediaSelectionCriteria:
setLimitReadAhead:
setLocale:
setLoggingIdentifier:
setLoopTimeRange:
setLoudnessInfo:
setMarksOutputTrackAsEnabled:
setMasksToBounds:
setMaxEntrySize:
setMaxRateForAudioPlayback:
setMaxSampleCount:
setMaxSize:
setMaximizePowerEfficiency:
setMaximumBitRate:
setMaximumForwardBufferDuration:
setMaximumTimePlayedToDuringOverlappedPlayback:
setMaximumTrailingBufferDuration:
setMediaCharacteristics:
setMediaDataLocation:
setMediaDataStorage:
setMediaFileType:
setMediaKind:
setMediaSelectionCriteria:forMediaCharacteristic:
setMediaSelections:
setMediaTimeScale:
setMediaType:
setMediumLoggingIdentifier:
setMetadata:
setMetadataItemFilter:
setMetadataItems:
setMetrics:
setMinRateForAudioPlayback:
setMinVideoFrameDuration:
setMindingInterval:
setMinificationFilter:
setMinimumIntegerDigits:
setMinimumIntervalForIFrameOnlyPlayback:
setMode:
setMode:error:
setModified:
setMovieFragmentInterval:
setMovieTimeScale:
setMultichannelAudioStrategy:
setMuted:
setName:
setNaturalTimeScale:
setNeedsLayout
setNonForcedSubtitleDisplayEnabled:
setNumberFormatterWithOneMinimumIntegerDigits:
setNumberFormatterWithTwoMinimumIntegerDigits:
setObject:forKey:
setObject:forKeyedSubscript:
setOpacity:
setOpacity:atTime:
setOpacityRampFromStartOpacity:toEndOpacity:timeRange:
setOptimizesAuxiliaryContentConfigurations:
setOptions:
setOutput:
setOutputBitsPerChannel:
setOutputChannelCount:
setOutputContext:
setOutputDataRate:
setOutputDelegate:queue:
setOutputDevice:forFeatures:
setOutputDevice:options:
setOutputDevice:options:completionHandler:
setOutputDevices:
setOutputDevices:options:completionHandler:
setOutputFileType:
setOutputFileTypeProfile:
setOutputFormat:
setOutputFormatFlags:
setOutputSampleRate:
setOutputSettings:
setOutputURL:
setOverallDurationHint:
setOverrideTime:
setOverscanSubtitleSupportEnabled:
setPIPModeEnabled:
setParentAuthorizationSession:
setParentChannel:
setParentCommunicationChannel:
setParentOutputContext:
setParentOutputContextManager:
setParentOutputDevice:
setParentOutputDeviceDiscoverySession:
setParentOutputDeviceGroup:
setParticipantLimit:forWaitingOutSuspensionsWithReason:
setPauseSnapsToMediaTimeOfOriginator:
setPerformsMultiPassEncodingIfSupported:
setPixelBufferAttributes:
setPlaceholderContentLayerDuringPIPMode:
setPlaybackLikelyToKeepUpTrigger:
setPlayer:
setPlayerItem:
setPlayerRole:
setPlayerRole:synchronously:
setPlayoutLimit:
setPosition:
setPreferCoordinatedPlaybackBehavior:
setPreferredChunkAlignment:
setPreferredChunkDuration:
setPreferredChunkSize:
setPreferredDisplayCriteria:
setPreferredForwardBufferDuration:
setPreferredHardwareSampleRate:error:
setPreferredIOBufferDuration:error:
setPreferredMaximumAudioSampleRate:
setPreferredMaximumResolution:
setPreferredMaximumResolutionForExpensiveNetworks:
setPreferredMediaChunkAlignment:
setPreferredMediaChunkSize:
setPreferredMinSampleCount:
setPreferredMinimumResolution:
setPreferredOutputSegmentInterval:
setPreferredPeakBitRate:
setPreferredPeakBitRateForExpensiveNetworks:
setPreferredPeakPresentationSize:
setPreferredRate:
setPreferredTransform:
setPreferredVideoDecoderGPURegistryID:
setPreferredVolume:
setPrefersOfflinePlayableVariants:
setPrefersPlayingSilentlyWhenConflictingWithOtherPlayback:
setPreparesItemsForPlaybackAsynchronously:
setPresenceOnly:
setPreserveSyncFrames:
setPrevStallCount:
setPrevVariantIdx:
setPreventsAutomaticBackgroundingDuringVideoPlayback:
setPreventsCapture:
setPreventsChangesToSublayerHierarchy:
setPreventsDisplaySleepDuringVideoPlayback:
setPriority:
setProductionApertureDimensions:
setRTCReportingFlags:
setRate:
setRate:time:
setRate:time:atHostTime:
setRate:time:atHostTime:error:
setRate:time:atHostTime:options:
setRedirect:
setRefreshesClosedCaptionsImmediatelyAfterSeeking:
setRenderContext:
setRenderSize:
setRenderSynchronizer:error:
setRequestedPixelBufferAttributes:forKey:
setRequestedTimeToleranceBefore:
setRequiredSourceSampleDataTrackIDs:
setRequiresAccessLog:
setRequiresInProcessOperation:
setResourceConservationLevelWhilePaused:
setResourceLoader:
setResponse:
setRestrictions:
setRestrictsAutomaticMediaSelectionToAvailableOfflineOptions:
setResumptionOffset:
setReversePlaybackEndTime:
setReversesMoreVideoFramesInMemory:
setRouteDetectionEnabled:
setSTSLabel:
setSampleBufferCoalescingInterval:
setSampleBufferSourcesByTrackID:
setSampleReferenceBaseURL:
setSavesDownloadedDataToDiskWhenDone:
setSecondDisplayEnabled:
setSecondDisplayMode:completionHandler:
setSeekingWaitsForVideoCompositionRendering:
setSegments:
setSelector:
setSeparatedState:
setServiceIdentifier:
setSession:
setShouldCancelAllRequests:
setShouldProvideMediaData:forTrackID:
setShouldReduceResourceUsage:
setShouldResizeVideoLayer:
setShouldWaitForVideoTarget:
setSignalSource:
setSignaled:
setSinglePassFileSize:
setSinglePassMediaDataSize:
setSnapTimeToPausePlayback:
setSoundCheckVolumeNormalization:
setSourceAudioFormat:
setSourceCIImage:
setSourceFormatHint:
setSourcePBuf:
setSourceSampleBufferTrackIDsInClientOrder:
setSourceSampleDataTrackIDs:
setSourceTrackPreferredTransform:
setSourceVideoAverageFrameDuration:
setSourceVideoFormat:
setSourcesByTrackID:
setSpatialDiagnostics:
setSpeedThresholdForIFrameOnlyPlayback:
setStartDate:
setStartsOnFirstEligibleVariant:
setStatus:
setStorageManagementPolicy:forURL:
setString:
setStyle:
setSublayerTransform:
setSublayers:
setSupportsRandomAccess:
setSuppressesPlayerRendering:
setSuspensionReasonsThatTriggerWaiting:
setTarget:
setTargetAudioSession:
setTemplateItems:
setTextHighlightArray:
setTextStyleRules:
setTextStylingResolution:
setTime:
setTimeRange:
setTimeToPauseBuffering:
setTimeToPausePlayback:
setTimescale:
setTimingFunction:
setToValue:
setToneMapToStandardDynamicRange:
setTotalStallCount:
setTrackID:
setTrackReferences:
setTransform:
setTransform:atTime:
setTransformRampFromStartTransform:toEndTransform:timeRange:
setTruncationMode:
setURLSession:
setUnderlyingQueue:
setUpWithOutputSettings:outputSettingsArePixelBufferAttributes:withExceptionReason:
setUserDefinedAttributes:
setUserInfoObject:forURLAsset:
setUsesAirPlayVideoWhileAirPlayScreenIsActive:
setUsesAudioOnlyModeForExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setUsesIFrameOnlyPlaybackForHighRateScaledEdits:
setUsesMinimalLatencyForVideoCompositionRendering:
setUsesVirtualCaptureCard:
setUsingLongFormAudio:error:
setValue:
setValue:forHTTPHeaderField:
setValue:forKey:
setValue:forKeyPath:
setValue:forUndefinedKey:
setValues:
setVariantIndex:
setVariantPreferences:
setVariantQualifiers:
setVersion:
setVibrationPattern:
setVideoApertureMode:
setVideoComposition:
setVideoEncoderSpecification:
setVideoEnhancementFilterOptions:
setVideoEnhancementMode:
setVideoFrameRateConversionAlgorithm:
setVideoGravity:
setVideoRelativeToViewport:
setVideosize:
setViewAreaIndex:andAdjacentViewAreas:forScreenID:
setViewport:
setVolume:
setVolume:atTime:
setVolumeAdjustment:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
setVolumeRampFromStartVolume:toEndVolume:timeRange:rampMode:
setWeakReferenceToAssetWriter:
setWeakReferenceToAssetWriterInput:
setWillNeverSeekBackwardsHint:
setWillPlayOnce:
setWithArray:
setWithCapacity:
setWithObject:
setWithObjects:count:
setWithSet:
setWrapped:
setWritesMediaDataToBeginningOfFile:
setWritesSinglePassUsingPredeterminedFileSize:mediaDataSize:
sharedAVKitUXMDisplayManager
sharedAVSystemController
sharedAudioPresentationOutputContext
sharedAudioPresentationOutputGroup
sharedAuthorizationSession
sharedCallbackContextRegistry
sharedDownloadStorageManager
sharedExecutionEnvironment
sharedInstance
sharedKVODispatcher
sharedLocalDevice
sharedSession
sharedSystemAudioContext
sharedSystemRemotePoolContext
sharedSystemScreenContext
shortValue
shouldBufferInAnticipationOfPlayback
shouldCancelAllRequests
shouldMatchDataInCacheByURLPathComponentOnly
shouldMatchDataInCacheByURLWithoutQueryComponent
shouldOptimizeForNetworkUse
shouldProvideMediaDataForTrackID:
shouldReduceResourceUsage
shouldRespondToInitialPassDescription
shouldTagBuffersWithInfo
shouldWaitForVideoTarget
showInterstitialInstead
signal
signalSource
signaled
silencesOtherPlaybackDuringPIP
singlePassFileSize
singlePassMediaDataSize
siriRequestedWithAction:
size
sizeOfEntryForKey:
sizeValue
snapTimeToPausePlayback
sortUsingComparator:
sortedArrayUsingComparator:
sortedArrayUsingFunction:context:
soundCheckVolumeNormalization
sourceAudioFormat
sourceCIImage
sourceClock
sourceFormatDescription
sourceFormatHint
sourceFrameByTrackID:
sourceImage
sourcePBuf
sourcePixelBufferAttributes
sourceSampleBufferByTrackID:
sourceSampleBufferTrackIDsInClientOrder
sourceSampleDataTrackIDs
sourceSampleDataTracks
sourceTimeRanges
sourceTimedMetadataByTrackID:
sourceTrackID
sourceTrackIDForFrameTiming
sourceTrackIDs
sourceTrackIDsInClientOrder
sourceTrackPreferredTransform
sourceURL
sourceVideoFormat
sourceVideoMinFrameDuration
sourcesByTrackID
spatialDiagnostics
speedThresholdForIFrameOnlyPlayback
speedThresholdForIFrameOnlyPlaybackWasSet
start
startAccessingSecurityScopedResource
startCompositionTime
startCursor
startDate
startDispatchTimer
startLoadingMetadata
startObservingObject:weakObserver:forKeyPath:options:context:
startObservingObject:weakObserver:forTwoPartKeyPath:options:context:
startObservingValueAtKeyPath:ofObject:options:usingBlock:
startObservingValueAtKeyPath:withoutKeepingAliveObservedObject:options:usingBlock:
startObservingValueAtTwoPartKeyPath:ofObject:options:usingBlock:
startPassAnalysis
startReading
startRedirectingVideoToLayer:forMode:
startRequestingMediaData
startRoutingSessionForHighConfidenceExternalDestinationIfPresentWithCompletionHandler:
startRoutingSessionWithOutputDeviceDescriptions:error:
startSessionAtSourceTime:
startSuppressingLikelyDestinationsUntilNextPlayEventAndReturnError:
startVideoCompositionRequest:
startWriting
startsOnFirstEligibleVariant
startupTime
stateDispatchQueue
stateMutex
stateQueue
status
statusCode
statusOfOperations:error:
statusOfValueForKey:
statusOfValueForKey:error:
statusReadWriteQueue
stepByCount:
stepByDecodeTime:
stepByDecodeTime:wasPinned:
stepByPresentationTime:
stepByPresentationTime:wasPinned:
stepInDecodeOrderByCount:
stop
stopAccessingSecurityScopedResource
stopRedirectingVideoToLayer:
stopRequestingMediaData
stopRespondingToPassDescriptions
stopSuppressingLikelyDestinationsAndReturnError:
storageManagementPolicyForURL:
storageURL
streamDataParser:didFailToParseStreamDataWithError:
streamDataParser:didParseStreamDataAsAsset:withDiscontinuity:
streamDataParser:didProvideContentKeyRequestInitializationData:forTrackID:
streamDataParser:didProvideContentKeySpecifier:forTrackID:
streamDataParser:didProvideMediaData:forTrackID:mediaType:flags:
streamDataParser:didReachEndOfTrackWithTrackID:mediaType:
streamDataParserWillProvideContentKeyRequestInitializationData:forTrackID:
streamDataParsers
streaming
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
streamingContentKeyRequestDataForApp:contentIdentifier:trackID:options:error:
streamingKeyRequestCompletionHandler
string
stringByAbbreviatingWithTildeInPath
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringForObjectValue:
stringFromCMTime:
stringFromNumber:
stringFromSeconds:
stringFromTimeInterval:
stringValue
stringWithCString:encoding:
stringWithFormat:
stringWithString:
stringWithUTF8String:
stringWithValidatedFormat:validFormatSpecifiers:error:
strongToWeakObjectsMapTable
style
subarrayWithRange:
sublayerTransform
sublayers
subscribeRequestingInitialValue:block:
subsequentEndCompositionTime
subsequentStartCompositionTime
subtitleAlternatesTrackGroup
subtitleLayer
subtitleLayers
superclass
superlayer
supportedFeatures
supportedFileTypes
supportedMediaTypes
supportsAnalysisReporting
supportsBluetoothSharing
supportsBufferedAirPlay
supportsDataOverACLProtocol
supportsEmptyOutputSettingsDictionary
supportsFitnessDataDestination
supportsHDRSourceFrames
supportsMultipleBluetoothOutputDevices
supportsMultipleOutputDevices
supportsOutputSettings:reason:
supportsPlayerItems
supportsRandomAccess
supportsSampleReferences
supportsSecureCoding
supportsWideColorSourceFrames
suppressesAudioOnlyVariants
suppressesAudioRendering
suppressesPlayerRendering
suppressesVideoLayers
suspensionExpected
suspensionReasons
suspensionReasonsThatTriggerWaiting
sweepFilterEffectParametersWithMinimumCutOffFrequency:maximumCutOffFrequency:bypassThreshold:sweepValue:
sweepFilterEffectWithSweepValue:
sweepValue
switchBitrate
switchToLatestPublisherWithUpstream:
syncAudioSessionToInterstitialPlayer:
syncLayers
synchronizedLayerWithPlayerItem:
takeScreenForClient:reason:
takeScreenForConnection
targetAudioSession
taskState
templateItems
templatePlayerItem
textHighlightArray
textMarkupAttributes
textSelector
textStyleRuleWithTextMarkupAttributes:
textStyleRuleWithTextMarkupAttributes:textSelector:
textStyleRules
textStylingResolution
time
timeControlStatus
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeJumpedNotificationIncludesExtendedDiagnosticPayload
timeMapping
timeRange
timeRanges
timeToPauseBuffering
timeToPausePlayback
timebase
timebaseReadWriteQueue
timedMetadata
timedMetadataGroupInternal
timedRenderRemovals
timescale
timingFunction
topLevelDependencyProperty
topLevelPropertyKey
totalNumberOfVideoFrames
totalSampleDataLength
track
trackCount
trackEnumeratorWithAsset:
trackGroups
trackIDs
trackIDsForAssetWithFigPlaybackItem
trackInspector
trackOutput
trackReports
trackRequest:byRequestID:
trackWaitingSemaphore
trackWithTrackID:
trackWithTrackID:forMovie:
trackedTransportControlStateDictionaries
tracks
tracksAccessQueue
tracksInitializationOnce
tracksWithMediaCharacteristic:
tracksWithMediaType:
transactionMetrics
transferDuration
transform
transformRamps
transitionAssetWriterAndAllInputsToFailedStatusWithError:
transitionToAndReturnTerminalHelperWithTerminalStatus:
transitionToFailedStatusWithError:
transitionToItemWithIdentifier:proposingInitialTimingBasedOnTimebase:
transitionToTerminalStatusOperation
transportType
trimsSampleDurations
typeWithFilenameExtension:
typeWithIdentifier:
typeWithMIMEType:
typesWithTag:tagClass:conformingToType:
unarchivedObjectOfClass:fromData:error:
unfinishedOperations
unfoldedFigTimebase
unfoldedTimebase
unicodeLanguageCode
unicodeLanguageIdentifier
unionSet:
uniqueID
unlock
unregisterCallbackContextForToken:
unsignedCharValue
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
unusedTrackID
update
updateBounds:
updateCurrentRoutingSessionFromLikelyDestinationsWithCompletionHandler:
updateFrecencyListForDeviceID:
updateFrecencyScore
updateFromPlayer
updateFromPlayerItem
updateHudWithDisplayString:
updateNonForcedSubtitleDisplayEnabled:
useContentKeyBoss
useCredential:forAuthenticationChallenge:
userDefinedAttributes
userInfo
userInfoObjectForURLAsset:
userInfoObjectForURLAssetInstanceIdentifier:
userVolume
usesAirPlayVideoWhileAirPlayScreenIsActive
usesAudioOnlyModeForExternalPlayback
usesExternalPlaybackWhileExternalScreenIsActive
usesIFrameOnlyPlaybackForHighRateScaledEdits
usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet
usesLegacyAutomaticWaitingBehavior
usesMinimalLatencyForVideoCompositionRendering
usesVirtualCaptureCard
usingLongFormAudio
validate:
validateAudioOutputSettings:reason:
validateOutputSettingsDictionary:
validateTrackSegments:error:
validateUsingOutputSettingsValidator:reason:
validateVideoOutputSettings:reason:
validateWithError:
validatesSourceVideoMinFrameDuration
value
value:withObjCType:
valueErrorCode
valueForKey:
valueForKey:dependsOnValueAtKeyPath:
valueForKeyForKVO:
valueForUndefinedKey:
valueLoadedForKey:onObject:
valueLoadingError
valueLoadingHandler
valueRequest
valueStatus
valueWithBytes:objCType:
valueWithCATransform3D:
valueWithCMTime:
valueWithCMTimeMapping:
valueWithCMTimeRange:
valueWithCMVideoDimensions:
valueWithNonretainedObject:
valueWithPointer:
valueWithRect:
values
variantIndex
variantPreferences
variantQualifiers
variants
vibrationPattern
videoApertureMode
videoCodecType
videoComposition
videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:
videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:
videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:
videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:inLayer:
videoCompositionInstruction
videoCompositionLayerInstruction
videoCompositionLayerInstructionWithAssetTrack:
videoCompositionOutputColorPropertiesWithCustomCompositor:formatDescriptions:colorPrimaries:transferFunction:yCbCrMatrix:
videoCompositionWithAsset:applyingCIFiltersWithHandler:
videoCompositionWithAsset:applyingCIFiltersWithHandler:completionHandler:
videoCompositionWithPropertiesOfAsset:
videoCompositionWithPropertiesOfAsset:completionHandler:
videoCompositionWithPropertiesOfAsset:prototypeInstruction:
videoCompositionWithPropertiesOfAsset:prototypeInstruction:completionHandler:
videoCompositionWithPropertiesOfAsset:videoGravity:
videoCompressionProperties
videoDynamicRange
videoEncoderCapabilities
videoEncoderSpecification
videoEnhancementFilterOptions
videoEnhancementMode
videoFieldMode
videoFrameRateConversionAlgorithm
videoGravity
videoLayer
videoLayers
videoLayersAreAttached
videoOutputSettings
videoOutputSettingsWithTrustedVideoSettingsDictionary:
videoOutputSettingsWithVideoSettingsDictionary:
videoPerformanceMetrics
videoRange
videoRect
videoScalingProperties
videoSettings
videoSettingsAdjuster
videoSettingsDictionary
videoTargets
videoTracks
virtualCaptureCardSupported
volume
volumeAdjustment
volumeControlType
wait
waitInMode:
waitUntilDate:
waitUntilDate:inMode:
waitUntilEventIsCompleted
waitUntilFinished
waitingForLastLoopingCopyToFinish
wasInitializedWithURL
weakContentKeyBoss
weakContentKeySession
weakObjectsHashTable
weakObservationBlockForWeakObserver:passedToBlock:
weakObserver
weakReference
weakReferenceToAsset
weakReferenceToAssetReader
weakReferenceToAssetWriter
weakReferenceToAttachedAdaptor
weakReferenceToDelegate
weakReferenceToExternalDevice
weakReferenceToHost
weakReferenceToLoadingRequest
weakReferenceToMetadataItem
weakReferenceToPlayerItem
weakReferenceToResourceLoader
weakReferenceToSelf
weakReferenceToSynchronizer
weakSession
whitelist
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
width
willChangeValueForKey:
willEnterForegroundNotificationToken
willManageSublayersAsSwappedLayers
willNeverSeekBackwardsHint
willOutputBeObscuredDueToInsufficientExternalProtectionForDisplays:
willPlayOnce
willTrimShortDurationAudioSamples
willTrimShortDurationSamples
willYieldCompressedSamples
windowScene
windowSceneDidEnterBackgroundListener
windowSceneWillEnterForegroundListener
worksAroundConcurrentKVOCrash
writableTypeIdentifiersForItemProvider
writeMovieHeaderToURL:fileType:options:error:
writeToFile:options:error:
writeToURL:options:error:
writesMediaDataToBeginningOfFile
zone
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v20@0:8f16
q16@0:8
v24@0:8@16
f16@0:8
v40@0:8@"AVOutputDevice"16@"NSDictionary"24@?<v@?@"AVOutputDeviceGroupMembershipChangeResult">32
@"AVOutputDeviceGroup"16@0:8
v24@0:8@"AVOutputDeviceGroup"16
@"NSArray"16@0:8
@"AVOutputDevice"16@0:8
@24@0:8@16
v16@0:8
@"AVOutputContext"
@"AVOutputDeviceGroup"
@"AVQueuePlayer"
@"AVPlayerItem"
@"NSMutableArray"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
@"NSObject<OS_dispatch_queue>"
{?="value"q"timescale"i"flags"I"epoch"q}
@"NSError"
@"<AVCallbackCancellation>"
@"AVWeakReference"
@80@0:8@16@24{?={?=qiIq}{?=qiIq}}32
@32@0:8@16@24
i16@0:8
B24@0:8^@16
v48@0:8@16@24@32^v40
@"AVPlayerLooperInternal"
v32@0:8^q16^@24
^{OpaqueFigSimpleMutex=}
@"AVAssetReaderTrackOutput"
i48@0:8@16^{OpaqueFigAssetReader=}24@32^i40
i48@0:8@"AVAssetReaderTrackOutput"16^{OpaqueFigAssetReader=}24@"NSDictionary"32^i40
@"AVAssetReaderOutputMetadataAdaptorInternal"
@"NSDictionary"
d16@0:8
@"AVVideoPerformanceMetricsInternal"
@"<AVOutputDeviceDiscoverySessionImpl>"
@"<AVOutputDeviceDiscoverySessionAvailableOutputDevicesImpl>"
@24@0:8Q16
v24@0:8q16
v32@0:8q16@24
v32@0:8@16@24
@"AVOutputDeviceDiscoverySessionInternal"
@"AVOutputDeviceDiscoverySessionAvailableOutputDevicesInternal"
v24@0:8@?16
v24@0:8#16
v20@0:8B16
v32@0:8@16@?24
B28@0:8B16^@20
B32@0:8@16^@24
v40@0:8@?16@24@?32
v32@0:8@"NSString"16@?<v@?@@"NSError">24
B32@0:8@"NSString"16^@24
v40@0:8@?<v@?@"<AVOutputDeviceConfigurationModification>">16@"NSDictionary"24@?<v@?q@"<AVOutputDeviceConfigurationRetrieval>"@"NSString"@"NSError">32
@"<AVOutputDeviceImplSupport>"16@0:8
v24@0:8@"<AVOutputDeviceImplSupport>"16
@"NSData"16@0:8
@"NSNumber"16@0:8
@"NSDictionary"16@0:8
@32@0:8^{OpaqueAPSyncController=}16@24
v24@0:8^{__CFString=}16
^{OpaqueAPSyncController=}
@"<AVOutputDeviceImpl>"
@"<AVOutputDeviceImplSupport>"
@"AVNetworkPlaybackPerfHUDLayer"
@"AVKeyPathDependencyManager"
@"AVPlayer"
@"NSString"
@"FigBaseCALayer"
@"FigVideoContainerLayer"
@"FigSubtitleCALayer"
@"AVPlayerLayer"
{CGSize="width"d"height"d}
@"CALayer"
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
@"AVSinkSubscriber"
v24@0:8@"<AVKeyPathDependencyRegistration>"16
v24@0:8@"<AVCallbackCancellation>"16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
v40@0:8@16@24@32
v192@0:8@16{CATransform3D=dddddddddddddddd}24@152@160{CGSize=dd}168@184
v56@0:8@16{CGSize=dd}24@40@48
{CGSize=dd}16@0:8
v28@0:8B16@20
v28@0:8@16B24
v56@0:8^@16^@24^@32^@40^@48
v28@0:8B16d20
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{NSEdgeInsets=dddd}16
{NSEdgeInsets=dddd}16@0:8
^{__CVBuffer=}16@0:8
v32@0:8@16q24
v28@0:8@16I24
@"AVPlayerLayerInternal"
@40@0:8{?=qiIq}16
{?=qiIq}16@0:8
v24@0:8^v16
r*16@0:8
c16@0:8
C16@0:8
s16@0:8
S16@0:8
I16@0:8
@24@0:8^{_NSZone=}16
@64@0:8{?={?=qiIq}{?=qiIq}}16
{?={?=qiIq}{?=qiIq}}16@0:8
@112@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@0:8
{?="source"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}"target"{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}}
v48@0:8{?=qiIq}16@40
{?=qiIq}24@0:8@16
v72@0:8{?={?=qiIq}{?=qiIq}}16@64
{?={?=qiIq}{?=qiIq}}24@0:8@16
v120@0:8{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}16@112
{?={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}24@0:8@16
@32@0:8^{OpaqueCMTimebase=}16@24
^{OpaqueCMTimebase=}16@0:8
@"NSObject<OS_dispatch_source>"
^{OpaqueCMTimebase=}
@64@0:8^{OpaqueCMTimebase=}16{?=qiIq}24@48@?56
v40@0:8{?=qiIq}16
@48@0:8^{OpaqueCMTimebase=}16@24@32@?40
{?=qiIq}40@0:8{?=qiIq}16
@"NSArray"
@"AVWeakReferencingDelegateStorage"
@"NSDate"
@"AVPlayerItemMetadataCollectorInternal"
@56@0:8@16@24@32^@40^@48
@24@0:8@?16
@128@0:8@16@24{?=qiIq}32@56Q64{?=qiIq}72{?=qiIq}96@120
@112@0:8@16@24@32@40Q48{?=qiIq}56{?=qiIq}80@104
@40@0:8@16@24^{OpaqueFigPlayerInterstitialEvent=}32
@48@0:8@16{?=qiIq}24
@24@0:8^@16
@136@0:8@16@24{?=qiIq}32@56@64Q72{?=qiIq}80{?=qiIq}104@128
@56@0:8@16{?=qiIq}24@48
v24@0:8Q16
^{OpaqueFigPlayerInterstitialEvent=}16@0:8
B24@0:8^i16
^{OpaqueFigPlayerInterstitialEvent=}
@28@0:8@16B24
v24@0:8^{OpaqueFigPlayerInterstitialCoordinator=}16
^{OpaqueFigPlayerInterstitialCoordinator=}
^{OpaqueFigVisualContext=}
^{OpaqueVTPixelBufferConformer=}
B36@0:8@16B24^@28
^{__CVBuffer=}52@0:8{?=qiIq}16^{?=qiIq}40I48
B40@0:8{?=qiIq}16
^{__CVBuffer=}48@0:8{?=qiIq}16^{?=qiIq}40
^{__CVBuffer=}24@0:8^{?=qiIq}16
B24@0:8^{OpaqueFigVideoQueue=}16
^{OpaqueFigVisualContext=}16@0:8
@"AVSampleBufferVideoOutputInternal"
@"AVAssetDownloadStorageManagementPolicyInternal"
@"NSMutableDictionary"
@"<AVOutputDeviceGroupImpl>"
@32@0:8q16@24
^{OpaqueFigMetadataReader=}
@"<NSObject><NSCopying>"
@"NSLocale"
@24@0:8^v16
^{CGImage=}16@0:8
@40@0:8@16@24@32
@36@0:8@16@24I32
q32@0:8@16^@24
q32@0:8@"NSString"16^@24
v32@0:8@"NSArray"16@?<v@?>24
@32@0:8^{OpaqueFigMetadataReader=}16q24
B32@0:8@16@24
@24@0:8B16B20
^v32@0:8^{opaqueCMFormatDescription=}16^@24
@32@0:8@16^@24
@"AVMetadataItemInternal"
@"AVMutableMetadataItemInternal"
@"AVMetadataItemValueRequest"
@32@0:8@16@?24
@"AVLazyValueLoadingMetadataItemInternal"
@"AVMetadataItemValueRequestInternal"
^{OpaqueFigAsset=}
@120@0:8@16q24q32@40@48@56@64{?=qiIq}72{?=qiIq}96
v28@0:8q16i24
@"AVChapterMetadataItemInternal"
@"AVMetadataItemFilterInternal"
@"AVAssetInspectorLoader"
@"AVDispatchOnce"
^{OpaqueFigAsset=}16@0:8
^{OpaqueFigFormatReader=}16@0:8
^{OpaqueFigPlaybackItem=}16@0:8
@"AVAssetProxyInternal"
@"<AVLoggingIdentifier>"
@44@0:8@16^{OpaqueFigPlaybackItem=}24@32B40
q24@0:8@16
^{OpaqueFigMutableComposition=}16@0:8
{CGAffineTransform=dddddd}16@0:8
@24@0:8#16
@20@0:8i16
v28@0:8i16@?20
@"AVAssetInternal"
Q88@0:8@16{?={?=qiIq}{?=qiIq}}24@72Q80
@24@0:8q16
@"AVAssetFragmentInternal"
@32@0:8Q16Q24
@"AVAssetClientURLRequestHelper"
@"AVAssetCustomURLBridgeForNSURLProtocol"
@"AVAssetCustomURLAuthentication"
@"NSURL"
@"AVAssetResourceLoader"
@"AVAssetCache"
@48@0:8@16@24^Q32^@40
@48@0:8@16q24q32@40
@32@0:8^{__CFDictionary=}16^{__CFString=}24
@"AVURLAssetInternal"
r^{OpaqueFigAsset=}16@0:8
@?16@0:8
@32@0:8@16^Q24
@"NSEnumerator"
v32@0:8@"AVContentKeySession"16@"AVContentKey"24
i40@0:8@16^{CMBaseObject=}24^B32
i40@0:8@"AVContentKeySession"16^{CMBaseObject=}24^B32
@"AVContentKeySession"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSSecurityScopedURLWrapper"
@40@0:8@16@24^@32
@44@0:8@16@24B32^@36
@"AVAudioMixEffectParametersInternal"
@32@0:8I16I20f24f28
@20@0:8f16
@"AVAudioMixSweepFilterEffectParametersInternal"
^{OpaqueFigAssetImageGenerator=}
@"AVAsset"
@"AVVideoComposition"
@"AVCustomVideoCompositorSession"
@32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16^{?=qiIq}40^@48
v48@0:8{?=qiIq}16@?40
v32@0:8{CGSize=dd}16
{CGSize=dd}32@0:8{CGSize=dd}16
^{CGImage=}56@0:8{?=qiIq}16@40^@48
@"AVAssetImageGeneratorInternal"
v32@0:8@"NSData"16@?<v@?@"NSError">24
@"AVOutputDeviceCommunicationChannel"16@0:8
v24@0:8@"AVOutputDeviceCommunicationChannel"16
@24@0:8^{OpaqueFigEndpointRemoteControlSession=}16
^{OpaqueFigEndpointRemoteControlSession=}
@"AVOutputDeviceCommunicationChannel"
@"AVAssetTrackInspector"
^{OpaqueFigAssetTrack=}
@36@0:8@16i24q28
@28@0:8@16i24
@32@0:8@16q24
^{OpaqueFigTrackReader=}16@0:8
^{OpaqueFigAssetTrack=}16@0:8
B24@0:8I16I20
@"AVAssetTrackInternal"
@"AVPixelBufferAttributeMediator"
@"AVAudioSessionMediaPlayerOnly"
@"<AVBlockScheduler>"
@"NSMutableSet"
@"AVAudioSession"
@"AVPlayerRateState"
@"NSNumber"
@"AVPlayerPlaybackCoordinator"
@"NSHashTable"
^{OpaqueFigPlayer=}
^{OpaqueFigPlaybackItem=}
@"AVPlayerMediaSelectionCriteria"
^{OpaqueCMClock=}
@24@0:8^{OpaqueFigPlayer=}16
i40@0:8q16r^{__CFDictionary=}24^^{OpaqueFigPlayer}32
^{OpaqueFigPlayer=}16@0:8
v48@0:8@16@24Q32^v40
v32@0:8@16^{OpaqueFigPlayer=}24
B40@0:8@?16@?24^@32
v24@0:8^{OpaqueFigPlaybackItem=}16
v32@0:8q16@?24
@44@0:8@16B24@28@36
@36@0:8i16@20@28
B32@0:8f16i20@?24
v56@0:8f16{?=qiIq}20B44i48B52
v44@0:8f16{?=qiIq}20
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
v68@0:8f16{?=qiIq}20{?=qiIq}44
v76@0:8f16{?=qiIq}20{?=qiIq}44@68
i24@0:8@?16
v28@0:8f16@?20
v28@0:8B16^{__CFDictionary=}20
^{OpaqueCMClock=}16@0:8
v24@0:8^{OpaqueCMClock=}16
^{__CFString=}24@0:8q16
v28@0:8q16B24
@56@0:8{?=qiIq}16@40@?48
@40@0:8@16@24@?32
v40@0:8@16r^{CGRect={CGPoint=dd}{CGSize=dd}}24r^{NSEdgeInsets=dddd}32
v24@0:8^{OpaqueFigPlayer=}16
v56@0:8@16@24@32@40@48
B40@0:8^@16^{CGSize=dd}24^@32
@"AVPlayerInternal"
B24@0:8q16
v20@0:8i16
B32@0:8d16^@24
@"AVAudioSession"16@0:8
v24@0:8@"AVAudioSession"16
@40@0:8q16@24@32
v24@0:8^{OpaqueFigVideoTarget=}16
^{OpaqueFigPlayerInterstitialCoordinator=}16@0:8
^{OpaqueFigPlayerInterstitialCoordinator=}24@0:8B16B20
@32@0:8B16B20q24
@28@0:8f16@20
@20@0:8B16
@28@0:8B16@20
@32@0:8i16B20@24
@32@0:8B16B20@24
@40@0:8^{OpaqueFigPlayer=}16B24B28@32
r^v24@0:8q16
v32@0:8^v16q24
v32@0:8^v16@24
@"AVURLAsset"
@"NSData"
@"AVAssetDownloadContentConfiguration"
@"AVDisplayCriteria"
@112@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88
@"AVVideoCompositionRenderHintInternal"
^{opaqueMTAudioProcessingTap=}
{?="mutex"^{OpaqueFigSimpleMutex}"requester"@"AVMediaDataRequester"}
@"AVScheduledAudioParameters"
@"AVContentKeySession"
^{opaqueCMFormatDescription=}
^{OpaqueFigCPECryptor=}
^{OpaqueFigSampleBufferAudioRenderer=}
v24@0:8^^{OpaqueFigSampleBufferAudioRenderer}16
B32@0:8@"AVSampleBufferRenderSynchronizer"16^@24
v24@0:8@"NSString"16
v24@0:8^{opaqueCMSampleBuffer=}16
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v24@0:8^{opaqueMTAudioProcessingTap=}16
^{opaqueMTAudioProcessingTap=}16@0:8
@"AVSampleBufferAudioRendererInternal"
^{OpaqueFigSampleBufferAudioRenderer=}40@0:8r^{__CFAllocator=}16r^{__CFDictionary=}24^@32
@"AVAssetWriterInput"
@"AVAssetWriterInputMetadataAdaptorInternal"
@"AVExternalProtectionMonitorInternal"
@24@0:8d16
@24@0:8^{opaqueCMFormatDescription=}16
f32@0:8{CGSize=dd}16
^{OpaqueVTPixelBufferAttributesMediator=}
@"<AVPlayerItemDelegate>"
@"AVAudioMix"
^{__CFString=}
@"AVPlayerItemInterstitialEventCollector"
@"AVMediaSelection"
@"AVPlayerConnection"
^{OpaqueFigCPEProtector=}
i60@0:8^{OpaqueFigPlayer=}16@24@32I40^{__CFDictionary=}44^^{OpaqueFigPlaybackItem}52
^{OpaqueCMTimebase=}24@0:8^{OpaqueFigPlaybackItem=}16
@32@0:8^{_NSZone=}16@24
^{OpaqueFigPlaybackItem=}20@0:8B16
B24@0:8^{CGSize=dd}16
B24@0:8^B16
@32@0:8@16^{OpaqueFigPlaybackItem=}24
{?=qiIq}24@0:8^{OpaqueCMTimebase=}16
v24@0:8i16B20
v92@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64i88
v100@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64i88@?92
B32@0:8@16@?24
v20@0:8C16
v20@0:8I16
v28@0:8@16i24
v28@0:8^{opaqueMTAudioProcessingTap=}16i24
v40@0:8^@16^@24^^{OpaqueFigVideoCompositor}32
v64@0:8{?={?=qiIq}{?=qiIq}}16
^{OpaqueFigCPEProtector=}16@0:8
@24@0:8^{__CFDictionary=}16
v32@0:8^{OpaqueFigPlaybackItem=}16@24
v32@0:8B16B20@?24
@"AVPlayerItemInternal"
v72@0:8^{OpaqueFigPlaybackItem=}16@24@32{?=qiIq}40@64
v44@0:8^{OpaqueFigPlaybackItem=}16@24i32@36
@48@0:8^{OpaqueFigPlaybackItem=}16B24i28@32@40
@"AVPlayerItemTrackInternal"
@"AVQueuePlayerInternal"
@"AVSpecifiedLoggingIdentifierInternal"
@"AVAssetLoggingIdentifierInternal"
@"AVPlayerLoggingIdentifierInternal"
^{OpaqueFigMutableComposition=}
^{OpaqueFigFormatReader=}
@"AVAssetInspector"
@"AVCompositionInternal"
B104@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72^@96
v104@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72@?96
v88@0:8{?={?=qiIq}{?=qiIq}}16{?=qiIq}64
@"AVMutableCompositionInternal"
^{__CFDictionary=}
@"AVPlayerItemMetadataOutputInternal"
@32@0:8^{opaqueCMFormatDescription=}16^{opaqueCMFormatDescription=}24
r^{opaqueCMFormatDescription=}16@0:8
@"AVCompositionTrackInternal"
B64@0:8@16@24{?=qiIq}32^@56
v32@0:8^v16^{__CFString=}24
v64@0:8{CGAffineTransform=dddddd}16
v40@0:8@16@24q32
v32@0:8^{opaqueCMFormatDescription=}16^{opaqueCMFormatDescription=}24
@"AVMutableCompositionTrackInternal"
@"NSObject"
@28@0:8B16@?20
@"AVPublisher"
^{OpaqueFigReentrantMutex=}
@"AVNotificationSubscription"
@36@0:8@16B24@?28
@"<AVCancellable>"
@"NSNumberFormatter"
B40@0:8o^@16@24o^@32
@"AVTimeFormatterInternal"
@124@0:8@16i24{?={?=qiIq}{?=qiIq}}28{?={?=qiIq}{?=qiIq}}76
@"AVCompositionTrackSegmentInternal"
@"NSObject<OS_dispatch_semaphore>"
@"AVMovieTrackInternal"
^{OpaqueFigMutableMovie=}
@28@0:8i16@20
^{OpaqueFigMutableMovie=}16@0:8
{CGSize=dd}24@0:8^{__CFString=}16
v40@0:8{CGSize=dd}16^{__CFString=}32
@24@0:8^{__CFString=}16
v32@0:8@16^{__CFString=}24
@"AVMutableMovieTrackInternal"
B24@0:8^{opaqueCMFormatDescription=}16
B108@0:8{?={?=qiIq}{?=qiIq}}16@64{?=qiIq}72B96^@100
B48@0:8^{opaqueCMSampleBuffer=}16^{?=qiIq}24^{?=qiIq}32^@40
B112@0:8{?={?=qiIq}{?=qiIq}}16{?={?=qiIq}{?=qiIq}}64
B32@0:8@16^q24
^{OpaqueFigAssetReader=}
^{OpaqueFigAssetReader=}16@0:8
@"AVAssetReaderInternal"
@"AVRunLoopCondition"
v24@0:8^{OpaqueFigAssetReader=}16
^{opaqueCMSampleBuffer=}16@0:8
@"AVAssetReaderOutputInternal"
@"AVAssetTrack"
@"AVOutputSettings"
@"AVAssetReaderTrackOutputInternal"
@"AVAudioOutputSettings"
^{opaqueMTAudioProcessingTap=}24@0:8@16
v32@0:8^{opaqueMTAudioProcessingTap=}16@24
@"AVAssetReaderAudioMixOutputInternal"
@"AVVideoOutputSettings"
@"AVAssetReaderVideoCompositionOutputInternal"
@"AVAssetReaderSampleReferenceOutputInternal"
@"<AVAssetWriterDelegate>"
@"AVMediaFileType"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"AVAssetWriterHelper"
@"<AVAssetWriterFinishWritingDelegate>"
B40@0:8@16@24@?32
v32@0:8q16q24
@"AVAssetWriterInternal"
@24@0:8^{OpaqueFigAssetWriter=}16
^{OpaqueFigAssetWriter=}
@"AVFragmentedMediaDataReportInternal"
@40@0:8@16^{OpaqueFigAssetWriter=}24@32
v28@0:8B16@"NSError"20
B56@0:8@16{?=qiIq}24^@48
^{OpaqueFigAssetWriter=}16@0:8
@"AVAssetWriterFigAssetWriterNotificationHandler"
@40@0:8@16@24^v32
@"NSOperation"
B48@0:8@16@24^{opaqueCMFormatDescription=}32^@40
@"AVAssetWriterConfigurationState"
@"AVAssetWriterInputGroupInternal"
^{opaqueCMFormatDescription=}16@0:8
^{OpaqueFigTimelineCoordinatorSuspension=}16@0:8
@"AVPlaybackCoordinator"
^{OpaqueFigTimelineCoordinatorSuspension=}
@36@0:8@16B24@28
@"NSUUID"
v24@0:8^{OpaqueFigTimelineCoordinatorSuspension=}16
v48@0:8^{OpaqueFigTimelineCoordinatorSuspension=}16{?=qiIq}24
v24@0:8^{OpaqueFigPlaybackCoordinator=}16
^{OpaqueFigPlaybackCoordinator=}16@0:8
v32@0:8@16^{OpaqueFigPlaybackCoordinator=}24
^{OpaqueFigPlaybackCoordinator=}
@"<AVPlayerPlaybackCoordinatorDelegate>"
@"<AVPlaybackCoordinationMediumDelegate>"
@"<AVOutputDeviceAuthorizationSessionDelegate>"
@"<AVOutputDeviceAuthorizationSessionImpl>"
B40@0:8@16@24@32
@"AVOutputDeviceAuthorizationSessionInternal"
@"<AVOutputDeviceAuthorizationRequestImpl>"
@"AVOutputDeviceAuthorizationRequestInternal"
v24@0:8^{opaqueCMFormatDescription=}16
v20@0:8s16
@"AVAssetWriterInputHelper"
@"AVAssetWriterInputPassDescriptionResponder"
@40@0:8@16@24^{opaqueCMFormatDescription=}32
^{__CVPixelBufferPool=}16@0:8
B40@0:8^{OpaqueFigAssetWriter=}16@24^@32
q32@0:8^{opaqueCMSampleBuffer=}16^@24
B24@0:8^{opaqueCMSampleBuffer=}16
B48@0:8^{__CVBuffer=}16{?=qiIq}24
@"AVAssetWriterInputInternal"
B40@0:8@16@24^@32
@"AVFigAssetWriterTrack"
@"AVAssetWriterInputMediaDataRequester"
^{__CVPixelBufferPool=}
@"AVAssetWriterInputPassDescription"
@"AVAssetWriterInputWritingHelper"
@"AVAssetWriterInputConfigurationState"
@"AVAssetWriterInputPixelBufferAdaptorInternal"
@76@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56@60^@68
@68@0:8^{OpaqueFigAssetWriter=}16@24@32@40@48B56^@60
B32@0:8^{opaqueCMSampleBuffer=}16^@24
B56@0:8^{__CVBuffer=}16{?=qiIq}24^@48
i44@0:8@16@24B32^@36
@"NSOperationQueue"
@28@0:8^{OpaqueFigAssetWriter=}16i24
v32@0:8B16@20i28
@"AVAssetWriterInputPassDescriptionInternal"
^{CGColor=}
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
@"AVVideoCompositionInstructionInternal"
@"AVMutableVideoCompositionInstructionInternal"
v168@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112:160
v88@0:8{CGAffineTransform=dddddd}16{?=qiIq}64
v160@0:8{CGAffineTransform=dddddd}16{CGAffineTransform=dddddd}64{?={?=qiIq}{?=qiIq}}112
B64@0:8{?=qiIq}16^{CGAffineTransform=dddddd}40^{CGAffineTransform=dddddd}48^{?={?=qiIq}{?=qiIq}}56
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24:72
v72@0:8f16f20{?={?=qiIq}{?=qiIq}}24
B64@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56
v136@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80:128
v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{?=qiIq}48
v128@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{?={?=qiIq}{?=qiIq}}80
B64@0:8{?=qiIq}16^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48^{?={?=qiIq}{?=qiIq}}56
v72@0:8@16{?={?=qiIq}{?=qiIq}}24
@"AVVideoCompositionLayerInstructionInternal"
@"AVMutableVideoCompositionLayerInstructionInternal"
@"AVVideoCompositionCoreAnimationTool"
v24@0:8@"AVVideoCompositionRenderContext"16
v24@0:8@"AVAsynchronousVideoCompositionRequest"16
v24@0:8@"AVVideoCompositionRenderHint"16
B52@0:8r^^v16^@24@32B40^@44
B80@0:8@16{?={?=qiIq}{?=qiIq}}24@72
v88@0:8@16{?={?=qiIq}{?=qiIq}}24@72@?80
v24@0:8f16i20
@"AVVideoCompositionInternal"
v56@0:8@16@24^@32^@40^@48
v40@0:8@16@?24@?32
@"AVMutableVideoCompositionInternal"
@"AVVideoCompositionCoreAnimationToolInternal"
^{OpaqueFigAssetExportSession=}
@"AVMetadataItemFilter"
v48@0:8@16@24@32@?40
{?=qiIq}32@0:8@16@24
q56@0:8@16{?=qiIq}24@48
@"AVAssetExportSessionInternal"
@"<AVStreamDataParserOutputHandling>"
^{OpaqueFigManifold=}
^{OpaqueCMBlockBuffer=}
@"AVContentKeyRequest"
v32@0:8^{OpaqueCMBlockBuffer=}16Q24
v32@0:8@16Q24
v24@0:8B16i20
B20@0:8i16
@"AVStreamDataParserInternal"
i40@0:8^{OpaqueFigManifold=}16^{opaqueCMSampleBuffer=}24i32I36
i28@0:8^{OpaqueFigManifold=}16i24
i44@0:8^{OpaqueFigManifold=}16^{opaqueCMFormatDescription=}24^v32i40
i20@0:8i16
v24@0:8^{OpaqueFigManifold=}16
i36@0:8^{OpaqueFigManifold=}16i24@28
i32@0:8^{OpaqueCMBlockBuffer=}16^^{OpaqueFigManifold}24
^{OpaqueCMBlockBuffer=}40@0:8@16Q24Q32
@24@0:8^{OpaqueCMBlockBuffer=}16
v32@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24
v32@0:8@"AVContentKeySession"16@"AVPersistableContentKeyRequest"24
v40@0:8@"AVContentKeySession"16@"NSData"24@32
v40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSError"32
B40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSString"32
v24@0:8@"AVContentKeySession"16
@52@0:8@16@24i32@36^@44
@"<AVMediaDataRequesterConsumer>"
v32@0:8@"NSDictionary"16@?<v@?@"AVOutputDeviceCommunicationChannel"@"NSError"@"NSString">24
v24@0:8@"AVOutputDevice"16
@32@0:8@16^{OpaqueAPSyncController=}24
v40@0:8^{__CFData=}16^{__CFString=}24^{__CFString=}32
v32@0:8^{__CFString=}16^{__CFString=}24
@"AVOutputDevice"
@40@0:8@16^{__CFString=}24^{OpaqueAPSyncController=}32
@"AVSynchronizedLayerInternal"
@"<AVOutputDeviceCommunicationChannelDelegate>"
@"<AVOutputDeviceCommunicationChannelManager>"
v32@0:8@?16@?24
@"AVOutputDeviceInternal"
d24@0:8@16
@"NSDictionary"24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@"NSString"24
@36@0:8@16@24B32
@"AVOutputDeviceAuthorizedPeerInternal"
@52@0:8@16@24@32B40@44
@"AVPairedDeviceInternal"
@"<AVOutputDeviceCommunicationChannelImpl>"
@52@0:8@16@24q32B40@44
i24@0:8^^{OpaqueFigVideoQueue}16
v24@0:8^{OpaqueCMTimebase=}16
B32@0:8^{OpaqueCMTimebase=}16^@24
i32@0:8^^{OpaqueFigVideoQueue}16^@24
^{OpaqueFigVideoQueue=}16@0:8
i32@0:8^{opaqueCMSampleBuffer=}16^{?={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}}24
v32@0:8^{opaqueCMSampleBuffer=}16^{?={CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}}24
v28@0:8B16@?20
v32@0:8B16@?20i28
i24@0:8^{OpaqueFigVideoQueue=}16
^{OpaqueFigVideoQueue=}
@"AVSampleBufferDisplayLayer"
^{__CFArray=}
@"AVMediaDataRequester"
@"AVSampleBufferRenderSynchronizer"
B44@0:8i16{?=qiIq}20
@24@0:8^{OpaqueFigMetadataReader=}16
@48@0:8@16@24@32@40
@56@0:8^{OpaqueFigMetadataReader=}16@24@32@40@48
v24@0:8^{OpaqueFigMetadataReader=}16
@24@0:8^{OpaqueFigEndpoint=}16
^{OpaqueFigEndpoint=}16@0:8
^{OpaqueFigEndpoint=}
@32@0:8^{OpaqueFigEndpoint=}16@24
@32@0:8^{__CFDictionary=}16Q24
^{__CFDictionary=}16@0:8
v24@0:8^{__CFDictionary=}16
@"NSURLSessionTaskMetrics"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v40@0:8^{__CFDictionary=}16Q24@32
i40@0:8^{__CFDictionary=}16Q24^B32
i24@0:8Q16
@24@0:8^{OpaqueFigAsset=}16
@"NSURLSession"
^{OpaqueFigCustomURLHandler=}
^{_CFURLConnection=}16@0:8
v24@0:8^{_CFURLConnection=}16
^{_CFURLConnection=}
^{__CFError=}
i32@0:8^{__CFDictionary=}16Q24
v32@0:8@16^{__CFError=}24
B40@0:8@16^{_CFURLRequest=}24^{_CFURLResponse=}32
v32@0:8@16^{_CFURLResponse=}24
v32@0:8@16^{__CFData=}24
i56@0:8^{__CFDictionary=}16Q24q32@40^{OpaqueFigCustomURLHandler=}48
i40@0:8^{__CFDictionary=}16Q24*32
@"AVAudioMixInternal"
@"AVMutableAudioMixInternal"
r^{opaqueMTAudioProcessingTap=}16@0:8
v80@0:8f16f20{?={?=qiIq}{?=qiIq}}24q72
B72@0:8{?=qiIq}16^f40^f48^{?={?=qiIq}{?=qiIq}}56^q64
@"AVAudioMixInputParametersInternal"
@"AVMutableScheduledAudioParameters"
@"AVAudioMixEffectParameters"
@"AVMutableAudioMixInputParametersInternal"
@96@0:8@16{?=qiIq}24{?=qiIq}48{?=qiIq}72
@"<AVOutputContextImpl>"
@"<AVOutputContextCommunicationChannelDelegate>"
B32@0:8@16Q24
@"AVOutputContextInternal"
@"<AVOutputContextCommunicationChannelImpl>"
@"AVOutputContextCommunicationChannelInternal"
@"AVOutputContextDestinationChangeInternal"
@"<AVOutputContextManagerImpl>"
@"AVOutputContextManagerInternal"
@24@0:8^{__CFRunLoop=}16
^{__CFRunLoop=}16@0:8
^{__CFRunLoopSource=}16@0:8
v24@0:8^{__CFRunLoopSource=}16
^{__CFRunLoop=}
^{__CFRunLoopSource=}
@24@0:8^{OpaqueFigFormatReader=}16
v24@0:8^{OpaqueFigFormatReader=}16
^v24@0:8^{__CFString=}16
@32@0:8^{OpaqueFigPlaybackItem=}16@24
@"AVScheduledAudioParametersInternal"
@"AVMutableScheduledAudioParametersInternal"
B48@0:8q16@24^q32^@40
v32@0:8^@16^@24
v32@0:8@?16@24
^{OpaqueConcurrentAccessDetector=}
^{OpaqueFigSimpleMutex=}16@0:8
^{OpaqueFigFormatReader=}24@0:8^i16
B28@0:8q16i24
v48@0:8@16@24@32@40
@56@0:8@16Q24@32@40@48
@32@0:8^{OpaqueFigAsset=}16@24
q40@0:8@16^{OpaqueFigAsset=}24^@32
q40@0:8@16^@24^@32
B32@0:8q16q24
@"AVRoutingSessionManagerInternal"
@"AVRoutingSessionInternal"
@"AVRoutingSessionDestinationInternal"
^{OpaqueFigSampleCursorService=}24@0:8^B16
^{OpaqueFigTrackReader=}
^{OpaqueFigSampleCursorService=}
^{OpaqueFigSampleGenerator=}
v32@0:8^{opaqueCMSampleBuffer=}16@?24
@32@0:8@16^{OpaqueCMTimebase=}24
^{OpaqueFigSampleGenerator=}16@0:8
^{opaqueCMSampleBuffer=}32@0:8@16^@24
^{opaqueCMSampleBuffer=}24@0:8@16
^{opaqueCMSampleBuffer=}40@0:8@16@24^@32
@"AVSampleBufferGeneratorInternal"
@"AVSampleCursor"
@"AVSampleBufferRequestInternal"
@"AVSampleBufferGenerator"
^{OpaqueFigSampleGeneratorBatch=}
@"AVAssetSegmentReportSampleInformation"
^v24@0:8@16
@28@0:8^{opaqueCMFormatDescription=}16i24
@"AVStreamDataParser"
@"AVStreamDataAssetInspector"
@"AVAssetSynchronousInspectorLoader"
@"AVPlayerItemMediaDataCollectorInternal"
@24@0:8^{opaqueCMNotificationCenter=}16
^{opaqueCMNotificationCenter=}16@0:8
v52@0:8@16^?24^{__CFString=}32^v40I48
v48@0:8@16^?24^{__CFString=}32^v40
@48@0:8@16^?24^{__CFString=}32^v40
^{opaqueCMNotificationCenter=}
@48@0:8@16^?24@32^v40
v24@0:8@?<v@?>16
@"NSCondition"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"AVAssetTrackGroupInternal"
^{opaqueCMSampleBuffer=}
@72@0:8@16{?={?=qiIq}{?=qiIq}}24
@24@0:8^{opaqueCMSampleBuffer=}16
@"AVTimedMetadataGroupInternal"
^{opaqueCMSampleBuffer=}32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVDateRangeMetadataGroupInternal"
@32@0:8@16B24B28
@"AVManagedAssetCacheInternal"
^{CMBaseObject=}
@"AVAssetDownloadCacheInternal"
{?=ii}16@0:8
@24@0:8{?=ii}16
@100@0:8@16@24@32q40f48{?=qiIq}52{?=qiIq}76
@"AVDelegatingPlaybackCoordinator"
@"AVCoordinatedPlaybackParticipant"
@60@0:8@16@24@32q40f48@52
@56@0:8@16@24@32q40B48f52
@92@0:8@16@24@32q40{?=qiIq}48B72B76f80@84
v28@0:8f16Q20
v48@0:8{?=qiIq}16Q40
v32@0:8@16^{OpaqueCMTimebase=}24
^{OpaqueFigTimelineCoordinator=}
@"<AVPlaybackCoordinatorPlaybackControlDelegate>"
@"AVPlayerItemAccessLogInternal"
@"AVPlayerItemAccessLogEventInternal"
@32@0:8@16d24
@"AVFragmentedMovieTrackInternal"
@"AVPlayerItemErrorLogInternal"
@"AVPlayerItemErrorLogEventInternal"
@"AVExternalPlaybackMonitorInternal"
@"<AVAudioSessionDelegateMediaPlayerOnly>"
B36@0:8B16q20^@28
@"AVAudioSessionMediaPlayerOnlyInternal"
@"AVMediaSelectionGroupInternal"
@44@0:8@16@24@32B40
@"AVMediaSelectionOption"
B36@0:8@16B24q28
@"AVMediaSelectionOptionInternal"
{?=qiIq}48@0:8^{__CFString=}16{?=qiIq}24
{?=qiIq}24@0:8^{__CFString=}16
{?={?=qiIq}{?=qiIq}}24@0:8^{__CFString=}16
f28@0:8^{__CFString=}16f24
f24@0:8^{__CFString=}16
s24@0:8^{__CFString=}16
i24@0:8^{__CFString=}16
q24@0:8^{__CFString=}16
C24@0:8^{__CFString=}16
{CGSize=dd}40@0:8^{__CFString=}16{CGSize=dd}24
{CGAffineTransform=dddddd}24@0:8^{__CFString=}16
Q24@0:8@16
Q32@0:8@16^@24
@32@0:8@16^{opaqueCMFormatDescription=}24
^{__CFString=}24@0:8@16
B32@0:8@"AVAudioOutputSettings"16^@24
B32@0:8@"AVVideoOutputSettings"16^@24
v36@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24^{opaqueCMFormatDescription=}28
^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}32@0:8^{opaqueCMFormatDescription=}16^Q24
v48@0:8@16^@24^@32^@40
B48@0:8@16@24@32^@40
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
f28@0:8f16q20
I28@0:8I16q20
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
^{OpaqueAudioConverter=}
@32@0:8d16d24
@32@0:8{AudioValueRange=dd}16
@"AVAssetDownloadSessionInternal"
v32@0:8Q16Q24
i24@0:8^{OpaqueFigAsset=}16
^{OpaqueFigAsset=}24@0:8@16
^{OpaqueFigSampleCursor=}
@24@0:8^{OpaqueFigSampleCursor=}16
^{OpaqueFigSampleCursor=}16@0:8
q24@0:8q16
{?=qiIq}48@0:8{?=qiIq}16^B40
^{opaqueCMSampleBuffer=}24@0:8^@16
{?=BBB}16@0:8
{?=BBBBBB}16@0:8
{?=Bq}16@0:8
{?=qq}16@0:8
{?=qBBB}16@0:8
@"AVSampleCursorInternal"
{?=qiIq}24@0:8d16
{?=qiIq}24@0:8q16
@"AVPlayerItemOutputInternal"
^{__CVBuffer=}52@0:8{?=qiIq}16B40^{?=qiIq}44
@"AVPlayerItemVideoOutputInternal"
@"AVFragmentedAssetInternal"
v28@0:8d16B24
@"AVFragmentedAssetMinderInternal"
@"AVFragmentedAssetTrackInternal"
v44@0:8@16{CGSize=dd}24B40
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGSize=dd}16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"AVSampleBufferVideoRenderer"
@"AVSampleBufferVideoOutput"
@48@0:8@16Q24Q32Q40
@"NSObject<OS_xpc_object>"
:16@0:8
@"AVWeakReference"16@0:8
@48@0:8@16@24^{__CFDictionary=}32Q40
@64@0:8@16@24q32@40@48@56
^{OpaqueFigCustomURLLoader=}
@"AVAssetCustomURLBridgeForNSURLSession"
^{OpaqueFigCustomURLHandler=}16@0:8
^{OpaqueFigCustomURLLoader=}16@0:8
v52@0:8:16@24B32@36@?44
v32@0:8^{__CFDictionary=}16Q24
v44@0:8@16@24B32@?36
v40@0:8^{__CFDictionary=}16Q24^B32
v24@0:8^{OpaqueFigCustomURLHandler=}16
@"AVAssetResourceLoaderInternal"
v48@0:8@16q24@32@40
v32@0:8@"NSURLCredential"16@"NSURLAuthenticationChallenge"24
v24@0:8@"NSURLAuthenticationChallenge"16
@"AVAssetResourceLoadingContentInformationRequestInternal"
@48@0:8@16q24q32B40B44
@"AVAssetResourceLoadingDataRequestInternal"
@"NSMutableURLRequest"
@"NSURLResponse"
@"NSURLRequest"
@"NSMutableData"
@"AVAssetResourceLoadingContentInformationRequest"
@"AVAssetResourceLoadingDataRequest"
@"AVAssetResourceLoadingRequestor"
@40@0:8@16^{__CFDictionary=}24Q32
@80@0:8@16@24@32@40@48@56^{OpaqueFigCPECryptor=}64Q72
@52@0:8@16@24@32B40^@44
@48@0:8@16@24@32^@40
@"AVAssetResourceLoadingRequestInternal"
@"AVAssetResourceLoadingRequestorInternal"
^{OpaqueFigSampleBufferRenderSynchronizer=}
B76@0:8f16{?=qiIq}20{?=qiIq}44^@68
i68@0:8f16{?=qiIq}20{?=qiIq}44
@"AVSampleBufferRenderSynchronizerInternal"
@?24@0:8@16
v40@0:8@16@?24@32
B56@0:8@16{?=qiIq}24@?48
v56@0:8@16{?=qiIq}24@?48
^{OpaqueFigSampleBufferRenderSynchronizer=}40@0:8r^{__CFAllocator=}16r^{__CFDictionary=}24^@32
@"FigAlternateObjC"
@"AVAssetVariantVideoAttributes"
@"AVAssetVariantAudioAttributes"
@24@0:8^{OpaqueFigAlternate=}16
^{OpaqueFigAlternate=}16@0:8
@40@0:8q16@24Q32
@32@0:8d16Q24
@"NSPredicate"
@"AVAssetVariant"
@"NSPredicateOperator"
@"AVTextStyleRuleInternal"
@56@0:8@16@24@32@40B48B52
@56@0:8@16@24@32@40q48
v24@0:8^{__CVBuffer=}16
@"AVAsynchronousVideoCompositionRequest"
@"CIImage"
^{__CVBuffer=}
@56@0:8@16^{__CVBuffer=}24@?32@?40@?48
@"AVAsynchronousCIImageFilteringRequestInternal"
@80@0:8{?={?=qiIq}{?=qiIq}}16@64@?72
@"NSObject<OS_dispatch_group>"
@"CIContext"
@"<AVPlayerItemOutputHost>"24@0:8@"AVPlayerItem"16
@"<AVPlayerItemLegibleOutputDependencyFactory>"
v56@0:8@16@24{?=qiIq}32
@"AVPlayerItemLegibleOutputInternal"
@"<AVOutputSettingsAssistantBaseSettingsProvider>"
@"<AVOutputSettingsAssistantVideoSettingsAdjuster>"
@"AVOutputSettingsAssistantInternal"
q36@0:8^{opaqueCMFormatDescription=}16f24@28
q36@0:8^{opaqueCMFormatDescription=}16f24@"NSDictionary"28
@"NSDictionary"32@0:8@"NSArray"16@"NSDictionary"24
B24@0:8@"NSString"16
@"AVMediaSelectionInternal"
@"AVExternalDeviceHIDInternal"
@"AVExternalDeviceIconInternal"
@"<AVExternalDeviceDelegate>"
@"AVExternalDevice"
@"AVExternalDeviceInternal"
@"AVPlayerLayerIntermediateLayer"
@"NSSet"
v32@0:8@"<AVVideoCompositing>"16@"NSException"24
^{OpaqueFigVideoCompositor=}16@0:8
v32@0:8^{OpaqueFigVideoCompositorFrame=}16^{__CVBuffer=}24
v32@0:8^{OpaqueFigVideoCompositorFrame=}16@24
v24@0:8^{OpaqueFigVideoCompositorFrame=}16
^{OpaqueFigVideoCompositor=}
@"<AVVideoCompositing>"
@"AVVideoCompositionRenderContext"
i72@0:8^{OpaqueFigVideoCompositorFrame=}16{?=qiIq}24@48@56^v64
i112@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88
i120@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64{?=qiIq}88q112
@24@0:8f16i20
@"AVDisplayCriteriaInternal"
@48@0:8@16@24Q32@?40
@"AVCallbackContextRegistry"
@?32@0:8@16@?24
v24@0:8@"NSDictionary"16
@"NSObject"16@0:8
@64@0:8@16@24@32@40Q48@?56
@"NSObject<AVWeakObservable>"
@56@0:8@16@24@32Q40^v48
v32@0:8@"NSString"16@"AVTwoPartKeyPath"24
@"AVWeakObservableCallbackCancellationHelper"
@"AVKVODispatcher"
@"AVTwoPartKeyPath"
@"<AVKVOIntrospection><AVCallbackCancellation>"
^{OpaqueFigVideoCompositorFrame=}16@0:8
^{OpaqueFigVideoCompositorFrame=}
@"<AVVideoCompositionInstruction>"
^{__CVBuffer=}20@0:8i16
^{opaqueCMSampleBuffer=}20@0:8i16
@"AVAsynchronousVideoCompositionRequestInternal"
@88@0:8@16@24^{OpaqueFigVideoCompositorFrame=}32{?=qiIq}40@64@72@80
@"AVOutputDeviceDiscoverySession"
@"DADiscovery"
@"AVRouteDetectorInternal"
{?="horizontalSpacing"q"verticalSpacing"q}
{?="left"d"top"d"right"d"bottom"d}
{?="width"i"height"i}
{?=dddd}16@0:8
@"AVVideoCompositionRenderContextInternal"
@48@0:8^{OpaqueFigVideoCompositor=}16@24@32^{__CVPixelBufferPool=}40
B24@0:8^{OpaqueFigVideoCompositor=}16
B24@0:8^{__CVBuffer=}16
@24@0:8^{OpaqueFigVideoCompositor=}16
@"AVMediaDataStorageInternal"
@48@0:8^{OpaqueFigFormatReader=}16@24@32@40
^{OpaqueFigMutableMovie=}24@0:8^{OpaqueFigFormatReader=}16
@"AVMovieInternal"
^{OpaqueFigMutableMovie=}24@0:8@16
B48@0:8@16@24Q32^@40
@"AVMutableMovieInternal"
^{opaqueCMSampleBuffer=}28@0:8i16^I20
v24@0:8i16i20
v32@0:8@16^{OpaqueFigPlaybackItem=}24
@"AVContentKeyReportGroup"
@"AVContentKeySpecifier"
@"AVContentKey"
^{OpaqueFigCFWeakReferenceHolder=}
^{FigContentKeySpecifier=}
B52@0:8^{OpaqueFigCPECryptor=}16B24^Q28^B36^@44
@52@0:8@16@24@32Q40i48
@76@0:8@16@24@32@40@48@56@64B72
@72@0:8@16@24^{OpaqueFigCustomURLHandler=}32@40^{__CFDictionary=}48Q56B64B68
@100@0:8@16^{CMBaseObject=}24B32^{FigContentKeySpecifier=}36@44@52@60B68q72B80@84@92
^{CMBaseObject=}16@0:8
^{OpaqueFigCPECryptor=}16@0:8
v24@0:8^{OpaqueFigCPECryptor=}16
B32@0:8^{opaqueCMFormatDescription=}16^@24
@"AVContentKeyRequestInternal"
@56@0:8@16@24@32@40@48
@"AVContentKeyResponseInternal"
@"NSMapTable"
^{OpaqueFigSecureStopManager=}32@0:8@16@24
v44@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24q32B40
v48@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24q32^{OpaqueFigCPECryptor=}40
v32@0:8^{CMBaseObject=}16^{FigContentKeySpecifier=}24
v48@0:8@16@24q32@40
v48@0:8@16@24@32q40
@"AVContentKeySessionInternal"
v40@0:8@16@24Q32
@32@0:8@16Q24
v28@0:8@?16B24
i24@0:8@16
v32@0:8@16:24
v52@0:8^{OpaqueFigCustomURLHandler=}16@24^{__CFDictionary=}32Q40B48
v44@0:8@16@24@32B40
v72@0:8^{FigContentKeySpecifier=}16@24@32@40q48@56@64
v48@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32@40
r^{OpaqueFigCPECryptor=}24@0:8@16
B40@0:8^{opaqueCMFormatDescription=}16r^^{OpaqueFigCPECryptor}24^@32
r^{OpaqueFigCPECryptor=}40@0:8@16^{opaqueCMFormatDescription=}24^@32
^{OpaqueFigCPECryptor=}24@0:8@16
v48@0:8^{__CFDictionary=}16Q24^{OpaqueFigCustomURLHandler=}32^B40
i32@0:8@16^^{OpaqueFigCustomURLHandler}24
q52@0:8@16i24@28q36^@44
q36@0:8@16i24^@28
B32@0:8^q16^@24
@48@0:8@16@24^{opaqueCMFormatDescription=}32@40
B32@0:8q16^@24
^{OpaqueFigContentKeySession=}
r^{OpaqueFigCPECryptor=}56@0:8@16@24^{opaqueCMFormatDescription=}32@40^@48
r^{OpaqueFigCPECryptor=}32@0:8@16@24
r^{OpaqueFigContentKeySession=}16@0:8
@60@0:8@16@24^{CMBaseObject=}32B40q44@52
i32@0:8^{OpaqueFigCPECryptor=}16@24
@32@0:8@16^{OpaqueFigCPECryptor=}24
@32@0:8^{__CFString=}16^{OpaqueAPSyncController=}24
@32@0:8^{__CFString=}16^{__CFString=}24
v024
f024
ARGB
024x
02fx
