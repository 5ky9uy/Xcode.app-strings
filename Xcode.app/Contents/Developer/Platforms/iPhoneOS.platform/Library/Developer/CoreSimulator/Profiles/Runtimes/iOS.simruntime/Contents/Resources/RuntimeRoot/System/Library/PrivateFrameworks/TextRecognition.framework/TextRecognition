?333333
?333333
6MatrixIfE
333333
333333
N/@{
333333
333333
N/@{
?333333
 @N2cv5Size_ImEE
NSt3__110__function6__funcIZ86-[CRTextDetector detectTextCandidatesInImage:atScale:forNumScales:toDocument:options:]E3$_0NS_9allocatorIS2_EEFN2cv27CCConnectionPredicateOutputERKNS5_3MatERKNS5_6Point_IiEESD_EEE
NSt3__110__function6__baseIFN2cv27CCConnectionPredicateOutputERKNS2_3MatERKNS2_6Point_IiEESA_EEE
Z86-[CRTextDetector detectTextCandidatesInImage:atScale:forNumScales:toDocument:options:]E3$_0
NSt3__110__function6__funcIZ86-[CRTextDetector detectTextCandidatesInImage:atScale:forNumScales:toDocument:options:]E3$_1NS_9allocatorIS2_EEFbRN2cv18ConnectedComponentEEEE
NSt3__110__function6__baseIFbRN2cv18ConnectedComponentEEEE
Z86-[CRTextDetector detectTextCandidatesInImage:atScale:forNumScales:toDocument:options:]E3$_1
333333
?333333
ffffff
?ffffff
?333333
?UUUUUU
?N12TextDetector4WordE
N2cv5Rect_IfEE
N2cv6ScalarE
333333
333333
N/@{
333333
333333
N/@{
?NSt3__110__function6__funcIZ214-[CRLanguageCorrection correctTextFeature:inImage:withTextPieces:withMaxWidthPerRegion:withMedianCharSpacing:withBreakpoints:segmenter:options:numCharCandidates:downscaleSpaceRatio:latticePresetIdx:latticeResults:]E3$_0NS_9allocatorIS2_EEFvRKNS_6vectorImNS3_ImEEEEddddddEEE
NSt3__110__function6__baseIFvRKNS_6vectorImNS_9allocatorImEEEEddddddEEE
Z214-[CRLanguageCorrection correctTextFeature:inImage:withTextPieces:withMaxWidthPerRegion:withMedianCharSpacing:withBreakpoints:segmenter:options:numCharCandidates:downscaleSpaceRatio:latticePresetIdx:latticeResults:]E3$_0
BTU}BUU
pA33s?
MbP?
?ffffff
N3nms22PyramidTokenizerConfigE
?333333
N12TextDetector8DocumentE
12IntervalTreeIiE
16BinarySearchTreeIiE
N12TextDetector6StrokeE
?333?fff?
AN2cv5Size_IiEE
?ffffff
Y@NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
?333333
6MatrixIsE
6MatrixIiE
@333333
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
333333
333333
N/@{
333333
333333
N/@{
?NSt3__117bad_function_callE
?333333
?333333
`@N2cv4MSERE
15RectangleFinder
UUUUUU
N3nms16PyramidTokenizerItfEE
N3nms10PyramidNMSItfhEE
N3nms10RectForestItfEE
N2cv6Point_IiEE
N2cv5Rect_IiEE
N2cv6Point_IfEE
kU@fffff
kU@fffff
K@fffff
N2cv18ConnectedComponentE
NSt3__110__function6__funcIZN2cv18ConnectedComponent9perimeterEvE3$_0NS_9allocatorIS4_EEFviiEEE
NSt3__110__function6__baseIFviiEEE
ZN2cv18ConnectedComponent9perimeterEvE3$_0
NSt3__110__function6__funcIZN2cv18ConnectedComponent4fillERNS2_3MatERKNS2_6Point_IiEERKNS2_6ScalarEE3$_1NS_9allocatorISD_EEFviiEEE
ZN2cv18ConnectedComponent4fillERNS_3MatERKNS_6Point_IiEERKNS_6ScalarEE3$_1
ffffff
?333333
?13CRCHSymbolMap
333333
333333
N/@{
333333
333333
N/@{
@NSt3__110__function6__funcIZN12TextDetector6Stroke14colorHistogramEvE3$_0NS_9allocatorIS4_EEFviiEEE
ZN12TextDetector6Stroke14colorHistogramEvE3$_0
NSt3__110__function6__funcIZN12TextDetector6Stroke12colorProfileEvE3$_1NS_9allocatorIS4_EEFviiiRfEEE
NSt3__110__function6__baseIFviiiRfEEE
ZN12TextDetector6Stroke12colorProfileEvE3$_1
NSt3__110__function6__funcIZN12TextDetector6Stroke11boundingBoxERN2cv6Point_IfEES7_PS6_E3$_2NS_9allocatorIS9_EEFviiEEE
ZN12TextDetector6Stroke11boundingBoxERN2cv6Point_IfEES4_PS3_E3$_2
NSt3__110__function6__funcIZN12TextDetector6Stroke9meanColorEvE3$_3NS_9allocatorIS4_EEFviiEEE
ZN12TextDetector6Stroke9meanColorEvE3$_3
?333333
?333333
?N3nms16PyramidNMSConfigE
NSt3__110__function6__funcIZN12TextDetector9Character12colorProfileEvE3$_0NS_9allocatorIS4_EEFviiiRfEEE
ZN12TextDetector9Character12colorProfileEvE3$_0
NSt3__110__function6__funcIZN12TextDetector9Character9meanColorEvE3$_1NS_9allocatorIS4_EEFviiEEE
ZN12TextDetector9Character9meanColorEvE3$_1
N2cv3MatE
NSt3__110__function6__baseIFfffEEE
NSt3__110__function6__funcIZN2cv4sqrtERKNS2_3MatERS3_E3$_0NS_9allocatorIS7_EEFffEEE
NSt3__110__function6__baseIFffEEE
ZN2cv4sqrtERKNS_3MatERS0_E3$_0
NSt3__110__function6__funcIZN2cv3logERKNS2_3MatERS3_E3$_1NS_9allocatorIS7_EEFffEEE
ZN2cv3logERKNS_3MatERS0_E3$_1
NSt3__110__function6__funcIZN2cv3maxERKNS2_3MatEdRS3_E3$_3NS_9allocatorIS7_EEFffEEE
ZN2cv3maxERKNS_3MatEdRS0_E3$_3
NSt3__110__function6__baseIFhhEEE
NSt3__110__function6__baseIFssEEE
NSt3__110__function6__baseIFiiEEE
NSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
N2cv8SmartPtrE
C333333
?333333
@(#)PROGRAM:TextRecognition  PROJECT:CoreRecognition-157
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
v8@?0
DATE
TIME
NUMBER
EMOTICON
WORD_CASE_SENSITIVE
PUNC_LOOP
PHONE_NUMBER
EMAIL
Prefix_DATE
0xc50a218
Prefix_EMOTICON
0x68ed49c
Prefix_URL
0x88ea31a
Extendable_PUNC_LOOP
0x099c12f
Extendable_EMOTICON
0x23cc72f
Extendable_TIME
0xdb53409
0x61a649a
Prefix_TIME
0x7186a84
Extendable_URL
0x1070ba2
Prefix_PHONE_NUMBER
0x4374d28
0x34f55ec
0x7f7446f
Prefix_EMAIL
0xd23b9c8
0x08d4b39
Extendable_EMAIL
0xed4db98
Extendable_WORD_CASE_SENSITIVE
0x87eab3b
0xe6b391a
0x633a6c7
Extendable_NUMBER
0x3ba3922
Extendable_WORD_CASE_INSENSITIVE
0x355486d
0x837697b
Prefix_NUMBER
0x8005b66
WORD_CASE_INSENSITIVE
0x156f831
Extendable_DATE
0x9ddc000
Prefix_WORD_CASE_INSENSITIVE
0x8554b05
Prefix_WORD_CASE_SENSITIVE
0xe71cc3a
0x8aa8704
0x346ff32
0x%07lx
shouldCancel
TB,V_shouldCancel
pyramidPreIntraScaleNMSTextFeatures
T@"NSMutableArray",&,N,V_pyramidPreIntraScaleNMSTextFeatures
pyramidPostIntraScaleNMSTextFeatures
T@"NSMutableArray",&,N,V_pyramidPostIntraScaleNMSTextFeatures
pyramidPostInterScaleNMSTextFeatures
T@"NSMutableArray",&,N,V_pyramidPostInterScaleNMSTextFeatures
pyramidScaleSize
T@"NSMutableArray",&,N,V_pyramidScaleSize
q24@?0@8@16
Word at 
swtMapIdx: 
boundingBox [px]: 
medianStrokeWidth [px]: 
qualityScore: 
medianCharacterHeight [px]: 
medianCharacterWidth [px]: 
Rect at 
x, y, width, height: 
com.apple.TextRecognition
%@-%@_%@
%@_%@
%@-%@
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
CRTextRecognizerCodeInvalidSingleChar
en-US
zh-Hans
zh-Hant
Unable to extract a locale from options
[WARNING] Unable to load lexicon for language '%@'. Lexicon checks will be disabled during language correction.
[WARNING] Unable to create custom lexicon: %@
P.bin
[WARNING] Unable to load pattern network
[WARNING] Resource path not found for '%@'. Character language model will be disabled during language correction.
[WARNING] Unable to load character language model for language '%@'. Character language model will be disabled during language correction.
[WARNING] Resource not found for '%@'. Character language model will be disabled during language correction.
cosuvwxzCOSUVWXZ
CR-Custom-Lexicon
characterLanguageModel
T^v,N,V_characterLanguageModel
staticLexicon
T^{_LXLexicon=},N,V_staticLexicon
dynamicLexicon
T^{_LXLexicon=},N,V_dynamicLexicon
invalidSingleCharCNNCode
T@"NSString",&,N,V_invalidSingleCharCNNCode
patternFST
T@"CRCHPatternNetwork",&,N,V_patternFST
confusableCharacters
T@"NSCharacterSet",R
locale
T@"NSLocale",R,V_locale
data
featureNames
T@"NSSet",R,N
T^{__CVBuffer=},N,V_data
f_score_act_sigmoid_output
geometry_output
T@"MLMultiArray",&,N,V_f_score_act_sigmoid_output
T@"MLMultiArray",&,N,V_geometry_output
cr_td_model.mlmodelc
bundle
model
T@"MLModel",R,N,V_model
CRImageReaderErrorDomain
No output type specified
Invalid CRImageReaderImageCaptureOrientation key. Skip orientation correction
Unknown error
Revision number is invalid, please check supported revisions
CRImageReaderLanguageKey
CRImageReaderLanguageUnspecified
CRImageReaderMinimumTextHeight
CRImageReaderRevisionKey
CRImageReaderDynamicLexicon
kCROCRModelNameKey
CRImageReaderRecognitionMethod
CRImageReaderRecognitionMethodGeometric
CRImageReaderRecognitionMethodSingleChar
CRImageReaderRecognitionMethodCTC
CRImageReaderTextDetector
CRImageReaderTextDetectorCI
CRImageReaderTextDetectorCR
CRImageReaderTextRecognizer
CRImageReaderTextRecognizerCI
CRImageReaderTextRecognizerCR
CRImageReaderTextRecognizerCRS
CRImageReaderActivationMap
CRTextDetectorDisableLineGrouping
CRTextRecognizerNumberResultsNeeded
CRTextRecognizerGarbageRejected
CRImageReaderImageCaptureOrientationPortrait
CRImageReaderNumTopStringCandidates
CRImageReaderDisableLanguageCorrection
CRImageReaderDisableWordLevelModelling
CRImageReaderSaveLatticeInfo
CRImageReaderDisableAllSegmentationOptimization
CRImageReaderImageCaptureOrientation
CRImageReaderRestrictToCPUKey
CRImageReaderDisableFalsePositivePostFilter
CRImageReaderPrecisionThresholdKey
CREnableLogIntermediateDetectorResult
CRImagePyramidMaxNumScales
CRImagePyramidScaleFactor
CRImagePyramidMinDim
CRImagePyramidSDRPolicy
CRImagePyramidSRLPolicy
CRTextDetectorSWTMaxRayLengthPercentile
Multiple target languages not supported yet
Model from options %@ doesn't exist
com.apple.CoreRecognition.model_name
Loading model from user defaults %@
User defaults model %@ doesn't exist, using built-in model
%@ Language not currently supported
Detection
Post Processing
Recognition
Single Feature Recognition
Single Feature Language Modelling
Output object type %@ not supported by CRImageReader
Error: Attempt to process nil image in TextRecognition
com.apple.CoreRecognition.disable_language_correction
com.apple.CoreRecognition.use_ci_detector
com.apple.CoreRecognition.use_futhark_recognizer
com.apple.CoreRecognition
SignPosts
detectorStats
T@"CRPerformanceStatistics",&,V_detectorStats
postProcStats
T@"CRPerformanceStatistics",&,V_postProcStats
recognizerStats
T@"CRPerformanceStatistics",&,V_recognizerStats
singleFeatureRecognizerStats
T@"CRPerformanceStatistics",&,V_singleFeatureRecognizerStats
singleFeatureLMStats
T@"CRPerformanceStatistics",&,V_singleFeatureLMStats
targetLanguages
T@"NSOrderedSet",&,V_targetLanguages
ocrDetectorModel
T@"CRTextDetectorModel",&,V_ocrDetectorModel
ocrRecognizerModel
T@"CRTextRecognizerModel",&,V_ocrRecognizerModel
blank
TS,N,V_blank
userOptions
T@"NSDictionary",&,N,V_userOptions
languageCorrection
T@"CRLanguageCorrection",&,N,V_languageCorrection
beamSearches
T@"NSArray",&,N,V_beamSearches
regExpressions
T@"CRRegex",&,N,V_regExpressions
outputObjectTypes
T@"NSArray",C
inputOptions
T@"NSDictionary",&,N,V_inputOptions
startTime
T@"NSDate",&,N,V_startTime
endTime
T@"NSDate",&,N,V_endTime
textFeatures
T@"NSArray",&,N,V_textFeatures
T@"NSArray",&,N,V_pyramidPreIntraScaleNMSTextFeatures
T@"NSArray",&,N,V_pyramidPostIntraScaleNMSTextFeatures
T@"NSArray",&,N,V_pyramidPostInterScaleNMSTextFeatures
codeMaps
T@"NSArray",&,N,V_codeMaps
latticeResults
T@"CRLatticeResults",&,N,V_latticeResults
detectorResults
T@"CRTextDetectorResults",&,N,V_detectorResults
recognizerResults
T@"CRTextRecognizerResults",&,N,V_recognizerResults
%3d 
/tmp/CoreRecognitionImages/Debug/threshold200.png
/tmp/CoreRecognitionImages/Debug/contours.png
decodeActivations must be overridden in subclass
CoreRecognition: result %@ size %@ is smaller than batch size %li
Codemap size doesn't match model output class
Attempt to recognize image (%zu,%zu) incompatible with model input dimensions (%i,%i)
sample
T^{CRCTCPriorityQueue={priority_queue<CRCtcCandidate, std::__1::vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >, CRCTCPriorityQueue::QueueComparison>={vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}{QueueComparison=}}B{vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}},V_sample
T{CRCtcCandidate=if},V_blank
CardNumber
Cardholder
Expiration
%C : %f (%f)
symbol
TS,N,V_symbol
probability
Td,N,V_probability
logProbability
Td,N,V_logProbability
description
T@"NSString",R,N
Unsupported language %@ when calling Futhark
Unrecognized language argument type when calling Futhark
Unable to create pixel buffer for CRImage. Error: %d
Error running Futhark: %@
com.apple.CoreHandwriting.CHCharacterSetsRules
^*+=<>.,
:'"-/
apmAPM.
strdndth.
:;B=
)(pPDoOxX*
_-.+
_-.:/+&?%()$=
lowercaseCharSet
T@"NSCharacterSet",&,N,V_lowercaseCharSet
uppercaseCharSet
T@"NSCharacterSet",&,N,V_uppercaseCharSet
digitCharSet
T@"NSCharacterSet",&,N,V_digitCharSet
startPunctuationCharSet
T@"NSCharacterSet",&,N,V_startPunctuationCharSet
middlePunctuationCharSet
T@"NSCharacterSet",&,N,V_middlePunctuationCharSet
endPunctuationCharSet
T@"NSCharacterSet",&,N,V_endPunctuationCharSet
digitStartPunctuationCharSet
T@"NSCharacterSet",&,N,V_digitStartPunctuationCharSet
digitEndPunctuationCharSet
T@"NSCharacterSet",&,N,V_digitEndPunctuationCharSet
arithmeticOperatorCharSet
T@"NSCharacterSet",&,N,V_arithmeticOperatorCharSet
dateTimeSeparatorCharSet
T@"NSCharacterSet",&,N,V_dateTimeSeparatorCharSet
dateTimeEndLetterCharSet
T@"NSCharacterSet",&,N,V_dateTimeEndLetterCharSet
numeralEndLetterCharSet
T@"NSCharacterSet",&,N,V_numeralEndLetterCharSet
lexiconSkipCharSet
T@"NSCharacterSet",&,N,V_lexiconSkipCharSet
containsDotCharSet
T@"NSCharacterSet",&,N,V_containsDotCharSet
prefixCapitalizationExceptionCharSet
T@"NSCharacterSet",&,N,V_prefixCapitalizationExceptionCharSet
selfLoopPunctuationCharSet
T@"NSCharacterSet",&,N,V_selfLoopPunctuationCharSet
emoticonTopCharSet
T@"NSCharacterSet",&,N,V_emoticonTopCharSet
emoticonMiddleCharSet
T@"NSCharacterSet",&,N,V_emoticonMiddleCharSet
emoticonBottomCharSet
T@"NSCharacterSet",&,N,V_emoticonBottomCharSet
emailAtCharSet
T@"NSCharacterSet",&,N,V_emailAtCharSet
emailPunctuationCharSet
T@"NSCharacterSet",&,N,V_emailPunctuationCharSet
urlPunctuationCharSet
T@"NSCharacterSet",&,N,V_urlPunctuationCharSet
strokeMaxPenalties
T{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >={__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >=Q}}},N,V_strokeMaxPenalties
signatureUniChar
T{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >={__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >=Q}}},N,V_signatureUniChar
_charSetRulesQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V__charSetRulesQueue
zh-HansLN
plist
zh-HansFN
pinyinName
romanjiName
%@ %@
%@ %@ %@
%@ %@. %@
meContact
v32@?0@8@16^B24
NO_MATCH
(([\.\-\'\,\/])([\.\-\'\,\/]))|(\/)|(\ \.)
 DOLLARS
 INC
 AND 
 SON
GIFT
CARD
PLATINUM
VISA
MASTERCARD
SIGNATURE
KOHLS
CASHBACK
CREDIT
VALUED
CUSTOMER
VALID
THRU
BANK
LAST DAY OF
SAISON
JQ SUGOCA
AU AI
OMNI
JNSHE LLD
RIHGA ROYAL HOTELS
THE 
MILEAGE
CHASE
SPECIMEN
ANA ARD
MITSUI SUMITOMO
BIC CAMERA
RE POINT
HHONORS
BUSINESSPREFERRED
HANG SENG
HSBC
SENG BAIK
Year
Month
(0[1-9]|[12][0-9]|3[01])([\-\/\.])(0[1-9]|1[012])\2(\d\d)
(0[1-9]|1[012])([\-\/\.])(0[1-9]|[12][0-9]|3[01])\2(\d\d)
(0[1-9]|1[012])([\-\/\.])((?:20)?\d\d)
(0[1-9]|[12][0-9]|3[01])?(JAN|FEB|MAR|APR|MAY|JUN|JLY|AUG|SEP|OCT|NOV|DEC)(\d\d)
(?<![\/])(20\d\d)([\-\/\.])(0[1-9]|1[012])(?![\/])
(0[1-9]|1[012])([\-\/\.])(\d)(\d\d)
Result
substringRange
%02i
dd/MM/yy
MM/dd/yy
MM/yy
ddMMMyyyy
yyyy/MM
MM/''yy
Could not extract date from ground truth. Using current date
9682
com.apple.CoreRecognition.disable_year_check
expfull
expirationDate
expirationYear
expirationMonth
expirationDay
expDateAccepted
dateOffset
normalizedDateOffset
nameResult
nameOffset
normalizedNameOffset
closestNameMatch
closestNameDistance
minMatchDistance
nameAccepted
cardholderName
code
accepted
621442
623106
621443
621441
623107
com.apple.CoreRecognition.disable_prefix_check
589297
7777777777
2222222222
4444444444
5555555555
9999999999
44444444444444444
22222222222222222
6666666666666
888888888888
8888888888888888
q24@?0@"NSNumber"8@"NSNumber"16
q24@?0@"CALayer"8@"CALayer"16
fireTime
T{?=qiIq},N
target
T@,W,N,V_target
selector
T:,N,V_selector
fired
TB,N,V_fired
valid
TB,N,V_valid
v32@?0@"NSNumber"8Q16^B24
jp-hepburn
q24@?0@"NSString"8@"NSString"16
$1$1
n(b|p)([aiueo])
m$1$2
([aiue])\1
(o)(o|u)
uppercaseString
[^ -~]
Document at 
SWTMap 
Number of strokes: 
Number of characters: 
Number of words: 
lamo
wanshi
zhai
lang
gaidi
xiongyun
taiqian
biao
zhenlu
jiuxing
liqiu
xujie
guoqian
wuyu
wuyun
jinfeng
changman
zhen
bingyi
jinmin
piaonu
jierui
jiemao
chashang
shouyan
jingjie
yonghui
ping
houci
pulian
mojie
zhongying
zhongshu
jianxing
yezhao
zhubai
qianhua
zhixi
weibai
baihuo
kezhu
piao
changjin
qinxing
lueguang
zhengzhao
ganping
minxing
qian
maotong
dong
shenzi
zhongran
changgao
yangpi
maimai
haoqian
ganzhi
dibao
shenru
bing
chongle
baijian
zhongxiu
mang
chaxing
jinxing
baixin
xuewu
xiao
yanyu
zangmei
kong
zhuhua
zhui
xing
qianshuang
xingjia
canpin
qunxing
jieyu
puba
xiying
huixiang
xiaocui
ciyun
shenzhao
qianji
wuyue
saiyan
chai
zhuan
hanzhen
ting
shixing
baican
lulang
xuyan
diaosha
liao
quan
botian
xianchang
yanpi
weiqi
zhongxuan
jian
binghe
baibai
yujie
lepai
shao
baian
chui
zanghong
chuanzi
xiezhu
jieli
hailin
zhongtian
lizhao
shenjie
xingnu
dian
zhonghui
zhonggang
taixing
xueyuan
zengdao
shaobin
chaogui
weiwu
xianzhan
zhufa
chaoen
shaobo
jiaqin
shengbing
cichao
shixi
denggu
zhongwei
aoqiang
juji
qingci
shaohui
weiwei
zishao
zhaoxiang
cheng
chuoer
honglu
sheng
zipang
xingzao
shuaining
hongcheng
qijin
pang
xiaoci
hongshen
boxi
yidan
yushen
qipu
zhao
jichuan
lequn
guang
tingbai
yuwu
nuqi
jiyu
dihe
gangjiong
shengxi
mengzhou
zhongyang
chaoyou
changde
wanheng
xian
jieyuan
jiewei
yingxiao
xinglong
chenghua
jiesheng
suqin
nizhen
zangshan
liuxing
cengfan
aozhao
zhongfa
haolue
gang
luanchao
leji
shenbai
zhun
biyue
gong
louchang
xili
zhuochang
qiansong
pushui
zhan
kechang
bang
zhonghai
qiji
hexi
shengman
xiapu
ruiji
qiujun
yanzang
huiwan
junliao
zhaozao
diaosun
weidu
shahai
gongzhuang
eryong
liuan
xisheng
zang
jidao
lechun
shenhao
huilu
hongjuan
linglu
shuai
zhenghai
chou
lijie
yannan
baiyuan
bijin
feixing
zhanghan
yunjie
mengzhao
shancan
dongyong
bizhu
dinu
duoqian
jiong
feng
dunyang
jingpu
jinting
liangmei
shengshui
zhongxu
mingjiong
diaoqin
qinnu
chang
shui
zhaode
baibei
bozhen
guanlu
chapu
cihan
wuguan
luzhu
chan
cenghai
qianguo
changxin
qianzhi
xile
maolong
luqi
guangzhu
yang
xiaomao
pingyu
zhaojiu
wusheng
yinlu
zhaonu
zhuangfeng
bailu
chizhao
guxu
qichang
yunwu
chanchan
qianbing
biqi
chuanzan
luna
zhuli
baizhou
huiping
chaogou
aile
zhudi
hong
manji
zhongzhu
risheng
youzhu
zhou
liangzhu
weilu
songchang
rihe
jinyang
binxiao
changsheng
guan
wuwei
lizang
yangxing
erxing
xiwu
shiling
xuemang
yuqie
bibu
jieruo
guangjie
ziqing
zhenqian
peiguang
cong
congrui
biqian
xingshu
lengceng
quanjie
zilu
youbai
chaoyuan
zhongxue
xigui
yizhu
fanchang
meixie
yeyun
changhao
diaocheng
cengpei
xingben
liang
changbei
lazhu
qianchuan
zhongkao
zhenjun
zhua
lexian
quanqian
zangzi
wuqi
xiule
fengjin
momo
huilin
xiang
langzhun
jieguang
zhuo
qundi
shuitun
lubai
luqing
jieke
guliang
zhuhui
guochao
wanju
shubai
yide
zhenzhen
zhangyou
shenlian
zhaohua
hualuo
didun
huachui
luyi
jinle
linxie
zhaokuang
zhaoxing
xiezi
haiqing
xiaobang
guru
yong
manbo
puqiao
linjie
fusheng
ledu
chaochen
numei
qingjuan
zhongqi
zuoju
zhongsheng
teqian
xianjie
qianbai
zhongxing
pingwei
jiejun
tongguang
lumin
zhongan
bihou
jiejing
tingqian
zhaoxiao
jiao
luelan
weigui
zhuqi
kejie
duhong
guanwu
lihai
maojie
jiewen
shahua
yuanchao
baide
jiequan
ledian
qiaozi
chaoqian
wuxi
ying
sanxing
shengshen
shen
xiangqian
qizhong
dianchang
xiaona
chun
niuer
shengzhu
bichen
quanxing
yanshou
shengfang
loulu
zhonger
gongyao
qianfa
shouzhu
yizi
mingzhou
qianchai
bipu
junxi
baijiao
luying
wensan
jieshou
gexing
yunu
jieqiong
zhongshen
qianpin
chao
yaoe
youxing
lukai
yongqian
weicheng
qianqian
chen
maifu
liangli
canrong
zhong
daxiang
xingshan
pingwan
manhui
weiqian
geju
luming
ruijie
nanyan
zhonglu
yaoshen
zhongshi
cengtian
xingjian
yuyan
qianba
zhuang
yinggao
jiebing
baiquan
langliang
cijian
cengshi
bingjie
zhongle
shoujie
chaoding
huiqiao
jing
zangshi
guoxing
runlu
ruojie
baiying
manxiao
benzhu
puyun
lejie
changguo
xiaoxiao
zhuilu
baipei
xueyu
yingjie
cangbai
yuzhan
qiao
huan
zeng
miao
shan
chong
chuai
zh-HansLN.plist
jp-hepburn.plist
zh-HansFN.plist
cutImage
T@"CRImage",&,V_cutImage
activations
T@"NSArray",&,V_activations
codeMap
T@"NSDictionary",&,V_codeMap
codeMapIndex
T@"NSArray",&,V_codeMapIndex
Patterns.plist
URLs
[WARNING] Resource not found. Regex matching disabled.
supportedRegularExpressions
T@"NSArray",&,N,V_supportedRegularExpressions
CROutputTypeText
CROutputStringValue
CROutputType
CROutputConfidence
CROutputBoundingBox
CROutputTopLeft
CROutputTopRight
CROutputBottomRight
CROutputBottomLeft
CROutputBaselineAngle
CROutputComponents
CROutputCandidatesKey
CRImageReaderOutputErrorDomain
Invalid input range.
v32@?0@"NSString"8Q16^B24
supportsSecureCoding
TB,R
stringValue
T@"NSString",&,V_stringValue
confidence
Ti,V_confidence
baselineAngle
Tf,V_baselineAngle
type
T@"NSString",R,V_type
boundingBox
T{CGRect={CGPoint=dd}{CGSize=dd}},R,V_boundingBox
topLeft
T{CGPoint=dd},R,V_topLeft
topRight
T{CGPoint=dd},R,V_topRight
bottomRight
T{CGPoint=dd},R,V_bottomRight
bottomLeft
T{CGPoint=dd},R,V_bottomLeft
candidates
T@"NSArray",R,V_candidates
components
T@"NSArray",R,V_components
Evaluate accuracies %d samples: [%.2f%%]
file: %@
substringMatch: 1
substringMatch: 0
trueLabel:   %@
ctc:         %@
fixedLenght: %@
geometrical: %@
editDistance: %d
                                                   
%.10g
General
Recognizer
RecognitionSession
StrokeGrouping
com.apple.cr.wlm
v28@?0r*8q16I24
'.-/
v24@?0^{_LXEntry=}8*16
string
T@"NSString",&,V_string
probBlank
Td,V_probBlank
probNonBlank
Td,V_probNonBlank
probLexHist
Td,V_probLexHist
probLexCurrWord
Td,V_probLexCurrWord
probCharNGram
Td,V_probCharNGram
probWM
Td,V_probWM
probTotal
Td,R
probLM
probTotalNorm
lxStaticCursor
T^{_LXCursor=},N,V_lxStaticCursor
lxDynamicCursor
T^{_LXCursor=},N,V_lxDynamicCursor
[WARNING] Unable to load language model for '%@'.
T@"NSLocale",R,N,V_locale
Tr^{_LXLexicon=},N,V_staticLexicon
wordLanguageModel
T^v,N,V_wordLanguageModel
Unsupported Model Version %s
value of fragment: %d unknown
com.apple.CoreRecognition.gpu_batch_size
Using custom gpu batch size of %li
com.apple.CoreRecognition.cpu_batch_size
Using custom cpu batch size of %li
modelName must be overridden in subclass
softmax_output
modelName
T@"NSString",R
Tr^i,R,V_codeMap
classCount
Ti,R,V_classCount
modelShape
T@"NSArray",&,V_modelShape
inputWidth
Ti,R
inputHeight
gpuBatchSize
Tq,V_gpuBatchSize
cpuBatchSize
Tq,V_cpuBatchSize
Edge (startNode,endNode)= (
) inSym=
 outSym= 
 weight = 
Invalid empty FST line entry
File not found: (
Node[
has out degree zero but is not marked as a final node
has in degree zero but is not marked as an initial node
0x%zx
languageResources
T@"CRLanguageResources",R,N,V_languageResources
mutablePaths
T@"NSMutableDictionary",&,N,V_mutablePaths
paths
T@"NSDictionary",R
Couldn't parse the label from: %@
%@.plist
identificationNumber
illegibleIdentificationNumber
illegibleCardholderName
expiration
illegibleExpiration
text
T@"NSString",R,V_text
confidenceLevel
Ti,R,V_confidenceLevel
deque
subFeatures
bounds
toplineOrigin
baselineOrigin
textlineHeight
bestCandidateIndex
q24@?0@"CRTextFeature"8@"CRTextFeature"16
B24@?0@"CRTextFeature"8@"NSDictionary"16
contextSet
TB,V_contextSet
T{CGRect={CGPoint=dd}{CGSize=dd}},V_bounds
T{CGPoint=dd},V_topLeft
T{CGPoint=dd},V_topRight
T{CGPoint=dd},V_bottomLeft
T{CGPoint=dd},V_bottomRight
T@"NSArray",&,V_subFeatures
stringValueCandidates
T@"NSArray",&,V_stringValueCandidates
candidateProbs
T@"NSArray",&,V_candidateProbs
subFeatureCandidates
T@"NSArray",&,V_subFeatureCandidates
Tq,V_bestCandidateIndex
segmentationBreakPoints
T@"NSArray",&,V_segmentationBreakPoints
shouldExpandToFullWidth
TB,V_shouldExpandToFullWidth
T@"NSString",&,N,V_stringValue
gtStringValue
T@"NSString",&,N,V_gtStringValue
imageCut
T@"CRImage",&,V_imageCut
T@"NSNumber",&,V_confidence
T{CGPoint=dd},R,V_toplineOrigin
T{CGPoint=dd},R,V_baselineOrigin
sizeHint
TC,V_sizeHint
Tf,V_textlineHeight
featureMapID
Ti,V_featureMapID
punctuationGuess
Ti,V_punctuationGuess
LogAllImages
ImageLogLevel
feature
T@"CRTextFeature",&,V_feature
scale
Tf,V_scale
rotatedROI
T{CGRect={CGPoint=dd}{CGSize=dd}},V_rotatedROI
Model prediction error: %@
v32@?0@"NSMutableArray"8Q16^B24
com.apple.cr.lm%d
output_label_prob_map
v24@?0@"NSArray"8@"NSArray"16
Conversion from representation string to symbol ID string failed
d16@?0r^{NetworkEdge=QQQQdQQ{vector<long, std::__1::allocator<long> >=^q^q{__compressed_pair<long *, std::__1::allocator<long> >=^q}}}8
d16@?0^{CRCHLatticePath=^I^IQQQQB^{CRCHNetwork}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}ddddddddddddQ^{_LXCursor}^{_LXCursor}@i{vector<long, std::__1::allocator<long> >=^q^q{__compressed_pair<long *, std::__1::allocator<long> >=^q}}{_NSRange=QQ}{vector<_NSRange, std::__1::allocator<_NSRange> >=^{_NSRange}^{_NSRange}{__compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >=^{_NSRange}}}{vector<_NSRange, std::__1::allocator<_NSRange> >=^{_NSRange}^{_NSRange}{__compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >=^{_NSRange}}}{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}QQ}8
img_input
T@"MLMultiArray",&,N,V_img_input
T@"MLMultiArray",&,N,V_output_label_prob_map
cr_tr_model.mlmodelc
codemap
No codemap in model
No blank label in codemap
T@"NSString",&,N,V_codemap
codemapArray
T^S,N,V_codemapArray
ctcBlankLabelIndex
Tq,N,V_ctcBlankLabelIndex
image
T@"CRImage",&,V_image
initialSubRegions
T@"NSMutableDictionary",&,V_initialSubRegions
indexedSubRegions
T@"NSMutableDictionary",&,V_indexedSubRegions
T@"NSString",R,N,V_symbol
edgeIndex
TQ,R,V_edgeIndex
score
Td,R,V_score
startNode
TQ,R,V_startNode
endNode
TQ,R,V_endNode
edges
T@"NSArray",R,N,V_edges
lexiconScore
Td,R,V_lexiconScore
cnnScore
Td,R,V_cnnScore
ngramScore
Td,R,V_ngramScore
geometryScore
Td,R,V_geometryScore
patternScore
Td,R,V_patternScore
totalScore
Td,R,V_totalScore
T@"NSMutableArray",&,N,V_mutablePaths
T@"NSArray",R,N
rect
T{CGRect={CGPoint=dd}{CGSize=dd}},R,V_rect
graphEdges
T@"NSArray",R,N,V_graphEdges
mutableResults
T@"NSMutableArray",&,N,V_mutableResults
results
CRPerformanceMetricExecutionTime
CRPerformanceMetricCPUTime
CRPerformanceMetricLifetimeMemPeak
CRPerformanceMetricDeltaMem
CRPerformanceMetricDeltaMemPeak
CRPerformanceMetricRecentMemPeak
CRPerformanceMetricName
CRPerformanceMetricUnit
CRPerformanceMetricMeasureRecentPeak
CRPerformanceMetricDenominator
CRPerformanceMetricPCMetricID
CRPerformanceMetricNumSamples
CRPerformanceMetricMean
CRPerformanceMetricStdDev
CRPerformanceStatisticsName
CRPerformanceStatisticsMetrics
com.apple.CoreRecognition.enable_recent_peak_reset
Execution Time
CPU Time
Lifetime Mem Peak
Delta Mem
Delta Mem Peak
Recent Mem Peak
v32@?0@"NSString"8@"NSDictionary"16^B24
===========%@ (# Samples = %ld)===========
 (%@)
v32@?0@"NSString"8@"CRPerformanceMetric"16^B24
name
T@"NSString",&,V_name
measureRecentPeak
TB,R,V_measureRecentPeak
metrics
T@"NSDictionary",&,V_metrics
displayName
T@"NSString",C,V_displayName
unit
T@"NSString",C,V_unit
serializationKey
T@"NSString",C,V_serializationKey
denominator
Td,V_denominator
sumX
Td,V_sumX
sumX2
Td,V_sumX2
pcMetricID
TQ,V_pcMetricID
numSamples
Tq,V_numSamples
T@"NSString",R,V_string
features
T@"NSArray",R,V_features
wordID
Ti,R,V_wordID
properties
TQ,R,N,V_properties
mutableTokens
T@"NSMutableArray",&,N,V_mutableTokens
cachedScore
Td,V_cachedScore
tokens
T@"NSArray",R,&,N
tokenCount
TQ,R
T@"NSArray",R
mutableRows
T@"NSMutableArray",&,N,V_mutableRows
rows
rowCount
%@%@
mutableCols
T@"NSMutableArray",&,N,V_mutableCols
cols
T@"NSArray",&,N,V_cols
colCount
v16@?0i8i12
CRImages
JPEG
-meta
Exception: %@
No image available
matrix A
Bad matrix dimensions %dx%d
Dimensions of A (%dx%d) and X (%dx%d) do not match.
Dimensions of A (%dx%d) and B (%dx%d) do not match.
v64@?0B8i12{?=iii{?=b1b1b2b11b1}^f}16{?=iii{?=b1b1b2b11b1}^f}40
[CRImage initY8WithCVPixelBuffer:] Unsupported pixel buffer type %i
[CRImage initARGB8888WithCVPixelBuffer:] Unable to initialize ARGB8888 CRImage with 422CbYpCrYp8 pixel buffer
[CRImage initARGB8888WithCVPixelBuffer:] Unable to initialize ARGB8888 CRImage with 420YpCbCr8BiPlanarFullRange pixel buffer
[CRImage initARGB8888WithCVPixelBuffer:] Unsupported pixel buffer type %i
[CRImage initYUV888WithCVPixelBuffer:] Unsupported pixel buffer type %i
[CRImage initAYUV8888WithCVPixelBuffer:] Unsupported pixel buffer type %i
CIColorControls
[CRImage initWithCIImage:toColorSpace:] Unable to initialize from CIImage to color space %@
v20@?0r^{vImage_Buffer=^vQQQ}8B16
[CRImage imageByCroppingTextFeature:correctedBoundingBox:padding:networkInputSize:] Failed to crop text feature %@
ARGB8888
AYpCbCr8888
YpCbCr888
Unknown
Unsupported color space
[CRImage applyEXIFTransformsOnImage:inColorSpace:properties:] Color space %@ not supported. Only color spaces with 1 or 4 bytes per pixel are supported.
[CRImage convertVImage:inColorSpace:toVImage:toColorSpace:] Unable to convert %@ to %@
ciImage
T@"CIImage",&,N,V_ciImage
pixelBuffer
T^{__CVBuffer=},N,V_pixelBuffer
cgImage
T^{CGImage=},N,V_cgImage
vImageDataIsCopy
TB,N,V_vImageDataIsCopy
vImage
T{vImage_Buffer=^vQQQ},R,V_vImage
width
height
colorSpace
Ti,R,V_colorSpace
isFullRange
TB,R,V_isFullRange
Attempting to initialize CRImage_PixelBuffer with nil CVPixelBufferRef
[CRImage_PixelBuffer initWithContentsOfURL:toColorSpace:] Unsupported colorspace: %d 
OCREndToEndTime
found paths with incompatible number of strokes covered from %zu to %zu: previous value %lu, value for new path %zu 
Unsupported Network Version %s
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 3Gram!
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 2Gram!
Error: unable to reallocate memory for path expansion.
OCRTextDetectionTime
%s.columnStride (%d) must be at least %s.rowCount (%d).
%s (%dx%d) and %s (%dx%d) do not represent the same number of right-hand sides.
%s (%dx%d) must represent at least one right-hand side.
%s (size %dx%d) does not match dimensions of %s (%d x %d).
Bad matrix dimensions %dx%d
Dimensions of A (%dx%d) and X (%dx%d) do not match.
Dimensions of A (%dx%d) and B (%dx%d) do not match.
*Y~N
~tOe
HP^t
9RLf
bQHP
9e0W
-NfN
r^s^
}Y~N
~N=r
~Nc[
WTWT
PN>m
x^sY
/qi`
Ha/q
FQey
!h!k
sY*t
/q8n
bTqt
Opeu
~N~g
4g4l
PN%f
^PN
1rPN
\t=O
HPLP
IQHP
hQHP
MR O
PN.s
hQ~N
HPIQ
HPKQ
:dP[
Sf\m
3tHP
PN\g
yr~N
~N}v
O\kS
HPbQ
:c~N
eupQ
KQHP
ydHP
HPhQ
PNxQ
[r?Q
}TAU
HP<t
8l~N
*g~N
^tHP
-NPN
LPHP
PNLu
CRCHNetworkCursor
CRCHPatternNetwork
CRTextDetector
CRIntermediateDetectorResult
CRLanguageCorrection
CRTextDetectorModelInput
MLFeatureProvider
CRTextDetectorModelOutput
CRTextDetectorModel
CRImageReader
CRTextDetectorResults
CRTextRecognizerResults
CRTextResults
Activations
CRCtcTimeSample
GeometricCutTools
SymbolCandidate
CRCtcMaxDecoding
CRFuthark
CRCHCharacterSetRules
CREditDistance
CoreRecognitionCaseCheck
CRPollingTimer
ActivationMapToolsOCR
CRActivationMap
CRRegex
CRImageReaderOutput
NSCopying
NSSecureCoding
NSCoding
CRCtcPath
CRLanguageResources
CRMLModel
CRCtcBeamSearch
CRCtcBeamState
CRTextRecognitionCandidate
CRTextRecognitionResult
CRNMS
CRTextFeature
CRTextFeatureMultiRegion
CRFeatureRecognitionInfo
Futhark
CRTextRecognizerModelInput
CRTextRecognizerModelOutput
CRTextRecognizerModel
CRRecognizerCache
CRLatticeEdge
CRLatticePath
CRLatticeRun
CRLatticeResults
CRPerformanceStatistics
CRPerformanceMetric
CoreRecognition
TextToken
TextRow
TextColumn
TextResults
FKCR
CRImage
CRImage_PixelBuffer
addEdgeIndex:
edgeIndexCount
edgeIndexAtPosition:
.cxx_destruct
.cxx_construct
_edgeIndexes
arrayWithObjects:count:
dictionaryWithObjectsAndKeys:
numberWithInt:
objectForKey:
length
rangeOfComposedCharacterSequenceAtIndex:
substringWithRange:
substringFromIndex:
characterAtIndex:
advanceCursor:withSymbol:
cursorByAdvancingWithString:fromCursor:inNetwork:
init
UTF8String
patternToSymbolMap
dictionary
stringWithFormat:
numberWithLong:
setValue:forKey:
kDefaultPatternsPlusUrlsAndEmails
countByEnumeratingWithState:objects:count:
unsignedLongValue
setObject:forKey:
kDefaultPatterns
kEmailPatterns
kUrlPatterns
dealloc
rootCursorForContentType:inNetwork:
cursorByAdvancingWithSymbol:fromCursor:inNetwork:
isFinalCursor:inNetwork:
initWithFile:
_network
_symbols
_startEdges
_startCursorForContentTypes
setShouldCancel:
objectForKeyedSubscript:
floatValue
intValue
imageByConvertingToColorSpace:
height
width
vImage
shouldCancel
languageSetFromOptionsDictionary:
firstObject
isEqualToString:
arrayWithCapacity:
addObject:
detectTextInImage:withMaxNumScales:options:
textFeatures
detectTextInImage:withMaxNumScales:withThresholdingAlgorithm:options:
doubleValue
numScalesForImage:options:
boolValue
initWithNumberOfScales:
initWithOptions:
detectTextCandidatesInImage:atScale:forNumScales:toDocument:options:
formInitialTextLines:withIncludedCandidates:options:
filterTextLines:withIncludedCandidates:options:
regroupTextLinesForChinese:withIncludedCandidates:options:
addDocument:withIncludedCandidates:options:
pyramidScaleSize
_CRValueWithSize:
insertObject:atIndex:
generateOutputFeatures:forImageSize:withIncludedCandidates:options:
pyramidPreIntraScaleNMSTextFeatures
objectAtIndexedSubscript:
addObjectsFromArray:
imageByScalingToWidth:height:
generateConsolidatedTextFeatures:
detectCITextFeaturesInImage:withThresholdingAlgorithm:options:
addTextFeatures:options:
charLevelNMSDetectTextInImage:logIntermediateDetectorResult:options:
charLevelNMSDetectFutharkTextInImage:logIntermediateDetectorResult:options:
detectCITextFeaturesInImage:options:
detectTextInImage:logIntermediateDetectorResult:options:
observeValueForKeyPath:ofObject:change:context:
_shouldCancel
setPyramidScaleSize:
setPyramidPreIntraScaleNMSTextFeatures:
setPyramidPostIntraScaleNMSTextFeatures:
setPyramidPostInterScaleNMSTextFeatures:
setObject:atIndexedSubscript:
pyramidPostIntraScaleNMSTextFeatures
pyramidPostInterScaleNMSTextFeatures
_pyramidPreIntraScaleNMSTextFeatures
_pyramidPostIntraScaleNMSTextFeatures
_pyramidPostInterScaleNMSTextFeatures
_pyramidScaleSize
setBounds:
setTopLeft:
setTopRight:
setBottomRight:
setBottomLeft:
array
setFeatureMapID:
setPunctuationGuess:
bounds
sortedArrayUsingComparator:
arrayWithArray:
setSubFeatures:
updateSizeHints
stringByAppendingString:
stringByAppendingPathExtension:
languageCode
lowercaseString
scriptCode
capitalizedString
countryCode
uppercaseString
string
appendString:
lengthOfBytesUsingEncoding:
enumerateSubstringsInRange:options:usingBlock:
stringWithCharacters:length:
mutableCopy
replaceCharactersInRange:withString:
copy
whitespaceAndNewlineCharacterSet
invertedSet
rangeOfCharacterFromSet:options:range:
valueWithRange:
isLanguageCorrectionSupportedForLanguage:
exceptionWithName:reason:userInfo:
localeWithLocaleIdentifier:
loadCharacterNgramModel:
numberWithBool:
dictionaryWithObjects:forKeys:count:
locale
newDynamicLexiconForLocale:error:
cStringUsingEncoding:
stringWithUTF8String:
URLWithString:
path
lastPathComponent
stringByDeletingPathExtension
stringByDeletingLastPathComponent
arrayWithObjects:
containsObject:
recognizerFromOptionsDictionary:
adjustCaseConfusions:
invalidSingleCharCNNCode
initWithRect:
addResult:
setGraph:
count
objectAtIndex:
unsignedIntegerValue
initWithString:score:features:wordID:properties:
addToken:
addRow:
addColumn:
findBestPathsForTextResults:numPathsToExtract:ngramsize:
topLeft
topRight
bottomLeft
bottomRight
featureMapID
subFeatures
characterSetWithCharactersInString:
stringValueCandidates
getCharacters:range:
confusableCharacters
preferAllUppercase:
preferAllLowercase:
characterIsMember:
indexOfObject:
candidateProbs
isUp
numberWithDouble:
setCandidateProbs:
colCount
cols
rows
rowCount
score
features
initWithSubfeatures:stringValue:
setStringValueCandidates:
setConfidence:
setSubFeatureCandidates:
correctTextFeature:inImage:withTextPieces:withMaxWidthPerRegion:withMedianCharSpacing:withBreakpoints:segmenter:options:numCharCandidates:downscaleSpaceRatio:latticePresetIdx:latticeResults:
characterLanguageModel
setCharacterLanguageModel:
staticLexicon
setStaticLexicon:
dynamicLexicon
setDynamicLexicon:
setInvalidSingleCharCNNCode:
patternFST
setPatternFST:
_characterLanguageModel
_staticLexicon
_dynamicLexicon
_invalidSingleCharCNNCode
_patternFST
_locale
numberWithUnsignedInteger:
initWithEdgeIndexes:lex:cnn:ngram:geom:pattern:total:
appendPath:
setWithArray:
featureValueWithPixelBuffer:
featureValueForName:
featureNames
initWithData:
data
setData:
_data
featureValueWithMultiArray:
initWithF_score_act_sigmoid_output:geometry_output:
f_score_act_sigmoid_output
setF_score_act_sigmoid_output:
geometry_output
setGeometry_output:
_f_score_act_sigmoid_output
_geometry_output
bundleForClass:
pathForResource:ofType:
fileURLWithPath:
urlOfModelInThisBundle
initWithContentsOfURL:error:
modelWithContentsOfURL:error:
initWithContentsOfURL:configuration:error:
modelWithContentsOfURL:configuration:error:
predictionFromFeatures:options:error:
multiArrayValue
predictionFromFeatures:error:
initWithFeatureProviderArray:
predictionsFromBatch:options:error:
featuresAtIndex:
initWithConfiguration:error:
predictionFromData:error:
predictionsFromInputs:options:error:
model
_model
setTargetLanguages:
targetLanguages
setObject:forKeyedSubscript:
defaultOptions
addEntriesFromDictionary:
setUserOptions:
defaultManager
fileExistsAtPath:
standardUserDefaults
setAllowLowPrecisionAccumulationOnGPU:
setComputeUnits:
setAllowBackgroundGPUCompute:
setOcrDetectorModel:
setOcrRecognizerModel:
languageResourcesForLanguageIdentifier:index:
initWithOptions:languageResources:
setBeamSearches:
setRegExpressions:
setLanguageCorrection:
initWithName:measureRecentPeak:
setDetectorStats:
setPostProcStats:
setRecognizerStats:
setSingleFeatureRecognizerStats:
setSingleFeatureLMStats:
resultsForPixelBuffer:roi:options:error:
resultsForPixelBuffer:roi:options:error:withProgressHandler:
userOptions
revisionNumber
errorWithErrorCode:
initWithCVPixelBuffer:
outputObjectTypes
signpostLog
textResultsForImage:roi:options:error:withProgressHandler:title:
outputWithType:textFeature:options:
baselineAngle
setBaselineAngle:
supportedLanguagesForOptions:revision:error:
preferredLocalizationsFromArray:forPreferences:
textResultsForCGImage:numberOfCandidates:title:
textResultsForCGImage:numberOfCandidates:title:error:
numberWithInteger:
initWithCGImage:toColorSpace:
initWithTextFeature:options:
textResultsForImageAtURL:options:withProgressHandler:
initWithContentsOfURL:toColorSpace:
textResultsForImage:options:withProgressHandler:title:
textResultsForImage:options:title:
mleTextRecognizerResultsForTextFeatures:inImage:options:withProgressHandler:title:error:
textRecognizerResultsForTextFeatures:inImage:options:
mleTextDetectorResultsForImage:options:error:
textDetectorResultsForImage:options:
numberWithUnsignedInt:
descriptionForErrorCode:
errorWithDomain:code:userInfo:
date
imageByCroppingRectangle:
imageByRotating90CW
imageByCorrectingFromOrientation:
mleTextResultsInImage:options:withProgressHandler:title:error:
fkcrTextResultsInImage:options:withProgressHandler:title:
futharkTextResultsInImage:options:
lfpTextResultsInImage:options:withProgressHandler:
detectorResults
scale:offset:
recognizerResults
setStartTime:
setEndTime:
textResultsForCGImage:numberOfCandidates:
setOutputObjectTypes:
resultsForPixelBuffer:options:error:
smallestImageSizeForTextWithRelativeHeight:originalImageSize:
purgeCaches:
textResultsForImageAtURL:options:
textResultsForImage:options:
textRecognizerResultsForTextFeatures:inImage:options:error:
textRecognizerResultsForTextFeatures:forImageAtURL:options:
textDetectorResultsForImage:options:error:
textDetectorResultsForImageAtURL:options:
textResultsForImage:roi:options:error:title:
cancel
detectorStats
postProcStats
recognizerStats
singleFeatureRecognizerStats
singleFeatureLMStats
ocrDetectorModel
ocrRecognizerModel
blank
setBlank:
languageCorrection
beamSearches
regExpressions
_outputObjectTypes
_blank
_detectorStats
_postProcStats
_recognizerStats
_singleFeatureRecognizerStats
_singleFeatureLMStats
_targetLanguages
_ocrDetectorModel
_ocrRecognizerModel
_userOptions
_languageCorrection
_beamSearches
_regExpressions
inputOptions
setInputOptions:
startTime
endTime
setTextFeatures:
_inputOptions
_startTime
_endTime
_textFeatures
codeMaps
setCodeMaps:
latticeResults
setLatticeResults:
_codeMaps
_latticeResults
setDetectorResults:
setRecognizerResults:
_detectorResults
_recognizerResults
isEqual:
doesNotRecognizeSelector:
gpuBatchSize
modelShape
initWithShape:dataType:error:
dataPointer
predict:error:
shape
integerValue
classCount
decodeActivations:
decodeActivations:blank:ctcAllowGarbage:numResultNeeded:
activationsFromImage:
sample
setSample:
candidates
trimCandidates
topCandidate
addCandidate:
_sample
lineThroughPoint:andPoint:andLineThroughPoint:andPoint:intersectAt:
lineThroughPoint:andPoint:andSegmentStartingAt:andEndingAt:intersectAt:
lineThroughPoint:andPoint:andRectangle:intersectAtPoint:andPoint:
lineThroughPoint:andPoint:andImageWithSize:intersectAtPoint:andPoint:
widestVersionOfRect:insideImageWithSize:
isPointArrayARectangle:
boxInNormalizedSpace:toImageSpaceWithSize:plusPadding:destSize:networkInputSize:
insertString:atIndex:
geometricRecognitionOf:inDerotatedRegion:withPadding:fromCorrectedBoundingBox:inImageWithSize:withCodeMap:activations:invert:networkInputSize:
stringByInjectingSpaces:textFeatures:improved:
stringWithCapacity:
reverseObjectEnumerator
allObjects
_newZStringWithString:
geometricRecognitionOf:inDerotatedRegion:withPadding:fromCorrectedBoundingBox:inImageWithSize:withCodeMap:activations:invert:networkInputSize:garbageSymbol:
setSymbol:
probability
setProbability:
setLogProbability:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
rangeOfString:
subarrayWithRange:
substringToIndex:
rangeOfString:options:range:
cleanTextDetectorOutput:
findCorrectedBoundingBoxOfTextFeature:inImageWithSize:
derotateContentsOf:inImage:andOutputTo:withPadding:networkInputSize:
geometricRecognitionOf:inDerotatedRegion:withPadding:fromCorrectedBoundingBox:inImageWithSize:withNetwork:activations:invert:
geometricRecognitionOf:inDerotatedRegion:withPadding:fromCorrectedBoundingBox:inImageWithSize:withNetwork:activations:invert:garbageSymbol:
geometricRecognitionCandidatesOf:inDerotatedRegion:withPadding:fromCorrectedBoundingBox:inImageWithSize:withNetwork:activations:invert:recognitionWindowSize:
symbol
logProbability
description
_symbol
_probability
_logProbability
maxDecodingForInput:outputString:outputProb:outputWhitespaceRanges:
wordFeatures
lastObject
initWithFeatureRect:subFeatureRects:
baselineOrigin
toplineOrigin
setBaselineOrigin:toplineOrigin:slope:
allValues
arrayWithObject:
initWithSubfeatures:
runFutharkOnImage:recognizeFeatures:withMaxNumScales:withThresholdingAlgorithm:options:withProgressHandler:
runFutharkOnImage:recognizeFeatures:options:
initWithDimensions:
setReturnSubFeatures:
setMinimizeFalseDetections:
setMinimumCharacterHeight:
setDetectDiacritics:
setThresholdingAlgorithm:
setRecognitionLanguages:
setMergeSettings:
detectFeaturesInBuffer:error:
boundingBox
text
setStringValue:
confidence
numberWithFloat:
detectTextInImage:options:
detectAndRecognizeTextInImage:options:
detectAndRecognizeTextInImage:options:withProgressHandler:
detectAndRecognizeTextInImage:withMaxNumScales:options:withProgressHandler:
sharedCharacterSetRules
_charSetRulesQueue
_expectedMaxStrokeCount:
_expectedMinStrokeCount:
_characterType:
decimalDigitCharacterSet
alphanumericCharacterSet
expectedMaxStrokeCount:
expectedMinStrokeCount:
characterType:
lowercaseCharSet
setLowercaseCharSet:
uppercaseCharSet
setUppercaseCharSet:
digitCharSet
setDigitCharSet:
startPunctuationCharSet
setStartPunctuationCharSet:
middlePunctuationCharSet
setMiddlePunctuationCharSet:
endPunctuationCharSet
setEndPunctuationCharSet:
digitStartPunctuationCharSet
setDigitStartPunctuationCharSet:
digitEndPunctuationCharSet
setDigitEndPunctuationCharSet:
arithmeticOperatorCharSet
setArithmeticOperatorCharSet:
dateTimeSeparatorCharSet
setDateTimeSeparatorCharSet:
dateTimeEndLetterCharSet
setDateTimeEndLetterCharSet:
numeralEndLetterCharSet
setNumeralEndLetterCharSet:
lexiconSkipCharSet
setLexiconSkipCharSet:
containsDotCharSet
setContainsDotCharSet:
prefixCapitalizationExceptionCharSet
setPrefixCapitalizationExceptionCharSet:
selfLoopPunctuationCharSet
setSelfLoopPunctuationCharSet:
emoticonTopCharSet
setEmoticonTopCharSet:
emoticonMiddleCharSet
setEmoticonMiddleCharSet:
emoticonBottomCharSet
setEmoticonBottomCharSet:
emailAtCharSet
setEmailAtCharSet:
emailPunctuationCharSet
setEmailPunctuationCharSet:
urlPunctuationCharSet
setUrlPunctuationCharSet:
strokeMaxPenalties
setStrokeMaxPenalties:
signatureUniChar
setSignatureUniChar:
_lowercaseCharSet
_uppercaseCharSet
_digitCharSet
_startPunctuationCharSet
_middlePunctuationCharSet
_endPunctuationCharSet
_digitStartPunctuationCharSet
_digitEndPunctuationCharSet
_arithmeticOperatorCharSet
_dateTimeSeparatorCharSet
_dateTimeEndLetterCharSet
_numeralEndLetterCharSet
_lexiconSkipCharSet
_containsDotCharSet
_prefixCapitalizationExceptionCharSet
_selfLoopPunctuationCharSet
_emoticonTopCharSet
_emoticonMiddleCharSet
_emoticonBottomCharSet
_emailAtCharSet
_emailPunctuationCharSet
_urlPunctuationCharSet
__charSetRulesQueue
_strokeMaxPenalties
_signatureUniChar
editDistance:string:threshold:
stringByReplacingOccurrencesOfString:withString:
editDistanceFromString:
editDistanceFromString:threshold:
editDistanceFromStringIgnoringSpaces:threshold:
editDistance:string:
isUppercase
isLowercase
isCaseApplicable
bundleWithIdentifier:
dictionaryWithContentsOfFile:
allKeys
compare:
containsString:
caseInsensitiveCompare:
componentsSeparatedByString:
arrayByAddingObject:
componentsJoinedByString:
deleteCharactersInRange:
controlCharacterSet
givenName
nickname
familyName
middleName
phoneticGivenName
phoneticFamilyName
enumerateKeysAndObjectsUsingBlock:
rangeOfString:options:
calendarWithIdentifier:
components:fromDate:
year
month
regularExpressionWithPattern:options:error:
matchesInString:options:range:
range
rangeAtIndex:
numberOfRanges
rangeValue
setDateFormat:
dateFromString:
currentCalendar
setYear:
dateFromComponents:
hasPrefix:
stringByReplacingCharactersInRange:withString:
arrayByAddingObjectsFromArray:
frame
position
setPosition:
setFrame:
setTarget:
setSelector:
setFireTime:
setFired:
setValid:
valid
fired
fireTime
target
selector
methodForSelector:
initWithTarget:selector:
evalAtTime:
invalidate
_fireTime
_fired
_valid
_target
_selector
enumerateObjectsUsingBlock:
replaceOccurrencesOfString:withString:options:range:
setWithObject:
stringByReplacingMatchesInString:options:range:withTemplate:
valueForKey:
numberOfMatchesInString:options:range:
activationArrayFromActivationMap:codeMapIndex:
setActivations:
dictionaryWithCapacity:
setCodeMap:
setCutImage:
setCodeMapIndex:
initWithActivation:codeMapIndex:codeMap:codeMapSize:blankIndex:cutImage:
cutImage
activations
codeMap
codeMapIndex
_cutImage
_activations
_codeMap
_codeMapIndex
pathExtension
supportedRegularExpressions
rangeOfFirstMatchInString:options:range:
stringMatchesRegex:
setSupportedRegularExpressions:
_supportedRegularExpressions
initWithType:textFeature:withCandidates:options:
stringValue
confidenceLevelForConfidenceScore:options:
initWithType:textFeature:options:
components
_rotatePointIfNeccessary:anchor:angle:
valueWithPoint:
allocWithZone:
type
copyWithZone:
encodeObject:forKey:
encodeInt32:forKey:
encodeRect:forKey:
encodePoint:forKey:
encodeFloat:forKey:
decodeObjectForKey:
decodeInt32ForKey:
decodeRectForKey:
decodePointForKey:
decodeFloatForKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
cornersForCharacterRange:error:
_confidence
_baselineAngle
_type
_stringValue
_candidates
_components
_topLeft
_topRight
_bottomRight
_bottomLeft
_boundingBox
lxStaticCursor
setLxStaticCursor:
lxDynamicCursor
setLxDynamicCursor:
probTotal
probLM
probTotalNorm
probNonBlank
setProbNonBlank:
probBlank
setProbBlank:
setString:
probCharNGram
setProbCharNGram:
probLexHist
setProbLexHist:
probLexCurrWord
setProbLexCurrWord:
probWM
setProbWM:
_getQueue
updateWMProbForPath:stemmingFromPath:wordModel:locale:forChar:
updateNGramProbForPath:stemmingFromPath:withModel:forChar:
updateLexiconProbForPath:stemmingFromPath:staticLexicon:dynamicLexicon:forChar:
_isWordCustom:dynamicLexicon:
useLMTokenizerOnString:outTokenIDs:outTokenRanges:wordModel:locale:
lmProbForString:forPath:originalWordRanges:originalWordIDs:wordRanges:wordIDs:wordModel:
maximumLengthOfBytesUsingEncoding:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
initWithBytes:length:encoding:
normalizeLMTokenIDForWord:withTokenID:outScore:wordModel:
letterCharacterSet
formUnionWithCharacterSet:
whiteSpaceRangesExcludingTrailing
merge:replaceWhiteSpaces:
childPathWithBlankProb:
updateWhitespacesForTimeSample:
pathByExtendingWithCharacter:characterNGramModel:staticLexicon:dynamicLexicon:wordModel:locale:forTimeSample:
containsCustomWords:
_tokenString
_histWordTokenIDs
_beginningCurrentWord
_whitespaceRanges
_numCustomWords
_string
_probBlank
_probNonBlank
_probLexHist
_probLexCurrWord
_probCharNGram
_probWM
_lxStaticCursor
_lxDynamicCursor
weakToWeakObjectsMapTable
initWithLanguageIdentifier:
isLanguageSupported:
localeIdentifier
createCharacterModel:
createStaticLexicon:
createWordLanguageModel:
wordLanguageModel
setWordLanguageModel:
_wordLanguageModel
modelName
initWithURL:error:
initWithURL:restrictToCPU:error:
defaultConfiguration
modelDescription
inputDescriptionsByName
multiArrayConstraint
setModelShape:
setGpuBatchSize:
setCpuBatchSize:
cpuBatchSize
initWithDictionary:error:
initRestrictingToCPU:
inputWidth
inputHeight
_modelHeight
_modelWidth
_classCount
_modelShape
_gpuBatchSize
_cpuBatchSize
loadDynamicLexicon:forLocale:
makeObjectsPerformSelector:
languageResources
addPath:
paths
pathForString:
kBest:discarded:k:
mergePathsWithTrailingWhitespaces
sortedKeys
kBestPathsForInput:k:beamWidth:outputProbs:outputWhitespaceRanges:
_languageResources
dictionaryWithDictionary:
keysSortedByValueUsingSelector:
removeObjectForKey:
mutablePaths
setMutablePaths:
_mutablePaths
stringWithContentsOfFile:encoding:error:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
initWithText:confidenceLevel:
confidenceLevel
_confidenceLevel
_text
buildRectForest:fromDocument:withIncludedCandidates:options:
buildRectForest:fromTextFeatures:options:
buildTextFeaturesFromRectForest:byEdge:options:
convertSubTextFeatures:toRects:
fillRectForestDatum:withRect:normalizedByPlaneWidth:andPlaneHeight:
fillRectForestDatum:withCGRect:
punctuationGuess
fillTextFeature:withRectDatum:
tokenizeTextFeature:intoCutpoints:options:
secondRoundNMSOnLines
_wordForests
_wordTokenizer
_wordNMS
_postWordNMSForests
_lineNMS
_postLineNMSForests
_lineTokenizer
setTextlineHeight:
setBestCandidateIndex:
setShouldExpandToFullWidth:
zero
extent
initWithCITextFeature:inImage:
characterBoxes
shouldExpandToFullWidth
imageCut
setImageCut:
subFeatureCandidates
gtStringValue
setGtStringValue:
bestCandidateIndex
segmentationBreakPoints
setSegmentationBreakPoints:
textlineHeight
sizeHint
setSizeHint:
initWithFeatureRect:inImage:
initWithFeatureRect:subFeatureRects:inImage:
initWithCCFeatureRect:subFeatureRects:rotatePortrait:
initWithArray:copyItems:
textFeatureScaledToImageWidth:height:
textFeaturebyPaddingToWidth:height:
predicateWithBlock:
filteredArrayUsingPredicate:
slopeOfSubFeatures
textFeatureScaledToImage:
imageWithCGImage:
imageByCompositingOverImage:
contextSet
setContextSet:
estimateTopAndBaseline
getBaselineVector
sortUsingComparator:
removeLastObject
removeObject:
pointValue
initWithTopLeft:TopRight:BottomLeft:BottomRight:
sortedTextFeatures:
lineFeatures:imageWidth:imageHeight:
overlayFeatures:onImage:showSubFeatures:
overlayFeaturesVertices:onImage:showSubFeatures:
initWithVNTextObsevation:
initWithSubfeatureRects:inImage:
textFeatureSplitForStringValue:
caseInsensitiveProbabilityCandidateIndex:
addKohlsDigitProjection
isDown
adjustProbabilitiesWithPunctuationGuess
createCharacterSubFeaturesForCandidateAtIndex:
aspectRatioWithImageSize:
createWordSubFeaturesForCandidateAtIndex:topWhiteSpacePoints:bottomWhiteSpacePoints:
calculateTextBoxHeight
_shouldExpandToFullWidth
_sizeHint
_contextSet
_textlineHeight
_featureMapID
_punctuationGuess
_subFeatures
_stringValueCandidates
_candidateProbs
_subFeatureCandidates
_bestCandidateIndex
_segmentationBreakPoints
_gtStringValue
_imageCut
_toplineOrigin
_baselineOrigin
_bounds
initWithOrderedFeatures:
persistentDomainForName:
setFeature:
setScale:
setRotatedROI:
infoForFeature:scale:bounds:rotatedROI:
feature
scale
rotatedROI
_scale
_feature
_rotatedROI
detectCRTextFeaturesInImage:logIntermediateDetectorResult:options:error:
calculateTargetOutputSize:andAdjustedInputScale:andPaddedSize:forImageSize:withMaximumSize:
pixelBufferWithScale:paddedToSize:adjustedToSize:
createCroppedRegion:fromPixelBuffer:
aggregateScoreAndGeoMap:inputGeo:targetSize:outputScoreMap:outputGeoMap:outputOrigin:withScale:
localizedDescription
masksForScoreMap:imageMask:binaryMask:
pixelBufferWithScale:paddedToSize:adjustedToSize:mask:
extractImageMap:targetSize:
extractGeomap:toImages:targetSize:
scaleBufferNearestNeighbor:geoMap:dest:destGeomap:binaryMask:
genPolyResults:geoMap:targetSize:scale:
measureBlock:
strides
convertVImageScoreMaptoArray:
convertVImageGeoMapstoArray:
textFeaturesFromPolygons:withScale:
valueForKeyPath:
rotatePolygon:center:angle:dest:
_indexOfBestModelForAspectRatio:
recognizeFeatures:widthIndex:inImage:options:error:
enumerateObjectsWithOptions:usingBlock:
sortedRotateTextFeatures:center:radians:
combinedLineFeature:lineFeature:
hasAppleNeuralEngine
imageByCroppingRectangle:textFeaturePoints:radians:rotatedRoi:
imageByPaddingToRatioAndScalingToWidth:height:alignCenter:
createFloatBuffer
initWithImg_input:
mleValidateProbability:options:
getWordBoundariesForWhiteSpaceRanges:topPoints:bottomPoints:image:scale:rect:rotatedRoi:radians:
_lmQueues
correctLMDecodingWithRegex:noLMDecoding:
codemapArray
ctcBlankLabelIndex
lmDecodeFeaturesWithInfo:activationMaps:image:options:
maxDecodeFeaturesWithInfo:activationMaps:image:options:
enumerateInputsForFeatures:widthIndex:inImage:options:usingBlock:
appendFormat:
grayscalePixelBufferFromCGImage:withScale:
pixelBufferFromCGImage:withScale:
pixelBufferFromCGImage:withScale:paddedToSize:
cvPixelBufferForImageAtPath:withScale:
createScaledBufferOfSize:fromPixelBuffer:
converMLMultiArraytoArray:targetSize:
futharkValidateProbability:options:
initWithSymbol:index:score:startNode:endNode:
dictionaryWithObjects:forKeys:
img_input
setImg_input:
_img_input
initWithOutput_label_prob_map:
output_label_prob_map
setOutput_label_prob_map:
_output_label_prob_map
bundleWithURL:
dataWithContentsOfFile:
initWithData:encoding:
codemap
predictionFromImg_input:error:
setCodemap:
setCodemapArray:
setCtcBlankLabelIndex:
_codemap
_codemapArray
_ctcBlankLabelIndex
initWithImage:initialTextFeatures:
setImage:
setInitialSubRegions:
initialSubRegions
setIndexedSubRegions:
indexedSubRegions
initWithImage:
addRegion:withSwt:
subFeatureForRegion:
image
_image
_initialSubRegions
_indexedSubRegions
edgeIndex
startNode
endNode
_edgeIndex
_score
_startNode
_endNode
edges
lexiconScore
cnnScore
ngramScore
geometryScore
patternScore
totalScore
_edges
_lexiconScore
_cnnScore
_ngramScore
_geometryScore
_patternScore
_totalScore
rect
graphEdges
_graphEdges
_rect
results
mutableResults
setMutableResults:
_mutableResults
setMetrics:
_canEnableRecentPeakReset
_addMetricWithKey:name:unit:denominator:pcMetricID:
name
measureRecentPeak
metrics
initWithDictionary:copyItems:
initWithDictionary:key:
numSamples
displayName
unit
stringByAppendingFormat:
mean
stdDev
processInfo
processIdentifier
timeIntervalSinceDate:
_evaluateEndedSession:duration:
mergeMetric:
pcMetricWithDisplayName:pcMetricID:unit:denominator:serializationKey:
metricWithDisplayName:unit:denominator:serializationKey:
addSample:
pcMetricID
denominator
boolForKey:
initWithName:
initWithStatistics:
initWithDictionary:
addStatistics:
setName:
_measureRecentPeak
_name
_metrics
initWithDisplayName:unit:denominator:serializationKey:
setPcMetricID:
longLongValue
setNumSamples:
setSumX:
setSumX2:
serializationKey
sumX
sumX2
setDisplayName:
setUnit:
setSerializationKey:
setDenominator:
_displayName
_unit
_serializationKey
_denominator
_sumX
_sumX2
_pcMetricID
_numSamples
lfpValidateProbability:options:
lfpTextResultsInImage:options:
valueWithCGSize:
wordID
properties
_wordID
_features
_properties
tokenCount
setMutableTokens:
tokens
mutableTokens
cachedScore
setCachedScore:
_mutableTokens
_cachedScore
setMutableRows:
initWithRows:
sortRowsInAscendingOrder
mutableRows
_mutableRows
indexAtPosition:
sortCols
transcriptionOfPath:tokenProcessingBlock:
setCols:
mutableCols
setMutableCols:
_cols
_mutableCols
isAbsolutePath
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
URLByDeletingLastPathComponent
checkResourceIsReachableAndReturnError:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToFile:atomically:
stringByAppendingPathComponent:
initWithCVPixelBuffer:options:
contextWithOptions:
createCGImage:fromRect:
initWithBytes:length:
fkcrTextDetectorResultsForImage:options:
fkcrTextRecognizerResultsForTextFeatures:inImage:options:withProgressHandler:title:
fkcrDetectCITextFeaturesInImage:logIntermediateDetectorResult:options:
initWithCapacity:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
_fkcrIndexOfBestModelForAspectRatio:
fkcrRecognizeFeatures:widthIndex:inImage:options:
stringWithString:
fkcrAssignSubFeatureBoundsFromSourceFeature:toDestFeature:
replaceObjectAtIndex:withObject:
fkcrFitQuadraticBezierCurve2D:onImage:
imageByCroppingRectangle:toHeight:andWidth:withRotationAngle:
fkcrCorrectLMDecodingWithRegex:noLMDecoding:
fkcrLMDecodeFeatures:activationMaps:image:options:
fkcrMaxDecodeFeatures:activationMaps:image:options:
fkcrEnumerateInputsForFeatures:widthIndex:inImage:options:usingBlock:
fkcrTextResultsInImage:options:title:
fkcrGrayscalePixelBufferFromCGImage:withScale:
fkcrTextRecognizerResultsForTextFeatures:inImage:options:title:
bytesPerPixelForColorSpace:
allocateVImageBufferWithWidth:height:bytesPerPixel:
allocateVImageBufferWithWidth:height:colorSpace:
initY8WithCVPixelBuffer:
initARGB8888WithCVPixelBuffer:
initAYUV8888WithCVPixelBuffer:
initYUV888WithCVPixelBuffer:
setCiImage:
colorSpace
render:toBitmap:rowBytes:bounds:format:colorSpace:
filterWithName:keysAndValues:
outputImage
context
convertVImage:inColorSpace:toVImage:toColorSpace:
nameForColorSpace:
dataWithBytesNoCopy:length:freeWhenDone:
imageWithBitmapData:bytesPerRow:size:format:colorSpace:
runBlockWithARGB8888Image:blockOwnsMemory:
cgImage
initWithWidth:height:colorSpace:
initWithVImageBuffer:inColorSpace:
bytesPerPixel
cgOrientation:toVImageRotationMode:andReflection:
applyEXIFTransformsOnImage:inColorSpace:properties:
channelsForColorSpace:
initWithVImageBuffer:inColorSpace:toColorSpace:
initWithCGImage:properties:toColorSpace:
initWithCVPixelBuffer:toColorSpace:
initWithCIImage:toColorSpace:
drawVerticalLineAtXOffset:image:
ciImage
pixelBufferWithScale:paddedToSize:
pixelBuffer
imageByApplyingHistogramCorrection
imageByCroppingTextFeature:correctedBoundingBox:padding:networkInputSize:
imageByRotating180
imageByPaddingToRatioAndScalingToWidth:height:
imageByPaddingX:paddingY:
imageByDilating
imageByApplyingBinaryMask:
numChannels
initWithMat:
writeToFile:
imageByInvertingIntensity
imageByOverlayingImage:opacity:
imageByOverlayingRects:count:
initWithCIImage:
initWithCGImage:
initWithCGImage:properties:
initWithContentsOfURL:
initWithWidth:height:
initWithVImageBuffer:
isFullRange
setPixelBuffer:
setCgImage:
vImageDataIsCopy
setVImageDataIsCopy:
_pixelBuffer
_isFullRange
_vImageDataIsCopy
_colorSpace
_ciImage
_cgImage
_vImage
_pixelBufferFromUrl:
pixelBufferWithScale:paddedToSize:adjustedToSize:mask:format:
imageWithContentsOfURL:options:
render:toCVPixelBuffer:
pixelBufferWithFormat:
v24@0:8Q16
Q16@0:8
Q24@0:8Q16
v16@0:8
@16@0:8
{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}
@28@0:8i16@20
@40@0:8@16@24@32
B32@0:8@16@24
@32@0:8@16Q24
@24@0:8@16
^{CRCHNetwork=^{?}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q{vector<CRCHNetworkNode, std::__1::allocator<CRCHNetworkNode> >=^{CRCHNetworkNode}^{CRCHNetworkNode}{__compressed_pair<CRCHNetworkNode *, std::__1::allocator<CRCHNetworkNode> >=^{CRCHNetworkNode}}}{set<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >={__tree<unsigned long, std::__1::less<unsigned long>, std::__1::allocator<unsigned long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long> >=Q}}}{vector<NetworkEdge, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}^{NetworkEdge}{__compressed_pair<NetworkEdge *, std::__1::allocator<NetworkEdge> >=^{NetworkEdge}}}{vector<const NetworkEdge *, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}^^{NetworkEdge}{__compressed_pair<const NetworkEdge **, std::__1::allocator<const NetworkEdge *> >=^^{NetworkEdge}}}{CRCHSymbolMap=^^?{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}B{map<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >={__tree<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > > >, std::__1::less<unsigned long>, true> >=Q}}}{set<CRCHuint128, std::__1::less<CRCHuint128>, std::__1::allocator<CRCHuint128> >={__tree<CRCHuint128, std::__1::less<CRCHuint128>, std::__1::allocator<CRCHuint128> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<CRCHuint128, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<CRCHuint128> >=Q}}}^IQ}
@"NSDictionary"
B56@0:8@16q24q32^{Document=^^?{Mat=^^?*iii[32i][32i]{SmartPtr=^^?^v^i}ii[32i][32i]Q}[2{vector<TextDetector::Stroke, std::__1::allocator<TextDetector::Stroke> >=^{Stroke}^{Stroke}{__compressed_pair<TextDetector::Stroke *, std::__1::allocator<TextDetector::Stroke> >=^{Stroke}}}][2{vector<TextDetector::Character, std::__1::allocator<TextDetector::Character> >=^{Character}^{Character}{__compressed_pair<TextDetector::Character *, std::__1::allocator<TextDetector::Character> >=^{Character}}}]{vector<TextDetector::Word, std::__1::allocator<TextDetector::Word> >=^{Word}^{Word}{__compressed_pair<TextDetector::Word *, std::__1::allocator<TextDetector::Word> >=^{Word}}}[2{RectangleTree={IntervalTree<int>=^^?{vector<IntervalTree<int>::Interval, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}^{Interval}{__compressed_pair<IntervalTree<int>::Interval *, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}}}{vector<IntervalTree<int>::Node, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<IntervalTree<int>::Node *, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}}}Q{BinarySearchTree<int>=^^?{vector<BinarySearchTree<int>::Node, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<BinarySearchTree<int>::Node *, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}}}Q}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}{IntervalTree<int>=^^?{vector<IntervalTree<int>::Interval, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}^{Interval}{__compressed_pair<IntervalTree<int>::Interval *, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}}}{vector<IntervalTree<int>::Node, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<IntervalTree<int>::Node *, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}}}Q{BinarySearchTree<int>=^^?{vector<BinarySearchTree<int>::Node, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<BinarySearchTree<int>::Node *, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}}}Q}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}}][3i]B}40@48
B40@0:8^{Document=^^?{Mat=^^?*iii[32i][32i]{SmartPtr=^^?^v^i}ii[32i][32i]Q}[2{vector<TextDetector::Stroke, std::__1::allocator<TextDetector::Stroke> >=^{Stroke}^{Stroke}{__compressed_pair<TextDetector::Stroke *, std::__1::allocator<TextDetector::Stroke> >=^{Stroke}}}][2{vector<TextDetector::Character, std::__1::allocator<TextDetector::Character> >=^{Character}^{Character}{__compressed_pair<TextDetector::Character *, std::__1::allocator<TextDetector::Character> >=^{Character}}}]{vector<TextDetector::Word, std::__1::allocator<TextDetector::Word> >=^{Word}^{Word}{__compressed_pair<TextDetector::Word *, std::__1::allocator<TextDetector::Word> >=^{Word}}}[2{RectangleTree={IntervalTree<int>=^^?{vector<IntervalTree<int>::Interval, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}^{Interval}{__compressed_pair<IntervalTree<int>::Interval *, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}}}{vector<IntervalTree<int>::Node, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<IntervalTree<int>::Node *, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}}}Q{BinarySearchTree<int>=^^?{vector<BinarySearchTree<int>::Node, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<BinarySearchTree<int>::Node *, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}}}Q}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}{IntervalTree<int>=^^?{vector<IntervalTree<int>::Interval, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}^{Interval}{__compressed_pair<IntervalTree<int>::Interval *, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}}}{vector<IntervalTree<int>::Node, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<IntervalTree<int>::Node *, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}}}Q{BinarySearchTree<int>=^^?{vector<BinarySearchTree<int>::Node, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<BinarySearchTree<int>::Node *, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}}}Q}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}}][3i]B}16^{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}24@32
B40@0:8^{vector<TextDetector::Word, std::__1::allocator<TextDetector::Word> >=^{Word}^{Word}{__compressed_pair<TextDetector::Word *, std::__1::allocator<TextDetector::Word> >=^{Word}}}16r^{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}24@32
B40@0:8^{vector<TextDetector::Word, std::__1::allocator<TextDetector::Word> >=^{Word}^{Word}{__compressed_pair<TextDetector::Word *, std::__1::allocator<TextDetector::Word> >=^{Word}}}16^{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}24@32
@64@0:8^{vector<TextDetector::Word, std::__1::allocator<TextDetector::Word> >=^{Word}^{Word}{__compressed_pair<TextDetector::Word *, std::__1::allocator<TextDetector::Word> >=^{Word}}}16{Size_<unsigned long>=^^?QQ}24r^{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}48@56
@32@0:8@16@24
@40@0:8@16q24@32
Q32@0:8@16@24
@40@0:8@16^@24@32
v48@0:8@16@24@32^v40
B16@0:8
v20@0:8B16
@24@0:8q16
v24@0:8@16
@"NSMutableArray"
B24@0:8@16
@100@0:8@16@24@32d40d48r^{vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >=^{vector<BreakPoint, std::__1::allocator<BreakPoint> >}^{vector<BreakPoint, std::__1::allocator<BreakPoint> >}{__compressed_pair<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > *, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >=^{vector<BreakPoint, std::__1::allocator<BreakPoint> >}}}56^{Segmenter={vector<std::__1::vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > > > >=^{vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >}^{vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > > > >=^{vector<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> >, std::__1::allocator<std::__1::vector<BreakPoint, std::__1::allocator<BreakPoint> > > >}}}@@@@@{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}BBBBBi}64@72i80B84i88@92
^{_LXLexicon=}32@0:8@16^@24
@40@0:8@16Q24Q32
^v16@0:8
v24@0:8^v16
^{_LXLexicon=}16@0:8
v24@0:8^{_LXLexicon=}16
^{_LXLexicon=}
@"NSString"
@"CRCHPatternNetwork"
@"NSLocale"
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
@24@0:8^{__CVBuffer=}16
^{__CVBuffer=}16@0:8
v24@0:8^{__CVBuffer=}16
^{__CVBuffer=}
@"MLMultiArray"
@32@0:8@16^@24
@40@0:8@16@24^@32
@32@0:8^{__CVBuffer=}16^@24
@"MLModel"
@40@0:8@16q24^@32
@32@0:8^{CGImage=}16q24
@40@0:8^{CGImage=}16q24^@32
@48@0:8^{CGImage=}16q24^@32^@40
@20@0:8i16
@40@0:8^{__CVBuffer=}16@24^@32
@72@0:8^{__CVBuffer=}16{CGRect={CGPoint=dd}{CGSize=dd}}24@56^@64
@80@0:8^{__CVBuffer=}16{CGRect={CGPoint=dd}{CGSize=dd}}24@56^@64@?72
{CGSize=dd}40@0:8d16{CGSize=dd}24
@40@0:8@16@24@?32
@48@0:8@16@24@?32^@40
@48@0:8@16@24@32^@40
@80@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56^@64^@72
@88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56^@64@?72^@80
S16@0:8
v20@0:8S16
@"NSArray"
@"CRPerformanceStatistics"
@"NSOrderedSet"
@"CRTextDetectorModel"
@"CRTextRecognizerModel"
@"CRLanguageCorrection"
@"CRRegex"
@"NSDate"
@"CRLatticeResults"
@"CRTextDetectorResults"
@"CRTextRecognizerResults"
@24@0:8^{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}16
@40@0:8^{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}16S24B28q32
{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}24@0:8@16
r^{vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}16@0:8
{CRCtcCandidate=if}16@0:8
v24@0:8{CRCtcCandidate=if}16
^{CRCTCPriorityQueue={priority_queue<CRCtcCandidate, std::__1::vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >, CRCTCPriorityQueue::QueueComparison>={vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}{QueueComparison=}}B{vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}}16@0:8
v24@0:8^{CRCTCPriorityQueue={priority_queue<CRCtcCandidate, std::__1::vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >, CRCTCPriorityQueue::QueueComparison>={vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}{QueueComparison=}}B{vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}}16
{CRCtcCandidate="symbol"i"prob"f}
^{CRCTCPriorityQueue={priority_queue<CRCtcCandidate, std::__1::vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >, CRCTCPriorityQueue::QueueComparison>={vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}{QueueComparison=}}B{vector<CRCtcCandidate, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}^{CRCtcCandidate}{__compressed_pair<CRCtcCandidate *, std::__1::allocator<CRCtcCandidate> >=^{CRCtcCandidate}}}}
@40@0:8@16{CGSize=dd}24
B88@0:8{CGPoint=dd}16{CGPoint=dd}32{CGPoint=dd}48{CGPoint=dd}64^{CGPoint=dd}80
B96@0:8{CGPoint=dd}16{CGPoint=dd}32{CGRect={CGPoint=dd}{CGSize=dd}}48^{CGPoint=dd}80^{CGPoint=dd}88
B80@0:8{CGPoint=dd}16{CGPoint=dd}32{CGSize=dd}48^{CGPoint=dd}64^{CGPoint=dd}72
@80@0:8@16{CGSize=dd}24{CGPoint=dd}40^{CGSize=dd}56{CGSize=dd}64
B96@0:8@16{vImage_Buffer=^vQQQ}24^{vImage_Buffer=^vQQQ}56{CGPoint=dd}64{CGSize=dd}80
@36@0:8@16@24B32
@132@0:8@16{vImage_Buffer=^vQQQ}24{CGPoint=dd}56@72{CGSize=dd}80^{CHNeuralNetwork={vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}^{pair<int, int>}{__compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}Biiii^{?}ii^{Matrix<short>}^s^{Matrix<short>}^s^i}96{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}104B128
@148@0:8@16{vImage_Buffer=^vQQQ}24{CGPoint=dd}56@72{CGSize=dd}80r^i96{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}104B128{CGSize=dd}132
@136@0:8@16{vImage_Buffer=^vQQQ}24{CGPoint=dd}56@72{CGSize=dd}80^{CHNeuralNetwork={vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}^{pair<int, int>}{__compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}Biiii^{?}ii^{Matrix<short>}^s^{Matrix<short>}^s^i}96{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}104B128S132
@152@0:8@16{vImage_Buffer=^vQQQ}24{CGPoint=dd}56@72{CGSize=dd}80r^i96{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}104B128{CGSize=dd}132S148
@148@0:8@16{vImage_Buffer=^vQQQ}24{CGPoint=dd}56@72{CGSize=dd}80^{CHNeuralNetwork={vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}^{pair<int, int>}{__compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > >=^{pair<int, int>}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}{set<int, std::__1::less<int>, std::__1::allocator<int> >={__tree<int, std::__1::less<int>, std::__1::allocator<int> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<int, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<int> >=Q}}}Biiii^{?}ii^{Matrix<short>}^s^{Matrix<short>}^s^i}96{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}104B128{CGSize=dd}132
d16@0:8
v24@0:8d16
v48@0:8@16^@24^@32^@40
@40@0:8@16Q24@32
@48@0:8@16Q24q32@40
@48@0:8@16Q24@32@?40
@36@0:8@16B24@28
@60@0:8@16B24Q28q36@44@?52
Q20@0:8I16
{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >={__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >={__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >=Q}}}16
{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >={__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >=Q}}}16@0:8
v40@0:8{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >={__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >=Q}}}16
@"NSCharacterSet"
@"NSObject<OS_dispatch_queue>"
{map<unsigned int, unsigned long, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<unsigned int, unsigned long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long>, std::__1::less<unsigned int>, true> >="__value_"Q}}}
{map<unsigned int, int, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >="__tree_"{__tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, std::__1::less<unsigned int>, true> >="__value_"Q}}}
q24@0:8@16
q32@0:8@16q24
q32@0:8@16@24
q40@0:8@16@24q32
@32@0:8@16:24
v40@0:8{?=qiIq}16
{?=qiIq}16@0:8
:16@0:8
v24@0:8:16
{?="value"q"timescale"i"flags"I"epoch"q}
@48@0:8{vector<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}{__compressed_pair<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > > > >=^{vector<std::__1::vector<float, std::__1::allocator<float> >, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float> > > >}}}16^@40
@56@0:8@16@24^i32i40S44@48
@"CRImage"
i32@0:8d16@24
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@44@0:8@16@24B32@36
@40@0:8{_NSRange=QQ}16^@32
{CGPoint=dd}56@0:8{CGPoint=dd}16{CGPoint=dd}32d48
i16@0:8
v20@0:8i16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGPoint=dd}16@0:8
f16@0:8
v20@0:8f16
{CGPoint="x"d"y"d}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v44@0:8@16@24^v32S40
v52@0:8@16@24^{_LXLexicon=}32^{_LXLexicon=}40S48
v52@0:8@16@24^v32@40S48
v56@0:8@16^@24^@32^v40@48
d72@0:8@16@24@32@40@48@56^v64
I44@0:8@16I24^d28^v36
B32@0:8@16^{_LXLexicon=}24
v28@0:8@16B24
@24@0:8d16
@68@0:8S16^v20^{_LXLexicon=}28^{_LXLexicon=}36^v44@52Q60
B24@0:8^{_LXLexicon=}16
^{_LXCursor=}16@0:8
v24@0:8^{_LXCursor=}16
{vector<unsigned int, std::__1::allocator<unsigned int> >="__begin_"^I"__end_"^I"__end_cap_"{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >="__value_"^I}}
{vector<_NSRange, std::__1::allocator<_NSRange> >="__begin_"^{_NSRange}"__end_"^{_NSRange}"__end_cap_"{__compressed_pair<_NSRange *, std::__1::allocator<_NSRange> >="__value_"^{_NSRange}}}
^{_LXCursor=}
@32@0:8@16q24
^v24@0:8@16
^{_LXLexicon=}24@0:8@16
r^{_LXLexicon=}16@0:8
v24@0:8r^{_LXLexicon=}16
r^{_LXLexicon=}
@20@0:8B16
@36@0:8@16B24^@28
r^i16@0:8
q16@0:8
v24@0:8q16
v32@0:8@16@24
@56@0:8@16Q24Q32^@40^@48
@"CRLanguageResources"
v40@0:8^@16^@24Q32
@"NSMutableDictionary"
@28@0:8@16i24
B40@0:8^{Document=^^?{Mat=^^?*iii[32i][32i]{SmartPtr=^^?^v^i}ii[32i][32i]Q}[2{vector<TextDetector::Stroke, std::__1::allocator<TextDetector::Stroke> >=^{Stroke}^{Stroke}{__compressed_pair<TextDetector::Stroke *, std::__1::allocator<TextDetector::Stroke> >=^{Stroke}}}][2{vector<TextDetector::Character, std::__1::allocator<TextDetector::Character> >=^{Character}^{Character}{__compressed_pair<TextDetector::Character *, std::__1::allocator<TextDetector::Character> >=^{Character}}}]{vector<TextDetector::Word, std::__1::allocator<TextDetector::Word> >=^{Word}^{Word}{__compressed_pair<TextDetector::Word *, std::__1::allocator<TextDetector::Word> >=^{Word}}}[2{RectangleTree={IntervalTree<int>=^^?{vector<IntervalTree<int>::Interval, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}^{Interval}{__compressed_pair<IntervalTree<int>::Interval *, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}}}{vector<IntervalTree<int>::Node, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<IntervalTree<int>::Node *, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}}}Q{BinarySearchTree<int>=^^?{vector<BinarySearchTree<int>::Node, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<BinarySearchTree<int>::Node *, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}}}Q}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}{IntervalTree<int>=^^?{vector<IntervalTree<int>::Interval, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}^{Interval}{__compressed_pair<IntervalTree<int>::Interval *, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}}}{vector<IntervalTree<int>::Node, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<IntervalTree<int>::Node *, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}}}Q{BinarySearchTree<int>=^^?{vector<BinarySearchTree<int>::Node, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<BinarySearchTree<int>::Node *, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}}}Q}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}}][3i]B}16r^{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}24@32
Q32@0:8@16^{valarray<float>=^f^f}24
Q40@0:8@16^{deque<unsigned short, std::__1::allocator<unsigned short> >={__split_buffer<unsigned short *, std::__1::allocator<unsigned short *> >=^^S^^S^^S{__compressed_pair<unsigned short **, std::__1::allocator<unsigned short *> >=^^S}}Q{__compressed_pair<unsigned long, std::__1::allocator<unsigned short> >=Q}}24@32
B48@0:8^{RectForest<unsigned short, float>=^^?QQ{deque<std::__1::valarray<float>, std::__1::allocator<std::__1::valarray<float> > >={__split_buffer<std::__1::valarray<float> *, std::__1::allocator<std::__1::valarray<float> *> >=^^{valarray<float>}^^{valarray<float>}^^{valarray<float>}{__compressed_pair<std::__1::valarray<float> **, std::__1::allocator<std::__1::valarray<float> *> >=^^{valarray<float>}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<float> > >=Q}}{deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >={__split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}{__compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >=Q}}{deque<std::__1::valarray<nms::DocumentEntityInfo>, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> > >={__split_buffer<std::__1::valarray<nms::DocumentEntityInfo> *, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> *> >=^^{valarray<nms::DocumentEntityInfo>}^^{valarray<nms::DocumentEntityInfo>}^^{valarray<nms::DocumentEntityInfo>}{__compressed_pair<std::__1::valarray<nms::DocumentEntityInfo> **, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> *> >=^^{valarray<nms::DocumentEntityInfo>}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> > >=Q}}}16^{Document=^^?{Mat=^^?*iii[32i][32i]{SmartPtr=^^?^v^i}ii[32i][32i]Q}[2{vector<TextDetector::Stroke, std::__1::allocator<TextDetector::Stroke> >=^{Stroke}^{Stroke}{__compressed_pair<TextDetector::Stroke *, std::__1::allocator<TextDetector::Stroke> >=^{Stroke}}}][2{vector<TextDetector::Character, std::__1::allocator<TextDetector::Character> >=^{Character}^{Character}{__compressed_pair<TextDetector::Character *, std::__1::allocator<TextDetector::Character> >=^{Character}}}]{vector<TextDetector::Word, std::__1::allocator<TextDetector::Word> >=^{Word}^{Word}{__compressed_pair<TextDetector::Word *, std::__1::allocator<TextDetector::Word> >=^{Word}}}[2{RectangleTree={IntervalTree<int>=^^?{vector<IntervalTree<int>::Interval, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}^{Interval}{__compressed_pair<IntervalTree<int>::Interval *, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}}}{vector<IntervalTree<int>::Node, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<IntervalTree<int>::Node *, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}}}Q{BinarySearchTree<int>=^^?{vector<BinarySearchTree<int>::Node, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<BinarySearchTree<int>::Node *, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}}}Q}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}{IntervalTree<int>=^^?{vector<IntervalTree<int>::Interval, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}^{Interval}{__compressed_pair<IntervalTree<int>::Interval *, std::__1::allocator<IntervalTree<int>::Interval> >=^{Interval}}}{vector<IntervalTree<int>::Node, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<IntervalTree<int>::Node *, std::__1::allocator<IntervalTree<int>::Node> >=^{Node}}}Q{BinarySearchTree<int>=^^?{vector<BinarySearchTree<int>::Node, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}^{Node}{__compressed_pair<BinarySearchTree<int>::Node *, std::__1::allocator<BinarySearchTree<int>::Node> >=^{Node}}}Q}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}}][3i]B}24r^{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}32@40
B40@0:8^{RectForest<unsigned short, float>=^^?QQ{deque<std::__1::valarray<float>, std::__1::allocator<std::__1::valarray<float> > >={__split_buffer<std::__1::valarray<float> *, std::__1::allocator<std::__1::valarray<float> *> >=^^{valarray<float>}^^{valarray<float>}^^{valarray<float>}{__compressed_pair<std::__1::valarray<float> **, std::__1::allocator<std::__1::valarray<float> *> >=^^{valarray<float>}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<float> > >=Q}}{deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >={__split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}{__compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >=Q}}{deque<std::__1::valarray<nms::DocumentEntityInfo>, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> > >={__split_buffer<std::__1::valarray<nms::DocumentEntityInfo> *, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> *> >=^^{valarray<nms::DocumentEntityInfo>}^^{valarray<nms::DocumentEntityInfo>}^^{valarray<nms::DocumentEntityInfo>}{__compressed_pair<std::__1::valarray<nms::DocumentEntityInfo> **, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> *> >=^^{valarray<nms::DocumentEntityInfo>}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> > >=Q}}}16@24@32
v32@0:8@16r^{valarray<float>=^f^f}24
@40@0:8r^{RectForest<unsigned short, float>=^^?QQ{deque<std::__1::valarray<float>, std::__1::allocator<std::__1::valarray<float> > >={__split_buffer<std::__1::valarray<float> *, std::__1::allocator<std::__1::valarray<float> *> >=^^{valarray<float>}^^{valarray<float>}^^{valarray<float>}{__compressed_pair<std::__1::valarray<float> **, std::__1::allocator<std::__1::valarray<float> *> >=^^{valarray<float>}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<float> > >=Q}}{deque<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >={__split_buffer<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}{__compressed_pair<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > **, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > *> >=^^{deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > >}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::pair<unsigned short, unsigned short>, std::__1::allocator<std::__1::pair<unsigned short, unsigned short> > > > >=Q}}{deque<std::__1::valarray<nms::DocumentEntityInfo>, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> > >={__split_buffer<std::__1::valarray<nms::DocumentEntityInfo> *, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> *> >=^^{valarray<nms::DocumentEntityInfo>}^^{valarray<nms::DocumentEntityInfo>}^^{valarray<nms::DocumentEntityInfo>}{__compressed_pair<std::__1::valarray<nms::DocumentEntityInfo> **, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> *> >=^^{valarray<nms::DocumentEntityInfo>}}}Q{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<nms::DocumentEntityInfo> > >=Q}}}16Q24@32
B48@0:8^{slice_array<float>=^fQQ}16r^{Rect_<int>=^^?iiii}24Q32Q40
v32@0:8^{slice_array<float>=^fQQ}16r^{CGRect={CGPoint=dd}{CGSize=dd}}24
{deque<nms::RectForest<unsigned short, float>, std::__1::allocator<nms::RectForest<unsigned short, float> > >="__map_"{__split_buffer<nms::RectForest<unsigned short, float> *, std::__1::allocator<nms::RectForest<unsigned short, float> *> >="__first_"^^{RectForest<unsigned short, float>}"__begin_"^^{RectForest<unsigned short, float>}"__end_"^^{RectForest<unsigned short, float>}"__end_cap_"{__compressed_pair<nms::RectForest<unsigned short, float> **, std::__1::allocator<nms::RectForest<unsigned short, float> *> >="__value_"^^{RectForest<unsigned short, float>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<nms::RectForest<unsigned short, float> > >="__value_"Q}}
{PyramidTokenizer<unsigned short, float>="_vptr$PyramidTokenizer"^^?"pForests"^{deque<nms::RectForest<unsigned short, float>, std::__1::allocator<nms::RectForest<unsigned short, float> > >}"config"{PyramidTokenizerConfig="_vptr$PyramidTokenizerConfig"^^?"isRecursive"B"spacingClipMin"d"spacingUniformityMinThresholdClipMin"d"spacingUniformityMinThresholdClipMax"d"spacingUniformityMinThresholdTrueProbability"d"spacingRatioMultiplier"d"useAdpativeSpacingRatioMultiplier"B"adpativeSpacingRatioMultiplierMinNumRects"Q"adaptiveSpacingRatioMultiplierMinVariationThreshold"d"adaptiveSpacingRatioMultiplierLowerBound"d"singleTokenNumCharsMaxThreshold"Q"singleTokenNumCutpointCandidatesMaxThreshold"Q}}
{PyramidNMS<unsigned short, float, unsigned char>="_vptr$PyramidNMS"^^?"fullySpecifiedForests"{deque<bool, std::__1::allocator<bool> >="__map_"{__split_buffer<bool *, std::__1::allocator<bool *> >="__first_"^^B"__begin_"^^B"__end_"^^B"__end_cap_"{__compressed_pair<bool **, std::__1::allocator<bool *> >="__value_"^^B}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<bool> >="__value_"Q}}"masksValid"{deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > >="__map_"{__split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> >="__first_"^^{valarray<bool>}"__begin_"^^{valarray<bool>}"__end_"^^{valarray<bool>}"__end_cap_"{__compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> >="__value_"^^{valarray<bool>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > >="__value_"Q}}"masksInvalid"{deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > >="__map_"{__split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> >="__first_"^^{valarray<bool>}"__begin_"^^{valarray<bool>}"__end_"^^{valarray<bool>}"__end_cap_"{__compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> >="__value_"^^{valarray<bool>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > >="__value_"Q}}"masksPendingInvalid"{deque<std::__1::valarray<bool>, std::__1::allocator<std::__1::valarray<bool> > >="__map_"{__split_buffer<std::__1::valarray<bool> *, std::__1::allocator<std::__1::valarray<bool> *> >="__first_"^^{valarray<bool>}"__begin_"^^{valarray<bool>}"__end_"^^{valarray<bool>}"__end_cap_"{__compressed_pair<std::__1::valarray<bool> **, std::__1::allocator<std::__1::valarray<bool> *> >="__value_"^^{valarray<bool>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<bool> > >="__value_"Q}}"ipus"{deque<std::__1::valarray<float>, std::__1::allocator<std::__1::valarray<float> > >="__map_"{__split_buffer<std::__1::valarray<float> *, std::__1::allocator<std::__1::valarray<float> *> >="__first_"^^{valarray<float>}"__begin_"^^{valarray<float>}"__end_"^^{valarray<float>}"__end_cap_"{__compressed_pair<std::__1::valarray<float> **, std::__1::allocator<std::__1::valarray<float> *> >="__value_"^^{valarray<float>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<float> > >="__value_"Q}}"histsWordCoincide"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsWordCoincide"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsWordContain"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsWordContain"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsWordConstitute"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsWordConstitute"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsWordOverlap"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsWordOverlap"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsLineCoincide"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsLineCoincide"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsLineContain"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsLineContain"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsLineConstitute"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsLineConstitute"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"histsLineOverlap"{deque<std::__1::valarray<unsigned char>, std::__1::allocator<std::__1::valarray<unsigned char> > >="__map_"{__split_buffer<std::__1::valarray<unsigned char> *, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__first_"^^{valarray<unsigned char>}"__begin_"^^{valarray<unsigned char>}"__end_"^^{valarray<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::valarray<unsigned char> **, std::__1::allocator<std::__1::valarray<unsigned char> *> >="__value_"^^{valarray<unsigned char>}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::valarray<unsigned char> > >="__value_"Q}}"idxsLineOverlap"{deque<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__map_"{__split_buffer<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__first_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__begin_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}"__end_cap_"{__compressed_pair<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > **, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > *> >="__value_"^^{deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > >}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::deque<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > >, std::__1::allocator<std::__1::deque<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> >, std::__1::allocator<std::__1::deque<unsigned short, std::__1::allocator<unsigned short> > > > > > > >="__value_"Q}}"pForests"^{deque<nms::RectForest<unsigned short, float>, std::__1::allocator<nms::RectForest<unsigned short, float> > >}"config"{PyramidNMSConfig="_vptr$PyramidNMSConfig"^^?"method"Q"ipuNumSamples"Q"ipuValidMinThreshold"d"ipuUniformityMinThreshold"d"ipuNegativeHSpacingToWidthRatioMaxThreshold"d"ipuNumNegativeHSpacingsMaxThreshold"d"ipuUseNumChars"B"ipuNumCharsUpperClip"Q"ipuUseWidthUniformity"B"ipuUseAreaUniformoity"B"ipuUseHSpacingUniformity"B"ipuUseCenterHeightUniformity"B"ipuUseScaleIndex"B"containmentIPUCompetingScaledMinThreshold"d"containmentNumLowerLevelDatumCompetingMinThreshold"Q"containmentContainingDatumCrossLevelIntersectionMaxThreshold"d"containmentInvalidSubdatumPercentageMaxThreshold"d"containmentInvalidDatumContainingIOMinMinThreshold"d"pendingInvalidRejectCompetingDatums"B"filterByIPUAndUniformity"B"processCoincidence"B"processContainment"B"processOverlap"B"useOverlappingWordsInProcessingContainment"B"processPendingInvalid"B"lineCoincidenceIOUMinThreshold"d"lineCoincidenceIOMinMinThreshold"d"lineContainmentIOUMaxThreshold"d"lineContainmentIOMinMinThreshold"d"lineConstitutionIOUMaxThreshold"d"lineConstitutionIOMinMinThreshold"d"lineOverlapIOUMinThreshold"d"lineOverlapIOUMaxThreshold"d"lineOverlapIOMinMinThreshold"d"lineOverlapIOMinMaxThreshold"d"wordCoincidenceIOUMinThreshold"d"wordCoincidenceIOMinMinThreshold"d"wordContainmentIOUMaxThreshold"d"wordContainmentIOMinMinThreshold"d"wordConstitutionIOUMaxThreshold"d"wordConstitutionIOMinMinThreshold"d"wordOverlapIOUMinThreshold"d"wordOverlapIOUMaxThreshold"d"wordOverlapIOMinMinThreshold"d"wordOverlapIOMinMaxThreshold"d}}
@80@0:8{CGPoint=dd}16{CGPoint=dd}32{CGPoint=dd}48{CGPoint=dd}64
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@24@0:8f16f20
f20@0:8i16
v48@0:8{CGPoint=dd}16{CGPoint=dd}32
v52@0:8{CGPoint=dd}16{CGPoint=dd}32f48
f32@0:8{CGSize=dd}16
@40@0:8q16@24@32
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGPoint=dd}16
C16@0:8
v20@0:8C16
@"NSNumber"
@92@0:8@16f24{CGRect={CGPoint=dd}{CGSize=dd}}28{CGRect={CGPoint=dd}{CGSize=dd}}60
@"CRTextFeature"
@56@0:8@16@24@?32^@40^@48
^{__CVBuffer=}28@0:8^{CGImage=}16f24
^{__CVBuffer=}48@0:8^{CGImage=}16d24{CGSize=dd}32
^{__CVBuffer=}28@0:8@16f24
^{__CVBuffer=}40@0:8{CGSize=dd}16^{__CVBuffer=}32
^{__CVBuffer=}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{__CVBuffer=}48
v56@0:8^{vImage_Buffer=^vQQQ}16^^{vImage_Buffer}24^{vImage_Buffer=^vQQQ}32^^{vImage_Buffer}40^{vImage_Buffer=^vQQQ}48
v40@0:8^{vImage_Buffer=^vQQQ}16^{vImage_Buffer=^vQQQ}24^{vImage_Buffer=^vQQQ}32
@48@0:8@16^@24@32^@40
@32@0:8^{vector<CRTextDetectorPostProcess::CRTextDetectorQuadFeature, std::__1::allocator<CRTextDetectorPostProcess::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}^{CRTextDetectorQuadFeature}{__compressed_pair<CRTextDetectorPostProcess::CRTextDetectorQuadFeature *, std::__1::allocator<CRTextDetectorPostProcess::CRTextDetectorQuadFeature> >=^{CRTextDetectorQuadFeature}}}16r^f24
v96@0:8@16@24{CGSize=dd}32^{vImage_Buffer=^vQQQ}48[5^{vImage_Buffer}]56{CGPoint=dd}64{CGSize=dd}80
@64@0:8^{vImage_Buffer=^vQQQ}16^^{vImage_Buffer}24{CGSize=dd}32{CGSize=dd}48
{vImage_Buffer=^vQQQ}40@0:8@16{CGSize=dd}24
v48@0:8@16[5^{vImage_Buffer}]24{CGSize=dd}32
{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}24@0:8^{vImage_Buffer=^vQQQ}16
{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}24@0:8^^{vImage_Buffer}16
{vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}40@0:8@16{CGSize=dd}24
v52@0:8^{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}16{CGPoint=dd}24f40^{vector<CGPoint, std::__1::allocator<CGPoint> >=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >=^{CGPoint}}}44
@44@0:8@16{CGPoint=dd}24f40
@64@0:8@16@24@32@?40^@48^@56
v56@0:8@16q24@32@40@?48
v48@0:8@16@24@32@40
v56@0:8@16q24@32@40^@48
v120@0:8@16^@24^@32@40f48{CGRect={CGPoint=dd}{CGSize=dd}}52{CGRect={CGPoint=dd}{CGSize=dd}}84f116
q20@0:8f16
v72@0:8^{CGSize=dd}16^d24^{CGSize=dd}32{CGSize=dd}40{CGSize=dd}56
^S16@0:8
v24@0:8^S16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@56@0:8@16Q24d32Q40Q48
@72@0:8@16d24d32d40d48d56d64
@28@0:8@16B24
v24@0:8@?16
v56@0:8@16@24@32d40Q48
v32@0:8^{pc_session=}16d24
@48@0:8@16@24d32@40
@56@0:8@16Q24@32d40@48
@32@0:8{CGSize=dd}16
@52@0:8@16d24@32i40Q44
@32@0:8@16@?24
@56@0:8@16@24@32@?40^@48
v48@0:8@16q24@32@40
{vImage_Buffer=^vQQQ}36@0:8Q16Q24i32
Q20@0:8i16
v36@0:8I16*20^i28
{vImage_Buffer=^vQQQ}36@0:8r^{vImage_Buffer=^vQQQ}16i24@28
B40@0:8r^{vImage_Buffer=^vQQQ}16i24^{vImage_Buffer=^vQQQ}28i36
v32@0:8d16@24
@28@0:8^{__CVBuffer=}16i24
v28@0:8@?16B24
^{__CVBuffer=}40@0:8d16{CGSize=dd}24
^{__CVBuffer=}48@0:8d16{CGSize=dd}24^{CGSize=dd}40
^{__CVBuffer=}56@0:8d16{CGSize=dd}24^{CGSize=dd}40^{CGImage=}48
{vImage_Buffer=^vQQQ}16@0:8
^{CGImage=}16@0:8
@64@0:8@16@24{CGPoint=dd}32{CGSize=dd}48
@20@0:8I16
@32@0:8Q16Q24
@36@0:8Q16Q24B32
@36@0:8Q16Q24i32
@56@0:8{vImage_Buffer=^vQQQ}16i48i52
@52@0:8{vImage_Buffer=^vQQQ}16i48
@24@0:8r^{Mat=^^?*iii[32i][32i]{SmartPtr=^^?^v^i}ii[32i][32i]Q}16
@68@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48f56^{CGRect={CGPoint=dd}{CGSize=dd}}60
@68@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16Q48Q56f64
@28@0:8^{CGImage=}16i24
@36@0:8^{CGImage=}16@24i32
@28@0:8@16f24
@32@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16q24
@24@0:8^{CGImage=}16
@32@0:8^{CGImage=}16@24
@48@0:8{vImage_Buffer=^vQQQ}16
v24@0:8^{CGImage=}16
@"CIImage"
^{CGImage=}
{vImage_Buffer="data"^v"height"Q"width"Q"rowBytes"Q}
^{__CVBuffer=}20@0:8I16
^{__CVBuffer=}60@0:8d16{CGSize=dd}24^{CGSize=dd}40^{CGImage=}48I56
^{__CVBuffer=}24@0:8@16
