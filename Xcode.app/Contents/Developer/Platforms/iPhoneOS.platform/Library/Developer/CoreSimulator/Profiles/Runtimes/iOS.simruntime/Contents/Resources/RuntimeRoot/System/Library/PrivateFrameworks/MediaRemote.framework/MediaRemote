MbP?
333333
kMRPlaybackQueueUserInfoKey
kMRPlaybackQueueDataUserInfoKey
_kMRPlaybackQueueRequestIDUserInfoKey
NULL
contentItem
SharedQueue not supported
playbackQueue
Cached ContentItem is empty
artworkWidth %ld > %ld
artworkHeight %ld > %ld
artwork dimensions both -1
no artwork in item
has no info
has no lyrics
has no languageOptions
has no sections
B24@?0@"MRContentItem"8@"MRPlaybackQueueRequest"16
idx (%tu) is out of range (%tu)
%@ %@
timeIntervals
thumbnailsWidth
thumbnailsHeight
timeIntervalsCount
TQ,R,N
T^d,R,N
hasThumbnailsWidth
TB,N
Tf,N,V_thumbnailsWidth
hasThumbnailsHeight
Tf,N,V_thumbnailsHeight
com.apple.mediaremote/MRLegacyController
MRLegacyController
v28@?0f8^{__CFString=}12^{__CFString=}20
v20@?0I8^{__CFError=}12
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
outputDeviceUID
T@"NSString",C,N,V_outputDeviceUID
externalDevice
T@"MRExternalDevice",&,N,V_externalDevice
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
delegate
T@"<MRLegacyControllerDelegate>",W,N,V_delegate
location
length
includeMetadata
artworkWidth
artworkHeight
includeLyrics
includeSections
includeInfo
includeLanguageOptions
context
requestID
contentItemIdentifiers
returnContentItemAssetsInUserCompletion
playerPath
cachingPolicy
label
isLegacyNowPlayingInfoRequest
hasLocation
Ti,N,V_location
hasLength
Ti,N,V_length
hasIncludeMetadata
TB,N,V_includeMetadata
hasArtworkWidth
Td,N,V_artworkWidth
hasArtworkHeight
Td,N,V_artworkHeight
hasIncludeLyrics
TB,N,V_includeLyrics
hasIncludeSections
TB,N,V_includeSections
hasIncludeInfo
TB,N,V_includeInfo
hasIncludeLanguageOptions
TB,N,V_includeLanguageOptions
hasContext
TB,R,N
T@"_MRPlaybackQueueContextProtobuf",&,N,V_context
hasRequestID
T@"NSString",&,N,V_requestID
T@"NSMutableArray",&,N,V_contentItemIdentifiers
hasReturnContentItemAssetsInUserCompletion
TB,N,V_returnContentItemAssetsInUserCompletion
hasPlayerPath
T@"_MRNowPlayingPlayerPathProtobuf",&,N,V_playerPath
hasCachingPolicy
Ti,N,V_cachingPolicy
hasLabel
T@"NSString",&,N,V_label
hasIsLegacyNowPlayingInfoRequest
TB,N,V_isLegacyNowPlayingInfoRequest
playbackSessionData
identifier
type
<%@: %p> %@
protobuf
T@"_MRPlaybackSessionProtobuf",R,N
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_type
T@"NSData",C,N,V_playbackSessionData
data
T@"NSData",R,C,N
controllerID
properties
hasControllerID
TQ,N,V_controllerID
hasProperties
T@"_MRGameControllerPropertiesProtobuf",&,N,V_properties
nowPlayingUpdates
artworkUpdates
volumeUpdates
keyboardUpdates
outputDeviceUpdates
systemEndpointUpdates
deviceType
TI,R,N,V_deviceType
deviceSubtype
TI,R,N,V_deviceSubtype
T@"NSString",R,N,V_uid
startTime
endTime
token
hasStartTime
Td,N,V_startTime
hasEndTime
Td,N,V_endTime
hasToken
T@"_MRLyricsTokenProtobuf",&,N,V_token
buffer
time
gain
hasBuffer
T@"_MRAudioBufferProtobuf",&,N,V_buffer
hasTime
T@"_MRAudioTimeProtobuf",&,N,V_time
hasGain
Td,N,V_gain
Cannot remove peer, No device available
Cannot update peer, No device available
v32@?0@"NSString"8@"MRDeviceInfo"16^B24
v8@?0
v24@?0@"NSArray"8@"NSError"16
CoreUtils
CUPairingManager Invalidation
CUPairingManager Interuption
v16@?0@"NSError"8
Does not have required entitlements
CUPairingManager
com.apple.MediaRemote.MRCoreUtilsSystemPairingSession.GlobalQueue
messageNumber
TQ,N,V_messageNumber
reply
T@?,C,N,V_reply
MediaRemote
virtual_device
@"NSData"16@?0@"MRProtocolMessage"8
datasource
T@"<MRProtocolMessageQueueDataSource>",W,N
T@"<MRProtocolMessageQueueDelegate>",W,N
T@"NSData",R,N
message
T@"MRProtocolMessage",R,N
readPosition
Tq,N,V_readPosition
finished
TB,R,N,GisFinished
canPurge
MRProtocolMessageQueue.m
Removing unfinished message. This is bad
B16@?0Q8
kMRPlaybackSessionDataUserInfoKey
kMRPlaybackSessionUserInfoKey
hasOutputDeviceUID
T@"NSString",&,N,V_outputDeviceUID
<%@:%p identifier=%@ type=%@, addingDevices=%@, removingDevices=%@ settingDevices=%@>
contextType
TI,R,N
addingOutputDeviceUIDs
T@"NSArray",R,N
removingOutputDeviceUIDs
settingOutputDeviceUIDs
outputDevices
outputDeviceUIDs
request
T@"MRUpdateActiveSystemEndpointRequest",R,N,V_request
@16@?0@"MRAVEndpoint"8
@16@?0@"_MRAVEndpointDescriptorProtobuf"8
endpoints
features
endpointUIDs
Unknown
SharedAudioPresentation
SharedSystemAudio
SharedSystemScreen
iTunesAudio
Auxiliary
(unknown: %i)
MRConcreteEndpoint.m
Attempted to initialize an endpoint with an empty array of output devices
T@"NSArray",C,N
AVAudioFormat
AVFoundation
AVAudioCompressedBuffer
T@"AVAudioCompressedBuffer",R,N,V_buffer
formatSettings
T@"NSDictionary",R,N,V_formatSettings
route
inputType
hasRoute
T@"_MRAVOutputDeviceDescriptorProtobuf",&,N,V_route
hasInputType
Ti,N,V_inputType
None
Alphabet
Number
Email
Connections
Discovery
DiscoveryOversize
MigrationOversize
_MRLogForCategory
/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-4018.100.117/MediaRemote/Framework/Utility/MRLog.m
category < MRLoggingCategoryCOUNT
NowPlaying
RemoteControl
ExternalDevice
Television
AudioInputPlugin
Assertion
Proximity
com.apple.amp.mediaremote
supportedCommand
supportedCommands
T@"NSMutableArray",&,N,V_supportedCommands
B16@?0@"_MRContentItemProtobuf"8
state
T@"MRNowPlayingState",R,N
hiliteMode
client
T@"MRClient",R,N
T@"MRPlayerPath",R,N
@16@?0@"_MRContentItemProtobuf"8
B16@?0@"MRContentItem"8
contentItems
bundleID
T@"NSString",R,N
nowPlayingInfo
displayID
displayName
playbackState
playbackQueueCapabilities
playbackStateTimestamp
hasNowPlayingInfo
T@"_MRNowPlayingInfoProtobuf",&,N,V_nowPlayingInfo
hasSupportedCommands
T@"_MRSupportedCommandsProtobuf",&,N,V_supportedCommands
hasPlaybackQueue
T@"_MRPlaybackQueueProtobuf",&,N,V_playbackQueue
hasDisplayID
T@"NSString",&,N,V_displayID
hasDisplayName
T@"NSString",&,N,V_displayName
hasPlaybackState
Ti,N,V_playbackState
hasPlaybackQueueCapabilities
T@"_MRPlaybackQueueCapabilitiesProtobuf",&,N,V_playbackQueueCapabilities
hasRequest
T@"_MRPlaybackQueueRequestProtobuf",&,N,V_request
hasPlaybackStateTimestamp
Td,N,V_playbackStateTimestamp
Playing
Paused
Stopped
Interrupted
Seeking
MRMediaRemoteMediaTypeMusic
MRMediaRemoteMediaTypePodcast
MRMediaRemoteMediaTypeAudioBook
MRMediaRemoteMediaTypeITunesU
kMRMediaRemoteMediaTypeITunesRadio
kMRMediaRemoteNowPlayingInfoTypeAudio
kMRMediaRemoteNowPlayingInfoTypeVideo
kMRMediaRemoteNowPlayingInfoDidChangeNotification
kMRMediaRemoteOriginNowPlayingInfoDidChangeNotification
kMRMediaRemotePlayerNowPlayingInfoDidChangeNotification
_MRMediaRemotePlayerNowPlayingInfoDidChangeNotification
kMRMediaRemoteNowPlayingApplicationDidChangeNotification
kMRMediaRemoteOriginNowPlayingApplicationDidChangeNotification
_MRMediaRemoteOriginNowPlayingApplicationDidChangeNotification
kMRMediaRemoteNowPlayingApplicationDisplayNameDidChangeNotification
kMRMediaRemoteOriginNowPlayingApplicationDisplayNameDidChangeNotification
kMRMediaRemoteApplicationDisplayNameDidChangeNotification
_MRMediaRemoteApplicationDisplayNameDidChangeNotification
kMRMediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification
kMRMediaRemoteOriginNowPlayingApplicationIsPlayingDidChangeNotification
kMRMediaRemotePlayerIsPlayingDidChangeNotification
_MRMediaRemotePlayerIsPlayingDidChangeNotification
kMRMediaRemoteNowPlayingApplicationPlaybackStateDidChangeNotification
kMRMediaRemoteOriginNowPlayingApplicationPlaybackStateDidChangeNotification
_kMRMediaRemotePlayerPlaybackStateDidChangeNotification
_MRMediaRemotePlayerPlaybackStateDidChangeNotification
kMRMediaRemoteNowPlayingPlayerDidChange
kMRMediaRemoteOriginNowPlayingPlayerDidChange
kMRMediaRemoteActivePlayerDidChange
_MRMediaRemoteActivePlayerDidChange
kMRMediaRemotePlayerPictureInPictureDidChange
kMRMediaRemoteActivePlayerPathsDidChange
kMRMediaRemoteNowPlayingApplicationDidRegisterCanBeNowPlaying
kMRMediaRemoteNowPlayingApplicationDidUnregisterCanBeNowPlaying
kMRMediaRemoteNowPlayingApplicationDidRegister
_MRMediaRemoteNowPlayingApplicationDidRegister
kMRMediaRemoteNowPlayingApplicationDidUnregister
_MRMediaRemoteNowPlayingApplicationDidUnregister
kMRMediaRemoteNowPlayingApplicationClientStateDidChange
kMRMediaRemoteOriginNowPlayingApplicationClientStateDidChange
kMRMediaRemoteApplicationClientStateDidChange
_MRMediaRemoteApplicationClientStateDidChange
kMRMediaRemoteNowPlayingPlayerStateDidChange
kMRMediaRemoteOriginNowPlayingPlayerStateDidChange
kMRMediaRemotePlayerStateDidChange
_MRMediaRemotePlayerStateDidChange
kMRMediaRemoteNowPlayingPlayerDidRegister
_MRMediaRemoteNowPlayingPlayerDidRegister
kMRMediaRemoteNowPlayingPlayerDidUnregister
_MRMediaRemoteNowPlayingPlayerDidUnregister
kMRMediaRemoteNowPlayingApplicationDidForegroundNotification
kMRMediaRemoteOriginNowPlayingApplicationDidForegroundNotification
kMRMediaRemoteApplicationDidForeground
_MRMediaRemoteApplicationDidForegroundNotification
kMRMediaRemoteElectedPlayerDidChangeNotification
kMRMediaRemoteLocalPlaybackDidTimeoutNotification
kMRMediaRemoteLockScreenControlsPlayerPathDidChangeNotification
kMRMediaRemoteLockScreenControlsDidAppearNotification
kMRMediaRemoteLockScreenControlsDidDisappearNotification
kMRMediaRemoteLockScreenControlsDidActivateNotification
kMRMediaRemoteLockScreenControlsDidDeactivateNotification
kMRMediaRemoteNowPlayingApplicationDisplayNameUserInfoKey
kMRMediaRemoteNowPlayingApplicationIsPlayingUserInfoKey
kMRMediaRemoteNowPlayingApplicationPIDUserInfoKey
kMRMediaRemotePlaybackStateUserInfoKey
kMRMediaRemoteApplicationForegroundUserInfoKey
kMRMediaRemoteElectedPlayerReasonUserInfoKey
kMRMediaRemotePlayerPictureInPictureEnabledUserInfoKey
kMRMediaRemoteNowPlayingInfoAlbum
kMRMediaRemoteNowPlayingInfoAlbumiTunesStoreAdamIdentifier
kMRMediaRemoteNowPlayingInfoPlaylistGlobalIdentifier
kMRMediaRemoteNowPlayingInfoArtist
kMRMediaRemoteNowPlayingInfoArtistiTunesStoreAdamIdentifier
kMRMediaRemoteNowPlayingInfoArtworkData
kMRMediaRemoteNowPlayingInfoArtworkIdentifier
kMRMediaRemoteNowPlayingInfoArtworkMIMEType
kMRMediaRemoteNowPlayingInfoAssetURL
kMRMediaRemoteNowPlayingInfoAvailableLanguageOptionsData
kMRMediaRemoteNowPlayingInfoChapterNumber
kMRMediaRemoteNowPlayingInfoComposer
kMRMediaRemoteNowPlayingInfoCollectionIdentifier
kMRMediaRemoteNowPlayingInfoCollectionInfo
kMRMediaRemoteNowPlayingInfoCurrentLanguageOptionsData
kMRMediaRemoteNowPlayingInfoDefaultPlaybackRate
kMRMediaRemoteNowPlayingInfoDiscNumber
kMRMediaRemoteNowPlayingInfoDownloadProgress
kMRMediaRemoteNowPlayingInfoDownloadState
kMRMediaRemoteNowPlayingInfoDuration
kMRMediaRemoteNowPlayingInfoElapsedTime
kMRMediaRemoteNowPlayingInfoExternalContentIdentifier
kMRMediaRemoteNowPlayingInfoGenre
kMRMediaRemoteNowPlayingInfoIsAdvertisement
kMRMediaRemoteNowPlayingInfoIsAlwaysLive
kMRMediaRemoteNowPlayingInfoIsBanned
kMRMediaRemoteNowPlayingInfoIsExplicitTrack
kMRMediaRemoteNowPlayingCollectionInfoKeyTitle
kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
kMRMediaRemoteNowPlayingCollectionInfoKeyCollectionType
kMRMediaRemoteNowPlayingCollectionInfoCollectionTypePlaylist
kMRMediaRemoteNowPlayingCollectionInfoCollectionTypeAlbum
kMRMediaRemoteNowPlayingCollectionInfoCollectionTypeRadio
kMRMediaRemoteNowPlayingInfoIsInWishList
kMRMediaRemoteNowPlayingInfoIsLiked
kMRMediaRemoteNowPlayingInfoIsMusicApp
kMRMediaRemoteNowPlayingInfoIsSharable
kMRMediaRemoteNowPlayingInfoIsVideosApp
kMRMediaRemoteNowPlayingInfoMediaType
kMRMediaRemoteNowPlayingInfoPlaybackRate
kMRMediaRemoteNowPlayingInfoProhibitsSkip
kMRMediaRemoteNowPlayingInfoPurchaseInfoData
kMRMediaRemoteNowPlayingInfoIsLoading
kMRMediaRemoteNowPlayingInfoQueueIndex
kMRMediaRemoteNowPlayingInfoRadioStationHash
kMRMediaRemoteNowPlayingInfoRadioStationIdentifier
kMRMediaRemoteNowPlayingInfoRadioStationName
kMRMediaRemoteNowPlayingInfoRadioStationStringIdentifier
kMRMediaRemoteNowPlayingInfoRepeatMode
kMRMediaRemoteNowPlayingInfoShuffleMode
kMRMediaRemoteNowPlayingInfoStartTime
kMRMediaRemoteNowPlayingInfoTimestamp
kMRMediaRemoteNowPlayingInfoTitle
kMRMediaRemoteNowPlayingInfoTotalChapterCount
kMRMediaRemoteNowPlayingInfoTotalDiscCount
kMRMediaRemoteNowPlayingInfoTotalQueueCount
kMRMediaRemoteNowPlayingInfoTotalTrackCount
kMRMediaRemoteNowPlayingInfoTrackNumber
kMRMediaRemoteNowPlayingInfoUniqueIdentifier
kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier
kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier
kMRMediaRemoteNowPlayingInfoExternalProfileIdentifier
kMRMediaRemoteNowPlayingInfoServiceIdentifier
kMRMediaRemoteNowPlayingInfoBrandIdentifier
kMRMediaRemoteNowPlayingInfoPlaybackProgress
kMRMediaRemoteNowPlayingInfoAppMetrics
kMRMediaRemoteNowPlayingInfoIsSteerable
kMRMediaRemoteNowPlayingInfoContentItemIdentifier
kMRMediaRemoteNowPlayingInfoCurrentPlaybackDate
kMRMediaRemoteNowPlayingInfoArtworkURL
kMRMediaRemoteNowPlayingInfoCalculatedElapsedTime
kMRMediaRemoteNowPlayingInfoClientPropertiesData
kMRMediaRemoteNowPlayingInfoUserInfo
kMRMediaRemoteNowPlayingExternalTouchBarInvocationNotification
com.apple.MediaRemote.nowPlayingApplicationIsPlayingDidChange
com.apple.MediaRemote.nowPlayingActivePlayersIsPlayingDidChange
com.apple.MediaRemote.activePlayerPathDidChange
_MRMediaRemoteIsImplicitNowPlayingNotificationUserInfoKey
_MRMediaRemoteIsImplicitPlayerNotificationUserInfoKey
_MRMediaRemoteApplicationHasSupportedCommandsUserInfoKey
kMRMediaRemoteNowPlayingInfoSupportsIsBanned
kMRMediaRemoteNowPlayingInfoSupportsFastForward15Seconds
kMRMediaRemoteNowPlayingInfoSupportsIsLiked
kMRMediaRemoteNowPlayingInfoSupportsRewind15Seconds
kMRMediaRemoteNowPlayingInfoSupportsWishlisting
kMRMediaRemoteMediaTypeImage
Change in pip state
clientProperties
v24@?0^v8^{__CFError=}16
void MRMediaRemoteSetClientProperties(MRNowPlayingClientRef, MROriginRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
MRNowPlaying.m
Invalid parameter not satisfying: %@
setClientProperties
v16@?0^{__CFError=}8
void MRMediaRemoteUpdateClientProperties(MRNowPlayingClientRef, MROriginRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
updateClientProperties
AlwaysVisible
NeverVisible
VisibleWhenBackgrounded
Undefined
void MRMediaRemoteSetPlayerProperties(MRNowPlayingPlayerPathRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
playerPath.player
void MRMediaRemoteUpdatePlayerProperties(MRNowPlayingPlayerPathRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
v16@?0@"MRPlayerPath"8
v20@?0I8@"NSError"12
AVSystemController
/System/Library/PrivateFrameworks/Celestial.framework/Celestial
AVSystemController_CanBeNowPlayingAppAttribute
languageTag
characteristics
hasType
Ti,N,V_type
hasLanguageTag
T@"NSString",&,N,V_languageTag
T@"NSMutableArray",&,N,V_characteristics
hasIdentifier
T@"NSString",&,N,V_identifier
album
artist
duration
elapsedTime
playbackRate
repeatMode
shuffleMode
timestamp
title
uniqueIdentifier
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationHash
radioStationName
artworkDataDigest
isAlwaysLive
isAdvertisement
hasAlbum
T@"NSString",&,N,V_album
hasArtist
T@"NSString",&,N,V_artist
hasDuration
Td,N,V_duration
hasElapsedTime
Td,N,V_elapsedTime
hasPlaybackRate
Tf,N,V_playbackRate
hasRepeatMode
Ti,N,V_repeatMode
hasShuffleMode
Ti,N,V_shuffleMode
hasTimestamp
Td,N,V_timestamp
hasTitle
T@"NSString",&,N,V_title
hasUniqueIdentifier
TQ,N,V_uniqueIdentifier
hasIsExplicitTrack
TB,N,V_isExplicitTrack
hasIsMusicApp
TB,N,V_isMusicApp
hasRadioStationIdentifier
Tq,N,V_radioStationIdentifier
hasRadioStationHash
T@"NSString",&,N,V_radioStationHash
hasRadioStationName
T@"NSString",&,N,V_radioStationName
hasArtworkDataDigest
T@"NSData",&,N,V_artworkDataDigest
hasIsAlwaysLive
TB,N,V_isAlwaysLive
hasIsAdvertisement
TB,N,V_isAdvertisement
Albums
Songs
sampleRate
hasSampleRate
Td,N,V_sampleRate
command
options
originUID
senderAppDisplayID
destinationAppDisplayID
destinationAppProcessID
remoteControlInterfaceID
appOptions
hasCommand
Ti,N,V_command
hasOptions
T@"_MRCommandOptionsProtobuf",&,N,V_options
hasOriginUID
Ti,N,V_originUID
hasSenderAppDisplayID
T@"NSString",&,N,V_senderAppDisplayID
hasDestinationAppDisplayID
T@"NSString",&,N,V_destinationAppDisplayID
hasDestinationAppProcessID
Tq,N,V_destinationAppProcessID
hasRemoteControlInterfaceID
T@"NSString",&,N,V_remoteControlInterfaceID
hasAppOptions
T@"_MRReceivedCommandAppOptionsProtobuf",&,N,V_appOptions
Play
Pause
TogglePlayPause
Stop
NextTrack
PreviousTrack
AdvanceShuffleMode
AdvanceRepeatMode
BeginFastForward
EndFastForward
BeginRewind
EndRewind
Rewind15Seconds
FastForward15Seconds
Rewind30Seconds
FastForward30Seconds
SkipForward
SkipBackward
ChangePlaybackRate
RateTrack
LikeTrack
DislikeTrack
BookmarkTrack
SeekToPlaybackPosition
ChangeRepeatMode
ChangeShuffleMode
EnableLanguageOption
DisableLanguageOption
NextChapter
PreviousChapter
NextAlbum
PreviousAlbum
NextPlaylist
PreviousPlaylist
BanTrack
AddTrackToWishList
RemoveTrackFromWishList
NextInContext
PreviousInContext
ResetPlaybackTimeout
SetPlaybackQueue
AddNowPlayingItemToLibrary
CreateRadioStation
AddItemToLibrary
InsertIntoPlaybackQueue
ReorderPlaybackQueue
RemoveFromPlaybackQueue
PlayItemInPlaybackQueue
PrepareForSetQueue
SetPlaybackSession
ChangeQueueEndAction
event
T@"_MRGameControllerMessageProtobuf",R,N
T@"_MRGameControllerPropertiesProtobuf",R,N
inputMode
metadata
artworkData
info
availableLanguageOptions
currentLanguageOptions
lyrics
sections
parentIdentifier
ancestorIdentifier
queueIdentifier
requestIdentifier
artworkDataWidth
artworkDataHeight
hasMetadata
T@"_MRContentItemMetadataProtobuf",&,N,V_metadata
hasArtworkData
T@"NSData",&,N,V_artworkData
hasInfo
T@"NSString",&,N,V_info
T@"NSMutableArray",&,N,V_availableLanguageOptions
T@"NSMutableArray",&,N,V_currentLanguageOptions
hasLyrics
T@"_MRLyricsItemProtobuf",&,N,V_lyrics
T@"NSMutableArray",&,N,V_sections
hasParentIdentifier
T@"NSString",&,N,V_parentIdentifier
hasAncestorIdentifier
T@"NSString",&,N,V_ancestorIdentifier
hasQueueIdentifier
T@"NSString",&,N,V_queueIdentifier
hasRequestIdentifier
T@"NSString",&,N,V_requestIdentifier
hasArtworkDataWidth
Ti,N,V_artworkDataWidth
hasArtworkDataHeight
Ti,N,V_artworkDataHeight
kMRPlaybackQueueCapabilitiesUserInfoKey
range|
identifier|
container
playable
explicitItem
streamingContent
currentlyPlaying
alwaysLive
sharable
liked
inWishList
steerable
loading
artworkAvailable
infoAvailable
languageOptionsAvailable
lyricsAvailable
playbackProgress
defaultPlaybackRate
downloadProgress
playlistType
radioStationType
editingStyleFlags
mediaType
mediaSubType
episodeType
playCount
numberOfSections
chapterCount
totalDiscCount
totalTrackCount
downloadState
elapsedTimeTimestamp
inferredTimestamp
seasonNumber
episodeNumber
discNumber
trackNumber
iTunesStoreIdentifier
iTunesStoreSubscriptionIdentifier
iTunesStoreArtistIdentifier
iTunesStoreAlbumIdentifier
legacyUniqueIdentifier
purchaseInfoData
appMetrics
userInfo
deviceSpecificUserInfo
collectionInfo
releaseDate
currentPlaybackDate
subtitle
albumName
trackArtistName
albumArtistName
directorName
localizedContentRating
collectionIdentifier
profileIdentifier
assetURL
composer
genre
contentIdentifier
radioStationString
seriesName
lyricsURL
serviceIdentifier
brandIdentifier
localizedDurationString
artworkIdentifier
artworkMIMEType
artworkURL
artworkFileURL
artworkURLTemplates
albumYear
custom: delta
custom: remainingTime
custom: calculatedElapsedTime
__playbackRate
__title
Td,N,V_elapsedTimeTimestamp
hasElapsedTimeTimestamp
TB,N,V_hasElapsedTimeTimestamp
Td,N,V_inferredTimestamp
hasInferredTimestamp
TB,N,V_hasInferredTimestamp
T@"_MRContentItemMetadataProtobuf",R,N
TB,N,GisContainer,V_container
hasContainer
TB,N,V_hasContainer
TB,N,GisPlayable,V_playable
hasPlayable
TB,N,V_hasPlayable
TB,N,GisExplicitItem,V_explicitItem
hasExplicitItem
TB,N,V_hasExplicitItem
TB,N,GisStreamingContent,V_streamingContent
hasStreamingContent
TB,N,V_hasStreamingContent
TB,N,GisCurrentlyPlaying,V_currentlyPlaying
hasCurrentlyPlaying
TB,N,V_hasCurrentlyPlaying
TB,N,GisAlwaysLive,V_alwaysLive
hasAlwaysLive
TB,N,V_hasAlwaysLive
TB,N,GisSharable,V_sharable
hasSharable
TB,N,V_hasSharable
TB,N,GisLiked,V_liked
hasLiked
TB,N,V_hasLiked
TB,N,GisInWishList,V_inWishList
hasInWishList
TB,N,V_hasInWishList
TB,N,GisSteerable,V_steerable
hasSteerable
TB,N,V_hasSteerable
TB,N,GisLoading,V_loading
hasLoading
TB,N,V_hasLoading
TB,N,V_artworkAvailable
hasArtworkAvailable
TB,N,V_hasArtworkAvailable
TB,N,V_infoAvailable
hasInfoAvailable
TB,N,V_hasInfoAvailable
TB,N,V_languageOptionsAvailable
hasLanguageOptionsAvailable
TB,N,V_hasLanguageOptionsAvailable
TB,N,V_lyricsAvailable
hasLyricsAvailable
TB,N,V_hasLyricsAvailable
Tf,N,V_playbackProgress
hasPlaybackProgress
TB,N,V_hasPlaybackProgress
TB,N,V_hasPlaybackRate
Tf,N,V_defaultPlaybackRate
hasDefaultPlaybackRate
TB,N,V_hasDefaultPlaybackRate
Tf,N,V_downloadProgress
hasDownloadProgress
TB,N,V_hasDownloadProgress
Tq,N,V_playlistType
hasPlaylistType
TB,N,V_hasPlaylistType
Tq,N,V_radioStationType
hasRadioStationType
TB,N,V_hasRadioStationType
Tq,N,V_editingStyleFlags
hasEditingStyleFlags
TB,N,V_hasEditingStyleFlags
Tq,N,V_mediaType
hasMediaType
TB,N,V_hasMediaType
Tq,N,V_mediaSubType
hasMediaSubType
TB,N,V_hasMediaSubType
Tq,N,V_episodeType
hasEpisodeType
TB,N,V_hasEpisodeType
Tq,N,V_playCount
hasPlayCount
TB,N,V_hasPlayCount
Tq,N,V_numberOfSections
hasNumberOfSections
TB,N,V_hasNumberOfSections
Tq,N,V_chapterCount
hasChapterCount
TB,N,V_hasChapterCount
Tq,N,V_totalDiscCount
hasTotalDiscCount
TB,N,V_hasTotalDiscCount
Tq,N,V_totalTrackCount
hasTotalTrackCount
TB,N,V_hasTotalTrackCount
Tq,N,V_downloadState
hasDownloadState
TB,N,V_hasDownloadState
TB,N,V_hasDuration
TB,N,V_hasStartTime
TB,N,V_hasElapsedTime
Tq,N,V_seasonNumber
hasSeasonNumber
TB,N,V_hasSeasonNumber
Tq,N,V_episodeNumber
hasEpisodeNumber
TB,N,V_hasEpisodeNumber
Tq,N,V_discNumber
hasDiscNumber
TB,N,V_hasDiscNumber
Tq,N,V_trackNumber
hasTrackNumber
TB,N,V_hasTrackNumber
TB,N,V_hasRadioStationIdentifier
Tq,N,V_iTunesStoreIdentifier
hasITunesStoreIdentifier
TB,N,V_hasITunesStoreIdentifier
Tq,N,V_iTunesStoreSubscriptionIdentifier
hasITunesStoreSubscriptionIdentifier
TB,N,V_hasITunesStoreSubscriptionIdentifier
Tq,N,V_iTunesStoreArtistIdentifier
hasITunesStoreArtistIdentifier
TB,N,V_hasITunesStoreArtistIdentifier
Tq,N,V_iTunesStoreAlbumIdentifier
hasITunesStoreAlbumIdentifier
TB,N,V_hasITunesStoreAlbumIdentifier
Tq,N,V_legacyUniqueIdentifier
hasLegacyUniqueIdentifier
TB,N,V_hasLegacyUniqueIdentifier
T@"NSData",C,N,V_purchaseInfoData
T@"NSDictionary",C,N,V_appMetrics
T@"NSDictionary",C,N,V_nowPlayingInfo
T@"NSDictionary",C,N,V_userInfo
T@"NSDictionary",C,N,V_deviceSpecificUserInfo
T@"NSDictionary",C,N,V_collectionInfo
T@"NSDate",C,N,V_releaseDate
T@"NSDate",C,N,V_currentPlaybackDate
T@"NSString",C,N,V_title
T@"NSString",C,N,V_subtitle
T@"NSString",C,N,V_albumName
T@"NSString",C,N,V_trackArtistName
T@"NSString",C,N,V_albumArtistName
T@"NSString",C,N,V_directorName
T@"NSString",C,N,V_localizedContentRating
T@"NSString",C,N,V_collectionIdentifier
T@"NSString",C,N,V_profileIdentifier
T@"NSURL",C,N,V_assetURL
T@"NSString",C,N,V_composer
T@"NSString",C,N,V_genre
T@"NSString",C,N,V_contentIdentifier
T@"NSString",C,N,V_radioStationName
T@"NSString",C,N,V_radioStationString
T@"NSString",C,N,V_seriesName
T@"NSURL",C,N,V_lyricsURL
T@"NSString",C,N,V_serviceIdentifier
T@"NSString",C,N,V_brandIdentifier
T@"NSString",C,N,V_localizedDurationString
T@"NSString",C,N,V_artworkIdentifier
T@"NSString",C,N,V_artworkMIMEType
T@"NSURL",C,N,V_artworkURL
T@"NSURL",C,N,V_artworkFileURL
T@"NSArray",C,N,V_artworkURLTemplates
T@"NSString",C,N,V_albumYear
artworkDataWidthDeprecated
Tq,R,N,V_artworkDataWidthDeprecated
hasArtworkDataWidthDeprecated
TB,R,N,V_hasArtworkDataWidthDeprecated
artworkDataHeightDeprecated
Tq,R,N,V_artworkDataHeightDeprecated
hasArtworkDataHeightDeprecated
TB,R,N,V_hasArtworkDataHeightDeprecated
calculatedPlaybackPosition
Td,R,N
dictionaryRepresentation
T@"NSDictionary",R,N
launchApplication
hasLaunchApplication
TB,N,V_launchApplication
com.apple.MRAVEndpoint.sharedLocalEndpointSerialQueue
SYSTEM
outputContextUID
kAirPlayWHANotification_BreakAwayFromCurrentGroup
supportsSecureCoding
TB,R
@"MRAVOutputDeviceDescription"16@?0@"_MRAVOutputDeviceDescriptorProtobuf"8
%@, volume = %lf, volume capabilities = %@
v32@?0@8@16^B24
configuration
T@"MRAVRoutingDiscoverySessionConfiguration",&,N,V_configuration
sharedSession
T@"MRAVRoutingDiscoverySession",&,N,V_sharedSession
endpointCallbacks
T@"NSMutableDictionary",&,N,V_endpointCallbacks
endpointTokenMap
T@"NSMutableDictionary",&,N,V_endpointTokenMap
outputDeviceCallbacks
T@"NSMutableDictionary",&,N,V_outputDeviceCallbacks
outputDeviceTokenMap
T@"NSMutableDictionary",&,N,V_outputDeviceTokenMap
hasState
Ti,N,V_state
Recording
NotRecording
routeUID
hasRouteUID
T@"NSString",&,N,V_routeUID
volume
hasVolume
Tf,N,V_volume
T@"_MRUpdateActiveSystemEndpointRequestProtobuf",&,N,V_request
capabilities
endpointUID
hasCapabilities
T@"_MRVolumeControlAvailabilityProtobuf",&,N,V_capabilities
hasEndpointUID
T@"NSString",&,N,V_endpointUID
com.apple.private.alloy.mediaremote.v2
virtualDeviceID
hasVirtualDeviceID
TQ,N,V_virtualDeviceID
hasEvent
T@"_MRVirtualTouchEventProtobuf",&,N,V_event
kMRMediaRemoteVirtualDevicesDidChangeNotification
LOCAL
@"NSString"16@?0@"MRAVOutputDeviceDescription"8
%@-%@
(%@)
<%@:%p %s"%@" uid="%@" group_id="%@" bluetooth_id=%@%@ type=%@ subtype=%@%@%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%@%s%s%s>
(local) 
 logical_id=%@
 remote-assets
 remote-controllable
 relayable
 airplay2
 groupable
 device-groupable
 group-leader
 group-contains-leader
 airplay-receiving
parent-group-discoverable-leader
parent-group-id
 proxy
 music
 iCML
 enc-prog-dl-assets
 fetch-sender-media-data
 opt-audio-ui
 is-added-to-home-kit
 bluetooth-sharing
 JSON
supportsHAP
groupable
discoverable-leader
remote-controllable
relayable
music
iCML
remote-assets
discoverable-parent-leader
bt-ad
bt-share
JSON
proxy
leader
receiver
none
name
group-id
subtype
buffered-airplay
group-leader
airplay-receiving
is-added-to-home-kit
bluetoothID
B16@?0@"MRAVOutputDeviceDescription"8
groupID
T@"NSString",C,N,V_groupID
parentGroupIdentifier
T@"NSString",C,N,V_parentGroupIdentifier
endpoint
T@"MRAVEndpoint",W,N,V_endpoint
sourceInfo
T@"MRAVOutputDeviceSourceInfo",R,N,V_sourceInfo
descriptor
T@"_MRAVOutputDeviceDescriptorProtobuf",R,N
logicalDeviceID
T@"NSString",R,N,V_logicalDeviceID
supportsRapport
TB,R,N,V_supportsRapport
isAddedToHomeKit
TB,R,N,V_isAddedToHomeKit
currentBluetoothListeningMode
T@"NSString",R,N,V_currentBluetoothListeningMode
availableBluetoothListeningModes
T@"NSArray",R,N,V_availableBluetoothListeningModes
T@"NSString",R,N,V_name
modelID
T@"NSString",R,N,V_modelID
firmwareVersion
T@"NSString",R,N,V_firmwareVersion
MACAddress
T@"NSData",R,N,V_MACAddress
modelSpecificInfo
T@"NSDictionary",R,N,V_modelSpecificInfo
playingPairedDeviceName
T@"NSString",R,N,V_playingPairedDeviceName
canAccessRemoteAssets
TB,R,N,V_canAccessRemoteAssets
canAccessAppleMusic
TB,R,N,V_canAccessAppleMusic
canAccessiCloudMusicLibrary
TB,R,N,V_canAccessiCloudMusicLibrary
canPlayEncryptedProgressiveDownloadAssets
TB,R,N,V_canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
TB,R,N,V_canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
TB,R,N,V_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
remoteControllable
TB,R,N,GisRemoteControllable,V_remoteControllable
groupLeader
TB,R,N,GisGroupLeader,V_groupLeader
groupContainsGroupLeader
TB,R,N,V_groupContainsGroupLeader
airPlayReceiverSessionActive
TB,R,N,GisAirPlayReceiverSessionActive,V_airPlayReceiverSessionActive
TB,R,N,GisGroupable,V_groupable
supportsBluetoothSharing
TB,R,N,V_supportsBluetoothSharing
proxyGroupPlayer
TB,R,N,GisProxyGroupPlayer,V_proxyGroupPlayer
canRelayCommunicationChannel
TB,R,N,V_canRelayCommunicationChannel
supportsBufferedAirPlay
TB,R,N,V_supportsBufferedAirPlay
deviceGroupable
TB,R,N,GisDeviceGroupable,V_deviceGroupable
pickedOnPairedDevice
TB,R,N,GisPickedOnPairedDevice,V_pickedOnPairedDevice
clusterComposition
T@"NSArray",R,N,V_clusterComposition
batteryLevel
Tf,R,N,V_batteryLevel
hasBatteryLevel
TB,R,N,V_hasBatteryLevel
localDevice
TB,R,N,GisLocalDevice,V_localDevice
supportsExternalScreen
TB,R,N,V_supportsExternalScreen
requiresAuthorization
TB,R,N,V_requiresAuthorization
parentGroupContainsDiscoverableLeader
TB,R,N,V_parentGroupContainsDiscoverableLeader
volumeControlAvailable
TB,R,N,GisVolumeControlAvailable,V_volumeControlAvailable
volumeCapabilities
isPersonalRoute
T@"NSString",R,N,V_bluetoothID
debugName
usingJSONProtocol
TB,R,N,GisUsingJSONProtocol
TB,R,N,V_supportsHAP
capabilitiesDescription
composedTypeDescription
roleDescription
jsonEncodableDictionaryRepresentation
hostName
hostPort
supportedMessages
usingSystemPairing
deviceInfoData
T@"NSString",R,N,V_hostName
Tq,R,N,V_hostPort
deviceInfo
T@"MRDeviceInfo",R,N,V_deviceInfo
T@"MRSupportedProtocolMessages",R,N,V_supportedMessages
TB,R,N,V_usingSystemPairing
T@"NSString",C,D,N
Tq,D,N
T@"MRSupportedProtocolMessages",&,D,N
T@"MRDeviceInfo",&,D,N
TB,D,N
%@-xpc
xpc invalidation
<%@:%p
<%@:%p %@ %@
 attemptedToConnect=YES
 attemptedToConnectWhileInvalid=YES
v24@?0@"NSData"8@"NSError"16
v20@?0f8@"NSError"12
v16@?0@"NSArray"8
com.apple.MediaRemote.MRDistantExternalDevice.NotificationQueue
v20@?0B8@"NSError"12
v24@?0@"MRAVDistantExternalDeviceMetadata"8@"NSError"16
connectionStateCallback
T@?,C,N,V_connectionStateCallback
connectionStateCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionStateCallbackQueue
nameCallback
T@?,C,N,V_nameCallback
nameCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_nameCallbackQueue
customDataCallback
T@?,C,N,V_customDataCallback
customDataCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_customDataCallbackQueue
volumeCallback
T@?,C,N,V_volumeCallback
volumeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_volumeCallbackQueue
listenerEndpoint
T@"NSXPCListenerEndpoint",R,N
hasEverAttemptedToConnect
TB,R,N,V_hasEverAttemptedToConnect
Pairing
Name
PairingAllowed
CustomData
Volume
OutputContext
(None)
EndpointChange
kMRLanguageOptionLanguageTag
kMRLanguageOptionType
KMRLanguageOptionCharacteristics
kMRLanguageOptionDisplayName
kMRLanguageOptionIdentifier
__AUTO__
coder must support key-value coding
T@"_MRLanguageOptionProtobuf",R,N
TI,N,V_type
TB,N,V_hasType
T@"NSString",C,N,V_languageTag
T@"NSArray",C,N,V_characteristics
T@"NSString",C,N,V_displayName
T@"NSDictionary",R,C,N
isContainer
isPlayable
isExplicitItem
isStreamingContent
isCurrentlyPlaying
assetURLString
isSharable
isLiked
isInWishList
appMetricsData
nowPlayingInfoData
userInfoData
isSteerable
deviceSpecificUserInfoData
collectionInfoData
currentPlaybackDateData
isLoading
artworkURLTemplatesData
hasSubtitle
T@"NSString",&,N,V_subtitle
hasIsContainer
TB,N,V_isContainer
hasIsPlayable
TB,N,V_isPlayable
hasAlbumName
T@"NSString",&,N,V_albumName
hasTrackArtistName
T@"NSString",&,N,V_trackArtistName
hasAlbumArtistName
T@"NSString",&,N,V_albumArtistName
hasDirectorName
T@"NSString",&,N,V_directorName
Ti,N,V_seasonNumber
Ti,N,V_episodeNumber
hasReleaseDate
Td,N,V_releaseDate
Ti,N,V_playCount
hasLocalizedContentRating
T@"NSString",&,N,V_localizedContentRating
hasIsExplicitItem
TB,N,V_isExplicitItem
Ti,N,V_playlistType
Ti,N,V_radioStationType
Ti,N,V_numberOfSections
Ti,N,V_editingStyleFlags
hasIsStreamingContent
TB,N,V_isStreamingContent
hasIsCurrentlyPlaying
TB,N,V_isCurrentlyPlaying
hasCollectionIdentifier
T@"NSString",&,N,V_collectionIdentifier
hasProfileIdentifier
T@"NSString",&,N,V_profileIdentifier
hasArtworkMIMEType
T@"NSString",&,N,V_artworkMIMEType
hasAssetURLString
T@"NSString",&,N,V_assetURLString
hasComposer
T@"NSString",&,N,V_composer
Ti,N,V_discNumber
hasGenre
T@"NSString",&,N,V_genre
Ti,N,V_chapterCount
Ti,N,V_totalDiscCount
Ti,N,V_totalTrackCount
Ti,N,V_trackNumber
hasContentIdentifier
T@"NSString",&,N,V_contentIdentifier
hasIsSharable
TB,N,V_isSharable
hasIsLiked
TB,N,V_isLiked
hasIsInWishList
TB,N,V_isInWishList
hasRadioStationString
T@"NSString",&,N,V_radioStationString
hasPurchaseInfoData
T@"NSData",&,N,V_purchaseInfoData
Ti,N,V_downloadState
hasAppMetricsData
T@"NSData",&,N,V_appMetricsData
hasSeriesName
T@"NSString",&,N,V_seriesName
Ti,N,V_mediaType
Ti,N,V_mediaSubType
hasNowPlayingInfoData
T@"NSData",&,N,V_nowPlayingInfoData
hasUserInfoData
T@"NSData",&,N,V_userInfoData
hasIsSteerable
TB,N,V_isSteerable
hasArtworkURL
T@"NSString",&,N,V_artworkURL
hasLyricsURL
T@"NSString",&,N,V_lyricsURL
hasDeviceSpecificUserInfoData
T@"NSData",&,N,V_deviceSpecificUserInfoData
hasCollectionInfoData
T@"NSData",&,N,V_collectionInfoData
hasServiceIdentifier
T@"NSString",&,N,V_serviceIdentifier
Ti,N,V_artworkDataWidthDeprecated
Ti,N,V_artworkDataHeightDeprecated
hasCurrentPlaybackDateData
T@"NSData",&,N,V_currentPlaybackDateData
hasArtworkIdentifier
T@"NSString",&,N,V_artworkIdentifier
hasIsLoading
TB,N,V_isLoading
hasArtworkURLTemplatesData
T@"NSData",&,N,V_artworkURLTemplatesData
Ti,N,V_episodeType
hasArtworkFileURL
T@"NSString",&,N,V_artworkFileURL
hasBrandIdentifier
T@"NSString",&,N,V_brandIdentifier
hasLocalizedDurationString
T@"NSString",&,N,V_localizedDurationString
hasAlbumYear
T@"NSString",&,N,V_albumYear
dateGenerated
diagnosticInfo
hasDateGenerated
Td,N,V_dateGenerated
hasDiagnosticInfo
T@"NSString",&,N,V_diagnosticInfo
TVRemoteConnectionService
com.apple.tvremotecore.xpc
T@"MRDeviceInfo",R,N
supportedProtocolMessages
T@"MRSupportedProtocolMessages",R,N
sendError
handlerReturnStatus
handlerReturnStatusData
commandID
hasSendError
Ti,N,V_sendError
handlerReturnStatusCount
T^i,R,N
handlerReturnStatusDatas
T@"NSMutableArray",&,N,V_handlerReturnStatusDatas
hasCommandID
T@"NSString",&,N,V_commandID
ApplicationNotFound
ConnectionFailed
Ignored
CouldNotLaunchApplication
TimedOut
OriginDoesNotExist
InvalidOptions
NoCommandHandlers
ApplicationNotInstalled
NotSupported
Success
NoSuchContent
CommandFailed
NoActionableNowPlayingItem
DeviceNotFound
UIKitLegacy
SkipAdProhibited
QueueIsUserCurated
UserModifiedQueueDisable
UserQueueModificationNotSupportedForCurrentItem
SubscriptionRequiredForSharedQueue
InsertionPositionNotSpecified
InvalidInsertionPosition
RequestParametersOutOfBounds
SkipLimitReached
AuthenticationFailure
MediaServicesUnavailable
kMRMediaRemoteFrameworkErrorDomain
com.apple.MRMediaRemote.didLaunch
v16@?0@"NSObject<OS_xpc_object>"8
mrXPCConnection
T@"MRXPCConnection",&,N,V_mrXPCConnection
connection
T@"NSObject<OS_xpc_object>",&,N,V_connection
connectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
clientCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_clientCallbackQueue
clientCallbackPriorityQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_clientCallbackPriorityQueue
browsableContentQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_browsableContentQueue
voiceInputQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_voiceInputQueue
televisionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_televisionQueue
agentQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_agentQueue
isRunning
TB,N,V_isRunning
com.apple.MediaRemote.connectionQueue
com.apple.MediaRemote.clientCallbackPriorityQueue
com.apple.MediaRemote.clientCallbackQueue
com.apple.MediaRemote.browsableContentQueue
com.apple.MediaRemote.voiceInputQueue
com.apple.mediaremoted.xpc
MRXPC_MESSAGE_ID_KEY
v12@?0i8
MRXPC_VOICE_RECORDING_ENDPOINT_AVAILABLE_KEY
MRXPC_TELEVISION_ENDPOINT_AVAILABLE_KEY
MRXPC_AGENT_ENDPOINT_AVAILABLE_KEY
MRXPC_COMMAND_SEND_ERROR_KEY
MRXPC_COMMAND_STATUSES_DATA_KEY
@16@?0@"NSData"8
MRXPC_MEDIA_CONTROLS_CONFIGURATION_KEY
MRXPC_MEDIA_CONTROLS_XPC_ENDPOINT_KEY
MRXPC_MEDIA_CONTROLS_STYLE_KEY
MRXPC_MEDIA_CONTROLS_ROUTE_UID_KEY
MRXPC_MEDIA_CONTROLS_CENTER_KEY
MRXPC_NOWPLAYING_APP_ENABLED_KEY
MRXPC_TIMESTAMP
MRXPC_NOWPLAYING_APP_OVERRIDE_ENABLED_KEY
MRXPC_ERROR_CODE_KEY
MRXPC_NOWPLAYING_DISPLAYID_KEY
MRXPC_PLAYBACK_QUEUE_REQUESTS_DATA
MRXPC_LYRICS_EVENT_DATA
MRXPC_PLAYBACK_STATE_KEY
MRXPC_APP_IS_PLAYING_KEY
MRXPC_SOURCE_ID_KEY
MRXPC_AUDIO_AMPLITUDE_SAMPLES_COUNT_KEY
MRXPC_AUDIO_AMPLITUDE_ARRAY_DATA_KEY
v24@?0@"MRPlayerPath"8@"NSError"16
MRXPC_PICTURE_IN_PICTURE_ENABLED_KEY
true
false
MRXPC_HARDWARE_REMOTE_BEHAVIOR_KEY
v16@?0@"MRProtocolMessage"8
MRXPC_ROUTE_DISCOVERY_MODE_KEY
MRXPC_ROUTE_CATEGORY_KEY
MRXPC_ROUTES_DATA_KEY
MRXPC_ROUTE_OPTIONS_KEY
MRXPC_ROUTE_PASSWORD_KEY
MRXPC_ROUTE_DESCRIPTION_DATA_KEY
MRXPC_ROUTE_UID_KEY
MRXPC_ROUTE_VOLUME_CONTROL_CAPABILITIES_KEY
MRXPC_ROUTE_EXTERNAL_SCREEN_TYPE_KEY
MRXPC_ROUTE_NAME_KEY
MRXPC_AIRPLAY_SEC_SETTINGS_DATA_KEY
MRXPC_CUSTOM_XPC_ENDPOINT_KEY
getExternalDevice
MRXPC_AIRPLAY_LEADER_TYPE
MRXPC_VOLUME_VALUE_KEY
MRXPC_VOLUME_OPTIONS_KEY
MRXPC_GAMECONTROLLER_INPUT_MODE_KEY
MRXPC_PAIRED_EXTERNAL_DEVICES_DATA
MRXPC_PAIRED_EXTERNAL_DEVICE
MRXPC_EXTERNAL_DEVICE_LOGGING_KEY
MRXPC_CUSTOM_DATA_NAME_KEY
MRXPC_CUSTOM_DATA_KEY
MRDeviceInfo *MRMediaRemoteServiceCopyDeviceInfo(MRMediaRemoteServiceRef, MRPlayerPath *__strong)
MRMediaRemoteService.m
Trying to call CopyDeviceInfo from Daemon
MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY
MRXPC_JSON_DATA_BLOCK
NSArray<MRAVVirtualOutputDevice *> *MRMediaRemoteServiceCopyVirtualOutputDevices(MRMediaRemoteServiceRef)
Trying to call CopyVirtualOutputDevices from Daemon
^v16@?0^{__CFData=}8
MRXPC_APP_INSTALLED_KEY
MRXPC_VOICE_INPUT_DEVICES_DATA_KEY
MRXPC_VOICE_INPUT_DESCRIPTOR_DATA_KEY
MRXPC_VOICE_INPUT_DEVICE_ID_KEY
MRXPC_VOICE_DATA_PROTOBUF_DATA_KEY
MRXPC_VOICE_RECORDING_STATE
MRXPC_AGENT_CALL_ID_KEY
MRXPC_NOTIFICATION_NAME_KEY
MRXPC_NOTIFICATION_USERINFO_DATA_KEY
MRXPC_NOTIFICATION_DELAY
MRXPC_BUNDLE_ID_KEY
MRXPC_BOOL_RESULT_KEY
MRXPC_INDEXPATH_DATA_KEY
MRXPC_CONTENT_NOW_PLAYING_IDENTIFIERS_KEY
MRXPC_CONTENT_SUPPORTS_PLAYBACK_PROGRESS_KEY
MRXPC_CONTENT_CHILD_ITEMS_COUNT_KEY
MRXPC_RANGE_BEGIN_KEY
MRXPC_RANGE_LENGTH_KEY
MRXPC_CONTENT_API_MASK_KEY
MRXPC_BUNDLE_ID_ARRAY_DATA_KEY
MRXPC_CONTENT_IDENTIFIERS
MRXPC_CONTENT_CHILD_ITEMS_DATA_KEY
v24@?0@"NSObject<OS_xpc_object>"8@"NSError"16
v28@?0^v8B16^{__CFError=}20
MRXPC_TRANSACTION_NAME
v24@?0^{__CFArray=}8^{__CFError=}16
v24@?0@"MRPlaybackSessionMigrateRequest"8@"NSError"16
MRXPC_COMMAND_KEY
MRXPC_COMMAND_OPTIONS_KEY
v20@?0I8^{__CFArray=}12
MRMediaRemoteBeginLoadingBrowsableContent
MRMediaRemoteBrowsableContentGetNowPlayingContentIdentifiers
MRMediaRemoteServiceGetBrowsableContentSupportsPlaybackProgress
MRMediaRemoteServiceGetCountOfBrowsableContentChildItems
MRMediaRemoteGetBrowsableContentChildItems
MRMediaRemoteRequestPlaybackInitialization
MRMediaRemoteGetContentItemsForIdentifiers
MRXPC_AGENT_NUMBER_ACTIVE_CALLS_KEY
MRXPC_APPLICATION_ACTIVITY_DATA_KEY
Tf,R,N
lastPlayingTimestamp
hasLastPlayingTimestamp
Td,N,V_lastPlayingTimestamp
supportedFormats
defaultFormat
T@"NSMutableArray",&,N,V_supportedFormats
hasDefaultFormat
T@"_MRAudioFormatSettingsProtobuf",&,N,V_defaultFormat
T@"_MROriginProtobuf",R,N
Ti,N,V_identifier
Tq,N,V_type
local
TB,N,GisLocal,V_local
skeleton
T@"MROrigin",R,N
Local
Custom
packetCapacity
maximumPacketSize
packetCount
contents
packetDescriptions
hasFormatSettings
T@"_MRAudioFormatSettingsProtobuf",&,N,V_formatSettings
hasPacketCapacity
Tq,N,V_packetCapacity
hasMaximumPacketSize
Tq,N,V_maximumPacketSize
hasPacketCount
Tq,N,V_packetCount
hasContents
T@"NSData",&,N,V_contents
T@"NSMutableArray",&,N,V_packetDescriptions
MRIDSConnectivityManagerDeviceDidConnect
MRIDSConnectivityManagerDeviceDidDisconnect
MRIDSConnectivityManagerDeviceDidResetConnection
com.apple.mediaremote.MRIDSConnectivityManager.idsQueue
com.apple.mediaremote.MRIDSConnectivityManager.calloutQueue
Watch
%@-%@ (%@)
MRIDSConnectivityManager
active paired device
device
T@"IDSDevice",&,N,V_device
isConnected
imageData
height
width
image
T@"NSData",C,N,V_imageData
Tq,N,V_height
Tq,N,V_width
routingContextUID
multipleBuiltInDevices
hasRoutingContextUID
T@"NSString",&,N,V_routingContextUID
hasMultipleBuiltInDevices
TB,N,V_multipleBuiltInDevices
has%@
@8@?0
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@"NSString"8@16^B24
dictionaryKeyToProtobufKeyMapping
T@"NSDictionary",C,N,V_dictionaryKeyToProtobufKeyMapping
protobufClass
T#,&,N,V_protobufClass
dictionaryValueToProtobufValueTransformer
T@?,C,N,V_dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
T@?,C,N,V_protobufValueToDictionaryValueTransformer
requestByRange
requestByIdentifiers
requestByRequest
hasRequestByRange
TB,N,V_requestByRange
hasRequestByIdentifiers
TB,N,V_requestByIdentifiers
hasRequestByRequest
TB,N,V_requestByRequest
deviceIDs
errorCode
Tq,R,N
T@"MRVirtualVoiceInputDeviceDescriptor",R,N
deviceID
T@"MRAudioBuffer",R,N
T{?=dd},R,N
MROutputContextDataSourceDidAddOutputDeviceNotification
MROutputContextDataSourceDidRemoveOutputDeviceNotification
MROutputContextDataSourceOutputDeviceDidChangeVolumeNotification
MROutputContextDataSourceOutputDeviceDidChangeVolumeControlCapabilitiesNotification
MROutputContextDataSourceOutputDeviceUserInfoKey
MROutputContextDataSourceVolumeUserInfoKey
MROutputContextDataSourceVolumeCapabilitiesUserInfoKey
<%p> %@
  isAirPlaying = %@
  volume = %f
  volume capabilities = %@
  outputDevices = %@
MROutputContextDataSource.m
outputDevice
Tf,R,N,V_volume
isAirPlaying
volumeControlCapabilities
TI,R,N,V_volumeControlCapabilities
T@"NSArray",R,N,V_outputDevices
T@"NSString",R,N,V_uniqueIdentifier
comn.apple.MediaRemote.MROutputContextController.serialQueue
%@ outputContextSupportsVolumeControl = %@, (ignoreThis: localVolume = %lf, local volume capabilities = %@)
v12@?0f8
v12@?0I8
localVolume
Tf,N,V_localVolume
localVolumeControlCapabilities
TI,N,V_localVolumeControlCapabilities
localDeviceUID
@16@?0@"_MRCommandInfoProtobuf"8
@16@?0@"MRCommandInfo"8
T@"_MRSetStateMessageProtobuf",R,N
T@"NSDictionary",C,N
T@"NSArray",C,N,V_supportedCommands
T@"MRPlaybackQueue",C,N,V_playbackQueue
T@"NSString",C,N,V_displayID
T@"MRPlayerPath",C,N,V_playerPath
T@"MRPlaybackQueueRequest",C,N,V_request
TB,N,V_hasPlaybackState
TI,N,V_playbackState
TB,N,V_hasPlaybackStateTimestamp
containsArtwork
TQ,N,V_playbackQueueCapabilities
kMRAVOutputContextDevicesDidChangeNotification
kMRAVOutputContextIdentifierUserInfoKey
kMRAVOutputContextOutputDeviceIdentifierUserInfoKey
MRAVOutputContextDidAddOutputDeviceNotification
MRAVOutputContextDidRemoveOutputDeviceNotification
MRAVOutputContextOutputDevicesDidChangeNotification
MRAVOutputContextOutputDeviceDidChangeNotification
MRAVOutputContextVolumeControlCapabilitiesDidChangeNotification
MRAVOutputContextVolumeDidChangeNotification
MRAVOutputContextDidAddPersonalDeviceNotification
MRAVOutputContextDidRemovePersonalDeviceNotification
MRAVOutputContextOutputDeviceUserInfoKey
MRAVOutputContextVolumeUserInfoKey
MRAVOutputContextVolumeControlCapabilitiesUserInfoKey
+[MRAVOutputContext sharedAudioPresentationContext]_block_invoke
+[MRAVOutputContext sharedSystemAudioContext]_block_invoke
+[MRAVOutputContext sharedSystemScreenContext]_block_invoke
MRAVOutputContext.m
outputContext
<%@: %p type=%@ avOutputContext=%@>
@16@?0@"MRAVConcreteOutputDevice"8
Can only attempt to recover logical devices for shared audio presentation contexts.
v32@?0@"NSString"8@"NSMutableArray"16^B24
B32@?0@"MRAVConcreteOutputDevice"8Q16^B24
v32@?0@"NSArray"8@"MRAVEndpoint"16@"NSError"24
B24@?0@"MRAVConcreteOutputDevice"8^B16
com.apple.MRAVOutputContext.notificationQueue
@"MRAVOutputContext"16@?0@"NSNotification"8
v16@?0@"NSNotification"8
TI,R,N,V_type
avOutputContext
T@"AVOutputContext",R,N,V_avOutputContext
personalDevices
personalDeviceUIDs
outputDevicesSnapshot
TB,R,N,GisVolumeControlAvailable
supportsVolumeControl
Tf,N
removeOutputDevices
setOutputDevices
addOutputDevices
removeOutputDevicesWithoutPausing
devices=%@ , outputContext=%@
Existing devices in context %@
Final devices in context %@
com.apple.avfoundation.allows-set-output-device
Missing entitlement needed to modify output context. Operation will likley not work
%@<%@>
instead of setting nil devices removing all non local devices...
instead of setting nil devices removing all non local devices, but only local devices remain so nothing to do...
No devices on output context
pausing now playing app before removing last output device...
v16@?0^{__CFArray=}8
removing last output device...
device %@ is not groupable
device %@ does not support bluetooth sharing
v16@?0@"AVOutputContextDestinationChange"8
output contexts that support multiple devices do not yet support passwords
outputContext does not support mutiple devices
Output context modification failed. Output context doesn't support multiple devices
Output context modification failed. Attempted to group multiple devices where at least one is not groupable
modificationType
TQ,R,N,V_modificationType
concreteOutputDevices
T@"NSArray",R,N,V_concreteOutputDevices
avOutputDevices
T@"NSArray",R,N,V_avOutputDevices
password
T@"NSString",C,N,V_password
initiator
T@"NSString",C,N,V_initiator
MRAVOutputContextCreateiTunesAudioContext
void MRAVOutputContextSetOutputDevice(MRAVOutputContextRef, MRAVOutputDeviceRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
output contexts are incompatible with output devices from a remote control discoverer
void MRAVOutputContextSetOutputDeviceWithInitiator(MRAVOutputContextRef, MRAVOutputDeviceRef, CFStringRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
void MRAVOutputContextSetOutputDeviceWithPassword(MRAVOutputContextRef, MRAVOutputDeviceRef, CFStringRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
void MRAVOutputContextAddOutputDevice(MRAVOutputContextRef, MRAVOutputDeviceRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
void MRAVOutputContextAddOutputDeviceWithInitiator(MRAVOutputContextRef, MRAVOutputDeviceRef, CFStringRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
void MRAVOutputContextRemoveOutputDevice(MRAVOutputContextRef, MRAVOutputDeviceRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
void MRAVOutputContextRemoveOutputDeviceWithInitiator(MRAVOutputContextRef, MRAVOutputDeviceRef, CFStringRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
AVOutputContext
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVOutputDevice
AVOutputContextOutputDeviceDidChangeNotification
AVOutputContextOutputDevicesDidChangeNotification
AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification
AVOutputContextDestinationChangeInitiatedNotification
AVOutputDeviceVolumeDidChangeNotification
AVOutputDeviceCanSetVolumeDidChangeNotification
AVOutputContextProvidesControlForAllVolumeFeaturesDidChangeNotification
AVAudioSession
AVAudioSessionCategoryPlayback
AVOutputContextAddOutputDeviceOptionInitiator
AVOutputContextRemoveOutputDeviceOptionInitiator
AVOutputContextRemoveOutputDeviceOptionContinuePlayingAfterLastDeviceRemoved
AVOutputContextSetOutputDevicePasswordKey
AVOutputContextSetOutputDeviceCancelIfAuthRequiredKey
AVOutputContextTypeSharedSystemAudio
AVOutputContextTypeSharedSystemScreen
AVOutputContextTypeSharedAudioPresentation
@16@?0@"_MRDeviceInfoMessageProtobuf"8
@"MRDeviceInfo"16@?0@"NSData"8
@16@?0@"MRDeviceInfo"8
localizedModelName
buildVersion
bundleIdentifier
bundleVersion
systemMediaApplication
systemPodcastApplication
deviceUID
localReceiverPairingIdentity
managedConfigurationDeviceIdentifier
tightSyncUID
groupUID
groupName
senderDefaultGroupUID
bluetoothAddress
groupedDevices
airPlayReceivers
linkAgent
clusterID
clusterLeaderID
deviceClass
protocolVersion
groupedDeviceCount
sharedQueueVersion
groupLogicalDeviceCount
supportsSystemPairing
supportsACL
supportsSharedQueue
supportsExtendedMotion
tightSyncGroup
pairingAllowed
connected
airPlayActive
DeviceInfo changed from
 %@ 
Added Fields:
Removed Fields: 
Updated values: 
T@"_MRDeviceInfoMessageProtobuf",R,N
companion
TB,R,N,GisCompanion
gizmo
TB,R,N,GisGizmo
Tq,N,V_deviceClass
hasDeviceClass
TB,N,V_hasDeviceClass
TQ,N,V_protocolVersion
hasProtocolVersion
TB,N,V_hasProtocolVersion
TQ,N,V_groupedDeviceCount
hasGroupedDeviceCount
TB,N,V_hasGroupedDeviceCount
TQ,N,V_sharedQueueVersion
hasSharedQueueVersion
TB,N,V_hasSharedQueueVersion
TQ,N,V_groupLogicalDeviceCount
hasGroupLogicalDeviceCount
TB,N,V_hasGroupLogicalDeviceCount
TB,N,V_supportsSystemPairing
hasSupportsSystemPairing
TB,N,V_hasSupportsSystemPairing
TB,N,V_supportsACL
hasSupportsACL
TB,N,V_hasSupportsACL
TB,N,V_supportsSharedQueue
hasSupportsSharedQueue
TB,N,V_hasSupportsSharedQueue
TB,N,V_supportsExtendedMotion
hasSupportsExtendedMotion
TB,N,V_hasSupportsExtendedMotion
TB,N,GisTightSyncGroup,V_tightSyncGroup
hasTightSyncGroup
TB,N,V_hasTightSyncGroup
TB,N,GisPairingAllowed,V_pairingAllowed
hasPairingAllowed
TB,N,V_hasPairingAllowed
TB,N,GisProxyGroupPlayer,V_proxyGroupPlayer
hasProxyGroupPlayer
TB,N,V_hasProxyGroupPlayer
TB,N,GisConnected,V_connected
hasConnected
TB,N,V_hasConnected
TB,N,GisGroupLeader,V_groupLeader
hasGroupLeader
TB,N,V_hasGroupLeader
TB,N,GisAirPlayActive,V_airPlayActive
hasAirPlayActive
TB,N,V_hasAirPlayActive
T@"NSString",C,N,V_name
T@"NSString",C,N,V_localizedModelName
T@"NSString",C,N,V_buildVersion
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_bundleVersion
T@"NSString",C,N,V_systemMediaApplication
T@"NSString",C,N,V_systemPodcastApplication
T@"NSString",C,N,V_deviceUID
T@"NSString",C,N,V_localReceiverPairingIdentity
T@"NSString",C,N,V_managedConfigurationDeviceIdentifier
T@"NSString",C,N,V_tightSyncUID
T@"NSString",C,N,V_groupUID
T@"NSString",C,N,V_groupName
T@"NSString",C,N,V_senderDefaultGroupUID
T@"NSData",C,N,V_bluetoothAddress
T@"NSArray",C,N,V_groupedDevices
T@"NSArray",C,N,V_airPlayReceivers
T@"NSString",C,N,V_linkAgent
T@"NSString",C,N,V_clusterID
T@"NSString",C,N,V_clusterLeaderID
minimalDescription
T@"NSString",R,C,N
unsupportedMessage
artwork
volumeLevel
deviceName
systemVersion
lastSupportedMessageType
jpeg
localizedShortTitle
localizedTitle
preferredIntervals
supportedInterstionPositions
supportedPlaybackQueueTypes
supportedRates
maximumRating
minimumRating
preferredPlaybackRate
canScrub
numAvailableSkips
presentationStyle
skipFrequency
skipInterval
upNextItemCount
active
enabled
muting
mode
hasMode
Ti,N,V_mode
hasFeatures
Ti,N,V_features
Disabled
Presence
InfraOnly
Detailed
Audio
Screen
Video
Companion
deviceIdentifier
packets
MRGameControllerInputModeNone |
MRGameControllerInputModeCaptureMotion |
MRGameControllerInputModeCaptureButtons |
MRGameControllerInputModeCaptureDigitizer
MRGameControllerPlayerIndex1
MRGameControllerPlayerIndex2
MRGameControllerPlayerIndex3
MRGameControllerPlayerIndex4
MRGameControllerPlayerIndexUnset
MRGameControllerEventNone
MRGameControllerEventMotion
MRGameControllerEventButtons
MRGameControllerEventButtonsExtended
MRGameControllerEventDigitizer
Unknown Event: Did you remember to use the event initializers?
Game Controller Event: {
Buttons: {
buttonA:%lf
buttonX:%lf
buttonPause:%lf
Extended Buttons: {
dpadX:%lf
dpadY:%lf
buttonB:%lf
buttonY:%lf
leftShoulder:%lf
rightShoulder:%lf
leftThumbstickX:%lf
leftThumbstickY:%lf
rightThumbstickX:%lf
rightThumbstickY:%lf
leftTrigger:%lf
rightTrigger:%lf
Digitizer: { 
x: %lf 
y: %lf 
touchDown: %@ 
Motion: {
Gravity: %@ 
UserAcceleration: %@
Acceleration: {
x:%lf y:%lf z:%lf
destination=<%@>, playbackSession=<%@>, request=<%@>
destination=<%@>, request=<%@>
sendPlaybackSession
v24@?0@"MRPlaybackSessionMigrateResponseMessage"8@"NSError"16
sendPlaybackSessionMigrateBegin
v24@?0@"MRProtocolMessage"8@"NSError"16
sendPlaybackSessionMigrateEnd
void _MRMediaRemotePlaybackSessionRequestSupportedType(MRPlayerPath *__strong, MRPlayerPath *__strong, __strong dispatch_queue_t, void (^__strong)(NSString *__strong, NSError *__strong))
MRPlaybackSessionMigrateRequestResponse.m
Attempting to use unresolved Player Path
v24@?0@"NSString"8@"NSError"16
Migration feature not enabled
source %@ does not support %@ (destination supportedTypes = %@)
destination %@ does not support %@ (source currentTypes = %@)
%@ options do not match. source=%@ currentType=%@ destination=%@ supportedTypes=%@
SupportedCommands do not allow migration beause %@
resolvedSourcePlayerPath %@ is an airplay destination
v40@?0@"MRPlayerPath"8@"MRPlayerPath"16@"NSString"24@"NSError"32
destinationPlayerPath %@ was resolved to %@
sourcePlayerPath %@ was resolved to %@. Likely there is no now playing app?
endPlaybackSessionMigration
endPlaybackSessionMigration<%@>
v24@?0@"NSError"8@?<v@?@"NSError">16
requestPlaybackSession
requestPlaybackSession<%@>
v16@?0@?<v@?@"NSError">8
beginPlaybackSessionMigration
beginPlaybacSessionMigration<%@>
getPlaybackQueue
B8@?0
@"MRPlaybackSessionMigrateRequest"16@?0@"MRPlaybackSessionMigrateRequest"8
sendPlaybackSession<%@>
getPlaybackState
pause
migrationPlaybackSession<%@> for option %@
coordinatePlayback
migratePlaybackSession
source=%@ destination=%@ request=%@
requestType
source=%@ destination=%@
v40@?0^v8^v16^{__CFString=}24^{__CFError=}32
migratePlaybackSessionForDevice
v24@?0@"MRAVEndpoint"8@"NSError"16
B16@?0@"MRAVOutputDevice"8
@"NSString"24@?0@"NSArray"8@"NSArray"16
MRNowPlayingPlayerPathRef MRPlaybackSessionMigrateCopyCorrespondingPlayerPath(MRNowPlayingPlayerPathRef, MROriginRef)
Non resolved playerPath
allDevices
hasClient
T@"_MRNowPlayingClientProtobuf",&,N,V_client
proximity
routePicker
shortcuts
None | 
RestorePlaybackState | 
PlayDestination | 
PauseSource | 
RestorePlaybackPosition | 
RestorePlaybackRate | 
UpdateActiveEndpointToDestination | 
ResetOutputContext | 
FallbackToAddOutputDevices | 
AllowMigrateToGroup | 
AllowMigrateFromGroup | 
error
T@"NSError",R,N
Playback Session Migration Report
----------------------------------
Identifier: %@
@16@?0@"_MRPlaybackSessionMigrateRequestEventProtobuf"8
%@Duration
%@: %@
Events:
 %@: %.4f seconds
  Error: %@
playerOptions = <%@>, endpointOptions = <%@>
, playbackRate = <%lf>
, playbackPosition = <%lf>
, playbackState = <%@>
, item = <%@>
@"NSDictionary"8@?0
B16@?0@"_MRPlaybackSessionMigrateRequestEventProtobuf"8
unknown
destinationTypes
TI,N,V_destinationTypes
playerOptions
Tq,N
endpointOptions
T@"NSString",&,N
appBundleIdentifier
T@"NSString",&,N,V_appBundleIdentifier
T@"NSString",&,N,V_initiator
TQ,N,V_requestType
fallbackReason
TQ,N,V_fallbackReason
playbackPosition
Td,N
playbackSessionSize
Tq,N,V_playbackSessionSize
TI,N
T@"MRContentItem",&,N
originatorType
TI,N,V_originatorType
report
playbackSessionRequest
T@"MRPlaybackSessionRequest",&,N
T@"_MRPlaybackSessionMigrateRequestProtobuf",R,N
addProxDevice
stopAirPlay
migrate
LocalDeviceIsGroupable
MoreThanOneLogicalDevice
UnsupportedType
EndpointNotFound
SearchFailed
MigrateFromGroupNotAllowed
MigrateToGroupNotAllowed
SetPlaybackNotSupportedOnSource
SetPlaybackNotSupportedOnDestination
SetPlaybackMismatch
ResolvedPlayerPathIsAirPlay
Other
T@"NSMutableArray",&,N,V_outputDeviceUIDs
MRAVXPCPipeTransport.m
pipeEndpoint
com.apple.mediaremote.externalDeviceTransport/serialQueue
<%@: %p connectionType=%@>
T@"MRAVOutputDevice",R,N,V_outputDevice
T@"NSXPCListenerEndpoint",R,N,V_pipeEndpoint
CURunLoopThread
/System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils
<%@:%p routingContextUID = %@, multipleBuiltIn = %s>
T@"NSString",R,N,V_routingContextUID
TB,R,N,V_multipleBuiltInDevices
origin-%@-%ld/client-%@/player-%@
-[MRPlayerPath playerPathByRedirectingToOrigin:]
MRPlayerPath.m
origin
T@"_MRNowPlayingPlayerPathProtobuf",R,N
localResolvedPlayerPath
T@"MROrigin",C,N,V_origin
T@"MRClient",C,N,V_client
player
T@"MRPlayer",C,N,V_player
TB,R,N,GisLocal
resolved
TB,R,N,GisResolved
TB,R,N,GisSystemMediaApplication
<%@:%p netService = %@>
netService
T@"NSNetService",&,N,V_netService
requiresCustomPairing
MRVolumeControlCapabilitiesNone
MRVolumeControlCapabilitiesRelative
MRVolumeControlCapabilitiesAbsolute
pairingData
status
isRetrying
isUsingSystemPairing
hasPairingData
T@"NSData",&,N,V_pairingData
hasStatus
Ti,N,V_status
hasIsRetrying
TB,N,V_isRetrying
hasIsUsingSystemPairing
TB,N,V_isUsingSystemPairing
designatedGroupLeader
isLocalEndpoint
instanceIdentifier
isProxyGroupPlayer
connectionType
canModifyGroupMembership
personalOutputDevices
hasName
T@"NSString",&,N,V_name
T@"NSString",&,N,V_uniqueIdentifier
T@"NSMutableArray",&,N,V_outputDevices
hasDesignatedGroupLeader
T@"_MRAVOutputDeviceDescriptorProtobuf",&,N,V_designatedGroupLeader
hasIsLocalEndpoint
TB,N,V_isLocalEndpoint
hasInstanceIdentifier
T@"NSString",&,N,V_instanceIdentifier
hasIsProxyGroupPlayer
TB,N,V_isProxyGroupPlayer
hasConnectionType
Ti,N,V_connectionType
hasCanModifyGroupMembership
TB,N,V_canModifyGroupMembership
T@"NSMutableArray",&,N,V_personalOutputDevices
Direct
Relay
AirPlaySender
object
T@,W,N,V_object
protocol
T@"Protocol",&,N,V_protocol
response
hasResponse
T@"NSString",&,N,V_response
hasKey
T@"NSString",&,N,V_key
hasData
T@"NSData",&,N,V_data
text
actionType
hasText
T@"NSString",&,N,V_text
hasActionType
Ti,N,V_actionType
Insert
Delete
Clear
[MRNowPlaying requestLastPlayingDate]
lastPlayingDate = %@
v24@?0@"NSDate"8@"NSError"16
T@"MRPlayerPath",R,C,N,V_playerPath
kMRMediaRemoteErrorTelevisionPairingLockOutDelayUserInfoKey
com.apple.MediaRemote.MRTelevisionDevice.SerialQueue
MRTelevision.m
incorrect reply
gameControllerInputModeCallback
T@?,C,N,V_gameControllerInputModeCallback
gameControllerInputMode
TI,N,V_gameControllerInputMode
gameControllerInputModeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_gameControllerInputModeCallbackQueue
gameControllerPropertiesCallback
T@?,C,N,V_gameControllerPropertiesCallback
gameControllerPropertiesCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_gameControllerPropertiesCallbackQueue
recordingStateCallback
T@?,C,N,V_recordingStateCallback
recordingStateCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordingStateCallbackQueue
textInputCallback
T@?,C,N,V_textInputCallback
textInputCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_textInputCallbackQueue
rtiCallback
T@?,C,N,V_rtiCallback
rtiCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_rtiCallbackQueue
rtiSourceSession
T@"RTIInputSystemSourceSession",&,N,V_rtiSourceSession
hiliteModeCallback
T@?,C,N,V_hiliteModeCallback
hiliteModeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_hiliteModeCallbackQueue
TB,R,N,V_hiliteMode
v20@?0^{__CFString=}8B16
v32@?0{?=IQ}8@?<v@?^{__CFString=}B>24
void MRTelevisionSetHiliteModeCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionHiliteModeCallback)
invalid object passed to %s
void MRTelevisionRequestHiliteModeExit(MRExternalDeviceRef)
_Bool MRTelevisionGetHiliteMode(MRExternalDeviceRef)
void MRTelevisionWake(MRExternalDeviceRef)
void MRTelevisionRegisterVirtualTouchDevice(MRExternalDeviceRef, MRVirtualTouchDeviceDescriptorRef, __strong dispatch_queue_t, __strong MRTelevisionTouchDeviceIDCallback)
replyQ
completion
v24@?0Q8@"NSError"16
void MRTelevisionSendVirtualTouchEvent(MRExternalDeviceRef, MRHIDTouchEvent, MRVirtualTouchDeviceID)
void MRTelevisionSendHIDEvent(MRExternalDeviceRef, IOHIDEventRef)
void MRTelevisionGetCurrentTextEditingSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRTextEditingSessionRef, CFErrorRef))
callback
v24@?0@"MRTextEditingSession"8@"NSError"16
void MRTelevisionSetTextEditingCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionTextInputCallback)
void MRTelevisionTextEditingInsert(MRExternalDeviceRef, MRTextEditingSessionRef, CFStringRef)
void MRTelevisionTextEditingSetText(MRExternalDeviceRef, MRTextEditingSessionRef, CFStringRef)
void MRTelevisionTextEditingDeleteBackward(MRExternalDeviceRef, MRTextEditingSessionRef)
void MRTelevisionTextEditingClearText(MRExternalDeviceRef, MRTextEditingSessionRef)
void MRTelevisionGetCurrentRTISourceSession(MRExternalDeviceRef, __strong dispatch_queue_t, void (^__strong)(MRRTIInputSystemSourceSessionRef, CFErrorRef))
v24@?0@"RTIInputSystemSourceSession"8@"NSError"16
void MRTelevisionSetRTICallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionRTICallback)
void MRTelevisionRegisterGameController(MRExternalDeviceRef, MRGameControllerProfile, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)
void MRTelevisionRegisterGameControllerWithProperties(MRExternalDeviceRef, MRGameControllerPropertiesRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerIDCallback)
void MRTelevisionUnregisterGameController(MRExternalDeviceRef, MRGameControllerID)
void MRTelevisionSetGameControllerInputModeCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerInputModeCallback)
void MRTelevisionSetGameControllerPropertiesCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionGameControllerPropertiesCallback)
void MRTelevisionSendGameControllerEvent(MRExternalDeviceRef, MRGameControllerEvent, MRGameControllerID)
void MRTelevisionSendGameControllerEventV2(MRExternalDeviceRef, MRGameControllerEventRef, MRGameControllerID)
invalid MRExternalDeviceRef object passed to %s
invalid MRGameControllerEventRef object passed to %s
MRGameControllerInputMode MRTelevisionGetGameControllerInputMode(MRExternalDeviceRef)
void MRTelevisionRegisterVirtualVoiceInputDevice(MRExternalDeviceRef, MRVirtualVoiceInputDeviceDescriptorRef, __strong dispatch_queue_t, void (^__strong)(MRVirtualVoiceInputDeviceID, CFErrorRef))
void MRTelevisionSetVoiceRecordingStateCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRTelevisionRecordingStateCallback)
MRVoiceRecordingState MRTelevisionGetVoiceRecordingState(MRExternalDeviceRef)
void MRTelevisionProcessVirtualVoiceInputAudioData(MRExternalDeviceRef, MRVirtualVoiceInputDeviceID, MRAudioBufferRef, MRAudioTime, float)
absolute
integratedDisplay
screenSizeWidth
screenSizeHeight
hasAbsolute
TB,N,V_absolute
hasIntegratedDisplay
TB,N,V_integratedDisplay
hasScreenSizeWidth
Tf,N,V_screenSizeWidth
hasScreenSizeHeight
Tf,N,V_screenSizeHeight
JUST_GOT_SPLASH_BEATS!
kMRMediaRemoteOptionSourceID
kMRMediaRemoteOptionMediaType
kMRMediaRemoteOptionIsExternalPlayerCommand
kMRMediaRemoteOptionSkipInterval
kMRMediaRemoteOptionPlaybackRate
kMRMediaRemoteOptionRating
kMRMediaRemoteOptionIsNegative
kMRMediaRemoteOptionPlaybackPosition
kMRMediaRemoteOptionBeginSeek
kMRMediaRemoteOptionEndSeek
kMRMediaRemoteOptionRepeatMode
kMRMediaRemoteOptionShuffleMode
kMRMediaRemoteOptionSendOptionsNumber
kMRMediaRemoteOptionContextID
kMRMediaRemoteOptionDestinationAppDisplayID
kMRMediaRemoteOptionTrackID
kMRMediaRemoteOptionContentItemID
kMRMediaRemoteOptionPlaybackQueueOffset
kMRMediaRemoteOptionNowPlayingContentItemID
kMRMediaRemoteOptionStationID
kMRMediaRemoteOptionStationHash
kMRMediaRemoteOptionStationURL
kMRMediaRemoteOptionShouldBeginRadioPlayback
kMRMediaRemoteOptionSystemAppPlaybackQueueData
kMRMediaRemoteOptionRequestDefermentToPlaybackQueuePosition
kMRMediaRemoteOptionPlaybackQueueInsertionPosition
kMRMediaRemoteOptionInsertAfterContentItemID
kMRMediaRemoteOptionInsertBeforeContentItemID
kMRMediaRemoteOptionPlaybackQueueDestinationOffset
kMRMediaRemoteOptionBookmarkiTunesDestination
kMRMediaRemoteOptionAffiliateIdentifier
kMRMediaRemoteOptionLanguageOptionData
kMRMediaRemoteOptionChangeLanguageOptionSetting
kMRMediaRemoteOptionRemoteControlInterfaceIdentifier
kMRMediaRemoteOptionCommandBroadcasted
kMRMediaRemoteOptionInterruptionEvent
kMRMediaRemoteOptionPredefinedPlaybackRate
kMRMediaRemoteOptionPlaybackProgress
kMRMediaRemoteOptionDisableImplicitAppLaunchBehaviors
kMRMediaRemoteOptionDisableFallbackContent
kMRMediaRemoteOptionCommandType
kMRMediaRemoteOptionUserIdentityData
kMRMediaRemoteOptionHomeKitUserIdentifier
kMRMediaRemoteOptionVerifySupportedCommands
kMRMediaRemoteOptionPrivateListeningEnabled
kMRMediaRemoteOptionAssistantSetQueueTrueCompletion
kMRMediaRemoteOptionCommandID
kMRMediaRemoteOptionSenderID
kMRMediaRemoteOptionPlaybackSessionData
kMRMediaRemoteOptionQueueEndAction
kMRMediaRemoteCommandInfoPreservesQueueEndActionKey
kMRMediaRemoteCommandInfoPreservesShuffleModeKey
kMRMediaRemoteCommandInfoPreservesRepeatModeKey
kMRMediaRemoteMediaControlsConfigurationKey
kMRMediaRemoteMediaControlsLanguageOptionsRouteUIDKey
kMRMediaRemoteMediaControlsLanguageOptionsCenterKey
kMRMediaRemoteSupportedCommandsDidChangeNotification
kMRMediaRemoteOriginSupportedCommandsDidChangeNotification
kMRMediaRemotePlayerSupportedCommandsDidChangeNotification
_MRMediaRemotePlayerSupportedCommandsDidChangeNotification
_MRMediaRemoteDefaultSupportedCommandsDidChangeNotification
kMRMediaRemoteSystemAppDidSkipTrackNotification
com.apple.mediaremote.applicationDidReportPlaybackError
%@%@
Broadcast
v28@?0I8^{__CFDictionary=}12@?<v@?^{__CFArray=}>20
%08x
v36@?0^v8I16^{__CFDictionary=}20@?<v@?I^{__CFArray=}>28
%ld commands
B24@?0@"MRCommandInfo"8@"NSDictionary"16
requestPendingCommands
Cannot call 'RequestPendingCommands' if CanBeNowPlaying=YES
copyPendingCommands
Cannot call 'CopyPendingCommands' if MRMediaRemoteServiceSetCanBeNowPlayingApp=YES
<Unrecognized Command>
ToggleRecord
ChangePlaybackRateCommand
SetRepeatMode
SetShuffleMode
Menu
Select
UpArrow
DownArrow
BacklightOff
BuyTrack
BuyAlbum
PreOrderAlbum
CancelDownload
PresentUpNext
SetSleepTimer
PresentSharingOptions
Reshuffle
UserModifiedQueueDisabled
CommandIgnored
InvalidCommandOptions
<Unknown>
Default
ForegroundReceiver
com.apple.music.playbackqueue.tracklist
com.apple.music.playbackqueue.radio
com.apple.mediaplayer.playbackcontext
Command = <%@>, %@, commandID = <%@>, remote control interface = <%@>, appOptions = <%@>, options = <%@>
not included
SenderDevice = <%@>, SenderBundleIdentifier = <%@>, SenderPID = <%d>
com.apple.MRMediaRemote.elapsedTimeDidChange
com.apple.MRMediaRemote.playbackSpeedDidChange
com.apple.MRMediaRemote.repeatModeDidChange
com.apple.MRMediaRemote.shuffleModeDidChange
B16@?0@8
<%@:%p %p %@>
 (invalidated)
transactionName
T@"NSString",R,N,V_transactionName
T@"NSMutableArray",&,N,V_contentItems
endpointChangedCallback
T@?,C,N
T@"NSString",R,N,V_outputDeviceUID
T@"MRAVEndpoint",R,N,V_endpoint
use %@ instead
%s is abstract
-[MRCryptoPairingSession isPaired]
-[MRCryptoPairingSession isValid]
-[MRCryptoPairingSession pairedDevices]
-[MRCryptoPairingSession open]
-[MRCryptoPairingSession close]
-[MRCryptoPairingSession removePeer]
-[MRCryptoPairingSession updatePeer]
-[MRCryptoPairingSession handlePairingExchangeData:completion:]
-[MRCryptoPairingSession handlePairingFailureWithStatus:]
-[MRCryptoPairingSession encryptData:withError:]
-[MRCryptoPairingSession decryptData:withError:]
-[MRCryptoPairingSession deleteIdentityWithError:]
T@"MRDeviceInfo",R,N,V_device
role
TQ,R,N,V_role
valid
TB,R,N,GisValid
paired
TB,R,N,GisPaired
pairedDevices
T@"<MRCryptoPairingSessionDelegate>",W,N,V_delegate
<%@: %p> (%@ - %@)
hostedRoutingSessionConnection
T@"NSXPCConnection",&,N,V_hostedRoutingSessionConnection
distantEndpoints
T@"NSArray",&,N
distantOutputDevices
distantExternalDevices
T@"NSMutableDictionary",&,N,V_distantExternalDevices
events
hasPlayerOptions
Ti,N,V_playerOptions
hasEndpointOptions
Ti,N,V_endpointOptions
T@"NSMutableArray",&,N,V_events
hasPlaybackPosition
Td,N,V_playbackPosition
hasContentItem
T@"_MRContentItemProtobuf",&,N,V_contentItem
Td,N,V_playbackRate
hasPlaybackSessionRequest
T@"_MRPlaybackSessionRequestProtobuf",&,N,V_playbackSessionRequest
RestoreDestinationPlaybackState
PlayDesination
PauseSource
RestorePlaybackPosition
RestorePlaybackRate
UpdateActiveEndpoint
FallbackToAddOutputDevices
AllowMigrateToGroup
AllowMigrateFromGroup
lastPlayingDate
T@"NSDate",R,N
kMRExternalDeviceEndpointDidChangeNotification
kMRExternalDeviceEndpointUserInfoKeyEndpoint
kMRCredentialRequirementTypeUserInfoKey
kMRCredentialRequirementCharacterCountUserInfoKey
kMRTelevisionRemoteNowPlayingArtworkChanged
kMRMediaRemoteErrorExternalDevicePairingLockOutDelayUserInfoKey
kMRExternalDeviceConnectionStateDidChangeNotification
kMRExternalDeviceConnectionStateUserInfoKey
Failed to load device info
Failed to create IO Streams
Failed to open security session
Failed to register custom origin
Failed to re-register custom origin
Failed to sync client state
MRExternalDeviceConnectionCorrelationIDUserInfoKey
MRExternalDeviceConnectionReasonUserInfoKey
-[MRExternalDevice name]
-[MRExternalDevice hostName]
-[MRExternalDevice port]
-[MRExternalDevice customOrigin]
-[MRExternalDevice deviceInfo]
-[MRExternalDevice supportedMessages]
-[MRExternalDevice wantsNowPlayingNotifications]
-[MRExternalDevice setWantsNowPlayingNotifications:]
-[MRExternalDevice wantsNowPlayingArtworkNotifications]
-[MRExternalDevice setWantsNowPlayingArtworkNotifications:]
-[MRExternalDevice wantsVolumeNotifications]
-[MRExternalDevice setWantsVolumeNotifications:]
-[MRExternalDevice wantsOutputDeviceNotifications]
-[MRExternalDevice setWantsOutputDeviceNotifications:]
-[MRExternalDevice wantsSystemEndpointNotifications]
-[MRExternalDevice setWantsSystemEndpointNotifications:]
-[MRExternalDevice isPaired]
-[MRExternalDevice isUsingSystemPairing]
-[MRExternalDevice connectWithOptions:userInfo:]
-[MRExternalDevice disconnect:]
-[MRExternalDevice unpair]
-[MRExternalDevice setPairingCallback:withQueue:]
-[MRExternalDevice setConnectionStateCallback:withQueue:]
-[MRExternalDevice setNameCallback:withQueue:]
-[MRExternalDevice setPairingAllowedCallback:withQueue:]
-[MRExternalDevice setCustomDataCallback:withQueue:]
-[MRExternalDevice setVolumeCallback:withQueue:]
-[MRExternalDevice outputDeviceVolume:queue:completion:]
-[MRExternalDevice setOutputDeviceVolume:outputDeviceUID:queue:completion:]
-[MRExternalDevice outputDeviceVolumeControlCapabilities:queue:completion:]
-[MRExternalDevice modifyOutputContextOfType:addingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:withReplyQueue:completion:]
-[MRExternalDevice sendButtonEvent:]
-[MRExternalDevice sendCustomData:withName:]
-[MRExternalDevice ping:callback:withQueue:]
-[MRExternalDevice errorForCurrentState]
-[MRExternalDevice currentClientUpdatesConfigMessage]
-[MRExternalDevice sendClientUpdatesConfigMessage]
Deprecated
TB,N,GisUsingSystemPairing,V_usingSystemPairing
port
customOrigin
T@"NSArray",R,N,V_personalOutputDevices
wantsNowPlayingNotifications
wantsNowPlayingArtworkNotifications
wantsVolumeNotifications
wantsOutputDeviceNotifications
wantsSystemEndpointNotifications
wantsEndpointChangeNotifications
TB,N,V_wantsEndpointChangeNotifications
TB,R,N,GisValid,V_valid
connectionState
TI,R,N,V_connectionState
com.apple.MediaRemote.MRExternalDevice.SerialQueue
com.apple.MediaRemote.MRExternalDevice.WorkerQueue
com.apple.MediaRemote.MRExternalDevice.NotificationQueue
<%@:%p %@ transport=%@>
@"NSError"8@?0
success
NONE
retry
attemptReconnection
reason
MRExternalDevice.m
Ping Completion Not Called
ping
v24@?0^{__CFError=}8d16
incorrect reply type
!_clientConnection
com.apple.mediaremote.MRExternalDevice/%@(%@)
v20@?0C8^v12
-[MRTransportExternalDevice _onWorkerQueue_openSecuritySession]_block_invoke
Type mismatch: %@ is not a %@
v24@?0@"MRCryptoPairingSession"8@"NSData"16
v32@?0@"MRCryptoPairingSession"8d16@?<v@?@"NSString">24
v24@?0@"MRCryptoPairingSession"8@"NSError"16
v20@?0I8@"NSArray"12
v32@?0^v8^v16@?<v@?^vB^{__CFError=}>24
v24@?0^v8^v16
v24@?0@"MRPlaybackSession"8@"NSError"16
v32@?0^v8^v16@?<v@?^v^{__CFError=}>24
v40@?0@"MRPlaybackSession"8@"MRPlaybackSessionMigrateRequest"16@"MRPlayerPath"24@?<v@?@"MRPlaybackSessionMigrateRequest"@"NSError">32
v32@?0^v8^v16@?<v@?^{__CFError=}>24
v40@?0^v8^{__CFError=}16^v24@?<v@?^{__CFError=}>32
event = <playbackQueueRequest>, request = <%@>, error = <%@>
-[MRTransportExternalDevice _handlePlaybackQueueResponse:completion:]
Type mismatch, expecting %@ found %@
event = <%@>, command = <%@>, error = <%@>
Received update from companion
v16@?0@"MRUpdateActiveSystemEndpointResponse"8
clientConnection
T@"MRExternalClientConnection",&,N,V_clientConnection
T@"MROrigin",&,N,V_customOrigin
T@"MRDeviceInfo",&,N,V_deviceInfo
nowPlayingArtwork
T@"NSData",&,N,V_nowPlayingArtwork
T@"NSDictionary",&,N,V_nowPlayingInfo
nowPlayingItem
T@"MRContentItem",&,N,V_nowPlayingItem
T@"MRPlayerPath",&,N,V_playerPath
pairingCallback
T@?,C,N,V_pairingCallback
pairingCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingCallbackQueue
pairingAllowedCallback
T@?,C,N,V_pairingAllowedCallback
pairingAllowedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingAllowedCallbackQueue
outputDevicesUpdatedCallback
T@?,C,N,V_outputDevicesUpdatedCallback
outputDevicesUpdatedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_outputDevicesUpdatedCallbackQueue
outputDevicesRemovedCallback
T@?,C,N,V_outputDevicesRemovedCallback
outputDevicesRemovedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_outputDevicesRemovedCallbackQueue
volumeControlCapabilitiesCallback
T@?,C,N,V_volumeControlCapabilitiesCallback
volumeControlCapabilitiesCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_volumeControlCapabilitiesCallbackQueue
outputContextCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_outputContextCallbackQueue
runLoop
T@"NSRunLoop",&,N,V_runLoop
workerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workerQueue
transport
T@"MRExternalDeviceTransport",R,N,V_transport
connectionRecoveryBehavior
Tq,N,V_connectionRecoveryBehavior
isCallingClientCallback
TB,N,V_isCallingClientCallback
dealloc
reconnection
disconnect
T@"_MRLyricsEventProtobuf",&,N,V_event
hasVolumeControlAvailable
TB,N,V_volumeControlAvailable
hasVolumeCapabilities
Ti,N,V_volumeCapabilities
T@"NSString",&,N,V_virtualDeviceID
hasReport
T@"NSData",&,N,V_report
serializationDate
T@"NSDate",R,N,V_serializationDate
prompt
inputTraits
hasPrompt
T@"NSString",&,N,V_prompt
hasInputTraits
T@"_MRTextInputTraitsProtobuf",&,N,V_inputTraits
hasNowPlayingUpdates
TB,N,V_nowPlayingUpdates
hasArtworkUpdates
TB,N,V_artworkUpdates
hasVolumeUpdates
TB,N,V_volumeUpdates
hasKeyboardUpdates
TB,N,V_keyboardUpdates
hasOutputDeviceUpdates
TB,N,V_outputDeviceUpdates
hasSystemEndpointUpdates
TB,N,V_systemEndpointUpdates
Type: %@ Entry: %@
v32@?0@"NSString"8@"MRExternalDeviceMessageMetricsEntry"16^B24
Max: %lu
 Min: %lu
 Avg: %lu
 Total: %lu
 Values: %@
TQ,N,V_avg
TQ,N,V_min
TQ,N,V_max
total
TQ,N,V_total
values
T@"NSMutableArray",&,N,V_values
T@"MRAVOutputDevice",R,N
Ti,R,N
T{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI},R,N
<Message Type: %@
Timestamp: %llu
Error: %@
Identifier: %@
Type: %lul
Priority: %lul
Message: x: %u y: %u phase: %u deviceID: %u finger: %u
mediaremoteuti
library
multiverse
store
%@://%@/%@
%llu
TQ,N,V_name
hasPackets
T@"_MRTransactionPacketsProtobuf",&,N,V_packets
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_KEY
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_REQUEST_KEY
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_CAPABILITIES_KEY
@"NSData"16@?0@8
MRAddDistantEndpointToXPCMessage
/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-4018.100.117/MediaRemote/Framework/Utility/MRSerializationUtility.m
[(__bridge MRAVEndpoint *)endpoint isKindOfClass:[MRAVDistantEndpoint class]]
MRXPC_DISTANT_ENDPOINT_METADATA_KEY
MRXPC_EXTERNAL_DEVICE_LISTENER_KEY
MRXPC_ENDPOINT_UID_KEY
MRXPC_PROTOBUF_DATA_KEY
MRXPC_CLIENT_ERROR_DATA_KEY
MRXPC_ORIGIN_DATA_KEY
MRXPC_AVAILABLE_ORIGINS_DATA_KEY
MRXPC_NOWPLAYING_CLIENT_DATA_KEY
MRXPC_NOWPLAYING_PLAYER_DATA_KEY
MRXPC_NOWPLAYING_PLAYER_PATH_DATA_KEY
MRXPC_COMMAND_INFO_ARRAY_DATA_KEY
MRXPC_VIDEO_THUMBNAILS_REQ_DATA_KEY
MRXPC_VIDEO_THUMBNAILS_ARRAY_DATA_KEY
MRXPC_NOWPLAYING_STATE_DATA_KEY
MRXPC_TRANSACTION_COMING
MRXPC_DIAGNOSTIC_DATA_KEY
MRXPC_PLAYBACK_SESSION
MRXPC_NOWPLAYING_CLIENT_ARRAY_DATA_KEY
MRXPC_NOWPLAYING_PLAYER_ARRAY_DATA_KEY
MRXPC_NOWPLAYING_PLAYER_PATH_ARRAY_DATA_KEY
MRXPC_COLOR_DATA_KEY
@"MRPlaybackSessionRequest"16@?0@"NSData"8
@"NSData"16@?0@"MROrigin"8
@"NSData"16@?0@"MRClient"8
@"NSData"16@?0@"MRPlayer"8
@"NSData"16@?0@"MRPlayerPath"8
@"NSData"16@?0@"MRDeviceInfo"8
@"NSData"16@?0@"MRPlaybackSessionRequest"8
@"NSData"16@?0@"MRPlaybackSession"8
@"NSData"16@?0@"MRPlaybackQueueRequest"8
@"NSData"16@?0@"MRPlaybackQueue"8
@"NSData"16@?0@"NSArray"8
    origin = %@
    deviceInfo = %@
    volumeCapabilities = %@
    volume = %@
    nowPlayingClients = %@
MRNowPlayingOriginClientRequests.m
v24@?0@"MRDeviceInfo"8@"NSError"16
T@"MROrigin",R,N,V_origin
T@"MRPlayerPath",R,N,V_playerPath
T@"MRDeviceInfo",C,N
T@"NSNumber",&,N
-[MRNowPlayingClientRequests initWithClient:]
client.processIdentifier
    client = %@
    playerClients = %@
T@"MRClient",R,N,V_client
nowPlayingClients
T@"NSArray",R,N,V_nowPlayingClients
touchDown
hasX
Td,N,V_x
hasY
Td,N,V_y
hasTouchDown
TB,N,V_touchDown
TQ,N,V_timestamp
outputContextType
addingOutputDeviceUID
removingOutputDeviceUID
settingOutputDeviceUID
hasOutputContextType
Ti,N,V_outputContextType
T@"NSMutableArray",&,N,V_addingOutputDeviceUIDs
T@"NSMutableArray",&,N,V_removingOutputDeviceUIDs
T@"NSMutableArray",&,N,V_settingOutputDeviceUIDs
MRLegacySendHIDEventMessage.m
<Message Type: %@
Timestamp: %llu
Error: %@
Identifier: %@
Type: %lu
Priority: %lu
Message: %@
buttonEvent
T{_MRHIDButtonEvent=IIB},R,N
chacha20_poly1305_encrypt_all_64x64
Session not open
Encrypted data has an invalid length
chacha20_poly1305_decrypt_all_64x64
PairingSessionDeleteIdentity
PairingSessionSetKeychainInfo
com.apple.MediaRemote.pairing
Media Remote Pairing Identity
Paired TV Remote Peer
Cannot add peer, No device available
Cannot update peer, No pairing session available
PairingSessionCopyPeerIdentifier
Cannot add peer, No peer Identifier available
PairingSessionUpdatePeerInfo
PairingSessionDeletePeer
Could not find peer
PairingSessionSetFlags
PairingSessionCopyPeers
Pairing Session Delay
Pairing Session NULL setup code
v16@?0@"NSString"8
PairingSessionCreate
com.apple.RemoteControl
PairingSessionSetACL
No pairing session
PairingSessionExchange
PairingSessionSetSetupCode
Failed to set setup code on pairing session (OSStatus = %d)
Pairing Session is not available
MediaRemote-Read-Encryption-Key
MediaRemote-Write-Encryption-Key
PairingSessionDeriveKey
MediaRemote-Salt
inputKey
T@"NSData",&,N,V_inputKey
inputNonce
T@"NSMutableData",&,N,V_inputNonce
outputKey
T@"NSData",&,N,V_outputKey
outputNonce
T@"NSMutableData",&,N,V_outputNonce
pairedPeerDevice
pairedPeerDevices
mediaRemotePairedDevices
T@"NSMutableDictionary",R,N
peerIdentifier
TQ,R,N,V_state
hasExchangedMessage
TB,R,N,V_hasExchangedMessage
pairingFlags
TI,N,V_pairingFlags
OSStatus _MRCUPSShowSetupCodeCallback(PairingFlags, char *, size_t, void *)
MRCoreUtilsPairingSession.m
NULL context
void _MRCUPSHideSetupCodeCallback(void *)
OSStatus _MRCUPSPromptForSetupCodeCallback(PairingFlags, int32_t, void *)
playbackSession
v24@?0@"MRPlaybackSessionResponseMessage"8@"NSError"16
kMRMediaRemoteNowPlayingPlaybackQueueDidChangeNotification
kMRMediaRemoteNowPlayingInfoArtworkDataWidth
kMRMediaRemoteNowPlayingInfoArtworkDataHeight
v16@?0^v8
v24@?0^{__CFDictionary=}8^v16
fm.overcast.overcast
Update
Replace
image/jpeg
%@-callback
%@-serial
getClusterLeaderEndpoint
Discovering cluster leader with UID: %@
Discover cluster leader endpoint
Discovered leader endpoint: %@
Failed to discover cluster leader endpoint with UID: %@
canBeClusterMember
clusterStatus
T@"NSString",R,N,V_identifier
publicKey
T@"NSData",R,N,V_publicKey
privateKey
T@"NSData",R,N,V_privateKey
PQso
PQri
MRSystemAppPlaybackQueueDestroy
/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-4018.100.117/MediaRemote/Framework/RemoteControl/MRRemotePlaybackQueue.m
queryData: %p, shuffleMode: %@, repeatMode: %@
stationID: %lld
stationStringID: %@
shuffleMode: %@, trackIDs: %@
seedTrack: %@
identifier: %@ data: <%ld>
Empty Queue
<MRSystemAppPlaybackQueue %p, type: %@, %@>
MRSystemAppPlaybackQueueGetType
MRSystemAppPlaybackQueueIsRequestingImmediatePlayback
MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback
MRSystemAppPlaybackQueueGetSiriRecommendationIdentifier
MRSystemAppPlaybackQueueSetSiriRecommendationIdentifier
MRSystemAppPlaybackQueueGetSiriAssetInfo
MRSystemAppPlaybackQueueSetSiriAssetInfo
MRSystemAppPlaybackQueueCopyFeatureName
MRSystemAppPlaybackQueueSetFeatureName
MRSystemAppPlaybackQueueGetSiriWHAMetricsInfo
MRSystemAppPlaybackQueueSetSiriWHAMetricsInfo
MRSystemAppPlaybackQueueGetReplaceIntent
MRSystemAppPlaybackQueueSetReplaceIntent
MRSystemAppPlaybackQueueGetUserInfo
MRSystemAppPlaybackQueueSetUserInfo
MRSystemAppPlaybackQueueGetLocalQueryData
queue->type == MRSystemAppPlaybackQueueTypeLocalMediaQuery
MRSystemAppPlaybackQueueSetLocalQueryData
MRSystemAppPlaybackQueueGetLocalQueryFirstItemMultiverseIDData
MRSystemAppPlaybackQueueSetLocalQueryFirstItemMultiverseIDData
MRSystemAppPlaybackQueueGetLocalQueryFirstItemPID
MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID
MRSystemAppPlaybackQueueGetLocalQueryShuffleMode
MRSystemAppPlaybackQueueSetLocalQueryShuffleMode
MRSystemAppPlaybackQueueGetLocalQueryRepeatMode
MRSystemAppPlaybackQueueSetLocalQueryRepeatMode
MRSystemAppPlaybackQueueSetRadioStationIDType
queue->type == MRSystemAppPlaybackQueueTypeRadioStation
MRSystemAppPlaybackQueueGetRadioStationIntegerPID
MRSystemAppPlaybackQueueSetRadioStationIntegerPID
queue->radioStationQueue.stationIDType == MRSystemAppRadioStationIDTypeIntegerPID
MRSystemAppPlaybackQueueSetRadioStationStringIdentifier
queue->radioStationQueue.stationIDType == MRSystemAppRadioStationIDTypeStationStringID
MRSystemAppPlaybackQueueCopyGenericTrackIdentifiers
_MRSystemAppPlaybackQueueTypeIsTracklistType(queue->type)
MRSystemAppPlaybackQueueSetGenericTrackIdentifiers
MRSystemAppPlaybackQueueGetFirstItemGenericTrackIdentifier
MRSystemAppPlaybackQueueSetFirstItemGenericTrackIdentifier
MRSystemAppPlaybackQueueGetTracklistShuffleMode
MRSystemAppPlaybackQueueSetTracklistShuffleMode
MRSystemAppPlaybackQueueGetTracklistRepeatMode
MRSystemAppPlaybackQueueSetTracklistRepeatMode
MRSystemAppPlaybackQueueGetTracklistCollectionIdentifierSetData
MRSystemAppPlaybackQueueSetTracklistCollectionIdentifierSetData
MRSystemAppPlaybackQueueCopyGeniusSeedTrack
queue->type == MRSystemAppPlaybackQueueTypeGenius
MRSystemAppPlaybackQueueSetGeniusSeedTrack
MRSystemAppPlaybackQueueCopyCustomDataIdentifier
queue->type == MRSystemAppPlaybackQueueTypeCustom
MRSystemAppPlaybackQueueSetCustomDataIdentifier
MRSystemAppPlaybackQueueCopyCustomData
MRSystemAppPlaybackQueueSetCustomData
head
tail
last
specified
PQty
PQip
PQui
PQsr
PQai
PQfn
PQwm
PQqd
PQmv
PQfi
PQsm
PQrm
PQsy
PQsi
PQss
PQst
PQfg
PQts
PQtr
PQis
PQgs
PQci
PQcd
bplist
LocalMediaQuery
RadioStation
iTunesStoreTracklist
GenericTracklist
Genius
Empty
<%@ %p %u, recordingState=%@, descriptor=%@>
TI,R,N,V_deviceID
T@"MRVirtualVoiceInputDeviceDescriptor",C,N,V_descriptor
recordingState
TI,N,V_recordingState
jpegData
hasJpegData
T@"NSData",&,N,V_jpegData
-[MRXPCConnection initWithConnection:queue:]
MRXPCConnection.m
com.apple.mediaremote.MRXPCConnection
-[MRXPCConnection addCustomXPCHandler:forKey:]_block_invoke
A custom xpc handler already exists with key %llu
Connection interrupted with error=%@
Connection invalid with error=%@
T@"NSObject<OS_xpc_object>",R,N,V_connection
messageHandler
T@?,C,N,V_messageHandler
invalidationHandler
T@?,C,N,V_invalidationHandler
MRAudioDataBlock.m
invalid buffer size for decoding voice input message (%lu > (%lu * %lu))
packet descriptions exceed maximum packet capacity (%lu > %lu)
T@"MRAudioBuffer",R,N,V_buffer
T{?=dd},R,N,V_time
Tf,R,N,V_gain
T@"_MRAudioDataBlockProtobuf",R,N
T@"MRAudioBuffer",&,D,N
T{?=dd},D,N
Tf,D,N
v24@?0@"MRCryptoPairingSession"8@"NSString"16
v16@?0@"MRCryptoPairingSession"8
pairingSession
T@"MRCoreUtilsPairingSession",&,N,V_pairingSession
pairingDelegate
T@"MRCryptoPairingSessionBlockDelegate",&,N,V_pairingDelegate
TB,R,N,GisUsingSystemPairing
com.apple.MediaRemote
com.apple.MediaRemote.MRMediaRemoteServiceClient
com.apple.MediaRemote.PlaybackQueue.serialQueue
B16@?0^v8
activePlayerPath = %@
registeredOrigins = %@
playerPathInvalidationHandlers = %@
-[MRMediaRemoteServiceClient registerOrigin:withDeviceInfo:completion:]
MRMediaRemoteServiceClient.m
v32@?0@"MROrigin"8Q16^B24
v16@?0q8
v24@?0@"MRNowPlayingPlayerPathInvalidationHandler"8^B16
-[MRMediaRemoteServiceClient _callInvalidationHandler:]
ExternalDeviceCache{
service
T@"MRMediaRemoteService",R,N,V_service
notificationClient
T@"MRNotificationClient",R,N,V_notificationClient
registeredOrigins
T@"NSObject<OS_dispatch_queue>",R,N
playbackQueueDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_playbackQueueDispatchQueue
activePlayerPath
T@"MRPlayerPath",&,N
void _MRServiceClientTransactionCallback(MRNowPlayingPlayerPathRef, MRTransactionName, __strong xpc_object_t)
playerClient
userData
hasUserData
T@"NSData",&,N,V_userData
com.apple.mediaremote.distantEndpoint/externalDeviceQueue
externalDeviceListenerEndpoint
externalDeviceQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_externalDeviceQueue
T@"NSArray",C,N,V_distantOutputDevices
distantPersonalOutputDevices
T@"NSArray",C,N,V_distantPersonalOutputDevices
distantGroupLeader
T@"MRAVDistantOutputDevice",&,N,V_distantGroupLeader
distantExternalDevice
T@"MRDistantExternalDevice",&,N,V_distantExternalDevice
T@"NSXPCListenerEndpoint",&,N,V_externalDeviceListenerEndpoint
hasHiliteMode
TB,N,V_hiliteMode
preferredInterval
supportedRate
supportedCustomQueueIdentifier
supportedInsertionPositions
supportedPlaybackSessionTypes
currentPlaybackSessionTypes
playbackSessionIdentifier
currentQueueEndAction
supportedQueueEndActions
disabledReason
hasEnabled
TB,N,V_enabled
hasActive
TB,N,V_active
preferredIntervalsCount
hasLocalizedTitle
T@"NSString",&,N,V_localizedTitle
hasLocalizedShortTitle
T@"NSString",&,N,V_localizedShortTitle
hasMinimumRating
Tf,N,V_minimumRating
hasMaximumRating
Tf,N,V_maximumRating
supportedRatesCount
T^f,R,N
hasPresentationStyle
Ti,N,V_presentationStyle
hasSkipInterval
Ti,N,V_skipInterval
hasNumAvailableSkips
Ti,N,V_numAvailableSkips
hasSkipFrequency
Ti,N,V_skipFrequency
hasCanScrub
Ti,N,V_canScrub
supportedPlaybackQueueTypesCount
supportedCustomQueueIdentifiers
T@"NSMutableArray",&,N,V_supportedCustomQueueIdentifiers
supportedInsertionPositionsCount
hasUpNextItemCount
Ti,N,V_upNextItemCount
hasPreferredPlaybackRate
Tf,N,V_preferredPlaybackRate
T@"NSMutableArray",&,N,V_supportedPlaybackSessionTypes
T@"NSMutableArray",&,N,V_currentPlaybackSessionTypes
hasPlaybackSessionIdentifier
T@"NSString",&,N,V_playbackSessionIdentifier
hasCurrentQueueEndAction
Ti,N,V_currentQueueEndAction
supportedQueueEndActionsCount
hasDisabledReason
Ti,N,V_disabledReason
Reset
AutoPlay
AdPlayback
usagePage
usage
buttonDown
hasUsagePage
TI,N,V_usagePage
hasUsage
TI,N,V_usage
hasButtonDown
TB,N,V_buttonDown
Command options do not have requried source position parameters to perform command
Command options do not have requried destination position parameters to perform command
Sender specified %@ = %@ which is no longer the now playing item.
Sender specified %@ = %@. Now Playing Item = %@. Ignoring command
Sender specified %@ option and command is not supported. Ignoring command
airtunesd
tvairplayd
com.apple.mediaremote.playbackImminentOnStereoPair
com.apple.mediaremote.playbackImminent
originCommand
com.apple.MediaRemote.serviceClientRemoteCommandOriginCallback.%@.%@
void _MRServiceClientOriginCommandCallback(MRPlayerPath *__strong, MRMediaRemoteCommand, NSDictionary *__strong, __strong MRMediaRemotePlayerPathCommandHandlerBlock, void (^__strong)(MRSendCommandError, NSArray *__strong))_block_invoke
MRCommandServiceClient.m
Completion was not called for commandHandler=%@<%@>
playerCommand
void _MRServiceClientRemoteResolvedPlayerPathCommandCallback(MRMediaRemoteCommand, NSDictionary *__strong, MRPlayerPath *__strong, __strong MRMediaRemoteAsyncCommandHandlerBlock, void (^__strong)(NSArray *__strong))_block_invoke
com.apple.MediaRemote.serviceClientRemotePlayerPathCommandCallback.%@.%@
Resolved client from %@ to %@ 
Resolved player from %@ to %@
Resolved command from %@ to %@
Resolved command options to %@
Got %@ for %@
@"NSArray"16@?0@"NSArray"8
strings
deviceInfoDeprecated
hasDeviceInfoDeprecated
T@"_MRDeviceInfoMessageProtobuf",&,N,V_deviceInfoDeprecated
attributes
encryptedTextCyphertext
hasAttributes
T@"_MRTextEditingAttributesProtobuf",&,N,V_attributes
hasEncryptedTextCyphertext
T@"NSData",&,N,V_encryptedTextCyphertext
NotEditing
DidBeginEditing
Editing
TextDidChange
DidEndEditing
Response
T@"NSString",&,N,V_type
hasPlaybackSessionData
T@"NSData",&,N,V_playbackSessionData
<MRColor:%p red = %f, green = %f, blue = %f, alpha = %f>
T@"MRPlaybackQueueRequest",R,N
macAddress
isRemoteControllable
isGroupLeader
isGroupable
deviceSubType
modelSpecificInfoData
isLocalDevice
shouldForceRemoteControlabillity
isDeviceGroupable
isVolumeControlAvailable
isAirPlayReceiverSessionActive
hasGroupID
T@"NSString",&,N,V_groupID
hasModelID
T@"NSString",&,N,V_modelID
hasMacAddress
T@"NSData",&,N,V_macAddress
hasCanAccessRemoteAssets
TB,N,V_canAccessRemoteAssets
hasIsRemoteControllable
TB,N,V_isRemoteControllable
hasIsGroupLeader
TB,N,V_isGroupLeader
hasIsGroupable
TB,N,V_isGroupable
hasDeviceType
Ti,N,V_deviceType
hasDeviceSubType
Ti,N,V_deviceSubType
hasModelSpecificInfoData
T@"NSData",&,N,V_modelSpecificInfoData
Tf,N,V_batteryLevel
hasIsLocalDevice
TB,N,V_isLocalDevice
hasSupportsExternalScreen
TB,N,V_supportsExternalScreen
hasRequiresAuthorization
TB,N,V_requiresAuthorization
hasShouldForceRemoteControlabillity
TB,N,V_shouldForceRemoteControlabillity
hasSourceInfo
T@"_MRAVOutputDeviceSourceInfoProtobuf",&,N,V_sourceInfo
hasIsDeviceGroupable
TB,N,V_isDeviceGroupable
hasCanRelayCommunicationChannel
TB,N,V_canRelayCommunicationChannel
hasLogicalDeviceID
T@"NSString",&,N,V_logicalDeviceID
hasFirmwareVersion
T@"NSString",&,N,V_firmwareVersion
hasIsVolumeControlAvailable
TB,N,V_isVolumeControlAvailable
hasCanAccessAppleMusic
TB,N,V_canAccessAppleMusic
hasCanAccessiCloudMusicLibrary
TB,N,V_canAccessiCloudMusicLibrary
hasGroupContainsGroupLeader
TB,N,V_groupContainsGroupLeader
hasSupportsBufferedAirPlay
TB,N,V_supportsBufferedAirPlay
hasCanPlayEncryptedProgressiveDownloadAssets
TB,N,V_canPlayEncryptedProgressiveDownloadAssets
hasCanFetchMediaDataFromSender
TB,N,V_canFetchMediaDataFromSender
hasPresentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
TB,N,V_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
hasIsAirPlayReceiverSessionActive
TB,N,V_isAirPlayReceiverSessionActive
hasParentGroupIdentifier
T@"NSString",&,N,V_parentGroupIdentifier
hasParentGroupContainsDiscoverableLeader
TB,N,V_parentGroupContainsDiscoverableLeader
hasIsAddedToHomeKit
TB,N,V_isAddedToHomeKit
hasBluetoothID
T@"NSString",&,N,V_bluetoothID
hasSupportsHAP
TB,N,V_supportsHAP
hasUsingJSONProtocol
TB,N,V_usingJSONProtocol
clusterCompositions
T@"NSMutableArray",&,N,V_clusterCompositions
AirPlay
Bluetooth
CarPlay
BuiltIn
Wired
Speaker
Headphones
Headset
Receiver
LineOut
DisplayPort
HDMI
LowEnergy
SPDIF
HomePod
AppleTV
Vehicle
Cluster
SetTopBox
TVStick
authenticationToken
sendCommandMessage
sendCommandResultMessage
getStateMessage
setStateMessage
setArtworkMessage
registerHIDDeviceMessage
registerHIDDeviceResultMessage
sendHIDEventMessage
sendHIDReportMessage
sendVirtualTouchEventMessage
notificationMessage
contentItemsChangedNotificationMessage
deviceInfoMessage
clientUpdatesConfigMessage
masterVolumeControlCapabilitiesDidChangeMessage
gameController
registerGameController
registerGameControllerResponse
unregisterGameController
registerForGameControllerEvents
keyboardMessage
getKeyboardMessage
textInputMessage
getVoiceInputDevicesMessage
getVoiceInputDevicesResponseMessage
registerVoiceInputDeviceMessage
registerVoiceInputDeviceResponseMessage
setRecordingStateMessage
sendVoiceInputMessage
playbackQueueRequest
transactionPackets
cryptoPairingMessage
gameControllerProperties
readyStateMessage
sendButtonEventMessage
setHiliteModeMessage
wakeDeviceMessage
genericMessage
sendPackedVirtualTouchEventMessage
sendLyricsEventMessage
setNowPlayingClientMessage
setNowPlayingPlayerMessage
modifyOutputContextRequestMessage
getVolumeMessage
getVolumeResultMessage
setVolumeMessage
volumeDidChangeMessage
removeClientMessage
removePlayerMessage
updateClientMessage
updateContentItemMessage
updateContentItemArtworkMessage
updatePlayerMessage
promptForRouteAuthorizationMessage
promptForRouteAuthorizationResponseMessage
presentRouteAuthorizationStatusMessage
getVolumeControlCapabilitiesMessage
getVolumeControlCapabilitiesResultMessage
volumeControlCapabilitiesDidChangeMessage
updateOutputDevicesMessage
removeOutputDevicesMessage
remoteTextInputMessage
getRemoteTextInputSessionMessage
playbackSessionRequestMessage
playbackSessionResponseMessage
setDefaultSupportedCommandsMessage
playbackSessionMigrateRequestMessage
playbackSessionMigrateResponseMessage
errorDescription
playbackSessionMigrateBeginMessage
playbackSessionMigrateEndMessage
updateActiveSystemEndpointMessage
discoveryModeMessage
updateEndpointsMessage
removeEndpointsMessage
playerClientPropertiesMessage
originClientPropertiesMessage
hasAuthenticationToken
T@"NSString",&,N,V_authenticationToken
hasErrorCode
TI,N,V_errorCode
hasSendCommandMessage
T@"_MRSendCommandMessageProtobuf",&,N,V_sendCommandMessage
hasSendCommandResultMessage
T@"_MRSendCommandResultMessageProtobuf",&,N,V_sendCommandResultMessage
hasGetStateMessage
T@"_MRGetStateMessageProtobuf",&,N,V_getStateMessage
hasSetStateMessage
T@"_MRSetStateMessageProtobuf",&,N,V_setStateMessage
hasSetArtworkMessage
T@"_MRSetArtworkMessageProtobuf",&,N,V_setArtworkMessage
hasRegisterHIDDeviceMessage
T@"_MRRegisterHIDDeviceMessageProtobuf",&,N,V_registerHIDDeviceMessage
hasRegisterHIDDeviceResultMessage
T@"_MRRegisterHIDDeviceResultMessageProtobuf",&,N,V_registerHIDDeviceResultMessage
hasSendHIDEventMessage
T@"_MRSendHIDEventMessageProtobuf",&,N,V_sendHIDEventMessage
hasSendHIDReportMessage
T@"_MRSendHIDReportMessageProtobuf",&,N,V_sendHIDReportMessage
hasSendVirtualTouchEventMessage
T@"_MRSendVirtualTouchEventMessageProtobuf",&,N,V_sendVirtualTouchEventMessage
hasNotificationMessage
T@"_MRNotificationMessageProtobuf",&,N,V_notificationMessage
hasContentItemsChangedNotificationMessage
T@"_MRPlaybackQueueProtobuf",&,N,V_contentItemsChangedNotificationMessage
hasDeviceInfoMessage
T@"_MRDeviceInfoMessageProtobuf",&,N,V_deviceInfoMessage
hasClientUpdatesConfigMessage
T@"_MRClientUpdatesConfigurationProtobuf",&,N,V_clientUpdatesConfigMessage
hasMasterVolumeControlCapabilitiesDidChangeMessage
T@"_MRVolumeControlAvailabilityProtobuf",&,N,V_masterVolumeControlCapabilitiesDidChangeMessage
hasGameController
T@"_MRGameControllerMessageProtobuf",&,N,V_gameController
hasRegisterGameController
T@"_MRRegisterGameControllerMessageProtobuf",&,N,V_registerGameController
hasRegisterGameControllerResponse
T@"_MRRegisterGameControllerResponseMessageProtobuf",&,N,V_registerGameControllerResponse
hasUnregisterGameController
T@"_MRUnregisterGameControllerMessageProtobuf",&,N,V_unregisterGameController
hasRegisterForGameControllerEvents
T@"_MRRegisterForGameControllerEventsMessageProtobuf",&,N,V_registerForGameControllerEvents
hasKeyboardMessage
T@"_MRKeyboardMessageProtobuf",&,N,V_keyboardMessage
hasGetKeyboardMessage
T@"_MRGetKeyboardSessionProtobuf",&,N,V_getKeyboardMessage
hasTextInputMessage
T@"_MRTextInputMessageProtobuf",&,N,V_textInputMessage
hasGetVoiceInputDevicesMessage
T@"_MRGetVoiceInputDevicesMessageProtobuf",&,N,V_getVoiceInputDevicesMessage
hasGetVoiceInputDevicesResponseMessage
T@"_MRGetVoiceInputDevicesResponseMessageProtobuf",&,N,V_getVoiceInputDevicesResponseMessage
hasRegisterVoiceInputDeviceMessage
T@"_MRRegisterVoiceInputDeviceMessageProtobuf",&,N,V_registerVoiceInputDeviceMessage
hasRegisterVoiceInputDeviceResponseMessage
T@"_MRRegisterVoiceInputDeviceResponseMessageProtobuf",&,N,V_registerVoiceInputDeviceResponseMessage
hasSetRecordingStateMessage
T@"_MRSetRecordingStateMessageProtobuf",&,N,V_setRecordingStateMessage
hasSendVoiceInputMessage
T@"_MRSendVoiceInputMessageProtobuf",&,N,V_sendVoiceInputMessage
hasPlaybackQueueRequest
T@"_MRPlaybackQueueRequestProtobuf",&,N,V_playbackQueueRequest
hasTransactionPackets
T@"_MRTransactionMessageProtobuf",&,N,V_transactionPackets
hasCryptoPairingMessage
T@"_MRCryptoPairingMessageProtobuf",&,N,V_cryptoPairingMessage
hasGameControllerProperties
T@"_MRGameControllerPropertiesMessageProtobuf",&,N,V_gameControllerProperties
hasReadyStateMessage
T@"_MRSetReadyStateMessageProtobuf",&,N,V_readyStateMessage
hasConnectionState
T@"_MRSetConnectionStateMessageProtobuf",&,N,V_connectionState
hasSendButtonEventMessage
T@"_MRSendButtonEventMessageProtobuf",&,N,V_sendButtonEventMessage
hasSetHiliteModeMessage
T@"_MRSetHiliteModeMessageProtobuf",&,N,V_setHiliteModeMessage
hasWakeDeviceMessage
T@"_MRWakeDeviceMessageProtobuf",&,N,V_wakeDeviceMessage
hasGenericMessage
T@"_MRGenericMessageProtobuf",&,N,V_genericMessage
hasSendPackedVirtualTouchEventMessage
T@"_MRSendPackedVirtualTouchEventMessageProtobuf",&,N,V_sendPackedVirtualTouchEventMessage
hasSendLyricsEventMessage
T@"_MRSendLyricsEventMessageProtobuf",&,N,V_sendLyricsEventMessage
hasSetNowPlayingClientMessage
T@"_MRSetNowPlayingClientMessageProtobuf",&,N,V_setNowPlayingClientMessage
hasSetNowPlayingPlayerMessage
T@"_MRSetNowPlayingPlayerMessageProtobuf",&,N,V_setNowPlayingPlayerMessage
hasModifyOutputContextRequestMessage
T@"_MRAVModifyOutputContextRequestProtobuf",&,N,V_modifyOutputContextRequestMessage
hasGetVolumeMessage
T@"_MRGetVolumeMessageProtobuf",&,N,V_getVolumeMessage
hasGetVolumeResultMessage
T@"_MRGetVolumeResultMessageProtobuf",&,N,V_getVolumeResultMessage
hasSetVolumeMessage
T@"_MRSetVolumeMessageProtobuf",&,N,V_setVolumeMessage
hasVolumeDidChangeMessage
T@"_MRVolumeDidChangeMessageProtobuf",&,N,V_volumeDidChangeMessage
hasRemoveClientMessage
T@"_MRRemoveClientMessageProtobuf",&,N,V_removeClientMessage
hasRemovePlayerMessage
T@"_MRRemovePlayerMessageProtobuf",&,N,V_removePlayerMessage
hasUpdateClientMessage
T@"_MRUpdateClientMessageProtobuf",&,N,V_updateClientMessage
hasUpdateContentItemMessage
T@"_MRUpdateContentItemMessageProtobuf",&,N,V_updateContentItemMessage
hasUpdateContentItemArtworkMessage
T@"_MRUpdateContentItemArtworkMessageProtobuf",&,N,V_updateContentItemArtworkMessage
hasUpdatePlayerMessage
T@"_MRUpdatePlayerMessageProtobuf",&,N,V_updatePlayerMessage
hasPromptForRouteAuthorizationMessage
T@"_MRPromptForRouteAuthorizationMessageProtobuf",&,N,V_promptForRouteAuthorizationMessage
hasPromptForRouteAuthorizationResponseMessage
T@"_MRPromptForRouteAuthorizationResponseMessageProtobuf",&,N,V_promptForRouteAuthorizationResponseMessage
hasPresentRouteAuthorizationStatusMessage
T@"_MRPresentRouteAuthorizationStatusMessageProtobuf",&,N,V_presentRouteAuthorizationStatusMessage
hasGetVolumeControlCapabilitiesMessage
T@"_MRGetVolumeControlCapabilitiesMessageProtobuf",&,N,V_getVolumeControlCapabilitiesMessage
hasGetVolumeControlCapabilitiesResultMessage
T@"_MRGetVolumeControlCapabilitiesResultMessageProtobuf",&,N,V_getVolumeControlCapabilitiesResultMessage
hasVolumeControlCapabilitiesDidChangeMessage
T@"_MRVolumeControlCapabilitiesDidChangeMessageProtobuf",&,N,V_volumeControlCapabilitiesDidChangeMessage
hasUpdateOutputDevicesMessage
T@"_MRUpdateOutputDevicesMessageProtobuf",&,N,V_updateOutputDevicesMessage
hasRemoveOutputDevicesMessage
T@"_MRRemoveOutputDevicesMessageProtobuf",&,N,V_removeOutputDevicesMessage
hasRemoteTextInputMessage
T@"_MRRemoteTextInputMessageProtobuf",&,N,V_remoteTextInputMessage
hasGetRemoteTextInputSessionMessage
T@"_MRGetRemoteTextInputSessionProtobuf",&,N,V_getRemoteTextInputSessionMessage
hasPlaybackSessionRequestMessage
T@"_MRPlaybackSessionRequestMessageProtobuf",&,N,V_playbackSessionRequestMessage
hasPlaybackSessionResponseMessage
T@"_MRPlaybackSessionResponseMessageProtobuf",&,N,V_playbackSessionResponseMessage
hasSetDefaultSupportedCommandsMessage
T@"_MRSetStateMessageProtobuf",&,N,V_setDefaultSupportedCommandsMessage
hasPlaybackSessionMigrateRequestMessage
T@"_MRPlaybackSessionMigrateRequestMessageProtobuf",&,N,V_playbackSessionMigrateRequestMessage
hasPlaybackSessionMigrateResponseMessage
T@"_MRPlaybackSessionMigrateResponseMessageProtobuf",&,N,V_playbackSessionMigrateResponseMessage
hasErrorDescription
T@"NSString",&,N,V_errorDescription
hasPlaybackSessionMigrateBeginMessage
T@"_MRPlaybackSessionMigrateBeginMessageProtobuf",&,N,V_playbackSessionMigrateBeginMessage
hasPlaybackSessionMigrateEndMessage
T@"_MRPlaybackSessionMigrateEndMessageProtobuf",&,N,V_playbackSessionMigrateEndMessage
hasUpdateActiveSystemEndpointMessage
T@"_MRUpdateActiveSystemEndpointMessageProtobuf",&,N,V_updateActiveSystemEndpointMessage
hasDiscoveryModeMessage
T@"_MRSetDiscoveryModeProtobufMessage",&,N,V_discoveryModeMessage
hasUpdateEndpointsMessage
T@"_MRUpdateEndpointsMessageProtobuf",&,N,V_updateEndpointsMessage
hasRemoveEndpointsMessage
T@"_MRRemoveEndpointsMessageProtobuf",&,N,V_removeEndpointsMessage
hasPlayerClientPropertiesMessage
T@"_MRPlayerClientPropertiesMessageProtobuf",&,N,V_playerClientPropertiesMessage
hasOriginClientPropertiesMessage
T@"_MROriginClientPropertiesMessageProtobuf",&,N,V_originClientPropertiesMessage
hasDescriptor
T@"_MRVoiceInputDeviceDescriptorProtobuf",&,N,V_descriptor
phase
finger
hasPhase
Ti,N,V_phase
hasFinger
Ti,N,V_finger
Began
Moved
Stationary
Ended
Cancelled
%@/%@/%@
T@"_MRPlaybackSessionRequestProtobuf",R,N
T@"NSString",C,N,V_requestIdentifier
TQ,N,V_location
TB,N,V_hasLocation
TQ,N,V_length
TB,N,V_hasLength
range
T{_NSRange=QQ},R,N
processIdentifier
parentApplicationBundleIdentifier
processUserIdentifier
nowPlayingVisibility
tintColor
extendedBundleIdentifierHierarchy
isEmptyDeprecated
iconURL
hasProcessIdentifier
Ti,N,V_processIdentifier
hasBundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
hasParentApplicationBundleIdentifier
T@"NSString",&,N,V_parentApplicationBundleIdentifier
hasProcessUserIdentifier
Ti,N,V_processUserIdentifier
hasNowPlayingVisibility
Ti,N,V_nowPlayingVisibility
hasTintColor
T@"_MRColorProtobuf",&,N,V_tintColor
extendedBundleIdentifierHierarchys
T@"NSMutableArray",&,N,V_extendedBundleIdentifierHierarchys
hasIsEmptyDeprecated
TB,N,V_isEmptyDeprecated
hasIconURL
T@"NSString",&,N,V_iconURL
com.apple.MediaRemote.MRNotificationClient.serialQueue
com.apple.MediaRemote.MRNotificationClient.notificationQueue
com.apple.MediaRemote.MRNotificationClient/nowPlayingNotifications
v32@?0@"NSString"8@"NSDictionary"16@24
notificationQueue
registeredForNowPlayingNotifications
TB,R,N,GisRegisteredForNowPlayingNotifications
receivesExternalScreenTypeChangedNotifications
TB,N,V_receivesExternalScreenTypeChangedNotifications
receivesSupportedCommandsNotifications
TB,N,V_receivesSupportedCommandsNotifications
receivesRoutesChangedNotifications
TB,N,V_receivesRoutesChangedNotifications
receivesVolumeControlNotifications
TB,N,V_receivesVolumeControlNotifications
receivesOriginChangedNotifications
TB,N,V_receivesOriginChangedNotifications
receivesPlaybackErrorNotifications
TB,N,V_receivesPlaybackErrorNotifications
receivesVoiceInputRecordingStateNotifications
TB,N,V_receivesVoiceInputRecordingStateNotifications
notification
T@"NSString",R,N,V_notification
T@"NSDictionary",R,N,V_userInfo
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
xpcMessage
T@"NSObject<OS_xpc_object>",&,N,V_xpcMessage
MRExternalDeviceIncludePeerToPeer
MRExternalDeviceUseNoDelayOptionForExternalDeviceSockets
MRExternalDeviceSocketsQOSLevel
kMRSettingsExternalDeviceTimeoutSecondsDurationDefaultsKey
kMRSettingsExternalDeviceNowPlayingInfoCoalesceDurationDefaultsKey
kMRSettingsExternalDeviceNowPlayingInfoArtworkCoalesceDurationDefaultsKey
kMRSettingsExternalDeviceDisconnectWaitDurationDefaultsKey
kMRSettingsExternalDeviceDisconnectSleepDurationDefaultsKey
kMRSettingsExternalDeviceSleepAssertionOnClientConnectDurationDefaultsKey
kMRSettingsBluetoothDeviceResumeDurationDefaultsKey
kMRSettingsBroadcastCommandWaitDurationDefaultsKey
AirPlayContextInitTimeoutDuration_v2
kMRSettingsExternalDeviceSystemPairingDefaultsKey
UseDebugAVRouteWithoutVolumeControl
kMRSettingsMaxTransactionSizeDefaultsKey
kMRSettingsWaitDurationOnOutOfMemoryDefaultsKey
kMRSettingsWaitDurationOnNetworkSendDefaultsKey
kMRSettingsWaitDurationOnXpcSendDefaultsKey
ShouldInitializeTVBonjourService
ShouldInitializeGenericBonjourService
UseSystemAudioContextForAirPlayTransport
UseGenericTransportForHostedEndpoints
ShouldInitializeRapportService
LogPairingSetupCode
LogArtwork
ConnectedClientAuditTokens
ExpectedClientAuditTokens
ConnectedClientPIDs
ExpectedClientPIDs
TVExperience
JSONClientUIDs
com.apple.mediaremote
verboseProtocolMessageLogging
queuedCommandsTimeoutInterval
NowPlayingApplicationTimeout
DeviceClassNumber
ConnectToEndpointWhenBeginsPlayback
ConnectToAllEndpointsWhenAnyEndpointBeginsPlayback
ConnectToUserSelectedEndpoint
DiscoverEndpointTimeoutInterval
DeviceRecentlyUsedInterval
MediaRecentlyPlayedInterval
EndpointRecentlyUserSelectedInterval
LaunchApplicationTimeoutInterval
RemoteControlDiscoveryBlacklist
@16@?0@"NSString"8
RemoteControlDiscoveryWhitelist
proximity_handoff
handoff
SupportLastPlayingDevice
SendLastPlayingDeviceToHome
LastPlayingDeviceThresholdInterval
SendPlaybackSessionUpdateToCompanionCoalesceInterval
ConnectToAllEndpointsWhenInProximityToAnyDevice
DefaultSupportedCommands
ActiveSystemEndpointStartupDelayInterval
LocalPlaybackState
LastPlayingDate
LastBootUUID
nano_link_agent
Home
cce7c4ecef404121ae8971
usePeerToPeerExternalDeviceConnections
useNoDelayOptionForExternalDeviceSockets
useDebugAVRouteWithoutVolumeControl
useAPSyncAPI
useOutputDeviceTransport
useClusterDevices
shouldInitializeTelevisionBonjourService
shouldInitializeGenericBonjourService
shouldInitializeRapportService
shouldLogPairingSetupCode
shouldLogArtwork
shouldWakeDeviceForRemoteControlCommands
hasExternalDeviceSocketQOSLevelSet
externalDeviceSocketQOSLevel
externalDevicePairingAllowed
TB,N,GisExternalDevicePairingAllowed,V_externalDevicePairingAllowed
externalDeviceTimeoutDuration
externalDeviceNowPlayingInfoCoalesceDuration
externalDeviceNowPlayingInfoArtworkCoalesceDuration
externalDeviceDisconnectWaitDuration
externalDeviceDisconnectSleepDuration
externalDeviceSleepAssertionOnClientConnectDuration
bluetoothDeviceResumeDuration
broadcastCommandWaitDuration
airPlayOutputContextInitTimeoutDuration
useExternalDeviceSystemPairing
maxTransactionMemorySize
transactionWaitDurationOnOutOfMemory
transactionWaitDurationOnXpcSend
transactionWaitDurationOnNetworkSend
useSystemAudioContextForAirPlayTransport
useGenericTransportForHostedEndpoints
connectedClientAuditTokens
expectedClientAuditTokens
computeNowPlayingApplication
nowPlayingApplicationTimeout
takelockScreenAssertion
useProactiveEndpoint
connectToEndpointWhenBeginsPlayback
connectToAllEndpointsWhenAnyEndpointBeginsPlayback
connectToUserSelectedEndpoint
discoverEndpointTimeoutInterval
needNowPlayingForegroundState
deviceRecentlyUsedInterval
mediaRecentlyPlayedInterval
endpointRecentlyUserSelectedInterval
launchApplicationTimeoutInterval
supportProximityMigration
supportMigration
supportLastPlayingDevice
sendLastPlayingDeviceToHome
connectToAllEndpointsWhenInProximityToAnyDevice
lastPlayingDeviceThresholdInterval
sendPlaybackSessionUpdateToCompanionCoalesceInterval
activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval
supportNanoLinkAgent
jsonClientUIDs
lastBootUUID
remoteControlDiscoveryBlacklist
remoteControlDiscoveryWhitelist
Async 
/A%lfx%lf
/R[%ld:%ld]
/IDs (%ld): %@
legacyNowPlayingInfoRequest
TB,N,GisLegacyNowPlayingInfoRequest,V_legacyNowPlayingInfoRequest
hasLegacyNowPlayingInfoRequest
TB,N,V_hasLegacyNowPlayingInfoRequest
TI,N,V_cachingPolicy
TB,N,V_hasCachingPolicy
T@"_MRPlaybackQueueRequestProtobuf",R,N
Tq,N,V_location
Tq,N,V_length
TB,N,V_hasIncludeMetadata
TB,N,V_hasArtworkWidth
TB,N,V_hasArtworkHeight
TB,N,V_hasIncludeLyrics
TB,N,V_hasIncludeSections
TB,N,V_hasIncludeInfo
TB,N,V_hasIncludeLanguageOptions
TB,N,V_hasReturnContentItemAssetsInUserCompletion
T@"NSString",C,N,V_label
T@"NSArray",C,N,V_contentItemIdentifiers
rangeContainsNowPlayingItem
shouldRequestItem
shouldRequestItemNotConsideringMetadata
containsNonDefaultAssets
hasRange
includeArtwork
kMRNowPlayingPlaybackQueueChangedNotification
kMROriginNowPlayingPlaybackQueueChangedNotification
kMRPlayerPlaybackQueueChangedNotification
_kMRNowPlayingPlaybackQueueChangedNotification
kMRPlaybackQueueContentItemsChangedNotification
kMROriginPlaybackQueueContentItemsChangedNotification
kMRPlayerPlaybackQueueContentItemsChangedNotification
_MRPlayerPlaybackQueueContentItemsChangedNotification
kMRPlaybackQueueContentItemArtworkChangedNotification
kMROriginPlaybackQueueContentItemArtworkChangedNotification
kMRPlayerPlaybackQueueContentItemArtworkChangedNotification
_MRPlayerPlaybackQueueContentItemArtworkChangedNotification
kMRPlaybackQueueCapabilitiesChangedNotification
void _MRRequestPlaybackQueue(MRPlaybackQueueRequestRef, MRNowPlayingPlayerClientRequests *__strong, __strong MRPlaybackQueueRequestCallbackCompletion)
MRPlaybackQueueRequestResponse.m
i_request
clientState
void _MRResolveAndRequestPlaybackQueue(MRPlaybackQueueRequest *__strong, MRPlayerPath *__strong, __strong MRPlaybackQueueRequestCallbackCompletion)
%@-%d
v24@?0Q8^{__CFError=}16
void MRMediaRemoteSetPlaybackQueue(MRNowPlayingPlayerPathRef, MRPlaybackQueueRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
Attempting to set non-range based playbackQueue
securityType
hasPassword
T@"NSString",&,N,V_password
hasSecurityType
Ti,N,V_securityType
NoneForInfraWiFi
PINFirstTime
PINEveryTime
Password
MRAVOutputDeviceTransport.m
avOutputDevice
com.apple.mediaremote.externalDeviceTransport/workerQueue
<%@: %p AVOutputDevice=%@ outputStream:%@ state=%@ connectionType=%@>
T@"AVOutputDevice",R,N,V_avOutputDevice
Uninitialized
InitializingIOStreams
Initialized
playerIndex
vendorName
buttonAUpDelay
profile
hasPlayerIndex
TI,N,V_playerIndex
hasVendorName
T@"NSString",&,N,V_vendorName
hasButtonAUpDelay
Ti,N,V_buttonAUpDelay
hasProfile
Ti,N,V_profile
B239
Extended
-[MRContentItemRequest initWithItem:request:]
MRContentItemRequest.m
item
-[MRContentItemRequest initWithCoder:]
itemData
_item
requestData
_request
<%@:%p {
  request = %@  item = %@}
T@"MRContentItem",&,N,V_item
T@"MRPlaybackQueueRequest",&,N,V_request
startOffset
variableFramesInPacket
dataByteSize
hasStartOffset
Tq,N,V_startOffset
hasVariableFramesInPacket
TI,N,V_variableFramesInPacket
hasDataByteSize
TI,N,V_dataByteSize
_mediaremotetv._tcp.
_mediaremote._tcp.
UniqueIdentifier
ModelName
SystemBuildVersion
AllowPairing
BluetoothAddress
LocalAirPlayReceiverPairingIdentity
MRExternalDeviceController.m
bonjourServiceType
com.apple.TVRemote
T@"<MRExternalDeviceControllerDelegate>",W,N,V_delegate
T@"NSString",R,N,V_bonjourServiceType
discovering
TB,R,N,GisDiscovering,V_discovering
hasPlaybackSession
T@"_MRPlaybackSessionProtobuf",&,N,V_playbackSession
T@"_MRPlaybackSessionMigrateRequestProtobuf",&,N,V_request
MRAVOutputContextTransport.m
<%@: %p outputContext=%@ state=%@ connectionType=%@>
AVOutputContextDestinationChangeCancellationReasonAuthorizationSkipped
(all)
AVOutputContextDeviceGroupControlOptionCancelAddDeviceIfAuthRequired
InProgress
Completed
Failed
InitializingOutputContext
MRExternalDeviceTransportDeviceInfoDidChangeNotification
OldDeviceInfo
NewDeviceInfo
-[MRExternalDeviceTransport deviceInfo]
-[MRExternalDeviceTransport name]
-[MRExternalDeviceTransport hostname]
-[MRExternalDeviceTransport port]
-[MRExternalDeviceTransport shouldUseSystemAuthenticationPrompt]
-[MRExternalDeviceTransport setShouldUseSystemAuthenticationPrompt:]
-[MRExternalDeviceTransport error]
-[MRExternalDeviceTransport getInputStream:outputStream:userInfo:]
-[MRExternalDeviceTransport reset]
hostname
TB,R,N,V_requiresCustomPairing
shouldUseSystemAuthenticationPrompt
Tq,R,N,V_connectionType
hasDeviceIdentifier
TI,N,V_deviceIdentifier
TVRemote
nanomediaremoted
nanomediaremotelinkagent
MRNotificationServiceClient.m
playbackState UserInfoKey not present in notification %@
IsPlaying UserInfoKey not present in notification %@
T@"_MRPlaybackSessionRequestProtobuf",&,N,V_request
Tq,N,V_errorCode
com.apple.mediaremote.queue-handoff
com.apple.mediaremote.connection
com.apple.mediaremote.send-mr-command
com.apple.mediaremote.change-active-system-endpoint
com.apple.mediaremote.disconnection
com.apple.mediaremote.topology-modification
informationalErrorCode
underlyingErrorCode
originator
destination
destinationCount
appBundle
errorStep
queueSize
sendPlaybackSessionThroughput
fallbackStatus
fallbackError
failedPlayingAudio
byPolicy
byMigrateError
connectionFailureReason
isRetry
createIOStreamsDuration
loadDeviceInfoDuration
openSecuritySessionDuration
registerCustomOriginDuration
syncClientStateDuration
allowsAuthenticationPrompt
willAttemptReconnection
retryCount
commandDescription
returnStatuses
isLocalApp
isLocal
initialGroupSize
changeSetSize
remove
endpointType
changeType
timeSinceLastChange
Queue handoff
Fallback to local: could not resolve UID
Fallback to local: Invalid route connection
External device change request
com.apple.mediaremote.volume-module-expand
com.apple.mediaremote.volume-module.anc-value-changed
com.apple.mediaremote.volume-module.spatial-value-changed
outputContextDescription
previousValue
newValue
Unset
com.apple.mediaremote.MRAnalytics
Tf,N,V_x
Tf,N,V_y
hasZ
Tf,N,V_z
hasW
Tf,N,V_w
MRTelevisionController.m
callbackBlock
T@?,R,N,V_callbackBlock
Got a non-television device from a television bonjour service.
discoveryCallback
T@"_MRTelevisionControllerBlockCallback",&,N,V_discoveryCallback
removalCallback
T@"_MRTelevisionControllerBlockCallback",&,N,V_removalCallback
kMRAVEndpointExternalDeviceInvalidatedNotification
kMRAVEndpointOutputDevicesDidChangeNotification
_MRAVEndpointNameUserInfoKey
_MRAVEndpointOutputDeviceNameUserInfoKey
kMRAVEndpointVolumeDidChangeNotification
kMRAVEndpointVolumeControlCapabilitiesDidChangeNotification
kMRAVEndpointIdentifierUserInfoKey
kMRAVEndpointOutputDeviceIdentifierUserInfoKey
kMRAVEndpointVolumeUserInfoKey
kMRAVEndpointVolumeControlCapabilitiesUserInfoKey
kMRAVEndpointTopologyModificationFailureReasonUserInfoKey
deprecated
numberOfDevices
groupLeaderSelection
groupLeaderType
remote
pilot
errorMessage
com.apple.mediaremote.endpoint.modify.wha
eventType
source
MRAVEndpointAddOutputDevicesToGroup
v24@?0@"MRAVEndpoint"8@"NSArray"16
Remove
MRAVEndpointRemoveOutputDevicesFromGroup
Move
MRAVEndpointMoveOutputGroupToDevices
v32@?0^{__CFArray=}8^v16^{__CFError=}24
v16@?0Q8
v16@?0^{__CFString=}8
kCommandInfoCommandKey
kCommandInfoEnabledKey
kCommandInfoOptionsKey
@"MRCommandInfo"16@?0@"NSData"8
@"NSData"16@?0@"MRCommandInfo"8
<%@: %p, %@, enabled = %d, options = %@>
T@"_MRCommandInfoProtobuf",R,N
TI,N,V_command
TB,N,GisEnabled,V_enabled
T@"NSDictionary",C,N,V_options
propertyListData
B16@?0@"MRCommandInfo"8
version
hasVersion
TQ,N,V_version
populatesExternalDevice
TB,N,V_populatesExternalDevice
TI,R,N,V_features
T@"NSString",C,N,V_routingContextUID
enableThrottling
TB,N,V_enableThrottling
alwaysAllowUpdates
TB,N,V_alwaysAllowUpdates
%s.serialQueue
%s.calloutQueue
@"NSString"16@?0@"MRAVOutputDevice"8
B24@?0@"MRAVOutputDevice"8@"MRAVOutputDevice"16
B24@?0@"MRAVEndpoint"8@"MRAVEndpoint"16
@"NSString"16@?0@"MRAVEndpoint"8
endpointsChangedCallbacks
outputDevicesChangedCallbacks
clientDiscoveryStates
T@"NSMapTable",&,N,V_clientDiscoveryStates
endpointFeatures
TI,D,N
devicePresenceDetected
TB,R,D,N
availableEndpoints
T@"NSArray",R,D,N
availableOutputDevices
discoveryMode
targetAudioSessionID
Audio|
Screen|
Video|
RemoteControl|
Companion|
kMRTelevisionServicePairedDevicesDidChangeNotification
kMRTelevisionServiceIsPairingAllowedDidChangeNotification
MediaRemote_ExtendedInfo
MediaRemote_PeerIdentifier
MediaRemote_PeerName
com.apple.mediaremote.televisionService
messages
kMRActiveDeviceInfoDidChangeNotification
kMRDeviceInfoDidChangeNotification
kMRPairedDeviceUserInfoKey
kMRPreviousPairedDeviceUserInfoKey
kMRPairedDeviceUserInfoDataKey
kMRPreviousPairedDeviceUserInfoDataKey
_MRDeviceInfoDidChangeNotification
void MRPairedDeviceMerge(MRPairedDeviceRef, MRPairedDeviceRef)
MRPairedDevice.m
v16@?0@"MROrigin"8
MRPairedDeviceRef MRMediaRemoteCopyCachedDeviceInfo(MROriginRef)
packetData
totalLength
totalWritePosition
T@"_MRTransactionKeyProtobuf",&,N,V_key
hasPacketData
T@"NSData",&,N,V_packetData
hasTotalLength
TQ,N,V_totalLength
hasTotalWritePosition
TQ,N,V_totalWritePosition
revision
hasRevision
T@"NSString",&,N,V_revision
kMRPlaybackSessionRequestDataUserInfoKey
kMRPlaybackSessionRequestUserInfoKey
Connecting
Connected
Disconnected
MRAVRoutingActiveCategoryName
MRAVRoutingClientController.m
mediaRemoteService
T@"MRMediaRemoteService",R,N,V_mediaRemoteService
formatSettingsPlistData
hasFormatSettingsPlistData
T@"NSData",&,N,V_formatSettingsPlistData
com.apple.mediaremote.MRExternalRoutingDiscoverySession.idsQueue
MRIDSDiscoverySession.m
message.features == MRAVEndpointFeatureCompanion
message.externalEndpoints.count == 1
discoveryChannel
IDSDiscoveryChannel
CMPN
availableExternalAudioOutputDevices
availableExternalOutputDevices
availableExternalEndpoints
companionEndpoint
T@"MRConcreteEndpoint",&,N,V_companionEndpoint
companionOutputDevices
T@"MRProtocolClientConnection",&,N,V_discoveryChannel
T@"NSRunLoop",R,N
externalEndpoints
externalOutputDevices
sourceID
externalPlayerCommand
rating
negative
contextID
trackID
radioStationID
systemAppPlaybackQueueData
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
playbackQueueOffset
playbackQueueDestinationOffset
languageOption
playbackQueueContext
insertAfterContentItemID
nowPlayingContentItemID
replaceIntent
senderID
remoteControlInterface
beginSeek
endSeek
userIdentityData
insertBeforeContentItemID
queueEndAction
preservesRepeatMode
preservesShuffleMode
preservesQueueEndAction
homeKitUserIdentifier
verifySupportedCommands
hasSourceID
T@"NSString",&,N,V_sourceID
T@"NSString",&,N,V_mediaType
hasExternalPlayerCommand
TB,N,V_externalPlayerCommand
Tf,N,V_skipInterval
hasRating
Tf,N,V_rating
hasNegative
TB,N,V_negative
hasContextID
T@"NSString",&,N,V_contextID
hasTrackID
TQ,N,V_trackID
hasRadioStationID
Tq,N,V_radioStationID
hasSystemAppPlaybackQueueData
T@"NSData",&,N,V_systemAppPlaybackQueueData
hasSendOptions
Ti,N,V_sendOptions
hasRequestDefermentToPlaybackQueuePosition
TB,N,V_requestDefermentToPlaybackQueuePosition
hasShouldOverrideManuallyCuratedQueue
TB,N,V_shouldOverrideManuallyCuratedQueue
hasStationURL
T@"NSString",&,N,V_stationURL
hasShouldBeginRadioPlayback
TB,N,V_shouldBeginRadioPlayback
hasPlaybackQueueInsertionPosition
Ti,N,V_playbackQueueInsertionPosition
hasContentItemID
T@"NSString",&,N,V_contentItemID
hasPlaybackQueueOffset
Ti,N,V_playbackQueueOffset
hasPlaybackQueueDestinationOffset
Ti,N,V_playbackQueueDestinationOffset
hasLanguageOption
T@"NSData",&,N,V_languageOption
hasPlaybackQueueContext
T@"NSData",&,N,V_playbackQueueContext
hasInsertAfterContentItemID
T@"NSString",&,N,V_insertAfterContentItemID
hasNowPlayingContentItemID
T@"NSString",&,N,V_nowPlayingContentItemID
hasReplaceIntent
Ti,N,V_replaceIntent
hasSenderID
T@"NSString",&,N,V_senderID
hasRemoteControlInterface
T@"NSString",&,N,V_remoteControlInterface
hasBeginSeek
TB,N,V_beginSeek
hasEndSeek
TB,N,V_endSeek
T@"NSData",&,N,V_playbackSession
hasUserIdentityData
T@"NSData",&,N,V_userIdentityData
hasInsertBeforeContentItemID
T@"NSString",&,N,V_insertBeforeContentItemID
hasQueueEndAction
Ti,N,V_queueEndAction
hasPreservesRepeatMode
TB,N,V_preservesRepeatMode
hasPreservesShuffleMode
TB,N,V_preservesShuffleMode
hasPreservesQueueEndAction
TB,N,V_preservesQueueEndAction
hasHomeKitUserIdentifier
T@"NSString",&,N,V_homeKitUserIdentifier
hasVerifySupportedCommands
TB,N,V_verifySupportedCommands
LaunchApplication
NonDestructive
ClearUpNext
KeepUpNext
results
startTimestamp
endTimestamp
hasStartTimestamp
Td,N,V_startTimestamp
hasEndTimestamp
Td,N,V_endTimestamp
v32@?0@"MRContentItem"8@"MRPlaybackQueueRequest"16^B24
pairedDeviceSync
hasChangeType
Ti,N,V_changeType
hasReason
T@"NSString",&,N,V_reason
hasPairedDeviceSync
TB,N,V_pairedDeviceSync
Immediate
Deferrable
Guarded operation <%@> timed out after <%lf> seconds
-[MRBlockGuard initWithTimeout:reason:handler:]_block_invoke
MRBlockGuard.m
Guarded operation <%@> was deallocated before disarmed (Did someone forget to call their completion?
Guarded operation <%@> was deallocated before disarmed
dataExchangeBlock
T@?,C,N,V_dataExchangeBlock
showSetupCodeBlock
T@?,C,N,V_showSetupCodeBlock
hideSetupCodeBlock
T@?,C,N,V_hideSetupCodeBlock
promptForSetupCodeBlock
T@?,C,N,V_promptForSetupCodeBlock
exchangeCompleteBlock
T@?,C,N,V_exchangeCompleteBlock
AuthenticationRequired
AuthenticationFailed
Busy
OutOfRange
UnknownError
NotConnected
com.apple.mediaremote.MRAVOutputDevice
airPlayReceiver
isPickedOnPairedDevice
JSONProtocol
jsonDeviceDefinition
T@"NSData",R,N,V_jsonDeviceDefinition
Unexpected type %@ found for key '%@' (expecting a NSString)
@16@?0@"_MRLanguageOptionGroupProtobuf"8
@16@?0@"_MRLanguageOptionProtobuf"8
@16@?0@"MRLanguageOptionGroup"8
@16@?0@"MRLanguageOption"8
@16@?0@"MRContentItem"8
T@"_MRContentItemProtobuf",R,N
T@"MRContentItemMetadata",C,N,V_metadata
T@"NSString",C,N,V_info
T@"NSArray",C,N,V_availableLanguageOptions
T@"NSArray",C,N,V_currentLanguageOptions
T@"NSArray",C,N,V_sections
T@"NSString",C,N,V_parentIdentifier
T@"NSString",C,N,V_ancestorIdentifier
T@"NSString",C,N,V_queueIdentifier
T@"MRArtwork",&,N,V_artwork
T@"MRContentItem",R,N
kMRMediaRemoteCommandInfoPreferredIntervalsKey
kMRMediaRemoteCommandInfoIsActiveKey
kMRMediaRemoteCommandInfoLocalizedTitleKey
kMRMediaRemoteCommandInfoLocalizedShortTitleKey
kMRMediaRemoteCommandInfoMinimumRatingKey
kMRMediaRemoteCommandInfoMaximumRatingKey
kMRMediaRemoteCommandInfoSupportedPlaybackRates
kMRMediaRemoteCommandInfoPreferredPlaybackRate
kMRMediaRemoteCommandInfoPresentationStyleKey
kMRMediaRemoteCommandInfoCanBeControlledByScrubbingKey
kMRMediaRemoteCommandInfoSupportedInsertionPositions
kMRMediaRemoteCommandInfoSupportedShuffleModes
kMRMediaRemoteCommandInfoSupportedRepeatModes
kMRMediaRemoteCommandInfoDoNotProxy
kMRMediaRemoteCommandInfoDoNotSync
kMRMediaRemoteCommandInfoPurchaseCommandState
kMRMediaRemoteCommandInfoRepeatMode
kMRMediaRemoteCommandInfoShuffleMode
kMRMediaRemoteCommandInfoNumberOfAvailableSkips
kMRMediaRemoteCommandInfoSkipFrequency
kMRMediaRemoteCommandInfoSkipInterval
kMRMediaRemoteCommandInfoPlaybackQueueType
kMRMediaRemoteCommandInfoSpecializedQueues
kMRMediaRemoteCommandInfoSupportedPlaybackQueueTypes
kMRMediaRemoteCommandInfoSupportedCustomPlaybackQueueIdentifiers
kMRMediaRemoteCommandInfoSupportsSharedQueue
kMRMediaRemoteCommandInfoUpNextItemCount
kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes
kMRMediaRemoteCommandInfoCurrentPlaybackSessionTypes
kMRMediaRemoteCommandInfoPlaybackSessionIdentifier
kMRMediaRemoteCommandInfoCurrentQueueEndAction
kMRMediaRemoteCommandInfoSupportedQueueEndActions
kMRMediaRemoteCommandInfoDisabledReason
kMRSupportedCommandsUserInfoKey
kMRSupportedCommandsDataUserInfoKey
v20@?0I8^v12
_kMRErrorRepErrorCodeKey
_kMRErrorRepErrorDomainKey
_kMRErrorRepErrorUserInfoKey
com.apple.mobileipod
SiriShouldRouteCommandsToLegacyMusicApplication
mediaremoted
<null>
v32@?0@8Q16^B24
Unknown Error
No Error
Invalid Operation
Operation not permitted
Client does not exist
Origin does not exist
Unsupported operation
Failed to set picked route
Failed to remove custom origin
The application activity does not exist
The app has not setup a browsable content endpoint
The requested browsable content API is not supported by the application.
The notfication has not been whitelisted by the server.
Operation requires a client callback to have been registered.
Operation requires a client data source to have been registered.
Requested data is out of date and should be requested again
The device's enforced volume limit has been exceeded. The system will ignore the volume adjustment until overridden.
Volume value is out of range (must be between 0.0 and 1.0, where 1.0 is the loudest).
Volume is already at the maximum value.
Volume is already muted.
Voice input endpoint does not exist.
The voice input device is not registered or does not exist.
Encryption failure.
Endpoint does not exist.
Failed to connect to remote device.
Authentication token is invalid.
Recording session is already in progress on this device.
The device is not currently recording.
The client has disconnected.
The server has disconnected.
The connection has been cancelled by the client.
Pairing functionality is locked due to security reasons.
The client's operating system version is too old.
The client's application version is too old.
The device is not paired
The pin pairing dialog was removed by the user before pairing occoured
The pin pairing dialog was removed by a timeout before pairing occoured
The connection timedout
Pairing with this device is blocked
Connection failed because authorization request was skipped.
The message parser threw an exception
The communication channel was closed
Failed to modify the remote control output context
The device is going to sleep
The client's application cancelled the operation.
The operation timed out.
The specified player path object was invalid. (No Now Playing Client?)
Adding or removing devices from the AV output context has failed.
Could not find the specified now playing player
The specified content item does not exist.
The specified offset is invalid.
The specified output context is invalid.
One or more specified output devices are not groupable.
The specified output context does not support adding more than one output device.
Could not find the specified now playing client
Endpoint volume control is only possible if the endpoint is picked or remote controllable.
Output device volume control is only possible if the endpoint is picked or remote controllable.
Connection blocked by server.
MRAVEndpoint was deallocated while waiting for device to connect.
MRAVEndpoint was deallocated while making topology changes.
Failed to perform topology changes
Coder must support key-value coding
Could not find the given outputDevice
Output context modification caused a device to no longer be a proxy group player.
AllowMigrateFromGroup not present and source contains an AirPlay device
AllowMigrateToGroup not present and destination contains more than 1 logical device
Source does not support SetPlaybackSession command
Destination does not support SetPlaybackSession command
Source and destination supported commands do not match
Resolved playerPath is an AirPlay destination
Output context modification caused a device to become a proxy group player.
Output context modification requested no topology change.
Player could not be set as active as its currently has Picture in Picture enabled and another player has higher priority
Could not source an array of events from Core Duet database.
The originating application failed to confirm the intent.
The originating application failed to handle the intent.
void MRMediaRemoteRequestDeviceUID(__strong dispatch_queue_t, void (^__strong)(CFStringRef))
MRUtility.m
MediaControlReceiverCopyIdentity
APReceiverMediaRemoteXPCClient_CopyProperty
AirPlayGroupUUID
void MRMediaRemoteRequestIsGroupLeader(__strong dispatch_queue_t, void (^__strong)(_Bool))
IsAirPlayGroupLeader
APSCopyDefaultGroupUUID
TightSyncUUID
ClusterUUID
ClusterLeaderUUID
IsSilentPrimary
GroupContainsDiscoverableLeader
AirPlayGroupPublicName
ReceiverSessionIsActive
<NSCFDictionary %p {
%@ = %@
Library
MediaRemoteTelevisionDeviceInfoIdentifier.plist
%@...%@:%lu bytes
%02d:%02d:%02d (%lf)
@%#*+=-:. 
%@ %p {
        
    
DiscoveryDebugEnabled
q24@?0@"MROSTransaction"8@"MROSTransaction"16
BOOL MRIsObjectOfClass(NSObject *__strong, __unsafe_unretained Class)
/System/Library/PrivateFrameworks/MediaControlReceiver.framework/MediaControlReceiver
/System/Library/PrivateFrameworks/AirPlaySupport.framework/AirPlaySupport
com.apple.mediaremote.MRUtility/registeredTransactionsQueue
notifications
T@"NSMutableArray",&,N,V_notifications
userInfos
T@"NSMutableArray",&,N,V_userInfos
playerPaths
T@"NSMutableArray",&,N,V_playerPaths
MRTransaction.m
Required Info for Transaction Packet Not Available
Appending packets with different properties
Write Position: %lu greater than data length %lu
Next Write Pos: %lu greater than data length %lu
Key = %@, Identifier = %@, TotalLength = %lu, ActualLength = %lu,
Total Write Position: %lu greater than total length %lu
Write Position %lu + Write Length %lu greater than data length %lu
Length and Postion will cause overflow
T@"NSData",R,N,V_data
T@"_MRTransactionKeyProtobuf",R,N,V_key
T@"_MRTransactionPacketProtobuf",R,N
writeLength
TQ,N,V_writeLength
writePosition
TQ,R,N,V_writePosition
actualLength
TQ,R,N,V_totalLength
TQ,R,N,V_totalWritePosition
readComplete
TB,R,N,GisReadComplete
writeComplete
TB,R,N,GisWriteComplete
Current Length greater than total length
Duplicate total write positions %ld
q24@?0@"MRTransactionPacket"8@"MRTransactionPacket"16
MRXPC_TRANSACTION_DATA_REQUESTED_SIZE
requested size is 0
MRXPC_TRANSACTION_DATA
MRXPC_TRANSACTION_ENDED
v20@?0@"NSArray"8B16
TQ,R,N,V_name
com.apple.MediaRemote.transactionDestinationQueue
-[MRTransactionDestination packetsFromMessage:completion:]
ContentItemChangedSTART
ContentItemMetadataChanged
ContentItemInfoChanged
ContentItemLyricsChanged
ContentItemLanguageOptionsChanged
ContentItemSectionsChanged
ContentItemArtworkChanged
ContentItemChangedEND
PlaybackQueueRequest
Transaction
 (%@)
[%@]
T@"_MRNowPlayingClientProtobuf",R,N
visibility
Tq,N,V_visibility
T@"MRColorComponents",C,N,V_tintColor
T@"NSString",C,N,V_parentApplicationBundleIdentifier
T@"NSArray",C,N,V_extendedBundleIdentifierHierarchy
appIcon
T@"NSURL",C,N,V_appIcon
hasPlaceholder
hasAuxiliaryProperties
bundleIdentifierHierarchy
T@"NSArray",R,C,N
@32@?0@"NSDictionary"8@"NSString"16@24
@32@?0@"PBCodable"8@"NSString"16@24
Message is corrupted.
Message was expecting a reply but no reply was sent: %@
<%@, 
Timestamp=<%llu>, 
Error=<%@>, 
UniqueIdentifier=<%@>, 
ReplyIdentifier=<%@> 
Message: %@
Message: REDACTED
MRProtocolMessage.m
Message does not have a valid type. Did you forget to implement the type method?
underlyingCodableMessage
T@"PBCodable",&,N,V_underlyingCodableMessage
replyIdentifier
T@"NSString",C,N,V_replyIdentifier
T@"NSError",C,N,V_error
T@"MRProtocolClientConnection",W,N,V_clientConnection
isReply
TB,N,V_isReply
protobufData
encryptionType
priority
shouldLog
messageSentCallbacks
T@"MSVMultiCallback",R,N
messagePurgedCallbacks
TQ,R,N,V_lastSupportedMessageType
T@"NSMutableArray",&,N,V_packets
systemBuildVersion
applicationBundleIdentifier
applicationBundleVersion
allowsPairing
managedConfigDeviceID
logicalDeviceCount
tightlySyncedGroup
isAirplayActive
airplayReceivers
hasLocalizedModelName
T@"NSString",&,N,V_localizedModelName
hasSystemBuildVersion
T@"NSString",&,N,V_systemBuildVersion
hasApplicationBundleIdentifier
T@"NSString",&,N,V_applicationBundleIdentifier
hasApplicationBundleVersion
T@"NSString",&,N,V_applicationBundleVersion
hasLastSupportedMessageType
TI,N,V_lastSupportedMessageType
hasAllowsPairing
TB,N,V_allowsPairing
TB,N,V_connected
hasSystemMediaApplication
T@"NSString",&,N,V_systemMediaApplication
hasBluetoothAddress
T@"NSData",&,N,V_bluetoothAddress
TI,N,V_sharedQueueVersion
hasDeviceUID
T@"NSString",&,N,V_deviceUID
hasManagedConfigDeviceID
T@"NSString",&,N,V_managedConfigDeviceID
Ti,N,V_deviceClass
hasLogicalDeviceCount
TI,N,V_logicalDeviceCount
hasTightlySyncedGroup
TB,N,V_tightlySyncedGroup
hasTightSyncUID
T@"NSString",&,N,V_tightSyncUID
hasGroupUID
T@"NSString",&,N,V_groupUID
hasGroupName
T@"NSString",&,N,V_groupName
T@"NSMutableArray",&,N,V_groupedDevices
hasIsAirplayActive
TB,N,V_isAirplayActive
hasSystemPodcastApplication
T@"NSString",&,N,V_systemPodcastApplication
hasSenderDefaultGroupUID
T@"NSString",&,N,V_senderDefaultGroupUID
T@"NSMutableArray",&,N,V_airplayReceivers
hasLinkAgent
T@"NSString",&,N,V_linkAgent
hasClusterID
T@"NSString",&,N,V_clusterID
hasClusterLeaderID
T@"NSString",&,N,V_clusterLeaderID
Invalid
iPhone
iPod
iPad
iFPGA
Accessory
Bridge
deviceDescriptor
T@"MRVirtualTouchDeviceDescriptor",R,C,N
T@"_MRLyricsEventProtobuf",R,N
(System Media Application)
(System Podcast Application)
com.apple.NanoMusic
com.apple.TVMusic
com.apple.Music
com.apple.iTunes
com.apple.podcasts
com.apple.%@
TVAirPlay
public.main-program-content
public.auxiliary-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.accessibility.describes-video
public.easy-to-read
public.translation
public.translation.dubbed
public.translation.voice-over
MRLanguageOptionTypeAudible
MRLanguageOptionTypeLegible
hidEventData
hasHidEventData
T@"NSData",&,N,V_hidEventData
T@"MRPlaybackSessionRequest",R,N
T@"MRPlaybackSession",R,N
T@"MRPlaybackSessionMigrateRequest",R,N
autocapitalizationType
keyboardType
returnKeyType
autocorrection
spellchecking
enablesReturnKeyAutomatically
secureTextEntry
validTextRangeLocation
validTextRangeLength
PINEntrySeparatorIndexes
hasAutocapitalizationType
Ti,N,V_autocapitalizationType
hasKeyboardType
Ti,N,V_keyboardType
hasReturnKeyType
Ti,N,V_returnKeyType
hasAutocorrection
TB,N,V_autocorrection
hasSpellchecking
TB,N,V_spellchecking
hasEnablesReturnKeyAutomatically
TB,N,V_enablesReturnKeyAutomatically
hasSecureTextEntry
TB,N,V_secureTextEntry
hasValidTextRangeLocation
TQ,N,V_validTextRangeLocation
hasValidTextRangeLength
TQ,N,V_validTextRangeLength
pINEntrySeparatorIndexesCount
pINEntrySeparatorIndexes
T^Q,R,N
Words
Sentences
AllCharacters
ASCIICapable
NumbersAndPunctuation
NumberPad
PhonePad
NamePhonePad
EmailAddress
DecimalPad
Twitter
WebSearch
PasscodePad
Google
Join
Next
Route
Search
Send
Yahoo
Done
EmergencyCall
Continue
-[MRNowPlayingPlayerClientCallbacks initWithPlayerPath:queue:]
MRNowPlayingPlayerClientCallbacks.m
com.apple.MediaRemote.PlaybackQueueNowPlayingInfo.serialQueue
^v16@?0q8
^v16@?0^{__CFString=}8
hasPlaybackQueueCallbacks
createPlaybackQueueForRequestCallbacks
T@"MSVMultiCallback",R,N,V_createPlaybackQueueForRequestCallbacks
createItemForOffsetCallbacks
T@"MSVMultiCallback",R,N,V_createItemForOffsetCallbacks
createItemForIdentifierCallbacks
T@"MSVMultiCallback",R,N,V_createItemForIdentifierCallbacks
createChildItemCallbacks
T@"MSVMultiCallback",R,N,V_createChildItemCallbacks
metadataCallbacks
T@"MSVMultiCallback",R,N,V_metadataCallbacks
languageOptionsCallbacks
T@"MSVMultiCallback",R,N,V_languageOptionsCallbacks
infoCallbacks
T@"MSVMultiCallback",R,N,V_infoCallbacks
lyricsCallbacks
T@"MSVMultiCallback",R,N,V_lyricsCallbacks
artworkCallbacks
T@"MSVMultiCallback",R,N,V_artworkCallbacks
playbackSessionCallback
playbackSessionMigrateBeginCallback
playbackSessionMigrateEndCallback
playbackSessionMigrateRequestCallback
beginLyricsEventCallback
endLyricsEventCallback
videoThumbnailsCallback
audioAmplitudeSamplesCallback
commandHandlerBlocks
kMRMediaRemoteActiveSystemEndpointDidChangeNotification
_kMRMediaRemoteActiveSystemEndpointDidChangeNotification
kMRMediaRemoteActiveEndpointTypeUserInfoKey
kMRMediaRemoteActiveEndpointChangeTypeUserInfoKey
kMRMediaRemoteActiveEndpointReasonUserInfoKey
MRUpdateActiveSystemEndpointRequestUserInfoKey
T@"NSError",R,N,V_error
outputDevice = <%@>, client = <%@>, reason = <%@>, operation = <%@>, changeType = <%@>
%@%@ActiveEndpoint
clientBundleIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
TB,N,GisPairedDeviceSync,V_pairedDeviceSync
T@"_MRUpdateActiveSystemEndpointRequestProtobuf",R,N
T@"NSString",C,N,V_reason
Tq,N,V_changeType
UserSelected
Proactive
Legacy API call
ResolveActiveEndpoint
ResolveActiveEndpoint<%@>
Could not discover %@ for ResolveActiveEndpoint<%@> in <%lf> seconds
kMRNowPlayingClientDataUserInfoKey
kMRNowPlayingClientUserInfoKey
kMRNowPlayingPlayerUserInfoKey
kMRNowPlayingPlayerDataUserInfoKey
kMRNowPlayingPlayerPathUserInfoKey
kMRNowPlayingPlayerPathDataUserInfoKey
kMRActiveNowPlayingPlayerPathUserInfoKey
kMRActiveNowPlayingPlayerPathDataUserInfoKey
kMROriginActiveNowPlayingPlayerPathUserInfoKey
kMROriginActiveNowPlayingPlayerPathDataUserInfoKey
CFDataRef MRNowPlayingClientCreateExternalRepresentation(MRNowPlayingClientRef)
MRNowPlayingPlayerPath.m
MRNowPlayingClientRef MRNowPlayingClientCopy(MRNowPlayingClientRef)
pid_t MRNowPlayingClientGetProcessIdentifier(MRNowPlayingClientRef)
MRNowPlayingClientRef MRNowPlayingClientCreateSkeletonFrom(MRNowPlayingClientRef)
void MRNowPlayingClientSetProcessIdentifier(MRNowPlayingClientRef, pid_t)
CFStringRef MRNowPlayingClientGetBundleIdentifier(MRNowPlayingClientRef)
void MRNowPlayingClientSetBundleIdentifier(MRNowPlayingClientRef, CFStringRef)
CFStringRef MRNowPlayingClientGetParentAppBundleIdentifier(MRNowPlayingClientRef)
void MRNowPlayingClientSetParentAppBundleIdentifier(MRNowPlayingClientRef, CFStringRef)
uid_t MRNowPlayingClientGetUserIdentifier(MRNowPlayingClientRef)
void MRNowPlayingClientSetUserIdentifier(MRNowPlayingClientRef, uid_t)
MRNowPlayingClientVisibility MRNowPlayingClientGetNowPlayingVisibility(MRNowPlayingClientRef)
void MRNowPlayingClientSetNowPlayingVisibility(MRNowPlayingClientRef, MRNowPlayingClientVisibility)
MRColor MRNowPlayingClientGetTintColor(MRNowPlayingClientRef)
void MRNowPlayingClientSetTintColor(MRNowPlayingClientRef, MRColor)
CFArrayRef MRNowPlayingClientCopyBundleIdentifierHierarchy(MRNowPlayingClientRef)
CFArrayRef MRNowPlayingClientCopyBundleIdentifierExtendedHierarchy(MRNowPlayingClientRef)
void MRNowPlayingClientAppendBundleIdentifier(MRNowPlayingClientRef, CFStringRef)
_Bool MRNowPlayingClientGetHasAuxillaryProperties(MRNowPlayingClientRef)
Boolean MRNowPlayingClientEqualToClient(MRNowPlayingClientRef, MRNowPlayingClientRef)
void MRNowPlayingClientMerge(MRNowPlayingClientRef, MRNowPlayingClientRef)
MRNowPlayingPlayerRef MRNowPlayingPlayerCopy(MRNowPlayingPlayerRef)
MRNowPlayingPlayerRef MRNowPlayingPlayerCreateSkeletonFrom(MRNowPlayingClientRef)
void MRNowPlayingPlayerSetIdentifier(MRNowPlayingPlayerRef, CFStringRef)
void MRNowPlayingPlayerSetDisplayName(MRNowPlayingPlayerRef, CFStringRef)
void MRNowPlayingPlayerSetAudioSessionType(MRNowPlayingPlayerRef, MRNowPlayingPlayerAudioSessionType)
CFStringRef MRNowPlayingPlayerGetIdentifier(MRNowPlayingPlayerRef)
CFStringRef MRNowPlayingPlayerGetDisplayName(MRNowPlayingPlayerRef)
MRNowPlayingPlayerAudioSessionType MRNowPlayingPlayerGetAudioSessionType(MRNowPlayingPlayerRef)
LongForm
Independent
_Bool MRNowPlayingPlayerGetHasAuxillaryProperties(MRNowPlayingPlayerRef)
Boolean MRNowPlayingPlayerEqualToPlayer(MRNowPlayingPlayerRef, MRNowPlayingPlayerRef)
void MRNowPlayingPlayerMerge(MRNowPlayingPlayerRef, MRNowPlayingPlayerRef)
MRNowPlayingPlayerPathRef MRNowPlayingPlayerPathCopy(MRNowPlayingPlayerPathRef)
MRNowPlayingPlayerPathRef MRNowPlayingPlayerPathCreateSkeletonFrom(MRNowPlayingPlayerPathRef)
MROriginRef MRNowPlayingPlayerPathGetOrigin(MRNowPlayingPlayerPathRef)
MRNowPlayingClientRef MRNowPlayingPlayerPathGetClient(MRNowPlayingPlayerPathRef)
MRNowPlayingPlayerRef MRNowPlayingPlayerPathGetPlayer(MRNowPlayingPlayerPathRef)
void MRNowPlayingPlayerPathSetOrigin(MRNowPlayingPlayerPathRef, MROriginRef)
void MRNowPlayingPlayerPathSetClient(MRNowPlayingPlayerPathRef, MRNowPlayingClientRef)
void MRNowPlayingPlayerPathSetPlayer(MRNowPlayingPlayerPathRef, MRNowPlayingPlayerRef)
CFDataRef MRNowPlayingPlayerPathCreateExternalRepresentation(MRNowPlayingPlayerPathRef)
Boolean MRNowPlayingPlayerPathEqualToPlayerPath(MRNowPlayingPlayerPathRef, MRNowPlayingPlayerPathRef)
_Bool MRNowPlayingPlayerPathClientEqualToPlayerPathClient(MRNowPlayingPlayerPathRef, MRNowPlayingPlayerPathRef)
_Bool MRNowPlayingPlayerPathGetIsResolved(MRNowPlayingPlayerPathRef)
_Bool MRNowPlayingPlayerPathIsLocal(MRNowPlayingPlayerPathRef)
void MRMediaRemoteNowPlayingGetResolvedPlayerPathIsLocal(MRNowPlayingPlayerPathRef, __strong dispatch_queue_t, void (^__strong)(MRNowPlayingPlayerPathRef, _Bool))
NULL playerPath cannot be 'resolved'
_Bool MRMediaRemoteNowPlayingGetResolvedPlayerPathIsLocalSync(MRNowPlayingPlayerPathRef, MRNowPlayingPlayerPathRef *)
v20@?0^v8B16
CFErrorRef MRMediaRemoteNowPlayingPlayerPathCreateError(MRNowPlayingPlayerPathRef)
CFStringRef MRNowPlayingPlayerPathCopyStringRepresentation(MRNowPlayingPlayerRef)
MRNowPlayingPlayerPathRef MRNowPlayingPlayerPathResolveExternalDevicePlayerPath(MRNowPlayingPlayerPathRef, MROriginRef)
resolvePlayerPath
v24@?0@"MRPlayerPath"8@?<v@?@"MRPlayerPath"@"NSError">16
Redirecting to cluster leader: %@
clusterLeaderRedirection
Connect to origin: %@, endpoint: %@
v16@?0@"MRAVEndpoint"8
T@?,R,N,V_callback
point = {%f, %f}
phase = %@
timestamp = %llu
finger = %u
usagePage = %u
usage = %u
down = %s
kMRMediaRemoteApplicationFinishedLoadingContentNotification
kMRMediaRemoteApplicationInvalidatedBrowsableContentDataSourceNotification
kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
kMRMediaRemoteContentItemsUpdatedNotification
kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
kMRMediaRemoteBrowsableContentErrorLocalizedDescriptionKey
kMRMediaRemoteBrowsableContentErrorCodeKey
kMRMediaRemoteBrowsableContentErrorDomainKey
kMRMediaRemoteIndexPathDataUserInfoKey
kMRMediaRemoteBrowsableContentBundleIdentifierUserInfoKey
kMRMediaRemoteBrowsableContentEndpointChangedNotification
kMRMediaRemoteBrowsableContentAPIChangedNotification
Boolean MRMediaRemoteApplicationSupportsBrowsableContent(CFStringRef)
MRBrowsableContent.m
com.apple.developer.playable-content
UIBrowsableContentSupportsSectionedBrowsing
UIBrowsableContentSupportsImmediatePlayback
beginLoadingBrowsableContent
bundleID=%@, indexPath=%@
nowPlayingContentIdentifiers
supportsBrowsableContentPlaybackProgress
v12@?0B8
countOfBrowsableContentChildItems
browsableContentChildItems
bundleID=%@, indexPath=%@, location=%ld, length=%ld
browsableContentPlaybackInitalization
supportedBrowsableContentAPIs
bundleID=%@, identifiers=%@
v24@?0^{__CFDictionary=}8^{__CFError=}16
setBrowsableContentEndpoint
appsSupportingBrowsableContentAPIs
setSupportedBrowsableContentAPIs
invalidateBrowsableContentDataSource
setBrowsableContentNowPlayingIdentifiers
setBrowsableContentItems
finishedBrowsableContentPlaybackInitialization
BeginLoadingContent
PlaybackProgress
ContentFetching
InitiatePlayback
InitializePlaybackQueue
ContextChanges
%llu 
<%@: %p red = %f, green = %f, blue = %f, alpha = %f>
T@"_MRColorProtobuf",R,N
Tf,N,V_red
green
Tf,N,V_green
blue
Tf,N,V_blue
alpha
Tf,N,V_alpha
MREndpointConnectionCorrelationIDUserInfoKey
MREndpointConnectionReasonUserInfoKey
com.apple.MediaRemote.MRAVEndpoint.connectionState.serialOperationQueue
<%@:%p (%@) uid="%@" outputDevices = %@ personalDevices = %@>
ROUTE_NAME_ARROW_FORMAT
ROUTE_NAMES_CONCAT_DELIMITER
-[MRAVEndpoint uniqueIdentifier]
<%@: %p (%@) uid="%@" leader="%@">
output-devices
com.apple.mediaremote.endpoint.connect
MRAVEndpoint
setOutputDeviceVolume
outputDeviceVolume
volumeControlCapabilitiesForOutputDevice
migrateToOrAddOutputDevices
Not attempting to migrate because local device is groupable...
Not attempting to migrate because more than one logical device requested...
Not attempting to migrate because device is not supported type..
migrateToOrSetOutputDevices
MRAVEndpoint.m
migrateToOutputDevice
cannot attempt to migrateToLogicalOutputDevice with more than one logical device specified
Falling back to addOutputDevices because %@...
play
Migrating to silent primary. Will break any pre-exisiting groups...
search
migrateToEndpoint
Already airplaying to device. Removing All outputDevices instead...
%@ option is not present and source contains %@
%@ option is not present and destination contains %@
connect
updateActiveSystemEndpoint
v32@?0@"MROrigin"8@"MROrigin"16@"NSError"24
prepareToMigrateToEndpoint
com.apple.MediaRemote.MRAVEndpoint.NotificationQueue
removeOutputDeviceFromParentGroup
-[MRAVEndpoint removeOutputDeviceFromParentGroup:queue:completion:]_block_invoke
modifyOutputContext
v24@?0@"NSArray"8@"NSMutableArray"16
v16@?0@"NSTimer"8
localizedName
T@"NSString",&,N,V_localizedName
T@"MRExternalDevice",&,N
T@"_MRAVEndpointDescriptorProtobuf",R,N
logicalOutputDeviceCount
TB,R,N,GisProxyGroupPlayer
shortDescription
localEndpoint
TB,R,N,GisLocalEndpoint
TB,R,N,GisCompanionEndpoint
direct://%@
relay://%@/%@
airplay://%@
CFStringRef MRExternalDeviceCopyUniqueIdentifier(MRExternalDeviceRef)
MRExternalDevice_Deprecated.m
CFStringRef MRExternalDeviceCopyName(MRExternalDeviceRef)
CFStringRef MRExternalDeviceCopyHostName(MRExternalDeviceRef)
CFStringRef MRExternalDeviceCopySystemBuildVersion(MRExternalDeviceRef)
int64_t MRExternalDeviceGetNetworkPort(MRExternalDeviceRef)
MRPairedDeviceRef MRExternalDeviceCopyDeviceInfo(MRExternalDeviceRef)
void MRExternalDeviceSetNameCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRExternalDeviceNameCallback)
MROriginRef MRExternalDeviceCopyCustomOrigin(MRExternalDeviceRef)
void MRExternalDeviceSetWantsNowPlayingUpdates(MRExternalDeviceRef, _Bool)
void MRExternalDeviceSetWantsNowPlayingArtworkUpdates(MRExternalDeviceRef, _Bool)
void MRExternalDeviceSetWantsVolumeUpdates(MRExternalDeviceRef, _Bool)
void MRExternalDeviceSetWantsOutputDeviceUpdates(MRExternalDeviceRef, _Bool)
void MRExternalDeviceGetOutputDeviceUIDVolume(MRExternalDeviceRef, CFStringRef, __strong dispatch_queue_t, __strong MRExternalDeviceGetVolumeCallback)
void MRExternalDeviceSetOutputDeviceUIDVolume(MRExternalDeviceRef, CFStringRef, float, __strong dispatch_queue_t, __strong MRExternalDeviceSetVolumeCallback)
void MRExternalDeviceSetVolumeChangedCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRExternalDeviceVolumeCallback)
void MRExternalDeviceSendButtonEvent(MRExternalDeviceRef, MRHIDButtonEvent)
_Bool MRExternalDeviceIsConnected(MRExternalDeviceRef)
void MRExternalDeviceConnect(MRExternalDeviceRef)
void MRExternalDeviceConnectEx(MRExternalDeviceRef, MRExternalDeviceConnectOptions)
void MRExternalDeviceDisconnect(MRExternalDeviceRef)
MRExternalDeviceConnectionState MRExternalDeviceGetConnectionState(MRExternalDeviceRef)
void MRExternalDeviceSetConnectionStateCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRExternalDeviceConnectionStateCallback)
void MRExternalDeviceSetPairingCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRExternalDevicePairingCallback)
_Bool MRExternalDeviceIsPairingAllowed(MRExternalDeviceRef)
void MRExternalDeviceSetPairingAllowedCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRExternalDevicePairingAllowedCallback)
_Bool MRExternalDeviceIsPaired(MRExternalDeviceRef)
void MRExternalDeviceUnpair(MRExternalDeviceRef)
void MRExternalDeviceGetPairedDevices(void (^__strong)(CFArrayRef))
void MRExternalDeviceDeletePairedDevice(CFStringRef)
void MRExternalDeviceRequestOutputContextModification(MRExternalDeviceRef, MRAVOutputContextType, CFArrayRef, CFArrayRef, CFArrayRef, __strong dispatch_queue_t, void (^__strong)(CFErrorRef))
void MRExternalDeviceSetCustomDataCallback(MRExternalDeviceRef, __strong dispatch_queue_t, __strong MRExternalDeviceCustomDataCallback)
void MRExternalDeviceSendCustomData(MRExternalDeviceRef, CFStringRef, CFDataRef)
void MRExternalDevicePing(MRExternalDeviceRef, CFTimeInterval, __strong dispatch_queue_t, __strong MRExternalDevicePingCallback)
(EnableSystemAuthenticationPrompt)
com.apple.MediaRemote.MRPlaybackQueueClient/serialQueue
<%@: %p playerPath=%@>
requestFilters
requests
offsets
MRPlaybackQueueClient.m
Unexpected class attempting to restore controller: %@
Attempting to restore state for unrelated player path: %@ vs %@
v32@?0@"MRContentItem"8Q16^B24
<%@ %p: playerPath=%@
MRAVConcreteOutputDevice.m
GroupPublicName
SupportsRapportRemoteControl
SupportsHangdogRemoteControl
ParentGroupContainsDiscoverableLeader
ParentGroupUUID
@"MRAVOutputDeviceDescription"16@?0@"<AVOutputDeviceDescription>"8
BluetoothIdentifier
T@"AVOutputDevice",&,N,SsetAVOutputDevice:
T@"MRAVOutputDeviceSourceInfo",&,N
supportsHeadTrackedSpatialAudio
headTrackedSpatialAudioActive
TB,R,N,GisHeadTrackedSpatialAudioActive
AVPairedDevice
@16@?0@"AVOutputDevice"8
memberOutputDevices
T@"NSArray",R,N,V_memberOutputDevices
MediaRemote-DefaultPlayer
Default Player
audioSessionType
mxSessionIDs
Tq,N,V_audioSessionType
T@"NSSet",C,N,V_mxSessionIDs
T@"MRPlayer",R,N
defaultPlayer
TB,R,N,GisDefaultPlayer
inputModeFlags
hasInputModeFlags
Ti,N,V_inputModeFlags
Motion
Buttons
Digitizer
T@"NSMutableArray",&,N,V_endpointUIDs
dPadX
dPadY
leftShoulder
rightShoulder
leftThumbstickX
leftThumbstickY
rightThumbstickX
rightThumbstickY
leftTrigger
rightTrigger
hasDPadX
Tf,N,V_dPadX
hasDPadY
Tf,N,V_dPadY
hasA
Tf,N,V_a
hasB
Tf,N,V_b
hasLeftShoulder
Tf,N,V_leftShoulder
hasRightShoulder
Tf,N,V_rightShoulder
hasLeftThumbstickX
Tf,N,V_leftThumbstickX
hasLeftThumbstickY
Tf,N,V_leftThumbstickY
hasRightThumbstickX
Tf,N,V_rightThumbstickX
hasRightThumbstickY
Tf,N,V_rightThumbstickY
hasLeftTrigger
Tf,N,V_leftTrigger
hasRightTrigger
Tf,N,V_rightTrigger
hasPause
Tf,N,V_pause
B16@?0@"<AVOutputDeviceDescription>"8
MRNowPlayingPlayerClientRequests.m
Trying to instantiate an unresolved MRNowPlayingPlayerClientRequests %@
com.apple.MRNowPlayingPlayerClientRequests.response
    playerPath = %@
    playbackState = %@
    playbackQueue = %@
    supportedCommands = %@
-[MRNowPlayingPlayerClientRequests receiveTransaction:fromMessage:]
transaction
v24@?0@"NSArray"8@?<v@?q>16
-[MRNowPlayingPlayerClientRequests _handleTransactionPackets:packets:completion:]
originClientState
v40@?0@"MRTransactionDestination"8@"NSArray"16@"MRPlayerPath"24@?<v@?q>32
subscriptionController
T@"MRPlaybackQueueSubscriptionController",R,N,V_subscriptionController
T@"MRPlaybackQueue",C,N
%@:%p %@
T@"NSData",R,C,N,V_imageData
mimeType
T@"NSString",R,C,N,V_mimeType
Origin: %@ Clients: %@
    origin = %@
    deviceInfo = %@
    canBeNowPlayingApp = %@
    canBeNowPlayingAppTimestamp = %lf
    isOverrideApp = %@
    routeDiscoveryMode = %@
    applicationPickedRoutes = %@
    inputMode = %@
    volumeCapabilities = %@
    playbackQueueCallback = %@
    playbackQueueTransactionCallback = %@
    capabilitiesCallback = %@
    commandCallback = %@
    beginLyricsEventCallback = %@
    endLyricsEventCallback = %@
    activity = %@
    activeNowPlayingClient = %@
    nowPlayingClients = %@
canBeNowPlayingApp
isOverrideApp
hardwareRemoteBehavior
TI,N,V_hardwareRemoteBehavior
routeDiscoveryMode
applicationPickedRoutes
activity
T@"MRApplicationActivity",&,N
T@"MRDeviceInfo",&,N
playbackQueueCallback
playbackQueueTransactionCallback
commandCallback
activeNowPlayingClient
T@"MRClient",&,N,V_activeNowPlayingClient
-[MRNowPlayingClient initWithPlayerPath:]
MRNowPlayingOriginClient.m
_playerPath
client.bundleIdentifier
Attempting to set now playing player if possible
setNowPlayingPlayer
B16@?0@"MRNowPlayingPlayerClient"8
Application will enter foreground
Application did enter background
New player was added
Active player was removed
Client: %@ Players: %@
    playerPath = %@
    client = %@
    activePlayer = %@
    isForeground = %@
    playerClients = %@
T@"MRClient",&,N
playerClients
useMediaRemoteActivePlayerHeuristic
TB,N,V_useMediaRemoteActivePlayerHeuristic
AVAudioSessionMediaServicesWereResetNotification
+ %@
  %@
* %@
- %@
MRGenericMessageSetNameKey
kMRMediaRemoteUpdatedContentItemsUserInfoKey
kMRMediaRemoteUpdatedNowPlayingIdentifiersInfoKey
kMRMediaRemoteUpdatedContentItemsDataUserInfoKey
custom:
void MRContentItemSetTitle(MRContentItemRef, CFStringRef)
MRContentItem_Deprecated.m
B24@?0@"MRContentItem"8^v16
void MRContentItemSetSubtitle(MRContentItemRef, CFStringRef)
void MRContentItemSetAlbumName(MRContentItemRef, CFStringRef)
void MRContentItemSetAlbumYear(MRContentItemRef, CFStringRef)
void MRContentItemSetTrackArtistName(MRContentItemRef, CFStringRef)
void MRContentItemSetAlbumArtistName(MRContentItemRef, CFStringRef)
void MRContentItemSetSeriesName(MRContentItemRef, CFStringRef)
void MRContentItemSetDirectorName(MRContentItemRef, CFStringRef)
void MRContentItemSetComposer(MRContentItemRef, CFStringRef)
void MRContentItemSetGenre(MRContentItemRef, CFStringRef)
void MRContentItemSetLocalizedContentRating(MRContentItemRef, CFStringRef)
void MRContentItemSetLocalizedDurationString(MRContentItemRef, CFStringRef)
void MRContentItemSetArtworkIdentifier(MRContentItemRef, CFStringRef)
void MRContentItemSetArtworkMIMEType(MRContentItemRef, CFStringRef)
void MRContentItemSetRadioStationName(MRContentItemRef, CFStringRef)
void MRContentItemSetRadioStationString(MRContentItemRef, CFStringRef)
void MRContentItemSetCollectionIdentifier(MRContentItemRef, CFStringRef)
void MRContentItemSetContentIdentifier(MRContentItemRef, CFStringRef)
void MRContentItemSetServiceIdentifier(MRContentItemRef, CFStringRef)
void MRContentItemSetProfileIdentifier(MRContentItemRef, CFStringRef)
void MRContentItemSetBrandIdentifier(MRContentItemRef, CFStringRef)
MRContentItemRef MRContentItemCreate(CFAllocatorRef, CFStringRef)
item:<%@
/CalculatedPlaybackPosition: %lf
/PlaybackRate: %lf
/ArtworkData: %@
void MRContentItemMerge(MRContentItemRef, MRContentItemRef)
Trying to Merge incompatible ContentItems %@ != %@
kMRVirtualVoiceInputDeviceIDUserInfoKey
kMRVirtualVoiceInputRecordingStateUserInfoKey
kMRVirtualVoiceInputRecordingStateDidChangeNotification
com.apple.MRVVIClient
com.apple.GameController.gamecontrollerd
_GCAppleTVRemoteControllerProfile
GameController
GCExtendedGamepadSnapshot
_GCController
v32@?0@"NSNumber"8@"MRGameControllerDelayedEvent"16^B24
lastDownEvent
TQ,N,V_lastDownEvent
sendEventBlock
T@?,C,N,V_sendEventBlock
kMRGameControllerDaemonProxyInterrupted
kMRGameControllerDaemonProxyGameControllerDidChangeNotification
kMRGameControllerDaemonProxyGameControllerPropertiesUserInfoKey
MRNowPlayingPlayerClient.m
Trying to instantiate an unresolved MRNowPlayingPlayerClient %@
v32@?0@"MRPlaybackSession"8@"MRPlaybackSessionMigrateRequest"16@?<v@?@"MRPlaybackSessionMigrateRequest"@"NSError">24
f12@?0i8
@"NSNumber"8@?0
@"NSArray"8@?0
f24@?0@"NSNumber"8@"NSArray"16
mediaremoted exited in the middle of a migration attempt
v16@?0@"MRPlaybackSessionRequest"8
v32@?0@"NSNumber"8@"NSArray"16^B24
-[MRNowPlayingPlayerClient addPendingRequest:]
-[MRNowPlayingPlayerClient addPendingRequest:]_block_invoke
Already contains a pending request matching this requestID
-[MRNowPlayingPlayerClient startCachingContentItemUpdatesForItem:forPendingRequest:]
-[MRNowPlayingPlayerClient updatePlaybackQueueWithCachedUpdates:forPendingRequest:]
request.requestIdentifier
PlaybackQueueInvalidation-
Cannot enqueue contentItemChanges when the playback queue is not invalidating
%@ not supported and/or enabled for %@
setPlaybackSession
migrationPlaybackSession<%@>
playItemInQueue
ContentItemID %@ was not found in the playbackQueue for %@
seek
setRate
resetOutputContext
PlayerPath: %@ Supported Commands: %@ PlaybackQueue %@
    playerPath = %@
    supportedCommands = %@
    nowPlayingInfo = %@
    nowPlayingArtwork = %@
    playbackState = %@
    playbackStateDate= %@
    playbackQueue = %@
    capabilities = %ld
    triggerInvalidation = %@
    invalidatationTimestamp = %lf
    coelscingTransactionPackets = %@
    transactionSources = %@
    cachedContentItemUpdates = %@
    pictureInPictureEnabled = %@
    activeRequestDate = %@
invalidatingPlaybackQueue
T@"MRNowPlayingArtwork",&,N
invalidatationTimestamp
T@"MRPlaybackQueue",&,N
TQ,N
nowPlayingContentItem
hasReceivedCommandRecently
pictureInPictureEnabled
TB,N,GisPictureInPictureEnabled
activeRequestedDate
T@"NSDate",&,N
clientCallbacks
T@"MRNowPlayingPlayerClientCallbacks",R,N,V_clientCallbacks
connection disconnection when message was attempted to be sent
attempting to send nil message
client does not support message M%lu> > <%lu>
attempting to send composite message with no children
attempting to send composite message that expects a reply
connection was deallocated before message could be sent
InputStream
OutputStream
Message Received From
Message Sent To
Message Purged For
SocketSetQoS
inputStream
T@"NSInputStream",R,N,V_inputStream
outputStream
T@"NSOutputStream",R,N,V_outputStream
T@"MRSupportedProtocolMessages",&,N,V_supportedMessages
streamsAreValid
disconnected
TB,R,N,V_disconnected
T@"<MRProtocolClientConnectionDelegate>",W,N,V_delegate
MRAVConcreteEndpoint.m
Attempted to create MRAVConcreteEndpoint without using AVOutputDeviceGroup. Use MRConcreteEndpoint instead.
Attempted to initialize local endpoint from AVOutputDeviceGroup. Use MRAVLocalEndpoint instead.
addOutputDevices:APSync
devices=%@ to endpoint=%@
Existing devices in endpoint %@
Final devices in endpoint %@
v16@?0@"AVOutputDeviceGroupMembershipChangeResult"8
removeOutputDevices:APSync
devices=%@ from endpoint=%@
outputDeviceVolume:APSync
deviceUID=%@, endpoint=%@
volume: %f
volumeControlCapabilities:APSync
setOutputDeviceVolume:APSync
volume=%f, deviceUID=%@, endpoint=%@
v32@?0@"MRAVOutputDevice"8Q16^B24
setVolume on %@
AVOutputDeviceGroupAddOutputDeviceOptionCancelIfAuthRequired
AVOutputDeviceGroupAddOutputDeviceOptionInitiator
AVOutputDeviceGroupRemoveOutputDeviceOptionInitiator
AVOutputDeviceGroupVolumeDidChangeNotification
AVOutputDeviceGroupVolumeControlTypeDidChangeNotification
deviceIDsCount
T^I,R,N
T@"MRTextEditingAttributes",R,N
kMRPlaybackQueueRequestDataUserInfoKey
kMRPlaybackQueueRequestUserInfoKey
MRPlaybackQueueRequestRef MRPlaybackQueueRequestCopy(MRPlaybackQueueRequestRef)
MRPlaybackQueueRequest_Deprecated.m
MRPlaybackQueueRequestRef MRPlaybackQueueRequestCopyWithRange(MRPlaybackQueueRequestRef, CFRange)
MRPlaybackQueueRequestRef MRPlaybackQueueRequestCopyWithCurrentState(MRPlaybackQueueRequestRef, CFRange, CFArrayRef)
MRPlaybackQueueRequestRef MRPlaybackQueueRequestCreateMergedRequest(MRPlaybackQueueRequestRef, MRPlaybackQueueRequestRef)
void MRPlaybackQueueRequestSetIncludeInfo(MRPlaybackQueueRequestRef, _Bool)
void MRPlaybackQueueRequestSetIncludeLanguageOptions(MRPlaybackQueueRequestRef, _Bool)
void MRPlaybackQueueRequestSetIncludeArtwork(MRPlaybackQueueRequestRef, double, double)
CFStringRef MRPlaybackQueueRequestGetRequestID(MRPlaybackQueueRequestRef)
void MRPlaybackQueueRequestSetRequestID(MRPlaybackQueueRequestRef, CFStringRef)
CFStringRef MRPlaybackQueueRequestCopyDescription(MRPlaybackQueueRequestRef)
void MRPlaybackQueueRequestSetLabel(MRPlaybackQueueRequestRef, CFStringRef)
CFStringRef MRPlaybackQueueRequestGetLabel(MRPlaybackQueueRequestRef)
CFArrayRef MRPlaybackQueueRequestGetRequestedIdentifiers(MRPlaybackQueueRequestRef)
CFRange MRPlaybackQueueRequestGetRange(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestRangeContainsNowPlayingItem(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestGetIncludeMetadata(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestGetIncludeLyrics(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestGetIncludeSections(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestGetIncludeInfo(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestGetIncludeLanguageOptions(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestGetIncludeArtwork(MRPlaybackQueueRequestRef)
double MRPlaybackQueueRequestGetArtworkWidth(MRPlaybackQueueRequestRef)
double MRPlaybackQueueRequestGetArtworkHeight(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestShouldRequestItem(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestShouldRequestItemNotConsideringMetadata(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestContainsNonDefaultAssets(MRPlaybackQueueRequestRef)
MRPlaybackQueueRequestRef MRPlaybackQueueRequestCreateSkeletonFrom(MRPlaybackQueueRequestRef)
CFDataRef MRPlaybackQueueRequestCreateExternalRepresentation(MRPlaybackQueueRequestRef)
_Bool MRPlaybackQueueRequestHasRange(MRPlaybackQueueRequestRef)
void MRPlaybackQueueRequestMerge(MRPlaybackQueueRequestRef, MRPlaybackQueueRequestRef)
BOOL MRPlaybackQueueRequestMatch(MRPlaybackQueueRequestRef, MRPlaybackQueueRequestRef)
BOOL MRPlaybackQueueRequestIsExactMatch(MRPlaybackQueueRequestRef, MRPlaybackQueueRequestRef)
MRMediaRemoteCachingPolicy MRPlaybackQueueRequestGetCachingPolicy(MRPlaybackQueueRequestRef)
void MRPlaybackQueueRequestSetCachingPolicy(MRPlaybackQueueRequestRef, MRMediaRemoteCachingPolicy)
void MRPlaybackQueueRequestSetIsLegacyNowPlayingInfoRequest(MRPlaybackQueueRequestRef, _Bool)
_Bool MRPlaybackQueueRequestGetIsLegacyNowPlayingInfoRequest(MRPlaybackQueueRequestRef)
MRPlaybackQueueRequestRef MRPlaybackQueueRequestCreateAssetsFrom(MRPlaybackQueueRequestRef)
public.jpeg
image/png
public.png
v20@?0^v8i16
v16@?0f8i12
controller
T@"GCController",&,N,V_controller
Ti,R,N,V_profile
Td,N,V_buttonAUpDelay
T@"<MREmulatedGameControllerDelegate>",W,N,V_delegate
userProvided
T@"NSString",&,N,V_lyrics
hasUserProvided
TB,N,V_userProvided
@"MRContentItem"16@?0@"_MRContentItemProtobuf"8
@"_MRContentItemProtobuf"16@?0@"MRContentItem"8
sendingPlaybackQueueTransaction
resolvedPlayerPath
-[MRPlaybackQueue contentItemWithOffset:]
MRPlaybackQueue.m
TB,N,V_sendingPlaybackQueueTransaction
hasSendingPlaybackQueueTransaction
TB,N,V_hasSendingPlaybackQueueTransaction
T@"NSArray",C,N,V_contentItems
T@"MRPlayerPath",&,N,V_resolvedPlayerPath
minimalReadableDescription
subscribedOrigins
registeredToNowPlayingUpdates
TB,N,V_registeredToNowPlayingUpdates
registeredToVolumeUpdates
TB,N,V_registeredToVolumeUpdates
registeredKeyboardUpdates
TB,N,V_registeredKeyboardUpdates
registeredToOutputDeviceUpdates
TB,N,V_registeredToOutputDeviceUpdates
registeredToSystemEndpointUpdates
TB,N,V_registeredToSystemEndpointUpdates
voiceRecordingState
TI,N,V_voiceRecordingState
cryptoSession
T@"MRCryptoPairingSession",&,N,V_cryptoSession
cryptoEnabled
TB,N,V_cryptoEnabled
allowEmptySelection
defaultLanguageOption
languageOptions
hasAllowEmptySelection
TB,N,V_allowEmptySelection
hasDefaultLanguageOption
T@"_MRLanguageOptionProtobuf",&,N,V_defaultLanguageOption
T@"NSMutableArray",&,N,V_languageOptions
hasDeviceID
TI,N,V_deviceID
hasRecordingState
Ti,N,V_recordingState
    originClients = %@
    originClientRequests = %@
-[MRNowPlayingOriginClientManager existingOriginClientForPlayerPath:]
MRNowPlayingOriginClientManager.m
-[MRNowPlayingOriginClientManager originClientForPlayerPath:]
-[MRNowPlayingOriginClientManager removeOrigin:]
-[MRNowPlayingOriginClientManager removeOriginRequests:]
-[MRNowPlayingOriginClientManager removeClient:]
playerPath.client
playerPath.origin
-[MRNowPlayingOriginClientManager removePlayer:]
kMRLanguageOptionDefaultSelection
kMRLanguageOptionAllowEmptySelection
kMRLanguageOptions
allowsEmptySelection
T@"_MRLanguageOptionGroupProtobuf",R,N
TB,N,V_allowsEmptySelection
hasAllowsEmptySelection
TB,N,V_hasAllowsEmptySelection
T@"NSArray",C,N,V_languageOptions
T@"MRLanguageOption",&,N,V_defaultLanguageOption
hasRed
hasGreen
hasBlue
hasAlpha
void _onClientQueue_MRInvokeClientCallback(MRNowPlayingPlayerClient *__strong, __strong MRPlaybackQueueDataSourceContentItemAssetCallback, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)
MRPlaybackQueueServiceClient.m
PlaybackQueue request %@ for item %@ datasource callback completion was not called. This is a bug in client code
void _onQueue_MRInvokeClientCallbacks(MRNowPlayingPlayerClient *__strong, NSArray<MSVCallback *> *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, _Bool, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)
void _onQueue_MRInvokeClientAssetCallbacks(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)
NSArray<MRContentItem *> *_onClientQueue_MRCreateSectionsForRequest(MRNowPlayingPlayerClient *__strong, __strong MRPlaybackQueueDataSourceCreateChildContentItemCallback, MRPlaybackQueueRequest *__strong, MRContentItem *__strong)
NSArray<MRContentItem *> *_onQueue_MRCreateSectionsForRequest(MRNowPlayingPlayerClient *__strong, NSArray<MSVCallback *> *__strong, MRPlaybackQueueRequest *__strong, MRContentItem *__strong)
MRPlaybackQueue *_onQueue_MRCreatePlaybackQueueForRequest(MRPlaybackQueueRequest *__strong, NSArray<MSVCallback *> *__strong)
MRPlaybackQueue *_onClientQueue_MRCreatePlaybackQueueForOffset(NSRange, __strong MRPlaybackQueueDataSourceCreateContentItemCallback)
MRPlaybackQueue *_onQueue_MRCreatePlaybackQueueForOffset(MRPlaybackQueueRequest *__strong, NSArray<MSVCallback *> *__strong)
MRPlaybackQueue *_onQueue_MRCreatePlaybackQueueForIdentifier(MRPlaybackQueueRequest *__strong, NSArray<MSVCallback *> *__strong)
void _onQueue_MRLoadContentItemAssets(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, NSArray<id> *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)
void _MRLoadContentItemAssets(MRNowPlayingPlayerClient *__strong, MRPlaybackQueueRequest *__strong, MRPlaybackQueue *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueDataSourceContentItemAssetCallbackCompletion)
void _onQueue_MRHandlePlaybackQueueRequest(MRNowPlayingPlayerClient *__strong, MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong dispatch_queue_t, __strong MRPlaybackQueueRequestCallbackCompletion)
void _MRHandlePlaybackQueueRequest(MRPlayerPath *__strong, MRPlaybackQueueRequest *__strong, __strong MRPlaybackQueueRequestTransactionCallbackCompletion)
com.apple.mediaremote.playbackqueue.%@
void MRServiceClientPlaybackQueueRequestCallback(MRNowPlayingPlayerPathRef, MRPlaybackQueueRequestRef, __strong MRPlaybackQueueRequestTransactionCallbackCompletion)
requestRef
void _onQueue_MRSendContentItemTransactionForPlayer(NSArray<MRContentItem *> *__strong, MRPlaybackQueueRequest *__strong, MRPlayerPath *__strong)
void _MRSendContentItemTransactionForPlayer(MRPlaybackQueue *__strong, MRPlaybackQueueRequest *__strong, MRPlayerPath *__strong)
void _onQueue_MRSendPlaybackQueueTransactionForPlayer(MRPlaybackQueue *__strong, MRPlaybackQueueRequest *__strong, MRPlayerPath *__strong)
void _MRSendPlaybackQueueTransactionForPlayer(MRPlaybackQueue *__strong, MRPlaybackQueueRequest *__strong, MRPlayerPath *__strong)
void MRServiceClientPlaybackQueueRequestWithTransactionCallback(MRNowPlayingPlayerPathRef, MRPlaybackQueueRequestRef, __strong MRPlaybackQueueRequestTransactionCallbackCompletion)
T@"NSMutableArray",&,N,V_endpoints
hasEndpointFeatures
Ti,N,V_endpointFeatures
retrying
TB,R,N,GisRetrying
mxSessionID
hasAudioSessionType
Ti,N,V_audioSessionType
mxSessionIDsCount
T^q,R,N
MRDiagnosticRef MRDiagnosticCreate(CFDateRef, CFStringRef)
MRDiagnostic.m
date
TB,R,N,GisAbsolute,V_absolute
TB,R,N,GisIntegratedDisplay,V_integratedDisplay
screenSize
T(_MRHIDSize={?=ff}[2f]),R,N,V_screenSize
TB,D,N,GisAbsolute
TB,D,N,GisIntegratedDisplay
T(_MRHIDSize={?=ff}[2f]),D,N
kMRMediaRemoteApplicationDidReportPlaybackErrorNotification
kMRMediaRemotePlaybackErrorApplicationUserInfoKey
kMRMediaRemotePlaybackErrorUserInfoKey
kMRMediaRemotePlaybackErrorReasonUserInfoKey
_kMRMediaRemotePlaybackErrorDataUserInfoKey
com.apple.LegacyMusic
<%@ %p "%@" secure=%@>
T@"NSString",R,N,V_title
T@"NSString",R,N,V_prompt
T{_MRTextInputTraits=IIIII{?=qq}BB[10q]Q},R,N,V_inputTraits
T{_MRTextInputTraits=IIIII{?=qq}BB[10q]Q},D,N
<%@ %p text="%@", attribs=%@>
TQ,R,N,V_uniqueIdentifier
T@"NSString",R,N,V_text
editing
TB,R,N,GisEditing,V_editing
T@"MRTextEditingAttributes",R,N,V_attributes
TB,D,N,GisEditing
T@"MRTextEditingAttributes",&,D,N
com.apple.MediaRemote.MRAVReconnaissanceSession
callbackSyncQueue
v40@?0@"NSArray"8@"NSArray"16@"MRAVEndpoint"24@"NSError"32
v40@?0@"NSDictionary"8@"NSArray"16@"MRAVEndpoint"24@"NSError"32
matchingOutputDeviceUIDs
matchingOutputDeviceGroupID
discoverySession
T@"MRAVRoutingDiscoverySession",R,N
useWeakMatching
TB,N,V_useWeakMatching
returnPartialResults
TB,N,V_returnPartialResults
matchingLogicalDeviceIDs
T@"NSArray",C,N,V_matchingLogicalDeviceIDs
searchEndpointsForOutputDeviceUID
substituting deviceUID <%@> for outputDeviceUID...
searching for local, using localEndpoint...
searching for nil deviceUID on a device with a nil deviceUID, using localEndpoint...
searching for self and not a proxyGroupplayer, using localEndpoint...
found device in localEndpoint, using localEndpoint...
found device in discovery
searchEndpointsForGroupUID
searching for nil groupeUID on a device with a nil groupUID, using localEndpoint...
searchEndpointsForCompanion
searchForOutputDeviceUID
v24@?0@"MRAVOutputDevice"8@"NSError"16
found device in localEndpoint...
searchForLogicalOutputDeviceUID
found outputDevice %@
motion
buttons
digitizer
hasMotion
T@"_MRGameControllerMotionProtobuf",&,N,V_motion
hasButtons
T@"_MRGameControllerButtonsProtobuf",&,N,V_buttons
hasDigitizer
T@"_MRGameControllerDigitizerProtobuf",&,N,V_digitizer
dataBlock
hasDataBlock
T@"_MRAudioDataBlockProtobuf",&,N,V_dataBlock
kMRMediaRemoteExternalScreenTypeDidChangeNotification
kMRMediaRemotePickableRoutesDidChangeNotification
kMRMediaRemoteRouteStatusDidChangeNotification
kMRMediaRemotePickedRouteVolumeDidChangeNotification
kMRMediaRemotePickedRouteVolumeControlAvailabilityDidChangeNotification
kMRMediaRemoteWillPresentRouteAuthenticationPromptNotification
_MPMediaRemotePickedRouteVolumeControlAvailabilityDidChangeNotification
_MPMediaRemotePickedRouteVolumeDidChangeNotification
kMRMediaRemoteRouteDescriptionUserInfoKey
kMRMediaRemoteExternalScreenTypeUserInfoKey
kMRMediaRemoteRouteStatusUserInfoKey
kMRMediaRemoteRouteIsLocalDeviceRouteKey
kMRMediaRemotePickedRouteVolumeUserInfoKey
kMRMediaRemotePickedRouteVolumeControlAvailabilityUserInfoKey
kMRMediaRemotePickedRouteVolumeControlCapabilitiesUserInfoKey
queue must be non-nil
handler must be non-nil
v28@?0@"MRPlayerPath"8I16@"NSError"20
void MRMediaRemoteGetSavedAVRoutePassword(CFStringRef, __strong dispatch_queue_t, void (^__strong)(CFStringRef))
MRAVRouting.m
mediaPlaybackVolume
setMediaPlaybackVolume
adjustMediaPlaybackVolume
Presence Scan
Infra-only Detailed Scan
Detailed Scan
IgnoreIncorrectPassword
hasResolvedPlayerPath
T@"_MRNowPlayingPlayerPathProtobuf",&,N,V_resolvedPlayerPath
MRAVIOStreamOutputDeviceDidCloseCommunicationChannelNotification
MRAVOutputDeviceIOStream.m
%@ is invalid. use %@
<%@:%p outputDevice = %@>
v32@?0@"AVOutputDeviceCommunicationChannel"8@"NSError"16@"NSString"24
<%@:%p channel = %@ outputDevice = %@>
communicationChannel
T@"AVOutputDeviceCommunicationChannel",R,N,V_communicationChannel
channelIsOpen
TB,N,V_channelIsOpen
streamDelegate
T@"<MRAVOutputStreamDelegate>",W,N,V_streamDelegate
channelOpen
TB,R,N,GisChannelOpen,V_channelOpen
AVOutputDeviceCommunicationChannelControlTypeRelayed
AVOutputDeviceCommunicationChannelControlTypeDirect
AVOutputDeviceCommunicationChannelOptionCancelIfAuthRequired
AVOutputDeviceCommunicationChannelOptionControlType
AVOutputDeviceCommunicationChannelOptionCorrelationID
AVOutputDeviceCommunicationChannelOptionInitiator
AVOutputDeviceCommunicationChannelOpenCancellationReasonAuthorizationSkipped
hasImageData
T@"NSData",&,N,V_imageData
Td,N,V_time
%s.reloadQueue
com.apple.airplay.active
com.apple.MRAVConcreteRoutingDiscoverySession.virtualDevices
B32@?0@"AVOutputDevice"8Q16^B24
v32@?0@"NSString"8@"AVOutputDevice"16^B24
daemonVirtualDevices
T@"NSArray",&,D,N
virtualOutputDevices
T@"NSArray",R,N,V_virtualOutputDevices
nil-%lu
B16@?0@"NSString"8
@"NSString"16@?0@"AVOutputDeviceGroup"8
NONE: %p
B24@?0@"AVOutputDeviceGroup"8@"AVOutputDeviceGroup"16
Leader: %@ - AVODs:
%@ - %@
externalDeviceForIdentifier
externalDeviceCache
availableOutputDeviceGroups
T@"NSArray",R,N,V_availableOutputDeviceGroups
AVOutputDeviceDiscoverySession
AVOutputDeviceGroupOutputDevicesDidChangeNotification
AVOutputDeviceDiscoverySessionAvailableOutputDeviceGroupsDidChangeNotification
MRAVIOStreamOutputContextDidCloseCommunicationChannelNotification
MRAVIOStream.m
OutputContext already has a communication channel delegate
<%@:%p outputContext = %@>
T@"AVOutputContext",R,N,V_outputContext
MRAVIOStreamErrorDomain
Cannot open any type of comm channel for output devices %@
channel
T@"AVOutputContextCommunicationChannel",R,N,V_communicationChannel
AVOutputContextCommunicationChannelControlTypeDirect
AVOutputContextCommunicationChannelControlTypeRelayed
AVOutputContextCommunicationChannelOptionControlType
kMRApplicationActivityHasBegunNotification
kMRApplicationActivityHasEndedNotification
kMRApplicationActivityStatusDidChangeNotification
kMRApplicationActivityUserInfoKey
kMRApplicationActivityUserInfoDataKey
<%@ %p id=%@, primary=%@, secondary=%@, status=%@, creatorPID=%d>
primaryApplicationDisplayID
secondaryApplicationDisplayID
creatorProcessID
T@"NSUUID",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_primaryApplicationDisplayID
T@"NSString",R,N,V_secondaryApplicationDisplayID
Ti,R,N,V_status
Ti,R,N,V_creatorProcessID
Ti,D,N
Initializing
hasDeviceDescriptor
T@"_MRVirtualTouchDeviceDescriptorProtobuf",&,N,V_deviceDescriptor
hasOrigin
T@"_MROriginProtobuf",&,N,V_origin
hasPlayer
T@"_MRNowPlayingPlayerProtobuf",&,N,V_player
gravity
userAcceleration
attitude
rotation
hasGravity
T@"_MRGameControllerAccelerationProtobuf",&,N,V_gravity
hasUserAcceleration
T@"_MRGameControllerAccelerationProtobuf",&,N,V_userAcceleration
hasAttitude
T@"_MRGameControllerAccelerationProtobuf",&,N,V_attitude
hasRotation
T@"_MRGameControllerAccelerationProtobuf",&,N,V_rotation
kMRMediaRemoteAvailableOriginsDidChangeNotification
kMRMediaRemoteActiveOriginDidChangeNotification
_MRMediaRemoteActiveOriginDidChangeNotification
kMRMediaRemoteOriginDidRegisterNotification
_MRMediaRemoteOriginDidRegisterNotification
kMRMediaRemoteOriginDidUnregisterNotification
_MRMediaRemoteOriginDidUnregisterNotification
kMRMediaRemoteOriginUserInfoKey
kMRMediaRemoteOriginDataUserInfoKey
MROriginRef MROriginCopy(MROriginRef)
MROrigin_Deprecated.m
MROriginRef MROriginCreateSkeletonFrom(MROriginRef)
Boolean MROriginEqualToOrigin(MROriginRef, MROriginRef)
CFStringRef MROriginGetDisplayName(MROriginRef)
MROriginType MROriginGetOriginType(MROriginRef)
int32_t MROriginGetUniqueIdentifier(MROriginRef)
Boolean MROriginIsLocalOrigin(MROriginRef)
v20@?0C8@"MROrigin"12
void MRMediaRemoteReRegisterCustomOriginWithDeviceInfo(MROrigin *__strong, MRDeviceInfo *__strong, __strong dispatch_queue_t, void (^__strong)(NSError *__strong))
Cannot Re-register local origin
MRPairedDeviceRef MROriginGetDeviceInfo(MROriginRef)
CFDataRef MROriginCreateExternalRepresentation(MROriginRef)
CFDataRef _MROriginCreateExternalRepresentation(CFAllocatorRef, MROriginRef)
MROriginRef MROriginCreateFromExternalRepresentation(CFDataRef)
MROriginRef _MROriginCreateFromExternalRepresentation(CFAllocatorRef, CFDataRef)
%.1u
characterCount
TQ,N,V_characterCount
passcode
T@"NSString",C,N,V_passcode
[%@] 
TB,N,V_shouldLog
shouldVerboselyLog
TB,N,V_shouldVerboselyLog
<%@:%p, supportedFormats = %@, defaultFormat = %@>
T@"NSArray",R,N,V_supportedFormats
T@"NSDictionary",R,N,V_defaultFormat
T@"_MRVoiceInputDeviceDescriptorProtobuf",R,N
T@"NSArray",C,D,N
T@"NSDictionary",C,D,N
void MRVirtualVoiceInputDeviceDescriptorSetSupportedFormats(MRVirtualVoiceInputDeviceDescriptorRef, CFArrayRef)
MRVirtualVoiceInputDeviceDescriptor.m
unsupported type
void MRVirtualVoiceInputDeviceDescriptorSetDefaultAudioFormat(MRVirtualVoiceInputDeviceDescriptorRef, CFDictionaryRef)
Cache Miss: Request: %{public}@<%{public}@> for %{public}@ %{public}@
[CryptoPairingSession(CoreUtils-System)] Pairing Device %@
[CryptoPairingSession(CoreUtils-System)] Unpairing Device %@
[CryptoPairingSession(CoreUtils-System)] Pairing Manager not available due to lacking entitlements
WARNING: Unexpected type for now playing key %{public}@ (is %{public}@, should be %{public}@). Removing from now playing info dictionary.
[MRNowPlaying] MRMediaRemoteSetCanBeNowPlayingApplication set to %@ by caller %@.
Request: %{public}@<%{public}@> for %{public}@
Response: %{public}@<%{public}@> returned <%{public}@> for %{public}@ in %.4lf seconds
Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds
Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds
[MRNowPlaying] Received sourceClient %{public}@ at %{public}@
[MRAVRoutingDiscoverySessionWrapper] Transferring callbacks from: %{public}@ to: %{public}@
[MRAVRoutingDiscoverySessionWrapper] Changed to shared session: %{public}@
[MRDistantExternalDevice] Hosted external device connection interrupted.
[MRDistantExternalDevice] Distant external device %{public}@ failed to fetch connection state: %{public}@
[MRDistantExternalDevice] Distant external device %{public}@ failed to fetch custom origin data: %{public}@
[MRDistantExternalDevice] Distant external device %p failed to fetch custom origin data: %{public}@
[MRDistantExternalDevice] <%{public}@> %{public}@ ConnectWithOptions %{public}@ because %{public}@
[MRDistantExternalDevice] <%{public}@> Attempted to call -connect on a distant external device that is no longer valid: %{public}@
[MRDistantExternalDevice] Client called disconnect on shared connection, ignoring...
[MRDistantExternalDevice] Overwriting distant external device ConnectionStateCallback for %@
[MRDistantExternalDevice] Overwriting distant external device NameCallback for %@
[MRDistantExternalDevice] Overwriting distant external device CustomDataCallback for %@
[MRDistantExternalDevice] Overwriting distant external device VolumeCallback for %@
[MRDistantExternalDevice] Distant external device %{public}@ failed to fetch personalOutputDevices: %{public}@
[MRDistantExternalDevice] Hosted external device connection for distant device %{public}@ state did change to %{public}@ with error %{public}@
[MRDistantExternalDevice] Hosted external device connection for distant device %{public}@ state did change to %{public}@
[MRDistantExternalDevice] Hosted external device connection for distant device %{public}@ name did change to "%{public}@"
[MRDistantExternalDevice] Hosted external device connection for distant device %{public}@ did receive %llu bytes of custom data for name %{public}@
[MRDistantExternalDevice] Hosted external device connection for distant device %{public}@ volume did change to %f for endpoint with ID %{public}@ for output device with ID %{public}@
[MRDistantExternalDevice] Hosted external device connection for distant device %{public}@ endpoint did change to %@ 
[MRDistantExternalDevice] Loading isPaired data for distant external device %{public}@
[MRDistantExternalDevice] Distant external device %{public}@ failed to load isPaired: %{public}@
[MRDistantExternalDevice] Loading external device metadata for distant external device %{public}@
[MRDistantExternalDevice] Distant external device %{public}@ failed to load external device metadata: %{public}@
No client-side XPC message destination routed for message with ID %lu.
Warning: Tried to stop a service that isn't running.
Reestasblishing recording endpoint.
Reestasblishing television endpoint.
Reestasblishing agent endpoint.
Setting television endpoint
Setting nowPlayingClient %{public}@
Setting now playing player %{public}@
Removing client %{public}@
Set picture in picture enabled %{public}@ for client %{public}@
Removing nowPlayingPlayer %{public}@ 
Didn't receive any pickable routes from the reply.
Client XPC message with ID %lu not handled.
Could not parse notification from xpc message
No client module registered to receive message: %@
Client-side browsable content message with ID %lu not handled.
No browsableContent endpoint registered to handle API: %@
WARNING: Client endpoint returned nil when requesting now playing identifiers
Client endpoint returned nil when requesting child content items.
Voice recording client message %lu not handled
No voice recording endpoint registered to receive message: %@
Television client message %lu not handled
No television endpoint registered to receive message: %@
No callback for television custom data
Agent client message %lu not handled
No agent endpoint registered to receive message: %@
MediaRemote reply error: %s
[IDSConnectivityManager] Resetting Connection...
[IDSConnectivityManager] Connection reset from <%@>
Set: %{public}@ setting %{public}@ from <%{public}@> to <%{public}@>
Set: %{public}@ setting %{public}@ to <%{public}@>
Encountered unknown protobuf key (%@) while converting to a dictionary; skipping.
[MROutputContextDataSource] Observed outputDevice added <%{public}@> to <%{public}@>
[MROutputContextDataSource] Exisiting State: %{public}@
[MROutputContextDataSource] Observed outputDevice removed <%{public}@> from <%{public}@>
[MROutputContextDataSource] Observed outputDevice volume changed <%{public}@> to <%f> in <%{public}@>
[MROutputContextDataSource] Observed endpoint master volume changed <%{public}@> to <%f>
[MROutputContextDataSource] Observed outputDevice volume control capabilities changed <%{public}@> to <%{public}@> in <%@>
[MROutputContextDataSource] Observed endpoint master volume control capabilities changed <%{public}@> to <%{public}@>
[MROutputContextDataSource] Attempting to get volume on outputDevice %{public}@ with error %{public}@
[MROutputContextDataSource] Attempting to get master volume with error %{public}@
[MROutputContextDataSource] Attempting to get capabilities on outputDevice %{public}@ with error %{public}@
[MROutputContextDataSource] Attempting to get master volume capabilities with error %{public}@
[MROutputContextDataSource] Setting volume to %f for %{public}@
[MROutputContextDataSource] Attempting to set volume on outputDevice %{public}@ with error %{public}@
[MROutputContextDataSource] Attempting to set master volume with error %{public}@
[MROutputContextDataSource] Set Local Volume <%f>
[MROutputContextDataSource] Set Local Volume Control Capabilities <%@>
[MROutputContextDataSource] Initializing volume with %f
[MROutputContextDataSource] Initializing volume control capabilities with %@
%{public}@: Stream event not processed by delegate: %{public}@
[AVOutputContext] WARNING: AVF context unavailable for %{public}s
[AVOutputContext] WARNING: AVF context unavailable for %{public}@
[AVOutputContext] Requesting to set output device(s) %{public}@ on context: %{public}@
[AVOutputContext] Requesting to add output device(s) %{public}@ to context: %{public}@
[AVOutputContext] Requesting to remove output device(s) %{public}@ from context: %{public}@
[AVOutputContext] Requesting to remove all output devices from context: %{public}@
[AVOutputContext] Ignoring request to attempt logical device recovery because APSync API is enabled.
[AVOutputContext] Ignoring request to attempt logical device recovery on HomePod.
[AVOutputContext] Ignoring request to attempt logical device recovery since attempt is already in progress.
[AVOutputContext] Did not find any incomplete logical devices.
[AVOutputContext] Beginning reconnaissance session to find missing logical device components: %{public}@
[AVOutputContext] Failed to find missing logical device components: %{public}@ -- found devices %{public}@
[AVOutputContext] Failed to find any remaining logical device components to add.
[AVOutputContext] Logical Devices: %{public}@. Existing devices: %{public}@.
[AVOutputContext] Failed to add missing logical device components to output context. %{public}@
[AVOutputContext] Successfully recovered missing logical devices: %ld
[AVOutputContext] Setting volume to <%f> for %{public}@
[AVOutputContext] Volume control is not available, ignoring setVolume request.
[AVOutputContext] Received output context change initiated notification: %{public}@ for context: %{public}@
[AVOutputContext] ProvidesVolumeFetaures did change to %{public}@ for context: %{public}@
[AVOutputContext] Removed outputDevice %{public}@ for context: %{public}@
[AVOutputContext] Added outputDevice %{public}@ for context: %{public}@
[AVOutputContext] Updated outputDevice %{public}@ for context: %{public}@
[AVOutputContext] Added Fields: %{public}@
[AVOutputContext] Removed Fields: %{public}@
[AVOutputContext] Updated Values: %{public}@
[AVOutputContext] Failed to select playback category on auxiliary context. %{public}@
Update: %{public}@<%{public}@> %{public}@
[AVOutputContext] WARNING: AVF context unavailable for %s
unable to get an output device identifier, device will not be added to protobuf's grouped devices: %{public}@
deviceInfo file exists but is empty, creating new deviceID
Failed to create deviceInfo file %@: %@
Failed to create deviceInfo file %@
Created deviceInfo: %{public}@
Warning: Unknown device network ID
[ExternalJSONClientConnection] Unsupported message: %{public}@
[ExternalJSONClientConnection] Failed to encode message: %{public}@
Unknown MRGameControllerEventType: %ld
[%s] Resetting transport %{public}@
decoded txtData: %@
Received Register HID Device result with error %{public}@ and identifier: %@
Error registering HID device. %{public}@
Error fetching text editing session. %{public}@
Received Register Game Controller response with controllerID: %llu
Error registering Game Controller device. %{public}@
Connection error while sending voice input data. %{public}@
Connection error while sending wake message. %{public}@
Error sending text input message. %{public}@
Calling Client Registered Game Controller Input Mode Callback: %ld
Calling Client Registered Game Controller Properties Callback
Calling Client Registered Recording State Callback: %ld
Calling Client Registered Text Input Callback: %ld
Calling Client Registered hilite mode Callback with %@
Unknown callback event for keyboard message: %{public}@
Calling Client Registered Remote Text Input Callback
[MRRemoteControl] WHAPRO: Sending %@ Command with Timestamp: %@
[MRRemoteControl] WHAPRO: SetPlaybackQueue took %f seconds
Cannot call 'RequestPendingCommands' if MRMediaRemoteServiceSetCanBeNowPlayingApp=YES
Cannot call 'CopyPendingCommands' if MRMediaRemoteServiceSetCanBeNowPlayingApp=YES
Sending short circuted notification %@ for %@
[MRRemoteControl] Command %{public}@ missing source position option(s): %{public}@ | %{public}@ | %{public}@
[MRRemoteControl] Command %{public}@ missing source position option(s): %{public}@ | %{public}@
[MRRemoteControl] Command %{public}@ missing source position option(s): %{public}@
[MRRemoteControl] Command %{public}@ sender sepecified %@ = %@ which is no longer the now playing item.
[MRRemoteControl] Command %{public}@ sender sepecified %@ = %@. Now Playing Item = %@. Ignoring command
Got elapsed time change.
Registered for elapsed time changes.
Unregistered for elapsed time changes.
Got playback speed change.
Registered for playback speed changes.
Unregistered for playback speed changes.
Got repeat mode change.
Registered for repeat mode changes.
Unregistered for repeat mode changes
Got shuffle mode change.
Registered for shuffle mode changes.
Unregistered for shuffle mode changes
[OS_Transaction] invalidating: %{public}@
[MRAVEndpointObserver] Begin Observing %@
[MRAVEndpointObserver] End Observing %@
[MRAVEndpointObserver] Endpoint for outputDevice <%@> changed from <%@> (<%{public}@>) to <%@> (<%{public}@>)
[DistantDiscoverySession] Failed to retrieve endpoint availability state: %{public}@
[DistantDiscoverySession] Hosted routing connection invalidated, attemping to reconnect...
[DistantDiscoverySession] Hosted routing connection interrupted, invalidating...
[DistantDiscoverySession] Error setting discovery mode on hosted routing session. %{public}@
[DistantDiscoverySession] Error setting endpoint features on hosted routing session. %{public}@
[DistantDiscoverySession] Error fetching distant endpoints from hosted routing session: %{public}@
[DistantDiscoverySession] Error fetching distant output devices from hosted routing session: %{public}@
WHAPRO: ConnectionState for device %{public}@ change from %{public}@ to %@ in %{public}f seconds
Exiting connection attempt due to disconnection request for device %@{public}. %{public}@
<%{public}@> Failed to initialize IO streams for device: %{public}@. %{public}@
<%{public}@> Error loading device info for device %{public}@. %{public}@
<%{public}@> Error opening security session for device %{public}@. %{public}@
<%{public}@> Failed to register custom origin for device %{public}@. %{public}@
<%{public}@> Failed to re-register custom origin for device %{public}@. %{public}@
<%{public}@> Failed to sync client state for device %{public}@. %{public}@
<%{public}@> Exiting connection attempt due to disconnection request for %@{public}. %{public}@
<%{public}@> Connection to: %@ (%{public}@) from client: %{public}@ isRetry: %{BOOL}u allowAuth: %{BOOL}u reason: %{public}@ result: %{public}@ in: %.2f
Connection requested to device %{public}@...
Connect called for device %{public}@ with authentication prompt option set when it wasn't set before. Forcing reconnect on failure...
Attempting to connect for device %{public}@ that we are already %{public}@ to. Ignoring request...
Connecting to device %{public}@...
Device disconnect called with error: %{public}@ for external device: %{public}@
Attempting to reconnect to external device %{public}@ (retry %llu out of %llu)
Not attempting reconnect of external device %{public}@ (error = %{public}@, recovery behavior = %{public}s, attempt count = %llu)
Connection error while sending custom data message. %{public}@
Connection error while sending ping message for device %{public}@. %{public}@
Error setting volume %@
Error getting volume %@
Error getting volume control capablities %@
Error removing from parent group %@
Unknown message type=%ld identifier=%@ replyIdentifier=%@ attempting to be handled for device %{public}@
External device server disconnected for device %{public}@: %{public}@
<%{public}@> InitializeConnection for device %{public}@ with options %{public}@
InitializeConnection for device %{public}@ took %f seconds
LoadDeviceInfo for device %{public}@...
LoadDeviceInfo for device %{public}@ took %f seconds
RegisterCustomOrigin %u %{public}@ for device %{public}@...
RegisterCustomOrigin for device %{public}@ took %f seconds
ReRegisterCustomOrigin %ld %{public}@ for device %{public}@...
ReRegisterCustomOrigin for device %{public}@ took %f seconds
OpenSecuritySession for device %{public}@...
No Connection for data exchange callback.
Session mismatch for data exchange callback %@ %@
No Connection for prompt setup callback
Session mismatch for prompt setup callback %@ %@
Pairing session locked out for %lf
No Connection for exchange complete callback.
Error with pairing session exchange. %@ %{public}@
Opening cryptography session %{public}@...
OpenSecuritySession for device %{public}@ took %f seconds
SyncClientState for device %{public}@...
WHAPRO: SyncClientState for device %{public}@ took %f seconds
External device stream cleanup called for device %{public}@ with reason: %{public}@
External device cleanup called for device %{public}@ with reason: %{public}@
Connection error while sending begin lyrics event message. %{public}@
<%{public}@> Calling pairingCallback
Calling Client Registered Pairing Callback
Calling Client Registered Name Callback with %@
Calling Client Registered pairing allowed Callback with %@
Calling Client Registered custom data Callback
<%{public}@> Volume did change to %lf for outputDevice: <%{public}@>
Received command %{public}@ for path %{public}@ for device %{public}@
Processing %lld bytes of crypto pairing data
Failed to handle crypto pairing data. %@
Handling pairing failure with OSStatus = %d
ERROR: Received crypto pairing message without an active pairing session
Decode Error: could not decode %{public}@
Encode Error: could not encode %{public}@
Removing %{public}@ for key %{public}@ for notification user info
[MRNowPlayingOriginClientRequests] %{public}@ UpdatingCache: deviceInfo %{public}@
[MRNowPlayingOriginClientRequests] %{public}@ UpdatingCache: volumeCapabilities %{public}@
[MRNowPlayingOriginClientRequests] %{public}@ UpdatingCache: volume %lf
[CryptoPairingSession(CoreUtils)] Failed to handle pairing exchange. %{public}@
[CryptoPairingSession(CoreUtils)] Error while encrypting data: %{public}@
[CryptoPairingSession(CoreUtils)] Error while decrypting data: %{public}@
[CryptoPairingSession(CoreUtils)] Error initializing pairing session during identity deletion. %{public}@
[CryptoPairingSession(CoreUtils)] Error deleting identity. %{public}@
[CryptoPairingSession(CoreUtils)] Error initializing pairing session. %{public}@
[CryptoPairingSession(CoreUtils)] Failed to begin pairing exchange. %{public}@
[CryptoPairingSession(CoreUtils)] Pairing device %@...
Duplicate record found for identifier %s dumping pairing
[CryptoPairingSession(CoreUtils)] Unpairing device %@
[CryptoPairingSession(CoreUtils)] Updating Peer %@
[CryptoPairingSession(CoreUtils)] Error updating peer (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Found empty extended info entry, removing it
[CryptoPairingSession(CoreUtils)] Could not delete empty entry with status %lu
[CryptoPairingSession(CoreUtils)] Requesting delegate to prompt for setup code with delay = %f
[CryptoPairingSession(CoreUtils)] Error initializing pairing session (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Pairing flags are: %u
[CryptoPairingSession(CoreUtils)] Enabling ACL for device: %{public}@
[CryptoPairingSession(CoreUtils)] Failed to resume pairing process after setting setup code. %{public}@
[CryptoPairingSession(CoreUtils)] Exchange complete. Proceeding to verify step.
[CryptoPairingSession(CoreUtils)] Failed to record successfully paired peer
[CryptoPairingSession(CoreUtils)] Error initializing verify session. %{public}@
[CryptoPairingSession(CoreUtils)] Failed to prepare data for verify exchange. %@
[CryptoPairingSession(CoreUtils)] Verify complete. Deriving encryption keys.
[CryptoPairingSession(CoreUtils)] Failed to derive input key (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Failed to derive output key (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Successfully derived encryption keys.
[NowPlayingInfo] Attempting to set nowPlayingInfo with mergePolicy %@: %@
[NowPlayingInfo] Ignoring nowPlayingInfo update because playback queue callbacks are set
[NowPlayingInfo] Setting nowPlayingInfo with mergePolicy %{public}@: %{public}@
[NowPlayingInfo] Setting nowPlayingInfo artwork: %{public}@
[NowPlayingInfo] Setting identical nowPlayingInfo, skipping update.
[NowPlayingInfo] Clearing nowPlayingInfo
Cluster information updated: UID: %{public}@ | leaderUID: %{public}@
[CryptoPairingSession(MRExternalDevicePairingSession)] Unpairing Device %@
[CryptoPairingSession(MRExternalDevicePairingSession)] Opening Security Session in State = %ld usingSystemPairing = %s
[CryptoPairingSession(MRExternalDevicePairingSession)] System pairing success.
[CryptoPairingSession(MRExternalDevicePairingSession)] Legacy pairing success.
MediaRemote server initializing
MediaRemote server disconnected
MediaRemote server restarted
Error %@ initializing Connection. Trying again...
Setting cached activePlayerPath %{public}@ -> %{public}@
Error %{public}@ while registering custom origin
Error code %ld while removing custom origin
Added PlayerPathInvalidationHandler %p for %{public}@
Removing PlayerPathInvalidationHandler %p for %{public}@
Calling PlayerPathInvalidationHandler %p for %{public}@
'%@':%@ -> '%@':%@
It has been more than <%lf> seconds since ccommandHandler=%@<%@> was called and still waiting for completion
It has been more than <%lf> seconds since commandHandler=%@<%@> was called and still waiting for completion
%lu clients have now registered for Now Playing Notifications
Posting Notification %{public}@
Receieved Notification %{public}@
UserInfo %{public}@
PlaybackQueue request %{public}@ waiting for transaction...
PlaybackQueueInvalidation: NowPlayingItem for %{public}@ changed from
 %{public}@
 -> 
%{public}@
PlaybackQueueInvalidation: Client API misuse: InvalidatingPlaybackQueue instead of ContentItemChange. Sending additional contentItemChange
[MRExternalDeviceTransport] <%{public}@> Reusing input stream %{public}@ of external device: %{public}@
[MRExternalDeviceTransport] <%{public}@> Reusing output stream %{public}@ of external device: %{public}@
Configuring external device net service browser with includesPeerToPeer = %@
Beginning network service search for %{public}@...
Stopping network service search for %{public}@
Found service %{public}@
Removing service %{public}@
Resolved service %{public}@
TXTRecord data did change for service %{public}@
Checking if device with managedConfigDeviceID, %{public}@, allowed
No managedConfig whitelist found. Allowing all devices
Device with managedConfigDeviceID, %{public}@, allowed: %d
[MRExternalDeviceTransport] Output context %{public}@ did invalidate. Discarding streams.
[MRExternalDeviceTransport] <%{public}@: %p> Initializing output context using output device with %{public}@ auth: %{public}@
[MRExternalDeviceTransport] <%{public}@: %p> Attempting to add outputDevice to remoteControlContext %{public}@, existing devices: %{public}@
[MRExternalDeviceTransport] <%{public}@: %p> Remote control context modification cancelled. Reason: %{public}@
[MRExternalDeviceTransport] <%{public}@: %p> Timed out after <%lf> waiting to add output output devices to context: %{public}@
[MRExternalDeviceTransport] <%{public}@: %p> Successfully initialized remote control output context %{public}@, final devices %{public}@
[MRExternalDeviceTransport] <%{public}@: %p> Failed to initialize remote control context with status: %{public}@
[MRExternalDeviceTransport] <%{public}@: %p> Output context already has all the devices we want to use.
[MRExternalDeviceTransport] Observing remote control context: %{public}@
[MRExternalDeviceTransport] Stopping observation of remote control context: %{public}@
[MRExternalDeviceTransport] Destroying remote control context: %{public}@ -- devices: %{public}@
Whitelisting Process for non-playerPath based notifications
Posted Active Now Playing Notification %{public}@ for path %{public}@
Logging to CoreAnalytics: %@
[AVEndpoint] Failed to select playback category on auxiliary context. %{public}@
[AVEndpoint] Retrieved device ID: %@
[AVEndpoint] Retrieved group ID: %@
[AVEndpoint] Processing modification as a local modification.
[AVEndpoint] Processing modification by searching network for group leader.
[AVEndpoint] Processing modification by searching network for pilot device and it's group leader.
[AVEndpoint] Decided on endpoint: %{public}@
[AVEndpoint] No suitable group leader to modify: %{public}@
[AVEndpoint] Error occurred while discovering group leader: %{public}@
[AVEndpoint] Error occurred while discovering devices %{public}@: %{public}@
[AVEndpoint] Requested to add devices %{public}@ in group %{public}@
[AVEndpoint] Output device add of %{public}@ to %{public}@ failed with error: %{public}@
[AVEndpoint] Output devices %{public}@ added to %{public}@: %{public}@
[AVEndpoint] Output device set of %{public}@ to %{public}@ failed with error: %{public}@
[AVEndpoint] Output devices %{public}@ set to %{public}@: %{public}@
[AVEndpoint] Requested to remove devices %{public}@ in group %{public}@
[AVEndpoint] Output device remove of %{public}@ from %{public}@ failed with error: %{public}@
[AVEndpoint] Output devices %{public}@ removed from %{public}@: %{public}@
[AVEndpoint] Requested to move devices %{public}@ in group %{public}@
[AVEndpoint] Output device set of %{public}@ to %{public}@ completed
Unable to search for group leader: %{public}@
%{public}@ - Output devices changed
%{public}@
%{public}@ - Endpoints changed
%{public}@
[MRIDSDiscoverySession] Connecting discoveryChannel to <%@>...
[MRIDSDiscoverySession] Connected discoveryChannel to <%@> in <%lf> seconds
[MRIDSDiscoverySession] Error connecting to discoveryChannel <%@>
[MRIDSDiscoverySession] No device to connect discoveryChannel to <%@>...
[MRIDSDiscoverySession] Initializing discoveryChannel to <%@>
Sending short circuted notification %@ for %{public}@ %{public}@
Sending contentItemChangeArtwork for %{public}@ %{public}@
Not sending contentItemChange for path %{public}@ %{public}@
Sending short circuted contentItemChange for %{public}@ %{public}@
Sending short circuted notification %@ for %@ %@
Sending contentItemChange for path %{public}@ %{public}@
[AVOutputDevice] Setting %{public}@(%{public}@) volume to %lf
Error fetching local receiver pairing identity (OSStatus = %d)
Error getting AirPlay security settings dictionary (OSStatus = %d)
Type mismatch, expecting %@ found %@
[MRTransactionSource] Source %@ received interrupted/invalid connection to query
[MRTransactionSource] Source %@ could not extract connection
[MRTransactionSource] Source %@ could not extract reply
[MRTransactionSource] %@ sending end signal with packets %@
[MRTransactionSource] %@ sending packets: %@
[MRTransactionDestination] %@ could not extract connection
[MRTransactionDestination] %@ could not extract reply
[MRTransactionDestination] %@ received interrupted/invalid connection
[MRTransactionDestination] %@ received %@ for playerPath %@
Could not send reply because the message was not expecting a reply: %{public}@ 
Could not send reply message because there is no client %{public}@ 
Error %@ deserializing languageOption
Error %@ deserializing languageOptionGroup
Request: %{public}@<%{public}@> for %{public}@ because %{public}@
Falling back to %{public}@ for system app since none specified in deviceInfo
[AVEndpoint] <%{public}@> Connecting to external device %{public}@ because: %{public}@...
[AVEndpoint] Cannot connect to external device. This endpoint doesn't have a usable pipe.
[AVEndpoint] Failed to connect to external device: %{public}@
[AVEndpoint] Successfully connected to external device.
[MRPlaybackQueueClient] No ContentItem in playback queue with provided '%@':%@ for command <%@>
%{public}@ - Setting listening mode: %{public}@
%{public}@ - Failed to set listening mode: %{public}@ - error: %{public}@
[MRNowPlayingPlayerClientRequests] %{public}@ UpdatingCache: playbackState %{public}@
[MRNowPlayingPlayerClientRequests] %{public}@ UpdatingCache: supportedCommands %{public}@
[MRNowPlayingPlayerClientRequests] %{public}@ UpdatingCache: playbackQueue %{public}@
[MRNowPlayingPlayerClientRequests] %{public}@ UpdatingCache: contentItem %{public}@
[MRNowPlayingPlayerClientRequests] %{public}@ UpdatingCache: clearing contentItemArtwork for %{public}@
Timed out getting playback queue for now playing request: %{public}@
Could not deserialize contentItem in %{public}@ for playerPath %{public}@
[MRNowPlayingOriginClient] Removing MRNowPlayingOriginClient for origin: %{public}@
[MRNowPlayingOriginClient] AVAudioSessionMediaServicesWereReset notification received -- restoring now playing app eligibility state
[MRNowPlayingOriginClient] Reevaluate active player before: %{public}@, after: %{public}@, reason: %{public}@
[changeDescription] Nil key returned for object: %{public}@
MRContentItemSetAvailableLanguageOptions: Expecting a CFArrayRef of MRLanguageOptionGroupRefs but instead found a CFArrayRef of CFDataRef. Please fix.
MRContentItemSetCurrentLanguageOptions: Expecting a CFArrayRef of MRLanguageOptionRefs but instead found a CFArrayRef of CFDataRef. Please fix.
Attempting to Merge a ContentItem with itself %@
[GameControllerDaemonProxy] invalidated connection to com.apple.GameController.gamecontrollerd
[GameControllerDaemonProxy] interrupted connection to com.apple.GameController.gamecontrollerd
[GameControllerDaemonProxy] Remote Proxy Error Handler: %@
[GameControllerDaemonProxy] Could not find GameController profile with profileType: %ld
[GameControllerDaemonProxy] Premptive Delayed event
[GameControllerDaemonProxy] Delayed event initiated
[GameControllerDaemonProxy] Sending delayed event
[MRNowPlayingPlayerClient] Sending enqueued contentItemChanges due to finished PlaybackQueueInvalidation
[MRNowPlayingPlayerClient] Attempting to update playbackQueue response %{public}@ without a pending request %{public}@
[MRNowPlayingPlayerClient] Attempting to send contentItemChange for path %{public}@ %{public}@
[MRNowPlayingPlayerClient] Sending identical contentItemChange for %@. Skipping update
[MRNowPlayingPlayerClient] Added Fields: %{public}@
[MRNowPlayingPlayerClient] Updated Values: %{public}@
[MRNowPlayingPlayerClient] Enqueing contentItemChange due to pending PlaybackQueueInvalidation
[ProtocolClientConnection] %{public}@ Dealloc
[ProtocolClientConnection] %{public}@ Received previously timedout reply %@
[ProtocolConnection] %{public}@ Received raw data of length: %lld
[ProtocolClientConnection] %{public}@ %@ Error: %@. Disconnecting...
[ProtocolClientConnection] %{public}@ Stream ended. Disconnecting...
[ProtocolClientConnection] %{public}@ Crypto Error. Disconnecting...
[ProtocolClientConnection] %{public}@ Parse Error. Disconnecting...
[ProtocolConnection] %{public}@ Wrote %ld bytes to socket
[ProtocolClientConnection] %{public}@ Disconnecting due to Exception %@ in parser
[ProtocolClientConnection] %{public}@ Failed to set socket QOS (errno = %d)
[ProtocolConnection] %{public}@ Successfully set socket QOS to %d.
[ProtocolClientConnection] %{public}@ Failed to set QOS properties on stream %@. No native socket was retrievable.
[ProtocolConnection] %{public}@ Successfully set _kCFStreamSocketSetNoDelay = %@
[ProtocolClientConnection] %{public}@ Failed to set _kCFStreamSocketSetNoDelay property.
[MRAVConcreteEndpoint] Volume - %{public}@ - Output device volume updated: %{public}f - %{public}@
[MRAVConcreteEndpoint] Volume - %{public}@ - Endpoint volume updated: %{public}f - %{public}@
[MRAVConcreteEndpoint] Volume - %{public}@ - Device volume capabilities updated: %{public}@ - %{public}@
[MRAVConcreteEndpoint] Volume - %{public}@ - Group volume capabilities updated: %{public}@ - %{public}@
PROFILE: resizing image from %lfx%lf -> %lfx%lf took %lf seconds
[EmulatedGameController] Cannot create GameControllerDaemonProxy
[EmulatedGameController] Cannot create emulated controller
[EmulatedGameController] Added gamecontroller with id: %lu
[ExternalClientConnection] Trying to send unencrypted message that requires encryptions. Killing message
Sending Lyrics Event: %@ for PlayerPath %@
[MRPlaybackQueueServiceClient] playbackQueueRequest %{public}@ responded to asset request with error %{public}@
[MRPlaybackQueueServiceClient] After completion playbackQueueRequest %{public}@ responded to asset request with item %{public}@
[MRPlaybackQueueServiceClient] playbackQueueRequest %{public}@ requesting assets for item %{public}@
[MRPlaybackQueueServiceClient] playbackQueueRequest %{public}@ requesting child item of %{public}@
[MRPlaybackQueueServiceClient] Received playbackQueueRequest %{public}@ for path %{public}@
[MRPlaybackQueueServiceClient] Responded to playbackQueueRequest %{public}@ for path %{public}@ with %{public}@
[MRPlaybackQueueServiceClient] Responded to playbackQueueRequest %{public}@ for path %{public}@ with error %{public}@
Sending contentItem transaction %{public}@ for path %{public}@
Sending playbackQueue transaction %{public}@ for path %{public}@
Attempting to setAppPlaybackQueue with an empty queue. Did you mean to send a MRSystemAppPlaybackQueueTypeEmpty?
WHAPRO: Discovery found %@ in %f seconds %{public}@
[ReconnaissanceSession] Recon force end: nothing to match
[ReconnaissanceSession] Beginning search with timeout %f %{public}@
[ReconnaissanceSession] Session timed out after %f seconds with %llu updates %{public}@
[ReconnaissanceSession] Last endpoints:
[ReconnaissanceSession] Last output devices:
[ReconnaissanceSession] %{public}@
[ReconnaissanceSession] Matching devices found: %{public}@
[ReconnaissanceSession] Matching UIDs set: %{public}@
[ReconnaissanceSession] Matching Logical Device IDs set: %{public}@
[ReconnaissanceSession] Unanimous endpoint: %{public}@
[ReconnaissanceSession] Unanimous endpoint connection type: %{public}@
[ReconnaissanceSession] Endpoint features: %u
[ReconnaissanceSession] Unanimous endpoint should wait: %{BOOL}u
[ReconnaissanceSession] Cancelling search for session %{public}@
[ReconnaissanceSession] Successfully found matching output devices: %{public}@
[ReconnaissanceSession] Successfully found matching endpoints: %{public}@
[AVOutputDeviceIOStream] InputStream received %llu bytes from communication channel: %{public}@
[AVOutputDeviceIOStream] Output device %{public}@ closed communication channel: %{public}@
[AVOutputDeviceIOStream] <%{public}@> Init IOStream: %{public}@
[AVOutputDeviceIOStream] %{public}@ <%{public}@> Remote control communication channel creation failed. Error: %{public}@ Reason: %{public}@
[AVOutputDeviceIOStream] %{public}@ <%{public}@> Timed out after <%lf> waiting to open remote control communication channel for device: %{public}@
[AVOutputDeviceIOStream] %{public}@ <%{public}@> Successfully created remote control communication channel %{public}@
[AVOutputDeviceIOStream] %{public}@ <%{public}@> Skipped creating remote control communication channel for: %{public}@. CancelIfAuthRequired was used
[AVOutputDeviceIOStream] %{public}@ <%{public}@> Failed to create remote control communication channel for: %{public}@, error: %{public}@
[AVOutputDeviceIOStream] %{public}@ <%{public}@> Failed to create remote control communication channel for: %{public}@
[AVOutputDeviceIOStream] Dealloc IOStream: %{public}@
[AVOutputDeviceIOStream] OutputStream writing %llu bytes to communication channel: %{public}@
[AVOutputDeviceIOStream] Error sending data through channel: %{public}@
[AVOutputDeviceIOStream] Channel not available: %{public}@
[AVOutputDeviceIOStream] Received notification about output device closing communication channel for output stream: %{public}@
[AVDiscoverySession] Received airplay active notification: %llu
[AVDiscoverySession] Failed to register for airplay active events. Status = %u
[AVDiscoverySession] Current airplay active state = %d
[AVDiscoverySession] Failed to get current airplay active state. Status = %u
[AVDiscoverySession] %@ - Discovery mode changed
[AVDiscoverySession] No audio session found for ID %u
[AVDiscoverySession] Output devices did change notification received. Reloading available endpoints and output devices. %{public}@
[AVDiscoverySession] Found cluster members without leaders: %{public}@
[AVDiscoverySession] Found cluster leaders without members: %{public}@
[AVDiscoverySession] Purging externalDeviceCache entry <%@> due to disconnection
[AVDiscoverySession] Purging externalDeviceCache entry <%@> due to invalid
[AVDiscoverySession] Adding externalDeviceCache entry <%@>
[AVDiscoverySession] Endpoints did change notification received. Reloading available endpoints. %{public}@
[AVDiscoverySession] Virtual devices did change notification received. Reloading available endpoints and output devices. %{public}@
[AVDiscoverySession] Ignoring AVOD group - no output devices: %{public}@ | leader: %{public}@
[AVDiscoverySession] Purging externalDeviceCache entry <%@> due to discovery
%{public}@ - AVODGroups changed:
%{public}@
Duplicated AVODGroup: %{public}@: %{public}@ and %{public}@: %{public}@
[AVIOStream] InputStream received %llu bytes from communication channel: %{public}@ - %{public}@
[AVIOStream] Output context %{public}@ closed communication channel: %{public}@ - %{public}@
[AVIOStream] <%{public}@> Requesting to open communication channel using output context %{public}@ (%{public}@) and options %{public}@
[AVIOStream] <%{public}@> Successfully opened communication channel %{public}@ for output stream %{public}@
[AVIOStream] <%{public}@> Failed to open communication channel for output stream %{public}@ (error = %{public}@)
[AVIOStream] OutputStream writing %llu bytes to communication channel: %{public}@
[AVIOStream] Error sending data through channel: %{public}@
[AVIOStream] Channel not available for output context %{public}@
[AVIOStream] Received notification about output context closing communication channel for output stream: %{public}@
Setting active origin: %@
Timedout Getting DeviceInfo for origin %{public}@. If you see this too much please use 'MRMediaRemoteGetDeviceInfo' instead
%{public}@[%{public}@ <%{public}@-%@>]: %{public}@
[%@ <%{public}@-%@>]: %{public}@
_MRVideoThumbnailRequestProtobuf
NSCopying
MRLegacyController
MRProtocolClientConnectionDelegate
NSObject
_MRPlaybackQueueRequestProtobuf
MRPlaybackSession
_MRGameControllerPropertiesMessageProtobuf
MRClientUpdatesConfigMessage
MRAVOutputDeviceDescription
_MRLyricsEventProtobuf
_MRAudioDataBlockProtobuf
MRCoreUtilsSystemPairingSession
MRMessageReplyIdentifier
MRProtocolMessageQueue
MRMessageData
MRPendingMessageQueue
_MRSetNowPlayingPlayerMessageProtobuf
_MRGetVolumeControlCapabilitiesMessageProtobuf
MRModifyOutputContextRequestMessage
MRUpdateOutputDevicesMessage
MRRemoveOutputDevicesMessage
MRRemoveFromParentGroupMessage
MRUpdateActiveSystemEndpointMessage
MRUpdateEndpointsMessage
MRRemoveEndpointsMessage
MRConcreteEndpoint
MRAudioBuffer
_MRPromptForRouteAuthorizationMessageProtobuf
_MRSupportedCommandsProtobuf
MRSetStateMessage
MRSetReadyStateMessage
MRSetConnectionStateMessage
MRSetHiliteModeMessage
MRWakeDeviceMessage
MRSetNowPlayingClientMessage
MRSetNowPlayingPlayerMessage
MRRemoveClientMessage
MRRemovePlayerMessage
MRUpdateClientMessage
MRUpdatePlayerMessage
MRUpdateContentItemMessage
MRUpdateContentItemArtworkMessage
MRSetDefaultSupportedCommandsMessage
_MRSetStateMessageProtobuf
_MRLanguageOptionProtobuf
_MRNowPlayingInfoProtobuf
_MRAudioTimeProtobuf
_MRReceivedCommandProtobuf
MRGameControllerMessage
MRGameControllerPropertiesMessage
MRRegisterGameControllerMessage
MRRegisterGameControllerResponseMessage
MRUnregisterGameControllerMessage
MRRegisterForGameControllerEventsMessage
_MRGetKeyboardSessionProtobuf
_MRContentItemProtobuf
MRContentItemMetadata
_MRReceivedCommandAppOptionsProtobuf
MRAVLocalEndpoint
NSSecureCoding
NSCoding
MRAVDistantOutputDevice
MRAVRoutingDiscoverySessionWrapper
_MRSetRecordingStateMessageProtobuf
_MRAVRouteQueryProtobuf
_MRGetVolumeResultMessageProtobuf
_MRUpdateActiveSystemEndpointMessageProtobuf
_MRVolumeControlCapabilitiesDidChangeMessageProtobuf
MRAdditions
MRIDSInputStream
IDSServiceDelegate
MRIDSOutputStream
_MRSendVirtualTouchEventMessageProtobuf
MRAVOutputDevice
MRAVExternalOutputDevice
MRAVDistantExternalDeviceMetadata
NSMutableCopying
MRAVMutableDistantExternalDeviceMetadata
MRAVDistantExternalDeviceServiceProtocol
MRAVDistantExternalDeviceClientProtocol
MRDistantExternalDevice
MRLanguageOption
_MRContentItemMetadataProtobuf
_MRDiagnosticProtobuf
MRDeviceInfoMessage
MRDeviceInfoUpdateMessage
_MRSendCommandResultMessageProtobuf
MRMediaRemoteService
MRSetVolumeMessage
MRGetKeyboardSessionMessage
_MRGetStateMessageProtobuf
_MRPlayerClientPropertiesMessageProtobuf
_MRVoiceInputDeviceDescriptorProtobuf
MROrigin
_MRAudioBufferProtobuf
MRIDSConnectivityManager
MRArtwork
_MRAVOutputDeviceSourceInfoProtobuf
MRProtobufSerialization
_MRPlaybackQueueCapabilitiesProtobuf
MRGetVoiceInputDevicesMessage
MRGetVoiceInputDevicesResponseMessage
MRRegisterVoiceInputDeviceMessage
MRRegisterVoiceInputDeviceResponseMessage
MRSetRecordingStateMessage
MRSendVoiceInputMessage
_MROriginClientPropertiesMessageProtobuf
MROutputContextDataSource
MRExternalOutputContextDataSource
MROutputContextController
MRNowPlayingState
MRAVBufferedInputStream
MRAVBufferedOutputStream
MRAVOutputContext
MRAVOutputContextModification
MRDeviceInfo
MRExternalJSONClientConnection
MRSetDiscoveryModeMessage
_MRSetDiscoveryModeProtobufMessage
MRRegisterHIDDeviceResultMessage
MRTransactionMessage
MRExternalDeviceManager
_MRRemoveClientMessageProtobuf
MRPlaybackSessionMigrateRequest
_MRRemoveOutputDevicesMessageProtobuf
MRVirtualDevicePipeProtocol
MRAVXPCPipeTransport
NSStreamDelegate
MRAVOutputDeviceSourceInfo
MRPlayerPath
MRNetServiceTransport
_MRCryptoPairingMessageProtobuf
_MRAVEndpointDescriptorProtobuf
MRWeakProxy
_MRPromptForRouteAuthorizationResponseMessageProtobuf
_MRGenericMessageProtobuf
_MRTextInputMessageProtobuf
MRNowPlayingRequest
MRTelevisionDevice
RTIInputSystemPayloadDelegate
MRGetVolumeMessage
MRGetVolumeResultMessage
MRVolumeDidChangeMessage
MRGetVolumeControlCapabilitiesMessage
MRGetVolumeControlCapabilitiesResultMessage
MRLegacyVolumeControlCapabilitiesDidChangeMessage
MRVolumeControlCapabilitiesDidChangeMessage
_MRVirtualTouchDeviceDescriptorProtobuf
MRRemoteControl
MROSTransaction
_MRUpdateContentItemMessageProtobuf
MRAVEndpointObserver
MRCryptoPairingSession
MRAVDistantRoutingDiscoveryServiceProtocol
MRAVDistantRoutingDiscoveryClientProtocol
MRAVDistantRoutingDiscoverySession
_MRPlaybackSessionMigrateRequestProtobuf
MRPlayerClientPropertiesMessage
MROriginClientPropertiesMessage
MRExternalDevice
MRTransportExternalDevice
MRJSONTransportExternalDevice
_MRRemovePlayerMessageProtobuf
_MRSendLyricsEventMessageProtobuf
_MRVolumeControlAvailabilityProtobuf
_MRSendCommandMessageProtobuf
_MRSendHIDReportMessageProtobuf
MRSendCommandMessage
_MRTextEditingAttributesProtobuf
_MRClientUpdatesConfigurationProtobuf
MRExternalDeviceMessageMetrics
MRExternalDeviceMessageMetricsEntry
_MRUpdateContentItemArtworkMessageProtobuf
MRPromptForRouteAuthorizationMessage
MRPromptForRouteAuthorizationResponseMessage
MRPresentRouteAuthorizationStatusMessage
MRSendVirtualTouchEventMessage
MRSendPackedVirtualTouchEventMessage
_MRTransactionMessageProtobuf
MRSerializationAdditions
MRNowPlayingOriginClientRequests
MRNowPlayingClientState
MRNowPlayingClientRequests
_MRGameControllerDigitizerProtobuf
_MRAVModifyOutputContextRequestProtobuf
MRLegacySendHIDEventMessage
MRCoreUtilsPairingSession
MRIDSTransport
MRAVClusterController
MRCryptoPairingIdentity
MRVirtualVoiceInputDevice
_MRSetArtworkMessageProtobuf
MRXPCConnection
MRAudioDataBlock
MRMutableAudioDataBlock
MRExternalDevicePairingSession
MRMediaRemoteServiceClient
_MRLyricsTokenProtobuf
MRSendButtonEventMessage
MRAVDistantEndpoint
_MRSetHiliteModeMessageProtobuf
_MRCommandInfoProtobuf
_MRSendButtonEventMessageProtobuf
MRGetRemoteTextInputSessionMessage
_MROriginProtobuf
_MRKeyboardMessageProtobuf
_MRPlaybackSessionRequestProtobuf
_MRPlaybackSessionProtobuf
MRPlaybackQueueRequestMessage
_MRAVOutputDeviceDescriptorProtobuf
_MRMediaRemoteMessageProtobuf
_MRRegisterVoiceInputDeviceMessageProtobuf
_MRVirtualTouchEventProtobuf
MRPlaybackSessionRequest
_MRRegisterGameControllerMessageProtobuf
_MRNowPlayingClientProtobuf
MRNotificationClient
MRNotification
MRUserSettings
MRPlaybackQueueRequest
_MRAVAirPlaySecuritySettingsProtobuf
MRAVOutputDeviceTransport
MRAVOutputStreamDelegate
_MRGameControllerPropertiesProtobuf
MRContentItemRequest
_MRSendPackedVirtualTouchEventMessageProtobuf
_MRAudioStreamPacketDescriptionProtobuf
MRExternalDeviceController
NSNetServiceBrowserDelegate
NSNetServiceDelegate
_MRPlaybackSessionMigrateRequestMessageProtobuf
MRAVOutputContextTransport
MRExternalDeviceTransport
_MRRegisterHIDDeviceResultMessageProtobuf
MRNotificationServiceClient
_MRPlaybackSessionMigrateEndMessageProtobuf
MRAVAdditions
_MRUpdatePlayerMessageProtobuf
_MRGameControllerAccelerationProtobuf
_MRVolumeDidChangeMessageProtobuf
_MRPlaybackSessionResponseMessageProtobuf
_MRTelevisionControllerBlockCallback
MRTelevisionController
MRExternalDeviceControllerDelegate
MRCommandInfo
MRCommandInfoAdditions
_MRSetReadyStateMessageProtobuf
_MRPlaybackSessionMigrateResponseMessageProtobuf
_MRRemoteTextInputMessageProtobuf
MRAVRoutingDiscoverySessionConfiguration
MRAVRoutingDiscoverySession
MRCompositeMessage
_MRTransactionPacketProtobuf
_MRPlaybackQueueContextProtobuf
_MRGetVolumeControlCapabilitiesResultMessageProtobuf
_MRSetConnectionStateMessageProtobuf
_MRGetRemoteTextInputSessionProtobuf
MRAVRoutingClientController
_MRAudioFormatSettingsProtobuf
MRIDSDiscoverySession
MRExternalRoutingDiscoverySessionAdditions
_MRCommandOptionsProtobuf
MRSendCommandResultMessage
_MRPlaybackSessionMigrateRequestEventProtobuf
_MRUpdateActiveSystemEndpointRequestProtobuf
MRBlockGuard
MRCryptoPairingSessionBlockDelegate
MRCryptoPairingSessionDelegate
_MRPresentRouteAuthorizationStatusMessageProtobuf
_MRPlaybackSessionMigrateBeginMessageProtobuf
MRAVVirtualOutputDevice
_MRGetVolumeMessageProtobuf
MRContentItem
_MRNotificationMessageProtobuf
MRTransactionPacket
MRTransactionPacketAccumulator
MRTransactionPacketizer
MRTransactionSource
MRTransactionDestination
MRTransactionPacketAdditions
MRClient
MRNotificationMessage
MRSetArtworkMessage
MRProtocolMessage
MRSupportedProtocolMessages
_MRUpdateClientMessageProtobuf
_MRTransactionPacketsProtobuf
_MRDeviceInfoMessageProtobuf
MRRegisterHIDDeviceMessage
MRSendLyricsEventMessage
_MRSendHIDEventMessageProtobuf
MRPlaybackSessionRequestMessage
MRPlaybackSessionResponseMessage
MRPlaybackSessionMigrateRequestMessage
MRPlaybackSessionMigrateResponseMessage
MRPlaybackSessionMigrateBeginMessage
MRPlaybackSessionMigrateEndMessage
MRRemoteTextInputMessage
_MRTextInputTraitsProtobuf
MRNowPlayingPlayerClientCallbacks
MRUpdateActiveSystemEndpointResponse
MRUpdateActiveSystemEndpointRequest
MRNowPlayingPlayerPathInvalidationHandler
_MRRegisterGameControllerResponseMessageProtobuf
MRIDSClientConnection
MRColorComponents
MRAVEndpoint
MRPlaybackQueueSubscriptionController
MRPlaybackQueueClient
MRPlayerPathDictionaryKey
MRAVConcreteOutputDevice
MRAVClusterOutputDevice
MRPlayer
_MRRegisterForGameControllerEventsMessageProtobuf
_MRRemoveEndpointsMessageProtobuf
_MRGameControllerButtonsProtobuf
MRNowPlayingPlayerClientRequests
MRNowPlayingArtwork
MRNowPlayingArtworkImage
MRNowPlayingOriginClient
MRNowPlayingClient
_MRPlaybackSessionRequestMessageProtobuf
MRGenericMessage
MRContentItemAdditions
MRVVIClient
GameControllerDaemonListener
GameControllerDaemonControllerListener
GameControllerDaemonRequestListener
GameControllerDaemon
MRGameControllerDaemonProxy
MRGameControllerDelayedEvents
MRGameControllerDelayedEvent
MRNowPlayingPlayerClient
MRTransactionSourceDelegate
MRProtocolClientConnection
MSVMessageParserDelegate
MRProtocolMessageQueueDelegate
MRProtocolMessageQueueDataSource
MRAVConcreteEndpoint
_MRGetVoiceInputDevicesResponseMessageProtobuf
MRKeyboardMessage
_MRWakeDeviceMessageProtobuf
MREmulatedGameController
_MRLyricsItemProtobuf
MRPlaybackQueue
MRExternalClientConnection
MRTextInputMessage
_MRLanguageOptionGroupProtobuf
_MRSetVolumeMessageProtobuf
_MRVoiceInputDevice
MRNowPlayingOriginClientManager
MRLanguageOptionGroup
_MRColorProtobuf
_MRRegisterVoiceInputDeviceResponseMessageProtobuf
_MRUpdateOutputDevicesMessageProtobuf
_MRSetNowPlayingClientMessageProtobuf
_MRUpdateEndpointsMessageProtobuf
MRCryptoPairingMessage
_MRGetVoiceInputDevicesMessageProtobuf
_MRNowPlayingPlayerProtobuf
_MRUnregisterGameControllerMessageProtobuf
MRVirtualTouchDeviceDescriptor
MRMutableVirtualTouchDeviceDescriptor
MRTextEditingAttributes
MRMutableTextEditingAttributes
MRTextEditingSession
MRMutableTextEditingSession
MRAVReconnaissanceSession
MRAVLightweightReconnaissanceSession
MRAVReconnaissanceSessionAdditions
_MRGameControllerMessageProtobuf
_MRSendVoiceInputMessageProtobuf
_MRPlaybackQueueProtobuf
MRAVOutputDeviceInputStream
AVOutputDeviceCommunicationChannelDelegate
MRAVOutputDeviceOutputStream
_MRVideoThumbnailProtobuf
MRAVConcreteRoutingDiscoverySession
MRAVConcreteRoutingDiscoverySession_APSync
MRAVClusterObserver
MRAVInputStream
AVOutputContextCommunicationChannelDelegate
MRAVOutputStream
MRApplicationActivity
MRMutableApplicationActivity
_MRRegisterHIDDeviceMessageProtobuf
_MRTransactionKeyProtobuf
_MRNowPlayingPlayerPathProtobuf
_MRGameControllerMotionProtobuf
MRPasscodeCredentials
MRProtocolMessageLogger
MRVirtualVoiceInputDeviceDescriptor
MRMutableVirtualVoiceInputDeviceDescriptor
initWithContentItems:location:
arrayWithObjects:count:
initWithContentItems:
initWithNowPlayingInfo:
copy
resolvedPlayerPath
location
contentItems
count
data
hasLocation
queueIdentifier
setQueueIdentifier:
requestIdentifier
setRequestIdentifier:
setResolvedPlayerPath:
hasSendingPlaybackQueueTransaction
sendingPlaybackQueueTransaction
setSendingPlaybackQueueTransaction:
isEqual:
initWithData:
description
contentItemIdentifiers
contentItemWithOffset:
contentItemForIdentifier:
dictionaryRepresentation
mutableCopy
setObject:forKey:
hasRange
range
identifier
containsObject:
initFromTransactionName:
addObject:
countByEnumeratingWithState:objects:count:
supportsSharedQueue
stringByAppendingFormat:
shouldRequestItem
includeArtwork
artworkWidth
stringWithFormat:
artworkHeight
includeInfo
includeLyrics
includeLanguageOptions
includeSections
arrayWithCapacity:
initWithIdentifiers:
dealloc
exceptionWithName:reason:userInfo:
raise
dictionary
numberWithFloat:
timeIntervalsCount
clearTimeIntervals
timeIntervalsAtIndex:
addTimeIntervals:
allocWithZone:
init
isMemberOfClass:
copyWithZone:
timeIntervals
setTimeIntervals:count:
setThumbnailsWidth:
setHasThumbnailsWidth:
hasThumbnailsWidth
setThumbnailsHeight:
setHasThumbnailsHeight:
hasThumbnailsHeight
readFrom:
writeTo:
copyTo:
hash
mergeFrom:
thumbnailsWidth
thumbnailsHeight
_timeIntervals
_thumbnailsHeight
_thumbnailsWidth
_has
setOutputDeviceUID:
setupExternalDevice
deviceID
initWithRoutingContextUID:multipleBuiltInDevices:
initWithAVOutputDevice:sourceInfo:
initWithOutputDevice:
avOutputDevice
initWithOutputDevice:avOutputDevice:connectionType:
initWithTransport:
initWithExternalDevice:outputDeviceUID:
dictionaryWithObjects:forKeys:count:
connectWithOptions:userInfo:
modifyTopologyAddingDevices:removingDevices:settingDevices:completion:
externalDevice
outputDeviceVolume:queue:completion:
outputDeviceVolumeControlCapabilities:queue:completion:
setOutputDeviceVolume:outputDeviceUID:queue:completion:
disconnect:
tearDown
modifyOutputContextOfType:addingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:withReplyQueue:completion:
setWantsVolumeNotifications:
setWantsOutputDeviceNotifications:
setWantsNowPlayingArtworkNotifications:
setWantsNowPlayingNotifications:
delegate
legacyController:volumeDidChange:forOutputDevice:
legacyController:masterVolumeDidChange:
setVolumeCallback:withQueue:
legacyControllerConnectionDidDisconnect:withError:
legacyControllerConnectionDidConnect:
setConnectionStateCallback:withQueue:
defaultCenter
handleVolumeCapabilitiesDidChangeNotification:
addObserver:selector:name:object:
userInfo
objectForKeyedSubscript:
containsString:
isEqualToString:
intValue
legacyController:volumeControlAvailabilityDidChange:forOutputDevice:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
clientConnection:didReceiveMessage:
clientDidDisconnect:error:
initWithAVOutputDevice:
initWithOutputDeviceUID:
connect
addOutputDeviceIDs:completion:
removeOutputDeviceIDs:completion:
setOutputDeviceIDs:completion:
getMasterVolumeWithCompletion:
getOutputDeviceVolume:completion:
getMasterVolumeCapabilitiesWithCompletion:
getOutputDeviceVolumeCapabilities:completion:
setMasterVolume:completion:
setVolume:forOutputDeviceID:completion:
setDelegate:
outputDeviceUID
setExternalDevice:
queue
setQueue:
.cxx_destruct
_delegate
_outputDeviceUID
_externalDevice
_queue
removeAllObjects
objectAtIndex:
numberWithInt:
numberWithBool:
numberWithDouble:
addContentItemIdentifiers:
setContext:
setRequestID:
contentItemIdentifiersCount
clearContentItemIdentifiers
contentItemIdentifiersAtIndex:
setPlayerPath:
setLabel:
contentItemIdentifiersType
setLocation:
setHasLocation:
setLength:
setHasLength:
hasLength
setIncludeMetadata:
setHasIncludeMetadata:
hasIncludeMetadata
setArtworkWidth:
setHasArtworkWidth:
hasArtworkWidth
setArtworkHeight:
setHasArtworkHeight:
hasArtworkHeight
setIncludeLyrics:
setHasIncludeLyrics:
hasIncludeLyrics
setIncludeSections:
setHasIncludeSections:
hasIncludeSections
setIncludeInfo:
setHasIncludeInfo:
hasIncludeInfo
setIncludeLanguageOptions:
setHasIncludeLanguageOptions:
hasIncludeLanguageOptions
hasContext
hasRequestID
setReturnContentItemAssetsInUserCompletion:
setHasReturnContentItemAssetsInUserCompletion:
hasReturnContentItemAssetsInUserCompletion
hasPlayerPath
setCachingPolicy:
setHasCachingPolicy:
hasCachingPolicy
hasLabel
setIsLegacyNowPlayingInfoRequest:
setHasIsLegacyNowPlayingInfoRequest:
hasIsLegacyNowPlayingInfoRequest
length
includeMetadata
context
requestID
setContentItemIdentifiers:
returnContentItemAssetsInUserCompletion
playerPath
cachingPolicy
label
isLegacyNowPlayingInfoRequest
_artworkHeight
_artworkWidth
_cachingPolicy
_contentItemIdentifiers
_context
_label
_length
_location
_playerPath
_requestID
_includeInfo
_includeLanguageOptions
_includeLyrics
_includeMetadata
_includeSections
_isLegacyNowPlayingInfoRequest
_returnContentItemAssetsInUserCompletion
type
playbackSessionData
initWithIdentifier:type:playbackSessionData:
initWithProtobuf:
setIdentifier:
setType:
setPlaybackSessionData:
protobuf
setObject:forKeyedSubscript:
isEqualToDictionary:
_identifier
_type
_playbackSessionData
numberWithUnsignedLongLong:
setProperties:
setControllerID:
setHasControllerID:
hasControllerID
hasProperties
controllerID
properties
_controllerID
_properties
setNowPlayingUpdates:
setArtworkUpdates:
setVolumeUpdates:
setKeyboardUpdates:
setOutputDeviceUpdates:
setSystemEndpointUpdates:
setUnderlyingCodableMessage:
underlyingCodableMessage
nowPlayingUpdates
artworkUpdates
volumeUpdates
keyboardUpdates
outputDeviceUpdates
systemEndpointUpdates
initWithNowPlayingUpdates:artworkUpdates:volumeUpdates:keyboardUpdates:outputDeviceUpdates:systemEndpointUpdates:
initWithDeviceType:deviceSubtype:uid:
deviceType
deviceSubtype
_deviceType
_deviceSubtype
_uid
setToken:
setStartTime:
setHasStartTime:
hasStartTime
setEndTime:
setHasEndTime:
hasEndTime
hasToken
startTime
endTime
token
_endTime
_startTime
_token
setBuffer:
setTime:
hasBuffer
hasTime
setGain:
setHasGain:
hasGain
buffer
time
gain
_gain
_buffer
_time
setPairingFlags:
device
initWithRole:device:
open
removePeer
updatePeer
pairedPeerDevices
mediaRemotePairedDevices
enumerateKeysAndObjectsUsingBlock:
pairingManager
setInvalidationHandler:
setInterruptionHandler:
getPairedPeersWithOptions:completion:
invalidate
info
objectForKey:
setName:
UUIDString
name
model
setLocalizedModelName:
initWithUUIDString:
localizedModelName
setModel:
peerIdentifier
setInfo:
savePairedPeer:options:completion:
removePairedPeer:options:completion:
systemPairingAvailable
setDispatchQueue:
initializePairingSession:
shouldAutoRetryPairingExchange:
addPeer
pairedPeerDevice
messageNumber
setMessageNumber:
reply
setReply:
_messageNumber
_reply
initWithMaxLowPriorityMessagesAllowed:
allValues
initWithUnderlyingCodableMessage:error:
replyIdentifier
UUID
setReplyIdentifier:
initWithMessage:createDataBlock:
push:
peek
readPosition
messageQueue:processData:atReadPosition:
setReadPosition:
isFinished
message
messageQueue:didSendMessage:
flush
messageQueue:didPurgeMessage:
removeObjectForKey:
setIsReply:
isReply
datasource
messageQueue:dataForMessage:
setDatasource:
enqueueMessage:expectedMessage:reply:queue:
reply:
_serialQueue
_datasource
_pendingMessageQueue
_pendingReplyQueue
canPurge
_data
_message
_dataBlock
_readPosition
messagePurgedCallbacks
invokeWithObject:
priority
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
removeObject:
firstObject
removeObjectAtIndex:
_messages
_delayableMessages
_lowPriorityMessagesCount
_maxLowPriorityMessagesAllowed
sharedManager
playerClientForPlayerPath:
clientCallbacks
setPlaybackSessionCallback:
originClientForOrigin:
setPlaybackSessionMigrateBeginCallback:
setPlaybackSessionMigrateEndCallback:
hasOutputDeviceUID
initWithContextType:addingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:
setOutputContextType:
setAddingOutputDeviceUIDs:
setRemovingOutputDeviceUIDs:
setSettingOutputDeviceUIDs:
outputContextType
addingOutputDeviceUIDs
removingOutputDeviceUIDs
settingOutputDeviceUIDs
addDevicesRequestMessageWithContextType:outputDeviceUIDs:
removeDevicesRequestMessageWithContextType:outputDeviceUIDs:
setDevicesRequestMessageWithContextType:outputDeviceUIDs:
contextType
descriptor
addOutputDevices:
outputDevices
initWithCapacity:
initWithDescriptor:
initWithOutputDevices:
_outputDevices
setOutputDeviceUIDs:
outputDeviceUIDs
initWithOutputDeviceUIDs:
request
setRequest:
initWithRequest:
_request
mr_map:
setEndpoints:
setEndpointFeatures:
endpoints
endpointFeatures
initWithEndpoints:endpointFeature:
features
_endpoints
setEndpointUIDs:
endpointUIDs
initWithEndpointUIDs:
numberWithUnsignedLong:
unsignedLongValue
setNumberStyle:
numberFromString:
_init
isRemoteControllable
canRelayCommunicationChannel
groupID
setEndpoint:
isProxyGroupPlayer
designatedGroupLeader
groupContainsGroupLeader
isAirPlayReceiverSessionActive
parentGroupIdentifier
initWithDesignatedGroupLeader:outputDevices:
connectionType
uniqueIdentifier
setOutputDevices:
canModifyGroupMembership
_uniqueIdentifier
_designatedGroupLeader
_connectionType
initWithSettings:
initWithFormat:packetCapacity:maximumPacketSize:
initWithFormatSettings:packetCapacity:maximumPacketSize:
formatSettings
_formatSettings
packetCapacity
packetCount
setPacketCount:
packetDescriptions
setRoute:
hasRoute
inputType
setInputType:
setHasInputType:
hasInputType
inputTypeAsString:
StringAsInputType:
route
_inputType
_route
addSupportedCommand:
supportedCommandsCount
clearSupportedCommands
supportedCommandAtIndex:
supportedCommandType
supportedCommands
setSupportedCommands:
_supportedCommands
skeleton
playbackQueue
hasArtworkData
mr_filter:
initWithNowPlayingState:
state
_state
setState:
initWithConnectionState:
encryptionType
setHiliteMode:
hiliteMode
initWithHiliteMode:
setClient:
client
initWithClient:
initWithPlayerPath:
player
setPlayer:
addContentItems:
metadata
artworkURL
title
hasElapsedTime
hasDuration
initWithContentItems:forPlayerPath:
bundleIdentifier
setDisplayID:
displayID
initWithDefaultSupportedCommands:forPlayerPath:
bundleID
setNowPlayingInfo:
setPlaybackQueue:
setDisplayName:
setPlaybackQueueCapabilities:
hasNowPlayingInfo
hasSupportedCommands
hasPlaybackQueue
hasDisplayID
hasDisplayName
playbackState
setPlaybackState:
setHasPlaybackState:
hasPlaybackState
playbackStateAsString:
StringAsPlaybackState:
hasPlaybackQueueCapabilities
hasRequest
setPlaybackStateTimestamp:
setHasPlaybackStateTimestamp:
hasPlaybackStateTimestamp
nowPlayingInfo
displayName
playbackQueueCapabilities
playbackStateTimestamp
_playbackStateTimestamp
_displayID
_displayName
_nowPlayingInfo
_playbackQueue
_playbackQueueCapabilities
_playbackState
callStackSymbols
objectAtIndexedSubscript:
sharedAVSystemController
setAttribute:forKey:error:
localOriginClient
setCanBeNowPlayingApp:
isOverrideApp
setIsOverrideApp:
setActiveNowPlayingClient:
initWithOrigin:client:player:
clientForPlayerPath:
updateActivePlayerPath:completion:
requestActiveForPlayerPath:completion:
isLocal
isPictureInPictureEnabled
setPictureInPictureEnabled:
reevaluateActivePlayerWithReason:completion:
playerClients
defaultPlayer
nowPlayingClients
mxSessionIDs
setMxSessionIDs:
localOrigin
date
timeIntervalSinceDate:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
mergeClient:
processIdentifier
setProcessIdentifier:
setBundleIdentifier:
parentApplicationBundleIdentifier
extendedBundleIdentifierHierarchy
addObjectsFromArray:
setExtendedBundleIdentifierHierarchy:
origin
localClient
setParentApplicationBundleIdentifier:
setVisibility:
setAlpha:
setBlue:
setGreen:
setRed:
setTintColor:
updatePlayer:
sharedServiceClient
workerQueue
isResolved
playerClientRequestsForPlayerPath:
handlePlaybackStateRequestWithCompletion:
timeIntervalSinceReferenceDate
initWithTimeIntervalSinceReferenceDate:
updatePlaybackState:date:
notificationClient
registerForNowPlayingNotificationsWithQueue:
unregisterForNowPlayingNotifications
registerForNowPlayingNotificationsWithQueue:force:
nowPlayingNotifications
allObjects
setVideoThumbnailsCallback:
setAudioAmplitudeSamplesCallback:
addCharacteristics:
setLanguageTag:
characteristicsCount
clearCharacteristics
characteristicsAtIndex:
characteristicsType
setHasType:
hasType
hasLanguageTag
hasIdentifier
languageTag
characteristics
setCharacteristics:
_characteristics
_languageTag
setImageData:
imageData
numberWithLongLong:
setAlbum:
setArtist:
setTitle:
setRadioStationHash:
setRadioStationName:
setArtworkDataDigest:
hasAlbum
hasArtist
setDuration:
setHasDuration:
setElapsedTime:
setHasElapsedTime:
setPlaybackRate:
setHasPlaybackRate:
hasPlaybackRate
repeatMode
setRepeatMode:
setHasRepeatMode:
hasRepeatMode
repeatModeAsString:
StringAsRepeatMode:
shuffleMode
setShuffleMode:
setHasShuffleMode:
hasShuffleMode
shuffleModeAsString:
StringAsShuffleMode:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasTitle
setUniqueIdentifier:
setHasUniqueIdentifier:
hasUniqueIdentifier
setIsExplicitTrack:
setHasIsExplicitTrack:
hasIsExplicitTrack
setIsMusicApp:
setHasIsMusicApp:
hasIsMusicApp
setRadioStationIdentifier:
setHasRadioStationIdentifier:
hasRadioStationIdentifier
hasRadioStationHash
hasRadioStationName
hasArtworkDataDigest
setIsAlwaysLive:
setHasIsAlwaysLive:
hasIsAlwaysLive
setIsAdvertisement:
setHasIsAdvertisement:
hasIsAdvertisement
album
artist
duration
elapsedTime
playbackRate
timestamp
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationHash
radioStationName
artworkDataDigest
isAlwaysLive
isAdvertisement
_duration
_elapsedTime
_radioStationIdentifier
_timestamp
_album
_artist
_artworkDataDigest
_playbackRate
_radioStationHash
_radioStationName
_repeatMode
_shuffleMode
_title
_isAdvertisement
_isAlwaysLive
_isExplicitTrack
_isMusicApp
setSampleRate:
setHasSampleRate:
hasSampleRate
sampleRate
_sampleRate
setOptions:
setSenderAppDisplayID:
setDestinationAppDisplayID:
setRemoteControlInterfaceID:
setAppOptions:
command
setCommand:
setHasCommand:
hasCommand
commandAsString:
StringAsCommand:
hasOptions
setOriginUID:
setHasOriginUID:
hasOriginUID
hasSenderAppDisplayID
hasDestinationAppDisplayID
setDestinationAppProcessID:
setHasDestinationAppProcessID:
hasDestinationAppProcessID
hasRemoteControlInterfaceID
hasAppOptions
options
originUID
senderAppDisplayID
destinationAppDisplayID
destinationAppProcessID
remoteControlInterfaceID
appOptions
_destinationAppProcessID
_appOptions
_command
_destinationAppDisplayID
_options
_originUID
_remoteControlInterfaceID
_senderAppDisplayID
hasButtons
hasMotion
initWithGameControllerEvent:controllerID:
event
shouldLog
_priority
initWithGameControllerProperties:controllerID:
initWithProperties:
initWithControllerID:
setInputModeFlags:
inputModeFlags
initWithInputMode:
inputMode
addAvailableLanguageOptions:
addCurrentLanguageOptions:
addSections:
setMetadata:
setArtworkData:
availableLanguageOptionsCount
clearAvailableLanguageOptions
availableLanguageOptionsAtIndex:
currentLanguageOptionsCount
clearCurrentLanguageOptions
currentLanguageOptionsAtIndex:
setLyrics:
sectionsCount
clearSections
sectionsAtIndex:
setParentIdentifier:
setAncestorIdentifier:
availableLanguageOptionsType
currentLanguageOptionsType
sectionsType
hasMetadata
hasInfo
hasLyrics
hasParentIdentifier
hasAncestorIdentifier
hasQueueIdentifier
hasRequestIdentifier
setArtworkDataWidth:
setHasArtworkDataWidth:
hasArtworkDataWidth
setArtworkDataHeight:
setHasArtworkDataHeight:
hasArtworkDataHeight
artworkData
availableLanguageOptions
setAvailableLanguageOptions:
currentLanguageOptions
setCurrentLanguageOptions:
lyrics
sections
setSections:
parentIdentifier
ancestorIdentifier
artworkDataWidth
artworkDataHeight
_ancestorIdentifier
_artworkData
_artworkDataHeight
_artworkDataWidth
_availableLanguageOptions
_currentLanguageOptions
_info
_lyrics
_metadata
_parentIdentifier
_queueIdentifier
_requestIdentifier
_sections
setRequestByRange:
setRequestByIdentifiers:
requestByRange
requestByIdentifiers
requestByRequest
stringByAppendingString:
isContainer
hasIsContainer
isPlayable
hasIsPlayable
isExplicitItem
hasIsExplicitItem
isStreamingContent
hasIsStreamingContent
isCurrentlyPlaying
hasIsCurrentlyPlaying
isSharable
hasIsSharable
isLiked
hasIsLiked
isInWishList
hasIsInWishList
isSteerable
hasIsSteerable
isLoading
hasIsLoading
artworkAvailable
hasArtworkAvailable
infoAvailable
hasInfoAvailable
languageOptionsAvailable
hasLanguageOptionsAvailable
lyricsAvailable
hasLyricsAvailable
playbackProgress
hasPlaybackProgress
defaultPlaybackRate
hasDefaultPlaybackRate
downloadProgress
hasDownloadProgress
playlistType
hasPlaylistType
radioStationType
hasRadioStationType
editingStyleFlags
hasEditingStyleFlags
mediaType
hasMediaType
mediaSubType
hasMediaSubType
episodeType
hasEpisodeType
playCount
hasPlayCount
numberOfSections
hasNumberOfSections
chapterCount
hasChapterCount
totalDiscCount
hasTotalDiscCount
totalTrackCount
hasTotalTrackCount
downloadState
hasDownloadState
artworkDataWidthDeprecated
hasArtworkDataWidthDeprecated
artworkDataHeightDeprecated
hasArtworkDataHeightDeprecated
elapsedTimeTimestamp
hasElapsedTimeTimestamp
inferredTimestamp
hasInferredTimestamp
seasonNumber
hasSeasonNumber
episodeNumber
hasEpisodeNumber
discNumber
hasDiscNumber
trackNumber
hasTrackNumber
iTunesStoreIdentifier
hasITunesStoreIdentifier
iTunesStoreSubscriptionIdentifier
hasITunesStoreSubscriptionIdentifier
iTunesStoreArtistIdentifier
hasITunesStoreArtistIdentifier
iTunesStoreAlbumIdentifier
hasITunesStoreAlbumIdentifier
legacyUniqueIdentifier
hasLegacyUniqueIdentifier
hasReleaseDate
releaseDate
dateWithTimeIntervalSince1970:
hasCurrentPlaybackDateData
currentPlaybackDateData
hasAppMetricsData
appMetricsData
hasNowPlayingInfoData
nowPlayingInfoData
hasUserInfoData
userInfoData
hasDeviceSpecificUserInfoData
deviceSpecificUserInfoData
hasCollectionInfoData
collectionInfoData
purchaseInfoData
subtitle
albumName
trackArtistName
albumArtistName
directorName
localizedContentRating
collectionIdentifier
profileIdentifier
composer
genre
contentIdentifier
radioStationString
seriesName
hasLyricsURL
lyricsURL
initWithString:
serviceIdentifier
brandIdentifier
localizedDurationString
artworkIdentifier
artworkMIMEType
albumYear
hasAssetURLString
assetURLString
hasArtworkURL
hasArtworkFileURL
artworkFileURL
hasArtworkURLTemplatesData
artworkURLTemplatesData
setIsContainer:
hasContainer
setHasIsContainer:
setIsPlayable:
hasPlayable
setHasIsPlayable:
setIsExplicitItem:
hasExplicitItem
setHasIsExplicitItem:
setIsStreamingContent:
hasStreamingContent
setHasIsStreamingContent:
setIsCurrentlyPlaying:
hasCurrentlyPlaying
setHasIsCurrentlyPlaying:
hasAlwaysLive
setIsSharable:
hasSharable
setHasIsSharable:
setIsLiked:
hasLiked
setHasIsLiked:
setIsInWishList:
hasInWishList
setHasIsInWishList:
setIsSteerable:
hasSteerable
setHasIsSteerable:
setIsLoading:
hasLoading
setHasIsLoading:
setArtworkAvailable:
setHasArtworkAvailable:
setInfoAvailable:
setHasInfoAvailable:
setLanguageOptionsAvailable:
setHasLanguageOptionsAvailable:
setLyricsAvailable:
setHasLyricsAvailable:
setPlaybackProgress:
setHasPlaybackProgress:
setDefaultPlaybackRate:
setHasDefaultPlaybackRate:
setDownloadProgress:
setHasDownloadProgress:
setPlaylistType:
setHasPlaylistType:
setRadioStationType:
setHasRadioStationType:
setEditingStyleFlags:
setHasEditingStyleFlags:
setMediaType:
setHasMediaType:
setMediaSubType:
setHasMediaSubType:
setEpisodeType:
setHasEpisodeType:
setPlayCount:
setHasPlayCount:
setNumberOfSections:
setHasNumberOfSections:
setChapterCount:
setHasChapterCount:
setTotalDiscCount:
setHasTotalDiscCount:
setTotalTrackCount:
setHasTotalTrackCount:
setDownloadState:
setHasDownloadState:
setArtworkDataWidthDeprecated:
setHasArtworkDataWidthDeprecated:
setArtworkDataHeightDeprecated:
setHasArtworkDataHeightDeprecated:
setElapsedTimeTimestamp:
setHasElapsedTimeTimestamp:
setInferredTimestamp:
setHasInferredTimestamp:
setSeasonNumber:
setHasSeasonNumber:
setEpisodeNumber:
setHasEpisodeNumber:
setDiscNumber:
setHasDiscNumber:
setTrackNumber:
setHasTrackNumber:
setITunesStoreIdentifier:
setHasITunesStoreIdentifier:
setITunesStoreSubscriptionIdentifier:
setHasITunesStoreSubscriptionIdentifier:
setITunesStoreArtistIdentifier:
setHasITunesStoreArtistIdentifier:
setITunesStoreAlbumIdentifier:
setHasITunesStoreAlbumIdentifier:
setLegacyUniqueIdentifier:
setHasLegacyUniqueIdentifier:
appMetrics
setAppMetricsData:
setNowPlayingInfoData:
setUserInfoData:
deviceSpecificUserInfo
setDeviceSpecificUserInfoData:
collectionInfo
setCollectionInfoData:
setPurchaseInfoData:
setSubtitle:
setAlbumName:
setTrackArtistName:
setAlbumArtistName:
setDirectorName:
setLocalizedContentRating:
setCollectionIdentifier:
setProfileIdentifier:
assetURL
absoluteString
setAssetURLString:
setComposer:
setGenre:
setContentIdentifier:
setRadioStationString:
setSeriesName:
setLyricsURL:
setServiceIdentifier:
setBrandIdentifier:
setLocalizedDurationString:
setArtworkIdentifier:
setArtworkMIMEType:
setArtworkURL:
setArtworkFileURL:
setAlbumYear:
artworkURLTemplates
setArtworkURLTemplatesData:
calculatedPlaybackPositionFromDate:
isEqualToData:
isEqualToDate:
currentPlaybackDate
isEqualToArray:
initWithFormat:
setContainer:
setPlayable:
setExplicitItem:
setStreamingContent:
setCurrentlyPlaying:
setAlwaysLive:
setSharable:
setLiked:
setInWishList:
setSteerable:
setLoading:
setAppMetrics:
setUserInfo:
setDeviceSpecificUserInfo:
setCollectionInfo:
setReleaseDate:
setCurrentPlaybackDate:
setAssetURL:
setArtworkURLTemplates:
numberWithInteger:
calculatedPlaybackPosition
setHasContainer:
setHasPlayable:
setHasExplicitItem:
setHasStreamingContent:
setHasCurrentlyPlaying:
setHasAlwaysLive:
setHasSharable:
setHasLiked:
setHasInWishList:
setHasSteerable:
setHasLoading:
_container
_hasContainer
_playable
_hasPlayable
_explicitItem
_hasExplicitItem
_streamingContent
_hasStreamingContent
_currentlyPlaying
_hasCurrentlyPlaying
_alwaysLive
_hasAlwaysLive
_sharable
_hasSharable
_liked
_hasLiked
_inWishList
_hasInWishList
_steerable
_hasSteerable
_loading
_hasLoading
_artworkAvailable
_hasArtworkAvailable
_infoAvailable
_hasInfoAvailable
_languageOptionsAvailable
_hasLanguageOptionsAvailable
_lyricsAvailable
_hasLyricsAvailable
_hasPlaybackProgress
_hasPlaybackRate
_hasDefaultPlaybackRate
_hasDownloadProgress
_hasPlaylistType
_hasRadioStationType
_hasEditingStyleFlags
_hasMediaType
_hasMediaSubType
_hasEpisodeType
_hasPlayCount
_hasNumberOfSections
_hasChapterCount
_hasTotalDiscCount
_hasTotalTrackCount
_hasDownloadState
_hasArtworkDataWidthDeprecated
_hasArtworkDataHeightDeprecated
_hasDuration
_hasStartTime
_hasElapsedTime
_hasElapsedTimeTimestamp
_hasInferredTimestamp
_hasSeasonNumber
_hasEpisodeNumber
_hasDiscNumber
_hasTrackNumber
_hasRadioStationIdentifier
_hasITunesStoreIdentifier
_hasITunesStoreSubscriptionIdentifier
_hasITunesStoreArtistIdentifier
_hasITunesStoreAlbumIdentifier
_hasLegacyUniqueIdentifier
_playbackProgress
_defaultPlaybackRate
_downloadProgress
_playlistType
_radioStationType
_editingStyleFlags
_mediaType
_mediaSubType
_episodeType
_playCount
_numberOfSections
_chapterCount
_totalDiscCount
_totalTrackCount
_downloadState
_artworkDataWidthDeprecated
_artworkDataHeightDeprecated
_elapsedTimeTimestamp
_inferredTimestamp
_seasonNumber
_episodeNumber
_discNumber
_trackNumber
_iTunesStoreIdentifier
_iTunesStoreSubscriptionIdentifier
_iTunesStoreArtistIdentifier
_iTunesStoreAlbumIdentifier
_legacyUniqueIdentifier
_purchaseInfoData
_appMetrics
_userInfo
_deviceSpecificUserInfo
_collectionInfo
_releaseDate
_currentPlaybackDate
_subtitle
_albumName
_trackArtistName
_albumArtistName
_directorName
_localizedContentRating
_collectionIdentifier
_profileIdentifier
_assetURL
_composer
_genre
_contentIdentifier
_radioStationString
_seriesName
_lyricsURL
_serviceIdentifier
_brandIdentifier
_localizedDurationString
_artworkIdentifier
_artworkMIMEType
_artworkURL
_artworkFileURL
_artworkURLTemplates
_albumYear
setLaunchApplication:
setHasLaunchApplication:
hasLaunchApplication
launchApplication
_launchApplication
sharedAudioPresentationContext
createOutputContextWithUniqueIdentifier:
localDeviceUID
sharedOutputContextController
_outputContextDevicesDidChangeNotification:
outputContextDataSourceOutputDeviceDidChangeVolume:
outputContextDataSourceOutputDeviceDidChangeVolumeControlCapabilities:
removeObserver:
decodeObjectOfClass:forKey:
encodeObject:forKey:
scheduleEndpointOutputDevicesDidChangeNotification
currentSettings
supportNanoLinkAgent
addOutputDevices:initiator:withCallbackQueue:block:
removeOutputDevices:initiator:withCallbackQueue:block:
setOutputDevices:initiator:withCallbackQueue:block:
setVolume:outputDeviceUID:
volumeForOutputDeviceUID:
volumeControlCapabilitiesForOutputDeviceUID:
UTF8String
object
postNotificationName:object:userInfo:
sharedLocalEndpointForRoutingContextWithUID:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
personalOutputDevices
addOutputDevices:initiator:withReplyQueue:completion:
removeOutputDevices:initiator:withReplyQueue:completion:
setOutputDevices:initiator:withReplyQueue:completion:
setOutputDeviceVolume:outputDevice:queue:completion:
volumeControlCapabilitiesForOutputDevice:queue:completion:
removeOutputDeviceFromParentGroup:queue:completion:
_outputContext
_outputContextController
modelSpecificInfoData
setWithObjects:
sourceInfo
routingContextUID
multipleBuiltInDevices
clusterCompositions
deviceSubType
setDeviceType:
isVolumeControlAvailable
setIsVolumeControlAvailable:
volume
setVolume:
volumeCapabilities
setVolumeCapabilities:
modelID
firmwareVersion
logicalDeviceID
macAddress
canAccessRemoteAssets
canAccessAppleMusic
canAccessiCloudMusicLibrary
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
supportsBufferedAirPlay
isGroupLeader
parentGroupContainsDiscoverableLeader
isGroupable
isDeviceGroupable
batteryLevel
hasBatteryLevel
isLocalDevice
supportsExternalScreen
requiresAuthorization
hasVolumeCapabilities
isAddedToHomeKit
bluetoothID
supportsHAP
usingJSONProtocol
initWithSkeleton:
MACAddress
modelSpecificInfo
isUsingJSONProtocol
clusterComposition
_protobuf
_sourceInfo
_modelSpecificInfo
_clusterComposition
clientDiscoveryStates
numberWithUnsignedInt:
reevaluateDiscoveryModeForSession:
setRoutingContextUID:
updateSharedSession
alwaysAllowUpdates
setAlwaysAllowUpdates:
populatesExternalDevice
setPopulatesExternalDevice:
sharedDiscoverySessionForClass:configuration:
setSharedSession:
addEndpointsChangedCallback:
addOutputDevicesChangedCallback:
mappedEndpointTokenForToken:
removeEndpointsChangedCallback:
mappedOutputDeviceTokenForToken:
removeOutputDevicesChangedCallback:
transferCallbacksFromSession:toSession:
setDiscoveryMode:
objectEnumerator
invokeWithTarget:
methodSignatureForSelector:
initWithSession:configuration:
discoveryMode
setConfiguration:
forwardInvocation:
configuration
sharedSession
endpointCallbacks
setEndpointCallbacks:
endpointTokenMap
setEndpointTokenMap:
outputDeviceCallbacks
setOutputDeviceCallbacks:
outputDeviceTokenMap
setOutputDeviceTokenMap:
_discoveryMode
_configuration
_sharedSession
_endpointCallbacks
_endpointTokenMap
_outputDeviceCallbacks
_outputDeviceTokenMap
setHasState:
hasState
stateAsString:
StringAsState:
setRouteUID:
hasRouteUID
routeUID
_routeUID
setHasVolume:
hasVolume
_volume
setCapabilities:
setEndpointUID:
hasCapabilities
hasEndpointUID
capabilities
endpointUID
_capabilities
_endpointUID
mediaRemoteServiceName
initWithService:
sharedIDSService
dataWithBytes:length:
handleIncomingData:service:account:fromID:context:
setProtobufAction:forIncomingRequestsOfType:
addDelegate:queue:
handleDataReceived:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithService:type:
_service
initWithBytes:length:
initWithProtobufData:type:isResponse:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
write:maxLength:
hasSpaceAvailable
setEvent:
setVirtualDeviceID:
setHasVirtualDeviceID:
hasVirtualDeviceID
hasEvent
virtualDeviceID
_virtualDeviceID
_event
componentsJoinedByString:
supportsBluetoothSharing
setLogicalDeviceID:
setGroupID:
setModelID:
setMacAddress:
setCanAccessRemoteAssets:
setCanAccessAppleMusic:
setCanAccessiCloudMusicLibrary:
setCanPlayEncryptedProgressiveDownloadAssets:
setCanFetchMediaDataFromSender:
setPresentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets:
setIsRemoteControllable:
setCanRelayCommunicationChannel:
setSupportsBufferedAirPlay:
setIsGroupLeader:
setGroupContainsGroupLeader:
setIsAirPlayReceiverSessionActive:
setParentGroupContainsDiscoverableLeader:
setParentGroupIdentifier:
setIsGroupable:
setIsDeviceGroupable:
setIsProxyGroupPlayer:
setDeviceSubType:
setIsAddedToHomeKit:
setBluetoothID:
setSupportsHAP:
setModelSpecificInfoData:
setBatteryLevel:
setIsLocalDevice:
setSupportsExternalScreen:
setRequiresAuthorization:
setUsingJSONProtocol:
setMultipleBuiltInDevices:
setSourceInfo:
addClusterComposition:
jsonClientUIDs
mr_any:
localDeviceLocalizedName
capabilitiesDescription
composedTypeDescription
roleDescription
jsonEncodableDictionaryRepresentation
isPersonalRoute
debugName
containsUID:
playingPairedDeviceName
isPickedOnPairedDevice
endpoint
supportsRapport
currentBluetoothListeningMode
availableBluetoothListeningModes
_canAccessRemoteAssets
_canAccessAppleMusic
_canAccessiCloudMusicLibrary
_canPlayEncryptedProgressiveDownloadAssets
_canFetchMediaDataFromSender
_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
_remoteControllable
_groupLeader
_groupContainsGroupLeader
_airPlayReceiverSessionActive
_groupable
_supportsBluetoothSharing
_proxyGroupPlayer
_canRelayCommunicationChannel
_supportsBufferedAirPlay
_deviceGroupable
_pickedOnPairedDevice
_hasBatteryLevel
_localDevice
_supportsExternalScreen
_requiresAuthorization
_parentGroupContainsDiscoverableLeader
_volumeControlAvailable
_supportsHAP
_supportsRapport
_isAddedToHomeKit
_batteryLevel
_name
_modelID
_firmwareVersion
_groupID
_MACAddress
_playingPairedDeviceName
_parentGroupIdentifier
_bluetoothID
_endpoint
_logicalDeviceID
_currentBluetoothListeningMode
_availableBluetoothListeningModes
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
mutableCopyWithZone:
hostName
hostPort
deviceInfo
supportedMessages
usingSystemPairing
_hostName
_hostPort
_supportedMessages
_deviceInfo
_usingSystemPairing
setHostName:
setHostPort:
setSupportedMessages:
setDeviceInfo:
setUsingSystemPairing:
getPersonalOutputDevices:
setRegisteredCallbacks:
setNotifications:
getExternalDeviceMetadataWithCompletion:
getExternalDeviceIsPairedWithCompletion:
getCustomOriginDataWithCompletion:
getConnectionStateWithCompletion:
unpair
outputDeviceVolume:withCompletion:
setOutputDeviceVolume:forOutputDevice:withCompletion:
outputDeviceVolumeControlCapabilities:withCompletion:
modifyOutputContextOfType:addingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:completion:
sendCustomData:withName:
pingWithTimeout:callback:
sendButtonEventWithUsagePage:usage:down:
interfaceWithProtocol:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
hostedExternalDeviceConnectionStateDidChange:withError:
hostedExternalDeviceNameDidChange:
hostedExternalDeviceDidReceiveCustomData:withName:
hostedExternalDeviceVolumeDidChange:forEndpointWithIdentifier:forOutputDeviceWithIdentifier:
hostedExternalDeviceEndpointDidChange:
hostedExternalDeviceVolumeCapabilitiesDidChange:forEndpointWithIdentifier:forOutputDeviceWithIdentifier:
cStringUsingEncoding:
initWithMRError:description:
initWithListenerEndpoint:
serviceInterface
setRemoteObjectInterface:
clientInterface
setExportedInterface:
exportedInterface
protocol
weakProxyWithObject:protocol:
setExportedObject:
resume
_handleDeviceInfoDidChange:
appendFormat:
appendString:
connectionState
synchronousRemoteObjectProxyWithErrorHandler:
boolValue
remoteObjectProxy
connectionStateCallback
setConnectionStateCallback:
setConnectionStateCallbackQueue:
nameCallback
setNameCallback:
setNameCallbackQueue:
customDataCallback
setCustomDataCallback:
setCustomDataCallbackQueue:
volumeCallback
setVolumeCallback:
setVolumeCallbackQueue:
connectionStateCallbackQueue
nameCallbackQueue
customDataCallbackQueue
volumeCallbackQueue
setDistantExternalDevice:
remoteObjectProxyWithErrorHandler:
initWithExternalDeviceListenerEndpoint:
listenerEndpoint
isValid
port
wantsNowPlayingNotifications
wantsNowPlayingArtworkNotifications
wantsVolumeNotifications
wantsOutputDeviceNotifications
wantsEndpointChangeNotifications
setWantsEndpointChangeNotifications:
isPaired
isUsingSystemPairing
customOrigin
setPairingCallback:withQueue:
setNameCallback:withQueue:
setPairingAllowedCallback:withQueue:
setCustomDataCallback:withQueue:
ping:callback:withQueue:
sendButtonEvent:
hasEverAttemptedToConnect
_xpcQueue
_externalDeviceMetadata
_hostedExternalDeviceConnection
_callbacks
_deviceNotifications
_connectionState
_customOrigin
_isValid
_hasEverAtteptedToConnectWhileInvalid
_isPaired
_hasEverAttemptedToConnect
_connectionStateCallback
_connectionStateCallbackQueue
_nameCallback
_nameCallbackQueue
_customDataCallback
_customDataCallbackQueue
_volumeCallback
_volumeCallbackQueue
array
initWithType:languageTag:characteristics:displayName:identifier:
allowsKeyedCoding
encodeInt32:forKey:
raise:format:
decodeInt32ForKey:
decodeObjectOfClasses:forKey:
initWithMRError:
failWithError:
automaticLanguageOptionWithType:
isAutomaticLanguageOptionWithType:
_hasType
setCurrentPlaybackDateData:
hasSubtitle
hasAlbumName
hasTrackArtistName
hasAlbumArtistName
hasDirectorName
setHasReleaseDate:
hasLocalizedContentRating
hasCollectionIdentifier
hasProfileIdentifier
hasArtworkMIMEType
hasComposer
hasGenre
hasContentIdentifier
hasRadioStationString
hasPurchaseInfoData
hasSeriesName
hasServiceIdentifier
hasArtworkIdentifier
hasBrandIdentifier
hasLocalizedDurationString
hasAlbumYear
_appMetricsData
_artworkURLTemplatesData
_assetURLString
_collectionInfoData
_currentPlaybackDateData
_deviceSpecificUserInfoData
_nowPlayingInfoData
_userInfoData
_isContainer
_isCurrentlyPlaying
_isExplicitItem
_isInWishList
_isLiked
_isLoading
_isPlayable
_isSharable
_isSteerable
_isStreamingContent
setDiagnosticInfo:
setDateGenerated:
setHasDateGenerated:
hasDateGenerated
hasDiagnosticInfo
dateGenerated
diagnosticInfo
_dateGenerated
_diagnosticInfo
mainBundle
infoDictionary
setBundleVersion:
processInfo
processName
setLastSupportedMessageType:
initWithLastSupportedMessageType:
hasLastSupportedMessageType
lastSupportedMessageType
initWithDeviceInfo:
supportedProtocolMessages
_supportedProtocolMessages
password
securityType
setPassword:
setSecurityType:
addHandlerReturnStatusData:
handlerReturnStatusCount
clearHandlerReturnStatus
handlerReturnStatusAtIndex:
addHandlerReturnStatus:
handlerReturnStatusDatasCount
clearHandlerReturnStatusDatas
handlerReturnStatusDataAtIndex:
setCommandID:
handlerReturnStatusDataType
sendError
setSendError:
setHasSendError:
hasSendError
sendErrorAsString:
StringAsSendError:
handlerReturnStatus
setHandlerReturnStatus:count:
handlerReturnStatusAsString:
StringAsHandlerReturnStatus:
hasCommandID
handlerReturnStatusDatas
setHandlerReturnStatusDatas:
commandID
_handlerReturnStatus
_commandID
_handlerReturnStatusDatas
_sendError
connection
getDeviceInfoForPlayerPath:queue:completion:
resolvePlayerPath:queue:completion:
mrXPCConnection
setMrXPCConnection:
setConnection:
connectionQueue
setConnectionQueue:
clientCallbackQueue
setClientCallbackQueue:
clientCallbackPriorityQueue
setClientCallbackPriorityQueue:
browsableContentQueue
setBrowsableContentQueue:
voiceInputQueue
setVoiceInputQueue:
televisionQueue
setTelevisionQueue:
agentQueue
setAgentQueue:
isRunning
setIsRunning:
clientModule
browsableContentEndpoint
voiceRecordingEndpoint
televisionEndpoint
agentEndpoint
_isRunning
_mrXPCConnection
_connection
_connectionQueue
_clientCallbackQueue
_clientCallbackPriorityQueue
_browsableContentQueue
_voiceInputQueue
_televisionQueue
_agentQueue
initWithConnection:queue:
setMessageHandler:
dataWithBytesNoCopy:length:freeWhenDone:
propertyListWithData:options:format:error:
bytes
error
dateWithTimeIntervalSinceReferenceDate:
dataWithPropertyList:format:options:error:
sendSyncMessage:error:
deviceInfosFromData:
initWithJSONData:pipeEndpoint:
dictionaryWithCapacity:
null
sendMessage:queue:reply:
initWithPlaybackSession:
setError:
playbackSession
initWithVolume:outputDeviceUID:
initWithVolume:
setLastPlayingTimestamp:
setHasLastPlayingTimestamp:
hasLastPlayingTimestamp
lastPlayingTimestamp
_lastPlayingTimestamp
addSupportedFormats:
supportedFormatsCount
clearSupportedFormats
supportedFormatsAtIndex:
setDefaultFormat:
supportedFormatsType
hasDefaultFormat
supportedFormats
setSupportedFormats:
defaultFormat
_defaultFormat
_supportedFormats
initWithIdentifier:type:displayName:
setHasIdentifier:
setLocal:
_local
addPacketDescriptions:
setFormatSettings:
setContents:
packetDescriptionsCount
clearPacketDescriptions
packetDescriptionsAtIndex:
packetDescriptionsType
hasFormatSettings
setPacketCapacity:
setHasPacketCapacity:
hasPacketCapacity
setMaximumPacketSize:
setHasMaximumPacketSize:
hasMaximumPacketSize
setHasPacketCount:
hasPacketCount
hasContents
maximumPacketSize
contents
setPacketDescriptions:
_maximumPacketSize
_packetCapacity
_packetCount
_contents
_packetDescriptions
handleResetConnectionRequest:service:account:fromID:context:
_maybeDeviceConnectionStatusChanged
uniqueIDOverride
uniqueID
setDeviceUID:
productName
setDeviceClass:
isConnected
devices
fromID
postNotificationName:object:
isDefaultPairedDevice
setDevice:
deviceDebugName
resetConnection
_handleDeviceDidBecomeActive:
_device
_initialStateLoaded
_idsQueue
_calloutQueue
height
width
shouldLogArtwork
setHeight:
setWidth:
initWithImageData:height:width:
_imageData
_height
_width
hasRoutingContextUID
setHasMultipleBuiltInDevices:
hasMultipleBuiltInDevices
_routingContextUID
_multipleBuiltInDevices
substringToIndex:
uppercaseString
stringByReplacingCharactersInRange:withString:
valueForKey:
methodForSelector:
mr_valueForPotentiallyUndefinedKey:
setValue:forKey:
setDictionaryKeyToProtobufKeyMapping:
createDictionaryFromProtobuf:
createProtobufFromDictionary:
dictionaryKeyToProtobufKeyMapping
protobufClass
setProtobufClass:
dictionaryValueToProtobufValueTransformer
setDictionaryValueToProtobufValueTransformer:
protobufValueToDictionaryValueTransformer
setProtobufValueToDictionaryValueTransformer:
_protobufKeyToDictionaryKeyMapping
_dictionaryKeyToProtobufKeyMapping
_protobufClass
_dictionaryValueToProtobufValueTransformer
_protobufValueToDictionaryValueTransformer
setHasRequestByRange:
hasRequestByRange
setHasRequestByIdentifiers:
hasRequestByIdentifiers
setRequestByRequest:
setHasRequestByRequest:
hasRequestByRequest
_requestByIdentifiers
_requestByRange
_requestByRequest
unsignedIntValue
addDeviceIDs:
setErrorCode:
deviceIDsCount
deviceIDsAtIndex:
errorCode
initWithDeviceIDs:errorCode:
deviceIDs
setDescriptor:
_descriptor
setDeviceID:
initWithDeviceID:errorCode:
initWithRecordingState:
setDataBlock:
_initializeDataIfNecessary
dataBlock
initWithBuffer:time:gain:
volumeControlCapabilities
isAirPlaying
notifyOutputDeviceAdded:
notifyOutputDeviceRemoved:
outputDeviceForUID:
_volumeControlCapabilities
removeOutputDevices:
initWithUniqueIdentifier:
updateOutputDevices:
removeAllOutputDevices
updateVolume:outputDeviceUID:
updateVolumeControlCapabilities:outputDeviceUID:
_masterVolume
_masterVolumeControlCapabilities
supportsVolumeControl
floatValue
setLocalVolume:
setLocalVolumeControlCapabilities:
setHasIsVolumeControlAvailable:
_handleLocalDeviceVolumeDidChangeNotification:
_handleLocalDeviceVolumeControlCapabilitiesDidChangeNotification:
_handleOutputDeviceVolumeDidChangeNotification:
_handleOutputDeviceVolumeControlCapabilitiesDidChangeNotification:
_handleOutputDeviceAddedNotification:
_handleOutputDeviceRemovedNotification:
localVolume
localVolumeControlCapabilities
_localVolumeInitialized
_localVolumeControlCapabilitiesInitialized
_outputDeviceVolume
_localVolume
_localVolumeControlCapabilities
artwork
setArtwork:
initWithContentItem:
containsArtwork
copyWithoutArtwork
_hasPlaybackState
_hasPlaybackStateTimestamp
initWithURL:
appendData:
initWithFileAtPath:
dataWithContentsOfFile:
hasBytesAvailable
notifyDelegateOfStreamEvent:
getBytes:length:
subdataWithRange:
setData:
mutableBytes
streamStatus
stream:handleEvent:
performBlock:
close
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
propertyForKey:
setProperty:forKey:
streamError
read:maxLength:
getBuffer:length:
handleStreamDisconnect
_status
_scheduledRunLoop
initToMemory
initWithURL:append:
initToBuffer:capacity:
initToFileAtPath:append:
sharedAudioPresentationOutputContext
initWithAVOutputContext:type:
sharedSystemAudioContext
sharedSystemScreenContext
outputContextForID:
mr_compactMap:
sharedLocalDevice
initWithType:devices:
setInitiator:
modifyWithOutputContext:queue:completion:
removeOutputDevices:withCallbackQueue:block:
useAPSyncAPI
initWithOutputDeviceUIDs:outputDeviceGroupID:features:
setMatchingLogicalDeviceIDs:
indexesOfObjectsPassingTest:
objectsAtIndexes:
addOutputDevices:withCallbackQueue:block:
beginSearchWithTimeout:completion:
providesControlForAllVolumeFeatures
canSetVolume
_handleOutputDeviceDidChangeNotification:
_handleOutputDevicesDidChangeNotification:
_handleDiscoverySessionOutputDevicesDidChangeNotification:
_outputContextChangeInitiatedNotification:
_handleOutputDeviceCanSetVolumeDidChangeNotification:
_handleOutputDeviceSupportsVolumeDidChangeNotification:
objectsPassingTest:
anyObject
outputDevicesSnapshot
addObserverForName:object:queue:usingBlock:
personalDevices
personalDeviceUIDs
setOutputDevices:withCallbackQueue:block:
removeAllOutputDevicesWithCallbackQueue:block:
attemptLogicalDeviceRecovery
avOutputContext
_outputDevicesSnapshot
_outputDeviceSourceInfo
_isVolumeControlAvailable
_attemptingLogicalDeviceRecovery
_postOutputDeviceChangedScheduled
_postOutputDevicesChangedScheduled
_handleOutputDeviceChangedScheduled
_handleOutputDevicesChangedScheduled
_handleDiscoverySessionOutputDevicesChangedScheduled
_avOutputContext
discoverySessionWithEndpointFeatures:
auxiliarySession
setCategory:error:
opaqueSessionID
discoverySession
setTargetAudioSessionID:
initWithTimeout:reason:handler:
disarm
deviceUID
canBeGrouped
supportsMultipleOutputDevices
addOutputDevice:options:completionHandler:
removeOutputDevice:options:completionHandler:
setOutputDevices:options:completionHandler:
setOutputDevice:options:completionHandler:
status
cancellationReason
modificationType
initiator
concreteOutputDevices
avOutputDevices
_modificationType
_concreteOutputDevices
_avOutputDevices
_password
_initiator
iTunesAudioContext
contextID
supportsMultipleBluetoothOutputDevices
unsignedIntegerValue
networkIdentifier
setManagedConfigurationDeviceIdentifier:
setBuildVersion:
currentProtocolVersion
setProtocolVersion:
sharedConnection
effectiveBoolValueForSetting:
setPairingAllowed:
deviceClass
setTightSyncUID:
setProxyGroupPlayer:
setGroupUID:
setSenderDefaultGroupUID:
setGroupName:
setGroupLeader:
setAirPlayActive:
setClusterID:
setClusterLeaderID:
tightSyncUID
setGroupLogicalDeviceCount:
setGroupedDevices:
setSupportsExtendedMotion:
useExternalDeviceSystemPairing
setSupportsSystemPairing:
_deviceIDFromData:
writeToFile:options:error:
setSystemMediaApplication:
setSystemPodcastApplication:
setAirPlayReceivers:
setSupportsSharedQueue:
setSharedQueueVersion:
setSupportsACL:
protocolVersion
hasProtocolVersion
hasDeviceClass
groupedDevicesCount
tightlySyncedGroup
hasTightlySyncedGroup
allowsPairing
hasAllowsPairing
supportsSystemPairing
hasSupportsSystemPairing
supportsACL
hasSupportsACL
hasSupportsSharedQueue
sharedQueueVersion
hasSharedQueueVersion
hasIsProxyGroupPlayer
connected
hasConnected
supportsExtendedMotion
hasSupportsExtendedMotion
logicalDeviceCount
hasIsGroupLeader
isAirplayActive
hasIsAirplayActive
systemBuildVersion
applicationBundleIdentifier
applicationBundleVersion
systemMediaApplication
systemPodcastApplication
managedConfigDeviceID
groupUID
groupName
senderDefaultGroupUID
bluetoothAddress
airplayReceivers
linkAgent
clusterID
clusterLeaderID
groupedDevices
setHasProtocolVersion:
setHasDeviceClass:
isTightSyncGroup
setTightlySyncedGroup:
hasTightSyncGroup
setHasTightlySyncedGroup:
isPairingAllowed
setAllowsPairing:
hasPairingAllowed
setHasAllowsPairing:
setHasSupportsSystemPairing:
setHasSupportsACL:
setHasSupportsSharedQueue:
setHasSharedQueueVersion:
hasProxyGroupPlayer
setHasIsProxyGroupPlayer:
setConnected:
setHasConnected:
setHasSupportsExtendedMotion:
groupLogicalDeviceCount
setLogicalDeviceCount:
hasGroupLogicalDeviceCount
setHasLogicalDeviceCount:
hasGroupLeader
setHasIsGroupLeader:
isAirPlayActive
setIsAirplayActive:
hasAirPlayActive
setHasIsAirplayActive:
buildVersion
setSystemBuildVersion:
setApplicationBundleIdentifier:
bundleVersion
setApplicationBundleVersion:
managedConfigurationDeviceIdentifier
setManagedConfigDeviceID:
setBluetoothAddress:
airPlayReceivers
setAirplayReceivers:
setLinkAgent:
localReceiverPairingIdentity
numberWithUnsignedInteger:
hasGroupedDeviceCount
groupedDeviceCount
setGroupedDeviceCount:
setTightSyncGroup:
setLocalReceiverPairingIdentity:
deltaDescriptionFromDeviceInfo:minimal:
setHasGroupedDeviceCount:
setHasGroupLogicalDeviceCount:
setHasTightSyncGroup:
setHasPairingAllowed:
setHasProxyGroupPlayer:
setHasGroupLeader:
setHasAirPlayActive:
unarchivedObjectOfClass:fromData:error:
currentDeviceInfo
dataFromDeviceInfos:
minimalDescription
isCompanion
isGizmo
deltaDescriptionFromDeviceInfo:
minimalDeltaDescriptionFromDeviceInfo:
_hasDeviceClass
_hasProtocolVersion
_hasGroupedDeviceCount
_hasSharedQueueVersion
_hasGroupLogicalDeviceCount
_supportsSystemPairing
_hasSupportsSystemPairing
_supportsACL
_hasSupportsACL
_supportsSharedQueue
_hasSupportsSharedQueue
_supportsExtendedMotion
_hasSupportsExtendedMotion
_tightSyncGroup
_hasTightSyncGroup
_pairingAllowed
_hasPairingAllowed
_hasProxyGroupPlayer
_connected
_hasConnected
_hasGroupLeader
_airPlayActive
_hasAirPlayActive
_deviceClass
_protocolVersion
_groupedDeviceCount
_sharedQueueVersion
_groupLogicalDeviceCount
_localizedModelName
_buildVersion
_bundleIdentifier
_bundleVersion
_systemMediaApplication
_systemPodcastApplication
_deviceUID
_localReceiverPairingIdentity
_managedConfigurationDeviceIdentifier
_tightSyncUID
_groupUID
_groupName
_senderDefaultGroupUID
_bluetoothAddress
_groupedDevices
_airPlayReceivers
_linkAgent
_clusterID
_clusterLeaderID
initWithInputStream:outputStream:runLoop:
disconnected
messages
_encodeDeviceInfo:
_encodeVolumeDidChange:
dataWithJSONObject:options:error:
createHeader:
JSONObjectWithData:options:error:
_processDeviceInfo:
_processSetState:
setVolumeControlAvailable:
_createProtocolMessage:underlyingCodableMessage:
longLongValue
StringAsDeviceClass:
deviceClassAsString:
setOrigin:
initWithBase64EncodedString:options:
doubleValue
setContentItems:
setLocalizedShortTitle:
setLocalizedTitle:
addPreferredInterval:
addSupportedInsertionPositions:
addSupportedPlaybackQueueTypes:
addSupportedRate:
setMaximumRating:
setMinimumRating:
setPreferredPlaybackRate:
setCanScrub:
setNumAvailableSkips:
setPresentationStyle:
setSkipFrequency:
setSkipInterval:
setUpNextItemCount:
setActive:
setEnabled:
decimalValue
decimalNumberWithDecimal:
_protocolMessageFromData:
_artwork
setMode:
setFeatures:
mode
initWithMode:features:
setHasMode:
hasMode
modeAsString:
StringAsMode:
setHasFeatures:
hasFeatures
featuresAsString:
StringAsFeatures:
_features
_mode
setDeviceIdentifier:
deviceIdentifier
initWithErrorCode:deviceIdentifier:
addPackets:
setPackets:
initWithData:forKey:
packets
initWithName:packets:playerPath:
initWithPlaybackQueue:forPlayerPath:
_packets
setX:
setY:
setZ:
setW:
hasData
getBytes:range:
gravity
userAcceleration
attitude
rotation
setGravity:
setUserAcceleration:
setAttitude:
setRotation:
setDPadX:
dPadX
setDPadY:
dPadY
setA:
setB:
setLeftShoulder:
leftShoulder
setRightShoulder:
rightShoulder
setLeftThumbstickX:
leftThumbstickX
setLeftThumbstickY:
leftThumbstickY
setRightThumbstickX:
rightThumbstickX
setRightThumbstickY:
rightThumbstickY
setLeftTrigger:
leftTrigger
setRightTrigger:
rightTrigger
setPause:
pause
setTouchDown:
touchDown
setMotion:
setButtons:
setDigitizer:
setButtonAUpDelay:
setPlayerIndex:
playerIndex
buttonAUpDelay
setProfile:
profile
setVendorName:
vendorName
service
setInputMode:
stringWithString:
initWithPlaybackSession:request:forPlayerPath:
initWithRequest:playerPath:
initWithRequest:error:playerPath:
supportMigration
code
startEvent:
endEvent:withError:
playbackSessionRequest
setPlaybackSessionSize:
initWithRange:
playerOptions
setContentItem:
setPlaybackPosition:
setPlayerOptions:
setEndpointOptions:
merge:
endEvent:
setAppBundleIdentifier:
setPlaybackSessionRequest:
connectToExternalDeviceWithUserInfo:completion:
searchEndpointsForOutputDeviceUID:timeout:reason:queue:completion:
outputDevicesMatchingPredicate:
finalize
report
isLocalEndpoint
migrateToEndpoint:request:queue:completion:
migrateToOutputDevice:request:initiator:queue:completion:
isEnabled
playerPathByRedirectingToOrigin:
weakObjectsPointerArray
allDevices
addPointer:
setCount:
deviceWithIdentifier:
registerDevice:
clearDevices
_devicesPointerArray
hasClient
_client
errorDescription
endTimestamp
startTimestamp
calculatedDuration
endpointOptions
playbackPosition
initWithIdentifier:
contentItem
events
allKeys
minusSet:
hasPlaybackPosition
hasContentItem
setEvents:
setStartTimestamp:
setEndTimestamp:
localizedFailureReason
localizedDescription
setErrorDescription:
mr_first:
originatorType
destinationTypes
playbackSessionSize
numberWithLong:
appBundleIdentifier
addDestinationType:
lastObject
setOriginatorTypeFromDevice:
addDestinationTypesFromDevices:
requestType
setRequestType:
fallbackReason
setFallbackReason:
setOriginatorType:
setDestinationTypes:
_migrateError
_fallbackError
_originatorType
_destinationTypes
_appBundleIdentifier
_requestType
_fallbackReason
_playbackSessionSize
addOutputDeviceUIDs:
outputDeviceUIDsCount
clearOutputDeviceUIDs
outputDeviceUIDsAtIndex:
outputDeviceUIDsType
_outputDeviceUIDs
reset
sendData:
activate
currentRunLoop
getBoundStreamsWithBufferSize:inputStream:outputStream:
_onQueue_resetStreams
initWithOutputDevice:pipeEndpoint:
hostname
shouldUseSystemAuthenticationPrompt
setShouldUseSystemAuthenticationPrompt:
getInputStream:outputStream:userInfo:
requiresCustomPairing
outputDevice
pipeEndpoint
_error
_inputStream
_inputStreamInternal
_outputStream
_outputStreamInternal
_useSystemAuthenticationPrompt
_pipeConnection
_runLoop
_runLoopThread
_outputDevice
_pipeEndpoint
hasPlaceholder
localResolvedPlayerPath
localPlayerPath
localResolvedPlayerPathFromPlayerPath:
isSystemMediaApplication
_origin
_player
TXTRecordData
dictionaryFromTXTRecordData:
dataUsingEncoding:
updateDeviceInfoWithTXTRecord:
createDeviceInfoFromTXTRecord:
initWithData:encoding:
createDeviceInfoFromNetService:
getInputStream:outputStream:
initWithNetService:
setNetService:
setRequiresCustomPairing:
netService
_requiresCustomPairing
_netService
setPairingData:
hasPairingData
setStatus:
setHasStatus:
hasStatus
setIsRetrying:
setHasIsRetrying:
hasIsRetrying
setIsUsingSystemPairing:
setHasIsUsingSystemPairing:
hasIsUsingSystemPairing
pairingData
isRetrying
_pairingData
_isRetrying
_isUsingSystemPairing
addPersonalOutputDevices:
outputDevicesCount
clearOutputDevices
outputDevicesAtIndex:
setDesignatedGroupLeader:
setInstanceIdentifier:
personalOutputDevicesCount
clearPersonalOutputDevices
personalOutputDevicesAtIndex:
outputDevicesType
personalOutputDevicesType
hasName
hasDesignatedGroupLeader
setIsLocalEndpoint:
setHasIsLocalEndpoint:
hasIsLocalEndpoint
hasInstanceIdentifier
setConnectionType:
setHasConnectionType:
hasConnectionType
connectionTypeAsString:
StringAsConnectionType:
setCanModifyGroupMembership:
setHasCanModifyGroupMembership:
hasCanModifyGroupMembership
instanceIdentifier
setPersonalOutputDevices:
_instanceIdentifier
_personalOutputDevices
_canModifyGroupMembership
_isLocalEndpoint
_isProxyGroupPlayer
setObject:
setProtocol:
selector
signatureWithObjCTypes:
_object
_protocol
setResponse:
hasResponse
response
_response
setKey:
hasKey
_key
setText:
hasText
actionType
setActionType:
setHasActionType:
hasActionType
actionTypeAsString:
StringAsActionType:
text
_actionType
_text
initWithOrigin:
requestLastPlayingDate:queue:completion:
lastPlayingDateWithError:
clientConnection
voiceRecordingState
setVoiceRecordingState:
setGameControllerInputModeCallback:
setGameControllerInputModeCallbackQueue:
setGameControllerPropertiesCallback:
setGameControllerPropertiesCallbackQueue:
setTextInputCallback:
setTextInputCallbackQueue:
sendClientUpdatesConfigMessage
setRtiCallback:
setRtiCallbackQueue:
setRecordingStateCallback:
setRecordingStateCallbackQueue:
setHiliteModeCallback:
setHiliteModeCallbackQueue:
setGameControllerInputMode:
textInputCallback
rtiCallback
wantsSystemEndpointNotifications
errorForCurrentState
initWithDeviceDescriptor:
isSupported:
initWithTouchEvent:virtualDeviceID:
sendMessage:
initWithHIDEvent:
cryptoSession
decryptedTextUsingCryptoSession:
attributes
initWithText:attributes:
payloadWithData:
setPayloadDelegate:
handleTextActionPayload:
setRtiSourceSession:
hasDigitizer
digitizer
motion
initWithActionType:text:
setIsCallingClientCallback:
setEditing:
version
initWithVersion:data:
setGameControllerInputModeCallback:withQueue:
setGameControllerPropertiesCallback:withQueue:
setTextEditingCallback:withQueue:
setRTICallback:withQueue:
setVoiceRecordingStateCallback:withQueue:
setHiliteModeCallback:withQueue:
currentClientUpdatesConfigMessage
registerTouchDeviceWithDescriptor:replyQueue:completion:
sendTouchEvent:toVirtualDeviceWithID:
getTextEditingSessionWithReplyQueue:completion:
insertTextIntoActiveTextEditingSessionWithText:
setTextOnActiveTextEditingSessionWithText:
deleteBackwardInActiveTextEditingSession
clearActiveTextEditingSessionData
getRTISessionWithReplyQueue:completion:
registerGameControllerWithProperties:queue:completion:
unregisterGameController:
sendGameControllerEvent:controllerID:
registerVoiceInputDeviceWithDescriptor:replyQueue:completion:
processVoiceInputAudioDataForDeviceID:withBuffer:time:gain:
exitHiliteMode
wake
gameControllerInputModeCallback
gameControllerInputMode
gameControllerInputModeCallbackQueue
gameControllerPropertiesCallback
gameControllerPropertiesCallbackQueue
recordingStateCallback
recordingStateCallbackQueue
textInputCallbackQueue
rtiCallbackQueue
rtiSourceSession
hiliteModeCallback
hiliteModeCallbackQueue
_hiliteMode
_gameControllerInputMode
_gameControllerInputModeCallback
_gameControllerInputModeCallbackQueue
_gameControllerPropertiesCallback
_gameControllerPropertiesCallbackQueue
_recordingStateCallback
_recordingStateCallbackQueue
_textInputCallback
_textInputCallbackQueue
_rtiCallback
_rtiCallbackQueue
_rtiSourceSession
_hiliteModeCallback
_hiliteModeCallbackQueue
initWithVolume:endpointUID:outputDeviceUID:
initWithCapabilities:
initWithCapabilities:endpointUID:outputDeviceUID:
hasVolumeControlAvailable
volumeControlAvailable
setAbsolute:
setHasAbsolute:
hasAbsolute
setIntegratedDisplay:
setHasIntegratedDisplay:
hasIntegratedDisplay
setScreenSizeWidth:
setHasScreenSizeWidth:
hasScreenSizeWidth
setScreenSizeHeight:
setHasScreenSizeHeight:
hasScreenSizeHeight
absolute
integratedDisplay
screenSizeWidth
screenSizeHeight
_screenSizeHeight
_screenSizeWidth
_absolute
_integratedDisplay
initWithProcessIdentifier:bundleIdentifier:
subscriptionController
augmentCommandOptions:forCommand:
timeIntervalSinceNow
processPlayerPathInvalidationHandlersWithInvalidOrigin:
removeCommandHandlerBlockForKey:
addCommandHandlerBlock:forKey:
setHardwareRemoteBehavior:
setCommandCallback:
handleSupportedCommandsRequestWithCompletion:
predicateWithBlock:
filteredArrayUsingPredicate:
originClientForPlayerPath:
canBeNowPlayingApp
setReceivesSupportedCommandsNotifications:
longValue
dispatchNotification:userInfo:object:
dataFromCommandInfos:
contentItemIdentifierForOffset:
sharedRemoteControl
initWithDictionary:
initWithName:
invalidateTransaction
transactionName
_containedTransaction
_transactionName
contentItemsCount
clearContentItems
contentItemsAtIndex:
contentItemsType
_contentItems
_handleOutputContextDidChangeNotification
removeObserver:name:object:
localizedName
containsOutputDeviceWithUID:
setEndpointChangedCallback:
endpointChangedCallback
begin
_discoverySession
_endpointChangedCallback
_didBegin
initWithDomain:code:userInfo:
pairedDevices
handlePairingExchangeData:completion:
handlePairingFailureWithStatus:
encryptData:withError:
decryptData:withError:
deleteIdentityWithError:
role
_role
getDevicePresenceDetectedWithCompletion:
getDiscoveryModeWithCompletion:
setDiscoveryMode:enableThrottling:withCompletion:
setEndpointFeatures:completion:
getAvailableEndpointsWithCompletion:
getAvailableOutputDevicesWithCompletion:
availableEndpointsDidChange:
availableOutputDevicesDidChange:
initWithConfiguration:
_initializeHostedRoutingConnectionWithCompletion:
_reloadHostedRoutingServiceDiscoveryMode
_reloadHostedRoutingServiceEndpointFeatures
_hostedRoutingConnection
distantEndpoints
distantOutputDevices
_reloadAvailableDistantEndpoints
notifyEndpointsChanged:
notifyOutputDevicesChanged:forFeature:
_reloadAvailableDistantOutputDevices
_reloadAvailableDistantEndpointsWithEndpoints:
_reloadAvailableDistantOutputDevicesWithOutputDevices:
_shouldAddLocalEndpoint
sharedController
clusterStatus
devicePresenceDetected
availableEndpoints
availableOutputDevices
setHostedRoutingSessionConnection:
setDistantEndpoints:
setDistantOutputDevices:
hostedRoutingSessionConnection
distantExternalDevices
setDistantExternalDevices:
_endpointFeatures
_enableThrottling
_distantEndpoints
_distantOutputDevices
_serviceResetNotifyToken
_hostedRoutingConnectionDidInitialize
_hostedRoutingSessionConnection
_distantExternalDevices
addEvents:
eventsCount
clearEvents
eventsAtIndex:
eventsType
setHasPlayerOptions:
hasPlayerOptions
playerOptionsAsString:
StringAsPlayerOptions:
setHasEndpointOptions:
hasEndpointOptions
endpointOptionsAsString:
StringAsEndpointOptions:
setHasPlaybackPosition:
hasPlaybackSessionRequest
_playbackPosition
_contentItem
_endpointOptions
_events
_playbackSessionRequest
_playerOptions
initWithPlayerPath:lastPlayingDate:
lastPlayingDate
initWithLastPlayingDate:
discoverySessionWithEndpointFeatures:enableThrottling:
targetAudioSessionID
setWantsSystemEndpointNotifications:
connectWithOptions:
_wantsEndpointChangeNotifications
_valid
_localDeviceInfoDidChangeNotification:
_transportDeviceInfoDidChangeNotification:
_contentItemUpdatedNotification:
_activeSystemEndpointDidChangeNotification:
_handleDeviceInfoChange:oldDevice:
_cleanUpWithReason:
transport
initWithKey:data:
_onSerialQueue_registerOriginCallbacks
_updateNowPlayingInfo
setNowPlayingItem:
setNowPlayingInfo:policy:request:
setNowPlayingArtwork:
_callClientConnectionStateCallback:previousConnectionState:error:
setPairingCallback:
setPairingCallbackQueue:
setPairingAllowedCallback:
setPairingAllowedCallbackQueue:
setOutputDevicesUpdatedCallback:
setOutputDevicesUpdatedCallbackQueue:
setOutputDevicesRemovedCallback:
setOutputDevicesRemovedCallbackQueue:
setVolumeControlCapabilitiesCallback:
setVolumeControlCapabilitiesCallbackQueue:
initWithButtonEvent:
_cleanUpStreamsWithReason:
_onWorkerQueue_initializeConnectionWithOptions:userInfo:
_onWorkerQueue_loadDeviceInfo
_onWorkerQueue_openSecuritySession
_onWorkerQueue_registerCustomOrigin
_onWorkerQueue_reRegisterCustomOrigin
_onWorkerQueue_syncClientState
addEntriesFromDictionary:
setConnectionState:error:
_onWorkerQueue_connectWithOptions:isRetry:clientBundleIdentifier:userInfo:
connectWithOptions:clientBundleIdentifier:userInfo:
_onSerialQueue_prepareToConnectWithOptions:clientBundleIdentifier:userInfo:
domain
_onWorkerQueue_disconnect:
_onSerialQueue_prepareToDisconnect:
initWithDeallocHandler:
streamsAreValid
sendClientUpdatesConfigMessageWithCompletion:
sendMessage:expectedMessage:timeout:queue:reply:
_handleCryptoPairingMessage:
_handleSetStateMessage:
_handleNotificationMessage:
_handleSetArtworkMessage:
_handleTransactionMessage:
_handleDeviceInfoUpdateMessage:
_handleSetConnectionStateMessage:
_handleGenericMessage:
_handleSetNowPlayingClientMessage:
_handleSetNowPlayingPlayerMessage:
_handleRemoveClientMessage:
_handleRemovePlayerMessage:
_handleUpdateClientMessage:
_handleUpdateContentItemsMessage:
_handleUpdateContentItemArtworkMessage:
_handleUpdatePlayerMessage:
_handlePromptForRouteAuthorizationMessage:
_handlePresentRouteAuthorizationStatusMessage:
_handleVolumeDidChangeMessage:
_handleVolumeControlCapabilitiesDidChangeMessage:
_handleLegacyVolumeControlCapabilitiesDidChangeMessage:
_handleOutputDevicesUpdatedMessage:
_handleOutputDevicesRemovedMessage:
_handleSetDefaultSupportedCommandsMessage:
_handleUpdateActiveSystemEndpoint:
_handleSetPlayerClientPropertiesMessage:
_handleSetOriginClientPropertiesMessage:
integerValue
isPairedDeviceSync
runLoop
_onWorkerQueue_createClientConnectionWithInputStream:outputStream:
setCryptoEnabled:
setClientConnection:
externalDeviceTimeoutDuration
setCustomOrigin:
hasExchangedMessage
initWithPairingData:status:isRetrying:isUsingSystemPairing:state:
setDataExchangeBlock:
_callClientPairingCallback:
setPromptForSetupCodeBlock:
setExchangeCompleteBlock:
setCryptoSession:
closeAllStreams
_handleRemoteCommand:withOptions:playerPath:completion:
_handlePlaybackQueueRequest:forPlayer:completion:
initWithEvent:
_handlePlaybackSessionRequest:forPlayerPath:completion:
_handlePlaybackSessionMigrateRequest:request:forPlayerPath:completion:
setPlaybackSessionMigrateRequestCallback:
_handlePlaybackSessionMigrateBeginRequest:forPlayerPath:completion:
_handlePlaybackSessionMigrateEndRequest:error:forPlayerPath:completion:
_handleLegacyPlaybackQueueRequestWithCompletion:
initWithRequest:forPlayerPath:
_handlePlaybackQueueResponse:completion:
veirfyConnectionStatusAndMaybeDisconnect:
sendMessage:timeout:queue:reply:
_createPlaybackQueue:
standardCredentials
characterCount
initWithCommand:options:playerPath:
results
_handleSetStateMessageModern:
_handleNotificationMessageModern:
_handleNotificationMessageLegacy:
notification
_callOutputDevicesUpdatedCallbackWithOutputDevices:
_callOutputDevicesRemovedCallbackWithOutputDeviceUIDs:
_callVolumeCallback:outputDeviceUID:
_callVolumeControlCapabilitiesCallback:outputDeviceUID:
sendTransaction:withPackets:
initWithDevice:
_callClientNameCallback
_callClientAllowsPairingCallback
_callClientCustomDataCallback:name:
replyWithMessage:
nowPlayingItem
setClientBundleIdentifier:
setPairedDeviceSync:
setReason:
perform:completion:
nowPlayingArtwork
setOutputDevicesUpdatedCallback:withQueue:
setOutputDevicesRemovedCallback:withQueue:
setVolumeControlCapabilitiesCallback:withQueue:
removeFromParentGroup:queue:completion:
connectionRecoveryBehavior
setConnectionRecoveryBehavior:
isCallingClientCallback
pairingCallback
pairingCallbackQueue
pairingAllowedCallback
pairingAllowedCallbackQueue
outputDevicesUpdatedCallback
outputDevicesUpdatedCallbackQueue
outputDevicesRemovedCallback
outputDevicesRemovedCallbackQueue
volumeControlCapabilitiesCallback
volumeControlCapabilitiesCallbackQueue
outputContextCallbackQueue
setOutputContextCallbackQueue:
setRunLoop:
setWorkerQueue:
_notificationQueue
_wantsNowPlayingNotifications
_wantsNowPlayingArtworkNotifications
_wantsVolumeNotifications
_wantsOutputDeviceNotifications
_wantsSystemEndpointNotifications
_connectionStateTimestamp
_connectionOptions
_cachedServerDisconnectError
_reconnectionAttemptCount
_forceReconnectOnConnectionFailure
_disconnecting
_isClientSyncActive
_transaction
_isCallingClientCallback
_clientConnection
_nowPlayingArtwork
_nowPlayingItem
_transport
_connectionRecoveryBehavior
_pairingCallback
_pairingCallbackQueue
_pairingAllowedCallback
_pairingAllowedCallbackQueue
_outputDevicesUpdatedCallback
_outputDevicesUpdatedCallbackQueue
_outputDevicesRemovedCallback
_outputDevicesRemovedCallbackQueue
_volumeControlCapabilitiesCallback
_volumeControlCapabilitiesCallbackQueue
_outputContextCallbackQueue
_workerQueue
setHasVolumeControlAvailable:
setHasVolumeCapabilities:
_volumeCapabilities
setReport:
hasReport
_report
serializationDate
_serializationDate
setPrompt:
setInputTraits:
hasPrompt
hasInputTraits
prompt
inputTraits
_inputTraits
_prompt
setHasNowPlayingUpdates:
hasNowPlayingUpdates
setHasArtworkUpdates:
hasArtworkUpdates
setHasVolumeUpdates:
hasVolumeUpdates
setHasKeyboardUpdates:
hasKeyboardUpdates
setHasOutputDeviceUpdates:
hasOutputDeviceUpdates
setHasSystemEndpointUpdates:
hasSystemEndpointUpdates
_artworkUpdates
_keyboardUpdates
_nowPlayingUpdates
_outputDeviceUpdates
_systemEndpointUpdates
_volumeUpdates
write
updateWithValue:
defaultManager
createFileAtPath:contents:attributes:
writeToFile:atomically:encoding:error:
initWithPath:
addMessage:data:
_path
_entries
setAvg:
setMin:
setMax:
total
setTotal:
values
setValues:
_avg
_min
_max
_total
_values
initWithRoute:inputType:
initWithResponse:
initWithRoute:status:
setPhase:
setFinger:
phase
finger
URLWithString:
host
setHasName:
hasPackets
externalDeviceListenerEndpoint
protobufData
commandInfosFromData:
initWithUTF8String:
protocolMessageWithProtobufData:error:
_setEndpoint:
setExternalDeviceListenerEndpoint:
restoreNowPlayingClientState
nowPlayingClientRequestsForPlayerPath:
existingNowPlayingClientRequestsForPlayerPath:
removeClient:
setTransactionCallback:forName:
transactionCallbackForName:
handleDeviceInfoRequestWithCompletion:
handleVolumeRequestWithCompletion:
handleVolumeCapabilitiesRequestWithCompletion:
_nowPlayingClients
_transactionCallbacks
_deviceInfoCompletions
_volumeCompletions
_volumeCapabilitiesCompletions
nowPlayingPlayerClientRequestsForPlayerPath:
existingNowPlayingPlayerClientRequestsForPlayerPath:
removePlayer:
_playerClients
setHasX:
hasX
setHasY:
hasY
setHasTouchDown:
hasTouchDown
_touchDown
addAddingOutputDeviceUID:
addRemovingOutputDeviceUID:
addSettingOutputDeviceUID:
addingOutputDeviceUIDsCount
clearAddingOutputDeviceUIDs
addingOutputDeviceUIDAtIndex:
removingOutputDeviceUIDsCount
clearRemovingOutputDeviceUIDs
removingOutputDeviceUIDAtIndex:
settingOutputDeviceUIDsCount
clearSettingOutputDeviceUIDs
settingOutputDeviceUIDAtIndex:
addingOutputDeviceUIDType
removingOutputDeviceUIDType
settingOutputDeviceUIDType
setHasOutputContextType:
hasOutputContextType
outputContextTypeAsString:
StringAsOutputContextType:
_addingOutputDeviceUIDs
_outputContextType
_removingOutputDeviceUIDs
_settingOutputDeviceUIDs
setHidEventData:
hidEventData
buttonEvent
openInState:
setInputKey:
setInputNonce:
setOutputKey:
setOutputNonce:
pairingSession:didPrepareExchangeData:
errorWithDomain:code:userInfo:
initWithLength:
appendBytes:length:
stringWithCString:encoding:
passcode
pairingSession:showSetupCode:
pairingSessionHideSetupCode:
pairingSession:promptForSetupCodeWithDelay:completion:
pairingSession:didCompleteExchangeWithError:
dataWithBytesNoCopy:length:
pairingFlags
inputKey
inputNonce
outputKey
outputNonce
_credentials
_pairingSession
_pairingDelegate
_hasExchangedMessage
_pairingFlags
_inputKey
_inputNonce
_outputKey
_outputNonce
getCString:maxLength:encoding:
MR_isEqualToNowPlayingInfo:
initWithType:outputDevice:
_handleDeviceDisconnected:
initWithType:
setLegacyNowPlayingInfoRequest:
defaultPlaybackQueueRequest
hasPlaybackQueueCallbacks
initWithImageData:mimeType:
hasReceivedCommandRecently
extractedIdentifierFromNowPlayingInfo:
requestForSubscribedContentItemIdentifier:
useClusterDevices
weakObjectsHashTable
deviceInfoDidChangeNotification:
updateClusterInformation
canBeClusterMember
getClusterUID
getClusterLeaderUID
onQueue_notifyObserversWithClusterStatus:
clusterController:clusterStatusDidChange:
registerObserver:
unregisterObserver:
getClusterStatus:
getClusterLeaderEndpoint:
_callbackQueue
_observers
_localPairingIdentity
_clusterUID
_clusterLeaderUID
_previousClusterStatus
_airplayClusterStatusNotificationToken
initWithIdentifier:publicKey:privateKey:
publicKey
privateKey
_publicKey
_privateKey
recordingState
setRecordingState:
initWithDeviceID:
_deviceID
_recordingState
setJpegData:
hasJpegData
jpegData
_jpegData
initWithMRError:format:
addCustomXPCHandler:forKey:
removeCustomXPCHandler:
sendMessageWithType:queue:reply:
messageHandler
invalidationHandler
_customXpcHandlers
_messageHandler
_invalidationHandler
_parseBuffer:
_parseTimestamp:
_parseGain:
setFormatSettingsPlistData:
setStartOffset:
setVariableFramesInPacket:
setDataByteSize:
_copyWithZone:usingConcreteClass:
formatSettingsPlistData
dataByteSize
startOffset
variableFramesInPacket
setPlaybackQueueCallback:
setPlaybackQueueTransactionCallback:
setFirstCallback:
setLastCallback:
addCallback:
createPlaybackQueueForRequestCallbacks
callbackWithQueue:block:
createItemForOffsetCallbacks
createItemForIdentifierCallbacks
createChildItemCallbacks
metadataCallbacks
languageOptionsCallbacks
infoCallbacks
lyricsCallbacks
artworkCallbacks
removeCallback:
setPairingDelegate:
setShowSetupCodeBlock:
setHideSetupCodeBlock:
setPairingSession:
pairingSession
pairingDelegate
initWithMediaRemoteService:
initWithServiceClient:
setPlaybackQueueDispatchQueue:
processPlayerPathInvalidationHandlersWithBlock:
enumerateObjectsUsingBlock:
removeOrigin:
fetchPickableRoutesForCategory:completion:
callback
externalDeviceCache
playbackSessionCallback
playbackSessionMigrateBeginCallback
addPendingPlaybackSessionMigrateEvent:
playbackSessionMigrateEndCallback
removePendingPlaybackSessionMigrateEvent:
playbackSessionMigrateRequestCallback
registeredOrigins
setActivePlayerPath:
activePlayerPath
registerOrigin:withDeviceInfo:completion:
unregisterOrigin:withCompletion:
unregisterAllOriginsWithCompletion:
isOriginRegistered:
fetchPickableRoutesWithCategory:completion:
addPlayerPathInvalidationHandler:
removeInvalidationHandler:
playbackQueueDispatchQueue
_registeredOrigins
_routingClientController
_activePlayerPath
_playerPathInvalidationHandlers
_notificationService
_notificationClient
_playbackQueueDispatchQueue
receiveTransaction:fromMessage:
videoThumbnailsCallback
audioAmplitudeSamplesCallback
endLyricsEventCallback
beginLyricsEventCallback
setUserData:
hasUserData
userData
_userData
setUsagePage:
setUsage:
setButtonDown:
usagePage
usage
buttonDown
setLocalizedName:
externalDeviceQueue
setExternalDeviceQueue:
distantPersonalOutputDevices
setDistantPersonalOutputDevices:
distantGroupLeader
setDistantGroupLeader:
distantExternalDevice
_localizedName
_externalDeviceQueue
_distantPersonalOutputDevices
_distantGroupLeader
_distantExternalDevice
_externalDeviceListenerEndpoint
setHasHiliteMode:
hasHiliteMode
addSupportedCustomQueueIdentifier:
addSupportedPlaybackSessionTypes:
addCurrentPlaybackSessionTypes:
preferredIntervalsCount
clearPreferredIntervals
preferredIntervalAtIndex:
supportedRatesCount
clearSupportedRates
supportedRateAtIndex:
supportedPlaybackQueueTypesCount
clearSupportedPlaybackQueueTypes
supportedPlaybackQueueTypesAtIndex:
supportedCustomQueueIdentifiersCount
clearSupportedCustomQueueIdentifiers
supportedCustomQueueIdentifierAtIndex:
supportedInsertionPositionsCount
clearSupportedInsertionPositions
supportedInsertionPositionsAtIndex:
supportedPlaybackSessionTypesCount
clearSupportedPlaybackSessionTypes
supportedPlaybackSessionTypesAtIndex:
currentPlaybackSessionTypesCount
clearCurrentPlaybackSessionTypes
currentPlaybackSessionTypesAtIndex:
setPlaybackSessionIdentifier:
supportedQueueEndActionsCount
clearSupportedQueueEndActions
supportedQueueEndActionsAtIndex:
addSupportedQueueEndActions:
supportedCustomQueueIdentifierType
supportedPlaybackSessionTypesType
currentPlaybackSessionTypesType
setHasEnabled:
hasEnabled
setHasActive:
hasActive
preferredIntervals
setPreferredIntervals:count:
hasLocalizedTitle
hasLocalizedShortTitle
setHasMinimumRating:
hasMinimumRating
setHasMaximumRating:
hasMaximumRating
supportedRates
setSupportedRates:count:
setHasPresentationStyle:
hasPresentationStyle
setHasSkipInterval:
hasSkipInterval
setHasNumAvailableSkips:
hasNumAvailableSkips
setHasSkipFrequency:
hasSkipFrequency
setHasCanScrub:
hasCanScrub
supportedPlaybackQueueTypes
setSupportedPlaybackQueueTypes:count:
supportedInsertionPositions
setSupportedInsertionPositions:count:
setHasUpNextItemCount:
hasUpNextItemCount
setHasPreferredPlaybackRate:
hasPreferredPlaybackRate
hasPlaybackSessionIdentifier
currentQueueEndAction
setCurrentQueueEndAction:
setHasCurrentQueueEndAction:
hasCurrentQueueEndAction
currentQueueEndActionAsString:
StringAsCurrentQueueEndAction:
supportedQueueEndActions
setSupportedQueueEndActions:count:
supportedQueueEndActionsAsString:
StringAsSupportedQueueEndActions:
disabledReason
setDisabledReason:
setHasDisabledReason:
hasDisabledReason
disabledReasonAsString:
StringAsDisabledReason:
enabled
active
localizedTitle
localizedShortTitle
minimumRating
maximumRating
presentationStyle
skipInterval
numAvailableSkips
skipFrequency
canScrub
supportedCustomQueueIdentifiers
setSupportedCustomQueueIdentifiers:
upNextItemCount
preferredPlaybackRate
supportedPlaybackSessionTypes
setSupportedPlaybackSessionTypes:
currentPlaybackSessionTypes
setCurrentPlaybackSessionTypes:
playbackSessionIdentifier
_preferredIntervals
_supportedInsertionPositions
_supportedPlaybackQueueTypes
_supportedQueueEndActions
_supportedRates
_canScrub
_currentPlaybackSessionTypes
_currentQueueEndAction
_disabledReason
_localizedShortTitle
_localizedTitle
_maximumRating
_minimumRating
_numAvailableSkips
_playbackSessionIdentifier
_preferredPlaybackRate
_presentationStyle
_skipFrequency
_skipInterval
_supportedCustomQueueIdentifiers
_supportedPlaybackSessionTypes
_upNextItemCount
_active
_enabled
setHasUsagePage:
hasUsagePage
setHasUsage:
hasUsage
setHasButtonDown:
hasButtonDown
_usage
_usagePage
_buttonDown
offsetForIdentifier:
mr_isCommandSupportedAndEnabled:
isCommandActuallySupportedEvenWhenDisabled:
mr_isCommandSupported:
mr_ifDisabledWhyDisabled:
initWithInterval:repeats:queue:block:
commandHandlerBlocks
resolveCommand:
resolveCommandOptions:options:
commandCallback
bundleWithIdentifier:
localizations
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
pathForResource:ofType:inDirectory:forLocalization:
initWithContentsOfFile:
localizedStringForKey:value:table:
setDeviceInfoDeprecated:
typeAsString:
StringAsType:
hasDeviceInfoDeprecated
deviceInfoDeprecated
_deviceInfoDeprecated
setAttributes:
setEncryptedTextCyphertext:
hasAttributes
hasEncryptedTextCyphertext
encryptedTextCyphertext
_attributes
_encryptedTextCyphertext
hasPlaybackSessionData
setFirmwareVersion:
clusterCompositionsCount
clearClusterCompositions
clusterCompositionAtIndex:
clusterCompositionType
hasGroupID
hasModelID
hasMacAddress
setHasCanAccessRemoteAssets:
hasCanAccessRemoteAssets
setHasIsRemoteControllable:
hasIsRemoteControllable
setHasIsGroupable:
hasIsGroupable
setHasDeviceType:
hasDeviceType
deviceTypeAsString:
StringAsDeviceType:
setHasDeviceSubType:
hasDeviceSubType
deviceSubTypeAsString:
StringAsDeviceSubType:
hasModelSpecificInfoData
setHasBatteryLevel:
setHasIsLocalDevice:
hasIsLocalDevice
setHasSupportsExternalScreen:
hasSupportsExternalScreen
setHasRequiresAuthorization:
hasRequiresAuthorization
setShouldForceRemoteControlabillity:
setHasShouldForceRemoteControlabillity:
hasShouldForceRemoteControlabillity
hasSourceInfo
setHasIsDeviceGroupable:
hasIsDeviceGroupable
setHasCanRelayCommunicationChannel:
hasCanRelayCommunicationChannel
hasLogicalDeviceID
hasFirmwareVersion
hasIsVolumeControlAvailable
setHasCanAccessAppleMusic:
hasCanAccessAppleMusic
setHasCanAccessiCloudMusicLibrary:
hasCanAccessiCloudMusicLibrary
setHasGroupContainsGroupLeader:
hasGroupContainsGroupLeader
setHasSupportsBufferedAirPlay:
hasSupportsBufferedAirPlay
setHasCanPlayEncryptedProgressiveDownloadAssets:
hasCanPlayEncryptedProgressiveDownloadAssets
setHasCanFetchMediaDataFromSender:
hasCanFetchMediaDataFromSender
setHasPresentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets:
hasPresentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
setHasIsAirPlayReceiverSessionActive:
hasIsAirPlayReceiverSessionActive
hasParentGroupIdentifier
setHasParentGroupContainsDiscoverableLeader:
hasParentGroupContainsDiscoverableLeader
setHasIsAddedToHomeKit:
hasIsAddedToHomeKit
hasBluetoothID
setHasSupportsHAP:
hasSupportsHAP
setHasUsingJSONProtocol:
hasUsingJSONProtocol
shouldForceRemoteControlabillity
setClusterCompositions:
_clusterCompositions
_deviceSubType
_macAddress
_modelSpecificInfoData
_isAirPlayReceiverSessionActive
_isDeviceGroupable
_isGroupLeader
_isGroupable
_isLocalDevice
_isRemoteControllable
_shouldForceRemoteControlabillity
_usingJSONProtocol
setAuthenticationToken:
setSendCommandMessage:
setSendCommandResultMessage:
setGetStateMessage:
setSetStateMessage:
setSetArtworkMessage:
setRegisterHIDDeviceMessage:
setRegisterHIDDeviceResultMessage:
setSendHIDEventMessage:
setSendHIDReportMessage:
setSendVirtualTouchEventMessage:
setNotificationMessage:
setContentItemsChangedNotificationMessage:
setDeviceInfoMessage:
setClientUpdatesConfigMessage:
setMasterVolumeControlCapabilitiesDidChangeMessage:
setGameController:
setRegisterGameController:
setRegisterGameControllerResponse:
setUnregisterGameController:
setRegisterForGameControllerEvents:
setKeyboardMessage:
setGetKeyboardMessage:
setTextInputMessage:
setGetVoiceInputDevicesMessage:
setGetVoiceInputDevicesResponseMessage:
setRegisterVoiceInputDeviceMessage:
setRegisterVoiceInputDeviceResponseMessage:
setSetRecordingStateMessage:
setSendVoiceInputMessage:
setPlaybackQueueRequest:
setTransactionPackets:
setCryptoPairingMessage:
setGameControllerProperties:
setReadyStateMessage:
setConnectionState:
setSendButtonEventMessage:
setSetHiliteModeMessage:
setWakeDeviceMessage:
setGenericMessage:
setSendPackedVirtualTouchEventMessage:
setSendLyricsEventMessage:
setSetNowPlayingClientMessage:
setSetNowPlayingPlayerMessage:
setModifyOutputContextRequestMessage:
setGetVolumeMessage:
setGetVolumeResultMessage:
setSetVolumeMessage:
setVolumeDidChangeMessage:
setRemoveClientMessage:
setRemovePlayerMessage:
setUpdateClientMessage:
setUpdateContentItemMessage:
setUpdateContentItemArtworkMessage:
setUpdatePlayerMessage:
setPromptForRouteAuthorizationMessage:
setPromptForRouteAuthorizationResponseMessage:
setPresentRouteAuthorizationStatusMessage:
setGetVolumeControlCapabilitiesMessage:
setGetVolumeControlCapabilitiesResultMessage:
setVolumeControlCapabilitiesDidChangeMessage:
setUpdateOutputDevicesMessage:
setRemoveOutputDevicesMessage:
setRemoteTextInputMessage:
setGetRemoteTextInputSessionMessage:
setPlaybackSessionRequestMessage:
setPlaybackSessionResponseMessage:
setSetDefaultSupportedCommandsMessage:
setPlaybackSessionMigrateRequestMessage:
setPlaybackSessionMigrateResponseMessage:
setPlaybackSessionMigrateBeginMessage:
setPlaybackSessionMigrateEndMessage:
setUpdateActiveSystemEndpointMessage:
setDiscoveryModeMessage:
setUpdateEndpointsMessage:
setRemoveEndpointsMessage:
setPlayerClientPropertiesMessage:
setOriginClientPropertiesMessage:
hasAuthenticationToken
setHasErrorCode:
hasErrorCode
hasSendCommandMessage
hasSendCommandResultMessage
hasGetStateMessage
hasSetStateMessage
hasSetArtworkMessage
hasRegisterHIDDeviceMessage
hasRegisterHIDDeviceResultMessage
hasSendHIDEventMessage
hasSendHIDReportMessage
hasSendVirtualTouchEventMessage
hasNotificationMessage
hasContentItemsChangedNotificationMessage
hasDeviceInfoMessage
hasClientUpdatesConfigMessage
hasMasterVolumeControlCapabilitiesDidChangeMessage
hasGameController
hasRegisterGameController
hasRegisterGameControllerResponse
hasUnregisterGameController
hasRegisterForGameControllerEvents
hasKeyboardMessage
hasGetKeyboardMessage
hasTextInputMessage
hasGetVoiceInputDevicesMessage
hasGetVoiceInputDevicesResponseMessage
hasRegisterVoiceInputDeviceMessage
hasRegisterVoiceInputDeviceResponseMessage
hasSetRecordingStateMessage
hasSendVoiceInputMessage
hasPlaybackQueueRequest
hasTransactionPackets
hasCryptoPairingMessage
hasGameControllerProperties
hasReadyStateMessage
hasConnectionState
hasSendButtonEventMessage
hasSetHiliteModeMessage
hasWakeDeviceMessage
hasGenericMessage
hasSendPackedVirtualTouchEventMessage
hasSendLyricsEventMessage
hasSetNowPlayingClientMessage
hasSetNowPlayingPlayerMessage
hasModifyOutputContextRequestMessage
hasGetVolumeMessage
hasGetVolumeResultMessage
hasSetVolumeMessage
hasVolumeDidChangeMessage
hasRemoveClientMessage
hasRemovePlayerMessage
hasUpdateClientMessage
hasUpdateContentItemMessage
hasUpdateContentItemArtworkMessage
hasUpdatePlayerMessage
hasPromptForRouteAuthorizationMessage
hasPromptForRouteAuthorizationResponseMessage
hasPresentRouteAuthorizationStatusMessage
hasGetVolumeControlCapabilitiesMessage
hasGetVolumeControlCapabilitiesResultMessage
hasVolumeControlCapabilitiesDidChangeMessage
hasUpdateOutputDevicesMessage
hasRemoveOutputDevicesMessage
hasRemoteTextInputMessage
hasGetRemoteTextInputSessionMessage
hasPlaybackSessionRequestMessage
hasPlaybackSessionResponseMessage
hasSetDefaultSupportedCommandsMessage
hasPlaybackSessionMigrateRequestMessage
hasPlaybackSessionMigrateResponseMessage
hasErrorDescription
hasPlaybackSessionMigrateBeginMessage
hasPlaybackSessionMigrateEndMessage
hasUpdateActiveSystemEndpointMessage
hasDiscoveryModeMessage
hasUpdateEndpointsMessage
hasRemoveEndpointsMessage
hasPlayerClientPropertiesMessage
hasOriginClientPropertiesMessage
authenticationToken
sendCommandMessage
sendCommandResultMessage
getStateMessage
setStateMessage
setArtworkMessage
registerHIDDeviceMessage
registerHIDDeviceResultMessage
sendHIDEventMessage
sendHIDReportMessage
sendVirtualTouchEventMessage
notificationMessage
contentItemsChangedNotificationMessage
deviceInfoMessage
clientUpdatesConfigMessage
masterVolumeControlCapabilitiesDidChangeMessage
gameController
registerGameController
registerGameControllerResponse
unregisterGameController
registerForGameControllerEvents
keyboardMessage
getKeyboardMessage
textInputMessage
getVoiceInputDevicesMessage
getVoiceInputDevicesResponseMessage
registerVoiceInputDeviceMessage
registerVoiceInputDeviceResponseMessage
setRecordingStateMessage
sendVoiceInputMessage
playbackQueueRequest
transactionPackets
cryptoPairingMessage
gameControllerProperties
readyStateMessage
sendButtonEventMessage
setHiliteModeMessage
wakeDeviceMessage
genericMessage
sendPackedVirtualTouchEventMessage
sendLyricsEventMessage
setNowPlayingClientMessage
setNowPlayingPlayerMessage
modifyOutputContextRequestMessage
getVolumeMessage
getVolumeResultMessage
setVolumeMessage
volumeDidChangeMessage
removeClientMessage
removePlayerMessage
updateClientMessage
updateContentItemMessage
updateContentItemArtworkMessage
updatePlayerMessage
promptForRouteAuthorizationMessage
promptForRouteAuthorizationResponseMessage
presentRouteAuthorizationStatusMessage
getVolumeControlCapabilitiesMessage
getVolumeControlCapabilitiesResultMessage
volumeControlCapabilitiesDidChangeMessage
updateOutputDevicesMessage
removeOutputDevicesMessage
remoteTextInputMessage
getRemoteTextInputSessionMessage
playbackSessionRequestMessage
playbackSessionResponseMessage
setDefaultSupportedCommandsMessage
playbackSessionMigrateRequestMessage
playbackSessionMigrateResponseMessage
playbackSessionMigrateBeginMessage
playbackSessionMigrateEndMessage
updateActiveSystemEndpointMessage
discoveryModeMessage
updateEndpointsMessage
removeEndpointsMessage
playerClientPropertiesMessage
originClientPropertiesMessage
_authenticationToken
_clientUpdatesConfigMessage
_contentItemsChangedNotificationMessage
_cryptoPairingMessage
_deviceInfoMessage
_discoveryModeMessage
_errorCode
_errorDescription
_gameController
_gameControllerProperties
_genericMessage
_getKeyboardMessage
_getRemoteTextInputSessionMessage
_getStateMessage
_getVoiceInputDevicesMessage
_getVoiceInputDevicesResponseMessage
_getVolumeControlCapabilitiesMessage
_getVolumeControlCapabilitiesResultMessage
_getVolumeMessage
_getVolumeResultMessage
_keyboardMessage
_masterVolumeControlCapabilitiesDidChangeMessage
_modifyOutputContextRequestMessage
_notificationMessage
_originClientPropertiesMessage
_playbackQueueRequest
_playbackSessionMigrateBeginMessage
_playbackSessionMigrateEndMessage
_playbackSessionMigrateRequestMessage
_playbackSessionMigrateResponseMessage
_playbackSessionRequestMessage
_playbackSessionResponseMessage
_playerClientPropertiesMessage
_presentRouteAuthorizationStatusMessage
_promptForRouteAuthorizationMessage
_promptForRouteAuthorizationResponseMessage
_readyStateMessage
_registerForGameControllerEvents
_registerGameController
_registerGameControllerResponse
_registerHIDDeviceMessage
_registerHIDDeviceResultMessage
_registerVoiceInputDeviceMessage
_registerVoiceInputDeviceResponseMessage
_remoteTextInputMessage
_removeClientMessage
_removeEndpointsMessage
_removeOutputDevicesMessage
_removePlayerMessage
_sendButtonEventMessage
_sendCommandMessage
_sendCommandResultMessage
_sendHIDEventMessage
_sendHIDReportMessage
_sendLyricsEventMessage
_sendPackedVirtualTouchEventMessage
_sendVirtualTouchEventMessage
_sendVoiceInputMessage
_setArtworkMessage
_setDefaultSupportedCommandsMessage
_setHiliteModeMessage
_setNowPlayingClientMessage
_setNowPlayingPlayerMessage
_setRecordingStateMessage
_setStateMessage
_setVolumeMessage
_textInputMessage
_transactionPackets
_unregisterGameController
_updateActiveSystemEndpointMessage
_updateClientMessage
_updateContentItemArtworkMessage
_updateContentItemMessage
_updateEndpointsMessage
_updateOutputDevicesMessage
_updatePlayerMessage
_volumeControlCapabilitiesDidChangeMessage
_volumeDidChangeMessage
_wakeDeviceMessage
hasDescriptor
setHasPhase:
hasPhase
phaseAsString:
StringAsPhase:
setHasFinger:
hasFinger
_finger
_phase
initWithIdentifier:type:
initWithIdentifier:range:
_hasLocation
_hasLength
addExtendedBundleIdentifierHierarchy:
extendedBundleIdentifierHierarchysCount
clearExtendedBundleIdentifierHierarchys
extendedBundleIdentifierHierarchyAtIndex:
setIconURL:
extendedBundleIdentifierHierarchyType
setHasProcessIdentifier:
hasProcessIdentifier
hasBundleIdentifier
hasParentApplicationBundleIdentifier
setProcessUserIdentifier:
setHasProcessUserIdentifier:
hasProcessUserIdentifier
nowPlayingVisibility
setNowPlayingVisibility:
setHasNowPlayingVisibility:
hasNowPlayingVisibility
nowPlayingVisibilityAsString:
StringAsNowPlayingVisibility:
hasTintColor
setIsEmptyDeprecated:
setHasIsEmptyDeprecated:
hasIsEmptyDeprecated
hasIconURL
processUserIdentifier
tintColor
extendedBundleIdentifierHierarchys
setExtendedBundleIdentifierHierarchys:
isEmptyDeprecated
iconURL
_extendedBundleIdentifierHierarchys
_iconURL
_nowPlayingVisibility
_parentApplicationBundleIdentifier
_processIdentifier
_processUserIdentifier
_tintColor
_isEmptyDeprecated
initWithArray:
_processAlwaysNeedsNowPlayingNotifications
postNotification:userInfo:object:
_postNotification:userInfo:object:withHandler:
isRegisteredForNowPlayingNotifications
notificationQueue
receivesExternalScreenTypeChangedNotifications
setReceivesExternalScreenTypeChangedNotifications:
receivesSupportedCommandsNotifications
receivesRoutesChangedNotifications
setReceivesRoutesChangedNotifications:
receivesVolumeControlNotifications
setReceivesVolumeControlNotifications:
receivesOriginChangedNotifications
setReceivesOriginChangedNotifications:
receivesPlaybackErrorNotifications
setReceivesPlaybackErrorNotifications:
receivesVoiceInputRecordingStateNotifications
setReceivesVoiceInputRecordingStateNotifications:
_registeredNowPlayingObservers
_customNotificationsQueue
_nowPlayingNotifications
_routesChangedNotifications
_volumeControlNotifications
_externalScreenNotifications
_originNotifications
_supportedCommandsNotifications
_voiceInputNotifications
_errorNotifications
_receivesExternalScreenTypeChangedNotifications
_receivesSupportedCommandsNotifications
_receivesRoutesChangedNotifications
_receivesVolumeControlNotifications
_receivesOriginChangedNotifications
_receivesPlaybackErrorNotifications
_receivesVoiceInputRecordingStateNotifications
initWithNotification:userInfo:queue:
xpcMessage
setXpcMessage:
_notification
_xpcMessage
initWithSuiteName:
integerForKey:
arrayForKey:
takelockScreenAssertion
lowercaseString
defaultSupportedCommandsData
setInteger:forKey:
boolForKey:
doubleForKey:
usePeerToPeerExternalDeviceConnections
useNoDelayOptionForExternalDeviceSockets
useDebugAVRouteWithoutVolumeControl
shouldInitializeTelevisionBonjourService
shouldInitializeGenericBonjourService
shouldInitializeRapportService
shouldLogPairingSetupCode
verboseProtocolMessageLogging
shouldWakeDeviceForRemoteControlCommands
hasExternalDeviceSocketQOSLevelSet
externalDeviceSocketQOSLevel
externalDeviceNowPlayingInfoCoalesceDuration
externalDeviceNowPlayingInfoArtworkCoalesceDuration
externalDeviceDisconnectWaitDuration
externalDeviceDisconnectSleepDuration
externalDeviceSleepAssertionOnClientConnectDuration
bluetoothDeviceResumeDuration
broadcastCommandWaitDuration
airPlayOutputContextInitTimeoutDuration
maxTransactionMemorySize
transactionWaitDurationOnOutOfMemory
transactionWaitDurationOnXpcSend
transactionWaitDurationOnNetworkSend
useSystemAudioContextForAirPlayTransport
useGenericTransportForHostedEndpoints
connectedClientAuditTokens
setConnectedClientAuditTokens:
expectedClientAuditTokens
setExpectedClientAuditTokens:
queuedCommandsTimeoutInterval
nowPlayingApplicationTimeout
computeNowPlayingApplication
needNowPlayingForegroundState
useProactiveEndpoint
connectToEndpointWhenBeginsPlayback
connectToAllEndpointsWhenAnyEndpointBeginsPlayback
connectToUserSelectedEndpoint
discoverEndpointTimeoutInterval
deviceRecentlyUsedInterval
mediaRecentlyPlayedInterval
endpointRecentlyUserSelectedInterval
launchApplicationTimeoutInterval
remoteControlDiscoveryBlacklist
remoteControlDiscoveryWhitelist
supportProximityMigration
supportLastPlayingDevice
sendLastPlayingDeviceToHome
lastPlayingDeviceThresholdInterval
sendPlaybackSessionUpdateToCompanionCoalesceInterval
connectToAllEndpointsWhenInProximityToAnyDevice
defaultSupportedCommandsDataForClient:
updateDefaultSupportedCommandsData:forClient:
activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval
localPlaybackState
setLocalPlaybackState:
localLastPlayingDate
setLocalLastPlayingDate:
lastBootUUID
setLastBootUUID:
useOutputDeviceTransport
isExternalDevicePairingAllowed
setExternalDevicePairingAllowed:
_userDefaults
_externalDevicePairingAllowed
defaultPlaybackQueueRequestWithRange:
shouldRequestItemNotConsideringMetadata
match:
hasLegacyNowPlayingInfoRequest
setHasLegacyNowPlayingInfoRequest:
initWithIdentifiers:range:
rangeContainsNowPlayingItem
containsNonDefaultAssets
exactMatch:
_hasIncludeMetadata
_hasArtworkWidth
_hasArtworkHeight
_hasIncludeLyrics
_hasIncludeSections
_hasIncludeInfo
_hasIncludeLanguageOptions
_hasReturnContentItemAssetsInUserCompletion
_legacyNowPlayingInfoRequest
_hasLegacyNowPlayingInfoRequest
_hasCachingPolicy
addRequest:
addPlaybackQueueCompletion:forRequest:
subscribeToPlaybackQueue:forRequest:
removePlaybackQueueCompletionForRequest:
enqueuePlaybackQueueRequest:completion:
setInvalidatationTimestamp:
hasPassword
setHasSecurityType:
hasSecurityType
securityTypeAsString:
StringAsSecurityType:
_securityType
initWithOutputDevice:connectionType:allowAuthenticationPrompt:userInfo:error:
setStreamDelegate:
isChannelOpen
outputStream:didCloseCommunicationChannel:
initWithAVOutputDevice:connectionType:
_avOutputDevice
setHasPlayerIndex:
hasPlayerIndex
hasVendorName
setHasButtonAUpDelay:
hasButtonAUpDelay
setHasProfile:
hasProfile
profileAsString:
StringAsProfile:
_buttonAUpDelay
_playerIndex
_profile
_vendorName
initWithItem:request:
setItem:
item
_item
setHasStartOffset:
hasStartOffset
setHasVariableFramesInPacket:
hasVariableFramesInPacket
setHasDataByteSize:
hasDataByteSize
_startOffset
_dataByteSize
_variableFramesInPacket
setIncludesPeerToPeer:
endDiscovery
searchForServicesOfType:inDomain:
stop
mainRunLoop
startMonitoring
resolveWithTimeout:
externalDeviceController:didRemoveDevice:
stopMonitoring
externalDeviceClass
_isManagedConfigIDAllowed:
externalDeviceController:didDiscoverDevice:
effectiveValuesForUnionSetting:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
initWithBonjourServiceType:
beginDiscovery
bonjourServiceType
isDiscovering
_serviceBrowser
_discoveredDevices
_resolvingServices
_monitoringServices
_discovering
_bonjourServiceType
setPlaybackSession:
hasPlaybackSession
_playbackSession
initWithOutputContext:
initWithOutputContext:connectionType:userInfo:error:
removeOutputDevice:
outputContextForControllingOutputDeviceGroupWithID:options:
setHasDeviceIdentifier:
hasDeviceIdentifier
_deviceIdentifier
registerCallbacks
existingOriginClientRequestsForPlayerPath:
_processNeedsNonPlayerPathBasedNotificationsForBackwardCompatabilitySupport
_shouldPostNotifications
_postDefaultOriginNotifications:
_processActiveOriginInvalidationHandlersForNotification:
_processOriginInvalidationHandlersForNotification:
removeOriginRequests:
_notificationFired:originNotification:nowPlayingNotification:
_postDefaultAppilicationNotifications:
_processActiveApplicationInvalidationHandlersForNotification:
_processApplicationInvalidationHandlersForNotification:
initWithBundleIdentifier:
_notificationFired:clientNotification:originNotification:nowPlayingNotification:
_notificationFired:playerPathNotifcation:originNotification:nowPlayingNotification:
_postDefaultPlayerNotificationsWithUserInfo:object:
_processActivePlayerInvalidationHandlersForNotification:
_processPlayerInvalidationHandlersForNotification:
existingPlayerClientRequestsForPlayerPath:
updateContentItems:
hasRequest:
updateContentItemArtwork:
originClientRequestsForPlayerPath:
_handleActiveOriginDidChangeNotification:
_handleOriginDidRegisterNotification:
_handleOriginDidUnregisterNotification:
_handleVolumeControlCapabilitiesDidChangeNotification:
_handleVolumeDidChangeNotification:
_handleDeviceInfoDidChangeNotification:
_handleActiveApplicationDidChangeNotification:
_handleApplicationDidRegisterNotification:
_handleApplicationDidUnregisterNotification:
_handleApplicationClientStateDidChangeNotification:
_handleApplicationDisplayNameDidChangeNotification:
_handleApplicationDidForegroundNotification:
_handleActivePlayerDidChangeNotification:
_handlePlayerDidRegisterNotification:
_handlePlayerDidUnregisterNotification:
_handlePlayerPlaybackQueueDidChangeNotification:
_handlePlayerContentItemsDidChangeNotification:
_handlePlayerContentItemArtworkDidChangeNotification:
_handlePlayerSupportedCommandsDidChangeNotification:
_handlePlayerNowPlayingInfoDidChangeNotification:
_handlePlayerPlaybackStateDidChangeNotification:
_handlePlayerIsPlayingDidChangeNotification:
_handlePlayerStateDidChangeNotification:
_handleActiveSystemEndpointDidChangeNotification:
_serviceClient
recursiveUnderlyingError
componentsSeparatedByString:
valueForKeyPath:
isEqualToSet:
mr_isEqualToOutputDevicesArray:
setHasZ:
hasZ
setHasW:
hasW
initWithCallbackBlock:queue:
callbackBlock
_callbackBlock
discoveryCallback
setDiscoveryCallback:
removalCallback
setRemovalCallback:
_discoveryCallback
_removalCallback
migrateToOrAddOutputDevices:initiator:withReplyQueue:completion:
migrateToOrSetOutputDevices:initiator:withReplyQueue:completion:
setReturnPartialResults:
initWithPropertyListData:
propertyListData
setVersion:
setHasVersion:
hasVersion
_version
initWithEndpointFeatures:
enableThrottling
configurationWithEndpointFeatures:
setEnableThrottling:
_alwaysAllowUpdates
_populatesExternalDevice
discoverySessionWithConfiguration:
weakToStrongObjectsMapTable
strongToWeakObjectsMapTable
outputDevicesChangedCallbacks
endpointsChangedCallbacks
changeDescriptionTo:keyBlock:isUpdatedBlock:descriptionBlock:
initWithFeatures:
logOutputDevicesChanged:oldOutputDevices:
logEndpointsChanged:oldEndpoints:
setClientDiscoveryStates:
_endpointsChangedCallbacks
_outputDevicesChangedCallbacks
_clientDiscoveryStates
addMessage:
setPacketData:
hasPacketData
setTotalLength:
setHasTotalLength:
hasTotalLength
setTotalWritePosition:
setHasTotalWritePosition:
hasTotalWritePosition
packetData
totalLength
totalWritePosition
_totalLength
_totalWritePosition
_packetData
setRevision:
hasRevision
revision
_revision
_pickableRoutesDidChangeNotification:
mediaRemoteService
_mediaRemoteService
_pendingCompletionHandlersForCategories
_cachedRoutesForCategories
hasFormatSettingsPlistData
_formatSettingsPlistData
_handleCompanionDeviceDisconnectedNotification:
_handleCompanionDeviceDidResetNotification:
_onIDSQueue_initalizeDiscoveryChannel
_onIDSQueue_connectDiscoveryChannel
availableExternalEndpoints
availableExternalOutputDevices
discoveryChannel
_onIDSQueue_disconnectDiscoveryChannel
handleDeviceInfoUpdateMessage:
handleUpdateRemoteControlEndpointsMessage:
handleUpdateAudioOutputDevicesMessage:
externalEndpoints
setAvailableExternalEndpoints:
externalOutputDevices
setAvailableExternalOutputDevices:
setCompanionEndpoint:
setCompanionOutputDevices:
setAvailableExternalAudioOutputDevices:
transformOutputDevice:fromEndpoint:
availableExternalAudioOutputDevices
compaionEndpoint
companionOutputDevices
companionEndpoint
setDiscoveryChannel:
_discoveryChannel
_discoveryChannelConnectionAttemptDate
_discoveryChannelConnectionTimer
_availableExternalAudioOutputDevices
_availableExternalOutputDevices
_availableExternalEndpoints
_companionEndpoint
_companionOutputDevices
setSourceID:
setSystemAppPlaybackQueueData:
setContextID:
setStationURL:
setContentItemID:
setLanguageOption:
setPlaybackQueueContext:
setInsertAfterContentItemID:
setNowPlayingContentItemID:
setSenderID:
setRemoteControlInterface:
setUserIdentityData:
setInsertBeforeContentItemID:
setHomeKitUserIdentifier:
hasSourceID
setExternalPlayerCommand:
setHasExternalPlayerCommand:
hasExternalPlayerCommand
setRating:
setHasRating:
hasRating
setNegative:
setHasNegative:
hasNegative
hasContextID
setTrackID:
setHasTrackID:
hasTrackID
setRadioStationID:
setHasRadioStationID:
hasRadioStationID
hasSystemAppPlaybackQueueData
sendOptions
setSendOptions:
setHasSendOptions:
hasSendOptions
sendOptionsAsString:
StringAsSendOptions:
setRequestDefermentToPlaybackQueuePosition:
setHasRequestDefermentToPlaybackQueuePosition:
hasRequestDefermentToPlaybackQueuePosition
setShouldOverrideManuallyCuratedQueue:
setHasShouldOverrideManuallyCuratedQueue:
hasShouldOverrideManuallyCuratedQueue
hasStationURL
setShouldBeginRadioPlayback:
setHasShouldBeginRadioPlayback:
hasShouldBeginRadioPlayback
setPlaybackQueueInsertionPosition:
setHasPlaybackQueueInsertionPosition:
hasPlaybackQueueInsertionPosition
hasContentItemID
setPlaybackQueueOffset:
setHasPlaybackQueueOffset:
hasPlaybackQueueOffset
setPlaybackQueueDestinationOffset:
setHasPlaybackQueueDestinationOffset:
hasPlaybackQueueDestinationOffset
hasLanguageOption
hasPlaybackQueueContext
hasInsertAfterContentItemID
hasNowPlayingContentItemID
replaceIntent
setReplaceIntent:
setHasReplaceIntent:
hasReplaceIntent
replaceIntentAsString:
StringAsReplaceIntent:
hasSenderID
hasRemoteControlInterface
setBeginSeek:
setHasBeginSeek:
hasBeginSeek
setEndSeek:
setHasEndSeek:
hasEndSeek
hasUserIdentityData
hasInsertBeforeContentItemID
queueEndAction
setQueueEndAction:
setHasQueueEndAction:
hasQueueEndAction
queueEndActionAsString:
StringAsQueueEndAction:
setPreservesRepeatMode:
setHasPreservesRepeatMode:
hasPreservesRepeatMode
setPreservesShuffleMode:
setHasPreservesShuffleMode:
hasPreservesShuffleMode
setPreservesQueueEndAction:
setHasPreservesQueueEndAction:
hasPreservesQueueEndAction
hasHomeKitUserIdentifier
setVerifySupportedCommands:
setHasVerifySupportedCommands:
hasVerifySupportedCommands
sourceID
externalPlayerCommand
rating
negative
trackID
radioStationID
systemAppPlaybackQueueData
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
playbackQueueOffset
playbackQueueDestinationOffset
languageOption
playbackQueueContext
insertAfterContentItemID
nowPlayingContentItemID
senderID
remoteControlInterface
beginSeek
endSeek
userIdentityData
insertBeforeContentItemID
preservesRepeatMode
preservesShuffleMode
preservesQueueEndAction
homeKitUserIdentifier
verifySupportedCommands
_radioStationID
_trackID
_contentItemID
_contextID
_homeKitUserIdentifier
_insertAfterContentItemID
_insertBeforeContentItemID
_languageOption
_nowPlayingContentItemID
_playbackQueueContext
_playbackQueueDestinationOffset
_playbackQueueInsertionPosition
_playbackQueueOffset
_queueEndAction
_rating
_remoteControlInterface
_replaceIntent
_sendOptions
_senderID
_sourceID
_stationURL
_systemAppPlaybackQueueData
_userIdentityData
_beginSeek
_endSeek
_externalPlayerCommand
_negative
_preservesQueueEndAction
_preservesRepeatMode
_preservesShuffleMode
_requestDefermentToPlaybackQueuePosition
_shouldBeginRadioPlayback
_shouldOverrideManuallyCuratedQueue
_verifySupportedCommands
initWithCommandID:sendError:results:
_results
setHasStartTimestamp:
hasStartTimestamp
setHasEndTimestamp:
hasEndTimestamp
_endTimestamp
_startTimestamp
initWithMRError:userInfo:
initWithFormat:arguments:
enumerateFilteredContentItemsBySubscriptionsForContentItems:block:
clearCachedContentItemArtworkForItems:
filteredContentItemsBySubscriptionsForContentItems:
sendContentItemChanges:
mergeContentItems:
changeType
setChangeType:
setHasChangeType:
hasChangeType
changeTypeAsString:
StringAsChangeType:
hasReason
setHasPairedDeviceSync:
hasPairedDeviceSync
reason
pairedDeviceSync
_changeType
_reason
_pairedDeviceSync
initWithTimeout:interruptionHandler:
initWithTimeout:reason:queue:handler:
pairingSession:promptForSetupCodeWithCompletion:
dataExchangeBlock
showSetupCodeBlock
hideSetupCodeBlock
promptForSetupCodeBlock
exchangeCompleteBlock
_dataExchangeBlock
_showSetupCodeBlock
_hideSetupCodeBlock
_promptForSetupCodeBlock
_exchangeCompleteBlock
statusAsString:
StringAsStatus:
jsonDeviceDefinition
_accessSerialQueue
_airPlayReceiver
_isPickedOnPairedDevice
_isUsingJSONProtocol
_jsonDeviceDefinition
stringValue
string
applicationProxyForIdentifier:
entitlementValuesForKeys:
pathWithComponents:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
stringByReplacingOccurrencesOfString:withString:
compare:
sortedArrayUsingComparator:
initWithFirst:second:
addNotification:
addUserInfo:
addPlayerPath:
notificationsCount
clearNotifications
notificationAtIndex:
userInfosCount
clearUserInfos
userInfoAtIndex:
playerPathsCount
clearPlayerPaths
playerPathAtIndex:
notificationType
userInfoType
playerPathType
notifications
userInfos
setUserInfos:
playerPaths
setPlayerPaths:
_notifications
_playerPaths
_userInfos
actualLength
isReadComplete
initWithPackets:
writeComplete
setWriteLength:
isWriteComplete
isComplete
writeLength
writePosition
_writeLength
_writePosition
sortUsingComparator:
mergePacket:
_currentLength
isEmpty
packetize:packageSize:completion:
unpacketize:completion:
_outgoingPackets
_incomingPackets
_begin
_processMessage:
transactionDidEnd:
initWithName:playerPath:packets:delegate:
_packetizer
initWithName:playerPath:
packetsFromMessage:completion:
customDictionaryRepresentation
initialize
visibility
appIcon
bundleIdentifierHierarchy
setAppIcon:
hasAuxiliaryProperties
_visibility
_appIcon
_extendedBundleIdentifierHierarchy
initWithNotification:
initWithArtworkData:
messageSentCallbacks
_protobufData
_replied
_messageSentCallbacks
_messagePurgedCallbacks
_isReply
_underlyingCodableMessage
_replyIdentifier
_lastSupportedMessageType
packetsCount
clearPackets
packetsAtIndex:
packetsType
addGroupedDevices:
addAirplayReceivers:
clearGroupedDevices
groupedDevicesAtIndex:
airplayReceiversCount
clearAirplayReceivers
airplayReceiversAtIndex:
groupedDevicesType
airplayReceiversType
hasLocalizedModelName
hasSystemBuildVersion
hasApplicationBundleIdentifier
hasApplicationBundleVersion
setHasLastSupportedMessageType:
hasSystemMediaApplication
hasBluetoothAddress
hasDeviceUID
hasManagedConfigDeviceID
hasLogicalDeviceCount
hasTightSyncUID
hasGroupUID
hasGroupName
hasSystemPodcastApplication
hasSenderDefaultGroupUID
hasLinkAgent
hasClusterID
hasClusterLeaderID
_airplayReceivers
_applicationBundleIdentifier
_applicationBundleVersion
_logicalDeviceCount
_managedConfigDeviceID
_systemBuildVersion
_allowsPairing
_isAirplayActive
_tightlySyncedGroup
isAbsolute
isIntegratedDisplay
screenSize
setDeviceDescriptor:
deviceDescriptor
setScreenSize:
_deviceDescriptor
invalidatePlaybackQueue
invalidatePlaybackQueueWithPlaybackQueue:
initWithObjects:
unarchivedObjectOfClasses:fromData:error:
setByAddingObjectsFromArray:
setLanguageOptions:
setDefaultLanguageOption:
setAllowsEmptySelection:
languageOptions
defaultLanguageOption
allowsEmptySelection
hasHidEventData
_hidEventData
pINEntrySeparatorIndexesCount
clearPINEntrySeparatorIndexes
pINEntrySeparatorIndexesAtIndex:
addPINEntrySeparatorIndexes:
autocapitalizationType
setAutocapitalizationType:
setHasAutocapitalizationType:
hasAutocapitalizationType
autocapitalizationTypeAsString:
StringAsAutocapitalizationType:
keyboardType
setKeyboardType:
setHasKeyboardType:
hasKeyboardType
keyboardTypeAsString:
StringAsKeyboardType:
returnKeyType
setReturnKeyType:
setHasReturnKeyType:
hasReturnKeyType
returnKeyTypeAsString:
StringAsReturnKeyType:
setAutocorrection:
setHasAutocorrection:
hasAutocorrection
setSpellchecking:
setHasSpellchecking:
hasSpellchecking
setEnablesReturnKeyAutomatically:
setHasEnablesReturnKeyAutomatically:
hasEnablesReturnKeyAutomatically
setSecureTextEntry:
setHasSecureTextEntry:
hasSecureTextEntry
setValidTextRangeLocation:
setHasValidTextRangeLocation:
hasValidTextRangeLocation
setValidTextRangeLength:
setHasValidTextRangeLength:
hasValidTextRangeLength
pINEntrySeparatorIndexes
setPINEntrySeparatorIndexes:count:
autocorrection
spellchecking
enablesReturnKeyAutomatically
secureTextEntry
validTextRangeLocation
validTextRangeLength
_pINEntrySeparatorIndexes
_validTextRangeLength
_validTextRangeLocation
_autocapitalizationType
_keyboardType
_returnKeyType
_autocorrection
_enablesReturnKeyAutomatically
_secureTextEntry
_spellchecking
playbackQueueTransactionCallback
playbackQueueCallback
_onQueue_capabilities
registerNowPlayingInfoCallbacks:
registerNowPlayingInfoAssetCallbacks:
registerNowPlayingInfoArtworkAssetCallback:
copyImageData
mimeType
initWithPlayerPath:queue:
setBeginLyricsEventCallback:
setEndLyricsEventCallback:
registerNowPlayingInfoBackedPlaybackQueueDataSourceCallbacks
_createPlaybackQueueForRequestCallbacks
_createItemForOffsetCallbacks
_createItemForIdentifierCallbacks
_createChildItemCallbacks
_metadataCallbacks
_languageOptionsCallbacks
_infoCallbacks
_lyricsCallbacks
_artworkCallbacks
_playbackSessionCallback
_playbackSessionMigrateBeginCallback
_playbackSessionMigrateEndCallback
_playbackSessionMigrateRequestCallback
_beginLyricsEventCallback
_endLyricsEventCallback
_videoThumbnailsCallback
_audioAmplitudeSamplesCallback
_commandHandlerBlocks
_createItemToken
_createItemForIdentifierToken
_metadataToken
_languageToken
_artworkToken
initWithError:
clientBundleIdentifier
initWithOutputDeviceUID:reason:
_clientBundleIdentifier
green
blue
alpha
initWithIdentifier:displayName:
setAudioSessionType:
audioSessionType
initWithPlayerPath:queue:invalidationCallback:
_callback
bundleProxyForIdentifier:
bundleURL
bundleWithURL:
arrayWithArray:
setDiscoveryMode:forFeature:
discoveryModeForFeature:
clearDiscoveryModes
encryptDataForMessage:
decryptData:error:
_discoveryModesForFeatures
_red
_green
_blue
_alpha
setMaxConcurrentOperationCount:
waitUntilAllOperationsAreFinished
localizedCaseInsensitiveCompare:
sortUsingSelector:
_externalDeviceConnectionStateDidChangeNotification:
addOperationWithBlock:
migrateToLogicalOutputDevice:request:initiator:queue:completion:
_prepareToMigrateToEndpoint:queue:completion:
isEqualToOrderedSet:
scheduledTimerWithTimeInterval:repeats:block:
logicalOutputDeviceCount
shortDescription
isCompanionEndpoint
canMigrateToEndpoint:queue:completion:
outputDeviceUIDsMatchingPredicate:
effectivelyEqual:
_pendingConnectionHandlers
_connectionHandlerOperationQueue
_registeredForConnectionStateDidChangeNotifications
_connectionTimeoutTimer
_outputDevicesDidChangeNotificationScheduled
dictionaryKeyWithPlayerPath:
second
first
keyForObject:
initWithCapacity:falsePositiveTolerance:
restoreStateFromController:
removeRequest:
_requestFilters
_requests
_offsets
_handlePlayerPathRemovedNotification:
_handleApplicationRemovedNotification:
_handleOriginRemovedNotification:
initWithQueue:
subscriptionControllerForPlayerPath:
_controllers
airPlayProperties
identifyingMACAddress
modelSpecificInformation
canBeGroupLeader
participatesInGroupPlayback
isInUseByPairedDevice
setCurrentBluetoothListeningMode:error:
supportsHeadTrackedSpatialAudio
isHeadTrackedSpatialAudioActive
clusteredDeviceDescriptions
deviceFeatures
volumeControlType
HAPConformance
pairedDevicesConnectedToOutputDevice:
isPlaying
setAVOutputDevice:
_overrideUID
_overrideGroupID
arrayByAddingObject:
initWithPrimaryOutputDevice:members:sourceInfo:
memberOutputDevices
_memberOutputDevices
mxSessionIDsCount
setWithCapacity:
mxSessionIDAtIndex:
setHasAudioSessionType:
addMxSessionID:
isDefaultPlayer
_audioSessionType
_mxSessionIDs
setHasInputModeFlags:
hasInputModeFlags
inputModeFlagsAsString:
StringAsInputModeFlags:
_inputModeFlags
addEndpointUIDs:
endpointUIDsCount
clearEndpointUIDs
endpointUIDsAtIndex:
endpointUIDsType
_endpointUIDs
setHasDPadX:
hasDPadX
setHasDPadY:
hasDPadY
setHasA:
hasA
setHasB:
hasB
setHasLeftShoulder:
hasLeftShoulder
setHasRightShoulder:
hasRightShoulder
setHasLeftThumbstickX:
hasLeftThumbstickX
setHasLeftThumbstickY:
hasLeftThumbstickY
setHasRightThumbstickX:
hasRightThumbstickX
setHasRightThumbstickY:
hasRightThumbstickY
setHasLeftTrigger:
hasLeftTrigger
setHasRightTrigger:
hasRightTrigger
setHasPause:
hasPause
_dPadX
_dPadY
_leftShoulder
_leftThumbstickX
_leftThumbstickY
_leftTrigger
_pause
_rightShoulder
_rightThumbstickX
_rightThumbstickY
_rightTrigger
minimalReadableDescription
archivedDataWithRootObject:requiringSecureCoding:error:
transactionCallbacksForName:
addTransactionCallback:forName:
_responseQueue
_playbackQueueCompletions
_supportedCommandsCompletions
_playbackStateCompletions
_transactions
_enquedNowPlayingInfoRequests
_enquedNowPlayingInfoAssetRequests
_subscriptionController
_mimeType
_registerMediaServerNotifications
_unregisterMediaServerNotifications
sharedInstance
_avSessionMediaServicesResetNotification:
applicationPickedRoutes
setApplicationPickedRoutes:
setRouteDiscoveryMode:
routeDiscoveryMode
activeNowPlayingClient
setActivity:
activity
existingNowPlayingClientForPlayerPath:
nowPlayingClientForPlayerPath:
hardwareRemoteBehavior
_canBeNowPlayingApp
_canBeNowPlayingAppTimestamp
_isOverrideApp
_routeDiscoveryMode
_applicationPickedRoutes
_inputMode
_activity
_playbackQueueCallback
_playbackQueueTransactionCallback
_capabilitiesCallback
_commandCallback
_hardwareRemoteBehavior
_activeNowPlayingClient
nowPlayingPlayerClientForPlayerPath:
setActiveRequestedDate:
setActivePlayerPath:completion:
activeRequestedDate
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
applicationWillEnterForeground
applicationDidEnterBackground
useMediaRemoteActivePlayerHeuristic
setUseMediaRemoteActivePlayerHeuristic:
_activePlayer
_isForeground
_useMediaRemoteActivePlayerHeuristic
initWithObjects:forKeys:
mr_all:
mr_containsAnyOf:
mr_flatMap:
hasPrefix:
_BoolValue
sharedClient
setRecordingStateCallback:forDeviceID:
_recordingStateChangedNotification:
_deviceIDToCallbackMap
initWithMachServiceName:options:
addController:
removeController:
controllerWithUDID:setData:
controllerWithUDID:setValue:forElement:
microControllerWithDigitizerX:withY:withTimeStamp:touchDown:
microControllerWithUDID:setDigitizerX:digitizerY:withTimeStamp:touchDown:
replyConnectedHosts:
ping
addController:forward:
removeController:forward:
controllerWithUDID:setValue:forElement:forward:
controllerWithUDID:setArrayValue:forElement:forward:
appWillEnterForeground
appDidEnterBackground
appWillEnterForegroundWithPID:
appDidEnterBackgroundWithPID:
initWithProfile:
_openConnection
_setCompassEnabled:
_delayEvent:setValue:forElement:withUpDelay:
controllerID:setValue:forElement:
invokeEventsForController:beacuseElement:
eventForController:element:
sendEventBlock
send
setLastDownEvent:
lastDownEvent
setSendEventBlock:
deviceHash
defaultGameControllerDaemonProxy
addEmulatedControllerWithProperties:
removeEmulatedController:
controllerID:setValue:forElement:withUpDelay:
controllerID:setDigitizerX:digitizerY:withTimeStamp:touchDown:
controllerID:setArrayValueX:y:z:w:forElement:
_remote
_delayedEvents
_lastDownEvent
_sendEventBlock
nowPlayingContentItem
sortedArrayUsingSelector:
reverseObjectEnumerator
flushPendingPlaybackSessionMigrateEvents:
setInvalidatingPlaybackQueue:
_onQueue_enqueueContentItemChangesForPendingPlaybackQueueInvalidation:
localizedStringFromDate:dateStyle:timeStyle:
invalidatationTimestamp
invalidatingPlaybackQueue
beginSendingTransactions
endSendingTransactions
addPendingRequest:
startCachingContentItemUpdatesForItem:forPendingRequest:
updatePlaybackQueueWithCachedUpdates:forPendingRequest:
_playbackStateDate
_lastReceivedCommandDate
_activeRequestedDate
_pictureInPictureEnabled
_invalidatingPlaybackQueue
_invalidatationTimestamp
_coelscingTransactionPackets
_transactionSources
_pendingPlaybackSessionMigrateEvents
_cachedContentItemChangedForPendingPlaybackQueueRequest
_enqueuedContentItemChangesForPendingPlaybackQueueInvalidation
_clientCallbacks
increaseLengthBy:
sharedLogger
logMessage:client:protocolMessage:
invoke
processData:
parser:didParseMessage:
inputStream
outputStream
_parser
_messageQueue
_firstClientNanoseconds
_firstDeviceTicks
_disconnected
receivesLongFormAudioFromLocalDevice
registerVolumeNotifications
errorWithChangeResult:outputDevice:
addOutputDevice:withOptions:completionHandler:
removeOutputDevice:withOptions:completionHandler:
volumeForOutputDevice:error:
handleVolumeChangedNotification:
handleVolumeCapabilityChangedNotification:
initWithOutputDeviceGroup:groupLeader:outputDevices:
_outputDeviceGroup
clearDeviceIDs
setDeviceIDs:count:
_deviceIDs
initWithState:encryptedTextCyphertext:attributes:
encryptedMessageWithState:text:attributes:usingCryptoSession:
setController:
controller
_handleGameControllerDidChange:
hasGravity
hasUserAcceleration
hasAttitude
hasRotation
buttons
gameController:propertiesDidChange:
sendGameControllerEvent:
_controller
setUserProvided:
setHasUserProvided:
hasUserProvided
userProvided
_userProvided
hasResolvedPlayerPath
setHasSendingPlaybackQueueTransaction:
_sendingPlaybackQueueTransaction
_hasSendingPlaybackQueueTransaction
_resolvedPlayerPath
subscribedOrigins
subscribeOrigin:
unsubscribeOrigin:
registeredToNowPlayingUpdates
setRegisteredToNowPlayingUpdates:
registeredToVolumeUpdates
setRegisteredToVolumeUpdates:
registeredKeyboardUpdates
setRegisteredKeyboardUpdates:
registeredToOutputDeviceUpdates
setRegisteredToOutputDeviceUpdates:
registeredToSystemEndpointUpdates
setRegisteredToSystemEndpointUpdates:
cryptoEnabled
_subscribedOrigins
_registeredToNowPlayingUpdates
_registeredToVolumeUpdates
_registeredKeyboardUpdates
_registeredToOutputDeviceUpdates
_registeredToSystemEndpointUpdates
_cryptoEnabled
_voiceRecordingState
_cryptoSession
addLanguageOptions:
languageOptionsCount
clearLanguageOptions
languageOptionsAtIndex:
languageOptionsType
setAllowEmptySelection:
setHasAllowEmptySelection:
hasAllowEmptySelection
hasDefaultLanguageOption
allowEmptySelection
_defaultLanguageOption
_languageOptions
_allowEmptySelection
setHasDeviceID:
hasDeviceID
setHasRecordingState:
hasRecordingState
recordingStateAsString:
StringAsRecordingState:
clientRequestsForPlayerPath:
existingClientRequestsForPlayerPath:
_originClients
_originClientRequests
hasAllowsEmptySelection
setByAddingObject:
initWithLanguageOptions:defaultLanguageOption:allowsEmptySelection:
setHasAllowsEmptySelection:
_allowsEmptySelection
_hasAllowsEmptySelection
setHasRed:
hasRed
setHasGreen:
hasGreen
setHasBlue:
hasBlue
setHasAlpha:
hasAlpha
block
callbacks
initWithObjectsAndKeys:
addEndpoints:
endpointsCount
clearEndpoints
endpointsAtIndex:
endpointsType
setHasEndpointFeatures:
hasEndpointFeatures
endpointFeaturesAsString:
StringAsEndpointFeatures:
initWithPairingData:status:
clearMxSessionIDs
hasAudioSessionType
audioSessionTypeAsString:
StringAsAudioSessionType:
setMxSessionIDs:count:
_screenSize
initWithTitle:prompt:
isEditing
_editing
beginSearchWithTimeout:endpointsCompletion:
beginSearchWithTimeout:mapCompletion:
cancelSearch
pairWithFirst:second:
mr_containsObjectUsingWeakMatching:
intersectSet:
matchingOutputDeviceUIDs
matchingOutputDeviceGroupID
useWeakMatching
setUseWeakMatching:
returnPartialResults
matchingLogicalDeviceIDs
_timeoutTimerTimeout
_localMatchingDevicesFound
_useWeakMatching
_returnPartialResults
_searchInProgress
_shouldWaitForUnanimousEndpoints
_matchingLogicalDeviceIDs
_matchingOutputDeviceUIDsSet
_matchingOutputDeviceGroupID
_discoverySessionCallbackToken
_timeoutTimer
_callbackSyncQueue
_matchingDevicesFound
_matchingEndpointsFound
_unanimousEndpoint
_availableOutputDevices
_availableEndpoints
_updatesReceived
_lastProcessedOutputDevices
_lastProcessedEndpoints
_expectedLogicalDevices
compare:options:
searchEndpointsForGroupUID:timeout:reason:queue:completion:
searchEndpointsForCompanionWithTimeout:reason:queue:completion:
searchForOutputDeviceUID:timeout:reason:queue:completion:
searchForLogicalOutputDeviceUID:timeout:reason:queue:completion:
_buttons
_digitizer
_motion
hasDataBlock
addContentItem:
contentItemAtIndex:
contentItemType
setCommunicationChannelDelegate:
outputDevice:didReceiveData:fromCommunicationChannel:
outputDevice:didCloseCommunicationChannel:
openCommunicationChannelWithOptions:completionHandler:
_outputDeviceDidCloseCommunicationChannelNotification:
sendData:completionHandler:
streamDelegate
communicationChannel
channelIsOpen
setChannelIsOpen:
_communicationChannel
_streamError
_channelOpen
_channelIsOpen
_streamDelegate
hasImageData
setHasTime:
initWithDeviceFeatures:
_availableOutputDevicesDidChangeNotification:
_scheduleReload
_onQueue_reload
targetAudioSession
retrieveSessionWithID:
setTargetAudioSession:
_scheduleAvailableOutputDevicesReload
_onQueue_reloadAvailableOutputDevices
_checkClusterConsistencyWithLeaders:members:
setAvailableOutputDevices:
objectsForKeys:notFoundMarker:
daemonVirtualDevices
setDaemonVirtualDevices:
_shouldCreateClusterOutputDevices
virtualOutputDevices
_reloadQueue
_avDiscoverySession
_targetAudioSessionID
_virtualOutputDevices
_scheduledAvailableOutputDevicesReload
_airplayActiveNotificationToken
_isLocalDeviceBeingAirplayedTo
initWithConfiguration:clusterController:
_availableEndpointsDidChangeNotification:
_virtualDevicesDidChangeNotification:
_externalDeviceConnectionStateDidChange:
_onQueue_reloadAvailableEndpoints
_scheduleAvailableEndpointsReload
externalDeviceForIdentifier
inferAvailableOutputDevices
availableOutputDeviceGroups
deduplicateAVODGroups:
_logAVODGroupsChangedFrom:toNewGroups:
setAvailableOutputDeviceGroups:
groupLeader
_onQueue_populateExternalDevice:
setAvailableEndpoints:
arrayByAddingObjectsFromArray:
setExternalDeviceForIdentifier:
_virtualOutputDeviceNotificationToken
_clusterController
_scheduledAvailableEndpointsReload
_availableOutputDeviceGroups
communicationChannelDelegate
outputContextOutgoingCommunicationChannelDidBecomeAvailable:
outputContext:didReceiveData:fromCommunicationChannel:
outputContext:didCloseCommunicationChannel:
outputContext
openCommunicationChannelWithOptions:error:
_outputContextDidCloseCommunicationChannelNotification:
initWithCommunicationChannel:
encodeInt:forKey:
decodeIntForKey:
initWithPrimaryAppDisplayID:secondaryAppDisplayID:
primaryApplicationDisplayID
secondaryApplicationDisplayID
creatorProcessID
_primaryApplicationDisplayID
_secondaryApplicationDisplayID
_creatorProcessID
setPrimaryApplicationDisplayID:
setSecondaryApplicationDisplayID:
hasDeviceDescriptor
hasOrigin
hasPlayer
_attitude
_gravity
_rotation
_userAcceleration
setCharacterCount:
setPasscode:
_characterCount
_passcode
setShouldLog:
setShouldVerboselyLog:
shouldVerboselyLog
_shouldLog
_shouldVerboselyLog
@24@0:8^{_NSZone=}16
v16@0:8
Q16@0:8
^d16@0:8
v24@0:8d16
d24@0:8Q16
v32@0:8^d16Q24
v20@0:8f16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
f16@0:8
{?="list"^d"count"Q"size"Q}
{?="thumbnailsHeight"b1"thumbnailsWidth"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"MRProtocolClientConnection"16@"MRProtocolMessage"24
v32@0:8@"MRProtocolClientConnection"16@"NSError"24
@32@0:8@16@24
@24@0:8@16
v32@0:8@16@?24
v24@0:8@?16
v28@0:8f16@?20
v36@0:8f16@20@?28
v48@0:8@16@24@32@?40
@"<MRLegacyControllerDelegate>"
@"NSString"
@"MRExternalDevice"
@"NSObject<OS_dispatch_queue>"
v20@0:8i16
@24@0:8Q16
i16@0:8
d16@0:8
@"NSMutableArray"
@"_MRPlaybackQueueContextProtobuf"
@"_MRNowPlayingPlayerPathProtobuf"
{?="artworkHeight"b1"artworkWidth"b1"cachingPolicy"b1"length"b1"location"b1"includeInfo"b1"includeLanguageOptions"b1"includeLyrics"b1"includeMetadata"b1"includeSections"b1"isLegacyNowPlayingInfoRequest"b1"returnContentItemAssetsInUserCompletion"b1}
@40@0:8@16@24@32
@"NSData"
v24@0:8Q16
@"_MRGameControllerPropertiesProtobuf"
{?="controllerID"b1}
@40@0:8B16B20B24B28B32B36
@32@0:8I16I20@24
I16@0:8
@"_MRLyricsTokenProtobuf"
{?="endTime"b1"startTime"b1}
@"_MRAudioBufferProtobuf"
@"_MRAudioTimeProtobuf"
{?="gain"b1}
@24@0:8^{PairingSessionPrivate=}16
@?16@0:8
v48@0:8@16Q24@?32@40
@"<MRProtocolMessageQueueDataSource>"
@"<MRProtocolMessageQueueDelegate>"
@"MRPendingMessageQueue"
@"NSMutableDictionary"
@32@0:8@16@?24
q16@0:8
v24@0:8q16
@"MRProtocolMessage"
@28@0:8I16@20
@44@0:8I16@20@28@36
@"NSArray"
@"MRUpdateActiveSystemEndpointRequest"
@28@0:8@16I24
@"MRAVOutputDevice"
@40@0:8@16Q24Q32
@"AVAudioCompressedBuffer"
@"NSDictionary"
@20@0:8i16
i24@0:8@16
@"_MRAVOutputDeviceDescriptorProtobuf"
{?="inputType"b1}
@"MRNowPlayingState"
@20@0:8I16
@20@0:8B16
@"_MRNowPlayingInfoProtobuf"
@"_MRPlaybackQueueProtobuf"
@"_MRPlaybackQueueCapabilitiesProtobuf"
@"_MRPlaybackQueueRequestProtobuf"
@"_MRSupportedCommandsProtobuf"
{?="playbackStateTimestamp"b1"playbackState"b1}
{?="type"b1}
{?="duration"b1"elapsedTime"b1"radioStationIdentifier"b1"timestamp"b1"uniqueIdentifier"b1"playbackRate"b1"repeatMode"b1"shuffleMode"b1"isAdvertisement"b1"isAlwaysLive"b1"isExplicitTrack"b1"isMusicApp"b1}
{?="sampleRate"b1"timestamp"b1}
@"_MRReceivedCommandAppOptionsProtobuf"
@"_MRCommandOptionsProtobuf"
{?="destinationAppProcessID"b1"command"b1"originUID"b1}
@32@0:8@16Q24
@"_MRLyricsItemProtobuf"
@"_MRContentItemMetadataProtobuf"
{?="artworkDataHeight"b1"artworkDataWidth"b1}
d24@0:8@16
@"NSDate"
@"NSURL"
{?="launchApplication"b1}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v44@0:8f16@20@28@?36
v40@0:8@16@24@?32
@"MRAVOutputContext"
@"MROutputContextController"
@"MRAVOutputDeviceSourceInfo"
v20@0:8I16
@24@0:8@?16
@"MRAVRoutingDiscoverySessionConfiguration"
@"MRAVRoutingDiscoverySession"
{?="state"b1}
{?="volume"b1}
@"_MRUpdateActiveSystemEndpointRequestProtobuf"
@"_MRVolumeControlAvailabilityProtobuf"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@32@0:8@16q24
@"IDSService"
q32@0:8r*16Q24
@"_MRVirtualTouchEventProtobuf"
{?="virtualDeviceID"b1}
@"MRAVEndpoint"
@"MRSupportedProtocolMessages"
@"MRDeviceInfo"
v28@0:8I16@20
v52@0:8I16@20@28@36@?44
v32@0:8d16@?24
v28@0:8I16I20B24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?@"MRAVDistantExternalDeviceMetadata"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v24@0:8@?<v@?I@"NSError">16
v28@0:8I16@"NSDictionary"20
v24@0:8@"NSError"16
v32@0:8@"NSString"16@?<v@?f@"NSError">24
v36@0:8f16@"NSString"20@?<v@?@"NSError">28
v32@0:8@"NSString"16@?<v@?I@"NSError">24
v52@0:8I16@"NSArray"20@"NSArray"28@"NSArray"36@?<v@?@"NSError">44
v32@0:8@"NSData"16@"NSString"24
v32@0:8d16@?<v@?@"NSError">24
v36@0:8f16@20@28
v36@0:8I16@20@28
v28@0:8I16@"NSError"20
v24@0:8@"NSString"16
v36@0:8f16@"NSString"20@"NSString"28
v24@0:8@"MRAVEndpoint"16
v36@0:8I16@"NSString"20@"NSString"28
v32@0:8@?16@24
v60@0:8I16@20@28@36@44@?52
v40@0:8d16@?24@32
v28@0:8{_MRHIDButtonEvent=IIB}16
@"MRAVDistantExternalDeviceMetadata"
@"NSXPCConnection"
@"MROrigin"
@"NSNumber"
@52@0:8I16@20@28@36@44
B20@0:8I16
{?="duration"b1"elapsedTime"b1"elapsedTimeTimestamp"b1"iTunesStoreAlbumIdentifier"b1"iTunesStoreArtistIdentifier"b1"iTunesStoreIdentifier"b1"iTunesStoreSubscriptionIdentifier"b1"inferredTimestamp"b1"legacyUniqueIdentifier"b1"radioStationIdentifier"b1"releaseDate"b1"startTime"b1"artworkDataHeightDeprecated"b1"artworkDataWidthDeprecated"b1"chapterCount"b1"defaultPlaybackRate"b1"discNumber"b1"downloadProgress"b1"downloadState"b1"editingStyleFlags"b1"episodeNumber"b1"episodeType"b1"mediaSubType"b1"mediaType"b1"numberOfSections"b1"playCount"b1"playbackProgress"b1"playbackRate"b1"playlistType"b1"radioStationType"b1"seasonNumber"b1"totalDiscCount"b1"totalTrackCount"b1"trackNumber"b1"artworkAvailable"b1"infoAvailable"b1"isAlwaysLive"b1"isContainer"b1"isCurrentlyPlaying"b1"isExplicitItem"b1"isInWishList"b1"isLiked"b1"isLoading"b1"isPlayable"b1"isSharable"b1"isSteerable"b1"isStreamingContent"b1"languageOptionsAvailable"b1"lyricsAvailable"b1}
{?="dateGenerated"b1}
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
{?="list"^i"count"Q"size"Q}
{?="sendError"b1}
r^{?=^?^?^?^?^?^?^?^?^?^?^?^v}
r^{?=^v^?^?^?^?^?^?^?}
r^{?=^v^?^?^?}
r^{?=^v@?}
r^{?=^v^?}
@"MRXPCConnection"
@"NSObject<OS_xpc_object>"
@20@0:8f16
@28@0:8f16@20
{?="lastPlayingTimestamp"b1}
@"_MRAudioFormatSettingsProtobuf"
@36@0:8i16q20@28
{?="maximumPacketSize"b1"packetCapacity"b1"packetCount"b1}
@"IDSDevice"
@40@0:8@16q24q32
{?="multipleBuiltInDevices"b1}
v24@0:8#16
{?="requestByIdentifiers"b1"requestByRange"b1"requestByRequest"b1}
@"MRVirtualVoiceInputDeviceDescriptor"
@28@0:8I16q20
@44@0:8@16{?=dd}24f40
{?=dd}16@0:8
@"MRAudioDataBlock"
v28@0:8f16@20
f24@0:8@16
I24@0:8@16
@"MRPlaybackQueue"
@"MRPlayerPath"
@"MRPlaybackQueueRequest"
B32@0:8@16@24
q32@0:8*16Q24
B32@0:8^*16^Q24
@"<NSStreamDelegate>"
@"NSRunLoop"
@"NSMutableData"
@28@0:8@16B24
@32@0:8*16Q24
@"AVOutputContext"
@32@0:8Q16@24
@32@0:8#16@24
@24@0:8I16I20
{?="features"b1"mode"b1}
@32@0:8q16Q24
@40@0:8Q16@24@32
@"NSPointerArray"
@"_MRNowPlayingClientProtobuf"
@"_MRPlaybackSessionMigrateRequestProtobuf"
@"NSError"
v24@0:8@"NSData"16
v32@0:8@16Q24
v32@0:8@"NSStream"16Q24
B40@0:8^@16^@24@32
@"NSInputStream"
@"NSOutputStream"
@"CURunLoopThread"
@"NSXPCListenerEndpoint"
@"MRClient"
@"MRPlayer"
@"NSNetService"
{?="state"b1"status"b1"isRetrying"b1"isUsingSystemPairing"b1}
{?="connectionType"b1"canModifyGroupMembership"b1"isLocalEndpoint"b1"isProxyGroupPlayer"b1}
@"Protocol"
{?="timestamp"b1"actionType"b1}
@24@0:8^@16
v24@0:8@"RTIDataPayload"16
v56@0:8{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16Q48
v48@0:8I16@20{?=dd}28f44
@"RTIInputSystemSourceSession"
@36@0:8f16@20@28
@36@0:8I16@20@28
{?="screenSizeHeight"b1"screenSizeWidth"b1"absolute"b1"integratedDisplay"b1}
@"NSObject<OS_os_transaction>"
@32@0:8@16^@24
B24@0:8^@16
@"<MRCryptoPairingSessionDelegate>"
v32@0:8I16B20@?24
v28@0:8I16@?20
v32@0:8I16B20@?<v@?@"NSError">24
v28@0:8I16@?<v@?@"NSError">20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@"NSArray"16
@"_MRContentItemProtobuf"
@"_MRPlaybackSessionRequestProtobuf"
{?="playbackPosition"b1"playbackRate"b1"endpointOptions"b1"playbackState"b1"playerOptions"b1}
v40@0:8I16B20@24@32
v40@0:8^v16^v24@?32
v32@0:8I16I20@24
v44@0:8I16@20^v28@?36
@"MROSTransaction"
@"MRExternalClientConnection"
@"MRContentItem"
@"MRExternalDeviceTransport"
@"_MRLyricsEventProtobuf"
{?="volumeCapabilities"b1"volumeControlAvailable"b1}
{?="command"b1}
@"_MRTextInputTraitsProtobuf"
{?="artworkUpdates"b1"keyboardUpdates"b1"nowPlayingUpdates"b1"outputDeviceUpdates"b1"systemEndpointUpdates"b1"volumeUpdates"b1}
@28@0:8@16i24
@56@0:8{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16Q48
{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16@0:8
@"_MRTransactionPacketsProtobuf"
{?="name"b1}
v32@0:8@?16Q24
@?24@0:8Q16
{?="timestamp"b1"x"b1"y"b1"touchDown"b1}
{?="outputContextType"b1}
@24@0:8^{__IOHIDEvent=}16
{_MRHIDButtonEvent=IIB}16@0:8
^{__IOHIDEvent=}
@"MRPasscodeCredentials"
^{PairingSessionPrivate=}
{?="context"^v"showSetupCode_f"^?"hideSetupCode_f"^?"promptForSetupCode_f"^?"copyIdentity_f"^?"findPeer_f"^?"savePeer_f"^?"resumeRequest_f"^?"resumeResponse_f"^?}
@24@0:8q16
@32@0:8q16@24
@"MRIDSInputStream"
@"MRIDSOutputStream"
@"NSHashTable"
v40@0:8Q16@24@?32
@32@0:8^{_NSZone=}16#24
@"MRAudioBuffer"
{?="timestamp"d"sampleRate"d}
v32@0:8{?=dd}16
@"MRCoreUtilsPairingSession"
@"MRCryptoPairingSessionBlockDelegate"
@"MRAVRoutingClientController"
@"NSMutableSet"
@"MRNotificationServiceClient"
@"MRMediaRemoteService"
@"MRNotificationClient"
@28@0:8{_MRHIDButtonEvent=IIB}16
@"MRAVDistantOutputDevice"
@"MRDistantExternalDevice"
{?="hiliteMode"b1}
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
{?="list"^f"count"Q"size"Q}
{?="canScrub"b1"command"b1"currentQueueEndAction"b1"disabledReason"b1"maximumRating"b1"minimumRating"b1"numAvailableSkips"b1"preferredPlaybackRate"b1"presentationStyle"b1"repeatMode"b1"shuffleMode"b1"skipFrequency"b1"skipInterval"b1"upNextItemCount"b1"active"b1"enabled"b1"supportsSharedQueue"b1}
{?="usage"b1"usagePage"b1"buttonDown"b1}
@"_MRDeviceInfoMessageProtobuf"
{?="identifier"b1"type"b1}
@"_MRTextEditingAttributesProtobuf"
{?="length"b1"location"b1}
@"_MRAVOutputDeviceSourceInfoProtobuf"
{?="batteryLevel"b1"deviceSubType"b1"deviceType"b1"volume"b1"volumeCapabilities"b1"canAccessAppleMusic"b1"canAccessRemoteAssets"b1"canAccessiCloudMusicLibrary"b1"canFetchMediaDataFromSender"b1"canPlayEncryptedProgressiveDownloadAssets"b1"canRelayCommunicationChannel"b1"groupContainsGroupLeader"b1"isAddedToHomeKit"b1"isAirPlayReceiverSessionActive"b1"isDeviceGroupable"b1"isGroupLeader"b1"isGroupable"b1"isLocalDevice"b1"isProxyGroupPlayer"b1"isRemoteControllable"b1"isVolumeControlAvailable"b1"parentGroupContainsDiscoverableLeader"b1"presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets"b1"requiresAuthorization"b1"shouldForceRemoteControlabillity"b1"supportsBufferedAirPlay"b1"supportsExternalScreen"b1"supportsHAP"b1"usingJSONProtocol"b1}
@"_MRClientUpdatesConfigurationProtobuf"
@"_MRSetConnectionStateMessageProtobuf"
@"_MRCryptoPairingMessageProtobuf"
@"_MRSetDiscoveryModeProtobufMessage"
@"_MRGameControllerMessageProtobuf"
@"_MRGameControllerPropertiesMessageProtobuf"
@"_MRGenericMessageProtobuf"
@"_MRGetKeyboardSessionProtobuf"
@"_MRGetRemoteTextInputSessionProtobuf"
@"_MRGetStateMessageProtobuf"
@"_MRGetVoiceInputDevicesMessageProtobuf"
@"_MRGetVoiceInputDevicesResponseMessageProtobuf"
@"_MRGetVolumeControlCapabilitiesMessageProtobuf"
@"_MRGetVolumeControlCapabilitiesResultMessageProtobuf"
@"_MRGetVolumeMessageProtobuf"
@"_MRGetVolumeResultMessageProtobuf"
@"_MRKeyboardMessageProtobuf"
@"_MRAVModifyOutputContextRequestProtobuf"
@"_MRNotificationMessageProtobuf"
@"_MROriginClientPropertiesMessageProtobuf"
@"_MRPlaybackSessionMigrateBeginMessageProtobuf"
@"_MRPlaybackSessionMigrateEndMessageProtobuf"
@"_MRPlaybackSessionMigrateRequestMessageProtobuf"
@"_MRPlaybackSessionMigrateResponseMessageProtobuf"
@"_MRPlaybackSessionRequestMessageProtobuf"
@"_MRPlaybackSessionResponseMessageProtobuf"
@"_MRPlayerClientPropertiesMessageProtobuf"
@"_MRPresentRouteAuthorizationStatusMessageProtobuf"
@"_MRPromptForRouteAuthorizationMessageProtobuf"
@"_MRPromptForRouteAuthorizationResponseMessageProtobuf"
@"_MRSetReadyStateMessageProtobuf"
@"_MRRegisterForGameControllerEventsMessageProtobuf"
@"_MRRegisterGameControllerMessageProtobuf"
@"_MRRegisterGameControllerResponseMessageProtobuf"
@"_MRRegisterHIDDeviceMessageProtobuf"
@"_MRRegisterHIDDeviceResultMessageProtobuf"
@"_MRRegisterVoiceInputDeviceMessageProtobuf"
@"_MRRegisterVoiceInputDeviceResponseMessageProtobuf"
@"_MRRemoteTextInputMessageProtobuf"
@"_MRRemoveClientMessageProtobuf"
@"_MRRemoveEndpointsMessageProtobuf"
@"_MRRemoveOutputDevicesMessageProtobuf"
@"_MRRemovePlayerMessageProtobuf"
@"_MRSendButtonEventMessageProtobuf"
@"_MRSendCommandMessageProtobuf"
@"_MRSendCommandResultMessageProtobuf"
@"_MRSendHIDEventMessageProtobuf"
@"_MRSendHIDReportMessageProtobuf"
@"_MRSendLyricsEventMessageProtobuf"
@"_MRSendPackedVirtualTouchEventMessageProtobuf"
@"_MRSendVirtualTouchEventMessageProtobuf"
@"_MRSendVoiceInputMessageProtobuf"
@"_MRSetArtworkMessageProtobuf"
@"_MRSetStateMessageProtobuf"
@"_MRSetHiliteModeMessageProtobuf"
@"_MRSetNowPlayingClientMessageProtobuf"
@"_MRSetNowPlayingPlayerMessageProtobuf"
@"_MRSetRecordingStateMessageProtobuf"
@"_MRSetVolumeMessageProtobuf"
@"_MRTextInputMessageProtobuf"
@"_MRTransactionMessageProtobuf"
@"_MRUnregisterGameControllerMessageProtobuf"
@"_MRUpdateActiveSystemEndpointMessageProtobuf"
@"_MRUpdateClientMessageProtobuf"
@"_MRUpdateContentItemArtworkMessageProtobuf"
@"_MRUpdateContentItemMessageProtobuf"
@"_MRUpdateEndpointsMessageProtobuf"
@"_MRUpdateOutputDevicesMessageProtobuf"
@"_MRUpdatePlayerMessageProtobuf"
@"_MRVolumeControlCapabilitiesDidChangeMessageProtobuf"
@"_MRVolumeDidChangeMessageProtobuf"
@"_MRWakeDeviceMessageProtobuf"
{?="timestamp"b1"errorCode"b1"type"b1}
@"_MRVoiceInputDeviceDescriptorProtobuf"
{?="x"b1"y"b1"finger"b1"phase"b1}
@40@0:8@16{_NSRange=QQ}24
{_NSRange=QQ}16@0:8
@"_MRColorProtobuf"
{?="nowPlayingVisibility"b1"processIdentifier"b1"processUserIdentifier"b1"isEmptyDeprecated"b1}
v28@0:8@16B24
B40@0:8@16@24@32
B48@0:8@16@24@32@?40
@"NSOrderedSet"
@"NSUserDefaults"
@32@0:8{_NSRange=QQ}16
{?="securityType"b1}
v32@0:8@"MRAVOutputDeviceOutputStream"16@"AVOutputDeviceCommunicationChannel"24
@"MRAVOutputDeviceInputStream"
@"MRAVOutputDeviceOutputStream"
@"AVOutputDevice"
{?="buttonAUpDelay"b1"playerIndex"b1"profile"b1"supportsExtendedMotion"b1}
{?="startOffset"b1"dataByteSize"b1"variableFramesInPacket"b1}
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"NSNetServiceBrowser"
@"<MRExternalDeviceControllerDelegate>"
@"_MRPlaybackSessionProtobuf"
@40@0:8@16@24q32
@"MRAVInputStream"
@"MRAVOutputStream"
{?="deviceIdentifier"b1"errorCode"b1}
@"MRMediaRemoteServiceClient"
{?="errorCode"b1}
{?="w"b1"x"b1"y"b1"z"b1}
@32@0:8@?16@24
v32@0:8@"MRExternalDeviceController"16@"MRTransportExternalDevice"24
@"_MRTelevisionControllerBlockCallback"
i20@0:8I16
{?="timestamp"b1"version"b1}
@24@0:8I16B20
v28@0:8@16I24
@"NSMapTable"
@"_MRTransactionKeyProtobuf"
{?="totalLength"b1"totalWritePosition"b1}
@"MRProtocolClientConnection"
@"MSVTimer"
@"MRConcreteEndpoint"
{?="playbackPosition"b1"radioStationID"b1"trackID"b1"playbackQueueDestinationOffset"b1"playbackQueueInsertionPosition"b1"playbackQueueOffset"b1"playbackRate"b1"queueEndAction"b1"rating"b1"repeatMode"b1"replaceIntent"b1"sendOptions"b1"shuffleMode"b1"skipInterval"b1"beginSeek"b1"endSeek"b1"externalPlayerCommand"b1"negative"b1"preservesQueueEndAction"b1"preservesRepeatMode"b1"preservesShuffleMode"b1"requestDefermentToPlaybackQueuePosition"b1"shouldBeginRadioPlayback"b1"shouldOverrideManuallyCuratedQueue"b1"verifySupportedCommands"b1}
@36@0:8@16I24@28
{?="duration"b1"endTimestamp"b1"errorCode"b1"startTimestamp"b1}
{?="changeType"b1"pairedDeviceSync"b1}
@48@0:8d16@24@32@?40
@40@0:8d16@24@?32
v40@0:8@16d24@?32
v32@0:8@"MRCryptoPairingSession"16@"NSData"24
v32@0:8@"MRCryptoPairingSession"16@"NSString"24
v24@0:8@"MRCryptoPairingSession"16
v40@0:8@"MRCryptoPairingSession"16d24@?<v@?@"NSString">32
v32@0:8@"MRCryptoPairingSession"16@"NSError"24
{?="status"b1}
v36@0:8@16C24@28
@"MRContentItemMetadata"
@"MRArtwork"
@"NSMutableOrderedSet"
v40@0:8@16Q24@?32
@48@0:8Q16@24@32@40
@"MRTransactionPacketizer"
@"<MRTransactionSourceDelegate>"
@28@0:8i16@20
@"MRColorComponents"
@"MSVMultiCallback"
@"PBCodable"
B24@0:8Q16
{?="protocolVersion"b1"deviceClass"b1"lastSupportedMessageType"b1"logicalDeviceCount"b1"sharedQueueVersion"b1"allowsPairing"b1"connected"b1"isAirplayActive"b1"isGroupLeader"b1"isProxyGroupPlayer"b1"supportsACL"b1"supportsExtendedMotion"b1"supportsSharedQueue"b1"supportsSystemPairing"b1"tightlySyncedGroup"b1}
@"MRVirtualTouchDeviceDescriptor"
^Q16@0:8
Q24@0:8Q16
v32@0:8^Q16Q24
{?="list"^Q"count"Q"size"Q}
{?="validTextRangeLength"b1"validTextRangeLocation"b1"autocapitalizationType"b1"keyboardType"b1"returnKeyType"b1"autocorrection"b1"enablesReturnKeyAutomatically"b1"secureTextEntry"b1"spellchecking"b1}
@40@0:8@16@24@?32
v24@0:8I16I20
I20@0:8I16
v56@0:8@16@24@32@40@?48
@"NSOperationQueue"
@"NSTimer"
@"MSVMutableBidirectionalDictionary"
B32@0:8@16^@24
@"NSSet"
{?="inputModeFlags"b1}
{?="a"b1"b"b1"dPadX"b1"dPadY"b1"leftShoulder"b1"leftThumbstickX"b1"leftThumbstickY"b1"leftTrigger"b1"pause"b1"rightShoulder"b1"rightThumbstickX"b1"rightThumbstickY"b1"rightTrigger"b1"x"b1"y"b1}
v32@0:8Q16@24
@"MRPlaybackQueueSubscriptionController"
@"MRApplicationActivity"
B24@0:8@?16
@48@0:8@16@?24@?32@?40
v28@0:8@?16I24
v32@0:8Q16f24i28
v36@0:8f16f20Q24B32
v44@0:8Q16f24f28Q32B40
v24@0:8@"GCController"16
v32@0:8Q16@"NSData"24
v36@0:8Q16f24i28B32
v48@0:8Q16{?=[4f]}24i40B44
v28@0:8@"GCController"16B24
v40@0:8Q16f24i28d32
v44@0:8Q16f24f28f32f36i40
B40@0:8Q16f24i28d32
@"<GameControllerDaemon>"
@"MRGameControllerDelayedEvents"
@28@0:8Q16i24
v28@0:8Q16i24
v24@0:8@"MRTransactionSource"16
@"MRNowPlayingArtwork"
@"MRNowPlayingPlayerClientCallbacks"
v32@0:8@"MSVMessageParser"16@"NSData"24
Q40@0:8@16@24q32
Q40@0:8@"MRProtocolMessageQueue"16@"NSData"24q32
v32@0:8@"MRProtocolMessageQueue"16@"MRProtocolMessage"24
@"NSData"32@0:8@"MRProtocolMessageQueue"16@"MRProtocolMessage"24
v48@0:8@16d24@32@?40
v56@0:8@16Q24d32@40@?48
@"MSVMessageParser"
@"MRProtocolMessageQueue"
@"<MRProtocolClientConnectionDelegate>"
f32@0:8@16^@24
@"AVOutputDeviceGroup"
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
@"MRTextEditingAttributes"
@"MRGameControllerDaemonProxy"
@"<MREmulatedGameControllerDelegate>"
@"GCController"
{?="userProvided"b1}
@"MRCryptoPairingSession"
@"_MRLanguageOptionProtobuf"
{?="allowEmptySelection"b1}
{?="deviceID"b1"recordingState"b1}
@36@0:8@16@24B32
@"MRLanguageOption"
{?="alpha"b1"blue"b1"green"b1"red"b1}
{?="deviceID"b1"errorCode"b1}
{?="endpointFeatures"b1}
@44@0:8@16i24B28B32Q36
^q16@0:8
q24@0:8Q16
v32@0:8^q16Q24
{?="list"^q"count"Q"size"Q}
{?="audioSessionType"b1}
(_MRHIDSize={?=ff}[2f])16@0:8
(_MRHIDSize=""{?="width"f"height"f}"data"[2f])
v24@0:8(_MRHIDSize={?=ff}[2f])16
{_MRTextInputTraits=IIIII{?=qq}BB[10q]Q}16@0:8
{_MRTextInputTraits="autocapitalizationType"I"autocorrectionType"I"spellcheckingType"I"keyboardType"I"returnKeyType"I"validTextRange"{?="location"q"length"q}"enablesReturnKeyAutomatically"B"secureTextEntry"B"PINEntrySeparatorIndexes"[10q]"PINEntrySeparatorIndexesCount"Q}
v152@0:8{_MRTextInputTraits=IIIII{?=qq}BB[10q]Q}16
@36@0:8@16@24I32
@"NSObject<OS_dispatch_source>"
v56@0:8@16d24@32@40@?48
v48@0:8d16@24@32@?40
@"_MRGameControllerButtonsProtobuf"
@"_MRGameControllerDigitizerProtobuf"
@"_MRGameControllerMotionProtobuf"
@"_MRAudioDataBlockProtobuf"
{?="location"b1"sendingPlaybackQueueTransaction"b1}
v40@0:8@"AVOutputDevice"16@"NSData"24@"AVOutputDeviceCommunicationChannel"32
v32@0:8@"AVOutputDevice"16@"AVOutputDeviceCommunicationChannel"24
@52@0:8@16q24B32@36^@44
@"AVOutputDeviceCommunicationChannel"
@"<MRAVOutputStreamDelegate>"
{?="time"b1}
@"AVOutputDeviceDiscoverySession"
v32@0:8@"MRAVClusterController"16Q24
@"MRAVClusterController"
v24@0:8@"AVOutputContext"16
v40@0:8@"AVOutputContext"16@"NSData"24@"AVOutputContextCommunicationChannel"32
v32@0:8@"AVOutputContext"16@"AVOutputContextCommunicationChannel"24
@48@0:8@16q24@32^@40
@"AVOutputContextCommunicationChannel"
@"NSUUID"
@"_MRVirtualTouchDeviceDescriptorProtobuf"
@"_MROriginProtobuf"
@"_MRNowPlayingPlayerProtobuf"
@"_MRGameControllerAccelerationProtobuf"
