@(#)PROGRAM:MetalKit  PROJECT:MetalKit-157
orientation
MTK_TERMINATE_AFTER_FRAME
MTK_TERMINATE_AFTER_SECONDS
MTK_MEASURE_FRAMERATE_AFTER_FRAME
MTK_MEASURE_FRAMERATE_AFTER_SECONDS
MTK_DUMP_PATH
MTK_DUMP_FRAME_AFTER_FRAME
MTK_DUMP_FRAME_AFTER_SECONDS
MTK_DUMP_FIRST_FRAME
MTK_DRAW_OFFSCREEN
MTK_FORCE_ORIENTATION
/tmp
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
Couldn't export image to TGA %@
.txt
-[MTKView _dumpFrameImageWithFilename:]
MTKView.m
!"Unhandled PixelFormat"
file:///
public.png
Image Dump Error - %s: %s 
MTKView Depth
MTKView Stencil
MTKView Depth Stencil
v8@?0
MTKViewNumberColorPixelFormatsCoderKey
MTKViewColorPixelFormatArrayCoderKey
-[MTKView initWithCoder:]
bytesReturned == bytesExpected
MTKViewDrawableAttachmentIndexCoderKey
MTKViewColorPixelFormatCoderKey
MTKViewDepthStencilPixelFormatCoderKey
MTKViewSampleCountCoderKey
MTKViewClearColorCoderKey
MTKViewFramebufferOnlyCoderKey
MTKViewPresentsWithTransactionCoderKey
MTKViewClearDepthCoderKey
MTKViewClearStencilCoderKey
MTKViewPreferredFramesPerSecondCoderKey
MTKViewEnableSetNeedsDisplayCoderKey
MTKViewPausedCoderKey
MTKViewAutoResizeDrawableCoderKey
MTKViewFirstFrameDump
MTKViewFrameDumpAfterFrame_%d
MTKViewFrameDumpAfterSeconds_%lu
MTKViewFramerateAfterFrame_%d
MTKViewFramerateAfterSeconds_%lu
-[MTKView setContentScaleFactor:]
self.contentScaleFactor != 0
clearColor
sampleCount
clearDepth
clearStencil
-[MTKView setDepthStencilPixelFormat:]
depthStencilPixelFormat != MTLPixelFormatX32_Stencil8 && "depthStencilPixelFormat cannot be a stencil texture view pixel format"
Could not determine format from PVR header
Vertical flip is not supported for compressed PVR textures
Metal does not support texture cube arrays
Vertical flip is only supported for 2D, 2D array, and cube map textures
Creating cube maps from 2D textures is not supported for PVR files
Could not parse KTX metadata
-[MTKTextureLoaderPVR3 parseMetadataWithError:]
MTKTextureLoaderPVR3.m
dataSize == 3
axes[0] == 0
v16@?0@"<MTLCommandBuffer>"8
Creating cube maps from 2D textures is not supported for MDL textures
Textures must have 1, 2, or 4 channels
Textures must use 8 or 16 bits per channel
Could not determine format from MDLTexture
MTKTextureLoaderErrorDomain
MTKTextureLoaderErrorKey
MTKTextureLoaderOptionAllocateMipmaps
MTKTextureLoaderOptionGenerateMipmaps
MTKTextureLoaderOptionSRGB
MTKTextureLoaderOptionTextureUsage
MTKTextureLoaderOptionTextureCPUCacheMode
MTKTextureLoaderOptionTextureStorageMode
MTKTextureLoaderOptionOrigin
MTKTextureLoaderOptionCubeLayout
MTKTextureLoaderOptionPackedRowStride
MTKTextureLoaderOriginTopLeft
MTKTextureLoaderOriginBottomLeft
MTKTextureLoaderOriginFlippedVertically
MTKTextureLoaderCubeLayoutVertical
com.apple.mtktextureloaderload
com.apple.mtktextureloaderupload
com.apple.mtktextureloadernotify
URL is nil
v24@?0@"NSArray"8@"NSError"16
Could not find resource %@ at specified location.
Invalid NSData, %@
v24@?0@"<MTLTexture>"8@"NSError"16
Pixel format(%s) is not valid on this device
MTKTextureLoaderOptionGenerateMipmaps is only supported for color renderable and filterable pixel formats
Could not get asset catalog from supplied bundle
Could not find texture or image named "%@" in supplied bundle
v32@?0@"TXRTexture"8Q16^B24
com.apple.MTKTextureLoader
-[MTKTextureLoader _newSyncTexturesFromTXRTextures:labels:options:error:]
MTKTextureLoader.m
txrTexture.pixelFormat < 0x80000000
Attempt to load a cubemap array on platform that does not support cubemap arrays
1 == txrTexture.dimensions.z
txrTexture.dimensions.x == txrTexture.dimensions.y
[image.buffer isKindOfClass:[MTKTextureIOBuffer class]]
Image decoding failed
kCGImageBlockIOSurfaceOptimizedRequest
Unsupported image orientation
Image height must be six times the image width for a vertical cubemap texture
kCGImageBlockSingletonRequest
kCGImageBlockFormatRequest
kCGImageBlockFormatBGRx8
getFillValueForComponentType
MTKTextureLoaderImageIO.m
!"Incorrect values being passed to fillForComponent"
Could not determine format from KTX header
Vertical flip is not supported for block texture formats
Creating cube maps from 2D textures is not supported for KTX files
S=r,T=d
S=r,T=u
ktxorientation
expandRGBToRGBA
MTKTextureLoader_Internal.m
source != nil
destination != nil
MTKModelErrorDomain
MTKModelErrorKey
invalid index type submesh
invalid geometry type in submesh
required conversion from orginal submesh indexType and geometryType failed
index buffer in MDLSubmesh was not created using a MTKMeshBufferAllocator
vertex buffer in MDLMesh was not created using a MTKMeshBufferAllocator
Must supply asset
Must supply device
Too many vertex attributes in MTLVertexDescriptor to create a MDLVertexDescriptor
MTKModelIOVertexDescriptorFromMetalWithError
MTKModel.m
!"Model I/O vertex descriptor attribute count should be at least MTL_MAX_VERTEX_ATTRIBUTES"
No compatible MDLVertexFormat format for MTLVertexAttribute format
Too many vertex layouts in MTLVertexDescriptor to create a MDLVertexDescriptor
!"Model I/O vertex descriptor layouts count should be at least MTL_MAX_VERTEX_BUFFERS"
No compatible MTLVertexFormat format for MDLVertexAttribute format
MDLSubmesh
/System/Library/Frameworks/ModelIO.framework/ModelIO
MDLMesh
MDLVertexDescriptor
+[MTKTextureLoaderASTCHelper isASTCHDRData:textureType:error:]_block_invoke
MTKTextureLoaderASTCHelper.m
!"Incorrect partition information"
v40@?0r^v8{_NSRange=QQ}16^B32
Could not load ASTC texture, data is malformed
-[MTKMeshBufferZone destroyBuffer:]
MTKMeshBufferZone.m
destroyedBuffer.zone == self
MDLMeshBufferMap
_mtkLinkedOnOrAfter
MetalKit_Internal.m
false && "Unsupported MTKOSVersion"
MTKViewDisplayLinkTarget
MTKView
NSCoding
CALayerDelegate
NSObject
MTKTextureLoaderPVR3
MTKTextureUploader
MTKTextureLoaderMDL
MTKTextureIOBufferMap
TXRBufferMap
MTKTextureIOBuffer
TXRBuffer
NSCopying
MTKTextureIOBufferAllocator
TXRBufferAllocator
MTKTextureLoader
MTKTextureLoaderData
MTKTextureLoaderImageIO
MTKTextureLoaderKTX
MTKTextureLoaderPVR
MTKOffscreenDrawable
CAMetalDrawable
MTLDrawable
MTKMeshBufferAllocator
MDLMeshBufferAllocator
MTKSubmesh
MTKMesh
MTKTextureLoaderASTCHelper
MTKMeshBufferHolder
MTKMeshBufferZone
MDLMeshBufferZone
MTKMeshBuffer
MDLMeshBuffer
MDLNamed
T@"MTLRenderPassDescriptor",R,N
T#,R
TQ,N,V_numFaces
T@"<MDLMeshBufferAllocator>",R,&,N
TQ,R,N,V_offset
T@"<MDLMeshBufferAllocator>",R,N,V_allocator
Tq,N,V_preferredFramesPerSecond
T@"<MDLMeshBufferZone>",R,N,V_zone
_buffer
T@"<MTLBuffer>",R,N,V_buffer
_cfData
T@"<MTLDevice>",R
_device
T@"<MTLDevice>",R,N,V_device
_dumpFirstFrame
T@"<MTLTexture>",R,N
_initWithLength:allocator:type:
T@"CAMetalLayer",R,V_layer
_newMap
T@"MTKMesh",R,W,N,V_mesh
_paused
T@"MTKMeshBuffer",V_buffer
_target
T@"MTKView",W,N,V_target
coordinateSpace
T@"NSString",&,N,V_imageOrigin
currentDrawable
T@"NSString",C,N,V_name
depthAttachment
TB,N
didMoveToWindow
TB,N,V_autoResizeDrawable
framebufferOnly
TI,N,V_clearStencil
initWithLength:
TQ,N,V_depth
initWithTarget:
TQ,N,V_height
isProxy
TQ,N,V_numMipmapLevels
lowercaseString
TQ,N,V_sampleCount
maxBufferLength
TQ,N,V_width
mtkView:drawableSizeWillChange:
TQ,R,N
newCommandQueue
TQ,R,N,V_drawableID
preferredDevice
TQ,R,N,V_indexType
release
TQ,R,N,V_type
setArrayLength:
T^{CGColorSpace=},N
setImageOrigin:
Td,R,N,V_presentedTime
setPixelFormat:
T{CGSize=dd},N
setStorageMode:
T{CGSize=dd},R,N,V_preferredDrawableSize
setTextureType:
URLByAppendingPathExtension:
.cxx_destruct
T@"NSArray",R,N,V_vertexBuffers
T@"<CAMetalDrawable>",R,N,V_currentDrawable
TQ,R,N,V_length
T@"<MDLMeshBufferAllocator>",R,N
T^v,R,N
T@"<MDLMeshBufferZone>",R,&,N
_applicationDidEnterBackground:
T@"<MTKViewDelegate>",W,N,V_delegate
_canDrawContent
T@"<MTLDevice>",&,N,V_device
_destroyInvoked
T@"<MTLDevice>",R,N
_drawRectSubIMP
T@"<MTLTexture>",R
_height
T@"CAMetalLayer",R
_length
T@"MDLVertexDescriptor",R,N,V_vertexDescriptor
_offset
T@"MTKMeshBuffer",R,N,V_indexBuffer
_resizeDrawable
T@"MTKMeshBufferAllocator",R,N,V_allocator
channelEncoding
T@"NSArray",R,N,V_submeshes
cubemap
T@"NSString",C,N
dealloc
T@"NSString",R,C
determineFormatFromSizedFormat:
TB,N,GisPaused,V_paused
displayLinkWithTarget:selector:
TB,N,V_enableSetNeedsDisplay
initWithDevice:
TQ,N
initWithString:
TQ,N,V_depthStencilPixelFormat
isGammaEncoded:
TQ,N,V_numArrayElements
layouts
TQ,N,V_pixelFormat
TQ,N,V_textureType
minConstantBufferAlignmentBytes
TQ,R
newBuffer:type:
TQ,R,N,V_capacity
numMipmapLevels
TQ,R,N,V_indexCount
present
TQ,R,N,V_primitiveType
removeObserver:
TQ,R,N,V_vertexCount
setBufferIndex:
Td,N,V_clearDepth
setNumberStyle:
T{?=dddd},N,V_clearColor
setSampleCount:
T{CGSize=dd},N,V_drawableSize
setStoreAction:
URLByAppendingPathComponent:
texture
URLWithString:
UTF8String
__initCommon
_allocator
_applicationWillEnterForeground:
_autoResizeDrawable
_blit
_blitQueue
_blockSet
_bufferAllocator
_buffers
_bytes
_bytesPerRow
_calculateRefeshesPerSecond
_capacity
_clearColor
_clearDepth
_clearStencil
_colorPixelFormats
_colorTextures
_commandBuffer
_controlsOwnScaleFactor
_createDisplayLinkForScreen:
_createMeshesFromObject:newMeshes:sourceMeshes:device:error:
_currentDrawable
_delegate
_depth
_depthStencilPixelFormat
_depthStencilStorageMode
_depthStencilTexture
_depthStencilTextureUsage
_determineFileType:
_deviceReset
_displayLink
_doesNotifyOnRecommendedSizeUpdate
_drawOffscreen
_drawableAttachmentIndex
_drawableID
_drawableIdx
_drawableScaleFactor
_drawableSize
_dumpFrameAtFrame
_dumpFrameAtSeconds
_dumpFrameImageWithFilename:
_dumpFramerate:withFilename:
_dumpPath
_enableSetNeedsDisplay
_expandRGBToRGBA
_forceOrientation
_frameNum
_framebufferOnly
_imageData
_imageOrigin
_indexBuffer
_indexCount
_indexType
_initWithBytes:length:offset:allocator:zone:type:
_initWithData:allocator:type:
_initWithLength:offset:zone:type:
_layer
_loadCGImage:options:completionHandler:
_loadData:options:completionHandler:
_loadData:options:uploader:label:completionHandler:
_loadMDLTexture:options:completionHandler:
_loadQueue
_loadSemaphore
_lock
_maxValidAttachmentIndex
_measureAfterFrame
_measureAfterSeconds
_mesh
_metaDataSize
_metalLayer
_multisampleColorTexture
_multisampleColorTextureUsage
_multisampleColorTextures
_name
_newAsyncTextureWithNames:scaleFactor:displayGamut:bundle:options:completionHandler:
_newSyncTexturesFromTXRTextures:labels:options:error:
_nominalFramesPerSecond
_notifyQueue
_numArrayElements
_numFaces
_numMipmapLevels
_numSurfaces
_offscreenSwapChain
_packedRowStride
_pausedOnBackgrounding
_pixelFormat
_pixelFormatInfo
_pixelSizeFromPointSize:
_preferredDrawableSize
_preferredFramesPerSecond
_presentedTime
_primitiveType
_pvrCompressedFormat
_pvrFormat
_refreshRate
_renderAttachmentDirtyState
_resizeMetalLayerDrawable
_sampleCount
_size
_sizeDirty
_startTime
_subClassOverridesDrawRect
_submeshes
_terminateAfterFrame
_terminateAfterSeconds
_texture
_textureDirty
_textureType
_type
_updateToNativeScale
_uploadQueue
_vertexBuffers
_vertexCount
_vertexDescriptor
_width
_zone
absoluteString
actionForLayer:forKey:
addCompletedHandler:
addObject:
addObserver:selector:name:object:
addPresentedHandler:
addToRunLoop:forMode:
allocator
appendBytes:length:
array
arrayLength
arrayWithObjects:count:
attributes
autoResizeDrawable
autorelease
blitCommandEncoder
boolValue
bounds
buffer
bufferIndex
bytes
bytesPerImage
bytesPerRow
capacity
channelCount
checkResourceIsReachableAndReturnError:
children
class
clearColor
clearDepth
clearStencil
colorAttachments
colorPixelFormat
colorTextures
colorTexturesForceUpdate:
colorspace
commandBuffer
commit
conformsToProtocol:
containsValueForKey:
contentScaleFactor
contents
convertRect:toCoordinateSpace:
copy
copyBytes:toTexture:bitsPerPixel:pixelComponents:bytesPerRow:bytesPerImage:region:slice:level:flipVertically:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyTexture:toTexture:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDepthStencilTexture
createFileAtPath:contents:attributes:
currentDevice
currentRenderPassDescriptor
currentRunLoop
dataUsingEncoding:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
debugDescription
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeCGImage:options:
decodeCGImageDataProvider:options:
decodeCGImageImageProvider:CGImageProvider:options:
decodeFloatForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectForKey:
defaultCenter
defaultManager
defaultUICatalogForBundle:
delegate
depth
depthStencilAttachmentTextureUsage
depthStencilPixelFormat
depthStencilStorageMode
depthStencilTexture
description
destroyBuffer:
determineBlockSize:blocksWide:blocksHigh:bytesPerBlock:fromFormat:width:andHeight:
determineCGImageBlockFormatWithComponentType:alphaInfo:andPixelSizeBytes:andColorSpace:isOptimized:options:
determineFormat:colorSpace:channelType:options:
determineFormat:options:
determineFormatFromChannelEncoding:channelCount:error:
determineFormatFromType:format:internalFormat:baseInternalFormat:
device
dictionaryWithObjects:forKeys:count:
dimensions
displayLayer:
draw
drawInMTKView:
drawLayer:inContext:
drawNumber
drawRect:
drawableAttachmentIndex
drawableID
drawableSize
elements
enableSetNeedsDisplay
encodeBool:forKey:
encodeBytes:length:forKey:
encodeFloat:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endEncoding
enumerateByteRangesUsingBlock:
enumerateObjectsUsingBlock:
environment
errorWithDomain:code:userInfo:
exportToTargaAtLocation:width:height:size:bytes:
exportToURL:uttype:error:
faces
fillData:offset:
finishWithCompletionHandler:
fixedCoordinateSpace
format
generateMipmapsForTexture:
geometryType
getBytes:length:
getDataForArrayElement:face:level:depthPlane:bytesPerRow:bytesPerImage:
getEnvironmentSettings
hasPrefix:
hash
height
image
imageExistsWithName:scaleFactor:
imageOrigin
imageWithName:scaleFactor:displayGamut:layoutDirection:
indexBuffer
indexCount
indexType
init
initWithBytes:deallocator:
initWithBytesNoCopy:length:deallocNotification:device:error:
initWithBytesNoCopy:length:freeWhenDone:
initWithCGImage:options:error:
initWithCapacity:
initWithCapacity:allocator:
initWithCoder:
initWithContents:
initWithContentsOfURL:options:error:
initWithData:options:error:
initWithDevice:commandQueue:notifyQueue:
initWithDevice:pixelFormat:size:drawableID:
initWithDimensions:pixelFormat:alphaInfo:bytesPerRow:bytesPerImage:buffer:offset:
initWithDomain:code:userInfo:
initWithFrame:
initWithFrame:device:
initWithLength:device:
initWithMDLSubmesh:indexType:geometryType:
initWithMDLTexture:options:error:
initWithMesh:device:error:
initWithMesh:submesh:device:error:
insertObject:atIndex:
instanceMethodForSelector:
integerValue
invalidate
isASTCHDRData:textureType:error:
isCube
isEqual:
isEqualToString:
isKTXFile:
isKindOfClass:
isMemberOfClass:
isPVR3File:
isPVRFile:
isPaused
label
lastObject
lastPathComponent
layer
layerClass
layerWillDraw:
layoutSublayersOfLayer:
layoutSubviews
length
localizedDescription
lock
mainScreen
mesh
methodForSelector:
mipLevelCount
mipmapLevelCount
mipmapLevels
multisampleColorAttachmentTextureUsage
multisampleColorTexture
multisampleColorTextures
multisampleColorTexturesForceUpdate:
mutableBytes
name
namedTextureWithName:scaleFactor:
nativeBounds
nativeScale
newBufferFromZone:data:type:
newBufferFromZone:length:type:
newBufferWithBytesNoCopy:length:deallocNotification:error:
newBufferWithBytesNoCopy:length:options:deallocator:
newBufferWithData:type:
newBufferWithLength:
newBufferWithLength:options:
newBufferWithLength:type:
newMeshesFromAsset:device:sourceMeshes:error:
newTextureFromTXRTexture:options:error:
newTextureWithCGImage:options:completionHandler:
newTextureWithCGImage:options:error:
newTextureWithContentsOfURL:options:completionHandler:
newTextureWithContentsOfURL:options:error:
newTextureWithData:options:
newTextureWithData:options:completionHandler:
newTextureWithData:options:error:
newTextureWithDescriptor:
newTextureWithMDLTexture:options:completionHandler:
newTextureWithMDLTexture:options:error:
newTextureWithName:scaleFactor:bundle:options:completionHandler:
newTextureWithName:scaleFactor:bundle:options:error:
newTextureWithName:scaleFactor:displayGamut:bundle:options:completionHandler:
newTextureWithName:scaleFactor:displayGamut:bundle:options:error:
newTexturesFromTXRTextures:options:error:
newTexturesWithContentsOfURLs:options:completionHandler:
newTexturesWithContentsOfURLs:options:error:
newTexturesWithNames:scaleFactor:bundle:options:completionHandler:
newTexturesWithNames:scaleFactor:displayGamut:bundle:options:completionHandler:
newUploaderForOptions:
newZone:
newZoneForBuffersWithSize:andType:
nextDrawable
nominalFramesPerSecond
null
numArrayElements
numFaces
numberFromString:
numberWithInteger:
objectAtIndexedSubscript:
objectForKey:
offset
packedMemoryLayoutForFormat:dimensions:
parseKey:value:error:
parseKeyValueBytes:length:error:
parseMetadataWithError:
paused
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pixelFormat
preferredDrawableSize
preferredFramesPerSecond
presentAfterMinimumDuration:
presentAtTime:
presentedTime
presentsWithTransaction
primitiveType
processInfo
reformat:gammaDegamma:bufferAllocator:error:
releaseDrawables
removeObjectAtIndex:
renderPassDescriptor
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
respondsToSelector:
retain
retainCount
sampleCount
screen
self
setAutoResizeDrawable:
setBackgroundColor:
setBuffer:
setClearColor:
setClearDepth:
setClearStencil:
setColorPixelFormat:
setColorPixelFormat:atIndex:
setColorspace:
setContentScaleFactor:
setContentsScale:
setCpuCacheMode:
setDelegate:
setDepth:
setDepthStencilAttachmentTextureUsage:
setDepthStencilPixelFormat:
setDepthStencilStorageMode:
setDevice:
setDrawableAttachmentIndex:
setDrawableSize:
setEnableSetNeedsDisplay:
setFormat:
setFrame:
setFramebufferOnly:
setHeight:
setLabel:
setLoadAction:
setMipmapLevelCount:
setMultisampleColorAttachmentTextureUsage:
setName:
setNilValueForKey:
setNominalFramesPerSecond:
setNumArrayElements:
setNumFaces:
setNumMipmapLevels:
setObject:atIndexedSubscript:
setOffset:
setOpaque:
setPaused:
setPreferredFramesPerSecond:
setPresentsWithTransaction:
setResolveTexture:
setSize:
setStride:
setTarget:
setTexture:
setUsage:
setValue:forKey:
setWidth:
size
startTime
stencilAttachment
storageMode
stride
stringByAppendingString:
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
subdataWithRange:
submeshes
superclass
supportsTextureCubeArray
target
texelDataWithTopLeftOriginAtMipLevel:create:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
textureType
textureWithBufferAllocator:
type
unlock
unsignedIntegerValue
usage
validateGenerateMipmapsForPixelFormat:options:error:
vertexBuffers
vertexCount
vertexDescriptor
waitUntilCompleted
width
window
writeToURL:options:error:
zone
@24@0:8@16
v16@0:8
@16@0:8
v24@0:8@16
@"MTKView"
#16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16^{CGContext=}24
@32@0:8@16@24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
B56@0:8@16Q24Q32Q40^v48
d16@0:8
v32@0:8d16@24
v32@0:8Q16Q24
v24@0:8^{CGColorSpace=}16
^{CGColorSpace=}16@0:8
v24@0:8Q16
r^@16@0:8
r^@20@0:8B16
q16@0:8
v24@0:8q16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
v20@0:8B16
v32@0:8{CGSize=dd}16
v24@0:8d16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{?=dddd}16@0:8
v48@0:8{?=dddd}16
I16@0:8
v20@0:8I16
{CGSize=dd}16@0:8
@"CAMetalLayer"
{CGSize="width"d"height"d}
@"CADisplayLink"
@"<CAMetalDrawable>"
@"<MTLTexture>"
[8Q]
[8@"<MTLTexture>"]
[3@"MTKOffscreenDrawable"]
@"NSString"
@"<MTKViewDelegate>"
@"<MTLDevice>"
{?="red"d"green"d"blue"d"alpha"d}
@40@0:8@16@24^@32
B24@0:8^@16
@64@0:8Q16Q24Q32Q40^Q48^Q56
Q40@0:8Q16I24I28@32
v68@0:8^Q16^Q24^Q32^Q40I48Q52Q60
{MTLPixelFormatInfo="name"*"flags"I"castClass"Q"type"(?="normal"{MTLNormalPixelFormatInfo="pixelBytes"Q"componentCount"C"alignment"C"pixelBytesRender"Q"pixelBytesRenderMSAA"Q}"compressed"{MTLCompressedPixelFormatInfo="blockBytes"Q"blockWidth"Q"blockHeight"Q"blockDepth"Q})}
@"NSData"
@40@0:8@16@24@32
v132@0:8r^v16@24Q32Q40Q48Q56{?={?=QQQ}{?=QQQ}}64Q112Q120B128
v32@0:8@16@24
v24@0:8@?16
@"<MTLCommandBuffer>"
@"<MTLBlitCommandEncoder>"
@"NSLock"
@"NSObject<OS_dispatch_queue>"
B40@0:8q16Q24^@32
@"MDLTexture"
^v16@0:8
@24@0:8^v16
@24@0:8^{_NSZone=}16
@"<TXRBufferMap>"16@0:8
@32@0:8Q16@24
@56@0:8^v16Q24@?32@40^@48
@"<MTLBuffer>"
@24@0:8Q16
@48@0:8^v16Q24@?32^@40
@"<TXRBuffer>"24@0:8Q16
@"<TXRBuffer>"48@0:8^v16Q24@?<v@?^vQ>32^@40
v40@0:8@16@24@?32
v40@0:8^{CGImage=}16@24@?32
@40@0:8^{CGImage=}16@24^@32
Q24@0:8@16
v56@0:8@16@24@32@40@?48
B40@0:8Q16@24^@32
v64@0:8@16d24q32@40@48@?56
@48@0:8@16@24@32^@40
v56@0:8@16d24@32@40@?48
@56@0:8@16d24@32@40^@48
@64@0:8@16d24q32@40@48^@56
@"NSObject<OS_dispatch_semaphore>"
@"<MTLCommandQueue>"
@"<TXRBufferAllocator>"
@"<MTLDeviceSPI>"
B32@0:8^{CGImage=}16@24
B40@0:8^{CGImage=}16^{CGImageProvider=}24@32
B52@0:8i16I20Q24^{CGColorSpace=}32B40@44
^{CGImageBlockSet=}
^{__CFData=}
B40@0:8r*16Q24^@32
B40@0:8@16@24^@32
Q32@0:8I16I20I24I28
Q24@0:8Q16
B28@0:8I16@20
@"<MTLTexture>"16@0:8
@"CAMetalLayer"16@0:8
@56@0:8@16Q24{CGSize=dd}32Q48
@32@0:8Q16Q24
@32@0:8@16Q24
@40@0:8@16Q24Q32
@40@0:8@16@24Q32
@"<MDLMeshBufferZone>"24@0:8Q16
@"<MDLMeshBufferZone>"32@0:8@"NSArray"16@"NSArray"24
@"<MDLMeshBuffer>"32@0:8Q16Q24
@"<MDLMeshBuffer>"32@0:8@"NSData"16Q24
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16Q24Q32
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16@"NSData"24Q32
@"MTKMeshBuffer"
@"MTKMesh"
v56@0:8@16@24@32@40^@48
@48@0:8@16@24^@32^@40
@"NSMutableArray"
@"MDLVertexDescriptor"
q40@0:8@16Q24^@32
@"<MDLMeshBufferAllocator>"16@0:8
@"NSMutableOrderedSet"
@"MTKMeshBufferAllocator"
v32@0:8@16Q24
v32@0:8@"NSData"16Q24
@"MDLMeshBufferMap"16@0:8
@"<MDLMeshBufferZone>"16@0:8
v24@0:8@"NSString"16
@48@0:8Q16Q24@32Q40
@40@0:8Q16@24Q32
@64@0:8r^v16Q24Q32@40@48Q56
@"MTKMeshBufferZone"
KTX 11
@(#)PROGRAM:MetalKit  PROJECT:MetalKit-157
J&J)J/
s4s7s:
!8!:!<
8'8)88888888888888888888+-/13579;=?ACEGI
9999999
9 9"9$99999999999&9(9*9,.02468:<>@BDFHJ
;?CX
"$'),/7?
orientation
MTK_TERMINATE_AFTER_FRAME
MTK_TERMINATE_AFTER_SECONDS
MTK_MEASURE_FRAMERATE_AFTER_FRAME
MTK_MEASURE_FRAMERATE_AFTER_SECONDS
MTK_DUMP_PATH
MTK_DUMP_FRAME_AFTER_FRAME
MTK_DUMP_FRAME_AFTER_SECONDS
MTK_DUMP_FIRST_FRAME
MTK_DRAW_OFFSCREEN
MTK_FORCE_ORIENTATION
/tmp
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
Couldn't export image to TGA %@
.txt
-[MTKView _dumpFrameImageWithFilename:]
MTKView.m
!"Unhandled PixelFormat"
file:///
public.png
Image Dump Error - %s: %s 
MTKView Depth
MTKView Stencil
MTKView Depth Stencil
v8@?0
MTKViewNumberColorPixelFormatsCoderKey
MTKViewColorPixelFormatArrayCoderKey
-[MTKView initWithCoder:]
bytesReturned == bytesExpected
MTKViewDrawableAttachmentIndexCoderKey
MTKViewColorPixelFormatCoderKey
MTKViewDepthStencilPixelFormatCoderKey
MTKViewSampleCountCoderKey
MTKViewClearColorCoderKey
MTKViewFramebufferOnlyCoderKey
MTKViewPresentsWithTransactionCoderKey
MTKViewClearDepthCoderKey
MTKViewClearStencilCoderKey
MTKViewPreferredFramesPerSecondCoderKey
MTKViewEnableSetNeedsDisplayCoderKey
MTKViewPausedCoderKey
MTKViewAutoResizeDrawableCoderKey
MTKViewFirstFrameDump
MTKViewFrameDumpAfterFrame_%d
MTKViewFrameDumpAfterSeconds_%lu
MTKViewFramerateAfterFrame_%d
MTKViewFramerateAfterSeconds_%lu
-[MTKView setContentScaleFactor:]
self.contentScaleFactor != 0
clearColor
sampleCount
clearDepth
clearStencil
-[MTKView setDepthStencilPixelFormat:]
depthStencilPixelFormat != MTLPixelFormatX32_Stencil8 && "depthStencilPixelFormat cannot be a stencil texture view pixel format"
Could not determine format from PVR header
Vertical flip is not supported for compressed PVR textures
Metal does not support texture cube arrays
Vertical flip is only supported for 2D, 2D array, and cube map textures
Creating cube maps from 2D textures is not supported for PVR files
Could not parse KTX metadata
-[MTKTextureLoaderPVR3 parseMetadataWithError:]
MTKTextureLoaderPVR3.m
dataSize == 3
axes[0] == 0
v16@?0@"<MTLCommandBuffer>"8
Creating cube maps from 2D textures is not supported for MDL textures
Textures must have 1, 2, or 4 channels
Textures must use 8 or 16 bits per channel
Could not determine format from MDLTexture
MTKTextureLoaderErrorDomain
MTKTextureLoaderErrorKey
MTKTextureLoaderOptionAllocateMipmaps
MTKTextureLoaderOptionGenerateMipmaps
MTKTextureLoaderOptionSRGB
MTKTextureLoaderOptionTextureUsage
MTKTextureLoaderOptionTextureCPUCacheMode
MTKTextureLoaderOptionTextureStorageMode
MTKTextureLoaderOptionOrigin
MTKTextureLoaderOptionCubeLayout
MTKTextureLoaderOptionPackedRowStride
MTKTextureLoaderOriginTopLeft
MTKTextureLoaderOriginBottomLeft
MTKTextureLoaderOriginFlippedVertically
MTKTextureLoaderCubeLayoutVertical
com.apple.mtktextureloaderload
com.apple.mtktextureloaderupload
com.apple.mtktextureloadernotify
URL is nil
v24@?0@"NSArray"8@"NSError"16
Could not find resource %@ at specified location.
Invalid NSData, %@
v24@?0@"<MTLTexture>"8@"NSError"16
Pixel format(%s) is not valid on this device
MTKTextureLoaderOptionGenerateMipmaps is only supported for color renderable and filterable pixel formats
Could not get asset catalog from supplied bundle
Could not find texture or image named "%@" in supplied bundle
v32@?0@"TXRTexture"8Q16^B24
com.apple.MTKTextureLoader
-[MTKTextureLoader _newSyncTexturesFromTXRTextures:labels:options:error:]
MTKTextureLoader.m
txrTexture.pixelFormat < 0x80000000
Attempt to load a cubemap array on platform that does not support cubemap arrays
1 == txrTexture.dimensions.z
txrTexture.dimensions.x == txrTexture.dimensions.y
[image.buffer isKindOfClass:[MTKTextureIOBuffer class]]
Image decoding failed
kCGImageBlockIOSurfaceOptimizedRequest
Unsupported image orientation
Image height must be six times the image width for a vertical cubemap texture
kCGImageBlockSingletonRequest
kCGImageBlockFormatRequest
kCGImageBlockFormatBGRx8
getFillValueForComponentType
MTKTextureLoaderImageIO.m
!"Incorrect values being passed to fillForComponent"
Could not determine format from KTX header
Vertical flip is not supported for block texture formats
Creating cube maps from 2D textures is not supported for KTX files
S=r,T=d
S=r,T=u
ktxorientation
expandRGBToRGBA
MTKTextureLoader_Internal.m
source != nil
destination != nil
MTKModelErrorDomain
MTKModelErrorKey
invalid index type submesh
invalid geometry type in submesh
required conversion from orginal submesh indexType and geometryType failed
index buffer in MDLSubmesh was not created using a MTKMeshBufferAllocator
vertex buffer in MDLMesh was not created using a MTKMeshBufferAllocator
Must supply asset
Must supply device
Too many vertex attributes in MTLVertexDescriptor to create a MDLVertexDescriptor
MTKModelIOVertexDescriptorFromMetalWithError
MTKModel.m
!"Model I/O vertex descriptor attribute count should be at least MTL_MAX_VERTEX_ATTRIBUTES"
No compatible MDLVertexFormat format for MTLVertexAttribute format
Too many vertex layouts in MTLVertexDescriptor to create a MDLVertexDescriptor
!"Model I/O vertex descriptor layouts count should be at least MTL_MAX_VERTEX_BUFFERS"
No compatible MTLVertexFormat format for MDLVertexAttribute format
MDLSubmesh
/System/Library/Frameworks/ModelIO.framework/ModelIO
MDLMesh
MDLVertexDescriptor
+[MTKTextureLoaderASTCHelper isASTCHDRData:textureType:error:]_block_invoke
MTKTextureLoaderASTCHelper.m
!"Incorrect partition information"
v40@?0r^v8{_NSRange=QQ}16^B32
Could not load ASTC texture, data is malformed
-[MTKMeshBufferZone destroyBuffer:]
MTKMeshBufferZone.m
destroyedBuffer.zone == self
MDLMeshBufferMap
_mtkLinkedOnOrAfter
MetalKit_Internal.m
false && "Unsupported MTKOSVersion"
MTKViewDisplayLinkTarget
MTKView
NSCoding
CALayerDelegate
NSObject
MTKTextureLoaderPVR3
MTKTextureUploader
MTKTextureLoaderMDL
MTKTextureIOBufferMap
TXRBufferMap
MTKTextureIOBuffer
TXRBuffer
NSCopying
MTKTextureIOBufferAllocator
TXRBufferAllocator
MTKTextureLoader
MTKTextureLoaderData
MTKTextureLoaderImageIO
MTKTextureLoaderKTX
MTKTextureLoaderPVR
MTKOffscreenDrawable
CAMetalDrawable
MTLDrawable
MTKMeshBufferAllocator
MDLMeshBufferAllocator
MTKSubmesh
MTKMesh
MTKTextureLoaderASTCHelper
MTKMeshBufferHolder
MTKMeshBufferZone
MDLMeshBufferZone
MTKMeshBuffer
MDLMeshBuffer
MDLNamed
T@"MTLRenderPassDescriptor",R,N
T#,R
TQ,N,V_numFaces
T@"<MDLMeshBufferAllocator>",R,&,N
TQ,R,N,V_offset
T@"<MDLMeshBufferAllocator>",R,N,V_allocator
Tq,N,V_preferredFramesPerSecond
T@"<MDLMeshBufferZone>",R,N,V_zone
_buffer
T@"<MTLBuffer>",R,N,V_buffer
_cfData
T@"<MTLDevice>",R
_device
T@"<MTLDevice>",R,N,V_device
_dumpFirstFrame
T@"<MTLTexture>",R,N
_initWithLength:allocator:type:
T@"CAMetalLayer",R,V_layer
_newMap
T@"MTKMesh",R,W,N,V_mesh
_paused
T@"MTKMeshBuffer",V_buffer
_target
T@"MTKView",W,N,V_target
coordinateSpace
T@"NSString",&,N,V_imageOrigin
currentDrawable
T@"NSString",C,N,V_name
depthAttachment
TB,N
didMoveToWindow
TB,N,V_autoResizeDrawable
framebufferOnly
TI,N,V_clearStencil
initWithLength:
TQ,N,V_depth
initWithTarget:
TQ,N,V_height
isProxy
TQ,N,V_numMipmapLevels
lowercaseString
TQ,N,V_sampleCount
maxBufferLength
TQ,N,V_width
mtkView:drawableSizeWillChange:
TQ,R,N
newCommandQueue
TQ,R,N,V_drawableID
preferredDevice
TQ,R,N,V_indexType
release
TQ,R,N,V_type
setArrayLength:
T^{CGColorSpace=},N
setImageOrigin:
Td,R,N,V_presentedTime
setPixelFormat:
T{CGSize=dd},N
setStorageMode:
T{CGSize=dd},R,N,V_preferredDrawableSize
setTextureType:
URLByAppendingPathExtension:
.cxx_destruct
T@"NSArray",R,N,V_vertexBuffers
T@"<CAMetalDrawable>",R,N,V_currentDrawable
TQ,R,N,V_length
T@"<MDLMeshBufferAllocator>",R,N
T^v,R,N
T@"<MDLMeshBufferZone>",R,&,N
_applicationDidEnterBackground:
T@"<MTKViewDelegate>",W,N,V_delegate
_canDrawContent
T@"<MTLDevice>",&,N,V_device
_destroyInvoked
T@"<MTLDevice>",R,N
_drawRectSubIMP
T@"<MTLTexture>",R
_height
T@"CAMetalLayer",R
_length
T@"MDLVertexDescriptor",R,N,V_vertexDescriptor
_offset
T@"MTKMeshBuffer",R,N,V_indexBuffer
_resizeDrawable
T@"MTKMeshBufferAllocator",R,N,V_allocator
channelEncoding
T@"NSArray",R,N,V_submeshes
cubemap
T@"NSString",C,N
dealloc
T@"NSString",R,C
determineFormatFromSizedFormat:
TB,N,GisPaused,V_paused
displayLinkWithTarget:selector:
TB,N,V_enableSetNeedsDisplay
initWithDevice:
TQ,N
initWithString:
TQ,N,V_depthStencilPixelFormat
isGammaEncoded:
TQ,N,V_numArrayElements
layouts
TQ,N,V_pixelFormat
TQ,N,V_textureType
minConstantBufferAlignmentBytes
TQ,R
newBuffer:type:
TQ,R,N,V_capacity
numMipmapLevels
TQ,R,N,V_indexCount
present
TQ,R,N,V_primitiveType
removeObserver:
TQ,R,N,V_vertexCount
setBufferIndex:
Td,N,V_clearDepth
setNumberStyle:
T{?=dddd},N,V_clearColor
setSampleCount:
T{CGSize=dd},N,V_drawableSize
setStoreAction:
URLByAppendingPathComponent:
texture
URLWithString:
UTF8String
__initCommon
_allocator
_applicationWillEnterForeground:
_autoResizeDrawable
_blit
_blitQueue
_blockSet
_bufferAllocator
_buffers
_bytes
_bytesPerRow
_calculateRefeshesPerSecond
_capacity
_clearColor
_clearDepth
_clearStencil
_colorPixelFormats
_colorTextures
_commandBuffer
_controlsOwnScaleFactor
_createDisplayLinkForScreen:
_createMeshesFromObject:newMeshes:sourceMeshes:device:error:
_currentDrawable
_delegate
_depth
_depthStencilPixelFormat
_depthStencilStorageMode
_depthStencilTexture
_depthStencilTextureUsage
_determineFileType:
_deviceReset
_displayLink
_doesNotifyOnRecommendedSizeUpdate
_drawOffscreen
_drawableAttachmentIndex
_drawableID
_drawableIdx
_drawableScaleFactor
_drawableSize
_dumpFrameAtFrame
_dumpFrameAtSeconds
_dumpFrameImageWithFilename:
_dumpFramerate:withFilename:
_dumpPath
_enableSetNeedsDisplay
_expandRGBToRGBA
_forceOrientation
_frameNum
_framebufferOnly
_imageData
_imageOrigin
_indexBuffer
_indexCount
_indexType
_initWithBytes:length:offset:allocator:zone:type:
_initWithData:allocator:type:
_initWithLength:offset:zone:type:
_layer
_loadCGImage:options:completionHandler:
_loadData:options:completionHandler:
_loadData:options:uploader:label:completionHandler:
_loadMDLTexture:options:completionHandler:
_loadQueue
_loadSemaphore
_lock
_maxValidAttachmentIndex
_measureAfterFrame
_measureAfterSeconds
_mesh
_metaDataSize
_metalLayer
_multisampleColorTexture
_multisampleColorTextureUsage
_multisampleColorTextures
_name
_newAsyncTextureWithNames:scaleFactor:displayGamut:bundle:options:completionHandler:
_newSyncTexturesFromTXRTextures:labels:options:error:
_nominalFramesPerSecond
_notifyQueue
_numArrayElements
_numFaces
_numMipmapLevels
_numSurfaces
_offscreenSwapChain
_packedRowStride
_pausedOnBackgrounding
_pixelFormat
_pixelFormatInfo
_pixelSizeFromPointSize:
_preferredDrawableSize
_preferredFramesPerSecond
_presentedTime
_primitiveType
_pvrCompressedFormat
_pvrFormat
_refreshRate
_renderAttachmentDirtyState
_resizeMetalLayerDrawable
_sampleCount
_size
_sizeDirty
_startTime
_subClassOverridesDrawRect
_submeshes
_terminateAfterFrame
_terminateAfterSeconds
_texture
_textureDirty
_textureType
_type
_updateToNativeScale
_uploadQueue
_vertexBuffers
_vertexCount
_vertexDescriptor
_width
_zone
absoluteString
actionForLayer:forKey:
addCompletedHandler:
addObject:
addObserver:selector:name:object:
addPresentedHandler:
addToRunLoop:forMode:
allocator
appendBytes:length:
array
arrayLength
arrayWithObjects:count:
attributes
autoResizeDrawable
autorelease
blitCommandEncoder
boolValue
bounds
buffer
bufferIndex
bytes
bytesPerImage
bytesPerRow
capacity
channelCount
checkResourceIsReachableAndReturnError:
children
class
clearColor
clearDepth
clearStencil
colorAttachments
colorPixelFormat
colorTextures
colorTexturesForceUpdate:
colorspace
commandBuffer
commit
conformsToProtocol:
containsValueForKey:
contentScaleFactor
contents
convertRect:toCoordinateSpace:
copy
copyBytes:toTexture:bitsPerPixel:pixelComponents:bytesPerRow:bytesPerImage:region:slice:level:flipVertically:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyTexture:toTexture:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDepthStencilTexture
createFileAtPath:contents:attributes:
currentDevice
currentRenderPassDescriptor
currentRunLoop
dataUsingEncoding:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
debugDescription
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeCGImage:options:
decodeCGImageDataProvider:options:
decodeCGImageImageProvider:CGImageProvider:options:
decodeFloatForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectForKey:
defaultCenter
defaultManager
defaultUICatalogForBundle:
delegate
depth
depthStencilAttachmentTextureUsage
depthStencilPixelFormat
depthStencilStorageMode
depthStencilTexture
description
destroyBuffer:
determineBlockSize:blocksWide:blocksHigh:bytesPerBlock:fromFormat:width:andHeight:
determineCGImageBlockFormatWithComponentType:alphaInfo:andPixelSizeBytes:andColorSpace:isOptimized:options:
determineFormat:colorSpace:channelType:options:
determineFormat:options:
determineFormatFromChannelEncoding:channelCount:error:
determineFormatFromType:format:internalFormat:baseInternalFormat:
device
dictionaryWithObjects:forKeys:count:
dimensions
displayLayer:
draw
drawInMTKView:
drawLayer:inContext:
drawNumber
drawRect:
drawableAttachmentIndex
drawableID
drawableSize
elements
enableSetNeedsDisplay
encodeBool:forKey:
encodeBytes:length:forKey:
encodeFloat:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endEncoding
enumerateByteRangesUsingBlock:
enumerateObjectsUsingBlock:
environment
errorWithDomain:code:userInfo:
exportToTargaAtLocation:width:height:size:bytes:
exportToURL:uttype:error:
faces
fillData:offset:
finishWithCompletionHandler:
fixedCoordinateSpace
format
generateMipmapsForTexture:
geometryType
getBytes:length:
getDataForArrayElement:face:level:depthPlane:bytesPerRow:bytesPerImage:
getEnvironmentSettings
hasPrefix:
hash
height
image
imageExistsWithName:scaleFactor:
imageOrigin
imageWithName:scaleFactor:displayGamut:layoutDirection:
indexBuffer
indexCount
indexType
init
initWithBytes:deallocator:
initWithBytesNoCopy:length:deallocNotification:device:error:
initWithBytesNoCopy:length:freeWhenDone:
initWithCGImage:options:error:
initWithCapacity:
initWithCapacity:allocator:
initWithCoder:
initWithContents:
initWithContentsOfURL:options:error:
initWithData:options:error:
initWithDevice:commandQueue:notifyQueue:
initWithDevice:pixelFormat:size:drawableID:
initWithDimensions:pixelFormat:alphaInfo:bytesPerRow:bytesPerImage:buffer:offset:
initWithDomain:code:userInfo:
initWithFrame:
initWithFrame:device:
initWithLength:device:
initWithMDLSubmesh:indexType:geometryType:
initWithMDLTexture:options:error:
initWithMesh:device:error:
initWithMesh:submesh:device:error:
insertObject:atIndex:
instanceMethodForSelector:
integerValue
invalidate
isASTCHDRData:textureType:error:
isCube
isEqual:
isEqualToString:
isKTXFile:
isKindOfClass:
isMemberOfClass:
isPVR3File:
isPVRFile:
isPaused
label
lastObject
lastPathComponent
layer
layerClass
layerWillDraw:
layoutSublayersOfLayer:
layoutSubviews
length
localizedDescription
lock
mainScreen
mesh
methodForSelector:
mipLevelCount
mipmapLevelCount
mipmapLevels
multisampleColorAttachmentTextureUsage
multisampleColorTexture
multisampleColorTextures
multisampleColorTexturesForceUpdate:
mutableBytes
name
namedTextureWithName:scaleFactor:
nativeBounds
nativeScale
newBufferFromZone:data:type:
newBufferFromZone:length:type:
newBufferWithBytesNoCopy:length:deallocNotification:error:
newBufferWithBytesNoCopy:length:options:deallocator:
newBufferWithData:type:
newBufferWithLength:
newBufferWithLength:options:
newBufferWithLength:type:
newMeshesFromAsset:device:sourceMeshes:error:
newTextureFromTXRTexture:options:error:
newTextureWithCGImage:options:completionHandler:
newTextureWithCGImage:options:error:
newTextureWithContentsOfURL:options:completionHandler:
newTextureWithContentsOfURL:options:error:
newTextureWithData:options:
newTextureWithData:options:completionHandler:
newTextureWithData:options:error:
newTextureWithDescriptor:
newTextureWithMDLTexture:options:completionHandler:
newTextureWithMDLTexture:options:error:
newTextureWithName:scaleFactor:bundle:options:completionHandler:
newTextureWithName:scaleFactor:bundle:options:error:
newTextureWithName:scaleFactor:displayGamut:bundle:options:completionHandler:
newTextureWithName:scaleFactor:displayGamut:bundle:options:error:
newTexturesFromTXRTextures:options:error:
newTexturesWithContentsOfURLs:options:completionHandler:
newTexturesWithContentsOfURLs:options:error:
newTexturesWithNames:scaleFactor:bundle:options:completionHandler:
newTexturesWithNames:scaleFactor:displayGamut:bundle:options:completionHandler:
newUploaderForOptions:
newZone:
newZoneForBuffersWithSize:andType:
nextDrawable
nominalFramesPerSecond
null
numArrayElements
numFaces
numberFromString:
numberWithInteger:
objectAtIndexedSubscript:
objectForKey:
offset
packedMemoryLayoutForFormat:dimensions:
parseKey:value:error:
parseKeyValueBytes:length:error:
parseMetadataWithError:
paused
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pixelFormat
preferredDrawableSize
preferredFramesPerSecond
presentAfterMinimumDuration:
presentAtTime:
presentedTime
presentsWithTransaction
primitiveType
processInfo
reformat:gammaDegamma:bufferAllocator:error:
releaseDrawables
removeObjectAtIndex:
renderPassDescriptor
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
respondsToSelector:
retain
retainCount
sampleCount
screen
self
setAutoResizeDrawable:
setBackgroundColor:
setBuffer:
setClearColor:
setClearDepth:
setClearStencil:
setColorPixelFormat:
setColorPixelFormat:atIndex:
setColorspace:
setContentScaleFactor:
setContentsScale:
setCpuCacheMode:
setDelegate:
setDepth:
setDepthStencilAttachmentTextureUsage:
setDepthStencilPixelFormat:
setDepthStencilStorageMode:
setDevice:
setDrawableAttachmentIndex:
setDrawableSize:
setEnableSetNeedsDisplay:
setFormat:
setFrame:
setFramebufferOnly:
setHeight:
setLabel:
setLoadAction:
setMipmapLevelCount:
setMultisampleColorAttachmentTextureUsage:
setName:
setNilValueForKey:
setNominalFramesPerSecond:
setNumArrayElements:
setNumFaces:
setNumMipmapLevels:
setObject:atIndexedSubscript:
setOffset:
setOpaque:
setPaused:
setPreferredFramesPerSecond:
setPresentsWithTransaction:
setResolveTexture:
setSize:
setStride:
setTarget:
setTexture:
setUsage:
setValue:forKey:
setWidth:
size
startTime
stencilAttachment
storageMode
stride
stringByAppendingString:
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
subdataWithRange:
submeshes
superclass
supportsTextureCubeArray
target
texelDataWithTopLeftOriginAtMipLevel:create:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
textureType
textureWithBufferAllocator:
type
unlock
unsignedIntegerValue
usage
validateGenerateMipmapsForPixelFormat:options:error:
vertexBuffers
vertexCount
vertexDescriptor
waitUntilCompleted
width
window
writeToURL:options:error:
zone
@24@0:8@16
v16@0:8
@16@0:8
v24@0:8@16
@"MTKView"
#16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16^{CGContext=}24
@32@0:8@16@24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
B56@0:8@16Q24Q32Q40^v48
d16@0:8
v32@0:8d16@24
v32@0:8Q16Q24
v24@0:8^{CGColorSpace=}16
^{CGColorSpace=}16@0:8
v24@0:8Q16
r^@16@0:8
r^@20@0:8B16
q16@0:8
v24@0:8q16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
v20@0:8B16
v32@0:8{CGSize=dd}16
v24@0:8d16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{?=dddd}16@0:8
v48@0:8{?=dddd}16
I16@0:8
v20@0:8I16
{CGSize=dd}16@0:8
@"CAMetalLayer"
{CGSize="width"d"height"d}
@"CADisplayLink"
@"<CAMetalDrawable>"
@"<MTLTexture>"
[8Q]
[8@"<MTLTexture>"]
[3@"MTKOffscreenDrawable"]
@"NSString"
@"<MTKViewDelegate>"
@"<MTLDevice>"
{?="red"d"green"d"blue"d"alpha"d}
@40@0:8@16@24^@32
B24@0:8^@16
@64@0:8Q16Q24Q32Q40^Q48^Q56
Q40@0:8Q16I24I28@32
v68@0:8^Q16^Q24^Q32^Q40I48Q52Q60
{MTLPixelFormatInfo="name"*"flags"I"castClass"Q"type"(?="normal"{MTLNormalPixelFormatInfo="pixelBytes"Q"componentCount"C"alignment"C"pixelBytesRender"Q"pixelBytesRenderMSAA"Q}"compressed"{MTLCompressedPixelFormatInfo="blockBytes"Q"blockWidth"Q"blockHeight"Q"blockDepth"Q})}
@"NSData"
@40@0:8@16@24@32
v132@0:8r^v16@24Q32Q40Q48Q56{?={?=QQQ}{?=QQQ}}64Q112Q120B128
v32@0:8@16@24
v24@0:8@?16
@"<MTLCommandBuffer>"
@"<MTLBlitCommandEncoder>"
@"NSLock"
@"NSObject<OS_dispatch_queue>"
B40@0:8q16Q24^@32
@"MDLTexture"
^v16@0:8
@24@0:8^v16
@24@0:8^{_NSZone=}16
@"<TXRBufferMap>"16@0:8
@32@0:8Q16@24
@56@0:8^v16Q24@?32@40^@48
@"<MTLBuffer>"
@24@0:8Q16
@48@0:8^v16Q24@?32^@40
@"<TXRBuffer>"24@0:8Q16
@"<TXRBuffer>"48@0:8^v16Q24@?<v@?^vQ>32^@40
v40@0:8@16@24@?32
v40@0:8^{CGImage=}16@24@?32
@40@0:8^{CGImage=}16@24^@32
Q24@0:8@16
v56@0:8@16@24@32@40@?48
B40@0:8Q16@24^@32
v64@0:8@16d24q32@40@48@?56
@48@0:8@16@24@32^@40
v56@0:8@16d24@32@40@?48
@56@0:8@16d24@32@40^@48
@64@0:8@16d24q32@40@48^@56
@"NSObject<OS_dispatch_semaphore>"
@"<MTLCommandQueue>"
@"<TXRBufferAllocator>"
@"<MTLDeviceSPI>"
B32@0:8^{CGImage=}16@24
B40@0:8^{CGImage=}16^{CGImageProvider=}24@32
B52@0:8i16I20Q24^{CGColorSpace=}32B40@44
^{CGImageBlockSet=}
^{__CFData=}
B40@0:8r*16Q24^@32
B40@0:8@16@24^@32
Q32@0:8I16I20I24I28
Q24@0:8Q16
B28@0:8I16@20
@"<MTLTexture>"16@0:8
@"CAMetalLayer"16@0:8
@56@0:8@16Q24{CGSize=dd}32Q48
@32@0:8Q16Q24
@32@0:8@16Q24
@40@0:8@16Q24Q32
@40@0:8@16@24Q32
@"<MDLMeshBufferZone>"24@0:8Q16
@"<MDLMeshBufferZone>"32@0:8@"NSArray"16@"NSArray"24
@"<MDLMeshBuffer>"32@0:8Q16Q24
@"<MDLMeshBuffer>"32@0:8@"NSData"16Q24
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16Q24Q32
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16@"NSData"24Q32
@"MTKMeshBuffer"
@"MTKMesh"
v56@0:8@16@24@32@40^@48
@48@0:8@16@24^@32^@40
@"NSMutableArray"
@"MDLVertexDescriptor"
q40@0:8@16Q24^@32
@"<MDLMeshBufferAllocator>"16@0:8
@"NSMutableOrderedSet"
@"MTKMeshBufferAllocator"
v32@0:8@16Q24
v32@0:8@"NSData"16Q24
@"MDLMeshBufferMap"16@0:8
@"<MDLMeshBufferZone>"16@0:8
v24@0:8@"NSString"16
@48@0:8Q16Q24@32Q40
@40@0:8Q16@24Q32
@64@0:8r^v16Q24Q32@40@48Q56
@"MTKMeshBufferZone"
KTX 11
