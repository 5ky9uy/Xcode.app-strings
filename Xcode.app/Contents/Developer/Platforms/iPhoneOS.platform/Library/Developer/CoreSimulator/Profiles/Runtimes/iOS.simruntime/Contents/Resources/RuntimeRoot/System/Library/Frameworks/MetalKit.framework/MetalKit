@(#)PROGRAM:MetalKit  PROJECT:MetalKit-154
orientation
MTK_TERMINATE_AFTER_FRAME
MTK_TERMINATE_AFTER_SECONDS
MTK_MEASURE_FRAMERATE_AFTER_FRAME
MTK_MEASURE_FRAMERATE_AFTER_SECONDS
MTK_DUMP_PATH
MTK_DUMP_FRAME_AFTER_FRAME
MTK_DUMP_FRAME_AFTER_SECONDS
MTK_DUMP_FIRST_FRAME
MTK_DRAW_OFFSCREEN
MTK_FORCE_ORIENTATION
/tmp
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
Couldn't export image to TGA %@
.txt
-[MTKView _dumpFrameImageWithFilename:]
MTKView.m
!"Unhandled PixelFormat"
file:///
public.png
Image Dump Error - %s: %s 
MTKView Depth
MTKView Stencil
MTKView Depth Stencil
v8@?0
MTKViewNumberColorPixelFormatsCoderKey
MTKViewColorPixelFormatArrayCoderKey
-[MTKView initWithCoder:]
bytesReturned == bytesExpected
MTKViewDrawableAttachmentIndexCoderKey
MTKViewColorPixelFormatCoderKey
MTKViewDepthStencilPixelFormatCoderKey
MTKViewSampleCountCoderKey
MTKViewClearColorCoderKey
MTKViewFramebufferOnlyCoderKey
MTKViewPresentsWithTransactionCoderKey
MTKViewClearDepthCoderKey
MTKViewClearStencilCoderKey
MTKViewPreferredFramesPerSecondCoderKey
MTKViewEnableSetNeedsDisplayCoderKey
MTKViewPausedCoderKey
MTKViewAutoResizeDrawableCoderKey
MTKViewFirstFrameDump
MTKViewFrameDumpAfterFrame_%d
MTKViewFrameDumpAfterSeconds_%lu
MTKViewFramerateAfterFrame_%d
MTKViewFramerateAfterSeconds_%lu
-[MTKView setContentScaleFactor:]
self.contentScaleFactor != 0
clearColor
sampleCount
clearDepth
clearStencil
-[MTKView setDepthStencilPixelFormat:]
depthStencilPixelFormat != MTLPixelFormatX32_Stencil8 && "depthStencilPixelFormat cannot be a stencil texture view pixel format"
Could not determine format from PVR header
Vertical flip is not supported for compressed PVR textures
Metal does not support texture cube arrays
Vertical flip is only supported for 2D, 2D array, and cube map textures
Creating cube maps from 2D textures is not supported for PVR files
Could not parse KTX metadata
-[MTKTextureLoaderPVR3 parseMetadataWithError:]
MTKTextureLoaderPVR3.m
dataSize == 3
axes[0] == 0
v16@?0@"<MTLCommandBuffer>"8
Creating cube maps from 2D textures is not supported for MDL textures
Textures must have 1, 2, or 4 channels
Textures must use 8 or 16 bits per channel
Could not determine format from MDLTexture
MTKTextureLoaderErrorDomain
MTKTextureLoaderErrorKey
MTKTextureLoaderOptionAllocateMipmaps
MTKTextureLoaderOptionGenerateMipmaps
MTKTextureLoaderOptionSRGB
MTKTextureLoaderOptionTextureUsage
MTKTextureLoaderOptionTextureCPUCacheMode
MTKTextureLoaderOptionTextureStorageMode
MTKTextureLoaderOptionOrigin
MTKTextureLoaderOptionCubeLayout
MTKTextureLoaderOptionPackedRowStride
MTKTextureLoaderOriginTopLeft
MTKTextureLoaderOriginBottomLeft
MTKTextureLoaderOriginFlippedVertically
MTKTextureLoaderCubeLayoutVertical
com.apple.mtktextureloaderload
com.apple.mtktextureloaderupload
com.apple.mtktextureloadernotify
URL is nil
v24@?0@"NSArray"8@"NSError"16
Could not find resource %@ at specified location.
Invalid NSData, %@
v24@?0@"<MTLTexture>"8@"NSError"16
Pixel format(%s) is not valid on this device
MTKTextureLoaderOptionGenerateMipmaps is only supported for color renderable and filterable pixel formats
Could not get asset catalog from supplied bundle
Could not find texture or image named "%@" in supplied bundle
v32@?0@"TXRTexture"8Q16^B24
com.apple.MTKTextureLoader
-[MTKTextureLoader _newSyncTexturesFromTXRTextures:labels:options:error:]
MTKTextureLoader.m
txrTexture.pixelFormat < 0x80000000
Attempt to load a cubemap array on platform that does not support cubemap arrays
1 == txrTexture.dimensions.z
txrTexture.dimensions.x == txrTexture.dimensions.y
[image.buffer isKindOfClass:[MTKTextureIOBuffer class]]
Image decoding failed
kCGImageBlockIOSurfaceOptimizedRequest
Unsupported image orientation
Image height must be six times the image width for a vertical cubemap texture
kCGImageBlockSingletonRequest
kCGImageBlockFormatRequest
kCGImageBlockFormatBGRx8
getFillValueForComponentType
MTKTextureLoaderImageIO.m
!"Incorrect values being passed to fillForComponent"
Could not determine format from KTX header
Vertical flip is not supported for block texture formats
Creating cube maps from 2D textures is not supported for KTX files
S=r,T=d
S=r,T=u
ktxorientation
expandRGBToRGBA
MTKTextureLoader_Internal.m
source != nil
destination != nil
MTKModelErrorDomain
MTKModelErrorKey
invalid index type submesh
invalid geometry type in submesh
required conversion from orginal submesh indexType and geometryType failed
index buffer in MDLSubmesh was not created using a MTKMeshBufferAllocator
vertex buffer in MDLMesh was not created using a MTKMeshBufferAllocator
Must supply asset
Must supply device
Too many vertex attributes in MTLVertexDescriptor to create a MDLVertexDescriptor
MTKModelIOVertexDescriptorFromMetalWithError
MTKModel.m
!"Model I/O vertex descriptor attribute count should be at least MTL_MAX_VERTEX_ATTRIBUTES"
No compatible MDLVertexFormat format for MTLVertexAttribute format
Too many vertex layouts in MTLVertexDescriptor to create a MDLVertexDescriptor
!"Model I/O vertex descriptor layouts count should be at least MTL_MAX_VERTEX_BUFFERS"
No compatible MTLVertexFormat format for MDLVertexAttribute format
MDLSubmesh
/System/Library/Frameworks/ModelIO.framework/ModelIO
MDLMesh
MDLVertexDescriptor
+[MTKTextureLoaderASTCHelper isASTCHDRData:textureType:error:]_block_invoke
MTKTextureLoaderASTCHelper.m
!"Incorrect partition information"
v40@?0r^v8{_NSRange=QQ}16^B32
Could not load ASTC texture, data is malformed
-[MTKMeshBufferZone destroyBuffer:]
MTKMeshBufferZone.m
destroyedBuffer.zone == self
MDLMeshBufferMap
_mtkLinkedOnOrAfter
MetalKit_Internal.m
false && "Unsupported MTKOSVersion"
MTKViewDisplayLinkTarget
MTKView
NSCoding
CALayerDelegate
NSObject
MTKTextureLoaderPVR3
MTKTextureUploader
MTKTextureLoaderMDL
MTKTextureIOBufferMap
TXRBufferMap
MTKTextureIOBuffer
TXRBuffer
NSCopying
MTKTextureIOBufferAllocator
TXRBufferAllocator
MTKTextureLoader
MTKTextureLoaderData
MTKTextureLoaderImageIO
MTKTextureLoaderKTX
MTKTextureLoaderPVR
MTKOffscreenDrawable
CAMetalDrawable
MTLDrawable
MTKMeshBufferAllocator
MDLMeshBufferAllocator
MTKSubmesh
MTKMesh
MTKTextureLoaderASTCHelper
MTKMeshBufferHolder
MTKMeshBufferZone
MDLMeshBufferZone
MTKMeshBuffer
MDLMeshBuffer
MDLNamed
init
setTarget:
draw
initWithTarget:
target
.cxx_destruct
_target
T@"MTKView",W,N,V_target
getEnvironmentSettings
currentDevice
numberWithInteger:
setValue:forKey:
setContentScaleFactor:
layer
setColorPixelFormat:
setDevice:
setDelegate:
setFramebufferOnly:
colorPixelFormat
initWithDevice:pixelFormat:size:drawableID:
defaultCenter
setOpaque:
setBackgroundColor:
setPreferredFramesPerSecond:
_applicationDidEnterBackground:
addObserver:selector:name:object:
_applicationWillEnterForeground:
drawRect:
instanceMethodForSelector:
methodForSelector:
_resizeDrawable
processInfo
environment
objectForKey:
setNumberStyle:
numberFromString:
copy
unsignedIntegerValue
boolValue
isEqualToString:
initWithLength:
mutableBytes
appendBytes:length:
writeToURL:options:error:
localizedDescription
stringByAppendingString:
stringWithFormat:
defaultManager
dataUsingEncoding:
createFileAtPath:contents:attributes:
initWithDevice:
newBufferWithLength:
newCommandQueue
commandBuffer
blitCommandEncoder
texture
buffer
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
endEncoding
commit
waitUntilCompleted
URLWithString:
URLByAppendingPathComponent:
URLByAppendingPathExtension:
initWithDimensions:pixelFormat:alphaInfo:bytesPerRow:bytesPerImage:buffer:offset:
exportToURL:uttype:error:
absoluteString
UTF8String
setPixelFormat:
setColorPixelFormat:atIndex:
drawableSize
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
setTextureType:
setSampleCount:
setUsage:
setStorageMode:
newTextureWithDescriptor:
setLabel:
width
height
sampleCount
pixelFormat
usage
storageMode
_resizeMetalLayerDrawable
createDepthStencilTexture
multisampleColorTexturesForceUpdate:
colorTextures
colorTexturesForceUpdate:
currentDrawable
setSize:
null
multisampleColorTextures
nextDrawable
setPaused:
setNominalFramesPerSecond:
window
screen
mainScreen
_refreshRate
invalidate
_updateToNativeScale
_createDisplayLinkForScreen:
didMoveToWindow
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
releaseDrawables
initWithFrame:
__initCommon
initWithFrame:device:
initWithCoder:
containsValueForKey:
decodeIntegerForKey:
decodeBytesForKey:returnedLength:
decodeIntForKey:
setDrawableAttachmentIndex:
setDepthStencilPixelFormat:
decodeObjectForKey:
bytes
setClearColor:
decodeBoolForKey:
setPresentsWithTransaction:
decodeFloatForKey:
setClearDepth:
setClearStencil:
setEnableSetNeedsDisplay:
setAutoResizeDrawable:
encodeWithCoder:
encodeInteger:forKey:
encodeBytes:length:forKey:
drawableAttachmentIndex
dataWithBytes:length:
encodeObject:forKey:
encodeFloat:forKey:
encodeBool:forKey:
framebufferOnly
presentsWithTransaction
removeObserver:
dealloc
renderPassDescriptor
colorAttachments
objectAtIndexedSubscript:
setTexture:
setResolveTexture:
setStoreAction:
setLoadAction:
depthStencilTexture
depthAttachment
stencilAttachment
bounds
drawInMTKView:
_dumpFrameImageWithFilename:
_dumpFramerate:withFilename:
fixedCoordinateSpace
convertRect:toCoordinateSpace:
coordinateSpace
contentScaleFactor
nativeScale
displayLayer:
delegate
mtkView:drawableSizeWillChange:
preferredDevice
_pixelSizeFromPointSize:
setDrawableSize:
nativeBounds
setContentsScale:
layoutSubviews
setFrame:
setNilValueForKey:
layerClass
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
exportToTargaAtLocation:width:height:size:bytes:
startTime
drawNumber
setColorspace:
colorspace
multisampleColorTexture
nominalFramesPerSecond
_calculateRefeshesPerSecond
currentRenderPassDescriptor
_canDrawContent
_controlsOwnScaleFactor
setDepthStencilAttachmentTextureUsage:
depthStencilAttachmentTextureUsage
depthStencilStorageMode
setDepthStencilStorageMode:
setMultisampleColorAttachmentTextureUsage:
multisampleColorAttachmentTextureUsage
device
depthStencilPixelFormat
clearColor
clearDepth
clearStencil
preferredFramesPerSecond
enableSetNeedsDisplay
autoResizeDrawable
preferredDrawableSize
isPaused
_metalLayer
_sizeDirty
_drawableScaleFactor
_pausedOnBackgrounding
_displayLink
_currentDrawable
_drawRectSubIMP
_subClassOverridesDrawRect
_deviceReset
_doesNotifyOnRecommendedSizeUpdate
_depthStencilTexture
_multisampleColorTexture
_framebufferOnly
_depthStencilTextureUsage
_multisampleColorTextureUsage
_depthStencilStorageMode
_drawableAttachmentIndex
_nominalFramesPerSecond
_maxValidAttachmentIndex
_colorPixelFormats
_multisampleColorTextures
_colorTextures
_offscreenSwapChain
_drawableIdx
_renderAttachmentDirtyState
_terminateAfterFrame
_terminateAfterSeconds
_measureAfterFrame
_measureAfterSeconds
_dumpFrameAtFrame
_dumpFrameAtSeconds
_dumpPath
_dumpFirstFrame
_drawOffscreen
_forceOrientation
_startTime
_frameNum
_enableSetNeedsDisplay
_autoResizeDrawable
_paused
_clearStencil
_delegate
_device
_depthStencilPixelFormat
_sampleCount
_clearDepth
_preferredFramesPerSecond
_drawableSize
_preferredDrawableSize
_clearColor
T@"<MTKViewDelegate>",W,N,V_delegate
T@"<MTLDevice>",&,N,V_device
T@"<CAMetalDrawable>",R,N,V_currentDrawable
TB,N
TQ,N
TQ,N,V_depthStencilPixelFormat
TQ,N,V_sampleCount
T{?=dddd},N,V_clearColor
Td,N,V_clearDepth
TI,N,V_clearStencil
T@"<MTLTexture>",R,N
T@"MTLRenderPassDescriptor",R,N
Tq,N,V_preferredFramesPerSecond
TB,N,V_enableSetNeedsDisplay
TB,N,V_autoResizeDrawable
T{CGSize=dd},N,V_drawableSize
T{CGSize=dd},R,N,V_preferredDrawableSize
T@"<MTLDevice>",R
paused
TB,N,GisPaused,V_paused
T^{CGColorSpace=},N
getBytes:length:
setWidth:
setHeight:
setDepth:
setNumFaces:
setNumMipmapLevels:
setImageOrigin:
parseMetadataWithError:
determineFormat:colorSpace:channelType:options:
numFaces
depth
setNumArrayElements:
textureType
numMipmapLevels
determineBlockSize:blocksWide:blocksHigh:bytesPerBlock:fromFormat:width:andHeight:
numArrayElements
dataWithBytesNoCopy:length:freeWhenDone:
isPVR3File:
initWithData:options:error:
getDataForArrayElement:face:level:depthPlane:bytesPerRow:bytesPerImage:
_pvrCompressedFormat
_pixelFormatInfo
_metaDataSize
_imageData
lock
generateMipmapsForTexture:
unlock
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
arrayLength
mipmapLevelCount
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
setMipmapLevelCount:
setArrayLength:
setCpuCacheMode:
imageOrigin
copyBytes:toTexture:bitsPerPixel:pixelComponents:bytesPerRow:bytesPerImage:region:slice:level:flipVertically:
copyTexture:toTexture:
addCompletedHandler:
initWithDevice:commandQueue:notifyQueue:
newTextureWithData:options:
finishWithCompletionHandler:
_commandBuffer
_blit
_lock
_notifyQueue
dimensions
isCube
mipLevelCount
channelEncoding
channelCount
determineFormatFromChannelEncoding:channelCount:error:
texelDataWithTopLeftOriginAtMipLevel:create:
subdataWithRange:
initWithMDLTexture:options:error:
_texture
T^v,R,N
initWithContents:
_bytes
newBufferWithLength:options:
newBufferWithBytesNoCopy:length:options:deallocator:
contents
length
initWithLength:device:
copyWithZone:
initWithBytesNoCopy:length:deallocNotification:device:error:
_buffer
T@"<MTLBuffer>",R,N,V_buffer
newBufferWithBytesNoCopy:length:deallocNotification:error:
arrayWithObjects:count:
newTexturesWithContentsOfURLs:options:completionHandler:
newUploaderForOptions:
array
count
addObject:
countByEnumeratingWithState:objects:count:
checkResourceIsReachableAndReturnError:
lastPathComponent
initWithContentsOfURL:options:error:
setObject:atIndexedSubscript:
_loadData:options:uploader:label:completionHandler:
_loadData:options:completionHandler:
_loadCGImage:options:completionHandler:
_loadMDLTexture:options:completionHandler:
newTextureWithContentsOfURL:options:completionHandler:
newTextureWithData:options:completionHandler:
newTextureWithCGImage:options:completionHandler:
newTextureWithMDLTexture:options:completionHandler:
isKTXFile:
isPVRFile:
_determineFileType:
validateGenerateMipmapsForPixelFormat:options:error:
initWithCGImage:options:error:
initWithCapacity:
defaultUICatalogForBundle:
namedTextureWithName:scaleFactor:
textureWithBufferAllocator:
isGammaEncoded:
reformat:gammaDegamma:bufferAllocator:error:
imageExistsWithName:scaleFactor:
imageWithName:scaleFactor:displayGamut:layoutDirection:
image
_newSyncTexturesFromTXRTextures:labels:options:error:
newTextureWithCGImage:options:error:
enumerateObjectsUsingBlock:
mipmapLevels
elements
cubemap
supportsTextureCubeArray
faces
bytesPerRow
bytesPerImage
packedMemoryLayoutForFormat:dimensions:
offset
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
_newAsyncTextureWithNames:scaleFactor:displayGamut:bundle:options:completionHandler:
newTexturesWithNames:scaleFactor:bundle:options:completionHandler:
newTexturesWithNames:scaleFactor:displayGamut:bundle:options:completionHandler:
newTextureWithName:scaleFactor:bundle:options:completionHandler:
newTextureWithName:scaleFactor:displayGamut:bundle:options:completionHandler:
newTextureWithContentsOfURL:options:error:
newTexturesWithContentsOfURLs:options:error:
newTextureWithData:options:error:
newTextureWithMDLTexture:options:error:
newTexturesFromTXRTextures:options:error:
newTextureFromTXRTexture:options:error:
newTextureWithName:scaleFactor:bundle:options:error:
newTextureWithName:scaleFactor:displayGamut:bundle:options:error:
_loadQueue
_uploadQueue
_loadSemaphore
_blitQueue
_bufferAllocator
T@"<MTLDevice>",R,N
_imageOrigin
_numArrayElements
_numFaces
_numMipmapLevels
_width
_height
_depth
_textureType
_pixelFormat
T@"NSString",&,N,V_imageOrigin
TQ,N,V_numArrayElements
TQ,N,V_numFaces
TQ,N,V_numMipmapLevels
TQ,N,V_width
TQ,N,V_height
TQ,N,V_depth
TQ,N,V_textureType
TQ,N,V_pixelFormat
integerValue
decodeCGImage:options:
decodeCGImageImageProvider:CGImageProvider:options:
decodeCGImageDataProvider:options:
determineCGImageBlockFormatWithComponentType:alphaInfo:andPixelSizeBytes:andColorSpace:isOptimized:options:
initWithBytesNoCopy:length:freeWhenDone:
_blockSet
_cfData
_bytesPerRow
_expandRGBToRGBA
determineFormatFromType:format:internalFormat:baseInternalFormat:
parseKeyValueBytes:length:error:
isASTCHDRData:textureType:error:
stringWithCString:encoding:
parseKey:value:error:
lowercaseString
stringWithUTF8String:
hasPrefix:
determineFormatFromSizedFormat:
_packedRowStride
determineFormat:options:
_pvrFormat
_numSurfaces
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
present
presentAtTime:
T@"<MTLTexture>",R
T@"CAMetalLayer",R
presentAfterMinimumDuration:
size
addPresentedHandler:
presentedTime
drawableID
_size
_textureDirty
_layer
_presentedTime
_drawableID
T@"CAMetalLayer",R,V_layer
Td,R,N,V_presentedTime
TQ,R,N,V_drawableID
T{CGSize=dd},N
initWithCapacity:allocator:
minConstantBufferAlignmentBytes
_initWithLength:allocator:type:
_initWithData:allocator:type:
allocator
newBufferWithLength:type:
newBuffer:type:
newBufferFromZone:length:type:
fillData:offset:
newZone:
newZoneForBuffersWithSize:andType:
newBufferWithData:type:
newBufferFromZone:data:type:
T@"<MTLDevice>",R,N,V_device
geometryType
indexType
initWithMDLSubmesh:indexType:geometryType:
indexBuffer
indexCount
name
initWithString:
initWithMesh:submesh:device:error:
primitiveType
mesh
setName:
_primitiveType
_indexType
_indexBuffer
_indexCount
_mesh
_name
TQ,R,N,V_primitiveType
TQ,R,N,V_indexType
T@"MTKMeshBuffer",R,N,V_indexBuffer
TQ,R,N,V_indexCount
T@"MTKMesh",R,W,N,V_mesh
T@"NSString",C,N,V_name
vertexCount
vertexBuffers
submeshes
vertexDescriptor
initWithMesh:device:error:
children
_createMeshesFromObject:newMeshes:sourceMeshes:device:error:
newMeshesFromAsset:device:sourceMeshes:error:
_submeshes
_vertexBuffers
_vertexDescriptor
_vertexCount
T@"NSArray",R,N,V_vertexBuffers
T@"MDLVertexDescriptor",R,N,V_vertexDescriptor
T@"NSArray",R,N,V_submeshes
TQ,R,N,V_vertexCount
attributes
format
setFormat:
bufferIndex
setBufferIndex:
setOffset:
layouts
stride
setStride:
enumerateByteRangesUsingBlock:
setBuffer:
T@"MTKMeshBuffer",V_buffer
maxBufferLength
_initWithLength:offset:zone:type:
insertObject:atIndex:
lastObject
removeObjectAtIndex:
capacity
TQ,R,N
T@"<MDLMeshBufferAllocator>",R,N
destroyBuffer:
_buffers
_destroyInvoked
_allocator
_capacity
TQ,R,N,V_capacity
T@"<MDLMeshBufferAllocator>",R,N,V_allocator
_initWithBytes:length:offset:allocator:zone:type:
initWithBytes:deallocator:
_newMap
label
type
T@"<MDLMeshBufferAllocator>",R,&,N
T@"<MDLMeshBufferZone>",R,&,N
T@"NSString",C,N
_zone
_length
_offset
_type
TQ,R,N,V_length
T@"MTKMeshBufferAllocator",R,N,V_allocator
T@"<MDLMeshBufferZone>",R,N,V_zone
TQ,R,N,V_offset
TQ,R,N,V_type
errorWithDomain:code:userInfo:
@24@0:8@16
v16@0:8
@16@0:8
v24@0:8@16
@"MTKView"
#16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16^{CGContext=}24
@32@0:8@16@24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
B56@0:8@16Q24Q32Q40^v48
d16@0:8
v32@0:8d16@24
v32@0:8Q16Q24
v24@0:8^{CGColorSpace=}16
^{CGColorSpace=}16@0:8
v24@0:8Q16
r^@16@0:8
r^@20@0:8B16
q16@0:8
v24@0:8q16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
v20@0:8B16
v32@0:8{CGSize=dd}16
v24@0:8d16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{?=dddd}16@0:8
v48@0:8{?=dddd}16
I16@0:8
v20@0:8I16
{CGSize=dd}16@0:8
@"CAMetalLayer"
{CGSize="width"d"height"d}
@"CADisplayLink"
@"<CAMetalDrawable>"
@"<MTLTexture>"
[8Q]
[8@"<MTLTexture>"]
[3@"MTKOffscreenDrawable"]
@"NSString"
@"<MTKViewDelegate>"
@"<MTLDevice>"
{?="red"d"green"d"blue"d"alpha"d}
@40@0:8@16@24^@32
B24@0:8^@16
@64@0:8Q16Q24Q32Q40^Q48^Q56
Q40@0:8Q16I24I28@32
v68@0:8^Q16^Q24^Q32^Q40I48Q52Q60
{MTLPixelFormatInfo="name"*"flags"I"castClass"Q"type"(?="normal"{MTLNormalPixelFormatInfo="pixelBytes"Q"componentCount"C"alignment"C"pixelBytesRender"Q"pixelBytesRenderMSAA"Q}"compressed"{MTLCompressedPixelFormatInfo="blockBytes"Q"blockWidth"Q"blockHeight"Q"blockDepth"Q})}
@"NSData"
@40@0:8@16@24@32
v132@0:8r^v16@24Q32Q40Q48Q56{?={?=QQQ}{?=QQQ}}64Q112Q120B128
v32@0:8@16@24
v24@0:8@?16
@"<MTLCommandBuffer>"
@"<MTLBlitCommandEncoder>"
@"NSLock"
@"NSObject<OS_dispatch_queue>"
B40@0:8q16Q24^@32
@"MDLTexture"
^v16@0:8
@24@0:8^v16
@24@0:8^{_NSZone=}16
@"<TXRBufferMap>"16@0:8
@32@0:8Q16@24
@56@0:8^v16Q24@?32@40^@48
@"<MTLBuffer>"
@24@0:8Q16
@48@0:8^v16Q24@?32^@40
@"<TXRBuffer>"24@0:8Q16
@"<TXRBuffer>"48@0:8^v16Q24@?<v@?^vQ>32^@40
v40@0:8@16@24@?32
v40@0:8^{CGImage=}16@24@?32
@40@0:8^{CGImage=}16@24^@32
Q24@0:8@16
v56@0:8@16@24@32@40@?48
B40@0:8Q16@24^@32
v64@0:8@16d24q32@40@48@?56
@48@0:8@16@24@32^@40
v56@0:8@16d24@32@40@?48
@56@0:8@16d24@32@40^@48
@64@0:8@16d24q32@40@48^@56
@"NSObject<OS_dispatch_semaphore>"
@"<MTLCommandQueue>"
@"<TXRBufferAllocator>"
@"<MTLDeviceSPI>"
B32@0:8^{CGImage=}16@24
B40@0:8^{CGImage=}16^{CGImageProvider=}24@32
B52@0:8i16I20Q24^{CGColorSpace=}32B40@44
^{CGImageBlockSet=}
^{__CFData=}
B40@0:8r*16Q24^@32
B40@0:8@16@24^@32
Q32@0:8I16I20I24I28
Q24@0:8Q16
B28@0:8I16@20
@"<MTLTexture>"16@0:8
@"CAMetalLayer"16@0:8
@56@0:8@16Q24{CGSize=dd}32Q48
@32@0:8Q16Q24
@32@0:8@16Q24
@40@0:8@16Q24Q32
@40@0:8@16@24Q32
@"<MDLMeshBufferZone>"24@0:8Q16
@"<MDLMeshBufferZone>"32@0:8@"NSArray"16@"NSArray"24
@"<MDLMeshBuffer>"32@0:8Q16Q24
@"<MDLMeshBuffer>"32@0:8@"NSData"16Q24
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16Q24Q32
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16@"NSData"24Q32
@"MTKMeshBuffer"
@"MTKMesh"
v56@0:8@16@24@32@40^@48
@48@0:8@16@24^@32^@40
@"NSMutableArray"
@"MDLVertexDescriptor"
q40@0:8@16Q24^@32
@"<MDLMeshBufferAllocator>"16@0:8
@"NSMutableOrderedSet"
@"MTKMeshBufferAllocator"
v32@0:8@16Q24
v32@0:8@"NSData"16Q24
@"MDLMeshBufferMap"16@0:8
@"<MDLMeshBufferZone>"16@0:8
v24@0:8@"NSString"16
@48@0:8Q16Q24@32Q40
@40@0:8Q16@24Q32
@64@0:8r^v16Q24Q32@40@48Q56
@"MTKMeshBufferZone"
KTX 11
@(#)PROGRAM:MetalKit  PROJECT:MetalKit-154
J&J)J/
s4s7s:
egikmoqsuwy{}
o6o8o:
BDFHJLNPRTVXZ\^`X
"$'),/7?
orientation
MTK_TERMINATE_AFTER_FRAME
MTK_TERMINATE_AFTER_SECONDS
MTK_MEASURE_FRAMERATE_AFTER_FRAME
MTK_MEASURE_FRAMERATE_AFTER_SECONDS
MTK_DUMP_PATH
MTK_DUMP_FRAME_AFTER_FRAME
MTK_DUMP_FRAME_AFTER_SECONDS
MTK_DUMP_FIRST_FRAME
MTK_DRAW_OFFSCREEN
MTK_FORCE_ORIENTATION
/tmp
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
Couldn't export image to TGA %@
.txt
-[MTKView _dumpFrameImageWithFilename:]
MTKView.m
!"Unhandled PixelFormat"
file:///
public.png
Image Dump Error - %s: %s 
MTKView Depth
MTKView Stencil
MTKView Depth Stencil
v8@?0
MTKViewNumberColorPixelFormatsCoderKey
MTKViewColorPixelFormatArrayCoderKey
-[MTKView initWithCoder:]
bytesReturned == bytesExpected
MTKViewDrawableAttachmentIndexCoderKey
MTKViewColorPixelFormatCoderKey
MTKViewDepthStencilPixelFormatCoderKey
MTKViewSampleCountCoderKey
MTKViewClearColorCoderKey
MTKViewFramebufferOnlyCoderKey
MTKViewPresentsWithTransactionCoderKey
MTKViewClearDepthCoderKey
MTKViewClearStencilCoderKey
MTKViewPreferredFramesPerSecondCoderKey
MTKViewEnableSetNeedsDisplayCoderKey
MTKViewPausedCoderKey
MTKViewAutoResizeDrawableCoderKey
MTKViewFirstFrameDump
MTKViewFrameDumpAfterFrame_%d
MTKViewFrameDumpAfterSeconds_%lu
MTKViewFramerateAfterFrame_%d
MTKViewFramerateAfterSeconds_%lu
-[MTKView setContentScaleFactor:]
self.contentScaleFactor != 0
clearColor
sampleCount
clearDepth
clearStencil
-[MTKView setDepthStencilPixelFormat:]
depthStencilPixelFormat != MTLPixelFormatX32_Stencil8 && "depthStencilPixelFormat cannot be a stencil texture view pixel format"
Could not determine format from PVR header
Vertical flip is not supported for compressed PVR textures
Metal does not support texture cube arrays
Vertical flip is only supported for 2D, 2D array, and cube map textures
Creating cube maps from 2D textures is not supported for PVR files
Could not parse KTX metadata
-[MTKTextureLoaderPVR3 parseMetadataWithError:]
MTKTextureLoaderPVR3.m
dataSize == 3
axes[0] == 0
v16@?0@"<MTLCommandBuffer>"8
Creating cube maps from 2D textures is not supported for MDL textures
Textures must have 1, 2, or 4 channels
Textures must use 8 or 16 bits per channel
Could not determine format from MDLTexture
MTKTextureLoaderErrorDomain
MTKTextureLoaderErrorKey
MTKTextureLoaderOptionAllocateMipmaps
MTKTextureLoaderOptionGenerateMipmaps
MTKTextureLoaderOptionSRGB
MTKTextureLoaderOptionTextureUsage
MTKTextureLoaderOptionTextureCPUCacheMode
MTKTextureLoaderOptionTextureStorageMode
MTKTextureLoaderOptionOrigin
MTKTextureLoaderOptionCubeLayout
MTKTextureLoaderOptionPackedRowStride
MTKTextureLoaderOriginTopLeft
MTKTextureLoaderOriginBottomLeft
MTKTextureLoaderOriginFlippedVertically
MTKTextureLoaderCubeLayoutVertical
com.apple.mtktextureloaderload
com.apple.mtktextureloaderupload
com.apple.mtktextureloadernotify
URL is nil
v24@?0@"NSArray"8@"NSError"16
Could not find resource %@ at specified location.
Invalid NSData, %@
v24@?0@"<MTLTexture>"8@"NSError"16
Pixel format(%s) is not valid on this device
MTKTextureLoaderOptionGenerateMipmaps is only supported for color renderable and filterable pixel formats
Could not get asset catalog from supplied bundle
Could not find texture or image named "%@" in supplied bundle
v32@?0@"TXRTexture"8Q16^B24
com.apple.MTKTextureLoader
-[MTKTextureLoader _newSyncTexturesFromTXRTextures:labels:options:error:]
MTKTextureLoader.m
txrTexture.pixelFormat < 0x80000000
Attempt to load a cubemap array on platform that does not support cubemap arrays
1 == txrTexture.dimensions.z
txrTexture.dimensions.x == txrTexture.dimensions.y
[image.buffer isKindOfClass:[MTKTextureIOBuffer class]]
Image decoding failed
kCGImageBlockIOSurfaceOptimizedRequest
Unsupported image orientation
Image height must be six times the image width for a vertical cubemap texture
kCGImageBlockSingletonRequest
kCGImageBlockFormatRequest
kCGImageBlockFormatBGRx8
getFillValueForComponentType
MTKTextureLoaderImageIO.m
!"Incorrect values being passed to fillForComponent"
Could not determine format from KTX header
Vertical flip is not supported for block texture formats
Creating cube maps from 2D textures is not supported for KTX files
S=r,T=d
S=r,T=u
ktxorientation
expandRGBToRGBA
MTKTextureLoader_Internal.m
source != nil
destination != nil
MTKModelErrorDomain
MTKModelErrorKey
invalid index type submesh
invalid geometry type in submesh
required conversion from orginal submesh indexType and geometryType failed
index buffer in MDLSubmesh was not created using a MTKMeshBufferAllocator
vertex buffer in MDLMesh was not created using a MTKMeshBufferAllocator
Must supply asset
Must supply device
Too many vertex attributes in MTLVertexDescriptor to create a MDLVertexDescriptor
MTKModelIOVertexDescriptorFromMetalWithError
MTKModel.m
!"Model I/O vertex descriptor attribute count should be at least MTL_MAX_VERTEX_ATTRIBUTES"
No compatible MDLVertexFormat format for MTLVertexAttribute format
Too many vertex layouts in MTLVertexDescriptor to create a MDLVertexDescriptor
!"Model I/O vertex descriptor layouts count should be at least MTL_MAX_VERTEX_BUFFERS"
No compatible MTLVertexFormat format for MDLVertexAttribute format
MDLSubmesh
/System/Library/Frameworks/ModelIO.framework/ModelIO
MDLMesh
MDLVertexDescriptor
+[MTKTextureLoaderASTCHelper isASTCHDRData:textureType:error:]_block_invoke
MTKTextureLoaderASTCHelper.m
!"Incorrect partition information"
v40@?0r^v8{_NSRange=QQ}16^B32
Could not load ASTC texture, data is malformed
-[MTKMeshBufferZone destroyBuffer:]
MTKMeshBufferZone.m
destroyedBuffer.zone == self
MDLMeshBufferMap
_mtkLinkedOnOrAfter
MetalKit_Internal.m
false && "Unsupported MTKOSVersion"
MTKViewDisplayLinkTarget
MTKView
NSCoding
CALayerDelegate
NSObject
MTKTextureLoaderPVR3
MTKTextureUploader
MTKTextureLoaderMDL
MTKTextureIOBufferMap
TXRBufferMap
MTKTextureIOBuffer
TXRBuffer
NSCopying
MTKTextureIOBufferAllocator
TXRBufferAllocator
MTKTextureLoader
MTKTextureLoaderData
MTKTextureLoaderImageIO
MTKTextureLoaderKTX
MTKTextureLoaderPVR
MTKOffscreenDrawable
CAMetalDrawable
MTLDrawable
MTKMeshBufferAllocator
MDLMeshBufferAllocator
MTKSubmesh
MTKMesh
MTKTextureLoaderASTCHelper
MTKMeshBufferHolder
MTKMeshBufferZone
MDLMeshBufferZone
MTKMeshBuffer
MDLMeshBuffer
MDLNamed
nextDrawable
encodeInteger:forKey:
integerValue
fixedCoordinateSpace
decodeFloatForKey:
packedMemoryLayoutForFormat:dimensions:
label
image
removeObserver:
removeObjectAtIndex:
nativeBounds
currentDevice
setUsage:
dimensions
dictionaryWithObjects:forKeys:count:
maxBufferLength
cubemap
methodForSelector:
children
copy
subdataWithRange:
setBufferIndex:
setMipmapLevelCount:
bounds
namedTextureWithName:scaleFactor:
colorAttachments
encodeFloat:forKey:
appendBytes:length:
initWithDomain:code:userInfo:
stringWithUTF8String:
instanceMethodForSelector:
coordinateSpace
initWithBytesNoCopy:length:freeWhenDone:
depthAttachment
usage
UTF8String
URLByAppendingPathComponent:
insertObject:atIndex:
setLoadAction:
encodeBytes:length:forKey:
boolValue
hasPrefix:
reformat:gammaDegamma:bufferAllocator:error:
faces
setTexture:
objectForKey:
createFileAtPath:contents:attributes:
convertRect:toCoordinateSpace:
checkResourceIsReachableAndReturnError:
URLWithString:
unsignedIntegerValue
initWithDimensions:pixelFormat:alphaInfo:bytesPerRow:bytesPerImage:buffer:offset:
initWithBytes:deallocator:
mainScreen
encodeBool:forKey:
newCommandQueue
attributes
blitCommandEncoder
objectAtIndexedSubscript:
lowercaseString
stringWithFormat:
addToRunLoop:forMode:
setLabel:
contents
stringWithCString:encoding:
mutableBytes
unlock
setStride:
elements
setBackgroundColor:
initWithString:
setOpaque:
exportToURL:uttype:error:
channelEncoding
errorWithDomain:code:userInfo:
isGammaEncoded:
decodeBytesForKey:returnedLength:
countByEnumeratingWithState:objects:count:
setOffset:
addObserver:selector:name:object:
processInfo
setCpuCacheMode:
defaultUICatalogForBundle:
addObject:
writeToURL:options:error:
numberWithInteger:
textureWithBufferAllocator:
arrayWithObjects:count:
newBufferWithLength:options:
count
lock
contentScaleFactor
decodeBoolForKey:
numberFromString:
stringByAppendingString:
stride
window
channelCount
setObject:atIndexedSubscript:
getBytes:length:
bytesPerRow
setContentsScale:
setStoreAction:
containsValueForKey:
defaultManager
localizedDescription
isEqualToString:
geometryType
environment
setArrayLength:
setFormat:
enumerateObjectsUsingBlock:
arrayLength
dataWithBytesNoCopy:length:freeWhenDone:
mtkView:drawableSizeWillChange:
setStorageMode:
mipmapLevels
bytesPerImage
screen
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
array
commit
setNumberStyle:
defaultCenter
newBufferWithBytesNoCopy:length:options:deallocator:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
drawInMTKView:
dataWithBytes:length:
enumerateByteRangesUsingBlock:
storageMode
absoluteString
layouts
_refreshRate
initWithContentsOfURL:options:error:
waitUntilCompleted
decodeObjectForKey:
commandBuffer
imageWithName:scaleFactor:displayGamut:layoutDirection:
newTextureWithDescriptor:
isCube
initWithMDLSubmesh:indexType:geometryType:
stencilAttachment
dataUsingEncoding:
mipmapLevelCount
bufferIndex
texelDataWithTopLeftOriginAtMipLevel:create:
format
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
decodeIntegerForKey:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
endEncoding
supportsTextureCubeArray
displayLinkWithTarget:selector:
currentRunLoop
mipLevelCount
setResolveTexture:
lastPathComponent
null
URLByAppendingPathExtension:
addCompletedHandler:
lastObject
renderPassDescriptor
imageExistsWithName:scaleFactor:
encodeObject:forKey:
decodeIntForKey:
minConstantBufferAlignmentBytes
nativeScale
initWithLength:
initWithCapacity:
invalidate
setValue:forKey:
init
initWithTarget:
draw
target
setTarget:
.cxx_destruct
_target
T@"MTKView",W,N,V_target
_applicationDidEnterBackground:
_applicationWillEnterForeground:
drawRect:
didMoveToWindow
initWithFrame:
initWithCoder:
encodeWithCoder:
dealloc
setContentScaleFactor:
layoutSubviews
setFrame:
setNilValueForKey:
layerClass
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
__initCommon
getEnvironmentSettings
exportToTargaAtLocation:width:height:size:bytes:
startTime
drawNumber
_dumpFramerate:withFilename:
_dumpFrameImageWithFilename:
setColorPixelFormat:atIndex:
setColorspace:
colorspace
setColorPixelFormat:
colorPixelFormat
setDrawableAttachmentIndex:
drawableAttachmentIndex
setDevice:
createDepthStencilTexture
depthStencilTexture
multisampleColorTextures
multisampleColorTexturesForceUpdate:
colorTextures
colorTexturesForceUpdate:
multisampleColorTexture
currentDrawable
nominalFramesPerSecond
setNominalFramesPerSecond:
setPreferredFramesPerSecond:
_calculateRefeshesPerSecond
_createDisplayLinkForScreen:
initWithFrame:device:
releaseDrawables
currentRenderPassDescriptor
_pixelSizeFromPointSize:
_updateToNativeScale
_canDrawContent
_controlsOwnScaleFactor
setEnableSetNeedsDisplay:
setDrawableSize:
preferredDevice
_resizeDrawable
_resizeMetalLayerDrawable
setPaused:
setSampleCount:
setDepthStencilPixelFormat:
setFramebufferOnly:
setDepthStencilAttachmentTextureUsage:
depthStencilAttachmentTextureUsage
depthStencilStorageMode
setDepthStencilStorageMode:
setMultisampleColorAttachmentTextureUsage:
multisampleColorAttachmentTextureUsage
framebufferOnly
setPresentsWithTransaction:
presentsWithTransaction
delegate
setDelegate:
device
depthStencilPixelFormat
sampleCount
clearColor
setClearColor:
clearDepth
setClearDepth:
clearStencil
setClearStencil:
preferredFramesPerSecond
enableSetNeedsDisplay
autoResizeDrawable
setAutoResizeDrawable:
drawableSize
preferredDrawableSize
isPaused
_metalLayer
_sizeDirty
_drawableScaleFactor
_pausedOnBackgrounding
_displayLink
_currentDrawable
_drawRectSubIMP
_subClassOverridesDrawRect
_deviceReset
_doesNotifyOnRecommendedSizeUpdate
_depthStencilTexture
_multisampleColorTexture
_framebufferOnly
_depthStencilTextureUsage
_multisampleColorTextureUsage
_depthStencilStorageMode
_drawableAttachmentIndex
_nominalFramesPerSecond
_maxValidAttachmentIndex
_colorPixelFormats
_multisampleColorTextures
_colorTextures
_offscreenSwapChain
_drawableIdx
_renderAttachmentDirtyState
_terminateAfterFrame
_terminateAfterSeconds
_measureAfterFrame
_measureAfterSeconds
_dumpFrameAtFrame
_dumpFrameAtSeconds
_dumpPath
_dumpFirstFrame
_drawOffscreen
_forceOrientation
_startTime
_frameNum
_enableSetNeedsDisplay
_autoResizeDrawable
_paused
_clearStencil
_delegate
_device
_depthStencilPixelFormat
_sampleCount
_clearDepth
_preferredFramesPerSecond
_drawableSize
_preferredDrawableSize
_clearColor
T@"<MTKViewDelegate>",W,N,V_delegate
T@"<MTLDevice>",&,N,V_device
T@"<CAMetalDrawable>",R,N,V_currentDrawable
TB,N
TQ,N
TQ,N,V_depthStencilPixelFormat
TQ,N,V_sampleCount
T{?=dddd},N,V_clearColor
Td,N,V_clearDepth
TI,N,V_clearStencil
T@"<MTLTexture>",R,N
T@"MTLRenderPassDescriptor",R,N
Tq,N,V_preferredFramesPerSecond
TB,N,V_enableSetNeedsDisplay
TB,N,V_autoResizeDrawable
T{CGSize=dd},N,V_drawableSize
T{CGSize=dd},R,N,V_preferredDrawableSize
T@"<MTLDevice>",R
paused
TB,N,GisPaused,V_paused
T^{CGColorSpace=},N
isPVR3File:
initWithData:options:error:
parseMetadataWithError:
getDataForArrayElement:face:level:depthPlane:bytesPerRow:bytesPerImage:
determineFormat:colorSpace:channelType:options:
determineBlockSize:blocksWide:blocksHigh:bytesPerBlock:fromFormat:width:andHeight:
_pvrCompressedFormat
_pixelFormatInfo
_metaDataSize
_imageData
initWithDevice:commandQueue:notifyQueue:
generateMipmapsForTexture:
copyBytes:toTexture:bitsPerPixel:pixelComponents:bytesPerRow:bytesPerImage:region:slice:level:flipVertically:
copyTexture:toTexture:
newTextureWithData:options:
finishWithCompletionHandler:
_commandBuffer
_blit
_lock
_notifyQueue
initWithMDLTexture:options:error:
determineFormatFromChannelEncoding:channelCount:error:
_texture
bytes
T^v,R,N
initWithContents:
_bytes
copyWithZone:
initWithLength:device:
initWithBytesNoCopy:length:deallocNotification:device:error:
buffer
_buffer
T@"<MTLBuffer>",R,N,V_buffer
newBufferWithLength:
newBufferWithBytesNoCopy:length:deallocNotification:error:
initWithDevice:
newTextureWithContentsOfURL:options:completionHandler:
newTexturesWithContentsOfURLs:options:completionHandler:
newTextureWithData:options:completionHandler:
newTextureWithCGImage:options:completionHandler:
newTextureWithMDLTexture:options:completionHandler:
newTextureWithContentsOfURL:options:error:
newTexturesWithContentsOfURLs:options:error:
newTextureWithData:options:error:
newTextureWithCGImage:options:error:
newTextureWithMDLTexture:options:error:
_determineFileType:
_loadData:options:completionHandler:
_loadData:options:uploader:label:completionHandler:
_loadCGImage:options:completionHandler:
_loadMDLTexture:options:completionHandler:
validateGenerateMipmapsForPixelFormat:options:error:
newUploaderForOptions:
_newAsyncTextureWithNames:scaleFactor:displayGamut:bundle:options:completionHandler:
newTexturesFromTXRTextures:options:error:
newTextureFromTXRTexture:options:error:
_newSyncTexturesFromTXRTextures:labels:options:error:
newTexturesWithNames:scaleFactor:bundle:options:completionHandler:
newTexturesWithNames:scaleFactor:displayGamut:bundle:options:completionHandler:
newTextureWithName:scaleFactor:bundle:options:completionHandler:
newTextureWithName:scaleFactor:displayGamut:bundle:options:completionHandler:
newTextureWithName:scaleFactor:bundle:options:error:
newTextureWithName:scaleFactor:displayGamut:bundle:options:error:
_loadQueue
_uploadQueue
_loadSemaphore
_blitQueue
_bufferAllocator
T@"<MTLDevice>",R,N
imageOrigin
setImageOrigin:
numArrayElements
setNumArrayElements:
numFaces
setNumFaces:
numMipmapLevels
setNumMipmapLevels:
width
setWidth:
height
setHeight:
depth
setDepth:
textureType
setTextureType:
pixelFormat
setPixelFormat:
_imageOrigin
_numArrayElements
_numFaces
_numMipmapLevels
_width
_height
_depth
_textureType
_pixelFormat
T@"NSString",&,N,V_imageOrigin
TQ,N,V_numArrayElements
TQ,N,V_numFaces
TQ,N,V_numMipmapLevels
TQ,N,V_width
TQ,N,V_height
TQ,N,V_depth
TQ,N,V_textureType
TQ,N,V_pixelFormat
initWithCGImage:options:error:
decodeCGImage:options:
decodeCGImageImageProvider:CGImageProvider:options:
decodeCGImageDataProvider:options:
determineCGImageBlockFormatWithComponentType:alphaInfo:andPixelSizeBytes:andColorSpace:isOptimized:options:
_blockSet
_cfData
_bytesPerRow
_expandRGBToRGBA
isKTXFile:
parseKeyValueBytes:length:error:
parseKey:value:error:
determineFormatFromType:format:internalFormat:baseInternalFormat:
determineFormatFromSizedFormat:
_packedRowStride
isPVRFile:
determineFormat:options:
_pvrFormat
_numSurfaces
present
presentAtTime:
texture
layer
T@"<MTLTexture>",R
T@"CAMetalLayer",R
initWithDevice:pixelFormat:size:drawableID:
presentAfterMinimumDuration:
setSize:
size
addPresentedHandler:
presentedTime
drawableID
_size
_textureDirty
_layer
_presentedTime
_drawableID
T@"CAMetalLayer",R,V_layer
Td,R,N,V_presentedTime
TQ,R,N,V_drawableID
T{CGSize=dd},N
newZone:
newZoneForBuffersWithSize:andType:
newBuffer:type:
newBufferWithData:type:
newBufferFromZone:length:type:
newBufferFromZone:data:type:
T@"<MTLDevice>",R,N,V_device
initWithMesh:submesh:device:error:
primitiveType
indexType
indexBuffer
indexCount
mesh
name
setName:
_primitiveType
_indexType
_indexBuffer
_indexCount
_mesh
_name
TQ,R,N,V_primitiveType
TQ,R,N,V_indexType
T@"MTKMeshBuffer",R,N,V_indexBuffer
TQ,R,N,V_indexCount
T@"MTKMesh",R,W,N,V_mesh
T@"NSString",C,N,V_name
_createMeshesFromObject:newMeshes:sourceMeshes:device:error:
newMeshesFromAsset:device:sourceMeshes:error:
initWithMesh:device:error:
vertexBuffers
vertexDescriptor
submeshes
vertexCount
_submeshes
_vertexBuffers
_vertexDescriptor
_vertexCount
T@"NSArray",R,N,V_vertexBuffers
T@"MDLVertexDescriptor",R,N,V_vertexDescriptor
T@"NSArray",R,N,V_submeshes
TQ,R,N,V_vertexCount
isASTCHDRData:textureType:error:
setBuffer:
T@"MTKMeshBuffer",V_buffer
capacity
allocator
TQ,R,N
T@"<MDLMeshBufferAllocator>",R,N
initWithCapacity:allocator:
newBufferWithLength:type:
destroyBuffer:
_buffers
_destroyInvoked
_allocator
_capacity
TQ,R,N,V_capacity
T@"<MDLMeshBufferAllocator>",R,N,V_allocator
fillData:offset:
length
type
T@"<MDLMeshBufferAllocator>",R,&,N
T@"<MDLMeshBufferZone>",R,&,N
T@"NSString",C,N
_initWithLength:offset:zone:type:
_initWithLength:allocator:type:
_initWithData:allocator:type:
_initWithBytes:length:offset:allocator:zone:type:
_newMap
offset
_zone
_length
_offset
_type
TQ,R,N,V_length
T@"MTKMeshBufferAllocator",R,N,V_allocator
T@"<MDLMeshBufferZone>",R,N,V_zone
TQ,R,N,V_offset
TQ,R,N,V_type
@24@0:8@16
v16@0:8
@16@0:8
v24@0:8@16
@"MTKView"
#16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16^{CGContext=}24
@32@0:8@16@24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
B56@0:8@16Q24Q32Q40^v48
d16@0:8
v32@0:8d16@24
v32@0:8Q16Q24
v24@0:8^{CGColorSpace=}16
^{CGColorSpace=}16@0:8
v24@0:8Q16
r^@16@0:8
r^@20@0:8B16
q16@0:8
v24@0:8q16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
v20@0:8B16
v32@0:8{CGSize=dd}16
v24@0:8d16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{?=dddd}16@0:8
v48@0:8{?=dddd}16
I16@0:8
v20@0:8I16
{CGSize=dd}16@0:8
@"CAMetalLayer"
{CGSize="width"d"height"d}
@"CADisplayLink"
@"<CAMetalDrawable>"
@"<MTLTexture>"
[8Q]
[8@"<MTLTexture>"]
[3@"MTKOffscreenDrawable"]
@"NSString"
@"<MTKViewDelegate>"
@"<MTLDevice>"
{?="red"d"green"d"blue"d"alpha"d}
@40@0:8@16@24^@32
B24@0:8^@16
@64@0:8Q16Q24Q32Q40^Q48^Q56
Q40@0:8Q16I24I28@32
v68@0:8^Q16^Q24^Q32^Q40I48Q52Q60
{MTLPixelFormatInfo="name"*"flags"I"castClass"Q"type"(?="normal"{MTLNormalPixelFormatInfo="pixelBytes"Q"componentCount"C"alignment"C"pixelBytesRender"Q"pixelBytesRenderMSAA"Q}"compressed"{MTLCompressedPixelFormatInfo="blockBytes"Q"blockWidth"Q"blockHeight"Q"blockDepth"Q})}
@"NSData"
@40@0:8@16@24@32
v132@0:8r^v16@24Q32Q40Q48Q56{?={?=QQQ}{?=QQQ}}64Q112Q120B128
v32@0:8@16@24
v24@0:8@?16
@"<MTLCommandBuffer>"
@"<MTLBlitCommandEncoder>"
@"NSLock"
@"NSObject<OS_dispatch_queue>"
B40@0:8q16Q24^@32
@"MDLTexture"
^v16@0:8
@24@0:8^v16
@24@0:8^{_NSZone=}16
@"<TXRBufferMap>"16@0:8
@32@0:8Q16@24
@56@0:8^v16Q24@?32@40^@48
@"<MTLBuffer>"
@24@0:8Q16
@48@0:8^v16Q24@?32^@40
@"<TXRBuffer>"24@0:8Q16
@"<TXRBuffer>"48@0:8^v16Q24@?<v@?^vQ>32^@40
v40@0:8@16@24@?32
v40@0:8^{CGImage=}16@24@?32
@40@0:8^{CGImage=}16@24^@32
Q24@0:8@16
v56@0:8@16@24@32@40@?48
B40@0:8Q16@24^@32
v64@0:8@16d24q32@40@48@?56
@48@0:8@16@24@32^@40
v56@0:8@16d24@32@40@?48
@56@0:8@16d24@32@40^@48
@64@0:8@16d24q32@40@48^@56
@"NSObject<OS_dispatch_semaphore>"
@"<MTLCommandQueue>"
@"<TXRBufferAllocator>"
@"<MTLDeviceSPI>"
B32@0:8^{CGImage=}16@24
B40@0:8^{CGImage=}16^{CGImageProvider=}24@32
B52@0:8i16I20Q24^{CGColorSpace=}32B40@44
^{CGImageBlockSet=}
^{__CFData=}
B40@0:8r*16Q24^@32
B40@0:8@16@24^@32
Q32@0:8I16I20I24I28
Q24@0:8Q16
B28@0:8I16@20
@"<MTLTexture>"16@0:8
@"CAMetalLayer"16@0:8
@56@0:8@16Q24{CGSize=dd}32Q48
@32@0:8Q16Q24
@32@0:8@16Q24
@40@0:8@16Q24Q32
@40@0:8@16@24Q32
@"<MDLMeshBufferZone>"24@0:8Q16
@"<MDLMeshBufferZone>"32@0:8@"NSArray"16@"NSArray"24
@"<MDLMeshBuffer>"32@0:8Q16Q24
@"<MDLMeshBuffer>"32@0:8@"NSData"16Q24
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16Q24Q32
@"<MDLMeshBuffer>"40@0:8@"<MDLMeshBufferZone>"16@"NSData"24Q32
@"MTKMeshBuffer"
@"MTKMesh"
v56@0:8@16@24@32@40^@48
@48@0:8@16@24^@32^@40
@"NSMutableArray"
@"MDLVertexDescriptor"
q40@0:8@16Q24^@32
@"<MDLMeshBufferAllocator>"16@0:8
@"NSMutableOrderedSet"
@"MTKMeshBufferAllocator"
v32@0:8@16Q24
v32@0:8@"NSData"16Q24
@"MDLMeshBufferMap"16@0:8
@"<MDLMeshBufferZone>"16@0:8
v24@0:8@"NSString"16
@48@0:8Q16Q24@32Q40
@40@0:8Q16@24Q32
@64@0:8r^v16Q24Q32@40@48Q56
@"MTKMeshBufferZone"
KTX 11
