CKOffscreenWindow
CKMessagesNotificationViewController
UNNotificationContentExtension
NSObject
CKNotificationChatControllerDelegate
CKCoreChatControllerDelegate
CKNotificationAudioController
CKAudioControllerDelegate
CKNotificationAudioViewController
_isWindowServerHostingManaged
_usesWindowServerHitTesting
sharedInstance
initialize
init
startTimingForKey:
addListenerID:capabilities:
blockUntilConnected
_setBlocksConnectionAtResume:
sharedBehaviors
setHUDStyle:
stopTimingForKey:
initWithNibName:bundle:
connectIfNeeded
defaultCenter
_displayNameUpdatedNotification:
addObserver:selector:name:object:
_forceSuspended
_forceResumed
isInternalInstall
_keyboardDidShow:
setLaunchTokeyboardBringUpTC:
removeObserver:
dealloc
object
initWithChat:
updateNotificationTitleFromConversation:
chatController
conversation
hasReplyEnabled
didReceiveMemoryWarning
_shouldDisplayTextEntry
viewDidLoad
request
content
userInfo
objectForKeyedSubscript:
loadMessage:
collectionView
__ck_contentSize
view
frame
setPreferredContentSize:
playOrPauseAudioMessage
displayName
setTitle:
name
launchTokeyboardBringUpTC
removeObserver:name:object:
setNotification:
setupAudioAccessoryViewForNotification:
supportsContentExtensions
threadIdentifier
loadChatFromDaemonWithChatIdentifier:
setNumberOfMessagesToKeepLoaded:
clear
isScreenLocked
setLoadedMessageCount:loadImmediately:
identifier
loadAllUnreadMessagesUpToMessageGUID:
setLoadedMessageCount:
initWithConversation:
setDelegate:
beginHoldingScrollGeometryUpdatesForKey:
setFrame:
extensionContext
setUrlOpenContext:
addChildViewController:
addSubview:
didMoveToParentViewController:
setChatController:
grabFocus
viewWillAppear:
setActive:
viewDidAppear:
updateContentExtensionSize
sharedTimer
setShouldStopWhenBackgrounded:
entryView
setHidden:
becomeFirstResponder
viewWillDisappear:
animateWithDuration:animations:
viewDidDisappear:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
didReceiveNotification:
didReceiveNotificationResponse:completionHandler:
mediaPlay
mediaPause
mediaPlayPauseButtonType
mediaPlayPauseButtonFrame
mediaPlayPauseButtonTintColor
chatController:willSendComposition:inConversation:
chatController:didSendCompositionInConversation:
chatController:didReportSpamForConversation:
notificationChatControllerSizeUpdated:
canBecomeFirstResponder
_canShowWhileLocked
.cxx_destruct
audioController
setAudioController:
notification
offscreenWindow
setOffscreenWindow:
_chatController
_audioController
_notification
_offscreenWindow
_launchTokeyboardBringUpTC
initWithMediaObjects:
play
__ck_mediaObjects
count
initWithMediaObjects:completionBlock:
loadMessageWithGUID:completionBlock:
playMessageID:completionBlock:
audioController:mediaObjectDidFinishPlaying:
audioController:mediaObjectProgressDidChange:currentTime:duration:
audioControllerDidPause:
audioControllerDidStop:
audioControllerPlayingDidChange:
audioController:didPrepareMediaObjectToPlay:successfully:
completionBlock
setCompletionBlock:
_completionBlock
mediaObjects
_audioMessageToggled
isPlaying
pause
delegate
notificationAudioViewControllerDidStartPlaying
setShouldUseSpeaker:
buttonTapped:
_delegate
B16@0:8
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@?24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v24@0:8@"UNNotification"16
v32@0:8@"UNNotificationResponse"16@?<v@?Q>24
@"UIColor"16@0:8
v40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@"CKCoreChatController"16@"CKComposition"24@"CKConversation"32
v32@0:8@"CKCoreChatController"16@"CKConversation"24
v24@0:8@"CKNotificationChatController"16
@32@0:8@16@24
v20@0:8B16
@"CKNotificationChatController"
@"CKNotificationAudioViewController"
@"UNNotification"
@"CKOffscreenWindow"
@"IMTimingCollection"
v48@0:8@16@24d32d40
v36@0:8@16@24B32
v32@0:8@"CKAudioController"16@"CKMediaObject"24
v48@0:8@"CKAudioController"16@"CKMediaObject"24d32d40
v24@0:8@"CKAudioController"16
v36@0:8@"CKAudioController"16@"CKMediaObject"24B32
@32@0:8@16@?24
@?16@0:8
v24@0:8@?16
@"CKAudioController"
@"NSObject<CKNotificationAudioViewControllerDelegate>"
v8@?0
longlook-imagent-connection
MessagesNotificationExtension
CKMessagesNotificationViewController
Initialized IMAgent connection from long look notification: %@
longlook-launch-to-keyboard
NotificationViewController
Creating audio view controller
CKBBContextKeyMessageGUID
Setup audio view controller for message: %@
Media play
Media pause
From launch to keyboard bring up %@
Creating chat controller for identifier: %@
RichNotification
MessagesNotificationViewController viewWillAppear
MessagesNotificationViewController didAppear
longlook-becomeFirstResponder
Called becomeFirstResponder in long look notification %@
MessagesNotificationViewController willDisappear
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
mediaPlayPauseButtonType
TQ,R,N
mediaPlayPauseButtonFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
mediaPlayPauseButtonTintColor
T@"UIColor",R,C,N
chatController
T@"CKNotificationChatController",&,N,V_chatController
audioController
T@"CKNotificationAudioViewController",&,N,V_audioController
notification
T@"UNNotification",&,N,V_notification
offscreenWindow
T@"CKOffscreenWindow",&,N,V_offscreenWindow
launchTokeyboardBringUpTC
T@"IMTimingCollection",&,N,V_launchTokeyboardBringUpTC
Failed to load message %@
Message %@ didn't contain any media objects
v24@?0@"IMMessage"8@"NSArray"16
T@"CKAudioController",&,N,V_audioController
completionBlock
T@?,C,N,V_completionBlock
delegate
T@"NSObject<CKNotificationAudioViewControllerDelegate>",W,N,V_delegate
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.IdentityLookup.MessageFilter</key>
<string></string>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.backboardd.proximityDetection</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-amr-encode</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.contacts</key>
<true/>
<key>com.apple.private.coremedia.extensions.audiorecording.allow</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.dmd.emergency-mode</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.dprivacyd.allow</key>
<true/>
<key>com.apple.private.ids.idquery-cache</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.biz</string>
<string>com.apple.madrid</string>
</array>
<key>com.apple.private.ids.phone-number-authentication</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.storage.Messages</key>
<true/>
<key>com.apple.private.security.storage.Photos</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCamera</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/Library/Audio/Tunings/Generic/AU/</string>
<string>/Library/Audio/Tunings/Generic/AU/aufx-epvd-appl.plist</string>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/SMS/</string>
<string>/Library/Caches/com.apple.MobileSMS/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.dmd.emergency-mode</string>
<string>com.apple.dmd.policy</string>
<string>com.apple.ScreenTimeAgent</string>
<string>com.apple.ScreenTimeAgent.private</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.suggestd.contacts</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.ScreenTimeAgent</string>
<string>com.apple.springboard</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.MobileSMS</string>
<string>com.apple.mobilephone</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.dprivacyd</string>
<string>com.apple.siri.vocabularyupdates</string>
</array>
<key>com.apple.usernotifications.legacy-extension</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
