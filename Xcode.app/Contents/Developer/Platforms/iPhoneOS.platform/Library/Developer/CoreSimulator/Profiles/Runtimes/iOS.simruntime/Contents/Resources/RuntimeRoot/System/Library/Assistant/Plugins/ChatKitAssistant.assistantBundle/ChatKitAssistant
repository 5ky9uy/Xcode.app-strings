_search
_validateUpdate
T@"NSMutableArray",&,N,V_domainObjects
address
T@"NSString",C,N,V_finalAnchor
containsObject:
TQ,R
UUID
iMessageService
_appInfoForMessage:
initWithString:
_ck_chatForHandles:createIfNecessary:
message
_createSMSObject
release
_finalAnchor
service
_getPersonAttributeFromHandle:
setDisplayText:
_getSenderFromMessage:
setGroupNameId:
_oldSearch
setPostAnchors:
_postAnchors
.cxx_destruct
_validateCancel
T#,R
account
T@"NSMutableArray",&,N,V_postAnchors
bestSenderIdentityForHandleIDs:
T@"NSString",R,C
currentCalendar
URLWithString:
existingChatWithChatIdentifier:
UUIDString
initWithReason:
_cancelSMS
isProxy
_connectToDaemonIfNeeded
numberWithBool:
_domainObjects
senders
_getAddressesFromRecipients:
setDateLastMessageReadInThread:
_getRecipientsFromMessage:
setFinalAnchor:
_messageTypeForMessage:
setMessageType:
_perform
subject
_smsForIMSPIMessage:
_updateSMS
_validate
_validateRetrieve
_validateSMS:
absoluteString
accountUUID
addFields
addListenerID:capabilities:
addListenerID:forService:
addObject:
addObjectsFromArray:
allowedToShowConversationWithHandleIDs:sync:context:
appendFormat:
appendString:
array
arrayWithObject:
autorelease
availabilityForListenerID:forService:
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithAnchor:validity:forKey:beginInfo:
beginSyncWithInfo:configuration:
birthday
blockUntilConnected
boolValue
bundleId
canonicalizeNumber:
chatGuids
class
clientShouldResolvePhonesAndEmails
compare:
conformsToProtocol:
copy
count
countByEnumeratingWithState:objects:count:
currentSyncSnapshot
data
date
dateFromComponents:
debugDescription
defaultCenter
description
dictionary
dictionaryWithObjects:forKeys:count:
displayAppName
displayName
domainObjects
effect
emailAddress
emailAddresses
emails
emailsForCNContact:
errorWithDescription:
errorWithDomain:code:userInfo:
fetchCNContactForHandleID:withKeys:
fetchCNContactForHandleWithID:
fetchCNContactWithIdentifier:
finalAnchor
firstNameForCNContact:
firstObject
fullName
fullNameForCNContact:
getAddressesFromPeople:
getChangeAfterAnchor:changeInfo:
groupNameId
guid
handle
hasAlias:onAccountForService:
hasGroupName
hash
identifier
identifierForChatIdentifier:
identifiers
idsIdentifier
indexOfObject:
initWithCapacity:
initWithChat:
initWithDictionary:
initWithErrorCode:
initWithText:subject:
initialize
internalGUID
isAudioMessage
isContactLimitsFeatureEnabled
isEqual:
isEqualToString:
isKindOfClass:
isMainThread
isMemberOfClass:
isOutgoing
isRead
join
label
lastAddressedHandleID
lastAddressedSIMID
lastNameForCNContact:
lastReadDate
length
messageID
messageType
messageWithComposition:
middleName
msgRecipients
namePrefix
nameSuffix
nickNameForCNContact:
number
numberWithUnsignedInteger:
object
objectAtIndex:
objectForKey:
outgoing
peerInfoForCurrentCommand
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithCompletion:
performWithCompletion:serviceHelper:
performWithCompletion:serviceHelper:executionInfo:
personFromRawAddress:
phoneNumbers
phoneNumbersForCNContact:
phones
postAnchors
postNotificationName:object:userInfo:
recipients
referencedMessage
refreshServiceForSending
removeFields
resetWithValidity:
respondsToSelector:
retain
retainCount
self
sendMessage:onService:newComposition:
sendSMS:toAddresses:groupNameID:idsIdentifier:
sender
setAppInfo:
setBirthday:
setBundleId:
setChatIdentifier:
setData:
setDateSent:
setDisplayAppName:
setDomainObjects:
setEffect:
setEmailAddress:
setEmails:
setFields
setFirstName:
setFullName:
setGroupName:
setHasGroupName:
setIdentifier:
setInternalGUID:
setIsAudioMessage:
setLabel:
setLastAddressedHandleID:
setLastAddressedSIMID:
setLastName:
setMiddleName:
setMsgRecipients:
setMsgSender:
setNickName:
setNotificationIDSTokenURI:
setNumber:
setObject:
setObject:forKey:
setObjects:
setPhones:
setPostAnchor:
setPrefix:
setRecipients:
setReferencedMessage:
setResults:
setSmsGroups:
setSourceApplicationID:
setSubject:
setSuffix:
sharedInstance
sharedRegistry
shouldForceToSMS:
smsGroup
smsGroupName
smsService
start
string
stringByAppendingString:
stringGUID
stringValue
stringWithFormat:
superclass
syncDidEnd
syncSnapshotForKey:
syncVerificationKeyForKey:
timeIntervalSinceReferenceDate
unread
updateShouldForceToSMS:
updateUsingSet:add:remove:
urlFromString
value
zone
x-apple-sms:guid=%lld
CKAssistant
Message has %@ recipients.
AssistantSearch - Looking at message with guid %@ [date %@, self.start %@, self.end %@] [self.outgoing %@, ougoing %@], [self.unread %@, unread %@]
AssistantSearch - Found referenced message with guid %@
AssistantSearch - Found message with guid %@
AssistantSearch - SPIQuery found %@ messages but filtered that to %@ in filterBlock
v16@?0@"NSArray"8
Searching for imessages with groupID %@
Searching for last 10 messages with IDs %@ and services %@
No senders or groups specified, searching for last 10 unread messages
CKAssistantSearch performWithCompletion
CKAssistantSearch returning %@
No identifiers to retrieve
SMSRetrieve performWithCompletion
x-apple-sms-group://
beginSyncWithAnchor: %@ validity: %@ forKey: %@
com.apple.chatkit.groups
%ld:
%@-%@
getChangeAfterAnchor: %@
Syncing index: %lu from %lu available objects.
Expected identifier to be set
Expected SASmsSms for identifier
SMSCancel performWithCompletion
iMessage
Looking at groups with name %@ and found groups names %@
Looking at groups with name %@ but there were no named chats at all
SMS Group search returning result %@
CKAssistantSMSGroupSearch has nil or empty group name
SMSGroupSearch performWithCompletion
Performing fast search path with recipients: %@
Found record for internal GUID %@: %@
Found number %@ for label %@
Found email %@ for label %@
v8@?0
Setting SAPerson as object on attribute: %@
recipient search result %@
blocking handles due to Screen Time policy, error code: %ld
Performing old search path with recipients: %@
Returning recipient old search result %@
CKAssistantSMSRecipientSearch has nil or empty recipients.
SMSRecipientSearch performWithCompletion
SMSRecipientSearch has nil or empty recipients
Could not create SMS object to update from current draft
Invalid sms identifier
Expected SASmsSms for setFields
Expected SASmsSms for addFields
Expected SASmsSms for removeFields
SMSUpdate performWithCompletion
CKAssistantSentMessageNotification
CKAssistantSentMessageNotificationMessageKey
SiriSMS
CKAssistantSMSSendErrorDomain
Trying to send sms to addresses %@, groupNameID %@, idsIdentifier %@
Found chat %@ to send message to, joining it.
Setting LastAddressedSIMID to: %@, LastAddressedHandleID: %@
Forcing to update shouldForceToSMS. iMessage is not enabled for SIM phone number = %@ or phone number is nil. 
We have existing conversation with LastAddressedSIMID = %@, LastAddressedHandleID = %@
Setting idsIdentifier provided %@ on immessageitem
com.apple.siri
Sending message with guid %@, message %@, serviceToUse %@
Siri made no message: %@, chat: %@, conversation: %@
No handles or group name provided failing to send **should have failed earlier, file a radar**
Checking if we should force to SMS for phone number: %@
Did not get an SMS to send.
No recipient specified.
Unable to send message, there is nothing to send.
SMSSend performWithCompletion at time %f
Siri failed to validate sms with error %@ at time %f, returning early
Trying to get addresses from messagesRecipients: %@
Data %@ for recipient %@ does not appear to be address, creating CKPerson person ourselves %@
Found business recipient: %@
Found %@ valid addresses for message recipients and %@ people to fetch address from
Sending message to business: %@
Siri got no handles: %@ and no group name %@, returning unable to convert recipients to IMHandles error
Unable to convert recipients to IMHandles.
Siri passed in sending idsIdentifier %@ from peerInfo %@
Updated draft with message to send and calling completion with result dict %@
Connecting to Dameon if needed
kSMSCreateListener
sms:draft
x-apple-sms-draft:guid=%@
SMSCreate performWithCompletion
SMSCreate returning error imMessage not available for non-SMS capable device
SMSCreate returning %@
CKAssistantSearch
AFServiceCommand
NSObject
CKAssistantSMSRetrieve
CKAssistantSyncHandler
AFSyncHandler
CKAssistantSMSCancel
CKAssistantSMSGroupSearch
CKAssistantSMSRecipientSearch
CKAssistantSMSUpdate
CKAssistantSMSSend
CKAssistantSMSCreate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@?16@24
v40@0:8@?16@24@32
@24@0:8@16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
v40@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24@"AFCommandExecutionInfo"32
@24@0:8@"NSDictionary"16
v48@0:8@16@24@32@40
v56@0:8@16@24q32@40@48
v64@0:8@16@24q32@40@48@56
v32@0:8@16@24
v16@0:8
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
v24@0:8@16
@"NSString"
@"NSMutableArray"
 #&)
!$'*//-
x-apple-sms:guid=%lld
CKAssistant
Message has %@ recipients.
AssistantSearch - Looking at message with guid %@ [date %@, self.start %@, self.end %@] [self.outgoing %@, ougoing %@], [self.unread %@, unread %@]
AssistantSearch - Found referenced message with guid %@
AssistantSearch - Found message with guid %@
AssistantSearch - SPIQuery found %@ messages but filtered that to %@ in filterBlock
v16@?0@"NSArray"8
Searching for imessages with groupID %@
Searching for last 10 messages with IDs %@ and services %@
No senders or groups specified, searching for last 10 unread messages
CKAssistantSearch performWithCompletion
CKAssistantSearch returning %@
No identifiers to retrieve
SMSRetrieve performWithCompletion
x-apple-sms-group://
beginSyncWithAnchor: %@ validity: %@ forKey: %@
com.apple.chatkit.groups
%ld:
%@-%@
getChangeAfterAnchor: %@
Syncing index: %lu from %lu available objects.
Expected identifier to be set
Expected SASmsSms for identifier
SMSCancel performWithCompletion
iMessage
Looking at groups with name %@ and found groups names %@
Looking at groups with name %@ but there were no named chats at all
SMS Group search returning result %@
CKAssistantSMSGroupSearch has nil or empty group name
SMSGroupSearch performWithCompletion
Performing fast search path with recipients: %@
Found record for internal GUID %@: %@
Found number %@ for label %@
Found email %@ for label %@
v8@?0
Setting SAPerson as object on attribute: %@
recipient search result %@
blocking handles due to Screen Time policy, error code: %ld
Performing old search path with recipients: %@
Returning recipient old search result %@
CKAssistantSMSRecipientSearch has nil or empty recipients.
SMSRecipientSearch performWithCompletion
SMSRecipientSearch has nil or empty recipients
Could not create SMS object to update from current draft
Invalid sms identifier
Expected SASmsSms for setFields
Expected SASmsSms for addFields
Expected SASmsSms for removeFields
SMSUpdate performWithCompletion
CKAssistantSentMessageNotification
CKAssistantSentMessageNotificationMessageKey
SiriSMS
CKAssistantSMSSendErrorDomain
Trying to send sms to addresses %@, groupNameID %@, idsIdentifier %@
Found chat %@ to send message to, joining it.
Setting LastAddressedSIMID to: %@, LastAddressedHandleID: %@
Forcing to update shouldForceToSMS. iMessage is not enabled for SIM phone number = %@ or phone number is nil. 
We have existing conversation with LastAddressedSIMID = %@, LastAddressedHandleID = %@
Setting idsIdentifier provided %@ on immessageitem
com.apple.siri
Sending message with guid %@, message %@, serviceToUse %@
Siri made no message: %@, chat: %@, conversation: %@
No handles or group name provided failing to send **should have failed earlier, file a radar**
Checking if we should force to SMS for phone number: %@
Did not get an SMS to send.
No recipient specified.
Unable to send message, there is nothing to send.
SMSSend performWithCompletion at time %f
Siri failed to validate sms with error %@ at time %f, returning early
Trying to get addresses from messagesRecipients: %@
Data %@ for recipient %@ does not appear to be address, creating CKPerson person ourselves %@
Found business recipient: %@
Found %@ valid addresses for message recipients and %@ people to fetch address from
Sending message to business: %@
Siri got no handles: %@ and no group name %@, returning unable to convert recipients to IMHandles error
Unable to convert recipients to IMHandles.
Siri passed in sending idsIdentifier %@ from peerInfo %@
Updated draft with message to send and calling completion with result dict %@
Connecting to Dameon if needed
kSMSCreateListener
sms:draft
x-apple-sms-draft:guid=%@
SMSCreate performWithCompletion
SMSCreate returning error imMessage not available for non-SMS capable device
SMSCreate returning %@
CKAssistantSearch
AFServiceCommand
NSObject
CKAssistantSMSRetrieve
CKAssistantSyncHandler
AFSyncHandler
CKAssistantSMSCancel
CKAssistantSMSGroupSearch
CKAssistantSMSRecipientSearch
CKAssistantSMSUpdate
CKAssistantSMSSend
CKAssistantSMSCreate
_search
_validateUpdate
T@"NSMutableArray",&,N,V_domainObjects
address
T@"NSString",C,N,V_finalAnchor
containsObject:
TQ,R
UUID
iMessageService
_appInfoForMessage:
initWithString:
_ck_chatForHandles:createIfNecessary:
message
_createSMSObject
release
_finalAnchor
service
_getPersonAttributeFromHandle:
setDisplayText:
_getSenderFromMessage:
setGroupNameId:
_oldSearch
setPostAnchors:
_postAnchors
.cxx_destruct
_validateCancel
T#,R
account
T@"NSMutableArray",&,N,V_postAnchors
bestSenderIdentityForHandleIDs:
T@"NSString",R,C
currentCalendar
URLWithString:
existingChatWithChatIdentifier:
UUIDString
initWithReason:
_cancelSMS
isProxy
_connectToDaemonIfNeeded
numberWithBool:
_domainObjects
senders
_getAddressesFromRecipients:
setDateLastMessageReadInThread:
_getRecipientsFromMessage:
setFinalAnchor:
_messageTypeForMessage:
setMessageType:
_perform
subject
_smsForIMSPIMessage:
_updateSMS
_validate
_validateRetrieve
_validateSMS:
absoluteString
accountUUID
addFields
addListenerID:capabilities:
addListenerID:forService:
addObject:
addObjectsFromArray:
allowedToShowConversationWithHandleIDs:sync:context:
appendFormat:
appendString:
array
arrayWithObject:
autorelease
availabilityForListenerID:forService:
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithAnchor:validity:forKey:beginInfo:
beginSyncWithInfo:configuration:
birthday
blockUntilConnected
boolValue
bundleId
canonicalizeNumber:
chatGuids
class
clientShouldResolvePhonesAndEmails
compare:
conformsToProtocol:
copy
count
countByEnumeratingWithState:objects:count:
currentSyncSnapshot
data
date
dateFromComponents:
debugDescription
defaultCenter
description
dictionary
dictionaryWithObjects:forKeys:count:
displayAppName
displayName
domainObjects
effect
emailAddress
emailAddresses
emails
emailsForCNContact:
errorWithDescription:
errorWithDomain:code:userInfo:
fetchCNContactForHandleID:withKeys:
fetchCNContactForHandleWithID:
fetchCNContactWithIdentifier:
finalAnchor
firstNameForCNContact:
firstObject
fullName
fullNameForCNContact:
getAddressesFromPeople:
getChangeAfterAnchor:changeInfo:
groupNameId
guid
handle
hasAlias:onAccountForService:
hasGroupName
hash
identifier
identifierForChatIdentifier:
identifiers
idsIdentifier
indexOfObject:
initWithCapacity:
initWithChat:
initWithDictionary:
initWithErrorCode:
initWithText:subject:
initialize
internalGUID
isAudioMessage
isContactLimitsFeatureEnabled
isEqual:
isEqualToString:
isKindOfClass:
isMainThread
isMemberOfClass:
isOutgoing
isRead
join
label
lastAddressedHandleID
lastAddressedSIMID
lastNameForCNContact:
lastReadDate
length
messageID
messageType
messageWithComposition:
middleName
msgRecipients
namePrefix
nameSuffix
nickNameForCNContact:
number
numberWithUnsignedInteger:
object
objectAtIndex:
objectForKey:
outgoing
peerInfoForCurrentCommand
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithCompletion:
performWithCompletion:serviceHelper:
performWithCompletion:serviceHelper:executionInfo:
personFromRawAddress:
phoneNumbers
phoneNumbersForCNContact:
phones
postAnchors
postNotificationName:object:userInfo:
recipients
referencedMessage
refreshServiceForSending
removeFields
resetWithValidity:
respondsToSelector:
retain
retainCount
self
sendMessage:onService:newComposition:
sendSMS:toAddresses:groupNameID:idsIdentifier:
sender
setAppInfo:
setBirthday:
setBundleId:
setChatIdentifier:
setData:
setDateSent:
setDisplayAppName:
setDomainObjects:
setEffect:
setEmailAddress:
setEmails:
setFields
setFirstName:
setFullName:
setGroupName:
setHasGroupName:
setIdentifier:
setInternalGUID:
setIsAudioMessage:
setLabel:
setLastAddressedHandleID:
setLastAddressedSIMID:
setLastName:
setMiddleName:
setMsgRecipients:
setMsgSender:
setNickName:
setNotificationIDSTokenURI:
setNumber:
setObject:
setObject:forKey:
setObjects:
setPhones:
setPostAnchor:
setPrefix:
setRecipients:
setReferencedMessage:
setResults:
setSmsGroups:
setSourceApplicationID:
setSubject:
setSuffix:
sharedInstance
sharedRegistry
shouldForceToSMS:
smsGroup
smsGroupName
smsService
start
string
stringByAppendingString:
stringGUID
stringValue
stringWithFormat:
superclass
syncDidEnd
syncSnapshotForKey:
syncVerificationKeyForKey:
timeIntervalSinceReferenceDate
unread
updateShouldForceToSMS:
updateUsingSet:add:remove:
urlFromString
value
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@?16@24
v40@0:8@?16@24@32
@24@0:8@16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
v40@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24@"AFCommandExecutionInfo"32
@24@0:8@"NSDictionary"16
v48@0:8@16@24@32@40
v56@0:8@16@24q32@40@48
v64@0:8@16@24q32@40@48@56
v32@0:8@16@24
v16@0:8
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
v24@0:8@16
@"NSString"
@"NSMutableArray"
