<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.SensorKit.effective-bundle</key>
<true/>
<key>com.apple.private.SensorKit.prerequisite.readonly</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.tcc.manager.access.delete</key>
<array>
<string>kTCCServiceSensorKitBedSensing</string>
<string>kTCCServiceSensorKitFacialMetrics</string>
<string>kTCCServiceSensorKitSpeechMetrics</string>
<string>kTCCServiceSensorKitMotion</string>
<string>kTCCServiceSensorKitWatchMotion</string>
<string>kTCCServiceSensorKitLocationMetrics</string>
<string>kTCCServiceSensorKitAmbientLightSensor</string>
<string>kTCCServiceSensorKitWatchAmbientLightSensor</string>
<string>kTCCServiceSensorKitWatchHeartRate</string>
<string>kTCCServiceSensorKitWatchOnWristState</string>
<string>kTCCServiceSensorKitKeyboardMetrics</string>
<string>kTCCServiceSensorKitWatchPedometer</string>
<string>kTCCServiceSensorKitPedometer</string>
<string>kTCCServiceSensorKitWatchFallStats</string>
<string>kTCCServiceSensorKitWatchForegroundAppCategory</string>
<string>kTCCServiceSensorKitForegroundAppCategory</string>
<string>kTCCServiceSensorKitWatchSpeechMetrics</string>
<string>kTCCServiceSensorKitSpeechMetrics</string>
<string>kTCCServiceSensorKitMotionHeartRate</string>
<string>kTCCServiceSensorKitOdometer</string>
<string>kTCCServiceSensorKitElevation</string>
<string>kTCCServiceSensorKitStrideCalibration</string>
<string>kTCCServiceSensorKitDeviceUsage</string>
<string>kTCCServiceSensorKitPhoneUsage</string>
<string>kTCCServiceSensorKitMessageUsage</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceAll</string>
</array>
<key>com.apple.private.tcc.manager.service-override.modify</key>
<array>
<string>kTCCServiceSensorKitBedSensing</string>
<string>kTCCServiceSensorKitFacialMetrics</string>
<string>kTCCServiceSensorKitSpeechMetrics</string>
<string>kTCCServiceSensorKitMotion</string>
<string>kTCCServiceSensorKitWatchMotion</string>
<string>kTCCServiceSensorKitLocationMetrics</string>
<string>kTCCServiceSensorKitAmbientLightSensor</string>
<string>kTCCServiceSensorKitWatchAmbientLightSensor</string>
<string>kTCCServiceSensorKitWatchHeartRate</string>
<string>kTCCServiceSensorKitWatchOnWristState</string>
<string>kTCCServiceSensorKitKeyboardMetrics</string>
<string>kTCCServiceSensorKitWatchPedometer</string>
<string>kTCCServiceSensorKitPedometer</string>
<string>kTCCServiceSensorKitWatchFallStats</string>
<string>kTCCServiceSensorKitWatchForegroundAppCategory</string>
<string>kTCCServiceSensorKitForegroundAppCategory</string>
<string>kTCCServiceSensorKitWatchSpeechMetrics</string>
<string>kTCCServiceSensorKitSpeechMetrics</string>
<string>kTCCServiceSensorKitMotionHeartRate</string>
<string>kTCCServiceSensorKitOdometer</string>
<string>kTCCServiceSensorKitElevation</string>
<string>kTCCServiceSensorKitStrideCalibration</string>
<string>kTCCServiceSensorKitDeviceUsage</string>
<string>kTCCServiceSensorKitPhoneUsage</string>
<string>kTCCServiceSensorKitMessageUsage</string>
</array>
</dict>
</plist>
com.apple.SensorKitAppHelper.main
com.apple.SensorKit
AppHelper
reset
read
com.apple.SensorKitAppHelper.allow
initWithQueue:
resume
serviceListener
_setQueue:
allSensorsStore
initWithQueue:listener:authStore:
init
setDelegate:
setListener:
dealloc
listener
serviceName
resetAuthorizationsForBundleId:reply:
authorizationRequestStatusForBundleId:sensors:reply:
authorizationSnapshotWithReply:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
currentConnection
validateConnection:accessCategory:
errorWithCode:
authStore
resetAllAuthorizationsForBundleId:
readerAuthorizationValues
objectForKeyedSubscript:
allKeys
setWithArray:
initWithSet:
minusSet:
count
valueForEntitlement:
validateEntitlment:accessCategory:
containsObject:
dictionary
readerAuthorizationBundleIdValues
countByEnumeratingWithState:objects:count:
initWithDictionary:
sensorDescriptionForSensor:
legacyName
setObject:forKeyedSubscript:
dictionaryWithDictionary:
initialize
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
authorizationStore:didDetermineInitialAuthorizationValues:
authorizationStore:didUpdateAuthorizationsForBundleId:sensors:
listener:shouldAcceptNewConnection:
setAuthStore:
_listener
_authStore
T@"NSXPCListener",&,V_listener
T@"SRAuthorizationStore",&,V_authStore
Got a connection attempt on %@
Should request for %{public}@ for %{public}@: %{bool}d
auth values: %{public}@
Connection does not have a valid entitlement
SRAppHelperProtocol
SRAppHelperService
SRAuthorizationStoreDelegate
NSObject
NSXPCListenerDelegate
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSSet"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@"SRAuthorizationStore"16@"NSDictionary"24
v40@0:8@"SRAuthorizationStore"16@"NSString"24@"NSSet"32
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
@40@0:8@16@24@32
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"SRAuthorizationStore"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.SensorKit.effective-bundle</key>
<true/>
<key>com.apple.private.SensorKit.prerequisite.readonly</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.tcc.manager.access.delete</key>
<array>
<string>kTCCServiceSensorKitBedSensing</string>
<string>kTCCServiceSensorKitFacialMetrics</string>
<string>kTCCServiceSensorKitSpeechMetrics</string>
<string>kTCCServiceSensorKitMotion</string>
<string>kTCCServiceSensorKitWatchMotion</string>
<string>kTCCServiceSensorKitLocationMetrics</string>
<string>kTCCServiceSensorKitAmbientLightSensor</string>
<string>kTCCServiceSensorKitWatchAmbientLightSensor</string>
<string>kTCCServiceSensorKitWatchHeartRate</string>
<string>kTCCServiceSensorKitWatchOnWristState</string>
<string>kTCCServiceSensorKitKeyboardMetrics</string>
<string>kTCCServiceSensorKitWatchPedometer</string>
<string>kTCCServiceSensorKitPedometer</string>
<string>kTCCServiceSensorKitWatchFallStats</string>
<string>kTCCServiceSensorKitWatchForegroundAppCategory</string>
<string>kTCCServiceSensorKitForegroundAppCategory</string>
<string>kTCCServiceSensorKitWatchSpeechMetrics</string>
<string>kTCCServiceSensorKitSpeechMetrics</string>
<string>kTCCServiceSensorKitMotionHeartRate</string>
<string>kTCCServiceSensorKitOdometer</string>
<string>kTCCServiceSensorKitElevation</string>
<string>kTCCServiceSensorKitStrideCalibration</string>
<string>kTCCServiceSensorKitDeviceUsage</string>
<string>kTCCServiceSensorKitPhoneUsage</string>
<string>kTCCServiceSensorKitMessageUsage</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceAll</string>
</array>
<key>com.apple.private.tcc.manager.service-override.modify</key>
<array>
<string>kTCCServiceSensorKitBedSensing</string>
<string>kTCCServiceSensorKitFacialMetrics</string>
<string>kTCCServiceSensorKitSpeechMetrics</string>
<string>kTCCServiceSensorKitMotion</string>
<string>kTCCServiceSensorKitWatchMotion</string>
<string>kTCCServiceSensorKitLocationMetrics</string>
<string>kTCCServiceSensorKitAmbientLightSensor</string>
<string>kTCCServiceSensorKitWatchAmbientLightSensor</string>
<string>kTCCServiceSensorKitWatchHeartRate</string>
<string>kTCCServiceSensorKitWatchOnWristState</string>
<string>kTCCServiceSensorKitKeyboardMetrics</string>
<string>kTCCServiceSensorKitWatchPedometer</string>
<string>kTCCServiceSensorKitPedometer</string>
<string>kTCCServiceSensorKitWatchFallStats</string>
<string>kTCCServiceSensorKitWatchForegroundAppCategory</string>
<string>kTCCServiceSensorKitForegroundAppCategory</string>
<string>kTCCServiceSensorKitWatchSpeechMetrics</string>
<string>kTCCServiceSensorKitSpeechMetrics</string>
<string>kTCCServiceSensorKitMotionHeartRate</string>
<string>kTCCServiceSensorKitOdometer</string>
<string>kTCCServiceSensorKitElevation</string>
<string>kTCCServiceSensorKitStrideCalibration</string>
<string>kTCCServiceSensorKitDeviceUsage</string>
<string>kTCCServiceSensorKitPhoneUsage</string>
<string>kTCCServiceSensorKitMessageUsage</string>
</array>
</dict>
</plist>
com.apple.SensorKitAppHelper.main
com.apple.SensorKit
AppHelper
reset
read
com.apple.SensorKitAppHelper.allow
countByEnumeratingWithState:objects:count:
_setQueue:
serviceListener
initWithDictionary:
allKeys
setExportedObject:
initWithSet:
setObject:forKeyedSubscript:
minusSet:
dictionaryWithDictionary:
resetAllAuthorizationsForBundleId:
valueForEntitlement:
errorWithCode:
serviceName
objectForKeyedSubscript:
readerAuthorizationValues
dictionary
allSensorsStore
setDelegate:
readerAuthorizationBundleIdValues
count
interfaceWithProtocol:
currentConnection
sensorDescriptionForSensor:
legacyName
containsObject:
setWithArray:
setExportedInterface:
init
dealloc
resetAuthorizationsForBundleId:reply:
authorizationRequestStatusForBundleId:sensors:reply:
authorizationSnapshotWithReply:
initialize
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
authorizationStore:didDetermineInitialAuthorizationValues:
authorizationStore:didUpdateAuthorizationsForBundleId:sensors:
listener:shouldAcceptNewConnection:
initWithQueue:
initWithQueue:listener:authStore:
resume
validateConnection:accessCategory:
validateEntitlment:accessCategory:
listener
setListener:
authStore
setAuthStore:
_listener
_authStore
T@"NSXPCListener",&,V_listener
T@"SRAuthorizationStore",&,V_authStore
Got a connection attempt on %@
Should request for %{public}@ for %{public}@: %{bool}d
auth values: %{public}@
Connection does not have a valid entitlement
SRAppHelperProtocol
SRAppHelperService
SRAuthorizationStoreDelegate
NSObject
NSXPCListenerDelegate
v32@0:8@16@?24
v40@0:8@16@24@?32
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSSet"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@"SRAuthorizationStore"16@"NSDictionary"24
v40@0:8@"SRAuthorizationStore"16@"NSString"24@"NSSet"32
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
@40@0:8@16@24@32
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"SRAuthorizationStore"
