@(#)PROGRAM:nsurlsessiond  PROJECT:CFNetwork-1120
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391012</string>
<key>CFBundleExecutable</key>
<string>nsurlsessiond</string>
<key>CFBundleIdentifier</key>
<string>com.apple.nsurlsessiond</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>nsurlsessiond</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1120</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1120</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>11L374m</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>13.2</string>
<key>DTSDKBuild</key>
<string>17B67</string>
<key>DTSDKName</key>
<string>iphonesimulator13.2.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11L374m</string>
<key>MinimumOSVersion</key>
<string>13.2</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<true/>
</dict>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.nsurlsessiond</string>
<key>com.apple.carousel.defaulturlsessionpolicy</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.join_connection_pool</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.networkrelay.companionLink.isEnabled</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>SERVICE_ENTITLEMENT</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.userManagedAssets</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.accounts.bundleidspoofing</key>
<true/>
<key>com.apple.private.dark-wake-network-reachability</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.rootless.storage.com.apple.MobileAsset.DuetExpertCenterAsset</key>
<true/>
<key>com.apple.rootless.storage.nsurlsessiond</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.nano.nanoregistry.paireddeviceregistry</string>
<string>com.apple.terminusd</string>
<string>com.apple.awdd</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>nsurlsessiond</string>
</array>
</dict>
</plist>
__CFN_DiskMetricsCollector
PDURLSessionProxyOpenSocket
NSCopying
NDPowerlogReporter
PDURLSessionProxyDidReceiveChallengeReply
PDURLSessionProxyCreateSession
nsurlsessiond_Additions
PDURLSessionProxySetTaskPriority
PDURLSessionProxyMessageInfo
PDURLSessionProxyService
IDSServiceDelegate
NSObject
PDURLSessionProxyDataTaskWithRequestReply
PDURLSessionProxyServerService
PDURLSessionProxyServerDelegate
PDBluetoothCompanionLinkAssertion
CBScalablePipeManagerDelegate
PDURLSessionProxyDataTaskWithRequest
PDURLSessionProxyGetAuthHeaders
NDAVAssetDownloadSessionWrapper
NDSessionManager
NDBackgroundSessionDelegate
NDBackgroundSessionManagerProtocol
NDBackgroundSession
NDCredentialStorageDelegate
NSURLSessionDelegate_Internal
NSURLSessionDelegate
NSURLSessionDownloadDelegate_Private
NSURLSessionTaskDelegatePrivate
NSURLSessionTaskDelegate
NSURLSessionDownloadDelegate
NSURLSessionDataDelegate_Internal
NSURLSessionDataDelegate
NDCallbackQueueDelegate
NDBackgroundSessionProtocol
NDApplicationObserver
PDURLSessionProxyStartedUp
PDURLSessionProxyGetAuthHeadersReply
PDURLSessionProxyDidReceiveData
PDURLSessionProxyDidReceiveResponse
PDURLSessionProxyResumeTask
PDURLSessionProxySetTaskDescription
NDStatusMonitor
NDUserEventAgentConnection
NSCoding
NSSecureCoding
PDURLSessionProxyCommon
NSURLSessionProxyAdditions
PDURLSessionProxySocketDisconnected
NDFileUtilities
PDURLSessionProxyOpenSocketReply
PDURLSessionProxyResponse
NDApplication
NDFPProvider
FPProviderObserver
NDSpringBoardApplication
NDSpringBoardAppObserver
NDCloudContainer
BRContainerObserver
PDURLSessionProxyDidReceiveResponseReply
PDURLSessionProxyWillPerformRedirectionReply
PDURLSessionProxyRequest
PDURLSessionProxyCredential
PDURLSessionProxyTaskWaiting
NDUserSyncStakeholder
UMUserSyncStakeholder
UMUserSwitchStakeholder
PDURLSessionProxyDidReceiveDataReply
PDURLSessionProxySuspendTask
PDURLSessionProxyInvalidateSession
NDCredentialStorage
PDURLSessionProxyWillSendRequest
PDURLSessionProxyOpenBodyStream
PDURLSessionProxyServer
NSURLSessionStreamDelegate_Internal
NSURLSessionStreamDelegate
NSURLSessionDataDelegatePrivate
PDURLSessionProxyDidSendBodyData
PDURLSessionProxyCancelTask
PDURLSessionProxyTaskMessage
NDTaskMonitor
PDURLSessionProxyDidReceiveChallenge
PDURLSessionProxyError
Daemon
NDSessionManagerDelegate
NSXPCListenerDelegate
LSApplicationWorkspaceObserverProtocol
PDURLSessionProxyUploadBodyData
NDSpringBoard
NDAVThroughputMonitor
PDURLSessionProxySessionMessage
PDURLSessionProxyTaskWillBeRetried
PDURLSessionProxyConnectedToServer
PDURLSessionProxyAuthChallenge
SZExtractor
PendingCallback
NDCallbackQueue
PDURLSessionProxySessionBecameInvalid
NDAVBackgroundSession
NDAVAssetDownloadSessionWrapperDelegate
NDAVAdditions
DummyQueue
PDURLSessionProxyTaskCompleted
PDURLSessionProxyWillPerformRedirection
stageURL
T@"NSURL",&,N,V_stageURL
reportHandler
T@?,C,N,V_reportHandler
diskUsage
T@"NSMutableDictionary",&,N,V_diskUsage
lastSubmissionDate
T@"NSDate",&,N,V_lastSubmissionDate
lastSaveDate
T@"NSDate",&,N,V_lastSaveDate
metricsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_metricsQueue
reportTimeInterval
Td,V_reportTimeInterval
stageTimeInterval
Td,V_stageTimeInterval
cachedDiskUsage
com.apple.CFNetwork.DiskMetrics
hasSession
TB,R,N
session
T@"PDURLSessionProxySessionMessage",&,N,V_session
hasSocketUUID
socketUUID
T@"NSString",&,N,V_socketUUID
hasHost
host
T@"NSString",&,N,V_host
hasPort
TB,N
port
TI,N,V_port
%@ %@
hasTask
task
T@"PDURLSessionProxyTaskMessage",&,N,V_task
hasDisposition
disposition
Ti,N,V_disposition
hasCredential
credential
T@"PDURLSessionProxyCredential",&,N,V_credential
(unknown: %i)
RejectProtectionSpace
CancelAuthenticationChallenge
PerformDefaultHandling
UseCredential
hasConfiguration
configuration
T@"NSData",&,N,V_configuration
hasSupportsRedirects
supportsRedirects
TB,N,V_supportsRedirects
hasDelegateImplementsWillSendRequest
delegateImplementsWillSendRequest
TB,N,V_delegateImplementsWillSendRequest
hasDelegateImplementsSessionAuthChallenge
delegateImplementsSessionAuthChallenge
TB,N,V_delegateImplementsSessionAuthChallenge
hasDelegateImplementsTaskAuthChallenge
delegateImplementsTaskAuthChallenge
TB,N,V_delegateImplementsTaskAuthChallenge
hasDelegateImplementsWillPerformRedirection
delegateImplementsWillPerformRedirection
TB,N,V_delegateImplementsWillPerformRedirection
hasDelegateImplementsDidReceiveResponse
delegateImplementsDidReceiveResponse
TB,N,V_delegateImplementsDidReceiveResponse
%02x
_nsurlsessiondErrorDomain
_unsafe
com.apple.nsurlsessiond
background
proxy
--privileged
--postlogoutsync
hasPriority
priority
TI,N,V_priority
message
T@"PBCodable",C,V_message
type
TS,V_type
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
connected
TB,GisConnected,V_connected
launchUUID
T@"NSString",&,V_launchUUID
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v16@?0@"PBCodable"8
IDSSendMessageOptionMetricReportIdentifier
com.apple.cloudd
com.apple.cloudkit.cloudd
NSURLSessionProxyClientBundleIdentifier
com.apple.private.alloy.nsurlsessionproxy
com.apple.nsurlsessiond.NSURLSessionProxyService-Queue
hasTaskInfo
taskInfo
T@"NSData",&,N,V_taskInfo
v32@?0@"NSString"8@"PDURLSessionProxyServer"16^B24
CBScalablePipeManager
/System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth
### Failed to Soft Linked: /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth
NRPairedDeviceRegistry
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
### Failed to Soft Linked: /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
com.apple.nsurlsessiond.PDBluetoothCompanionLinkAssertion.bluetoothSerialQueue
hasOriginalRequest
originalRequest
T@"PDURLSessionProxyRequest",&,N,V_originalRequest
hasCurrentRequest
currentRequest
T@"PDURLSessionProxyRequest",&,N,V_currentRequest
hasTaskSequenceNumber
taskSequenceNumber
TQ,N,V_taskSequenceNumber
hasResponse
response
T@"PDURLSessionProxyResponse",&,N,V_response
countOfBytesWritten
TQ,V_countOfBytesWritten
countOfBytesExpectedToWrite
TQ,V_countOfBytesExpectedToWrite
totalTimeRange
T@"NSValue",C,V_totalTimeRange
progressTimerRunning
TB,V_progressTimerRunning
delegate
T@"<NDAVAssetDownloadSessionWrapperDelegate>",R,W,V_delegate
delegateQueue
T@"NSObject<OS_dispatch_queue>",R,&,V_delegateQueue
T@"NSURL",R,C,V_URL
destinationURL
T@"NSURL",R,C,V_destinationURL
options
T@"NSDictionary",R,&,V_options
downloadToken
TQ,R,V_downloadToken
taskIdentifier
TQ,V_taskIdentifier
TimeoutActionTurnOff
TimeoutAction
TimeoutSeconds
AVAssetDownloadSessionWrapper %llu
AssertName
AssertLevel
AssertType
PreventUserIdleSystemSleep
AVAssetDownloadSessionCurrentLoadedTimeRangesKey
AVAssetDownloadSessionNewlyLoadedTimeRangeKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AVAssetDownloadTaskMediaSelectionKey
.tmp
CFNetworkDownload_
TMPDIR
/tmp/
com.apple.nsurlsessiond-cachedelete
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
q24@?0@"NSDate"8@"NSDate"16
CACHE_DELETE_AMOUNT
CACHE_DELETE_VOLUME
xpcConn
T@"NSXPCConnection",W,V_xpcConn
T@"<NDSessionManagerDelegate>",W,V_delegate
isSpringBoardApp
TB,V_isSpringBoardApp
obliterationCompletion
T@?,C,V_obliterationCompletion
options.plist
configuration.plist
NDBackgroundSessionManagerRestoredStateKeyTLSSessionCachePrefix
NDBackgroundSessionManagerKeySessionUUID
NDBackgroundSessionManagerRestoredStateKeyTasks
kNSURLSessionImmediateInvalidationErrorKey
kNSURLSessionThrowImmediateAVExceptionKey
com.apple.security.application-groups
com.apple.private.nsurlsession.set-max-watch-cell-transfer-size
com.apple.private.nsurlsession.allow-duet-preauthorization
com.apple.private.nsurlsession-allow-override-connection-pool
com.apple.private.dark-wake-network-reachability
com.apple.private.nsurlsession.allow-discretionary-cellular
com.apple.private.nsurlsession.impersonate
Holding boost for %@
com.apple.OTACrashCopier
downloadDirectoryPath.plist
sessions.plist
com.apple.nsurlsessiond.session-manager
com.apple.nsurlsessiond.session-archive-queue
T@"<NDBackgroundSessionDelegate>",W,V_delegate
uuid
T@"NSUUID",R,V_uuid
identifier
T@"NSString",R,V_identifier
clientBundleID
T@"NSString",R,V_clientBundleID
monitoredAppBundleID
T@"NSString",R,V_monitoredAppBundleID
secondaryID
T@"NSString",R,V_secondaryID
invalidateReply
T@?,C,V_invalidateReply
sharedContainerIdentifier
T@"NSString",C,V_sharedContainerIdentifier
v24@?0@"NSString"8Q16
diskMetrics.plist
v16@?0q8
trailers
v16@?0@"NSURLRequest"8
NSURLAuthenticationMethodServerTrust
NSURLAuthenticationMethodClientCertificate
NSURLAuthenticationMethodNegotiate
NSURLAuthenticationMethodNTLM
com.apple.private.nsurlsession.set-discretionary-override-value
com.apple.private.nsurlsession.set-task-priority
v16@?0@"NSData"8
v32@?0@"NSURLProtectionSpace"8@"NSURLCredential"16^B24
__com.apple.CFNetwork.prefix__
%@%@%@
CFNetworkUpload_%@
Task <?>.<0>
New task
_NSURLRequestIsDiscretionaryOverrideValue
v32@?0@"NSNumber"8@"__NSCFURLSessionTaskInfo"16^B24
com.apple.mobileassetd
com.apple.sharingd
v12@?0B8
NSURLErrorBackgroundTaskCancelledReasonKey
__NSCFLocalUploadTask
__NSCFLocalDataTask
__NSCFLocalDownloadTask
pathToDownloadTaskFile
NSKeyedArchiveRootObjectKey
effectiveConfig
Unknown (%llu)
Network quality
In battery saver mode
Blocked by proxy
Network unavailable
Opportunistic
Connection pool is full
Required data protection level is locked
Conflicting parameters
Thermal conditions are not good
Cellular service is unavailable
Link quality too poor
Waiting for non-cellular network
Waiting for inexpensive network
Waiting for power
Duration expired
Waiting for start time
Duet Said No
VPN not connected
%@ [allowsCellularAccess: %d]
%@ [delay: %f, duration: %f, allowsCellularAccess: %d]
Task <?>.<%lu>
tasks.plist
Library/Caches/com.apple.nsurlsessiond/Downloads
NSURLSessionDelegateImplementsTaskAuthChallengeKey
NSURLSessionDelegateImplementsSessionAuthChallengeKey
NSURLSessionDelegateImplementsWillBeginDelayedRequestKey
NSURLSessionDelegateImplementsWillSendRequestForEstablishedConnectionKey
Uploads
NSURLSessionBackgroundPoolName-sync-%d
NSURLSessionBackgroundPoolName
hasVersion
version
TI,N,V_version
hasLaunchUUID
T@"NSString",&,N,V_launchUUID
hasHeaderData
headerData
T@"NSData",&,N,V_headerData
hasContinueLoad
continueLoad
TB,N,V_continueLoad
hasReceivedData
receivedData
T@"NSData",&,N,V_receivedData
hasAdditionalProperties
additionalProperties
T@"NSData",&,N,V_additionalProperties
hasTaskDescription
taskDescription
T@"NSString",&,N,V_taskDescription
com.apple.nsurlsessiond.status-monitor
com.apple.nsurlsessiond-events.message-type
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.nsurlsessiond-events.registered-clients
com.apple.nsurlsessiond-launchondemand
com.apple.nsurlsessiond.UserEventAgentConnectionQueue
supportsSecureCoding
TB,R
DisableInfraWiFi
enableBluetoothLinkRequirements
bluetoothLinkRequirementsOverrideTimerValue
v32@?0@8@16^B24
NSErrorClientCertificateChainKey
NSErrorPeerCertificateChainKey
_actualConfiguration
T@"NSURLSessionConfiguration",&,S_setActualConfiguration:
_actualAdditionalProperties
T@"NSDictionary",&,S_setActualAdditionalProperties:
_actualTaskInfo
T@"__NSCFURLSessionTaskInfo",&,S_setActualTaskInfo:
_actualAuthHeaders
T@"NSDictionary",&,S_setActualAuthHeaders:
com.apple.nsurlsessionproxy.cancelError
https
http
### Failed to Soft Linked: /System/Library/PrivateFrameworks/InstallCoordination.framework/InstallCoordination
### Failed to Soft Linked: /System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip
nsurlsessiond
com.apple.nsurlsessiond.szmodtime
com.apple.nsurlsessiond.purged
/nsurlsessiond.launch
com.apple.nsurlsessiond/Downloads
-launchd
com.apple.nsnetworkd
hasStreamErrorDomain
streamErrorDomain
Ti,N,V_streamErrorDomain
hasStreamErrorCode
streamErrorCode
Ti,N,V_streamErrorCode
hasArchiveList
archiveList
T@"NSData",&,N,V_archiveList
bundleIdentifier
T@"NSString",&,V_bundleIdentifier
currentRequestDelay
Td,V_currentRequestDelay
isInTransitionalDiscretionaryPeriod
TB,VisInTransitionalDiscretionaryPeriod
com.apple.nsurlsessiond.NDSpringBoardApplication.request-delay-queue
FPProviderMonitor
/System/Library/PrivateFrameworks/FileProvider.framework/FileProvider
### Failed to Soft Linked: /System/Library/PrivateFrameworks/FileProvider.framework/FileProvider
BRContainersMonitor
/System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
### Failed to Soft Linked: /System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
BecomeDownload
Allow
Cancel
hasRequest
request
T@"PDURLSessionProxyRequest",&,N,V_request
hasReason
reason
TI,N,V_reason
activeTasks
T@"NSMutableSet",&,V_activeTasks
activeTasksLock
T{os_unfair_lock_s=I},V_activeTasksLock
monitorTask
T@"UMUserSyncTask",&,V_monitorTask
monitorTaskSet
T@"NSMutableSet",&,V_monitorTaskSet
monitorTaskLock
T{os_unfair_lock_s=I},V_monitorTaskLock
tasksInitialized
TB,V_tasksInitialized
tasksEnqueued
TB,V_tasksEnqueued
bridgeTasks
T@"NSMutableDictionary",&,V_bridgeTasks
monitor
nsurlsession bg task
v32@?0@"NSURLProtectionSpace"8@"NSDictionary"16^B24
v24@?0@"NSString"8^B16
retry
client
com.apple.nsurlsessiond.usermanager.sync
hasShouldCancel
shouldCancel
TB,N,V_shouldCancel
T@"<NDCredentialStorageDelegate>",W,V_delegate
bundleID
T@"NSString",C,V_bundleID
v16@?0@"NSURLCredential"8
v24@?0@"NSDictionary"8@"NSDictionary"16
com.apple.nsurlsessiond.credential-storage-queue
hasHasBodyStream
hasBodyStream
TB,N,V_hasBodyStream
T@"NSString",C,V_identifier
uuidString
T@"NSString",C,V_uuidString
T@"<PDURLSessionProxyServerDelegate>",R,V_delegate
v24@?0@"PBCodable"8@"NSError"16
-[PDURLSessionProxyServer _URLSession:dataTask:didReceiveData:completionHandler:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/nsnetworkd_Sim/CFNetwork-1120/nsurlsessiond/SessionProxy/PDURLSessionProxyServer.mm
!_taskIdentifiersToPendingDataCompletion[@(taskIdentifier)]
v28@?0@"NSData"8B16@"NSError"20
v20@?0@"NSObject<OS_dispatch_data>"8i16
v20@?0i8@"NSError"12
_kCFNetworkProxySessionNeedsNewBodyStreamSignal
Session <%@>
v32@?0@"NSNumber"8@"NSURLSessionDataTask"16^B24
com.apple.nsurlsessiond.NSURLSessionProxyPool
BackgroundDisposition
 uuid:%@
hasBytesSent
bytesSent
TQ,N,V_bytesSent
hasTotalBytesSent
totalBytesSent
TQ,N,V_totalBytesSent
hasTotalBytesExpectedToSend
totalBytesExpectedToSend
TQ,N,V_totalBytesExpectedToSend
hasTaskIdentifier
TQ,N,V_taskIdentifier
basePriority
Tq,V_basePriority
com.apple.system.powersources.source
v12@?0i8
hasChallenge
challenge
T@"PDURLSessionProxyAuthChallenge",&,N,V_challenge
hasDomain
domain
T@"NSString",&,N,V_domain
hasCode
code
TQ,N,V_code
hasUserInfo
userInfo
T@"NSData",&,N,V_userInfo
T@"NSObject<OS_dispatch_queue>",R,V_queue
privileged
TB,GisPrivileged,V_privileged
inSyncBubble
TB,GisInSyncBubble,V_inSyncBubble
stakeholder
T@"NDUserSyncStakeholder",&,V_stakeholder
com.apple.nsurlsessiond.started
v32@?0@"NSString"8@"NDSessionManager"16^B24
q24@?0@8@16
NDTaskInfo
bundles.plist
com.apple.nsurlsessiond.daemon-queue
com.apple.nsurlsessiond-xpc-transaction-queue
hasBodyData
bodyData
T@"NSData",&,N,V_bodyData
UIApplicationLaunchOptionsURLSessionKey
com.apple.nsurlsessiond.handlesession %@
could not find
found
v32@?0@8@"BKSProcessAssertion"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"NSNumber"16^B24
KeepAppsUpToDateAppList
com.apple.mt
v16@?0@"NSDictionary"8
com.apple.nsnetwork.SpringBoard-queue
kKeepAppsUpToDateEnabledChangedNotification
hasSessionIdentifier
sessionIdentifier
T@"NSString",&,N,V_sessionIdentifier
hasUuidString
T@"NSString",&,N,V_uuidString
hasSequenceNumber
sequenceNumber
TQ,N,V_sequenceNumber
hasIdsPriority
idsPriority
Tq,N,V_idsPriority
hasError
error
T@"PDURLSessionProxyError",&,N,V_error
extractorDelegate
T@"<SZExtractorDelegate>",W,N
doesConsumeExtractedData
SZExtractor
/System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip
nw_activityUUID
DisallowCellularDueToSystemPolicy
TimeoutIntervalForResource
v24@?0Q8@"NSError"16
/System/Library/PrivateFrameworks/InstallCoordination.framework/InstallCoordination
CountOfBytesClientExpectsToReceive
CountOfBytesClientExpectsToSend
EarliestBeginDate
PublishingURL
StatusCodes
Ti,V_type
args
T@"NSArray",C,V_args
hasBeenDrained
TB,V_hasBeenDrained
T@"<NDCallbackQueueDelegate>",W,V_delegate
v20@?0B8@"NSDictionary"12
v24@?0q8@"NSURLRequest"16
v16@?0@"NSError"8
v16@?0@"NSFileHandle"8
v24@?0@"NSURLRequest"8@"NSFileHandle"16
v24@?0q8@"NSURLCredential"16
v8@?0
v20@?0I8r^v12
configuration.apple.com
file-write-data
com.apple.private.nsurlsession.media-asset-download.can-specify-destination-url
%@%@%@.movpkg
%llu
{CGSize=dd}
CGSizeMakeWithDictionaryRepresentation
/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
### Failed to Soft Linked: /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
_reportTimeInterval
_stageTimeInterval
_stageURL
_reportHandler
_diskUsage
_lastSubmissionDate
_lastSaveDate
_metricsQueue
initWithStageURL:reportHandler:
readMetrics
saveMetrics
deleteMetrics
recordBytes:bundleID:
.cxx_destruct
reportTimeInterval
setReportTimeInterval:
stageTimeInterval
setStageTimeInterval:
stageURL
setStageURL:
reportHandler
setReportHandler:
diskUsage
setDiskUsage:
lastSubmissionDate
setLastSubmissionDate:
lastSaveDate
setLastSaveDate:
metricsQueue
setMetricsQueue:
dictionary
countByEnumeratingWithState:objects:count:
timeIntervalSinceDate:
date
setObject:forKeyedSubscript:
numberWithUnsignedLongLong:
unsignedLongLongValue
objectForKeyedSubscript:
removeItemAtURL:error:
defaultManager
writeToURL:options:error:
dataWithPropertyList:format:options:error:
dictionaryWithObjects:forKeys:count:
propertyListWithData:options:format:error:
dataWithContentsOfURL:
_host
_port
_session
_socketUUID
_has
copyWithZone:
hasSession
hasSocketUUID
hasHost
setPort:
setHasPort:
hasPort
description
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
session
setSession:
socketUUID
setSocketUUID:
host
setHost:
port
allocWithZone:
numberWithUnsignedInt:
setObject:forKey:
stringWithFormat:
_task
_hasStarted
_lastUpdateTime
_lastSuspendTime
_suspendedDurationSinceLastUpdate
initWithTask:
taskWillResume
taskWillSuspend
taskTransferredData:countOfBytesReceived:
cancel
_credential
_disposition
hasTask
disposition
setDisposition:
setHasDisposition:
hasDisposition
dispositionAsString:
StringAsDisposition:
hasCredential
task
setTask:
credential
setCredential:
isEqualToString:
_configuration
_delegateImplementsDidReceiveResponse
_delegateImplementsSessionAuthChallenge
_delegateImplementsTaskAuthChallenge
_delegateImplementsWillPerformRedirection
_delegateImplementsWillSendRequest
_supportsRedirects
hasConfiguration
setSupportsRedirects:
setHasSupportsRedirects:
hasSupportsRedirects
setDelegateImplementsWillSendRequest:
setHasDelegateImplementsWillSendRequest:
hasDelegateImplementsWillSendRequest
setDelegateImplementsSessionAuthChallenge:
setHasDelegateImplementsSessionAuthChallenge:
hasDelegateImplementsSessionAuthChallenge
setDelegateImplementsTaskAuthChallenge:
setHasDelegateImplementsTaskAuthChallenge:
hasDelegateImplementsTaskAuthChallenge
setDelegateImplementsWillPerformRedirection:
setHasDelegateImplementsWillPerformRedirection:
hasDelegateImplementsWillPerformRedirection
setDelegateImplementsDidReceiveResponse:
setHasDelegateImplementsDidReceiveResponse:
hasDelegateImplementsDidReceiveResponse
configuration
setConfiguration:
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
numberWithBool:
UTF8String
valueForEntitlement:
boolValue
_connectionHasEntitlement:
setWithObjects:
unionSet:
addObject:
fileExistsAtPath:
stringByDeletingLastPathComponent
lastPathComponent
stringByAppendingString:
stringByAppendingPathComponent:
fileSystemRepresentation
dataWithContentsOfFile:
unarchivedObjectOfClasses:fromData:error:
_safe_unarchiveObjectWithFile:
stringWithCapacity:
appendFormat:
uppercaseString
_sha1Hash
integerValue
objectForKey:
numberWithInteger:
numberWithInt:
mutableCopy
removeObjectForKey:
errorWithDomain:code:userInfo:
_isRecoverableErrorForBackgroundTask
_isPriorityChangedError
_shouldRemoveCacheFileForError
_errorShouldSuppressWake
_errorShouldBeRewritten
_cancelledReasonForError
_errorForPowerlog
_priorityValue
set_priority:
_setPriority:withMonitoredApplication:
initWithMachServiceName:
_setQueue:
currentRunLoop
_priority
setPriority:
setHasPriority:
hasPriority
priority
_type
_message
initWithMessage:type:
message
setMessage:
type
setType:
init
_idsService
_outstandingReplies
_outstandingMessages
_startupMessageIdentifier
_outgoingSequenceNumbersByPriority
_incomingSequenceNumbersByPriority
_receivedLaunchUUIDs
_currentRemoteLaunchUUID
_prefersInfraWiFi
_startupMessageFailed
_haveReceivedLegacyStartupMessage
_haveReceivedMessage
_connected
_queue
_launchUUID
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
debugDescription
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
start
devicesDidUnpair:
newDeviceBecameActive:
_onqueue_sendStartupMessage
withWorkQueue:
defaultPairedDevice
_onqueue_updateDeviceState
_onqueue_devicesConnected
_onqueue_devicesDisconnected
_onqueue_remoteDeviceStartedUp
_onqueue_receivedNewLaunchUUID:isStartupMessage:
_onqueue_setPrefersInfraWiFi:
_onqueue_priorityForMessage:ofType:isReply:
_onqueue_sourceApplicationForMessage:
_onqueue_IDSTimoutForMessage:
_onqueue_loggableDescriptionForMessage:
bumpAndReturnOutgoingSequenceNumberForPriority:
verifyAndUpdateIncomingSequenceNumber:forPriority:
_onqueue_sendMessage:ofType:responseIdentifier:forSourceApplication:withUrgency:withIDSMessageTimeout:withReply:
sendProtobufMessage:ofType:withReply:
_onqueue_handleReceivedMessage:ofType:withReply:
_onqueue_handleFailedMessageSend:ofType:
_onqueue_handleReceivedReply:forIdentifier:ofType:withError:
_onqueue_messageWithIdentifier:didSendWithSuccess:error:
queue
setQueue:
isConnected
setConnected:
launchUUID
setLaunchUUID:
UUIDString
UUID
removeAllObjects
incomingResponseIdentifier
containsObject:
initWithData:
alloc
length
outgoingResponseIdentifier
isResponse
data
copy
sendProtobuf:toDestinations:priority:options:identifier:error:
setWithObject:
initWithProtobufData:type:isResponse:
numberWithLongLong:
setPreferInfraWiFi:
serviceMinCompatibilityVersion
isNearby
isDefaultPairedDevice
devices
numberWithDouble:
addDelegate:queue:
initWithService:
_taskInfo
hasTaskInfo
taskInfo
setTaskInfo:
_sessions
_infraWiFiRetainCount
_infraWiFiTimer
_btLinkAssertionRetainCount
_btLinkAssertionTimer
_bluetoothCompanionLinkAssertion
proxyServerBecameInvalid:
dealloc
retainInfraWiFi
releaseInfraWiFi
retainBTLinkAssertion
releaseBTLinkAssertion
sharedService
enumerateKeysAndObjectsUsingBlock:
invalidate
acquire
_bluetoothSerialQueue
_companionPeerIdentifier
_hasLoadedCompanionPeerIdentifier
_hasSetLinkRequirements
_isActive
_pipeManager
scalablePipeManager:didRegisterEndpoint:error:
scalablePipeManager:didUnregisterEndpoint:
scalablePipeManager:pipeDidConnect:
scalablePipeManager:pipeDidDisconnect:error:
scalablePipeManagerDidUpdateState:
_updateState
setLinkRequirementsForPeer:packetsPerSecond:inputBytesPerSecond:outputBytesPerSecond:
state
initWithDelegate:queue:
deviceIDForNRDevice:
getActivePairedDevice
sharedInstance
_obliterateAllBackgroundSessionsWithCompletionHandler:
_taskSequenceNumber
_currentRequest
_originalRequest
hasOriginalRequest
hasCurrentRequest
setTaskSequenceNumber:
setHasTaskSequenceNumber:
hasTaskSequenceNumber
originalRequest
setOriginalRequest:
currentRequest
setCurrentRequest:
taskSequenceNumber
_response
hasResponse
response
setResponse:
_downloadSession
_asset
_timer
_powerAssertion
_progressTimerRunning
_delegate
_delegateQueue
_URL
_destinationURL
_options
_downloadToken
_countOfBytesWritten
_countOfBytesExpectedToWrite
_taskIdentifier
_totalTimeRange
initWithURL:destinationURL:options:delegate:queue:
initWithURLAsset:destinationURL:options:delegate:queue:
addSessionObservers
removeSessionObservers
disavowSession
didReceiveSucceededNotification:
didReceiveFailedNotification:
didReceiveFileSizeAvailableNotification:
didReceiveTimeRangesChangedNotification:
didReceiveMediaSelectionResolutionNotification:
sendProgressUpdate
takePowerAssertion
releasePowerAssertion
resume
suspend
cancelAndDeliverError:
startLoadingMetadata
delegate
delegateQueue
destinationURL
options
downloadToken
countOfBytesWritten
setCountOfBytesWritten:
countOfBytesExpectedToWrite
setCountOfBytesExpectedToWrite:
taskIdentifier
setTaskIdentifier:
totalTimeRange
setTotalTimeRange:
progressTimerRunning
setProgressTimerRunning:
pause
fileSize
countOfBytesReceived
propertyList
resolvedMediaSelection
valueWithCMTimeRange:
duration
removeObserver:name:object:
defaultCenter
addObserver:selector:name:object:
assetDownloadSessionWithAsset:destinationURL:options:
initWithAsset:propertyList:
assetDownloadSessionWithURL:destinationURL:options:
hasSuffix:
numberWithUnsignedLong:
fileURLWithPath:
addEntriesFromDictionary:
dateWithTimeIntervalSinceNow:
earlierDate:
compare:
keysSortedByValueUsingComparator:
fileURLWithPath:isDirectory:relativeToURL:
moveItemAtURL:toURL:error:
arrayWithObjects:count:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
longLongValue
stringWithUTF8String:
fileURLWithPath:isDirectory:
getResourceValue:forKey:error:
hasPrefix:
_reconnectingProxies
_clientBundleID
_bundleDirectory
_sessionArchiveQueue
_boost
_isSpringBoardApp
_xpcConn
_obliterationCompletion
sessionCompleted:withCompletionHandler:
boost
dropBoost
createSessionWithConfiguration:clientProxy:cachesDirectory:options:reply:
sendPendingCallbacksForIdentifier:reply:
releaseAssertionForSession:reply:
okayToSendPendingCallbacksForIdentifier:reply:
getActiveSessionIdentifiersWithReply:
obliterateAllSessionsWithReply:
initWithDelegate:bundleID:isSpringBoardApp:
archivePath
downloadDirectoryDataPath
restoreOptionsFromArchivePath:
restoreState:
archiveState
copyAndSanitizeClientConfiguration:
connection:canUseSharedContainerIdentifier:
cleanupWithCompletionHandler:
getSessionWithIdentifier:
clientApplicationWasReinstalled
obliterate
xpcConn
setXpcConn:
setDelegate:
isSpringBoardApp
setIsSpringBoardApp:
obliterationCompletion
setObliterationCompletion:
allKeys
writeToFile:atomically:
archivedDataWithRootObject:requiringSecureCoding:error:
_web_errorWithDomain:code:URL:
_xpcConnection
currentConnection
_supportsAVAssetDownloads
set_maximumWatchCellularTransferSize:
_maximumWatchCellularTransferSize
set_duetPreauthorized:
_duetPreauthorized
set_directoryForDownloadedFiles:
_isSafeDirectoryForDownloads:withToken:
auditToken
processIdentifier
_directoryForDownloadedFiles
set_connectionPoolName:
_connectionPoolName
set_allowsPowerNapScheduling:
_allowsPowerNapScheduling
set_respectsAllowsCellularAccessForDiscretionaryTasks:
_respectsAllowsCellularAccessForDiscretionaryTasks
_sourceApplicationAuditTokenData
set_sourceApplicationSecondaryIdentifier:
_sourceApplicationSecondaryIdentifier
set_sourceApplicationBundleIdentifier:
_sourceApplicationBundleIdentifier
endActivity:
processInfo
beginActivityWithOptions:reason:
addObjectsFromArray:
fileExistsAtPath:isDirectory:
array
path
URLByAppendingPathComponent:
_userInitiatedSession
_discretionaryPrioritySession
_credentialStorage
_archiveQueue
_clientApplication
_connectedExtension
_tasksToIdentifiers
_identifiersToTasks
_identifiersToMonitors
_identifiersToStreams
_identifiersToStreamQueues
_outstandingTaskIDs
_lastArchiveTime
_sessionDirectory
_downloadDirectory
_uploadsDirectory
_performsEVCertCheck
_clientImplementsWillSendRequest
_clientImplementsWillBeginDelayedRequest
_clientImplementsSessionChallenge
_clientImplementsTaskChallenge
_sendsLaunchEvents
_discretionary
_obliterated
_cleanedUp
_hasBeenSignalledToDeliverPendingEvents
_infersDiscretionary
_shouldPullInitialCredentials
_completeReconnectionBlock
_clientPID
_watchExtensionBundleIdentifier
_retryDataTasks
_workQueue
_callbackQueue
_monitoredApplication
_identifiersToTaskInfo
_clientProxy
_uuid
_identifier
_monitoredAppBundleID
_secondaryID
_invalidateReply
_sharedContainerIdentifier
getClientProxy
_URLSession:openFileAtPath:mode:completionHandler:
_URLSession:companionAvailabilityChanged:
_URLSession:needConnectedSocketToHost:port:completionHandler:
_URLSession:task:getAuthHeadersForResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
_URLSession:downloadTask:didReceiveResponse:
_URLSession:downloadTaskNeedsDownloadDirectory:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:downloadTask:didFinishDownloadingToURL:
_URLSession:dataTask:didReceiveData:completionHandler:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
wakeUpClient
errorOccurredDuringFinishedCallbackDelivery:
errorOccurredDuringAuthCallbackDelivery:completionHandler:
clientAcknowledgedTerminalCallbackForTask:
descriptionForTaskWithIdentifier:
downloadTaskWithRequest:originalRequest:downloadFilePath:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:sandboxExtensionData:identifier:uniqueIdentifier:potentialCredentials:reply:
dataTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
downloadTaskWithResumeData:identifier:uniqueIdentifier:reply:
cancelTaskWithIdentifier:
cancelTaskWithIdentifier:byProducingResumeData:
suspendTaskWithIdentifier:
resumeTaskWithIdentifier:withProperties:
setDescription:forTask:
setPriority:forTaskWithIdentifier:
setLoadingPoolPriority:forTaskWithIdentifier:
setBytesPerSecondLimit:forTaskWithIdentifier:
setExpectedProgressTarget:forTaskWithIdentifier:
setDiscretionaryOverride:forTaskWithIdentifier:
setTLSSessionCachePrefix:
resetStorageWithReply:
invalidateWithReply:
setPropertyOnStreamWithIdentifier:propDict:propKey:withReply:
avAssetDownloadTaskWithDownloadToken:URL:destinationURL:temporaryDestinationURL:assetTitle:assetArtworkData:options:identifier:uniqueIdentifier:reply:
avAggregateAssetDownloadTaskWithDownloadToken:serializedMediaSelections:assetTitle:assetArtworkData:options:childDownloadSessionIdentifier:identifier:uniqueIdentifier:reply:
applicationWasQuitFromAppSwitcher:
backgroundUpdatesDisabledForApplication:
backgroundUpdatesEnabledForApplication:
applicationWasSuspended:
applicationEnteredForeground:
applicationNoLongerInForeground:
applicationEndedNonDiscretionaryBackgroundGracePeriod:
applicationEndedExtendedNonDiscretionaryBackgroundGracePeriod:
applicationEndedTransitionalDiscretionaryBackgroundPeriod:
defaultWindowDurationForResourceTimeout:
configurationWithClientConfiguration:discretionary:
initWithConfiguration:bundleID:isSpringBoardApp:downloadDirectory:options:clientProxy:delegate:workQueue:archiveQueue:
sessionForDiscretionaryStatus:
setXPCConnection:
hasConnectedClient
setupDownloadDirectory
cleanupSessionWithCompletionHandler:
tasksArchivePath
archiveTaskInfo:
descriptionForRequest:
descriptionForTCPConnectionWaitingReason:
requestWithAdjustedWindowForTaskInfo:
updateTaskInfoBasedOnCurrentDiscretionaryStatus:
adjustDiscretionaryStatusForTaskInfo:
sanitizeTaskProperties:
configureAdditionalPropertiesOnTask:taskInfo:
configureTask:withTaskInfo:
ensureSessionDownloadDirectoryExists
createNewTaskFromInfo:
restoreInProgressTask:
restoreCompletedTask:
restoreTask:isOutstanding:
restoreTasksFromArchivedInfo:
restoreTasks:
clientErrorForError:
retryTask:originalError:transactionMetrics:
removeDownloadFileForTaskInfo:
removeUploadFileForTaskInfo:
sessionHasOutstandingTasks
clientIsActive
handleCompletionOfTask:identifier:taskInfo:isRecoverable:suppressWake:
finalizeTaskCompletionWithSuppressedWake:
cancelTasksRequiringClientConnectionAndResumeUnstartedTasks
clientDidDisconnect
reconnectClient:withCompletion:
allowReconnect
fillInByteCountsForTaskInfo:withTaskID:
fillInPropertiesForTaskInfo:withTaskID:
getTasksForReconnection
getTLSSessionCachePrefix
priorityForDiscretionaryStatus:
currentDiscretionaryStatus:withOptionalTaskInfo:
cancelMonitorForTask:
handleEarliestBeginDateForTaskWithIdentifier:completionHandler:
handleWillBeginDelayedRequestForTaskWithIdentifier:completionHandler:
taskShouldResume:
taskShouldSuspend:
enqueueTaskWithIdentifier:
addOutstandingTaskWithIdentifier:
removeOutstandingTaskWithIdentifier:
requeueTask:skipResume:
requeueTask:
makeTempUploadFile:withExtensionData:
inputStreamWithFileHandle:taskIdentifier:
setupDASPropertiesOnTask:taskInfo:discretionaryStatus:
performCommonSetupForTask:taskInfo:identifier:discretionaryStatus:
shouldContinueDownloadBasedOnDiskSpace:
trustPassesExtendedValidation:
uuid
identifier
clientBundleID
monitoredAppBundleID
secondaryID
invalidateReply
setInvalidateReply:
sharedContainerIdentifier
setSharedContainerIdentifier:
arrayWithObjects:
backgroundTask:getAuthHeadersForResponse:reply:
remoteObjectProxyWithErrorHandler:
_loggableDescription
unsignedIntegerValue
closeFile
fileDescriptor
backgroundTask:didReceiveResponse:transactionMetrics:
currentTransactionMetrics
_metrics
numberWithUnsignedInteger:
statusCode
cancel_with_error:
error:code:
backgroundTask:hasConnectionWaitingWithError:
setHTTPBodyStream:
close
open
streamStatus
HTTPBodyStream
setShouldCancelOnDisconnect:
shouldCancelOnDisconnect
taskKind
setEstablishedConnection:
setTotalBytesWritten:
backgroundDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
setExpectingResumeCallback:
backgroundDownloadTask:didResumeAtOffset:expectedTotalBytes:
expectingResumeCallback
arrayWithObject:
_hasSZExtractor
setTaskKind:
backgroundDataTaskDidBecomeDownloadTask:
setDownloadFileURL:
downloadFile
backgroundDataTask:didReceiveData:withReply:
countOfBytesExpectedToReceive
backgroundTask:didReceiveResponse:transactionMetrics:reply:
terminateExtractorWithError:completion:
_extractorFinishedDecoding
taskMetrics
null
_backgroundTrailers
set_backgroundTrailers:
_trailers
setState:
set_doesSZExtractorConsumeExtractedData:
_doesSZExtractorConsumeExtractedData
set_hasSZExtractor:
set_extractor:
_extractor
establishedConnection
disablesRetry
downloadFileURL
setTaskMetrics:
backgroundTask:needNewBodyStream:withReply:
setDisablesRetry:
backgroundTask:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
backgroundTask:willPerformHTTPRedirection:withNewRequest:reply:
set_legacySocketStreamProperties:
_legacySocketStreamProperties
_copySocketStreamProperties
_groupConfiguration
_taskGroup
scheme
isDiscretionary
proposedCredential
previousFailureCount
credentialForTrust:
serverTrust
authenticationMethod
protectionSpace
set_tlsSessionCachePrefix:
setMayBeDemotedToDiscretionary:
setDiscretionaryOverride:
set_discretionaryOverride:
setExpectedProgressTarget:
set_expectedProgressTarget:
setBytesPerSecondLimit:
set_bytesPerSecondLimit:
setLoadingPriority:
set_loadingPriority:
setDiscretionary:
_requiresPowerPluggedIn
allowsCellularAccess
_socketStreamProperties
hasStarted
setProperty:forKey:
startResourceTimer
backgroundTaskDidResume:
setPersonaUniqueString:
userPersonaUniqueString
currentPersona
sharedManager
setQos:
setSuspendCount:
suspendCount
backgroundTaskDidSuspend:
setResumedAndWaitingForEarliestBeginDate:
cancelByProducingResumeData:
initWithDataTask:uniqueIdentifier:bundleID:sessionID:
dataTaskWithRequest:
setFileURL:
sharedCredentialStorage
credentialWithUser:password:persistence:
initWithHost:port:protocol:realm:authenticationMethod:
realm
protocol
password
user
initWithUploadTask:uniqueIdentifier:bundleID:sessionID:
uploadTaskWithStreamedRequest:
uploadTaskWithRequest:fromFile:
_isSafeFileForBackgroundUpload:withToken:
initWithDownloadTask:uniqueIdentifier:bundleID:sessionID:
_downloadTaskWithRequest:downloadFilePath:
_isSafeRequestForBackgroundDownload
downloadTaskWithResumeData:
_requestFromResumeData
setCreationTime:
timeIntervalSinceReferenceDate
set_pathToDownloadTaskFile:
pathToDownloadTaskFile
set_storagePartitionIdentifier:
storagePartitionIdentifier
set_uniqueIdentifier:
uniqueIdentifier
startedUserInitiated
_onBehalfOfPairedDevice
_timeWindowDelay
set_DuetActivityProperties:
_effectiveConfiguration
copyItemAtURL:toURL:error:
getBytes:length:
removeObject:
resumedAndWaitingForEarliestBeginDate
setHasStarted:
setStartedUserInitiated:
publish
unpublish
progress
_backgroundPublishingURL
createPersonaContextForBackgroundProcessingWithPersonaUniqueString:
personaUniqueString
updateCurrentRequest:
setRespondedToWillBeginDelayedRequestCallback:
respondedToWillBeginDelayedRequestCallback
timeIntervalSinceNow
earliestBeginDate
discretionaryOverride
_propertyForKey:
_tlsSessionCachePrefix
setCountOfBytesExpectedToReceive:
setCountOfBytesExpectedToSend:
countOfBytesExpectedToSend
setCountOfBytesReceived:
setCountOfBytesSent:
countOfBytesSent
resourceTimeoutError
fileURL
setRetryCount:
retryCount
lowThroughputTimerRetryCount
setLowThroughputTimerRetryCount:
willRetryBackgroundDataTask:withError:transactionMetrics:
set_metrics:
expectedProgressTarget
bytesPerSecondLimit
loadingPriority
setStartTime:
creationTime
setCountOfBytesClientExpectsToReceive:
countOfBytesClientExpectsToReceive
setCountOfBytesClientExpectsToSend:
countOfBytesClientExpectsToSend
setEarliestBeginDate:
initWithBackgroundTaskInfo:taskGroup:
defaultTaskGroup
encodedData
encodeObject:forKey:
initRequiringSecureCoding:
createResumeInformation:
immutableEffectiveConfigurationFromSessionConfig:
mayBeDemotedToDiscretionary
_setTimeWindowDelay:
_setTimeWindowDuration:
timeoutIntervalForResource
_timeWindowDuration
finishTasksAndInvalidate
URLByAppendingPathComponent:isDirectory:
groupContainerURLs
applicationProxyForIdentifier:
setPath:
_allowsExpensiveAccess
allowsExpensiveNetworkAccess
timeoutIntervalForRequest
_infersDiscretionaryFromOriginatingClient
_allowsRetryForBackgroundDataTasks
_useTLSSessionCacheFromSession:
sessionWithConfiguration:delegate:delegateQueue:
_sessionSendsLaunchOnDemandEvents
sessionSendsLaunchEvents
setSkip_download_unlink:
set_socketStreamProperties:
set_forcedNetworkServiceType:
set_clientIsNotExplicitlyDiscretionary:
_clientIsNotExplicitlyDiscretionary
set_duetPreClearedMode:
_duetPreClearedMode
set_allowsSensitiveLogging:
_allowsSensitiveLogging
set_requiresClientToOpenFiles:
set_sourceApplicationAuditTokenData:
set_watchExtensionBundleIdentifier:
set_requiresPowerPluggedIn:
set_shouldSkipPreferredClientCertificateLookup:
_shouldSkipPreferredClientCertificateLookup
set_timingDataOptions:
_timingDataOptions
set_preventsIdleSleepOnceConnected:
set_longLivedConnectionCachePurgeTimeout:
set_connectionCachePurgeTimeout:
set_tcpConnectionPoolName:
set_multipathAlternatePort:
_multipathAlternatePort
setAllowsConstrainedNetworkAccess:
allowsConstrainedNetworkAccess
setAllowsExpensiveNetworkAccess:
set_allowsConstrainedNetworkAccess:
_allowsConstrainedNetworkAccess
set_allowsExpensiveAccess:
setShouldUseExtendedBackgroundIdleMode:
setWaitsForConnectivity:
setAllowsCellularAccess:
setURLCredentialStorage:
setURLCache:
setHTTPCookieStorage:
set_prefersInfraWiFi:
set_alwaysPerformDefaultTrustEvaluation:
_alwaysPerformDefaultTrustEvaluation
set_IDSMessageTimeout:
_IDSMessageTimeout
set_requiresSustainedDataDelivery:
_requiresSustainedDataDelivery
set_onBehalfOfPairedDevice:
set_TCPAdaptiveWriteTimeout:
_TCPAdaptiveWriteTimeout
set_TCPAdaptiveReadTimeout:
_TCPAdaptiveReadTimeout
set_reportsDataStalls:
_reportsDataStalls
set_allowsTLSFallback:
_allowsTLSFallback
set_allowsTLSFalseStart:
_allowsTLSFalseStart
set_atsContext:
_atsContext
set_authenticatorStatusCodes:
_authenticatorStatusCodes
setNetworkServiceType:
networkServiceType
setHTTPMaximumConnectionsPerHost:
HTTPMaximumConnectionsPerHost
setHTTPAdditionalHeaders:
HTTPAdditionalHeaders
setTLSMaximumSupportedProtocol:
TLSMaximumSupportedProtocol
setTLSMinimumSupportedProtocol:
TLSMinimumSupportedProtocol
setConnectionProxyDictionary:
connectionProxyDictionary
setTimeoutIntervalForResource:
setTimeoutIntervalForRequest:
defaultSessionConfiguration
_version
setVersion:
setHasVersion:
hasVersion
hasLaunchUUID
version
_headerData
_continueLoad
hasHeaderData
setContinueLoad:
setHasContinueLoad:
hasContinueLoad
headerData
setHeaderData:
continueLoad
_receivedData
hasReceivedData
receivedData
setReceivedData:
_additionalProperties
hasAdditionalProperties
additionalProperties
setAdditionalProperties:
_taskDescription
hasTaskDescription
taskDescription
setTaskDescription:
_dynamicStoreSource
_blocksToExecuteAfterNetworkChange
_networkChangeEventCount
_symptomToken
performBlockAfterNetworkChangedEvent:numberOfPreviousRetries:
performBlockAfterNetworkChangedEvent:delay:
handleDynamicStoreCallback:changedKeys:
handleBetterNetworkEvent
startMonitoringDynamicStore
stopMonitoringDynamicStore
stop
sharedMonitor
_connection
_listener
_registeredClients
_pendingWakes
handleNewConnection:
canLaunchProcessWithIdentifier:
launchProcessWithIdentifier:sessionIdentifier:
wakeClientUponNotification:sessionIdentifier:
removePendingWakeForClient:sessionIdentifier:
sharedUserEventAgentConnection
encodeWithCoder:
initWithCoder:
supportsSecureCoding
whitelistedClassesForUnarchiving
getComponentsForFullIdentifier:bundleIdentifier:sessionIdentifier:
messageSubclassForMessageType:isReply:
objectAtIndex:
componentsSeparatedByString:
setWithArray:
_nsurlsessionproxy_secureArchivedDataWithRootObject:
initForReadingFromData:error:
setByAddingObject:
decodeObjectOfClasses:forKey:
_nsurlsessionproxy_secureUnarchiveObjectOfClass:withData:
_shouldPreserveBackgroundSessionDisposition
_nsurlsessionproxy_requiresBackgroundSession
_nsurlsessionproxy_cancelWithError:
_nsurlsessionproxy_clearError
_nsurlsessionproxy_error
lowercaseString
_nsurlsessionproxy_isSafeRequest
_nsurlsessionproxy_launchUUID
_nsurlsessionproxy_setLaunchUUID:
_nsurlsessionproxy_sessionUUID
_nsurlsessionproxy_setSessionUUID:
_nsurlsessionproxy_sessionIdentifier
_nsurlsessionproxy_taskIdentifier
_nsurlsessionproxy_sequenceNumber
_nsurlsessionproxy_setSequenceNumber:
_nsurlsessionproxy_messagePriority
_nsurlsessionproxy_setMessagePriority:
_initWithActualError:
_actualError
_initWithActualRequest:
_actualRequest
_initWithActualResponse:
_actualResponse
_initWithActualAuthChallenge:
_actualAuthChallenge
_initWithActualCredential:
_actualCredential
_actualConfiguration
_setActualConfiguration:
_actualAdditionalProperties
_setActualAdditionalProperties:
_actualTaskInfo
_setActualTaskInfo:
_actualAuthHeaders
_setActualAuthHeaders:
oldDaemonPath
oldNonDataVaultDaemonPath
nsurlsessiondPath
bundleManagerPath:
sessionPath:forBundleID:
nsurlsessiondLaunchdPath
removeItemAtPath:
removeItemAtURL:
createDataVaultDirectoryAtPath:
createDirectoryAtPath:
createDirectoryAtURL:
defaultDownloadDirectoryContainer
defaultDownloadDirectoryForBundleID:
setDaemonWorkState:
updateStreamingZipModificationDate:
removeStreamingZipModificationDate:
fetchStreamingZipModificationDate:
markItemAsPurged:
itemShouldBePurged:
dateWithTimeIntervalSinceReferenceDate:
removeItemAtPath:error:
createFileAtPath:contents:attributes:
URLForDirectory:inDomain:appropriateForURL:create:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
cStringUsingEncoding:
_streamErrorCode
_streamErrorDomain
setStreamErrorDomain:
setHasStreamErrorDomain:
hasStreamErrorDomain
setStreamErrorCode:
setHasStreamErrorCode:
hasStreamErrorCode
streamErrorDomain
streamErrorCode
_archiveList
hasArchiveList
archiveList
setArchiveList:
_bundleIdentifier
_observers
isInTransitionalDiscretionaryPeriod
_currentRequestDelay
initWithIdentifier:
containerURL
supportsWakes
wakeForSessionIdentifier:withSessionUUID:
hasForegroundBackgroundStates
isForeground
isAwake
canBeSuspended
isSuspended
isBeingDebugged
hasBackgroundTaskCompletion
isHandlingBackgroundURLSessionWithIdentifier:withSessionUUID:
addObserver:
removeObserver:
invokeSelectorForAllObservers:
backgroundUpdatesEnabled
_onqueue_resetRequestDelay
setIsInTransitionalDiscretionaryPeriod:
bundleIdentifier
setBundleIdentifier:
currentRequestDelay
setCurrentRequestDelay:
removeObjectAtIndex:
indexOfObject:
initialize
applicationWithIdentifier:
springboardApplicationWithBundleIdentifier:
springBoardApplicationExistsWithIdentifier:
cloudContainerWithIdentifier:
fileProviderWithIdentifer:applicationIdentifier:
initWithIdentifier:applicationIdentifier:
_monitor
_isForeground
_initializedForegroundState
_springboardApplication
providerDidEnterForeground:
providerDidEnterBackground:
removeObserver:forProviderID:
addObserver:forProviderID:
_delayTimer
_nonDiscretionaryGracePeriodTimer
_extendedNonDiscretionaryGracePeriodTimer
_transitionalDiscretionaryStateTimer
_containingApplication
applicationBackgroundUpdatesTurnedOff:
applicationBackgroundUpdatesTurnedOn:
setupDelayTimer
setupTransitionalDiscretionaryPeriodTimer
disableTransitionalDiscretionaryPeriodTimer
startTransitionalDiscretionaryPeriodTimer
requestDelayQueue
dataContainerURL
containingBundle
pluginKitProxyForIdentifier:
providerIDForBundle:sharedContainerIdentifier:
providerIDForApplication:sharedContainerIdentifier:
_initializedForegroundStateFromMonitorCallback
containerDidEnterForeground:
containerDidEnterBackground:
removeObserver:forContainerID:
addObserver:forContainerID:
isContainerIDForeground:
containerIDForPrimaryIdentifier:secondaryIdentifier:
bundleIDForPrimaryIdentifier:secondaryIdentifier:
bundleIDFromPrimaryIdentifier:secondaryIdentifier:
containerIDFromPrimaryIdentifier:secondaryIdentifier:
_request
hasRequest
request
setRequest:
_reason
setReason:
setHasReason:
hasReason
reason
_tasksInitialized
_tasksEnqueued
_activeTasksLock
_monitorTaskLock
_activeTasks
_monitorTask
_monitorTaskSet
_bridgeTasks
uploadContent
willSwitchUser
startUMTask:taskInfo:
startBridgingUMTask:
endBridgingUMTask:
endUMTask:
restoredTaskEnqueued:
restoredTaskActive:
tasksHaveBeenEnqueued
willSwitchToUser:
readyToSwitchToUser:
activeTasks
setActiveTasks:
activeTasksLock
setActiveTasksLock:
monitorTask
setMonitorTask:
monitorTaskSet
setMonitorTaskSet:
monitorTaskLock
setMonitorTaskLock:
tasksInitialized
setTasksInitialized:
tasksEnqueued
setTasksEnqueued:
bridgeTasks
setBridgeTasks:
begin
taskWithName:reason:
allValues
enumerateObjectsUsingBlock:
taskWithName:reason:forBundleID:
EDUMode
sharedStakeholder
isMultiUser
registerUserSyncStakeholder:withMachServiceName:
_shouldCancel
setShouldCancel:
setHasShouldCancel:
hasShouldCancel
shouldCancel
_cachedCredentials
_cachedDefaultCredentialUsers
_bundleID
initWithDelegate:forBundleID:
populateWithInitialCredentials
credentialsForProtectionSpace:
allCredentials
setCredential:forProtectionSpace:
removeCredential:forProtectionSpace:
defaultCredentialForProtectionSpace:
setDefaultCredential:forProtectionSpace:
reset
bundleID
setBundleID:
credStorage_setDefaultCredential:forProtectionSpace:
credStorage_defaultCredentialForProtectionSpace:reply:
synchronousRemoteObjectProxyWithErrorHandler:
credStorage_setCredential:forProtectionSpace:
dictionaryWithDictionary:
credStorage_allCredentialsWithReply:
credStorage_credentialsForProtectionSpace:reply:
credStorage_getInitialCredentialDictionariesWithReply:
_hasBodyStream
setHasBodyStream:
setHasHasBodyStream:
hasHasBodyStream
hasBodyStream
_sessionConfiguration
_tasks
_taskIdentifiersToSequenceNumbers
_taskIdentifiersToBodyStreams
_taskIdentifiersToInitialBodyInputStreams
_taskIdentifiersToWaitingReasons
_taskIdentifiersToPendingDataBytes
_taskIdentifiersToPendingDataCompletion
_streamTasksToDeviceConnections
_streamTasksToIDSTCPConnections
_streamTasksToOpenSocketReplies
_taskIdentifiersRetainingInfraWiFi
_taskIdentifiersRetainingBTLinkAssertion
_deviceConnections
_messagesToReSend
_skipInvalidateMessage
_implementsWillSendRequest
_implementsSessionAuthChallenge
_implementsTaskAuthChallenge
_implementsWillPerformRedirection
_implementsDidReceiveResponse
_isInvalid
_uuidString
_URLSession:connectionEstablishedForStreamTask:
URLSession:readClosedForStreamTask:
URLSession:writeClosedForStreamTask:
URLSession:betterRouteDiscoveredForStreamTask:
URLSession:streamTask:didBecomeInputStream:outputStream:
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:_willRetryBackgroundDataTask:
initWithConfiguration:uuidString:options:delegate:
getTaskInformation
messagePriorityForTaskWithIdentifier:isReply:
sourceApplicationBundleIdentifier
IDSMessageTimeout
messageLoggableDescriptionForTaskWithIdentifier:
shouldRetainInfraWiFi
retainInfraWiFiForTaskWithIdentifier:
releaseInfraWiFiForTaskIfNecessary:
shouldRetainBTLinkAssertion
retainBTLinkAssertionWithIdentifier:
releaseBTLinkAssertionIfNecessary:
devicesConnected
resendPendingMessage:
baseMessage
taskMessageForIdentifier:
handleMessage:ofType:withReply:
handleFailedMessageSend:ofType:
handleDataTaskWithRequestMessage:forTaskIdentifier:withReply:
handleCancelTaskMessage:forTaskIdentifier:
handleSuspendTaskMessage:forTaskIdentifier:
handleResumeTaskMessage:forTaskIdentifier:withReply:
handleSetDescriptionMessage:forTaskIdentifier:
handleSetPriorityMessage:forTaskIdentifier:
handleInvalidateMessage:
handleUploadBodyDataMessage:forTaskIdentifier:withReply:
handleOpenSocketMessage:withReply:
performForwardingFromTCPConnection:toStreamTask:
performForwardingFromStreamTask:toTCPConnection:
setIdentifier:
uuidString
setUuidString:
_ignoreDidReceiveResponseDisposition
intValue
_uniqueIdentifier
getBoundStreamsWithBufferSize:inputStream:outputStream:
readDataOfMinLength:maxLength:timeout:completionHandler:
closeWrite
closeRead
_createDispatchData
writeData:timeout:completionHandler:
initSocketWithDevice:options:completionHandler:queue:
streamTaskWithHostName:port:
streamError
write:maxLength:
bytes
invalidateAndCancel
inputStreamWithData:
propertyForKey:inRequest:
numberWithUnsignedShort:
_companionAppBundleIdentifier
stringByAppendingFormat:
_bytesSent
_totalBytesExpectedToSend
_totalBytesSent
setBytesSent:
setHasBytesSent:
hasBytesSent
setTotalBytesSent:
setHasTotalBytesSent:
hasTotalBytesSent
setTotalBytesExpectedToSend:
setHasTotalBytesExpectedToSend:
hasTotalBytesExpectedToSend
bytesSent
totalBytesSent
totalBytesExpectedToSend
setHasTaskIdentifier:
hasTaskIdentifier
_clientBundleIdentifier
_clientSecondaryIdentifier
_throughputTimer
_progressTimestamps
_progressValues
_throughputInterval
_throughputMonitoringStartTime
_startedDuetReporter
_connectionIsCellular
_hasTransferredData
_explicitlyDiscretionary
_performsNonDiscretionaryThrougputMonitoring
_mayBeDemotedToDiscretionary
_UMSyncTask
_powerMonitorToken
_basePriority
initWithTask:taskInfo:clientBundleIdentifier:secondaryIdentifier:monitoredApplication:priority:options:queue:
currentThroughputThreshold
currentIntervalEndDelta
calculateThroughput
setThroughputTimerForCurrentInterval
startThroughputMonitoring
stopThroughputMonitoring
startThroughputMonitoringIfAppropriate
basePriority
setBasePriority:
removeLastObject
doubleValue
lastObject
firstObject
_challenge
hasChallenge
challenge
setChallenge:
_code
_domain
_userInfo
hasDomain
setCode:
setHasCode:
hasCode
hasUserInfo
domain
setDomain:
code
userInfo
setUserInfo:
_clients
_transactionQueue
_createdDataVault
_privileged
_inSyncBubble
_stakeholder
managerBecameEmpty:bundleID:withCompletionHandler:
listener:shouldAcceptNewConnection:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
createDaemonDirectory
archivePathOldNonDataVault
applicationIsInstalled:
setupNewClassMappingsForUnarchiver
restoreState
getSessionWithIdentifier:forBundleID:
addTransaction
releaseTransaction
waitUntilDeviceIsUnlocked
isPrivileged
setPrivileged:
isInSyncBubble
setInSyncBubble:
stakeholder
setStakeholder:
applicationIdentifier
endTransaction
beginTransaction
setInterruptionHandler:
setInvalidationHandler:
setExportedObject:
setExportedInterface:
bgSessionManagerInterface
isValid
appState
sessionID
sortedArrayUsingComparator:
setClass:forClassName:
isAppUpdate
isPlaceholder
defaultWorkspace
setAttributes:ofItemAtPath:error:
sharedDaemon
_bodyData
hasBodyData
bodyData
setBodyData:
_service
_assertions
_appStates
_observedBackgroundSettings
_backgroundUpdatesAllowed
_monitoredBundleIDs
_assertion_lock
setupMonitor
getBackgroundSettingsAppList
handleBackgroundSettingsChange
handleApplicationStateChange:
addObserver:forApplication:
removeObserver:forApplication:
startMonitoringBundleID:
stopMonitoringBundleID:
applicationStateForBundleID:
applicationIsForeground:
applicationIsAwake:
applicationIsSuspended:
applicationIsBeingDebugged:
isValidAssertion:withReason:name:
application:hasAssertion:withName:
applicationHasBackgroundTaskCompletion:
application:isHandlingBackgroundSessionWithIdentifier:withSessionUUID:
applicationBackgroundUpdatesEnabled:
_onqueue_releaseAssertionForBundleID:sessionID:
releaseAssertionForBundleID:sessionID:
removePendingLaunchTasksForBundleID:sessionID:cancel:
assertionNameForSessionUUID:
takeAssertionForBundleID:sessionID:sessionUUID:
wakeUpApp:forSession:withSessionUUID:
identifierIsForSpringBoardApplication:
openApplication:options:withResult:
dictionaryWithObject:forKey:
initWithBundleIdentifier:flags:reason:name:
unsignedIntValue
applicationInfoForApplication:
NameForReason:
valid
name
isApplicationBeingDebugged:
applicationStateForApplication:
updateInterestedBundleIDs:
allObjects
isEqualToNumber:
isAutomaticAppUpdatesAllowed
sharedConnection
persistentDomainForName:
standardUserDefaults
resetStandardUserDefaults
sharedSpringBoard
setHandler:
_wrapper
_performsNonDiscretionaryThroughputMonitoring
initWithWrapper:monitoredApplication:priority:options:queue:
wrapperWillSuspend
wrapperTransferredData:
currentIntervalDuration
currentIntervalThroughputThreshold
_idsPriority
_sequenceNumber
_sessionIdentifier
hasSessionIdentifier
hasUuidString
setSequenceNumber:
setHasSequenceNumber:
hasSequenceNumber
setIdsPriority:
setHasIdsPriority:
hasIdsPriority
sessionIdentifier
setSessionIdentifier:
sequenceNumber
idsPriority
_error
hasError
error
setError:
consumeExtractedDataIfNeeded
prepareForExtractionToPath:completionBlock:
doesConsumeExtractedData
prepareForExtraction:
supplyBytes:withCompletionBlock:
suspendStreamWithCompletionBlock:
finishStreamWithCompletionBlock:
terminateStreamWithError:completionBlock:
extractorDelegate
setExtractorDelegate:
knownSZExtractorImplementations
_extractorPreparedForExtraction
set_extractorPreparedForExtraction:
set_timeoutIntervalForResource:
set_disallowCellular:
getUUIDBytes:
set_nw_activity:
_onqueue_adoptEffectiveConfiguration:
initializeHTTPAuthenticatorWithAppleIDContext:statusCodes:
set_authenticatorConfiguredViaTaskProperty:
set_backgroundPublishingURL:
_DuetActivityProperties
_hasBeenDrained
_args
initWithCallbackType:taskIdentifier:args:
args
setArgs:
hasBeenDrained
setHasBeenDrained:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeInteger:forKey:
_callbacks
initWithDelegate:
performCallback:
drainCallback:
addPendingCallbackToFront:
addPendingCallback:forceWakeup:
performAllCallbacks
drainCallbacksForTaskIdentifier:
count
insertObject:atIndex:
objectAtIndexedSubscript:
backgroundTask:willBeginDelayedRequest:reply:
backgroundAVAssetDownloadTask:didResolveMediaSelectionProperyList:reply:
openFileAtPath:mode:withReply:
backgroundTask:_willSendRequestForEstablishedConnection:reply:
backgroundSessionDidFinishAppWake:reply:
backgroundSessionDidStartAppWake:reply:
backgroundTask:didReceiveChallenge:reply:
backgroundDownloadTask:didFinishDownloadingToURL:reply:
backgroundTask:didCompleteWithError:taskMetrics:info:reply:
_identifiersToAVWrappers
_identifiersToThroughputMonitors
_identifiersToTCPConnections
_identifiersToDASActivities
_assetDownloadTokensToAssets
_clientConfig
_delayedWakeTimer
NDAVAssetDownloadSessionWrapper:didCompleteWithError:
NDAVAssetDownloadSessionWrapper:didUpdateProgressWithLastBytesWritten:totalBytesWritten:totalBytesExpectedToWrite:
NDAVAssetDownloadSessionWrapper:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
NDAVAssetDownloadSessionWrapper:didResolveMediaSelectionPropertyList:
setupDelayedCompletionWakeTimer
cancelDelayedCompletionWakeTimer
setupThroughputMonitorForWrapper:taskInfo:identifier:
cancelThroughputMonitorForWrapper:
updatePriorityForTaskID:
avAssetDownloadsDirectory
downloadDirectoryToUse:
destinationURLToUseForTask:
downloadTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:identifier:uniqueIdentifier:reply:
dataTaskWithRequest:originalRequest:pipeHandle:identifier:uniqueIdentifier:reply:
hasEntitlementToSpecifyDownloadDestinationURL
avAssetForURL:downloadToken:
cancelAVDownloadAndFailTaskWithIdentifier:withError:
setPriority:forTCPConnectionWithTaskIdentifier:
retryTask:originalError:
adjustedTCPConnectionPriorityForTaskPriority:
newAVAssetDownloadSessionWrapperForTaskInfo:
ensureAVAssetDownloadSessionWrapperForTaskIdentifier:
startAVAssetDownloadSessionWithTaskIdentifier:
stopAVAssetDownloadSessionWithTaskIdentifier:
cancelTCPConnectionForTask:withError:
taskWithIdentifier:didCompleteWithError:
setResolvedMediaSelectionPlist:
backgroundAVAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
backgroundAVAssetDownloadTaskDidUpdateProgress:totalBytesWritten:totalBytesExpectedToWrite:
_destinationURLToUse
setAVURLAsset:
backgroundAVAssetDownloadTask:didReceiveDownloadToken:
setAVAssetDownloadToken:
_URLToUse
_AVAssetDownloadSesssionOptions:config:
AVURLAsset
absoluteString
caseInsensitiveCompare:
setAVAssetURL:
URLAssetWithURL:options:
setInitializedWithAVAsset:
initWithAVAggregateAssetDownloadChildDownloadSessionIdentifier:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:
backgroundAVAssetDownloadTask:willDownloadToURL:
setDestinationURL:
setAssetArtworkData:
setAssetTitle:
setTemporaryDestinationURL:
initializedWithAVAsset
initWithAVAssetDownloadURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:
substringWithRange:
stringByAddingPercentEncodingWithAllowedCharacters:
assetTitle
removeCharactersInString:
URLPathAllowedCharacterSet
AVAssetDownloadToken
isFileURL
URLByDeletingLastPathComponent
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
_web_errorWithDomain:code:failingURL:
AVAssetURL
initWithKeyOptions:valueOptions:capacity:
originalNetworkContentURL
temporaryDestinationURL
assetArtworkData
setOptions:
valueWithBytes:objCType:
initWithDispatchQueue:
addOperationWithBlock:
maxConcurrentOperationCount
@"NSURL"
@"NSMutableDictionary"
@"NSDate"
@"NSObject<OS_dispatch_queue>"
@32@0:8@16@?24
v16@0:8
v32@0:8Q16@24
d16@0:8
v24@0:8d16
@16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
@"NSString"
@"PDURLSessionProxySessionMessage"
{?="port"b1}
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8I16
v20@0:8B16
B24@0:8@16
Q16@0:8
I16@0:8
@"NSURLSessionTask"
@24@0:8@16
v32@0:8Q16Q24
@"PDURLSessionProxyCredential"
@"PDURLSessionProxyTaskMessage"
{?="disposition"b1}
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@"NSData"
{?="delegateImplementsDidReceiveResponse"b1"delegateImplementsSessionAuthChallenge"b1"delegateImplementsTaskAuthChallenge"b1"delegateImplementsWillPerformRedirection"b1"delegateImplementsWillSendRequest"b1"supportsRedirects"b1}
v32@0:8q16@24
{?="priority"b1}
@"PBCodable"
@28@0:8@16S24
S16@0:8
v20@0:8S16
@"IDSService"
@"NSMutableSet"
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v28@0:8@16B24
q32@0:8@16S24B28
q24@0:8@16
Q24@0:8q16
B32@0:8Q16q24
v64@0:8@16S24@28@36B44q48@?56
v36@0:8@16S24@?28
v28@0:8@16S24
v44@0:8@16@24S32@36
v36@0:8@16B24@28
@"NSObject<OS_dispatch_source>"
@"PDBluetoothCompanionLinkAssertion"
v24@0:8@"PDURLSessionProxyServer"16
@"NSUUID"
@"CBScalablePipeManager"
v24@0:8@"CBScalablePipeManager"16
v40@0:8@"CBScalablePipeManager"16@"NSString"24@"NSError"32
v32@0:8@"CBScalablePipeManager"16@"NSString"24
v32@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24
v40@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24@"NSError"32
@"PDURLSessionProxyRequest"
{?="taskSequenceNumber"b1}
v24@0:8Q16
@"PDURLSessionProxyResponse"
@"AVAssetDownloadSession"
@"AVURLAsset"
@"<NDAVAssetDownloadSessionWrapperDelegate>"
@"NSDictionary"
@"NSValue"
@56@0:8@16@24@32@40@48
@"NSXPCConnection"
@"<NDSessionManagerDelegate>"
v32@0:8@"NDBackgroundSession"16@?<v@?>24
v32@0:8@16@?24
v56@0:8@"NSURLSessionConfiguration"16@"<NDBackgroundSessionClient>"24@"NSURL"32@"NSDictionary"40@?<v@?@"<NDBackgroundSessionProtocol>"@"NSDictionary"B>48
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?>16
v56@0:8@16@24@32@40@?48
@36@0:8@16@24B32
@24@0:8^B16
B32@0:8@16@24
@"NSURLSession"
@"NDCredentialStorage"
@"NDApplication"
@"NSMutableArray"
@"NDCallbackQueue"
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"
@"<NDBackgroundSessionDelegate>"
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"16@0:8
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary">40
v44@0:8@"NSURLSession"16@"NSString"24i32@?<v@?i>36
v28@0:8@"NSURLSession"16B24
v48@0:8@"NSURLSession"16@"NSString"24Q32@?<v@?i{?=qi}>40
v44@0:8@16@24i32@?36
v48@0:8@16@24Q32@?40
v48@0:8@16@24@32@?40
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURLResponse"32
@"NSURL"32@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24
@32@0:8@16@24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v40@0:8@16@24q32
v36@0:8@16@24B32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v56@0:8@16@24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v48@0:8@16@24q32q40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32@?<v@?>40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v24@0:8@"NSError"16
v32@0:8@"NSError"16@?<v@?q@"NSURLCredential">24
@"NSString"24@0:8Q16
@24@0:8Q16
v64@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSString"32Q40@"NSUUID"48@?<v@?B>56
v80@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSURL"32@"NSData"40Q48@"NSUUID"56@"NSDictionary"64@?<v@?B>72
v56@0:8@"NSURLRequest"16@"NSURLRequest"24Q32@"NSUUID"40@?<v@?B>48
v48@0:8@"NSData"16Q24@"NSUUID"32@?<v@?B>40
v32@0:8Q16@?<v@?@"NSData">24
v32@0:8Q16@"NSDictionary"24
v32@0:8@"NSString"16Q24
v32@0:8q16Q24
v32@0:8d16Q24
v24@0:8@"NSString"16
v48@0:8Q16@"NSDictionary"24@"NSString"32@?<v@?B>40
v96@0:8Q16@"NSURL"24@"NSURL"32@"NSURL"40@"NSString"48@"NSData"56@"NSDictionary"64Q72@"NSUUID"80@?<v@?B>88
v88@0:8Q16@"NSArray"24@"NSString"32@"NSData"40@"NSDictionary"48@"NSString"56Q64@"NSUUID"72@?<v@?B>80
v64@0:8@16@24@32Q40@48@?56
v80@0:8@16@24@32@40Q48@56@64@?72
v56@0:8@16@24Q32@40@?48
v48@0:8@16Q24@32@?40
v32@0:8Q16@?24
v32@0:8@16Q24
v48@0:8Q16@24@32@?40
v96@0:8Q16@24@32@40@48@56@64Q72@80@?88
v88@0:8Q16@24@32@40@48@56Q64@72@?80
v24@0:8@"NDApplication"16
d24@0:8d16
@28@0:8@16B24
@84@0:8@16@24B32@36@44@52@60@68@76
@20@0:8B16
@24@0:8q16
@32@0:8@16^B24
B40@0:8@16@24@32
v48@0:8@16Q24@32B40B44
B20@0:8B16
q20@0:8B16
v28@0:8Q16B24
@32@0:8@16Q24
v44@0:8@16@24Q32B40
B24@0:8Q16
B24@0:8^{__SecTrust=}16
{?="version"b1}
{?="continueLoad"b1}
^{__CFRunLoopSource=}
v32@0:8@?16Q24
v32@0:8@?16q24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
@"NSObject<OS_xpc_object>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v40@0:8@16^@24^@32
#24@0:8S16B20
@32@0:8#16@24
q16@0:8
v24@0:8q16
{?="streamErrorCode"b1"streamErrorDomain"b1}
v24@0:8:16
@"FPProviderMonitor"
@"NDSpringBoardApplication"
@"BRContainersMonitor"
{?="reason"b1}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"UMUserSyncTask"
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{?="shouldCancel"b1}
@"<NDCredentialStorageDelegate>"
{?="hasBodyStream"b1}
@"NSURLSessionConfiguration"
@"<PDURLSessionProxyServerDelegate>"
v32@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24@"NSInputStream"32@"NSOutputStream"40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
@48@0:8@16@24Q32@40
q28@0:8Q16B24
v40@0:8@16Q24@?32
{?="bytesSent"b1"totalBytesExpectedToSend"b1"totalBytesSent"b1}
{?="taskIdentifier"b1}
@"__NSCFURLSessionTaskInfo"
@80@0:8@16@24@32@40@48q56Q64@72
@"PDURLSessionProxyAuthChallenge"
{?="code"b1"version"b1}
@"NDUserSyncStakeholder"
v40@0:8@"NDSessionManager"16@"NSString"24@?<v@?>32
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"BKSApplicationStateMonitor"
@"BKSSystemService"
I24@0:8@16
B36@0:8@16I24@28
@"NDAVAssetDownloadSessionWrapper"
@56@0:8@16@24q32Q40@48
{?="idsPriority"b1"sequenceNumber"b1}
@"PDURLSessionProxyError"
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"<SZExtractorDelegate>"16@0:8
v24@0:8@"<SZExtractorDelegate>"16
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
@"NSArray"
@36@0:8i16Q20@28
@"<NDCallbackQueueDelegate>"
@"NSMapTable"
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSError"24
v48@0:8@"NDAVAssetDownloadSessionWrapper"16Q24Q32Q40
v48@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSValue"24@"NSArray"32@"NSValue"40
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSDictionary"24
v48@0:8@16Q24Q32Q40
v40@0:8@16@24Q32
q24@0:8q16
[Disk Metrics] file writing error: %@
[Disk Metrics] file reading error: %@
Failure trying to unarchive file at %@ error: %@ [%d]
Error %d renaming item at %@ to %@
Error %d renaming item at %@ to %@. Won't try to unarchive.
SIGTERM received, shutting down.
%@: didSwitchActivePairedDevice
%@: activeAccountsChanged: %@
%@::%@ success = %c, identifier = %{public}@, error = %@ [%ld]
Failed to send PDURLSessionProxy startup message, error %@
%@::%@ outgoingResponseIdentifier = %{public}@, type = %u, isResponse = %c, data length = %lu
%@ received protobuf of type %u which could not be decoded! isResponse = %c, data length = %lu
Received PDURLSession Startup message with launchUUID %@
Received PDURLSessionProxy message with new launchUUID %@
Dropping NSURLSessionProxy message with old launchUUID %@
Received PDURLSessionProxy Startup message (without a launchUUID)
%{public}@ receiving NSURLSession proxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu
Incoming (non-reply) message with identifier %{public}@ has priority %lld and sequence number %llu
Received a reply with identifier %@ but don't have a corresponding reply block
Subclass did not handle message send failure for message %@
Subclass did not handle message %@ of type %u
%@::%@ type = %u, connected = %c, isReply = %c, sourceApplication = %@, msgTO = %ld
Unable to determine source application for message
Failed to send message! Type = %u, error = %@ [%ld]
%{public}@ sent NSURLSessionProxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu, result = %c
Timed out waiting for reply for message, identifier = %{public}@, type = %u
Received a message of priority %ld with lower sequence number %llu than existing sequence number %llu. Dropping message.
PDURLSessionProxyService setting preferInfraWiFi to %c
%@ Connected to post PDURL device - resetting state
%@ Updated device state connected = %c
%@ sent startup message with identifier %@
sendProtobuf: returned NO for PDURLSessionProxy startup message, error %@ [%ld]
%@: Devices unpaired
PDURLSessionProxyService setting preferInfraWiFi to NO
PDURLSessionProxyServerService received CreateSession message for identifier %@ with existing UUID %@. Ignoring message.
PDURLSessionProxyServerService received CreateSession message for identifier %@ with UUID %@
PDURLSessionProxyServerService received message of type %u for session %@
PDURLSessionProxyServerService received Invalidate message for unknown session identifier %@, replying with BecameInvalid message
NSURLSessionProxy message of type %u received for unknown session with identifier %@
Received NSURLSessionProxy message of type %u without a session identifier
%{public}@: Invalidating...
%{public}@: Acquiring...
%{public}@: Relinquishing link requirements for %@
%{public}@: Releasing %{public}@
Starting AVAssetDownloadSession
Releasing power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Taking power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Failed to take power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Disavowing AVAssetDownloadSession
Got a nil AVAssetDownloadSession
CacheDelete callback registration succeeded.
CacheDelete callback registration failed!
CacheDelete request - Purged %@ [%zu bytes]
Purged %lld bytes on volume %@.  CacheDelete requested %lld.
Informing CacheDelete purgable bytes %lld on %@
Obliterating session manager for bundle ID: %@
Removing session with identifier: %@ for bundle id: %@
obliterateAllSessions for bundleID %@
Signalled that it is okay to send pending callbacks for session %@ that we have no record of. This shouldn't happen
releaseAssertionForSession: %@
sendPendingCallbacksForIdentifier: %@
Asked to send pending callbacks for session %@ that we have no record of. This shouldn't happen
Session with identifier: %@ for bundle id: %@ already has a connected client, returning nil proxy object to client
Connected client is an extension is attempting to a connect to a session without a valid shared data container
Reconnecting session with identifier: %@ for bundle id: %@
Connected client is an extension and did not specify a valid shared container identifier
Creating session with identifier: %@ for bundle id: %@
Coudn't create session with identifier: %@ for bundle id: %@
Client specified shared container identifier %@. %@ can access: %d
Client %@ tried to specify a shared container that it cannot access: %@
Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
Client tried to set _connectionPoolName but is missing the %@ entitlement
Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
Client tried to set _duetPreauthorized but is missing the %@ entitlement
Client tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
Ending boost activity from %@
Capturing boost activity from %@
Not restoring session with identifier: %@ for bundleID: %@ since it does not have any tasks
Coudn't restore session with identifier: %@ for bundle id: %@
Missing or invalid configuration.plist for bundleID: %@, sessionID: %@. Removing session directory
No directory for bundleID: %@, sessionID: %@
Launching application %@ since we could not restore session %@
%{public}@ getAuthHeadersForResponse for %@ _sendsLaunchEvents=%s [_clientApplication supportsWakes]=%s
%{public}@ waking %@ for auth headers
%{public}@ getAuthHeadersForResponse does not have a remote object and does not support app wakes, canceling.
%{public}@ received auth headers for response, continueLoad: %d
Failed to communicate with HTTP Authenticator for Client %@
Need file descriptor for file at path %@
Client %@ does not support app wakes, cannot get file descriptor for download file!
Client %@ does not support app wakes, but it is still running. Will attempt to get file descriptor for download file.
%{public}@ download for client %@ received response, status code: %d
%{public}@ for client %@ conditions changed - satisfied: %d
%{public}@ for client %@ is waiting for connection - reason: %lld
%{public}@ for client %@ _willSendRequestForEstablishedConnection
Client does not implement _willSendRequestForEstablishedConnection, so using proposed request
%{public}@ established a connection which requires the client to be running, but it isn't running and doesn't support app wakes. Canceling the task.
Perhaps the client %@ was uninstalled?
%{public}@ using proposed request since the client application is not running and doesn't support wakes
%{public}@ didResumeAtOffset: %lld expectedTotalBytes: %lld
%{public}@ finished downloading to %@
%{public}@ became download task
%{public}@ did receive data (%lld of %lld total bytes)
%{public}@ received data and there is no connected client. Canceling task.
%{public}@ didReceiveResponse: %@, status code: %d
%{public}@ received data task didReceiveResponse callback and there is no connected client. Canceling task.
%{public}@ client responded to didReceiveResponse with disposition %d
%{public}@ client disconnected with didReceiveResponse outstanding, responding with a cancel disposition
%{public}@ for client %@ will be retried after error %@ - code: %ld
%{public}@ failed to retry
%{public}@ completed with error %@ [%ld]. C(%c)
%{public}@ for client %@ was cancelled
%{public}@ for client %@ completed with error - code: %ld
%{public}@ for client %@ completed successfully
%{public}@ needs new body stream
%{public}@ modifying conditional connection properties since new request %@ is to a different host than previous request %@
%{public}@ willPerformHTTPRedirection, response: %@, new request: %@
%{public}@ didReceiveChallenge: %@ protection space: %@ for client %@ received auth challenge with type %@
%{public}@ performing Extended Validation Trust evaluation
%{public}@ Extended Validation Trust evaluation succeeded
%{public}@ Extended Validation Trust evaluation failed
%{public}@ client doesn't implement session-level or task-level auth challenge delegate, performing default handling for auth challenge
%{public}@ client doesn't implement task-level auth challenge delegate, performing default handling for auth challenge
%{public}@ client is not running and doesn't support app wakes, performing default handling for auth challenge
%{public}@ client is not running and trust is valid, performing default handling for auth challenge
%{public}@ client is not running and challenge has a previousFailureCount of 0 and a proposedCredential, performing default handling for auth challenge
Invalid trust status: %ld
Extended trust validation failed
Session %@ didBecomeInvalidWithError: %@ [%ld]
InvalidateWithReply: for session %@ bundle ID %@
Cleaning up and invalidating immediately since there are no tasks
%{public}@ setting discretionaryOverrride to %c
%{public}@ attempted to set discretionaryOverrride to %c but lacks required entitlement %@
%{public}@ setting limit of %lld bytes per second
%@ tried to set the loading priority of a task but is missing the %@ entitlement
%{public}@ setting loading priority to %f
%@ tried to set the priority of a task but is missing the %@ entitlement
%{public}@ setting priority to %ld
%{public}@ setPropertyOnStreamWithIdentifier, client %@ property %@
%{public}@ cancelling, as we are low on disk space
%{public}@ resumeTaskWithIdentifier, props %@
%{public}@ resuming, QOS(0x%x)
%{public}@ unable to get the space available on disk
%{public}@ suspendTaskWithIdentifier
%{public}@ cancelTaskWithIdentifier
%{public}@ received resume data
Task <%{public}@>.<%lu> dataTaskWithRequest: %@
Task <%{public}@>.<%lu> uploadTaskWithRequest: %@ fromFile: %@
Received a background upload request for a file that the client cannot read: %@ from %@
Task <%{public}@>.<%lu> downloadTaskWithRequest: %@
Received an unsafe request for background download: %@ from %@
Received a background download request from unsafe resume data from %@
Couldn't create task or taskInfo: task = %@, taskInfo = %@
%{public}@ enqueueing
%{public}@ adding delay of %f
%{public}@ is duet preauthorized
Not waking up client %@ since sessionSendsLaunchEvents is NO
Not waking up client %@ since it doesn't support app wakes
Not waking up client %@ since session is obliterated
Not waking up client %@ since it's already connected
Not waking up client %@ since background updates are not enabled
Waking up the client app: %@
Failed to wake app: %@
%{public}@ skipping acknowledgement teardown since it's not actually complete
Couldn't deliver auth challenge to client, performing default handling
Created stream with file descriptor: %d
Failed to consume sandbox extension %s for fileURL %@
Error copying upload file: %@ [%ld]
%{public}@ suspending
%{public}@ cannot resume because task: %@ or taskInfo: %@ is nil
%{public}@ resuming
%{public}@ will begin
%{public}@ cannot handle delayed request callback because task: %@ or taskInfo: %@ is nil
%{public}@ already replied to delayed request callback - not calling again
%{public}@ receiving delayed request callback
%{public}@ client is not running and doesn't support wakes, continuing load for delayed request
%{public}@ skipping delayed request callback - delegate not implemented
%{public}@ using new request from delayed request callback
%{public}@ will be canceled due to delayed request callback
%{public}@ continuing load from delayed request callback
%{public}@ should not begin before %@
%{public}@ can begin immediately - begin date is in past
%{public}@ has not requested a begin delay
%{public}@ can now begin - earliest begin date satisfied
%{public}@ no longer has a valid task or taskInfo, no need to begin
%{public}@ ignoring stale delay begin timer
%{public}@ for %@ is overriding discretionary status by request - forcing to %c
%{public}@ for %@ is overriding discretionary status - forcing to %c
%{public}@ current discretionary status for %@ is non-discretionary because the connected client is an extension
%{public}@ current discretionary status for %@ is non-discretionary, since the app is being debugged
%{public}@ current discretionary status for %@ is non-discretionary, since nsurlsessiond is running in EDU sync mode
%{public}@ current discretionary status for %@ is discretionary (opt-in: %d)
%{public}@ current discretionary status for %@ is non-discretionary
Session: %@ get tasks for reconnection: %@
Received signal to deliver pending events for client session: <%@>.<%@>
Delivering pending events for client session: <%@>.<%@>
Application %@ is not handling a background URLSession but we still received a signal to deliver pending events
Delivering pending events immediately for client session: <%@>.<%@>. Signalled already: %d, isHandlingBackgroundSession: %d
Waiting for notification to deliver pending events for client session: <%@>.<%@>
%{public}@ not resumed but client disconnected, terminating it with timeout
%{public}@ not resumed but client disconnected, resuming it implicitly
%{public}@ will retry after %lld seconds
Download directory for bundle %@ has moved to %@, but saved download file path is %@. Need to fix download path
New download path: %@
%{public}@ completed with error %@ [%ld] (was active before nsurlsessiond exit)
Couldn't recreate existing task with identifier: %@ in session: <%@>.<%@>
Exception caught while restoring a task: %@
%{public}@ restoring, which had never been started, will resume implicitly
%{public}@ restored but never started, terminating with timeout
%{public}@ error creating resume data: %@
%{public}@ could not create resume data. The server might not support resumable downloads. Will retry full download
%{public}@ download created from resume data
%{public}@ couldn't create new task. task: %@, path: %@
%{public}@ couldn't create new task becuase adjusted request is nil, taskInfo.currentRequest = %@
Session <%@>.<%@> download path %@ did not exist, recreating.
%{public}@ potentially discretionary, re-scheduling, was discretionary: %d, is now discretionary: %d
%{public}@ %f seconds past start time, new delay: %f, new window: %f
Obliterating session: <%@>.<%@>
Application %@ was reinstalled, adjusting download paths
Couldn't find out download directory for re-installed application %@. It must not have been re-installed properly. Obliterating session
PlugIn %@ connected to session <%@>.<%@>
Client %@ is acting on behalf of cloud documents container with container id: %@ and bundle id: %@
Client %@ is acting on behalf of file provider id: %@ and bundle id: %@
Client %@ is acting on behalf of application %@, impersonatingSpringBoardApp: %d
Client %@ is a SpringBoard application
Client %@ is a daemon or non-SpringBoard application
Couldn't find out download directory for %@. Not creating session
Session <%{public}@> is for <%@>.<%@> using resource timeout: %f, request timeout: %f allowsCellularAccess: %d, allowsExpensiveAccess: %d [%d] _sourceApplicationBundleIdentifier: %@, _sourceApplicationSecondaryIdentifier: %@
SCDynamicStoreCreateRunLoopSource failed: %s [%d]
SCDynamicStoreSetNotificationKeys failed: %s [%d]
Simulating network change event since %lld seconds have passed
Will wake client %@ for session %@ if we receive a notification that it supports launch-on-demand
Attempting to launch client %@ for session %@
Couldn't launch application %@ because we don't have an xpc connection to UserEventAgent
Received a new connection from UserEventAgent! Canceling the old one
Updated Registered Launch-On-Demand Clients: %@
Created xpc listener: %@
Received xpc event
NDUserEventAgentConnection received connection
com.apple.nsurlsessiond enableBluetoothLinkRequirements is true - will assert bluetooth link requirements
com.apple.nsurlsessiond bluetoothLinkRequirementsOverrideTimerValue is %d
Could not break full NSURLSession identifier %@ into bundle ID and session ID components
Error %@ [%ld] deserializing auth headers
Failed to unarchive data of class %@, length %lu
Error getting caches directory: %@ [%ld]
Failed to set mode 700 on path %s.  errno=%d
Failed to convert %s to a data-vault directory.  errno=%d
Couldn't create directory at %@, error: %@ [%ld]
Failed to create data-vault directory.  errno=%d
Couldn't create directory.  Unable to extract C-string from path argument: %@
Couldn't create directory.  No path provided.
Error removing item at url: %@, error: %@ [%ld]
Error removing item at path: %@, error: %@ [%ld]
Resetting request delay for %@
FPProvider %@ entered foreground
FPProvider %@ entered background
Being asked if container with identifier %@ is foreground before getting callback from FPProviderMonitor!
Resetting request delay and clearing pending wake requests for %@ since it came into the foreground
Application %@ has been in background for %lu seconds. Will reevaluate discretionary downloads
Resetting request delay and clearing pending wake requests for %@ since the first observer is being added
Set request delay for %@ to %f
Container %@ entered foreground
Container %@ entered background
Being asked if container with identifier %@ is foreground before getting callback from BRContainersMonitor! Foreground state is %c
An XPC error occurred when obtaining the default credential: %@
An XPC error occurred when obtaining all credentials %@
An XPC error occurred when obtaining a credential: %@
%{public}@ getAuthHeadersForResponse %@
%{public}@ is waiting for connection with reason: %lld
%{public}@ will be retried - error: %@
%{public}@ will be retried
%{public}@ ignoring data of length %lu since we've already failed that task
%{public}@ did receive data with length %lu
%{public}@ data pending, now has %lu bytes pending acknowledgement
%{public}@ immediately acknowledging data
%{public}@ will wait to acknowledge data
%{public}@ data acknowledged, now has %lu bytes pending acknowledgement
%{public}@ acknowledging pending data
%{public}@ didReceiveResponse: %@
%{public}@ received response disposition: %d
%{public}@ client responded to redirect with request %@
%{public}@ completed with error %@ [%ld]
%{public}@ StreamTask %@ completed with error %@ [%ld]
%{public}@ ignoring task completion for task %@ with error %@ [%ld] in session %@ since we do not have an associated client taskIdentifier
%{public}@ _willSendRequestForEstablishedConnection
%{public}@ didReceiveChallenge: %@, protection space: %@
Session %@ became invalid with error %@ [%ld]
Received error %@ [%ld] reading from streamTask %@
Received error %d writing to tcp_connection %p
Received error %d reading from tcp_connection %p
Open IDS Socket with UUID %@ to host %@ port %d
received tcp_connection (%p) event %lu
%{public}@ writing to stream returned %d, error %@ [%ld]
%{public}@ receiving set priority message, priority = %lld
%{public}@ receiving set description message, description = %@
%{public}@ receiving resume task message, props %@
%{public}@ dropping effective configuration
%{public}@ receiving suspend task message
%{public}@ receiving cancel task message
dataTaskWithRequest message forTaskIdentifier %lu in session %@, currentRequest = %@
%{public}@ received task creation message and that task already exists. Sequence number: %llu, existing sequence number: %llu
%{public}@ canceling exisitng task since we received a new request for that task with a higher sequence number
%{public}@ received duplicate task creation message. Dropping message
%{public}@ received task creation message for invalidated session. Dropping message
%{public}@ using local task identifier %lu
%{public}@ acknowledging dataTaskWithRequest message
Received proxy request %@ with non-http URL. Dropping request.
%{public}@ didCompleteWithError message failed to send, so re-sending when devices are connected
%{public}@ message failed to send, so canceling task
PDURLSessionProxyClient Session %@ received message with non-matching session UUID; dropping message
PDURLSessionProxyServer Session %@ had _sourceApplicationAuditTokenData [%@]- discarding
%{public}@ canceling because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
nsurlsessiond started
Application: %@ uninstalled. Need to obliterate
Application: %@ re-installed. Need to adjust download paths
Client is a PlugIn with bundle identifier %@
Containing app for PlugIn is %@
Process with pid %d does not have a bundle ID, rejecting connection
Process with bundleID %@ [pid %d] does not have a bundle path, rejecting connection
<%@>.<%@> Lost connection to app -- connection interrupted or invalidated
Failed to write archive to path: %@
Bundle ID Archive %@ has unexpected format
NDSessionManager for client %@ was empty, not restoring
Application %@ is not installed, removing directory
No directory for bundleID: %@
Could not set attributes of directory at %@, error: %@ [%ld]
Non-directory file exists at: %@. Removing it.
Failed to take process assertion for %@
Successfully woke application %@ and took process assertion
Failed to open application, error: %@ timeout: %c
Couldn't create process assertion for %@
We already have an assertion for bundleID: %@, sessionID: %@. This shouldn't happen.
took assertion for %@, session %@, uuid %@
Invalidating assertion for bundleID: %@. sessionID: %@
looking for background session %@ for bundle id %@
looking for background task completion for bundle id %@
%s assertion with reason %@ for bundle id %@
validating assertion %@
Application %@ no longer foreground
Application %@ entered foreground
Application %@ was suspended
Application %@ was quit in the app switcher
Background updates are on
Background updates were turned off
Background update setting for %@ was changed to %@
Notifying observers for %@ that background update setting was turned off
Notifying observers for %@ that background update setting was turned on
Canceling AVAssetTask because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
%{public}@ Updating configuration on daemon
%{public}@ initialized appleIDAuthenticator, status codes = %@
%{public}@ StreamingZip - not yet prepared for extraction while setting additional properties
%{public}@ StreamingZip - terminating lingering extractor from previous download attempt
%{public}@ StreamingZip - preparing for extraction to %@
%{public}@ Failed to prepare for extraction - timed-out.
%{public}@ StreamingZip - no path available.  Wait for init with resume-info for the path.
%{public}@ Object does not support SZExtractor protocol.  Dropping this object. Class=%@
%{public}@ StreamingZip - already prepared for extraction while setting additional properties
[Telemetry]: Assiging taskMetrics on the daemon side
%{public}@ Extractor prepare - Offset: %lld, error: %@ [%ld]
%{public}@ draining authentication challenge callback
%{public}@ draining willSendRequest callback
%{public}@ draining openFileAtPath callback
%{public}@ performing auth challenge callback, challenge %@
%{public}@ performing did start app wake callback.
%{public}@ performing did finish app wake callback.
%{public}@ performing will send request callback, request %@
Performing open file at path callback for path %@ mode %d
%{public}@ performing begin delayed request callback
%{public}@ performing get auth headers for response callback.
%{public}@ client responded to getAuthHeadersForResponse callback with continueLoad=%@, authHeaders=%@
%{public}@ failed to ask client for getAuthHeadersForResponse. Error=%@
%{public}@ client responded to delayed request callback with disposition %d
%{public}@ failed to ask client for delayed request disposition, continuing load
%{public}@ failed to deliver resolved MediaSelection
Client responded to open file callback with handle %@
%{public}@ client responded to will send request callback with request %@ handle %@
%{public}@ failed to ask client for modified request, using original proposed request
%{public}@ client responded to task challenge with disp %d, cred %@
%{public}@ client acknowledged file download
%{public}@ client acknowledged completion
%{public}@ AVAssetDownloadSession did complete with error %@ [%ld]
%{public}@ completion woke client: %c
%{public}@ completion did not wake client and client is not active - requesting delayed wake
%{public}@ completion woke client or client is active - not requesting delayed wake
%{public}@ canceling tcp_connection
%{public}@ startAVAssetDownloadSessionWithTaskIdentifier wrapper: %@ taskIdentifier: %lu
%{public}@ couldn't create AVAssetDownloadSession; returning an error
%{public}@ created AVAssetDownloadSession with token %llu
Creating tcp_connection to host: %@, port: %d
%{public}@ tcp_connection_create() returned NULL (host %@, port %d, queue %@, taskInfo %@, URL %@)
Created tcp_connection: %@
%{public}@ received tcp_connection event %d
%{public}@ retrying AVAssetDownloadTask
%{public}@ removing destination file for AVAssetDownloadTask in order to retry
%{public}@ will retry after %f seconds
Task <%{public}@>.<%lu> avAggregateAssetDownloadTaskWithDownloadToken: %llu, serializedMediaSelections: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAggregateAssetDownloadTask asset: %@
Task <%{public}@>.<%lu> avAssetDownloadTaskWithDownloadToken: %llu, URL: %@, destinationURL: %@, temporaryDestinationURL: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAssetDownloadSession %@ with token %llu
%{public}@ failed to instantiate AVAssetDownloadSession
%{public}@ failed to instantiate AVAsset, token %llu
Task <%{public}@>.<%lu> for client %@ does not have write access to destination directory %@
Client exited transitional discretionary period.  Re-evaluating task priorities for session <%@>.<%@
Cancelling AVAssetDownloads for session <%@>.<%@> since client was quit from app switcher
Bumping priority of AVAssetDownloads for %@ since it entered the foreground
Lowering priority of AVAssetDownloads for %@ since it is no longer in the foreground
Error getting container path: %llu
Error getting User managed assets path: %llu
Error removing file at location of asset downloads directory: %@ [%ld]
Error creating asset downloads directory: %@ [%ld]
%{public}@ failed to re-instantiate AVURLAsset with token %llu
Canceling delayed wake for session <%@>.<%@>
Scheduled delayed wake for session <%@>.<%@>
Delayed wake timer fired for session <%@>.<%@>
Triggering delayed wake for session <%@>.<%@>
