.@@(#)PROGRAM:nsurlsessiond  PROJECT:CFNetwork-1398
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleExecutable</key>
<string>nsurlsessiond</string>
<key>CFBundleIdentifier</key>
<string>com.apple.nsurlsessiond</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>nsurlsessiond</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1398</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1398</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B5050f</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<true/>
</dict>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.nsurlsessiond</string>
<key>com.apple.carousel.defaulturlsessionpolicy</key>
<true/>
<key>com.apple.chronoservices</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.nanotimekit.activecomplication</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.join_connection_pool</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>SERVICE_ENTITLEMENT</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.userManagedAssets</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.accounts.bundleidspoofing</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.TopLevelDomainDafsa</string>
</array>
<key>com.apple.private.cfnetwork.har-capture-delegation</key>
<true/>
<key>com.apple.private.dark-wake-network-reachability</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>nsurlsessiond</string>
<key>com.apple.rootless.storage.com.apple.MobileAsset.DuetExpertCenterAsset</key>
<true/>
<key>com.apple.rootless.storage.nsurlsessiond</key>
<true/>
<key>com.apple.runningboard.assertions.cfnetwork</key>
<true/>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.runningboard.targetidentities</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.nano.nanoregistry.paireddeviceregistry</string>
<string>com.apple.terminusd</string>
<string>com.apple.chronoservices</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.nsurlstoragedresources</string>
</array>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
%@ %@
session
socketUUID
host
port
task
disposition
credential
UseCredential
PerformDefaultHandling
CancelAuthenticationChallenge
RejectProtectionSpace
(unknown: %i)
configuration
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
_nsurlsessiondErrorDomain
%02x
_unsafe
com.apple.nsurlsessiond
background
--privileged
--postlogoutsync
proxy
priority
com.apple.nsurlsessiond.NSURLSessionProxyService-Queue
com.apple.private.alloy.nsurlsessionproxy
NSURLSessionProxyClientBundleIdentifier
com.apple.cloudkit.cloudd
com.apple.cloudd
IDSSendMessageOptionMetricReportIdentifier
v16@?0@"PBCodable"8
taskInfo
v32@?0@"NSString"8@"PDURLSessionProxyServer"16^B24
com.apple.nsurlsessiond.PDBluetoothCompanionLinkAssertion.bluetoothSerialQueue
originalRequest
currentRequest
taskSequenceNumber
response
com.apple.nsurlsessionf.avassetdownloadersessionwrappercallback
AVAssetDownloadSessionMediaSelectionArrayKey
AVAssetDownloadTaskMediaSelectionsForMultichannelKey
AVAssetDownloadTaskMediaSelectionKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AssertType
PreventUserIdleSystemSleep
AssertLevel
AssertName
AVAssetDownloadSessionWrapper %llu (%@)
TimeoutSeconds
TimeoutAction
TimeoutActionTurnOff
B24@?0@"NSURL"8@"NSError"16
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
com.apple.nsurlsessiond-cachedelete
CFNetworkDownload_
.tmp
q24@?0@"NSDate"8@"NSDate"16
NSURLSessionLastDisconnectDateKey
NDBackgroundSessionManagerRestoredStateKeyTasks
NDBackgroundSessionManagerRestoredStateKeyTLSSessionCachePrefix
NDBackgroundSessionManagerKeySessionUUID
com.apple.private.nsurlsession.impersonate
com.apple.private.nsurlsession.allow-discretionary-cellular
com.apple.private.nsurlsession-allow-override-connection-pool
com.apple.private.nsurlsession.allow-duet-preauthorization
com.apple.private.nsurlsession.set-max-watch-cell-transfer-size
com.apple.nsurlsessiond.session-manager
com.apple.nsurlsessiond.session-archive-queue
sessions.plist
downloadDirectoryPath.plist
configuration.plist
options.plist
com.apple.OTACrashCopier
Holding boost for %@
com.apple.private.dark-wake-network-reachability
get-task-allow
com.apple.security.get-task-allow
com.apple.security.application-groups
kNSURLSessionThrowImmediateAVExceptionKey
kNSURLSessionImmediateInvalidationErrorKey
NSURLSessionDelegateImplementsWillSendRequestForEstablishedConnectionKey
NSURLSessionDelegateImplementsSessionAuthChallengeKey
NSURLSessionDelegateImplementsTaskAuthChallengeKey
NSURLSessionDelegateImplementsWillBeginDelayedRequestKey
com.apple.private.nsurlsession.set-task-priority
com.apple.private.nsurlsession.set-discretionary-override-value
NSURLSessionBackgroundPoolName
pathToDownloadTaskFile
effectiveConfig
NSURLSessionBackgroundPoolName-sync-%d
Uploads
Library/Caches/com.apple.nsurlsessiond/Downloads
tasks.plist
Task <?>.<%lu>
%@ [delay: %f, duration: %f, allowsCellularAccess: %d]
%@ [allowsCellularAccess: %d]
VPN not connected
Duet Said No
Waiting for start time
Duration expired
Waiting for power
Waiting for inexpensive network
Waiting for non-cellular network
Link quality too poor
Cellular service is unavailable
Thermal conditions are not good
Conflicting parameters
Required data protection level is locked
Connection pool is full
Opportunistic
Network unavailable
Blocked by proxy
In battery saver mode
Network quality
Unknown (%llu)
com.apple.CFNetwork
__NSCFLocalDownloadTask
NSKeyedArchiveRootObjectKey
__NSCFLocalUploadTask
__NSCFLocalDataTask
trailers
com.apple.mobileassetd
com.apple.sharingd
_NSURLRequestIsDiscretionaryOverrideValue
New task
Task <?>.<0>
CFNetworkUpload_%@
%@%@%@
__com.apple.CFNetwork.prefix__
v32@?0@"NSURLProtectionSpace"8@"NSURLCredential"16^B24
v16@?0@"NSData"8
v16@?0@"NSURLRequest"8
v24@?0@"NSURLRequest"8@"NSFileHandle"16
version
launchUUID
headerData
continueLoad
receivedData
additionalProperties
taskDescription
com.apple.nsurlsessiond.status-monitor
com.apple.nsurlsessiond.UserEventAgentConnectionQueue
com.apple.nsurlsessiond-launchondemand
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.nsurlsessiond-events.message-type
com.apple.nsurlsessiond-events.registered-clients
DisableInfraWiFi
enableBluetoothLinkRequirements
bluetoothLinkRequirementsOverrideTimerValue
NSErrorPeerCertificateChainKey
NSErrorClientCertificateChainKey
v32@?0@8@16^B24
http
https
com.apple.nsurlsessionproxy.cancelError
nsurlsessiond
com.apple.nsurlsessiond.szmodtime
com.apple.nsurlsessiond.purged
-launchd
com.apple.nsurlsessiond/Downloads
/nsurlsessiond.launch
streamErrorDomain
streamErrorCode
archiveList
com.apple.MobileAsset.TopLevelDomainDafsa
v16@?0q8
DafsaData.bin
systemgroup.com.apple.nsurlstoragedresources
Library
dafsaData.bin
com.apple.nsurlsessiond.NDSpringBoardApplication.request-delay-queue
com.apple.nsurlsessiond.NDExtension.request-delay-queue
Cancel
Allow
BecomeDownload
request
reason
com.apple.nsurlsessiond.usermanager.sync
nsurlsession bg task
client
retry
v24@?0@"NSString"8^B16
v32@?0@"NSURLProtectionSpace"8@"NSDictionary"16^B24
monitor
shouldCancel
com.apple.nsurlsessiond.credential-storage-queue
v24@?0@"NSDictionary"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSURLCredential"8
hasBodyStream
 uuid:%@
BackgroundDisposition
com.apple.nsurlsessiond.NSURLSessionProxyPool
v32@?0@"NSNumber"8@"NSURLSessionDataTask"16^B24
Session <%@>
message
type
_kCFNetworkProxySessionNeedsNewBodyStreamSignal
v20@?0i8@"NSError"12
v20@?0@"NSObject<OS_dispatch_data>"8i16
v28@?0@"NSData"8B16@"NSError"20
v24@?0@"PBCodable"8@"NSError"16
-[PDURLSessionProxyServer URLSession:dataTask:_didReceiveData:completionHandler:]
PDURLSessionProxyServer.mm
!_taskIdentifiersToPendingDataCompletion[@(taskIdentifier)]
bytesSent
totalBytesSent
totalBytesExpectedToSend
taskIdentifier
com.apple.system.powersources.source
v12@?0i8
challenge
domain
code
userInfo
com.apple.nsurlsessiond.daemon-queue
com.apple.nsurlsessiond-xpc-transaction-queue
bundles.plist
NDTaskInfo
q24@?0@8@16
v32@?0@"NSString"8@"NDSessionManager"16^B24
com.apple.developer.on-demand-install-capable
com.apple.nsurlsessiond.started
bodyData
com.apple.mt
KeepAppsUpToDateAppList
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
kKeepAppsUpToDateEnabledChangedNotification
com.apple.nsnetwork.SpringBoard-queue
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@8@"RBSAssertion"16^B24
found
could not find
com.apple.nsurlsessiond.handlesession %@
BackgroundDownload
com.apple.cfnetwork
UIApplicationLaunchOptionsURLSessionKey
v24@?0@"BSProcessHandle"8@"NSError"16
com.apple.nsurlsessiond.NDExtension-queue
sessionIdentifier
uuidString
sequenceNumber
idsPriority
error
StatusCodes
PublishingURL
EarliestBeginDate
CountOfBytesClientExpectsToSend
CountOfBytesClientExpectsToReceive
DisallowCellularDueToSystemPolicy
SZExtractor
TimeoutIntervalForResource
nw_activityUUID
file-write-create
v24@?0Q8@"NSError"16
args
v16@?0@"NSError"8
v32@?0q8@"NSURLCredential"16@"NSXPCListenerEndpoint"24
v16@?0@"NSFileHandle"8
v24@?0q8@"NSURLRequest"16
v28@?0B8@"NSDictionary"12@"NSURLRequest"20
com.apple.private.nsurlsession.media-asset-download.can-specify-destination-url
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
{CGSize=dd}
AVAssetDownloadSessionDebugIdentifierKey
AVAssetDownloadSessionRetryErrorKey
AVAssetDownloadTaskDownloadConfigurationKey
v8@?0
v32@?0@"NSNumber"8@"__NSCFURLSessionTaskInfo"16^B24
%llu
%@%@%@.movpkg
file-write-data
v12@?0B8
configuration.apple.com
v20@?0I8r^v12
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithUnsignedInt:
setSession:
setSocketUUID:
setHost:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasSession
hasSocketUUID
hasHost
setPort:
setHasPort:
hasPort
readFrom:
writeTo:
copyTo:
session
socketUUID
host
port
.cxx_destruct
_host
_port
_session
_socketUUID
_has
TB,R,N
T@"PDURLSessionProxySessionMessage",&,N,V_session
T@"NSString",&,N,V_socketUUID
T@"NSString",&,N,V_host
TB,N
TI,N,V_port
initWithTask:
taskWillResume
taskWillSuspend
taskTransferredData:countOfBytesReceived:
cancel
_task
_hasStarted
_lastUpdateTime
_lastSuspendTime
_suspendedDurationSinceLastUpdate
setTask:
setCredential:
hasTask
disposition
setDisposition:
setHasDisposition:
hasDisposition
dispositionAsString:
StringAsDisposition:
hasCredential
task
credential
_credential
_disposition
T@"PDURLSessionProxyTaskMessage",&,N,V_task
Ti,N,V_disposition
T@"PDURLSessionProxyCredential",&,N,V_credential
isEqualToString:
numberWithBool:
setConfiguration:
hasConfiguration
setSupportsRedirects:
setHasSupportsRedirects:
hasSupportsRedirects
setDelegateImplementsWillSendRequest:
setHasDelegateImplementsWillSendRequest:
hasDelegateImplementsWillSendRequest
setDelegateImplementsSessionAuthChallenge:
setHasDelegateImplementsSessionAuthChallenge:
hasDelegateImplementsSessionAuthChallenge
setDelegateImplementsTaskAuthChallenge:
setHasDelegateImplementsTaskAuthChallenge:
hasDelegateImplementsTaskAuthChallenge
setDelegateImplementsWillPerformRedirection:
setHasDelegateImplementsWillPerformRedirection:
hasDelegateImplementsWillPerformRedirection
setDelegateImplementsDidReceiveResponse:
setHasDelegateImplementsDidReceiveResponse:
hasDelegateImplementsDidReceiveResponse
configuration
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
_configuration
_delegateImplementsDidReceiveResponse
_delegateImplementsSessionAuthChallenge
_delegateImplementsTaskAuthChallenge
_delegateImplementsWillPerformRedirection
_delegateImplementsWillSendRequest
_supportsRedirects
T@"NSData",&,N,V_configuration
TB,N,V_supportsRedirects
TB,N,V_delegateImplementsWillSendRequest
TB,N,V_delegateImplementsSessionAuthChallenge
TB,N,V_delegateImplementsTaskAuthChallenge
TB,N,V_delegateImplementsWillPerformRedirection
TB,N,V_delegateImplementsDidReceiveResponse
UTF8String
stringWithCapacity:
appendFormat:
uppercaseString
domain
code
userInfo
objectForKeyedSubscript:
integerValue
objectForKey:
numberWithInteger:
setObject:forKeyedSubscript:
isForeground
_priorityValue
set_priority:
valueForEntitlement:
boolValue
setWithObjects:
unionSet:
addObject:
defaultManager
fileExistsAtPath:
stringByDeletingLastPathComponent
lastPathComponent
stringByAppendingString:
stringByAppendingPathComponent:
fileSystemRepresentation
dataWithContentsOfFile:
unarchivedObjectOfClasses:fromData:error:
removeItemAtPath:
extensionPointRecord
identifier
sharedDaemon
setPrivileged:
setInSyncBubble:
isInSyncBubble
sharedService
start
restoreState
setupArchiveTimer
initWithMachServiceName:
setDelegate:
queue
_setQueue:
resume
currentRunLoop
setPriority:
setHasPriority:
hasPriority
priority
_priority
TI,N,V_priority
initWithMessage:type:
message
setMessage:
type
setType:
_type
_message
T@"PBCodable",C,V_message
TS,V_type
UUID
UUIDString
initWithService:
addDelegate:queue:
setPreferInfraWiFi:
_onqueue_sendStartupMessage
_onqueue_updateDeviceState
_onqueue_remoteDeviceStartedUp
withWorkQueue:
launchUUID
setLaunchUUID:
data
initWithProtobufData:type:isResponse:
numberWithDouble:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
devices
countByEnumeratingWithState:objects:count:
isDefaultPairedDevice
isNearby
serviceMinCompatibilityVersion
_onqueue_devicesDisconnected
_onqueue_devicesConnected
removeAllObjects
numberWithLongLong:
unsignedLongLongValue
numberWithUnsignedLongLong:
_nsurlsessionproxy_sessionIdentifier
getComponentsForFullIdentifier:bundleIdentifier:sessionIdentifier:
_onqueue_sourceApplicationForMessage:
_onqueue_priorityForMessage:ofType:isReply:
bumpAndReturnOutgoingSequenceNumberForPriority:
_nsurlsessionproxy_setSequenceNumber:
_nsurlsessionproxy_setMessagePriority:
_nsurlsessionproxy_setLaunchUUID:
copy
errorWithDomain:code:userInfo:
_onqueue_messageWithIdentifier:didSendWithSuccess:error:
_onqueue_handleFailedMessageSend:ofType:
_onqueue_loggableDescriptionForMessage:
length
_onqueue_IDSTimoutForMessage:
_onqueue_sendMessage:ofType:responseIdentifier:forSourceApplication:withUrgency:withIDSMessageTimeout:withReply:
removeObjectForKey:
_onqueue_handleReceivedReply:forIdentifier:ofType:withError:
outgoingResponseIdentifier
isResponse
messageSubclassForMessageType:isReply:
initWithData:
_nsurlsessionproxy_launchUUID
containsObject:
incomingResponseIdentifier
_nsurlsessionproxy_sequenceNumber
_nsurlsessionproxy_messagePriority
verifyAndUpdateIncomingSequenceNumber:forPriority:
_onqueue_handleReceivedMessage:ofType:withReply:
count
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
devicesDidUnpair:
defaultPairedDevice
_onqueue_receivedNewLaunchUUID:isStartupMessage:
_onqueue_setPrefersInfraWiFi:
sendProtobufMessage:ofType:withReply:
setQueue:
isConnected
setConnected:
_idsService
_outstandingReplies
_outstandingMessages
_startupMessageIdentifier
_outgoingSequenceNumbersByPriority
_incomingSequenceNumbersByPriority
_receivedLaunchUUIDs
_currentRemoteLaunchUUID
_prefersInfraWiFi
_startupMessageFailed
_haveReceivedLegacyStartupMessage
_haveReceivedMessage
_connected
_queue
_launchUUID
T@"NSObject<OS_dispatch_queue>",&,V_queue
connected
TB,GisConnected,V_connected
T@"NSString",&,V_launchUUID
setTaskInfo:
hasTaskInfo
taskInfo
_taskInfo
T@"NSData",&,N,V_taskInfo
dealloc
_obliterateAllBackgroundSessionsWithCompletionHandler:
acquire
invalidate
obliterate
enumerateKeysAndObjectsUsingBlock:
devicesConnected
_nsurlsessionproxy_taskIdentifier
messagePriorityForTaskWithIdentifier:isReply:
sourceApplicationBundleIdentifier
IDSMessageTimeout
messageLoggableDescriptionForTaskWithIdentifier:
_nsurlsessionproxy_sessionUUID
uuidString
_actualConfiguration
initWithConfiguration:uuidString:options:delegate:
handleMessage:ofType:withReply:
setSessionIdentifier:
setUuidString:
handleFailedMessageSend:ofType:
proxyServerBecameInvalid:
retainInfraWiFi
releaseInfraWiFi
retainBTLinkAssertion
releaseBTLinkAssertion
_sessions
_infraWiFiRetainCount
_infraWiFiTimer
_btLinkAssertionRetainCount
_btLinkAssertionTimer
_bluetoothCompanionLinkAssertion
setLinkRequirementsForPeer:packetsPerSecond:inputBytesPerSecond:outputBytesPerSecond:
_updateState
sharedInstance
getActivePairedDevice
deviceIDForNRDevice:
initWithDelegate:queue:
state
scalablePipeManagerDidUpdateState:
scalablePipeManager:didRegisterEndpoint:error:
scalablePipeManager:didUnregisterEndpoint:
scalablePipeManager:pipeDidConnect:
scalablePipeManager:pipeDidDisconnect:error:
_bluetoothSerialQueue
_companionPeerIdentifier
_hasLoadedCompanionPeerIdentifier
_hasSetLinkRequirements
_isActive
_pipeManager
setOriginalRequest:
setCurrentRequest:
hasOriginalRequest
hasCurrentRequest
setTaskSequenceNumber:
setHasTaskSequenceNumber:
hasTaskSequenceNumber
originalRequest
currentRequest
taskSequenceNumber
_taskSequenceNumber
_currentRequest
_originalRequest
T@"PDURLSessionProxyRequest",&,N,V_originalRequest
T@"PDURLSessionProxyRequest",&,N,V_currentRequest
TQ,N,V_taskSequenceNumber
setResponse:
hasResponse
response
_response
T@"PDURLSessionProxyResponse",&,N,V_response
assetDownloadSessionWithAsset:mediaSelections:destinationURL:options:
assetDownloadSessionWithURL:destinationURL:options:
setDelegate:queue:
downloadToken
mutableCopy
array
initWithAsset:propertyList:
releasePowerAssertion
setDownloadSession:
dictionaryWithObjects:forKeys:count:
takePowerAssertion
downloadSession
pause
stop
disavowSession
NDAVAssetDownloadSessionWrapper:didCompleteWithError:
startLoadingMetadata
valueWithCMTimeRange:
propertyList
NDAVAssetDownloadSessionWrapper:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:
NDAVAssetDownloadSessionWrapper:didFinishDownloadForMediaSelectionPropertyList:
NDAVAssetDownloadSessionWrapper:didResolveMediaSelectionPropertyList:
countOfBytesWritten
setCountOfBytesWritten:
setCountOfBytesExpectedToWrite:
countOfBytesExpectedToWrite
NDAVAssetDownloadSessionWrapper:didUpdateProgressWithLastBytesWritten:totalBytesWritten:totalBytesExpectedToWrite:
NDAVAssetDownloadSessionWrapper:willDownloadVariants:
assetDownloadSessionDidFinishDownload:
assetDownloadSession:didFailWithError:
assetDownloadSession:didFinishDownloadForMediaSelection:
assetDownloadSession:didResolveMediaSelection:
assetDownloadSession:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
assetDownloadSession:didUpdateProgressWithExpectedBytes:bytesDownloaded:
assetDownloadSession:willDownloadVariants:
doesAVAssetDownloadSessionSupportMultipleDownloads
initWithURL:destinationURL:options:delegate:queue:
initWithURLAsset:destinationURL:options:delegate:queue:
suspend
cancelAndDeliverError:
delegate
delegateQueue
destinationURL
options
taskIdentifier
setTaskIdentifier:
progressTimerRunning
setProgressTimerRunning:
_asset
_timer
_powerAssertion
_callbackQueue
_progressTimerRunning
_downloadSession
_delegate
_delegateQueue
_URL
_destinationURL
_options
_downloadToken
_countOfBytesWritten
_countOfBytesExpectedToWrite
_taskIdentifier
TQ,V_countOfBytesWritten
TQ,V_countOfBytesExpectedToWrite
TB,V_progressTimerRunning
T@"AVAssetDownloadSession",&,V_downloadSession
T@"<NDAVAssetDownloadSessionWrapperDelegate>",R,W,V_delegate
T@"NSObject<OS_dispatch_queue>",R,&,V_delegateQueue
T@"NSURL",R,C,V_URL
T@"NSURL",R,C,V_destinationURL
T@"NSDictionary",R,&,V_options
TQ,R,V_downloadToken
TQ,V_taskIdentifier
defaultDownloadDirectoryContainer
arrayWithObjects:count:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
nextObject
longLongValue
fileURLWithPath:isDirectory:
getResourceValue:forKey:error:
itemShouldBePurged:
removeItemAtURL:error:
hasPrefix:
hasSuffix:
fetchStreamingZipModificationDate:
updateStreamingZipModificationDate:
numberWithUnsignedLong:
fileURLWithPath:
addEntriesFromDictionary:
dateWithTimeIntervalSinceNow:
earlierDate:
compare:
keysSortedByValueUsingComparator:
fileURLWithPath:isDirectory:relativeToURL:
markItemAsPurged:
moveItemAtURL:toURL:error:
bundleManagerPath:
createDirectoryAtURL:
URLByAppendingPathComponent:
path
archivePath
subarrayWithRange:
sessionPath:forBundleID:
fileExistsAtPath:isDirectory:
_supportsAVAssetDownloads
restoreOptionsFromArchivePath:
timeIntervalSinceNow
initWithConfiguration:bundleID:isSpringBoardApp:downloadDirectory:options:clientProxy:delegate:workQueue:archiveQueue:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:atomically:
restoreTasks:
addObjectsFromArray:
applicationWithIdentifier:
wakeForSessionIdentifier:withSessionUUID:wakeRequirement:
removeItemAtURL:
archiveState
allKeys
setDaemonWorkState:
processInfo
beginActivityWithOptions:reason:
sharedSpringBoard
applicationIsForeground:
endActivity:
currentConnection
sharedContainerIdentifier
connection:canUseSharedContainerIdentifier:
setSharedContainerIdentifier:
_sourceApplicationBundleIdentifier
set_sourceApplicationBundleIdentifier:
_sourceApplicationSecondaryIdentifier
set_sourceApplicationSecondaryIdentifier:
_sourceApplicationAuditTokenData
set_sourceApplicationAuditTokenData:
set_attributedBundleIdentifier:
_respectsAllowsCellularAccessForDiscretionaryTasks
set_respectsAllowsCellularAccessForDiscretionaryTasks:
_allowsPowerNapScheduling
set_allowsPowerNapScheduling:
_connectionPoolName
set_connectionPoolName:
_directoryForDownloadedFiles
isPrivileged
processIdentifier
auditToken
_isSafeDirectoryForDownloads:withToken:
set_directoryForDownloadedFiles:
_duetPreauthorized
set_duetPreauthorized:
_maximumWatchCellularTransferSize
set_maximumWatchCellularTransferSize:
set_pidForHAR:
copyAndSanitizeClientConfiguration:
_xpcConnection
initWithBundleIdentifier:error:
hasConnectedClient
uuid
_web_errorWithDomain:code:URL:
getTasksForReconnection
getTLSSessionCachePrefix
setXPCConnection:
clientBundleID
reconnectClient:withCompletion:
sharedLauncher
removePendingLaunchForBundleID:sessionID:
releaseAssertionForBundleID:sessionID:
allowReconnect
cleanupWithCompletionHandler:
setObliterationCompletion:
dropBoost
obliterationCompletion
managerBecameEmpty:bundleID:withCompletionHandler:
clientApplicationWasReinstalled
archiveTimerFired
boost
createSessionWithConfiguration:clientProxy:cachesDirectory:options:reply:
sendPendingCallbacksForIdentifier:reply:
releaseAssertionForSession:reply:
okayToSendPendingCallbacksForIdentifier:reply:
getActiveSessionIdentifiersWithReply:
obliterateAllSessionsWithReply:
sessionCompleted:withCompletionHandler:
initWithDelegate:bundleID:isSpringBoardApp:
downloadDirectoryDataPath
restoreState:
getSessionWithIdentifier:
xpcConn
setXpcConn:
isSpringBoardApp
setIsSpringBoardApp:
_reconnectingProxies
_clientBundleID
_bundleDirectory
_sessionArchiveQueue
_boost
_isSpringBoardApp
_xpcConn
_obliterationCompletion
T@"NSXPCConnection",W,V_xpcConn
T@"<NDSessionManagerDelegate>",W,V_delegate
TB,V_isSpringBoardApp
T@?,C,V_obliterationCompletion
defaultSessionConfiguration
timeoutIntervalForRequest
setTimeoutIntervalForRequest:
timeoutIntervalForResource
setTimeoutIntervalForResource:
connectionProxyDictionary
setConnectionProxyDictionary:
TLSMinimumSupportedProtocol
setTLSMinimumSupportedProtocol:
TLSMaximumSupportedProtocol
setTLSMaximumSupportedProtocol:
HTTPAdditionalHeaders
setHTTPAdditionalHeaders:
HTTPMaximumConnectionsPerHost
setHTTPMaximumConnectionsPerHost:
networkServiceType
setNetworkServiceType:
_authenticatorStatusCodes
set_authenticatorStatusCodes:
_atsContext
set_atsContext:
_allowsTLSFalseStart
set_allowsTLSFalseStart:
_allowsTLSFallback
set_allowsTLSFallback:
_tlsTrustPinningPolicyName
set_tlsTrustPinningPolicyName:
_allowsTLSECH
set_allowsTLSECH:
_reportsDataStalls
set_reportsDataStalls:
_TCPAdaptiveReadTimeout
set_TCPAdaptiveReadTimeout:
_TCPAdaptiveWriteTimeout
set_TCPAdaptiveWriteTimeout:
_onBehalfOfPairedDevice
set_onBehalfOfPairedDevice:
_requiresSustainedDataDelivery
set_requiresSustainedDataDelivery:
_IDSMessageTimeout
set_IDSMessageTimeout:
_alwaysPerformDefaultTrustEvaluation
set_alwaysPerformDefaultTrustEvaluation:
set_prefersInfraWiFi:
canBeSuspended
setHTTPCookieStorage:
setURLCache:
setURLCredentialStorage:
allowsCellularAccess
setAllowsCellularAccess:
setWaitsForConnectivity:
setShouldUseExtendedBackgroundIdleMode:
allowsExpensiveNetworkAccess
setAllowsExpensiveNetworkAccess:
allowsConstrainedNetworkAccess
setAllowsConstrainedNetworkAccess:
_multipathAlternatePort
set_multipathAlternatePort:
_allowsHSTSWithUntrustedRootCertificate
set_allowsHSTSWithUntrustedRootCertificate:
set_tcpConnectionPoolName:
set_connectionCachePurgeTimeout:
set_longLivedConnectionCachePurgeTimeout:
set_preventsIdleSleepOnceConnected:
_timingDataOptions
set_timingDataOptions:
_shouldSkipPreferredClientCertificateLookup
set_shouldSkipPreferredClientCertificateLookup:
_requiresPowerPluggedIn
set_requiresPowerPluggedIn:
set_watchExtensionBundleIdentifier:
set_requiresClientToOpenFiles:
_loggingPrivacyLevel
set_loggingPrivacyLevel:
_duetPreClearedMode
set_duetPreClearedMode:
_allowsReachabilityCheck
set_allowsReachabilityCheck:
_pidForHAR
defaultWindowDurationForResourceTimeout:
isDiscretionary
_clientIsNotExplicitlyDiscretionary
set_clientIsNotExplicitlyDiscretionary:
_xpcActivityBudgeted
set_forcedNetworkServiceType:
setDiscretionary:
set_socketStreamProperties:
setSkip_download_unlink:
addTransaction
containerIDForPrimaryIdentifier:secondaryIdentifier:
bundleIDForPrimaryIdentifier:secondaryIdentifier:
cloudContainerWithIdentifier:
providerIDForBundle:sharedContainerIdentifier:
fileProviderWithIdentifer:applicationIdentifier:
chronoKitExtensionWithIdentifier:
springboardApplicationWithBundleIdentifier:
springBoardApplicationExistsWithIdentifier:
setupDownloadDirectory
initWithDelegate:forBundleID:
configurationWithClientConfiguration:discretionary:
sessionSendsLaunchEvents
_sessionSendsLaunchOnDemandEvents
_performsEVCertCheck
_sessionWithConfiguration:delegate:delegateDispatchQueue:
_useTLSSessionCacheFromSession:
initWithDelegate:
_allowsRetryForBackgroundDataTasks
_infersDiscretionaryFromOriginatingClient
addObserver:
setUserInfo:
populateWithInitialCredentials
shouldElevateDiscretionaryPriority
sharedUserEventAgentConnection
removePendingWakeForClient:sessionIdentifier:
bundleIdentifier
clientDidDisconnect
clientIsActive
sessionHasOutstandingTasks
wakeUpClient:
taskKind
downloadFileURL
setDownloadFileURL:
downloadFile
setPath:
archiveTaskInfo:
groupContainerURLs
initWithBundleIdentifier:allowPlaceholder:error:
containerURL
URLByAppendingPathComponent:isDirectory:
defaultDownloadDirectoryForBundleID:
finishTasksAndInvalidate
removeObserver:
releaseTransaction
cleanupSessionWithCompletionHandler:
_onqueue_archiveTaskInfo
tasksArchivePath
numberWithUnsignedInteger:
_loggableDescription
_timeWindowDelay
_timeWindowDuration
timeIntervalSinceReferenceDate
creationTime
setCreationTime:
_setTimeWindowDuration:
_setTimeWindowDelay:
mayBeDemotedToDiscretionary
currentDiscretionaryStatus:withOptionalTaskInfo:
basePrioritySetExplicitly
priorityForDiscretionaryStatus:
setBasePriority:
updateTaskInfoBasedOnCurrentDiscretionaryStatus:
sessionForDiscretionaryStatus:
additionalProperties
taskDescription
setTaskDescription:
earliestBeginDate
setEarliestBeginDate:
countOfBytesClientExpectsToSend
setCountOfBytesClientExpectsToSend:
countOfBytesClientExpectsToReceive
setCountOfBytesClientExpectsToReceive:
uniqueIdentifier
set_uniqueIdentifier:
storagePartitionIdentifier
set_storagePartitionIdentifier:
pathToDownloadTaskFile
set_pathToDownloadTaskFile:
taskMetrics
set_metrics:
setTaskMetrics:
configureAdditionalPropertiesOnTask:taskInfo:
removeDownloadFileForTaskInfo:
adjustDiscretionaryStatusForTaskInfo:
requestWithAdjustedWindowForTaskInfo:
ensureSessionDownloadDirectoryExists
_downloadTaskWithRequest:downloadFilePath:
fileURL
uploadTaskWithRequest:fromFile:
dataTaskWithRequest:
set_suspensionThreshhold:
defaultTaskGroup
initWithBackgroundTaskInfo:taskGroup:
updateCurrentRequest:
createResumeInformation:
initRequiringSecureCoding:
encodeObject:forKey:
reason
encodedData
downloadTaskWithResumeData:
createNewTaskFromInfo:
null
initWithCallbackType:taskIdentifier:args:
addPendingCallback:wakeRequirement:
_backgroundTrailers
error
setState:
setError:
restoreCompletedTask:
hasStarted
restoreInProgressTask:
setSuspendCount:
setHasStarted:
bundleID
resourceTimeoutError
cancel_with_error:
basePriority
configureTask:withTaskInfo:
loadingPriority
set_loadingPriority:
bytesPerSecondLimit
set_bytesPerSecondLimit:
expectedProgressTarget
set_expectedProgressTarget:
setStartTime:
_TLSMinimumSupportedProtocolVersion
set_TLSMinimumSupportedProtocolVersion:
_TLSMaximumSupportedProtocolVersion
set_TLSMaximumSupportedProtocolVersion:
shouldCancelOnDisconnect
restoreTask:isOutstanding:
addOutstandingTaskWithIdentifier:
restoreTasksFromArchivedInfo:
setEstablishedConnection:
_extractor
set_extractor:
_hasSZExtractor
set_hasSZExtractor:
_doesSZExtractorConsumeExtractedData
set_doesSZExtractorConsumeExtractedData:
setupDASPropertiesOnTask:taskInfo:discretionaryStatus:
startResourceTimer
clientErrorForError:
willRetryBackgroundDataTask:withError:transactionMetrics:
requeueTask:skipResume:
sharedMonitor
lowThroughputTimerRetryCount
setLowThroughputTimerRetryCount:
suspendCount
taskShouldResume:
performBlockAfterNetworkChangedEvent:numberOfPreviousRetries:
retryCount
setRetryCount:
performBlockAfterNetworkChangedEvent:delay:
cancelMonitorForTask:
finalizeTaskCompletionWithSuppressedWake:
setResumedAndWaitingForEarliestBeginDate:
error:code:
resumeTaskWithIdentifier:withProperties:
cancelTasksRequiringClientConnectionAndResumeUnstartedTasks
setInvalidateReply:
performAllCallbacks
isHandlingBackgroundURLSessionWithIdentifier:withSessionUUID:
countOfBytesSent
setCountOfBytesSent:
countOfBytesReceived
setCountOfBytesReceived:
countOfBytesExpectedToSend
setCountOfBytesExpectedToSend:
countOfBytesExpectedToReceive
setCountOfBytesExpectedToReceive:
fillInByteCountsForTaskInfo:withTaskID:
fillInPropertiesForTaskInfo:withTaskID:
_tlsSessionCachePrefix
_propertyForKey:
discretionaryOverride
hasForegroundBackgroundStates
hasBackgroundTaskCompletion
resumedAndWaitingForEarliestBeginDate
respondedToWillBeginDelayedRequestCallback
supportsWakes
setRespondedToWillBeginDelayedRequestCallback:
removeStreamingZipModificationDate:
personaUniqueString
sharedManager
currentPersona
createPersonaContextForBackgroundProcessingWithPersonaUniqueString:
_backgroundPublishingURL
progress
initWithTask:taskInfo:clientBundleIdentifier:secondaryIdentifier:monitoredApplication:priority:options:queue:
handleWillBeginDelayedRequestForTaskWithIdentifier:completionHandler:
handleEarliestBeginDateForTaskWithIdentifier:completionHandler:
setStartedUserInitiated:
sharedStakeholder
restoredTaskActive:
endBridgingUMTask:
removeObject:
enqueueTaskWithIdentifier:
getBytes:length:
copyItemAtURL:toURL:error:
fileDescriptor
closeFile
drainCallbacksForTaskIdentifier:
invalidateReply
maySupportWakesLater
performWake:uponNotification:sessionIdentifier:
backgroundUpdatesEnabled
addPendingCallbackToFront:
currentRequestDelay
_effectiveConfiguration
_copySocketStreamProperties
_legacySocketStreamProperties
HTTPBodyStream
set_DuetActivityProperties:
startedUserInitiated
isInTransitionalDiscretionaryPeriod
set_legacySocketStreamProperties:
setIdentifier:
setMayBeDemotedToDiscretionary:
_requestFromResumeData
_isSafeRequestForBackgroundDownload
initWithDownloadTask:uniqueIdentifier:bundleID:sessionID:
setExpectingResumeCallback:
performCommonSetupForTask:taskInfo:identifier:discretionaryStatus:
descriptionForRequest:
_isSafeFileForBackgroundUpload:withToken:
makeTempUploadFile:withExtensionData:
uploadTaskWithStreamedRequest:
initWithUploadTask:uniqueIdentifier:bundleID:sessionID:
user
password
protocol
realm
authenticationMethod
initWithHost:port:protocol:realm:authenticationMethod:
credentialWithUser:password:persistence:
sharedCredentialStorage
setDefaultCredential:forProtectionSpace:
setFileURL:
initWithDataTask:uniqueIdentifier:bundleID:sessionID:
setShouldCancelOnDisconnect:
setDisablesRetry:
cancelByProducingResumeData:
backgroundTaskDidSuspend:
taskShouldSuspend:
setQos:
userPersonaUniqueString
setPersonaUniqueString:
sanitizeTaskProperties:
setAdditionalProperties:
backgroundTaskDidResume:
setProperty:forKey:
_socketStreamProperties
setBasePrioritySetExplicitly:
setLoadingPriority:
setBytesPerSecondLimit:
setExpectedProgressTarget:
set_discretionaryOverride:
setDiscretionaryOverride:
establishedConnection
set_tlsSessionCachePrefix:
reset
unsignedIntegerValue
protectionSpace
serverTrust
trustPassesExtendedValidation:
credentialForTrust:
previousFailureCount
proposedCredential
arrayWithObjects:
_releasePreventIdleSleepAssertionIfAppropriate
scheme
_taskGroup
_groupConfiguration
remoteObjectProxyWithErrorHandler:
backgroundTask:willPerformHTTPRedirection:withNewRequest:reply:
backgroundTask:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
inputStreamWithFileHandle:taskIdentifier:
backgroundTask:needNewBodyStream:withReply:
_metrics
_updatedStreamingZipModificationDate
disablesRetry
startBridgingUMTask:
handleCompletionOfTask:identifier:taskInfo:isRecoverable:suppressWake:
_daemon_currentTransactionMetrics
retryTask:originalError:transactionMetrics:
_trailers
set_backgroundTrailers:
_connectionIsCellular
removeOutstandingTaskWithIdentifier:
removeUploadFileForTaskInfo:
_extractorFinishedDecoding
terminateExtractorWithError:completion:
statusCode
backgroundTask:didReceiveResponse:transactionMetrics:
backgroundTask:didReceiveResponse:transactionMetrics:reply:
backgroundDataTask:didReceiveData:withReply:
backgroundDataTaskDidBecomeDownloadTask:
setTaskKind:
set_updatedStreamingZipModificationDate:
expectingResumeCallback
backgroundDownloadTask:didResumeAtOffset:expectedTotalBytes:
backgroundDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
streamStatus
open
close
setHTTPBodyStream:
backgroundTask:hasConnectionWaitingWithError:
numberWithInt:
backgroundTask:getAuthHeadersForResponse:reply:
pingForXPCObjectValidityWithReply:
downloadTaskWithRequest:originalRequest:downloadFilePath:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:sandboxExtensionData:identifier:uniqueIdentifier:potentialCredentials:reply:
dataTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
downloadTaskWithResumeData:identifier:uniqueIdentifier:reply:
cancelTaskWithIdentifier:
cancelTaskWithIdentifier:byProducingResumeData:
suspendTaskWithIdentifier:
setDescription:forTask:
setPriority:forTaskWithIdentifier:
setLoadingPoolPriority:forTaskWithIdentifier:
setBytesPerSecondLimit:forTaskWithIdentifier:
setExpectedProgressTarget:forTaskWithIdentifier:
setTLSMinimumSupportedProtocolVersion:forTaskWithIdentifier:
setTLSMaximumSupportedProtocolVersion:forTaskWithIdentifier:
setDiscretionaryOverride:forTaskWithIdentifier:
setTLSSessionCachePrefix:
resetStorageWithReply:
invalidateWithReply:
setPropertyOnStreamWithIdentifier:propDict:propKey:withReply:
avAssetDownloadTaskWithDownloadToken:URL:destinationURL:temporaryDestinationURL:assetTitle:assetArtworkData:options:identifier:uniqueIdentifier:taskKind:enableSPIDelegateCallbacks:reply:
avAggregateAssetDownloadTaskWithDownloadToken:serializedMediaSelections:assetTitle:assetArtworkData:options:childDownloadSessionIdentifier:identifier:uniqueIdentifier:reply:
errorOccurredDuringFinishedCallbackDelivery:
errorOccurredDuringAuthCallbackDelivery:completionHandler:
clientAcknowledgedTerminalCallbackForTask:
getClientProxy
descriptionForTaskWithIdentifier:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:dataTask:_didReceiveData:completionHandler:
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:_willRetryBackgroundDataTask:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
URLSession:task:_didReceiveInformationalResponse:
URLSession:task:_alternatePathAvailable:
_URLSession:downloadTask:didReceiveResponse:
_URLSession:downloadTaskNeedsDownloadDirectory:
_URLSession:task:getAuthHeadersForResponse:completionHandler:
_URLSession:openFileAtPath:mode:completionHandler:
applicationWasQuitFromAppSwitcher:
backgroundUpdatesDisabledForApplication:
backgroundUpdatesEnabledForApplication:
applicationWasSuspended:
applicationEnteredForeground:
applicationNoLongerInForeground:
applicationEndedNonDiscretionaryBackgroundGracePeriod:
applicationEndedExtendedNonDiscretionaryBackgroundGracePeriod:
applicationEndedTransitionalDiscretionaryBackgroundPeriod:
descriptionForTCPConnectionWaitingReason:
requeueTask:
monitoredAppBundleID
secondaryID
_userInitiatedSession
_discretionaryPrioritySession
_credentialStorage
_archiveQueue
_clientApplication
_connectedExtension
_tasksToIdentifiers
_identifiersToTasks
_identifiersToMonitors
_identifiersToStreams
_identifiersToStreamQueues
_outstandingTaskIDs
_lastArchiveTime
_archiveWasDeferred
_sessionDirectory
_downloadDirectory
_uploadsDirectory
_clientImplementsWillSendRequest
_clientImplementsWillBeginDelayedRequest
_clientImplementsSessionChallenge
_clientImplementsTaskChallenge
_sendsLaunchEvents
_discretionary
_obliterated
_cleanedUp
_hasBeenSignalledToDeliverPendingEvents
_infersDiscretionary
_shouldPullInitialCredentials
_shouldElevateDiscretionaryPriority
_completeReconnectionBlock
_clientPID
_watchExtensionBundleIdentifier
_retryDataTasks
_workQueue
_monitoredApplication
_identifiersToTaskInfo
_clientProxy
_uuid
_identifier
_monitoredAppBundleID
_secondaryID
_invalidateReply
_sharedContainerIdentifier
T@"<NDBackgroundSessionDelegate>",W,V_delegate
T@"NSUUID",R,V_uuid
T@"NSString",R,V_identifier
T@"NSString",R,V_clientBundleID
T@"NSString",R,V_monitoredAppBundleID
T@"NSString",R,V_secondaryID
T@?,C,V_invalidateReply
T@"NSString",C,V_sharedContainerIdentifier
setVersion:
setHasVersion:
hasVersion
hasLaunchUUID
version
_version
TI,N,V_version
T@"NSString",&,N,V_launchUUID
setHeaderData:
hasHeaderData
setContinueLoad:
setHasContinueLoad:
hasContinueLoad
headerData
continueLoad
_headerData
_continueLoad
T@"NSData",&,N,V_headerData
TB,N,V_continueLoad
setReceivedData:
hasReceivedData
receivedData
_receivedData
T@"NSData",&,N,V_receivedData
hasAdditionalProperties
_additionalProperties
T@"NSData",&,N,V_additionalProperties
hasTaskDescription
_taskDescription
T@"NSString",&,N,V_taskDescription
startMonitoringDynamicStore
stopMonitoringDynamicStore
handleDynamicStoreCallback:changedKeys:
handleBetterNetworkEvent
_dynamicStoreSource
_blocksToExecuteAfterNetworkChange
_networkChangeEventCount
_symptomToken
handleNewConnection:
canLaunchProcessWithIdentifier:
launchProcessWithIdentifier:sessionIdentifier:
_connection
_listener
_registeredClients
_pendingWakes
encodeWithCoder:
initWithCoder:
supportsSecureCoding
TB,R
componentsSeparatedByString:
objectAtIndex:
allowedClassesForUnarchiving
_nsurlsessionproxy_secureArchivedDataWithRootObject:
initForReadingFromData:error:
setByAddingObject:
decodeObjectOfClasses:forKey:
_nsurlsessionproxy_secureUnarchiveObjectOfClass:withData:
_shouldPreserveBackgroundSessionDisposition
_nsurlsessionproxy_requiresBackgroundSession
_nsurlsessionproxy_cancelWithError:
_nsurlsessionproxy_clearError
_nsurlsessionproxy_error
lowercaseString
_nsurlsessionproxy_isSafeRequest
sessionIdentifier
sequenceNumber
setSequenceNumber:
idsPriority
setIdsPriority:
_nsurlsessionproxy_setSessionUUID:
setDomain:
setCode:
_initWithActualError:
_actualError
setArchiveList:
archiveList
_initWithActualRequest:
_actualRequest
_initWithActualResponse:
_actualResponse
_initWithActualAuthChallenge:
_actualAuthChallenge
_initWithActualCredential:
_actualCredential
_setActualConfiguration:
T@"NSURLSessionConfiguration",&,S_setActualConfiguration:
_actualAdditionalProperties
_setActualAdditionalProperties:
T@"NSDictionary",&,S_setActualAdditionalProperties:
_actualTaskInfo
_setActualTaskInfo:
T@"__NSCFURLSessionTaskInfo",&,S_setActualTaskInfo:
propertyListWithData:options:format:error:
dataWithPropertyList:format:options:error:
_actualAuthHeaders
_setActualAuthHeaders:
T@"NSDictionary",&,S_setActualAuthHeaders:
nsurlsessiondPath
removeItemAtPath:error:
cStringUsingEncoding:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLForDirectory:inDomain:appropriateForURL:create:error:
nsurlsessiondLaunchdPath
createFileAtPath:contents:attributes:
dateWithTimeIntervalSinceReferenceDate:
createDataVaultDirectoryAtPath:
createDirectoryAtPath:
setStreamErrorDomain:
setHasStreamErrorDomain:
hasStreamErrorDomain
setStreamErrorCode:
setHasStreamErrorCode:
hasStreamErrorCode
streamErrorDomain
streamErrorCode
_streamErrorCode
_streamErrorDomain
Ti,N,V_streamErrorDomain
Ti,N,V_streamErrorCode
hasArchiveList
_archiveList
T@"NSData",&,N,V_archiveList
initWithType:
returnTypes:
queryMetaDataSync
isCatalogFetchedWithinThePastFewDays:
results
findBestAssetFrom:skipDownload:
startCatalogDownload:then:
installedAssetVersion
attributes
intValue
purge:
downloadAsset:
moveInstalledAsset:withVersion:
queryAndFindBestAsset:
startDownload:
URLByAppendingPathExtension:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
setInstalledAssetVersion:
getLocalFileUrl
moveFileAtomically:toLocation:
_installedAssetVersion
TQ,V_installedAssetVersion
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
initWithIdentifier:
identifierIsForSpringBoardApplication:
initWithIdentifier:applicationIdentifier:
indexOfObject:
removeObjectAtIndex:
setCurrentRequestDelay:
initialize
usesContainerManagerForAVAsset
invokeSelectorForAllObservers:
_onqueue_resetRequestDelay
setIsInTransitionalDiscretionaryPeriod:
setBundleIdentifier:
_bundleIdentifier
_observers
_currentRequestDelay
T@"NSString",&,V_bundleIdentifier
Td,V_currentRequestDelay
TB,VisInTransitionalDiscretionaryPeriod
containingBundleRecord
dataContainerURL
requestDelayQueue
setupDelayTimer
wakeUpApp:forSession:withSessionUUID:
application:isHandlingBackgroundSessionWithIdentifier:withSessionUUID:
applicationHasBackgroundTaskCompletion:
applicationBackgroundUpdatesEnabled:
startMonitoringBundleID:
addObserver:forApplication:
removeObserver:forApplication:
stopMonitoringBundleID:
setupTransitionalDiscretionaryPeriodTimer
disableTransitionalDiscretionaryPeriodTimer
startTransitionalDiscretionaryPeriodTimer
applicationBackgroundUpdatesTurnedOff:
applicationBackgroundUpdatesTurnedOn:
_delayTimer
_nonDiscretionaryGracePeriodTimer
_extendedNonDiscretionaryGracePeriodTimer
_transitionalDiscretionaryStateTimer
_containingApplication
wakeUpExtension:forSession:withSessionUUID:wakeRequirement:
extension:isHandlingBackgroundSessionWithIdentifier:withSessionUUID:
addObserver:forExtension:
removeObserver:forExtension:
extensionWasRemovedFromScreen:
containerIDFromPrimaryIdentifier:secondaryIdentifier:
bundleIDFromPrimaryIdentifier:secondaryIdentifier:
isContainerIDForeground:
addObserver:forContainerID:
removeObserver:forContainerID:
containerDidEnterForeground:
containerDidEnterBackground:
_monitor
_isForeground
_initializedForegroundStateFromMonitorCallback
providerIDForApplication:sharedContainerIdentifier:
addObserver:forProviderID:
removeObserver:forProviderID:
providerDidEnterForeground:
providerDidEnterBackground:
_initializedForegroundState
_springboardApplication
setRequest:
hasRequest
request
_request
T@"PDURLSessionProxyRequest",&,N,V_request
setReason:
setHasReason:
hasReason
_reason
TI,N,V_reason
EDUMode
registerUserSyncStakeholder:withMachServiceName:
isMultiUser
taskWithName:reason:forBundleID:
begin
allCredentials
enumerateObjectsUsingBlock:
allValues
removeCredential:forProtectionSpace:
taskWithName:reason:
willSwitchUser
uploadContent
startUMTask:taskInfo:
endUMTask:
restoredTaskEnqueued:
tasksHaveBeenEnqueued
willSwitchToUser:
readyToSwitchToUser:
activeTasks
setActiveTasks:
activeTasksLock
setActiveTasksLock:
monitorTask
setMonitorTask:
monitorTaskSet
setMonitorTaskSet:
monitorTaskLock
setMonitorTaskLock:
tasksInitialized
setTasksInitialized:
tasksEnqueued
setTasksEnqueued:
bridgeTasks
setBridgeTasks:
_tasksInitialized
_tasksEnqueued
_activeTasksLock
_monitorTaskLock
_activeTasks
_monitorTask
_monitorTaskSet
_bridgeTasks
T@"NSMutableSet",&,V_activeTasks
T{os_unfair_lock_s=I},V_activeTasksLock
T@"UMUserSyncTask",&,V_monitorTask
T@"NSMutableSet",&,V_monitorTaskSet
T{os_unfair_lock_s=I},V_monitorTaskLock
TB,V_tasksInitialized
TB,V_tasksEnqueued
T@"NSMutableDictionary",&,V_bridgeTasks
setShouldCancel:
setHasShouldCancel:
hasShouldCancel
shouldCancel
_shouldCancel
TB,N,V_shouldCancel
credStorage_getInitialCredentialDictionariesWithReply:
synchronousRemoteObjectProxyWithErrorHandler:
dictionaryWithDictionary:
credStorage_credentialsForProtectionSpace:reply:
credStorage_allCredentialsWithReply:
credStorage_setCredential:forProtectionSpace:
credStorage_defaultCredentialForProtectionSpace:reply:
defaultCredentialForProtectionSpace:
credStorage_setDefaultCredential:forProtectionSpace:
credentialsForProtectionSpace:
setCredential:forProtectionSpace:
setBundleID:
_cachedCredentials
_cachedDefaultCredentialUsers
_bundleID
T@"<NDCredentialStorageDelegate>",W,V_delegate
T@"NSString",C,V_bundleID
setHasBodyStream:
setHasHasBodyStream:
hasHasBodyStream
hasBodyStream
_hasBodyStream
TB,N,V_hasBodyStream
stringByAppendingFormat:
_companionAppBundleIdentifier
_uniqueIdentifier
invalidateAndCancel
resendPendingMessage:
baseMessage
handleDataTaskWithRequestMessage:forTaskIdentifier:withReply:
handleCancelTaskMessage:forTaskIdentifier:
handleSuspendTaskMessage:forTaskIdentifier:
handleResumeTaskMessage:forTaskIdentifier:withReply:
handleSetDescriptionMessage:forTaskIdentifier:
handleSetPriorityMessage:forTaskIdentifier:
handleInvalidateMessage:
handleUploadBodyDataMessage:forTaskIdentifier:withReply:
handleOpenSocketMessage:withReply:
numberWithUnsignedShort:
taskMessageForIdentifier:
releaseInfraWiFiForTaskIfNecessary:
releaseBTLinkAssertionIfNecessary:
propertyForKey:inRequest:
inputStreamWithData:
bodyData
bytes
write:maxLength:
streamError
streamTaskWithHostName:port:
performForwardingFromTCPConnection:toStreamTask:
performForwardingFromStreamTask:toTCPConnection:
closeRead
closeWrite
initSocketWithDevice:options:completionHandler:queue:
writeData:timeout:completionHandler:
_createDispatchData
readDataOfMinLength:maxLength:timeout:completionHandler:
setChallenge:
shouldRetainInfraWiFi
retainInfraWiFiForTaskWithIdentifier:
shouldRetainBTLinkAssertion
retainBTLinkAssertionWithIdentifier:
getBoundStreamsWithBufferSize:inputStream:outputStream:
setBytesSent:
setTotalBytesSent:
setTotalBytesExpectedToSend:
_ignoreDidReceiveResponseDisposition
URLSession:readClosedForStreamTask:
URLSession:writeClosedForStreamTask:
URLSession:betterRouteDiscoveredForStreamTask:
URLSession:streamTask:didBecomeInputStream:outputStream:
_URLSession:connectionEstablishedForStreamTask:
getTaskInformation
_sessionConfiguration
_tasks
_taskIdentifiersToSequenceNumbers
_taskIdentifiersToBodyStreams
_taskIdentifiersToInitialBodyInputStreams
_taskIdentifiersToWaitingReasons
_taskIdentifiersToPendingDataBytes
_taskIdentifiersToPendingDataCompletion
_streamTasksToDeviceConnections
_streamTasksToIDSTCPConnections
_streamTasksToOpenSocketReplies
_taskIdentifiersRetainingInfraWiFi
_taskIdentifiersRetainingBTLinkAssertion
_deviceConnections
_messagesToReSend
_skipInvalidateMessage
_implementsWillSendRequest
_implementsSessionAuthChallenge
_implementsTaskAuthChallenge
_implementsWillPerformRedirection
_implementsDidReceiveResponse
_isInvalid
_uuidString
T@"NSString",C,V_identifier
T@"NSString",C,V_uuidString
T@"<PDURLSessionProxyServerDelegate>",R,V_delegate
setHasBytesSent:
hasBytesSent
setHasTotalBytesSent:
hasTotalBytesSent
setHasTotalBytesExpectedToSend:
hasTotalBytesExpectedToSend
bytesSent
totalBytesSent
totalBytesExpectedToSend
_bytesSent
_totalBytesExpectedToSend
_totalBytesSent
TQ,N,V_bytesSent
TQ,N,V_totalBytesSent
TQ,N,V_totalBytesExpectedToSend
setHasTaskIdentifier:
hasTaskIdentifier
TQ,N,V_taskIdentifier
firstObject
lastObject
doubleValue
currentThroughputThreshold
setThroughputTimerForCurrentInterval
currentIntervalEndDelta
startThroughputMonitoringIfAppropriate
removeLastObject
calculateThroughput
stopThroughputMonitoring
startThroughputMonitoring
_clientBundleIdentifier
_clientSecondaryIdentifier
_throughputTimer
_progressTimestamps
_progressValues
_throughputInterval
_throughputMonitoringStartTime
_hasTransferredData
_explicitlyDiscretionary
_performsNonDiscretionaryThrougputMonitoring
_mayBeDemotedToDiscretionary
_UMSyncTask
_powerMonitorToken
_basePriority
Tq,V_basePriority
hasChallenge
challenge
_challenge
T@"PDURLSessionProxyAuthChallenge",&,N,V_challenge
hasDomain
setHasCode:
hasCode
hasUserInfo
_code
_domain
_userInfo
T@"NSString",&,N,V_domain
TQ,N,V_code
T@"NSData",&,N,V_userInfo
setAttributes:ofItemAtPath:error:
defaultWorkspace
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
setClass:forClassName:
setupNewClassMappingsForUnarchiver
applicationIsInstalled:
sortedArrayUsingComparator:
sessionID
getSessionWithIdentifier:forBundleID:
bgSessionManagerInterface
setExportedInterface:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
beginTransaction
endTransaction
plugInKitPlugins
pluginIdentifier
bundleIDsForAppProxies:
waitUntilDeviceIsUnlocked
createDaemonDirectory
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
listener:shouldAcceptNewConnection:
stakeholder
setStakeholder:
_clients
_transactionQueue
_createdDataVault
_archiveTimer
_privileged
_inSyncBubble
_stakeholder
T@"NSObject<OS_dispatch_queue>",R,V_queue
privileged
TB,GisPrivileged,V_privileged
inSyncBubble
TB,GisInSyncBubble,V_inSyncBubble
T@"NDUserSyncStakeholder",&,V_stakeholder
setBodyData:
hasBodyData
_bodyData
T@"NSData",&,N,V_bodyData
descriptor
setValues:
setEndowmentNamespaces:
setStateDescriptor:
setEvents:
handleStateUpdate:forProcess:
setUpdateHandler:
monitorWithConfiguration:
sharedConnection
isAutomaticAppUpdatesAllowed
resetStandardUserDefaults
standardUserDefaults
persistentDomainForName:
getBackgroundSettingsAppList
isEqualToNumber:
identity
embeddedApplicationIdentifier
bundle
previousState
endowmentNamespaces
taskState
exitEvent
context
status
predicateMatchingBundleIdentifiers:
setPredicates:
updateConfiguration:
monitoredBundleIDsUpdated
predicateMatchingBundleIdentifier:
handleForPredicate:error:
currentState
explanation
isValid
isValidAssertion:withName:
assertions
assertionNameForSessionUUID:
application:hasAssertionWithName:
_onqueue_releaseAssertionForBundleID:sessionID:
attributeWithDomain:name:
targetWithPid:
initWithExplanation:target:attributes:
acquireWithError:
dictionaryWithObject:forKey:
serviceWithDefaultShellEndpoint
optionsWithDictionary:
openApplication:withOptions:completion:
takeAssertionForBundleID:sessionID:sessionUUID:pid:
handleBackgroundSettingsChange
removePendingLaunchTasksForBundleID:sessionID:cancel:
_assertions
_appIsForeground
_observedBackgroundSettings
_monitoredBundleIDs
_assertion_lock
_backgroundUpdatesAllowed
_onqueue_wakeUpExtension:forSession:withSessionUUID:wakeRequirement:
_onqueue_removePendingLaunchForBundleID:sessionID:
URLSessionDidCompleteForExtensionWithBundleIdentifier:info:
_service
_pendingLaunches
currentIntervalThroughputThreshold
currentIntervalDuration
initWithWrapper:monitoredApplication:priority:options:queue:
wrapperWillSuspend
wrapperTransferredData:
_wrapper
_performsNonDiscretionaryThroughputMonitoring
hasSessionIdentifier
hasUuidString
setHasSequenceNumber:
hasSequenceNumber
setHasIdsPriority:
hasIdsPriority
_idsPriority
_sequenceNumber
_sessionIdentifier
T@"NSString",&,N,V_sessionIdentifier
T@"NSString",&,N,V_uuidString
TQ,N,V_sequenceNumber
Tq,N,V_idsPriority
hasError
_error
T@"PDURLSessionProxyError",&,N,V_error
knownSZExtractorImplementations
_onqueue_adoptEffectiveConfiguration:
initializeHTTPAuthenticatorWithAppleIDContext:statusCodes:
set_authenticatorConfiguredViaTaskProperty:
set_backgroundPublishingURL:
_DuetActivityProperties
_extractorPreparedForExtraction
terminateStreamWithError:completionBlock:
prepareForExtractionToPath:completionBlock:
supplyBytes:withCompletionBlock:
suspendStreamWithCompletionBlock:
finishStreamWithCompletionBlock:
extractorDelegate
setExtractorDelegate:
doesConsumeExtractedData
T@"<STExtractorDelegate>",W,N
prepareForExtraction:
T@"<SZExtractorDelegate>",W,N
set_extractorPreparedForExtraction:
set_timeoutIntervalForResource:
set_disallowCellular:
getUUIDBytes:
set_nw_activity:
setArgs:
encodeInteger:forKey:
args
decodeIntegerForKey:
decodeObjectOfClass:forKey:
hasBeenCalled
setHasBeenCalled:
_hasBeenCalled
_args
Ti,V_type
T@"NSArray",C,V_args
TB,V_hasBeenCalled
objectAtIndexedSubscript:
backgroundTask:didCompleteWithError:taskMetrics:info:reply:
backgroundDownloadTask:didFinishDownloadingToURL:response:reply:
createIdentityFromEndpoint:error:
certificates
persistence
credentialWithIdentity:certificates:persistence:
backgroundTask:didReceiveChallenge:reply:
backgroundSessionDidStartAppWake:reply:
backgroundSessionDidFinishAppWake:reply:
backgroundTask:_willSendRequestForEstablishedConnection:reply:
openFileAtPath:mode:withReply:
backgroundAVAssetDownloadTask:didResolveMediaSelectionProperyList:reply:
backgroundAVAssetDownloadTask:willDownloadVariants:reply:
backgroundTask:willBeginDelayedRequest:reply:
insertObject:atIndex:
performCallback:
drainCallback:
_callbacks
T@"<NDCallbackQueueDelegate>",W,V_delegate
AVURLAsset
downloadConfig
isFileURL
originalNetworkContentURL
temporaryDestinationURL
assetTitle
assetArtworkData
setOptions:
valueWithBytes:objCType:
retryError
_URLToUse
_destinationURLToUse
_AVAssetDownloadSesssionOptions:config:
initWithKeyOptions:valueOptions:capacity:
cancelDelayedCompletionWakeTimer
initializedWithAVAsset
AVAssetURL
URLAssetWithURL:options:
setAVURLAsset:
setAVAssetDownloadToken:
AVAssetDownloadToken
_web_errorWithDomain:code:failingURL:
URLByDeletingLastPathComponent
avAssetDownloadsDirectory
URLPathAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
substringWithRange:
updatePriorityForTaskID:
cancelAVDownloadAndFailTaskWithIdentifier:withError:
downloadDirectoryToUse:
initWithAVAggregateDownloadTaskNoChildTaskKindWithURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:enableSPIDelegateCallbacks:
initWithAVAssetDownloadURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:downloadConfig:
setInitializedWithAVAsset:
avAssetForURL:downloadToken:
setTemporaryDestinationURL:
setAssetTitle:
setAssetArtworkData:
destinationURLToUseForTask:
setDestinationURL:
setAVAssetURL:
newAVAssetDownloadSessionWrapperForTaskInfo:
setupThroughputMonitorForWrapper:taskInfo:identifier:
backgroundAVAssetDownloadTask:willDownloadToURL:
initWithAVAggregateAssetDownloadChildDownloadSessionIdentifier:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:
setPriority:forTCPConnectionWithTaskIdentifier:
cancelTCPConnectionForTask:withError:
taskWithIdentifier:didCompleteWithError:
setRetryError:
absoluteString
startAVAssetDownloadSessionWithTaskIdentifier:
backgroundAVAssetDownloadTask:didReceiveDownloadToken:
ensureAVAssetDownloadSessionWrapperForTaskIdentifier:
cancelThroughputMonitorForWrapper:
setupDelayedCompletionWakeTimer
backgroundAVAssetDownloadTaskDidUpdateProgress:totalBytesWritten:totalBytesExpectedToWrite:
backgroundAVAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:
backgroundAVAssetDownloadTask:didFinishDownloadForMediaSelectionPropertyList:
setResolvedMediaSelectionPlist:
retryTask:originalError:
downloadTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:identifier:uniqueIdentifier:reply:
dataTaskWithRequest:originalRequest:pipeHandle:identifier:uniqueIdentifier:reply:
hasEntitlementToSpecifyDownloadDestinationURL
adjustedTCPConnectionPriorityForTaskPriority:
stopAVAssetDownloadSessionWithTaskIdentifier:
_identifiersToAVWrappers
_identifiersToThroughputMonitors
_identifiersToTCPConnections
_identifiersToDASActivities
_assetDownloadTokensToAssets
_clientConfig
_delayedWakeTimer
caseInsensitiveCompare:
PDURLSessionProxyOpenSocket
NSCopying
NDPowerlogReporter
PDURLSessionProxyDidReceiveChallengeReply
PDURLSessionProxyCreateSession
PDURLSessionProxySetTaskPriority
PDURLSessionProxyMessageInfo
PDURLSessionProxyService
IDSServiceDelegate
NSObject
PDURLSessionProxyDataTaskWithRequestReply
PDURLSessionProxyServerService
PDURLSessionProxyServerDelegate
PDBluetoothCompanionLinkAssertion
CBScalablePipeManagerDelegate
PDURLSessionProxyDataTaskWithRequest
PDURLSessionProxyGetAuthHeaders
NDAVAssetDownloadSessionWrapper
AVAssetDownloadSessionDelegate
NDSessionManager
NDBackgroundSessionManagerProtocol
NDBackgroundSessionDelegate
NDBackgroundSession
NDBackgroundSessionProtocol
NDCallbackQueueDelegate
NSURLSessionDataDelegatePrivate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegatePrivate
NSURLSessionDownloadDelegate_Private
NSURLSessionDelegate_Internal
NDCredentialStorageDelegate
NDApplicationObserver
PDURLSessionProxyStartedUp
PDURLSessionProxyGetAuthHeadersReply
PDURLSessionProxyDidReceiveData
PDURLSessionProxyDidReceiveResponse
PDURLSessionProxyResumeTask
PDURLSessionProxySetTaskDescription
NDStatusMonitor
NDUserEventAgentConnection
NSSecureCoding
NSCoding
PDURLSessionProxyCommon
NSURLSessionProxyAdditions
PDURLSessionProxySocketDisconnected
NDFileUtilities
PDURLSessionProxyOpenSocketReply
PDURLSessionProxyResponse
TLDMobileAssetManager
NDApplication
NDSpringBoardApplication
NDSpringBoardAppObserver
NDChronoKitExtension
NDChronoKitExtensionObserver
NDCloudContainer
BRContainerObserver
NDFPProvider
FPProviderObserver
PDURLSessionProxyDidReceiveResponseReply
PDURLSessionProxyWillPerformRedirectionReply
PDURLSessionProxyRequest
PDURLSessionProxyCredential
PDURLSessionProxyTaskWaiting
NDUserSyncStakeholder
UMUserSyncStakeholder
UMUserSwitchStakeholder
PDURLSessionProxyDidReceiveDataReply
PDURLSessionProxySuspendTask
PDURLSessionProxyInvalidateSession
NDCredentialStorage
PDURLSessionProxyWillSendRequest
PDURLSessionProxyOpenBodyStream
PDURLSessionProxyServer
NSURLSessionStreamDelegate_Internal
NSURLSessionStreamDelegate
PDURLSessionProxyDidSendBodyData
PDURLSessionProxyCancelTask
PDURLSessionProxyTaskMessage
NDTaskMonitor
PDURLSessionProxyDidReceiveChallenge
PDURLSessionProxyError
Daemon
LSApplicationWorkspaceObserverProtocol
NSXPCListenerDelegate
NDSessionManagerDelegate
PDURLSessionProxyUploadBodyData
NDSpringBoard
NDChronoKitLauncher
NDAVThroughputMonitor
PDURLSessionProxySessionMessage
PDURLSessionProxyTaskWillBeRetried
PDURLSessionProxyConnectedToServer
PDURLSessionProxyAuthChallenge
STExtractor
SZExtractor
PendingCallback
NDCallbackQueue
PDURLSessionProxySessionBecameInvalid
NDAVAdditions
NDAVBackgroundSession
NDAVAssetDownloadSessionWrapperDelegate
PDURLSessionProxyTaskCompleted
PDURLSessionProxyWillPerformRedirection
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8I16
v20@0:8B16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
I16@0:8
v16@0:8
@"NSString"
@"PDURLSessionProxySessionMessage"
{?="port"b1}
@24@0:8@16
v32@0:8q16q24
@"NSURLSessionTask"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@"PDURLSessionProxyCredential"
@"PDURLSessionProxyTaskMessage"
{?="disposition"b1}
@"NSData"
{?="delegateImplementsDidReceiveResponse"b1"delegateImplementsSessionAuthChallenge"b1"delegateImplementsTaskAuthChallenge"b1"delegateImplementsWillPerformRedirection"b1"delegateImplementsWillSendRequest"b1"supportsRedirects"b1}
{?="priority"b1}
@28@0:8@16S24
S16@0:8
v20@0:8S16
@"PBCodable"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v24@0:8@?16
v28@0:8@16B24
q32@0:8@16S24B28
q24@0:8@16
Q24@0:8q16
B32@0:8Q16q24
v64@0:8@16S24@28@36B44q48@?56
v36@0:8@16S24@?28
v28@0:8@16S24
v44@0:8@16@24S32@36
v36@0:8@16B24@28
@"IDSService"
@"NSMutableDictionary"
@"NSMutableSet"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"PDURLSessionProxyServer"16
@"NSObject<OS_dispatch_source>"
@"PDBluetoothCompanionLinkAssertion"
v24@0:8@"CBScalablePipeManager"16
v40@0:8@"CBScalablePipeManager"16@"NSString"24@"NSError"32
v32@0:8@"CBScalablePipeManager"16@"NSString"24
v32@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24
v40@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24@"NSError"32
@"NSUUID"
@"CBScalablePipeManager"
v24@0:8Q16
@"PDURLSessionProxyRequest"
{?="taskSequenceNumber"b1}
@"PDURLSessionProxyResponse"
v136@0:8@16{?={?=qiIq}{?=qiIq}}24@72{?={?=qiIq}{?=qiIq}}80@128
v40@0:8@16Q24Q32
v24@0:8@"AVAssetDownloadSession"16
v32@0:8@"AVAssetDownloadSession"16@"NSError"24
v32@0:8@"AVAssetDownloadSession"16@"AVMediaSelection"24
v136@0:8@"AVAssetDownloadSession"16{?={?=qiIq}{?=qiIq}}24@"NSArray"72{?={?=qiIq}{?=qiIq}}80@"AVMediaSelection"128
v40@0:8@"AVAssetDownloadSession"16Q24Q32
v32@0:8@"AVAssetDownloadSession"16@"NSArray"24
@56@0:8@16@24@32@40@48
@"AVURLAsset"
@"AVAssetDownloadSession"
@"<NDAVAssetDownloadSessionWrapperDelegate>"
@"NSURL"
@"NSDictionary"
v56@0:8@16@24@32@40@?48
v32@0:8@16@?24
v56@0:8@"NSURLSessionConfiguration"16@"<NDBackgroundSessionClient>"24@"NSURL"32@"NSDictionary"40@?<v@?@"<NDBackgroundSessionProtocol>"@"NSDictionary"B>48
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?>16
v32@0:8@"NDBackgroundSession"16@?<v@?>24
@36@0:8@16@24B32
@24@0:8^B16
B32@0:8@16@24
@?16@0:8
@"NSXPCConnection"
@"<NDSessionManagerDelegate>"
v64@0:8@16@24@32Q40@48@?56
v80@0:8@16@24@32@40Q48@56@64@?72
v56@0:8@16@24Q32@40@?48
v48@0:8@16Q24@32@?40
v32@0:8Q16@?24
v32@0:8Q16@24
v32@0:8@16Q24
v32@0:8q16Q24
v32@0:8d16Q24
v32@0:8Q16Q24
v28@0:8S16Q20
v48@0:8Q16@24@32@?40
v108@0:8Q16@24@32@40@48@56@64Q72@80Q88B96@?100
v88@0:8Q16@24@32@40@48@56Q64@72@?80
v64@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSString"32Q40@"NSUUID"48@?<v@?B>56
v80@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSURL"32@"NSData"40Q48@"NSUUID"56@"NSDictionary"64@?<v@?B>72
v56@0:8@"NSURLRequest"16@"NSURLRequest"24Q32@"NSUUID"40@?<v@?B>48
v48@0:8@"NSData"16Q24@"NSUUID"32@?<v@?B>40
v32@0:8Q16@?<v@?@"NSData">24
v32@0:8Q16@"NSDictionary"24
v32@0:8@"NSString"16Q24
v24@0:8@"NSString"16
v48@0:8Q16@"NSDictionary"24@"NSString"32@?<v@?B>40
v108@0:8Q16@"NSURL"24@"NSURL"32@"NSURL"40@"NSString"48@"NSData"56@"NSDictionary"64Q72@"NSUUID"80Q88B96@?<v@?B>100
v88@0:8Q16@"NSArray"24@"NSString"32@"NSData"40@"NSDictionary"48@"NSString"56Q64@"NSUUID"72@?<v@?B>80
v24@0:8q16
@24@0:8Q16
v24@0:8@"NSError"16
v32@0:8@"NSError"16@?<v@?q@"NSURLCredential">24
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"16@0:8
@"NSString"24@0:8Q16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32@?<v@?>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v40@0:8@16@24q32
v36@0:8@16@24B32
v36@0:8@16@24i32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24i32
@32@0:8@16@24
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURLResponse"32
@"NSURL"32@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24
v44@0:8@16@24i32@?36
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary"@"NSURLRequest">40
v44@0:8@"NSURLSession"16@"NSString"24i32@?<v@?i>36
v24@0:8@"NDApplication"16
d24@0:8d16
@28@0:8@16B24
@84@0:8@16@24B32@36@44@52@60@68@76
@20@0:8B16
@24@0:8q16
@32@0:8@16^B24
B40@0:8@16@24@32
v48@0:8@16Q24@32B40B44
B20@0:8B16
q20@0:8B16
v28@0:8Q16B24
@32@0:8@16Q24
v44@0:8@16@24Q32B40
B24@0:8^{__SecTrust=}16
@"NSURLSession"
@"NDCredentialStorage"
@"NDApplication"
@"NSMutableArray"
@"NDCallbackQueue"
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"
@"<NDBackgroundSessionDelegate>"
{?="version"b1}
{?="continueLoad"b1}
v32@0:8@?16Q24
v32@0:8@?16q24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
^{__CFRunLoopSource=}
v40@0:8@?16@24@32
@"NSObject<OS_xpc_object>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v40@0:8@16^@24^@32
#24@0:8S16B20
@32@0:8#16@24
q16@0:8
{?="streamErrorCode"b1"streamErrorDomain"b1}
B40@0:8@16@24q32
v24@0:8:16
d16@0:8
v24@0:8d16
@"NDSpringBoardApplication"
@"BRContainersMonitor"
@"FPProviderMonitor"
{?="reason"b1}
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"UMUserSyncTask"
{?="shouldCancel"b1}
@"<NDCredentialStorageDelegate>"
{?="hasBodyStream"b1}
v32@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24@"NSInputStream"32@"NSOutputStream"40
@48@0:8@16@24Q32@40
q28@0:8Q16B24
v40@0:8@16Q24@?32
@"NSURLSessionConfiguration"
@"<PDURLSessionProxyServerDelegate>"
{?="bytesSent"b1"totalBytesExpectedToSend"b1"totalBytesSent"b1}
{?="taskIdentifier"b1}
@80@0:8@16@24@32@40@48q56Q64@72
@"__NSCFURLSessionTaskInfo"
@"PDURLSessionProxyAuthChallenge"
{?="code"b1"version"b1}
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@"NDSessionManager"16@"NSString"24@?<v@?>32
@"NDUserSyncStakeholder"
B44@0:8@16@24@32i40
@"RBSProcessMonitor"
B48@0:8@16@24@32q40
v48@0:8@16@24@32q40
@"CHSNSURLSessiondService"
@56@0:8@16@24q32Q40@48
@"NDAVAssetDownloadSessionWrapper"
{?="idsPriority"b1"sequenceNumber"b1}
@"PDURLSessionProxyError"
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"<STExtractorDelegate>"16@0:8
v24@0:8@"<STExtractorDelegate>"16
@"<SZExtractorDelegate>"16@0:8
v24@0:8@"<SZExtractorDelegate>"16
@36@0:8i16Q20@28
@"NSArray"
v32@0:8@16q24
@"<NDCallbackQueueDelegate>"
v48@0:8@16Q24Q32Q40
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSError"24
v48@0:8@"NDAVAssetDownloadSessionWrapper"16Q24Q32Q40
v56@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSValue"24@"NSArray"32@"NSValue"40@"NSDictionary"48
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSDictionary"24
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSArray"24
v40@0:8@16@24Q32
q24@0:8q16
B24@0:8Q16
@"NSMapTable"
Failure trying to unarchive file at %@ error: %@ [%d]
Error %d renaming item at %@ to %@
Error %d renaming item at %@ to %@. Won't try to unarchive.
SIGTERM received, shutting down.
PDURLSessionProxyService setting preferInfraWiFi to NO
%@: Devices unpaired
%@ sent startup message with identifier %@
sendProtobuf: returned NO for PDURLSessionProxy startup message, error %@ [%ld]
%@ Connected to post PDURL device - resetting state
%@ Updated device state connected = %c
PDURLSessionProxyService setting preferInfraWiFi to %c
Received a message of priority %ld with lower sequence number %llu than existing sequence number %llu. Dropping message.
%@::%@ type = %u, connected = %c, isReply = %c, sourceApplication = %@, msgTO = %ld
Unable to determine source application for message
Timed out waiting for reply for message, identifier = %{public}@, type = %u
Failed to send message! Type = %u, error = %@ [%ld]
%{public}@ sent NSURLSessionProxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu, result = %c
Subclass did not handle message %@ of type %u
Subclass did not handle message send failure for message %@
Received a reply with identifier %@ but don't have a corresponding reply block
%@::%@ outgoingResponseIdentifier = %{public}@, type = %u, isResponse = %c, data length = %lu
%@ received protobuf of type %u which could not be decoded! isResponse = %c, data length = %lu
Received PDURLSession Startup message with launchUUID %@
Received PDURLSessionProxy message with new launchUUID %@
Dropping NSURLSessionProxy message with old launchUUID %@
Received PDURLSessionProxy Startup message (without a launchUUID)
%{public}@ receiving NSURLSession proxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu
Incoming (non-reply) message with identifier %{public}@ has priority %lld and sequence number %llu
%@::%@ success = %c, identifier = %{public}@, error = %@ [%ld]
Failed to send PDURLSessionProxy startup message, error %@
%@: activeAccountsChanged: %@
%@: didSwitchActivePairedDevice
PDURLSessionProxyServerService received CreateSession message for identifier %@ with existing UUID %@. Ignoring message.
PDURLSessionProxyServerService received CreateSession message for identifier %@ with UUID %@
PDURLSessionProxyServerService received message of type %u for session %@
PDURLSessionProxyServerService received Invalidate message for unknown session identifier %@, replying with BecameInvalid message
NSURLSessionProxy message of type %u received for unknown session with identifier %@
Received NSURLSessionProxy message of type %u without a session identifier
%{public}@: Relinquishing link requirements for %@
%{public}@: Releasing %{public}@
%{public}@: Acquiring...
%{public}@: Invalidating...
%p Disavowing AVAssetDownloadSession
Taking power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Failed to take power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Releasing power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Starting AVAssetDownloadSession
AVAssetDownloadSession download complete
AVAssetDownloadSession download failed
AVAssetDownloadSession download finished for media selection
NDCacheDeleteFixUpDirectoriesOnStartup enumeration failed at %@ error=%@
Informing CacheDelete purgable bytes %lld on %@
Purged %lld bytes on volume %@.  CacheDelete requested %lld.
CacheDelete callback registration succeeded.
CacheDelete callback registration failed!
NDCacheDeleteFixUpDirectoriesInContainer enumeration failed at %@ error=%@
NDCacheDeletePurgableItemsForVolume enumeration failed at %@ error=%@
NDCacheDeleteGetPurgableItemsInContainer enumeration failed at %@ error=%@
CacheDelete request - Purged %@ [%zu bytes]
Too many sessions for app <%{public}@> (%zu > 1024)
Ignoring stale session (inactive for %fs) with identifier: %@ for bundle id: %@
Not restoring session with identifier: %@ for bundleID: %@ since it does not have any tasks
Coudn't restore session with identifier: %@ for bundle id: %@
Missing or invalid configuration.plist for bundleID: %@, sessionID: %@. Removing session directory
No directory for bundleID: %@, sessionID: %@
Launching application %@ since we could not restore session %@
Capturing boost activity from %@ unnecessary
Capturing boost activity from %@
Ending boost activity from %@
Client %@ tried to specify a shared container that it cannot access: %@
Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
Client tried to set _connectionPoolName but is missing the %@ entitlement
Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
Client tried to set _duetPreauthorized but is missing the %@ entitlement
Client tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
Client specified shared container identifier %@. %@ can access: %d
NDSession <%{public}@>.<%@>.<%@>: already has a connected client, returning nil proxy object to client
Connected client is an extension is attempting to a connect to a session without a valid shared data container
NDSession <%{public}@>.<%@>.<%@>: reconnecting existing session
Connected client is an extension and did not specify a valid shared container identifier
Creating session with identifier: %@ for bundle id: %@
NDSession <%{public}@>.<%@>.<%@>: created successfully
Coudn't create session with identifier: %@ for bundle id: %@
NDSession <%{public}@>.<%@>.<%@>: instructed to send pending callbacks
Asked to send pending callbacks for session %@ that we have no record of. This shouldn't happen
releaseAssertionForSession: %@
NDSession <%{public}@>.<%@>.<%@>: notified it is OK to send pending callbacks
Signalled that it is okay to send pending callbacks for session %@ that we have no record of. This shouldn't happen
obliterateAllSessions for bundleID %@
NDSession <%{public}@>.<%@>.<%@>: removing session
Obliterating session manager for bundle ID: %@
NDSession <%{public}@> Client %@ is acting on behalf of cloud documents container with container id: %@ and bundle id: %@
NDSession <%{public}@> Client %@ is acting on behalf of file provider id: %@ and bundle id: %@
NDSession <%{public}@> Client %@ is an independent extension
NDSession <%{public}@> Client %@ is acting on behalf of application %@, impersonatingSpringBoardApp: %d
NDSession <%{public}@> Client %@ is a SpringBoard application
NDSession <%{public}@> Client %@ is a daemon or non-SpringBoard application
NDSession <%{public}@> Couldn't find out download directory for %@. Not creating session
NDSession <%{public}@> Session <%{public}@> is for <%@>.<%@> using resource timeout: %f, request timeout: %f allowsCellularAccess: %d, allowsExpensiveAccess: %d, _sourceApplicationBundleIdentifier: %@, _sourceApplicationSecondaryIdentifier: %@
NDSession <%{public}@> Using XPC connection %@ for client %@ with identifier %@ and PID %d
NDSession <%{public}@> XPC connection is to PlugIn %@ for session <%@>.<%@>
NDSession <%{public}@> client %@ connected result (%c), XPC(%c) proxy(%c) for %@
NDSession <%{public}@> notified associated application %@ was suspended, XPC(%c)
NDSession <%{public}@> Application %@ was reinstalled, adjusting download paths
NDSession <%{public}@> Couldn't find out download directory for re-installed application %@. It must not have been re-installed properly. Obliterating session
NDSession <%{public}@> Cleaning up
NDSession <%{public}@> Obliterating session: <%@>.<%@>
NDSession <%{public}@> %{public}@ %f seconds past start time, new delay: %f, new window: %f
NDSession <%{public}@> %{public}@ potentially discretionary, re-scheduling, was discretionary: %d, is now discretionary: %d
NDSession <%{public}@> Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _connectionPoolName but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
NDSession <%{public}@> Client tried to set _duetPreauthorized but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
NDSession <%{public}@> Client tried to set _pathToDownloadTaskFile but is not allowed to create %@: %{errno}d
NDSession <%{public}@> Session <%@>.<%@> download path %@ did not exist, recreating.
NDSession <%{public}@> %{public}@ couldn't create new task. task: %@, path: %@
NDSession <%{public}@> %{public}@ couldn't create new task becuase adjusted request is nil, taskInfo.currentRequest = %@
NDSession <%{public}@> %{public}@ error creating resume data: %@
NDSession <%{public}@> %{public}@ could not create resume data. The server might not support resumable downloads. Will retry full download
NDSession <%{public}@> %{public}@ download created from resume data
NDSession <%{public}@> %{public}@ is being restored as completed with download file still at %@
NDSession <%{public}@> %{public}@ restoring, which had never been started, will resume implicitly
NDSession <%{public}@> %{public}@ restored but never started, terminating with timeout
NDSession <%{public}@> Download directory for bundle %@ has moved to %@, but saved download file path is %@. Need to fix download path
NDSession <%{public}@> New download path: %@
NDSession <%{public}@> %{public}@ completed with error %@ [%ld] (was active before nsurlsessiond exit)
NDSession <%{public}@> Couldn't recreate existing task with identifier: %@ in session: <%@>.<%@>
NDSession <%{public}@> Exception caught while restoring a task: %@
Too many tasks for app session <%{public}@>.<%@> (%zu > 512)
NDSession <%{public}@> %{public}@ will retry after %lld seconds
NDSession <%{public}@> has %lu outstanding tasks
NDSession <%{public}@> client %@ is active result (%c), XPC(%c) proxy(%c) for %@
NDSession <%{public}@> %{public}@ not resumed but client disconnected, terminating it with timeout
NDSession <%{public}@> %{public}@ not resumed but client disconnected, resuming it implicitly
NDSession <%{public}@> client %@ disconnected, XPC(%c) proxy(%c) for %@
NDSession <%{public}@> Invoking client reconnection completion block
NDSession <%{public}@> Delivering pending events immediately for client session: <%@>.<%@>. Signalled already: %d, isHandlingBackgroundSession: %d
NDSession <%{public}@> Waiting for notification to deliver pending events for client session: <%@>.<%@>
NDSession <%{public}@> Received signal to deliver pending events for client session: <%@>.<%@>
NDSession <%{public}@> Delivering pending events for client session: <%@>.<%@>
NDSession <%{public}@> Application %@ is not handling a background URLSession but we still received a signal to deliver pending events
NDSession <%{public}@> Session: %@ get tasks for reconnection: %@
NDSession <%{public}@> %{public}@ for %@ is overriding discretionary status by request - forcing to %c
NDSession <%{public}@> %{public}@ for %@ is overriding discretionary status - forcing to %c
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary because the connected client is an extension
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary, since nsurlsessiond is running in EDU sync mode
NDSession <%{public}@> %{public}@ current discretionary status for %@ is discretionary (opt-in: %d)
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary
NDSession <%{public}@> %{public}@ should not begin before %@
NDSession <%{public}@> %{public}@ can now begin - earliest begin date satisfied
NDSession <%{public}@> %{public}@ no longer has a valid task or taskInfo, no need to begin
NDSession <%{public}@> %{public}@ ignoring stale delay begin timer
NDSession <%{public}@> %{public}@ can begin immediately - begin date is in past
NDSession <%{public}@> %{public}@ has not requested a begin delay
NDSession <%{public}@> %{public}@ cannot handle delayed request callback because task: %@ or taskInfo: %@ is nil
NDSession <%{public}@> %{public}@ already replied to delayed request callback - not calling again
NDSession <%{public}@> %{public}@ receiving delayed request callback
NDSession <%{public}@> %{public}@ client is not running and doesn't support wakes, continuing load for delayed request
NDSession <%{public}@> %{public}@ using new request from delayed request callback
NDSession <%{public}@> %{public}@ will be canceled due to delayed request callback
NDSession <%{public}@> %{public}@ continuing load from delayed request callback
NDSession <%{public}@> %{public}@ skipping delayed request callback - delegate not implemented
NDSession <%{public}@> %{public}@ resuming
NDSession <%{public}@> %{public}@ will begin
NDSession <%{public}@> %{public}@ cannot resume because task: %@ or taskInfo: %@ is nil
NDSession <%{public}@> %{public}@ suspending
NDSession <%{public}@> Consumed sandbox extension for file %@, extension = %lld
NDSession <%{public}@> Failed to consume sandbox extension %s for fileURL %@
NDSession <%{public}@> Error copying upload file: %@ [%ld]
NDSession <%{public}@> Released sandbox extension %lld
NDSession <%{public}@> Created stream with file descriptor: %d
NDSession <%{public}@> Encountered error %@ during task completion callback delivery
NDSession <%{public}@> Encountered error %@ error delivering auth challenge to client, performing default handling
NDSession <%{public}@> %{public}@ skipping acknowledgement teardown since it's not actually complete
NDSession <%{public}@> Not waking up client %@ since wake request is unnecessary
NDSession <%{public}@> Not waking up client %@ since sessionSendsLaunchEvents is NO
NDSession <%{public}@> Not waking up client %@ since it doesn't support app wakes
NDSession <%{public}@> Not waking up client %@ since session is obliterated
NDSession <%{public}@> Not waking up client %@ since it's already connected
NDSession <%{public}@> Not waking up client %@ since background updates are not enabled
NDSession <%{public}@> Waking up the client app: %@
NDSession <%{public}@> Failed to wake app: %@
NDSession <%{public}@> %{public}@ adding delay of %f
NDSession <%{public}@> %{public}@ is duet preauthorized
NDSession <%{public}@> %{public}@ enqueueing
NDSession <%{public}@> Received a background download request from unsafe resume data from %@
NDSession <%{public}@> Couldn't create task or taskInfo: task = %@, taskInfo = %@
NDSession <%{public}@> Task <%{public}@>.<%lu> downloadTaskWithRequest: %@
NDSession <%{public}@> Received an unsafe request for background download: %@ from %@
NDSession <%{public}@> Task <%{public}@>.<%lu> uploadTaskWithRequest: %@ fromFile: %@
NDSession <%{public}@> Received a background upload request for a file that the client cannot read: %@ from %@
NDSession <%{public}@> Task <%{public}@>.<%lu> dataTaskWithRequest: %@
NDSession <%{public}@> %{public}@ received resume data
NDSession <%{public}@> %{public}@ cancelTaskWithIdentifier
NDSession <%{public}@> %{public}@ suspendTaskWithIdentifier
NDSession <%{public}@> %{public}@ resumeTaskWithIdentifier, props %@
NDSession <%{public}@> %{public}@ resuming, QOS(0x%x)
NDSession <%{public}@> %{public}@ setPropertyOnStreamWithIdentifier, client %@ property %@
NDSession <%{public}@> %@ tried to set the priority of a task but is missing the %@ entitlement
NDSession <%{public}@> %{public}@ setting priority to %ld
NDSession <%{public}@> %@ tried to set the loading priority of a task but is missing the %@ entitlement
NDSession <%{public}@> %{public}@ setting loading priority to %f
NDSession <%{public}@> %{public}@ setting limit of %lld bytes per second
NDSession <%{public}@> %{public}@ setting discretionaryOverrride to %c
NDSession <%{public}@> %{public}@ attempted to set discretionaryOverrride to %c but lacks required entitlement %@
NDSession <%{public}@> InvalidateWithReply: for session %@ bundle ID %@
NDSession <%{public}@> Cleaning up and invalidating immediately since there are no tasks
NDSession <%{public}@> Session %@ didBecomeInvalidWithError: %@ [%ld]
NDSession <%{public}@> Invalid trust status: %ld
NDSession <%{public}@> Extended trust validation failed
NDSession <%{public}@> %{public}@ didReceiveChallenge: %@ protection space: %@ for client %@ received auth challenge with type %@
NDSession <%{public}@> %{public}@ performing Extended Validation Trust evaluation
NDSession <%{public}@> %{public}@ Extended Validation Trust evaluation succeeded
NDSession <%{public}@> %{public}@ Extended Validation Trust evaluation failed
NDSession <%{public}@> %{public}@ client doesn't implement session-level or task-level auth challenge delegate, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client doesn't implement task-level auth challenge delegate, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and doesn't support app wakes, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and trust is valid, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and challenge has a previousFailureCount of 0 and a proposedCredential, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ modifying conditional connection properties since new request %@ is to a different host than previous request %@
NDSession <%{public}@> %{public}@ willPerformHTTPRedirection, response: %@, new request: %@
NDSession <%{public}@> %{public}@ client disconnected (error %@) with redirection outstanding, following redirect
NDSession <%{public}@> %{public}@ needs new body stream
NDSession <%{public}@> %{public}@ client disconnected (error %@) with new body stream request outstanding, providing no body
NDSession <%{public}@> %{public}@ for client %@ will be retried after error %@ - code: %ld
NDSession <%{public}@> %{public}@ failed to retry
NDSession <%{public}@> Removing client proxy due to task failure caused by app quit
NDSession <%{public}@> %{public}@ completed with error %@ [%ld]. C(%c)
NDSession <%{public}@> %{public}@ for client %@ was cancelled
NDSession <%{public}@> %{public}@ for client %@ completed with error - code: %ld
NDSession <%{public}@> %{public}@ for client %@ completed successfully
NDSession <%{public}@> %{public}@ didReceiveResponse: %@, status code: %d
NDSession <%{public}@> %{public}@ client disconnected (error %@) with didReceiveResponse outstanding, responding with a cancel disposition
NDSession <%{public}@> %{public}@ client responded to didReceiveResponse with disposition %d
NDSession <%{public}@> %{public}@ received data task didReceiveResponse callback and there is no connected client. Canceling task.
NDSession <%{public}@> %{public}@ did receive data (%lld of %lld total bytes)
NDSession <%{public}@> %{public}@ client disconnected (error %@) during didReciveData delegate
NDSession <%{public}@> %{public}@ received data and there is no connected client. Canceling task.
NDSession <%{public}@> %{public}@ became download task
NDSession <%{public}@> %{public}@ finished downloading to %@
NDSession <%{public}@> %{public}@ didResumeAtOffset: %lld expectedTotalBytes: %lld
NDSession <%{public}@> %{public}@ for client %@ _willSendRequestForEstablishedConnection
NDSession <%{public}@> Client does not implement _willSendRequestForEstablishedConnection, so using proposed request
NDSession <%{public}@> %{public}@ established a connection which requires the client to be running, but it isn't running and doesn't support app wakes. Canceling the task.
NDSession <%{public}@> Perhaps the client %@ was uninstalled?
NDSession <%{public}@> %{public}@ using proposed request since the client application is not running and doesn't support wakes
NDSession <%{public}@> %{public}@ for client %@ is waiting for connection - reason: %lld
NDSession <%{public}@> %{public}@ for client %@ conditions changed - satisfied: %d
NDSession <%{public}@> %{public}@ download for client %@ received response, status code: %d
NDSession <%{public}@> Need file descriptor for file at path %@
NDSession <%{public}@> Client %@ does not support app wakes, cannot get file descriptor for download file!
NDSession <%{public}@> Client %@ does not support app wakes, but it is still running. Will attempt to get file descriptor for download file.
NDSession <%{public}@> %{public}@ getAuthHeadersForResponse for %@ _sendsLaunchEvents=%s [_clientApplication supportsWakes]=%s
NDSession <%{public}@> %{public}@ client disconnected (error %@) when attempting to communicate with HTTP Authenticator for Client %@
NDSession <%{public}@> %{public}@ received auth headers for response, continueLoad: %d authHeaders %@ newRequest %@
NDSession <%{public}@> %{public}@ waking %@ for auth headers
NDSession <%{public}@> %{public}@ getAuthHeadersForResponse does not have a remote object and does not support app wakes, canceling.
Simulating network change event since %lld seconds have passed
SCDynamicStoreCreateRunLoopSource failed: %s [%d]
SCDynamicStoreSetNotificationKeys failed: %s [%d]
Created xpc listener: %@
Received xpc event
NDUserEventAgentConnection received connection
Received a new connection from UserEventAgent! Canceling the old one
Updated Registered Launch-On-Demand Clients: %@
Attempting to launch client %@ for session %@
Couldn't launch application %@ because we don't have an xpc connection to UserEventAgent
Will wake client %@ for session %@ if we receive a notification that it supports launch-on-demand
com.apple.nsurlsessiond enableBluetoothLinkRequirements is true - will assert bluetooth link requirements
com.apple.nsurlsessiond bluetoothLinkRequirementsOverrideTimerValue is %d
Could not break full NSURLSession identifier %@ into bundle ID and session ID components
Failed to unarchive data of class %@, length %lu
Error %@ [%ld] deserializing auth headers
Error removing item at path: %@, error: %@ [%ld]
Error removing item at url: %@, error: %@ [%ld]
Failed to set mode 700 on path %s.  errno=%d
Failed to convert %s to a data-vault directory.  errno=%d
Couldn't create directory at %@, error: %@ [%ld]
Failed to create data-vault directory.  errno=%d
Couldn't create directory.  Unable to extract C-string from path argument: %@
Couldn't create directory.  No path provided.
Error getting caches directory: %@ [%ld]
Empty results for asset update query
Catalogue fetch succeeded
Catalogue fetch failed with result %ld. Fall back to the currently installed asset
Asset (state %ld  Version %ld),  Current version %ld,  best installed version %ld,  best not installed version %ld
Asset version %lu has compatibilty version set to %lu. Not supported on the current OS
Purging asset version %@
Asset version %@ purged
Failed to purge the asset with version %@. Purge result = %ld
Download best not installed asset ver %lu
Read installed asset ver %lu
Asset download requested
Asset download completed. Asset Version downloaded is %lu
Asset download failed. Result  %ld
Copying from a file at location %@ failed. Error %@
Replacing a file at location %@ failed. Error %@
Read Asset at %@
Error reading the TLD Asset version
Unable to get the system container for nsurlstoraged
Error getting the system group container for Group ID %@ 
Resetting request delay for %@
Set request delay for %@ to %f
Resetting request delay and clearing pending wake requests for %@ since the first observer is being added
Application %@ has been in background for %lu seconds. Will reevaluate discretionary downloads
Resetting request delay and clearing pending wake requests for %@ since it came into the foreground
Being asked if container with identifier %@ is foreground before getting callback from BRContainersMonitor! Foreground state is %c
Container %@ entered background
Container %@ entered foreground
Being asked if container with identifier %@ is foreground before getting callback from FPProviderMonitor!
FPProvider %@ entered background
FPProvider %@ entered foreground
An XPC error occurred when obtaining a credential: %@
An XPC error occurred when obtaining all credentials %@
An XPC error occurred when obtaining the default credential: %@
PDURLSessionProxyServer Session %@ had _sourceApplicationAuditTokenData [%@]- discarding
PDURLSessionProxyClient Session %@ received message with non-matching session UUID; dropping message
%{public}@ didCompleteWithError message failed to send, so re-sending when devices are connected
%{public}@ message failed to send, so canceling task
dataTaskWithRequest message forTaskIdentifier %lu in session %@, currentRequest = %@
%{public}@ received task creation message and that task already exists. Sequence number: %llu, existing sequence number: %llu
%{public}@ canceling exisitng task since we received a new request for that task with a higher sequence number
%{public}@ received duplicate task creation message. Dropping message
%{public}@ received task creation message for invalidated session. Dropping message
%{public}@ using local task identifier %lu
%{public}@ acknowledging dataTaskWithRequest message
Received proxy request %@ with non-http URL. Dropping request.
%{public}@ receiving cancel task message
%{public}@ receiving suspend task message
%{public}@ receiving resume task message, props %@
%{public}@ dropping effective configuration
%{public}@ receiving set description message, description = %@
%{public}@ receiving set priority message, priority = %lld
%{public}@ writing to stream returned %d, error %@ [%ld]
Open IDS Socket with UUID %@ to host %@ port %d
received tcp_connection (%p) event %lu
Received error %d reading from tcp_connection %p
Received error %d writing to tcp_connection %p
Received error %@ [%ld] reading from streamTask %@
Session %@ became invalid with error %@ [%ld]
%{public}@ didReceiveChallenge: %@, protection space: %@
%{public}@ _willSendRequestForEstablishedConnection
%{public}@ completed with error %@ [%ld]
%{public}@ StreamTask %@ completed with error %@ [%ld]
%{public}@ ignoring task completion for task %@ with error %@ [%ld] in session %@ since we do not have an associated client taskIdentifier
%{public}@ willPerformHTTPRedirection, response: %@, new request: %@
%{public}@ client responded to redirect with request %@
%{public}@ didReceiveResponse: %@
%{public}@ received response disposition: %d
%{public}@ ignoring data of length %lu since we've already failed that task
%{public}@ did receive data with length %lu
%{public}@ data acknowledged, now has %lu bytes pending acknowledgement
%{public}@ acknowledging pending data
%{public}@ data pending, now has %lu bytes pending acknowledgement
%{public}@ immediately acknowledging data
%{public}@ will wait to acknowledge data
%{public}@ will be retried
%{public}@ will be retried - error: %@
%{public}@ is waiting for connection with reason: %lld
%{public}@ getAuthHeadersForResponse %@
%{public}@ canceling because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
Could not set attributes of directory at %@, error: %@ [%ld]
Non-directory file exists at: %@. Removing it.
Bundle ID Archive %@ has unexpected format
NDSessionManager for client %@ was empty, not restoring
Application %@ is not installed, removing directory
No directory for bundleID: %@
Failed to write archive to path: %@
Evaluating new XPC connection %@ with client bundle identifier %@
Client is a PlugIn with bundle identifier %@
Containing app for PlugIn is %@
Client is an independent extension
Client is an extension
Using identifier %@ for PlugIn %@ with containing app %@
Process with pid %d does not have a bundle ID, rejecting connection
Process with bundleID %@ [pid %d] does not have a bundle path, rejecting connection
Process with bundleID %@ [pid %d] is an app clip, rejecting connection
NDSession <%{public}@>.<%@>.<%@> Lost connection to app -- connection interrupted
NDSession <%{public}@>.<%@>.<%@> Lost connection to app -- connection invalidated
Bundle %@ re-installed. Need to adjust download paths
Bundle %@ uninstalled. Need to obliterate
nsurlsessiond started
Background updates are on
Background update setting for %@ was changed to %@
Notifying observers for %@ that background update setting was turned off
Notifying observers for %@ that background update setting was turned on
Background updates were turned off
Cannot find bundle ID for process %@ state update %@
Application %@ no longer foreground
Application %@ no longer foreground, and no observers
Application %@ entered foreground
Application %@ entered foreground, and no observers
Application %@ was suspended
Application %@ was suspended, and no observers
Application %@ was quit in the app switcher
Application %@ was quit in the app switcher, and no observers
Added observer for app %@, now %lu observers
Removed observer for app %@, now %lu observers
Started monitoring app %@, now %lu total %@
Stopped monitoring app %@, now %lu total %@
validating assertion %@
%s assertion with name %@ for bundle id %@
looking for background task completion for bundle id %@
looking for background session %@ for bundle id %@
Invalidating assertion for bundleID: %@. sessionID: %@
Couldn't create process assertion for %@ (%@)
We already have an assertion for bundleID: %@, sessionID: %@
took assertion for %@, session %@, uuid %@
Will request wake of app %@ for NDSession <%{public}@> with identifier %@
Failed to take process assertion for %@
Successfully woke application %@ and took process assertion
Failed to open application %@, error: %@ timeout: %{bool}d
Issuing wake request for independent extension %@ for session %@ with uuid %@ and requirement %d
Wake request already exists for independent extension %@ for session %@ with uuid %@
Removing wake request for independent extension %@ for session %@
Canceling AVAssetTask because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
%{public}@ Updating configuration on daemon
%{public}@ initialized appleIDAuthenticator, status codes = %@
%{public}@ StreamingZip - not yet prepared for extraction while setting additional properties
%{public}@ StreamingZip - terminating lingering extractor from previous download attempt
%{public}@ StreamingZip - preparing for extraction to %@
%{public}@ Extractor prepare - Offset: %lld, error: %@ [%ld]
%{public}@ Failed to prepare for extraction - timed-out.
%{public}@ StreamingZip - no path available.  Wait for init with resume-info for the path.
%{public}@ Object does not support STExtractor protocol.  Dropping this object. Class=%@
%{public}@ StreamingZip - already prepared for extraction while setting additional properties
[Telemetry]: Assiging taskMetrics on the daemon side
%{public}@ client acknowledged completion
%{public}@ client acknowledged file download
%{public}@ performing auth challenge callback, challenge %@
Failed to establish client cert proxy: %@
%{public}@ client responded to task challenge with disp %d, cred %@, trustProxy %@
%{public}@ performing did start app wake callback.
%{public}@ performing did finish app wake callback.
%{public}@ performing will send request callback, request %@
%{public}@ failed to ask client for modified request, using original proposed request
%{public}@ client responded to will send request callback with request %@ handle %@
Performing open file at path callback for path %@ mode %d
Client responded to open file callback with handle %@
%{public}@ failed to deliver resolved MediaSelection
%{public}@ failed to deliver downloaded HLS variants
%{public}@ performing begin delayed request callback
%{public}@ failed to ask client for delayed request disposition, continuing load
%{public}@ client responded to delayed request callback with disposition %d
%{public}@ performing get auth headers for response callback.
%{public}@ failed to ask client for getAuthHeadersForResponse. Error=%@
%{public}@ client responded to getAuthHeadersForResponse callback with continueLoad=%@, authHeaders=%@, newRequest=%@
%{public}@ draining authentication challenge callback
%{public}@ draining willSendRequest callback
%{public}@ draining openFileAtPath callback
%{public}@ draining willBeginDelayedRequest callback
%{public}@ draining getAuthHeadersForResponse callback
Delayed wake timer fired for session <%@>.<%@>
Triggering delayed wake for session <%@>.<%@>
Scheduled delayed wake for session <%@>.<%@>
Canceling delayed wake for session <%@>.<%@>
%{public}@ failed to re-instantiate AVURLAsset with token %llu
%{public}@ restoring, which had never been started, will resume implicitly
Error getting container path: %llu
Error getting User managed assets path: %llu
Error removing file at location of asset downloads directory: %@ [%ld]
Error creating asset downloads directory: %@ [%ld]
Lowering priority of AVAssetDownloads for %@ since it is no longer in the foreground
Bumping priority of AVAssetDownloads for %@ since it entered the foreground
Cancelling AVAssetDownloads for session <%@>.<%@> since client was quit from app switcher
Client exited transitional discretionary period.  Re-evaluating task priorities for session <%@>.<%@>
Task <%{public}@>.<%lu> avAssetDownloadTaskWithDownloadToken: %llu, URL: %@, destinationURL: %@, temporaryDestinationURL: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAssetDownloadSession %@ with token %llu
%{public}@ failed to instantiate AVAssetDownloadSession
%{public}@ failed to instantiate AVAsset, token %llu
Task <%{public}@>.<%lu> for client %@ does not have write access to destination directory %@
Task <%{public}@>.<%lu> avAggregateAssetDownloadTaskWithDownloadToken: %llu, serializedMediaSelections: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAggregateAssetDownloadTask asset: %@
%{public}@ cancelTaskWithIdentifier
%{public}@ retrying AVAssetDownloadTask
%{public}@ removing destination file for AVAssetDownloadTask in order to retry
%{public}@ will retry after %f seconds
Creating tcp_connection to host: %@, port: %d
%{public}@ tcp_connection_create() returned NULL (host %@, port %d, queue %@, taskInfo %@, URL %@)
Created tcp_connection: %@
%{public}@ received tcp_connection event %d
%{public}@ created AVAssetDownloadSession with token %llu
%{public}@ couldn't create AVAssetDownloadSession; returning an error
%{public}@ startAVAssetDownloadSessionWithTaskIdentifier wrapper: %@ taskIdentifier: %lu
%{public}@ canceling tcp_connection
%{public}@ finished downloading to %@
%{public}@ completion woke client: %c
%{public}@ completion did not wake client and client is not active - requesting delayed wake
%{public}@ completion woke client or client is active - not requesting delayed wake
%{public}@ AVAssetDownloadSession did complete with error %@ [%ld]
#-Lk
XDDDXXDD
$).49>
@(#)PROGRAM:nsurlsessiond  PROJECT:CFNetwork-1398
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleExecutable</key>
<string>nsurlsessiond</string>
<key>CFBundleIdentifier</key>
<string>com.apple.nsurlsessiond</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>nsurlsessiond</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1398</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1398</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B5050f</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<true/>
</dict>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.nsurlsessiond</string>
<key>com.apple.carousel.defaulturlsessionpolicy</key>
<true/>
<key>com.apple.chronoservices</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.nanotimekit.activecomplication</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.join_connection_pool</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>SERVICE_ENTITLEMENT</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.userManagedAssets</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.accounts.bundleidspoofing</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.TopLevelDomainDafsa</string>
</array>
<key>com.apple.private.cfnetwork.har-capture-delegation</key>
<true/>
<key>com.apple.private.dark-wake-network-reachability</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>nsurlsessiond</string>
<key>com.apple.rootless.storage.com.apple.MobileAsset.DuetExpertCenterAsset</key>
<true/>
<key>com.apple.rootless.storage.nsurlsessiond</key>
<true/>
<key>com.apple.runningboard.assertions.cfnetwork</key>
<true/>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.runningboard.targetidentities</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.nano.nanoregistry.paireddeviceregistry</string>
<string>com.apple.terminusd</string>
<string>com.apple.chronoservices</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.nsurlstoragedresources</string>
</array>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
%@ %@
session
socketUUID
host
port
task
disposition
credential
UseCredential
PerformDefaultHandling
CancelAuthenticationChallenge
RejectProtectionSpace
(unknown: %i)
configuration
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
_nsurlsessiondErrorDomain
%02x
_unsafe
com.apple.nsurlsessiond
background
--privileged
--postlogoutsync
proxy
priority
com.apple.nsurlsessiond.NSURLSessionProxyService-Queue
com.apple.private.alloy.nsurlsessionproxy
NSURLSessionProxyClientBundleIdentifier
com.apple.cloudkit.cloudd
com.apple.cloudd
IDSSendMessageOptionMetricReportIdentifier
v16@?0@"PBCodable"8
taskInfo
v32@?0@"NSString"8@"PDURLSessionProxyServer"16^B24
com.apple.nsurlsessiond.PDBluetoothCompanionLinkAssertion.bluetoothSerialQueue
originalRequest
currentRequest
taskSequenceNumber
response
com.apple.nsurlsessionf.avassetdownloadersessionwrappercallback
AVAssetDownloadSessionMediaSelectionArrayKey
AVAssetDownloadTaskMediaSelectionsForMultichannelKey
AVAssetDownloadTaskMediaSelectionKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AssertType
PreventUserIdleSystemSleep
AssertLevel
AssertName
AVAssetDownloadSessionWrapper %llu (%@)
TimeoutSeconds
TimeoutAction
TimeoutActionTurnOff
B24@?0@"NSURL"8@"NSError"16
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
com.apple.nsurlsessiond-cachedelete
CFNetworkDownload_
.tmp
q24@?0@"NSDate"8@"NSDate"16
NSURLSessionLastDisconnectDateKey
NDBackgroundSessionManagerRestoredStateKeyTasks
NDBackgroundSessionManagerRestoredStateKeyTLSSessionCachePrefix
NDBackgroundSessionManagerKeySessionUUID
com.apple.private.nsurlsession.impersonate
com.apple.private.nsurlsession.allow-discretionary-cellular
com.apple.private.nsurlsession-allow-override-connection-pool
com.apple.private.nsurlsession.allow-duet-preauthorization
com.apple.private.nsurlsession.set-max-watch-cell-transfer-size
com.apple.nsurlsessiond.session-manager
com.apple.nsurlsessiond.session-archive-queue
sessions.plist
downloadDirectoryPath.plist
configuration.plist
options.plist
com.apple.OTACrashCopier
Holding boost for %@
com.apple.private.dark-wake-network-reachability
get-task-allow
com.apple.security.get-task-allow
com.apple.security.application-groups
kNSURLSessionThrowImmediateAVExceptionKey
kNSURLSessionImmediateInvalidationErrorKey
NSURLSessionDelegateImplementsWillSendRequestForEstablishedConnectionKey
NSURLSessionDelegateImplementsSessionAuthChallengeKey
NSURLSessionDelegateImplementsTaskAuthChallengeKey
NSURLSessionDelegateImplementsWillBeginDelayedRequestKey
com.apple.private.nsurlsession.set-task-priority
com.apple.private.nsurlsession.set-discretionary-override-value
NSURLSessionBackgroundPoolName
pathToDownloadTaskFile
effectiveConfig
NSURLSessionBackgroundPoolName-sync-%d
Uploads
Library/Caches/com.apple.nsurlsessiond/Downloads
tasks.plist
Task <?>.<%lu>
%@ [delay: %f, duration: %f, allowsCellularAccess: %d]
%@ [allowsCellularAccess: %d]
VPN not connected
Duet Said No
Waiting for start time
Duration expired
Waiting for power
Waiting for inexpensive network
Waiting for non-cellular network
Link quality too poor
Cellular service is unavailable
Thermal conditions are not good
Conflicting parameters
Required data protection level is locked
Connection pool is full
Opportunistic
Network unavailable
Blocked by proxy
In battery saver mode
Network quality
Unknown (%llu)
com.apple.CFNetwork
__NSCFLocalDownloadTask
NSKeyedArchiveRootObjectKey
__NSCFLocalUploadTask
__NSCFLocalDataTask
trailers
com.apple.mobileassetd
com.apple.sharingd
_NSURLRequestIsDiscretionaryOverrideValue
New task
Task <?>.<0>
CFNetworkUpload_%@
%@%@%@
__com.apple.CFNetwork.prefix__
v32@?0@"NSURLProtectionSpace"8@"NSURLCredential"16^B24
v16@?0@"NSData"8
v16@?0@"NSURLRequest"8
version
launchUUID
headerData
continueLoad
receivedData
additionalProperties
taskDescription
com.apple.nsurlsessiond.status-monitor
com.apple.nsurlsessiond.UserEventAgentConnectionQueue
com.apple.nsurlsessiond-launchondemand
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.nsurlsessiond-events.message-type
com.apple.nsurlsessiond-events.registered-clients
DisableInfraWiFi
enableBluetoothLinkRequirements
bluetoothLinkRequirementsOverrideTimerValue
NSErrorPeerCertificateChainKey
NSErrorClientCertificateChainKey
v32@?0@8@16^B24
http
https
com.apple.nsurlsessionproxy.cancelError
nsurlsessiond
com.apple.nsurlsessiond.szmodtime
com.apple.nsurlsessiond.purged
-launchd
com.apple.nsurlsessiond/Downloads
/nsurlsessiond.launch
streamErrorDomain
streamErrorCode
archiveList
com.apple.MobileAsset.TopLevelDomainDafsa
v16@?0q8
DafsaData.bin
systemgroup.com.apple.nsurlstoragedresources
Library
dafsaData.bin
com.apple.nsurlsessiond.NDSpringBoardApplication.request-delay-queue
com.apple.nsurlsessiond.NDExtension.request-delay-queue
Cancel
Allow
BecomeDownload
request
reason
com.apple.nsurlsessiond.usermanager.sync
nsurlsession bg task
client
retry
v24@?0@"NSString"8^B16
v32@?0@"NSURLProtectionSpace"8@"NSDictionary"16^B24
monitor
shouldCancel
com.apple.nsurlsessiond.credential-storage-queue
v24@?0@"NSDictionary"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSURLCredential"8
hasBodyStream
 uuid:%@
BackgroundDisposition
com.apple.nsurlsessiond.NSURLSessionProxyPool
v32@?0@"NSNumber"8@"NSURLSessionDataTask"16^B24
Session <%@>
message
type
_kCFNetworkProxySessionNeedsNewBodyStreamSignal
v20@?0i8@"NSError"12
v20@?0@"NSObject<OS_dispatch_data>"8i16
v28@?0@"NSData"8B16@"NSError"20
v24@?0@"PBCodable"8@"NSError"16
-[PDURLSessionProxyServer URLSession:dataTask:_didReceiveData:completionHandler:]
PDURLSessionProxyServer.mm
!_taskIdentifiersToPendingDataCompletion[@(taskIdentifier)]
bytesSent
totalBytesSent
totalBytesExpectedToSend
taskIdentifier
com.apple.system.powersources.source
v12@?0i8
challenge
domain
code
userInfo
com.apple.nsurlsessiond.daemon-queue
com.apple.nsurlsessiond-xpc-transaction-queue
bundles.plist
NDTaskInfo
q24@?0@8@16
v32@?0@"NSString"8@"NDSessionManager"16^B24
com.apple.developer.on-demand-install-capable
com.apple.nsurlsessiond.started
bodyData
com.apple.mt
KeepAppsUpToDateAppList
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
kKeepAppsUpToDateEnabledChangedNotification
com.apple.nsnetwork.SpringBoard-queue
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@8@"RBSAssertion"16^B24
found
could not find
com.apple.nsurlsessiond.handlesession %@
BackgroundDownload
com.apple.cfnetwork
UIApplicationLaunchOptionsURLSessionKey
v24@?0@"BSProcessHandle"8@"NSError"16
com.apple.nsurlsessiond.NDExtension-queue
sessionIdentifier
uuidString
sequenceNumber
idsPriority
error
StatusCodes
PublishingURL
EarliestBeginDate
CountOfBytesClientExpectsToSend
CountOfBytesClientExpectsToReceive
DisallowCellularDueToSystemPolicy
SZExtractor
TimeoutIntervalForResource
nw_activityUUID
file-write-create
v24@?0Q8@"NSError"16
args
v16@?0@"NSError"8
v32@?0q8@"NSURLCredential"16@"NSXPCListenerEndpoint"24
v24@?0@"NSURLRequest"8@"NSFileHandle"16
v16@?0@"NSFileHandle"8
v24@?0q8@"NSURLRequest"16
v28@?0B8@"NSDictionary"12@"NSURLRequest"20
com.apple.private.nsurlsession.media-asset-download.can-specify-destination-url
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
{CGSize=dd}
AVAssetDownloadSessionDebugIdentifierKey
AVAssetDownloadSessionRetryErrorKey
AVAssetDownloadTaskDownloadConfigurationKey
v8@?0
v32@?0@"NSNumber"8@"__NSCFURLSessionTaskInfo"16^B24
%llu
%@%@%@.movpkg
file-write-data
v12@?0B8
configuration.apple.com
v20@?0I8r^v12
_downloadTaskWithRequest:downloadFilePath:
objectAtIndex:
setStartTime:
_sessionSendsLaunchOnDemandEvents
credStorage_allCredentialsWithReply:
setCountOfBytesClientExpectsToSend:
removeObserver:forContainerID:
initWithService:
uppercaseString
set_shouldSkipPreferredClientCertificateLookup:
numberWithUnsignedShort:
_authenticatorStatusCodes
set_allowsTLSFallback:
assetTitle
processInfo
knownSZExtractorImplementations
synchronousRemoteObjectProxyWithErrorHandler:
_respectsAllowsCellularAccessForDiscretionaryTasks
returnTypes:
uploadTaskWithStreamedRequest:
getBytes:length:
setCountOfBytesClientExpectsToReceive:
sortedArrayUsingComparator:
creationTime
set_respectsAllowsCellularAccessForDiscretionaryTasks:
_atsContext
set_allowsTLSECH:
getBoundStreamsWithBufferSize:inputStream:outputStream:
endActivity:
processIdentifier
initWithProtobufData:type:isResponse:
_requiresSustainedDataDelivery
setSkip_download_unlink:
hasPrefix:
createResumeInformation:
numberWithUnsignedLongLong:
uploadTaskWithRequest:fromFile:
closeWrite
set_requiresSustainedDataDelivery:
keysSortedByValueUsingComparator:
assetDownloadSessionWithURL:destinationURL:options:
suspendCount
bgSessionManagerInterface
setConnectionProxyDictionary:
set_allowsReachabilityCheck:
HTTPMaximumConnectionsPerHost
setShouldUseExtendedBackgroundIdleMode:
createPersonaContextForBackgroundProcessingWithPersonaUniqueString:
closeRead
_requiresPowerPluggedIn
numberWithUnsignedLong:
set_requiresPowerPluggedIn:
addObserver:forProviderID:
retryError
removeObjectForKey:
beginTransaction
encodedData
_alwaysPerformDefaultTrustEvaluation
defaultWorkspace
assetArtworkData
set_allowsPowerNapScheduling:
initWithMachServiceName:
setShouldCancelOnDisconnect:
initWithKeyOptions:valueOptions:capacity:
_requestFromResumeData
HTTPBodyStream
numberWithUnsignedInteger:
removeObjectAtIndex:
previousState
set_requiresClientToOpenFiles:
getActivePairedDevice
retryCount
closeFile
HTTPAdditionalHeaders
encodeObject:forKey:
_allowsTLSFalseStart
set_allowsHSTSWithUntrustedRootCertificate:
_reportsDataStalls
createIdentityFromEndpoint:error:
assertions
encodeInteger:forKey:
beginActivityWithOptions:reason:
numberWithUnsignedInt:
isValid
setClass:forClassName:
firstObject
addObserver:forContainerID:
removeObject:
setHasStarted:
set_reportsDataStalls:
close
previousFailureCount
begin
set_TLSMinimumSupportedProtocolVersion:
_allowsTLSFallback
_releasePreventIdleSleepAssertionIfAppropriate
defaultTaskGroup
substringWithRange:
numberWithLongLong:
removeLastObject
createFileAtPath:contents:attributes:
embeddedApplicationIdentifier
updateCurrentRequest:
finishTasksAndInvalidate
set_priority:
_propertyForKey:
updateConfiguration:
set_TLSMaximumSupportedProtocolVersion:
_allowsTLSECH
shouldCancelOnDisconnect
basePrioritySetExplicitly
defaultSessionConfiguration
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
predicateMatchingBundleIdentifiers:
numberWithInteger:
setHTTPMaximumConnectionsPerHost:
_multipathAlternatePort
set_preventsIdleSleepOnceConnected:
initWithHost:port:protocol:realm:authenticationMethod:
removeItemAtURL:error:
isResponse
arrayWithObjects:count:
earliestBeginDate
_allowsRetryForBackgroundDataTasks
_metrics
set_TCPAdaptiveWriteTimeout:
subarrayWithRange:
arrayWithObjects:
numberWithInt:
initWithExplanation:target:attributes:
_priorityValue
set_prefersInfraWiFi:
predicateMatchingBundleIdentifier:
setHTTPCookieStorage:
unsignedLongLongValue
setBytesPerSecondLimit:
setRetryError:
set_TCPAdaptiveReadTimeout:
_allowsReachabilityCheck
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
addObjectsFromArray:
earlierDate:
stringWithFormat:
AVAssetDownloadToken
removeItemAtPath:error:
setByAddingObject:
numberWithDouble:
defaultManager
setHTTPBodyStream:
unsignedIntegerValue
_maximumWatchCellularTransferSize
initWithDownloadTask:uniqueIdentifier:bundleID:sessionID:
set_pidForHAR:
array
isNearby
set_IDSMessageTimeout:
_allowsPowerNapScheduling
addObject:
stringWithCapacity:
resumedAndWaitingForEarliestBeginDate
setRetryCount:
isMultiUser
numberWithBool:
set_DuetActivityProperties:
uniqueIdentifier
set_pathToDownloadTaskFile:
setHTTPAdditionalHeaders:
_loggingPrivacyLevel
backgroundTaskDidSuspend:
initWithDelegate:queue:
_allowsHSTSWithUntrustedRootCertificate
setResumedAndWaitingForEarliestBeginDate:
addEntriesFromDictionary:
stringByDeletingLastPathComponent
setFileURL:
null
_pidForHAR
_loggableDescription
archivedDataWithRootObject:requiringSecureCoding:error:
fileURLWithPath:isDirectory:relativeToURL:
pluginIdentifier
unionSet:
set_onBehalfOfPairedDevice:
setBasePrioritySetExplicitly:
set_nw_activity:
addDelegate:queue:
stringByAppendingString:
backgroundTaskDidResume:
setExportedObject:
acquireWithError:
plugInKitPlugins
_legacySocketStreamProperties
fileURLWithPath:isDirectory:
unarchivedObjectOfClasses:fromData:error:
removeCharactersInString:
setWithObjects:
stringByAppendingPathComponent:
results
setExportedInterface:
decodeObjectOfClasses:forKey:
_isSafeRequestForBackgroundDownload
backgroundTask:willPerformHTTPRedirection:withNewRequest:reply:
setRespondedToWillBeginDelayedRequestCallback:
setAttributes:ofItemAtPath:error:
set_multipathAlternatePort:
fileURLWithPath:
stringByAppendingFormat:
downloadTaskWithResumeData:
setResolvedMediaSelectionPlist:
backgroundTask:willBeginDelayedRequest:reply:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
setWithObject:
decodeObjectOfClass:forKey:
sharedManager
_isSafeFileForBackgroundUpload:withToken:
absoluteString
setExpectingResumeCallback:
setAssetTitle:
countOfBytesSent
stringByAddingPercentEncodingWithAllowedCharacters:
set_metrics:
removeAllObjects
decodeIntegerForKey:
personaUniqueString
initWithDataTask:uniqueIdentifier:bundleID:sessionID:
remoteObjectProxyWithErrorHandler:
setWaitsForConnectivity:
setExpectedProgressTarget:
backgroundTask:needNewBodyStream:withReply:
countOfBytesReceived
setAssetArtworkData:
nextObject
fileURL
certificates
timeoutIntervalForResource
_isSafeDirectoryForDownloads:withToken:
setValues:
set_maximumWatchCellularTransferSize:
persistentDomainForName:
streamTaskWithHostName:port:
isFileURL
downloadFileURL
_xpcConnection
initWithData:
dateWithTimeIntervalSinceReferenceDate:
setEvents:
backgroundTask:hasConnectionWaitingWithError:
caseInsensitiveCompare:
sharedInstance
timeoutIntervalForRequest
persistence
set_longLivedConnectionCachePurgeTimeout:
fileSystemRepresentation
streamStatus
downloadFile
_xpcActivityBudgeted
backgroundTask:getAuthHeadersForResponse:reply:
countOfBytesExpectedToSend
networkServiceType
setEstablishedConnection:
_web_errorWithDomain:code:failingURL:
dateWithTimeIntervalSinceNow:
timeIntervalSinceReferenceDate
set_loggingPrivacyLevel:
streamError
isEqualToString:
cancel_with_error:
isEqualToNumber:
_TLSMinimumSupportedProtocolVersion
dataWithPropertyList:format:options:error:
sharedCredentialStorage
backgroundTask:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
setQos:
mutableCopy
downloadConfig
countOfBytesExpectedToReceive
setUpdateHandler:
set_loadingPriority:
fileExistsAtPath:isDirectory:
timeIntervalSinceNow
_TLSMaximumSupportedProtocolVersion
storagePartitionIdentifier
setAllowsExpensiveNetworkAccess:
_web_errorWithDomain:code:URL:
setEndowmentNamespaces:
backgroundTask:didReceiveResponse:transactionMetrics:reply:
setProperty:forKey:
moveItemAtURL:toURL:error:
dataWithContentsOfFile:
set_legacySocketStreamProperties:
countOfBytesClientExpectsToSend
fileExistsAtPath:
sharedConnection
_useTLSSessionCacheFromSession:
_TCPAdaptiveWriteTimeout
setURLCredentialStorage:
setAllowsConstrainedNetworkAccess:
initWithBundleIdentifier:error:
backgroundTask:didReceiveResponse:transactionMetrics:
dataTaskWithRequest:
terminateExtractorWithError:completion:
fileDescriptor
doubleValue
set_hasSZExtractor:
setEarliestBeginDate:
countOfBytesClientExpectsToReceive
_infersDiscretionaryFromOriginatingClient
isDiscretionary
_updatedStreamingZipModificationDate
backgroundTask:didReceiveChallenge:reply:
initWithBundleIdentifier:allowPlaceholder:error:
temporaryDestinationURL
_TCPAdaptiveReadTimeout
setURLCache:
setAllowsCellularAccess:
dataContainerURL
_ignoreDidReceiveResponseDisposition
writeToFile:atomically:
set_forcedNetworkServiceType:
isDefaultPairedDevice
countByEnumeratingWithState:objects:count:
backgroundTask:didCompleteWithError:taskMetrics:info:reply:
initWithBackgroundTaskInfo:taskGroup:
set_extractorPreparedForExtraction:
_IDSMessageTimeout
writeData:timeout:completionHandler:
isContainerIDForeground:
setPreferInfraWiFi:
data
setDownloadFileURL:
setAVURLAsset:
extensionPointRecord
_DuetActivityProperties
_hasSZExtractor
backgroundTask:_willSendRequestForEstablishedConnection:reply:
_uniqueIdentifier
setPredicates:
initWithAsset:propertyList:
registerUserSyncStakeholder:withMachServiceName:
write:maxLength:
_groupConfiguration
initWithAVAssetDownloadURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:downloadConfig:
set_extractor:
setAVAssetURL:
backgroundSessionDidStartAppWake:reply:
currentState
_extractorPreparedForExtraction
statusCode
_trailers
monitorWithConfiguration:
setPersonaUniqueString:
explanation
initWithAVAggregateDownloadTaskNoChildTaskKindWithURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:enableSPIDelegateCallbacks:
setAVAssetDownloadToken:
taskWithName:reason:forBundleID:
isCatalogFetchedWithinThePastFewDays:
status
copyItemAtURL:toURL:error:
set_expectedProgressTarget:
cancelByProducingResumeData:
discretionaryOverride
backgroundSessionDidFinishAppWake:reply:
setTimeoutIntervalForResource:
_tlsTrustPinningPolicyName
UUIDString
isAutomaticAppUpdatesAllowed
respondedToWillBeginDelayedRequestCallback
setPath:
taskWithName:reason:
initWithAVAggregateAssetDownloadChildDownloadSessionIdentifier:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:
currentRunLoop
expectingResumeCallback
_extractorFinishedDecoding
setDiscretionaryOverride:
handleForPredicate:error:
set_duetPreauthorized:
_tlsSessionCachePrefix
setTimeoutIntervalForRequest:
backgroundDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
AVURLAsset
pause
state
UUID
resourceTimeoutError
realm
_extractor
expectedProgressTarget
initSocketWithDevice:options:completionHandler:queue:
setOptions:
set_duetPreClearedMode:
setDiscretionary:
copy
disablesRetry
resetStandardUserDefaults
startedUserInitiated
pathToDownloadTaskFile
backgroundDownloadTask:didResumeAtOffset:expectedTotalBytes:
exitEvent
sessionSendsLaunchEvents
_timingDataOptions
UTF8String
willRetryBackgroundDataTask:withError:transactionMetrics:
readDataOfMinLength:maxLength:timeout:completionHandler:
setTemporaryDestinationURL:
invalidateAndCancel
URLSessionDidCompleteForExtensionWithBundleIdentifier:info:
setDisablesRetry:
backgroundDownloadTask:didFinishDownloadingToURL:response:reply:
_effectiveConfiguration
set_doesSZExtractorConsumeExtractedData:
initRequiringSecureCoding:
_timeWindowDuration
setDestinationURL:
path
context
currentPersona
URLPathAllowedCharacterSet
AVAssetURL
set_discretionaryOverride:
establishedConnection
_duetPreauthorized
initForReadingFromData:error:
password
set_disallowCellular:
setTaskMetrics:
_timeWindowDelay
dictionaryWithObjects:forKeys:count:
backgroundDataTaskDidBecomeDownloadTask:
queryMetaDataSync
dictionaryWithObject:forKey:
set_watchExtensionBundleIdentifier:
setObject:forKeyedSubscript:
sessionID
_duetPreClearedMode
setDelegate:queue:
_onqueue_adoptEffectiveConfiguration:
containsObject:
integerValue
errorWithDomain:code:userInfo:
URLForDirectory:inDomain:appropriateForURL:create:error:
setTaskKind:
_taskGroup
outgoingResponseIdentifier
taskState
set_updatedStreamingZipModificationDate:
backgroundDataTask:didReceiveData:withReply:
containingBundleRecord
URLByDeletingLastPathComponent
setObject:forKey:
lastObject
intValue
backgroundAVAssetDownloadTaskDidUpdateProgress:totalBytesWritten:totalBytesExpectedToWrite:
set_directoryForDownloadedFiles:
appendFormat:
dictionaryWithDictionary:
indexOfObject:
_supportsAVAssetDownloads
set_uniqueIdentifier:
mayBeDemotedToDiscretionary
originalNetworkContentURL
setNetworkServiceType:
URLByAppendingPathExtension:
_doesSZExtractorConsumeExtractedData
cStringUsingEncoding:
backgroundAVAssetDownloadTask:willDownloadVariants:reply:
allowsExpensiveNetworkAccess
set_connectionPoolName:
startResourceTimer
insertObject:atIndex:
_sourceApplicationSecondaryIdentifier
incomingResponseIdentifier
setMayBeDemotedToDiscretionary:
containerIDFromPrimaryIdentifier:secondaryIdentifier:
purge:
optionsWithDictionary:
set_tlsTrustPinningPolicyName:
_onBehalfOfPairedDevice
error:code:
_directoryForDownloadedFiles
backgroundAVAssetDownloadTask:willDownloadToURL:
allowsConstrainedNetworkAccess
set_connectionCachePurgeTimeout:
bytesPerSecondLimit
URLByAppendingPathComponent:isDirectory:
dictionary
_sourceApplicationBundleIdentifier
setLowThroughputTimerRetryCount:
set_tlsSessionCachePrefix:
_obliterateAllBackgroundSessionsWithCompletionHandler:
currentConnection
identity
bytes
backgroundAVAssetDownloadTask:didResolveMediaSelectionProperyList:reply:
allowsCellularAccess
set_clientIsNotExplicitlyDiscretionary:
_sourceApplicationAuditTokenData
URLByAppendingPathComponent:
credentialWithUser:password:persistence:
inputStreamWithData:
setLoadingPriority:
groupContainerURLs
_daemon_currentTransactionMetrics
URLAssetWithURL:options:
set_timingDataOptions:
valueWithCMTimeRange:
set_bytesPerSecondLimit:
openFileAtPath:mode:withReply:
taskMetrics
serviceWithDefaultShellEndpoint
valueWithBytes:objCType:
connectionProxyDictionary
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
backgroundAVAssetDownloadTask:didReceiveDownloadToken:
_socketStreamProperties
credentialWithIdentity:certificates:persistence:
initializedWithAVAsset
setTLSMinimumSupportedProtocol:
devices
set_timeoutIntervalForResource:
_createDispatchData
getUUIDBytes:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
openApplication:withOptions:completion:
lowercaseString
setLinkRequirementsForPeer:packetsPerSecond:inputBytesPerSecond:outputBytesPerSecond:
enumerateObjectsUsingBlock:
startDownload:
providerIDForApplication:sharedContainerIdentifier:
set_backgroundTrailers:
backgroundAVAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:
setTLSMaximumSupportedProtocol:
_shouldSkipPreferredClientCertificateLookup
credentialForTrust:
initializeHTTPAuthenticatorWithAppleIDContext:statusCodes:
deviceIDForNRDevice:
serviceMinCompatibilityVersion
lowThroughputTimerRetryCount
set_backgroundPublishingURL:
set_tcpConnectionPoolName:
valueForEntitlement:
protocol
startCatalogDownload:then:
_copySocketStreamProperties
setCreationTime:
backgroundAVAssetDownloadTask:didFinishDownloadForMediaSelectionPropertyList:
taskKind
enumerateKeysAndObjectsUsingBlock:
allocWithZone:
open
serverTrust
setSuspendCount:
TLSMinimumSupportedProtocol
allValues
set_suspensionThreshhold:
longLongValue
protectionSpace
set_authenticatorStatusCodes:
_connectionPoolName
setInvalidationHandler:
_setTimeWindowDuration:
TLSMaximumSupportedProtocol
credStorage_setDefaultCredential:forProtectionSpace:
set_authenticatorConfiguredViaTaskProperty:
loadingPriority
set_storagePartitionIdentifier:
descriptor
proposedCredential
initWithUploadTask:uniqueIdentifier:bundleID:sessionID:
setCountOfBytesSent:
allKeys
bundleIDFromPrimaryIdentifier:secondaryIdentifier:
_setTimeWindowDelay:
credStorage_setCredential:forProtectionSpace:
_companionAppBundleIdentifier
setStateDescriptor:
set_sourceApplicationSecondaryIdentifier:
length
propertyListWithData:options:format:error:
setCountOfBytesReceived:
setInterruptionHandler:
set_attributedBundleIdentifier:
credStorage_getInitialCredentialDictionariesWithReply:
sendProtobuf:toDestinations:priority:options:identifier:error:
objectForKeyedSubscript:
_setQueue:
authenticationMethod
endowmentNamespaces
userPersonaUniqueString
set_sourceApplicationBundleIdentifier:
standardUserDefaults
getResourceValue:forKey:error:
set_atsContext:
scheme
credStorage_defaultCredentialForProtectionSpace:reply:
_clientIsNotExplicitlyDiscretionary
propertyList
removeObserver:forProviderID:
setState:
targetWithPid:
hasSuffix:
objectForKey:
getLocalFileUrl
propertyForKey:inRequest:
objectAtIndexedSubscript:
set_sourceApplicationAuditTokenData:
auditToken
initWithType:
bundle
componentsSeparatedByString:
setCountOfBytesExpectedToSend:
setStartedUserInitiated:
setInitializedWithAVAsset:
_backgroundTrailers
set_alwaysPerformDefaultTrustEvaluation:
credStorage_credentialsForProtectionSpace:reply:
hasStarted
endTransaction
_sessionWithConfiguration:delegate:delegateDispatchQueue:
attributes
user
_backgroundPublishingURL
set_socketStreamProperties:
lastPathComponent
progress
setCountOfBytesExpectedToReceive:
attributeWithDomain:name:
set_allowsTLSFalseStart:
compare:
description
copyWithZone:
hasSession
hasSocketUUID
hasHost
setPort:
setHasPort:
hasPort
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
session
setSession:
socketUUID
setSocketUUID:
host
setHost:
port
.cxx_destruct
_host
_port
_session
_socketUUID
_has
TB,R,N
T@"PDURLSessionProxySessionMessage",&,N,V_session
T@"NSString",&,N,V_socketUUID
T@"NSString",&,N,V_host
TB,N
TI,N,V_port
init
initWithTask:
taskWillResume
taskWillSuspend
taskTransferredData:countOfBytesReceived:
cancel
_task
_hasStarted
_lastUpdateTime
_lastSuspendTime
_suspendedDurationSinceLastUpdate
hasTask
disposition
setDisposition:
setHasDisposition:
hasDisposition
dispositionAsString:
StringAsDisposition:
hasCredential
task
setTask:
credential
setCredential:
_credential
_disposition
T@"PDURLSessionProxyTaskMessage",&,N,V_task
Ti,N,V_disposition
T@"PDURLSessionProxyCredential",&,N,V_credential
hasConfiguration
setSupportsRedirects:
setHasSupportsRedirects:
hasSupportsRedirects
setDelegateImplementsWillSendRequest:
setHasDelegateImplementsWillSendRequest:
hasDelegateImplementsWillSendRequest
setDelegateImplementsSessionAuthChallenge:
setHasDelegateImplementsSessionAuthChallenge:
hasDelegateImplementsSessionAuthChallenge
setDelegateImplementsTaskAuthChallenge:
setHasDelegateImplementsTaskAuthChallenge:
hasDelegateImplementsTaskAuthChallenge
setDelegateImplementsWillPerformRedirection:
setHasDelegateImplementsWillPerformRedirection:
hasDelegateImplementsWillPerformRedirection
setDelegateImplementsDidReceiveResponse:
setHasDelegateImplementsDidReceiveResponse:
hasDelegateImplementsDidReceiveResponse
configuration
setConfiguration:
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
_configuration
_delegateImplementsDidReceiveResponse
_delegateImplementsSessionAuthChallenge
_delegateImplementsTaskAuthChallenge
_delegateImplementsWillPerformRedirection
_delegateImplementsWillSendRequest
_supportsRedirects
T@"NSData",&,N,V_configuration
TB,N,V_supportsRedirects
TB,N,V_delegateImplementsWillSendRequest
TB,N,V_delegateImplementsSessionAuthChallenge
TB,N,V_delegateImplementsTaskAuthChallenge
TB,N,V_delegateImplementsWillPerformRedirection
TB,N,V_delegateImplementsDidReceiveResponse
boolValue
setPriority:
setHasPriority:
hasPriority
priority
_priority
TI,N,V_priority
initWithMessage:type:
message
setMessage:
type
setType:
_type
_message
T@"PBCodable",C,V_message
TS,V_type
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
start
devicesDidUnpair:
_onqueue_sendStartupMessage
withWorkQueue:
defaultPairedDevice
_onqueue_updateDeviceState
_onqueue_devicesConnected
_onqueue_devicesDisconnected
_onqueue_remoteDeviceStartedUp
_onqueue_receivedNewLaunchUUID:isStartupMessage:
_onqueue_setPrefersInfraWiFi:
_onqueue_priorityForMessage:ofType:isReply:
_onqueue_sourceApplicationForMessage:
_onqueue_IDSTimoutForMessage:
_onqueue_loggableDescriptionForMessage:
bumpAndReturnOutgoingSequenceNumberForPriority:
verifyAndUpdateIncomingSequenceNumber:forPriority:
_onqueue_sendMessage:ofType:responseIdentifier:forSourceApplication:withUrgency:withIDSMessageTimeout:withReply:
sendProtobufMessage:ofType:withReply:
_onqueue_handleReceivedMessage:ofType:withReply:
_onqueue_handleFailedMessageSend:ofType:
_onqueue_handleReceivedReply:forIdentifier:ofType:withError:
_onqueue_messageWithIdentifier:didSendWithSuccess:error:
queue
setQueue:
isConnected
setConnected:
launchUUID
setLaunchUUID:
_idsService
_outstandingReplies
_outstandingMessages
_startupMessageIdentifier
_outgoingSequenceNumbersByPriority
_incomingSequenceNumbersByPriority
_receivedLaunchUUIDs
_currentRemoteLaunchUUID
_prefersInfraWiFi
_startupMessageFailed
_haveReceivedLegacyStartupMessage
_haveReceivedMessage
_connected
_queue
_launchUUID
T@"NSObject<OS_dispatch_queue>",&,V_queue
connected
TB,GisConnected,V_connected
T@"NSString",&,V_launchUUID
hasTaskInfo
taskInfo
setTaskInfo:
_taskInfo
T@"NSData",&,N,V_taskInfo
dealloc
sharedService
proxyServerBecameInvalid:
retainInfraWiFi
releaseInfraWiFi
retainBTLinkAssertion
releaseBTLinkAssertion
_sessions
_infraWiFiRetainCount
_infraWiFiTimer
_btLinkAssertionRetainCount
_btLinkAssertionTimer
_bluetoothCompanionLinkAssertion
scalablePipeManagerDidUpdateState:
scalablePipeManager:didRegisterEndpoint:error:
scalablePipeManager:didUnregisterEndpoint:
scalablePipeManager:pipeDidConnect:
scalablePipeManager:pipeDidDisconnect:error:
acquire
invalidate
_updateState
_bluetoothSerialQueue
_companionPeerIdentifier
_hasLoadedCompanionPeerIdentifier
_hasSetLinkRequirements
_isActive
_pipeManager
hasOriginalRequest
hasCurrentRequest
setTaskSequenceNumber:
setHasTaskSequenceNumber:
hasTaskSequenceNumber
originalRequest
setOriginalRequest:
currentRequest
setCurrentRequest:
taskSequenceNumber
_taskSequenceNumber
_currentRequest
_originalRequest
T@"PDURLSessionProxyRequest",&,N,V_originalRequest
T@"PDURLSessionProxyRequest",&,N,V_currentRequest
TQ,N,V_taskSequenceNumber
hasResponse
response
setResponse:
_response
T@"PDURLSessionProxyResponse",&,N,V_response
assetDownloadSessionWithAsset:mediaSelections:destinationURL:options:
assetDownloadSessionDidFinishDownload:
assetDownloadSession:didFailWithError:
assetDownloadSession:didFinishDownloadForMediaSelection:
assetDownloadSession:didResolveMediaSelection:
assetDownloadSession:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
assetDownloadSession:didUpdateProgressWithExpectedBytes:bytesDownloaded:
assetDownloadSession:willDownloadVariants:
doesAVAssetDownloadSessionSupportMultipleDownloads
initWithURL:destinationURL:options:delegate:queue:
initWithURLAsset:destinationURL:options:delegate:queue:
disavowSession
takePowerAssertion
releasePowerAssertion
resume
suspend
cancelAndDeliverError:
startLoadingMetadata
downloadSession
setDownloadSession:
delegate
delegateQueue
destinationURL
options
downloadToken
countOfBytesWritten
setCountOfBytesWritten:
countOfBytesExpectedToWrite
setCountOfBytesExpectedToWrite:
taskIdentifier
setTaskIdentifier:
progressTimerRunning
setProgressTimerRunning:
_asset
_timer
_powerAssertion
_callbackQueue
_progressTimerRunning
_downloadSession
_delegate
_delegateQueue
_URL
_destinationURL
_options
_downloadToken
_countOfBytesWritten
_countOfBytesExpectedToWrite
_taskIdentifier
TQ,V_countOfBytesWritten
TQ,V_countOfBytesExpectedToWrite
TB,V_progressTimerRunning
T@"AVAssetDownloadSession",&,V_downloadSession
T@"<NDAVAssetDownloadSessionWrapperDelegate>",R,W,V_delegate
T@"NSObject<OS_dispatch_queue>",R,&,V_delegateQueue
T@"NSURL",R,C,V_URL
T@"NSURL",R,C,V_destinationURL
T@"NSDictionary",R,&,V_options
TQ,R,V_downloadToken
TQ,V_taskIdentifier
restoreOptionsFromArchivePath:
boost
dropBoost
createSessionWithConfiguration:clientProxy:cachesDirectory:options:reply:
sendPendingCallbacksForIdentifier:reply:
releaseAssertionForSession:reply:
okayToSendPendingCallbacksForIdentifier:reply:
getActiveSessionIdentifiersWithReply:
obliterateAllSessionsWithReply:
sessionCompleted:withCompletionHandler:
initWithDelegate:bundleID:isSpringBoardApp:
archivePath
downloadDirectoryDataPath
restoreState:
archiveState
copyAndSanitizeClientConfiguration:
connection:canUseSharedContainerIdentifier:
cleanupWithCompletionHandler:
getSessionWithIdentifier:
clientApplicationWasReinstalled
obliterate
archiveTimerFired
xpcConn
setXpcConn:
setDelegate:
isSpringBoardApp
setIsSpringBoardApp:
obliterationCompletion
setObliterationCompletion:
_reconnectingProxies
_clientBundleID
_bundleDirectory
_sessionArchiveQueue
_boost
_isSpringBoardApp
_xpcConn
_obliterationCompletion
T@"NSXPCConnection",W,V_xpcConn
T@"<NDSessionManagerDelegate>",W,V_delegate
TB,V_isSpringBoardApp
T@?,C,V_obliterationCompletion
pingForXPCObjectValidityWithReply:
downloadTaskWithRequest:originalRequest:downloadFilePath:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:sandboxExtensionData:identifier:uniqueIdentifier:potentialCredentials:reply:
dataTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
downloadTaskWithResumeData:identifier:uniqueIdentifier:reply:
cancelTaskWithIdentifier:
cancelTaskWithIdentifier:byProducingResumeData:
suspendTaskWithIdentifier:
resumeTaskWithIdentifier:withProperties:
setDescription:forTask:
setPriority:forTaskWithIdentifier:
setLoadingPoolPriority:forTaskWithIdentifier:
setBytesPerSecondLimit:forTaskWithIdentifier:
setExpectedProgressTarget:forTaskWithIdentifier:
setTLSMinimumSupportedProtocolVersion:forTaskWithIdentifier:
setTLSMaximumSupportedProtocolVersion:forTaskWithIdentifier:
setDiscretionaryOverride:forTaskWithIdentifier:
setTLSSessionCachePrefix:
resetStorageWithReply:
invalidateWithReply:
setPropertyOnStreamWithIdentifier:propDict:propKey:withReply:
avAssetDownloadTaskWithDownloadToken:URL:destinationURL:temporaryDestinationURL:assetTitle:assetArtworkData:options:identifier:uniqueIdentifier:taskKind:enableSPIDelegateCallbacks:reply:
avAggregateAssetDownloadTaskWithDownloadToken:serializedMediaSelections:assetTitle:assetArtworkData:options:childDownloadSessionIdentifier:identifier:uniqueIdentifier:reply:
wakeUpClient:
errorOccurredDuringFinishedCallbackDelivery:
errorOccurredDuringAuthCallbackDelivery:completionHandler:
clientAcknowledgedTerminalCallbackForTask:
getClientProxy
descriptionForTaskWithIdentifier:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:dataTask:_didReceiveData:completionHandler:
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:_willRetryBackgroundDataTask:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
URLSession:task:_didReceiveInformationalResponse:
URLSession:task:_alternatePathAvailable:
_URLSession:downloadTask:didReceiveResponse:
_URLSession:downloadTaskNeedsDownloadDirectory:
_URLSession:task:getAuthHeadersForResponse:completionHandler:
_URLSession:openFileAtPath:mode:completionHandler:
applicationWasQuitFromAppSwitcher:
backgroundUpdatesDisabledForApplication:
backgroundUpdatesEnabledForApplication:
applicationWasSuspended:
applicationEnteredForeground:
applicationNoLongerInForeground:
applicationEndedNonDiscretionaryBackgroundGracePeriod:
applicationEndedExtendedNonDiscretionaryBackgroundGracePeriod:
applicationEndedTransitionalDiscretionaryBackgroundPeriod:
defaultWindowDurationForResourceTimeout:
configurationWithClientConfiguration:discretionary:
initWithConfiguration:bundleID:isSpringBoardApp:downloadDirectory:options:clientProxy:delegate:workQueue:archiveQueue:
sessionForDiscretionaryStatus:
setXPCConnection:
hasConnectedClient
setupDownloadDirectory
cleanupSessionWithCompletionHandler:
tasksArchivePath
archiveTaskInfo:
_onqueue_archiveTaskInfo
descriptionForRequest:
descriptionForTCPConnectionWaitingReason:
requestWithAdjustedWindowForTaskInfo:
updateTaskInfoBasedOnCurrentDiscretionaryStatus:
adjustDiscretionaryStatusForTaskInfo:
sanitizeTaskProperties:
configureAdditionalPropertiesOnTask:taskInfo:
configureTask:withTaskInfo:
ensureSessionDownloadDirectoryExists
createNewTaskFromInfo:
restoreInProgressTask:
restoreCompletedTask:
restoreTask:isOutstanding:
restoreTasksFromArchivedInfo:
restoreTasks:
clientErrorForError:
retryTask:originalError:transactionMetrics:
removeDownloadFileForTaskInfo:
removeUploadFileForTaskInfo:
sessionHasOutstandingTasks
clientIsActive
handleCompletionOfTask:identifier:taskInfo:isRecoverable:suppressWake:
finalizeTaskCompletionWithSuppressedWake:
cancelTasksRequiringClientConnectionAndResumeUnstartedTasks
clientDidDisconnect
reconnectClient:withCompletion:
allowReconnect
fillInByteCountsForTaskInfo:withTaskID:
fillInPropertiesForTaskInfo:withTaskID:
getTasksForReconnection
getTLSSessionCachePrefix
priorityForDiscretionaryStatus:
currentDiscretionaryStatus:withOptionalTaskInfo:
cancelMonitorForTask:
handleEarliestBeginDateForTaskWithIdentifier:completionHandler:
handleWillBeginDelayedRequestForTaskWithIdentifier:completionHandler:
taskShouldResume:
taskShouldSuspend:
enqueueTaskWithIdentifier:
addOutstandingTaskWithIdentifier:
removeOutstandingTaskWithIdentifier:
requeueTask:skipResume:
requeueTask:
makeTempUploadFile:withExtensionData:
inputStreamWithFileHandle:taskIdentifier:
setupDASPropertiesOnTask:taskInfo:discretionaryStatus:
performCommonSetupForTask:taskInfo:identifier:discretionaryStatus:
trustPassesExtendedValidation:
uuid
identifier
clientBundleID
monitoredAppBundleID
secondaryID
invalidateReply
setInvalidateReply:
sharedContainerIdentifier
setSharedContainerIdentifier:
_userInitiatedSession
_discretionaryPrioritySession
_credentialStorage
_archiveQueue
_clientApplication
_connectedExtension
_tasksToIdentifiers
_identifiersToTasks
_identifiersToMonitors
_identifiersToStreams
_identifiersToStreamQueues
_outstandingTaskIDs
_lastArchiveTime
_archiveWasDeferred
_sessionDirectory
_downloadDirectory
_uploadsDirectory
_performsEVCertCheck
_clientImplementsWillSendRequest
_clientImplementsWillBeginDelayedRequest
_clientImplementsSessionChallenge
_clientImplementsTaskChallenge
_sendsLaunchEvents
_discretionary
_obliterated
_cleanedUp
_hasBeenSignalledToDeliverPendingEvents
_infersDiscretionary
_shouldPullInitialCredentials
_shouldElevateDiscretionaryPriority
_completeReconnectionBlock
_clientPID
_watchExtensionBundleIdentifier
_retryDataTasks
_workQueue
_monitoredApplication
_identifiersToTaskInfo
_clientProxy
_uuid
_identifier
_monitoredAppBundleID
_secondaryID
_invalidateReply
_sharedContainerIdentifier
T@"<NDBackgroundSessionDelegate>",W,V_delegate
T@"NSUUID",R,V_uuid
T@"NSString",R,V_identifier
T@"NSString",R,V_clientBundleID
T@"NSString",R,V_monitoredAppBundleID
T@"NSString",R,V_secondaryID
T@?,C,V_invalidateReply
T@"NSString",C,V_sharedContainerIdentifier
setVersion:
setHasVersion:
hasVersion
hasLaunchUUID
version
_version
TI,N,V_version
T@"NSString",&,N,V_launchUUID
hasHeaderData
setContinueLoad:
setHasContinueLoad:
hasContinueLoad
headerData
setHeaderData:
continueLoad
_headerData
_continueLoad
T@"NSData",&,N,V_headerData
TB,N,V_continueLoad
hasReceivedData
receivedData
setReceivedData:
_receivedData
T@"NSData",&,N,V_receivedData
hasAdditionalProperties
additionalProperties
setAdditionalProperties:
_additionalProperties
T@"NSData",&,N,V_additionalProperties
hasTaskDescription
taskDescription
setTaskDescription:
_taskDescription
T@"NSString",&,N,V_taskDescription
sharedMonitor
performBlockAfterNetworkChangedEvent:numberOfPreviousRetries:
performBlockAfterNetworkChangedEvent:delay:
handleDynamicStoreCallback:changedKeys:
handleBetterNetworkEvent
startMonitoringDynamicStore
stopMonitoringDynamicStore
stop
_dynamicStoreSource
_blocksToExecuteAfterNetworkChange
_networkChangeEventCount
_symptomToken
sharedUserEventAgentConnection
handleNewConnection:
canLaunchProcessWithIdentifier:
launchProcessWithIdentifier:sessionIdentifier:
performWake:uponNotification:sessionIdentifier:
removePendingWakeForClient:sessionIdentifier:
_connection
_listener
_registeredClients
_pendingWakes
encodeWithCoder:
initWithCoder:
supportsSecureCoding
TB,R
allowedClassesForUnarchiving
getComponentsForFullIdentifier:bundleIdentifier:sessionIdentifier:
messageSubclassForMessageType:isReply:
_nsurlsessionproxy_secureArchivedDataWithRootObject:
_nsurlsessionproxy_secureUnarchiveObjectOfClass:withData:
_shouldPreserveBackgroundSessionDisposition
_nsurlsessionproxy_requiresBackgroundSession
_nsurlsessionproxy_cancelWithError:
_nsurlsessionproxy_clearError
_nsurlsessionproxy_error
_nsurlsessionproxy_isSafeRequest
_nsurlsessionproxy_launchUUID
_nsurlsessionproxy_setLaunchUUID:
_nsurlsessionproxy_sessionUUID
_nsurlsessionproxy_setSessionUUID:
_nsurlsessionproxy_sessionIdentifier
_nsurlsessionproxy_taskIdentifier
_nsurlsessionproxy_sequenceNumber
_nsurlsessionproxy_setSequenceNumber:
_nsurlsessionproxy_messagePriority
_nsurlsessionproxy_setMessagePriority:
_initWithActualError:
_actualError
_initWithActualRequest:
_actualRequest
_initWithActualResponse:
_actualResponse
_initWithActualAuthChallenge:
_actualAuthChallenge
_initWithActualCredential:
_actualCredential
_actualConfiguration
_setActualConfiguration:
T@"NSURLSessionConfiguration",&,S_setActualConfiguration:
_actualAdditionalProperties
_setActualAdditionalProperties:
T@"NSDictionary",&,S_setActualAdditionalProperties:
_actualTaskInfo
_setActualTaskInfo:
T@"__NSCFURLSessionTaskInfo",&,S_setActualTaskInfo:
_actualAuthHeaders
_setActualAuthHeaders:
T@"NSDictionary",&,S_setActualAuthHeaders:
nsurlsessiondPath
bundleManagerPath:
sessionPath:forBundleID:
nsurlsessiondLaunchdPath
removeItemAtPath:
removeItemAtURL:
createDataVaultDirectoryAtPath:
createDirectoryAtPath:
createDirectoryAtURL:
defaultDownloadDirectoryContainer
defaultDownloadDirectoryForBundleID:
setDaemonWorkState:
updateStreamingZipModificationDate:
removeStreamingZipModificationDate:
fetchStreamingZipModificationDate:
markItemAsPurged:
itemShouldBePurged:
setStreamErrorDomain:
setHasStreamErrorDomain:
hasStreamErrorDomain
setStreamErrorCode:
setHasStreamErrorCode:
hasStreamErrorCode
streamErrorDomain
streamErrorCode
_streamErrorCode
_streamErrorDomain
Ti,N,V_streamErrorDomain
Ti,N,V_streamErrorCode
hasArchiveList
archiveList
setArchiveList:
_archiveList
T@"NSData",&,N,V_archiveList
queryAndFindBestAsset:
findBestAssetFrom:skipDownload:
downloadAsset:
moveFileAtomically:toLocation:
moveInstalledAsset:withVersion:
installedAssetVersion
setInstalledAssetVersion:
_installedAssetVersion
TQ,V_installedAssetVersion
initialize
applicationWithIdentifier:
springboardApplicationWithBundleIdentifier:
springBoardApplicationExistsWithIdentifier:
chronoKitExtensionWithIdentifier:
cloudContainerWithIdentifier:
fileProviderWithIdentifer:applicationIdentifier:
initWithIdentifier:
containerURL
usesContainerManagerForAVAsset
supportsWakes
maySupportWakesLater
wakeForSessionIdentifier:withSessionUUID:wakeRequirement:
shouldElevateDiscretionaryPriority
hasForegroundBackgroundStates
isForeground
canBeSuspended
hasBackgroundTaskCompletion
isHandlingBackgroundURLSessionWithIdentifier:withSessionUUID:
addObserver:
removeObserver:
invokeSelectorForAllObservers:
backgroundUpdatesEnabled
_onqueue_resetRequestDelay
isInTransitionalDiscretionaryPeriod
setIsInTransitionalDiscretionaryPeriod:
bundleIdentifier
setBundleIdentifier:
currentRequestDelay
setCurrentRequestDelay:
_bundleIdentifier
_observers
_currentRequestDelay
T@"NSString",&,V_bundleIdentifier
Td,V_currentRequestDelay
TB,VisInTransitionalDiscretionaryPeriod
requestDelayQueue
applicationBackgroundUpdatesTurnedOff:
applicationBackgroundUpdatesTurnedOn:
setupDelayTimer
setupTransitionalDiscretionaryPeriodTimer
disableTransitionalDiscretionaryPeriodTimer
startTransitionalDiscretionaryPeriodTimer
_delayTimer
_nonDiscretionaryGracePeriodTimer
_extendedNonDiscretionaryGracePeriodTimer
_transitionalDiscretionaryStateTimer
_containingApplication
extensionWasRemovedFromScreen:
containerIDForPrimaryIdentifier:secondaryIdentifier:
bundleIDForPrimaryIdentifier:secondaryIdentifier:
containerDidEnterForeground:
containerDidEnterBackground:
_monitor
_isForeground
_initializedForegroundStateFromMonitorCallback
providerIDForBundle:sharedContainerIdentifier:
providerDidEnterForeground:
providerDidEnterBackground:
initWithIdentifier:applicationIdentifier:
_initializedForegroundState
_springboardApplication
hasRequest
request
setRequest:
_request
T@"PDURLSessionProxyRequest",&,N,V_request
setReason:
setHasReason:
hasReason
reason
_reason
TI,N,V_reason
sharedStakeholder
EDUMode
willSwitchUser
uploadContent
startUMTask:taskInfo:
startBridgingUMTask:
endBridgingUMTask:
endUMTask:
restoredTaskEnqueued:
restoredTaskActive:
tasksHaveBeenEnqueued
willSwitchToUser:
readyToSwitchToUser:
activeTasks
setActiveTasks:
activeTasksLock
setActiveTasksLock:
monitorTask
setMonitorTask:
monitorTaskSet
setMonitorTaskSet:
monitorTaskLock
setMonitorTaskLock:
tasksInitialized
setTasksInitialized:
tasksEnqueued
setTasksEnqueued:
bridgeTasks
setBridgeTasks:
_tasksInitialized
_tasksEnqueued
_activeTasksLock
_monitorTaskLock
_activeTasks
_monitorTask
_monitorTaskSet
_bridgeTasks
T@"NSMutableSet",&,V_activeTasks
T{os_unfair_lock_s=I},V_activeTasksLock
T@"UMUserSyncTask",&,V_monitorTask
T@"NSMutableSet",&,V_monitorTaskSet
T{os_unfair_lock_s=I},V_monitorTaskLock
TB,V_tasksInitialized
TB,V_tasksEnqueued
T@"NSMutableDictionary",&,V_bridgeTasks
setShouldCancel:
setHasShouldCancel:
hasShouldCancel
shouldCancel
_shouldCancel
TB,N,V_shouldCancel
initWithDelegate:forBundleID:
populateWithInitialCredentials
credentialsForProtectionSpace:
allCredentials
setCredential:forProtectionSpace:
removeCredential:forProtectionSpace:
defaultCredentialForProtectionSpace:
setDefaultCredential:forProtectionSpace:
reset
bundleID
setBundleID:
_cachedCredentials
_cachedDefaultCredentialUsers
_bundleID
T@"<NDCredentialStorageDelegate>",W,V_delegate
T@"NSString",C,V_bundleID
setHasBodyStream:
setHasHasBodyStream:
hasHasBodyStream
hasBodyStream
_hasBodyStream
TB,N,V_hasBodyStream
URLSession:readClosedForStreamTask:
URLSession:writeClosedForStreamTask:
URLSession:betterRouteDiscoveredForStreamTask:
URLSession:streamTask:didBecomeInputStream:outputStream:
_URLSession:connectionEstablishedForStreamTask:
initWithConfiguration:uuidString:options:delegate:
getTaskInformation
messagePriorityForTaskWithIdentifier:isReply:
sourceApplicationBundleIdentifier
IDSMessageTimeout
messageLoggableDescriptionForTaskWithIdentifier:
shouldRetainInfraWiFi
retainInfraWiFiForTaskWithIdentifier:
releaseInfraWiFiForTaskIfNecessary:
shouldRetainBTLinkAssertion
retainBTLinkAssertionWithIdentifier:
releaseBTLinkAssertionIfNecessary:
devicesConnected
resendPendingMessage:
baseMessage
taskMessageForIdentifier:
handleMessage:ofType:withReply:
handleFailedMessageSend:ofType:
handleDataTaskWithRequestMessage:forTaskIdentifier:withReply:
handleCancelTaskMessage:forTaskIdentifier:
handleSuspendTaskMessage:forTaskIdentifier:
handleResumeTaskMessage:forTaskIdentifier:withReply:
handleSetDescriptionMessage:forTaskIdentifier:
handleSetPriorityMessage:forTaskIdentifier:
handleInvalidateMessage:
handleUploadBodyDataMessage:forTaskIdentifier:withReply:
handleOpenSocketMessage:withReply:
performForwardingFromTCPConnection:toStreamTask:
performForwardingFromStreamTask:toTCPConnection:
setIdentifier:
uuidString
setUuidString:
_sessionConfiguration
_tasks
_taskIdentifiersToSequenceNumbers
_taskIdentifiersToBodyStreams
_taskIdentifiersToInitialBodyInputStreams
_taskIdentifiersToWaitingReasons
_taskIdentifiersToPendingDataBytes
_taskIdentifiersToPendingDataCompletion
_streamTasksToDeviceConnections
_streamTasksToIDSTCPConnections
_streamTasksToOpenSocketReplies
_taskIdentifiersRetainingInfraWiFi
_taskIdentifiersRetainingBTLinkAssertion
_deviceConnections
_messagesToReSend
_skipInvalidateMessage
_implementsWillSendRequest
_implementsSessionAuthChallenge
_implementsTaskAuthChallenge
_implementsWillPerformRedirection
_implementsDidReceiveResponse
_isInvalid
_uuidString
T@"NSString",C,V_identifier
T@"NSString",C,V_uuidString
T@"<PDURLSessionProxyServerDelegate>",R,V_delegate
setBytesSent:
setHasBytesSent:
hasBytesSent
setTotalBytesSent:
setHasTotalBytesSent:
hasTotalBytesSent
setTotalBytesExpectedToSend:
setHasTotalBytesExpectedToSend:
hasTotalBytesExpectedToSend
bytesSent
totalBytesSent
totalBytesExpectedToSend
_bytesSent
_totalBytesExpectedToSend
_totalBytesSent
TQ,N,V_bytesSent
TQ,N,V_totalBytesSent
TQ,N,V_totalBytesExpectedToSend
setHasTaskIdentifier:
hasTaskIdentifier
TQ,N,V_taskIdentifier
initWithTask:taskInfo:clientBundleIdentifier:secondaryIdentifier:monitoredApplication:priority:options:queue:
currentThroughputThreshold
currentIntervalEndDelta
calculateThroughput
setThroughputTimerForCurrentInterval
startThroughputMonitoring
stopThroughputMonitoring
startThroughputMonitoringIfAppropriate
basePriority
setBasePriority:
_clientBundleIdentifier
_clientSecondaryIdentifier
_throughputTimer
_progressTimestamps
_progressValues
_throughputInterval
_throughputMonitoringStartTime
_connectionIsCellular
_hasTransferredData
_explicitlyDiscretionary
_performsNonDiscretionaryThrougputMonitoring
_mayBeDemotedToDiscretionary
_UMSyncTask
_powerMonitorToken
_basePriority
Tq,V_basePriority
hasChallenge
challenge
setChallenge:
_challenge
T@"PDURLSessionProxyAuthChallenge",&,N,V_challenge
hasDomain
setCode:
setHasCode:
hasCode
hasUserInfo
domain
setDomain:
code
userInfo
setUserInfo:
_code
_domain
_userInfo
T@"NSString",&,N,V_domain
TQ,N,V_code
T@"NSData",&,N,V_userInfo
sharedDaemon
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
listener:shouldAcceptNewConnection:
managerBecameEmpty:bundleID:withCompletionHandler:
createDaemonDirectory
applicationIsInstalled:
setupNewClassMappingsForUnarchiver
restoreState
setupArchiveTimer
getSessionWithIdentifier:forBundleID:
addTransaction
releaseTransaction
bundleIDsForAppProxies:
waitUntilDeviceIsUnlocked
isPrivileged
setPrivileged:
isInSyncBubble
setInSyncBubble:
stakeholder
setStakeholder:
_clients
_transactionQueue
_createdDataVault
_archiveTimer
_privileged
_inSyncBubble
_stakeholder
T@"NSObject<OS_dispatch_queue>",R,V_queue
privileged
TB,GisPrivileged,V_privileged
inSyncBubble
TB,GisInSyncBubble,V_inSyncBubble
T@"NDUserSyncStakeholder",&,V_stakeholder
hasBodyData
bodyData
setBodyData:
_bodyData
T@"NSData",&,N,V_bodyData
sharedSpringBoard
getBackgroundSettingsAppList
handleBackgroundSettingsChange
handleStateUpdate:forProcess:
addObserver:forApplication:
removeObserver:forApplication:
monitoredBundleIDsUpdated
startMonitoringBundleID:
stopMonitoringBundleID:
applicationIsForeground:
isValidAssertion:withName:
application:hasAssertionWithName:
applicationHasBackgroundTaskCompletion:
application:isHandlingBackgroundSessionWithIdentifier:withSessionUUID:
applicationBackgroundUpdatesEnabled:
_onqueue_releaseAssertionForBundleID:sessionID:
releaseAssertionForBundleID:sessionID:
removePendingLaunchTasksForBundleID:sessionID:cancel:
assertionNameForSessionUUID:
takeAssertionForBundleID:sessionID:sessionUUID:pid:
wakeUpApp:forSession:withSessionUUID:
identifierIsForSpringBoardApplication:
_assertions
_appIsForeground
_observedBackgroundSettings
_monitoredBundleIDs
_assertion_lock
_backgroundUpdatesAllowed
sharedLauncher
addObserver:forExtension:
removeObserver:forExtension:
wakeUpExtension:forSession:withSessionUUID:wakeRequirement:
_onqueue_wakeUpExtension:forSession:withSessionUUID:wakeRequirement:
removePendingLaunchForBundleID:sessionID:
_onqueue_removePendingLaunchForBundleID:sessionID:
extension:isHandlingBackgroundSessionWithIdentifier:withSessionUUID:
_service
_pendingLaunches
initWithWrapper:monitoredApplication:priority:options:queue:
wrapperWillSuspend
wrapperTransferredData:
currentIntervalDuration
currentIntervalThroughputThreshold
_wrapper
_performsNonDiscretionaryThroughputMonitoring
hasSessionIdentifier
hasUuidString
setSequenceNumber:
setHasSequenceNumber:
hasSequenceNumber
setIdsPriority:
setHasIdsPriority:
hasIdsPriority
sessionIdentifier
setSessionIdentifier:
sequenceNumber
idsPriority
_idsPriority
_sequenceNumber
_sessionIdentifier
T@"NSString",&,N,V_sessionIdentifier
T@"NSString",&,N,V_uuidString
TQ,N,V_sequenceNumber
Tq,N,V_idsPriority
hasError
error
setError:
_error
T@"PDURLSessionProxyError",&,N,V_error
prepareForExtractionToPath:completionBlock:
supplyBytes:withCompletionBlock:
suspendStreamWithCompletionBlock:
finishStreamWithCompletionBlock:
terminateStreamWithError:completionBlock:
extractorDelegate
setExtractorDelegate:
doesConsumeExtractedData
T@"<STExtractorDelegate>",W,N
prepareForExtraction:
T@"<SZExtractorDelegate>",W,N
initWithCallbackType:taskIdentifier:args:
args
setArgs:
hasBeenCalled
setHasBeenCalled:
_hasBeenCalled
_args
Ti,V_type
T@"NSArray",C,V_args
TB,V_hasBeenCalled
initWithDelegate:
performCallback:
drainCallback:
addPendingCallbackToFront:
addPendingCallback:wakeRequirement:
performAllCallbacks
drainCallbacksForTaskIdentifier:
count
_callbacks
T@"<NDCallbackQueueDelegate>",W,V_delegate
_URLToUse
_destinationURLToUse
_AVAssetDownloadSesssionOptions:config:
NDAVAssetDownloadSessionWrapper:didCompleteWithError:
NDAVAssetDownloadSessionWrapper:didUpdateProgressWithLastBytesWritten:totalBytesWritten:totalBytesExpectedToWrite:
NDAVAssetDownloadSessionWrapper:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:
NDAVAssetDownloadSessionWrapper:didResolveMediaSelectionPropertyList:
NDAVAssetDownloadSessionWrapper:didFinishDownloadForMediaSelectionPropertyList:
NDAVAssetDownloadSessionWrapper:willDownloadVariants:
setupDelayedCompletionWakeTimer
cancelDelayedCompletionWakeTimer
setupThroughputMonitorForWrapper:taskInfo:identifier:
cancelThroughputMonitorForWrapper:
updatePriorityForTaskID:
avAssetDownloadsDirectory
downloadDirectoryToUse:
destinationURLToUseForTask:
downloadTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:identifier:uniqueIdentifier:reply:
dataTaskWithRequest:originalRequest:pipeHandle:identifier:uniqueIdentifier:reply:
hasEntitlementToSpecifyDownloadDestinationURL
avAssetForURL:downloadToken:
cancelAVDownloadAndFailTaskWithIdentifier:withError:
setPriority:forTCPConnectionWithTaskIdentifier:
retryTask:originalError:
adjustedTCPConnectionPriorityForTaskPriority:
newAVAssetDownloadSessionWrapperForTaskInfo:
ensureAVAssetDownloadSessionWrapperForTaskIdentifier:
startAVAssetDownloadSessionWithTaskIdentifier:
stopAVAssetDownloadSessionWithTaskIdentifier:
cancelTCPConnectionForTask:withError:
taskWithIdentifier:didCompleteWithError:
_identifiersToAVWrappers
_identifiersToThroughputMonitors
_identifiersToTCPConnections
_identifiersToDASActivities
_assetDownloadTokensToAssets
_clientConfig
_delayedWakeTimer
PDURLSessionProxyOpenSocket
NSCopying
NDPowerlogReporter
PDURLSessionProxyDidReceiveChallengeReply
PDURLSessionProxyCreateSession
PDURLSessionProxySetTaskPriority
PDURLSessionProxyMessageInfo
PDURLSessionProxyService
IDSServiceDelegate
NSObject
PDURLSessionProxyDataTaskWithRequestReply
PDURLSessionProxyServerService
PDURLSessionProxyServerDelegate
PDBluetoothCompanionLinkAssertion
CBScalablePipeManagerDelegate
PDURLSessionProxyDataTaskWithRequest
PDURLSessionProxyGetAuthHeaders
NDAVAssetDownloadSessionWrapper
AVAssetDownloadSessionDelegate
NDSessionManager
NDBackgroundSessionManagerProtocol
NDBackgroundSessionDelegate
NDBackgroundSession
NDBackgroundSessionProtocol
NDCallbackQueueDelegate
NSURLSessionDataDelegatePrivate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegatePrivate
NSURLSessionDownloadDelegate_Private
NSURLSessionDelegate_Internal
NDCredentialStorageDelegate
NDApplicationObserver
PDURLSessionProxyStartedUp
PDURLSessionProxyGetAuthHeadersReply
PDURLSessionProxyDidReceiveData
PDURLSessionProxyDidReceiveResponse
PDURLSessionProxyResumeTask
PDURLSessionProxySetTaskDescription
NDStatusMonitor
NDUserEventAgentConnection
NSSecureCoding
NSCoding
PDURLSessionProxyCommon
NSURLSessionProxyAdditions
PDURLSessionProxySocketDisconnected
NDFileUtilities
PDURLSessionProxyOpenSocketReply
PDURLSessionProxyResponse
TLDMobileAssetManager
NDApplication
NDSpringBoardApplication
NDSpringBoardAppObserver
NDChronoKitExtension
NDChronoKitExtensionObserver
NDCloudContainer
BRContainerObserver
NDFPProvider
FPProviderObserver
PDURLSessionProxyDidReceiveResponseReply
PDURLSessionProxyWillPerformRedirectionReply
PDURLSessionProxyRequest
PDURLSessionProxyCredential
PDURLSessionProxyTaskWaiting
NDUserSyncStakeholder
UMUserSyncStakeholder
UMUserSwitchStakeholder
PDURLSessionProxyDidReceiveDataReply
PDURLSessionProxySuspendTask
PDURLSessionProxyInvalidateSession
NDCredentialStorage
PDURLSessionProxyWillSendRequest
PDURLSessionProxyOpenBodyStream
PDURLSessionProxyServer
NSURLSessionStreamDelegate_Internal
NSURLSessionStreamDelegate
PDURLSessionProxyDidSendBodyData
PDURLSessionProxyCancelTask
PDURLSessionProxyTaskMessage
NDTaskMonitor
PDURLSessionProxyDidReceiveChallenge
PDURLSessionProxyError
Daemon
LSApplicationWorkspaceObserverProtocol
NSXPCListenerDelegate
NDSessionManagerDelegate
PDURLSessionProxyUploadBodyData
NDSpringBoard
NDChronoKitLauncher
NDAVThroughputMonitor
PDURLSessionProxySessionMessage
PDURLSessionProxyTaskWillBeRetried
PDURLSessionProxyConnectedToServer
PDURLSessionProxyAuthChallenge
STExtractor
SZExtractor
PendingCallback
NDCallbackQueue
PDURLSessionProxySessionBecameInvalid
NDAVAdditions
NDAVBackgroundSession
NDAVAssetDownloadSessionWrapperDelegate
PDURLSessionProxyTaskCompleted
PDURLSessionProxyWillPerformRedirection
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8I16
v20@0:8B16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
I16@0:8
v16@0:8
@"NSString"
@"PDURLSessionProxySessionMessage"
{?="port"b1}
@24@0:8@16
v32@0:8q16q24
@"NSURLSessionTask"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@"PDURLSessionProxyCredential"
@"PDURLSessionProxyTaskMessage"
{?="disposition"b1}
@"NSData"
{?="delegateImplementsDidReceiveResponse"b1"delegateImplementsSessionAuthChallenge"b1"delegateImplementsTaskAuthChallenge"b1"delegateImplementsWillPerformRedirection"b1"delegateImplementsWillSendRequest"b1"supportsRedirects"b1}
{?="priority"b1}
@28@0:8@16S24
S16@0:8
v20@0:8S16
@"PBCodable"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v24@0:8@?16
v28@0:8@16B24
q32@0:8@16S24B28
q24@0:8@16
Q24@0:8q16
B32@0:8Q16q24
v64@0:8@16S24@28@36B44q48@?56
v36@0:8@16S24@?28
v28@0:8@16S24
v44@0:8@16@24S32@36
v36@0:8@16B24@28
@"IDSService"
@"NSMutableDictionary"
@"NSMutableSet"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"PDURLSessionProxyServer"16
@"NSObject<OS_dispatch_source>"
@"PDBluetoothCompanionLinkAssertion"
v24@0:8@"CBScalablePipeManager"16
v40@0:8@"CBScalablePipeManager"16@"NSString"24@"NSError"32
v32@0:8@"CBScalablePipeManager"16@"NSString"24
v32@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24
v40@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24@"NSError"32
@"NSUUID"
@"CBScalablePipeManager"
v24@0:8Q16
@"PDURLSessionProxyRequest"
{?="taskSequenceNumber"b1}
@"PDURLSessionProxyResponse"
v136@0:8@16{?={?=qiIq}{?=qiIq}}24@72{?={?=qiIq}{?=qiIq}}80@128
v40@0:8@16Q24Q32
v24@0:8@"AVAssetDownloadSession"16
v32@0:8@"AVAssetDownloadSession"16@"NSError"24
v32@0:8@"AVAssetDownloadSession"16@"AVMediaSelection"24
v136@0:8@"AVAssetDownloadSession"16{?={?=qiIq}{?=qiIq}}24@"NSArray"72{?={?=qiIq}{?=qiIq}}80@"AVMediaSelection"128
v40@0:8@"AVAssetDownloadSession"16Q24Q32
v32@0:8@"AVAssetDownloadSession"16@"NSArray"24
@56@0:8@16@24@32@40@48
@"AVURLAsset"
@"AVAssetDownloadSession"
@"<NDAVAssetDownloadSessionWrapperDelegate>"
@"NSURL"
@"NSDictionary"
v56@0:8@16@24@32@40@?48
v32@0:8@16@?24
v56@0:8@"NSURLSessionConfiguration"16@"<NDBackgroundSessionClient>"24@"NSURL"32@"NSDictionary"40@?<v@?@"<NDBackgroundSessionProtocol>"@"NSDictionary"B>48
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?>16
v32@0:8@"NDBackgroundSession"16@?<v@?>24
@36@0:8@16@24B32
@24@0:8^B16
B32@0:8@16@24
@?16@0:8
@"NSXPCConnection"
@"<NDSessionManagerDelegate>"
v64@0:8@16@24@32Q40@48@?56
v80@0:8@16@24@32@40Q48@56@64@?72
v56@0:8@16@24Q32@40@?48
v48@0:8@16Q24@32@?40
v32@0:8Q16@?24
v32@0:8Q16@24
v32@0:8@16Q24
v32@0:8q16Q24
v32@0:8d16Q24
v32@0:8Q16Q24
v28@0:8S16Q20
v48@0:8Q16@24@32@?40
v108@0:8Q16@24@32@40@48@56@64Q72@80Q88B96@?100
v88@0:8Q16@24@32@40@48@56Q64@72@?80
v64@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSString"32Q40@"NSUUID"48@?<v@?B>56
v80@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSURL"32@"NSData"40Q48@"NSUUID"56@"NSDictionary"64@?<v@?B>72
v56@0:8@"NSURLRequest"16@"NSURLRequest"24Q32@"NSUUID"40@?<v@?B>48
v48@0:8@"NSData"16Q24@"NSUUID"32@?<v@?B>40
v32@0:8Q16@?<v@?@"NSData">24
v32@0:8Q16@"NSDictionary"24
v32@0:8@"NSString"16Q24
v24@0:8@"NSString"16
v48@0:8Q16@"NSDictionary"24@"NSString"32@?<v@?B>40
v108@0:8Q16@"NSURL"24@"NSURL"32@"NSURL"40@"NSString"48@"NSData"56@"NSDictionary"64Q72@"NSUUID"80Q88B96@?<v@?B>100
v88@0:8Q16@"NSArray"24@"NSString"32@"NSData"40@"NSDictionary"48@"NSString"56Q64@"NSUUID"72@?<v@?B>80
v24@0:8q16
@24@0:8Q16
v24@0:8@"NSError"16
v32@0:8@"NSError"16@?<v@?q@"NSURLCredential">24
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"16@0:8
@"NSString"24@0:8Q16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32@?<v@?>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v40@0:8@16@24q32
v36@0:8@16@24B32
v36@0:8@16@24i32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24i32
@32@0:8@16@24
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURLResponse"32
@"NSURL"32@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24
v44@0:8@16@24i32@?36
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary"@"NSURLRequest">40
v44@0:8@"NSURLSession"16@"NSString"24i32@?<v@?i>36
v24@0:8@"NDApplication"16
d24@0:8d16
@28@0:8@16B24
@84@0:8@16@24B32@36@44@52@60@68@76
@20@0:8B16
@24@0:8q16
@32@0:8@16^B24
B40@0:8@16@24@32
v48@0:8@16Q24@32B40B44
B20@0:8B16
q20@0:8B16
v28@0:8Q16B24
@32@0:8@16Q24
v44@0:8@16@24Q32B40
B24@0:8^{__SecTrust=}16
@"NSURLSession"
@"NDCredentialStorage"
@"NDApplication"
@"NSMutableArray"
@"NDCallbackQueue"
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"
@"<NDBackgroundSessionDelegate>"
{?="version"b1}
{?="continueLoad"b1}
v32@0:8@?16Q24
v32@0:8@?16q24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
^{__CFRunLoopSource=}
v40@0:8@?16@24@32
@"NSObject<OS_xpc_object>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v40@0:8@16^@24^@32
#24@0:8S16B20
@32@0:8#16@24
q16@0:8
{?="streamErrorCode"b1"streamErrorDomain"b1}
B40@0:8@16@24q32
v24@0:8:16
d16@0:8
v24@0:8d16
@"NDSpringBoardApplication"
@"BRContainersMonitor"
@"FPProviderMonitor"
{?="reason"b1}
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"UMUserSyncTask"
{?="shouldCancel"b1}
@"<NDCredentialStorageDelegate>"
{?="hasBodyStream"b1}
v32@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24@"NSInputStream"32@"NSOutputStream"40
@48@0:8@16@24Q32@40
q28@0:8Q16B24
v40@0:8@16Q24@?32
@"NSURLSessionConfiguration"
@"<PDURLSessionProxyServerDelegate>"
{?="bytesSent"b1"totalBytesExpectedToSend"b1"totalBytesSent"b1}
{?="taskIdentifier"b1}
@80@0:8@16@24@32@40@48q56Q64@72
@"__NSCFURLSessionTaskInfo"
@"PDURLSessionProxyAuthChallenge"
{?="code"b1"version"b1}
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@"NDSessionManager"16@"NSString"24@?<v@?>32
@"NDUserSyncStakeholder"
B44@0:8@16@24@32i40
@"RBSProcessMonitor"
B48@0:8@16@24@32q40
v48@0:8@16@24@32q40
@"CHSNSURLSessiondService"
@56@0:8@16@24q32Q40@48
@"NDAVAssetDownloadSessionWrapper"
{?="idsPriority"b1"sequenceNumber"b1}
@"PDURLSessionProxyError"
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"<STExtractorDelegate>"16@0:8
v24@0:8@"<STExtractorDelegate>"16
@"<SZExtractorDelegate>"16@0:8
v24@0:8@"<SZExtractorDelegate>"16
@36@0:8i16Q20@28
@"NSArray"
v32@0:8@16q24
@"<NDCallbackQueueDelegate>"
v48@0:8@16Q24Q32Q40
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSError"24
v48@0:8@"NDAVAssetDownloadSessionWrapper"16Q24Q32Q40
v56@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSValue"24@"NSArray"32@"NSValue"40@"NSDictionary"48
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSDictionary"24
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSArray"24
v40@0:8@16@24Q32
q24@0:8q16
B24@0:8Q16
@"NSMapTable"
Failure trying to unarchive file at %@ error: %@ [%d]
Error %d renaming item at %@ to %@
Error %d renaming item at %@ to %@. Won't try to unarchive.
SIGTERM received, shutting down.
PDURLSessionProxyService setting preferInfraWiFi to NO
%@: Devices unpaired
%@ sent startup message with identifier %@
sendProtobuf: returned NO for PDURLSessionProxy startup message, error %@ [%ld]
%@ Connected to post PDURL device - resetting state
%@ Updated device state connected = %c
PDURLSessionProxyService setting preferInfraWiFi to %c
Received a message of priority %ld with lower sequence number %llu than existing sequence number %llu. Dropping message.
%@::%@ type = %u, connected = %c, isReply = %c, sourceApplication = %@, msgTO = %ld
Unable to determine source application for message
Timed out waiting for reply for message, identifier = %{public}@, type = %u
Failed to send message! Type = %u, error = %@ [%ld]
%{public}@ sent NSURLSessionProxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu, result = %c
Subclass did not handle message %@ of type %u
Subclass did not handle message send failure for message %@
Received a reply with identifier %@ but don't have a corresponding reply block
%@::%@ outgoingResponseIdentifier = %{public}@, type = %u, isResponse = %c, data length = %lu
%@ received protobuf of type %u which could not be decoded! isResponse = %c, data length = %lu
Received PDURLSession Startup message with launchUUID %@
Received PDURLSessionProxy message with new launchUUID %@
Dropping NSURLSessionProxy message with old launchUUID %@
Received PDURLSessionProxy Startup message (without a launchUUID)
%{public}@ receiving NSURLSession proxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu
Incoming (non-reply) message with identifier %{public}@ has priority %lld and sequence number %llu
%@::%@ success = %c, identifier = %{public}@, error = %@ [%ld]
Failed to send PDURLSessionProxy startup message, error %@
%@: activeAccountsChanged: %@
%@: didSwitchActivePairedDevice
PDURLSessionProxyServerService received CreateSession message for identifier %@ with existing UUID %@. Ignoring message.
PDURLSessionProxyServerService received CreateSession message for identifier %@ with UUID %@
PDURLSessionProxyServerService received message of type %u for session %@
PDURLSessionProxyServerService received Invalidate message for unknown session identifier %@, replying with BecameInvalid message
NSURLSessionProxy message of type %u received for unknown session with identifier %@
Received NSURLSessionProxy message of type %u without a session identifier
%{public}@: Relinquishing link requirements for %@
%{public}@: Releasing %{public}@
%{public}@: Acquiring...
%{public}@: Invalidating...
%p Disavowing AVAssetDownloadSession
Taking power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Failed to take power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Releasing power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Starting AVAssetDownloadSession
AVAssetDownloadSession download complete
AVAssetDownloadSession download failed
AVAssetDownloadSession download finished for media selection
NDCacheDeleteFixUpDirectoriesOnStartup enumeration failed at %@ error=%@
Informing CacheDelete purgable bytes %lld on %@
Purged %lld bytes on volume %@.  CacheDelete requested %lld.
CacheDelete callback registration succeeded.
CacheDelete callback registration failed!
NDCacheDeleteFixUpDirectoriesInContainer enumeration failed at %@ error=%@
NDCacheDeletePurgableItemsForVolume enumeration failed at %@ error=%@
NDCacheDeleteGetPurgableItemsInContainer enumeration failed at %@ error=%@
CacheDelete request - Purged %@ [%zu bytes]
Too many sessions for app <%{public}@> (%zu > 1024)
Ignoring stale session (inactive for %fs) with identifier: %@ for bundle id: %@
Not restoring session with identifier: %@ for bundleID: %@ since it does not have any tasks
Coudn't restore session with identifier: %@ for bundle id: %@
Missing or invalid configuration.plist for bundleID: %@, sessionID: %@. Removing session directory
No directory for bundleID: %@, sessionID: %@
Launching application %@ since we could not restore session %@
Capturing boost activity from %@ unnecessary
Capturing boost activity from %@
Ending boost activity from %@
Client %@ tried to specify a shared container that it cannot access: %@
Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
Client tried to set _connectionPoolName but is missing the %@ entitlement
Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
Client tried to set _duetPreauthorized but is missing the %@ entitlement
Client tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
Client specified shared container identifier %@. %@ can access: %d
NDSession <%{public}@>.<%@>.<%@>: already has a connected client, returning nil proxy object to client
Connected client is an extension is attempting to a connect to a session without a valid shared data container
NDSession <%{public}@>.<%@>.<%@>: reconnecting existing session
Connected client is an extension and did not specify a valid shared container identifier
Creating session with identifier: %@ for bundle id: %@
NDSession <%{public}@>.<%@>.<%@>: created successfully
Coudn't create session with identifier: %@ for bundle id: %@
NDSession <%{public}@>.<%@>.<%@>: instructed to send pending callbacks
Asked to send pending callbacks for session %@ that we have no record of. This shouldn't happen
releaseAssertionForSession: %@
NDSession <%{public}@>.<%@>.<%@>: notified it is OK to send pending callbacks
Signalled that it is okay to send pending callbacks for session %@ that we have no record of. This shouldn't happen
obliterateAllSessions for bundleID %@
NDSession <%{public}@>.<%@>.<%@>: removing session
Obliterating session manager for bundle ID: %@
NDSession <%{public}@> Client %@ is acting on behalf of cloud documents container with container id: %@ and bundle id: %@
NDSession <%{public}@> Client %@ is acting on behalf of file provider id: %@ and bundle id: %@
NDSession <%{public}@> Client %@ is an independent extension
NDSession <%{public}@> Client %@ is acting on behalf of application %@, impersonatingSpringBoardApp: %d
NDSession <%{public}@> Client %@ is a SpringBoard application
NDSession <%{public}@> Client %@ is a daemon or non-SpringBoard application
NDSession <%{public}@> Couldn't find out download directory for %@. Not creating session
NDSession <%{public}@> Session <%{public}@> is for <%@>.<%@> using resource timeout: %f, request timeout: %f allowsCellularAccess: %d, allowsExpensiveAccess: %d, _sourceApplicationBundleIdentifier: %@, _sourceApplicationSecondaryIdentifier: %@
NDSession <%{public}@> Using XPC connection %@ for client %@ with identifier %@ and PID %d
NDSession <%{public}@> XPC connection is to PlugIn %@ for session <%@>.<%@>
NDSession <%{public}@> client %@ connected result (%c), XPC(%c) proxy(%c) for %@
NDSession <%{public}@> notified associated application %@ was suspended, XPC(%c)
NDSession <%{public}@> Application %@ was reinstalled, adjusting download paths
NDSession <%{public}@> Couldn't find out download directory for re-installed application %@. It must not have been re-installed properly. Obliterating session
NDSession <%{public}@> Cleaning up
NDSession <%{public}@> Obliterating session: <%@>.<%@>
NDSession <%{public}@> %{public}@ %f seconds past start time, new delay: %f, new window: %f
NDSession <%{public}@> %{public}@ potentially discretionary, re-scheduling, was discretionary: %d, is now discretionary: %d
NDSession <%{public}@> Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _connectionPoolName but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
NDSession <%{public}@> Client tried to set _duetPreauthorized but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
NDSession <%{public}@> Client tried to set _pathToDownloadTaskFile but is not allowed to create %@: %{errno}d
NDSession <%{public}@> Session <%@>.<%@> download path %@ did not exist, recreating.
NDSession <%{public}@> %{public}@ couldn't create new task. task: %@, path: %@
NDSession <%{public}@> %{public}@ couldn't create new task becuase adjusted request is nil, taskInfo.currentRequest = %@
NDSession <%{public}@> %{public}@ error creating resume data: %@
NDSession <%{public}@> %{public}@ could not create resume data. The server might not support resumable downloads. Will retry full download
NDSession <%{public}@> %{public}@ download created from resume data
NDSession <%{public}@> %{public}@ is being restored as completed with download file still at %@
NDSession <%{public}@> %{public}@ restoring, which had never been started, will resume implicitly
NDSession <%{public}@> %{public}@ restored but never started, terminating with timeout
NDSession <%{public}@> Download directory for bundle %@ has moved to %@, but saved download file path is %@. Need to fix download path
NDSession <%{public}@> New download path: %@
NDSession <%{public}@> %{public}@ completed with error %@ [%ld] (was active before nsurlsessiond exit)
NDSession <%{public}@> Couldn't recreate existing task with identifier: %@ in session: <%@>.<%@>
NDSession <%{public}@> Exception caught while restoring a task: %@
Too many tasks for app session <%{public}@>.<%@> (%zu > 512)
NDSession <%{public}@> %{public}@ will retry after %lld seconds
NDSession <%{public}@> has %lu outstanding tasks
NDSession <%{public}@> client %@ is active result (%c), XPC(%c) proxy(%c) for %@
NDSession <%{public}@> %{public}@ not resumed but client disconnected, terminating it with timeout
NDSession <%{public}@> %{public}@ not resumed but client disconnected, resuming it implicitly
NDSession <%{public}@> client %@ disconnected, XPC(%c) proxy(%c) for %@
NDSession <%{public}@> Invoking client reconnection completion block
NDSession <%{public}@> Delivering pending events immediately for client session: <%@>.<%@>. Signalled already: %d, isHandlingBackgroundSession: %d
NDSession <%{public}@> Waiting for notification to deliver pending events for client session: <%@>.<%@>
NDSession <%{public}@> Received signal to deliver pending events for client session: <%@>.<%@>
NDSession <%{public}@> Delivering pending events for client session: <%@>.<%@>
NDSession <%{public}@> Application %@ is not handling a background URLSession but we still received a signal to deliver pending events
NDSession <%{public}@> Session: %@ get tasks for reconnection: %@
NDSession <%{public}@> %{public}@ for %@ is overriding discretionary status by request - forcing to %c
NDSession <%{public}@> %{public}@ for %@ is overriding discretionary status - forcing to %c
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary because the connected client is an extension
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary, since nsurlsessiond is running in EDU sync mode
NDSession <%{public}@> %{public}@ current discretionary status for %@ is discretionary (opt-in: %d)
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary
NDSession <%{public}@> %{public}@ should not begin before %@
NDSession <%{public}@> %{public}@ can now begin - earliest begin date satisfied
NDSession <%{public}@> %{public}@ no longer has a valid task or taskInfo, no need to begin
NDSession <%{public}@> %{public}@ ignoring stale delay begin timer
NDSession <%{public}@> %{public}@ can begin immediately - begin date is in past
NDSession <%{public}@> %{public}@ has not requested a begin delay
NDSession <%{public}@> %{public}@ cannot handle delayed request callback because task: %@ or taskInfo: %@ is nil
NDSession <%{public}@> %{public}@ already replied to delayed request callback - not calling again
NDSession <%{public}@> %{public}@ receiving delayed request callback
NDSession <%{public}@> %{public}@ client is not running and doesn't support wakes, continuing load for delayed request
NDSession <%{public}@> %{public}@ using new request from delayed request callback
NDSession <%{public}@> %{public}@ will be canceled due to delayed request callback
NDSession <%{public}@> %{public}@ continuing load from delayed request callback
NDSession <%{public}@> %{public}@ skipping delayed request callback - delegate not implemented
NDSession <%{public}@> %{public}@ resuming
NDSession <%{public}@> %{public}@ will begin
NDSession <%{public}@> %{public}@ cannot resume because task: %@ or taskInfo: %@ is nil
NDSession <%{public}@> %{public}@ suspending
NDSession <%{public}@> Consumed sandbox extension for file %@, extension = %lld
NDSession <%{public}@> Failed to consume sandbox extension %s for fileURL %@
NDSession <%{public}@> Error copying upload file: %@ [%ld]
NDSession <%{public}@> Released sandbox extension %lld
NDSession <%{public}@> Created stream with file descriptor: %d
NDSession <%{public}@> Encountered error %@ during task completion callback delivery
NDSession <%{public}@> Encountered error %@ error delivering auth challenge to client, performing default handling
NDSession <%{public}@> %{public}@ skipping acknowledgement teardown since it's not actually complete
NDSession <%{public}@> Not waking up client %@ since wake request is unnecessary
NDSession <%{public}@> Not waking up client %@ since sessionSendsLaunchEvents is NO
NDSession <%{public}@> Not waking up client %@ since it doesn't support app wakes
NDSession <%{public}@> Not waking up client %@ since session is obliterated
NDSession <%{public}@> Not waking up client %@ since it's already connected
NDSession <%{public}@> Not waking up client %@ since background updates are not enabled
NDSession <%{public}@> Waking up the client app: %@
NDSession <%{public}@> Failed to wake app: %@
NDSession <%{public}@> %{public}@ adding delay of %f
NDSession <%{public}@> %{public}@ is duet preauthorized
NDSession <%{public}@> %{public}@ enqueueing
NDSession <%{public}@> Received a background download request from unsafe resume data from %@
NDSession <%{public}@> Couldn't create task or taskInfo: task = %@, taskInfo = %@
NDSession <%{public}@> Task <%{public}@>.<%lu> downloadTaskWithRequest: %@
NDSession <%{public}@> Received an unsafe request for background download: %@ from %@
NDSession <%{public}@> Task <%{public}@>.<%lu> uploadTaskWithRequest: %@ fromFile: %@
NDSession <%{public}@> Received a background upload request for a file that the client cannot read: %@ from %@
NDSession <%{public}@> Task <%{public}@>.<%lu> dataTaskWithRequest: %@
NDSession <%{public}@> %{public}@ received resume data
NDSession <%{public}@> %{public}@ cancelTaskWithIdentifier
NDSession <%{public}@> %{public}@ suspendTaskWithIdentifier
NDSession <%{public}@> %{public}@ resumeTaskWithIdentifier, props %@
NDSession <%{public}@> %{public}@ resuming, QOS(0x%x)
NDSession <%{public}@> %{public}@ setPropertyOnStreamWithIdentifier, client %@ property %@
NDSession <%{public}@> %@ tried to set the priority of a task but is missing the %@ entitlement
NDSession <%{public}@> %{public}@ setting priority to %ld
NDSession <%{public}@> %@ tried to set the loading priority of a task but is missing the %@ entitlement
NDSession <%{public}@> %{public}@ setting loading priority to %f
NDSession <%{public}@> %{public}@ setting limit of %lld bytes per second
NDSession <%{public}@> %{public}@ setting discretionaryOverrride to %c
NDSession <%{public}@> %{public}@ attempted to set discretionaryOverrride to %c but lacks required entitlement %@
NDSession <%{public}@> InvalidateWithReply: for session %@ bundle ID %@
NDSession <%{public}@> Cleaning up and invalidating immediately since there are no tasks
NDSession <%{public}@> Session %@ didBecomeInvalidWithError: %@ [%ld]
NDSession <%{public}@> Invalid trust status: %ld
NDSession <%{public}@> Extended trust validation failed
NDSession <%{public}@> %{public}@ didReceiveChallenge: %@ protection space: %@ for client %@ received auth challenge with type %@
NDSession <%{public}@> %{public}@ performing Extended Validation Trust evaluation
NDSession <%{public}@> %{public}@ Extended Validation Trust evaluation succeeded
NDSession <%{public}@> %{public}@ Extended Validation Trust evaluation failed
NDSession <%{public}@> %{public}@ client doesn't implement session-level or task-level auth challenge delegate, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client doesn't implement task-level auth challenge delegate, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and doesn't support app wakes, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and trust is valid, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and challenge has a previousFailureCount of 0 and a proposedCredential, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ modifying conditional connection properties since new request %@ is to a different host than previous request %@
NDSession <%{public}@> %{public}@ willPerformHTTPRedirection, response: %@, new request: %@
NDSession <%{public}@> %{public}@ client disconnected (error %@) with redirection outstanding, following redirect
NDSession <%{public}@> %{public}@ needs new body stream
NDSession <%{public}@> %{public}@ client disconnected (error %@) with new body stream request outstanding, providing no body
NDSession <%{public}@> %{public}@ for client %@ will be retried after error %@ - code: %ld
NDSession <%{public}@> %{public}@ failed to retry
NDSession <%{public}@> Removing client proxy due to task failure caused by app quit
NDSession <%{public}@> %{public}@ completed with error %@ [%ld]. C(%c)
NDSession <%{public}@> %{public}@ for client %@ was cancelled
NDSession <%{public}@> %{public}@ for client %@ completed with error - code: %ld
NDSession <%{public}@> %{public}@ for client %@ completed successfully
NDSession <%{public}@> %{public}@ didReceiveResponse: %@, status code: %d
NDSession <%{public}@> %{public}@ client disconnected (error %@) with didReceiveResponse outstanding, responding with a cancel disposition
NDSession <%{public}@> %{public}@ client responded to didReceiveResponse with disposition %d
NDSession <%{public}@> %{public}@ received data task didReceiveResponse callback and there is no connected client. Canceling task.
NDSession <%{public}@> %{public}@ did receive data (%lld of %lld total bytes)
NDSession <%{public}@> %{public}@ client disconnected (error %@) during didReciveData delegate
NDSession <%{public}@> %{public}@ received data and there is no connected client. Canceling task.
NDSession <%{public}@> %{public}@ became download task
NDSession <%{public}@> %{public}@ finished downloading to %@
NDSession <%{public}@> %{public}@ didResumeAtOffset: %lld expectedTotalBytes: %lld
NDSession <%{public}@> %{public}@ for client %@ _willSendRequestForEstablishedConnection
NDSession <%{public}@> Client does not implement _willSendRequestForEstablishedConnection, so using proposed request
NDSession <%{public}@> %{public}@ established a connection which requires the client to be running, but it isn't running and doesn't support app wakes. Canceling the task.
NDSession <%{public}@> Perhaps the client %@ was uninstalled?
NDSession <%{public}@> %{public}@ using proposed request since the client application is not running and doesn't support wakes
NDSession <%{public}@> %{public}@ for client %@ is waiting for connection - reason: %lld
NDSession <%{public}@> %{public}@ for client %@ conditions changed - satisfied: %d
NDSession <%{public}@> %{public}@ download for client %@ received response, status code: %d
NDSession <%{public}@> Need file descriptor for file at path %@
NDSession <%{public}@> Client %@ does not support app wakes, cannot get file descriptor for download file!
NDSession <%{public}@> Client %@ does not support app wakes, but it is still running. Will attempt to get file descriptor for download file.
NDSession <%{public}@> %{public}@ getAuthHeadersForResponse for %@ _sendsLaunchEvents=%s [_clientApplication supportsWakes]=%s
NDSession <%{public}@> %{public}@ client disconnected (error %@) when attempting to communicate with HTTP Authenticator for Client %@
NDSession <%{public}@> %{public}@ received auth headers for response, continueLoad: %d authHeaders %@ newRequest %@
NDSession <%{public}@> %{public}@ waking %@ for auth headers
NDSession <%{public}@> %{public}@ getAuthHeadersForResponse does not have a remote object and does not support app wakes, canceling.
Simulating network change event since %lld seconds have passed
SCDynamicStoreCreateRunLoopSource failed: %s [%d]
SCDynamicStoreSetNotificationKeys failed: %s [%d]
Created xpc listener: %@
Received xpc event
NDUserEventAgentConnection received connection
Received a new connection from UserEventAgent! Canceling the old one
Updated Registered Launch-On-Demand Clients: %@
Attempting to launch client %@ for session %@
Couldn't launch application %@ because we don't have an xpc connection to UserEventAgent
Will wake client %@ for session %@ if we receive a notification that it supports launch-on-demand
com.apple.nsurlsessiond enableBluetoothLinkRequirements is true - will assert bluetooth link requirements
com.apple.nsurlsessiond bluetoothLinkRequirementsOverrideTimerValue is %d
Could not break full NSURLSession identifier %@ into bundle ID and session ID components
Failed to unarchive data of class %@, length %lu
Error %@ [%ld] deserializing auth headers
Error removing item at path: %@, error: %@ [%ld]
Error removing item at url: %@, error: %@ [%ld]
Failed to set mode 700 on path %s.  errno=%d
Failed to convert %s to a data-vault directory.  errno=%d
Couldn't create directory at %@, error: %@ [%ld]
Failed to create data-vault directory.  errno=%d
Couldn't create directory.  Unable to extract C-string from path argument: %@
Couldn't create directory.  No path provided.
Error getting caches directory: %@ [%ld]
Empty results for asset update query
Catalogue fetch succeeded
Catalogue fetch failed with result %ld. Fall back to the currently installed asset
Asset (state %ld  Version %ld),  Current version %ld,  best installed version %ld,  best not installed version %ld
Asset version %lu has compatibilty version set to %lu. Not supported on the current OS
Purging asset version %@
Asset version %@ purged
Failed to purge the asset with version %@. Purge result = %ld
Download best not installed asset ver %lu
Read installed asset ver %lu
Asset download requested
Asset download completed. Asset Version downloaded is %lu
Asset download failed. Result  %ld
Copying from a file at location %@ failed. Error %@
Replacing a file at location %@ failed. Error %@
Read Asset at %@
Error reading the TLD Asset version
Unable to get the system container for nsurlstoraged
Error getting the system group container for Group ID %@ 
Resetting request delay for %@
Set request delay for %@ to %f
Resetting request delay and clearing pending wake requests for %@ since the first observer is being added
Application %@ has been in background for %lu seconds. Will reevaluate discretionary downloads
Resetting request delay and clearing pending wake requests for %@ since it came into the foreground
Being asked if container with identifier %@ is foreground before getting callback from BRContainersMonitor! Foreground state is %c
Container %@ entered background
Container %@ entered foreground
Being asked if container with identifier %@ is foreground before getting callback from FPProviderMonitor!
FPProvider %@ entered background
FPProvider %@ entered foreground
An XPC error occurred when obtaining a credential: %@
An XPC error occurred when obtaining all credentials %@
An XPC error occurred when obtaining the default credential: %@
PDURLSessionProxyServer Session %@ had _sourceApplicationAuditTokenData [%@]- discarding
PDURLSessionProxyClient Session %@ received message with non-matching session UUID; dropping message
%{public}@ didCompleteWithError message failed to send, so re-sending when devices are connected
%{public}@ message failed to send, so canceling task
dataTaskWithRequest message forTaskIdentifier %lu in session %@, currentRequest = %@
%{public}@ received task creation message and that task already exists. Sequence number: %llu, existing sequence number: %llu
%{public}@ canceling exisitng task since we received a new request for that task with a higher sequence number
%{public}@ received duplicate task creation message. Dropping message
%{public}@ received task creation message for invalidated session. Dropping message
%{public}@ using local task identifier %lu
%{public}@ acknowledging dataTaskWithRequest message
Received proxy request %@ with non-http URL. Dropping request.
%{public}@ receiving cancel task message
%{public}@ receiving suspend task message
%{public}@ receiving resume task message, props %@
%{public}@ dropping effective configuration
%{public}@ receiving set description message, description = %@
%{public}@ receiving set priority message, priority = %lld
%{public}@ writing to stream returned %d, error %@ [%ld]
Open IDS Socket with UUID %@ to host %@ port %d
received tcp_connection (%p) event %lu
Received error %d reading from tcp_connection %p
Received error %d writing to tcp_connection %p
Received error %@ [%ld] reading from streamTask %@
Session %@ became invalid with error %@ [%ld]
%{public}@ didReceiveChallenge: %@, protection space: %@
%{public}@ _willSendRequestForEstablishedConnection
%{public}@ completed with error %@ [%ld]
%{public}@ StreamTask %@ completed with error %@ [%ld]
%{public}@ ignoring task completion for task %@ with error %@ [%ld] in session %@ since we do not have an associated client taskIdentifier
%{public}@ willPerformHTTPRedirection, response: %@, new request: %@
%{public}@ client responded to redirect with request %@
%{public}@ didReceiveResponse: %@
%{public}@ received response disposition: %d
%{public}@ ignoring data of length %lu since we've already failed that task
%{public}@ did receive data with length %lu
%{public}@ data acknowledged, now has %lu bytes pending acknowledgement
%{public}@ acknowledging pending data
%{public}@ data pending, now has %lu bytes pending acknowledgement
%{public}@ immediately acknowledging data
%{public}@ will wait to acknowledge data
%{public}@ will be retried
%{public}@ will be retried - error: %@
%{public}@ is waiting for connection with reason: %lld
%{public}@ getAuthHeadersForResponse %@
%{public}@ canceling because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
Could not set attributes of directory at %@, error: %@ [%ld]
Non-directory file exists at: %@. Removing it.
Bundle ID Archive %@ has unexpected format
NDSessionManager for client %@ was empty, not restoring
Application %@ is not installed, removing directory
No directory for bundleID: %@
Failed to write archive to path: %@
Evaluating new XPC connection %@ with client bundle identifier %@
Client is a PlugIn with bundle identifier %@
Containing app for PlugIn is %@
Client is an independent extension
Client is an extension
Using identifier %@ for PlugIn %@ with containing app %@
Process with pid %d does not have a bundle ID, rejecting connection
Process with bundleID %@ [pid %d] does not have a bundle path, rejecting connection
Process with bundleID %@ [pid %d] is an app clip, rejecting connection
NDSession <%{public}@>.<%@>.<%@> Lost connection to app -- connection interrupted
NDSession <%{public}@>.<%@>.<%@> Lost connection to app -- connection invalidated
Bundle %@ re-installed. Need to adjust download paths
Bundle %@ uninstalled. Need to obliterate
nsurlsessiond started
Background updates are on
Background update setting for %@ was changed to %@
Notifying observers for %@ that background update setting was turned off
Notifying observers for %@ that background update setting was turned on
Background updates were turned off
Cannot find bundle ID for process %@ state update %@
Application %@ no longer foreground
Application %@ no longer foreground, and no observers
Application %@ entered foreground
Application %@ entered foreground, and no observers
Application %@ was suspended
Application %@ was suspended, and no observers
Application %@ was quit in the app switcher
Application %@ was quit in the app switcher, and no observers
Added observer for app %@, now %lu observers
Removed observer for app %@, now %lu observers
Started monitoring app %@, now %lu total %@
Stopped monitoring app %@, now %lu total %@
validating assertion %@
%s assertion with name %@ for bundle id %@
looking for background task completion for bundle id %@
looking for background session %@ for bundle id %@
Invalidating assertion for bundleID: %@. sessionID: %@
Couldn't create process assertion for %@ (%@)
We already have an assertion for bundleID: %@, sessionID: %@
took assertion for %@, session %@, uuid %@
Will request wake of app %@ for NDSession <%{public}@> with identifier %@
Failed to take process assertion for %@
Successfully woke application %@ and took process assertion
Failed to open application %@, error: %@ timeout: %{bool}d
Issuing wake request for independent extension %@ for session %@ with uuid %@ and requirement %d
Wake request already exists for independent extension %@ for session %@ with uuid %@
Removing wake request for independent extension %@ for session %@
Canceling AVAssetTask because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
%{public}@ Updating configuration on daemon
%{public}@ initialized appleIDAuthenticator, status codes = %@
%{public}@ StreamingZip - not yet prepared for extraction while setting additional properties
%{public}@ StreamingZip - terminating lingering extractor from previous download attempt
%{public}@ StreamingZip - preparing for extraction to %@
%{public}@ Extractor prepare - Offset: %lld, error: %@ [%ld]
%{public}@ Failed to prepare for extraction - timed-out.
%{public}@ StreamingZip - no path available.  Wait for init with resume-info for the path.
%{public}@ Object does not support STExtractor protocol.  Dropping this object. Class=%@
%{public}@ StreamingZip - already prepared for extraction while setting additional properties
[Telemetry]: Assiging taskMetrics on the daemon side
%{public}@ client acknowledged completion
%{public}@ client acknowledged file download
%{public}@ performing auth challenge callback, challenge %@
Failed to establish client cert proxy: %@
%{public}@ client responded to task challenge with disp %d, cred %@, trustProxy %@
%{public}@ performing did start app wake callback.
%{public}@ performing did finish app wake callback.
%{public}@ performing will send request callback, request %@
%{public}@ failed to ask client for modified request, using original proposed request
%{public}@ client responded to will send request callback with request %@ handle %@
Performing open file at path callback for path %@ mode %d
Client responded to open file callback with handle %@
%{public}@ failed to deliver resolved MediaSelection
%{public}@ failed to deliver downloaded HLS variants
%{public}@ performing begin delayed request callback
%{public}@ failed to ask client for delayed request disposition, continuing load
%{public}@ client responded to delayed request callback with disposition %d
%{public}@ performing get auth headers for response callback.
%{public}@ failed to ask client for getAuthHeadersForResponse. Error=%@
%{public}@ client responded to getAuthHeadersForResponse callback with continueLoad=%@, authHeaders=%@, newRequest=%@
%{public}@ draining authentication challenge callback
%{public}@ draining willSendRequest callback
%{public}@ draining openFileAtPath callback
%{public}@ draining willBeginDelayedRequest callback
%{public}@ draining getAuthHeadersForResponse callback
Delayed wake timer fired for session <%@>.<%@>
Triggering delayed wake for session <%@>.<%@>
Scheduled delayed wake for session <%@>.<%@>
Canceling delayed wake for session <%@>.<%@>
%{public}@ failed to re-instantiate AVURLAsset with token %llu
%{public}@ restoring, which had never been started, will resume implicitly
Error getting container path: %llu
Error getting User managed assets path: %llu
Error removing file at location of asset downloads directory: %@ [%ld]
Error creating asset downloads directory: %@ [%ld]
Lowering priority of AVAssetDownloads for %@ since it is no longer in the foreground
Bumping priority of AVAssetDownloads for %@ since it entered the foreground
Cancelling AVAssetDownloads for session <%@>.<%@> since client was quit from app switcher
Client exited transitional discretionary period.  Re-evaluating task priorities for session <%@>.<%@>
Task <%{public}@>.<%lu> avAssetDownloadTaskWithDownloadToken: %llu, URL: %@, destinationURL: %@, temporaryDestinationURL: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAssetDownloadSession %@ with token %llu
%{public}@ failed to instantiate AVAssetDownloadSession
%{public}@ failed to instantiate AVAsset, token %llu
Task <%{public}@>.<%lu> for client %@ does not have write access to destination directory %@
Task <%{public}@>.<%lu> avAggregateAssetDownloadTaskWithDownloadToken: %llu, serializedMediaSelections: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAggregateAssetDownloadTask asset: %@
%{public}@ cancelTaskWithIdentifier
%{public}@ retrying AVAssetDownloadTask
%{public}@ removing destination file for AVAssetDownloadTask in order to retry
%{public}@ will retry after %f seconds
Creating tcp_connection to host: %@, port: %d
%{public}@ tcp_connection_create() returned NULL (host %@, port %d, queue %@, taskInfo %@, URL %@)
Created tcp_connection: %@
%{public}@ received tcp_connection event %d
%{public}@ created AVAssetDownloadSession with token %llu
%{public}@ couldn't create AVAssetDownloadSession; returning an error
%{public}@ startAVAssetDownloadSessionWithTaskIdentifier wrapper: %@ taskIdentifier: %lu
%{public}@ canceling tcp_connection
%{public}@ finished downloading to %@
%{public}@ completion woke client: %c
%{public}@ completion did not wake client and client is not active - requesting delayed wake
%{public}@ completion woke client or client is active - not requesting delayed wake
%{public}@ AVAssetDownloadSession did complete with error %@ [%ld]
