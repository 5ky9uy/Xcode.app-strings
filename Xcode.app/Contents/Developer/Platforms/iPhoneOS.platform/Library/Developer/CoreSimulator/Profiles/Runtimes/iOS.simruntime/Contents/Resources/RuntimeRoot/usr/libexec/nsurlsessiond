@(#)PROGRAM:nsurlsessiond  PROJECT:CFNetwork-1406.0.3
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleExecutable</key>
<string>nsurlsessiond</string>
<key>CFBundleIdentifier</key>
<string>com.apple.nsurlsessiond</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>nsurlsessiond</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1406.0.3</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1406.0.3</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20E5212g</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212g</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<true/>
</dict>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.nsurlsessiond</string>
<key>com.apple.carousel.defaulturlsessionpolicy</key>
<true/>
<key>com.apple.chronoservices</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.nanotimekit.activecomplication</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.join_connection_pool</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>SERVICE_ENTITLEMENT</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.userManagedAssets</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.accounts.bundleidspoofing</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.TopLevelDomainDafsa</string>
</array>
<key>com.apple.private.cfnetwork.har-capture-delegation</key>
<true/>
<key>com.apple.private.dark-wake-network-reachability</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>nsurlsessiond</string>
<key>com.apple.rootless.storage.com.apple.MobileAsset.DuetExpertCenterAsset</key>
<true/>
<key>com.apple.rootless.storage.nsurlsessiond</key>
<true/>
<key>com.apple.runningboard.assertions.cfnetwork</key>
<true/>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.runningboard.targetidentities</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.nano.nanoregistry.paireddeviceregistry</string>
<string>com.apple.terminusd</string>
<string>com.apple.chronoservices</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.nsurlstoragedresources</string>
</array>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
application-identifier
com.apple.nsurlsessiond0/*com.apple.carousel.defaulturlsessionpolicy
com.apple.chronoservices
com.apple.coreduetd.allow
0+&com.apple.duet.activityscheduler.allow
0,'com.apple.frontboard.launchapplications
0.)com.apple.mobile.keybagd.UserManager.sync
0/*com.apple.multitasking.systemappassertions
0-(com.apple.nanotimekit.activecomplication
01,com.apple.networkd.configure_connection_pool
0,'com.apple.networkd.join_connection_pool
0.)com.apple.networkd.set_account_identifier
com.apple.private.CacheDelete0m
CLIENT_ENTITLEMENT
PURGEABLE_ENTITLEMENT
PURGE_ENTITLEMENT
CANCEL_PURGE_ENTITLEMENT
SERVICE_ENTITLEMENT02-com.apple.private.InstallCoordination.allowed
050com.apple.private.MobileContainerManager.allowed
0?:com.apple.private.MobileContainerManager.userManagedAssets
0+&com.apple.private.accounts.allaccounts
00+com.apple.private.accounts.bundleidspoofing
0^/com.apple.private.assets.accessible-asset-types0+)com.apple.MobileAsset.TopLevelDomainDafsa072com.apple.private.cfnetwork.har-capture-delegation
050com.apple.private.dark-wake-network-reachability
com.apple.private.ids.messaging0+)com.apple.private.alloy.nsurlsessionproxy0\-com.apple.private.ids.messaging.high-priority0+)com.apple.private.alloy.nsurlsessionproxy0!
com.apple.private.ids.nearby
0U&com.apple.private.ids.prefer-infrawifi0+)com.apple.private.alloy.nsurlsessionproxy0Q"com.apple.private.ids.self-session0+)com.apple.private.alloy.nsurlsessionproxy00+com.apple.private.network.interface-control
0.)com.apple.private.network.socket-delegate
0B=com.apple.private.nsurlsession-allow-override-connection-pool
0/*com.apple.private.nsurlsession.impersonate
050com.apple.private.nsurlsession.set-task-priority
0;*com.apple.private.sandbox.profile:embedded
nsurlsessiond0KFcom.apple.rootless.storage.com.apple.MobileAsset.DuetExpertCenterAsset
0-(com.apple.rootless.storage.nsurlsessiond
00+com.apple.runningboard.assertions.cfnetwork
0)$com.apple.runningboard.process-state
0,'com.apple.runningboard.targetidentities
4com.apple.security.exception.mach-lookup.global-name0a0com.apple.nano.nanoregistry.paireddeviceregistry
com.apple.terminusd
com.apple.chronoservices0&!com.apple.security.network.client
0R com.apple.security.system-groups0.,systemgroup.com.apple.nsurlstoragedresources00+com.apple.telephony.cupolicy-monitor-access
0.)com.apple.usermanagerd.persona.background
com.apple.wifi.manager-access
%@ %@
session
socketUUID
host
port
task
disposition
credential
UseCredential
PerformDefaultHandling
CancelAuthenticationChallenge
RejectProtectionSpace
(unknown: %i)
configuration
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
_nsurlsessiondErrorDomain
%02x
_unsafe
com.apple.nsurlsessiond
background
--privileged
--postlogoutsync
proxy
priority
com.apple.nsurlsessiond.NSURLSessionProxyService-Queue
com.apple.private.alloy.nsurlsessionproxy
NSURLSessionProxyClientBundleIdentifier
com.apple.cloudkit.cloudd
com.apple.cloudd
IDSSendMessageOptionMetricReportIdentifier
v16@?0@"PBCodable"8
taskInfo
v32@?0@"NSString"8@"PDURLSessionProxyServer"16^B24
com.apple.nsurlsessiond.PDBluetoothCompanionLinkAssertion.bluetoothSerialQueue
originalRequest
currentRequest
taskSequenceNumber
response
com.apple.nsurlsessionf.avassetdownloadersessionwrappercallback
AVAssetDownloadSessionMediaSelectionArrayKey
AVAssetDownloadTaskMediaSelectionsForMultichannelKey
AVAssetDownloadTaskMediaSelectionKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AssertType
PreventUserIdleSystemSleep
AssertLevel
AssertName
AVAssetDownloadSessionWrapper %llu (%@)
TimeoutSeconds
TimeoutAction
TimeoutActionTurnOff
B24@?0@"NSURL"8@"NSError"16
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
com.apple.nsurlsessiond-cachedelete
CFNetworkDownload_
.tmp
q24@?0@"NSDate"8@"NSDate"16
NSURLSessionLastDisconnectDateKey
NDBackgroundSessionManagerRestoredStateKeyTasks
NDBackgroundSessionManagerRestoredStateKeyTLSSessionCachePrefix
NDBackgroundSessionManagerKeySessionUUID
com.apple.private.nsurlsession.impersonate
com.apple.private.nsurlsession.allow-discretionary-cellular
com.apple.private.nsurlsession-allow-override-connection-pool
com.apple.private.nsurlsession.allow-duet-preauthorization
com.apple.private.nsurlsession.set-max-watch-cell-transfer-size
com.apple.nsurlsessiond.session-manager
com.apple.nsurlsessiond.session-archive-queue
sessions.plist
downloadDirectoryPath.plist
configuration.plist
options.plist
com.apple.OTACrashCopier
Holding boost for %@
com.apple.private.dark-wake-network-reachability
get-task-allow
com.apple.security.get-task-allow
com.apple.security.application-groups
kNSURLSessionThrowImmediateAVExceptionKey
kNSURLSessionImmediateInvalidationErrorKey
NSURLSessionDelegateImplementsWillSendRequestForEstablishedConnectionKey
NSURLSessionDelegateImplementsSessionAuthChallengeKey
NSURLSessionDelegateImplementsTaskAuthChallengeKey
NSURLSessionDelegateImplementsWillBeginDelayedRequestKey
com.apple.private.nsurlsession.set-task-priority
com.apple.private.nsurlsession.set-discretionary-override-value
NSURLSessionBackgroundPoolName
pathToDownloadTaskFile
effectiveConfig
NSURLSessionBackgroundPoolName-sync-%d
Uploads
Library/Caches/com.apple.nsurlsessiond/Downloads
tasks.plist
Task <?>.<%lu>
%@ [delay: %f, duration: %f, allowsCellularAccess: %d]
%@ [allowsCellularAccess: %d]
VPN not connected
Duet Said No
Waiting for start time
Duration expired
Waiting for power
Waiting for inexpensive network
Waiting for non-cellular network
Link quality too poor
Cellular service is unavailable
Thermal conditions are not good
Conflicting parameters
Required data protection level is locked
Connection pool is full
Opportunistic
Network unavailable
Blocked by proxy
In battery saver mode
Network quality
Unknown (%llu)
com.apple.CFNetwork
__NSCFLocalDownloadTask
NSKeyedArchiveRootObjectKey
__NSCFLocalUploadTask
__NSCFLocalDataTask
trailers
com.apple.mobileassetd
com.apple.sharingd
_NSURLRequestIsDiscretionaryOverrideValue
New task
Task <?>.<0>
CFNetworkUpload_%@
%@%@%@
__com.apple.CFNetwork.prefix__
v32@?0@"NSURLProtectionSpace"8@"NSURLCredential"16^B24
v16@?0@"NSData"8
v16@?0@"NSURLRequest"8
v24@?0@"NSURLRequest"8@"NSFileHandle"16
version
launchUUID
headerData
continueLoad
receivedData
additionalProperties
taskDescription
com.apple.nsurlsessiond.status-monitor
com.apple.nsurlsessiond.UserEventAgentConnectionQueue
com.apple.nsurlsessiond-launchondemand
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.nsurlsessiond-events.message-type
com.apple.nsurlsessiond-events.registered-clients
DisableInfraWiFi
enableBluetoothLinkRequirements
bluetoothLinkRequirementsOverrideTimerValue
NSErrorPeerCertificateChainKey
NSErrorClientCertificateChainKey
v32@?0@8@16^B24
http
https
com.apple.nsurlsessionproxy.cancelError
nsurlsessiond
com.apple.nsurlsessiond.szmodtime
com.apple.nsurlsessiond.purged
-launchd
com.apple.nsurlsessiond/Downloads
/nsurlsessiond.launch
streamErrorDomain
streamErrorCode
archiveList
com.apple.MobileAsset.TopLevelDomainDafsa
v16@?0q8
DafsaData.bin
systemgroup.com.apple.nsurlstoragedresources
Library
dafsaData.bin
com.apple.nsurlsessiond.NDSpringBoardApplication.request-delay-queue
com.apple.nsurlsessiond.NDExtension.request-delay-queue
Cancel
Allow
BecomeDownload
request
reason
com.apple.nsurlsessiond.usermanager.sync
nsurlsession bg task
client
retry
v24@?0@"NSString"8^B16
v32@?0@"NSURLProtectionSpace"8@"NSDictionary"16^B24
monitor
shouldCancel
com.apple.nsurlsessiond.credential-storage-queue
v24@?0@"NSDictionary"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSURLCredential"8
hasBodyStream
 uuid:%@
BackgroundDisposition
com.apple.nsurlsessiond.NSURLSessionProxyPool
v32@?0@"NSNumber"8@"NSURLSessionDataTask"16^B24
Session <%@>
message
type
_kCFNetworkProxySessionNeedsNewBodyStreamSignal
v20@?0i8@"NSError"12
v20@?0@"NSObject<OS_dispatch_data>"8i16
v28@?0@"NSData"8B16@"NSError"20
v24@?0@"PBCodable"8@"NSError"16
-[PDURLSessionProxyServer URLSession:dataTask:_didReceiveData:completionHandler:]
PDURLSessionProxyServer.mm
!_taskIdentifiersToPendingDataCompletion[@(taskIdentifier)]
bytesSent
totalBytesSent
totalBytesExpectedToSend
taskIdentifier
com.apple.system.powersources.source
v12@?0i8
challenge
domain
code
userInfo
com.apple.nsurlsessiond.daemon-queue
com.apple.nsurlsessiond-xpc-transaction-queue
bundles.plist
NDTaskInfo
q24@?0@8@16
v32@?0@"NSString"8@"NDSessionManager"16^B24
com.apple.developer.on-demand-install-capable
com.apple.nsurlsessiond.started
bodyData
com.apple.mt
KeepAppsUpToDateAppList
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
kKeepAppsUpToDateEnabledChangedNotification
com.apple.nsnetwork.SpringBoard-queue
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@8@"RBSAssertion"16^B24
found
could not find
com.apple.nsurlsessiond.handlesession %@
BackgroundDownload
com.apple.cfnetwork
UIApplicationLaunchOptionsURLSessionKey
v24@?0@"BSProcessHandle"8@"NSError"16
com.apple.nsurlsessiond.NDExtension-queue
sessionIdentifier
uuidString
sequenceNumber
idsPriority
error
StatusCodes
PublishingURL
EarliestBeginDate
CountOfBytesClientExpectsToSend
CountOfBytesClientExpectsToReceive
DisallowCellularDueToSystemPolicy
SZExtractor
TimeoutIntervalForResource
nw_activityUUID
file-write-create
v24@?0Q8@"NSError"16
args
v16@?0@"NSError"8
v32@?0q8@"NSURLCredential"16@"NSXPCListenerEndpoint"24
v16@?0@"NSFileHandle"8
v24@?0q8@"NSURLRequest"16
v28@?0B8@"NSDictionary"12@"NSURLRequest"20
com.apple.private.nsurlsession.media-asset-download.can-specify-destination-url
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
{CGSize=dd}
AVAssetDownloadSessionDebugIdentifierKey
AVAssetDownloadSessionRetryErrorKey
AVAssetDownloadTaskDownloadConfigurationKey
v8@?0
v32@?0@"NSNumber"8@"__NSCFURLSessionTaskInfo"16^B24
%llu
%@%@%@.movpkg
file-write-data
v12@?0B8
configuration.apple.com
v20@?0I8r^v12
EDUMode
AVAssetDownloadToken
T@"NSXPCConnection",W,V_xpcConn
AVURLAsset
TQ,N,V_totalBytesExpectedToSend
HTTPBodyStream
_actualResponse
IDSMessageTimeout
_assertion_lock
NDAVAssetDownloadSessionWrapper:didFinishDownloadForMediaSelectionPropertyList:
_currentRequest
NDAVAssetDownloadSessionWrapper:didResolveMediaSelectionPropertyList:
_domain
NDAVAssetDownloadSessionWrapper:willDownloadVariants:
_hasSZExtractor
T#,R
_infraWiFiTimer
T@"<NDBackgroundSessionDelegate>",W,V_delegate
_monitorTaskSet
T@"<NDCredentialStorageDelegate>",W,V_delegate
_progressValues
T@"<PDURLSessionProxyServerDelegate>",R,V_delegate
_retryDataTasks
T@"<SZExtractorDelegate>",W,N
_setActualAdditionalProperties:
T@"NDUserSyncStakeholder",&,V_stakeholder
_streamTasksToIDSTCPConnections
T@"NSData",&,N,V_additionalProperties
_taskIdentifier
T@"NSData",&,N,V_bodyData
_useTLSSessionCacheFromSession:
T@"NSData",&,N,V_headerData
acquire
T@"NSData",&,N,V_taskInfo
allKeys
T@"NSDictionary",&,S_setActualAdditionalProperties:
backgroundTask:willPerformHTTPRedirection:withNewRequest:reply:
T@"NSDictionary",R,&,V_options
clientApplicationWasReinstalled
T@"NSMutableSet",&,V_activeTasks
context
T@"NSObject<OS_dispatch_queue>",&,V_queue
countOfBytesClientExpectsToSend
T@"NSObject<OS_dispatch_queue>",R,V_queue
dealloc
T@"NSString",&,N,V_host
downloadFileURL
T@"NSString",&,N,V_sessionIdentifier
T@"NSString",&,N,V_taskDescription
findBestAssetFrom:skipDownload:
T@"NSString",&,V_bundleIdentifier
handleEarliestBeginDateForTaskWithIdentifier:completionHandler:
T@"NSString",C,V_bundleID
handleMessage:ofType:withReply:
T@"NSString",C,V_sharedContainerIdentifier
hasContinueLoad
T@"NSString",R,C
hasPort
T@"NSString",R,V_monitoredAppBundleID
hasShouldCancel
T@"NSURL",R,C,V_URL
initWithBundleIdentifier:error:
T@"NSURLSessionConfiguration",&,S_setActualConfiguration:
isDiscretionary
T@"PBCodable",C,V_message
isValid
T@"PDURLSessionProxyCredential",&,N,V_credential
loadingPriority
T@"PDURLSessionProxyRequest",&,N,V_currentRequest
message
T@"PDURLSessionProxyRequest",&,N,V_request
moveInstalledAsset:withVersion:
T@"PDURLSessionProxySessionMessage",&,N,V_session
numberWithBool:
T@"UMUserSyncTask",&,V_monitorTask
options
T@?,C,V_invalidateReply
TB,GisConnected,V_connected
protectionSpace
TB,GisPrivileged,V_privileged
reconnectClient:withCompletion:
TB,N,V_continueLoad
removeObserver:
TB,N,V_delegateImplementsSessionAuthChallenge
results
TB,N,V_delegateImplementsWillPerformRedirection
TB,N,V_hasBodyStream
serviceWithDefaultShellEndpoint
TB,N,V_supportsRedirects
TB,R,N
setArchiveList:
TB,V_isSpringBoardApp
setCountOfBytesExpectedToWrite:
TB,V_tasksEnqueued
setHasPriority:
TB,VisInTransitionalDiscretionaryPeriod
setIdsPriority:
TI,N,V_reason
setMonitorTask:
TLSMaximumSupportedProtocol
setResolvedMediaSelectionPlist:
TQ,N,V_bytesSent
setTLSMaximumSupportedProtocol:
TQ,N,V_sequenceNumber
setTaskMetrics:
TQ,N,V_taskSequenceNumber
set_atsContext:
TQ,R
set_storagePartitionIdentifier:
TQ,V_countOfBytesExpectedToWrite
setupDelayTimer
TQ,V_installedAssetVersion
streamErrorCode
TS,V_type
suspend
Ti,N,V_disposition
taskWillSuspend
Ti,N,V_streamErrorDomain
uppercaseString
Tq,N,V_idsPriority
xpcConn
.cxx_destruct
T@"NSString",R,V_clientBundleID
AVAssetURL
TI,N,V_priority
HTTPAdditionalHeaders
HTTPMaximumConnectionsPerHost
_actualTaskInfo
NDAVAssetDownloadSessionWrapper:didCompleteWithError:
_clientBundleID
NDAVAssetDownloadSessionWrapper:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:
_destinationURL
NDAVAssetDownloadSessionWrapper:didUpdateProgressWithLastBytesWritten:totalBytesWritten:totalBytesExpectedToWrite:
_extractorPreparedForExtraction
StringAsDisposition:
_implementsSessionAuthChallenge
T@"<NDAVAssetDownloadSessionWrapperDelegate>",R,W,V_delegate
_lastUpdateTime
T@"<NDCallbackQueueDelegate>",W,V_delegate
_powerAssertion
T@"<NDSessionManagerDelegate>",W,V_delegate
_reason
T@"<STExtractorDelegate>",W,N
_sequenceNumber
T@"AVAssetDownloadSession",&,V_downloadSession
_streamTasksToDeviceConnections
T@"NSArray",C,V_args
_streamTasksToOpenSocketReplies
T@"NSData",&,N,V_archiveList
_totalBytesSent
T@"NSData",&,N,V_configuration
_watchExtensionBundleIdentifier
T@"NSData",&,N,V_receivedData
activeTasksLock
T@"NSData",&,N,V_userInfo
applicationsDidFailToUninstall:
T@"NSDictionary",&,S_setActualAuthHeaders:
canLaunchProcessWithIdentifier:
T@"NSMutableDictionary",&,V_bridgeTasks
containsObject:
T@"NSMutableSet",&,V_monitorTaskSet
copyTo:
T@"NSObject<OS_dispatch_queue>",R,&,V_delegateQueue
createDataVaultDirectoryAtPath:
T@"NSString",&,N,V_domain
devices
T@"NSString",&,N,V_launchUUID
downloadSession
T@"NSString",&,N,V_socketUUID
fileURL
T@"NSString",&,N,V_uuidString
getLocalFileUrl
T@"NSString",&,V_launchUUID
handleFailedMessageSend:ofType:
T@"NSString",C,V_identifier
hasCode
T@"NSString",C,V_uuidString
hasHost
T@"NSString",R,V_identifier
hasReceivedData
T@"NSString",R,V_secondaryID
hasTask
T@"NSURL",R,C,V_destinationURL
invalidateReply
T@"NSUUID",R,V_uuid
isProxy
T@"PDURLSessionProxyAuthChallenge",&,N,V_challenge
knownSZExtractorImplementations
T@"PDURLSessionProxyError",&,N,V_error
lowercaseString
T@"PDURLSessionProxyRequest",&,N,V_originalRequest
monitorTaskLock
T@"PDURLSessionProxyResponse",&,N,V_response
T@"PDURLSessionProxyTaskMessage",&,N,V_task
obliterateAllSessionsWithReply:
T@"__NSCFURLSessionTaskInfo",&,S_setActualTaskInfo:
originalRequest
T@?,C,V_obliterationCompletion
priorityForDiscretionaryStatus:
TB,GisInSyncBubble,V_inSyncBubble
TB,N
release
TB,N,V_delegateImplementsDidReceiveResponse
request
TB,N,V_delegateImplementsTaskAuthChallenge
retainInfraWiFi
TB,N,V_delegateImplementsWillSendRequest
serviceSpaceDidBecomeAvailable:
TB,N,V_shouldCancel
session
TB,R
setActiveTasks:
TB,V_hasBeenCalled
setBridgeTasks:
TB,V_progressTimerRunning
setDisposition:
TB,V_tasksInitialized
setHasTotalBytesExpectedToSend:
TI,N,V_port
setMayBeDemotedToDiscretionary:
TI,N,V_version
setQos:
TLSMinimumSupportedProtocol
setStakeholder:
TQ,N,V_code
setTLSMinimumSupportedProtocol:
TQ,N,V_taskIdentifier
setWithObjects:
TQ,N,V_totalBytesSent
set_attributedBundleIdentifier:
TQ,R,V_downloadToken
set_timeoutIntervalForResource:
TQ,V_countOfBytesWritten
setupDelayedCompletionWakeTimer
TQ,V_taskIdentifier
stringByAppendingPathComponent:
Td,V_currentRequestDelay
taskDescription
Ti,N,V_streamErrorCode
uploadTaskWithRequest:fromFile:
Ti,V_type
version
Tq,V_basePriority
T{os_unfair_lock_s=I},V_activeTasksLock
T{os_unfair_lock_s=I},V_monitorTaskLock
URLAssetWithURL:options:
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLForDirectory:inDomain:appropriateForURL:create:error:
URLPathAllowedCharacterSet
URLSession:_taskIsWaitingForConnection:
URLSession:_willRetryBackgroundDataTask:
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:betterRouteDiscoveredForStreamTask:
URLSession:dataTask:_didReceiveData:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:readClosedForStreamTask:
URLSession:streamTask:didBecomeInputStream:outputStream:
URLSession:task:_alternatePathAvailable:
URLSession:task:_conditionalRequirementsChanged:
URLSession:task:_didReceiveInformationalResponse:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:writeClosedForStreamTask:
URLSessionDidCompleteForExtensionWithBundleIdentifier:info:
URLSessionDidFinishEventsForBackgroundURLSession:
UTF8String
UUID
UUIDString
_AVAssetDownloadSesssionOptions:config:
_DuetActivityProperties
_IDSMessageTimeout
_TCPAdaptiveReadTimeout
_TCPAdaptiveWriteTimeout
_TLSMaximumSupportedProtocolVersion
_TLSMinimumSupportedProtocolVersion
_UMSyncTask
_URL
_URLSession:connectionEstablishedForStreamTask:
_URLSession:downloadTask:didReceiveResponse:
_URLSession:downloadTaskNeedsDownloadDirectory:
_URLSession:openFileAtPath:mode:completionHandler:
_URLSession:task:getAuthHeadersForResponse:completionHandler:
_URLToUse
_activeTasks
_activeTasksLock
_actualAdditionalProperties
_actualAuthChallenge
_actualAuthHeaders
_actualConfiguration
_actualCredential
_actualError
_actualRequest
_additionalProperties
_allowsHSTSWithUntrustedRootCertificate
_allowsPowerNapScheduling
_allowsReachabilityCheck
_allowsRetryForBackgroundDataTasks
_allowsTLSECH
_allowsTLSFallback
_allowsTLSFalseStart
_allowsVirtualInterfaces
_alwaysPerformDefaultTrustEvaluation
_appIsForeground
_archiveList
_archiveQueue
_archiveTimer
_archiveWasDeferred
_args
_assertions
_asset
_assetDownloadTokensToAssets
_atsContext
_authenticatorStatusCodes
_backgroundPublishingURL
_backgroundTrailers
_backgroundUpdatesAllowed
_basePriority
_blocksToExecuteAfterNetworkChange
_bluetoothCompanionLinkAssertion
_bluetoothSerialQueue
_bodyData
_boost
_bridgeTasks
_btLinkAssertionRetainCount
_btLinkAssertionTimer
_bundleDirectory
_bundleID
_bundleIdentifier
_bytesSent
_cachedCredentials
_cachedDefaultCredentialUsers
_callbackQueue
_callbacks
_challenge
_cleanedUp
_clientApplication
_clientBundleIdentifier
_clientConfig
_clientImplementsSessionChallenge
_clientImplementsTaskChallenge
_clientImplementsWillBeginDelayedRequest
_clientImplementsWillSendRequest
_clientIsNotExplicitlyDiscretionary
_clientPID
_clientProxy
_clientSecondaryIdentifier
_clients
_code
_companionAppBundleIdentifier
_companionPeerIdentifier
_completeReconnectionBlock
_configuration
_connected
_connectedExtension
_connection
_connectionIsCellular
_connectionPoolName
_containingApplication
_continueLoad
_copySocketStreamProperties
_countOfBytesExpectedToWrite
_countOfBytesWritten
_createDispatchData
_createdDataVault
_credential
_credentialStorage
_currentRemoteLaunchUUID
_currentRequestDelay
_daemon_connectionMetrics
_daemon_currentTransactionMetrics
_daemon_establishTime
_delayTimer
_delayedWakeTimer
_delegate
_delegateImplementsDidReceiveResponse
_delegateImplementsSessionAuthChallenge
_delegateImplementsTaskAuthChallenge
_delegateImplementsWillPerformRedirection
_delegateImplementsWillSendRequest
_delegateQueue
_destinationURLToUse
_deviceConnections
_directoryForDownloadedFiles
_discretionary
_discretionaryPrioritySession
_disposition
_doesSZExtractorConsumeExtractedData
_downloadDirectory
_downloadSession
_downloadTaskWithRequest:downloadFilePath:
_downloadToken
_duetPreClearedMode
_duetPreauthorized
_dynamicStoreSource
_effectiveConfiguration
_error
_explicitlyDiscretionary
_extendedNonDiscretionaryGracePeriodTimer
_extractor
_extractorFinishedDecoding
_groupConfiguration
_has
_hasBeenCalled
_hasBeenSignalledToDeliverPendingEvents
_hasBodyStream
_hasLoadedCompanionPeerIdentifier
_hasSetLinkRequirements
_hasStarted
_hasTransferredData
_haveReceivedLegacyStartupMessage
_haveReceivedMessage
_headerData
_host
_identifier
_identifiersToAVWrappers
_identifiersToDASActivities
_identifiersToMonitors
_identifiersToStreamQueues
_identifiersToStreams
_identifiersToTCPConnections
_identifiersToTaskInfo
_identifiersToTasks
_identifiersToThroughputMonitors
_idsPriority
_idsService
_ignoreDidReceiveResponseDisposition
_implementsDidReceiveResponse
_implementsTaskAuthChallenge
_implementsWillPerformRedirection
_implementsWillSendRequest
_inSyncBubble
_incomingSequenceNumbersByPriority
_infersDiscretionary
_infersDiscretionaryFromOriginatingClient
_infraWiFiRetainCount
_initWithActualAuthChallenge:
_initWithActualCredential:
_initWithActualError:
_initWithActualRequest:
_initWithActualResponse:
_initializedForegroundState
_initializedForegroundStateFromMonitorCallback
_installedAssetVersion
_invalidateReply
_isActive
_isForeground
_isInvalid
_isSafeDirectoryForDownloads:withToken:
_isSafeFileForBackgroundUpload:withToken:
_isSafeRequestForBackgroundDownload
_isSpringBoardApp
_lastArchiveTime
_lastSuspendTime
_launchUUID
_legacySocketStreamProperties
_listener
_loggableDescription
_loggingPrivacyLevel
_maximumWatchCellularTransferSize
_mayBeDemotedToDiscretionary
_message
_messagesToReSend
_metrics
_monitor
_monitorTask
_monitorTaskLock
_monitoredAppBundleID
_monitoredApplication
_monitoredBundleIDs
_multipathAlternatePort
_networkChangeEventCount
_nonDiscretionaryGracePeriodTimer
_nsurlsessionproxy_cancelWithError:
_nsurlsessionproxy_clearError
_nsurlsessionproxy_error
_nsurlsessionproxy_isSafeRequest
_nsurlsessionproxy_launchUUID
_nsurlsessionproxy_messagePriority
_nsurlsessionproxy_requiresBackgroundSession
_nsurlsessionproxy_secureArchivedDataWithRootObject:
_nsurlsessionproxy_secureUnarchiveObjectOfClass:withData:
_nsurlsessionproxy_sequenceNumber
_nsurlsessionproxy_sessionIdentifier
_nsurlsessionproxy_sessionUUID
_nsurlsessionproxy_setLaunchUUID:
_nsurlsessionproxy_setMessagePriority:
_nsurlsessionproxy_setSequenceNumber:
_nsurlsessionproxy_setSessionUUID:
_nsurlsessionproxy_taskIdentifier
_obliterateAllBackgroundSessionsWithCompletionHandler:
_obliterated
_obliterationCompletion
_observedBackgroundSettings
_observers
_onBehalfOfPairedDevice
_onqueue_IDSTimoutForMessage:
_onqueue_adoptEffectiveConfiguration:
_onqueue_archiveTaskInfo
_onqueue_devicesConnected
_onqueue_devicesDisconnected
_onqueue_handleFailedMessageSend:ofType:
_onqueue_handleReceivedMessage:ofType:withReply:
_onqueue_handleReceivedReply:forIdentifier:ofType:withError:
_onqueue_loggableDescriptionForMessage:
_onqueue_messageWithIdentifier:didSendWithSuccess:error:
_onqueue_priorityForMessage:ofType:isReply:
_onqueue_receivedNewLaunchUUID:isStartupMessage:
_onqueue_releaseAssertionForBundleID:sessionID:
_onqueue_remoteDeviceStartedUp
_onqueue_removePendingLaunchForBundleID:sessionID:
_onqueue_resetRequestDelay
_onqueue_sendMessage:ofType:responseIdentifier:forSourceApplication:withUrgency:withIDSMessageTimeout:withReply:
_onqueue_sendStartupMessage
_onqueue_setPrefersInfraWiFi:
_onqueue_sourceApplicationForMessage:
_onqueue_updateDeviceState
_onqueue_wakeUpExtension:forSession:withSessionUUID:wakeRequirement:
_options
_originalRequest
_outgoingSequenceNumbersByPriority
_outstandingMessages
_outstandingReplies
_outstandingTaskIDs
_pendingLaunches
_pendingWakes
_performsEVCertCheck
_performsNonDiscretionaryThroughputMonitoring
_performsNonDiscretionaryThrougputMonitoring
_pidForHAR
_pipeManager
_port
_powerMonitorToken
_prefersInfraWiFi
_priority
_priorityValue
_privileged
_progressTimerRunning
_progressTimestamps
_propertyForKey:
_queue
_receivedData
_receivedLaunchUUIDs
_reconnectingProxies
_registeredClients
_releasePreventIdleSleepAssertionIfAppropriate
_reportsDataStalls
_request
_requestFromResumeData
_requiresPowerPluggedIn
_requiresSustainedDataDelivery
_respectsAllowsCellularAccessForDiscretionaryTasks
_response
_secondaryID
_sendsLaunchEvents
_service
_session
_sessionArchiveQueue
_sessionConfiguration
_sessionDirectory
_sessionIdentifier
_sessionSendsLaunchOnDemandEvents
_sessionWithConfiguration:delegate:delegateDispatchQueue:
_sessions
_setActualAuthHeaders:
_setActualConfiguration:
_setActualTaskInfo:
_setQueue:
_setTimeWindowDelay:
_setTimeWindowDuration:
_sharedContainerIdentifier
_shouldCancel
_shouldElevateDiscretionaryPriority
_shouldPreserveBackgroundSessionDisposition
_shouldPullInitialCredentials
_shouldSkipPreferredClientCertificateLookup
_skipInvalidateMessage
_socketStreamProperties
_socketUUID
_sourceApplicationAuditTokenData
_sourceApplicationBundleIdentifier
_sourceApplicationSecondaryIdentifier
_springboardApplication
_stakeholder
_startupMessageFailed
_startupMessageIdentifier
_streamErrorCode
_streamErrorDomain
_supportsAVAssetDownloads
_supportsRedirects
_suspendedDurationSinceLastUpdate
_symptomToken
_task
_taskDescription
_taskGroup
_taskIdentifiersRetainingBTLinkAssertion
_taskIdentifiersRetainingInfraWiFi
_taskIdentifiersToBodyStreams
_taskIdentifiersToInitialBodyInputStreams
_taskIdentifiersToPendingDataBytes
_taskIdentifiersToPendingDataCompletion
_taskIdentifiersToSequenceNumbers
_taskIdentifiersToWaitingReasons
_taskInfo
_taskSequenceNumber
_tasks
_tasksEnqueued
_tasksInitialized
_tasksToIdentifiers
_throughputInterval
_throughputMonitoringStartTime
_throughputTimer
_timeWindowDelay
_timeWindowDuration
_timer
_timingDataOptions
_tlsSessionCachePrefix
_tlsTrustPinningPolicyName
_totalBytesExpectedToSend
_trailers
_transactionQueue
_transitionalDiscretionaryStateTimer
_type
_uniqueIdentifier
_updateState
_updatedStreamingZipModificationDate
_uploadsDirectory
_userInfo
_userInitiatedSession
_uuid
_uuidString
_version
_web_errorWithDomain:code:URL:
_web_errorWithDomain:code:failingURL:
_workQueue
_wrapper
_xpcActivityBudgeted
_xpcConn
_xpcConnection
absoluteString
acquireWithError:
activeTasks
addDelegate:queue:
addEntriesFromDictionary:
addObject:
addObjectsFromArray:
addObserver:
addObserver:forApplication:
addObserver:forContainerID:
addObserver:forExtension:
addObserver:forProviderID:
addOutstandingTaskWithIdentifier:
addPendingCallback:wakeRequirement:
addPendingCallbackToFront:
addTransaction
additionalProperties
adjustDiscretionaryStatusForTaskInfo:
adjustedTCPConnectionPriorityForTaskPriority:
allCredentials
allValues
allocWithZone:
allowReconnect
allowedClassesForUnarchiving
allowsCellularAccess
allowsConstrainedNetworkAccess
allowsExpensiveNetworkAccess
appendFormat:
application:hasAssertionWithName:
application:isHandlingBackgroundSessionWithIdentifier:withSessionUUID:
applicationBackgroundUpdatesEnabled:
applicationBackgroundUpdatesTurnedOff:
applicationBackgroundUpdatesTurnedOn:
applicationEndedExtendedNonDiscretionaryBackgroundGracePeriod:
applicationEndedNonDiscretionaryBackgroundGracePeriod:
applicationEndedTransitionalDiscretionaryBackgroundPeriod:
applicationEnteredForeground:
applicationHasBackgroundTaskCompletion:
applicationIconDidChange:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidCancel:
applicationInstallsDidChange:
applicationInstallsDidPause:
applicationInstallsDidPrioritize:
applicationInstallsDidResume:
applicationInstallsDidStart:
applicationInstallsDidUpdateIcon:
applicationIsForeground:
applicationIsInstalled:
applicationNoLongerInForeground:
applicationStateDidChange:
applicationWasQuitFromAppSwitcher:
applicationWasSuspended:
applicationWithIdentifier:
applicationsDidChangePersonas:
applicationsDidFailToInstall:
applicationsDidInstall:
applicationsDidUninstall:
applicationsWillInstall:
applicationsWillUninstall:
archiveList
archivePath
archiveState
archiveTaskInfo:
archiveTimerFired
archivedDataWithRootObject:requiringSecureCoding:error:
args
array
arrayWithObjects:
arrayWithObjects:count:
assertionNameForSessionUUID:
assertions
assetArtworkData
assetDownloadSession:didFailWithError:
assetDownloadSession:didFinishDownloadForMediaSelection:
assetDownloadSession:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
assetDownloadSession:didResolveMediaSelection:
assetDownloadSession:didUpdateProgressWithExpectedBytes:bytesDownloaded:
assetDownloadSession:willDownloadVariants:
assetDownloadSessionDidFinishDownload:
assetDownloadSessionWithAsset:mediaSelections:destinationURL:options:
assetDownloadSessionWithURL:destinationURL:options:
assetTitle
attributeWithDomain:name:
attributes
auditToken
authenticationMethod
autorelease
avAggregateAssetDownloadTaskWithDownloadToken:serializedMediaSelections:assetTitle:assetArtworkData:options:childDownloadSessionIdentifier:identifier:uniqueIdentifier:reply:
avAssetDownloadTaskWithDownloadToken:URL:destinationURL:temporaryDestinationURL:assetTitle:assetArtworkData:options:identifier:uniqueIdentifier:taskKind:enableSPIDelegateCallbacks:reply:
avAssetDownloadsDirectory
avAssetForURL:downloadToken:
backgroundAVAssetDownloadTask:didFinishDownloadForMediaSelectionPropertyList:
backgroundAVAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:
backgroundAVAssetDownloadTask:didReceiveDownloadToken:
backgroundAVAssetDownloadTask:didResolveMediaSelectionProperyList:reply:
backgroundAVAssetDownloadTask:willDownloadToURL:
backgroundAVAssetDownloadTask:willDownloadVariants:reply:
backgroundAVAssetDownloadTaskDidUpdateProgress:totalBytesWritten:totalBytesExpectedToWrite:
backgroundDataTask:didReceiveData:withReply:
backgroundDataTaskDidBecomeDownloadTask:
backgroundDownloadTask:didFinishDownloadingToURL:response:reply:
backgroundDownloadTask:didResumeAtOffset:expectedTotalBytes:
backgroundDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
backgroundSessionDidFinishAppWake:reply:
backgroundSessionDidStartAppWake:reply:
backgroundTask:_willSendRequestForEstablishedConnection:reply:
backgroundTask:didCompleteWithError:taskMetrics:info:reply:
backgroundTask:didReceiveChallenge:reply:
backgroundTask:didReceiveResponse:transactionMetrics:
backgroundTask:didReceiveResponse:transactionMetrics:reply:
backgroundTask:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
backgroundTask:getAuthHeadersForResponse:reply:
backgroundTask:hasConnectionWaitingWithError:
backgroundTask:needNewBodyStream:withReply:
backgroundTask:willBeginDelayedRequest:reply:
backgroundTaskDidResume:
backgroundTaskDidSuspend:
backgroundUpdatesDisabledForApplication:
backgroundUpdatesEnabled
backgroundUpdatesEnabledForApplication:
baseMessage
basePriority
basePrioritySetExplicitly
begin
beginActivityWithOptions:reason:
beginTransaction
bgSessionManagerInterface
bodyData
boolValue
boost
bridgeTasks
bumpAndReturnOutgoingSequenceNumberForPriority:
bundle
bundleID
bundleIDForPrimaryIdentifier:secondaryIdentifier:
bundleIDFromPrimaryIdentifier:secondaryIdentifier:
bundleIDsForAppProxies:
bundleIdentifier
bundleManagerPath:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
bytes
bytesPerSecondLimit
bytesSent
cStringUsingEncoding:
calculateThroughput
canBeSuspended
cancel
cancelAVDownloadAndFailTaskWithIdentifier:withError:
cancelAndDeliverError:
cancelByProducingResumeData:
cancelDelayedCompletionWakeTimer
cancelMonitorForTask:
cancelTCPConnectionForTask:withError:
cancelTaskWithIdentifier:
cancelTaskWithIdentifier:byProducingResumeData:
cancelTasksRequiringClientConnectionAndResumeUnstartedTasks
cancelThroughputMonitorForWrapper:
cancel_with_error:
caseInsensitiveCompare:
certificates
challenge
chronoKitExtensionWithIdentifier:
class
cleanupSessionWithCompletionHandler:
cleanupWithCompletionHandler:
clientAcknowledgedTerminalCallbackForTask:
clientBundleID
clientDidDisconnect
clientErrorForError:
clientIsActive
close
closeFile
closeRead
closeWrite
cloudContainerWithIdentifier:
code
compare:
componentsSeparatedByString:
configuration
configurationWithClientConfiguration:discretionary:
configureAdditionalPropertiesOnTask:taskInfo:
configureTask:withTaskInfo:
conformsToProtocol:
connected
connection:canUseSharedContainerIdentifier:
connectionProxyDictionary
containerDidEnterBackground:
containerDidEnterForeground:
containerIDForPrimaryIdentifier:secondaryIdentifier:
containerIDFromPrimaryIdentifier:secondaryIdentifier:
containerURL
containingBundleRecord
continueLoad
copy
copyAndSanitizeClientConfiguration:
copyItemAtURL:toURL:error:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countOfBytesClientExpectsToReceive
countOfBytesExpectedToReceive
countOfBytesExpectedToSend
countOfBytesExpectedToWrite
countOfBytesReceived
countOfBytesSent
countOfBytesWritten
createDaemonDirectory
createDirectoryAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
createIdentityFromEndpoint:error:
createNewTaskFromInfo:
createPersonaContextForBackgroundProcessingWithPersonaUniqueString:
createResumeInformation:
createSessionWithConfiguration:clientProxy:cachesDirectory:options:reply:
creationTime
credStorage_allCredentialsWithReply:
credStorage_credentialsForProtectionSpace:reply:
credStorage_defaultCredentialForProtectionSpace:reply:
credStorage_getInitialCredentialDictionariesWithReply:
credStorage_setCredential:forProtectionSpace:
credStorage_setDefaultCredential:forProtectionSpace:
credential
credentialForTrust:
credentialWithIdentity:certificates:persistence:
credentialWithUser:password:persistence:
credentialsForProtectionSpace:
currentConnection
currentDiscretionaryStatus:withOptionalTaskInfo:
currentIntervalDuration
currentIntervalEndDelta
currentIntervalThroughputThreshold
currentPersona
currentRequest
currentRequestDelay
currentRunLoop
currentState
currentThroughputThreshold
data
dataContainerURL
dataTaskWithRequest:
dataTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
dataTaskWithRequest:originalRequest:pipeHandle:identifier:uniqueIdentifier:reply:
dataWithContentsOfFile:
dataWithPropertyList:format:options:error:
databaseWasRebuilt
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCredentialForProtectionSpace:
defaultDownloadDirectoryContainer
defaultDownloadDirectoryForBundleID:
defaultManager
defaultPairedDevice
defaultSessionConfiguration
defaultTaskGroup
defaultWindowDurationForResourceTimeout:
defaultWorkspace
delegate
delegateImplementsDidReceiveResponse
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsWillSendRequest
delegateQueue
description
descriptionForRequest:
descriptionForTCPConnectionWaitingReason:
descriptionForTaskWithIdentifier:
descriptor
destinationURL
destinationURLToUseForTask:
deviceIDForNRDevice:
deviceManagementPolicyDidChange:
devicesConnected
devicesDidUnpair:
dictionary
dictionaryRepresentation
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
disableTransitionalDiscretionaryPeriodTimer
disablesRetry
disavowSession
discretionaryOverride
disposition
dispositionAsString:
doesAVAssetDownloadSessionSupportMultipleDownloads
doesConsumeExtractedData
domain
doubleValue
downloadAsset:
downloadConfig
downloadDirectoryDataPath
downloadDirectoryToUse:
downloadFile
downloadTaskWithRequest:originalRequest:downloadFilePath:identifier:uniqueIdentifier:reply:
downloadTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
downloadTaskWithResumeData:
downloadTaskWithResumeData:identifier:uniqueIdentifier:reply:
downloadToken
drainCallback:
drainCallbacksForTaskIdentifier:
dropBoost
earlierDate:
earliestBeginDate
embeddedApplicationIdentifier
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedData
endActivity:
endBridgingUMTask:
endTransaction
endUMTask:
endowmentNamespaces
enqueueTaskWithIdentifier:
ensureAVAssetDownloadSessionWrapperForTaskIdentifier:
ensureSessionDownloadDirectoryExists
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
error
error:code:
errorOccurredDuringAuthCallbackDelivery:completionHandler:
errorOccurredDuringFinishedCallbackDelivery:
errorWithDomain:code:userInfo:
establishedConnection
exitEvent
expectedProgressTarget
expectingResumeCallback
explanation
extension:isHandlingBackgroundSessionWithIdentifier:withSessionUUID:
extensionPointRecord
extensionWasRemovedFromScreen:
extractorDelegate
fetchStreamingZipModificationDate:
fileDescriptor
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileProviderWithIdentifer:applicationIdentifier:
fileSystemRepresentation
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileURLWithPath:
fileURLWithPath:isDirectory:
fileURLWithPath:isDirectory:relativeToURL:
fillInByteCountsForTaskInfo:withTaskID:
fillInPropertiesForTaskInfo:withTaskID:
finalizeTaskCompletionWithSuppressedWake:
finishStreamWithCompletionBlock:
finishTasksAndInvalidate
firstObject
getActivePairedDevice
getActiveSessionIdentifiersWithReply:
getBackgroundSettingsAppList
getBoundStreamsWithBufferSize:inputStream:outputStream:
getBytes:length:
getClientProxy
getComponentsForFullIdentifier:bundleIdentifier:sessionIdentifier:
getResourceValue:forKey:error:
getSessionWithIdentifier:
getSessionWithIdentifier:forBundleID:
getTLSSessionCachePrefix
getTaskInformation
getTasksForReconnection
getUUIDBytes:
groupContainerURLs
handleBackgroundSettingsChange
handleBetterNetworkEvent
handleCancelTaskMessage:forTaskIdentifier:
handleCompletionOfTask:identifier:taskInfo:isRecoverable:suppressWake:
handleDataTaskWithRequestMessage:forTaskIdentifier:withReply:
handleDynamicStoreCallback:changedKeys:
handleForPredicate:error:
handleInvalidateMessage:
handleNewConnection:
handleOpenSocketMessage:withReply:
handleResumeTaskMessage:forTaskIdentifier:withReply:
handleSetDescriptionMessage:forTaskIdentifier:
handleSetPriorityMessage:forTaskIdentifier:
handleStateUpdate:forProcess:
handleSuspendTaskMessage:forTaskIdentifier:
handleUploadBodyDataMessage:forTaskIdentifier:withReply:
handleWillBeginDelayedRequestForTaskWithIdentifier:completionHandler:
hasAdditionalProperties
hasArchiveList
hasBackgroundTaskCompletion
hasBeenCalled
hasBodyData
hasBodyStream
hasBytesSent
hasChallenge
hasConfiguration
hasConnectedClient
hasCredential
hasCurrentRequest
hasDelegateImplementsDidReceiveResponse
hasDelegateImplementsSessionAuthChallenge
hasDelegateImplementsTaskAuthChallenge
hasDelegateImplementsWillPerformRedirection
hasDelegateImplementsWillSendRequest
hasDisposition
hasDomain
hasEntitlementToSpecifyDownloadDestinationURL
hasError
hasForegroundBackgroundStates
hasHasBodyStream
hasHeaderData
hasIdsPriority
hasLaunchUUID
hasOriginalRequest
hasPrefix:
hasPriority
hasReason
hasRequest
hasResponse
hasSequenceNumber
hasSession
hasSessionIdentifier
hasSocketUUID
hasStarted
hasStreamErrorCode
hasStreamErrorDomain
hasSuffix:
hasSupportsRedirects
hasTaskDescription
hasTaskIdentifier
hasTaskInfo
hasTaskSequenceNumber
hasTotalBytesExpectedToSend
hasTotalBytesSent
hasUserInfo
hasUuidString
hasVersion
hash
headerData
helperPlaceholdersInstalled:
helperPlaceholdersUninstalled:
host
identifier
identifierIsForSpringBoardApplication:
identity
idsPriority
inSyncBubble
incomingResponseIdentifier
indexOfObject:
init
initForReadingFromData:error:
initRequiringSecureCoding:
initSocketWithDevice:options:completionHandler:queue:
initWithAVAggregateAssetDownloadChildDownloadSessionIdentifier:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:
initWithAVAggregateDownloadTaskNoChildTaskKindWithURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:enableSPIDelegateCallbacks:
initWithAVAssetDownloadURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:downloadConfig:
initWithAsset:propertyList:
initWithBackgroundTaskInfo:taskGroup:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCallbackType:taskIdentifier:args:
initWithCoder:
initWithConfiguration:bundleID:isSpringBoardApp:downloadDirectory:options:clientProxy:delegate:workQueue:archiveQueue:
initWithConfiguration:uuidString:options:delegate:
initWithData:
initWithDataTask:uniqueIdentifier:bundleID:sessionID:
initWithDelegate:
initWithDelegate:bundleID:isSpringBoardApp:
initWithDelegate:forBundleID:
initWithDelegate:queue:
initWithDownloadTask:uniqueIdentifier:bundleID:sessionID:
initWithExplanation:target:attributes:
initWithHost:port:protocol:realm:authenticationMethod:
initWithIdentifier:
initWithIdentifier:applicationIdentifier:
initWithKeyOptions:valueOptions:capacity:
initWithMachServiceName:
initWithMessage:type:
initWithProtobufData:type:isResponse:
initWithService:
initWithTask:
initWithTask:taskInfo:clientBundleIdentifier:secondaryIdentifier:monitoredApplication:priority:options:queue:
initWithType:
initWithURL:destinationURL:options:delegate:queue:
initWithURLAsset:destinationURL:options:delegate:queue:
initWithUploadTask:uniqueIdentifier:bundleID:sessionID:
initWithWrapper:monitoredApplication:priority:options:queue:
initialize
initializeHTTPAuthenticatorWithAppleIDContext:statusCodes:
initializedWithAVAsset
inputStreamWithData:
inputStreamWithFileHandle:taskIdentifier:
insertObject:atIndex:
installedAssetVersion
intValue
integerValue
invalidate
invalidateAndCancel
invalidateWithReply:
invokeSelectorForAllObservers:
isAutomaticAppUpdatesAllowed
isCatalogFetchedWithinThePastFewDays:
isConnected
isContainerIDForeground:
isDefaultPairedDevice
isEqual:
isEqualToNumber:
isEqualToString:
isFileURL
isForeground
isHandlingBackgroundURLSessionWithIdentifier:withSessionUUID:
isInSyncBubble
isInTransitionalDiscretionaryPeriod
isKindOfClass:
isMemberOfClass:
isMultiUser
isNearby
isPrivileged
isResponse
isSpringBoardApp
isValidAssertion:withName:
itemShouldBePurged:
keysSortedByValueUsingComparator:
lastObject
lastPathComponent
launchProcessWithIdentifier:sessionIdentifier:
launchUUID
length
listener:shouldAcceptNewConnection:
longLongValue
lowThroughputTimerRetryCount
makeTempUploadFile:withExtensionData:
managerBecameEmpty:bundleID:withCompletionHandler:
markItemAsPurged:
mayBeDemotedToDiscretionary
maySupportWakesLater
mergeFrom:
messageLoggableDescriptionForTaskWithIdentifier:
messagePriorityForTaskWithIdentifier:isReply:
messageSubclassForMessageType:isReply:
monitorTask
monitorTaskSet
monitorWithConfiguration:
monitoredAppBundleID
monitoredBundleIDsUpdated
moveFileAtomically:toLocation:
moveItemAtURL:toURL:error:
mutableCopy
networkServiceType
networkUsageChanged:
newAVAssetDownloadSessionWrapperForTaskInfo:
nextObject
nsurlsessiondLaunchdPath
nsurlsessiondPath
null
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
obliterate
obliterationCompletion
observeLaunchProhibitedApps
okayToSendPendingCallbacksForIdentifier:reply:
open
openApplication:withOptions:completion:
openFileAtPath:mode:withReply:
optionsWithDictionary:
originalNetworkContentURL
outgoingResponseIdentifier
password
path
pathToDownloadTaskFile
pause
performAllCallbacks
performBlockAfterNetworkChangedEvent:delay:
performBlockAfterNetworkChangedEvent:numberOfPreviousRetries:
performCallback:
performCommonSetupForTask:taskInfo:identifier:discretionaryStatus:
performForwardingFromStreamTask:toTCPConnection:
performForwardingFromTCPConnection:toStreamTask:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWake:uponNotification:sessionIdentifier:
persistence
persistentDomainForName:
personaUniqueString
pingForXPCObjectValidityWithReply:
plugInKitPlugins
pluginIdentifier
pluginsDidInstall:
pluginsDidUninstall:
pluginsWillUninstall:
populateWithInitialCredentials
port
predicateMatchingBundleIdentifier:
predicateMatchingBundleIdentifiers:
prepareForExtraction:
prepareForExtractionToPath:completionBlock:
previousFailureCount
previousState
priority
privileged
processIdentifier
processInfo
progress
progressTimerRunning
propertyForKey:inRequest:
propertyList
propertyListWithData:options:format:error:
proposedCredential
protocol
providerDidEnterBackground:
providerDidEnterForeground:
providerIDForApplication:sharedContainerIdentifier:
providerIDForBundle:sharedContainerIdentifier:
proxyServerBecameInvalid:
purge:
queryAndFindBestAsset:
queryMetaDataSync
queue
readDataOfMinLength:maxLength:timeout:completionHandler:
readFrom:
readyToSwitchToUser:
realm
reason
receivedData
registerUserSyncStakeholder:withMachServiceName:
releaseAssertionForBundleID:sessionID:
releaseAssertionForSession:reply:
releaseBTLinkAssertion
releaseBTLinkAssertionIfNecessary:
releaseInfraWiFi
releaseInfraWiFiForTaskIfNecessary:
releasePowerAssertion
releaseTransaction
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeCharactersInString:
removeCredential:forProtectionSpace:
removeDownloadFileForTaskInfo:
removeItemAtPath:
removeItemAtPath:error:
removeItemAtURL:
removeItemAtURL:error:
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:forApplication:
removeObserver:forContainerID:
removeObserver:forExtension:
removeObserver:forProviderID:
removeOutstandingTaskWithIdentifier:
removePendingLaunchForBundleID:sessionID:
removePendingLaunchTasksForBundleID:sessionID:cancel:
removePendingWakeForClient:sessionIdentifier:
removeStreamingZipModificationDate:
removeUploadFileForTaskInfo:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
requestDelayQueue
requestWithAdjustedWindowForTaskInfo:
requeueTask:
requeueTask:skipResume:
resendPendingMessage:
reset
resetStandardUserDefaults
resetStorageWithReply:
resourceTimeoutError
respondedToWillBeginDelayedRequestCallback
respondsToSelector:
response
restoreCompletedTask:
restoreInProgressTask:
restoreOptionsFromArchivePath:
restoreState
restoreState:
restoreTask:isOutstanding:
restoreTasks:
restoreTasksFromArchivedInfo:
restoredTaskActive:
restoredTaskEnqueued:
resume
resumeTaskWithIdentifier:withProperties:
resumedAndWaitingForEarliestBeginDate
retain
retainBTLinkAssertion
retainBTLinkAssertionWithIdentifier:
retainCount
retainInfraWiFiForTaskWithIdentifier:
retryCount
retryError
retryTask:originalError:
retryTask:originalError:transactionMetrics:
returnTypes:
sanitizeTaskProperties:
scalablePipeManager:didRegisterEndpoint:error:
scalablePipeManager:didUnregisterEndpoint:
scalablePipeManager:pipeDidConnect:
scalablePipeManager:pipeDidDisconnect:error:
scalablePipeManagerDidUpdateState:
scheme
secondaryID
self
sendPendingCallbacksForIdentifier:reply:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendProtobufMessage:ofType:withReply:
sequenceNumber
serverTrust
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceMinCompatibilityVersion
sessionCompleted:withCompletionHandler:
sessionForDiscretionaryStatus:
sessionHasOutstandingTasks
sessionID
sessionIdentifier
sessionPath:forBundleID:
sessionSendsLaunchEvents
setAVAssetDownloadToken:
setAVAssetURL:
setAVURLAsset:
setActiveTasksLock:
setAdditionalProperties:
setAllowsCellularAccess:
setAllowsConstrainedNetworkAccess:
setAllowsExpensiveNetworkAccess:
setArgs:
setAssetArtworkData:
setAssetTitle:
setAttributes:ofItemAtPath:error:
setBasePriority:
setBasePrioritySetExplicitly:
setBodyData:
setBundleID:
setBundleIdentifier:
setByAddingObject:
setBytesPerSecondLimit:
setBytesPerSecondLimit:forTaskWithIdentifier:
setBytesSent:
setChallenge:
setClass:forClassName:
setCode:
setConfiguration:
setConnected:
setConnectionProxyDictionary:
setContinueLoad:
setCountOfBytesClientExpectsToReceive:
setCountOfBytesClientExpectsToSend:
setCountOfBytesExpectedToReceive:
setCountOfBytesExpectedToSend:
setCountOfBytesReceived:
setCountOfBytesSent:
setCountOfBytesWritten:
setCreationTime:
setCredential:
setCredential:forProtectionSpace:
setCurrentRequest:
setCurrentRequestDelay:
setDaemonWorkState:
setDefaultCredential:forProtectionSpace:
setDelegate:
setDelegate:queue:
setDelegateImplementsDidReceiveResponse:
setDelegateImplementsSessionAuthChallenge:
setDelegateImplementsTaskAuthChallenge:
setDelegateImplementsWillPerformRedirection:
setDelegateImplementsWillSendRequest:
setDescription:forTask:
setDestinationURL:
setDisablesRetry:
setDiscretionary:
setDiscretionaryOverride:
setDiscretionaryOverride:forTaskWithIdentifier:
setDomain:
setDownloadFileURL:
setDownloadSession:
setEarliestBeginDate:
setEndowmentNamespaces:
setError:
setEstablishedConnection:
setEvents:
setExpectedProgressTarget:
setExpectedProgressTarget:forTaskWithIdentifier:
setExpectingResumeCallback:
setExportedInterface:
setExportedObject:
setExtractorDelegate:
setFileURL:
setHTTPAdditionalHeaders:
setHTTPBodyStream:
setHTTPCookieStorage:
setHTTPMaximumConnectionsPerHost:
setHasBeenCalled:
setHasBodyStream:
setHasBytesSent:
setHasCode:
setHasContinueLoad:
setHasDelegateImplementsDidReceiveResponse:
setHasDelegateImplementsSessionAuthChallenge:
setHasDelegateImplementsTaskAuthChallenge:
setHasDelegateImplementsWillPerformRedirection:
setHasDelegateImplementsWillSendRequest:
setHasDisposition:
setHasHasBodyStream:
setHasIdsPriority:
setHasPort:
setHasReason:
setHasSequenceNumber:
setHasShouldCancel:
setHasStarted:
setHasStreamErrorCode:
setHasStreamErrorDomain:
setHasSupportsRedirects:
setHasTaskIdentifier:
setHasTaskSequenceNumber:
setHasTotalBytesSent:
setHasVersion:
setHeaderData:
setHost:
setIdentifier:
setInSyncBubble:
setInitializedWithAVAsset:
setInstalledAssetVersion:
setInterruptionHandler:
setInvalidateReply:
setInvalidationHandler:
setIsInTransitionalDiscretionaryPeriod:
setIsSpringBoardApp:
setLaunchUUID:
setLinkRequirementsForPeer:packetsPerSecond:inputBytesPerSecond:outputBytesPerSecond:
setLoadingPoolPriority:forTaskWithIdentifier:
setLoadingPriority:
setLowThroughputTimerRetryCount:
setMessage:
setMonitorTaskLock:
setMonitorTaskSet:
setNetworkServiceType:
setObject:forKey:
setObject:forKeyedSubscript:
setObliterationCompletion:
setOptions:
setOriginalRequest:
setPath:
setPersonaUniqueString:
setPort:
setPredicates:
setPreferInfraWiFi:
setPriority:
setPriority:forTCPConnectionWithTaskIdentifier:
setPriority:forTaskWithIdentifier:
setPrivileged:
setProgressTimerRunning:
setProperty:forKey:
setPropertyOnStreamWithIdentifier:propDict:propKey:withReply:
setQueue:
setReason:
setReceivedData:
setRequest:
setRespondedToWillBeginDelayedRequestCallback:
setResponse:
setResumedAndWaitingForEarliestBeginDate:
setRetryCount:
setRetryError:
setSequenceNumber:
setSession:
setSessionIdentifier:
setSharedContainerIdentifier:
setShouldCancel:
setShouldCancelOnDisconnect:
setShouldUseExtendedBackgroundIdleMode:
setSkip_download_unlink:
setSocketUUID:
setStartTime:
setStartedUserInitiated:
setState:
setStateDescriptor:
setStreamErrorCode:
setStreamErrorDomain:
setSupportsRedirects:
setSuspendCount:
setTLSMaximumSupportedProtocolVersion:forTaskWithIdentifier:
setTLSMinimumSupportedProtocolVersion:forTaskWithIdentifier:
setTLSSessionCachePrefix:
setTask:
setTaskDescription:
setTaskIdentifier:
setTaskInfo:
setTaskKind:
setTaskSequenceNumber:
setTasksEnqueued:
setTasksInitialized:
setTemporaryDestinationURL:
setThroughputTimerForCurrentInterval
setTimeoutIntervalForRequest:
setTimeoutIntervalForResource:
setTotalBytesExpectedToSend:
setTotalBytesSent:
setType:
setURLCache:
setURLCredentialStorage:
setUpdateHandler:
setUserInfo:
setUuidString:
setValues:
setVersion:
setWaitsForConnectivity:
setWithObject:
setXPCConnection:
setXpcConn:
set_DuetActivityProperties:
set_IDSMessageTimeout:
set_TCPAdaptiveReadTimeout:
set_TCPAdaptiveWriteTimeout:
set_TLSMaximumSupportedProtocolVersion:
set_TLSMinimumSupportedProtocolVersion:
set_allowsHSTSWithUntrustedRootCertificate:
set_allowsPowerNapScheduling:
set_allowsReachabilityCheck:
set_allowsTLSECH:
set_allowsTLSFallback:
set_allowsTLSFalseStart:
set_allowsVirtualInterfaces:
set_alwaysPerformDefaultTrustEvaluation:
set_authenticatorConfiguredViaTaskProperty:
set_authenticatorStatusCodes:
set_backgroundPublishingURL:
set_backgroundTrailers:
set_bytesPerSecondLimit:
set_clientIsNotExplicitlyDiscretionary:
set_connectionCachePurgeTimeout:
set_connectionPoolName:
set_directoryForDownloadedFiles:
set_disallowCellular:
set_discretionaryOverride:
set_doesSZExtractorConsumeExtractedData:
set_duetPreClearedMode:
set_duetPreauthorized:
set_expectedProgressTarget:
set_extractor:
set_extractorPreparedForExtraction:
set_forcedNetworkServiceType:
set_hasSZExtractor:
set_legacySocketStreamProperties:
set_loadingPriority:
set_loggingPrivacyLevel:
set_longLivedConnectionCachePurgeTimeout:
set_maximumWatchCellularTransferSize:
set_metrics:
set_multipathAlternatePort:
set_nw_activity:
set_onBehalfOfPairedDevice:
set_pathToDownloadTaskFile:
set_pidForHAR:
set_prefersInfraWiFi:
set_preventsIdleSleepOnceConnected:
set_priority:
set_reportsDataStalls:
set_requiresClientToOpenFiles:
set_requiresPowerPluggedIn:
set_requiresSustainedDataDelivery:
set_respectsAllowsCellularAccessForDiscretionaryTasks:
set_shouldSkipPreferredClientCertificateLookup:
set_socketStreamProperties:
set_sourceApplicationAuditTokenData:
set_sourceApplicationBundleIdentifier:
set_sourceApplicationSecondaryIdentifier:
set_suspensionThreshhold:
set_tcpConnectionPoolName:
set_timingDataOptions:
set_tlsSessionCachePrefix:
set_tlsTrustPinningPolicyName:
set_uniqueIdentifier:
set_updatedStreamingZipModificationDate:
set_watchExtensionBundleIdentifier:
setupArchiveTimer
setupDASPropertiesOnTask:taskInfo:discretionaryStatus:
setupDownloadDirectory
setupNewClassMappingsForUnarchiver
setupThroughputMonitorForWrapper:taskInfo:identifier:
setupTransitionalDiscretionaryPeriodTimer
sharedConnection
sharedContainerIdentifier
sharedCredentialStorage
sharedDaemon
sharedInstance
sharedLauncher
sharedManager
sharedMonitor
sharedService
sharedSpringBoard
sharedStakeholder
sharedUserEventAgentConnection
shouldCancel
shouldCancelOnDisconnect
shouldElevateDiscretionaryPriority
shouldRetainBTLinkAssertion
shouldRetainInfraWiFi
socketUUID
sortedArrayUsingComparator:
sourceApplicationBundleIdentifier
springBoardApplicationExistsWithIdentifier:
springboardApplicationWithBundleIdentifier:
stakeholder
standardUserDefaults
start
startAVAssetDownloadSessionWithTaskIdentifier:
startBridgingUMTask:
startCatalogDownload:then:
startDownload:
startLoadingMetadata
startMonitoringBundleID:
startMonitoringDynamicStore
startResourceTimer
startThroughputMonitoring
startThroughputMonitoringIfAppropriate
startTransitionalDiscretionaryPeriodTimer
startUMTask:taskInfo:
startedUserInitiated
state
status
statusCode
stop
stopAVAssetDownloadSessionWithTaskIdentifier:
stopMonitoringBundleID:
stopMonitoringDynamicStore
stopThroughputMonitoring
storagePartitionIdentifier
streamError
streamErrorDomain
streamStatus
streamTaskWithHostName:port:
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringWithCapacity:
stringWithFormat:
subarrayWithRange:
substringWithRange:
superclass
supplyBytes:withCompletionBlock:
supportsRedirects
supportsSecureCoding
supportsWakes
suspendCount
suspendStreamWithCompletionBlock:
suspendTaskWithIdentifier:
synchronousRemoteObjectProxyWithErrorHandler:
takeAssertionForBundleID:sessionID:sessionUUID:pid:
takePowerAssertion
targetWithPid:
task
taskIdentifier
taskInfo
taskKind
taskMessageForIdentifier:
taskMetrics
taskSequenceNumber
taskShouldResume:
taskShouldSuspend:
taskState
taskTransferredData:countOfBytesReceived:
taskWillResume
taskWithIdentifier:didCompleteWithError:
taskWithName:reason:
taskWithName:reason:forBundleID:
tasksArchivePath
tasksEnqueued
tasksHaveBeenEnqueued
tasksInitialized
temporaryDestinationURL
terminateExtractorWithError:completion:
terminateStreamWithError:completionBlock:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeoutIntervalForRequest
timeoutIntervalForResource
totalBytesExpectedToSend
totalBytesSent
trustPassesExtendedValidation:
type
unarchivedObjectOfClasses:fromData:error:
unionSet:
uniqueIdentifier
unsignedIntegerValue
unsignedLongLongValue
updateConfiguration:
updateCurrentRequest:
updatePriorityForTaskID:
updateStreamingZipModificationDate:
updateTaskInfoBasedOnCurrentDiscretionaryStatus:
uploadContent
uploadTaskWithRequest:originalRequest:fromFile:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:sandboxExtensionData:identifier:uniqueIdentifier:potentialCredentials:reply:
uploadTaskWithStreamedRequest:
user
userInfo
userPersonaUniqueString
usesContainerManagerForAVAsset
uuid
uuidString
valueForEntitlement:
valueWithBytes:objCType:
valueWithCMTimeRange:
verifyAndUpdateIncomingSequenceNumber:forPriority:
waitUntilDeviceIsUnlocked
wakeForSessionIdentifier:withSessionUUID:wakeRequirement:
wakeUpApp:forSession:withSessionUUID:
wakeUpClient:
wakeUpExtension:forSession:withSessionUUID:wakeRequirement:
willRetryBackgroundDataTask:withError:transactionMetrics:
willSwitchToUser:
willSwitchUser
withWorkQueue:
wrapperTransferredData:
wrapperWillSuspend
write:maxLength:
writeData:timeout:completionHandler:
writeTo:
writeToFile:atomically:
zone
PDURLSessionProxyOpenSocket
NSCopying
NDPowerlogReporter
PDURLSessionProxyDidReceiveChallengeReply
PDURLSessionProxyCreateSession
PDURLSessionProxySetTaskPriority
PDURLSessionProxyMessageInfo
PDURLSessionProxyService
IDSServiceDelegate
NSObject
PDURLSessionProxyDataTaskWithRequestReply
PDURLSessionProxyServerService
PDURLSessionProxyServerDelegate
PDBluetoothCompanionLinkAssertion
CBScalablePipeManagerDelegate
PDURLSessionProxyDataTaskWithRequest
PDURLSessionProxyGetAuthHeaders
NDAVAssetDownloadSessionWrapper
AVAssetDownloadSessionDelegate
NDSessionManager
NDBackgroundSessionManagerProtocol
NDBackgroundSessionDelegate
NDBackgroundSession
NDBackgroundSessionProtocol
NDCallbackQueueDelegate
NSURLSessionDataDelegatePrivate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegatePrivate
NSURLSessionDownloadDelegate_Private
NSURLSessionDelegate_Internal
NDCredentialStorageDelegate
NDApplicationObserver
PDURLSessionProxyStartedUp
PDURLSessionProxyGetAuthHeadersReply
PDURLSessionProxyDidReceiveData
PDURLSessionProxyDidReceiveResponse
PDURLSessionProxyResumeTask
PDURLSessionProxySetTaskDescription
NDStatusMonitor
NDUserEventAgentConnection
NSSecureCoding
NSCoding
PDURLSessionProxyCommon
NSURLSessionProxyAdditions
PDURLSessionProxySocketDisconnected
NDFileUtilities
PDURLSessionProxyOpenSocketReply
PDURLSessionProxyResponse
TLDMobileAssetManager
NDApplication
NDSpringBoardApplication
NDSpringBoardAppObserver
NDChronoKitExtension
NDChronoKitExtensionObserver
NDCloudContainer
BRContainerObserver
NDFPProvider
FPProviderObserver
PDURLSessionProxyDidReceiveResponseReply
PDURLSessionProxyWillPerformRedirectionReply
PDURLSessionProxyRequest
PDURLSessionProxyCredential
PDURLSessionProxyTaskWaiting
NDUserSyncStakeholder
UMUserSyncStakeholder
UMUserSwitchStakeholder
PDURLSessionProxyDidReceiveDataReply
PDURLSessionProxySuspendTask
PDURLSessionProxyInvalidateSession
NDCredentialStorage
PDURLSessionProxyWillSendRequest
PDURLSessionProxyOpenBodyStream
PDURLSessionProxyServer
NSURLSessionStreamDelegate_Internal
NSURLSessionStreamDelegate
PDURLSessionProxyDidSendBodyData
PDURLSessionProxyCancelTask
PDURLSessionProxyTaskMessage
NDTaskMonitor
PDURLSessionProxyDidReceiveChallenge
PDURLSessionProxyError
Daemon
LSApplicationWorkspaceObserverProtocol
NSXPCListenerDelegate
NDSessionManagerDelegate
PDURLSessionProxyUploadBodyData
NDSpringBoard
NDChronoKitLauncher
NDAVThroughputMonitor
PDURLSessionProxySessionMessage
PDURLSessionProxyTaskWillBeRetried
PDURLSessionProxyConnectedToServer
PDURLSessionProxyAuthChallenge
STExtractor
SZExtractor
PendingCallback
NDCallbackQueue
PDURLSessionProxySessionBecameInvalid
NDAVAdditions
NDAVBackgroundSession
NDAVAssetDownloadSessionWrapperDelegate
PDURLSessionProxyTaskCompleted
PDURLSessionProxyWillPerformRedirection
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8I16
v20@0:8B16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
I16@0:8
v16@0:8
@"NSString"
@"PDURLSessionProxySessionMessage"
{?="port"b1}
@24@0:8@16
v32@0:8q16q24
@"NSURLSessionTask"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@"PDURLSessionProxyCredential"
@"PDURLSessionProxyTaskMessage"
{?="disposition"b1}
@"NSData"
{?="delegateImplementsDidReceiveResponse"b1"delegateImplementsSessionAuthChallenge"b1"delegateImplementsTaskAuthChallenge"b1"delegateImplementsWillPerformRedirection"b1"delegateImplementsWillSendRequest"b1"supportsRedirects"b1}
{?="priority"b1}
@28@0:8@16S24
S16@0:8
v20@0:8S16
@"PBCodable"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v24@0:8@?16
v28@0:8@16B24
q32@0:8@16S24B28
q24@0:8@16
Q24@0:8q16
B32@0:8Q16q24
v64@0:8@16S24@28@36B44q48@?56
v36@0:8@16S24@?28
v28@0:8@16S24
v44@0:8@16@24S32@36
v36@0:8@16B24@28
@"IDSService"
@"NSMutableDictionary"
@"NSMutableSet"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"PDURLSessionProxyServer"16
@"NSObject<OS_dispatch_source>"
@"PDBluetoothCompanionLinkAssertion"
v24@0:8@"CBScalablePipeManager"16
v40@0:8@"CBScalablePipeManager"16@"NSString"24@"NSError"32
v32@0:8@"CBScalablePipeManager"16@"NSString"24
v32@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24
v40@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24@"NSError"32
@"NSUUID"
@"CBScalablePipeManager"
v24@0:8Q16
@"PDURLSessionProxyRequest"
{?="taskSequenceNumber"b1}
@"PDURLSessionProxyResponse"
v136@0:8@16{?={?=qiIq}{?=qiIq}}24@72{?={?=qiIq}{?=qiIq}}80@128
v40@0:8@16Q24Q32
v24@0:8@"AVAssetDownloadSession"16
v32@0:8@"AVAssetDownloadSession"16@"NSError"24
v32@0:8@"AVAssetDownloadSession"16@"AVMediaSelection"24
v136@0:8@"AVAssetDownloadSession"16{?={?=qiIq}{?=qiIq}}24@"NSArray"72{?={?=qiIq}{?=qiIq}}80@"AVMediaSelection"128
v40@0:8@"AVAssetDownloadSession"16Q24Q32
v32@0:8@"AVAssetDownloadSession"16@"NSArray"24
@56@0:8@16@24@32@40@48
@"AVURLAsset"
@"AVAssetDownloadSession"
@"<NDAVAssetDownloadSessionWrapperDelegate>"
@"NSURL"
@"NSDictionary"
v56@0:8@16@24@32@40@?48
v32@0:8@16@?24
v56@0:8@"NSURLSessionConfiguration"16@"<NDBackgroundSessionClient>"24@"NSURL"32@"NSDictionary"40@?<v@?@"<NDBackgroundSessionProtocol>"@"NSDictionary"B>48
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?>16
v32@0:8@"NDBackgroundSession"16@?<v@?>24
@36@0:8@16@24B32
@24@0:8^B16
B32@0:8@16@24
@?16@0:8
@"NSXPCConnection"
@"<NDSessionManagerDelegate>"
v64@0:8@16@24@32Q40@48@?56
v80@0:8@16@24@32@40Q48@56@64@?72
v56@0:8@16@24Q32@40@?48
v48@0:8@16Q24@32@?40
v32@0:8Q16@?24
v32@0:8Q16@24
v32@0:8@16Q24
v32@0:8q16Q24
v32@0:8d16Q24
v32@0:8Q16Q24
v28@0:8S16Q20
v48@0:8Q16@24@32@?40
v108@0:8Q16@24@32@40@48@56@64Q72@80Q88B96@?100
v88@0:8Q16@24@32@40@48@56Q64@72@?80
v64@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSString"32Q40@"NSUUID"48@?<v@?B>56
v80@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSURL"32@"NSData"40Q48@"NSUUID"56@"NSDictionary"64@?<v@?B>72
v56@0:8@"NSURLRequest"16@"NSURLRequest"24Q32@"NSUUID"40@?<v@?B>48
v48@0:8@"NSData"16Q24@"NSUUID"32@?<v@?B>40
v32@0:8Q16@?<v@?@"NSData">24
v32@0:8Q16@"NSDictionary"24
v32@0:8@"NSString"16Q24
v24@0:8@"NSString"16
v48@0:8Q16@"NSDictionary"24@"NSString"32@?<v@?B>40
v108@0:8Q16@"NSURL"24@"NSURL"32@"NSURL"40@"NSString"48@"NSData"56@"NSDictionary"64Q72@"NSUUID"80Q88B96@?<v@?B>100
v88@0:8Q16@"NSArray"24@"NSString"32@"NSData"40@"NSDictionary"48@"NSString"56Q64@"NSUUID"72@?<v@?B>80
v24@0:8q16
@24@0:8Q16
v24@0:8@"NSError"16
v32@0:8@"NSError"16@?<v@?q@"NSURLCredential">24
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"16@0:8
@"NSString"24@0:8Q16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32@?<v@?>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v40@0:8@16@24q32
v36@0:8@16@24B32
v36@0:8@16@24i32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24i32
@32@0:8@16@24
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURLResponse"32
@"NSURL"32@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24
v44@0:8@16@24i32@?36
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary"@"NSURLRequest">40
v44@0:8@"NSURLSession"16@"NSString"24i32@?<v@?i>36
v24@0:8@"NDApplication"16
d24@0:8d16
@28@0:8@16B24
@84@0:8@16@24B32@36@44@52@60@68@76
@20@0:8B16
@24@0:8q16
@32@0:8@16^B24
B40@0:8@16@24@32
v48@0:8@16Q24@32B40B44
B20@0:8B16
q20@0:8B16
v28@0:8Q16B24
@32@0:8@16Q24
v44@0:8@16@24Q32B40
B24@0:8^{__SecTrust=}16
@"NSURLSession"
@"NDCredentialStorage"
@"NDApplication"
@"NSMutableArray"
@"NDCallbackQueue"
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"
@"<NDBackgroundSessionDelegate>"
{?="version"b1}
{?="continueLoad"b1}
v32@0:8@?16Q24
v32@0:8@?16q24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
^{__CFRunLoopSource=}
v40@0:8@?16@24@32
@"NSObject<OS_xpc_object>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v40@0:8@16^@24^@32
#24@0:8S16B20
@32@0:8#16@24
q16@0:8
{?="streamErrorCode"b1"streamErrorDomain"b1}
B40@0:8@16@24q32
v24@0:8:16
d16@0:8
v24@0:8d16
@"NDSpringBoardApplication"
@"BRContainersMonitor"
@"FPProviderMonitor"
{?="reason"b1}
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"UMUserSyncTask"
{?="shouldCancel"b1}
@"<NDCredentialStorageDelegate>"
{?="hasBodyStream"b1}
v32@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24@"NSInputStream"32@"NSOutputStream"40
@48@0:8@16@24Q32@40
q28@0:8Q16B24
v40@0:8@16Q24@?32
@"NSURLSessionConfiguration"
@"<PDURLSessionProxyServerDelegate>"
{?="bytesSent"b1"totalBytesExpectedToSend"b1"totalBytesSent"b1}
{?="taskIdentifier"b1}
@80@0:8@16@24@32@40@48q56Q64@72
@"__NSCFURLSessionTaskInfo"
@"PDURLSessionProxyAuthChallenge"
{?="code"b1"version"b1}
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@"NDSessionManager"16@"NSString"24@?<v@?>32
@"NDUserSyncStakeholder"
B44@0:8@16@24@32i40
@"RBSProcessMonitor"
B48@0:8@16@24@32q40
v48@0:8@16@24@32q40
@"CHSNSURLSessiondService"
@56@0:8@16@24q32Q40@48
@"NDAVAssetDownloadSessionWrapper"
{?="idsPriority"b1"sequenceNumber"b1}
@"PDURLSessionProxyError"
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"<STExtractorDelegate>"16@0:8
v24@0:8@"<STExtractorDelegate>"16
@"<SZExtractorDelegate>"16@0:8
v24@0:8@"<SZExtractorDelegate>"16
@36@0:8i16Q20@28
@"NSArray"
v32@0:8@16q24
@"<NDCallbackQueueDelegate>"
v48@0:8@16Q24Q32Q40
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSError"24
v48@0:8@"NDAVAssetDownloadSessionWrapper"16Q24Q32Q40
v56@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSValue"24@"NSArray"32@"NSValue"40@"NSDictionary"48
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSDictionary"24
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSArray"24
v40@0:8@16@24Q32
q24@0:8q16
B24@0:8Q16
@"NSMapTable"
Failure trying to unarchive file at %@ error: %@ [%d]
Error %d renaming item at %@ to %@
Error %d renaming item at %@ to %@. Won't try to unarchive.
SIGTERM received, shutting down.
PDURLSessionProxyService setting preferInfraWiFi to NO
%@: Devices unpaired
%@ sent startup message with identifier %@
sendProtobuf: returned NO for PDURLSessionProxy startup message, error %@ [%ld]
%@ Connected to post PDURL device - resetting state
%@ Updated device state connected = %c
PDURLSessionProxyService setting preferInfraWiFi to %c
Received a message of priority %ld with lower sequence number %llu than existing sequence number %llu. Dropping message.
%@::%@ type = %u, connected = %c, isReply = %c, sourceApplication = %@, msgTO = %ld
Unable to determine source application for message
Timed out waiting for reply for message, identifier = %{public}@, type = %u
Failed to send message! Type = %u, error = %@ [%ld]
%{public}@ sent NSURLSessionProxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu, result = %c
Subclass did not handle message %@ of type %u
Subclass did not handle message send failure for message %@
Received a reply with identifier %@ but don't have a corresponding reply block
%@::%@ outgoingResponseIdentifier = %{public}@, type = %u, isResponse = %c, data length = %lu
%@ received protobuf of type %u which could not be decoded! isResponse = %c, data length = %lu
Received PDURLSession Startup message with launchUUID %@
Received PDURLSessionProxy message with new launchUUID %@
Dropping NSURLSessionProxy message with old launchUUID %@
Received PDURLSessionProxy Startup message (without a launchUUID)
%{public}@ receiving NSURLSession proxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu
Incoming (non-reply) message with identifier %{public}@ has priority %lld and sequence number %llu
%@::%@ success = %c, identifier = %{public}@, error = %@ [%ld]
Failed to send PDURLSessionProxy startup message, error %@
%@: activeAccountsChanged: %@
%@: didSwitchActivePairedDevice
PDURLSessionProxyServerService received CreateSession message for identifier %@ with existing UUID %@. Ignoring message.
PDURLSessionProxyServerService received CreateSession message for identifier %@ with UUID %@
PDURLSessionProxyServerService received message of type %u for session %@
PDURLSessionProxyServerService received Invalidate message for unknown session identifier %@, replying with BecameInvalid message
NSURLSessionProxy message of type %u received for unknown session with identifier %@
Received NSURLSessionProxy message of type %u without a session identifier
%{public}@: Relinquishing link requirements for %@
%{public}@: Releasing %{public}@
%{public}@: Acquiring...
%{public}@: Invalidating...
%p Disavowing AVAssetDownloadSession
Taking power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Failed to take power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Releasing power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Starting AVAssetDownloadSession
AVAssetDownloadSession download complete
AVAssetDownloadSession download failed
AVAssetDownloadSession download finished for media selection
NDCacheDeleteFixUpDirectoriesOnStartup enumeration failed at %@ error=%@
Informing CacheDelete purgable bytes %lld on %@
Purged %lld bytes on volume %@.  CacheDelete requested %lld.
CacheDelete callback registration succeeded.
CacheDelete callback registration failed!
NDCacheDeleteFixUpDirectoriesInContainer enumeration failed at %@ error=%@
NDCacheDeletePurgableItemsForVolume enumeration failed at %@ error=%@
NDCacheDeleteGetPurgableItemsInContainer enumeration failed at %@ error=%@
CacheDelete request - Purged %@ [%zu bytes]
Too many sessions for app <%{public}@> (%zu > 1024)
Ignoring stale session (inactive for %fs) with identifier: %@ for bundle id: %@
Not restoring session with identifier: %@ for bundleID: %@ since it does not have any tasks
Coudn't restore session with identifier: %@ for bundle id: %@
Missing or invalid configuration.plist for bundleID: %@, sessionID: %@. Removing session directory
No directory for bundleID: %@, sessionID: %@
Launching application %@ since we could not restore session %@
Capturing boost activity from %@ unnecessary
Capturing boost activity from %@
Ending boost activity from %@
Client %@ tried to specify a shared container that it cannot access: %@
Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
Client tried to set _connectionPoolName but is missing the %@ entitlement
Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
Client tried to set _duetPreauthorized but is missing the %@ entitlement
Client tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
Client specified shared container identifier %@. %@ can access: %d
NDSession <%{public}@>.<%@>.<%@>: already has a connected client, returning nil proxy object to client
Connected client is an extension is attempting to a connect to a session without a valid shared data container
NDSession <%{public}@>.<%@>.<%@>: reconnecting existing session
Connected client is an extension and did not specify a valid shared container identifier
Creating session with identifier: %@ for bundle id: %@
NDSession <%{public}@>.<%@>.<%@>: created successfully
Coudn't create session with identifier: %@ for bundle id: %@
NDSession <%{public}@>.<%@>.<%@>: instructed to send pending callbacks
Asked to send pending callbacks for session %@ that we have no record of. This shouldn't happen
releaseAssertionForSession: %@
NDSession <%{public}@>.<%@>.<%@>: notified it is OK to send pending callbacks
Signalled that it is okay to send pending callbacks for session %@ that we have no record of. This shouldn't happen
obliterateAllSessions for bundleID %@
NDSession <%{public}@>.<%@>.<%@>: removing session
Obliterating session manager for bundle ID: %@
NDSession <%{public}@> Client %@ is acting on behalf of cloud documents container with container id: %@ and bundle id: %@
NDSession <%{public}@> Client %@ is acting on behalf of file provider id: %@ and bundle id: %@
NDSession <%{public}@> Client %@ is an independent extension
NDSession <%{public}@> Client %@ is acting on behalf of application %@, impersonatingSpringBoardApp: %d
NDSession <%{public}@> Client %@ is a SpringBoard application
NDSession <%{public}@> Client %@ is a daemon or non-SpringBoard application
NDSession <%{public}@> Couldn't find out download directory for %@. Not creating session
NDSession <%{public}@> Session <%{public}@> is for <%@>.<%@> using resource timeout: %f, request timeout: %f allowsCellularAccess: %d, allowsExpensiveAccess: %d, _sourceApplicationBundleIdentifier: %@, _sourceApplicationSecondaryIdentifier: %@
NDSession <%{public}@> Using XPC connection %@ for client %@ with identifier %@ and PID %d
NDSession <%{public}@> XPC connection is to PlugIn %@ for session <%@>.<%@>
NDSession <%{public}@> client %@ connected result (%c), XPC(%c) proxy(%c) for %@
NDSession <%{public}@> notified associated application %@ was suspended, XPC(%c)
NDSession <%{public}@> Application %@ was reinstalled, adjusting download paths
NDSession <%{public}@> Couldn't find out download directory for re-installed application %@. It must not have been re-installed properly. Obliterating session
NDSession <%{public}@> Cleaning up
NDSession <%{public}@> Obliterating session: <%@>.<%@>
NDSession <%{public}@> %{public}@ %f seconds past start time, new delay: %f, new window: %f
NDSession <%{public}@> %{public}@ potentially discretionary, re-scheduling, was discretionary: %d, is now discretionary: %d
NDSession <%{public}@> Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _connectionPoolName but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
NDSession <%{public}@> Client tried to set _duetPreauthorized but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
NDSession <%{public}@> Client tried to set _pathToDownloadTaskFile but is not allowed to create %@: %{errno}d
NDSession <%{public}@> Session <%@>.<%@> download path %@ did not exist, recreating.
NDSession <%{public}@> %{public}@ couldn't create new task. task: %@, path: %@
NDSession <%{public}@> %{public}@ couldn't create new task becuase adjusted request is nil, taskInfo.currentRequest = %@
NDSession <%{public}@> %{public}@ error creating resume data: %@
NDSession <%{public}@> %{public}@ could not create resume data. The server might not support resumable downloads. Will retry full download
NDSession <%{public}@> %{public}@ download created from resume data
NDSession <%{public}@> %{public}@ is being restored as completed with download file still at %@
NDSession <%{public}@> %{public}@ restoring, which had never been started, will resume implicitly
NDSession <%{public}@> %{public}@ restored but never started, terminating with timeout
NDSession <%{public}@> Download directory for bundle %@ has moved to %@, but saved download file path is %@. Need to fix download path
NDSession <%{public}@> New download path: %@
NDSession <%{public}@> %{public}@ completed with error %@ [%ld] (was active before nsurlsessiond exit)
NDSession <%{public}@> Couldn't recreate existing task with identifier: %@ in session: <%@>.<%@>
NDSession <%{public}@> Exception caught while restoring a task: %@
Too many tasks for app session <%{public}@>.<%@> (%zu > 512)
NDSession <%{public}@> %{public}@ will retry after %lld seconds
NDSession <%{public}@> has %lu outstanding tasks
NDSession <%{public}@> client %@ is active result (%c), XPC(%c) proxy(%c) for %@
NDSession <%{public}@> %{public}@ not resumed but client disconnected, terminating it with timeout
NDSession <%{public}@> %{public}@ not resumed but client disconnected, resuming it implicitly
NDSession <%{public}@> client %@ disconnected, XPC(%c) proxy(%c) for %@
NDSession <%{public}@> Invoking client reconnection completion block
NDSession <%{public}@> Delivering pending events immediately for client session: <%@>.<%@>. Signalled already: %d, isHandlingBackgroundSession: %d
NDSession <%{public}@> Waiting for notification to deliver pending events for client session: <%@>.<%@>
NDSession <%{public}@> Received signal to deliver pending events for client session: <%@>.<%@>
NDSession <%{public}@> Delivering pending events for client session: <%@>.<%@>
NDSession <%{public}@> Application %@ is not handling a background URLSession but we still received a signal to deliver pending events
NDSession <%{public}@> Session: %@ get tasks for reconnection: %@
NDSession <%{public}@> %{public}@ for %@ is overriding discretionary status by request - forcing to %c
NDSession <%{public}@> %{public}@ for %@ is overriding discretionary status - forcing to %c
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary because the connected client is an extension
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary, since nsurlsessiond is running in EDU sync mode
NDSession <%{public}@> %{public}@ current discretionary status for %@ is discretionary (opt-in: %d)
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary
NDSession <%{public}@> %{public}@ should not begin before %@
NDSession <%{public}@> %{public}@ can now begin - earliest begin date satisfied
NDSession <%{public}@> %{public}@ no longer has a valid task or taskInfo, no need to begin
NDSession <%{public}@> %{public}@ ignoring stale delay begin timer
NDSession <%{public}@> %{public}@ can begin immediately - begin date is in past
NDSession <%{public}@> %{public}@ has not requested a begin delay
NDSession <%{public}@> %{public}@ cannot handle delayed request callback because task: %@ or taskInfo: %@ is nil
NDSession <%{public}@> %{public}@ already replied to delayed request callback - not calling again
NDSession <%{public}@> %{public}@ receiving delayed request callback
NDSession <%{public}@> %{public}@ client is not running and doesn't support wakes, continuing load for delayed request
NDSession <%{public}@> %{public}@ using new request from delayed request callback
NDSession <%{public}@> %{public}@ will be canceled due to delayed request callback
NDSession <%{public}@> %{public}@ continuing load from delayed request callback
NDSession <%{public}@> %{public}@ skipping delayed request callback - delegate not implemented
NDSession <%{public}@> %{public}@ resuming
NDSession <%{public}@> %{public}@ will begin
NDSession <%{public}@> %{public}@ cannot resume because task: %@ or taskInfo: %@ is nil
NDSession <%{public}@> %{public}@ suspending
NDSession <%{public}@> Consumed sandbox extension for file %@, extension = %lld
NDSession <%{public}@> Failed to consume sandbox extension %s for fileURL %@
NDSession <%{public}@> Error copying upload file: %@ [%ld]
NDSession <%{public}@> Error checking resource value: %@ [%ld]
NDSession <%{public}@> File is a symlink
NDSession <%{public}@> Released sandbox extension %lld
NDSession <%{public}@> Created stream with file descriptor: %d
NDSession <%{public}@> Encountered error %@ during task completion callback delivery
NDSession <%{public}@> Encountered error %@ error delivering auth challenge to client, performing default handling
NDSession <%{public}@> %{public}@ skipping acknowledgement teardown since it's not actually complete
NDSession <%{public}@> Not waking up client %@ since wake request is unnecessary
NDSession <%{public}@> Not waking up client %@ since sessionSendsLaunchEvents is NO
NDSession <%{public}@> Not waking up client %@ since it doesn't support app wakes
NDSession <%{public}@> Not waking up client %@ since session is obliterated
NDSession <%{public}@> Not waking up client %@ since it's already connected
NDSession <%{public}@> Not waking up client %@ since background updates are not enabled
NDSession <%{public}@> Waking up the client app: %@
NDSession <%{public}@> Failed to wake app: %@
NDSession <%{public}@> %{public}@ adding delay of %f
NDSession <%{public}@> %{public}@ is duet preauthorized
NDSession <%{public}@> %{public}@ enqueueing
NDSession <%{public}@> Received a background download request from unsafe resume data from %@
NDSession <%{public}@> Couldn't create task or taskInfo: task = %@, taskInfo = %@
NDSession <%{public}@> Task <%{public}@>.<%lu> downloadTaskWithRequest: %@
NDSession <%{public}@> Received an unsafe request for background download: %@ from %@
NDSession <%{public}@> Task <%{public}@>.<%lu> uploadTaskWithRequest: %@ fromFile: %@
NDSession <%{public}@> Received a background upload request for a file that the client cannot read: %@ from %@
NDSession <%{public}@> Task <%{public}@>.<%lu> dataTaskWithRequest: %@
NDSession <%{public}@> %{public}@ received resume data
NDSession <%{public}@> %{public}@ cancelTaskWithIdentifier
NDSession <%{public}@> %{public}@ suspendTaskWithIdentifier
NDSession <%{public}@> %{public}@ resumeTaskWithIdentifier, props %@
NDSession <%{public}@> %{public}@ resuming, QOS(0x%x)
NDSession <%{public}@> %{public}@ setPropertyOnStreamWithIdentifier, client %@ property %@
NDSession <%{public}@> %@ tried to set the priority of a task but is missing the %@ entitlement
NDSession <%{public}@> %{public}@ setting priority to %ld
NDSession <%{public}@> %@ tried to set the loading priority of a task but is missing the %@ entitlement
NDSession <%{public}@> %{public}@ setting loading priority to %f
NDSession <%{public}@> %{public}@ setting limit of %lld bytes per second
NDSession <%{public}@> %{public}@ setting discretionaryOverrride to %c
NDSession <%{public}@> %{public}@ attempted to set discretionaryOverrride to %c but lacks required entitlement %@
NDSession <%{public}@> InvalidateWithReply: for session %@ bundle ID %@
NDSession <%{public}@> Cleaning up and invalidating immediately since there are no tasks
NDSession <%{public}@> Session %@ didBecomeInvalidWithError: %@ [%ld]
NDSession <%{public}@> Invalid trust status: %ld
NDSession <%{public}@> Extended trust validation failed
NDSession <%{public}@> %{public}@ didReceiveChallenge: %@ protection space: %@ for client %@ received auth challenge with type %@
NDSession <%{public}@> %{public}@ performing Extended Validation Trust evaluation
NDSession <%{public}@> %{public}@ Extended Validation Trust evaluation succeeded
NDSession <%{public}@> %{public}@ Extended Validation Trust evaluation failed
NDSession <%{public}@> %{public}@ client doesn't implement session-level or task-level auth challenge delegate, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client doesn't implement task-level auth challenge delegate, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and doesn't support app wakes, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and trust is valid, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and challenge has a previousFailureCount of 0 and a proposedCredential, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ modifying conditional connection properties since new request %@ is to a different host than previous request %@
NDSession <%{public}@> %{public}@ willPerformHTTPRedirection, response: %@, new request: %@
NDSession <%{public}@> %{public}@ client disconnected (error %@) with redirection outstanding, following redirect
NDSession <%{public}@> %{public}@ needs new body stream
NDSession <%{public}@> %{public}@ client disconnected (error %@) with new body stream request outstanding, providing no body
NDSession <%{public}@> %{public}@ for client %@ will be retried after error %@ - code: %ld
NDSession <%{public}@> %{public}@ failed to retry
NDSession <%{public}@> Removing client proxy due to task failure caused by app quit
NDSession <%{public}@> %{public}@ completed with error %@ [%ld]. C(%c)
NDSession <%{public}@> %{public}@ for client %@ was cancelled
NDSession <%{public}@> %{public}@ for client %@ completed with error - code: %ld
NDSession <%{public}@> %{public}@ for client %@ completed successfully
NDSession <%{public}@> %{public}@ didReceiveResponse: %@, status code: %d
NDSession <%{public}@> %{public}@ client disconnected (error %@) with didReceiveResponse outstanding, responding with a cancel disposition
NDSession <%{public}@> %{public}@ client responded to didReceiveResponse with disposition %d
NDSession <%{public}@> %{public}@ received data task didReceiveResponse callback and there is no connected client. Canceling task.
NDSession <%{public}@> %{public}@ did receive data (%lld of %lld total bytes)
NDSession <%{public}@> %{public}@ client disconnected (error %@) during didReciveData delegate
NDSession <%{public}@> %{public}@ received data and there is no connected client. Canceling task.
NDSession <%{public}@> %{public}@ became download task
NDSession <%{public}@> %{public}@ finished downloading to %@
NDSession <%{public}@> %{public}@ didResumeAtOffset: %lld expectedTotalBytes: %lld
NDSession <%{public}@> %{public}@ for client %@ _willSendRequestForEstablishedConnection
NDSession <%{public}@> Client does not implement _willSendRequestForEstablishedConnection, so using proposed request
NDSession <%{public}@> %{public}@ established a connection which requires the client to be running, but it isn't running and doesn't support app wakes. Canceling the task.
NDSession <%{public}@> Perhaps the client %@ was uninstalled?
NDSession <%{public}@> %{public}@ using proposed request since the client application is not running and doesn't support wakes
NDSession <%{public}@> %{public}@ for client %@ is waiting for connection - reason: %lld
NDSession <%{public}@> %{public}@ for client %@ conditions changed - satisfied: %d
NDSession <%{public}@> %{public}@ download for client %@ received response, status code: %d
NDSession <%{public}@> Need file descriptor for file at path %@
NDSession <%{public}@> Client %@ does not support app wakes, cannot get file descriptor for download file!
NDSession <%{public}@> Client %@ does not support app wakes, but it is still running. Will attempt to get file descriptor for download file.
NDSession <%{public}@> %{public}@ getAuthHeadersForResponse for %@ _sendsLaunchEvents=%s [_clientApplication supportsWakes]=%s
NDSession <%{public}@> %{public}@ client disconnected (error %@) when attempting to communicate with HTTP Authenticator for Client %@
NDSession <%{public}@> %{public}@ received auth headers for response, continueLoad: %d authHeaders %@ newRequest %@
NDSession <%{public}@> %{public}@ waking %@ for auth headers
NDSession <%{public}@> %{public}@ getAuthHeadersForResponse does not have a remote object and does not support app wakes, canceling.
Simulating network change event since %lld seconds have passed
SCDynamicStoreCreateRunLoopSource failed: %s [%d]
SCDynamicStoreSetNotificationKeys failed: %s [%d]
Created xpc listener: %@
Received xpc event
NDUserEventAgentConnection received connection
Received a new connection from UserEventAgent! Canceling the old one
Updated Registered Launch-On-Demand Clients: %@
Attempting to launch client %@ for session %@
Couldn't launch application %@ because we don't have an xpc connection to UserEventAgent
Will wake client %@ for session %@ if we receive a notification that it supports launch-on-demand
com.apple.nsurlsessiond enableBluetoothLinkRequirements is true - will assert bluetooth link requirements
com.apple.nsurlsessiond bluetoothLinkRequirementsOverrideTimerValue is %d
Could not break full NSURLSession identifier %@ into bundle ID and session ID components
Failed to unarchive data of class %@, length %lu
Error %@ [%ld] deserializing auth headers
Error removing item at path: %@, error: %@ [%ld]
Error removing item at url: %@, error: %@ [%ld]
Failed to set mode 700 on path %s.  errno=%d
Failed to convert %s to a data-vault directory.  errno=%d
Couldn't create directory at %@, error: %@ [%ld]
Failed to create data-vault directory.  errno=%d
Couldn't create directory.  Unable to extract C-string from path argument: %@
Couldn't create directory.  No path provided.
Error getting caches directory: %@ [%ld]
Empty results for asset update query
Catalogue fetch succeeded
Catalogue fetch failed with result %ld. Fall back to the currently installed asset
Asset (state %ld  Version %ld),  Current version %ld,  best installed version %ld,  best not installed version %ld
Asset version %lu has compatibilty version set to %lu. Not supported on the current OS
Purging asset version %@
Asset version %@ purged
Failed to purge the asset with version %@. Purge result = %ld
Download best not installed asset ver %lu
Read installed asset ver %lu
Asset download requested
Asset download completed. Asset Version downloaded is %lu
Asset download failed. Result  %ld
Copying from a file at location %@ failed. Error %@
Replacing a file at location %@ failed. Error %@
Read Asset at %@
Error reading the TLD Asset version
Unable to get the system container for nsurlstoraged
Error getting the system group container for Group ID %@ 
Resetting request delay for %@
Set request delay for %@ to %f
Resetting request delay and clearing pending wake requests for %@ since the first observer is being added
Application %@ has been in background for %lu seconds. Will reevaluate discretionary downloads
Resetting request delay and clearing pending wake requests for %@ since it came into the foreground
Being asked if container with identifier %@ is foreground before getting callback from BRContainersMonitor! Foreground state is %c
Container %@ entered background
Container %@ entered foreground
Being asked if container with identifier %@ is foreground before getting callback from FPProviderMonitor!
FPProvider %@ entered background
FPProvider %@ entered foreground
An XPC error occurred when obtaining a credential: %@
An XPC error occurred when obtaining all credentials %@
An XPC error occurred when obtaining the default credential: %@
PDURLSessionProxyServer Session %@ had _sourceApplicationAuditTokenData [%@]- discarding
PDURLSessionProxyClient Session %@ received message with non-matching session UUID; dropping message
%{public}@ didCompleteWithError message failed to send, so re-sending when devices are connected
%{public}@ message failed to send, so canceling task
dataTaskWithRequest message forTaskIdentifier %lu in session %@, currentRequest = %@
%{public}@ received task creation message and that task already exists. Sequence number: %llu, existing sequence number: %llu
%{public}@ canceling exisitng task since we received a new request for that task with a higher sequence number
%{public}@ received duplicate task creation message. Dropping message
%{public}@ received task creation message for invalidated session. Dropping message
%{public}@ using local task identifier %lu
%{public}@ acknowledging dataTaskWithRequest message
Received proxy request %@ with non-http URL. Dropping request.
%{public}@ receiving cancel task message
%{public}@ receiving suspend task message
%{public}@ receiving resume task message, props %@
%{public}@ dropping effective configuration
%{public}@ receiving set description message, description = %@
%{public}@ receiving set priority message, priority = %lld
%{public}@ writing to stream returned %d, error %@ [%ld]
Open IDS Socket with UUID %@ to host %@ port %d
received tcp_connection (%p) event %lu
Received error %d reading from tcp_connection %p
Received error %d writing to tcp_connection %p
Received error %@ [%ld] reading from streamTask %@
Session %@ became invalid with error %@ [%ld]
%{public}@ didReceiveChallenge: %@, protection space: %@
%{public}@ _willSendRequestForEstablishedConnection
%{public}@ completed with error %@ [%ld]
%{public}@ StreamTask %@ completed with error %@ [%ld]
%{public}@ ignoring task completion for task %@ with error %@ [%ld] in session %@ since we do not have an associated client taskIdentifier
%{public}@ willPerformHTTPRedirection, response: %@, new request: %@
%{public}@ client responded to redirect with request %@
%{public}@ didReceiveResponse: %@
%{public}@ received response disposition: %d
%{public}@ ignoring data of length %lu since we've already failed that task
%{public}@ did receive data with length %lu
%{public}@ data acknowledged, now has %lu bytes pending acknowledgement
%{public}@ acknowledging pending data
%{public}@ data pending, now has %lu bytes pending acknowledgement
%{public}@ immediately acknowledging data
%{public}@ will wait to acknowledge data
%{public}@ will be retried
%{public}@ will be retried - error: %@
%{public}@ is waiting for connection with reason: %lld
%{public}@ getAuthHeadersForResponse %@
%{public}@ canceling because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
Could not set attributes of directory at %@, error: %@ [%ld]
Non-directory file exists at: %@. Removing it.
Bundle ID Archive %@ has unexpected format
NDSessionManager for client %@ was empty, not restoring
Application %@ is not installed, removing directory
No directory for bundleID: %@
Failed to write archive to path: %@
Evaluating new XPC connection %@ with client bundle identifier %@
Client is a PlugIn with bundle identifier %@
Containing app for PlugIn is %@
Client is an independent extension
Client is an extension
Using identifier %@ for PlugIn %@ with containing app %@
Process with pid %d does not have a bundle ID, rejecting connection
Process with bundleID %@ [pid %d] does not have a bundle path, rejecting connection
Process with bundleID %@ [pid %d] is an app clip, rejecting connection
NDSession <%{public}@>.<%@>.<%@> Lost connection to app -- connection interrupted
NDSession <%{public}@>.<%@>.<%@> Lost connection to app -- connection invalidated
Bundle %@ re-installed. Need to adjust download paths
Bundle %@ uninstalled. Need to obliterate
nsurlsessiond started
Background updates are on
Background update setting for %@ was changed to %@
Notifying observers for %@ that background update setting was turned off
Notifying observers for %@ that background update setting was turned on
Background updates were turned off
Cannot find bundle ID for process %@ state update %@
Application %@ no longer foreground
Application %@ no longer foreground, and no observers
Application %@ entered foreground
Application %@ entered foreground, and no observers
Application %@ was suspended
Application %@ was suspended, and no observers
Application %@ was quit in the app switcher
Application %@ was quit in the app switcher, and no observers
Added observer for app %@, now %lu observers
Removed observer for app %@, now %lu observers
Started monitoring app %@, now %lu total %@
Stopped monitoring app %@, now %lu total %@
validating assertion %@
%s assertion with name %@ for bundle id %@
looking for background task completion for bundle id %@
looking for background session %@ for bundle id %@
Invalidating assertion for bundleID: %@. sessionID: %@
Couldn't create process assertion for %@ (%@)
We already have an assertion for bundleID: %@, sessionID: %@
took assertion for %@, session %@, uuid %@
Will request wake of app %@ for NDSession <%{public}@> with identifier %@
Failed to take process assertion for %@
Successfully woke application %@ and took process assertion
Failed to open application %@, error: %@ timeout: %{bool}d
Issuing wake request for independent extension %@ for session %@ with uuid %@ and requirement %d
Wake request already exists for independent extension %@ for session %@ with uuid %@
Removing wake request for independent extension %@ for session %@
Canceling AVAssetTask because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
%{public}@ Updating configuration on daemon
%{public}@ initialized appleIDAuthenticator, status codes = %@
%{public}@ StreamingZip - not yet prepared for extraction while setting additional properties
%{public}@ StreamingZip - terminating lingering extractor from previous download attempt
%{public}@ StreamingZip - preparing for extraction to %@
%{public}@ Extractor prepare - Offset: %lld, error: %@ [%ld]
%{public}@ Failed to prepare for extraction - timed-out.
%{public}@ StreamingZip - no path available.  Wait for init with resume-info for the path.
%{public}@ Object does not support STExtractor protocol.  Dropping this object. Class=%@
%{public}@ StreamingZip - already prepared for extraction while setting additional properties
[Telemetry]: Assiging taskMetrics on the daemon side
%{public}@ client acknowledged completion
%{public}@ client acknowledged file download
%{public}@ performing auth challenge callback, challenge %@
Failed to establish client cert proxy: %@
%{public}@ client responded to task challenge with disp %d, cred %@, trustProxy %@
%{public}@ performing did start app wake callback.
%{public}@ performing did finish app wake callback.
%{public}@ performing will send request callback, request %@
%{public}@ failed to ask client for modified request, using original proposed request
%{public}@ client responded to will send request callback with request %@ handle %@
Performing open file at path callback for path %@ mode %d
Client responded to open file callback with handle %@
%{public}@ failed to deliver resolved MediaSelection
%{public}@ failed to deliver downloaded HLS variants
%{public}@ performing begin delayed request callback
%{public}@ failed to ask client for delayed request disposition, continuing load
%{public}@ client responded to delayed request callback with disposition %d
%{public}@ performing get auth headers for response callback.
%{public}@ failed to ask client for getAuthHeadersForResponse. Error=%@
%{public}@ client responded to getAuthHeadersForResponse callback with continueLoad=%@, authHeaders=%@, newRequest=%@
%{public}@ draining authentication challenge callback
%{public}@ draining willSendRequest callback
%{public}@ draining openFileAtPath callback
%{public}@ draining willBeginDelayedRequest callback
%{public}@ draining getAuthHeadersForResponse callback
Delayed wake timer fired for session <%@>.<%@>
Triggering delayed wake for session <%@>.<%@>
Scheduled delayed wake for session <%@>.<%@>
Canceling delayed wake for session <%@>.<%@>
%{public}@ failed to re-instantiate AVURLAsset with token %llu
%{public}@ restoring, which had never been started, will resume implicitly
Error getting container path: %llu
Error getting User managed assets path: %llu
Error removing file at location of asset downloads directory: %@ [%ld]
Error creating asset downloads directory: %@ [%ld]
Lowering priority of AVAssetDownloads for %@ since it is no longer in the foreground
Bumping priority of AVAssetDownloads for %@ since it entered the foreground
Cancelling AVAssetDownloads for session <%@>.<%@> since client was quit from app switcher
Client exited transitional discretionary period.  Re-evaluating task priorities for session <%@>.<%@>
Task <%{public}@>.<%lu> avAssetDownloadTaskWithDownloadToken: %llu, URL: %@, destinationURL: %@, temporaryDestinationURL: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAssetDownloadSession %@ with token %llu
%{public}@ failed to instantiate AVAssetDownloadSession
%{public}@ failed to instantiate AVAsset, token %llu
Task <%{public}@>.<%lu> for client %@ does not have write access to destination directory %@
Task <%{public}@>.<%lu> avAggregateAssetDownloadTaskWithDownloadToken: %llu, serializedMediaSelections: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAggregateAssetDownloadTask asset: %@
%{public}@ cancelTaskWithIdentifier
%{public}@ retrying AVAssetDownloadTask
%{public}@ recreated asset after error %@ [%ld] retry count %lu
%{public}@ removing destination file for AVAssetDownloadTask in order to retry
%{public}@ will retry after %f seconds
Creating tcp_connection to host: %@, port: %d
%{public}@ tcp_connection_create() returned NULL (host %@, port %d, queue %@, taskInfo %@, URL %@)
Created tcp_connection: %@
%{public}@ received tcp_connection event %d
%{public}@ created AVAssetDownloadSession with token %llu
%{public}@ couldn't create AVAssetDownloadSession; returning an error
%{public}@ startAVAssetDownloadSessionWithTaskIdentifier wrapper: %@ taskIdentifier: %lu
%{public}@ canceling tcp_connection
%{public}@ finished downloading to %@
%{public}@ completion woke client: %c
%{public}@ completion did not wake client and client is not active - requesting delayed wake
%{public}@ completion woke client or client is active - not requesting delayed wake
%{public}@ AVAssetDownloadSession did complete with error %@ [%ld]
#-Lk
XDDDXXDD
$).49>
@(#)PROGRAM:nsurlsessiond  PROJECT:CFNetwork-1406.0.3
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleExecutable</key>
<string>nsurlsessiond</string>
<key>CFBundleIdentifier</key>
<string>com.apple.nsurlsessiond</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>nsurlsessiond</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1406.0.3</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1406.0.3</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20E5212g</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212g</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<true/>
</dict>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.nsurlsessiond</string>
<key>com.apple.carousel.defaulturlsessionpolicy</key>
<true/>
<key>com.apple.chronoservices</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.nanotimekit.activecomplication</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.join_connection_pool</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>SERVICE_ENTITLEMENT</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.userManagedAssets</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.accounts.bundleidspoofing</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.TopLevelDomainDafsa</string>
</array>
<key>com.apple.private.cfnetwork.har-capture-delegation</key>
<true/>
<key>com.apple.private.dark-wake-network-reachability</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.prefer-infrawifi</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.nsurlsessionproxy</string>
</array>
<key>com.apple.private.network.interface-control</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>nsurlsessiond</string>
<key>com.apple.rootless.storage.com.apple.MobileAsset.DuetExpertCenterAsset</key>
<true/>
<key>com.apple.rootless.storage.nsurlsessiond</key>
<true/>
<key>com.apple.runningboard.assertions.cfnetwork</key>
<true/>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.runningboard.targetidentities</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.nano.nanoregistry.paireddeviceregistry</string>
<string>com.apple.terminusd</string>
<string>com.apple.chronoservices</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.nsurlstoragedresources</string>
</array>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
application-identifier
com.apple.nsurlsessiond0/*com.apple.carousel.defaulturlsessionpolicy
com.apple.chronoservices
com.apple.coreduetd.allow
0+&com.apple.duet.activityscheduler.allow
0,'com.apple.frontboard.launchapplications
0.)com.apple.mobile.keybagd.UserManager.sync
0/*com.apple.multitasking.systemappassertions
0-(com.apple.nanotimekit.activecomplication
01,com.apple.networkd.configure_connection_pool
0,'com.apple.networkd.join_connection_pool
0.)com.apple.networkd.set_account_identifier
com.apple.private.CacheDelete0m
CLIENT_ENTITLEMENT
PURGEABLE_ENTITLEMENT
PURGE_ENTITLEMENT
CANCEL_PURGE_ENTITLEMENT
SERVICE_ENTITLEMENT02-com.apple.private.InstallCoordination.allowed
050com.apple.private.MobileContainerManager.allowed
0?:com.apple.private.MobileContainerManager.userManagedAssets
0+&com.apple.private.accounts.allaccounts
00+com.apple.private.accounts.bundleidspoofing
0^/com.apple.private.assets.accessible-asset-types0+)com.apple.MobileAsset.TopLevelDomainDafsa072com.apple.private.cfnetwork.har-capture-delegation
050com.apple.private.dark-wake-network-reachability
com.apple.private.ids.messaging0+)com.apple.private.alloy.nsurlsessionproxy0\-com.apple.private.ids.messaging.high-priority0+)com.apple.private.alloy.nsurlsessionproxy0!
com.apple.private.ids.nearby
0U&com.apple.private.ids.prefer-infrawifi0+)com.apple.private.alloy.nsurlsessionproxy0Q"com.apple.private.ids.self-session0+)com.apple.private.alloy.nsurlsessionproxy00+com.apple.private.network.interface-control
0.)com.apple.private.network.socket-delegate
0B=com.apple.private.nsurlsession-allow-override-connection-pool
0/*com.apple.private.nsurlsession.impersonate
050com.apple.private.nsurlsession.set-task-priority
0;*com.apple.private.sandbox.profile:embedded
nsurlsessiond0KFcom.apple.rootless.storage.com.apple.MobileAsset.DuetExpertCenterAsset
0-(com.apple.rootless.storage.nsurlsessiond
00+com.apple.runningboard.assertions.cfnetwork
0)$com.apple.runningboard.process-state
0,'com.apple.runningboard.targetidentities
4com.apple.security.exception.mach-lookup.global-name0a0com.apple.nano.nanoregistry.paireddeviceregistry
com.apple.terminusd
com.apple.chronoservices0&!com.apple.security.network.client
0R com.apple.security.system-groups0.,systemgroup.com.apple.nsurlstoragedresources00+com.apple.telephony.cupolicy-monitor-access
0.)com.apple.usermanagerd.persona.background
com.apple.wifi.manager-access
%@ %@
session
socketUUID
host
port
task
disposition
credential
UseCredential
PerformDefaultHandling
CancelAuthenticationChallenge
RejectProtectionSpace
(unknown: %i)
configuration
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
_nsurlsessiondErrorDomain
%02x
_unsafe
com.apple.nsurlsessiond
background
--privileged
--postlogoutsync
proxy
priority
com.apple.nsurlsessiond.NSURLSessionProxyService-Queue
com.apple.private.alloy.nsurlsessionproxy
NSURLSessionProxyClientBundleIdentifier
com.apple.cloudkit.cloudd
com.apple.cloudd
IDSSendMessageOptionMetricReportIdentifier
v16@?0@"PBCodable"8
taskInfo
v32@?0@"NSString"8@"PDURLSessionProxyServer"16^B24
com.apple.nsurlsessiond.PDBluetoothCompanionLinkAssertion.bluetoothSerialQueue
originalRequest
currentRequest
taskSequenceNumber
response
com.apple.nsurlsessionf.avassetdownloadersessionwrappercallback
AVAssetDownloadSessionMediaSelectionArrayKey
AVAssetDownloadTaskMediaSelectionsForMultichannelKey
AVAssetDownloadTaskMediaSelectionKey
AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
AssertType
PreventUserIdleSystemSleep
AssertLevel
AssertName
AVAssetDownloadSessionWrapper %llu (%@)
TimeoutSeconds
TimeoutAction
TimeoutActionTurnOff
B24@?0@"NSURL"8@"NSError"16
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
com.apple.nsurlsessiond-cachedelete
CFNetworkDownload_
.tmp
q24@?0@"NSDate"8@"NSDate"16
NSURLSessionLastDisconnectDateKey
NDBackgroundSessionManagerRestoredStateKeyTasks
NDBackgroundSessionManagerRestoredStateKeyTLSSessionCachePrefix
NDBackgroundSessionManagerKeySessionUUID
com.apple.private.nsurlsession.impersonate
com.apple.private.nsurlsession.allow-discretionary-cellular
com.apple.private.nsurlsession-allow-override-connection-pool
com.apple.private.nsurlsession.allow-duet-preauthorization
com.apple.private.nsurlsession.set-max-watch-cell-transfer-size
com.apple.nsurlsessiond.session-manager
com.apple.nsurlsessiond.session-archive-queue
sessions.plist
downloadDirectoryPath.plist
configuration.plist
options.plist
com.apple.OTACrashCopier
Holding boost for %@
com.apple.private.dark-wake-network-reachability
get-task-allow
com.apple.security.get-task-allow
com.apple.security.application-groups
kNSURLSessionThrowImmediateAVExceptionKey
kNSURLSessionImmediateInvalidationErrorKey
NSURLSessionDelegateImplementsWillSendRequestForEstablishedConnectionKey
NSURLSessionDelegateImplementsSessionAuthChallengeKey
NSURLSessionDelegateImplementsTaskAuthChallengeKey
NSURLSessionDelegateImplementsWillBeginDelayedRequestKey
com.apple.private.nsurlsession.set-task-priority
com.apple.private.nsurlsession.set-discretionary-override-value
NSURLSessionBackgroundPoolName
pathToDownloadTaskFile
effectiveConfig
NSURLSessionBackgroundPoolName-sync-%d
Uploads
Library/Caches/com.apple.nsurlsessiond/Downloads
tasks.plist
Task <?>.<%lu>
%@ [delay: %f, duration: %f, allowsCellularAccess: %d]
%@ [allowsCellularAccess: %d]
VPN not connected
Duet Said No
Waiting for start time
Duration expired
Waiting for power
Waiting for inexpensive network
Waiting for non-cellular network
Link quality too poor
Cellular service is unavailable
Thermal conditions are not good
Conflicting parameters
Required data protection level is locked
Connection pool is full
Opportunistic
Network unavailable
Blocked by proxy
In battery saver mode
Network quality
Unknown (%llu)
com.apple.CFNetwork
__NSCFLocalDownloadTask
NSKeyedArchiveRootObjectKey
__NSCFLocalUploadTask
__NSCFLocalDataTask
trailers
com.apple.mobileassetd
com.apple.sharingd
_NSURLRequestIsDiscretionaryOverrideValue
New task
Task <?>.<0>
CFNetworkUpload_%@
%@%@%@
__com.apple.CFNetwork.prefix__
v32@?0@"NSURLProtectionSpace"8@"NSURLCredential"16^B24
v16@?0@"NSData"8
v16@?0@"NSURLRequest"8
version
launchUUID
headerData
continueLoad
receivedData
additionalProperties
taskDescription
com.apple.nsurlsessiond.status-monitor
com.apple.nsurlsessiond.UserEventAgentConnectionQueue
com.apple.nsurlsessiond-launchondemand
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.nsurlsessiond-events.message-type
com.apple.nsurlsessiond-events.registered-clients
DisableInfraWiFi
enableBluetoothLinkRequirements
bluetoothLinkRequirementsOverrideTimerValue
NSErrorPeerCertificateChainKey
NSErrorClientCertificateChainKey
v32@?0@8@16^B24
http
https
com.apple.nsurlsessionproxy.cancelError
nsurlsessiond
com.apple.nsurlsessiond.szmodtime
com.apple.nsurlsessiond.purged
-launchd
com.apple.nsurlsessiond/Downloads
/nsurlsessiond.launch
streamErrorDomain
streamErrorCode
archiveList
com.apple.MobileAsset.TopLevelDomainDafsa
v16@?0q8
DafsaData.bin
systemgroup.com.apple.nsurlstoragedresources
Library
dafsaData.bin
com.apple.nsurlsessiond.NDSpringBoardApplication.request-delay-queue
com.apple.nsurlsessiond.NDExtension.request-delay-queue
Cancel
Allow
BecomeDownload
request
reason
com.apple.nsurlsessiond.usermanager.sync
nsurlsession bg task
client
retry
v24@?0@"NSString"8^B16
v32@?0@"NSURLProtectionSpace"8@"NSDictionary"16^B24
monitor
shouldCancel
com.apple.nsurlsessiond.credential-storage-queue
v24@?0@"NSDictionary"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSURLCredential"8
hasBodyStream
 uuid:%@
BackgroundDisposition
com.apple.nsurlsessiond.NSURLSessionProxyPool
v32@?0@"NSNumber"8@"NSURLSessionDataTask"16^B24
Session <%@>
message
type
_kCFNetworkProxySessionNeedsNewBodyStreamSignal
v20@?0i8@"NSError"12
v20@?0@"NSObject<OS_dispatch_data>"8i16
v28@?0@"NSData"8B16@"NSError"20
v24@?0@"PBCodable"8@"NSError"16
-[PDURLSessionProxyServer URLSession:dataTask:_didReceiveData:completionHandler:]
PDURLSessionProxyServer.mm
!_taskIdentifiersToPendingDataCompletion[@(taskIdentifier)]
bytesSent
totalBytesSent
totalBytesExpectedToSend
taskIdentifier
com.apple.system.powersources.source
v12@?0i8
challenge
domain
code
userInfo
com.apple.nsurlsessiond.daemon-queue
com.apple.nsurlsessiond-xpc-transaction-queue
bundles.plist
NDTaskInfo
q24@?0@8@16
v32@?0@"NSString"8@"NDSessionManager"16^B24
com.apple.developer.on-demand-install-capable
com.apple.nsurlsessiond.started
bodyData
com.apple.mt
KeepAppsUpToDateAppList
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
kKeepAppsUpToDateEnabledChangedNotification
com.apple.nsnetwork.SpringBoard-queue
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@8@"RBSAssertion"16^B24
found
could not find
com.apple.nsurlsessiond.handlesession %@
BackgroundDownload
com.apple.cfnetwork
UIApplicationLaunchOptionsURLSessionKey
v24@?0@"BSProcessHandle"8@"NSError"16
com.apple.nsurlsessiond.NDExtension-queue
sessionIdentifier
uuidString
sequenceNumber
idsPriority
error
StatusCodes
PublishingURL
EarliestBeginDate
CountOfBytesClientExpectsToSend
CountOfBytesClientExpectsToReceive
DisallowCellularDueToSystemPolicy
SZExtractor
TimeoutIntervalForResource
nw_activityUUID
file-write-create
v24@?0Q8@"NSError"16
args
v16@?0@"NSError"8
v32@?0q8@"NSURLCredential"16@"NSXPCListenerEndpoint"24
v24@?0@"NSURLRequest"8@"NSFileHandle"16
v16@?0@"NSFileHandle"8
v24@?0q8@"NSURLRequest"16
v28@?0B8@"NSDictionary"12@"NSURLRequest"20
com.apple.private.nsurlsession.media-asset-download.can-specify-destination-url
AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
{CGSize=dd}
AVAssetDownloadSessionDebugIdentifierKey
AVAssetDownloadSessionRetryErrorKey
AVAssetDownloadTaskDownloadConfigurationKey
v8@?0
v32@?0@"NSNumber"8@"__NSCFURLSessionTaskInfo"16^B24
%llu
%@%@%@.movpkg
file-write-data
v12@?0B8
configuration.apple.com
v20@?0I8r^v12
EDUMode
AVAssetDownloadToken
T@"NSXPCConnection",W,V_xpcConn
AVURLAsset
TQ,N,V_totalBytesExpectedToSend
HTTPBodyStream
_actualResponse
IDSMessageTimeout
_assertion_lock
NDAVAssetDownloadSessionWrapper:didFinishDownloadForMediaSelectionPropertyList:
_currentRequest
NDAVAssetDownloadSessionWrapper:didResolveMediaSelectionPropertyList:
_domain
NDAVAssetDownloadSessionWrapper:willDownloadVariants:
_hasSZExtractor
T#,R
_infraWiFiTimer
T@"<NDBackgroundSessionDelegate>",W,V_delegate
_monitorTaskSet
T@"<NDCredentialStorageDelegate>",W,V_delegate
_progressValues
T@"<PDURLSessionProxyServerDelegate>",R,V_delegate
_retryDataTasks
T@"<SZExtractorDelegate>",W,N
_setActualAdditionalProperties:
T@"NDUserSyncStakeholder",&,V_stakeholder
_streamTasksToIDSTCPConnections
T@"NSData",&,N,V_additionalProperties
_taskIdentifier
T@"NSData",&,N,V_bodyData
_useTLSSessionCacheFromSession:
T@"NSData",&,N,V_headerData
acquire
T@"NSData",&,N,V_taskInfo
allKeys
T@"NSDictionary",&,S_setActualAdditionalProperties:
backgroundTask:willPerformHTTPRedirection:withNewRequest:reply:
T@"NSDictionary",R,&,V_options
clientApplicationWasReinstalled
T@"NSMutableSet",&,V_activeTasks
context
T@"NSObject<OS_dispatch_queue>",&,V_queue
countOfBytesClientExpectsToSend
T@"NSObject<OS_dispatch_queue>",R,V_queue
dealloc
T@"NSString",&,N,V_host
downloadFileURL
T@"NSString",&,N,V_sessionIdentifier
T@"NSString",&,N,V_taskDescription
findBestAssetFrom:skipDownload:
T@"NSString",&,V_bundleIdentifier
handleEarliestBeginDateForTaskWithIdentifier:completionHandler:
T@"NSString",C,V_bundleID
handleMessage:ofType:withReply:
T@"NSString",C,V_sharedContainerIdentifier
hasContinueLoad
T@"NSString",R,C
hasPort
T@"NSString",R,V_monitoredAppBundleID
hasShouldCancel
T@"NSURL",R,C,V_URL
initWithBundleIdentifier:error:
T@"NSURLSessionConfiguration",&,S_setActualConfiguration:
isDiscretionary
T@"PBCodable",C,V_message
isValid
T@"PDURLSessionProxyCredential",&,N,V_credential
loadingPriority
T@"PDURLSessionProxyRequest",&,N,V_currentRequest
message
T@"PDURLSessionProxyRequest",&,N,V_request
moveInstalledAsset:withVersion:
T@"PDURLSessionProxySessionMessage",&,N,V_session
numberWithBool:
T@"UMUserSyncTask",&,V_monitorTask
options
T@?,C,V_invalidateReply
TB,GisConnected,V_connected
protectionSpace
TB,GisPrivileged,V_privileged
reconnectClient:withCompletion:
TB,N,V_continueLoad
removeObserver:
TB,N,V_delegateImplementsSessionAuthChallenge
results
TB,N,V_delegateImplementsWillPerformRedirection
TB,N,V_hasBodyStream
serviceWithDefaultShellEndpoint
TB,N,V_supportsRedirects
TB,R,N
setArchiveList:
TB,V_isSpringBoardApp
setCountOfBytesExpectedToWrite:
TB,V_tasksEnqueued
setHasPriority:
TB,VisInTransitionalDiscretionaryPeriod
setIdsPriority:
TI,N,V_reason
setMonitorTask:
TLSMaximumSupportedProtocol
setResolvedMediaSelectionPlist:
TQ,N,V_bytesSent
setTLSMaximumSupportedProtocol:
TQ,N,V_sequenceNumber
setTaskMetrics:
TQ,N,V_taskSequenceNumber
set_atsContext:
TQ,R
set_storagePartitionIdentifier:
TQ,V_countOfBytesExpectedToWrite
setupDelayTimer
TQ,V_installedAssetVersion
streamErrorCode
TS,V_type
suspend
Ti,N,V_disposition
taskWillSuspend
Ti,N,V_streamErrorDomain
uppercaseString
Tq,N,V_idsPriority
xpcConn
.cxx_destruct
T@"NSString",R,V_clientBundleID
AVAssetURL
TI,N,V_priority
HTTPAdditionalHeaders
HTTPMaximumConnectionsPerHost
_actualTaskInfo
NDAVAssetDownloadSessionWrapper:didCompleteWithError:
_clientBundleID
NDAVAssetDownloadSessionWrapper:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:
_destinationURL
NDAVAssetDownloadSessionWrapper:didUpdateProgressWithLastBytesWritten:totalBytesWritten:totalBytesExpectedToWrite:
_extractorPreparedForExtraction
StringAsDisposition:
_implementsSessionAuthChallenge
T@"<NDAVAssetDownloadSessionWrapperDelegate>",R,W,V_delegate
_lastUpdateTime
T@"<NDCallbackQueueDelegate>",W,V_delegate
_powerAssertion
T@"<NDSessionManagerDelegate>",W,V_delegate
_reason
T@"<STExtractorDelegate>",W,N
_sequenceNumber
T@"AVAssetDownloadSession",&,V_downloadSession
_streamTasksToDeviceConnections
T@"NSArray",C,V_args
_streamTasksToOpenSocketReplies
T@"NSData",&,N,V_archiveList
_totalBytesSent
T@"NSData",&,N,V_configuration
_watchExtensionBundleIdentifier
T@"NSData",&,N,V_receivedData
activeTasksLock
T@"NSData",&,N,V_userInfo
applicationsDidFailToUninstall:
T@"NSDictionary",&,S_setActualAuthHeaders:
canLaunchProcessWithIdentifier:
T@"NSMutableDictionary",&,V_bridgeTasks
containsObject:
T@"NSMutableSet",&,V_monitorTaskSet
copyTo:
T@"NSObject<OS_dispatch_queue>",R,&,V_delegateQueue
createDataVaultDirectoryAtPath:
T@"NSString",&,N,V_domain
devices
T@"NSString",&,N,V_launchUUID
downloadSession
T@"NSString",&,N,V_socketUUID
fileURL
T@"NSString",&,N,V_uuidString
getLocalFileUrl
T@"NSString",&,V_launchUUID
handleFailedMessageSend:ofType:
T@"NSString",C,V_identifier
hasCode
T@"NSString",C,V_uuidString
hasHost
T@"NSString",R,V_identifier
hasReceivedData
T@"NSString",R,V_secondaryID
hasTask
T@"NSURL",R,C,V_destinationURL
invalidateReply
T@"NSUUID",R,V_uuid
isProxy
T@"PDURLSessionProxyAuthChallenge",&,N,V_challenge
knownSZExtractorImplementations
T@"PDURLSessionProxyError",&,N,V_error
lowercaseString
T@"PDURLSessionProxyRequest",&,N,V_originalRequest
monitorTaskLock
T@"PDURLSessionProxyResponse",&,N,V_response
T@"PDURLSessionProxyTaskMessage",&,N,V_task
obliterateAllSessionsWithReply:
T@"__NSCFURLSessionTaskInfo",&,S_setActualTaskInfo:
originalRequest
T@?,C,V_obliterationCompletion
priorityForDiscretionaryStatus:
TB,GisInSyncBubble,V_inSyncBubble
TB,N
release
TB,N,V_delegateImplementsDidReceiveResponse
request
TB,N,V_delegateImplementsTaskAuthChallenge
retainInfraWiFi
TB,N,V_delegateImplementsWillSendRequest
serviceSpaceDidBecomeAvailable:
TB,N,V_shouldCancel
session
TB,R
setActiveTasks:
TB,V_hasBeenCalled
setBridgeTasks:
TB,V_progressTimerRunning
setDisposition:
TB,V_tasksInitialized
setHasTotalBytesExpectedToSend:
TI,N,V_port
setMayBeDemotedToDiscretionary:
TI,N,V_version
setQos:
TLSMinimumSupportedProtocol
setStakeholder:
TQ,N,V_code
setTLSMinimumSupportedProtocol:
TQ,N,V_taskIdentifier
setWithObjects:
TQ,N,V_totalBytesSent
set_attributedBundleIdentifier:
TQ,R,V_downloadToken
set_timeoutIntervalForResource:
TQ,V_countOfBytesWritten
setupDelayedCompletionWakeTimer
TQ,V_taskIdentifier
stringByAppendingPathComponent:
Td,V_currentRequestDelay
taskDescription
Ti,N,V_streamErrorCode
uploadTaskWithRequest:fromFile:
Ti,V_type
version
Tq,V_basePriority
T{os_unfair_lock_s=I},V_activeTasksLock
T{os_unfair_lock_s=I},V_monitorTaskLock
URLAssetWithURL:options:
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLForDirectory:inDomain:appropriateForURL:create:error:
URLPathAllowedCharacterSet
URLSession:_taskIsWaitingForConnection:
URLSession:_willRetryBackgroundDataTask:
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:betterRouteDiscoveredForStreamTask:
URLSession:dataTask:_didReceiveData:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:readClosedForStreamTask:
URLSession:streamTask:didBecomeInputStream:outputStream:
URLSession:task:_alternatePathAvailable:
URLSession:task:_conditionalRequirementsChanged:
URLSession:task:_didReceiveInformationalResponse:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:writeClosedForStreamTask:
URLSessionDidCompleteForExtensionWithBundleIdentifier:info:
URLSessionDidFinishEventsForBackgroundURLSession:
UTF8String
UUID
UUIDString
_AVAssetDownloadSesssionOptions:config:
_DuetActivityProperties
_IDSMessageTimeout
_TCPAdaptiveReadTimeout
_TCPAdaptiveWriteTimeout
_TLSMaximumSupportedProtocolVersion
_TLSMinimumSupportedProtocolVersion
_UMSyncTask
_URL
_URLSession:connectionEstablishedForStreamTask:
_URLSession:downloadTask:didReceiveResponse:
_URLSession:downloadTaskNeedsDownloadDirectory:
_URLSession:openFileAtPath:mode:completionHandler:
_URLSession:task:getAuthHeadersForResponse:completionHandler:
_URLToUse
_activeTasks
_activeTasksLock
_actualAdditionalProperties
_actualAuthChallenge
_actualAuthHeaders
_actualConfiguration
_actualCredential
_actualError
_actualRequest
_additionalProperties
_allowsHSTSWithUntrustedRootCertificate
_allowsPowerNapScheduling
_allowsReachabilityCheck
_allowsRetryForBackgroundDataTasks
_allowsTLSECH
_allowsTLSFallback
_allowsTLSFalseStart
_allowsVirtualInterfaces
_alwaysPerformDefaultTrustEvaluation
_appIsForeground
_archiveList
_archiveQueue
_archiveTimer
_archiveWasDeferred
_args
_assertions
_asset
_assetDownloadTokensToAssets
_atsContext
_authenticatorStatusCodes
_backgroundPublishingURL
_backgroundTrailers
_backgroundUpdatesAllowed
_basePriority
_blocksToExecuteAfterNetworkChange
_bluetoothCompanionLinkAssertion
_bluetoothSerialQueue
_bodyData
_boost
_bridgeTasks
_btLinkAssertionRetainCount
_btLinkAssertionTimer
_bundleDirectory
_bundleID
_bundleIdentifier
_bytesSent
_cachedCredentials
_cachedDefaultCredentialUsers
_callbackQueue
_callbacks
_challenge
_cleanedUp
_clientApplication
_clientBundleIdentifier
_clientConfig
_clientImplementsSessionChallenge
_clientImplementsTaskChallenge
_clientImplementsWillBeginDelayedRequest
_clientImplementsWillSendRequest
_clientIsNotExplicitlyDiscretionary
_clientPID
_clientProxy
_clientSecondaryIdentifier
_clients
_code
_companionAppBundleIdentifier
_companionPeerIdentifier
_completeReconnectionBlock
_configuration
_connected
_connectedExtension
_connection
_connectionIsCellular
_connectionPoolName
_containingApplication
_continueLoad
_copySocketStreamProperties
_countOfBytesExpectedToWrite
_countOfBytesWritten
_createDispatchData
_createdDataVault
_credential
_credentialStorage
_currentRemoteLaunchUUID
_currentRequestDelay
_daemon_connectionMetrics
_daemon_currentTransactionMetrics
_daemon_establishTime
_delayTimer
_delayedWakeTimer
_delegate
_delegateImplementsDidReceiveResponse
_delegateImplementsSessionAuthChallenge
_delegateImplementsTaskAuthChallenge
_delegateImplementsWillPerformRedirection
_delegateImplementsWillSendRequest
_delegateQueue
_destinationURLToUse
_deviceConnections
_directoryForDownloadedFiles
_discretionary
_discretionaryPrioritySession
_disposition
_doesSZExtractorConsumeExtractedData
_downloadDirectory
_downloadSession
_downloadTaskWithRequest:downloadFilePath:
_downloadToken
_duetPreClearedMode
_duetPreauthorized
_dynamicStoreSource
_effectiveConfiguration
_error
_explicitlyDiscretionary
_extendedNonDiscretionaryGracePeriodTimer
_extractor
_extractorFinishedDecoding
_groupConfiguration
_has
_hasBeenCalled
_hasBeenSignalledToDeliverPendingEvents
_hasBodyStream
_hasLoadedCompanionPeerIdentifier
_hasSetLinkRequirements
_hasStarted
_hasTransferredData
_haveReceivedLegacyStartupMessage
_haveReceivedMessage
_headerData
_host
_identifier
_identifiersToAVWrappers
_identifiersToDASActivities
_identifiersToMonitors
_identifiersToStreamQueues
_identifiersToStreams
_identifiersToTCPConnections
_identifiersToTaskInfo
_identifiersToTasks
_identifiersToThroughputMonitors
_idsPriority
_idsService
_ignoreDidReceiveResponseDisposition
_implementsDidReceiveResponse
_implementsTaskAuthChallenge
_implementsWillPerformRedirection
_implementsWillSendRequest
_inSyncBubble
_incomingSequenceNumbersByPriority
_infersDiscretionary
_infersDiscretionaryFromOriginatingClient
_infraWiFiRetainCount
_initWithActualAuthChallenge:
_initWithActualCredential:
_initWithActualError:
_initWithActualRequest:
_initWithActualResponse:
_initializedForegroundState
_initializedForegroundStateFromMonitorCallback
_installedAssetVersion
_invalidateReply
_isActive
_isForeground
_isInvalid
_isSafeDirectoryForDownloads:withToken:
_isSafeFileForBackgroundUpload:withToken:
_isSafeRequestForBackgroundDownload
_isSpringBoardApp
_lastArchiveTime
_lastSuspendTime
_launchUUID
_legacySocketStreamProperties
_listener
_loggableDescription
_loggingPrivacyLevel
_maximumWatchCellularTransferSize
_mayBeDemotedToDiscretionary
_message
_messagesToReSend
_metrics
_monitor
_monitorTask
_monitorTaskLock
_monitoredAppBundleID
_monitoredApplication
_monitoredBundleIDs
_multipathAlternatePort
_networkChangeEventCount
_nonDiscretionaryGracePeriodTimer
_nsurlsessionproxy_cancelWithError:
_nsurlsessionproxy_clearError
_nsurlsessionproxy_error
_nsurlsessionproxy_isSafeRequest
_nsurlsessionproxy_launchUUID
_nsurlsessionproxy_messagePriority
_nsurlsessionproxy_requiresBackgroundSession
_nsurlsessionproxy_secureArchivedDataWithRootObject:
_nsurlsessionproxy_secureUnarchiveObjectOfClass:withData:
_nsurlsessionproxy_sequenceNumber
_nsurlsessionproxy_sessionIdentifier
_nsurlsessionproxy_sessionUUID
_nsurlsessionproxy_setLaunchUUID:
_nsurlsessionproxy_setMessagePriority:
_nsurlsessionproxy_setSequenceNumber:
_nsurlsessionproxy_setSessionUUID:
_nsurlsessionproxy_taskIdentifier
_obliterateAllBackgroundSessionsWithCompletionHandler:
_obliterated
_obliterationCompletion
_observedBackgroundSettings
_observers
_onBehalfOfPairedDevice
_onqueue_IDSTimoutForMessage:
_onqueue_adoptEffectiveConfiguration:
_onqueue_archiveTaskInfo
_onqueue_devicesConnected
_onqueue_devicesDisconnected
_onqueue_handleFailedMessageSend:ofType:
_onqueue_handleReceivedMessage:ofType:withReply:
_onqueue_handleReceivedReply:forIdentifier:ofType:withError:
_onqueue_loggableDescriptionForMessage:
_onqueue_messageWithIdentifier:didSendWithSuccess:error:
_onqueue_priorityForMessage:ofType:isReply:
_onqueue_receivedNewLaunchUUID:isStartupMessage:
_onqueue_releaseAssertionForBundleID:sessionID:
_onqueue_remoteDeviceStartedUp
_onqueue_removePendingLaunchForBundleID:sessionID:
_onqueue_resetRequestDelay
_onqueue_sendMessage:ofType:responseIdentifier:forSourceApplication:withUrgency:withIDSMessageTimeout:withReply:
_onqueue_sendStartupMessage
_onqueue_setPrefersInfraWiFi:
_onqueue_sourceApplicationForMessage:
_onqueue_updateDeviceState
_onqueue_wakeUpExtension:forSession:withSessionUUID:wakeRequirement:
_options
_originalRequest
_outgoingSequenceNumbersByPriority
_outstandingMessages
_outstandingReplies
_outstandingTaskIDs
_pendingLaunches
_pendingWakes
_performsEVCertCheck
_performsNonDiscretionaryThroughputMonitoring
_performsNonDiscretionaryThrougputMonitoring
_pidForHAR
_pipeManager
_port
_powerMonitorToken
_prefersInfraWiFi
_priority
_priorityValue
_privileged
_progressTimerRunning
_progressTimestamps
_propertyForKey:
_queue
_receivedData
_receivedLaunchUUIDs
_reconnectingProxies
_registeredClients
_releasePreventIdleSleepAssertionIfAppropriate
_reportsDataStalls
_request
_requestFromResumeData
_requiresPowerPluggedIn
_requiresSustainedDataDelivery
_respectsAllowsCellularAccessForDiscretionaryTasks
_response
_secondaryID
_sendsLaunchEvents
_service
_session
_sessionArchiveQueue
_sessionConfiguration
_sessionDirectory
_sessionIdentifier
_sessionSendsLaunchOnDemandEvents
_sessionWithConfiguration:delegate:delegateDispatchQueue:
_sessions
_setActualAuthHeaders:
_setActualConfiguration:
_setActualTaskInfo:
_setQueue:
_setTimeWindowDelay:
_setTimeWindowDuration:
_sharedContainerIdentifier
_shouldCancel
_shouldElevateDiscretionaryPriority
_shouldPreserveBackgroundSessionDisposition
_shouldPullInitialCredentials
_shouldSkipPreferredClientCertificateLookup
_skipInvalidateMessage
_socketStreamProperties
_socketUUID
_sourceApplicationAuditTokenData
_sourceApplicationBundleIdentifier
_sourceApplicationSecondaryIdentifier
_springboardApplication
_stakeholder
_startupMessageFailed
_startupMessageIdentifier
_streamErrorCode
_streamErrorDomain
_supportsAVAssetDownloads
_supportsRedirects
_suspendedDurationSinceLastUpdate
_symptomToken
_task
_taskDescription
_taskGroup
_taskIdentifiersRetainingBTLinkAssertion
_taskIdentifiersRetainingInfraWiFi
_taskIdentifiersToBodyStreams
_taskIdentifiersToInitialBodyInputStreams
_taskIdentifiersToPendingDataBytes
_taskIdentifiersToPendingDataCompletion
_taskIdentifiersToSequenceNumbers
_taskIdentifiersToWaitingReasons
_taskInfo
_taskSequenceNumber
_tasks
_tasksEnqueued
_tasksInitialized
_tasksToIdentifiers
_throughputInterval
_throughputMonitoringStartTime
_throughputTimer
_timeWindowDelay
_timeWindowDuration
_timer
_timingDataOptions
_tlsSessionCachePrefix
_tlsTrustPinningPolicyName
_totalBytesExpectedToSend
_trailers
_transactionQueue
_transitionalDiscretionaryStateTimer
_type
_uniqueIdentifier
_updateState
_updatedStreamingZipModificationDate
_uploadsDirectory
_userInfo
_userInitiatedSession
_uuid
_uuidString
_version
_web_errorWithDomain:code:URL:
_web_errorWithDomain:code:failingURL:
_workQueue
_wrapper
_xpcActivityBudgeted
_xpcConn
_xpcConnection
absoluteString
acquireWithError:
activeTasks
addDelegate:queue:
addEntriesFromDictionary:
addObject:
addObjectsFromArray:
addObserver:
addObserver:forApplication:
addObserver:forContainerID:
addObserver:forExtension:
addObserver:forProviderID:
addOutstandingTaskWithIdentifier:
addPendingCallback:wakeRequirement:
addPendingCallbackToFront:
addTransaction
additionalProperties
adjustDiscretionaryStatusForTaskInfo:
adjustedTCPConnectionPriorityForTaskPriority:
allCredentials
allValues
allocWithZone:
allowReconnect
allowedClassesForUnarchiving
allowsCellularAccess
allowsConstrainedNetworkAccess
allowsExpensiveNetworkAccess
appendFormat:
application:hasAssertionWithName:
application:isHandlingBackgroundSessionWithIdentifier:withSessionUUID:
applicationBackgroundUpdatesEnabled:
applicationBackgroundUpdatesTurnedOff:
applicationBackgroundUpdatesTurnedOn:
applicationEndedExtendedNonDiscretionaryBackgroundGracePeriod:
applicationEndedNonDiscretionaryBackgroundGracePeriod:
applicationEndedTransitionalDiscretionaryBackgroundPeriod:
applicationEnteredForeground:
applicationHasBackgroundTaskCompletion:
applicationIconDidChange:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidCancel:
applicationInstallsDidChange:
applicationInstallsDidPause:
applicationInstallsDidPrioritize:
applicationInstallsDidResume:
applicationInstallsDidStart:
applicationInstallsDidUpdateIcon:
applicationIsForeground:
applicationIsInstalled:
applicationNoLongerInForeground:
applicationStateDidChange:
applicationWasQuitFromAppSwitcher:
applicationWasSuspended:
applicationWithIdentifier:
applicationsDidChangePersonas:
applicationsDidFailToInstall:
applicationsDidInstall:
applicationsDidUninstall:
applicationsWillInstall:
applicationsWillUninstall:
archiveList
archivePath
archiveState
archiveTaskInfo:
archiveTimerFired
archivedDataWithRootObject:requiringSecureCoding:error:
args
array
arrayWithObjects:
arrayWithObjects:count:
assertionNameForSessionUUID:
assertions
assetArtworkData
assetDownloadSession:didFailWithError:
assetDownloadSession:didFinishDownloadForMediaSelection:
assetDownloadSession:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
assetDownloadSession:didResolveMediaSelection:
assetDownloadSession:didUpdateProgressWithExpectedBytes:bytesDownloaded:
assetDownloadSession:willDownloadVariants:
assetDownloadSessionDidFinishDownload:
assetDownloadSessionWithAsset:mediaSelections:destinationURL:options:
assetDownloadSessionWithURL:destinationURL:options:
assetTitle
attributeWithDomain:name:
attributes
auditToken
authenticationMethod
autorelease
avAggregateAssetDownloadTaskWithDownloadToken:serializedMediaSelections:assetTitle:assetArtworkData:options:childDownloadSessionIdentifier:identifier:uniqueIdentifier:reply:
avAssetDownloadTaskWithDownloadToken:URL:destinationURL:temporaryDestinationURL:assetTitle:assetArtworkData:options:identifier:uniqueIdentifier:taskKind:enableSPIDelegateCallbacks:reply:
avAssetDownloadsDirectory
avAssetForURL:downloadToken:
backgroundAVAssetDownloadTask:didFinishDownloadForMediaSelectionPropertyList:
backgroundAVAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelectionPropertyList:
backgroundAVAssetDownloadTask:didReceiveDownloadToken:
backgroundAVAssetDownloadTask:didResolveMediaSelectionProperyList:reply:
backgroundAVAssetDownloadTask:willDownloadToURL:
backgroundAVAssetDownloadTask:willDownloadVariants:reply:
backgroundAVAssetDownloadTaskDidUpdateProgress:totalBytesWritten:totalBytesExpectedToWrite:
backgroundDataTask:didReceiveData:withReply:
backgroundDataTaskDidBecomeDownloadTask:
backgroundDownloadTask:didFinishDownloadingToURL:response:reply:
backgroundDownloadTask:didResumeAtOffset:expectedTotalBytes:
backgroundDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
backgroundSessionDidFinishAppWake:reply:
backgroundSessionDidStartAppWake:reply:
backgroundTask:_willSendRequestForEstablishedConnection:reply:
backgroundTask:didCompleteWithError:taskMetrics:info:reply:
backgroundTask:didReceiveChallenge:reply:
backgroundTask:didReceiveResponse:transactionMetrics:
backgroundTask:didReceiveResponse:transactionMetrics:reply:
backgroundTask:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
backgroundTask:getAuthHeadersForResponse:reply:
backgroundTask:hasConnectionWaitingWithError:
backgroundTask:needNewBodyStream:withReply:
backgroundTask:willBeginDelayedRequest:reply:
backgroundTaskDidResume:
backgroundTaskDidSuspend:
backgroundUpdatesDisabledForApplication:
backgroundUpdatesEnabled
backgroundUpdatesEnabledForApplication:
baseMessage
basePriority
basePrioritySetExplicitly
begin
beginActivityWithOptions:reason:
beginTransaction
bgSessionManagerInterface
bodyData
boolValue
boost
bridgeTasks
bumpAndReturnOutgoingSequenceNumberForPriority:
bundle
bundleID
bundleIDForPrimaryIdentifier:secondaryIdentifier:
bundleIDFromPrimaryIdentifier:secondaryIdentifier:
bundleIDsForAppProxies:
bundleIdentifier
bundleManagerPath:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
bytes
bytesPerSecondLimit
bytesSent
cStringUsingEncoding:
calculateThroughput
canBeSuspended
cancel
cancelAVDownloadAndFailTaskWithIdentifier:withError:
cancelAndDeliverError:
cancelByProducingResumeData:
cancelDelayedCompletionWakeTimer
cancelMonitorForTask:
cancelTCPConnectionForTask:withError:
cancelTaskWithIdentifier:
cancelTaskWithIdentifier:byProducingResumeData:
cancelTasksRequiringClientConnectionAndResumeUnstartedTasks
cancelThroughputMonitorForWrapper:
cancel_with_error:
caseInsensitiveCompare:
certificates
challenge
chronoKitExtensionWithIdentifier:
class
cleanupSessionWithCompletionHandler:
cleanupWithCompletionHandler:
clientAcknowledgedTerminalCallbackForTask:
clientBundleID
clientDidDisconnect
clientErrorForError:
clientIsActive
close
closeFile
closeRead
closeWrite
cloudContainerWithIdentifier:
code
compare:
componentsSeparatedByString:
configuration
configurationWithClientConfiguration:discretionary:
configureAdditionalPropertiesOnTask:taskInfo:
configureTask:withTaskInfo:
conformsToProtocol:
connected
connection:canUseSharedContainerIdentifier:
connectionProxyDictionary
containerDidEnterBackground:
containerDidEnterForeground:
containerIDForPrimaryIdentifier:secondaryIdentifier:
containerIDFromPrimaryIdentifier:secondaryIdentifier:
containerURL
containingBundleRecord
continueLoad
copy
copyAndSanitizeClientConfiguration:
copyItemAtURL:toURL:error:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countOfBytesClientExpectsToReceive
countOfBytesExpectedToReceive
countOfBytesExpectedToSend
countOfBytesExpectedToWrite
countOfBytesReceived
countOfBytesSent
countOfBytesWritten
createDaemonDirectory
createDirectoryAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createFileAtPath:contents:attributes:
createIdentityFromEndpoint:error:
createNewTaskFromInfo:
createPersonaContextForBackgroundProcessingWithPersonaUniqueString:
createResumeInformation:
createSessionWithConfiguration:clientProxy:cachesDirectory:options:reply:
creationTime
credStorage_allCredentialsWithReply:
credStorage_credentialsForProtectionSpace:reply:
credStorage_defaultCredentialForProtectionSpace:reply:
credStorage_getInitialCredentialDictionariesWithReply:
credStorage_setCredential:forProtectionSpace:
credStorage_setDefaultCredential:forProtectionSpace:
credential
credentialForTrust:
credentialWithIdentity:certificates:persistence:
credentialWithUser:password:persistence:
credentialsForProtectionSpace:
currentConnection
currentDiscretionaryStatus:withOptionalTaskInfo:
currentIntervalDuration
currentIntervalEndDelta
currentIntervalThroughputThreshold
currentPersona
currentRequest
currentRequestDelay
currentRunLoop
currentState
currentThroughputThreshold
data
dataContainerURL
dataTaskWithRequest:
dataTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
dataTaskWithRequest:originalRequest:pipeHandle:identifier:uniqueIdentifier:reply:
dataWithContentsOfFile:
dataWithPropertyList:format:options:error:
databaseWasRebuilt
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCredentialForProtectionSpace:
defaultDownloadDirectoryContainer
defaultDownloadDirectoryForBundleID:
defaultManager
defaultPairedDevice
defaultSessionConfiguration
defaultTaskGroup
defaultWindowDurationForResourceTimeout:
defaultWorkspace
delegate
delegateImplementsDidReceiveResponse
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsWillSendRequest
delegateQueue
description
descriptionForRequest:
descriptionForTCPConnectionWaitingReason:
descriptionForTaskWithIdentifier:
descriptor
destinationURL
destinationURLToUseForTask:
deviceIDForNRDevice:
deviceManagementPolicyDidChange:
devicesConnected
devicesDidUnpair:
dictionary
dictionaryRepresentation
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
disableTransitionalDiscretionaryPeriodTimer
disablesRetry
disavowSession
discretionaryOverride
disposition
dispositionAsString:
doesAVAssetDownloadSessionSupportMultipleDownloads
doesConsumeExtractedData
domain
doubleValue
downloadAsset:
downloadConfig
downloadDirectoryDataPath
downloadDirectoryToUse:
downloadFile
downloadTaskWithRequest:originalRequest:downloadFilePath:identifier:uniqueIdentifier:reply:
downloadTaskWithRequest:originalRequest:identifier:uniqueIdentifier:reply:
downloadTaskWithResumeData:
downloadTaskWithResumeData:identifier:uniqueIdentifier:reply:
downloadToken
drainCallback:
drainCallbacksForTaskIdentifier:
dropBoost
earlierDate:
earliestBeginDate
embeddedApplicationIdentifier
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedData
endActivity:
endBridgingUMTask:
endTransaction
endUMTask:
endowmentNamespaces
enqueueTaskWithIdentifier:
ensureAVAssetDownloadSessionWrapperForTaskIdentifier:
ensureSessionDownloadDirectoryExists
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
error
error:code:
errorOccurredDuringAuthCallbackDelivery:completionHandler:
errorOccurredDuringFinishedCallbackDelivery:
errorWithDomain:code:userInfo:
establishedConnection
exitEvent
expectedProgressTarget
expectingResumeCallback
explanation
extension:isHandlingBackgroundSessionWithIdentifier:withSessionUUID:
extensionPointRecord
extensionWasRemovedFromScreen:
extractorDelegate
fetchStreamingZipModificationDate:
fileDescriptor
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileProviderWithIdentifer:applicationIdentifier:
fileSystemRepresentation
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileURLWithPath:
fileURLWithPath:isDirectory:
fileURLWithPath:isDirectory:relativeToURL:
fillInByteCountsForTaskInfo:withTaskID:
fillInPropertiesForTaskInfo:withTaskID:
finalizeTaskCompletionWithSuppressedWake:
finishStreamWithCompletionBlock:
finishTasksAndInvalidate
firstObject
getActivePairedDevice
getActiveSessionIdentifiersWithReply:
getBackgroundSettingsAppList
getBoundStreamsWithBufferSize:inputStream:outputStream:
getBytes:length:
getClientProxy
getComponentsForFullIdentifier:bundleIdentifier:sessionIdentifier:
getResourceValue:forKey:error:
getSessionWithIdentifier:
getSessionWithIdentifier:forBundleID:
getTLSSessionCachePrefix
getTaskInformation
getTasksForReconnection
getUUIDBytes:
groupContainerURLs
handleBackgroundSettingsChange
handleBetterNetworkEvent
handleCancelTaskMessage:forTaskIdentifier:
handleCompletionOfTask:identifier:taskInfo:isRecoverable:suppressWake:
handleDataTaskWithRequestMessage:forTaskIdentifier:withReply:
handleDynamicStoreCallback:changedKeys:
handleForPredicate:error:
handleInvalidateMessage:
handleNewConnection:
handleOpenSocketMessage:withReply:
handleResumeTaskMessage:forTaskIdentifier:withReply:
handleSetDescriptionMessage:forTaskIdentifier:
handleSetPriorityMessage:forTaskIdentifier:
handleStateUpdate:forProcess:
handleSuspendTaskMessage:forTaskIdentifier:
handleUploadBodyDataMessage:forTaskIdentifier:withReply:
handleWillBeginDelayedRequestForTaskWithIdentifier:completionHandler:
hasAdditionalProperties
hasArchiveList
hasBackgroundTaskCompletion
hasBeenCalled
hasBodyData
hasBodyStream
hasBytesSent
hasChallenge
hasConfiguration
hasConnectedClient
hasCredential
hasCurrentRequest
hasDelegateImplementsDidReceiveResponse
hasDelegateImplementsSessionAuthChallenge
hasDelegateImplementsTaskAuthChallenge
hasDelegateImplementsWillPerformRedirection
hasDelegateImplementsWillSendRequest
hasDisposition
hasDomain
hasEntitlementToSpecifyDownloadDestinationURL
hasError
hasForegroundBackgroundStates
hasHasBodyStream
hasHeaderData
hasIdsPriority
hasLaunchUUID
hasOriginalRequest
hasPrefix:
hasPriority
hasReason
hasRequest
hasResponse
hasSequenceNumber
hasSession
hasSessionIdentifier
hasSocketUUID
hasStarted
hasStreamErrorCode
hasStreamErrorDomain
hasSuffix:
hasSupportsRedirects
hasTaskDescription
hasTaskIdentifier
hasTaskInfo
hasTaskSequenceNumber
hasTotalBytesExpectedToSend
hasTotalBytesSent
hasUserInfo
hasUuidString
hasVersion
hash
headerData
helperPlaceholdersInstalled:
helperPlaceholdersUninstalled:
host
identifier
identifierIsForSpringBoardApplication:
identity
idsPriority
inSyncBubble
incomingResponseIdentifier
indexOfObject:
init
initForReadingFromData:error:
initRequiringSecureCoding:
initSocketWithDevice:options:completionHandler:queue:
initWithAVAggregateAssetDownloadChildDownloadSessionIdentifier:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:
initWithAVAggregateDownloadTaskNoChildTaskKindWithURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:enableSPIDelegateCallbacks:
initWithAVAssetDownloadURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:uniqueIdentifier:bundleID:sessionID:downloadConfig:
initWithAsset:propertyList:
initWithBackgroundTaskInfo:taskGroup:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCallbackType:taskIdentifier:args:
initWithCoder:
initWithConfiguration:bundleID:isSpringBoardApp:downloadDirectory:options:clientProxy:delegate:workQueue:archiveQueue:
initWithConfiguration:uuidString:options:delegate:
initWithData:
initWithDataTask:uniqueIdentifier:bundleID:sessionID:
initWithDelegate:
initWithDelegate:bundleID:isSpringBoardApp:
initWithDelegate:forBundleID:
initWithDelegate:queue:
initWithDownloadTask:uniqueIdentifier:bundleID:sessionID:
initWithExplanation:target:attributes:
initWithHost:port:protocol:realm:authenticationMethod:
initWithIdentifier:
initWithIdentifier:applicationIdentifier:
initWithKeyOptions:valueOptions:capacity:
initWithMachServiceName:
initWithMessage:type:
initWithProtobufData:type:isResponse:
initWithService:
initWithTask:
initWithTask:taskInfo:clientBundleIdentifier:secondaryIdentifier:monitoredApplication:priority:options:queue:
initWithType:
initWithURL:destinationURL:options:delegate:queue:
initWithURLAsset:destinationURL:options:delegate:queue:
initWithUploadTask:uniqueIdentifier:bundleID:sessionID:
initWithWrapper:monitoredApplication:priority:options:queue:
initialize
initializeHTTPAuthenticatorWithAppleIDContext:statusCodes:
initializedWithAVAsset
inputStreamWithData:
inputStreamWithFileHandle:taskIdentifier:
insertObject:atIndex:
installedAssetVersion
intValue
integerValue
invalidate
invalidateAndCancel
invalidateWithReply:
invokeSelectorForAllObservers:
isAutomaticAppUpdatesAllowed
isCatalogFetchedWithinThePastFewDays:
isConnected
isContainerIDForeground:
isDefaultPairedDevice
isEqual:
isEqualToNumber:
isEqualToString:
isFileURL
isForeground
isHandlingBackgroundURLSessionWithIdentifier:withSessionUUID:
isInSyncBubble
isInTransitionalDiscretionaryPeriod
isKindOfClass:
isMemberOfClass:
isMultiUser
isNearby
isPrivileged
isResponse
isSpringBoardApp
isValidAssertion:withName:
itemShouldBePurged:
keysSortedByValueUsingComparator:
lastObject
lastPathComponent
launchProcessWithIdentifier:sessionIdentifier:
launchUUID
length
listener:shouldAcceptNewConnection:
longLongValue
lowThroughputTimerRetryCount
makeTempUploadFile:withExtensionData:
managerBecameEmpty:bundleID:withCompletionHandler:
markItemAsPurged:
mayBeDemotedToDiscretionary
maySupportWakesLater
mergeFrom:
messageLoggableDescriptionForTaskWithIdentifier:
messagePriorityForTaskWithIdentifier:isReply:
messageSubclassForMessageType:isReply:
monitorTask
monitorTaskSet
monitorWithConfiguration:
monitoredAppBundleID
monitoredBundleIDsUpdated
moveFileAtomically:toLocation:
moveItemAtURL:toURL:error:
mutableCopy
networkServiceType
networkUsageChanged:
newAVAssetDownloadSessionWrapperForTaskInfo:
nextObject
nsurlsessiondLaunchdPath
nsurlsessiondPath
null
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
obliterate
obliterationCompletion
observeLaunchProhibitedApps
okayToSendPendingCallbacksForIdentifier:reply:
open
openApplication:withOptions:completion:
openFileAtPath:mode:withReply:
optionsWithDictionary:
originalNetworkContentURL
outgoingResponseIdentifier
password
path
pathToDownloadTaskFile
pause
performAllCallbacks
performBlockAfterNetworkChangedEvent:delay:
performBlockAfterNetworkChangedEvent:numberOfPreviousRetries:
performCallback:
performCommonSetupForTask:taskInfo:identifier:discretionaryStatus:
performForwardingFromStreamTask:toTCPConnection:
performForwardingFromTCPConnection:toStreamTask:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWake:uponNotification:sessionIdentifier:
persistence
persistentDomainForName:
personaUniqueString
pingForXPCObjectValidityWithReply:
plugInKitPlugins
pluginIdentifier
pluginsDidInstall:
pluginsDidUninstall:
pluginsWillUninstall:
populateWithInitialCredentials
port
predicateMatchingBundleIdentifier:
predicateMatchingBundleIdentifiers:
prepareForExtraction:
prepareForExtractionToPath:completionBlock:
previousFailureCount
previousState
priority
privileged
processIdentifier
processInfo
progress
progressTimerRunning
propertyForKey:inRequest:
propertyList
propertyListWithData:options:format:error:
proposedCredential
protocol
providerDidEnterBackground:
providerDidEnterForeground:
providerIDForApplication:sharedContainerIdentifier:
providerIDForBundle:sharedContainerIdentifier:
proxyServerBecameInvalid:
purge:
queryAndFindBestAsset:
queryMetaDataSync
queue
readDataOfMinLength:maxLength:timeout:completionHandler:
readFrom:
readyToSwitchToUser:
realm
reason
receivedData
registerUserSyncStakeholder:withMachServiceName:
releaseAssertionForBundleID:sessionID:
releaseAssertionForSession:reply:
releaseBTLinkAssertion
releaseBTLinkAssertionIfNecessary:
releaseInfraWiFi
releaseInfraWiFiForTaskIfNecessary:
releasePowerAssertion
releaseTransaction
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeCharactersInString:
removeCredential:forProtectionSpace:
removeDownloadFileForTaskInfo:
removeItemAtPath:
removeItemAtPath:error:
removeItemAtURL:
removeItemAtURL:error:
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:forApplication:
removeObserver:forContainerID:
removeObserver:forExtension:
removeObserver:forProviderID:
removeOutstandingTaskWithIdentifier:
removePendingLaunchForBundleID:sessionID:
removePendingLaunchTasksForBundleID:sessionID:cancel:
removePendingWakeForClient:sessionIdentifier:
removeStreamingZipModificationDate:
removeUploadFileForTaskInfo:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
requestDelayQueue
requestWithAdjustedWindowForTaskInfo:
requeueTask:
requeueTask:skipResume:
resendPendingMessage:
reset
resetStandardUserDefaults
resetStorageWithReply:
resourceTimeoutError
respondedToWillBeginDelayedRequestCallback
respondsToSelector:
response
restoreCompletedTask:
restoreInProgressTask:
restoreOptionsFromArchivePath:
restoreState
restoreState:
restoreTask:isOutstanding:
restoreTasks:
restoreTasksFromArchivedInfo:
restoredTaskActive:
restoredTaskEnqueued:
resume
resumeTaskWithIdentifier:withProperties:
resumedAndWaitingForEarliestBeginDate
retain
retainBTLinkAssertion
retainBTLinkAssertionWithIdentifier:
retainCount
retainInfraWiFiForTaskWithIdentifier:
retryCount
retryError
retryTask:originalError:
retryTask:originalError:transactionMetrics:
returnTypes:
sanitizeTaskProperties:
scalablePipeManager:didRegisterEndpoint:error:
scalablePipeManager:didUnregisterEndpoint:
scalablePipeManager:pipeDidConnect:
scalablePipeManager:pipeDidDisconnect:error:
scalablePipeManagerDidUpdateState:
scheme
secondaryID
self
sendPendingCallbacksForIdentifier:reply:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendProtobufMessage:ofType:withReply:
sequenceNumber
serverTrust
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceMinCompatibilityVersion
sessionCompleted:withCompletionHandler:
sessionForDiscretionaryStatus:
sessionHasOutstandingTasks
sessionID
sessionIdentifier
sessionPath:forBundleID:
sessionSendsLaunchEvents
setAVAssetDownloadToken:
setAVAssetURL:
setAVURLAsset:
setActiveTasksLock:
setAdditionalProperties:
setAllowsCellularAccess:
setAllowsConstrainedNetworkAccess:
setAllowsExpensiveNetworkAccess:
setArgs:
setAssetArtworkData:
setAssetTitle:
setAttributes:ofItemAtPath:error:
setBasePriority:
setBasePrioritySetExplicitly:
setBodyData:
setBundleID:
setBundleIdentifier:
setByAddingObject:
setBytesPerSecondLimit:
setBytesPerSecondLimit:forTaskWithIdentifier:
setBytesSent:
setChallenge:
setClass:forClassName:
setCode:
setConfiguration:
setConnected:
setConnectionProxyDictionary:
setContinueLoad:
setCountOfBytesClientExpectsToReceive:
setCountOfBytesClientExpectsToSend:
setCountOfBytesExpectedToReceive:
setCountOfBytesExpectedToSend:
setCountOfBytesReceived:
setCountOfBytesSent:
setCountOfBytesWritten:
setCreationTime:
setCredential:
setCredential:forProtectionSpace:
setCurrentRequest:
setCurrentRequestDelay:
setDaemonWorkState:
setDefaultCredential:forProtectionSpace:
setDelegate:
setDelegate:queue:
setDelegateImplementsDidReceiveResponse:
setDelegateImplementsSessionAuthChallenge:
setDelegateImplementsTaskAuthChallenge:
setDelegateImplementsWillPerformRedirection:
setDelegateImplementsWillSendRequest:
setDescription:forTask:
setDestinationURL:
setDisablesRetry:
setDiscretionary:
setDiscretionaryOverride:
setDiscretionaryOverride:forTaskWithIdentifier:
setDomain:
setDownloadFileURL:
setDownloadSession:
setEarliestBeginDate:
setEndowmentNamespaces:
setError:
setEstablishedConnection:
setEvents:
setExpectedProgressTarget:
setExpectedProgressTarget:forTaskWithIdentifier:
setExpectingResumeCallback:
setExportedInterface:
setExportedObject:
setExtractorDelegate:
setFileURL:
setHTTPAdditionalHeaders:
setHTTPBodyStream:
setHTTPCookieStorage:
setHTTPMaximumConnectionsPerHost:
setHasBeenCalled:
setHasBodyStream:
setHasBytesSent:
setHasCode:
setHasContinueLoad:
setHasDelegateImplementsDidReceiveResponse:
setHasDelegateImplementsSessionAuthChallenge:
setHasDelegateImplementsTaskAuthChallenge:
setHasDelegateImplementsWillPerformRedirection:
setHasDelegateImplementsWillSendRequest:
setHasDisposition:
setHasHasBodyStream:
setHasIdsPriority:
setHasPort:
setHasReason:
setHasSequenceNumber:
setHasShouldCancel:
setHasStarted:
setHasStreamErrorCode:
setHasStreamErrorDomain:
setHasSupportsRedirects:
setHasTaskIdentifier:
setHasTaskSequenceNumber:
setHasTotalBytesSent:
setHasVersion:
setHeaderData:
setHost:
setIdentifier:
setInSyncBubble:
setInitializedWithAVAsset:
setInstalledAssetVersion:
setInterruptionHandler:
setInvalidateReply:
setInvalidationHandler:
setIsInTransitionalDiscretionaryPeriod:
setIsSpringBoardApp:
setLaunchUUID:
setLinkRequirementsForPeer:packetsPerSecond:inputBytesPerSecond:outputBytesPerSecond:
setLoadingPoolPriority:forTaskWithIdentifier:
setLoadingPriority:
setLowThroughputTimerRetryCount:
setMessage:
setMonitorTaskLock:
setMonitorTaskSet:
setNetworkServiceType:
setObject:forKey:
setObject:forKeyedSubscript:
setObliterationCompletion:
setOptions:
setOriginalRequest:
setPath:
setPersonaUniqueString:
setPort:
setPredicates:
setPreferInfraWiFi:
setPriority:
setPriority:forTCPConnectionWithTaskIdentifier:
setPriority:forTaskWithIdentifier:
setPrivileged:
setProgressTimerRunning:
setProperty:forKey:
setPropertyOnStreamWithIdentifier:propDict:propKey:withReply:
setQueue:
setReason:
setReceivedData:
setRequest:
setRespondedToWillBeginDelayedRequestCallback:
setResponse:
setResumedAndWaitingForEarliestBeginDate:
setRetryCount:
setRetryError:
setSequenceNumber:
setSession:
setSessionIdentifier:
setSharedContainerIdentifier:
setShouldCancel:
setShouldCancelOnDisconnect:
setShouldUseExtendedBackgroundIdleMode:
setSkip_download_unlink:
setSocketUUID:
setStartTime:
setStartedUserInitiated:
setState:
setStateDescriptor:
setStreamErrorCode:
setStreamErrorDomain:
setSupportsRedirects:
setSuspendCount:
setTLSMaximumSupportedProtocolVersion:forTaskWithIdentifier:
setTLSMinimumSupportedProtocolVersion:forTaskWithIdentifier:
setTLSSessionCachePrefix:
setTask:
setTaskDescription:
setTaskIdentifier:
setTaskInfo:
setTaskKind:
setTaskSequenceNumber:
setTasksEnqueued:
setTasksInitialized:
setTemporaryDestinationURL:
setThroughputTimerForCurrentInterval
setTimeoutIntervalForRequest:
setTimeoutIntervalForResource:
setTotalBytesExpectedToSend:
setTotalBytesSent:
setType:
setURLCache:
setURLCredentialStorage:
setUpdateHandler:
setUserInfo:
setUuidString:
setValues:
setVersion:
setWaitsForConnectivity:
setWithObject:
setXPCConnection:
setXpcConn:
set_DuetActivityProperties:
set_IDSMessageTimeout:
set_TCPAdaptiveReadTimeout:
set_TCPAdaptiveWriteTimeout:
set_TLSMaximumSupportedProtocolVersion:
set_TLSMinimumSupportedProtocolVersion:
set_allowsHSTSWithUntrustedRootCertificate:
set_allowsPowerNapScheduling:
set_allowsReachabilityCheck:
set_allowsTLSECH:
set_allowsTLSFallback:
set_allowsTLSFalseStart:
set_allowsVirtualInterfaces:
set_alwaysPerformDefaultTrustEvaluation:
set_authenticatorConfiguredViaTaskProperty:
set_authenticatorStatusCodes:
set_backgroundPublishingURL:
set_backgroundTrailers:
set_bytesPerSecondLimit:
set_clientIsNotExplicitlyDiscretionary:
set_connectionCachePurgeTimeout:
set_connectionPoolName:
set_directoryForDownloadedFiles:
set_disallowCellular:
set_discretionaryOverride:
set_doesSZExtractorConsumeExtractedData:
set_duetPreClearedMode:
set_duetPreauthorized:
set_expectedProgressTarget:
set_extractor:
set_extractorPreparedForExtraction:
set_forcedNetworkServiceType:
set_hasSZExtractor:
set_legacySocketStreamProperties:
set_loadingPriority:
set_loggingPrivacyLevel:
set_longLivedConnectionCachePurgeTimeout:
set_maximumWatchCellularTransferSize:
set_metrics:
set_multipathAlternatePort:
set_nw_activity:
set_onBehalfOfPairedDevice:
set_pathToDownloadTaskFile:
set_pidForHAR:
set_prefersInfraWiFi:
set_preventsIdleSleepOnceConnected:
set_priority:
set_reportsDataStalls:
set_requiresClientToOpenFiles:
set_requiresPowerPluggedIn:
set_requiresSustainedDataDelivery:
set_respectsAllowsCellularAccessForDiscretionaryTasks:
set_shouldSkipPreferredClientCertificateLookup:
set_socketStreamProperties:
set_sourceApplicationAuditTokenData:
set_sourceApplicationBundleIdentifier:
set_sourceApplicationSecondaryIdentifier:
set_suspensionThreshhold:
set_tcpConnectionPoolName:
set_timingDataOptions:
set_tlsSessionCachePrefix:
set_tlsTrustPinningPolicyName:
set_uniqueIdentifier:
set_updatedStreamingZipModificationDate:
set_watchExtensionBundleIdentifier:
setupArchiveTimer
setupDASPropertiesOnTask:taskInfo:discretionaryStatus:
setupDownloadDirectory
setupNewClassMappingsForUnarchiver
setupThroughputMonitorForWrapper:taskInfo:identifier:
setupTransitionalDiscretionaryPeriodTimer
sharedConnection
sharedContainerIdentifier
sharedCredentialStorage
sharedDaemon
sharedInstance
sharedLauncher
sharedManager
sharedMonitor
sharedService
sharedSpringBoard
sharedStakeholder
sharedUserEventAgentConnection
shouldCancel
shouldCancelOnDisconnect
shouldElevateDiscretionaryPriority
shouldRetainBTLinkAssertion
shouldRetainInfraWiFi
socketUUID
sortedArrayUsingComparator:
sourceApplicationBundleIdentifier
springBoardApplicationExistsWithIdentifier:
springboardApplicationWithBundleIdentifier:
stakeholder
standardUserDefaults
start
startAVAssetDownloadSessionWithTaskIdentifier:
startBridgingUMTask:
startCatalogDownload:then:
startDownload:
startLoadingMetadata
startMonitoringBundleID:
startMonitoringDynamicStore
startResourceTimer
startThroughputMonitoring
startThroughputMonitoringIfAppropriate
startTransitionalDiscretionaryPeriodTimer
startUMTask:taskInfo:
startedUserInitiated
state
status
statusCode
stop
stopAVAssetDownloadSessionWithTaskIdentifier:
stopMonitoringBundleID:
stopMonitoringDynamicStore
stopThroughputMonitoring
storagePartitionIdentifier
streamError
streamErrorDomain
streamStatus
streamTaskWithHostName:port:
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringWithCapacity:
stringWithFormat:
subarrayWithRange:
substringWithRange:
superclass
supplyBytes:withCompletionBlock:
supportsRedirects
supportsSecureCoding
supportsWakes
suspendCount
suspendStreamWithCompletionBlock:
suspendTaskWithIdentifier:
synchronousRemoteObjectProxyWithErrorHandler:
takeAssertionForBundleID:sessionID:sessionUUID:pid:
takePowerAssertion
targetWithPid:
task
taskIdentifier
taskInfo
taskKind
taskMessageForIdentifier:
taskMetrics
taskSequenceNumber
taskShouldResume:
taskShouldSuspend:
taskState
taskTransferredData:countOfBytesReceived:
taskWillResume
taskWithIdentifier:didCompleteWithError:
taskWithName:reason:
taskWithName:reason:forBundleID:
tasksArchivePath
tasksEnqueued
tasksHaveBeenEnqueued
tasksInitialized
temporaryDestinationURL
terminateExtractorWithError:completion:
terminateStreamWithError:completionBlock:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeoutIntervalForRequest
timeoutIntervalForResource
totalBytesExpectedToSend
totalBytesSent
trustPassesExtendedValidation:
type
unarchivedObjectOfClasses:fromData:error:
unionSet:
uniqueIdentifier
unsignedIntegerValue
unsignedLongLongValue
updateConfiguration:
updateCurrentRequest:
updatePriorityForTaskID:
updateStreamingZipModificationDate:
updateTaskInfoBasedOnCurrentDiscretionaryStatus:
uploadContent
uploadTaskWithRequest:originalRequest:fromFile:identifier:uniqueIdentifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:sandboxExtensionData:identifier:uniqueIdentifier:potentialCredentials:reply:
uploadTaskWithStreamedRequest:
user
userInfo
userPersonaUniqueString
usesContainerManagerForAVAsset
uuid
uuidString
valueForEntitlement:
valueWithBytes:objCType:
valueWithCMTimeRange:
verifyAndUpdateIncomingSequenceNumber:forPriority:
waitUntilDeviceIsUnlocked
wakeForSessionIdentifier:withSessionUUID:wakeRequirement:
wakeUpApp:forSession:withSessionUUID:
wakeUpClient:
wakeUpExtension:forSession:withSessionUUID:wakeRequirement:
willRetryBackgroundDataTask:withError:transactionMetrics:
willSwitchToUser:
willSwitchUser
withWorkQueue:
wrapperTransferredData:
wrapperWillSuspend
write:maxLength:
writeData:timeout:completionHandler:
writeTo:
writeToFile:atomically:
zone
PDURLSessionProxyOpenSocket
NSCopying
NDPowerlogReporter
PDURLSessionProxyDidReceiveChallengeReply
PDURLSessionProxyCreateSession
PDURLSessionProxySetTaskPriority
PDURLSessionProxyMessageInfo
PDURLSessionProxyService
IDSServiceDelegate
NSObject
PDURLSessionProxyDataTaskWithRequestReply
PDURLSessionProxyServerService
PDURLSessionProxyServerDelegate
PDBluetoothCompanionLinkAssertion
CBScalablePipeManagerDelegate
PDURLSessionProxyDataTaskWithRequest
PDURLSessionProxyGetAuthHeaders
NDAVAssetDownloadSessionWrapper
AVAssetDownloadSessionDelegate
NDSessionManager
NDBackgroundSessionManagerProtocol
NDBackgroundSessionDelegate
NDBackgroundSession
NDBackgroundSessionProtocol
NDCallbackQueueDelegate
NSURLSessionDataDelegatePrivate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegatePrivate
NSURLSessionDownloadDelegate_Private
NSURLSessionDelegate_Internal
NDCredentialStorageDelegate
NDApplicationObserver
PDURLSessionProxyStartedUp
PDURLSessionProxyGetAuthHeadersReply
PDURLSessionProxyDidReceiveData
PDURLSessionProxyDidReceiveResponse
PDURLSessionProxyResumeTask
PDURLSessionProxySetTaskDescription
NDStatusMonitor
NDUserEventAgentConnection
NSSecureCoding
NSCoding
PDURLSessionProxyCommon
NSURLSessionProxyAdditions
PDURLSessionProxySocketDisconnected
NDFileUtilities
PDURLSessionProxyOpenSocketReply
PDURLSessionProxyResponse
TLDMobileAssetManager
NDApplication
NDSpringBoardApplication
NDSpringBoardAppObserver
NDChronoKitExtension
NDChronoKitExtensionObserver
NDCloudContainer
BRContainerObserver
NDFPProvider
FPProviderObserver
PDURLSessionProxyDidReceiveResponseReply
PDURLSessionProxyWillPerformRedirectionReply
PDURLSessionProxyRequest
PDURLSessionProxyCredential
PDURLSessionProxyTaskWaiting
NDUserSyncStakeholder
UMUserSyncStakeholder
UMUserSwitchStakeholder
PDURLSessionProxyDidReceiveDataReply
PDURLSessionProxySuspendTask
PDURLSessionProxyInvalidateSession
NDCredentialStorage
PDURLSessionProxyWillSendRequest
PDURLSessionProxyOpenBodyStream
PDURLSessionProxyServer
NSURLSessionStreamDelegate_Internal
NSURLSessionStreamDelegate
PDURLSessionProxyDidSendBodyData
PDURLSessionProxyCancelTask
PDURLSessionProxyTaskMessage
NDTaskMonitor
PDURLSessionProxyDidReceiveChallenge
PDURLSessionProxyError
Daemon
LSApplicationWorkspaceObserverProtocol
NSXPCListenerDelegate
NDSessionManagerDelegate
PDURLSessionProxyUploadBodyData
NDSpringBoard
NDChronoKitLauncher
NDAVThroughputMonitor
PDURLSessionProxySessionMessage
PDURLSessionProxyTaskWillBeRetried
PDURLSessionProxyConnectedToServer
PDURLSessionProxyAuthChallenge
STExtractor
SZExtractor
PendingCallback
NDCallbackQueue
PDURLSessionProxySessionBecameInvalid
NDAVAdditions
NDAVBackgroundSession
NDAVAssetDownloadSessionWrapperDelegate
PDURLSessionProxyTaskCompleted
PDURLSessionProxyWillPerformRedirection
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8I16
v20@0:8B16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
I16@0:8
v16@0:8
@"NSString"
@"PDURLSessionProxySessionMessage"
{?="port"b1}
@24@0:8@16
v32@0:8q16q24
@"NSURLSessionTask"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@"PDURLSessionProxyCredential"
@"PDURLSessionProxyTaskMessage"
{?="disposition"b1}
@"NSData"
{?="delegateImplementsDidReceiveResponse"b1"delegateImplementsSessionAuthChallenge"b1"delegateImplementsTaskAuthChallenge"b1"delegateImplementsWillPerformRedirection"b1"delegateImplementsWillSendRequest"b1"supportsRedirects"b1}
{?="priority"b1}
@28@0:8@16S24
S16@0:8
v20@0:8S16
@"PBCodable"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v24@0:8@?16
v28@0:8@16B24
q32@0:8@16S24B28
q24@0:8@16
Q24@0:8q16
B32@0:8Q16q24
v64@0:8@16S24@28@36B44q48@?56
v36@0:8@16S24@?28
v28@0:8@16S24
v44@0:8@16@24S32@36
v36@0:8@16B24@28
@"IDSService"
@"NSMutableDictionary"
@"NSMutableSet"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"PDURLSessionProxyServer"16
@"NSObject<OS_dispatch_source>"
@"PDBluetoothCompanionLinkAssertion"
v24@0:8@"CBScalablePipeManager"16
v40@0:8@"CBScalablePipeManager"16@"NSString"24@"NSError"32
v32@0:8@"CBScalablePipeManager"16@"NSString"24
v32@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24
v40@0:8@"CBScalablePipeManager"16@"CBScalablePipe"24@"NSError"32
@"NSUUID"
@"CBScalablePipeManager"
v24@0:8Q16
@"PDURLSessionProxyRequest"
{?="taskSequenceNumber"b1}
@"PDURLSessionProxyResponse"
v136@0:8@16{?={?=qiIq}{?=qiIq}}24@72{?={?=qiIq}{?=qiIq}}80@128
v40@0:8@16Q24Q32
v24@0:8@"AVAssetDownloadSession"16
v32@0:8@"AVAssetDownloadSession"16@"NSError"24
v32@0:8@"AVAssetDownloadSession"16@"AVMediaSelection"24
v136@0:8@"AVAssetDownloadSession"16{?={?=qiIq}{?=qiIq}}24@"NSArray"72{?={?=qiIq}{?=qiIq}}80@"AVMediaSelection"128
v40@0:8@"AVAssetDownloadSession"16Q24Q32
v32@0:8@"AVAssetDownloadSession"16@"NSArray"24
@56@0:8@16@24@32@40@48
@"AVURLAsset"
@"AVAssetDownloadSession"
@"<NDAVAssetDownloadSessionWrapperDelegate>"
@"NSURL"
@"NSDictionary"
v56@0:8@16@24@32@40@?48
v32@0:8@16@?24
v56@0:8@"NSURLSessionConfiguration"16@"<NDBackgroundSessionClient>"24@"NSURL"32@"NSDictionary"40@?<v@?@"<NDBackgroundSessionProtocol>"@"NSDictionary"B>48
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?>16
v32@0:8@"NDBackgroundSession"16@?<v@?>24
@36@0:8@16@24B32
@24@0:8^B16
B32@0:8@16@24
@?16@0:8
@"NSXPCConnection"
@"<NDSessionManagerDelegate>"
v64@0:8@16@24@32Q40@48@?56
v80@0:8@16@24@32@40Q48@56@64@?72
v56@0:8@16@24Q32@40@?48
v48@0:8@16Q24@32@?40
v32@0:8Q16@?24
v32@0:8Q16@24
v32@0:8@16Q24
v32@0:8q16Q24
v32@0:8d16Q24
v32@0:8Q16Q24
v28@0:8S16Q20
v48@0:8Q16@24@32@?40
v108@0:8Q16@24@32@40@48@56@64Q72@80Q88B96@?100
v88@0:8Q16@24@32@40@48@56Q64@72@?80
v64@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSString"32Q40@"NSUUID"48@?<v@?B>56
v80@0:8@"NSURLRequest"16@"NSURLRequest"24@"NSURL"32@"NSData"40Q48@"NSUUID"56@"NSDictionary"64@?<v@?B>72
v56@0:8@"NSURLRequest"16@"NSURLRequest"24Q32@"NSUUID"40@?<v@?B>48
v48@0:8@"NSData"16Q24@"NSUUID"32@?<v@?B>40
v32@0:8Q16@?<v@?@"NSData">24
v32@0:8Q16@"NSDictionary"24
v32@0:8@"NSString"16Q24
v24@0:8@"NSString"16
v48@0:8Q16@"NSDictionary"24@"NSString"32@?<v@?B>40
v108@0:8Q16@"NSURL"24@"NSURL"32@"NSURL"40@"NSString"48@"NSData"56@"NSDictionary"64Q72@"NSUUID"80Q88B96@?<v@?B>100
v88@0:8Q16@"NSArray"24@"NSString"32@"NSData"40@"NSDictionary"48@"NSString"56Q64@"NSUUID"72@?<v@?B>80
v24@0:8q16
@24@0:8Q16
v24@0:8@"NSError"16
v32@0:8@"NSError"16@?<v@?q@"NSURLCredential">24
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"16@0:8
@"NSString"24@0:8Q16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32@?<v@?>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
v40@0:8@16@24q32
v36@0:8@16@24B32
v36@0:8@16@24i32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24i32
@32@0:8@16@24
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURLResponse"32
@"NSURL"32@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24
v44@0:8@16@24i32@?36
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary"@"NSURLRequest">40
v44@0:8@"NSURLSession"16@"NSString"24i32@?<v@?i>36
v24@0:8@"NDApplication"16
d24@0:8d16
@28@0:8@16B24
@84@0:8@16@24B32@36@44@52@60@68@76
@20@0:8B16
@24@0:8q16
@32@0:8@16^B24
B40@0:8@16@24@32
v48@0:8@16Q24@32B40B44
B20@0:8B16
q20@0:8B16
v28@0:8Q16B24
@32@0:8@16Q24
v44@0:8@16@24Q32B40
B24@0:8^{__SecTrust=}16
@"NSURLSession"
@"NDCredentialStorage"
@"NDApplication"
@"NSMutableArray"
@"NDCallbackQueue"
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"
@"<NDBackgroundSessionDelegate>"
{?="version"b1}
{?="continueLoad"b1}
v32@0:8@?16Q24
v32@0:8@?16q24
v32@0:8^{__SCDynamicStore=}16^{__CFArray=}24
^{__CFRunLoopSource=}
v40@0:8@?16@24@32
@"NSObject<OS_xpc_object>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v40@0:8@16^@24^@32
#24@0:8S16B20
@32@0:8#16@24
q16@0:8
{?="streamErrorCode"b1"streamErrorDomain"b1}
B40@0:8@16@24q32
v24@0:8:16
d16@0:8
v24@0:8d16
@"NDSpringBoardApplication"
@"BRContainersMonitor"
@"FPProviderMonitor"
{?="reason"b1}
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"UMUserSyncTask"
{?="shouldCancel"b1}
@"<NDCredentialStorageDelegate>"
{?="hasBodyStream"b1}
v32@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionStreamTask"24@"NSInputStream"32@"NSOutputStream"40
@48@0:8@16@24Q32@40
q28@0:8Q16B24
v40@0:8@16Q24@?32
@"NSURLSessionConfiguration"
@"<PDURLSessionProxyServerDelegate>"
{?="bytesSent"b1"totalBytesExpectedToSend"b1"totalBytesSent"b1}
{?="taskIdentifier"b1}
@80@0:8@16@24@32@40@48q56Q64@72
@"__NSCFURLSessionTaskInfo"
@"PDURLSessionProxyAuthChallenge"
{?="code"b1"version"b1}
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@"NDSessionManager"16@"NSString"24@?<v@?>32
@"NDUserSyncStakeholder"
B44@0:8@16@24@32i40
@"RBSProcessMonitor"
B48@0:8@16@24@32q40
v48@0:8@16@24@32q40
@"CHSNSURLSessiondService"
@56@0:8@16@24q32Q40@48
@"NDAVAssetDownloadSessionWrapper"
{?="idsPriority"b1"sequenceNumber"b1}
@"PDURLSessionProxyError"
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
@"<STExtractorDelegate>"16@0:8
v24@0:8@"<STExtractorDelegate>"16
@"<SZExtractorDelegate>"16@0:8
v24@0:8@"<SZExtractorDelegate>"16
@36@0:8i16Q20@28
@"NSArray"
v32@0:8@16q24
@"<NDCallbackQueueDelegate>"
v48@0:8@16Q24Q32Q40
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSError"24
v48@0:8@"NDAVAssetDownloadSessionWrapper"16Q24Q32Q40
v56@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSValue"24@"NSArray"32@"NSValue"40@"NSDictionary"48
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSDictionary"24
v32@0:8@"NDAVAssetDownloadSessionWrapper"16@"NSArray"24
v40@0:8@16@24Q32
q24@0:8q16
B24@0:8Q16
@"NSMapTable"
Failure trying to unarchive file at %@ error: %@ [%d]
Error %d renaming item at %@ to %@
Error %d renaming item at %@ to %@. Won't try to unarchive.
SIGTERM received, shutting down.
PDURLSessionProxyService setting preferInfraWiFi to NO
%@: Devices unpaired
%@ sent startup message with identifier %@
sendProtobuf: returned NO for PDURLSessionProxy startup message, error %@ [%ld]
%@ Connected to post PDURL device - resetting state
%@ Updated device state connected = %c
PDURLSessionProxyService setting preferInfraWiFi to %c
Received a message of priority %ld with lower sequence number %llu than existing sequence number %llu. Dropping message.
%@::%@ type = %u, connected = %c, isReply = %c, sourceApplication = %@, msgTO = %ld
Unable to determine source application for message
Timed out waiting for reply for message, identifier = %{public}@, type = %u
Failed to send message! Type = %u, error = %@ [%ld]
%{public}@ sent NSURLSessionProxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu, result = %c
Subclass did not handle message %@ of type %u
Subclass did not handle message send failure for message %@
Received a reply with identifier %@ but don't have a corresponding reply block
%@::%@ outgoingResponseIdentifier = %{public}@, type = %u, isResponse = %c, data length = %lu
%@ received protobuf of type %u which could not be decoded! isResponse = %c, data length = %lu
Received PDURLSession Startup message with launchUUID %@
Received PDURLSessionProxy message with new launchUUID %@
Dropping NSURLSessionProxy message with old launchUUID %@
Received PDURLSessionProxy Startup message (without a launchUUID)
%{public}@ receiving NSURLSession proxy message, identifier = %{public}@, type = %u, isReply = %c, data length = %lu
Incoming (non-reply) message with identifier %{public}@ has priority %lld and sequence number %llu
%@::%@ success = %c, identifier = %{public}@, error = %@ [%ld]
Failed to send PDURLSessionProxy startup message, error %@
%@: activeAccountsChanged: %@
%@: didSwitchActivePairedDevice
PDURLSessionProxyServerService received CreateSession message for identifier %@ with existing UUID %@. Ignoring message.
PDURLSessionProxyServerService received CreateSession message for identifier %@ with UUID %@
PDURLSessionProxyServerService received message of type %u for session %@
PDURLSessionProxyServerService received Invalidate message for unknown session identifier %@, replying with BecameInvalid message
NSURLSessionProxy message of type %u received for unknown session with identifier %@
Received NSURLSessionProxy message of type %u without a session identifier
%{public}@: Relinquishing link requirements for %@
%{public}@: Releasing %{public}@
%{public}@: Acquiring...
%{public}@: Invalidating...
%p Disavowing AVAssetDownloadSession
Taking power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Failed to take power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Releasing power assertion for AVAssetDownloadSessionWrapper %llu with taskIdentifier %lu
Starting AVAssetDownloadSession
AVAssetDownloadSession download complete
AVAssetDownloadSession download failed
AVAssetDownloadSession download finished for media selection
NDCacheDeleteFixUpDirectoriesOnStartup enumeration failed at %@ error=%@
Informing CacheDelete purgable bytes %lld on %@
Purged %lld bytes on volume %@.  CacheDelete requested %lld.
CacheDelete callback registration succeeded.
CacheDelete callback registration failed!
NDCacheDeleteFixUpDirectoriesInContainer enumeration failed at %@ error=%@
NDCacheDeletePurgableItemsForVolume enumeration failed at %@ error=%@
NDCacheDeleteGetPurgableItemsInContainer enumeration failed at %@ error=%@
CacheDelete request - Purged %@ [%zu bytes]
Too many sessions for app <%{public}@> (%zu > 1024)
Ignoring stale session (inactive for %fs) with identifier: %@ for bundle id: %@
Not restoring session with identifier: %@ for bundleID: %@ since it does not have any tasks
Coudn't restore session with identifier: %@ for bundle id: %@
Missing or invalid configuration.plist for bundleID: %@, sessionID: %@. Removing session directory
No directory for bundleID: %@, sessionID: %@
Launching application %@ since we could not restore session %@
Capturing boost activity from %@ unnecessary
Capturing boost activity from %@
Ending boost activity from %@
Client %@ tried to specify a shared container that it cannot access: %@
Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
Client tried to set _connectionPoolName but is missing the %@ entitlement
Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
Client tried to set _duetPreauthorized but is missing the %@ entitlement
Client tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
Client specified shared container identifier %@. %@ can access: %d
NDSession <%{public}@>.<%@>.<%@>: already has a connected client, returning nil proxy object to client
Connected client is an extension is attempting to a connect to a session without a valid shared data container
NDSession <%{public}@>.<%@>.<%@>: reconnecting existing session
Connected client is an extension and did not specify a valid shared container identifier
Creating session with identifier: %@ for bundle id: %@
NDSession <%{public}@>.<%@>.<%@>: created successfully
Coudn't create session with identifier: %@ for bundle id: %@
NDSession <%{public}@>.<%@>.<%@>: instructed to send pending callbacks
Asked to send pending callbacks for session %@ that we have no record of. This shouldn't happen
releaseAssertionForSession: %@
NDSession <%{public}@>.<%@>.<%@>: notified it is OK to send pending callbacks
Signalled that it is okay to send pending callbacks for session %@ that we have no record of. This shouldn't happen
obliterateAllSessions for bundleID %@
NDSession <%{public}@>.<%@>.<%@>: removing session
Obliterating session manager for bundle ID: %@
NDSession <%{public}@> Client %@ is acting on behalf of cloud documents container with container id: %@ and bundle id: %@
NDSession <%{public}@> Client %@ is acting on behalf of file provider id: %@ and bundle id: %@
NDSession <%{public}@> Client %@ is an independent extension
NDSession <%{public}@> Client %@ is acting on behalf of application %@, impersonatingSpringBoardApp: %d
NDSession <%{public}@> Client %@ is a SpringBoard application
NDSession <%{public}@> Client %@ is a daemon or non-SpringBoard application
NDSession <%{public}@> Couldn't find out download directory for %@. Not creating session
NDSession <%{public}@> Session <%{public}@> is for <%@>.<%@> using resource timeout: %f, request timeout: %f allowsCellularAccess: %d, allowsExpensiveAccess: %d, _sourceApplicationBundleIdentifier: %@, _sourceApplicationSecondaryIdentifier: %@
NDSession <%{public}@> Using XPC connection %@ for client %@ with identifier %@ and PID %d
NDSession <%{public}@> XPC connection is to PlugIn %@ for session <%@>.<%@>
NDSession <%{public}@> client %@ connected result (%c), XPC(%c) proxy(%c) for %@
NDSession <%{public}@> notified associated application %@ was suspended, XPC(%c)
NDSession <%{public}@> Application %@ was reinstalled, adjusting download paths
NDSession <%{public}@> Couldn't find out download directory for re-installed application %@. It must not have been re-installed properly. Obliterating session
NDSession <%{public}@> Cleaning up
NDSession <%{public}@> Obliterating session: <%@>.<%@>
NDSession <%{public}@> %{public}@ %f seconds past start time, new delay: %f, new window: %f
NDSession <%{public}@> %{public}@ potentially discretionary, re-scheduling, was discretionary: %d, is now discretionary: %d
NDSession <%{public}@> Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _connectionPoolName but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
NDSession <%{public}@> Client tried to set _duetPreauthorized but is missing the %@ entitlement
NDSession <%{public}@> Client tried to set _maximumWatchCellularTransferSize but is missing the necessary entitlement
NDSession <%{public}@> Client tried to set _pathToDownloadTaskFile but is not allowed to create %@: %{errno}d
NDSession <%{public}@> Session <%@>.<%@> download path %@ did not exist, recreating.
NDSession <%{public}@> %{public}@ couldn't create new task. task: %@, path: %@
NDSession <%{public}@> %{public}@ couldn't create new task becuase adjusted request is nil, taskInfo.currentRequest = %@
NDSession <%{public}@> %{public}@ error creating resume data: %@
NDSession <%{public}@> %{public}@ could not create resume data. The server might not support resumable downloads. Will retry full download
NDSession <%{public}@> %{public}@ download created from resume data
NDSession <%{public}@> %{public}@ is being restored as completed with download file still at %@
NDSession <%{public}@> %{public}@ restoring, which had never been started, will resume implicitly
NDSession <%{public}@> %{public}@ restored but never started, terminating with timeout
NDSession <%{public}@> Download directory for bundle %@ has moved to %@, but saved download file path is %@. Need to fix download path
NDSession <%{public}@> New download path: %@
NDSession <%{public}@> %{public}@ completed with error %@ [%ld] (was active before nsurlsessiond exit)
NDSession <%{public}@> Couldn't recreate existing task with identifier: %@ in session: <%@>.<%@>
NDSession <%{public}@> Exception caught while restoring a task: %@
Too many tasks for app session <%{public}@>.<%@> (%zu > 512)
NDSession <%{public}@> %{public}@ will retry after %lld seconds
NDSession <%{public}@> has %lu outstanding tasks
NDSession <%{public}@> client %@ is active result (%c), XPC(%c) proxy(%c) for %@
NDSession <%{public}@> %{public}@ not resumed but client disconnected, terminating it with timeout
NDSession <%{public}@> %{public}@ not resumed but client disconnected, resuming it implicitly
NDSession <%{public}@> client %@ disconnected, XPC(%c) proxy(%c) for %@
NDSession <%{public}@> Invoking client reconnection completion block
NDSession <%{public}@> Delivering pending events immediately for client session: <%@>.<%@>. Signalled already: %d, isHandlingBackgroundSession: %d
NDSession <%{public}@> Waiting for notification to deliver pending events for client session: <%@>.<%@>
NDSession <%{public}@> Received signal to deliver pending events for client session: <%@>.<%@>
NDSession <%{public}@> Delivering pending events for client session: <%@>.<%@>
NDSession <%{public}@> Application %@ is not handling a background URLSession but we still received a signal to deliver pending events
NDSession <%{public}@> Session: %@ get tasks for reconnection: %@
NDSession <%{public}@> %{public}@ for %@ is overriding discretionary status by request - forcing to %c
NDSession <%{public}@> %{public}@ for %@ is overriding discretionary status - forcing to %c
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary because the connected client is an extension
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary, since nsurlsessiond is running in EDU sync mode
NDSession <%{public}@> %{public}@ current discretionary status for %@ is discretionary (opt-in: %d)
NDSession <%{public}@> %{public}@ current discretionary status for %@ is non-discretionary
NDSession <%{public}@> %{public}@ should not begin before %@
NDSession <%{public}@> %{public}@ can now begin - earliest begin date satisfied
NDSession <%{public}@> %{public}@ no longer has a valid task or taskInfo, no need to begin
NDSession <%{public}@> %{public}@ ignoring stale delay begin timer
NDSession <%{public}@> %{public}@ can begin immediately - begin date is in past
NDSession <%{public}@> %{public}@ has not requested a begin delay
NDSession <%{public}@> %{public}@ cannot handle delayed request callback because task: %@ or taskInfo: %@ is nil
NDSession <%{public}@> %{public}@ already replied to delayed request callback - not calling again
NDSession <%{public}@> %{public}@ receiving delayed request callback
NDSession <%{public}@> %{public}@ client is not running and doesn't support wakes, continuing load for delayed request
NDSession <%{public}@> %{public}@ using new request from delayed request callback
NDSession <%{public}@> %{public}@ will be canceled due to delayed request callback
NDSession <%{public}@> %{public}@ continuing load from delayed request callback
NDSession <%{public}@> %{public}@ skipping delayed request callback - delegate not implemented
NDSession <%{public}@> %{public}@ resuming
NDSession <%{public}@> %{public}@ will begin
NDSession <%{public}@> %{public}@ cannot resume because task: %@ or taskInfo: %@ is nil
NDSession <%{public}@> %{public}@ suspending
NDSession <%{public}@> Consumed sandbox extension for file %@, extension = %lld
NDSession <%{public}@> Failed to consume sandbox extension %s for fileURL %@
NDSession <%{public}@> Error copying upload file: %@ [%ld]
NDSession <%{public}@> Error checking resource value: %@ [%ld]
NDSession <%{public}@> File is a symlink
NDSession <%{public}@> Released sandbox extension %lld
NDSession <%{public}@> Created stream with file descriptor: %d
NDSession <%{public}@> Encountered error %@ during task completion callback delivery
NDSession <%{public}@> Encountered error %@ error delivering auth challenge to client, performing default handling
NDSession <%{public}@> %{public}@ skipping acknowledgement teardown since it's not actually complete
NDSession <%{public}@> Not waking up client %@ since wake request is unnecessary
NDSession <%{public}@> Not waking up client %@ since sessionSendsLaunchEvents is NO
NDSession <%{public}@> Not waking up client %@ since it doesn't support app wakes
NDSession <%{public}@> Not waking up client %@ since session is obliterated
NDSession <%{public}@> Not waking up client %@ since it's already connected
NDSession <%{public}@> Not waking up client %@ since background updates are not enabled
NDSession <%{public}@> Waking up the client app: %@
NDSession <%{public}@> Failed to wake app: %@
NDSession <%{public}@> %{public}@ adding delay of %f
NDSession <%{public}@> %{public}@ is duet preauthorized
NDSession <%{public}@> %{public}@ enqueueing
NDSession <%{public}@> Received a background download request from unsafe resume data from %@
NDSession <%{public}@> Couldn't create task or taskInfo: task = %@, taskInfo = %@
NDSession <%{public}@> Task <%{public}@>.<%lu> downloadTaskWithRequest: %@
NDSession <%{public}@> Received an unsafe request for background download: %@ from %@
NDSession <%{public}@> Task <%{public}@>.<%lu> uploadTaskWithRequest: %@ fromFile: %@
NDSession <%{public}@> Received a background upload request for a file that the client cannot read: %@ from %@
NDSession <%{public}@> Task <%{public}@>.<%lu> dataTaskWithRequest: %@
NDSession <%{public}@> %{public}@ received resume data
NDSession <%{public}@> %{public}@ cancelTaskWithIdentifier
NDSession <%{public}@> %{public}@ suspendTaskWithIdentifier
NDSession <%{public}@> %{public}@ resumeTaskWithIdentifier, props %@
NDSession <%{public}@> %{public}@ resuming, QOS(0x%x)
NDSession <%{public}@> %{public}@ setPropertyOnStreamWithIdentifier, client %@ property %@
NDSession <%{public}@> %@ tried to set the priority of a task but is missing the %@ entitlement
NDSession <%{public}@> %{public}@ setting priority to %ld
NDSession <%{public}@> %@ tried to set the loading priority of a task but is missing the %@ entitlement
NDSession <%{public}@> %{public}@ setting loading priority to %f
NDSession <%{public}@> %{public}@ setting limit of %lld bytes per second
NDSession <%{public}@> %{public}@ setting discretionaryOverrride to %c
NDSession <%{public}@> %{public}@ attempted to set discretionaryOverrride to %c but lacks required entitlement %@
NDSession <%{public}@> InvalidateWithReply: for session %@ bundle ID %@
NDSession <%{public}@> Cleaning up and invalidating immediately since there are no tasks
NDSession <%{public}@> Session %@ didBecomeInvalidWithError: %@ [%ld]
NDSession <%{public}@> Invalid trust status: %ld
NDSession <%{public}@> Extended trust validation failed
NDSession <%{public}@> %{public}@ didReceiveChallenge: %@ protection space: %@ for client %@ received auth challenge with type %@
NDSession <%{public}@> %{public}@ performing Extended Validation Trust evaluation
NDSession <%{public}@> %{public}@ Extended Validation Trust evaluation succeeded
NDSession <%{public}@> %{public}@ Extended Validation Trust evaluation failed
NDSession <%{public}@> %{public}@ client doesn't implement session-level or task-level auth challenge delegate, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client doesn't implement task-level auth challenge delegate, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and doesn't support app wakes, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and trust is valid, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ client is not running and challenge has a previousFailureCount of 0 and a proposedCredential, performing default handling for auth challenge
NDSession <%{public}@> %{public}@ modifying conditional connection properties since new request %@ is to a different host than previous request %@
NDSession <%{public}@> %{public}@ willPerformHTTPRedirection, response: %@, new request: %@
NDSession <%{public}@> %{public}@ client disconnected (error %@) with redirection outstanding, following redirect
NDSession <%{public}@> %{public}@ needs new body stream
NDSession <%{public}@> %{public}@ client disconnected (error %@) with new body stream request outstanding, providing no body
NDSession <%{public}@> %{public}@ for client %@ will be retried after error %@ - code: %ld
NDSession <%{public}@> %{public}@ failed to retry
NDSession <%{public}@> Removing client proxy due to task failure caused by app quit
NDSession <%{public}@> %{public}@ completed with error %@ [%ld]. C(%c)
NDSession <%{public}@> %{public}@ for client %@ was cancelled
NDSession <%{public}@> %{public}@ for client %@ completed with error - code: %ld
NDSession <%{public}@> %{public}@ for client %@ completed successfully
NDSession <%{public}@> %{public}@ didReceiveResponse: %@, status code: %d
NDSession <%{public}@> %{public}@ client disconnected (error %@) with didReceiveResponse outstanding, responding with a cancel disposition
NDSession <%{public}@> %{public}@ client responded to didReceiveResponse with disposition %d
NDSession <%{public}@> %{public}@ received data task didReceiveResponse callback and there is no connected client. Canceling task.
NDSession <%{public}@> %{public}@ did receive data (%lld of %lld total bytes)
NDSession <%{public}@> %{public}@ client disconnected (error %@) during didReciveData delegate
NDSession <%{public}@> %{public}@ received data and there is no connected client. Canceling task.
NDSession <%{public}@> %{public}@ became download task
NDSession <%{public}@> %{public}@ finished downloading to %@
NDSession <%{public}@> %{public}@ didResumeAtOffset: %lld expectedTotalBytes: %lld
NDSession <%{public}@> %{public}@ for client %@ _willSendRequestForEstablishedConnection
NDSession <%{public}@> Client does not implement _willSendRequestForEstablishedConnection, so using proposed request
NDSession <%{public}@> %{public}@ established a connection which requires the client to be running, but it isn't running and doesn't support app wakes. Canceling the task.
NDSession <%{public}@> Perhaps the client %@ was uninstalled?
NDSession <%{public}@> %{public}@ using proposed request since the client application is not running and doesn't support wakes
NDSession <%{public}@> %{public}@ for client %@ is waiting for connection - reason: %lld
NDSession <%{public}@> %{public}@ for client %@ conditions changed - satisfied: %d
NDSession <%{public}@> %{public}@ download for client %@ received response, status code: %d
NDSession <%{public}@> Need file descriptor for file at path %@
NDSession <%{public}@> Client %@ does not support app wakes, cannot get file descriptor for download file!
NDSession <%{public}@> Client %@ does not support app wakes, but it is still running. Will attempt to get file descriptor for download file.
NDSession <%{public}@> %{public}@ getAuthHeadersForResponse for %@ _sendsLaunchEvents=%s [_clientApplication supportsWakes]=%s
NDSession <%{public}@> %{public}@ client disconnected (error %@) when attempting to communicate with HTTP Authenticator for Client %@
NDSession <%{public}@> %{public}@ received auth headers for response, continueLoad: %d authHeaders %@ newRequest %@
NDSession <%{public}@> %{public}@ waking %@ for auth headers
NDSession <%{public}@> %{public}@ getAuthHeadersForResponse does not have a remote object and does not support app wakes, canceling.
Simulating network change event since %lld seconds have passed
SCDynamicStoreCreateRunLoopSource failed: %s [%d]
SCDynamicStoreSetNotificationKeys failed: %s [%d]
Created xpc listener: %@
Received xpc event
NDUserEventAgentConnection received connection
Received a new connection from UserEventAgent! Canceling the old one
Updated Registered Launch-On-Demand Clients: %@
Attempting to launch client %@ for session %@
Couldn't launch application %@ because we don't have an xpc connection to UserEventAgent
Will wake client %@ for session %@ if we receive a notification that it supports launch-on-demand
com.apple.nsurlsessiond enableBluetoothLinkRequirements is true - will assert bluetooth link requirements
com.apple.nsurlsessiond bluetoothLinkRequirementsOverrideTimerValue is %d
Could not break full NSURLSession identifier %@ into bundle ID and session ID components
Failed to unarchive data of class %@, length %lu
Error %@ [%ld] deserializing auth headers
Error removing item at path: %@, error: %@ [%ld]
Error removing item at url: %@, error: %@ [%ld]
Failed to set mode 700 on path %s.  errno=%d
Failed to convert %s to a data-vault directory.  errno=%d
Couldn't create directory at %@, error: %@ [%ld]
Failed to create data-vault directory.  errno=%d
Couldn't create directory.  Unable to extract C-string from path argument: %@
Couldn't create directory.  No path provided.
Error getting caches directory: %@ [%ld]
Empty results for asset update query
Catalogue fetch succeeded
Catalogue fetch failed with result %ld. Fall back to the currently installed asset
Asset (state %ld  Version %ld),  Current version %ld,  best installed version %ld,  best not installed version %ld
Asset version %lu has compatibilty version set to %lu. Not supported on the current OS
Purging asset version %@
Asset version %@ purged
Failed to purge the asset with version %@. Purge result = %ld
Download best not installed asset ver %lu
Read installed asset ver %lu
Asset download requested
Asset download completed. Asset Version downloaded is %lu
Asset download failed. Result  %ld
Copying from a file at location %@ failed. Error %@
Replacing a file at location %@ failed. Error %@
Read Asset at %@
Error reading the TLD Asset version
Unable to get the system container for nsurlstoraged
Error getting the system group container for Group ID %@ 
Resetting request delay for %@
Set request delay for %@ to %f
Resetting request delay and clearing pending wake requests for %@ since the first observer is being added
Application %@ has been in background for %lu seconds. Will reevaluate discretionary downloads
Resetting request delay and clearing pending wake requests for %@ since it came into the foreground
Being asked if container with identifier %@ is foreground before getting callback from BRContainersMonitor! Foreground state is %c
Container %@ entered background
Container %@ entered foreground
Being asked if container with identifier %@ is foreground before getting callback from FPProviderMonitor!
FPProvider %@ entered background
FPProvider %@ entered foreground
An XPC error occurred when obtaining a credential: %@
An XPC error occurred when obtaining all credentials %@
An XPC error occurred when obtaining the default credential: %@
PDURLSessionProxyServer Session %@ had _sourceApplicationAuditTokenData [%@]- discarding
PDURLSessionProxyClient Session %@ received message with non-matching session UUID; dropping message
%{public}@ didCompleteWithError message failed to send, so re-sending when devices are connected
%{public}@ message failed to send, so canceling task
dataTaskWithRequest message forTaskIdentifier %lu in session %@, currentRequest = %@
%{public}@ received task creation message and that task already exists. Sequence number: %llu, existing sequence number: %llu
%{public}@ canceling exisitng task since we received a new request for that task with a higher sequence number
%{public}@ received duplicate task creation message. Dropping message
%{public}@ received task creation message for invalidated session. Dropping message
%{public}@ using local task identifier %lu
%{public}@ acknowledging dataTaskWithRequest message
Received proxy request %@ with non-http URL. Dropping request.
%{public}@ receiving cancel task message
%{public}@ receiving suspend task message
%{public}@ receiving resume task message, props %@
%{public}@ dropping effective configuration
%{public}@ receiving set description message, description = %@
%{public}@ receiving set priority message, priority = %lld
%{public}@ writing to stream returned %d, error %@ [%ld]
Open IDS Socket with UUID %@ to host %@ port %d
received tcp_connection (%p) event %lu
Received error %d reading from tcp_connection %p
Received error %d writing to tcp_connection %p
Received error %@ [%ld] reading from streamTask %@
Session %@ became invalid with error %@ [%ld]
%{public}@ didReceiveChallenge: %@, protection space: %@
%{public}@ _willSendRequestForEstablishedConnection
%{public}@ completed with error %@ [%ld]
%{public}@ StreamTask %@ completed with error %@ [%ld]
%{public}@ ignoring task completion for task %@ with error %@ [%ld] in session %@ since we do not have an associated client taskIdentifier
%{public}@ willPerformHTTPRedirection, response: %@, new request: %@
%{public}@ client responded to redirect with request %@
%{public}@ didReceiveResponse: %@
%{public}@ received response disposition: %d
%{public}@ ignoring data of length %lu since we've already failed that task
%{public}@ did receive data with length %lu
%{public}@ data acknowledged, now has %lu bytes pending acknowledgement
%{public}@ acknowledging pending data
%{public}@ data pending, now has %lu bytes pending acknowledgement
%{public}@ immediately acknowledging data
%{public}@ will wait to acknowledge data
%{public}@ will be retried
%{public}@ will be retried - error: %@
%{public}@ is waiting for connection with reason: %lld
%{public}@ getAuthHeadersForResponse %@
%{public}@ canceling because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
Could not set attributes of directory at %@, error: %@ [%ld]
Non-directory file exists at: %@. Removing it.
Bundle ID Archive %@ has unexpected format
NDSessionManager for client %@ was empty, not restoring
Application %@ is not installed, removing directory
No directory for bundleID: %@
Failed to write archive to path: %@
Evaluating new XPC connection %@ with client bundle identifier %@
Client is a PlugIn with bundle identifier %@
Containing app for PlugIn is %@
Client is an independent extension
Client is an extension
Using identifier %@ for PlugIn %@ with containing app %@
Process with pid %d does not have a bundle ID, rejecting connection
Process with bundleID %@ [pid %d] does not have a bundle path, rejecting connection
Process with bundleID %@ [pid %d] is an app clip, rejecting connection
NDSession <%{public}@>.<%@>.<%@> Lost connection to app -- connection interrupted
NDSession <%{public}@>.<%@>.<%@> Lost connection to app -- connection invalidated
Bundle %@ re-installed. Need to adjust download paths
Bundle %@ uninstalled. Need to obliterate
nsurlsessiond started
Background updates are on
Background update setting for %@ was changed to %@
Notifying observers for %@ that background update setting was turned off
Notifying observers for %@ that background update setting was turned on
Background updates were turned off
Cannot find bundle ID for process %@ state update %@
Application %@ no longer foreground
Application %@ no longer foreground, and no observers
Application %@ entered foreground
Application %@ entered foreground, and no observers
Application %@ was suspended
Application %@ was suspended, and no observers
Application %@ was quit in the app switcher
Application %@ was quit in the app switcher, and no observers
Added observer for app %@, now %lu observers
Removed observer for app %@, now %lu observers
Started monitoring app %@, now %lu total %@
Stopped monitoring app %@, now %lu total %@
validating assertion %@
%s assertion with name %@ for bundle id %@
looking for background task completion for bundle id %@
looking for background session %@ for bundle id %@
Invalidating assertion for bundleID: %@. sessionID: %@
Couldn't create process assertion for %@ (%@)
We already have an assertion for bundleID: %@, sessionID: %@
took assertion for %@, session %@, uuid %@
Will request wake of app %@ for NDSession <%{public}@> with identifier %@
Failed to take process assertion for %@
Successfully woke application %@ and took process assertion
Failed to open application %@, error: %@ timeout: %{bool}d
Issuing wake request for independent extension %@ for session %@ with uuid %@ and requirement %d
Wake request already exists for independent extension %@ for session %@ with uuid %@
Removing wake request for independent extension %@ for session %@
Canceling AVAssetTask because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec, samples %@/%@
%{public}@ Updating configuration on daemon
%{public}@ initialized appleIDAuthenticator, status codes = %@
%{public}@ StreamingZip - not yet prepared for extraction while setting additional properties
%{public}@ StreamingZip - terminating lingering extractor from previous download attempt
%{public}@ StreamingZip - preparing for extraction to %@
%{public}@ Extractor prepare - Offset: %lld, error: %@ [%ld]
%{public}@ Failed to prepare for extraction - timed-out.
%{public}@ StreamingZip - no path available.  Wait for init with resume-info for the path.
%{public}@ Object does not support STExtractor protocol.  Dropping this object. Class=%@
%{public}@ StreamingZip - already prepared for extraction while setting additional properties
[Telemetry]: Assiging taskMetrics on the daemon side
%{public}@ client acknowledged completion
%{public}@ client acknowledged file download
%{public}@ performing auth challenge callback, challenge %@
Failed to establish client cert proxy: %@
%{public}@ client responded to task challenge with disp %d, cred %@, trustProxy %@
%{public}@ performing did start app wake callback.
%{public}@ performing did finish app wake callback.
%{public}@ performing will send request callback, request %@
%{public}@ failed to ask client for modified request, using original proposed request
%{public}@ client responded to will send request callback with request %@ handle %@
Performing open file at path callback for path %@ mode %d
Client responded to open file callback with handle %@
%{public}@ failed to deliver resolved MediaSelection
%{public}@ failed to deliver downloaded HLS variants
%{public}@ performing begin delayed request callback
%{public}@ failed to ask client for delayed request disposition, continuing load
%{public}@ client responded to delayed request callback with disposition %d
%{public}@ performing get auth headers for response callback.
%{public}@ failed to ask client for getAuthHeadersForResponse. Error=%@
%{public}@ client responded to getAuthHeadersForResponse callback with continueLoad=%@, authHeaders=%@, newRequest=%@
%{public}@ draining authentication challenge callback
%{public}@ draining willSendRequest callback
%{public}@ draining openFileAtPath callback
%{public}@ draining willBeginDelayedRequest callback
%{public}@ draining getAuthHeadersForResponse callback
Delayed wake timer fired for session <%@>.<%@>
Triggering delayed wake for session <%@>.<%@>
Scheduled delayed wake for session <%@>.<%@>
Canceling delayed wake for session <%@>.<%@>
%{public}@ failed to re-instantiate AVURLAsset with token %llu
%{public}@ restoring, which had never been started, will resume implicitly
Error getting container path: %llu
Error getting User managed assets path: %llu
Error removing file at location of asset downloads directory: %@ [%ld]
Error creating asset downloads directory: %@ [%ld]
Lowering priority of AVAssetDownloads for %@ since it is no longer in the foreground
Bumping priority of AVAssetDownloads for %@ since it entered the foreground
Cancelling AVAssetDownloads for session <%@>.<%@> since client was quit from app switcher
Client exited transitional discretionary period.  Re-evaluating task priorities for session <%@>.<%@>
Task <%{public}@>.<%lu> avAssetDownloadTaskWithDownloadToken: %llu, URL: %@, destinationURL: %@, temporaryDestinationURL: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAssetDownloadSession %@ with token %llu
%{public}@ failed to instantiate AVAssetDownloadSession
%{public}@ failed to instantiate AVAsset, token %llu
Task <%{public}@>.<%lu> for client %@ does not have write access to destination directory %@
Task <%{public}@>.<%lu> avAggregateAssetDownloadTaskWithDownloadToken: %llu, serializedMediaSelections: %@, assetTitle: %@, assetArtworkData: %@, options: %@
%{public}@ new AVAggregateAssetDownloadTask asset: %@
%{public}@ cancelTaskWithIdentifier
%{public}@ retrying AVAssetDownloadTask
%{public}@ recreated asset after error %@ [%ld] retry count %lu
%{public}@ removing destination file for AVAssetDownloadTask in order to retry
%{public}@ will retry after %f seconds
Creating tcp_connection to host: %@, port: %d
%{public}@ tcp_connection_create() returned NULL (host %@, port %d, queue %@, taskInfo %@, URL %@)
Created tcp_connection: %@
%{public}@ received tcp_connection event %d
%{public}@ created AVAssetDownloadSession with token %llu
%{public}@ couldn't create AVAssetDownloadSession; returning an error
%{public}@ startAVAssetDownloadSessionWithTaskIdentifier wrapper: %@ taskIdentifier: %lu
%{public}@ canceling tcp_connection
%{public}@ finished downloading to %@
%{public}@ completion woke client: %c
%{public}@ completion did not wake client and client is not active - requesting delayed wake
%{public}@ completion woke client or client is active - not requesting delayed wake
%{public}@ AVAssetDownloadSession did complete with error %@ [%ld]
