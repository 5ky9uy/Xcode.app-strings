@(#)PROGRAM:IMDaemonCore  PROJECT:IMDaemonCore-
?UUUUUU
IMDaemonCore
BackwardCompatibilityMessageIdentifier
BackwardCompatibilityMessageType
DaemonCoreHelloWorldClass
IMDaemonCoreHelloWorld
IMDaemonCore
CallManager
IMDCollaborationClearNoticeRateLimiter
IMDaemonCore
IncomingClientConnectionListener
IncomingClientConnectionListening
TextInfixParser
WrappingPair
Liked "%
Disliked
Laughed 
Emphasiz
Question
PlainTextTapbackInterpreter
IMAssociatedMessageType
_NSRange
UncheckedSendable
ClientRequestHandling
DaemonWorkActor
IMDInternalWorkQueue
IMDaemonCore
ClientConnectionManager
MessagesClientCapabilities
NIMClientCapabilities
IMSharedUtilities
IMDaemonCore
CollaborationNoticeStore
ClientConnection
audit_token_t
ClientConnectionManaging
PersistedCollaborationNotice
IMDMessagePTaskStoreAddedProcessingTask
Initial
FetchMomentShare
Accepting
FetchingAssets
GeneratingTransfers
Invalid Ingestion State: %ld
IMDAccount
Creating account id: %@    defaults: %@    on service: %@
IMDAccount: incoming 'defaults' is not a dictionary, %@, %@
AccountManaged
%@ - write account defaults: %@
accountID
accountDefaults
capabilities
serviceLoginStatus
serviceLoginStatusMessage
buddyProperties
groups
Session
%@: Telling session it became active
%@: Forcing login
-[%@ _forceSetLoginStatus:%d message:%@ reason:%d properties:%@] session=%@
read-receipt-tracking
IMDAccountController
Loading services: %@ (First load: %@)
Loading service: %@
service: %@ has been discontinued. Loading default disabled account
   Creating account with ID: %@
   Creating persistent session with ID: %@
  Service wants new accounts active, setting active: %@
 Not loading accounts from defaults, appears to be IDS Based: %@
 Found accounts: %@
 Loading: %@
 Done
  Setting active accounts: %@
  Service wants accounts always active, setting active: %@
Logging in previously logged in accounts: %@
  * Logging in previously logged in account: %@
  * No account found for account ID: %@
Done loading service: %@
iMessage
PlaceholderAccount
Done loading all services
   Found account: %@
      => Disabled, continuing
      Found service: %@
      => Service discontinued, skipping.
      Adding account: %@ to active set: %@
Reusing session: %@
      Active account set is: %@
      Building sesssion
      Enable the associated account
Tried to deactivate an account, but found no account: %@
Tried to deactivate an account, but found no service; %@
Add account: %@
Remove account: %@
B16@?0@8
@16@?0@8
activeSessions = %@
Could not find a service session for string: %@, account: %@, allAccounts: %@
IMDAccountController: Could not find a service for string: %@
IMDAccountController: Could not find an account for serviceString: %@, accountsForService: %@, accounts: %@
IMDAccountController: Could not find a session for account: %@
Rebuilding operational accounts, old: (%@)  new: (%@)
Operational accounts changed
__kIMDBadgeUtilitiesOperationalAccountsChangedNotification
com.apple.madrid
IDS account %@ is active %@ can send %@ is madrid account %@
calling setNetwork %@
  => broadcasting
FaceTime
Receiving id (%@) with country code (%@) is a candidate for spam filtering.
Receiving id (%@) with country code (%@) is not a candidate for spam filtering.
Receiving id (%@) with region (%@) is a candidate for spam filtering.
Receiving id (%@) with region (%@) is not a candidate for spam filtering.
Found an account (%@) that isn't IMDIDS (%@), can't determien region -- falling through.
ReceivePipelineJunk
Receiving ID: %@ has country code: %@
Receiving id (%@) with country code (%@) is a candidate for Oscar filtering.
Receiving ID: %@ has region: %@
Region (%@) is a candidate for Oscar filtering.
Found an account (%@) that isn't IMDIDS (%@), can't determine region -- falling through.
IMDCKUtilitiesErrorDomain
CKSubType
IMD-IDS-Aliases
selectedAliases
allAliases
com.apple.Messages
IMDCKUtilities
%@/CKMessagesLogDump/
key roll pending check returned: %@
Added key roll pending error to sync state
Not performing key roll check didKeyRollPendingCheck %@ cloudKitSyncingEnabled %@
fetchCloudKitAccountStatusAndCheckForAccountNeedsRepairWithCompletion failed with error: %@
v24@?0q8@"NSError"16
updating key roll pending state
shouldForceArchivedMessagesSync
v20@?0B8@"NSError"12
Get file size on path: %@
Check if there is enough iCloud quota
User quota completion block return with available Quota %llu, and Error: %@
Available Quota in bytes:  and message database size: %llu, %llu
v24@?0Q8@"NSError"16
Madrid server bag does not allow us to sync. Our client version %d server client version %ld
_shouldiCloudSwitchBeEnabled is FALSE as iCloud and iMessage accounts do not match up
_shouldiCloudSwitchBeEnabled is FALSE because server does not allow sync
_shouldiCloudSwitchBeEnabled is FALSE because we are in exit state. Is moc feature enabled %@
We are not in exit state, _shouldiCloudSwitchBeEnabled is based on whether feature is enabled or not: %@
ck-client-min-version
**** cloudKitSyncingEnabled is turned off in this build
Setting cloudkit enabled: %@
Starting initial sync
IMDCKCacheDeleteManager
Attachment watermark reset to 0
ck-submit-metrics-min-version
ck-submit-analytics-min-version
ck-submit-analytics-details-min-version
server allows submitting metrics result %@ clientVersion %@ serverVersion %@
server allows submitting analytics result %@ clientVersion %@ serverVersion %@
server allows submitting analytics details result %@ clientVersion %@ serverVersion %@
Keep Messages value should be altered from %@ to 0
Resetting Keep Message setting to Keep forever.  VersionID: %ld
ck-cache-delete-version-V3
server allows cached delete check result %@ clientVersion %@ serverVersion %@
ck-enable-attachment-validation
enableAttachmentMetricCollection overridden by iMessage server
Should enable attachment metric-ing %@
CacheDeleteEnabled %@
ck-remove-from-backup-version-V3
server allows removal from backup result %@ serverVersion %@
This is an internal install so overriding server bag check and defaulting to yes
Removal from back up allowed %@
com.apple.private.IMDCKUtilitiesInternal
accountIsVerifiedForMOCAndSafeForCacheDelete
Checking if account is verified
Return account validForCD with error: %@ accountStatus: %@
About to wait for accountIsVerifiedForMOCAndSafeForCacheDelete call
Finished blocking accountIsVerifiedForMOCAndSafeForCacheDelete with time: %@ and accountValidForCD %@
AKAppleIDAuthenticationController
AuthKit
isEligibleForTruthZoneOverride
Overriding isEligibleForTruthZone: %@
Fetched cloud kit account status: %@, error: %@
Fetched cloud kit account status: %@
Fetching cloud kit account info with cloudkit api
accountInfoWithCompletionHandler called with accountInfo %@, error %@
Checking for cloudkit account info failed with error: %@ 
failed fetching account status
Checking for cloudkit eligibility returned: %@ inCarry: %@
Unrecognized account status %ld
v24@?0@"CKAccountInfo"8@"NSError"16
ck-account-repair-override
account needs repair override is: %@
account repair overridden
MiC is disabled, does not need repair
Account needs repair: %@ (account status: %@)
Got local account security level %@
Not checking account for needed repair because fetching account status returned an error: %@
Fetching security level and updating mic switch eligible on imagent launch
Server allowing %@: %@
Defaults over allowing %@: %@
should-ttr-on-icloud-kit-error
should-dump-logs-on-icloud-kit-error
should-dump-logs-daily-if-havent-synced
disable-dumping-logs-daily-for_restore_failures
msgs_on_icloud_logs@icloud.com
log-collector-handle
A cloudkit error(%@) occured checking if we should try to report the error
Should log dump on cloudkit error? %@
TriggeredByCKError
LSApplicationWorkspace
CoreServices
File a radar
Dismiss
Messages on iCloud Debug UI
We present a CK UI
TTR:%@ MoIC Sync Fail %@
tap-to-radar://new?Title=%@&ComponentID=644010&ComponentName=Messages Frameworks&ComponentVersion=iOS&Classification=Serious Bug&Description=%@&Reproducibility=I Didn't Try
User tapped file a radar. Opening URL %@
v16@?0@"IMUserNotification"8
%@%@
IMDCKUtilities recordNameForMessageWithGUID invalid parameters [key length] %@ guid %@
%@-%@-%@-%@
RecoverableError
NonRecoverableError
******** IMDCKUtilities not a partial error %@
Resetting last sync date to nil
Last sync date was reset to nil
ACAccountStore
AppleAccount
IMDaemon_CloudKit
Force switching icloud switch to %@ since default has not been set.
Trying to set iCloud Settings Swtich to enabled ? %@
Error saving enabling for kAccountDataclassMessages.
Success saving enabling for kAccountDataclassMessages.
Found primary account: %@ error: %@
v24@?0@"ACAccount"8@"NSError"16
fetchiCloudAccountPersonID returning with error: %@
Found DSID: %@
Account has backup enabled: %@
ck-sync-paused
Is syncing paused override: %@
syncing paused because syncing override is YES
syncing not paused because syncing not enabled
syncing not paused because we have a valid sync date
syncing not paused because we are syncing
syncing not paused because we are connected wifi and device is charging
syncing paused: connected to Wifi: %@, device is charging: %@
PCSReportKeyRollPending
ProtectedCloudStorage
Linked linkedPCSReportKeyRollPending ok: %@
Messages3
isOnWifiAndPower %@, Is charging %@ , isOnWifi %@ , lastSyncDate %@ lastCompleteSyncedDBDate %@
isOnWifiAndPower %@, Is charging %@ , isOnWifi %@ 
Found duplicate record while syncing or record does not have a record name. Dropping record: %@
Found duplicate recordID while syncing or recordID does not have a record name. Dropping record: %@
active
inActive
Active state %@ last activity date %@
Just send
Notify me each time
User chose to always auto send logs
User chose to show pop up before sending logs
ck-should-use-rtc-reporting
ck-should-use-analytics-reporting
Read server bag bool: [%@] for key: [%@]
Server bag bool default: [%@] for key: [%@]
groupName
deviceState
ZoneCreateDate-%@
IMDCKUtilites
logDumpAndSendMessage not allowed with error: %@
logDumpAndSendMessageTo called for recipient %@, hrs %@, reason %@, initialSync %@ logDumpGuid %@
User has opted out of auto log collection. Not dumping logs for logDumpGuid %@
User has never seen a prompt and this collection requires a previous prompt. Not dumping logs for logDumpGuid %@
LogDump
<StartDeviceID> Device ID: %@ <EndDeviceID> logDumpGuid %@
We didn't get a device ID back from cloudkit error: %@
dd-MM-yyyy_HH:mm
%@_MT_%@_%@_%@_%@_Messages
Unknown
RestoreFailure
Could not create dir at path %@, failed with error %@. Aborting log dump with logDumpGuid %@
Succeeded creating dir at path %@ for logDumpGuid %@
subsystem CONTAINS[cd] "com.apple.messages"
Error occurred trying to log dump messages logs: %@
Succeeded logging messages log to file at path %@
v24@?0@"NSString"8@"NSError"16
Not log dumping since not on internal device
In logDumpAndSendMessageTo but caught an exception %@
Returning %@ for logDumpIsExpcted - _isLogDumpAllowed: %@, _isOnPowerAndWifi: %@, _isRunningInAutomation: %@
For some reason we do not have the sync counts prior to syncing
All items have been synced, noting down last complete synced DB date %@
Could not log db sync date because not all items synced: chatsLeftToSync %@ | messagesLeftToSync %@ | attachmentsLeftToSync %@
<StartSyncStats> syncedChatDifference %@ | syncedMessageDifference %@ | syncedAttachmentDifference %@ <EndSyncStats>
Log dump needed -- didn't sync enough items | syncedMessages %@ | syncedChats %@ | syncedAttachments %@
PCSReportManateeStatus
Linked linkedPCSReportManateeStatus ok: %@
Failed to weak link ProtectedCloudStorage, this should not happen
Engram
AKAccountManager
is phone or watch: [%@]
D:%@
iCloud DSID %@
iMessage account DSID %@
iCloud account %@ and iMessage account %@ DO NOT match up
We found one that matches up (icloud: %@, iMessage: %@), the ids account is active: [%@]
enableMOCIfNeeded was called, but this is now a no-op bailing
/**---DISABLING MESSAGES ON ICLOUD---**/
Fetching eligibility for truth zone before attempting to sync
Not eligible for truth zone
***** Timed out checking truth zone eligibility *******
eligibleForTruthZone %@
com.apple.imagent
ck-demo-mode
Attempt to disable MOC across all devices
Unable to request exit record when trying to disable all devices. Error: %@
DisableAllDevices
AKAuthenticationSecurityLevelKey
Calculating selected/all aliases
Saving (domain %@) selected aliases %@
IMDCKAccountStatusUnknown
IMDCKAccountStatusLoggedOut
IMDCKAccountStatusLoggedInWithNoD2DEncryptionSupport
IMDCKAccountStatusLoggedInWithD2DEncryptionSupport
AKAppleIDSecurityLevelUnknown
AKAppleIDSecurityLevelPasswordOnly
AKAppleIDSecurityLevelStandard
AKAppleIDSecurityLevelHSA1
AKAppleIDSecurityLevelHSA2
AKAppleIDSecurityLevelManaged
%@: Start sync should not be called more than once.  Ignoring request.
MessageProcessing
%@: Begin syncing IDS transaction log history for %ld services
%@: Starting sync task for %@ service 
%@:Received a batch of %lu messages to process.
%@: Finished processing batch of %lu messages.
v24@?0@"NSArray"8@?<v@?q>16
v24@?0@"NSArray"8@?<v@?@"NSArray">16
%@: Finished sync task for %@ service. Error: %@
%@: Finished Syncing all services for task
v16@?0@"NSError"8
IMDMessageHistoryCKChatSyncTask: Start sync should not be called more than once.  Ignoring request.
IMDMessageHistoryCKChatSyncTask
Back online, start syncing chats
IMDCKSyncStatsCollector
Refreshing CloudKit sync statistics from the database
Skipping the refresh of CloudKit sync statistics from the database
com.apple.messages.IMDClientRequestContext.currentContext
No instance IMDClientRequestContext available for current thread, -currentContext caller may not be within a client request handler
%@-syncStoreVersion
IMDCKSyncTokenStore
Migrating sync token {key: %@, db: %@, version: %ld}
IMDCKChatSyncController
Found token data, saving to sms.db {key: %@}
No token data found {key: %@}
Failed to unarchive ckserver change token. Error: %@
Fetched token {key: %@, token: %@}
Persisting token {key: %@, token: %@}
ServiceProperties
plist
Discontinued-%@
%@.%@
%@Defaults
%@AccountDefaults
IMDService (%@)
CKBBContextKeyBalloonBundleID
IMDScreenTimeAskReponseHandler
requestID
approve15
approveHour
approveDay
decline
Sending sent ST response with answer: %@
Successfully sent ST response with answer: %@
[%@: <Device%@ activeDate:%@ readReceipt:%@, read ReceiptDate %@>]
OTCManager
Asked to track a new OTC with guid %@
Asked to track a OTC but code appears to be invalid %@
Send out OTC to all interested clients.
Clearing code for GUID: %@
Asked to consume code for guid %@, but unable, current code count: %@
Timer fired to clear code with GUID: %@
v16@?0@"NSTimer"8
IMDSoundUtilities
Play message sent sound type: %@, for message: %@
Acknowledgment
Suppressing play sound for downgraded message[%@]
Suppressing play sound because it was already played [%@]
Suppressing play sound for auto-reply message [%@]
Unable to find a sound action ID for %@  errorResult: %d
Unable to set property on sound ID   errorResult: %d
com.apple.MobileSMS
SuppressingSendSoundMessageGUIDs
allUnreadMessages
Setting timer to evaluate deferred message processing in: %f
Checking for deferred message processing task
MessageProcessing: Unable to retrieve ptask from store
Found %ld messages that need processing
Scheduling next batch of messages to process
Finished processing deferred messages
IMDCoreSpotlight
Not indexing message, spotlight has not finished migrating yet
message-format-version
message-id
sender-uri
time-of-message
message-has-image
message-length
message-text
message-app-bundle-id
message-spam-model-version
message-spam-model-detected-spam
reported-from-blackhole
reported-from-junk
mmcs-url
mmcs-signature-hex
mmcs-owner
file-size
decryption-key
mmcs-owner-id
mmcs-file-size-string
mmcs-symmetric-key
mmcs-UTI-type
message-attachment-info
conversation-group-size
payment-info
is-self
is-payment
is-informal
message-service
notify-security
v32@?0@"NSString"8@"NSArray"16^B24
IDSReportiMessageUnknownSenderWithBlackholeAndJunkStatus
PKPeerPaymentMessageTypeFromDataURL
PassKitCore
PKPeerPaymentMessageDictionaryRepresentationFromDataURL
__kIMDaemonWillShutdownNotification
__kIMDManagedPreferencesChangedNotification
v32@?0@"CUTWeakReference"8Q16^B24
@16@?0@"CUTWeakReference"8
v32@?0@"IMDServiceSession"8Q16^B24
IMDServiceSession
initWithAccount: %@       service:%@  defaults: %@
DEALLOC: %@
[%@ addAccount:%@]
[%@ removeAccount:%@]
[%@ sessionDidBecomeActive]
Scheduling watchdog timer before first unlock
Not scheduling routing, expire and watchdog timer before first unlock
[%@ sessionWillBecomeInactiveWithAccount:%@]
-[IMDServiceSession _connectionMonitor] monitor: %@:%@
_updateConnectionMonitorWithRemoteHost: %@:%@
Creating connection monitor to global reachability: %@
Forcing an invocation of connectionMonitorDidUpdate 10 seconds after setting it up.
Already have connection monitor to global reachability: %@
Going disconnected for connection monitor: %@
_reconnectIfNecessary: %@:%@
  shouldAlwaysBeLoggedIn: %@    shouldReconnect: %@   wasLikelyNetworkError: %@  loginStatus: %d  disconnectReason: %d
%@: we're disconnected properly - and we're supposed to try to reconnect now, 
IMConnectionMonitor
%@       forcing disconnect
%@: Network connection to %@ is down -- disconnecting
%@       Data connection is active, going into login server ready
%@       I can be reached
%@ connectionMonitorDidUpdate: Currently connected: %@   (Reachable: %@  Data Active: %@  On Call: %@  Data+Voice: %@   Result: %@)
Network
-[IMDServiceSession networkConditionsAllowLogin]: %@ (%@)   (Ignoring network)
-[IMDServiceSession networkConditionsAllowLogin]: %@ (%@)   ([[%@]_connectionMonitor isImmediatelyReachable])
-[IMDServiceSession networkConditionsAllowLogin]: %@ (%@)   (Fallback)
Refreshing capabilities: %@
IMDServiceSession | Expected to blocklist chat for chatDict: %@ but groupID nil
Blocklisted GroupID: %@
IMDServiceSession | Deletion: did not find any chats for received guid: %@ or received groupID: %@
removing chat: %@, permanently: %@
recoverably deleting %@: messages
IMDServiceSession | Recently Deleted: deferring to recoverable delete - unexpected permanent delete received for command dictionary: %@
Recently Deleted | messages delete date: %@
IMDServiceSession | Recovery: did not find any chats for existingChatWithGUID: %@, existingChatsWithGroupID: %@
guid
IMDServiceSession: Recently Deleted | Received empty parts-mardid command
IMDServiceSession: Recently Deleted | Received permanent delete command. This is unsupported
Recently Deleted | Deleting message parts from %lu messages: %@
IMDServiceSession: Recently Deleted | could not find messageItem for GUID: %@
IMDServiceSession: Recently Deleted | did not find indexes to delete at for GUID: %@
Recently Deleted | Removed parts from old item %@, got new item: %@
Recently Deleted | Mardid: deleting message part: found no message-part body-text to store for recovery
v32@?0@"IMMessagePartDescriptor"8Q16^B24
Recently Deleted | _updateLastMessageTimeStampForChat received nil chat
Recently Deleted
IMDserviceSession
Recently Deleted | IMDChat: %@, updating last message timestamp on load: %@
IMDSpamController
Instantiated IMDSpamController
Performing server query with alias: %@, count: %@
Server request returned status: %ld, abusive: %@, delay: %f, error: %@
v36@?0q8B16d20@"NSError"28
Chat
Stopping spam check for chatGUID: %@ interval: %f
Scheduling a spam check with interval: %f for chatGUID: %@
message-spam-check-timer
disable-auto-detect-spam
hasViewedPotentialSpamChat
detectSpam for Chat Identifier: %@
wasAutoDetectedForSpam
shouldn't retry again: %@
don't try to detect spam for chat: %@, disabled: %@, properties: %@
CloudKitExitRecord
Exit
CloudKitExitOnDate
ExitRecordKeyManateeZoneSubscription
com.apple.Messages.IMDCKExitManagerErrorDomain
SyncCompleteRecordType
SyncCompleteDateKey
AnalyticDataRecordType
AnalyticDataKey
SyncCompleteRecord
AnalyticZoneRecord
SyncCompletedRecently
SyncNotCompletedRecently
SyncInProgress
SyncDueToIMAuto
SyncCompleted30Hours
IMNotSyncDueToIMAuto
Recent
Power
Wifi
Syncing
FirstUnlock
Crash
LastCompleteDBCKSyncWasWithin3Days
LastCompleteDBCKSyncWasNotWithin3Days
LastCompleteDBCKSyncWasWithin7Days
LastCompleteDBCKSyncWasNotWithin7Days
LastCKSyncWasWithin3Days
LastCKSyncWasNotWithin3Days
LastCKSyncWasWithin7Days
LastCKSyncWasNotWithin7Days
PreFlightZoneFetch
FullSyncInitiated
FullSyncFailed
FullSyncCompleted
FullChatSyncStarted
FullChatSyncFailed
PeriodicChatSyncStarted
PeriodicChatSyncCompleted
PeriodicChatSyncFailed
MessageSyncStarted
MessageSyncFailed
MessageSyncStoppedDueToDeviceConditions
AttachmentSyncStarted
AttachmentSyncFailed
AttachmentSyncStoppedDueToDeviceConditions
ManateeNotAvailable
NotStartingCoreDuetSync
BackUpCompletedRecently
BackUpNotCompletedRecently
InitialSyncInitiated
InitialSyncCompleted
InitialChatSyncInitiated
InitialChatSyncFailed
InitialMessageSyncInitiated
InitialMessageSyncFailed
InitialAttachmentSyncInitiated
InitialAttachmentSyncFailed
ChatSyncCompleted
WriteSyncCompleted
DeletionSyncCompleted
AttachmentMetadataSyncCompleted
WithOver20HoursOfPowerAndWiFi
FirstSyncInitiated
FirstSyncCompleted
FirstChatSyncFailed
FirstMessageSyncInitiated
FirstMessageSyncFailed
FirstAttachmentSyncInitiated
FirstAttachmentSyncFailed
FirstSyncFailed
RecievedMissingMessageNotification
PostingMissingMessageData
CrashDuringFirstSync
MaxRecoverableAttemptReached
PCSIdentityWasLost
ManateeIdentityFetchAttemptFullSync
ManateeIdentityFetchAttemptFullSyncFailed
ManateeIdentityFetchAttemptRestoreSync
ManateeIdentityFetchAttemptRestoreSyncFailed
FullSyncInitiatedWithOver20HoursOfPowerAndWifi
FullSyncCompletedWithOver20HoursOfPowerAndWifi
RestoredAllContentFromCloudKit
com.apple.ProtectedCloudStorage.mobileBackupStateChange
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange.success
com.apple.ProtectedCloudStorage.PendingKeyRoll
PCSBackupDisabledKeyroll
PCSBackupDisabledUserToggledKeyroll
PCSBackupDisabledTestToggledKeyroll
PCSBackupDisabledSuccessfulKeyroll
PCSPendingKeyroll
com.apple.private.IMDCKExitManager
IMDCKExitManager
Exit Record date has been modified, changing it from %@ to %@. Are we in exit state ? %@
Error fetching exit record date has been modified, changing it from %@ to %@
Handling notification for subscriptionID: %@
Calling writeExitRecordWithDate. ExitDate: %@
writeExitRecordWithDate, must be called with a non-nil exit date ignoring request
We were not able to create the subscription, we'll still try to write the exit record as we'll retry updating the subscription on imagent launch
writeExitRecordWithDate returned with error: %@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
writeExitRecordWithDate scheduling opperation
******* Failed writeExitRecordWithDate salt zone was not present *********
Calling exitRecordDateWithCompletion date: %@ error: %@ fetchedExitDateOnLaunch: %@
Updating our exit date to %@  with error %@. fetchedExitDateOnLaunch [%@] or previous errorFetchingDate [%@]
v24@?0@"NSDate"8@"NSError"16
Dispatching back to main queue exitDate: %@ error: %@
Already on main queue exitDate: %@ error: %@
Calling _fetchExitRecordDateWithCompletion
** Error fetching exit record %@
Done fetching exit record successfully
Exit date has been modified from %@ to %@, attempting to toggle icloud settings toggle
Unable to fetch exit zone record Error: %@
ExitRecord
v24@?0@"NSDictionary"8@"NSError"16
_fetchExitRecordDateWithCompletion scheduling opperation %@
Calling deleteExitRecordCompletionBlock
deleteExitRecordWithCompletion returned with error: %@
deleteExitRecordWithCompletion scheduling opperation
QOS: 0x%lX target qos: 0x%lX
Checking if salt zone needs to be created
Error creating salt zone %@
***** Timed out creating salt zone *******
Checking if exit zone subscription needs to be created
Error creating exit zone subscription %@
***** Timed out creating exit zone subscription *******
writeInitialSyncCompletedRecordIfNeeded Not doing under first unlock
initialSyncRecordHasBeenWritten
writeInitialSyncCompletedRecordIfNeeded Requesting last sync date for metrics: %@
Last sync was within the last 7 days
Wrote last sync date to CK first time, success %@, error %@
writeInitialSyncCompletedRecordIfNeeded last sync date %@ was not in last 7 days
writeInitialSyncCompletedRecordIfNeeded No last sync date
writeInitialSyncCompletedRecordIfNeeded We have already done this. Not doing again unless you do defaults delete com.apple.madrid initialSyncRecordHasBeenWritten
IMDCKSubmitMetric
Submitted metric with opGroupName %@ Error %@
*** submitCloudKitMetricWithOperationGroupName not submitting MOC enabled: %@, serverAllowsSubmission: %@
Error creating analytic zone %@
***** Timed out creating analytic zone *******
IMDCKSubmitAnalytic
Request to submit dictionary (%@) opGroupName %@
Analytic zone does not exist, so creating it before resubmitting metric.
Successfully created analytic zone so trying to submit metric again.
Issue, we created the zone and we got back same error again.
Submitted metric with opName %@, dict: %@
Reporting errors: %@
syncErrors
Failed to create analytic zone.
*** submitCloudKitMetricWithOperationGroupName not submitting as analytic submission is not enabled
Performing metric operation name %@ using DB %@
Trying to submit CK metric operation with ID %@
Completion called for submittion metric operation with ID %@. ignoreZoneNotFoundError %@ OperationError %@
IMDCKSyncCompletion
We should not be submitting metrics to CloudKit: serverAllowsMetricSubmission: %@ isInternal: %@ isSeed: %@
Writing up sync metric using opGroup %@
We should not be submitting metrics to CloudKit so calling completion with success.
Failed to serizlize analyticdict as JSON %@. Posting operationGroupName %@ only.
Writing up sync analytic using opGroup %@
Not submitting metrics to CloudKit because notAllowed: %@ noJsonData: %@ so calling completion with success.
sendCloudKitZoneFetchRequestToNoteFeatureIsOn
sendCloudKitZoneFetchRequestToNoteFeatureIsOn not pinging CK as feature is off
Pinging cloudkit to tell feature is on.
Messages_Enabled
Messages Enabled Ping
sendCloudKitZoneFetchRequestToNoteFeatureIsOn: Fetch zone operation error %@
Scheduling ping cloudkit fetch zone operation %@
chatManateeZone
messageManateeZone
attachmentManateeZone
messageUpdateZone
analyticManateeZone
RecordKeyManateeZone
MetricsManateeZone
recoverableMessageDeleteZone
com.apple.aps.imagent
We couldn't create the push connection for the IMDRecordZoneManager
com.apple.icloud-container.
IMDCKRecordManager
Created push connection %@ with enabled topics %@
APSConnection didReceivePublicToken
APSConnection didReceiveIncomingMessage pushPayload: %@ ckNotification: %@
Received a notification for an unsupported notitifcation type: %@
Received a notification for zoneID: %@ for subscriptionID: %@
Received a notification for zoneID we haven't set up: %@ subscriptionID: %@
Creating subscription: %@ for zoneID: %@
We failed to create the subscription: %@  with error: %@
We successfully created subscription: %@
v24@?0@"CKSubscription"8@"NSError"16
We are already subscribed to: %@
We are not subscribed to subscriptionID: %@ so let's create it
_checkRecordZoneExists invalid parameter: recordZoneID %@
IMDRecordZoneManager
Created CKFetchRecordZonesOperation operation ID %@ zoneID %@
Did not get back a zone for recordZoneID %@
IMRecordZoneManager
Found zone %@
Error initializing fetchOperation 
Successfully created zone %@ 
***** Failed to createzone %@ %@ 
Zone %@ already exists
createRecordZoneIfNeededWithCompletionBlock zone %@ exists %@ error %@
Attempting to create zone %@
Successfully deleted zone IDs%@
Failed to delete zone IDs%@ error %@
Going to create subscription on deDupe zone for subscriptionID: %@ recordType: %@
Request to delete zones %@ for database %@
Result of deleting all zones
Successfully deleted zone IDs%@ DB %@
Failed to delete zone IDs%@ error %@ DB %@
Attempting to infer manatee status by fetching chat zone.
Error obtaining zones %@
******* Error indicates device does not have keys to sync *****
Not a fatal manatee error %@. Proceeding
com.apple.private.IM.IMRecordZoneManagerErrorDomain
IMDCKMessageSyncCKOperationFactory
Created fetch message operation ID %@ operationGroupName %@
Created modify message operation ID %@ operationGroupName %@
MessageDelete
Created deleted message operation ID %@
RecoverableMessageDelete
Created recoverable deleted message operation ID %@
Created fetched archived operation ID %@ using zone id %@
com.apple.Messages.IMDAvailabilityVerificationManager
SKStatusSubscriptionService
StatusKit
AKAvailabilityStatusTypeIdentifier
AvailabilityKit
IMDAvailabilityVerificationManager
Using cached availability verification tokens %@ for message to handleID "%@"
Subscription validation tokens %@ is already cached for handleID: "%@". Not fetching again
Fetching subscription validation token for handle handleID: %@
SKHandle
Caching subscription validation tokens "%@" for handle handleID: %@
v24@?0@"SKSubscriptionValidationTokens"8@"NSError"16
Caching subscription validation token "%@" and no encryption token for handle handleID: %@
This device will validate subscription validation tokens
Received request to validate validation token "%@" from senderHandleID "%@"
Skipping validation, this device should not validate tokens
Not processing validation token "%@" for old message from %@ with date: %@
Received validity response of %ld for validation token "%@" from senderHandleID "%@"
Received a valid validity response, no further action needed.
SKSubscriptionValidationTokens
v24@?0B8B12@"NSError"16
Completed invitation. CanShare: %ld, DidShare: %ld, Error: %@
Subscription invitation received, clearing cache. Subscription: %@
Subscription received status update, no verification manager action required. Subscription: %@
Subscription state changed, clearing cache. Subscription: %@
Subscription service daemon disconnected, clearing cache, but not reconnecting.
<%@: %p; subscriptionValidationToken = "%@", encryptionValidationToken = "%@">
com.apple.distnoted.matching
INVocabulary
Intents
IMDChatVocabularyUpdater
Received request to update vocabulary for added chat, but chat registry is not yet loaded. Deferring update. Added Chat: %@
Updating SiriKit group name vocabulary for added chat: %@
Received request to update vocabulary for deleted chat, but chat registry is not yet loaded. Deferring update. Deleted Chat: %@
Updating group name vocabulary for deleted chat: %@
Received request to update vocabulary for renamed chat, but chat registry is not yet loaded. Deferring update. Renamed Chat: %@
Updating group name vocabulary for renamed chat: %@
Chat registry was reloaded, but merge is not yet completed (e.g. we're still under first data protection). Not updating vocabulary.
Chat registry has finished loading. Updating group name vocabulary due to a deferred update request.
Chat registry has finished loading. No deffered update request.
q24@?0@"IMDChat"8@"IMDChat"16
Updated the SiriKit group names vocabulary with %lu named group chats
Performing initial group name vocabulary update
com.apple.private.alloy.electrictouch
IMDLegacyDTController
Loaded dtService: %@
_senderIDFromToken invalid input
_senderIDFromToken could not split into legitimate components %@
Received incoming DT message service %@ account %@ [data length] %@ fromID %@ context %@
IMDLegacyDTController No data %@ or fromID %@ on DT message. Bailing early
IMDLegacyDTController could not get senderID from fromID:%@
Got senderID %@
Created new DT message %@
Processed message %@ with session  %@
Could not find suitable session to process message %@
Storage
Noting item from storage (%@)
This is the first item from stroage starting timer
ProcessingMessagesFromStorage
Noting last item from storage (%@)
Finished processing %lu items from storage %@
Should not be submitting metrics during unit tests. This method should be stubbed
Submitting message from storage metric with dictionary %@
Scheduling a storage invalidation timer in: %f
We have pending read receipts to process after storage timer fired
Storage timer fired, guids we need to process: %@
Chat: Missed lastItemProcessed.  This time is likely off by the last storage timer
wasReportedAsJunk
permanentDeleteChatMetadataArray
chat
groupID
isPermanentDelete
recoverableDeleteDate
message
recoverChatMetadataArray
parts
messageGuid
indexes
indexToRange
deleteSubject
@16@?0@"IDSURI"8
v32@?0@"NSURL"8@"NSArray"16^B24
Updating moment share %@ in response to photo library change for message %@
Updating moment share fetch for message %@ with change %@. Count is now %lu
IMDMomentShareManager
v24@?0@"PHMomentShare"8@"NSError"16
Starting to monitor fetch result: %@ for message: %@ moment share: %@
Moment share %@ is done fetching %lu assets. Generating transfers
Moment share ingestion complete for message %@. moment share UUID %@
Fetching moment share from %@ for message %@ CMM state %@ (%lu)
Fetched moment share %@ for message %@
IMDMomentShareManager - Request for moment share %@ for message %@ has not completed after 5 seconds
Register and accept ShareURL for message: %@ with bundleID: %@ hasPayload: %@ reset asset transfers: %@
No share URL found for %@
Processing CMM shareURL %@ for message %@ with state %@ (%lu)
Moment shareURL %@ for message %@ is already done
Message %@. No need to reset transfers for in-progress ingestion of moment share %@
Clearing and restarting transfers for in-progress message %@, moment share %@
Resetting transfers on message %@ in state %@ and restarting ingestion
Registering moment shareURL %@ for message %@ and beginning ingestion
Ingestion of moment shareURL %@ for message %@ is already underway
Accepting share %@ for message %@
Moment share %@ accepted success %@ error %@ for message %@
Transitioning to accepted state for moment share %@ message %@
TransferMap entry %@ to %@
v32@?0@"IMFileTransfer"8Q16^B24
Message %@: Begin request for resource file URLs for asset %@
v24@?0@"NSURL"8@"NSError"16
Message %@: Not requesting asset for %@, not in transfer map. %lu left for processing
Message %@: Original transfer %@ not found for asset %@
Message %@: Completed request for resource file URLs for asset: %@
Setting syndication identifier to %@ on asset with UUID %@
IMDMomentShareManager - Not setting syndication identifier on asset with UUID %@ due to missing syndication identifier
No photo or video file URL in file URLs: %@, for transfer: %@
IMDMomentShareManagerErrorDomain
Persisting attachment at fileURL: %@ for transfer: %@
Last outstanding asset requested for message %@, setting IMCMMStateCompleted
%lu assets still pending export
Deleting %lu transferGUIDS from CMM message %@, rl transfers left %@
Not generating transfers for message %@ because there are no asset UUIDs moment share with count %@: %@
Starting with RL transfer GUIDs %@
Generated transfer %@ for asset %@
v32@?0@"NSString"8Q16^B24
Setting Message %@ to CMM state Generated
Persisted attachments to message %@
Existing transfer found for %@, setting attribution %@
IMCMMStateNotCMM
IMCMMStateRegistered
IMCMMStateAccepted
IMCMMStateGenerated
IMCMMStateCompleted
invalid CMM state
schema_version
schema
IMDCKMockRecordKeyZone
Dispatching operation %@
handleOperation : %@
Mocking writing up Cloudkit metrics
Mock fetching exit record
-DRR
/var/mobile/Library/SMS/CloudKitMetaData/AttachmentSyncZoneMetaData.db
AssetFetchFailure
com.apple.private.IMDCKAttachmentSyncController
IMDCKAttachmentSyncController
_shouldMarkAllAttachmentsAsNeedingSync %@
ck-max-number-of-attachment-batches
 overriding max number of attachment batches to fetch %@
Marking any unsuccessfully synced attachments as needing sync
Finished Marking any unsuccessfully synced attachments as needing sync
Not marking unsuccessful attachments as needing sync. Last attempt date %@
IMDCKInitialAttachmentSyncController
overriding max number of attachment metadata batches to fetch as this is in demo mode.
ck-max-number-of-attachment-metadata-batches
overriding max number of attachment metadata batches to fetch %@
Initiating attachment syncing with type %ld
syncAttachmentsWithSyncType with type %ld finished
Completed Delete Recovery Resync!
Initial attachment sync succeeded. Proceeding with metadata only sync.
Initial attachment sync failed. skipping metadata only sync.
*** Called into to do initial sync ****
fetchAttachmentDataForTransferGUIDs %@ HQ %@
fetchAttachmentDataForTransfers: we weren't able to get a CKRecordID from a transfer; transfer sync state %@, non-empty salt %@
.UserInit
.Compute
@16@?0@"IMFileTransfer"8
v24@?0@"NSError"8@"NSArray"16
accepting file transfer %@
Transfer %@ - %f complete of %llu bytes
v32@?0@"IMFileTransfer"8f16B20@"NSError"24
accepting file transfers %@
Won't download assets, we are optimizing attachment storage.
We have a nil salt so we can't download assets anyway -- bailing
CloudKit Asset download already in progress, ignoring request
Won't download download assets, we don't meet the resource conditions currently
Starting attachment download batch with %lu items retries %@
Finished download of assets with Error: %@
Found a fatal partial error: %@
Kicking off another asset download batch in %f seconds
Attachment download can't start at this time, so stopping attachment sync
Failed downloading batch of assets, not kicking off another batch. (number of retries: %lu) Error was %@
No assets to downloand
v28@?0B8Q12@"NSArray"20
purgedAttachmentsForChat Request to download purged assets for chats %@ on services %@
Got %lu purged assets to download
No assets that have been purged
**** failed to create IMFileTransfer from IMDAttachmentRecordRef rowid: %lld, marking as synced ***
purgedAttachmentsCountForChat Request to get count of purged assets for chats %@ on services %@
Request to download purged assets for chats %@ on services %@
ck-client-download-purged-attachments-batch-size
Got %@
Done downloading purged attachments for chat %@
Found records to donwload {%@}
**** failed to create IMFileTransfer from IMDAttachmentRecordRef rowid: %lld, marking as failed to sync ***
This is a periodic sync and deviceConditionstoCheck is set to IMCheckNoDeviceConditions, changing it to IMCheckAllDeviceConditions
This is an initial sync but current batch count [%@] >= maxBatchCount [%@] and deviceConditionstoCheck is set to IMCheckNoDeviceConditions, changing it to IMCheckAllDeviceConditions
Setting xpc_activity_t to XPC_ACTIVITY_STATE_DEFER because conditions are no longer met
Error forcing xpc_activity_t to XPC_ACTIVITY_STATE_DEFER
Attachment sync: device conditions allow sync: %@ deviceConditionsToCheck %@
Fixed up guid for transfer old guid: %@ new guid: %@
******** Marking attachment as synced up, as we could not update it's guid %@ (rowid %@)
Writing up a batch of attachments to cloudKit
**** failed to create IMFileTransfer from IMDAttachmentRecordRef rowid: %lld, marking as clean ***
Got %lu dirty results to sync, filtered to %lu
Fixing up attachment GUIDs if needed
Removing attachments that were marked as clean 
Transfer to sync %@ 
Got %lu records to sync, filtered to %lu unique records
*** This is the last batch of attachments to write up. Number of records to write %lu < max batch size %lu
Got error %@ writing attachment records. Stopping further writes
NO error writing attachment records.
Kicking off another batch of attachments to write
** This was the last batch of attachment writes as the number of attachments to write up was less than max batch size Not writing more.
Failed to write any of these %lu dirty attachments, looking for more attachments to write
Failed to write any of these %lu dirty attachments, looks like there's nothing left to do
Device conditions dont allow us to sync
Fetching assets for %@
OptimizeRedownload
v24@?0@"CKRecordID"8d16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
Starting Delete Recovery Resync
Continuing Delete Recovery Resync
Fetching attachment batch count %@ (max: %@) syncType %@ batch size %@ token %@
FullRestore
PeriodicSync
AttachmentSync
*** Exceeded max number of attachment batches to fetch. Stopping attachment fetch ***
Downloading asset while performing periodic syncing with cloudkit
v16@?0@"CKRecord"8
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
recordZoneChangeTokensUpdatedBlock should not get called
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
Scheduling a fetch operation from attachment zone
Device conditions dont allow sync OR continueFetching %@. Disk Space Available: %@
PeriodicAttachmentSync
BackfillAttachmentSync
v24@?0@"CKRecord"8d16
v24@?0@"CKRecord"8@"NSError"16
Attempting to write %@ records to truth zone 
Error creating attachment zone %@
***** Timed out creating attachment zone *******
ChangeTokenExpired
IMDCKMessageSyncController
Kicking off an attachment write after fetching messages
Not kicking off a write because cachedSalt is not present.
Not writing up messages as sync type does not allow it
recordZoneChangeTokensUpdatedBlock recordZoneID %@ serverChangeToken %@ clientChangeToken %@ moreComing %@ recordZoneError %@
Saving sync token %@
Done fetching attachments in initial fetch
Kicking off another fetch of attachments
No more attachments to pull down. Setting IMCKFinishedFetchingAttachmentsFromCloudKit and kicking off a write
No more attachments to pull down. Should write back changes was no *****
We got back a change token has expired for processing the record zone for attachments going to try and fetch again
We got a %@ error while fetching attachments. %@
user deleted zone
zone not created
Resetting local attachment sync state & last sync date after received user deleted zone error
Attachment zone missing, attempting to create it
****** Failed creating attachment zone
//---*** Error fetching attachments from CloudKit with error: %@ ---- ***//
Attachment per-record completion %@ changeTag %@ error %@
_writeCKRecordsToAttachmentZone uploaded record successfully
_writeCKRecordsToAttachmentZone had a conflict 
Server's GUID was different than we expected; aligning with the server's data
On conflict, the server record's GUID (%@) was different than the record we tried to update with GUID (%@); marking local attachment as synced, to skip it
Conflicting serverRecord was different than the one being updated (server: %@, local: %@)
Record had invalid arguments, we'll try this record again on the next sync
Record had unknown error code. Clearing out CK metadata
We couldn't find the attachment zone for this record so marking the attachment as dirty and clearing the state
_writeCKRecordsToAttachmentZone perRecordCompletionBlock encountered an error.  Will try this record again on next sync. %@
_processFetchRecordChangesCompleted error %@
_processRecordDeletion deleted record %@
_processRecordChanged changed recordID:%@ for attachmentGUID %@
recordZoneChangeTokensUpdatedBlock recordZoneID %@ serverChangeToken %@ clientChangeToken %@
Modify attachment had errors we can deal with, so treating this as a non error case
_processModifyRecordCompletion error: %@
Number of records saved %@ with error %@
Asset fetch complete for %@ error %@
Attachment batch fetch complete with error %@
Attachments to process %@
Finalizing asset download for transfer %@
Asset not found in record, must not be synced to the cloud transfer %@
Can't find transfer in pre-transfer map, for a CKRecord we fetched an asset for, recordID %@. CAN'T UPDATE!
We failed to fetch asset from CloudKit -- failing the transfer: %@
Can't find transfer in pre-transfer map, for a CKRecord we failed to fetch asset for, recordID %@, error %@
Removing attachment at path '%@' for %@ from iCloud backups
Attachment at path '%@' for %@ not found, NOT removing from iCloud backups
Going to fetch the asset for transfer guid at the end of this batch: %@
** No IMFileTransfer found for GUID %@
attachmentZoneChangeToken
attachmentZoneChangeTokenForMetadata
Clearing local attachments sync state, flags 0x%x
We fetched a record that we didn't try to fetch!! we wanted (guid %@) for recordName: %@
We successfully fetched and validated that we can delete the transfer with guid: %@
We failed to validate that we can delete transfer with guid: %@
We got to the last object in the array so we will call our completion block with transfers to delete count: %@
v32@?0@"CKRecord"8Q16^B24
Attempting to fetch a nil file transfers from CloudKit for attachment purging
Validating %lu attachment downloads %@
Adding transfer to fetch: %@ with record name: %@
Couldn't retrieve CKRecordID from file transfer %@
We got an error back from CloudKit trying to fetch recordID: %@ with error: %@ transfer: %@
Attachment zone ID is nil
recordID
deleteAfterRow
Removed duplicate recordID %@ from delete syncing
rowid
No GUIDs passed in to delete
Deleting attachment operation deletedRecordIDs %@
@16@?0@"CKRecordID"8
Adding additional deleted record IDs from error
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
Kicking off deleted of recordIDs %@
Cloudkit sync is not enabled. Not deleting attachments
No pending messages to delete/fetch from CloudKit
Attachment %@ was to be deleted, but is still being referenced. Fetching instead.
Got %lu recordIDs queued for delete processing which split sa %lu records to RE-fetch and  %lu to delete
********* Error while deleting attachments %@
Rate limited while deleting
DeleteRecovery
********* Error while fetching non-orphaned deleted attachments %@
Kicking off another batch delete to cloudKit
IMDCKSyncState
Exception while adding syncError. exception:%@, error:%@, simplifying
ProductBuildVersion
Setting object %@ for key %@ in analyticDict.
Setting ProductBuildVersion %@ for key %@ in analyticDict.
Removing keys %@ %@ from analyticDict.
Request to set analytic sync date for object %@ and key %@ shouldOverrideIfExists %@
Errors(%lu total)
NewUser
RestoringUser
chat %@ init %@ %@ full %@ %@ %@
syncAttempts
syncSuccess
syncDuration
syncCounts
pcsStatus
%@, isFeatureEnabled: %@, isSyncing: %@, isEligibleForTruthzone %@, isSyncingEnabled: %@, isRemovedFromBackup: %@, isInExitState: %@, exitDate: %@, isStartingDisabledDisableDevice: %@, lastSyncDate: %@, isSyncingPaused: %@, startingChangingEnabledSetting: %@, isPaused: %@, syncControllerSyncState: %@, syncControllerRecordType: %@, syncType: %@, accountStatus: %@, syncErrors: %@
Account needs repair
IMDMessageHistoryFirstUnlockReplaySyncTask: Begin replaying first unlock database for %ld services
IMDFamilyInviteReponseHandler
inviteUrl
view
The file transfer does not exist on disk, but the transfer was explicitly ended.
IMDFileTransferCenter
Sending completion notification for explicit download of transfer:%@
Sending completion notification for explicit download of transfer with guid %@. transfer:%@
__kIMDFileTransferCreatedNotification
__kIMDFileTransferAcceptedNotification
__kIMDFileTransferBatchAcceptedNotification
__kIMDFileTransferStoppedNotification
__kIMDFileTransferRemovedNotification
__kIMDFileTransferUpdatedNotification
__kIMDFileTransferHighQualityDownloadInitiatedNotification
__kIMDFileTransferHighQualityDownloadCompletedNotification
__kIMDFileTransferHighQualityDownloadCompletedSuccessKey
__kIMDFileTransferHighQualityDownloadCompletedFileURLKey
__kIMDFileTransferExplicitDownloadCompletedNotification
__kIMDFileTransferExplicitDownloadCompletedErrorKey
__kIMDFileTransferExplicitDownloadCompletedSuccessKey
__kIMDFileTransferExplicitDownloadCompletedFileURLKey
File transfer operation was unsuccessful.
File transfer local file URL retrieval operation was unsuccessful.
See error code and compare against IMFileTransferErrorReason.
Attachments
FileTransferCenter updating guid for transfer in cache map:%@ to %@
Transfer failed. See underlying error. transfer.errorDescription:%@
IMDFileTransfer posting recoverable error state for IMFileTransfer
IMDFileTransfer reset file transfer to waiting state
Transfer was reset. See underlying error. transfer.errorDescription:%@
Marking transfer %@ as failing preview generation
Updating transfer %@ with size %@
New attribution info is %@
Attachments - Failed to update transfer preview size for %@, transfer not found
IMDFileTransfer posting recoverable error state (%zd) for IMFileTransfer %@
Failed to consume sandbox token, %@ token:%@
file-read-data
Denying transfer, (check %d, errno %d) client with audit token:%u not allowed to access request path:%@
Failed to release sandbox token, %@ token:%@
_handleFileTransfer accepted %@ - %@
ForceAllTransfersExpired
Invalid transfer state. transferState:%@ cloudKitSyncState:%@ existsAtLocalPath:%@
_handleFileTransfers accepted %@ - %@
Invalid transfer state. transferState: %@ cloudKitSyncState: %@ existsAtLocalPath: %@
IMFileTransferCenter
stopping transfer to guid
File transfer stopped locally.
File transfer removed.
MessageService Failed writing attachment to disk on incoming:%@
%s Requested to size with zero transferGUIDs
-[IMDFileTransferCenter sizePreviewsForTransferGUIDs:]
overall
Attempting to generate size for guid %@
Generated size for guid %@ size %f-%f error %@
v36@?0B8{CGSize=dd}12@"NSError"28
IMDFileTransferCenter - Timed out sizing transfer with guid %@, failing!
%s Skipping sizing guid %@. Needs sizing %@ hasLocalURL %@
Sizing complete, timing %@
v32@?0@8Q16^B24
{CGSize=dd}
IMDCKAttachmentSyncCKOperationFactory
Created fetch attachment operation  ID %@ fetch operation dictionary %@
Created modify attachment operation ID %@ operationGroupName %@
AttachmentDelete
Created deleted attachment operation ID %@
ExposureNotification
Activated ENManager: %@
en-push-allow-domains
en.express
enexpress.app
en-push-disabled
v40@?0@"NSURL"8{_NSRange=QQ}16^B32
ENTextMessage
Error: %@
Verified success
Running on an old build - unable to run through ENManager
com.apple.private.alloy.messagesquickswitch
MessagesQSwitch
tempSMS.db
tempDowngradedSMS.db
QuickSwitch
Instantiated IMDQuickSwitchController
Sending dummy request
Current db version is %ld
Recents
compressedSMSRecents.zip
compressedSMSDB.zip
QuickSwitch Could not determine file size as path was nil
QuickSwitch Could not determine file size at path %@ with error %@
Size of file at path %@ is %lu
QuickSwitch We got a nil path to truncate to.
QuickSwitch Could not delete DB at path %@
QuickSwitchTruncating
Messages
Started truncating quick switch DB
QuickSwitch Could not trim DB with error %@ 
Finished truncating quick switch DB
QuickSwitch we were given a nil path to delete
QuickSwitch Could not delete file at path %@ with error domain '%@' code: %ld
Deleted file at path %@ 
Cleaning up temporary files
QuickSwitch Could not delete DB at path %@ %@
QuickSwitch. We do not expect file to already exist. Clearing it.
QuickSwitch Could not delete zipped file DB at path %@ with error %@
QuickSwitchZipping
Finished zipping quick switch DB
QuickSwitch Could not create zipped DB
v16@?0@"IMFileCopier"8
Started zipping quick switch DB
QuickSwitch. We do not expect file to already exist.
Finished unzipping quick switch DB
QuickSwitch Could not create unzipped DB
Started unzipping quick switch DB
Initiating quick switch
QuickSwitch Could not send initiate QuickSwitch message. Bailing!
Could not send initiate QuickSwitch message. Bailing!
Could not send QuickSwitch Recents request. Bailing!
We tried to _handleQuickSwitchInitiateRequest a non watch device for QuickSwitch. This is really bad!
Finished with success %@
dbVersionResponse %@
Downgrade: found a database that can be downgraded to version: %ld
Trying to QuickSwitch to incompatible gizmo. Bailing quick switch. localDBVersion %ld gizmoDBVersion %ld
QuickSwitch Truncated DB did not succeed at path %@, Really bad! 
Truncation succeeded! :-)
Attempting downgrade from %ld to %ld...
Error Trying to QuickSwitch watch to version %ld from %ld. Downgrade failed with error: %@
Downgraded from %ld to %ld ok! :-D
QuickSwitch failed to rename downgraded db to tempdb with error: %@
renamed %@ to %@ in preperation for compression - this means the downgrade completed ok. :-D
We could not create zip file for QuickSwitch
Sent zipped file to watch
Database QuickSwitch: Could not send file over to gizmo. Bailing
Copying from %@ to %@
QuickSwitch could not copy path to temp directory with error %@. Bailing!!
QuickSwitch we could not create zip file
QuickSwitch could not send file over to gizmo. Bailing
_handleQuickSwitchCompleted %@
QuickSwitch got _handleIncomingDB on a non gizmo. Really bad!!
QuickSwitch got _handleIncomingRecents on a non gizmo. Really bad!!
Sending file at URL %@ to local account (identifier %@)  (error %@)  (metadata %@) success: %@
Sending message to local account (identifier %@)  (error %@)  (request %@) success: %@
service %@, account %@, incomingData %@ fromID %@ context %@
Not an IDSDevice: fromID %@. Bailing
Got request %@
Got IMDQuickSwitchControllerCommandInitiateQuickSwitch
Got IMDQuickSwitchControllerCommandResponeDBVersion
Got IMDQuickSwitchControllerCommandRequestRecents
Got IMDQuickSwitchControllerCommandQuickSwitchCompleted
QuickSwitch got unknown request over quick switch service %ld
service %@, account %@, resourceURL %@ metadata %@ fromID %@ context %@
Got IMDQuickSwitchControllerCommandIncomingDB at url %@
Got IMDQuickSwitchControllerCommandIncomingRecents at url %@
QuickSwitch got unknown resource ULR callback over quick switch service %ld
message sent with identifier %@ 
Checking if we are in proxy mode
Not in proxy mode. Found active iMessage account signed into email %@ 
In proxy mode. Did not find any active iMessage account logged in using email.
Found default paired device %@
QuickSwitch Did not find default paired device
QuickSwitch _notifyPSYWithResult not available on this platform
QuickSwitch _notifyPSYDataSent not available on this platform
SWCollaborationNoticeTransmissionMessage
SharedWithYouCore
SWCollaborationClearNoticeTransmissionMessage
com.apple.private.alloy.gelato
Loaded notice dispatch service: %@
IMDCollaborationNoticeDispatcher
-[IMDCollaborationNoticeDispatcher sendNotice:toHandles:fromHandle:]
%s: Bailing due to rate limiting for notice: %@
Sending notice (command: %@) %@ to %@, message: %@
%s Successfully sent Collaboration Notice (guid: %@) to handles: %@
%s Received request to send Collaboration Notice, but the feature is not enabled. Dropping message.
-[IMDCollaborationNoticeDispatcher sendClearNotice:toHandles:]
%@-%@.data
ClearCollaborationNotice
%s Received notice dismissal request from %@ but unable to process notice, incompatible version of BlastDoor. Dropping notice.
%s Received request to send Collaboration clear Notice, but the feature is not enabled. Dropping message.
%s: Handling request to reflect notice dismissal for guids: %@
-[IMDCollaborationNoticeDispatcher reflectDismissalForNoticeGUIDs:]
%s Dropping request to reflect notice dismissal because notices are not enabled, guids: %@
%s: Handling incoming Collaboration Notice from: %@
-[IMDCollaborationNoticeDispatcher handleIncomingNoticeProtobuf:service:account:fromID:context:]
%s Received notice from %@ but unable to process notice, incompatible version of BlastDoor. Dropping notice.
%s Received notice from %@ but notices are not enabled. Dropping notice.
%s fromID: %@, message: %@
-[IMDCollaborationNoticeDispatcher service:account:incomingMessage:fromID:context:]
%s Received incomingMessage from %@ but unable to process Collaboration Notice Action, incompatible version of BlastDoor. Dropping notice.
%s Received incomingMessage from %@ but notices are not enabled. Dropping notice.
notice-fanout-threshold
__kCKRecordIMMessageIncompatibleDeleteNotification
time
sender
chatID
SubType
SubTypeMsg
msgType
subject
body
pdata
esid
tRead
tDelivered
tPlayed
flags
msgSummaryInfo
msgProto
msgProto2
msgProto3
dcId
rGuid
eCode
ROWID
TOID
TOPart
MessageEncryptedV3
messageUpdateV1
***Error _populateCKRecordWithIMMessageItemFields called on object %@ %@
***Error _populateCKRecordWithIMMessageItemFields (reply data) called on object %@ %@
***Error compressedProtobufDataForGroupTitleChangeItem called on object %@ %@
***Error _populateCKRecordWithIMGroupTitleChangeItemFields called on object %@ %@
***Error compressedProtobufDataForParticipantChangeItem called on object %@ %@
***Error _populateCKRecordWithIMParticipantChangeItemFields called on object %@ %@
***Error compressedProtobufDataForLocationShareStatusChangeItem called on object %@ %@
***Error compressedProtobufDataForGroupActionItem called on object %@ %@
***Error compressedProtobufDataForMessageActionItem called on object %@ %@
-UpT1
-UpT2
MSGID
TPart
Failed to unarchive ckrecord. Error: %@
IMItem+CKRecord
Cannot create record from recordID because it is nil %@
Cannot sync item because it is an incompatible action type %lld
***** Error Tried to generate a CKRecord from class %@ ******
****** initiWithCKRecord called with unsupported message type %@ *****
We don't have a valid guid for the message record we want to reset sync state: %@
IMItem_CKRecord
Phone number destination callerID [%@] is unselected on phone but phone does not have SIM inserted and caller ID is a phone number so will store message [%@] anyways
We have an iMessage account that is not backed by an ids account ---- please file a radar
v32@?0@"IMDAccount"8Q16^B24
Skipping shouldStore check, destinationCallerID: %@
We should not store the message [%@] because our destination callerID [%@] has been unselected from list of available aliases
CacheDelete
Is already updating file sizes, returning
attachment-filesize-update-not-allowed
Server bag does not allow attachment filesize updating, retunring
Calling IMDAttachmentUpdateAttachmentFileSizeWithRowIDGreaterThanWatermark with rowID %@ iteration %@
No more attachment fileSizes to fix up, got nil back from query
filename
rowID
Got an empty set of attachments back - there are still more so increasing watermark by 20
Previous batch of attachment filesize updates completed, setting new watermark to be %@
Stopping filesize update. Set state attachment filesizes updated activity result %d
Registering with cache delete upon launch
Setting up cache delete callbacks cache delete enabled %@
com.apple.imagent.cache-delete
com.apple.messages-cache-delete
~/Library/Messages
Purge event: %@
rescan
historyDone
Purge notification - All done
path
v16@?0r^{__CFSet=}8
CacheDelete -- purgeable block called with urgency: %d info: %@ isMainThread: %@
purgeable callback dictionary: %@
r^{__CFDictionary=}20@?0i8r^{__CFDictionary=}12
CacheDelete -- purge block called with urgency: %d info: %@ isMainThread: %@
Purge callback with callback dictionary: %@
CacheDelete -- periodic block called with info: %@ and urgency: %d isMainThread: %@
AttachmentWatermarkResetDone50600874
CACHE_DELETE_GUIDANCE
CACHE_DELETE_GUIDANCE_DO_NOT_EXPAND_CACHE
Cache delete  guidance %@ requested size %@
CACHE_DELETE_VOLUME
Purgeable callback -- purgeableSpace: %lld purgeableNumber: %@
CACHE_DELETE_AMOUNT
Purge callback -- Deleted bytes: %lld, volume: %@ is running on main thread: %@
nothingToPurgeDictionary -- volume: %@ purgeableSpace: %@
_purgeableSpaceGivenUrgency -- Bytes available to purge: %lld result: %lld urgency: %d
We somehow got back a negative number of bytes to delete so we don't want to delete anything
Tried to obtain purgeable attachments without proper default ---- please set them: defaults write com.apple.madrid EnableCacheDelete -bool YES
Purgeable space %@
Tried to purge attachments without proper default ---- please set them: defaults write com.apple.madrid PurgeWithCacheDelete -bool YES
PurgeWithCacheDelete default not enabled
purgeAttachments with bytes: %lld
We got back %lu records from persistence to delete which resulted in %lu file transfers to delete
No attachments to delete
 We didn't get back any attachments to purge
We failed to create an IMFileTransfer for IMDAttachmentRecordRef with identifier: %lld
Tried to call _deleteFilesOnDiskAndUpdateTransfers without proper default ---- please set them: defaults write com.apple.madrid EnableCacheDelete -bool YES
We are removing the file at path: %@ for transfer: %@
We attempted to delete a path that was not safe to delete for guid: %@ path: %@
There was an error trying to remove the file: %@
We successfully removed the file - setting the transfer state to waiting for accept
The transfer we want to remove does not exist at its local path -- transfer (%@) local path (%@)
existsAtLocalPath
localPath
transferState
success
Created %lu dictionarie(s) for transfer info of deleted attachment(s)
Did NOT metric fetching synced attachments from CloudKit. CK Enabled %@ , device conditions allow sync %@
We are going to try and fetch attachments we would want to delete from local disk with bytes to free up: %lld
We got a fileTransfer that doesn't exist that we think we can delete for CacheDelete: %@
Going to try and fetch from sync controller with %ld batches to fetch
We disconnected from power or wifi in between batches, so cutting the batches short
_fetchTransfers with totalTransferCount: %@ index of transfers: %@ number of batches to fetch: %@
Completed fetching batch with starting index: %@ index of next batch: %@ for number of batches: %@
/*-------Fetched all transfers we wanted to validate------*/
com.apple.private.IMDAvailabilityAutoReplier
CARAutomaticDNDStatus
CarKit
Chat is not eligible for availability auto replies or dnd breakthrough
Message sender not eligible for availability reply or dnd breakthrough
Message items should break through do not disturb, sending did notify recipient receipt, and triggering urgent notifications
Message items did not break through do not disturb, attempting to send unavailability receipt or SMS message
No message items support availability reply, ending processing
DNDModeConfigurationService
DoNotDisturb
com.apple.messages
IMDAvailabilityAutoReplier
UserIsUnavailable
DNDMutableContactHandle
Not processing possible availability reply for non 1-1 chat
Not processing possible availability reply for business chat
Not processing possible availability reply for chat with more than one participant
Not processing possible availability reply for sender with zero length handle
Not processing possible availability reply for sender who is not a contact
Not processing possible availability reply, DND framework says we should appear available to this user
Message item does not support availability reply
Reducing messages to process for availability reply from %ld messages to %ld messages.
Not sending delivered quietely receipts in SMS chat
Requesting delivered quietely receipt be sent to message guids: %@
Not sending text auto reply to chat: %@
Sending text auto reply to chat: %@
Device does not support iMessage auto reply becuase it is not an iPhone
Device does not support SMS auto reply becuase it does not support CoreTelephony subscriptions
SMS auto reply not supported becuase device is not an iPhone
SMS auto reply not supported becuase local device does not have a SIM matching the last addressed SIM ID
DNDStateService
Driving focus is active
Driving focus is not active, current focus semantic type is %ld
DND mode is nil
DND active mode configuraiton is nil
Determined that we have not recently sent an availability auto reply. Message time %@ is older than recency window %@
Determined that we have not recently sent an availability auto reply. We haven't sent an auto reply in the last %ld messages.
Found a recent auto reply message from me: %@
Message %@ was not an auto reply from me. isFromMe: %ld, isAutoReply: %ld
Item is not a message. Item class: %@
v32@?0@"IMItem"8Q16^B24
Message item does not support breakthrough notification
Reducing messages to process for breakthrough notifications from %ld messages to %ld messages.
Not processing possible dnd breakthrough for message from me
Not processing possible dnd breakthrough for empty message
Not processing possible dnd breakthrough for typing message
Not processing possible dnd breakthrough for locating message
Not processing possible dnd breakthrough for auto reply message
Not processing possible dnd breakthrough for unfinished message
Not processing possible dnd breakthrough for system message
Not processing possible availability reply for message from me
Not processing possible availability reply for emote message
Not processing possible availability reply for empty message
Not processing possible availability reply for typing message
Not processing possible availability reply for locating message
Not processing possible availability reply for auto reply message
Not processing possible availability reply for unfinished message
Not processing possible availability reply for system message
Not processing possible availability reply for message that is a legacy urgent trigger
Message is flagged to notify recipient, should ignore do not disturb
Message has a legacy urgent trigger text, should ignore do not disturb
Message is SOS, should ignore do not disturb
Message received in chat that is in an urgent message grace period, should ignore do not disturb
Messages are not urgent, will not break though do not disturb
Determining if we should alert for this message by checking if we are in an urgent message grace period. Looking for received urgent messages in the last %ld minutes.
Determined that we are not in urgent message grace period. Message time %@ grace period start window %@
Found a recent message that broke through our dnd within the grace period window. Grace period is active.
Found a recent message that contains the urgent trigger phrase within the grace period window. Grace period is active.
Found a reply sent by me to the chat within the grace period window, extending grace period to %ld minutes.
Message %@ did not impact grace period. isFromMe: %ld, didNotify: %ld
Not checking grace period for non 1-1 chat
Chat is missing identifier or service: %@
Urgent
DaemonCoreLocalizable
Message has a legacy urgent trigger match
Sending %ld auto-reply messages to chat: %@
No sending auto-reply because no message text was available to send
Device is not in driving focus, not sending text auto reply
This device does not support text auto reply
We have already sent a recent text auto reply, not auto-replying again.
Not sending auto reply becuase the user auto reply audience preference does not match this chat. Audience %ld=%@
Auto reply audience preference matches this chat. Audience %ld=%@
Nobody
Contacts
Favorites
Auto-reply audience is %ld=%@
Is using customized auto reply message: %ld
Audience %ld=%@ allows replies: %ld
Participant %@ is not in contacts
Participant %@ is a favorite?: %ld
Participant %@ is not a contact, and cannot be a favorite
chatID %@ is recent?: %i
Message is SOS
AllowSOSViaNonSMS
maps.apple.com
^(http)s?(\:\/\/maps\.apple\.com\/\?ll\=)\-?\d+\.\d+,\-?\d+\.\d+\&q\=[^\&]+$
Message has an SOS URL match
recordKeyZone
chatEncryptedv2
attachment
IMDCKMockDatabase
Adding operation %@
Did not find mock database for operation %@ zoneID %@
CKBBContextKeyChatGUIDs
CKBBContextKeyMessageGUID
IMDNotificationResponseUtilities
couldn't find chat for %@ to mark message as read
receive notification response for bundleID [%@]
ChatSync
IMDCKChatSyncCKOperationFactory
fetchChatZoneChangesCKOperationUsingToken was passed in a nil zone
Created fetch chat operation ID %@
writeChatsOperationUsingRecordsToSave was passed in a nil records array
Created modify chat operation ID %@
Created deleted chat operation ID %@
IMCKChatSyncCKOperationFactory
IMDService
Registering bundle: %@
   => Internal service with name: %@
mcSV
mcAK
mcEK
mcNFK
mcIFK
pnHK
nRID
nBWV
pRID
IMDMeCardUpdatedNotification
Nickname feature is turned off, don't load nickname info into memory
nickNameKeyStore.db
nicknamekeystore
handledNicknamesKeyStore.db
handledNicknamesStore
pendingNicknamesKeyStore.db
pendingNicknameUpdatesStore
handleSharingPreferences.db
handleSharingPreferences
Evaluating account state for feature eligibility {refreshediCloudAndAppleIDMatch: %@ currentiCloudAndAppleIDMatch: %@}
Received aliases did change hasMultiplePhoneNumbers %@
nickname-reupload-profile-version
UseOldProfilesContainer
We successfully reuploaded our local nickname %@ %@
We were not successful in reuploading our nickname to the new container
Told this device just signed into iMessage, we need to ask our peers for nickname info requestedInfoBefore %@ retry count %@
Successfully sent request to peers for nickname info
We did not have the IDSDevices to send the request to, going to try again in %@
We do not have enough retries to get nickname info, not trying again
Told this device signed out of iMessage, we need to reset the bit that we've asked for the nickname feature info
Nickname sharing is not enabled or trying to verify on a group chat -- bailing verifying record ids
Going to verify if truncated record ID %@ is equivalent to our personal record id %@ current truncated id %@ recordIDS are equals %@
Truncated record id does not match, marking this chat as dirty so we send a nickname on the next message send
Beginning upload of nickname profile to CloudKit
Nickname is still uploading after time out %@ setting upload to done
Nickname upload has completed -- sending out of band nickname updates
We couldn't find a chat to send nickname info to for guid %@
Client request to store new personal nickname %@ path%@
Trying to set a personal nickname when the feature is off
Uploading Personal Nickname
Successfully Uploaded Personal Nickname
Unable to store in Public Database, aborting fanout to other devices
Failed Uploading Personal Nickname
Error: %@
 Fallback nickname: %@
v44@?0B8@"IMNickname"12@"NSString"20@"NSData"28@"NSError"36
Loaded pending nickname from disk: %@ and uploading
Found Pending Nickname Upload
No pending nickname found.
Resetting handle allow/denylist
Going to retreive the current nickname from CloudKit
v24@?0@"IMNickname"8@"NSError"16
Nickname feature is disabled, not fetching current nickname
Failed to fetch public nickname {error: %@, recordName: %@}
Failed Personal Nickname Fetch
recordID: %@
decryptionKey: %@
error: %@
Got personal nickname from IMTransferAgent: %@
Fetched Personal Nickname
Nickname Download
Public Nickname fetched or failed in time: %f
Name+Photo sharing feature is disabled, not fetching CloudKit record
We are missing parameters to fetch the CloudKit record (recordID: %@) (URI: %@) (decryptionKey: %@)
Already have this one, no need to grab it again from CloudKit with recordID %@
Retreiving nickname from IMTransferAgent with recordID %@
Fetched Nickname for %@
Nicknames - Failed getting nickname for record ID %@ from transfer agent with error %@
Failed Nickname Fetch for %@
recordID: %@
error:%@
The nickname feature is disabled, we shouldn't make any requests to CloudKit
Client request to delete personal nickname with recordID
Transfer agent succeeded in deleting public nickname from CloudKit
Did not succeed in deleting public nickname from CloudKit!
The nickname feature is disabled, not taking updates coming from madrid
audienceValue %@ enabledValue %@ nameForked %@ imageForked %@
Going to update Me Card preferences %@
Sharing Preferences Changed
Not enabled, deleting local recordID and cache
Transporting sharingEnabled %@
Transporting meCardSharingAudience %@ nicknameVersion %@ decryptionKey %@ nickNameID %@ nameForked %@ imageForked %@
Marking nickname as handled %@
updateHandledNicknamesIfneeded incomingPendingNicknameVersion %@ currentPendingNicknameUpdatesVersion %@
Our current pending handles %@ our incoming pending handles %@
We need to mark the following handles as having been updated %@
Peer Device Updated Handled Nicknames
Alert header: %@
Alert message: %@
Finished personal nickname fetch with nickname: %@, updating key store
Failed fetching new personal nickname: %@
Received newer version number (%lu, old: %lu), updating the deny/allow list store
Deny list added: %@
Deny list removed: %@
Allow list added: %@
Allow list removed: %@
Deny list
 and 
Allow list
 Updated from Peer Device
handleBlacklist
handleWhitelist
Broadcasting changes to the deny and allow list
Received older version number (%lu, old: %lu), dropping deny/allow list update
Nickname feature is disabled, ignoring updates from peer device
Nickname Updates from Peer Device
We got a request to send nickname info to a specific device %@
Nicknames not enabled, deleting the one we know about.
No nickname stored locally. Not querying CK.
Nicknames enabled, and we already have one in cloudkit. Broadcasting to my other devices.
We should send personal nickname info to all of our own devices
Nickname feature is disabled, not sending updates to peers
Sending nickname info to destinations %@
We could not find a service session for imessage to send the nickname info or no contents in message dictionary %@ %@
We are still uploading the nickname to iCloud, queue to send info out of band for chat %@
Nickname feature is disabled, not sending personal nickname to chat
Sending nickname info to chat %@
We didn't have a session to send the nickname info over
Writing %lu nicknames to allow list
We have an iMessage chat for guid so sending nickname info %@
Writing %lu nicknames to deny list
Nicknames - We had a problem writing a handle list update with key %@ -  %@
Nicknames - We had a problem archiving handle list for key %@ error %@
We could not replace incoming nickname in our handled map, add to pending
We replaced userNickname in our handled map w/ an existing handled record
We got a pending nickname to handle %@
We don't have a pending nickname to clear for handle ID %@
We got a malicious pending nickname to handle %@
We don't have a malicious pending nickname to clear for handle ID %@
Tried to add a nil nickname to our pending map
New pending nickname has no image %@
New pending nickname name hasn't changed, silently updating record ID for previously handled nickname %@
Adding new nickname to our pending map %@
add nickname to pending updates %@ %@
Existing nickname %@ and new nickname %@ are different %@
Marking nickname %@ as handled
Trying to update a nil nickname
Replacing handled nickname for handle id %@ from record id %@ to new record id %@
For nickname %@, deleting old avatar image at path during mark as updated %@. Error %@
writing nickname %@ to kvstore %@
We had a problem writing the nickname to the pendingNicknameUpdatesKVStore %@
We had a problem archiving the nickname object %@
We got an error trying to remove %@ from the pending map %@
We got an error trying to remove %@ from the handled map %@
Got called to clean up nickname for id %@
Removing %@ from allow list 
Removing %@ from deny list 
Removing %@ from pending nickname updates
Removing %@ from handled nickname updates
Sending updated handled and pending nicknames to peers and client
Nicknames
Deleting data from handled nicknames KVStore
Deleting data from pending nicknames KVStore
Exiting scrutiny mode
Nickname feature is disabled, not loading nickname info from disk
Device is under first unlock so we need to put updates into a temporary map until we leave first unlock
We are not under first unlock so we are able to load all data
IMDNicknameController is already in scrutiny mode before attempting to load data from disk. Will delete existing data.
Not going to load personal nickname, feature is disabled
Limit to load of nicknames %@
Setting the IMDNicknameController scrutiny flag
Clearing the IMDNicknameController scrutiny flag
We did not have success loading handled nicknames %@ or updates %@
created handled nickname map %@
created pending nickname map %@
Nicknames - We got an error loading the handle allow list data store %@
Nicknames - We got an error loading the handle deny list data store %@
Nicknames - Failed to unarchive allow list %@
No allow list data to load
Nicknames - Failed to unarchive deny list %@
No deny list data to load
Successfully loaded %lu allow list handles %lu deny list handles
We got an error loading the nicknames data store %@
We had an error %@ unarchiving data %@
Converting all nickname contents to Class C!
Failed making file class C: %@ with error %@
Storing personal nickname %@ and recordID %@ on disk
Writing nickname data of size %lu, recordID data of size %lu, and encryption key of size %lu to disk
NicknameRecordID
NicknameRecordKey
NicknameDataKey
Error writing data to KVStore %@ %@
Error writing personal nickname data to KVStore %@
Personal nickname data is nil, not writing to disk
Storing pending nickname %@ while waiting on upload
NicknamePendingKey
Error writing data to kvStore %@
Error reading pendingNickname %@
Error unarchiving storedPersonalNickname %@
storedPersonalNickname is nil
Error deleting data from kvStore %@
Error deleting data from KVStore %@
Error reading nickNameDecryptionKey %@
Error reading storedPersonalNickname %@
Error Loading Personal Nickname From Disk
Stored personal nickname doesn't exist
No Personal Nickname On Disk
Loaded Personal Nickname From Disk
Nickname loaded from disk did not have a recordID. Attempting to load recordID from disk.
Error reading nickname for pending upload %@
Error unarching pending nickname upload %@
Error deleting nickname avatar from path: %@
Passed in empty recordID
Did not find nickname for recordID %@
Found existing nickname
No nickname for handle %@
I'm being asked for handleURI %@
System did leave first unlock, loading maps into memory
FakeID
First
Last
IMDMessageSortOrderAssigner
%s assigning %@ sortID %@
-[IMDMessageSortOrderAssigner compareMessageToOtherMessagesWithSameReplyToGUIDAndAssignSortID:existingMessagesWithSameReplyToGUID:]
-[IMDMessageSortOrderAssigner assignSortIDToIncomingMessageWithNoExistingMessagesWithSameReplyToGUID:onChat:]
Chat has zero length identifier %@ or service %@
Chat has GUID (%@) but expected GUID (%@), recovering chat
Chat GUID did not match chat properties
Invalid Chat GUID
Chat appears to need recovery but style is not supported %c
Chat with expected GUID already exists, generating new chat identifier %@ and GUID %@
Failed to generate new chat identifier for account %@
Chat with expected GUID %@ already exists, cannot reset 1-1 chat GUID
Resolved inconsistent GUID to %@ with success: %@
IMFocusStateManager
Dispatching with 15s delay to register for NSUserDefaults KVO.
15s delay completed
IMDChatStore-AllUnreadMessages
Performing initial database housekeeping
Bailing out of initial housekeeping, currently under unit testing
Daemon
Registering for the DB reconnect notification.
Got a mandatory DB reconnect notification, I will now exit.
  => Failing all unsent, unfailed messages
  => Database was full, waiting to post
  => Posting database full
Focus state changed, rebuilding unread message count
Resetting _cachedUnreadMessageCount because _updateModificationDate
Updating cache for message guid: %@ calculateUnreadCount %@
  **** Updating this chat!
Storing Aux image transfer %@
_storeAttachmentsForMessage did not find Aux video transfer %@
Updating transfer: %@
Posting resulting transfer to clients; %@
Not storing: %@
Stored item to database: %@:%@
SyndicationActions
Updated syndication ranges with SyndicationAction %@. newRange: %@
Did NOT update IMMessageItem's syndication ranges for SyndicationAction %@
Message not found for syndication action for guid: %@
Updated syndication ranges for message item with guid %@. newRange: %@
Did not updated syndication ranges for message item with guid %@. newRange: %@
Updating syndication ranges for message item with guid %@. newRange: %@
Database
Stored message: %@
Updated from %@->%@  on service: %@
IMDMessageRecordCopyMessagesForAssociatedGUID resulted in a non-associated message item: %@
************* Please file a radar!!!!!!!!!!! *******************************
A message returned by IMDMessageRecordCopyMessagesForAssociatedGUID is associated to %@ instead of the requested GUID %@.
GUID we got from IMDMessageRecordCopyMessagesForGUIDs wasn't one of the guids we requested. IMItem we got back was: %@, IMDMessageRecordRef guid we got was: %@, requested guids was: %@
history query
Requesting history with guid: %@ handles: %@ services: %@ limit: %llu thread identifier: %@ only messages: %@
generate chat items
IMTiming
history query timing: %@
_messagesWithRoomNames: %@ onServices %@ limit %d recordStoreRecords: %@
paged history query
Requesting history with guid: %@ handles: %@ services: %@ number before: %llu number after: %llu thread identifier: %@
_limitedNumberOfMessagesWithHandles: %@ services: %@ messageGUID: %@ numberOfMessagesBefore: %d, numberOfMessagesAfter: %d record count: %d
paged history query timing: %@
_unreadMessagesWithHandles: %@ onServices %@ limit %d recordStoreRecords: %@
_unreadMessagesWithRoomNames: %@ onServices %@ limit %d fallbackGUID %@ recordStoreRecords: %@
Ensure transfers(count=%lu) with GUIDs registered: %@ for message: %@
Existing transfer: %lu/%lu %@
Found saved transfer from DB: %@
New transfer: %@
Not registering %lu/%lu transfers, too many for one message
Should load attachments for associated messages %@
Found messages with associated guids: %@  (%@)
Found messages with guids: %@  (%@)
Have stored message for guid (%@): %@
Fetched item from database for guid (%@): %@
Stored message for guid (%@): %@
Found existing message: %@ similar to: %@   (Skip Services: %@   Skip GUIDs: %@   Within Time Interval: %f)
No existing message similar to: %@   (Skip Services: %@   Skip GUIDs: %@   Within Time Interval: %f)
Stored message for replace ID (%d): %@
Found %d messages with handles: %@ on services: %@  limit: %d
Found %d messages with room names: %@ on services: %@  limit: %d
messagesWithHandlesBeforeAndAfterGUID found %d messages for number of ids: %d on number of services: %d numberOfMessagesBefore: %d numberOfMessagesAfter: %d
Found last message: %@ with handles: %@ on services: %@
Found %d messages with handle: %@ on service: %@  limit: %d
Found last message: %@ with room names: %@ on services: %@
v16@?0@"IMDMessageRecord"8
%K = %lld
Found %d filenames with handles: %@ on services: %@
Found %d filenames with room names: %@ on services: %@ 
Found %d message action items for original message guid: %@
MessageStore
Adding message GUID to readReceiptsForMissingMessage cache: %@ (size: %lu)
Found chat guids: %@ for message guid: %@
Couldn't find existing chat with guid: %@ in IMDChatRegistry for messageGUID: %@
   Found Chats: %@
Found chat guids: %@ for message identifier: %lld
Couldn't find existing chat with guid: %@ in IMDChatRegistry for messageIdentifier: %lld
PNIsValidPhoneNumberForCountry
CorePhoneNumbers
Cleaning up symbols from unformatted phone number %@ based on phoneNumberIsValid %d and phoneNumberIsShortCode %d
Canonicalized handle (%@) and unformatted handle (%@) were not equal - TU canonical: (%@) TU unformatted: (%@)
Deleted %d messages with guids: %@ in chat: %@
Deleted %d messages with guids: %@
Deleting batch %d of messages for chatIdentifiers %@ onServices %@. %d messages will be deleted.
deleteMessageswithChatIdentifiers: %@ onServices: %@
Found %d messages to delete
Deleted %d messages with replace ID: %d from handle: %@ on service: %@
IMDChatRegistry
Donating Unread Message Event to Stream for %@.
Attempted to mark a message as unread that wasn't the last message: %@
Marked %@ as unread
Marked %d messages as read with handles: %@ on service: %@  from me: %@
Marked %d messages as read with chat guid: %@ from me: %@
Returning _cachedUnreadMessageCount %@
Computed _cachedUnreadMessageCount %@
Determined unread badge count is %ld for active focus, totalUnreadCount: %ld
Attachment %@ orphaned: not in message(nil:%@), bundle %@
Attachment %@ orphaned: not in group action type %lu
Attachment %@ orphaned: not in item type %lu
Attachment %@ orphaned: mssage %@ not found
suppress DB update timer fired
setSuppressDatabaseUpdates called with suppressUpdates %d 
Scheduling a suppress DB invalidation timer
Going to retract user notifications for read messages
Retract notification for messages matching chats: %@
Posting urgent notifications for messages
Updating posted notifications for messages: %@
Going to post user notifications
Rebuilding lastFailedMessageDateChanged with new value: %lld 
Suppressed: Rebuilding lastFailedMessageDateChanged with new value: %lld 
Rebuilding/Broadcasting unreadCountChanged with new value: %lld 
Suppressed: Rebuilding/Broadcasting unreadCountChanged with new value: %lld 
Broadcasting unreadCountChanged with new value: %lld 
Broadcasting lastFailedMessageDateChanged with new value: %lld 
Suppressed: Broadcasting unreadCountChanged with new value: %lld 
Suppressed: Broadcasting lastFailedMessageDateChanged with new value: %lld 
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDaemonCore/IMDMessageStore.m
-[IMDMessageStore replaceMessageAcknowledgmentsWithNewMessageAcknowledgment:associatedMessageGUID:sender:]
Unexpected nil '%@' in %s at %s:%d. %@
newGUID
ASSERTION FAILED: %@
associatedMessageGUID
Deleting previous acknowledgments failed with error: %@
v40@?0@"NSString"8{_NSRange=QQ}16^B32
Applying edits to the content of message: %@
Edited message does not contain file transfer guid: %@
Message already had originalTextRangesByPartIndex, messages is being edited for a second (or more) time. Not overriding original values.
Message no longer contains any parts, all parts have been retracted, marking message as read
Message is fully retracted, deleting payload data
We retracted the payload data on a message that had no body and was a payload only. Inserting a retraction stamp at index 0.
MessageServiceSession
IMDMessageStoreDomain
Store Edited Message Failed
p:%ld/%@
Found %ld associated message items for retracted message part %ld in edited message %@
Associated message item %@ refers to messagePartGUID %@ that was retracted. Deleting the associated message item.
v24@?0Q8^B16
Deleting associated message GUIDs: %@
B16@?0@"IMItem"8
Breadcrumbs
Observed more than one unconsumed breadcrumb: %@ for '%@' session %@
B16@?0@"IMAssociatedMessageItem"8
History query found breadcrumb %@ with payload history: %tu items.
IMDMessageStore
************* We hit max number of attempts to load dirty messages. Bailing for now
load messages needing CK sync with limit %ld, attemptCount %lu
**** Marking message with rowID %lld as clean ***
**** We had corrupt messages amongst dirty messages. Trying to load messages again. numberOfAttempts %lu
loaded %lu messages needing CK sync with limit, messages %@
************* We hit max number of attempts to load dirty messages needing a T1 update. Bailing for now
load messages needing CK update T1 with limit %ld, attemptCount %lu
************* We hit max number of attempts to load dirty messages needing a T2 update. Bailing for now
load messages needing CK update T2 with limit %ld, attemptCount %lu
Clearing tombstone message table
SMS_FULL_WARNING
DISMISS
__kIMDMessageStoreHandleUnformattedIDKey
__kIMDMessageStoreHandleCanonicalIDKey
__kIMDMessageStoreHandleCountryCodeKey
@"<IMDMessageRecordAccountLookupResult>"32@?0@"NSString"8@"NSString"16@"NSString"24
Built IMItem: %@    from IMDMessageRecordRef: %@
 => Not storing item, service: %@  does not support a database
 => Not storing message, service: %@  does not support a database
com.apple.imagent.SyndicationLibraryChangeObserver
IMDPhotosSyndicationLibraryChangeListener
Started listening for changes to the syndication library. syndicationLibrary: %@
Stopped listening to changes to the syndication library. syndicationLibrary: %@
creationDate
Syndication library changed. Ingesting new analysis data. change: %@
Total change count: %lu.
Asset at index %lu had changes! syndicationIdentifier: %@
Ingesting new analysis data. transfer %@, asset: %@
A syndication library change was received for a particular asset, but a corresponding file transfer was not found using the asset's syndicationIdentifier. syndicationIdentifier: %@, asset: %@
EngroupCreationDateKey
wasDetectedAsSMSSpam
SMSCategory
SMSSubCategory
wasDetectedAsiMessageSpam
shouldForceToSMS
smsSpamExtensionName
numberOfTimesRespondedtoThread
LSMD
RBHE
smsHandshakeState
messageHandshakeState
restoredFromBlackhole
GPUFC
__kIMChatPreviouslyBlackholedChatHasBeenLoaded
__kIMDChatParticipantsDidChangeNotification
__kIMDChatParticipantsDidChangeAddedParticipantsKey
__kIMDChatParticipantsDidChangeRemovedParticipantsKey
Attempting to init chat with zero length chat identifier, guid: %@
Attempting to init chat with invalid guid %@
%s (%@)
-[IMDChat initWithAccountID:service:guid:groupID:chatIdentifier:participants:roomName:displayName:lastAddressedLocalHandle:lastAddressedSIMID:properties:state:style:isFiltered:hasHadSuccessfulQuery:engramID:serverChangeToken:cloudKitSyncState:originalGroupID:lastReadMessageTimeStamp:lastMessageTimeStampOnLoad:cloudKitRecordID:isBlackholed:autoDonationBehavior:autoDonationBehaviorLastModificationDate:isRecovered:]
Created chat: %@
-[IMDChat dealloc]
Dealloc chat: %@
chatIdentifier
serviceName
roomName
displayName
Updating chatInfo with autoDonationBehavior: %ld
IMDChat
engramID
serverChangeToken
cloudKitSyncState
originalGroupID
lastReadMessageTimeStamp
lastTUConversationCreatedDate
lastAddressedLocalHandle
lastAddressedSIMID
properties
style
state
unreadCount
isBlackholed
isFiltered
hasHadSuccessfulQuery
lastMessageTimeStampOnLoad
isRecovered
participants
Chat: %@  Adding participants: %@
Trying to add participants: %@ to 1:1 chat :%@
Chat: %@  Removing participants: %@
Trying to remove participant from a group chat with 2 or less participants %@
Chat: %@  Resetting to participants: %@
1:1 chat was missing participant, re-added %@ to %@
Cannot recover participant due to empty chatIdentifier for chat: %@
Reassociating chat: %@  to account: %@
IMDChat: %p GUID: %@ Style: %c State: %d Participants: %@  Room Name: %@  Display Name: %@  Identifier: %@  Unread count: %d  Row ID: %lld  Group ID: %@, originalGroupID: %@ lastAddressedHandle: %@ lastAddressedSIMID: %@ isFiltered: %d, hasHadSuccessfulQuery: %@, Engram ID: %@, serverChangeToken:%@, cKSate:%@ lastReadTime:%@ engroupCreationDate: %@ %@ cloudKitRecordID, isBlackholed: %@ groupPhotoGuid: %@ isRecovered: %@
lastMessage
pcmid
Chat: %@   Updating last message: %@
Chat: %@   Property update: %@
     Resulting properties: %@
     => Saving changes
ChatRegistry
   Generating group ID for chat: %@    groupID: %@
   Generating group ID for chat: %@    groupID: %@  using IDs = %@
Updating lastReadMessaeTimeStamp from: %@ to: %@ for chat: %@
Updating record change tag (etag) from: %@ to: %@ for chat: %@
Updating ck record ID from: %@ to: %@ for chat: %@
resetting CK Sync state
Updating last addressed handle ID from %@ to %@. force update %@
Updating last addressed sim ID from %@ to %@
Indexing with Spotlight as chat was moved out of Junk. Chat with guid: %@
Delete from Spotlight as chat was moved to Junk. Chat with guid: %@
Updating isFiltered to: %d
Index chat to Spotlight as it was moved out of Junk. Chat with guid: %@
Starting indexing %llu messages to Spotlight
Failed to find messageGUID for spotlight
Request
Failed to find messageGUID for spotlight reindexing when isBlackholed set to (expecting 0): %d
Updating isRecovered to: %@
Checking if last seen message guid needs updating, old %@ new %@
Trying to persist legacy mergedID-based merged chats - 48047873
For handle [%@] we found another handle [%@] with contactID [%@] that has the same mergedID: [%@]
handle [%@] gets a mergedContactID: [%@]
handle [%@] doesn't have mergedID siblings
invalidHandle
%@:%@
<IMDChat %p _ckUniqueID %@, ckSyncState %ld recordChangeTag %@>
Loaded message profile: %@
msgNicknames
The meCard has been edited
com.apple.private.Messages.IMDCKRecordSaltManager
IMDCKRecordSaltManager
Starting salt fetch on internal queue
*** Error fetching user ID %@
Cached salt : %@
** Fetched salt was 0 length **
v24@?0@"CKRecordID"8@"NSError"16
CloudKit Salt not fetched: syncing enabled %@ first unlock %@
Request to fetch salt
Fetched salt %@
__kIMDChatsLoadedNotification
__kIMDChatRegistryAddedChatNotification
__kIMDChatRegistryChatKey
Received first unlock merge complete notification, re-syncing chats
Resetting LastBulletinboardPostedMessageRowID: %lld
LastBulletinboardPostedMessageRowID
Not Resetting LastBulletinboardPostedMessageRowID: %lld
v20@?0i8Q12
Received merge complete notification, re-syncing chats
com.apple.imdpersistenceagent.notification.mergecompleted
com.apple.imdpersistenceagent.notification.switchcompleted
com.apple.automatichistorydeletion.deleted
Deleted history automatically, re-syncing chats
com.apple.imdpersistenceagent.notification.lastaddressedidsmodified
Last addressed handle/simIDs of chats got modified, force reloading chats
B16@?0@"IMDChat"8
Found existing chat: %@
Created chat: %@ lastAddressedHandle %@
B16@?0@"NSString"8
Chat GUID %@ doesn't match requested GUID %@, may have changed due to inconsistent properties
Cache miss for chat with guid: %@ result: %@
Cache miss for chats with group ID: %@ result: %@
Chat identifier %@ doesn't match requested identifier %@, may have changed due to inconsistent properties
Cache miss for chat with identifier: %@ account: %@ result: %@
Cache miss for chats with ID: %@ account: %@ result: %@
Cache miss for chat with roomname: %@ account: %@ result: %@
@16@?0@"IMDHandle"8
 ==> ERROR sanity check failed: ChatRegistry returned chat that did not match inputs: %@
 ==> Ignoring %@, has incorrect service: %@
 ==> Found exact match based on groupID and participants: %@
 ==> Found a newer chat based on groupID: %@
 ==> Skipping chat with display name of %@, requested display name was zero length, chat: %@
 ==> Found a newer chat based on participants and display name: %@
 ==> Migrating siblings to new groupID if needed: %@
 ==> Updating chat (%@) group ID from %@ => %@
@16@?0@"NSString"8
Finding best candidate group chat with toIdentifier: %@ fromIdentifier: %@ displayName: %@ partipciants: %@ groupID: %@
 ==> Looking up with groupID %@
 ==> groupID lookup failed, falling back to display name: %@ participants: %@
 ==> Found matching chat: %@
 Hint message for last message was older than the current last message: %@, current: %@
 Querying db for last message: %@
 => Using last message: %@ for chat: %@
 Updating unread count for chat: %@ to: %d
Updating the unread count on chat: %@
Forcing unread count to zero on chat: %@
We believe the failed message might have changed, lets rebuild with fromMessage: %@
    => toMessage: %@
Updating groupID from (%@) to (%@) for chat %@
%K == %ld AND %K == %@
Spam
Handling request (autoReport %@) to mark IDs (%@) for services (%@) as spam for chatGUID (%@)
max-spam-messages-per-report
max-spam-message-size
Server Bag has no value for max-spam-message-size, using the default 50
Server Bag has no value for max-spam-messages-per-report, using the default 2
Marked %lu messages as spam
Reporting message: %@
Chat %@ did not have final message, loaded %@
Adding cache missed chat but existing chat found with GUID %@, preferring existing chat
Adding cache missed chat, no existing chat found with GUID %@
@16@?0@"IMDChat"8
Adding cache missed chat with GUID %@, not preferring existing chats
Registering chat: %@
@"NSString"16@?0@"IMDHandle"8
Adding handle %@ handleCNID  %@ to chat %@
Evicting chat: %@
Unregistering chat: %@
Deleting chat: %@
CloudKit syncing is on. Writing deleted chat to deleted sync table
%s: item: %@ chat: %@
-[IMDChatRegistry addItem:toChat:]
%s: message: %@ chat: %@
-[IMDChatRegistry addMessage:toChat:deferSpotlightIndexing:]
******* Not storing message %@ to chat %@
******* IMDMessageStore cannot store message %@ to chat %@
Storing SMS chat %@ old display name %@, old group ID %@ new display name %@, new group ID %@
Found SMS chat with different participants than its iMessage sibling. Chat: %@. Updating participants using %@
Attempting to fix up chat participants if needed
*********** Caught exception while fixing up chat participants on client connection %@ **********
Could not retrieve chats in range (%ld,%ld) as there are not that many, so retrieving all chats, range (%ld,%ld).
Retrieving %ld most recent chats out of %ld chats
********* Calling setInitialLoadForTesting in non unit tests is not supported ***** 
com.apple.IMDaemonCore.unsupportedAction
Would have ignored reload of chats but has zero chats, forcing reload
Forcing reload of chats _isLoading: %d _doneLoadingAfterMerge: %d forced: %d
Dropping all chats in registry
Updating database clients
Posting the update chat registry to all listeners
=> Done notifying clients
NOT forcing reload of chats _isLoading: %d _doneLoadingAfterMerge: %d forced: %d
Received request to wait for chats to be loaded
Setting up observer for loaded notification...
Notified that chats were loaded
Chats are done loading! Calling completionHandler
Chats aren't done loading, this is likely because of first unlock. Continuing to wait
v16@?0@"NSNotification"8
Loading Chats... (Chat Caching: %@)
DidRegenerateGroupID63841559
Should fix unnamed groupID: %@
 Found %d chats
No service found, looking at name: %@
No service found for name: %@: removing this chat [%@]
No account: removing this chat [%@]
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDaemonCore/IMDChatRegistry.m
-[IMDChatRegistry loadChatsWithCompletionBlock:]
generatedGroupID
Unnamed group with non UUID style groupID, lets fix this chat: %@
    New groupID: %@
=> Done Loading %d Chats
Caught exception %@ while merging forks
Merge fork
Not merging forks before first unlock
try to persist mergeID merged chats for [%lu] handles
Will not add malformed IMHandle:%@ to IMDHandleRegistry
Unable to add IMDHandle to _idToHandlesMap due to exception %@ -- nilling idToHandlesMap
Removing IMDHandle:%@ from IMDHandleRegistry
Device left first unlock, re-syncing chats
calling update routing, expire and watch dog after first unlock
Done fetching latest salt after unlock
Performing one time account check after upgrade
systemDidUnlock
DidMakeAllAttachmentsClassC
Making all attachments class C
/var/mobile/Library/SMS/Attachments
ForkMerge
did not find winner %@ in list of duplicates %@
Finding group chats
Found %ld duplicate chats needing merging: %@
winningChat unexpectedly nil
losingChats is unexpectedly nil
found winning chat %@, and losing chats %@, in list of chat duplicates: %@
will merge losing chats %@ into winning chat id %@
repairing duplicate chats failed: %@
merged losing chats %@ into winning chat id %@
Deleted unwanted chat %@
finished merging %ld duplicate chats
No duplicate chats found to merge
-[IMDChatRegistry repairDuplicateChatsIfNeeded]
Unexepectedly true '%@' in %s at %s:%d. %@
_isLoading
DidCheckForDuplicateChats
will check for duplicate chats after checking pref key %@:merged-duplicate-chats
Set pref for duplicate check (%@:merged-duplicate-chats) to YES
Finished repairing duplicate chats in %f seconds
Will NOT check for duplicate chats after checking pref key %@:merged-duplicate-chats
DidMarkGroupPhotosAsUnpurgeable
NOT Using person centric grouped chats cache
Using person centric grouped chats cache
Truncating person centric grouped chats to %ld chats.
q24@?0@"NSArray"8@"NSArray"16
mergedPinningIdentifiers
Number of person centric chats created to send to client %@
Group photo inconsistency detected among merged chats. Attempting to repair
    Chat %@ has groupPhotoGuid %@
Could not find file transfer matching group photo guid: %@
Have file transfer matching groupPhotoGuid: %@. FileTransfer: %@
Accepting groupPhotoGuid %@ as the initial preferred group photo.
Preferring %@ over %@ because the creation date is newer.
Not preferring %@ over %@ because the creation date is older.
Not preferring %@ because it does not have a creation date
The preferred groupPhotoGuid is %@. Transfer: %@
Applying groupPhotoGuid %@ to chat %@ which previously had groupPhotoGuid %@
Chat %@ already had groupPhotoGuid %@, leaving as is.
Completed repair of group photo inconsistency.
Could not determine a preferred group photo among inconsistent merged chats. Leaving inconsistency as is.
(%K = %@ OR %K = %@) AND %K != %d
%@: Chat's _ckUniqueID is nil: %@
We already have a chat to upload for groupID: %@ so we need to compare last message time's
The current chat we have stored has a last message that is later than it's sibling so we don't want to write it to CloudKit and want to replace it with it's sibling. Current GUID: %@ Sibling GUID: %@
We are going to replace the current chat: %@ with: %@ so we should mark it as modified so we don't modify it twice
v24@?0@"IMDChat"8^B16
Got %llu chats to upload
Chat is not SMS or iMessage -- so no need to sync to cloudkit: %@
The current chat we have stored has a last message that is later than it's sibling so we don't want to write it to CloudKit and want to replace it with it's sibling. Current Guid: %@ Sibling GUID: %@
IMChatRegistry
Did not find chat for GUID %@
Searching for the newest chat with OriginalGroupID:%@ on service:%@
Found newer chat match for Original Group ID: %@
Searching for the newest chat with groupID: %@ service: %@
Found newer chat match for groupID: %@
Looking for chat for CKRecord with GUID: %@
Looking for chat for CKRecord with originalGroupID: %@ service: %@
Failed to find group chat with originalGroupID as regular groupID (%@) in %llu chats, trying with client groupID (%@)
Failed to find group chat with current group ID, trying with originalGroupID (%@) as groupID
Found existing chat for CKRecord: %@
No existing chat with originalGroupID (%@) found, checking client groupID (%@)
IMDChatRegistry: Found an existing chat that's not in the registry. This is likely because the registry failed it's chat load. OriginalGroupID:%@ Chat:%@
TriedToInsertDuplicateChat
Won't _ensureNoExistingGroupForCKRecord style:%hhu, originalGroupID:%@ service:%@
Found groupd_id fork for chat while applying changes from cloudKit %@
Marking fork as clean %@
Found original_groupd_id fork for chat while applying changes from cloudKit %@
Chat already exists: %@ to apply changes to
Creating new chat %@ with record %@
Marking existing chat %@ as deferred
%K = %d
Marking existing chat %@ as needing sync from deferred state 
Trying to remove chat with nil groupID: %@
Setting sort id %@ for message %@ on chat %@ synced from CloudKit
Found item that is incompatible with the current device version: %@
Message %@ is an ignorable backward compatibility message, ignoring.
Found GUID for attachment part, associating with attachment: %@ at part id %lu
Updated msg %@ to have CKSyncState %@ stored message: %@
UpdateSyncT1 relating msgID %@ to thread %@ (threadGuid %@ threadPart %@)
ThreadIdentifier update rejected, thread identifier already populated as %@, update would be %@
Update record for non-message type, ignoring
Ignoring update T1 message: could not find message for id %@ (maybe it hasn't synced or has been deleted?)
Ignoring update message T1: no message ID or thread ID %@
Ignoring message update %@, unrecognized update type
Failed to handle conflict for unknown update type %@, rowID %lu
Can't apply updated syndication ranges for %@, message not found!
Applied updated syndicationRanges to %@, was newer data? %@)
Can't apply updated syndication ranges for %@, invalid message type for item %@
Clearing pending chat delete table
Found iMessage chat %@ for chatID %@ style %@
Did not find iMessage chat for ID %@ and style %@
No handles or servicename to receive a message from: {handles: %@ serviceName: %@}
No session for serviceName %@ -- can't simulate receive
Invalidating person centric grouped chats cache
ContactStore history token updated.
Not updating the ContactStore history token with %@
All handles and CachedAliasToCNIDMap
iMessage;-;%@
SMS;-;%@
UnnamedGroupChats
NamedGroupChats
Contacts based merging is disabled.
Contacts changed notification %@ 
v24@?0@"NSMutableArray"8@"NSArray"16
Computed chats to merge. Broadcasting to clients
No chats to merge/un-merge. NOT Broadcasting to clients
aliasMap
historyToken
v16@?0@"NSDictionary"8
# chats that need update after contacts changed notification %@
No CNContact for alias %@
IMDChatRegistry_Nickname
Clean up nickname for alias %@
Hawking: New contact (%@) added, removing chat (%@) from blackhole.
Chat %@ needs to be merged / un-merged & updated in spotlight
No of entries in chat dictionary %@
Update MeCard for all IMDChats
IMDCKDatabaseManager
**** Initializing dev container with ID %@
com.apple.messages.cloud
Initializing production container %@
Manatee container %@
use-old-nickname-container
Server says to use new container? %@ {serverbagValue: %@ version: %@}
com.apple.internal.messages.memoji
com.apple.messages.profiles
**** Initializing dev nick name container with ID %@
Using Manatee Container
Nicknames NOT enabled, returning nil public database
%@/%@
/var/mobile/Library/SMS/CloudKitMockStore/
IMDCKMockRecordZone
Mock Handle operation %@ identifier %@
Adding random delay of %@ seconds
Failed to unarchive mock ck record data. Error: %@
ID %@ MOCK Handling fetchRecordZoneChangesOperation
%@ Error reading from MOCK store %@ 
About to give back %@ records moreComing %@ fetchAllChanges %@
%@ Error deleting from MOCK store %@ 
Introducing random error %@
%s: Unable to archive record %@, error %@
-[IMDCKMockRecordZone _serializedCKRecordData:]
ID %@ MOCK Handling modifyRecordsOperation
Error persisting record %@ error %@
Successfully persisted record %@ 
com.apple.private.Messages.IMDCKRampManager
metadata_zone
metadata_rampstate_v2
IMDCKRampManager
Starting ramp state fetch on internal queue
FeatureAllowed
FeaturePromoted
FeatureVisible
RetryAfter
Sending request as priority
RampPriority
Not a priority ramp request
Ramp operation %@ Desired keys %@
Fetch operation records %@ fetchError %@
Fetch ramp state - featureAllowed %@, featurePromoted: %@, featureVisible: %@, retryAfter: %ld
Couldn't find CKRecord for ramp. Defaulting to not ramped in
FetchRampState
Attempting to fetch ramp state from CloudKit with operation %@
Writing cachedRampState featureAllowed(%@) featurePromoted(%@) featureVisible(%@) fetchHadServerError(%@)
scheduling new timer with retryAfter %f
retry timer fired
Not setting up new retryAfter, last one is firing at %@
Not Requesting ramp state. Is under first unlock.
Request to fetch ramp state
Cached featureAllowed and featurePromoted are true and there wasn't an error fetching state from the server last time. Not fetching again
calling recordFetchedCompletionBlock
Not fetching from server, next one is firing at %@
Cached values: featureAllowed(%@) featurePromoted(%@). Something is not YES, or we had a server error last time(%@) so fetching from server
Fetched ramp record
Scheduling retry: %@
v36@?0B8B12B16q20@"NSError"28
v24@?0B8B12B16B20
RampStateOverride
Defaults override, returning YES
cachedRampState featureAllowed(%@) featurePromoted(%@) featureVisible(%@) fetchHadServerError(%@)
Setting.
Not enough time passed since last jettison
Max number of failure occurrences exceeded
Max time since failure occurrence exceeded
Max time or occurrences not yet met
Context has expired
IMDInconsistency
Setting inconsistency handler
Noticed inconsistency at context %@ (count = %llu)
Resolving inconsistency at context %@
LastJettisonTimeInterval
Finished initialization, last jettison was %@
v32@?0@"IMDInconsistency"8Q16^B24
Enabling timer, since we have inconsistencies we need to check up on
Disabling timer, all inconsistencies resolved
Checking our inconsistencies to see if it's time to jettison state
Too many inconsistencies found in imagent, jettisoning state and starting over (reason: %@)
Inconsistencies aren't bad enough to merit a jettison (reasons: %@)
Removing expired inconsistencies: %@
Unable to create IMFileTransfer from NULL IMDAttachmentRecordRef.
This transfer doesn't have a guid, returning nil.
Exception raised while attempting to create IMFileTransfer: %@
Created: %@ from attachment record: %@
Unable to create IMDAttachmentRecordRef from nil IMFileTransfer.
Local path: %@, filename: %@
v32@?0@"NSString"8@"NSString"16@"NSString"24
Persisting transfer failed.
Not creating entry in DB for Aux video transfer %@
IMFileTransfer
 ** Error creating video complement for file transfer: %@ imageTransfer: %@
Created: %@ from imfiletransfer: %@
Updating %@ from %@
 Storing transfer at path: %@
 File eligible for purging: %@
 File NOT eligible for purging: %@, updatedPurgeableState: %@
 ** Not storing transfer
Unable to find an attachment record for guid: %@.
We are downgrading an attachment from finished to waiting accept --> so we've deleted the path on disk and should not store the attachment
Request to store transfer: %@
  => Updating existing : %@
  => Created new : %@
  ** Associated transfer GUID %@ with message GUID: %@
Over ridiing return val in storeAttachment for Aux transfer %@
Request to unassociate transfer: %@ from message guid: %@
Request to update transfer: %@
  => Updating existing: %@ with: %@
  => Found no transfer, storing instead
Not marking path as eligible for cachedelete, cloudkit syncing is not on
Not marking attachment path for cachedelete, last component is Attachments
GroupPhotoImage
Not marking path as eligible for cachedelete, last path component matches group photo file name. path: %@
Not marking attachment path for cachedelete, not in attachment store: %@
pluginpayload
pluginpayloadattachment
Not marking path as eligible for cachedelete, file extension is a plugin payload. path: %@
Not marking path as eligible for cachedelete, file extension is an audio message. path: %@
No attachment path to mark as purgable
Found aux video path: %@
EnableCacheDeleteTTR
File a Radar
Messages Storage Management
An attachment was unexpectedly marked as not purgeable.
Presenting CacheDelete TTR UI
TTR:%@ Messages storage issue: %@
A Messages attachment was unexpectedly removed from purgable state %@.
Serious Bug
I Didn't Try
450305
tap-to-radar://new?Title=%@&Description=%@&Classification=%@&Reproducibility=%@&ComponentID=%@&ComponentName=%@&ComponentVersion=%@&AutoDiagnostics=phone
Request for attachment with guid: %@
Request for attachments with guids: %@
Request for attachment with attachmentRecord: %@
updateLegacyTransferGUID failed to get a matching record
updateLegacyTransferGUIDOnMessageIfNeeded got something thats not a IMMessageItem: %@
Re-targeting transfer GUID at part %lu to %@
_updateAttachmentGUID completed with success %@
We are updating the in-memory transfer's guid that we will sync to CloudKit in-memory transfer: %@ partKey %lu newGUID: %@
Couldn't find guid %@ in list of fileTransferGUIDs to update; aborting. Body part (id %lu) contains reference to attachment not in DB, and we've updated the transfer to reflect.
Got null attachment record for %@
Re-targeting transfer GUID at index %d to %@
We are updating the in-memory transfer's guid that we will sync to CloudKit in-memory transfer: %@ index %lu newGUID: %@
Couldn't find guid %@ in list of fileTransferGUIDs to update; aborting. List of FileTransferGUIDs (id %d) contains reference to attachment not in DB, and we've updated the transfer to reflect.
We may have failed to update a message (guid %@) in the DB, and orphaned its attachments whose GUIDs we just updated %@
Message body attachment attributes update %@!
succeeded
FAILED (maybe)
Finished reindexing %@
Deleting attachments, guids %@
Failed to delete attachments
Request to delete attachments with guids: %@
deleteAttachmentsWithGUIDs failed to get a matching message record
Found corresponding IMMessageItem for legacy GUID %@
Deleting attachments with guids from spotlight: %@
Request to delete attachment with nil guid
Request to check if the attachment path is safe: %@
Transfer is group photo? %@ transfer: %@
(%lu,%lu,%lu)
syncState
v32@?0@"NSNumber"8@"NSArray"16^B24
iMessageQueue
Messages ahead in the receive queue: %@
com.apple.sms
IMDChatStore-Schema
Archiving chat: %@
No chat record found to archive for chat: %@
Unarchiving chat: %@
No chat record found to unarchive for chat: %@
Blackholing chat: %@
Unblackholing chat: %@
Transfer already exists in transfer center. not overwriting. Transfer: %@
Adding group photo to IMDFileTransferCenter for guid: %@.
Group file transfer is nil for guid: %@. Not adding anything to file transfers.
loadAllChatsForChatStore
v16@?0^{_IMDChatRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}^{__CFArray}q^{_IMDMessageRecordStruct}q}8
RecentChatsToLoad
RecentFilteredChatsToLoad
Loading recent chats (budget %lld for known senders, %lld for other filters)
v32@?0@"IMDChat"8Q16^B24
Loading all chats took %f seconds for %lu chats
No incoming chat record.
No incoming chat records.
Tried to load chat for unsupported service (%@): %@
Lookup failed, NIL or empty message GUID.
Couldn't find chat for message guid: %@
Couldn't find message for guid: %@
Couldn't find chat for message identifier: %lld
Association failed, NIL or empty message GUID.
Association failed, NIL or empty chat GUID.
Associating message guid: %@ to chat: %@
Not indexing message:%@ with CoreSpotlight
Disassociation failed, NIL or empty message GUID.
Disassociation failed, NIL or empty chat GUID.
-[IMDChatStore deleteChat:]
Setting chat isFiltered failed, nil chat guid
MergeIT
Not persisting merge id due to override
Updating handle(%@) from:%@ to:%@
Writing to DB
Done
Location
Going to add location item: %@ to the corresponding chats with handleID: %@ hasStoredItem: %@ broadcastChanges: %@
Not sharing location group chat %@
Not sharing location with non-iMessage chat %@
Found matching participant: %@<=>%@ in chat: %@
Storing item: %@
Associating item: %@ to chat: %@
No matching chat found, ignoring
/var/mobile/Library/SMS/CloudKitMetaData/MessageSyncZoneMetaData.db
/var/mobile/Library/SMS/CloudKitMetaData/MessageSyncArchivedRecordMetaData.db
com.apple.private.IMDCKMessageSyncController
ck-max-number-of-message-batches
 overriding max number of message batches to fetch %@
**** Message %lu CKRecord size exceeds max limit.
**** We hit max number of attempts to creat CKRecords
**** Message [%@] could not be converted to CKRecord, marking it as clean and moving on.
**** Message %@ is too big. Marking it as clean and moving on
We had invalid records attempting to load records again. Attempt count %lu
Error creating message zone %@
***** Timed out creating message zone *******
Wrote message with GUID %@, error %@, recordName:%@
Encountered an unknown error.  We'll try syncing this message again on the next sync. Error code: %llu
Modify message had conflicts or the zone was not found, so treating this as a non error case
_processModifyRecordsCompletion error %@
Kicking off another batch of message writes to cloudKit
We completed writing messages. isLastBatch %@, write error %@, writeSuccess %@
PeriodicMessageSync
BackFillMessageSync
Got %@ records to sync, filtered to %@ unique records
**** We completed writing up messages. No more messages to write up. ***
Number of messages to upload %lu < max batch size. %lu 
**** This is the last batch of messages we will write
Did not schedule a write. Device Conditions suitable to write:%@
Fetched message record with GUID %@
Found parentChatID: %@, updatedLastMessageCount: %d
This is a coreduet sync at currentBatchCount %@, coreduet says to defer syncing
This is a coreduet sync at currentBatchCount %@, coreduet says to continue syncing
Message sync: device conditions allow sync: %@ deviceConditionsToCheck %@ currentBatchCount %@
Message sync: Not checking device conditions for full sync at current batch count %@ isCoreDuetSync %@
Message sync: Not checking device conditions for initial sync at current batchCount %@
Message sync: Stop syncing, feature enabled %@ hasMatchingAccounts %@.
archivedMessagesChangeToken
messagesChangeToken
Resetting the archived message sync token to nil
Resetting the message sync token to nil
processArchivedRecordsFetchCompletionZoneID serverChangeToken %@ moreComing %@ recordZoneError %@
There are more changes to fetch from archived zone. Kicking off another batch of fetching
No more archived records to fetch. Resetting defaults to fetch archived records
Record Zone Error says that the change token has expired
//---** Error fetching archived messages: %@
****** We are done fetching archived messages as max batch attempt limit reached ********
Fetching archived currentBatchCount %@ maxNumberOfBatches %@
******** Fetching archived records ***** sync token is %@
Fetch archived record %@ guid %@
v24@?0@"CKRecordZoneID"8@"CKServerChangeToken"16
** THIS SHOULD NOT GET CALLED WHILE FETCHING ARCHIVED RECORDS **
v36@?0@"CKRecordZoneID"8@"CKServerChangeToken"16B24@"NSError"28
Did not fetch archived records from message zone as device condition does not allow sync
Did not fetch archived records from message zone as no archived hint present
*** Encountered error while fetching archived records %@
*** Did not encounter error while fetching archived records
recordZoneFetchCompletionBlock serverChangeToken %@ moreComing %@ recordZoneError %@ archivedRecordsHintIsPresent %@, currentBatchCount %@ maxNumberOfBatches:%@
Setting shouldFetchArchivedRecords to true
There are more changes to fetch. Kicking off another batch of fetching
Done fetching changes from message zone.
Done fetching changes from message zone during an initial sync. Let's not write up
Done fetching live records. Will now fetch archived records
We got a %@ error while fetching messages. %@
Resetting local message sync state & last sync date after received user deleted zone error
Messages zone does not exist. Attempting to create one
//---** Error creating  messages zone
//---** Error fetching messages: %@
Failed fetching messages %@
_processFetchRecordZoneChangesCompletionWithError with no error
****** We are done fetching live messages as max batch attempt limit reached ********
shouldForceArchivedMessagesSync is YES, fetched max live record batches but will also fetch initial sync archived records if needed: %@
Since we fetched max live batch records, we will not fetch archived records
We completed fetching %@ batches of messages during a full sync, setting fullPartialSyncFirstCompletedDate to %@
Fetching live messages, currentBatchCount %@ maxNumberOfBatches %@
***recordZoneChangeTokensUpdatedBlock should not get called
*** Deleted recordID %@ type %@
Scheduling a fetch operation from message zone, using token %@
Did not fetch changes from message zone. Device condition allows sync %@. Disk Space Available %@
Need to kick off a sync of deletes because we had an incompatible message earlier.
Finished a sync of deletes because we had an incompatible message earlier (%@): %@
Mark all incompatible messages for deletion from cloudkit
_shouldMarkAllMessagesAsNeedingSync %@
Kicking off a message write after fetching messages
Completed message write %@ %@
syncMessagesWithSyncType with type %ld deviceConditionsToCheck %@
*** We were called to do an initial sync. Let's only fetch the first set of messages ***
Marking any unsuccessfully synced messages as needing sync
Finished Marking any unsuccessfully synced messages as needing sync
Done fetching archived records.
 ****** This was an initial fetch. Not writing messages *****
Not calling write messages on second callback from fetch archived records
******** Failed fetching archived messages with CKError %@ completionBlockCalledWhenFetchFailed %@
******** Failed fetching live messages with CKError %@ completionBlockCalledWhenFetchFailed %@
v28@?0B8B12B16@"NSError"20
Unsupported sync type
Clearing local sync tokens for Messages
Clearing local messages sync state, flags 0x%x
Delete message callback with error %@
Deleted recordIDs %@
Not doing CloudKit message deletes as CK syncing is off
Got %lu recordIDs to sync, filtered to %lu unique recordID
No pending messages to delete from CloudKit
********* Error while deleting messages %@
deleteDate
partBody
com.apple.Messages.recoverableMessageSync
recoverableMessageChangeToken
recoverableMessage
com.apple.private.IMDCKRecoverableMessageSyncController
IMDCKRecoverableMessageSyncController
Skipping recoverable message sync due to Feature being disabled.
Scheduling a fetch recoverable message zone changes operation %@
Recently Deleted | Reading recoverable message record: %@
Recently Deleted | Failed reading recoverable message record. deleteDate: %@ and messageGUID:%@ cannot be nil
Recently Deleted | Reading recoverable message part record
Recently Deleted | Found stored part number %@
v40@?0@"NSNumber"8{_NSRange=QQ}16^B32
Did not find partIndex: %@ in message GUID: %@
Delete record operation unsupported.
Record Zone fetch complete zoneID %@ changeToken %@ tokenData %@ moreComing %d error %@
We got a %@ error while fetching recoverable messages. %@
Attempting to create recoverable message zone
** Failed to create recoverable message zone **
We completed fetching changes from recoverable message zone with no error
We got an expired server change token back so resetting local sync state, and fetching the recoverable messages again %@
********* We got an error fetching changes from recoverable messages zone %@
Recently Deleted | Clearing local recoverable sync state, flags 0x%x
Resetting the sync token to nil
Error creating recoverable message zone %@
***** Timed out creating recoverable message zone *******
Scheduling write recoverable message operation %@
Wrote recoverable message record %@ with error %@
IMDCKRecoverableMessageSyncController | Recently Deleted: could not write record: %@ encountered error: %@
messageRowID
partIndex
Recently Deleted | Marking row %@ with partIndex: %@ for %@ as clean
Recoverable messages writes completed sucess: %@ error %@
Recently Deleted | Not performing CloudKit recoverable message deletes as CK syncing is off
Recently Deleted | Got %lu recordIDs to sync, filtered to %lu unique recordID
Recently Deleted | No pending recoverable messages to delete from CloudKit
Recently Deleted | ********* Error while deleting recoverable messages %@
Recently Deleted | kicking off another batch delete to cloudKit
Recently Deleted | No GUIDs passed in to delete
Recently Deleted | Kicking off recoverable delete of recordIDs %@
messageGUID
chatGUID
_fetchOperationFactory was passed in a nil zone
_saveRecoverableMessagesOperationFactory was passed in a nil zone
Recently Deleted | No recoverable messages data to sync
IMDCKRecoverableMessageSyncController | Recently Deleted: marking clean: Using partIndex fallback: could not convert message to CKRecord with metadata: %@
v32@?0@"NSDictionary"8Q16^B24
Found %lu of %u max recoverable messages to write up
Delete recoverable message callback with error %@
Adding additional deleted recoverable record IDs from error
Deleted recoverable recordIDs %@
deleteDateInterval
IMDCKRecoverableMessageSyncController | Recently Deleted: returning nil record. messageGUID: %@, deleteDateNanosecondIntervalNumber: %@
IMDCKRecoverableMessageSyncController | Recently Deleted: returning nil record. recordID nil for metadata: %@
Recently Delete | Was not able to construct CKRecord with given data. This is bad.
%@+%@+%ld
action
incomingMessageProcessedByDaemon
lastUpdated
collaborationNoticeDefaultThreshold
collaborationNoticeCommentThreshold
collaborationNoticeParticipantChangedThreshold
IMDCollaborationNoticeRateLimiter.persistenceQueue
rateLimiter.plist
Creating rateLimiter persistence.
Loaded empty dictionary, creating a new dictionary.
Loaded noticeEventHistory: %@
IMDCollaborationNoticeRateLimiter
aguid
avid
pathc
auxpathc
vers
mimet
IMFileTransfer_CKRecord ***** Failed to write md5 hash of file at path: %@ with exception: %@
IMFileTransfer+CKRecord
Cannot generate record ID because salt is nil.
No cloudKitRecordID, derived record ID
Record ID from existing cloudKitRecordID: %@
Cannot initialize CKRecord using derived record ID because salt is nil.
Initializing CKRecord using derived record ID
Initialed CKRecord %@ for transfer %@ using record data from DB
IMFileTransfer_CKRecord
**** File a radar **** Asset last path component %@ from url %@ is empty
**** File a radar **** Asset last path component from url %@ is nil so cannot save it to metadata
IMFileTransfer_CKRecord **** Transfer did not have URL or asset was missing on disk. URL %@
Transfer file path %@
%@ transfer has an aux video asset
**** File a radar **** Aux asset last path component from url %@ is nil so cannot save it to metadata
No transfer metadata found for record:%@
Failed cleaning up attachment asset at %@, error %@
Cleaned up attachment asset at %@
Found a better asset in CKRecord %@, cloud size %@ local size %@
Missing file size to compare: cloud size %@ local size %@
Could not read file attributes of new attachment at %@, %@
Could not find file of the asset at %@, %@
Could not read file attributes of existing attachment at %@, %@
IMDFileTransfer+CKRecord
For attachment %@ local file not found at %@
Local asset is bigger than the one in CKRecord %@, taking %@ over %@
Can't find incoming attachment from CKRecord at %@
Could not read file attributes of local attachment at %@, %@
Moving transfer asset from CK cache to final spot
IMTransfer+CKRecord
CKRecord did not have a lastPathComponent, using %@ from filename
Failed to remove existing file at %@ to replace with version from CKRecord, sucess %@ error %@
Failed to move file from %@ to %@, error %@
Created transfer %@, finalAssetPath %@
Failed to write asset to disk because of nil path! Asset from ckrecord with guid %@ has path %@, finalAssetPath %@ and asset fileURL %@
CKRecord did not have a auxVideoLastPathComponent, using %@ from auxVideoPath
Failed to remove existing aux file at %@ to replace with version from CKRecord, success %@ error %@
Failed to move file from %@ to %@ error %@
Stored aux video for transfer %@, finalAssetPath %@
Failed to write aux asset to disk because of nil path! Asset from ckrecord with guid %@ has path %@, finalAssetPath %@ and asset fileURL %@
Failed to write record image asset to %@ GUID:%@
Got IMFileTransfer record with guid %@ with no file name
Invalid record passed to initWithCKRecord %@
Trying to create imfiletransfer ckrecord with guid %@ and filename %@
Invalid record passed to utiTypeForRecord %@
Invalid record passed to sizeOfAssetForRecord %@
Invalid record passed to transferGUIDOfRecord %@
Invalid record passed to attachmentRecordHasAsset %@
Invalid record passed to cleanUpAssetsOnDiskForRecord: %@
Invalid record passed to md5HashForRecord: %@
We didn't have an md5 hash for fetched record: %@
IMFileTransfer_CKRecord ***** Failed to grab hash of file at path: %@ with exception: %@ when validating attachment
IMFileTransfer_CKRecord *** asset was nil for record id: %@
IMFileTransfer_CKRecord *** fileName [%@] or utiType [%@] is nil
We failed to validate md5HashOfCKAsset: %@ md5HashStoredOnRecord: %@
__kIMDReplayControllerErrorDomain
IMDReplayContoller
Request to store replay message %@ type %d
IMDReplayContoller message was nil
IMDReplayContoller Incorrect message type %d
IMDReplayContoller Unable to archive message object: %@
dict
IMDReplayMessageController. Storing message %@ failed with error %@
IMDReplayContoller: Found an empty message payload while replaying
IMDReplayContoller Trying to replay message of unknown type %@ %d
v16@?0q8
IMDReplayController
Request received to replay messages.
Deleting replay DB after replaying messages
deleteReplayDBIfNotUnderFirstUnlock isUnderFirstUnlock %@
Not deleting replay DB
Deleting replay DB on imagent launch after first unlock
Setting up new replay database at path: %@
Unable to setup replayStorageController, previous store controller with database at path %@ remains active
An replay database was already overriding the default, ending previous override
Restoring default replay database
Attempted to restore a database when no override database was set
Starting to recording replay database
End recording replay database
/var/mobile/Library/SMS/replayDB.db
Found message GUId %@ from IMFileTransferGUID %@ so that we can upadte the transfer. Record hasAsset %@
Taking asset from CKRecord for %@
Setting local record to upload asset for %@
Keeping local asset and sync state for %@
Fetched from CK. Updating existing transfer %@ for message GUID %@
IMDFileTransferCenter - Update from CKRecord found no existing attachment for %@, but was on the write path
Fetched from CK. Created new transfer %@ from CKRecord. Associating with message guid %@ hasAsset: %@
Do we want to download the transfer later? downloadAsset: %@, shouldDownloadAssetForTransfer: %@, hasAsset: %@
Going to auto downloading asset at the end of batch fetch for transfer: %@ addedTransfer %@ for messageItem: %@ groupPhotoUpdate: %@
Storing attachment %@ with no associate-able message %@
Nil CKRecord
markTransferAsNotSyncedSuccessfullyUsingCKRecord transferGUID %@
Could not find transferGUID %@ to mark as not synced successfully
markTransferAsNotSyncSuccessfullyDownloadedFromCloud transfer %@
resetSyncStateForRecord transfer %@ toNewState:%ld
Tried to clear the sync state for a transfer we don't have on disk transfer: %@ record: %@
Couldn't get local asset URL from CKRecord: %@
Failed to create attachment persistent path for aux video source, bad transfer/data (assetPath %@ mimeType %@ utiType %@ guid %@)
Failed to get valid attachment aux filename for aux video copy dest, bad transfer/data (auxAssetPath %@)
Failed to get aux video asset fileURL for aux video copy dest, bad transfer/data (assetPath %@ auxAssetPath %@)
com.apple.protectedcloudstorage.roll.Messages3
ck-client-max-time-to-defer-nightly-sync
IMDCKSyncController
Max Time to defer from server bag %@
Max Time to defer default value %@
_postMetricsToCloudKitOnAutomaticHistoryDeletionAgentLaunch
Received iCloud Account change notification, syncing enabled: %@
Account status is: %ld. Error: %@
SyncAfterAccountUpdate
Account status update, and we stopped sync due to missing TLKs. Launching one-off periodic sync.
Account.update
Registering for account notifications
Registered for cloudkit account change notifications
ck-imahd-sync-interval
_IMAHDAgentFallbackInterval %@
Last synced date %@ timeInterval %@, syncNotCompletedRecently %@
Scheduling nightlySyncTimer. Firing time: in %f sec.
nightlySyncTimer fired
Ignoring request to kick off of eager sync, since syncing is disabled
attempting to kick off an eager sync in %@ seconds
Kicking off a sync on power and wifi isSyncing %@ isUnderFirstUnlock %@ lastSyncDate %@ deviceConditionsAllowSync %@
postInitialSync
Not kicking off a sync on power and wifi isSyncing %@ isUnderFirstUnlock %@ lastSyncDate %@ deviceConditionsAllowSync %@
Init IMDCKSyncController
Got notified to kick off a sync due to IMAutomaticDeletionAgent
IMPowerWifiUsageCollectorOnPowerAndWifiNotification
Not doing account check on launch as device is locked
performInitialSyncOnFirstConnectionOfImagentIfNeeded {hasPerformedInitialSync: %@ hasTriedToEnableCKAndSyncForFirstTime: %@ cloudKitEnabled: %@
This is our first time connecting to imagent on this device (either first time ever or from a restore) and cloudkit is disabled --- will attempt to enable and perform initial sync -- we won't do this again
SyncAfterIdentityUpdate
Request to beginInitialSync
**** Has performed initial sync, or we aren't enabled. Not kicking off initial sync *** | isEnabled %@, hasPerformedInitalSync %@
InitialSync
We aren't ready to perform an initial sync.  We've tried %ld times.  We'll try again in %ld seconds 
We'e tried %ld times to begin an initial sync.  Giving up.
BeginInitialSync
*** Manatee keys not available not kicking off initial sync
MissingTLK
MissingTLKNoInitalSync
Restore Fail
Request to begin chat sync isPeriodic:%@
Not syncing chats from xpc activity -- mocEnabled: %@
Set state for chat syncing with result %d
We synced recently chats not syncing again after coming back online
CoreduetChatPeriodic
ManualChatSync
We dont have manatee TLK. Not kicking off chat only sync
Request to determine if we should mark all incompatibleMessagesForDeletion, set version (%ld) current version (%d)
Request to begin full sync checks %lu (reason %@)
com.apple.Messages.PeriodicSync.
Check-in for a periodic sync at priority %s
Run a User-Initiated periodic sync
Ignoring activity request to sync messages, as syncing is disabled
We did not set the state of a user-initiated xpc_activity to continue successfully for message syncing
v16@?0@"NSObject<OS_xpc_object>"8
Request to begin full sync activity:%@
CloudKit allows sync, beginning periodic sync attempt 0
CoreduetFullPeriodic
ck-stop-online-sync
ck-chat-sync-interval
_minimumChatComingOnlineSyncInterval %@
Last coming online chat sync date %@
Server override prevents us from syncing chats when coming back online
ck-block-single-device-limitation
The server is not allowing us to block chat syncing for iMessage accounts with only one device: %@
Number of devices for iMessage account: %@
Cleaning up tombstone table as CloudKit syncing is off
Request to beginChatSync from coming back online
Not syncing chats from coming back online -- clearing tombstones for deletes only 
Proceeding with coming back online sync
ComingBackOnlineChatSync
kickOffCloudKitSyncIfNeededOnImagentLaunch
disableSyncRetryOnCrash
Not attempting to kick off periodic sync as we are under first unlock AND/OR we have a defaults set com.apple.madrid disableSyncRetryOnCrash
Not kicking off a sync as this is a periodic sync attempt %ld and coreduet should decide whether to kick off a sync again
CrashedDuringSync
duringPeriodicSync
imagent started and we were in the middle of manual sync attempt %ud
duringManualSync
Is charging %@ , isOnWifi %@
NOT Kicking off a periodic sync after we got back as we are not on battery and wifi
We are on power and wifi. Kicking off a sync
ContinuingManualFullSyncAfterLaunch
startedWhileInProgress
Not kicking off a sync as there was no sync in progress or we hit max limit attempts of sync
wasXPCtriggered
restoreSync
nightlyTriggerCrash
Unknown/Crash
clearLocalCloudKitSyncState
ResetSyncDate
disable-mic-ui-refresh-during-sync
RefreshConversationList
Server disallows refreshing UI while syncing
disable-mic-ui-refresh-timer-during-sync
Server disallows refreshing UI while syncing using timer
Setting up a timer to reload the UI
Refreshing UI after time because device is unlocked
Not Refreshing UI after time because device is locked
Invalidating reload timer.
Refreshing UI after unlock
Dumped logs in past hour
Dumped restore failure logs in past hour
Current hour %@
Deleted restore failures directory at path %@
Failed to delete restore failures directory at path %@ with error %@
Dumping restore failure logs
Feature is on, time to send restore failure logdumps, found %@ to send
RestoreFailuresDump
Sending restore failure log (guid %@) at path %@ to recipient %@
Checking we whould send logs. allowedToSendLogs %@ withinAnHourOfLogDumpHour %@ hasDumpedRestoreFailureLogsInPastHour %@
It is dump log time but feature is off, deleting restore failures directory
Not auto dumping Restore Failure MOC logs withingLogDumpHour %@ hasDumpedLogsInPastHour %@ lastLogDumpTime %@
Checking if we need to dump logs using LastErrorDate:%@ and LastSyncDate%@
We haven't reported any errors in the last 24 hours and haven't syned.  Dumping logs 
NoSyncFor24Hours
Not auto dumping MOC logs withingLogDumpHour %@ hasDumpedLogsInPastHour %@ lastLogDumpTime %@
Sync
Failed syncing %@ with error %@
IMDCKSyncDomain
syncStep
Failed
Failed syncing Messages %@, please file a radar
Set activity to state %ld success %@
IMDCKRestoreDomain
Caused by: %@
Beginning initial new device sync with CloudKit. , attemptCount %@
Max attempts to sync due to recoverAble error exceeded
Messages: Failed syncing to CloudKit please file a radar
Retry
Deferring initial sync on attempt %lu, in state %ld
Failed to set activity to STATE_DEFER(3) on attempt %lu, in state %ld
Successfully synced chats after new device bringup
Successfully synced messages after new device bringup
Successfully synced attachments after new device bringup
******** Nuking CloudKit data ******
Deleting CloudKit Data
Attempting periodicSync for attemptCount %@ so setting fullSyncAttempted date.
First full sync is complete, noting down date %@
We need to dump logs after syncing
LowSyncStats
We don't need to dump logs
****** Manatee keys not available. Not syncing %@ ******
Could retry periodic sync based on error %@
Doing an attachment metadata only sync before we continue with the full sync
Attachment metadata only sync failed with error: %@
Attachment metadata only sync succeeded
First full sync has completed - lets just do a normal sync flows
Initiating full sync with CloudKit. Core Duet Sync %@, attemptCount %@
stopManateeSync
Asked to sync but we are not allowed to do so
Set state full sync activity result %d
Max attempts to sync due to recoverable error exceeded
FullMessageSync
RetryAttemptExceeded
Deferring periodic sync on attempt %lu, in state %ld
Successfully synced chats
Successfully synced messages
Successfully synced updates
Successfully synced attachments
Completed syncing deletes
Failed syncing updates with error %@
Kicking off delete sync to CloudKit
Done deleteing chat with error %@
ChatDeletionComplete
Done deleteing messages with error %@
MessageDeletionComplete
Done deleteing attachments with error %@
AttachmentDeletionComplete
RecoverableMessageDeletionComplete
IMDCKRecoverableMessageController
[Recently Deleted] Successfully synced recoverable messages
[Recently Deleted] Recoverable messages sync unsuccessful. Will Retry
Request to sync all chats
Synced chats with success:%@
Ramping says we are allowed
Unable to check exit zone record Error: %@
Entered exit zone at %@. Aborting sync, downloading all attachments. {shouldDownloadAssets: %@}
We are downgrading the security level, downgrade date %@. We can't download at this time. When the Identity is restored, we will kick sync appropriately
Not in exit state, continuing sync
** We are already performing a sync.  Ignoring current request to sync.
 Syncing Self:%@ Chat:%@ Message:%@ Attachment:%@ Exit:%@
iCloud and iMessage accounts match up ? %@
Cache says featureAllowed(%@) featurePromoted(%@) featureVisible(%@) fetchHadServerError(%@)
The ramp cache says we are not rampped.  Let us try to fetch the ramp state one more time.
fetchedFeatureAllowed: %@ fetchedFeaturePromoted: %@ fetchedFeatureVisible: %@ secondFetchHadServerError: %@
IMDCKSyncControlelr
We were ramped in on second fetch -- continuing
We were not ramped in or encountered another error trying to fetch the ramp state. Failing
Set state to DONE for sync activity result %d
v28@?0B8B12B16B20B24
Could not fetch salt, aborting cleaning up MOC
NSDebugDescription
Noting down sync started. Initial value Key %@ value %@
Noting down sync started. After setting value Key %@ value %@
IMDCKSyncController: We started a second sync before a previous one was finished.  Likely there is an exit path that isn't calling _noteMeticsForSyncEndedWithSuccces
Started by %@, running since: %@:
LongRunningSync
Resetting sync state, and attempt counts
_periodicSyncAttemptCount %@
_manualSyncAttemptCount %@
Chats, messages, and attachments have synced successfully, sync time: %@
Updating sync date for Manatee sync %@
Wrote sync date success to CloudKit %@ error %@
Request to syncChats from XPC
sync-state-user-defaults
assembled sync state debugging info: %@
Handling event with name %@ userInfo %@
Got user signed into HSA2 account notification
exitRecordDateWithCompletion in updateDowngradedDateIfNeeded failed with error: %@
Finished updating security level with error: %@
Handling AKUserInfoChangedNotification with user info: %@
Account level changed to %@
We are downgrading from HSA2 -- turning off messages on iCloud
Account level changed to unknown, not turning off messages in iCloud or refreshing values associated with IMCloudKitAppleIDSecurityLevelHSA2.
Finished checking for possible security level downgraded with error: %@. Broadcasting new state if needed.
iCloud and iMessage account match up ? %@
iCloud and iMessage accounts do not match up. Turning off MOC
Messages in iCloud not available
Messages in iCloud is not available because iCloud and iMessage accounts are different.
com.apple.IMDCKSyncController
performOneTimeAccountUpgradeCheckIfNeeded
Will performing MOIC account check on upgrade after %f seconds
Clear analytic defaults and local sync state
User has completed a first full sync so device has started doing periodic syncs. Logging full periodic sync metric.
completedPeriodicSyncSinceFirstFullSync
analytic-zone-periodic-sync-logging-not-allowed
analytic-zone-daily-state-logging-not-allowed
Not logging analytics
dailySyncState-
Device will be uploading %@ analytic dict %@ to CK. CreatedZones: %@ DeletedZones:%@
Not uploading daily sync state.
Will be uploading dailySyncState-PeriodicSync analytic dict %@ to CK.
dailySyncState-PeriodicSync
Not uploading periodic sync activity.
Received key roll pending state did change event notification
Handling Backup State Did Change
We did not have an IMDCKSyncController when trying report _PCSBackupStateDidChange
Handling Test Backup State Did Change
We did not have an IMDCKSyncController when trying report _PCSTestBackupStateDidChange
Handling Successful Keyroll from Backup
We did not have an IMDCKSyncController when trying report _PCSBackupStateKeyrollSuccessful
Handling Pending Keyroll Notification
We did not have an IMDCKSyncController when trying report _PCSPendingKeyroll
Handling Identity/TLK keys available notification, name: %@, userInfo: %@
Identity/TLK update, and we stopped sync due to missing TLKs. Launching one-off periodic sync.
Identity.update
com.apple.private.Messages.IMMessagesToTrack
Registering chat identifier: %@   style: %d  hash: %@ handleInfo: %@ lastAddressedHandle %@ lastAddressedSIMID %@
 => Found chat, but it had no particpants. Updating with handleInfo: %@
********** Created bad chat: %@ *************
1:1 chat identifier mismatch
 => We already have one, nothing to do here. Chat: [%@]
Failed to canonicalize chat identifier
Failed to find chat for hash hash %@ with chatIdentifier: %@, style: %c
Updating account ID from: %@ => %@
Failed to accept moment share for message guid: %@
Configuring Syndication Ranges for Message: %@. isSWYSpam %@, showQuickAction: %@ swyAppName: %@
v28@?0B8@"IMMessageItem"12@"IMMessageItem"20
  => Message was stored. Input: %@   Output: %@
  => No result? Using the requested message: %@
com.apple.imessage
DropSendingMessage
 ** DropSendingMessage is enabled, failing send message
Chat: Could not find a chat for itemGUID: %@
Failed to store item %@
Not sending message up to client because this message is being retried. Guid %@
Removing message: %@   from chat: %@ due to send on different service
v16@?0@"IMMessageItem"8
Not sending delivery receipt
Not handling, subclass for iMessage should handle
Chat_GroupPhoto
Not requesting group photo, subclass for iMessage should handle
Did leave chat: %@  style: %c setting state: %d
Did join chat: %@  style: %c setting state: %d   name: %@   groupID: %@ lastAddressedHandle %@ lastAddressedSIMID %@
Did join chat: %@  style: %c setting state: %d   name: %@   groupID: %@  category %ld extensionName %@
Did join chat: %@  style: %c setting state: %d   name: %@   groupID: %@
Found old message: %@  for error: %d
Updated message: %@
Message is already delivered, and we're not forcing an error here (%@)
Unable to mark error: %d, no messages found for guid: %@
Found old message for read receipt: %@
Unable to mark send of read receipt, message is on a different service: %@ vs %@
Unable to mark send of read receipt, no messages found for guid: %@
Found old message for delivered quietly receipt: %@
Setting was delivered quietly flag on local device for message: %@
Unable to mark message delivered quietly, message is on a different service: %@ vs %@
Unable to mark message delivered quietly, no messages found for guid: %@
Found old message for notify recipient command: %@
Setting did notify recipient flag on local device for message: %@
Unable to mark message notified command, message is on a different service: %@ vs %@
Unable to mark message notified command, no messages found for guid: %@
Found old message for played receipt: %@
Expire received message played on local device: %@
Unable to mark send of played receipt, message is on a different service: %@ vs %@
Unable to mark send of played receipt, no messages found for guid: %@
Found old message for saved receipt: %@
Unable to mark send of saved receipt, message is on a different service: %@ vs %@
Unable to mark send of saved receipt, no messages found for guid: %@
Received didSendSyndicationAction: %@ for Chat: %@
Updated message: %@ with action item: %@
Message not update updated for SyndicationAction - doing nothing with syndication action: %@
Updated syndication state to: %@ was successful: %@ for chat with GUID: %@
   Found message from chat: %@
   Message was already marked as delivered, ignoring
   Message was already marked as black holed, ignoring
Found old message for delivery receipt: %@
MessageService
Received delivery receipt for message: %@
Delivery receipt time was: %f
Message had error: %d
Updated message: %@  had error: %@
B8@?0
No message found for guid: %@ to mark as delivered, trying again in a bit
Second to last try, waiting longer
Last try, waiting a lot longer
No message ever found for guid: %@ to mark as read, bailing
Found chats to mark as read: %@
Updating local chat (fromMe: %@): %@
Returning early in _didReceiveMessageReadForMessageID because !_activated
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessageReadForMessageID:date:attempts:completionBlock:]
message: %@
Returning early in _didReceiveMessageReadForMessageID because messageID: %@, [[self service] supportsDatabase]: %@, service: %@
Found chats for messageID: %@   chats: %@
Found no chats for messageID: %@
Found chat for messageID: %@, chat: %@
No message found for guid: %@ to mark as read, trying again in a bit
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessageReadReceiptForMessageID:date:attempts:completionBlock:]
Found chat for messageID: %@   chat: %@
Unable notify about message, message is on a different service: %@ vs %@
Unable notify about message, no message found
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessagePlayedForMessageID:date:attempts:completionBlock:]
No message found for guid: %@ to mark as played, trying again in a bit
No message ever found for guid: %@ to mark as played, bailing
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessagePlayedReceiptForMessageID:date:attempts:completionBlock:]
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:attempts:account:completionBlock:]
   Message was already marked as saved, ignoring
v16@?0@"IMItem"8
Stored item: %@     Actually stored: %@
Posting received message: %@
Item was not stored, ignoring
v28@?0B8@"IMItem"12@"IMItem"20
No message found for guid: %@ to mark as saved, trying again in a bit
No message ever found for guid: %@ to mark as saved, bailing
-[IMDServiceSession(IMDServiceSession_Chat) didSendMessage:forChat:style:account:forceDate:itemIsComingFromStorage:]
Not notifying for message: %@   this is a typing indicator, and we've already stored a completed message
Not notifying for message: %@   this is a typing indicator, and it failed
Automatically saving message sent from local device: %@
Expire message sent from local device: %@
Updating date on message guid %@ to be: %@
Updating isFiltered to NO, replying to chatId: %@
iMessage junk chat, updating isFiltered to NO, replying to chatId: %@
Posting sent message: %@
-[IMDServiceSession(IMDServiceSession_Chat) notifyDidSendMessageID:account:shouldNotify:]
Updated sent message: %@   duration: %@
Unable notify about message, no messages found for guid: %@
Can't delete on this service %@
Ignoring name update, already the current name
The existing message was read, let's mark the new one is read
The existing message has a time: %@, so lets set the new message to have the same time
We are setting the reply to guid for message %@ to be %@ as a reply to guid has not been set
Assigning sort id %@ to message %@ for chat %@
Chat's last read message time date (%@) guid (%@) timestamp: (%@) Messages time date (%@) timestamp: (%@) Server timestamp: (%@)
Last read message time is in the future. Not marking incoming message %@ as read
Setting message %@ as read as incoming message is older than the chat's last read message time
Marking message as failed due to preflight rendering
v12@?0I8
Bailing, we had a similar message: %@
Service was SMS, let's move it over to iMessage
Broadcasting service update for message with GUID %@ after suppression
*** Bailing, we already had a finished message for this in the database. ***
The input message disagrees with the "from me" attribute, creating a new message ID
@"IMMessageItem"16@?0@"IMMessageItem"8
No timing information available for incoming message processing with guid %@
  Ensuring the app is alive here
Stored message: %@     Actually stored: %@
Not donating to Message: %@ to CoreSpotlight. isSWYSpam %@, showQuickAction: %@
Message was not stored, ignoring
Updating invitation message after DB store: %@
Invalid chat identifier, ignoring
Chat: %@  status update: %d  style: %c lastAddressedHandle %@ lastAddressedSIMID %@
Updating isFiltered to NO, chat ID is a business chat: %@
Chat: %@  member: %@ from member: %@ unformated: %@ country: %@ status update: %d  style: %c
Storing participant leave: %@
Storing %@ participant change item  %@ => %@
invite
remove
Hawking: New participant (%@) added to chat (%@) is a known contact.
Hawking: New participant (%@) added to chat (%@) is not a known contact.
_CDSpotlightItemRecorder
CoreDuet
Going to remove chat guid from core duet %@
done deleting searchable items with domain identifiers %@. success %@ error %@
No chat to update downgrade properties for.
Handling routing dictionary: %@
Chat: Got a missing service in routing dictionary for GUID (%@): %@
Chat: could not find a session to route message GUID: %@
Chat: Could not re-route missing message GUID: %@
Chat: Could not find a chat for message: %@
Not routing message (%@) because it is not sent and has no error, not a candidate for routing
Re-routing message (guid:%@):%@   chat:%@   service:%@   session:%@
No chat registered, creating on one on service %@  identifier: %@   style: %c  (Chat: %@)
Generated handle info: %@ for group chat: %@
Found iMessage chat [%@], will use lastAddressedHandle %@ lastSIMID %@
No iMessage chat found for chat identifier: %@
Chat: could not find iMessage session to find iMessage chat.
Chat already exists for the other session, nothing to do here: %@
Sending message to session: %@  chatGUID: %@
v32@?0@8@16^B24
v24@?0@"NSDictionary"8d16
Scheduling a routing check with interval: %f
message-routing-timer
Handling expire state dictionary: %@
Chat: Could not expire missing message GUID: %@
Not deleting message (%@) because was already saved
Not expiring message (%@) because its expire state %d is already %d
Expire message (guid:%@):%@   chat:%@   session:%@
   delete expired messages: %@
   deleted expired messages: %@
Don't schedule expire state check with interval: %f, one is already scheduled with interval: %f
Scheduling an expire state check with interval: %f
message-expire-state-timer
Handling watchdog dictionary: %@
Chat: Could not watchdog missing message GUID: %@
Don't schedule watchdog check with interval: %f, one is already scheduled with interval: %f
Scheduling a watchdog check with interval: %f
message-watchdog-timer
Going to user user notifications to notify for urgent messages
Auto Replier sending delivered quietly receipt for messageGuid %@ in chatGuid %@
Auto Replier sending notify recipient command for messageGuid %@ in chatGuid %@
Successfully consumed EN url, marking message as read: %@
Predominant service check for incoming message:%@ in chat:%@ was determined to be %@
Not showing quick action since we did not get an AppName
Invalid chat or incorrect number of messages
Identifying the predominant service for chat: %@
Invalid parameter. chatGUID: %@ service: %@ number of messages:%lu
Incorrect chat %@, has more than the number of participants we expected!
Chat %@, has the wrong number of participants than what was expected!
Failed to fetch %lu number of messages from chat %@
Chat opted out of Auto donation. Not configuring syndication ranges
Configuring syndication ranges for incoming message:%@ in chat:%@
Storing message: %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDaemonCore/IMDServiceSession_Chat.m
void _IMDStoreMessage(IMDService *__strong, IMMessageItem *__strong, BOOL, BOOL, BOOL, BOOL, FZMessageFlags, __strong _IMDMessageStoreShouldStoreBlock, __strong _IMDMessageStoreDidStoreBlock, __strong _IMDMessageStoreCompletionBlock)
_IMDStoreMessage
Unexpected false '%@' in %s at %s:%d. %@
[resultMessage isKindOfClass:[inMessage class]]
input and output message types are not the same. input message has type %@. output message has type %@
  => Result message: %@
Set avatar likeness data for message %@
Set biz intent data for message %@
Set locale data for message %@
Set meCard sharing preferences data for message %@
%@;%c;%@
Found messages guids to mark as read: %@
Notifying about messages: %@
Found message to mark as played: %@
Automatically saving received message played on linked device: %@
Expire received message played on linked device: %@
Found chats to mark as played: %@
Updating chat: %@
Notifying about message: %@
Found message to mark as saved: %@
Found chats to mark as saved: %@
  => Result item: %@
v56@?0@"IMDiMessageIDSDelegate"8@16@"IMDiMessageIDSTrustedData"24@"IMDiMessagePipelineResources"32@"IMMessageContext"40@"IMPowerAssertion"48
IMTransferServicesController_Preview
Generating preview OOP with tmpURL %@ finalURL %@ previewURL %@ maxWidth %f scale %f
IMTranscoderAgent OOP generation completed with error %@
OOP preview generation failed in imagent with error %@
Storing size value %@ for previewURL %@
Transcoder Preview Generation Failure
IMPreviewGeneratorDomain
Timed out getting preview from IMTranscodeController in imagent
persistedPreviewURL: %@
Received CommSafety response from Media-Analysis-Daemon with result %@, %@
Received CommSafety response from Media-Analysis-Daemon with error %@
Timed out waiting for sensitive image check
Not pregenerating preview, no persistedPreviewURL
Not pregenerating preview, utiSupported %@ isCMM %@ aux Video %@, calling completion directly
kMarkSensitiveKey
Not pregenerating preview: IM_BLASTDOOR_ATTACHMENT_PREVIEW_ENABLED NOT set
v44@?0@"NSString"8@"NSString"16B24@"NSError"28@"NSString"36
com.apple.MobileSMSPreview
IMFailPreviewGeneration
Initial sync device conditions check if CloudKit sync is enabled: %@ has accounts %@
Initial sync device conditions check if CloudKit sync is enabled: %@, hasAccounts %@
Initial sync device conditions check if CloudKit sync is enabled: %d
Initial sync device conditions ignoring feature enabled: always TRUE
Initial sync. Not writing up attachments
IMDMessageHistorySyncController
ReplayController requested a history Sync
ReplayController already has sync in flight ignoring request
IDS Transport Log requested a history Sync
IDS Transport Log already has sync in flight ignoring request
Cloudkit Chat Controller requested a history Sync
Cloudkit Chat Controller  already has sync in flight ignoring request
Checking if any sync task need to be started
Already performing a sync task, waiting for that to complete before kicking off the next task
Starting Sync
Finished Sync
v16@?0Q8
No Message History to sync.
Will check in %u seconds if another sync needs to be done
/var/mobile/Library/SMS/CloudKitMetaData/ChatSyncZoneMetaData.db
chatLockRecordType
chatLockRecordName
lRKey
com.apple.private.IMDCKChatSyncController
************ CREATING CHAT LOCK RECORD **************** OH BOY **************
changeToken
**** Do not call -[IMDCKChatSyncController _chatsToUpload] on main thread *******
Error creating chat zone %@
***** Timed out creating chat zone *******
per record completion block record %@ changeTag %@ error %@
We are setting the lock record on the callback for processing records
We got back error [%@] on the lock record, setting the lock record to nil to re-generate on next sync
Error %@ while writing up record %@ 
Extracted record from server error%@ 
Got a conflict while fetching lock record %@
modifyRecordsCompletionBlock error %@
Number of records saved %@
We got back that we have exceeded quota in chat sync -- failing to continue writes
We only had partial error and the whole batch failed 
lock record is present amongst chats
******** LOCK RECORD IS NOT PRESENT ******
We failed to sync Chats due to op lock Not doing ABC %@
Number of chats to write up %@
Chat to sync up %@
This is the last batch of chats to write up
Adding lock record %@
Kicking off another batch of chats to write up
*** This was the last batch of chats to write up. Done writing up chats
**** Error %@ writing chat records %@ to cloudKit *****
No chats to sync up at this moment
No completion block to call
Creating a fetch chat record operation using sync token %@ for zone %@ limit %@
**** _processRecordDeletion:Dropping delete as IDS syncs it real time. ***
** We got the lock record %@ **
_processRecordChanged changed recordID:%@ for ChatGUID %@
Kicking off chat write
Not writing up chats as sync type does not allow it
We got a %@ error while fetching chats. %@
Resetting local chat sync state & last sync date after receiving user deleted zone error
Attempting to create chat zone
Attempting to create chat zone so setting createdChatZone BOOL to YES
** Failed to create chat zone **
We completed fetching changes from chat zone with no error
We got an expired server change token back so resetting local sync state, and fetching the chats again %@
********* We got an error fetching changes from chat zone %@
Scheduling a fetch chat zone changes operation %@
chatExistsWithCompletion (batch size %d)
ChatsExistCheck
Fetched record %@
Completed query %@ with error: %@, foundRecord: %d
Scheduled fetch changes operation to check for the existence of a single chat with identifier: %@ (batch size %d)
chat sync controller checking eligibility
Received error checking eligibility: %@
Returning cached value: %@
_shouldMarkAllChatsAsNeedingSync %@
IMCKChatSyncController
Resetting fetched chats bool to NO
Starting chat sync attempt count %@
Exceeded number of chat sync attempts
**** Not Eligible For Truth Zone, but earlier we were able to fetch the chat zone. Something is up! ****
Syncing chats in new device bring up scenario
Chat sync error %@
*********** we failed to sync Chats due to op lock %@, kicking off another chat sync
Not syncing chats due to missing defaults. Please do following as mobile and try again - defaults write com.apple.madrid enableCKSyncingV2 YES
Clearing local chat sync state, flags 0x%x
Marking all chats as dirty
_handleChatDeletionCompletionForRecordIDs error %@
Deleted chat with recordID %@
Error deleteing chats from CloudKit %@
CloudKit Syncing is disable
com.apple.IMDCKChatSyncController
Got %lu recordIDs to sync, filtered to %lu unique recordIDs
Failed to filter record IDs for chat deletion sync, error: %@
No pending chats at this moment
***** WE should not get record completion block in delete operation
Filtering chat recordIDs to those with modification date after %@
Completed chat record fetch with %llu results, error: %@
Including chat with record ID %@ modification date %@ since it is before %@
Filtering out chat with record ID %@ modification date %@ since it is after %@
v32@?0@"CKRecordID"8@"CKRecord"16^B24
IMDMessageHistorySyncNotifyReplayControllerWantsSync
IMDMessageHistorySyncNotifyCKChatSyncControllerWantsSync
IMDMessageHistorySyncNotifyIDSTransactionLogWantsSync
task_flags
/var/mobile/Library/SMS/Stickers
IMDStickerRegistry
Deleting legacy Sticker folder at path %@, error %@
Initialized IMDStickerStore
_isRecipeBasedSticker invalid properties
Retrieve sticker with properties %@, completionBlock %@
IMDStickerRegistry. No completion block passed in.
sticker found in cache %@
Received ME-sticker from balloon %@
IMDStickerRegistry. Failed retrieving sticker me-sticker with error %@, outputURLS %@
Received transcoded output from balloon bundle id %@ path %@
v40@?0@"NSArray"8@"NSString"16@"NSError"24B32B36
Sticker not found in cache
Invalid sticker properties passed to retrieveStickerWithProperties %@
com.apple.private.IMDaemonCore.IMDStickerRegistry
typing-indicator-cleanup
Tried to change property %@ with nil buddy ID
Tried to change empty property for buddy ID: %@
Tried to change IDProperty for buddy ID: %@   bailing
IMDServiceSession_BuddyList.m
Too many calls to [IMDService endBuddyChanges]!
com.apple.Messages.UpdateSync
com.apple.private.IMDCKUpdateSyncController
Clearing local updates sync state, flags 0x%x
mic-delete-update-zone
IMDCKUpdateSyncController
Deleting zone based on default, and skipping Update syncs
Scheduling a fetch update zone changes operation %@
Fetched update record with type %@
We got a %@ error while fetching updates. %@
Attempting to create update zone
** Failed to create update zone **
We completed fetching changes from update zone with no error
We got an expired server change token back so resetting local sync state, and fetching the updates again %@
********* We got an error fetching changes from update zone %@
updateChangeToken
Error creating update zone %@
***** Timed out creating update zone *******
Scheduling write updates T1 operation %@
Wrote T1 update record %@ with error %@
Marking row %lld for %@ as clean
Update T1 writes completed sucess: %@ error %@
Scheduling write updates T2 operation %@
Wrote T2 update record %@ with error %@
Successful write of T2 update to the server, updating syncedSyndicationRanges for message guid %@ 
Update T2 writes completed sucess: %@ error %@
fetchOperationFactory was passed in a nil zone
saveT1OperationFactory was passed in a nil zone
**** T1 Update item [%@] could not be converted to CKRecord, marking it as clean and moving on.
Found %lu of %u max T1 updates to write up
saveT2OperationFactory was passed in a nil zone
**** T2 Update item [%@] could not be converted to CKRecord.
Found %lu of %u max T2 updates to write up
XPC Activity state was NOT in state continue(4), was in state %ld!
Keychain
Abandoning password fetcher with request ID: %@  session: %@
No pending password fetch requests for session: %@
IMDServiceSessionBase
/*-------calling into leaveiMessageChat from legacy service session, please file a radar-------*/
/*-------calling into invitePersonInfoToiMessageChat from legacy service session, please file a radar-------*/
/*-------calling into sendGroupPhotoUpdate from legacy service session, please file a radar-------*/
/*-------calling into retryGroupPhotoUpload from legacy service session, please file a radar-------*/
/*-------calling into removePersonInfoFromiMessageChat from legacy service session, please file a radar-------*/
/*-------calling into closeSessionForChat from legacy service session, please file a radar-------*/
/*-------calling into sendNicknameUpdatesToPeerDevices: from service that doesn't support it. File a radar-------*/
/*-------calling into sendNicknameInfoToChatID: from service that doesn't support it. File a radar-------*/
/*-------calling into reflectMarkUnreadToPeerDevicesForMessageGUID: from service that doesn't support it. File a radar-------*/
/*-------calling into reflectRecoverChatToPeerDevicesForMessageGUID: from service that doesn't support it. File a radar-------*/
/*-------calling into sendEditedMessage: from service that doesn't support it. File a radar-------*/
IMDAskToBuyReponseHandler
Launching askpermission page
APRequestHandler
AskPermission
__kIMDReplayMessageStorageControllerErrorDomain
passing in nil filePath to initWithFilePath
IMDReplayStorageController
IMDReplayStorageController was asked to store nil dictionary
Deleting replay db with path %@
IMDCKInitialMessageSyncController
Initial sync device Not writing up messages
UserInfo
IMDXPCEventStreamHandler
%@ received event with name %@ and user info %@.
__ksFirewallUserNotificationIdentifier
RememberPassword
Not Connected
Unexpectedly disconnected
Disconnecting...
Connecting...
Connecfted
-[IMDServiceSession disallowReconnection] %@
Auto-Reconnect Request: %@:%@
Auto-Reconnect failed (Network conditions don't allow it): %@:%@
Reconnecting account: %@:%@
Do Login: %@:%@  (serviceLoginStatus: %d)
Ignoring Login: %@:%@  (serviceLoginStatus: %d)
_login_serverSettingsReadyWithAccount: %@:%@
The account name or server is not valid.
  setting service status to disconnected, account or server is invalid
****** No IMConnectionMonitor for login of account: %@
A network error occurred.
_data_connection_ready: %@:%@
v72@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56@"NSNumber"64
_login_usernameAndPasswordReady: %@:%@
_login_checkUsernameAndPassword: %@:%@  has pass: %@   bad pass: %@
_login_checkUsernameAndPassword: connectionMonitor says we're not reachable
Skipping login, we're not activated
Strange, we're here, but already logged in
Building password notification dialog for: %@   (has pass: %@   has login: %@  bad pass: %@)
v76@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56B64B68B72
autoLogin: %@:%@
Login request: %@:%@ (Setting should reconnect flag = YES)
-[IMDServiceSession logoutServiceSession]: %@, account:%@
-[%@ logoutWithAccount:%@] (activated = %@)
Tried to logout: %@  but we're not supposed to, reflecting this!
<<Connected>>
** %@: clearing _shouldReconnectFlag at logout
%@: Login status changed to %@ (%@)
__kIMDBadgeUtilitiesLoginStatusChangedNotification
-[IMDServiceSession _autoReconnectTimer]: %@
 => Network appears to be up, we'll try to auto reconnect
 ** Network does not appear to be up, we'll skip this attempt
-[IMDServiceSession _clearAutoReconnectTimer]: %@
<%@:%@:%@>
[%@: <%@:%@:%@:%@:%@>]
ogid
name
filt
sqry
prop
prop001
ptcpts
gpid
CKRecord_GroupPhoto
Transfer not found for group photo guid %@
Transfer not finished for group photo guid %@
Resource not reachable for %@ with error %@
ckAsset not able to initialize from transfer file URL: %@
*********Cannot create record without a salt
@"NSData"16@?0@"IMDHandle"8
Couldn't add group photo to CKRecord. Returning nil.
Syncing new syndication attributes up %@
Invalid record passed to chatWithCKRecord %@
@"IMDHandle"16@?0@"NSData"8
Server Chat record has props001 %@, pulling isAutoDonating and donationDate
Server Chat record had props001 data, but we failed to decode to a dictionary!
Group photo exists, setting up transfer
Failed to move group photo file from %@ to %@, error %@
CKRecord_GroupPhoto+CKRecord
Found transfer: %@
Failed making group photo file class C: %@ with error %@
Group photo stored for chat guid %@ with transfer %@
Failed to write asset to disk because of nil path! Asset from ckrecord with guid %@ has path %@, finalAssetPath %@
applying changes on chat %@ state %ld
Local last read timestamp %lld, server record last read timestamp %@
Server Chat record has props001 %@, pulling syndication_type and syndication_ranges
Server Chat record has older props001 %@, local syndicationDate: %lu, skipping
Updating chat:%@ madeChanges %d serverHadMoreRecentData %@
Updating chat %@ record name %@ change tag %@
com.apple.demo-settings
StoreDemoMode
IMDBadgeUtilities
_lastFailedMessageDate saved date %@  last failed message data in DB %@ 
__kMessagesBadgeControllerClearFailureBadgeNotification
com.apple.IMSharedUtilities.IMUserLoginIntentChangedInternal
-[IMDBadgeUtilities updateBadgeForUnreadCountChangeIfNeeded:]
Unread count changed from %d to %d
-[IMDBadgeUtilities updateBadgeForLastFailedMessageDateChangeIfNeeded:]
Failed message date changed from %lld to %lld
-[IMDBadgeUtilities _postBadgeNumber:]
Call notification center to post badge number %@
-[IMDBadgeUtilities _postBadgeNumber:]_block_invoke
Notification Center post badge number with error: [%@]
-[IMDBadgeUtilities _postBadgeString:]
Call notification center to post badge string %@
-[IMDBadgeUtilities _postBadgeString:]_block_invoke
Notification Center post badge string with error: [%@]
_shouldShowFailureString _showingFailure %@ _isUnexpectedlyLoggedOut %@ 
Alias
-[IMDBadgeUtilities _clearFailureBadge]
Clearing failure badge, old value = %@
SuppressingReceiveSoundMessageGUIDs
-[IMDBadgeUtilities _cacheFailureDate:]
Cached failure id %lld    alert failure id %lld
com.apple.imdbadgeutilities
lastMadridFailureID
Clear failure badge notification
Unexpected log out dependent value changed
Device does not support FaceTime, not registering TUConversation delegate
Setting up conversation manager for imagent
TUConversation registered
Completed conversation manager setup for imagent
Chats count: %@
chat handle %@ vs conversation handle %@
@16@?0@"TUConversationMember"8
We mapped a chat %@ to a TUConversation with messagesGroupUUID %@ for chat groupID %@
While groupID matched, Messages participants (%@) did not equal TUConversation remoteMembers (%@)
While groupID matched, Messages participants (%@) count did not equal TUConversation remoteMembers (%@)
Attempting to map 1x1 chat for conversation: %@
v24@?0@"TUConversation"8^B16
Not able to find lastAddressedLocalHandle, falling back to account's loginID
Conversation initiator handle value %@
Not creating IMTUConversationItem - likely a nil lastAddressedHandle on chat: %@ or nil handles in conversation: %@
TUConversation UUID %@ for conversation %@
Callback for addedMembersLocally conversation: %@ member: %@
Found chat to potentially add members to: %@
ChatRegistry_CallManagement
@"NSString"16@?0@"TUConversationMember"8
This is a lightweight member - skipping: %@
IMDChatRegistry_CallManagement
Destination is registered for iMessage, adding to group: %@
Destination is NOT registered for iMessage, skipping adding to group: %@
Couldn't find chat, trying to create a new one!
Indicating to TU that we are now mapped to a messages group.
CKRecordUtilities
Computed message record name hash %@ from guid %@ and salt %@
Could not compute message record name hash %@ from guid %@ and salt %@ as one or both are nil
<IMDIDSAccount:%p, ID:%@, idsAccount:%@ >
P:%@
E:%@
iMessageBusiness
imessage
********** We don't have an IDSAccount, please file a radar ********** State: service session = %@, accounts = %@
********** We couldn't find an IMDAccount for the IDSAccount, please file a radar ********** State: service session = %@, IDSAccount = %@, accounts = %@
********** Requesting registered URIs but we don't have an IDSAccount, please file a radar ********** State: service session = %@, accounts = %@
-[IMDAppleServiceSession sessionDidBecomeActive]
-[IMDAppleServiceSession sessionWillBecomeInactiveWithAccount:]
AppleServiceSession
IMDAppleServiceSession
%@ callerID - choosing %@ from %@, idsAccount %@
 ** Selected display ID: %@  was not in URIs set: %@
callerURI - No bindings !!, idsAccount %@ registeredURIs %@
CallerID
IDS Account (%@) registered for: %@ but registration status was wrong. Saving for later
IDS Account (%@) not registered for: %@, serviceName: %@, moving on
No backward compatibility message match found %s
Could not find edited message matching backward compatibility message %s. Message cannot be dropped.
Found edited message matching backward compatibility message %s. Message can be dropped.
No plain body found for message %s
__IMDBackwardCompatibilityMessageIdentifier
@16@0:8
B32@0:8@16@24
v16@0:8
parser
v16@?0@"NSArray"8
Backward compatibility message %s does not match any edited message in our database.
Backward compatibility message %s matches an existing message %s at message part %ld.
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
IMSharedUtilities
EDITED_MESSAGE_BACKWARD_COMPATIBILITY_FORMAT
EDITED_MESSAGE_BACKWARD_COMPATIBILITY_EDITED
Backward compatibility message prefix is unlocalized in %s
Backward compatibility message format is unlocalized in %s
IMDaemonCoreHelloWorldClass_Impl
sharedUtilitiesHelloWorld
persistenceHelloWorld
v8@?0
IMDaemonCore.CallManager
Failed to find existing chat for conversation: %s
Invalid call to CallManager's registerChat function for conversation %@
registerChat(for:)
Can't create chat for conversation %@ since the remoteMember %s isn't iMessage-able
Failed to create IMTUConversationItem for conversation %@ on chat %@
Storing conversationItem %@ on chat %@
Not adding IMTUConversationItem since item GUID %s already exists
Found existing item mapping to chatIdentifier: %s
IMDCallManager_Impl
@24@0:8@16
queue
serviceSession
conversationManager
featureFlags
newChatListenerTask
v32@0:8@16@24
Couldn't pick initiator for conversation %@ on chat %@
Not mapping conversation %@ to chat %@ because of remaining handles %s
Received notification that conversation messagesGroupUUID was added: %@
Couldn't find chat for conversation %@
Couldn't find chat for 1-1 conversation with %s, attempting chat creation!
Can't post notification since we couldn't fetch initiator from conversation %@
SharePlay notification will be posted for "%s" app in chat %@ and conversation %s
Received request to post notification for conversation %@ on chat %@
Received notification that conversation was added: %@
v12@?0B8
Received invalid object type from IMDChatAddedNotification %s
Notified that chat was added %@
Notified that all IMDChats are loaded.
Waiting for new chats 
Couldn't find conversation for chat %@
TUConversationManager registered
collaborationClearNoticeRateLimiterOverride
IMDCollaborationClearNoticeRateLimiter.persistenceQueue
RateLimiter: clear notice for collaboration id %s hasn't been sent before, approved to send.
RateLimiter: clear notice for collaboration id %s couldn't calculate elapsed time.
RateLimiter: result=%{bool}d for notice collaboration id %s, elapsedMinutes: %ld < threshold: %ld
IMDCollaborationNoticeRateLimiter: collaboration id %s => %s
B24@0:8@16
rateLimiterOverride
persistenceQueue
noticeEventHistory
Error persisting clearNoticeEventHistory, error: %@
clearNoticeRateLimiter.plist
Creating rate limiter persistence
IMDCollaborationClearNoticeRateLimiter: Loaded empty dictionary, creating new dictionary
com.apple.Messages.IncomingClientConnectionListenerWorkloop
Resuming XPC listener for %s
Invalidating XPC listener for %s
IMDaemonCore.IncomingClientConnectionListener
init()
IMDIncomingClientConnectionListener
$defaultActor
machServiceName
allowedEntitlements
listener
clients
requestHandlers
clientConnectionWorkloop
Removing client %s
ClientConnection
v24@?0:8@?<v@?@>16
Resumed connection for PID %d
Configuring XPC connection for %s from PID %d
Connection invalidated for PID %d
Connection interrupted for PID %d
Client %d does not have any of allowed entitlements %s, invalidating connection
Incoming XPC connection for %s
Client %d has entitlement %s
No required entitlements have been specified, allowing all clients
infix associatedValue 
wrappingPairs
No plain text tapback found for message %s
Interpreted plain text tapback %s but could not find original message using infix string
Interpreted plain text tapback %s for %s, attaching to %s with range %s, took %fs
__IMDPlainTextTapbackInterpreterImpl
@32@0:8@16@24
v32@?0@"IMMessagePartDescriptor"8q16^B24
PlainTextTapbacks
Removed a heart from "%@"
Removed a like from "%@"
Removed a dislike from "%@"
Removed a laugh from "%@"
Removed an exclamation from "%@"
Removed a question mark from "%@"
DaemonCallManager
CollaborationNotices
DaemonClientConnections
_TtC12IMDaemonCore15DaemonWorkActor
_IMDInternalWorkQueue
v24@0:8@?16
Starting to accept incoming connections
Notifying clients they need to re-request setup
IMDaemonCore.ClientConnectionManager
IMDClientConnectionManager
connectionListener
@20@0:8B16
broadcasterForAllListeners
T@"<IMDaemonListenerAnyProtocol>",N,R
broadcasterForAccountListeners
T@"<IMDaemonListenerAccountsProtocol>",N,R
broadcasterForChatListeners
T@"<IMDaemonListenerChatProtocol>",N,R
broadcasterForBlackholeChatListeners
broadcasterForChatDatabaseListeners
T@"<IMDaemonListenerChatDatabaseProtocol>",N,R
broadcasterForChatCountsListeners
T@"<IMDaemonListenerChatCountsProtocol>",N,R
broadcasterForFileProviderListeners
T@"<IMDaemonListenerFileProviderProtocol>",N,R
broadcasterForAVConferenceListeners
T@"<IMDaemonListenerAVProtocol>",N,R
broadcasterForACConferenceListeners
Broadcasting %s to: %s
Unable to save notice, can't retrieve object context
Unable to save notice, error: %s
Saved notice: %@
Unable to get notices, can't retrieve object context
Failed to retrieve notices, error: %s
Retrieved %ld notices for urls (%ld: %s
No URLs provided, unable to retrieve any notices
Unable to get metadata from PersistedCollaborationNotice, %@
Unable to get guidString from PersistedCollaborationNotice, %@
Unable to delete notice, can't retrieve object context
guidString == %@
Failed to delete notice, error: %s
Found %ld notices for guidString: %s
No notices to delete for guidString: %s
Unable to delete notices, can't retrieve object context
url BEGINSWITH %@
Failed to delete notices, error: %s
Successfully deleted notice with collaborationIdentifier: %s, %@
No notices to delete for collaborationIdentifier: %s
Successfully deleted %ld notices
No notices to delete
IMDCollaborationNoticeStore
v24@0:8@16
$__lazy_storage_$_persistenceContainer
description
T@"NSString",N,R
Successfully deleted notice with guidString: %s, %@
Fatal error
PersistedCollaborationNotice
IMDCollaboration
Unable to generate objectModelURL, aborting.
Unable to resolve collaboration notice directory path %s
collaborationNotices.db
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Loading store at storeURL: %s with persistenceContainer:%@
Successfully loaded store: %s
Error loading store: %s
com.apple.Messages.ClientConnection
No current client connection when invoking request for %s, ignoring request
_TtC12IMDaemonCore16ClientConnection
unlockedConnection
unlockedCapabilities
unlockedID
unlockedSupportedServices
unlockedRequestHandlers
Rejecting %s for client %s as it has insufficient capabilities %s, needs %s
Receiving message from client with PID: %d id: %s selector: %s
_TtC12IMDaemonCore28PersistedCollaborationNotice
IMDaemonCore
date
T@"NSDate",N,D,C
dateViewed
guidString
T@"NSString",N,D,C
metadata
T@"NSData",N,D,C
senderHandle
version
Ts,N,D
%@: Account is restricted, not creating session
%@: Created active session: %@ of service type: %@   (Session class: %@)
%@: Reused existing session: %@
%@: Done setting up session: %@
iMessage service found: %@    accounts: %@
   Empty iMessage accounts, created one: %@
   Added, and moving along
   No account created
   We have iMessage acounts, good to go
No iMessage service found
Activating accounts: %@
Deactivating accounts: %@
*** Removing placeholder account: %@
No account or ID set: %@
Created IMDCKSyncState in IMDCKUtilities
will update sync state: %@
broadcasting current sync state: %@
broadcasting final requested update: %@
Loading internal party service with bundle: %@
%@: Loading request for service bundle: %@   Loaded: %@
%@: Loading service bundle: %@   Loaded: %@   identifier: %@
%@: Load success: %@    (Error: %@)
%@: Session class: %@
%@: Service properties: %@
%@: Load failed! Disabling any active accounts  (Error: %@)
   => Disabling: %@
Failed to respond to ST request payloadURL == nil
Failed to respond to ST request requestID == nil
Failed to respond to ST request with answer: %@ error: %@
                                        remoteHost: %@
                            isDataConnectionActive: %@
                                       isReachable: %@
                                          isOnCall: %@
                  supportsSimultaneousDataAndVoice: %@
                            isImmediatelyReachable: %@
                               awaitingDataContext: %@
Latest item time is nil, can't update chat's lastTUConversationCreatedDate! item: %@
Cache miss for subscription validation token, not including token on this message
Error fetching subscription validation tokens for handle handleID: %@ Error: %@
Forward declared API is not available, subscriptionValidationTokenForHandle:completion:
Error fetching subscription validation token for handle handleID: %@ Error: %@
Error validating subscription validation token: %@
Received an unknown validity response, ignoring.
Received an invalid validity response, attempting to fix by potentially re-inviting senderHandleID: %@ fromHandleID: %@
Forward declared API is not available, validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:fromSender:completion:
Invalid state transition attempted %@ -> %@
Invalid state transition attempted %@ -> Complete
Failed to fetch moment share from %@ for message %@ with CMMstate %@
Error fetching moment share from %@. Error: %@
Encountered indefinite failure for moment share %@. Clearing ingestion state state and setting CMMState back to registered for message %@
Moment share %@ has a context in state %@ and needs to reset transfers
Failed to accept the share at url: %@, error: %@ for message %@
Scheduling retry of moment share fetch after %{public}@ seconds
Accept failed too many times for moment share %@. Giving up
Attempted to accept a moment share that is in an unknown state %@
Regenerating transfers for a moment share is not supported
Error setting syndication identifier to %@ on asset with UUID %@: %@
Message %@: Failed request for resource file URLs for asset: %@, error: %@
Failed to create temporary directory: %@
Failed to remove existing item from temporary directory: %@
Failed to copy item to temporary directory: %@
Failed copy photo/video URL: %@, error: %@
Failed copy of video complement URL: %@, error: %@
Failed fetch for resources to share for asset: %@, error: %@
Failed copy of file URLs: %@, error: %@
Failed export for asset: %@, error: %@
Failed to create export request for asset: %@, error: %@
Unable to mark message %@ as completed when it should be
Missing transfer map for message %@
Unexpected number of curated assets for moment share: %{public}@
Target count requested before a moment share has been fetched for message %@
Unknown fetch type for moment share %@. This may lead to issues ingesting the moment share
syncing finished
clearing all sync states
Set starting periodic sync
Set starting initial sync
Setting controller sync type to %@ for record type: %@
Key value store will update: %@
Updating syncing to: %@
Key value store did update value: %@
broadcasting sync state changed event: %@
Account in need of repair detected, setting sync error
Failed to respond to Family invite payloadURL == nil
Failed to respond to Family invite inviteUrl == nil
%s: Bailing due to empty handle set. This could mean we attempted to send a notice to ourselves.
%s: Bailing because collaboration membership (%@) exceeds the fanout threshold (%@).
Unable to create noticeMessage to send, aborting.
Failed to send Collaboration Notice with error: %@
Unable to create noticeClearMessage to send, aborting.
%s: Bailing receive notice. Zero length fromHandle. Dropping message
%s: Bailing receive notice for highlightEvent generated by self (%@). Dropping message
Error fetching local user availability for contact. Error: %@
Error querying DND state: %@
DND state is nil
Chunk contained no valid message guids, stopping chunking.
Error retrieving allowed auto reply audience. Error: %@
Error retrieving allowed custom auto reply message. Error: %@
Missing last sent date for chatID %@
Nickname data loading has previously caused imagent to crash, deleting all handled and pending nickname data to allow imagent to properly handle future nickname changes.
SyndicationAction is nil when attempting to update a message
MessageGUID is nil when attempting to update a message
MessageItem is nil when attempting to update a message
SyndicationRange is nil when attempting to update a message
Updated syndication ranges for message: %@
Did NOT update syndication ranges for message: %@
New Range:
Original Ranges:
IMDMessageRecordRef was not created for %@
IMMessageItem was not created for %@
Record of itemType TUConversation did not recover as IMTUConversationItem record: %@ recovered as: %@
Failed to get a chat for message to be marked as unread: %@
Failed to find message to mark as unread for GUID:%@
Will delete old ack %@: %@: %lld
Will NOT delete old ack %@: %@: %lld
Edited message contains a file transfer not found in original message. FileTransferGuid: %@
Failed to store edited message: %@
partIndex: %@ editType: %@ previousMessage: %@
Nil syndication date parameter
Syndication Date (%@ vs %@) is in the past. Not setting syndication type %ld for chat: %@
Setting syndication type to: %ld, syndication date to: %@, for chat: %@
accountID is nil
Debug info, service: %@
Debug info, account: %@
Should never have nil modification date with non-default autoDonationBehavior
handle: %@  account: %@  chatIdentifier: %@  guid: %@
handles: %@  account: %@  chatIdentifier: %@  guid: %@
room: %@  account: %@  chatIdentifier: %@  guid: %@
Could not get chatInfo from chat: %@
Could not derive message item from legacy GUID %@
ASSERTION FAILED: %s is unexpectedly nil in "%s" at line %d [%@]
Deleted chat in %f seconds (%@) 
Updated chat with GUID: %@ donation setting to %@ with SyndicationAction: %@
Chat %@ not updated with incoming SyndicationAction: %@
SyndicationAction is nil when attempting to update IMDChat: %@
Error persisting noticeEventHistory, error: %@
REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s
Received sendSyndicationAction!.
error: %d  message: %@  force error: %@
Could not find message to update with message editing unsupported handleIDs. GUID: %@
Could not find message to update with message editing error. GUID: %@
Could not find message to update after succesfully sending edit of message. GUID: %@
Message had previous failed deliveries for message part edits. This edit delivery was successful. Clearing previous failed part delivery. GUID: %@
message: %@
Failed to find chat for sent SyndicationAction: %@
Replacing previous message acknowledgements with new acknowledgment for sent message; sender: '%@':'%@'
name: %@   fromID: %@  toIdentifier:%@  identifier: %@ style: %d
messages: %@
Automatically saving message sent from linked device: %@
Expire message sent from linked device: %@
Found existing message: %@
Date last call ended: %@
Looking for a similar message %f seconds back
Found similar message? %@
 enableTelemetry=YES 
IncomingMessage
Replacing previous message acknowledgements with new acknowledgment for received message; sender: '%@':'%@':'%@'
com.apple.messages.AttachmentDownload
Failed to respond to ATB request payloadURL == nil
Failed to respond to ATB request requestID == nil
Could not find a session for iMessage service
Couldn't upgrade 1:1 chat to Group chat for conversation %@
Can't upgrade from 1:1 chat to Group chat -- Invalid chat style: %c
Failed to find/create chat for conversation %@
%@ - write account defaults: %@
writeAccountDefaults - Started with %@ as the login ID
writeAccountDefaults - Setting %@ as the login ID
writeAccountDefaults - Removing login ID %@
Adding registration delegate for account %@
IMDAccount added %@, adding corresponding IDSAccount %@
IMDAccount removed %@, removing corresponding IDSAccount %@
Enabling IDSAccount %@
Disabling IDSAccount %@
Received account added %@
Received account updates %@
Received accountRemoved %@
** Received account removed for account: %@, but we can't find an account for it
Received accountEnabled %@
** Received account enabled for account: %@, but we can't find an account for it
Received accountDisabled %@
** Received account disabled for account: %@, but we can't find an account for it
IMDIDSService received registration status changed: %@ (%@)
IMDIDSService received aliases changed to %@: %@ (%@)
IMDIDSService received vetted aliases changed: %@ (%@)
IMDIDSService received profile changed to %@: %@ (%@)
IMDIDSService received login changed to %@: %@ (%@)
IMDIDSService received display name changed to %@: %@ (%@)
 => Registration failed, deactivating...: %@ (%@)
IMDIDSService received refresh registration: %@ (%@)
%@: Initialized!  (Environment: %@)
Dealloc service session: %@
Session activating: %@ on Environment: %@
Session deactivating: %@ on Environment: %@
AppleServiceSession: %@
Client requested re-authenticate (Environment: %@) account: %@
Found account to re-authenticate account: %@
Client requested re-register (Environment: %@)
Found account to re-register account: %@
Client requested de-register (Environment: %@)
Found account to de-register account: %@
Client requested password updated (account: %@)
Found account to update password account: %@
Client updateAuthorizationCredentials (account: %@)
Found account to updateAuthorizationCredentials: %@
Client request to remove aliases: %@ account: %@
Found account to remove aliases: %@  account: %@
Client request to add aliases: %@  account: %@
Found account to add aliases: %@  account: %@
Client request to validate: %@  account: %@
Found account to validate aliases: %@  account: %@
Client request to unvalidate: %@  account: %@
Found account to unvalidate aliases: %@  account: %@
Client request to validate profile info: %@
Found account to validate profile info account: %@
Checking specified caller ID: %@ on account: %@, accountDefaults: %@
Caller ID isn't validated, try repair if we find another account with the same caller id. clearing caller ID settings for current account
 Caller ID is valid, registered and in good shape, moving along
No caller ID specified, moving along
CallerID Repair - Current preferred account: [%@], account to repair: [%@]
CallerID Repair - Found another iMessage account: [%@], displayName: [%@]
CallerID Repair - Found a match for callerID: [%@], update preferred account to: [%@] for iMessage
%@ callerID - choosing %@ from %@
$ss12CaseIterableP
So8NSObjectC
yyXlG
So13IMMessageItemC
Sbz_Xx
XDXMT
ScPSg
SgXw
ytIeghHr_
ySSG
ScCySb
So8NSObjectCSg
So17OS_dispatch_queueC
So17IMDServiceSessionC
So21TUConversationManagerC
So14IMFeatureFlagsC
ScTyyt
_yptG
_ypt
ySo8TUHandleCG
So14TUConversationC
SSSg
ypSg
ypGSg
So19NSMutableDictionaryC
So19SwiftNativeNSObjectC
SaySSG
So13NSXPCListenerC
_pXpG
So15NSXPCConnectionC
yXlIeyBy_
$s12IMDaemonCore33IncomingClientConnectionListeningP
yx_GG
SS4guid_
5rangetSg
SS4guid_
5rangetSgz_Xx
Sgz_Xx
ySS3key_
4typetG
$sSY
$s12IMDaemonCore21ClientRequestHandlingP
$ss11GlobalActorP
IeyBh_
Iegh_
So10IMDServiceCSg
yypG
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
ypIegn_
yypc
yyypcG
So21NSPersistentContainerCSgSg
_pSg
$ss12IdentifiableP
ShySSG
_A7At
So24IMDaemonListenerProtocol_pSg
So24IMDaemonListenerProtocol_p
ySSG
$s12IMDaemonCore24ClientConnectionManagingP
So15NSManagedObjectC
AllCases
parser
editedMesssage
sharedUtilitiesHelloWorld
persistenceHelloWorld
queue
serviceSession
conversationManager
featureFlags
newChatListenerTask
rateLimiterOverride
persistenceQueue
noticeEventHistory
$defaultActor
machServiceName
allowedEntitlements
listener
clients
requestHandlers
clientConnectionWorkloop
wrappingPairs
prefix
suffix
associatedValue
parser
location
length
RawValue
rawValue
ActorType
connectionListener
rawValue
ArrayLiteralElement
RawValue
Element
$__lazy_storage_$_persistenceContainer
queue
unlockedConnection
unlockedCapabilities
unlockedID
unlockedSupportedServices
unlockedRequestHandlers
IMDMomentShareIngestionContext
IMDAccount
IMSystemMonitorListener
IMDBroadcastController
IMDMessageHistorySyncTaskLiveFactory
IMDMessageHistorySyncTaskFactory
NSObject
IMReadReceiptsMetrics
IMDAccountController
IDSAccountDelegate
Mentions
IMSpamFilterHelper
IMDCKUtilities
IMDCKSyncStateDelegate
IMDMessageHistoryIDSTransactionLogSyncTask
IMDMessageHistorySyncTask
IMDMessageHistoryCKChatSyncTask
IMDCKSyncStatsCollector
IMDClientRequestContext
IMDCKSyncTokenStore
IMDService
IMDScreenTimeAskReponseHandler
IMDMessageActiveDevice
IMDaemonCoreHelloWorldClass
IMDOneTimeCodeManager
IMDSoundUtilities
IMStateLoggable
IMDMessageProcessingController
IMDSpamMessageCreator
IMDWorkQueue
IMDServiceSession
IMConnectionMonitorDelegate
IMServiceSessionProtocol
IMDSpamController
IMDBackwardCompatibilityMessageIdentifier
IMDCKExitManager
IMDRecordZoneManager
APSConnectionDelegate
IMDCKMessageSyncCKOperationFactory
IMDAvailabilityVerificationManager
SKStatusSubscriptionServiceDelegate
IMDAvailabilityVerificationTokens
IMDLocalDaemon
IMDDistributedNotificationXPCEventStreamHandler
IMDTransferDictionaries
IMDChatVocabularyUpdater
INSpeakable
IMDLegactDTController
IDSServiceDelegate
IMDMessageFromStorageController
IMDCallerIDUtilities
IMDMomentShareManager
PHPhotoLibraryChangeObserver
IMDCallManager
IMDCKMockRecordKeyZone
DeferredSavingAdditions
IMDCKAttachmentSyncController
IMDCKSyncState
IMKeyValueCollectionDelegate
IMDMessageHistoryFirstUnlockReplaySyncTask
IMDFamilyInviteReponseHandler
IMDPlainTextTapbackInterpreter
IMLegacyAdditions
Hubble
IMDFileTransferCenter
IMPowerLogChatDescription
IMDCKAttachmentSyncCKOperationFactory
IMDExposureNotificationManager
IMDQuickSwitchController
IMDCollaborationNoticeDispatcher
IMItem_CKRecord
IMDCKCacheDeleteManager
IMDAvailabilityAutoReplier
IMDAutoReplying
IMDCKMockDatabase
IMDNotificationResponseUtilities
UNUserNotificationCenterDelegate
IMDCKChatSyncCKOperationFactory
IMDServiceController
IMDNicknameController
IMDMessageSortOrderAssigner
GUIDRepair_Internal
IMDMessageStore
IMFocusStateManagerDelegate
IMDPhotosSyndicationLibraryChangeListener
IMDChat
IMDCKRecordSaltManager
IMDChatRegistry
IMDCKDatabaseManager
CKRecord_IMDaemonCore
IMDCKMockRecordZone
IMDCKRampManager
IMDDaemonPropertyManager
IMDInconsistency
IMDAttachmentStore
IMDCKAbstractSyncController
IMDDeletePartsHelper
MessageProcessing
IMDChatStore
IMDLocationSharingController
IMDCKMessageSyncController
IMDCKRecoverableMessageSyncController
IMDaemonCoreMessageReceivedTimingAdditions
IMDaemonCoreIncomingMessageTracking
IMDInvocationForwarder
SyndicationActions
IMDCollaborationNoticeRateLimiter
IMFileTransfer_CKRecord
IMDReplayController
CloudKit
IMDCKSyncController
IMDXPCEventStreamHandlerDelegate
IMDCKAbstractSyncControllerDelegate
IMMessagesToTrack
IMDServiceSession_Chat
IMDiMessageIDSDelegateHandlerRegistry
IMTransferServicesController_PreviewGeneration
IMDCKInitialAttachmentSyncController
IMDMessageHistorySyncController
IMDCKChatSyncController
IMDCollaborationNoticeController
IMDMessagePTask
IMDStickerRegistry
IMDRecentsController
IMDServiceSession_BuddyList
IMDCKUpdateSyncController
IMDMessagePTaskXPCStore
IMDMessagePTaskStore
Messages
IMDServiceSession_Base
IMDAskToBuyResponseHandler
IMDReplayStorageIterationContext
IMDReplayStorageController
IMDCKInitialMessageSyncController
IMDXPCEventStreamHandler
IMDServiceSession_Firewall
IMDServiceSession_LoginManagement
IMDHandle
IMDServiceSession_MessageReplay
IMDChat_CKRecord
IMDBadgeUtilities
IMDChatRegistry_CallManagement
TUConversationManagerDelegate
CKRecordUtilities
IMDSpotlightIndexDelegate
CSSearchableIndexDelegate
IMDIDSAccount
IMDIDSService
IDSAccountControllerDelegate
IDSAccountRegistrationDelegate
IMDAppleServiceSession
NSXPCListenerDelegate
IMDaemonProtocol
IMDaemonAccountsProtocol
IMDaemonAnyProtocol
IMDaemonAutomationProtocol
IMDaemonBuddyListProtocol
IMDaemonChatFileTransferProtocol
IMDaemonChatMessageHistoryProtocol
IMDaemonChatModifyReadStateProtocol
IMDaemonChatProtocol
IMDaemonChatSendMessageProtocol
IMDaemonCloudSyncProtocol
IMDaemonFileTransferProtocol
IMDaemonFileProviderProtocol
IMDaemonManageStatusProtocol
IMDaemonModifyReadStateProtocol
IMDaemonVCACProtocol
IMDaemonVCInvitationsAVObserverProtocol
IMDaemonVCProtocol
IMDaemonListenerProtocol
IMDaemonListenerChatDatabaseProtocol
IMDaemonListenerChatCountsProtocol
IMDBroadcasterProviding
IMDaemonListenerAccountsProtocol
IMDaemonListenerAnyProtocol
IMDaemonListenerAVProtocol
IMDaemonListenerChatMessageHistoryProtocol
IMDaemonListenerChatProtocol
IMDaemonListenerFileProviderProtocol
IMDaemonListenerNotificationsProtocol
IMDaemonListenerServiceProtocol
IMAKUserInfoChangedNotification
AuxGUIDFromFileTransferGUID:
T@"IMDCKMessageSyncCKOperationFactory",&,N,V_CKOperationFactory
CKPartialError:hasErrorCode:
T@"IMDefaults",&,N,V_imDefaults
CNContactID
T@"NSArray",R,N
T@"NSString",&,N,V_contextStamp
IMAKUserInfoChangedAltDSIDKey
T@"NSString",R,C,N,V_listenerID
IMDaemonCoreMessageReceivedTimingCollection
T@,&,N,V__broadcasterForTesting
NicknameWithRecordID:URI:decryptionKey:withCompletionBlock:
TB,N,V_idsTransportLogNeedsSync
PCSReportManateeStatusAsync:timeout:
_IMDTrackMetric:ForMessageGUID:
SIMInserted
__im_messagePartIndexToRangeMap
SMSStorageController
_activeAccounts
T#,R,N
_allowedDomains
T@"<IMDAutoReplyDelegate>",W,N,V_replyDelegate
_changeTokenKey
T@"<IMDCKAbstractSyncControllerDelegate>",W,V_delegate
_chatForTUGroupID:participants:
T@"<IMDCKSyncTokenStore>",&,N,V_syncTokenStore
_chatRecordZone
T@"<IMDMessageHistorySyncTask>",&,N,V_currentlyExecutingSyncTask
_configureSessionInformationOnItem:toChat:withStyle:forAccount:
T@"<IMDMessagePTaskStore>",&,N,V_pTaskStore
_deletePendingNicknameForUpload
T@"<IMDRemoteDatabaseProtocol>",R,N
_downloadAssetsForTransferGUIDs
T@"<IMDaemonListenerAccountsProtocol>",R,N
_encounteredIncompatibleMessage
T@"<IMDaemonListenerChatCountsProtocol>",R,N
_exitRecordDate
T@"<IMDaemonListenerChatProtocol>",R,N
_fixSMSGroupChatAndStoreIfNeeded:iMessageChat:chatToRegenerate:
T@"<IMDaemonListenerProtocol>",&,N,V_broadcaster
_handleDenyList
T@"<IMDaemonListenerProtocol>",R,N,V_replyProxy
_hasReceivedReadReceiptRecently
T@"CARAutomaticDNDStatus",&,N,V_automaticDNDStatus
_idToHandlesMap
T@"CKContainer",R,N,V_manateeContainer
_initiatorForConversation:chat:
T@"CKRecord",&,N,V_lockRecord
_markResyncForDeleteRecoveryAs:
T@"CKRecordZone",R,N,V_analyticRecordZone
_numberOfRecordsToFetchPerBatch
T@"CKRecordZone",R,N,V_chatRecordZone
_playSoundType:
T@"CKRecordZone",R,N,V_messageRecordZone
_pushConnection
T@"CKRecordZone",R,N,V_updateRecordZone
_reconnectTimer
T@"CKRecordZoneID",R,N,V_attachmentRecordZoneID
_recordsToSaveWithAttemptCount:
T@"CKRecordZoneID",R,N,V_deDupeSaltZoneID
_recoverableMessageRecordZoneID
T@"CKRecordZoneID",R,N,V_metricZoneID
_removeAccount:
T@"CKRecordZoneID",R,N,V_updateRecordZoneID
_resetSyncStateAndAttemptCounts
T@"CKServerChangeToken",&,N,V_archivedRecordSyncToken
_setReplyGUIDOnMessage:forChat:
T@"CKServerChangeToken",&,N,V_syncToken
_statsCollector
T@"IDSAccount",R,&,N
_subServiceName
T@"IDSKVDeleteContext",&,N,V_deleteContext
_syncTokenStore
T@"IDSKVStore",&,N,V_handledNicknamesKVStore
_truthContainer
T@"IDSKVStore",&,N,V_pendingNicknameUpdatesKVStore
_updateCachedAliasToCNIDMap:withHistoryToken:completionHandler:
T@"IDSKVStore",&,N,V_store
_useSSL
T@"IDSService",&,N,V_dtService
_wasDowngraded:
T@"IDSService",&,N,V_quickSwitchIDSService
acceptSubscriptionRequest:from:
T@"IMDAccount",R,&,N,V_account
account:blockIdleStatusChanged:
T@"IMDAskToBuyResponseHandler",&,N,V_askToBuyResponseHandler
account:conference:receivedResponseToInvitationFrom:properties:
T@"IMDCKAttachmentSyncCKOperationFactory",&,N,V_CKOperationFactory
accountDefaults
T@"IMDCKDatabaseManager",&,N,V_dataBaseManager
activeTransfers
T@"IMDCKSyncState",R,N
addParticipant:
T@"IMDCKUtilities",&,N,V_ckUtilities
allExistingChatsWithIdentifier:
T@"IMDChatRegistry",&,N,V_chatRegistry
arrayByExcludingObjectsInArray:
T@"IMDCollaborationClearNoticeRateLimiter",&,N,V_clearRateLimiter
availabilitySubscriptionService
T@"IMDCollaborationNoticeRateLimiter",&,N,V_rateLimiter
beginChatSyncPeriodic:activity:
T@"IMDFamilyInviteReponseHandler",&,N,V_familyInviteResponseHandler
blockIdleStatus
T@"IMDIDSService",W,N,V_mainService
bundleForClass:
T@"IMDMessageProcessingController",R,N,V_messageProcessingController
canMarkPurgable
T@"IMDRecordZoneManager",&,N,V_recordZoneManager
cancelVCRequestWithPerson:properties:conference:reason:account:
T@"IMDReplayStorageIterationContext",&,N,V_heldDeletionContext
chat:lastAddressedSIMIDUpdated:
T@"IMDService",&,N,V_service
chatRecordsFilteredByPredicate:
T@"IMDService",R,&,N,V_service
ckChatSyncControllerWantsToSync
T@"IMDServiceSession",R,&
clearSyncErrors
T@"IMDefaults",&,N,V_sharedDefaultsInstance
compeletedTask:
T@"IMLockdownManager",&,N,V_lockdownManager
containsObject:
T@"IMNickname",&,N,V_personalNickname
content
T@"IMStateCaptureAssistant",&,N,V_stateCaptureAssistant
createdChatZone
T@"IMTimingCollection",&,N,V_timingComingBackFromStorage
dataBaseManager
T@"NSArray",&,N,V_validCodes
databaseUpdated
T@"NSArray",R,&,N
delegateToQueue
T@"NSBundle",R,&,N,V_bundle
deleteMessageWithGUIDs:queryID:
T@"NSData",R,N,V_historyToken
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:destinationCallerID:messageTime:
T@"NSDate",&,N,V_lastLogDumpDate
disableAccount:
T@"NSDate",&,N,V_latestActiveDate
enabledAccounts
T@"NSDate",&,N,V_syncStartDate
fetchAllChanges
T@"NSDate",R,N
fetchLastMessageRecordForChatRecordWithRowID:completionHandler:
T@"NSDictionary",&
fileHFSTypeCode
T@"NSDictionary",&,N,V_syncTaskByServiceName
findRootCauses:
T@"NSDictionary",R,&
groupActionType
T@"NSDictionary",R,&,N,V_accountDefaults
groupID
T@"NSDictionary",R,N
handles
T@"NSDictionary",R,N,V_nicknamesForParticipants
im_setActivity:
T@"NSLock",&,N,V_lock
initWithDomain:
T@"NSMutableArray",&,N,V_chatsToSendNicknameInfoTo
initWithMessagePartText:dateSent:backwardCompatibleMessageGUID:
T@"NSMutableArray",&,N,V_targets
initWithZoneID:
T@"NSMutableDictionary",&,N,V_cachedAliasToCNIDMap
invitePersonInfo:withMessage:toChatID:identifier:style:account:
T@"NSMutableDictionary",&,N,V_guidToTransferMap
isEmote
T@"NSMutableDictionary",&,N,V_idToHandlesMap
isEngramEnabled
T@"NSMutableDictionary",&,N,V_mutablePersistentProperties
isProxy
T@"NSMutableDictionary",&,N,V_noticeEventHistory
isSyncingPaused
T@"NSMutableDictionary",&,N,V_personCentricGroupedChatsCache
isTypingMessage
T@"NSMutableDictionary",&,N,V_shareURLsToContexts
itemsWithHandles:onServices:messageGUID:threadIdentifier:limit:
T@"NSMutableDictionary",&,N,V_visitedChats
lastLogDumpDate
T@"NSMutableDictionary",&,V_chatGUIDToCountMap
latestSyncToken
T@"NSMutableDictionary",&,V_stickerPackGUIDToPackMap
loading
T@"NSMutableSet",&,N,V_activeHubbleRequestedTransfers
lockdownManager
T@"NSMutableSet",&,N,V_handleAllowList
loginServiceSessionWithAccount:
T@"NSMutableSet",&,N,V_messagesReceivedDuringStorage
managed
T@"NSNumber",&,N,V_subscriptionCreatedOverride
mapID:usingKey:
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
messageBodyData
T@"NSObject<OS_dispatch_queue>",&,N,V_privateWorkQueue
messagePartGUID
T@"NSObject<OS_dispatch_queue>",R,N,V_ckQueue
moveMessageRecordsToRecoveryForChatRecordsWithGUIDs:deleteDate:
T@"NSSet",R,N
normalizedValue
T@"NSString",&,N,V_id
noteLastItemProcessedWithError:
T@"NSString",&,N,V_personCentricID
T@"NSString",&,N,V_subServiceName
numberWithBool:
T@"NSString",&,V_cachedSalt
numberWithLong:
T@"NSString",&,V_modificationStamp
originalGroupID
T@"NSString",C,N
pendingENGroupParticipantUpdate
T@"NSString",C,N,V_accountID
personCentricID
T@"NSString",C,N,V_serviceLoginStatusMessage
pictureOfBuddy:
T@"NSString",C,SsetGroupID:
preview
T@"NSString",R,&,N
processingTimer
T@"NSString",R,&,N,V_filePath
reflectDismissalForNoticeGUIDs:
T@"NSString",R,&,N,V_proxyAccount
registerForAccountNotifications
T@"NSString",R,&,N,V_proxyPassword
rejectTransfer:
T@"NSString",R,C,V_lastSeenMessageGuid
removeDelegate:
T@"NSString",R,N,V_encryptionValidationToken
removeMessageWithGUID:fromChat:
T@"NSString",R,N,V_identifier
renameGroup:to:
T@"NSTimer",&,N,V_codeInvalidationTimer
request
T@"NSTimer",&,N,V_processingTimer
service
T@"NSTimer",&,N,V_storageTimer
serviceSpaceDidBecomeAvailable:
T@"NSURL",R,N,V_shareURL
T@"PHFetchResult",&,N,V_assetsFetch
setAssetsFetch:
T@"PHPhotoLibrary",R,N,V_syndicationLibrary
setBroadcaster:
T@"TUConversationManager",R,N,V_conversationManager
setChatGUIDToSpamCheckTimerMap:
T@"__IMDBackwardCompatibilityMessageIdentifier",&,N,V_swiftImplementation
setCkUtilities:
T@,W,N
setCreatedDate:
T@?,C,N,V_perTransferProgress
setDesiredKeys:
setExpireState:
TB,D,N,GisDisablingDevices
setFetchRecordsCompletionBlock:
TB,D,N,GisFeatureEnabled
setLastMessage:
TB,D,N,GisRemovedFromBackup
setMainService:
TB,D,N,GisStartingInitialSyncSetByCloudKitHooks
setMessageGUID:
TB,D,N,GisSyncing
setMutablePersistentProperties:
TB,D,N,GisSyncingPaused
setPayloadData:
TB,N,GisDeviceLowOnDiskSpace,V_deviceLowOnDiskSpace
setRateLimiter:
TB,N,GisManaged,V_managed
setRecordWithIDWasDeletedBlock:
TB,N,GisShowingFailure,V_showingFailure
setReloadTimer:
TB,N,V_addedObserverForUnexpectedlyLoggedOut
setScreenTimeAskReponseHandler:
TB,N,V_alreadyCapturedErrorWithAutoBugCapture
setShareStatus:
TB,N,V_ckChatSyncControllerNeedsSync
setSwyBundleID:
TB,N,V_encounteredIncompatibleMessage
setUnreadCount:
TB,N,V_fetchedExitDateOnLaunch
setUrl:
TB,N,V_hasReceivedReadReceipt
setXPCActivity:
TB,N,V_isDoingDeleteRecoverySync
shouldJettison:
TB,N,V_isUsingCentralizedModel
stickerUserInfo
TB,N,V_networkDataAvailable
stringByAppendingPathExtension:
TB,N,V_replayControllerNeedsSync
subject
TB,R
syncAttachments
TB,R,N,GisActive
syncing
TB,R,N,GisDeviceOnWifi
systemDidUnlock
TB,R,N,GisDiscontinued
trackSpamEvent:
TB,R,N,V_isLoading
updateNicknamesForParticipants:
TB,R,N,V_shouldPublishNowPlaying
updateTransfer:
TB,V_createEngramGroupOnMessageSend
TB,V_meCardUpdated
valueWithRange:
TB,V_shouldReloadConversations
writeDirtyChats
.cxx_destruct
T@"<IMLocalDaemonProtocol>",&,N
CKOperationFactory
T@"IMDClientRequestContext",&,N
CKPartialError:onlyHasErrorCodes:
T@"IMMessageItem",R,N,V_message
GUID
T@"NSDate",&,N,V_exitRecordDate
IDSTransportLogWantsToSync
T@"NSString",R,&,N,V_serverHost
IMAKUserInfoChangedSecurityLevelKey
T@"NSTimer",&,N,V_transferTimer
IMPhoneNumbersEnabledForMultipleSubscriptionDevice
TB,GisRecovered
PCSReportManateeStatus
TB,R,N,V_useSSL
SHA1HexString
__imFirstObject
SMSAllowCaseSenstiveSenderIDForPhoneNumber:
_accountManager
T#,R
_activeHubbleRequestedTransfers
T@"<IMDAutoReplyDelegate>",W,N
_bundle
T@"<IMDBroadcasterProviding>",R,N
_changedBuddies
T@"<IMDCKSyncStateDelegate>",W,N,V_delegate
_chatIdentifier
T@"<IMDCollaborationNoticeDispatcherDelegate>",W,N,V_delegate
_chatsByGroupID
T@"<IMDMessageHistorySyncTaskFactory>",&,N,V_syncTaskFactory
_createEngramGroupOnMessageSend
T@"<IMDMessagePTaskStore>",&,V_messagePTaskStore
_deleteRestoreFailuresDirectory
T@"<IMDaemonListenerAVProtocol>",R,N
_enableStrictSecureDecodingMode
T@"<IMDaemonListenerAnyProtocol>",R,N
_evalToggleiCloudSettingsSwitch
T@"<IMDaemonListenerChatDatabaseProtocol>",R,N
_favoritesContainsParticipants:
T@"<IMDaemonListenerFileProviderProtocol>",R,N
_fixUpChatParticipantsIfNeeded:
T@"<IMDaemonListenerProtocol>",&,N,V_broadcasterOverride
_hasMarkedAllChatsAsNeedingSync
T@"APSConnection",&,N,V_pushConnection
T@"CKContainer",R,N
_idsDestination
T@"CKContainer",R,N,V_nickNameContainer
_localDeviceHasSIMMatchingChat:
T@"CKRecordID",&,N,V_exitRecordID
_missingMessageReadReceiptCache
T@"CKRecordZone",R,N,V_attachmentRecordZone
_personCentricGroupedChatsCache
T@"CKRecordZone",R,N,V_deDupeSaltRecordZone
_processConnectionMonitorUpdate
T@"CKRecordZone",R,N,V_recoverableMessageRecordZone
_rampUpRecordID
T@"CKRecordZoneID",R,N,V_analyticRecordZoneID
_recordKeyManagerSharedInstance
T@"CKRecordZoneID",R,N,V_chatRecordZoneID
_recordsWritten
T@"CKRecordZoneID",R,N,V_messageRecordZoneID
_reloadChatRegistryOnMainThread
T@"CKRecordZoneID",R,N,V_recoverableMessageRecordZoneID
_removeHubbleRequestedTransfer:
T@"CKServerChangeToken",&,N
_resetSyncToken
T@"CKServerChangeToken",&,N,V_latestSyncToken
_showingFailure
T@"FTDeviceSupport",&,N,V_deviceSupport
_storePendingNicknameForUpload:
T@"IDSAccount",R,&,N,V_idsAccount
_submitStorageMetricsWithError:
T@"IDSKVStore",&,N,V_handleSharingKVStore
_transferRequiresPreviewSizing:
T@"IDSKVStore",&,N,V_kvStore
_updateAttachmentGUID:withGUID:
T@"IDSKVStore",&,N,V_recordStore
_updateCachedCNIDMapForHandles:
T@"IDSServerBag",&,N,V_serverBag
_validateTransferFromCloudKit:localTransfer:validateCompletion:
T@"IDSService",&,N,V_gelatoService
acceptFileTransfers:completion:
T@"IMDAccount",R,&
account
T@"IMDAccountController",&,N,V_accountController
account:buddyPropertiesChanged:
T@"IMDBackwardCompatibilityMessageIdentifier",R,N
accountController:accountAdded:
T@"IMDCKChatSyncCKOperationFactory",&,N,V_CKOperationFactory
accountRemoved:
T@"IMDCKDatabaseManager",&,N,V_databaseManager
addItem:toChat:
T@"IMDCKSyncState",R,N,V_syncState
aliases
T@"IMDChat",R,N,V_chat
allKeys
T@"IMDChatStore",&,N,V_chatStore
attributionInfo
T@"IMDCollaborationNoticeDispatcher",R,N,V_noticeDispatcher
balloonBundleID
T@"IMDDaemonPropertyManager",R,N
blackholedChats
T@"IMDIDSService",&,N,V_subService
buddyProperties
T@"IMDMessageHistorySyncController",R,N,V_messageHistorySyncController
cachedChatCount
T@"IMDMessageStore",&,N,V_messageStore
canSend
T@"IMDReplayStorageController",&,N,V_storageController
changeLocalProperty:ofBuddy:to:
T@"IMDScreenTimeAskReponseHandler",&,N,V_screenTimeAskReponseHandler
chatForMessage:
T@"IMDService",R,&
chatRoomForGroupChatIdentifier:
T@"IMDServiceSession",&,N,V_session
ckQueue
T@"IMDSyncTelemetryReporter",&,N,V_telemetryReporter
collaborationId
T@"IMKeyValueCollection",R,N,V_storage
completionBlock
T@"IMMessageItem",&
containsString:
T@"IMOneTimeCodeUtilities",&,N,V_otcUtilities
context
T@"IMTimer",&,N,V_nightlySyncTimer
currentCalendar
T@"INVocabulary",&,N,V_vocabulary
databaseManager
T@"NSArray",C
dealloc
T@"NSArray",R,&,N,V_accounts
deleteExitRecordWithCompletion:
T@"NSCache",&,N,V_subscriptionValidationTokenByHandleIDCache
devices
T@"NSDate",&,N
didUpdateChatStatus:chat:style:
T@"NSDate",&,N,V_lastRestoreFailureLogDumpDate
eagerUploadTransfer:recipients:
T@"NSDate",&,N,V_latestReadReceipt
endBuddyChanges
T@"NSDate",C,D,N
fetchExitRecord
T@"NSDate",R,V_firstOccurrence
fetchLatestSalt
T@"NSDictionary",&,N,V_serviceProperties
fileURL
T@"NSDictionary",C,D,N
firstOccurrence
T@"NSDictionary",R,&,N
groupChatIdentifierForChatRoom:
T@"NSDictionary",R,C,N
handleAllowList
T@"NSDictionary",R,N,V_identifierToZoneMap
hasDataDetectedInformalPayment:
T@"NSError",&,N,V_errorFetchingExitDate
initWithBundle:
T@"NSMapTable",R,N,V_delegateToQueue
initWithFormat:
T@"NSMutableArray",&,N,V_downloadAssetsForTransferGUIDs
initWithString:
T@"NSMutableArray",&,N,V_transferringTransfers
initialAttachmentSyncController
T@"NSMutableDictionary",&,N,V_completionBlocksForAssetFetchOperations
isEmergencyChat
T@"NSMutableDictionary",&,N,V_handledNicknames
isEmpty
T@"NSMutableDictionary",&,N,V_inMemorySyncStatistics
isKnownContact:
T@"NSMutableDictionary",&,N,V_mutableProperties
isSafeToDeleteAttachmentAtPath:
T@"NSMutableDictionary",&,N,V_pendingNicknameUpdates
isSystemMessage
T@"NSMutableDictionary",&,N,V_recordIDToTransferMap
isValid
T@"NSMutableDictionary",&,N,V_taskGroupedByServiceName
kvStore
T@"NSMutableDictionary",&,N,V_writeMsgIDToRowIDMap
lastMessageStorageTimerInterval
T@"NSMutableDictionary",&,V_chatGUIDToSpamCheckTimerMap
loadRecentChats
T@"NSMutableOrderedSet",&,N,V_recentMessageIDs
localizedStandardRangeOfString:
T@"NSMutableSet",&,N,V_activeTransfers
loginID
T@"NSMutableSet",&,N,V_handleDenyList
lowercaseString
T@"NSNumber",&,N,V_saltZoneCreatedOverride
manateeDataBase
T@"NSObject<OS_dispatch_queue>",&,N,V_ckQueue
message
T@"NSObject<OS_dispatch_queue>",&,N,V_persistenceQueue
messagePartBody
T@"NSObject<OS_dispatch_queue>",R,N,V_changeObservationQueue
messagePartText
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
networkDataAvailabilityChanged:
T@"NSString",&,N,V_countryCode
noteBadPassword
T@"NSString",&,N,V_idsDestination
noticesForURLs:
T@"NSString",&,N,V_serviceName
numMessagesSent
T@"NSString",&,N,V_unformattedID
numberWithChar:
T@"NSString",&,V_lastModificationStamp
oldInternalName
T@"NSString",C
passwordUpdated
T@"NSString",C,N,V_CNContactID
persistMessage:
T@"NSString",C,N,V_loginID
photoAnalysisInSpotlightEnabled
T@"NSString",C,SsetEngramID:
preWarm
T@"NSString",C,V_cloudKitRecordID
printCachedSalt
T@"NSString",R,&,N,V_GUID
recordChangeTag
T@"NSString",R,&,N,V_password
registerAccount
T@"NSString",R,&,N,V_proxyHost
registerSessionClassWithBundle:
T@"NSString",R,C
release
T@"NSString",R,N
removeListener:
T@"NSString",R,N,V_guid
removeObserver:
T@"NSString",R,N,V_subscriptionValidationToken
replayMessagesFromDatabasePath:
T@"NSTimer",&,N,V_longRunningSyncTimer
sendRecoverCommand:forChatGUID:
T@"NSTimer",&,N,V_retryTimer
serviceDefaults
T@"NSTimer",&,V_reloadTimer
session
T@"PHFetchOptions",R,N,V_analysisFetchOptions
setAnalyticSyncDatesDictionary:
T@"PHMomentShare",&,N,V_momentShare
setBool:forKey:
T@"SKStatusSubscriptionService",&,N,V_availabilitySubscriptionService
setCNContactID:
T@"UNUserNotificationCenter",&,N,V_notificationCenter
setChatIsFiltered:withChatGuid:
T@"__IMDPlainTextTapbackInterpreterImpl",&,N,V_impl
setCountryCode:
T@?,C,N,V_automationCompletionBlock
setDateAsTimeIntervalSince1970:
T@?,C,N,V_syncTaskCompletionBlock
setDisplayName:
TB,D,N
setFamilyInviteResponseHandler:
TB,D,N,GisEligibleForTruthZone
setInExitState:
TB,D,N,GisInExitState
setLatestSyncToken:forSyncType:
TB,D,N,GisStartingEnabledSettingChange
setMessageBody:
TB,D,N,GisStartingPeriodicSyncSetByCloudKitHooks
setMomentShare:
TB,D,N,GisSyncingEnabled
setOtherHandle:
TB,N
setPersistentStoreDescriptions:
TB,N,GisLoading,V_loading
setRecordStore:
TB,N,GisOscarChat,V_oscarChat
setRecordsRead:
TB,N,GisUnexpectedlyLoggedOut,V_unexpectedlyLoggedOut
setReplyToGUID:
TB,N,V_allowsWritingToDisk
setServiceName:
TB,N,V_assetDownloadInProgress
setSubscriptionCreatedOverride:
TB,N,V_didKeyRollPendingCheck
setTimingComingBackFromStorage:
TB,N,V_fetchedChatsDuringLastSync
setUpInitialConversationManager
TB,N,V_hasDumpedLogsForNoExisitingGroup
setWithObjects:
TB,N,V_haveDeferredUpdateRequest
shouldForceArchivedMessagesSync
TB,N,V_isSyncing
shouldPresentTTROnCloudKitError
TB,N,V_needToLoadMapsInfoFromDisk
stringByAppendingPathComponent:
TB,N,V_nicknameIsUploadingToCK
stringFromDate:
TB,N,V_useDeprecatedApi
subscriptionInvitationReceived:
TB,R,N
syncTaskFactory
TB,R,N,GisDeviceCharging
systemDidLogout
TB,R,N,GisDisabled
systemWillSleep
TB,R,N,GisKeyRollPending
updateEngramID:
TB,R,N,V_isRecordingReplayDB
updateStateForChat:hintMessage:
TB,R,V_isRecovered
uppercaseString
TB,V_isUpdatingAttachmentFileSizes
validateProfile
TB,V_pendingENGroupParticipantUpdate
version
TB,V_wasReportedAsJunk
writeExitRecord
TI,N,V_serviceLoginStatus
TI,R,N,V_idSensitivity
TQ,D,N
TQ,N,V_count
TQ,N,V_deviceConditionsToCheck
TQ,N,V_messagesProcessedComingBackFromStorage
TQ,N,V_pendingReadReceiptFromStorageCount
TQ,N,V_recordsRead
TQ,N,V_recordsWriteFailed
TQ,N,V_recordsWritten
TQ,N,V_unreadCount
TQ,R
TQ,R,N
TQ,R,N,V_capabilities
TQ,R,N,V_persistedChatCount
TQ,R,N,V_taskFlags
TQ,S_setUnreadCount:
TQ,V_numMessagesSent
TS,R,N,V_proxyPort
TS,R,N,V_serverPort
Td,N,V_lastMeContactStoreSync
Td,N,V_lastMessageStorageTimerInterval
Td,N,V_spamExtensionCutoffTime
Td,N,V_storageTimerInterval
Ti,N,V_serviceDisconnectReason
Ti,R,N
Tq,D,N
Tq,N
Tq,N,V_fetchType
Tq,N,V_initialSyncAttempts
Tq,N,V_lastFailedMessageDate
Tq,N,V_state
Tq,R,N
Tq,R,N,V_proxyType
Tq,S_setRowID:
T{?=[8I]},R,N,V_auditToken
URLForResource:withExtension:
URLHostAllowedCharacterSet
URLWithString:
UTF8String
UUID
UUIDString
_CKOperationFactory
_CKUtilitiesSharedInstance
_CNContactID
_FTCopyGzippedData
_FTDataFromHexString
_FTOptionallyDecompressData
_FZBestGuessFZIDType
_GUID
_IDSService
_IMAHDAgentFallbackIntervalInSeconds
_IMDStoreMessage:inMessage:forceReplace:modifyError:modifyFlags:calculateUnreadCount:flagMask:shouldStoreBlock:didStoreBlock:block:
_IMTransferGUIDForMessageGUID:andIndex:
_SWCollaborationClearNoticeTransmissionMessageClass
_SWCollaborationNoticeTransmissionMessageClass
_URIFromCanonicalizedPhoneNumber
_URIFromFZIDType:
__addChatToGroupIDChatIndex:
__allServiceSessionsWeakReferenceArray
__broadcasterForTesting
__databaseRequestForAttachmentsWithAssets
__forceSetLoginStatus:oldStatus:message:reason:properties:account:
__imArrayByApplyingBlock:
__imArrayByApplyingBlock:filter:
__imArrayByFilteringWithBlock:
__imSetByApplyingBlock:
__imSetFromArray
__im_conformsToDomain:
__im_countMessageParts
__im_dateByAddingDays:
__im_dateWithCurrentServerTime
__im_dateWithNanosecondTimeIntervalSinceReferenceDate:
__im_messagePartMatchingPartIndex:
__im_nanosecondTimeInterval
__im_performBlock:
__im_visitMessageParts:
__mainThreadPostNotificationName:object:
__mainThreadPostNotificationName:object:userInfo:
__postDBUpdate
__pruneTypingContexts
__queryServerForID:count:completion:
__registerNewServiceSession:
__removeChatFromGroupIDChatIndex:
__shouldOptimizeAttachmentDefault
__stringByStrippingAttachmentAndControlCharacters
__swift_objectForKeyedSubscript:
__swift_setObject:forKeyedSubscript:
__syncChatsWithCloudKit:attemptCount:activity:withCompletion:
__wrapperAroundCacheDeletePurgeNotificationCallback:
__wrapperAroundCacheDeletePurgeableCallback:urgency:
__wrapperAroundCacheDeletePurgingCallback:urgency:
_abandonPWFetcher
_abandonSystemProxySettingsFetcher
_acceptMomentShare:completionHandler:
_acceptMomentShareIfNecessaryForContext:isRetry:
_account
_accountController
_accountControllerSharedInstance
_accountDefaults
_accountDidChange:
_accountHasMultipleDevices
_accountID
_accountNeedsRepairOverride
_accountStore
_accounts
_accountsArrayForServiceIMessage
_activated
_activatingAccount
_activeDeviceForHandle
_activeTUConversations
_activeTransfers
_addActiveTransfer:
_addChatFromCacheMiss:preferExistingChat:
_addChatsFromCacheMisses:preferExistingChats:
_addDatesDefaultsIfNeededToDictionary:
_addDatesDefaultsIfNeededToDictionary:keys:
_addGatekeeperProperties:toDirectory:
_addGatekeeperProperties:toFileAtPath:
_addGroupPhotoToCKRecord:
_addGroupPhotoToTransferCenterForChat:
_addItemToParentChatIfNotLocationItem:parentChat:updatedLastMessageCount:
_addLocationShareItemToMatchingChats:handleID:hasStoredItem:broadcastChanges:
_addSpotlightPropertiesFromFileTransfer:toDirectory:
_addTransfer:forGUID:shouldNotify:
_addTransferringTransfer:
_addedObserverForUnexpectedlyLoggedOut
_adoptUpdatedStateForExistingItem:itemFromCKRecord:
_aliasStringsForIDSAccount:
_aliasToCNIDMapForAliases:
_aliases
_aliasesForIDSAccount:
_allChatInfo
_allFileTransfers
_allHandles
_allowDestructiveMOCFeaturesBasedOnDSID
_allowsWritingToDisk
_alreadyCapturedErrorWithAutoBugCapture
_analysisFetchOptions
_analyticRecordZone
_analyticRecordZoneID
_analyticZoneCreated
_anyChatExistsOnServerWithResultsLimit:changeToken:activity:completion:
_appearsToBeDSID
_appearsToBeEmail
_archivedRecordSyncToken
_arrayForKey:
_askToBuyResponseHandler
_askToTapToRadarForErrorString:path:
_askToTapToRadarWithString:internalOnly:
_assetDownloadInProgress
_assetForKey:
_assetURLToInsertToRecord
_assetUUIDToUnfinishedTransferMapFromTransfers:
_assetUUIDsToFileTransfers
_assetsFetch
_attachmentDeleteBatchSize
_attachmentDownloadCanStart:withActivity:
_attachmentFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:desiredKeys:
_attachmentRecordZone
_attachmentRecordZoneID
_attachmentStoreSharedInstance
_attachmentZoneCreated
_attachmentZoneID
_attachmentZoneSalt
_audience:allowsRepliesToChat:
_auditToken
_authenticationController
_autoBugCaptureWithSubType:debugDescription:
_autoDonationBehavior
_autoDonationBehaviorLastModificationDate
_autoReconnectTimer:
_autoReplier
_autoReplyAudience
_autoReplyMessageTextWithUrgentBreakthroughInstructions:
_automaticDNDStatus
_automationCompletionBlock
_automation_markAsReadQuery:finishedWithResult:
_automation_markMessagesAsRead:messageGUID:forChatGUID:fromMe:queryID:
_automation_receiveDictionary:fromID:
_automation_sendDictionary:options:toHandles:
_auxVideoPathIfItExists
_availabilitySubscriptionService
_awaitingDataContext
_badPass
_bagDisabled
_beginExitStateCleanupIfNeededWithActivity:
_beginNicknameUpload:
_beginPeriodicSyncWithActivity:attemptCount:
_beginPeriodicSyncWithActivity:attemptCount:syncChatsCompletionBlock:
_bestGuessURI
_blackholedChatInfoForNumberOfChats:
_blackholedChatsExistCache
_blastDoorProcessingWithIMMessageItem:chat:account:fromToken:fromIDSID:fromIdentifier:toIdentifier:participants:groupName:groupID:isEncrypted:isFromMe:isLastFromStorage:isFromStorage:hideLockScreenNotification:wantsCheckpointing:needsDeliveryReceipt:messageBalloonPayloadAttachmentDictionary:inlineAttachments:attributionInfoArray:nicknameDictionary:availabilityVerificationRecipientChannelIDPrefix:availabilityVerificationRecipientEncryptionValidationToken:messageContext:completionBlock:
_blastDoorProcessingWithIMMessageItem:chat:account:fromToken:fromIDSID:fromIdentifier:toIdentifier:participants:groupName:groupID:isEncrypted:isFromMe:isLastFromStorage:isFromStorage:hideLockScreenNotification:wantsCheckpointing:needsDeliveryReceipt:messageBalloonPayloadAttachmentDictionary:inlineAttachments:attributionInfoArray:nicknameDictionary:availabilityVerificationRecipientChannelIDPrefix:availabilityVerificationRecipientEncryptionValidationToken:messageContext:isFromTrustedSender:completionBlock:
_blockPrefWriting
_blocklistIfNeededForChatDict:
_broadcastPendingMapChanged
_broadcastToForceReloadChats
_broadcaster
_broadcasterForTesting
_broadcasterOverride
_buddies
_buddyChangeLevel
_cacheDeleteRequestCacheableSpaceGuidanceWithID:diskVolume:urgency:requestedSize:
_cacheDeleteSetUp
_cacheFailureDate:
_cachedAliasToCNIDMap
_cachedChatWithGUID:
_cachedChatsWithGroupID:
_cachedLastFailedMessageDate
_cachedPathForStickerWithProperties:
_cachedSalt
_cachedServiceDefaults
_cachedSetupServiceDefaults
_cachedUnreadMessageCount
_calculateUnreadMessagesCountFilteredByFocus
_callMonitorStateChanged:
_callSyncWithCompletion:activity:
_canSubmitCloudKitAnalytic
_canSubmitCloudKitMetric
_capabilities
_changeObservationQueue
_changeTokenKeyForSyncType:
_chat
_chat:isDuplicateOfChat:
_chatEligibleForAvailabilityInformation:
_chatFetchRecordZoneChangesCKConfiguration:
_chatFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:
_chatForTUConversation:
_chatGUIDToChatMapForChats:
_chatGUIDToCountMap
_chatGUIDToSpamCheckTimerMap
_chatGUIDsThatNeedRemerging:chatDictionaryArray:aliasMap:
_chatGUIDsThatNeedRemergingWithCompletionHandler:
_chatInfo
_chatInfoForChats:
_chatInfoForConnection
_chatInfoForNumberOfChats:
_chatInfoInRange:wantsBlackholed:
_chatRecordZoneID
_chatRegistry
_chatRegistrySharedInstance
_chatRoomToGroupChatIdentifierMap
_chatStore
_chatSyncOperationGroup
_chatSyncOperationGroupWithName:
_chatSyncedRecently
_chatWriteRecordsCKConfiguration:
_chatZoneCreated
_chatZoneID
_chats
_chatsForMessageGUID:enableVerboseLogging:
_chatsForMessageIdentifier:
_chatsLock
_chatsToSendNicknameInfoTo
_chatsWithBlackholed:
_checkEligibilityWithAccountInfo:
_checkForContactChanges
_checkIfEnabledByServerBagOrDefault:
_checkIfUnexpectedlyLoggedOut
_checkMessageForENURL:
_checkMessageForOneTimeCodes:
_checkPowerAssertion
_checkRecordZoneExists:completionBlock:
_ckAccountChanged:
_ckChatSyncControllerNeedsSync
_ckQueue
_ckRecordFromData:
_ckSyncController
_ckUniqueID
_ckUtilities
_ckUtilitiesInstance
_ckUtilitiesSharedInstance
_className
_cleanUpTemporaryFiles
_cleanupPhoneNumber:
_clearAutoReconnectTimer
_clearCMMTransfersForCMMMessage:
_clearConnectionMonitor
_clearDowngradeMarkersForChat:
_clearFailureBadge
_clearProgressForTransferGUID:
_clearRateLimiter
_clearSharingLists
_clearTombstonesWithActivity:
_clientPreviewConstraints
_cloudKitRecordID
_cloudKitSyncState
_cloudkitSyncingEnabled
_codeInvalidationTimer
_commitBatchWrite
_compareLastFailureDateAndUpdateBadge:
_completeHubbleDownloadForTransfer:
_completeProgressForTransferGUID:
_completedPeriodicSyncSinceFirstFullSyncForLastSyncDate:firstFullSyncCompletedDate:
_completionBlocksForAssetFetchOperations
_compressFileAtPath:toPath:withCompletionBlock:
_configureAccountInformationOnItem:withAccount:
_configureIdentifierForOutgoingItem:withIdentifier:withStyle:
_configureSyndicationRangesForMessage:forChat:withSyndicationStatus:
_configureTimeOnOutgoingItem:
_connectionMonitor
_constructAttachmentRecordIDUsingTombStoneDictionary:
_constructMessageRecordIDUsingTombStoneDictionary:
_constructRecoverableMessageRecordIDUsingTombStoneDictionary:
_contactsBasedMerginEnabled
_contactsChanged:
_contactsContainsParticipants:
_container
_contextForMomentShareURL:forMessage:inChat:createIfNeeded:
_contextStamp
_contextWeakReference
_conversationItemForChat:conversation:
_conversationManager
_convertDeletedPartsDict:toIndexSet:toMap:
_copiedFileURLFromAssetExportFileURLs:transferGUID:error:
_copyAttachmentRecord:
_copyCKRecordFromExistingCKMetadata
_copyCKRecordFromExistingCKMetadataWithZoneID:salt:
_copyChatsToUploadWithLimit:
_copyForEnumerating
_copyHandle:onService:
_copyItemAtURL:toTemporaryDirectoryWithName:isDirectory:error:
_copyRecordIDsToDelete
_copyRecordIDsToDeleteWithLimit:
_copyServicePropertiesFromIMServiceBundle:
_count
_countryCode
_createAccountError:
_createGroupChatForConversation:onSession:
_createGroupChatsArray
_createKnownRecordBlock
_createProcessBatchBlockWithServiceSession:
_createRecordZone:completionBlock:
_createRecordZoneIfNeeded:completionBlock:
_createSubscriptionForZoneID:subscriptionID:recordType:completionBlock:
_createSubscriptionIfNeededForZoneID:subscriptionID:recordType:completionBlock:
_createSyncCompletionBlockForServiceSession:
_createWrapperForTransfer:
_currentHour
_currentlyExecutingSyncTask
_customizedAutoReplyMessage
_daemonWillShutdown:
_dailySyncStateDictionary
_dataBaseManager
_dataForKey:
_data_connection_readyWithAccount:
_databaseManager
_dateForKey:
_dateForNext24LogDumpAtHour:timeNow:dumpNow:
_deDupeSaltRecordZone
_deDupeSaltZoneID
_deactivatingAccount
_decompressFileAtPath:toPath:withCompletionBlock:
_defaultDefaults
_defaultPairedDevice
_defaultsSayWeHaveSyncedOnce
_delegate
_delegateToQueue
_deleteAllZonesForDatabase:
_deleteAttachmentsAndReturnBytesDeleted:
_deleteAttachmentsWithRecordIDs:completion:
_deleteAvatarForNickname:
_deleteBatchSize
_deleteChatRecordsWithRecordIDs:completion:
_deleteContext
_deleteDataUnderScrutiny
_deleteFileAtPath:
_deleteFilesOnDiskAndUpdateTransfers:
_deleteHandleIDFromHandledMap:
_deleteHandleIDFromPendingMap:
_deleteMessagesWithGUIDs:chatIdentifiers:style:onServices:batchNumber:completion:
_deleteMessagesWithRecordIDs:completion:
_deleteNicknameFromPendingMap:
_deletePublicNicknameLocationAndKey
_deleteRecoverableMessagesWithRecordIDs:completion:
_deleteZone:
_deleteZone:forDatabase:
_describeErrors:
_desiredKeysArrayForType:
_determineResultMessageForInput:output:original:
_deviceActive
_deviceConditionsAllowsAttachmentFileSizeUpdateForActivity:
_deviceConditionsAllowsMessageSync
_deviceConditionsAllowsMessageSyncForActivity:deviceConditionsToCheck:currentBatchCount:maxBatchCount:
_deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:
_deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:activity:
_deviceConditionsAllowsMessageSyncIgnoreFeatureEnabled:
_deviceConditionsAllowsMessageSyncIgnoreFeatureEnabled:activity:
_deviceConditionsAllowsMessageSyncWithActivity:
_deviceConditionsToCheck
_deviceIsPhone
_deviceLowOnDiskSpace
_deviceSupport
_deviceSupportsSMSAutoReplyForChat:
_deviceSupportsiMessageAutoReply
_deviceUnderFirstUnlock
_dictionaryRepresentation
_dictionaryRepresentationsForFileTransfers:toSave:
_didKeyRollPendingCheck
_didPassAccountAndIdentityUpdateNeeds
_didReceiveMessageDeliveryReceiptForMessageID:attempts:date:account:
_didReceiveMessagePlayedForMessageID:date:attempts:completionBlock:
_didReceiveMessagePlayedReceiptForMessageID:date:attempts:completionBlock:
_didReceiveMessageReadForMessageID:date:attempts:completionBlock:
_didReceiveMessageReadReceiptForMessageID:date:attempts:completionBlock:
_didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:attempts:account:completionBlock:
_dispatchNotification:withBlock:
_displayDatabaseFullAlert
_displayName
_dndHandleForIMDHandle:
_doLoginIgnoringProxy:
_doLoginIgnoringProxy:withAccount:
_doesAnyRecordZoneIDHavePendingArchivedRecords:
_doneLoadingAfterMerge
_downloadAttachmentAssetsWithActivity:restoringAttachments:retryCount:numAttachmentsDownloaded:completion:
_downloadAttachmentAssetsWithActivity:restoringAttachments:retryCount:numAttachmentsDownloaded:transfers:completion:
_dtService
_eligibleForTruthZone
_enManager
_enTextMessageForMessageBody:
_enURLsForMessageBody:
_encryptionValidationToken
_endNicknameUpload
_engramID
_ensureNoExistingGroupForCKRecord:
_errorFetchingExitDate
_errorIndicatesDeviceNotGoodForSync:
_evaluateIfAccountHasMultiplePhoneNumbers
_evaluateStateAndActIfNeeded
_evictCachedChat:
_exactGroupChatMatchOrNewestMatchingGroupID:serviceName:participants:toIdentifier:
_existingChatForCKRecord:
_existingChatsForIDs:serviceName:displayName:groupID:style:
_existingItemRequiresUpgrade:itemFromCKRecord:
_existingiMessageChatForChatIdentifier:style:
_exitRecordID
_expireStateTimerFired
_extractHandlesFromMap:usingCNID:
_familyInviteResponseHandler
_fetchAndValidateFileTransfersFromCloudKit:capturedWithABC:activity:completion:
_fetchArchivedRecordsIfNeeded:currentBatchCount:maxNumberOfBatches:activity:withCompletionBlock:
_fetchAssetsForAcceptedMomentShareWithContext:
_fetchAttachmentZoneChangesShouldWriteBackChanges:desiredKeys:syncType:currentBatchCount:maxBatchCount:syncToken:activity:completionBlock:
_fetchAttachmentZoneRecords:desiredKeys:ognSuffix:removeTombstones:activity:completion:
_fetchChatRecordOperationWithActivity:
_fetchExitRecordDateWithCompletion:
_fetchLatestRampStateFromCK:
_fetchLatestSaltFromCloudKitAndPersistWithCompletion:
_fetchMessageZoneChangesSyncType:currentBatchCount:maxNumberOfBatches:activity:completionBlock:
_fetchMessagesFromChat:onService:numberOfMessages:
_fetchNexBatchOfMessagesAndReplay
_fetchOperationFactory:token:batchSize:activity:
_fetchOptionsDictionaryWithFetchOptions:andZoneID:
_fetchPrimaryAccountWithCompletion:
_fetchRecordZoneChangesOptionsFromOperation:
_fetchRecordsOperationWithActivity:
_fetchRecoverableMessagesCKConfiguration:
_fetchResultForCuratedOrFirstForMomentShare:outFetchType:
_fetchResultLimit:
_fetchTransfersFromCloudKit:indexOfTransfers:numberOfBatchesToFetch:activity:withCompletion:
_fetchTransfersFromCloudKit:withActivity:
_fetchType
_fetchUpdatesCKConfiguration:
_fetchedAllChangesFromCloudKit
_fetchedChatsDuringLastSync
_fetchedExitDateOnLaunch
_fileManager
_filePath
_fileTransferCenter
_fileTransferForAssetUUID:forMessage:momentShare:atIndex:ofTotal:
_fileTransferGUIDsInMessageBody:
_fileTransfersToDelete:
_fileTransfersToValidate:
_filterRecordIDsToChatsWithNoRecentModifications:completion:
_finalizeIncomingChat:
_findChatWinnerInDuplicateChatArray:fixDisplayName:
_findExistingGroupChatForConversation:onSession:
_findLosingChatGUIDsInArrayOfChats:withWinner:
_finishBatchChange
_firewallUserNotificationForService:
_firstOccurrence
_fixUpChatParticipantsIfNeeded:usingChatGUIDToChatMap:
_forceReloadChats:
_forceSetLoginStatus:message:reason:properties:
_forwardMappingPacket:toID:account:
_gelatoService
_generateCurrentAliasToCNIDDictionary
_generateLocationSharingItemWithHandleID:direction:action:
_generateLockRecord
_generateTransfersForAssetUUIDs:forMessage:inChat:momentShare:
_generateTransfersForContext:
_getCurrentDBVersion
_getDowngradedDBPath
_getFileSizeAtPath:
_getIndexSetForBatch:indexOfTransfers:
_getKeepMessagesValue
_getNewFileTransferForStoredAttachmentPayloadDataWithTransferGUID:messageGUID:
_getPendingNicknameForUpload
_getTempDBPath
_getTempRecentsPath
_getTruncatedDBPath
_getZippedDBPath
_getZippedRecentsPath
_groupChatIdentifierToChatRoomMap
_groupID
_guid
_guidToTransferMap
_handleAllowList
_handleChatDeletionCompletionForRecordIDs:error:
_handleDBVersionResponse:
_handleExpireStateDictionary:
_handleFetchZoneChangesOperation:
_handleFetchingExitRecordOperation:
_handleFileTransfer:acceptedWithPath:autoRename:overwrite:options:postNotification:
_handleFileTransfer:createdWithProperties:withAuditToken:
_handleFileTransfer:updatedWithProperties:
_handleFileTransferRemoved:
_handleFileTransferStopped:
_handleFileTransfers:autoRename:overwrite:options:postNotification:
_handleFirewallUserNotificationDidFinish:
_handleIncomingDB:
_handleIncomingRecents:
_handleIngestionFailureForContext:
_handleModifyRecordsOperation:
_handleMomentShareFetchForContext:momentShare:error:
_handleNotificationForZoneID:subscriptionID:
_handleQuickSwitchCompleted:
_handleQuickSwitchInitiateRequest
_handleRecentsRequest
_handleResourceRequestForContext:asset:transfer:didCompleteWithFileURL:error:
_handleRoutingWithDictionary:
_handleSharingKVStore
_handleSyncFailureType:step:activity:attemptCount:startTime:error:retry:
_handleUnexpectedLogout
_handleWatchdogWithDictionary:
_handleWritingCloudKitMetrics:
_handledNicknames
_handledNicknamesKVStore
_handlesForChat:
_handlesLock
_handlesMinusSenderServiceAccountID:
_handlesWithChangedContactsOriginalMap:newMap:
_hasCompletedRecoveryResync
_hasDumpedLogsForNoExisitingGroup
_hasDumpedLogsInPastHour
_hasDumpedRestoreFailureLogsInPastHour
_hasHadSuccessfulQuery
_hasMarkedAllAttachmentsAsNeedingSync
_hasMarkedAllMessagesAsNeedingSync
_hasMessagesWithGUIDs:
_hasReceivedReadReceipt
_hasRecentOutgoingMessagesInChat:
_haveDeferredUpdateRequest
_haveInconsistentGroupPhotoGuidOnMergedChats:
_haveRecentUrgentMessageInGracePeriodForChat:
_haveRecentlySentUnavailabilityAutoReplyMessageToChat:
_heldDeletionContext
_historyToken
_iMessageEnabled
_iMessageFailedAccountIsIrreparable
_idSensitivity
_identifier
_identifierToZoneMap
_idsAccount
_idsAccountController
_idsTransportLogNeedsSync
_ifCloudKitAbleToSyncWithActivity:callBlock:
_imDefaults
_impl
_inMemorySyncStatistics
_incomingChatWithChatRecord:
_incomingChatsWithChatRecords:
_incrementCountsForColumnSyncedKey:syncedColumnAmountToIncrease:totalColumnAmountKey:totalColumnAmountToIncrease:
_indexChatAndMessagesToSpotlight
_indexOfNextBatch:totalTransfers:indexOfTransfers:
_indexSpotlightIfNeedForPTask:
_initResyncForDeleteRecovery
_initWithCKSyncController:accountController:replayController:
_initWithContainer:scope:
_initWithGUID:filename:isDirectory:localURL:account:otherPerson:totalBytes:hfsType:hfsCreator:hfsFlags:isIncoming:
_initialSyncAttempts
_initiateQuickSwitch
_insertChatUsingCKRecord:
_installSystemSound:
_internalName
_internalQueue
_inviteSenderHandleID:fromHandleID:
_isAccountActive:forService:
_isAcknowledgmentMessage:
_isActivated
_isArchived
_isAssociatedMessage:
_isAutoPlay:
_isBlackholed
_isCoreDuetSyncForMaxBatchCount:activity:
_isDeviceRegistered
_isDeviceRegisteredForAccount:
_isDisabled
_isDiskSpaceAvailableForSyncType:currentBatchCount:
_isDoingDeleteRecoverySync
_isFiltered
_isFirstLoad
_isInDrivingFocus
_isInExitState
_isLoading
_isLogDumpAllowed
_isMessageItemEligibleForEN:
_isMessageSWYSpamMessage:inChat:
_isNicknamesSharingEnabled
_isOperationalForAccount:
_isPairedDeviceInProxyMode
_isRecipeBasedSticker:
_isRecordingReplayDB
_isRecovered
_isRunningInAutomation
_isSMSChat:
_isSMSMessage:
_isSuppressedForGUID:
_isSyncing
_isSyncingPausedOverride
_isTryingToLogin
_isUnderScrutiny
_isUnexpectedlyLogOutValue
_isUpdatingAttachmentFileSizes
_isUsableSendingForAccount:
_isUserIntentNotLoggedOut
_isUsingCentralizedModel
_isValidCKRecordToSync:
_isValidPhoneNumber:forCountryCode:
_itemClassShouldUpdateTransferForItem:
_itemFromCKRecord:
_itemsForMessageRecords:handleID:useAttachmentCache:shouldLoadAttachments:reverseOrder:
_itemsWithAssociatedGUID:shouldLoadAttachments:
_itemsWithGUIDs:
_itemsWithHandles:onServices:messageGUID:threadIdentifier:limit:onlyMessages:
_itemsWithHandlesBeforeAndAfterGUID:handles:onServices:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:hasMessagesBefore:hasMessagesAfter:
_itemsWithRoomNames:onServices:messageGUID:threadIdentifier:limit:onlyMessages:
_keychainError
_keychainErrorWithCause:
_kickOffAssetFetchForTransfersIfNeededWithActivity:
_kickOffNightlyPeriodicSyncIfApplicable
_kickOffWriteIfNeededForSyncType:activity:completion:
_kickOffWriteOnCKQueueWithActivity:completion:
_kvStore
_kvStorePath
_lastAddressedLocalHandle
_lastAddressedSIMID
_lastAveragedBytes
_lastAveragedInterval
_lastFailedMessageDate
_lastLogDumpDate
_lastMeContactStoreSync
_lastMessage
_lastMessageStorageTimerInterval
_lastMessageTimeStampOnLoad
_lastModificationStamp
_lastReadMessageTimeStamp
_lastRestoreFailureLogDumpDate
_lastSeenMessageGuid
_latestActiveDate
_latestReadReceipt
_latestSyncToken
_legacyExistingLoadedChatsForIDs:onService:displayName:groupID:style:
_listenerID
_loadAllInfoFromDiskIfAble
_loadAttachmentRecordForGUID:
_loadCMMTransfersForMessage:
_loadChatsIncludingAllChats:
_loadIDSAccountController
_loading
_localProperties
_lock
_lockRecord
_lockRecordHadConflict:
_lockdownManager
_logAllUnreadMessages
_logGreenTeaLogsForChats:
_loginID
_login_checkUsernameAndPasswordWithAccount:
_login_serverSettingsReadyWithAccount:
_login_usernameAndPasswordReadyWithAccount:
_longRunningSyncTimer
_lookupChatUsingParentChatID:service:
_mainService
_makeAllAttachmentsClassC
_makeAllNicknameContentsClassC
_makeDeletePartsDictFor:withIndexes:withIndexToRangeMap:deleteDate:
_managed
_managedPrefsNotification:
_manateeContainer
_manualSyncAttemptCount
_mapRoomChatToGroupChat:style:
_markAllFailedAttachmentsAsNeedingSync
_markAllIncompatibleMessagesForDeletion
_markAllUnsuccessFullSyncMessagesAsNeedingSync
_markAttachmentWithROWIDAsFailedToUploadToCloudKit:
_markAttachmentWithROWIDAsSyncedWithCloudKit:
_markChatAsDefferedForSyncingUsingRecord:
_markChatAsDowngraded:
_markForksAsSyncedForChat:
_markGroupPhotosAsUnpurgeableIfNecessary
_markMessageAsRead:inChat:withCompletionHandler:
_markNicknameAsUpdated:incrementPendingNicknameVersion:
_markNicknameAsUpdatedForHandleID:
_markSensitiveDefault
_markTransferAsNotBeingAbleToSync:
_markTransferAsNotBeingAbleToSyncUsingCKRecord:
_maxTimeToDeferInSeconds
_meCardUpdated
_mergeDuplicateGroupsIfNeeded
_mergeParticipantIDs
_mergedPinningIdentifiersForChats:chatGUIDToChatMap:groupedChatsByPersonCentricIdWithSortedChats:
_message
_messageAutoReplier
_messageDeleteBatchSize
_messageExpireStateTimer
_messageFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:
_messageGuidsForMessages:
_messageHasLegacyUrgentTriggerMatchInText:
_messageHistorySyncController
_messageIsSOS:
_messageItemSupportsAvailabilityReply:
_messageItemSupportsBreakthroughNotification:
_messageItemWithIndexesDeleted:subRangesToDeleteMapping:deleteSubject:deleteTransferCallback:createItemCallback:fromMessageItem:
_messageItemsForMessageRecords:handleID:useAttachmentCache:shouldLoadAttachments:reverseOrder:
_messageItemsSupportingAvailabilityReplyFromItems:
_messageItemsSupportingBreakthroughNotifications:
_messagePTaskStore
_messageProcessingController
_messageRecordSalt
_messageRecordZone
_messageRecordZoneID
_messageRoutingTimer
_messageSenderEligibleToReceiveAvailabilityInformation:
_messageStore
_messageStoreCompletion:inputMessage:outputMessage:originalMessage:completionBlock:
_messageStoreSharedInstance
_messageWatchdogTimer
_messageZoneCreated
_messageZoneID
_messagesPendingUpdateT1ToCloudKitWithLimit:attemptCount:
_messagesPendingUpdateT2ToCloudKitWithLimit:attemptCount:
_messagesProcessedComingBackFromStorage
_messagesReceivedDuringStorage
_messagesThatNeedSyncWithCloudKitWithLimit:attemptCount:
_metricZoneID
_migrateServerChangeToken
_migrateSyncToken
_migrateSyncTokens
_minimumChatComingOnlineSyncInterval
_mininimumServerBagClientValue
_mocFeatureEnabled
_modificationStamp
_modifiedOpGroupName:
_momentShare
_mutablePersistentProperties
_mutableProperties
_needToLoadMapsInfoFromDisk
_needsSyncOnAccountUpdate
_needsSyncOnIdentityUpdate
_needsToMarkAllAttachmentsAsNeedingSync
_needsToMarkAllChatsAsNeedingSync
_needsToMarkAllMessagesAsNeedingSync
_needsWrapper
_networkCall_IMDMessagePTaskDeleteAllCompletedTask
_networkCall_IMDMessagePTaskSelectWithLimit:
_networkCall_IMDMessagePTaskUpdateTaskFlagsForGUID:taskFlags:
_networkCall_InsertRowGuid:taskFlags:
_networkChanged:
_networkDataAvailable
_newDeviceDidSignIntoiMessageWithRetryCount:
_newFileTransferFromIMDAttachmentRecordRef:
_newFirstUnlockReplaySyncTask
_newHashForChat:style:
_newIDSTransactionLogSyncTask
_newKChatSyncTask
_newckRecordsFromChats:
_newestExistingChatWithGroupID:onService:
_newestExistingChatWithOriginalGroupID:onService:
_newestGroupChatMatchingParticipants:displayName:strictDisplayNameMatching:serviceName:toIdentifier:
_nickNameContainer
_nickNameContainerIdentifier
_nicknameController
_nicknameFeatureEnabled
_nicknameIsUploadingToCK
_nicknamesForParticipants
_nightlySyncTimer
_nightlySyncTimerFired
_noteMeticsForSyncEndedWithSuccces:
_noteMetricsForSyncStartFrom:fullSync:
_noteSyncEnded
_noteSyncStarted:
_noticeDispatcher
_noticeEventHistory
_notificationCenter
_notifyPSYDataSent
_notifyPSYWithResult:
_nukeCKData
_numMessagesSent
_numberForKey:
_numberOfAttachmentsToDownload
_numberOfAttachmentsToWriteUp
_numberOfBatchesOfAttachmentsToFetchInInitialSync
_numberOfBatchesOfMessagesToFetchInInitialSync
_numberOfChatsToFetch
_numberOfChatsToWrite
_numberOfMessagesToUpload
_numberOfMetadataBatchesOfAttachmentsToFetchInInitialSync
_numberOfRecordsToFetchForSyncType:
_oldServiceDomain
_onChangeTokenUpdated:token:data:
_onReadComplete:error:activity:completion:
_onRecordDeleted:type:
_onRecordRead:
_onRecordT1Write:error:recordNameToRowIDMap:
_onRecordT2Write:error:recordNameToItemMap:
_onRecordWrite:error:recordNameToPartIndexAndRowID:
_onRecordZoneFetchComplete:token:tokenData:moreComing:error:
_onRecoverableMessagePartRecordReadWithDeleteDate:messageGUID:partBody:
_onWriteComplete:error:shouldWriteMore:activity:completion:
_onWriteT1Complete:error:shouldWriteMore:activity:completion:
_onWriteT2Complete:error:shouldWriteMore:activity:completion:
_oneToOneChatForRemoteHandle:
_operationErrorForModifyingRecordCompletion:
_operationGroupWithName:
_operationIsCloudKitMetricsOperation:
_operationalAccounts
_operationalAccountsCache
_originalGroupID
_oscarChat
_otcUtilities
_otherChatExistsWithChatGUID:
_pTaskStore
_parentChatIDFromCKRecord:
_participantIDSetFromHandles:toIdentifier:
_participants
_password
_pendingDBUpdatePost
_pendingENGroupParticipantUpdate
_pendingNicknameUpdates
_pendingNicknameUpdatesKVStore
_pendingReadReceiptFromStorageCount
_perTransferProgress
_performBlock:afterDelay:
_performRampCheckWithRetryAfter:
_periodicSyncAttemptCount
_periodicSyncStateDictionary
_persistAttachmentAtFileURL:forFileTransfer:
_persistMergeIDMergedChatsIfNeeded
_persistMergedIDMergedChatsIfNeeded:
_persistRampFetchServerError:
_persistedChatCount
_persistenceQueue
_personCentricID
_personIdFromAccount:
_personalNickname
_playAcknowledgmentSentSound
_playSMSSound
_populateCKRecordWithIMGroupActionItemFields:
_populateCKRecordWithIMGroupTitleChangeItemFields:
_populateCKRecordWithIMItemFields:
_populateCKRecordWithIMLocationShareStatusChangeItemFields:
_populateCKRecordWithIMMessageActionItemFields:
_populateCKRecordWithIMMessageItemFields:
_populateCKRecordWithIMParticipantChangeItemFields:
_populateContactIDOnHandles
_populateLastMessageForChat:
_populateNicknameDictionary:forKVStore:limitToLoad:
_postBadgeNumber:
_postBadgeString:
_postDBUpdate
_postHubbleDownloadFailedForTransfer:error:
_postMessagesFromStorage:
_postMetricsToCloudKitOnAutomaticHistoryDeletionAgentLaunch
_postTransferInfoOfDeletedTransfers:
_postUpdated:
_predominantServiceForChat:usingMessageThreshold:
_pref_IMDCoreSpotlightHasMigrated
_primaryiCloudAccount
_primaryiCloudAccountAltDSID
_primaryiCloudAccountSecurityLevel
_privateWorkQueue
_processAndValidateAttachmentRecordsEligibleForPurge:recordIDsToTransfers:capturedWithABC:completion:
_processArchivedRecordsFetchCompletionZoneID:serverChangeToken:moreComing:currentBatchCount:maxNumberOfBatches:activity:error:completionBlock:
_processAssetFetchOperationCompletionBlock:removeTombstones:operationID:error:
_processAssetFetchPerRecordCompletionBlock:recordID:error:
_processAssetFetchPerRecordProgressBlock:progress:
_processBatch:
_processFetchArchivedRecordCompletionWithError:WithCompletionBlock:
_processFetchRecordChangesCompleted:activity:completion:syncType:
_processFetchRecordChangesCompleted:completionBlock:
_processFetchRecordZoneChangesCompletionWithError:completionBlock:
_processIncomingChat:
_processMessagesForAvailabilityAutoReply:forIncomingMessageFromIDSID:inChat:
_processModifyPerRecordCallBack:error:
_processModifyPerRecordCallBack:error:recordIDtoGUIDmap:
_processModifyRecordCompletion:deletedRecordIDs:error:completionBlock:
_processModifyRecordsCompletion:deletedRecordIDs:operationError:isLastBatchOfWrite:activity:writeCompletionBlock:
_processPotentialNetworkChange
_processRecordChange:
_processRecordChanged:
_processRecordDeletion:
_processRecordDeletionCompletion:error:completionBlock:
_processRecordWriteCompletionForRecord:NSError:
_processRecordZoneChangeTokenUpdated:zoneID:clienChangeToken:
_processRecordZoneChangeTokenUpdated:zoneID:clienChangeToken:syncType:
_processRecordZoneFetchCompletion:zoneID:clientChangeTokenData:moreComing:error:
_processRecordZoneFetchCompletion:zoneID:clientChangeTokenData:moreComing:shouldWriteBackChanges:desiredKeys:syncType:error:currentBatchCount:maxBatchCount:activity:completionBlock:
_processRecordZoneFetchCompletionZoneID:serverChangeToken:clientChangeTokenData:moreComing:NSError:syncType:currentBatchCount:maxNumberOfBatches:shouldFetchArchivedRecords:activity:completionBlock:
_processingTimer
_processingTimerFired
_progressForTransferGUID:allowCreate:path:
_properties
_proxyAccount
_proxyHost
_proxyPassword
_proxyPort
_proxyType
_purgeableSpaceGivenUrgency:
_pwRequestID
_queue
_quickSwitchCompleted:
_quickSwitchIDSService
_randomSalt
_randomTemporaryPathWithFileName:
_rateLimiter
_readNextDeleteAfterRow
_readReceiptTrackingEnabled
_readRecordsWithType:attemptCount:activity:completion:
_reallyUnloadServiceBundle
_rebuildOperationalAccountsCache
_recentMessageIDs
_reconnectIfNecessary
_reconnectIfNecessaryWithAccount:
_recordFromServerChangeToken
_recordIDToTransferMap
_recordIsInvalid:
_recordManager
_recordStore
_recordType
_recordZoneManager
_recordsRead
_recordsToProcessWithError:error:
_recordsToSave
_recordsWriteFailed
_recoverableMessageRecordZone
_refreshUIWhileSyncing
_registrationInfo
_reindexMessage:completion:
_reloadTimer
_removeActiveTransfer:
_removeChatGuidFromCoreDuet:
_removeFinishedIngestionContext:
_removeObjectForKey:forDictionary:
_removeTransferFromiCloudBackupWithGuid:
_removeTransferringTransfer:
_removeWrapperForTransfer:
_repairGUIDIfNeeded
_repairInconsistentGroupPhotoGuidOnMergedChatsIfNecessary:
_replayController
_replayControllerNeedsSync
_replyDelegate
_replyProxy
_reportMessageDictionaryForMessages:withLastAddressedHandle:maxMessageLength:isAutoReport:withChat:maxMessagesToReport:totalMessageCount:
_reportMessageDictionaryForMessages:withLastAddressedHandle:maxMessageLength:isAutoReport:withChat:maxMessagesToReport:totalMessageCount:onlyReportForiMessageService:notifyInternalSecurity:
_reportToIDSiMessageSpam:
_requestResourceFileURLsForAsset:fileTransfer:completionHandler:
_requestingToSendLocalNicknameInfo:
_reregisterAndReidentify:
_resetArvchivedRecordSyncToken
_resetAttachmentSyncStateForRecord:toState:
_resetGUIDToExpectedGUID:
_resetHandleSharingList
_resetKeepMessagesSettingandBroadcastToAllDevices
_resetTransferStateIfAttachmentIsMissingAndDownloadable
_resolveChatConflictUsingCKRecord:localGUID:
_resyncForDeleteRecoveryState
_retryError
_retryPeerRequestWithRetry:
_retryTimer
_reuploadLocalProfileVersionNumber
_roomName
_routingTimerFired
_rowID
_saltZoneCreated
_saltZoneCreatedOverride
_saveFailureDate:
_saveKeychainPassword
_saveRecordsOperationWithMap:activity:
_saveRecordsT1OperationWithMap:activity:
_saveRecordsT2OperationWithMap:activity:
_saveRecoverableMessagesOperationFactory:token:batchSize:recordNameToPartIndexAndRowID:activity:
_savedFailureDate
_scheduleDeferredProcessingWithTimeInterval:
_scheduleMetricOperation:
_scheduleNextEvaluation
_scheduleOperation:
_screenTimeAskReponseHandler
_sendDBVersionResponse:
_sendDeliveredQuietelyForMessages:forIncomingMessageFromIDSID:inChat:
_sendIDSFile:withCommand:
_sendIDSMessage:
_sendMessageDictionary:toDevice:
_sendQuickSwitchCompletedWithResult:
_sendRecentsRequest
_sendTextAutoReplyIfNecessaryForMessages:withUrgentBreakthroughInstructions:inChat:
_sendTextAutoReplyToChat:withUrgentBreakthroughInstructions:
_sendZippedFileAtPath:withCommand:
_senderIDFromToken:
_senderServiceAccountIDFrom:
_serializedCKRecordData:
_serverAllowsCacheDelete
_serverAllowsRemovalFromBackUp
_serverAllowsSync
_serverAllowsUIRefreshTimerWhileSyncing
_serverAllowsUIRefreshWhileSyncing
_serverBag
_serverChangeToken
_serverDeniesDailySyncStateAnalytics
_serverDeniesPeriodicSyncAnalytics
_serverDoesNotAllowComingBackOnlineChatSync
_serverDoesNotSingleDeviceLimitation
_serverHost
_serverPort
_serverSaysToUseOldContainer
_service
_serviceDefaults
_serviceDefaultsForDomain:
_serviceDisconnectReason
_serviceDomain
_serviceLoginStatus
_serviceLoginStatusMessage
_serviceName
_serviceProperties
_services
_session
_sessionClass
_setAccount:otherPerson:
_setAutoDonationBehavior:lastModificationDate:
_setAutoReconnectTimer
_setAveragedTransferRate:lastAveragedInterval:lastAveragedBytes:
_setCKRecordArray:forKey:
_setCKRecordAsset:forKey:
_setCKRecordData:forKey:
_setCKRecordDate:forKey:
_setCKRecordNumber:forKey:
_setCKRecordString:forKey:
_setCurrentBytes:totalBytes:
_setDirectory:hfsType:hfsCreator:hfsFlags:
_setEligibleToToggleMiCSwitch:
_setError:
_setErrorDescription:
_setFetchOptions:
_setGroupID:forChatAndAllSiblings:
_setInitialLoadForTesting:
_setLastUpdatedInterval:
_setLocalPath:
_setLocalURL:
_setNewCodeAndPrepareInvalidationTimer:
_setNextDeleteAfterRow:
_setObject:forKey:forDictionary:shouldSetBuild:
_setOutgoingFlagsOnMessage:
_setPendingConnectionMonitorUpdate
_setQueue:
_setRecordPropertiesBasedOnExistingRecord:
_setRowID:
_setSortIDForMessage:forChat:
_setSortIDOnIncomingMessage:forChat:
_setStartDate:
_setStartingSync
_setTimerForPruningTypingContext
_setTransferState:
_setUnderScrutiny:
_setUnencryptedCKRecordNumber:forKey:
_setUnreadCount:
_setUpPushConnection
_setUpSubscription
_setValue:forKey:
_setiCloudSettingsSwitchEnabled:
_setupAndBeginSync
_setupNotificationCenter
_shareURL
_shareURLsToContexts
_sharedAccountController
_sharedCKUtilities
_sharedDatabaseManager
_sharedDefaultsInstance
_sharedIMDMessageStore
_sharedMessageStore
_shouldBlackholeGroupChatFromSender:toRecipient:withOtherParticipants:forAccount:
_shouldDeferCoreDuetMessagesSyncWithActivity:
_shouldDisplayPopUpForResettingKeepMessages
_shouldDownloadAssetForTransfer:forMessageItem:
_shouldDownloadIfPhoneNumberAndNoSIM:
_shouldDropSendingMessage
_shouldEarlyReturnForWrongItemType:
_shouldFetchArchivedRecords:
_shouldFetchNextBatch:totalTransfers:
_shouldHandleInternalPhishingAttempts
_shouldIgnoreDoNotDisturbForMessages:inChat:
_shouldMarkAllAttachmentsAsNeedingSync
_shouldMarkAllChatsAsNeedingSync
_shouldMarkAllMessagesAsNeedingSync
_shouldMarkAttachmentsAsNeedingReupload
_shouldPublishNowPlaying
_shouldReconnect
_shouldReloadConversations
_shouldReportNewUserIfCreatedChatZones:deletedZones:
_shouldResyncChatsForError:
_shouldSendPriorityRequest
_shouldSendTextAutoReplyForChat:
_shouldShowFailureString
_shouldShowSWYQuickActionForMessage:outAppName:outBundleID:
_shouldUpdateSyncStats:originalSyncState:
_shouldUpdateSyncStatsForChat:originalSyncState:
_shouldUpdateSyncStatsForMessage:originalSyncState:
_shouldUseBadgeUtilities
_shouldiCloudSwitchBeEnabled
_showCKLogNotificationWithCompletion:
_showDebugAlertWithHeader:message:
_siblingChatForChat:usingChatGUIDToChatMap:
_signalUnreadChangeForHandle:
_smsSoundsToPlay
_sortedParticipantIDHashForParticipants:
_sortedParticipantIDHashForParticipants:usesPersonCentricID:
_sosTransportValidForMessage:
_sosURLMatchInText:
_soundTypeForMessage:
_spamCheckTimerFired:
_spamExtensionCutoffTime
_spamMessageCreator
_startAssetExportForContext:
_startBatchChange
_startBatchWrite
_startICloudSyncWithActivity:
_state
_stateCaptureAssistant
_stickerPackGUIDToPackMap
_stopSuppressingForGUID:
_stopSuppressingSound
_storage
_storageController
_storageTimer
_storageTimerFired
_storageTimerInterval
_store
_storeAttachmentsForMessage:
_storeMessage:chatIdentifier:localChat:style:account:messagesToPostArray:
_storePublicNickname:nicknameLocation:encryptionKey:
_strictlyUnarchivedObjectOfClasses:fromData:error:
_stringForAutoReplyAudience:
_stringForKey:
_stripFZIDPrefix
_style
_subService
_submitCloudKitAnalyticWithOperationGroupName:analyticDictionary:
_submitCloudKitMetricWithOperationGroupName:record:ignoreZoneNotFoundError:completion:
_subscriptionCreated
_subscriptionCreatedOverride
_subscriptionValidationToken
_subscriptionValidationTokenByHandleIDCache
_suppressDBUpdateTimerFired
_suppressedUpdates
_suppressedUpdatesTimer
_suspendedStorageController
_swiftImpl
_swiftImplementation
_syncChatsWithActivity:
_syncChatsWithCloudKitWithCompletionType:activity:syncChatsCompletionBlock:
_syncHandleAllowDenyListToOtherDevices
_syncNotCompletedRecently
_syncOperationGroupName
_syncRecoverableMessagesToCloudKitWithActivity:syncAttemptCount:startTime:syncCompletionBlock:retryCompletionBock:
_syncStartDate
_syncState
_syncTaskByServiceName
_syncTaskCompletionBlock
_syncTaskFactory
_syncToken
_syndicationLibrary
_systemProxySettingsFetcher
_targetCountForContext:
_targets
_taskFlags
_taskGroupedByServiceName
_telemetryReporter
_timingComingBackFromStorage
_transcodeController
_transcodeControllerSharedInstance
_transferCanBeMarkedPurgable:
_transferTimer
_transferTimerTick:
_transferringTransfers
_transitionToCompletedStateForContext:
_transitionToFetchingMomentShareForContext:
_transitionToGenerateTransfersStateForContextIfNecessary:
_transitionToWaitingForAssetsForContext:
_truncateDBToPath:
_truthDatabase
_tryToReuploadPersonalNicknameWithRetryCount:reuploadVersion:
_tuConversationForChat:
_typingContext
_typingContextTimer
_unexpectedlyLoggedOut
_unformattedID
_unreadCount
_unreadMessagesWithHandles:onServices:limit:fallbackGUID:
_unreadMessagesWithRoomNames:onServices:limit:fallbackGUID:
_unsignedIntegerFromString:
_updateAccountStatusToUnregistered:withAccount:
_updateAssociatedMessageItemsFromMessage:toMessage:
_updateAttachmentGUIDIfNeededAndReturnTransfersToForceMarkAsSync:transfersToSyncRowIDs:
_updateBadge
_updateBadgeAndCancelPreviousUpdate
_updateCacheForMessageGUID:fromMessage:toMessage:updateLastMessage:calculateUnreadCount:
_updateCachedParticipants
_updateChat:usingRecord:
_updateChatUsingCKRecord:onRead:didSucceed:
_updateCloudKitRecordIDAndDecryptionKeyIfNeededFromMadridMessage:
_updateConnectionMonitorFromAccountDefaultsIgnoringProxy:
_updateConnectionMonitorWithRemoteHost:
_updateContext:withChange:
_updateContextStamp
_updateCurrentAliasToCNIDDictionaryAndHistoryTokenWithCompletionHandler:
_updateDenyAllowListHandlesVersion
_updateDeviceConditionsToCheckIfNeededForCurrentBatchCount:maxBatchCount:
_updateExpireStateForMessageGUID:
_updateExpireStateTimerWithInterval:
_updateHandleDenyAllowListIfNeeded:
_updateHandleList:withHandles:forKey:broadcastUpdates:
_updateHandledNicknamesIfNeeded:
_updateInputMessage:forExistingMessage:
_updateLastMessage:
_updateLastMessageTimeStampForChat:broadcaster:
_updateLegacyTransferGUIDOn:andUpdateMessageIfNeeded:transfersToSync:
_updateMessageDictionaryWithPendingNicknameUpdates:
_updateModificationDate
_updateNicknameInHandledMap:
_updatePendingNicknameVersion
_updatePendingTransferMapForContext:completedTransfer:
_updateRecordZone
_updateRecordZoneID
_updateRoutingForMessageGUID:chatGUID:error:account:
_updateRoutingTimerWithInterval:
_updateSharingPreferencesIfNeededFromMadridMessage:
_updateSpamCheckTimerWithInterval:forChatGUID:
_updateStorageTimerWithInterval:
_updateSyncStatisticsForChat:incrementTotalCount:
_updateSyncStatisticsForMessage:incrementTotalCount:
_updateSyncStatsForAttachments:incrementTotalAttachmentCount:
_updateTransferGUID:toGUID:
_updateTransferUsingCKRecord:wasFetched:
_updateV1RecordType
_updateVocabularyExcludingChat:completionHandler:
_updateWatchdogForMessageGUID:
_updateWatchdogTimerWithInterval:
_updateWithDictionaryRepresentation:
_updatedMessageBody:replacingGuid:withGuid:
_upgradeChatToGroupChat:forConversation:
_uploadPendingNicknameIfNecessary
_useDeprecatedApi
_userIsAvailableToHandle:
_validCodes
_validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:encryptionValidationToken:fromSender:completion:
_validationStatusForAlias:onAccount:
_valueForKey:
_visitedChats
_vocabulary
_wasReportedAsJunk
_watchdogTimerFired
_wentOfflineWithAccount:
_withinAnHourOfLogDumpHour
_writeAttachmentsToCloudKitWithActivity:completionBlock:
_writeCKRecordsToAttachmentZone:activity:withCompletion:
_writeCKRecordsToChatZone:activity:withCompletion:
_writeDirtyChatsToCloudKitWithActivity:completion:
_writeDirtyMessagesToCloudKitWithActivity:completion:
_writeDownSyncDate
_writeMsgIDToRowIDMap
_writeNicknameToKVStore:nickname:
_writeRampStateAllowed:promoted:visible:fetchHadServerError:
_writeRecordsWithType:activity:completion:
_writeRecoverableMessagesCKConfiguration:
_writeT1RecordUpdatesWithType:activity:completion:
_writeT2RecordUpdatesWithType:activity:completion:
_writeUpdatesCKConfiguration:
_writeUpdatesWithType:updateStep:activity:completion:
_xpc_IMDCoreSpotlightAddMessageGUID:
_zoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:
_zoneCreated
_zoneIdentifierForOperation:
_zoneManager
aa_personID
aa_primaryAppleAccount
aa_primaryAppleAccountWithCompletion:
aa_primaryAppleAccountWithPreloadedDataclasses
absoluteString
acceptFileTransfer:completion:
acceptMomentShareWithCompletion:
acceptSubscriptionRequest:from:account:
acceptTransfer:path:
acceptableErrorCodeWhileDeleting:
account:aliasesChanged:
account:allowListChanged:
account:avAction:withArguments:toAVChat:isVideo:
account:blockListChanged:
account:blockingModeChanged:
account:buddyPictureChanged:imageData:imageHash:
account:buddyProperties:buddyPictures:
account:capabilitiesChanged:
account:chat:style:chatProperties:chatPersonCentricID:member:statusChanged:
account:chat:style:chatProperties:error:
account:chat:style:chatProperties:groupID:chatPersonCentricID:messageReceived:
account:chat:style:chatProperties:groupID:chatPersonCentricID:messageSent:
account:chat:style:chatProperties:groupID:chatPersonCentricID:messagesReceived:messagesComingFromStorage:
account:chat:style:chatProperties:groupID:chatPersonCentricID:statusChanged:handleInfo:
account:chat:style:chatProperties:invitationReceived:
account:chat:style:chatProperties:messageUpdated:
account:chat:style:chatProperties:messageUpdated:suppressNotification:
account:chat:style:chatProperties:messagesUpdated:
account:chat:style:chatProperties:notifySentMessage:sendTime:
account:chat:style:chatProperties:updateProperties:
account:conference:changedToNewConferenceID:
account:conference:invitationSentSuccessfully:
account:conference:peerID:propertiesUpdated:
account:conference:peerIDChangedFromID:toID:
account:conference:receivedAVMessage:from:sessionID:userInfo:
account:conference:receivedCancelInvitationFrom:properties:
account:conference:receivedCounterProposalFrom:properties:
account:conference:receivedInvitationFrom:properties:
account:conference:receivedUpdateFrom:data:
account:connectedDevicesChanged:
account:defaults:blockList:allowList:blockingMode:blockIdleStatus:status:capabilities:serviceLoginStatus:loginStatusMessage:
account:defaultsChanged:
account:devicesChanged:
account:displayNameChanged:
account:groupsChanged:error:
account:handleSubscriptionRequestFrom:withMessage:
account:isActiveChanged:
account:loginChanged:
account:loginStatusChanged:message:reason:properties:
account:nearbyDevicesChanged:
account:postedError:
account:profileChanged:
account:pseudonymsChanged:
account:registrationStatusInfoChanged:
account:relay:handleCancel:fromPerson:
account:relay:handleInitate:fromPerson:
account:relay:handleUpdate:fromPerson:
account:statusChanged:
account:vettedAliasesChanged:
accountAdded:
accountAdded:defaults:service:
accountAssociatedWithHandle:
accountClass
accountController
accountController:accountDisabled:
accountController:accountEnabled:
accountController:accountRemoved:
accountController:accountUpdated:
accountDefaultsChanged:
accountForAccountID:
accountForHandle:
accountForIDSAccountUniqueID:
accountFromIDSAccountWithUniqueID:
accountID
accountInfo
accountInfoToPost
accountInfoWithCompletionHandler:
accountIsVerifiedForMOCAndSafeForCacheDelete
accountNeedsLogin
accountNeedsPassword
accountPartition
accountRegionIsCandidateForHawking:
accountRegionsEligibleForJunkFiltering
accountRegisteredURIs
accountShouldBeAlwaysLoggedIn
accountStatus
accountType
accounts
accountsForLoginID:onService:
accountsForService:
accountsLoadedFromIdentityServices
acquireAssertionToUnsuspendProcess
actionIdentifier
actionIsGroupPhoto
actionType
activateAccount:
activateAccounts:
activateWithCompletionHandler:
active
activeAccounts
activeAccountsAreEligibleForHawking
activeAccountsChanged:forService:
activeAccountsForService:
activeAccountsFromIdentityServices
activeAliases
activeConversations
activeDeviceForHandle:
activeDevicesUpdated
activeFocusModeMatchesConversationWithHandleStrings:
activeHubbleRequestedTransfers
activeModeConfiguration
activeSessions
activity
activitySessions
addAccount:
addAccount:defaults:service:
addAliases:
addAliases:account:
addAttribute:value:range:
addBlock:withTimeout:forKey:description:
addChat:
addChat:firstLoad:store:
addConditionChecks:toCriteria:
addDefaultGatekeeperPropertiesToDirectory:
addDelegate:
addDelegate:queue:
addEntriesFromDictionary:
addErrorToArray:forKey:
addFailedEditPartIndex:
addFailedRetractPartIndex:
addHubbleRequestedTransfer:
addIMDHandleToRegistry:
addIndex:
addListener:
addLocationShareItemToMatchingChats:
addMessage:toChat:
addMessage:toChat:deferSpotlightIndexing:
addMessageWithGUID:toChat:
addMessageWithGUID:toChat:deferSpotlightIndexing:
addMessagesID:
addMissingMessageReadReceipt:
addNewAttachmentsSyncedCount:
addNewChatsSyncedCount:
addNewMessagesSyncedCount:
addNicknameToPendingUpdates:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperation:
addParticipants:
addRegistrationDelegate:queue:
addRetractedPartIndex:
addSyncDebuggingInfoToDictionary:
addSyncError:
addTarget:
addTimer:forMode:
addTransfer:forGUID:
addTransfers:
addUserNotification:listener:completionHandler:
addedObserverForUnexpectedlyLoggedOut
aliasStrings
aliasToCNIDMap
aliasesDidChange:
allBuddies
allChats
allChatsWithIdentifier:style:serviceNames:
allExistingChatsWithIdentifier:style:
allExistingSupportedServiceChatsWithIdentifier:style:
allHandlesForID:
allKeysForObject:
allNicknames
allObjects
allServiceSessions
allServices
allValues
allowHandleIDsForNicknameSharing:onChatGUIDs:
allowHandlesForSharing:onChatGUIDs:
allowList
allowListedHandlesForSharing
allowedAsChild
allowedAutoReplyAudience:
allowsWritingToDisk
alreadyCapturedErrorWithAutoBugCapture
altDSIDForAccount:
alternativeSpeakableMatches
analysisFetchOptions
analyticRecordZone
analyticRecordZoneID
analyticSyncDatesDictionary
analyticZoneRecordID
andPredicateWithSubpredicates:
anyChatExistsOnServerWithActivity:completion:
anyObject
anySessionForServiceName:
appendFormat:
appendString:
applyChangesUsingCKRecord:
archiveChat:
archivedDataWithRootObject:requiringSecureCoding:error:
archivedRecordSyncToken
array
arrayByAddingObjectsFromArray:
arrayByApplyingSelector:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
askHandleIDToShareTheirScreen:isContact:
askToBuyResponseHandler
assetCount
assetDownloadInProgress
assetUUIDsToFileTransfers
assetsFetch
assignAndPersistSortIDForIncomingMessage:onChat:
assignSortIDToIncomingMessage:onChat:
assignSortIDToIncomingMessageWithNoExistingMessagesWithSameReplyToGUID:onChat:
assignTransfer:toAccount:otherPerson:
associatedMessageGUID
associatedMessageGuid
associatedMessageRange
associatedMessageRangeLength
associatedMessageRangeLocation
associatedMessageType
attachmentQuery:chatID:services:finishedWithResult:
attachmentRecordHasAsset:
attachmentRecordZone
attachmentRecordZoneID
attachmentSyncController
attachmentWithGUID:
attachmentsFilteredUsingPredicate:limit:
attachmentsWithGUIDs:
attachmentsWithHandles:onServices:
attachmentsWithRoomNames:onServices:
attribute:atIndex:effectiveRange:
attributedBodyText
attributesAtIndex:effectiveRange:
attributesOfItemAtPath:error:
auditToken
authKitAccountWithAltDSID:
authenticateAccount
authenticateAccount:
autoBugCaptureWithSubType:errorPayload:
autoDonationBehavior
autoDonationBehaviorLastModificationDate
autoLogin
autoLoginAccount:
autoLoginActiveAccountsIfNecessary
autoReconnect
autoReconnectAccount:
autoReconnectWithAccount:
autoReplier:generatedAutoReplyText:forChat:
autoReplier:receivedUrgentRequestForMessages:
autoReplier:sendDeliveredQuietlyReceiptForMessages:forIncomingMessageFromIDSID:inChat:withWillSendToDestinationsHandler:
autoReplier:sendNotifyRecipientCommandForMessages:inChat:
autoReplyMessageWithReply:
automaticDNDStatus
automationCompletionBlock
autorelease
avMode
availabilityStatusTypeIdentifier
avatar
averageTransferRate
baloonBundleId
batchProcessingBlock
batchSize
beginBuddyChanges
beginComingBackOnlineSyncWithActivity:
beginInitialSyncAttemptCount:withActivity:
beginInitialSyncWithActivity:
beginPeriodicSyncWithActivity:
beginPeriodicSyncWithChecks:priority:reason:
beginRecordingMessagesToReplayDatabase:
bestCandidateGroupChatWithFromIdentifier:toIdentifier:displayName:participants:groupID:serviceName:
bizIntent
blackholeChat:
blackholedChatsExist
blackholedChatsExist:
blockList
blockingMode
blocklistGroupId:
body
bodyData
boolForKey:withDefault:
boolValue
broadcastCloudKitState
broadcastCloudKitStateAfterClearingErrors
broadcastCloudKitStateAfterFetchingAccountStatus
broadcastCodeStatusToClients
broadcastHandlesSharingNicknamesDidChange
broadcastNoticesDidChangeForChatGUIDs:
broadcastSyncState
broadcastTransfersWithGUIDs:atLocalPaths:
broadcaster
broadcasterForACConferenceListeners
broadcasterForACConferenceListenersSupportingService:
broadcasterForAVConferenceListeners
broadcasterForAVConferenceListenersSupportingService:
broadcasterForAccountListeners
broadcasterForAllListeners
broadcasterForBlackholeChatListeners
broadcasterForBlackholeChatListenersSupportingService:
broadcasterForChatCountsListeners
broadcasterForChatDatabaseListeners
broadcasterForChatListeners
broadcasterForChatListenersSupportingService:
broadcasterForChatListenersUsingBlackholeRegistry:
broadcasterForChatListenersWithBlackholeStatus:
broadcasterForChatObserverListeners
broadcasterForFileProviderListeners
broadcasterForListenersSupportingService:
broadcasterForNotificationListenersSupportingService:
broadcasterForNotificationsListeners
broadcasterForSentMessageListenersSupportingService:
broadcasterForVCConferenceListeners
broadcasterForVCConferenceListenersSupportingService:
broadcasterOverride
buddyPictures
bundle
bundleIdentifier
cStringUsingEncoding:
cacheDeleteEnabled
cachedAliasToCNIDMap
cachedAvailabilityVerificationTokensForHandleID:
cachedChats
cachedRampState:
cachedSalt
calculateAliasesForDefaults
calculateAndSaveAliasesToDefaults
callStackSymbols
callerIDShouldBeCheckedForRegistration:
callerURI
callerURIForIDSAccount:
canAddCommand:
canHandleNotificationResponse:userNotificationCenter:
canMakeDowngradeRoutingChecks
canMakeExpireStateChecks
canStoreItem:onService:
canStoreMessage:onService:
canWriteFileOfEstimatedSize:refreshCachedValue:
cancelPreviousPerformRequestsWithTarget:
cancelPreviousPerformRequestsWithTarget:selector:object:
cancelRequestID:serviceIdentifier:
cancelVCRequestWithPerson:properties:conference:
cancelVCRequestWithPerson:properties:conference:account:
cancelVCRequestWithPerson:properties:conference:reason:
canonicalFormOfChatRoom:
canonicalFormOfID:
canonicalFormOfID:withIDSensitivity:
canonicalizeChatIdentifier:style:
capabilities
caseInsensitiveCompare:
caseInsensitivityByHandleType
category
changeDetailsForFetchResult:
changeDetailsForObject:
changeGroup:changes:
changeGroup:changes:account:
changeGroups:
changeGroups:account:
changeObservationQueue
changeProperty:ofBuddy:to:
changeRequestForAsset:
changeType
characterAtIndex:
chat
chat:chatPersonCentricID:displayNameUpdated:
chat:chatPersonCentricID:displayNameUpdated:sender:
chat:engramIDUpdated:
chat:isFilteredUpdated:
chat:isRecoveredUpdated:
chat:lastAddressedHandleUpdated:
chat:lastMessageTimeStampOnLoadUpdated:
chat:nicknamesUpdated:
chat:propertiesUpdated:
chat:uncachedAttachmentCountUpdated:
chat:updateDisplayName:
chat:updateIsBlackholed:
chat:updateIsFiltered:
chat:updateIsRecovered:
chat:updateLastAddressHandle:
chat:updateLastAddressedSIMID:
chat:updateProperties:
chat:updated:
chatCacheEnabled
chatForChatIdentifier:style:
chatForChatIdentifier:style:account:
chatForHandle:account:chatIdentifier:guid:lastAddressedHandle:lastAddressedSIMID:isBlackholed:
chatForHandles:account:chatIdentifier:style:groupID:displayName:guid:lastAddressedHandle:lastAddressedSIMID:isBlackholed:
chatForItemWithGUID:
chatForMessageGUID:
chatForMessageGUID:enableVerboseLogging:
chatForMessageIdentifier:
chatForRoom:account:chatIdentifier:guid:
chatGUID
chatGUIDToCountMap
chatGUIDToSpamCheckTimerMap
chatIdentifier
chatLoadedWithChatIdentifier:chats:
chatProperties
chatRecordZone
chatRecordZoneID
chatRecordsWithHandles:serviceName:displayName:groupID:style:
chatRecordsWithIdentifier:
chatRegistry
chatStore
chatSyncController
chatWithCKRecord:
chatWithGUID:
chats
chatsFilteredUsingPredicate:
chatsFilteredUsingPredicate:sortedUsingDescriptors:limit:
chatsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:
chatsForMessage:
chatsForMessageGUID:
chatsGUIDsForMessageWithGUID:
chatsGUIDsForMessageWithIdentifier:
chatsNeedRemerging:groupedChats:
chatsToSendNicknameInfoTo
chatsToUploadToCloudKitWithLimit:
chatsWithGroupID:
chatsWithHandle:onService:
chatsWithHandles:onService:displayName:groupID:style:
chatsWithIdentifier:
chatsWithIdentifier:onService:
chatsWithPinningIdentifier:
chatsWithRoomname:onService:
checkBlackholedChatsExistAfterUpdatingChatWithAdd:
checkCloudkitEnabledStatusAndToggleiCloudSwitchIfNeeded
checkForSpamWithExtensionInChat:forMessageBody:sender:withCompletion:
checkResourceIsReachableAndReturnError:
checkSensitivePhotos
checkiCloudQuota:
ckChatSyncControllerNeedsSync
ckRecordIDFromExistingMetadata
ckStatisticCalculations
ckUtilities
class
cleanUnformattedPhoneNumber:countryCode:
cleanUpAsset:
cleanUpAssetsOnDiskForRecord:
cleanUpNicknameForID:
cleanseAttachments
cleanupAttachments
clear
clearAllTransfers
clearAnalyticDefaultsAndLocalSyncState
clearCKRelatedDefaults
clearChatZoneSyncToken
clearConnectedToPowerWifiOver20Hours
clearDataFromCloudKit
clearHistoryForIDs:style:onServices:beforeGUID:afterGUID:chatID:queryID:
clearLocalCloudKitSyncState
clearLocalProperties
clearLocalSyncState
clearLocalSyncState:
clearMessagesTombStoneTable
clearOneTimeImportAccounts
clearPendingDeleteTable
clearPendingNicknameForHandleID:
clearPendingNicknameUpdatesForHandleIDs:
clearPropertiesOfBuddy:
clearRateLimiter
clearRecoverableMessageTombStones
closeSessionChat:style:
closeSessionChatID:identifier:style:
closeSessionChatID:identifier:style:account:
cloudKitChatID
cloudKitDebugDescription
cloudKitRecordChangeTag
cloudKitRecordID
cloudKitServerChangeTokenBlob
cloudKitSyncDownloadAssetsOnly
cloudKitSyncState
cloudKitSyncingEnabled
cmmAssetOffset
cmmState
code
codeInvalidationTimer
collaborationNoticesDidChangeForChatGUIDs:
collectLogsIfNeeded
commSafetySensitive
commSafetyUIEnabled
commentThreshold
compare:
compareBySequenceNumberAndDateDescending:
compareIDs:
compareMessageToOtherMessagesWithSameReplyToGUIDAndAssignSortID:existingMessagesWithSameReplyToGUID:
completeTransferForAssetUUID:
completionBlocksForAssetFetchOperations
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
componentsWithURL:resolvingAgainstBaseURL:
compressedProtobufDataForGroupActionItem
compressedProtobufDataForGroupTitleChangeItem
compressedProtobufDataForLocationShareStatusChangeItem
compressedProtobufDataForMessage
compressedProtobufDataForMessageActionItem
compressedProtobufDataForMessageP2
compressedProtobufDataForMessageP3
compressedProtobufDataForParticipantChangeItem
compressedProtobufDataForUpdateT1:
compressedProtobufDataForUpdateT2:
compressedProtobufDataWithPadding:
conference:account:notifyInvitationCancelledFromPerson:
configurationsByRecordZoneID
conformsToProtocol:
connectedAccounts
connectedAccountsForService:
connectedToPowerAndWifiForOver20Hours
connectingAccounts
connectingAccountsForService:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
connectionMonitorDidUpdate:
consumeCodeWithGuid:
consumeCodeWithMessageGUID:
consumedSessionPayloads
contactsAvatarRecipeData
containsIndex:
containsMessageID:completion:
containsObjectIdenticalTo:
containsRichLink
contentURL
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
contextStamp
conversationManager
conversationManager:activeRemoteParticipantsChangedForConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:fromOldConversation:
conversationManager:activitySessionsChangedForConversation:
conversationManager:activitySessionsChangedForConversation:fromOldConversation:
conversationManager:addedActiveConversation:
conversationManager:avModeChangedForConversation:
conversationManager:avModeChangedForConversation:fromOldConversation:
conversationManager:changedActivityAuthorizationForBundleIdentifier:
conversationManager:conversation:addedMembersLocally:
conversationManager:conversation:buzzedMember:
conversationManager:conversation:didChangeSceneAssociationForActivitySession:
conversationManager:conversation:didChangeStateForActivitySession:
conversationManager:conversation:launchStateChanged:forActivitySession:
conversationManager:conversation:participant:addedNotice:
conversationManager:conversation:receivedActivitySessionEvent:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
conversationManager:conversation:requestedScreenShareForParticipant:
conversationManager:conversation:screenSharingChangedForParticipant:
conversationManager:conversation:updatedMessagesGroupPhoto:
conversationManager:conversationUpdatedMessagesGroupName:
conversationManager:conversationUpdatedMessagesGroupName:fromOldConversation:
conversationManager:conversationUpdatedMessagesGroupUUID:
conversationManager:didChangeActivatedLinks:
conversationManager:handoffEligibilityChangedForConversation:
conversationManager:handoffEligibilityChangedToConversation:fromPreviousConversation:
conversationManager:ignoreLMIRequestsChangedForConversation:
conversationManager:kickedMembersChangedForConversation:
conversationManager:kickedMembersChangedForConversation:fromOldConversation:
conversationManager:letMeInRequestStateChangedForConversation:
conversationManager:letMeInRequestStateChangedForConversation:fromOldConversation:
conversationManager:linkChangedForConversation:
conversationManager:linkChangedForConversation:fromOldConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:fromOldConversation:
conversationManager:localVideoToggledForConversation:
conversationManager:localVideoToggledForConversation:fromOldConversation:
conversationManager:migratingFromConversation:toConversation:
conversationManager:oneToOneModeChangedForConversation:
conversationManager:oneToOneModeChangedForConversation:fromOldConversation:
conversationManager:otherInvitedHandlesChangedForConversation:
conversationManager:otherInvitedHandlesChangedForConversation:fromOldConversation:
conversationManager:pendingMembersChangedForConversation:
conversationManager:pendingMembersChangedForConversation:fromOldConversation:
conversationManager:rejectedMembersChangedForConversation:
conversationManager:rejectedMembersChangedForConversation:fromOldConversation:
conversationManager:remoteMembersChangedForConversation:
conversationManager:remoteMembersChangedForConversation:fromOldConversation:
conversationManager:remoteScreenShareAttributesChanged:isLocallySharing:
conversationManager:remoteScreenShareEndedWithReason:
conversationManager:removedActiveConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:fromOldConversation:
conversationManager:screenSharingAvailableChanged:
conversationManager:sharePlayAvailableChanged:
conversationManager:stateChangedForConversation:
conversationManager:stateChangedForConversation:fromOldConversation:
conversationManager:systemActivitySessionsChangedForConversation:
conversationManager:systemActivitySessionsChangedForConversation:fromOldConversation:
conversationManager:trackedPendingMember:forConversationLink:
conversationManager:updatedIncomingPendingConversations:
conversationUpdateMessagesGroupPhoto:
conversationsChangedForConversationManager:
copy
copyCKRecordRepresentationWithZoneID:salt:
copyDictionaryRepresentation
copyDictionaryRepresentation:
copyEncodedSystemFields
copyFileTransferDictionaryRepresentationsFromCenter:
copyItemAtPath:toPath:error:
copyItemAtURL:toURL:error:
copyMessagesThatNeedToBeDeletedInCloudKitWithLimit:
copyNextBatchWithSize:iterationContext:
copyOfMessagesWithReplyToGUID:
copyRecordIDsAndGUIDsPendingCloudKitDelete
coreSpotlightDeleteAttachmentGUIDs:
count
countByEnumeratingWithState:objects:count:
countRecordOnRead:didSucceed:
countryCode
createAnalyticZoneIfNeededWithCompletionBlock:
createAndPersistLivePhotoBundleIfNecessary
createAttachmentZone
createAttachmentZoneIfNeededWithCompletionBlock:
createCKRecordForUpdateT1:zoneID:salt:
createCKRecordForUpdateT2:zoneID:salt:
createCKRecordforRecoverableMessageMetadata:zoneID:recordNameToPartIndexAndRowID:
createChatZone
createChatZoneIfNeededWithCompletionBlock:
createDeDupeSaltZoneIfNeededWithCompletionBlock:
createDictionaryForNotDeletingAnyAttachments:urgency:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDiscontinuedAccount
createEngramGroupOnMessageSend
createFileAtPath:contents:attributes:
createItemForPHAssetWithUUID:parentChatItemGUID:chatGUID:
createItemWithCKRecord:
createMessageZoneIfNeededWithCompletionBlock:
createOTCFromMessageBody:sender:guid:
createRecoverableMessageZoneIfNeededWithCompletionBlock:
createSessionIfNecessary
createSubscriptionIfNeededOnDeDupeZoneForSubscription:recordType:completionBlock:
createTodaysStatisticDictionaryIfNeeded
createUniqueDirectoryWithName:atPath:ofType:
createUpdateT1Info:
createUpdateZoneIfNeededWithCompletionBlock:
createdDate
curatedAssetIdentifiers
curationProperties
currentBytes
currentConnection
currentContext
currentHandler
currentInMemorySyncStatistics
currentNumberOfMessages
currentPersonalNicknameWithRecordID:decryptionKey:completionBlock:
currentPersonalNicknamewithCompletionBlock:
currentThread
currentToneIdentifierForAlertType:
currentlyExecutingSyncTask
data
dataForKey:error:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
dataRepresentation
dataUsingEncoding:
dataWithBytes:length:
dataWithJSONObject:options:error:
database
databaseChatSpamUpdated:
databaseFull
databaseNoLongerFull
databaseUpdated:
datasUpToLimit:deleteContext:error:
date
dateByAddingTimeInterval:
dateBySettingHour:minute:second:ofDate:options:
dateEdited
dateLastCallEnded
dateLastUpdatedForURL:
dateSent
dateViewed
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
deDupeSaltRecordZone
deDupeSaltZoneID
deactivateAccount:
deactivateAccount:force:
deactivateAccounts:
deactivateAccounts:force:
debugDescription
debugUpdateGroupParticipantversion:chatIdentifier:
declineInvitationToChat:style:
declineInvitationToChatID:identifier:style:
declineInvitationToChatID:identifier:style:account:
decodeObjectOfClasses:forKey:
decrementPendingReadReceiptFromStorageCount
defaultAccountSettings
defaultCenter
defaultChatSuffix
defaultHFSFileManager
defaultManager
defaultThreshold
defaultWorkspace
defaults
defaultsChanged:forService:
deferredSave
delayedSaveSettings
delayedSynchronize
delegate
deleteAllCompletedTasks
deleteAllNoticesWithCollaborationIdentifier:
deleteAllPersonalNicknames:withCompletion:
deleteAllPersonalNicknamesWithCompletion:
deleteAllZones
deleteAnalyticZone
deleteAttachmentCKOperationUsingRecordIDstoDelete:
deleteAttachmentDataForTransfer:
deleteAttachmentSyncToken
deleteAttachmentWithGUID:
deleteAttachmentZone
deleteAttachmentsAndReturnBytesDeleted:urgency:
deleteAttachmentsDirectWithPredicate:
deleteAttachmentsForMessage:
deleteAttachmentsForTransfer:
deleteAttachmentsWithGUIDs:
deleteBatchWithContext:error:
deleteChat:
deleteChatCKOperationUsingRecordIDstoDelete:
deleteChatSyncToken
deleteChatZone
deleteChatsForCommandDictionary:
deleteCommandDictionaryWithIncomingDictionary:inferredRecoverableDeleteForLegacyCommandsWithDate:
deleteContext
deleteDatabase
deleteDeDupeRecordZone
deleteDeDupeSaltZone
deleteExitRecord
deleteFileTransferWithGUID:
deleteInteractionsWithChatGUIDs:
deleteInteractionsWithMessageGUIDs:
deleteMessageCKOperationUsingRecordIDstoDelete:
deleteMessageFromSpotlightWithGUID:
deleteMessageGUIDs:
deleteMessageGUIDs:inChat:
deleteMessagePartsForCommandDictionary:
deleteMessageSyncToken
deleteMessageZone
deleteMessagesForCommandDictionary:
deleteMessagesFromTombStoneTableWithRecordIDs:
deleteMessagesWithChatIdentifiers:style:onServices:
deleteMessagesWithChatIdentifiers:style:onServices:completion:
deleteMessagesWithReplaceMessageID:fromHandle:onService:
deleteMessagesZone
deleteNotice:
deleteNoticeWithGUIDString:
deleteNoticesForURLs:
deleteObject:
deleteRecoverableMessageCKOperationUsingRecordIDstoDelete:
deleteRecoverableMessageZone
deleteReplayDB
deleteReplayDBIfNotUnderFirstUnlock
deleteSalt
deleteSearchableItemsWithDomainIdentifiers:bundleID:withCompletion:
deleteTransferForGUID:
deleteUpdateSyncToken
deleteUpdateZone
deletedZones
denyHandleIDsForNicknameSharing:
denyHandlesForSharing:
denyListedHandlesForSharing
derivedQualityOfService
describeErrors
describeRecordCounts
description
desiredKeys
destinationCallerID
detectSpam:chatGUID:
deviceActiveString
deviceCharging
deviceConditions
deviceConditionsAllowPeriodicSync
deviceConditionsToCheck
deviceForFromID:
deviceIndependentID
deviceInformationString
deviceIsLockedDown
deviceIsPhoneOrWatch
deviceLowOnDiskSpace
deviceOnWifi
deviceSignedOutOfiMessage
deviceSupport
deviceSupportsSubscriptionValidationTokens
deviceType
dictionary
dictionaryRepresentation
dictionaryRepresentationIncludingLastMessage
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didAttemptToDisableAllDevicesResult:
didAttemptToDisableiCloudBackups:error:
didAttemptToSetEnabledTo:result:
didChangeMemberStatus:forHandle:forChat:style:
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:destinationCallerID:
didChangeMemberStatus:forHandle:unformattedNumber:countryCode:forChat:style:
didFetchCloudKitSyncDebuggingInfo:
didFetchRampState:
didFetchSyncStateStats:
didJoinChat:style:
didJoinChat:style:displayName:groupID:handleInfo:
didJoinChat:style:displayName:groupID:handleInfo:account:isBlackholed:
didJoinChat:style:displayName:groupID:handleInfo:category:spamExtensionName:
didJoinChat:style:displayName:groupID:lastAddressedHandle:handleInfo:
didJoinChat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:
didJoinChat:style:handleInfo:
didJoinChat:style:handleInfo:account:
didJoinReadOnlyChat:style:displayName:groupID:handleInfo:category:spamExtensionName:
didKeyRollPendingCheck
didLeaveChat:style:
didLeaveChat:style:account:
didNotifyRecipient
didPerformAdditionalStorageRequiredCheckWithSuccess:additionalStorageRequired:forAccountId:error:
didReceiveBalloonPayload:forChat:style:messageGUID:account:
didReceiveDisplayNameChange:fromID:toIdentifier:forChat:style:account:
didReceiveDisplayNameChange:fromID:toIdentifier:forChat:style:account:sender:
didReceiveError:forMessageID:forceError:
didReceiveError:forMessageID:forceError:account:
didReceiveErrorMessage:forChat:style:
didReceiveEventWithName:userInfo:
didReceiveInvitation:forChat:style:
didReceiveMessage:forChat:style:account:fromIDSID:
didReceiveMessage:forChat:style:fromIDSID:
didReceiveMessageDeliveryReceiptForMessageID:date:
didReceiveMessageDeliveryReceiptForMessageID:date:account:
didReceiveMessageEditingSendFailure:forMessageGUID:partIndex:editType:
didReceiveMessageEditingUnsupportedHandleIDs:forMessageGUID:partIndex:previousMessage:backwardCompatibilityMessageGUID:
didReceiveMessagePlayedForMessageID:date:completionBlock:
didReceiveMessagePlayedReceiptForMessageID:date:completionBlock:
didReceiveMessageReadForMessageID:date:completionBlock:
didReceiveMessageReadReceiptForMessageID:date:completionBlock:
didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:account:completionBlock:
didReceiveMessages:forChat:style:account:fromIDSID:
didReceiveReplaceMessageID:forChat:style:
didSendBalloonPayload:forChat:style:messageGUID:account:completionBlock:
didSendDeliveredQuietlyReceiptForMessageID:
didSendDeliveredQuietlyReceiptForMessageID:account:
didSendMessage:forChat:style:
didSendMessage:forChat:style:account:forceDate:
didSendMessage:forChat:style:account:forceDate:itemIsComingFromStorage:
didSendMessage:forChat:style:forceDate:
didSendMessageEditForMessageGUID:
didSendMessagePlayedReceiptForMessageID:
didSendMessagePlayedReceiptForMessageID:account:
didSendMessageReadReceiptForMessageID:
didSendMessageReadReceiptForMessageID:account:
didSendMessageSavedReceiptForMessageID:
didSendMessageSavedReceiptForMessageID:account:
didSendNotice:
didSendNotifyRecipientCommandForMessageID:
didSendNotifyRecipientCommandForMessageID:account:
didSendSyndicationActionItem:forChat:
didSendWithNotice:
didUpdateChatStatus:chat:style:account:
didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:
didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:account:category:spamExtensionName:
didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:account:isBlackholed:
didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:handleInfo:
didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:
didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:category:spamExtensionName:isBlackholed:
didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:isBlackholed:
didUpdateChatStatus:chat:style:handleInfo:
differenceFromDate:
direction
disableAllDevicesWithCompletion:
disableServiceSession:
disabled
disablingDevices
disallowDeactivation
disallowReconnection
discontinued
dismissNotice:
displayName
displayPinCodeForAccount:pinCode:deviceName:deviceType:phoneNumber:
doesNotRecognizeSelector:
domain
doneLoadingAfterMerge
doubleValue
downgradingFromHSA2AndDisablingMOC
downloadAssetsForTransferGUIDs
downloadAttachmentAssets
downloadAttachmentAssetsForChatIDs:services:style:completion:
downloadAttachmentAssetsWithActivity:restoringAttachments:
downloadAttachmentAssetsWithActivity:restoringAttachments:completion:
downloadFileTransferWithLocalURL:
downloadHighQualityVariantOfFileTransferWithGUID:
downloadPurgedAttachmentsForIDs:style:onServices:chatID:
downloadStickerPackWithGUID:isIncomingMessage:ignoreCache:
downloadStickerWithGUID:
downloadedPurgedAssetBatchForChatIDs:completedTransferGUIDs:
dsid
dtService
dummyMethod
dumpLogsToFolderAtPath:withFileName:lastHours:predicate:includeCKDebug:withCompletion:
dumpMOCLoggingMetaData
eagerUploadCancel:
earlierDate:
editedPartIndexes
eligibleForTruthZone
eligibleForTruthZoneWithCompletion:
emitPreviewGenerationBeginFromUTI:
emitPreviewGenerationEndFromUTI:
enableAccount:
enableAttachmentMetricCollection
enableMOCIfNeeded
enableNotifications
encodeSystemFieldsWithCoder:
encodeWithCoder:
encodedData
encounteredIncompatibleMessage
encryptedValuesByKey
encryptionValidationToken
endRecordingReplayDatabase
endTransfer:
enforceAccountsMatchForMocAndShowDialogIfNeeded
engramID
engroupCreationDate
engroupParticipantsUpdatedForChat:
enqueReplayMessageCallback:
enqueueBlock:
enqueueWorkBlock:
enrollDeviceForSMSRelay:account:
enrollDeviceInSMSRelay:
enrollSelfDeviceForSMSRelay:
enrollSelfDeviceInSMSRelay
enumerateAttachmentGUIDsWithBlock:
enumerateAttribute:inRange:options:usingBlock:
enumerateBatchedChatsFilteredUsingPredicate:batchSize:block:
enumerateBatchedChatsFilteredUsingPredicate:block:
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
enumeratorAtPath:
equalID:andID:
error
errorAnalyzer
errorArrayForKey:
errorCode
errorDescription
errorFetchingExitDate
errorIndicateDeviceDoesNotHaveKeysToSync:
errorIndicatesDeviceConditionsDontAllowSync:
errorIndicatesQuotaExceeded:
errorIndicatesUserDeletedZone:
errorIndicatesZoneNotCreated:
errorWithDomain:code:userInfo:
etag
evalToggleiCloudSettingsSwitch
evaluateAccountStateForFeatureEligibility
eventData
eventStreamHandler:didReceiveEventWithName:userInfo:
eventType
exceptionWithName:reason:userInfo:
executablePath
existingChatForID:account:
existingChatForIDs:account:displayName:groupID:style:
existingChatForIDs:account:style:
existingChatForMessageGUID:
existingChatForRoom:account:
existingChatWithEngramID:
existingChatWithGUID:
existingChatWithIdentifier:account:
existingChatsFilteredUsingPredicate:
existingChatsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:limit:
existingChatsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:
existingChatsForGroupID:
existingChatsForIDs:displayName:groupID:style:
existingChatsForIDs:onService:displayName:groupID:style:
existingChatsForIDs:onService:style:
existingChatsForIDs:style:
existingChatsWithGroupID:
existingChatsWithPinningIdentifier:
existingGroupChatsContainingHandles:
existingMessageSimilarToMessage:skipServices:skipGUIDs:withinTimeInterval:participants:
existingOneOnOneChatsWithIdentifiers:
existingSMSChatForID:
existingSMSChatForID:withChatStyle:
existingServiceSessionForService:
existingiMessageChatForID:
existingiMessageChatForID:withChatStyle:
existsAtLocalPath
exitConfiguration
exitDate
exitManager
exitRecordDate
exitRecordDateWithCompletion:
exitRecordID
expireState
exportRequestForAsset:error:
exportWithOptions:completionHandler:
exposureNotificationEnabled
expressiveSendId
expressiveSendStyleID
extractRecordIDsDeletedFromCKPartialError:
extractRecordIDsNotFoundFromCKPartialError:
extractServerRecordFromCKServerErrorRecordChanged:
failTransfer:error:
failTransfer:reason:
failTransferPreviewGeneration:
failTransfersOnPreviewGenerationFailure
familyInviteResponseHandler
featureEnabled
fetchAccountStatusAndUpdateMiCSwitchEligibility
fetchAccountStatusAndUpdateMiCSwitchEligibilityIfNeededOnImagentLaunch
fetchArchivedRecordsOperationWithSyncToken:zoneID:activity:
fetchAssetsInAssetCollection:options:
fetchAssetsWithOptions:
fetchAttachmentDataForTransfers:highQuality:perTransferProgress:activity:completion:
fetchAttachmentRecordsFilteredUsingPredicate:limit:completionHandler:
fetchAttachmentZoneChangesCKOperationUsingToken:zoneID:resultsLimit:desiredKeys:operationGroupName:activity:
fetchAttachmentZoneRecords:desiredKeys:operationGroupName:activity:
fetchChatCKOperationUsingRecordIDs:
fetchChatRecordsFilteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:
fetchChatRecordsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:completionHandler:
fetchChatRecordsWithPinningIdentifier:completionHandler:
fetchChatZoneChangesCKOperationUsingToken:zone:resultsLimit:activity:
fetchChatZoneChangesCKOperationUsingToken:zone:resultsLimit:groupName:activity:
fetchChatZoneToCheckManateeStatus:
fetchCloudKitAccountStatusAndUpdateEligibilityAndNeedsRepairStatusWithCompletion:
fetchCloudKitAccountStatusWithCompletion:
fetchCloudKitSyncStateDebuggingInfo:
fetchCollaborationNoticesForChatGUID:reply:
fetchCommonCapabilities:fromChatWithGUID:reply:
fetchCuratedAssetsInAssetCollection:options:
fetchCurrentDeviceIDWithCompletionHandler:
fetchCurrentUserForNicknameContainer:
fetchEarliestMessageDateForChatsWithGUIDs:completion:
fetchHandleSharingState
fetchLatestRampState
fetchLatestRampStateFromCK:
fetchLatestRecordKeyFromCKAndCreateIfKeyDoesNotExistWithCompletion:
fetchLatestRecordKeyFromCKAndCreateIfKeyDoesNotExistWithCompletion:forceFetch:
fetchMessageRecordsForChatRecordWithGUID:filteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:
fetchMessageZoneChangesCKOperationUsingToken:zoneID:resultsLimit:operationGroupName:activity:
fetchMomentShareFromShareURL:forMessage:completionHandler:
fetchMomentShareFromShareURL:options:completionHandler:
fetchNicknames
fetchOperationFactory:token:batchSize:activity:
fetchOptions
fetchPasswordForProfileID:username:service:outRequestID:completionBlock:
fetchPersonalNickname
fetchRecordZoneChangesCompletionBlock
fetchRecordsCompletionBlock
fetchResourcesToShareForAsset:requestOptions:error:
fetchResultAfterChanges
fetchSMSFilterParamForCategory:subCategory:
fetchSubscriptionWithID:completionHandler:
fetchSyncStateStatistics
fetchType
fetchUserRecordIDWithCompletionHandler:
fetchedChatsDuringLastSync
fetchedExitDateOnLaunch
fetchiCloudAccountPersonID:
fileEligibleForCacheDelete:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHFSCreatorCode
fileHFSFlags
filePath
fileSize
fileSystemRepresentation
fileTransfer:acceptedWithPath:autoRename:overwrite:options:
fileTransfer:createdWithProperties:
fileTransfer:explicitDownloadSucceededWithPath:livePhotoBundlePath:
fileTransfer:highQualityDownloadSucceededWithPath:
fileTransfer:updatedWithCurrentBytes:totalBytes:averageTransferRate:
fileTransfer:updatedWithProperties:
fileTransferCenter
fileTransferDownloadFailedWithLocalURL:error:
fileTransferDownloadedSucceededWithLocalURL:
fileTransferErrorWithReason:description:
fileTransferExplicitDownloadFailed:suggestedRetryGUID:error:
fileTransferGUIDs
fileTransferHighQualityDownloadFailed:
fileTransferRemoved:
fileTransferStopped:
fileTransferWithAttachmentRecordRef:
fileTransfers:createdWithLocalPaths:
fileTransfersRecoverablyDeleted:
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
fileURLWithPath:
fileURLWithPath:isDirectory:
filename
filterediMessageChatsExist
finalSyncStateFor:
findDuplicateChats:
findDuplicateUnnamedGroups:
finishEncoding
finishedDownloadingPurgedAssetsForChatIDs:
fireDate
firstObject
fixIMTranscoderAgentPriorityInversion
flags
focusStateDidChange
forceAutoBugCaptureWithSubType:errorPayload:
forceReloadChatRegistryWithQueryID:
forcedReloadingChatRegistryWithQueryID:
formUnionWithCharacterSet:
forwardInvocation:
frequentRepliesForForChatIdentifiers:onServices:limit:
frequentRepliesQuery:chatID:services:finishedWithResult:limit:
gelatoService
generateNewGroupID
generatePreview:previewURL:constraints:balloonBundleID:completionBlock:blockUntilReply:
generatePreviewForTransfer:attachmentPath:balloonBundleID:isFromMe:completionBlock:
generateUnusedChatIdentifierForGroupChatWithAccount:
generateUnusedChatIdentifierForGroupChatWithServiceName:chatWithChatIdentifierExists:
generatedRoomNameForGroupChat
getAnalyticSyncDatesObjectForKey:
getBoolFromDomain:forKey:
getBoolFromDomain:forKey:defaultValue:
getBytes:length:
getCMMAssetOffset
getCMMState
getNicknameWithRecordID:decryptionKey:completionBlock:
getNumberOfTimesRespondedToThread
getValueFromDomain:forKey:
goConnectedWithLocalSocketAddress:remoteSocketAddress:
goDisconnected
group
groupActionProtobufForCompressedData:
groupChatsBasedOnIdentity:
groupChatsBasedOnIdentityUsingCacheIfApplicable:
groupPhotoGuid
groupPhotoUpdatedForChatIdentifier:style:account:userInfo:
groupPhotoUploadFailureCount
groupTitle
groupTitleChangeProtobufForCompressedData:
groupUUID
groups
guid
guidByStrippingAuxPrefix:
guidForNewIncomingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
guidForNewOutgoingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
guidForNewOutgoingTransferWithLocalURL:
guidString
guidToTransferMap
guidsForStoredAttachmentPayloadData:messageGUID:
guidsForStoredAttachmentPayloadDataURLs:messageGUID:
handle
handleAKUserInfoChangedNotification:
handleDenyList
handleFailureInMethod:object:file:lineNumber:description:
handleIDInsensitivityIsCarrierBased
handleIncomingNoticeProtobuf:service:account:fromID:context:
handleInfo
handleMessageUpdate:
handleMessageUpdateConflictType:serverRecord:localRowID:
handleNicknameUpdatesFromPeerDevice:fromPeerDevice:
handleNotificationForSubscriptionID:
handleNotificationResponse:userNotificationCenter:completionHandler:
handleOperation:
handleSharingKVStore
handledNicknames
handledNicknamesKVStore
handlesSharingNicknamesDidChange
hasActivePhoneAccount
hasCapability:
hasDumpedLogsForNoExisitingGroup
hasHadSuccessfulQuery
hasImage
hasPreferredAssetOverRecord:
hasPrefix:
hasReceivedReadReceipt
hasRecentlyMessaged:
hasStoredMessageWithGUID:
hasSuffix:
hash
haveDeferredUpdateRequest
heldDeletionContext
hideAttachment
historicalMessageGUIDsDeleted:chatGUIDs:queryID:
historyForMessagePart:
historyQuery:chatID:services:finishedWithResult:limit:
historyToken
holdBuddyUpdates
holdBuddyUpdatesAccount:
hour
iCloudAccountMatchesiMessageAccount
iMessageStorageController
idSensitivity
idToHandlesMap
identifier
identifierToZoneMap
idsAccount
idsAccountForFromURI:toURI:
idsAccountForURI:IDSServiceName:
idsAccounts
idsDestination
idsTransportLogNeedsSync
ignorePendingNicknameForHandleID:
ignorePendingNicknameUpdatesForHandleIDs:
imDefaults
im_AKSecurityLevelKey
im_enqueuSMSBlock:withTimeout:description:
im_enqueuiMessageBlock:withTimeout:description:
im_lastPathComponent
im_livePhotoVideoPath
im_registeredURIs
im_stripCategoryLabel
imageFilePath
imdAccountForIDSAccount:
imdAccountLoginFromIDSAccountWithType:login:
impl
importMessage:isRead:
inExitState
inMemorySyncStatistics
incompatibleMessageDeleteDetected:
incrementCoreDuetSyncAttempts
incrementPendingReadReceiptFromStorageCount
incrementSyncedAttachmentCount:incrementTotalAttachmentCount:
incrementSyncedChatCount:incrementTotalChatCount:
incrementSyncedMessageCount:incrementTotalMessageCount:
indexOfObject:
indexOfObject:matchingComparison:
init
initForReadingFromData:error:
initMarkUnreadWithIDSHandle:
initRecordZoneManager:databaseManager:
initRequiringSecureCoding:
initWithAccount:service:
initWithAccountController:
initWithAccountID:defaults:service:
initWithAccountID:defaults:service:idsAccount:
initWithAccountID:service:guid:groupID:chatIdentifier:participants:roomName:displayName:lastAddressedLocalHandle:lastAddressedSIMID:properties:state:style:isFiltered:hasHadSuccessfulQuery:engramID:serverChangeToken:cloudKitSyncState:originalGroupID:lastReadMessageTimeStamp:lastMessageTimeStampOnLoad:cloudKitRecordID:isBlackholed:autoDonationBehavior:autoDonationBehaviorLastModificationDate:isRecovered:
initWithArray:
initWithAssociatedChatGUID:
initWithBroadcaster:otcUtilities:
initWithBundle:isMainService:
initWithBundle:subServiceName:
initWithBundleIdentifier:
initWithCKRecord:writeAssetToDisk:
initWithCKSyncController:
initWithCalendarIdentifier:
initWithCapacity:
initWithChatRegistry:vocabulary:
initWithCoder:
initWithContainerID:options:
initWithContainerIdentifier:environment:
initWithContentsOfFile:
initWithContentsOfURL:
initWithContext:
initWithData:
initWithData:encoding:
initWithDictionary:
initWithDictionary:uniqueID:serviceName:
initWithDictionaryRepresentation:
initWithDomain:code:userInfo:
initWithEntity:insertIntoManagedObjectContext:
initWithEntityName:
initWithEnvironmentName:namedDelegatePort:queue:
initWithEventStreamName:
initWithFilePath:
initWithFileURL:
initWithFormat:arguments:
initWithGUID:
initWithGUIDString:sender:metadata:date:dateViewed:
initWithHost:port:delegate:
initWithID:unformattedID:countryCode:
initWithID:unformattedID:countryCode:personCentricID:
initWithIDSDestination:latestDate:latestReadReceiptDate:hasReceivedReadReceipt:
initWithIdentifier:
initWithImageName:imageFilePath:
initWithIndex:
initWithIndexesInRange:
initWithInputURL:outputURL:identifier:operation:completionBlock:queue:
initWithKey:ascending:
initWithKeyValueCollection:
initWithKeyValueStorage:
initWithListenerID:auditToken:capabilities:replyProxy:
initWithLongLong:
initWithMachServiceName:
initWithMessageBody:messageGUID:
initWithMessageHistorySyncTaskFactory:
initWithMessageStore:
initWithMessageStore:defaultsStore:
initWithMessagesPTaskStore:
initWithName:managedObjectModel:
initWithObject:title:queue:
initWithObjects:
initWithObjectsAndKeys:
initWithPath:storeName:dataProtectionClass:
initWithPhotoLibraryURL:
initWithProtobufData:type:isResponse:
initWithProtocol:forwardingHandler:
initWithProxyProtocol:proxyHost:proxyPort:delegate:
initWithRecordIDs:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRecordZoneIDs:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithRecordsToSave:recordIDsToDelete:
initWithRemoteHost:delegate:
initWithReplayController:accountController:
initWithSender:time:body:attributes:fileTransferGUIDs:flags:error:guid:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:threadIdentifier:
initWithSender:time:body:attributes:fileTransferGUIDs:flags:error:guid:threadIdentifier:
initWithSender:time:guid:type:
initWithSenderInfo:time:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:type:
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:bizIntent:locale:errorType:threadIdentifier:syndicationRanges:syncedSyndicationRanges:partCount:dateEdited:
initWithSerializedError_im:
initWithServerBag:lockDownmanager:deviceSupport:imDefaults:
initWithService:
initWithServiceSession:
initWithSet:
initWithStatusTypeIdentifier:
initWithStorageController:
initWithStoreDictionary:
initWithString:attributes:
initWithSubscriptionValidationToken:encryptionValidationToken:
initWithSyncTokenStore:
initWithSyndicationAction:
initWithSyndicationType:messagePartRange:syndicationStartDate:syndicationStatus:assetDescriptor:
initWithTargets:
initWithTimeInterval:name:shouldWake:target:selector:userInfo:
initWithTimeIntervalSince1970:
initWithTimeIntervalSinceNow:
initWithURL:
initWithURL:message:inChat:
initWithUUIDString:
initWithUnsignedInteger:
initWithZoneID:subscriptionID:
initWithZoneName:
initWithZoneName:ownerName:
initialMessageSyncController
initialSyncAllowed
initialSyncAttempts
initialize
initiatePeriodicSync
initiateQuickSwitch
initiateSync
initiator
instancesRespondToSelector:
intValue
integerForKey:withDefault:
integerValue
internalName
internalQueue
interpretMessageItem:inChat:
intersectSet:
invalidate
invalidatePersonCentricGroupedChatsCache
inviteHandleIDToShareMyScreen:isContact:
invitePerson:withMessage:toChat:style:
invitePersonInfo:withMessage:toChat:style:
invitePersonInfo:withMessage:toChatID:identifier:style:
invitePersonInfoToiMessageChat:withMessage:toChat:style:
invitePersonInfoToiMessageChat:withMessage:toChatID:identifier:style:
invitePersonInfoToiMessageChat:withMessage:toChatID:identifier:style:account:
invokeWithTarget:
isAVLessSharePlayEnabled
isAccountActive:
isActive
isArchived
isAssociatedMessage
isAssociatedMessageItem
isAttachmentReferencedByMessage:
isAudioMessage
isAutoDonatingMessages
isAutoReply
isAuxImage
isAuxVideo
isAwaitingStorageTimer
isBeingRetried
isBeingSetup
isBetterDefinedThan:
isBlackholed
isBusiness
isBusinessChat
isCKPartialError:
isCarrierReportJunkEnabled
isCompatibleWithMiC
isContact
isDataConnectionActive
isDateInToday:
isDateInYesterday:
isDefaultPairedDevice
isDelivered
isDeviceCharging
isDeviceLowOnDiskSpace
isDeviceOnWifi
isDisabled
isDisablingDevices
isDiscontinued
isDoingDeleteRecoverySync
isDownloadingQuery:chatID:services:finishedWithResult:
isEligibleForTruthZone
isEnabledForDataclass:
isEqual:
isEqualToAvailabilityVerificationTokens:
isEqualToData:
isEqualToDate:
isEqualToDictionary:
isEqualToIgnoringCase:
isEqualToNumber:
isEqualToSet:
isEqualToString:
isEquivalentToHandle:
isExpanseEnabled
isExpirable
isFeatureEnabled
isFiltered
isFinished
isFirstSyncWithActivity:completion:
isFromMe
isFromMomentShare
isFullyRetracted
isGelatoNoticesEnabled
isGroupChat
isIDSBased
isIgnorableBackwardCompatibilityMessage:inChat:
isImmediatelyReachable
isInAppleStoreDemoMode
isInCloudKitDemoMode
isInExitState
isIncoming
isInternalInstall
isInternationalSpamFilteringEnabled
isKeyRollPending
isKindOfClass:
isLegacy
isLightweightMember
isLoaded
isLoading
isLocalCachedSaltPresent
isLocalUserAvailableForContactInActiveMode:error:
isLocallyCreated
isLocatingMessage
isLocation
isMainThread
isManaged
isMemberOfClass:
isNetworkUp
isNewerThan:
isNull
isOlderThan:
isOlderThanItem:
isOnTelephonyCall
isOscarChat
isOscarEnabled
isRead
isRecentlyDeletedEnabled
isRecordingReplayDB
isRecovered
isReducedChatCacheSizeEnabled
isRemovedFromBackup
isSMS
isSMSSpam
isSafeToDeleteAttachmentPath:
isSensitiveImage:withChatID:completionHandler:
isSent
isShowingFailure
isSpam
isStartingEnabledSettingChange
isStartingInitialSyncSetByCloudKitHooks
isStartingPeriodicSyncSetByCloudKitHooks
isSticker
isSubService
isSuppressDatabaseUpdates
isSurfPayment:
isSyncing
isSyncingEnabled
isSystemLocked
isUnderFirstDataProtectionLock
isUnexpectedlyLoggedOut
isUnfinished
isUnnamedChat
isUpdateFromNickname:withOptions:
isUpdatingAttachmentFileSizes
isUsingCentralizeCacheDelete
isUsingCentralizedModel
isValidJSONObject:
isValidOneTimeCode:
isiMessageServiceIDSAccount:
isiMessageSpam
isoCountryCode
itemType
itemWithGUID:
itemsWithHandles:onServices:limit:
itemsWithHandles:onServices:messageGUID:limit:
itemsWithHandles:onServices:messageGUID:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:hasMessagesBefore:hasMessagesAfter:
itemsWithRoomNames:onServices:limit:
itemsWithRoomNames:onServices:messageGUID:limit:
itemsWithRoomNames:onServices:messageGUID:threadIdentifier:limit:
iterateRecentMessagesInChat:withBlock:
joinChat:handleInfo:style:groupID:joinProperties:
joinChat:handleInfo:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:
joinChat:style:groupID:joinProperties:
joinChat:style:joinProperties:
joinChatID:handleInfo:identifier:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:
joinChatID:handleInfo:identifier:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:account:
joinChatID:handleInfo:identifier:style:joinProperties:
keyEnumerator
keyRollPending
keyRollPendingStateDidChange
keyValueCollection
keyValueCollection:didUpdateValues:
keyValueCollection:willUpdateValues:
kickOffCloudKitSyncIfNeededOnImagentLaunch
kickOffEagerSyncIfApplicable
lastAddressedLocalHandle
lastAddressedSIMID
lastDeviceBackUpDate
lastFailedMessageDate
lastFailedMessageDateChanged:
lastMeContactStoreSync
lastMessage
lastMessageForChatWithRowID:
lastMessageTimeStampOnLoad
lastMessageWithHandles:onServices:
lastMessageWithRoomNames:onServices:
lastObject
lastPathComponent
lastReadMessageTimeStamp
lastRestoreFailureLogDumpDate
lastSeenMessageGUID
lastSeenMessageGuid
lastSentMessageDate
lastSyncDate
lastSyncedMessageRowID
lastTUConversationCreatedDate
lastTUConversationItemForChat:
lastTranslatableMessageGUIDWithLanguageCode:
laterDate:
latestActiveDate
latestReadReceipt
latestSyncTokenForSyncType:
launchListenerForCapability:
leaveChat:style:
leaveChatID:identifier:style:
leaveChatID:identifier:style:account:
leaveiMessageChat:style:
leaveiMessageChatID:identifier:style:
leaveiMessageChatID:identifier:style:account:
leftChat:
length
librarySpecificFetchOptions
linkedUserURIs
listener:shouldAcceptNewConnection:
listenerID
load
loadAllChats
loadAllChatsProgressivelyEnabled
loadAndReturnError:
loadAnyChatsContainingHandleIDsIn:reply:
loadAttachmentsForChatWithGUID:chatIdentifiers:style:services:reply:
loadAttachmentsForIDs:style:onServices:chatID:queryID:
loadChatWithChatIdentifier:
loadChatWithGUID:queryID:
loadChatWithGUID:reply:
loadChatsFilteredUsingPredicate:lastMessageOlderThan:limit:queryID:
loadChatsFilteredUsingPredicate:lastMessageOlderThan:limit:reply:
loadChatsFilteredUsingPredicate:queryID:
loadChatsFilteredUsingPredicate:reply:
loadChatsWithCompletionBlock:
loadChatsWithGroupID:queryID:
loadChatsWithGroupID:reply:
loadChatsWithHandleIDs:groupID:displayName:style:queryID:
loadChatsWithHandleIDs:groupID:displayName:style:reply:
loadChatsWithIdentifier:queryID:
loadChatsWithIdentifier:reply:
loadChatsWithPinningIdentifier:reply:
loadConsumedSessionPayloadsForItems:
loadDeletedMessagesWithLimit:
loadDirtyMessagesWithLimit:
loadFrequentRepliesForChatWithGUID:chatIdentifiers:style:services:limit:reply:
loadFrequentRepliesForIDs:style:onServices:limit:chatID:queryID:
loadHandledNicknamesAndPendingUpdates
loadHistoryForChatWithGUID:chatIdentifiers:style:services:limit:beforeGUID:afterGUID:threadIdentifier:reply:
loadHistoryForIDs:style:onServices:limit:beforeGUID:afterGUID:threadIdentifier:chatID:queryID:
loadIsDownloadingPurgedAttachmentsForChatWithGUID:chatIdentifiers:style:services:reply:
loadIsDownloadingPurgedAttachmentsForIDs:style:onServices:chatID:queryID:
loadMessageItemWithGUID:queryID:
loadMessageWithGUID:queryID:
loadMostRecentMessagePTasks
loadNoticeEventHistory
loadPagedHistoryAroundMessageWithGUID:chatGUID:chatIdentifiers:style:services:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:reply:
loadPagedHistoryForGUID:chatIdentifiers:style:onServices:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:chatID:queryID:
loadPersistentStoresWithCompletionHandler:
loadPersonalNicknameIfNeeded
loadRecoverableMessagesMetadataGroupedByChatGUID
loadRecoverableMessagesMetadataWithQueryID:
loadServiceBundle
loadSharingHandlesPrefs
loadUncachedAttachmentCountForChatWithGUID:chatIdentifiers:style:services:reply:
loadUncachedAttachmentCountForIDs:style:onServices:chatID:queryID:
loadUnreadForIDs:style:onServices:limit:fallbackGUID:chatId:queryID:
loadUnreadHistoryForChatWithGUID:chatIdentifiers:style:services:limit:fallbackMessageGUID:reply:
loadedChats:
loadedChats:queryID:
loadedRecoverableMessagesMetadata:queryID:
localFileURLRetrievalErrorWithReason:description:
localFileURLRetrievalErrorWithReason:underlyingReason:description:
localPath
localPropertiesOfBuddy:
localProperty:ofBuddy:
localURL
locale
localizations
localizedApplicationName
localizedDescription
localizedName
localizedStringForKey:value:table:
localizedStringForKey:value:table:localization:
localizedStringWithFormat:
locationShareStatusChangeProtobufForCompressedData:
lock
lockRecord
logCloudKitAnalytics
logCloudKitSyncToPowerLogForSyncType:isCoreDuetSync:didCompleteChatSync:didSucceedSyncingChats:didCompleteMessageSync:didSucceedSyncingMessages:didCompleteAttachmentSync:didSucceedSyncingAttachments:didCompleteRecoverableMessageSync:didSucceedSyncingRecoverableMessageSync:syncAttemptCount:
logCloudKitSyncToPowerLogForSyncType:isCoreDuetSync:didStartSync:didFinishSync:didSucceedSyncing:
logCollectorAddress
logDictionary:
logDumpAndSendMessageTo:forHours:
logDumpAndSendMessageTo:forHours:reason:
logDumpAndSendMessageTo:forHours:reason:isInitialSync:requirePreviousPrompt:willSendBlock:
logDumpAndSendMessageTo:forHours:reason:requirePreviousPrompt:willSendBlock:
logDumpIsExpected
logDumpIsNecessaryAfterSync
logHandle
logHandleIDs:checkAdditionalLoggingEnabled:
logPrivatizedImageReceivedEvent:
logToPowerLogForLogDumpGUID:logDumpCompleted:logDumpSucceeded:logDumpSendingCompleted:logDumpSendingSucceeded:reason:
loggableOverviewForKey:
login
loginAccount:
loginAllAccounts
loginIDForAccount:
loginWithAccount:
logout
logoutAccount:
logoutAllAccounts
logoutServiceSessionWithAccount:
logoutWithAccount:
longLongValue
longRunningSyncTimer
lsAppRecordForURL:checkInstalledAppsOnly:
mainBundle
mainQueue
mainRunLoop
mainService
mainThread
makeNewIncomingTransferWithGUID:filename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
makeNewOutgoingTransferWithGUID:filename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
manateeContainer
markAllAttachmentsAsNeedingCloudKitSync
markAllAttachmentsAsNotPurgeable
markAllChatsAsDirty
markAllMessagesAsNeedingCloudKitSync
markAllNicknamesAsPending
markAsSpamForIDs:style:onServices:chatID:queryID:autoReport:
markAsSpamQuery:chatID:services:finishedWithResult:
markAttachment:purgeable:
markAttachment:sender:recipients:isIncoming:
markAttachmentPurgeable:
markAttachmentUnpurgeable:
markBuddiesAsChanged:
markChatAsDeferredForSyncingUsingCKRecord:
markChatAsSpamWithGUID:chatIdentifiers:style:services:isAutoReport:reply:
markDeferredChatsAsNeedingSync
markFile:asPurgeable:
markHasHadSuccessfulQueryForIDs:style:onServices:
markMessageAsCleanWithROWID:
markMessageAsCorrupt:setCorrupt:
markMessageAsDeduplicated:
markMessageAsIgnoreButNeedingSyncWithROWID:
markMessageAsReadWithGUID:callerOrigin:reply:
markMessageGUIDUnread:
markMessagesAsReadWithChatGUIDs:upToGUID:readDate:fromMe:
markMessagesAsReadWithIdentifiers:onServices:chatStyle:upToGUID:readDate:fromMe:
markNicknameAsUpdated:
markPlayedExpressiveSendForIDs:style:onServices:message:
markPlayedForIDs:style:onServices:message:
markPlayedForMessageGUID:
markReadForIDs:style:onServices:messages:clientUnreadCount:
markReadForIDs:style:onServices:messages:clientUnreadCount:setUnreadCountToZero:
markReadForMessageGUID:callerOrigin:queryID:
markSavedForIDs:style:onServices:message:
markSavedForMessageGUID:
markTransferAsNotSuccessfullyDownloadedFromCloud:
markTransferAsNotSyncedSuccessfully:
markUnreadForMessageGUID:IDs:style:services:
markedAsReadForMessageGUID:success:queryID:
maxNumberOfMessages
maxStartDateForRanges:
md5HashForRecord:
md5HashForTransfer
md5HashForURL:
meCardHasUpdated
meCardUpdated
messageActionChangeProtobufForCompressedData:
messageActionItemsForOriginalMessageGUID:
messageActionType
messageContainsSurfDD:
messageDatabaseSize
messageDictionaryWithPersonalRecordIDAndVersion
messageGUID
messageHandshakeState
messageHasUnfinishedTransfers:
messageHistorySyncController
messageID
messageItemQuery:finishedWithResult:chatGUIDs:
messagePTaskStore
messagePartIndex
messagePartRange
messageParts
messageProcessingController
messageProcessingTaskAdded:
messageQuery:finishedWithResult:chatGUIDs:
messageRecordZone
messageRecordZoneID
messageStore
messageSubject
messageSummaryInfo
messageSyncController
messageSyncP2Enabled
messageUpdateV1RecordType
messageWithGUID:
messageWithGUID:registerAttachments:
messageWithReplaceMessageID:fromHandle:onService:
messagesGroupUUID
messagesPendingUpdateT1ToCloudKitWithLimit:
messagesPendingUpdateT2ToCloudKitWithLimit:
messagesProcessedComingBackFromStorage
messagesReceivedDuringStorage
messagesThatNeedSyncWithCloudKitWithLimit:
messagesToUploadToCloudKitWithLimit:
messagesWithAssociatedGUID:
messagesWithAssociatedGUID:shouldLoadAttachments:
messagesWithGUIDs:
messagesWithReplyToGUID:
metaDataForSurfURL:
metadata
methodSignatureForSelector:
metricAttachmentValidation:attachmentSize:operationalErrorDomain:operationalErrorCode:validationErrorDomain:validationErrorCode:
metricAttachments:
metricAttachmentsToPurge:withActivity:
metricZoneID
micGroupPhotoEnabled
migrateKey:fromDatabase:
mimeType
minusSet:
mockAccountController
mode
modificationDate
modificationStamp
modifyRecordsCompletionBlock
momentShare
moveAssetFromRecord:
moveItemAtPath:toPath:error:
moveItemAtURL:toURL:error:
moveMessageRecordsToRecoveryForMessageGUIDs:deleteDate:
moveMessagesInChatsWithGUIDsToRecentlyDeleted:deleteDate:
moveMessagesInChatsWithGUIDsToRecentlyDeleted:deleteDate:queryID:
moveMessagesWithGUIDsToRecentlyDeleted:deleteDate:
moveMessagesWithGUIDsToRecentlyDeleted:deleteDate:queryID:
movedMessagesToRecentlyDeletedForChatsWithGUIDs:queryID:
movedMessagesToRecentlyDeletedWithQueryID:
msgid
multiplePhoneNumbersTiedToAccount
mutableCopy
mutablePersistentProperties
mutableProperties
name
needToLoadMapsInfoFromDisk
needsProccesingFor:
networkConditionsAllowLogin
networkDataAvailable
newAccountWithAccountDefaults:accountID:
newDeviceDidSignIntoiMessage
newSetupInfoAvailable
newSyncTaskForType:
newestChatWithGroupID:onService:
newestChatWithOriginalGroupID:onService:
newfilteredArrayRemovingCKRecordDupes:
newfilteredArrayRemovingCKRecordIDDupes:
nextBatch
nextObject
nickNameContainer
nickNameDecryptionKey
nickNamePublicDatabase
nickNameRecordID
nicknameForHandle:
nicknameForHandleURI:
nicknameForRecordID:
nicknameForRecordID:handle:
nicknameIsUploadingToCK
nicknamePreferencesDidChange
nicknameRequestResponse:encodedNicknameData:
nicknamesForParticipants
nightlySyncTimer
noopHandlerForCommand:
normalizedHandleWithDestinationID:
normalizedPhoneNumberHandleForValue:isoCountryCode:
noteCoreDuetSyncEnded
noteItemFromStorage:
noteLastItemFromStorage:
noteLastItemProcessed
noteRecentMessageForPeople:
noteSuppressedMessageUpdate:
noticeDispatcher
noticeEventHistory
noticeFanoutThreshold
noticesForChatGUID:
notification
notificationCenter
notificationCenterDidDisappear
notificationCenterWillAppear
notificationContext
notificationFromRemoteNotificationDictionary:
notificationIDSTokenURI
notificationType
notifyClientsNewSetupInfoAvailable
notifyDidSendMessageID:
notifyDidSendMessageID:account:shouldNotify:
notifyDidSendMessageID:shouldNotify:
null
numberOfMatchesInString:options:range:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
object
objectAfterChanges
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKey:inDomain:
objectForKeyedSubscript:
objectsAtIndexes:
oneTimeCodesDidChange:
openSensitiveURL:withOptions:
openURL:configuration:completionHandler:
operationID
orPredicateWithSubpredicates:
originalGUID
originalMessageGUID
originalMessageGuid
originalTextRangesByPartIndex
oscarChat
otcUtilities
otherHandle
overrideNetworkAvailability
overrideNumberOfChatsToFetch
overrideNumberOfChatsToWrite
overrideStorageControllerWithDatabaseFromPath:
pTaskStore
paddingForMessageOfSize:
pagedHistoryQuery:chatID:services:numberOfMessagesBefore:numberOfMessagesAfter:finishedWithResult:hasMessagesBefore:hasMessagesAfter:
parentChatID
parentalControls
partKeyForAttachmentGUID:
participantChangeProtobufForCompressedData:
participantChangeThreshold
participantChangeType
participantHandles
participants
password
passwordUpdatedAccount:
passwordUpdatedWithAccount:
path
pathExtension
pathForResource:ofType:
payloadData
pendingACRequestComplete
pendingNicknameUpdates
pendingNicknameUpdatesKVStore
pendingNicknamesOrHandledNicknamesDidChange
pendingPersonalNickname
pendingReadReceiptFromStorageCount
pendingVCRequestComplete
perRecordCompletionBlock
perTransferProgress
performAdditionalStorageRequiredCheck
performChanges:completionHandler:
performInitialHousekeeping
performInitialSyncOnFirstConnectionOfImagentIfNeeded
performInitialUpdateIfNeeded
performOneTimeAccountUpgradeCheckIfNeeded
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
peristencePath
permanentHighQualityLocalPath
permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:completionHandler:
permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:queryID:
permanentlyDeletedMessagesInChatsWithDeletedChatGUIDs:
permanentlyDeletedMessagesInChatsWithDeletedChatGUIDs:queryID:
permanentlyDeletedRecoverableMessagesForChatsWithGUIDs:deletedChatGUIDs:
persistData:forKey:error:
persistToken:forKey:
persistedChatCount
persistenceQueue
persistentID
persistentProperties
persistentProperty:changedTo:from:
personCentricGroupedChatsArrayWithMaximumNumberOfChats:skipsLastMessageLoading:usingChats:useCachedChatGroups:includingPinnedChatIdentifiers:
personCentricGroupedChatsCache
personCentricIDForChatWithGUID:chatIdentifier:chatStyle:groupID:displayName:participantIDs:
personalNickname
photoLibraryDidChange:
photoShareURLFromPluginBundleID:contentString:payload:
pictureKeyForBuddy:
pinCodeAlertCompleted:deviceName:deviceType:phoneNumber:responseFromDevice:wasCancelled:
pinningIdentifier
plainBody
playMessageSentSoundIfNeeded:
playSendSoundForMessageGUID:callerOrigin:
pluginSessionGUID
popReadReceiptForMissingGUID:
populateCacheWithAvailbailityVerificationTokensForHandleID:
populateIMGroupActionItem:withProtobufData:
populateIMGroupTitleChangeItem:withProtobufData:
populateIMLocationShareStatusChangeItem:withProtobufData:
populateIMMessageActionItem:withProtobufData:
populateIMMessageItemWithProtobufFields:withProtobufData:
populateIMMessageItemWithProtobufFields:withProtobufDataP2:
populateIMMessageItemWithProtobufFields:withProtobufDataP3:
populateIMParticipantChangeItem:withProtobufData:
populateLocalURLsForTransfer:fromCKRecord:
postAccountCapabilities
postCoreAutomationNotificationFinishedPeriodicSyncNotificationWithStartTime:chatsDidsync:messagesDidSync:attachmentsDidSync:recoverableMessagesDidSync:
postCoreAutomationNotificationFinishedPurgingAttachments:withErrorString:
postCoreAutomationNotificationIncomingMessageProcessedWithDuration:
postCoreAutomationNotificationWithDictionary:withVerboseLogging:
postCountChanges
postHubbleDownloadFailedIfNeededForTransfer:error:
postHubbleDownloadFinishedIfNeededForTransfer:
postMessage:category:
postNotificationName:object:
postNotificationName:object:userInfo:
postSharePlayNotificationForChatGUID:faceTimeConversationUUID:handleIdentifier:localizedApplicationName:
postSyncStateToCloudKit:
postSyncStateToRTC:category:reportDictionary:
postUrgentNotificationsForMessageGUIDs:
powerLogConversationType
predicateWithFormat:
presentApprovalSheetWithRequestIdentifier:completion:
previouslyBlackholedChatLoadedWithChatIdentifier:chats:
previouslyBlackholedChatLoadedWithHandleIDs:chat:
primaryAccountHasiCloudBackupEnabledWithCompletion:
principalClass
printCachedRampState
printGreeting
privateCloudDatabase
privateWorkQueue
processIdentifier
processInfo
processMessageForSending:toChat:style:allowWatchdog:account:completionBlock:
processMessageForSending:toChat:style:allowWatchdog:completionBlock:
processMessageItemForENURL:withCompletionHandler:
processMessageUsingCKRecord:
processMessageUsingCKRecord:updatedLastMessageCount:
processMessages:inChat:fromIDSID:
processName
processNetworkDataAvailabilityChange:
productBuildVersion
profileID
profileValidationStatus
pronunciationHint
properties
property:changedTo:from:
property:ofBuddy:
protobufForCompressedData:
protobufForCompressedDataP2:
protobufForCompressedDataP3:
protobufForUpdateT1:
protobufForUpdateT2:
proxyAccount
proxyHost
proxyPassword
proxyPort
proxyType
publicCloudDatabase
punctuationCharacterSet
purgeAttachments:
purgeAttachmentsForChatGUID:
purgeMemoryCaches
purgeableAttachmentSize
purgedAttachmentsCountForChatsWithChatIdentifiers:services:
purgedAttachmentsForChat:services:limit:
pushConnection
qosClassWhileServicingRequestsResponse:identifier:
qualityOfService
queryCurrentStateWithError:
queryItems
queue
queueChatToSendNicknamePostUploadIfNeeded:
queueForDelegate:
quickSwitchIDSService
rampManager
rangeOfString:
rangeValue
rangesFromSerializedString:
rateLimiter
reIdentify
readAliasesFromDefaults
readMessageStream
readServerBagBoolForKey:defaultValue:
rebuildLastFailedMessageDate
rebuildUnreadMessageCount
receiveFileTransfer:topic:path:requestURLString:ownerID:signature:decryptionKey:fileSize:progressBlock:completionBlock:
receiveFileTransfer:transferGUID:topic:path:requestURLString:ownerID:signature:decryptionKey:fileSize:generatePreview:balloonBundleID:isFromMe:progressBlock:completionBlock:
receiveHighlightEvent:fromSender:guid:date:
receivedBlackholeError
receivedIncomingLocationSharePacket:
receivedUrgentRequestForMessages:
receiverIsCandidateForHawking:
receiverIsCandidateForJunk:forAccount:
recentMessageIDs
recordChangedBlock
recordID
recordIDToTransferMap
recordIDUsingName:zoneID:
recordIDUsingSalt:zoneID:guid:
recordIDWithZoneID:salt:
recordIDs
recordMetricIsCloudKitEnabled
recordName
recordNameForMessageWithGUID:usingSalt:
recordNameForRecordChangeTag:ckRecordID:salt:guid:
recordNameUsingSalt:guid:
recordStore
recordType
recordZoneChangeTokensUpdatedBlock
recordZoneFetchCompletionBlock
recordZoneID
recordZoneIDs
recordZoneIDsWithPendingArchivedRecords
recordZoneManager
recordsRead
recordsToSave
recordsWriteFailed
recordsWritten
recoverChatsForCommandDictionary:
recoverChatsFromJunkContainingMessageWithGUID:
recoverMessageRecordsForChatRecordsWithGUIDs:
recoverMessagesWithChatGUIDs:
recoverMessagesWithChatGUIDs:queryID:
recoverParticipantsIfNeeded
recoverableGUIDFromMessageGUID:chatGUID:partIndex:
recoverableMessageRecordZone
recoverableMessageRecordZoneID
recoverableMessageSyncController
recoverableMessagesMetadata
recoverableMessagesMetadataPendingCloudKitDeleteWithLimit:
recoverableMessagesMetadataPendingCloudKitSaveWithLimit:
recovered
recoveredMessagesFromRecentlyDeletedForChatsWithGUIDs:
recoveredMessagesWithQueryID:
reflectMarkUnreadToPeerDevicesForMessageGUID:
reflectRecoverChatToPeerDevicesForMessageGUID:
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
refreshRegistration
refreshRegistrationForAccount:
refreshServiceCapabilities
refreshUIIfApplicableWithBatchCount:
refreshUIWhileSyncing
refreshWithDBSyncStatistics
regenerateTransfersForMessage:inChat:addingAssetWithUUID:
regionID
registerAccount:
registerAndAcceptMomentShareForMessage:inChat:resetAssetTransfers:
registerChangeObserver:
registerChat:groupID:style:
registerChat:style:
registerChat:style:displayName:groupID:handleInfo:
registerChat:style:displayName:groupID:handleInfo:account:
registerChat:style:displayName:groupID:lastAddressedHandle:handleInfo:account:isBlackholed:
registerChat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:isBlackholed:
registerChat:style:handleInfo:
registerGUID:forNewOutgoingTransferWithLocalURL:
registerMessagesGroupUUIDForConversationUUID:
registerSharedProvider:
registerTransfersWithGUIDs:forMessageGUID:
registerWithCacheDelete
registerWithCompletionHandler:
registeredURIs
registration
registrationAlertInfo
registrationError
registrationFailedForAccount:needsDeletion:
registrationStatus
regularExpressionWithPattern:options:error:
relay:sendCancel:toPerson:
relay:sendCancel:toPerson:account:
relay:sendInitateRequest:toPerson:
relay:sendInitateRequest:toPerson:account:
relay:sendUpdate:toPerson:
relay:sendUpdate:toPerson:account:
releaseSession
reloadTimeInterval
reloadTimer
remapMessageError:toError:forChat:completion:
remoteHost
remoteMembers
remoteObjectProxy
removeAccount:
removeAliases:
removeAliases:account:
removeAllObjects
removeAttachment:fromMessageWithGUID:
removeAttribute:range:
removeBuildObjectsFromDict:
removeChat:
removeChat:style:
removeChatID:identifier:style:
removeChatID:identifier:style:account:
removeFinishedTransfers
removeFromBackUpAllowed
removeIMDHandleFromRegistry:
removeItem:fromChat:
removeItemAtPath:error:
removeItemAtURL:error:
removeLastObject
removeMessage:fromChat:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectFromAnalyticSyncDatesDictionaryForKey:
removeObjectIdenticalTo:
removeObjectsForKeys:
removeObjectsInArray:
removeObserver:name:object:
removeParticipant:
removeParticipants:
removePathFromiCloudBackups:
removePersonInfo:chatID:identifier:style:
removePersonInfo:chatID:identifier:style:account:
removePersonInfoFromiMessageChat:chatID:identifier:style:
removePersonInfoFromiMessageChat:chatID:identifier:style:account:
removeRegistrationDelegate:
removeTarget:
removeTimingForKey:
removeTransferForGUID:
removedFromBackup
renameGroup:to:account:
repairDuplicateChatsIfNeeded
repairSharedFocusStatusFollowingFailedValidationWithHandleID:fromHandleID:completion:
replaceMessageAcknowledgmentsWithNewMessageAcknowledgment:associatedMessageGUID:sender:
replaceObjectAtIndex:withObject:
replacedNicknameForHandleIDInHandledMapIfNeeded:nickname:
replayControllerNeedsSync
replayControllerWantsToSync
replayMessage:
replayMessages
replayMessagesWithCompletion:
replyDelegate
replyProxy
replyToGUID
reportAvailableSpaceToBeDeleted:urgency:
reportCompletionForSyncType:isCoreDuetSync:onAttempt:wasSuccessful:duration:
reportErrorForSyncType:syncStep:response:error:
reportMOCDebuggingErrorWithString:internalOnly:
reportMOCDebuggingErrorWithString:internalOnly:initialSync:
reportMOCDebuggingErrorWithString:internalOnly:initialSync:sendToHandle:
reportMOCDebuggingErrorWithString:internalOnly:initialSync:sendToHandle:reasonString:
reportMessageDictionaryForMessages:withLastAddressedHandle:maxMessageLength:isAutoReport:withChat:maxMessagesToReport:totalMessageCount:onlyReportForiMessageService:notifyInternalSecurity:
reportMetricToCK:withDict:
reportUnknownToIDS:messageID:isBlackholed:isiMessageJunk:messageServerTimestamp:toURI:
reportZoneCreation:
requestBuddyPicturesAndPropertiesForAccount:
requestExpireStateForMessageGuid:completionBlock:
requestExpireStateWithCompletion:
requestGroupPhotoIfNecessary:incomingGroupPhotoCreationTime:toIdentifier:fromIdentifier:messageIsFromStorage:
requestGroups
requestGroupsAccount:
requestNetworkDataAvailability
requestOneTimeCodeStatus
requestPasswordForUsername:service:badPassword:showForgotPassword:shouldRememberPassword:outRequestID:completionBlock:
requestPendingACInvites
requestPendingMessages
requestPendingVCInvites
requestProperty:ofPerson:
requestProperty:ofPerson:account:
requestQOSClassWhileServicingRequestsWithID:
requestRoutingForMessageGuid:inChat:error:completionBlock:
requestRoutingWithCompletion:
requestSetupWithClientID:capabilities:context:reply:
requestSetupXPCObjectWithClientID:capabilities:context:reply:
requestSubscriptionTo:
requestSubscriptionTo:account:
requestVCWithPerson:properties:conference:
requestVCWithPerson:properties:conference:account:
requestWatchdogForMessageGuid:completionBlock:
requestWatchdogWithCompletion:
requiresDataConnectionActivation
reregister
resetAttachmentWatermark
resetCKSyncState
resetCallerIDForIDSAccount:
resetLastSyncDate
resetParticipants:
resetRecordCounts
resetSyncStateForMessage:toState:
resetSyncStateForRecord:toState:
resetTransfer:andPostReason:
resetTransferAndPostError:error:
resolveChatConflictUsingCKRecord:localGUID:
resolveInconsistentGUIDForChatRecordWithGUID:newGUID:completionHandler:
resolveUnformattedRepresentationsForHandles:onService:message:completionBlock:
respondToAskForTimeRequestWithIdentifier:answer:error:
respondToVCInvitationWithPerson:properties:conference:
respondToVCInvitationWithPerson:properties:conference:account:
respondsToSelector:
response
responseForError:attempt:retryInterval:
restoreDefaultStoreControllerInstance
restoreFailuresDirectory
resultsLimit
resume
resumeBuddyUpdates
resumeBuddyUpdatesAccount:
retain
retainCount
retractNotificationsForReadMessagesWithGUIDs:
retractPostedNotificationsForMessageGUIDs:
retractPostedNotificationsForMessagesMatchingChatGUIDs:
retractedPartIndexes
retrieveLocalFileURLForFileTransferWithGUID:options:
retrieveLocalFileURLForFileTransferWithGUIDs:options:
retrieveProxyAccountSettings
retrieveProxySettings
retrieveStickerWithProperties:completionBlock:
retryGroupPhotoUpload:toChatID:identifier:style:account:
retryTimer
retryToParticipant
reuploadProfileIfNeeded
reverseObjectEnumerator
richLinkURLs
roomName
roomNameIsProbablyAutomaticallyGenerated
rowID
saltZoneCreatedOverride
sandboxToken
save
save:
saveAttachmentsCKOperationUsingRecordsToSave:operationGroupName:activity:
saveAttachmentsForTransfer:chatGUID:storeAtExternalLocation:completion:
saveChatsCKOperationUsingRecordsToSave:activity:
saveMessagesCKOperationUsingRecordsToSave:operationGroupName:activity:
saveNicknameForRecordID:handleID:userNickname:
saveNotice:
saveNoticeEventHistory
saveSettings
saveSubscription:completionHandler:
saveT1UpdatesOperationFactory:token:batchSize:recordNameToRowIDMap:activity:
saveT2UpdatesOperationFactory:token:batchSize:recordNameToRowIDMap:activity:
saveVerifiedAccount:withCompletionHandler:
scanUnsignedLongLong:
scannerWithString:
scheduleInitialProcessingCheck
scheduleSyncTaskForServices:
scheduleTransactionLogTask:
scheduledTimerWithTimeInterval:repeats:block:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
screenLocked
screenSaverDidStart
screenSaverDidStop
screenTimeAskReponseHandler
screenTimeEnablementChanged:
screenUnlocked
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidFinishThrottle:
searchableIndexDidThrottle:
securityLevelForAccount:
self
semanticType
sendAVMessageToPerson:sessionID:type:userInfo:conference:
sendAVMessageToPerson:sessionID:type:userInfo:conference:account:
sendBalloonPayload:attachments:withMessageGUID:bundleID:
sendClearNotice:toHandles:
sendClearNotice:toHandles:reply:
sendCloudKitZoneFetchRequestToNoteFeatureIsOn
sendCommand:withProperties:toPerson:
sendCommand:withProperties:toPerson:account:
sendCommand:withProperties:toPerson:account:toChatID:identifier:style:
sendCommand:withProperties:toPerson:toChatID:identifier:style:
sendCounterProposalToPerson:properties:conference:
sendCounterProposalToPerson:properties:conference:account:
sendData:toDestinations:priority:options:identifier:error:
sendDeleteCommand:forChatGUID:
sendDeliveredQuietlyReceiptForMessage:forIncomingMessageFromIDSID:toChatGuid:identifier:style:withWillSendToDestinationsHandler:
sendDeliveryReceiptForMessageID:toID:deliveryContext:needsDeliveryReceipt:callerID:account:
sendEditedMessage:previousMessage:partIndex:editType:toChatIdentifier:style:account:backwardCompatabilityText:
sendEvent:
sendGroupPhotoUpdate:toChatID:identifier:style:account:
sendJunkReportMessage:
sendJunkReportMessage:account:
sendLocationSharingInfo:toID:completionBlock:
sendLogDumpMessageAtFilePath:toRecipient:shouldDeleteFile:withCompletion:
sendMappingPacket:toHandle:account:
sendMessage:toChat:style:
sendMessage:toChat:style:account:
sendMessage:toChatID:identifier:style:
sendMessage:toChatID:identifier:style:account:
sendMessage:toDestinations:priority:options:identifier:error:
sendNicknameInfoToChatID:
sendNicknamePreferencesDidChange
sendNicknameUpdatesToPeerDevices:toDestinations:
sendNotice:toHandles:fromHandle:
sendNotice:toHandles:fromHandle:reply:
sendNotificationMessageToUniqueID:withCommand:
sendNotifyRecipientCommandForIDs:style:onServices:message:
sendNotifyRecipientCommandForMessage:toChatGuid:identifier:style:
sendPendingNicknameUpdatesDidChange
sendPersonalNicknameRecordIDAndVersionRequestedByDevice:
sendPersonalNicknameRecordIDAndVersionToAllPeers
sendPersonalNicknameToChat:
sendPlayedReceiptForMessage:toChatID:identifier:style:
sendPlayedReceiptForMessage:toChatID:identifier:style:account:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendReadReceiptForMessage:toChatID:identifier:style:
sendReadReceiptForMessage:toChatID:identifier:style:account:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendRestoreFailuresLogDumps
sendRestoreFailuresLogDumpsIfNeeded
sendSavedReceiptForMessage:toChatID:identifier:style:
sendSavedReceiptForMessage:toChatID:identifier:style:account:
sendStickerAtPath:toChatID:forNBubbleFromTheBottom:atX:atY:scale:balloonWidth:
sendSyndicationAction:toChatsWithIdentifiers:
sendVCUpdate:toPerson:conference:
sendVCUpdate:toPerson:conference:account:
sender
senderHandle
senderLoginIDs
serializedError_im
serializedRepresentation
server
serverAllowsAnalyticDetailsSubmission
serverAllowsAnalyticSubmission
serverAllowsMetricSubmission
serverBag
serverChangeToken
serverDisconnectedForConversationManager:
serverHost
serverPort
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:chat:style:messagesUpdated:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceChatsIgnoreLoginStatus
serviceDefaultsForSetup
serviceDisconnectReason
serviceDomain
serviceForClientIdentifier:
serviceIgnoresNetworkConnectivity
serviceLoginStatus
serviceLoginStatusMessage
serviceName
serviceNeedsLogin
serviceNeedsPassword
serviceProperties
serviceProtocolVersion
serviceRequiresHost
serviceRequiresSingleAccount
serviceSession
serviceSessionDidLoginWithAccount:
serviceSessionDidLogoutWithAccount:
serviceSessionDidLogoutWithMessage:reason:properties:account:
serviceShouldBeAlwaysLoggedIn
serviceSupportsAuthorization
serviceSupportsOneSessionForAllAccounts
serviceSupportsPresence
serviceSupportsRegistration
serviceWantsNullHostReachability
serviceWithName:
sessionClass
sessionDidBecomeActive
sessionForAccount:
sessionWillBecomeInactiveWithAccount:
setAccount:
setAccountController:
setAccountID:
setAccountStatus:
setActionType:
setActiveHubbleRequestedTransfers:
setActiveTransfers:
setAddedObserverForUnexpectedlyLoggedOut:
setAllowList:
setAllowList:account:
setAllowsCellularAccess:
setAllowsWritingToDisk:
setAlreadyCapturedErrorWithAutoBugCapture:
setAnalyticSyncDatesDictionaryObject:forKey:shouldOverrideIfExists:
setArchivedRecordSyncToken:
setAskToBuyResponseHandler:
setAssetDownloadInProgress:
setAssociatedMessageGUID:
setAssociatedMessageGuid:
setAssociatedMessageRange:
setAssociatedMessageRangeLength:
setAssociatedMessageRangeLocation:
setAssociatedMessageType:
setAtomic:
setAttributes:ofItemAtPath:error:
setAttributionInfo:
setAutoDonationBehavior:lastModificationDate:
setAutomaticDNDStatus:
setAutomaticallyRetryNetworkFailures:
setAutomationCompletionBlock:
setAvMode:
setAvailabilitySubscriptionService:
setAvatar:
setBadgeCount:withCompletionHandler:
setBadgeString:withCompletionHandler:
setBalloonBundleID:
setBaloonBundleId:
setBatchProcessingBlock:
setBatchSize:
setBizIntent:
setBlockIdleStatus:
setBlockIdleStatus:account:
setBlockList:
setBlockList:account:
setBlockingMode:
setBlockingMode:account:
setBody:
setBodyData:
setBool:forDomain:forKey:
setBroadcastedSyncStateStateToFinished
setBroadcastedSyncStateStateToStarting
setBroadcastedSyncStateToDeleting
setBroadcastedSyncStateToDownloading
setBroadcastedSyncStateToStartingInitialSync
setBroadcastedSyncStateToStartingPeriodicSync
setBroadcastedSyncStateToUploading
setBroadcasterOverride:
setByAddingObjectsFromSet:
setCKOperationFactory:
setCMMAssetOffset:
setCMMState:
setCMMStateToRegisteredAndAssetOffsetTo:
setCachedAliasToCNIDMap:
setCachedSalt:
setChangeType:
setChatGUIDToCountMap:
setChatIdentifier:
setChatRegistry:
setChatStore:
setChatsToSendNicknameInfoTo:
setCkChatSyncControllerNeedsSync:
setCkQueue:
setClearRateLimiter:
setCloudKitEnabled:
setCloudKitRecordChangeTag:
setCloudKitRecordID:
setCloudKitServerChangeTokenBlob:
setCloudKitSyncState:
setCloudKitSyncingEnabled:
setCmmAssetOffset:
setCmmState:
setCodeInvalidationTimer:
setCollaborationId:
setCommSafetySensitive:
setCompletionBlock:
setCompletionBlocksForAssetFetchOperations:
setConfiguration:
setConfigurationsByRecordZoneID:
setConsumedSessionPayloads:
setContactsAvatarRecipeData:
setContext:
setContextStamp:
setCount:
setCreateEngramGroupOnMessageSend:
setCreatedChatZone:
setCurrentContext:
setCurrentlyExecutingSyncTask:
setDataBaseManager:
setDatabaseManager:
setDate:
setDateFormat:
setDateViewed:
setDefaultConfiguration:
setDelegate:
setDeleteContext:
setDeletedZones:
setDestinationCallerID:
setDeviceConditionsToCheck:
setDeviceLowOnDiskSpace:
setDeviceSupport:
setDidKeyRollPendingCheck:
setDirection:
setDisableMetadataCorrections:
setDisablingDevices:
setDiscretionaryNetworkBehavior:
setDontAllowRAW:
setDownloadAssetsForTransferGUIDs:
setDtService:
setEligibleForTruthZone:
setEnabled:forDataclass:
setEnabledTopics:
setEncounteredIncompatibleMessage:
setEngramID:
setErrorCode:
setErrorFetchingExitDate:
setErrorToAccountNeedsRepair
setErrorToKeyRollingError
setEtag:
setExitDate:
setExitRecordDate:
setExitRecordID:
setExportedInterface:
setExportedObject:
setExpressiveSendId:
setExpressiveSendStyleID:
setFeatureEnabled:
setFetchAllChanges:
setFetchArchivedRecordsCompletionBlock:
setFetchLimit:
setFetchNewestChangesFirst:
setFetchPropertySets:
setFetchRecordZoneChangesCompletionBlock:
setFetchRecordZonesCompletionBlock:
setFetchType:
setFetchUserQuotaCompletionBlock:
setFetchedChatsDuringLastSync:
setFetchedExitDateOnLaunch:
setFileTransferGUIDs:
setFilename:
setFirstName:
setFlags:
setGelatoService:
setGroup:
setGroupActionType:
setGroupID:
setGroupTitle:
setGuid:
setGuidString:
setGuidToTransferMap:
setHandle:
setHandleAllowList:
setHandleDenyList:
setHandleSharingKVStore:
setHandledNicknames:
setHandledNicknamesKVStore:
setHasDumpedLogsForNoExisitingGroup:
setHasHadSuccessfulQuery:
setHasReceivedReadReceipt:
setHaveDeferredUpdateRequest:
setHeldDeletionContext:
setHideAttachment:
setHighlightChangeEvent:
setHighlightChangeEventType:
setHistory:forMessagePart:
setHistoryToken:
setID:
setIdToHandlesMap:
setIdsDestination:
setIdsTransportLogNeedsSync:
setImDefaults:
setImpl:
setInMemorySyncStatistics:
setInitialSyncAttempts:
setInteger:forKey:
setInternalQueue:
setInterruptionHandler:
setInvalidationHandler:
setIsBeingRetried:
setIsBlackholed:
setIsDoingDeleteRecoverySync:
setIsFiltered:
setIsIncoming:
setIsManaged:
setIsSticker:
setIsSyncing:
setIsUpdatingAttachmentFileSizes:
setIsUsingCentralizedModel:
setKnownRecordIDsFromList:
setKnownToServer:
setKvStore:
setLastAddressedLocalHandle:
setLastAddressedSIMID:
setLastFailedMessageDate:
setLastLogDumpDate:
setLastMeContactStoreSync:
setLastMessageStorageTimerInterval:
setLastMessageTimeStampOnLoad:
setLastName:
setLastReadMessageTimeStamp:
setLastRestoreFailureLogDumpDate:
setLastSentMessageDate:
setLastSyncDate:
setLastTUConversationCreatedDate:
setLatestActiveDate:
setLatestReadReceipt:
setLatestSyncToken:
setListenerCapabilities:
setLoading:
setLocale:
setLockRecord:
setLockdownManager:
setLoginID:
setLoginStatus:message:
setLoginStatus:message:reason:properties:
setLongRunningSyncTimer:
setManaged:
setMeCardUpdated:
setMessageActionType:
setMessageBodyData:
setMessagePTaskStore:
setMessageStore:
setMessageSubject:
setMessageSummaryInfo:
setMessagesProcessedComingBackFromStorage:
setMessagesReceivedDuringStorage:
setMetadata:
setMmcsEncryptionSupport:
setMockAccountController:
setModificationStamp:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setMsgid:
setMutableProperties:
setName:
setNeedToLoadMapsInfoFromDisk:
setNetworkDataAvailable:
setNewPersonalNickname:
setNicknameIsUploadingToCK:
setNightlySyncTimer:
setNoticeEventHistory:
setNotificationCenter:
setNotificationIDSTokenURI:
setNumMessagesSent:
setObject:forKey:
setObject:forKey:inDomain:
setObject:forKeyedSubscript:
setOriginalGUID:
setOriginalGroupID:
setOriginalMessageGUID:
setOriginalMessageGuid:
setOriginalTextRangesByPartIndex:
setOscarChat:
setOtcUtilities:
setOtherCountryCode:
setOtherUnformattedID:
setPTaskStore:
setPadding:
setParentChatID:
setParticipantChangeType:
setParticipants:
setPendingENGroupParticipantUpdate:
setPendingNicknameUpdates:
setPendingNicknameUpdatesKVStore:
setPendingReadReceiptFromStorageCount:
setPerRecordCompletionBlock:
setPerRecordProgressBlock:
setPerRecordSaveBlock:
setPerTransferProgress:
setPersistenceQueue:
setPersonCentricGroupedChatsCache:
setPersonCentricID:
setPersonalNickname:
setPersonalNickname:completionBlock:
setPersonalNickname:oldRecordID:completionBlock:
setPhotoLibrary:
setPredicate:
setPreviousServerChangeToken:
setPrivateWorkQueue:
setProcessingTimer:
setProperties:
setProperties:ofParticipant:inChat:style:
setProperties:ofParticipant:inChatID:identifier:style:
setProperties:ofParticipant:inChatID:identifier:style:account:
setProtobufAction:forIncomingRequestsOfType:
setPushConnection:
setQualityOfService:
setQuantity:
setQuickSwitchIDSService:
setRecentMessageIDs:
setRecordChangedBlock:
setRecordFetchedBlock:
setRecordID:
setRecordIDToTransferMap:
setRecordType:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setRecordZoneManager:
setRecordsWriteFailed:
setRecordsWritten:
setRecoverableErrorForTransfer:error:
setRecovered:
setRegistrationStatus:error:alertInfo:
setRemoteObjectInterface:
setRemovedFromBackup:
setReplayControllerNeedsSync:
setReplyDelegate:
setRepresentedApplicationBundle:
setResultHandlerQueue:
setResultsLimit:
setRetryTimer:
setRetryToParticipant:
setRoomName:
setSaltZoneCreatedOverride:
setSavePolicy:
setSender:
setSenderHandle:
setServerBag:
setServerChangeToken:
setService:
setServiceDisconnectReason:
setServiceLoginStatus:
setServiceLoginStatusMessage:
setServiceProperties:
setSession:
setShareDirection:
setShareURLsToContexts:
setSharedDaemon:
setSharedDefaultsInstance:
setShouldReloadConversations:
setShouldSendMeCard:
setShowingFailure:
setSortDescriptors:
setSortID:
setSpamExtensionCutoffTime:
setSr:
setStartingEnabledSettingChange:
setStartingInitialSyncSetByCloudKitHooks:
setStartingInitialSyncWithRecordType:
setStartingPeriodicSyncSetByCloudKitHooks:
setStartingPeriodicSyncWithRecordType:
setState:
setStateCaptureAssistant:
setStatus:
setStickerPackGUIDToPackMap:
setStickerUserInfo:
setStorageController:
setStorageTimer:
setStorageTimerInterval:
setStore:
setStyle:
setSubService:
setSubServiceName:
setSubject:
setSubscriptionValidationTokenByHandleIDCache:
setSuppressDatabaseUpdates:
setSwiftImplementation:
setSwyAppName:
setSyncControllerRecordType:
setSyncControllerSyncState:
setSyncControllerSyncState:withRecordType:
setSyncControllerSyncType:
setSyncStartDate:
setSyncTaskByServiceName:
setSyncTaskCompletionBlock:
setSyncTaskFactory:
setSyncToken:
setSyncTokenStore:
setSyncedSyndicationRanges:
setSyncing:
setSyncingEnabled:
setSyncingFinished
setSyncingPaused:
setSyndicationIdentifierOnMomentSharedAsset:
setSyndicationRanges:
setTaskFlag:
setTaskGroupedByServiceName:
setTelemetryReporter:
setThreadGuid:
setThreadIdentifier:
setThreadPart:
setTime:
setTimeDelivered:
setTimeExpressiveSendPlayed:
setTimeExpressiveSentPlayed:
setTimePlayed:
setTimeRead:
setTitle:
setTotalBytes:
setTransferTimer:
setTransferredFilename:
setTransferringTransfers:
setType:
setUnexpectedlyLoggedOut:
setUnformattedID:
setUseDeprecatedApi:
setUseZoneWidePCS:
setUserInfo:
setUsesNotificationCenter:
setVCCapabilities:
setValidCodes:
setValue:
setValue:forDomain:forKey:
setValue:forKey:
setValue:ofPersistentProperty:
setValue:ofProperty:
setValue:ofProperty:ofPerson:
setValue:ofProperty:ofPerson:account:
setVariant:
setVersion:
setVisitedChats:
setVocabulary:
setVocabulary:ofType:
setWantsNotificationResponsesDelivered
setWasDetectedAsSWYSpam:
setWasDisabledAutomatically:
setWasReportedAsJunk:
setWatchesSystemLockState:
setWithArray:
setWithObject:
setWriteMsgIDToRowIDMap:
set_broadcasterForTesting:
set_lock:
set_targets:
setiCloudBackupsDisabled:
setupComplete
setupComplete:info:
shareDirection
shareStatus
shareURL
shareURLsToContexts
sharedAccountController
sharedController
sharedDaemon
sharedDatabase
sharedDefaultsInstance
sharedFeatureFlags
sharedIdentifier
sharedInstance
sharedInstanceForBagType:
sharedManager
sharedMomentSharePhotoLibrary
sharedProvider
sharedToneManager
sharedVocabulary
shouldCheckForSpamWithExtensionInChat:fromIdentifier:toIdentifier:
shouldCollectDailyLogDump
shouldCollectDailyLogDumpForRestoreFailures
shouldCreateActiveAccounts
shouldDisplayAttachmentDownloadFailure
shouldDisplayRemoteDecryptionFailure
shouldDownloadAssetsOfSize:refreshCachedValue:
shouldFilterUnreadMessageCount
shouldForceAccountsActive
shouldForceAccountsConnected
shouldImitateGroupChatUsingChatRooms
shouldInferRecoverableDeleteForCommandDictionary:
shouldKickOffWriteForSyncType:
shouldLogDumpOnCloudKitError
shouldMarkAllIncompatibleMessagesForDeletion
shouldPublishNowPlaying
shouldReloadConversations
shouldRepairAccountWithAccountStatus:securityLevel:
shouldReportToAnalytics
shouldReportToRTC
shouldSendMeCard
shouldSendNotice:
shouldSendTypingIndicator
shouldSendWithNotice:
shouldStoreMessage
shouldUseDevContainer
shouldUseDevNickNameContainer
showForgotPasswordNotificationForAccount:
showInvalidCertNotificationForAccount:
showPinningStatusTextForBundleID:
showingFailure
signedIntoiCloudAndiMessageAndiCloudAccountMatchesiMessageAccount
silenceChat:untilDate:
simSubscriptionsDidChange
simplifiedError:
simulateMessageReceive:serviceName:groupID:handles:sender:
simulateMessageReceive:serviceName:groupID:handles:sender:date:associatedMessageType:associatedMessageGuid:
simulateOneTimeCodeArriving:
size
sizeOfAssetForRecord:
sizePreview:constraints:completionBlock:blockUntilReply:
sizePreviewsForTransferGUIDs:
smsHandshakeState
sortDescriptorWithKey:ascending:
sortID
sortPersonCentricChatGroups:
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
source
spamExtensionCutoffTime
spokenPhrase
spotlightItemRecorder
spotlightItemRecorderClass
stagedActivitySession
standardUserDefaults
start
startDate
startFinalizingTransfer:
startListening
startRecordingReplayDatabase
startSyncTask:
startTimingForKey:
startTrackingCode:
startTransfer:
startWatchingBuddy:
startWatchingBuddy:account:
startingEnabledSettingChange
startingInitialSyncSetByCloudKitHooks
startingPeriodicSyncSetByCloudKitHooks
state
stateCaptureAssistant
stateDictionaryForDiagnosticsRequest
status
stepAfter:
stickerPackGUIDToPackMap
stickerPackRemoved:
stickerPackUpdated:
stopListening
stopRecordingMessagesReplayDatabase
stopTimingForKey:
stopWatchingBuddy:
stopWatchingBuddy:account:
storageController
storageTimer
storageTimerInterval
store
storeAndBroadcastChatChanges
storeAttachment:associateWithMessageWithGUID:
storeAttachment:associateWithMessageWithGUID:chatGUID:storeAtExternalLocation:
storeChat:
storeDictionary:error:
storeEditedMessage:editedPartIndex:editType:previousMessage:chat:updatedAssociatedMessageItems:
storeItem:forceReplace:
storeItem:inChatGUID:
storeItem:toChat:style:
storeMessage:forceReplace:modifyError:modifyFlags:flagMask:
storeMessage:forceReplace:modifyError:modifyFlags:flagMask:updateMessageCache:calculateUnreadCount:
storeMessage:forceReplace:modifyError:modifyFlags:flagMask:updateMessageCache:calculateUnreadCount:reindexMessage:
storeMessage:type:error:
storePTask:
storeRecoverableMessagePartWithBody:forMessageWithGUID:deleteDate:
storedPersonalNickname
string
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAddingURLEscapes
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExpandingTildeInPath
stringByRemovingCharactersFromSet:
stringByRemovingWhitespace
stringByResolvingAndStandardizingPath
stringByStandardizingPath
stringByTrimmingCharactersInSet:
stringForChatStyle:
stringGUID
stringValue
stringWithFormat:
stringWithString:
stringWithUTF8String:
style
subCategory
subService
subServiceName
subarrayWithRange:
submitCloudKitAnalyticWithDictionary:operationGroupName:completion:
submitCloudKitAnalyticWithOperationGroupName:analyticDictionary:
submitCloudKitMetricWithData:operationGroupName:completion:
submitCloudKitMetricWithOperationGroupName:
subscriptionCreatedOverride
subscriptionID
subscriptionReceivedStatusUpdate:
subscriptionServiceDaemonDisconnected:
subscriptionStateChanged:
subscriptionValidationToken
subscriptionValidationTokenByHandleIDCache
subscriptionValidationTokenForHandle:completion:
subscriptionValidationTokensForHandle:completion:
substringFromIndex:
substringRecordIDForNickname:
substringToIndex:
superclass
supportedServiceNames
supportsDataDetectors
supportsDatabase
supportsDeviceToDeviceEncryption
supportsFaceTime
supportsSimultaneousVoiceAndDataRightNow
surfURLForIMMessageItem:
swiftImplementation
syncAttachmentDeletesToCloudKitWithActivity:completion:
syncAttachmentMetadataFirstSyncWithActivity:deviceConditionsToCheck:completionBlock:
syncAttachmentsWithSyncType:deviceConditionsToCheck:activity:completionBlock:
syncBatchCompleted:
syncChats
syncChatsWithMessageContext:
syncChatsWithType:withActivity:completion:
syncCompleteRecordID
syncController:syncBatchCompleted:
syncControllerRecordType
syncControllerSyncState
syncControllerSyncType
syncDeletedMessagesToCloudKitWithCompletion:
syncDeletesToCloudKit
syncDeletesToCloudKitWithActivity:completion:
syncErrors
syncFailureMetricString:isRecoverable:error:
syncMessages
syncMessagesWithSyncType:deviceConditionsToCheck:activity:completionBlock:
syncPendingDeletionWithCompletion:
syncRemovedRecoverableMessagesToCloudKitWithCompletion:
syncReportDictionary
syncReportDictionaryForAttempt:withSuccess:duration:
syncStartDate
syncState
syncStateDebuggingInfo:
syncStateDidUpdate:
syncStateWillUpdate:
syncTaskByServiceName
syncTaskCompletionBlock
syncTaskType
syncToken
syncTokenStore
syncUserType
syncWithType:withActivity:withCompletion:
synchronize
synchronizeServiceDefaults
syncingEnabled
syncingPaused
syndicatedItemType
syndicationIdentifier
syndicationLibrary
syndicationRanges
syndicationStartDate
syndicationStatus
systemApplicationDidBecomeActive
systemApplicationDidEnterBackground
systemApplicationDidResume
systemApplicationDidResumeForEventsOnly
systemApplicationDidSuspend
systemApplicationDidSuspendForEventsOnly
systemApplicationWillEnterForeground
systemApplicationWillResignActive
systemDidBecomeIdle
systemDidBecomeUnidle
systemDidEnterDataProtectionLock
systemDidEnterMemoryPressure
systemDidFastUserSwitchIn
systemDidFastUserSwitchOut
systemDidFinishMigration
systemDidLeaveDataProtectionLock
systemDidLeaveFirstDataProtectionLock
systemDidLeaveMemoryPressure
systemDidLock
systemDidStartBackup
systemDidStopBackup
systemDidWake
systemProxySettingsFetcher:retrievedAccount:password:
systemProxySettingsFetcher:retrievedHost:port:protocol:
systemRestoreStateDidChange
systemScreenDidPowerDown
systemScreenDidPowerUp
systemWillShutdown
taskFlags
taskGroupedByServiceName
tearDownSessionForChatIdentifier:
tearDownToneNotificationSessionIfNeeded
telemetryReporter
telephonyCountryCodesEligibleForJunkFiltering
terminateForcingIfNeeded:
testOverrideTextValidationDidFail
textMessageWithMessage:embeddedURLs:
threadDictionary
threadGuid
threadIdentifier
threadOriginator
threadPart
thresholdForNoticeType:
time
timeDelivered
timeExpressiveSendPlayed
timeExpressiveSentPlayed
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timePlayed
timeRead
timerWithTimeInterval:repeats:block:
timingComingBackFromStorage
title
toggleiCloudBackupsIfNeeded
tokenForKey:
totalBytes
totalChangeCount
totalTimeForKey:
trackAction:extensionBundleID:isNotification:
trackEvent:
trackEvent:withCount:
trackEvent:withDictionary:
trackEvent:withStatistic:
transactionLogMessageFromDictionaryRepresentation:
transcodeLocalTransferPayloadData:balloonBundleID:completionBlock:
transferForGUID:
transferForGuid:
transferGUIDOfRecord:
transferMetaDataFromRecord:
transferServicesController
transferState
transferTimer
transferredFilename
transferringTransfers
trimmedString
truncatedSortedChatsGroupedByPersonCentricID:count:pinnedChatIdentifiers:
truthContainer
truthDatabase
truthPublicDatabase
tryToAutoCollectLogsWithErrorString:sendLogsTo:
tryToDisableAllDevices
tryToRepairCallerID:forIDSAccount:
type
unEnrollDeviceForSMSRelay:account:
unEnrollDeviceInSMSRelay:
unarchiveChat:
unarchiveNoticeTransmissionEvent:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unblackholeAndLoadChatWithHandleIDs:reply:
unblackholeChat:
uncachedAttachmentCountQuery:chatID:services:finishedWithResult:
unexpectedlyLoggedOut
unformattedID
unionSet:
uniqueID
unload
unloadServiceBundle
unlock
unprefixedURI
unreadCount
unreadCountChanged:
unreadCountForChat:
unreadMessagesCount
unreadMessagesWithHandles:onServices:limit:fallbackGUID:
unreadMessagesWithRoomNames:onServices:limit:fallbackGUID:
unregisterAccount
unregisterAccount:
unregisterChangeObserver:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unvalidateAliases:
unvalidateAliases:account:
updateAccountActivation
updateAccountWithAccountInfo:
updateAttachment:
updateAttachment:chatGUID:storeAtExternalPath:
updateAttachmentFileSizes
updateAttachmentFileSizesWithActivity:
updateAuthorizationCredentials:token:
updateAuthorizationCredentials:token:account:
updateBadgeForLastFailedMessageDateChangeIfNeeded:
updateBadgeForUnreadCountChangeIfNeeded:
updateBalloonPayload:attachments:forMessageGUID:
updateChatGUID:withLastReadTimeStamp:withLastSeenMessageGUID:fromMe:
updateChatUsingCKRecord:
updateChatWithGUID:serverChangeToken:recordID:
updateCloudKitRecordID:
updateCloudKitState
updateCloudKitStateWithDictionary:
updateCloudKitSyncState:
updateConnectedToPowerWifiIntervalIfConnected
updateConnectionMonitorWithLocalSocketAddress:remoteSocketAddress:
updateDisplayName:
updateDisplayName:fromDisplayName:forChatID:identifier:style:
updateDisplayName:sender:
updateDonationStateWithSyndicationAction:
updateEngroupCreationDate:
updateFaceTimeGroupName:
updateFaceTimeGroupPhoto:
updateFileTransfer:
updateGroupID:
updateGroupIDForChat:newGroupID:
updateGroupPhotoGuid:
updateGroupPhotoUploadFailureCount:
updateHandle:sourceMessage:personCentricID:onService:
updateHasHadSuccessfulQuery:
updateIsBlackholed:
updateIsEmergencyChat:
updateIsFiltered:
updateIsRecovered:
updateIsiMessageSpam:
updateLastAddressedHandle:
updateLastAddressedHandle:forceUpdate:
updateLastAddressedSIMID:
updateLastMessageForChat:hintMessage:
updateLastMessageForChat:hintMessage:historyQuery:
updateLastMessageGUID:forLanguageCode:
updateLastReadMessageTimeStampIfNeeded:
updateLastSeenMessageGuidIfNeeded:
updateLatestActiveDestination:ForHandle:incomingType:
updateLegacyTransferGUIDIfNeeded:transfersToSync:
updateLegacyTransferGUIDOnMessageIfNeeded:
updateMeCardHasUpdatedForAllChats
updateMessage:
updateMessage:withIndexesOfDeletedItems:withIndexToRangeMapOfDeletedItems:deleteDate:
updateMessageHandshakeState:
updateMessagesGroupName:onConversation:
updateMessagesRanges:withMessagePartSyndicationRanges:didUpdate:
updateNicknameData:
updateNicknameHandlesForSharing:blocked:
updateNotice:
updateNotificationUnreadCountForChat:
updateNumberOfTimesRespondedToThread
updateOriginalGroupID:
updatePendingNicknameUpdates:handledNicknameUpdates:
updatePersonCentricIDForHandlesInChatWithMessage:fromIdentifier:personCentricID:chat:
updatePersonalNickname:
updatePostedNotificationsForMessageGUIDs:
updateProperties:
updateProperties:chat:style:
updateReceivedBlackholeError:
updateRecordZone
updateRecordZoneID
updateRecoverableMessageSyncState:forMessageRowID:onPartIndex:
updateSMSCategory:subCategory:
updateSMSHandshakeState:
updateSMSSpamExtensionNameChatProperty:
updateSecurityLevelDowngradedIfNeeded:
updateServerChangeToken:
updateShouldForceToSMS:
updateStamp
updateStateForChat:forcePost:
updateStateForChat:forcePost:shouldRebuildFailedMessageDate:
updateStateForChat:forcePost:shouldRebuildFailedMessageDate:setUnreadCountToZero:
updateStateForChat:forcePost:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:
updateStateForChat:fromMessage:toMessage:forcePost:hintMessage:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:setUnreadCountToZero:
updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:
updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:setUnreadCountToZero:
updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:
updateSyncController
updateSyncedSyndicationRanges:forGUID:
updateSyndicatedMessageWithMessageGUID:newRange:
updateSyndicatedMessageWithMessageItem:newRange:
updateSyndicatedMessageWithSyndicationMessageAction:
updateTaskFlagsForPTask:
updateTransfer:currentBytes:totalBytes:
updateTransfer:withPreviewSize:forConstraints:
updateTransferAsWaitingForAccept:
updateTransferGUID:toGUID:
updateTransferIn:fromGUID:toGUID:
updateTransfersWithCKRecord:recordWasFetched:downloadAsset:
updateUnformattedID:forBuddyID:onService:
updateUnreadCountForChat:
updateVocabularyForAddedChat:completionHandler:
updateVocabularyForDeferredUpdateRequestIfNecessaryWithCompletionHandler:
updateVocabularyForDeletedChat:completionHandler:
updateVocabularyForRenamedChat:completionHandler:
updatedMessagesForMessages:
uploadDailyAnalyticstoCloudKit
useChatRoom:forGroupChatIdentifier:
useDeprecatedApi
useSSL
userInfo
userNicknameForRecordID:decryptionKey:requestID:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationDidFinish:
userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:
utiTypeForRecord:
uuid
validCodes
validateAliases:
validateAliases:account:
validateMD5HashForRecord:
validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:fromSender:completion:
validatePersonalStatusSubscriptionMatchesSubscriptionValidationTokens:fromSender:completion:
validateProfileAccount:
validateProfileWithAccount:
validationStatusForAlias:
validationStatusForAlias:onAccount:
validityOfChatRoomName:
value
valueForEntitlement:
valueForKey:
valueOfPersistentProperty:
valueOfProperty:
valueWithBytes:objCType:
valuesByKey
vcCapabilitiesChanged:
verifyPersonalSubscriptionMatchesSubscriptionValidationToken:encryptionValidationToken:receivedByHandleID:fromHandleID:messageDate:
verifyTextMessage:completionHandler:
verifyTruncatedRecordIDMatchesPersonalNickname:forChat:
vettedAliases
viewContext
visitedChats
vocabulary
vocabularyIdentifier
waitForLoadedChatsWithCompletionHandler:
wantsAssetFromRecord:
warnIfPortBlocked:forAction:
wasDeliveredQuietly
wasDisabledAutomatically
wasReportedAsJunk
weakRefWithObject:
weakToStrongObjectsMapTable
wellKnownPhotoLibraryURLForIdentifier:
whitespaceAndNewlineCharacterSet
writeAccount:defaults:
writeAccountDefaults:
writeAttachments
writeCloudKitSyncCounts:
writeDataPayloadToDisk:fileName:
writeDirtyMessages
writeExitRecordWithDate:completion:
writeInitialSyncCompletedRecordIfNeeded
writeMsgIDToRowIDMap
writeSyncCompletedRecordWithDate:completion:
writeToFile:atomically:encoding:error:
writeToFile:options:error:
writeToURL:atomically:
writeToURL:error:
zone
zoneID
zoneName
@40@0:8@16@24@32
@16@0:8
v24@0:8@16
v16@0:8
q16@0:8
v24@0:8q16
@"NSMutableDictionary"
@"NSURL"
@"IMMessageItem"
@"IMDChat"
@"PHMomentShare"
@"PHFetchResult"
v20@0:8B16
B16@0:8
v32@0:8i16i20@24
i16@0:8
v40@0:8I16@20i28@32
v28@0:8I16@20
I16@0:8
v20@0:8I16
v20@0:8i16
@"NSString"
@"IMDService"
@"IMDServiceSession"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8Q16
@"<IMDMessageHistorySyncTask>"24@0:8Q16
@"IMDCKSyncController"
@"IMDAccountController"
@"IMDReplayController"
v32@0:8q16@24
v28@0:8@16B24
v32@0:8@16@24
v28@0:8@"IDSAccount"16B24
v32@0:8@"IDSAccount"16@"NSArray"24
B32@0:8@16@24
@32@0:8@16@24
@24@0:8@16
@"NSSet"
v32@0:8Q16@24
v24@0:8@"IMDCKSyncState"16
@48@0:8@16@24@32@40
v32@0:8@16@?24
v24@0:8@?16
B32@0:8q16Q24
v32@0:8@16B24B28
v40@0:8@16B24B28@32
v48@0:8@16B24B28@32@40
@36@0:8@16B24@28
B24@0:8q16
B28@0:8@16B24
v40@0:8@16q24@32
v48@0:8q16@24q32@40
@24@0:8q16
v48@0:8q16B24Q28B36d40
v36@0:8@16i24@28
v48@0:8@16i24@28B36@?40
v48@0:8@16B24B28B32B36@40
v40@0:8q16B24B28B32B36
v68@0:8q16B24B28B32B36B40B44B48B52B56Q60
v52@0:8@16i24@28B36B40@?44
v32@0:8@?16d24
@"IMDCKSyncState"
@"IMLockdownManager"
@"IDSServerBag"
@"FTDeviceSupport"
@"IMDefaults"
@"IMDSyncTelemetryReporter"
v24@0:8@?<v@?Q>16
@?24@0:8@16
@?16@0:8
v32@0:8Q16Q24
v48@0:8@16Q24@32Q40
@72@0:8@16{?=[8I]}24Q56@64
{?=[8I]}16@0:8
@"<IMDaemonListenerProtocol>"
{?="val"[8I]}
v32@0:8@"NSString"16@"NSString"24
@"CKServerChangeToken"24@0:8@"NSString"16
v32@0:8@"CKServerChangeToken"16@"NSString"24
@"NSBundle"
@"NSDictionary"
v40@0:8@16@24@?32
@44@0:8@16@24@32B40
@"NSDate"
@"IMDaemonCoreHelloWorldClass_Impl"
@"NSArray"
@"NSTimer"
@"IMOneTimeCodeUtilities"
q24@0:8@16
I24@0:8@16
@"NSDictionary"16@0:8
v24@0:8d16
@"<IMDMessagePTaskStore>"
@76@0:8@16@24Q32B40@44Q52^Q60B68B72
v56@0:8@16@24B32B36@40@48
v24@0:8@"IMConnectionMonitor"16
v28@0:8B16@20
v40@0:8@16@24@32
v52@0:8@16@24@32C40@44
v76@0:8@16@24@32C40@44@52@60@68
v36@0:8@16@24C32
v52@0:8@16@24@32@40C48
v44@0:8@16@24@32C40
v44@0:8@16@24B32@?36
v60@0:8@16@24@32@40C48@?52
v76@0:8@16@24q32Q40@48C56@60@68
v60@0:8@16@24@32@40@48C56
v48@0:8@16@24@32@40
v48@0:8@16I24I28@32@40
v64@0:8@16@24@32@40@48@56
v196@0:8@16@24@32@40@48@56@64@72@80@88B96B100B104B108B112B116@120@128@136@144@152@160@168@176B184@?188
v52@0:8@16@24@32@40B48
v24@0:8@"IMDAccount"16
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
v32@0:8@"NSString"16@"NSDictionary"24
v28@0:8B16@"NSString"20
v40@0:8@16@"NSString"24@"NSString"32
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v52@0:8@"NSString"16@"NSDictionary"24@"NSString"32C40@"NSDictionary"44
v76@0:8@"NSString"16@"NSDictionary"24@"NSString"32C40@"NSString"44@"NSString"52@"NSString"60@"NSDictionary"68
v36@0:8@"NSString"16@"NSString"24C32
v52@0:8@"NSDictionary"16@"IMMessageItem"24@"NSString"32@"NSString"40C48
v52@0:8@"NSString"16@"NSString"24@"NSString"32C40@"NSString"44
v44@0:8@"NSDictionary"16@"NSString"24@"NSString"32C40
v52@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40C48
v32@0:8@"NSDictionary"16@"NSArray"24
v24@0:8@"NSURL"16
v44@0:8@"IMMessageItem"16@"NSString"24@"NSString"32C40
v24@0:8@"IMMessageItem"16
v44@0:8@"NSString"16@"NSString"24B32@?<v@?B>36
v60@0:8@"IMMessageItem"16@"NSString"24@"NSString"32@"NSString"40C48@?<v@?B>52
v76@0:8@"IMMessageItem"16@"IMMessageItem"24q32Q40@"NSString"48C56@"NSString"60@"NSAttributedString"68
v32@0:8@"IMSyndicationAction"16@"NSArray"24
v52@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40C48
v24@0:8@"NSArray"16
v28@0:8@"NSDictionary"16B24
v40@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32
v60@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSString"48C56
v32@0:8@"NSDictionary"16@"NSString"24
v40@0:8@"NSString"16@"NSDictionary"24@"NSString"32
v48@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSNumber"40
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v48@0:8@"NSString"16I24I28@"NSDictionary"32@"NSString"40
v32@0:8@"NSArray"16@"NSString"24
B32@0:8@"NSDictionary"16@"NSArray"24
B24@0:8@"NSString"16
v64@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSNumber"40@"NSString"48@"IDSAccount"56
v196@0:8@"IMMessageItem"16@"IMDChat"24@"IMDAccount"32@"NSData"40@"NSString"48@"NSString"56@"NSString"64@"NSArray"72@"NSString"80@"NSString"88B96B100B104B108B112B116@"NSNumber"120@"NSDictionary"128@"NSDictionary"136@"NSArray"144@"NSDictionary"152@"NSString"160@"NSString"168@176B184@?<v@?>188
v52@0:8@"IMDChat"16@"NSNumber"24@"NSString"32@"NSString"40B48
@28@0:8@16i24
@20@0:8B16
S16@0:8
@"NSRecursiveLock"
@"IMDAccount"
@"NSMutableArray"
@"NSMutableSet"
@"IMTimer"
@"<IMDAutoReplying>"
@"IMConnectionMonitor"
@"IMSystemProxySettingsFetcher"
@"IMDChatRegistry"
v32@0:8d16@24
B40@0:8@16@24@32
v48@0:8@16@24@32@?40
d16@0:8
@"__IMDBackwardCompatibilityMessageIdentifier"
@"NSError"
@"CKRecordID"
@"NSNumber"
@"NSObject<OS_dispatch_queue>"
@"IMDRecordZoneManager"
@"IMDCKDatabaseManager"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"CKRecordZoneID"
@"CKRecordZone"
@"APSConnection"
@40@0:8@16@24Q32
@56@0:8@16@24Q32@40@48
v24@0:8@"SKStatusSubscription"16
v24@0:8@"SKStatusSubscriptionService"16
v56@0:8@16@24@32@40@48
@"SKStatusSubscriptionService"
@"NSCache"
@24@0:8r*16
@"INVocabulary"
@"NSArray"16@0:8
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
v24@0:8Q16
@"IMDMessageStore"
@"IMTimingCollection"
@44@0:8@16@24B32^@36
@40@0:8@16@24^@32
@56@0:8@16@24@32Q40Q48
@32@0:8@16^q24
v24@0:8@"PHChange"16
v36@0:8@16@24B32
@"IMDCallManager_Impl"
v48@0:8q16Q24@32@?40
v52@0:8@16B24@?28@36@?44
B28@0:8B16@20
v52@0:8@16B24Q28Q36@?44
v60@0:8@16B24Q28Q36@44@?52
v36@0:8@16B24@?28
@40@0:8@16@24q32
Q32@0:8@16@24
v44@0:8@16@24C32@?36
v32@0:8q16q24
B40@0:8q16q24@32
v60@0:8@16q24@32B40@44@?52
v76@0:8B16q20q28q36q44@52@60@?68
B40@0:8q16@24@?32
v104@0:8@16@24@32B40B44q48q56@64q72q80@88@?96
v48@0:8@16@24@32q40
v32@0:8@16d24
v44@0:8@16B24@28@36
v32@0:8@16q24
v44@0:8@16B24@28@?36
@"IMDCKAttachmentSyncCKOperationFactory"
@"<IMDCKSyncTokenStore>"
v32@0:8@"IMKeyValueCollection"16@"NSDictionary"24
v44@0:8@16@24@32B40
B24@0:8B16B20
@36@0:8Q16B24d28
v32@0:8Q16q24
@"IMKeyValueCollection"
@"<IMDCKSyncStateDelegate>"
@"__IMDPlainTextTapbackInterpreterImpl"
@32@0:8q16@24
@40@0:8q16q24@32
@28@0:8@16B24
v56@0:8@16@24B32Q36I44I48S52
@48@0:8@16B24Q28I36I40S44
v40@0:8@16Q24Q32
v72@0:8@16@24{IMPreviewConstraints=d{CGSize=dd}dBB}32
v64@0:8@16@24{?=[8I]}32
v52@0:8@16@24B32B36q40B48
v44@0:8@16B24B28q32B40
B44@0:8@16@24@32B40
{IMPreviewConstraints=d{CGSize=dd}dBB}16@0:8
@64@0:8@16@24Q32q40@48@56
@48@0:8@16q24@32@40
@48@0:8@16@24Q32q40
Q24@0:8@16
B32@0:8@16q24
@"<IMDCollaborationNoticeDispatcherDelegate>"
@"IMDCollaborationNoticeRateLimiter"
@"IMDCollaborationClearNoticeRateLimiter"
@44@0:8@16@24i32Q36
B28@0:8Q16B24
q20@0:8i16
q24@0:8q16
@32@0:8@16Q24
Q40@0:8@16@24Q32
B32@0:8Q16@24
v56@0:8@16Q24Q32@40@?48
v40@0:8@"NSArray"16@"IMDChat"24@"NSString"32
@"<IMDAutoReplyDelegate>"16@0:8
v24@0:8@"<IMDAutoReplyDelegate>"16
v36@0:8@16B24@28
@"<IMDAutoReplyDelegate>"
@"CARAutomaticDNDStatus"
@32@0:8@16q24
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
@"IMDScreenTimeAskReponseHandler"
@"IMDFamilyInviteReponseHandler"
@"IMDAskToBuyResponseHandler"
@48@0:8@16@24Q32@40
v28@0:8B16@?20
B40@0:8@16@24Q32
@"IMNickname"
@"IDSKVStore"
B48@0:8@16@24@32B40B44
@44@0:8@16B24B28B32Q36
@52@0:8@16B24B28B32Q36B44B48
@56@0:8@16B24B28B32Q36B44B48B52
@44@0:8@16@24B32B36B40
@60@0:8@16@24@32@40Q48B56
@80@0:8@16@24@32Q40Q48@56^B64^B72
@56@0:8@16@24@32d40@48
@36@0:8i16@20@28
@48@0:8@16@24@32Q40
@56@0:8@16@24@32@40Q48
^{_IMDHandleRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}}32@0:8@16@24
v60@0:8@16@24C32@36Q44@?52
@44@0:8@16C24@28@?36
@36@0:8@16C24@28
@56@0:8@16@24C32@36@44B52
@64@0:8@16q24Q32@40@48^@56
@32@0:8q16Q24
@"IMStateCaptureAssistant"
@"PHFetchOptions"
@"PHPhotoLibrary"
@208@0:8@16@24@32@40@48@56@64@72@80@88@96q104C112q116B124@128@136q144@152q160q168@176B184q188@196B204
B32@0:8q16@24
C16@0:8
v20@0:8C16
v28@0:8@?16B24
@68@0:8@16@24@32@40@48@56B64
@88@0:8@16@24@32C40@44@52@60@68@76B84
@28@0:8@16C24
@36@0:8@16B24Q28
@44@0:8@16B24@28Q36
@36@0:8@16@24C32
@52@0:8@16@24@32@40C48
@44@0:8@16@24@32C40
@52@0:8@16@24B32@36@44
@64@0:8@16@24@32@40@48@56
v64@0:8@16@24@32B40@44B52B56B60
v40@0:8@16@24B32B36
v36@0:8@16B24B28B32
Q56@0:8@16C24@28@36@44B52
@68@0:8@16@24Q32B40@44Q52^Q60
@20@0:8C16
v40@0:8@16@24^@32
@36@0:8{_NSRange=QQ}16B32
B24@0:8@?16
B36@0:8@16@24C32
@32@0:8@16^B24
@40@0:8@16q24@32
@48@0:8q16B24@28B36@40
v32@0:8@16Q24
v40@0:8@16@24Q32
v28@0:8@16i24
v40@0:8@16@24q32
v80@0:8@16@24@32@40@48@56q64@72
v40@0:8^@16^@24@32
v40@0:8q16q24q32
@"NSData"
@"IMDCKUtilities"
@"IMDChatStore"
@"IMDMessageProcessingController"
@"IMDMessageHistorySyncController"
@"TUConversationManager"
@"CKContainer"
v32@0:8B16B20B24B28
B24@0:8^@16
@"CUTWeakReference"
B36@0:8@16@24B32
@24@0:8^{_IMDAttachmentRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}}16
^{_IMDAttachmentRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}}24@0:8@16
v24@0:8B16B20
@"<IMDCKAbstractSyncControllerDelegate>"
B40@0:8@16^@24^@32
v40@0:8@?16d24@32
v40@0:8@16Q24@?32
v40@0:8I16I20@24@?32
B48@0:8@16@24@32@40
v40@0:8@16q24q32
@"FMFSession"
Q24@0:8q16
v60@0:8@16@24@32B40@44@?52
B48@0:8@16Q24q32q40
v76@0:8@16@24B32q36q44@52@60@?68
v52@0:8B16q20q28@36@?44
v96@0:8@16@24@32B40@44q52q60q68B76@80@?88
B32@0:8q16q24
v56@0:8q16q24q32@40@?48
@"CKServerChangeToken"
@"IMDCKMessageSyncCKOperationFactory"
v40@0:8q16@24@?32
v48@0:8q16@24@32@?40
v52@0:8q16@24B32@36@?44
@"NSLock"
B36@0:8@16C24^@28
@"IMDReplayStorageController"
@"IMDReplayStorageIterationContext"
@36@0:8@16B24^B28
v40@0:8@"IMDXPCEventStreamHandler"16@"NSString"24@"NSDictionary"32
v32@0:8@"IMDCKAbstractSyncController"16Q24
@40@0:8q16@24^B32
v40@0:8Q16r*24@32
B72@0:8q16q24@32Q40@48@56@?64
v56@0:8@16Q24@32@?40@?48
v32@0:8@?16@24
@"NSMutableOrderedSet"
v80@0:8@16@24B32B36B40B44Q48@?56@?64@?72
v28@0:8@16C24
v36@0:8@16C24@28
v52@0:8@16C24@28@36@44
v60@0:8@16C24@28@36@44@52
v72@0:8@16C24@28@36@44@52@60B68
v80@0:8@16C24@28@36@44@52@60@68B76
v32@0:8^@16^C24
v48@0:8@16@24C32B36@?40
v56@0:8@16@24C32B36@40@?48
v44@0:8@16@24C32@36
v52@0:8B16@20@28@36@?44
v192@0:8@16@24@32@40@48@56@64@72@80@88B96B100B104B108B112B116@120@128@136@144@152@160@168@176@?184
v44@0:8@16C24@28@36
v68@0:8@16C24@28@36@44@52@60
v68@0:8@16C24@28@36@44q52@60
v64@0:8@16C24@28@36@44@52B60
v32@0:8i16@20C28
v32@0:8I16@20B28
v40@0:8I16@20B28@32
v44@0:8I16@20q28Q36
B48@0:8@16q24@32@40
v44@0:8@16q24@32B40
v48@0:8@16@24q32@?40
v84@0:8@16q24@32@40B48@52q60@68@?76
v76@0:8@16q24@32@40B48@52@60@?68
v52@0:8@16@24C32@36@44
v56@0:8@16@24C32@36@44B52
v60@0:8@16@24@32@40C48@52
v68@0:8@16@24@32@40C48@52@60
B52@0:8@16@24C32@36@44
B60@0:8@16@24@32C40@44@52
v40@0:8i16@20C28@32
v56@0:8i16@20C28@32@40@48
v64@0:8i16@20C28@32@40@48@56
v72@0:8i16@20C28@32@40@48@56@64
v68@0:8i16@20C28@32@40@48@56B64
v84@0:8i16@20C28@32@40@48@56@64@72B80
v80@0:8i16@20C28@32@40@48@56q64@72
v100@0:8i16@20C28@32@40@48@56@64@72q80@88B96
v40@0:8i16@20@28C36
v56@0:8i16@20@28@36@44C52
v64@0:8i16@20@28@36@44@52C60
v72@0:8i16@20@28@36@44@52C60@64
v80@0:8i16@20@28@36@44@52C60@64@72
v88@0:8i16@20@28@36@44@52C60@64@72@80
v44@0:8@16@24I32@36
v56@0:8@16@24@32@40@?48
v60@0:8@16@24C32@36@44@?52
v52@0:8@16@24@32B40@?44
v120@0:8@16@24@32@40@48@56@64@72Q80B88@92B100@?104@?112
B20@0:8B16
@"<IMDMessageHistorySyncTask>"
@"<IMDMessageHistorySyncTaskFactory>"
v48@0:8@16@24@?32q40
v44@0:8i16@20@28@?36
@"IMDCKChatSyncCKOperationFactory"
@"CKRecord"
@"IMDCollaborationNoticeDispatcher"
B24@0:8Q16
v48@0:8q16q24@32@?40
B24@0:8@"IMDMessagePTask"16
v68@0:8@16@24C32@36@44@52@60
{_FZChatRoomValidity=iS}24@0:8@16
@"IDSKVDeleteContext"
B32@0:8@16^@24
@32@0:8Q16^@24
@"NSMapTable"
B28@0:8i16@20
v44@0:8@16@24S32q36
v44@0:8@16i24@28@36
v52@0:8I16I20@24i32@36@44
v44@0:8@16@24Q32B40
v48@0:8@16@24Q32@40
v24@0:8@"TUConversationManager"16
v32@0:8@"TUConversationManager"16@"TUConversation"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversation"32
v32@0:8@"TUConversationManager"16@"NSArray"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationParticipant"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationActivityEvent"32
v44@0:8@"TUConversationManager"16@"TUConversation"24Q32B40
v32@0:8@"TUConversationManager"16@"NSString"24
v48@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationParticipant"32@"TUConversationNotice"40
v40@0:8@"TUConversationManager"16@"TUConversation"24@"NSSet"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationMember"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"NSData"32
v40@0:8@"TUConversationManager"16@"TUConversationMember"24@"TUConversationLink"32
v48@0:8@"TUConversationManager"16@"TUConversation"24Q32@"TUConversationActivitySession"40
v36@0:8@"TUConversationManager"16@"<TUScreenShareAttributes>"24B32
v32@0:8@"TUConversationManager"16@"NSError"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationActivitySession"32
v28@0:8@"TUConversationManager"16B24
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
@"IDSAccount"
v32@0:8@"IDSAccountController"16@"IDSAccount"24
v32@0:8@"NSString"16@"NSArray"24
@28@0:8i16@20
@"IDSAccountController"
@"IMDIDSService"
q32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v28@0:8I16@"NSString"20
v48@0:8@16Q24@32@?40
v40@0:8@16q24@?32
v48@0:8@"NSString"16Q24@"NSDictionary"32@?<v@?B@"NSDictionary">40
v48@0:8@"NSString"16Q24@"NSDictionary"32@?<v@?B@"IMXPCDictionary">40
v32@0:8@16@"NSString"24
v44@0:8@"NSString"16@"NSArray"24C32@"NSArray"36
v40@0:8@"NSString"16q24@?<v@?B>32
v44@0:8@"NSArray"16C24@"NSArray"28@"IMMessageItem"36
v32@0:8@"NSString"16q24
v44@0:8@"NSArray"16C24@"NSArray"28@"NSString"36
v32@0:8@"NSSet"16@"NSArray"24
v24@0:8@"NSSet"16
v24@0:8@"IMNickname"16
v40@0:8@"NSString"16@"NSData"24@"NSString"32
v32@0:8@"NSString"16B24B28
v48@0:8@16@"NSString"24@"NSString"32@"NSString"40
v28@0:8@"NSString"16B24
v48@0:8@"IMCollaborationNoticeTransmission"16@"NSSet"24@"NSString"32@?<v@?B>40
v40@0:8@"IMCollaborationClearTransmission"16@"NSSet"24@?<v@?B>32
v40@0:8@"NSString"16q24@"NSString"32
v48@0:8B16@20@28B36@40
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSString"48
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSString"48@"NSDate"56q64@"NSString"72
v40@0:8@"NSDictionary"16@"NSDictionary"24@"NSArray"32
v48@0:8B16@"NSString"20@"NSString"28B36@"NSString"40
v28@0:8@"NSString"16i24
v32@0:8q16@"NSString"24
v36@0:8B16@20@28
v36@0:8B16@"NSString"20@"NSString"28
v52@0:8@16@24C32@36@?44
v52@0:8@"NSString"16@"NSArray"24C32@"NSArray"36@?<v@?B>44
v52@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44
v84@0:8@16@24C32@36q44@52@60@68@?76
v84@0:8@16@24@32C40@44q52q60@68@?76
v68@0:8@16@24C32@36q44@52@?60
v60@0:8@16@24C32@36q44@?52
v56@0:8@16@24C32@36B44@?48
v84@0:8@16C24@28q36@44@52@60@68@76
v84@0:8@16@24C32@36q44q52@60@68@76
v56@0:8@16C24@28@36@44B52
v60@0:8@16C24@28q36@44@52
v68@0:8@16C24@28q36@44@52@60
v84@0:8@"NSString"16@"NSArray"24C32@"NSArray"36q44@"NSString"52@"NSString"60@"NSString"68@?<v@?@"NSArray"@"NSArray">76
v84@0:8@"NSString"16@"NSString"24@"NSArray"32C40@"NSArray"44q52q60@"NSString"68@?<v@?@"NSArray"@"NSArray"BB>76
v68@0:8@"NSString"16@"NSArray"24C32@"NSArray"36q44@"NSString"52@?<v@?@"NSArray"@"NSArray">60
v52@0:8@"NSString"16@"NSArray"24C32@"NSArray"36@?<v@?@"NSArray">44
v60@0:8@"NSString"16@"NSArray"24C32@"NSArray"36q44@?<v@?@"NSArray">52
v52@0:8@"NSString"16@"NSArray"24C32@"NSArray"36@?<v@?Q>44
v68@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44@"NSString"52@"NSString"60
v56@0:8@"NSString"16@"NSArray"24C32@"NSArray"36B44@?<v@?Q>48
v40@0:8@"NSArray"16@"NSDate"24@"NSString"32
v32@0:8@"NSArray"16@?<v@?@"NSDictionary">24
v84@0:8@"NSArray"16C24@"NSArray"28q36@"NSString"44@"NSString"52@"NSString"60@"NSString"68@"NSString"76
v84@0:8@"NSString"16@"NSArray"24C32@"NSArray"36q44q52@"NSString"60@"NSString"68@"NSString"76
v56@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44B52
v60@0:8@"NSArray"16C24@"NSArray"28q36@"NSString"44@"NSString"52
v68@0:8@"NSArray"16C24@"NSArray"28q36@"NSString"44@"NSString"52@"NSString"60
v52@0:8@16C24@28@36q44
v56@0:8@16C24@28@36q44B52
v52@0:8@"NSArray"16C24@"NSArray"28@"NSArray"36q44
v56@0:8@"NSArray"16C24@"NSArray"28@"NSArray"36q44B52
v36@0:8@"NSArray"16C24@"NSArray"28
v52@0:8@16@24@32C40@?44
v72@0:8@16@24q32@40@48@56@64
v68@0:8@16@24@32@40@48@56C64
v48@0:8@16@24q32@40
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v32@0:8@"NSPredicate"16@?<v@?@"NSArray">24
v48@0:8@"NSPredicate"16@"NSDate"24q32@?<v@?@"NSArray">40
v52@0:8@"NSArray"16@"NSString"24@"NSString"32C40@?<v@?@"NSArray">44
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
v48@0:8@"IMMessageItem"16@"NSIndexSet"24@"NSDictionary"32@"NSDate"40
v32@0:8@"IMItem"16@"NSString"24
v72@0:8@"NSString"16@"NSString"24q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64
v52@0:8@"IMMessageItem"16@"NSString"24@"NSString"32C40@"NSString"44
v48@0:8@"NSData"16@"NSArray"24@"NSString"32@"NSString"40
v40@0:8@"NSData"16@"NSArray"24@"NSString"32
v60@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40C48@"NSString"52
v44@0:8@"NSString"16@"NSString"24C32@"NSString"36
v48@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40
v68@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56C64
v24@0:8@"IMCollaborationNotice"16
v32@0:8@"NSPredicate"16@"NSString"24
v48@0:8@"NSPredicate"16@"NSDate"24q32@"NSString"40
v52@0:8@"NSArray"16@"NSString"24@"NSString"32C40@"NSString"44
v40@0:8@"NSArray"16@"NSString"24@?<v@?B@"NSDictionary">32
v84@0:8@16@24@32C40@44@52@60@68@76
v32@0:8@"IMMessageItem"16@"NSString"24
v84@0:8@"NSString"16@"NSArray"24@"NSString"32C40@"NSString"44@"NSString"52@"NSString"60@"NSDictionary"68@"NSString"76
v60@0:8@"NSDictionary"16@"IMMessageItem"24@"NSString"32@"NSString"40C48@"NSString"52
v52@0:8@"NSDictionary"16@"NSString"24@"NSString"32C40@"NSString"44
v48@0:8@16@24B32B36q40
v48@0:8@"NSString"16@"NSString"24B32B36q40
v44@0:8@"NSString"16@"NSString"24@"NSArray"32B40
v32@0:8@"NSArray"16q24
v32@0:8@"NSString"16@"NSDate"24
v56@0:8@16I24I28@32@40@48
v48@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSString"40
v56@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSNumber"40@"NSString"48
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSString"16I24I28@"NSDictionary"32@"NSString"40@"NSString"48
v48@0:8@16I24@28@36B44
v48@0:8@"NSString"16I24@"NSDictionary"28@"NSString"36B44
v28@0:8B16@"NSDictionary"20
@"<IMDaemonListenerServiceProtocol>"24@0:8@"IMDService"16
@"<IMDaemonListenerChatProtocol>"24@0:8@"IMDService"16
@"<IMDaemonListenerChatProtocol>"20@0:8B16
@"<IMDaemonListenerNotificationsProtocol>"24@0:8@"IMDService"16
@"<IMDaemonListenerAVProtocol>"24@0:8@"IMDService"16
@"<IMDaemonListenerAnyProtocol>"16@0:8
@"<IMDaemonListenerAccountsProtocol>"16@0:8
@"<IMDaemonListenerChatProtocol>"16@0:8
@"<IMDaemonListenerChatDatabaseProtocol>"16@0:8
@"<IMDaemonListenerChatCountsProtocol>"16@0:8
@"<IMDaemonListenerFileProviderProtocol>"16@0:8
@"<IMDaemonListenerAVProtocol>"16@0:8
v44@0:8B16Q20@28@36
v44@0:8B16Q20@"NSString"28@"NSError"36
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"NSDictionary"16@"NSDictionary"24
v32@0:8@"NSSet"16@"NSSet"24
v48@0:8@16Q24Q32Q40
v40@0:8@"NSString"16@24@32
v32@0:8@"NSArray"16@"NSArray"24
v48@0:8@"NSString"16Q24Q32Q40
v32@0:8q16@"NSError"24
v56@0:8@16@24I32@36I44@48
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSDictionary"40
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSData"40
v56@0:8@"NSString"16@"NSString"24I32@"NSDictionary"36I44@"NSDictionary"48
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSDictionary"40
v36@0:8@"NSString"16@"NSString"24B32
v56@0:8@16@24@32@40q48
v72@0:8@16@24@32q40q48@56B64B68
v40@0:8@"NSString"16@"IMMessageItem"24@"NSArray"32
v56@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40q48
v72@0:8@"NSString"16@"NSString"24@"NSArray"32q40q48@"NSArray"56B64B68
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSNumber"40
v60@0:8@16@24C32@36@44@52
v72@0:8@16@24C32@36@44@52@60B68
v72@0:8@16@24C32@36@44@52i60@64
v64@0:8@16@24C32@36@44@52i60
v56@0:8@16@24@32@40B48B52
v32@0:8@"NSString"16d24
v32@0:8@"NSString"16@"NSNumber"24
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSDictionary"44
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSError"44
v36@0:8@"NSString"16B24@"NSString"28
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMMessageItem"44
v68@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52@"IMMessageItem"60
v60@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMMessageItem"44@"NSNumber"52
v68@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52@"IMItem"60
v72@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52@"NSArray"60B68
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMItem"44
v56@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMItem"44B52
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSArray"44
v44@0:8@"NSString"16@"NSString"24C32@"NSArray"36
v72@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52i60@"NSArray"64
v64@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSDictionary"52i60
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v32@0:8@"NSArray"16@"NSDictionary"24
v44@0:8@"NSString"16C24@"NSString"28@"NSDictionary"36
v56@0:8@"NSString"16@"NSNumber"24@"NSString"32@"NSString"40@"NSString"48
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48B52
v40@0:8@"NSString"16@"NSString"24@"NSError"32
v32@0:8@"NSURL"16@"NSError"24
v84@0:8@16@24@32@40I48B52@56Q64I72@76
v48@0:8@16I24@28i36@40
v28@0:8@16I24
v84@0:8@"NSString"16@"NSDictionary"24@"NSArray"32@"NSArray"40I48B52@"NSDictionary"56Q64I72@"NSString"76
v48@0:8@"NSString"16I24@"NSString"28i36@"NSDictionary"40
v32@0:8@"NSString"16Q24
v28@0:8@"NSString"16I24
v48@0:8@"NSString"16@"NSString"24@"NSData"32@"NSString"40
v40@0:8@"NSString"16@"NSDictionary"24@"NSDictionary"32
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSData"16
iMessage
FaceTime
@(#)PROGRAM:IMDaemonCore  PROJECT:IMDaemonCore-
%??O
UUUUUU
BackwardCompatibilityMessageIdentifier
BackwardCompatibilityMessageType
IMDaemonCore
DaemonCoreHelloWorldClass
IMDaemonCoreHelloWorld
IMDaemonCore
CallManager
IMDCollaborationClearNoticeRateLimiter
IMDaemonCore
IncomingClientConnectionListener
IncomingClientConnectionListening
TextInfixParser
WrappingPair
Liked "%
Disliked
Laughed 
Emphasiz
Question
PlainTextTapbackInterpreter
IMAssociatedMessageType
_NSRange
UncheckedSendable
ClientRequestHandling
DaemonWorkActor
IMDInternalWorkQueue
IMDaemonCore
ClientConnectionManager
MessagesClientCapabilities
NIMClientCapabilities
IMSharedUtilities
IMDaemonCore
CollaborationNoticeStore
ClientConnection
audit_token_t
ClientConnectionManaging
PersistedCollaborationNotice
IMDMessagePTaskStoreAddedProcessingTask
Initial
FetchMomentShare
Accepting
FetchingAssets
GeneratingTransfers
Invalid Ingestion State: %ld
IMDAccount
Creating account id: %@    defaults: %@    on service: %@
IMDAccount: incoming 'defaults' is not a dictionary, %@, %@
AccountManaged
%@ - write account defaults: %@
accountID
accountDefaults
capabilities
serviceLoginStatus
serviceLoginStatusMessage
buddyProperties
groups
Session
%@: Telling session it became active
%@: Forcing login
-[%@ _forceSetLoginStatus:%d message:%@ reason:%d properties:%@] session=%@
read-receipt-tracking
IMDAccountController
Loading services: %@ (First load: %@)
Loading service: %@
service: %@ has been discontinued. Loading default disabled account
   Creating account with ID: %@
   Creating persistent session with ID: %@
  Service wants new accounts active, setting active: %@
 Not loading accounts from defaults, appears to be IDS Based: %@
 Found accounts: %@
 Loading: %@
 Done
  Setting active accounts: %@
  Service wants accounts always active, setting active: %@
Logging in previously logged in accounts: %@
  * Logging in previously logged in account: %@
  * No account found for account ID: %@
Done loading service: %@
iMessage
PlaceholderAccount
Done loading all services
   Found account: %@
      => Disabled, continuing
      Found service: %@
      => Service discontinued, skipping.
      Adding account: %@ to active set: %@
Reusing session: %@
      Active account set is: %@
      Building sesssion
      Enable the associated account
Tried to deactivate an account, but found no account: %@
Tried to deactivate an account, but found no service; %@
Add account: %@
Remove account: %@
B16@?0@8
@16@?0@8
activeSessions = %@
Could not find a service session for string: %@, account: %@, allAccounts: %@
IMDAccountController: Could not find a service for string: %@
IMDAccountController: Could not find an account for serviceString: %@, accountsForService: %@, accounts: %@
IMDAccountController: Could not find a session for account: %@
Rebuilding operational accounts, old: (%@)  new: (%@)
Operational accounts changed
__kIMDBadgeUtilitiesOperationalAccountsChangedNotification
com.apple.madrid
IDS account %@ is active %@ can send %@ is madrid account %@
calling setNetwork %@
  => broadcasting
FaceTime
Receiving id (%@) with country code (%@) is a candidate for spam filtering.
Receiving id (%@) with country code (%@) is not a candidate for spam filtering.
Receiving id (%@) with region (%@) is a candidate for spam filtering.
Receiving id (%@) with region (%@) is not a candidate for spam filtering.
Found an account (%@) that isn't IMDIDS (%@), can't determien region -- falling through.
ReceivePipelineJunk
Receiving ID: %@ has country code: %@
Receiving id (%@) with country code (%@) is a candidate for Oscar filtering.
Receiving ID: %@ has region: %@
Region (%@) is a candidate for Oscar filtering.
Found an account (%@) that isn't IMDIDS (%@), can't determine region -- falling through.
IMDCKUtilitiesErrorDomain
CKSubType
IMD-IDS-Aliases
selectedAliases
allAliases
com.apple.Messages
IMDCKUtilities
%@/CKMessagesLogDump/
key roll pending check returned: %@
Added key roll pending error to sync state
Not performing key roll check didKeyRollPendingCheck %@ cloudKitSyncingEnabled %@
fetchCloudKitAccountStatusAndCheckForAccountNeedsRepairWithCompletion failed with error: %@
v24@?0q8@"NSError"16
updating key roll pending state
shouldForceArchivedMessagesSync
v20@?0B8@"NSError"12
Get file size on path: %@
Check if there is enough iCloud quota
User quota completion block return with available Quota %llu, and Error: %@
Available Quota in bytes:  and message database size: %llu, %llu
v24@?0Q8@"NSError"16
Madrid server bag does not allow us to sync. Our client version %d server client version %ld
_shouldiCloudSwitchBeEnabled is FALSE as iCloud and iMessage accounts do not match up
_shouldiCloudSwitchBeEnabled is FALSE because server does not allow sync
_shouldiCloudSwitchBeEnabled is FALSE because we are in exit state. Is moc feature enabled %@
We are not in exit state, _shouldiCloudSwitchBeEnabled is based on whether feature is enabled or not: %@
ck-client-min-version
**** cloudKitSyncingEnabled is turned off in this build
Setting cloudkit enabled: %@
Starting initial sync
IMDCKCacheDeleteManager
Attachment watermark reset to 0
ck-submit-metrics-min-version
ck-submit-analytics-min-version
ck-submit-analytics-details-min-version
server allows submitting metrics result %@ clientVersion %@ serverVersion %@
server allows submitting analytics result %@ clientVersion %@ serverVersion %@
server allows submitting analytics details result %@ clientVersion %@ serverVersion %@
Keep Messages value should be altered from %@ to 0
Resetting Keep Message setting to Keep forever.  VersionID: %ld
ck-cache-delete-version-V3
server allows cached delete check result %@ clientVersion %@ serverVersion %@
ck-enable-attachment-validation
enableAttachmentMetricCollection overridden by iMessage server
Should enable attachment metric-ing %@
CacheDeleteEnabled %@
ck-remove-from-backup-version-V3
server allows removal from backup result %@ serverVersion %@
This is an internal install so overriding server bag check and defaulting to yes
Removal from back up allowed %@
com.apple.private.IMDCKUtilitiesInternal
accountIsVerifiedForMOCAndSafeForCacheDelete
Checking if account is verified
Return account validForCD with error: %@ accountStatus: %@
About to wait for accountIsVerifiedForMOCAndSafeForCacheDelete call
Finished blocking accountIsVerifiedForMOCAndSafeForCacheDelete with time: %@ and accountValidForCD %@
AKAppleIDAuthenticationController
AuthKit
isEligibleForTruthZoneOverride
Overriding isEligibleForTruthZone: %@
Fetched cloud kit account status: %@, error: %@
Fetched cloud kit account status: %@
Fetching cloud kit account info with cloudkit api
accountInfoWithCompletionHandler called with accountInfo %@, error %@
Checking for cloudkit account info failed with error: %@ 
failed fetching account status
Checking for cloudkit eligibility returned: %@ inCarry: %@
Unrecognized account status %ld
v24@?0@"CKAccountInfo"8@"NSError"16
ck-account-repair-override
account needs repair override is: %@
account repair overridden
MiC is disabled, does not need repair
Account needs repair: %@ (account status: %@)
Got local account security level %@
Not checking account for needed repair because fetching account status returned an error: %@
Fetching security level and updating mic switch eligible on imagent launch
Server allowing %@: %@
Defaults over allowing %@: %@
should-ttr-on-icloud-kit-error
should-dump-logs-on-icloud-kit-error
should-dump-logs-daily-if-havent-synced
disable-dumping-logs-daily-for_restore_failures
msgs_on_icloud_logs@icloud.com
log-collector-handle
A cloudkit error(%@) occured checking if we should try to report the error
Should log dump on cloudkit error? %@
TriggeredByCKError
LSApplicationWorkspace
CoreServices
File a radar
Dismiss
Messages on iCloud Debug UI
We present a CK UI
TTR:%@ MoIC Sync Fail %@
tap-to-radar://new?Title=%@&ComponentID=644010&ComponentName=Messages Frameworks&ComponentVersion=iOS&Classification=Serious Bug&Description=%@&Reproducibility=I Didn't Try
User tapped file a radar. Opening URL %@
v16@?0@"IMUserNotification"8
%@%@
IMDCKUtilities recordNameForMessageWithGUID invalid parameters [key length] %@ guid %@
%@-%@-%@-%@
RecoverableError
NonRecoverableError
******** IMDCKUtilities not a partial error %@
Resetting last sync date to nil
Last sync date was reset to nil
ACAccountStore
AppleAccount
IMDaemon_CloudKit
Force switching icloud switch to %@ since default has not been set.
Trying to set iCloud Settings Swtich to enabled ? %@
Error saving enabling for kAccountDataclassMessages.
Success saving enabling for kAccountDataclassMessages.
Found primary account: %@ error: %@
v24@?0@"ACAccount"8@"NSError"16
fetchiCloudAccountPersonID returning with error: %@
Found DSID: %@
Account has backup enabled: %@
ck-sync-paused
Is syncing paused override: %@
syncing paused because syncing override is YES
syncing not paused because syncing not enabled
syncing not paused because we have a valid sync date
syncing not paused because we are syncing
syncing not paused because we are connected wifi and device is charging
syncing paused: connected to Wifi: %@, device is charging: %@
PCSReportKeyRollPending
ProtectedCloudStorage
Linked linkedPCSReportKeyRollPending ok: %@
Messages3
isOnWifiAndPower %@, Is charging %@ , isOnWifi %@ , lastSyncDate %@ lastCompleteSyncedDBDate %@
isOnWifiAndPower %@, Is charging %@ , isOnWifi %@ 
Found duplicate record while syncing or record does not have a record name. Dropping record: %@
Found duplicate recordID while syncing or recordID does not have a record name. Dropping record: %@
active
inActive
Active state %@ last activity date %@
Just send
Notify me each time
User chose to always auto send logs
User chose to show pop up before sending logs
ck-should-use-rtc-reporting
ck-should-use-analytics-reporting
Read server bag bool: [%@] for key: [%@]
Server bag bool default: [%@] for key: [%@]
groupName
deviceState
ZoneCreateDate-%@
IMDCKUtilites
logDumpAndSendMessage not allowed with error: %@
logDumpAndSendMessageTo called for recipient %@, hrs %@, reason %@, initialSync %@ logDumpGuid %@
User has opted out of auto log collection. Not dumping logs for logDumpGuid %@
User has never seen a prompt and this collection requires a previous prompt. Not dumping logs for logDumpGuid %@
LogDump
<StartDeviceID> Device ID: %@ <EndDeviceID> logDumpGuid %@
We didn't get a device ID back from cloudkit error: %@
dd-MM-yyyy_HH:mm
%@_MT_%@_%@_%@_%@_Messages
Unknown
RestoreFailure
Could not create dir at path %@, failed with error %@. Aborting log dump with logDumpGuid %@
Succeeded creating dir at path %@ for logDumpGuid %@
subsystem CONTAINS[cd] "com.apple.messages"
Error occurred trying to log dump messages logs: %@
Succeeded logging messages log to file at path %@
v24@?0@"NSString"8@"NSError"16
Not log dumping since not on internal device
In logDumpAndSendMessageTo but caught an exception %@
Returning %@ for logDumpIsExpcted - _isLogDumpAllowed: %@, _isOnPowerAndWifi: %@, _isRunningInAutomation: %@
For some reason we do not have the sync counts prior to syncing
All items have been synced, noting down last complete synced DB date %@
Could not log db sync date because not all items synced: chatsLeftToSync %@ | messagesLeftToSync %@ | attachmentsLeftToSync %@
<StartSyncStats> syncedChatDifference %@ | syncedMessageDifference %@ | syncedAttachmentDifference %@ <EndSyncStats>
Log dump needed -- didn't sync enough items | syncedMessages %@ | syncedChats %@ | syncedAttachments %@
PCSReportManateeStatus
Linked linkedPCSReportManateeStatus ok: %@
Failed to weak link ProtectedCloudStorage, this should not happen
Engram
AKAccountManager
is phone or watch: [%@]
D:%@
iCloud DSID %@
iMessage account DSID %@
iCloud account %@ and iMessage account %@ DO NOT match up
We found one that matches up (icloud: %@, iMessage: %@), the ids account is active: [%@]
enableMOCIfNeeded was called, but this is now a no-op bailing
/**---DISABLING MESSAGES ON ICLOUD---**/
Fetching eligibility for truth zone before attempting to sync
Not eligible for truth zone
***** Timed out checking truth zone eligibility *******
eligibleForTruthZone %@
com.apple.imagent
ck-demo-mode
Attempt to disable MOC across all devices
Unable to request exit record when trying to disable all devices. Error: %@
DisableAllDevices
AKAuthenticationSecurityLevelKey
Calculating selected/all aliases
Saving (domain %@) selected aliases %@
IMDCKAccountStatusUnknown
IMDCKAccountStatusLoggedOut
IMDCKAccountStatusLoggedInWithNoD2DEncryptionSupport
IMDCKAccountStatusLoggedInWithD2DEncryptionSupport
AKAppleIDSecurityLevelUnknown
AKAppleIDSecurityLevelPasswordOnly
AKAppleIDSecurityLevelStandard
AKAppleIDSecurityLevelHSA1
AKAppleIDSecurityLevelHSA2
AKAppleIDSecurityLevelManaged
%@: Start sync should not be called more than once.  Ignoring request.
MessageProcessing
%@: Begin syncing IDS transaction log history for %ld services
%@: Starting sync task for %@ service 
%@:Received a batch of %lu messages to process.
%@: Finished processing batch of %lu messages.
v24@?0@"NSArray"8@?<v@?q>16
v24@?0@"NSArray"8@?<v@?@"NSArray">16
%@: Finished sync task for %@ service. Error: %@
%@: Finished Syncing all services for task
v16@?0@"NSError"8
IMDMessageHistoryCKChatSyncTask: Start sync should not be called more than once.  Ignoring request.
IMDMessageHistoryCKChatSyncTask
Back online, start syncing chats
IMDCKSyncStatsCollector
Refreshing CloudKit sync statistics from the database
Skipping the refresh of CloudKit sync statistics from the database
com.apple.messages.IMDClientRequestContext.currentContext
No instance IMDClientRequestContext available for current thread, -currentContext caller may not be within a client request handler
%@-syncStoreVersion
IMDCKSyncTokenStore
Migrating sync token {key: %@, db: %@, version: %ld}
IMDCKChatSyncController
Found token data, saving to sms.db {key: %@}
No token data found {key: %@}
Failed to unarchive ckserver change token. Error: %@
Fetched token {key: %@, token: %@}
Persisting token {key: %@, token: %@}
ServiceProperties
plist
Discontinued-%@
%@.%@
%@Defaults
%@AccountDefaults
IMDService (%@)
CKBBContextKeyBalloonBundleID
IMDScreenTimeAskReponseHandler
requestID
approve15
approveHour
approveDay
decline
Sending sent ST response with answer: %@
Successfully sent ST response with answer: %@
[%@: <Device%@ activeDate:%@ readReceipt:%@, read ReceiptDate %@>]
OTCManager
Asked to track a new OTC with guid %@
Asked to track a OTC but code appears to be invalid %@
Send out OTC to all interested clients.
Clearing code for GUID: %@
Asked to consume code for guid %@, but unable, current code count: %@
Timer fired to clear code with GUID: %@
v16@?0@"NSTimer"8
IMDSoundUtilities
Play message sent sound type: %@, for message: %@
Acknowledgment
Suppressing play sound for downgraded message[%@]
Suppressing play sound because it was already played [%@]
Suppressing play sound for auto-reply message [%@]
Unable to find a sound action ID for %@  errorResult: %d
Unable to set property on sound ID   errorResult: %d
com.apple.MobileSMS
SuppressingSendSoundMessageGUIDs
allUnreadMessages
Setting timer to evaluate deferred message processing in: %f
Checking for deferred message processing task
MessageProcessing: Unable to retrieve ptask from store
Found %ld messages that need processing
Scheduling next batch of messages to process
Finished processing deferred messages
IMDCoreSpotlight
Not indexing message, spotlight has not finished migrating yet
message-format-version
message-id
sender-uri
time-of-message
message-has-image
message-length
message-text
message-app-bundle-id
message-spam-model-version
message-spam-model-detected-spam
reported-from-blackhole
reported-from-junk
mmcs-url
mmcs-signature-hex
mmcs-owner
file-size
decryption-key
mmcs-owner-id
mmcs-file-size-string
mmcs-symmetric-key
mmcs-UTI-type
message-attachment-info
conversation-group-size
payment-info
is-self
is-payment
is-informal
message-service
notify-security
v32@?0@"NSString"8@"NSArray"16^B24
IDSReportiMessageUnknownSenderWithBlackholeAndJunkStatus
PKPeerPaymentMessageTypeFromDataURL
PassKitCore
PKPeerPaymentMessageDictionaryRepresentationFromDataURL
__kIMDaemonWillShutdownNotification
__kIMDManagedPreferencesChangedNotification
v32@?0@"CUTWeakReference"8Q16^B24
@16@?0@"CUTWeakReference"8
v32@?0@"IMDServiceSession"8Q16^B24
IMDServiceSession
initWithAccount: %@       service:%@  defaults: %@
DEALLOC: %@
[%@ addAccount:%@]
[%@ removeAccount:%@]
[%@ sessionDidBecomeActive]
Scheduling watchdog timer before first unlock
Not scheduling routing, expire and watchdog timer before first unlock
[%@ sessionWillBecomeInactiveWithAccount:%@]
-[IMDServiceSession _connectionMonitor] monitor: %@:%@
_updateConnectionMonitorWithRemoteHost: %@:%@
Creating connection monitor to global reachability: %@
Forcing an invocation of connectionMonitorDidUpdate 10 seconds after setting it up.
Already have connection monitor to global reachability: %@
Going disconnected for connection monitor: %@
_reconnectIfNecessary: %@:%@
  shouldAlwaysBeLoggedIn: %@    shouldReconnect: %@   wasLikelyNetworkError: %@  loginStatus: %d  disconnectReason: %d
%@: we're disconnected properly - and we're supposed to try to reconnect now, 
IMConnectionMonitor
%@       forcing disconnect
%@: Network connection to %@ is down -- disconnecting
%@       Data connection is active, going into login server ready
%@       I can be reached
%@ connectionMonitorDidUpdate: Currently connected: %@   (Reachable: %@  Data Active: %@  On Call: %@  Data+Voice: %@   Result: %@)
Network
-[IMDServiceSession networkConditionsAllowLogin]: %@ (%@)   (Ignoring network)
-[IMDServiceSession networkConditionsAllowLogin]: %@ (%@)   ([[%@]_connectionMonitor isImmediatelyReachable])
-[IMDServiceSession networkConditionsAllowLogin]: %@ (%@)   (Fallback)
Refreshing capabilities: %@
IMDServiceSession | Expected to blocklist chat for chatDict: %@ but groupID nil
Blocklisted GroupID: %@
IMDServiceSession | Deletion: did not find any chats for received guid: %@ or received groupID: %@
removing chat: %@, permanently: %@
recoverably deleting %@: messages
IMDServiceSession | Recently Deleted: deferring to recoverable delete - unexpected permanent delete received for command dictionary: %@
Recently Deleted | messages delete date: %@
IMDServiceSession | Recovery: did not find any chats for existingChatWithGUID: %@, existingChatsWithGroupID: %@
guid
IMDServiceSession: Recently Deleted | Received empty parts-mardid command
IMDServiceSession: Recently Deleted | Received permanent delete command. This is unsupported
Recently Deleted | Deleting message parts from %lu messages: %@
IMDServiceSession: Recently Deleted | could not find messageItem for GUID: %@
IMDServiceSession: Recently Deleted | did not find indexes to delete at for GUID: %@
Recently Deleted | Removed parts from old item %@, got new item: %@
Recently Deleted | Mardid: deleting message part: found no message-part body-text to store for recovery
v32@?0@"IMMessagePartDescriptor"8Q16^B24
Recently Deleted | _updateLastMessageTimeStampForChat received nil chat
Recently Deleted
IMDserviceSession
Recently Deleted | IMDChat: %@, updating last message timestamp on load: %@
IMDSpamController
Instantiated IMDSpamController
Performing server query with alias: %@, count: %@
Server request returned status: %ld, abusive: %@, delay: %f, error: %@
v36@?0q8B16d20@"NSError"28
Chat
Stopping spam check for chatGUID: %@ interval: %f
Scheduling a spam check with interval: %f for chatGUID: %@
message-spam-check-timer
disable-auto-detect-spam
hasViewedPotentialSpamChat
detectSpam for Chat Identifier: %@
wasAutoDetectedForSpam
shouldn't retry again: %@
don't try to detect spam for chat: %@, disabled: %@, properties: %@
CloudKitExitRecord
Exit
CloudKitExitOnDate
ExitRecordKeyManateeZoneSubscription
com.apple.Messages.IMDCKExitManagerErrorDomain
SyncCompleteRecordType
SyncCompleteDateKey
AnalyticDataRecordType
AnalyticDataKey
SyncCompleteRecord
AnalyticZoneRecord
SyncCompletedRecently
SyncNotCompletedRecently
SyncInProgress
SyncDueToIMAuto
SyncCompleted30Hours
IMNotSyncDueToIMAuto
Recent
Power
Wifi
Syncing
FirstUnlock
Crash
LastCompleteDBCKSyncWasWithin3Days
LastCompleteDBCKSyncWasNotWithin3Days
LastCompleteDBCKSyncWasWithin7Days
LastCompleteDBCKSyncWasNotWithin7Days
LastCKSyncWasWithin3Days
LastCKSyncWasNotWithin3Days
LastCKSyncWasWithin7Days
LastCKSyncWasNotWithin7Days
PreFlightZoneFetch
FullSyncInitiated
FullSyncFailed
FullSyncCompleted
FullChatSyncStarted
FullChatSyncFailed
PeriodicChatSyncStarted
PeriodicChatSyncCompleted
PeriodicChatSyncFailed
MessageSyncStarted
MessageSyncFailed
MessageSyncStoppedDueToDeviceConditions
AttachmentSyncStarted
AttachmentSyncFailed
AttachmentSyncStoppedDueToDeviceConditions
ManateeNotAvailable
NotStartingCoreDuetSync
BackUpCompletedRecently
BackUpNotCompletedRecently
InitialSyncInitiated
InitialSyncCompleted
InitialChatSyncInitiated
InitialChatSyncFailed
InitialMessageSyncInitiated
InitialMessageSyncFailed
InitialAttachmentSyncInitiated
InitialAttachmentSyncFailed
ChatSyncCompleted
WriteSyncCompleted
DeletionSyncCompleted
AttachmentMetadataSyncCompleted
WithOver20HoursOfPowerAndWiFi
FirstSyncInitiated
FirstSyncCompleted
FirstChatSyncFailed
FirstMessageSyncInitiated
FirstMessageSyncFailed
FirstAttachmentSyncInitiated
FirstAttachmentSyncFailed
FirstSyncFailed
RecievedMissingMessageNotification
PostingMissingMessageData
CrashDuringFirstSync
MaxRecoverableAttemptReached
PCSIdentityWasLost
ManateeIdentityFetchAttemptFullSync
ManateeIdentityFetchAttemptFullSyncFailed
ManateeIdentityFetchAttemptRestoreSync
ManateeIdentityFetchAttemptRestoreSyncFailed
FullSyncInitiatedWithOver20HoursOfPowerAndWifi
FullSyncCompletedWithOver20HoursOfPowerAndWifi
RestoredAllContentFromCloudKit
com.apple.ProtectedCloudStorage.mobileBackupStateChange
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange.success
com.apple.ProtectedCloudStorage.PendingKeyRoll
PCSBackupDisabledKeyroll
PCSBackupDisabledUserToggledKeyroll
PCSBackupDisabledTestToggledKeyroll
PCSBackupDisabledSuccessfulKeyroll
PCSPendingKeyroll
com.apple.private.IMDCKExitManager
IMDCKExitManager
Exit Record date has been modified, changing it from %@ to %@. Are we in exit state ? %@
Error fetching exit record date has been modified, changing it from %@ to %@
Handling notification for subscriptionID: %@
Calling writeExitRecordWithDate. ExitDate: %@
writeExitRecordWithDate, must be called with a non-nil exit date ignoring request
We were not able to create the subscription, we'll still try to write the exit record as we'll retry updating the subscription on imagent launch
writeExitRecordWithDate returned with error: %@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
writeExitRecordWithDate scheduling opperation
******* Failed writeExitRecordWithDate salt zone was not present *********
Calling exitRecordDateWithCompletion date: %@ error: %@ fetchedExitDateOnLaunch: %@
Updating our exit date to %@  with error %@. fetchedExitDateOnLaunch [%@] or previous errorFetchingDate [%@]
v24@?0@"NSDate"8@"NSError"16
Dispatching back to main queue exitDate: %@ error: %@
Already on main queue exitDate: %@ error: %@
Calling _fetchExitRecordDateWithCompletion
** Error fetching exit record %@
Done fetching exit record successfully
Exit date has been modified from %@ to %@, attempting to toggle icloud settings toggle
Unable to fetch exit zone record Error: %@
ExitRecord
v24@?0@"NSDictionary"8@"NSError"16
_fetchExitRecordDateWithCompletion scheduling opperation %@
Calling deleteExitRecordCompletionBlock
deleteExitRecordWithCompletion returned with error: %@
deleteExitRecordWithCompletion scheduling opperation
QOS: 0x%lX target qos: 0x%lX
Checking if salt zone needs to be created
Error creating salt zone %@
***** Timed out creating salt zone *******
Checking if exit zone subscription needs to be created
Error creating exit zone subscription %@
***** Timed out creating exit zone subscription *******
writeInitialSyncCompletedRecordIfNeeded Not doing under first unlock
initialSyncRecordHasBeenWritten
writeInitialSyncCompletedRecordIfNeeded Requesting last sync date for metrics: %@
Last sync was within the last 7 days
Wrote last sync date to CK first time, success %@, error %@
writeInitialSyncCompletedRecordIfNeeded last sync date %@ was not in last 7 days
writeInitialSyncCompletedRecordIfNeeded No last sync date
writeInitialSyncCompletedRecordIfNeeded We have already done this. Not doing again unless you do defaults delete com.apple.madrid initialSyncRecordHasBeenWritten
IMDCKSubmitMetric
Submitted metric with opGroupName %@ Error %@
*** submitCloudKitMetricWithOperationGroupName not submitting MOC enabled: %@, serverAllowsSubmission: %@
Error creating analytic zone %@
***** Timed out creating analytic zone *******
IMDCKSubmitAnalytic
Request to submit dictionary (%@) opGroupName %@
Analytic zone does not exist, so creating it before resubmitting metric.
Successfully created analytic zone so trying to submit metric again.
Issue, we created the zone and we got back same error again.
Submitted metric with opName %@, dict: %@
Reporting errors: %@
syncErrors
Failed to create analytic zone.
*** submitCloudKitMetricWithOperationGroupName not submitting as analytic submission is not enabled
Performing metric operation name %@ using DB %@
Trying to submit CK metric operation with ID %@
Completion called for submittion metric operation with ID %@. ignoreZoneNotFoundError %@ OperationError %@
IMDCKSyncCompletion
We should not be submitting metrics to CloudKit: serverAllowsMetricSubmission: %@ isInternal: %@ isSeed: %@
Writing up sync metric using opGroup %@
We should not be submitting metrics to CloudKit so calling completion with success.
Failed to serizlize analyticdict as JSON %@. Posting operationGroupName %@ only.
Writing up sync analytic using opGroup %@
Not submitting metrics to CloudKit because notAllowed: %@ noJsonData: %@ so calling completion with success.
sendCloudKitZoneFetchRequestToNoteFeatureIsOn
sendCloudKitZoneFetchRequestToNoteFeatureIsOn not pinging CK as feature is off
Pinging cloudkit to tell feature is on.
Messages_Enabled
Messages Enabled Ping
sendCloudKitZoneFetchRequestToNoteFeatureIsOn: Fetch zone operation error %@
Scheduling ping cloudkit fetch zone operation %@
chatManateeZone
messageManateeZone
attachmentManateeZone
messageUpdateZone
analyticManateeZone
RecordKeyManateeZone
MetricsManateeZone
recoverableMessageDeleteZone
com.apple.aps.imagent
We couldn't create the push connection for the IMDRecordZoneManager
com.apple.icloud-container.
IMDCKRecordManager
Created push connection %@ with enabled topics %@
APSConnection didReceivePublicToken
APSConnection didReceiveIncomingMessage pushPayload: %@ ckNotification: %@
Received a notification for an unsupported notitifcation type: %@
Received a notification for zoneID: %@ for subscriptionID: %@
Received a notification for zoneID we haven't set up: %@ subscriptionID: %@
Creating subscription: %@ for zoneID: %@
We failed to create the subscription: %@  with error: %@
We successfully created subscription: %@
v24@?0@"CKSubscription"8@"NSError"16
We are already subscribed to: %@
We are not subscribed to subscriptionID: %@ so let's create it
_checkRecordZoneExists invalid parameter: recordZoneID %@
IMDRecordZoneManager
Created CKFetchRecordZonesOperation operation ID %@ zoneID %@
Did not get back a zone for recordZoneID %@
IMRecordZoneManager
Found zone %@
Error initializing fetchOperation 
Successfully created zone %@ 
***** Failed to createzone %@ %@ 
Zone %@ already exists
createRecordZoneIfNeededWithCompletionBlock zone %@ exists %@ error %@
Attempting to create zone %@
Successfully deleted zone IDs%@
Failed to delete zone IDs%@ error %@
Going to create subscription on deDupe zone for subscriptionID: %@ recordType: %@
Request to delete zones %@ for database %@
Result of deleting all zones
Successfully deleted zone IDs%@ DB %@
Failed to delete zone IDs%@ error %@ DB %@
Attempting to infer manatee status by fetching chat zone.
Error obtaining zones %@
******* Error indicates device does not have keys to sync *****
Not a fatal manatee error %@. Proceeding
com.apple.private.IM.IMRecordZoneManagerErrorDomain
IMDCKMessageSyncCKOperationFactory
Created fetch message operation ID %@ operationGroupName %@
Created modify message operation ID %@ operationGroupName %@
MessageDelete
Created deleted message operation ID %@
RecoverableMessageDelete
Created recoverable deleted message operation ID %@
Created fetched archived operation ID %@ using zone id %@
com.apple.Messages.IMDAvailabilityVerificationManager
SKStatusSubscriptionService
StatusKit
AKAvailabilityStatusTypeIdentifier
AvailabilityKit
IMDAvailabilityVerificationManager
Using cached availability verification tokens %@ for message to handleID "%@"
Subscription validation tokens %@ is already cached for handleID: "%@". Not fetching again
Fetching subscription validation token for handle handleID: %@
SKHandle
Caching subscription validation tokens "%@" for handle handleID: %@
v24@?0@"SKSubscriptionValidationTokens"8@"NSError"16
Caching subscription validation token "%@" and no encryption token for handle handleID: %@
This device will validate subscription validation tokens
Received request to validate validation token "%@" from senderHandleID "%@"
Skipping validation, this device should not validate tokens
Not processing validation token "%@" for old message from %@ with date: %@
Received validity response of %ld for validation token "%@" from senderHandleID "%@"
Received a valid validity response, no further action needed.
SKSubscriptionValidationTokens
v24@?0B8B12@"NSError"16
Completed invitation. CanShare: %ld, DidShare: %ld, Error: %@
Subscription invitation received, clearing cache. Subscription: %@
Subscription received status update, no verification manager action required. Subscription: %@
Subscription state changed, clearing cache. Subscription: %@
Subscription service daemon disconnected, clearing cache, but not reconnecting.
<%@: %p; subscriptionValidationToken = "%@", encryptionValidationToken = "%@">
com.apple.distnoted.matching
INVocabulary
Intents
IMDChatVocabularyUpdater
Received request to update vocabulary for added chat, but chat registry is not yet loaded. Deferring update. Added Chat: %@
Updating SiriKit group name vocabulary for added chat: %@
Received request to update vocabulary for deleted chat, but chat registry is not yet loaded. Deferring update. Deleted Chat: %@
Updating group name vocabulary for deleted chat: %@
Received request to update vocabulary for renamed chat, but chat registry is not yet loaded. Deferring update. Renamed Chat: %@
Updating group name vocabulary for renamed chat: %@
Chat registry was reloaded, but merge is not yet completed (e.g. we're still under first data protection). Not updating vocabulary.
Chat registry has finished loading. Updating group name vocabulary due to a deferred update request.
Chat registry has finished loading. No deffered update request.
q24@?0@"IMDChat"8@"IMDChat"16
Updated the SiriKit group names vocabulary with %lu named group chats
Performing initial group name vocabulary update
com.apple.private.alloy.electrictouch
IMDLegacyDTController
Loaded dtService: %@
_senderIDFromToken invalid input
_senderIDFromToken could not split into legitimate components %@
Received incoming DT message service %@ account %@ [data length] %@ fromID %@ context %@
IMDLegacyDTController No data %@ or fromID %@ on DT message. Bailing early
IMDLegacyDTController could not get senderID from fromID:%@
Got senderID %@
Created new DT message %@
Processed message %@ with session  %@
Could not find suitable session to process message %@
Storage
Noting item from storage (%@)
This is the first item from stroage starting timer
ProcessingMessagesFromStorage
Noting last item from storage (%@)
Finished processing %lu items from storage %@
Should not be submitting metrics during unit tests. This method should be stubbed
Submitting message from storage metric with dictionary %@
Scheduling a storage invalidation timer in: %f
We have pending read receipts to process after storage timer fired
Storage timer fired, guids we need to process: %@
Chat: Missed lastItemProcessed.  This time is likely off by the last storage timer
wasReportedAsJunk
permanentDeleteChatMetadataArray
chat
groupID
isPermanentDelete
recoverableDeleteDate
message
recoverChatMetadataArray
parts
messageGuid
indexes
indexToRange
deleteSubject
@16@?0@"IDSURI"8
v32@?0@"NSURL"8@"NSArray"16^B24
Updating moment share %@ in response to photo library change for message %@
Updating moment share fetch for message %@ with change %@. Count is now %lu
IMDMomentShareManager
v24@?0@"PHMomentShare"8@"NSError"16
Starting to monitor fetch result: %@ for message: %@ moment share: %@
Moment share %@ is done fetching %lu assets. Generating transfers
Moment share ingestion complete for message %@. moment share UUID %@
Fetching moment share from %@ for message %@ CMM state %@ (%lu)
Fetched moment share %@ for message %@
IMDMomentShareManager - Request for moment share %@ for message %@ has not completed after 5 seconds
Register and accept ShareURL for message: %@ with bundleID: %@ hasPayload: %@ reset asset transfers: %@
No share URL found for %@
Processing CMM shareURL %@ for message %@ with state %@ (%lu)
Moment shareURL %@ for message %@ is already done
Message %@. No need to reset transfers for in-progress ingestion of moment share %@
Clearing and restarting transfers for in-progress message %@, moment share %@
Resetting transfers on message %@ in state %@ and restarting ingestion
Registering moment shareURL %@ for message %@ and beginning ingestion
Ingestion of moment shareURL %@ for message %@ is already underway
Accepting share %@ for message %@
Moment share %@ accepted success %@ error %@ for message %@
Transitioning to accepted state for moment share %@ message %@
TransferMap entry %@ to %@
v32@?0@"IMFileTransfer"8Q16^B24
Message %@: Begin request for resource file URLs for asset %@
v24@?0@"NSURL"8@"NSError"16
Message %@: Not requesting asset for %@, not in transfer map. %lu left for processing
Message %@: Original transfer %@ not found for asset %@
Message %@: Completed request for resource file URLs for asset: %@
Setting syndication identifier to %@ on asset with UUID %@
IMDMomentShareManager - Not setting syndication identifier on asset with UUID %@ due to missing syndication identifier
No photo or video file URL in file URLs: %@, for transfer: %@
IMDMomentShareManagerErrorDomain
Persisting attachment at fileURL: %@ for transfer: %@
Last outstanding asset requested for message %@, setting IMCMMStateCompleted
%lu assets still pending export
Deleting %lu transferGUIDS from CMM message %@, rl transfers left %@
Not generating transfers for message %@ because there are no asset UUIDs moment share with count %@: %@
Starting with RL transfer GUIDs %@
Generated transfer %@ for asset %@
v32@?0@"NSString"8Q16^B24
Setting Message %@ to CMM state Generated
Persisted attachments to message %@
Existing transfer found for %@, setting attribution %@
IMCMMStateNotCMM
IMCMMStateRegistered
IMCMMStateAccepted
IMCMMStateGenerated
IMCMMStateCompleted
invalid CMM state
schema_version
schema
IMDCKMockRecordKeyZone
Dispatching operation %@
handleOperation : %@
Mocking writing up Cloudkit metrics
Mock fetching exit record
-DRR
/var/mobile/Library/SMS/CloudKitMetaData/AttachmentSyncZoneMetaData.db
AssetFetchFailure
com.apple.private.IMDCKAttachmentSyncController
IMDCKAttachmentSyncController
_shouldMarkAllAttachmentsAsNeedingSync %@
ck-max-number-of-attachment-batches
 overriding max number of attachment batches to fetch %@
Marking any unsuccessfully synced attachments as needing sync
Finished Marking any unsuccessfully synced attachments as needing sync
Not marking unsuccessful attachments as needing sync. Last attempt date %@
IMDCKInitialAttachmentSyncController
overriding max number of attachment metadata batches to fetch as this is in demo mode.
ck-max-number-of-attachment-metadata-batches
overriding max number of attachment metadata batches to fetch %@
Initiating attachment syncing with type %ld
syncAttachmentsWithSyncType with type %ld finished
Completed Delete Recovery Resync!
Initial attachment sync succeeded. Proceeding with metadata only sync.
Initial attachment sync failed. skipping metadata only sync.
*** Called into to do initial sync ****
fetchAttachmentDataForTransferGUIDs %@ HQ %@
fetchAttachmentDataForTransfers: we weren't able to get a CKRecordID from a transfer; transfer sync state %@, non-empty salt %@
.UserInit
.Compute
@16@?0@"IMFileTransfer"8
v24@?0@"NSError"8@"NSArray"16
accepting file transfer %@
Transfer %@ - %f complete of %llu bytes
v32@?0@"IMFileTransfer"8f16B20@"NSError"24
accepting file transfers %@
Won't download assets, we are optimizing attachment storage.
We have a nil salt so we can't download assets anyway -- bailing
CloudKit Asset download already in progress, ignoring request
Won't download download assets, we don't meet the resource conditions currently
Starting attachment download batch with %lu items retries %@
Finished download of assets with Error: %@
Found a fatal partial error: %@
Kicking off another asset download batch in %f seconds
Attachment download can't start at this time, so stopping attachment sync
Failed downloading batch of assets, not kicking off another batch. (number of retries: %lu) Error was %@
No assets to downloand
v28@?0B8Q12@"NSArray"20
purgedAttachmentsForChat Request to download purged assets for chats %@ on services %@
Got %lu purged assets to download
No assets that have been purged
**** failed to create IMFileTransfer from IMDAttachmentRecordRef rowid: %lld, marking as synced ***
purgedAttachmentsCountForChat Request to get count of purged assets for chats %@ on services %@
Request to download purged assets for chats %@ on services %@
ck-client-download-purged-attachments-batch-size
Got %@
Done downloading purged attachments for chat %@
Found records to donwload {%@}
**** failed to create IMFileTransfer from IMDAttachmentRecordRef rowid: %lld, marking as failed to sync ***
This is a periodic sync and deviceConditionstoCheck is set to IMCheckNoDeviceConditions, changing it to IMCheckAllDeviceConditions
This is an initial sync but current batch count [%@] >= maxBatchCount [%@] and deviceConditionstoCheck is set to IMCheckNoDeviceConditions, changing it to IMCheckAllDeviceConditions
Setting xpc_activity_t to XPC_ACTIVITY_STATE_DEFER because conditions are no longer met
Error forcing xpc_activity_t to XPC_ACTIVITY_STATE_DEFER
Attachment sync: device conditions allow sync: %@ deviceConditionsToCheck %@
Fixed up guid for transfer old guid: %@ new guid: %@
******** Marking attachment as synced up, as we could not update it's guid %@ (rowid %@)
Writing up a batch of attachments to cloudKit
**** failed to create IMFileTransfer from IMDAttachmentRecordRef rowid: %lld, marking as clean ***
Got %lu dirty results to sync, filtered to %lu
Fixing up attachment GUIDs if needed
Removing attachments that were marked as clean 
Transfer to sync %@ 
Got %lu records to sync, filtered to %lu unique records
*** This is the last batch of attachments to write up. Number of records to write %lu < max batch size %lu
Got error %@ writing attachment records. Stopping further writes
NO error writing attachment records.
Kicking off another batch of attachments to write
** This was the last batch of attachment writes as the number of attachments to write up was less than max batch size Not writing more.
Failed to write any of these %lu dirty attachments, looking for more attachments to write
Failed to write any of these %lu dirty attachments, looks like there's nothing left to do
Device conditions dont allow us to sync
Fetching assets for %@
OptimizeRedownload
v24@?0@"CKRecordID"8d16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
Starting Delete Recovery Resync
Continuing Delete Recovery Resync
Fetching attachment batch count %@ (max: %@) syncType %@ batch size %@ token %@
FullRestore
PeriodicSync
AttachmentSync
*** Exceeded max number of attachment batches to fetch. Stopping attachment fetch ***
Downloading asset while performing periodic syncing with cloudkit
v16@?0@"CKRecord"8
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
recordZoneChangeTokensUpdatedBlock should not get called
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
Scheduling a fetch operation from attachment zone
Device conditions dont allow sync OR continueFetching %@. Disk Space Available: %@
PeriodicAttachmentSync
BackfillAttachmentSync
v24@?0@"CKRecord"8d16
v24@?0@"CKRecord"8@"NSError"16
Attempting to write %@ records to truth zone 
Error creating attachment zone %@
***** Timed out creating attachment zone *******
ChangeTokenExpired
IMDCKMessageSyncController
Kicking off an attachment write after fetching messages
Not kicking off a write because cachedSalt is not present.
Not writing up messages as sync type does not allow it
recordZoneChangeTokensUpdatedBlock recordZoneID %@ serverChangeToken %@ clientChangeToken %@ moreComing %@ recordZoneError %@
Saving sync token %@
Done fetching attachments in initial fetch
Kicking off another fetch of attachments
No more attachments to pull down. Setting IMCKFinishedFetchingAttachmentsFromCloudKit and kicking off a write
No more attachments to pull down. Should write back changes was no *****
We got back a change token has expired for processing the record zone for attachments going to try and fetch again
We got a %@ error while fetching attachments. %@
user deleted zone
zone not created
Resetting local attachment sync state & last sync date after received user deleted zone error
Attachment zone missing, attempting to create it
****** Failed creating attachment zone
//---*** Error fetching attachments from CloudKit with error: %@ ---- ***//
Attachment per-record completion %@ changeTag %@ error %@
_writeCKRecordsToAttachmentZone uploaded record successfully
_writeCKRecordsToAttachmentZone had a conflict 
Server's GUID was different than we expected; aligning with the server's data
On conflict, the server record's GUID (%@) was different than the record we tried to update with GUID (%@); marking local attachment as synced, to skip it
Conflicting serverRecord was different than the one being updated (server: %@, local: %@)
Record had invalid arguments, we'll try this record again on the next sync
Record had unknown error code. Clearing out CK metadata
We couldn't find the attachment zone for this record so marking the attachment as dirty and clearing the state
_writeCKRecordsToAttachmentZone perRecordCompletionBlock encountered an error.  Will try this record again on next sync. %@
_processFetchRecordChangesCompleted error %@
_processRecordDeletion deleted record %@
_processRecordChanged changed recordID:%@ for attachmentGUID %@
recordZoneChangeTokensUpdatedBlock recordZoneID %@ serverChangeToken %@ clientChangeToken %@
Modify attachment had errors we can deal with, so treating this as a non error case
_processModifyRecordCompletion error: %@
Number of records saved %@ with error %@
Asset fetch complete for %@ error %@
Attachment batch fetch complete with error %@
Attachments to process %@
Finalizing asset download for transfer %@
Asset not found in record, must not be synced to the cloud transfer %@
Can't find transfer in pre-transfer map, for a CKRecord we fetched an asset for, recordID %@. CAN'T UPDATE!
We failed to fetch asset from CloudKit -- failing the transfer: %@
Can't find transfer in pre-transfer map, for a CKRecord we failed to fetch asset for, recordID %@, error %@
Removing attachment at path '%@' for %@ from iCloud backups
Attachment at path '%@' for %@ not found, NOT removing from iCloud backups
Going to fetch the asset for transfer guid at the end of this batch: %@
** No IMFileTransfer found for GUID %@
attachmentZoneChangeToken
attachmentZoneChangeTokenForMetadata
Clearing local attachments sync state, flags 0x%x
We fetched a record that we didn't try to fetch!! we wanted (guid %@) for recordName: %@
We successfully fetched and validated that we can delete the transfer with guid: %@
We failed to validate that we can delete transfer with guid: %@
We got to the last object in the array so we will call our completion block with transfers to delete count: %@
v32@?0@"CKRecord"8Q16^B24
Attempting to fetch a nil file transfers from CloudKit for attachment purging
Validating %lu attachment downloads %@
Adding transfer to fetch: %@ with record name: %@
Couldn't retrieve CKRecordID from file transfer %@
We got an error back from CloudKit trying to fetch recordID: %@ with error: %@ transfer: %@
Attachment zone ID is nil
recordID
deleteAfterRow
Removed duplicate recordID %@ from delete syncing
rowid
No GUIDs passed in to delete
Deleting attachment operation deletedRecordIDs %@
@16@?0@"CKRecordID"8
Adding additional deleted record IDs from error
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
Kicking off deleted of recordIDs %@
Cloudkit sync is not enabled. Not deleting attachments
No pending messages to delete/fetch from CloudKit
Attachment %@ was to be deleted, but is still being referenced. Fetching instead.
Got %lu recordIDs queued for delete processing which split sa %lu records to RE-fetch and  %lu to delete
********* Error while deleting attachments %@
Rate limited while deleting
DeleteRecovery
********* Error while fetching non-orphaned deleted attachments %@
Kicking off another batch delete to cloudKit
IMDCKSyncState
Exception while adding syncError. exception:%@, error:%@, simplifying
ProductBuildVersion
Setting object %@ for key %@ in analyticDict.
Setting ProductBuildVersion %@ for key %@ in analyticDict.
Removing keys %@ %@ from analyticDict.
Request to set analytic sync date for object %@ and key %@ shouldOverrideIfExists %@
Errors(%lu total)
NewUser
RestoringUser
chat %@ init %@ %@ full %@ %@ %@
syncAttempts
syncSuccess
syncDuration
syncCounts
pcsStatus
%@, isFeatureEnabled: %@, isSyncing: %@, isEligibleForTruthzone %@, isSyncingEnabled: %@, isRemovedFromBackup: %@, isInExitState: %@, exitDate: %@, isStartingDisabledDisableDevice: %@, lastSyncDate: %@, isSyncingPaused: %@, startingChangingEnabledSetting: %@, isPaused: %@, syncControllerSyncState: %@, syncControllerRecordType: %@, syncType: %@, accountStatus: %@, syncErrors: %@
Account needs repair
IMDMessageHistoryFirstUnlockReplaySyncTask: Begin replaying first unlock database for %ld services
IMDFamilyInviteReponseHandler
inviteUrl
view
The file transfer does not exist on disk, but the transfer was explicitly ended.
IMDFileTransferCenter
Sending completion notification for explicit download of transfer:%@
Sending completion notification for explicit download of transfer with guid %@. transfer:%@
__kIMDFileTransferCreatedNotification
__kIMDFileTransferAcceptedNotification
__kIMDFileTransferBatchAcceptedNotification
__kIMDFileTransferStoppedNotification
__kIMDFileTransferRemovedNotification
__kIMDFileTransferUpdatedNotification
__kIMDFileTransferHighQualityDownloadInitiatedNotification
__kIMDFileTransferHighQualityDownloadCompletedNotification
__kIMDFileTransferHighQualityDownloadCompletedSuccessKey
__kIMDFileTransferHighQualityDownloadCompletedFileURLKey
__kIMDFileTransferExplicitDownloadCompletedNotification
__kIMDFileTransferExplicitDownloadCompletedErrorKey
__kIMDFileTransferExplicitDownloadCompletedSuccessKey
__kIMDFileTransferExplicitDownloadCompletedFileURLKey
File transfer operation was unsuccessful.
File transfer local file URL retrieval operation was unsuccessful.
See error code and compare against IMFileTransferErrorReason.
Attachments
FileTransferCenter updating guid for transfer in cache map:%@ to %@
Transfer failed. See underlying error. transfer.errorDescription:%@
IMDFileTransfer posting recoverable error state for IMFileTransfer
IMDFileTransfer reset file transfer to waiting state
Transfer was reset. See underlying error. transfer.errorDescription:%@
Marking transfer %@ as failing preview generation
Updating transfer %@ with size %@
New attribution info is %@
Attachments - Failed to update transfer preview size for %@, transfer not found
IMDFileTransfer posting recoverable error state (%zd) for IMFileTransfer %@
Failed to consume sandbox token, %@ token:%@
file-read-data
Denying transfer, (check %d, errno %d) client with audit token:%u not allowed to access request path:%@
Failed to release sandbox token, %@ token:%@
_handleFileTransfer accepted %@ - %@
ForceAllTransfersExpired
Invalid transfer state. transferState:%@ cloudKitSyncState:%@ existsAtLocalPath:%@
_handleFileTransfers accepted %@ - %@
Invalid transfer state. transferState: %@ cloudKitSyncState: %@ existsAtLocalPath: %@
IMFileTransferCenter
stopping transfer to guid
File transfer stopped locally.
File transfer removed.
MessageService Failed writing attachment to disk on incoming:%@
%s Requested to size with zero transferGUIDs
-[IMDFileTransferCenter sizePreviewsForTransferGUIDs:]
overall
Attempting to generate size for guid %@
Generated size for guid %@ size %f-%f error %@
v36@?0B8{CGSize=dd}12@"NSError"28
IMDFileTransferCenter - Timed out sizing transfer with guid %@, failing!
%s Skipping sizing guid %@. Needs sizing %@ hasLocalURL %@
Sizing complete, timing %@
v32@?0@8Q16^B24
{CGSize=dd}
IMDCKAttachmentSyncCKOperationFactory
Created fetch attachment operation  ID %@ fetch operation dictionary %@
Created modify attachment operation ID %@ operationGroupName %@
AttachmentDelete
Created deleted attachment operation ID %@
ExposureNotification
Activated ENManager: %@
en-push-allow-domains
en.express
enexpress.app
en-push-disabled
v40@?0@"NSURL"8{_NSRange=QQ}16^B32
ENTextMessage
Error: %@
Verified success
Running on an old build - unable to run through ENManager
com.apple.private.alloy.messagesquickswitch
MessagesQSwitch
tempSMS.db
tempDowngradedSMS.db
QuickSwitch
Instantiated IMDQuickSwitchController
Sending dummy request
Current db version is %ld
Recents
compressedSMSRecents.zip
compressedSMSDB.zip
QuickSwitch Could not determine file size as path was nil
QuickSwitch Could not determine file size at path %@ with error %@
Size of file at path %@ is %lu
QuickSwitch We got a nil path to truncate to.
QuickSwitch Could not delete DB at path %@
QuickSwitchTruncating
Messages
Started truncating quick switch DB
QuickSwitch Could not trim DB with error %@ 
Finished truncating quick switch DB
QuickSwitch we were given a nil path to delete
QuickSwitch Could not delete file at path %@ with error domain '%@' code: %ld
Deleted file at path %@ 
Cleaning up temporary files
QuickSwitch Could not delete DB at path %@ %@
QuickSwitch. We do not expect file to already exist. Clearing it.
QuickSwitch Could not delete zipped file DB at path %@ with error %@
QuickSwitchZipping
Finished zipping quick switch DB
QuickSwitch Could not create zipped DB
v16@?0@"IMFileCopier"8
Started zipping quick switch DB
QuickSwitch. We do not expect file to already exist.
Finished unzipping quick switch DB
QuickSwitch Could not create unzipped DB
Started unzipping quick switch DB
Initiating quick switch
QuickSwitch Could not send initiate QuickSwitch message. Bailing!
Could not send initiate QuickSwitch message. Bailing!
Could not send QuickSwitch Recents request. Bailing!
We tried to _handleQuickSwitchInitiateRequest a non watch device for QuickSwitch. This is really bad!
Finished with success %@
dbVersionResponse %@
Downgrade: found a database that can be downgraded to version: %ld
Trying to QuickSwitch to incompatible gizmo. Bailing quick switch. localDBVersion %ld gizmoDBVersion %ld
QuickSwitch Truncated DB did not succeed at path %@, Really bad! 
Truncation succeeded! :-)
Attempting downgrade from %ld to %ld...
Error Trying to QuickSwitch watch to version %ld from %ld. Downgrade failed with error: %@
Downgraded from %ld to %ld ok! :-D
QuickSwitch failed to rename downgraded db to tempdb with error: %@
renamed %@ to %@ in preperation for compression - this means the downgrade completed ok. :-D
We could not create zip file for QuickSwitch
Sent zipped file to watch
Database QuickSwitch: Could not send file over to gizmo. Bailing
Copying from %@ to %@
QuickSwitch could not copy path to temp directory with error %@. Bailing!!
QuickSwitch we could not create zip file
QuickSwitch could not send file over to gizmo. Bailing
_handleQuickSwitchCompleted %@
QuickSwitch got _handleIncomingDB on a non gizmo. Really bad!!
QuickSwitch got _handleIncomingRecents on a non gizmo. Really bad!!
Sending file at URL %@ to local account (identifier %@)  (error %@)  (metadata %@) success: %@
Sending message to local account (identifier %@)  (error %@)  (request %@) success: %@
service %@, account %@, incomingData %@ fromID %@ context %@
Not an IDSDevice: fromID %@. Bailing
Got request %@
Got IMDQuickSwitchControllerCommandInitiateQuickSwitch
Got IMDQuickSwitchControllerCommandResponeDBVersion
Got IMDQuickSwitchControllerCommandRequestRecents
Got IMDQuickSwitchControllerCommandQuickSwitchCompleted
QuickSwitch got unknown request over quick switch service %ld
service %@, account %@, resourceURL %@ metadata %@ fromID %@ context %@
Got IMDQuickSwitchControllerCommandIncomingDB at url %@
Got IMDQuickSwitchControllerCommandIncomingRecents at url %@
QuickSwitch got unknown resource ULR callback over quick switch service %ld
message sent with identifier %@ 
Checking if we are in proxy mode
Not in proxy mode. Found active iMessage account signed into email %@ 
In proxy mode. Did not find any active iMessage account logged in using email.
Found default paired device %@
QuickSwitch Did not find default paired device
QuickSwitch _notifyPSYWithResult not available on this platform
QuickSwitch _notifyPSYDataSent not available on this platform
SWCollaborationNoticeTransmissionMessage
SharedWithYouCore
SWCollaborationClearNoticeTransmissionMessage
com.apple.private.alloy.gelato
Loaded notice dispatch service: %@
IMDCollaborationNoticeDispatcher
-[IMDCollaborationNoticeDispatcher sendNotice:toHandles:fromHandle:]
%s: Bailing due to rate limiting for notice: %@
Sending notice (command: %@) %@ to %@, message: %@
%s Successfully sent Collaboration Notice (guid: %@) to handles: %@
%s Received request to send Collaboration Notice, but the feature is not enabled. Dropping message.
-[IMDCollaborationNoticeDispatcher sendClearNotice:toHandles:]
%@-%@.data
ClearCollaborationNotice
%s Received notice dismissal request from %@ but unable to process notice, incompatible version of BlastDoor. Dropping notice.
%s Received request to send Collaboration clear Notice, but the feature is not enabled. Dropping message.
%s: Handling request to reflect notice dismissal for guids: %@
-[IMDCollaborationNoticeDispatcher reflectDismissalForNoticeGUIDs:]
%s Dropping request to reflect notice dismissal because notices are not enabled, guids: %@
%s: Handling incoming Collaboration Notice from: %@
-[IMDCollaborationNoticeDispatcher handleIncomingNoticeProtobuf:service:account:fromID:context:]
%s Received notice from %@ but unable to process notice, incompatible version of BlastDoor. Dropping notice.
%s Received notice from %@ but notices are not enabled. Dropping notice.
%s fromID: %@, message: %@
-[IMDCollaborationNoticeDispatcher service:account:incomingMessage:fromID:context:]
%s Received incomingMessage from %@ but unable to process Collaboration Notice Action, incompatible version of BlastDoor. Dropping notice.
%s Received incomingMessage from %@ but notices are not enabled. Dropping notice.
notice-fanout-threshold
__kCKRecordIMMessageIncompatibleDeleteNotification
time
sender
chatID
SubType
SubTypeMsg
msgType
subject
body
pdata
esid
tRead
tDelivered
tPlayed
flags
msgSummaryInfo
msgProto
msgProto2
msgProto3
dcId
rGuid
eCode
ROWID
TOID
TOPart
MessageEncryptedV3
messageUpdateV1
***Error _populateCKRecordWithIMMessageItemFields called on object %@ %@
***Error _populateCKRecordWithIMMessageItemFields (reply data) called on object %@ %@
***Error compressedProtobufDataForGroupTitleChangeItem called on object %@ %@
***Error _populateCKRecordWithIMGroupTitleChangeItemFields called on object %@ %@
***Error compressedProtobufDataForParticipantChangeItem called on object %@ %@
***Error _populateCKRecordWithIMParticipantChangeItemFields called on object %@ %@
***Error compressedProtobufDataForLocationShareStatusChangeItem called on object %@ %@
***Error compressedProtobufDataForGroupActionItem called on object %@ %@
***Error compressedProtobufDataForMessageActionItem called on object %@ %@
-UpT1
-UpT2
MSGID
TPart
Failed to unarchive ckrecord. Error: %@
IMItem+CKRecord
Cannot create record from recordID because it is nil %@
Cannot sync item because it is an incompatible action type %lld
***** Error Tried to generate a CKRecord from class %@ ******
****** initiWithCKRecord called with unsupported message type %@ *****
We don't have a valid guid for the message record we want to reset sync state: %@
IMItem_CKRecord
Phone number destination callerID [%@] is unselected on phone but phone does not have SIM inserted and caller ID is a phone number so will store message [%@] anyways
We have an iMessage account that is not backed by an ids account ---- please file a radar
v32@?0@"IMDAccount"8Q16^B24
Skipping shouldStore check, destinationCallerID: %@
We should not store the message [%@] because our destination callerID [%@] has been unselected from list of available aliases
CacheDelete
Is already updating file sizes, returning
attachment-filesize-update-not-allowed
Server bag does not allow attachment filesize updating, retunring
Calling IMDAttachmentUpdateAttachmentFileSizeWithRowIDGreaterThanWatermark with rowID %@ iteration %@
No more attachment fileSizes to fix up, got nil back from query
filename
rowID
Got an empty set of attachments back - there are still more so increasing watermark by 20
Previous batch of attachment filesize updates completed, setting new watermark to be %@
Stopping filesize update. Set state attachment filesizes updated activity result %d
Registering with cache delete upon launch
Setting up cache delete callbacks cache delete enabled %@
com.apple.imagent.cache-delete
com.apple.messages-cache-delete
~/Library/Messages
Purge event: %@
rescan
historyDone
Purge notification - All done
path
v16@?0r^{__CFSet=}8
CacheDelete -- purgeable block called with urgency: %d info: %@ isMainThread: %@
purgeable callback dictionary: %@
r^{__CFDictionary=}20@?0i8r^{__CFDictionary=}12
CacheDelete -- purge block called with urgency: %d info: %@ isMainThread: %@
Purge callback with callback dictionary: %@
CacheDelete -- periodic block called with info: %@ and urgency: %d isMainThread: %@
AttachmentWatermarkResetDone50600874
CACHE_DELETE_GUIDANCE
CACHE_DELETE_GUIDANCE_DO_NOT_EXPAND_CACHE
Cache delete  guidance %@ requested size %@
CACHE_DELETE_VOLUME
Purgeable callback -- purgeableSpace: %lld purgeableNumber: %@
CACHE_DELETE_AMOUNT
Purge callback -- Deleted bytes: %lld, volume: %@ is running on main thread: %@
nothingToPurgeDictionary -- volume: %@ purgeableSpace: %@
_purgeableSpaceGivenUrgency -- Bytes available to purge: %lld result: %lld urgency: %d
We somehow got back a negative number of bytes to delete so we don't want to delete anything
Tried to obtain purgeable attachments without proper default ---- please set them: defaults write com.apple.madrid EnableCacheDelete -bool YES
Purgeable space %@
Tried to purge attachments without proper default ---- please set them: defaults write com.apple.madrid PurgeWithCacheDelete -bool YES
PurgeWithCacheDelete default not enabled
purgeAttachments with bytes: %lld
We got back %lu records from persistence to delete which resulted in %lu file transfers to delete
No attachments to delete
 We didn't get back any attachments to purge
We failed to create an IMFileTransfer for IMDAttachmentRecordRef with identifier: %lld
Tried to call _deleteFilesOnDiskAndUpdateTransfers without proper default ---- please set them: defaults write com.apple.madrid EnableCacheDelete -bool YES
We are removing the file at path: %@ for transfer: %@
We attempted to delete a path that was not safe to delete for guid: %@ path: %@
There was an error trying to remove the file: %@
We successfully removed the file - setting the transfer state to waiting for accept
The transfer we want to remove does not exist at its local path -- transfer (%@) local path (%@)
existsAtLocalPath
localPath
transferState
success
Created %lu dictionarie(s) for transfer info of deleted attachment(s)
Did NOT metric fetching synced attachments from CloudKit. CK Enabled %@ , device conditions allow sync %@
We are going to try and fetch attachments we would want to delete from local disk with bytes to free up: %lld
We got a fileTransfer that doesn't exist that we think we can delete for CacheDelete: %@
Going to try and fetch from sync controller with %ld batches to fetch
We disconnected from power or wifi in between batches, so cutting the batches short
_fetchTransfers with totalTransferCount: %@ index of transfers: %@ number of batches to fetch: %@
Completed fetching batch with starting index: %@ index of next batch: %@ for number of batches: %@
/*-------Fetched all transfers we wanted to validate------*/
com.apple.private.IMDAvailabilityAutoReplier
CARAutomaticDNDStatus
CarKit
Chat is not eligible for availability auto replies or dnd breakthrough
Message sender not eligible for availability reply or dnd breakthrough
Message items should break through do not disturb, sending did notify recipient receipt, and triggering urgent notifications
Message items did not break through do not disturb, attempting to send unavailability receipt or SMS message
No message items support availability reply, ending processing
DNDModeConfigurationService
DoNotDisturb
com.apple.messages
IMDAvailabilityAutoReplier
UserIsUnavailable
DNDMutableContactHandle
Not processing possible availability reply for non 1-1 chat
Not processing possible availability reply for business chat
Not processing possible availability reply for chat with more than one participant
Not processing possible availability reply for sender with zero length handle
Not processing possible availability reply for sender who is not a contact
Not processing possible availability reply, DND framework says we should appear available to this user
Message item does not support availability reply
Reducing messages to process for availability reply from %ld messages to %ld messages.
Not sending delivered quietely receipts in SMS chat
Requesting delivered quietely receipt be sent to message guids: %@
Not sending text auto reply to chat: %@
Sending text auto reply to chat: %@
Device does not support iMessage auto reply becuase it is not an iPhone
Device does not support SMS auto reply becuase it does not support CoreTelephony subscriptions
SMS auto reply not supported becuase device is not an iPhone
SMS auto reply not supported becuase local device does not have a SIM matching the last addressed SIM ID
DNDStateService
Driving focus is active
Driving focus is not active, current focus semantic type is %ld
DND mode is nil
DND active mode configuraiton is nil
Determined that we have not recently sent an availability auto reply. Message time %@ is older than recency window %@
Determined that we have not recently sent an availability auto reply. We haven't sent an auto reply in the last %ld messages.
Found a recent auto reply message from me: %@
Message %@ was not an auto reply from me. isFromMe: %ld, isAutoReply: %ld
Item is not a message. Item class: %@
v32@?0@"IMItem"8Q16^B24
Message item does not support breakthrough notification
Reducing messages to process for breakthrough notifications from %ld messages to %ld messages.
Not processing possible dnd breakthrough for message from me
Not processing possible dnd breakthrough for empty message
Not processing possible dnd breakthrough for typing message
Not processing possible dnd breakthrough for locating message
Not processing possible dnd breakthrough for auto reply message
Not processing possible dnd breakthrough for unfinished message
Not processing possible dnd breakthrough for system message
Not processing possible availability reply for message from me
Not processing possible availability reply for emote message
Not processing possible availability reply for empty message
Not processing possible availability reply for typing message
Not processing possible availability reply for locating message
Not processing possible availability reply for auto reply message
Not processing possible availability reply for unfinished message
Not processing possible availability reply for system message
Not processing possible availability reply for message that is a legacy urgent trigger
Message is flagged to notify recipient, should ignore do not disturb
Message has a legacy urgent trigger text, should ignore do not disturb
Message is SOS, should ignore do not disturb
Message received in chat that is in an urgent message grace period, should ignore do not disturb
Messages are not urgent, will not break though do not disturb
Determining if we should alert for this message by checking if we are in an urgent message grace period. Looking for received urgent messages in the last %ld minutes.
Determined that we are not in urgent message grace period. Message time %@ grace period start window %@
Found a recent message that broke through our dnd within the grace period window. Grace period is active.
Found a recent message that contains the urgent trigger phrase within the grace period window. Grace period is active.
Found a reply sent by me to the chat within the grace period window, extending grace period to %ld minutes.
Message %@ did not impact grace period. isFromMe: %ld, didNotify: %ld
Not checking grace period for non 1-1 chat
Chat is missing identifier or service: %@
Urgent
DaemonCoreLocalizable
Message has a legacy urgent trigger match
Sending %ld auto-reply messages to chat: %@
No sending auto-reply because no message text was available to send
Device is not in driving focus, not sending text auto reply
This device does not support text auto reply
We have already sent a recent text auto reply, not auto-replying again.
Not sending auto reply becuase the user auto reply audience preference does not match this chat. Audience %ld=%@
Auto reply audience preference matches this chat. Audience %ld=%@
Nobody
Contacts
Favorites
Auto-reply audience is %ld=%@
Is using customized auto reply message: %ld
Audience %ld=%@ allows replies: %ld
Participant %@ is not in contacts
Participant %@ is a favorite?: %ld
Participant %@ is not a contact, and cannot be a favorite
chatID %@ is recent?: %i
Message is SOS
AllowSOSViaNonSMS
maps.apple.com
^(http)s?(\:\/\/maps\.apple\.com\/\?ll\=)\-?\d+\.\d+,\-?\d+\.\d+\&q\=[^\&]+$
Message has an SOS URL match
recordKeyZone
chatEncryptedv2
attachment
IMDCKMockDatabase
Adding operation %@
Did not find mock database for operation %@ zoneID %@
CKBBContextKeyChatGUIDs
CKBBContextKeyMessageGUID
IMDNotificationResponseUtilities
couldn't find chat for %@ to mark message as read
receive notification response for bundleID [%@]
ChatSync
IMDCKChatSyncCKOperationFactory
fetchChatZoneChangesCKOperationUsingToken was passed in a nil zone
Created fetch chat operation ID %@
writeChatsOperationUsingRecordsToSave was passed in a nil records array
Created modify chat operation ID %@
Created deleted chat operation ID %@
IMCKChatSyncCKOperationFactory
IMDService
Registering bundle: %@
   => Internal service with name: %@
mcSV
mcAK
mcEK
mcNFK
mcIFK
pnHK
nRID
nBWV
pRID
IMDMeCardUpdatedNotification
Nickname feature is turned off, don't load nickname info into memory
nickNameKeyStore.db
nicknamekeystore
handledNicknamesKeyStore.db
handledNicknamesStore
pendingNicknamesKeyStore.db
pendingNicknameUpdatesStore
handleSharingPreferences.db
handleSharingPreferences
Evaluating account state for feature eligibility {refreshediCloudAndAppleIDMatch: %@ currentiCloudAndAppleIDMatch: %@}
Received aliases did change hasMultiplePhoneNumbers %@
nickname-reupload-profile-version
UseOldProfilesContainer
We successfully reuploaded our local nickname %@ %@
We were not successful in reuploading our nickname to the new container
Told this device just signed into iMessage, we need to ask our peers for nickname info requestedInfoBefore %@ retry count %@
Successfully sent request to peers for nickname info
We did not have the IDSDevices to send the request to, going to try again in %@
We do not have enough retries to get nickname info, not trying again
Told this device signed out of iMessage, we need to reset the bit that we've asked for the nickname feature info
Nickname sharing is not enabled or trying to verify on a group chat -- bailing verifying record ids
Going to verify if truncated record ID %@ is equivalent to our personal record id %@ current truncated id %@ recordIDS are equals %@
Truncated record id does not match, marking this chat as dirty so we send a nickname on the next message send
Beginning upload of nickname profile to CloudKit
Nickname is still uploading after time out %@ setting upload to done
Nickname upload has completed -- sending out of band nickname updates
We couldn't find a chat to send nickname info to for guid %@
Client request to store new personal nickname %@ path%@
Trying to set a personal nickname when the feature is off
Uploading Personal Nickname
Successfully Uploaded Personal Nickname
Unable to store in Public Database, aborting fanout to other devices
Failed Uploading Personal Nickname
Error: %@
 Fallback nickname: %@
v44@?0B8@"IMNickname"12@"NSString"20@"NSData"28@"NSError"36
Loaded pending nickname from disk: %@ and uploading
Found Pending Nickname Upload
No pending nickname found.
Resetting handle allow/denylist
Going to retreive the current nickname from CloudKit
v24@?0@"IMNickname"8@"NSError"16
Nickname feature is disabled, not fetching current nickname
Failed to fetch public nickname {error: %@, recordName: %@}
Failed Personal Nickname Fetch
recordID: %@
decryptionKey: %@
error: %@
Got personal nickname from IMTransferAgent: %@
Fetched Personal Nickname
Nickname Download
Public Nickname fetched or failed in time: %f
Name+Photo sharing feature is disabled, not fetching CloudKit record
We are missing parameters to fetch the CloudKit record (recordID: %@) (URI: %@) (decryptionKey: %@)
Already have this one, no need to grab it again from CloudKit with recordID %@
Retreiving nickname from IMTransferAgent with recordID %@
Fetched Nickname for %@
Nicknames - Failed getting nickname for record ID %@ from transfer agent with error %@
Failed Nickname Fetch for %@
recordID: %@
error:%@
The nickname feature is disabled, we shouldn't make any requests to CloudKit
Client request to delete personal nickname with recordID
Transfer agent succeeded in deleting public nickname from CloudKit
Did not succeed in deleting public nickname from CloudKit!
The nickname feature is disabled, not taking updates coming from madrid
audienceValue %@ enabledValue %@ nameForked %@ imageForked %@
Going to update Me Card preferences %@
Sharing Preferences Changed
Not enabled, deleting local recordID and cache
Transporting sharingEnabled %@
Transporting meCardSharingAudience %@ nicknameVersion %@ decryptionKey %@ nickNameID %@ nameForked %@ imageForked %@
Marking nickname as handled %@
updateHandledNicknamesIfneeded incomingPendingNicknameVersion %@ currentPendingNicknameUpdatesVersion %@
Our current pending handles %@ our incoming pending handles %@
We need to mark the following handles as having been updated %@
Peer Device Updated Handled Nicknames
Alert header: %@
Alert message: %@
Finished personal nickname fetch with nickname: %@, updating key store
Failed fetching new personal nickname: %@
Received newer version number (%lu, old: %lu), updating the deny/allow list store
Deny list added: %@
Deny list removed: %@
Allow list added: %@
Allow list removed: %@
Deny list
 and 
Allow list
 Updated from Peer Device
handleBlacklist
handleWhitelist
Broadcasting changes to the deny and allow list
Received older version number (%lu, old: %lu), dropping deny/allow list update
Nickname feature is disabled, ignoring updates from peer device
Nickname Updates from Peer Device
We got a request to send nickname info to a specific device %@
Nicknames not enabled, deleting the one we know about.
No nickname stored locally. Not querying CK.
Nicknames enabled, and we already have one in cloudkit. Broadcasting to my other devices.
We should send personal nickname info to all of our own devices
Nickname feature is disabled, not sending updates to peers
Sending nickname info to destinations %@
We could not find a service session for imessage to send the nickname info or no contents in message dictionary %@ %@
We are still uploading the nickname to iCloud, queue to send info out of band for chat %@
Nickname feature is disabled, not sending personal nickname to chat
Sending nickname info to chat %@
We didn't have a session to send the nickname info over
Writing %lu nicknames to allow list
We have an iMessage chat for guid so sending nickname info %@
Writing %lu nicknames to deny list
Nicknames - We had a problem writing a handle list update with key %@ -  %@
Nicknames - We had a problem archiving handle list for key %@ error %@
We could not replace incoming nickname in our handled map, add to pending
We replaced userNickname in our handled map w/ an existing handled record
We got a pending nickname to handle %@
We don't have a pending nickname to clear for handle ID %@
We got a malicious pending nickname to handle %@
We don't have a malicious pending nickname to clear for handle ID %@
Tried to add a nil nickname to our pending map
New pending nickname has no image %@
New pending nickname name hasn't changed, silently updating record ID for previously handled nickname %@
Adding new nickname to our pending map %@
add nickname to pending updates %@ %@
Existing nickname %@ and new nickname %@ are different %@
Marking nickname %@ as handled
Trying to update a nil nickname
Replacing handled nickname for handle id %@ from record id %@ to new record id %@
For nickname %@, deleting old avatar image at path during mark as updated %@. Error %@
writing nickname %@ to kvstore %@
We had a problem writing the nickname to the pendingNicknameUpdatesKVStore %@
We had a problem archiving the nickname object %@
We got an error trying to remove %@ from the pending map %@
We got an error trying to remove %@ from the handled map %@
Got called to clean up nickname for id %@
Removing %@ from allow list 
Removing %@ from deny list 
Removing %@ from pending nickname updates
Removing %@ from handled nickname updates
Sending updated handled and pending nicknames to peers and client
Nicknames
Deleting data from handled nicknames KVStore
Deleting data from pending nicknames KVStore
Exiting scrutiny mode
Nickname feature is disabled, not loading nickname info from disk
Device is under first unlock so we need to put updates into a temporary map until we leave first unlock
We are not under first unlock so we are able to load all data
IMDNicknameController is already in scrutiny mode before attempting to load data from disk. Will delete existing data.
Not going to load personal nickname, feature is disabled
Limit to load of nicknames %@
Setting the IMDNicknameController scrutiny flag
Clearing the IMDNicknameController scrutiny flag
We did not have success loading handled nicknames %@ or updates %@
created handled nickname map %@
created pending nickname map %@
Nicknames - We got an error loading the handle allow list data store %@
Nicknames - We got an error loading the handle deny list data store %@
Nicknames - Failed to unarchive allow list %@
No allow list data to load
Nicknames - Failed to unarchive deny list %@
No deny list data to load
Successfully loaded %lu allow list handles %lu deny list handles
We got an error loading the nicknames data store %@
We had an error %@ unarchiving data %@
Converting all nickname contents to Class C!
Failed making file class C: %@ with error %@
Storing personal nickname %@ and recordID %@ on disk
Writing nickname data of size %lu, recordID data of size %lu, and encryption key of size %lu to disk
NicknameRecordID
NicknameRecordKey
NicknameDataKey
Error writing data to KVStore %@ %@
Error writing personal nickname data to KVStore %@
Personal nickname data is nil, not writing to disk
Storing pending nickname %@ while waiting on upload
NicknamePendingKey
Error writing data to kvStore %@
Error reading pendingNickname %@
Error unarchiving storedPersonalNickname %@
storedPersonalNickname is nil
Error deleting data from kvStore %@
Error deleting data from KVStore %@
Error reading nickNameDecryptionKey %@
Error reading storedPersonalNickname %@
Error Loading Personal Nickname From Disk
Stored personal nickname doesn't exist
No Personal Nickname On Disk
Loaded Personal Nickname From Disk
Nickname loaded from disk did not have a recordID. Attempting to load recordID from disk.
Error reading nickname for pending upload %@
Error unarching pending nickname upload %@
Error deleting nickname avatar from path: %@
Passed in empty recordID
Did not find nickname for recordID %@
Found existing nickname
No nickname for handle %@
I'm being asked for handleURI %@
System did leave first unlock, loading maps into memory
FakeID
First
Last
IMDMessageSortOrderAssigner
%s assigning %@ sortID %@
-[IMDMessageSortOrderAssigner compareMessageToOtherMessagesWithSameReplyToGUIDAndAssignSortID:existingMessagesWithSameReplyToGUID:]
-[IMDMessageSortOrderAssigner assignSortIDToIncomingMessageWithNoExistingMessagesWithSameReplyToGUID:onChat:]
Chat has zero length identifier %@ or service %@
Chat has GUID (%@) but expected GUID (%@), recovering chat
Chat GUID did not match chat properties
Invalid Chat GUID
Chat appears to need recovery but style is not supported %c
Chat with expected GUID already exists, generating new chat identifier %@ and GUID %@
Failed to generate new chat identifier for account %@
Chat with expected GUID %@ already exists, cannot reset 1-1 chat GUID
Resolved inconsistent GUID to %@ with success: %@
IMFocusStateManager
Dispatching with 15s delay to register for NSUserDefaults KVO.
15s delay completed
IMDChatStore-AllUnreadMessages
Performing initial database housekeeping
Bailing out of initial housekeeping, currently under unit testing
Daemon
Registering for the DB reconnect notification.
Got a mandatory DB reconnect notification, I will now exit.
  => Failing all unsent, unfailed messages
  => Database was full, waiting to post
  => Posting database full
Focus state changed, rebuilding unread message count
Resetting _cachedUnreadMessageCount because _updateModificationDate
Updating cache for message guid: %@ calculateUnreadCount %@
  **** Updating this chat!
Storing Aux image transfer %@
_storeAttachmentsForMessage did not find Aux video transfer %@
Updating transfer: %@
Posting resulting transfer to clients; %@
Not storing: %@
Stored item to database: %@:%@
SyndicationActions
Updated syndication ranges with SyndicationAction %@. newRange: %@
Did NOT update IMMessageItem's syndication ranges for SyndicationAction %@
Message not found for syndication action for guid: %@
Updated syndication ranges for message item with guid %@. newRange: %@
Did not updated syndication ranges for message item with guid %@. newRange: %@
Updating syndication ranges for message item with guid %@. newRange: %@
Database
Stored message: %@
Updated from %@->%@  on service: %@
IMDMessageRecordCopyMessagesForAssociatedGUID resulted in a non-associated message item: %@
************* Please file a radar!!!!!!!!!!! *******************************
A message returned by IMDMessageRecordCopyMessagesForAssociatedGUID is associated to %@ instead of the requested GUID %@.
GUID we got from IMDMessageRecordCopyMessagesForGUIDs wasn't one of the guids we requested. IMItem we got back was: %@, IMDMessageRecordRef guid we got was: %@, requested guids was: %@
history query
Requesting history with guid: %@ handles: %@ services: %@ limit: %llu thread identifier: %@ only messages: %@
generate chat items
IMTiming
history query timing: %@
_messagesWithRoomNames: %@ onServices %@ limit %d recordStoreRecords: %@
paged history query
Requesting history with guid: %@ handles: %@ services: %@ number before: %llu number after: %llu thread identifier: %@
_limitedNumberOfMessagesWithHandles: %@ services: %@ messageGUID: %@ numberOfMessagesBefore: %d, numberOfMessagesAfter: %d record count: %d
paged history query timing: %@
_unreadMessagesWithHandles: %@ onServices %@ limit %d recordStoreRecords: %@
_unreadMessagesWithRoomNames: %@ onServices %@ limit %d fallbackGUID %@ recordStoreRecords: %@
Ensure transfers(count=%lu) with GUIDs registered: %@ for message: %@
Existing transfer: %lu/%lu %@
Found saved transfer from DB: %@
New transfer: %@
Not registering %lu/%lu transfers, too many for one message
Should load attachments for associated messages %@
Found messages with associated guids: %@  (%@)
Found messages with guids: %@  (%@)
Have stored message for guid (%@): %@
Fetched item from database for guid (%@): %@
Stored message for guid (%@): %@
Found existing message: %@ similar to: %@   (Skip Services: %@   Skip GUIDs: %@   Within Time Interval: %f)
No existing message similar to: %@   (Skip Services: %@   Skip GUIDs: %@   Within Time Interval: %f)
Stored message for replace ID (%d): %@
Found %d messages with handles: %@ on services: %@  limit: %d
Found %d messages with room names: %@ on services: %@  limit: %d
messagesWithHandlesBeforeAndAfterGUID found %d messages for number of ids: %d on number of services: %d numberOfMessagesBefore: %d numberOfMessagesAfter: %d
Found last message: %@ with handles: %@ on services: %@
Found %d messages with handle: %@ on service: %@  limit: %d
Found last message: %@ with room names: %@ on services: %@
v16@?0@"IMDMessageRecord"8
%K = %lld
Found %d filenames with handles: %@ on services: %@
Found %d filenames with room names: %@ on services: %@ 
Found %d message action items for original message guid: %@
MessageStore
Adding message GUID to readReceiptsForMissingMessage cache: %@ (size: %lu)
Found chat guids: %@ for message guid: %@
Couldn't find existing chat with guid: %@ in IMDChatRegistry for messageGUID: %@
   Found Chats: %@
Found chat guids: %@ for message identifier: %lld
Couldn't find existing chat with guid: %@ in IMDChatRegistry for messageIdentifier: %lld
PNIsValidPhoneNumberForCountry
CorePhoneNumbers
Cleaning up symbols from unformatted phone number %@ based on phoneNumberIsValid %d and phoneNumberIsShortCode %d
Canonicalized handle (%@) and unformatted handle (%@) were not equal - TU canonical: (%@) TU unformatted: (%@)
Deleted %d messages with guids: %@ in chat: %@
Deleted %d messages with guids: %@
Deleting batch %d of messages for chatIdentifiers %@ onServices %@. %d messages will be deleted.
deleteMessageswithChatIdentifiers: %@ onServices: %@
Found %d messages to delete
Deleted %d messages with replace ID: %d from handle: %@ on service: %@
IMDChatRegistry
Donating Unread Message Event to Stream for %@.
Attempted to mark a message as unread that wasn't the last message: %@
Marked %@ as unread
Marked %d messages as read with handles: %@ on service: %@  from me: %@
Marked %d messages as read with chat guid: %@ from me: %@
Returning _cachedUnreadMessageCount %@
Computed _cachedUnreadMessageCount %@
Determined unread badge count is %ld for active focus, totalUnreadCount: %ld
Attachment %@ orphaned: not in message(nil:%@), bundle %@
Attachment %@ orphaned: not in group action type %lu
Attachment %@ orphaned: not in item type %lu
Attachment %@ orphaned: mssage %@ not found
suppress DB update timer fired
setSuppressDatabaseUpdates called with suppressUpdates %d 
Scheduling a suppress DB invalidation timer
Going to retract user notifications for read messages
Retract notification for messages matching chats: %@
Posting urgent notifications for messages
Updating posted notifications for messages: %@
Going to post user notifications
Rebuilding lastFailedMessageDateChanged with new value: %lld 
Suppressed: Rebuilding lastFailedMessageDateChanged with new value: %lld 
Rebuilding/Broadcasting unreadCountChanged with new value: %lld 
Suppressed: Rebuilding/Broadcasting unreadCountChanged with new value: %lld 
Broadcasting unreadCountChanged with new value: %lld 
Broadcasting lastFailedMessageDateChanged with new value: %lld 
Suppressed: Broadcasting unreadCountChanged with new value: %lld 
Suppressed: Broadcasting lastFailedMessageDateChanged with new value: %lld 
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDaemonCore/IMDMessageStore.m
-[IMDMessageStore replaceMessageAcknowledgmentsWithNewMessageAcknowledgment:associatedMessageGUID:sender:]
Unexpected nil '%@' in %s at %s:%d. %@
newGUID
ASSERTION FAILED: %@
associatedMessageGUID
Deleting previous acknowledgments failed with error: %@
v40@?0@"NSString"8{_NSRange=QQ}16^B32
Applying edits to the content of message: %@
Edited message does not contain file transfer guid: %@
Message already had originalTextRangesByPartIndex, messages is being edited for a second (or more) time. Not overriding original values.
Message no longer contains any parts, all parts have been retracted, marking message as read
Message is fully retracted, deleting payload data
We retracted the payload data on a message that had no body and was a payload only. Inserting a retraction stamp at index 0.
MessageServiceSession
IMDMessageStoreDomain
Store Edited Message Failed
p:%ld/%@
Found %ld associated message items for retracted message part %ld in edited message %@
Associated message item %@ refers to messagePartGUID %@ that was retracted. Deleting the associated message item.
v24@?0Q8^B16
Deleting associated message GUIDs: %@
B16@?0@"IMItem"8
Breadcrumbs
Observed more than one unconsumed breadcrumb: %@ for '%@' session %@
B16@?0@"IMAssociatedMessageItem"8
History query found breadcrumb %@ with payload history: %tu items.
IMDMessageStore
************* We hit max number of attempts to load dirty messages. Bailing for now
load messages needing CK sync with limit %ld, attemptCount %lu
**** Marking message with rowID %lld as clean ***
**** We had corrupt messages amongst dirty messages. Trying to load messages again. numberOfAttempts %lu
loaded %lu messages needing CK sync with limit, messages %@
************* We hit max number of attempts to load dirty messages needing a T1 update. Bailing for now
load messages needing CK update T1 with limit %ld, attemptCount %lu
************* We hit max number of attempts to load dirty messages needing a T2 update. Bailing for now
load messages needing CK update T2 with limit %ld, attemptCount %lu
Clearing tombstone message table
SMS_FULL_WARNING
DISMISS
__kIMDMessageStoreHandleUnformattedIDKey
__kIMDMessageStoreHandleCanonicalIDKey
__kIMDMessageStoreHandleCountryCodeKey
@"<IMDMessageRecordAccountLookupResult>"32@?0@"NSString"8@"NSString"16@"NSString"24
Built IMItem: %@    from IMDMessageRecordRef: %@
 => Not storing item, service: %@  does not support a database
 => Not storing message, service: %@  does not support a database
com.apple.imagent.SyndicationLibraryChangeObserver
IMDPhotosSyndicationLibraryChangeListener
Started listening for changes to the syndication library. syndicationLibrary: %@
Stopped listening to changes to the syndication library. syndicationLibrary: %@
creationDate
Syndication library changed. Ingesting new analysis data. change: %@
Total change count: %lu.
Asset at index %lu had changes! syndicationIdentifier: %@
Ingesting new analysis data. transfer %@, asset: %@
A syndication library change was received for a particular asset, but a corresponding file transfer was not found using the asset's syndicationIdentifier. syndicationIdentifier: %@, asset: %@
EngroupCreationDateKey
wasDetectedAsSMSSpam
SMSCategory
SMSSubCategory
wasDetectedAsiMessageSpam
shouldForceToSMS
smsSpamExtensionName
numberOfTimesRespondedtoThread
LSMD
RBHE
smsHandshakeState
messageHandshakeState
restoredFromBlackhole
GPUFC
__kIMChatPreviouslyBlackholedChatHasBeenLoaded
__kIMDChatParticipantsDidChangeNotification
__kIMDChatParticipantsDidChangeAddedParticipantsKey
__kIMDChatParticipantsDidChangeRemovedParticipantsKey
Attempting to init chat with zero length chat identifier, guid: %@
Attempting to init chat with invalid guid %@
%s (%@)
-[IMDChat initWithAccountID:service:guid:groupID:chatIdentifier:participants:roomName:displayName:lastAddressedLocalHandle:lastAddressedSIMID:properties:state:style:isFiltered:hasHadSuccessfulQuery:engramID:serverChangeToken:cloudKitSyncState:originalGroupID:lastReadMessageTimeStamp:lastMessageTimeStampOnLoad:cloudKitRecordID:isBlackholed:autoDonationBehavior:autoDonationBehaviorLastModificationDate:isRecovered:]
Created chat: %@
-[IMDChat dealloc]
Dealloc chat: %@
chatIdentifier
serviceName
roomName
displayName
Updating chatInfo with autoDonationBehavior: %ld
IMDChat
engramID
serverChangeToken
cloudKitSyncState
originalGroupID
lastReadMessageTimeStamp
lastTUConversationCreatedDate
lastAddressedLocalHandle
lastAddressedSIMID
properties
style
state
unreadCount
isBlackholed
isFiltered
hasHadSuccessfulQuery
lastMessageTimeStampOnLoad
isRecovered
participants
Chat: %@  Adding participants: %@
Trying to add participants: %@ to 1:1 chat :%@
Chat: %@  Removing participants: %@
Trying to remove participant from a group chat with 2 or less participants %@
Chat: %@  Resetting to participants: %@
1:1 chat was missing participant, re-added %@ to %@
Cannot recover participant due to empty chatIdentifier for chat: %@
Reassociating chat: %@  to account: %@
IMDChat: %p GUID: %@ Style: %c State: %d Participants: %@  Room Name: %@  Display Name: %@  Identifier: %@  Unread count: %d  Row ID: %lld  Group ID: %@, originalGroupID: %@ lastAddressedHandle: %@ lastAddressedSIMID: %@ isFiltered: %d, hasHadSuccessfulQuery: %@, Engram ID: %@, serverChangeToken:%@, cKSate:%@ lastReadTime:%@ engroupCreationDate: %@ %@ cloudKitRecordID, isBlackholed: %@ groupPhotoGuid: %@ isRecovered: %@
lastMessage
pcmid
Chat: %@   Updating last message: %@
Chat: %@   Property update: %@
     Resulting properties: %@
     => Saving changes
ChatRegistry
   Generating group ID for chat: %@    groupID: %@
   Generating group ID for chat: %@    groupID: %@  using IDs = %@
Updating lastReadMessaeTimeStamp from: %@ to: %@ for chat: %@
Updating record change tag (etag) from: %@ to: %@ for chat: %@
Updating ck record ID from: %@ to: %@ for chat: %@
resetting CK Sync state
Updating last addressed handle ID from %@ to %@. force update %@
Updating last addressed sim ID from %@ to %@
Indexing with Spotlight as chat was moved out of Junk. Chat with guid: %@
Delete from Spotlight as chat was moved to Junk. Chat with guid: %@
Updating isFiltered to: %d
Index chat to Spotlight as it was moved out of Junk. Chat with guid: %@
Starting indexing %llu messages to Spotlight
Failed to find messageGUID for spotlight
Request
Failed to find messageGUID for spotlight reindexing when isBlackholed set to (expecting 0): %d
Updating isRecovered to: %@
Checking if last seen message guid needs updating, old %@ new %@
Trying to persist legacy mergedID-based merged chats - 48047873
For handle [%@] we found another handle [%@] with contactID [%@] that has the same mergedID: [%@]
handle [%@] gets a mergedContactID: [%@]
handle [%@] doesn't have mergedID siblings
invalidHandle
%@:%@
<IMDChat %p _ckUniqueID %@, ckSyncState %ld recordChangeTag %@>
Loaded message profile: %@
msgNicknames
The meCard has been edited
com.apple.private.Messages.IMDCKRecordSaltManager
IMDCKRecordSaltManager
Starting salt fetch on internal queue
*** Error fetching user ID %@
Cached salt : %@
** Fetched salt was 0 length **
v24@?0@"CKRecordID"8@"NSError"16
CloudKit Salt not fetched: syncing enabled %@ first unlock %@
Request to fetch salt
Fetched salt %@
__kIMDChatsLoadedNotification
__kIMDChatRegistryAddedChatNotification
__kIMDChatRegistryChatKey
Received first unlock merge complete notification, re-syncing chats
Resetting LastBulletinboardPostedMessageRowID: %lld
LastBulletinboardPostedMessageRowID
Not Resetting LastBulletinboardPostedMessageRowID: %lld
v20@?0i8Q12
Received merge complete notification, re-syncing chats
com.apple.imdpersistenceagent.notification.mergecompleted
com.apple.imdpersistenceagent.notification.switchcompleted
com.apple.automatichistorydeletion.deleted
Deleted history automatically, re-syncing chats
com.apple.imdpersistenceagent.notification.lastaddressedidsmodified
Last addressed handle/simIDs of chats got modified, force reloading chats
B16@?0@"IMDChat"8
Found existing chat: %@
Created chat: %@ lastAddressedHandle %@
B16@?0@"NSString"8
Chat GUID %@ doesn't match requested GUID %@, may have changed due to inconsistent properties
Cache miss for chat with guid: %@ result: %@
Cache miss for chats with group ID: %@ result: %@
Chat identifier %@ doesn't match requested identifier %@, may have changed due to inconsistent properties
Cache miss for chat with identifier: %@ account: %@ result: %@
Cache miss for chats with ID: %@ account: %@ result: %@
Cache miss for chat with roomname: %@ account: %@ result: %@
@16@?0@"IMDHandle"8
 ==> ERROR sanity check failed: ChatRegistry returned chat that did not match inputs: %@
 ==> Ignoring %@, has incorrect service: %@
 ==> Found exact match based on groupID and participants: %@
 ==> Found a newer chat based on groupID: %@
 ==> Skipping chat with display name of %@, requested display name was zero length, chat: %@
 ==> Found a newer chat based on participants and display name: %@
 ==> Migrating siblings to new groupID if needed: %@
 ==> Updating chat (%@) group ID from %@ => %@
@16@?0@"NSString"8
Finding best candidate group chat with toIdentifier: %@ fromIdentifier: %@ displayName: %@ partipciants: %@ groupID: %@
 ==> Looking up with groupID %@
 ==> groupID lookup failed, falling back to display name: %@ participants: %@
 ==> Found matching chat: %@
 Hint message for last message was older than the current last message: %@, current: %@
 Querying db for last message: %@
 => Using last message: %@ for chat: %@
 Updating unread count for chat: %@ to: %d
Updating the unread count on chat: %@
Forcing unread count to zero on chat: %@
We believe the failed message might have changed, lets rebuild with fromMessage: %@
    => toMessage: %@
Updating groupID from (%@) to (%@) for chat %@
%K == %ld AND %K == %@
Spam
Handling request (autoReport %@) to mark IDs (%@) for services (%@) as spam for chatGUID (%@)
max-spam-messages-per-report
max-spam-message-size
Server Bag has no value for max-spam-message-size, using the default 50
Server Bag has no value for max-spam-messages-per-report, using the default 2
Marked %lu messages as spam
Reporting message: %@
Chat %@ did not have final message, loaded %@
Adding cache missed chat but existing chat found with GUID %@, preferring existing chat
Adding cache missed chat, no existing chat found with GUID %@
@16@?0@"IMDChat"8
Adding cache missed chat with GUID %@, not preferring existing chats
Registering chat: %@
@"NSString"16@?0@"IMDHandle"8
Adding handle %@ handleCNID  %@ to chat %@
Evicting chat: %@
Unregistering chat: %@
Deleting chat: %@
CloudKit syncing is on. Writing deleted chat to deleted sync table
%s: item: %@ chat: %@
-[IMDChatRegistry addItem:toChat:]
%s: message: %@ chat: %@
-[IMDChatRegistry addMessage:toChat:deferSpotlightIndexing:]
******* Not storing message %@ to chat %@
******* IMDMessageStore cannot store message %@ to chat %@
Storing SMS chat %@ old display name %@, old group ID %@ new display name %@, new group ID %@
Found SMS chat with different participants than its iMessage sibling. Chat: %@. Updating participants using %@
Attempting to fix up chat participants if needed
*********** Caught exception while fixing up chat participants on client connection %@ **********
Could not retrieve chats in range (%ld,%ld) as there are not that many, so retrieving all chats, range (%ld,%ld).
Retrieving %ld most recent chats out of %ld chats
********* Calling setInitialLoadForTesting in non unit tests is not supported ***** 
com.apple.IMDaemonCore.unsupportedAction
Would have ignored reload of chats but has zero chats, forcing reload
Forcing reload of chats _isLoading: %d _doneLoadingAfterMerge: %d forced: %d
Dropping all chats in registry
Updating database clients
Posting the update chat registry to all listeners
=> Done notifying clients
NOT forcing reload of chats _isLoading: %d _doneLoadingAfterMerge: %d forced: %d
Received request to wait for chats to be loaded
Setting up observer for loaded notification...
Notified that chats were loaded
Chats are done loading! Calling completionHandler
Chats aren't done loading, this is likely because of first unlock. Continuing to wait
v16@?0@"NSNotification"8
Loading Chats... (Chat Caching: %@)
DidRegenerateGroupID63841559
Should fix unnamed groupID: %@
 Found %d chats
No service found, looking at name: %@
No service found for name: %@: removing this chat [%@]
No account: removing this chat [%@]
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDaemonCore/IMDChatRegistry.m
-[IMDChatRegistry loadChatsWithCompletionBlock:]
generatedGroupID
Unnamed group with non UUID style groupID, lets fix this chat: %@
    New groupID: %@
=> Done Loading %d Chats
Caught exception %@ while merging forks
Merge fork
Not merging forks before first unlock
try to persist mergeID merged chats for [%lu] handles
Will not add malformed IMHandle:%@ to IMDHandleRegistry
Unable to add IMDHandle to _idToHandlesMap due to exception %@ -- nilling idToHandlesMap
Removing IMDHandle:%@ from IMDHandleRegistry
Device left first unlock, re-syncing chats
calling update routing, expire and watch dog after first unlock
Done fetching latest salt after unlock
Performing one time account check after upgrade
systemDidUnlock
DidMakeAllAttachmentsClassC
Making all attachments class C
/var/mobile/Library/SMS/Attachments
ForkMerge
did not find winner %@ in list of duplicates %@
Finding group chats
Found %ld duplicate chats needing merging: %@
winningChat unexpectedly nil
losingChats is unexpectedly nil
found winning chat %@, and losing chats %@, in list of chat duplicates: %@
will merge losing chats %@ into winning chat id %@
repairing duplicate chats failed: %@
merged losing chats %@ into winning chat id %@
Deleted unwanted chat %@
finished merging %ld duplicate chats
No duplicate chats found to merge
-[IMDChatRegistry repairDuplicateChatsIfNeeded]
Unexepectedly true '%@' in %s at %s:%d. %@
_isLoading
DidCheckForDuplicateChats
will check for duplicate chats after checking pref key %@:merged-duplicate-chats
Set pref for duplicate check (%@:merged-duplicate-chats) to YES
Finished repairing duplicate chats in %f seconds
Will NOT check for duplicate chats after checking pref key %@:merged-duplicate-chats
DidMarkGroupPhotosAsUnpurgeable
NOT Using person centric grouped chats cache
Using person centric grouped chats cache
Truncating person centric grouped chats to %ld chats.
q24@?0@"NSArray"8@"NSArray"16
mergedPinningIdentifiers
Number of person centric chats created to send to client %@
Group photo inconsistency detected among merged chats. Attempting to repair
    Chat %@ has groupPhotoGuid %@
Could not find file transfer matching group photo guid: %@
Have file transfer matching groupPhotoGuid: %@. FileTransfer: %@
Accepting groupPhotoGuid %@ as the initial preferred group photo.
Preferring %@ over %@ because the creation date is newer.
Not preferring %@ over %@ because the creation date is older.
Not preferring %@ because it does not have a creation date
The preferred groupPhotoGuid is %@. Transfer: %@
Applying groupPhotoGuid %@ to chat %@ which previously had groupPhotoGuid %@
Chat %@ already had groupPhotoGuid %@, leaving as is.
Completed repair of group photo inconsistency.
Could not determine a preferred group photo among inconsistent merged chats. Leaving inconsistency as is.
(%K = %@ OR %K = %@) AND %K != %d
%@: Chat's _ckUniqueID is nil: %@
We already have a chat to upload for groupID: %@ so we need to compare last message time's
The current chat we have stored has a last message that is later than it's sibling so we don't want to write it to CloudKit and want to replace it with it's sibling. Current GUID: %@ Sibling GUID: %@
We are going to replace the current chat: %@ with: %@ so we should mark it as modified so we don't modify it twice
v24@?0@"IMDChat"8^B16
Got %llu chats to upload
Chat is not SMS or iMessage -- so no need to sync to cloudkit: %@
The current chat we have stored has a last message that is later than it's sibling so we don't want to write it to CloudKit and want to replace it with it's sibling. Current Guid: %@ Sibling GUID: %@
IMChatRegistry
Did not find chat for GUID %@
Searching for the newest chat with OriginalGroupID:%@ on service:%@
Found newer chat match for Original Group ID: %@
Searching for the newest chat with groupID: %@ service: %@
Found newer chat match for groupID: %@
Looking for chat for CKRecord with GUID: %@
Looking for chat for CKRecord with originalGroupID: %@ service: %@
Failed to find group chat with originalGroupID as regular groupID (%@) in %llu chats, trying with client groupID (%@)
Failed to find group chat with current group ID, trying with originalGroupID (%@) as groupID
Found existing chat for CKRecord: %@
No existing chat with originalGroupID (%@) found, checking client groupID (%@)
IMDChatRegistry: Found an existing chat that's not in the registry. This is likely because the registry failed it's chat load. OriginalGroupID:%@ Chat:%@
TriedToInsertDuplicateChat
Won't _ensureNoExistingGroupForCKRecord style:%hhu, originalGroupID:%@ service:%@
Found groupd_id fork for chat while applying changes from cloudKit %@
Marking fork as clean %@
Found original_groupd_id fork for chat while applying changes from cloudKit %@
Chat already exists: %@ to apply changes to
Creating new chat %@ with record %@
Marking existing chat %@ as deferred
%K = %d
Marking existing chat %@ as needing sync from deferred state 
Trying to remove chat with nil groupID: %@
Setting sort id %@ for message %@ on chat %@ synced from CloudKit
Found item that is incompatible with the current device version: %@
Message %@ is an ignorable backward compatibility message, ignoring.
Found GUID for attachment part, associating with attachment: %@ at part id %lu
Updated msg %@ to have CKSyncState %@ stored message: %@
UpdateSyncT1 relating msgID %@ to thread %@ (threadGuid %@ threadPart %@)
ThreadIdentifier update rejected, thread identifier already populated as %@, update would be %@
Update record for non-message type, ignoring
Ignoring update T1 message: could not find message for id %@ (maybe it hasn't synced or has been deleted?)
Ignoring update message T1: no message ID or thread ID %@
Ignoring message update %@, unrecognized update type
Failed to handle conflict for unknown update type %@, rowID %lu
Can't apply updated syndication ranges for %@, message not found!
Applied updated syndicationRanges to %@, was newer data? %@)
Can't apply updated syndication ranges for %@, invalid message type for item %@
Clearing pending chat delete table
Found iMessage chat %@ for chatID %@ style %@
Did not find iMessage chat for ID %@ and style %@
No handles or servicename to receive a message from: {handles: %@ serviceName: %@}
No session for serviceName %@ -- can't simulate receive
Invalidating person centric grouped chats cache
ContactStore history token updated.
Not updating the ContactStore history token with %@
All handles and CachedAliasToCNIDMap
iMessage;-;%@
SMS;-;%@
UnnamedGroupChats
NamedGroupChats
Contacts based merging is disabled.
Contacts changed notification %@ 
v24@?0@"NSMutableArray"8@"NSArray"16
Computed chats to merge. Broadcasting to clients
No chats to merge/un-merge. NOT Broadcasting to clients
aliasMap
historyToken
v16@?0@"NSDictionary"8
# chats that need update after contacts changed notification %@
No CNContact for alias %@
IMDChatRegistry_Nickname
Clean up nickname for alias %@
Hawking: New contact (%@) added, removing chat (%@) from blackhole.
Chat %@ needs to be merged / un-merged & updated in spotlight
No of entries in chat dictionary %@
Update MeCard for all IMDChats
IMDCKDatabaseManager
**** Initializing dev container with ID %@
com.apple.messages.cloud
Initializing production container %@
Manatee container %@
use-old-nickname-container
Server says to use new container? %@ {serverbagValue: %@ version: %@}
com.apple.internal.messages.memoji
com.apple.messages.profiles
**** Initializing dev nick name container with ID %@
Using Manatee Container
Nicknames NOT enabled, returning nil public database
%@/%@
/var/mobile/Library/SMS/CloudKitMockStore/
IMDCKMockRecordZone
Mock Handle operation %@ identifier %@
Adding random delay of %@ seconds
Failed to unarchive mock ck record data. Error: %@
ID %@ MOCK Handling fetchRecordZoneChangesOperation
%@ Error reading from MOCK store %@ 
About to give back %@ records moreComing %@ fetchAllChanges %@
%@ Error deleting from MOCK store %@ 
Introducing random error %@
%s: Unable to archive record %@, error %@
-[IMDCKMockRecordZone _serializedCKRecordData:]
ID %@ MOCK Handling modifyRecordsOperation
Error persisting record %@ error %@
Successfully persisted record %@ 
com.apple.private.Messages.IMDCKRampManager
metadata_zone
metadata_rampstate_v2
IMDCKRampManager
Starting ramp state fetch on internal queue
FeatureAllowed
FeaturePromoted
FeatureVisible
RetryAfter
Sending request as priority
RampPriority
Not a priority ramp request
Ramp operation %@ Desired keys %@
Fetch operation records %@ fetchError %@
Fetch ramp state - featureAllowed %@, featurePromoted: %@, featureVisible: %@, retryAfter: %ld
Couldn't find CKRecord for ramp. Defaulting to not ramped in
FetchRampState
Attempting to fetch ramp state from CloudKit with operation %@
Writing cachedRampState featureAllowed(%@) featurePromoted(%@) featureVisible(%@) fetchHadServerError(%@)
scheduling new timer with retryAfter %f
retry timer fired
Not setting up new retryAfter, last one is firing at %@
Not Requesting ramp state. Is under first unlock.
Request to fetch ramp state
Cached featureAllowed and featurePromoted are true and there wasn't an error fetching state from the server last time. Not fetching again
calling recordFetchedCompletionBlock
Not fetching from server, next one is firing at %@
Cached values: featureAllowed(%@) featurePromoted(%@). Something is not YES, or we had a server error last time(%@) so fetching from server
Fetched ramp record
Scheduling retry: %@
v36@?0B8B12B16q20@"NSError"28
v24@?0B8B12B16B20
RampStateOverride
Defaults override, returning YES
cachedRampState featureAllowed(%@) featurePromoted(%@) featureVisible(%@) fetchHadServerError(%@)
Setting.
Not enough time passed since last jettison
Max number of failure occurrences exceeded
Max time since failure occurrence exceeded
Max time or occurrences not yet met
Context has expired
IMDInconsistency
Setting inconsistency handler
Noticed inconsistency at context %@ (count = %llu)
Resolving inconsistency at context %@
LastJettisonTimeInterval
Finished initialization, last jettison was %@
v32@?0@"IMDInconsistency"8Q16^B24
Enabling timer, since we have inconsistencies we need to check up on
Disabling timer, all inconsistencies resolved
Checking our inconsistencies to see if it's time to jettison state
Too many inconsistencies found in imagent, jettisoning state and starting over (reason: %@)
Inconsistencies aren't bad enough to merit a jettison (reasons: %@)
Removing expired inconsistencies: %@
Unable to create IMFileTransfer from NULL IMDAttachmentRecordRef.
This transfer doesn't have a guid, returning nil.
Exception raised while attempting to create IMFileTransfer: %@
Created: %@ from attachment record: %@
Unable to create IMDAttachmentRecordRef from nil IMFileTransfer.
Local path: %@, filename: %@
v32@?0@"NSString"8@"NSString"16@"NSString"24
Persisting transfer failed.
Not creating entry in DB for Aux video transfer %@
IMFileTransfer
 ** Error creating video complement for file transfer: %@ imageTransfer: %@
Created: %@ from imfiletransfer: %@
Updating %@ from %@
 Storing transfer at path: %@
 File eligible for purging: %@
 File NOT eligible for purging: %@, updatedPurgeableState: %@
 ** Not storing transfer
Unable to find an attachment record for guid: %@.
We are downgrading an attachment from finished to waiting accept --> so we've deleted the path on disk and should not store the attachment
Request to store transfer: %@
  => Updating existing : %@
  => Created new : %@
  ** Associated transfer GUID %@ with message GUID: %@
Over ridiing return val in storeAttachment for Aux transfer %@
Request to unassociate transfer: %@ from message guid: %@
Request to update transfer: %@
  => Updating existing: %@ with: %@
  => Found no transfer, storing instead
Not marking path as eligible for cachedelete, cloudkit syncing is not on
Not marking attachment path for cachedelete, last component is Attachments
GroupPhotoImage
Not marking path as eligible for cachedelete, last path component matches group photo file name. path: %@
Not marking attachment path for cachedelete, not in attachment store: %@
pluginpayload
pluginpayloadattachment
Not marking path as eligible for cachedelete, file extension is a plugin payload. path: %@
Not marking path as eligible for cachedelete, file extension is an audio message. path: %@
No attachment path to mark as purgable
Found aux video path: %@
EnableCacheDeleteTTR
File a Radar
Messages Storage Management
An attachment was unexpectedly marked as not purgeable.
Presenting CacheDelete TTR UI
TTR:%@ Messages storage issue: %@
A Messages attachment was unexpectedly removed from purgable state %@.
Serious Bug
I Didn't Try
450305
tap-to-radar://new?Title=%@&Description=%@&Classification=%@&Reproducibility=%@&ComponentID=%@&ComponentName=%@&ComponentVersion=%@&AutoDiagnostics=phone
Request for attachment with guid: %@
Request for attachments with guids: %@
Request for attachment with attachmentRecord: %@
updateLegacyTransferGUID failed to get a matching record
updateLegacyTransferGUIDOnMessageIfNeeded got something thats not a IMMessageItem: %@
Re-targeting transfer GUID at part %lu to %@
_updateAttachmentGUID completed with success %@
We are updating the in-memory transfer's guid that we will sync to CloudKit in-memory transfer: %@ partKey %lu newGUID: %@
Couldn't find guid %@ in list of fileTransferGUIDs to update; aborting. Body part (id %lu) contains reference to attachment not in DB, and we've updated the transfer to reflect.
Got null attachment record for %@
Re-targeting transfer GUID at index %d to %@
We are updating the in-memory transfer's guid that we will sync to CloudKit in-memory transfer: %@ index %lu newGUID: %@
Couldn't find guid %@ in list of fileTransferGUIDs to update; aborting. List of FileTransferGUIDs (id %d) contains reference to attachment not in DB, and we've updated the transfer to reflect.
We may have failed to update a message (guid %@) in the DB, and orphaned its attachments whose GUIDs we just updated %@
Message body attachment attributes update %@!
succeeded
FAILED (maybe)
Finished reindexing %@
Deleting attachments, guids %@
Failed to delete attachments
Request to delete attachments with guids: %@
deleteAttachmentsWithGUIDs failed to get a matching message record
Found corresponding IMMessageItem for legacy GUID %@
Deleting attachments with guids from spotlight: %@
Request to delete attachment with nil guid
Request to check if the attachment path is safe: %@
Transfer is group photo? %@ transfer: %@
(%lu,%lu,%lu)
syncState
v32@?0@"NSNumber"8@"NSArray"16^B24
iMessageQueue
Messages ahead in the receive queue: %@
com.apple.sms
IMDChatStore-Schema
Archiving chat: %@
No chat record found to archive for chat: %@
Unarchiving chat: %@
No chat record found to unarchive for chat: %@
Blackholing chat: %@
Unblackholing chat: %@
Transfer already exists in transfer center. not overwriting. Transfer: %@
Adding group photo to IMDFileTransferCenter for guid: %@.
Group file transfer is nil for guid: %@. Not adding anything to file transfers.
loadAllChatsForChatStore
v16@?0^{_IMDChatRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}^{__CFArray}q^{_IMDMessageRecordStruct}q}8
RecentChatsToLoad
RecentFilteredChatsToLoad
Loading recent chats (budget %lld for known senders, %lld for other filters)
v32@?0@"IMDChat"8Q16^B24
Loading all chats took %f seconds for %lu chats
No incoming chat record.
No incoming chat records.
Tried to load chat for unsupported service (%@): %@
Lookup failed, NIL or empty message GUID.
Couldn't find chat for message guid: %@
Couldn't find message for guid: %@
Couldn't find chat for message identifier: %lld
Association failed, NIL or empty message GUID.
Association failed, NIL or empty chat GUID.
Associating message guid: %@ to chat: %@
Not indexing message:%@ with CoreSpotlight
Disassociation failed, NIL or empty message GUID.
Disassociation failed, NIL or empty chat GUID.
-[IMDChatStore deleteChat:]
Setting chat isFiltered failed, nil chat guid
MergeIT
Not persisting merge id due to override
Updating handle(%@) from:%@ to:%@
Writing to DB
Done
Location
Going to add location item: %@ to the corresponding chats with handleID: %@ hasStoredItem: %@ broadcastChanges: %@
Not sharing location group chat %@
Not sharing location with non-iMessage chat %@
Found matching participant: %@<=>%@ in chat: %@
Storing item: %@
Associating item: %@ to chat: %@
No matching chat found, ignoring
/var/mobile/Library/SMS/CloudKitMetaData/MessageSyncZoneMetaData.db
/var/mobile/Library/SMS/CloudKitMetaData/MessageSyncArchivedRecordMetaData.db
com.apple.private.IMDCKMessageSyncController
ck-max-number-of-message-batches
 overriding max number of message batches to fetch %@
**** Message %lu CKRecord size exceeds max limit.
**** We hit max number of attempts to creat CKRecords
**** Message [%@] could not be converted to CKRecord, marking it as clean and moving on.
**** Message %@ is too big. Marking it as clean and moving on
We had invalid records attempting to load records again. Attempt count %lu
Error creating message zone %@
***** Timed out creating message zone *******
Wrote message with GUID %@, error %@, recordName:%@
Encountered an unknown error.  We'll try syncing this message again on the next sync. Error code: %llu
Modify message had conflicts or the zone was not found, so treating this as a non error case
_processModifyRecordsCompletion error %@
Kicking off another batch of message writes to cloudKit
We completed writing messages. isLastBatch %@, write error %@, writeSuccess %@
PeriodicMessageSync
BackFillMessageSync
Got %@ records to sync, filtered to %@ unique records
**** We completed writing up messages. No more messages to write up. ***
Number of messages to upload %lu < max batch size. %lu 
**** This is the last batch of messages we will write
Did not schedule a write. Device Conditions suitable to write:%@
Fetched message record with GUID %@
Found parentChatID: %@, updatedLastMessageCount: %d
This is a coreduet sync at currentBatchCount %@, coreduet says to defer syncing
This is a coreduet sync at currentBatchCount %@, coreduet says to continue syncing
Message sync: device conditions allow sync: %@ deviceConditionsToCheck %@ currentBatchCount %@
Message sync: Not checking device conditions for full sync at current batch count %@ isCoreDuetSync %@
Message sync: Not checking device conditions for initial sync at current batchCount %@
Message sync: Stop syncing, feature enabled %@ hasMatchingAccounts %@.
archivedMessagesChangeToken
messagesChangeToken
Resetting the archived message sync token to nil
Resetting the message sync token to nil
processArchivedRecordsFetchCompletionZoneID serverChangeToken %@ moreComing %@ recordZoneError %@
There are more changes to fetch from archived zone. Kicking off another batch of fetching
No more archived records to fetch. Resetting defaults to fetch archived records
Record Zone Error says that the change token has expired
//---** Error fetching archived messages: %@
****** We are done fetching archived messages as max batch attempt limit reached ********
Fetching archived currentBatchCount %@ maxNumberOfBatches %@
******** Fetching archived records ***** sync token is %@
Fetch archived record %@ guid %@
v24@?0@"CKRecordZoneID"8@"CKServerChangeToken"16
** THIS SHOULD NOT GET CALLED WHILE FETCHING ARCHIVED RECORDS **
v36@?0@"CKRecordZoneID"8@"CKServerChangeToken"16B24@"NSError"28
Did not fetch archived records from message zone as device condition does not allow sync
Did not fetch archived records from message zone as no archived hint present
*** Encountered error while fetching archived records %@
*** Did not encounter error while fetching archived records
recordZoneFetchCompletionBlock serverChangeToken %@ moreComing %@ recordZoneError %@ archivedRecordsHintIsPresent %@, currentBatchCount %@ maxNumberOfBatches:%@
Setting shouldFetchArchivedRecords to true
There are more changes to fetch. Kicking off another batch of fetching
Done fetching changes from message zone.
Done fetching changes from message zone during an initial sync. Let's not write up
Done fetching live records. Will now fetch archived records
We got a %@ error while fetching messages. %@
Resetting local message sync state & last sync date after received user deleted zone error
Messages zone does not exist. Attempting to create one
//---** Error creating  messages zone
//---** Error fetching messages: %@
Failed fetching messages %@
_processFetchRecordZoneChangesCompletionWithError with no error
****** We are done fetching live messages as max batch attempt limit reached ********
shouldForceArchivedMessagesSync is YES, fetched max live record batches but will also fetch initial sync archived records if needed: %@
Since we fetched max live batch records, we will not fetch archived records
We completed fetching %@ batches of messages during a full sync, setting fullPartialSyncFirstCompletedDate to %@
Fetching live messages, currentBatchCount %@ maxNumberOfBatches %@
***recordZoneChangeTokensUpdatedBlock should not get called
*** Deleted recordID %@ type %@
Scheduling a fetch operation from message zone, using token %@
Did not fetch changes from message zone. Device condition allows sync %@. Disk Space Available %@
Need to kick off a sync of deletes because we had an incompatible message earlier.
Finished a sync of deletes because we had an incompatible message earlier (%@): %@
Mark all incompatible messages for deletion from cloudkit
_shouldMarkAllMessagesAsNeedingSync %@
Kicking off a message write after fetching messages
Completed message write %@ %@
syncMessagesWithSyncType with type %ld deviceConditionsToCheck %@
*** We were called to do an initial sync. Let's only fetch the first set of messages ***
Marking any unsuccessfully synced messages as needing sync
Finished Marking any unsuccessfully synced messages as needing sync
Done fetching archived records.
 ****** This was an initial fetch. Not writing messages *****
Not calling write messages on second callback from fetch archived records
******** Failed fetching archived messages with CKError %@ completionBlockCalledWhenFetchFailed %@
******** Failed fetching live messages with CKError %@ completionBlockCalledWhenFetchFailed %@
v28@?0B8B12B16@"NSError"20
Unsupported sync type
Clearing local sync tokens for Messages
Clearing local messages sync state, flags 0x%x
Delete message callback with error %@
Deleted recordIDs %@
Not doing CloudKit message deletes as CK syncing is off
Got %lu recordIDs to sync, filtered to %lu unique recordID
No pending messages to delete from CloudKit
********* Error while deleting messages %@
deleteDate
partBody
com.apple.Messages.recoverableMessageSync
recoverableMessageChangeToken
recoverableMessage
com.apple.private.IMDCKRecoverableMessageSyncController
IMDCKRecoverableMessageSyncController
Skipping recoverable message sync due to Feature being disabled.
Scheduling a fetch recoverable message zone changes operation %@
Recently Deleted | Reading recoverable message record: %@
Recently Deleted | Failed reading recoverable message record. deleteDate: %@ and messageGUID:%@ cannot be nil
Recently Deleted | Reading recoverable message part record
Recently Deleted | Found stored part number %@
v40@?0@"NSNumber"8{_NSRange=QQ}16^B32
Did not find partIndex: %@ in message GUID: %@
Delete record operation unsupported.
Record Zone fetch complete zoneID %@ changeToken %@ tokenData %@ moreComing %d error %@
We got a %@ error while fetching recoverable messages. %@
Attempting to create recoverable message zone
** Failed to create recoverable message zone **
We completed fetching changes from recoverable message zone with no error
We got an expired server change token back so resetting local sync state, and fetching the recoverable messages again %@
********* We got an error fetching changes from recoverable messages zone %@
Recently Deleted | Clearing local recoverable sync state, flags 0x%x
Resetting the sync token to nil
Error creating recoverable message zone %@
***** Timed out creating recoverable message zone *******
Scheduling write recoverable message operation %@
Wrote recoverable message record %@ with error %@
IMDCKRecoverableMessageSyncController | Recently Deleted: could not write record: %@ encountered error: %@
messageRowID
partIndex
Recently Deleted | Marking row %@ with partIndex: %@ for %@ as clean
Recoverable messages writes completed sucess: %@ error %@
Recently Deleted | Not performing CloudKit recoverable message deletes as CK syncing is off
Recently Deleted | Got %lu recordIDs to sync, filtered to %lu unique recordID
Recently Deleted | No pending recoverable messages to delete from CloudKit
Recently Deleted | ********* Error while deleting recoverable messages %@
Recently Deleted | kicking off another batch delete to cloudKit
Recently Deleted | No GUIDs passed in to delete
Recently Deleted | Kicking off recoverable delete of recordIDs %@
messageGUID
chatGUID
_fetchOperationFactory was passed in a nil zone
_saveRecoverableMessagesOperationFactory was passed in a nil zone
Recently Deleted | No recoverable messages data to sync
IMDCKRecoverableMessageSyncController | Recently Deleted: marking clean: Using partIndex fallback: could not convert message to CKRecord with metadata: %@
v32@?0@"NSDictionary"8Q16^B24
Found %lu of %u max recoverable messages to write up
Delete recoverable message callback with error %@
Adding additional deleted recoverable record IDs from error
Deleted recoverable recordIDs %@
deleteDateInterval
IMDCKRecoverableMessageSyncController | Recently Deleted: returning nil record. messageGUID: %@, deleteDateNanosecondIntervalNumber: %@
IMDCKRecoverableMessageSyncController | Recently Deleted: returning nil record. recordID nil for metadata: %@
Recently Delete | Was not able to construct CKRecord with given data. This is bad.
%@+%@+%ld
action
incomingMessageProcessedByDaemon
lastUpdated
collaborationNoticeDefaultThreshold
collaborationNoticeCommentThreshold
collaborationNoticeParticipantChangedThreshold
IMDCollaborationNoticeRateLimiter.persistenceQueue
rateLimiter.plist
Creating rateLimiter persistence.
Loaded empty dictionary, creating a new dictionary.
Loaded noticeEventHistory: %@
IMDCollaborationNoticeRateLimiter
aguid
avid
pathc
auxpathc
vers
mimet
IMFileTransfer_CKRecord ***** Failed to write md5 hash of file at path: %@ with exception: %@
IMFileTransfer+CKRecord
Cannot generate record ID because salt is nil.
No cloudKitRecordID, derived record ID
Record ID from existing cloudKitRecordID: %@
Cannot initialize CKRecord using derived record ID because salt is nil.
Initializing CKRecord using derived record ID
Initialed CKRecord %@ for transfer %@ using record data from DB
IMFileTransfer_CKRecord
**** File a radar **** Asset last path component %@ from url %@ is empty
**** File a radar **** Asset last path component from url %@ is nil so cannot save it to metadata
IMFileTransfer_CKRecord **** Transfer did not have URL or asset was missing on disk. URL %@
Transfer file path %@
%@ transfer has an aux video asset
**** File a radar **** Aux asset last path component from url %@ is nil so cannot save it to metadata
No transfer metadata found for record:%@
Failed cleaning up attachment asset at %@, error %@
Cleaned up attachment asset at %@
Found a better asset in CKRecord %@, cloud size %@ local size %@
Missing file size to compare: cloud size %@ local size %@
Could not read file attributes of new attachment at %@, %@
Could not find file of the asset at %@, %@
Could not read file attributes of existing attachment at %@, %@
IMDFileTransfer+CKRecord
For attachment %@ local file not found at %@
Local asset is bigger than the one in CKRecord %@, taking %@ over %@
Can't find incoming attachment from CKRecord at %@
Could not read file attributes of local attachment at %@, %@
Moving transfer asset from CK cache to final spot
IMTransfer+CKRecord
CKRecord did not have a lastPathComponent, using %@ from filename
Failed to remove existing file at %@ to replace with version from CKRecord, sucess %@ error %@
Failed to move file from %@ to %@, error %@
Created transfer %@, finalAssetPath %@
Failed to write asset to disk because of nil path! Asset from ckrecord with guid %@ has path %@, finalAssetPath %@ and asset fileURL %@
CKRecord did not have a auxVideoLastPathComponent, using %@ from auxVideoPath
Failed to remove existing aux file at %@ to replace with version from CKRecord, success %@ error %@
Failed to move file from %@ to %@ error %@
Stored aux video for transfer %@, finalAssetPath %@
Failed to write aux asset to disk because of nil path! Asset from ckrecord with guid %@ has path %@, finalAssetPath %@ and asset fileURL %@
Failed to write record image asset to %@ GUID:%@
Got IMFileTransfer record with guid %@ with no file name
Invalid record passed to initWithCKRecord %@
Trying to create imfiletransfer ckrecord with guid %@ and filename %@
Invalid record passed to utiTypeForRecord %@
Invalid record passed to sizeOfAssetForRecord %@
Invalid record passed to transferGUIDOfRecord %@
Invalid record passed to attachmentRecordHasAsset %@
Invalid record passed to cleanUpAssetsOnDiskForRecord: %@
Invalid record passed to md5HashForRecord: %@
We didn't have an md5 hash for fetched record: %@
IMFileTransfer_CKRecord ***** Failed to grab hash of file at path: %@ with exception: %@ when validating attachment
IMFileTransfer_CKRecord *** asset was nil for record id: %@
IMFileTransfer_CKRecord *** fileName [%@] or utiType [%@] is nil
We failed to validate md5HashOfCKAsset: %@ md5HashStoredOnRecord: %@
__kIMDReplayControllerErrorDomain
IMDReplayContoller
Request to store replay message %@ type %d
IMDReplayContoller message was nil
IMDReplayContoller Incorrect message type %d
IMDReplayContoller Unable to archive message object: %@
dict
IMDReplayMessageController. Storing message %@ failed with error %@
IMDReplayContoller: Found an empty message payload while replaying
IMDReplayContoller Trying to replay message of unknown type %@ %d
v16@?0q8
IMDReplayController
Request received to replay messages.
Deleting replay DB after replaying messages
deleteReplayDBIfNotUnderFirstUnlock isUnderFirstUnlock %@
Not deleting replay DB
Deleting replay DB on imagent launch after first unlock
Setting up new replay database at path: %@
Unable to setup replayStorageController, previous store controller with database at path %@ remains active
An replay database was already overriding the default, ending previous override
Restoring default replay database
Attempted to restore a database when no override database was set
Starting to recording replay database
End recording replay database
/var/mobile/Library/SMS/replayDB.db
Found message GUId %@ from IMFileTransferGUID %@ so that we can upadte the transfer. Record hasAsset %@
Taking asset from CKRecord for %@
Setting local record to upload asset for %@
Keeping local asset and sync state for %@
Fetched from CK. Updating existing transfer %@ for message GUID %@
IMDFileTransferCenter - Update from CKRecord found no existing attachment for %@, but was on the write path
Fetched from CK. Created new transfer %@ from CKRecord. Associating with message guid %@ hasAsset: %@
Do we want to download the transfer later? downloadAsset: %@, shouldDownloadAssetForTransfer: %@, hasAsset: %@
Going to auto downloading asset at the end of batch fetch for transfer: %@ addedTransfer %@ for messageItem: %@ groupPhotoUpdate: %@
Storing attachment %@ with no associate-able message %@
Nil CKRecord
markTransferAsNotSyncedSuccessfullyUsingCKRecord transferGUID %@
Could not find transferGUID %@ to mark as not synced successfully
markTransferAsNotSyncSuccessfullyDownloadedFromCloud transfer %@
resetSyncStateForRecord transfer %@ toNewState:%ld
Tried to clear the sync state for a transfer we don't have on disk transfer: %@ record: %@
Couldn't get local asset URL from CKRecord: %@
Failed to create attachment persistent path for aux video source, bad transfer/data (assetPath %@ mimeType %@ utiType %@ guid %@)
Failed to get valid attachment aux filename for aux video copy dest, bad transfer/data (auxAssetPath %@)
Failed to get aux video asset fileURL for aux video copy dest, bad transfer/data (assetPath %@ auxAssetPath %@)
com.apple.protectedcloudstorage.roll.Messages3
ck-client-max-time-to-defer-nightly-sync
IMDCKSyncController
Max Time to defer from server bag %@
Max Time to defer default value %@
_postMetricsToCloudKitOnAutomaticHistoryDeletionAgentLaunch
Received iCloud Account change notification, syncing enabled: %@
Account status is: %ld. Error: %@
SyncAfterAccountUpdate
Account status update, and we stopped sync due to missing TLKs. Launching one-off periodic sync.
Account.update
Registering for account notifications
Registered for cloudkit account change notifications
ck-imahd-sync-interval
_IMAHDAgentFallbackInterval %@
Last synced date %@ timeInterval %@, syncNotCompletedRecently %@
Scheduling nightlySyncTimer. Firing time: in %f sec.
nightlySyncTimer fired
Ignoring request to kick off of eager sync, since syncing is disabled
attempting to kick off an eager sync in %@ seconds
Kicking off a sync on power and wifi isSyncing %@ isUnderFirstUnlock %@ lastSyncDate %@ deviceConditionsAllowSync %@
postInitialSync
Not kicking off a sync on power and wifi isSyncing %@ isUnderFirstUnlock %@ lastSyncDate %@ deviceConditionsAllowSync %@
Init IMDCKSyncController
Got notified to kick off a sync due to IMAutomaticDeletionAgent
IMPowerWifiUsageCollectorOnPowerAndWifiNotification
Not doing account check on launch as device is locked
performInitialSyncOnFirstConnectionOfImagentIfNeeded {hasPerformedInitialSync: %@ hasTriedToEnableCKAndSyncForFirstTime: %@ cloudKitEnabled: %@
This is our first time connecting to imagent on this device (either first time ever or from a restore) and cloudkit is disabled --- will attempt to enable and perform initial sync -- we won't do this again
SyncAfterIdentityUpdate
Request to beginInitialSync
**** Has performed initial sync, or we aren't enabled. Not kicking off initial sync *** | isEnabled %@, hasPerformedInitalSync %@
InitialSync
We aren't ready to perform an initial sync.  We've tried %ld times.  We'll try again in %ld seconds 
We'e tried %ld times to begin an initial sync.  Giving up.
BeginInitialSync
*** Manatee keys not available not kicking off initial sync
MissingTLK
MissingTLKNoInitalSync
Restore Fail
Request to begin chat sync isPeriodic:%@
Not syncing chats from xpc activity -- mocEnabled: %@
Set state for chat syncing with result %d
We synced recently chats not syncing again after coming back online
CoreduetChatPeriodic
ManualChatSync
We dont have manatee TLK. Not kicking off chat only sync
Request to determine if we should mark all incompatibleMessagesForDeletion, set version (%ld) current version (%d)
Request to begin full sync checks %lu (reason %@)
com.apple.Messages.PeriodicSync.
Check-in for a periodic sync at priority %s
Run a User-Initiated periodic sync
Ignoring activity request to sync messages, as syncing is disabled
We did not set the state of a user-initiated xpc_activity to continue successfully for message syncing
v16@?0@"NSObject<OS_xpc_object>"8
Request to begin full sync activity:%@
CloudKit allows sync, beginning periodic sync attempt 0
CoreduetFullPeriodic
ck-stop-online-sync
ck-chat-sync-interval
_minimumChatComingOnlineSyncInterval %@
Last coming online chat sync date %@
Server override prevents us from syncing chats when coming back online
ck-block-single-device-limitation
The server is not allowing us to block chat syncing for iMessage accounts with only one device: %@
Number of devices for iMessage account: %@
Cleaning up tombstone table as CloudKit syncing is off
Request to beginChatSync from coming back online
Not syncing chats from coming back online -- clearing tombstones for deletes only 
Proceeding with coming back online sync
ComingBackOnlineChatSync
kickOffCloudKitSyncIfNeededOnImagentLaunch
disableSyncRetryOnCrash
Not attempting to kick off periodic sync as we are under first unlock AND/OR we have a defaults set com.apple.madrid disableSyncRetryOnCrash
Not kicking off a sync as this is a periodic sync attempt %ld and coreduet should decide whether to kick off a sync again
CrashedDuringSync
duringPeriodicSync
imagent started and we were in the middle of manual sync attempt %ud
duringManualSync
Is charging %@ , isOnWifi %@
NOT Kicking off a periodic sync after we got back as we are not on battery and wifi
We are on power and wifi. Kicking off a sync
ContinuingManualFullSyncAfterLaunch
startedWhileInProgress
Not kicking off a sync as there was no sync in progress or we hit max limit attempts of sync
wasXPCtriggered
restoreSync
nightlyTriggerCrash
Unknown/Crash
clearLocalCloudKitSyncState
ResetSyncDate
disable-mic-ui-refresh-during-sync
RefreshConversationList
Server disallows refreshing UI while syncing
disable-mic-ui-refresh-timer-during-sync
Server disallows refreshing UI while syncing using timer
Setting up a timer to reload the UI
Refreshing UI after time because device is unlocked
Not Refreshing UI after time because device is locked
Invalidating reload timer.
Refreshing UI after unlock
Dumped logs in past hour
Dumped restore failure logs in past hour
Current hour %@
Deleted restore failures directory at path %@
Failed to delete restore failures directory at path %@ with error %@
Dumping restore failure logs
Feature is on, time to send restore failure logdumps, found %@ to send
RestoreFailuresDump
Sending restore failure log (guid %@) at path %@ to recipient %@
Checking we whould send logs. allowedToSendLogs %@ withinAnHourOfLogDumpHour %@ hasDumpedRestoreFailureLogsInPastHour %@
It is dump log time but feature is off, deleting restore failures directory
Not auto dumping Restore Failure MOC logs withingLogDumpHour %@ hasDumpedLogsInPastHour %@ lastLogDumpTime %@
Checking if we need to dump logs using LastErrorDate:%@ and LastSyncDate%@
We haven't reported any errors in the last 24 hours and haven't syned.  Dumping logs 
NoSyncFor24Hours
Not auto dumping MOC logs withingLogDumpHour %@ hasDumpedLogsInPastHour %@ lastLogDumpTime %@
Sync
Failed syncing %@ with error %@
IMDCKSyncDomain
syncStep
Failed
Failed syncing Messages %@, please file a radar
Set activity to state %ld success %@
IMDCKRestoreDomain
Caused by: %@
Beginning initial new device sync with CloudKit. , attemptCount %@
Max attempts to sync due to recoverAble error exceeded
Messages: Failed syncing to CloudKit please file a radar
Retry
Deferring initial sync on attempt %lu, in state %ld
Failed to set activity to STATE_DEFER(3) on attempt %lu, in state %ld
Successfully synced chats after new device bringup
Successfully synced messages after new device bringup
Successfully synced attachments after new device bringup
******** Nuking CloudKit data ******
Deleting CloudKit Data
Attempting periodicSync for attemptCount %@ so setting fullSyncAttempted date.
First full sync is complete, noting down date %@
We need to dump logs after syncing
LowSyncStats
We don't need to dump logs
****** Manatee keys not available. Not syncing %@ ******
Could retry periodic sync based on error %@
Doing an attachment metadata only sync before we continue with the full sync
Attachment metadata only sync failed with error: %@
Attachment metadata only sync succeeded
First full sync has completed - lets just do a normal sync flows
Initiating full sync with CloudKit. Core Duet Sync %@, attemptCount %@
stopManateeSync
Asked to sync but we are not allowed to do so
Set state full sync activity result %d
Max attempts to sync due to recoverable error exceeded
FullMessageSync
RetryAttemptExceeded
Deferring periodic sync on attempt %lu, in state %ld
Successfully synced chats
Successfully synced messages
Successfully synced updates
Successfully synced attachments
Completed syncing deletes
Failed syncing updates with error %@
Kicking off delete sync to CloudKit
Done deleteing chat with error %@
ChatDeletionComplete
Done deleteing messages with error %@
MessageDeletionComplete
Done deleteing attachments with error %@
AttachmentDeletionComplete
RecoverableMessageDeletionComplete
IMDCKRecoverableMessageController
[Recently Deleted] Successfully synced recoverable messages
[Recently Deleted] Recoverable messages sync unsuccessful. Will Retry
Request to sync all chats
Synced chats with success:%@
Ramping says we are allowed
Unable to check exit zone record Error: %@
Entered exit zone at %@. Aborting sync, downloading all attachments. {shouldDownloadAssets: %@}
We are downgrading the security level, downgrade date %@. We can't download at this time. When the Identity is restored, we will kick sync appropriately
Not in exit state, continuing sync
** We are already performing a sync.  Ignoring current request to sync.
 Syncing Self:%@ Chat:%@ Message:%@ Attachment:%@ Exit:%@
iCloud and iMessage accounts match up ? %@
Cache says featureAllowed(%@) featurePromoted(%@) featureVisible(%@) fetchHadServerError(%@)
The ramp cache says we are not rampped.  Let us try to fetch the ramp state one more time.
fetchedFeatureAllowed: %@ fetchedFeaturePromoted: %@ fetchedFeatureVisible: %@ secondFetchHadServerError: %@
IMDCKSyncControlelr
We were ramped in on second fetch -- continuing
We were not ramped in or encountered another error trying to fetch the ramp state. Failing
Set state to DONE for sync activity result %d
v28@?0B8B12B16B20B24
Could not fetch salt, aborting cleaning up MOC
NSDebugDescription
Noting down sync started. Initial value Key %@ value %@
Noting down sync started. After setting value Key %@ value %@
IMDCKSyncController: We started a second sync before a previous one was finished.  Likely there is an exit path that isn't calling _noteMeticsForSyncEndedWithSuccces
Started by %@, running since: %@:
LongRunningSync
Resetting sync state, and attempt counts
_periodicSyncAttemptCount %@
_manualSyncAttemptCount %@
Chats, messages, and attachments have synced successfully, sync time: %@
Updating sync date for Manatee sync %@
Wrote sync date success to CloudKit %@ error %@
Request to syncChats from XPC
sync-state-user-defaults
assembled sync state debugging info: %@
Handling event with name %@ userInfo %@
Got user signed into HSA2 account notification
exitRecordDateWithCompletion in updateDowngradedDateIfNeeded failed with error: %@
Finished updating security level with error: %@
Handling AKUserInfoChangedNotification with user info: %@
Account level changed to %@
We are downgrading from HSA2 -- turning off messages on iCloud
Account level changed to unknown, not turning off messages in iCloud or refreshing values associated with IMCloudKitAppleIDSecurityLevelHSA2.
Finished checking for possible security level downgraded with error: %@. Broadcasting new state if needed.
iCloud and iMessage account match up ? %@
iCloud and iMessage accounts do not match up. Turning off MOC
Messages in iCloud not available
Messages in iCloud is not available because iCloud and iMessage accounts are different.
com.apple.IMDCKSyncController
performOneTimeAccountUpgradeCheckIfNeeded
Will performing MOIC account check on upgrade after %f seconds
Clear analytic defaults and local sync state
User has completed a first full sync so device has started doing periodic syncs. Logging full periodic sync metric.
completedPeriodicSyncSinceFirstFullSync
analytic-zone-periodic-sync-logging-not-allowed
analytic-zone-daily-state-logging-not-allowed
Not logging analytics
dailySyncState-
Device will be uploading %@ analytic dict %@ to CK. CreatedZones: %@ DeletedZones:%@
Not uploading daily sync state.
Will be uploading dailySyncState-PeriodicSync analytic dict %@ to CK.
dailySyncState-PeriodicSync
Not uploading periodic sync activity.
Received key roll pending state did change event notification
Handling Backup State Did Change
We did not have an IMDCKSyncController when trying report _PCSBackupStateDidChange
Handling Test Backup State Did Change
We did not have an IMDCKSyncController when trying report _PCSTestBackupStateDidChange
Handling Successful Keyroll from Backup
We did not have an IMDCKSyncController when trying report _PCSBackupStateKeyrollSuccessful
Handling Pending Keyroll Notification
We did not have an IMDCKSyncController when trying report _PCSPendingKeyroll
Handling Identity/TLK keys available notification, name: %@, userInfo: %@
Identity/TLK update, and we stopped sync due to missing TLKs. Launching one-off periodic sync.
Identity.update
com.apple.private.Messages.IMMessagesToTrack
Registering chat identifier: %@   style: %d  hash: %@ handleInfo: %@ lastAddressedHandle %@ lastAddressedSIMID %@
 => Found chat, but it had no particpants. Updating with handleInfo: %@
********** Created bad chat: %@ *************
1:1 chat identifier mismatch
 => We already have one, nothing to do here. Chat: [%@]
Failed to canonicalize chat identifier
Failed to find chat for hash hash %@ with chatIdentifier: %@, style: %c
Updating account ID from: %@ => %@
Failed to accept moment share for message guid: %@
Configuring Syndication Ranges for Message: %@. isSWYSpam %@, showQuickAction: %@ swyAppName: %@
v28@?0B8@"IMMessageItem"12@"IMMessageItem"20
  => Message was stored. Input: %@   Output: %@
  => No result? Using the requested message: %@
com.apple.imessage
DropSendingMessage
 ** DropSendingMessage is enabled, failing send message
Chat: Could not find a chat for itemGUID: %@
Failed to store item %@
Not sending message up to client because this message is being retried. Guid %@
Removing message: %@   from chat: %@ due to send on different service
v16@?0@"IMMessageItem"8
Not sending delivery receipt
Not handling, subclass for iMessage should handle
Chat_GroupPhoto
Not requesting group photo, subclass for iMessage should handle
Did leave chat: %@  style: %c setting state: %d
Did join chat: %@  style: %c setting state: %d   name: %@   groupID: %@ lastAddressedHandle %@ lastAddressedSIMID %@
Did join chat: %@  style: %c setting state: %d   name: %@   groupID: %@  category %ld extensionName %@
Did join chat: %@  style: %c setting state: %d   name: %@   groupID: %@
Found old message: %@  for error: %d
Updated message: %@
Message is already delivered, and we're not forcing an error here (%@)
Unable to mark error: %d, no messages found for guid: %@
Found old message for read receipt: %@
Unable to mark send of read receipt, message is on a different service: %@ vs %@
Unable to mark send of read receipt, no messages found for guid: %@
Found old message for delivered quietly receipt: %@
Setting was delivered quietly flag on local device for message: %@
Unable to mark message delivered quietly, message is on a different service: %@ vs %@
Unable to mark message delivered quietly, no messages found for guid: %@
Found old message for notify recipient command: %@
Setting did notify recipient flag on local device for message: %@
Unable to mark message notified command, message is on a different service: %@ vs %@
Unable to mark message notified command, no messages found for guid: %@
Found old message for played receipt: %@
Expire received message played on local device: %@
Unable to mark send of played receipt, message is on a different service: %@ vs %@
Unable to mark send of played receipt, no messages found for guid: %@
Found old message for saved receipt: %@
Unable to mark send of saved receipt, message is on a different service: %@ vs %@
Unable to mark send of saved receipt, no messages found for guid: %@
Received didSendSyndicationAction: %@ for Chat: %@
Updated message: %@ with action item: %@
Message not update updated for SyndicationAction - doing nothing with syndication action: %@
Updated syndication state to: %@ was successful: %@ for chat with GUID: %@
   Found message from chat: %@
   Message was already marked as delivered, ignoring
   Message was already marked as black holed, ignoring
Found old message for delivery receipt: %@
MessageService
Received delivery receipt for message: %@
Delivery receipt time was: %f
Message had error: %d
Updated message: %@  had error: %@
B8@?0
No message found for guid: %@ to mark as delivered, trying again in a bit
Second to last try, waiting longer
Last try, waiting a lot longer
No message ever found for guid: %@ to mark as read, bailing
Found chats to mark as read: %@
Updating local chat (fromMe: %@): %@
Returning early in _didReceiveMessageReadForMessageID because !_activated
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessageReadForMessageID:date:attempts:completionBlock:]
message: %@
Returning early in _didReceiveMessageReadForMessageID because messageID: %@, [[self service] supportsDatabase]: %@, service: %@
Found chats for messageID: %@   chats: %@
Found no chats for messageID: %@
Found chat for messageID: %@, chat: %@
No message found for guid: %@ to mark as read, trying again in a bit
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessageReadReceiptForMessageID:date:attempts:completionBlock:]
Found chat for messageID: %@   chat: %@
Unable notify about message, message is on a different service: %@ vs %@
Unable notify about message, no message found
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessagePlayedForMessageID:date:attempts:completionBlock:]
No message found for guid: %@ to mark as played, trying again in a bit
No message ever found for guid: %@ to mark as played, bailing
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessagePlayedReceiptForMessageID:date:attempts:completionBlock:]
-[IMDServiceSession(IMDServiceSession_Chat) _didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:attempts:account:completionBlock:]
   Message was already marked as saved, ignoring
v16@?0@"IMItem"8
Stored item: %@     Actually stored: %@
Posting received message: %@
Item was not stored, ignoring
v28@?0B8@"IMItem"12@"IMItem"20
No message found for guid: %@ to mark as saved, trying again in a bit
No message ever found for guid: %@ to mark as saved, bailing
-[IMDServiceSession(IMDServiceSession_Chat) didSendMessage:forChat:style:account:forceDate:itemIsComingFromStorage:]
Not notifying for message: %@   this is a typing indicator, and we've already stored a completed message
Not notifying for message: %@   this is a typing indicator, and it failed
Automatically saving message sent from local device: %@
Expire message sent from local device: %@
Updating date on message guid %@ to be: %@
Updating isFiltered to NO, replying to chatId: %@
iMessage junk chat, updating isFiltered to NO, replying to chatId: %@
Posting sent message: %@
-[IMDServiceSession(IMDServiceSession_Chat) notifyDidSendMessageID:account:shouldNotify:]
Updated sent message: %@   duration: %@
Unable notify about message, no messages found for guid: %@
Can't delete on this service %@
Ignoring name update, already the current name
The existing message was read, let's mark the new one is read
The existing message has a time: %@, so lets set the new message to have the same time
We are setting the reply to guid for message %@ to be %@ as a reply to guid has not been set
Assigning sort id %@ to message %@ for chat %@
Chat's last read message time date (%@) guid (%@) timestamp: (%@) Messages time date (%@) timestamp: (%@) Server timestamp: (%@)
Last read message time is in the future. Not marking incoming message %@ as read
Setting message %@ as read as incoming message is older than the chat's last read message time
Marking message as failed due to preflight rendering
v12@?0I8
Bailing, we had a similar message: %@
Service was SMS, let's move it over to iMessage
Broadcasting service update for message with GUID %@ after suppression
*** Bailing, we already had a finished message for this in the database. ***
The input message disagrees with the "from me" attribute, creating a new message ID
@"IMMessageItem"16@?0@"IMMessageItem"8
No timing information available for incoming message processing with guid %@
  Ensuring the app is alive here
Stored message: %@     Actually stored: %@
Not donating to Message: %@ to CoreSpotlight. isSWYSpam %@, showQuickAction: %@
Message was not stored, ignoring
Updating invitation message after DB store: %@
Invalid chat identifier, ignoring
Chat: %@  status update: %d  style: %c lastAddressedHandle %@ lastAddressedSIMID %@
Updating isFiltered to NO, chat ID is a business chat: %@
Chat: %@  member: %@ from member: %@ unformated: %@ country: %@ status update: %d  style: %c
Storing participant leave: %@
Storing %@ participant change item  %@ => %@
invite
remove
Hawking: New participant (%@) added to chat (%@) is a known contact.
Hawking: New participant (%@) added to chat (%@) is not a known contact.
_CDSpotlightItemRecorder
CoreDuet
Going to remove chat guid from core duet %@
done deleting searchable items with domain identifiers %@. success %@ error %@
No chat to update downgrade properties for.
Handling routing dictionary: %@
Chat: Got a missing service in routing dictionary for GUID (%@): %@
Chat: could not find a session to route message GUID: %@
Chat: Could not re-route missing message GUID: %@
Chat: Could not find a chat for message: %@
Not routing message (%@) because it is not sent and has no error, not a candidate for routing
Re-routing message (guid:%@):%@   chat:%@   service:%@   session:%@
No chat registered, creating on one on service %@  identifier: %@   style: %c  (Chat: %@)
Generated handle info: %@ for group chat: %@
Found iMessage chat [%@], will use lastAddressedHandle %@ lastSIMID %@
No iMessage chat found for chat identifier: %@
Chat: could not find iMessage session to find iMessage chat.
Chat already exists for the other session, nothing to do here: %@
Sending message to session: %@  chatGUID: %@
v32@?0@8@16^B24
v24@?0@"NSDictionary"8d16
Scheduling a routing check with interval: %f
message-routing-timer
Handling expire state dictionary: %@
Chat: Could not expire missing message GUID: %@
Not deleting message (%@) because was already saved
Not expiring message (%@) because its expire state %d is already %d
Expire message (guid:%@):%@   chat:%@   session:%@
   delete expired messages: %@
   deleted expired messages: %@
Don't schedule expire state check with interval: %f, one is already scheduled with interval: %f
Scheduling an expire state check with interval: %f
message-expire-state-timer
Handling watchdog dictionary: %@
Chat: Could not watchdog missing message GUID: %@
Don't schedule watchdog check with interval: %f, one is already scheduled with interval: %f
Scheduling a watchdog check with interval: %f
message-watchdog-timer
Going to user user notifications to notify for urgent messages
Auto Replier sending delivered quietly receipt for messageGuid %@ in chatGuid %@
Auto Replier sending notify recipient command for messageGuid %@ in chatGuid %@
Successfully consumed EN url, marking message as read: %@
Predominant service check for incoming message:%@ in chat:%@ was determined to be %@
Not showing quick action since we did not get an AppName
Invalid chat or incorrect number of messages
Identifying the predominant service for chat: %@
Invalid parameter. chatGUID: %@ service: %@ number of messages:%lu
Incorrect chat %@, has more than the number of participants we expected!
Chat %@, has the wrong number of participants than what was expected!
Failed to fetch %lu number of messages from chat %@
Chat opted out of Auto donation. Not configuring syndication ranges
Configuring syndication ranges for incoming message:%@ in chat:%@
Storing message: %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDaemonCore/IMDServiceSession_Chat.m
void _IMDStoreMessage(IMDService *__strong, IMMessageItem *__strong, BOOL, BOOL, BOOL, BOOL, FZMessageFlags, __strong _IMDMessageStoreShouldStoreBlock, __strong _IMDMessageStoreDidStoreBlock, __strong _IMDMessageStoreCompletionBlock)
_IMDStoreMessage
Unexpected false '%@' in %s at %s:%d. %@
[resultMessage isKindOfClass:[inMessage class]]
input and output message types are not the same. input message has type %@. output message has type %@
  => Result message: %@
Set avatar likeness data for message %@
Set biz intent data for message %@
Set locale data for message %@
Set meCard sharing preferences data for message %@
%@;%c;%@
Found messages guids to mark as read: %@
Notifying about messages: %@
Found message to mark as played: %@
Automatically saving received message played on linked device: %@
Expire received message played on linked device: %@
Found chats to mark as played: %@
Updating chat: %@
Notifying about message: %@
Found message to mark as saved: %@
Found chats to mark as saved: %@
  => Result item: %@
v56@?0@"IMDiMessageIDSDelegate"8@16@"IMDiMessageIDSTrustedData"24@"IMDiMessagePipelineResources"32@"IMMessageContext"40@"IMPowerAssertion"48
IMTransferServicesController_Preview
Generating preview OOP with tmpURL %@ finalURL %@ previewURL %@ maxWidth %f scale %f
IMTranscoderAgent OOP generation completed with error %@
OOP preview generation failed in imagent with error %@
Storing size value %@ for previewURL %@
Transcoder Preview Generation Failure
IMPreviewGeneratorDomain
Timed out getting preview from IMTranscodeController in imagent
persistedPreviewURL: %@
Received CommSafety response from Media-Analysis-Daemon with result %@, %@
Received CommSafety response from Media-Analysis-Daemon with error %@
Timed out waiting for sensitive image check
Not pregenerating preview, no persistedPreviewURL
Not pregenerating preview, utiSupported %@ isCMM %@ aux Video %@, calling completion directly
kMarkSensitiveKey
Not pregenerating preview: IM_BLASTDOOR_ATTACHMENT_PREVIEW_ENABLED NOT set
v44@?0@"NSString"8@"NSString"16B24@"NSError"28@"NSString"36
com.apple.MobileSMSPreview
IMFailPreviewGeneration
Initial sync device conditions check if CloudKit sync is enabled: %@ has accounts %@
Initial sync device conditions check if CloudKit sync is enabled: %@, hasAccounts %@
Initial sync device conditions check if CloudKit sync is enabled: %d
Initial sync device conditions ignoring feature enabled: always TRUE
Initial sync. Not writing up attachments
IMDMessageHistorySyncController
ReplayController requested a history Sync
ReplayController already has sync in flight ignoring request
IDS Transport Log requested a history Sync
IDS Transport Log already has sync in flight ignoring request
Cloudkit Chat Controller requested a history Sync
Cloudkit Chat Controller  already has sync in flight ignoring request
Checking if any sync task need to be started
Already performing a sync task, waiting for that to complete before kicking off the next task
Starting Sync
Finished Sync
v16@?0Q8
No Message History to sync.
Will check in %u seconds if another sync needs to be done
/var/mobile/Library/SMS/CloudKitMetaData/ChatSyncZoneMetaData.db
chatLockRecordType
chatLockRecordName
lRKey
com.apple.private.IMDCKChatSyncController
************ CREATING CHAT LOCK RECORD **************** OH BOY **************
changeToken
**** Do not call -[IMDCKChatSyncController _chatsToUpload] on main thread *******
Error creating chat zone %@
***** Timed out creating chat zone *******
per record completion block record %@ changeTag %@ error %@
We are setting the lock record on the callback for processing records
We got back error [%@] on the lock record, setting the lock record to nil to re-generate on next sync
Error %@ while writing up record %@ 
Extracted record from server error%@ 
Got a conflict while fetching lock record %@
modifyRecordsCompletionBlock error %@
Number of records saved %@
We got back that we have exceeded quota in chat sync -- failing to continue writes
We only had partial error and the whole batch failed 
lock record is present amongst chats
******** LOCK RECORD IS NOT PRESENT ******
We failed to sync Chats due to op lock Not doing ABC %@
Number of chats to write up %@
Chat to sync up %@
This is the last batch of chats to write up
Adding lock record %@
Kicking off another batch of chats to write up
*** This was the last batch of chats to write up. Done writing up chats
**** Error %@ writing chat records %@ to cloudKit *****
No chats to sync up at this moment
No completion block to call
Creating a fetch chat record operation using sync token %@ for zone %@ limit %@
**** _processRecordDeletion:Dropping delete as IDS syncs it real time. ***
** We got the lock record %@ **
_processRecordChanged changed recordID:%@ for ChatGUID %@
Kicking off chat write
Not writing up chats as sync type does not allow it
We got a %@ error while fetching chats. %@
Resetting local chat sync state & last sync date after receiving user deleted zone error
Attempting to create chat zone
Attempting to create chat zone so setting createdChatZone BOOL to YES
** Failed to create chat zone **
We completed fetching changes from chat zone with no error
We got an expired server change token back so resetting local sync state, and fetching the chats again %@
********* We got an error fetching changes from chat zone %@
Scheduling a fetch chat zone changes operation %@
chatExistsWithCompletion (batch size %d)
ChatsExistCheck
Fetched record %@
Completed query %@ with error: %@, foundRecord: %d
Scheduled fetch changes operation to check for the existence of a single chat with identifier: %@ (batch size %d)
chat sync controller checking eligibility
Received error checking eligibility: %@
Returning cached value: %@
_shouldMarkAllChatsAsNeedingSync %@
IMCKChatSyncController
Resetting fetched chats bool to NO
Starting chat sync attempt count %@
Exceeded number of chat sync attempts
**** Not Eligible For Truth Zone, but earlier we were able to fetch the chat zone. Something is up! ****
Syncing chats in new device bring up scenario
Chat sync error %@
*********** we failed to sync Chats due to op lock %@, kicking off another chat sync
Not syncing chats due to missing defaults. Please do following as mobile and try again - defaults write com.apple.madrid enableCKSyncingV2 YES
Clearing local chat sync state, flags 0x%x
Marking all chats as dirty
_handleChatDeletionCompletionForRecordIDs error %@
Deleted chat with recordID %@
Error deleteing chats from CloudKit %@
CloudKit Syncing is disable
com.apple.IMDCKChatSyncController
Got %lu recordIDs to sync, filtered to %lu unique recordIDs
Failed to filter record IDs for chat deletion sync, error: %@
No pending chats at this moment
***** WE should not get record completion block in delete operation
Filtering chat recordIDs to those with modification date after %@
Completed chat record fetch with %llu results, error: %@
Including chat with record ID %@ modification date %@ since it is before %@
Filtering out chat with record ID %@ modification date %@ since it is after %@
v32@?0@"CKRecordID"8@"CKRecord"16^B24
IMDMessageHistorySyncNotifyReplayControllerWantsSync
IMDMessageHistorySyncNotifyCKChatSyncControllerWantsSync
IMDMessageHistorySyncNotifyIDSTransactionLogWantsSync
task_flags
/var/mobile/Library/SMS/Stickers
IMDStickerRegistry
Deleting legacy Sticker folder at path %@, error %@
Initialized IMDStickerStore
_isRecipeBasedSticker invalid properties
Retrieve sticker with properties %@, completionBlock %@
IMDStickerRegistry. No completion block passed in.
sticker found in cache %@
Received ME-sticker from balloon %@
IMDStickerRegistry. Failed retrieving sticker me-sticker with error %@, outputURLS %@
Received transcoded output from balloon bundle id %@ path %@
v40@?0@"NSArray"8@"NSString"16@"NSError"24B32B36
Sticker not found in cache
Invalid sticker properties passed to retrieveStickerWithProperties %@
com.apple.private.IMDaemonCore.IMDStickerRegistry
typing-indicator-cleanup
Tried to change property %@ with nil buddy ID
Tried to change empty property for buddy ID: %@
Tried to change IDProperty for buddy ID: %@   bailing
IMDServiceSession_BuddyList.m
Too many calls to [IMDService endBuddyChanges]!
com.apple.Messages.UpdateSync
com.apple.private.IMDCKUpdateSyncController
Clearing local updates sync state, flags 0x%x
mic-delete-update-zone
IMDCKUpdateSyncController
Deleting zone based on default, and skipping Update syncs
Scheduling a fetch update zone changes operation %@
Fetched update record with type %@
We got a %@ error while fetching updates. %@
Attempting to create update zone
** Failed to create update zone **
We completed fetching changes from update zone with no error
We got an expired server change token back so resetting local sync state, and fetching the updates again %@
********* We got an error fetching changes from update zone %@
updateChangeToken
Error creating update zone %@
***** Timed out creating update zone *******
Scheduling write updates T1 operation %@
Wrote T1 update record %@ with error %@
Marking row %lld for %@ as clean
Update T1 writes completed sucess: %@ error %@
Scheduling write updates T2 operation %@
Wrote T2 update record %@ with error %@
Successful write of T2 update to the server, updating syncedSyndicationRanges for message guid %@ 
Update T2 writes completed sucess: %@ error %@
fetchOperationFactory was passed in a nil zone
saveT1OperationFactory was passed in a nil zone
**** T1 Update item [%@] could not be converted to CKRecord, marking it as clean and moving on.
Found %lu of %u max T1 updates to write up
saveT2OperationFactory was passed in a nil zone
**** T2 Update item [%@] could not be converted to CKRecord.
Found %lu of %u max T2 updates to write up
XPC Activity state was NOT in state continue(4), was in state %ld!
Keychain
Abandoning password fetcher with request ID: %@  session: %@
No pending password fetch requests for session: %@
IMDServiceSessionBase
/*-------calling into leaveiMessageChat from legacy service session, please file a radar-------*/
/*-------calling into invitePersonInfoToiMessageChat from legacy service session, please file a radar-------*/
/*-------calling into sendGroupPhotoUpdate from legacy service session, please file a radar-------*/
/*-------calling into retryGroupPhotoUpload from legacy service session, please file a radar-------*/
/*-------calling into removePersonInfoFromiMessageChat from legacy service session, please file a radar-------*/
/*-------calling into closeSessionForChat from legacy service session, please file a radar-------*/
/*-------calling into sendNicknameUpdatesToPeerDevices: from service that doesn't support it. File a radar-------*/
/*-------calling into sendNicknameInfoToChatID: from service that doesn't support it. File a radar-------*/
/*-------calling into reflectMarkUnreadToPeerDevicesForMessageGUID: from service that doesn't support it. File a radar-------*/
/*-------calling into reflectRecoverChatToPeerDevicesForMessageGUID: from service that doesn't support it. File a radar-------*/
/*-------calling into sendEditedMessage: from service that doesn't support it. File a radar-------*/
IMDAskToBuyReponseHandler
Launching askpermission page
APRequestHandler
AskPermission
__kIMDReplayMessageStorageControllerErrorDomain
passing in nil filePath to initWithFilePath
IMDReplayStorageController
IMDReplayStorageController was asked to store nil dictionary
Deleting replay db with path %@
IMDCKInitialMessageSyncController
Initial sync device Not writing up messages
UserInfo
IMDXPCEventStreamHandler
%@ received event with name %@ and user info %@.
__ksFirewallUserNotificationIdentifier
RememberPassword
Not Connected
Unexpectedly disconnected
Disconnecting...
Connecting...
Connecfted
-[IMDServiceSession disallowReconnection] %@
Auto-Reconnect Request: %@:%@
Auto-Reconnect failed (Network conditions don't allow it): %@:%@
Reconnecting account: %@:%@
Do Login: %@:%@  (serviceLoginStatus: %d)
Ignoring Login: %@:%@  (serviceLoginStatus: %d)
_login_serverSettingsReadyWithAccount: %@:%@
The account name or server is not valid.
  setting service status to disconnected, account or server is invalid
****** No IMConnectionMonitor for login of account: %@
A network error occurred.
_data_connection_ready: %@:%@
v72@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56@"NSNumber"64
_login_usernameAndPasswordReady: %@:%@
_login_checkUsernameAndPassword: %@:%@  has pass: %@   bad pass: %@
_login_checkUsernameAndPassword: connectionMonitor says we're not reachable
Skipping login, we're not activated
Strange, we're here, but already logged in
Building password notification dialog for: %@   (has pass: %@   has login: %@  bad pass: %@)
v76@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56B64B68B72
autoLogin: %@:%@
Login request: %@:%@ (Setting should reconnect flag = YES)
-[IMDServiceSession logoutServiceSession]: %@, account:%@
-[%@ logoutWithAccount:%@] (activated = %@)
Tried to logout: %@  but we're not supposed to, reflecting this!
<<Connected>>
** %@: clearing _shouldReconnectFlag at logout
%@: Login status changed to %@ (%@)
__kIMDBadgeUtilitiesLoginStatusChangedNotification
-[IMDServiceSession _autoReconnectTimer]: %@
 => Network appears to be up, we'll try to auto reconnect
 ** Network does not appear to be up, we'll skip this attempt
-[IMDServiceSession _clearAutoReconnectTimer]: %@
<%@:%@:%@>
[%@: <%@:%@:%@:%@:%@>]
ogid
name
filt
sqry
prop
prop001
ptcpts
gpid
CKRecord_GroupPhoto
Transfer not found for group photo guid %@
Transfer not finished for group photo guid %@
Resource not reachable for %@ with error %@
ckAsset not able to initialize from transfer file URL: %@
*********Cannot create record without a salt
@"NSData"16@?0@"IMDHandle"8
Couldn't add group photo to CKRecord. Returning nil.
Syncing new syndication attributes up %@
Invalid record passed to chatWithCKRecord %@
@"IMDHandle"16@?0@"NSData"8
Server Chat record has props001 %@, pulling isAutoDonating and donationDate
Server Chat record had props001 data, but we failed to decode to a dictionary!
Group photo exists, setting up transfer
Failed to move group photo file from %@ to %@, error %@
CKRecord_GroupPhoto+CKRecord
Found transfer: %@
Failed making group photo file class C: %@ with error %@
Group photo stored for chat guid %@ with transfer %@
Failed to write asset to disk because of nil path! Asset from ckrecord with guid %@ has path %@, finalAssetPath %@
applying changes on chat %@ state %ld
Local last read timestamp %lld, server record last read timestamp %@
Server Chat record has props001 %@, pulling syndication_type and syndication_ranges
Server Chat record has older props001 %@, local syndicationDate: %lu, skipping
Updating chat:%@ madeChanges %d serverHadMoreRecentData %@
Updating chat %@ record name %@ change tag %@
com.apple.demo-settings
StoreDemoMode
IMDBadgeUtilities
_lastFailedMessageDate saved date %@  last failed message data in DB %@ 
__kMessagesBadgeControllerClearFailureBadgeNotification
com.apple.IMSharedUtilities.IMUserLoginIntentChangedInternal
-[IMDBadgeUtilities updateBadgeForUnreadCountChangeIfNeeded:]
Unread count changed from %d to %d
-[IMDBadgeUtilities updateBadgeForLastFailedMessageDateChangeIfNeeded:]
Failed message date changed from %lld to %lld
-[IMDBadgeUtilities _postBadgeNumber:]
Call notification center to post badge number %@
-[IMDBadgeUtilities _postBadgeNumber:]_block_invoke
Notification Center post badge number with error: [%@]
-[IMDBadgeUtilities _postBadgeString:]
Call notification center to post badge string %@
-[IMDBadgeUtilities _postBadgeString:]_block_invoke
Notification Center post badge string with error: [%@]
_shouldShowFailureString _showingFailure %@ _isUnexpectedlyLoggedOut %@ 
Alias
-[IMDBadgeUtilities _clearFailureBadge]
Clearing failure badge, old value = %@
SuppressingReceiveSoundMessageGUIDs
-[IMDBadgeUtilities _cacheFailureDate:]
Cached failure id %lld    alert failure id %lld
com.apple.imdbadgeutilities
lastMadridFailureID
Clear failure badge notification
Unexpected log out dependent value changed
Device does not support FaceTime, not registering TUConversation delegate
Setting up conversation manager for imagent
TUConversation registered
Completed conversation manager setup for imagent
Chats count: %@
chat handle %@ vs conversation handle %@
@16@?0@"TUConversationMember"8
We mapped a chat %@ to a TUConversation with messagesGroupUUID %@ for chat groupID %@
While groupID matched, Messages participants (%@) did not equal TUConversation remoteMembers (%@)
While groupID matched, Messages participants (%@) count did not equal TUConversation remoteMembers (%@)
Attempting to map 1x1 chat for conversation: %@
v24@?0@"TUConversation"8^B16
Not able to find lastAddressedLocalHandle, falling back to account's loginID
Conversation initiator handle value %@
Not creating IMTUConversationItem - likely a nil lastAddressedHandle on chat: %@ or nil handles in conversation: %@
TUConversation UUID %@ for conversation %@
Callback for addedMembersLocally conversation: %@ member: %@
Found chat to potentially add members to: %@
ChatRegistry_CallManagement
@"NSString"16@?0@"TUConversationMember"8
This is a lightweight member - skipping: %@
IMDChatRegistry_CallManagement
Destination is registered for iMessage, adding to group: %@
Destination is NOT registered for iMessage, skipping adding to group: %@
Couldn't find chat, trying to create a new one!
Indicating to TU that we are now mapped to a messages group.
CKRecordUtilities
Computed message record name hash %@ from guid %@ and salt %@
Could not compute message record name hash %@ from guid %@ and salt %@ as one or both are nil
<IMDIDSAccount:%p, ID:%@, idsAccount:%@ >
P:%@
E:%@
iMessageBusiness
imessage
********** We don't have an IDSAccount, please file a radar ********** State: service session = %@, accounts = %@
********** We couldn't find an IMDAccount for the IDSAccount, please file a radar ********** State: service session = %@, IDSAccount = %@, accounts = %@
********** Requesting registered URIs but we don't have an IDSAccount, please file a radar ********** State: service session = %@, accounts = %@
-[IMDAppleServiceSession sessionDidBecomeActive]
-[IMDAppleServiceSession sessionWillBecomeInactiveWithAccount:]
AppleServiceSession
IMDAppleServiceSession
%@ callerID - choosing %@ from %@, idsAccount %@
 ** Selected display ID: %@  was not in URIs set: %@
callerURI - No bindings !!, idsAccount %@ registeredURIs %@
CallerID
IDS Account (%@) registered for: %@ but registration status was wrong. Saving for later
IDS Account (%@) not registered for: %@, serviceName: %@, moving on
No backward compatibility message match found %s
Could not find edited message matching backward compatibility message %s. Message cannot be dropped.
Found edited message matching backward compatibility message %s. Message can be dropped.
No plain body found for message %s
__IMDBackwardCompatibilityMessageIdentifier
@16@0:8
B32@0:8@16@24
v16@0:8
parser
v16@?0@"NSArray"8
Backward compatibility message %s does not match any edited message in our database.
Backward compatibility message %s matches an existing message %s at message part %ld.
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
IMSharedUtilities
EDITED_MESSAGE_BACKWARD_COMPATIBILITY_FORMAT
EDITED_MESSAGE_BACKWARD_COMPATIBILITY_EDITED
Backward compatibility message prefix is unlocalized in %s
Backward compatibility message format is unlocalized in %s
IMDaemonCoreHelloWorldClass_Impl
sharedUtilitiesHelloWorld
persistenceHelloWorld
v8@?0
IMDaemonCore.CallManager
Failed to find existing chat for conversation: %s
Invalid call to CallManager's registerChat function for conversation %@
registerChat(for:)
Can't create chat for conversation %@ since the remoteMember %s isn't iMessage-able
Failed to create IMTUConversationItem for conversation %@ on chat %@
Storing conversationItem %@ on chat %@
Not adding IMTUConversationItem since item GUID %s already exists
Found existing item mapping to chatIdentifier: %s
IMDCallManager_Impl
@24@0:8@16
queue
serviceSession
conversationManager
featureFlags
newChatListenerTask
v32@0:8@16@24
Couldn't pick initiator for conversation %@ on chat %@
Not mapping conversation %@ to chat %@ because of remaining handles %s
Received notification that conversation messagesGroupUUID was added: %@
Couldn't find chat for conversation %@
Couldn't find chat for 1-1 conversation with %s, attempting chat creation!
Can't post notification since we couldn't fetch initiator from conversation %@
SharePlay notification will be posted for "%s" app in chat %@ and conversation %s
Received request to post notification for conversation %@ on chat %@
Received notification that conversation was added: %@
v12@?0B8
Received invalid object type from IMDChatAddedNotification %s
Notified that chat was added %@
Notified that all IMDChats are loaded.
Waiting for new chats 
Couldn't find conversation for chat %@
TUConversationManager registered
collaborationClearNoticeRateLimiterOverride
IMDCollaborationClearNoticeRateLimiter.persistenceQueue
RateLimiter: clear notice for collaboration id %s hasn't been sent before, approved to send.
RateLimiter: clear notice for collaboration id %s couldn't calculate elapsed time.
RateLimiter: result=%{bool}d for notice collaboration id %s, elapsedMinutes: %ld < threshold: %ld
IMDCollaborationNoticeRateLimiter: collaboration id %s => %s
B24@0:8@16
rateLimiterOverride
persistenceQueue
noticeEventHistory
Error persisting clearNoticeEventHistory, error: %@
clearNoticeRateLimiter.plist
Creating rate limiter persistence
IMDCollaborationClearNoticeRateLimiter: Loaded empty dictionary, creating new dictionary
com.apple.Messages.IncomingClientConnectionListenerWorkloop
Resuming XPC listener for %s
Invalidating XPC listener for %s
IMDaemonCore.IncomingClientConnectionListener
init()
IMDIncomingClientConnectionListener
$defaultActor
machServiceName
allowedEntitlements
listener
clients
requestHandlers
clientConnectionWorkloop
Removing client %s
ClientConnection
v24@?0:8@?<v@?@>16
Resumed connection for PID %d
Configuring XPC connection for %s from PID %d
Connection invalidated for PID %d
Connection interrupted for PID %d
Client %d does not have any of allowed entitlements %s, invalidating connection
Incoming XPC connection for %s
Client %d has entitlement %s
No required entitlements have been specified, allowing all clients
infix associatedValue 
wrappingPairs
No plain text tapback found for message %s
Interpreted plain text tapback %s but could not find original message using infix string
Interpreted plain text tapback %s for %s, attaching to %s with range %s, took %fs
__IMDPlainTextTapbackInterpreterImpl
@32@0:8@16@24
v32@?0@"IMMessagePartDescriptor"8q16^B24
PlainTextTapbacks
Removed a heart from "%@"
Removed a like from "%@"
Removed a dislike from "%@"
Removed a laugh from "%@"
Removed an exclamation from "%@"
Removed a question mark from "%@"
DaemonCallManager
CollaborationNotices
DaemonClientConnections
_TtC12IMDaemonCore15DaemonWorkActor
_IMDInternalWorkQueue
v24@0:8@?16
Starting to accept incoming connections
Notifying clients they need to re-request setup
IMDaemonCore.ClientConnectionManager
IMDClientConnectionManager
connectionListener
@20@0:8B16
broadcasterForAllListeners
T@"<IMDaemonListenerAnyProtocol>",N,R
broadcasterForAccountListeners
T@"<IMDaemonListenerAccountsProtocol>",N,R
broadcasterForChatListeners
T@"<IMDaemonListenerChatProtocol>",N,R
broadcasterForBlackholeChatListeners
broadcasterForChatDatabaseListeners
T@"<IMDaemonListenerChatDatabaseProtocol>",N,R
broadcasterForChatCountsListeners
T@"<IMDaemonListenerChatCountsProtocol>",N,R
broadcasterForFileProviderListeners
T@"<IMDaemonListenerFileProviderProtocol>",N,R
broadcasterForAVConferenceListeners
T@"<IMDaemonListenerAVProtocol>",N,R
broadcasterForACConferenceListeners
Broadcasting %s to: %s
Unable to save notice, can't retrieve object context
Unable to save notice, error: %s
Saved notice: %@
Unable to get notices, can't retrieve object context
Failed to retrieve notices, error: %s
Retrieved %ld notices for urls (%ld: %s
No URLs provided, unable to retrieve any notices
Unable to get metadata from PersistedCollaborationNotice, %@
Unable to get guidString from PersistedCollaborationNotice, %@
Unable to delete notice, can't retrieve object context
guidString == %@
Failed to delete notice, error: %s
Found %ld notices for guidString: %s
No notices to delete for guidString: %s
Unable to delete notices, can't retrieve object context
url BEGINSWITH %@
Failed to delete notices, error: %s
Successfully deleted notice with collaborationIdentifier: %s, %@
No notices to delete for collaborationIdentifier: %s
Successfully deleted %ld notices
No notices to delete
IMDCollaborationNoticeStore
v24@0:8@16
$__lazy_storage_$_persistenceContainer
description
T@"NSString",N,R
Successfully deleted notice with guidString: %s, %@
Fatal error
PersistedCollaborationNotice
IMDCollaboration
Unable to generate objectModelURL, aborting.
Unable to resolve collaboration notice directory path %s
collaborationNotices.db
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Loading store at storeURL: %s with persistenceContainer:%@
Successfully loaded store: %s
Error loading store: %s
com.apple.Messages.ClientConnection
No current client connection when invoking request for %s, ignoring request
_TtC12IMDaemonCore16ClientConnection
unlockedConnection
unlockedCapabilities
unlockedID
unlockedSupportedServices
unlockedRequestHandlers
Rejecting %s for client %s as it has insufficient capabilities %s, needs %s
Receiving message from client with PID: %d id: %s selector: %s
_TtC12IMDaemonCore28PersistedCollaborationNotice
IMDaemonCore
date
T@"NSDate",N,D,C
dateViewed
guidString
T@"NSString",N,D,C
metadata
T@"NSData",N,D,C
senderHandle
version
Ts,N,D
%@: Account is restricted, not creating session
%@: Created active session: %@ of service type: %@   (Session class: %@)
%@: Reused existing session: %@
%@: Done setting up session: %@
iMessage service found: %@    accounts: %@
   Empty iMessage accounts, created one: %@
   Added, and moving along
   No account created
   We have iMessage acounts, good to go
No iMessage service found
Activating accounts: %@
Deactivating accounts: %@
*** Removing placeholder account: %@
No account or ID set: %@
Created IMDCKSyncState in IMDCKUtilities
will update sync state: %@
broadcasting current sync state: %@
broadcasting final requested update: %@
Loading internal party service with bundle: %@
%@: Loading request for service bundle: %@   Loaded: %@
%@: Loading service bundle: %@   Loaded: %@   identifier: %@
%@: Load success: %@    (Error: %@)
%@: Session class: %@
%@: Service properties: %@
%@: Load failed! Disabling any active accounts  (Error: %@)
   => Disabling: %@
Failed to respond to ST request payloadURL == nil
Failed to respond to ST request requestID == nil
Failed to respond to ST request with answer: %@ error: %@
                                        remoteHost: %@
                            isDataConnectionActive: %@
                                       isReachable: %@
                                          isOnCall: %@
                  supportsSimultaneousDataAndVoice: %@
                            isImmediatelyReachable: %@
                               awaitingDataContext: %@
Latest item time is nil, can't update chat's lastTUConversationCreatedDate! item: %@
Cache miss for subscription validation token, not including token on this message
Error fetching subscription validation tokens for handle handleID: %@ Error: %@
Forward declared API is not available, subscriptionValidationTokenForHandle:completion:
Error fetching subscription validation token for handle handleID: %@ Error: %@
Error validating subscription validation token: %@
Received an unknown validity response, ignoring.
Received an invalid validity response, attempting to fix by potentially re-inviting senderHandleID: %@ fromHandleID: %@
Forward declared API is not available, validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:fromSender:completion:
Invalid state transition attempted %@ -> %@
Invalid state transition attempted %@ -> Complete
Failed to fetch moment share from %@ for message %@ with CMMstate %@
Error fetching moment share from %@. Error: %@
Encountered indefinite failure for moment share %@. Clearing ingestion state state and setting CMMState back to registered for message %@
Moment share %@ has a context in state %@ and needs to reset transfers
Failed to accept the share at url: %@, error: %@ for message %@
Scheduling retry of moment share fetch after %{public}@ seconds
Accept failed too many times for moment share %@. Giving up
Attempted to accept a moment share that is in an unknown state %@
Regenerating transfers for a moment share is not supported
Error setting syndication identifier to %@ on asset with UUID %@: %@
Message %@: Failed request for resource file URLs for asset: %@, error: %@
Failed to create temporary directory: %@
Failed to remove existing item from temporary directory: %@
Failed to copy item to temporary directory: %@
Failed copy photo/video URL: %@, error: %@
Failed copy of video complement URL: %@, error: %@
Failed fetch for resources to share for asset: %@, error: %@
Failed copy of file URLs: %@, error: %@
Failed export for asset: %@, error: %@
Failed to create export request for asset: %@, error: %@
Unable to mark message %@ as completed when it should be
Missing transfer map for message %@
Unexpected number of curated assets for moment share: %{public}@
Target count requested before a moment share has been fetched for message %@
Unknown fetch type for moment share %@. This may lead to issues ingesting the moment share
syncing finished
clearing all sync states
Set starting periodic sync
Set starting initial sync
Setting controller sync type to %@ for record type: %@
Key value store will update: %@
Updating syncing to: %@
Key value store did update value: %@
broadcasting sync state changed event: %@
Account in need of repair detected, setting sync error
Failed to respond to Family invite payloadURL == nil
Failed to respond to Family invite inviteUrl == nil
%s: Bailing due to empty handle set. This could mean we attempted to send a notice to ourselves.
%s: Bailing because collaboration membership (%@) exceeds the fanout threshold (%@).
Unable to create noticeMessage to send, aborting.
Failed to send Collaboration Notice with error: %@
Unable to create noticeClearMessage to send, aborting.
%s: Bailing receive notice. Zero length fromHandle. Dropping message
%s: Bailing receive notice for highlightEvent generated by self (%@). Dropping message
Error fetching local user availability for contact. Error: %@
Error querying DND state: %@
DND state is nil
Chunk contained no valid message guids, stopping chunking.
Error retrieving allowed auto reply audience. Error: %@
Error retrieving allowed custom auto reply message. Error: %@
Missing last sent date for chatID %@
Nickname data loading has previously caused imagent to crash, deleting all handled and pending nickname data to allow imagent to properly handle future nickname changes.
SyndicationAction is nil when attempting to update a message
MessageGUID is nil when attempting to update a message
MessageItem is nil when attempting to update a message
SyndicationRange is nil when attempting to update a message
Updated syndication ranges for message: %@
Did NOT update syndication ranges for message: %@
New Range:
Original Ranges:
IMDMessageRecordRef was not created for %@
IMMessageItem was not created for %@
Record of itemType TUConversation did not recover as IMTUConversationItem record: %@ recovered as: %@
Failed to get a chat for message to be marked as unread: %@
Failed to find message to mark as unread for GUID:%@
Will delete old ack %@: %@: %lld
Will NOT delete old ack %@: %@: %lld
Edited message contains a file transfer not found in original message. FileTransferGuid: %@
Failed to store edited message: %@
partIndex: %@ editType: %@ previousMessage: %@
Nil syndication date parameter
Syndication Date (%@ vs %@) is in the past. Not setting syndication type %ld for chat: %@
Setting syndication type to: %ld, syndication date to: %@, for chat: %@
accountID is nil
Debug info, service: %@
Debug info, account: %@
Should never have nil modification date with non-default autoDonationBehavior
handle: %@  account: %@  chatIdentifier: %@  guid: %@
handles: %@  account: %@  chatIdentifier: %@  guid: %@
room: %@  account: %@  chatIdentifier: %@  guid: %@
Could not get chatInfo from chat: %@
Could not derive message item from legacy GUID %@
ASSERTION FAILED: %s is unexpectedly nil in "%s" at line %d [%@]
Deleted chat in %f seconds (%@) 
Updated chat with GUID: %@ donation setting to %@ with SyndicationAction: %@
Chat %@ not updated with incoming SyndicationAction: %@
SyndicationAction is nil when attempting to update IMDChat: %@
Error persisting noticeEventHistory, error: %@
REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s
Received sendSyndicationAction!.
error: %d  message: %@  force error: %@
Could not find message to update with message editing unsupported handleIDs. GUID: %@
Could not find message to update with message editing error. GUID: %@
Could not find message to update after succesfully sending edit of message. GUID: %@
Message had previous failed deliveries for message part edits. This edit delivery was successful. Clearing previous failed part delivery. GUID: %@
message: %@
Failed to find chat for sent SyndicationAction: %@
Replacing previous message acknowledgements with new acknowledgment for sent message; sender: '%@':'%@'
name: %@   fromID: %@  toIdentifier:%@  identifier: %@ style: %d
messages: %@
Automatically saving message sent from linked device: %@
Expire message sent from linked device: %@
Found existing message: %@
Date last call ended: %@
Looking for a similar message %f seconds back
Found similar message? %@
 enableTelemetry=YES 
IncomingMessage
Replacing previous message acknowledgements with new acknowledgment for received message; sender: '%@':'%@':'%@'
com.apple.messages.AttachmentDownload
Failed to respond to ATB request payloadURL == nil
Failed to respond to ATB request requestID == nil
Could not find a session for iMessage service
Couldn't upgrade 1:1 chat to Group chat for conversation %@
Can't upgrade from 1:1 chat to Group chat -- Invalid chat style: %c
Failed to find/create chat for conversation %@
%@ - write account defaults: %@
writeAccountDefaults - Started with %@ as the login ID
writeAccountDefaults - Setting %@ as the login ID
writeAccountDefaults - Removing login ID %@
Adding registration delegate for account %@
IMDAccount added %@, adding corresponding IDSAccount %@
IMDAccount removed %@, removing corresponding IDSAccount %@
Enabling IDSAccount %@
Disabling IDSAccount %@
Received account added %@
Received account updates %@
Received accountRemoved %@
** Received account removed for account: %@, but we can't find an account for it
Received accountEnabled %@
** Received account enabled for account: %@, but we can't find an account for it
Received accountDisabled %@
** Received account disabled for account: %@, but we can't find an account for it
IMDIDSService received registration status changed: %@ (%@)
IMDIDSService received aliases changed to %@: %@ (%@)
IMDIDSService received vetted aliases changed: %@ (%@)
IMDIDSService received profile changed to %@: %@ (%@)
IMDIDSService received login changed to %@: %@ (%@)
IMDIDSService received display name changed to %@: %@ (%@)
 => Registration failed, deactivating...: %@ (%@)
IMDIDSService received refresh registration: %@ (%@)
%@: Initialized!  (Environment: %@)
Dealloc service session: %@
Session activating: %@ on Environment: %@
Session deactivating: %@ on Environment: %@
AppleServiceSession: %@
Client requested re-authenticate (Environment: %@) account: %@
Found account to re-authenticate account: %@
Client requested re-register (Environment: %@)
Found account to re-register account: %@
Client requested de-register (Environment: %@)
Found account to de-register account: %@
Client requested password updated (account: %@)
Found account to update password account: %@
Client updateAuthorizationCredentials (account: %@)
Found account to updateAuthorizationCredentials: %@
Client request to remove aliases: %@ account: %@
Found account to remove aliases: %@  account: %@
Client request to add aliases: %@  account: %@
Found account to add aliases: %@  account: %@
Client request to validate: %@  account: %@
Found account to validate aliases: %@  account: %@
Client request to unvalidate: %@  account: %@
Found account to unvalidate aliases: %@  account: %@
Client request to validate profile info: %@
Found account to validate profile info account: %@
Checking specified caller ID: %@ on account: %@, accountDefaults: %@
Caller ID isn't validated, try repair if we find another account with the same caller id. clearing caller ID settings for current account
 Caller ID is valid, registered and in good shape, moving along
No caller ID specified, moving along
CallerID Repair - Current preferred account: [%@], account to repair: [%@]
CallerID Repair - Found another iMessage account: [%@], displayName: [%@]
CallerID Repair - Found a match for callerID: [%@], update preferred account to: [%@] for iMessage
%@ callerID - choosing %@ from %@
$ss12CaseIterableP
So8NSObjectC
yyXlG
So13IMMessageItemC
Sbz_Xx
XDXMT
ScPSg
SgXw
ytIeghHr_
ySSG
ScCySb
So8NSObjectCSg
So17OS_dispatch_queueC
So17IMDServiceSessionC
So21TUConversationManagerC
So14IMFeatureFlagsC
ScTyyt
_yptG
_ypt
ySo8TUHandleCG
So14TUConversationC
SSSg
ypSg
ypGSg
So19NSMutableDictionaryC
So19SwiftNativeNSObjectC
SaySSG
So13NSXPCListenerC
_pXpG
So15NSXPCConnectionC
yXlIeyBy_
$s12IMDaemonCore33IncomingClientConnectionListeningP
yx_GG
SS4guid_
5rangetSg
SS4guid_
5rangetSgz_Xx
Sgz_Xx
ySS3key_
4typetG
$sSY
$s12IMDaemonCore21ClientRequestHandlingP
$ss11GlobalActorP
IeyBh_
Iegh_
So10IMDServiceCSg
yypG
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
ypIegn_
yypc
yyypcG
So21NSPersistentContainerCSgSg
_pSg
$ss12IdentifiableP
ShySSG
_A7At
So24IMDaemonListenerProtocol_pSg
So24IMDaemonListenerProtocol_p
ySSG
$s12IMDaemonCore24ClientConnectionManagingP
So15NSManagedObjectC
AllCases
parser
editedMesssage
sharedUtilitiesHelloWorld
persistenceHelloWorld
queue
serviceSession
conversationManager
featureFlags
newChatListenerTask
rateLimiterOverride
persistenceQueue
noticeEventHistory
$defaultActor
machServiceName
allowedEntitlements
listener
clients
requestHandlers
clientConnectionWorkloop
wrappingPairs
prefix
suffix
associatedValue
parser
location
length
RawValue
rawValue
ActorType
connectionListener
rawValue
ArrayLiteralElement
RawValue
Element
$__lazy_storage_$_persistenceContainer
queue
unlockedConnection
unlockedCapabilities
unlockedID
unlockedSupportedServices
unlockedRequestHandlers
IMDMomentShareIngestionContext
IMDAccount
IMSystemMonitorListener
IMDBroadcastController
IMDMessageHistorySyncTaskLiveFactory
IMDMessageHistorySyncTaskFactory
NSObject
IMReadReceiptsMetrics
IMDAccountController
IDSAccountDelegate
Mentions
IMSpamFilterHelper
IMDCKUtilities
IMDCKSyncStateDelegate
IMDMessageHistoryIDSTransactionLogSyncTask
IMDMessageHistorySyncTask
IMDMessageHistoryCKChatSyncTask
IMDCKSyncStatsCollector
IMDClientRequestContext
IMDCKSyncTokenStore
IMDService
IMDScreenTimeAskReponseHandler
IMDMessageActiveDevice
IMDaemonCoreHelloWorldClass
IMDOneTimeCodeManager
IMDSoundUtilities
IMStateLoggable
IMDMessageProcessingController
IMDSpamMessageCreator
IMDWorkQueue
IMDServiceSession
IMConnectionMonitorDelegate
IMServiceSessionProtocol
IMDSpamController
IMDBackwardCompatibilityMessageIdentifier
IMDCKExitManager
IMDRecordZoneManager
APSConnectionDelegate
IMDCKMessageSyncCKOperationFactory
IMDAvailabilityVerificationManager
SKStatusSubscriptionServiceDelegate
IMDAvailabilityVerificationTokens
IMDLocalDaemon
IMDDistributedNotificationXPCEventStreamHandler
IMDTransferDictionaries
IMDChatVocabularyUpdater
INSpeakable
IMDLegactDTController
IDSServiceDelegate
IMDMessageFromStorageController
IMDCallerIDUtilities
IMDMomentShareManager
PHPhotoLibraryChangeObserver
IMDCallManager
IMDCKMockRecordKeyZone
DeferredSavingAdditions
IMDCKAttachmentSyncController
IMDCKSyncState
IMKeyValueCollectionDelegate
IMDMessageHistoryFirstUnlockReplaySyncTask
IMDFamilyInviteReponseHandler
IMDPlainTextTapbackInterpreter
IMLegacyAdditions
Hubble
IMDFileTransferCenter
IMPowerLogChatDescription
IMDCKAttachmentSyncCKOperationFactory
IMDExposureNotificationManager
IMDQuickSwitchController
IMDCollaborationNoticeDispatcher
IMItem_CKRecord
IMDCKCacheDeleteManager
IMDAvailabilityAutoReplier
IMDAutoReplying
IMDCKMockDatabase
IMDNotificationResponseUtilities
UNUserNotificationCenterDelegate
IMDCKChatSyncCKOperationFactory
IMDServiceController
IMDNicknameController
IMDMessageSortOrderAssigner
GUIDRepair_Internal
IMDMessageStore
IMFocusStateManagerDelegate
IMDPhotosSyndicationLibraryChangeListener
IMDChat
IMDCKRecordSaltManager
IMDChatRegistry
IMDCKDatabaseManager
CKRecord_IMDaemonCore
IMDCKMockRecordZone
IMDCKRampManager
IMDDaemonPropertyManager
IMDInconsistency
IMDAttachmentStore
IMDCKAbstractSyncController
IMDDeletePartsHelper
MessageProcessing
IMDChatStore
IMDLocationSharingController
IMDCKMessageSyncController
IMDCKRecoverableMessageSyncController
IMDaemonCoreMessageReceivedTimingAdditions
IMDaemonCoreIncomingMessageTracking
IMDInvocationForwarder
SyndicationActions
IMDCollaborationNoticeRateLimiter
IMFileTransfer_CKRecord
IMDReplayController
CloudKit
IMDCKSyncController
IMDXPCEventStreamHandlerDelegate
IMDCKAbstractSyncControllerDelegate
IMMessagesToTrack
IMDServiceSession_Chat
IMDiMessageIDSDelegateHandlerRegistry
IMTransferServicesController_PreviewGeneration
IMDCKInitialAttachmentSyncController
IMDMessageHistorySyncController
IMDCKChatSyncController
IMDCollaborationNoticeController
IMDMessagePTask
IMDStickerRegistry
IMDRecentsController
IMDServiceSession_BuddyList
IMDCKUpdateSyncController
IMDMessagePTaskXPCStore
IMDMessagePTaskStore
Messages
IMDServiceSession_Base
IMDAskToBuyResponseHandler
IMDReplayStorageIterationContext
IMDReplayStorageController
IMDCKInitialMessageSyncController
IMDXPCEventStreamHandler
IMDServiceSession_Firewall
IMDServiceSession_LoginManagement
IMDHandle
IMDServiceSession_MessageReplay
IMDChat_CKRecord
IMDBadgeUtilities
IMDChatRegistry_CallManagement
TUConversationManagerDelegate
CKRecordUtilities
IMDSpotlightIndexDelegate
CSSearchableIndexDelegate
IMDIDSAccount
IMDIDSService
IDSAccountControllerDelegate
IDSAccountRegistrationDelegate
IMDAppleServiceSession
NSXPCListenerDelegate
IMDaemonProtocol
IMDaemonAccountsProtocol
IMDaemonAnyProtocol
IMDaemonAutomationProtocol
IMDaemonBuddyListProtocol
IMDaemonChatFileTransferProtocol
IMDaemonChatMessageHistoryProtocol
IMDaemonChatModifyReadStateProtocol
IMDaemonChatProtocol
IMDaemonChatSendMessageProtocol
IMDaemonCloudSyncProtocol
IMDaemonFileTransferProtocol
IMDaemonFileProviderProtocol
IMDaemonManageStatusProtocol
IMDaemonModifyReadStateProtocol
IMDaemonVCACProtocol
IMDaemonVCInvitationsAVObserverProtocol
IMDaemonVCProtocol
IMDaemonListenerProtocol
IMDaemonListenerChatDatabaseProtocol
IMDaemonListenerChatCountsProtocol
IMDBroadcasterProviding
IMDaemonListenerAccountsProtocol
IMDaemonListenerAnyProtocol
IMDaemonListenerAVProtocol
IMDaemonListenerChatMessageHistoryProtocol
IMDaemonListenerChatProtocol
IMDaemonListenerFileProviderProtocol
IMDaemonListenerNotificationsProtocol
IMDaemonListenerServiceProtocol
IMAKUserInfoChangedNotification
AuxGUIDFromFileTransferGUID:
T@"IMDCKMessageSyncCKOperationFactory",&,N,V_CKOperationFactory
CKPartialError:hasErrorCode:
T@"IMDefaults",&,N,V_imDefaults
CNContactID
T@"NSArray",R,N
T@"NSString",&,N,V_contextStamp
IMAKUserInfoChangedAltDSIDKey
T@"NSString",R,C,N,V_listenerID
IMDaemonCoreMessageReceivedTimingCollection
T@,&,N,V__broadcasterForTesting
NicknameWithRecordID:URI:decryptionKey:withCompletionBlock:
TB,N,V_idsTransportLogNeedsSync
PCSReportManateeStatusAsync:timeout:
_IMDTrackMetric:ForMessageGUID:
SIMInserted
__im_messagePartIndexToRangeMap
SMSStorageController
_activeAccounts
T#,R,N
_allowedDomains
T@"<IMDAutoReplyDelegate>",W,N,V_replyDelegate
_changeTokenKey
T@"<IMDCKAbstractSyncControllerDelegate>",W,V_delegate
_chatForTUGroupID:participants:
T@"<IMDCKSyncTokenStore>",&,N,V_syncTokenStore
_chatRecordZone
T@"<IMDMessageHistorySyncTask>",&,N,V_currentlyExecutingSyncTask
_configureSessionInformationOnItem:toChat:withStyle:forAccount:
T@"<IMDMessagePTaskStore>",&,N,V_pTaskStore
_deletePendingNicknameForUpload
T@"<IMDRemoteDatabaseProtocol>",R,N
_downloadAssetsForTransferGUIDs
T@"<IMDaemonListenerAccountsProtocol>",R,N
_encounteredIncompatibleMessage
T@"<IMDaemonListenerChatCountsProtocol>",R,N
_exitRecordDate
T@"<IMDaemonListenerChatProtocol>",R,N
_fixSMSGroupChatAndStoreIfNeeded:iMessageChat:chatToRegenerate:
T@"<IMDaemonListenerProtocol>",&,N,V_broadcaster
_handleDenyList
T@"<IMDaemonListenerProtocol>",R,N,V_replyProxy
_hasReceivedReadReceiptRecently
T@"CARAutomaticDNDStatus",&,N,V_automaticDNDStatus
_idToHandlesMap
T@"CKContainer",R,N,V_manateeContainer
_initiatorForConversation:chat:
T@"CKRecord",&,N,V_lockRecord
_markResyncForDeleteRecoveryAs:
T@"CKRecordZone",R,N,V_analyticRecordZone
_numberOfRecordsToFetchPerBatch
T@"CKRecordZone",R,N,V_chatRecordZone
_playSoundType:
T@"CKRecordZone",R,N,V_messageRecordZone
_pushConnection
T@"CKRecordZone",R,N,V_updateRecordZone
_reconnectTimer
T@"CKRecordZoneID",R,N,V_attachmentRecordZoneID
_recordsToSaveWithAttemptCount:
T@"CKRecordZoneID",R,N,V_deDupeSaltZoneID
_recoverableMessageRecordZoneID
T@"CKRecordZoneID",R,N,V_metricZoneID
_removeAccount:
T@"CKRecordZoneID",R,N,V_updateRecordZoneID
_resetSyncStateAndAttemptCounts
T@"CKServerChangeToken",&,N,V_archivedRecordSyncToken
_setReplyGUIDOnMessage:forChat:
T@"CKServerChangeToken",&,N,V_syncToken
_statsCollector
T@"IDSAccount",R,&,N
_subServiceName
T@"IDSKVDeleteContext",&,N,V_deleteContext
_syncTokenStore
T@"IDSKVStore",&,N,V_handledNicknamesKVStore
_truthContainer
T@"IDSKVStore",&,N,V_pendingNicknameUpdatesKVStore
_updateCachedAliasToCNIDMap:withHistoryToken:completionHandler:
T@"IDSKVStore",&,N,V_store
_useSSL
T@"IDSService",&,N,V_dtService
_wasDowngraded:
T@"IDSService",&,N,V_quickSwitchIDSService
acceptSubscriptionRequest:from:
T@"IMDAccount",R,&,N,V_account
account:blockIdleStatusChanged:
T@"IMDAskToBuyResponseHandler",&,N,V_askToBuyResponseHandler
account:conference:receivedResponseToInvitationFrom:properties:
T@"IMDCKAttachmentSyncCKOperationFactory",&,N,V_CKOperationFactory
accountDefaults
T@"IMDCKDatabaseManager",&,N,V_dataBaseManager
activeTransfers
T@"IMDCKSyncState",R,N
addParticipant:
T@"IMDCKUtilities",&,N,V_ckUtilities
allExistingChatsWithIdentifier:
T@"IMDChatRegistry",&,N,V_chatRegistry
arrayByExcludingObjectsInArray:
T@"IMDCollaborationClearNoticeRateLimiter",&,N,V_clearRateLimiter
availabilitySubscriptionService
T@"IMDCollaborationNoticeRateLimiter",&,N,V_rateLimiter
beginChatSyncPeriodic:activity:
T@"IMDFamilyInviteReponseHandler",&,N,V_familyInviteResponseHandler
blockIdleStatus
T@"IMDIDSService",W,N,V_mainService
bundleForClass:
T@"IMDMessageProcessingController",R,N,V_messageProcessingController
canMarkPurgable
T@"IMDRecordZoneManager",&,N,V_recordZoneManager
cancelVCRequestWithPerson:properties:conference:reason:account:
T@"IMDReplayStorageIterationContext",&,N,V_heldDeletionContext
chat:lastAddressedSIMIDUpdated:
T@"IMDService",&,N,V_service
chatRecordsFilteredByPredicate:
T@"IMDService",R,&,N,V_service
ckChatSyncControllerWantsToSync
T@"IMDServiceSession",R,&
clearSyncErrors
T@"IMDefaults",&,N,V_sharedDefaultsInstance
compeletedTask:
T@"IMLockdownManager",&,N,V_lockdownManager
containsObject:
T@"IMNickname",&,N,V_personalNickname
content
T@"IMStateCaptureAssistant",&,N,V_stateCaptureAssistant
createdChatZone
T@"IMTimingCollection",&,N,V_timingComingBackFromStorage
dataBaseManager
T@"NSArray",&,N,V_validCodes
databaseUpdated
T@"NSArray",R,&,N
delegateToQueue
T@"NSBundle",R,&,N,V_bundle
deleteMessageWithGUIDs:queryID:
T@"NSData",R,N,V_historyToken
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:destinationCallerID:messageTime:
T@"NSDate",&,N,V_lastLogDumpDate
disableAccount:
T@"NSDate",&,N,V_latestActiveDate
enabledAccounts
T@"NSDate",&,N,V_syncStartDate
fetchAllChanges
T@"NSDate",R,N
fetchLastMessageRecordForChatRecordWithRowID:completionHandler:
T@"NSDictionary",&
fileHFSTypeCode
T@"NSDictionary",&,N,V_syncTaskByServiceName
findRootCauses:
T@"NSDictionary",R,&
groupActionType
T@"NSDictionary",R,&,N,V_accountDefaults
groupID
T@"NSDictionary",R,N
handles
T@"NSDictionary",R,N,V_nicknamesForParticipants
im_setActivity:
T@"NSLock",&,N,V_lock
initWithDomain:
T@"NSMutableArray",&,N,V_chatsToSendNicknameInfoTo
initWithMessagePartText:dateSent:backwardCompatibleMessageGUID:
T@"NSMutableArray",&,N,V_targets
initWithZoneID:
T@"NSMutableDictionary",&,N,V_cachedAliasToCNIDMap
invitePersonInfo:withMessage:toChatID:identifier:style:account:
T@"NSMutableDictionary",&,N,V_guidToTransferMap
isEmote
T@"NSMutableDictionary",&,N,V_idToHandlesMap
isEngramEnabled
T@"NSMutableDictionary",&,N,V_mutablePersistentProperties
isProxy
T@"NSMutableDictionary",&,N,V_noticeEventHistory
isSyncingPaused
T@"NSMutableDictionary",&,N,V_personCentricGroupedChatsCache
isTypingMessage
T@"NSMutableDictionary",&,N,V_shareURLsToContexts
itemsWithHandles:onServices:messageGUID:threadIdentifier:limit:
T@"NSMutableDictionary",&,N,V_visitedChats
lastLogDumpDate
T@"NSMutableDictionary",&,V_chatGUIDToCountMap
latestSyncToken
T@"NSMutableDictionary",&,V_stickerPackGUIDToPackMap
loading
T@"NSMutableSet",&,N,V_activeHubbleRequestedTransfers
lockdownManager
T@"NSMutableSet",&,N,V_handleAllowList
loginServiceSessionWithAccount:
T@"NSMutableSet",&,N,V_messagesReceivedDuringStorage
managed
T@"NSNumber",&,N,V_subscriptionCreatedOverride
mapID:usingKey:
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
messageBodyData
T@"NSObject<OS_dispatch_queue>",&,N,V_privateWorkQueue
messagePartGUID
T@"NSObject<OS_dispatch_queue>",R,N,V_ckQueue
moveMessageRecordsToRecoveryForChatRecordsWithGUIDs:deleteDate:
T@"NSSet",R,N
normalizedValue
T@"NSString",&,N,V_id
noteLastItemProcessedWithError:
T@"NSString",&,N,V_personCentricID
T@"NSString",&,N,V_subServiceName
numberWithBool:
T@"NSString",&,V_cachedSalt
numberWithLong:
T@"NSString",&,V_modificationStamp
originalGroupID
T@"NSString",C,N
pendingENGroupParticipantUpdate
T@"NSString",C,N,V_accountID
personCentricID
T@"NSString",C,N,V_serviceLoginStatusMessage
pictureOfBuddy:
T@"NSString",C,SsetGroupID:
preview
T@"NSString",R,&,N
processingTimer
T@"NSString",R,&,N,V_filePath
reflectDismissalForNoticeGUIDs:
T@"NSString",R,&,N,V_proxyAccount
registerForAccountNotifications
T@"NSString",R,&,N,V_proxyPassword
rejectTransfer:
T@"NSString",R,C,V_lastSeenMessageGuid
removeDelegate:
T@"NSString",R,N,V_encryptionValidationToken
removeMessageWithGUID:fromChat:
T@"NSString",R,N,V_identifier
renameGroup:to:
T@"NSTimer",&,N,V_codeInvalidationTimer
request
T@"NSTimer",&,N,V_processingTimer
service
T@"NSTimer",&,N,V_storageTimer
serviceSpaceDidBecomeAvailable:
T@"NSURL",R,N,V_shareURL
T@"PHFetchResult",&,N,V_assetsFetch
setAssetsFetch:
T@"PHPhotoLibrary",R,N,V_syndicationLibrary
setBroadcaster:
T@"TUConversationManager",R,N,V_conversationManager
setChatGUIDToSpamCheckTimerMap:
T@"__IMDBackwardCompatibilityMessageIdentifier",&,N,V_swiftImplementation
setCkUtilities:
T@,W,N
setCreatedDate:
T@?,C,N,V_perTransferProgress
setDesiredKeys:
setExpireState:
TB,D,N,GisDisablingDevices
setFetchRecordsCompletionBlock:
TB,D,N,GisFeatureEnabled
setLastMessage:
TB,D,N,GisRemovedFromBackup
setMainService:
TB,D,N,GisStartingInitialSyncSetByCloudKitHooks
setMessageGUID:
TB,D,N,GisSyncing
setMutablePersistentProperties:
TB,D,N,GisSyncingPaused
setPayloadData:
TB,N,GisDeviceLowOnDiskSpace,V_deviceLowOnDiskSpace
setRateLimiter:
TB,N,GisManaged,V_managed
setRecordWithIDWasDeletedBlock:
TB,N,GisShowingFailure,V_showingFailure
setReloadTimer:
TB,N,V_addedObserverForUnexpectedlyLoggedOut
setScreenTimeAskReponseHandler:
TB,N,V_alreadyCapturedErrorWithAutoBugCapture
setShareStatus:
TB,N,V_ckChatSyncControllerNeedsSync
setSwyBundleID:
TB,N,V_encounteredIncompatibleMessage
setUnreadCount:
TB,N,V_fetchedExitDateOnLaunch
setUrl:
TB,N,V_hasReceivedReadReceipt
setXPCActivity:
TB,N,V_isDoingDeleteRecoverySync
shouldJettison:
TB,N,V_isUsingCentralizedModel
stickerUserInfo
TB,N,V_networkDataAvailable
stringByAppendingPathExtension:
TB,N,V_replayControllerNeedsSync
subject
TB,R
syncAttachments
TB,R,N,GisActive
syncing
TB,R,N,GisDeviceOnWifi
systemDidUnlock
TB,R,N,GisDiscontinued
trackSpamEvent:
TB,R,N,V_isLoading
updateNicknamesForParticipants:
TB,R,N,V_shouldPublishNowPlaying
updateTransfer:
TB,V_createEngramGroupOnMessageSend
TB,V_meCardUpdated
valueWithRange:
TB,V_shouldReloadConversations
writeDirtyChats
.cxx_destruct
T@"<IMLocalDaemonProtocol>",&,N
CKOperationFactory
T@"IMDClientRequestContext",&,N
CKPartialError:onlyHasErrorCodes:
T@"IMMessageItem",R,N,V_message
GUID
T@"NSDate",&,N,V_exitRecordDate
IDSTransportLogWantsToSync
T@"NSString",R,&,N,V_serverHost
IMAKUserInfoChangedSecurityLevelKey
T@"NSTimer",&,N,V_transferTimer
IMPhoneNumbersEnabledForMultipleSubscriptionDevice
TB,GisRecovered
PCSReportManateeStatus
TB,R,N,V_useSSL
SHA1HexString
__imFirstObject
SMSAllowCaseSenstiveSenderIDForPhoneNumber:
_accountManager
T#,R
_activeHubbleRequestedTransfers
T@"<IMDAutoReplyDelegate>",W,N
_bundle
T@"<IMDBroadcasterProviding>",R,N
_changedBuddies
T@"<IMDCKSyncStateDelegate>",W,N,V_delegate
_chatIdentifier
T@"<IMDCollaborationNoticeDispatcherDelegate>",W,N,V_delegate
_chatsByGroupID
T@"<IMDMessageHistorySyncTaskFactory>",&,N,V_syncTaskFactory
_createEngramGroupOnMessageSend
T@"<IMDMessagePTaskStore>",&,V_messagePTaskStore
_deleteRestoreFailuresDirectory
T@"<IMDaemonListenerAVProtocol>",R,N
_enableStrictSecureDecodingMode
T@"<IMDaemonListenerAnyProtocol>",R,N
_evalToggleiCloudSettingsSwitch
T@"<IMDaemonListenerChatDatabaseProtocol>",R,N
_favoritesContainsParticipants:
T@"<IMDaemonListenerFileProviderProtocol>",R,N
_fixUpChatParticipantsIfNeeded:
T@"<IMDaemonListenerProtocol>",&,N,V_broadcasterOverride
_hasMarkedAllChatsAsNeedingSync
T@"APSConnection",&,N,V_pushConnection
T@"CKContainer",R,N
_idsDestination
T@"CKContainer",R,N,V_nickNameContainer
_localDeviceHasSIMMatchingChat:
T@"CKRecordID",&,N,V_exitRecordID
_missingMessageReadReceiptCache
T@"CKRecordZone",R,N,V_attachmentRecordZone
_personCentricGroupedChatsCache
T@"CKRecordZone",R,N,V_deDupeSaltRecordZone
_processConnectionMonitorUpdate
T@"CKRecordZone",R,N,V_recoverableMessageRecordZone
_rampUpRecordID
T@"CKRecordZoneID",R,N,V_analyticRecordZoneID
_recordKeyManagerSharedInstance
T@"CKRecordZoneID",R,N,V_chatRecordZoneID
_recordsWritten
T@"CKRecordZoneID",R,N,V_messageRecordZoneID
_reloadChatRegistryOnMainThread
T@"CKRecordZoneID",R,N,V_recoverableMessageRecordZoneID
_removeHubbleRequestedTransfer:
T@"CKServerChangeToken",&,N
_resetSyncToken
T@"CKServerChangeToken",&,N,V_latestSyncToken
_showingFailure
T@"FTDeviceSupport",&,N,V_deviceSupport
_storePendingNicknameForUpload:
T@"IDSAccount",R,&,N,V_idsAccount
_submitStorageMetricsWithError:
T@"IDSKVStore",&,N,V_handleSharingKVStore
_transferRequiresPreviewSizing:
T@"IDSKVStore",&,N,V_kvStore
_updateAttachmentGUID:withGUID:
T@"IDSKVStore",&,N,V_recordStore
_updateCachedCNIDMapForHandles:
T@"IDSServerBag",&,N,V_serverBag
_validateTransferFromCloudKit:localTransfer:validateCompletion:
T@"IDSService",&,N,V_gelatoService
acceptFileTransfers:completion:
T@"IMDAccount",R,&
account
T@"IMDAccountController",&,N,V_accountController
account:buddyPropertiesChanged:
T@"IMDBackwardCompatibilityMessageIdentifier",R,N
accountController:accountAdded:
T@"IMDCKChatSyncCKOperationFactory",&,N,V_CKOperationFactory
accountRemoved:
T@"IMDCKDatabaseManager",&,N,V_databaseManager
addItem:toChat:
T@"IMDCKSyncState",R,N,V_syncState
aliases
T@"IMDChat",R,N,V_chat
allKeys
T@"IMDChatStore",&,N,V_chatStore
attributionInfo
T@"IMDCollaborationNoticeDispatcher",R,N,V_noticeDispatcher
balloonBundleID
T@"IMDDaemonPropertyManager",R,N
blackholedChats
T@"IMDIDSService",&,N,V_subService
buddyProperties
T@"IMDMessageHistorySyncController",R,N,V_messageHistorySyncController
cachedChatCount
T@"IMDMessageStore",&,N,V_messageStore
canSend
T@"IMDReplayStorageController",&,N,V_storageController
changeLocalProperty:ofBuddy:to:
T@"IMDScreenTimeAskReponseHandler",&,N,V_screenTimeAskReponseHandler
chatForMessage:
T@"IMDService",R,&
chatRoomForGroupChatIdentifier:
T@"IMDServiceSession",&,N,V_session
ckQueue
T@"IMDSyncTelemetryReporter",&,N,V_telemetryReporter
collaborationId
T@"IMKeyValueCollection",R,N,V_storage
completionBlock
T@"IMMessageItem",&
containsString:
T@"IMOneTimeCodeUtilities",&,N,V_otcUtilities
context
T@"IMTimer",&,N,V_nightlySyncTimer
currentCalendar
T@"INVocabulary",&,N,V_vocabulary
databaseManager
T@"NSArray",C
dealloc
T@"NSArray",R,&,N,V_accounts
deleteExitRecordWithCompletion:
T@"NSCache",&,N,V_subscriptionValidationTokenByHandleIDCache
devices
T@"NSDate",&,N
didUpdateChatStatus:chat:style:
T@"NSDate",&,N,V_lastRestoreFailureLogDumpDate
eagerUploadTransfer:recipients:
T@"NSDate",&,N,V_latestReadReceipt
endBuddyChanges
T@"NSDate",C,D,N
fetchExitRecord
T@"NSDate",R,V_firstOccurrence
fetchLatestSalt
T@"NSDictionary",&,N,V_serviceProperties
fileURL
T@"NSDictionary",C,D,N
firstOccurrence
T@"NSDictionary",R,&,N
groupChatIdentifierForChatRoom:
T@"NSDictionary",R,C,N
handleAllowList
T@"NSDictionary",R,N,V_identifierToZoneMap
hasDataDetectedInformalPayment:
T@"NSError",&,N,V_errorFetchingExitDate
initWithBundle:
T@"NSMapTable",R,N,V_delegateToQueue
initWithFormat:
T@"NSMutableArray",&,N,V_downloadAssetsForTransferGUIDs
initWithString:
T@"NSMutableArray",&,N,V_transferringTransfers
initialAttachmentSyncController
T@"NSMutableDictionary",&,N,V_completionBlocksForAssetFetchOperations
isEmergencyChat
T@"NSMutableDictionary",&,N,V_handledNicknames
isEmpty
T@"NSMutableDictionary",&,N,V_inMemorySyncStatistics
isKnownContact:
T@"NSMutableDictionary",&,N,V_mutableProperties
isSafeToDeleteAttachmentAtPath:
T@"NSMutableDictionary",&,N,V_pendingNicknameUpdates
isSystemMessage
T@"NSMutableDictionary",&,N,V_recordIDToTransferMap
isValid
T@"NSMutableDictionary",&,N,V_taskGroupedByServiceName
kvStore
T@"NSMutableDictionary",&,N,V_writeMsgIDToRowIDMap
lastMessageStorageTimerInterval
T@"NSMutableDictionary",&,V_chatGUIDToSpamCheckTimerMap
loadRecentChats
T@"NSMutableOrderedSet",&,N,V_recentMessageIDs
localizedStandardRangeOfString:
T@"NSMutableSet",&,N,V_activeTransfers
loginID
T@"NSMutableSet",&,N,V_handleDenyList
lowercaseString
T@"NSNumber",&,N,V_saltZoneCreatedOverride
manateeDataBase
T@"NSObject<OS_dispatch_queue>",&,N,V_ckQueue
message
T@"NSObject<OS_dispatch_queue>",&,N,V_persistenceQueue
messagePartBody
T@"NSObject<OS_dispatch_queue>",R,N,V_changeObservationQueue
messagePartText
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
networkDataAvailabilityChanged:
T@"NSString",&,N,V_countryCode
noteBadPassword
T@"NSString",&,N,V_idsDestination
noticesForURLs:
T@"NSString",&,N,V_serviceName
numMessagesSent
T@"NSString",&,N,V_unformattedID
numberWithChar:
T@"NSString",&,V_lastModificationStamp
oldInternalName
T@"NSString",C
passwordUpdated
T@"NSString",C,N,V_CNContactID
persistMessage:
T@"NSString",C,N,V_loginID
photoAnalysisInSpotlightEnabled
T@"NSString",C,SsetEngramID:
preWarm
T@"NSString",C,V_cloudKitRecordID
printCachedSalt
T@"NSString",R,&,N,V_GUID
recordChangeTag
T@"NSString",R,&,N,V_password
registerAccount
T@"NSString",R,&,N,V_proxyHost
registerSessionClassWithBundle:
T@"NSString",R,C
release
T@"NSString",R,N
removeListener:
T@"NSString",R,N,V_guid
removeObserver:
T@"NSString",R,N,V_subscriptionValidationToken
replayMessagesFromDatabasePath:
T@"NSTimer",&,N,V_longRunningSyncTimer
sendRecoverCommand:forChatGUID:
T@"NSTimer",&,N,V_retryTimer
serviceDefaults
T@"NSTimer",&,V_reloadTimer
session
T@"PHFetchOptions",R,N,V_analysisFetchOptions
setAnalyticSyncDatesDictionary:
T@"PHMomentShare",&,N,V_momentShare
setBool:forKey:
T@"SKStatusSubscriptionService",&,N,V_availabilitySubscriptionService
setCNContactID:
T@"UNUserNotificationCenter",&,N,V_notificationCenter
setChatIsFiltered:withChatGuid:
T@"__IMDPlainTextTapbackInterpreterImpl",&,N,V_impl
setCountryCode:
T@?,C,N,V_automationCompletionBlock
setDateAsTimeIntervalSince1970:
T@?,C,N,V_syncTaskCompletionBlock
setDisplayName:
TB,D,N
setFamilyInviteResponseHandler:
TB,D,N,GisEligibleForTruthZone
setInExitState:
TB,D,N,GisInExitState
setLatestSyncToken:forSyncType:
TB,D,N,GisStartingEnabledSettingChange
setMessageBody:
TB,D,N,GisStartingPeriodicSyncSetByCloudKitHooks
setMomentShare:
TB,D,N,GisSyncingEnabled
setOtherHandle:
TB,N
setPersistentStoreDescriptions:
TB,N,GisLoading,V_loading
setRecordStore:
TB,N,GisOscarChat,V_oscarChat
setRecordsRead:
TB,N,GisUnexpectedlyLoggedOut,V_unexpectedlyLoggedOut
setReplyToGUID:
TB,N,V_allowsWritingToDisk
setServiceName:
TB,N,V_assetDownloadInProgress
setSubscriptionCreatedOverride:
TB,N,V_didKeyRollPendingCheck
setTimingComingBackFromStorage:
TB,N,V_fetchedChatsDuringLastSync
setUpInitialConversationManager
TB,N,V_hasDumpedLogsForNoExisitingGroup
setWithObjects:
TB,N,V_haveDeferredUpdateRequest
shouldForceArchivedMessagesSync
TB,N,V_isSyncing
shouldPresentTTROnCloudKitError
TB,N,V_needToLoadMapsInfoFromDisk
stringByAppendingPathComponent:
TB,N,V_nicknameIsUploadingToCK
stringFromDate:
TB,N,V_useDeprecatedApi
subscriptionInvitationReceived:
TB,R,N
syncTaskFactory
TB,R,N,GisDeviceCharging
systemDidLogout
TB,R,N,GisDisabled
systemWillSleep
TB,R,N,GisKeyRollPending
updateEngramID:
TB,R,N,V_isRecordingReplayDB
updateStateForChat:hintMessage:
TB,R,V_isRecovered
uppercaseString
TB,V_isUpdatingAttachmentFileSizes
validateProfile
TB,V_pendingENGroupParticipantUpdate
version
TB,V_wasReportedAsJunk
writeExitRecord
TI,N,V_serviceLoginStatus
TI,R,N,V_idSensitivity
TQ,D,N
TQ,N,V_count
TQ,N,V_deviceConditionsToCheck
TQ,N,V_messagesProcessedComingBackFromStorage
TQ,N,V_pendingReadReceiptFromStorageCount
TQ,N,V_recordsRead
TQ,N,V_recordsWriteFailed
TQ,N,V_recordsWritten
TQ,N,V_unreadCount
TQ,R
TQ,R,N
TQ,R,N,V_capabilities
TQ,R,N,V_persistedChatCount
TQ,R,N,V_taskFlags
TQ,S_setUnreadCount:
TQ,V_numMessagesSent
TS,R,N,V_proxyPort
TS,R,N,V_serverPort
Td,N,V_lastMeContactStoreSync
Td,N,V_lastMessageStorageTimerInterval
Td,N,V_spamExtensionCutoffTime
Td,N,V_storageTimerInterval
Ti,N,V_serviceDisconnectReason
Ti,R,N
Tq,D,N
Tq,N
Tq,N,V_fetchType
Tq,N,V_initialSyncAttempts
Tq,N,V_lastFailedMessageDate
Tq,N,V_state
Tq,R,N
Tq,R,N,V_proxyType
Tq,S_setRowID:
T{?=[8I]},R,N,V_auditToken
URLForResource:withExtension:
URLHostAllowedCharacterSet
URLWithString:
UTF8String
UUID
UUIDString
_CKOperationFactory
_CKUtilitiesSharedInstance
_CNContactID
_FTCopyGzippedData
_FTDataFromHexString
_FTOptionallyDecompressData
_FZBestGuessFZIDType
_GUID
_IDSService
_IMAHDAgentFallbackIntervalInSeconds
_IMDStoreMessage:inMessage:forceReplace:modifyError:modifyFlags:calculateUnreadCount:flagMask:shouldStoreBlock:didStoreBlock:block:
_IMTransferGUIDForMessageGUID:andIndex:
_SWCollaborationClearNoticeTransmissionMessageClass
_SWCollaborationNoticeTransmissionMessageClass
_URIFromCanonicalizedPhoneNumber
_URIFromFZIDType:
__addChatToGroupIDChatIndex:
__allServiceSessionsWeakReferenceArray
__broadcasterForTesting
__databaseRequestForAttachmentsWithAssets
__forceSetLoginStatus:oldStatus:message:reason:properties:account:
__imArrayByApplyingBlock:
__imArrayByApplyingBlock:filter:
__imArrayByFilteringWithBlock:
__imSetByApplyingBlock:
__imSetFromArray
__im_conformsToDomain:
__im_countMessageParts
__im_dateByAddingDays:
__im_dateWithCurrentServerTime
__im_dateWithNanosecondTimeIntervalSinceReferenceDate:
__im_messagePartMatchingPartIndex:
__im_nanosecondTimeInterval
__im_performBlock:
__im_visitMessageParts:
__mainThreadPostNotificationName:object:
__mainThreadPostNotificationName:object:userInfo:
__postDBUpdate
__pruneTypingContexts
__queryServerForID:count:completion:
__registerNewServiceSession:
__removeChatFromGroupIDChatIndex:
__shouldOptimizeAttachmentDefault
__stringByStrippingAttachmentAndControlCharacters
__swift_objectForKeyedSubscript:
__swift_setObject:forKeyedSubscript:
__syncChatsWithCloudKit:attemptCount:activity:withCompletion:
__wrapperAroundCacheDeletePurgeNotificationCallback:
__wrapperAroundCacheDeletePurgeableCallback:urgency:
__wrapperAroundCacheDeletePurgingCallback:urgency:
_abandonPWFetcher
_abandonSystemProxySettingsFetcher
_acceptMomentShare:completionHandler:
_acceptMomentShareIfNecessaryForContext:isRetry:
_account
_accountController
_accountControllerSharedInstance
_accountDefaults
_accountDidChange:
_accountHasMultipleDevices
_accountID
_accountNeedsRepairOverride
_accountStore
_accounts
_accountsArrayForServiceIMessage
_activated
_activatingAccount
_activeDeviceForHandle
_activeTUConversations
_activeTransfers
_addActiveTransfer:
_addChatFromCacheMiss:preferExistingChat:
_addChatsFromCacheMisses:preferExistingChats:
_addDatesDefaultsIfNeededToDictionary:
_addDatesDefaultsIfNeededToDictionary:keys:
_addGatekeeperProperties:toDirectory:
_addGatekeeperProperties:toFileAtPath:
_addGroupPhotoToCKRecord:
_addGroupPhotoToTransferCenterForChat:
_addItemToParentChatIfNotLocationItem:parentChat:updatedLastMessageCount:
_addLocationShareItemToMatchingChats:handleID:hasStoredItem:broadcastChanges:
_addSpotlightPropertiesFromFileTransfer:toDirectory:
_addTransfer:forGUID:shouldNotify:
_addTransferringTransfer:
_addedObserverForUnexpectedlyLoggedOut
_adoptUpdatedStateForExistingItem:itemFromCKRecord:
_aliasStringsForIDSAccount:
_aliasToCNIDMapForAliases:
_aliases
_aliasesForIDSAccount:
_allChatInfo
_allFileTransfers
_allHandles
_allowDestructiveMOCFeaturesBasedOnDSID
_allowsWritingToDisk
_alreadyCapturedErrorWithAutoBugCapture
_analysisFetchOptions
_analyticRecordZone
_analyticRecordZoneID
_analyticZoneCreated
_anyChatExistsOnServerWithResultsLimit:changeToken:activity:completion:
_appearsToBeDSID
_appearsToBeEmail
_archivedRecordSyncToken
_arrayForKey:
_askToBuyResponseHandler
_askToTapToRadarForErrorString:path:
_askToTapToRadarWithString:internalOnly:
_assetDownloadInProgress
_assetForKey:
_assetURLToInsertToRecord
_assetUUIDToUnfinishedTransferMapFromTransfers:
_assetUUIDsToFileTransfers
_assetsFetch
_attachmentDeleteBatchSize
_attachmentDownloadCanStart:withActivity:
_attachmentFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:desiredKeys:
_attachmentRecordZone
_attachmentRecordZoneID
_attachmentStoreSharedInstance
_attachmentZoneCreated
_attachmentZoneID
_attachmentZoneSalt
_audience:allowsRepliesToChat:
_auditToken
_authenticationController
_autoBugCaptureWithSubType:debugDescription:
_autoDonationBehavior
_autoDonationBehaviorLastModificationDate
_autoReconnectTimer:
_autoReplier
_autoReplyAudience
_autoReplyMessageTextWithUrgentBreakthroughInstructions:
_automaticDNDStatus
_automationCompletionBlock
_automation_markAsReadQuery:finishedWithResult:
_automation_markMessagesAsRead:messageGUID:forChatGUID:fromMe:queryID:
_automation_receiveDictionary:fromID:
_automation_sendDictionary:options:toHandles:
_auxVideoPathIfItExists
_availabilitySubscriptionService
_awaitingDataContext
_badPass
_bagDisabled
_beginExitStateCleanupIfNeededWithActivity:
_beginNicknameUpload:
_beginPeriodicSyncWithActivity:attemptCount:
_beginPeriodicSyncWithActivity:attemptCount:syncChatsCompletionBlock:
_bestGuessURI
_blackholedChatInfoForNumberOfChats:
_blackholedChatsExistCache
_blastDoorProcessingWithIMMessageItem:chat:account:fromToken:fromIDSID:fromIdentifier:toIdentifier:participants:groupName:groupID:isEncrypted:isFromMe:isLastFromStorage:isFromStorage:hideLockScreenNotification:wantsCheckpointing:needsDeliveryReceipt:messageBalloonPayloadAttachmentDictionary:inlineAttachments:attributionInfoArray:nicknameDictionary:availabilityVerificationRecipientChannelIDPrefix:availabilityVerificationRecipientEncryptionValidationToken:messageContext:completionBlock:
_blastDoorProcessingWithIMMessageItem:chat:account:fromToken:fromIDSID:fromIdentifier:toIdentifier:participants:groupName:groupID:isEncrypted:isFromMe:isLastFromStorage:isFromStorage:hideLockScreenNotification:wantsCheckpointing:needsDeliveryReceipt:messageBalloonPayloadAttachmentDictionary:inlineAttachments:attributionInfoArray:nicknameDictionary:availabilityVerificationRecipientChannelIDPrefix:availabilityVerificationRecipientEncryptionValidationToken:messageContext:isFromTrustedSender:completionBlock:
_blockPrefWriting
_blocklistIfNeededForChatDict:
_broadcastPendingMapChanged
_broadcastToForceReloadChats
_broadcaster
_broadcasterForTesting
_broadcasterOverride
_buddies
_buddyChangeLevel
_cacheDeleteRequestCacheableSpaceGuidanceWithID:diskVolume:urgency:requestedSize:
_cacheDeleteSetUp
_cacheFailureDate:
_cachedAliasToCNIDMap
_cachedChatWithGUID:
_cachedChatsWithGroupID:
_cachedLastFailedMessageDate
_cachedPathForStickerWithProperties:
_cachedSalt
_cachedServiceDefaults
_cachedSetupServiceDefaults
_cachedUnreadMessageCount
_calculateUnreadMessagesCountFilteredByFocus
_callMonitorStateChanged:
_callSyncWithCompletion:activity:
_canSubmitCloudKitAnalytic
_canSubmitCloudKitMetric
_capabilities
_changeObservationQueue
_changeTokenKeyForSyncType:
_chat
_chat:isDuplicateOfChat:
_chatEligibleForAvailabilityInformation:
_chatFetchRecordZoneChangesCKConfiguration:
_chatFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:
_chatForTUConversation:
_chatGUIDToChatMapForChats:
_chatGUIDToCountMap
_chatGUIDToSpamCheckTimerMap
_chatGUIDsThatNeedRemerging:chatDictionaryArray:aliasMap:
_chatGUIDsThatNeedRemergingWithCompletionHandler:
_chatInfo
_chatInfoForChats:
_chatInfoForConnection
_chatInfoForNumberOfChats:
_chatInfoInRange:wantsBlackholed:
_chatRecordZoneID
_chatRegistry
_chatRegistrySharedInstance
_chatRoomToGroupChatIdentifierMap
_chatStore
_chatSyncOperationGroup
_chatSyncOperationGroupWithName:
_chatSyncedRecently
_chatWriteRecordsCKConfiguration:
_chatZoneCreated
_chatZoneID
_chats
_chatsForMessageGUID:enableVerboseLogging:
_chatsForMessageIdentifier:
_chatsLock
_chatsToSendNicknameInfoTo
_chatsWithBlackholed:
_checkEligibilityWithAccountInfo:
_checkForContactChanges
_checkIfEnabledByServerBagOrDefault:
_checkIfUnexpectedlyLoggedOut
_checkMessageForENURL:
_checkMessageForOneTimeCodes:
_checkPowerAssertion
_checkRecordZoneExists:completionBlock:
_ckAccountChanged:
_ckChatSyncControllerNeedsSync
_ckQueue
_ckRecordFromData:
_ckSyncController
_ckUniqueID
_ckUtilities
_ckUtilitiesInstance
_ckUtilitiesSharedInstance
_className
_cleanUpTemporaryFiles
_cleanupPhoneNumber:
_clearAutoReconnectTimer
_clearCMMTransfersForCMMMessage:
_clearConnectionMonitor
_clearDowngradeMarkersForChat:
_clearFailureBadge
_clearProgressForTransferGUID:
_clearRateLimiter
_clearSharingLists
_clearTombstonesWithActivity:
_clientPreviewConstraints
_cloudKitRecordID
_cloudKitSyncState
_cloudkitSyncingEnabled
_codeInvalidationTimer
_commitBatchWrite
_compareLastFailureDateAndUpdateBadge:
_completeHubbleDownloadForTransfer:
_completeProgressForTransferGUID:
_completedPeriodicSyncSinceFirstFullSyncForLastSyncDate:firstFullSyncCompletedDate:
_completionBlocksForAssetFetchOperations
_compressFileAtPath:toPath:withCompletionBlock:
_configureAccountInformationOnItem:withAccount:
_configureIdentifierForOutgoingItem:withIdentifier:withStyle:
_configureSyndicationRangesForMessage:forChat:withSyndicationStatus:
_configureTimeOnOutgoingItem:
_connectionMonitor
_constructAttachmentRecordIDUsingTombStoneDictionary:
_constructMessageRecordIDUsingTombStoneDictionary:
_constructRecoverableMessageRecordIDUsingTombStoneDictionary:
_contactsBasedMerginEnabled
_contactsChanged:
_contactsContainsParticipants:
_container
_contextForMomentShareURL:forMessage:inChat:createIfNeeded:
_contextStamp
_contextWeakReference
_conversationItemForChat:conversation:
_conversationManager
_convertDeletedPartsDict:toIndexSet:toMap:
_copiedFileURLFromAssetExportFileURLs:transferGUID:error:
_copyAttachmentRecord:
_copyCKRecordFromExistingCKMetadata
_copyCKRecordFromExistingCKMetadataWithZoneID:salt:
_copyChatsToUploadWithLimit:
_copyForEnumerating
_copyHandle:onService:
_copyItemAtURL:toTemporaryDirectoryWithName:isDirectory:error:
_copyRecordIDsToDelete
_copyRecordIDsToDeleteWithLimit:
_copyServicePropertiesFromIMServiceBundle:
_count
_countryCode
_createAccountError:
_createGroupChatForConversation:onSession:
_createGroupChatsArray
_createKnownRecordBlock
_createProcessBatchBlockWithServiceSession:
_createRecordZone:completionBlock:
_createRecordZoneIfNeeded:completionBlock:
_createSubscriptionForZoneID:subscriptionID:recordType:completionBlock:
_createSubscriptionIfNeededForZoneID:subscriptionID:recordType:completionBlock:
_createSyncCompletionBlockForServiceSession:
_createWrapperForTransfer:
_currentHour
_currentlyExecutingSyncTask
_customizedAutoReplyMessage
_daemonWillShutdown:
_dailySyncStateDictionary
_dataBaseManager
_dataForKey:
_data_connection_readyWithAccount:
_databaseManager
_dateForKey:
_dateForNext24LogDumpAtHour:timeNow:dumpNow:
_deDupeSaltRecordZone
_deDupeSaltZoneID
_deactivatingAccount
_decompressFileAtPath:toPath:withCompletionBlock:
_defaultDefaults
_defaultPairedDevice
_defaultsSayWeHaveSyncedOnce
_delegate
_delegateToQueue
_deleteAllZonesForDatabase:
_deleteAttachmentsAndReturnBytesDeleted:
_deleteAttachmentsWithRecordIDs:completion:
_deleteAvatarForNickname:
_deleteBatchSize
_deleteChatRecordsWithRecordIDs:completion:
_deleteContext
_deleteDataUnderScrutiny
_deleteFileAtPath:
_deleteFilesOnDiskAndUpdateTransfers:
_deleteHandleIDFromHandledMap:
_deleteHandleIDFromPendingMap:
_deleteMessagesWithGUIDs:chatIdentifiers:style:onServices:batchNumber:completion:
_deleteMessagesWithRecordIDs:completion:
_deleteNicknameFromPendingMap:
_deletePublicNicknameLocationAndKey
_deleteRecoverableMessagesWithRecordIDs:completion:
_deleteZone:
_deleteZone:forDatabase:
_describeErrors:
_desiredKeysArrayForType:
_determineResultMessageForInput:output:original:
_deviceActive
_deviceConditionsAllowsAttachmentFileSizeUpdateForActivity:
_deviceConditionsAllowsMessageSync
_deviceConditionsAllowsMessageSyncForActivity:deviceConditionsToCheck:currentBatchCount:maxBatchCount:
_deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:
_deviceConditionsAllowsMessageSyncForCurrentBatchCount:maxBatchCount:activity:
_deviceConditionsAllowsMessageSyncIgnoreFeatureEnabled:
_deviceConditionsAllowsMessageSyncIgnoreFeatureEnabled:activity:
_deviceConditionsAllowsMessageSyncWithActivity:
_deviceConditionsToCheck
_deviceIsPhone
_deviceLowOnDiskSpace
_deviceSupport
_deviceSupportsSMSAutoReplyForChat:
_deviceSupportsiMessageAutoReply
_deviceUnderFirstUnlock
_dictionaryRepresentation
_dictionaryRepresentationsForFileTransfers:toSave:
_didKeyRollPendingCheck
_didPassAccountAndIdentityUpdateNeeds
_didReceiveMessageDeliveryReceiptForMessageID:attempts:date:account:
_didReceiveMessagePlayedForMessageID:date:attempts:completionBlock:
_didReceiveMessagePlayedReceiptForMessageID:date:attempts:completionBlock:
_didReceiveMessageReadForMessageID:date:attempts:completionBlock:
_didReceiveMessageReadReceiptForMessageID:date:attempts:completionBlock:
_didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:attempts:account:completionBlock:
_dispatchNotification:withBlock:
_displayDatabaseFullAlert
_displayName
_dndHandleForIMDHandle:
_doLoginIgnoringProxy:
_doLoginIgnoringProxy:withAccount:
_doesAnyRecordZoneIDHavePendingArchivedRecords:
_doneLoadingAfterMerge
_downloadAttachmentAssetsWithActivity:restoringAttachments:retryCount:numAttachmentsDownloaded:completion:
_downloadAttachmentAssetsWithActivity:restoringAttachments:retryCount:numAttachmentsDownloaded:transfers:completion:
_dtService
_eligibleForTruthZone
_enManager
_enTextMessageForMessageBody:
_enURLsForMessageBody:
_encryptionValidationToken
_endNicknameUpload
_engramID
_ensureNoExistingGroupForCKRecord:
_errorFetchingExitDate
_errorIndicatesDeviceNotGoodForSync:
_evaluateIfAccountHasMultiplePhoneNumbers
_evaluateStateAndActIfNeeded
_evictCachedChat:
_exactGroupChatMatchOrNewestMatchingGroupID:serviceName:participants:toIdentifier:
_existingChatForCKRecord:
_existingChatsForIDs:serviceName:displayName:groupID:style:
_existingItemRequiresUpgrade:itemFromCKRecord:
_existingiMessageChatForChatIdentifier:style:
_exitRecordID
_expireStateTimerFired
_extractHandlesFromMap:usingCNID:
_familyInviteResponseHandler
_fetchAndValidateFileTransfersFromCloudKit:capturedWithABC:activity:completion:
_fetchArchivedRecordsIfNeeded:currentBatchCount:maxNumberOfBatches:activity:withCompletionBlock:
_fetchAssetsForAcceptedMomentShareWithContext:
_fetchAttachmentZoneChangesShouldWriteBackChanges:desiredKeys:syncType:currentBatchCount:maxBatchCount:syncToken:activity:completionBlock:
_fetchAttachmentZoneRecords:desiredKeys:ognSuffix:removeTombstones:activity:completion:
_fetchChatRecordOperationWithActivity:
_fetchExitRecordDateWithCompletion:
_fetchLatestRampStateFromCK:
_fetchLatestSaltFromCloudKitAndPersistWithCompletion:
_fetchMessageZoneChangesSyncType:currentBatchCount:maxNumberOfBatches:activity:completionBlock:
_fetchMessagesFromChat:onService:numberOfMessages:
_fetchNexBatchOfMessagesAndReplay
_fetchOperationFactory:token:batchSize:activity:
_fetchOptionsDictionaryWithFetchOptions:andZoneID:
_fetchPrimaryAccountWithCompletion:
_fetchRecordZoneChangesOptionsFromOperation:
_fetchRecordsOperationWithActivity:
_fetchRecoverableMessagesCKConfiguration:
_fetchResultForCuratedOrFirstForMomentShare:outFetchType:
_fetchResultLimit:
_fetchTransfersFromCloudKit:indexOfTransfers:numberOfBatchesToFetch:activity:withCompletion:
_fetchTransfersFromCloudKit:withActivity:
_fetchType
_fetchUpdatesCKConfiguration:
_fetchedAllChangesFromCloudKit
_fetchedChatsDuringLastSync
_fetchedExitDateOnLaunch
_fileManager
_filePath
_fileTransferCenter
_fileTransferForAssetUUID:forMessage:momentShare:atIndex:ofTotal:
_fileTransferGUIDsInMessageBody:
_fileTransfersToDelete:
_fileTransfersToValidate:
_filterRecordIDsToChatsWithNoRecentModifications:completion:
_finalizeIncomingChat:
_findChatWinnerInDuplicateChatArray:fixDisplayName:
_findExistingGroupChatForConversation:onSession:
_findLosingChatGUIDsInArrayOfChats:withWinner:
_finishBatchChange
_firewallUserNotificationForService:
_firstOccurrence
_fixUpChatParticipantsIfNeeded:usingChatGUIDToChatMap:
_forceReloadChats:
_forceSetLoginStatus:message:reason:properties:
_forwardMappingPacket:toID:account:
_gelatoService
_generateCurrentAliasToCNIDDictionary
_generateLocationSharingItemWithHandleID:direction:action:
_generateLockRecord
_generateTransfersForAssetUUIDs:forMessage:inChat:momentShare:
_generateTransfersForContext:
_getCurrentDBVersion
_getDowngradedDBPath
_getFileSizeAtPath:
_getIndexSetForBatch:indexOfTransfers:
_getKeepMessagesValue
_getNewFileTransferForStoredAttachmentPayloadDataWithTransferGUID:messageGUID:
_getPendingNicknameForUpload
_getTempDBPath
_getTempRecentsPath
_getTruncatedDBPath
_getZippedDBPath
_getZippedRecentsPath
_groupChatIdentifierToChatRoomMap
_groupID
_guid
_guidToTransferMap
_handleAllowList
_handleChatDeletionCompletionForRecordIDs:error:
_handleDBVersionResponse:
_handleExpireStateDictionary:
_handleFetchZoneChangesOperation:
_handleFetchingExitRecordOperation:
_handleFileTransfer:acceptedWithPath:autoRename:overwrite:options:postNotification:
_handleFileTransfer:createdWithProperties:withAuditToken:
_handleFileTransfer:updatedWithProperties:
_handleFileTransferRemoved:
_handleFileTransferStopped:
_handleFileTransfers:autoRename:overwrite:options:postNotification:
_handleFirewallUserNotificationDidFinish:
_handleIncomingDB:
_handleIncomingRecents:
_handleIngestionFailureForContext:
_handleModifyRecordsOperation:
_handleMomentShareFetchForContext:momentShare:error:
_handleNotificationForZoneID:subscriptionID:
_handleQuickSwitchCompleted:
_handleQuickSwitchInitiateRequest
_handleRecentsRequest
_handleResourceRequestForContext:asset:transfer:didCompleteWithFileURL:error:
_handleRoutingWithDictionary:
_handleSharingKVStore
_handleSyncFailureType:step:activity:attemptCount:startTime:error:retry:
_handleUnexpectedLogout
_handleWatchdogWithDictionary:
_handleWritingCloudKitMetrics:
_handledNicknames
_handledNicknamesKVStore
_handlesForChat:
_handlesLock
_handlesMinusSenderServiceAccountID:
_handlesWithChangedContactsOriginalMap:newMap:
_hasCompletedRecoveryResync
_hasDumpedLogsForNoExisitingGroup
_hasDumpedLogsInPastHour
_hasDumpedRestoreFailureLogsInPastHour
_hasHadSuccessfulQuery
_hasMarkedAllAttachmentsAsNeedingSync
_hasMarkedAllMessagesAsNeedingSync
_hasMessagesWithGUIDs:
_hasReceivedReadReceipt
_hasRecentOutgoingMessagesInChat:
_haveDeferredUpdateRequest
_haveInconsistentGroupPhotoGuidOnMergedChats:
_haveRecentUrgentMessageInGracePeriodForChat:
_haveRecentlySentUnavailabilityAutoReplyMessageToChat:
_heldDeletionContext
_historyToken
_iMessageEnabled
_iMessageFailedAccountIsIrreparable
_idSensitivity
_identifier
_identifierToZoneMap
_idsAccount
_idsAccountController
_idsTransportLogNeedsSync
_ifCloudKitAbleToSyncWithActivity:callBlock:
_imDefaults
_impl
_inMemorySyncStatistics
_incomingChatWithChatRecord:
_incomingChatsWithChatRecords:
_incrementCountsForColumnSyncedKey:syncedColumnAmountToIncrease:totalColumnAmountKey:totalColumnAmountToIncrease:
_indexChatAndMessagesToSpotlight
_indexOfNextBatch:totalTransfers:indexOfTransfers:
_indexSpotlightIfNeedForPTask:
_initResyncForDeleteRecovery
_initWithCKSyncController:accountController:replayController:
_initWithContainer:scope:
_initWithGUID:filename:isDirectory:localURL:account:otherPerson:totalBytes:hfsType:hfsCreator:hfsFlags:isIncoming:
_initialSyncAttempts
_initiateQuickSwitch
_insertChatUsingCKRecord:
_installSystemSound:
_internalName
_internalQueue
_inviteSenderHandleID:fromHandleID:
_isAccountActive:forService:
_isAcknowledgmentMessage:
_isActivated
_isArchived
_isAssociatedMessage:
_isAutoPlay:
_isBlackholed
_isCoreDuetSyncForMaxBatchCount:activity:
_isDeviceRegistered
_isDeviceRegisteredForAccount:
_isDisabled
_isDiskSpaceAvailableForSyncType:currentBatchCount:
_isDoingDeleteRecoverySync
_isFiltered
_isFirstLoad
_isInDrivingFocus
_isInExitState
_isLoading
_isLogDumpAllowed
_isMessageItemEligibleForEN:
_isMessageSWYSpamMessage:inChat:
_isNicknamesSharingEnabled
_isOperationalForAccount:
_isPairedDeviceInProxyMode
_isRecipeBasedSticker:
_isRecordingReplayDB
_isRecovered
_isRunningInAutomation
_isSMSChat:
_isSMSMessage:
_isSuppressedForGUID:
_isSyncing
_isSyncingPausedOverride
_isTryingToLogin
_isUnderScrutiny
_isUnexpectedlyLogOutValue
_isUpdatingAttachmentFileSizes
_isUsableSendingForAccount:
_isUserIntentNotLoggedOut
_isUsingCentralizedModel
_isValidCKRecordToSync:
_isValidPhoneNumber:forCountryCode:
_itemClassShouldUpdateTransferForItem:
_itemFromCKRecord:
_itemsForMessageRecords:handleID:useAttachmentCache:shouldLoadAttachments:reverseOrder:
_itemsWithAssociatedGUID:shouldLoadAttachments:
_itemsWithGUIDs:
_itemsWithHandles:onServices:messageGUID:threadIdentifier:limit:onlyMessages:
_itemsWithHandlesBeforeAndAfterGUID:handles:onServices:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:hasMessagesBefore:hasMessagesAfter:
_itemsWithRoomNames:onServices:messageGUID:threadIdentifier:limit:onlyMessages:
_keychainError
_keychainErrorWithCause:
_kickOffAssetFetchForTransfersIfNeededWithActivity:
_kickOffNightlyPeriodicSyncIfApplicable
_kickOffWriteIfNeededForSyncType:activity:completion:
_kickOffWriteOnCKQueueWithActivity:completion:
_kvStore
_kvStorePath
_lastAddressedLocalHandle
_lastAddressedSIMID
_lastAveragedBytes
_lastAveragedInterval
_lastFailedMessageDate
_lastLogDumpDate
_lastMeContactStoreSync
_lastMessage
_lastMessageStorageTimerInterval
_lastMessageTimeStampOnLoad
_lastModificationStamp
_lastReadMessageTimeStamp
_lastRestoreFailureLogDumpDate
_lastSeenMessageGuid
_latestActiveDate
_latestReadReceipt
_latestSyncToken
_legacyExistingLoadedChatsForIDs:onService:displayName:groupID:style:
_listenerID
_loadAllInfoFromDiskIfAble
_loadAttachmentRecordForGUID:
_loadCMMTransfersForMessage:
_loadChatsIncludingAllChats:
_loadIDSAccountController
_loading
_localProperties
_lock
_lockRecord
_lockRecordHadConflict:
_lockdownManager
_logAllUnreadMessages
_logGreenTeaLogsForChats:
_loginID
_login_checkUsernameAndPasswordWithAccount:
_login_serverSettingsReadyWithAccount:
_login_usernameAndPasswordReadyWithAccount:
_longRunningSyncTimer
_lookupChatUsingParentChatID:service:
_mainService
_makeAllAttachmentsClassC
_makeAllNicknameContentsClassC
_makeDeletePartsDictFor:withIndexes:withIndexToRangeMap:deleteDate:
_managed
_managedPrefsNotification:
_manateeContainer
_manualSyncAttemptCount
_mapRoomChatToGroupChat:style:
_markAllFailedAttachmentsAsNeedingSync
_markAllIncompatibleMessagesForDeletion
_markAllUnsuccessFullSyncMessagesAsNeedingSync
_markAttachmentWithROWIDAsFailedToUploadToCloudKit:
_markAttachmentWithROWIDAsSyncedWithCloudKit:
_markChatAsDefferedForSyncingUsingRecord:
_markChatAsDowngraded:
_markForksAsSyncedForChat:
_markGroupPhotosAsUnpurgeableIfNecessary
_markMessageAsRead:inChat:withCompletionHandler:
_markNicknameAsUpdated:incrementPendingNicknameVersion:
_markNicknameAsUpdatedForHandleID:
_markSensitiveDefault
_markTransferAsNotBeingAbleToSync:
_markTransferAsNotBeingAbleToSyncUsingCKRecord:
_maxTimeToDeferInSeconds
_meCardUpdated
_mergeDuplicateGroupsIfNeeded
_mergeParticipantIDs
_mergedPinningIdentifiersForChats:chatGUIDToChatMap:groupedChatsByPersonCentricIdWithSortedChats:
_message
_messageAutoReplier
_messageDeleteBatchSize
_messageExpireStateTimer
_messageFetchRecordZoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:
_messageGuidsForMessages:
_messageHasLegacyUrgentTriggerMatchInText:
_messageHistorySyncController
_messageIsSOS:
_messageItemSupportsAvailabilityReply:
_messageItemSupportsBreakthroughNotification:
_messageItemWithIndexesDeleted:subRangesToDeleteMapping:deleteSubject:deleteTransferCallback:createItemCallback:fromMessageItem:
_messageItemsForMessageRecords:handleID:useAttachmentCache:shouldLoadAttachments:reverseOrder:
_messageItemsSupportingAvailabilityReplyFromItems:
_messageItemsSupportingBreakthroughNotifications:
_messagePTaskStore
_messageProcessingController
_messageRecordSalt
_messageRecordZone
_messageRecordZoneID
_messageRoutingTimer
_messageSenderEligibleToReceiveAvailabilityInformation:
_messageStore
_messageStoreCompletion:inputMessage:outputMessage:originalMessage:completionBlock:
_messageStoreSharedInstance
_messageWatchdogTimer
_messageZoneCreated
_messageZoneID
_messagesPendingUpdateT1ToCloudKitWithLimit:attemptCount:
_messagesPendingUpdateT2ToCloudKitWithLimit:attemptCount:
_messagesProcessedComingBackFromStorage
_messagesReceivedDuringStorage
_messagesThatNeedSyncWithCloudKitWithLimit:attemptCount:
_metricZoneID
_migrateServerChangeToken
_migrateSyncToken
_migrateSyncTokens
_minimumChatComingOnlineSyncInterval
_mininimumServerBagClientValue
_mocFeatureEnabled
_modificationStamp
_modifiedOpGroupName:
_momentShare
_mutablePersistentProperties
_mutableProperties
_needToLoadMapsInfoFromDisk
_needsSyncOnAccountUpdate
_needsSyncOnIdentityUpdate
_needsToMarkAllAttachmentsAsNeedingSync
_needsToMarkAllChatsAsNeedingSync
_needsToMarkAllMessagesAsNeedingSync
_needsWrapper
_networkCall_IMDMessagePTaskDeleteAllCompletedTask
_networkCall_IMDMessagePTaskSelectWithLimit:
_networkCall_IMDMessagePTaskUpdateTaskFlagsForGUID:taskFlags:
_networkCall_InsertRowGuid:taskFlags:
_networkChanged:
_networkDataAvailable
_newDeviceDidSignIntoiMessageWithRetryCount:
_newFileTransferFromIMDAttachmentRecordRef:
_newFirstUnlockReplaySyncTask
_newHashForChat:style:
_newIDSTransactionLogSyncTask
_newKChatSyncTask
_newckRecordsFromChats:
_newestExistingChatWithGroupID:onService:
_newestExistingChatWithOriginalGroupID:onService:
_newestGroupChatMatchingParticipants:displayName:strictDisplayNameMatching:serviceName:toIdentifier:
_nickNameContainer
_nickNameContainerIdentifier
_nicknameController
_nicknameFeatureEnabled
_nicknameIsUploadingToCK
_nicknamesForParticipants
_nightlySyncTimer
_nightlySyncTimerFired
_noteMeticsForSyncEndedWithSuccces:
_noteMetricsForSyncStartFrom:fullSync:
_noteSyncEnded
_noteSyncStarted:
_noticeDispatcher
_noticeEventHistory
_notificationCenter
_notifyPSYDataSent
_notifyPSYWithResult:
_nukeCKData
_numMessagesSent
_numberForKey:
_numberOfAttachmentsToDownload
_numberOfAttachmentsToWriteUp
_numberOfBatchesOfAttachmentsToFetchInInitialSync
_numberOfBatchesOfMessagesToFetchInInitialSync
_numberOfChatsToFetch
_numberOfChatsToWrite
_numberOfMessagesToUpload
_numberOfMetadataBatchesOfAttachmentsToFetchInInitialSync
_numberOfRecordsToFetchForSyncType:
_oldServiceDomain
_onChangeTokenUpdated:token:data:
_onReadComplete:error:activity:completion:
_onRecordDeleted:type:
_onRecordRead:
_onRecordT1Write:error:recordNameToRowIDMap:
_onRecordT2Write:error:recordNameToItemMap:
_onRecordWrite:error:recordNameToPartIndexAndRowID:
_onRecordZoneFetchComplete:token:tokenData:moreComing:error:
_onRecoverableMessagePartRecordReadWithDeleteDate:messageGUID:partBody:
_onWriteComplete:error:shouldWriteMore:activity:completion:
_onWriteT1Complete:error:shouldWriteMore:activity:completion:
_onWriteT2Complete:error:shouldWriteMore:activity:completion:
_oneToOneChatForRemoteHandle:
_operationErrorForModifyingRecordCompletion:
_operationGroupWithName:
_operationIsCloudKitMetricsOperation:
_operationalAccounts
_operationalAccountsCache
_originalGroupID
_oscarChat
_otcUtilities
_otherChatExistsWithChatGUID:
_pTaskStore
_parentChatIDFromCKRecord:
_participantIDSetFromHandles:toIdentifier:
_participants
_password
_pendingDBUpdatePost
_pendingENGroupParticipantUpdate
_pendingNicknameUpdates
_pendingNicknameUpdatesKVStore
_pendingReadReceiptFromStorageCount
_perTransferProgress
_performBlock:afterDelay:
_performRampCheckWithRetryAfter:
_periodicSyncAttemptCount
_periodicSyncStateDictionary
_persistAttachmentAtFileURL:forFileTransfer:
_persistMergeIDMergedChatsIfNeeded
_persistMergedIDMergedChatsIfNeeded:
_persistRampFetchServerError:
_persistedChatCount
_persistenceQueue
_personCentricID
_personIdFromAccount:
_personalNickname
_playAcknowledgmentSentSound
_playSMSSound
_populateCKRecordWithIMGroupActionItemFields:
_populateCKRecordWithIMGroupTitleChangeItemFields:
_populateCKRecordWithIMItemFields:
_populateCKRecordWithIMLocationShareStatusChangeItemFields:
_populateCKRecordWithIMMessageActionItemFields:
_populateCKRecordWithIMMessageItemFields:
_populateCKRecordWithIMParticipantChangeItemFields:
_populateContactIDOnHandles
_populateLastMessageForChat:
_populateNicknameDictionary:forKVStore:limitToLoad:
_postBadgeNumber:
_postBadgeString:
_postDBUpdate
_postHubbleDownloadFailedForTransfer:error:
_postMessagesFromStorage:
_postMetricsToCloudKitOnAutomaticHistoryDeletionAgentLaunch
_postTransferInfoOfDeletedTransfers:
_postUpdated:
_predominantServiceForChat:usingMessageThreshold:
_pref_IMDCoreSpotlightHasMigrated
_primaryiCloudAccount
_primaryiCloudAccountAltDSID
_primaryiCloudAccountSecurityLevel
_privateWorkQueue
_processAndValidateAttachmentRecordsEligibleForPurge:recordIDsToTransfers:capturedWithABC:completion:
_processArchivedRecordsFetchCompletionZoneID:serverChangeToken:moreComing:currentBatchCount:maxNumberOfBatches:activity:error:completionBlock:
_processAssetFetchOperationCompletionBlock:removeTombstones:operationID:error:
_processAssetFetchPerRecordCompletionBlock:recordID:error:
_processAssetFetchPerRecordProgressBlock:progress:
_processBatch:
_processFetchArchivedRecordCompletionWithError:WithCompletionBlock:
_processFetchRecordChangesCompleted:activity:completion:syncType:
_processFetchRecordChangesCompleted:completionBlock:
_processFetchRecordZoneChangesCompletionWithError:completionBlock:
_processIncomingChat:
_processMessagesForAvailabilityAutoReply:forIncomingMessageFromIDSID:inChat:
_processModifyPerRecordCallBack:error:
_processModifyPerRecordCallBack:error:recordIDtoGUIDmap:
_processModifyRecordCompletion:deletedRecordIDs:error:completionBlock:
_processModifyRecordsCompletion:deletedRecordIDs:operationError:isLastBatchOfWrite:activity:writeCompletionBlock:
_processPotentialNetworkChange
_processRecordChange:
_processRecordChanged:
_processRecordDeletion:
_processRecordDeletionCompletion:error:completionBlock:
_processRecordWriteCompletionForRecord:NSError:
_processRecordZoneChangeTokenUpdated:zoneID:clienChangeToken:
_processRecordZoneChangeTokenUpdated:zoneID:clienChangeToken:syncType:
_processRecordZoneFetchCompletion:zoneID:clientChangeTokenData:moreComing:error:
_processRecordZoneFetchCompletion:zoneID:clientChangeTokenData:moreComing:shouldWriteBackChanges:desiredKeys:syncType:error:currentBatchCount:maxBatchCount:activity:completionBlock:
_processRecordZoneFetchCompletionZoneID:serverChangeToken:clientChangeTokenData:moreComing:NSError:syncType:currentBatchCount:maxNumberOfBatches:shouldFetchArchivedRecords:activity:completionBlock:
_processingTimer
_processingTimerFired
_progressForTransferGUID:allowCreate:path:
_properties
_proxyAccount
_proxyHost
_proxyPassword
_proxyPort
_proxyType
_purgeableSpaceGivenUrgency:
_pwRequestID
_queue
_quickSwitchCompleted:
_quickSwitchIDSService
_randomSalt
_randomTemporaryPathWithFileName:
_rateLimiter
_readNextDeleteAfterRow
_readReceiptTrackingEnabled
_readRecordsWithType:attemptCount:activity:completion:
_reallyUnloadServiceBundle
_rebuildOperationalAccountsCache
_recentMessageIDs
_reconnectIfNecessary
_reconnectIfNecessaryWithAccount:
_recordFromServerChangeToken
_recordIDToTransferMap
_recordIsInvalid:
_recordManager
_recordStore
_recordType
_recordZoneManager
_recordsRead
_recordsToProcessWithError:error:
_recordsToSave
_recordsWriteFailed
_recoverableMessageRecordZone
_refreshUIWhileSyncing
_registrationInfo
_reindexMessage:completion:
_reloadTimer
_removeActiveTransfer:
_removeChatGuidFromCoreDuet:
_removeFinishedIngestionContext:
_removeObjectForKey:forDictionary:
_removeTransferFromiCloudBackupWithGuid:
_removeTransferringTransfer:
_removeWrapperForTransfer:
_repairGUIDIfNeeded
_repairInconsistentGroupPhotoGuidOnMergedChatsIfNecessary:
_replayController
_replayControllerNeedsSync
_replyDelegate
_replyProxy
_reportMessageDictionaryForMessages:withLastAddressedHandle:maxMessageLength:isAutoReport:withChat:maxMessagesToReport:totalMessageCount:
_reportMessageDictionaryForMessages:withLastAddressedHandle:maxMessageLength:isAutoReport:withChat:maxMessagesToReport:totalMessageCount:onlyReportForiMessageService:notifyInternalSecurity:
_reportToIDSiMessageSpam:
_requestResourceFileURLsForAsset:fileTransfer:completionHandler:
_requestingToSendLocalNicknameInfo:
_reregisterAndReidentify:
_resetArvchivedRecordSyncToken
_resetAttachmentSyncStateForRecord:toState:
_resetGUIDToExpectedGUID:
_resetHandleSharingList
_resetKeepMessagesSettingandBroadcastToAllDevices
_resetTransferStateIfAttachmentIsMissingAndDownloadable
_resolveChatConflictUsingCKRecord:localGUID:
_resyncForDeleteRecoveryState
_retryError
_retryPeerRequestWithRetry:
_retryTimer
_reuploadLocalProfileVersionNumber
_roomName
_routingTimerFired
_rowID
_saltZoneCreated
_saltZoneCreatedOverride
_saveFailureDate:
_saveKeychainPassword
_saveRecordsOperationWithMap:activity:
_saveRecordsT1OperationWithMap:activity:
_saveRecordsT2OperationWithMap:activity:
_saveRecoverableMessagesOperationFactory:token:batchSize:recordNameToPartIndexAndRowID:activity:
_savedFailureDate
_scheduleDeferredProcessingWithTimeInterval:
_scheduleMetricOperation:
_scheduleNextEvaluation
_scheduleOperation:
_screenTimeAskReponseHandler
_sendDBVersionResponse:
_sendDeliveredQuietelyForMessages:forIncomingMessageFromIDSID:inChat:
_sendIDSFile:withCommand:
_sendIDSMessage:
_sendMessageDictionary:toDevice:
_sendQuickSwitchCompletedWithResult:
_sendRecentsRequest
_sendTextAutoReplyIfNecessaryForMessages:withUrgentBreakthroughInstructions:inChat:
_sendTextAutoReplyToChat:withUrgentBreakthroughInstructions:
_sendZippedFileAtPath:withCommand:
_senderIDFromToken:
_senderServiceAccountIDFrom:
_serializedCKRecordData:
_serverAllowsCacheDelete
_serverAllowsRemovalFromBackUp
_serverAllowsSync
_serverAllowsUIRefreshTimerWhileSyncing
_serverAllowsUIRefreshWhileSyncing
_serverBag
_serverChangeToken
_serverDeniesDailySyncStateAnalytics
_serverDeniesPeriodicSyncAnalytics
_serverDoesNotAllowComingBackOnlineChatSync
_serverDoesNotSingleDeviceLimitation
_serverHost
_serverPort
_serverSaysToUseOldContainer
_service
_serviceDefaults
_serviceDefaultsForDomain:
_serviceDisconnectReason
_serviceDomain
_serviceLoginStatus
_serviceLoginStatusMessage
_serviceName
_serviceProperties
_services
_session
_sessionClass
_setAccount:otherPerson:
_setAutoDonationBehavior:lastModificationDate:
_setAutoReconnectTimer
_setAveragedTransferRate:lastAveragedInterval:lastAveragedBytes:
_setCKRecordArray:forKey:
_setCKRecordAsset:forKey:
_setCKRecordData:forKey:
_setCKRecordDate:forKey:
_setCKRecordNumber:forKey:
_setCKRecordString:forKey:
_setCurrentBytes:totalBytes:
_setDirectory:hfsType:hfsCreator:hfsFlags:
_setEligibleToToggleMiCSwitch:
_setError:
_setErrorDescription:
_setFetchOptions:
_setGroupID:forChatAndAllSiblings:
_setInitialLoadForTesting:
_setLastUpdatedInterval:
_setLocalPath:
_setLocalURL:
_setNewCodeAndPrepareInvalidationTimer:
_setNextDeleteAfterRow:
_setObject:forKey:forDictionary:shouldSetBuild:
_setOutgoingFlagsOnMessage:
_setPendingConnectionMonitorUpdate
_setQueue:
_setRecordPropertiesBasedOnExistingRecord:
_setRowID:
_setSortIDForMessage:forChat:
_setSortIDOnIncomingMessage:forChat:
_setStartDate:
_setStartingSync
_setTimerForPruningTypingContext
_setTransferState:
_setUnderScrutiny:
_setUnencryptedCKRecordNumber:forKey:
_setUnreadCount:
_setUpPushConnection
_setUpSubscription
_setValue:forKey:
_setiCloudSettingsSwitchEnabled:
_setupAndBeginSync
_setupNotificationCenter
_shareURL
_shareURLsToContexts
_sharedAccountController
_sharedCKUtilities
_sharedDatabaseManager
_sharedDefaultsInstance
_sharedIMDMessageStore
_sharedMessageStore
_shouldBlackholeGroupChatFromSender:toRecipient:withOtherParticipants:forAccount:
_shouldDeferCoreDuetMessagesSyncWithActivity:
_shouldDisplayPopUpForResettingKeepMessages
_shouldDownloadAssetForTransfer:forMessageItem:
_shouldDownloadIfPhoneNumberAndNoSIM:
_shouldDropSendingMessage
_shouldEarlyReturnForWrongItemType:
_shouldFetchArchivedRecords:
_shouldFetchNextBatch:totalTransfers:
_shouldHandleInternalPhishingAttempts
_shouldIgnoreDoNotDisturbForMessages:inChat:
_shouldMarkAllAttachmentsAsNeedingSync
_shouldMarkAllChatsAsNeedingSync
_shouldMarkAllMessagesAsNeedingSync
_shouldMarkAttachmentsAsNeedingReupload
_shouldPublishNowPlaying
_shouldReconnect
_shouldReloadConversations
_shouldReportNewUserIfCreatedChatZones:deletedZones:
_shouldResyncChatsForError:
_shouldSendPriorityRequest
_shouldSendTextAutoReplyForChat:
_shouldShowFailureString
_shouldShowSWYQuickActionForMessage:outAppName:outBundleID:
_shouldUpdateSyncStats:originalSyncState:
_shouldUpdateSyncStatsForChat:originalSyncState:
_shouldUpdateSyncStatsForMessage:originalSyncState:
_shouldUseBadgeUtilities
_shouldiCloudSwitchBeEnabled
_showCKLogNotificationWithCompletion:
_showDebugAlertWithHeader:message:
_siblingChatForChat:usingChatGUIDToChatMap:
_signalUnreadChangeForHandle:
_smsSoundsToPlay
_sortedParticipantIDHashForParticipants:
_sortedParticipantIDHashForParticipants:usesPersonCentricID:
_sosTransportValidForMessage:
_sosURLMatchInText:
_soundTypeForMessage:
_spamCheckTimerFired:
_spamExtensionCutoffTime
_spamMessageCreator
_startAssetExportForContext:
_startBatchChange
_startBatchWrite
_startICloudSyncWithActivity:
_state
_stateCaptureAssistant
_stickerPackGUIDToPackMap
_stopSuppressingForGUID:
_stopSuppressingSound
_storage
_storageController
_storageTimer
_storageTimerFired
_storageTimerInterval
_store
_storeAttachmentsForMessage:
_storeMessage:chatIdentifier:localChat:style:account:messagesToPostArray:
_storePublicNickname:nicknameLocation:encryptionKey:
_strictlyUnarchivedObjectOfClasses:fromData:error:
_stringForAutoReplyAudience:
_stringForKey:
_stripFZIDPrefix
_style
_subService
_submitCloudKitAnalyticWithOperationGroupName:analyticDictionary:
_submitCloudKitMetricWithOperationGroupName:record:ignoreZoneNotFoundError:completion:
_subscriptionCreated
_subscriptionCreatedOverride
_subscriptionValidationToken
_subscriptionValidationTokenByHandleIDCache
_suppressDBUpdateTimerFired
_suppressedUpdates
_suppressedUpdatesTimer
_suspendedStorageController
_swiftImpl
_swiftImplementation
_syncChatsWithActivity:
_syncChatsWithCloudKitWithCompletionType:activity:syncChatsCompletionBlock:
_syncHandleAllowDenyListToOtherDevices
_syncNotCompletedRecently
_syncOperationGroupName
_syncRecoverableMessagesToCloudKitWithActivity:syncAttemptCount:startTime:syncCompletionBlock:retryCompletionBock:
_syncStartDate
_syncState
_syncTaskByServiceName
_syncTaskCompletionBlock
_syncTaskFactory
_syncToken
_syndicationLibrary
_systemProxySettingsFetcher
_targetCountForContext:
_targets
_taskFlags
_taskGroupedByServiceName
_telemetryReporter
_timingComingBackFromStorage
_transcodeController
_transcodeControllerSharedInstance
_transferCanBeMarkedPurgable:
_transferTimer
_transferTimerTick:
_transferringTransfers
_transitionToCompletedStateForContext:
_transitionToFetchingMomentShareForContext:
_transitionToGenerateTransfersStateForContextIfNecessary:
_transitionToWaitingForAssetsForContext:
_truncateDBToPath:
_truthDatabase
_tryToReuploadPersonalNicknameWithRetryCount:reuploadVersion:
_tuConversationForChat:
_typingContext
_typingContextTimer
_unexpectedlyLoggedOut
_unformattedID
_unreadCount
_unreadMessagesWithHandles:onServices:limit:fallbackGUID:
_unreadMessagesWithRoomNames:onServices:limit:fallbackGUID:
_unsignedIntegerFromString:
_updateAccountStatusToUnregistered:withAccount:
_updateAssociatedMessageItemsFromMessage:toMessage:
_updateAttachmentGUIDIfNeededAndReturnTransfersToForceMarkAsSync:transfersToSyncRowIDs:
_updateBadge
_updateBadgeAndCancelPreviousUpdate
_updateCacheForMessageGUID:fromMessage:toMessage:updateLastMessage:calculateUnreadCount:
_updateCachedParticipants
_updateChat:usingRecord:
_updateChatUsingCKRecord:onRead:didSucceed:
_updateCloudKitRecordIDAndDecryptionKeyIfNeededFromMadridMessage:
_updateConnectionMonitorFromAccountDefaultsIgnoringProxy:
_updateConnectionMonitorWithRemoteHost:
_updateContext:withChange:
_updateContextStamp
_updateCurrentAliasToCNIDDictionaryAndHistoryTokenWithCompletionHandler:
_updateDenyAllowListHandlesVersion
_updateDeviceConditionsToCheckIfNeededForCurrentBatchCount:maxBatchCount:
_updateExpireStateForMessageGUID:
_updateExpireStateTimerWithInterval:
_updateHandleDenyAllowListIfNeeded:
_updateHandleList:withHandles:forKey:broadcastUpdates:
_updateHandledNicknamesIfNeeded:
_updateInputMessage:forExistingMessage:
_updateLastMessage:
_updateLastMessageTimeStampForChat:broadcaster:
_updateLegacyTransferGUIDOn:andUpdateMessageIfNeeded:transfersToSync:
_updateMessageDictionaryWithPendingNicknameUpdates:
_updateModificationDate
_updateNicknameInHandledMap:
_updatePendingNicknameVersion
_updatePendingTransferMapForContext:completedTransfer:
_updateRecordZone
_updateRecordZoneID
_updateRoutingForMessageGUID:chatGUID:error:account:
_updateRoutingTimerWithInterval:
_updateSharingPreferencesIfNeededFromMadridMessage:
_updateSpamCheckTimerWithInterval:forChatGUID:
_updateStorageTimerWithInterval:
_updateSyncStatisticsForChat:incrementTotalCount:
_updateSyncStatisticsForMessage:incrementTotalCount:
_updateSyncStatsForAttachments:incrementTotalAttachmentCount:
_updateTransferGUID:toGUID:
_updateTransferUsingCKRecord:wasFetched:
_updateV1RecordType
_updateVocabularyExcludingChat:completionHandler:
_updateWatchdogForMessageGUID:
_updateWatchdogTimerWithInterval:
_updateWithDictionaryRepresentation:
_updatedMessageBody:replacingGuid:withGuid:
_upgradeChatToGroupChat:forConversation:
_uploadPendingNicknameIfNecessary
_useDeprecatedApi
_userIsAvailableToHandle:
_validCodes
_validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:encryptionValidationToken:fromSender:completion:
_validationStatusForAlias:onAccount:
_valueForKey:
_visitedChats
_vocabulary
_wasReportedAsJunk
_watchdogTimerFired
_wentOfflineWithAccount:
_withinAnHourOfLogDumpHour
_writeAttachmentsToCloudKitWithActivity:completionBlock:
_writeCKRecordsToAttachmentZone:activity:withCompletion:
_writeCKRecordsToChatZone:activity:withCompletion:
_writeDirtyChatsToCloudKitWithActivity:completion:
_writeDirtyMessagesToCloudKitWithActivity:completion:
_writeDownSyncDate
_writeMsgIDToRowIDMap
_writeNicknameToKVStore:nickname:
_writeRampStateAllowed:promoted:visible:fetchHadServerError:
_writeRecordsWithType:activity:completion:
_writeRecoverableMessagesCKConfiguration:
_writeT1RecordUpdatesWithType:activity:completion:
_writeT2RecordUpdatesWithType:activity:completion:
_writeUpdatesCKConfiguration:
_writeUpdatesWithType:updateStep:activity:completion:
_xpc_IMDCoreSpotlightAddMessageGUID:
_zoneChangesOptionsDictionaryUsingToken:zoneID:resultsLimit:
_zoneCreated
_zoneIdentifierForOperation:
_zoneManager
aa_personID
aa_primaryAppleAccount
aa_primaryAppleAccountWithCompletion:
aa_primaryAppleAccountWithPreloadedDataclasses
absoluteString
acceptFileTransfer:completion:
acceptMomentShareWithCompletion:
acceptSubscriptionRequest:from:account:
acceptTransfer:path:
acceptableErrorCodeWhileDeleting:
account:aliasesChanged:
account:allowListChanged:
account:avAction:withArguments:toAVChat:isVideo:
account:blockListChanged:
account:blockingModeChanged:
account:buddyPictureChanged:imageData:imageHash:
account:buddyProperties:buddyPictures:
account:capabilitiesChanged:
account:chat:style:chatProperties:chatPersonCentricID:member:statusChanged:
account:chat:style:chatProperties:error:
account:chat:style:chatProperties:groupID:chatPersonCentricID:messageReceived:
account:chat:style:chatProperties:groupID:chatPersonCentricID:messageSent:
account:chat:style:chatProperties:groupID:chatPersonCentricID:messagesReceived:messagesComingFromStorage:
account:chat:style:chatProperties:groupID:chatPersonCentricID:statusChanged:handleInfo:
account:chat:style:chatProperties:invitationReceived:
account:chat:style:chatProperties:messageUpdated:
account:chat:style:chatProperties:messageUpdated:suppressNotification:
account:chat:style:chatProperties:messagesUpdated:
account:chat:style:chatProperties:notifySentMessage:sendTime:
account:chat:style:chatProperties:updateProperties:
account:conference:changedToNewConferenceID:
account:conference:invitationSentSuccessfully:
account:conference:peerID:propertiesUpdated:
account:conference:peerIDChangedFromID:toID:
account:conference:receivedAVMessage:from:sessionID:userInfo:
account:conference:receivedCancelInvitationFrom:properties:
account:conference:receivedCounterProposalFrom:properties:
account:conference:receivedInvitationFrom:properties:
account:conference:receivedUpdateFrom:data:
account:connectedDevicesChanged:
account:defaults:blockList:allowList:blockingMode:blockIdleStatus:status:capabilities:serviceLoginStatus:loginStatusMessage:
account:defaultsChanged:
account:devicesChanged:
account:displayNameChanged:
account:groupsChanged:error:
account:handleSubscriptionRequestFrom:withMessage:
account:isActiveChanged:
account:loginChanged:
account:loginStatusChanged:message:reason:properties:
account:nearbyDevicesChanged:
account:postedError:
account:profileChanged:
account:pseudonymsChanged:
account:registrationStatusInfoChanged:
account:relay:handleCancel:fromPerson:
account:relay:handleInitate:fromPerson:
account:relay:handleUpdate:fromPerson:
account:statusChanged:
account:vettedAliasesChanged:
accountAdded:
accountAdded:defaults:service:
accountAssociatedWithHandle:
accountClass
accountController
accountController:accountDisabled:
accountController:accountEnabled:
accountController:accountRemoved:
accountController:accountUpdated:
accountDefaultsChanged:
accountForAccountID:
accountForHandle:
accountForIDSAccountUniqueID:
accountFromIDSAccountWithUniqueID:
accountID
accountInfo
accountInfoToPost
accountInfoWithCompletionHandler:
accountIsVerifiedForMOCAndSafeForCacheDelete
accountNeedsLogin
accountNeedsPassword
accountPartition
accountRegionIsCandidateForHawking:
accountRegionsEligibleForJunkFiltering
accountRegisteredURIs
accountShouldBeAlwaysLoggedIn
accountStatus
accountType
accounts
accountsForLoginID:onService:
accountsForService:
accountsLoadedFromIdentityServices
acquireAssertionToUnsuspendProcess
actionIdentifier
actionIsGroupPhoto
actionType
activateAccount:
activateAccounts:
activateWithCompletionHandler:
active
activeAccounts
activeAccountsAreEligibleForHawking
activeAccountsChanged:forService:
activeAccountsForService:
activeAccountsFromIdentityServices
activeAliases
activeConversations
activeDeviceForHandle:
activeDevicesUpdated
activeFocusModeMatchesConversationWithHandleStrings:
activeHubbleRequestedTransfers
activeModeConfiguration
activeSessions
activity
activitySessions
addAccount:
addAccount:defaults:service:
addAliases:
addAliases:account:
addAttribute:value:range:
addBlock:withTimeout:forKey:description:
addChat:
addChat:firstLoad:store:
addConditionChecks:toCriteria:
addDefaultGatekeeperPropertiesToDirectory:
addDelegate:
addDelegate:queue:
addEntriesFromDictionary:
addErrorToArray:forKey:
addFailedEditPartIndex:
addFailedRetractPartIndex:
addHubbleRequestedTransfer:
addIMDHandleToRegistry:
addIndex:
addListener:
addLocationShareItemToMatchingChats:
addMessage:toChat:
addMessage:toChat:deferSpotlightIndexing:
addMessageWithGUID:toChat:
addMessageWithGUID:toChat:deferSpotlightIndexing:
addMessagesID:
addMissingMessageReadReceipt:
addNewAttachmentsSyncedCount:
addNewChatsSyncedCount:
addNewMessagesSyncedCount:
addNicknameToPendingUpdates:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperation:
addParticipants:
addRegistrationDelegate:queue:
addRetractedPartIndex:
addSyncDebuggingInfoToDictionary:
addSyncError:
addTarget:
addTimer:forMode:
addTransfer:forGUID:
addTransfers:
addUserNotification:listener:completionHandler:
addedObserverForUnexpectedlyLoggedOut
aliasStrings
aliasToCNIDMap
aliasesDidChange:
allBuddies
allChats
allChatsWithIdentifier:style:serviceNames:
allExistingChatsWithIdentifier:style:
allExistingSupportedServiceChatsWithIdentifier:style:
allHandlesForID:
allKeysForObject:
allNicknames
allObjects
allServiceSessions
allServices
allValues
allowHandleIDsForNicknameSharing:onChatGUIDs:
allowHandlesForSharing:onChatGUIDs:
allowList
allowListedHandlesForSharing
allowedAsChild
allowedAutoReplyAudience:
allowsWritingToDisk
alreadyCapturedErrorWithAutoBugCapture
altDSIDForAccount:
alternativeSpeakableMatches
analysisFetchOptions
analyticRecordZone
analyticRecordZoneID
analyticSyncDatesDictionary
analyticZoneRecordID
andPredicateWithSubpredicates:
anyChatExistsOnServerWithActivity:completion:
anyObject
anySessionForServiceName:
appendFormat:
appendString:
applyChangesUsingCKRecord:
archiveChat:
archivedDataWithRootObject:requiringSecureCoding:error:
archivedRecordSyncToken
array
arrayByAddingObjectsFromArray:
arrayByApplyingSelector:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
askHandleIDToShareTheirScreen:isContact:
askToBuyResponseHandler
assetCount
assetDownloadInProgress
assetUUIDsToFileTransfers
assetsFetch
assignAndPersistSortIDForIncomingMessage:onChat:
assignSortIDToIncomingMessage:onChat:
assignSortIDToIncomingMessageWithNoExistingMessagesWithSameReplyToGUID:onChat:
assignTransfer:toAccount:otherPerson:
associatedMessageGUID
associatedMessageGuid
associatedMessageRange
associatedMessageRangeLength
associatedMessageRangeLocation
associatedMessageType
attachmentQuery:chatID:services:finishedWithResult:
attachmentRecordHasAsset:
attachmentRecordZone
attachmentRecordZoneID
attachmentSyncController
attachmentWithGUID:
attachmentsFilteredUsingPredicate:limit:
attachmentsWithGUIDs:
attachmentsWithHandles:onServices:
attachmentsWithRoomNames:onServices:
attribute:atIndex:effectiveRange:
attributedBodyText
attributesAtIndex:effectiveRange:
attributesOfItemAtPath:error:
auditToken
authKitAccountWithAltDSID:
authenticateAccount
authenticateAccount:
autoBugCaptureWithSubType:errorPayload:
autoDonationBehavior
autoDonationBehaviorLastModificationDate
autoLogin
autoLoginAccount:
autoLoginActiveAccountsIfNecessary
autoReconnect
autoReconnectAccount:
autoReconnectWithAccount:
autoReplier:generatedAutoReplyText:forChat:
autoReplier:receivedUrgentRequestForMessages:
autoReplier:sendDeliveredQuietlyReceiptForMessages:forIncomingMessageFromIDSID:inChat:withWillSendToDestinationsHandler:
autoReplier:sendNotifyRecipientCommandForMessages:inChat:
autoReplyMessageWithReply:
automaticDNDStatus
automationCompletionBlock
autorelease
avMode
availabilityStatusTypeIdentifier
avatar
averageTransferRate
baloonBundleId
batchProcessingBlock
batchSize
beginBuddyChanges
beginComingBackOnlineSyncWithActivity:
beginInitialSyncAttemptCount:withActivity:
beginInitialSyncWithActivity:
beginPeriodicSyncWithActivity:
beginPeriodicSyncWithChecks:priority:reason:
beginRecordingMessagesToReplayDatabase:
bestCandidateGroupChatWithFromIdentifier:toIdentifier:displayName:participants:groupID:serviceName:
bizIntent
blackholeChat:
blackholedChatsExist
blackholedChatsExist:
blockList
blockingMode
blocklistGroupId:
body
bodyData
boolForKey:withDefault:
boolValue
broadcastCloudKitState
broadcastCloudKitStateAfterClearingErrors
broadcastCloudKitStateAfterFetchingAccountStatus
broadcastCodeStatusToClients
broadcastHandlesSharingNicknamesDidChange
broadcastNoticesDidChangeForChatGUIDs:
broadcastSyncState
broadcastTransfersWithGUIDs:atLocalPaths:
broadcaster
broadcasterForACConferenceListeners
broadcasterForACConferenceListenersSupportingService:
broadcasterForAVConferenceListeners
broadcasterForAVConferenceListenersSupportingService:
broadcasterForAccountListeners
broadcasterForAllListeners
broadcasterForBlackholeChatListeners
broadcasterForBlackholeChatListenersSupportingService:
broadcasterForChatCountsListeners
broadcasterForChatDatabaseListeners
broadcasterForChatListeners
broadcasterForChatListenersSupportingService:
broadcasterForChatListenersUsingBlackholeRegistry:
broadcasterForChatListenersWithBlackholeStatus:
broadcasterForChatObserverListeners
broadcasterForFileProviderListeners
broadcasterForListenersSupportingService:
broadcasterForNotificationListenersSupportingService:
broadcasterForNotificationsListeners
broadcasterForSentMessageListenersSupportingService:
broadcasterForVCConferenceListeners
broadcasterForVCConferenceListenersSupportingService:
broadcasterOverride
buddyPictures
bundle
bundleIdentifier
cStringUsingEncoding:
cacheDeleteEnabled
cachedAliasToCNIDMap
cachedAvailabilityVerificationTokensForHandleID:
cachedChats
cachedRampState:
cachedSalt
calculateAliasesForDefaults
calculateAndSaveAliasesToDefaults
callStackSymbols
callerIDShouldBeCheckedForRegistration:
callerURI
callerURIForIDSAccount:
canAddCommand:
canHandleNotificationResponse:userNotificationCenter:
canMakeDowngradeRoutingChecks
canMakeExpireStateChecks
canStoreItem:onService:
canStoreMessage:onService:
canWriteFileOfEstimatedSize:refreshCachedValue:
cancelPreviousPerformRequestsWithTarget:
cancelPreviousPerformRequestsWithTarget:selector:object:
cancelRequestID:serviceIdentifier:
cancelVCRequestWithPerson:properties:conference:
cancelVCRequestWithPerson:properties:conference:account:
cancelVCRequestWithPerson:properties:conference:reason:
canonicalFormOfChatRoom:
canonicalFormOfID:
canonicalFormOfID:withIDSensitivity:
canonicalizeChatIdentifier:style:
capabilities
caseInsensitiveCompare:
caseInsensitivityByHandleType
category
changeDetailsForFetchResult:
changeDetailsForObject:
changeGroup:changes:
changeGroup:changes:account:
changeGroups:
changeGroups:account:
changeObservationQueue
changeProperty:ofBuddy:to:
changeRequestForAsset:
changeType
characterAtIndex:
chat
chat:chatPersonCentricID:displayNameUpdated:
chat:chatPersonCentricID:displayNameUpdated:sender:
chat:engramIDUpdated:
chat:isFilteredUpdated:
chat:isRecoveredUpdated:
chat:lastAddressedHandleUpdated:
chat:lastMessageTimeStampOnLoadUpdated:
chat:nicknamesUpdated:
chat:propertiesUpdated:
chat:uncachedAttachmentCountUpdated:
chat:updateDisplayName:
chat:updateIsBlackholed:
chat:updateIsFiltered:
chat:updateIsRecovered:
chat:updateLastAddressHandle:
chat:updateLastAddressedSIMID:
chat:updateProperties:
chat:updated:
chatCacheEnabled
chatForChatIdentifier:style:
chatForChatIdentifier:style:account:
chatForHandle:account:chatIdentifier:guid:lastAddressedHandle:lastAddressedSIMID:isBlackholed:
chatForHandles:account:chatIdentifier:style:groupID:displayName:guid:lastAddressedHandle:lastAddressedSIMID:isBlackholed:
chatForItemWithGUID:
chatForMessageGUID:
chatForMessageGUID:enableVerboseLogging:
chatForMessageIdentifier:
chatForRoom:account:chatIdentifier:guid:
chatGUID
chatGUIDToCountMap
chatGUIDToSpamCheckTimerMap
chatIdentifier
chatLoadedWithChatIdentifier:chats:
chatProperties
chatRecordZone
chatRecordZoneID
chatRecordsWithHandles:serviceName:displayName:groupID:style:
chatRecordsWithIdentifier:
chatRegistry
chatStore
chatSyncController
chatWithCKRecord:
chatWithGUID:
chats
chatsFilteredUsingPredicate:
chatsFilteredUsingPredicate:sortedUsingDescriptors:limit:
chatsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:
chatsForMessage:
chatsForMessageGUID:
chatsGUIDsForMessageWithGUID:
chatsGUIDsForMessageWithIdentifier:
chatsNeedRemerging:groupedChats:
chatsToSendNicknameInfoTo
chatsToUploadToCloudKitWithLimit:
chatsWithGroupID:
chatsWithHandle:onService:
chatsWithHandles:onService:displayName:groupID:style:
chatsWithIdentifier:
chatsWithIdentifier:onService:
chatsWithPinningIdentifier:
chatsWithRoomname:onService:
checkBlackholedChatsExistAfterUpdatingChatWithAdd:
checkCloudkitEnabledStatusAndToggleiCloudSwitchIfNeeded
checkForSpamWithExtensionInChat:forMessageBody:sender:withCompletion:
checkResourceIsReachableAndReturnError:
checkSensitivePhotos
checkiCloudQuota:
ckChatSyncControllerNeedsSync
ckRecordIDFromExistingMetadata
ckStatisticCalculations
ckUtilities
class
cleanUnformattedPhoneNumber:countryCode:
cleanUpAsset:
cleanUpAssetsOnDiskForRecord:
cleanUpNicknameForID:
cleanseAttachments
cleanupAttachments
clear
clearAllTransfers
clearAnalyticDefaultsAndLocalSyncState
clearCKRelatedDefaults
clearChatZoneSyncToken
clearConnectedToPowerWifiOver20Hours
clearDataFromCloudKit
clearHistoryForIDs:style:onServices:beforeGUID:afterGUID:chatID:queryID:
clearLocalCloudKitSyncState
clearLocalProperties
clearLocalSyncState
clearLocalSyncState:
clearMessagesTombStoneTable
clearOneTimeImportAccounts
clearPendingDeleteTable
clearPendingNicknameForHandleID:
clearPendingNicknameUpdatesForHandleIDs:
clearPropertiesOfBuddy:
clearRateLimiter
clearRecoverableMessageTombStones
closeSessionChat:style:
closeSessionChatID:identifier:style:
closeSessionChatID:identifier:style:account:
cloudKitChatID
cloudKitDebugDescription
cloudKitRecordChangeTag
cloudKitRecordID
cloudKitServerChangeTokenBlob
cloudKitSyncDownloadAssetsOnly
cloudKitSyncState
cloudKitSyncingEnabled
cmmAssetOffset
cmmState
code
codeInvalidationTimer
collaborationNoticesDidChangeForChatGUIDs:
collectLogsIfNeeded
commSafetySensitive
commSafetyUIEnabled
commentThreshold
compare:
compareBySequenceNumberAndDateDescending:
compareIDs:
compareMessageToOtherMessagesWithSameReplyToGUIDAndAssignSortID:existingMessagesWithSameReplyToGUID:
completeTransferForAssetUUID:
completionBlocksForAssetFetchOperations
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
componentsWithURL:resolvingAgainstBaseURL:
compressedProtobufDataForGroupActionItem
compressedProtobufDataForGroupTitleChangeItem
compressedProtobufDataForLocationShareStatusChangeItem
compressedProtobufDataForMessage
compressedProtobufDataForMessageActionItem
compressedProtobufDataForMessageP2
compressedProtobufDataForMessageP3
compressedProtobufDataForParticipantChangeItem
compressedProtobufDataForUpdateT1:
compressedProtobufDataForUpdateT2:
compressedProtobufDataWithPadding:
conference:account:notifyInvitationCancelledFromPerson:
configurationsByRecordZoneID
conformsToProtocol:
connectedAccounts
connectedAccountsForService:
connectedToPowerAndWifiForOver20Hours
connectingAccounts
connectingAccountsForService:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
connectionMonitorDidUpdate:
consumeCodeWithGuid:
consumeCodeWithMessageGUID:
consumedSessionPayloads
contactsAvatarRecipeData
containsIndex:
containsMessageID:completion:
containsObjectIdenticalTo:
containsRichLink
contentURL
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
contextStamp
conversationManager
conversationManager:activeRemoteParticipantsChangedForConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:fromOldConversation:
conversationManager:activitySessionsChangedForConversation:
conversationManager:activitySessionsChangedForConversation:fromOldConversation:
conversationManager:addedActiveConversation:
conversationManager:avModeChangedForConversation:
conversationManager:avModeChangedForConversation:fromOldConversation:
conversationManager:changedActivityAuthorizationForBundleIdentifier:
conversationManager:conversation:addedMembersLocally:
conversationManager:conversation:buzzedMember:
conversationManager:conversation:didChangeSceneAssociationForActivitySession:
conversationManager:conversation:didChangeStateForActivitySession:
conversationManager:conversation:launchStateChanged:forActivitySession:
conversationManager:conversation:participant:addedNotice:
conversationManager:conversation:receivedActivitySessionEvent:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
conversationManager:conversation:requestedScreenShareForParticipant:
conversationManager:conversation:screenSharingChangedForParticipant:
conversationManager:conversation:updatedMessagesGroupPhoto:
conversationManager:conversationUpdatedMessagesGroupName:
conversationManager:conversationUpdatedMessagesGroupName:fromOldConversation:
conversationManager:conversationUpdatedMessagesGroupUUID:
conversationManager:didChangeActivatedLinks:
conversationManager:handoffEligibilityChangedForConversation:
conversationManager:handoffEligibilityChangedToConversation:fromPreviousConversation:
conversationManager:ignoreLMIRequestsChangedForConversation:
conversationManager:kickedMembersChangedForConversation:
conversationManager:kickedMembersChangedForConversation:fromOldConversation:
conversationManager:letMeInRequestStateChangedForConversation:
conversationManager:letMeInRequestStateChangedForConversation:fromOldConversation:
conversationManager:linkChangedForConversation:
conversationManager:linkChangedForConversation:fromOldConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:fromOldConversation:
conversationManager:localVideoToggledForConversation:
conversationManager:localVideoToggledForConversation:fromOldConversation:
conversationManager:migratingFromConversation:toConversation:
conversationManager:oneToOneModeChangedForConversation:
conversationManager:oneToOneModeChangedForConversation:fromOldConversation:
conversationManager:otherInvitedHandlesChangedForConversation:
conversationManager:otherInvitedHandlesChangedForConversation:fromOldConversation:
conversationManager:pendingMembersChangedForConversation:
conversationManager:pendingMembersChangedForConversation:fromOldConversation:
conversationManager:rejectedMembersChangedForConversation:
conversationManager:rejectedMembersChangedForConversation:fromOldConversation:
conversationManager:remoteMembersChangedForConversation:
conversationManager:remoteMembersChangedForConversation:fromOldConversation:
conversationManager:remoteScreenShareAttributesChanged:isLocallySharing:
conversationManager:remoteScreenShareEndedWithReason:
conversationManager:removedActiveConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:fromOldConversation:
conversationManager:screenSharingAvailableChanged:
conversationManager:sharePlayAvailableChanged:
conversationManager:stateChangedForConversation:
conversationManager:stateChangedForConversation:fromOldConversation:
conversationManager:systemActivitySessionsChangedForConversation:
conversationManager:systemActivitySessionsChangedForConversation:fromOldConversation:
conversationManager:trackedPendingMember:forConversationLink:
conversationManager:updatedIncomingPendingConversations:
conversationUpdateMessagesGroupPhoto:
conversationsChangedForConversationManager:
copy
copyCKRecordRepresentationWithZoneID:salt:
copyDictionaryRepresentation
copyDictionaryRepresentation:
copyEncodedSystemFields
copyFileTransferDictionaryRepresentationsFromCenter:
copyItemAtPath:toPath:error:
copyItemAtURL:toURL:error:
copyMessagesThatNeedToBeDeletedInCloudKitWithLimit:
copyNextBatchWithSize:iterationContext:
copyOfMessagesWithReplyToGUID:
copyRecordIDsAndGUIDsPendingCloudKitDelete
coreSpotlightDeleteAttachmentGUIDs:
count
countByEnumeratingWithState:objects:count:
countRecordOnRead:didSucceed:
countryCode
createAnalyticZoneIfNeededWithCompletionBlock:
createAndPersistLivePhotoBundleIfNecessary
createAttachmentZone
createAttachmentZoneIfNeededWithCompletionBlock:
createCKRecordForUpdateT1:zoneID:salt:
createCKRecordForUpdateT2:zoneID:salt:
createCKRecordforRecoverableMessageMetadata:zoneID:recordNameToPartIndexAndRowID:
createChatZone
createChatZoneIfNeededWithCompletionBlock:
createDeDupeSaltZoneIfNeededWithCompletionBlock:
createDictionaryForNotDeletingAnyAttachments:urgency:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDiscontinuedAccount
createEngramGroupOnMessageSend
createFileAtPath:contents:attributes:
createItemForPHAssetWithUUID:parentChatItemGUID:chatGUID:
createItemWithCKRecord:
createMessageZoneIfNeededWithCompletionBlock:
createOTCFromMessageBody:sender:guid:
createRecoverableMessageZoneIfNeededWithCompletionBlock:
createSessionIfNecessary
createSubscriptionIfNeededOnDeDupeZoneForSubscription:recordType:completionBlock:
createTodaysStatisticDictionaryIfNeeded
createUniqueDirectoryWithName:atPath:ofType:
createUpdateT1Info:
createUpdateZoneIfNeededWithCompletionBlock:
createdDate
curatedAssetIdentifiers
curationProperties
currentBytes
currentConnection
currentContext
currentHandler
currentInMemorySyncStatistics
currentNumberOfMessages
currentPersonalNicknameWithRecordID:decryptionKey:completionBlock:
currentPersonalNicknamewithCompletionBlock:
currentThread
currentToneIdentifierForAlertType:
currentlyExecutingSyncTask
data
dataForKey:error:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
dataRepresentation
dataUsingEncoding:
dataWithBytes:length:
dataWithJSONObject:options:error:
database
databaseChatSpamUpdated:
databaseFull
databaseNoLongerFull
databaseUpdated:
datasUpToLimit:deleteContext:error:
date
dateByAddingTimeInterval:
dateBySettingHour:minute:second:ofDate:options:
dateEdited
dateLastCallEnded
dateLastUpdatedForURL:
dateSent
dateViewed
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
deDupeSaltRecordZone
deDupeSaltZoneID
deactivateAccount:
deactivateAccount:force:
deactivateAccounts:
deactivateAccounts:force:
debugDescription
debugUpdateGroupParticipantversion:chatIdentifier:
declineInvitationToChat:style:
declineInvitationToChatID:identifier:style:
declineInvitationToChatID:identifier:style:account:
decodeObjectOfClasses:forKey:
decrementPendingReadReceiptFromStorageCount
defaultAccountSettings
defaultCenter
defaultChatSuffix
defaultHFSFileManager
defaultManager
defaultThreshold
defaultWorkspace
defaults
defaultsChanged:forService:
deferredSave
delayedSaveSettings
delayedSynchronize
delegate
deleteAllCompletedTasks
deleteAllNoticesWithCollaborationIdentifier:
deleteAllPersonalNicknames:withCompletion:
deleteAllPersonalNicknamesWithCompletion:
deleteAllZones
deleteAnalyticZone
deleteAttachmentCKOperationUsingRecordIDstoDelete:
deleteAttachmentDataForTransfer:
deleteAttachmentSyncToken
deleteAttachmentWithGUID:
deleteAttachmentZone
deleteAttachmentsAndReturnBytesDeleted:urgency:
deleteAttachmentsDirectWithPredicate:
deleteAttachmentsForMessage:
deleteAttachmentsForTransfer:
deleteAttachmentsWithGUIDs:
deleteBatchWithContext:error:
deleteChat:
deleteChatCKOperationUsingRecordIDstoDelete:
deleteChatSyncToken
deleteChatZone
deleteChatsForCommandDictionary:
deleteCommandDictionaryWithIncomingDictionary:inferredRecoverableDeleteForLegacyCommandsWithDate:
deleteContext
deleteDatabase
deleteDeDupeRecordZone
deleteDeDupeSaltZone
deleteExitRecord
deleteFileTransferWithGUID:
deleteInteractionsWithChatGUIDs:
deleteInteractionsWithMessageGUIDs:
deleteMessageCKOperationUsingRecordIDstoDelete:
deleteMessageFromSpotlightWithGUID:
deleteMessageGUIDs:
deleteMessageGUIDs:inChat:
deleteMessagePartsForCommandDictionary:
deleteMessageSyncToken
deleteMessageZone
deleteMessagesForCommandDictionary:
deleteMessagesFromTombStoneTableWithRecordIDs:
deleteMessagesWithChatIdentifiers:style:onServices:
deleteMessagesWithChatIdentifiers:style:onServices:completion:
deleteMessagesWithReplaceMessageID:fromHandle:onService:
deleteMessagesZone
deleteNotice:
deleteNoticeWithGUIDString:
deleteNoticesForURLs:
deleteObject:
deleteRecoverableMessageCKOperationUsingRecordIDstoDelete:
deleteRecoverableMessageZone
deleteReplayDB
deleteReplayDBIfNotUnderFirstUnlock
deleteSalt
deleteSearchableItemsWithDomainIdentifiers:bundleID:withCompletion:
deleteTransferForGUID:
deleteUpdateSyncToken
deleteUpdateZone
deletedZones
denyHandleIDsForNicknameSharing:
denyHandlesForSharing:
denyListedHandlesForSharing
derivedQualityOfService
describeErrors
describeRecordCounts
description
desiredKeys
destinationCallerID
detectSpam:chatGUID:
deviceActiveString
deviceCharging
deviceConditions
deviceConditionsAllowPeriodicSync
deviceConditionsToCheck
deviceForFromID:
deviceIndependentID
deviceInformationString
deviceIsLockedDown
deviceIsPhoneOrWatch
deviceLowOnDiskSpace
deviceOnWifi
deviceSignedOutOfiMessage
deviceSupport
deviceSupportsSubscriptionValidationTokens
deviceType
dictionary
dictionaryRepresentation
dictionaryRepresentationIncludingLastMessage
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didAttemptToDisableAllDevicesResult:
didAttemptToDisableiCloudBackups:error:
didAttemptToSetEnabledTo:result:
didChangeMemberStatus:forHandle:forChat:style:
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:
didChangeMemberStatus:forHandle:fromHandle:unformattedNumber:countryCode:forChat:style:account:destinationCallerID:
didChangeMemberStatus:forHandle:unformattedNumber:countryCode:forChat:style:
didFetchCloudKitSyncDebuggingInfo:
didFetchRampState:
didFetchSyncStateStats:
didJoinChat:style:
didJoinChat:style:displayName:groupID:handleInfo:
didJoinChat:style:displayName:groupID:handleInfo:account:isBlackholed:
didJoinChat:style:displayName:groupID:handleInfo:category:spamExtensionName:
didJoinChat:style:displayName:groupID:lastAddressedHandle:handleInfo:
didJoinChat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:
didJoinChat:style:handleInfo:
didJoinChat:style:handleInfo:account:
didJoinReadOnlyChat:style:displayName:groupID:handleInfo:category:spamExtensionName:
didKeyRollPendingCheck
didLeaveChat:style:
didLeaveChat:style:account:
didNotifyRecipient
didPerformAdditionalStorageRequiredCheckWithSuccess:additionalStorageRequired:forAccountId:error:
didReceiveBalloonPayload:forChat:style:messageGUID:account:
didReceiveDisplayNameChange:fromID:toIdentifier:forChat:style:account:
didReceiveDisplayNameChange:fromID:toIdentifier:forChat:style:account:sender:
didReceiveError:forMessageID:forceError:
didReceiveError:forMessageID:forceError:account:
didReceiveErrorMessage:forChat:style:
didReceiveEventWithName:userInfo:
didReceiveInvitation:forChat:style:
didReceiveMessage:forChat:style:account:fromIDSID:
didReceiveMessage:forChat:style:fromIDSID:
didReceiveMessageDeliveryReceiptForMessageID:date:
didReceiveMessageDeliveryReceiptForMessageID:date:account:
didReceiveMessageEditingSendFailure:forMessageGUID:partIndex:editType:
didReceiveMessageEditingUnsupportedHandleIDs:forMessageGUID:partIndex:previousMessage:backwardCompatibilityMessageGUID:
didReceiveMessagePlayedForMessageID:date:completionBlock:
didReceiveMessagePlayedReceiptForMessageID:date:completionBlock:
didReceiveMessageReadForMessageID:date:completionBlock:
didReceiveMessageReadReceiptForMessageID:date:completionBlock:
didReceiveMessageSavedForMessageID:ofType:forChat:fromHandle:fromMe:date:account:completionBlock:
didReceiveMessages:forChat:style:account:fromIDSID:
didReceiveReplaceMessageID:forChat:style:
didSendBalloonPayload:forChat:style:messageGUID:account:completionBlock:
didSendDeliveredQuietlyReceiptForMessageID:
didSendDeliveredQuietlyReceiptForMessageID:account:
didSendMessage:forChat:style:
didSendMessage:forChat:style:account:forceDate:
didSendMessage:forChat:style:account:forceDate:itemIsComingFromStorage:
didSendMessage:forChat:style:forceDate:
didSendMessageEditForMessageGUID:
didSendMessagePlayedReceiptForMessageID:
didSendMessagePlayedReceiptForMessageID:account:
didSendMessageReadReceiptForMessageID:
didSendMessageReadReceiptForMessageID:account:
didSendMessageSavedReceiptForMessageID:
didSendMessageSavedReceiptForMessageID:account:
didSendNotice:
didSendNotifyRecipientCommandForMessageID:
didSendNotifyRecipientCommandForMessageID:account:
didSendSyndicationActionItem:forChat:
didSendWithNotice:
didUpdateChatStatus:chat:style:account:
didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:
didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:account:category:spamExtensionName:
didUpdateChatStatus:chat:style:displayName:groupID:handleInfo:account:isBlackholed:
didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:handleInfo:
didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:
didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:category:spamExtensionName:isBlackholed:
didUpdateChatStatus:chat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:isBlackholed:
didUpdateChatStatus:chat:style:handleInfo:
differenceFromDate:
direction
disableAllDevicesWithCompletion:
disableServiceSession:
disabled
disablingDevices
disallowDeactivation
disallowReconnection
discontinued
dismissNotice:
displayName
displayPinCodeForAccount:pinCode:deviceName:deviceType:phoneNumber:
doesNotRecognizeSelector:
domain
doneLoadingAfterMerge
doubleValue
downgradingFromHSA2AndDisablingMOC
downloadAssetsForTransferGUIDs
downloadAttachmentAssets
downloadAttachmentAssetsForChatIDs:services:style:completion:
downloadAttachmentAssetsWithActivity:restoringAttachments:
downloadAttachmentAssetsWithActivity:restoringAttachments:completion:
downloadFileTransferWithLocalURL:
downloadHighQualityVariantOfFileTransferWithGUID:
downloadPurgedAttachmentsForIDs:style:onServices:chatID:
downloadStickerPackWithGUID:isIncomingMessage:ignoreCache:
downloadStickerWithGUID:
downloadedPurgedAssetBatchForChatIDs:completedTransferGUIDs:
dsid
dtService
dummyMethod
dumpLogsToFolderAtPath:withFileName:lastHours:predicate:includeCKDebug:withCompletion:
dumpMOCLoggingMetaData
eagerUploadCancel:
earlierDate:
editedPartIndexes
eligibleForTruthZone
eligibleForTruthZoneWithCompletion:
emitPreviewGenerationBeginFromUTI:
emitPreviewGenerationEndFromUTI:
enableAccount:
enableAttachmentMetricCollection
enableMOCIfNeeded
enableNotifications
encodeSystemFieldsWithCoder:
encodeWithCoder:
encodedData
encounteredIncompatibleMessage
encryptedValuesByKey
encryptionValidationToken
endRecordingReplayDatabase
endTransfer:
enforceAccountsMatchForMocAndShowDialogIfNeeded
engramID
engroupCreationDate
engroupParticipantsUpdatedForChat:
enqueReplayMessageCallback:
enqueueBlock:
enqueueWorkBlock:
enrollDeviceForSMSRelay:account:
enrollDeviceInSMSRelay:
enrollSelfDeviceForSMSRelay:
enrollSelfDeviceInSMSRelay
enumerateAttachmentGUIDsWithBlock:
enumerateAttribute:inRange:options:usingBlock:
enumerateBatchedChatsFilteredUsingPredicate:batchSize:block:
enumerateBatchedChatsFilteredUsingPredicate:block:
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
enumeratorAtPath:
equalID:andID:
error
errorAnalyzer
errorArrayForKey:
errorCode
errorDescription
errorFetchingExitDate
errorIndicateDeviceDoesNotHaveKeysToSync:
errorIndicatesDeviceConditionsDontAllowSync:
errorIndicatesQuotaExceeded:
errorIndicatesUserDeletedZone:
errorIndicatesZoneNotCreated:
errorWithDomain:code:userInfo:
etag
evalToggleiCloudSettingsSwitch
evaluateAccountStateForFeatureEligibility
eventData
eventStreamHandler:didReceiveEventWithName:userInfo:
eventType
exceptionWithName:reason:userInfo:
executablePath
existingChatForID:account:
existingChatForIDs:account:displayName:groupID:style:
existingChatForIDs:account:style:
existingChatForMessageGUID:
existingChatForRoom:account:
existingChatWithEngramID:
existingChatWithGUID:
existingChatWithIdentifier:account:
existingChatsFilteredUsingPredicate:
existingChatsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:limit:
existingChatsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:
existingChatsForGroupID:
existingChatsForIDs:displayName:groupID:style:
existingChatsForIDs:onService:displayName:groupID:style:
existingChatsForIDs:onService:style:
existingChatsForIDs:style:
existingChatsWithGroupID:
existingChatsWithPinningIdentifier:
existingGroupChatsContainingHandles:
existingMessageSimilarToMessage:skipServices:skipGUIDs:withinTimeInterval:participants:
existingOneOnOneChatsWithIdentifiers:
existingSMSChatForID:
existingSMSChatForID:withChatStyle:
existingServiceSessionForService:
existingiMessageChatForID:
existingiMessageChatForID:withChatStyle:
existsAtLocalPath
exitConfiguration
exitDate
exitManager
exitRecordDate
exitRecordDateWithCompletion:
exitRecordID
expireState
exportRequestForAsset:error:
exportWithOptions:completionHandler:
exposureNotificationEnabled
expressiveSendId
expressiveSendStyleID
extractRecordIDsDeletedFromCKPartialError:
extractRecordIDsNotFoundFromCKPartialError:
extractServerRecordFromCKServerErrorRecordChanged:
failTransfer:error:
failTransfer:reason:
failTransferPreviewGeneration:
failTransfersOnPreviewGenerationFailure
familyInviteResponseHandler
featureEnabled
fetchAccountStatusAndUpdateMiCSwitchEligibility
fetchAccountStatusAndUpdateMiCSwitchEligibilityIfNeededOnImagentLaunch
fetchArchivedRecordsOperationWithSyncToken:zoneID:activity:
fetchAssetsInAssetCollection:options:
fetchAssetsWithOptions:
fetchAttachmentDataForTransfers:highQuality:perTransferProgress:activity:completion:
fetchAttachmentRecordsFilteredUsingPredicate:limit:completionHandler:
fetchAttachmentZoneChangesCKOperationUsingToken:zoneID:resultsLimit:desiredKeys:operationGroupName:activity:
fetchAttachmentZoneRecords:desiredKeys:operationGroupName:activity:
fetchChatCKOperationUsingRecordIDs:
fetchChatRecordsFilteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:
fetchChatRecordsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:completionHandler:
fetchChatRecordsWithPinningIdentifier:completionHandler:
fetchChatZoneChangesCKOperationUsingToken:zone:resultsLimit:activity:
fetchChatZoneChangesCKOperationUsingToken:zone:resultsLimit:groupName:activity:
fetchChatZoneToCheckManateeStatus:
fetchCloudKitAccountStatusAndUpdateEligibilityAndNeedsRepairStatusWithCompletion:
fetchCloudKitAccountStatusWithCompletion:
fetchCloudKitSyncStateDebuggingInfo:
fetchCollaborationNoticesForChatGUID:reply:
fetchCommonCapabilities:fromChatWithGUID:reply:
fetchCuratedAssetsInAssetCollection:options:
fetchCurrentDeviceIDWithCompletionHandler:
fetchCurrentUserForNicknameContainer:
fetchEarliestMessageDateForChatsWithGUIDs:completion:
fetchHandleSharingState
fetchLatestRampState
fetchLatestRampStateFromCK:
fetchLatestRecordKeyFromCKAndCreateIfKeyDoesNotExistWithCompletion:
fetchLatestRecordKeyFromCKAndCreateIfKeyDoesNotExistWithCompletion:forceFetch:
fetchMessageRecordsForChatRecordWithGUID:filteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:
fetchMessageZoneChangesCKOperationUsingToken:zoneID:resultsLimit:operationGroupName:activity:
fetchMomentShareFromShareURL:forMessage:completionHandler:
fetchMomentShareFromShareURL:options:completionHandler:
fetchNicknames
fetchOperationFactory:token:batchSize:activity:
fetchOptions
fetchPasswordForProfileID:username:service:outRequestID:completionBlock:
fetchPersonalNickname
fetchRecordZoneChangesCompletionBlock
fetchRecordsCompletionBlock
fetchResourcesToShareForAsset:requestOptions:error:
fetchResultAfterChanges
fetchSMSFilterParamForCategory:subCategory:
fetchSubscriptionWithID:completionHandler:
fetchSyncStateStatistics
fetchType
fetchUserRecordIDWithCompletionHandler:
fetchedChatsDuringLastSync
fetchedExitDateOnLaunch
fetchiCloudAccountPersonID:
fileEligibleForCacheDelete:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHFSCreatorCode
fileHFSFlags
filePath
fileSize
fileSystemRepresentation
fileTransfer:acceptedWithPath:autoRename:overwrite:options:
fileTransfer:createdWithProperties:
fileTransfer:explicitDownloadSucceededWithPath:livePhotoBundlePath:
fileTransfer:highQualityDownloadSucceededWithPath:
fileTransfer:updatedWithCurrentBytes:totalBytes:averageTransferRate:
fileTransfer:updatedWithProperties:
fileTransferCenter
fileTransferDownloadFailedWithLocalURL:error:
fileTransferDownloadedSucceededWithLocalURL:
fileTransferErrorWithReason:description:
fileTransferExplicitDownloadFailed:suggestedRetryGUID:error:
fileTransferGUIDs
fileTransferHighQualityDownloadFailed:
fileTransferRemoved:
fileTransferStopped:
fileTransferWithAttachmentRecordRef:
fileTransfers:createdWithLocalPaths:
fileTransfersRecoverablyDeleted:
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
fileURLWithPath:
fileURLWithPath:isDirectory:
filename
filterediMessageChatsExist
finalSyncStateFor:
findDuplicateChats:
findDuplicateUnnamedGroups:
finishEncoding
finishedDownloadingPurgedAssetsForChatIDs:
fireDate
firstObject
fixIMTranscoderAgentPriorityInversion
flags
focusStateDidChange
forceAutoBugCaptureWithSubType:errorPayload:
forceReloadChatRegistryWithQueryID:
forcedReloadingChatRegistryWithQueryID:
formUnionWithCharacterSet:
forwardInvocation:
frequentRepliesForForChatIdentifiers:onServices:limit:
frequentRepliesQuery:chatID:services:finishedWithResult:limit:
gelatoService
generateNewGroupID
generatePreview:previewURL:constraints:balloonBundleID:completionBlock:blockUntilReply:
generatePreviewForTransfer:attachmentPath:balloonBundleID:isFromMe:completionBlock:
generateUnusedChatIdentifierForGroupChatWithAccount:
generateUnusedChatIdentifierForGroupChatWithServiceName:chatWithChatIdentifierExists:
generatedRoomNameForGroupChat
getAnalyticSyncDatesObjectForKey:
getBoolFromDomain:forKey:
getBoolFromDomain:forKey:defaultValue:
getBytes:length:
getCMMAssetOffset
getCMMState
getNicknameWithRecordID:decryptionKey:completionBlock:
getNumberOfTimesRespondedToThread
getValueFromDomain:forKey:
goConnectedWithLocalSocketAddress:remoteSocketAddress:
goDisconnected
group
groupActionProtobufForCompressedData:
groupChatsBasedOnIdentity:
groupChatsBasedOnIdentityUsingCacheIfApplicable:
groupPhotoGuid
groupPhotoUpdatedForChatIdentifier:style:account:userInfo:
groupPhotoUploadFailureCount
groupTitle
groupTitleChangeProtobufForCompressedData:
groupUUID
groups
guid
guidByStrippingAuxPrefix:
guidForNewIncomingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
guidForNewOutgoingTransferWithFilename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
guidForNewOutgoingTransferWithLocalURL:
guidString
guidToTransferMap
guidsForStoredAttachmentPayloadData:messageGUID:
guidsForStoredAttachmentPayloadDataURLs:messageGUID:
handle
handleAKUserInfoChangedNotification:
handleDenyList
handleFailureInMethod:object:file:lineNumber:description:
handleIDInsensitivityIsCarrierBased
handleIncomingNoticeProtobuf:service:account:fromID:context:
handleInfo
handleMessageUpdate:
handleMessageUpdateConflictType:serverRecord:localRowID:
handleNicknameUpdatesFromPeerDevice:fromPeerDevice:
handleNotificationForSubscriptionID:
handleNotificationResponse:userNotificationCenter:completionHandler:
handleOperation:
handleSharingKVStore
handledNicknames
handledNicknamesKVStore
handlesSharingNicknamesDidChange
hasActivePhoneAccount
hasCapability:
hasDumpedLogsForNoExisitingGroup
hasHadSuccessfulQuery
hasImage
hasPreferredAssetOverRecord:
hasPrefix:
hasReceivedReadReceipt
hasRecentlyMessaged:
hasStoredMessageWithGUID:
hasSuffix:
hash
haveDeferredUpdateRequest
heldDeletionContext
hideAttachment
historicalMessageGUIDsDeleted:chatGUIDs:queryID:
historyForMessagePart:
historyQuery:chatID:services:finishedWithResult:limit:
historyToken
holdBuddyUpdates
holdBuddyUpdatesAccount:
hour
iCloudAccountMatchesiMessageAccount
iMessageStorageController
idSensitivity
idToHandlesMap
identifier
identifierToZoneMap
idsAccount
idsAccountForFromURI:toURI:
idsAccountForURI:IDSServiceName:
idsAccounts
idsDestination
idsTransportLogNeedsSync
ignorePendingNicknameForHandleID:
ignorePendingNicknameUpdatesForHandleIDs:
imDefaults
im_AKSecurityLevelKey
im_enqueuSMSBlock:withTimeout:description:
im_enqueuiMessageBlock:withTimeout:description:
im_lastPathComponent
im_livePhotoVideoPath
im_registeredURIs
im_stripCategoryLabel
imageFilePath
imdAccountForIDSAccount:
imdAccountLoginFromIDSAccountWithType:login:
impl
importMessage:isRead:
inExitState
inMemorySyncStatistics
incompatibleMessageDeleteDetected:
incrementCoreDuetSyncAttempts
incrementPendingReadReceiptFromStorageCount
incrementSyncedAttachmentCount:incrementTotalAttachmentCount:
incrementSyncedChatCount:incrementTotalChatCount:
incrementSyncedMessageCount:incrementTotalMessageCount:
indexOfObject:
indexOfObject:matchingComparison:
init
initForReadingFromData:error:
initMarkUnreadWithIDSHandle:
initRecordZoneManager:databaseManager:
initRequiringSecureCoding:
initWithAccount:service:
initWithAccountController:
initWithAccountID:defaults:service:
initWithAccountID:defaults:service:idsAccount:
initWithAccountID:service:guid:groupID:chatIdentifier:participants:roomName:displayName:lastAddressedLocalHandle:lastAddressedSIMID:properties:state:style:isFiltered:hasHadSuccessfulQuery:engramID:serverChangeToken:cloudKitSyncState:originalGroupID:lastReadMessageTimeStamp:lastMessageTimeStampOnLoad:cloudKitRecordID:isBlackholed:autoDonationBehavior:autoDonationBehaviorLastModificationDate:isRecovered:
initWithArray:
initWithAssociatedChatGUID:
initWithBroadcaster:otcUtilities:
initWithBundle:isMainService:
initWithBundle:subServiceName:
initWithBundleIdentifier:
initWithCKRecord:writeAssetToDisk:
initWithCKSyncController:
initWithCalendarIdentifier:
initWithCapacity:
initWithChatRegistry:vocabulary:
initWithCoder:
initWithContainerID:options:
initWithContainerIdentifier:environment:
initWithContentsOfFile:
initWithContentsOfURL:
initWithContext:
initWithData:
initWithData:encoding:
initWithDictionary:
initWithDictionary:uniqueID:serviceName:
initWithDictionaryRepresentation:
initWithDomain:code:userInfo:
initWithEntity:insertIntoManagedObjectContext:
initWithEntityName:
initWithEnvironmentName:namedDelegatePort:queue:
initWithEventStreamName:
initWithFilePath:
initWithFileURL:
initWithFormat:arguments:
initWithGUID:
initWithGUIDString:sender:metadata:date:dateViewed:
initWithHost:port:delegate:
initWithID:unformattedID:countryCode:
initWithID:unformattedID:countryCode:personCentricID:
initWithIDSDestination:latestDate:latestReadReceiptDate:hasReceivedReadReceipt:
initWithIdentifier:
initWithImageName:imageFilePath:
initWithIndex:
initWithIndexesInRange:
initWithInputURL:outputURL:identifier:operation:completionBlock:queue:
initWithKey:ascending:
initWithKeyValueCollection:
initWithKeyValueStorage:
initWithListenerID:auditToken:capabilities:replyProxy:
initWithLongLong:
initWithMachServiceName:
initWithMessageBody:messageGUID:
initWithMessageHistorySyncTaskFactory:
initWithMessageStore:
initWithMessageStore:defaultsStore:
initWithMessagesPTaskStore:
initWithName:managedObjectModel:
initWithObject:title:queue:
initWithObjects:
initWithObjectsAndKeys:
initWithPath:storeName:dataProtectionClass:
initWithPhotoLibraryURL:
initWithProtobufData:type:isResponse:
initWithProtocol:forwardingHandler:
initWithProxyProtocol:proxyHost:proxyPort:delegate:
initWithRecordIDs:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRecordZoneIDs:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithRecordsToSave:recordIDsToDelete:
initWithRemoteHost:delegate:
initWithReplayController:accountController:
initWithSender:time:body:attributes:fileTransferGUIDs:flags:error:guid:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:threadIdentifier:
initWithSender:time:body:attributes:fileTransferGUIDs:flags:error:guid:threadIdentifier:
initWithSender:time:guid:type:
initWithSenderInfo:time:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:type:
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:bizIntent:locale:errorType:threadIdentifier:syndicationRanges:syncedSyndicationRanges:partCount:dateEdited:
initWithSerializedError_im:
initWithServerBag:lockDownmanager:deviceSupport:imDefaults:
initWithService:
initWithServiceSession:
initWithSet:
initWithStatusTypeIdentifier:
initWithStorageController:
initWithStoreDictionary:
initWithString:attributes:
initWithSubscriptionValidationToken:encryptionValidationToken:
initWithSyncTokenStore:
initWithSyndicationAction:
initWithSyndicationType:messagePartRange:syndicationStartDate:syndicationStatus:assetDescriptor:
initWithTargets:
initWithTimeInterval:name:shouldWake:target:selector:userInfo:
initWithTimeIntervalSince1970:
initWithTimeIntervalSinceNow:
initWithURL:
initWithURL:message:inChat:
initWithUUIDString:
initWithUnsignedInteger:
initWithZoneID:subscriptionID:
initWithZoneName:
initWithZoneName:ownerName:
initialMessageSyncController
initialSyncAllowed
initialSyncAttempts
initialize
initiatePeriodicSync
initiateQuickSwitch
initiateSync
initiator
instancesRespondToSelector:
intValue
integerForKey:withDefault:
integerValue
internalName
internalQueue
interpretMessageItem:inChat:
intersectSet:
invalidate
invalidatePersonCentricGroupedChatsCache
inviteHandleIDToShareMyScreen:isContact:
invitePerson:withMessage:toChat:style:
invitePersonInfo:withMessage:toChat:style:
invitePersonInfo:withMessage:toChatID:identifier:style:
invitePersonInfoToiMessageChat:withMessage:toChat:style:
invitePersonInfoToiMessageChat:withMessage:toChatID:identifier:style:
invitePersonInfoToiMessageChat:withMessage:toChatID:identifier:style:account:
invokeWithTarget:
isAVLessSharePlayEnabled
isAccountActive:
isActive
isArchived
isAssociatedMessage
isAssociatedMessageItem
isAttachmentReferencedByMessage:
isAudioMessage
isAutoDonatingMessages
isAutoReply
isAuxImage
isAuxVideo
isAwaitingStorageTimer
isBeingRetried
isBeingSetup
isBetterDefinedThan:
isBlackholed
isBusiness
isBusinessChat
isCKPartialError:
isCarrierReportJunkEnabled
isCompatibleWithMiC
isContact
isDataConnectionActive
isDateInToday:
isDateInYesterday:
isDefaultPairedDevice
isDelivered
isDeviceCharging
isDeviceLowOnDiskSpace
isDeviceOnWifi
isDisabled
isDisablingDevices
isDiscontinued
isDoingDeleteRecoverySync
isDownloadingQuery:chatID:services:finishedWithResult:
isEligibleForTruthZone
isEnabledForDataclass:
isEqual:
isEqualToAvailabilityVerificationTokens:
isEqualToData:
isEqualToDate:
isEqualToDictionary:
isEqualToIgnoringCase:
isEqualToNumber:
isEqualToSet:
isEqualToString:
isEquivalentToHandle:
isExpanseEnabled
isExpirable
isFeatureEnabled
isFiltered
isFinished
isFirstSyncWithActivity:completion:
isFromMe
isFromMomentShare
isFullyRetracted
isGelatoNoticesEnabled
isGroupChat
isIDSBased
isIgnorableBackwardCompatibilityMessage:inChat:
isImmediatelyReachable
isInAppleStoreDemoMode
isInCloudKitDemoMode
isInExitState
isIncoming
isInternalInstall
isInternationalSpamFilteringEnabled
isKeyRollPending
isKindOfClass:
isLegacy
isLightweightMember
isLoaded
isLoading
isLocalCachedSaltPresent
isLocalUserAvailableForContactInActiveMode:error:
isLocallyCreated
isLocatingMessage
isLocation
isMainThread
isManaged
isMemberOfClass:
isNetworkUp
isNewerThan:
isNull
isOlderThan:
isOlderThanItem:
isOnTelephonyCall
isOscarChat
isOscarEnabled
isRead
isRecentlyDeletedEnabled
isRecordingReplayDB
isRecovered
isReducedChatCacheSizeEnabled
isRemovedFromBackup
isSMS
isSMSSpam
isSafeToDeleteAttachmentPath:
isSensitiveImage:withChatID:completionHandler:
isSent
isShowingFailure
isSpam
isStartingEnabledSettingChange
isStartingInitialSyncSetByCloudKitHooks
isStartingPeriodicSyncSetByCloudKitHooks
isSticker
isSubService
isSuppressDatabaseUpdates
isSurfPayment:
isSyncing
isSyncingEnabled
isSystemLocked
isUnderFirstDataProtectionLock
isUnexpectedlyLoggedOut
isUnfinished
isUnnamedChat
isUpdateFromNickname:withOptions:
isUpdatingAttachmentFileSizes
isUsingCentralizeCacheDelete
isUsingCentralizedModel
isValidJSONObject:
isValidOneTimeCode:
isiMessageServiceIDSAccount:
isiMessageSpam
isoCountryCode
itemType
itemWithGUID:
itemsWithHandles:onServices:limit:
itemsWithHandles:onServices:messageGUID:limit:
itemsWithHandles:onServices:messageGUID:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:hasMessagesBefore:hasMessagesAfter:
itemsWithRoomNames:onServices:limit:
itemsWithRoomNames:onServices:messageGUID:limit:
itemsWithRoomNames:onServices:messageGUID:threadIdentifier:limit:
iterateRecentMessagesInChat:withBlock:
joinChat:handleInfo:style:groupID:joinProperties:
joinChat:handleInfo:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:
joinChat:style:groupID:joinProperties:
joinChat:style:joinProperties:
joinChatID:handleInfo:identifier:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:
joinChatID:handleInfo:identifier:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:account:
joinChatID:handleInfo:identifier:style:joinProperties:
keyEnumerator
keyRollPending
keyRollPendingStateDidChange
keyValueCollection
keyValueCollection:didUpdateValues:
keyValueCollection:willUpdateValues:
kickOffCloudKitSyncIfNeededOnImagentLaunch
kickOffEagerSyncIfApplicable
lastAddressedLocalHandle
lastAddressedSIMID
lastDeviceBackUpDate
lastFailedMessageDate
lastFailedMessageDateChanged:
lastMeContactStoreSync
lastMessage
lastMessageForChatWithRowID:
lastMessageTimeStampOnLoad
lastMessageWithHandles:onServices:
lastMessageWithRoomNames:onServices:
lastObject
lastPathComponent
lastReadMessageTimeStamp
lastRestoreFailureLogDumpDate
lastSeenMessageGUID
lastSeenMessageGuid
lastSentMessageDate
lastSyncDate
lastSyncedMessageRowID
lastTUConversationCreatedDate
lastTUConversationItemForChat:
lastTranslatableMessageGUIDWithLanguageCode:
laterDate:
latestActiveDate
latestReadReceipt
latestSyncTokenForSyncType:
launchListenerForCapability:
leaveChat:style:
leaveChatID:identifier:style:
leaveChatID:identifier:style:account:
leaveiMessageChat:style:
leaveiMessageChatID:identifier:style:
leaveiMessageChatID:identifier:style:account:
leftChat:
length
librarySpecificFetchOptions
linkedUserURIs
listener:shouldAcceptNewConnection:
listenerID
load
loadAllChats
loadAllChatsProgressivelyEnabled
loadAndReturnError:
loadAnyChatsContainingHandleIDsIn:reply:
loadAttachmentsForChatWithGUID:chatIdentifiers:style:services:reply:
loadAttachmentsForIDs:style:onServices:chatID:queryID:
loadChatWithChatIdentifier:
loadChatWithGUID:queryID:
loadChatWithGUID:reply:
loadChatsFilteredUsingPredicate:lastMessageOlderThan:limit:queryID:
loadChatsFilteredUsingPredicate:lastMessageOlderThan:limit:reply:
loadChatsFilteredUsingPredicate:queryID:
loadChatsFilteredUsingPredicate:reply:
loadChatsWithCompletionBlock:
loadChatsWithGroupID:queryID:
loadChatsWithGroupID:reply:
loadChatsWithHandleIDs:groupID:displayName:style:queryID:
loadChatsWithHandleIDs:groupID:displayName:style:reply:
loadChatsWithIdentifier:queryID:
loadChatsWithIdentifier:reply:
loadChatsWithPinningIdentifier:reply:
loadConsumedSessionPayloadsForItems:
loadDeletedMessagesWithLimit:
loadDirtyMessagesWithLimit:
loadFrequentRepliesForChatWithGUID:chatIdentifiers:style:services:limit:reply:
loadFrequentRepliesForIDs:style:onServices:limit:chatID:queryID:
loadHandledNicknamesAndPendingUpdates
loadHistoryForChatWithGUID:chatIdentifiers:style:services:limit:beforeGUID:afterGUID:threadIdentifier:reply:
loadHistoryForIDs:style:onServices:limit:beforeGUID:afterGUID:threadIdentifier:chatID:queryID:
loadIsDownloadingPurgedAttachmentsForChatWithGUID:chatIdentifiers:style:services:reply:
loadIsDownloadingPurgedAttachmentsForIDs:style:onServices:chatID:queryID:
loadMessageItemWithGUID:queryID:
loadMessageWithGUID:queryID:
loadMostRecentMessagePTasks
loadNoticeEventHistory
loadPagedHistoryAroundMessageWithGUID:chatGUID:chatIdentifiers:style:services:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:reply:
loadPagedHistoryForGUID:chatIdentifiers:style:onServices:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:chatID:queryID:
loadPersistentStoresWithCompletionHandler:
loadPersonalNicknameIfNeeded
loadRecoverableMessagesMetadataGroupedByChatGUID
loadRecoverableMessagesMetadataWithQueryID:
loadServiceBundle
loadSharingHandlesPrefs
loadUncachedAttachmentCountForChatWithGUID:chatIdentifiers:style:services:reply:
loadUncachedAttachmentCountForIDs:style:onServices:chatID:queryID:
loadUnreadForIDs:style:onServices:limit:fallbackGUID:chatId:queryID:
loadUnreadHistoryForChatWithGUID:chatIdentifiers:style:services:limit:fallbackMessageGUID:reply:
loadedChats:
loadedChats:queryID:
loadedRecoverableMessagesMetadata:queryID:
localFileURLRetrievalErrorWithReason:description:
localFileURLRetrievalErrorWithReason:underlyingReason:description:
localPath
localPropertiesOfBuddy:
localProperty:ofBuddy:
localURL
locale
localizations
localizedApplicationName
localizedDescription
localizedName
localizedStringForKey:value:table:
localizedStringForKey:value:table:localization:
localizedStringWithFormat:
locationShareStatusChangeProtobufForCompressedData:
lock
lockRecord
logCloudKitAnalytics
logCloudKitSyncToPowerLogForSyncType:isCoreDuetSync:didCompleteChatSync:didSucceedSyncingChats:didCompleteMessageSync:didSucceedSyncingMessages:didCompleteAttachmentSync:didSucceedSyncingAttachments:didCompleteRecoverableMessageSync:didSucceedSyncingRecoverableMessageSync:syncAttemptCount:
logCloudKitSyncToPowerLogForSyncType:isCoreDuetSync:didStartSync:didFinishSync:didSucceedSyncing:
logCollectorAddress
logDictionary:
logDumpAndSendMessageTo:forHours:
logDumpAndSendMessageTo:forHours:reason:
logDumpAndSendMessageTo:forHours:reason:isInitialSync:requirePreviousPrompt:willSendBlock:
logDumpAndSendMessageTo:forHours:reason:requirePreviousPrompt:willSendBlock:
logDumpIsExpected
logDumpIsNecessaryAfterSync
logHandle
logHandleIDs:checkAdditionalLoggingEnabled:
logPrivatizedImageReceivedEvent:
logToPowerLogForLogDumpGUID:logDumpCompleted:logDumpSucceeded:logDumpSendingCompleted:logDumpSendingSucceeded:reason:
loggableOverviewForKey:
login
loginAccount:
loginAllAccounts
loginIDForAccount:
loginWithAccount:
logout
logoutAccount:
logoutAllAccounts
logoutServiceSessionWithAccount:
logoutWithAccount:
longLongValue
longRunningSyncTimer
lsAppRecordForURL:checkInstalledAppsOnly:
mainBundle
mainQueue
mainRunLoop
mainService
mainThread
makeNewIncomingTransferWithGUID:filename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
makeNewOutgoingTransferWithGUID:filename:isDirectory:totalBytes:hfsType:hfsCreator:hfsFlags:
manateeContainer
markAllAttachmentsAsNeedingCloudKitSync
markAllAttachmentsAsNotPurgeable
markAllChatsAsDirty
markAllMessagesAsNeedingCloudKitSync
markAllNicknamesAsPending
markAsSpamForIDs:style:onServices:chatID:queryID:autoReport:
markAsSpamQuery:chatID:services:finishedWithResult:
markAttachment:purgeable:
markAttachment:sender:recipients:isIncoming:
markAttachmentPurgeable:
markAttachmentUnpurgeable:
markBuddiesAsChanged:
markChatAsDeferredForSyncingUsingCKRecord:
markChatAsSpamWithGUID:chatIdentifiers:style:services:isAutoReport:reply:
markDeferredChatsAsNeedingSync
markFile:asPurgeable:
markHasHadSuccessfulQueryForIDs:style:onServices:
markMessageAsCleanWithROWID:
markMessageAsCorrupt:setCorrupt:
markMessageAsDeduplicated:
markMessageAsIgnoreButNeedingSyncWithROWID:
markMessageAsReadWithGUID:callerOrigin:reply:
markMessageGUIDUnread:
markMessagesAsReadWithChatGUIDs:upToGUID:readDate:fromMe:
markMessagesAsReadWithIdentifiers:onServices:chatStyle:upToGUID:readDate:fromMe:
markNicknameAsUpdated:
markPlayedExpressiveSendForIDs:style:onServices:message:
markPlayedForIDs:style:onServices:message:
markPlayedForMessageGUID:
markReadForIDs:style:onServices:messages:clientUnreadCount:
markReadForIDs:style:onServices:messages:clientUnreadCount:setUnreadCountToZero:
markReadForMessageGUID:callerOrigin:queryID:
markSavedForIDs:style:onServices:message:
markSavedForMessageGUID:
markTransferAsNotSuccessfullyDownloadedFromCloud:
markTransferAsNotSyncedSuccessfully:
markUnreadForMessageGUID:IDs:style:services:
markedAsReadForMessageGUID:success:queryID:
maxNumberOfMessages
maxStartDateForRanges:
md5HashForRecord:
md5HashForTransfer
md5HashForURL:
meCardHasUpdated
meCardUpdated
messageActionChangeProtobufForCompressedData:
messageActionItemsForOriginalMessageGUID:
messageActionType
messageContainsSurfDD:
messageDatabaseSize
messageDictionaryWithPersonalRecordIDAndVersion
messageGUID
messageHandshakeState
messageHasUnfinishedTransfers:
messageHistorySyncController
messageID
messageItemQuery:finishedWithResult:chatGUIDs:
messagePTaskStore
messagePartIndex
messagePartRange
messageParts
messageProcessingController
messageProcessingTaskAdded:
messageQuery:finishedWithResult:chatGUIDs:
messageRecordZone
messageRecordZoneID
messageStore
messageSubject
messageSummaryInfo
messageSyncController
messageSyncP2Enabled
messageUpdateV1RecordType
messageWithGUID:
messageWithGUID:registerAttachments:
messageWithReplaceMessageID:fromHandle:onService:
messagesGroupUUID
messagesPendingUpdateT1ToCloudKitWithLimit:
messagesPendingUpdateT2ToCloudKitWithLimit:
messagesProcessedComingBackFromStorage
messagesReceivedDuringStorage
messagesThatNeedSyncWithCloudKitWithLimit:
messagesToUploadToCloudKitWithLimit:
messagesWithAssociatedGUID:
messagesWithAssociatedGUID:shouldLoadAttachments:
messagesWithGUIDs:
messagesWithReplyToGUID:
metaDataForSurfURL:
metadata
methodSignatureForSelector:
metricAttachmentValidation:attachmentSize:operationalErrorDomain:operationalErrorCode:validationErrorDomain:validationErrorCode:
metricAttachments:
metricAttachmentsToPurge:withActivity:
metricZoneID
micGroupPhotoEnabled
migrateKey:fromDatabase:
mimeType
minusSet:
mockAccountController
mode
modificationDate
modificationStamp
modifyRecordsCompletionBlock
momentShare
moveAssetFromRecord:
moveItemAtPath:toPath:error:
moveItemAtURL:toURL:error:
moveMessageRecordsToRecoveryForMessageGUIDs:deleteDate:
moveMessagesInChatsWithGUIDsToRecentlyDeleted:deleteDate:
moveMessagesInChatsWithGUIDsToRecentlyDeleted:deleteDate:queryID:
moveMessagesWithGUIDsToRecentlyDeleted:deleteDate:
moveMessagesWithGUIDsToRecentlyDeleted:deleteDate:queryID:
movedMessagesToRecentlyDeletedForChatsWithGUIDs:queryID:
movedMessagesToRecentlyDeletedWithQueryID:
msgid
multiplePhoneNumbersTiedToAccount
mutableCopy
mutablePersistentProperties
mutableProperties
name
needToLoadMapsInfoFromDisk
needsProccesingFor:
networkConditionsAllowLogin
networkDataAvailable
newAccountWithAccountDefaults:accountID:
newDeviceDidSignIntoiMessage
newSetupInfoAvailable
newSyncTaskForType:
newestChatWithGroupID:onService:
newestChatWithOriginalGroupID:onService:
newfilteredArrayRemovingCKRecordDupes:
newfilteredArrayRemovingCKRecordIDDupes:
nextBatch
nextObject
nickNameContainer
nickNameDecryptionKey
nickNamePublicDatabase
nickNameRecordID
nicknameForHandle:
nicknameForHandleURI:
nicknameForRecordID:
nicknameForRecordID:handle:
nicknameIsUploadingToCK
nicknamePreferencesDidChange
nicknameRequestResponse:encodedNicknameData:
nicknamesForParticipants
nightlySyncTimer
noopHandlerForCommand:
normalizedHandleWithDestinationID:
normalizedPhoneNumberHandleForValue:isoCountryCode:
noteCoreDuetSyncEnded
noteItemFromStorage:
noteLastItemFromStorage:
noteLastItemProcessed
noteRecentMessageForPeople:
noteSuppressedMessageUpdate:
noticeDispatcher
noticeEventHistory
noticeFanoutThreshold
noticesForChatGUID:
notification
notificationCenter
notificationCenterDidDisappear
notificationCenterWillAppear
notificationContext
notificationFromRemoteNotificationDictionary:
notificationIDSTokenURI
notificationType
notifyClientsNewSetupInfoAvailable
notifyDidSendMessageID:
notifyDidSendMessageID:account:shouldNotify:
notifyDidSendMessageID:shouldNotify:
null
numberOfMatchesInString:options:range:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
object
objectAfterChanges
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKey:inDomain:
objectForKeyedSubscript:
objectsAtIndexes:
oneTimeCodesDidChange:
openSensitiveURL:withOptions:
openURL:configuration:completionHandler:
operationID
orPredicateWithSubpredicates:
originalGUID
originalMessageGUID
originalMessageGuid
originalTextRangesByPartIndex
oscarChat
otcUtilities
otherHandle
overrideNetworkAvailability
overrideNumberOfChatsToFetch
overrideNumberOfChatsToWrite
overrideStorageControllerWithDatabaseFromPath:
pTaskStore
paddingForMessageOfSize:
pagedHistoryQuery:chatID:services:numberOfMessagesBefore:numberOfMessagesAfter:finishedWithResult:hasMessagesBefore:hasMessagesAfter:
parentChatID
parentalControls
partKeyForAttachmentGUID:
participantChangeProtobufForCompressedData:
participantChangeThreshold
participantChangeType
participantHandles
participants
password
passwordUpdatedAccount:
passwordUpdatedWithAccount:
path
pathExtension
pathForResource:ofType:
payloadData
pendingACRequestComplete
pendingNicknameUpdates
pendingNicknameUpdatesKVStore
pendingNicknamesOrHandledNicknamesDidChange
pendingPersonalNickname
pendingReadReceiptFromStorageCount
pendingVCRequestComplete
perRecordCompletionBlock
perTransferProgress
performAdditionalStorageRequiredCheck
performChanges:completionHandler:
performInitialHousekeeping
performInitialSyncOnFirstConnectionOfImagentIfNeeded
performInitialUpdateIfNeeded
performOneTimeAccountUpgradeCheckIfNeeded
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
peristencePath
permanentHighQualityLocalPath
permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:completionHandler:
permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:queryID:
permanentlyDeletedMessagesInChatsWithDeletedChatGUIDs:
permanentlyDeletedMessagesInChatsWithDeletedChatGUIDs:queryID:
permanentlyDeletedRecoverableMessagesForChatsWithGUIDs:deletedChatGUIDs:
persistData:forKey:error:
persistToken:forKey:
persistedChatCount
persistenceQueue
persistentID
persistentProperties
persistentProperty:changedTo:from:
personCentricGroupedChatsArrayWithMaximumNumberOfChats:skipsLastMessageLoading:usingChats:useCachedChatGroups:includingPinnedChatIdentifiers:
personCentricGroupedChatsCache
personCentricIDForChatWithGUID:chatIdentifier:chatStyle:groupID:displayName:participantIDs:
personalNickname
photoLibraryDidChange:
photoShareURLFromPluginBundleID:contentString:payload:
pictureKeyForBuddy:
pinCodeAlertCompleted:deviceName:deviceType:phoneNumber:responseFromDevice:wasCancelled:
pinningIdentifier
plainBody
playMessageSentSoundIfNeeded:
playSendSoundForMessageGUID:callerOrigin:
pluginSessionGUID
popReadReceiptForMissingGUID:
populateCacheWithAvailbailityVerificationTokensForHandleID:
populateIMGroupActionItem:withProtobufData:
populateIMGroupTitleChangeItem:withProtobufData:
populateIMLocationShareStatusChangeItem:withProtobufData:
populateIMMessageActionItem:withProtobufData:
populateIMMessageItemWithProtobufFields:withProtobufData:
populateIMMessageItemWithProtobufFields:withProtobufDataP2:
populateIMMessageItemWithProtobufFields:withProtobufDataP3:
populateIMParticipantChangeItem:withProtobufData:
populateLocalURLsForTransfer:fromCKRecord:
postAccountCapabilities
postCoreAutomationNotificationFinishedPeriodicSyncNotificationWithStartTime:chatsDidsync:messagesDidSync:attachmentsDidSync:recoverableMessagesDidSync:
postCoreAutomationNotificationFinishedPurgingAttachments:withErrorString:
postCoreAutomationNotificationIncomingMessageProcessedWithDuration:
postCoreAutomationNotificationWithDictionary:withVerboseLogging:
postCountChanges
postHubbleDownloadFailedIfNeededForTransfer:error:
postHubbleDownloadFinishedIfNeededForTransfer:
postMessage:category:
postNotificationName:object:
postNotificationName:object:userInfo:
postSharePlayNotificationForChatGUID:faceTimeConversationUUID:handleIdentifier:localizedApplicationName:
postSyncStateToCloudKit:
postSyncStateToRTC:category:reportDictionary:
postUrgentNotificationsForMessageGUIDs:
powerLogConversationType
predicateWithFormat:
presentApprovalSheetWithRequestIdentifier:completion:
previouslyBlackholedChatLoadedWithChatIdentifier:chats:
previouslyBlackholedChatLoadedWithHandleIDs:chat:
primaryAccountHasiCloudBackupEnabledWithCompletion:
principalClass
printCachedRampState
printGreeting
privateCloudDatabase
privateWorkQueue
processIdentifier
processInfo
processMessageForSending:toChat:style:allowWatchdog:account:completionBlock:
processMessageForSending:toChat:style:allowWatchdog:completionBlock:
processMessageItemForENURL:withCompletionHandler:
processMessageUsingCKRecord:
processMessageUsingCKRecord:updatedLastMessageCount:
processMessages:inChat:fromIDSID:
processName
processNetworkDataAvailabilityChange:
productBuildVersion
profileID
profileValidationStatus
pronunciationHint
properties
property:changedTo:from:
property:ofBuddy:
protobufForCompressedData:
protobufForCompressedDataP2:
protobufForCompressedDataP3:
protobufForUpdateT1:
protobufForUpdateT2:
proxyAccount
proxyHost
proxyPassword
proxyPort
proxyType
publicCloudDatabase
punctuationCharacterSet
purgeAttachments:
purgeAttachmentsForChatGUID:
purgeMemoryCaches
purgeableAttachmentSize
purgedAttachmentsCountForChatsWithChatIdentifiers:services:
purgedAttachmentsForChat:services:limit:
pushConnection
qosClassWhileServicingRequestsResponse:identifier:
qualityOfService
queryCurrentStateWithError:
queryItems
queue
queueChatToSendNicknamePostUploadIfNeeded:
queueForDelegate:
quickSwitchIDSService
rampManager
rangeOfString:
rangeValue
rangesFromSerializedString:
rateLimiter
reIdentify
readAliasesFromDefaults
readMessageStream
readServerBagBoolForKey:defaultValue:
rebuildLastFailedMessageDate
rebuildUnreadMessageCount
receiveFileTransfer:topic:path:requestURLString:ownerID:signature:decryptionKey:fileSize:progressBlock:completionBlock:
receiveFileTransfer:transferGUID:topic:path:requestURLString:ownerID:signature:decryptionKey:fileSize:generatePreview:balloonBundleID:isFromMe:progressBlock:completionBlock:
receiveHighlightEvent:fromSender:guid:date:
receivedBlackholeError
receivedIncomingLocationSharePacket:
receivedUrgentRequestForMessages:
receiverIsCandidateForHawking:
receiverIsCandidateForJunk:forAccount:
recentMessageIDs
recordChangedBlock
recordID
recordIDToTransferMap
recordIDUsingName:zoneID:
recordIDUsingSalt:zoneID:guid:
recordIDWithZoneID:salt:
recordIDs
recordMetricIsCloudKitEnabled
recordName
recordNameForMessageWithGUID:usingSalt:
recordNameForRecordChangeTag:ckRecordID:salt:guid:
recordNameUsingSalt:guid:
recordStore
recordType
recordZoneChangeTokensUpdatedBlock
recordZoneFetchCompletionBlock
recordZoneID
recordZoneIDs
recordZoneIDsWithPendingArchivedRecords
recordZoneManager
recordsRead
recordsToSave
recordsWriteFailed
recordsWritten
recoverChatsForCommandDictionary:
recoverChatsFromJunkContainingMessageWithGUID:
recoverMessageRecordsForChatRecordsWithGUIDs:
recoverMessagesWithChatGUIDs:
recoverMessagesWithChatGUIDs:queryID:
recoverParticipantsIfNeeded
recoverableGUIDFromMessageGUID:chatGUID:partIndex:
recoverableMessageRecordZone
recoverableMessageRecordZoneID
recoverableMessageSyncController
recoverableMessagesMetadata
recoverableMessagesMetadataPendingCloudKitDeleteWithLimit:
recoverableMessagesMetadataPendingCloudKitSaveWithLimit:
recovered
recoveredMessagesFromRecentlyDeletedForChatsWithGUIDs:
recoveredMessagesWithQueryID:
reflectMarkUnreadToPeerDevicesForMessageGUID:
reflectRecoverChatToPeerDevicesForMessageGUID:
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
refreshRegistration
refreshRegistrationForAccount:
refreshServiceCapabilities
refreshUIIfApplicableWithBatchCount:
refreshUIWhileSyncing
refreshWithDBSyncStatistics
regenerateTransfersForMessage:inChat:addingAssetWithUUID:
regionID
registerAccount:
registerAndAcceptMomentShareForMessage:inChat:resetAssetTransfers:
registerChangeObserver:
registerChat:groupID:style:
registerChat:style:
registerChat:style:displayName:groupID:handleInfo:
registerChat:style:displayName:groupID:handleInfo:account:
registerChat:style:displayName:groupID:lastAddressedHandle:handleInfo:account:isBlackholed:
registerChat:style:displayName:groupID:lastAddressedHandle:lastAddressedSIMID:handleInfo:account:isBlackholed:
registerChat:style:handleInfo:
registerGUID:forNewOutgoingTransferWithLocalURL:
registerMessagesGroupUUIDForConversationUUID:
registerSharedProvider:
registerTransfersWithGUIDs:forMessageGUID:
registerWithCacheDelete
registerWithCompletionHandler:
registeredURIs
registration
registrationAlertInfo
registrationError
registrationFailedForAccount:needsDeletion:
registrationStatus
regularExpressionWithPattern:options:error:
relay:sendCancel:toPerson:
relay:sendCancel:toPerson:account:
relay:sendInitateRequest:toPerson:
relay:sendInitateRequest:toPerson:account:
relay:sendUpdate:toPerson:
relay:sendUpdate:toPerson:account:
releaseSession
reloadTimeInterval
reloadTimer
remapMessageError:toError:forChat:completion:
remoteHost
remoteMembers
remoteObjectProxy
removeAccount:
removeAliases:
removeAliases:account:
removeAllObjects
removeAttachment:fromMessageWithGUID:
removeAttribute:range:
removeBuildObjectsFromDict:
removeChat:
removeChat:style:
removeChatID:identifier:style:
removeChatID:identifier:style:account:
removeFinishedTransfers
removeFromBackUpAllowed
removeIMDHandleFromRegistry:
removeItem:fromChat:
removeItemAtPath:error:
removeItemAtURL:error:
removeLastObject
removeMessage:fromChat:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectFromAnalyticSyncDatesDictionaryForKey:
removeObjectIdenticalTo:
removeObjectsForKeys:
removeObjectsInArray:
removeObserver:name:object:
removeParticipant:
removeParticipants:
removePathFromiCloudBackups:
removePersonInfo:chatID:identifier:style:
removePersonInfo:chatID:identifier:style:account:
removePersonInfoFromiMessageChat:chatID:identifier:style:
removePersonInfoFromiMessageChat:chatID:identifier:style:account:
removeRegistrationDelegate:
removeTarget:
removeTimingForKey:
removeTransferForGUID:
removedFromBackup
renameGroup:to:account:
repairDuplicateChatsIfNeeded
repairSharedFocusStatusFollowingFailedValidationWithHandleID:fromHandleID:completion:
replaceMessageAcknowledgmentsWithNewMessageAcknowledgment:associatedMessageGUID:sender:
replaceObjectAtIndex:withObject:
replacedNicknameForHandleIDInHandledMapIfNeeded:nickname:
replayControllerNeedsSync
replayControllerWantsToSync
replayMessage:
replayMessages
replayMessagesWithCompletion:
replyDelegate
replyProxy
replyToGUID
reportAvailableSpaceToBeDeleted:urgency:
reportCompletionForSyncType:isCoreDuetSync:onAttempt:wasSuccessful:duration:
reportErrorForSyncType:syncStep:response:error:
reportMOCDebuggingErrorWithString:internalOnly:
reportMOCDebuggingErrorWithString:internalOnly:initialSync:
reportMOCDebuggingErrorWithString:internalOnly:initialSync:sendToHandle:
reportMOCDebuggingErrorWithString:internalOnly:initialSync:sendToHandle:reasonString:
reportMessageDictionaryForMessages:withLastAddressedHandle:maxMessageLength:isAutoReport:withChat:maxMessagesToReport:totalMessageCount:onlyReportForiMessageService:notifyInternalSecurity:
reportMetricToCK:withDict:
reportUnknownToIDS:messageID:isBlackholed:isiMessageJunk:messageServerTimestamp:toURI:
reportZoneCreation:
requestBuddyPicturesAndPropertiesForAccount:
requestExpireStateForMessageGuid:completionBlock:
requestExpireStateWithCompletion:
requestGroupPhotoIfNecessary:incomingGroupPhotoCreationTime:toIdentifier:fromIdentifier:messageIsFromStorage:
requestGroups
requestGroupsAccount:
requestNetworkDataAvailability
requestOneTimeCodeStatus
requestPasswordForUsername:service:badPassword:showForgotPassword:shouldRememberPassword:outRequestID:completionBlock:
requestPendingACInvites
requestPendingMessages
requestPendingVCInvites
requestProperty:ofPerson:
requestProperty:ofPerson:account:
requestQOSClassWhileServicingRequestsWithID:
requestRoutingForMessageGuid:inChat:error:completionBlock:
requestRoutingWithCompletion:
requestSetupWithClientID:capabilities:context:reply:
requestSetupXPCObjectWithClientID:capabilities:context:reply:
requestSubscriptionTo:
requestSubscriptionTo:account:
requestVCWithPerson:properties:conference:
requestVCWithPerson:properties:conference:account:
requestWatchdogForMessageGuid:completionBlock:
requestWatchdogWithCompletion:
requiresDataConnectionActivation
reregister
resetAttachmentWatermark
resetCKSyncState
resetCallerIDForIDSAccount:
resetLastSyncDate
resetParticipants:
resetRecordCounts
resetSyncStateForMessage:toState:
resetSyncStateForRecord:toState:
resetTransfer:andPostReason:
resetTransferAndPostError:error:
resolveChatConflictUsingCKRecord:localGUID:
resolveInconsistentGUIDForChatRecordWithGUID:newGUID:completionHandler:
resolveUnformattedRepresentationsForHandles:onService:message:completionBlock:
respondToAskForTimeRequestWithIdentifier:answer:error:
respondToVCInvitationWithPerson:properties:conference:
respondToVCInvitationWithPerson:properties:conference:account:
respondsToSelector:
response
responseForError:attempt:retryInterval:
restoreDefaultStoreControllerInstance
restoreFailuresDirectory
resultsLimit
resume
resumeBuddyUpdates
resumeBuddyUpdatesAccount:
retain
retainCount
retractNotificationsForReadMessagesWithGUIDs:
retractPostedNotificationsForMessageGUIDs:
retractPostedNotificationsForMessagesMatchingChatGUIDs:
retractedPartIndexes
retrieveLocalFileURLForFileTransferWithGUID:options:
retrieveLocalFileURLForFileTransferWithGUIDs:options:
retrieveProxyAccountSettings
retrieveProxySettings
retrieveStickerWithProperties:completionBlock:
retryGroupPhotoUpload:toChatID:identifier:style:account:
retryTimer
retryToParticipant
reuploadProfileIfNeeded
reverseObjectEnumerator
richLinkURLs
roomName
roomNameIsProbablyAutomaticallyGenerated
rowID
saltZoneCreatedOverride
sandboxToken
save
save:
saveAttachmentsCKOperationUsingRecordsToSave:operationGroupName:activity:
saveAttachmentsForTransfer:chatGUID:storeAtExternalLocation:completion:
saveChatsCKOperationUsingRecordsToSave:activity:
saveMessagesCKOperationUsingRecordsToSave:operationGroupName:activity:
saveNicknameForRecordID:handleID:userNickname:
saveNotice:
saveNoticeEventHistory
saveSettings
saveSubscription:completionHandler:
saveT1UpdatesOperationFactory:token:batchSize:recordNameToRowIDMap:activity:
saveT2UpdatesOperationFactory:token:batchSize:recordNameToRowIDMap:activity:
saveVerifiedAccount:withCompletionHandler:
scanUnsignedLongLong:
scannerWithString:
scheduleInitialProcessingCheck
scheduleSyncTaskForServices:
scheduleTransactionLogTask:
scheduledTimerWithTimeInterval:repeats:block:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
screenLocked
screenSaverDidStart
screenSaverDidStop
screenTimeAskReponseHandler
screenTimeEnablementChanged:
screenUnlocked
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidFinishThrottle:
searchableIndexDidThrottle:
securityLevelForAccount:
self
semanticType
sendAVMessageToPerson:sessionID:type:userInfo:conference:
sendAVMessageToPerson:sessionID:type:userInfo:conference:account:
sendBalloonPayload:attachments:withMessageGUID:bundleID:
sendClearNotice:toHandles:
sendClearNotice:toHandles:reply:
sendCloudKitZoneFetchRequestToNoteFeatureIsOn
sendCommand:withProperties:toPerson:
sendCommand:withProperties:toPerson:account:
sendCommand:withProperties:toPerson:account:toChatID:identifier:style:
sendCommand:withProperties:toPerson:toChatID:identifier:style:
sendCounterProposalToPerson:properties:conference:
sendCounterProposalToPerson:properties:conference:account:
sendData:toDestinations:priority:options:identifier:error:
sendDeleteCommand:forChatGUID:
sendDeliveredQuietlyReceiptForMessage:forIncomingMessageFromIDSID:toChatGuid:identifier:style:withWillSendToDestinationsHandler:
sendDeliveryReceiptForMessageID:toID:deliveryContext:needsDeliveryReceipt:callerID:account:
sendEditedMessage:previousMessage:partIndex:editType:toChatIdentifier:style:account:backwardCompatabilityText:
sendEvent:
sendGroupPhotoUpdate:toChatID:identifier:style:account:
sendJunkReportMessage:
sendJunkReportMessage:account:
sendLocationSharingInfo:toID:completionBlock:
sendLogDumpMessageAtFilePath:toRecipient:shouldDeleteFile:withCompletion:
sendMappingPacket:toHandle:account:
sendMessage:toChat:style:
sendMessage:toChat:style:account:
sendMessage:toChatID:identifier:style:
sendMessage:toChatID:identifier:style:account:
sendMessage:toDestinations:priority:options:identifier:error:
sendNicknameInfoToChatID:
sendNicknamePreferencesDidChange
sendNicknameUpdatesToPeerDevices:toDestinations:
sendNotice:toHandles:fromHandle:
sendNotice:toHandles:fromHandle:reply:
sendNotificationMessageToUniqueID:withCommand:
sendNotifyRecipientCommandForIDs:style:onServices:message:
sendNotifyRecipientCommandForMessage:toChatGuid:identifier:style:
sendPendingNicknameUpdatesDidChange
sendPersonalNicknameRecordIDAndVersionRequestedByDevice:
sendPersonalNicknameRecordIDAndVersionToAllPeers
sendPersonalNicknameToChat:
sendPlayedReceiptForMessage:toChatID:identifier:style:
sendPlayedReceiptForMessage:toChatID:identifier:style:account:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendReadReceiptForMessage:toChatID:identifier:style:
sendReadReceiptForMessage:toChatID:identifier:style:account:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendRestoreFailuresLogDumps
sendRestoreFailuresLogDumpsIfNeeded
sendSavedReceiptForMessage:toChatID:identifier:style:
sendSavedReceiptForMessage:toChatID:identifier:style:account:
sendStickerAtPath:toChatID:forNBubbleFromTheBottom:atX:atY:scale:balloonWidth:
sendSyndicationAction:toChatsWithIdentifiers:
sendVCUpdate:toPerson:conference:
sendVCUpdate:toPerson:conference:account:
sender
senderHandle
senderLoginIDs
serializedError_im
serializedRepresentation
server
serverAllowsAnalyticDetailsSubmission
serverAllowsAnalyticSubmission
serverAllowsMetricSubmission
serverBag
serverChangeToken
serverDisconnectedForConversationManager:
serverHost
serverPort
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:chat:style:messagesUpdated:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceChatsIgnoreLoginStatus
serviceDefaultsForSetup
serviceDisconnectReason
serviceDomain
serviceForClientIdentifier:
serviceIgnoresNetworkConnectivity
serviceLoginStatus
serviceLoginStatusMessage
serviceName
serviceNeedsLogin
serviceNeedsPassword
serviceProperties
serviceProtocolVersion
serviceRequiresHost
serviceRequiresSingleAccount
serviceSession
serviceSessionDidLoginWithAccount:
serviceSessionDidLogoutWithAccount:
serviceSessionDidLogoutWithMessage:reason:properties:account:
serviceShouldBeAlwaysLoggedIn
serviceSupportsAuthorization
serviceSupportsOneSessionForAllAccounts
serviceSupportsPresence
serviceSupportsRegistration
serviceWantsNullHostReachability
serviceWithName:
sessionClass
sessionDidBecomeActive
sessionForAccount:
sessionWillBecomeInactiveWithAccount:
setAccount:
setAccountController:
setAccountID:
setAccountStatus:
setActionType:
setActiveHubbleRequestedTransfers:
setActiveTransfers:
setAddedObserverForUnexpectedlyLoggedOut:
setAllowList:
setAllowList:account:
setAllowsCellularAccess:
setAllowsWritingToDisk:
setAlreadyCapturedErrorWithAutoBugCapture:
setAnalyticSyncDatesDictionaryObject:forKey:shouldOverrideIfExists:
setArchivedRecordSyncToken:
setAskToBuyResponseHandler:
setAssetDownloadInProgress:
setAssociatedMessageGUID:
setAssociatedMessageGuid:
setAssociatedMessageRange:
setAssociatedMessageRangeLength:
setAssociatedMessageRangeLocation:
setAssociatedMessageType:
setAtomic:
setAttributes:ofItemAtPath:error:
setAttributionInfo:
setAutoDonationBehavior:lastModificationDate:
setAutomaticDNDStatus:
setAutomaticallyRetryNetworkFailures:
setAutomationCompletionBlock:
setAvMode:
setAvailabilitySubscriptionService:
setAvatar:
setBadgeCount:withCompletionHandler:
setBadgeString:withCompletionHandler:
setBalloonBundleID:
setBaloonBundleId:
setBatchProcessingBlock:
setBatchSize:
setBizIntent:
setBlockIdleStatus:
setBlockIdleStatus:account:
setBlockList:
setBlockList:account:
setBlockingMode:
setBlockingMode:account:
setBody:
setBodyData:
setBool:forDomain:forKey:
setBroadcastedSyncStateStateToFinished
setBroadcastedSyncStateStateToStarting
setBroadcastedSyncStateToDeleting
setBroadcastedSyncStateToDownloading
setBroadcastedSyncStateToStartingInitialSync
setBroadcastedSyncStateToStartingPeriodicSync
setBroadcastedSyncStateToUploading
setBroadcasterOverride:
setByAddingObjectsFromSet:
setCKOperationFactory:
setCMMAssetOffset:
setCMMState:
setCMMStateToRegisteredAndAssetOffsetTo:
setCachedAliasToCNIDMap:
setCachedSalt:
setChangeType:
setChatGUIDToCountMap:
setChatIdentifier:
setChatRegistry:
setChatStore:
setChatsToSendNicknameInfoTo:
setCkChatSyncControllerNeedsSync:
setCkQueue:
setClearRateLimiter:
setCloudKitEnabled:
setCloudKitRecordChangeTag:
setCloudKitRecordID:
setCloudKitServerChangeTokenBlob:
setCloudKitSyncState:
setCloudKitSyncingEnabled:
setCmmAssetOffset:
setCmmState:
setCodeInvalidationTimer:
setCollaborationId:
setCommSafetySensitive:
setCompletionBlock:
setCompletionBlocksForAssetFetchOperations:
setConfiguration:
setConfigurationsByRecordZoneID:
setConsumedSessionPayloads:
setContactsAvatarRecipeData:
setContext:
setContextStamp:
setCount:
setCreateEngramGroupOnMessageSend:
setCreatedChatZone:
setCurrentContext:
setCurrentlyExecutingSyncTask:
setDataBaseManager:
setDatabaseManager:
setDate:
setDateFormat:
setDateViewed:
setDefaultConfiguration:
setDelegate:
setDeleteContext:
setDeletedZones:
setDestinationCallerID:
setDeviceConditionsToCheck:
setDeviceLowOnDiskSpace:
setDeviceSupport:
setDidKeyRollPendingCheck:
setDirection:
setDisableMetadataCorrections:
setDisablingDevices:
setDiscretionaryNetworkBehavior:
setDontAllowRAW:
setDownloadAssetsForTransferGUIDs:
setDtService:
setEligibleForTruthZone:
setEnabled:forDataclass:
setEnabledTopics:
setEncounteredIncompatibleMessage:
setEngramID:
setErrorCode:
setErrorFetchingExitDate:
setErrorToAccountNeedsRepair
setErrorToKeyRollingError
setEtag:
setExitDate:
setExitRecordDate:
setExitRecordID:
setExportedInterface:
setExportedObject:
setExpressiveSendId:
setExpressiveSendStyleID:
setFeatureEnabled:
setFetchAllChanges:
setFetchArchivedRecordsCompletionBlock:
setFetchLimit:
setFetchNewestChangesFirst:
setFetchPropertySets:
setFetchRecordZoneChangesCompletionBlock:
setFetchRecordZonesCompletionBlock:
setFetchType:
setFetchUserQuotaCompletionBlock:
setFetchedChatsDuringLastSync:
setFetchedExitDateOnLaunch:
setFileTransferGUIDs:
setFilename:
setFirstName:
setFlags:
setGelatoService:
setGroup:
setGroupActionType:
setGroupID:
setGroupTitle:
setGuid:
setGuidString:
setGuidToTransferMap:
setHandle:
setHandleAllowList:
setHandleDenyList:
setHandleSharingKVStore:
setHandledNicknames:
setHandledNicknamesKVStore:
setHasDumpedLogsForNoExisitingGroup:
setHasHadSuccessfulQuery:
setHasReceivedReadReceipt:
setHaveDeferredUpdateRequest:
setHeldDeletionContext:
setHideAttachment:
setHighlightChangeEvent:
setHighlightChangeEventType:
setHistory:forMessagePart:
setHistoryToken:
setID:
setIdToHandlesMap:
setIdsDestination:
setIdsTransportLogNeedsSync:
setImDefaults:
setImpl:
setInMemorySyncStatistics:
setInitialSyncAttempts:
setInteger:forKey:
setInternalQueue:
setInterruptionHandler:
setInvalidationHandler:
setIsBeingRetried:
setIsBlackholed:
setIsDoingDeleteRecoverySync:
setIsFiltered:
setIsIncoming:
setIsManaged:
setIsSticker:
setIsSyncing:
setIsUpdatingAttachmentFileSizes:
setIsUsingCentralizedModel:
setKnownRecordIDsFromList:
setKnownToServer:
setKvStore:
setLastAddressedLocalHandle:
setLastAddressedSIMID:
setLastFailedMessageDate:
setLastLogDumpDate:
setLastMeContactStoreSync:
setLastMessageStorageTimerInterval:
setLastMessageTimeStampOnLoad:
setLastName:
setLastReadMessageTimeStamp:
setLastRestoreFailureLogDumpDate:
setLastSentMessageDate:
setLastSyncDate:
setLastTUConversationCreatedDate:
setLatestActiveDate:
setLatestReadReceipt:
setLatestSyncToken:
setListenerCapabilities:
setLoading:
setLocale:
setLockRecord:
setLockdownManager:
setLoginID:
setLoginStatus:message:
setLoginStatus:message:reason:properties:
setLongRunningSyncTimer:
setManaged:
setMeCardUpdated:
setMessageActionType:
setMessageBodyData:
setMessagePTaskStore:
setMessageStore:
setMessageSubject:
setMessageSummaryInfo:
setMessagesProcessedComingBackFromStorage:
setMessagesReceivedDuringStorage:
setMetadata:
setMmcsEncryptionSupport:
setMockAccountController:
setModificationStamp:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setMsgid:
setMutableProperties:
setName:
setNeedToLoadMapsInfoFromDisk:
setNetworkDataAvailable:
setNewPersonalNickname:
setNicknameIsUploadingToCK:
setNightlySyncTimer:
setNoticeEventHistory:
setNotificationCenter:
setNotificationIDSTokenURI:
setNumMessagesSent:
setObject:forKey:
setObject:forKey:inDomain:
setObject:forKeyedSubscript:
setOriginalGUID:
setOriginalGroupID:
setOriginalMessageGUID:
setOriginalMessageGuid:
setOriginalTextRangesByPartIndex:
setOscarChat:
setOtcUtilities:
setOtherCountryCode:
setOtherUnformattedID:
setPTaskStore:
setPadding:
setParentChatID:
setParticipantChangeType:
setParticipants:
setPendingENGroupParticipantUpdate:
setPendingNicknameUpdates:
setPendingNicknameUpdatesKVStore:
setPendingReadReceiptFromStorageCount:
setPerRecordCompletionBlock:
setPerRecordProgressBlock:
setPerRecordSaveBlock:
setPerTransferProgress:
setPersistenceQueue:
setPersonCentricGroupedChatsCache:
setPersonCentricID:
setPersonalNickname:
setPersonalNickname:completionBlock:
setPersonalNickname:oldRecordID:completionBlock:
setPhotoLibrary:
setPredicate:
setPreviousServerChangeToken:
setPrivateWorkQueue:
setProcessingTimer:
setProperties:
setProperties:ofParticipant:inChat:style:
setProperties:ofParticipant:inChatID:identifier:style:
setProperties:ofParticipant:inChatID:identifier:style:account:
setProtobufAction:forIncomingRequestsOfType:
setPushConnection:
setQualityOfService:
setQuantity:
setQuickSwitchIDSService:
setRecentMessageIDs:
setRecordChangedBlock:
setRecordFetchedBlock:
setRecordID:
setRecordIDToTransferMap:
setRecordType:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setRecordZoneManager:
setRecordsWriteFailed:
setRecordsWritten:
setRecoverableErrorForTransfer:error:
setRecovered:
setRegistrationStatus:error:alertInfo:
setRemoteObjectInterface:
setRemovedFromBackup:
setReplayControllerNeedsSync:
setReplyDelegate:
setRepresentedApplicationBundle:
setResultHandlerQueue:
setResultsLimit:
setRetryTimer:
setRetryToParticipant:
setRoomName:
setSaltZoneCreatedOverride:
setSavePolicy:
setSender:
setSenderHandle:
setServerBag:
setServerChangeToken:
setService:
setServiceDisconnectReason:
setServiceLoginStatus:
setServiceLoginStatusMessage:
setServiceProperties:
setSession:
setShareDirection:
setShareURLsToContexts:
setSharedDaemon:
setSharedDefaultsInstance:
setShouldReloadConversations:
setShouldSendMeCard:
setShowingFailure:
setSortDescriptors:
setSortID:
setSpamExtensionCutoffTime:
setSr:
setStartingEnabledSettingChange:
setStartingInitialSyncSetByCloudKitHooks:
setStartingInitialSyncWithRecordType:
setStartingPeriodicSyncSetByCloudKitHooks:
setStartingPeriodicSyncWithRecordType:
setState:
setStateCaptureAssistant:
setStatus:
setStickerPackGUIDToPackMap:
setStickerUserInfo:
setStorageController:
setStorageTimer:
setStorageTimerInterval:
setStore:
setStyle:
setSubService:
setSubServiceName:
setSubject:
setSubscriptionValidationTokenByHandleIDCache:
setSuppressDatabaseUpdates:
setSwiftImplementation:
setSwyAppName:
setSyncControllerRecordType:
setSyncControllerSyncState:
setSyncControllerSyncState:withRecordType:
setSyncControllerSyncType:
setSyncStartDate:
setSyncTaskByServiceName:
setSyncTaskCompletionBlock:
setSyncTaskFactory:
setSyncToken:
setSyncTokenStore:
setSyncedSyndicationRanges:
setSyncing:
setSyncingEnabled:
setSyncingFinished
setSyncingPaused:
setSyndicationIdentifierOnMomentSharedAsset:
setSyndicationRanges:
setTaskFlag:
setTaskGroupedByServiceName:
setTelemetryReporter:
setThreadGuid:
setThreadIdentifier:
setThreadPart:
setTime:
setTimeDelivered:
setTimeExpressiveSendPlayed:
setTimeExpressiveSentPlayed:
setTimePlayed:
setTimeRead:
setTitle:
setTotalBytes:
setTransferTimer:
setTransferredFilename:
setTransferringTransfers:
setType:
setUnexpectedlyLoggedOut:
setUnformattedID:
setUseDeprecatedApi:
setUseZoneWidePCS:
setUserInfo:
setUsesNotificationCenter:
setVCCapabilities:
setValidCodes:
setValue:
setValue:forDomain:forKey:
setValue:forKey:
setValue:ofPersistentProperty:
setValue:ofProperty:
setValue:ofProperty:ofPerson:
setValue:ofProperty:ofPerson:account:
setVariant:
setVersion:
setVisitedChats:
setVocabulary:
setVocabulary:ofType:
setWantsNotificationResponsesDelivered
setWasDetectedAsSWYSpam:
setWasDisabledAutomatically:
setWasReportedAsJunk:
setWatchesSystemLockState:
setWithArray:
setWithObject:
setWriteMsgIDToRowIDMap:
set_broadcasterForTesting:
set_lock:
set_targets:
setiCloudBackupsDisabled:
setupComplete
setupComplete:info:
shareDirection
shareStatus
shareURL
shareURLsToContexts
sharedAccountController
sharedController
sharedDaemon
sharedDatabase
sharedDefaultsInstance
sharedFeatureFlags
sharedIdentifier
sharedInstance
sharedInstanceForBagType:
sharedManager
sharedMomentSharePhotoLibrary
sharedProvider
sharedToneManager
sharedVocabulary
shouldCheckForSpamWithExtensionInChat:fromIdentifier:toIdentifier:
shouldCollectDailyLogDump
shouldCollectDailyLogDumpForRestoreFailures
shouldCreateActiveAccounts
shouldDisplayAttachmentDownloadFailure
shouldDisplayRemoteDecryptionFailure
shouldDownloadAssetsOfSize:refreshCachedValue:
shouldFilterUnreadMessageCount
shouldForceAccountsActive
shouldForceAccountsConnected
shouldImitateGroupChatUsingChatRooms
shouldInferRecoverableDeleteForCommandDictionary:
shouldKickOffWriteForSyncType:
shouldLogDumpOnCloudKitError
shouldMarkAllIncompatibleMessagesForDeletion
shouldPublishNowPlaying
shouldReloadConversations
shouldRepairAccountWithAccountStatus:securityLevel:
shouldReportToAnalytics
shouldReportToRTC
shouldSendMeCard
shouldSendNotice:
shouldSendTypingIndicator
shouldSendWithNotice:
shouldStoreMessage
shouldUseDevContainer
shouldUseDevNickNameContainer
showForgotPasswordNotificationForAccount:
showInvalidCertNotificationForAccount:
showPinningStatusTextForBundleID:
showingFailure
signedIntoiCloudAndiMessageAndiCloudAccountMatchesiMessageAccount
silenceChat:untilDate:
simSubscriptionsDidChange
simplifiedError:
simulateMessageReceive:serviceName:groupID:handles:sender:
simulateMessageReceive:serviceName:groupID:handles:sender:date:associatedMessageType:associatedMessageGuid:
simulateOneTimeCodeArriving:
size
sizeOfAssetForRecord:
sizePreview:constraints:completionBlock:blockUntilReply:
sizePreviewsForTransferGUIDs:
smsHandshakeState
sortDescriptorWithKey:ascending:
sortID
sortPersonCentricChatGroups:
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
source
spamExtensionCutoffTime
spokenPhrase
spotlightItemRecorder
spotlightItemRecorderClass
stagedActivitySession
standardUserDefaults
start
startDate
startFinalizingTransfer:
startListening
startRecordingReplayDatabase
startSyncTask:
startTimingForKey:
startTrackingCode:
startTransfer:
startWatchingBuddy:
startWatchingBuddy:account:
startingEnabledSettingChange
startingInitialSyncSetByCloudKitHooks
startingPeriodicSyncSetByCloudKitHooks
state
stateCaptureAssistant
stateDictionaryForDiagnosticsRequest
status
stepAfter:
stickerPackGUIDToPackMap
stickerPackRemoved:
stickerPackUpdated:
stopListening
stopRecordingMessagesReplayDatabase
stopTimingForKey:
stopWatchingBuddy:
stopWatchingBuddy:account:
storageController
storageTimer
storageTimerInterval
store
storeAndBroadcastChatChanges
storeAttachment:associateWithMessageWithGUID:
storeAttachment:associateWithMessageWithGUID:chatGUID:storeAtExternalLocation:
storeChat:
storeDictionary:error:
storeEditedMessage:editedPartIndex:editType:previousMessage:chat:updatedAssociatedMessageItems:
storeItem:forceReplace:
storeItem:inChatGUID:
storeItem:toChat:style:
storeMessage:forceReplace:modifyError:modifyFlags:flagMask:
storeMessage:forceReplace:modifyError:modifyFlags:flagMask:updateMessageCache:calculateUnreadCount:
storeMessage:forceReplace:modifyError:modifyFlags:flagMask:updateMessageCache:calculateUnreadCount:reindexMessage:
storeMessage:type:error:
storePTask:
storeRecoverableMessagePartWithBody:forMessageWithGUID:deleteDate:
storedPersonalNickname
string
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAddingURLEscapes
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExpandingTildeInPath
stringByRemovingCharactersFromSet:
stringByRemovingWhitespace
stringByResolvingAndStandardizingPath
stringByStandardizingPath
stringByTrimmingCharactersInSet:
stringForChatStyle:
stringGUID
stringValue
stringWithFormat:
stringWithString:
stringWithUTF8String:
style
subCategory
subService
subServiceName
subarrayWithRange:
submitCloudKitAnalyticWithDictionary:operationGroupName:completion:
submitCloudKitAnalyticWithOperationGroupName:analyticDictionary:
submitCloudKitMetricWithData:operationGroupName:completion:
submitCloudKitMetricWithOperationGroupName:
subscriptionCreatedOverride
subscriptionID
subscriptionReceivedStatusUpdate:
subscriptionServiceDaemonDisconnected:
subscriptionStateChanged:
subscriptionValidationToken
subscriptionValidationTokenByHandleIDCache
subscriptionValidationTokenForHandle:completion:
subscriptionValidationTokensForHandle:completion:
substringFromIndex:
substringRecordIDForNickname:
substringToIndex:
superclass
supportedServiceNames
supportsDataDetectors
supportsDatabase
supportsDeviceToDeviceEncryption
supportsFaceTime
supportsSimultaneousVoiceAndDataRightNow
surfURLForIMMessageItem:
swiftImplementation
syncAttachmentDeletesToCloudKitWithActivity:completion:
syncAttachmentMetadataFirstSyncWithActivity:deviceConditionsToCheck:completionBlock:
syncAttachmentsWithSyncType:deviceConditionsToCheck:activity:completionBlock:
syncBatchCompleted:
syncChats
syncChatsWithMessageContext:
syncChatsWithType:withActivity:completion:
syncCompleteRecordID
syncController:syncBatchCompleted:
syncControllerRecordType
syncControllerSyncState
syncControllerSyncType
syncDeletedMessagesToCloudKitWithCompletion:
syncDeletesToCloudKit
syncDeletesToCloudKitWithActivity:completion:
syncErrors
syncFailureMetricString:isRecoverable:error:
syncMessages
syncMessagesWithSyncType:deviceConditionsToCheck:activity:completionBlock:
syncPendingDeletionWithCompletion:
syncRemovedRecoverableMessagesToCloudKitWithCompletion:
syncReportDictionary
syncReportDictionaryForAttempt:withSuccess:duration:
syncStartDate
syncState
syncStateDebuggingInfo:
syncStateDidUpdate:
syncStateWillUpdate:
syncTaskByServiceName
syncTaskCompletionBlock
syncTaskType
syncToken
syncTokenStore
syncUserType
syncWithType:withActivity:withCompletion:
synchronize
synchronizeServiceDefaults
syncingEnabled
syncingPaused
syndicatedItemType
syndicationIdentifier
syndicationLibrary
syndicationRanges
syndicationStartDate
syndicationStatus
systemApplicationDidBecomeActive
systemApplicationDidEnterBackground
systemApplicationDidResume
systemApplicationDidResumeForEventsOnly
systemApplicationDidSuspend
systemApplicationDidSuspendForEventsOnly
systemApplicationWillEnterForeground
systemApplicationWillResignActive
systemDidBecomeIdle
systemDidBecomeUnidle
systemDidEnterDataProtectionLock
systemDidEnterMemoryPressure
systemDidFastUserSwitchIn
systemDidFastUserSwitchOut
systemDidFinishMigration
systemDidLeaveDataProtectionLock
systemDidLeaveFirstDataProtectionLock
systemDidLeaveMemoryPressure
systemDidLock
systemDidStartBackup
systemDidStopBackup
systemDidWake
systemProxySettingsFetcher:retrievedAccount:password:
systemProxySettingsFetcher:retrievedHost:port:protocol:
systemRestoreStateDidChange
systemScreenDidPowerDown
systemScreenDidPowerUp
systemWillShutdown
taskFlags
taskGroupedByServiceName
tearDownSessionForChatIdentifier:
tearDownToneNotificationSessionIfNeeded
telemetryReporter
telephonyCountryCodesEligibleForJunkFiltering
terminateForcingIfNeeded:
testOverrideTextValidationDidFail
textMessageWithMessage:embeddedURLs:
threadDictionary
threadGuid
threadIdentifier
threadOriginator
threadPart
thresholdForNoticeType:
time
timeDelivered
timeExpressiveSendPlayed
timeExpressiveSentPlayed
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timePlayed
timeRead
timerWithTimeInterval:repeats:block:
timingComingBackFromStorage
title
toggleiCloudBackupsIfNeeded
tokenForKey:
totalBytes
totalChangeCount
totalTimeForKey:
trackAction:extensionBundleID:isNotification:
trackEvent:
trackEvent:withCount:
trackEvent:withDictionary:
trackEvent:withStatistic:
transactionLogMessageFromDictionaryRepresentation:
transcodeLocalTransferPayloadData:balloonBundleID:completionBlock:
transferForGUID:
transferForGuid:
transferGUIDOfRecord:
transferMetaDataFromRecord:
transferServicesController
transferState
transferTimer
transferredFilename
transferringTransfers
trimmedString
truncatedSortedChatsGroupedByPersonCentricID:count:pinnedChatIdentifiers:
truthContainer
truthDatabase
truthPublicDatabase
tryToAutoCollectLogsWithErrorString:sendLogsTo:
tryToDisableAllDevices
tryToRepairCallerID:forIDSAccount:
type
unEnrollDeviceForSMSRelay:account:
unEnrollDeviceInSMSRelay:
unarchiveChat:
unarchiveNoticeTransmissionEvent:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unblackholeAndLoadChatWithHandleIDs:reply:
unblackholeChat:
uncachedAttachmentCountQuery:chatID:services:finishedWithResult:
unexpectedlyLoggedOut
unformattedID
unionSet:
uniqueID
unload
unloadServiceBundle
unlock
unprefixedURI
unreadCount
unreadCountChanged:
unreadCountForChat:
unreadMessagesCount
unreadMessagesWithHandles:onServices:limit:fallbackGUID:
unreadMessagesWithRoomNames:onServices:limit:fallbackGUID:
unregisterAccount
unregisterAccount:
unregisterChangeObserver:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unvalidateAliases:
unvalidateAliases:account:
updateAccountActivation
updateAccountWithAccountInfo:
updateAttachment:
updateAttachment:chatGUID:storeAtExternalPath:
updateAttachmentFileSizes
updateAttachmentFileSizesWithActivity:
updateAuthorizationCredentials:token:
updateAuthorizationCredentials:token:account:
updateBadgeForLastFailedMessageDateChangeIfNeeded:
updateBadgeForUnreadCountChangeIfNeeded:
updateBalloonPayload:attachments:forMessageGUID:
updateChatGUID:withLastReadTimeStamp:withLastSeenMessageGUID:fromMe:
updateChatUsingCKRecord:
updateChatWithGUID:serverChangeToken:recordID:
updateCloudKitRecordID:
updateCloudKitState
updateCloudKitStateWithDictionary:
updateCloudKitSyncState:
updateConnectedToPowerWifiIntervalIfConnected
updateConnectionMonitorWithLocalSocketAddress:remoteSocketAddress:
updateDisplayName:
updateDisplayName:fromDisplayName:forChatID:identifier:style:
updateDisplayName:sender:
updateDonationStateWithSyndicationAction:
updateEngroupCreationDate:
updateFaceTimeGroupName:
updateFaceTimeGroupPhoto:
updateFileTransfer:
updateGroupID:
updateGroupIDForChat:newGroupID:
updateGroupPhotoGuid:
updateGroupPhotoUploadFailureCount:
updateHandle:sourceMessage:personCentricID:onService:
updateHasHadSuccessfulQuery:
updateIsBlackholed:
updateIsEmergencyChat:
updateIsFiltered:
updateIsRecovered:
updateIsiMessageSpam:
updateLastAddressedHandle:
updateLastAddressedHandle:forceUpdate:
updateLastAddressedSIMID:
updateLastMessageForChat:hintMessage:
updateLastMessageForChat:hintMessage:historyQuery:
updateLastMessageGUID:forLanguageCode:
updateLastReadMessageTimeStampIfNeeded:
updateLastSeenMessageGuidIfNeeded:
updateLatestActiveDestination:ForHandle:incomingType:
updateLegacyTransferGUIDIfNeeded:transfersToSync:
updateLegacyTransferGUIDOnMessageIfNeeded:
updateMeCardHasUpdatedForAllChats
updateMessage:
updateMessage:withIndexesOfDeletedItems:withIndexToRangeMapOfDeletedItems:deleteDate:
updateMessageHandshakeState:
updateMessagesGroupName:onConversation:
updateMessagesRanges:withMessagePartSyndicationRanges:didUpdate:
updateNicknameData:
updateNicknameHandlesForSharing:blocked:
updateNotice:
updateNotificationUnreadCountForChat:
updateNumberOfTimesRespondedToThread
updateOriginalGroupID:
updatePendingNicknameUpdates:handledNicknameUpdates:
updatePersonCentricIDForHandlesInChatWithMessage:fromIdentifier:personCentricID:chat:
updatePersonalNickname:
updatePostedNotificationsForMessageGUIDs:
updateProperties:
updateProperties:chat:style:
updateReceivedBlackholeError:
updateRecordZone
updateRecordZoneID
updateRecoverableMessageSyncState:forMessageRowID:onPartIndex:
updateSMSCategory:subCategory:
updateSMSHandshakeState:
updateSMSSpamExtensionNameChatProperty:
updateSecurityLevelDowngradedIfNeeded:
updateServerChangeToken:
updateShouldForceToSMS:
updateStamp
updateStateForChat:forcePost:
updateStateForChat:forcePost:shouldRebuildFailedMessageDate:
updateStateForChat:forcePost:shouldRebuildFailedMessageDate:setUnreadCountToZero:
updateStateForChat:forcePost:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:
updateStateForChat:fromMessage:toMessage:forcePost:hintMessage:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:setUnreadCountToZero:
updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:
updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:setUnreadCountToZero:
updateStateForChat:hintMessage:shouldRebuildFailedMessageDate:shouldCalculateUnreadCount:
updateSyncController
updateSyncedSyndicationRanges:forGUID:
updateSyndicatedMessageWithMessageGUID:newRange:
updateSyndicatedMessageWithMessageItem:newRange:
updateSyndicatedMessageWithSyndicationMessageAction:
updateTaskFlagsForPTask:
updateTransfer:currentBytes:totalBytes:
updateTransfer:withPreviewSize:forConstraints:
updateTransferAsWaitingForAccept:
updateTransferGUID:toGUID:
updateTransferIn:fromGUID:toGUID:
updateTransfersWithCKRecord:recordWasFetched:downloadAsset:
updateUnformattedID:forBuddyID:onService:
updateUnreadCountForChat:
updateVocabularyForAddedChat:completionHandler:
updateVocabularyForDeferredUpdateRequestIfNecessaryWithCompletionHandler:
updateVocabularyForDeletedChat:completionHandler:
updateVocabularyForRenamedChat:completionHandler:
updatedMessagesForMessages:
uploadDailyAnalyticstoCloudKit
useChatRoom:forGroupChatIdentifier:
useDeprecatedApi
useSSL
userInfo
userNicknameForRecordID:decryptionKey:requestID:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationDidFinish:
userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:
utiTypeForRecord:
uuid
validCodes
validateAliases:
validateAliases:account:
validateMD5HashForRecord:
validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:fromSender:completion:
validatePersonalStatusSubscriptionMatchesSubscriptionValidationTokens:fromSender:completion:
validateProfileAccount:
validateProfileWithAccount:
validationStatusForAlias:
validationStatusForAlias:onAccount:
validityOfChatRoomName:
value
valueForEntitlement:
valueForKey:
valueOfPersistentProperty:
valueOfProperty:
valueWithBytes:objCType:
valuesByKey
vcCapabilitiesChanged:
verifyPersonalSubscriptionMatchesSubscriptionValidationToken:encryptionValidationToken:receivedByHandleID:fromHandleID:messageDate:
verifyTextMessage:completionHandler:
verifyTruncatedRecordIDMatchesPersonalNickname:forChat:
vettedAliases
viewContext
visitedChats
vocabulary
vocabularyIdentifier
waitForLoadedChatsWithCompletionHandler:
wantsAssetFromRecord:
warnIfPortBlocked:forAction:
wasDeliveredQuietly
wasDisabledAutomatically
wasReportedAsJunk
weakRefWithObject:
weakToStrongObjectsMapTable
wellKnownPhotoLibraryURLForIdentifier:
whitespaceAndNewlineCharacterSet
writeAccount:defaults:
writeAccountDefaults:
writeAttachments
writeCloudKitSyncCounts:
writeDataPayloadToDisk:fileName:
writeDirtyMessages
writeExitRecordWithDate:completion:
writeInitialSyncCompletedRecordIfNeeded
writeMsgIDToRowIDMap
writeSyncCompletedRecordWithDate:completion:
writeToFile:atomically:encoding:error:
writeToFile:options:error:
writeToURL:atomically:
writeToURL:error:
zone
zoneID
zoneName
@40@0:8@16@24@32
@16@0:8
v24@0:8@16
v16@0:8
q16@0:8
v24@0:8q16
@"NSMutableDictionary"
@"NSURL"
@"IMMessageItem"
@"IMDChat"
@"PHMomentShare"
@"PHFetchResult"
v20@0:8B16
B16@0:8
v32@0:8i16i20@24
i16@0:8
v40@0:8I16@20i28@32
v28@0:8I16@20
I16@0:8
v20@0:8I16
v20@0:8i16
@"NSString"
@"IMDService"
@"IMDServiceSession"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8Q16
@"<IMDMessageHistorySyncTask>"24@0:8Q16
@"IMDCKSyncController"
@"IMDAccountController"
@"IMDReplayController"
v32@0:8q16@24
v28@0:8@16B24
v32@0:8@16@24
v28@0:8@"IDSAccount"16B24
v32@0:8@"IDSAccount"16@"NSArray"24
B32@0:8@16@24
@32@0:8@16@24
@24@0:8@16
@"NSSet"
v32@0:8Q16@24
v24@0:8@"IMDCKSyncState"16
@48@0:8@16@24@32@40
v32@0:8@16@?24
v24@0:8@?16
B32@0:8q16Q24
v32@0:8@16B24B28
v40@0:8@16B24B28@32
v48@0:8@16B24B28@32@40
@36@0:8@16B24@28
B24@0:8q16
B28@0:8@16B24
v40@0:8@16q24@32
v48@0:8q16@24q32@40
@24@0:8q16
v48@0:8q16B24Q28B36d40
v36@0:8@16i24@28
v48@0:8@16i24@28B36@?40
v48@0:8@16B24B28B32B36@40
v40@0:8q16B24B28B32B36
v68@0:8q16B24B28B32B36B40B44B48B52B56Q60
v52@0:8@16i24@28B36B40@?44
v32@0:8@?16d24
@"IMDCKSyncState"
@"IMLockdownManager"
@"IDSServerBag"
@"FTDeviceSupport"
@"IMDefaults"
@"IMDSyncTelemetryReporter"
v24@0:8@?<v@?Q>16
@?24@0:8@16
@?16@0:8
v32@0:8Q16Q24
v48@0:8@16Q24@32Q40
@72@0:8@16{?=[8I]}24Q56@64
{?=[8I]}16@0:8
@"<IMDaemonListenerProtocol>"
{?="val"[8I]}
v32@0:8@"NSString"16@"NSString"24
@"CKServerChangeToken"24@0:8@"NSString"16
v32@0:8@"CKServerChangeToken"16@"NSString"24
@"NSBundle"
@"NSDictionary"
v40@0:8@16@24@?32
@44@0:8@16@24@32B40
@"NSDate"
@"IMDaemonCoreHelloWorldClass_Impl"
@"NSArray"
@"NSTimer"
@"IMOneTimeCodeUtilities"
q24@0:8@16
I24@0:8@16
@"NSDictionary"16@0:8
v24@0:8d16
@"<IMDMessagePTaskStore>"
@76@0:8@16@24Q32B40@44Q52^Q60B68B72
v56@0:8@16@24B32B36@40@48
v24@0:8@"IMConnectionMonitor"16
v28@0:8B16@20
v40@0:8@16@24@32
v52@0:8@16@24@32C40@44
v76@0:8@16@24@32C40@44@52@60@68
v36@0:8@16@24C32
v52@0:8@16@24@32@40C48
v44@0:8@16@24@32C40
v44@0:8@16@24B32@?36
v60@0:8@16@24@32@40C48@?52
v76@0:8@16@24q32Q40@48C56@60@68
v60@0:8@16@24@32@40@48C56
v48@0:8@16@24@32@40
v48@0:8@16I24I28@32@40
v64@0:8@16@24@32@40@48@56
v196@0:8@16@24@32@40@48@56@64@72@80@88B96B100B104B108B112B116@120@128@136@144@152@160@168@176B184@?188
v52@0:8@16@24@32@40B48
v24@0:8@"IMDAccount"16
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
v32@0:8@"NSString"16@"NSDictionary"24
v28@0:8B16@"NSString"20
v40@0:8@16@"NSString"24@"NSString"32
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v52@0:8@"NSString"16@"NSDictionary"24@"NSString"32C40@"NSDictionary"44
v76@0:8@"NSString"16@"NSDictionary"24@"NSString"32C40@"NSString"44@"NSString"52@"NSString"60@"NSDictionary"68
v36@0:8@"NSString"16@"NSString"24C32
v52@0:8@"NSDictionary"16@"IMMessageItem"24@"NSString"32@"NSString"40C48
v52@0:8@"NSString"16@"NSString"24@"NSString"32C40@"NSString"44
v44@0:8@"NSDictionary"16@"NSString"24@"NSString"32C40
v52@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40C48
v32@0:8@"NSDictionary"16@"NSArray"24
v24@0:8@"NSURL"16
v44@0:8@"IMMessageItem"16@"NSString"24@"NSString"32C40
v24@0:8@"IMMessageItem"16
v44@0:8@"NSString"16@"NSString"24B32@?<v@?B>36
v60@0:8@"IMMessageItem"16@"NSString"24@"NSString"32@"NSString"40C48@?<v@?B>52
v76@0:8@"IMMessageItem"16@"IMMessageItem"24q32Q40@"NSString"48C56@"NSString"60@"NSAttributedString"68
v32@0:8@"IMSyndicationAction"16@"NSArray"24
v52@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40C48
v24@0:8@"NSArray"16
v28@0:8@"NSDictionary"16B24
v40@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32
v60@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSString"48C56
v32@0:8@"NSDictionary"16@"NSString"24
v40@0:8@"NSString"16@"NSDictionary"24@"NSString"32
v48@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSNumber"40
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v48@0:8@"NSString"16I24I28@"NSDictionary"32@"NSString"40
v32@0:8@"NSArray"16@"NSString"24
B32@0:8@"NSDictionary"16@"NSArray"24
B24@0:8@"NSString"16
v64@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSNumber"40@"NSString"48@"IDSAccount"56
v196@0:8@"IMMessageItem"16@"IMDChat"24@"IMDAccount"32@"NSData"40@"NSString"48@"NSString"56@"NSString"64@"NSArray"72@"NSString"80@"NSString"88B96B100B104B108B112B116@"NSNumber"120@"NSDictionary"128@"NSDictionary"136@"NSArray"144@"NSDictionary"152@"NSString"160@"NSString"168@176B184@?<v@?>188
v52@0:8@"IMDChat"16@"NSNumber"24@"NSString"32@"NSString"40B48
@28@0:8@16i24
@20@0:8B16
S16@0:8
@"NSRecursiveLock"
@"IMDAccount"
@"NSMutableArray"
@"NSMutableSet"
@"IMTimer"
@"<IMDAutoReplying>"
@"IMConnectionMonitor"
@"IMSystemProxySettingsFetcher"
@"IMDChatRegistry"
v32@0:8d16@24
B40@0:8@16@24@32
v48@0:8@16@24@32@?40
d16@0:8
@"__IMDBackwardCompatibilityMessageIdentifier"
@"NSError"
@"CKRecordID"
@"NSNumber"
@"NSObject<OS_dispatch_queue>"
@"IMDRecordZoneManager"
@"IMDCKDatabaseManager"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"CKRecordZoneID"
@"CKRecordZone"
@"APSConnection"
@40@0:8@16@24Q32
@56@0:8@16@24Q32@40@48
v24@0:8@"SKStatusSubscription"16
v24@0:8@"SKStatusSubscriptionService"16
v56@0:8@16@24@32@40@48
@"SKStatusSubscriptionService"
@"NSCache"
@24@0:8r*16
@"INVocabulary"
@"NSArray"16@0:8
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
v24@0:8Q16
@"IMDMessageStore"
@"IMTimingCollection"
@44@0:8@16@24B32^@36
@40@0:8@16@24^@32
@56@0:8@16@24@32Q40Q48
@32@0:8@16^q24
v24@0:8@"PHChange"16
v36@0:8@16@24B32
@"IMDCallManager_Impl"
v48@0:8q16Q24@32@?40
v52@0:8@16B24@?28@36@?44
B28@0:8B16@20
v52@0:8@16B24Q28Q36@?44
v60@0:8@16B24Q28Q36@44@?52
v36@0:8@16B24@?28
@40@0:8@16@24q32
Q32@0:8@16@24
v44@0:8@16@24C32@?36
v32@0:8q16q24
B40@0:8q16q24@32
v60@0:8@16q24@32B40@44@?52
v76@0:8B16q20q28q36q44@52@60@?68
B40@0:8q16@24@?32
v104@0:8@16@24@32B40B44q48q56@64q72q80@88@?96
v48@0:8@16@24@32q40
v32@0:8@16d24
v44@0:8@16B24@28@36
v32@0:8@16q24
v44@0:8@16B24@28@?36
@"IMDCKAttachmentSyncCKOperationFactory"
@"<IMDCKSyncTokenStore>"
v32@0:8@"IMKeyValueCollection"16@"NSDictionary"24
v44@0:8@16@24@32B40
B24@0:8B16B20
@36@0:8Q16B24d28
v32@0:8Q16q24
@"IMKeyValueCollection"
@"<IMDCKSyncStateDelegate>"
@"__IMDPlainTextTapbackInterpreterImpl"
@32@0:8q16@24
@40@0:8q16q24@32
@28@0:8@16B24
v56@0:8@16@24B32Q36I44I48S52
@48@0:8@16B24Q28I36I40S44
v40@0:8@16Q24Q32
v72@0:8@16@24{IMPreviewConstraints=d{CGSize=dd}dBB}32
v64@0:8@16@24{?=[8I]}32
v52@0:8@16@24B32B36q40B48
v44@0:8@16B24B28q32B40
B44@0:8@16@24@32B40
{IMPreviewConstraints=d{CGSize=dd}dBB}16@0:8
@64@0:8@16@24Q32q40@48@56
@48@0:8@16q24@32@40
@48@0:8@16@24Q32q40
Q24@0:8@16
B32@0:8@16q24
@"<IMDCollaborationNoticeDispatcherDelegate>"
@"IMDCollaborationNoticeRateLimiter"
@"IMDCollaborationClearNoticeRateLimiter"
@44@0:8@16@24i32Q36
B28@0:8Q16B24
q20@0:8i16
q24@0:8q16
@32@0:8@16Q24
Q40@0:8@16@24Q32
B32@0:8Q16@24
v56@0:8@16Q24Q32@40@?48
v40@0:8@"NSArray"16@"IMDChat"24@"NSString"32
@"<IMDAutoReplyDelegate>"16@0:8
v24@0:8@"<IMDAutoReplyDelegate>"16
v36@0:8@16B24@28
@"<IMDAutoReplyDelegate>"
@"CARAutomaticDNDStatus"
@32@0:8@16q24
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
@"IMDScreenTimeAskReponseHandler"
@"IMDFamilyInviteReponseHandler"
@"IMDAskToBuyResponseHandler"
@48@0:8@16@24Q32@40
v28@0:8B16@?20
B40@0:8@16@24Q32
@"IMNickname"
@"IDSKVStore"
B48@0:8@16@24@32B40B44
@44@0:8@16B24B28B32Q36
@52@0:8@16B24B28B32Q36B44B48
@56@0:8@16B24B28B32Q36B44B48B52
@44@0:8@16@24B32B36B40
@60@0:8@16@24@32@40Q48B56
@80@0:8@16@24@32Q40Q48@56^B64^B72
@56@0:8@16@24@32d40@48
@36@0:8i16@20@28
@48@0:8@16@24@32Q40
@56@0:8@16@24@32@40Q48
^{_IMDHandleRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}}32@0:8@16@24
v60@0:8@16@24C32@36Q44@?52
@44@0:8@16C24@28@?36
@36@0:8@16C24@28
@56@0:8@16@24C32@36@44B52
@64@0:8@16q24Q32@40@48^@56
@32@0:8q16Q24
@"IMStateCaptureAssistant"
@"PHFetchOptions"
@"PHPhotoLibrary"
@208@0:8@16@24@32@40@48@56@64@72@80@88@96q104C112q116B124@128@136q144@152q160q168@176B184q188@196B204
B32@0:8q16@24
C16@0:8
v20@0:8C16
v28@0:8@?16B24
@68@0:8@16@24@32@40@48@56B64
@88@0:8@16@24@32C40@44@52@60@68@76B84
@28@0:8@16C24
@36@0:8@16B24Q28
@44@0:8@16B24@28Q36
@36@0:8@16@24C32
@52@0:8@16@24@32@40C48
@44@0:8@16@24@32C40
@52@0:8@16@24B32@36@44
@64@0:8@16@24@32@40@48@56
v64@0:8@16@24@32B40@44B52B56B60
v40@0:8@16@24B32B36
v36@0:8@16B24B28B32
Q56@0:8@16C24@28@36@44B52
@68@0:8@16@24Q32B40@44Q52^Q60
@20@0:8C16
v40@0:8@16@24^@32
@36@0:8{_NSRange=QQ}16B32
B24@0:8@?16
B36@0:8@16@24C32
@32@0:8@16^B24
@40@0:8@16q24@32
@48@0:8q16B24@28B36@40
v32@0:8@16Q24
v40@0:8@16@24Q32
v28@0:8@16i24
v40@0:8@16@24q32
v80@0:8@16@24@32@40@48@56q64@72
v40@0:8^@16^@24@32
v40@0:8q16q24q32
@"NSData"
@"IMDCKUtilities"
@"IMDChatStore"
@"IMDMessageProcessingController"
@"IMDMessageHistorySyncController"
@"TUConversationManager"
@"CKContainer"
v32@0:8B16B20B24B28
B24@0:8^@16
@"CUTWeakReference"
B36@0:8@16@24B32
@24@0:8^{_IMDAttachmentRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}}16
^{_IMDAttachmentRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}}24@0:8@16
v24@0:8B16B20
@"<IMDCKAbstractSyncControllerDelegate>"
B40@0:8@16^@24^@32
v40@0:8@?16d24@32
v40@0:8@16Q24@?32
v40@0:8I16I20@24@?32
B48@0:8@16@24@32@40
v40@0:8@16q24q32
@"FMFSession"
Q24@0:8q16
v60@0:8@16@24@32B40@44@?52
B48@0:8@16Q24q32q40
v76@0:8@16@24B32q36q44@52@60@?68
v52@0:8B16q20q28@36@?44
v96@0:8@16@24@32B40@44q52q60q68B76@80@?88
B32@0:8q16q24
v56@0:8q16q24q32@40@?48
@"CKServerChangeToken"
@"IMDCKMessageSyncCKOperationFactory"
v40@0:8q16@24@?32
v48@0:8q16@24@32@?40
v52@0:8q16@24B32@36@?44
@"NSLock"
B36@0:8@16C24^@28
@"IMDReplayStorageController"
@"IMDReplayStorageIterationContext"
@36@0:8@16B24^B28
v40@0:8@"IMDXPCEventStreamHandler"16@"NSString"24@"NSDictionary"32
v32@0:8@"IMDCKAbstractSyncController"16Q24
@40@0:8q16@24^B32
v40@0:8Q16r*24@32
B72@0:8q16q24@32Q40@48@56@?64
v56@0:8@16Q24@32@?40@?48
v32@0:8@?16@24
@"NSMutableOrderedSet"
v80@0:8@16@24B32B36B40B44Q48@?56@?64@?72
v28@0:8@16C24
v36@0:8@16C24@28
v52@0:8@16C24@28@36@44
v60@0:8@16C24@28@36@44@52
v72@0:8@16C24@28@36@44@52@60B68
v80@0:8@16C24@28@36@44@52@60@68B76
v32@0:8^@16^C24
v48@0:8@16@24C32B36@?40
v56@0:8@16@24C32B36@40@?48
v44@0:8@16@24C32@36
v52@0:8B16@20@28@36@?44
v192@0:8@16@24@32@40@48@56@64@72@80@88B96B100B104B108B112B116@120@128@136@144@152@160@168@176@?184
v44@0:8@16C24@28@36
v68@0:8@16C24@28@36@44@52@60
v68@0:8@16C24@28@36@44q52@60
v64@0:8@16C24@28@36@44@52B60
v32@0:8i16@20C28
v32@0:8I16@20B28
v40@0:8I16@20B28@32
v44@0:8I16@20q28Q36
B48@0:8@16q24@32@40
v44@0:8@16q24@32B40
v48@0:8@16@24q32@?40
v84@0:8@16q24@32@40B48@52q60@68@?76
v76@0:8@16q24@32@40B48@52@60@?68
v52@0:8@16@24C32@36@44
v56@0:8@16@24C32@36@44B52
v60@0:8@16@24@32@40C48@52
v68@0:8@16@24@32@40C48@52@60
B52@0:8@16@24C32@36@44
B60@0:8@16@24@32C40@44@52
v40@0:8i16@20C28@32
v56@0:8i16@20C28@32@40@48
v64@0:8i16@20C28@32@40@48@56
v72@0:8i16@20C28@32@40@48@56@64
v68@0:8i16@20C28@32@40@48@56B64
v84@0:8i16@20C28@32@40@48@56@64@72B80
v80@0:8i16@20C28@32@40@48@56q64@72
v100@0:8i16@20C28@32@40@48@56@64@72q80@88B96
v40@0:8i16@20@28C36
v56@0:8i16@20@28@36@44C52
v64@0:8i16@20@28@36@44@52C60
v72@0:8i16@20@28@36@44@52C60@64
v80@0:8i16@20@28@36@44@52C60@64@72
v88@0:8i16@20@28@36@44@52C60@64@72@80
v44@0:8@16@24I32@36
v56@0:8@16@24@32@40@?48
v60@0:8@16@24C32@36@44@?52
v52@0:8@16@24@32B40@?44
v120@0:8@16@24@32@40@48@56@64@72Q80B88@92B100@?104@?112
B20@0:8B16
@"<IMDMessageHistorySyncTask>"
@"<IMDMessageHistorySyncTaskFactory>"
v48@0:8@16@24@?32q40
v44@0:8i16@20@28@?36
@"IMDCKChatSyncCKOperationFactory"
@"CKRecord"
@"IMDCollaborationNoticeDispatcher"
B24@0:8Q16
v48@0:8q16q24@32@?40
B24@0:8@"IMDMessagePTask"16
v68@0:8@16@24C32@36@44@52@60
{_FZChatRoomValidity=iS}24@0:8@16
@"IDSKVDeleteContext"
B32@0:8@16^@24
@32@0:8Q16^@24
@"NSMapTable"
B28@0:8i16@20
v44@0:8@16@24S32q36
v44@0:8@16i24@28@36
v52@0:8I16I20@24i32@36@44
v44@0:8@16@24Q32B40
v48@0:8@16@24Q32@40
v24@0:8@"TUConversationManager"16
v32@0:8@"TUConversationManager"16@"TUConversation"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversation"32
v32@0:8@"TUConversationManager"16@"NSArray"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationParticipant"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationActivityEvent"32
v44@0:8@"TUConversationManager"16@"TUConversation"24Q32B40
v32@0:8@"TUConversationManager"16@"NSString"24
v48@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationParticipant"32@"TUConversationNotice"40
v40@0:8@"TUConversationManager"16@"TUConversation"24@"NSSet"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationMember"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"NSData"32
v40@0:8@"TUConversationManager"16@"TUConversationMember"24@"TUConversationLink"32
v48@0:8@"TUConversationManager"16@"TUConversation"24Q32@"TUConversationActivitySession"40
v36@0:8@"TUConversationManager"16@"<TUScreenShareAttributes>"24B32
v32@0:8@"TUConversationManager"16@"NSError"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationActivitySession"32
v28@0:8@"TUConversationManager"16B24
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
@"IDSAccount"
v32@0:8@"IDSAccountController"16@"IDSAccount"24
v32@0:8@"NSString"16@"NSArray"24
@28@0:8i16@20
@"IDSAccountController"
@"IMDIDSService"
q32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v28@0:8I16@"NSString"20
v48@0:8@16Q24@32@?40
v40@0:8@16q24@?32
v48@0:8@"NSString"16Q24@"NSDictionary"32@?<v@?B@"NSDictionary">40
v48@0:8@"NSString"16Q24@"NSDictionary"32@?<v@?B@"IMXPCDictionary">40
v32@0:8@16@"NSString"24
v44@0:8@"NSString"16@"NSArray"24C32@"NSArray"36
v40@0:8@"NSString"16q24@?<v@?B>32
v44@0:8@"NSArray"16C24@"NSArray"28@"IMMessageItem"36
v32@0:8@"NSString"16q24
v44@0:8@"NSArray"16C24@"NSArray"28@"NSString"36
v32@0:8@"NSSet"16@"NSArray"24
v24@0:8@"NSSet"16
v24@0:8@"IMNickname"16
v40@0:8@"NSString"16@"NSData"24@"NSString"32
v32@0:8@"NSString"16B24B28
v48@0:8@16@"NSString"24@"NSString"32@"NSString"40
v28@0:8@"NSString"16B24
v48@0:8@"IMCollaborationNoticeTransmission"16@"NSSet"24@"NSString"32@?<v@?B>40
v40@0:8@"IMCollaborationClearTransmission"16@"NSSet"24@?<v@?B>32
v40@0:8@"NSString"16q24@"NSString"32
v48@0:8B16@20@28B36@40
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSString"48
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSString"48@"NSDate"56q64@"NSString"72
v40@0:8@"NSDictionary"16@"NSDictionary"24@"NSArray"32
v48@0:8B16@"NSString"20@"NSString"28B36@"NSString"40
v28@0:8@"NSString"16i24
v32@0:8q16@"NSString"24
v36@0:8B16@20@28
v36@0:8B16@"NSString"20@"NSString"28
v52@0:8@16@24C32@36@?44
v52@0:8@"NSString"16@"NSArray"24C32@"NSArray"36@?<v@?B>44
v52@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44
v84@0:8@16@24C32@36q44@52@60@68@?76
v84@0:8@16@24@32C40@44q52q60@68@?76
v68@0:8@16@24C32@36q44@52@?60
v60@0:8@16@24C32@36q44@?52
v56@0:8@16@24C32@36B44@?48
v84@0:8@16C24@28q36@44@52@60@68@76
v84@0:8@16@24C32@36q44q52@60@68@76
v56@0:8@16C24@28@36@44B52
v60@0:8@16C24@28q36@44@52
v68@0:8@16C24@28q36@44@52@60
v84@0:8@"NSString"16@"NSArray"24C32@"NSArray"36q44@"NSString"52@"NSString"60@"NSString"68@?<v@?@"NSArray"@"NSArray">76
v84@0:8@"NSString"16@"NSString"24@"NSArray"32C40@"NSArray"44q52q60@"NSString"68@?<v@?@"NSArray"@"NSArray"BB>76
v68@0:8@"NSString"16@"NSArray"24C32@"NSArray"36q44@"NSString"52@?<v@?@"NSArray"@"NSArray">60
v52@0:8@"NSString"16@"NSArray"24C32@"NSArray"36@?<v@?@"NSArray">44
v60@0:8@"NSString"16@"NSArray"24C32@"NSArray"36q44@?<v@?@"NSArray">52
v52@0:8@"NSString"16@"NSArray"24C32@"NSArray"36@?<v@?Q>44
v68@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44@"NSString"52@"NSString"60
v56@0:8@"NSString"16@"NSArray"24C32@"NSArray"36B44@?<v@?Q>48
v40@0:8@"NSArray"16@"NSDate"24@"NSString"32
v32@0:8@"NSArray"16@?<v@?@"NSDictionary">24
v84@0:8@"NSArray"16C24@"NSArray"28q36@"NSString"44@"NSString"52@"NSString"60@"NSString"68@"NSString"76
v84@0:8@"NSString"16@"NSArray"24C32@"NSArray"36q44q52@"NSString"60@"NSString"68@"NSString"76
v56@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44B52
v60@0:8@"NSArray"16C24@"NSArray"28q36@"NSString"44@"NSString"52
v68@0:8@"NSArray"16C24@"NSArray"28q36@"NSString"44@"NSString"52@"NSString"60
v52@0:8@16C24@28@36q44
v56@0:8@16C24@28@36q44B52
v52@0:8@"NSArray"16C24@"NSArray"28@"NSArray"36q44
v56@0:8@"NSArray"16C24@"NSArray"28@"NSArray"36q44B52
v36@0:8@"NSArray"16C24@"NSArray"28
v52@0:8@16@24@32C40@?44
v72@0:8@16@24q32@40@48@56@64
v68@0:8@16@24@32@40@48@56C64
v48@0:8@16@24q32@40
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v32@0:8@"NSPredicate"16@?<v@?@"NSArray">24
v48@0:8@"NSPredicate"16@"NSDate"24q32@?<v@?@"NSArray">40
v52@0:8@"NSArray"16@"NSString"24@"NSString"32C40@?<v@?@"NSArray">44
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
v48@0:8@"IMMessageItem"16@"NSIndexSet"24@"NSDictionary"32@"NSDate"40
v32@0:8@"IMItem"16@"NSString"24
v72@0:8@"NSString"16@"NSString"24q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64
v52@0:8@"IMMessageItem"16@"NSString"24@"NSString"32C40@"NSString"44
v48@0:8@"NSData"16@"NSArray"24@"NSString"32@"NSString"40
v40@0:8@"NSData"16@"NSArray"24@"NSString"32
v60@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40C48@"NSString"52
v44@0:8@"NSString"16@"NSString"24C32@"NSString"36
v48@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40
v68@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56C64
v24@0:8@"IMCollaborationNotice"16
v32@0:8@"NSPredicate"16@"NSString"24
v48@0:8@"NSPredicate"16@"NSDate"24q32@"NSString"40
v52@0:8@"NSArray"16@"NSString"24@"NSString"32C40@"NSString"44
v40@0:8@"NSArray"16@"NSString"24@?<v@?B@"NSDictionary">32
v84@0:8@16@24@32C40@44@52@60@68@76
v32@0:8@"IMMessageItem"16@"NSString"24
v84@0:8@"NSString"16@"NSArray"24@"NSString"32C40@"NSString"44@"NSString"52@"NSString"60@"NSDictionary"68@"NSString"76
v60@0:8@"NSDictionary"16@"IMMessageItem"24@"NSString"32@"NSString"40C48@"NSString"52
v52@0:8@"NSDictionary"16@"NSString"24@"NSString"32C40@"NSString"44
v48@0:8@16@24B32B36q40
v48@0:8@"NSString"16@"NSString"24B32B36q40
v44@0:8@"NSString"16@"NSString"24@"NSArray"32B40
v32@0:8@"NSArray"16q24
v32@0:8@"NSString"16@"NSDate"24
v56@0:8@16I24I28@32@40@48
v48@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSString"40
v56@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSNumber"40@"NSString"48
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSString"16I24I28@"NSDictionary"32@"NSString"40@"NSString"48
v48@0:8@16I24@28@36B44
v48@0:8@"NSString"16I24@"NSDictionary"28@"NSString"36B44
v28@0:8B16@"NSDictionary"20
@"<IMDaemonListenerServiceProtocol>"24@0:8@"IMDService"16
@"<IMDaemonListenerChatProtocol>"24@0:8@"IMDService"16
@"<IMDaemonListenerChatProtocol>"20@0:8B16
@"<IMDaemonListenerNotificationsProtocol>"24@0:8@"IMDService"16
@"<IMDaemonListenerAVProtocol>"24@0:8@"IMDService"16
@"<IMDaemonListenerAnyProtocol>"16@0:8
@"<IMDaemonListenerAccountsProtocol>"16@0:8
@"<IMDaemonListenerChatProtocol>"16@0:8
@"<IMDaemonListenerChatDatabaseProtocol>"16@0:8
@"<IMDaemonListenerChatCountsProtocol>"16@0:8
@"<IMDaemonListenerFileProviderProtocol>"16@0:8
@"<IMDaemonListenerAVProtocol>"16@0:8
v44@0:8B16Q20@28@36
v44@0:8B16Q20@"NSString"28@"NSError"36
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"NSDictionary"16@"NSDictionary"24
v32@0:8@"NSSet"16@"NSSet"24
v48@0:8@16Q24Q32Q40
v40@0:8@"NSString"16@24@32
v32@0:8@"NSArray"16@"NSArray"24
v48@0:8@"NSString"16Q24Q32Q40
v32@0:8q16@"NSError"24
v56@0:8@16@24I32@36I44@48
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSDictionary"40
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSData"40
v56@0:8@"NSString"16@"NSString"24I32@"NSDictionary"36I44@"NSDictionary"48
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSDictionary"40
v36@0:8@"NSString"16@"NSString"24B32
v56@0:8@16@24@32@40q48
v72@0:8@16@24@32q40q48@56B64B68
v40@0:8@"NSString"16@"IMMessageItem"24@"NSArray"32
v56@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40q48
v72@0:8@"NSString"16@"NSString"24@"NSArray"32q40q48@"NSArray"56B64B68
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSNumber"40
v60@0:8@16@24C32@36@44@52
v72@0:8@16@24C32@36@44@52@60B68
v72@0:8@16@24C32@36@44@52i60@64
v64@0:8@16@24C32@36@44@52i60
v56@0:8@16@24@32@40B48B52
v32@0:8@"NSString"16d24
v32@0:8@"NSString"16@"NSNumber"24
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSDictionary"44
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSError"44
v36@0:8@"NSString"16B24@"NSString"28
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMMessageItem"44
v68@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52@"IMMessageItem"60
v60@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMMessageItem"44@"NSNumber"52
v68@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52@"IMItem"60
v72@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52@"NSArray"60B68
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMItem"44
v56@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMItem"44B52
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSArray"44
v44@0:8@"NSString"16@"NSString"24C32@"NSArray"36
v72@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52i60@"NSArray"64
v64@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSDictionary"52i60
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v32@0:8@"NSArray"16@"NSDictionary"24
v44@0:8@"NSString"16C24@"NSString"28@"NSDictionary"36
v56@0:8@"NSString"16@"NSNumber"24@"NSString"32@"NSString"40@"NSString"48
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48B52
v40@0:8@"NSString"16@"NSString"24@"NSError"32
v32@0:8@"NSURL"16@"NSError"24
v84@0:8@16@24@32@40I48B52@56Q64I72@76
v48@0:8@16I24@28i36@40
v28@0:8@16I24
v84@0:8@"NSString"16@"NSDictionary"24@"NSArray"32@"NSArray"40I48B52@"NSDictionary"56Q64I72@"NSString"76
v48@0:8@"NSString"16I24@"NSString"28i36@"NSDictionary"40
v32@0:8@"NSString"16Q24
v28@0:8@"NSString"16I24
v48@0:8@"NSString"16@"NSString"24@"NSData"32@"NSString"40
v40@0:8@"NSString"16@"NSDictionary"24@"NSDictionary"32
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSData"16
iMessage
FaceTime
