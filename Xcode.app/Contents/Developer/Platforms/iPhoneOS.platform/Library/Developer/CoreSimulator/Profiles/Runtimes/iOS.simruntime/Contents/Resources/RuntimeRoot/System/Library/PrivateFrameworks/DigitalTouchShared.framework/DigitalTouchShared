@(#)PROGRAM:DigitalTouchShared  PROJECT:ET-1
333333
?333333
?ffffff
?ffffff
 J@<N
A333333
Mb@?{
?VUU
?ffffff
?333333
?ffffff
?ffffff
x-et-notify
sender
type
unreadCount
addr
fromID
guid
ETAppViewControllerActivatedNotification
ETAppViewControllerDeactivatedNotification
etPeoplePickerScrollTest1up
etPeoplePickerScrollTest2up
etPeoplePickerScrollTest3up
com.apple.ET
com.apple.ET.app
ETUserTappedOnNotificationNotification
ETPersonUnreadMessageStatusChangedNotification
UnreadMessageCountKey
ETPairedSyncStateChangedNotification
PairedSyncState
v12@?0B8
v8@?0
%@ %@
messageType
sendDate
messageData
baseColor
identifier
supportsPlaybackTimeOffsets
startDelay
QuickTap
Heartbeat
Doodle
ReadReceipt
Video
Kiss
Anger
(unknown: %i)
ColorPickerRotationAnimationKey
transform.rotation.z
SKView
Unable to find class %s
beatsPerMinute
duration
normalizedCenterX
normalizedCenterY
rotation
heartbreakTime
DigitalTouchShared-Localizable
COLOR_PICKER_DONE_TEXT
DigitalTouch
ERROR: Couldn't allocate EAGLContext
ERROR: Couldn't allocate ETGLSketchRenderer
v36@?0^8Q16^24B32
Completed animation. Stopping displaylink and removing view
message playback mode has begun
Clearing Renderer
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
timeDeltas
points
colors
doodle
heartbeat
quick-tap
read-receipt
video
kiss
anger
unknown (%d)
{?={?=SS}{?=S}}
Drawing
NanoLifestylePrivacyEnableHeartRateNotification
EnableHeartRate
com.apple.nanolifestyle.privacy
count/min
v32@?0@"HKSampleQuery"8@"NSArray"16@"NSError"24
%K >= %@
v20@?0B8@"NSError"12
color-wheel-gradient
strokeEnd
strokeStart
position
delays
angles
Error unarchiving ETVideoMessage: %@
TypingIndicatorIcon
ETWispDelay
ignoreBackgroundNotifications
Ending message: %@. Will send: %d
(%@) Got tap!
(%@) UITouchPhaseBegan
(%@) UITouchPhaseEnded
ERROR: Failed to allocate ETGLSketchView for message: %@
Ending %@, will send: %d
v16@?0Q8
Displaying message %@ in scene %@
SKScene
Unknown message type %du (%@)
%s: unarchived Digital Touch message header has a malformed identifier! ("%@")
+[ETMessage unarchive:]
Cannot archive message of type %@
Unknown
%@: %p; messageType: %@, time created: %@ (%f), sendTime: %@ (%f), identifier: %@
SKSetResourceBundle
SKSpriteNode
SKAction
ETColorPickerColorData
ETColorPickerColors
ETColorPickerSelectedIndex
ETColorPrefsChangedExternallyNotification
doodleCount
doodleData
colorData
pointTimeDeltaData
%s: glGetError(0x%x)
-[ETGLSketchRenderer initWithContext:andDrawable:]
w and h -  %i %i
failed to make complete framebuffer object %x
Redundantly resizing Sketch renderer
resizing layer -  %i %i
-[ETGLSketchRenderer resizeFromCachedLayer]
-[ETGLSketchRenderer updateVertexBufferWithVertexCount:]
-[ETGLSketchRenderer _warmupShaders]
Unexpected failure to make complete framebuffer object during warmup (0x%04x)
Unexpected failure to create context during shader warmup
Error: GLSketch being asked to -render into a 0x0 viewport!
-[ETGLSketchRenderer render]
-[ETGLSketchRenderer setLineWidthScaleFactor:]
#version 100
#extension GL_EXT_separate_shader_objects : enable
layout(location = 0) attribute vec4 in_Vertex;
layout(location = 1) attribute vec4 in_InitialColor;
layout(location = 2) attribute vec4 in_FinalColor;
layout(location = 3) attribute vec4 in_TimesAndNoise;
layout(location = 4) attribute vec4 in_PointSize;
layout(location = 5) attribute float in_CurrentTime;
layout(location = 6) attribute float in_DeathTime;
layout(location = 7) attribute float in_LastBirthTime;
layout(location = 8) attribute float in_DeathPerPoint;
layout(location = 9) attribute float in_DeathUntilKill;
varying mediump vec4  out_Color;
void main(void)
mediump float cometLife = 0.3;
mediump float colorChangeTime = 5.25;
mediump float relaxationTime = 5.0;
mediump float life = (in_CurrentTime - in_TimesAndNoise.x);
mediump float birthToDeathRatio = in_TimesAndNoise.y/in_LastBirthTime;
mediump float kTimeIndexIncrement = 0.016666666667;
mediump float cometLifeRatio;
mediump float deathRatio;
mediump float deathRatioTriangle;
mediump float tailRatio;
deathRatio = (in_CurrentTime - in_DeathTime);
deathRatio = clamp(deathRatio - birthToDeathRatio * (in_DeathUntilKill - in_DeathPerPoint), 0.0, in_DeathPerPoint) / in_DeathPerPoint;
tailRatio = step((in_LastBirthTime - 500.0 * kTimeIndexIncrement)/in_LastBirthTime, birthToDeathRatio) * step(0.01, deathRatio) * birthToDeathRatio * deathRatio;
cometLifeRatio = 1.0 - clamp(life, 0.0, cometLife) / cometLife;
cometLifeRatio = smoothstep(0.0, 1.0, cometLifeRatio);
mediump float relaxationRatio = clamp(life, 0.0, relaxationTime) / relaxationTime;
mediump float colorChangeRatio = clamp(life, 0.0, colorChangeTime) / colorChangeTime;
deathRatioTriangle = 1.0 - clamp(abs((deathRatio - 0.25) * 4.0), 0.0, 1.0);
vec2 pos = vec2(in_Vertex.xy + (in_Vertex.zw - in_Vertex.xy) * relaxationRatio * relaxationRatio * relaxationRatio * (relaxationRatio * (relaxationRatio * 6. - 15.) + 10.));
pos = pos + ((1.0+in_PointSize.z) * in_TimesAndNoise.zw * deathRatio * deathRatio * (1.0 + (tailRatio * tailRatio * tailRatio * 1.25)));
mediump float deathTime = in_CurrentTime - in_DeathTime;
pos = (pos * (1.0-(in_PointSize.z*0.3)*deathTime*deathTime)) + vec2(0.0, in_PointSize.z*deathTime*deathTime*deathTime);
gl_Position = vec4(pos, 0.0, 1.0);
gl_PointSize = (1.0 + 7.0 * cometLifeRatio * in_PointSize.y) * in_PointSize.x;
gl_PointSize -= (gl_PointSize-1.0) * deathRatio * deathRatio * deathRatio;
gl_PointSize += 31.0 * tailRatio * tailRatio * tailRatio * in_PointSize.y;
out_Color = mix(in_InitialColor, in_FinalColor, colorChangeRatio);
out_Color.rgb = mix(out_Color.rgb, vec3(1.0), cometLifeRatio + deathRatioTriangle * 0.3);
out_Color.a = (1.0 - deathRatio) * (1.0 - tailRatio) * (0.15 + 0.85 * (1.0 - cometLifeRatio));
#version 100
uniform mediump sampler2D theTex;
varying mediump vec4  out_Color;
void main(void)
gl_FragColor = out_Color;
gl_FragColor.a *= texture2D(theTex, gl_PointCoord).r;
gl_FragColor.rgb *= gl_FragColor.a;
introMessageData
playingMessagesData
mediaType
Photo
ETLoggingEnabled
ETSceneLoggingEnabled
ETEarlyLoadEnabled
ETLastInteractiveZoomLevel
ETArchiveSentMessages
mailto:
tel:
yyyy-MM-dd-HH:mm:ss.SSS
Corrupt tap message encountered
itemCount (%zu) higher than the limit
tapIndex > number of taps
(%@) ETTapMessage playing tap haptic
v24@?0@"SKNode"8d16
(%@) ETTapMessage displaying tap in scene
removal
/tmp/ETTapMessage-%@.sks
SKFieldNode
SKNode
SKShapeNode
doodle_wisp_stroke
SKEmitterNode
SKKeyframeSequence
doodle_wisp_dots
blends_heartToRndRect65
heartLines
u_tex2
u_tex3
u_speed
u_scale
u_shader_time
compositeHeart
HeartbreakAtlas
warpedHeartAtlas
heart
heartAndBlur
fade
Using duration
Not using duration
<%@:%p bpm:%3.0f duration:%d>
SKTexture
SKShader
SKUniform
{CGPoint=dd}
angerAtlas
scale
com.apple.et.iMessage.buttonTapped
com.apple.et.message.received.transportTime.toApp
com.apple.et.message.received.transportTime.toDaemon
com.apple.et.message.received.type.doodle
com.apple.et.message.received.type.video
com.apple.et.message.received.type.heartbeat
com.apple.et.message.received.type.tap.quickTap
com.apple.et.message.received.type.tap
com.apple.et.message.sent.size
com.apple.et.message.sent.type.doodle
com.apple.et.message.sent.type.heartbeat
com.apple.et.message.sent.type.tap.quickTap
com.apple.et.message.sent.type.tap
com.apple.et.message.expired.unread
com.apple.et.sent.numberOfColors
com.apple.et.message.received.uniqueSenderCount
com.apple.et.phone.buttonTapped
>60s
30-60s
20-30s
10-20s
%d-%ds
%@.%@
Aggd Log Key %@ : transportTime is %f
Attempted to unarchive kiss that was missing points, angles, or delays.
KissAtlas
ETVideoAudioOffPreference
DigitalTouchDemoHook
DigitalTouchDemoHookExportDirectory
DigitalTouchDemoHookMessageDataPath
DigitalTouchDemoHookAssetPath
DemoHook-
AudioOn
AudioOff
Replay
Cancel
Skip
Failed to deactivate audio and notify others of deactivation with error: %@
Not adding nil message
Adding to session unplayed message ID: %@, total count: %lu
%@%@
Can't Export
%@ preference isn't set
No Replay Message
You can only export messages that have just played in full-screen.
Failed to write message
Error: %@, at path: %@
Wrote Message
Path: %@
Done
v32@?0@"ETMessage"8Q16^B24
Ending all playback
Setting video player URL: %@
Missing Demo Message Data
Invalid data at path %@. Not changing incoming message to demo message.
Couldn't Unarchive Demo Message
Not changing incoming message to demo message. Data at path: %@
Movie Path Not Specified
Please set DigitalTouchDemoHookAssetPath preference.
Movie File Not Found
Couldn't find path: %@
Setting media URL: %@, URL exists on disk: %d
root
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
DTSColorPicker
ETPHeader
NSCopying
ETColorPickerView
DTSColorWheelDelegate
NSObject
DTSSceneView
ETPHeartbeat
DTSColorWheel
ETGLSketchView
ETGLSketchRendererDelegate
ETImage
ETPTap
ETMessageHeaderReader
ETSketchMessage
HeartRateStore
DTSForceGestureRecognizer
ETColorGradientView
ETColorWheelView
ETPKiss
ETPointFIFO
ETBoxcarFilterPointFIFO
ETQuadCurvePointFIFO
ETVideoMessage
DTSTypingIndicatorLayer
ETPaletteCircleView
ETPAnger
ETColorConverter
ETReadReceiptMessage
ETCanvasView
ETMessageDelegate
UIGestureRecognizerDelegate
ETMessage
ETColorStore
ETPDoodle
ETGLSketchRenderer
ETPVideo
ETPReadReceipt
ETUtility
ETTapMessage
ETQuickTapMessage
ETHeartbeatMessage
ETAngerMessage
KissNode
ETKissMessage
DTSCanvasViewController
ETCanvasViewDelegate
DTSColorPickerDelegate
ETAdditions
initWithFrame:
didReceiveLongPress:
initWithTarget:action:
addGestureRecognizer:
backgroundColor
paletteCircleDiameter
countByEnumeratingWithState:objects:count:
frame
colorCircleDiameter
center
setFrame:
setCenter:
setNeedsLayout
defaultStore
colors
count
initWithCapacity:
objectAtIndexedSubscript:
setBackgroundColor:
paletteCircleTapped:
requireGestureRecognizerToFail:
addObject:
addSubview:
selectedColorIndex
objectAtIndex:
setSelected:
setSelected:animated:completion:
indexOfObject:
setSelectedColorIndex:
view
selectedCircle
selectCircle:completion:
delegate
colorPickerSelectedColorDidChange:
colorPickerTapped:
state
locationInView:
paletteCircles
lastObject
showColorWheel
selectedColor
colorCircleHorizontalSpacing
setColorCircleSize:
createPaletteCirclesWithParentView:
setDelegate:
isDimmed
setDimmed:
colorCircleSize
setPaletteCircles:
setSelectedCircle:
longPressRecognizer
setLongPressRecognizer:
.cxx_destruct
_paletteCircles
_selectedCircle
_longPressRecognizer
_dimmed
_delegate
_colorCircleSize
T@"NSArray",&,N,V_paletteCircles
T@"ETPaletteCircleView",&,N,V_selectedCircle
T@"UILongPressGestureRecognizer",&,N,V_longPressRecognizer
T@"<DTSColorPickerDelegate>",W,N,V_delegate
T@"UIColor",R,N
dimmed
TB,N,GisDimmed,V_dimmed
TQ,N,V_colorCircleSize
Td,R,N
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithLongLong:
numberWithUnsignedInt:
numberWithBool:
numberWithDouble:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
setMessageData:
setIdentifier:
messageType
setMessageType:
setHasMessageType:
hasMessageType
messageTypeAsString:
StringAsMessageType:
setSendDate:
setHasSendDate:
hasSendDate
hasMessageData
setBaseColor:
setHasBaseColor:
hasBaseColor
hasIdentifier
setSupportsPlaybackTimeOffsets:
setHasSupportsPlaybackTimeOffsets:
hasSupportsPlaybackTimeOffsets
setStartDelay:
setHasStartDelay:
hasStartDelay
readFrom:
writeTo:
mergeFrom:
sendDate
messageData
baseColor
identifier
supportsPlaybackTimeOffsets
startDelay
_sendDate
_startDelay
_baseColor
_identifier
_messageData
_messageType
_supportsPlaybackTimeOffsets
_has
TB,N
Ti,N,V_messageType
Tq,N,V_sendDate
TB,R,N
T@"NSData",&,N,V_messageData
TI,N,V_baseColor
T@"NSString",&,N,V_identifier
TB,N,V_supportsPlaybackTimeOffsets
Td,N,V_startDelay
isEqualToString:
bounds
presentTapReceived:
layoutPaletteCircles
_dismissAnimated:completion:
presentationDelegate
colorPickerViewWillPresent:duration:
colorPickerViewDidPresent:
presentAnimated:completion:
setEnabled:
setIsExpanded:
removeFromSuperview
_isCenterCircle:
_addRotationAnimationFromAngle:toAngle:
setTransform:
setAlpha:
animateWithDuration:delay:options:animations:completion:
isExpanded
colorPickerView:willDismissAnimated:duration:
colorPickerViewDidDismiss:
animationWithKeyPath:
setDuration:
setAdditive:
setRemovedOnCompletion:
setFillMode:
numberWithFloat:
setFromValue:
setToValue:
functionWithName:
setTimingFunction:
begin
layer
removeAnimationForKey:
setCompletionBlock:
addAnimation:forKey:
commit
isHidden
hideColorWheelPickingColor:
performWithoutAnimation:
_shouldReverseLayoutDirection
animateToGray
animateToSelectedColor
setUserInteractionEnabled:
colorWithWhite:alpha:
animateWithDuration:animations:
dismissAnimated:completion:
animateWithDuration:animations:completion:
showColorWheelFromPaletteCircle:rotation:
fadeoutPaletterCirclesInPairs
transformSelectionMarkerToPickerCircleWithCompletion:
colorWheelWidth
movePaletteCircleTowardsViewCenter:distance:
selectionMarker
pickerDiameter
selectionMarkerDiameter
pickerWidth
setBorderWidth:
pickerBorderColor
setBorderColor:
selectionMarkerColor
sendSubviewToBack:
movePalettCircleToOriginalLayoutPosition:
paletteCircleAnimationPairs
fadeoutPaletteCircle:delay:
fadeinPaletteCircle:delay:
arrayWithObjects:count:
fadeinPaletterCirclesInPairs
saveColor:forIndex:
transformPickerCircleToSelectionMarkerWithCompletion:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
colorWheel:willPickColor:
colorWheel:didPickColor:
colorWheel:pickerColorChanged:
initWithFrame:collapsedFrame:
pointInside:withEvent:
animateOffscreen
animateOnscreen
setPresentationDelegate:
_contentView
_collapsedSelectedCircle
_presentTapGestureRecognizer
_expandedFrame
_collapsedFrame
_colorWheelView
_dismissingColorPicker
_selectedCircleRotationAngle
_isExpanded
_presentationDelegate
TB,N,V_isExpanded
T@"<ETColorPickerViewDelegate>",W,N,V_presentationDelegate
setTranslatesAutoresizingMaskIntoConstraints:
leadingAnchor
constraintEqualToAnchor:
trailingAnchor
topAnchor
bottomAnchor
activateConstraints:
defaultCenter
_applicationDidEnterBackground
addObserver:selector:name:object:
_applicationWillEnterForeground
setShouldCullNonVisibleNodes:
setIgnoresSiblingOrder:
setAllowsTransparency:
presentScene:
setPaused:
setPreferredFramesPerSecond:
options
_updateLayout
sharedApplication
applicationState
layoutSubviews
_applicationDidBecomeActive
shouldCullNonVisibleNodes
ignoresSiblingOrder
allowsTransparency
paused
preferredFramesPerSecond
_shouldDelayLayout
_didDelayLayout
_sceneView
_shouldCullNonVisibleNodes
_ignoresSiblingOrder
_allowsTransparency
_paused
_preferredFramesPerSecond
TB,N,V_shouldCullNonVisibleNodes
TB,N,V_ignoresSiblingOrder
TB,N,V_allowsTransparency
TB,N,V_paused
Tq,N,V_preferredFramesPerSecond
T@"NSMutableDictionary",R
setBeatsPerMinute:
setHasBeatsPerMinute:
hasBeatsPerMinute
setHasDuration:
hasDuration
setNormalizedCenterX:
setHasNormalizedCenterX:
hasNormalizedCenterX
setNormalizedCenterY:
setHasNormalizedCenterY:
hasNormalizedCenterY
setRotation:
setHasRotation:
hasRotation
setHeartbreakTime:
setHasHeartbreakTime:
hasHeartbreakTime
beatsPerMinute
duration
normalizedCenterX
normalizedCenterY
rotation
heartbreakTime
_beatsPerMinute
_duration
_heartbreakTime
_normalizedCenterX
_normalizedCenterY
_rotation
Tf,N,V_beatsPerMinute
TI,N,V_duration
Tf,N,V_normalizedCenterX
Tf,N,V_normalizedCenterY
Tf,N,V_rotation
Tf,N,V_heartbreakTime
beganTouches:
finishedTouches
anyObject
updatePickerPositionForPoint:
pickerCircle
bundleForClass:
localizedStringForKey:value:table:
setTitle:forState:
whiteColor
setTitleColor:forState:
doneButtonTapped:
addTarget:action:forControlEvents:
setDoneButton:
colorWheelRadius
gradientWidth
setPickerRotation:
pickerViewHighlightedColor
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
createDoneButtonWithFrame:
setColorWheelRadius:
setGradientWidth:
setPickerDiameter:
hueRotation
setHueRotation:
pickerRotation
setPickerCircle:
doneButton
_colorWheelRadius
_gradientWidth
_pickerDiameter
_hueRotation
_pickerRotation
_pickerCircle
_doneButton
T@"<DTSColorWheelDelegate>",W,N,V_delegate
Td,N,V_colorWheelRadius
Td,N,V_gradientWidth
Td,N,V_pickerDiameter
Td,N,V_hueRotation
Td,N,V_pickerRotation
T@"UIView",&,N,V_pickerCircle
T@"UIButton",&,N,V_doneButton
setCurrentContext:
setOpaque:
dictionaryWithObjects:forKeys:count:
setDrawableProperties:
setAsynchronous:
mainScreen
scale
setContentScaleFactor:
initWithAPI:
setGLContextAsCurrent
initWithContext:andDrawable:
setUseFastVerticalWisp:
setLineWidthScaleFactor:
contentScaleFactor
initWithFIFO:
initWithFIFO:width:spacing:
setUnitSize:
updateRendererWithPoints:count:controlPoint:flush:
setEmissionHandler:
setEmitInterpolatedPoints:
updateRendererWithSecondaryPoints:count:controlPoint:flush:
setWispDelay:
isRenderingOffscreen
setRenderingOffscreen:
didEndWisping
didEndWisp
clear
isPaused
animateOutWithCompletion:
addStrokeWithColor:
CGColor
getRed:green:blue:alpha:
renderer
setFinalDrawingColor:
getHue:saturation:brightness:alpha:
colorWithHue:saturation:brightness:alpha:
setInitialDrawingColor:
strokes
getValue:
hasMultipleColors
colorsInMessage
color
beginStrokeWithColor:
handleTapAtPosition:
handleSketchAtPosition:
didCompleteStroke
setPlaying:
_endPlayback
_drawCurrentPointAdvancingPlayback
render
didDrawPoints
timestamp
supportsPlaybackTimeOffset
_getCurrentSketchPoint:
_doesPoint:predateTime:
hideComet
updateGLWithTime:
createRenderedFrameImageUsingAlpha:
delayWisp
setIsDying:
isRenderingOffscreenOpaque
willBeginWisp
invalidate
drawView:
displayLinkWithTarget:selector:
mainRunLoop
addToRunLoop:forMode:
setDidDrawPoints:
setDidEndWisping:
erase
reset
clearAllPoints
resizeFromLayer:
setSpacing:
addSketchPoint:
appendPointArray:length:
appendDualPointArray:length:controlPoint:alternatePoints:alternateLength:alternateControlPoint:unitSize:segmentIndex:segmentCount:
addPoints:count:
flush
didReachRendererLimit
layerClass
sketchRendererDidReachVertexLimit:
drawFrameBeforeWisp
createRenderedFrameImage
createImageForTime:
isPlaying
wispDelay
timestampForLastDrawnPoint
setTimestampForLastDrawnPoint:
playbackCompleted
setPlaybackCompleted:
useFastVerticalWisp
context
setContext:
setRenderer:
interpolatingFIFO
setInterpolatingFIFO:
smoothingFIFO
setSmoothingFIFO:
pointFIFO
setPointFIFO:
secondaryInterpolatingFIFO
setSecondaryInterpolatingFIFO:
secondarySmoothingFIFO
setSecondarySmoothingFIFO:
secondaryPointFIFO
setSecondaryPointFIFO:
unitSize
vertexBatches
setVertexBatches:
controlBatches
setControlBatches:
vertexBatchCount
setVertexBatchCount:
secondaryVertexBatchCount
setSecondaryVertexBatchCount:
vertexOffset
setVertexOffset:
delayBetweenStrokes
setDelayBetweenStrokes:
.cxx_construct
_displayLink
_currentStrokeColor
_lastDisplayLinkTime
_renderingOffscreen
_currentStrokeIndex
_currentPointIndex
_numberOfDrawnStrokes
_renderingDelay
_renderingStartTime
_pauseTime
_playing
_playbackCompleted
_useFastVerticalWisp
_unitSize
_wispDelay
_timestampForLastDrawnPoint
_context
_renderer
_interpolatingFIFO
_smoothingFIFO
_pointFIFO
_secondaryInterpolatingFIFO
_secondarySmoothingFIFO
_secondaryPointFIFO
_vertexOffset
_delayBetweenStrokes
_vertexBatches
_controlBatches
_vertexBatchCount
_secondaryVertexBatchCount
T@"EAGLContext",&,N,V_context
T@"ETGLSketchRenderer",&,N,V_renderer
T@"ETQuadCurvePointFIFO",&,N,V_interpolatingFIFO
T@"ETBoxcarFilterPointFIFO",&,N,V_smoothingFIFO
T@"ETPointFIFO",&,N,V_pointFIFO
T@"ETQuadCurvePointFIFO",&,N,V_secondaryInterpolatingFIFO
T@"ETBoxcarFilterPointFIFO",&,N,V_secondarySmoothingFIFO
T@"ETPointFIFO",&,N,V_secondaryPointFIFO
Tf,N,V_unitSize
T{vector<std::vector<float __attribute__((ext_vector_type(2)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v^v{__compressed_pair<std::vector<float __attribute__((ext_vector_type(2)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v}},N,V_vertexBatches
T{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}},N,V_controlBatches
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},N,V_vertexBatchCount
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},N,V_secondaryVertexBatchCount
TQ,N,V_vertexOffset
Td,N,V_delayBetweenStrokes
T@"ETSketchMessage",&,N,V_messageData
playing
TB,N,GisPlaying,V_playing
TB,N,GisPaused,V_paused
Td,N,V_wispDelay
Td,N,V_timestampForLastDrawnPoint
TB,N,V_playbackCompleted
TB,N,V_useFastVerticalWisp
etImageNamed:inBundle:
imageNamed:inBundle:
etImageNamed:
setTimeDeltas:
setPoints:
setColors:
hasTimeDeltas
hasPoints
hasColors
timeDeltas
points
_colors
_points
_timeDeltas
T@"NSData",&,N,V_timeDeltas
T@"NSData",&,N,V_points
T@"NSData",&,N,V_colors
initWithData:
identifierInArchive:
messageTypeInArchive:
getSendTime:type:inArchive:
sendTimeInArchive:
array
messageWillReachSizeLimit:
setColor:
timeSource
elapsedTimeSinceStartOfMessage:
valueWithBytes:objCType:
doodleCount
doodleData
bytes
length
colorData
pointTimeDeltaData
initWithArchiveData:
_decodeWithDoodle:
setDoodleCount:
data
setLength:
mutableBytes
setDoodleData:
setColorData:
setPointTimeDeltaData:
parentMessage
childMessageDidDelayWisp:
messageWillStopPlaying:
messageDidStopPlaying:
setParentMessage:
setDelayWisp:
arrayWithCapacity:
setSupportsPlaybackTimeOffset:
numberOfColors
addSketchPoint:atTime:
archiveData
messageTypeAsString
convertToSimulatedPlaybackSpeed
messageDuration
setHasMultipleColors:
setHideComet:
_strokes
_colorsInMessage
_hasMultipleColors
_didEndWisping
_didDrawPoints
_hideComet
TB,N,V_hasMultipleColors
TQ,R,N
TB,N,V_didEndWisping
TB,N,V_didDrawPoints
T@"NSArray",R,N
TB,N,V_hideComet
colorWithRed:green:blue:alpha:
_updateHeartRateEnabled
_updateHeartRateWithCompletion:
isHealthDataAvailable
setHeartRateQuery:
firstObject
quantity
unitFromString:
doubleValueForUnit:
setRecentHeartRate:
endDate
timeIntervalSinceReferenceDate
setRecentHeartRateTime:
date
dateByAddingTimeInterval:
predicateWithFormat:
quantityTypeForIdentifier:
sortDescriptorWithKey:ascending:
initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:
setWithObject:
executeQuery:
requestAuthorizationToShareTypes:readTypes:completion:
isRunningInStoreDemoMode
sharedStore
recentHeartRateWithCompletion:
heartRateQuery
recentHeartRate
recentHeartRateTime
_heartRateEnabled
_healthStore
_heartRateQuery
_recentHeartRate
_recentHeartRateTime
T@"HKQuery",&,N,V_heartRateQuery
TQ,N,V_recentHeartRate
Td,N,V_recentHeartRateTime
force
setState:
_startTime
_hasSufficientForce
clearColor
setImage:
setLineWidth:
setFillColor:
blackColor
setStrokeColor:
setLineCap:
setPath:
setMask:
mask
setStrokeStart:
setStrokeEnd:
removeAllAnimations
prepareToAnimateColorWheelWithRotation:
revealColorWheelWithCompletion:
hideColorWheelWithRotation:completion:
_imageView
titleLabel
systemFontOfSize:
setFont:
setHidden:
hideDoneButton
addPickerCircleForPaletteCircle:
showDoneButtonAnimated
becomeFirstResponder
setCornerRadius:
superview
convertPoint:fromView:
pickerShouldDismissClockwise
resignFirstResponder
hideDoneButtonAnimated
animatePickerToOriginalPosition
colorWheelDismissalRotation
_gradientView
_originalRotation
_originalPickerRotation
_handlingTouches
_selectedColor
T@"UIColor",R,N,V_selectedColor
setDelays:
setAngles:
hasDelays
hasAngles
delays
angles
_angles
_delays
T@"NSData",&,N,V_delays
T@"NSData",&,N,V_angles
setNextFIFO:
emitPoints:count:
nextFIFO
_nextFIFO
T@"ETPointFIFO",&,N,V_nextFIFO
emitAveragedPoint
width
setWidth:
spacing
prevPoints
setPrevPoints:
_spacing
_width
_prevPoints
T{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}},N,V_prevPoints
TQ,N,V_width
Tf,N,V_spacing
emitInterpolatedPoints
emissionHandler
controlPoints
setControlPoints:
lastPoint
setLastPoint:
_emitInterpolatedPoints
_emissionHandler
_lastPoint
_controlPoints
T{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}},N,V_points
T{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}},N,V_controlPoints
T,N,V_lastPoint
TB,N,V_emitInterpolatedPoints
T@?,C,V_emissionHandler
introMessageData
unarchive:
setWithObjects:
playingMessagesData
_strictlyUnarchivedObjectOfClasses:fromData:error:
hasMediaType
mediaType
_mediaTypeFromETPVideoType:
archive
setIntroMessageData:
archivedDataWithRootObject:requiringSecureCoding:error:
setPlayingMessagesData:
_etpMediaTypeFromETMediaType:
setMediaType:
arrayWithArray:
path
dataWithContentsOfFile:
imageWithData:
initWithURL:options:
initWithAsset:
setAppliesPreferredTrackTransform:
setRequestedTimeToleranceAfter:
setRequestedTimeToleranceBefore:
copyCGImageAtTime:actualTime:error:
initWithCGImage:
URLAssetWithURL:options:
setPlayingMessages:
setIntroMessage:
shouldLoopDuringPlayback
playingMessages
canCompressTime
compressTimeSinceStartOfMessage:
stillImage
isAnimated
mediaURL
setMediaURL:
setStillImage:
introMessage
pauseTimeCompression
setPauseTimeCompression:
_playingMessages
_compressedTimeTotal
_compressedTimeLastEventTime
_messageDuration
_pauseTimeCompression
_mediaURL
_stillImage
_introMessage
_mediaType
T@"NSArray",&,N
T@"NSURL",&,N,V_mediaURL
T@"UIImage",&,N,V_stillImage
T@"ETSketchMessage",&,N,V_introMessage
TQ,N,V_mediaType
TB,N,V_pauseTimeCompression
iconImage
setIconImage:
CGImage
iconImageLeadingSpace
iconImageFrame
defaultBubbleColor
defaultThinkingDotColor
_updateSelectionMarkerFrame
isSelected
_selectionMarker
_selected
selected
TB,N,GisSelected,V_selected
T@"UIView",R,N
Tf,N,V_duration
colorSpaceConvertedColor
initWithSize:
setAnchorPoint:
setMasksToBounds:
_heartbeatRecognized:
setNumberOfTouchesRequired:
setMinimumPressDuration:
_tapRecognized:
setDelaysTouchesBegan:
setAllowableMovement:
_kissRecognized:
traitCollection
forceTouchCapability
setForceTouchEnabled:
_configureAngerRecognizer
setMultipleTouchEnabled:
standardUserDefaults
persistentDomainForName:
objectForKey:
doubleValue
setContentMode:
insertSubview:atIndex:
_updatePhotoViewFrame
playerLayerWithPlayer:
addSublayer:
_updateVideoViewFrame
removeFromSuperlayer
setSize:
canvasViewShouldUseFastVerticalWisp:
_sketchInProgress
setTimeSource:
drawingColor
_createSketchViewWithColor:time:message:
_setIsComposingMessageOfType:
endMessageComposition
_startDoodleMessageCompositionAtTime:
canvasView:didBeginComposingMessageType:
_startCheckForIdleTimer
_updateRecognizersAtEndOfComposition
canvasView:didEndComposingMessageType:
canvasView:sendMessage:
_stopCheckForIdleTimer
removeObserver:
dealloc
allValues
_clearSendMessageTimer
isComposing
_startSendMessageTimer
allObjects
setMute:
_setSketchesPaused:
canvasViewDidPause:
canvasViewDidUnpause:
clearCanvasAnimated:
_animateOutSketchView:withCompletion:
_clearDoodleViewForMessage:
removeObjectForKey:
snapshotViewAfterScreenUpdates:
removeAllObjects
removeAllActions
removeAllChildren
_checkForIdle
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
hasActions
children
locationOfTouch:inView:
canvasView:tapRecognizerShouldBegin:
_isTapTooRecentAfterKissGesture
_canComposeExclusiveMessage
_fastTapAllowableMovementTimerFired
_startFastTapAllowableMovementTimer
_viewPointNormalizedInSceneSpace:
_endMessage:withSend:
_sendAnger
_normalizedGesturePoint:
_showAngerAtPoint:
canvasView:didUpdateComposingMessageType:
setNormalizedPoint:atRelativeTime:inScene:
_hideAnger
timeCreated
setNormalizedCenter:
displayInScene:
_angerDurationLimitTimerFired
stopPlaying
reachedSizeLimit
_sendKiss
_angleOfRotationBetweenTwoFingers:
addKissAtNormalizedPoint:angle:time:toScene:
touches
locationInNode:
_tapsInProgress
dateFormatWithMilliseconds:
handleTapAtX:Y:color:time:isRemote:
gestureRecognizers
numberOfTouches
unionSet:
_areRecognizersTrackingMultipleFingers
containsObject:
_sendTaps
handlePanAtX:Y:color:time:state:isRemote:
canvasViewDidBeginStroke:
_doodleEndedWithTouches:cancelled:
minusSet:
isComposingHeartbeat
handleDotAtX:Y:color:time:isRemote:
canvasViewDidEndStroke:
insertSubview:belowSubview:
layoutIfNeeded
sendCurrentMessage
preVisualizeInScene:
size
addTapAtPoint:time:color:
canvasDelegate
canvasViewShouldSendWithTimer:
_sendMessageTimerFired
_sendHeartbeat
_sendSketch
convertPointFromView:
_showHeartbeatAtNormalizedPoint:rotation:
isBroken
breakHeart
_hideHeartbeat
startHeartbeat:
_hideHeartbeatTimerFired
canvasView:didBeginPlayingMessage:
canvasViewWillReachComposingSizeLimit:
canvasView:willEndPlayingMessage:
removeObject:
canvasView:didEndPlayingMessage:
_setNeedsUpdate
canvasViewDidStartMediaAppearance:
canvasViewDidEndMediaAppearance:
removeGestureRecognizer:
_angerRecognized:
canvasView:angerUsesForceTouch:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
showPhotoForImage:
hidePhoto
showVideoForPlayer:
hideVideo
isComposingSketch
startDoodleMessageComposition
_sketchesPaused
setAlwaysPaused:
wispVisibleSketchViewsWithCompletion:
setDrawingColor:
updateIgnoredTouchesRectForStatusBarSize:
composedSketchMessage
setCanComposeTap:
setCanComposeKiss:
setCanComposeAnger:
setCanComposeHeartbeat:
updateCurrentMessageWithHeartRate:
playTestStrokeWithColor:duration:
playMessage:
setUsesMediaAppearance:
willMoveToWindow:
traitCollectionDidChange:
setCanvasDelegate:
canComposeHeartbeat
canComposeTap
canComposeKiss
canComposeAnger
usesMediaAppearance
angerUsesForceTouch
setAngerUsesForceTouch:
_currentSketchView
_currentTaps
_currentHeartbeat
_heartbeatDurationTimer
_heartbeatRecognizer
_heartbeatStartCenter
_lastActivityTimestamp
_touchesBeganTimestamp
_sendMessageTimer
_idleTimer
_setAlwaysPaused
_lastPt
_drawingTouch
_drawingTouchStartedStroke
_drawingTouchMovedDistance
_ignoredTouchesRect
_didIgnoreTouchesBegan
_ignoreTouchesUntilAllTouchesEnded
_touchesDown
_messageIdentifierToDoodleView
_tapRecognizer
_fastTapAllowableMovementTimer
_lastFastTapTimestamp
_kissRecognizer
_currentKissMessage
_angerRecognizer
_currentAnger
_angerDurationLimitTimer
_sketchDidReachSizeLimit
_scene
_photoView
_videoView
_videoLayer
_canComposeHeartbeat
_canComposeTap
_canComposeKiss
_canComposeAnger
_isComposing
_usesMediaAppearance
_angerUsesForceTouch
_canvasDelegate
_timeSource
_drawingColor
_parentMessage
T@"<ETCanvasViewDelegate>",W,N,V_canvasDelegate
T@"<ETMessageTimeSource>",W,N,V_timeSource
T@"UIColor",&,N,V_drawingColor
TB,N,V_canComposeHeartbeat
TB,N,V_canComposeTap
TB,N,V_canComposeKiss
TB,N,V_canComposeAnger
TB,R,N,V_isComposing
TB,N,V_usesMediaAppearance
T@"ETMessage",&,N,V_parentMessage
TB,N,V_angerUsesForceTouch
doesNotRecognizeSelector:
UUID
UUIDString
initWithUUIDString:
setSendTime:
sendTime
spriteNodeWithImageNamed:
setColorBlendFactor:
setScale:
scaleTo:duration:
fadeOutWithDuration:
group:
removeFromParent
runBlock:queue:
sequence:
runAction:
addChild:
dateWithTimeIntervalSinceReferenceDate:
copy
initWithCoder:
encodeWithCoder:
sendTimeIsValid
_stopAudioPlayback
_startAudioPlayback
scenePointFromNormalizedPoint:inScene:
wispChildren
childMessageDidCompleteWisp:
hasWispingChildren
messageVersion
setTimeCreated:
missedDuringPlayback
setMissedDuringPlayback:
setRenderingOffscreenOpaque:
mute
_childrenDelayingWisp
_supportsPlaybackTimeOffset
_missedDuringPlayback
_renderingOffscreenOpaque
_delayWisp
_mute
_messageVersion
_timeCreated
_sendTime
_color
TS,R,N
TQ,R,N,V_messageVersion
Td,N,V_timeCreated
Td,N,V_sendTime
TB,N,V_supportsPlaybackTimeOffset
TB,N,V_missedDuringPlayback
T@"UIColor",&,N,V_color
renderingOffscreen
TB,N,GisRenderingOffscreen,V_renderingOffscreen
renderingOffscreenOpaque
TB,N,GisRenderingOffscreenOpaque,V_renderingOffscreenOpaque
T@"<ETMessageDelegate>",W,N,V_delegate
TB,N,V_delayWisp
T@"ETMessage",W,N,V_parentMessage
animated
TB,R,N,GisAnimated
TB,N,V_mute
addDefaultsObserver
defaultsChanged:
unsignedIntValue
setObject:atIndexedSubscript:
mutableCopy
removeObserver:name:object:
synchronize
unsignedIntegerValue
numberWithUnsignedInteger:
_selectedColorIndex
_selectedIndexLoaded
TQ,N
arrayForKey:
setHasDoodleCount:
hasDoodleCount
hasDoodleData
hasColorData
hasPointTimeDeltaData
_colorData
_doodleCount
_doodleData
_pointTimeDeltaData
TI,N,V_doodleCount
T@"NSData",&,N,V_doodleData
T@"NSData",&,N,V_colorData
T@"NSData",&,N,V_pointTimeDeltaData
setupFBOs:
setupVAOs
setupShaders
setupTexture
currentContext
isDying
renderbufferStorage:fromDrawable:
loadOneShaderOfType:withCString:length:
linkProgramWithVShader:FShader:
resizeFromCachedLayer
updateVertexBufferWithVertexCount:
_warmupShaders
updateGLWithCurrentTime
presentRenderbuffer:
warmupShaders
currentTimeClock
currentTimeIndex
lineWidthScaleFactor
allVertices
setAllVertices:
vertexBufferCount
setVertexBufferCount:
vertexBufferBegin
setVertexBufferBegin:
vertexCount
setVertexCount:
deathTime
setDeathTime:
lastBirth
setLastBirth:
brushColorForInitialColor
setBrushColorForInitialColor:
brushColorForFinalColor
setBrushColorForFinalColor:
shaderProgram
setShaderProgram:
vboVertLineId
setVboVertLineId:
vaoLineID
setVaoLineID:
viewRenderbuffer
setViewRenderbuffer:
viewFramebuffer
setViewFramebuffer:
backingWidth
setBackingWidth:
backingHeight
setBackingHeight:
cometScaleFactor
setCometScaleFactor:
allocatedWidth
setAllocatedWidth:
allocatedHeight
setAllocatedHeight:
cachedLayer
setCachedLayer:
completionBlock
_useThisRendererOnlyForWarmup
_isDying
_currentTimeClock
_currentTimeIndex
_vertexBufferCount
_vertexBufferBegin
_deathTime
_lastBirth
_shaderProgram
_vboVertLineId
_vaoLineID
_viewRenderbuffer
_viewFramebuffer
_backingWidth
_backingHeight
_allocatedWidth
_allocatedHeight
_lineWidthScaleFactor
_allVertices
_vertexCount
_cometScaleFactor
_cachedLayer
_completionBlock
_brushColorForInitialColor
_brushColorForFinalColor
T^{?=},N,V_allVertices
Ti,N,V_vertexBufferCount
Ti,N,V_vertexBufferBegin
TQ,N,V_vertexCount
Tf,N,V_deathTime
Tf,N,V_lastBirth
T,N,V_brushColorForInitialColor
T,N,V_brushColorForFinalColor
TI,N,V_shaderProgram
TI,N,V_vboVertLineId
TI,N,V_vaoLineID
TI,N,V_viewRenderbuffer
TI,N,V_viewFramebuffer
TI,N,V_backingWidth
TI,N,V_backingHeight
Td,N,V_cometScaleFactor
TI,N,V_allocatedWidth
TI,N,V_allocatedHeight
T@"EAGLContext",N,V_context
T@"CAEAGLLayer",N,V_cachedLayer
T@?,C,N,V_completionBlock
Tf,R,N,V_currentTimeClock
Tf,R,N,V_currentTimeIndex
TB,N,V_isDying
T@"<ETGLSketchRendererDelegate>",W,N,V_delegate
TB,N,V_renderingOffscreen
Td,N,V_lineWidthScaleFactor
hasIntroMessageData
hasPlayingMessagesData
setHasMediaType:
mediaTypeAsString:
StringAsMediaType:
_introMessageData
_playingMessagesData
T@"NSData",&,N,V_introMessageData
T@"NSData",&,N,V_playingMessagesData
Ti,N,V_mediaType
stringFromDate:
pathComponents
removePrefixFromDestination:
rangeOfString:
substringFromIndex:
boolValue
integerValue
destinationFromMessageIdentifier:keepPrefix:
isRetailDemo
shouldArchiveSentMessages
lastInteractiveZoomLevel
setDateFormat:
tapCount
exceptionWithName:reason:userInfo:
_displayInScene:point:color:filled:withWisp:
pointAtIndex:
timeDeltaAtIndex:
waitForDuration:
runBlock:
customActionWithDuration:actionBlock:
noiseFieldWithSmoothness:animationSpeed:
setStrength:
setCategoryBitMask:
parent
runAction:withKey:
node
setPosition:
setZPosition:
resetSimulation
setParticleSpeed:
setDensityBased:
setParticleBirthRate:
setTargetNode:
_animateCircleInner0:inner1:outer0:outer1:duration:
setTimingMode:
fadeInWithDuration:
writeToFile:atomically:
_preVisualizeScene
_noiseField
_times
_baseTime
_soundTimer
_soundIndex
_noiseFieldLock
doubleTapMessageWithColor:
nodeWithFileNamed:
initWithKeyframeValues:times:
setInterpolationMode:
setRepeatMode:
setParticleScaleSequence:
setParticleSpeedRange:
setYAcceleration:
setXAcceleration:
setParticleLifetime:
setParticleLifetimeRange:
setParticleDensity:
setEmissionAngleRange:
setEmissionDistance:
setEmissionDistanceRange:
setFieldBitMask:
setFieldInfluenceSequence:
particleColorSequence
getKeyframeValueForIndex:
setKeyframeValue:forIndex:
setParticleColorSequence:
setParticleColor:
_displayInScene:useDuration:
_displayInScene:useDuration:fastStart:
setZRotation:
textureWithImageNamed:
textureNoiseWithSmoothness:size:grayscale:
shaderWithFileNamed:
uniformWithName:texture:
uniformWithName:float:
setUniforms:
setShader:
setBlendMode:
playBeatWithDuration:
repeatActionForever:
colorizeWithColor:colorBlendFactor:duration:
floatValue
setFloatValue:
moveByX:y:duration:
startHeartbeat:fastStart:
setTextureValue:
moveHeartNodeByX:y:duration:
normalizedCenter
_heartNode
_heartLines
_heart
_heartWisp
_linesShader
_heartShader
_speedUniform
_warpedTexAtlasUniform
_burTexUniform
_noiseTexUniform
_scaleUniform
_shaderTimeUniform
_heartScale
_hapticLoopPeriod
_heartbreakAtlas
_broken
_scale
_normalizedCenter
Ti,N,V_duration
Tf,N,V_scale
T{CGPoint=dd},N,V_normalizedCenter
Td,N,V_rotation
broken
TB,R,N,GisBroken,V_broken
Td,R,N,V_heartbreakTime
value:withObjCType:
spriteNodeWithColor:size:
_updateCenterFromNormalizedPoint:inScene:
_anger
Td,N,V_duration
currentCalendar
components:fromDate:
setDay:
dateFromComponents:
compare:
setNode:
kissNodeWithColor:size:
setColorBlendMode:
leavesMark
setLeavesMark:
shader
colorBlendFactor
blendMode
position
zRotation
_leavesMark
_node
_shader
_colorBlendFactor
_blendMode
_zRotation
_position
TB,N,V_leavesMark
T@"SKSpriteNode",&,N,V_node
T@"SKShader",&,N,V_shader
Td,N,V_colorBlendFactor
Tq,N,V_blendMode
T{CGPoint=dd},N,V_position
Td,N,V_zRotation
_initAtlas
_leaveMarkAtDelay:
_displayKissAtPoint:angle:leavesMark:inScene:
_hasKissesThatLeaveMark
_notifyDelegateWillStopPlaying
_notifyDelegateDidStopPlaying
_setKissLeavesMark:
_kissColor
_atlas
_atlasUniform
_kissMarkNodes
_lastKissTime
_lastKiss
_didDelegateWillStopPlaying
_didDelegateDidStopPlaying
boldSystemFontOfSize:
setComposingMessageType:
buttonWithType:
replay
setBackgroundImage:forState:
sizeToFit
setCharge:
audioToggleOffImage
_audioToggleButtonTapped
_cancelButtonTapped
_skipButtonTapped
_sendAutosendingComposition
setPlaybackEnabled:
viewDidLoad
setAccessibilityIgnoresInvertColors:
colorPicker
insertSubview:above:
viewDidAppear:
_canComposeAfterMediaPlayback
usesCompactKeyboardLayout
startMessagePlaybackLoop
_applicationWillResignActive
viewWillDisappear:
viewDidDisappear:
viewWillLayoutSubviews
canvasView
viewDidLayoutSubviews
_updateVideoPlayerUI
_updatePlaybackControls
_updateAudioOnOffButton
sessionHasMultipleMessages
cornerRadius
_cancelButton
_cornerButtonInset
_shouldShowCancelButton
_shouldShowSkipButton
_updateSkipButtonFrame
_replayButton
canReplay
canShowReplayButton
_setShowingReplayButton:
_rightButtonInset
_updateAudioOnOffButtonImage
alpha
isMuted
audioToggleOnImage
sharedInstance
setActive:withOptions:error:
setMuted:
setValue:forKey:
_relinquishAudio
_shouldAutoSend
setPlayingMessage:
_reloadUnplayedMessages
isPlayingMessages
_hideVideoPlayer
_updateColorPickerEnabled
updateVideoUI
_setCachedMessageForReplay:
_playMessage:
_isVisible
setPlayingCompositeMessage:
_startVideoPlayerWithMessage:
_schedulePlaybackOfCompositeMessageContent:
_nonAnimatedMessagePlaybackDuration
messageForReplay
_updateCanvasInteractionEnabled
willBeginSessionPlayback
isViewLoaded
window
isPlayingCompositeMessage
_shouldDimColorPicker
didChangeColorPickerColor
_usingDemoHook
_exportDemoHookMessage
_sendDemoHookMessage
canvasViewController:sendMessage:
_showDemoHookAlertWithTitle:message:
stringByAppendingPathComponent:
writeToFile:options:error:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
enumerateObjectsUsingBlock:
removeObjectAtIndex:
rate
willEndSessionPlaybackInterrupted:
_canLoopMessageDuringPlayback:
_continueMessagePlaybackLoopWithDelay:
canExpireMessages
markAsPlayed
didEndSessionPlayback
currentItem
object
initWithURL:
_videoMessageDidFinishPlaying:
valueForKey:
valueWithCMTime:
_playingParentMessage
addBoundaryTimeObserverForTimes:queue:usingBlock:
seekToTime:
play
pause
didBeginComposingMessage
_startComposeSessionEndTimer
didEndComposingMessage
deferMessageSend
_updateSendButton
_tapRecognizerShouldBegin:
_setAngerUsesForceTouch:
playingMessage
_canStartMessagePlaybackLoop
_playNextMessage
createSessionMessages
_stopPlaybackAnimated:
_composeSessionEndTimerFired
hasMessageForReplay
addUnplayedMessage:
setAutoPlayOnAppearanceDisabled:
hasPrefix:
defaultManager
fileExistsAtPath:
fileURLWithPath:
convertRect:toView:
replayButtonFont
setDataSource:
shouldAutorotate
supportedInterfaceOrientations
_audioToggleButton
setComposingCompositeMessage:
setComposeDisabled:
clearDeferredMessages
_clearComposeSessionEndTimer
_skipButton
_setReplayButton:
dataSource:didReceiveSessionMessage:
dataSourceShouldUseDemoHook:
dataSource:startPlaybackWithCompletion:
dataSource:addDemoHookToMessage:
dataSourceStopPlayback:
dataSourceViewIsMostlyVisible:
dataSource:didUpdateAttachmentURL:forMessageWithIdentifier:
minimumBottomMargin
setBottomMargin:
sendDelegate
setSendDelegate:
composingMessageType
isComposingCompositeMessage
mediaMessagePlayTrackerTime
setMediaMessagePlayTrackerTime:
isComposeDisabled
isAutoPlayOnAppearanceDisabled
ignoreAppearanceCallbacks
setIgnoreAppearanceCallbacks:
setCanvasView:
setColorPicker:
setDeferMessageSend:
deferredMessages
setUsesCompactKeyboardLayout:
overrideAudioDefaultToOff
setOverrideAudioDefaultToOff:
isPlaybackEnabled
bottomMargin
dataSource
balloonPlaybackCompletion
setBalloonPlaybackCompletion:
setMessageForReplay:
_unplayedMessages
_isPlayingMessage
_playbackEnabled
_showingReplayButton
_composeSessionEndTimer
_deferredMessages
_videoPlayer
_composingCompositeMessage
_playingCompositeMessage
_composeDisabled
_autoPlayOnAppearanceDisabled
_ignoreAppearanceCallbacks
_deferMessageSend
_usesCompactKeyboardLayout
_overrideAudioDefaultToOff
_composingMessageType
_sendDelegate
_mediaMessagePlayTrackerTime
_canvasView
_playingMessage
_colorPicker
_bottomMargin
_dataSource
_balloonPlaybackCompletion
_messageForReplay
T@"DTSColorPicker",&,N,V_colorPicker
T@"ETBalloonPluginDataSource",W,N,V_dataSource
T@?,C,N,V_balloonPlaybackCompletion
T@"ETMessage",&,N,V_messageForReplay
T@"<DTSCanvasViewControllerSendDelegate>",W,N,V_sendDelegate
TS,N,V_composingMessageType
composingCompositeMessage
TB,N,GisComposingCompositeMessage,V_composingCompositeMessage
playingCompositeMessage
TB,N,GisPlayingCompositeMessage,V_playingCompositeMessage
Td,N,V_mediaMessagePlayTrackerTime
composeDisabled
TB,N,GisComposeDisabled,V_composeDisabled
autoPlayOnAppearanceDisabled
TB,N,GisAutoPlayOnAppearanceDisabled,V_autoPlayOnAppearanceDisabled
TB,N,V_ignoreAppearanceCallbacks
T@"ETCanvasView",&,N,V_canvasView
TB,N,GisPlayingMessages,V_playingMessages
T@"ETMessage",&,N,V_playingMessage
TB,N,V_deferMessageSend
T@"NSArray",R,N,V_deferredMessages
TB,N,V_usesCompactKeyboardLayout
TB,N,V_overrideAudioDefaultToOff
playbackEnabled
TB,N,GisPlaybackEnabled,V_playbackEnabled
Td,N,V_bottomMargin
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
_et_secureArchivedDataWithRootObject:
initForReadingFromData:error:
decodeObjectOfClasses:forKey:
_et_secureUnarchiveObjectOfClasses:withData:
_et_secureUnarchiveObjectOfClass:withData:
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@16@0:8
d16@0:8
v24@0:8Q16
v24@0:8@16
v32@0:8@16@?24
v16@0:8
B16@0:8
v20@0:8B16
Q16@0:8
@"NSArray"
@"ETPaletteCircleView"
@"UILongPressGestureRecognizer"
@"<DTSColorPickerDelegate>"
@24@0:8^{_NSZone=}16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
v24@0:8q16
v20@0:8I16
v24@0:8d16
B24@0:8@16
q16@0:8
I16@0:8
@"NSString"
@"NSData"
{?="sendDate"b1"startDelay"b1"baseColor"b1"messageType"b1"supportsPlaybackTimeOffsets"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"DTSColorWheel"16@"UIColor"24
@80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
B40@0:8{CGPoint=dd}16@32
v28@0:8B16@?20
v32@0:8d16d24
B24@0:8Q16
v24@0:8@?16
v32@0:8@16d24
@"UIView"
@"UITapGestureRecognizer"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"ETColorWheelView"
@"<ETColorPickerViewDelegate>"
@"SKView"
v20@0:8f16
f16@0:8
{?="beatsPerMinute"b1"duration"b1"heartbreakTime"b1"normalizedCenterX"b1"normalizedCenterY"b1"rotation"b1}
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGPoint=dd}16
@"<DTSColorWheelDelegate>"
@"UIButton"
v24@0:8@"ETGLSketchRenderer"16
B32@0:8^{?={?=SS}{?=S}}16d24
B24@0:8^{?={?=SS}{?=S}}16
^{CGImage=}16@0:8
^{CGImage=}24@0:8d16
v44@0:8^16Q24^32B40
{vector<std::vector<float __attribute__((ext_vector_type(2)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v^v{__compressed_pair<std::vector<float __attribute__((ext_vector_type(2)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v}}16@0:8
v40@0:8{vector<std::vector<float __attribute__((ext_vector_type(2)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v^v{__compressed_pair<std::vector<float __attribute__((ext_vector_type(2)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v}}16
{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}}16@0:8
v40@0:8{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}}16
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
v40@0:8{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16
@"CADisplayLink"
@"UIColor"
@"ETSketchMessage"
@"EAGLContext"
@"ETGLSketchRenderer"
@"ETQuadCurvePointFIFO"
@"ETBoxcarFilterPointFIFO"
@"ETPointFIFO"
{vector<std::vector<float __attribute__((ext_vector_type(2)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<float __attribute__((ext_vector_type(2)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>="__value_"^v}}
{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>="__value_"^}}
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
@24@0:8@16
@32@0:8@16@24
S24@0:8@16
v40@0:8^d16^S24@32
d24@0:8@16
S16@0:8
v40@0:8{CGPoint=dd}16d32
@"NSMutableArray"
@"HKHealthStore"
@"HKQuery"
v32@0:8d16@?24
@"UIImageView"
^{CGColor=}16@0:8
@"ETColorGradientView"
v32@0:8^16Q24
@36@0:8@16Q24f32
@?16@0:8
16@0:8
v24@0:816
Q20@0:8i16
i24@0:8Q16
d24@0:8d16
@"NSURL"
@"UIImage"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8B16B20@?24
{?="duration"b1"normalizedCenterX"b1"normalizedCenterY"b1}
v24@0:8@"ETMessage"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v20@0:8S16
v28@0:8@16B24
v32@0:8{CGSize=dd}16
{CGPoint=dd}24@0:8@16
v40@0:8@16d24@32
v44@0:8f16f20@24d32B40
v52@0:8f16f20@24d32q40B48
{CGPoint=dd}32@0:8{CGPoint=dd}16
@"NSMutableSet"
@"ETGLSketchView"
@"ETTapMessage"
@"ETHeartbeatMessage"
@"NSTimer"
{CGPoint="x"d"y"d}
@"UITouch"
@"NSMutableDictionary"
@"ETKissMessage"
@"ETAngerMessage"
@"SKScene"
@"DTSSceneView"
@"AVPlayerLayer"
@"<ETCanvasViewDelegate>"
@"<ETMessageTimeSource>"
@"ETMessage"
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
@"<ETMessageDelegate>"
v32@0:8@16Q24
{?="doodleCount"b1}
v24@0:8^16
i32@0:8I16r*20i28
i24@0:8i16i20
v84@0:8^16Q2432^40Q4856f64Q68Q76
^{CGImage=}20@0:8B16
^{?=}16@0:8
v24@0:8^{?=}16
v32@0:816
@"<ETGLSketchRendererDelegate>"
^{?=}
@"CAEAGLLayer"
{?="mediaType"b1}
@28@0:8@16B24
{CGPoint=dd}24@0:8Q16
d24@0:8Q16
v48@0:8{CGPoint=dd}16d32@40
@56@0:8d16d24d32d40d48
v56@0:8@16{CGPoint=dd}24@40B48B52
@"SKFieldNode"
{vector<CGPoint, std::allocator<CGPoint>>="__begin_"^{CGPoint}"__end_"^{CGPoint}"__end_cap_"{__compressed_pair<CGPoint *, std::allocator<CGPoint>>="__value_"^{CGPoint}}}
{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v32@0:8@16B24B28
v40@0:8d16d24d32
{CGPoint=dd}16@0:8
@"SKNode"
@"SKSpriteNode"
@"SKEmitterNode"
@"SKShader"
@"SKUniform"
@"SKTexture"
v40@0:8{CGPoint=dd}16@32
@40@0:8@16{CGSize=dd}24
B24@0:8d16
v56@0:8{CGPoint=dd}16d32d40@48
v52@0:8{CGPoint=dd}16d32B40@44
@"KissNode"
v28@0:8@16S24
v32@0:8@"ETCanvasView"16@"ETMessage"24
v28@0:8@"ETCanvasView"16S24
v24@0:8@"ETCanvasView"16
B24@0:8@"ETCanvasView"16
B32@0:8@"ETCanvasView"16@"UITapGestureRecognizer"24
v28@0:8@"ETCanvasView"16B24
v24@0:8@"DTSColorPicker"16
B32@0:8@16^@24
v40@0:8@16@24@32
@"AVPlayer"
@"<DTSCanvasViewControllerSendDelegate>"
@"ETCanvasView"
@"DTSColorPicker"
@"ETBalloonPluginDataSource"
@32@0:8#16@24
333333
333333
333333
@(#)PROGRAM:DigitalTouchShared  PROJECT:ET-1
'8>OXw
333333
?333333
?ffffff
?ffffff
8IZk
 J@<N
A333333
Mb@?{
<VUU
?ffffff
?333333
?ffffff
?ffffff
x-et-notify
sender
type
unreadCount
addr
fromID
guid
ETAppViewControllerActivatedNotification
ETAppViewControllerDeactivatedNotification
etPeoplePickerScrollTest1up
etPeoplePickerScrollTest2up
etPeoplePickerScrollTest3up
com.apple.ET
com.apple.ET.app
ETUserTappedOnNotificationNotification
ETPersonUnreadMessageStatusChangedNotification
UnreadMessageCountKey
ETPairedSyncStateChangedNotification
PairedSyncState
v12@?0B8
v8@?0
%@ %@
messageType
sendDate
messageData
baseColor
identifier
supportsPlaybackTimeOffsets
startDelay
QuickTap
Heartbeat
Doodle
ReadReceipt
Video
Kiss
Anger
(unknown: %i)
ColorPickerRotationAnimationKey
transform.rotation.z
SKView
Unable to find class %s
beatsPerMinute
duration
normalizedCenterX
normalizedCenterY
rotation
heartbreakTime
DigitalTouchShared-Localizable
COLOR_PICKER_DONE_TEXT
DigitalTouch
ERROR: Couldn't allocate EAGLContext
ERROR: Couldn't allocate ETGLSketchRenderer
v36@?0^8Q16^24B32
Completed animation. Stopping displaylink and removing view
message playback mode has begun
Clearing Renderer
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
timeDeltas
points
colors
doodle
heartbeat
quick-tap
read-receipt
video
kiss
anger
unknown (%d)
{?={?=SS}{?=S}}
Drawing
NanoLifestylePrivacyEnableHeartRateNotification
EnableHeartRate
com.apple.nanolifestyle.privacy
count/min
v32@?0@"HKSampleQuery"8@"NSArray"16@"NSError"24
%K >= %@
v20@?0B8@"NSError"12
color-wheel-gradient
strokeEnd
strokeStart
position
delays
angles
Error unarchiving ETVideoMessage: %@
TypingIndicatorIcon
ETWispDelay
ignoreBackgroundNotifications
Ending message: %@. Will send: %d
(%@) Got tap!
(%@) UITouchPhaseBegan
(%@) UITouchPhaseEnded
ERROR: Failed to allocate ETGLSketchView for message: %@
Ending %@, will send: %d
v16@?0Q8
Displaying message %@ in scene %@
SKScene
Unknown message type %du (%@)
%s: unarchived Digital Touch message header has a malformed identifier! ("%@")
+[ETMessage unarchive:]
Cannot archive message of type %@
Unknown
%@: %p; messageType: %@, time created: %@ (%f), sendTime: %@ (%f), identifier: %@
SKSetResourceBundle
SKSpriteNode
SKAction
ETColorPickerColorData
ETColorPickerColors
ETColorPickerSelectedIndex
ETColorPrefsChangedExternallyNotification
doodleCount
doodleData
colorData
pointTimeDeltaData
%s: glGetError(0x%x)
-[ETGLSketchRenderer initWithContext:andDrawable:]
w and h -  %i %i
failed to make complete framebuffer object %x
Redundantly resizing Sketch renderer
resizing layer -  %i %i
-[ETGLSketchRenderer resizeFromCachedLayer]
-[ETGLSketchRenderer updateVertexBufferWithVertexCount:]
-[ETGLSketchRenderer _warmupShaders]
Unexpected failure to make complete framebuffer object during warmup (0x%04x)
Unexpected failure to create context during shader warmup
Error: GLSketch being asked to -render into a 0x0 viewport!
-[ETGLSketchRenderer render]
-[ETGLSketchRenderer setLineWidthScaleFactor:]
#version 100
#extension GL_EXT_separate_shader_objects : enable
layout(location = 0) attribute vec4 in_Vertex;
layout(location = 1) attribute vec4 in_InitialColor;
layout(location = 2) attribute vec4 in_FinalColor;
layout(location = 3) attribute vec4 in_TimesAndNoise;
layout(location = 4) attribute vec4 in_PointSize;
layout(location = 5) attribute float in_CurrentTime;
layout(location = 6) attribute float in_DeathTime;
layout(location = 7) attribute float in_LastBirthTime;
layout(location = 8) attribute float in_DeathPerPoint;
layout(location = 9) attribute float in_DeathUntilKill;
varying mediump vec4  out_Color;
void main(void)
mediump float cometLife = 0.3;
mediump float colorChangeTime = 5.25;
mediump float relaxationTime = 5.0;
mediump float life = (in_CurrentTime - in_TimesAndNoise.x);
mediump float birthToDeathRatio = in_TimesAndNoise.y/in_LastBirthTime;
mediump float kTimeIndexIncrement = 0.016666666667;
mediump float cometLifeRatio;
mediump float deathRatio;
mediump float deathRatioTriangle;
mediump float tailRatio;
deathRatio = (in_CurrentTime - in_DeathTime);
deathRatio = clamp(deathRatio - birthToDeathRatio * (in_DeathUntilKill - in_DeathPerPoint), 0.0, in_DeathPerPoint) / in_DeathPerPoint;
tailRatio = step((in_LastBirthTime - 500.0 * kTimeIndexIncrement)/in_LastBirthTime, birthToDeathRatio) * step(0.01, deathRatio) * birthToDeathRatio * deathRatio;
cometLifeRatio = 1.0 - clamp(life, 0.0, cometLife) / cometLife;
cometLifeRatio = smoothstep(0.0, 1.0, cometLifeRatio);
mediump float relaxationRatio = clamp(life, 0.0, relaxationTime) / relaxationTime;
mediump float colorChangeRatio = clamp(life, 0.0, colorChangeTime) / colorChangeTime;
deathRatioTriangle = 1.0 - clamp(abs((deathRatio - 0.25) * 4.0), 0.0, 1.0);
vec2 pos = vec2(in_Vertex.xy + (in_Vertex.zw - in_Vertex.xy) * relaxationRatio * relaxationRatio * relaxationRatio * (relaxationRatio * (relaxationRatio * 6. - 15.) + 10.));
pos = pos + ((1.0+in_PointSize.z) * in_TimesAndNoise.zw * deathRatio * deathRatio * (1.0 + (tailRatio * tailRatio * tailRatio * 1.25)));
mediump float deathTime = in_CurrentTime - in_DeathTime;
pos = (pos * (1.0-(in_PointSize.z*0.3)*deathTime*deathTime)) + vec2(0.0, in_PointSize.z*deathTime*deathTime*deathTime);
gl_Position = vec4(pos, 0.0, 1.0);
gl_PointSize = (1.0 + 7.0 * cometLifeRatio * in_PointSize.y) * in_PointSize.x;
gl_PointSize -= (gl_PointSize-1.0) * deathRatio * deathRatio * deathRatio;
gl_PointSize += 31.0 * tailRatio * tailRatio * tailRatio * in_PointSize.y;
out_Color = mix(in_InitialColor, in_FinalColor, colorChangeRatio);
out_Color.rgb = mix(out_Color.rgb, vec3(1.0), cometLifeRatio + deathRatioTriangle * 0.3);
out_Color.a = (1.0 - deathRatio) * (1.0 - tailRatio) * (0.15 + 0.85 * (1.0 - cometLifeRatio));
#version 100
uniform mediump sampler2D theTex;
varying mediump vec4  out_Color;
void main(void)
gl_FragColor = out_Color;
gl_FragColor.a *= texture2D(theTex, gl_PointCoord).r;
gl_FragColor.rgb *= gl_FragColor.a;
introMessageData
playingMessagesData
mediaType
Photo
ETLoggingEnabled
ETSceneLoggingEnabled
ETEarlyLoadEnabled
ETLastInteractiveZoomLevel
ETArchiveSentMessages
mailto:
tel:
yyyy-MM-dd-HH:mm:ss.SSS
Corrupt tap message encountered
itemCount (%zu) higher than the limit
tapIndex > number of taps
(%@) ETTapMessage playing tap haptic
v24@?0@"SKNode"8d16
(%@) ETTapMessage displaying tap in scene
removal
/tmp/ETTapMessage-%@.sks
SKFieldNode
SKNode
SKShapeNode
doodle_wisp_stroke
SKEmitterNode
SKKeyframeSequence
doodle_wisp_dots
blends_heartToRndRect65
heartLines
u_tex2
u_tex3
u_speed
u_scale
u_shader_time
compositeHeart
HeartbreakAtlas
warpedHeartAtlas
heart
heartAndBlur
fade
Using duration
Not using duration
<%@:%p bpm:%3.0f duration:%d>
SKTexture
SKShader
SKUniform
{CGPoint=dd}
angerAtlas
scale
com.apple.et.iMessage.buttonTapped
com.apple.et.message.received.transportTime.toApp
com.apple.et.message.received.transportTime.toDaemon
com.apple.et.message.received.type.doodle
com.apple.et.message.received.type.video
com.apple.et.message.received.type.heartbeat
com.apple.et.message.received.type.tap.quickTap
com.apple.et.message.received.type.tap
com.apple.et.message.sent.size
com.apple.et.message.sent.type.doodle
com.apple.et.message.sent.type.heartbeat
com.apple.et.message.sent.type.tap.quickTap
com.apple.et.message.sent.type.tap
com.apple.et.message.expired.unread
com.apple.et.sent.numberOfColors
com.apple.et.message.received.uniqueSenderCount
com.apple.et.phone.buttonTapped
>60s
30-60s
20-30s
10-20s
%d-%ds
%@.%@
Aggd Log Key %@ : transportTime is %f
Attempted to unarchive kiss that was missing points, angles, or delays.
KissAtlas
ETVideoAudioOffPreference
DigitalTouchDemoHook
DigitalTouchDemoHookExportDirectory
DigitalTouchDemoHookMessageDataPath
DigitalTouchDemoHookAssetPath
DemoHook-
AudioOn
AudioOff
Replay
Cancel
Skip
Failed to deactivate audio and notify others of deactivation with error: %@
Not adding nil message
Adding to session unplayed message ID: %@, total count: %lu
%@%@
Can't Export
%@ preference isn't set
No Replay Message
You can only export messages that have just played in full-screen.
Failed to write message
Error: %@, at path: %@
Wrote Message
Path: %@
Done
v32@?0@"ETMessage"8Q16^B24
Ending all playback
Setting video player URL: %@
Missing Demo Message Data
Invalid data at path %@. Not changing incoming message to demo message.
Couldn't Unarchive Demo Message
Not changing incoming message to demo message. Data at path: %@
Movie Path Not Specified
Please set DigitalTouchDemoHookAssetPath preference.
Movie File Not Found
Couldn't find path: %@
Setting media URL: %@, URL exists on disk: %d
root
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
softlink:r:path:/System/Library/Frameworks/SpriteKit.framework/SpriteKit
DTSColorPicker
ETPHeader
NSCopying
ETColorPickerView
DTSColorWheelDelegate
NSObject
DTSSceneView
ETPHeartbeat
DTSColorWheel
ETGLSketchView
ETGLSketchRendererDelegate
ETImage
ETPTap
ETMessageHeaderReader
ETSketchMessage
HeartRateStore
DTSForceGestureRecognizer
ETColorGradientView
ETColorWheelView
ETPKiss
ETPointFIFO
ETBoxcarFilterPointFIFO
ETQuadCurvePointFIFO
ETVideoMessage
DTSTypingIndicatorLayer
ETPaletteCircleView
ETPAnger
ETColorConverter
ETReadReceiptMessage
ETCanvasView
ETMessageDelegate
UIGestureRecognizerDelegate
ETMessage
ETColorStore
ETPDoodle
ETGLSketchRenderer
ETPVideo
ETPReadReceipt
ETUtility
ETTapMessage
ETQuickTapMessage
ETHeartbeatMessage
ETAngerMessage
KissNode
ETKissMessage
DTSCanvasViewController
ETCanvasViewDelegate
DTSColorPickerDelegate
ETAdditions
isHealthDataAvailable
setBackgroundColor:
writeToFile:atomically:
containsObject:
setFieldBitMask:
setNeedsLayout
isHidden
applicationState
resetSimulation
functionWithName:
setBackgroundImage:forState:
contentScaleFactor
setFieldInfluenceSequence:
writeToFile:options:error:
resignFirstResponder
mutableBytes
gestureRecognizers
setFillColor:
convertPoint:fromView:
timeIntervalSinceReferenceDate
getHue:saturation:brightness:alpha:
isMuted
mutableCopy
setFillMode:
imageNamed:inBundle:
convertPointFromView:
archivedDataWithRootObject:requiringSecureCoding:error:
_setNeedsUpdate
getKeyframeValueForIndex:
imageWithData:
shaderWithFileNamed:
timestamp
array
convertRect:toView:
UUID
setBorderColor:
getRed:green:blue:alpha:
nodeWithFileNamed:
indexOfObject:
sharedApplication
copy
setFloatValue:
actionWithTitle:style:handler:
titleLabel
arrayForKey:
setBorderWidth:
getValue:
noiseFieldWithSmoothness:animationSpeed:
activateConstraints:
setFont:
copyCGImageAtTime:actualTime:error:
sharedInstance
topAnchor
displayLinkWithTarget:selector:
arrayWithArray:
predicateWithFormat:
addAction:
initForReadingFromData:error:
arrayWithCapacity:
setNumberOfTouchesRequired:
touches
doesNotRecognizeSelector:
group:
runAction:withKey:
setCategoryBitMask:
setFrame:
addAnimation:forKey:
cornerRadius
arrayWithObjects:count:
trailingAnchor
isRunningInStoreDemoMode
initRequiringSecureCoding:
setObject:atIndexedSubscript:
runBlock:
_shouldReverseLayoutDirection
setCenter:
center
setSize:
numberOfTouches
initWithAPI:
setFromValue:
count
setObject:forKey:
addBoundaryTimeObserverForTimes:queue:usingBlock:
traitCollection
runBlock:queue:
numberWithBool:
isViewLoaded
setCharge:
countByEnumeratingWithState:objects:count:
addChild:
presentRenderbuffer:
setOpaque:
numberWithDouble:
initWithAsset:
lastObject
backgroundColor
numberWithFloat:
doubleValue
children
addGestureRecognizer:
initWithCGImage:
presentViewController:animated:completion:
layer
doubleValueForUnit:
scaleTo:duration:
setParticleBirthRate:
numberWithLongLong:
setStrength:
initWithCapacity:
layoutIfNeeded
setParticleColor:
uniformWithName:float:
numberWithUnsignedInt:
setStrokeColor:
hasActions
addObject:
quantity
setHidden:
size
createSessionMessages
becomeFirstResponder
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setParticleColorSequence:
setStrokeEnd:
uniformWithName:texture:
numberWithUnsignedInteger:
addObserver:selector:name:object:
initWithData:
quantityTypeForIdentifier:
currentCalendar
sizeToFit
leadingAnchor
elapsedTimeSinceStartOfMessage:
unionSet:
setParticleDensity:
clearColor
setStrokeStart:
seekToTime:
object
currentContext
rangeOfString:
begin
unitFromString:
setParticleLifetime:
objectAtIndex:
setContentMode:
setIconImage:
snapshotViewAfterScreenUpdates:
rate
currentItem
length
unsignedIntValue
objectAtIndexedSubscript:
setContentScaleFactor:
setParticleLifetimeRange:
sortDescriptorWithKey:ascending:
customActionWithDuration:actionBlock:
blackColor
unsignedIntegerValue
setParticleScaleSequence:
setCornerRadius:
objectForKey:
encodeObject:forKey:
setTargetNode:
data
initWithKeyframeValues:times:
spriteNodeWithColor:size:
setParticleSpeed:
boldSystemFontOfSize:
setTextureValue:
encodedData
setCurrentContext:
initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:
setImage:
dataWithContentsOfFile:
addSublayer:
removeAllActions
spriteNodeWithImageNamed:
setParticleSpeedRange:
endDate
localizedStringForKey:value:table:
setDateFormat:
boolValue
addSubview:
date
removeAllAnimations
standardUserDefaults
initWithSize:
bottomAnchor
setPath:
locationInNode:
setDay:
initWithTarget:action:
dateByAddingTimeInterval:
removeAllChildren
setInterpolationMode:
locationInView:
bounds
setTimingFunction:
colorPickerView:willDismissAnimated:duration:
enumerateObjectsUsingBlock:
addTarget:action:forControlEvents:
removeAllObjects
initWithURL:
locationOfTouch:inView:
colorPickerViewDidDismiss:
setTimingMode:
parent
removeAnimationForKey:
addToRunLoop:forMode:
initWithURL:options:
bundleForClass:
dateFromComponents:
colorPickerViewDidPresent:
setTitle:forState:
setDelaysTouchesBegan:
initWithUUIDString:
dateWithTimeIntervalSinceReferenceDate:
sendSubviewToBack:
mainRunLoop
buttonWithType:
setTitleColor:forState:
colorPickerViewWillPresent:duration:
_strictlyUnarchivedObjectOfClasses:fromData:error:
particleColorSequence
state
removeFromSuperlayer
setKeyframeValue:forIndex:
insertSubview:above:
alertControllerWithTitle:message:preferredStyle:
mainScreen
bytes
exceptionWithName:reason:userInfo:
setToValue:
path
setDensityBased:
removeFromSuperview
CGImage
insertSubview:atIndex:
allObjects
executeQuery:
sequence:
decodeObjectOfClasses:forKey:
markAsPlayed
setTransform:
pathComponents
hasPrefix:
defaultCenter
setLength:
allValues
insertSubview:belowSubview:
removeGestureRecognizer:
mask
fadeInWithDuration:
value:withObjCType:
sessionHasMultipleMessages
setTranslatesAutoresizingMaskIntoConstraints:
pause
allocWithZone:
setLineCap:
removeObject:
integerValue
stringByAppendingPathComponent:
defaultManager
fadeOutWithDuration:
valueForKey:
performWithoutAnimation:
setUniforms:
setLineWidth:
stringFromDate:
alpha
removeObjectAtIndex:
valueWithBytes:objCType:
setAccessibilityIgnoresInvertColors:
persistentDomainForName:
stringWithFormat:
removeObjectForKey:
setActive:withOptions:error:
valueWithCMTime:
invalidate
setMask:
removeObserver:
view
setAdditive:
setUserInteractionEnabled:
colorWithHue:saturation:brightness:alpha:
URLAssetWithURL:options:
setMasksToBounds:
removeObserver:name:object:
substringFromIndex:
setAllowableMovement:
waitForDuration:
setDrawableProperties:
colorWithRed:green:blue:alpha:
superview
colorWithWhite:alpha:
fileExistsAtPath:
setValue:forKey:
dictionary
setAlpha:
whiteColor
UUIDString
fileURLWithPath:
colorizeWithColor:colorBlendFactor:duration:
animateWithDuration:animations:
CGColor
renderbufferStorage:fromDrawable:
setWithObject:
setEmissionAngleRange:
animateWithDuration:animations:completion:
dictionaryWithObjects:forKeys:count:
synchronize
setRemovedOnCompletion:
firstObject
setAnchorPoint:
setWithObjects:
setEmissionDistance:
animateWithDuration:delay:options:animations:completion:
systemFontOfSize:
setMinimumPressDuration:
repeatActionForever:
floatValue
commit
setEmissionDistanceRange:
setXAcceleration:
play
animationWithKeyPath:
setAppliesPreferredTrackTransform:
minusSet:
setRepeatMode:
window
setYAcceleration:
compare:
isEqualToString:
anyObject
requestAuthorizationToShareTypes:readTypes:completion:
setMultipleTouchEnabled:
textureNoiseWithSmoothness:size:grayscale:
setAsynchronous:
force
setRequestedTimeToleranceAfter:
setZPosition:
components:fromDate:
requireGestureRecognizerToFail:
setRequestedTimeToleranceBefore:
forceTouchCapability
textureWithImageNamed:
moveByX:y:duration:
canvasViewController:sendMessage:
constraintEqualToAnchor:
setEnabled:
playerLayerWithPlayer:
setMuted:
frame
initWithFrame:
didReceiveLongPress:
paletteCircleTapped:
selectedColor
colorCircleHorizontalSpacing
colorCircleDiameter
setColorCircleSize:
createPaletteCirclesWithParentView:
selectCircle:completion:
showColorWheel
delegate
setDelegate:
isDimmed
setDimmed:
colorCircleSize
paletteCircles
setPaletteCircles:
selectedCircle
setSelectedCircle:
longPressRecognizer
setLongPressRecognizer:
.cxx_destruct
_paletteCircles
_selectedCircle
_longPressRecognizer
_dimmed
_delegate
_colorCircleSize
T@"NSArray",&,N,V_paletteCircles
T@"ETPaletteCircleView",&,N,V_selectedCircle
T@"UILongPressGestureRecognizer",&,N,V_longPressRecognizer
T@"<DTSColorPickerDelegate>",W,N,V_delegate
T@"UIColor",R,N
dimmed
TB,N,GisDimmed,V_dimmed
TQ,N,V_colorCircleSize
Td,R,N
description
copyWithZone:
messageType
setMessageType:
setHasMessageType:
hasMessageType
messageTypeAsString:
StringAsMessageType:
setSendDate:
setHasSendDate:
hasSendDate
hasMessageData
setBaseColor:
setHasBaseColor:
hasBaseColor
hasIdentifier
setSupportsPlaybackTimeOffsets:
setHasSupportsPlaybackTimeOffsets:
hasSupportsPlaybackTimeOffsets
setStartDelay:
setHasStartDelay:
hasStartDelay
dictionaryRepresentation
readFrom:
writeTo:
isEqual:
hash
mergeFrom:
sendDate
messageData
setMessageData:
baseColor
identifier
setIdentifier:
supportsPlaybackTimeOffsets
startDelay
_sendDate
_startDelay
_baseColor
_identifier
_messageData
_messageType
_supportsPlaybackTimeOffsets
_has
TB,N
Ti,N,V_messageType
Tq,N,V_sendDate
TB,R,N
T@"NSData",&,N,V_messageData
TI,N,V_baseColor
T@"NSString",&,N,V_identifier
TB,N,V_supportsPlaybackTimeOffsets
Td,N,V_startDelay
presentTapReceived:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
colorWheel:willPickColor:
colorWheel:didPickColor:
colorWheel:pickerColorChanged:
initWithFrame:collapsedFrame:
layoutPaletteCircles
pointInside:withEvent:
presentAnimated:completion:
dismissAnimated:completion:
_addRotationAnimationFromAngle:toAngle:
_dismissAnimated:completion:
_isCenterCircle:
animateToGray
animateToSelectedColor
animateOffscreen
animateOnscreen
transformSelectionMarkerToPickerCircleWithCompletion:
transformPickerCircleToSelectionMarkerWithCompletion:
fadeoutPaletterCirclesInPairs
fadeinPaletterCirclesInPairs
fadeoutPaletteCircle:delay:
fadeinPaletteCircle:delay:
movePaletteCircleTowardsViewCenter:distance:
movePalettCircleToOriginalLayoutPosition:
paletteCircleAnimationPairs
presentationDelegate
setPresentationDelegate:
isExpanded
setIsExpanded:
_contentView
_collapsedSelectedCircle
_presentTapGestureRecognizer
_expandedFrame
_collapsedFrame
_colorWheelView
_dismissingColorPicker
_selectedCircleRotationAngle
_isExpanded
_presentationDelegate
TB,N,V_isExpanded
T@"<ETColorPickerViewDelegate>",W,N,V_presentationDelegate
_applicationDidEnterBackground
_applicationWillEnterForeground
layoutSubviews
setShouldCullNonVisibleNodes:
setIgnoresSiblingOrder:
setAllowsTransparency:
presentScene:
setPaused:
setPreferredFramesPerSecond:
options
_applicationDidBecomeActive
_updateLayout
shouldCullNonVisibleNodes
ignoresSiblingOrder
allowsTransparency
paused
preferredFramesPerSecond
_shouldDelayLayout
_didDelayLayout
_sceneView
_shouldCullNonVisibleNodes
_ignoresSiblingOrder
_allowsTransparency
_paused
_preferredFramesPerSecond
TB,N,V_shouldCullNonVisibleNodes
TB,N,V_ignoresSiblingOrder
TB,N,V_allowsTransparency
TB,N,V_paused
Tq,N,V_preferredFramesPerSecond
T@"NSMutableDictionary",R
setBeatsPerMinute:
setHasBeatsPerMinute:
hasBeatsPerMinute
setDuration:
setHasDuration:
hasDuration
setNormalizedCenterX:
setHasNormalizedCenterX:
hasNormalizedCenterX
setNormalizedCenterY:
setHasNormalizedCenterY:
hasNormalizedCenterY
setRotation:
setHasRotation:
hasRotation
setHeartbreakTime:
setHasHeartbreakTime:
hasHeartbreakTime
beatsPerMinute
duration
normalizedCenterX
normalizedCenterY
rotation
heartbreakTime
_beatsPerMinute
_duration
_heartbreakTime
_normalizedCenterX
_normalizedCenterY
_rotation
Tf,N,V_beatsPerMinute
TI,N,V_duration
Tf,N,V_normalizedCenterX
Tf,N,V_normalizedCenterY
Tf,N,V_rotation
Tf,N,V_heartbreakTime
doneButtonTapped:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
beganTouches:
finishedTouches
createDoneButtonWithFrame:
updatePickerPositionForPoint:
pickerViewHighlightedColor
colorWheelRadius
setColorWheelRadius:
gradientWidth
setGradientWidth:
pickerDiameter
setPickerDiameter:
hueRotation
setHueRotation:
pickerRotation
setPickerRotation:
pickerCircle
setPickerCircle:
doneButton
setDoneButton:
_colorWheelRadius
_gradientWidth
_pickerDiameter
_hueRotation
_pickerRotation
_pickerCircle
_doneButton
T@"<DTSColorWheelDelegate>",W,N,V_delegate
Td,N,V_colorWheelRadius
Td,N,V_gradientWidth
Td,N,V_pickerDiameter
Td,N,V_hueRotation
Td,N,V_pickerRotation
T@"UIView",&,N,V_pickerCircle
T@"UIButton",&,N,V_doneButton
drawView:
layerClass
sketchRendererDidReachVertexLimit:
setGLContextAsCurrent
setWispDelay:
animateOutWithCompletion:
beginStrokeWithColor:
_drawCurrentPointAdvancingPlayback
drawFrameBeforeWisp
_doesPoint:predateTime:
_getCurrentSketchPoint:
createRenderedFrameImage
createImageForTime:
_endPlayback
setPlaying:
clear
handleTapAtPosition:
updateRendererWithPoints:count:controlPoint:flush:
updateRendererWithSecondaryPoints:count:controlPoint:flush:
handleSketchAtPosition:
didCompleteStroke
clearAllPoints
isPlaying
isPaused
wispDelay
timestampForLastDrawnPoint
setTimestampForLastDrawnPoint:
playbackCompleted
setPlaybackCompleted:
useFastVerticalWisp
setUseFastVerticalWisp:
context
setContext:
renderer
setRenderer:
interpolatingFIFO
setInterpolatingFIFO:
smoothingFIFO
setSmoothingFIFO:
pointFIFO
setPointFIFO:
secondaryInterpolatingFIFO
setSecondaryInterpolatingFIFO:
secondarySmoothingFIFO
setSecondarySmoothingFIFO:
secondaryPointFIFO
setSecondaryPointFIFO:
unitSize
setUnitSize:
vertexBatches
setVertexBatches:
controlBatches
setControlBatches:
vertexBatchCount
setVertexBatchCount:
secondaryVertexBatchCount
setSecondaryVertexBatchCount:
vertexOffset
setVertexOffset:
delayBetweenStrokes
setDelayBetweenStrokes:
.cxx_construct
_displayLink
_currentStrokeColor
_lastDisplayLinkTime
_renderingOffscreen
_currentStrokeIndex
_currentPointIndex
_numberOfDrawnStrokes
_renderingDelay
_renderingStartTime
_pauseTime
_playing
_playbackCompleted
_useFastVerticalWisp
_unitSize
_wispDelay
_timestampForLastDrawnPoint
_context
_renderer
_interpolatingFIFO
_smoothingFIFO
_pointFIFO
_secondaryInterpolatingFIFO
_secondarySmoothingFIFO
_secondaryPointFIFO
_vertexOffset
_delayBetweenStrokes
_vertexBatches
_controlBatches
_vertexBatchCount
_secondaryVertexBatchCount
T@"EAGLContext",&,N,V_context
T@"ETGLSketchRenderer",&,N,V_renderer
T@"ETQuadCurvePointFIFO",&,N,V_interpolatingFIFO
T@"ETBoxcarFilterPointFIFO",&,N,V_smoothingFIFO
T@"ETPointFIFO",&,N,V_pointFIFO
T@"ETQuadCurvePointFIFO",&,N,V_secondaryInterpolatingFIFO
T@"ETBoxcarFilterPointFIFO",&,N,V_secondarySmoothingFIFO
T@"ETPointFIFO",&,N,V_secondaryPointFIFO
Tf,N,V_unitSize
T{vector<std::vector<float __attribute__((ext_vector_type(2)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v^v{__compressed_pair<std::vector<float __attribute__((ext_vector_type(2)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v}},N,V_vertexBatches
T{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}},N,V_controlBatches
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},N,V_vertexBatchCount
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},N,V_secondaryVertexBatchCount
TQ,N,V_vertexOffset
Td,N,V_delayBetweenStrokes
T@"ETSketchMessage",&,N,V_messageData
playing
TB,N,GisPlaying,V_playing
TB,N,GisPaused,V_paused
Td,N,V_wispDelay
Td,N,V_timestampForLastDrawnPoint
TB,N,V_playbackCompleted
TB,N,V_useFastVerticalWisp
etImageNamed:
etImageNamed:inBundle:
hasTimeDeltas
hasPoints
hasColors
timeDeltas
setTimeDeltas:
points
setPoints:
colors
setColors:
_colors
_points
_timeDeltas
T@"NSData",&,N,V_timeDeltas
T@"NSData",&,N,V_points
T@"NSData",&,N,V_colors
identifierInArchive:
messageTypeInArchive:
getSendTime:type:inArchive:
sendTimeInArchive:
init
initWithArchiveData:
setParentMessage:
strokes
colorsInMessage
numberOfColors
didReachRendererLimit
addStrokeWithColor:
addSketchPoint:atTime:
addSketchPoint:
_decodeWithDoodle:
archiveData
messageTypeAsString
willBeginWisp
didEndWisp
convertToSimulatedPlaybackSpeed
messageDuration
hasMultipleColors
setHasMultipleColors:
didEndWisping
setDidEndWisping:
didDrawPoints
setDidDrawPoints:
hideComet
setHideComet:
_strokes
_colorsInMessage
_hasMultipleColors
_didEndWisping
_didDrawPoints
_hideComet
TB,N,V_hasMultipleColors
TQ,R,N
TB,N,V_didEndWisping
TB,N,V_didDrawPoints
T@"NSArray",R,N
TB,N,V_hideComet
sharedStore
recentHeartRateWithCompletion:
_updateHeartRateWithCompletion:
_updateHeartRateEnabled
heartRateQuery
setHeartRateQuery:
recentHeartRate
setRecentHeartRate:
recentHeartRateTime
setRecentHeartRateTime:
_heartRateEnabled
_healthStore
_heartRateQuery
_recentHeartRate
_recentHeartRateTime
T@"HKQuery",&,N,V_heartRateQuery
TQ,N,V_recentHeartRate
Td,N,V_recentHeartRateTime
reset
setState:
_startTime
_hasSufficientForce
prepareToAnimateColorWheelWithRotation:
revealColorWheelWithCompletion:
hideColorWheelWithRotation:completion:
_imageView
colorWheelWidth
pickerWidth
pickerBorderColor
hideDoneButton
showColorWheelFromPaletteCircle:rotation:
showDoneButtonAnimated
hideDoneButtonAnimated
addPickerCircleForPaletteCircle:
pickerShouldDismissClockwise
colorWheelDismissalRotation
hideColorWheelPickingColor:
animatePickerToOriginalPosition
_gradientView
_originalRotation
_originalPickerRotation
_handlingTouches
_selectedColor
T@"UIColor",R,N,V_selectedColor
hasDelays
hasAngles
delays
setDelays:
angles
setAngles:
_angles
_delays
T@"NSData",&,N,V_delays
T@"NSData",&,N,V_angles
initWithFIFO:
emitPoints:count:
addPoints:count:
flush
nextFIFO
setNextFIFO:
_nextFIFO
T@"ETPointFIFO",&,N,V_nextFIFO
initWithFIFO:width:spacing:
emitAveragedPoint
width
setWidth:
spacing
setSpacing:
prevPoints
setPrevPoints:
_spacing
_width
_prevPoints
T{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}},N,V_prevPoints
TQ,N,V_width
Tf,N,V_spacing
emitInterpolatedPoints
setEmitInterpolatedPoints:
emissionHandler
setEmissionHandler:
controlPoints
setControlPoints:
lastPoint
setLastPoint:
_emitInterpolatedPoints
_emissionHandler
_lastPoint
_controlPoints
T{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}},N,V_points
T{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}},N,V_controlPoints
T,N,V_lastPoint
TB,N,V_emitInterpolatedPoints
T@?,C,V_emissionHandler
_mediaTypeFromETPVideoType:
_etpMediaTypeFromETMediaType:
setPlayingMessages:
setIntroMessage:
shouldLoopDuringPlayback
playingMessages
canCompressTime
compressTimeSinceStartOfMessage:
stillImage
isAnimated
mediaURL
setMediaURL:
setStillImage:
introMessage
mediaType
setMediaType:
pauseTimeCompression
setPauseTimeCompression:
_playingMessages
_compressedTimeTotal
_compressedTimeLastEventTime
_messageDuration
_pauseTimeCompression
_mediaURL
_stillImage
_introMessage
_mediaType
T@"NSArray",&,N
T@"NSURL",&,N,V_mediaURL
T@"UIImage",&,N,V_stillImage
T@"ETSketchMessage",&,N,V_introMessage
TQ,N,V_mediaType
TB,N,V_pauseTimeCompression
iconImageLeadingSpace
iconImageFrame
defaultBubbleColor
defaultThinkingDotColor
iconImage
paletteCircleDiameter
selectionMarkerDiameter
selectionMarkerColor
selectionMarker
_updateSelectionMarkerFrame
setSelected:
setSelected:animated:completion:
isSelected
_selectionMarker
_selected
selected
TB,N,GisSelected,V_selected
T@"UIView",R,N
Tf,N,V_duration
colorSpaceConvertedColor
_heartbeatRecognized:
_tapRecognized:
_kissRecognized:
canvasViewShouldUseFastVerticalWisp:
dealloc
canvasViewDidPause:
canvasViewDidUnpause:
_checkForIdle
canvasView:tapRecognizerShouldBegin:
_fastTapAllowableMovementTimerFired
_angerDurationLimitTimerFired
_sendMessageTimerFired
_hideHeartbeatTimerFired
canvasViewDidStartMediaAppearance:
canvasViewDidEndMediaAppearance:
_angerRecognized:
canvasView:angerUsesForceTouch:
messageWillReachSizeLimit:
messageWillStopPlaying:
messageDidStopPlaying:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
showPhotoForImage:
hidePhoto
showVideoForPlayer:
hideVideo
_updateVideoViewFrame
_updatePhotoViewFrame
_sketchInProgress
isComposingHeartbeat
isComposingSketch
_tapsInProgress
_startDoodleMessageCompositionAtTime:
startDoodleMessageComposition
_setIsComposingMessageOfType:
_updateRecognizersAtEndOfComposition
_endMessage:withSend:
_setSketchesPaused:
_sketchesPaused
setAlwaysPaused:
wispVisibleSketchViewsWithCompletion:
_animateOutSketchView:withCompletion:
_clearDoodleViewForMessage:
clearCanvasAnimated:
_startCheckForIdleTimer
_stopCheckForIdleTimer
setDrawingColor:
_canComposeExclusiveMessage
_isTapTooRecentAfterKissGesture
updateIgnoredTouchesRectForStatusBarSize:
_startFastTapAllowableMovementTimer
_normalizedGesturePoint:
_sendAnger
_showAngerAtPoint:
_hideAnger
_areRecognizersTrackingMultipleFingers
_doodleEndedWithTouches:cancelled:
_createSketchViewWithColor:time:message:
handleTapAtX:Y:color:time:isRemote:
handlePanAtX:Y:color:time:state:isRemote:
handleDotAtX:Y:color:time:isRemote:
_startSendMessageTimer
_clearSendMessageTimer
endMessageComposition
composedSketchMessage
_sendSketch
_sendTaps
sendCurrentMessage
setCanComposeTap:
setCanComposeKiss:
setCanComposeAnger:
setCanComposeHeartbeat:
_angleOfRotationBetweenTwoFingers:
_viewPointNormalizedInSceneSpace:
_sendKiss
_sendHeartbeat
updateCurrentMessageWithHeartRate:
_showHeartbeatAtNormalizedPoint:rotation:
_hideHeartbeat
playTestStrokeWithColor:duration:
playMessage:
setUsesMediaAppearance:
willMoveToWindow:
setForceTouchEnabled:
_configureAngerRecognizer
traitCollectionDidChange:
canvasDelegate
setCanvasDelegate:
timeSource
setTimeSource:
drawingColor
canComposeHeartbeat
canComposeTap
canComposeKiss
canComposeAnger
isComposing
usesMediaAppearance
parentMessage
angerUsesForceTouch
setAngerUsesForceTouch:
_currentSketchView
_currentTaps
_currentHeartbeat
_heartbeatDurationTimer
_heartbeatRecognizer
_heartbeatStartCenter
_lastActivityTimestamp
_touchesBeganTimestamp
_sendMessageTimer
_idleTimer
_setAlwaysPaused
_lastPt
_drawingTouch
_drawingTouchStartedStroke
_drawingTouchMovedDistance
_ignoredTouchesRect
_didIgnoreTouchesBegan
_ignoreTouchesUntilAllTouchesEnded
_touchesDown
_messageIdentifierToDoodleView
_tapRecognizer
_fastTapAllowableMovementTimer
_lastFastTapTimestamp
_kissRecognizer
_currentKissMessage
_angerRecognizer
_currentAnger
_angerDurationLimitTimer
_sketchDidReachSizeLimit
_scene
_photoView
_videoView
_videoLayer
_canComposeHeartbeat
_canComposeTap
_canComposeKiss
_canComposeAnger
_isComposing
_usesMediaAppearance
_angerUsesForceTouch
_canvasDelegate
_timeSource
_drawingColor
_parentMessage
T@"<ETCanvasViewDelegate>",W,N,V_canvasDelegate
T@"<ETMessageTimeSource>",W,N,V_timeSource
T@"UIColor",&,N,V_drawingColor
TB,N,V_canComposeHeartbeat
TB,N,V_canComposeTap
TB,N,V_canComposeKiss
TB,N,V_canComposeAnger
TB,R,N,V_isComposing
TB,N,V_usesMediaAppearance
T@"ETMessage",&,N,V_parentMessage
TB,N,V_angerUsesForceTouch
unarchive:
archive
initWithCoder:
encodeWithCoder:
preVisualizeInScene:
displayInScene:
sendTimeIsValid
_stopAudioPlayback
_startAudioPlayback
reachedSizeLimit
scenePointFromNormalizedPoint:inScene:
stopPlaying
wispChildren
childMessageDidCompleteWisp:
childMessageDidDelayWisp:
hasWispingChildren
messageVersion
timeCreated
setTimeCreated:
sendTime
setSendTime:
supportsPlaybackTimeOffset
setSupportsPlaybackTimeOffset:
missedDuringPlayback
setMissedDuringPlayback:
color
setColor:
isRenderingOffscreen
setRenderingOffscreen:
isRenderingOffscreenOpaque
setRenderingOffscreenOpaque:
delayWisp
setDelayWisp:
mute
setMute:
_childrenDelayingWisp
_supportsPlaybackTimeOffset
_missedDuringPlayback
_renderingOffscreenOpaque
_delayWisp
_mute
_messageVersion
_timeCreated
_sendTime
_color
TS,R,N
TQ,R,N,V_messageVersion
Td,N,V_timeCreated
Td,N,V_sendTime
TB,N,V_supportsPlaybackTimeOffset
TB,N,V_missedDuringPlayback
T@"UIColor",&,N,V_color
renderingOffscreen
TB,N,GisRenderingOffscreen,V_renderingOffscreen
renderingOffscreenOpaque
TB,N,GisRenderingOffscreenOpaque,V_renderingOffscreenOpaque
T@"<ETMessageDelegate>",W,N,V_delegate
TB,N,V_delayWisp
T@"ETMessage",W,N,V_parentMessage
animated
TB,R,N,GisAnimated
TB,N,V_mute
defaultsChanged:
defaultStore
addDefaultsObserver
saveColor:forIndex:
selectedColorIndex
setSelectedColorIndex:
_selectedColorIndex
_selectedIndexLoaded
TQ,N
setDoodleCount:
setHasDoodleCount:
hasDoodleCount
hasDoodleData
hasColorData
hasPointTimeDeltaData
doodleCount
doodleData
setDoodleData:
colorData
setColorData:
pointTimeDeltaData
setPointTimeDeltaData:
_colorData
_doodleCount
_doodleData
_pointTimeDeltaData
TI,N,V_doodleCount
T@"NSData",&,N,V_doodleData
T@"NSData",&,N,V_colorData
T@"NSData",&,N,V_pointTimeDeltaData
warmupShaders
initWithContext:andDrawable:
updateGLWithTime:
updateGLWithCurrentTime
setInitialDrawingColor:
setFinalDrawingColor:
setupFBOs:
setupTexture
setupShaders
loadOneShaderOfType:withCString:length:
linkProgramWithVShader:FShader:
setupVAOs
resizeFromCachedLayer
resizeFromLayer:
erase
appendPointArray:length:
appendDualPointArray:length:controlPoint:alternatePoints:alternateLength:alternateControlPoint:unitSize:segmentIndex:segmentCount:
updateVertexBufferWithVertexCount:
_warmupShaders
createRenderedFrameImageUsingAlpha:
render
setLineWidthScaleFactor:
currentTimeClock
currentTimeIndex
isDying
setIsDying:
lineWidthScaleFactor
allVertices
setAllVertices:
vertexBufferCount
setVertexBufferCount:
vertexBufferBegin
setVertexBufferBegin:
vertexCount
setVertexCount:
deathTime
setDeathTime:
lastBirth
setLastBirth:
brushColorForInitialColor
setBrushColorForInitialColor:
brushColorForFinalColor
setBrushColorForFinalColor:
shaderProgram
setShaderProgram:
vboVertLineId
setVboVertLineId:
vaoLineID
setVaoLineID:
viewRenderbuffer
setViewRenderbuffer:
viewFramebuffer
setViewFramebuffer:
backingWidth
setBackingWidth:
backingHeight
setBackingHeight:
cometScaleFactor
setCometScaleFactor:
allocatedWidth
setAllocatedWidth:
allocatedHeight
setAllocatedHeight:
cachedLayer
setCachedLayer:
completionBlock
setCompletionBlock:
_useThisRendererOnlyForWarmup
_isDying
_currentTimeClock
_currentTimeIndex
_vertexBufferCount
_vertexBufferBegin
_deathTime
_lastBirth
_shaderProgram
_vboVertLineId
_vaoLineID
_viewRenderbuffer
_viewFramebuffer
_backingWidth
_backingHeight
_allocatedWidth
_allocatedHeight
_lineWidthScaleFactor
_allVertices
_vertexCount
_cometScaleFactor
_cachedLayer
_completionBlock
_brushColorForInitialColor
_brushColorForFinalColor
T^{?=},N,V_allVertices
Ti,N,V_vertexBufferCount
Ti,N,V_vertexBufferBegin
TQ,N,V_vertexCount
Tf,N,V_deathTime
Tf,N,V_lastBirth
T,N,V_brushColorForInitialColor
T,N,V_brushColorForFinalColor
TI,N,V_shaderProgram
TI,N,V_vboVertLineId
TI,N,V_vaoLineID
TI,N,V_viewRenderbuffer
TI,N,V_viewFramebuffer
TI,N,V_backingWidth
TI,N,V_backingHeight
Td,N,V_cometScaleFactor
TI,N,V_allocatedWidth
TI,N,V_allocatedHeight
T@"EAGLContext",N,V_context
T@"CAEAGLLayer",N,V_cachedLayer
T@?,C,N,V_completionBlock
Tf,R,N,V_currentTimeClock
Tf,R,N,V_currentTimeIndex
TB,N,V_isDying
T@"<ETGLSketchRendererDelegate>",W,N,V_delegate
TB,N,V_renderingOffscreen
Td,N,V_lineWidthScaleFactor
hasIntroMessageData
hasPlayingMessagesData
setHasMediaType:
hasMediaType
mediaTypeAsString:
StringAsMediaType:
introMessageData
setIntroMessageData:
playingMessagesData
setPlayingMessagesData:
_introMessageData
_playingMessagesData
T@"NSData",&,N,V_introMessageData
T@"NSData",&,N,V_playingMessagesData
Ti,N,V_mediaType
dateFormatWithMilliseconds:
destinationFromMessageIdentifier:keepPrefix:
removePrefixFromDestination:
isRetailDemo
shouldArchiveSentMessages
lastInteractiveZoomLevel
tapCount
pointAtIndex:
timeDeltaAtIndex:
addTapAtPoint:time:color:
_animateCircleInner0:inner1:outer0:outer1:duration:
_displayInScene:point:color:filled:withWisp:
_preVisualizeScene
_noiseField
_times
_baseTime
_soundTimer
_soundIndex
_noiseFieldLock
doubleTapMessageWithColor:
_displayInScene:useDuration:
_displayInScene:useDuration:fastStart:
moveHeartNodeByX:y:duration:
playBeatWithDuration:
startHeartbeat:
startHeartbeat:fastStart:
breakHeart
scale
setScale:
normalizedCenter
setNormalizedCenter:
isBroken
_heartNode
_heartLines
_heart
_heartWisp
_linesShader
_heartShader
_speedUniform
_warpedTexAtlasUniform
_burTexUniform
_noiseTexUniform
_scaleUniform
_shaderTimeUniform
_heartScale
_hapticLoopPeriod
_heartbreakAtlas
_broken
_scale
_normalizedCenter
Ti,N,V_duration
Tf,N,V_scale
T{CGPoint=dd},N,V_normalizedCenter
Td,N,V_rotation
broken
TB,R,N,GisBroken,V_broken
Td,R,N,V_heartbreakTime
_updateCenterFromNormalizedPoint:inScene:
setNormalizedPoint:atRelativeTime:inScene:
_anger
Td,N,V_duration
kissNodeWithColor:size:
setShader:
setColorBlendFactor:
setColorBlendMode:
setPosition:
setZRotation:
runAction:
removeFromParent
leavesMark
setLeavesMark:
node
setNode:
shader
colorBlendFactor
blendMode
setBlendMode:
position
zRotation
_leavesMark
_node
_shader
_colorBlendFactor
_blendMode
_zRotation
_position
TB,N,V_leavesMark
T@"SKSpriteNode",&,N,V_node
T@"SKShader",&,N,V_shader
Td,N,V_colorBlendFactor
Tq,N,V_blendMode
T{CGPoint=dd},N,V_position
Td,N,V_zRotation
_kissColor
_leaveMarkAtDelay:
_initAtlas
addKissAtNormalizedPoint:angle:time:toScene:
_hasKissesThatLeaveMark
_setKissLeavesMark:
_displayKissAtPoint:angle:leavesMark:inScene:
_notifyDelegateDidStopPlaying
_notifyDelegateWillStopPlaying
_atlas
_atlasUniform
_kissMarkNodes
_lastKissTime
_lastKiss
_didDelegateWillStopPlaying
_didDelegateDidStopPlaying
replay
_audioToggleButtonTapped
_cancelButtonTapped
_skipButtonTapped
viewDidLoad
viewDidAppear:
_applicationWillResignActive
viewWillDisappear:
viewDidDisappear:
viewWillLayoutSubviews
viewDidLayoutSubviews
_videoMessageDidFinishPlaying:
_composeSessionEndTimerFired
replayButtonFont
audioToggleOnImage
audioToggleOffImage
canvasView:didBeginPlayingMessage:
canvasView:willEndPlayingMessage:
canvasView:didEndPlayingMessage:
canvasView:didBeginComposingMessageType:
canvasView:didUpdateComposingMessageType:
canvasView:didEndComposingMessageType:
canvasView:sendMessage:
canvasViewDidBeginStroke:
canvasViewDidEndStroke:
canvasViewWillReachComposingSizeLimit:
canvasViewShouldSendWithTimer:
colorPickerSelectedColorDidChange:
colorPickerTapped:
setDataSource:
shouldAutorotate
supportedInterfaceOrientations
canExpireMessages
_updateVideoPlayerUI
_shouldShowSkipButton
_shouldShowCancelButton
_cornerButtonInset
_updateSkipButtonFrame
_updatePlaybackControls
_updateSendButton
_audioToggleButton
_rightButtonInset
_updateAudioOnOffButton
_updateAudioOnOffButtonImage
_relinquishAudio
_sendAutosendingComposition
addUnplayedMessage:
canReplay
hasMessageForReplay
_setCachedMessageForReplay:
setComposingCompositeMessage:
setPlayingMessage:
_playMessage:
_schedulePlaybackOfCompositeMessageContent:
_isVisible
updateVideoUI
_shouldDimColorPicker
_updateColorPickerEnabled
_shouldAutoSend
usesCompactKeyboardLayout
setComposeDisabled:
_usingDemoHook
_sendDemoHookMessage
_exportDemoHookMessage
_showDemoHookAlertWithTitle:message:
_updateCanvasInteractionEnabled
_canLoopMessageDuringPlayback:
_startVideoPlayerWithMessage:
_hideVideoPlayer
_canComposeAfterMediaPlayback
didChangeColorPickerColor
didBeginComposingMessage
didEndComposingMessage
clearDeferredMessages
_tapRecognizerShouldBegin:
_setAngerUsesForceTouch:
_canStartMessagePlaybackLoop
startMessagePlaybackLoop
_stopPlaybackAnimated:
_reloadUnplayedMessages
setPlaybackEnabled:
setPlayingCompositeMessage:
_playNextMessage
_continueMessagePlaybackLoopWithDelay:
willBeginSessionPlayback
willEndSessionPlaybackInterrupted:
didEndSessionPlayback
_startComposeSessionEndTimer
_clearComposeSessionEndTimer
_cancelButton
_skipButton
_replayButton
_setReplayButton:
canShowReplayButton
_setShowingReplayButton:
_playingParentMessage
_nonAnimatedMessagePlaybackDuration
dataSource:didReceiveSessionMessage:
dataSourceShouldUseDemoHook:
dataSource:startPlaybackWithCompletion:
dataSource:addDemoHookToMessage:
dataSourceStopPlayback:
dataSourceViewIsMostlyVisible:
dataSource:didUpdateAttachmentURL:forMessageWithIdentifier:
minimumBottomMargin
setBottomMargin:
sendDelegate
setSendDelegate:
composingMessageType
setComposingMessageType:
isComposingCompositeMessage
isPlayingCompositeMessage
mediaMessagePlayTrackerTime
setMediaMessagePlayTrackerTime:
isComposeDisabled
isAutoPlayOnAppearanceDisabled
setAutoPlayOnAppearanceDisabled:
ignoreAppearanceCallbacks
setIgnoreAppearanceCallbacks:
canvasView
setCanvasView:
isPlayingMessages
playingMessage
colorPicker
setColorPicker:
deferMessageSend
setDeferMessageSend:
deferredMessages
setUsesCompactKeyboardLayout:
overrideAudioDefaultToOff
setOverrideAudioDefaultToOff:
isPlaybackEnabled
bottomMargin
dataSource
balloonPlaybackCompletion
setBalloonPlaybackCompletion:
messageForReplay
setMessageForReplay:
_unplayedMessages
_isPlayingMessage
_playbackEnabled
_showingReplayButton
_composeSessionEndTimer
_deferredMessages
_videoPlayer
_composingCompositeMessage
_playingCompositeMessage
_composeDisabled
_autoPlayOnAppearanceDisabled
_ignoreAppearanceCallbacks
_deferMessageSend
_usesCompactKeyboardLayout
_overrideAudioDefaultToOff
_composingMessageType
_sendDelegate
_mediaMessagePlayTrackerTime
_canvasView
_playingMessage
_colorPicker
_bottomMargin
_dataSource
_balloonPlaybackCompletion
_messageForReplay
T@"DTSColorPicker",&,N,V_colorPicker
T@"ETBalloonPluginDataSource",W,N,V_dataSource
T@?,C,N,V_balloonPlaybackCompletion
T@"ETMessage",&,N,V_messageForReplay
T@"<DTSCanvasViewControllerSendDelegate>",W,N,V_sendDelegate
TS,N,V_composingMessageType
composingCompositeMessage
TB,N,GisComposingCompositeMessage,V_composingCompositeMessage
playingCompositeMessage
TB,N,GisPlayingCompositeMessage,V_playingCompositeMessage
Td,N,V_mediaMessagePlayTrackerTime
composeDisabled
TB,N,GisComposeDisabled,V_composeDisabled
autoPlayOnAppearanceDisabled
TB,N,GisAutoPlayOnAppearanceDisabled,V_autoPlayOnAppearanceDisabled
TB,N,V_ignoreAppearanceCallbacks
T@"ETCanvasView",&,N,V_canvasView
TB,N,GisPlayingMessages,V_playingMessages
T@"ETMessage",&,N,V_playingMessage
TB,N,V_deferMessageSend
T@"NSArray",R,N,V_deferredMessages
TB,N,V_usesCompactKeyboardLayout
TB,N,V_overrideAudioDefaultToOff
playbackEnabled
TB,N,GisPlaybackEnabled,V_playbackEnabled
Td,N,V_bottomMargin
_et_secureArchivedDataWithRootObject:
_et_secureUnarchiveObjectOfClasses:withData:
_et_secureUnarchiveObjectOfClass:withData:
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@16@0:8
d16@0:8
v24@0:8Q16
v24@0:8@16
v32@0:8@16@?24
v16@0:8
B16@0:8
v20@0:8B16
Q16@0:8
@"NSArray"
@"ETPaletteCircleView"
@"UILongPressGestureRecognizer"
@"<DTSColorPickerDelegate>"
@24@0:8^{_NSZone=}16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
v24@0:8q16
v20@0:8I16
v24@0:8d16
B24@0:8@16
q16@0:8
I16@0:8
@"NSString"
@"NSData"
{?="sendDate"b1"startDelay"b1"baseColor"b1"messageType"b1"supportsPlaybackTimeOffsets"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"DTSColorWheel"16@"UIColor"24
@80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
B40@0:8{CGPoint=dd}16@32
v28@0:8B16@?20
v32@0:8d16d24
B24@0:8Q16
v24@0:8@?16
v32@0:8@16d24
@"UIView"
@"UITapGestureRecognizer"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"ETColorWheelView"
@"<ETColorPickerViewDelegate>"
@"SKView"
v20@0:8f16
f16@0:8
{?="beatsPerMinute"b1"duration"b1"heartbreakTime"b1"normalizedCenterX"b1"normalizedCenterY"b1"rotation"b1}
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGPoint=dd}16
@"<DTSColorWheelDelegate>"
@"UIButton"
v24@0:8@"ETGLSketchRenderer"16
B32@0:8^{?={?=SS}{?=S}}16d24
B24@0:8^{?={?=SS}{?=S}}16
^{CGImage=}16@0:8
^{CGImage=}24@0:8d16
v44@0:8^16Q24^32B40
{vector<std::vector<float __attribute__((ext_vector_type(2)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v^v{__compressed_pair<std::vector<float __attribute__((ext_vector_type(2)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v}}16@0:8
v40@0:8{vector<std::vector<float __attribute__((ext_vector_type(2)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v^v{__compressed_pair<std::vector<float __attribute__((ext_vector_type(2)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>=^v}}16
{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}}16@0:8
v40@0:8{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=^}}16
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
v40@0:8{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16
@"CADisplayLink"
@"UIColor"
@"ETSketchMessage"
@"EAGLContext"
@"ETGLSketchRenderer"
@"ETQuadCurvePointFIFO"
@"ETBoxcarFilterPointFIFO"
@"ETPointFIFO"
{vector<std::vector<float __attribute__((ext_vector_type(2)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<float __attribute__((ext_vector_type(2)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(2)))>>>="__value_"^v}}
{vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>="__value_"^}}
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
@24@0:8@16
@32@0:8@16@24
S24@0:8@16
v40@0:8^d16^S24@32
d24@0:8@16
S16@0:8
v40@0:8{CGPoint=dd}16d32
@"NSMutableArray"
@"HKHealthStore"
@"HKQuery"
v32@0:8d16@?24
@"UIImageView"
^{CGColor=}16@0:8
@"ETColorGradientView"
v32@0:8^16Q24
@36@0:8@16Q24f32
@?16@0:8
16@0:8
v24@0:816
Q20@0:8i16
i24@0:8Q16
d24@0:8d16
@"NSURL"
@"UIImage"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8B16B20@?24
{?="duration"b1"normalizedCenterX"b1"normalizedCenterY"b1}
v24@0:8@"ETMessage"16
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v20@0:8S16
v28@0:8@16B24
v32@0:8{CGSize=dd}16
{CGPoint=dd}24@0:8@16
v40@0:8@16d24@32
v44@0:8f16f20@24d32B40
v52@0:8f16f20@24d32q40B48
{CGPoint=dd}32@0:8{CGPoint=dd}16
@"NSMutableSet"
@"ETGLSketchView"
@"ETTapMessage"
@"ETHeartbeatMessage"
@"NSTimer"
{CGPoint="x"d"y"d}
@"UITouch"
@"NSMutableDictionary"
@"ETKissMessage"
@"ETAngerMessage"
@"SKScene"
@"DTSSceneView"
@"AVPlayerLayer"
@"<ETCanvasViewDelegate>"
@"<ETMessageTimeSource>"
@"ETMessage"
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
@"<ETMessageDelegate>"
v32@0:8@16Q24
{?="doodleCount"b1}
v24@0:8^16
i32@0:8I16r*20i28
i24@0:8i16i20
v84@0:8^16Q2432^40Q4856f64Q68Q76
^{CGImage=}20@0:8B16
^{?=}16@0:8
v24@0:8^{?=}16
v32@0:816
@"<ETGLSketchRendererDelegate>"
^{?=}
@"CAEAGLLayer"
{?="mediaType"b1}
@28@0:8@16B24
{CGPoint=dd}24@0:8Q16
d24@0:8Q16
v48@0:8{CGPoint=dd}16d32@40
@56@0:8d16d24d32d40d48
v56@0:8@16{CGPoint=dd}24@40B48B52
@"SKFieldNode"
{vector<CGPoint, std::allocator<CGPoint>>="__begin_"^{CGPoint}"__end_"^{CGPoint}"__end_cap_"{__compressed_pair<CGPoint *, std::allocator<CGPoint>>="__value_"^{CGPoint}}}
{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v32@0:8@16B24B28
v40@0:8d16d24d32
{CGPoint=dd}16@0:8
@"SKNode"
@"SKSpriteNode"
@"SKEmitterNode"
@"SKShader"
@"SKUniform"
@"SKTexture"
v40@0:8{CGPoint=dd}16@32
@40@0:8@16{CGSize=dd}24
B24@0:8d16
v56@0:8{CGPoint=dd}16d32d40@48
v52@0:8{CGPoint=dd}16d32B40@44
@"KissNode"
v28@0:8@16S24
v32@0:8@"ETCanvasView"16@"ETMessage"24
v28@0:8@"ETCanvasView"16S24
v24@0:8@"ETCanvasView"16
B24@0:8@"ETCanvasView"16
B32@0:8@"ETCanvasView"16@"UITapGestureRecognizer"24
v28@0:8@"ETCanvasView"16B24
v24@0:8@"DTSColorPicker"16
B32@0:8@16^@24
v40@0:8@16@24@32
@"AVPlayer"
@"<DTSCanvasViewControllerSendDelegate>"
@"ETCanvasView"
@"DTSColorPicker"
@"ETBalloonPluginDataSource"
@32@0:8#16@24
333333
333333
333333
