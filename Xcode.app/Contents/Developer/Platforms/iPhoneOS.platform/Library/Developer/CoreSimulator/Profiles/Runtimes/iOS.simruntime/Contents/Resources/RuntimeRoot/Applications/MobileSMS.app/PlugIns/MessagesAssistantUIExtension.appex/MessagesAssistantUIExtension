sharedInstance
chatCacheEnabled
__im_ff_chatCacheEnabled
addListenerID:capabilities:
blockUntilConnected
_setBlocksConnectionAtResume:
viewDidLayoutSubviews
view
bounds
setFrame:
viewDidAppear:
chatController
_configureSnippetContentViewWithChatAndContactsForAvatarView
parameterForClass:keyPath:
setWithObjects:
configureWithInteraction:context:completion:
intent
intentResponse
array
standardUserDefaults
recipients
countByEnumeratingWithState:objects:count:
displayName
addObject:
speakableGroupName
spokenPhrase
content
code
componentsJoinedByString:
stringWithFormat:
_configureSnippetContentViewWithToField:contactsForAvatarView:messageContent:sent:
setNeedsLayout
desiredSize
extensionContext
hostedViewMaximumAllowedSize
sizeThatFits:
initWithFrame:
addSubview:
setToFieldText:
setContactsForAvatarView:
setMessageContent:sent:
customIdentifier
contactIdentifier
connectIfNeeded
conversationIdentifier
existingChatWithChatIdentifier:
loadChatFromDaemonWithChatIdentifier:
existingChatForAddresses:allowRetargeting:bestHandles:
count
firstObject
initWithChat:
orderedContactsForAvatarView
predicateForContactsWithIdentifiers:
descriptorForRequiredKeys
arrayWithObjects:count:
unifiedContactsMatchingPredicate:keysToFetch:error:
setLoadedMessageCount:
initWithConversation:
beginHoldingScrollGeometryUpdatesForKey:
setChatController:
setChatContent:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
configureViewForParameters:ofInteraction:interactiveBehavior:context:completion:
configureViewForParameters:ofInteraction:context:completion:
viewWasCancelled
desiresInteractivity:
displaysMap
displaysMessage
displaysPaymentTransaction
TB,R,N
snippetContentView
setSnippetContentView:
.cxx_destruct
_configuredIntent
_snippetContentView
_chatController
T@"CKAssistantUIContentView",&,N,V_snippetContentView
T@"CKAssistantUIChatController",&,N,V_chatController
effectWithStyle:
initWithEffect:
setAutoresizingMask:
setAsynchronousRendering:
setUserInteractionEnabled:
setShowsContactOnTap:
blackColor
setTextColor:
sharedBehaviors
avatarNameFont
setFont:
setTextAlignment:
setNumberOfLines:
text
isEqualToString:
setText:
setContacts:
setContact:
conversationListContactImageDiameter
frame
layoutSubviews
toLabel
setToLabel:
avatar
setAvatar:
blurView
setBlurView:
_toLabel
_avatar
_blurView
T@"UILabel",&,N,V_toLabel
T@"CNAvatarView",&,N,V_avatar
T@"UIView",&,N,V_blurView
transcriptCollectionViewControllerShouldPlayAudio:
whiteColor
setBackgroundColor:
setAlpha:
removeFromSuperview
_balloonViewWithText:color:
setChatView:
insertSubview:above:
mainScreen
scale
prepareForDisplayIfNeeded
_balloonMaxWidthForBoundsWidth:
setHasTail:
setOrientation:
setColor:
setCanUseOpaqueMask:
initWithString:
length
balloonTextFont
addAttribute:value:range:
theme
color
balloonTextColorForColorType:
setAttributedText:
prepareForDisplay
balloonMaxWidthForTranscriptWidth:marginInsets:shouldShowPluginButtons:shouldShowCharacterCount:shouldCoverSendButton:
avatarView
setAvatarView:
balloonView
setBalloonView:
keylineView
setKeylineView:
chatView
chatBackgroundView
setChatBackgroundView:
_avatarView
_balloonView
_keylineView
_chatView
_chatBackgroundView
T@"CKAssistantUIAvatarView",&,N,V_avatarView
T@"CKTextBalloonView",&,N,V_balloonView
T@"UIView",&,N,V_keylineView
T@"UIView",&,N,V_chatView
T@"UIView",&,N,V_chatBackgroundView
IMFeature__chatCacheEnabled
CKAssistantUIIntentViewController
INUIHostedViewControllingPrivate
INUIHostedViewControlling
NSObject
INUIHostedViewSiriProviding
CKAssistantUIAvatarView
CKAssistantUIChatController
CKAssistantUIContentView
B16@0:8
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16Q24@?32
v56@0:8@16@24Q32Q40@?48
v40@0:8@"INInteraction"16Q24@?<v@?{CGSize=dd}>32
v56@0:8@"NSSet"16@"INInteraction"24Q32Q40@?<v@?B@"NSSet"{CGSize=dd}>48
v48@0:8@16@24Q32@?40
v24@0:8@?16
v48@0:8@"NSSet"16@"INInteraction"24Q32@?<v@?B@"NSSet"{CGSize=dd}>40
v24@0:8@?<v@?B>16
v20@0:8B16
{CGSize=dd}16@0:8
v44@0:8@16@24@32B40
v24@0:8@16
@"INSendMessageIntent"
@"CKAssistantUIContentView"
@"CKAssistantUIChatController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
@"UILabel"
@"CNAvatarView"
@"UIView"
v28@0:8@16B24
@28@0:8@16c24
d24@0:8d16
@"CKAssistantUIAvatarView"
@"CKTextBalloonView"
v8@?0
MessagesAssistantUIExtension
recipients
content
speakableGroupName
v24@?0{CGSize=dd}8
IMAssistantUI
Unhandled intent: %@, not using Assistant UI extension
com.apple.MobileSMS
kEnableEnhancedSiriUI
EnableEnhancedSiriUI not enabled, not using Assistant UI extension : %@
SnippetContentView must exist before configuring chat and contact avatars
Error fetching contact with identifiers %@. Error: %@
AssistantUI
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.IdentityLookup.MessageFilter</key>
<string></string>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.backboardd.proximityDetection</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-amr-encode</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.contacts</key>
<true/>
<key>com.apple.private.coremedia.extensions.audiorecording.allow</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.dmd.emergency-mode</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.dprivacyd.allow</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.storage.Messages</key>
<true/>
<key>com.apple.private.security.storage.Photos</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCamera</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/Library/Audio/Tunings/Generic/AU/</string>
<string>/Library/Audio/Tunings/Generic/AU/aufx-epvd-appl.plist</string>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/SMS/</string>
<string>/Library/Caches/com.apple.MobileSMS/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.dmd.emergency-mode</string>
<string>com.apple.suggestd.contacts</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.springboard</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.MobileSMS</string>
<string>com.apple.mobilephone</string>
<string>com.apple.ScreenTimeAgent.conversation</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.dprivacyd</string>
<string>com.apple.siri.vocabularyupdates</string>
<string>com.apple.ScreenTimeAgent</string>
<string>com.apple.ScreenTimeAgent.private</string>
<string>com.apple.dmd.policy</string>
<string>com.apple.imfoundation.IMRemoteURLConnectionAgent</string>
</array>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
sharedInstance
chatCacheEnabled
__im_ff_chatCacheEnabled
addListenerID:capabilities:
blockUntilConnected
_setBlocksConnectionAtResume:
viewDidLayoutSubviews
view
bounds
setFrame:
viewDidAppear:
chatController
_configureSnippetContentViewWithChatAndContactsForAvatarView
parameterForClass:keyPath:
setWithObjects:
configureWithInteraction:context:completion:
intent
intentResponse
array
standardUserDefaults
recipients
countByEnumeratingWithState:objects:count:
displayName
addObject:
speakableGroupName
spokenPhrase
content
code
componentsJoinedByString:
stringWithFormat:
_configureSnippetContentViewWithToField:contactsForAvatarView:messageContent:sent:
setNeedsLayout
desiredSize
extensionContext
hostedViewMaximumAllowedSize
sizeThatFits:
initWithFrame:
addSubview:
setToFieldText:
setContactsForAvatarView:
setMessageContent:sent:
customIdentifier
contactIdentifier
connectIfNeeded
conversationIdentifier
existingChatWithChatIdentifier:
loadChatFromDaemonWithChatIdentifier:
existingChatForAddresses:allowRetargeting:bestHandles:
count
firstObject
initWithChat:
orderedContactsForAvatarView
predicateForContactsWithIdentifiers:
descriptorForRequiredKeys
arrayWithObjects:count:
unifiedContactsMatchingPredicate:keysToFetch:error:
setLoadedMessageCount:
initWithConversation:
beginHoldingScrollGeometryUpdatesForKey:
setChatController:
setChatContent:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
configureViewForParameters:ofInteraction:interactiveBehavior:context:completion:
configureViewForParameters:ofInteraction:context:completion:
viewWasCancelled
desiresInteractivity:
displaysMap
displaysMessage
displaysPaymentTransaction
TB,R,N
snippetContentView
setSnippetContentView:
.cxx_destruct
_configuredIntent
_snippetContentView
_chatController
T@"CKAssistantUIContentView",&,N,V_snippetContentView
T@"CKAssistantUIChatController",&,N,V_chatController
effectWithStyle:
initWithEffect:
setAutoresizingMask:
setAsynchronousRendering:
setUserInteractionEnabled:
setShowsContactOnTap:
blackColor
setTextColor:
sharedBehaviors
avatarNameFont
setFont:
setTextAlignment:
setNumberOfLines:
text
isEqualToString:
setText:
setContacts:
setContact:
conversationListContactImageDiameter
frame
layoutSubviews
toLabel
setToLabel:
avatar
setAvatar:
blurView
setBlurView:
_toLabel
_avatar
_blurView
T@"UILabel",&,N,V_toLabel
T@"CNAvatarView",&,N,V_avatar
T@"UIView",&,N,V_blurView
transcriptCollectionViewControllerShouldPlayAudio:
whiteColor
setBackgroundColor:
setAlpha:
removeFromSuperview
_balloonViewWithText:color:
setChatView:
insertSubview:above:
mainScreen
scale
prepareForDisplayIfNeeded
_balloonMaxWidthForBoundsWidth:
setHasTail:
setOrientation:
setColor:
setCanUseOpaqueMask:
initWithString:
length
balloonTextFont
addAttribute:value:range:
theme
color
balloonTextColorForColorType:
setAttributedText:
prepareForDisplay
balloonMaxWidthForTranscriptWidth:marginInsets:shouldShowPluginButtons:shouldShowCharacterCount:shouldCoverSendButton:
avatarView
setAvatarView:
balloonView
setBalloonView:
keylineView
setKeylineView:
chatView
chatBackgroundView
setChatBackgroundView:
_avatarView
_balloonView
_keylineView
_chatView
_chatBackgroundView
T@"CKAssistantUIAvatarView",&,N,V_avatarView
T@"CKTextBalloonView",&,N,V_balloonView
T@"UIView",&,N,V_keylineView
T@"UIView",&,N,V_chatView
T@"UIView",&,N,V_chatBackgroundView
IMFeature__chatCacheEnabled
CKAssistantUIIntentViewController
INUIHostedViewControllingPrivate
INUIHostedViewControlling
NSObject
INUIHostedViewSiriProviding
CKAssistantUIAvatarView
CKAssistantUIChatController
CKAssistantUIContentView
B16@0:8
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16Q24@?32
v56@0:8@16@24Q32Q40@?48
v40@0:8@"INInteraction"16Q24@?<v@?{CGSize=dd}>32
v56@0:8@"NSSet"16@"INInteraction"24Q32Q40@?<v@?B@"NSSet"{CGSize=dd}>48
v48@0:8@16@24Q32@?40
v24@0:8@?16
v48@0:8@"NSSet"16@"INInteraction"24Q32@?<v@?B@"NSSet"{CGSize=dd}>40
v24@0:8@?<v@?B>16
v20@0:8B16
{CGSize=dd}16@0:8
v44@0:8@16@24@32B40
v24@0:8@16
@"INSendMessageIntent"
@"CKAssistantUIContentView"
@"CKAssistantUIChatController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
@"UILabel"
@"CNAvatarView"
@"UIView"
v28@0:8@16B24
@28@0:8@16c24
d24@0:8d16
@"CKAssistantUIAvatarView"
@"CKTextBalloonView"
v8@?0
MessagesAssistantUIExtension
recipients
content
speakableGroupName
v24@?0{CGSize=dd}8
IMAssistantUI
Unhandled intent: %@, not using Assistant UI extension
com.apple.MobileSMS
kEnableEnhancedSiriUI
EnableEnhancedSiriUI not enabled, not using Assistant UI extension : %@
SnippetContentView must exist before configuring chat and contact avatars
Error fetching contact with identifiers %@. Error: %@
AssistantUI
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.IdentityLookup.MessageFilter</key>
<string></string>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.backboardd.proximityDetection</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-amr-encode</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.imagent</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.contacts</key>
<true/>
<key>com.apple.private.coremedia.extensions.audiorecording.allow</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.dmd.emergency-mode</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.dprivacyd.allow</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.storage.Messages</key>
<true/>
<key>com.apple.private.security.storage.Photos</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCamera</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/Library/Audio/Tunings/Generic/AU/</string>
<string>/Library/Audio/Tunings/Generic/AU/aufx-epvd-appl.plist</string>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/SMS/</string>
<string>/Library/Caches/com.apple.MobileSMS/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.dmd.emergency-mode</string>
<string>com.apple.suggestd.contacts</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.springboard</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.MobileSMS</string>
<string>com.apple.mobilephone</string>
<string>com.apple.ScreenTimeAgent.conversation</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.dprivacyd</string>
<string>com.apple.siri.vocabularyupdates</string>
<string>com.apple.ScreenTimeAgent</string>
<string>com.apple.ScreenTimeAgent.private</string>
<string>com.apple.dmd.policy</string>
<string>com.apple.imfoundation.IMRemoteURLConnectionAgent</string>
</array>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
