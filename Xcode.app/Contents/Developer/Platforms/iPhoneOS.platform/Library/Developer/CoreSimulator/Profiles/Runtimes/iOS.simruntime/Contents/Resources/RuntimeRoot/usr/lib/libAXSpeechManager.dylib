com.apple.speech.synthesis.voice.Alex
com.apple.ttsbundle.gryphon_male
com.apple.ttsbundle.gryphon_female
com.apple.ttsbundle.gryphon-neural_male
com.apple.ttsbundle.gryphon-neural_female
(pause\=(\d{1,4})\\)
content is nil, language detection not possible
%s:%d %@
-[AXSpeechAction _detectLanguageFromContent]
v8@?0
com.apple.Accessibility
SpeechManager
Not enough characters (%lu) to accurately detect language
could not determine content language, returning default
<AXSpeechAction: %p> %@ :Pitch %f : Language: %@, voiceId: %@
speech-manager-properties
-[AXSpeechManager _updateAuxiliarySession]
AXSpeechManager.m
NSThread.currentThread == _runThread
-[AXSpeechManager handleAudioSessionObservers:]
audioSessionCategory
audioSessionCategoryOptions
-[AXSpeechManager _enqueueSelectorOnSpeechThread:object:waitUntilDone:]
![NSThread.currentThread isEqual:_runThread]
Speech interrupted, pausing
-[AXSpeechManager _didBeginInterruption]
AVSpeechSynthesizer Audio interruption notification: %@
-[AXSpeechManager _handleAudioInterruption:]
-[AXSpeechManager _updateAudioSessionProperties]
[NSThread.currentThread isEqual:_runThread]
Error setting category: %@
AXSettings
Synthesizer created: %@
-[AXSpeechManager _initialize]
]\-^
\b[%@]\b
\b[\%@]\b
CapitalLetterFormat
VOTLocalizedStrings
B32@?0@"TTSAXResource"8Q16^B24
@16@?0@"TTSAXResource"8
**** AX Error: Could not load AccessibilityUtilities.framework bundle. bundleWithPath came back nil
+[AXSpeechManager availableVoices:]_block_invoke
Could not load bundle: %@
@16@?0@"TTSSpeechVoice"8
@16@?0@8
com.apple.springboard
com.apple.accessibility.AccessibilityUIServer
com.apple.AccessibilityUIServer
Removing from queue: %@
-[AXSpeechManager _speechJobFinished:action:]
Remaining queue: %@
Start next job
Scheduling audio session deactivation in: %f
Error setting audio session to inactive: %@
-[AXSpeechManager _speechJobFinished:action:]_block_invoke
v40@?0@8{_NSRange=QQ}16^B32
Existing speech job already in flight
-[AXSpeechManager _startNextSpeechJob]
Is in audio interruption, not starting speech
%@ Will speak: %@ %f
Stopping existing job
Pitch change: %@
v16@?0@"AVAudioBuffer"8
Error setting active: %@
Speech Error:%@
%@ Should queue: %@ -> %d
-[AXSpeechManager _dispatchSpeechAction:]
Telling synthesizer to stop because this job doesn't want to queue
isSpeaking: %d
Speech queue items: %@
Starting next job
-[AXSpeechManager clearSpeechQueue]
![_runThread isFinished]
-[AXSpeechManager dispatchSpeechAction:]
-[AXSpeechManager pauseSpeaking:]
-[AXSpeechManager continueSpeaking]
-[AXSpeechManager isSpeaking]
-[AXSpeechManager _processDidStartCallback:]
%@ Speech finished: %d %@
-[AXSpeechManager speechSynthesizer:didFinishSpeakingRequest:successfully:withError:]
No action for request: %@
processedRange
notified
originalRange
VOTEmoticons
plist
v32@?0@8@16^B24
\pause=350\ 
Unable to create AVSpeechSynthesisVoice from TTSVoice: %@
AVSpeechSynthesisVoice *AXAVSpeechSynthesisVoiceFromTTSSpeechVoice(TTSSpeechVoice *__strong)
AXLanguageManager
Class getAXLanguageManagerClass(void)_block_invoke
Unable to find class %s
void *AccessibilityUtilitiesLibrary(void)
NSString *AXVOLocalizedStringForCharacter_Soft(UTF32Char, NSString *__strong)
AXVOLocalizedStringForCharacter
IPHONE_SIMULATOR_ROOT
/System/Library/CoreServices/VoiceOverTouch.app
NSBundle *VOTBundle()
AXEmojiUtilities.m
Unable to create VOT bundle from path: %@
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
internal-emoji-locale-cache
 %@ 
emoji.suffix
v32@?0{_NSRange=QQ}8@"NSString"24
AXSpeech
%@ Don't call -cancel to stop an AXSpeechThread, call -stop instead.
Create action with SSMLRepresentation %@ ... shouldQueue: %@
processedString unexpectedly empty
Cannot update aux session. Synth not ready
Requesting use of aux session
Aux session exists. Updating with category: %@
Error setting participates in now playing: %@
Aux session does not exist. Creating and updating with category: %@
Could not update aux category: %@
Reverting back to shared audio session
Audio session should have been disabled before deallocating
%{public}s
Arguments wrong format: %@
Failed to speak request with error: %@. Attempting to speak again with fallback identifier: %@
Creating AV from TTS for: %@
softlink:r:path:/System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
AXSpeechAction
AXSpeechManager
TTSSpeechSynthesizerDelegate
NSObject
AXEmojiUtilities
AXSpeechThread
T@"AXSpeechAction",&,N,V_requestedActionDuringAudioInterruption
T#,R
T@?,C,N,V_onSpeechStartCallback
T@"AXDispatchTimer",&,N,V_audioDeactivatorTimer
_markerCallback
T@"NSMutableArray",&,N,V_emojiRangeReplacements
_phonemeSubstitutionsForAction:
T@"NSObject<OS_voucher>",&,N,V_voucher
_string
T@"NSString",&,N,V_finalSpokenString
audioQueueFlags
T@"NSString",&,N,V_processedString
bundleWithPath:
T@"NSString",C,N,V_ssmlRepresentation
cannotInterrupt
T@"NSString",R,C
dealloc
T@?,C,N,V_completionCallback
languageCodeForVoiceIdentifier:
T@?,C,N,V_onPauseCallback
onPauseCallback
T@?,C,N,V_onWillSpeakRangeCallback
processedString
TB,N,V_cannotInterrupt
removeObserver:
TB,N,V_didRequestResumeSpeakingDuringAudioInterruption
setAudioSessionInactiveTimeout:
TB,N,V_ignoreCustomSubstitutions
setShouldQueue:
TB,N,V_shouldDetectLanguage
valueWithRange:
TB,N,V_shouldPrecomposeString
voiceIdentifierUsedForLanguage:
TB,N,V_shouldProcessEmoticons
wordCallbackPostProcessedOffset
.cxx_destruct
T@"NSArray",&,N
T@"AVAudioSession",&,N,V_audioSession
TB,N,V_isPaused
T@"NSAttributedString",C,N,V_attributedString
_pauseSpeaking:
T@"NSNumber",&,N,V_originalSpeechRateForJobOverride
_shouldHandleAudioInterruptions
T@"NSString",&,N,V_audioSessionCategory
_volume
T@"NSString",&,N,V_language
availableVoices
T@"NSString",&,N,V_voiceIdentifier
canBeDownloaded
T@"NSString",C,N,V_string
containsString:
T@?,C,N,V_audioBufferCallback
isProxy
T@?,C,N,V_markerCallback
lowercaseString
T@?,C,N,V_onResumeCallback
opaqueSessionID
T@?,C,N,V_requestWillStart
release
TB,N,V_didRequestPauseSpeakingDuringAudioInterruption
setAudioSessionCategoryOptions:
TB,N,V_didRequestStartSpeakingDuringAudioInterruption
setIsInstalled:
TB,N,V_isInAudioInterruption
skipLuthorRules
TB,N,V_shouldHandleAudioInterruptions
voiceIdentifier
TB,N,V_shouldProcessEmoji
voucher
TB,N,V_shouldQueue
TB,N,V_skipLuthorRules
TB,N,V_speechEnabled
TB,N,V_supportsAccurateWordCallbacks
TB,N,V_synthesizeSilently
TB,N,V_useMonarchStyleSpeechRate
TB,N,V_usesAuxiliarySession
TB,N,V_wasSpeakingBeforeAudioInterruption
TB,R,D,N
TB,R,N,V_showControlCenterControls
TI,N,V_audioQueueFlags
TQ,N,V_audioSessionCategoryOptions
TQ,N,V_setActiveOptions
TQ,R
Td,N,V_audioInterruptionStartedTime
Td,N,V_audioSessionInactiveTimeout
Td,N,V_pitch
Td,N,V_speakingRate
Td,N,V_volume
Tq,N,V_state
Tq,N,V_wordCallbackPostProcessedOffset
UTF8String
__speechJobFinished:
_attributedString
_audioBufferCallback
_audioDeactivatorTimer
_audioInterruptionStartedTime
_audioQueueFlags
_audioSession
_audioSessionCategory
_audioSessionCategoryOptions
_audioSessionInactiveTimeout
_audioSessionObserversEnabled
_cannotInterrupt
_clearSpeechQueue
_completionCallback
_continueSpeaking
_detectLanguageFromContent
_didBeginInterruption
_didEndInterruption
_didRequestPauseSpeakingDuringAudioInterruption
_didRequestResumeSpeakingDuringAudioInterruption
_didRequestStartSpeakingDuringAudioInterruption
_dispatchSpeechAction:
_emojiRangeReplacements
_enqueueSelectorOnSpeechThread:object:waitUntilDone:
_finalSpokenString
_handleAudioInterruption:
_handleMediaServicesWereLost:
_handleMediaServicesWereReset:
_ignoreCustomSubstitutions
_initialize
_initializeEmojiStructures:
_isCharacterNativelySpeakable:languageCode:
_isInAudioInterruption
_isPaused
_isSpeaking
_isSpeaking:
_language
_machPort
_onPauseCallback
_onResumeCallback
_onSpeechStartCallback
_onWillSpeakRangeCallback
_originalSpeechRateForJobOverride
_pitch
_processAudioBufferCallback:
_processDidContinueCallback:
_processDidPauseCallback:
_processDidStartCallback:
_processWillSpeechRange:
_processedString
_propertyQueue
_requestWillStart
_requestedActionDuringAudioInterruption
_resetAvailableVoices
_resetAvailableVoices:
_resetInterruptionTracking
_runThread
_setActiveOptions
_shouldDetectLanguage
_shouldPrecomposeString
_shouldProcessEmoji
_shouldProcessEmoticons
_shouldQueue
_showControlCenterControls
_skipLuthorRules
_speakingRate
_speechEnabled
_speechJobFinished:action:
_speechQueue
_speechThreadFinished
_speechThreadQueueLock
_speechVoiceForIdentifier:language:footprint:
_ssmlRepresentation
_startNextSpeechJob
_state
_stopSpeaking:
_supportsAccurateWordCallbacks
_synthesizeSilently
_synthesizer
_tearDown
_threadRunLoop
_updateAudioSessionProperties
_updateAuxiliarySession
_updateUserSubstitutions
_useMonarchStyleSpeechRate
_usesAuxiliarySession
_voiceIdentifier
_voucher
_wasSpeakingBeforeAudioInterruption
_wordCallbackPostProcessedOffset
actionWithAttributedString:shouldQueue:
actionWithSSMLRepresentation:shouldQueue:
actionWithString:shouldQueue:
addObject:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addPort:forMode:
afterDelay:processBlock:
allVoices:
array
arrayWithObjects:count:
attributedString
audioBufferCallback
audioDeactivatorTimer
audioFileSettingsForVoice:
audioInterruptionStartedTime
audioSession
audioSessionCategory
audioSessionCategoryOptions
audioSessionInactiveTimeout
autorelease
auxiliarySession
avSpeechVoicesForTTSSpeechVoices:
availableLanguageCodes
availableSuperCompactVoices
availableVoices:
ax_filteredArrayUsingBlock:
ax_flatMappedArrayUsingBlock:
boolValue
bundleIdentifier
cancel
channelWithChannel:
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
class
clearSpeechQueue
completionCallback
conformsToProtocol:
continueSpeaking
continueSpeakingWithError:
convertChannels:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createRegularExpressionFromString:
currentHandler
currentLanguageCode
currentProcessAllowedToSaveVoiceInfo
currentRunLoop
currentThread
customPronunciationSubstitutions
debugDescription
defaultCenter
description
dialectForLanguageID:
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
didRequestPauseSpeakingDuringAudioInterruption
didRequestResumeSpeakingDuringAudioInterruption
didRequestStartSpeakingDuringAudioInterruption
dispatchSpeechAction:
distantFuture
emojiRangeFromString:withSearchRange:
emojiRangeReplacements
enumerateAttribute:inRange:options:usingBlock:
enumerateEmojiCharactersInString:languageCode:withBlock:
enumerateKeysAndObjectsUsingBlock:
exemplarCharacterSet
externalVoiceIdentifierUsedForLanguage:
finalSpokenString
firstObject
footprint
gender
getCFRunLoop
getCharacters:
getCharacters:range:
handleAudioSessionObservers:
handleFailureInFunction:file:lineNumber:description:
hash
identifier
ignoreCustomSubstitutions
indexOfObject:
init
initWithTargetSerialQueue:
intValue
integerValue
isActive
isCancelled
isCombinedFootprint
isDefault
isEqual:
isEqualToString:
isFallbackDefault
isFinished
isInAudioInterruption
isKindOfClass:
isLoaded
isMemberOfClass:
isPaused
isSpeaking
language
languageCode
length
literalStringMarkup:string:speakCap:
loadAndReturnError:
locale
localizedDescription
lock
main
mainBundle
markerCallback
matchedRangesForString:withRegularExpression:
mutableCopy
name
nonCombinedVoiceId
numberWithInt:
numberWithUnsignedInt:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
observeValueForKeyPath:ofObject:change:context:
onResumeCallback
onSpeechStartCallback
onWillSpeakRangeCallback
originalSpeechRateForJobOverride
outputChannels
pathForResource:ofType:
pauseMarkupString:
pauseSpeaking:
pauseSpeakingAtNextBoundary:error:
performSelector:
performSelector:onThread:withObject:waitUntilDone:
performSelector:withObject:
performSelector:withObject:withObject:
pitch
port
precomposedStringWithCanonicalMapping
preprocessAction
processInfo
processName
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeValue
registerUpdateBlock:forRetrieveSelector:withListener:
regularExpressionWithPattern:options:error:
remapLanguageCode:
removeAllObjects
removeObjectIdenticalTo:
removeObserver:forKeyPath:context:
removeObserver:name:object:
replaceCharactersInRange:withString:
replaceObjectAtIndex:withObject:
requestWillStart
requestedActionDuringAudioInterruption
resourcesWithType:subType:
respondsToSelector:
retain
retainCount
runMode:beforeDate:
self
setActive:withOptions:error:
setActiveOptions
setAssetSize:
setAttributedString:
setAudioBufferCallback:
setAudioDeactivatorTimer:
setAudioInterruptionStartedTime:
setAudioQueueFlags:
setAudioSession:
setAudioSessionCategory:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
setBundleIdentifier:
setCanBeDownloaded:
setCannotInterrupt:
setCategory:error:
setCategory:withOptions:error:
setCompletionCallback:
setDelegate:
setDidRequestPauseSpeakingDuringAudioInterruption:
setDidRequestResumeSpeakingDuringAudioInterruption:
setDidRequestStartSpeakingDuringAudioInterruption:
setEmojiRangeReplacements:
setFinalSpokenString:
setGender:
setIdentifier:
setIgnoreCustomSubstitutions:
setIsCombinedVoice:
setIsDefault:
setIsFallbackDefault:
setIsInAudioInterruption:
setIsPaused:
setLanguage:
setMarkerCallback:
setName:
setNonCombinedVoiceId:
setNonLocalizedNameWithoutQuality:
setObject:forKeyedSubscript:
setOnPauseCallback:
setOnResumeCallback:
setOnSpeechStartCallback:
setOnWillSpeakRangeCallback:
setOriginalSpeechRateForJobOverride:
setOriginalString:
setOutputChannels:
setParticipatesInNowPlayingAppPolicy:error:
setPhonemeSubstitutions:
setPhonemes:
setPitch:
setProcessedString:
setQuality:
setRate:
setReplacementRange:
setRequestWillStart:
setRequestedActionDuringAudioInterruption:
setSetActiveOptions:
setShouldDetectLanguage:
setShouldHandleAudioInterruptions:
setShouldPrecomposeString:
setShouldProcessEmoji:
setShouldProcessEmoticons:
setSkipLuthorRules:
setSpeakingRate:
setSpeakingRequestClientContext:
setSpeechEnabled:
setSsmlRepresentation:
setState:
setString:
setSupportsAccurateWordCallbacks:
setSynthesisProviderVoice:
setSynthesizeSilently:
setUseMonarchStyleRate:
setUseMonarchStyleSpeechRate:
setUserSubstitutions:
setUsesAuxiliarySession:
setVoiceIdentifier:
setVolume:
setVoucher:
setWasSpeakingBeforeAudioInterruption:
setWordCallbackPostProcessedOffset:
sharedInstance
shouldDetectLanguage
shouldHandleAudioInterruptions
shouldPrecomposeString
shouldProcessEmoji
shouldProcessEmoticons
shouldQueue
showControlCenterControls
speakingRate
speechEnabled
speechMarkupStringForType:forIdentifier:string:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:didEncounterMarker:forRequest:
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeakingRequest:successfully:withError:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:didSynthesizeSilentlyToURL:forRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechVoice
spellOutLetterCaseMarkupString:string:
spellOutMarkupString:string:
ssmlRepresentation
start
startSpeakingString:withLanguageCode:request:error:
state
stop
stopSpeaking
stopSpeaking:
stopSpeakingAtNextBoundary:synchronously:error:
string
stringByAppendingString:
stringByApplyingTransform:reverse:
stringByRemovingEmojiCharacters:
stringByReplacingCharactersInRange:withString:
stringByReplacingEmojiCharactersWithEmojiDescriptions:stringForPauses:language:rangeReplacements:appendEmojiSuffix:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
stringWithUTF8String:
substringToIndex:
substringWithRange:
superclass
supportsAccurateWordCallbacks
synthesisProviderVoice
synthesizeSilently
tearDown
test_actionStartTap:
test_setAvailableVoices:
test_setUnitTestMode:
test_setUseMaxSpeechRate:
text
unlock
uppercaseLetterCharacterSet
useMonarchStyleSpeechRate
useSpecificAudioSession:
userInfo
usesAuxiliarySession
voiceForIdentifier:
voiceType
volume
wasSpeakingBeforeAudioInterruption
whitespaceAndNewlineCharacterSet
zone
@28@0:8@16B24
v20@0:8B16
@16@0:8
@24@0:8^{_NSZone=}16
v16@0:8
B16@0:8
v24@0:8@16
q16@0:8
v24@0:8q16
@?16@0:8
v24@0:8@?16
d16@0:8
v24@0:8d16
@"NSString"
@"NSAttributedString"
@"NSMutableArray"
@32@0:8@16@24
@24@0:8@16
B28@0:8S16@20
@36@0:8@16@24B32
@20@0:8B16
^{URegularExpression=}24@0:8@16
@32@0:8@16^{URegularExpression=}24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v44@0:8@16@24B32@36
v52@0:8@16@24B32@36@44
v48@0:8@16{_NSRange=QQ}24@40
v40@0:8@16@24@32
v32@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24
v44@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24B32@"NSError"36
v52@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24B32@"NSString"36@"NSError"44
v48@0:8@"TTSSpeechSynthesizer"16{_NSRange=QQ}24@"TTSSpeechRequest"40
v40@0:8@"TTSSpeechSynthesizer"16@"<TTSMarker>"24@"TTSSpeechRequest"32
v40@0:8@"TTSSpeechSynthesizer"16@"NSURL"24@"TTSSpeechRequest"32
B36@0:8:16@24B32
v48@0:8@16@24@32^v40
v24@0:8Q16
v28@0:8B16@20
v20@0:8i16
I16@0:8
v20@0:8I16
@"TTSSpeechSynthesizer"
@"AXSpeechThread"
@"NSObject<OS_dispatch_queue>"
@"NSLock"
@"AXSpeechAction"
@"AVAudioSession"
@"NSNumber"
@"AXDispatchTimer"
{_NSRange=QQ}40@0:8@16{_NSRange=QQ}24
v40@0:8@16@24@?32
@52@0:8@16@24@32@40B48
@"NSPort"
@"NSRunLoop"
@"NSObject<OS_voucher>"
com.apple.speech.synthesis.voice.Alex
com.apple.ttsbundle.gryphon_male
com.apple.ttsbundle.gryphon_female
com.apple.ttsbundle.gryphon-neural_male
com.apple.ttsbundle.gryphon-neural_female
(pause\=(\d{1,4})\\)
content is nil, language detection not possible
%s:%d %@
-[AXSpeechAction _detectLanguageFromContent]
v8@?0
com.apple.Accessibility
SpeechManager
Not enough characters (%lu) to accurately detect language
could not determine content language, returning default
<AXSpeechAction: %p> %@ :Pitch %f : Language: %@, voiceId: %@
speech-manager-properties
-[AXSpeechManager _updateAuxiliarySession]
AXSpeechManager.m
NSThread.currentThread == _runThread
-[AXSpeechManager handleAudioSessionObservers:]
audioSessionCategory
audioSessionCategoryOptions
-[AXSpeechManager _enqueueSelectorOnSpeechThread:object:waitUntilDone:]
![NSThread.currentThread isEqual:_runThread]
Speech interrupted, pausing
-[AXSpeechManager _didBeginInterruption]
AVSpeechSynthesizer Audio interruption notification: %@
-[AXSpeechManager _handleAudioInterruption:]
-[AXSpeechManager _updateAudioSessionProperties]
[NSThread.currentThread isEqual:_runThread]
Error setting category: %@
AXSettings
Synthesizer created: %@
-[AXSpeechManager _initialize]
]\-^
\b[%@]\b
\b[\%@]\b
CapitalLetterFormat
VOTLocalizedStrings
B32@?0@"TTSAXResource"8Q16^B24
@16@?0@"TTSAXResource"8
**** AX Error: Could not load AccessibilityUtilities.framework bundle. bundleWithPath came back nil
+[AXSpeechManager availableVoices:]_block_invoke
Could not load bundle: %@
@16@?0@"TTSSpeechVoice"8
@16@?0@8
com.apple.springboard
com.apple.accessibility.AccessibilityUIServer
com.apple.AccessibilityUIServer
Removing from queue: %@
-[AXSpeechManager _speechJobFinished:action:]
Remaining queue: %@
Start next job
Scheduling audio session deactivation in: %f
Error setting audio session to inactive: %@
-[AXSpeechManager _speechJobFinished:action:]_block_invoke
v40@?0@8{_NSRange=QQ}16^B32
Existing speech job already in flight
-[AXSpeechManager _startNextSpeechJob]
Is in audio interruption, not starting speech
%@ Will speak: %@ %f
Stopping existing job
Pitch change: %@
v16@?0@"AVAudioBuffer"8
Error setting active: %@
Speech Error:%@
%@ Should queue: %@ -> %d
-[AXSpeechManager _dispatchSpeechAction:]
Telling synthesizer to stop because this job doesn't want to queue
isSpeaking: %d
Speech queue items: %@
Starting next job
-[AXSpeechManager clearSpeechQueue]
![_runThread isFinished]
-[AXSpeechManager dispatchSpeechAction:]
-[AXSpeechManager pauseSpeaking:]
-[AXSpeechManager continueSpeaking]
-[AXSpeechManager isSpeaking]
-[AXSpeechManager _processDidStartCallback:]
%@ Speech finished: %d %@
-[AXSpeechManager speechSynthesizer:didFinishSpeakingRequest:successfully:withError:]
No action for request: %@
processedRange
notified
originalRange
VOTEmoticons
plist
v32@?0@8@16^B24
\pause=350\ 
Unable to create AVSpeechSynthesisVoice from TTSVoice: %@
AVSpeechSynthesisVoice *AXAVSpeechSynthesisVoiceFromTTSSpeechVoice(TTSSpeechVoice *__strong)
AXLanguageManager
Class getAXLanguageManagerClass(void)_block_invoke
Unable to find class %s
void *AccessibilityUtilitiesLibrary(void)
NSString *AXVOLocalizedStringForCharacter_Soft(UTF32Char, NSString *__strong)
AXVOLocalizedStringForCharacter
IPHONE_SIMULATOR_ROOT
/System/Library/CoreServices/VoiceOverTouch.app
NSBundle *VOTBundle()
AXEmojiUtilities.m
Unable to create VOT bundle from path: %@
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
internal-emoji-locale-cache
 %@ 
emoji.suffix
v32@?0{_NSRange=QQ}8@"NSString"24
AXSpeech
%@ Don't call -cancel to stop an AXSpeechThread, call -stop instead.
Create action with SSMLRepresentation %@ ... shouldQueue: %@
processedString unexpectedly empty
%{public}s
Cannot update aux session. Synth not ready
Requesting use of aux session
Aux session exists. Updating with category: %@
Error setting participates in now playing: %@
Aux session does not exist. Creating and updating with category: %@
Could not update aux category: %@
Reverting back to shared audio session
Audio session should have been disabled before deallocating
Arguments wrong format: %@
Failed to speak request with error: %@. Attempting to speak again with fallback identifier: %@
Creating AV from TTS for: %@
softlink:r:path:/System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
AXSpeechAction
AXSpeechManager
TTSSpeechSynthesizerDelegate
NSObject
AXEmojiUtilities
AXSpeechThread
T@"AXSpeechAction",&,N,V_requestedActionDuringAudioInterruption
T#,R
T@?,C,N,V_onSpeechStartCallback
T@"AXDispatchTimer",&,N,V_audioDeactivatorTimer
_markerCallback
T@"NSMutableArray",&,N,V_emojiRangeReplacements
_phonemeSubstitutionsForAction:
T@"NSObject<OS_voucher>",&,N,V_voucher
_string
T@"NSString",&,N,V_finalSpokenString
audioQueueFlags
T@"NSString",&,N,V_processedString
bundleWithPath:
T@"NSString",C,N,V_ssmlRepresentation
cannotInterrupt
T@"NSString",R,C
dealloc
T@?,C,N,V_completionCallback
languageCodeForVoiceIdentifier:
T@?,C,N,V_onPauseCallback
onPauseCallback
T@?,C,N,V_onWillSpeakRangeCallback
processedString
TB,N,V_cannotInterrupt
removeObserver:
TB,N,V_didRequestResumeSpeakingDuringAudioInterruption
setAudioSessionInactiveTimeout:
TB,N,V_ignoreCustomSubstitutions
setShouldQueue:
TB,N,V_shouldDetectLanguage
valueWithRange:
TB,N,V_shouldPrecomposeString
voiceIdentifierUsedForLanguage:
TB,N,V_shouldProcessEmoticons
wordCallbackPostProcessedOffset
.cxx_destruct
T@"NSArray",&,N
T@"AVAudioSession",&,N,V_audioSession
TB,N,V_isPaused
T@"NSAttributedString",C,N,V_attributedString
_pauseSpeaking:
T@"NSNumber",&,N,V_originalSpeechRateForJobOverride
_shouldHandleAudioInterruptions
T@"NSString",&,N,V_audioSessionCategory
_volume
T@"NSString",&,N,V_language
availableVoices
T@"NSString",&,N,V_voiceIdentifier
canBeDownloaded
T@"NSString",C,N,V_string
containsString:
T@?,C,N,V_audioBufferCallback
isProxy
T@?,C,N,V_markerCallback
lowercaseString
T@?,C,N,V_onResumeCallback
opaqueSessionID
T@?,C,N,V_requestWillStart
release
TB,N,V_didRequestPauseSpeakingDuringAudioInterruption
setAudioSessionCategoryOptions:
TB,N,V_didRequestStartSpeakingDuringAudioInterruption
setIsInstalled:
TB,N,V_isInAudioInterruption
skipLuthorRules
TB,N,V_shouldHandleAudioInterruptions
voiceIdentifier
TB,N,V_shouldProcessEmoji
voucher
TB,N,V_shouldQueue
TB,N,V_skipLuthorRules
TB,N,V_speechEnabled
TB,N,V_supportsAccurateWordCallbacks
TB,N,V_synthesizeSilently
TB,N,V_useMonarchStyleSpeechRate
TB,N,V_usesAuxiliarySession
TB,N,V_wasSpeakingBeforeAudioInterruption
TB,R,D,N
TB,R,N,V_showControlCenterControls
TI,N,V_audioQueueFlags
TQ,N,V_audioSessionCategoryOptions
TQ,N,V_setActiveOptions
TQ,R
Td,N,V_audioInterruptionStartedTime
Td,N,V_audioSessionInactiveTimeout
Td,N,V_pitch
Td,N,V_speakingRate
Td,N,V_volume
Tq,N,V_state
Tq,N,V_wordCallbackPostProcessedOffset
UTF8String
__speechJobFinished:
_attributedString
_audioBufferCallback
_audioDeactivatorTimer
_audioInterruptionStartedTime
_audioQueueFlags
_audioSession
_audioSessionCategory
_audioSessionCategoryOptions
_audioSessionInactiveTimeout
_audioSessionObserversEnabled
_cannotInterrupt
_clearSpeechQueue
_completionCallback
_continueSpeaking
_detectLanguageFromContent
_didBeginInterruption
_didEndInterruption
_didRequestPauseSpeakingDuringAudioInterruption
_didRequestResumeSpeakingDuringAudioInterruption
_didRequestStartSpeakingDuringAudioInterruption
_dispatchSpeechAction:
_emojiRangeReplacements
_enqueueSelectorOnSpeechThread:object:waitUntilDone:
_finalSpokenString
_handleAudioInterruption:
_handleMediaServicesWereLost:
_handleMediaServicesWereReset:
_ignoreCustomSubstitutions
_initialize
_initializeEmojiStructures:
_isCharacterNativelySpeakable:languageCode:
_isInAudioInterruption
_isPaused
_isSpeaking
_isSpeaking:
_language
_machPort
_onPauseCallback
_onResumeCallback
_onSpeechStartCallback
_onWillSpeakRangeCallback
_originalSpeechRateForJobOverride
_pitch
_processAudioBufferCallback:
_processDidContinueCallback:
_processDidPauseCallback:
_processDidStartCallback:
_processWillSpeechRange:
_processedString
_propertyQueue
_requestWillStart
_requestedActionDuringAudioInterruption
_resetAvailableVoices
_resetAvailableVoices:
_resetInterruptionTracking
_runThread
_setActiveOptions
_shouldDetectLanguage
_shouldPrecomposeString
_shouldProcessEmoji
_shouldProcessEmoticons
_shouldQueue
_showControlCenterControls
_skipLuthorRules
_speakingRate
_speechEnabled
_speechJobFinished:action:
_speechQueue
_speechThreadFinished
_speechThreadQueueLock
_speechVoiceForIdentifier:language:footprint:
_ssmlRepresentation
_startNextSpeechJob
_state
_stopSpeaking:
_supportsAccurateWordCallbacks
_synthesizeSilently
_synthesizer
_tearDown
_threadRunLoop
_updateAudioSessionProperties
_updateAuxiliarySession
_updateUserSubstitutions
_useMonarchStyleSpeechRate
_usesAuxiliarySession
_voiceIdentifier
_voucher
_wasSpeakingBeforeAudioInterruption
_wordCallbackPostProcessedOffset
actionWithAttributedString:shouldQueue:
actionWithSSMLRepresentation:shouldQueue:
actionWithString:shouldQueue:
addObject:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addPort:forMode:
afterDelay:processBlock:
allVoices:
array
arrayWithObjects:count:
attributedString
audioBufferCallback
audioDeactivatorTimer
audioFileSettingsForVoice:
audioInterruptionStartedTime
audioSession
audioSessionCategory
audioSessionCategoryOptions
audioSessionInactiveTimeout
autorelease
auxiliarySession
avSpeechVoicesForTTSSpeechVoices:
availableLanguageCodes
availableSuperCompactVoices
availableVoices:
ax_filteredArrayUsingBlock:
ax_flatMappedArrayUsingBlock:
boolValue
bundleIdentifier
cancel
channelWithChannel:
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
class
clearSpeechQueue
completionCallback
conformsToProtocol:
continueSpeaking
continueSpeakingWithError:
convertChannels:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createRegularExpressionFromString:
currentHandler
currentLanguageCode
currentProcessAllowedToSaveVoiceInfo
currentRunLoop
currentThread
customPronunciationSubstitutions
debugDescription
defaultCenter
description
dialectForLanguageID:
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
didRequestPauseSpeakingDuringAudioInterruption
didRequestResumeSpeakingDuringAudioInterruption
didRequestStartSpeakingDuringAudioInterruption
dispatchSpeechAction:
distantFuture
emojiRangeFromString:withSearchRange:
emojiRangeReplacements
enumerateAttribute:inRange:options:usingBlock:
enumerateEmojiCharactersInString:languageCode:withBlock:
enumerateKeysAndObjectsUsingBlock:
exemplarCharacterSet
externalVoiceIdentifierUsedForLanguage:
finalSpokenString
firstObject
footprint
gender
getCFRunLoop
getCharacters:
getCharacters:range:
handleAudioSessionObservers:
handleFailureInFunction:file:lineNumber:description:
hash
identifier
ignoreCustomSubstitutions
indexOfObject:
init
initWithTargetSerialQueue:
intValue
integerValue
isActive
isCancelled
isCombinedFootprint
isDefault
isEqual:
isEqualToString:
isFallbackDefault
isFinished
isInAudioInterruption
isKindOfClass:
isLoaded
isMemberOfClass:
isPaused
isSpeaking
language
languageCode
length
literalStringMarkup:string:speakCap:
loadAndReturnError:
locale
localizedDescription
lock
main
mainBundle
markerCallback
matchedRangesForString:withRegularExpression:
mutableCopy
name
nonCombinedVoiceId
numberWithInt:
numberWithUnsignedInt:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
observeValueForKeyPath:ofObject:change:context:
onResumeCallback
onSpeechStartCallback
onWillSpeakRangeCallback
originalSpeechRateForJobOverride
outputChannels
pathForResource:ofType:
pauseMarkupString:
pauseSpeaking:
pauseSpeakingAtNextBoundary:error:
performSelector:
performSelector:onThread:withObject:waitUntilDone:
performSelector:withObject:
performSelector:withObject:withObject:
pitch
port
precomposedStringWithCanonicalMapping
preprocessAction
processInfo
processName
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeValue
registerUpdateBlock:forRetrieveSelector:withListener:
regularExpressionWithPattern:options:error:
remapLanguageCode:
removeAllObjects
removeObjectIdenticalTo:
removeObserver:forKeyPath:context:
removeObserver:name:object:
replaceCharactersInRange:withString:
replaceObjectAtIndex:withObject:
requestWillStart
requestedActionDuringAudioInterruption
resourcesWithType:subType:
respondsToSelector:
retain
retainCount
runMode:beforeDate:
self
setActive:withOptions:error:
setActiveOptions
setAssetSize:
setAttributedString:
setAudioBufferCallback:
setAudioDeactivatorTimer:
setAudioInterruptionStartedTime:
setAudioQueueFlags:
setAudioSession:
setAudioSessionCategory:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
setBundleIdentifier:
setCanBeDownloaded:
setCannotInterrupt:
setCategory:error:
setCategory:withOptions:error:
setCompletionCallback:
setDelegate:
setDidRequestPauseSpeakingDuringAudioInterruption:
setDidRequestResumeSpeakingDuringAudioInterruption:
setDidRequestStartSpeakingDuringAudioInterruption:
setEmojiRangeReplacements:
setFinalSpokenString:
setGender:
setIdentifier:
setIgnoreCustomSubstitutions:
setIsCombinedVoice:
setIsDefault:
setIsFallbackDefault:
setIsInAudioInterruption:
setIsPaused:
setLanguage:
setMarkerCallback:
setName:
setNonCombinedVoiceId:
setNonLocalizedNameWithoutQuality:
setObject:forKeyedSubscript:
setOnPauseCallback:
setOnResumeCallback:
setOnSpeechStartCallback:
setOnWillSpeakRangeCallback:
setOriginalSpeechRateForJobOverride:
setOriginalString:
setOutputChannels:
setParticipatesInNowPlayingAppPolicy:error:
setPhonemeSubstitutions:
setPhonemes:
setPitch:
setProcessedString:
setQuality:
setRate:
setReplacementRange:
setRequestWillStart:
setRequestedActionDuringAudioInterruption:
setSetActiveOptions:
setShouldDetectLanguage:
setShouldHandleAudioInterruptions:
setShouldPrecomposeString:
setShouldProcessEmoji:
setShouldProcessEmoticons:
setSkipLuthorRules:
setSpeakingRate:
setSpeakingRequestClientContext:
setSpeechEnabled:
setSsmlRepresentation:
setState:
setString:
setSupportsAccurateWordCallbacks:
setSynthesisProviderVoice:
setSynthesizeSilently:
setUseMonarchStyleRate:
setUseMonarchStyleSpeechRate:
setUserSubstitutions:
setUsesAuxiliarySession:
setVoiceIdentifier:
setVolume:
setVoucher:
setWasSpeakingBeforeAudioInterruption:
setWordCallbackPostProcessedOffset:
sharedInstance
shouldDetectLanguage
shouldHandleAudioInterruptions
shouldPrecomposeString
shouldProcessEmoji
shouldProcessEmoticons
shouldQueue
showControlCenterControls
speakingRate
speechEnabled
speechMarkupStringForType:forIdentifier:string:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:didEncounterMarker:forRequest:
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeakingRequest:successfully:withError:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:didSynthesizeSilentlyToURL:forRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechVoice
spellOutLetterCaseMarkupString:string:
spellOutMarkupString:string:
ssmlRepresentation
start
startSpeakingString:withLanguageCode:request:error:
state
stop
stopSpeaking
stopSpeaking:
stopSpeakingAtNextBoundary:synchronously:error:
string
stringByAppendingString:
stringByApplyingTransform:reverse:
stringByRemovingEmojiCharacters:
stringByReplacingCharactersInRange:withString:
stringByReplacingEmojiCharactersWithEmojiDescriptions:stringForPauses:language:rangeReplacements:appendEmojiSuffix:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
stringWithUTF8String:
substringToIndex:
substringWithRange:
superclass
supportsAccurateWordCallbacks
synthesisProviderVoice
synthesizeSilently
tearDown
test_actionStartTap:
test_setAvailableVoices:
test_setUnitTestMode:
test_setUseMaxSpeechRate:
text
unlock
uppercaseLetterCharacterSet
useMonarchStyleSpeechRate
useSpecificAudioSession:
userInfo
usesAuxiliarySession
voiceForIdentifier:
voiceType
volume
wasSpeakingBeforeAudioInterruption
whitespaceAndNewlineCharacterSet
zone
@28@0:8@16B24
v20@0:8B16
@16@0:8
@24@0:8^{_NSZone=}16
v16@0:8
B16@0:8
v24@0:8@16
q16@0:8
v24@0:8q16
@?16@0:8
v24@0:8@?16
d16@0:8
v24@0:8d16
@"NSString"
@"NSAttributedString"
@"NSMutableArray"
@32@0:8@16@24
@24@0:8@16
B28@0:8S16@20
@36@0:8@16@24B32
@20@0:8B16
^{URegularExpression=}24@0:8@16
@32@0:8@16^{URegularExpression=}24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v44@0:8@16@24B32@36
v52@0:8@16@24B32@36@44
v48@0:8@16{_NSRange=QQ}24@40
v40@0:8@16@24@32
v32@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24
v44@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24B32@"NSError"36
v52@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24B32@"NSString"36@"NSError"44
v48@0:8@"TTSSpeechSynthesizer"16{_NSRange=QQ}24@"TTSSpeechRequest"40
v40@0:8@"TTSSpeechSynthesizer"16@"<TTSMarker>"24@"TTSSpeechRequest"32
v40@0:8@"TTSSpeechSynthesizer"16@"NSURL"24@"TTSSpeechRequest"32
B36@0:8:16@24B32
v48@0:8@16@24@32^v40
v24@0:8Q16
v28@0:8B16@20
v20@0:8i16
I16@0:8
v20@0:8I16
@"TTSSpeechSynthesizer"
@"AXSpeechThread"
@"NSObject<OS_dispatch_queue>"
@"NSLock"
@"AXSpeechAction"
@"AVAudioSession"
@"NSNumber"
@"AXDispatchTimer"
{_NSRange=QQ}40@0:8@16{_NSRange=QQ}24
v40@0:8@16@24@?32
@52@0:8@16@24@32@40B48
@"NSPort"
@"NSRunLoop"
@"NSObject<OS_voucher>"
