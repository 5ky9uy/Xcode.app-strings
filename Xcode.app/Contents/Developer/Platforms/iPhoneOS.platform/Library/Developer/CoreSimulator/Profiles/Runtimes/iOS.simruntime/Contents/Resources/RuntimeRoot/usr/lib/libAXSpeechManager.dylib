com.apple.speech.voice.Alex
com.apple.ttsbundle.gryphon_male
com.apple.ttsbundle.gryphon_female
com.apple.ttsbundle.gryphon-neural_male
com.apple.ttsbundle.gryphon-neural_female
(pause\=(\d{1,4})\\)
content is nil, language detection not possible
%s:%d %@
-[AXSpeechAction _detectLanguageFromContent]
v8@?0
com.apple.Accessibility
SpeechManager
Not enough characters (%lu) to accurately detect language
could not determine content language, returning default
<AXSpeechAction: %p> %@ :Pitch %f : Language: %@, voiceId: %@
speech-manager-properties
-[AXSpeechManager _updateAuxiliarySession]
AXSpeechManager.m
NSThread.currentThread == _runThread
-[AXSpeechManager handleAudioSessionObservers:]
audioSessionCategory
audioSessionCategoryOptions
-[AXSpeechManager _enqueueSelectorOnSpeechThread:object:waitUntilDone:]
![NSThread.currentThread isEqual:_runThread]
Speech interrupted, pausing
-[AXSpeechManager _didBeginInterruption]
AVSpeechSynthesizer Audio interruption notification: %@
-[AXSpeechManager _handleAudioInterruption:]
-[AXSpeechManager _updateAudioSessionProperties]
[NSThread.currentThread isEqual:_runThread]
Error setting category: %@
AXSettings
Synthesizer created: %@
-[AXSpeechManager _initialize]
B32@?0@"TTSAXResource"8Q16^B24
@16@?0@"TTSAXResource"8
**** AX Error: Could not load AccessibilityUtilities.framework bundle. bundleWithPath came back nil
+[AXSpeechManager availableVoices:]_block_invoke
Could not load bundle: %@
@16@?0@"TTSSpeechVoice"8
com.apple.accessibility.AccessibilityUIServer
com.apple.springboard
Removing from queue: %@
-[AXSpeechManager _speechJobFinished:action:]
Remaining queue: %@
Start next job
Scheduling audio session deactivation in: %f
Error setting audio session to inactive: %@
-[AXSpeechManager _speechJobFinished:action:]_block_invoke
v40@?0@8{_NSRange=QQ}16^B32
Existing speech job already in flight
-[AXSpeechManager _startNextSpeechJob]
Is in audio interruption, not starting speech
%@ Will speak: %@ %f
Stopping existing job
v16@?0@"AVAudioBuffer"8
Error setting active: %@
Speech Error:%@
%@ Should queue: %@ -> %d
-[AXSpeechManager _dispatchSpeechAction:]
Telling synthesizer to stop because this job doesn't want to queue
isSpeaking: %d
Speech queue items: %@
Starting next job
-[AXSpeechManager clearSpeechQueue]
![_runThread isFinished]
-[AXSpeechManager dispatchSpeechAction:]
-[AXSpeechManager pauseSpeaking:]
-[AXSpeechManager continueSpeaking]
-[AXSpeechManager isSpeaking]
-[AXSpeechManager _processDidStartCallback:]
%@ Speech finished: %d %@
-[AXSpeechManager speechSynthesizer:didFinishSpeakingRequest:successfully:withError:]
No action for request: %@
processedRange
notified
originalRange
VOTEmoticons
plist
VOTLocalizedStrings
v32@?0@8@16^B24
\pause=350\ 
Unable to create AVSpeechSynthesisVoice from TTSVoice: %@
AVSpeechSynthesisVoice *AXAVSpeechSynthesisVoiceFromTTSSpeechVoice(TTSSpeechVoice *__strong)
IPHONE_SIMULATOR_ROOT
/System/Library/CoreServices/VoiceOverTouch.app
NSBundle *VOTBundle()
AXEmojiUtilities.m
Unable to create VOT bundle from path: %@
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
internal-emoji-locale-cache
 %@ 
emoji.suffix
AXSpeech
%@ Don't call -cancel to stop an AXSpeechThread, call -stop instead.
Create action with SSMLRepresentation %@ ... shouldQueue: %@
processedString unexpectedly empty
Cannot update aux session. Synth not ready
Requesting use of aux session
Aux session exists. Updating with category: %@
Error setting participates in now playing: %@
Aux session does not exist. Creating and updating with category: %@
Could not update aux category: %@
Reverting back to shared audio session
Audio session should have been disabled before deallocating
%{public}s
Arguments wrong format: %@
Failed to speak request with error: %@. Attempting to speak again with fallback identifier: %@
Creating AV from TTS for: %@
AXSpeechAction
AXSpeechManager
TTSSpeechSynthesizerDelegate
NSObject
AXEmojiUtilities
AXSpeechThread
setString:
setShouldQueue:
setAttributedString:
setSsmlRepresentation:
init
string
copy
language
setLanguage:
precomposedStringWithCanonicalMapping
_detectLanguageFromContent
voiceIdentifier
setProcessedString:
isEqualToString:
processedString
length
regularExpressionWithPattern:options:error:
stringByReplacingMatchesInString:options:range:withTemplate:
stringWithFormat:
UTF8String
rangeOfString:
actionWithString:shouldQueue:
actionWithAttributedString:shouldQueue:
actionWithSSMLRepresentation:shouldQueue:
test_setUseMaxSpeechRate:
copyWithZone:
preprocessAction
description
shouldQueue
cannotInterrupt
setCannotInterrupt:
shouldDetectLanguage
setShouldDetectLanguage:
shouldProcessEmoji
setShouldProcessEmoji:
shouldProcessEmoticons
setShouldProcessEmoticons:
shouldPrecomposeString
setShouldPrecomposeString:
ignoreCustomSubstitutions
setIgnoreCustomSubstitutions:
synthesizeSilently
setSynthesizeSilently:
setVoiceIdentifier:
state
setState:
audioBufferCallback
setAudioBufferCallback:
markerCallback
setMarkerCallback:
attributedString
ssmlRepresentation
completionCallback
setCompletionCallback:
onPauseCallback
setOnPauseCallback:
onResumeCallback
setOnResumeCallback:
onWillSpeakRangeCallback
setOnWillSpeakRangeCallback:
onSpeechStartCallback
setOnSpeechStartCallback:
speakingRate
setSpeakingRate:
useMonarchStyleSpeechRate
setUseMonarchStyleSpeechRate:
pitch
setPitch:
volume
setVolume:
wordCallbackPostProcessedOffset
setWordCallbackPostProcessedOffset:
finalSpokenString
setFinalSpokenString:
emojiRangeReplacements
setEmojiRangeReplacements:
.cxx_destruct
_string
_pitch
_volume
_speakingRate
_language
_shouldQueue
_cannotInterrupt
_shouldDetectLanguage
_shouldProcessEmoji
_shouldProcessEmoticons
_shouldPrecomposeString
_completionCallback
_onPauseCallback
_onResumeCallback
_onWillSpeakRangeCallback
_onSpeechStartCallback
_ignoreCustomSubstitutions
_synthesizeSilently
_useMonarchStyleSpeechRate
_voiceIdentifier
_state
_audioBufferCallback
_markerCallback
_attributedString
_ssmlRepresentation
_wordCallbackPostProcessedOffset
_finalSpokenString
_processedString
_emojiRangeReplacements
T@"NSString",&,N,V_processedString
T@"NSMutableArray",&,N,V_emojiRangeReplacements
TB,N,V_shouldQueue
TB,N,V_cannotInterrupt
TB,N,V_shouldDetectLanguage
TB,N,V_shouldProcessEmoji
TB,N,V_shouldProcessEmoticons
TB,N,V_shouldPrecomposeString
TB,N,V_ignoreCustomSubstitutions
TB,N,V_synthesizeSilently
T@"NSString",&,N,V_language
T@"NSString",&,N,V_voiceIdentifier
Tq,N,V_state
T@?,C,N,V_audioBufferCallback
T@?,C,N,V_markerCallback
T@"NSString",C,N,V_string
T@"NSAttributedString",C,N,V_attributedString
T@"NSString",C,N,V_ssmlRepresentation
T@?,C,N,V_completionCallback
T@?,C,N,V_onPauseCallback
T@?,C,N,V_onResumeCallback
T@?,C,N,V_onWillSpeakRangeCallback
T@?,C,N,V_onSpeechStartCallback
Td,N,V_speakingRate
TB,N,V_useMonarchStyleSpeechRate
Td,N,V_pitch
Td,N,V_volume
Tq,N,V_wordCallbackPostProcessedOffset
T@"NSString",&,N,V_finalSpokenString
setShouldHandleAudioInterruptions:
initWithTargetSerialQueue:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
setAudioSessionInactiveTimeout:
start
_initialize
performSelector:onThread:withObject:waitUntilDone:
_updateAuxiliarySession
currentThread
handleAudioSessionObservers:
audioSession
audioSessionCategory
audioSessionCategoryOptions
sharedInstance
isEqual:
setCategory:error:
auxiliarySession
setAudioSession:
setParticipatesInNowPlayingAppPolicy:error:
setCategory:withOptions:error:
opaqueSessionID
useSpecificAudioSession:
defaultCenter
removeObserver:name:object:
_handleAudioInterruption:
addObserver:selector:name:object:
_handleMediaServicesWereLost:
_handleMediaServicesWereReset:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
removeObserver:
dealloc
lock
unlock
_tearDown
audioDeactivatorTimer
isActive
cancel
setActive:withOptions:error:
stop
shouldHandleAudioInterruptions
_didBeginInterruption
_updateAudioSessionProperties
_didEndInterruption
setAudioInterruptionStartedTime:
setWasSpeakingBeforeAudioInterruption:
setDidRequestStartSpeakingDuringAudioInterruption:
setDidRequestPauseSpeakingDuringAudioInterruption:
setDidRequestResumeSpeakingDuringAudioInterruption:
setRequestedActionDuringAudioInterruption:
setIsInAudioInterruption:
didRequestStartSpeakingDuringAudioInterruption
requestedActionDuringAudioInterruption
dispatchSpeechAction:
wasSpeakingBeforeAudioInterruption
didRequestPauseSpeakingDuringAudioInterruption
didRequestResumeSpeakingDuringAudioInterruption
continueSpeaking
_resetInterruptionTracking
isSpeaking
isPaused
pauseSpeaking:
userInfo
objectForKey:
integerValue
_enqueueSelectorOnSpeechThread:object:waitUntilDone:
observeValueForKeyPath:ofObject:change:context:
setDelegate:
mainBundle
bundleIdentifier
setBundleIdentifier:
_updateUserSubstitutions
customPronunciationSubstitutions
registerUpdateBlock:forRetrieveSelector:withListener:
setUserSubstitutions:
speechMarkupStringForType:forIdentifier:string:
availableLanguageCodes
currentProcessAllowedToSaveVoiceInfo
availableVoices:
resourcesWithType:subType:
footprint
ax_filteredArrayUsingBlock:
speechVoice
identifier
stringByReplacingOccurrencesOfString:withString:
setIdentifier:
ax_flatMappedArrayUsingBlock:
bundleWithPath:
isLoaded
loadAndReturnError:
allVoices:
currentVoices
_resetAvailableVoices:
processInfo
processName
getCharacters:range:
getCharacters:
array
valueWithRange:
addObject:
audioFileSettingsForVoice:
setIsPaused:
firstObject
removeObjectIdenticalTo:
count
_startNextSpeechJob
audioSessionInactiveTimeout
setActiveOptions
afterDelay:processBlock:
_speechVoiceForIdentifier:language:footprint:
substringWithRange:
setOriginalString:
setPhonemes:
setReplacementRange:
enumerateAttribute:inRange:options:usingBlock:
objectAtIndex:
isInAudioInterruption
audioInterruptionStartedTime
name
stopSpeakingAtNextBoundary:synchronously:error:
setRate:
setUseMonarchStyleRate:
audioQueueFlags
setAudioQueueFlags:
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:didFinishSpeakingRequest:successfully:withError:
_phonemeSubstitutionsForAction:
setPhonemeSubstitutions:
setSpeakingRequestClientContext:
supportsAccurateWordCallbacks
setSupportsAccurateWordCallbacks:
skipLuthorRules
setSkipLuthorRules:
_processAudioBufferCallback:
arrayWithObjects:count:
requestWillStart
startSpeakingString:withLanguageCode:request:error:
localizedDescription
objectAtIndexedSubscript:
clearSpeechQueue
removeAllObjects
isFinished
_clearSpeechQueue
speechEnabled
_dispatchSpeechAction:
intValue
pauseSpeakingAtNextBoundary:error:
_pauseSpeaking:
numberWithUnsignedInt:
continueSpeakingWithError:
_continueSpeaking
_stopSpeaking:
stopSpeaking:
_isSpeaking:
boolValue
outputChannels
convertChannels:
setOutputChannels:
countByEnumeratingWithState:objects:count:
channelWithChannel:
_processDidStartCallback:
_speechJobFinished:action:
__speechJobFinished:
languageCode
text
numberWithInt:
_processDidPauseCallback:
_processDidContinueCallback:
_processWillSpeechRange:
rangeValue
indexOfObject:
mutableCopy
setObject:forKeyedSubscript:
replaceObjectAtIndex:withObject:
currentLanguageCode
spellOutMarkupString:string:
pauseMarkupString:
availableVoices
availableSuperCompactVoices
_resetAvailableVoices
createRegularExpressionFromString:
matchedRangesForString:withRegularExpression:
remapLanguageCode:
test_actionStartTap:
test_setUnitTestMode:
test_setAvailableVoices:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechSynthesizer:didSynthesizeSilentlyToURL:forRequest:
setUsesAuxiliarySession:
tearDown
setSetActiveOptions:
setAudioSessionCategory:
setAudioSessionCategoryOptions:
externalVoiceIdentifierUsedForLanguage:
voiceIdentifierUsedForLanguage:
setSpeechEnabled:
stopSpeaking
showControlCenterControls
usesAuxiliarySession
setRequestWillStart:
originalSpeechRateForJobOverride
setOriginalSpeechRateForJobOverride:
setAudioDeactivatorTimer:
_speechQueue
_synthesizer
_runThread
_propertyQueue
_isSpeaking
_speechEnabled
_audioSessionObserversEnabled
_speechThreadFinished
_speechThreadQueueLock
_isPaused
_isInAudioInterruption
_supportsAccurateWordCallbacks
_skipLuthorRules
_showControlCenterControls
_usesAuxiliarySession
_wasSpeakingBeforeAudioInterruption
_didRequestStartSpeakingDuringAudioInterruption
_didRequestPauseSpeakingDuringAudioInterruption
_didRequestResumeSpeakingDuringAudioInterruption
_shouldHandleAudioInterruptions
_audioQueueFlags
_requestedActionDuringAudioInterruption
_audioSessionCategoryOptions
_audioSessionCategory
_setActiveOptions
_audioSession
_audioSessionInactiveTimeout
_requestWillStart
_originalSpeechRateForJobOverride
_audioDeactivatorTimer
_audioInterruptionStartedTime
T@"NSNumber",&,N,V_originalSpeechRateForJobOverride
TB,N,V_isPaused
T@"AXDispatchTimer",&,N,V_audioDeactivatorTimer
TB,N,V_wasSpeakingBeforeAudioInterruption
TB,N,V_didRequestStartSpeakingDuringAudioInterruption
TB,N,V_didRequestPauseSpeakingDuringAudioInterruption
TB,N,V_didRequestResumeSpeakingDuringAudioInterruption
Td,N,V_audioInterruptionStartedTime
T@"AVAudioSession",&,N,V_audioSession
TB,N,V_isInAudioInterruption
T@"AXSpeechAction",&,N,V_requestedActionDuringAudioInterruption
TB,N,V_shouldHandleAudioInterruptions
TB,N,V_speechEnabled
TB,R,N,V_showControlCenterControls
TB,R,D,N
TI,N,V_audioQueueFlags
TB,N,V_usesAuxiliarySession
TQ,N,V_setActiveOptions
T@"NSString",&,N,V_audioSessionCategory
TQ,N,V_audioSessionCategoryOptions
T@"NSArray",&,N
Td,N,V_audioSessionInactiveTimeout
T@?,C,N,V_requestWillStart
TB,N,V_supportsAccurateWordCallbacks
TB,N,V_skipLuthorRules
pathForResource:ofType:
dictionaryWithContentsOfFile:
whitespaceAndNewlineCharacterSet
rangeOfString:options:range:
characterAtIndex:
characterIsMember:
substringToIndex:
replaceCharactersInRange:withString:
dictionaryWithObjects:forKeys:count:
enumerateKeysAndObjectsUsingBlock:
stringByReplacingEmojiCharactersWithEmojiDescriptions:stringForPauses:language:rangeReplacements:appendEmojiSuffix:
setNonLocalizedNameWithoutQuality:
setQuality:
setIsInstalled:
canBeDownloaded
setCanBeDownloaded:
setAssetSize:
isCombinedFootprint
setIsCombinedVoice:
isDefault
setIsDefault:
isFallbackDefault
setIsFallbackDefault:
nonCombinedVoiceId
setNonCombinedVoiceId:
synthesisProviderVoice
setSynthesisProviderVoice:
gender
setGender:
lowercaseString
stringWithUTF8String:
stringByAppendingString:
currentHandler
handleFailureInFunction:file:lineNumber:description:
_initializeEmojiStructures:
emojiRangeFromString:withSearchRange:
stringByRemovingEmojiCharacters:
setName:
currentRunLoop
port
addPort:forMode:
isCancelled
distantFuture
runMode:beforeDate:
getCFRunLoop
main
_machPort
_threadRunLoop
@28@0:8@16B24
v20@0:8B16
@16@0:8
@24@0:8^{_NSZone=}16
v16@0:8
B16@0:8
v24@0:8@16
q16@0:8
v24@0:8q16
@?16@0:8
v24@0:8@?16
d16@0:8
v24@0:8d16
@"NSString"
@"NSAttributedString"
@"NSMutableArray"
@32@0:8@16@24
@24@0:8@16
@20@0:8B16
^{URegularExpression=}24@0:8@16
@32@0:8@16^{URegularExpression=}24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v44@0:8@16@24B32@36
v52@0:8@16@24B32@36@44
v48@0:8@16{_NSRange=QQ}24@40
v40@0:8@16@24@32
v32@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24
v44@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24B32@"NSError"36
v52@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24B32@"NSString"36@"NSError"44
v48@0:8@"TTSSpeechSynthesizer"16{_NSRange=QQ}24@"TTSSpeechRequest"40
v40@0:8@"TTSSpeechSynthesizer"16@"NSURL"24@"TTSSpeechRequest"32
B36@0:8:16@24B32
v48@0:8@16@24@32^v40
v24@0:8Q16
v28@0:8B16@20
v20@0:8i16
I16@0:8
v20@0:8I16
@"TTSSpeechSynthesizer"
@"AXSpeechThread"
@"NSObject<OS_dispatch_queue>"
@"NSLock"
@"AXSpeechAction"
@"AVAudioSession"
@"NSNumber"
@"AXDispatchTimer"
{_NSRange=QQ}40@0:8@16{_NSRange=QQ}24
@52@0:8@16@24@32@40B48
@"NSPort"
@"NSRunLoop"
com.apple.speech.voice.Alex
com.apple.ttsbundle.gryphon_male
com.apple.ttsbundle.gryphon_female
com.apple.ttsbundle.gryphon-neural_male
com.apple.ttsbundle.gryphon-neural_female
(pause\=(\d{1,4})\\)
content is nil, language detection not possible
%s:%d %@
-[AXSpeechAction _detectLanguageFromContent]
v8@?0
com.apple.Accessibility
SpeechManager
Not enough characters (%lu) to accurately detect language
could not determine content language, returning default
<AXSpeechAction: %p> %@ :Pitch %f : Language: %@, voiceId: %@
speech-manager-properties
-[AXSpeechManager _updateAuxiliarySession]
AXSpeechManager.m
NSThread.currentThread == _runThread
-[AXSpeechManager handleAudioSessionObservers:]
audioSessionCategory
audioSessionCategoryOptions
-[AXSpeechManager _enqueueSelectorOnSpeechThread:object:waitUntilDone:]
![NSThread.currentThread isEqual:_runThread]
Speech interrupted, pausing
-[AXSpeechManager _didBeginInterruption]
AVSpeechSynthesizer Audio interruption notification: %@
-[AXSpeechManager _handleAudioInterruption:]
-[AXSpeechManager _updateAudioSessionProperties]
[NSThread.currentThread isEqual:_runThread]
Error setting category: %@
AXSettings
Synthesizer created: %@
-[AXSpeechManager _initialize]
B32@?0@"TTSAXResource"8Q16^B24
@16@?0@"TTSAXResource"8
**** AX Error: Could not load AccessibilityUtilities.framework bundle. bundleWithPath came back nil
+[AXSpeechManager availableVoices:]_block_invoke
Could not load bundle: %@
@16@?0@"TTSSpeechVoice"8
com.apple.accessibility.AccessibilityUIServer
com.apple.springboard
Removing from queue: %@
-[AXSpeechManager _speechJobFinished:action:]
Remaining queue: %@
Start next job
Scheduling audio session deactivation in: %f
Error setting audio session to inactive: %@
-[AXSpeechManager _speechJobFinished:action:]_block_invoke
v40@?0@8{_NSRange=QQ}16^B32
Existing speech job already in flight
-[AXSpeechManager _startNextSpeechJob]
Is in audio interruption, not starting speech
%@ Will speak: %@ %f
Stopping existing job
v16@?0@"AVAudioBuffer"8
Error setting active: %@
Speech Error:%@
%@ Should queue: %@ -> %d
-[AXSpeechManager _dispatchSpeechAction:]
Telling synthesizer to stop because this job doesn't want to queue
isSpeaking: %d
Speech queue items: %@
Starting next job
-[AXSpeechManager clearSpeechQueue]
![_runThread isFinished]
-[AXSpeechManager dispatchSpeechAction:]
-[AXSpeechManager pauseSpeaking:]
-[AXSpeechManager continueSpeaking]
-[AXSpeechManager isSpeaking]
-[AXSpeechManager _processDidStartCallback:]
%@ Speech finished: %d %@
-[AXSpeechManager speechSynthesizer:didFinishSpeakingRequest:successfully:withError:]
No action for request: %@
processedRange
notified
originalRange
VOTEmoticons
plist
VOTLocalizedStrings
v32@?0@8@16^B24
\pause=350\ 
Unable to create AVSpeechSynthesisVoice from TTSVoice: %@
AVSpeechSynthesisVoice *AXAVSpeechSynthesisVoiceFromTTSSpeechVoice(TTSSpeechVoice *__strong)
IPHONE_SIMULATOR_ROOT
/System/Library/CoreServices/VoiceOverTouch.app
NSBundle *VOTBundle()
AXEmojiUtilities.m
Unable to create VOT bundle from path: %@
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
internal-emoji-locale-cache
 %@ 
emoji.suffix
AXSpeech
%@ Don't call -cancel to stop an AXSpeechThread, call -stop instead.
Create action with SSMLRepresentation %@ ... shouldQueue: %@
processedString unexpectedly empty
%{public}s
Cannot update aux session. Synth not ready
Requesting use of aux session
Aux session exists. Updating with category: %@
Error setting participates in now playing: %@
Aux session does not exist. Creating and updating with category: %@
Could not update aux category: %@
Reverting back to shared audio session
Audio session should have been disabled before deallocating
Arguments wrong format: %@
Failed to speak request with error: %@. Attempting to speak again with fallback identifier: %@
Creating AV from TTS for: %@
AXSpeechAction
AXSpeechManager
TTSSpeechSynthesizerDelegate
NSObject
AXEmojiUtilities
AXSpeechThread
whitespaceAndNewlineCharacterSet
valueWithRange:
userInfo
useSpecificAudioSession:
unlock
text
synthesisProviderVoice
substringWithRange:
substringToIndex:
stringWithUTF8String:
stringWithFormat:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByAppendingString:
stopSpeakingAtNextBoundary:synchronously:error:
startSpeakingString:withLanguageCode:request:error:
start
speechVoice
speechMarkupStringForType:forIdentifier:string:
sharedInstance
setUserSubstitutions:
setUseMonarchStyleRate:
setSynthesisProviderVoice:
setSpeakingRequestClientContext:
setReplacementRange:
setRate:
setQuality:
setPhonemes:
setPhonemeSubstitutions:
setParticipatesInNowPlayingAppPolicy:error:
setOriginalString:
setObject:forKeyedSubscript:
setNonLocalizedNameWithoutQuality:
setNonCombinedVoiceId:
setName:
setIsInstalled:
setIsFallbackDefault:
setIsDefault:
setIsCombinedVoice:
setIdentifier:
setGender:
setDelegate:
setCategory:withOptions:error:
setCategory:error:
setCanBeDownloaded:
setBundleIdentifier:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
setAssetSize:
setActive:withOptions:error:
runMode:beforeDate:
resourcesWithType:subType:
replaceObjectAtIndex:withObject:
replaceCharactersInRange:withString:
removeObserver:name:object:
removeObserver:forKeyPath:context:
removeObserver:
removeObjectIdenticalTo:
removeAllObjects
regularExpressionWithPattern:options:error:
registerUpdateBlock:forRetrieveSelector:withListener:
rangeValue
rangeOfString:options:range:
rangeOfString:
processName
processInfo
precomposedStringWithCanonicalMapping
port
performSelector:onThread:withObject:waitUntilDone:
pauseSpeakingAtNextBoundary:error:
pathForResource:ofType:
opaqueSessionID
objectForKey:
objectAtIndexedSubscript:
objectAtIndex:
numberWithUnsignedInt:
numberWithInt:
nonCombinedVoiceId
name
mutableCopy
mainBundle
lowercaseString
lock
localizedDescription
loadAndReturnError:
length
languageCode
isLoaded
isFinished
isFallbackDefault
isEqualToString:
isDefault
isCombinedFootprint
isCancelled
isActive
integerValue
intValue
initWithTargetSerialQueue:
indexOfObject:
identifier
handleFailureInFunction:file:lineNumber:description:
getCharacters:range:
getCharacters:
getCFRunLoop
gender
footprint
firstObject
enumerateKeysAndObjectsUsingBlock:
enumerateAttribute:inRange:options:usingBlock:
distantFuture
dictionaryWithObjects:forKeys:count:
dictionaryWithContentsOfFile:
defaultCenter
currentVoices
currentThread
currentRunLoop
currentHandler
countByEnumeratingWithState:objects:count:
count
copy
convertChannels:
continueSpeakingWithError:
characterIsMember:
characterAtIndex:
channelWithChannel:
canBeDownloaded
bundleWithPath:
bundleIdentifier
boolValue
ax_flatMappedArrayUsingBlock:
ax_filteredArrayUsingBlock:
auxiliarySession
arrayWithObjects:count:
array
allVoices:
afterDelay:processBlock:
addPort:forMode:
addObserver:selector:name:object:
addObserver:forKeyPath:options:context:
addObject:
_speechVoiceForIdentifier:language:footprint:
UTF8String
init
actionWithString:shouldQueue:
actionWithAttributedString:shouldQueue:
actionWithSSMLRepresentation:shouldQueue:
test_setUseMaxSpeechRate:
copyWithZone:
preprocessAction
_detectLanguageFromContent
description
shouldQueue
setShouldQueue:
cannotInterrupt
setCannotInterrupt:
shouldDetectLanguage
setShouldDetectLanguage:
shouldProcessEmoji
setShouldProcessEmoji:
shouldProcessEmoticons
setShouldProcessEmoticons:
shouldPrecomposeString
setShouldPrecomposeString:
ignoreCustomSubstitutions
setIgnoreCustomSubstitutions:
synthesizeSilently
setSynthesizeSilently:
language
setLanguage:
voiceIdentifier
setVoiceIdentifier:
state
setState:
audioBufferCallback
setAudioBufferCallback:
markerCallback
setMarkerCallback:
string
setString:
attributedString
setAttributedString:
ssmlRepresentation
setSsmlRepresentation:
completionCallback
setCompletionCallback:
onPauseCallback
setOnPauseCallback:
onResumeCallback
setOnResumeCallback:
onWillSpeakRangeCallback
setOnWillSpeakRangeCallback:
onSpeechStartCallback
setOnSpeechStartCallback:
speakingRate
setSpeakingRate:
useMonarchStyleSpeechRate
setUseMonarchStyleSpeechRate:
pitch
setPitch:
volume
setVolume:
wordCallbackPostProcessedOffset
setWordCallbackPostProcessedOffset:
finalSpokenString
setFinalSpokenString:
processedString
setProcessedString:
emojiRangeReplacements
setEmojiRangeReplacements:
.cxx_destruct
_string
_pitch
_volume
_speakingRate
_language
_shouldQueue
_cannotInterrupt
_shouldDetectLanguage
_shouldProcessEmoji
_shouldProcessEmoticons
_shouldPrecomposeString
_completionCallback
_onPauseCallback
_onResumeCallback
_onWillSpeakRangeCallback
_onSpeechStartCallback
_ignoreCustomSubstitutions
_synthesizeSilently
_useMonarchStyleSpeechRate
_voiceIdentifier
_state
_audioBufferCallback
_markerCallback
_attributedString
_ssmlRepresentation
_wordCallbackPostProcessedOffset
_finalSpokenString
_processedString
_emojiRangeReplacements
T@"NSString",&,N,V_processedString
T@"NSMutableArray",&,N,V_emojiRangeReplacements
TB,N,V_shouldQueue
TB,N,V_cannotInterrupt
TB,N,V_shouldDetectLanguage
TB,N,V_shouldProcessEmoji
TB,N,V_shouldProcessEmoticons
TB,N,V_shouldPrecomposeString
TB,N,V_ignoreCustomSubstitutions
TB,N,V_synthesizeSilently
T@"NSString",&,N,V_language
T@"NSString",&,N,V_voiceIdentifier
Tq,N,V_state
T@?,C,N,V_audioBufferCallback
T@?,C,N,V_markerCallback
T@"NSString",C,N,V_string
T@"NSAttributedString",C,N,V_attributedString
T@"NSString",C,N,V_ssmlRepresentation
T@?,C,N,V_completionCallback
T@?,C,N,V_onPauseCallback
T@?,C,N,V_onResumeCallback
T@?,C,N,V_onWillSpeakRangeCallback
T@?,C,N,V_onSpeechStartCallback
Td,N,V_speakingRate
TB,N,V_useMonarchStyleSpeechRate
Td,N,V_pitch
Td,N,V_volume
Tq,N,V_wordCallbackPostProcessedOffset
T@"NSString",&,N,V_finalSpokenString
_initialize
_updateAuxiliarySession
_handleAudioInterruption:
_handleMediaServicesWereLost:
_handleMediaServicesWereReset:
dealloc
_tearDown
_updateAudioSessionProperties
observeValueForKeyPath:ofObject:change:context:
customPronunciationSubstitutions
_processAudioBufferCallback:
_clearSpeechQueue
_dispatchSpeechAction:
_pauseSpeaking:
_continueSpeaking
_stopSpeaking:
_isSpeaking:
_processDidStartCallback:
__speechJobFinished:
_processDidPauseCallback:
_processDidContinueCallback:
_processWillSpeechRange:
currentLanguageCode
spellOutMarkupString:string:
pauseMarkupString:
availableLanguageCodes
availableVoices
availableSuperCompactVoices
availableVoices:
_resetAvailableVoices
currentProcessAllowedToSaveVoiceInfo
_resetAvailableVoices:
createRegularExpressionFromString:
matchedRangesForString:withRegularExpression:
audioFileSettingsForVoice:
remapLanguageCode:
test_actionStartTap:
test_setUnitTestMode:
test_setAvailableVoices:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:didFinishSpeakingRequest:successfully:withError:
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechSynthesizer:didSynthesizeSilentlyToURL:forRequest:
setUsesAuxiliarySession:
handleAudioSessionObservers:
_enqueueSelectorOnSpeechThread:object:waitUntilDone:
tearDown
_resetInterruptionTracking
_didEndInterruption
_didBeginInterruption
setActiveOptions
setSetActiveOptions:
setAudioSessionCategory:
audioSessionCategory
setAudioSessionCategoryOptions:
audioSessionCategoryOptions
isInAudioInterruption
setIsInAudioInterruption:
audioSession
setAudioSession:
isPaused
setIsPaused:
skipLuthorRules
setSkipLuthorRules:
supportsAccurateWordCallbacks
setSupportsAccurateWordCallbacks:
_updateUserSubstitutions
_speechJobFinished:action:
externalVoiceIdentifierUsedForLanguage:
voiceIdentifierUsedForLanguage:
_phonemeSubstitutionsForAction:
_startNextSpeechJob
setSpeechEnabled:
clearSpeechQueue
dispatchSpeechAction:
pauseSpeaking:
continueSpeaking
stopSpeaking:
stopSpeaking
isSpeaking
outputChannels
setOutputChannels:
audioQueueFlags
setAudioQueueFlags:
speechEnabled
requestedActionDuringAudioInterruption
setRequestedActionDuringAudioInterruption:
showControlCenterControls
usesAuxiliarySession
audioSessionInactiveTimeout
setAudioSessionInactiveTimeout:
requestWillStart
setRequestWillStart:
originalSpeechRateForJobOverride
setOriginalSpeechRateForJobOverride:
audioDeactivatorTimer
setAudioDeactivatorTimer:
wasSpeakingBeforeAudioInterruption
setWasSpeakingBeforeAudioInterruption:
didRequestStartSpeakingDuringAudioInterruption
setDidRequestStartSpeakingDuringAudioInterruption:
didRequestPauseSpeakingDuringAudioInterruption
setDidRequestPauseSpeakingDuringAudioInterruption:
didRequestResumeSpeakingDuringAudioInterruption
setDidRequestResumeSpeakingDuringAudioInterruption:
audioInterruptionStartedTime
setAudioInterruptionStartedTime:
shouldHandleAudioInterruptions
setShouldHandleAudioInterruptions:
_speechQueue
_synthesizer
_runThread
_propertyQueue
_isSpeaking
_speechEnabled
_audioSessionObserversEnabled
_speechThreadFinished
_speechThreadQueueLock
_isPaused
_isInAudioInterruption
_supportsAccurateWordCallbacks
_skipLuthorRules
_showControlCenterControls
_usesAuxiliarySession
_wasSpeakingBeforeAudioInterruption
_didRequestStartSpeakingDuringAudioInterruption
_didRequestPauseSpeakingDuringAudioInterruption
_didRequestResumeSpeakingDuringAudioInterruption
_shouldHandleAudioInterruptions
_audioQueueFlags
_requestedActionDuringAudioInterruption
_audioSessionCategoryOptions
_audioSessionCategory
_setActiveOptions
_audioSession
_audioSessionInactiveTimeout
_requestWillStart
_originalSpeechRateForJobOverride
_audioDeactivatorTimer
_audioInterruptionStartedTime
T@"NSNumber",&,N,V_originalSpeechRateForJobOverride
TB,N,V_isPaused
T@"AXDispatchTimer",&,N,V_audioDeactivatorTimer
TB,N,V_wasSpeakingBeforeAudioInterruption
TB,N,V_didRequestStartSpeakingDuringAudioInterruption
TB,N,V_didRequestPauseSpeakingDuringAudioInterruption
TB,N,V_didRequestResumeSpeakingDuringAudioInterruption
Td,N,V_audioInterruptionStartedTime
T@"AVAudioSession",&,N,V_audioSession
TB,N,V_isInAudioInterruption
T@"AXSpeechAction",&,N,V_requestedActionDuringAudioInterruption
TB,N,V_shouldHandleAudioInterruptions
TB,N,V_speechEnabled
TB,R,N,V_showControlCenterControls
TB,R,D,N
TI,N,V_audioQueueFlags
TB,N,V_usesAuxiliarySession
TQ,N,V_setActiveOptions
T@"NSString",&,N,V_audioSessionCategory
TQ,N,V_audioSessionCategoryOptions
T@"NSArray",&,N
Td,N,V_audioSessionInactiveTimeout
T@?,C,N,V_requestWillStart
TB,N,V_supportsAccurateWordCallbacks
TB,N,V_skipLuthorRules
emojiRangeFromString:withSearchRange:
_initializeEmojiStructures:
stringByRemovingEmojiCharacters:
stringByReplacingEmojiCharactersWithEmojiDescriptions:stringForPauses:language:rangeReplacements:appendEmojiSuffix:
cancel
main
stop
_machPort
_threadRunLoop
@28@0:8@16B24
v20@0:8B16
@16@0:8
@24@0:8^{_NSZone=}16
v16@0:8
B16@0:8
v24@0:8@16
q16@0:8
v24@0:8q16
@?16@0:8
v24@0:8@?16
d16@0:8
v24@0:8d16
@"NSString"
@"NSAttributedString"
@"NSMutableArray"
@32@0:8@16@24
@24@0:8@16
@20@0:8B16
^{URegularExpression=}24@0:8@16
@32@0:8@16^{URegularExpression=}24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v44@0:8@16@24B32@36
v52@0:8@16@24B32@36@44
v48@0:8@16{_NSRange=QQ}24@40
v40@0:8@16@24@32
v32@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24
v44@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24B32@"NSError"36
v52@0:8@"TTSSpeechSynthesizer"16@"TTSSpeechRequest"24B32@"NSString"36@"NSError"44
v48@0:8@"TTSSpeechSynthesizer"16{_NSRange=QQ}24@"TTSSpeechRequest"40
v40@0:8@"TTSSpeechSynthesizer"16@"NSURL"24@"TTSSpeechRequest"32
B36@0:8:16@24B32
v48@0:8@16@24@32^v40
v24@0:8Q16
v28@0:8B16@20
v20@0:8i16
I16@0:8
v20@0:8I16
@"TTSSpeechSynthesizer"
@"AXSpeechThread"
@"NSObject<OS_dispatch_queue>"
@"NSLock"
@"AXSpeechAction"
@"AVAudioSession"
@"NSNumber"
@"AXDispatchTimer"
{_NSRange=QQ}40@0:8@16{_NSRange=QQ}24
@52@0:8@16@24@32@40B48
@"NSPort"
@"NSRunLoop"
