@(#)PROGRAM:ckdiscretionaryd  PROJECT:CloudKit-2000.246.1
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleExecutable</key>
<string>ckdiscretionaryd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.ckdiscretionaryd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleShortVersionString</key>
<string>2000.246.1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>2000.246.1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5312b</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5312b</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.ckdiscretionaryd</string>
<key>com.apple.application-identifier</key>
<string>com.apple.ckdiscretionaryd</string>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>ckdiscretionaryd</string>
</array>
</dict>
</plist>
v8@?0
BRContainersMonitor
Class getBRContainersMonitorClass(void)_block_invoke
NDApplication.m
Unable to find class %s
void *CloudDocsLibrary(void)
com.apple.ckdiscretionaryd.serial
com.apple.ckdiscretionaryd.discTask
B8@?0
Resource Timeout
ckdiscretionaryd:%@
:clouddocs-%@
:%@-%@
-[CKDiscretionaryTask applicationEnteredForeground:]_block_invoke
CKDiscretionaryTask.m
blockStrongSelf.options.discretionaryNetworkBehavior == CKOperationDiscretionaryNetworkBehaviorDiscretionaryWhenBackgrounded
-[CKDiscretionaryTask applicationNoLongerInForeground:]_block_invoke
CK_IN_SYNC_BUBBLE
.debug
unknown
explicit-foreground
foreground
background
explicit-background
com.apple.ckdiscretionaryd.connection
com.apple.ckdiscretionaryd
v16@?0@?<v@?>8
v24@?0B8B12@"NSError"16
started
deferred
v32@?0@"CKDiscretionaryTask"8B16B20@"NSError"24
v16@?0@"CKDiscretionaryTask"8
com.apple.nsnetwork.SpringBoard-queue
v16@?0@"NSDictionary"8
dictionary
objectForKeyedSubscript:
initWithOperationID:
setObject:forKeyedSubscript:
sharedSpringBoard
identifierIsForSpringBoardApplication:
init
array
addObject:
indexOfObject:
removeObjectAtIndex:
countByEnumeratingWithState:objects:count:
initialize
applicationWithIdentifier:
springboardApplicationWithBundleIdentifier:
springBoardApplicationExistsWithIdentifier:
cloudContainerWithIdentifier:
hasForegroundBackgroundStates
isForeground
addObserver:
removeObserver:
invokeSelectorForAllObservers:
.cxx_destruct
_bundleIdentifier
_observers
initWithBundleIdentifier:error:
containingBundleRecord
bundleIdentifier
applicationIsForeground:
count
startMonitoringBundleID:
addObserver:forApplication:
removeObserver:forApplication:
stopMonitoringBundleID:
applicationEnteredForeground:
applicationNoLongerInForeground:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
containingApplication
setContainingApplication:
_containingApplication
T@"NDSpringBoardApplication",&,N,V_containingApplication
containerIDFromPrimaryIdentifier:secondaryIdentifier:
isContainerIDForeground:
addObserver:forContainerID:
removeObserver:forContainerID:
containerIDForPrimaryIdentifier:secondaryIdentifier:
containerDidEnterForeground:
containerDidEnterBackground:
monitor
setMonitor:
setIsForeground:
initializedForegroundStateFromMonitorCallback
setInitializedForegroundStateFromMonitorCallback:
_isForeground
_initializedForegroundStateFromMonitorCallback
_monitor
T@"BRContainersMonitor",&,N,V_monitor
TB,N,V_isForeground
TB,N,V_initializedForegroundStateFromMonitorCallback
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
initWithSchedulerClass:
setupSandbox
initWithInSyncBubble:
serialQueue
setSerialQueue:
schedulerClass
setSchedulerClass:
_serialQueue
_schedulerClass
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T#,&,N,V_schedulerClass
copy
applicationBundleIdentifierOverride
secondarySourceApplicationBundleId
discretionaryNetworkBehavior
application
operationID
setRunning:
setResourceTimer:
resourceTimer
startHandler
task
state
setStartHandler:
suspendHandler
setSuspendHandler:
scheduleOperationID:group:bundleID:requiresPastBuddy:options:state:queue:startHandler:suspendHandler:
running
cancel
setTask:
errorWithDomain:code:format:
timeoutIntervalForResource
dealloc
finish
isEqualToString:
stringWithFormat:
appendFormat:
options
setState:
initWithConnection:operationID:group:bundleID:isSpringBoardApp:requiresPastBuddy:options:schedulerClass:startHandler:suspendHandler:
_schedulerTaskIdentifier
complete
connection
setConnection:
setOperationID:
setOptions:
transaction
setTransaction:
bundleID
setBundleID:
isSpringBoardApp
setIsSpringBoardApp:
cloudDocsContainerID
setCloudDocsContainerID:
setApplication:
_isSpringBoardApp
_running
_connection
_operationID
_options
_startHandler
_suspendHandler
_transaction
_bundleID
_cloudDocsContainerID
_application
_resourceTimer
_task
T@"CKDiscretionaryClientConnection",W,N,V_connection
T@"NSString",&,N,V_operationID
T@"CKDiscretionaryOptions",&,N,V_options
T@?,C,N,V_startHandler
T@?,C,N,V_suspendHandler
T@"NSObject<OS_os_transaction>",&,N,V_transaction
T@"NSString",&,N,V_bundleID
TB,N,V_isSpringBoardApp
T@"NSString",&,N,V_cloudDocsContainerID
T@"NDApplication",&,N,V_application
TB,N,V_running
T@"NSObject<OS_dispatch_source>",&,N,V_resourceTimer
T@"CKDiscretionarySchedulerTask",&,N,V_task
_CKXPCClientToDiscretionaryDaemonInterface
setExportedInterface:
initWithDaemon:connection:
setExportedObject:
exportedObject
cleanup
setInvalidationHandler:
resume
listener:shouldAcceptNewConnection:
stringByAppendingString:
initWithMachServiceName:
setDelegate:
_state
TQ,N,V_state
_xpcConnection
valueForEntitlement:
boolValue
auditToken
scheduleSendBarrierBlock:
initWithDaemon:group:bundleID:isSpringBoardApp:requiresPastBuddy:scheduleSendBarrierBlock:
handleDiscretionaryOperationShouldStart:nonDiscretionary:error:
scheduleSendBarrierBlock
daemon
tasksByOperationID
group
requiresPastBuddy
handleDiscretionaryOperationShouldSuspend
finishOperationID:
keyEnumerator
setTasksByOperationID:
queueOperationID:options:clientOperationCallbackProxy:withBlock:
setRequiresPastBuddy:
setDaemon:
setGroup:
setScheduleSendBarrierBlock:
_requiresPastBuddy
_daemon
_tasksByOperationID
_group
_scheduleSendBarrierBlock
T@"CKDiscretionaryDaemon",W,N,V_daemon
T@"NSMutableDictionary",&,N,V_tasksByOperationID
TB,N,V_requiresPastBuddy
T@"NSString",&,N,V_group
T@?,C,N,V_scheduleSendBarrierBlock
setupMonitor
allObjects
updateInterestedBundleIDs:
handleApplicationStateChange:
setHandler:
unsignedIntegerValue
numberWithUnsignedInt:
removeObject:
containsObject:
applicationStateForApplication:
removeObjectForKey:
applicationStateForBundleID:
defaultWorkspace
applicationIsInstalled:
initWithBundleIdentifier:allowPlaceholder:error:
isPlaceholder
isUpdate
_appStates
_monitoredBundleIDs
_queue
NDApplication
NDSpringBoardApplication
NDSpringBoardAppObserver
NSObject
NDCloudContainer
BRContainerObserver
CKDiscretionaryDaemon
CKDiscretionaryTask
NDApplicationObserver
CKDiscretionaryXPCListener
NSXPCListenerDelegate
CKDiscretionarySchedulerTask
CKDiscretionaryImmediateScheduler
CKDiscretionaryScheduler
CKDiscretionaryClientConnection
CKXPCDiscretionaryDaemon
NDSpringBoard
v16@0:8
@24@0:8@16
B24@0:8@16
B16@0:8
v24@0:8@16
v24@0:8:16
@"NSString"
@"NSMutableArray"
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@"NDSpringBoardApplication"
@32@0:8@16@24
v20@0:8B16
@"BRContainersMonitor"
@20@0:8B16
@24@0:8#16
v24@0:8#16
@"NSObject<OS_dispatch_queue>"
v24@0:8@"NDApplication"16
@88@0:8@16@24@32@40B48B52@56#64@?72@?80
@?16@0:8
v24@0:8@?16
@"CKDiscretionaryClientConnection"
@"CKDiscretionaryOptions"
@"NSObject<OS_os_transaction>"
@"NDApplication"
@"NSObject<OS_dispatch_source>"
@"CKDiscretionarySchedulerTask"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8Q16
@84@0:8@16@24@32B40@44Q52@60@?68@?76
@"CKDiscretionarySchedulerTask"84@0:8@"NSString"16@"NSString"24@"NSString"32B40@"CKDiscretionaryOptions"44Q52@"NSObject<OS_dispatch_queue>"60@?<B@?>68@?<B@?>76
v48@0:8@16@24@32@?40
v48@0:8@"NSString"16@"CKDiscretionaryOptions"24@"<CKOperationCallbacks>"32@?<v@?>40
@56@0:8@16@24@32B40B44@?48
@"CKDiscretionaryDaemon"
@"NSMutableDictionary"
v32@0:8@16@24
I24@0:8@16
@"BKSApplicationStateMonitor"
@"NSMutableSet"
Bundle ID %@ doesn't belong to an extension: %@
Being asked if container with identifier %{public}@ is foreground before getting callback from BRContainersMonitor! Foreground state is %c
Container %{public}@ entered background
Container %{public}@ entered foreground
Missing critical attribute for initilization of CKDiscretionaryTask. serialQueue:%p, connection:%p, operationID:%p, options:%p, scheduler:%p, startHandler:%p, suspendHandler:%p, transaction:%p, bundleID:%p
%{public}@ scheduling in state %{public}@
startHandler failed, self not available.
suspendHandler failed, self not available.
resourceTimer failed, self not available.
%{public}@ resourceTimeout
Failed to initialize CKDiscretionarySchedulerTask for CKDiscretionaryTask
{public}%@ monitoring cloud docs container ID %{public}@
applicationEnteredForeground, updating priority of %{public}@
applicationEnteredForeground failed, self not available.
applicationNoLongerInForeground, updating priority of %{public}@
applicationNoLongerInForeground failed, self not available.
%{public}@ complete
Received SIGTERM
Client is a PlugIn with bundle identifier %{public}@
Failed to initialize LSApplicationExtensionRecord with bundle id %@: %@
Containing app for PlugIn is %{public}@
%{public}@ queued for %@ on connection %p
no-op. self no longer available.
no-op. daemon no longer available.
no-op. options.operationID is nil.
no-op. operationID already exists.
%{public}@ %{public}@
%{public}@ suspended
%{public}@ failed to initialize discretionary task
%{public}@ scheduled
%{public}@ finishing
no-op. %{public}@ no longer available.
%{public}@ did not exist.
cleanup for %{public}@ on connection %p
Application %{public}@ no longer foreground
Application %{public}@ entered foreground
softlink:r:path:/System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
@(#)PROGRAM:ckdiscretionaryd  PROJECT:CloudKit-2000.246.1
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleExecutable</key>
<string>ckdiscretionaryd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.ckdiscretionaryd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleShortVersionString</key>
<string>2000.246.1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>2000.246.1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5312b</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5312b</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.ckdiscretionaryd</string>
<key>com.apple.application-identifier</key>
<string>com.apple.ckdiscretionaryd</string>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>ckdiscretionaryd</string>
</array>
</dict>
</plist>
v8@?0
BRContainersMonitor
Class getBRContainersMonitorClass(void)_block_invoke
NDApplication.m
Unable to find class %s
void *CloudDocsLibrary(void)
com.apple.ckdiscretionaryd.serial
com.apple.ckdiscretionaryd.discTask
B8@?0
Resource Timeout
ckdiscretionaryd:%@
:clouddocs-%@
:%@-%@
-[CKDiscretionaryTask applicationEnteredForeground:]_block_invoke
CKDiscretionaryTask.m
blockStrongSelf.options.discretionaryNetworkBehavior == CKOperationDiscretionaryNetworkBehaviorDiscretionaryWhenBackgrounded
-[CKDiscretionaryTask applicationNoLongerInForeground:]_block_invoke
CK_IN_SYNC_BUBBLE
.debug
unknown
explicit-foreground
foreground
background
explicit-background
com.apple.ckdiscretionaryd.connection
com.apple.ckdiscretionaryd
v16@?0@?<v@?>8
v24@?0B8B12@"NSError"16
started
deferred
v32@?0@"CKDiscretionaryTask"8B16B20@"NSError"24
v16@?0@"CKDiscretionaryTask"8
com.apple.nsnetwork.SpringBoard-queue
v16@?0@"NSDictionary"8
setDelegate:
applicationStateForApplication:
dictionary
isPlaceholder
defaultWorkspace
setObject:forKeyedSubscript:
copy
handleFailureInFunction:file:lineNumber:description:
appendFormat:
resume
initWithBundleIdentifier:error:
objectForKeyedSubscript:
valueForEntitlement:
removeObjectForKey:
containsObject:
setInvalidationHandler:
allObjects
initWithMachServiceName:
handleDiscretionaryOperationShouldSuspend
initWithBundleIdentifier:allowPlaceholder:error:
numberWithUnsignedInt:
updateInterestedBundleIDs:
auditToken
addObject:
setHandler:
exportedObject
removeObjectAtIndex:
containingBundleRecord
unsignedIntegerValue
stringWithUTF8String:
handleDiscretionaryOperationShouldStart:nonDiscretionary:error:
isEqualToString:
keyEnumerator
indexOfObject:
array
secondarySourceApplicationBundleId
currentHandler
removeObject:
setExportedObject:
errorWithDomain:code:format:
_CKXPCClientToDiscretionaryDaemonInterface
isUpdate
stringWithFormat:
removeObserver:forContainerID:
isContainerIDForeground:
containerIDFromPrimaryIdentifier:secondaryIdentifier:
setExportedInterface:
countByEnumeratingWithState:objects:count:
timeoutIntervalForResource
addObserver:forContainerID:
applicationBundleIdentifierOverride
_xpcConnection
bundleIdentifier
discretionaryNetworkBehavior
applicationIsInstalled:
stringByAppendingString:
scheduleSendBarrierBlock:
count
init
initialize
applicationWithIdentifier:
springboardApplicationWithBundleIdentifier:
springBoardApplicationExistsWithIdentifier:
cloudContainerWithIdentifier:
initWithOperationID:
hasForegroundBackgroundStates
isForeground
addObserver:
removeObserver:
invokeSelectorForAllObservers:
.cxx_destruct
_bundleIdentifier
_observers
applicationEnteredForeground:
applicationNoLongerInForeground:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
containingApplication
setContainingApplication:
_containingApplication
T@"NDSpringBoardApplication",&,N,V_containingApplication
containerIDForPrimaryIdentifier:secondaryIdentifier:
containerDidEnterForeground:
containerDidEnterBackground:
monitor
setMonitor:
setIsForeground:
initializedForegroundStateFromMonitorCallback
setInitializedForegroundStateFromMonitorCallback:
_isForeground
_initializedForegroundStateFromMonitorCallback
_monitor
T@"BRContainersMonitor",&,N,V_monitor
TB,N,V_isForeground
TB,N,V_initializedForegroundStateFromMonitorCallback
setupSandbox
initWithInSyncBubble:
initWithSchedulerClass:
serialQueue
setSerialQueue:
schedulerClass
setSchedulerClass:
_serialQueue
_schedulerClass
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T#,&,N,V_schedulerClass
dealloc
initWithConnection:operationID:group:bundleID:isSpringBoardApp:requiresPastBuddy:options:schedulerClass:startHandler:suspendHandler:
setResourceTimer:
setTask:
application
_schedulerTaskIdentifier
complete
connection
setConnection:
operationID
setOperationID:
options
setOptions:
startHandler
setStartHandler:
suspendHandler
setSuspendHandler:
transaction
setTransaction:
bundleID
setBundleID:
isSpringBoardApp
setIsSpringBoardApp:
cloudDocsContainerID
setCloudDocsContainerID:
setApplication:
running
setRunning:
resourceTimer
task
_isSpringBoardApp
_running
_connection
_operationID
_options
_startHandler
_suspendHandler
_transaction
_bundleID
_cloudDocsContainerID
_application
_resourceTimer
_task
T@"CKDiscretionaryClientConnection",W,N,V_connection
T@"NSString",&,N,V_operationID
T@"CKDiscretionaryOptions",&,N,V_options
T@?,C,N,V_startHandler
T@?,C,N,V_suspendHandler
T@"NSObject<OS_os_transaction>",&,N,V_transaction
T@"NSString",&,N,V_bundleID
TB,N,V_isSpringBoardApp
T@"NSString",&,N,V_cloudDocsContainerID
T@"NDApplication",&,N,V_application
TB,N,V_running
T@"NSObject<OS_dispatch_source>",&,N,V_resourceTimer
T@"CKDiscretionarySchedulerTask",&,N,V_task
listener:shouldAcceptNewConnection:
cancel
finish
state
setState:
_state
TQ,N,V_state
scheduleOperationID:group:bundleID:requiresPastBuddy:options:state:queue:startHandler:suspendHandler:
boolValue
queueOperationID:options:clientOperationCallbackProxy:withBlock:
finishOperationID:
initWithDaemon:group:bundleID:isSpringBoardApp:requiresPastBuddy:scheduleSendBarrierBlock:
initWithDaemon:connection:
cleanup
requiresPastBuddy
setRequiresPastBuddy:
daemon
setDaemon:
tasksByOperationID
setTasksByOperationID:
group
setGroup:
scheduleSendBarrierBlock
setScheduleSendBarrierBlock:
_requiresPastBuddy
_daemon
_tasksByOperationID
_group
_scheduleSendBarrierBlock
T@"CKDiscretionaryDaemon",W,N,V_daemon
T@"NSMutableDictionary",&,N,V_tasksByOperationID
TB,N,V_requiresPastBuddy
T@"NSString",&,N,V_group
T@?,C,N,V_scheduleSendBarrierBlock
sharedSpringBoard
setupMonitor
handleApplicationStateChange:
addObserver:forApplication:
removeObserver:forApplication:
startMonitoringBundleID:
stopMonitoringBundleID:
applicationStateForBundleID:
applicationIsForeground:
identifierIsForSpringBoardApplication:
_appStates
_monitoredBundleIDs
_queue
NDApplication
NDSpringBoardApplication
NDSpringBoardAppObserver
NSObject
NDCloudContainer
BRContainerObserver
CKDiscretionaryDaemon
CKDiscretionaryTask
NDApplicationObserver
CKDiscretionaryXPCListener
NSXPCListenerDelegate
CKDiscretionarySchedulerTask
CKDiscretionaryImmediateScheduler
CKDiscretionaryScheduler
CKDiscretionaryClientConnection
CKXPCDiscretionaryDaemon
NDSpringBoard
v16@0:8
@24@0:8@16
B24@0:8@16
B16@0:8
v24@0:8@16
v24@0:8:16
@"NSString"
@"NSMutableArray"
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@"NDSpringBoardApplication"
@32@0:8@16@24
v20@0:8B16
@"BRContainersMonitor"
@20@0:8B16
@24@0:8#16
v24@0:8#16
@"NSObject<OS_dispatch_queue>"
v24@0:8@"NDApplication"16
@88@0:8@16@24@32@40B48B52@56#64@?72@?80
@?16@0:8
v24@0:8@?16
@"CKDiscretionaryClientConnection"
@"CKDiscretionaryOptions"
@"NSObject<OS_os_transaction>"
@"NDApplication"
@"NSObject<OS_dispatch_source>"
@"CKDiscretionarySchedulerTask"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8Q16
@84@0:8@16@24@32B40@44Q52@60@?68@?76
@"CKDiscretionarySchedulerTask"84@0:8@"NSString"16@"NSString"24@"NSString"32B40@"CKDiscretionaryOptions"44Q52@"NSObject<OS_dispatch_queue>"60@?<B@?>68@?<B@?>76
v48@0:8@16@24@32@?40
v48@0:8@"NSString"16@"CKDiscretionaryOptions"24@"<CKOperationCallbacks>"32@?<v@?>40
@56@0:8@16@24@32B40B44@?48
@"CKDiscretionaryDaemon"
@"NSMutableDictionary"
v32@0:8@16@24
I24@0:8@16
@"BKSApplicationStateMonitor"
@"NSMutableSet"
Bundle ID %@ doesn't belong to an extension: %@
Being asked if container with identifier %{public}@ is foreground before getting callback from BRContainersMonitor! Foreground state is %c
Container %{public}@ entered background
Container %{public}@ entered foreground
Missing critical attribute for initilization of CKDiscretionaryTask. serialQueue:%p, connection:%p, operationID:%p, options:%p, scheduler:%p, startHandler:%p, suspendHandler:%p, transaction:%p, bundleID:%p
%{public}@ scheduling in state %{public}@
startHandler failed, self not available.
suspendHandler failed, self not available.
resourceTimer failed, self not available.
%{public}@ resourceTimeout
Failed to initialize CKDiscretionarySchedulerTask for CKDiscretionaryTask
{public}%@ monitoring cloud docs container ID %{public}@
applicationEnteredForeground, updating priority of %{public}@
applicationEnteredForeground failed, self not available.
applicationNoLongerInForeground, updating priority of %{public}@
applicationNoLongerInForeground failed, self not available.
%{public}@ complete
Received SIGTERM
Client is a PlugIn with bundle identifier %{public}@
Failed to initialize LSApplicationExtensionRecord with bundle id %@: %@
Containing app for PlugIn is %{public}@
%{public}@ queued for %@ on connection %p
no-op. self no longer available.
no-op. daemon no longer available.
no-op. options.operationID is nil.
no-op. operationID already exists.
%{public}@ %{public}@
%{public}@ suspended
%{public}@ failed to initialize discretionary task
%{public}@ scheduled
%{public}@ finishing
no-op. %{public}@ no longer available.
%{public}@ did not exist.
cleanup for %{public}@ on connection %p
Application %{public}@ no longer foreground
Application %{public}@ entered foreground
softlink:r:path:/System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
