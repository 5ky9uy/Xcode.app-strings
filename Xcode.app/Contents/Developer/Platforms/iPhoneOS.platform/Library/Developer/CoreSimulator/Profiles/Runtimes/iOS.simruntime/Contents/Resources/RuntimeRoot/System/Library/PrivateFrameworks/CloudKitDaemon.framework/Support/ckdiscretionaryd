v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
containingApplication
T@"NDSpringBoardApplication",&,N,V_containingApplication
monitor
T@"BRContainersMonitor",&,N,V_monitor
isForeground
TB,N,V_isForeground
initializedForegroundStateFromMonitorCallback
TB,N,V_initializedForegroundStateFromMonitorCallback
BRContainersMonitor
/System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
### Failed to Soft Linked: /System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
com.apple.ckdiscretionaryd.serial
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
schedulerClass
T#,N,V_schedulerClass
com.apple.ckdiscretionaryd.discTask
B8@?0
Resource Timeout
ckdiscretionaryd:%@
:clouddocs-%@
:%@-%@
-[CKDiscretionaryTask applicationEnteredForeground:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-867/ckdiscretionaryd/DaemonFramework/CKDiscretionaryTask.m
blockStrongSelf.options.discretionaryNetworkBehavior == CKOperationDiscretionaryNetworkBehaviorDiscretionaryWhenBackgrounded
-[CKDiscretionaryTask applicationNoLongerInForeground:]_block_invoke
connection
T@"CKDiscretionaryClientConnection",W,N,V_connection
operationID
T@"NSString",&,N,V_operationID
options
T@"CKDiscretionaryOptions",&,N,V_options
startHandler
T@?,C,N,V_startHandler
suspendHandler
T@?,C,N,V_suspendHandler
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
bundleID
T@"NSString",&,N,V_bundleID
isSpringBoardApp
TB,N,V_isSpringBoardApp
cloudDocsContainerID
T@"NSString",&,N,V_cloudDocsContainerID
application
T@"NDApplication",&,N,V_application
running
TB,N,V_running
resourceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_resourceTimer
task
T@"CKDiscretionarySchedulerTask",&,N,V_task
Received SIGTERM. Exiting
CK_IN_SYNC_BUBBLE
unknown
explicit-foreground
foreground
background
explicit-background
state
TQ,N,V_state
com.apple.ckdiscretionaryd.connection
v16@?0@"NSError"8
com.apple.ckdiscretionaryd
started
deferred
v32@?0@"CKDiscretionaryTask"8B16B20@"NSError"24
v16@?0@"CKDiscretionaryTask"8
daemon
T@"CKDiscretionaryDaemon",W,N,V_daemon
client
T@"<CKXPCDiscretionaryClient>",&,N,V_client
tasksByOperationID
T@"NSMutableDictionary",&,N,V_tasksByOperationID
requiresPastBuddy
TB,N,V_requiresPastBuddy
group
T@"NSString",&,N,V_group
com.apple.nsnetwork.SpringBoard-queue
v16@?0@"NSDictionary"8
dictionary
objectForKeyedSubscript:
alloc
initWithOperationID:
setObject:forKeyedSubscript:
sharedSpringBoard
identifierIsForSpringBoardApplication:
init
array
addObject:
indexOfObject:
removeObjectAtIndex:
countByEnumeratingWithState:objects:count:
initialize
applicationWithIdentifier:
springboardApplicationWithBundleIdentifier:
springBoardApplicationExistsWithIdentifier:
cloudContainerWithIdentifier:
hasForegroundBackgroundStates
isForeground
addObserver:
removeObserver:
invokeSelectorForAllObservers:
.cxx_destruct
_bundleIdentifier
_observers
pluginKitProxyForIdentifier:
containingBundle
bundleIdentifier
applicationIsForeground:
count
startMonitoringBundleID:
addObserver:forApplication:
removeObserver:forApplication:
stopMonitoringBundleID:
applicationEnteredForeground:
applicationNoLongerInForeground:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
containingApplication
setContainingApplication:
_containingApplication
containerIDFromPrimaryIdentifier:secondaryIdentifier:
isContainerIDForeground:
addObserver:forContainerID:
removeObserver:forContainerID:
containerIDForPrimaryIdentifier:secondaryIdentifier:
containerDidEnterForeground:
containerDidEnterBackground:
monitor
setMonitor:
setIsForeground:
initializedForegroundStateFromMonitorCallback
setInitializedForegroundStateFromMonitorCallback:
_isForeground
_initializedForegroundStateFromMonitorCallback
_monitor
initWithSchedulerClass:
setupSandbox
initWithInSyncBubble:
serialQueue
setSerialQueue:
schedulerClass
setSchedulerClass:
_serialQueue
_schedulerClass
sourceApplicationBundleId
secondarySourceAppplicationBundleId
discretionaryNetworkBehavior
application
operationID
setRunning:
setResourceTimer:
resourceTimer
startHandler
task
state
setStartHandler:
suspendHandler
setSuspendHandler:
scheduleOperationID:group:bundleID:requiresPastBuddy:options:state:queue:startHandler:suspendHandler:
running
cancel
setTask:
errorWithDomain:code:format:
timeoutIntervalForResource
dealloc
finish
isEqualToString:
stringWithFormat:
appendFormat:
options
setState:
initWithConnection:operationID:group:bundleID:isSpringBoardApp:requiresPastBuddy:options:schedulerClass:startHandler:suspendHandler:
_schedulerTaskIdentifier
complete
connection
setConnection:
setOperationID:
setOptions:
transaction
setTransaction:
bundleID
setBundleID:
isSpringBoardApp
setIsSpringBoardApp:
cloudDocsContainerID
setCloudDocsContainerID:
setApplication:
_isSpringBoardApp
_running
_connection
_operationID
_options
_startHandler
_suspendHandler
_transaction
_bundleID
_cloudDocsContainerID
_application
_resourceTimer
_task
discretionarySuspensionForOperationID:
interfaceWithProtocol:
setRemoteObjectInterface:
queueOperationID:options:startBlock:
finishOperationID:
setExportedInterface:
initWithDaemon:connection:
setExportedObject:
exportedObject
cleanup
setInvalidationHandler:
resume
listener:shouldAcceptNewConnection:
initWithMachServiceName:
setDelegate:
_state
_xpcConnection
stringWithUTF8String:
valueForEntitlement:
boolValue
auditToken
invalidate
remoteObjectProxyWithErrorHandler:
initWithDaemon:client:group:bundleID:isSpringBoardApp:requiresPastBuddy:
daemon
tasksByOperationID
group
requiresPastBuddy
client
keyEnumerator
setTasksByOperationID:
setRequiresPastBuddy:
setDaemon:
setClient:
setGroup:
_requiresPastBuddy
_daemon
_client
_tasksByOperationID
_group
setupMonitor
allObjects
updateInterestedBundleIDs:
handleApplicationStateChange:
setHandler:
unsignedIntegerValue
numberWithUnsignedInt:
removeObject:
containsObject:
applicationStateForApplication:
removeObjectForKey:
applicationStateForBundleID:
defaultWorkspace
applicationIsInstalled:
applicationProxyForIdentifier:
appState
isPlaceholder
isAppUpdate
_appStates
_monitoredBundleIDs
_queue
NDApplication
NDSpringBoardApplication
NDSpringBoardAppObserver
NSObject
NDCloudContainer
BRContainerObserver
CKDiscretionaryDaemon
CKDiscretionaryTask
NDApplicationObserver
CKXPCDiscretionaryClient
CKXPCDiscretionaryDaemon
CKDiscretionaryXPCListener
NSXPCListenerDelegate
CKDiscretionarySchedulerTask
CKDiscretionaryImmediateScheduler
CKDiscretionaryScheduler
CKDiscretionaryClientConnection
NDSpringBoard
v16@0:8
@24@0:8@16
B24@0:8@16
B16@0:8
v24@0:8@16
v24@0:8:16
@"NSString"
@"NSMutableArray"
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@"NDSpringBoardApplication"
@32@0:8@16@24
v20@0:8B16
@"BRContainersMonitor"
@20@0:8B16
@24@0:8#16
v24@0:8#16
@"NSObject<OS_dispatch_queue>"
v24@0:8@"NDApplication"16
@88@0:8@16@24@32@40B48B52@56#64@?72@?80
@?16@0:8
v24@0:8@?16
@"CKDiscretionaryClientConnection"
@"CKDiscretionaryOptions"
@"NSObject<OS_os_transaction>"
@"NDApplication"
@"NSObject<OS_dispatch_source>"
@"CKDiscretionarySchedulerTask"
v40@0:8@16@24@?32
v40@0:8@"NSString"16@"CKDiscretionaryOptions"24@?<v@?BB@"NSError">32
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8Q16
@84@0:8@16@24@32B40@44Q52@60@?68@?76
@"CKDiscretionarySchedulerTask"84@0:8@"NSString"16@"NSString"24@"NSString"32B40@"CKDiscretionaryOptions"44Q52@"NSObject<OS_dispatch_queue>"60@?<B@?>68@?<B@?>76
@56@0:8@16@24@32@40B48B52
@"CKDiscretionaryDaemon"
@"<CKXPCDiscretionaryClient>"
@"NSMutableDictionary"
v32@0:8@16@24
I24@0:8@16
@"BKSApplicationStateMonitor"
@"NSMutableSet"
Being asked if container with identifier %@ is foreground before getting callback from BRContainersMonitor! Foreground state is %c
Container %@ entered background
Container %@ entered foreground
Missing critical attribute for initilization of CKDiscretionaryTask. serialQueue:%p, connection:%p, operationID:%p, options:%p, scheduler:%p, startHandler:%p, suspendHandler:%p, transaction:%p, bundleID:%p
%@ scheduling in state %@
startHandler failed, self not available.
suspendHandler failed, self not available.
resourceTimer failed, self not available.
%@ resourceTimeout
Failed to initialize CKDiscretionarySchedulerTask for CKDiscretionaryTask
%@ monitoring cloud docs container ID %@
applicationEnteredForeground, updating priority of %@
applicationEnteredForeground failed, self not available.
applicationNoLongerInForeground, updating priority of %@
applicationNoLongerInForeground failed, self not available.
%@ complete
Client is a PlugIn with bundle identifier %@
Containing app for PlugIn is %@
Client connection to %@ experienced error %@. Invalidating connection.
%@ queued for %@ on connection %p
no-op. self no longer available.
no-op. daemon no longer available.
no-op. options.operationID is nil.
no-op. operationID already exists.
%@ %@
%@ suspended
%@ failed to initialize discretionary task
%@ scheduled
%@ finishing
no-op. %@ no longer available.
%@ did not exist.
cleanup for %@ on connection %p
Application %@ no longer foreground
Application %@ entered foreground
@(#)PROGRAM:ckdiscretionaryd  PROJECT:CloudKit-867
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.ckdiscretionaryd</string>
<key>com.apple.application-identifier</key>
<string>com.apple.ckdiscretionaryd</string>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>ckdiscretionaryd</string>
</array>
</dict>
</plist>
