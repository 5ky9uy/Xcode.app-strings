com.apple.StoreServices.SSKeychain.%p
StoreServices
LegacySPIUsage
-[SSKeychain createAttestationDataForAccountIdentifier:purpose:completionBlock:]
Unexpected invocation: `%{public}s`. This is legacy SPI that is due to be removed. Please send this report to 'Store Services | All'.
{public}
-[SSKeychain createX509CertChainDataForAccountIdentifier:purpose:completionBlock:]
v8@?0
v16@?0@"NSObject<OS_xpc_object>"8
-[SSKeychain deleteKeychainTokensForAccountIdentifier:completionBlock:]
Expected invocation: `%{public}s`. This is legacy SPI that is still in use and not planned for removal at this time.
-[SSKeychain getPublicKeyDataForAccountIdentifier:purpose:completionBlock:]
-[SSKeychain keyCountForAccountIdentifier:completionBlock:]
-[SSKeychain signData:reason:fallback:cancel:forAccountIdentifier:completionBlock:]
-[SSKeychain signData:context:completionBlock:]
-[SSKeychain x509CertChainDataForAccountIdentifier:purpose:regenerateCerts:completionBlock:]
com.apple.StoreServices.HTTPServer
[%{public}@] Failed to set port. A server is already running.
https://
http://
error
localhost
%@%@:%d
%@localhost:%d
[%{public}@] Failed to start server. Another server is already running.
[%{public}@] Failed to create socket.
[%{public}@] Failed to bind socket address.
[%{public}@] Server running
[%{public}@] Server stopped
[%{public}@] Failed to accept the socket.
ISCopyGzippedDataForData
[%{public}@] Fialed to serialize XML object into body data. Error = %@
ISCopyDecompressedGZipDataForData
[%{public}@] Error reading body data into XML object. Error = %@
close
Connection
Content-Type
text/html
Content-Length
v32@?0@"NSString"8@"NSString"16^B24
actionType
actionURL
details
dialogId
dialogType
dualAction
message
result
targetId
userActions
authenticate
biometricsAnalyze
cancel
cancelHomeButton
enterPassword
enterPasswordCancelled
enterPasswordPressed
navigate
open
BiometricId
EnableTouchIdPurchases
ExistingOrCreate
Password
PaymentSheet
UserNamePassword
invalidCredentials
paymentSheetFailedToLoad
paymentSheetTimeout
failure
success
unknown
Biometric
Cancel
CreateNewAppleId
EnterPassword
IForgot
NotNow
Open
UseExistingAppleId
OkCancel
SignIn
com.apple.onboarding.applearcade
com.apple.onboarding.appstore
com.apple.onboarding.ibooks
com.apple.onboarding.itunesstore
com.apple.onboarding.itunesu
com.apple.onboarding.applemusic
com.apple.onboarding.podcasts
com.apple.onboarding.videos
com.apple.onboarding.tvapp
%{public}@: %{public}@ has an invalid content version. Refusing to acknowledge it.
v20@?0B8@"NSError"12
%{public}@: Returning NO from shouldDisplayPrivacyLinkWithIdentifier: because the internal default is set.
%{public}@: Determining whether or not the privacy policy should be displayed for %{public}@.
%{public}@: No privacy policy for %{public}@ has ever been acknowledged.
%{public}@: identifier = %{public}@ | lastAcceptedVersion = %lu | currentVersion = %lu
v16@?0Q8
%{public}@: Could not initialize the privacy view controller. Make sure your project has linked the AMSUI framework.
v32@?0@"NSString"8@"NSNumber"16^B24
%{public}@: The privacy acknowledgement on the account matches what we're trying to add to it. account = %{public}@ | account.privacyAcknowledgement = %{public}@ | privacyAcknowledgement = %{public}@
%{public}@: Failed to save %{public}@. error = %{public}@
%{public}@: There's no active account to acknowledgement privacy consent on.
Not Available
No account to acknowledge
%{public}@: Acknowledging privacy consent on the active account. activeAccount = %{public}@ | privacyAcknowledgement = %{public}@
%{public}@: Acknowledging privacy consent on local account. privacyAcknowledgement = %{public}@
Privacy acknowlegment not available for local accounts
guid
privacyAcknowledgement
POST
application/x-apple-plist
%{public}@: Failed to acknowledge privacy consent. error = %{public}@
Acknowlegment Failed
Failed to send acknowlegment
%{public}@: Successfully acknowledged privacy consent, but the response body is nil.
%{public}@: Successfully acknowledged privacy consent.
SSPrivacyController.m
identifier cannot be empty or nil.
AMSUIPrivacyViewController
Class getAMSUIPrivacyViewControllerClass(void)_block_invoke
Unable to find class %s
void *AppleMediaServicesUILibrary(void)
OBBundle
Class getOBBundleClass(void)_block_invoke
void *OnBoardingKitLibrary(void)
OBPrivacyFlow
Class getOBPrivacyFlowClass(void)_block_invoke
ISStoreURLOperation
Class getISStoreURLOperationClass(void)_block_invoke
void *iTunesStoreLibrary(void)
ISProtocolDataProvider
Class getISProtocolDataProviderClass(void)_block_invoke
ISOperationQueue
Class getISOperationQueueClass(void)_block_invoke
com.apple.storeservices.applicationutils
-[SSApplicationUtil restartApplication:]
[%@] Restart Application returned error code: %d
[%@] Restart Application succeeded
LWHQ
hdmv
SDMV
480p
720p
1080p
downloadKey
flavor
sinfs
%@ [Flavor: %@, URL: %@]
com.apple.StoreServices.SSVFamilyContentDeletionNotification
UserInfo
pairs
B24@?0Q8@"NSObject<OS_xpc_object>"16
SSNotificationTriggerDownloads
A download queue must have download kinds
v16@?0@"NSError"8
%@: Send queue changed with %lu removals
artist
brand
iTunesBrand
user
SSDownloadThumbnailAvailableNotification
artwork
delta-package
media
newsstand-artwork
asset-pack-manifest
transit-maps-data
xmlfeed
book
bg-download
bg-upload
coached-audio
ebook
feature-movie
song
music-video
ringtone
software
tv-episode
tone
document
storekit-content
newsstand
nsurlsession
other
podcast
videoPodcast
vpn-plugin
os-update
itunes-u
-[SSDownload assetsForType:]
-[SSDownload pause]
-[SSDownload prioritizeAboveDownload:completionBlock:]
v32@?0@"NSString"8@"NSMutableArray"16^B24
-[SSDownload setDownloadHandler:completionBlock:]
com.apple.iBooks
com.apple.AppStore
com.apple.MobileStore
Books
bl_audiobooks_download_in_bookassetd
SSDownloadErrorKeyJADownloadQueueToken
SSDownloadErrorKeyRetryInterval
SSDownloadPhaseCanceled
SSDownloadPhaseDataRestore
SSDownloadPhaseDownloading
SSDownloadPhaseFailed
SSDownloadPhaseFinished
SSDownloadPhaseInstalling
SSDownloadPhasePaused
SSDownloadPhasePreflight
SSDownloadPhaseProcessing
SSDownloadPhaseUploading
SSDownloadPhaseWaiting
Must specify target app or content kind
action
lookup
search
term
library-link
kind
itms-appss
itms-bookss
itmss
com.apple.iTunesStore.downloadInfo
accountInfo
artworkAssetFilename
etags
mediaAssetFilename
preferredAssetFlavor
purchaseDate
referrerApp
referrerURL
requestPersistentID
ringtone-guid
trackPersistentID
xmlAssetFilename
app-receipt
artwork-template-name
asset-info
file-size
assets
betaExternalVersionIdentifier
bundleVersion
cancelIfDuplicate
deltaPackages
fileExtension
hls-playlist-url
chunks
chunkSize
hashes
has-4k
has-dolby-vision
has-hdr
human-friendly-publication-version
iad-attribution
iad-conversion-date
iad-impression-date
initialODRSize
is-hls
is-in-queue
is-matched-redownload
is-premium
is-purchased-redownload
isStreamable
languages
network-constraints
PageProgression
priorVersionExternalIdentifier
publication-version
rating
rental-id
show-composer
work
requires-plugged-in
softwareVersionExternalIdentifier
software-type
storeCohort
thinned-app
transitGeoFileURL
uncompressedSize
variantId
downloadPolicy
movpkg
SSDownloadMetadata.m
Only keyed coding is supported
dict
prerender
playlist
duration
genre
rental
small-image
title
identifier
preorder-id
subtitle
%lld
softwareIconNeedsShine
softwareVersionBundleId
bundle-id
cloud-id
sagaId
playlistArtistName
composerName
document-target-app
download-permalink
enableExtensions
episode-number
episode-sort-id
artworkURL
artwork-urls
genreName
genre-name
hasMessagesExtension
is32BitOnly
compilation
isDeviceBased
explicit
high-definition
isRental
isSample
isSharedResource
isTvTemplateApp
songId
launch-extras-url
launchProhibited
messagesIconUrl
network-name
episode-guid
podcast-feed-url
podcast-type
year
season-number
show-name
longSeasonDescription
%{public}@: Error unarchiving policy. Error = %{public}@
is-apple-music-show
description
sort-artist
sort-album
sort-name
thumbnail-newsstand-binding-edge
thumbnail-newsstand-binding-type
thumbnail-url
unmodified-title
download-id
videoDetails
%{public}@: Failed to archive policy. Error = %{public}@
softwareIcon57x57URL
icon-url
itemName
movement
movement-number
movement-count
cancel-download-url
copyright
metadata
DownloaderID
is-auto-download
is-redownload
appleId
page-progression-direction
pageProgressionDirection
buy-params-256
buyParams
action-params
redownload-params
UIRequiredDeviceCapabilities
auto-download
lrpluspub
lrpub
pluspub
yyyy-MM-dd'T'HH:mm:ss'Z'
playback-type
download
Unable to add playback-type query param
artistId
artistName
composerId
discCount
discNumber
genreId
itemId
longDescription
playlistId
playlistName
releaseDate
trackCount
trackNumber
artist-id
artist-name
composer-id
disc-count
disc-number
genre-id
item-id
long-description
collection-id
collection-name
release-date
track-count
track-number
<%@: %p
; supportsMusicCatalogPlayback = YES
; supportsAddToCloudMusicLibrary = YES
; canSubscribeToMusicCatalog = YES
; subscriptionStatus = <%@: %p>
; subscriptionStatus = %@
v16@?0@"NSMutableString"8
SSVSubscriptionStatusDidChangeNotification
SSVSubscriptionStatusAccessPolicyDidChangeNotification
SSVSubscriptionStatusOptionAllowsExpiredStatuses
SSVSubscriptionStatusOptionAuthenticatesIfNecessary
SSVSubscriptionStatusOptionIgnoreCache
SSVSubscriptionStatusOptionLocalizedAuthenticationReason
reason
com.apple.StoreServices.SSVSubscriptionStatusCoordinator.callback
com.apple.StoreServices.SSVSubscriptionStatusCoordinator
v12@?0i8
FuseSubscriptionStatus
v28@?0@"SSVSubscriptionStatus"8B16@"NSError"20
FuseSubscriptionStatusDate
-[SSVDownloadQueueRequest startWithResponseBlock:]
SSVSecureKeyDeliveryErrorDomain
SSVSecureKeyDeliveryErrorUserInfoKeyResponseStatus
SSVSecureKeyDeliveryErrorUserInfoKeyResponseVersion
SSVSecureKeyDeliveryErrorUserInfoKeyServerError
SSVSecureKeyDeliveryErrorUserInfoKeyDialogDictionary
fairplay-streaming-request
streaming-keys
version
fairplay-streaming-response
dialog
expiration-time
failureType
lease-action
offline
playback-start-time
renew-after
status
skipped-rental-checkout
renew
start
stop
com.apple.fpsrequest
com.apple.StoreServices.SSVSecureKeyDeliveryRequestOperation.accessQueue
v24@?0@"NSData"8@"NSError"16
AVAssetResourceLoadingRequestStreamingContentKeyRequestRequiresPersistentKey
application/json
[%{public}@] Server response returned invalid dictionary object (class is %@)
v24@?0@"NSDictionary"8@"NSError"16
[%{public}@] Server response returned invalid version object (class is %@)
[%{public}@] Server response returned invalid version %lli, current version: %lli
[%{public}@] Server response returned invalid root dictionary (class is %@)
[%{public}@] Unable to create CKC due to streaming request operation error: %@
[%{public}@] Unable to create persistent CKC due to error: %@
AVStreamingKeyDeliveryPersistentContentKeyType
[%{public}@] Unable to create key server request because JSON serialization returned no data without an error.
[%{public}@] Unable to create key server request because JSON serialization returned an error: %@
[%{public}@] Unable to create key server request because creating the SPC failed with error: %@
[%{public}@] Certificate data operation returned no data.
[%{public}@] Certificate data operation failed with error: %@
[%{public}@] Key server returned a streaming key 'dictionary' of the wrong class (class is %@)
[%{public}@] Key server returned an invalid streaming key ID (class is %@)
[%{public}@] Found the streaming key dictionary for ID: %lli
[%{public}@] Streaming key response for ID %lli has a CKC response string that did not successfully decode into data.
[%{public}@] Streaming key response for ID %lli has an invalid CKC response class (class is %@)
[%{public}@] Streaming key response for ID %lli has an invalid status: %lli or failure type: %{public}@. Dialog dictionary is: %{public}@
SSVMediaContentTasteItemUpdateItem
SSVMediaContentTasteItemUpdateUpdateDate
com.apple.itunesstored
AutoUpdatesEnabled
InAppReviewEnabled
AutoPlayVideoSetting
UserSetAutoPlayVideoSetting
LastUserSetAutoPlayVideoValue
ReduceMotionSetLastAutoPlayVideoValue
LastReduceMotionValue
MotionAutoPlayVideoSetLastAutoPlayVideoValue
LastMotionAutoPlayVideoValue
LowPowerModeSetLastAutoPlayVideoValue
LastLowPowerModeValue
SSErrorDomain
SSErrorAllowBioAuthenticationKey
SSErrorAllowRetryKey
SSErrorAskPermissionRequestIdentifier
SSErrorBiometricStatusCodeKey
SSErrorHTTPStatusCodeKey
SSErrorKeychainStatusCodeKey
SSErrorMinimumNetworkTypeKey
SSErrorNetworkSizeLimitBytesKey
SSErrorNetworkSizeLimitKey
SSErrorInstallErrorNameKey
SSServerErrorDomain
DEFAULT_ERROR_TITLE
NOT_ENOUGH_SPACE_TITLE
NOT_ENOUGH_SPACE_SINGULAR
NOT_ENOUGH_SPACE_PLURAL
NOT_ENOUGH_SPACE_SETTINGS
prefs:root=General&path=USAGE
NOT_ENOUGH_SPACE_SPECIFIC_%@
external-prod
prod
sandbox
wifi_only
Library
Preferences
plist
-[SSVRefreshSubscriptionRequest startWithResponseBlock:]
v24@?0@"SSVSubscriptionResponse"8@"NSError"16
DestinationURL was unspecified; falling back to directory for asset type %ld
%{public}@
Creating sandbox extension for %{public}@
Media
Downloads
Purchases
Podcasts
Updates
audiobook
epub
image
movie
movierental
music
musicvideo
tvepisode
vpnplugin
feed
B16@?0@"NSURLQueryItem"8
com.apple.StoreServices.SSOperationProgress
%@: %lld / %lld @ %.3f (%.2f seconds)
com.apple.itunesstored.application_installed
com.apple.itunesstored.autodownloadschanged
com.apple.itunesstored.autodownloaddefaultschange
com.apple.itunesstored.downloadmonitorchanged
com.apple.itunesstored.invalidatebags
com.apple.itunesstored.networktypeoverridechange
com.apple.iTunesStore.daemon.launched
com.apple.itunesstored.accountschanged
com.apple.StoreServices.SSAccountStore.activeaccountchanged
com.apple.itunesstored.aps.received
com.apple.StoreServices.StorefrontChanged
com.apple.itunesstored.triggerdownloads
com.apple.itunesstored.updatequeuechanged
com.apple.itunesstored.updatesstorechanged
com.apple.itunesstored.downloadfinished
com.apple.itunesstored.ssvsubscriptionstatuscoordinator.changed
com.apple.StoreServices.SubscriptionEntitlementsChanged
com.apple.itunesstored.assetsupdated
com.apple.appstored
%@ [%d]: %@
yyyy-MM-dd HH:mm:ss.SSS
com.apple.itunesstored.defaultschange
InternalBuild
ISAlwaysSendGuid
ISBagOverrideCardEnrollmentManual
DebugFileLevel
DebugLevel
LogAppInstallMetrics
LogIncomingHeaders
LogNetworkTimingMetrics
LogOutgoingHeaders
LogXML
LogFullMetricsRequest
DisableGDPR
DisableInstallAttributionPingbackDelay
DisableNetworkLogging
DisableServerPrompts
IncludeFullResponseBodiesInNetworkLogs
AllowDuplicateAccounts
ISAppReceiptRevocationEnabled
ISIgnoreExtendedValidation
ISScoreDevice
ISCacheBuster
ISTrackPerformance
UseAccountsFramework
UseAttestationPipeline
UseFileBasedPaymentSheetProxy
UseSSBag
UseAppstored2
UseAppstoredUpdates2
SSVPlaybackResponseErrorUserInfoKeyDialogDictionary
v24@?0@"SSVPlaybackItem"8^B16
songList
v32@?0@"NSDictionary"8Q16^B24
SSVFairPlayErrorDomain
SSDownloadManifestRequest.m
Must provide a URL request
-[SSDownloadManifestRequest startWithManifestResponseBlock:]
v24@?0@"SSDownloadManifestResponse"8@"NSError"16
metrics-page-event-body-dictionary
com.apple.StoreServices.SSVURLCache.accessQueue
_SSVURLCPEB
SSDownloadManifestResponse.m
valid
com.apple.StoreServices.%@.%p
-[SSRequest cancel]
-[SSRequest disconnect]
v24@?0@"NSObject<OS_xpc_object>"8@"NSObject<OS_xpc_object>"16
Request already started
com.apple.itunesstored.%@.%p
%@: Taking process assertion
%@: Closing background task early
%@: Releasing process assertion
%@: Background task expired
com.apple.StoreServices.SSUniqueExecutionQueue.callBlockQueue
com.apple.StoreServices.SSUniqueExecutionQueue.executeBlockQueue
com.apple.StoreServices.SSUniqueExecutionQueue.promiseAccessQueue
SSUniqueExecutionQueue: self is out-of-scope.
v24@?0@8@"NSError"16
SSUniqueExecutionQueue: The promise already finished. Calling the completion block directly.
SSVMediaContentTasteControllerItemsDidChangeNotification
com.apple.itunesstored.mediaContentTasteControllerItemsDidChangeNotification
com.apple.StoreServices.SSVMediaContentTasteController.accessSerialQueue
com.apple.StoreServices.SSVMediaContentTasteController.calloutSerialQueue
[%@] Received items did change notification with revision ID: %llu, current revisionID: %llu
[%@] Defering refresh due to in-progress request count: %lli
v24@?0@"SSVMediaContentTasteUpdateResponse"8@"NSError"16
v32@?0@"SSVMediaContentTasteItemUpdate"8Q16^B24
%@ %@
buildVersion
deviceGUID
deviceName
timeZoneName
systemReleaseType
SBEnabled
storeAccountID
storeFrontID
privateListeningEnabled
UNKNOWN
CUSTOMER
CARRIER
DEVELOPER
INTERNAL
(unknown: %i)
-[SSInstallAttributionParamsRequest startWithCompletionBlock:]
appAdamId
adNetworkId
campaignId
impressionId
timestamp
attributionSignature
originatingBundleId
overrideCampaignLimit
[%{public}@]: Failed initializing from XPC
kSSPurchaseRequestFinishedNotification
SSPurchaseErrorKeyShouldCancelPurchaseBatch
amd-domains
sign-sap-setup-cert
sign-sap-setup
primeUrl
signed-actions
sign-sap-request
sign-sap-response
storefront-header-suffix
musicCommon
musicConnect
aucAdminStatus
musicSubscription
fps-cert
fps-request
musicMescal
actions
[%@] Failed to get bag value for key: %@. Error: %@
v32@?0@"NSString"8@"NSDictionary"16^B24
SSVNetworkingDidStartNotification
SSVNetworkingDidStopNotification
com.apple.StoreServices.SSVLoadURLOperation
AppleLanguageCodeSetup
%{public}@: Using the value stored in AppleLanguageCodeSetup, %{public}@
%{public}@: There's no value stored in AppleLanguageCodeSetup.
AppleLanguages
%{public}@: Setting the active account's storefront after running %{public}@. activeAccount = %{public}@ | storefrontID = %{public}@
X-Apple-Application-Instance
Apple-Timing-App
AKAppleIDSession
%@: URL bag was needed, but none was provided
Accept-Language
User-Agent
ISNetworkObserver
newCustomer
true
buster
; %@
?%@=%@
&%@=%@
SSObserver.m
Invalid parameter not satisfying: %@
createsDownloads
createsJobs
createsInstallJobs
com.apple.StoreServices.SSPurchase
Must provide buy parameters
v32@?0@8@16^B24
%{public}@: Failed to archive download policy. Error = %{public}@
%{public}@: Failed to archive request properties. Error = %{public}@
%{public}@: Failed to unarchive download policy. Error = %{public}@
%{public}@: Failed to unarchive request properties. Error = %{public}@
SSPurchase.m
account
affiliate
ownerAccountDSID
background
buyparams
createdl
createjb
createinstalljb
dislkscrn
ensrvtp
fsize
fltassts
gratids
ignfrcpw
plchid
plyreq
reqcap
skipSoftwareAccountPreflight
usesrdl
presentingSceneIdentifier
uniqueid
dlprops
itemdict
offerid
dlpolicy
netcon
requestp
tonestyles
assignee
contact
tonestyle
makedefault
makedefaulttext
pendingApps
endId
startId
%@: Refreshing download: %@ / %@
itms-services
getShareIdentifiers
properties must not be nil
URLRequest must not be nil
v24@?0@"SSURLConnectionResponse"8@"NSError"16
-[SSURLConnectionRequest startWithConnectionResponseBlock:]
Value type not supported
-[SSItemLookupRequest startWithItemLookupBlock:]
status-code
v24@?0@"NSArray"8@"NSError"16
item-metadata
album-metadata
items
com.apple.StoreServices.SSVAppleAccountStore
ACAccountStore
ACAccountStoreDidChangeNotification
store-offers
company
average-user-rating
game-center-enabled
rank
explicitContentRestriction
type
link-type
Invalid offer identifier
body-url
number-of-pages
user-rating-count
related-items
body
body-mime-type
text/plain
subject
tweet-info
text
%@: %@
collection-artist-name
composer-name
episode-id
is-compilation
yyyy-MM-dd HH:mm:ss ZZZ
release-date-string
gifting-button
series-name
view-user-reviews-url
tell-a-friend
%@: (%@) %@
preview-url
preview-duration
asset-url
size
album
course
eBook
booklet
podcast-episode
tv-season
wemix
link
nagano
software-update
audio
video
texttone
customers-also-bought
itms://?action=audiobooks
itms://?action=itunes-u
itms://?action=movies
itms://?action=music-videos
itms-apps://?action=newsstand
itms://?action=podcasts
itms://?action=ringtones
itms-apps://?action=software
itms-apps://?action=updates
itms://?action=music
itms://?action=tv-shows
UIApplicationLaunchOptionsDeletedFamilyContentKey
com.apple.itunesstored.deletefamilycontent
UIApplicationLaunchOptionsNewsstandDownloadsKey
com.apple.itunesstored.finishdownload
ProcessAssertionReasonBackgroundDownload
ProcessAssertionReasonTaskCompletion
Must have a valid account identifier
Must have a valid rental key identifier
Must have a valid download identifier
Must have at least one sinf
-[SSRentalCheckoutRequest startWithConnectionResponseBlock:]
iTunesDemo-D080A994-76FD-4BF8-BE64-6C9439D0338E
iTunesLocal-421A04EA-479A-4E46-B49D-556F7144518D
accountCredits
accountSource
altDSID
automaticDownloadKinds
availableServiceTypes
demoAccountRawPassword
dsid
eligibleServices
enabledServiceTypes
firstName
freeDownloadsPasswordSetting
isActiveLockerAccount
isDemoAccount
isManagedAppleID
isNewCustomer
iTunesPassSerialNumber
lastName
mergedPrivacyAcknowledgements
paidPurchasesPasswordSetting
scope
storefrontID
always
never
sometimes
com.apple.StoreServices.autodownloadprompt
production
com.apple.StoreServices.SSAccount.backingAccountAccessQueue
SSAccountStore: Setting a non-pet as the password equivalent token. account = %{public}@
SSAccountStore: Setting a password that may be a password equivalent token. account = %{public}@
%{public}@: Found backing identifier for secure token: %@
com.apple.itunesstored.token
%{public}@: Adding new secure token to keychain
%{public}@: Updating existing secure token in keychain
%{public}@: Failed to locate backing identifier for secure token
%{public}@: Someone is changing the country code of an account's storefront outside of authentication. account = %{public}@ | oldStorefront = %{public}@ | newStorefront = %{public}@ | callStack = %{public}@
%{public}@: Someone is setting an account's storefront to nil. account = %{public}@ | callStack = %{public}@
SSAccount.m
-[SSAccount initWithXPCEncoding:] provided with an invalid xpc_object_t object.
 Local Account
 altDSID = %@ | DSID = %@ | username = %@ | backingIdentifier = %@ | scope = %ld | active = %@ | authenticated = %@
 | storefront = %@>
terms-check
accepted
p2-content-restore
allowed-kinds
nil completionBlock
-[SSAccount getPurchasedItemsForItems:completionBlock:]
accountInfo.accountKind
accountInfo.appleId
accountInfo.accountName
personInfo.acAccountName
altDsPersonId
creditDisplay
dsPersonId
accountInfo.address.firstName
-[SSAccount getITunesMatchStatusWithCompletionBlock:]
-[SSAccount getKeybagSyncDataWithType:completionHandler:]
isManagedStudent
accountInfo.address.lastName
%{public}@: Failed to reset transient data for an account. account = %{public}@ | error + %{public}@
%{public}@: Found secure token
%{public}@: Secure token lookup failed with error: %{public}@
%{public}@: Secure token lookup failed for nil identifier
X-Apple-Request-Store-Front
x-apple-request-store-front
%{public}@: Merging %{public}@ with %{public}@. creditsString changed.
%{public}@: Merging %{public}@ with %{public}@. uniqueIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. accountName changed.
%{public}@: Merging %{public}@ with %{public}@. altDSID changed.
%{public}@: Merging %{public}@ with %{public}@. iTunesPassSerialNumber changed.
%{public}@: Merging %{public}@ with %{public}@. secureToken changed.
%{public}@: Merging %{public}@ with %{public}@. storeFrontIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. firstName changed.
%{public}@: Merging %{public}@ with %{public}@. lastName changed.
%{public}@: Merging %{public}@ with %{public}@. isActiveLockerAccount changed.
%{public}@: Merging %{public}@ with %{public}@. accountKind changed.
%{public}@: Merging %{public}@ with %{public}@. accountScope changed.
%{public}@: Merging %{public}@ with %{public}@. accountSource changed.
%{public}@: Merging %{public}@ with %{public}@. didFallbackToPassword changed.
%{public}@: Merging %{public}@ with %{public}@. freeDownloadsPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. isManagedAppleID changed.
%{public}@: Merging %{public}@ with %{public}@. isNewCustomer changed.
%{public}@: Merging %{public}@ with %{public}@. paidPurchasesPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. availableServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. enabledServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. eligibilityForService changed.
-[SSAccount updateAccountPasswordSettingsWithRequestProperties:completionBlock:]
displayedServerPrompt-%@
lastAttemptForServerPrompt-%@
iTunes
device
-[SSRemoteWebViewRequest startWithCompletionBlock:]
AppStore
appstored
BagConfig
com.apple.StoreServices.authbegin
com.apple.StoreServices.authfail
com.apple.StoreServices.authfinish
com.apple.StoreServices.authsubmit
SSVerifyCredentialsAccountScope
%{public}@: You shouldn't call -[SSAuthenticateRequest init] directly. Use initWithAccount: or initWithAuthenticationContext: instead.
%{public}@: [%{public}@] An error occurred while authenticating %{public}@. error = %@
%{public}@: [%{public}@] Starting authentication request. context = %@ | context.accountName = %{public}@
%{public}@: Not entitled to talk to AuthKit. Sending request to itunesstored.
%{public}@: [%{public}@] Authenticating the demo account.
%{public}@: [%{public}@] Skiping authentication. %{public}@ doesn't need to be authenticated.
%{public}@: [%{public}@] The device doesn't have an active account. %{public}@ will become the active account.
%{public}@: [%{public}@] Failed to make the account the active account. error = %@
Nil Account
We can't authenticate a nil account.
v24@?0@"ACAccount"8@"NSError"16
@"SSPromise"16@?0@"SSUpdateAccountResponse"8
v16@?0@"SSAuthenticateResponse"8
v24@?0@"SSAuthenticateResponse"8@"NSError"16
%{public}@: [%{public}@] Using the device's demo account. username = %{public}@
%{public}@: [%{public}@] Attempting to find an existing account using: altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
%{public}@: [%{public}@] Found an existing account. account = %{public}@
%{public}@: [%{public}@] There's no existing account matching the information we were given, but since we were given a username (%{public}@), we'll create one.
%{public}@: [%{public}@] An altDSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A DSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A password was provided.
%{public}@: [%{public}@] A PET was provided.
%{public}@: [%{public}@] There's no existing account matching the information we were given. The user will be prompted to enter their username and password.
%{public}@: [%{public}@] Failed to decode dialog from error. %{public}@
%{public}@: [%{public}@] Unknown dialog from error: %@
%{public}@: [%{public}@] Presenting dialog from error: %@
%{public}@: [%{public}@] Failed to present dialog: %@ error: %{public}@
v24@?0@"AMSDialogResult"8@"NSError"16
mach-lookup
com.apple.ak.auth.xpc
com.apple.authkit.client.private
com.apple.authkit.client.internal
-[SSAuthenticateRequest _performRemoteAuthenticationWithCompletion:]
%{public}@: XPC connection interrupted while attempting authentication request
%{public}@: An error occurred during authentication. error = %@
%{public}@: [%{public}@] Authentication request finished. response.authenticatedAccount.accountName = %{public}@ | response.authenticateResponseType = %ld | response.error = %@
%{public}@: [%{public}@] The user cancelled the authentication.
%{public}@: [%{public}@] The server rejected the credentials we passed it.
%{public}@: [%{public}@] This is a new account that needs to be reviewed.
%{public}@: [%{public}@] Authentication request failed. error = %@
-[SSVRepairApplicationRequest startWithResponseBlock:]
signIn
SSAccountStoreAuthKitAllowPasswordReuse
  accountName = %@
  accountScope = %ld
  allowsBootstrapCellularData = %d
  allowsRetry = %d
  allowsSilentAuthentication = %d
  altDSID = %@
  cancelButtonLabel = %@
  canCreateNewAccount = %d
  canSetActiveAccount = %d
  clientIdentifierHeader = %@
  displaysOnLockScreen = %d
  HTTPHeaders = %@
  isAccountNameEditable = %d
  logUUID = %@
  okButtonLabel = %@
  persistsAcrossDeviceLock = %d
  persistsPasswordFallback = %d
  preferrediTunesStoreClient = %@
  promptStyle = %ld
  promptTitle = %@
  reasonDescription = %@
  requestParameters = %@
  requiredUniqueIdentifier = %@
  shouldCreateNewSession = %d
  shouldFollowAccountButtons = %d
  shouldIgnoreAccountConversion = %d
  shouldIgnoreProtocol = %d
  shouldSuppressDialogs = %d
  signupRequestParameters = %@
  tokenType = %ld
  touchIDContinueToken = %@
  URLBagContext = %@
  userAgentComponents = %@
%@: Someone is calling setInitialPassword:. This method is deprecated and will be passed to setPasswordEquivalentToken: which may not be what the caller intended.
value
APPS-BRAZIL
GAMES
ITUNESGAMES
ITUNES-GAMES
NZ-OFLC
RP13
RP16
NOT RATED
UNRATED
BBFC
MPAA
PG-13
NC-17
RIAA
CLEAN
EXPLICIT
TV-US
US-TV
TV-G
TV-MA
TV-PG
TV-Y
TV-Y7
TV-14
Rating-Brazil_10
Rating-Brazil_12
Rating-Brazil_14
Rating-Brazil_16
Rating-Brazil_18
Rating-Brazil_L
Rating-Movie_NZ_G
Rating-Movie_NZ_PG
Rating-Movie_NZ_M
Rating-Movie_NZ_R13
Rating-Movie_NZ_R15
Rating-Movie_NZ_R16
Rating-Movie_NZ_R18
Rating-Movie_NZ_RP13
Rating-Movie_NZ_RP16
Rating-Movie_NZ_R
Rating-Movie_UK_U
Rating-Movie_UK_PG
Rating-Movie_UK_12
Rating-Movie_UK_12A
Rating-Movie_UK_15
Rating-Movie_UK_18
Rating-Movie_UK_R18
Rating-MPAA_G
Rating-MPAA_PG
Rating-MPAA_PG13
Rating-MPAA_R
Rating-MPAA_NC17
Rating-MPAA_Unrated
Rating-MPAA_NR
Rating-RIAA_Clean
Rating-RIAA_Explicit
Rating-TV_US_Y
Rating-TV_US_Y7
Rating-TV_US_Y7FV
Rating-TV_US_14
Rating-TV_US_G
Rating-TV_US_PG
Rating-TV_US_MA
Rating-TV_US_D
Rating-TV_US_L
Rating-TV_US_S
Rating-TV_US_V
SSSpringBoardUtilityApplicationStateChangeNotification
com.apple.storeservices.wakeAppTransactionIdentifier
FBSSystemService
%{public}@: Timed out while launching application %{public}@.
FBSOpenApplicationErrorDomain
FBSOpenApplicationOptionKeyActivateSuspended
FBSOpenApplicationOptionKeyPayloadOptions
%{public}@: Could not launch %{public}@. %{public}@
%{public}@: No PID for app ID %{public}@.
%{public}@: Taking process assertion %{public}@ for %{public}.2f seconds with reason %{public}@.
%{public}@: Could not take process assertion %{public}@.
%{public}@: Releasing power assertion %@.
v16@?0@"NSDictionary"8
com.apple.StoreServices.SSSpringBoardUtility
com.apple.StoreServices.SSSpringBoardUtility.Notifications
com.apple.StoreServices.SSSpringBoardUtility.SpringBoard
%@: Timed out while getting application info. identifier = %{public}@ key = %{public}@
metrics
SSVMetricsInternalSettingReportingFrequency
com.apple.StoreServices.SSMetricsConfiguration
com.apple.StoreServices.metrics-internal-settings-change
disabled
sendDisabled
metricsBase
metrics_base
fields
v32@?0@"NSString"8@16^B24
[%@] initializing with empty config 
config
blacklistedFields
cookies
compoundSeparator
fieldsMap
blacklistedEvents
[%@] Blacklisted event [%@] 
pingUrls
v32@?0@"NSString"8Q16^B24
v16@?0@"NSNumber"8
postFrequency
metricsUrl
tokenSeparator
+[SSMetricsConfiguration getReportingFrequencyOverrideWithCompletionBlock:]
+[SSMetricsConfiguration setReportingFrequencyOverride:]
decorateITMLEvents
page
activity
activityCurator
comment
interview
musicVideo
radio
track
uploadedAudio
uploadedVideo
%@: [ID: %@, Type: %@]
preorderAlbum
iMix
itunesMix
socialActivity
radioStation
SSVMediaContentTasteUpdateResponseContentTasteItems
SSVMediaContentTasteUpdateResponseExpirationDate
SSVMediaContentTasteUpdateResponseResponseRevisionID
<%@ %p contentTasteItems:%@ expirationDate:%@ responseRevisionID:%llu isCachedResponse:%@>
SSAccountStoreAuthKitAllowSilentAuth
SSAccountStoreAuthKitAllowSilentPasswordAuth
SSAccountStoreAuthKitCanCreateNewAccountKey
SSAccountStoreAuthKitCanSetActiveAccountKey
SSAccountStoreAuthKitCreateAccountDSIDKey
SSAccountStoreAuthKitCreateAccountQueryParamsKey
SSAccountStoreAuthKitCreateAccountTargetIdentifierKey
SSAccountStoreAuthKitCredentialSource
SSAccountStoreAuthKitHTTPHeadersKey
SSAccountStoreAuthKitLogUUIDKey
SSAccountStoreAuthKitOKButtonLabel
SSAccountStoreAuthKitPreventPrompt
SSAccountStoreAuthKitPreventSecondaryAccountPETLookup
SSAccountStoreAuthKitPresentingViewController
SSAccountStoreAuthKitPromptTitle
SSAccountStoreAuthKitProxiedAppBundleIDKey
SSAccountStoreAuthKitProxiedAppNameKey
SSAccountStoreAuthKitReasonKey
SSAccountStoreAuthKitSuppressServerDialogs
SSAccountStoreAuthKitSkipAuthKitKey
SSAccountStoreAuthKitUserAgentKey
SSAccountStoreAuthKitUserAgentSuffixesKey
SSAccountStoreIgnoreAccountConversionKey
SSAccountStoreActiveAccountChangedNotification
SSAccountStoreAuthenticationActivityNotification
SSAccountStoreChangedNotification
_SSAccountStoreDidChangeNotification
ActiveAccountIsManagedAppleID
AuthenticationStarted
AccountsChangedNotificationsSuppressionStarted
LastAuthTime
SSAccountStoresProxiedDeviceFlagKey
metricsAuthenticationAttempts
product
badServerResponse
maxNumberOfAttemptsReached
responseTime
mtTopic
userAgent
com.apple.itunesstored.accountschanged.internal
com.apple.StoreServices.SSAccountStore.accountsCache
com.apple.StoreServices.SSAccountStore.fetchAccounts
com.apple.StoreServices.SSAccountStore.metricsQueue
com.apple.StoreServices.SSAccountStore.notificationQueue
%{public}@: Returning cached accounts.
%{public}@: There no cached accounts. We'll load the accounts now from the backing store synchronously.
%{public}@: Unit test mode is enabled. We won't go to the backing account store.
%{public}@: Failed to fetch the backing accounts. error = %{public}@
@16@?0@"ACAccount"8
%{public}@: Caching the accounts.
B16@?0@"SSAccount"8
%{public}@: Someone is attempting to get the active account. activeAccount = %{public}@
%{public}@: Someone is attempting to get the active locker account. activeLockerAccount = %{public}@
%{public}@: Resetting all properties on the local iTunes account.
%{public}@: Failed to reset all properties on the local iTunes account. error = %{public}@
silent
com.apple.StoreServices.SSAccountStore.sAccountType
v16@?0@"ACAccountType"8
%{public}@: Clearing the in-process account cache.
SSAccountStore.m
%{public}@: [%{public}@] %{public}@ has a broken DSID. Attempting to repair it.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding IDMS account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding iCloud account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding AppleAuthentication account.
%{public}@: [%{public}@] Failed to find a valid DSID. Unable to repair the account.
%{public}@: [%{public}@] Successfully repaired an account's broken DSID. account = %{public}@
%{public}@: [%{public}@] We found a valid DSID, but we failed to save the account with the new DSID. account = %{public}@ | error = %{public}@
v16@?0@8
v16@?0@"ACAccount"8
@"SSPromise"16@?0@"ACAccountType"8
%{public}@: There are no accounts that need migrating to Accounts.framework.
%{public}@: Disabling the in-process cache.
%{public}@: Migrating %ld account(s).
%{public}@: [%{public}@] Removing an account from the KVS without migrating it because %@.
@"NSString"16@?0@"SSAccount"8
%{public}@: [%{public}@] Beginning migration of %{public}@. currentAccounts = %@
%{public}@: [%{public}@] Successfully migrated the account. Removing it from the KVS.
%{public}@: [%{public}@] Failed to migrate the account. We won't remove it from the KVS. error = %@
%{public}@: Ensuring that we have only a single active account after migration.
%{public}@: Migration is complete. Clearing the in-process cache and re-enabling it.
%{public}@: Posting a com.apple.itunesstored.accountschanged (and its internal varient) notification now that migration is complete.
%{public}@: We didn't migrate any accounts, so we aren't posting a com.apple.itunesstored.accountschanged (and its internal varient) notification.
@"NSString"16@?0@"NSDictionary"8
%{public}@: After migration, there are no accounts remaining in the KVS.
%{public}@: After migration, the KVS contains the following accounts: %@
%{public}@: Timed out while trying to remove %{public}@.
%{public}@: Someone is attempting to remove a nil acount.
%{public}@: Removing %{public}@.
%{public}@: Failed to remove %{public}@. error = %@
com.apple.StoreServices.SSAccountStore.removeAccountsQueue
%{public}@: Timed out while removing account %{public}@.
%{public}@: Timed out while removing accounts %@.
%{public}@: [%{public}@] Removing all cookies for %{public}@.
v24@?0@"NSNumber"8@"NSError"16
v12@?0B8
%{public}@: [%{public}@] Signing out of %{public}@.
%{public}@: [%{public}@] Successfully signed out of %{public}@. We'll now remove its cookies.
%{public}@: [%{public}@] Unable to sign out of %{public}@. error = %@
%{public}@: [%{public}@] We were told to skip the call to AuthKit.
%{public}@: [%{public}@] The user cancelled the create account dialog.
The user cancelled the create account dialog.
%{public}@: [%{public}@] The user opted to create a new account. This authentication will fail and we'll start the create account flow.
ISCreateAccountOperation
The user opted to create a new account.
@"SSPromise"16@?0@"NSNumber"8
%{public}@: [%{public}@] The device doesn't have an active account for the scope. %{public}@ will become the active account.
com.apple.StoreServices.SSAccountStore.unitTestAccountsAccessQueue
%{public}@: The in-process accounts cache is disabled.
%@-copy
sqlitedb
%{public}@: Making a copy of the KVS database for later debugging.
%{public}@: A copy of the KVS already exists. Removing it so we can create a new one.
%{public}@: Failed to remove the existing KVS database. error = %@
%{public}@: Failed to copy the KVS database. error = %@
UIApplication
%{public}@: Failed to exclude the KVS database copy from backups. error = %@
<altDSID = %@ | DSID = %@ | username = %@ | firstName = %@ | lastName = %@ | storefront = %@ | scope = %@>
%{public}@: Posting a com.apple.itunesstored.accountschanged.internal notification.
%{public}@: Posting a com.apple.itunesstored.accountschanged notification.
%{public}@: Attempting to post a %{public}@, but our notificationQueue is NULL. Something went wrong.
%{public}@: The value of SSActiveAccountIsManagedAppleID changed.
%{public}@: Posting a %{public}@ notification.
%{public}@: Attempted to post a %{public}@, but our notificationQueue is NULL. Something went wrong.
%{public}@: Attempted to post metrics event, but our metricsQueue is NULL. Something went wrong
/System/Library/Accounts/Notification/iTunesAccountsNotificationPlugin.bundle
We failed to load the notification plugin.
_canSaveAccount:withOtherAccounts:store:
@16@?0@"SSAccount"8
%{public}@: [%{public}@] Someone is attempting to save a nil acount.
The account must be non-nil.
%{public}@: [%{public}@] Refusing to save %{public}@. None of its properties have changed.
%{public}@: [%{public}@] Refusing to save %{public}@. It's backing account is nil.
The backing account is nil.
%{public}@: [%{public}@] Attempting to save %{public}@. verifyCredentials = %{public}@
%{public}@: [%{public}@] Clearing the in-process cache in preparation of saving the account.
%{public}@: [%{public}@] Successfully saved the account.
%{public}@: [%{public}@] Failed to save the account. error = %@
%{public}@: An account is set to active when it shouldn't be. Deactivating it. account = %{public}@ | activeDSID = %{public}@
%{public}@: An account is set as the active locker account when it shouldn't be. Deactivating it. account = %{public}@ | activeLockerDSID = %{public}@
%{public}@: Failed to save %{public}@ after modifying its active or activeLocker property. error = %@
%{public}@: [%{public}@] Attempting to find an existing account. attempt = %ld
%{public}@: [%{public}@] Found a preexisting account with a broken altDSID or DSID that we can use.
%{public}@: [%{public}@] Refusing to migrate an account because there's already an account with the same username but different altDSID or DSID.
%{public}@: [%{public}@] There's no preexisting account. We'll create a new one.
%{public}@: [%{public}@] Found a pre-existing iTunes token. Setting the new account as authenticated.
%{public}@: [%{public}@] There's no pre-existing iTunes token. The new account will be unauthenticated.
%{public}@: [%{public}@] There's a preexisting account, %{public}@. We'll merge the given properties into it.
%{public}@: [%{public}@] Making the account the active account. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account inactive. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account the active locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] Making the account an inactive locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] It appears that someone created the account while we were attempting to migrate it. We'll perform the migration again.
it's empty
it only has an account source
it has no username
SSAccountStore: [%{public}@] The raw password might actually be a PET.
SSAccountStore: [%{public}@] Successfully converted a raw password into a PET.
SSAccountStore: [%{public}@] Failed to convert a raw password into a PET. error = %{public}@
AKAppleIDAuthenticationInAppContext
UINavigationController
kAASaveOptionCompanionDeviceClientInfoKey
kAASaveOptionCompanionDeviceUDIDKey
SSAccountStore: [%{public}@] We were told to update a nil account. We'll try to find an existing account matching the info we got from AuthKit. altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
SSAccountStore: [%{public}@] Found an account existing account matching the AuthKit information.
SSAccountStore: [%{public}@] Failed to find an account existing account. We'll create a new account.
SSAccountStore: [%{public}@] The newly created account will be set to active.
SSAccountStore: [%{public}@] The newly created account will be set to inactive.
SSAccountStore: [%{public}@] AuthKit gave us an updated altDSID. oldAltDSID = %{public}@ | newAltDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated DSID. oldDSID = %{public}@ | newDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated username. oldUsername = %{public}@ | newUsername = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us updated identifiers. We'll attempt to find an existing account that matches the new identifiers.
SSAccountStore: [%{public}@] The new identifiers point to the same account we're already working with.
SSAccountStore: [%{public}@] The new identifiers are for a different existing account, %{public}@.
SSAccountStore: [%{public}@] We didn't find an existing account using the new identifiers.
SSAccountStore: [%{public}@] Failed to encode AKDevice. Proxied authentication will fail.
kAAErrorDetailsProxiedDeviceDataKey
%{public}@: [%{public}@] We aren't prompting to create a new account because the account isn't empty.
%{public}@: [%{public}@] We aren't prompting to create a new account because we're authenticating for a sandbox account.
%{public}@: [%{public}@] We aren't prompting to create a new account because we either shouldn't be prompting or SSAccountStoreAuthKitCanCreateNewAccountKey isn't set to YES.
%{public}@: [%{public}@] We aren't prompting to create a new account because Buddy is still running.
%{public}@: [%{public}@] Prompting the user to see if they want to create a new account.
ISCreateAccountPromptOperation
%{public}@: [%{public}@] Allowing silent authentication because the account is marked as a demo account.
SSAccountStore: [%{public}@] Buddy is still running. We can't prompt the user to enter their password. Prompt auth won't run.
SSAccountStore: [%{public}@] We were told not to prompt the user.
SSAccountStore: [%{public}@] Refusing to prompt the user. Account creation isn't allowed and this would create a new account.
SSAccountStore: [%{public}@] Prompting the user for their password.
SSAccountStore: [%{public}@] Failed to update the account by prompting the user for their password. The authentication will fail. error = %@
v16@?0@"SSLazyPromise"8
SSAccountStore: [%{public}@] Unable to perform silent authentication if we don't have an account.
SSAccountStore: [%{public}@] Attempting to update the account silently while we're running Buddy.
SSAccountStore: [%{public}@] We aren't allowed to attempt silent authentication.
Silent authentication isn't allowed.
SSAccountStore: [%{public}@] Attempting to update the account silently.
SSAccountStore: [%{public}@] Successfully updated the account silently.
SSAccountStore: [%{public}@] Failed to silently update the account. error = %@
SSAccountStore: [%{public}@] Unable to perform silent password authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent password authentication.
Silent password authentication isn't allowed.
SSAccountStore: [%{public}@] We don't have a raw password to convert into a PET.
SSAccountStore: [%{public}@] We were given a raw password. We'll attempt to convert it into a PET.
SSAccountStore: [%{public}@] Unable to perform silent PET authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent PET authentication.
SSAccountStore: [%{public}@] The account already has a PET we can use.
SSAccountStore: [%{public}@] We weren't given a PET, and we were told not to check alternate accounts for one.
SSAccountStore: [%{public}@] We weren't given a PET. We'll check alternate accounts for one.
SSAccountStore: [%{public}@] Found a PET on an alternate account we can use.
SSAccountStore: [%{public}@] Unable to get a PET from an alternate account.
SSAccountStore: [%{public}@] The PET appears to be misformed and could be a raw password.
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveAccount:] is deprecated. The caller should get the active account, set its active property to NO, and save it.
%{public}@: Failed to deactivate the active account, %{public}@. error = %@
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveLockerAccount:] is deprecated. The caller should get the active locker account, set its activeLocker property to NO, and save it.
%{public}@: Failed to deactivate the active locker account, %{public}@. error = %@
InAppPurchase
BYSetupAssistantNeedsToRun
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
SSAccountStore: Received a com.apple.itunesstored.accountschanged notification.
SSAccountStore: Received a com.apple.itunesstored.accountschanged.internal notification.
SSAccountStore: Received a com.apple.StoreServices.SSAccountStore.activeaccountchanged notification.
  authenticatedAccount = %@
  authenticateResponseType = %ld
  credentialSource = %ld
  error = %@
  responseDictionary = %@
[SSRestrictions]: Invalid trust status: %ld, or result: %d
[SSRestrictions]: Ignoring failed extended validation validation
com.apple.itunesstored.ExplicitPreferenceRestriction
ExplicitOffAndPreferencesEnabled
ExplicitOffAndPreferencesDisabled
PSRestrictionsPasscodeController
SSRestrictionsExplicitRestrictionAlertTypeOnLaunchCount
SSRestrictionsExplicitRestrictionAlertTypeOnContainerLoadCount
regular
v24@?0@"SSSoftwareUpdatesResponse"8@"NSError"16
reload
reset
%@: Failed with error: %@
%@: Found %ld updates
com.apple.storeservices.metricsFlushTransactionID
com.apple.storeservices.analytics
com.apple.storeservices.analytics.flush
userType
[%@] Dropping event which has no body values after blacklist filtering. [%@]
[%@] Dropping event of a type which is blacklisted. [%@]
-[SSMetricsController _serialQueueInsertEvents:withCompletionHandler:]
[%@] Insert Metrics Events returned error code: %d
[%@] Insert Metrics Events succeeded
[%@] Attempting to insert events with no URL. Dropping [%d] events.
[%@] Flush timer fired
[%@] Flush Unreported Events timer fired -- %@
[%@] Flush Unreported Events timer fired & reported success
[%@] Flush Unreported Events timer fired but was subsequently disabled
[%@] Setting Flush Unreported Events timer: %0.2f
[%@] Flushing events
-[SSMetricsController flushUnreportedEventsWithCompletionHandler:]
[%@] Report Metrics Events returned error code: %d
[%@] Report Metrics Events succeeded
[%@] User has opted not to send Apple diagnostic information. Dropped %li events that require it.
[%@] Events dropped by Event Controller with no report URL: [%lu events]
[%@] Events dropped by disabled Event Controller: [%lu events]
[%@] Insert Events called with an empty array.
single
multi
custom
location
MetricsController
-[SSMetricsController recordAnalyticsForMetricsDialogEvent:withTopic:]
%@: Connection interrupted
%@: Invalid response
%@: Record analytics events did succeed: %@
v32@?0@"NSString"8@"NSArray"16^B24
needsAuthentication
notSubscribed
subscribed
SSBagChangedNotification
trustedDomains
%@:%@
data
%{public}@: Error checking if URL trusted: %{public}@
v28@?0@"NSArray"8B16@"NSError"20
v28@?0@"NSNumber"8B16@"NSError"20
v28@?0@"NSDictionary"8B16@"NSError"20
v28@?0@"NSString"8B16@"NSError"20
v28@?0@"NSURL"8B16@"NSError"20
[%@] -- Error setting up database
v16@?0@"SSSQLiteDatabase"8
B8@?0
UIApplicationWillEnterForegroundNotification
System
Frameworks
UIKit.framework
UIKit
%@: {
  profile: %@
  profileVersion: %@
com.apple.StoreServices.SSBinaryPromise.globalPromiseStorageAccessQueue
com.apple.storeservices.TransactionStore
[TransactionStore] Started transaction: %{public}@
[TransactionStore] Joined transaction: %{public}@
[TransactionStore] Ended transaction: %{public}@
[TransactionStore] Left transaction: %{public}@
exit-after-purchase
is-preorder
%@: (%@: %@)
action-display-name
allowed-tone-styles
buy-params
confirmation-dialog
document-cannot-open-dialog
required-document-handlers
should-show-confirmation
price-display
success-dialog
supported-device-types
supported-devices
ds-ids
action-type
plus-icon-badge
STDQ
STDQPRE
STDRDL
HDBUY
HDPRE
HDRDL
HDVOD
LCVOD
SDVOD
SWUPD
PLUS
PLUSPRE
HQRDL
standard-audio
standard-video
standard-document
-[SSVPushNotificationRequest startWithResponseBlock:]
SSItemOfferDevice.m
Must provide device dictionary
device-type-id
minimum-product-version
minimum-device-description
minimum-device-title
minimum-device-description-url
minimum-device-description-url-title
minimum-product-version-description
minimum-product-version-title
minimum-product-version-description-url
minimum-product-version-description-url-title
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim2
BLDownloadQueue
[%{public}@]: Could not create a BLDownloadQueue sharedInstance
[%{public}@]: Could not retrieve the BLDownloadQueue class
[%{public}@]: downloadStatesDidChange: %@
[%{public}@]: downloadStatesDidChange: -- created SSBookDownloads: %@
v24@?0@"NSArray"8@"NSArray"16
B32@?0@"SSDownload"8Q16^B24
[%{public}@]: __book_sendDownloadsChanged: %@
B24@?0@"SSDownload"8^B16
com.apple.storeservices.SSNetworkConstraints
mobile-network-constraints
mobile-connection-type-allows
p2-music-store-available
music-download-size-limit-in-bytes
eBook-store-available
eBook-download-size-limit-in-bytes
video-download-size-limit-in-bytes
p2-podcasts-enabled
podcast-download-size-limit-in-bytes
p2-software-store-available
software-download-size-limit-in-bytes
WiFi
kinds
enabled
size-limits
v24@?0q8^B16
wi-fi
TOO_BIG_FOR_NETWORK_SPECIFIC_%@
TOO_BIG_FOR_NETWORK_SPECIFIC_NO_ITUNES_%@
TOO_BIG_FOR_NETWORK_SPECIFIC_NO_WIFI_%@
TOO_BIG_FOR_NETWORK_BODY
TOO_BIG_FOR_NETWORK_BODY_NO_ITUNES
TOO_BIG_FOR_NETWORK_BODY_NO_WIFI
TOO_BIG_FOR_NETWORK_TITLE
ITEM_TOO_BIG_FOR_NETWORK_BODY
ITEM_TOO_BIG_FOR_NETWORK_BODY_NO_ITUNES
ITEM_TOO_BIG_FOR_NETWORK_BODY_NO_WIFI
ITEM_TOO_BIG_FOR_NETWORK_TITLE
condition-key
%@: Invalid condition: %@
operator
bundle-version
external-version
CapabilitiesMatch
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
LSDocumentProxy
restriction-name
account-is-present
SSHasAccountCondition
adam-id-present
SSItemAvailableCondition
app-version
SSApplicationVersionCondition
can-open-document
SSDocumentCondition
capability
SSCapabilityCondition
platform
SSPlatformCondition
product-version
SSSystemVersionCondition
restriction
SSRestrictionCondition
MobileInstallationCheckCapabilitiesMatch
conditions
content
alt-content
iPad
iPhone
iPod-Touch
SSDeviceAutomaticDownloadKindsChangedNotification
SSDeviceAvailableItemKindsChangedNotification
SSDeviceBatteryLevelChangedNotification
SSDeviceCellularNetworkingAllowedChangedNotification
SSDevicePluggedInStateChangedNotification
SSDeviceSoftwareLibraryIdentifierChangedNotification
SSDeviceStoreFrontChangedNotification
SSVDeviceCarrierBundlingStatusDidChangeNotification
DeviceClassNumber
main-screen-class
com.apple.mobileipod
VideosAllowHDREnabledSetting
AccountsNotificationPlugin.ActiveStorefrontIdentifier
com.apple.storeservices.SSDevice
com.apple.StoreServices.SoftwareCUIDChanged
-[SSDevice automaticDownloadKinds]
block is nil
-[SSDevice getAvailableItemKindsWithBlock:]
-[SSDevice getCellularNetworkingAllowedWithBlock:]
com.apple.StoreServices.SSDevice.completion
-[SSDevice sdk_loadStorefrontCountryCode:]
-[SSDevice sdk_loadStoreFrontIdentifier:]
-[SSDevice setCellularNetworkingAllowed:]
promptIdentifier is nil
-[SSDevice showPromptWithIdentifier:completionHandler:]
@"SSPromise"16@?0@"SSAccount"8
Missing Storefront Identifier
The local account doesn't have a storefront identifier.
UserAgent
itunesstored
AvailableItemKinds
%{public}@: Failed to fetch needsDisplay for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save the lastAttemptDate for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save the lastAttemptDate for a server prompt. account = %{public}@ | promptIdentifier = %{public}@ | error = %{public}@
%{public}@: Failed to save needsDisplay for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save needsDisplay for a server prompt. account = %{public}@ | promptIdentifier = %{public}@ | error = %{public}@
%@: Enable all automatic download kinds
%@: Disable automatic download kinds: %@
minus
main-screen-scale
SerialNumber
%@: Set automatic download kinds: %@
SSDevice: Failed to update the device's storefront ID. We couldn't get the local account. error = %@
SSDevice: Successfully set the device's storefront to %{public}@
SSDevice: Failed to update the device's storefront ID. error = %@
v16@?0@"SSAccount"8
8olRm6C1xqr7AJGpLRnpSw
touch-id
-[SSDevice synchronizeAutomaticDownloadKinds]
ThinnedAppVariantID
%@: Enable automatic download kinds: %@
union
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@. %{public}@
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@.
%{public}@: [%{public}@] Failed to set a storefront ID on an account.
v16@?0r^@8
iPad1,1
iPhone2,1
iPod
AppleTV
Watch
iProd
dt:%lu
DeviceSupports720p
DeviceSupports1080p
iTunes-
cellular-data
iPad-M
 (%@)
%@/%@
 watchOS/%@
 iOS/%@
ProductType
OverrideProductType
 model/%@
HardwarePlatform
 hwp/%@
BuildVersion
 build/%@
System/Library/CoreServices/SystemVersion.plist
-[SSDevice _updateAutomaticDownloadKinds:withValue:completionBlock:]
com.apple.
lowtide
com.apple.AppStore2
com.apple.AppStore3
MobileStore
com.apple.Music
com.apple.Music.
Music
com.apple.lowtide
com.apple.ios.StoreKitUIService
StoreKitUIService
iBooks
com.apple.itunesu
iTunesU
com.apple.podcasts
com.apple.Maps
Maps
com.apple.Bridge
com.apple.AppStore.BridgeStoreExtension
com.apple.AppStore3.BridgeStoreExtension
com.apple.Music.MediaSocialShareService
com.apple.Music.MediaPicker
com.apple.WelcomeKit
matd
com.apple.MobileSMS
com.apple.AppStore.MessagesStoreExtension
com.apple.AppStore3.MessagesStoreExtension
Messages
UseNewMusicApp2
TVMusic
UseNewMusicApp
com.apple.TVMusic
10.0
/System/Library/Messages/iMessageBalloons/ASMessagesProvider.bundle
iPad2,1
iPad2,4
iPad2,2
iPad2,3
iPad3,1
iPad3,2
iPad3,3
iPhone1,1
iPhone1,2
iPhone3,1
iPhone3,2
iPhone3,3
iPhone4,1
iPod1,1
iPod2,1
iPod2,2
iPod3,1
iPod4,1
iPod4,2
AppleTV2,1
AppleTV3,1
bytes
%.0f%@
com.apple.mobile.iTunes.store
AltDSID
AccountAvailableServiceTypes
AccountURLBagType
CreditDisplayString
DidFallbackToPassword
DSPersonID
AccountServiceTypes
FirstName
AccountFreeDownloadsPasswordSetting
AppleID
AccountIsManagedAppleID
AccountIsNewCustomer
AccountSocialEnabled
AccountITunesPassSerial
AccountKind
LastName
AccountPaidPurchasesPasswordSetting
AccountSource
AccountStoreFront
UserName
ActiveLockerAccountID
CloudLibraryCUID
downloaded-apps
KnownAccounts
LastPurchasesCheckDate
LibraryCUID
PurchaseTypes
SoftwareCUID
Storefront
TempStorefront
Eligible:AppleMusic
%012x
-[SSVCloudServiceAPITokenRequest startWithResponseBlock:]
domain
fallnumval
sibv
poiProvider
poiURL
com.apple.StoreServices.SSVLoadNearbyAppsOperation.%p
%.4f
%.0f
X-JS-TIMESTAMP
%@=%@
v24@?0@"SSLookupResponse"8@"NSError"16
 t:native
bvrs
Apple-Guid
Apple-Serial-No
Guid
iCloud-DSID
If-Modified-Since
Last-Modified
X-Apple-ActionSignature
X-Apple-ADSID
X-Apple-Allow-Lite-Account-Conversion
X-Apple-Allow-Auth-Types
X-Apple-Client-Application
X-Apple-Connection-Type
X-Dsid
X-Apple-GS-Token
X-Apple-Software-Cuid
X-Apple-Store-Front
X-Apple-TA-Device
X-Token
X-Token-T
X-Apple-Requesting-Bundle-Id
X-Apple-Requesting-Bundle-Version
X-Apple-AMD
X-Apple-AMD-Action
X-Apple-AMD-Data
X-Apple-AMD-M
X-Apple-AMD-S
x-apple-aps-delivery-type
X-Apple-MD
X-Apple-MD-Action
X-Apple-MD-Data
X-Apple-MD-M
X-Apple-MD-S
X-Apple-TID-Action
X-Apple-TID-Challenge
X-Apple-TID-Pkey
X-Apple-TID-Pkeyid
X-Apple-TID-Signature
X-Apple-TID-SignatureVersion
X-Apple-TID-State
X-MMe-Client-Info
X-Mme-Device-Id
X-MMe-Multi-User
EEE, dd MMM yyyy HH:mm:ss z
en_US_POSIX
com.apple.storeservices.SSURLRequestProperties
SSURLRequestProperties.m
additionalMetrics
retry
btstrpcll
cache
srcappid
srcapp
client
exclen
headers
method
itunes
kbsynctype
large
srvtype
params
reqcell
requireev
requireext
requireHTTPS
decode
nocell
disablecell
disableReversePush
disableReversePushSampling
procptcl
sectok
timeout
bagkey
bagtype
urls
uacomps
properties
retryCount
cachePolicy
expectedlength
kbsync
query
post
%@: URLs: %@; Parameters: %@; Headers: %@
multipart/form-data; boundary=%@
--%@
Content-Disposition: form-data; name="%@"
--%@--
B24@?0r*8@"NSObject<OS_xpc_object>"16
%lli
v32@?0@"NSNumber"8@"SSVFairPlaySubscriptionStatus"16^B24
x-apple-jingle-correlation-key
X-Set-Apple-Store-Front
%{public}@: Failed to unarchive response. Error = %{public}@
%{public}@: Failed to archive response. Error = %{public}@
Cache-Control
max-age
xpc_object_t SSCodingCreateXPCObjectForNSSecureCodingObject(id<NSObject,NSSecureCoding>)
%{public}s: Failed to archive xpc object. Error = %{public}@
id<NSSecureCoding> SSCodingCreateNSSecureCodingObjectForXPCObject(xpc_object_t, Class<NSSecureCoding>)
%{public}s: Failed to unarchive xpc object. Error = %{public}@
lease-renew
lease-start
Context must have SIC data
-[SSPlayInfoRequest startWithPlayInfoResponseBlock:]
v24@?0@"SSPlayInfoResponse"8@"NSError"16
%@: Succeeded with info: %ld bytes @ %p
-[SSMigrator performMigration:completionBlock:]
performing migration with updateType: %lu
 we are back wit ha reply of %@
Not available
Method not available in the simulator
cancelButtonString
cancelButton
cancelButtonAction
okButtonString
okButton
okButtonAction
defaultButton
explanation
Button must have a title
subtarget
SSDialogGetDaemonDialogState
authorization
goback
OpenURL
Goto
RetryRestoreAll
SSDialogErrorKeyRecoveryButtonAction
SSDialogErrorKeyRecoveryButtonParameter
SSDialogErrorKeyRecoveryTitle
StoreKit
receipt
+[SSPurchaseReceipt getReceiptPathWithCompletionBlock:]
nil block
sandboxReceipt
Failed to load an ACAccountType for %@
B16@?0@"ACAccount"8
Unable to find a corresponding account. accountTypeIdentifier = %@ | account = %@
Must provide token
Must provide accountIdentifier
-[SSAuthorizationRequest startWithAuthorizationResponseBlock:]
box-height
image-orientation
landscape
scale
needs-shine
box-width
%@: [%@:%@ %ldx%ld] %@
 (prerendered)
download-queue-item.default
newsstand-latest-issue-icon.default
software-icon.default
screenshot.default
screenshot.thumbnail
UINewsstandBindingEdge
UINewsstandBindingType
tab-bar-item.default
tab-bar-item.more-list
tab-bar-item.more-list-selected
tab-bar-item.selected
image-type
-[SSSilentEnrollmentPaymentSession startWithCompletion:]
SSRemoteNotificationClientDidReceiveNotifications
SSApplicationLaunchOptionsHasRemoteNotifications
com.apple.storeservices.SSRemoteNotificationClient
-[SSRemoteNotificationClient popQueuedNotifications]
-[SSRemoteNotificationClient registerForRemoteNotifications]
-[SSRemoteNotificationClient unregisterForRemoteNotifications]
alert
isExplicit
artworkUrl
badge
buttons
category
schedule
notAfter
sound
tapUrl
application/gzip
clientActionDeepLink
serverAction
/System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
+[SSURLDataCollection collectURLSessionDataWithBlock:]
app_purchase_history_accounts
account_unique_identifier
local_revision
%ld-%@-%@-%@
%@: [%@]
com.apple.StoreServices.SSURLBagContext
-[SSAskPermissionActionRequest startWithCompletionBlock:]
label
system
hide-item-if-restricted
logo-artwork-url
itunes-games
esrb
games
mpaa
bbfc
fr-cnc
de-fsk
ca-chvrs
ie-ifco
au-oflc
jp-eirin
nz-oflc
ch-movies
es-movies
it-movies
gr-movies
be-movies
nl-movies
lu-movies
mx-movies
se-movies
fi-movies
no-movies
dk-movies
pt-movies
ar-movies
bo-movies
br-movies
bg-movies
cl-movies
co-movies
cr-movies
cy-movies
cz-movies
ec-movies
sv-movies
ee-movies
gt-movies
hn-movies
hu-movies
lv-movies
lt-movies
mt-movies
ni-movies
pa-movies
py-movies
pe-movies
pl-movies
ro-movies
sk-movies
si-movies
uy-movies
ve-movies
jm-movies
gy-movies
sr-movies
gf-movies
do-movies
bn-movies
by-movies
cn-movies
ge-movies
hk-movies
id-movies
is-movies
kg-movies
kh-movies
kr-movies
kz-movies
la-movies
lk-movies
md-movies
mk-movies
mo-movies
my-movies
ph-movies
ru-movies
sg-movies
th-movies
tj-movies
tr-movies
tw-movies
ua-movies
uz-movies
vn-movies
us-tv
uk-tv
fr-tv
de-tv
ca-tv
au-tv
jp-tv
riaa
us-cable
apple
events
override-headers
build-version
container-id
container-ids
container-type
device-name
end-position-in-milliseconds
end-reason-type
enqueuer
external-identifier
feature-name
household-id
internal-build
media-duration-in-milliseconds
media-type
persistent-id
personalized-container-id
player
private-enabled
event-reason-hint-type
reco-data
sb-enabled
siri-initiated
source-type
start-position-in-milliseconds
store-front
timed-metadata
milliseconds-since-play
track-info
event-type
utc-offset-in-seconds
display-type
character-displayed-count
lyric-language
album-adam-id
artist-adam-id
cloud-album-id
cloud-playlist-id
global-playlist-id
playlist-version-hash
station-hash
station-personalized-id
station-id
auc-adam-id
lyric-id
purchased-adam-id
radio-adam-id
orig-sf-adam-id
subscription-adam-id
X-Guid
-[SSRentalCheckinRequest startWithConnectionResponseBlock:]
v24@?0@"SSVPlaybackAsset"8^B16
hls-key-cert-url
hls-key-server-url
is-itunes-stream
%@ [ID: %@, Assets: %@]
com.apple.itunesstored.xpc
SSXPCInAppReviewSandboxToken
^v16@?0@"NSObject<OS_xpc_object>"8
com.apple.storeservices.SSXPCConnection
com.apple.storeservices.SSDownloadManager.access
com.apple.storeservices.SSDownloadManager.background
com.apple.storeservices.SSDownloadManager.observer
Must have download kinds
Subclassing of SSDownloadManager is not supported
+[SSDownloadManager removePersistenceIdentifier:]
-[SSDownloadManager activeDownloads]
-[SSDownloadManager cancelAllDownloadsWithCompletionBlock:]
-[SSDownloadManager cancelDownloads:completionBlock:]
-[SSDownloadManager resumeDownloads:completionBlock:]
-[SSDownloadManager restartDownloads:completionBlock:]
DownloadManager
+[SSDownloadManager retryAllRestoreDownloads]
-[SSDownloadManager reloadFromServer]
-[SSDownloadManager setDownloads:forKinds:completionBlock:]
+[SSDownloadManager _triggerDownloads]
-[SSDownloadManager _finishDownloads:]
+[SSDownloadManager _sendGlobalHandler:]
SSDownloadManager: Reconnect global handler: %@
-[SSDownloadManager _copyDownloadKindsUsingNetwork]
-[SSDownloadManager _copyDownloads]
-[SSDownloadManager _handleDownloadsChanged:]
-[SSDownloadManager _insertDownloads:before:after:completionBlock:]
-[SSDownloadManager _moveDownload:before:after:completionBlock:]
-[SSDownloadManager _pauseDownloads:forced:completionBlock:]
-[SSDownloadManager _sendObserverConnection]
SSVTelephonyRegistrationDidChangeNotification
SSVTelephonyOperatorNameDidChangeNotification
SSVTelephonyPhoneNumberDidChangeNotification
com.apple.CommCenter.fine-grained
com.apple.StoreServices.SSVTelephonyController.accessQueue
com.apple.StoreServices.SSVTelephonyController.notificationQueue
com.apple.StoreServices.SSVTelephonyController.telephonyCallbackQueue
CellularTelephonyCapability
green-tea
ISCellularOperatorName
CarrierName
%{public}@: Failed to retrieve telephony mobile subscriber country code with error: %{public}@.
%{public}@: Failed to retrieve telephony mobile subscriber network code with error: %{public}@.
%{public}@: Failed to retrieve telephony mobile equipment info with error: %{public}@.
%{public}@: Telephony request to send SMS to %@ failed. Telephony context: %{public}@.
Failed to send SMS using telephony slot: %@.
%{public}@: Telephony active subscriptions did change.
%{public}@: Failed to instantiate CoreTelephonyClient.
%{public}@: Process %{public}@ is missing required telephony entitlement. Skipping instantiation of CoreTelephonyClient.
%{public}@: Current device does not have telephony capability. Skipping telephony client initialization.
%{public}@: Failed to get telephony user default voice subscription context with error: %{public}@.
%{public}@: Found telephony subscription context %{public}@ at slot %ld as the user default voice one.
%{public}@: Could not find a valid telephony subscription context. Available telephony subscription contexts: %{public}@.
ISPhoneNumber
%{public}@: Failed to retrieve telephony phone number with error: %{public}@.
%{public}@: Failed to retrieve telephony operator name with error: %{public}@.
%{public}@: Failed to retrieve telephony registration status with error: %{public}@.
com.apple.storeservices.SSEntity
-[SSEntity exists]
%@: %lld
-[SSEntity _getValues:forProperties:count:message:]
v32@?0@8Q16^B24
com.apple.storeservices.SSDownloadHandler.%p
com.apple.storeservices.SSDownloadHandler.delegate.%p
-[SSDownloadHandler resetDisavowedSessions]
%@: Blocks: %d, Ignores: (%@)
-[SSDownloadHandler _connectToDaemon]
%@: Connecting download handler: %lld
%@: Received message: (%lld, %lld)
-[SSDownloadHandler _setValue:forProperty:]
safariscriptdataupdate
SSScriptSafariViewControllerDataUpdateNotification
name=%@
-[SSVInstallManagedApplicationRequest startWithResponseBlock:]
-[SSVInstallManagedApplicationRequest startWithDetailedResponseBlock:]
-[SSVInstallManagedApplicationRequest startWithMetadataResponseBlock:]
protocol
GoBack
invalidate-url-bags
ping
pings
refresh-subscription-status
selected-footer-section
set-current-user
store-version
redirect-url
tid-dialog
trigger-in-app-purchase-queue
client-id
environment
trigger-download
nil dictionary
MicroPaymentQueue
SSResponseActionTypeCheckDownloadQueues
SSResponseActionTypeCheckInAppPurchaseQueue
SSResponseActionTypeDismissCurrentPage
SSResponseActionTypeGotoURL
SSResponseActionTypeInvalidateURLBags
SSResponseActionTypeOpenURL
SSResponseActionTypeRefreshSubscriptionStatus
SSResponseActionTypeRetryRestoreDownloads
SSResponseActionTypeSelectFooterSection
SSResponseActionTypeSetAccountCredits
SSResponseActionTypeSetActiveAccount
SSResponseActionTypeShowDialog
SSResponseActionTypeShowTouchIDDialog
pageType
nearbyApps
salableAdamId
assetStoreFront
ottLease
amd-finish-provisioning
subDownload
amd-sync-machine
accountKind
address
altDsid
accountName
is-cloud-enabled
is-saga-enabled
services
locker
purchase-history
social
passwordToken
xToken
personInfo
acAccountName
customerMessage
errorKey
errorNumber
%{public}@: No store front identifier found, this could lead to problems
forgottenPassword
nil bagContext
com.apple.storeservices.SSURLBag
B32@?0@"SSURLBag"8Q16^B24
-[SSURLBag _loadURLBag]
com.apple.StoreServices.SSDownloadSession
%@: SessionID: %lld
-[SSDownloadSession _copySessionPropertyWithKey:]
-[SSDownloadHandlerSession setPercentComplete:]
-[SSDownloadHandlerSession setStatusDescription:]
-[SSDownloadHandlerSession _finishWithType:error:]
-[SSDownloadHandlerSession _setBool:forSessionProperty:]
%{public}@: Failed to unarchive auth challenge. Error = %{public}@
%{public}@: Failed to archive credential. Error = %{public}@
com.apple.StoreServices.SSDownloadAuthenticationChallengeSender
com.apple.StoreServices.followup
com.apple.SSFollowUpIdentifier.RenewCredentials
SSFollowUpController.m
%{public}@: Refusing to dismiss a pending follow-up. The follow-up was not for the specified account. identifier = %{public}@ | account.identifier = %{public}@ | followUp.accountIdentifier = %{public}@
Refusing to dismiss a pending follow-up. The follow-up was not for the specified account.
@"SSPromise"16@?0@"FLFollowUpItem"8
B16@?0@"FLFollowUpItem"8
Unable to find a pending follow-up.
%{public}@: Failed to create a FLFollowUpItem for %{public}@
%{public}@: Nil altDSID in userInfo for renew credentials FLFollowUpItem. The user will be asked to sign into their active iTunes account or any iTunes account if no active iTunes account exists.
FOLLOWUP_RENEW_CREDENTIALS_PRIMARY
Localizable
FOLLOWUP_RENEW_CREDENTIALS_MESSAGE
FOLLOWUP_RENEW_CREDENTIALS_MESSAGE_BLAME
FOLLOWUP_RENEW_CREDENTIALS_TITLE
Unable to create a FLFollowUpItem.
SSFollowUpController: Successfully posted the FLFollowUpItem. identifier = %{public}@
SSFollowUpController: Failed to post the FLFollowUpItem. identifier = %{public}@ | error = %{public}@
FLFollowUpController
Class getFLFollowUpControllerClass(void)_block_invoke
void *CoreFollowUpLibrary(void)
NSString *getAAFollowUpUserInfoAccountIdentifier(void)
AAFollowUpUserInfoAccountIdentifier
void *AppleAccountLibrary(void)
NSString *getAAFollowUpUserInfoAltDSID(void)
AAFollowUpUserInfoAltDSID
FLFollowUpAction
Class getFLFollowUpActionClass(void)_block_invoke
NSString *getAAFollowUpActionPrimary(void)
AAFollowUpActionPrimary
NSString *getAAFollowUpUserInfoClientName(void)
AAFollowUpUserInfoClientName
FLFollowUpItem
Class getFLFollowUpItemClass(void)_block_invoke
NSString *getFLGroupIdentifierAccount(void)
FLGroupIdentifierAccount
-[SSPersonalizeOffersRequest startWithPersonalizedResponseBlock:]
v24@?0@"SSPersonalizeOffersResponse"8@"NSError"16
%@: (%lld, "%@")
com.apple.StoreServices.SSPreorderManager
com.apple.StoreServices.SSPreorderManager.observerQueue
-[SSPreorderManager cancelPreorders:withCompletionBlock:]
-[SSPreorderManager preorders]
-[SSPreorderManager reloadFromServer]
-[SSPreorderManager _registerAsObserver]
drm-free
dimensions
store-front-id
ownerDsid
software-external-version-identifier
com.apple.itunesstored.accounts
com.apple.itunesstored.askpermission
com.apple.itunesstored.biometrics
com.apple.itunesstored.claim-apps
com.apple.itunesstored.download-monitor
com.apple.itunesstored.downloads
com.apple.itunesstored.kbsync
com.apple.itunesstored.kvs
com.apple.itunesstored.lookup
com.apple.itunesstored.metrics
com.apple.itunesstored.purchase
com.apple.itunesstored.push-notifications
com.apple.itunesstored.software-library
com.apple.itunesstored.updates
com.apple.itunesstored.uploads
com.apple.itunesstored.private
com.apple.storekit.client-override
com.apple.storekit.request-data
com.apple.developer.storekit.request-data
com.apple.storekit.cloud-service-exempted-from-tcc-access
Invalid service name
com.apple.StoreServices.SSXPCServer
com.apple.StoreServices.SSXPCServer.main
%{public}@: Received connection from: %{public}@ message: [%@ %@]
No Client
No Selector
%@-%@
com.apple.itunesstored.xpc-requests
Client
Selector
@"NSDictionary"8@?0
-[SSDistributedNotificationCenter initWithNamedPort:]
Invalid port name
com.apple.StoreServices.SSDistributedNotificationCenter
-[SSDistributedNotificationCenter addObserverForName:queue:usingBlock:]
Invalid name
Invalid block
-[SSDistributedNotificationCenter removeObserver:]
com.apple.StoreServices.SSRollableLog
SSRollableLog
Failed to create directory, %@, for a log file. %@
-[SSRentalInformationRequest startWithResponseBlock:]
-[SSVDisableSubscriptionRequest startWithCompletionBlock:]
-[SSDownloadFileManifest getPathsForFilesWithClass:completionBlock:]
-[SSDownloadFileManifest rebuildManifestWithCompletionBlock:]
v28@?0B8@"NSError"12@"NSArray"20
empty assetPaths
-[SSDownloadFileManifest _removeItemsWithAssetPaths:completionBlock:]
-[SSVMediaContentTasteUpdateRequest startWithResponseBlock:]
com.apple.StoreServices.SSEventMonitor.delegate
com.apple.StoreServices.SSEventMonitor
-[SSEventMonitor _connectEventConnection]
SSEventNameDownloadStart
SSEventNameDownloadStop
SSEventNameAppUpdatesPollStart
SSEventNameAppUpdatesPollStop
SSEventNamePurchaseSucceeded
SSEventKeyClientIdentifier
SSEventKeyDownloadAssetIdentifier
SSEventKeyDownloadClass
SSEventKeyDownloadIdentifier
SSEventKeyDownloadKind
SSEventKeyItemCount
SSEventKeySizeInBytes
SSEventKeyURLString
auto-update
restore
SSVMediaContentTasteItemContentType
SSVMediaContentTasteItemPlaylistGlobalID
SSVMediaContentTasteItemStoreAdamID
SSVMediaContentTasteItemTasteType
<%@ %p contentType:%@
 playlistGlobalID:'%@'
 storeAdamID:%lli
 tasteType:%td>
SSVCookieStorageSharedCookiesDidChangeNotification
rescued.
itfe
.apple.com
Storage location must be a file URL
Attempted to access a database that is now owned by root. It's been abandoned and replaced by %@.
backup
%{public}@: SSVCookieStorage is being initalized with a backup URL. Setting performingMigration to YES.
com.apple.StoreServices.SSVCookieStorage
SSVCookieStorageSharedCookieDatabaseDidChangeDarwinNotification
%@: Could not create cookie storage path
Cookie
DELETE FROM cookies
v16@?0^{sqlite3_stmt=}8
(%@=?)
DELETE FROM cookies WHERE %@
 AND 
Invalid property value(s)
%{public}@: Cannot remove cookies for a nil DSID.
DELETE FROM cookies WHERE user=? AND user_scope=?
v32@?0@"SSVCookieKey"8@"NSArray"16^B24
v20@?0B8@"NSHTTPCookie"12
https
%@: Feature Enabler removing ITFE cookie
%@: Feature Enabler updating ITFE cookie to value : %@
com.apple.storeservices.itfe
features
additionalFeatures
SELECT DISTINCT user, user_scope FROM cookies;
discard
name
path
secure
SELECT discard, domain, expire_time, name, path, secure, value, version FROM cookies WHERE user=? AND user_scope=?;
SELECT name, value FROM cookies WHERE ((NOT secure OR secure=?) AND ((user=? AND user_scope=?) OR (user=-1)) AND ((expire_time=0) OR (expire_time>=?)) AND (SUBSTR(?,-LENGTH(domain))=domain) AND (SUBSTR(?,1,LENGTH(path))=path))
SELECT discard, domain, expire_time, name, path, secure, value, version FROM cookies WHERE ((NOT secure OR secure=?) AND ((user=? AND user_scope=?) OR (user=-1)) AND ((expire_time=0) OR (expire_time>=?)) AND (SUBSTR(?,-LENGTH(domain))=domain) AND (SUBSTR(?,1,LENGTH(path))=path))
SSVCookieStorage.m
B16@?0@"NSHTTPCookie"8
X-Apple-Set-Cookie
Set-Cookie
X-Apple-Set-User-Cookie
INSERT OR REPLACE INTO cookies (discard, domain, expire_time, name, path, secure, user, user_scope, value, version) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
stopIncludingLocalCookies
%{public}@: Failed to migrate database. Nuking the cookie storage
DROP TABLE cookies;
%{public}@: Successfully recovered the cookie storage
Cookie Storage Errored out at version %@
DELETE FROM cookies WHERE ((expire_time!=0) AND (expire_time<?))
PRAGMA journal_mode=WAL;
CREATE TABLE IF NOT EXISTS cookies(discard INTEGER DEFAULT 0, domain TEXT NOT NULL, expire_time REAL, name TEXT NOT NULL, path TEXT NOT NULL, secure INTEGER, user INTEGER DEFAULT 0, value TEXT NOT NULL, version INTEGER DEFAULT 1, PRIMARY KEY(name, domain, path, user))
CREATE TABLE IF NOT EXISTS tmp_cookies (discard INTEGER DEFAULT 0, domain TEXT NOT NULL, expire_time REAL, name TEXT NOT NULL, path TEXT NOT NULL, secure INTEGER, user INTEGER DEFAULT 0, user_scope INTEGER DEFAULT 0, value TEXT NOT NULL, version INTEGER DEFAULT 1, PRIMARY KEY(name, domain, path, user, user_scope));
INSERT INTO tmp_cookies (discard, domain, expire_time, name, path, secure, user, value, version) SELECT discard, domain, expire_time, name, path, secure, user, value, version FROM cookies;
DROP TABLE tmp_cookies;
ALTER TABLE tmp_cookies RENAME TO cookies;
Cookies
com.apple.itunesstored.2.sqlitedb
%@%@
Invalid parameter value: %@
%{public}@: Failed to archive location. Error = %{public}@
%{public}@: Failed to unarchive location. Error = %{public}@
/System/Library/Frameworks/CoreLocation.framework/CoreLocation
CLLocation
/System/Library/PrivateFrameworks/CoreLocation.framework/CoreLocation
-[SSLookupRequest startWithLookupBlock:]
lockup
play
playlist-product
product-dv
bundleId
storePlatformData
storePlatformPrewarmDataKey
lockup-search
results
poiBased
v32@?0@"SSLookupItem"8Q16^B24
itms-apps2://?action=lookup&i=%ld&r=%ld
&ids=
v32@?0@8@"NSDictionary"16^B24
isAuthenticated
artistUrl
contentRating
advisories
standard
genreNames
nameRaw
newsstandArtwork
offers
requiredCapabilities
screenshotsByType
ipad
iphone
iphone5
shortUrl
softwareInfo
hasInAppPurchases
isGameCenter
eulaUrl
privacyPolicyUrl
requirementsString
supportUrl
itunesNotes
userRating
ratingCount
ratingCountCurrentVersion
valueCurrentVersion
com.apple.StoreServices
com.apple.StoreServices.SSLogConfig
com.apple.StoreServices.accounts
authentication
logout
migration
migration-oversize
storefront
askpermission
com.apple.StoreServices.bag
Daemon
Daemon-Oversize
com.apple.StoreServices.FairPlay
anisette
com.apple.StoreServices.FeatureEnabler
followup
iTunesStore
iTunesStore-Oversize
privacy
pushnotification
StoreServices-Oversize
  category: %@
  environment: %ld
  outputDirectory: %@
  outputFilename: %@
  subsystem: %@
  writeToDisk: %@
Logs
storeservices
%@_%@
appid
appsts
family
accountNames
[%@ %@ %@ me:%d ic:%@ it:%@ atb:%d]
askToBuy
iCloudName
iCloudID
iTunesID
isMe
sharing
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
/System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI
/System/Library/Frameworks/Accounts.framework/Accounts
/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
/System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
/System/Library/PrivateFrameworks/BookLibrary.framework/BookLibrary
/System/Library/Frameworks/CoreTelephony.framework/CoreTelephony
/System/Library/Frameworks/CoreText.framework/CoreText
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
/System/Library/PrivateFrameworks/FTServices.framework/FTServices
/System/Library/PrivateFrameworks/iCloudNotification.framework/iCloudNotification
/System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities
/System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication
/System/Library/PrivateFrameworks/MobileInstallation.framework/MobileInstallation
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
/System/Library/Frameworks/PassKit.framework/PassKit
/System/Library/PrivateFrameworks/Preferences.framework/Preferences
/System/Library/Frameworks/QuartzCore.framework/QuartzCore
/System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomPresentationFeed.framework/SymptomPresentationFeed
/System/Library/Frameworks/UIKit.framework/UIKit
Could not load library [%ld]
SSAccountErrorDomain
bttlvl
cellds
szlmt
nwktps
powsts
regsts
tmlsts
usdfts
rules
accountHeader
attributedList
header
caseControl
confirmationTitle
confirm
install
rent
redeem
countryCode
currency
designVersion
displayPrice
flexList
headerIcon
style
color
valueStyle
images
isApplePay
paymentSummary
price
priceSection
pricingSection
requestor
AppleMusic
AppleNews
salableIcon
salableIconType
merchant
messages
watch
salableInfo
storeName
suppressPrice
fallback
styles
bold
gray
grey
medium
small
spacingAfter
spacingBefore
enum
mtApp=com.apple.MobileSMS
mtApp=com.apple.AppStore.BridgeStoreExtension
[/b]
[br/]
[/i]
%%image_
%%IMAGE_
%%appleId%%
%%APPLE_ID%%
v16@?0@"NSString"8
%@%@%@
PKPaymentContentItemImageAttachment
PKPaymentContentItemImageAndScaleAttachment
PKPaymentContentItemImageKey
PKPaymentContentItemScaleKey
PKPaymentContentItemTintMatchingTextKey
SSPaymentSheet: Rendering Retina image for tag: %{public}@, scale: %{public}@
SSPaymentSheet: Rendering non-Retina image for tag: %{public}@
%{public}@: Attempting to create AuthKit context with nil username
%{public}@: Failed to create AuthKit context for payment
%@: Failed to lookup username, substituting empty string
useLargeSize
PKPaymentContentItemLightColorAttribute
%{public}@: Configured payment sheet with title: %{public}@, titleType: %{public}@
%@: Requestor key not found, attempting to infer requestor from title enumeration.
%@: No requestor identified for title: %@
%@: No requestor identified, title type is not enumeration
CTFontCreateWithName
Helvetica-Bold
Helvetica-Italic
PKPaymentContentItemBoldAttribute
@16@?0@"NSDictionary"8
-[SSKeybagRequest startWithCompletionBlock:]
bundleShortVersionString
familyId
accountId
-[SSSoftwareLibraryItem setETag:forAssetType:error:]
%@$$%@$$%@
isbg
-[SSSoftwareLibrary demoteApplicationWithBundleIdentifier:completionBlock:]
-[SSSoftwareLibrary getLibraryItemForBundleIdentifiers:completionBlock:]
-[SSSoftwareLibrary getRemovableSytemApplicationsWithCompletionBlock:]
-[SSSoftwareLibrary hasDemotedApplicationsWithCompletionBlock:]
-[SSSoftwareLibrary isInstalledApplicationWithBundleIdentifier:completionBlock:]
-[SSSoftwareLibrary isRemovedSystemApplicationWithBundleIdentifier:completionBlock:]
-[SSSoftwareLibrary playableApplicationsWithBundleIdentifiers:completionBlock:]
-[SSSoftwareLibrary refreshReceiptsWithCompletionBlock:]
-[SSSoftwareLibrary restoreAllDemotedApplicationsWithOptions:completionBlock:]
-[SSSoftwareLibrary restoreDemotedApplicationWithBundleIdentifier:options:completionBlock:]
accountIdentifier
mediaType
preauthenticated
kSSRedeemRequestFinishedNotification
-[SSRedeemCodesRequest startWithRedeemResponseBlock:]
%{public}@: [%{public}@] Starting redeem operation for codes: %@
%{public}@: [%{public}@] Redeem failed with error = %{public}@
%{public}@: [%{public}@] Redeem finished with a response.
v24@?0@"SSRedeemCodesResponse"8@"NSError"16
Send -init before checking visibility
No completion block
-[SSVMediaSocialShareExtension getVisibilityWithCompletionBlock:]
com.apple.StoreServices.SSVPlaybackLease.delegate
com.apple.StoreServices.SSVPlaybackLease
com.apple.itunesstored.PlaybackLeaseDidEnd
SSVPlaybackLeaseIgnorePushNotifications
v24@?0@"SSVPlaybackLeaseResponse"8@"NSError"16
%@: Schedule refresh in %.0f seconds
Token of class:%d ID:%ld length:%ld data:%@
SET Token. (length:%ld)
SEQUENCE Token. (length:%ld)
INT Token. Value:%lld (%llx)
multibyte ASN1 identifiers are  not supported.
v16@?0@"SSKeyValueStoreSession"8
-[SSKeyValueStore getValuesForDomain:keys:count:usingBlock:]
B16@?0@"SSKeyValueStoreTransaction"8
-[SSKeyValueStore removeAllValuesForDomain:completionBlock:]
DELETE FROM kvs_value;
-[SSKeyValueStore removeAllValuesWithCompletionBlock:]
-[SSKeyValueStore setValuesWithDictionary:forDomain:completionBlock:]
com.apple.Preferences
%@: Removing account with duplicate AppleID: %@ / %@
-[SSKeyValueStore removeAccountFromDomain:]
%@: Initializing database
%@: Initializing readonly database
DefaultAccountName
com.apple.StoreServices.SSLRUCache.accessQueue.%p
SSLRUCache
v32@?0@8@"SSDoubleLinkedListNode"16^B24
%@: %@ resulted in a cache miss.
%@: %@,
%@: Cache is full. The oldest object will be evicted.
-----------------------------------------
com.apple.PlayActivityFeed
PlayActivityEvents.log
com.apple.StoreServices.SSCircularBuffer
com.apple.StoreServices.SSErrorHandler.%p
com.apple.StoreServices.SSErrorHandler.delegate.%p
-[SSErrorHandler _reconnectToDaemonWithCompletionBlock:]
-[SSVKeybagSyncRequest startWithCompletionBlock:]
1.2.840.113635.100.6.2.1
[%@] Invalid receipt [%ld bytes] -- [%@]
Unparsed Data
[%@] Could not create decoder
[%@] Could not read data
[%@] Could not parse data
[%@] No content
[%@] Failed to load data
[%@] Failed to parse data
[%@] Parsing receipt
[%@] Receipt type: %@
[%@] AdamID: %@
[%@] BundleID: %@
[%@] Application version: %@
[%@] DSID: %@
[%@] SHA1: %lu
[%@] Transaction date: %@
[%@] FR tool version: %@
[%@] Parental controls: %@
[%@] DeveloperID: %@
[%@] Receipt created: %@
[%@] FR app version: %@
[%@] HW type: %@
[%@] DownloadID: %@
[%@] Installer versionID: %@
[%@] Receipt expires: %@
[%@] Receipt renewal: %@
[%@] Organization display name: %@
[%@] Cancellation reason: %@
[%@] Could not read certificates
[%@] Unexpected number of certificates
[%@] Intermediate certificate is missing
[%@] Could not create trust
[%@] Failed to update policies
[%@] Failed to anchor Apple root certificate
[%@] Could not set verification date
com.apple.springboard
SBLastSystemVersion
com.apple.migration
LastSystemVersion
[%{public}@] Feature Enabler migrating from version: %{public}@ to version: %{public}@
[%{public}@] Feature Enabler removing enabled features
com.apple.storeservices-itfe
performedMigration11
11.0
[%{public}@]: Enabling AMF by default for iOS 11
.compressed
.har
HTTP/1.1
SSHTTPArchiveShouldSaveToDiskNotification
SSHTTPArchiveShouldSaveToDiskDecompressedNotification
entries
HTTPArchives
%@ doesn't exist. There are no HAR files to cleanup.
Removing %@ to cleanup HAR log files.
Failed to remove %@. %@
App Store states is: %d
Launched App Store error: %@ state: %d
Failed to create directory, %@, for HTTP archive files. %@
%@_%f%@
Failed to write HTTP archive file. %@
Wrote HTTP archive file to: %@
bodySize
mimeType
com.apple.StoreServices.SSHTTPArchive
uuuu-MM-dd'T'HH:mm:ss.sXXX
startedDateTime
time
request
response
creator
APS-Attempted
APS-Succeeded
clientIPAddress
headersSize
httpVersion
xp.apple.com
/WebObjects/MZFinance.woa/wa/authenticate
password
REDACTED
postData
X-Apple-Connection-Reused
false
statusText
com.apple.StoreServices.SSErrorHandlerSession.%p
-[SSErrorHandlerSession performDefaultHandling]
-[SSErrorHandlerSession redirectToURL:]
-[SSErrorHandlerSession retry]
customerTitleMessage
nextActionUrl
failureClientInfo
SSUserNotificationKeyAccountName
SSUserNotificationKeyAttemptNumber
PRAGMA legacy_file_format = 0;
CREATE TABLE IF NOT EXISTS kvs_value (pid INTEGER, domain TEXT NOT NULL, key TEXT NOT NULL, value BLOB NOT NULL, UNIQUE (domain, key), PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS kvs_value_domain_key ON kvs_value (domain, key);
kvs.sqlitedb
v40@?0q8r^@16Q24^B32
NetworkTimingMetrics
%@: Not setting anything following bag load
%@: Metrics values are: %@
ISURLBagCache
performance
sessionDuration
samplingPercentageUsers
samplingPercentageCachedResponses
sessionDurationPageRender
samplingPercentageUsersPageRender
facebook
twitter
[%{public}@]: percentComplete: %f
com.apple.bookassetd
%{public}@ is an unsupported deprecated method for book downloads
%{public}@ is an unsupported method for book downloads
deepLink
-[SSVSubscriptionStatusRequest startWithStatusResponseBlock:]
kvs_value
XCTestProbe
isTesting
sqlite_result
%@: initWithDatabaseURL:%{public}@ readOnly:%d protectionType:%@
Invalid database URL
com.apple.iTunesStore.SSSQLiteDatabase.%p
UIApplicationBackgroundTaskWillExpireNotification
%@: Failed to close database: [0, %d, %s]
PRAGMA table_info(%@);
%@: Spin for SQL lock: %ld, spin count: [%ld, %s, %@]
%@: Could not execute SQL: %@: [%ld, %s, %@]
BEGIN DEFERRED TRANSACTION;
BEGIN IMMEDIATE TRANSACTION;
COMMIT;
ROLLBACK;
main
PRAGMA %@.user_version=%ld;
PRAGMA %@.user_version;
%@: Step failed: %s: [%d, %s]
com.apple.StoreServices.SSSQLiteDatabase.%@
%@: Releasing process assertion, background task expired
%@: Could not create directory to place new database: %@
SSSQLiteDatabase: Calling setupBlock
%@: Not authorized to open database: [%d, %@]
%@: Could not open read-only db: [%d, %@]
%@: Could not open database, resetting: [%d, %@]
PRAGMA cache_size=512;
%@: Resetting after error: [%d, %@]
%@: Failed to close database: [1, %d, %s]
%@: Re-open database: %@
%@: Failed to close database: [2, %d, %s]
-shm
-wal
%@: Could not prepare statement: %@: [%d, %s, %@]
void SSSQLiteBindFoundationValueToStatement(sqlite3_stmt *, NSInteger, id)
SSSQLiteDatabase.m
file-read-data
file-write-data
_ISSQLiteDispatchQueueTag
_SSVPlayActivityEventCoderDataRepresentation
<%@ %p persistentID:%llu
 containerID:'%@'
 containerIDs:'%@'
 containerType:%td
 deviceName:'%@'
 endReasonType:%td
 enqueuerProperties:'%@'
 eventDate:%@
 eventTimeZone:%@
 externalID:'%@'
 featureName:'%@'
 householdID:'%@'
 systemReleaseType: %li
 itemDuration:%f itemStartTime:%f itemEndTime:%f
 itemType:%td
 itemIDs:'%@'
 mediaType:%td
 offline:%@
 personalizedContainerID:'%@'
 hasRecommendationData:true
 privateListeningEnabled: %@
 SBEnabled:%@
 siriInitiated: %@
 sourceType:%td
 storeAccountID:%llu
 storeFrontID:%@
 storeID:'%@'
 requestingBundleIdentifier:'%@'
 requestingBundleVersion:'%@'
 timedMetadata(length):%td
 hasTrackInfo:true
ROWID
%@: Unrecognized client key: %@
+[%@ databaseTable] not implemented
%@.%@
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
SELECT 
 FROM 
 WHERE 
.ROWID = ?;
SELECT 1 FROM 
 =  ? LIMIT 1;
UPDATE 
 SET 
 = ?
 = ?;
INSERT OR REPLACE INTO 
) VALUES (?
DELETE FROM %@ WHERE %@ = ?;
SSSQLitePredicate.m
Unsupported predicate value: %@
%@ %@ ?
 LIKE 
Invalid comparison type: %ld
 NOT IN (
 IN (
IS NULL
IS NOT NULL
 OR 
DESC
v32@?0q8Q16^B24
CREATE TEMPORARY TABLE 
 AS 
DISTINCT 
 FROM %@
 ORDER BY 
 LIMIT ?
%@(%@)
COUNT
v32@?0@"SSMemoryEntity"8Q16^B24
promise
v16@?0@"SSPromiseResult"8
%{public}@: Someone is finishing a promise with both a result and an error. This will result in both the success and error blocks being called. result = %{public}@ error = %{public}@
%{public}@: Someone is finishing a promise with neither a result nor an error. This will result in neither the success nor the error blocks being called.
%{public}@: Someone is attempting to finish or cancel a finished SSPromise.
com.apple.StoreServices.SSPromise.globalPromiseStorageAccessQueue
-[SSVEnableSubscriptionRequest startWithCompletionBlock:]
-[SSVServerAuthenticateRequest startWithAuthenticateResponse:]
com.apple.StoreServices.HTTPServerResponse
SSHTTPServerResponseErrorDomain
Socket Read Error
Length < 0
Page Not Found
[%@] An error occurred writing the response. Written=%ld Error=%@
[%@] Successfully sent the response. %{public}@
<html><head><title>%d</title></head><body><div align='center'><h1>%d</h1>
<p>%@</p>
</div></body></html>
Write Error
No data to write
Error writing data to socket. [2]
Expception occurred during write to socket. Exception=%@
com.apple.itunescloudd.playactivity
SSVPlayActivityControllerEndpointIdentifierJingle
SSVPlayActivityControllerEndpointIdentifierPairedDevice
SSVPlayActivityControllerDidRecordPlayActivityEventsNotification
SSVPlayActivityControllerEndpointRevisionInformationDidChangeNotification
SSVPlayActivityControllerUserInfoKeyEndpointIdentifier
SSVPlayActivityControllerUserInfoKeyEndRevision
SSVPlayActivityControllerUserInfoKeyStartRevision
SSVPlayActivityEndpointRevisionInformation
AdditionalPendingRevisions
CurrentRevision
RevisionVersionToken
com.apple.StoreServices.SSVPlayActivityController.accessQueue
com.apple.StoreServices.SSVPlayActivityController.serialQueue
[%@] Error %{public}@ completing %lu play activity events with session token:%llu flushResult:%lu
[%@] Completed %lu play activity events with session token:%llu flushResult:%lu with error %{public}@
[%@] Error %{public}@ flushing play activity events for %{public}@
[%@] Finished flushing play activity events for %{public}@ with error %{public}@
v32@?0@"_SSVPlayActivityFlushSessionInformation"8@"NSArray"16@"NSError"24
[%@] Recording play activity events: %@
ShouldDebugLogRecordedEvents
com.apple.StoreServices.SSVPlayActivityController.debugLogOperationQueue
[%@] Error %{public}@ recording %lu play activity events
[%@] Finished recording %lu play activity events with error %{public}@
[SSVPlayActivityController] Removing play events up to revision: %llu
[%@] Error %{public}@ removing play activity events upto revision %llu
[%@] Finished removing play activity events upto revision %llu with error %{public}@
[%@] Error %{public}@ setting revision %llu, version token %{public}@ for end point identifier %{public}@
[%@] Finished setting revision %llu, version token %{public}@ for end point identifier %{public}@ with error %{public}@
[%@] Error %{public}@ getting play activity events for end point identifier %{public}@
[%@] Finished getting %lu play activity events for end point identifier %{public}@
v32@?0@"NSArray"8Q16@"NSError"24
[SSVPlayActivityController] Completing pending play events for revision index set: %@ session token: %llu with result: %lu
[SSVPlayActivityController] Session information: %@
[SSVPlayActivityController] Removing pending revisions index set %@ from sessionInformation revisions index set: %@
[SSVPlayActivityController] Resulting index set: %@
[SSVPlayActivityController] Existing additional pending revisions index set: %@
[SSVPlayActivityController] New additional pending revisions index set from flush success: %@
[SSVPlayActivityController] New additional pending revisions index set from flush failure: %@
[SSVPlayActivityController] Revisions version token has changed, clearing out.
[SSVPlayActivityController] Connection to daemon play activity controller interrupted.
[SSVPlayActivityController] Connection to daemon play activity controller invalidated.
v32@?0Q8@"NSString"16@"NSError"24
%{public}@: Failed to unarchive revision information. Error = %{public}@
%{public}@: Failed to archive revision information. Error = %{public}@
com.apple.StoreServices.SSVPlayActivityControllerEndpointRevisionInformationDidChange
-[SSInstallAttributionPingbackRequest startWithCompletionBlock:]
com.apple.StoreServices.SSPurchaseManager.%@.%p
com.apple.StoreServices.SSPurchaseManager.completion.%@.%p
-[SSPurchaseManager addPurchases:withCompletionBlock:]
-[SSPurchaseManager cancelPurchases:withCompletionBlock:]
-[SSPurchaseManager getPurchasesUsingBlock:]
-[SSPurchaseManager insertPurchases:afterPurchase:withCompletionBlock:]
-[SSPurchaseManager movePurchases:afterPurchase:withCompletionBlock:]
-[SSPurchaseManager _connectToDaemon]
[%{public}@]: [%{public}@] Initiating authentication request
[%{public}@]: [%{public}@] Authentication request completed with error: %{public}@
[%{public}@]: Received authentication request but context was missing or invalid
-[SSPurchaseManager _handlePurchasesFinished:fromConnection:]
buyProduct
v24@?0@"NSString"8@"NSError"16
ISMachineDataActionOperation
acknowledged
acknowledgmentGroup
acknowledgmentVersion
bundleIdentifier
displayed
xp_amp_gdpr
Store
personID
locationPosition
locationType
adamId
fcKind
longName
shortName
cacheTimestamp
ISO3Country
dsId
storeFrontId
subscriptions
inAppSubscriptions
appVersion
chargeCountryCode
chargeCurrencyCode
chargeStoreFrontId
expireDate
EEE MMM dd HH:mm:ss z yyyy
inAppAdamId
inAppVersion
isNewsAppPurchase
offerIdentifier
originalPurchaseDownloadId
purchasabilityType
purchaseDownloadId
quantity
vendorIdentifier
latestTermsVersionId
isCurrent
termsContentText
termsContextText
coverImage
v32@?0@"NSString"8@"SSVMediaSocialPostAttachment"16^B24
com.apple.coreaudio-format
SSEncodingDictionary
admin
glide
eligible
notEligible
unlinked
needsManualVerification
%@ accountIdentifier %@ accountStatus %@ carrierBundlingStatus: %@
astv
cbec
lstv
prms
expirationDate
isPurchaser
hasOfflineSlots
isNotEligibleForFreeTrial
isFuseEnabled
Enabled
source
Apple
Carrier
Family
Glide
Disabled
InvalidToken
Discovery
Unlinked
hasFamily
hasFamilyGreaterThanOneMember
isHoH
terms
agreedToTerms
latestTerms
isAdmin
GetMACAddress returned 0x%08x
FindEthernetInterfaces returned 0x%08x
get_mac_address
[%s] -- Input buffer too small [%d < %d]
IONetworkController
IOServiceMatching kIONetworkControllerClass: %@
IOPrimaryInterface
IOPropertyMatch
CFDictionaryCreateMutable returned a NULL dictionary.
IOServiceMatching returned a NULL dictionary for kIONetworkControllerClass.
IOServiceGetMatchingServices returned 0x%08x
IOServiceGetMatchingServices iterator %u
IOService
IOMACAddress
IORegistryEntryCreateCFProperty produced bytes
IORegistryEntryCreateCFProperty failed
IORegistryEntryGetParentEntry returned 0x%08x
bgColor
textColor1
textColor2
textColor3
textColor4
height
width
com.apple.private.alloy.itunes.apsr
com.apple.storeservices.metricsEventTransactionIdentifier
TLSSamplingPercentage
TLSSamplingSessionDuration
com.apple.StoreServices.SessionManager.eventqueue
com.apple.StoreServices.SessionManager.sendTimingData
com.apple.StoreServices.SessionManager.sessions
com.apple.StoreServices.SessionManager.taskDelegates
com.apple.StoreServices.SessionManager.taskMetrics
com.apple.StoreServices.SessionManager.requestData
com.apple.StoreServices.SessionManager.responseData
com.apple.StoreServices.SessionManager.recordResponse
%@: Created a nil NSURLSessionTask for %@.
Network Timing Metrics: %@
%{public}@: Overwritting metric event property: %{public}@ with value: %@
Flushing HTTP Archive (HAR) buffer. Count : %ld
urlcache
[%@] [%@] [%@] [%@]
Date
%@: Creating a new NSURLSession with identifier %@.
com.apple.itunesstore
.client-%@
.auditToken-%d-%ld
.setcookies
.collecttimingdata
.requirescellular
.allowscellular
.cache-%@
.allowstls
TLSLastSampleDate
TLSLastSampleResult
[%@]: Metrics network inquiry error occurred. Error: %@
[%@]: Received low memory warning. Reducing HAR buffer size by: %lu
[%@]: No longer in low memory state. Increasing HAR buffer size
Writing %ld HTTP Archive file(s) to disk.
application/javascript
application/x-javascript
text/xml
text/xml+itml
%{public}@: APSR attempted: %{public}@ succeeded: %{public}@ for request: %@
%{public}@: Enabling reverse push using APS
aps-sampling-percentage
aps-enabled-patterns
https?://(p\d{1,3}-)?buy[.]itunes[.]apple[.]com/WebObjects/MZBuy.woa/wa/.*buyProduct.*
%@: Failed to fetch bag value for key: %@. Error: %@
%{public}@: A nil value was loaded from the bag for key %{public}@. Using new bag: %{public}@
ISURLOperation
<%@ %p hasSubscriptionLease:%@ hasSubscriptionSlot:%@>
xp_amp_clientperf
appleTimingApp
apsRelayAttempted
apsRelayDidFallback
apsRelaySucceeded
apsRelayRequested
cachedResponse
clientCorrelationKey
clientError
connectionEndTime
connectionInterface
connectionReused
connectionStartNStatRXBytes
connectionStartNStatTXBytes
connectionStopNStatRXBytes
connectionStopNStatTXBytes
connectionStartTime
connectionType
dnsServersIPAddresses
domainLookupEndTime
domainLookupStartTime
edgeNodeCacheStatus
fetchStartTime
networkQualityReports
redirectCount
redirectEndTime
requestMessageSize
redirectStartTime
requestStartTime
requestUrl
resolvedIPAddress
responseDate
responseEndTime
responseMessageSize
responseStartTime
secureConnectionStartTime
statusCode
tlsSessionTicketsEnabled
tidState
xpSessionDuration
xpSamplingForced
xpSamplingPercentageUsers
xpSamplingPercentageCachedResponses
appleTimingApp = %@
apsRelayAttempted = %@
apsRelayDidFallback = %@
apsRelaySucceeded = %@
clientCorrelationKey = %@
requestUrl = %@
connectionType = %@
dnsServers = %@
resolvedIPAddress = %@
statusCode = %ld
tidState = %@
clientError = %@
fetchStartTime = %f
domainLookupStartTime = %f
domainLookupEndTime = %f
connectionStartTime = %f
connectionStartNStatRXBytes = %ld
connectionStartNStatTXBytes = %ld
secureConnectionStartTime = %f
connectionEndTime = %f
connectionStopNStatRXBytes = %ld
connectionStopNStatTXBytes = %ld
connectionReused = %@
requestStartTime = %f
responseDate = %@
responseStartTime = %f
responseEndTime = %f
redirectStartTime = %f
redirectEndTime = %f
redirectCount = %ld
xpSamplingForced = %@
xpSamplingPercentageCachedResponses = %f
xpSamplingPercentageUsers = %f
xpSessionDuration = %f
requestMessageSize = %lu
esponseMessageSize = %lu
TimingMetricsWindowStartTime
actionText
priceFormatted
subscription
downloaded
downloading
long
short
SSVMediaSocialAdminPermissionsOptionIgnoreCache
com.apple.StoreKitUI.SKUIMediaSocialAdminPermissionsCoordinator
v24@?0B8B12@"NSError"16
SSVMediaSocialAdminPermissionsCoordinator.m
accountID
%{public}@: Failed to unarchive dictionary. Error = %{public}@
adminStatus
%{public}@: Failed to archive status dictionary. Error = %{public}@
MediaSocialRefreshPeriodKey
MediaSocialSavedAdminStatusesKey
eventType
reasonHintType
subscriptionAdamID
purchasedAdamID
radioAdamID
itemCloudID
lyricsID
equivalencySourceAdamID
containerAdamID
globalPlaylistID
stationHash
stationStringID
stationID
cloudAlbumID
cloudPlaylistID
playlistVersionHash
containerType
endReasonType
eventDateTimestamp
featureName
itemDuration
itemEndTime
itemStartTime
itemType
persistentID
sourceType
timedMetadata
trackInfo
recommendationData
requestingBundleIdentifier
requestingBundleVersion
enqueuerProperties
householdID
siriInitiated
eventTimeZoneName
displayType
characterDisplayedCount
lyricLanguage
containerID
personalizedContainerID
storeID
externalID
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
internalBuild
eventSecondsFromGMT
PlayEnd
PlayStart
LyricDisplay
Unknown
ContainerChanged
RadioStation
Playlist
Album
Artist
NotApplicable
Other
SkipBackward
SkipForward
QueueChange
ManualPause
Interruption
InactivityPause
InactivitySessionEnd
NaturalTransition
AssetLoadFailure
ScrubBegin
ScrubEnd
QuickPlay
iTunesStoreContent
AudioClip
Stream
TimedMetadataPing
UploadedContent
AggregateNonCatalogPlayTime
Movie
TVEpisode
Audio
Video
Device
PairedWatch
RemoteControl
NoDisplayType
Static
LineByLine
WordByWord
SSSoftwareUpdatesStoreDidChangeNotification
com.apple.StoreServices.SSSoftwareUpdatesStore.%p
com.apple.StoreServices.SSSoftwareUpdatesStore.callout.%p
-[SSSoftwareUpdatesStore hideApplicationBadgeForPendingUpdates]
-[SSSoftwareUpdatesStore reloadFromServerWithCompletionBlock:]
-[SSFamilyCircleRequest startWithResponseBlock:]
v24@?0@"SSFamilyCircleResponse"8@"NSError"16
notification-type
parameters
media-kinds
put-parameters
mzbookkeeper
purchase
-[SSRentalSyncRequest startWithConnectionResponseBlock:]
<%@ %p
 buildVersion: %@
 deviceGUID: %@
 deviceName: %@
 SBEnabled: %@
 storeAccountID: %llu
 storeFrontID: %@
 timeZone:%@
timeZone
Must have upload kinds
com.apple.StoreServices.SSVDirectUploadQueue
com.apple.StoreServices.SSVDirectUploadQueue.observers
-[SSVDirectUploadQueue cancelAllUploadsWithCompletionBlock:]
-[SSVDirectUploadQueue cancelUploads:completionBlock:]
-[SSVDirectUploadQueue getUploadsWithCompletionBlock:]
-[SSVDirectUploadQueue pauseAllUploadsWithCompletionBlock:]
-[SSVDirectUploadQueue pauseUploads:completionBlock:]
-[SSVDirectUploadQueue resumeAllUploadsWithCompletionBlock:]
-[SSVDirectUploadQueue resumeUploads:completionBlock:]
-[SSVDirectUploadQueue _establishInboundConnection]
%@: Unrecognized message: %lld
B32@?0@"SSVDirectUpload"8Q16^B24
parental_control_attributes
rating-software
xpcData must be non-nil
 adamID: %lli
 cloudAlbumID: %@
 cloudPlaylistID: %llu
 globalPlaylistID: %@
 playlistVersionHash: %@
 stationHash: %@
 stationStringID: %@
 stationID: %lli
SSVPlayActivityEventContainerIDsAdamID
SSVPlayActivityEventContainerIDsCloudAlbumID
SSVPlayActivityEventContainerIDsCloudPlaylistID
SSVPlayActivityEventContainerIDsGlobalPlaylistID
SSVPlayActivityEventContainerIDsPlaylistVersionHash
SSVPlayActivityEventContainerIDsStationHash
SSVPlayActivityEventContainerIDsStationStringID
SSVPlayActivityEventContainerIDsStationID
SSVFairPlaySubscriptionControllerSubscriptionStatusDidChangeNotification
com.apple.StoreServices.SSVFairPlaySubscriptionController.accessQueue
sbKeyBag
subKeyBag
SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
B16@?0@"SSAppPurchaseHistoryTransaction"8
[%@] Posting SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
DELETE FROM %@
DELETE FROM %@ WHERE %@ != '%@'
SELECT value FROM db_properties WHERE key = ?
[%s:%d] Unsupported predicate value: %@
/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/StoreServices/SSAppPurchaseHistoryDatabase.m
SSAppPurchaseHistoryDatabase.m
INSERT OR REPLACE INTO db_properties (value, key) VALUES (?, ?);
DELETE FROM db_properties WHERE key = ?;
-[SSVCloudServiceCapabilitiesRequest startWithResponseBlock:]
%{public}@: Calling for capabilities. Allows privacy acknowledgement prompt: %{BOOL}d. callStack = %{public}@
v24@?0@"SSVCloudServiceCapabilitiesResponse"8@"NSError"16
v16@?0@"NSMutableURLRequest"8
accountless-streaming
[%@] Unsuccessful database migration function from %ld => %ld [Failure Count: %d]
[%@] Failed to migrate the DB %d times. [%ld vs %ld] Giving up, but nothing will work from this point forward. exit(1) crosses my mind, but probably not the right thing to do.
[%@] Although database migration function failed from %d => %d -- The schema did change. Perhaps another process is updating the database: [Currently at: %d]
Caches
com.apple.storeservices
AppPurchaseHistory.6.sqlitedb
CREATE TABLE IF NOT EXISTS app_purchase_history (pid INTEGER, account_unique_identifier INTEGER,category TEXT, company_title TEXT, content_rating_flags INTEGER, bundle_id TEXT, date_updated INTEGER, date_purchased INTEGER, download_size INTEGER, flavors TEXT, has_messages_extension INTEGER DEFAULT 0, is_hidden_from_springboard INTEGER DEFAULT 0, icon_title TEXT, icon_token TEXT, icon_url TEXT, oval_icon_token TEXT, oval_icon_url TEXT, is_family_shareable INTEGER DEFAULT 0, is_first_party INTEGER DEFAULT 0, is_newsstand INTEGER DEFAULT 0, is_hidden INTEGER DEFAULT 0, long_title TEXT, minimum_os INTEGER, purchased_token INTEGER,store_id INTEGER, supports_ipad INTEGER DEFAULT 0, supports_iphone INTEGER DEFAULT 0, redownload_params TEXT, version_human_readable TEXT, version_itunes INTEGER, vpp_is_licensed INTEGER DEFAULT 0, is_32_bit_only INTEGER DEFAULT 0, is_preorder INTEGER DEFAULT 0, required_capabilities TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS db_properties (key TEXT PRIMARY KEY, value TEXT)
CREATE TABLE IF NOT EXISTS app_purchase_history_accounts (account_unique_identifier INTEGER, local_revision INTEGER, PRIMARY KEY (account_unique_identifier));
CREATE INDEX IF NOT EXISTS app_purchase_history_store_id ON app_purchase_history (store_id);
CREATE INDEX IF NOT EXISTS app_purchase_history_category ON app_purchase_history (category);
CREATE INDEX IF NOT EXISTS app_purchase_history_bundle_id ON app_purchase_history (bundle_id);
CREATE INDEX IF NOT EXISTS app_purchase_history_account_unique_identifier ON app_purchase_history (account_unique_identifier);
SELECT value FROM db_properties WHERE key="app_purchase_history.localRevision";
SELECT value FROM db_properties WHERE key="app_purchase_history.account_unique_identifier";
DELETE FROM db_properties WHERE key="app_purchase_history.localRevision";
ALTER TABLE app_purchase_history ADD COLUMN is_family_shareable INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN vpp_is_licensed INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN is_first_party INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN has_messages_extension INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN is_hidden_from_springboard INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN oval_icon_token TEXT;
ALTER TABLE app_purchase_history ADD COLUMN oval_icon_url TEXT;
ALTER TABLE app_purchase_history ADD COLUMN is_32_bit_only INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN is_preorder INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN required_capabilities TEXT;
com.apple.MediaSocial.adminStatus
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
MZStorePlatform
app_purchase_history
IFNULL(app_purchase_history.is_first_party, 0)
company_title
content_rating_flags
bundle_id
date_updated
date_purchased
download_size
flavors
has_messages_extension
icon_title
icon_token
icon_url
is_family_shareable
is_first_party
is_hidden
is_hidden_from_springboard
is_newsstand
is_preorder
IFNULL(app_purchase_history.is_preorder, 0)
long_title
minimum_os
oval_icon_token
oval_icon_url
is_32_bit_only
purchased_token
store_id
supports_ipad
supports_iphone
redownload_params
version_human_readable
version_itunes
vpp_is_licensed
required_capabilities
<%@:%p> [PID: %lld] [Account: %lld] [StoreID: %lld]
MZFreeProductCode
MZGiftCertificate
code
getCodeInfoSrv
codeInfo
codeType
allowAutoSubmission
lockups
salable
 [BundleID: %@] [IconURL: %@]
mobile
[%@] -- Error creating directory: %@ -- %@
[%@] -- Error creating PersistentCache: %@
[%@] -- Error setting up database: %@
[%@] -- Error setting up database.
<%@ : %p> - [ID: %@] [Name: %@] [Max Inline: %u] [DB: %@]
CREATE TABLE IF NOT EXISTS %@ (pid INTEGER, lookup_key TEXT,data_blob BLOB, data_size INTEGER, date_inserted INTEGER, date_expired INTEGER, date_retired INTEGER, user_info TEXT, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS %@_lookup_key ON %@ (lookup_key);
CREATE INDEX IF NOT EXISTS %@_date_inserted ON %@ (date_inserted);
CREATE INDEX IF NOT EXISTS %@_date_expired ON %@ (date_expired);
CREATE INDEX IF NOT EXISTS %@_date_retired ON %@ (date_retired);
CREATE INDEX IF NOT EXISTS %@_date_user_info ON %@ (user_info);
SELECT SUM(%@), COUNT(*) FROM %@ WHERE %@ <= ?;
count
retired
expired
SELECT SUM(%@), COUNT(*) FROM %@;
total
SELECT %@, LENGTH(HEX(%@)) FROM %@ WHERE %@ <= ?;
DELETE FROM %@ WHERE %@ IN ( ?
[%@] [Updated: %d] [External: %d] [LookupKey: %@]
[%@] Failed to update SSDatabaseCacheEntry: %@
-[SSVClaimApplicationsRequest startWithResponseBlock:]
subscriptionStatus
com.apple.itunesstored.SSVSubscriptionStatusCoordinator.changeNotificationSuspensionAccessQueue
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim
[%{public}@]: _copyDownloadsForMessage: %@
[%{public}@]: _sendDownloadsChanged: %@
<%@ : %p> - Persistent ID: %llu
SELECT %@ FROM %@ WHERE %@ = ? LIMIT 1;
database_cache
lookup_key
data_blob
data_size
date_inserted
date_expired
date_retired
user_info
observable
coma.apple.StoreServices.SSObservable.sendMessage
%{public}@: [%{public}@] Someone is attempting to send a completion from a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to send a failure from a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to send a result from a completed SSObservable.
%{public}@: [%{public}@] There's at least one observer. Sending the result along with any queued results.
%{public}@: [%{public}@] The are no observers. Queuing the result.
%{public}@: [%{public}@] Someone is attempting to add an observer to a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to add an observer to a SSObservable it's already observing.
%{public}@: [%{public}@] There are pending results. Sending them now that we have an observer.
<%@ : %p> - [ID: %@] [Name: %@]
%02x
[%@] write bytes (%d) to path: %@
Error clearing cache entry: %@
[%@] -- Failed to read: %@
com.apple.itunesstored.biometricschanged
com.apple.StoreServices.SSBiometrics.%p
-[SSBiometrics getAllCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:]
-[SSBiometrics getCachedBiometricAuthenticationContextWithToken:evict:completionBlock:]
-[SSBiometrics getCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:]
-[SSBiometrics getConstraintsDictionaryForPurpose:completion:]
-[SSBiometrics getCurrentACLVersionWithCompletion:]
-[SSBiometrics getStateWithCompletionBlock:]
-[SSBiometrics resetAccount:withCompletionBlock:]
-[SSBiometrics resetWithCompletionBlock:]
-[SSBiometrics setEnabled:withAuthToken:completionBlock:]
-[SSBiometrics setAllowed:completionBlock:]
-[SSBiometrics tokenUpdateDidFinishWithLogKey:completion:]
-[SSBiometrics tokenUpdateShouldStartWithLogKey:completion:]
-[SSBiometrics tokenUpdateStateWithCompletionBlock:]
-[SSBiometrics getIdentityMapCountWithCompletionBlock:]
-[SSBiometrics isIdentityMapValidForAccountIdentifier:completionBlock:]
-[SSBiometrics saveIdentityMapForAccountIdentifier:completionBlock:]
SELECT %@.%@,%@.%@,%@.%@,%@.%@,%@.%@,%@.%@,%@.%@ FROM %@ LEFT OUTER JOIN %@ ON %@.%@ = %@.%@ WHERE (%@.%@ IS NULL OR %@.%@ <= %lld) AND (%@ = %@)
 AND (%@.%@ IN ("XX"
%@,"%@"
 AND %@.%@ = "%@" 
app_image_cache
Cancelled
Failed
FailedAssetBlocked
FailedDownloadRemoved
FailedInstallVerification
FailedKeepSafeHarborContainer
FailedPermanently
Started
Succeeded
AutoStoreQueue
AutoUpdate
External
Internal
ManualUpdate
PerDevice
Restore
RestoreDemoted
StoreQueue
clientId
xp_amp_app_install
hardwareType
installError
installStatus
installType
jobId
buildVersion = %@
bundleID = %@
hardwareType = %@
installError = %@
installStatus = %@
installType = %@
jobID = %lld
v32@?0@"NSURLQueryItem"8Q16^B24
SSAppImageDatabaseCacheEntry
**** No identifier passed to initialization routine [%@]
%@: [Session Identifier: %@] [Factories: %d]
**** No SSCacheObjectFactory for typeIdentifier [%@]
**** Clearing SSCacheObjectStore [%@]
[%@] No data representation when adding object to cache with item identifier %@
[%@] No item identifier
[%@] No type identifier for item identifier %@
[%@] No data representation for item identifier %@
bplist
-[SSVMediaSocialPostRequest startWithCompletionBlock:]
caller
com.apple.StoreServices.SSVPlatformRequestOperation.%p
x-request-timestamp
X-Request-TimeStamp
v32@?0@"NSString"8@"NSString"16q24
&version=1
-[SSWishlistAddItemsRequest startWithAddItemsResponseBlock:]
SSWishlistErrorDomain
v16@?0^{sqlite3=}8
SELECT value FROM properties WHERE key="lastSyncTime";
DELETE FROM properties WHERE key="lastSyncTime"
INSERT OR REPLACE INTO properties (key, value) VALUES ("lastSyncTime", ?)
-[SSVShowDialogRequest startWithDialogResponseBlock:]
 cloudID: %llu
 lyricsID: %@
 purchasedAdamID: %lli
 radioAdamID: %lli
 equivalencySourceAdamID: %lli
 subscriptionAdamID: %lli
 tvShowPurchasedAdamID: %lli
 tvShowSubscriptionAdamID: %lli
SSVPlayActivityEventItemIDsCloudID
SSVPlayActivityEventItemIDsLyricsID
SSVPlayActivityEventItemIDsPurchasedAdamID
SSVPlayActivityEventItemIDsRadioAdamID
SSVPlayActivityEventItemIDsEquivalencySourceAdamID
SSVPlayActivityEventItemIDsSubscriptionAdamID
SSVPlayActivityEventItemIDsTVShowPurchasedAdamID
SSVPlayActivityEventItemIDsTVShowSubscriptionAdamID
CREATE TABLE IF NOT EXISTS item (pid INTEGER, item_id INTEGER, sort_order INTEGER DEFAULT 0, state INTEGER DEFAULT 0, item_kind TEXT NOT NULL, item_data BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS properties (key TEXT, value TEXT, PRIMARY KEY (key));
CREATE INDEX IF NOT EXISTS item_item_id ON item (item_id);
CREATE INDEX IF NOT EXISTS item_state ON item (state);
%lld.sqlitedb
Wishlists
ALTER TABLE item ADD COLUMN sort_order INTEGER DEFAULT 0;
ALTER TABLE item ADD COLUMN wishlist_item_id INTEGER DEFAULT 0;
Type:%ld Version:%ld Data:%@
-[SSPushNotificationTokenRequest startWithCompletion:]
-[SSVApplicationCapabilitiesRequest startWithCapabilitiesResponseBlock:]
-[SSSilentEnrollmentVerification startWithCompletion:]
item
item_data
item_id
item_kind
sort_order
state
appInstall
click
enter
exit
impressions
loadUrl
buyConfirmed
canary
com.StoreServices.globalEventCanaryLock
[%@] Configuration field-blacklisting trimmed %d fields from event [%@]
[%@] Error creating PLIST: %@ -- Input: %@
[%@] No Dictionary Representation for: %@
Default values are only supported for primitive types.
baseVersion
osVersion
eventVersion
connection
eventTime
topic
clientVersion
hostApp
pClientVersion
timezoneOffset
%@ : %p -- [%d properties] %@
%@/2/%@
main-screen-width
main-screen-height
screenWidth
screenHeight
pixelRatio
windowInnerWidth
windowInnerHeight
pageContext
pageId
pageUrl
windowOrientation
%@ -- [Type: %@] [eVersion: %@]
-[SSPurchaseIntentActionRequest startWithCompletionBlock:]
appBundleId
com.apple.StoreServices.SSVFairPlaySAPSession.completion
com.apple.StoreServices.SSVFairPlaySAPSession
%@: SAP signature failed with bad session, attempting to sign again
%@: SAP signature failed with error: %@
%@: SAP signature verification failed with bad session, attempting to verify signature again
%@: SAP signature verification failed with error: %@
%{public}@: Failed to complete mescal context setup. Error = %@
%{public}@: Failed to load certificate data.
sign-sap-setup-buffer
%{public}@: Unable to find mescal setup url in the bag
%@: Failed to obtain SAP context for signing
No SAP context for signing
%@: Verify prime failed: %@
%@: Verify prime finished: %@
%@: Failed to obtain SAP context for signature verification
No SAP context for signature verification
back
forward
isCachedResponse
isUber
navigation
pageHistory
pageRenderTime
refApp
refUrl
requestEndTime
searchTerm
serverAppInstance
serverTiming
%@: Instance: %@
cancel-purchase-batch
failed-items
keybag
more
page-type
template-name
preorder-success
com.apple.storeservices.StoreDownloadQueueResponse
freelist_count
auto_vacuum
%{public}@: Free page count (%ld) exceeded maximum. Vacuuming the database. auto_vacuum = %ld
VACUUM;
PRAGMA incremental_vacuum(500);
com.apple.storeServices.analytics
eventsTable_v1
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER, %@ TEXT,%@ BLOB, %@ REAL, %@ INTEGER, PRIMARY KEY (%@));
CREATE INDEX IF NOT EXISTS %@_%@ ON %@ (%@);
ALTER TABLE %@ ADD COLUMN %@ INTEGER DEFAULT 0;
suppressUserInfo
UPDATE %@ SET %@ = %@;
Metrics User database current version: %@
PRAGMA auto_vacuum = 2;
Metrics Errored out at version %@
Metrics User database migrated to version %@
PRAGMA %@;
[%@] Blacklisted fields produced an event with zero properties: %@
[%@] Blacklisted event excluded from insert: %@
B16@?0@"SSSQLiteDatabase"8
SELECT COUNT(%@) FROM %@ WHERE %@ = 0 AND %@ < %lld
DELETE FROM %@ WHERE %@ < %lld;
[%@] Deleting out-of-date events returned: %d [%d rows affected]
DELETE FROM %@ WHERE %@ != 0;
[%@] Deleting reported events returned: %d [%d rows affected]
[%@] Direct-access controller is calling through XPC to flush Unreported Events
[%@] Statement Didn't finish after stepping -- %@ -- %@
[%@] Dropping Event Summary which has no value for "%@" -- %@
[%@] Empty input array wastes CPU/Power, but is not fatal
UPDATE %@ SET %@ = %lld WHERE (%@ IN (%@)) AND %@ = 0;
SELECT DISTINCT(%@) FROM %@ WHERE %@ = 0 AND %@ <= %lld ORDER BY %@ ASC
SELECT %@ FROM %@ WHERE %@ = 0 AND %@ <= %lld ORDER BY %@ ASC LIMIT %d
SELECT %@ FROM %@ WHERE %@ = '%@' AND %@ = 0 AND %@ <= %lld AND %@ = %@ ORDER BY %@ ASC LIMIT %d
[%@] === Already Reported Event: %llu -- [Timestamp Reported: %@]
[%@] Error creating JSON: %@ -- Input: %@
report_url
eventBody
timestampInserted
timestampReported
supressDsid
is-background
apps
bundle-ids
claim-item-ids
download-item-ids
ds-id
item-ids
response-content-type
claim-type
serial-no
UniqueDeviceID
udid
InternationalMobileEquipmentIdentity
imei
MobileEquipmentIdentifier
meid
%@: [IDs: %@]
[%@] Marking %d events are reported
[%{public}@] No applicable metric events to report.
deliveryVersion
postTime
[%{public}@] Invalid JSON. Object: %{private}@
[%{public}@] OutputStream did not accept all bytes: %{public}d vs %{public}lu
[%{public}@] Wrote a total of %{public}d bytes to output stream
[%{public}@] Invalid JSON object: %@ with type: %{public}@
[%@] Unreported Event Count: %d
1.2.11
[%{public}@] -- error initializing z_stream [%{public}d] [Errno: %{public}d]
%{public}@: Error occurred during initialization
[%{public}@] Closed Stream [total_in: %{public}d] [total_out: %{public}d] -- %{public}d
[%{public}@] -- write called on stream with error: %{public}@
write:maxLength:
[%{public}@] -- error deflating stream [%{public}d] [Errno: %{public}d] [Context: %{public}@]
avail_in
avail_out
errno
context
SSGzipOutputStream
-[SSImportDownloadToIPodLibraryRequest startWithResponseBlock:]
com.apple.StoreServices.SSCoalescingQueue
com.apple.StoreServices.SSDownloadMonitor.%p
com.apple.StoreServices.SSDownloadMonitor.%p.delegate
signedIn
signedOut
com.apple.StoreServices.SSVSubscriptionEntitlementsCoordinator
%@: Asking daemon for subscription entitlements.
-[SSVSubscriptionEntitlementsCoordinator _loadSubscriptionEntitlementsIgnoreCaches:error:]
debug
info
warn
xp_amp_appstore_log
level
loggerName
logLevel = %@
logSubsystem = %@
message = %@
transactionId
automatic-downloads2
automatic-downloads
downloads-url
com.apple.storeservices.download-queue
@"NSURL"16@?0@"SSURLBagContext"8
%@: Could not load URL bag: %@
%@: Finished loading download queue (%@, %@, %@)
[%@]: Loading download queue (%@, %@, %@) with reason: %ld
[%@]: Download queue response (key = %@ startID = %@ endID = %@)
[%@]: storeCorrelationID: %{public}@
%llu
init
lease
init+lease
actionDetails
positionX
positionY
targetType
actionUrl
%@: %@; [%@, %@]; [%@, %@]; %@
focus
clear
delete
dismiss
select
sheet
sort
brick
button
editorial
flowcase
list
listItem
preview
search_related
tabItem
textField
Stack Shot Failed
Failed to create symbolicator
 %s + %llu
 (%s:%u)
%-3d %-30s
0x%0*llx%s%s
biometricMatchState
biometricType
dialogID
topicName
faceId
touchId
xp_ci
xp_its_main
bioLockout
%{public}@: Unknown match state: %{public}@
%{public}@: Failed to identify biometric style for metrics event `deviceBiometricStyle` unknown
%{public}@: Failed to identity biometric style for metrics event `deviceBiometricStyle` not available
%{public}@: Failed to instrument metrics dialog with match: %{public}@
%{public}@: Lookup clientID for userID: %@
%{public}@: Found clientID: %{public}@, userID: %@
%{public}@: Lookup clientID failed with no userID
fuse
%@ [PID: %lld]
launch
taskSwitch
%@: Type: %@
destinationUrl
quit
ASDJobManager
ASDJobManagerOptions
v16@?0@"NSArray"8
v32@?0@"SSSoftwareDownload"8Q16^B24
ASDInstallManifestRequestOptions
ASDInstallManifestRequest
v28@?0B8@"NSArray"12@"NSError"20
ASDJobAsset
ASDJobActivity
ASDJobManifest
SSDoubleLinkedListInvalidNode
Attempting to add a node that has already been added to another list.
Attempting to remove a node from a list it doesn't belong to.
%@: Count: %ld
%{public}@ is an unsupported method for software downloads
%{public}@ is an unsupported deprecated method for software downloads
ended
pause
revision_id
store_account_id
event_data
events_current_revision
events_revision_version_token
play_activity.sqlitedb
unknown-revision-version
[%@] Statement Didn't finish after stepping -- %@
DELETE FROM %@ WHERE %@ <= ?;
[%@] Statement didn't finish after stepping -- %@
Q16@?0Q8
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER PRIMARY KEY, %@ INTEGER, %@ INTEGER, %@ BLOB);
CREATE TABLE IF NOT EXISTS %@ (%@ TEXT PRIMARY KEY, %@ TEXT);
DROP TABLE IF EXISTS %@;
INSERT OR IGNORE INTO %@ (%@, %@) VALUES (?, ?);
 FROM %@ WHERE (
(%@ == ?) AND (
%@ BETWEEN ? AND ?
 OR %@ BETWEEN ? AND ?
v32@?0{_NSRange=QQ}8^B24
) ORDER BY 
%@,%@ ASC;
%@ ASC;
SELECT DISTINCT %@ FROM %@ WHERE %@ IN (
INSERT OR REPLACE INTO %@ (%@, %@) VALUES (?, ?);
SELECT %@ FROM %@ WHERE %@ = ?;
leaseDurationInSeconds
offlineSlotAvailable
yyyy-MM-dd HH:mm:ss.SSSSSSZZZ
Unexpected invocation: `%{public}s`. This is legacy SPI that is due to be removed. Please send this report to 'Store Services | All'.
Expected invocation: `%{public}s`. This is legacy SPI that is still in use and not planned for removal at this time.
[%{public}@] Failed to set port. A server is already running.
[%{public}@] Failed to start server. Another server is already running.
[%{public}@] Failed to create socket.
[%{public}@] Failed to bind socket address.
[%{public}@] Server running
[%{public}@] Server stopped
[%{public}@] Failed to accept the socket.
[%{public}@] Fialed to serialize XML object into body data. Error = %@
[%{public}@] Error reading body data into XML object. Error = %@
%{public}@: %{public}@ has an invalid content version. Refusing to acknowledge it.
%{public}@: Returning NO from shouldDisplayPrivacyLinkWithIdentifier: because the internal default is set.
%{public}@: Determining whether or not the privacy policy should be displayed for %{public}@.
%{public}@: No privacy policy for %{public}@ has ever been acknowledged.
%{public}@: identifier = %{public}@ | lastAcceptedVersion = %lu | currentVersion = %lu
%{public}@: Could not initialize the privacy view controller. Make sure your project has linked the AMSUI framework.
%{public}@: The privacy acknowledgement on the account matches what we're trying to add to it. account = %{public}@ | account.privacyAcknowledgement = %{public}@ | privacyAcknowledgement = %{public}@
%{public}@: Failed to save %{public}@. error = %{public}@
%{public}@: There's no active account to acknowledgement privacy consent on.
%{public}@: Acknowledging privacy consent on the active account. activeAccount = %{public}@ | privacyAcknowledgement = %{public}@
%{public}@: Acknowledging privacy consent on local account. privacyAcknowledgement = %{public}@
%{public}@: Failed to acknowledge privacy consent. error = %{public}@
%{public}@: Successfully acknowledged privacy consent, but the response body is nil.
%{public}@: Successfully acknowledged privacy consent.
[%@] Restart Application returned error code: %d
[%@] Restart Application succeeded
%@: Send queue changed with %lu removals
%{public}@: Error unarchiving policy. Error = %{public}@
%{public}@: Failed to archive policy. Error = %{public}@
Unable to add playback-type query param
[%{public}@] Server response returned invalid dictionary object (class is %@)
[%{public}@] Server response returned invalid version object (class is %@)
[%{public}@] Server response returned invalid version %lli, current version: %lli
[%{public}@] Server response returned invalid root dictionary (class is %@)
[%{public}@] Unable to create CKC due to streaming request operation error: %@
[%{public}@] Unable to create persistent CKC due to error: %@
[%{public}@] Unable to create key server request because JSON serialization returned no data without an error.
[%{public}@] Unable to create key server request because JSON serialization returned an error: %@
[%{public}@] Unable to create key server request because creating the SPC failed with error: %@
[%{public}@] Certificate data operation returned no data.
[%{public}@] Certificate data operation failed with error: %@
[%{public}@] Key server returned a streaming key 'dictionary' of the wrong class (class is %@)
[%{public}@] Key server returned an invalid streaming key ID (class is %@)
[%{public}@] Found the streaming key dictionary for ID: %lli
[%{public}@] Streaming key response for ID %lli has a CKC response string that did not successfully decode into data.
[%{public}@] Streaming key response for ID %lli has an invalid CKC response class (class is %@)
[%{public}@] Streaming key response for ID %lli has an invalid status: %lli or failure type: %{public}@. Dialog dictionary is: %{public}@
DestinationURL was unspecified; falling back to directory for asset type %ld
Creating sandbox extension for %{public}@
%{public}@
%@: Taking process assertion
%@: Closing background task early
%@: Releasing process assertion
%@: Background task expired
SSUniqueExecutionQueue: self is out-of-scope.
SSUniqueExecutionQueue: The promise already finished. Calling the completion block directly.
[%@] Received items did change notification with revision ID: %llu, current revisionID: %llu
[%@] Defering refresh due to in-progress request count: %lli
[%{public}@]: Failed initializing from XPC
[%@] Failed to get bag value for key: %@. Error: %@
%{public}@: Using the value stored in AppleLanguageCodeSetup, %{public}@
%{public}@: There's no value stored in AppleLanguageCodeSetup.
%{public}@: Setting the active account's storefront after running %{public}@. activeAccount = %{public}@ | storefrontID = %{public}@
%@: URL bag was needed, but none was provided
%{public}@: Failed to archive download policy. Error = %{public}@
%{public}@: Failed to archive request properties. Error = %{public}@
%{public}@: Failed to unarchive download policy. Error = %{public}@
%{public}@: Failed to unarchive request properties. Error = %{public}@
%@: Refreshing download: %@ / %@
SSAccountStore: Setting a non-pet as the password equivalent token. account = %{public}@
SSAccountStore: Setting a password that may be a password equivalent token. account = %{public}@
%{public}@: Found backing identifier for secure token: %@
%{public}@: Adding new secure token to keychain
%{public}@: Updating existing secure token in keychain
%{public}@: Failed to locate backing identifier for secure token
%{public}@: Someone is changing the country code of an account's storefront outside of authentication. account = %{public}@ | oldStorefront = %{public}@ | newStorefront = %{public}@ | callStack = %{public}@
%{public}@: Someone is setting an account's storefront to nil. account = %{public}@ | callStack = %{public}@
%{public}@: Failed to reset transient data for an account. account = %{public}@ | error + %{public}@
%{public}@: Found secure token
%{public}@: Secure token lookup failed with error: %{public}@
%{public}@: Secure token lookup failed for nil identifier
%{public}@: Merging %{public}@ with %{public}@. creditsString changed.
%{public}@: Merging %{public}@ with %{public}@. uniqueIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. accountName changed.
%{public}@: Merging %{public}@ with %{public}@. altDSID changed.
%{public}@: Merging %{public}@ with %{public}@. iTunesPassSerialNumber changed.
%{public}@: Merging %{public}@ with %{public}@. secureToken changed.
%{public}@: Merging %{public}@ with %{public}@. storeFrontIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. firstName changed.
%{public}@: Merging %{public}@ with %{public}@. lastName changed.
%{public}@: Merging %{public}@ with %{public}@. isActiveLockerAccount changed.
%{public}@: Merging %{public}@ with %{public}@. accountKind changed.
%{public}@: Merging %{public}@ with %{public}@. accountScope changed.
%{public}@: Merging %{public}@ with %{public}@. accountSource changed.
%{public}@: Merging %{public}@ with %{public}@. didFallbackToPassword changed.
%{public}@: Merging %{public}@ with %{public}@. freeDownloadsPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. isManagedAppleID changed.
%{public}@: Merging %{public}@ with %{public}@. isNewCustomer changed.
%{public}@: Merging %{public}@ with %{public}@. paidPurchasesPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. availableServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. enabledServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. eligibilityForService changed.
%{public}@: You shouldn't call -[SSAuthenticateRequest init] directly. Use initWithAccount: or initWithAuthenticationContext: instead.
%{public}@: [%{public}@] An error occurred while authenticating %{public}@. error = %@
%{public}@: [%{public}@] Starting authentication request. context = %@ | context.accountName = %{public}@
%{public}@: Not entitled to talk to AuthKit. Sending request to itunesstored.
%{public}@: [%{public}@] Authenticating the demo account.
%{public}@: [%{public}@] Skiping authentication. %{public}@ doesn't need to be authenticated.
%{public}@: [%{public}@] The device doesn't have an active account. %{public}@ will become the active account.
%{public}@: [%{public}@] Failed to make the account the active account. error = %@
%{public}@: [%{public}@] Using the device's demo account. username = %{public}@
%{public}@: [%{public}@] Attempting to find an existing account using: altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
%{public}@: [%{public}@] Found an existing account. account = %{public}@
%{public}@: [%{public}@] There's no existing account matching the information we were given, but since we were given a username (%{public}@), we'll create one.
%{public}@: [%{public}@] An altDSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A DSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A password was provided.
%{public}@: [%{public}@] A PET was provided.
%{public}@: [%{public}@] There's no existing account matching the information we were given. The user will be prompted to enter their username and password.
%{public}@: [%{public}@] Failed to decode dialog from error. %{public}@
%{public}@: [%{public}@] Unknown dialog from error: %@
%{public}@: [%{public}@] Presenting dialog from error: %@
%{public}@: [%{public}@] Failed to present dialog: %@ error: %{public}@
%{public}@: XPC connection interrupted while attempting authentication request
%{public}@: An error occurred during authentication. error = %@
%{public}@: [%{public}@] Authentication request finished. response.authenticatedAccount.accountName = %{public}@ | response.authenticateResponseType = %ld | response.error = %@
%{public}@: [%{public}@] The user cancelled the authentication.
%{public}@: [%{public}@] The server rejected the credentials we passed it.
%{public}@: [%{public}@] This is a new account that needs to be reviewed.
%{public}@: [%{public}@] Authentication request failed. error = %@
%@: Someone is calling setInitialPassword:. This method is deprecated and will be passed to setPasswordEquivalentToken: which may not be what the caller intended.
%{public}@: Timed out while launching application %{public}@.
%{public}@: Could not launch %{public}@. %{public}@
%{public}@: No PID for app ID %{public}@.
%{public}@: Taking process assertion %{public}@ for %{public}.2f seconds with reason %{public}@.
%{public}@: Could not take process assertion %{public}@.
%{public}@: Releasing power assertion %@.
%@: Timed out while getting application info. identifier = %{public}@ key = %{public}@
[%@] initializing with empty config 
[%@] Blacklisted event [%@] 
%{public}@: Returning cached accounts.
%{public}@: There no cached accounts. We'll load the accounts now from the backing store synchronously.
%{public}@: Unit test mode is enabled. We won't go to the backing account store.
%{public}@: Failed to fetch the backing accounts. error = %{public}@
%{public}@: Caching the accounts.
%{public}@: Someone is attempting to get the active account. activeAccount = %{public}@
%{public}@: Someone is attempting to get the active locker account. activeLockerAccount = %{public}@
%{public}@: Resetting all properties on the local iTunes account.
%{public}@: Failed to reset all properties on the local iTunes account. error = %{public}@
%{public}@: Clearing the in-process account cache.
%{public}@: [%{public}@] %{public}@ has a broken DSID. Attempting to repair it.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding IDMS account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding iCloud account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding AppleAuthentication account.
%{public}@: [%{public}@] Failed to find a valid DSID. Unable to repair the account.
%{public}@: [%{public}@] Successfully repaired an account's broken DSID. account = %{public}@
%{public}@: [%{public}@] We found a valid DSID, but we failed to save the account with the new DSID. account = %{public}@ | error = %{public}@
%{public}@: There are no accounts that need migrating to Accounts.framework.
%{public}@: Disabling the in-process cache.
%{public}@: Migrating %ld account(s).
%{public}@: [%{public}@] Removing an account from the KVS without migrating it because %@.
%{public}@: [%{public}@] Beginning migration of %{public}@. currentAccounts = %@
%{public}@: [%{public}@] Successfully migrated the account. Removing it from the KVS.
%{public}@: [%{public}@] Failed to migrate the account. We won't remove it from the KVS. error = %@
%{public}@: Ensuring that we have only a single active account after migration.
%{public}@: Migration is complete. Clearing the in-process cache and re-enabling it.
%{public}@: Posting a com.apple.itunesstored.accountschanged (and its internal varient) notification now that migration is complete.
%{public}@: We didn't migrate any accounts, so we aren't posting a com.apple.itunesstored.accountschanged (and its internal varient) notification.
%{public}@: After migration, there are no accounts remaining in the KVS.
%{public}@: After migration, the KVS contains the following accounts: %@
%{public}@: Timed out while trying to remove %{public}@.
%{public}@: Someone is attempting to remove a nil acount.
%{public}@: Removing %{public}@.
%{public}@: Failed to remove %{public}@. error = %@
%{public}@: Timed out while removing account %{public}@.
%{public}@: Timed out while removing accounts %@.
%{public}@: [%{public}@] Removing all cookies for %{public}@.
%{public}@: [%{public}@] Signing out of %{public}@.
%{public}@: [%{public}@] Successfully signed out of %{public}@. We'll now remove its cookies.
%{public}@: [%{public}@] Unable to sign out of %{public}@. error = %@
%{public}@: [%{public}@] We were told to skip the call to AuthKit.
%{public}@: [%{public}@] The user cancelled the create account dialog.
%{public}@: [%{public}@] The user opted to create a new account. This authentication will fail and we'll start the create account flow.
%{public}@: [%{public}@] The device doesn't have an active account for the scope. %{public}@ will become the active account.
%{public}@: The in-process accounts cache is disabled.
%{public}@: Making a copy of the KVS database for later debugging.
%{public}@: A copy of the KVS already exists. Removing it so we can create a new one.
%{public}@: Failed to remove the existing KVS database. error = %@
%{public}@: Failed to copy the KVS database. error = %@
%{public}@: Failed to exclude the KVS database copy from backups. error = %@
%{public}@: Posting a com.apple.itunesstored.accountschanged.internal notification.
%{public}@: Posting a com.apple.itunesstored.accountschanged notification.
%{public}@: Attempting to post a %{public}@, but our notificationQueue is NULL. Something went wrong.
%{public}@: The value of SSActiveAccountIsManagedAppleID changed.
%{public}@: Posting a %{public}@ notification.
%{public}@: Attempted to post a %{public}@, but our notificationQueue is NULL. Something went wrong.
%{public}@: Attempted to post metrics event, but our metricsQueue is NULL. Something went wrong
%{public}@: [%{public}@] Someone is attempting to save a nil acount.
%{public}@: [%{public}@] Refusing to save %{public}@. None of its properties have changed.
%{public}@: [%{public}@] Refusing to save %{public}@. It's backing account is nil.
%{public}@: [%{public}@] Attempting to save %{public}@. verifyCredentials = %{public}@
%{public}@: [%{public}@] Clearing the in-process cache in preparation of saving the account.
%{public}@: [%{public}@] Successfully saved the account.
%{public}@: [%{public}@] Failed to save the account. error = %@
%{public}@: An account is set to active when it shouldn't be. Deactivating it. account = %{public}@ | activeDSID = %{public}@
%{public}@: An account is set as the active locker account when it shouldn't be. Deactivating it. account = %{public}@ | activeLockerDSID = %{public}@
%{public}@: Failed to save %{public}@ after modifying its active or activeLocker property. error = %@
%{public}@: [%{public}@] Attempting to find an existing account. attempt = %ld
%{public}@: [%{public}@] Found a preexisting account with a broken altDSID or DSID that we can use.
%{public}@: [%{public}@] Refusing to migrate an account because there's already an account with the same username but different altDSID or DSID.
%{public}@: [%{public}@] There's no preexisting account. We'll create a new one.
%{public}@: [%{public}@] Found a pre-existing iTunes token. Setting the new account as authenticated.
%{public}@: [%{public}@] There's no pre-existing iTunes token. The new account will be unauthenticated.
%{public}@: [%{public}@] There's a preexisting account, %{public}@. We'll merge the given properties into it.
%{public}@: [%{public}@] Making the account the active account. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account inactive. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account the active locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] Making the account an inactive locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] It appears that someone created the account while we were attempting to migrate it. We'll perform the migration again.
SSAccountStore: [%{public}@] The raw password might actually be a PET.
SSAccountStore: [%{public}@] Successfully converted a raw password into a PET.
SSAccountStore: [%{public}@] Failed to convert a raw password into a PET. error = %{public}@
SSAccountStore: [%{public}@] We were told to update a nil account. We'll try to find an existing account matching the info we got from AuthKit. altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
SSAccountStore: [%{public}@] Found an account existing account matching the AuthKit information.
SSAccountStore: [%{public}@] Failed to find an account existing account. We'll create a new account.
SSAccountStore: [%{public}@] The newly created account will be set to active.
SSAccountStore: [%{public}@] The newly created account will be set to inactive.
SSAccountStore: [%{public}@] AuthKit gave us an updated altDSID. oldAltDSID = %{public}@ | newAltDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated DSID. oldDSID = %{public}@ | newDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated username. oldUsername = %{public}@ | newUsername = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us updated identifiers. We'll attempt to find an existing account that matches the new identifiers.
SSAccountStore: [%{public}@] The new identifiers point to the same account we're already working with.
SSAccountStore: [%{public}@] The new identifiers are for a different existing account, %{public}@.
SSAccountStore: [%{public}@] We didn't find an existing account using the new identifiers.
SSAccountStore: [%{public}@] Failed to encode AKDevice. Proxied authentication will fail.
%{public}@: [%{public}@] We aren't prompting to create a new account because the account isn't empty.
%{public}@: [%{public}@] We aren't prompting to create a new account because we're authenticating for a sandbox account.
%{public}@: [%{public}@] We aren't prompting to create a new account because we either shouldn't be prompting or SSAccountStoreAuthKitCanCreateNewAccountKey isn't set to YES.
%{public}@: [%{public}@] We aren't prompting to create a new account because Buddy is still running.
%{public}@: [%{public}@] Prompting the user to see if they want to create a new account.
%{public}@: [%{public}@] Allowing silent authentication because the account is marked as a demo account.
SSAccountStore: [%{public}@] Buddy is still running. We can't prompt the user to enter their password. Prompt auth won't run.
SSAccountStore: [%{public}@] We were told not to prompt the user.
SSAccountStore: [%{public}@] Refusing to prompt the user. Account creation isn't allowed and this would create a new account.
SSAccountStore: [%{public}@] Prompting the user for their password.
SSAccountStore: [%{public}@] Failed to update the account by prompting the user for their password. The authentication will fail. error = %@
SSAccountStore: [%{public}@] Unable to perform silent authentication if we don't have an account.
SSAccountStore: [%{public}@] Attempting to update the account silently while we're running Buddy.
SSAccountStore: [%{public}@] We aren't allowed to attempt silent authentication.
SSAccountStore: [%{public}@] Attempting to update the account silently.
SSAccountStore: [%{public}@] Successfully updated the account silently.
SSAccountStore: [%{public}@] Failed to silently update the account. error = %@
SSAccountStore: [%{public}@] Unable to perform silent password authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent password authentication.
SSAccountStore: [%{public}@] We don't have a raw password to convert into a PET.
SSAccountStore: [%{public}@] We were given a raw password. We'll attempt to convert it into a PET.
SSAccountStore: [%{public}@] Unable to perform silent PET authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent PET authentication.
SSAccountStore: [%{public}@] The account already has a PET we can use.
SSAccountStore: [%{public}@] We weren't given a PET, and we were told not to check alternate accounts for one.
SSAccountStore: [%{public}@] We weren't given a PET. We'll check alternate accounts for one.
SSAccountStore: [%{public}@] Found a PET on an alternate account we can use.
SSAccountStore: [%{public}@] Unable to get a PET from an alternate account.
SSAccountStore: [%{public}@] The PET appears to be misformed and could be a raw password.
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveAccount:] is deprecated. The caller should get the active account, set its active property to NO, and save it.
%{public}@: Failed to deactivate the active account, %{public}@. error = %@
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveLockerAccount:] is deprecated. The caller should get the active locker account, set its activeLocker property to NO, and save it.
%{public}@: Failed to deactivate the active locker account, %{public}@. error = %@
SSAccountStore: Received a com.apple.itunesstored.accountschanged notification.
SSAccountStore: Received a com.apple.itunesstored.accountschanged.internal notification.
SSAccountStore: Received a com.apple.StoreServices.SSAccountStore.activeaccountchanged notification.
[SSRestrictions]: Invalid trust status: %ld, or result: %d
[SSRestrictions]: Ignoring failed extended validation validation
[%@] Dropping event which has no body values after blacklist filtering. [%@]
[%@] Dropping event of a type which is blacklisted. [%@]
[%@] Insert Metrics Events returned error code: %d
[%@] Insert Metrics Events succeeded
[%@] Attempting to insert events with no URL. Dropping [%d] events.
[%@] Flush timer fired
[%@] Flush Unreported Events timer fired -- %@
[%@] Flush Unreported Events timer fired & reported success
[%@] Flush Unreported Events timer fired but was subsequently disabled
[%@] Setting Flush Unreported Events timer: %0.2f
[%@] Flushing events
[%@] Report Metrics Events returned error code: %d
[%@] Report Metrics Events succeeded
[%@] User has opted not to send Apple diagnostic information. Dropped %li events that require it.
[%@] Events dropped by Event Controller with no report URL: [%lu events]
[%@] Events dropped by disabled Event Controller: [%lu events]
[%@] Insert Events called with an empty array.
%@: Connection interrupted
%@: Invalid response
%@: Record analytics events did succeed: %@
%{public}@: Error checking if URL trusted: %{public}@
[%@] -- Error setting up database
[TransactionStore] Started transaction: %{public}@
[TransactionStore] Joined transaction: %{public}@
[TransactionStore] Ended transaction: %{public}@
[TransactionStore] Left transaction: %{public}@
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim2
[%{public}@]: Could not create a BLDownloadQueue sharedInstance
[%{public}@]: Could not retrieve the BLDownloadQueue class
[%{public}@]: downloadStatesDidChange: %@
[%{public}@]: downloadStatesDidChange: -- created SSBookDownloads: %@
[%{public}@]: __book_sendDownloadsChanged: %@
%@: Invalid condition: %@
%{public}@: Failed to fetch needsDisplay for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save the lastAttemptDate for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save the lastAttemptDate for a server prompt. account = %{public}@ | promptIdentifier = %{public}@ | error = %{public}@
%{public}@: Failed to save needsDisplay for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save needsDisplay for a server prompt. account = %{public}@ | promptIdentifier = %{public}@ | error = %{public}@
%@: Enable all automatic download kinds
%@: Disable automatic download kinds: %@
%@: Set automatic download kinds: %@
SSDevice: Failed to update the device's storefront ID. We couldn't get the local account. error = %@
SSDevice: Successfully set the device's storefront to %{public}@
SSDevice: Failed to update the device's storefront ID. error = %@
%@: Enable automatic download kinds: %@
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@. %{public}@
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@.
%{public}@: [%{public}@] Failed to set a storefront ID on an account.
%{public}@: Failed to unarchive response. Error = %{public}@
%{public}@: Failed to archive response. Error = %{public}@
%{public}s: Failed to archive xpc object. Error = %{public}@
%{public}s: Failed to unarchive xpc object. Error = %{public}@
SSDownloadManager: Reconnect global handler: %@
%{public}@: Failed to retrieve telephony mobile subscriber country code with error: %{public}@.
%{public}@: Failed to retrieve telephony mobile subscriber network code with error: %{public}@.
%{public}@: Failed to retrieve telephony mobile equipment info with error: %{public}@.
%{public}@: Telephony request to send SMS to %@ failed. Telephony context: %{public}@.
%{public}@: Telephony active subscriptions did change.
%{public}@: Failed to instantiate CoreTelephonyClient.
%{public}@: Process %{public}@ is missing required telephony entitlement. Skipping instantiation of CoreTelephonyClient.
%{public}@: Current device does not have telephony capability. Skipping telephony client initialization.
%{public}@: Failed to get telephony user default voice subscription context with error: %{public}@.
%{public}@: Found telephony subscription context %{public}@ at slot %ld as the user default voice one.
%{public}@: Could not find a valid telephony subscription context. Available telephony subscription contexts: %{public}@.
%{public}@: Failed to retrieve telephony phone number with error: %{public}@.
%{public}@: Failed to retrieve telephony operator name with error: %{public}@.
%{public}@: Failed to retrieve telephony registration status with error: %{public}@.
%@: Connecting download handler: %lld
%@: Received message: (%lld, %lld)
%{public}@: No store front identifier found, this could lead to problems
%{public}@: Failed to unarchive auth challenge. Error = %{public}@
%{public}@: Failed to archive credential. Error = %{public}@
%{public}@: Refusing to dismiss a pending follow-up. The follow-up was not for the specified account. identifier = %{public}@ | account.identifier = %{public}@ | followUp.accountIdentifier = %{public}@
%{public}@: Failed to create a FLFollowUpItem for %{public}@
%{public}@: Nil altDSID in userInfo for renew credentials FLFollowUpItem. The user will be asked to sign into their active iTunes account or any iTunes account if no active iTunes account exists.
SSFollowUpController: Successfully posted the FLFollowUpItem. identifier = %{public}@
SSFollowUpController: Failed to post the FLFollowUpItem. identifier = %{public}@ | error = %{public}@
%{public}@: Received connection from: %{public}@ message: [%@ %@]
Failed to create directory, %@, for a log file. %@
Attempted to access a database that is now owned by root. It's been abandoned and replaced by %@.
%{public}@: SSVCookieStorage is being initalized with a backup URL. Setting performingMigration to YES.
%@: Could not create cookie storage path
%{public}@: Cannot remove cookies for a nil DSID.
%@: Feature Enabler removing ITFE cookie
%@: Feature Enabler updating ITFE cookie to value : %@
%{public}@: Someone is migrating the cookies. We found %lu cookie(s) in the database for %{public}@.
%{public}@: Failed to migrate database. Nuking the cookie storage
%{public}@: Successfully recovered the cookie storage
Cookie Storage Errored out at version %@
%{public}@: Failed to archive location. Error = %{public}@
%{public}@: Failed to unarchive location. Error = %{public}@
SSPaymentSheet: Rendering Retina image for tag: %{public}@, scale: %{public}@
SSPaymentSheet: Rendering non-Retina image for tag: %{public}@
%{public}@: Attempting to create AuthKit context with nil username
%{public}@: Failed to create AuthKit context for payment
%@: Failed to lookup username, substituting empty string
%{public}@: Configured payment sheet with title: %{public}@, titleType: %{public}@
%@: Requestor key not found, attempting to infer requestor from title enumeration.
%@: No requestor identified for title: %@
%@: No requestor identified, title type is not enumeration
%{public}@: [%{public}@] Starting redeem operation for codes: %@
%{public}@: [%{public}@] Redeem failed with error = %{public}@
%{public}@: [%{public}@] Redeem finished with a response.
%@: Schedule refresh in %.0f seconds
%@: Removing account with duplicate AppleID: %@ / %@
%@: Initializing database
%@: Initializing readonly database
%@: %@ resulted in a cache miss.
%@: Cache is full. The oldest object will be evicted.
[%@] Invalid receipt [%ld bytes] -- [%@]
[%@] Could not create decoder
[%@] Could not read data
[%@] Could not parse data
[%@] No content
[%@] Failed to load data
[%@] Failed to parse data
[%@] Parsing receipt
[%@] Receipt type: %@
[%@] AdamID: %@
[%@] BundleID: %@
[%@] Application version: %@
[%@] DSID: %@
[%@] SHA1: %lu
[%@] Transaction date: %@
[%@] FR tool version: %@
[%@] Parental controls: %@
[%@] DeveloperID: %@
[%@] Receipt created: %@
[%@] FR app version: %@
[%@] HW type: %@
[%@] DownloadID: %@
[%@] Installer versionID: %@
[%@] Receipt expires: %@
[%@] Receipt renewal: %@
[%@] Organization display name: %@
[%@] Cancellation reason: %@
[%@] Could not read certificates
[%@] Unexpected number of certificates
[%@] Intermediate certificate is missing
[%@] Could not create trust
[%@] Failed to update policies
[%@] Failed to anchor Apple root certificate
[%@] Could not set verification date
[%{public}@] Feature Enabler migrating from version: %{public}@ to version: %{public}@
[%{public}@] Feature Enabler removing enabled features
[%{public}@]: Enabling AMF by default for iOS 11
%@ doesn't exist. There are no HAR files to cleanup.
Removing %@ to cleanup HAR log files.
Failed to remove %@. %@
Failed to create directory, %@, for HTTP archive files. %@
Failed to write HTTP archive file. %@
Wrote HTTP archive file to: %@
%@: Not setting anything following bag load
%@: Metrics values are: %@
[%{public}@]: percentComplete: %f
%{public}@ is an unsupported deprecated method for book downloads
%{public}@ is an unsupported method for book downloads
%@: initWithDatabaseURL:%{public}@ readOnly:%d protectionType:%@
%@: Failed to close database: [0, %d, %s]
%@: Spin for SQL lock: %ld, spin count: [%ld, %s, %@]
%@: Could not execute SQL: %@: [%ld, %s, %@]
%@: Step failed: %s: [%d, %s]
%@: Releasing process assertion, background task expired
%@: Could not create directory to place new database: %@
SSSQLiteDatabase: Calling setupBlock
%@: Not authorized to open database: [%d, %@]
%@: Could not open read-only db: [%d, %@]
%@: Could not open database, resetting: [%d, %@]
%@: Resetting after error: [%d, %@]
%@: Failed to close database: [1, %d, %s]
%@: Re-open database: %@
%@: Failed to close database: [2, %d, %s]
%@: Could not prepare statement: %@: [%d, %s, %@]
%@: Unrecognized client key: %@
%{public}@: Someone is finishing a promise with both a result and an error. This will result in both the success and error blocks being called. result = %{public}@ error = %{public}@
%{public}@: Someone is finishing a promise with neither a result nor an error. This will result in neither the success nor the error blocks being called.
%{public}@: Someone is attempting to finish or cancel a finished SSPromise.
[%@] An error occurred writing the response. Written=%ld Error=%@
[%@] Successfully sent the response. %{public}@
[%@] Error %{public}@ completing %lu play activity events with session token:%llu flushResult:%lu
[%@] Completed %lu play activity events with session token:%llu flushResult:%lu with error %{public}@
[%@] Error %{public}@ flushing play activity events for %{public}@
[%@] Finished flushing play activity events for %{public}@ with error %{public}@
[%@] Recording play activity events: %@
[%@] Error %{public}@ recording %lu play activity events
[%@] Finished recording %lu play activity events with error %{public}@
[SSVPlayActivityController] Removing play events up to revision: %llu
[%@] Error %{public}@ removing play activity events upto revision %llu
[%@] Finished removing play activity events upto revision %llu with error %{public}@
[%@] Error %{public}@ setting revision %llu, version token %{public}@ for end point identifier %{public}@
[%@] Finished setting revision %llu, version token %{public}@ for end point identifier %{public}@ with error %{public}@
[%@] Error %{public}@ getting play activity events for end point identifier %{public}@
[%@] Finished getting %lu play activity events for end point identifier %{public}@
[SSVPlayActivityController] Completing pending play events for revision index set: %@ session token: %llu with result: %lu
[SSVPlayActivityController] Session information: %@
[SSVPlayActivityController] Removing pending revisions index set %@ from sessionInformation revisions index set: %@
[SSVPlayActivityController] Resulting index set: %@
[SSVPlayActivityController] Existing additional pending revisions index set: %@
[SSVPlayActivityController] New additional pending revisions index set from flush success: %@
[SSVPlayActivityController] New additional pending revisions index set from flush failure: %@
[SSVPlayActivityController] Revisions version token has changed, clearing out.
[SSVPlayActivityController] Connection to daemon play activity controller interrupted.
[SSVPlayActivityController] Connection to daemon play activity controller invalidated.
%{public}@: Failed to unarchive revision information. Error = %{public}@
%{public}@: Failed to archive revision information. Error = %{public}@
[%{public}@]: [%{public}@] Initiating authentication request
[%{public}@]: [%{public}@] Authentication request completed with error: %{public}@
[%{public}@]: Received authentication request but context was missing or invalid
GetMACAddress returned 0x%08x
FindEthernetInterfaces returned 0x%08x
[%s] -- Input buffer too small [%d < %d]
IOServiceMatching kIONetworkControllerClass: %@
CFDictionaryCreateMutable returned a NULL dictionary.
IOServiceMatching returned a NULL dictionary for kIONetworkControllerClass.
IOServiceGetMatchingServices returned 0x%08x
IOServiceGetMatchingServices iterator %u
IORegistryEntryCreateCFProperty produced bytes
IORegistryEntryCreateCFProperty failed
IORegistryEntryGetParentEntry returned 0x%08x
%@: Created a nil NSURLSessionTask for %@.
Network Timing Metrics: %@
%{public}@: Overwritting metric event property: %{public}@ with value: %@
Flushing HTTP Archive (HAR) buffer. Count : %ld
[%@] [%@] [%@] [%@]
%@: Creating a new NSURLSession with identifier %@.
[%@]: Metrics network inquiry error occurred. Error: %@
[%@]: Received low memory warning. Reducing HAR buffer size by: %lu
[%@]: No longer in low memory state. Increasing HAR buffer size
Writing %ld HTTP Archive file(s) to disk.
%{public}@: APSR attempted: %{public}@ succeeded: %{public}@ for request: %@
%{public}@: Enabling reverse push using APS
%@: Failed to fetch bag value for key: %@. Error: %@
%{public}@: A nil value was loaded from the bag for key %{public}@. Using new bag: %{public}@
%{public}@: Failed to unarchive dictionary. Error = %{public}@
%{public}@: Failed to archive status dictionary. Error = %{public}@
[%@] Posting SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
%{public}@: Calling for capabilities. Allows privacy acknowledgement prompt: %{BOOL}d. callStack = %{public}@
[%@] Unsuccessful database migration function from %ld => %ld [Failure Count: %d]
[%@] Failed to migrate the DB %d times. [%ld vs %ld] Giving up, but nothing will work from this point forward. exit(1) crosses my mind, but probably not the right thing to do.
[%@] Although database migration function failed from %d => %d -- The schema did change. Perhaps another process is updating the database: [Currently at: %d]
[%@] -- Error creating directory: %@ -- %@
[%@] -- Error creating PersistentCache: %@
[%@] -- Error setting up database: %@
[%@] -- Error setting up database.
[%@] [Updated: %d] [External: %d] [LookupKey: %@]
[%@] Failed to update SSDatabaseCacheEntry: %@
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim
[%{public}@]: _copyDownloadsForMessage: %@
[%{public}@]: _sendDownloadsChanged: %@
%{public}@: [%{public}@] Someone is attempting to send a completion from a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to send a failure from a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to send a result from a completed SSObservable.
%{public}@: [%{public}@] There's at least one observer. Sending the result along with any queued results.
%{public}@: [%{public}@] The are no observers. Queuing the result.
%{public}@: [%{public}@] Someone is attempting to add an observer to a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to add an observer to a SSObservable it's already observing.
%{public}@: [%{public}@] There are pending results. Sending them now that we have an observer.
[%@] write bytes (%d) to path: %@
Error clearing cache entry: %@
[%@] -- Failed to read: %@
**** No identifier passed to initialization routine [%@]
**** No SSCacheObjectFactory for typeIdentifier [%@]
**** Clearing SSCacheObjectStore [%@]
[%@] No data representation when adding object to cache with item identifier %@
[%@] No item identifier
[%@] No type identifier for item identifier %@
[%@] No data representation for item identifier %@
[%@] Configuration field-blacklisting trimmed %d fields from event [%@]
[%@] Error creating PLIST: %@ -- Input: %@
[%@] No Dictionary Representation for: %@
%@: SAP signature failed with bad session, attempting to sign again
%@: SAP signature failed with error: %@
%@: SAP signature verification failed with bad session, attempting to verify signature again
%@: SAP signature verification failed with error: %@
%{public}@: Failed to complete mescal context setup. Error = %@
%{public}@: Failed to load certificate data.
%{public}@: Unable to find mescal setup url in the bag
%@: Failed to obtain SAP context for signing
%@: Verify prime failed: %@
%@: Verify prime finished: %@
%@: Failed to obtain SAP context for signature verification
%{public}@: Free page count (%ld) exceeded maximum. Vacuuming the database. auto_vacuum = %ld
Metrics User database current version: %@
Metrics Errored out at version %@
Metrics User database migrated to version %@
[%@] Blacklisted fields produced an event with zero properties: %@
[%@] Blacklisted event excluded from insert: %@
[%@] Deleting out-of-date events returned: %d [%d rows affected]
[%@] Deleting reported events returned: %d [%d rows affected]
[%@] Direct-access controller is calling through XPC to flush Unreported Events
[%@] Statement Didn't finish after stepping -- %@ -- %@
[%@] Dropping Event Summary which has no value for "%@" -- %@
[%@] Empty input array wastes CPU/Power, but is not fatal
[%@] === Already Reported Event: %llu -- [Timestamp Reported: %@]
[%@] Error creating JSON: %@ -- Input: %@
[%@] Marking %d events are reported
[%@] Unable to serialize event to JSON.
Dropping invalid event for report: %@
[%{public}@] No applicable metric events to report.
[%{public}@] Invalid JSON. Object: %{private}@
[%{public}@] OutputStream did not accept all bytes: %{public}d vs %{public}lu
[%{public}@] Wrote a total of %{public}d bytes to output stream
[%{public}@] Invalid JSON object: %@ with type: %{public}@
[%@] Unreported Event Count: %d
[%{public}@] -- error initializing z_stream [%{public}d] [Errno: %{public}d]
%{public}@: Error occurred during initialization
[%{public}@] Closed Stream [total_in: %{public}d] [total_out: %{public}d] -- %{public}d
[%{public}@] -- write called on stream with error: %{public}@
[%{public}@] -- error deflating stream [%{public}d] [Errno: %{public}d] [Context: %{public}@]
%@: Asking daemon for subscription entitlements.
%@: Could not load URL bag: %@
%@: Finished loading download queue (%@, %@, %@)
[%@]: Loading download queue (%@, %@, %@) with reason: %ld
[%@]: Download queue response (key = %@ startID = %@ endID = %@)
[%@]: storeCorrelationID: %{public}@
%{public}@: Unknown match state: %{public}@
%{public}@: Failed to identify biometric style for metrics event `deviceBiometricStyle` unknown
%{public}@: Failed to identity biometric style for metrics event `deviceBiometricStyle` not available
%{public}@: Failed to instrument metrics dialog with match: %{public}@
%{public}@: Lookup clientID for userID: %@
%{public}@: Found clientID: %{public}@, userID: %@
%{public}@: Lookup clientID failed with no userID
%{public}@ is an unsupported method for software downloads
%{public}@ is an unsupported deprecated method for software downloads
[%@] Statement Didn't finish after stepping -- %@
[%@] Statement didn't finish after stepping -- %@
softlink:r:path:/System/Library/PrivateFrameworks/AppleMediaServicesUI.framework/AppleMediaServicesUI
softlink:r:path:/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit
softlink:r:path:/System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
softlink:r:path:/System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp
softlink:r:path:/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
u2A2
SSKeychain
SSHTTPServer
SSHTTPServerRequestHandlerDelegate
SSHTTPServerResponse
SSMetricsDialogEvent
SSXPCCoding
NSObject
SSPrivacyController
SSApplicationUtil
SSVPlaybackAsset
SSMetricsCustomEvent
SSVFamilyContentDeletionEvent
SSVFamilyAccountPair
SSDownloadQueue
SSDownloadManagerObserverPrivate
SSDownloadManagerObserver
SSVMediaSocialPostDescription
NSCopying
SSDownload
SSVContentLink
SSDownloadMetadata
NSSecureCoding
NSCoding
SSVCloudServiceCapabilitiesResponse
SSVSubscriptionStatusCoordinator
SSVDownloadQueueRequest
SSVSecureKeyDeliveryRequestOperation
SSVMediaContentTasteItemUpdate
SSAdditions
SSDownloadStatus
SSDownloadPhase
SSVRefreshSubscriptionRequest
SSDownloadAsset
SSExtensions
SSOperationProgress
SSLogFileOptions
SSVPlaybackResponse
SSDownloadManifestRequest
SSVURLCache
SSVURLCacheConfiguration
SSVURLCacheAdditions
SSDownloadManifestResponse
SSRequest
SSUniqueExecutionQueue
SSVSubscriptionEntitlementsSubscription
SSVMediaContentTasteController
SSVURLDataConsumer
SSVPBPlayActivityEnqueuerProperties
SSInstallAttributionParamsRequest
SSPurchaseRequest
SSPurchaseManagerDelegate
SSVURLBagInterpreter
SSVLoadURLOperation
SSURLSessionManagerDelegate
SSObserver
SSPurchase
SSTonePurchase
SSDecoding
SSRingtonePurchase
SSVRefreshStoreQueueDownloadOperation
SSURLConnectionRequest
SSURLAdditions
SSItemLookupRequest
SSVAppleAccountStore
SSItem
SSURLConnectionRequestDelegate
SSRequestDelegate
SSItemMedia
SSAppWakeRequest
SSRentalCheckoutRequest
SSAccount
SSRemoteWebViewRequest
SSVLeaseCertificateRequestOperation
SSVURLConnectionConsumer
SSAuthenticateRequest
SSVRepairApplicationRequest
SSAuthenticationContext
NSMutableCopying
SSMutableAuthenticationContext
SSPaymentSheetRatingImage
SSSpringBoardUtility
SSMetricsConfiguration
SSPromiseResult
SSVMediaSocialPostItem
SSVMediaContentTasteUpdateResponse
SSAccountStore
AKAppleIDAuthenticationDelegate
SSAuthenticateResponse
SSRestrictions
SSSoftwareUpdatesContext
SSMutableSoftwareUpdatesContext
SSSoftwareUpdatesRequest
SSSoftwareUpdatesResponse
SSMetricsController
SSBag
SSEventsTableBase
SSVCloudServiceAPITokenResponse
SSLazyPromise
SSBagProfileConfig
SSMutableBagProfileConfig
SSBinaryPromise
SSTransactionStore
SSItemOffer
SSVPushNotificationRequest
SSItemOfferDevice
SSItemOfferDeviceError
SSDownloadManagerBookShim2
SSNetworkConstraints
SSProtocolCondition
SSApplicationVersionCondition
SSCapabilityCondition
SSDocumentCondition
SSHasAccountCondition
SSItemAvailableCondition
SSPlatformCondition
SSRestrictionCondition
SSSystemVersionCondition
SSProtocolConditionalEvaluator
SSProtocolConditionalContext
SSDevice
SSLockdown
SSVCloudServiceAPITokenRequest
SSDownloadPolicyUserDefaultState
SSVLoadNearbyAppsOperation
SSVGratisApplication
SSURLRequestProperties
SSMutableURLRequestProperties
SSVSubscriptionResponse
SSDivertedDownload
SSURLConnectionResponse
SSPlayInfoRequest
SSPlayInfoRequestContext
SSPlayInfoResponse
SSVPlaybackLeaseItem
SSMigrator
SSNetworkQualityInquiry
SSDialog
SSDialogButton
SSPurchaseReceipt
SSAuthorizationRequest
SSItemArtworkImage
SSVSAPSignaturePolicy
SSVSAPSignatureComponent
SSItemImageCollection
SSSilentEnrollmentPaymentSession
SSRemoteNotificationClient
SSRemoteNotification
SSURLDataCollection
SSAppPurchaseHistoryAccount
SSURLBagContext
SSAskPermissionActionRequest
SSItemContentRating
SSUpdateAccountResponse
SSVPlayActivityFeedSerialization
SSRentalCheckinRequest
SSBiometricAuthenticationContext
SSVPlaybackItem
SSXPCConnection
SSDownloadManager
SSDownloadManagerOptions
SSSilentEnrollmentContext
SSSilentEnrollment
SSVTelephonyController
CoreTelephonyClientSuppServicesDelegate
CoreTelephonyClientDelegate
CoreTelephonyClientRegistrationDelegate
SSConsolidatedDialog
SSEntity
SSDownloadHandler
SSScriptURLHandler
SSVInstallManagedApplicationRequest
SSDictionaryResponse
SSResponseAction
SSVURLLookupResponseConsumer
SSVPlaybackLeaseRequest
SSAuthenticationResponse
SSURLBag
SSDownloadSession
SSDownloadHandlerSession
SSDownloadAuthenticationSession
SSDownloadAuthenticationChallengeSender
NSURLAuthenticationChallengeSender
SSFollowUpController
SSPersonalizeOffersRequest
SSPersonalizeOffersResponse
SSPreorder
SSPreorderManager
SSRestoreContentItem
SSPurchaseHistoryItem
SSXPCServer
SSXPCServerObserver
SSDistributedNotificationCenter
SSDistributedNotificationCenterObserver
SSRollableLog
SSVFairPlaySAPContext
SSRentalInformationRequest
SSVOperation
SSVDisableSubscriptionRequest
SSDownloadFileManifest
SSVMediaContentTasteUpdateRequest
SSEventMonitor
SSVMediaContentTasteItem
SSVMutableMediaContentTasteItem
SSVCookieKey
SSVCookieStorage
SSWeakReference
SSVComplexOperation
SSLookupProperties
SSLookupRequest
SSLookupResponse
SSLogConfig
SSMutableLogConfig
SSDownloadPolicyApplicationState
SSFamilyCircle
SSFamilyMember
SSDownloadPolicyRule
SSDownloadPolicy
SSPaymentSheet
SSKeybagRequest
SSSoftwareLibraryItem
SSSoftwareLibrary
SSAMSPurchase
SSRedeemCodesRequest
SSVMediaSocialShareExtension
SSVPlaybackLeaseCallback
SSVPlaybackLease
asn1Token
asn1SetToken
asn1SequenceToken
asn1IntegerToken
asn1OSToken
SSRedeemCodesResponse
SSKeyValueStore
SSLRUCache
SSLRUCacheItem
SSVPlayActivityDebugLogOperation
SSCircularBuffer
SSErrorHandler
SSVKeybagSyncRequest
ISPurchaseReceipt
SSFeatureEnablerMigrator
SSHTTPArchive
SSErrorHandlerSession
SSVLeaseRequestOperation
SSKeyValueStoreDatabase
SSKeyValueStoreSchema
SSKeyValueStoreSession
SSMetricsTimingDefaults
SSVMediaSocialPostExternalDestination
SSKeyValueStoreTransaction
HexUtil
SSBookDownload
SSVSubscriptionStatusRequest
SSKeyValueStoreValueEntity
SSUnitTests
SSSQLiteDatabase
SSVPlayActivityEvent
SSVMutablePlayActivityEvent
SSSQLiteEntity
SSSQLitePredicate
SSSQLitePropertyPredicate
SSSQLiteComparisonPredicate
SSSQLiteContainsPredicate
SSSQLiteNullPredicate
SSSQLiteCompoundPredicate
SSSQLiteQuery
SSSQLiteQueryDescriptor
SSSQLiteQueryAdditions
SSPromise
SSVEnableSubscriptionRequest
SSMemoryEntity
SSPurchaseResponse
SSVServerAuthenticateRequest
SSVServerAuthenticateResponse
SSHTTPServerRequestHandler
NSStreamDelegate
SSVURLJSONDataConsumer
ICProcessPlayActivityEventsRequestListener
SSVPlayActivityController
_SSVPlayActivityEndpointRevisionInformation
_SSVPlayActivityFlushSessionInformation
SSInstallAttributionPingbackRequest
SSPurchaseManager
SSMachineDataRequest
SSPrivacyMetricsEvent
SSMetricsEventLocation
SSVSubscriptionEntitlements
SSTermsAndConditions
SSVMediaSocialPostAttachment
SSLookupItem
SSVSubscriptionStatus
SSPaymentSheetPriceSectionItem
SSLookupItemArtwork
SSURLSessionManager
NSCacheDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
SSVFairPlaySubscriptionStatus
SSMetricsLoadURLEvent
SSLookupItemOffer
SSVMediaSocialAdminPermissionsCoordinator
SSVPBPlayActivityEvent
SSVBarrierOperationQueue
SSSoftwareUpdatesStore
SSVPlaybackLeaseConfiguration
SSFamilyCircleRequest
SSFamilyCircleResponse
SSVPushNotificationParameters
SSRentalSyncRequest
SSVPlayActivityEnqueuerProperties
SSVMutablePlayActivityEnqueuerProperties
SSVDirectUploadQueue
SSSoftwareUpdate
SSXPCData
SSVPlayActivityEventContainerIDs
SSVMutablePlayActivityEventContainerIDs
SSVFairPlaySubscriptionController
SSAppPurchaseHistoryDatabase
SSVCloudServiceCapabilitiesRequest
SSVAccountLessPlaybackOperation
SSAppPurchaseHistoryDatabaseSchema
SSVMediaSocialAdminStatusOperation
SSVPlatformContext
SSAppPurchaseHistoryEntry
SSAppPurchaseHistoryTransaction
SSPurchasableItem
SSVRedeemCodeMetadata
SSVRedeemCodeItem
SSPurchasableAppItem
SSDatabaseCache
SSVClaimApplicationsRequest
Private
SSDownloadManagerBookShim
SSDatabaseCacheEntry
SSObservable
SSPersistentCache
SSBiometrics
SSAppPurchaseHistoryCache
SSAppImageDatabaseCacheEntry
SSMetricsAppInstallEvent
SSVSAPSignatureDataSource
SSVMediaSocialAdminStatus
SSAppIconDatabaseCache
SSCacheObjectStore
SSPlistCacheObjectFactory
SSCacheObjectFactory
SSPlistCacheObject
SSCacheObject
SSVMediaSocialPostRequest
SSVURLProtocolConsumer
SSVPlatformRequestOperation
SSVPlaybackLeaseAsset
SSWishlistAddItemsRequest
SSWishlist
SSVShowDialogRequest
SSVDialogResponse
SSVPlayActivityEventItemIDs
SSVMutablePlayActivityEventItemIDs
SSWishlistDatabaseSchema
asn1ReceiptToken
SSPushNotificationTokenRequest
SSSimulatedCrash
SSVApplicationCapabilitiesRequest
SSSilentEnrollmentVerification
SSWishlistItemEntity
SSMetricsEvent
SSBagKey
SSMetricsMutableEvent
SSMetricsBaseEvent
SSPurchaseIntentActionRequest
SSVFairPlaySAPSession
SSVSAPContext
SSMetricsPageEvent
SSVStoreDownloadQueueResponse
SSMetricsEventTable
SSMetricsEventController
SSMetricsEventTableEntity
SSVGratisRequestBody
SSPromiseCompletionBlocks
SSMetricsEventReportingSession
SSGzipOutputStream
SSVPlaybackSubscriptionLeaseRequest
SSImportDownloadToIPodLibraryRequest
SSCoalescingQueue
SSDownloadMonitorItem
SSDownloadMonitor
SSVStoreDownload
SSMetricsAccountEvent
SSVSubscriptionEntitlementsCoordinator
SSMetricsLogEvent
SSMetricsPurchaseEvent
SSVLoadDownloadQueueOperation
SSVPlaybackKDLeaseRequest
SSMetricsClickEvent
SSStackShot
SSVMediaSocialPostArtist
SSAuthorizationMetricsController
SSVDirectUpload
SSMetricsEnterEvent
SSMetricsExitEvent
SSDownloadManagerAppShim
ASDJobManagerObserver
SSDoubleLinkedList
SSDoubleLinkedListNode
SSMetricsImpressionsEvent
SSSoftwareDownload
SSMetricsMediaEvent
SSVPlayActivityTable
SSVPlaybackLeaseResponse
SSMetricsSearchEvent
init
initWithServiceName:
initWithFormat:
UTF8String
createAttestationDataForAccountIdentifier:purpose:completionBlock:
sharedStoreServicesConfig
sharedConfig
shouldLog
OSLogObject
shouldLogToDisk
stringByReplacingOccurrencesOfString:withString:
numberWithInteger:
_sendMessage:completionBlock:
initWithXPCEncoding:
sendMessage:withReply:
isEqualToNumber:
getPublicKeyDataForAccountIdentifier:purpose:completionBlock:
numberWithBool:
createAttestationDataForAccountIdentifier:completionBlock:
createX509CertChainDataForAccountIdentifier:purpose:completionBlock:
deleteKeychainTokensForAccountIdentifier:completionBlock:
getPublicKeyDataForAccountIdentifier:completionBlock:
keyCountForAccountIdentifier:completionBlock:
signData:reason:fallback:cancel:forAccountIdentifier:completionBlock:
signData:context:completionBlock:
x509CertChainDataForAccountIdentifier:purpose:regenerateCerts:completionBlock:
.cxx_destruct
_connection
_dispatchQueue
stop
dealloc
objectForKeyedSubscript:
_ipAddress
isEqualToString:
stringWithFormat:
URLWithString:
copy
setObject:forKeyedSubscript:
currentRunLoop
state
distantFuture
runMode:beforeDate:
detachNewThreadWithBlock:
removeAllObjects
countByEnumeratingWithState:objects:count:
setDelegate:
close
initWithReadStream:writeStream:runLoop:
setDownloadSpeed:
addObject:
removeObject:
stringWithUTF8String:
sharedServer
_isPortOccupied:
requestDidFinish:
responseBlockForPath:
port
responsesDelivered
setPort:
serverURL
serverLocalhostURL
setResponseForPath:handler:
start
_handleConnectWithType:handle:
allowsSecure
downloadSpeed
verbose
setVerbose:
_definedResponses
_incomingRequests
_propertyQueue
_socket
_runLoop
_allowsSecure
_verbose
_port
_downloadSpeed
_state
_responsesDelivered
TB,R,N,V_allowsSecure
Ti,N,V_downloadSpeed
Ts,N,V_port
Tq,R,N,V_responsesDelivered
Ti,R,N,V_state
TB,N,V_verbose
propertyList:isValidForFormat:
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
headers
mutableCopy
body
length
removeObjectForKey:
statusCode
enumerateKeysAndObjectsUsingBlock:
initWithStatusCode:
setBodyWithBag:
bagFromBody
copyHTTPMessage
setBody:
setHeaders:
setStatusCode:
_statusCode
_body
_headers
T@"NSData",&,N,V_body
T@"NSDictionary",&,N,V_headers
Ts,N,V_statusCode
setEventType:
setEventVersion:
propertyForBodyKey:
setProperty:forBodyKey:
actionType
actionURL
details
dialogId
dialogType
dualAction
eventType
message
result
targetId
userActions
userAgent
setActionType:
setActionURL:
setDetails:
setDialogId:
setDialogType:
setDualAction:
setMessage:
setResult:
setTargetId:
setUserActions:
setUserAgent:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
copyXPCEncoding
T@"NSString",C,N
T@"NSDictionary",C,N
T@"NSArray",C,N
_currentPrivacyContentVersionForIdentifier:
sharedPrivacyConfig
_translateIdentifierToPrivacyAcknowledgement:withVersion:
_appendPrivacyAcknowledgementToLocalAccount:
_appendPrivacyAcknowledgementToActiveAccount:withURL:
code
addFinishBlock:
defaultStore
activeAccount
localAccount
resultWithError:
privacyAcknowledgement
unsignedIntegerValue
arrayWithObjects:count:
initWithArray:
_syncPrivacyAcknowledgementOnAccount:URL:
acknowledgePrivacyLinkWithIdentifier:URL:
privacyControllerWithIdentifier:acknowledgementHandler:
initWithDictionary:
isEqualToDictionary:
hashedDescription
setPrivacyAcknowledgement:
saveAccount:verifyCredentials:error:
finishWithError:
_appendPrivacyAcknowledgement:toAccount:
bundleWithIdentifier:
flowWithBundle:
contentVersion
isLocalAccount
currentDevice
uniqueDeviceIdentifier
setCachePolicy:
setHTTPMethod:
setRequestParameters:
setURL:
setValue:forHTTPHeaderField:
initWithAccount:
setAuthenticationContext:
setDataProvider:
setRequestProperties:
success
error
dataProvider
output
finishWithSuccess
setCompletionBlock:
mainQueue
addOperation:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
storePrivacyIdentifiers
appStorePrivacyIdentifiers
containsObject:
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
acknowledgePrivacyLinkWithIdentifier:
shouldDisplayPrivacyLinkWithIdentifier:
syncPrivacyAcknowledgementOnAccount:URL:
viewControllerForPrivacySplashWithIdentifier:URL:
handleFailureInFunction:file:lineNumber:description:
intValue
restartApplication:
_serialQueue
objectForKey:
flavor
URLString
initWithAssetDictionary:
downloadKey
sinfs
assetDictionary
_assetDictionary
T@"NSDictionary",R,C,N,V_assetDictionary
T@"NSString",R,N
T@"NSArray",R,N
isFieldBlacklistEnabled
unsignedLongLongValue
initWithDownloaderAccountIdentifier:purchaserAccountIdentifier:familyIdentifier:
downloaderAccountIdentifier
numberWithUnsignedLongLong:
setObject:forKey:
familyIdentifier
purchaserAccountIdentifier
count
initWithObjectsAndKeys:
notificationPayloadWithAccountPairs:
postDistributedNotificationWithAccountPairs:
initWithNotificationUserInfo:
initWithXPCEventStreamEvent:
deletedAccounts
_deletedAccounts
T@"NSArray",R,N,V_deletedAccounts
_downloaderAccountIdentifier
_familyIdentifier
_purchaserAccountIdentifier
TQ,R,N,V_downloaderAccountIdentifier
TQ,R,N,V_familyIdentifier
TQ,R,N,V_purchaserAccountIdentifier
initWithManagerOptions:
addObserver:
_handleDownloadsDidChange:
initWithDownloadKinds:
raise:format:
allObjects
setDownloadKinds:
setPersistenceIdentifier:
arrayWithObjects:
setPrefetchedDownloadExternalProperties:
setPrefetchedDownloadProperties:
_initWithDownloadManagerOptions:
removeObserver:
setWithObjects:
arrayWithObject:
addDownloads:completionBlock:
canCancelDownload:
cancelDownloads:completionBlock:
managerOptions
downloadKinds
setWithArray:
downloads
getDownloadsUsingBlock:
isUsingNetwork
reloadFromServer
valueForProperty:
downloadPhaseIdentifier
indexOfObject:
_sendDownloadStatusChangedAtIndex:
_handleDownloadsRemoved:
_sendQueueNetworkUsageChanged
_messageObserversWithFunction:context:
_willFinishDownloads:
_sendQueueChangedWithRemovals:
_finishDownloads:
mediaDownloadKinds
softwareApplicationDownloadKinds
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
downloadManagerNetworkUsageDidChange:
downloadManager:downloadsDidChange:
initWithDownloadManagerOptions:
addDownload:
cancelDownload:
downloadManager
addPlaceholderDownloads:
downloadForItemIdentifier:
placeholderDownloads
preorders
removePlaceholderDownload:
startPreOrderDownload:
_sendQueuePreOrdersChanged
shouldAutomaticallyFinishDownloads
setShouldAutomaticallyFinishDownloads:
_autoFinishDownloads
_downloadManager
_observers
T@"NSSet",R
T@"SSDownloadManager",R
TB,N,V_autoFinishDownloads
usingNetwork
TB,R,GisUsingNetwork
downloadQueue:downloadStatusChangedAtIndex:
downloadQueue:changedWithRemovals:
downloadQueueNetworkUsageChanged:
downloadQueuePreOrdersChanged:
allocWithZone:
setAccountIdentifier:
setAttachments:
setAttributed:
setAuthorIdentifier:
setAuthorType:
setContentItems:
setExternalServiceDestinations:
setSourceApplicationIdentifier:
setText:
copyWithZone:
accountIdentifier
attachments
isAttributed
authorIdentifier
authorType
contentItems
externalServiceDestinations
sourceApplicationIdentifier
text
_accountIdentifier
_attachments
_attributed
_authorIdentifier
_authorType
_contentItems
_externalServiceDestinations
_sourceApplicationIdentifier
_text
T@"NSNumber",C,N,V_accountIdentifier
T@"NSArray",C,N,V_attachments
attributed
TB,N,GisAttributed,V_attributed
T@"NSString",C,N,V_authorIdentifier
T@"NSString",C,N,V_authorType
T@"NSArray",C,N,V_contentItems
T@"NSArray",C,N,V_externalServiceDestinations
T@"NSString",C,N,V_sourceApplicationIdentifier
T@"NSString",C,N,V_text
_initWithPersistentIdentifier:
longLongValue
addEntriesFromDictionary:
initWithObjects:
_legacyAssetType
setValue:forProperty:
_becomeManagedOnConnection:
valueForExternalProperty:
doubleValue
_errorWithData:
_isManaged
getValues:forProperties:count:
boolValue
initWithRestoreDownload:
isEligibleForRestore:
downloadPolicy
policyRules
networkTypes
downloadSizeLimit
integerValue
setSizeLimit:forNetworkType:
persistentIdentifier
initWithLongLong:
_errorWithXPCReply:
indexOfObjectIdenticalTo:
removeObjectAtIndex:
handlerIdentifier
numberWithLongLong:
null
setExternalValuesWithDictionary:
setDownloadPolicy:
initWithNetworkConstraints:
newDownloadProperties
setValuesWithDictionary:
floatValue
setPercentComplete:
_applyPhase:toStatus:
isPausable
setPausable:
setError:
_resetLocalIVars
initWithURL:
setITunesStoreRequest:
initWithURLRequestProperties:
setValuesWithStoreDownloadMetadata:
primaryAssetURL
host
_newAssetWithURL:assetType:
addAsset:forType:
fullSizeImageURL
podcastFeedURL
setDownloadHandler:completionBlock:
setValuesFromDownload:
numberWithInt:
setValue:forKey:
setContentRestricted:
setCanPause:
percentComplete
setNormalizedCurrentValue:
setNormalizedMaxValue:
setOperationProgress:
setFailed:
setPaused:
setOperationType:
_existsMessage
_getExternalValuesMessage
_getValueMessage
_setExternalValuesMessage
_setValuesMessage
initWithPersistentIdentifier:
_initWithLocalPropertyValues:
assetsForType:
backgroundNetworkingJobGroupName
bytesDownloaded
bytesTotal
estimatedSecondsRemaining
failureError
isCancelable
networkConstraints
pause
prioritizeAboveDownload:completionBlock:
removeAsset:
resume
restart
setBackgroundNetworkingJobGroupName:
setNetworkConstraints:
_addCachedExternalValues:
_addCachedPropertyValues:
initWithDownloadMetadata:
assets
downloadIdentifier
handleWithDownloadHandler:completionBlock:
isBackgroundNetworkingUserInitiated
isExternal
metadata
setAssets:
setBackgroundNetworkingUserInitiated:
setMetadata:
setStatus:
status
_localAssets
_resetStatus
_XPCConnection
_metadata
_prioritizeAboveDownload
_status
T@"NSDictionary",R
T@"SSXPCConnection",R,G_XPCConnection
external
TB,R,N,GisExternal
T@,R,N
T@"NSArray",&,N
T@"SSDownloadMetadata",C,N
T@"SSDownloadStatus",&,N
Tq,R
cancelable
TB,R,GisCancelable
T@"SSDownloadPolicy",C
targetApplication
contentKind
_targetApplicationWithContentKind:
_URLSchemeWithApplication:
setScheme:
setPath:
queryItemWithName:value:
stringValue
_stringForContentKind:
insertObject:atIndex:
setQueryItems:
categoryName
setCategoryName:
setContentKind:
itemIdentifier
setItemIdentifier:
itemTitle
setItemTitle:
providerName
setProviderName:
searchTerm
setSearchTerm:
setTargetApplication:
_categoryName
_contentKind
_itemIdentifier
_itemTitle
_providerName
_searchTerm
_targetApplication
T@"NSString",C,N,V_categoryName
T@"NSNumber",C,N,V_itemIdentifier
T@"NSString",C,N,V_itemTitle
T@"NSString",C,N,V_providerName
T@"NSString",C,N,V_searchTerm
Tq,N,V_contentKind
Tq,N,V_targetApplication
T@"NSURL",R,N
defaultItemOffer
initWithItem:offer:
ITunesStoreIdentifier
isPreorder
preOrderIdentifier
setPreOrderIdentifier:
artistIdentifier
itemIdentifierValue
setArtistIdentifier:
bundleIdentifier
setBundleIdentifier:
collectionArtistName
setCollectionArtistName:
collectionIdentifier
setCollectionIdentifier:
collectionIndexInCollectionGroup
setCollectionIndexInCollectionGroup:
collectionName
setCollectionName:
isCompilation
setCompilation:
composerName
setComposerName:
episodeIdentifier
setEpisodeIdentifier:
episodeSortIdentifier
setEpisodeSortIdentifier:
genreName
setGenre:
genreIdentifier
setGenreIdentifier:
indexInCollection
setIndexInCollection:
longDescription
setLongDescription:
networkName
setNetworkName:
numberOfCollectionsInCollectionGroup
setNumberOfCollectionsInCollectionGroup:
numberOfItemsInCollection
setNumberOfItemsInCollection:
podcastEpisodeGUID
setPodcastEpisodeGUID:
seasonNumber
setSeasonNumber:
seriesName
setSeriesName:
shortDescription
setShortDescription:
artistName
setSubtitle:
setTitle:
videoDetails
setVideoDetailsDictionary:
itemKind
setKind:
softwareType
setValue:forMetadataKey:
contentRating
setContentRating:
isExplicitContent
setExplicitContent:
isHighDefinition
setHighDefinition:
playableMedia
fullDurationInMilliseconds
setDurationInMilliseconds:
imageCollection
bestImageForSize:
setFullSizeImageURL:
imagesForKind:
lastObject
isPrerendered
setArtworkIsPrerendered:
setThumbnailImageURL:
setThumbnailNewsstandBindingEdge:
setThumbnailNewsstandBindingType:
releaseDate
currentCalendar
components:fromDate:
year
setReleaseYear:
setReleaseDate:
setPodcastType:
setPodcastFeedURL:
setPrimaryAssetURL:
allowsKeyedCoding
lock
encodeObject:forKey:
unlock
decodeObjectOfClasses:forKey:
containsValueForKey:
decodeBoolForKey:
decodeObjectOfClass:forKey:
setDownloadKey:
setRental:
setSinfs:
setTransactionIdentifier:
mutableCopyWithZone:
valueForFirstAvailableKey:
valueForMetadataKey:
_stringValueForValue:
initWithImageCollection:
hlsPlaylistURL
kind
isPremium
hasHDR
_urlValueForValue:
_dateValueForValue:
_releaseDateValue
unarchivedObjectOfClass:fromData:error:
numberWithItemIdentifier:
keyStyle
_setValueCopy:forMetadataKey:
contentRatingDictionary
absoluteString
setArtistName:
archivedDataWithRootObject:requiringSecureCoding:error:
subtitle
title
_newImageCollectionWithURLString:
_thumbnailArtworkImage
allKeys
isRestricted
betaExternalVersionIdentifier
cloudIdentifier
downloadPermalink
documentTargetIdentifier
durationInMilliseconds
enableExtensions
genre
longSeasonDescription
messagesArtworkURL
pageProgressionDirection
podcastType
releaseYear
purchaseDate
publicationVersion
transactionIdentifier
cancelDownloadURL
thumbnailImageURL
redownloadActionParameters
thumbnailNewsstandBindingEdge
thumbnailNewsstandBindingType
viewStoreItemURL
variantIdentifier
artworkIsPrerendered
hasMessagesExtension
isDeviceBasedVPP
isRental
isSample
isSharedResource
isTvTemplate
launchProhibited
isMusicShow
isHLS
composerIdentifier
rentalID
setLockdownDictionary:
uniqueIdentifier
accountName
_valueForFirstAvailableTopLevelKey:
_newDateFormatter
stringFromDate:
objectAtIndex:
initWithCapacity:
_setValue:forTopLevelKey:
classForCoder
setBetaExternalVersionIdentifier:
setDownloadPermalink:
setCancelDownloadURL:
setCloudIdentifier:
setDocumentTargetIdentifier:
setEnableExtensions:
setLongSeasonDescription:
setMessagesArtworkURL:
setPageProgressionDirection:
setPurchaseDate:
setPublicationVersion:
setRedownloadActionParameters:
setViewStoreItemURL:
setVariantIdentifier:
setComposerIdentifier:
setAutomaticDownload:
setHasMessagesExtension:
setDeviceBasedVPP:
setSample:
setSharedResource:
setTvTemplate:
setLaunchProhibited:
setPreferredAssetFlavor:
valueForKey:
firstObject
_addPlaybackTypeToHLSPlaylistURLString:
supportsDeviceCapability:
addObjectsFromArray:
dateFromString:
initWithString:
setImageKind:
initWithItemImages:
setDateFormat:
setLenient:
timeZoneForSecondsFromGMT:
setTimeZone:
thumbnailImageCollection
percentEncodedQueryItems
initWithName:value:
setPercentEncodedQueryItems:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithItem:
initWithKind:
applicationIdentifier
is32BitOnly
launchExtrasUrl
primaryAssetDictionary
sagaIdentifier
setHlsPlaylistURL:
setLaunchExtrasUrl:
setRentalID:
setSagaIdentifier:
setMusicShow:
setSortArtistName:
setSortCollectionName:
setSortTitle:
sortArtistName
sortCollectionName
sortTitle
videoDetailsDictionary
showComposer
workName
movementName
movementNumber
movementCount
appReceiptData
copyright
copyWritableMetadata
dictionary
epubRightsData
fileExtension
isAutomaticDownload
isContentRestricted
isRedownloadDownload
isSoftwareKind
isVideosKind
MD5HashStrings
numberOfBytesToHash
preferredAssetFlavor
releaseDateString
requestPersistentID
requiredDeviceCapabilities
setCopyright:
setDictionary:
setEpubRightsData:
setFileExtension:
setKeyStyle:
setMD5HashStrings:numberOfBytesToHash:
setRedownloadDownload:
setReleaseDateString:
setRequestPersistentID:
setRequiredDeviceCapabilities:
setShouldDownloadAutomatically:
setTransitMapDataURL:
shouldDownloadAutomatically
transitMapDataURL
_dictionary
_keyStyle
_lock
T@"NSData",R,&
automaticDownload
TB,GisAutomaticDownload
T@"NSURL",&
T@"NSString",&
deviceBasedVPP
TB,GisDeviceBasedVPP
T@"NSDictionary",&
T@"NSNumber",R
T@"NSData",&
T@"NSURL",C
TB,R,GhasHDR
TB,R,GisHLS
tvTemplate
TB,GisTvTemplate
T@"NSArray",R
T@"NSString",C
premium
TB,R,GisPremium
redownloadDownload
TB,GisRedownloadDownload
T@"NSNumber",C
T@,C
contentRestricted
TB,R,GisContentRestricted
T@"NSArray",&
softwareKind
TB,R,GisSoftwareKind
videosKind
TB,R,GisVideosKind
T@"NSDate",&
T@"NSNumber",&
T@"SSItemImageCollection",R
timeIntervalSinceReferenceDate
numberWithDouble:
dateWithTimeIntervalSinceReferenceDate:
appendString:
appendFormat:
_descriptionWithSubscriptionStatusDescriptorBlock:
subscriptionStatus
setSubscriptionStatus:
supportsMusicCatalogPlayback
setSupportsMusicCatalogPlayback:
supportsAddToCloudMusicLibrary
setSupportsAddToCloudMusicLibrary:
canSubscribeToMusicCatalog
setCanSubscribeToMusicCatalog:
_supportsMusicCatalogPlayback
_supportsAddToCloudMusicLibrary
_canSubscribeToMusicCatalog
_subscriptionStatus
T@"SSVSubscriptionStatus",C,N,V_subscriptionStatus
TB,N,V_supportsMusicCatalogPlayback
TB,N,V_supportsAddToCloudMusicLibrary
TB,N,V_canSubscribeToMusicCatalog
_externalChangeNotification
_updateSubscriptionStatusAccessPolicyAllowingNotification:
defaultCenter
_accountStoreChangedNotification
addObserver:selector:name:object:
_deviceStoreFrontChangedNotification
removeObserver:name:object:
initWithUserDefaultsRepresentation:
date
timeIntervalSinceDate:
_copyValidStatusForStatus:
_copyStatusDateFromUserDefaults
_copyStatusFromUserDefaults
carrierBundlingStatus
accountStatus
subscriptionExpirationDate
timeIntervalSinceNow
setAuthenticatesIfNecessary:
setCarrierBundleProvisioningStyle:
setLocalizedAuthenticationReason:
setReason:
_handleRequestResponseWithStatus:isFinal:error:
startWithStatusResponseBlock:
copyUserDefaultsRepresentation
_validateLastKnownStatus
sharedController
isPhoneNumberAccessRestricted
phoneNumber
resetAccountBasedProperties
resetCarrierBundlingProperties
postNotificationName:object:
_fireStatusBlocksWithStatus:isFinal:error:
sharedCoordinator
copyStatusFromUserDefaults
updateUserDefaultsWithStatus:
_existingSharedCoordinator
getStatusWithOptions:statusBlock:
lastKnownStatus
modifyLastKnownStatusUsingBlock:
reset
_invalidateLastKnownStatus
_activeRequest
_callbackQueue
_didReset
_lastKnownStatus
_lastStatusDate
_notificationToken
_subscriptionStatusAccessPolicy
_statusBlocks
T@"SSVSubscriptionStatus",R,C
_shutdownRequest
_startWithMessageID:messageBlock:
initWithQueueType:
startWithResponseBlock:
queueType
_queueType
Tq,R,N,V_queueType
isCancelled
_sendResponseBlockWithError:
errorWithDomain:code:userInfo:
initWithURLBagDictionary:
initWithURLRequest:
configureWithURLBagDictionary:
storeFrontSuffix
setStoreFrontSuffix:
setMachineDataStyle:
initWithPolicyType:
setSAPSignaturePolicy:
setOutputBlock:
main
request
dataUsingEncoding:
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
setServerPlaybackContextData:
serverPlaybackContextDataDelegate
secureKeyDeliveryRequestOperationDidChangeServerPlaybackContextData:
_streamingKeyDictionaryForID:URI:serverPlaybackContextData:
_streamingRequestDictionaryWithStreamingKeyDictionaries:
dataWithJSONObject:options:error:
requestWithURL:
setHTTPBody:
consumer
setDataConsumer:
_contentKeyContextForStreamingKeyID:streamingKeyDictionaries:renewAfter:error:
_expirationTimeForStreamingKeyID:streamingKeyDictionaries:
_playbackStartTimeForStreamingKeyID:streamingKeyDictionaries:
persistentContentKeyFromKeyVendorResponse:options:error:
setPersistentContentKeyContext:
contentInformationRequest
setContentType:
dataRequest
respondWithData:
dateByAddingTimeInterval:
setRenewalDate:
isFinished
initWithBase64EncodedString:options:
isNSDictionary__
initWithDomain:code:userInfo:
_timeIntervalForStreamingKeyID:responseKey:streamingKeyDictionaries:
base64EncodedStringWithOptions:
rentalId
skippedRentalCheckout
shouldIncludeGUID
leaseAction
offline
certificateURL
keyServerURL
persistentContentKeyContext
resourceLoadingRequest
responseBlock
serverPlaybackContextData
setCertificateURL:
setKeyServerURL:
setResourceLoadingRequest:
setResponseBlock:
setShouldIncludeGUID:
isITunesStoreRequest
setRentalId:
setSkippedRentalCheckout:
setLeaseAction:
setOffline:
expirationTime
playbackStartTime
setServerPlaybackContextDataDelegate:
_accessQueue
_certificateURL
_keyServerURL
_resourceLoadingRequest
_responseBlock
_iTunesStoreRequest
_shouldIncludeGUID
_URLBagDictionary
_persistentContentKeyContext
_serverPlaybackContextData
_skippedRentalCheckout
_offline
_rentalId
_leaseAction
_expirationTime
_playbackStartTime
_serverPlaybackContextDataDelegate
T@"NSData",R,C,N,V_persistentContentKeyContext
Tq,N,V_leaseAction
TB,V_offline
Td,R,N,V_expirationTime
Td,R,N,V_playbackStartTime
T@"<SSVSecureKeyDeliveryRequestOperationDelegate>",W,N,V_serverPlaybackContextDataDelegate
T@"NSData",&,N,V_serverPlaybackContextData
T@"NSURL",&,V_certificateURL
T@"NSURL",&,V_keyServerURL
T@"AVAssetResourceLoadingRequest",&,V_resourceLoadingRequest
T@"NSNumber",C,V_rentalId
TB,V_skippedRentalCheckout
ITunesStoreRequest
TB,GisITunesStoreRequest
TB,N
T@?,C,V_responseBlock
scheme
rangeOfString:options:
item
setItem:
updateDate
setUpdateDate:
_item
_updateDate
T@"SSVMediaContentTasteItem",C,N,V_item
T@"NSDate",C,N,V_updateDate
decimalDigitCharacterSet
invertedSet
componentsSeparatedByCharactersInSet:
userInfo
domain
bundleForClass:
localizedStringForKey:value:table:
initWithUnsignedLongLong:
initWithItemIdentifier:
stringByAppendingPathExtension:
pathWithComponents:
isFailed
operationProgress
canPause
normalizedCurrentValue
normalizedMaxValue
initWithOperationProgress:
isFailedTransient
activePhase
isPaused
_activePhase
_contentRestricted
_error
_failed
_paused
T@"NSError",&,N,V_error
TB,N,GisContentRestricted,V_contentRestricted
failed
TB,N,GisFailed,V_failed
pausable
TB,N,GisPausable
paused
TB,N,GisPaused,V_paused
failedTransient
TB,R,N,GisFailedTransient
T@"SSDownloadPhase",R,N,V_activePhase
Tf,R,N
estimatedTimeRemaining
operationType
units
changeRate
currentValue
maxValue
phaseType
progressUnits
progressChangeRate
progressValue
totalProgressValue
_operationProgress
T@"SSOperationProgress",R
Td,R
Tf,R
startWithCompletionBlock:
authenticationContext
isRequestingOfflineSlot
setRequestingOfflineSlot:
_authenticationContext
_requestingOfflineSlot
requestingOfflineSlot
TB,N,GisRequestingOfflineSlot,V_requestingOfflineSlot
T@"SSAuthenticationContext",C,N,V_authenticationContext
_copyURLRequestProperties
copyURLRequest
URLByDeletingLastPathComponent
fileURLWithPath:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithURL:readonly:extensionClass:
lastPathComponent
setAllowedRetryCount:
setTimeoutInterval:
setHTTPHeaders:
fileExistsAtPath:
initWithFileAtPath:
setHTTPBodyStream:
setExpectedContentLength:
assetWithURL:type:
bytesUploaded
bytesUploadTotal
URLRequest
URLRequestProperties
_localProperties
initWithURLRequest:type:
assetType
downloadFileName
downloadPath
finalizedPath
fileSize
_assetType
T@"NSString",R
TB,R,GisExternal
T@"SSURLRequestProperties",R
T@"NSURLRequest",R,&
stringByAppendingPathComponent:
componentsSeparatedByString:
_ss_unescapedStringForString:
stringByRemovingPercentEncoding
componentsWithURL:resolvingAgainstBaseURL:
queryItems
name
_ss_arrayByRemovingObjectsPassingTest:
_ss_any:
_ss_firstObjectPassingTest:
value
_ss_URLByRemovingQueryParameter:
_ss_hasQueryParameter:
_ss_valueForQueryParameter:
_ss_copyDictionaryForQueryString:unescapedValues:
initWithDouble:
_updateStatisticsFromSnapshots
resetSnapshots
setChangeRate:
setCurrentValue:
setEstimatedTimeRemaining:
setMaxValue:
setUnits:
snapshot
_canPause
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
_normalizedCurrentValue
_normalizedMaxValue
_operationType
_snapshotTimes
_snapshotValues
_units
mainBundle
initWithFormat:arguments:
writeString:
deviceIsInternalBuild
initWithLogOptions:
logDirectoryPath
setLogDirectoryPath:
logFileBaseName
setLogFileBaseName:
maxLogFileSize
setMaxLogFileSize:
maxNumberOfLogFiles
setMaxNumberOfLogFiles:
_directoryPath
_fileName
_maxNumberOfLogFiles
_maxSizeInBytes
T@"NSString",C,N,V_directoryPath
T@"NSString",C,N,V_fileName
TQ,N,V_maxSizeInBytes
Tq,N,V_maxNumberOfLogFiles
_enumerateItemsUsingBlock:
array
initWithItemDictionary:
fallbackStreamingKeyCertificateURL
setFallbackStreamingKeyCertificateURL:
fallbackStreamingKeyServerURL
setFallbackStreamingKeyServerURL:
enumerateObjectsUsingBlock:
initWithDictionary:URLResponse:
itemForItemIdentifier:
items
responseDictionary
URLResponse
_responseDictionary
_urlResponse
_fallbackStreamingKeyServerURL
_fallbackStreamingKeyCertificateURL
T@"NSURL",C,N,V_fallbackStreamingKeyServerURL
T@"NSURL",C,N,V_fallbackStreamingKeyCertificateURL
T@"NSDictionary",R,C,N,V_responseDictionary
T@"NSHTTPURLResponse",R,N,V_urlResponse
delegate
downloadManifestRequest:didReceiveResponse:
request:didFailWithError:
startWithManifestResponseBlock:
setShouldHideUserPrompts:
shouldHideUserPrompts
manifestFormat
setManifestFormat:
_manifestFormat
_shouldHideUserPrompts
_urlRequest
T@"<SSDownloadManifestRequestDelegate>",D,N
T@"NSURLRequest",R
sessionIdentifier
supportsProcessSharing
_CFURLRequest
_initWithCFCachedURLResponse:
data
isEqualToData:
response
storagePolicy
initWithResponse:data:userInfo:storagePolicy:
cachedConnectionResponseForRequestProperties:cachedResponse:
cachedResponseForRequest:
initWithURLResponse:bodyData:
initWithBodyDictionary:
setMetricsPageEvent:
_CFCachedURLResponse
storeConnectionResponse:forRequestProperties:userInfo:
metricsPageEvent
bodyDictionary
bodyData
storeCachedResponse:forRequest:
initWithConfiguration:
cachedConnectionResponseForRequestProperties:
configureRequest:
loadMemoryCacheFromDisk
removeAllCachedResponses
saveMemoryCacheToDisk
storeConnectionResponse:forRequestProperties:
_accessSerialQueue
_cacheStorageSession
_configuration
_urlCache
setSessionIdentifier:
setSupportsProcessSharing:
_supportsProcessSharing
_sessionIdentifier
T@"NSString",C,N,V_sessionIdentifier
TB,N,V_supportsProcessSharing
_calculatedExpiration
ssv_isExpiredResponse
TB,R,N
initWithBytesNoCopy:length:freeWhenDone:
validDownloads
setValidDownloads:
_validDownloads
T@"NSArray",C
_initSSRequest
invalidate
setDisconnectBlock:
setMessageBlock:
_shutdownRequestWithMessageID:
__beginBackgroundTask
__endBackgroundTask
_allowMultipleCallbacks
messageBlock
createXPCEndpoint
sendMessage:
initWithPID:flags:reason:name:withHandler:
_cancelBackgroundTaskExpirationTimer
weakReferenceWithObject:
object
_endBackgroundTask
disconnectBlock
cancel
disconnect
setShouldCancelAfterTaskExpiration:
shouldCancelAfterTaskExpiration
_beginBackgroundTask
_expireBackgroundTask
usesTaskCompletionAssertions
setUsesTaskCompletionAssertions:
_backgroundTaskIdentifier
_cancelAfterTaskExpiration
_delegate
_requestConnection
_responseConnection
_backgroundTaskExpirationTimer
_callState
_completionBlock
_taskAssertion
_taskAssertionTaken
_usesTaskCompletionAssertions
T@"<SSRequestDelegate>",W,N,V_delegate
TB,N,V_usesTaskCompletionAssertions
serialNumber
promiseAccessQueue
promise
setPromise:
executeBlockQueue
block
callBlockQueue
finishWithResult:error:
initWithBlock:
addCompletionBlock:
setBlock:
setCallBlockQueue:
setExecuteBlockQueue:
_block
_callBlockQueue
_executeBlockQueue
_promise
_promiseAccessQueue
T@?,C,N,V_block
T@"NSObject<OS_dispatch_queue>",&,N,V_callBlockQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executeBlockQueue
T@"SSPromise",&,N,V_promise
T@"NSObject<OS_dispatch_queue>",R,N,V_promiseAccessQueue
appAdamId
setAppAdamId:
appVersion
setAppVersion:
chargeCountryCode
setChargeCountryCode:
chargeCurrencyCode
setChargeCurrencyCode:
chargeStoreFrontIdentifier
setChargeStoreFrontIdentifier:
expireDate
setExpireDate:
familyId
setFamilyId:
inAppAdamId
setInAppAdamId:
inAppVersion
setInAppVersion:
isNewsAppPurchase
setNewsAppPurchase:
offerIdentifier
setOfferIdentifier:
originalPurchaseDownloadId
setOriginalPurchaseDownloadId:
purchasabilityType
setPurchasabilityType:
purchaseDownloadId
setPurchaseDownloadId:
quantity
setQuantity:
vendorIdentifier
setVendorIdentifier:
_newsAppPurchase
_appAdamId
_appVersion
_chargeCountryCode
_chargeCurrencyCode
_chargeStoreFrontIdentifier
_expireDate
_familyId
_inAppAdamId
_inAppVersion
_offerIdentifier
_originalPurchaseDownloadId
_purchasabilityType
_purchaseDownloadId
_quantity
_vendorIdentifier
T@"NSNumber",C,N,V_appAdamId
T@"NSNumber",C,N,V_appVersion
T@"NSString",C,N,V_chargeCountryCode
T@"NSString",C,N,V_chargeCurrencyCode
T@"NSNumber",C,N,V_chargeStoreFrontIdentifier
T@"NSDate",C,N,V_expireDate
T@"NSNumber",C,N,V_familyId
T@"NSNumber",C,N,V_inAppAdamId
T@"NSString",C,N,V_inAppVersion
newsAppPurchase
TB,N,GisNewsAppPurchase,V_newsAppPurchase
T@"NSString",C,N,V_offerIdentifier
T@"NSNumber",C,N,V_originalPurchaseDownloadId
T@"NSNumber",C,N,V_purchasabilityType
T@"NSNumber",C,N,V_purchaseDownloadId
T@"NSNumber",C,N,V_quantity
T@"NSString",C,N,V_vendorIdentifier
_refreshContentTasteItems
tasteType
setPlaylistGlobalID:
setTasteType:
_contentTasteForItemUpdate:finishedWithError:
_sendUpdateWithItemUpdates:completionHandler:
setStoreAdamID:
responseRevisionID
contentTasteItems
playlistGlobalID
storeAdamID
_handleContentTasteItemsUpdateResponse:allowNotifications:
_isRetryableError:
compare:
_scheduleContentTasteUpdateOperationForFailedItems
allValues
arrayWithCapacity:
_retryOperationForItemUpdates:finishedWithError:
setContentTasteItemUpdates:
defaultMediaTasteController
contentTasteTypeForPlaylistGlobalID:
contentTasteTypeForStoreAdamID:
setContentTasteType:forPlaylistGlobalID:withCompletionHandler:
setContentTasteType:forStoreAdamID:withContentType:completionHandler:
_calloutSerialQueue
_currentResponseRevisionID
_lastNotificationReceivedResponseRevisionID
_havePendingRetryOperation
_itemsDidChangeNotifyToken
_exponentialBackOffSeconds
_pendingMutateRequestCount
_playlistGlobalIDToContentTasteItem
_playlistGlobalIDToPendingContentTasteItem
_contentTasteItemsToRetry
_storeAdamIDToContentTasteItem
_storeAdamIDToPendingContentTasteItem
objectForData:response:error:
dictionaryRepresentation
setBuildVersion:
setDeviceGUID:
setDeviceName:
setTimeZoneName:
setStoreFrontID:
hasBuildVersion
hasDeviceGUID
hasDeviceName
hasTimeZoneName
systemReleaseType
setSystemReleaseType:
setHasSystemReleaseType:
hasSystemReleaseType
systemReleaseTypeAsString:
StringAsSystemReleaseType:
setSBEnabled:
setHasSBEnabled:
hasSBEnabled
setStoreAccountID:
setHasStoreAccountID:
hasStoreAccountID
hasStoreFrontID
setPrivateListeningEnabled:
setHasPrivateListeningEnabled:
hasPrivateListeningEnabled
readFrom:
writeTo:
copyTo:
mergeFrom:
buildVersion
deviceGUID
deviceName
timeZoneName
sBEnabled
storeAccountID
storeFrontID
privateListeningEnabled
_storeAccountID
_buildVersion
_deviceGUID
_deviceName
_storeFrontID
_systemReleaseType
_timeZoneName
_privateListeningEnabled
_sBEnabled
_has
T@"NSString",&,N,V_buildVersion
T@"NSString",&,N,V_deviceGUID
T@"NSString",&,N,V_deviceName
T@"NSString",&,N,V_timeZoneName
Ti,N,V_systemReleaseType
TB,N,V_sBEnabled
TQ,N,V_storeAccountID
T@"NSString",&,N,V_storeFrontID
TB,N,V_privateListeningEnabled
initWithAppAdamId:adNetworkId:campaignId:impressionId:timestamp:attributionSignature:originatingBundleId:overrideCampaignLimit:
initWithAppAdamId:adNetworkId:campaignId:impressionId:timestamp:attributionSignature:
initWithAppAdamId:adNetworkId:campaignId:impressionId:timestamp:attributionSignature:originatingBundleId:
adNetworkId
campaignId
impressionId
timestamp
attributionSignature
originatingBundleId
overrideCampaignLimit
_overrideCampaignLimit
_adNetworkId
_campaignId
_impressionId
_timestamp
_attributionSignature
_originatingBundleId
T@"NSNumber",R,N,V_appAdamId
T@"NSString",R,N,V_adNetworkId
T@"NSNumber",R,N,V_campaignId
T@"NSString",R,N,V_impressionId
T@"NSNumber",R,N,V_timestamp
T@"NSString",R,N,V_attributionSignature
T@"NSString",R,N,V_originatingBundleId
TB,R,N,V_overrideCampaignLimit
initWithPurchases:
_addPurchasesToManager
cancelPurchases:withCompletionBlock:
_finishPurchasesWithResponses:
setBackgroundPurchase:
setCreatesDownloads:
setCreatesJobs:
setPlaybackRequest:
setPurchase:
addPurchases:withCompletionBlock:
purchase
_purchaseForUniqueIdentifier:
purchaseRequest:purchaseDidFail:withError:
purchaseRequest:purchaseDidSucceed:
purchaseRequest:purchaseDidSucceedWithResponse:
tidHeaders
setTidHeaders:
purchaseManager:didFinishPurchasesWithResponses:
purchases
startWithPurchaseBlock:completionBlock:
startWithPurchaseResponseBlock:completionBlock:
isBackgroundRequest
setBackgroundRequest:
createsDownloads
needsAuthentication
setNeedsAuthentication:
isPlaybackRequest
shouldValidatePurchases
setShouldValidatePurchases:
createsJobs
_isBackgroundRequest
_purchases
_shouldValidatePurchases
_createsDownloads
_openPurchaseIdentifiers
_purchaseBlock
_purchaseResponseBlock
_purchaseManager
_needsAuthentication
_playbackRequest
_createsJobs
TB,N,V_createsDownloads
TB,N,V_createsJobs
playbackRequest
TB,N,GisPlaybackRequest,V_playbackRequest
TB,N,V_shouldValidatePurchases
T@"<SSPurchaseRequestDelegate>",D,N
backgroundRequest
TB,N,GisBackgroundRequest,V_isBackgroundRequest
TB,N,V_needsAuthentication
loadWithCompletionBlock:
initWithSignedActionsDictionary:
cachedValueFromBag:key:withType:updateCache:
arrayForKey:error:
boolForKey:error:
doubleForKey:error:
integerForKey:error:
stringForKey:error:
URLForKey:error:
dictionaryForKey:error:
_valueForKey:withClass:
URLForURLBagKey:
path
mescalSignedRequests
initWithComponentType:key:
initWithPolicyType:signatureComponents:
mescalSignedActions
caseInsensitiveCompare:
mescalSignedResponses
AMDDomains
valueForURLBagKey:
initWithURLBag:
initWithSSBag:
mescalCertificateURL
mescalSetupURL
mescalSignaturePolicyForRequestURL:
mescalSignaturePolicyForResponseURL:
pastisCertificateURL
pastisKeyServerURL
shouldSendAnonymousMachineIdentifierForURL:
mescalPrimingURL
_cachedBagValues
_subscriptionSignedActions
_subscriptionSignaturePolicy
_mescalPrimingURL
T@"NSArray",R,C,N
T@"NSURL",R,C,N
T@"NSURL",R,C,N,V_mescalPrimingURL
T@"NSDictionary",R,C,N
T@"NSString",R,C,N
hasPrefix:
hasSuffix:
substringFromIndex:
_initSSVLoadURLOperation
shouldSuppressCookies
shouldSuppressUserInfo
recordsMetrics
cachePolicy
timeoutInterval
initWithURL:cachePolicy:timeoutInterval:
HTTPBody
HTTPMethod
networkServiceType
setNetworkServiceType:
HTTPHeaders
shouldDecodeResponse
machineDataStyle
_newURLRequestWithRedirectURL:
sharedURLCache
dispatchAsync:
deviceIsAudioAccessory
standardUserDefaults
dispatchSync:
_stopRunLoop
_finishWithData:
_createAuthKitSession
_runOnce
setPrepareRequestBlock:
metricsLoadURLSessionDuration
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
_finishWithOutput:error:
setReferringAppName:
setReferringURL:
timeIntervalSince1970
setResponseEndTime:
cachedResponse
setCachedResponse:
connectionReused
setConnectionReused:
clientCorrelationKey
setClientCorrelationKey:
connectionEndTime
setConnectionEndTime:
connectionStartTime
setConnectionStartTime:
connectionStartNStatRXBytes
setConnectionStartNStatRXBytes:
connectionStartNStatTXBytes
setConnectionStartNStatTXBytes:
connectionStopNStatRXBytes
setConnectionStopNStatRXBytes:
connectionStopNStatTXBytes
setConnectionStopNStatTXBytes:
domainLookupEndTime
setDomainLookupEndTime:
domainLookupStartTime
setDomainLookupStartTime:
fetchStartTime
setFetchStartTime:
redirectCount
setRedirectCount:
redirectEndTime
setRedirectEndTime:
redirectStartTime
setRedirectStartTime:
requestStartTime
setRequestStartTime:
responseEndTime
responseStartTime
setResponseStartTime:
secureConnectionStartTime
setSecureConnectionStartTime:
xpSamplingForced
setXPSamplingForced:
xpSessionDuration
setXPSessionDuration:
xpSamplingPercentageUsers
setXPSamplingPercentageUsers:
xpSamplingPercentageCachedResponses
setXPSamplingPercentageCachedResponses:
allHeaderFields
dataToSignWithURLResponse:responseData:
verifyData:withSignature:error:
sharedAccountsConfig
originalRequest
setStoreFrontIdentifier:forRequest:response:account:
initWithURLResponse:
_shouldRetryAfterMachineDataRequest:
protectionSpace
authenticationMethod
QAMode
ignoreServerTrustEvaluation
serverTrust
credentialForTrust:
sender
performDefaultHandlingForAuthenticationChallenge:
sharedStorage
setCookiesForHTTPResponse:account:
appendData:
_applyResponseToMetrics:
handleResponse:forRequest:shouldRetry:
policyType
sharedDefaultSession
dataToSignWithURLRequest:
signatureWithData:error:
setPageURL:
setServerApplicationInstance:
setServerTiming:
_outputForData:error:
outputBlock
_releaseOutputBlocks
contextWithBagType:
initWithURLBagContext:
_configureWithURLBagInterpreter:
setHTTPShouldUsePipelining:
valueForHTTPHeaderField:
currentAcceptLanguage
sharedInstance
connectionTypeHeader
sharedAccountStore
primaryAppleAccount
aa_personID
isNewCustomer
UUID
UUIDString
cookieHeadersForURL:account:
stringByAppendingFormat:
setHTTPShouldHandleCookies:
stringByAppendingString:
softwareLibraryIdentifier
appleIDHeadersForRequest:
_addMachineDataHeadersToRequest:withAccountIdentifier:
_addSAPSignatureToRequest:
mainDocumentURL
setMainDocumentURL:
attribution
setAttribution:
prepareRequestBlock
dataConsumer
_loadURLBagInterpreter
sharedManager
dataTaskWithRequest:delegate:
_stopIfCancelled
performSelector:withObject:afterDelay:
_runRunLoopUntilStopped
cancelPreviousPerformRequestsWithTarget:selector:object:
_keepAliveTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
actionName
protocolVersion
getCFRunLoop
URLSession:task:decodedDataForResponseData:
URLSession:task:didCompleteWithEvent:error:
URLSession:task:didFinishCreatingHTTPArchive:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
isURLBagRequest
rawResponseData
requestProperties
shouldDisableCellular
shouldRequireCellular
shouldSetCookies
sourceAppAuditTokenData
sourceAppBundleID
URLCache
URLCacheID
T@"NSNumber",R,N
T@"SSBag",R,N
T@"NSData",R,N
T@"SSURLRequestProperties",R,N
T@"NSURLCache",R,N
initWithData:fromOperation:
cachedURLResponse
configureWithURLBag:
expiredOutputBlock
referrerApplicationName
referrerURLString
SAPSession
SAPSignaturePolicy
setExpiredOutputBlock:
setRecordsMetrics:
setReferrerApplicationName:
setReferrerURLString:
setSAPSession:
_dataForCachedResponse:
setBag:
setShouldSuppressCookies:
setShouldSuppressUserInfo:
_authKitSession
_dataBuffer
_dataConsumer
_inputData
_machineDataRetryCount
_machineDataStyle
_metricsPageEvent
_outputBlock
_prepareRequestBlock
_protocolRedirectURLs
_recordsMetrics
_redirectURL
_referrerApplicationName
_referrerURLString
_response
_sapSession
_sapSignaturePolicy
_shouldRetry
_storeFrontSuffix
_stopped
_urlBag
_urlBagInterpreter
_requestProperties
_shouldSuppressCookies
_shouldSuppressUserInfo
_bag
_mainDocumentURL
_attribution
T@"SSVFairPlaySAPSession",&
T@"SSVSAPSignaturePolicy",C
T@"<SSVLoadURLOperationDelegate>",W,N,V_delegate
T@"NSURL",R
T@"NSCachedURLResponse",R
T@"SSVURLDataConsumer",&
T@"SSMetricsPageEvent",R
T@"SSBag",&,N,V_bag
T@"NSHTTPURLResponse",R
T@?,C
TB,V_shouldSuppressCookies
TB,V_shouldSuppressUserInfo
T@"NSURL",C,V_mainDocumentURL
TQ,V_attribution
currentProcess
userAgentForProcessInfo:
storeFrontIdentifier
lowercaseString
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
query
observerWithResultBlock:completionBlock:failureBlock:
setFailureBlock:
setResultBlock:
completionBlock
failureBlock
resultBlock
observerWithResultBlock:
_sendCompletionUsingQueue:
_sendFailure:usingQueue:
_sendResult:usingQueue:
_failureBlock
_resultBlock
T@?,C,N,V_completionBlock
T@?,C,N,V_failureBlock
T@?,C,N,V_resultBlock
_initSSPurchase
buyParameters
setBuyParameters:
containsString:
_buyParametersValueForKey:fromBuyParams:
_setValuesUsingDatabaseEncoding:
_addEntriesToDatabaseEncoding:
objectAtIndexedSubscript:
_createsDownloadsWithOverride
_createsJobsWithOverride
_createsInstallJobsWithOverride
rawItemDictionary
itemOfferForIdentifier:
decodeInt64ForKey:
encodeBool:forKey:
encodeInt64:forKey:
purchaseWithBuyParameters:
affiliateIdentifier
createsInstallJobs
displaysOnLockScreen
downloadProperties
filteredAssetTypes
ignoresForcedPasswordRestriction
isBackgroundPurchase
ownerAccountDSID
placeholderDownloadIdentifier
presentingSceneIdentifier
setAffiliateIdentifier:
setCreatesInstallJobs:
setDisplaysOnLockScreen:
setDownloadProperties:
setFilteredAssetTypes:
setIgnoresForcedPasswordRestriction:
setOwnerAccountDSID:
setPresentingSceneIdentifier:
setSkipSoftwareAccountPreflight:
setValue:forDownloadProperty:
valueForDownloadProperty:
initWithDatabaseEncoding:
batchIdentifier
databaseEncoding
buyParametersValueForKey:
enabledServiceType
expectedDownloadFileSize
gratisIdentifiers
itemOffer
isGratisSoftwareClaim
isPreauthenticated
setBatchIdentifier:
setDefaultUserAgent:
setEnabledServiceType:
setExpectedDownloadFileSize:
setGratisIdentifiers:
setPlaceholderDownloadIdentifier:
setPreauthenticated:
setUniqueIdentifier:
setUsesLocalRedownloadParametersIfPossible:
usesLocalRedownloadParametersIfPossible
downloadMetadata
setDownloadMetadata:
skipSoftwareAccountPreflight
_affiliateIdentifier
_backgroundPurchase
_batchIdentifier
_buyParameters
_buyParamsCreatesDownloads
_buyParamsCreatesInstallJobs
_buyParamsCreatesJobs
_createsInstallJobs
_displaysOnLockScreen
_downloadPolicy
_downloadProperties
_enabledServiceType
_expectedDownloadFileSize
_filteredAssetTypes
_gratisIdentifiers
_ignoresForcedPasswordRestriction
_itemOffer
_networkConstraints
_ownerAccountDSID
_placeholderDownloadIdentifier
_preauthenticated
_requiredDeviceCapabilities
_skipSoftwareAccountPreflight
_tidHeaders
_uniqueIdentifier
_usesLocalRedownloadParametersIfPossible
_presentingSceneIdentifier
gratisSoftwareClaim
TB,R,GisGratisSoftwareClaim
TB,GisPlaybackRequest
T@"NSDictionary",C
preauthenticated
TB,GisPreauthenticated
T@"NSData",R
backgroundPurchase
TB,GisBackgroundPurchase
T@"SSURLRequestProperties",C
T@"SSNetworkConstraints",C
TB,N,V_skipSoftwareAccountPreflight
allowedToneStyles
setAllowedToneStyles:
setAssigneeIdentifier:
setAssigneeContactIdentifier:
setAssigneeToneStyle:
setShouldMakeDefaultRingtone:
setShouldMakeDefaultTextTone:
assigneeIdentifier
assigneeContactIdentifier
assigneeToneStyle
shouldMakeDefaultRingtone
shouldMakeDefaultTextTone
_allowedToneStyles
_assigneeIdentifier
_assigneeContactIdentifier
_assigneeToneStyle
_shouldMakeDefaultRingtone
_shouldMakeDefaultTextTone
newPurchaseWithDatabaseEncoding:
newPurchaseWithXPCEncoding:
_refreshDownloadWithTransactionID:accountID:bagKey:error:
setSuccess:
setURLBagKey:
setValue:forRequestParameter:
initWithRequestProperties:
runChildOperation:
initWithDownloadTransactionIdentifier:accountID:
isDownloadTransactionID
accountID
downloadTransactionID
_downloadTrasactionID
_accountID
_downloadTransactionID
T@"NSString",R,V_downloadTransactionID
_canRunInProcess
urlConnectionRequest:didReceiveResponse:
startWithConnectionResponseBlock:
runsInProcess
destinationFileURL
sendsResponseForHTTPFailures
shouldMescalSign
setSendsResponseForHTTPFailures:
setShouldMescalSign:
setDestinationFileURL:
setRunsInProcess:
_destinationFileURL
_runsInProcess
_sendsResponseForHTTPFailures
_shouldMescalSign
T@"SSAuthenticationContext",C
T@"<SSURLConnectionRequestDelegate>",D,N
isStoreServicesURL
_convertedValueForValue:
_errorForStatusCode:
_copyItemsFromResponse:expirationDate:
itemLookupRequest:didFindItems:
startWithItemLookupBlock:
_setExpirationDate:
setNumberStyle:
setUsesGroupingSeparator:
stringFromNumber:
componentsJoinedByString:
setValue:forParameter:
valueForParameter:
copyQueryStringParameters
parameters
_parameters
T@"NSDictionary",R,C
T@"<SSItemLookupRequestDelegate>",D,N
_accountStoreDidChangeNotification:
aa_primaryAppleAccount
_accountStore
_primaryAppleAccount
T@"ACAccount",R
_setOfferItem:
makeObjectsPerformSelector:withObject:
_offers
_preferredOfferIdentifiers
tellAFriendBody
_tellAFriendDictionary
itemImages
priceDisplay
_finishTellAFriendLoadWithError:
MIMEType
textEncodingName
initWithData:encoding:
initWithOfferIdentifier:dictionary:
allItemOffers
averageUserRating
isGameCenterEnabled
loadTellAFriendMessageWithCompletionHandler:
numberOfPrintedPages
numberOfUserRatings
relatedItemsForRelationType:
tellAFriendBodyMIMEType
tellAFriendBodyURL
tellAFriendSubject
thumbnailImages
tweetInitialText
tweetURL
viewItemURL
bundleVersion
mediaKind
sendGiftURL
viewReviewsURL
expirationDate
_expirationDate
_properties
_tellAFriendBody
_tellAFriendBodyMIMEType
_tellAFriendHandlers
_tellAFriendRequest
_tellAFriendSubject
T@"SSItemOffer",R,N
T@"NSDate",R,N,V_expirationDate
restricted
TB,R,N,GisRestricted
highDefinition
TB,R,N,GisHighDefinition
gameCenterEnabled
TB,R,N,GisGameCenterEnabled
Tq,R,N
T@"SSItemImageCollection",R,N
initWithStoreOfferDictionary:
mediaFileSize
setMediaKind:
isProtectedMedia
_duration
_fullDuration
_mediaFileSize
_mediaKind
_protected
_url
Tq,R,N,V_fullDuration
Tq,R,N,V_mediaFileSize
T@"NSString",C,N,V_mediaKind
Tq,R,N,V_duration
protectedMedia
TB,R,N,GisProtectedMedia,V_protected
T@"NSURL",R,N,V_url
setAppIdentifier:
setShouldLaunchApp:
setLaunchOptions:
setProcessAssertionIdentifier:
setProcessAssertionInterval:
setProcessAssertionReason:
familyContentRemovalRequestWithAppIdentifier:accountPairs:
newsstandFinishRequestWithAppIdentifier:issueIdentifiers:
appIdentifier
launchOptions
processAssertionIdentifier
processAssertionInterval
processAssertionReason
shouldLaunchApp
_appIdentifier
_launchOptions
_processAssertionIdentifier
_processAssertionInterval
_processAssertionReason
_shouldLaunchApp
T@"NSString",C,N,V_appIdentifier
T@"NSDictionary",C,N,V_launchOptions
TB,N,V_shouldLaunchApp
T@"NSString",C,N,V_processAssertionIdentifier
Td,N,V_processAssertionInterval
T@"NSString",C,N,V_processAssertionReason
initWithSinfs:
initWithAccountIdentifier:rentalKeyIdentifier:
initWithDownloadIdentifier:
rentalKeyIdentifier
shouldValidateRentalInfo
setShouldValidateRentalInfo:
shouldCheckoutWithPlay
setCheckoutWithPlay:
checkoutType
setCheckoutType:
_downloadIdentifier
_rentalKeyIdentifier
_sinfs
_shouldValidateRentalInfo
_checkoutWithPlay
_checkoutType
TB,N,V_shouldValidateRentalInfo
checkoutWithPlay
TB,N,GshouldCheckoutWithPlay,V_checkoutWithPlay
TQ,V_checkoutType
iTunesStoreAccountType
initWithAccountType:
initWithBackingAccount:
setActive:
accountPropertyForKey:
backingAccountAccessQueue
_backingAccount
username
accountType
identifier
_displayedServerPromptKeyWithIdentifier:
isDirty
dirtyAccountProperties
dirtyDataclassProperties
isAuthenticated
enabledServiceTypes
_lastAttemptForServerPromptKeyWithIdentifier:
firstName
lastName
setFamilyName:
setGivenName:
stringFromPersonNameComponents:
_ss_DSID
isActive
backingAccount
ams_isDemoAccount
_ss_isDuplicate:
credential
credentialItemForKey:
ams_rawPassword
secureTokenForIdentifier:
sharedAccountsAuthenticationConfig
initWithPassword:
setCredential:
setCredentialItem:forKey:
_setAccountProperty:forKey:
setUsername:
ams_sharedAccountStoreForMediaType:
accountTypeWithAccountTypeIdentifier:
setAccountType:
setAuthenticated:
secureToken
_addAccountPropertyBitmask:forKey:
_removeAccountPropertyBitmask:forKey:
setStoreFrontIdentifier:forRequest:response:
_countryCodeFromStorefrontIdentifier:
sharedAccountsStorefrontConfig
generateSymbolicatedStackShot
_setBackingAccount:
altDSID
accountScope
currentVersionIdentifier
initWithResponseData:error:
isUserAccepted
setBagType:
setUserIdentifier:
loadValueForKey:completionBlock:
initWithBool:
valueForKeyPath:
_valueForFirstAvailableKeyPath:inDictionary:
ams_isLocalAccount
backingAccountIsLocalAccount:
setPasswordEquivalentToken:
setRawPassword:
setSecureToken:
setAccountProperty:forKey:
creditsString
ITunesPassSerialNumber
accountKind
availableServiceTypes
freeDownloadsPasswordSetting
paidPurchasesPasswordSetting
didFallbackToPassword
isSocialEnabled
accountSource
isManagedAppleID
setCreditsString:
setAccountName:
setAltDSID:
setITunesPassSerialNumber:
setStoreFrontIdentifier:
setFirstName:
setLastName:
isActiveLockerAccount
setActiveLockerAccount:
setAccountKind:
setAccountScope:
setAccountSource:
setDidFallbackToPassword:
setFreeDownloadsPasswordSetting:
setManagedAppleID:
setNewCustomer:
setPaidPurchasesPasswordSetting:
setAvailableServiceTypes:
setEnabledServiceTypes:
eligibilityForService:
setEligibility:forServiceType:
setSocialEnabled:
updateAccountPasswordSettingsWithRequestProperties:completionBlock:
accountKindFromAuthenticationResponseDictionary:
accountNameFromAuthenticationResponseDictionary:
altDSIDFromAuthenticationResponseDictionary:
backingAccountIsDemoAccount:
creditsStringFromAuthenticationResponseDictionary:
DSIDFromAuthenticationResponseDictionary:
firstNameFromAuthenticationResponseDictionary:
isManagedAppleIDFromAuthenticationResponseDictionary:
isNewCustomerFromAuthenticationResponseDictionary:
lastNameFromAuthenticationResponseDictionary:
storeFrontIdentifierFromURLResponse:
serverValueForAccountPasswordSettingValue:
automaticDownloadKinds
demoAccountRawPassword
displayedServerPromptWithIdentifier:
lastAttemptDateForServerPromptWithIdentifier:
localizedName
isDemoAccount
isDuplicate:
passwordEquivalentToken
rawPassword
setAutomaticDownloadKinds:
setDemoAccountRawPassword:
setDisplayedServerPrompt:withIdentifier:
setLastAttemptDate:forServerPromptWithIdentifier:
acceptTermsAndConditions:withCompletionBlock:
getDownloadKindsEligibleForContentRestoreWithBlock:
getEligibilityForService:completionBlock:
getPurchasedItemsForItems:completionBlock:
getTermsAndConditionsWithBlock:
addAvailableServiceTypes:
addEnabledServiceTypes:
getITunesMatchStatusWithCompletionBlock:
getKeybagSyncDataWithType:completionHandler:
hasBrokenDSID
removeAvailableServiceTypes:
removeEnabledServiceTypes:
resetTransientData
copyLockdownRepresentation
mergeValuesFromAccount:
popBiometricToken
setBiometricToken:
updateAccountPasswordSettings:
_sendMessage:withReply:
setBackingAccountAccessQueue:
_bioToken
_didFallbackToPassword
_backingAccountAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_backingAccountAccessQueue
T@"ACAccount",R,N
demoAccount
TB,R,N,GisDemoAccount
dirty
TB,R,N,GisDirty
TB,R,N,GisLocalAccount
active
TB,GisActive
activeLockerAccount
TB,GisActiveLockerAccount
newCustomer
TB,GisNewCustomer
managedAppleID
TB,GisManagedAppleID
authenticated
TB,GisAuthenticated
socialEnabled
TB,GisSocialEnabled
referrer
setReferrer:
setURLString:
_referrer
_URLString
T@"NSString",&,N,V_referrer
T@"NSString",&,N,V_URLString
_resolveCertificateURLReturningError:
certificateURLBagKey
URLBagForContext:
isNSString__
setCertificateURLBagKey:
_bagLoadSemaphore
_certificateURLBagKey
stringRepresentation
initWithAuthenticationContext:
_isAuthkitEntitled
logUUID
addErrorBlock:
completionHandlerAdapter
startWithAuthenticateResponseBlock:
resultWithTimeout:error:
forceDaemonAuthentication
unitTestModeEnabled
_performRemoteAuthenticationWithCompletion:
_accountToAuthenticateWithAuthenticationContext:
_shouldRunAuthenticationForAccount:
setAuthenticatedAccount:
setAuthenticateResponseType:
accountStoreOptions
_parentViewController
valueWithNonretainedObject:
updateAccountWithAuthKit:store:options:
updatedAccount
_verifyCredentialsOptionsFromUpdateAccountResponse:skipAuthKit:
backingAccountStore
credentialSource
setCredentialSource:
clearCachedAccounts
tokenType
resetExpirationForTokenType:
_handleDialogFromError:
_responseTypeForError:
setResponseDictionary:
finishWithResult:
verifyCredentialsForAccount:options:completion:
thenWithBlock:
addSuccessBlock:
authenticateRequest:didReceiveResponse:
requiredUniqueIdentifier
ams_iTunesAccountWithAltDSID:DSID:username:
password
initWithRequest:
present
initWithRequest:result:error:bag:
perform
authenticatedAccount
authenticateResponseType
promptStyle
isExpiredForTokenType:
localAuthenticationAvailable
logConfig
setLogConfig:
set_parentViewController:
_logConfig
__parentViewController
T@"SSLogConfig",&,N,V_logConfig
T@"UIViewController",W,N,V__parentViewController
T@"<SSAuthenticateRequestDelegate>",D,N
T@"SSAuthenticationContext",R
initWithBundleID:accountIdentifier:claimStyle:
accountDSID
claimStyle
bundleID
_claimStyle
_bundleID
_accountDSID
T@"NSString",R,N,V_bundleID
T@"NSNumber",R,N,V_accountDSID
Tq,R,N,V_claimStyle
deviceIsAppleWatch
_allowCreateAccount
_initSSAuthenticationContext
accountWithUniqueIdentifier:
allowsSilentAuthentication
canCreateNewAccount
canSetActiveAccount
shouldSuppressDialogs
shouldIgnoreAccountConversion
reasonDescription
promptTitle
okButtonLabel
signupRequestParameters
preferredITunesStoreClient
userAgentComponents
allowsBootstrapCellularData
setAllowsBootstrapCellularData:
_copyIvarsToCopy:withZone:
string
allowsRetry
cancelButtonLabel
clientIdentifierHeader
isAccountNameEditable
persistsAcrossDeviceLock
persistsPasswordFallback
requestParameters
shouldCreateNewSession
shouldFollowAccountButtons
shouldIgnoreProtocol
touchIDContinueToken
URLBagContext
contextForSignIn
initialPassword
initWithAccountIdentifier:
allowsBioAuthentication
shouldPersonalizeResponseActions
_accountName
_accountNameEditable
_accountScope
_allowsBioAuthentication
_allowsBootstrapCellularData
_allowsRetry
_allowsSilentAuthentication
_altDSID
_cancelButtonLabel
_canCreateNewAccount
_canSetActiveAccount
_clientIdentifierHeader
_forceDaemonAuthentication
_httpHeaders
_logUUID
_password
_passwordEquivalentToken
_okButtonLabel
_persistsAcrossDeviceLock
_persistsPasswordFallback
_preferredITunesStoreClient
_promptTitle
_promptStyle
_reasonDescription
_requestParameters
_requiredUniqueIdentifier
_shouldCreateNewSession
_shouldFollowAccountButtons
_shouldIgnoreAccountConversion
_shouldIgnoreProtocol
_shouldPersonalizeResponseActions
_shouldSuppressDialogs
_signupRequestParameters
_tokenType
_touchIDContinueToken
_userAgentComponents
_demoAccount
TB,R,N,V_allowsBioAuthentication
TB,R,N,V_allowsBootstrapCellularData
T@"NSString",R,C,N,V_cancelButtonLabel
T@"NSString",R,C,N,V_clientIdentifierHeader
TB,R,N,V_displaysOnLockScreen
TB,R,N,GisDemoAccount,V_demoAccount
T@"NSString",R,C,N,V_logUUID
T@"NSString",R,C,N,V_okButtonLabel
TB,R,N,V_persistsAcrossDeviceLock
T@"NSString",R,C,N,V_promptTitle
T@"NSString",R,C,N,V_reasonDescription
TB,R,N,V_shouldIgnoreProtocol
Tq,R,N,V_tokenType
T@"SSURLBagContext",R,N
TB,R,N,V_forceDaemonAuthentication
TB,R,N,V_shouldPersonalizeResponseActions
T@"NSString",R,C,N,V_accountName
Tq,R,V_accountScope
accountNameEditable
TB,R,N,GisAccountNameEditable,V_accountNameEditable
TB,R,N,V_allowsRetry
TB,R,N,V_allowsSilentAuthentication
T@"NSString",R,C,N,V_altDSID
TB,R,N,V_canCreateNewAccount
TB,R,N,V_canSetActiveAccount
T@"NSDictionary",R,C,N,V_httpHeaders
T@"NSString",R,C,N,V_password
T@"NSString",R,C,N,V_passwordEquivalentToken
TB,R,N,V_persistsPasswordFallback
T@"NSString",R,C,N,V_preferredITunesStoreClient
Tq,R,N,V_promptStyle
T@"NSDictionary",R,C,N,V_requestParameters
T@"NSNumber",R,&,N,V_requiredUniqueIdentifier
TB,R,N,V_shouldCreateNewSession
TB,R,N,V_shouldFollowAccountButtons
TB,R,N,V_shouldIgnoreAccountConversion
TB,R,N,V_shouldSuppressDialogs
T@"NSDictionary",R,C,N,V_signupRequestParameters
T@"NSString",R,C,N,V_touchIDContinueToken
T@"NSArray",R,C,N,V_userAgentComponents
setAccountNameEditable:
setCanCreateNewAccount:
setRequiredUniqueIdentifier:
setAllowsRetry:
setAllowsSilentAuthentication:
setCanSetActiveAccount:
setInitialPassword:
setLogUUID:
setPassword:
setPreferredITunesStoreClient:
setPromptStyle:
setPersistsPasswordFallback:
setShouldCreateNewSession:
setShouldFollowAccountButtons:
setShouldIgnoreAccountConversion:
setShouldIgnoreProtocol:
setShouldPersonalizeResponseActions:
setShouldSuppressDialogs:
setSignupRequestParameters:
setTouchIDContinueToken:
setUserAgentComponents:
setAllowsBioAuthentication:
setCancelButtonLabel:
setClientIdentifierHeader:
setForceDaemonAuthentication:
setOkButtonLabel:
setPersistsAcrossDeviceLock:
setPromptTitle:
setReasonDescription:
setTokenType:
setValuesWithAccount:
setDemoAccount:
TB,D,N
T@"NSString",C,D,N
TB,D,N,GisDemoAccount
Tq,D,N
Tq,D
TB,D,N,GisAccountNameEditable
T@"NSDictionary",C,D,N
T@"NSNumber",&,D,N
T@"NSArray",C,D,N
_ratingTypeForType:
uppercaseString
initWithURLString:
isServerSupplied
localAssetName
tint
ratingType
urlString
_image
_ratingType
_urlString
_value
Tq,R,V_ratingType
T@"NSString",R,C,V_urlString
T@"NSString",R,C,V_value
sharedService
openApplication:options:withResult:
_dispatchQueueSpringBoard
takeKeepAliveWithTransactionID:
launchApplicationWithIdentifier:options:error:
_getProcessID:forApplicationIdentifier:
releaseKeepAliveWithTransactionID:
initWithPID:flags:reason:name:
valid
sharedDaemonConfig
unsignedIntValue
_setApplicationState:forClientID:
setHandler:
_applicationStateMonitor
applicationInfoForApplication:completion:
_getApplicationInfoForIdentifier:key:
initWithInteger:
_stateCache
_dispatchQueueNotifications
postNotificationName:object:userInfo:
wakeAppUsingRequest:
_setReportingFrequencyOverride:
_initSSMetricsEventConfiguration
_configBooleanForKey:defaultValue:
childConfiguration
blacklistedEventFields
fieldsMap
cookieFields
unionSet:
eventFields
compoundStringWithElements:
isDisabled
isEventTypeBlacklisted:
isSendDisabled
pingURLs
getReportingFrequencyOverrideWithCompletionBlock:
_reportingFrequencyOverride
valueForConfigurationKey:
reportingURLString
tokenStringWithElements:
setReportingFrequencyOverride:
initWithGlobalConfiguration:
initWithStorePlatformData:
reportingFrequency
setChildConfiguration:
_decorateITMLEvents
disableEventDecoration
setDisableEventDecoration:
_blacklistedEvents
_childConfiguration
_config
_disabled
_disableEventDecoration
_cookieFieldsUnion
_eventFieldsUnion
_fields
_internalSettingsToken
_sendDisabled
T@"NSDictionary",R,N
T@"SSMetricsConfiguration",&,N,V_childConfiguration
TB,N,V_disableEventDecoration
initWithResult:error:
_result
T@"NSError",R,C,N,V_error
T@,R,N,V_result
setIdentifier:
setType:
type
_identifier
_type
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_type
setContentTasteItems:
setExpirationDate:
setResponseRevisionID:
isCachedResponse
_cachedResponse
_contentTasteItems
_responseRevisionID
T@"NSArray",C,N,V_contentTasteItems
T@"NSDate",C,N,V_expirationDate
TQ,N,V_responseRevisionID
TB,N,GisCachedResponse,V_cachedResponse
_cachedAccounts
_unitTestAccountsAccessQueue
_setCachedAccounts:
_ss_accountTypeWithIdentifier:error:
accountsWithAccountType:options:error:
_ss_map:
repairAccountWithBrokenDSID:
fetchAccountsQueue
accounts
ams_iTunesAccountWithUsername:
ams_iTunesAccountWithAltDSID:
accountWithAltDSID:uniqueIdentifier:accountName:scope:
accountWithAltDSID:scope:
accountWithUniqueIdentifier:scope:
accountWithAccountName:scope:
ams_iTunesAccountWithDSID:
ams_activeiTunesAccount
isExpired
itunes_allHeaderFields
iTunesStoreAccountTypePromise
promiseWithResult:
accountTypeWithIdentifier:completion:
clientInfo
setClientInfo:
accountsCacheAccessQueue
setAccountsCache:
_ss_IDMSAccountForAccount:error:
_ss_iCloudAccountForAccount:error:
_ss_appleAuthenticationAccountForAccount:error:
keyValueStore
getValueForDomain:key:usingBlock:
tokenExpirationInterval
ams_localiTunesAccountForAccountType:
accountDictionaries
sharedAccountsMigrationConfig
_excludeCopyKVSDatabasePathFromBackups
_copyKVSDatabaseWithError:
setInProcessCacheDisabled:
iTunesValueForKey:usedDomain:
_shouldRemoveAccountDictionaryWithoutMigration:reason:
_removeAccountDictionary:fromKeyValueStore:
_hashedDescriptionFromAccountDictionary:
_migrateAccountDictionary:fromKeyValueStore:originalActiveDSID:originalActiveLockerDSID:logKey:error:
_cleanupActiveAccountsAfterMigrationWithActiveDSID:activeLockerDSID:
_postAccountsChangedInternalDarwinNotification
_postAccountsChangedDarwinNotification
removeAccount:completion:
_removeAccountFromUnitTestStore:
areAccountStoreChangedNotificationsDisabled
_backingAccountForAccount:
removeAccount:withCompletionHandler:
sharedAccountsCookiesConfig
removeCookiesWithAccount:
resetExpiration
saveAccount:verifyCredentials:completion:
_saveAccount:verifyCredentials:
setValue:forDomain:key:completionBlock:
signOutAccount:completion:
removeCookiesForAccount:logKey:
boolCompletionHandlerAdapter
initWithUpdatedAccount:credentialSource:
_shouldCreateNewAccountForAccount:options:
promiseWithError:
initWithDSID:additionalQueryParams:targetIdentifier:
_updateAccountWithAuthKitViaSilentPETAuth:options:
_updateAccountWithAuthKitViaSilentPasswordAuth:options:
_updateAccountWithAuthKitViaSilentAuth:options:
_updateAccountWithAuthKitViaPromptAuth:store:options:
promiseWithAny:
dictionaryWithDictionary:
isInProcessCacheDisabled
accountsCache
databasePath
stringByDeletingPathExtension
_copyKVSDatabasePath
removeItemAtPath:error:
copyItemAtPath:toPath:error:
setResourceValue:forKey:error:
notificationQueue
_setActiveAccountIsManagedAppleIDPreference:
metricsQueue
recordAnalyticsForMetricsDialogEvent:withTopic:
refresh
bundleWithPath:
principalClass
instanceMethodSignatureForSelector:
invocationWithMethodSignature:
setTarget:
setSelector:
setArgument:atIndex:
invoke
getReturnValue:
_addAccountToUnitTestStore:
_saveAccountInUnitTestMode:ignoreValidationErrors:
saveAccount:withDataclassActions:doVerify:completion:
_disableAccountStoreChangedNotifications
_enableAccountStoreChangedNotifications
_accountDictionaryRepresentsActiveAccount:inKeyValueStore:
removeAccountFromDomain:
_accountDictionaryRepresentsActiveLockerAccount:inKeyValueStore:
setValue:forDomain:key:
_createAuthenticationController
_createAuthenticationContextForAccount:silentAuthentication:options:
_setPassword:
setShouldPreventInteractiveAuth:
authenticateWithContext:completion:
_currentProcessLinksUIKit
pointerValue
sharedApplication
keyWindow
rootViewController
presentedViewController
topViewController
setPresentingViewController:
_setProxyingForApp:
setDSID:
setDefaultButtonString:
setIsUsernameEditable:
set_passwordPromptTitle:
setServiceType:
setShouldAllowAppleIDCreation:
setShouldForceInteractiveAuth:
setShouldUpdatePersistentServiceTokens:
_setProxiedAppBundleID:
_setProxiedAppName:
setLinkType:
setServerFriendlyDescription:
setUniqueDeviceIdentifier:
setCompanionDevice:
setServiceIdentifiers:
serializedData
_isBuddyRunning
responseType
_buyParamsForBuyParamsString:
setTopic:
_recordAnalyticsForMetricsDialogEvent:withTopic:
_createUpdatedAccount:withAuthenticationResults:options:
_allowSilentPasswordAuthForAccount:withOptions:
_convertPasswordToPET:forAccount:options:
_passwordEquivalentTokenFromAlternateAccountWithAltDSID:DSID:username:
saveAccount:error:
_refreshAccount:
signOutAllAccountsWithCompletionBlock:
URLResponseAllowsSilentAuthentication:
existingDefaultStore
migrateToAccountsFramework
setAuthenticationStartedDate:
setUnitTestModeEnabled:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
accountsPromise
accountWithAccountName:
accountWithAltDSID:
accountWithAltDSID:uniqueIdentifier:accountName:
localiTunesAccount
activeSandboxAccount
resetLocalAccount
accountWithUniqueIdentifier:reloadIfNecessary:
getDefaultAccountNameUsingBlock:
isAuthenticationActive
removeAccount:error:
removeAllAccountsWithCompletion:
saveAccount:completion:
setDefaultAccountName:completionBlock:
signOutAccount:
_postAccountStoreChangeNotification
_postActiveAccountChangedNotification
_postAuthenticationActivityNotification
_optionsForProxiedAuthenticationWithVerifyCredentialsOptions:
addAccount:
reloadAccounts
setAccountCredits:forAccountWithUniqueIdentifier:
setActiveAccount:
signOutAllAccounts
setAccountsCacheAccessQueue:
setFetchAccountsQueue:
setKeyValueStore:
setMetricsQueue:
setNotificationQueue:
_inProcessCacheDisabled
_accountsCache
_accountsCacheAccessQueue
_fetchAccountsQueue
_keyValueStore
_metricsQueue
_notificationQueue
_backingAccountStore
T@"NSArray",&,N,V_accountsCache
T@"NSObject<OS_dispatch_queue>",&,N,V_accountsCacheAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_fetchAccountsQueue
inProcessCacheDisabled
TB,N,GisInProcessCacheDisabled,V_inProcessCacheDisabled
T@"SSKeyValueStore",&,N,V_keyValueStore
T@"NSObject<OS_dispatch_queue>",&,N,V_metricsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T@"SSPromise",R,N
authenticationActive
TB,R,GisAuthenticationActive
T@"ACAccountStore",R,N,V_backingAccountStore
T@"SSAccount",R,N
T@"SSAccount",R
T@"NSArray",R,C
T@"SSAccount",R,C
expired
TB,R,GisExpired
_setError:
_authenticatedAccount
_authenticateResponseType
_credentialSource
T@"SSAccount",&,N,V_authenticatedAccount
Tq,N,V_authenticateResponseType
TQ,N,V_credentialSource
T@"NSDictionary",C,N,V_responseDictionary
sharedConnection
isAutomaticAppDownloadsAllowed
isAppAnalyticsAllowed
isDiagnosticSubmissionAllowed
effectiveBoolValueForSetting:
effectiveRestrictedBoolValueForSetting:
effectiveValueForSetting:
_isExplicitContentDisallowedInCurrentStoreFront
isSettingLockedDownByRestrictions:
isRunningInStoreDemoMode
_calculateIsRestrictionsPasscodeSet
setBoolValue:forSetting:
isActiveAccountAllowedToUpdateRestrictions
integerForKey:
_isExplicitContentRestrictedByDefaultInCurrentStoreFront
setInteger:forKey:
settingEnabled
valueForKey:error:
setOfActiveRestrictionUUIDs
isExplicitContentRestrictedByDefaultInCurrentStoreFront:
isExplicitContentDisallowedInCurrentStoreFront:
isRestrictionsPasscodeSet:
setAllowExplicitContent
shouldDisplayExplicitRestrictionAlertOfType:completionBlock:
didDisplayExplicitRestrictionAlertOfType:
softwareTypes
isForced
_forced
_softwareTypes
forced
TB,R,N,GisForced,V_forced
T@"NSArray",R,C,N,V_softwareTypes
setForced:
setSoftwareTypes:
TB,D,N,GisForced
updateQueueRequest:didReceiveResponse:
startWithUpdatesResponseBlock:
initWithUpdateQueueContext:
updateQueueContext
_context
T@"<SSSoftwareUpdatesRequestDelegate>",D,N
T@"SSSoftwareUpdatesContext",R
copyUpdateItemDictionaries
setUpdateItemsWithItemDictionaries:
initWithError:
updateItems
_updateItems
T@"NSError",R
TB,R,GisFailed
_applicationWillEnterForeground
allCookiesForAccount:
configuration
_userType
_cookieValuesForConfiguration:
isBlacklistedByConfiguration:
allTableEntityPropertiesPermittedByConfiguration:externalValues:
decorateReportingURL:
applicationStateForApplication:
applicationState
_flushUnreportedEventsIfEnabled
flushUnreportedEventsWithCompletionHandler:
_handleFlushTimer
_setupFlushTimer
serialQueue
insertEvents:withCompletionHandler:
requiresDiagnosticSendingPermission
_serialQueueInsertEvents:withCompletionHandler:
setLocationPosition:
setLocationType:
setValue:forLocationKey:
_enumerateFieldValuesWithMap:fieldData:block:
_valueForField:withFieldData:
recordAnalyticsWithMetricsDialogEvent:forTopic:
setFlushTimerEnabled:
valueForMetricsField:
insertEvent:withCompletionHandler:
locationWithPosition:type:fieldData:
setGlobalConfiguration:
setPageConfiguration:
isFlushTimerEnabled
_flushSerialQueue
_flushTimerEnabled
_flushOnForeground
_flushTimerBlock
_flushTimerQueue
flushTimerEnabled
TB,N,GisFlushTimerEnabled,V_flushTimerEnabled
bagKeys
bagKeyForStringRepresentation:
valueType
_AMSBagValueTypeFromSSBagValueType:
defaultValue
addBagKey:valueType:defaultValue:
profile
profileVersion
registerBagKeySet:forProfile:profileVersion:
cache
_initWithProfile:profileVersion:
_bagChanged:
_AMSBag
setProfile:
setProfileVersion:
promiseWithSuccess
arrayForKey:withCompletion:
sharedBagCacheConfig
arrayForKey:
valueWithCompletion:
boolForKey:
dictionaryForKey:
doubleForKey:
stringForKey:
URLForKey:
nilValueCompletionHandlerAdapter
boolForKey:withCompletion:
dictionaryForKey:withCompletion:
doubleForKey:withCompletion:
integerForKey:withCompletion:
stringForKey:withCompletion:
URLForKey:withCompletion:
arrayPromiseForKey:
boolPromiseForKey:
dictionaryPromiseForKey:
doublePromiseForKey:
integerPromiseForKey:
stringPromiseForKey:
URLPromiseForKey:
bagForProfile:profileVersion:
bagWithProfileConfig:
removeAllDebugBackingDictionaries
setDebugBackingDictionary:forProfileConfig:
T@"NSMutableDictionary",R,N
profileConfig
resetCaches
URLIsTrusted:
canHandleTrustedDomains
_profile
_profileVersion
T@"NSString",&,N,V_profile
T@"NSString",&,N,V_profileVersion
TB,R,N,GisExpired
T@"NSDate",R,N
T@"SSBagProfileConfig",R,N
fileURLWithPath:isDirectory:
initWithDatabaseURL:readOnly:protectionType:
_setupDatabase
setSetupBlock:
performTransactionWithBlock:
_database
initWithToken:error:
apiToken
setApiToken:
_apiToken
T@"NSString",C,N,V_apiToken
T@"NSError",C,N,V_error
_runBlock
resultBeforeDate:error:
stateLock
condition
executeBlockLock
executedBlock
setExecutedBlock:
setExecuteBlockLock:
_executedBlock
_executeBlockLock
T@"NSLock",&,N,V_executeBlockLock
TB,N,V_executedBlock
fileSystemRepresentation
bagKeysDictionary
bagLoadTimeout
setBagLoadTimeout:
setBagKeysDictionary:
_bagLoadTimeout
_bagKeysDictionary
T@"NSDictionary",&,N,V_bagKeysDictionary
Td,N,V_bagLoadTimeout
T@"NSString",C,N,V_profile
T@"NSString",C,N,V_profileVersion
mutableBagKeysDictionary
registerBagKey:valueType:defaultValue:
initWithStringRepresentation:valueType:defaultValue:
registerBagKey:valueType:
setMutableBagKeysDictionary:
_mutableBagKeysDictionary
T@"NSMutableDictionary",&,N,V_mutableBagKeysDictionary
Td,D,N
_globalPromiseStorageAccessQueue
_globalPromiseStorage
backingPromise
_removeFromGlobalPromiseStorage
waitUntilFinished
waitUntilFinishedWithTimeout:
promiseWithPromise:
promiseAdapter
setBackingPromise:
_backingPromise
T@"SSPromise",&,N,V_backingPromise
countForObject:
_transactionCount
_transactionStore
offerMedia
initWithDialogDictionary:
setSizeLimitsWithStoreConstraintDictionary:
initWithOfferDeviceDicitionary:
initWithDeviceIdentifier:
actionDisplayName
confirmationDialog
documentCannotOpenDialog
documentRequiredHandlers
documentUTI
isOneTapOffer
successDialog
supportedDevices
accountIdentifiers
estimatedDiskSpaceNeeded
requiredSoftwareCapabilities
setActionDisplayName:
setOneTapOffer:
setPriceDisplay:
shouldShowPlusIcon
_offerItem
_offerDictionary
_supportedDevices
T@"SSItem",N,G_offerItem,S_setOfferItem:,V_item
T@"NSSet",R,N
T@"NSString",R,N,V_offerIdentifier
oneTapOffer
TB,R,N,GisOneTapOffer
preorder
TB,R,N,GisPreorder
T@"SSItemMedia",R,N
T@"SSDialog",R,N
T@"SSNetworkConstraints",R,N
initWithPushNotificationParameters:
pushNotificationParameters
setPushNotificationParameters:
T@"SSVPushNotificationParameters",C,N,V_parameters
_initWithMessage:title:URLTitle:URL:
deviceIdentifier
incompatibleDeviceError
incompatibleSystemError
minimumProductVersion
_deviceIdentifier
_incompatibleDeviceError
_incompatibleSystemError
_minimumProductVersion
Tq,R,N,V_deviceIdentifier
T@"NSString",R,N,V_minimumProductVersion
T@"SSItemOfferDeviceError",R,N,V_incompatibleDeviceError
T@"SSItemOfferDeviceError",R,N,V_incompatibleSystemError
localizedMessage
localizedTitle
localizedURLTitle
_localizedMessage
_localizedTitle
_localizedURLTitle
T@"NSString",R,N,V_localizedMessage
T@"NSString",R,N,V_localizedTitle
T@"NSString",R,N,V_localizedURLTitle
__book_downloadsForStati:overrideFinished:overrideFailed:
_resetAllDownloads
__book_sendDownloadsChanged:filterBooks:
__book_cancelDownloads:completionBlock:
__book_dispatchBlock:withError:
__book_filterDownloads:withResult:
moveDownload:afterDownload:completionBlock:
moveDownload:beforeDownload:completionBlock:
__book_resumeDownloads:completionBlock:
resumeDownloads:completionBlock:
restartDownloads:completionBlock:
_copyDownloadsForMessage:downloadIDs:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
__book_getAllDownloads
__book_pauseDownloads:completionBlock:
_pauseDownloads:forced:completionBlock:
downloadID
cancelDownloadWithID:withCompletion:
pauseDownloadWithID:withCompletion:
resumeDownloadWithID:withCompletion:
initWithDownloadStatus:
setDownloadPhaseIdentifierOverride:
objectsPassingTest:
_sendDownloadsChanged:
downloadQueue:downloadStatesDidChange:
downloadQueue:downloadStates:didCompleteWithError:
bookDownloads
_downloadQueue
_setSizeLimit:forNetworkType:
_sizeLimitForNetworkType:
_disableAllNetworkTypes
_copySizeLimits
_newModernNetworkConstraintsWithArray:
_newLegacyNetworkConstraintsWithDictionary:
_addNetworkConstraintsToDictionary:forNetworkType:legacyDictionary:
setAllNetworkTypesDisabled
networkConstraintsForDownloadKind:fromBag:
newNetworkConstraintsByDownloadKindFromURLBag:
disableCellularNetworkTypes
hasSizeLimitForNetworkType:
isAnyNetworkTypeEnabled
sizeLimitForNetworkType:
_sizeLimits
anyNetworkTypeEnabled
TB,R,GisAnyNetworkTypeEnabled
newConditionWithDictionary:
evaluateWithContext:
_operator
getLibraryItemForBundleIdentifiers:completionBlock:
_bundleIdentifier
_bundleVersion
_externalVersion
documentProxyForName:type:MIMEType:
applicationsAvailableForOpeningWithError:
itemLookupBlock
platformName
_restrictionName
systemVersion
initWithDictionary:conditionalContext:
_dictionaryByEvaluatingWithForcedValue:
_dictionaryByEvaluatingDictionary:withForcedValue:
_arrayByEvaluatingChildrenOfArray:withForcedValue:
_logicalOperatorForString:
defaultConditionalContext
_checkConditions:withOperator:
_dictionaryByEvaluatingChildrenOfDictionary:withForcedValue:
setDefaultConditionalContext:
dictionaryByEvaluatingConditions
dictionaryByRemovingConditions
setItemLookupBlock:
setPlatformName:
setSystemVersion:
_itemLookupBlock
_platformName
_systemVersion
T@?,C,N,V_itemLookupBlock
T@"NSString",C,N,V_platformName
T@"NSString",C,N,V_systemVersion
deviceIsiPhone
_userAgentClientNameForInfoPlist:
_userAgentClientVersionForInfoPlist:clientName:
sendSynchronousMessage:withReply:
_cacheKeyValueStoreValues
_getDeviceType:error:
copyCachedAvailableItemKinds
setIgnoresCaches:
promptNeedsDisplay:
storeFrontIdentifierPromise
_newLegacyUserAgent:
userAgentWithBundleRef:isCachable:
_newModernUserAgentWithClientName:version:isCachable:
_copyCarrierBundleEligibilityWithStatus:
_deviceType
_updateAutomaticDownloadKinds:withValue:completionBlock:
_copyProductType
_deviceTypeForProductType:
_productVersion
_is720pCapable
_is1080pCapable
productType
compatibleProductType
copyDeviceGUID
_userAgentClientNameForBundleID:
userAgentWithClientName:version:
setStoreFrontIdentifier:account:
debugLogsEnabled
getValuesForDomain:keys:count:usingBlock:
_deviceTypeForUnknownIPad:
_deviceTypeForUnknownIPhone:
_deviceTypeForUnknownIPod:
_deviceTypeForUnknownAppleTV:
_screenClass
_deviceClass
_diskCapacityString
_fairPlayDeviceTypeString
_appleTVProductVersion
setCachedAvailableItemKinds:
initWithContentsOfFile:
_userAgentClientNameForAppleTVBundleID:
infoDictionary
setStoreFrontIdentifier:accountIdentifier:
setLastPromptAttemptDate:forPromptWithIdentifier:
setPromptWithIdentifier:needsDisplay:
deviceIsAppleTV
deviceIsiPad
deviceIsiPod
deviceIsSeedBuild
clientVersion
clientName
cloudMediaLibraryIdentifier
copyStoreFrontRequestHeaders
deviceTypeIdentifier
getAvailableItemKindsWithBlock:
getCellularNetworkingAllowedWithBlock:
loadStoreFrontWithCompletionHandler:
sdk_loadStorefrontCountryCode:
sdk_loadStoreFrontIdentifier:
mediaLibraryIdentifier
setCellularNetworkingAllowed:
setStoreFrontWithResponseHeaders:
showPromptWithIdentifier:completionHandler:
legacyUserAgent
batteryLevel
carrierBundleStatusForService:
deviceType
getCarrierBundleStatusForService:completionHandler:
getMachineIdentifier:otp:forAccountIdentifier:
isPluggedIn
enableAllAutomaticDownloadKindsWithCompletionBlock:
minusAutomaticDownloadKinds:withCompletionBlock:
productVersion
screenScale
setAutomaticDownloadKinds:withCompletionBlock:
setCloudMediaLibraryIdentifier:
setMediaLibraryIdentifier:
setSoftwareLibraryIdentifier:
startPowerMonitoring
stopPowerMonitoring
deviceBiometricStyle
synchronizeAutomaticDownloadKinds
thinnedApplicationVariantIdentifier
unionAutomaticDownloadKinds:withCompletionBlock:
userAgentWithBundleIdentifier:version:
_copyKeyValueStoreValueForDomain:key:
_invalidateAutomaticDownloadKinds
_invalidatePhoneNumber
_invalidateSoftwareCUID
_postStoreFrontDidChangeNotification
_reloadPluggedInState
_updateBatteryLevelFromService:
isStoreFrontIdentifierTransient
reloadStoreFrontIdentifier
setStoreFrontIdentifier:account:isTransient:
setStoreFrontIdentifier:accountIdentifier:isTransient:
setStoreFrontIdentifier:isTransient:
synchedStoreFrontIdentifier
_automaticDownloadKinds
_biometricStyle
_cloudMediaLibraryIdentifier
_legacyUserAgent
_localStoreFrontIdentifier
_mediaLibraryIdentifier
_phoneNumber
_productType
_softwareLibraryIdentifier
_udid
_userAgent
_clientName
TI,R
pluggedIn
TB,R,GisPluggedIn
initWithClientToken:
clientToken
_clientToken
T@"NSString",R,C,N,V_clientToken
currentBoolValue
setDomain:
fallbackNumberValue
setFallbackNumberValue:
setKey:
shouldInvertBoolValue
setShouldInvertBoolValue:
_domain
_fallbackNumberValue
_key
_shouldInvertBoolValue
T@"NSString",C,N,V_domain
T@"NSNumber",C,N,V_fallbackNumberValue
T@"NSString",C,N,V_key
TB,N,V_shouldInvertBoolValue
coordinate
_lookupWithRequest:error:
_setMetricsPageEvent:
initWithBaseURL:location:
pointOfInterestIdentifier
pointOfInterestProviderIdentifier
pointOfInterestProviderURL
setPointOfInterestIdentifier:
setPointOfInterestProviderIdentifier:
setPointOfInterestProviderURL:
location
_baseURLString
_location
T@"CLLocation",R,V_location
setBundleVersion:
setExternalVersionIdentifier:
externalVersionIdentifier
_externalVersionIdentifier
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_bundleVersion
T@"NSNumber",C,N,V_externalVersionIdentifier
T@"NSString",C,N,V_itemIdentifier
initWithLocaleIdentifier:
setLocale:
_initCommon
HTTPBodyStream
allHTTPHeaderFields
encodeInteger:forKey:
encodeDouble:forKey:
decodeIntegerForKey:
decodeDoubleForKey:
clientAuditBundleIdentifier
clientAuditTokenData
getBytes:length:
URLs
allowedRetryCount
URLBagType
isEqualToArray:
setAllHTTPHeaderFields:
additionalMetrics
clientIdentifier
expectedContentLength
shouldProcessProtocol
shouldSendSecureToken
clientBundleIdentifier
URLBagKey
canBeResolved
isLargeDownload
KBSyncType
requiresCellularDataNetwork
requiresExtendedValidationCertificates
requiresExternal
requiresHTTPS
shouldAddKBSyncData
shouldDisableCellularFallback
shouldDisableReversePush
shouldDisableReversePushSampling
URLBagURLBlock
_additionalMetrics
_allowedRetryCount
_cachePolicy
_clientAuditBundleIdentifier
_clientAuditTokenData
_clientIdentifier
_expectedContentLength
_httpBody
_httpBodyStream
_httpMethod
_isITunesStoreRequest
_kbsyncType
_largeDownload
_networkServiceType
_requiresCellularDataNetwork
_requiresExtendedValidationCertificates
_requiresExternal
_requiresHTTPS
_shouldDecodeResponse
_shouldDisableCellular
_shouldDisableCellularFallback
_shouldDisableReversePush
_shouldDisableReversePushSampling
_shouldProcessProtocol
_shouldSendSecureToken
_shouldSetCookies
_timeoutInterval
_urlBagKey
_urlBagType
_urlBagURLBlock
_urls
T@"NSData",R,C
T@"NSInputStream",R,&
largeDownload
TB,R,GisLargeDownload
T@?,R,C
TB,R,GisITunesStoreRequest
T@"NSURL",R,&
setURLs:
setAdditionalMetrics:
setClientIdentifier:
setShouldDisableCellular:
setShouldDisableCellularFallback:
setShouldDisableReversePush:
setShouldDisableReversePushSampling:
setKBSyncType:
setLargeDownload:
setMultiPartFormDataWithDictionary:
setRequiresCellularDataNetwork:
setRequiresExtendedValidationCertificates:
setRequiresExternal:
setRequiresHTTPS:
setShouldAddKBSyncData:
setShouldDecodeResponse:
setShouldProcessProtocol:
setShouldSendSecureToken:
setShouldSetCookies:
setClientAuditBundleIdentifier:
setClientAuditTokenData:
setURLBagType:
setURLBagURLBlock:
T@"NSDictionary",C,D
TB,D
T@"NSString",C,D
T@"NSData",C,D
T@"NSInputStream",&,D
TB,D,GisLargeDownload
T@?,C,D
T@"NSArray",C,D
TQ,D
TB,D,GisITunesStoreRequest
Td,D
T@"NSURL",&,D
setSubscriptionStatus:forAccountUniqueIdentifier:
subscriptionStatusForAccountUniqueIdentifier:
_accountUniqueIdentifierToSubscriptionStatus
suggestedFilename
initWithURL:statusCode:HTTPVersion:headerFields:
_CFURLResponse
storeCorrelationID
_bodyData
T@"SSMetricsPageEvent",&,N,V_metricsPageEvent
T@"NSData",R,N,V_bodyData
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
localizedDescription
bytes
initWithPlayInfoContext:
SICData
initWithPlayInfoData:error:
playInfoRequest:didReceiveResponse:
startWithPlayInfoResponseBlock:
playInfoContext
playInfoResponse
T@"<SSPlayInfoRequestDelegate>",D,N
T@"SSPlayInfoRequestContext",R
T@"SSPlayInfoResponse",R
contentIdentifier
setContentIdentifier:
playbackType
setPlaybackType:
playerGUID
setPlayerGUID:
setSICData:
_contentIdentifier
_playerGUID
_sic
_playbackType
T@"NSString",C,N,V_playerGUID
T@"NSData",C,N,V_sic
T@"NSArray",C,N,V_sinfs
T@"NSNumber",C,N,V_contentIdentifier
T@"NSString",C,N,V_playbackType
playInfoData
_playInfoData
T@"NSError",R,N,V_error
T@"NSData",R,N,V_playInfoData
assetForFlavor:
performMigration:completionBlock:
investigateNetworks
investigateNetworksWithCompletionBlock:
buttons
initWithTitle:actionDictionary:
buttonTitle
_setValue:forProperty:
defaultButton
setDefaultButton:
dialogDictionary
dialogKind
setButtons:
_buttons
_dialogDictionary
T@"SSDialogButton",&,N
valueForActionProperty:
buttonWithTitle:
actionParameter
buttonAction
URLTarget
_actionDictionary
_title
isVPPLicensed
isRevoked
dataContainerURL
profileValidated
receiptPathForProxy:
receiptExpired
getReceiptPathWithCompletionBlock:
vppStateFlagsWithProxy:
initWithContainerPath:
isValid
_purchaseReceipt
_isValid
TB,R,V_isValid
T@"NSDate",R
_accountTypesCache
_correspondingAccountWithAccountTypeIdentifier:forAccount:error:
accountsWithAccountType:
_ss_altDSID
_ss_hashedDescription
_ss_iTunesAccountForAccount:error:
initWithAuthorizationToken:accountIdentifier:
authorizationRequest:didReceiveResponse:
startWithAuthorizationResponseBlock:
_init
authorizationToken
allowSilentAuthentication
setAllowSilentAuthentication:
familyAccountIdentifier
setFamilyAccountIdentifier:
keybagPath
setKeybagPath:
reason
shouldAddKeysToKeyBag
setShouldAddKeysToKeyBag:
shouldPromptForCredentials
setShouldPromptForCredentials:
_allowSilentAuthentication
_keybagPath
_token
_reason
_shouldAddKeysToKeyBag
_shouldPromptForCredentials
_familyAccountIdentifier
T@"<SSAuthorizationRequestDelegate>",D,N
T@"NSNumber",C,V_accountIdentifier
TB,N,V_allowSilentAuthentication
T@,R
T@"NSString",C,V_clientIdentifierHeader
T@"NSNumber",C,V_familyAccountIdentifier
T@"NSString",C,V_keybagPath
T@"NSString",C,V_reason
TB,N,V_shouldAddKeysToKeyBag
TB,N,V_shouldPromptForCredentials
T@"NSString",C,V_userAgent
imageScale
width
height
imageKind
numberWithFloat:
_setValue:forKey:
substringToIndex:
imageOrientation
initWithArtworkDictionary:
imageSize
setImageKindWithTypeName:variantName:
_imageKind
T{CGSize=dd},R,N
T@"NSString",C,N,V_imageKind
T@"NSURL",&,N
Td,R,N
prerendered
TB,R,N,GisPrerendered
_dataToSignWithDataSource:
dataToSignWithRequestProperties:
signatureComponents
_policyType
_signatureComponents
Tq,R,N,V_policyType
T@"NSArray",R,C,N,V_signatureComponents
valueForHTTPHeader:
valueForQueryParameter:
componentType
_componentType
Tq,R,N,V_componentType
T@"NSString",R,C,N,V_key
_newImagesForDictionary:
imagesForSize:
_imagesForSize:scale:
sortedArrayUsingFunction:context:
_itemImages
T@"NSArray",R,N,V_itemImages
startWithCompletion:
sharedClient
popQueuedNotifications
registerForRemoteNotifications
unregisterForRemoteNotifications
_notifyToken
JSONObjectWithData:options:error:
_valueForAlertKey:
_valueForAPSKey:
dateWithTimeIntervalSince1970:
alertBodyString
alertCancelString
alertOKString
alertTitleString
explicitContent
artworkUrl
badgeValue
category
metrics
soundFileName
tapUrl
version
notificationUserInfo
_userInfo
collectURLSessionDataWithBlock:
databaseTable
userIdentifier
bagType
ams_DSID
cacheKey
setName:
allHTTPHeaders
setAllHTTPHeaders:
allowsExpiredBags
setAllowsExpiredBags:
ignoresCaches
usesCachedBagsOnly
setUsesCachedBagsOnly:
_allowsExpiredBags
_bagType
_ignoresCaches
_userIdentifier
_usesCachedBagsOnly
TB,N,V_allowsBootstrapCellularData
TB,N,V_allowsExpiredBags
T@"NSData",&,N,V_clientAuditTokenData
TB,N,V_usesCachedBagsOnly
Tq,N,V_allowedRetryCount
Tq,N,V_bagType
TB,N,V_ignoresCaches
T@"NSNumber",&,N,V_userIdentifier
ratingSystem
rank
_isRatingSystemForApps:
_isRatingSystemForMovies:
_isRatingSystemForTV:
ratingSystemFromString:
_setValueCopy:forProperty:
stringForRatingSystem:
ratingDescription
ratingLabel
setRank:
setRatingDescription:
setRatingLabel:
setRatingSystem:
setShouldHideWhenRestricted:
shouldHideWhenRestricted
ratingSystemLogo
_isRatingSystemForMusic:
T@"SSItemArtworkImage",R,N
TB,R,N,GisExplicitContent
Tq,N
_updatedAccount
TQ,R,N,V_credentialSource
T@"SSAccount",R,N,V_updatedAccount
enqueuerProperties
isSBEnabled
timeZone
secondsFromGMT
isPrivateListeningEnabled
eventTimeZone
containerType
itemEndTime
endReasonType
displayType
lyricsDisplayedCharacterCount
lyricsLanguage
featureName
itemDuration
mediaType
isOffline
persistentID
eventDate
recommendationData
sourceType
itemStartTime
timedMetadata
trackInfo
itemType
requestingBundleIdentifier
requestingBundleVersion
householdID
isSiriInitiated
containerID
externalID
personalizedContainerID
storeID
reasonHintType
itemIDs
radioAdamID
subscriptionAdamID
equivalencySourceAdamID
purchasedAdamID
cloudID
lyricsID
containerIDs
stationHash
stationStringID
stationID
adamID
cloudAlbumID
globalPlaylistID
playlistVersionHash
cloudPlaylistID
defaultOverrideHTTPHeaderFields
propertyListObjectWithPlayActivityEvent:
currentStoreFrontID
setCurrentStoreFrontID:
_currentStoreFrontID
T@"NSString",C,N,V_currentStoreFrontID
paymentSheet
setPaymentSheet:
biometricAuthorizationAttempts
setBiometricAuthorizationAttempts:
challenge
setChallenge:
touchIDDelayEnabled
setTouchIDDelayEnabled:
consolidatedDialog
setConsolidatedDialog:
didAuthenticate
setDidAuthenticate:
didBuyParamsChange
setDidBuyParamsChange:
fpanID
setFpanID:
isExtendedAction
setIsExtendedAction:
isIdentityMapInvalid
setIsIdentityMapInvalid:
isPayment
setIsPayment:
paymentTokenData
setPaymentTokenData:
redirectURL
setRedirectURL:
shouldContinueTouchIDSession
setShouldContinueTouchIDSession:
shouldSendFallbackHeader
setShouldSendFallbackHeader:
signature
setSignature:
xAppleAMDHeader
setXAppleAMDHeader:
xAppleAMDMHeader
setXAppleAMDMHeader:
_touchIDDelayEnabled
_didAuthenticate
_didBuyParamsChange
_isExtendedAction
_isIdentityMapInvalid
_isPayment
_shouldContinueTouchIDSession
_shouldSendFallbackHeader
_paymentSheet
_biometricAuthorizationAttempts
_challenge
_consolidatedDialog
_dialogId
_fpanID
_paymentTokenData
_signature
_xAppleAMDHeader
_xAppleAMDMHeader
T@"NSString",C,V_accountName
Tq,V_biometricAuthorizationAttempts
T@"NSString",C,V_challenge
TB,V_touchIDDelayEnabled
T@"SSConsolidatedDialog",&,V_consolidatedDialog
T@"NSString",C,V_dialogId
TB,V_didAuthenticate
TB,V_didBuyParamsChange
TB,V_didFallbackToPassword
T@"NSString",C,V_fpanID
TB,V_isExtendedAction
TB,V_isIdentityMapInvalid
TB,V_isPayment
T@"NSString",C,V_passwordEquivalentToken
T@"SSPaymentSheet",&,V_paymentSheet
T@"NSData",C,V_paymentTokenData
T@"NSURL",C,V_redirectURL
TB,V_shouldContinueTouchIDSession
TB,V_shouldSendFallbackHeader
T@"NSString",C,V_signature
T@"NSString",C,V_xAppleAMDHeader
T@"NSString",C,V_xAppleAMDMHeader
_enumerateAssetsUsingBlock:
HLSKeyCertificateURL
HLSKeyServerURL
HLSPlaylistURL
isiTunesStoreStream
itemDictionary
_itemDictionary
T@"NSDictionary",R,C,N,V_itemDictionary
T@,R,C,N
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
initWithXPCData:
xpcData
initWithXPCConnection:
_initSSXPCConnection
_reloadEventHandler
copyReplyQueue
setReplyQueue:
_disconnectBlock
_replyQueue
_messageBlock
_connectAfterDaemonLaunch
_connectAsObserver
_initSSDownloadManagerWithOptions:
_sendGlobalHandler:
makeObjectsPerformSelector:
_insertDownloads:before:after:completionBlock:
weakObjectsHashTable
shouldFilterExternalOriginatedDownloads
_sendMessage:withCompletionBlock:
_copyDownloads
_moveDownload:before:after:completionBlock:
setDownloads:forKinds:completionBlock:
EBookDownloadKinds
IPodDownloadKinds
softwareDownloadKinds
retryAllRestoreDownloads
_handleReply:forDownloads:message:isRetry:block:
addIndex:
_sendObserverConnection
_loadDownloadKindsUsingNetwork
_handleMessage:fromServerConnection:
_reloadIsUsingNetworkWithDownloadKinds:
_localExternalValues
_setLocalExternalValues:
_localValues
_setLocalValues:
prefetchedDownloadExternalProperties
prefetchedDownloadProperties
_setDirtyCachedExternalProperties:
_setDirtyCachedProperties:
_handleDownloadKindsUsingNetworkChanged:
_handleDownloadsChanged:
_handleDownloadStatesChanged:
_copyDownloadKindsUsingNetwork
persistenceIdentifier
firstObjectCommonWithArray:
_sendMessageToObservers:
_newOptionsDictionary
reconnectToLSApplicationWorkspace
removePersistenceIdentifier:
setDownloadHandler:
EBookDownloadManager
IPodDownloadManager
softwareDownloadManager
allStoreDownloadKinds
ITunesDownloadKinds
reevaluateBackgroundDownloadsForBundleIdentifiers:
_triggerDownloads
activeDownloads
cancelAllDownloadsWithCompletionBlock:
finishDownloads:
insertDownloads:afterDownload:completionBlock:
insertDownloads:beforeDownload:completionBlock:
pauseDownloads:completionBlock:
setDownloads:completionBlock:
_pauseDownloads:completionBlock:
_supportsSoftwareKind
_activeDownloads
_activeDownloadsChanged
_backgroundQueue
_downloads
_downloadsChanged
_isUsingNetwork
_observerConnection
_observerQueue
_options
_removedDownloads
_launchNotificationToken
T@"SSDownloadManagerOptions",R
ignoreDivertedDownloads
setShouldFilterExternalOriginatedDownloads:
setIgnoreDivertedDownloads:
_downloadKinds
_filterExternalOriginatedDownloads
_persistenceIdentifier
_prefetchedDownloadExternalProperties
_prefetchedDownloadProperties
_ignoreDivertedDownloads
T@"NSArray",C,N,V_prefetchedDownloadExternalProperties
TB,N,V_ignoreDivertedDownloads
T@"NSArray",C,N,V_downloadKinds
T@"NSString",C,N,V_persistenceIdentifier
T@"NSArray",C,N,V_prefetchedDownloadProperties
TB,N,V_filterExternalOriginatedDownloads
headerADSID
setHeaderADSID:
headerGSToken
setHeaderGSToken:
headerGuid
setHeaderGuid:
headerMMeClientInfo
setHeaderMMeClientInfo:
headerMMeDeviceId
setHeaderMMeDeviceId:
setParameters:
_headerADSID
_headerGSToken
_headerGuid
_headerMMeClientInfo
_headerMMeDeviceId
T@"NSString",C,N,V_headerADSID
T@"NSString",C,N,V_headerGSToken
T@"NSString",C,N,V_headerGuid
T@"NSString",C,N,V_headerMMeClientInfo
T@"NSString",C,N,V_headerMMeDeviceId
T@"NSData",C,N,V_parameters
T@"NSString",C,N,V_URLString
context
initWithSilentEnrollmentContext:
setContext:
T@"SSSilentEnrollmentContext",&,V_context
_ensureTelephonyHandlesAreReady
_operatorName
initWithBundleType:
copyCarrierBundleValue:key:bundleType:error:
copyMobileSubscriberCountryCode:error:
copyMobileSubscriberNetworkCode:error:
_registrationStatus
getMobileEquipmentInfoFor:error:
IMEI
slotID
phoneNumberWithDigits:digits:countryCode:
sharedMessageCenter
canonicalFormat
sendSMSWithText:text:serviceCenter:toAddress:
_updateRegistrationStatus
_updateOperatorName
_updatePhoneNumber
_telephonyClient
_telephonySubscriptionContext
_hasRequiredTelephonyEntitlement
initWithQueue:
processInfo
processName
getUserDefaultVoiceSubscriptionContext:
getActiveContexts:
subscriptions
getPhoneNumber:error:
number
getLocalizedOperatorName:error:
copyRegistrationStatus:error:
suppServicesEvent:event:settingsType:data:
spcUnlockSuccessful:
phoneBookSelected:
phoneBookFetched:
phoneBookWritten:
phoneBookError:
phoneNumberAvailable:
phoneNumberChanged:
suppServicesStarted:
suppServicesCompleted:
suppServicesError:error:
subscriptionInfoDidChange
activeSubscriptionsDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
operatorNameChanged:name:
displayStatusChanged:status:
signalStrengthChanged:info:
rejectCauseCodeChanged:causeCode:
voiceLinkQualityChanged:metric:
enhancedVoiceLinkQualityChanged:metric:
enhancedDataLinkQualityChanged:metric:
imsRegistrationChanged:info:
cellChanged:cell:
cellMonitorUpdate:info:
networkListAvailable:list:
customerServiceProfileChanged:visible:
networkSelected:success:mode:
networkReselectionNeeded:
encryptionStatusChanged:info:
ratSelectionChanged:selection:
nrDisableStatusChanged:status:
plmnChanged:plmn:
T@"SSVTelephonyController",R
operatorName
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
registrationStatus
sendSMSWithText:toPhoneNumber:countryCode:error:
_telephonyCallbackQueue
_isPhoneNumberAccessRestricted
_hasTelephonyCapability
phoneNumberAccessRestricted
TB,R,N,GisPhoneNumberAccessRestricted
cancelLabel
setCancelLabel:
_cancelLabel
T@"NSString",C,V_cancelLabel
T@"NSString",C,V_title
_getValues:forProperties:count:message:
getValues:forExternalProperties:count:
_persistentIdentifier
__addCachedExternalValues:
__addCachedPropertyValues:
exists
resetCachedExternalProperties:count:
resetCachedProperties:count:
_pid
_dirtyLocalExternalProperties
_dirtyLocalProperties
T@"NSDictionary",C,G_localExternalValues,S_setLocalExternalValues:
T@"NSDictionary",C,G_localValues,S_setLocalValues:
_managed
TB,R,G_isManaged
_connectToDaemon
_sendDisconnectMessage
_sendAuthenticationSessionWithMessage:
_sendSessionHandleWithMessage:
_sendSessionCancelWithMessage:
_sendSessionPauseWithMessage:
_controlConnection
_initWithMessage:controlConnection:
downloadHandler:handleAuthenticationSession:
downloadHandlerDidDisconnect:
downloadHandler:cancelSession:
_newSessionWithMessage:
downloadHandler:handleSession:
downloadHandler:pauseSession:
downloadPhasesToIgnore
resetDisavowedSessions
sessionsNeedPowerAssertion
sessionsShouldBlockOtherDownloads
setDownloadPhasesToIgnore:
setSessionsNeedPowerAssertion:
setSessionsShouldBlockOtherDownloads:
_delegateQueue
_downloadPhasesToIgnore
_handlerID
_sessionsNeedPowerAssertion
_sessionsShouldBlockOtherDownloads
T@"<SSDownloadHandlerDelegate>"
predicateWithFormat:
filteredArrayUsingPredicate:
shouldHandleSafariScriptURL:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
startWithDetailedResponseBlock:
startWithMetadataResponseBlock:
skipDownloads
setSkipDownloads:
_skipDownloads
TB,N,V_skipDownloads
initWithResponseDictionary:
_valueForProtocolKey:
_dialogActionWithDialog:
_dialogActionWithTouchIDDialog:
_invalidateURLBagsAction
_copyAccount
_setActiveAccountActionWithAccount:
_setCreditsActionWithCredits:account:
_actionWithActionType:
_urlActionWithType:URL:
_selectFooterActionWithSection:
_checkInAppQueueActionWithClientID:environment:
actions
initWithURLResponse:dictionary:
newAccount
actionsWithActionType:
failureType
isSupportedProtocolVersion
versionMismatchURL
T@"NSDictionary",R,N,V_dictionary
supportedProtocolVersion
TB,R,N,GisSupportedProtocolVersion
account
dialog
footerSection
_account
_actionType
_creditsString
_dialog
_footerSection
T@"NSString",R,N,V_actionType
T@"SSAccount",R,N,V_account
T@"NSString",R,N,V_clientIdentifier
T@"NSString",R,N,V_creditsString
T@"SSDialog",R,N,V_dialog
T@"NSString",R,N,V_footerSection
Tq,R,N,V_urlBagType
checkQueueForClientWithIdentifier:URLBagContext:
initWithLocationResponseDictionary:
dateWithTimeIntervalSinceNow:
_applyValuesToCopy:
_requestWithType:
_actionParameterValue
setKDChannelIdentifier:
_setKDMovieIdentifier:
setParameterValues:
setStartsLeaseSession:
setHTTPHeaderFields:
_setActionType:
_setCertificateData:
_setURL:
_copyWithLeaseType:
_copyBodyDictionaryWithFairPlaySession:
_URLBagKey
KDChannelIdentifier
parameterValues
HTTPHeaderFields
startsLeaseSession
_certificateData
_leaseType
_KDMovieIdentifier
_URL
_httpHeaderFields
_kdChannelIdentifier
_kdMovieIdentifier
_startsLeaseSession
T@"NSString",R,C,N,G_actionParameterValue
T@"NSString",R,C,N,G_URLBagKey
Tq,N,G_actionType,S_setActionType:,V_actionType
Tq,R,N,G_leaseType,V_leaseType
TQ,N,G_KDMovieIdentifier,S_setKDMovieIdentifier:,V_kdMovieIdentifier
T@"NSData",C,N,G_certificateData,S_setCertificateData:,V_certificateData
T@"NSURL",C,N,G_URL,S_setURL:,V_url
TQ,N,V_kdChannelIdentifier
T@"NSDictionary",C,N,V_parameters
T@"NSDictionary",C,N,V_httpHeaderFields
TB,N,V_startsLeaseSession
_valueForFirstAvailableKey:
accountUniqueIdentifier
isManagedStudent
token
_responseTypeForFailureType:
_responseTypeForErrorNumber:
_responseTypeForStatusValue:
userMessage
Tq,V_urlBagType
T@"NSDictionary",R,V_responseDictionary
managedStudent
TB,R,GisManagedStudent
TB,R,GisNewCustomer
_loadWithCompletionBlock:
indexOfObjectPassingTest:
_drainPendingLookupsWithError:
_loadURLBag
setURLBag:forContext:
getTrustForURL:completionBlock:
existingBagDictionary
_ignoreCacheForNextLookup
_pendingLookups
_storeFrontIdentifier
T@"NSString",R,V_storeFrontIdentifier
T@"SSURLBagContext",R
rangeOfString:
uppercaseLetterCharacterSet
rangeOfCharacterFromSet:options:range:
insertString:atIndex:
_initSSDownloadSession
_copySessionPropertyWithKey:
download
downloadAsset
_sessionID
_assetID
_downloadID
T@"SSDownload",R
T@"SSDownloadAsset",R
_finishWithType:error:
_setBool:forSessionProperty:
blocksOtherDownloads
canBePaused
disavowSessionWithError:
downloadPhase
finishSessionWithSuccess:error:
needsPowerAssertion
releaseSessionControl
setBlocksOtherDownloads:
setCanBePaused:
setNeedsPowerAssertion:
setStatusDescription:
duetTimeoutInterval
_downloadPhase
_duetTimeoutInterval
T@"NSNumber",R,V_duetTimeoutInterval
initWithAuthenticationSession:
proposedCredential
previousFailureCount
failureResponse
initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:
authenticationChallenge
_finishWithType:credential:
T@"NSURLAuthenticationChallenge",R
authenticationSession
useCredential:forAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
cancelAuthenticationChallenge:
rejectProtectionSpaceAndContinueWithChallenge:
_session
T@"SSDownloadAuthenticationSession",R
initWithClientIdentifier:
dismissFollowUpWithIdentifier:account:
pendingFollowUpWithIdentifier:
sharedFollowUpConfig
_dismissFollowUpWithIdentifier:
followUpController
pendingFollowUpItemsWithCompletion:
_postFollowUpWithIdentifier:userInfo:
postFollowUpWithIdentifier:account:userInfo:
_createFollowUpItemForRenewCredentialsWithUserInfo:
setLabel:
setActions:
setDisplayStyle:
setGroupIdentifier:
setInformativeText:
setUserInfo:
clearPendingFollowUpItemsWithUniqueIdentifiers:completion:
_createFollowUpItemForIdentifier:userInfo:
postFollowUpItem:completion:
dismissFollowUpWithIdentifier:
postFollowUpWithIdentifier:userInfo:
setFollowUpController:
_followUpController
T@"FLFollowUpController",&,N,V_followUpController
actionParametersForItemIdentifier:
priceDisplayForItemType:
actionDisplayNameForItemType:
_setPersonalizedItems:
personalizeOffersRequest:didReceiveResponse:
startWithPersonalizedResponseBlock:
initWithItems:
_items
T@"<SSPersonalizeOffersDelegate>",D,N
personalizedItems
setActionDisplayNameString:forItemType:
setActionParameters:forItemIdentifier:
setPriceDisplayString:forItemType:
_actionDisplayNames
_actionParameters
_priceDisplayNames
copyReleaseDateStringWithStyle:
_setArtistName:
_setImageCollection:
_setItemKind:
_setReleaseDate:
_setReleaseDateString:
_setStoreAccountIdentifier:
_setStoreItemIdentifier:
_setStorePreorderIdentifier:
_setTitle:
storeAccountIdentifier
storeItemIdentifier
storePreorderIdentifier
_artistName
_imageCollection
_itemID
_itemKind
_releaseDate
_releaseDateString
_preorderID
T@"NSString",R,N,V_artistName
T@"SSItemImageCollection",R,N,V_imageCollection
T@"NSString",R,N,V_itemKind
Tq,R,N,V_pid
T@"NSString",R,N,V_releaseDateString
T@"NSNumber",R,N,V_accountID
TQ,R,N,V_itemID
TQ,R,N,V_preorderID
T@"NSString",R,N,V_title
initWithItemKinds:
_registerAsObserver
preorderManagerPreordersDidChange:
bookStoreItemKinds
musicStoreItemKinds
cancelPreorders:withCompletionBlock:
itemKinds
_itemKinds
_preorders
_initSSRestoreContentItem
setValue:forAssetProperty:
_restoreKeyForAssetProperty:
_restoreKeyForDownloadProperty:
setBundleID:
setStoreAccountAppleID:
setCloudMatchStatus:
cloudItemID
cloudMatchStatus
copyRestoreDictionary
downloadKind
isDRMFree
setCloudItemID:
setDownloadKind:
setDRMFree:
setStoreOriginalPurchaserAccountID:
setStoreFlavor:
setStoreItemID:
setStoreSoftwareVersionID:
setVideoDimensions:
storeAccountAppleID
storeFlavor
storeItemID
storeOriginalPurchaserAccountID
storeSoftwareVersionID
videoDimensions
_originalPurchaserAccountID
_appleID
_cloudMatchStatus
_isRestore
T@"NSString",C,N,V_bundleID
T@"NSNumber",&,N
DRMFree
TB,N,GisDRMFree
initWithServiceName:entitlement:queue:
setObserver:
_dispatchMessage:connection:
drain
_recordCoreAnalyticsEventForClient:andSelector:
selector
observer
mainServer
addObserver:selector:forMessage:
removeObserver:selector:forMessage:
_entitlementName
_listener
_serviceName
_xpcRequestsCache
_observer
_selector
T@,N,V_observer
T:,N,V_selector
initWithBytes:length:encoding:
initWithNamedPort:
_distributedNotificationMessage:connection:
initWithName:queue:block:
_sendRegistrationMessage:name:
dispatchQueue
addObserverForName:queue:usingBlock:
namedPort
_portName
_server
_name
T@?,R,N,V_block
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
T@"NSString",R,N,V_name
_openLogFile
_checkLogFileSize
writeData:
_closeLogFile
_logFilePathWithIndex:
_activeLogFilePath
_rollLogFiles
pathExtension
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
setSubsystem:
initWithFileDescriptor:closeOnDealloc:
seekToEndOfFile
moveItemAtPath:toPath:error:
logOptions
_lastFileStatTime
_fileHandle
_fileObserverSource
T@"SSLogFileOptions",R
initWithSAPVersion:
exchangeData:error:
primingSignatureForData:error:
signData:error:
verifyPrimeSignature:error:
verifySignature:forData:error:
_teardownSession
isComplete
_complete
complete
TB,R,N,GisComplete,V_complete
T@"NSNumber",R,V_accountIdentifier
T@"NSNumber",R,V_rentalKeyIdentifier
removeObjectIdenticalTo:
addChildRequest:
removeChildRequest:
_childOperation
_childRequests
_success
TB,N,V_success
initWithManifestType:
_removeItemsWithAssetPaths:completionBlock:
getPathsForFilesWithClass:completionBlock:
manifestType
rebuildManifestWithCompletionBlock:
removeItemWithAssetPath:completionBlock:
removeItemsWithAssetPaths:completionBlock:
_manifestType
contentTasteItemUpdates
shouldInvalidateLocalCache
setShouldInvalidateLocalCache:
_shouldInvalidateLocalCache
_contentTasteItemUpdates
T@"NSArray",C,N,V_contentTasteItemUpdates
TB,N,V_shouldInvalidateLocalCache
_connectEventConnection
eventMonitor:receivedEventWithName:userInfo:
_eventConnection
T@"<SSEventMonitorDelegate>"
_copyWithMediaContentTasteItemClass:
contentType
_contentType
_playlistGlobalID
_storeAdamID
_tasteType
TQ,R,N,V_contentType
T@"NSString",R,C,N,V_playlistGlobalID
Tq,R,N,V_storeAdamID
TQ,R,N,V_tasteType
TQ,D,N
setScope:
scope
keyWithIdentifier:scope:
_scope
T@"NSNumber",C,N,V_identifier
Tq,N,V_scope
initWithStorageLocation:
isFileURL
_currentProcessShouldUseRescuedStorageLocationForLocation:
_rescuedStorageLocationForLocation:
_fileURLRepresentsSharedStorageLocation:
_sharedStorageLocationPath
stringByDeletingLastPathComponent
allCookiesForUserIdentifier:scope:
_copyCookiesWithKey:
cookieArrayBySettingFeatureEnablerWithArray:key:
cookieHeadersForURL:userIdentifier:scope:
_copyCookieDictionaryForURL:key:
_shouldAddITFECookieToURL:
setFeatureEnablerInDictionary:key:
dictionaryWithObjectsAndKeys:
cookiesForURL:userIdentifier:scope:
_copyCookieObjectsForURL:key:
useNewCookieStorage
performingMigration
ams_sharedAccountStore
ams_iTunesAccounts
ams_iTunesSandboxAccounts
ams_removeAllCookies
ams_saveAccount:verifyCredentials:
statementHasRowAfterStepping:
prepareStatementForSQL:cache:usingBlock:
_cookieDatabaseDidChange
ams_removeCookiesMatchingProperties:error:
_columnNameForCookieProperty:
_bindStatement:withValues:
removeCookiesWithUserIdentifier:scope:
_accountForKey:
_getSetCookiesForResponse:
_getUserSetCookiesForResponse:
_getGlobalSetCookiesForResponse:
_setCookies:forKey:
setCookiesForHTTPResponse:userIdentifier:scope:
_allCookieKeys
_insertCookies:forKey:
synchronizeFeatureEnablerCookieWithCookieValue:key:result:
setObject:atIndexedSubscript:
fetchDefaults
removeCookiesWithProperties:
sortedArrayUsingSelector:
initWithProperties:
ams_localiTunesAccount
ams_isSandboxAccount
isSessionOnly
expiresDate
isSecure
_copyPrivateCookiesForURL:key:
sharedHTTPCookieStorage
cookiesForURL:
_copyPrivateCookieObjectsForURL:key:
ams_cookies
_copyCookiesForPreparedSQLStatement:
_stopIncludingLocalCookies
_filterCookies:forURL:
initWithUTF8String:
_setupCookieDatabase:forCookieStorage:
_ss_filterUsingTest:
cookiesWithResponseHeaderFields:forURL:
_bindInsertStatement:forCookie:key:
ams_addCookies:
userVersion
_migrateToVersion1WithDatabase:
_migrateToVersion2WithDatabase:
executeSQL:
setUserVersion:
_fileIsOwnedByRoot:
_currentProcessIsRoot
attributesOfItemAtPath:error:
responseHasSetCookies:
allCookiesForUserIdentifier:
cookieHeadersForURL:userIdentifier:
cookiesForURL:account:
cookiesForURL:userIdentifier:
removeAllCookies
removeCookiesWithUserIdentifier:
setCookies:forAccount:
setCookies:forUserIdentifier:
setCookiesForHTTPResponse:userIdentifier:
setCookiesFromCookieStorage:
storageLocation
_handleSharedCookieDatabaseDidChangeDarwinNotification
synchronizeCookies
setPerformingMigration:
_performingMigration
_storageLocation
_usesSharedCookieDatabase
__database
T@"SSSQLiteDatabase",R,N,V__database
TB,N,V_performingMigration
_object
_objectAddress
URLBagDictionary
newLoadURLOperationWithRequest:
_urlBagDictionary
valueForRequestParameter:
copyRequestParameters
keyProfile
setKeyProfile:
localizationStyle
setLocalizationStyle:
setLocation:
_localizationStyle
Tq,N,V_localizationStyle
T@"CLLocation",C,N,V_location
T@"NSNumber",C,N,V_timeoutInterval
authenticatesIfNeeded
startWithLookupBlock:
initWithLocation:
setAuthenticatesIfNeeded:
_lookupProperties
_setTimeoutInterval:
personalizationStyle
setPersonalizationStyle:
resultFilters
setResultFilters:
_personalizationStyle
_resultFilters
T@"SSLookupProperties",R,C,N
Tq,N,V_personalizationStyle
Tq,N,V_resultFilters
_enumerateItemsWithBlock:
initWithLookupDictionary:
allItems
appStoreURLWithReason:initialIndex:
itemForKey:
metricsConfiguration
_itemOrder
T@"SSMetricsPageEvent",&,N,S_setMetricsPageEvent:,V_metricsPageEvent
T@"SSMetricsConfiguration",R,N
_createLogConfigWithSubsystem:category:
setCategory:
_createLogConfigWithBaseConfig:subystem:category:
sharedBagConfig
setEnvironment:
sharediTunesStoreConfig
setWriteToDisk:
_debugLogsEnabled:
propertyAccessQueue
backingLogFileOptions
outputDirectory
outputFilename
setBackingLogFileOptions:
subsystem
_logFileDirectoryPathForSubsystem:category:
_logFilenameForSubsystem:category:
backingOSLogObject
setBackingOSLogObject:
environment
_deviceIsRunningInternalBuild
_deviceIsRunningSeedBuild
writeToDisk
_deviceIsRunningInternalOrSeedBuild
setOutputDirectory:
setOutputFilename:
sharedAccountsLogoutConfig
sharedAccountsMigrationConfigOversize
sharedAskPermissionExtensionConfig
sharedDaemonConfigOversize
sharedFairPlayAnisetteConfig
sharedFeatureEnablerMigrationConfig
sharediTunesStoreConfigOversize
sharedPushNotificationConfig
sharedStoreServicesConfigOversize
sharedWriteToDiskConfig
logFileOptions
setPropertyAccessQueue:
_writeToDisk
_category
_environment
_subsystem
_backingLogFileOptions
_backingOSLogObject
_propertyAccessQueue
_outputDirectory
_outputFilename
T@"SSLogFileOptions",&,N,V_backingLogFileOptions
T@"NSObject<OS_os_log>",&,N,V_backingOSLogObject
T@"NSObject<OS_dispatch_queue>",&,N,V_propertyAccessQueue
T@"NSString",C,N,V_category
TQ,N,V_environment
T@"NSString",C,N,V_outputDirectory
T@"NSString",C,N,V_outputFilename
T@"NSString",C,N,V_subsystem
TB,N,V_writeToDisk
T@"SSLogFileOptions",R,N
T@"NSObject<OS_os_log>",R,N
setApplicationIdentifier:
applicationStates
isEqualToSet:
initWithApplicationIdentifier:
addApplicationState:
setNotRunningApplicationStates
setApplicationStates:
_applicationIdentifier
_applicationStates
T@"NSString",C,N,V_applicationIdentifier
T@"NSSet",C,N,V_applicationStates
iTunesIdentifier
initWithCacheRepresentation:
newCacheRepresentation
allITunesIdentifiers
allITunesAccountNames
familyMembers
setFamilyMembers:
iTunesAccountNames
setITunesAccountNames:
_familyMembers
_iTunesAccountNames
T@"NSArray",&,N,V_familyMembers
T@"NSArray",&,N,V_iTunesAccountNames
askToBuy
iCloudAccountName
setICloudAccountName:
iCloudIdentifier
setICloudIdentifier:
setITunesIdentifier:
isMe
setMe:
isSharingPurchases
setSharingPurchases:
_askToBuy
_firstName
_iCloudAccountName
_iCloudIdentifier
_iTunesIdentifier
_lastName
_sharingPurchases
T@"NSNumber",&,N,V_iTunesIdentifier
T@"NSNumber",&,N,V_iCloudIdentifier
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_iCloudAccountName
TB,N,GisMe,V_me
sharingPurchases
TB,N,GisSharingPurchases,V_sharingPurchases
TB,R,N,V_askToBuy
cellularDataStates
powerStates
registrationStates
timeLimitStates
userDefaultStates
encodeFloat:forKey:
decodeFloatForKey:
addNetworkType:
addUserDefaultState:
isCellularAllowed
isWiFiAllowed
unionPolicyRule:
setBatteryLevel:
setCellularDataStates:
setDownloadSizeLimit:
setNetworkTypes:
setPowerStates:
setRegistrationStates:
setTimeLimitStates:
setUserDefaultStates:
_batteryLevel
_cellularDataStates
_downloadSizeLimit
_networkTypes
_powerStates
_registrationStates
_timeLimitStates
_userDefaultStates
Tq,N,V_downloadSizeLimit
T@"NSSet",C,N,V_networkTypes
T@"NSSet",C,N,V_userDefaultStates
cellularAllowed
TB,R,N,GisCellularAllowed
wiFiAllowed
TB,R,N,GisWiFiAllowed
Tf,N,V_batteryLevel
Tq,N,V_cellularDataStates
Tq,N,V_powerStates
Tq,N,V_registrationStates
Tq,N,V_timeLimitStates
unionNetworkConstraints:
_policyRuleForSizeLimit:
replaceObjectAtIndex:withObject:
initWithDownloadKind:URLBagType:
setPolicyRule:
setPolicyRules:
_downloadKind
_policyRules
T@"NSString",R,N,V_downloadKind
Tq,R,N,V_bagType
T@"NSArray",C,N,V_policyRules
rangeOfString:options:range:
mutableString
replaceCharactersInRange:withString:
initWithAttributedString:
addAttribute:value:range:
authKitAuthenticationContextForAccount:
explanation
setAuthenticationType:
_parseResponse:
_inferSalableIconTypeWithBuyParams:
setSalableIconType:
localizedUppercaseString
formattedUsernameFromUsername:
_unlock
_displayPriceLabelForDisplayPrice:
_attributedStringForSalableInfoStringArray:
stringWithFormattedUsernameForString:username:
_salableInfoItemsToUppercase
_attributedStringForString:
appendAttributedString:
_attributedStringForAttributedDictionary:
_greyAttributedStringForAttributedString:range:
_replaceMarkupForMutableAttributedString:markupType:
_replaceBreakingSpaceMarkupForMutableAttributedString:
_payeeTypeForRequestorValue:
_payeeTypeInferredFromEnumeratedTitle
_salableIconTypeForString:
_confirmationTitleTypeForStringValue:
arrayWithArray:
setStyles:
designVersion
_styleDictionaryWithName:styles:
_attributedStringWithString:styles:
styles
_attributedStringForStringArray:useGrey:
_attributedListForFlexList:
_stringValuesToUppercase
_attributedStringForAttributedArray:
ams_mapWithTransformIgnoresNil:
defaultAuthKitAuthenticationContext
initWithServerResponse:
initWithServerResponse:buyParams:
accountHeader
buyParams
displayPrice
displayPriceLabel
paymentSummary
ratingHeader
ratingValue
salableIconURL
salableIconURLString
salableInfo
salableInfoLabel
setAccountHeader:
setDisplayPrice:
setExplanation:
setPaymentSummary:
setRatingHeader:
setRatingValue:
setSalableIconURLString:
setSalableInfo:
setStoreName:
storeName
isApplePayClassic
setApplePayClassic:
shouldShowCardPicker
setShouldShowCardPicker:
attributedList
confirmationTitleType
setConfirmationTitleType:
countryCode
setCountryCode:
currencyCode
setCurrencyCode:
setDesignVersion:
flexList
inlineImages
merchantSession
setMerchantSession:
payeeType
setPayeeType:
price
setPrice:
priceSectionItems
setPriceSectionItems:
salableIconType
shouldSuppressPrice
setShouldSuppressPrice:
shouldUppercaseText
setShouldUppercaseText:
titleType
setTitleType:
_applePayClassic
_shouldShowCardPicker
_shouldSuppressPrice
_shouldUppercaseText
_accountHeader
_buyParams
_displayPrice
_displayPriceLabel
_explanation
_paymentSummary
_ratingHeader
_ratingValue
_salableIconURL
_salableIconURLString
_salableInfo
_salableInfoLabel
_storeName
_attributedList
_confirmationTitleType
_countryCode
_currencyCode
_designVersion
_flexList
_inlineImages
_merchantSession
_message
_payeeType
_price
_priceSectionItems
_salableIconType
_styles
_titleType
T@"NSString",C,V_accountHeader
T@"NSArray",R,V_attributedList
T@"NSString",R,C,V_buyParams
Tq,V_confirmationTitleType
T@"NSString",C,V_countryCode
T@"NSString",C,V_currencyCode
T@"NSNumber",C,V_designVersion
T@"NSString",C,V_displayPrice
T@"NSAttributedString",R,C,V_displayPriceLabel
T@"NSString",C,V_explanation
T@"NSArray",R,V_flexList
T@"NSArray",R,C,V_inlineImages
applePayClassic
TB,GisApplePayClassic,V_applePayClassic
T@"NSDictionary",C,V_merchantSession
T@"NSString",C,V_message
Tq,V_payeeType
T@"NSString",C,V_paymentSummary
T@"NSString",C,N,V_presentingSceneIdentifier
T@"NSNumber",C,V_price
T@"NSArray",C,V_priceSectionItems
T@"NSString",C,V_ratingHeader
T@"NSString",C,V_ratingValue
Tq,V_salableIconType
T@"NSURL",R,C,V_salableIconURL
T@"NSString",C,V_salableIconURLString
T@"NSArray",C,V_salableInfo
T@"NSAttributedString",R,C,V_salableInfoLabel
TB,V_shouldShowCardPicker
TB,V_shouldSuppressPrice
TB,V_shouldUppercaseText
T@"NSString",C,V_storeName
T@"NSArray",C,V_styles
Tq,V_titleType
keybagOptions
setKeybagOptions:
T@"NSNumber",R,V_accountID
T@,C,V_contentIdentifier
Tq,V_options
ETagForAssetType:
setETag:forAssetType:error:
_initWithITunesMetadata:
isBeta
setBeta:
isPlaceholder
setPlaceholder:
isProfileValidated
setProfileValidated:
isLaunchProhibited
_beta
_etags
_placeholder
_profileValidated
_propertyValues
_launchProhibited
beta
TB,N,GisBeta,V_beta
TB,N,GisLaunchProhibited,V_launchProhibited
placeholder
TB,N,GisPlaceholder,V_placeholder
TB,N,GisProfileValidated,V_profileValidated
_sendDemotionMessage:completionBlock:
_getItemsWithMessage:completionBlock:
demoteApplicationWithBundleIdentifier:completionBlock:
getLibraryItemsForITunesStoreItemIdentifiers:completionBlock:
getRemovableSytemApplicationsWithCompletionBlock:
hasDemotedApplicationsWithCompletionBlock:
isInstalledApplicationWithBundleIdentifier:completionBlock:
isRemovedSystemApplicationWithBundleIdentifier:completionBlock:
playableApplicationsWithBundleIdentifiers:completionBlock:
refreshReceiptsWithCompletionBlock:
restoreAllDemotedApplicationsWithOptions:completionBlock:
restoreDemotedApplicationWithBundleIdentifier:options:completionBlock:
restoreRemovedSystemApplicationWithBundleIdentifier:completionBlock:
isEqualToPurchase:
setMediaType:
_mediaType
T@"NSString",C,N,V_mediaType
TB,N,GisPreauthenticated,V_preauthenticated
logCorrelationKey
setLogCorrelationKey:
redeemCodes
startWithRedeemResponseBlock:
initWithRedeemCodes:
headless
setHeadless:
cameraRecognized
setCameraRecognized:
params
setParams:
_redeemCodes
_headless
_cameraRecognized
_params
_logCorrelationKey
TB,V_headless
TB,V_cameraRecognized
T@"NSString",&,N,V_logCorrelationKey
T@"NSDictionary",&,N,V_params
extensionIdentifier
getVisibilityWithCompletionBlock:
setResponse:
T@"SSVPlaybackLeaseResponse",&,N,V_response
setMaxConcurrentOperationCount:
refreshLeaseWithRequest:completionBlock:
_initSSVPlaybackLease
leaseType
initWithURLBag:leaseType:
beginLeaseURL
_addOperationWithRequest:configurationURL:completionBlock:
_endLease
getAssetURL
getCertificateDataWithCompletionBlock:
refreshLeaseURL
_startRefreshTimerIfNecessary
_cancelRefreshTimer
_updateWithLeaseResponseError:
initWithLeaseRequest:configuration:
initWithLeaseRequest:URLBag:
_updateForLeaseResponse:error:
addBarrierOperation:
stopSubscriptionLease:
cancelAllOperations
playbackLease:automaticRefreshDidFinishWithResponse:error:
playbackLeaseAutomaticRefreshDidFinish:
playbackLease:automaticRefreshDidFailWithError:
playbackLeaseDidEnd:
playbackLease:didEndWithReasonType:
_fireRefreshTimer
certificateData
KDMovieIdentifier
leaseDuration
initWithTimeIntervalSinceNow:
isOfflineSlotAvailable
_shouldEndLeaseForError:returningEndReasonType:
_sendLeaseDidEndWithEndReasonType:
initWithLeaseConfiguration:
beginLeaseWithRequest:completionBlock:
cancelAllAssetRequests
endLease
getAssetWithRequest:completionBlock:
preheatLeaseRequestsWithCompletionBlock:
refreshesAutomatically
setCertificateData:
setRefreshesAutomatically:
updateWithExternalLeaseResponseError:
_assetOperations
_fairPlaySubscriptionController
_lastKDLeaseRequest
_leaseDidEndNotificationToken
_leaseExpirationDate
_offlineSlotRequest
_operationQueue
_refreshesAutomatically
_refreshTimer
T@"<SSVPlaybackLeaseDelegate>",W
T@"NSData",C
_initWithID:class:length:content:opaque:
readTokenFromBuffer:opaque:
dataWithBytes:length:
readTokenFromBuffer:
readOpaqueTokenFromBuffer:
tokenClass
content
mClass
mIdentifier
mLength
mContent
TC,R,VmClass
TQ,R,VmIdentifier
TQ,R,VmLength
Tr*,R,VmContent
nextToken
mReadPointer
mValue
TQ,R,VmValue
T@"asn1Token",R,VmValue
codeResponses
dictionaryForCode:
errorForCode:
failedCodes
redeemedCodes
responseDictionaryForCode:
setCodeResponses:
setFailedCodes:
setRedeemedCodes:
_codeResponses
_errors
_redeemedCodes
isLocalReadable
_loadDatabaseIfNecessary
copyValueForDomain:key:
readUsingSessionBlock:
removeAllValuesForDomain:completionBlock:
predicateWithProperty:equalToValue:
database
queryWithDatabase:predicate:
deleteAllEntities
modifyUsingTransactionBlock:
setValuesWithDictionary:forDomain:completionBlock:
copyAccountDictionaryForDomain:
modifyAsyncUsingTransactionBlock:
initReadOnly
removeAllValuesForDomain:
removeAllValuesWithCompletionBlock:
setValuesWithDictionary:forDomain:
removeAccountDictionaries
copyAccounts
isLocalWritable
_useLocalRead
_useLocalWrite
localReadable
TB,R,GisLocalReadable
localWritable
TB,R,GisLocalWritable
initWithMaxSize:
accessQueue
_count
backingDictionary
backingList
removeNode:
insertNode:
removeAllNodes
_removeObjectForKey:
_addObject:forKey:
allNodes
initWithKey:object:
insertObject:
maxSize
tail
allObjectsAndKeys
setAccessQueue:
setBackingDictionary:
setBackingList:
_maxSize
_backingDictionary
_backingList
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSMutableDictionary",&,N,V_backingDictionary
T@"SSDoubleLinkedList",&,N,V_backingList
TQ,R,N
TQ,R,N,V_maxSize
initWithObject:
T@"<NSCopying>",W,N,V_key
playActivityEvents
outputStreamToFileAtPath:append:
open
writePropertyList:toStream:format:options:error:
write:maxLength:
setPlayActivityEvents:
_playActivityEvents
T@"NSArray",C,N,V_playActivityEvents
buffer
_flush
setCurrentIndex:
currentIndex
_rearrangeObjects:forCurrentIndex:
setBuffer:
setMaxSize:
flush
_currentIndex
_buffer
TQ,N,V_currentIndex
T@"NSMutableArray",&,N,V_buffer
TQ,N
_tearDownConnections
_reconnectToDaemonWithCompletionBlock:
_openSessionWithMessage:
_setControlConnection:
_setSessionID:
_setErrorProperties:
errorHandler:handleSession:
performDefaultHandling
_dispatchToDelegate:
errorHandlerDidDisconnect:
failureTypes
setFailureTypes:
stopWithCompletionBlock:
_failureTypes
T@"<SSErrorHandlerDelegate>"
dataWithContentsOfFile:
_decodeReceiptData:toDecodedMessage:
_parseReceiptFromMessage:
_extractSignedDataFromMessage:
_verifySignatureForSignedData:onDate:
_checkIfCertificate:containsOID:
_parseTokens:
readFromBuffer:
numberWithUnsignedLong:
_copyCertificatesFromSignedData:
_checkArray:containsCertificateWithOID:
_setPoliciesForTrust:
_anchorTrust:toRootCertificateIn:
receiptWithContentsOfFile:
_cancellationReason
_receiptCreationDate
_renewalDate
T@"NSDate",R,V_expirationDate
contentToken
removeProfileWithIdentifier:
migrate
isValidJSONObject:
_JSONObjectForTaskMetrics:requestData:responseData:
initWithJSONObject:
compressed
backingJSONData
JSONData
JSONObject
_JSONObjectForEntries:
outputDirectoryForLogConfig:
enumeratorAtPath:
_timeIntervalFromFilename:
writeToDiskWithLogConfig:compressed:error:
URLByAppendingPathComponent:
writeToURL:options:error:
JSONString
localeWithLocaleIdentifier:
transactionMetrics
_entryDictionaryForTaskMetrics:requestData:responseData:
fetchStartDate
_stringFromDate:
responseEndDate
requestStartDate
_requestDictionaryForTaskTransactionMetrics:requestData:
_responseDictionaryForTaskMetrics:responseData:
_generateCommentsForTaskMetrics:
_creatorDictionary
_entriesArrayForTaskMetrics:requestData:responseData:
_apsRelayAttempted
_apsRelaySucceeded
_localIPAddress
_headersArrayForHTTPHeaders:
_contentDictionaryForResponse:responseData:
resourceFetchType
localizedStringForStatusCode:
systemTimeZone
_dateFormatterForTimeZone:
scannerWithString:
scanDouble:
merge:
merge:withEstimatedFileSizeLimit:
removeLogsWithLogConfig:olderThanDate:
sendWriteAllLogsToDiskNotification
sendWriteAllLogsToDiskDecompressedNotification
initWithTaskMetrics:requestData:responseData:
writeToDiskError:
setBackingJSONData:
setCompressed:
_compressed
_backingJSONData
T@"NSData",&,N,V_backingJSONData
TB,N,V_compressed
redirectToURL:
retry
_ss_index:
initWithDataRepresentation:
dataRepresentation
setKDMovieIdentifier:
leaseRequest
_loadCertificateDataIfNecessary:
_resolveConfigurationAndURLReturningError:
_shouldRetryForError:
_bagKey
_request
_retryCount
T@"SSVPlaybackLeaseRequest",R,C
initWithDatabaseURL:readOnly:
createSchemaInDatabase:
_initReadOnly:
_dispatchBlockAsync:
initWithDatabase:
dispatchBlockAsync:
readAsyncUsingSessionBlock:
predicateMatchingAllPredicates:
enumeratePersistentIDsAndProperties:count:usingBlock:
copyDataForDomain:key:
anyInDatabase:predicate:
existingEntityForDomain:key:
T@"SSSQLiteDatabase",R,N,V_database
initWithSessionDelegate:
sharedCache
cachedValues
setCachedValues:
updateQueue
queue
values
isRunningTests
executeBlock
sharedInstanceWithSessionDelegate:
sessionDurationLoadURL
samplingPercentageUsersLoadURL
samplingPercentageCachedResponsesLoadURL
sessionDurationPageRender
samplingPercentageUsersPageRender
update
setUpdateQueue:
setRunningTests:
_runningTests
_updateQueue
_cachedValues
T@"SSCoalescingQueue",&,N,V_updateQueue
T@"NSDictionary",&,N,V_cachedValues
runningTests
TB,N,GisRunningTests,V_runningTests
setAccessToken:
setPageAccessToken:
setPageIdentifier:
setServiceIdentifier:
accessToken
pageAccessToken
pageIdentifier
serviceIdentifier
_accessToken
_pageAccessToken
_pageIdentifier
_serviceIdentifier
T@"NSString",C,N,V_pageAccessToken
T@"NSString",C,N,V_pageIdentifier
T@"NSString",C,N,V_accessToken
T@"NSString",C,N,V_serviceIdentifier
deleteFromDatabase
initWithPropertyValues:inDatabase:
setData:forDomain:key:
scanHexLongLong:
numberFromHexDigits
isRestore
isPurchase
transferBytesWritten
transferBytesExpected
downloadPhaseIdentifierOverride
downloadStatus
_downloadPhaseIdentifierOverride
_downloadStatus
T@"NSString",&,N,V_downloadPhaseIdentifierOverride
T@"<SSBookDownloadStatus>",R,N,V_downloadStatus
requestMessage
authenticatesIfNecessary
carrierBundleProvisioningStyle
localizedAuthenticationReason
_authenticatesIfNecessary
_carrierBundleProvisioningStyle
_localizedAuthenticationReason
TB,N,V_authenticatesIfNecessary
T@"NSString",C,N,V_localizedAuthenticationReason
Tq,N,V_carrierBundleProvisioningStyle
T@"NSString",C,N,V_reason
methodSignatureForSelector:
invokeWithTarget:
isRunningUnitTests
expireBackgroundTask
_closeDatabaseIfOpen
_stepStatement:hasRow:didFinish:isCorrupt:
_accessDatabaseUsingBlock:
stringWithCString:encoding:
sleepForTimeInterval:
_resetCorruptDatabase
_statementForSQL:cache:
setUserVersion:forDatabase:
userVersionForDatabase:
_beginTaskCompletionAssertion
_endTaskCompletionAssertion
_openDatabaseIfNotOpen
_openFlags
_resetAndReopenDatabaseWithPath:
_resetDatabaseWithPath:
statementDidFinishAfterStepping:
_setTakesTaskCompletionAssertions:
initWithDatabaseURL:
accessDatabaseUsingBlock:
columnName:existsInTable:
countChanges
dispatchAfter:block:
dispatchBlockSync:
newDispatchSourceWithType:
beginTaskCompletionAssertion
endTaskCompletionAssertion
setTakesTaskCompletionAssertions:
takesTaskCompletionAssertions
setupBlock
_databasePath
_readOnly
_shouldAttemptToReopenDB
_isInTransaction
_protectionType
_setupBlock
_statementCache
_takesTaskCompletionAssertions
_taskAssertionCount
T@?,C,N,V_setupBlock
objCType
initWithBytes:length:
initWithData:
hasContainerType
hasDisplayType
hasEndReasonType
hasEventDateTimestamp
eventDateTimestamp
hasEventTimeZoneName
eventTimeZoneName
timeZoneWithName:
hasEventSecondsFromGMT
eventSecondsFromGMT
hasFeatureName
hasItemDuration
hasItemEndTime
hasItemStartTime
hasItemType
hasCharacterDisplayedCount
characterDisplayedCount
hasLyricLanguage
lyricLanguage
hasMediaType
hasOffline
hasPersistentID
hasRecommendationData
hasSourceType
hasTimedMetadata
hasTrackInfo
hasEventType
hasReasonHintType
hasRequestingBundleVersion
hasRequestingBundleIdentifier
hasInternalBuild
internalBuild
hasEnqueuerProperties
hasHouseholdID
hasSiriInitiated
siriInitiated
hasContainerID
hasExternalID
hasPersonalizedContainerID
hasStoreID
hasContainerAdamID
containerAdamID
setAdamID:
hasGlobalPlaylistID
setGlobalPlaylistID:
hasPlaylistVersionHash
setPlaylistVersionHash:
hasStationHash
setStationHash:
hasStationStringID
setStationStringID:
hasStationID
setStationID:
hasCloudAlbumID
setCloudAlbumID:
hasCloudPlaylistID
setCloudPlaylistID:
hasSubscriptionAdamID
setSubscriptionAdamID:
hasPurchasedAdamID
setPurchasedAdamID:
hasRadioAdamID
setRadioAdamID:
hasItemCloudID
itemCloudID
setCloudID:
hasLyricsID
setLyricsID:
hasEquivalencySourceAdamID
setEquivalencySourceAdamID:
_mutableCopyClass
setContainerType:
setDisplayType:
setEndReasonType:
setEventDateTimestamp:
setEventTimeZoneName:
setFeatureName:
setItemDuration:
setItemEndTime:
setItemStartTime:
setItemType:
setCharacterDisplayedCount:
setLyricLanguage:
setPersistentID:
setRecommendationData:
setSourceType:
setTimedMetadata:
setTrackInfo:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setEnqueuerProperties:
setHouseholdID:
setSiriInitiated:
setContainerID:
setExternalID:
setPersonalizedContainerID:
setStoreID:
setReasonHintType:
setContainerAdamID:
setItemCloudID:
isInternalBuild
_containerID
_containerIDs
_containerType
_displayType
_endReasonType
_enqueuerProperties
_eventDate
_eventTimeZone
_eventType
_externalID
_featureName
_householdID
_itemIDs
_itemDuration
_itemEndTime
_itemStartTime
_itemType
_lyricsDisplayedCharacterCount
_lyricsLanguage
_persistentID
_personalizedContainerID
_reasonHintType
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_SBEnabled
_siriInitiated
_sourceType
_storeID
_timedMetadata
_trackInfo
_version
Tq,R,N,V_version
T@"NSString",R,C,N,V_buildVersion
T@"SSVPlayActivityEventContainerIDs",R,C,N,V_containerIDs
TQ,R,N,V_containerType
T@"NSData",R,C,N
T@"NSString",R,C,N,V_deviceName
TQ,R,N,V_displayType
TQ,R,N,V_endReasonType
T@"SSVPlayActivityEnqueuerProperties",R,C,N,V_enqueuerProperties
T@"NSDate",R,C,N,V_eventDate
TQ,R,N,V_eventType
T@"NSTimeZone",R,C,N,V_eventTimeZone
T@"NSString",R,C,N,V_featureName
T@"NSString",R,C,N,V_householdID
T@"SSVPlayActivityEventItemIDs",R,C,N,V_itemIDs
Td,R,N,V_itemDuration
Td,R,N,V_itemEndTime
Td,R,N,V_itemStartTime
TQ,R,N,V_itemType
TQ,R,N,V_lyricsDisplayedCharacterCount
T@"NSString",R,C,N,V_lyricsLanguage
TQ,R,N,V_mediaType
TB,R,N,GisOffline,V_offline
T@"NSNumber",R,C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TQ,R,N,V_reasonHintType
T@"NSData",R,C,N,V_recommendationData
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
SBEnabled
TB,R,N,GisSBEnabled,V_SBEnabled
T@"NSNumber",R,C,N,GisSiriInitiated,V_siriInitiated
TQ,R,N,V_sourceType
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_storeFrontID
Tq,R,N,V_systemReleaseType
T@"NSData",R,C,N,V_timedMetadata
T@"NSData",R,C,N,V_trackInfo
T@"NSString",R,C,N,V_containerID
T@"NSString",R,C,N,V_externalID
TB,R,N,GisInternalBuild
T@"NSString",R,C,N,V_personalizedContainerID
T@"NSString",R,C,N,V_storeID
setContainerIDs:
setEventDate:
setEventTimeZone:
setInternalBuild:
setItemIDs:
setLyricsDisplayedCharacterCount:
setLyricsLanguage:
setVersion:
T@"SSVPlayActivityEventContainerIDs",C,D,N
T@"SSVPlayActivityEnqueuerProperties",C,D,N
T@"NSDate",C,D,N
T@"NSTimeZone",C,D,N
T@"SSVPlayActivityEventItemIDs",C,D,N
TB,D,N,GisOffline
T@"NSNumber",C,D,N,GisPrivateListeningEnabled
T@"NSData",C,D,N
TB,D,N,GisSBEnabled
T@"NSNumber",C,D,N,GisSiriInitiated
TB,D,N,GisInternalBuild
_copyTableClusteredValuesWithValues:
_insertValues:intoTable:withPersistentID:database:
initWithPersistentID:inDatabase:
databasePropertyToSetClientProperty:
databaseValueForProperty:clientValue:
joinClauseForProperty:
databasePropertyToGetClientProperty:
_deleteRowFromTable:usingColumn:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
disambiguatedSQLForProperty:
foreignDatabaseTableForProperty:
foreignDatabaseColumnForProperty:
copyDatabaseDictionaryToSetClientDictionary:
memoryEntityClass
copyValuesForClientProperties:
copyXPCEncodedValuesForClientProperties:
existsInDatabase
Tq,R,N,V_persistentID
bindToStatement:bindingIndex:
SQLForEntityClass:
SQLJoinClausesForEntityClass:
property
setWithObject:
_property
T@"NSString",R,N,V_property
predicateWithProperty:value:comparisonType:
comparisonType
_comparisonTypeString
predicateWithProperty:equalToLongLong:
_comparisonType
Tq,R,N,V_comparisonType
T@,R,N,V_value
bindToSelectStatement:bindingIndex:
isNegative
stringWithString:
copySelectSQLWithProperties:count:
containsPredicateWithProperty:values:
containsPredicateWithProperty:query:queryProperty:
doesNotContainPredicateWithProperty:values:
queryProperty
_negative
_query
_queryProperty
_values
negative
TB,R,N,GisNegative,V_negative
T@"SSSQLiteQuery",R,N,V_query
T@"NSString",R,N,V_queryProperty
T@"NSArray",R,N,V_values
matchesNull
isNotNullPredicateWithProperty:
isNullPredicateWithProperty:
_matchesNull
TB,R,N,V_matchesNull
predicateMatchingAnyPredicates:
predicates
predicateWithProperty:values:comparisonType:
_combinationOperation
_predicates
T@"NSArray",R,N,V_predicates
predicate
limitCount
enumeratePersistentIDsUsingBlock:
entityClass
_newSelectSQLWithProperties:count:columns:
setOrderingDirections:
setOrderingProperties:
defaultProperties
enumerateMemoryEntitiesWithProperties:usingBlock:
setDatabaseID:
getObjects:range:
_newSelectSQLWithProperties:count:
initWithDatabase:descriptor:
copyEntityIdentifiers
countOfEntities
createTemporaryTableWithName:properties:count:
enumerateMemoryEntitiesUsingBlock:
queryDescriptor
_descriptor
T@"SSSQLiteDatabase",R
T@"SSSQLiteQueryDescriptor",R
setEntityClass:
setLimitCount:
setMemoryEntityClass:
orderingClause
setOrderingClause:
orderingDirections
orderingProperties
setPredicate:
returnsDistinctEntities
setReturnsDistinctEntities:
_entityClass
_limitCount
_memoryEntityClass
_orderingClause
_orderingDirections
_orderingProperties
_predicate
_returnsDistinctEntities
T#,N,V_entityClass
T#,N,V_memoryEntityClass
Tq,N,V_limitCount
T@"NSString",C,N,V_orderingClause
T@"NSArray",C,N,V_orderingDirections
T@"NSArray",C,N,V_orderingProperties
TB,N,V_returnsDistinctEntities
T@"SSSQLitePredicate",C,N,V_predicate
_aggregateValueForProperty:function:predicate:database:
queryWithDatabase:predicate:orderingProperties:
countForProperty:predicate:database:
maxValueForProperty:predicate:database:
minValueForProperty:predicate:database:
databaseEntityClass
initWithCondition:
_configureAllPromise:withResults:promises:currentPromiseIndex:
_configureAnyPromise:withPomises:currentPromiseIndex:
_isFinished
promiseResult
_errorIsCanceledError:
completionBlocks
callErrorBlock:withPromiseResult:
_addBlock:orCallWithResult:
callCompletionBlock:withPromiseResult:
callSuccessBlock:withPromiseResult:
lockWhenCondition:beforeDate:
_finishPromise:withPromise:
setPromiseResult:
unlockWithCondition:
flushCompletionBlocksWithPromiseResult:
promiseWithAll:
catchWithBlock:
errorOnlyCompletionHandlerAdapter
setCompletionBlocks:
setStateLock:
_completionBlocks
_promiseResult
_stateLock
T@"SSPromiseCompletionBlocks",&,N,V_completionBlocks
T@"SSPromiseResult",&,N,V_promiseResult
T@"NSConditionLock",&,N,V_stateLock
cancelled
TB,R,N,GisCancelled
finished
TB,R,N,GisFinished
reloadFromDatabaseEntity:properties:
setValues:forProperties:count:
setValues:forExternalProperties:count:
databaseID
propertyValues
externalPropertyValues
initWithDatabaseEntity:properties:
setValue:forExternalProperty:
_databaseID
_externalPropertyValues
Tq,N,V_databaseID
T@"NSDictionary",R,C,N,V_propertyValues
T@"NSDictionary",R,C,N,V_externalPropertyValues
downloadMetadataForItemIdentifier:
downloadsMetadata
transactionIdentifierForItemIdentifier:
responseMetrics
cancelsPurchaseBatch
setCancelsPurchaseBatch:
downloadIdentifiers
setDownloadIdentifiers:
setURLResponse:
_cancelsPurchaseBatch
_downloadIdentifiers
_purchase
_requestStartTime
_responseEndTime
_responseStartTime
_transactionIdentifiers
TB,N,V_cancelsPurchaseBatch
T@"SSPurchase",C,N,V_purchase
T@"SSURLConnectionResponse",&,N,V_response
T@"NSArray",C,N,V_downloadIdentifiers
Td,N,V_requestStartTime
Td,N,V_responseEndTime
Td,N,V_responseStartTime
T@"NSDictionary",&,N,V_tidHeaders
initWithEncodedDialog:
startWithAuthenticateResponse:
encodedDialog
T@"NSObject<OS_xpc_object>",R,N,V_dialog
authenticatedAccountIdentifier
setAuthenticatedAccountIdentifier:
performedButtonIndex
setPerformedButtonIndex:
selectedButtonIndex
setSelectedButtonIndex:
_authenticatedAccountIdentifier
_performedButtonIndex
_selectedButtonIndex
T@"NSNumber",C,N,V_authenticatedAccountIdentifier
Tq,N,V_performedButtonIndex
T@"NSURL",C,N,V_redirectURL
Tq,N,V_selectedButtonIndex
scheduleInRunLoop:forMode:
_close
_handleReceivedDataWithError:
streamError
_respondWithRequest:error:
hasBytesAvailable
read:maxLength:
appendBytes:length:
_errorResponseDataWithStatus:message:
_writeResponseData:error:
_throttledWriteSpeed
stream:handleEvent:
_shouldKeepRunning
_incommingHeadersComplete
_incommingMessage
_incommingMessageBody
_input
_output
_requestQueue
T@"<SSHTTPServerRequestHandlerDelegate>",W,N,V_delegate
initWithWritingStyle:
_acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:shouldFilterStoreAccountID:completionHandler:
_revisionsIndexSetForPlayActivityEvents:
_completePendingPlayEventsWithRevisionIndexSet:forSessionToken:withResult:completionHandler:
_daemonPlayActivityControllerConnection
remoteObjectProxyWithErrorHandler:
completePendingPlayActivityEvents:forSessionToken:result:withReplyBlock:
_revisionsIndexSetForPlayActivityEventPersistentIDs:
flushPlayActivityEventsForEndPointIdentifier:withReplyBlock:
revisionsIndexSet
_getFlushSessionInformationForEndpointIdentifier:shouldAcquire:storeAccountID:shouldFilterStoreAccountID:withCompletionHandler:
currentEventsRevision
eventsRevisionVersionToken
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
insertPlayActivityEvent:withRevision:returningError:
setCurrentEventsRevision:
setQualityOfService:
insertPlayActivityEvents:withReplyBlock:
_loadEndpointIdentifierInformationIfNeeded
_requiredEndpointIdentifiers
currentRevision
additionalPendingRevisionsIndexSet
firstIndex
removePlayActivityEventsUpToRevision:withCompletionHandler:
removePlayActivityEventsUpToRevision:returningError:
removePlayActivityEventsUptoRevision:withReplyBlock:
setCurrentRevision:
setRevisionVersionToken:
_setEndpointRevisionInformation:forEndpointIdentifier:
setRevision:revisionVersionToken:forEndpointIdentifier:withReplyBlock:
sessionToken
acquirePendingPlayActivityEventsForEndpointIdentifier:storeAccountID:shouldFilterStoreAccountID:withReplyBlock:
_sessionInformationForSessionToken:
endpointIdentifier
removeIndexes:
_copyEndpointRevisionInformationForEndpointIdentifier:
revisionVersionToken
setAdditionalPendingRevisionsIndexSet:
addIndexes:
setRevisionsIndexSet:
initWithMachServiceName:options:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
lastIndex
setEndpointIdentifier:
setSessionToken:
getRevisionInformationWithCompletionHandler:
_setupNotifyTokenIfNeeded
revisionsIndexSetForPlayActivityEvents:
revisionsIndexSetForPlayActivityEventPersistentIDs:
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
completePendingPlayActivityEventPersistentIDs:forSessionToken:withResult:completionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:
getPlayActivityEventsFromRevision:toRevision:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
removeFlushedPlayActivityEventsWithCompletionHandler:
setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:
writingStyle
_debugLogOperationQueue
_endpointIdentifierToEndpointRevisionInformation
_endpointRevisionInformationDidChangeNotifyToken
_hasLoadedEndpointRevisionInformation
_hasSetupEndpointRevisionInformationDidChangeNotifyToken
_hasValidEndpointRevisionInformationDidChangeNotifyToken
_pendingFlushingSessions
_table
_writingStyle
TQ,R,N,V_writingStyle
isEqualToIndexSet:
_additionalPendingRevisionsIndexSet
_currentRevision
_revisionVersionToken
T@"NSIndexSet",C,N,V_additionalPendingRevisionsIndexSet
TQ,N,V_currentRevision
T@"NSString",C,N,V_revisionVersionToken
_endpointIdentifier
_revisionsIndexSet
_sessionToken
T@"NSString",C,N,V_endpointIdentifier
T@"NSIndexSet",&,N,V_revisionsIndexSet
TQ,N,V_sessionToken
initWithManagerIdentifier:
_sendMessage:withPurchases:afterPurchase:completionBlock:
_sendMessage:withPurchaseIdentifiers:afterPurchase:completionBlock:
_sendCompletionBlock:forGetPurchasesReply:
_handleAuthenticateRequest:fromConnection:
_handlePurchasesFinished:fromConnection:
_shouldInvalidateSubscriptionStatusForPurchaseResponse:
_handleMessage:fromConnection:
_resultForReply:error:
_newEncodedArrayWithPurchaseIdentifiers:
_sendCompletionBlock:forStandardReply:
_newEncodedArrayWithPurchases:
getPurchasesUsingBlock:
insertPurchases:afterPurchase:withCompletionBlock:
managerIdentifier
movePurchases:afterPurchase:withCompletionBlock:
_reconnectForDaemonLaunch
_completionBlockQueue
_managerIdentifier
T@"<SSPurchaseManagerDelegate>"
startWithDetailedCompletionBlock:
initWithMachineDataRequest:
syncState
actionData
setActionData:
setActionName:
setProtocolVersion:
setWaitsForPurchaseOperations:
waitsForPurchaseOperations
_actionData
_actionName
_protocolVersion
_waitsForPurchaseOperations
acknowledged
acknowledgmentIdentifier
acknowledgmentVersion
displayed
setAcknowledged:
setAcknowledgmentIdentifier:
setAcknowledgmentVersion:
setDisplayed:
T@"NSString",&,N
_ss_isiCloudAccount
_ss_isiTunesAccount
_ss_isIDMSAccount
altDSIDForAccount:
DSIDForAccount:
_ss_isAppleAuthenticationAccount
_ss_isLocalAccount
_ss_secureToken
_ss_setSecureToken:
T@"NSString",C,N,S_ss_setSecureToken:
reportingDictionary
valueForLocationKey:
locationPosition
locationType
_position
Tq,N,V_position
_valueForKey:fromDictionary:ofType:
setAccountISO3Country:
setAccountStoreFrontIdentifier:
setCachedTimestamp:
setEntitledSubscriptions:
accountStoreFrontIdentifier
accountISO3Country
cachedTimestamp
entitledSubscriptions
_parseJSONDictionary:
_accountStoreFrontIdentifier
_accountISO3Country
_entitledSubscriptions
_cachedTimestamp
T@"NSDate",C,N,V_cachedTimestamp
T@"NSNumber",C,N,V_accountStoreFrontIdentifier
T@"NSString",C,N,V_accountISO3Country
T@"NSArray",C,N,V_entitledSubscriptions
currentText
setCurrentText:
setCurrentVersionIdentifier:
requiresAuthentication
setUserAccepted:
_requiresAuthentication
_userAccepted
_versionID
userAccepted
TB,N,GisUserAccepted,V_userAccepted
T@"NSString",N,V_text
Tq,N,V_versionID
TB,R,N,V_requiresAuthentication
setAlbumIdentifier:
setArtists:
setAssetData:
setAssetURL:
setAttachmentDescription:
setDeletesAssetWhenFinished:
setPreviewFrameTimestamp:
setUTI:
attachmentType
childAttachmentForRelationship:
enumerateChildAttachmentsUsingBlock:
setChildAttachment:forRelationship:
albumIdentifier
artists
assetData
assetURL
attachmentDescription
previewFrameTimestamp
deletesAssetWhenFinished
_albumIdentifier
_artists
_assetData
_assetURL
_attachmentDescription
_childAttachments
_deletesAssetWhenFinished
_explicitContent
_previewFrameTimestamp
_subtitle
_uti
T@"NSArray",C,N,V_artists
T@"NSString",C,N,V_albumIdentifier
T@"NSString",C,N,V_attachmentDescription
TB,N,GisExplicitContent,V_explicitContent
T@"NSString",C,N,V_subtitle
T@"NSString",C,N,V_title
T@"NSData",C,N,V_assetData
T@"NSURL",C,N,V_assetURL
T@"NSString",C,N,V_uti
TB,N,V_deletesAssetWhenFinished
Td,N,V_previewFrameTimestamp
decodeObjectForKey:
artwork
categoryNames
displayName
isPOIBased
numberOfUserRatingsForCurrentVersion
offers
productPageURL
userRating
userRatingForCurrentVersion
lookupDictionary
POIBased
TB,R,N,GisPOIBased
setAcceptedStoreTermsVersion:
setCarrierBundlingStatus:
setCarrierBundlingErrorCode:
setCellularOperatorName:
setDiscoveryModeEligible:
initWithTimeIntervalSinceReferenceDate:
setSubscriptionExpirationDate:
setFamilyOrganizer:
setFamilySubscription:
setFreeTrialIneligible:
setHasFamily:
setHasFamilyMembers:
setHasOfflineSlots:
setLatestStoreTermsVersion:
setPhoneNumber:
setSubscriptionPurchaser:
setAccountStatus:
_setSubscribed:
setAccountPermissions:
setRawResponseData:
initWithTimeIntervalSince1970:
compare:options:
accountPermissions
acceptedStoreTermsVersion
carrierBundlingErrorCode
cellularOperatorName
isDiscoveryModeEligible
isFamilyOrganizer
isFamilySubscription
isFreeTrialIneligible
hasFamily
hasFamilyMembers
hasOfflineSlots
latestStoreTermsVersion
isSubscriptionPurchaser
isSubscribed
setSubscribed:
setValuesUsingStatusDictionary:
isEqualToStatus:
hasOfflineSlot
_accountPermissions
_accountStatus
_acceptedStoreTermsVersion
_carrierBundlingStatus
_carrierBundlingErrorCode
_cellularOperatorName
_discoveryModeEligible
_familyOrganizer
_familySubscription
_freeTrialIneligible
_hasFamily
_hasFamilyMembers
_hasOfflineSlots
_latestStoreTermsVersion
_rawResponseData
_subscriptionExpirationTime
_subscriptionPurchaser
_hasOfflineSlot
T@"NSArray",C,N,V_accountPermissions
Tq,N,V_accountStatus
TQ,N,V_acceptedStoreTermsVersion
Tq,N,V_carrierBundlingStatus
Tq,N,V_carrierBundlingErrorCode
T@"NSString",C,N,V_cellularOperatorName
discoveryModeEligible
TB,N,GisDiscoveryModeEligible,V_discoveryModeEligible
familyOrganizer
TB,N,GisFamilyOrganizer,V_familyOrganizer
familySubscription
TB,N,GisFamilySubscription,V_familySubscription
freeTrialIneligible
TB,N,GisFreeTrialIneligible,V_freeTrialIneligible
TB,N,V_hasFamily
TB,N,V_hasFamilyMembers
TB,N,V_hasOfflineSlots
TQ,N,V_latestStoreTermsVersion
T@"NSString",C,N,V_phoneNumber
T@"NSDictionary",C,N,V_rawResponseData
subscribed
TB,N,GisSubscribed
T@"NSDate",C,N
subscriptionPurchaser
TB,N,GisSubscriptionPurchaser,V_subscriptionPurchaser
TB,R,N,V_hasOfflineSlot
_parseDictionary:withCaseControl:
label
_label
T@"NSString",C,V_label
T@"NSString",C,V_price
URLWithHeight:width:format:
URLWithHeight:width:cropStyle:format:
getRed:green:blue:alpha:forColorKind:
URLWithHeight:width:
weakToWeakObjectsMapTable
_shouldCollectNetworkLogs
_listenForLowMemoryWarning
sessionsQueue
sessions
invalidateAndCancel
taskDelegatesQueue
taskDelegates
httpArchiveBuffer
_sessionWithDelegate:collectTimingData:
dataTaskWithRequest:
_setDelegate:forTask:
_setRequestData:forSessionTask:
_setAPSTopicWithTask:
_setSendTimingData:forSessionTask:
eventFromTimingData:task:error:
eventFromTimingData:delegate:task:error:
eventFromTimingData:delegate:session:task:error:
initWithBundleIdentifier:
_taskMetricsForSessionTask:
initWithTask:metrics:
setProcessInfo:
setResponseBody:
setSession:
initWithContext:
_bagPerformanceValuesWithDelegate:
setXpSessionDuration:
setXpSamplingPercentageCachedResponses:
setXpSamplingPercentageUsers:
shouldLogTimingMetrics
setXpSamplingForced:
underlyingDictionary
_shouldRecordResponseBodyForDataTask:
_appendResponseData:forSessionTask:
_delegateForTask:
_timingData
_sendTimingDataForSessionTask:
shouldReportCachedEventWithSamplingPercentage:
shouldReportCachedEvent
_insertEventIntoDatabase:delegate:
_removeDelegateForTask:
_setTaskMetrics:forSessionTask:
_requestDataForSessionTask:
_responseDataForSessionTask:
_removeResponseDataForSessionTask:
_removeRecordResponseDataForSessionTask:
_logAPSResultsWithTask:
_logCacheHitForTask:metrics:
activeURLRequest
sendTimingDataQueue
sendTimingDataMap
_shouldEnableTLSSessionForDelegate:
shouldCollectTimingDataWithSessionDuration:samplingPercentage:
shouldCollectTimingDataWithSessionDelegate:
_sessionIDWithDelegate:collectTimingData:allowsTLSSessionTickets:
_sessionConfigurationWithDelegate:collectTimingData:allowsTLSSessionTickets:
sessionWithConfiguration:delegate:delegateQueue:
_PIDFromAuditTokenData:
_shouldSetCookiesForDelegate:
_shouldRequireCelluarForDelegate:
_shouldDisableCellularForDelegate:
_URLCacheIDForDelegate:
defaultSessionConfiguration
set_CTDataConnectionServiceType:
setAllowsCellularAccess:
set_allowsTLSSessionTickets:
setHTTPShouldSetCookies:
set_timingDataOptions:
set_sourceApplicationBundleIdentifier:
set_infersDiscretionaryFromOriginatingClient:
set_sourceApplicationAuditTokenData:
_URLCacheForDelegate:
_shouldCreateLocalCache
initWithMemoryCapacity:diskCapacity:diskPath:
setURLCache:
isSubclassOfClass:
protocolClasses
setProtocolClasses:
taskMetricsQueue
taskMetrics
diskCapacity
bagValueForKey:delegate:type:
_randomDouble
responseDataQueue
responseData
recordResponseQueue
recordResponseMap
requestDataQueue
requestData
_shouldEnableAPSRWithTask:
set_APSRelayTopic:
reversePushEnabled
_metricsDictionaryWithDelegate:
_legacyBagValueForKey:
eventQueue
metricsController
setMetricsController:
requestURL
_localTimeIntervalToServerTimeInterval:
eventFromTimingData:task:
eventFromTimingData:requestProperties:task:error:
_DNSServerIPAddresses
_messageSizeFromTask:isRequest:delegate:
_responseDateFromTask:delegate:
_tidStateForTask:delegate:
_fetchedFromCache:
_fetchNetworkQualityReports
_resolvedIPAddressFromTask:
_timingDataMetricToServerTimeInterval:
cache:willEvictObject:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:willCacheResponse:completionHandler:
httpArchiveBufferSize
setHttpArchiveBufferSize:
flushHTTPArchiveBuffer
_saveHTTPArchiveBufferToDiskDecompressed:
customURLProtocols
setCustomURLProtocols:
setEventQueue:
setHttpArchiveBuffer:
setRequestData:
setRequestDataQueue:
setTaskMetrics:
setTaskMetricsQueue:
setResponseData:
setResponseDataQueue:
setRecordResponseMap:
setRecordResponseQueue:
setSendTimingDataMap:
setSendTimingDataQueue:
setSessions:
setSessionsQueue:
setTaskDelegates:
setTaskDelegatesQueue:
_memoryPressureSource
_memoryPressureStatus
_memoryPressureCachedMaxSize
_customURLProtocols
_eventQueue
_httpArchiveBuffer
_metricsController
_requestData
_requestDataQueue
_taskMetrics
_taskMetricsQueue
_responseData
_responseDataQueue
_recordResponseMap
_recordResponseQueue
_sendTimingDataMap
_sendTimingDataQueue
_sessions
_sessionsQueue
_taskDelegates
_taskDelegatesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_eventQueue
T@"SSCircularBuffer",&,N,V_httpArchiveBuffer
T@"SSMetricsController",&,N,V_metricsController
T@"NSMutableDictionary",&,N,V_requestData
T@"NSObject<OS_dispatch_queue>",&,N,V_requestDataQueue
T@"NSMutableDictionary",&,N,V_taskMetrics
T@"NSObject<OS_dispatch_queue>",&,N,V_taskMetricsQueue
T@"NSMutableDictionary",&,N,V_responseData
T@"NSObject<OS_dispatch_queue>",&,N,V_responseDataQueue
T@"NSMutableDictionary",&,N,V_recordResponseMap
T@"NSObject<OS_dispatch_queue>",&,N,V_recordResponseQueue
T@"NSMutableDictionary",&,N,V_sendTimingDataMap
T@"NSObject<OS_dispatch_queue>",&,N,V_sendTimingDataQueue
T@"NSMutableDictionary",&,N,V_sessions
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionsQueue
T@"NSMapTable",&,N,V_taskDelegates
T@"NSObject<OS_dispatch_queue>",&,N,V_taskDelegatesQueue
T@"NSArray",C,N,V_customURLProtocols
hasSubscriptionLease
setHasSubscriptionLease:
hasSubscriptionSlot
setHasSubscriptionSlot:
_hasSubscriptionLease
_hasSubscriptionSlot
TB,N,V_hasSubscriptionLease
TB,N,V_hasSubscriptionSlot
timeIntervalFromMilliseconds:
millisecondsFromTimeInterval:
_timingMetricsWindowStartTime
_setTimingMetricsWindowStartTime:
appleTimingApp
apsRelayAttempted
apsRelayDidFallback
apsRelaySucceeded
connectionType
DNSServers
resolvedIPAddress
TIDState
clientError
responseDate
requestMessageSize
responseMessageSize
shouldCollectTimingData
apsRelayRequested
connectionInterface
edgeNodeCacheStatus
networkQualityReports
originalApp
TLSSessionTickets
setAppleTimingApp:
setApsRelayAttempted:
setApsRelayDidFallback:
setApsRelayRequested:
setApsRelaySucceeded:
setClientError:
setConnectionInterface:
setConnectionType:
setDNSServers:
setEdgeNodeCacheStatus:
setNetworkQualityReports:
setOriginalApp:
setRequestMessageSize:
setRequestURL:
setResolvedIPAddress:
setResponseDate:
setResponseMessageSize:
setTIDState:
setTLSSessionTickets:
Td,N
T@"NSString",N
Td,N,SsetXPSessionDuration:
TB,N,SsetXPSamplingForced:
Td,N,SsetXPSamplingPercentageUsers:
Td,N,SsetXPSamplingPercentageCachedResponses:
actionTextForType:
formattedPrice
offerType
subscriptionType
getAdminStatusWithOptions:resultBlock:
_adminStatusForAccountID:
_statusIsFresh:
isAdmin
initWithAdminStatus:dateUpdated:
_setAdminStatus:forAccountID:
setRefreshPeriod:
unarchivedObjectOfClasses:fromData:error:
dateUpdated
refreshPeriod
getAdminStatusAndWaitWithOptions:resultBlock:
isCurrentUserAdmin
_refreshPeriod
Td,V_refreshPeriod
setHasEventType:
eventTypeAsString:
StringAsEventType:
setHasReasonHintType:
reasonHintTypeAsString:
StringAsReasonHintType:
setHasSubscriptionAdamID:
setHasPurchasedAdamID:
setHasRadioAdamID:
setHasItemCloudID:
setHasEquivalencySourceAdamID:
setHasContainerAdamID:
setHasStationID:
setHasCloudPlaylistID:
setHasContainerType:
containerTypeAsString:
StringAsContainerType:
setHasEndReasonType:
endReasonTypeAsString:
StringAsEndReasonType:
setHasEventDateTimestamp:
setHasItemDuration:
setHasItemEndTime:
setHasItemStartTime:
setHasItemType:
itemTypeAsString:
StringAsItemType:
setHasMediaType:
mediaTypeAsString:
StringAsMediaType:
setHasOffline:
setHasPersistentID:
setHasSourceType:
sourceTypeAsString:
StringAsSourceType:
setHasSiriInitiated:
setHasDisplayType:
displayTypeAsString:
StringAsDisplayType:
setHasCharacterDisplayedCount:
setTvShowPurchasedAdamID:
setHasTvShowPurchasedAdamID:
hasTvShowPurchasedAdamID
setTvShowSubscriptionAdamID:
setHasTvShowSubscriptionAdamID:
hasTvShowSubscriptionAdamID
setHasInternalBuild:
setEventSecondsFromGMT:
setHasEventSecondsFromGMT:
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
_characterDisplayedCount
_cloudPlaylistID
_containerAdamID
_equivalencySourceAdamID
_eventDateTimestamp
_eventSecondsFromGMT
_itemCloudID
_purchasedAdamID
_radioAdamID
_stationID
_subscriptionAdamID
_tvShowPurchasedAdamID
_tvShowSubscriptionAdamID
_cloudAlbumID
_eventTimeZoneName
_globalPlaylistID
_lyricLanguage
_lyricsID
_playlistVersionHash
_stationHash
_stationStringID
_internalBuild
Ti,N,V_eventType
Ti,N,V_reasonHintType
Tq,N,V_subscriptionAdamID
Tq,N,V_purchasedAdamID
Tq,N,V_radioAdamID
TQ,N,V_itemCloudID
T@"NSString",&,N,V_lyricsID
Tq,N,V_equivalencySourceAdamID
Tq,N,V_containerAdamID
T@"NSString",&,N,V_globalPlaylistID
T@"NSString",&,N,V_stationHash
T@"NSString",&,N,V_stationStringID
Tq,N,V_stationID
T@"NSString",&,N,V_cloudAlbumID
TQ,N,V_cloudPlaylistID
T@"NSString",&,N,V_playlistVersionHash
Ti,N,V_containerType
Ti,N,V_endReasonType
Td,N,V_eventDateTimestamp
T@"NSString",&,N,V_featureName
Td,N,V_itemDuration
Td,N,V_itemEndTime
Td,N,V_itemStartTime
Ti,N,V_itemType
Ti,N,V_mediaType
TB,N,V_offline
Tq,N,V_persistentID
Ti,N,V_sourceType
T@"NSData",&,N,V_timedMetadata
T@"NSData",&,N,V_trackInfo
T@"NSData",&,N,V_recommendationData
T@"NSString",&,N,V_requestingBundleIdentifier
T@"NSString",&,N,V_requestingBundleVersion
T@"SSVPBPlayActivityEnqueuerProperties",&,N,V_enqueuerProperties
T@"NSString",&,N,V_householdID
TB,N,V_siriInitiated
T@"NSString",&,N,V_eventTimeZoneName
Ti,N,V_displayType
Tq,N,V_characterDisplayedCount
T@"NSString",&,N,V_lyricLanguage
T@"NSString",&,N,V_containerID
T@"NSString",&,N,V_personalizedContainerID
T@"NSString",&,N,V_storeID
T@"NSString",&,N,V_externalID
Tq,N,V_tvShowPurchasedAdamID
Tq,N,V_tvShowSubscriptionAdamID
TB,N,V_internalBuild
Td,N,V_eventSecondsFromGMT
isSuspended
setSuspended:
operations
reverseObjectEnumerator
addDependency:
blockOperationWithBlock:
addOperations:waitUntilFinished:
addOperationWithBlock:
clearExpiredUpdateHistoryWithCompletionBlock:
getUpdatesWithCompletionBlock:
hideApplicationBadgeForPendingUpdates
reloadFromServerWithCompletionBlock:
removeUpdateBulletins
showApplicationBadgeForPendingUpdates
_calloutQueue
_didMigration
_mobileCoreServices
initWithCertificateURL:leaseType:leaseURL:pastisKeyServerURL:provisionMachineURL:storeFrontSuffix:syncMachineURL:
initWithURLBagDictionary:leaseType:
setBeginLeaseURL:
setGetAssetURL:
setProvisionMachineURL:
setRefreshLeaseURL:
setSyncMachineURL:
setPastisKeyServerURL:
setPastisCertificateURL:
initWithCertificateURL:leaseURL:pastisKeyServerURL:provisionMachineURL:storeFrontSuffix:syncMachineURL:
provisionMachineURL
syncMachineURL
_beginLeaseURL
_getAssetURL
_provisionMachineURL
_refreshLeaseURL
_syncMachineURL
_pastisCertificateURL
_pastisKeyServerURL
Tq,R,N,V_leaseType
T@"NSURL",C,N,V_beginLeaseURL
T@"NSURL",C,N,V_certificateURL
T@"NSURL",C,N,V_getAssetURL
T@"NSURL",C,N,V_refreshLeaseURL
T@"NSURL",C,N,V_pastisCertificateURL
T@"NSURL",C,N,V_pastisKeyServerURL
T@"NSURL",C,N,V_provisionMachineURL
T@"NSURL",C,N,V_syncMachineURL
T@"NSString",C,N,V_storeFrontSuffix
setFamilyCircle:
authenticationPromptStyle
setAuthenticationPromptStyle:
fetchITunesAccountNames
setFetchITunesAccountNames:
_authenticationPromptStyle
_fetchITunesAccountNames
Tq,N,V_authenticationPromptStyle
TB,N,V_fetchITunesAccountNames
familyCircle
_familyCircle
T@"SSFamilyCircle",&,N,V_familyCircle
setEnvironmentName:
setRequestType:
mediaKinds
notificationType
putParameters
setMediaKinds:
setNotificationType:
setPutParameters:
_copyParametersDictionary
environmentName
requestType
_environmentName
_parameterDictionary
_requestType
T@"NSString",C,N,V_environmentName
Tq,N,V_requestType
T@"NSArray",R,V_sinfs
_copyWithClass:zone:
_timeZone
T@"NSString",R,C,N,V_deviceGUID
T@"NSTimeZone",R,C,N,V_timeZone
initWithUploadKinds:
initWithOptions:capacity:
_establishInboundConnection
_sendSimpleMessage:completionBlock:
_outboundConnection
_adoptStatusFromUpload:
_handleInboundMessage:connection:
initWithKeyOptions:valueOptions:capacity:
_sendObserversUploadsDidChange
uploadQueue:statusDidChangeForUploads:
_handleAddUploadsMessage:
_handleChangeUploadsMessage:
_handleRemoveUploadsMessage:
uploadQueue:uploadsDidChange:
addUploadObserver:
cancelAllUploadsWithCompletionBlock:
cancelUploads:completionBlock:
getUploadsWithCompletionBlock:
pauseAllUploadsWithCompletionBlock:
pauseUploads:completionBlock:
removeUploadObserver:
resumeAllUploadsWithCompletionBlock:
resumeUploads:completionBlock:
uploadKinds
_daemonLaunchToken
_inboundConnection
_uploadKinds
_uploads
initWithUpdateDictionary:
parentalControlsRank
installDate
setInstallDate:
updateDictionary
updateState
setUpdateState:
_installDate
_updateState
T@"NSDate",C,N,V_installDate
Tq,N,V_updateState
_xpcData
T@"NSObject<OS_xpc_object>",R,N,V_xpcData
_copyWithClass:
_adamID
Tq,R,N,V_adamID
T@"NSString",R,C,N,V_cloudAlbumID
TQ,R,N,V_cloudPlaylistID
T@"NSString",R,C,N,V_globalPlaylistID
T@"NSString",R,C,N,V_playlistVersionHash
T@"NSString",R,C,N,V_stationHash
T@"NSString",R,C,N,V_stationStringID
Tq,R,N,V_stationID
enumerateAccountSubscriptionStatusUsingBlock:
generateSubscriptionBagRequestWithAccountUniqueIdentifier:transactionType:machineIDData:returningSubscriptionBagData:error:
generateSubscriptionLeaseRequestWithAccountUniqueID:transactionType:certificateData:assetIDData:returningLeaseData:subscriptionBagData:error:
importSubscriptionKeyBagData:returningError:
importSubscriptionKeyBagData:leaseInfoData:returningError:
_hasValidSubscriptionStatusDidChangeNotifyToken
_subscriptionStatusDidChangeNotifyToken
_createDatabaseDirectory
_setupDatabase:
readUsingTransactionBlock:
accountUniqueIdentifierKey
valueForDatabaseProperty:
setValue:forDatabaseProperty:
removeValueForDatabaseProperty:
modifyUsingAppPurchaseHistoryTransactionBlock:
predicateForAccountIdentifier:
predicateForNotHidden
dictionaryWithCapacity:
newDefaultInstance
readAsyncUsingTransactionBlock:
currentAccountUniqueIdentifier
setCurrentAccountUniqueIdentifier:
localRevisionForAccountUniqueIdentifier:
setLocalRevision:forAccountUniqueIdentifier:
resetCacheForNewAccountID:
allProperties:accountID:includingHidden:
callStackSymbols
allowsPromptingForPrivacyAcknowledgement
setAllowsPromptingForPrivacyAcknowledgement:
_allowsPromptingForPrivacyAcknowledgement
TB,N,V_allowsPromptingForPrivacyAcknowledgement
_requestBodyData
assetStoreFrontIdentifier
setAssetStoreFrontIdentifier:
_assetStoreFrontIdentifier
initWithLookupURL:unpersonalizedLookupURL:signedHeaders:signedQueryParameters:
initWithBagDictionary:
bagDictionary
lookupURLString
SAPContext
setSAPContext:
signedHeaders
signedQueryParameters
unpersonalizedLookupURLString
_lookupURLString
_sapContext
_signedHeaders
_signedQueryParameters
_unpersonalizedLookupURLString
T@"NSString",R,N,V_lookupURLString
T@"NSString",R,N,V_unpersonalizedLookupURLString
T@"NSArray",R,N,V_signedHeaders
T@"NSArray",R,N,V_signedQueryParameters
T@"<SSVSAPContext>",&,N,V_sapContext
supportsPlatformPredicate:
predicateForNotFirstParty
predicateForHasMessagesExtension
predicateForIs32BitOnly:
initWithObjects:count:
sortByDatePurchasedKey
allPropertyKeys
initWithPropertyValues:
datePurchased
isHidden
_tableName
initWithRedeemCodeDictionary:
initWithLookupItem:
codeType
allowsAutoSubmission
inputCode
setInputCode:
redeemCodeDictionary
_inputCode
T@"NSString",C,N,V_inputCode
itemsFromDatabase:forAccount:matching:sortedBy:sortAscending:
iconURL
arrayByAddingObjectsFromArray:
allItemsFromDatabase:forAccount:sortedBy:sortAscending:
sortByNameKey
companyName
contentRatingFlags
iconTitle
isFamilyShareable
isHiddenFromSpringBoard
isNewsstand
longTitle
minimumOS
ovalIconURLString
supportsIPad
supportsIPhone
redownloadParams
humanReadableVersion
iTunesVersion
requiredCapabilitiesString
initWithIdentifier:cacheName:
initWithIdentifier:cacheName:database:cacheEntryClass:
clear
removeDataForKey:
cacheEntryForLookupKey:
initWithLookupKey:inDatabase:
setPersistentCache:
maximumInlineBlobSize
setData:forKey:
statistics
clearCacheForLookupKey:
clearRetiredData
setData:expiring:retiring:lookupKey:userInfo:
cacheEntryProperties:forLookupKeys:
setMaximumInlineBlobSize:
_maximumInlineBlobSize
_cacheName
_path
_persistentCache
_cacheEntryClass
TQ,N,V_maximumInlineBlobSize
initWithClaimStyle:
_changeNotificationSuspensionAccessQueue
_sendChangeNotification
sendChangeNotification
beginSuspendingSubscriptionStatusChangeNotifications
endSuspendingSubscriptionStatusChangeNotifications
removeUserDefaultsForAccountIdentifier:
updateWithResponseDictionary:accountIdentifier:
_fetchPersistentID:inDatabase:
dataForKey:
dataBlob:
subscribe:
_isComplete
sendFailure:
logKey
observers
sendMessageQueue
setFailureError:
queuedResults
observableWithObserver:
observableWithObservers:
sendCompletion
sendResult:
setLogKey:
setObservers:
setQueuedResults:
setSendMessageQueue:
_failureError
_logKey
_queuedResults
_sendMessageQueue
T@"NSError",&,N,V_failureError
T@"NSString",&,N,V_logKey
T@"NSMutableArray",&,N,V_observers
T@"NSMutableArray",&,N,V_queuedResults
T@"NSObject<OS_dispatch_queue>",&,N,V_sendMessageQueue
TB,R,N,GisComplete
safeKeyForKey:
_pathForKey:
writeToFile:atomically:
_isFileNotFound:
nextObject
skipDescendents
initWithContentsOfFile:options:error:
setFilenameSafeKeys:
_safeKeys
setEnabled:withAuthToken:completionBlock:
getAllCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:
getCachedBiometricAuthenticationContextWithToken:evict:completionBlock:
getCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:
getConstraintsDictionaryForPurpose:completion:
getCurrentACLVersionWithCompletion:
getStateWithCompletionBlock:
renewPurchaseTokenWithAuthToken:completionBlock:
resetAccount:withCompletionBlock:
resetWithCompletionBlock:
setEnabled:withCompletionBlock:
setAllowed:completionBlock:
tokenUpdateDidFinishWithLogKey:completion:
tokenUpdateShouldStartWithLogKey:completion:
tokenUpdateStateWithCompletionBlock:
getIdentityMapCountWithCompletionBlock:
isIdentityMapValidForAccountIdentifier:completionBlock:
saveIdentityMapForAccountIdentifier:completionBlock:
_clientQueue
newDefaultDatabaseCache
allUncachedImages:
allUncachedImages
clearCacheForAdamID:
setImageData:forAdamID:imageToken:
imageDataForAdamID:
purgeableSpace
purge:
_databaseCache
_purchaseHistoryDatabase
_installStatusForString:
_installTypeForString:
_stringForInstallStatus:
_stringForInstallType:
hardwareType
installError
installStatus
installType
jobID
setHardwareType:
setInstallError:
setInstallStatus:
setInstallType:
setJobID:
initWithURL:resolvingAgainstBaseURL:
_admin
_dateUpdated
T@"NSDate",R,N,V_dateUpdated
admin
TB,R,N,GisAdmin,V_admin
supportsTypeIdentifier:
cacheObjectDataRepresentation
cacheObjectTypeIdentifier
_factoryForTypeIdentifier:
cachedObjectWithDataRepresentation:typeIdentifier:
initWithSessionIdentifier:
clearSession
addObject:withItemIdentifier:
removeObjectWithItemIdentifier:
cacheObjectWithItemIdentifier:
addCacheObjectFactory:
removeCacheObjectFactory:
_factories
initWithCacheObjectDataRepresentation:
setPlist:
plist
_plist
initWithPostDescription:
postDescription
_postDescription
T@"SSVMediaSocialPostDescription",R,N,V_postDescription
initWithPlatformContext:
_makeLookupRequestWithPersonalizationStyle:
_callerValue
itemIdentifiers
bundleIdentifiers
imageProfile
_enumerateQueryParametersUsingBlock:
setImageProfile:
setItemIdentifiers:
setBundleIdentifiers:
_setCaller:
_setUserAgent:
_makeLocalJSSignRequest
_makeLocalMescalRequest
_URLBagContext
_additionalHeaderFields
_additionalParameters
_caller
_itemIdentifiers
_bundleIdentifiers
_imageProfile
_keyProfile
initWithItems:caller:version:
startWithAddItemsResponseBlock:
caller
T@"NSArray",R,C,V_items
T@"NSString",R,C,V_caller
T@"NSString",R,C,V_version
databasePathWithAccountIdentifier:
existsForAccountIdentifier:
deleteBackingStore
lastSyncTime
setLastSyncTime:
Tq,R,N,V_accountIdentifier
T@"NSNumber",C,N
startWithDialogResponseBlock:
setTextFieldValues:
textFieldValues
_textFieldValues
T@"NSArray",C,N,V_textFieldValues
_cloudID
TQ,R,N,V_cloudID
T@"NSString",R,C,N,V_lyricsID
Tq,R,N,V_purchasedAdamID
Tq,R,N,V_radioAdamID
Tq,R,N,V_equivalencySourceAdamID
Tq,R,N,V_subscriptionAdamID
Tq,R,N,V_tvShowPurchasedAdamID
Tq,R,N,V_tvShowSubscriptionAdamID
_migrate7000to7001InDatabase:
_migrate7001to7002InDatabase:
_initWithType:typeVersion:contentToken:
dataWithBytesNoCopy:length:freeWhenDone:
typeVersion
mType
mTypeVersion
mContentToken
TQ,R,VmType
TQ,R,VmTypeVersion
T@"asn1Token",R,VmContentToken
T@"NSString",R,D
TQ,R,D
simulateCrashWithString:
simulateCrashWithFormat:
startWithCapabilitiesResponseBlock:
_globalCanaryLock
_dictionaryRepresentationOfBody
removeObjectsForKeys:
appendPropertiesToBody:
globalEventCanary
setGlobalEventCanary:
allTableEntityPropertiesPermittedByConfiguration:
shouldSuppressDSIDHeader
_shouldSuppressDSIDHeader
T@"NSString",R,&,N,V_eventType
TB,R,N,V_shouldSuppressUserInfo
TB,R,N,V_shouldSuppressDSIDHeader
exceptionWithName:reason:userInfo:
initWithStringRepresentation:valueType:
valueFromDictionary:
_defaultValue
_stringRepresentation
_valueType
T@"<NSObject>",R,N,V_defaultValue
T@"NSArray",R,N,V_stringRepresentation
TQ,R,N,V_valueType
setOriginalTimeUsingDate:
localTimeZone
secondsFromGMTForDate:
topic
connection
originalTime
setConnection:
setOriginalTime:
baseVersion
eventVersion
setBaseVersion:
hostApplicationIdentifier
previousClientVersion
setClientVersion:
setHostApplicationIdentifier:
setPreviousClientVersion:
canaryIdentifier
setCanaryIdentifier:
addPropertiesWithDictionary:
setShouldSuppressDSIDHeader:
_mutableBody
T@"NSDictionary",R,C,N,V_mutableBody
TB,N,V_shouldSuppressUserInfo
TB,N,V_shouldSuppressDSIDHeader
pageContext
pageDescription
pageID
pageType
pageURL
pixelRatio
screenHeight
screenWidth
setPageContext:
setPageDescription:
setPageID:
setPageType:
setPixelRatio:
setScreenHeight:
setScreenWidth:
setWindowHeight:
setWindowOrientation:
setWindowWidth:
windowHeight
windowOrientation
windowWidth
appBundleId
setAppBundleId:
action
setAction:
_appBundleId
_action
T@"NSString",C,N,V_appBundleId
TQ,N,V_action
initWithURLBag:SAPVersion:
_initSSVFairPlaySAPSession
initWithURLBagDictionary:SAPVersion:
_establishContext
_primeTheConnection
_signData:error:
_shouldRetrySAPOperationForError:
_verifySignature:forData:error:
signData:completionBlock:
verifySignature:forData:completionBlock:
_loadCertificateData
_postExchangeData:
URLByAppendingQueryParameter:value:
_verifyPrimeResponse:
initWithSSBag:SAPVersion:
_initWithURLBagInterpreter:SAPVersion:
establishSessionWithCompletionBlock:
primeSessionWithCompletionBlock:
SAPVersion
urlBagInterpreter
useSharedBagInterpreter
setUseSharedBagInterpreter:
primed
_primed
_useSharedBagInterpreter
T@"SSVURLBagInterpreter",R,N,V_urlBagInterpreter
TB,N,V_useSharedBagInterpreter
TB,R,N,V_primed
setPageHistoryDescription:
serverApplicationInstance
isUbered
navigationType
pageHistoryDescription
pageRenderTime
referringAppName
referringURL
requestEndTime
serverTiming
setNavigationType:
setPageHistoryDescriptionWithIdentifiers:
setPageRenderTime:
setRequestEndTime:
setUbered:
TB,N,GisCachedResponse
ubered
TB,N,GisUbered
_initStoreDownloadQueueResponse
initWithDictionary:userIdentifier:preferredAssetFlavor:
_errorWithFailureType:customerMessage:
initWithDictionary:userIdentifier:
initWithError:userIdentifier:
errorForItemIdentifier:
keybag
rangesToLoad
setShouldCancelPurchaseBatch:
setTriggeredQueueCheck:
shouldCancelPurchaseBatch
triggeredQueueCheck
setStoreCorrelationID:
_itemErrors
_keybag
_rangesToLoad
_shouldCancelPurchaseBatch
_triggeredQueueCheck
_storeCorrelationID
T@"NSOrderedSet",R
T@"NSString",V_storeCorrelationID
T@"NSError",&
T@"NSString",V_clientIdentifier
_pragmaValueForName:
_eventsTableName
_migrateToVersion1
_migrateToVersion2
_migrateToVersion3
_maximumUnreportedToSelect
_collectUnreportedPIDsFromDatabase:matchingReportURLString:since:suppressUserInfo:
unreportedEventsForURL:since:suppressDSID:
_collectUnreportedEventsFromDatabase:since:
countUnreportedEventsBefore:
deleteEventsInsertedBefore:
deleteReportedEvents
insertEventSummaries:error:
markEventsAsReported:
unreportedEventsForURL:since:suppressUserInfo:
unreportedEventsSince:
unreportedEventURLsSince:
reportingCanaryIdentifier
reportingJSON
_reportingDictionary
initWithRequestStyle:
JSONBodyData
propertyListBodyData
setValue:forBodyParameter:
applications
setApplications:
requestStyle
_applications
_backgroundRequest
_style
Tq,R,N,V_style
T@"NSNumber",C,N,V_accountID
T@"NSArray",C,N,V_applications
TB,N,GisBackgroundRequest,V_backgroundRequest
T@"NSArray",C,N,V_bundleIdentifiers
T@"NSArray",C,N,V_itemIdentifiers
_shouldCallImmediately
initWithReportingURL:insertTimestamp:eventController:
initWithReportingURL:insertTimestamp:suppressUserInfo:eventController:
_unreportedEvents
writeEventsToStream:uncompressedMaxSize:
sessionCanaryIdentifier
_estimateSizeOfJsonObject:
dataWithBytesNoCopy:length:
lengthOfBytesUsingEncoding:
initWithReportingURL:insertTimestamp:suppressDSID:eventController:
anyUnreportedEvents
markEventsAsReported
writeEventsToStream:
_writeString:toData:
_insertTimestamp
_reportingURL
_unreportedEventPIDs
_eventController
_sessionCanaryIdentifier
_suppressUserInfo
initToMemory
initToFileAtPath:append:
_initializeOutputStream
_setStreamError:context:
_consumeStreamOutput:
streamStatus
hasSpaceAvailable
propertyForKey:
setProperty:forKey:
numberWithUnsignedInt:
streamContentLength
_backingStream
_stream
_streamContentLength
_streamError
_streamOutBuffer
_streamOutBufferSize
_transactionType
initWithPurchase:
purchaseResponse
_downloadMetadata
_purchaseResponse
T@"SSDownloadMetadata",R,N,V_downloadMetadata
T@"SSPurchaseResponse",R,N,V_purchaseResponse
source
setQueue:
setSource:
_queue
_source
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,N,V_source
itemState
setItemState:
representativeTitle
setRepresentativeTitle:
statusString
setStatusString:
totalNumberOfItems
setTotalNumberOfItems:
transferTypes
setTransferTypes:
_itemState
_representativeTitle
_statusString
_totalNumberOfItems
_transferTypes
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_itemState
T@"NSString",C,N,V_representativeTitle
T@"NSString",C,N,V_statusString
Tq,N,V_totalNumberOfItems
TQ,N,V_transferTypes
_copyItemsWithReply:error:
downloadMonitor:didReloadWithItems:
getMonitorItemsWithCompletionBlock:
pauseMonitorItem:completionBlock:
prioritizeMonitorItem:completionBlock:
resumeMonitorItem:completionBlock:
_reloadForChangeNotification
T@"<SSDownloadMonitorDelegate>"
properties
_preferredAssetFlavor
T@"NSDictionary",R,N,V_properties
T@"NSString",C,N,V_preferredAssetFlavor
setAccountEventType:
accountEventType
setAccountEventTypeWithEventIdentifier:
getSubscriptionEntitlementsIgnoreCaches:entitlementsBlock:
_cachedSubscriptionEntitlements
_loadSubscriptionEntitlementsIgnoreCaches:error:
_setCachedSubscriptionEntitlements:
getSubscriptionEntitlements:
_cachedEntitlements
setLogLevel:
_logLevelFromString:
_stringFromLogLevel:
logLevel
logSubsystem
setLogSubsystem:
addFieldsFromPurchaseResponse:
setPowerAssertionIdentifier:
setRequestIdentifier:
initWithLength:
mutableBytes
setLength:
resolveBagURLForKey:bagContext:error:
_loadDownloadsFromStart:toEnd:url:
removeObjectsInRange:
unionOrderedSet:
requestIdentifier
_newURLOperationWithStartIdentifier:endIdentifier:url:
_handleResponse:
addGUIDToBody:
addKeybagSyncToBody:
newLoadAutomaticDownloadQueueOperation
featureEnabledForBagKey:bagContext:error:
gzipData:
importKeybagSync:
setDownloadsMetadata:
powerAssertionIdentifier
_requestIdentifier
_mdSyncState
_requestURL
_powerAssertionIdentifier
T@"NSURL",C,N,V_requestURL
T@"NSMutableOrderedSet",R
T@"NSString",&,V_powerAssertionIdentifier
T@"NSString",C,N,V_storeCorrelationID
targetType
targetIdentifier
positionX
positionY
impressions
actionDetails
locationDescription
setActionDetails:
setImpressions:
setLocationDescription:
setLocationWithEventLocations:
setPositionX:
setPositionY:
setTargetIdentifier:
setTargetType:
setTargetURL:
targetURL
T@,&,N
generateSymbolicatedStackShotPromise
callStackReturnAddresses
T@"NSString",C,N,V_name
_dialogEventForPasswordAuthorizationWithDialogId:buyParams:topicName:userAgent:
_dialogEventForBiometricAuthorizationWithDialogId:buyParams:matchState:topicName:userAgent:
_dialogEventForBiometricOptInWithResult:message:topicName:userAgent:error:
_dialogEventForPaymentSheetPresentationErrorWithBuyParams:error:
_clientIdForMetrics
_mtTopicForBuyParams:
_clientIDForAccount:orUserID:
authorizationDialogEventForParameters:
dialogIdForMetricsDictionary:
userActionDictionaryForBiometricMatchState:didBiometricsLockout:
userActionDictionaryForUserAction:didBiometricsLockout:
countOfBytesExpectedToSend
countOfBytesSent
setCountOfBytesExpectedToSend:
setCountOfBytesSent:
setPersistentIdentifier:
setState:
_uploadKind
_setUploadKind:
_countOfBytesExpectedToSend
_countOfBytesSent
_thumbnailImageURL
Tq,N,V_countOfBytesExpectedToSend
Tq,N,V_countOfBytesSent
Tq,N,V_persistentIdentifier
Tq,N,V_state
T@"NSURL",C,N,V_thumbnailImageURL
T@"NSString",C,N,S_setUploadKind:,V_uploadKind
setEnterType:
enterType
setEnterTypeWithLaunchReason:
setExitType:
exitType
exitURL
setExitTypeWithSuspendReason:
setExitURL:
__app_convertOptions:
initWithOptions:
addJobObserver:
__app_downloadsForJobs:
__app_sendDownloadsChanged:filterSoftware:
__app_cancelDownloads:completionBlock:
__app_dispatchBlock:withError:
__app_filterDownloads:withResult:
__app_finishDownloads:
__app_resumeDownloads:completionBlock:
__app_insertDownloads:before:after:completionBlock:
__app_getAllDownloads
__app_pauseDownloads:completionBlock:
__app_extractJobIDsFromSoftwareDownloads:
cancelJobsWithIDs:completionBlock:
initWithJob:
finishJobs:
getJobsUsingBlock:
__app_newManifestWithType:
__app_newActivityWithDownload:
setExternalOrderKey:
addActivity:withIdentifier:
__app_installManifest:completionBlock:
initWithManifest:
setAssetType:
setBytesTotal:
setExpectedDiskspace:
setHashArrayData:
setHashType:
setNumberOfBytesToHash:
setDPInfo:
setInitialODRSize:
setIsLocallyCacheable:
setIsExternal:
setIsZipStreamable:
__app_setPropertiesForActivity:withDownload:
__app_newAssetWithDownloadAsset:assetType:
pauseJobsWithIDs:completionBlock:
resumeJobsWithIDs:completionBlock:
setArtistID:
setBuyParams:
setCancelIfDuplicate:
setClientID:
setGenreID:
setIsAutomatic:
setIsUpdate:
setIsDeviceBasedVPP:
setIsInQueue:
setIsPurchasedRedownload:
setIsRestore:
setItemID:
setStoreAccountName:
setStoreDownloadKey:
setStoreTransactionID:
setSoftwareIconNeedsShine:
setThumbnailURL:
setStorefront:
setSoftwareVersionExternalIdentifier:
setStoreCohort:
setVariantID:
jobManager:changedJobs:
jobManager:completedJobs:
jobManager:updatedProgressOfJobs:
jobManager:updatedStateOfJobs:
_jobManager
head
next
listIdentifier
setTail:
setHead:
setPrevious:
setNext:
setListIdentifier:
appendNode:
previous
appendObject:
_head
_tail
_listIdentifier
T@"NSString",&,N,V_listIdentifier
TQ,R,N,V_count
T@"SSDoubleLinkedListNode",&,N,V_head
T@"SSDoubleLinkedListNode",&,N,V_tail
setObject:
_previous
_next
T@"SSDoubleLinkedListNode",&,N,V_previous
T@,&,N,V_object
T@"SSDoubleLinkedListNode",&,N,V_next
impressionIdentifiers
setImpressionIdentifiers:
phase
_job
T@"ASDJob",R,N,V_job
mediaEventType
mediaURL
setMediaEventType:
setMediaURL:
_valueForDatabasePropertyKey:
_setValue:forDatabasePropertyKey:
_eventsDatabaseTableName
_getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:shouldFilterStoreAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
_revisionsIndexSetUsingPersisentIDGenerationBlock:count:
_propertiesDatabaseTableName
enumerateRangesUsingBlock:
containsIndex:
leaseInfoData
subscriptionKeyBagData
offlineSlotAvailable
TB,R,N,GisOfflineSlotAvailable
T@"NSData",C,N,V_certificateData
TQ,N,V_kdMovieIdentifier
@16@0:8
v32@0:8@16@?24
v40@0:8@16q24@?32
v64@0:8@16@24@32@40@48@?56
v40@0:8@16@24@?32
v44@0:8@16q24B32@?36
v16@0:8
@"SSXPCConnection"
@"NSObject<OS_dispatch_queue>"
B20@0:8s16
v24@0:8@16
@?24@0:8@16
v24@0:8@"SSHTTPServerRequestHandler"16
@?<@"SSHTTPServerResponse"@?@"NSURLRequest">24@0:8@"NSString"16
s16@0:8
q16@0:8
v20@0:8s16
i16@0:8
B16@0:8
v28@0:8Q16i24
v20@0:8i16
v20@0:8B16
@"NSMutableDictionary"
@"NSMutableArray"
^{__CFSocket=}
@"NSRunLoop"
@20@0:8s16
^{__CFHTTPMessage=}16@0:8
@"NSData"
@"NSDictionary"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@24@0:8@"NSObject<OS_xpc_object>"16
@"NSObject<OS_xpc_object>"16@0:8
v32@0:8@16@24
@32@0:8@16@24
Q24@0:8@16
@32@0:8@16Q24
v24@0:8@?16
@"NSArray"
@40@0:8Q16Q24Q32
v32@0:8@"SSDownloadManager"16@"NSArray"24
v24@0:8@"SSDownloadManager"16
v32@0:8@"SSDownloadManager"16@"NSSet"24
@24@0:8Q16
v32@0:8^?16^v24
v24@0:8q16
@"SSDownloadManager"
^{__CFSet=}
@24@0:8^{_NSZone=}16
@"NSNumber"
@"NSString"
@24@0:8q16
B32@0:8@16@24
d16@0:8
B24@0:8^@16
@"SSDownloadMetadata"
@"SSDownloadStatus"
q24@0:8q16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8Q16
@"NSLock"
@24@0:8@?16
@"SSVSubscriptionStatus"
v36@0:8@16B24@28
@"SSVSubscriptionStatusRequest"
@"NSDate"
@?16@0:8
@48@0:8q16@24^d32^@40
d32@0:8q16@24
@40@0:8q16@24@32
d40@0:8q16@24@32
@"NSURL"
@"AVAssetResourceLoadingRequest"
@"<SSVSecureKeyDeliveryRequestOperationDelegate>"
@"SSVMediaContentTasteItem"
f16@0:8
v20@0:8f16
@"SSDownloadPhase"
@"NSError"
@"SSOperationProgress"
@"SSAuthenticationContext"
@32@0:8@16q24
@"SSURLRequestProperties"
@28@0:8@16B24
v24@0:8d16
@"NSHTTPURLResponse"
@"NSURLRequest"
@32@0:8@16^@24
v40@0:8@16@24@32
^{__CFURLStorageSession=}
@"SSVURLCacheConfiguration"
^{_CFURLCache=}
v32@0:8q16@?24
@"<SSRequestDelegate>"
@"NSObject<OS_dispatch_source>"
@"BKSProcessAssertion"
@"SSPromise"
Q24@0:8q16
v40@0:8Q16@24@?32
v48@0:8Q16q24Q32@?40
v28@0:8@16B24
@40@0:8@16@24^@32
@20@0:8i16
i24@0:8@16
{?="storeAccountID"b1"systemReleaseType"b1"privateListeningEnabled"b1"sBEnabled"b1}
@64@0:8@16@24@32@40@48@56
@72@0:8@16@24@32@40@48@56@64
@76@0:8@16@24@32@40@48@56@64B72
v32@0:8@"SSPurchaseManager"16@"NSArray"24
v32@0:8@?16@?24
@"NSMutableSet"
@"SSPurchaseManager"
@44@0:8@16@24Q32B40
@32@0:8@16#24
@"SSVSAPSignaturePolicy"
@40@0:8@16@24@32
v48@0:8@16@24@32@40
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v56@0:8@16@24@32@40@?48
@"NSData"40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"SSMetricsLoadURLEvent"32@"NSError"40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"SSHTTPArchive"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
@"NSNumber"16@0:8
@"SSBag"16@0:8
@"NSData"16@0:8
@"SSURLRequestProperties"16@0:8
@"NSURLCache"16@0:8
@24@0:8r^{_CFCachedURLResponse=}16
@"AKAppleIDSession"
@"NSMutableData"
@"SSVURLDataConsumer"
@"SSMetricsPageEvent"
@"SSVFairPlaySAPSession"
@"SSURLBag"
@"SSVURLBagInterpreter"
@"<SSVLoadURLOperationDelegate>"
@"SSBag"
@40@0:8@?16@?24@?32
@"SSDownloadPolicy"
@"SSItem"
@"SSItemOffer"
@"SSNetworkConstraints"
B48@0:8@16@24@32^@40
@"ACAccountStore"
@"ACAccount"
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v32@0:8@"SSURLConnectionRequest"16@"SSURLConnectionResponse"24
@"SSURLConnectionRequest"
q24@0:8@16
v28@0:8B16@20
v32@0:8@16q24
v32@0:8q16@24
@24@0:8^@16
@"NSObject<OS_dispatch_semaphore>"
@"SSVPlaybackLeaseConfiguration"
@"SSLogConfig"
@"UIViewController"
@40@0:8@16@24q32
v32@0:8@16^{_NSZone=}24
^{CGImage=}
B40@0:8@16@24^@32
B32@0:8^i16@24
v28@0:8I16@20
B28@0:8@16B24
@"NSSet"
@"SSMetricsConfiguration"
B24@0:8q16
@64@0:8@16@24@32@40@48^@56
B32@0:8@16^@24
@36@0:8@16B24@28
B48@0:8@16@24@32@40
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
@48@0:8@16@24@32q40
v36@0:8@16B24@?28
B36@0:8@16B24^@28
@"SSKeyValueStore"
@"SSAccount"
@"SSSoftwareUpdatesContext"
Q24@0:8Q16
@"SSSQLiteDatabase"
@32@0:8d16^@24
v32@0:8@16Q24
v40@0:8@16Q24@32
B32@0:8d16^@24
@"NSCountedSet"
@"SSVPushNotificationParameters"
@"SSItemOfferDeviceError"
@48@0:8@16@24@32@40
v32@0:8@?16@24
@32@0:8q16@24
@32@0:8@16B24B28
@"<SSBookDownloadQueue>"
v40@0:8@16q24@32
v32@0:8q16q24
@"SSProtocolConditionalContext"
I16@0:8
@32@0:8^{__CFBundle=}16^B24
B40@0:8^@16^@24@32
B32@0:8^I16^@24
@24@0:8^B16
@40@0:8@16@24^B32
v20@0:8I16
v36@0:8@16@24B32
^{__CFString=}16@0:8
@"CLLocation"
@"NSInputStream"
@"SSPlayInfoRequestContext"
@"SSPlayInfoResponse"
v32@0:8Q16@?24
@"ISPurchaseReceipt"
{CGSize=dd}16@0:8
@32@0:8{CGSize=dd}16
@40@0:8{CGSize=dd}16d32
@"SSPaymentSheet"
@"SSConsolidatedDialog"
@"NSObject<OS_xpc_object>"
v52@0:8@16@24@32B40@?44
v24@0:8:16
@"NSHashTable"
@"SSDownloadManagerOptions"
@"SSSilentEnrollmentContext"
v40@0:8@16i24i28@32
v40@0:8@"CTXPCServiceSubscriptionContext"16i24i28@"CTSuppServicesNotificationData"32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSError"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSString"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTRegistrationDisplayStatus"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTSignalStrengthInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTVoiceLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTEnhancedLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTEnhancedDataLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTIMSRegistrationTransportInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSDictionary"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTCellInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTNetworkList"24
v28@0:8@"CTXPCServiceSubscriptionContext"16B24
v36@0:8@"CTXPCServiceSubscriptionContext"16B24@"NSString"28
v32@0:8@"CTServiceDescriptor"16@"CTEncryptionStatusInfo"24
v32@0:8@"CTServiceDescriptor"16@"CTRatSelection"24
v32@0:8@"CTServiceDescriptor"16@"CTNRStatus"24
v32@0:8@"CTServiceDescriptor"16@"CTPlmnInfo"24
@"CoreTelephonyClient"
@"CTXPCServiceSubscriptionContext"
v40@0:8^@16r^@24Q32
v32@0:8r^@16Q24
v48@0:8^@16r^@24Q32q40
v32@0:8@16r*24
@"<SSDownloadHandlerDelegate>"
@52@0:8@16@24@32@40B48
@"SSDialog"
@24@0:8^^v16
@"SSURLBagContext"
@24@0:8r*16
v28@0:8i16@20
v28@0:8B16r*20
v32@0:8@"NSURLCredential"16@"NSURLAuthenticationChallenge"24
v24@0:8@"NSURLAuthenticationChallenge"16
@"SSDownloadAuthenticationSession"
@"FLFollowUpController"
@"SSItemImageCollection"
^{__CFArray=}
v40@0:8@16:24q32
:16@0:8
@40@0:8@16@24@?32
@"SSXPCServer"
@"NSFileHandle"
@"SSLogFileOptions"
@"NSOperation"
@"<SSEventMonitorDelegate>"
@24@0:8#16
B32@0:8^{sqlite3_stmt=}16@24
v40@0:8@16@24q32
v40@0:8^{sqlite3_stmt=}16@24@32
@24@0:8^{sqlite3_stmt=}16
@"SSLookupProperties"
@32@0:8q16q24
@"NSObject<OS_os_log>"
@40@0:8@16{_NSRange=QQ}24
@"NSAttributedString"
@"SSVPlaybackLeaseResponse"
B32@0:8@16^Q24
@"<SSVPlaybackLeaseDelegate>"
@"SSVFairPlaySubscriptionController"
@"SSVPlaybackLeaseRequest"
@"SSVRefreshSubscriptionRequest"
@"SSVBarrierOperationQueue"
@28@0:8r*16B24
@48@0:8Q16C24Q28r*36B44
C16@0:8
r*16@0:8
@"asn1Token"
v48@0:8@16r^@24Q32@?40
@"SSKeyValueStoreDatabase"
@"SSDoubleLinkedList"
@"<NSCopying>"
@"<SSErrorHandlerDelegate>"
B32@0:8^{__SecTrust=}16^{__CFArray=}24
B32@0:8^{__CFArray=}16^{__CFString=}24
B32@0:8^{__SecCertificate=}16^{__CFString=}24
^{__CFArray=}24@0:8^{SecCmsSignedDataStr=}16
B32@0:8@16N^^{SecCmsMessageStr}24
^{SecCmsSignedDataStr=}24@0:8^{SecCmsMessageStr=}16
B24@0:8^{SecCmsMessageStr=}16
B24@0:8^{__SecTrust=}16
q32@0:8^{SecCmsSignedDataStr=}16@24
d24@0:8@16
B24@0:8@?16
@20@0:8B16
@"SSCoalescingQueue"
B40@0:8@16@24@32
@"<SSBookDownloadStatus>"
B24@0:8^{sqlite3_stmt=}16
v48@0:8^{sqlite3_stmt=}16^B24^B32^B40
@24@0:8^{dispatch_source_type_s=}16
B32@0:8q16@24
^{sqlite3_stmt=}28@0:8@16B24
^{sqlite3=}
^{__CFDictionary=}
@"SSVPlayActivityEventContainerIDs"
@"SSVPlayActivityEnqueuerProperties"
@"NSTimeZone"
@"SSVPlayActivityEventItemIDs"
B48@0:8@16@24q32@40
@24@0:8@"NSString"16
B32@0:8@16@"NSString"24
B24@0:8@"NSDictionary"16
@"NSDictionary"24@0:8@"NSArray"16
@"NSObject<OS_xpc_object>"24@0:8@"NSArray"16
@32@0:8@"NSString"16@24
@"NSString"24@0:8@"NSString"16
@"NSSet"16@0:8
@"NSMutableDictionary"24@0:8@"NSDictionary"16
v32@0:8^{sqlite3_stmt=}16N^i24
@"SSSQLiteQuery"
@32@0:8r^@16Q24
B40@0:8@16r^@24Q32
v40@0:8r^@16Q24@?32
@"SSSQLiteQueryDescriptor"
@40@0:8r^@16Q24@32
v24@0:8#16
@"SSSQLitePredicate"
v48@0:8@16@24@32Q40
v40@0:8@16@24Q32
@"SSPromiseCompletionBlocks"
@"SSPromiseResult"
@"NSConditionLock"
v40@0:8^@16r^@24q32
@"SSPurchase"
@"SSURLConnectionResponse"
v32@0:8@"NSStream"16Q24
@28@0:8s16@20
q32@0:8@16^@24
^{__CFHTTPMessage=}
@"NSOutputStream"
@"NSMutableURLRequest"
@"<SSHTTPServerRequestHandlerDelegate>"
v48@0:8Q16@24@32@?40
v44@0:8@16Q24B32@?36
v48@0:8@16Q24Q32@?40
v32@0:8@"NSString"16@?<v@?@"NSError">24
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"NSString"16Q24B32@?<v@?@"NSArray"Q@"NSError">36
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16Q24Q32@?<v@?@"NSError">40
v40@0:8@16Q24@?32
v40@0:8Q16Q24@?32
v48@0:8@16B24Q28B36@?40
@"NSOperationQueue"
@"SSVPlayActivityTable"
@"NSXPCConnection"
@"NSIndexSet"
v48@0:8q16@24@32@?40
@"<SSPurchaseManagerDelegate>"
@40@0:8@16@24#32
B56@0:8^d16^d24^d32^d40@48
@40@0:8q16q24@32
@48@0:8q16q24@32@40
@56@0:8@16@24@32@40@48
Q36@0:8@16B24@28
@40@0:8@16@24Q32
d24@0:8d16
v32@0:8@"NSCache"16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@32@0:8@16^B24
@"SSCircularBuffer"
@"SSMetricsController"
@"NSMapTable"
B32@0:8d16d24
B24@0:8d16
@"SSVPBPlayActivityEnqueuerProperties"
{?="characterDisplayedCount"b1"cloudPlaylistID"b1"containerAdamID"b1"equivalencySourceAdamID"b1"eventDateTimestamp"b1"eventSecondsFromGMT"b1"itemCloudID"b1"itemDuration"b1"itemEndTime"b1"itemStartTime"b1"persistentID"b1"purchasedAdamID"b1"radioAdamID"b1"stationID"b1"storeAccountID"b1"subscriptionAdamID"b1"tvShowPurchasedAdamID"b1"tvShowSubscriptionAdamID"b1"containerType"b1"displayType"b1"endReasonType"b1"eventType"b1"itemType"b1"mediaType"b1"reasonHintType"b1"sourceType"b1"systemReleaseType"b1"internalBuild"b1"offline"b1"privateListeningEnabled"b1"sBEnabled"b1"siriInitiated"b1}
@72@0:8@16q24@32@40@48@56@64
@"SSFamilyCircle"
@32@0:8#16^{_NSZone=}24
r^v16@0:8
B52@0:8Q16I24@28^@36^@44
B68@0:8Q16I24@28@36^@44^@52^@60
@36@0:8@16@24B32
@"<SSVSAPContext>"
@44@0:8@16q24@32B40
@52@0:8@16q24@32@40B48
@48@0:8@16@24@32#40
@56@0:8@16d24d32@40@48
@"SSPersistentCache"
Q32@0:8@16@24
@"NSFileManager"
v44@0:8@16@24B32@?36
v28@0:8B16@?20
v36@0:8B16@20@?28
@"SSDatabaseCache"
@"SSAppPurchaseHistoryDatabase"
@28@0:8B16@20
@"<SSCacheObject>"32@0:8@"NSData"16@"NSString"24
B24@0:8@"NSString"16
@"SSVMediaSocialPostDescription"
@"SSVPlatformContext"
@40@0:8Q16Q24@32
@24@0:8d16
@40@0:8@16Q24@32
@"<NSObject>"
@"NSData"32@0:8@"NSData"16^@24
B40@0:8@"NSMutableData"16@"NSData"24^@32
@"SSVFairPlaySAPContext"
@"NSMutableOrderedSet"
@36@0:8@16q24B32
@44@0:8@16@24q32B40
@"SSMetricsEventTable"
@40@0:8@16q24@32
@44@0:8@16q24B32@36
@"SSMetricsEventController"
q32@0:8r*16Q24
q20@0:8B16
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@"SSPurchaseResponse"
@"<SSDownloadMonitorDelegate>"
@28@0:8B16^@20
@"SSVSubscriptionEntitlements"
@28@0:8Q16B24
@28@0:8q16B24
@56@0:8@16@24q32@40@48
@52@0:8B16@20@28@36@44
v32@0:8@"ASDJobManager"16@"NSArray"24
@"ASDJobManager"
@"SSDoubleLinkedListNode"
@"ASDJob"
B40@0:8@16Q24^@32
B72@0:8^@16^@24Q32Q40@48@56^@64
B80@0:8^@16^@24Q32Q40Q48@56@64^@72
B32@0:8Q16^@24
B84@0:8^@16^@24Q32Q40Q48B56@60@68^@76
@32@0:8@?16Q24
 ?^}
u2A2
?+29
com.apple.StoreServices.SSKeychain.%p
StoreServices
LegacySPIUsage
-[SSKeychain createAttestationDataForAccountIdentifier:purpose:completionBlock:]
Unexpected invocation: `%{public}s`. This is legacy SPI that is due to be removed. Please send this report to 'Store Services | All'.
{public}
-[SSKeychain createX509CertChainDataForAccountIdentifier:purpose:completionBlock:]
v8@?0
v16@?0@"NSObject<OS_xpc_object>"8
-[SSKeychain deleteKeychainTokensForAccountIdentifier:completionBlock:]
Expected invocation: `%{public}s`. This is legacy SPI that is still in use and not planned for removal at this time.
-[SSKeychain getPublicKeyDataForAccountIdentifier:purpose:completionBlock:]
-[SSKeychain keyCountForAccountIdentifier:completionBlock:]
-[SSKeychain signData:reason:fallback:cancel:forAccountIdentifier:completionBlock:]
-[SSKeychain signData:context:completionBlock:]
-[SSKeychain x509CertChainDataForAccountIdentifier:purpose:regenerateCerts:completionBlock:]
com.apple.StoreServices.HTTPServer
[%{public}@] Failed to set port. A server is already running.
https://
http://
error
localhost
%@%@:%d
%@localhost:%d
[%{public}@] Failed to start server. Another server is already running.
[%{public}@] Failed to create socket.
[%{public}@] Failed to bind socket address.
[%{public}@] Server running
[%{public}@] Server stopped
[%{public}@] Failed to accept the socket.
ISCopyGzippedDataForData
[%{public}@] Fialed to serialize XML object into body data. Error = %@
ISCopyDecompressedGZipDataForData
[%{public}@] Error reading body data into XML object. Error = %@
close
Connection
Content-Type
text/html
Content-Length
v32@?0@"NSString"8@"NSString"16^B24
actionType
actionURL
details
dialogId
dialogType
dualAction
message
result
targetId
userActions
authenticate
biometricsAnalyze
cancel
cancelHomeButton
enterPassword
enterPasswordCancelled
enterPasswordPressed
navigate
open
BiometricId
EnableTouchIdPurchases
ExistingOrCreate
Password
PaymentSheet
UserNamePassword
invalidCredentials
paymentSheetFailedToLoad
paymentSheetTimeout
failure
success
unknown
Biometric
Cancel
CreateNewAppleId
EnterPassword
IForgot
NotNow
Open
UseExistingAppleId
OkCancel
SignIn
com.apple.onboarding.applearcade
com.apple.onboarding.appstore
com.apple.onboarding.ibooks
com.apple.onboarding.itunesstore
com.apple.onboarding.itunesu
com.apple.onboarding.applemusic
com.apple.onboarding.podcasts
com.apple.onboarding.videos
com.apple.onboarding.tvapp
%{public}@: %{public}@ has an invalid content version. Refusing to acknowledge it.
v20@?0B8@"NSError"12
%{public}@: Returning NO from shouldDisplayPrivacyLinkWithIdentifier: because the internal default is set.
%{public}@: Determining whether or not the privacy policy should be displayed for %{public}@.
%{public}@: No privacy policy for %{public}@ has ever been acknowledged.
%{public}@: identifier = %{public}@ | lastAcceptedVersion = %lu | currentVersion = %lu
v16@?0Q8
%{public}@: Could not initialize the privacy view controller. Make sure your project has linked the AMSUI framework.
v32@?0@"NSString"8@"NSNumber"16^B24
%{public}@: The privacy acknowledgement on the account matches what we're trying to add to it. account = %{public}@ | account.privacyAcknowledgement = %{public}@ | privacyAcknowledgement = %{public}@
%{public}@: Failed to save %{public}@. error = %{public}@
%{public}@: There's no active account to acknowledgement privacy consent on.
Not Available
No account to acknowledge
%{public}@: Acknowledging privacy consent on the active account. activeAccount = %{public}@ | privacyAcknowledgement = %{public}@
%{public}@: Acknowledging privacy consent on local account. privacyAcknowledgement = %{public}@
Privacy acknowlegment not available for local accounts
guid
privacyAcknowledgement
POST
application/x-apple-plist
%{public}@: Failed to acknowledge privacy consent. error = %{public}@
Acknowlegment Failed
Failed to send acknowlegment
%{public}@: Successfully acknowledged privacy consent, but the response body is nil.
%{public}@: Successfully acknowledged privacy consent.
SSPrivacyController.m
identifier cannot be empty or nil.
AMSUIPrivacyViewController
Class getAMSUIPrivacyViewControllerClass(void)_block_invoke
Unable to find class %s
void *AppleMediaServicesUILibrary(void)
OBBundle
Class getOBBundleClass(void)_block_invoke
void *OnBoardingKitLibrary(void)
OBPrivacyFlow
Class getOBPrivacyFlowClass(void)_block_invoke
ISStoreURLOperation
Class getISStoreURLOperationClass(void)_block_invoke
void *iTunesStoreLibrary(void)
ISProtocolDataProvider
Class getISProtocolDataProviderClass(void)_block_invoke
ISOperationQueue
Class getISOperationQueueClass(void)_block_invoke
com.apple.storeservices.applicationutils
-[SSApplicationUtil restartApplication:]
[%@] Restart Application returned error code: %d
[%@] Restart Application succeeded
LWHQ
hdmv
SDMV
480p
720p
1080p
downloadKey
flavor
sinfs
%@ [Flavor: %@, URL: %@]
com.apple.StoreServices.SSVFamilyContentDeletionNotification
UserInfo
pairs
B24@?0Q8@"NSObject<OS_xpc_object>"16
SSNotificationTriggerDownloads
A download queue must have download kinds
v16@?0@"NSError"8
%@: Send queue changed with %lu removals
artist
brand
iTunesBrand
user
SSDownloadThumbnailAvailableNotification
artwork
delta-package
media
newsstand-artwork
asset-pack-manifest
transit-maps-data
xmlfeed
book
bg-download
bg-upload
coached-audio
ebook
feature-movie
song
music-video
ringtone
software
tv-episode
tone
document
storekit-content
newsstand
nsurlsession
other
podcast
videoPodcast
vpn-plugin
os-update
itunes-u
-[SSDownload assetsForType:]
-[SSDownload pause]
-[SSDownload prioritizeAboveDownload:completionBlock:]
v32@?0@"NSString"8@"NSMutableArray"16^B24
-[SSDownload setDownloadHandler:completionBlock:]
com.apple.iBooks
com.apple.AppStore
com.apple.MobileStore
Books
bl_audiobooks_download_in_bookassetd
SSDownloadErrorKeyJADownloadQueueToken
SSDownloadErrorKeyRetryInterval
SSDownloadPhaseCanceled
SSDownloadPhaseDataRestore
SSDownloadPhaseDownloading
SSDownloadPhaseFailed
SSDownloadPhaseFinished
SSDownloadPhaseInstalling
SSDownloadPhasePaused
SSDownloadPhasePreflight
SSDownloadPhaseProcessing
SSDownloadPhaseUploading
SSDownloadPhaseWaiting
Must specify target app or content kind
action
lookup
search
term
library-link
kind
itms-appss
itms-bookss
itmss
com.apple.iTunesStore.downloadInfo
accountInfo
artworkAssetFilename
etags
mediaAssetFilename
preferredAssetFlavor
purchaseDate
referrerApp
referrerURL
requestPersistentID
ringtone-guid
trackPersistentID
xmlAssetFilename
app-receipt
artwork-template-name
asset-info
file-size
assets
betaExternalVersionIdentifier
bundleVersion
cancelIfDuplicate
deltaPackages
fileExtension
hls-playlist-url
chunks
chunkSize
hashes
has-4k
has-dolby-vision
has-hdr
human-friendly-publication-version
iad-attribution
iad-conversion-date
iad-impression-date
initialODRSize
is-hls
is-in-queue
is-matched-redownload
is-premium
is-purchased-redownload
isStreamable
languages
network-constraints
PageProgression
priorVersionExternalIdentifier
publication-version
rating
rental-id
show-composer
work
requires-plugged-in
softwareVersionExternalIdentifier
software-type
storeCohort
thinned-app
transitGeoFileURL
uncompressedSize
variantId
downloadPolicy
movpkg
SSDownloadMetadata.m
Only keyed coding is supported
dict
prerender
playlist
duration
genre
rental
small-image
title
identifier
preorder-id
subtitle
%lld
softwareIconNeedsShine
softwareVersionBundleId
bundle-id
cloud-id
sagaId
playlistArtistName
composerName
document-target-app
download-permalink
enableExtensions
episode-number
episode-sort-id
artworkURL
artwork-urls
genreName
genre-name
hasMessagesExtension
is32BitOnly
compilation
isDeviceBased
explicit
high-definition
isRental
isSample
isSharedResource
isTvTemplateApp
songId
launch-extras-url
launchProhibited
messagesIconUrl
network-name
episode-guid
podcast-feed-url
podcast-type
year
season-number
show-name
longSeasonDescription
%{public}@: Error unarchiving policy. Error = %{public}@
is-apple-music-show
description
sort-artist
sort-album
sort-name
thumbnail-newsstand-binding-edge
thumbnail-newsstand-binding-type
thumbnail-url
unmodified-title
download-id
videoDetails
%{public}@: Failed to archive policy. Error = %{public}@
softwareIcon57x57URL
icon-url
itemName
movement
movement-number
movement-count
cancel-download-url
copyright
metadata
DownloaderID
is-auto-download
is-redownload
appleId
page-progression-direction
pageProgressionDirection
buy-params-256
buyParams
action-params
redownload-params
UIRequiredDeviceCapabilities
auto-download
lrpluspub
lrpub
pluspub
yyyy-MM-dd'T'HH:mm:ss'Z'
playback-type
download
Unable to add playback-type query param
artistId
artistName
composerId
discCount
discNumber
genreId
itemId
longDescription
playlistId
playlistName
releaseDate
trackCount
trackNumber
artist-id
artist-name
composer-id
disc-count
disc-number
genre-id
item-id
long-description
collection-id
collection-name
release-date
track-count
track-number
<%@: %p
; supportsMusicCatalogPlayback = YES
; supportsAddToCloudMusicLibrary = YES
; canSubscribeToMusicCatalog = YES
; subscriptionStatus = <%@: %p>
; subscriptionStatus = %@
v16@?0@"NSMutableString"8
SSVSubscriptionStatusDidChangeNotification
SSVSubscriptionStatusAccessPolicyDidChangeNotification
SSVSubscriptionStatusOptionAllowsExpiredStatuses
SSVSubscriptionStatusOptionAuthenticatesIfNecessary
SSVSubscriptionStatusOptionIgnoreCache
SSVSubscriptionStatusOptionLocalizedAuthenticationReason
reason
com.apple.StoreServices.SSVSubscriptionStatusCoordinator.callback
com.apple.StoreServices.SSVSubscriptionStatusCoordinator
v12@?0i8
FuseSubscriptionStatus
v28@?0@"SSVSubscriptionStatus"8B16@"NSError"20
FuseSubscriptionStatusDate
-[SSVDownloadQueueRequest startWithResponseBlock:]
SSVSecureKeyDeliveryErrorDomain
SSVSecureKeyDeliveryErrorUserInfoKeyResponseStatus
SSVSecureKeyDeliveryErrorUserInfoKeyResponseVersion
SSVSecureKeyDeliveryErrorUserInfoKeyServerError
SSVSecureKeyDeliveryErrorUserInfoKeyDialogDictionary
fairplay-streaming-request
streaming-keys
version
fairplay-streaming-response
dialog
expiration-time
failureType
lease-action
offline
playback-start-time
renew-after
status
skipped-rental-checkout
renew
start
stop
com.apple.fpsrequest
com.apple.StoreServices.SSVSecureKeyDeliveryRequestOperation.accessQueue
v24@?0@"NSData"8@"NSError"16
AVAssetResourceLoadingRequestStreamingContentKeyRequestRequiresPersistentKey
application/json
[%{public}@] Server response returned invalid dictionary object (class is %@)
v24@?0@"NSDictionary"8@"NSError"16
[%{public}@] Server response returned invalid version object (class is %@)
[%{public}@] Server response returned invalid version %lli, current version: %lli
[%{public}@] Server response returned invalid root dictionary (class is %@)
[%{public}@] Unable to create CKC due to streaming request operation error: %@
[%{public}@] Unable to create persistent CKC due to error: %@
AVStreamingKeyDeliveryPersistentContentKeyType
[%{public}@] Unable to create key server request because JSON serialization returned no data without an error.
[%{public}@] Unable to create key server request because JSON serialization returned an error: %@
[%{public}@] Unable to create key server request because creating the SPC failed with error: %@
[%{public}@] Certificate data operation returned no data.
[%{public}@] Certificate data operation failed with error: %@
[%{public}@] Key server returned a streaming key 'dictionary' of the wrong class (class is %@)
[%{public}@] Key server returned an invalid streaming key ID (class is %@)
[%{public}@] Found the streaming key dictionary for ID: %lli
[%{public}@] Streaming key response for ID %lli has a CKC response string that did not successfully decode into data.
[%{public}@] Streaming key response for ID %lli has an invalid CKC response class (class is %@)
[%{public}@] Streaming key response for ID %lli has an invalid status: %lli or failure type: %{public}@. Dialog dictionary is: %{public}@
SSVMediaContentTasteItemUpdateItem
SSVMediaContentTasteItemUpdateUpdateDate
com.apple.itunesstored
AutoUpdatesEnabled
InAppReviewEnabled
AutoPlayVideoSetting
UserSetAutoPlayVideoSetting
LastUserSetAutoPlayVideoValue
ReduceMotionSetLastAutoPlayVideoValue
LastReduceMotionValue
MotionAutoPlayVideoSetLastAutoPlayVideoValue
LastMotionAutoPlayVideoValue
LowPowerModeSetLastAutoPlayVideoValue
LastLowPowerModeValue
SSErrorDomain
SSErrorAllowBioAuthenticationKey
SSErrorAllowRetryKey
SSErrorAskPermissionRequestIdentifier
SSErrorBiometricStatusCodeKey
SSErrorHTTPStatusCodeKey
SSErrorKeychainStatusCodeKey
SSErrorMinimumNetworkTypeKey
SSErrorNetworkSizeLimitBytesKey
SSErrorNetworkSizeLimitKey
SSErrorInstallErrorNameKey
SSServerErrorDomain
DEFAULT_ERROR_TITLE
NOT_ENOUGH_SPACE_TITLE
NOT_ENOUGH_SPACE_SINGULAR
NOT_ENOUGH_SPACE_PLURAL
NOT_ENOUGH_SPACE_SETTINGS
prefs:root=General&path=USAGE
NOT_ENOUGH_SPACE_SPECIFIC_%@
external-prod
prod
sandbox
wifi_only
Library
Preferences
plist
-[SSVRefreshSubscriptionRequest startWithResponseBlock:]
v24@?0@"SSVSubscriptionResponse"8@"NSError"16
DestinationURL was unspecified; falling back to directory for asset type %ld
%{public}@
Creating sandbox extension for %{public}@
Media
Downloads
Purchases
Podcasts
Updates
audiobook
epub
image
movie
movierental
music
musicvideo
tvepisode
vpnplugin
feed
B16@?0@"NSURLQueryItem"8
com.apple.StoreServices.SSOperationProgress
%@: %lld / %lld @ %.3f (%.2f seconds)
com.apple.itunesstored.application_installed
com.apple.itunesstored.autodownloadschanged
com.apple.itunesstored.autodownloaddefaultschange
com.apple.itunesstored.downloadmonitorchanged
com.apple.itunesstored.invalidatebags
com.apple.itunesstored.networktypeoverridechange
com.apple.iTunesStore.daemon.launched
com.apple.itunesstored.accountschanged
com.apple.StoreServices.SSAccountStore.activeaccountchanged
com.apple.itunesstored.aps.received
com.apple.StoreServices.StorefrontChanged
com.apple.itunesstored.triggerdownloads
com.apple.itunesstored.updatequeuechanged
com.apple.itunesstored.updatesstorechanged
com.apple.itunesstored.downloadfinished
com.apple.itunesstored.ssvsubscriptionstatuscoordinator.changed
com.apple.StoreServices.SubscriptionEntitlementsChanged
com.apple.itunesstored.assetsupdated
com.apple.appstored
%@ [%d]: %@
yyyy-MM-dd HH:mm:ss.SSS
com.apple.itunesstored.defaultschange
InternalBuild
ISAlwaysSendGuid
ISBagOverrideCardEnrollmentManual
DebugFileLevel
DebugLevel
LogAppInstallMetrics
LogIncomingHeaders
LogNetworkTimingMetrics
LogOutgoingHeaders
LogXML
LogFullMetricsRequest
DisableGDPR
DisableInstallAttributionPingbackDelay
DisableNetworkLogging
DisableServerPrompts
IncludeFullResponseBodiesInNetworkLogs
AllowDuplicateAccounts
ISAppReceiptRevocationEnabled
ISIgnoreExtendedValidation
ISScoreDevice
ISCacheBuster
ISTrackPerformance
UseAccountsFramework
UseAttestationPipeline
UseFileBasedPaymentSheetProxy
UseSSBag
UseAppstored2
UseAppstoredUpdates2
SSVPlaybackResponseErrorUserInfoKeyDialogDictionary
v24@?0@"SSVPlaybackItem"8^B16
songList
v32@?0@"NSDictionary"8Q16^B24
SSVFairPlayErrorDomain
SSDownloadManifestRequest.m
Must provide a URL request
-[SSDownloadManifestRequest startWithManifestResponseBlock:]
v24@?0@"SSDownloadManifestResponse"8@"NSError"16
metrics-page-event-body-dictionary
com.apple.StoreServices.SSVURLCache.accessQueue
_SSVURLCPEB
SSDownloadManifestResponse.m
valid
com.apple.StoreServices.%@.%p
-[SSRequest cancel]
-[SSRequest disconnect]
v24@?0@"NSObject<OS_xpc_object>"8@"NSObject<OS_xpc_object>"16
Request already started
com.apple.itunesstored.%@.%p
%@: Taking process assertion
%@: Closing background task early
%@: Releasing process assertion
%@: Background task expired
com.apple.StoreServices.SSUniqueExecutionQueue.callBlockQueue
com.apple.StoreServices.SSUniqueExecutionQueue.executeBlockQueue
com.apple.StoreServices.SSUniqueExecutionQueue.promiseAccessQueue
SSUniqueExecutionQueue: self is out-of-scope.
v24@?0@8@"NSError"16
SSUniqueExecutionQueue: The promise already finished. Calling the completion block directly.
SSVMediaContentTasteControllerItemsDidChangeNotification
com.apple.itunesstored.mediaContentTasteControllerItemsDidChangeNotification
com.apple.StoreServices.SSVMediaContentTasteController.accessSerialQueue
com.apple.StoreServices.SSVMediaContentTasteController.calloutSerialQueue
[%@] Received items did change notification with revision ID: %llu, current revisionID: %llu
[%@] Defering refresh due to in-progress request count: %lli
v24@?0@"SSVMediaContentTasteUpdateResponse"8@"NSError"16
v32@?0@"SSVMediaContentTasteItemUpdate"8Q16^B24
%@ %@
buildVersion
deviceGUID
deviceName
timeZoneName
systemReleaseType
SBEnabled
storeAccountID
storeFrontID
privateListeningEnabled
UNKNOWN
CUSTOMER
CARRIER
DEVELOPER
INTERNAL
(unknown: %i)
-[SSInstallAttributionParamsRequest startWithCompletionBlock:]
appAdamId
adNetworkId
campaignId
impressionId
timestamp
attributionSignature
originatingBundleId
overrideCampaignLimit
[%{public}@]: Failed initializing from XPC
kSSPurchaseRequestFinishedNotification
SSPurchaseErrorKeyShouldCancelPurchaseBatch
amd-domains
sign-sap-setup-cert
sign-sap-setup
primeUrl
signed-actions
sign-sap-request
sign-sap-response
storefront-header-suffix
musicCommon
musicConnect
aucAdminStatus
musicSubscription
fps-cert
fps-request
musicMescal
actions
[%@] Failed to get bag value for key: %@. Error: %@
v32@?0@"NSString"8@"NSDictionary"16^B24
SSVNetworkingDidStartNotification
SSVNetworkingDidStopNotification
com.apple.StoreServices.SSVLoadURLOperation
AppleLanguageCodeSetup
%{public}@: Using the value stored in AppleLanguageCodeSetup, %{public}@
%{public}@: There's no value stored in AppleLanguageCodeSetup.
AppleLanguages
%{public}@: Setting the active account's storefront after running %{public}@. activeAccount = %{public}@ | storefrontID = %{public}@
X-Apple-Application-Instance
Apple-Timing-App
AKAppleIDSession
%@: URL bag was needed, but none was provided
Accept-Language
User-Agent
ISNetworkObserver
newCustomer
true
buster
; %@
?%@=%@
&%@=%@
SSObserver.m
Invalid parameter not satisfying: %@
createsDownloads
createsJobs
createsInstallJobs
com.apple.StoreServices.SSPurchase
Must provide buy parameters
v32@?0@8@16^B24
%{public}@: Failed to archive download policy. Error = %{public}@
%{public}@: Failed to archive request properties. Error = %{public}@
%{public}@: Failed to unarchive download policy. Error = %{public}@
%{public}@: Failed to unarchive request properties. Error = %{public}@
SSPurchase.m
account
affiliate
ownerAccountDSID
background
buyparams
createdl
createjb
createinstalljb
dislkscrn
ensrvtp
fsize
fltassts
gratids
ignfrcpw
plchid
plyreq
reqcap
skipSoftwareAccountPreflight
usesrdl
presentingSceneIdentifier
uniqueid
dlprops
itemdict
offerid
dlpolicy
netcon
requestp
tonestyles
assignee
contact
tonestyle
makedefault
makedefaulttext
pendingApps
endId
startId
%@: Refreshing download: %@ / %@
itms-services
getShareIdentifiers
properties must not be nil
URLRequest must not be nil
v24@?0@"SSURLConnectionResponse"8@"NSError"16
-[SSURLConnectionRequest startWithConnectionResponseBlock:]
Value type not supported
-[SSItemLookupRequest startWithItemLookupBlock:]
status-code
v24@?0@"NSArray"8@"NSError"16
item-metadata
album-metadata
items
com.apple.StoreServices.SSVAppleAccountStore
ACAccountStore
ACAccountStoreDidChangeNotification
store-offers
company
average-user-rating
game-center-enabled
rank
explicitContentRestriction
type
link-type
Invalid offer identifier
body-url
number-of-pages
user-rating-count
related-items
body
body-mime-type
text/plain
subject
tweet-info
text
%@: %@
collection-artist-name
composer-name
episode-id
is-compilation
yyyy-MM-dd HH:mm:ss ZZZ
release-date-string
gifting-button
series-name
view-user-reviews-url
tell-a-friend
%@: (%@) %@
preview-url
preview-duration
asset-url
size
album
course
eBook
booklet
podcast-episode
tv-season
wemix
link
nagano
software-update
audio
video
texttone
customers-also-bought
itms://?action=audiobooks
itms://?action=itunes-u
itms://?action=movies
itms://?action=music-videos
itms-apps://?action=newsstand
itms://?action=podcasts
itms://?action=ringtones
itms-apps://?action=software
itms-apps://?action=updates
itms://?action=music
itms://?action=tv-shows
UIApplicationLaunchOptionsDeletedFamilyContentKey
com.apple.itunesstored.deletefamilycontent
UIApplicationLaunchOptionsNewsstandDownloadsKey
com.apple.itunesstored.finishdownload
ProcessAssertionReasonBackgroundDownload
ProcessAssertionReasonTaskCompletion
Must have a valid account identifier
Must have a valid rental key identifier
Must have a valid download identifier
Must have at least one sinf
-[SSRentalCheckoutRequest startWithConnectionResponseBlock:]
iTunesDemo-D080A994-76FD-4BF8-BE64-6C9439D0338E
iTunesLocal-421A04EA-479A-4E46-B49D-556F7144518D
accountCredits
accountSource
altDSID
automaticDownloadKinds
availableServiceTypes
demoAccountRawPassword
dsid
eligibleServices
enabledServiceTypes
firstName
freeDownloadsPasswordSetting
isActiveLockerAccount
isDemoAccount
isManagedAppleID
isNewCustomer
iTunesPassSerialNumber
lastName
mergedPrivacyAcknowledgements
paidPurchasesPasswordSetting
scope
storefrontID
always
never
sometimes
com.apple.StoreServices.autodownloadprompt
production
com.apple.StoreServices.SSAccount.backingAccountAccessQueue
SSAccountStore: Setting a non-pet as the password equivalent token. account = %{public}@
SSAccountStore: Setting a password that may be a password equivalent token. account = %{public}@
%{public}@: Found backing identifier for secure token: %@
com.apple.itunesstored.token
%{public}@: Adding new secure token to keychain
%{public}@: Updating existing secure token in keychain
%{public}@: Failed to locate backing identifier for secure token
%{public}@: Someone is changing the country code of an account's storefront outside of authentication. account = %{public}@ | oldStorefront = %{public}@ | newStorefront = %{public}@ | callStack = %{public}@
%{public}@: Someone is setting an account's storefront to nil. account = %{public}@ | callStack = %{public}@
SSAccount.m
-[SSAccount initWithXPCEncoding:] provided with an invalid xpc_object_t object.
 Local Account
 altDSID = %@ | DSID = %@ | username = %@ | backingIdentifier = %@ | scope = %ld | active = %@ | authenticated = %@
 | storefront = %@>
terms-check
accepted
p2-content-restore
allowed-kinds
nil completionBlock
-[SSAccount getPurchasedItemsForItems:completionBlock:]
accountInfo.accountKind
accountInfo.appleId
accountInfo.accountName
personInfo.acAccountName
altDsPersonId
creditDisplay
dsPersonId
accountInfo.address.firstName
-[SSAccount getITunesMatchStatusWithCompletionBlock:]
-[SSAccount getKeybagSyncDataWithType:completionHandler:]
isManagedStudent
accountInfo.address.lastName
%{public}@: Failed to reset transient data for an account. account = %{public}@ | error + %{public}@
%{public}@: Found secure token
%{public}@: Secure token lookup failed with error: %{public}@
%{public}@: Secure token lookup failed for nil identifier
X-Apple-Request-Store-Front
x-apple-request-store-front
%{public}@: Merging %{public}@ with %{public}@. creditsString changed.
%{public}@: Merging %{public}@ with %{public}@. uniqueIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. accountName changed.
%{public}@: Merging %{public}@ with %{public}@. altDSID changed.
%{public}@: Merging %{public}@ with %{public}@. iTunesPassSerialNumber changed.
%{public}@: Merging %{public}@ with %{public}@. secureToken changed.
%{public}@: Merging %{public}@ with %{public}@. storeFrontIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. firstName changed.
%{public}@: Merging %{public}@ with %{public}@. lastName changed.
%{public}@: Merging %{public}@ with %{public}@. isActiveLockerAccount changed.
%{public}@: Merging %{public}@ with %{public}@. accountKind changed.
%{public}@: Merging %{public}@ with %{public}@. accountScope changed.
%{public}@: Merging %{public}@ with %{public}@. accountSource changed.
%{public}@: Merging %{public}@ with %{public}@. didFallbackToPassword changed.
%{public}@: Merging %{public}@ with %{public}@. freeDownloadsPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. isManagedAppleID changed.
%{public}@: Merging %{public}@ with %{public}@. isNewCustomer changed.
%{public}@: Merging %{public}@ with %{public}@. paidPurchasesPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. availableServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. enabledServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. eligibilityForService changed.
-[SSAccount updateAccountPasswordSettingsWithRequestProperties:completionBlock:]
displayedServerPrompt-%@
lastAttemptForServerPrompt-%@
iTunes
device
-[SSRemoteWebViewRequest startWithCompletionBlock:]
AppStore
appstored
BagConfig
com.apple.StoreServices.authbegin
com.apple.StoreServices.authfail
com.apple.StoreServices.authfinish
com.apple.StoreServices.authsubmit
SSVerifyCredentialsAccountScope
%{public}@: You shouldn't call -[SSAuthenticateRequest init] directly. Use initWithAccount: or initWithAuthenticationContext: instead.
%{public}@: [%{public}@] An error occurred while authenticating %{public}@. error = %@
%{public}@: [%{public}@] Starting authentication request. context = %@ | context.accountName = %{public}@
%{public}@: Not entitled to talk to AuthKit. Sending request to itunesstored.
%{public}@: [%{public}@] Authenticating the demo account.
%{public}@: [%{public}@] Skiping authentication. %{public}@ doesn't need to be authenticated.
%{public}@: [%{public}@] The device doesn't have an active account. %{public}@ will become the active account.
%{public}@: [%{public}@] Failed to make the account the active account. error = %@
Nil Account
We can't authenticate a nil account.
v24@?0@"ACAccount"8@"NSError"16
@"SSPromise"16@?0@"SSUpdateAccountResponse"8
v16@?0@"SSAuthenticateResponse"8
v24@?0@"SSAuthenticateResponse"8@"NSError"16
%{public}@: [%{public}@] Using the device's demo account. username = %{public}@
%{public}@: [%{public}@] Attempting to find an existing account using: altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
%{public}@: [%{public}@] Found an existing account. account = %{public}@
%{public}@: [%{public}@] There's no existing account matching the information we were given, but since we were given a username (%{public}@), we'll create one.
%{public}@: [%{public}@] An altDSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A DSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A password was provided.
%{public}@: [%{public}@] A PET was provided.
%{public}@: [%{public}@] There's no existing account matching the information we were given. The user will be prompted to enter their username and password.
%{public}@: [%{public}@] Failed to decode dialog from error. %{public}@
%{public}@: [%{public}@] Unknown dialog from error: %@
%{public}@: [%{public}@] Presenting dialog from error: %@
%{public}@: [%{public}@] Failed to present dialog: %@ error: %{public}@
v24@?0@"AMSDialogResult"8@"NSError"16
mach-lookup
com.apple.ak.auth.xpc
com.apple.authkit.client.private
com.apple.authkit.client.internal
-[SSAuthenticateRequest _performRemoteAuthenticationWithCompletion:]
%{public}@: XPC connection interrupted while attempting authentication request
%{public}@: An error occurred during authentication. error = %@
%{public}@: [%{public}@] Authentication request finished. response.authenticatedAccount.accountName = %{public}@ | response.authenticateResponseType = %ld | response.error = %@
%{public}@: [%{public}@] The user cancelled the authentication.
%{public}@: [%{public}@] The server rejected the credentials we passed it.
%{public}@: [%{public}@] This is a new account that needs to be reviewed.
%{public}@: [%{public}@] Authentication request failed. error = %@
-[SSVRepairApplicationRequest startWithResponseBlock:]
signIn
SSAccountStoreAuthKitAllowPasswordReuse
  accountName = %@
  accountScope = %ld
  allowsBootstrapCellularData = %d
  allowsRetry = %d
  allowsSilentAuthentication = %d
  altDSID = %@
  cancelButtonLabel = %@
  canCreateNewAccount = %d
  canSetActiveAccount = %d
  clientIdentifierHeader = %@
  displaysOnLockScreen = %d
  HTTPHeaders = %@
  isAccountNameEditable = %d
  logUUID = %@
  okButtonLabel = %@
  persistsAcrossDeviceLock = %d
  persistsPasswordFallback = %d
  preferrediTunesStoreClient = %@
  promptStyle = %ld
  promptTitle = %@
  reasonDescription = %@
  requestParameters = %@
  requiredUniqueIdentifier = %@
  shouldCreateNewSession = %d
  shouldFollowAccountButtons = %d
  shouldIgnoreAccountConversion = %d
  shouldIgnoreProtocol = %d
  shouldSuppressDialogs = %d
  signupRequestParameters = %@
  tokenType = %ld
  touchIDContinueToken = %@
  URLBagContext = %@
  userAgentComponents = %@
%@: Someone is calling setInitialPassword:. This method is deprecated and will be passed to setPasswordEquivalentToken: which may not be what the caller intended.
value
APPS-BRAZIL
GAMES
ITUNESGAMES
ITUNES-GAMES
NZ-OFLC
RP13
RP16
NOT RATED
UNRATED
BBFC
MPAA
PG-13
NC-17
RIAA
CLEAN
EXPLICIT
TV-US
US-TV
TV-G
TV-MA
TV-PG
TV-Y
TV-Y7
TV-14
Rating-Brazil_10
Rating-Brazil_12
Rating-Brazil_14
Rating-Brazil_16
Rating-Brazil_18
Rating-Brazil_L
Rating-Movie_NZ_G
Rating-Movie_NZ_PG
Rating-Movie_NZ_M
Rating-Movie_NZ_R13
Rating-Movie_NZ_R15
Rating-Movie_NZ_R16
Rating-Movie_NZ_R18
Rating-Movie_NZ_RP13
Rating-Movie_NZ_RP16
Rating-Movie_NZ_R
Rating-Movie_UK_U
Rating-Movie_UK_PG
Rating-Movie_UK_12
Rating-Movie_UK_12A
Rating-Movie_UK_15
Rating-Movie_UK_18
Rating-Movie_UK_R18
Rating-MPAA_G
Rating-MPAA_PG
Rating-MPAA_PG13
Rating-MPAA_R
Rating-MPAA_NC17
Rating-MPAA_Unrated
Rating-MPAA_NR
Rating-RIAA_Clean
Rating-RIAA_Explicit
Rating-TV_US_Y
Rating-TV_US_Y7
Rating-TV_US_Y7FV
Rating-TV_US_14
Rating-TV_US_G
Rating-TV_US_PG
Rating-TV_US_MA
Rating-TV_US_D
Rating-TV_US_L
Rating-TV_US_S
Rating-TV_US_V
SSSpringBoardUtilityApplicationStateChangeNotification
com.apple.storeservices.wakeAppTransactionIdentifier
FBSSystemService
%{public}@: Timed out while launching application %{public}@.
FBSOpenApplicationErrorDomain
FBSOpenApplicationOptionKeyActivateSuspended
FBSOpenApplicationOptionKeyPayloadOptions
%{public}@: Could not launch %{public}@. %{public}@
%{public}@: No PID for app ID %{public}@.
%{public}@: Taking process assertion %{public}@ for %{public}.2f seconds with reason %{public}@.
%{public}@: Could not take process assertion %{public}@.
%{public}@: Releasing power assertion %@.
v16@?0@"NSDictionary"8
com.apple.StoreServices.SSSpringBoardUtility
com.apple.StoreServices.SSSpringBoardUtility.Notifications
com.apple.StoreServices.SSSpringBoardUtility.SpringBoard
%@: Timed out while getting application info. identifier = %{public}@ key = %{public}@
metrics
SSVMetricsInternalSettingReportingFrequency
com.apple.StoreServices.SSMetricsConfiguration
com.apple.StoreServices.metrics-internal-settings-change
disabled
sendDisabled
metricsBase
metrics_base
fields
v32@?0@"NSString"8@16^B24
[%@] initializing with empty config 
config
blacklistedFields
cookies
compoundSeparator
fieldsMap
blacklistedEvents
[%@] Blacklisted event [%@] 
pingUrls
v32@?0@"NSString"8Q16^B24
v16@?0@"NSNumber"8
postFrequency
metricsUrl
tokenSeparator
+[SSMetricsConfiguration getReportingFrequencyOverrideWithCompletionBlock:]
+[SSMetricsConfiguration setReportingFrequencyOverride:]
decorateITMLEvents
page
activity
activityCurator
comment
interview
musicVideo
radio
track
uploadedAudio
uploadedVideo
%@: [ID: %@, Type: %@]
preorderAlbum
iMix
itunesMix
socialActivity
radioStation
SSVMediaContentTasteUpdateResponseContentTasteItems
SSVMediaContentTasteUpdateResponseExpirationDate
SSVMediaContentTasteUpdateResponseResponseRevisionID
<%@ %p contentTasteItems:%@ expirationDate:%@ responseRevisionID:%llu isCachedResponse:%@>
SSAccountStoreAuthKitAllowSilentAuth
SSAccountStoreAuthKitAllowSilentPasswordAuth
SSAccountStoreAuthKitCanCreateNewAccountKey
SSAccountStoreAuthKitCanSetActiveAccountKey
SSAccountStoreAuthKitCreateAccountDSIDKey
SSAccountStoreAuthKitCreateAccountQueryParamsKey
SSAccountStoreAuthKitCreateAccountTargetIdentifierKey
SSAccountStoreAuthKitCredentialSource
SSAccountStoreAuthKitHTTPHeadersKey
SSAccountStoreAuthKitLogUUIDKey
SSAccountStoreAuthKitOKButtonLabel
SSAccountStoreAuthKitPreventPrompt
SSAccountStoreAuthKitPreventSecondaryAccountPETLookup
SSAccountStoreAuthKitPresentingViewController
SSAccountStoreAuthKitPromptTitle
SSAccountStoreAuthKitProxiedAppBundleIDKey
SSAccountStoreAuthKitProxiedAppNameKey
SSAccountStoreAuthKitReasonKey
SSAccountStoreAuthKitSuppressServerDialogs
SSAccountStoreAuthKitSkipAuthKitKey
SSAccountStoreAuthKitUserAgentKey
SSAccountStoreAuthKitUserAgentSuffixesKey
SSAccountStoreIgnoreAccountConversionKey
SSAccountStoreActiveAccountChangedNotification
SSAccountStoreAuthenticationActivityNotification
SSAccountStoreChangedNotification
_SSAccountStoreDidChangeNotification
ActiveAccountIsManagedAppleID
AuthenticationStarted
AccountsChangedNotificationsSuppressionStarted
LastAuthTime
SSAccountStoresProxiedDeviceFlagKey
metricsAuthenticationAttempts
product
badServerResponse
maxNumberOfAttemptsReached
responseTime
mtTopic
userAgent
com.apple.itunesstored.accountschanged.internal
com.apple.StoreServices.SSAccountStore.accountsCache
com.apple.StoreServices.SSAccountStore.fetchAccounts
com.apple.StoreServices.SSAccountStore.metricsQueue
com.apple.StoreServices.SSAccountStore.notificationQueue
%{public}@: Returning cached accounts.
%{public}@: There no cached accounts. We'll load the accounts now from the backing store synchronously.
%{public}@: Unit test mode is enabled. We won't go to the backing account store.
%{public}@: Failed to fetch the backing accounts. error = %{public}@
@16@?0@"ACAccount"8
%{public}@: Caching the accounts.
B16@?0@"SSAccount"8
%{public}@: Someone is attempting to get the active account. activeAccount = %{public}@
%{public}@: Someone is attempting to get the active locker account. activeLockerAccount = %{public}@
%{public}@: Resetting all properties on the local iTunes account.
%{public}@: Failed to reset all properties on the local iTunes account. error = %{public}@
silent
com.apple.StoreServices.SSAccountStore.sAccountType
v16@?0@"ACAccountType"8
%{public}@: Clearing the in-process account cache.
SSAccountStore.m
%{public}@: [%{public}@] %{public}@ has a broken DSID. Attempting to repair it.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding IDMS account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding iCloud account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding AppleAuthentication account.
%{public}@: [%{public}@] Failed to find a valid DSID. Unable to repair the account.
%{public}@: [%{public}@] Successfully repaired an account's broken DSID. account = %{public}@
%{public}@: [%{public}@] We found a valid DSID, but we failed to save the account with the new DSID. account = %{public}@ | error = %{public}@
v16@?0@8
v16@?0@"ACAccount"8
@"SSPromise"16@?0@"ACAccountType"8
%{public}@: There are no accounts that need migrating to Accounts.framework.
%{public}@: Disabling the in-process cache.
%{public}@: Migrating %ld account(s).
%{public}@: [%{public}@] Removing an account from the KVS without migrating it because %@.
@"NSString"16@?0@"SSAccount"8
%{public}@: [%{public}@] Beginning migration of %{public}@. currentAccounts = %@
%{public}@: [%{public}@] Successfully migrated the account. Removing it from the KVS.
%{public}@: [%{public}@] Failed to migrate the account. We won't remove it from the KVS. error = %@
%{public}@: Ensuring that we have only a single active account after migration.
%{public}@: Migration is complete. Clearing the in-process cache and re-enabling it.
%{public}@: Posting a com.apple.itunesstored.accountschanged (and its internal varient) notification now that migration is complete.
%{public}@: We didn't migrate any accounts, so we aren't posting a com.apple.itunesstored.accountschanged (and its internal varient) notification.
@"NSString"16@?0@"NSDictionary"8
%{public}@: After migration, there are no accounts remaining in the KVS.
%{public}@: After migration, the KVS contains the following accounts: %@
%{public}@: Timed out while trying to remove %{public}@.
%{public}@: Someone is attempting to remove a nil acount.
%{public}@: Removing %{public}@.
%{public}@: Failed to remove %{public}@. error = %@
com.apple.StoreServices.SSAccountStore.removeAccountsQueue
%{public}@: Timed out while removing account %{public}@.
%{public}@: Timed out while removing accounts %@.
%{public}@: [%{public}@] Removing all cookies for %{public}@.
v24@?0@"NSNumber"8@"NSError"16
v12@?0B8
%{public}@: [%{public}@] Signing out of %{public}@.
%{public}@: [%{public}@] Successfully signed out of %{public}@. We'll now remove its cookies.
%{public}@: [%{public}@] Unable to sign out of %{public}@. error = %@
%{public}@: [%{public}@] We were told to skip the call to AuthKit.
%{public}@: [%{public}@] The user cancelled the create account dialog.
The user cancelled the create account dialog.
%{public}@: [%{public}@] The user opted to create a new account. This authentication will fail and we'll start the create account flow.
ISCreateAccountOperation
The user opted to create a new account.
@"SSPromise"16@?0@"NSNumber"8
%{public}@: [%{public}@] The device doesn't have an active account for the scope. %{public}@ will become the active account.
com.apple.StoreServices.SSAccountStore.unitTestAccountsAccessQueue
%{public}@: The in-process accounts cache is disabled.
%@-copy
sqlitedb
%{public}@: Making a copy of the KVS database for later debugging.
%{public}@: A copy of the KVS already exists. Removing it so we can create a new one.
%{public}@: Failed to remove the existing KVS database. error = %@
%{public}@: Failed to copy the KVS database. error = %@
UIApplication
%{public}@: Failed to exclude the KVS database copy from backups. error = %@
<altDSID = %@ | DSID = %@ | username = %@ | firstName = %@ | lastName = %@ | storefront = %@ | scope = %@>
%{public}@: Posting a com.apple.itunesstored.accountschanged.internal notification.
%{public}@: Posting a com.apple.itunesstored.accountschanged notification.
%{public}@: Attempting to post a %{public}@, but our notificationQueue is NULL. Something went wrong.
%{public}@: The value of SSActiveAccountIsManagedAppleID changed.
%{public}@: Posting a %{public}@ notification.
%{public}@: Attempted to post a %{public}@, but our notificationQueue is NULL. Something went wrong.
%{public}@: Attempted to post metrics event, but our metricsQueue is NULL. Something went wrong
/System/Library/Accounts/Notification/iTunesAccountsNotificationPlugin.bundle
We failed to load the notification plugin.
_canSaveAccount:withOtherAccounts:store:
@16@?0@"SSAccount"8
%{public}@: [%{public}@] Someone is attempting to save a nil acount.
The account must be non-nil.
%{public}@: [%{public}@] Refusing to save %{public}@. None of its properties have changed.
%{public}@: [%{public}@] Refusing to save %{public}@. It's backing account is nil.
The backing account is nil.
%{public}@: [%{public}@] Attempting to save %{public}@. verifyCredentials = %{public}@
%{public}@: [%{public}@] Clearing the in-process cache in preparation of saving the account.
%{public}@: [%{public}@] Successfully saved the account.
%{public}@: [%{public}@] Failed to save the account. error = %@
%{public}@: An account is set to active when it shouldn't be. Deactivating it. account = %{public}@ | activeDSID = %{public}@
%{public}@: An account is set as the active locker account when it shouldn't be. Deactivating it. account = %{public}@ | activeLockerDSID = %{public}@
%{public}@: Failed to save %{public}@ after modifying its active or activeLocker property. error = %@
%{public}@: [%{public}@] Attempting to find an existing account. attempt = %ld
%{public}@: [%{public}@] Found a preexisting account with a broken altDSID or DSID that we can use.
%{public}@: [%{public}@] Refusing to migrate an account because there's already an account with the same username but different altDSID or DSID.
%{public}@: [%{public}@] There's no preexisting account. We'll create a new one.
%{public}@: [%{public}@] Found a pre-existing iTunes token. Setting the new account as authenticated.
%{public}@: [%{public}@] There's no pre-existing iTunes token. The new account will be unauthenticated.
%{public}@: [%{public}@] There's a preexisting account, %{public}@. We'll merge the given properties into it.
%{public}@: [%{public}@] Making the account the active account. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account inactive. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account the active locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] Making the account an inactive locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] It appears that someone created the account while we were attempting to migrate it. We'll perform the migration again.
it's empty
it only has an account source
it has no username
SSAccountStore: [%{public}@] The raw password might actually be a PET.
SSAccountStore: [%{public}@] Successfully converted a raw password into a PET.
SSAccountStore: [%{public}@] Failed to convert a raw password into a PET. error = %{public}@
AKAppleIDAuthenticationInAppContext
UINavigationController
kAASaveOptionCompanionDeviceClientInfoKey
kAASaveOptionCompanionDeviceUDIDKey
SSAccountStore: [%{public}@] We were told to update a nil account. We'll try to find an existing account matching the info we got from AuthKit. altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
SSAccountStore: [%{public}@] Found an account existing account matching the AuthKit information.
SSAccountStore: [%{public}@] Failed to find an account existing account. We'll create a new account.
SSAccountStore: [%{public}@] The newly created account will be set to active.
SSAccountStore: [%{public}@] The newly created account will be set to inactive.
SSAccountStore: [%{public}@] AuthKit gave us an updated altDSID. oldAltDSID = %{public}@ | newAltDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated DSID. oldDSID = %{public}@ | newDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated username. oldUsername = %{public}@ | newUsername = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us updated identifiers. We'll attempt to find an existing account that matches the new identifiers.
SSAccountStore: [%{public}@] The new identifiers point to the same account we're already working with.
SSAccountStore: [%{public}@] The new identifiers are for a different existing account, %{public}@.
SSAccountStore: [%{public}@] We didn't find an existing account using the new identifiers.
SSAccountStore: [%{public}@] Failed to encode AKDevice. Proxied authentication will fail.
kAAErrorDetailsProxiedDeviceDataKey
%{public}@: [%{public}@] We aren't prompting to create a new account because the account isn't empty.
%{public}@: [%{public}@] We aren't prompting to create a new account because we're authenticating for a sandbox account.
%{public}@: [%{public}@] We aren't prompting to create a new account because we either shouldn't be prompting or SSAccountStoreAuthKitCanCreateNewAccountKey isn't set to YES.
%{public}@: [%{public}@] We aren't prompting to create a new account because Buddy is still running.
%{public}@: [%{public}@] Prompting the user to see if they want to create a new account.
ISCreateAccountPromptOperation
%{public}@: [%{public}@] Allowing silent authentication because the account is marked as a demo account.
SSAccountStore: [%{public}@] Buddy is still running. We can't prompt the user to enter their password. Prompt auth won't run.
SSAccountStore: [%{public}@] We were told not to prompt the user.
SSAccountStore: [%{public}@] Refusing to prompt the user. Account creation isn't allowed and this would create a new account.
SSAccountStore: [%{public}@] Prompting the user for their password.
SSAccountStore: [%{public}@] Failed to update the account by prompting the user for their password. The authentication will fail. error = %@
v16@?0@"SSLazyPromise"8
SSAccountStore: [%{public}@] Unable to perform silent authentication if we don't have an account.
SSAccountStore: [%{public}@] Attempting to update the account silently while we're running Buddy.
SSAccountStore: [%{public}@] We aren't allowed to attempt silent authentication.
Silent authentication isn't allowed.
SSAccountStore: [%{public}@] Attempting to update the account silently.
SSAccountStore: [%{public}@] Successfully updated the account silently.
SSAccountStore: [%{public}@] Failed to silently update the account. error = %@
SSAccountStore: [%{public}@] Unable to perform silent password authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent password authentication.
Silent password authentication isn't allowed.
SSAccountStore: [%{public}@] We don't have a raw password to convert into a PET.
SSAccountStore: [%{public}@] We were given a raw password. We'll attempt to convert it into a PET.
SSAccountStore: [%{public}@] Unable to perform silent PET authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent PET authentication.
SSAccountStore: [%{public}@] The account already has a PET we can use.
SSAccountStore: [%{public}@] We weren't given a PET, and we were told not to check alternate accounts for one.
SSAccountStore: [%{public}@] We weren't given a PET. We'll check alternate accounts for one.
SSAccountStore: [%{public}@] Found a PET on an alternate account we can use.
SSAccountStore: [%{public}@] Unable to get a PET from an alternate account.
SSAccountStore: [%{public}@] The PET appears to be misformed and could be a raw password.
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveAccount:] is deprecated. The caller should get the active account, set its active property to NO, and save it.
%{public}@: Failed to deactivate the active account, %{public}@. error = %@
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveLockerAccount:] is deprecated. The caller should get the active locker account, set its activeLocker property to NO, and save it.
%{public}@: Failed to deactivate the active locker account, %{public}@. error = %@
InAppPurchase
BYSetupAssistantNeedsToRun
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
SSAccountStore: Received a com.apple.itunesstored.accountschanged notification.
SSAccountStore: Received a com.apple.itunesstored.accountschanged.internal notification.
SSAccountStore: Received a com.apple.StoreServices.SSAccountStore.activeaccountchanged notification.
  authenticatedAccount = %@
  authenticateResponseType = %ld
  credentialSource = %ld
  error = %@
  responseDictionary = %@
[SSRestrictions]: Invalid trust status: %ld, or result: %d
[SSRestrictions]: Ignoring failed extended validation validation
com.apple.itunesstored.ExplicitPreferenceRestriction
ExplicitOffAndPreferencesEnabled
ExplicitOffAndPreferencesDisabled
PSRestrictionsPasscodeController
SSRestrictionsExplicitRestrictionAlertTypeOnLaunchCount
SSRestrictionsExplicitRestrictionAlertTypeOnContainerLoadCount
regular
v24@?0@"SSSoftwareUpdatesResponse"8@"NSError"16
reload
reset
%@: Failed with error: %@
%@: Found %ld updates
com.apple.storeservices.metricsFlushTransactionID
com.apple.storeservices.analytics
com.apple.storeservices.analytics.flush
userType
[%@] Dropping event which has no body values after blacklist filtering. [%@]
[%@] Dropping event of a type which is blacklisted. [%@]
-[SSMetricsController _serialQueueInsertEvents:withCompletionHandler:]
[%@] Insert Metrics Events returned error code: %d
[%@] Insert Metrics Events succeeded
[%@] Attempting to insert events with no URL. Dropping [%d] events.
[%@] Flush timer fired
[%@] Flush Unreported Events timer fired -- %@
[%@] Flush Unreported Events timer fired & reported success
[%@] Flush Unreported Events timer fired but was subsequently disabled
[%@] Setting Flush Unreported Events timer: %0.2f
[%@] Flushing events
-[SSMetricsController flushUnreportedEventsWithCompletionHandler:]
[%@] Report Metrics Events returned error code: %d
[%@] Report Metrics Events succeeded
[%@] User has opted not to send Apple diagnostic information. Dropped %li events that require it.
[%@] Events dropped by Event Controller with no report URL: [%lu events]
[%@] Events dropped by disabled Event Controller: [%lu events]
[%@] Insert Events called with an empty array.
single
multi
custom
location
MetricsController
-[SSMetricsController recordAnalyticsForMetricsDialogEvent:withTopic:]
%@: Connection interrupted
%@: Invalid response
%@: Record analytics events did succeed: %@
v32@?0@"NSString"8@"NSArray"16^B24
needsAuthentication
notSubscribed
subscribed
SSBagChangedNotification
trustedDomains
%@:%@
data
%{public}@: Error checking if URL trusted: %{public}@
v28@?0@"NSArray"8B16@"NSError"20
v28@?0@"NSNumber"8B16@"NSError"20
v28@?0@"NSDictionary"8B16@"NSError"20
v28@?0@"NSString"8B16@"NSError"20
v28@?0@"NSURL"8B16@"NSError"20
[%@] -- Error setting up database
v16@?0@"SSSQLiteDatabase"8
B8@?0
UIApplicationWillEnterForegroundNotification
System
Frameworks
UIKit.framework
UIKit
%@: {
  profile: %@
  profileVersion: %@
com.apple.StoreServices.SSBinaryPromise.globalPromiseStorageAccessQueue
com.apple.storeservices.TransactionStore
[TransactionStore] Started transaction: %{public}@
[TransactionStore] Joined transaction: %{public}@
[TransactionStore] Ended transaction: %{public}@
[TransactionStore] Left transaction: %{public}@
exit-after-purchase
is-preorder
%@: (%@: %@)
action-display-name
allowed-tone-styles
buy-params
confirmation-dialog
document-cannot-open-dialog
required-document-handlers
should-show-confirmation
price-display
success-dialog
supported-device-types
supported-devices
ds-ids
action-type
plus-icon-badge
STDQ
STDQPRE
STDRDL
HDBUY
HDPRE
HDRDL
HDVOD
LCVOD
SDVOD
SWUPD
PLUS
PLUSPRE
HQRDL
standard-audio
standard-video
standard-document
-[SSVPushNotificationRequest startWithResponseBlock:]
SSItemOfferDevice.m
Must provide device dictionary
device-type-id
minimum-product-version
minimum-device-description
minimum-device-title
minimum-device-description-url
minimum-device-description-url-title
minimum-product-version-description
minimum-product-version-title
minimum-product-version-description-url
minimum-product-version-description-url-title
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim2
BLDownloadQueue
[%{public}@]: Could not create a BLDownloadQueue sharedInstance
[%{public}@]: Could not retrieve the BLDownloadQueue class
[%{public}@]: downloadStatesDidChange: %@
[%{public}@]: downloadStatesDidChange: -- created SSBookDownloads: %@
v24@?0@"NSArray"8@"NSArray"16
B32@?0@"SSDownload"8Q16^B24
[%{public}@]: __book_sendDownloadsChanged: %@
B24@?0@"SSDownload"8^B16
com.apple.storeservices.SSNetworkConstraints
mobile-network-constraints
mobile-connection-type-allows
p2-music-store-available
music-download-size-limit-in-bytes
eBook-store-available
eBook-download-size-limit-in-bytes
video-download-size-limit-in-bytes
p2-podcasts-enabled
podcast-download-size-limit-in-bytes
p2-software-store-available
software-download-size-limit-in-bytes
WiFi
kinds
enabled
size-limits
v24@?0q8^B16
wi-fi
TOO_BIG_FOR_NETWORK_SPECIFIC_%@
TOO_BIG_FOR_NETWORK_SPECIFIC_NO_ITUNES_%@
TOO_BIG_FOR_NETWORK_SPECIFIC_NO_WIFI_%@
TOO_BIG_FOR_NETWORK_BODY
TOO_BIG_FOR_NETWORK_BODY_NO_ITUNES
TOO_BIG_FOR_NETWORK_BODY_NO_WIFI
TOO_BIG_FOR_NETWORK_TITLE
ITEM_TOO_BIG_FOR_NETWORK_BODY
ITEM_TOO_BIG_FOR_NETWORK_BODY_NO_ITUNES
ITEM_TOO_BIG_FOR_NETWORK_BODY_NO_WIFI
ITEM_TOO_BIG_FOR_NETWORK_TITLE
condition-key
%@: Invalid condition: %@
operator
bundle-version
external-version
CapabilitiesMatch
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
LSDocumentProxy
restriction-name
account-is-present
SSHasAccountCondition
adam-id-present
SSItemAvailableCondition
app-version
SSApplicationVersionCondition
can-open-document
SSDocumentCondition
capability
SSCapabilityCondition
platform
SSPlatformCondition
product-version
SSSystemVersionCondition
restriction
SSRestrictionCondition
MobileInstallationCheckCapabilitiesMatch
conditions
content
alt-content
iPad
iPhone
iPod-Touch
SSDeviceAutomaticDownloadKindsChangedNotification
SSDeviceAvailableItemKindsChangedNotification
SSDeviceBatteryLevelChangedNotification
SSDeviceCellularNetworkingAllowedChangedNotification
SSDevicePluggedInStateChangedNotification
SSDeviceSoftwareLibraryIdentifierChangedNotification
SSDeviceStoreFrontChangedNotification
SSVDeviceCarrierBundlingStatusDidChangeNotification
DeviceClassNumber
main-screen-class
com.apple.mobileipod
VideosAllowHDREnabledSetting
AccountsNotificationPlugin.ActiveStorefrontIdentifier
com.apple.storeservices.SSDevice
com.apple.StoreServices.SoftwareCUIDChanged
-[SSDevice automaticDownloadKinds]
block is nil
-[SSDevice getAvailableItemKindsWithBlock:]
-[SSDevice getCellularNetworkingAllowedWithBlock:]
com.apple.StoreServices.SSDevice.completion
-[SSDevice sdk_loadStorefrontCountryCode:]
-[SSDevice sdk_loadStoreFrontIdentifier:]
-[SSDevice setCellularNetworkingAllowed:]
promptIdentifier is nil
-[SSDevice showPromptWithIdentifier:completionHandler:]
@"SSPromise"16@?0@"SSAccount"8
Missing Storefront Identifier
The local account doesn't have a storefront identifier.
UserAgent
itunesstored
AvailableItemKinds
%{public}@: Failed to fetch needsDisplay for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save the lastAttemptDate for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save the lastAttemptDate for a server prompt. account = %{public}@ | promptIdentifier = %{public}@ | error = %{public}@
%{public}@: Failed to save needsDisplay for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save needsDisplay for a server prompt. account = %{public}@ | promptIdentifier = %{public}@ | error = %{public}@
%@: Enable all automatic download kinds
%@: Disable automatic download kinds: %@
minus
main-screen-scale
SerialNumber
%@: Set automatic download kinds: %@
SSDevice: Failed to update the device's storefront ID. We couldn't get the local account. error = %@
SSDevice: Successfully set the device's storefront to %{public}@
SSDevice: Failed to update the device's storefront ID. error = %@
v16@?0@"SSAccount"8
8olRm6C1xqr7AJGpLRnpSw
touch-id
-[SSDevice synchronizeAutomaticDownloadKinds]
ThinnedAppVariantID
%@: Enable automatic download kinds: %@
union
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@. %{public}@
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@.
%{public}@: [%{public}@] Failed to set a storefront ID on an account.
v16@?0r^@8
iPad1,1
iPhone2,1
iPod
AppleTV
Watch
iProd
dt:%lu
DeviceSupports720p
DeviceSupports1080p
iTunes-
cellular-data
iPad-M
 (%@)
%@/%@
 watchOS/%@
 iOS/%@
ProductType
OverrideProductType
 model/%@
HardwarePlatform
 hwp/%@
BuildVersion
 build/%@
System/Library/CoreServices/SystemVersion.plist
-[SSDevice _updateAutomaticDownloadKinds:withValue:completionBlock:]
com.apple.
lowtide
com.apple.AppStore2
com.apple.AppStore3
MobileStore
com.apple.Music
com.apple.Music.
Music
com.apple.lowtide
com.apple.ios.StoreKitUIService
StoreKitUIService
iBooks
com.apple.itunesu
iTunesU
com.apple.podcasts
com.apple.Maps
Maps
com.apple.Bridge
com.apple.AppStore.BridgeStoreExtension
com.apple.AppStore3.BridgeStoreExtension
com.apple.Music.MediaSocialShareService
com.apple.Music.MediaPicker
com.apple.WelcomeKit
matd
com.apple.MobileSMS
com.apple.AppStore.MessagesStoreExtension
com.apple.AppStore3.MessagesStoreExtension
Messages
UseNewMusicApp2
TVMusic
UseNewMusicApp
com.apple.TVMusic
10.0
/System/Library/Messages/iMessageBalloons/ASMessagesProvider.bundle
iPad2,1
iPad2,4
iPad2,2
iPad2,3
iPad3,1
iPad3,2
iPad3,3
iPhone1,1
iPhone1,2
iPhone3,1
iPhone3,2
iPhone3,3
iPhone4,1
iPod1,1
iPod2,1
iPod2,2
iPod3,1
iPod4,1
iPod4,2
AppleTV2,1
AppleTV3,1
bytes
%.0f%@
com.apple.mobile.iTunes.store
AltDSID
AccountAvailableServiceTypes
AccountURLBagType
CreditDisplayString
DidFallbackToPassword
DSPersonID
AccountServiceTypes
FirstName
AccountFreeDownloadsPasswordSetting
AppleID
AccountIsManagedAppleID
AccountIsNewCustomer
AccountSocialEnabled
AccountITunesPassSerial
AccountKind
LastName
AccountPaidPurchasesPasswordSetting
AccountSource
AccountStoreFront
UserName
ActiveLockerAccountID
CloudLibraryCUID
downloaded-apps
KnownAccounts
LastPurchasesCheckDate
LibraryCUID
PurchaseTypes
SoftwareCUID
Storefront
TempStorefront
Eligible:AppleMusic
%012x
-[SSVCloudServiceAPITokenRequest startWithResponseBlock:]
domain
fallnumval
sibv
poiProvider
poiURL
com.apple.StoreServices.SSVLoadNearbyAppsOperation.%p
%.4f
%.0f
X-JS-TIMESTAMP
%@=%@
v24@?0@"SSLookupResponse"8@"NSError"16
 t:native
bvrs
Apple-Guid
Apple-Serial-No
Guid
iCloud-DSID
If-Modified-Since
Last-Modified
X-Apple-ActionSignature
X-Apple-ADSID
X-Apple-Allow-Lite-Account-Conversion
X-Apple-Allow-Auth-Types
X-Apple-Client-Application
X-Apple-Connection-Type
X-Dsid
X-Apple-GS-Token
X-Apple-Software-Cuid
X-Apple-Store-Front
X-Apple-TA-Device
X-Token
X-Token-T
X-Apple-Requesting-Bundle-Id
X-Apple-Requesting-Bundle-Version
X-Apple-AMD
X-Apple-AMD-Action
X-Apple-AMD-Data
X-Apple-AMD-M
X-Apple-AMD-S
x-apple-aps-delivery-type
X-Apple-MD
X-Apple-MD-Action
X-Apple-MD-Data
X-Apple-MD-M
X-Apple-MD-S
X-Apple-TID-Action
X-Apple-TID-Challenge
X-Apple-TID-Pkey
X-Apple-TID-Pkeyid
X-Apple-TID-Signature
X-Apple-TID-SignatureVersion
X-Apple-TID-State
X-MMe-Client-Info
X-Mme-Device-Id
X-MMe-Multi-User
EEE, dd MMM yyyy HH:mm:ss z
en_US_POSIX
com.apple.storeservices.SSURLRequestProperties
SSURLRequestProperties.m
additionalMetrics
retry
btstrpcll
cache
srcappid
srcapp
client
exclen
headers
method
itunes
kbsynctype
large
srvtype
params
reqcell
requireev
requireext
requireHTTPS
decode
nocell
disablecell
disableReversePush
disableReversePushSampling
procptcl
sectok
timeout
bagkey
bagtype
urls
uacomps
properties
retryCount
cachePolicy
expectedlength
kbsync
query
post
%@: URLs: %@; Parameters: %@; Headers: %@
multipart/form-data; boundary=%@
--%@
Content-Disposition: form-data; name="%@"
--%@--
B24@?0r*8@"NSObject<OS_xpc_object>"16
%lli
v32@?0@"NSNumber"8@"SSVFairPlaySubscriptionStatus"16^B24
x-apple-jingle-correlation-key
X-Set-Apple-Store-Front
%{public}@: Failed to unarchive response. Error = %{public}@
%{public}@: Failed to archive response. Error = %{public}@
Cache-Control
max-age
xpc_object_t SSCodingCreateXPCObjectForNSSecureCodingObject(id<NSObject,NSSecureCoding>)
%{public}s: Failed to archive xpc object. Error = %{public}@
id<NSSecureCoding> SSCodingCreateNSSecureCodingObjectForXPCObject(xpc_object_t, Class<NSSecureCoding>)
%{public}s: Failed to unarchive xpc object. Error = %{public}@
lease-renew
lease-start
Context must have SIC data
-[SSPlayInfoRequest startWithPlayInfoResponseBlock:]
v24@?0@"SSPlayInfoResponse"8@"NSError"16
%@: Succeeded with info: %ld bytes @ %p
-[SSMigrator performMigration:completionBlock:]
performing migration with updateType: %lu
 we are back wit ha reply of %@
Not available
Method not available in the simulator
cancelButtonString
cancelButton
cancelButtonAction
okButtonString
okButton
okButtonAction
defaultButton
explanation
Button must have a title
subtarget
SSDialogGetDaemonDialogState
authorization
goback
OpenURL
Goto
RetryRestoreAll
SSDialogErrorKeyRecoveryButtonAction
SSDialogErrorKeyRecoveryButtonParameter
SSDialogErrorKeyRecoveryTitle
StoreKit
receipt
+[SSPurchaseReceipt getReceiptPathWithCompletionBlock:]
nil block
sandboxReceipt
Failed to load an ACAccountType for %@
B16@?0@"ACAccount"8
Unable to find a corresponding account. accountTypeIdentifier = %@ | account = %@
Must provide token
Must provide accountIdentifier
-[SSAuthorizationRequest startWithAuthorizationResponseBlock:]
box-height
image-orientation
landscape
scale
needs-shine
box-width
%@: [%@:%@ %ldx%ld] %@
 (prerendered)
download-queue-item.default
newsstand-latest-issue-icon.default
software-icon.default
screenshot.default
screenshot.thumbnail
UINewsstandBindingEdge
UINewsstandBindingType
tab-bar-item.default
tab-bar-item.more-list
tab-bar-item.more-list-selected
tab-bar-item.selected
image-type
-[SSSilentEnrollmentPaymentSession startWithCompletion:]
SSRemoteNotificationClientDidReceiveNotifications
SSApplicationLaunchOptionsHasRemoteNotifications
com.apple.storeservices.SSRemoteNotificationClient
-[SSRemoteNotificationClient popQueuedNotifications]
-[SSRemoteNotificationClient registerForRemoteNotifications]
-[SSRemoteNotificationClient unregisterForRemoteNotifications]
alert
isExplicit
artworkUrl
badge
buttons
category
schedule
notAfter
sound
tapUrl
application/gzip
clientActionDeepLink
serverAction
/System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
+[SSURLDataCollection collectURLSessionDataWithBlock:]
app_purchase_history_accounts
account_unique_identifier
local_revision
%ld-%@-%@-%@
%@: [%@]
com.apple.StoreServices.SSURLBagContext
-[SSAskPermissionActionRequest startWithCompletionBlock:]
label
system
hide-item-if-restricted
logo-artwork-url
itunes-games
esrb
games
mpaa
bbfc
fr-cnc
de-fsk
ca-chvrs
ie-ifco
au-oflc
jp-eirin
nz-oflc
ch-movies
es-movies
it-movies
gr-movies
be-movies
nl-movies
lu-movies
mx-movies
se-movies
fi-movies
no-movies
dk-movies
pt-movies
ar-movies
bo-movies
br-movies
bg-movies
cl-movies
co-movies
cr-movies
cy-movies
cz-movies
ec-movies
sv-movies
ee-movies
gt-movies
hn-movies
hu-movies
lv-movies
lt-movies
mt-movies
ni-movies
pa-movies
py-movies
pe-movies
pl-movies
ro-movies
sk-movies
si-movies
uy-movies
ve-movies
jm-movies
gy-movies
sr-movies
gf-movies
do-movies
bn-movies
by-movies
cn-movies
ge-movies
hk-movies
id-movies
is-movies
kg-movies
kh-movies
kr-movies
kz-movies
la-movies
lk-movies
md-movies
mk-movies
mo-movies
my-movies
ph-movies
ru-movies
sg-movies
th-movies
tj-movies
tr-movies
tw-movies
ua-movies
uz-movies
vn-movies
us-tv
uk-tv
fr-tv
de-tv
ca-tv
au-tv
jp-tv
riaa
us-cable
apple
events
override-headers
build-version
container-id
container-ids
container-type
device-name
end-position-in-milliseconds
end-reason-type
enqueuer
external-identifier
feature-name
household-id
internal-build
media-duration-in-milliseconds
media-type
persistent-id
personalized-container-id
player
private-enabled
event-reason-hint-type
reco-data
sb-enabled
siri-initiated
source-type
start-position-in-milliseconds
store-front
timed-metadata
milliseconds-since-play
track-info
event-type
utc-offset-in-seconds
display-type
character-displayed-count
lyric-language
album-adam-id
artist-adam-id
cloud-album-id
cloud-playlist-id
global-playlist-id
playlist-version-hash
station-hash
station-personalized-id
station-id
auc-adam-id
lyric-id
purchased-adam-id
radio-adam-id
orig-sf-adam-id
subscription-adam-id
X-Guid
-[SSRentalCheckinRequest startWithConnectionResponseBlock:]
v24@?0@"SSVPlaybackAsset"8^B16
hls-key-cert-url
hls-key-server-url
is-itunes-stream
%@ [ID: %@, Assets: %@]
com.apple.itunesstored.xpc
SSXPCInAppReviewSandboxToken
^v16@?0@"NSObject<OS_xpc_object>"8
com.apple.storeservices.SSXPCConnection
com.apple.storeservices.SSDownloadManager.access
com.apple.storeservices.SSDownloadManager.background
com.apple.storeservices.SSDownloadManager.observer
Must have download kinds
Subclassing of SSDownloadManager is not supported
+[SSDownloadManager removePersistenceIdentifier:]
-[SSDownloadManager activeDownloads]
-[SSDownloadManager cancelAllDownloadsWithCompletionBlock:]
-[SSDownloadManager cancelDownloads:completionBlock:]
-[SSDownloadManager resumeDownloads:completionBlock:]
-[SSDownloadManager restartDownloads:completionBlock:]
DownloadManager
+[SSDownloadManager retryAllRestoreDownloads]
-[SSDownloadManager reloadFromServer]
-[SSDownloadManager setDownloads:forKinds:completionBlock:]
+[SSDownloadManager _triggerDownloads]
-[SSDownloadManager _finishDownloads:]
+[SSDownloadManager _sendGlobalHandler:]
SSDownloadManager: Reconnect global handler: %@
-[SSDownloadManager _copyDownloadKindsUsingNetwork]
-[SSDownloadManager _copyDownloads]
-[SSDownloadManager _handleDownloadsChanged:]
-[SSDownloadManager _insertDownloads:before:after:completionBlock:]
-[SSDownloadManager _moveDownload:before:after:completionBlock:]
-[SSDownloadManager _pauseDownloads:forced:completionBlock:]
-[SSDownloadManager _sendObserverConnection]
SSVTelephonyRegistrationDidChangeNotification
SSVTelephonyOperatorNameDidChangeNotification
SSVTelephonyPhoneNumberDidChangeNotification
com.apple.CommCenter.fine-grained
com.apple.StoreServices.SSVTelephonyController.accessQueue
com.apple.StoreServices.SSVTelephonyController.notificationQueue
com.apple.StoreServices.SSVTelephonyController.telephonyCallbackQueue
CellularTelephonyCapability
green-tea
ISCellularOperatorName
CarrierName
%{public}@: Failed to retrieve telephony mobile subscriber country code with error: %{public}@.
%{public}@: Failed to retrieve telephony mobile subscriber network code with error: %{public}@.
%{public}@: Failed to retrieve telephony mobile equipment info with error: %{public}@.
%{public}@: Telephony request to send SMS to %@ failed. Telephony context: %{public}@.
Failed to send SMS using telephony slot: %@.
%{public}@: Telephony active subscriptions did change.
%{public}@: Failed to instantiate CoreTelephonyClient.
%{public}@: Process %{public}@ is missing required telephony entitlement. Skipping instantiation of CoreTelephonyClient.
%{public}@: Current device does not have telephony capability. Skipping telephony client initialization.
%{public}@: Failed to get telephony user default voice subscription context with error: %{public}@.
%{public}@: Found telephony subscription context %{public}@ at slot %ld as the user default voice one.
%{public}@: Could not find a valid telephony subscription context. Available telephony subscription contexts: %{public}@.
ISPhoneNumber
%{public}@: Failed to retrieve telephony phone number with error: %{public}@.
%{public}@: Failed to retrieve telephony operator name with error: %{public}@.
%{public}@: Failed to retrieve telephony registration status with error: %{public}@.
com.apple.storeservices.SSEntity
-[SSEntity exists]
%@: %lld
-[SSEntity _getValues:forProperties:count:message:]
v32@?0@8Q16^B24
com.apple.storeservices.SSDownloadHandler.%p
com.apple.storeservices.SSDownloadHandler.delegate.%p
-[SSDownloadHandler resetDisavowedSessions]
%@: Blocks: %d, Ignores: (%@)
-[SSDownloadHandler _connectToDaemon]
%@: Connecting download handler: %lld
%@: Received message: (%lld, %lld)
-[SSDownloadHandler _setValue:forProperty:]
safariscriptdataupdate
SSScriptSafariViewControllerDataUpdateNotification
name=%@
-[SSVInstallManagedApplicationRequest startWithResponseBlock:]
-[SSVInstallManagedApplicationRequest startWithDetailedResponseBlock:]
-[SSVInstallManagedApplicationRequest startWithMetadataResponseBlock:]
protocol
GoBack
invalidate-url-bags
ping
pings
refresh-subscription-status
selected-footer-section
set-current-user
store-version
redirect-url
tid-dialog
trigger-in-app-purchase-queue
client-id
environment
trigger-download
nil dictionary
MicroPaymentQueue
SSResponseActionTypeCheckDownloadQueues
SSResponseActionTypeCheckInAppPurchaseQueue
SSResponseActionTypeDismissCurrentPage
SSResponseActionTypeGotoURL
SSResponseActionTypeInvalidateURLBags
SSResponseActionTypeOpenURL
SSResponseActionTypeRefreshSubscriptionStatus
SSResponseActionTypeRetryRestoreDownloads
SSResponseActionTypeSelectFooterSection
SSResponseActionTypeSetAccountCredits
SSResponseActionTypeSetActiveAccount
SSResponseActionTypeShowDialog
SSResponseActionTypeShowTouchIDDialog
pageType
nearbyApps
salableAdamId
assetStoreFront
ottLease
amd-finish-provisioning
subDownload
amd-sync-machine
accountKind
address
altDsid
accountName
is-cloud-enabled
is-saga-enabled
services
locker
purchase-history
social
passwordToken
xToken
personInfo
acAccountName
customerMessage
errorKey
errorNumber
%{public}@: No store front identifier found, this could lead to problems
forgottenPassword
nil bagContext
com.apple.storeservices.SSURLBag
B32@?0@"SSURLBag"8Q16^B24
-[SSURLBag _loadURLBag]
com.apple.StoreServices.SSDownloadSession
%@: SessionID: %lld
-[SSDownloadSession _copySessionPropertyWithKey:]
-[SSDownloadHandlerSession setPercentComplete:]
-[SSDownloadHandlerSession setStatusDescription:]
-[SSDownloadHandlerSession _finishWithType:error:]
-[SSDownloadHandlerSession _setBool:forSessionProperty:]
%{public}@: Failed to unarchive auth challenge. Error = %{public}@
%{public}@: Failed to archive credential. Error = %{public}@
com.apple.StoreServices.SSDownloadAuthenticationChallengeSender
com.apple.StoreServices.followup
com.apple.SSFollowUpIdentifier.RenewCredentials
SSFollowUpController.m
%{public}@: Refusing to dismiss a pending follow-up. The follow-up was not for the specified account. identifier = %{public}@ | account.identifier = %{public}@ | followUp.accountIdentifier = %{public}@
Refusing to dismiss a pending follow-up. The follow-up was not for the specified account.
@"SSPromise"16@?0@"FLFollowUpItem"8
B16@?0@"FLFollowUpItem"8
Unable to find a pending follow-up.
%{public}@: Failed to create a FLFollowUpItem for %{public}@
%{public}@: Nil altDSID in userInfo for renew credentials FLFollowUpItem. The user will be asked to sign into their active iTunes account or any iTunes account if no active iTunes account exists.
FOLLOWUP_RENEW_CREDENTIALS_PRIMARY
Localizable
FOLLOWUP_RENEW_CREDENTIALS_MESSAGE
FOLLOWUP_RENEW_CREDENTIALS_MESSAGE_BLAME
FOLLOWUP_RENEW_CREDENTIALS_TITLE
Unable to create a FLFollowUpItem.
SSFollowUpController: Successfully posted the FLFollowUpItem. identifier = %{public}@
SSFollowUpController: Failed to post the FLFollowUpItem. identifier = %{public}@ | error = %{public}@
FLFollowUpController
Class getFLFollowUpControllerClass(void)_block_invoke
void *CoreFollowUpLibrary(void)
NSString *getAAFollowUpUserInfoAccountIdentifier(void)
AAFollowUpUserInfoAccountIdentifier
void *AppleAccountLibrary(void)
NSString *getAAFollowUpUserInfoAltDSID(void)
AAFollowUpUserInfoAltDSID
FLFollowUpAction
Class getFLFollowUpActionClass(void)_block_invoke
NSString *getAAFollowUpActionPrimary(void)
AAFollowUpActionPrimary
NSString *getAAFollowUpUserInfoClientName(void)
AAFollowUpUserInfoClientName
FLFollowUpItem
Class getFLFollowUpItemClass(void)_block_invoke
NSString *getFLGroupIdentifierAccount(void)
FLGroupIdentifierAccount
-[SSPersonalizeOffersRequest startWithPersonalizedResponseBlock:]
v24@?0@"SSPersonalizeOffersResponse"8@"NSError"16
%@: (%lld, "%@")
com.apple.StoreServices.SSPreorderManager
com.apple.StoreServices.SSPreorderManager.observerQueue
-[SSPreorderManager cancelPreorders:withCompletionBlock:]
-[SSPreorderManager preorders]
-[SSPreorderManager reloadFromServer]
-[SSPreorderManager _registerAsObserver]
drm-free
dimensions
store-front-id
ownerDsid
software-external-version-identifier
com.apple.itunesstored.accounts
com.apple.itunesstored.askpermission
com.apple.itunesstored.biometrics
com.apple.itunesstored.claim-apps
com.apple.itunesstored.download-monitor
com.apple.itunesstored.downloads
com.apple.itunesstored.kbsync
com.apple.itunesstored.kvs
com.apple.itunesstored.lookup
com.apple.itunesstored.metrics
com.apple.itunesstored.purchase
com.apple.itunesstored.push-notifications
com.apple.itunesstored.software-library
com.apple.itunesstored.updates
com.apple.itunesstored.uploads
com.apple.itunesstored.private
com.apple.storekit.client-override
com.apple.storekit.request-data
com.apple.developer.storekit.request-data
com.apple.storekit.cloud-service-exempted-from-tcc-access
Invalid service name
com.apple.StoreServices.SSXPCServer
com.apple.StoreServices.SSXPCServer.main
%{public}@: Received connection from: %{public}@ message: [%@ %@]
No Client
No Selector
%@-%@
com.apple.itunesstored.xpc-requests
Client
Selector
@"NSDictionary"8@?0
-[SSDistributedNotificationCenter initWithNamedPort:]
Invalid port name
com.apple.StoreServices.SSDistributedNotificationCenter
-[SSDistributedNotificationCenter addObserverForName:queue:usingBlock:]
Invalid name
Invalid block
-[SSDistributedNotificationCenter removeObserver:]
com.apple.StoreServices.SSRollableLog
SSRollableLog
Failed to create directory, %@, for a log file. %@
-[SSRentalInformationRequest startWithResponseBlock:]
-[SSVDisableSubscriptionRequest startWithCompletionBlock:]
-[SSDownloadFileManifest getPathsForFilesWithClass:completionBlock:]
-[SSDownloadFileManifest rebuildManifestWithCompletionBlock:]
v28@?0B8@"NSError"12@"NSArray"20
empty assetPaths
-[SSDownloadFileManifest _removeItemsWithAssetPaths:completionBlock:]
-[SSVMediaContentTasteUpdateRequest startWithResponseBlock:]
com.apple.StoreServices.SSEventMonitor.delegate
com.apple.StoreServices.SSEventMonitor
-[SSEventMonitor _connectEventConnection]
SSEventNameDownloadStart
SSEventNameDownloadStop
SSEventNameAppUpdatesPollStart
SSEventNameAppUpdatesPollStop
SSEventNamePurchaseSucceeded
SSEventKeyClientIdentifier
SSEventKeyDownloadAssetIdentifier
SSEventKeyDownloadClass
SSEventKeyDownloadIdentifier
SSEventKeyDownloadKind
SSEventKeyItemCount
SSEventKeySizeInBytes
SSEventKeyURLString
auto-update
restore
SSVMediaContentTasteItemContentType
SSVMediaContentTasteItemPlaylistGlobalID
SSVMediaContentTasteItemStoreAdamID
SSVMediaContentTasteItemTasteType
<%@ %p contentType:%@
 playlistGlobalID:'%@'
 storeAdamID:%lli
 tasteType:%td>
SSVCookieStorageSharedCookiesDidChangeNotification
rescued.
itfe
.apple.com
Storage location must be a file URL
Attempted to access a database that is now owned by root. It's been abandoned and replaced by %@.
backup
%{public}@: SSVCookieStorage is being initalized with a backup URL. Setting performingMigration to YES.
com.apple.StoreServices.SSVCookieStorage
SSVCookieStorageSharedCookieDatabaseDidChangeDarwinNotification
%@: Could not create cookie storage path
Cookie
DELETE FROM cookies
v16@?0^{sqlite3_stmt=}8
(%@=?)
DELETE FROM cookies WHERE %@
 AND 
Invalid property value(s)
%{public}@: Cannot remove cookies for a nil DSID.
DELETE FROM cookies WHERE user=? AND user_scope=?
v32@?0@"SSVCookieKey"8@"NSArray"16^B24
v20@?0B8@"NSHTTPCookie"12
https
%@: Feature Enabler removing ITFE cookie
%@: Feature Enabler updating ITFE cookie to value : %@
com.apple.storeservices.itfe
features
additionalFeatures
SELECT DISTINCT user, user_scope FROM cookies;
discard
name
path
secure
SELECT discard, domain, expire_time, name, path, secure, value, version FROM cookies WHERE user=? AND user_scope=?;
SELECT name, value FROM cookies WHERE ((NOT secure OR secure=?) AND ((user=? AND user_scope=?) OR (user=-1)) AND ((expire_time=0) OR (expire_time>=?)) AND (SUBSTR(?,-LENGTH(domain))=domain) AND (SUBSTR(?,1,LENGTH(path))=path))
SELECT discard, domain, expire_time, name, path, secure, value, version FROM cookies WHERE ((NOT secure OR secure=?) AND ((user=? AND user_scope=?) OR (user=-1)) AND ((expire_time=0) OR (expire_time>=?)) AND (SUBSTR(?,-LENGTH(domain))=domain) AND (SUBSTR(?,1,LENGTH(path))=path))
SSVCookieStorage.m
B16@?0@"NSHTTPCookie"8
X-Apple-Set-Cookie
Set-Cookie
X-Apple-Set-User-Cookie
INSERT OR REPLACE INTO cookies (discard, domain, expire_time, name, path, secure, user, user_scope, value, version) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
stopIncludingLocalCookies
%{public}@: Failed to migrate database. Nuking the cookie storage
DROP TABLE cookies;
%{public}@: Successfully recovered the cookie storage
Cookie Storage Errored out at version %@
DELETE FROM cookies WHERE ((expire_time!=0) AND (expire_time<?))
PRAGMA journal_mode=WAL;
CREATE TABLE IF NOT EXISTS cookies(discard INTEGER DEFAULT 0, domain TEXT NOT NULL, expire_time REAL, name TEXT NOT NULL, path TEXT NOT NULL, secure INTEGER, user INTEGER DEFAULT 0, value TEXT NOT NULL, version INTEGER DEFAULT 1, PRIMARY KEY(name, domain, path, user))
CREATE TABLE IF NOT EXISTS tmp_cookies (discard INTEGER DEFAULT 0, domain TEXT NOT NULL, expire_time REAL, name TEXT NOT NULL, path TEXT NOT NULL, secure INTEGER, user INTEGER DEFAULT 0, user_scope INTEGER DEFAULT 0, value TEXT NOT NULL, version INTEGER DEFAULT 1, PRIMARY KEY(name, domain, path, user, user_scope));
INSERT INTO tmp_cookies (discard, domain, expire_time, name, path, secure, user, value, version) SELECT discard, domain, expire_time, name, path, secure, user, value, version FROM cookies;
DROP TABLE tmp_cookies;
ALTER TABLE tmp_cookies RENAME TO cookies;
Cookies
com.apple.itunesstored.2.sqlitedb
%@%@
Invalid parameter value: %@
%{public}@: Failed to archive location. Error = %{public}@
%{public}@: Failed to unarchive location. Error = %{public}@
/System/Library/Frameworks/CoreLocation.framework/CoreLocation
CLLocation
/System/Library/PrivateFrameworks/CoreLocation.framework/CoreLocation
-[SSLookupRequest startWithLookupBlock:]
lockup
play
playlist-product
product-dv
bundleId
storePlatformData
storePlatformPrewarmDataKey
lockup-search
results
poiBased
v32@?0@"SSLookupItem"8Q16^B24
itms-apps2://?action=lookup&i=%ld&r=%ld
&ids=
v32@?0@8@"NSDictionary"16^B24
isAuthenticated
artistUrl
contentRating
advisories
standard
genreNames
nameRaw
newsstandArtwork
offers
requiredCapabilities
screenshotsByType
ipad
iphone
iphone5
shortUrl
softwareInfo
hasInAppPurchases
isGameCenter
eulaUrl
privacyPolicyUrl
requirementsString
supportUrl
itunesNotes
userRating
ratingCount
ratingCountCurrentVersion
valueCurrentVersion
com.apple.StoreServices
com.apple.StoreServices.SSLogConfig
com.apple.StoreServices.accounts
authentication
logout
migration
migration-oversize
storefront
askpermission
com.apple.StoreServices.bag
Daemon
Daemon-Oversize
com.apple.StoreServices.FairPlay
anisette
com.apple.StoreServices.FeatureEnabler
followup
iTunesStore
iTunesStore-Oversize
privacy
pushnotification
StoreServices-Oversize
  category: %@
  environment: %ld
  outputDirectory: %@
  outputFilename: %@
  subsystem: %@
  writeToDisk: %@
Logs
storeservices
%@_%@
appid
appsts
family
accountNames
[%@ %@ %@ me:%d ic:%@ it:%@ atb:%d]
askToBuy
iCloudName
iCloudID
iTunesID
isMe
sharing
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
/System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI
/System/Library/Frameworks/Accounts.framework/Accounts
/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
/System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
/System/Library/PrivateFrameworks/BookLibrary.framework/BookLibrary
/System/Library/Frameworks/CoreTelephony.framework/CoreTelephony
/System/Library/Frameworks/CoreText.framework/CoreText
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
/System/Library/PrivateFrameworks/FTServices.framework/FTServices
/System/Library/PrivateFrameworks/iCloudNotification.framework/iCloudNotification
/System/Library/PrivateFrameworks/IMSharedUtilities.framework/IMSharedUtilities
/System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication
/System/Library/PrivateFrameworks/MobileInstallation.framework/MobileInstallation
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
/System/Library/Frameworks/PassKit.framework/PassKit
/System/Library/PrivateFrameworks/Preferences.framework/Preferences
/System/Library/Frameworks/QuartzCore.framework/QuartzCore
/System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomPresentationFeed.framework/SymptomPresentationFeed
/System/Library/Frameworks/UIKit.framework/UIKit
Could not load library [%ld]
SSAccountErrorDomain
bttlvl
cellds
szlmt
nwktps
powsts
regsts
tmlsts
usdfts
rules
accountHeader
attributedList
header
caseControl
confirmationTitle
confirm
install
rent
redeem
countryCode
currency
designVersion
displayPrice
flexList
headerIcon
style
color
valueStyle
images
isApplePay
paymentSummary
price
priceSection
pricingSection
requestor
AppleMusic
AppleNews
salableIcon
salableIconType
merchant
messages
watch
salableInfo
storeName
suppressPrice
fallback
styles
bold
gray
grey
medium
small
spacingAfter
spacingBefore
enum
mtApp=com.apple.MobileSMS
mtApp=com.apple.AppStore.BridgeStoreExtension
[/b]
[br/]
[/i]
%%image_
%%IMAGE_
%%appleId%%
%%APPLE_ID%%
v16@?0@"NSString"8
%@%@%@
PKPaymentContentItemImageAttachment
PKPaymentContentItemImageAndScaleAttachment
PKPaymentContentItemImageKey
PKPaymentContentItemScaleKey
PKPaymentContentItemTintMatchingTextKey
SSPaymentSheet: Rendering Retina image for tag: %{public}@, scale: %{public}@
SSPaymentSheet: Rendering non-Retina image for tag: %{public}@
%{public}@: Attempting to create AuthKit context with nil username
%{public}@: Failed to create AuthKit context for payment
%@: Failed to lookup username, substituting empty string
useLargeSize
PKPaymentContentItemLightColorAttribute
%{public}@: Configured payment sheet with title: %{public}@, titleType: %{public}@
%@: Requestor key not found, attempting to infer requestor from title enumeration.
%@: No requestor identified for title: %@
%@: No requestor identified, title type is not enumeration
CTFontCreateWithName
Helvetica-Bold
Helvetica-Italic
PKPaymentContentItemBoldAttribute
@16@?0@"NSDictionary"8
-[SSKeybagRequest startWithCompletionBlock:]
bundleShortVersionString
familyId
accountId
-[SSSoftwareLibraryItem setETag:forAssetType:error:]
%@$$%@$$%@
isbg
-[SSSoftwareLibrary demoteApplicationWithBundleIdentifier:completionBlock:]
-[SSSoftwareLibrary getLibraryItemForBundleIdentifiers:completionBlock:]
-[SSSoftwareLibrary getRemovableSytemApplicationsWithCompletionBlock:]
-[SSSoftwareLibrary hasDemotedApplicationsWithCompletionBlock:]
-[SSSoftwareLibrary isInstalledApplicationWithBundleIdentifier:completionBlock:]
-[SSSoftwareLibrary isRemovedSystemApplicationWithBundleIdentifier:completionBlock:]
-[SSSoftwareLibrary playableApplicationsWithBundleIdentifiers:completionBlock:]
-[SSSoftwareLibrary refreshReceiptsWithCompletionBlock:]
-[SSSoftwareLibrary restoreAllDemotedApplicationsWithOptions:completionBlock:]
-[SSSoftwareLibrary restoreDemotedApplicationWithBundleIdentifier:options:completionBlock:]
accountIdentifier
mediaType
preauthenticated
kSSRedeemRequestFinishedNotification
-[SSRedeemCodesRequest startWithRedeemResponseBlock:]
%{public}@: [%{public}@] Starting redeem operation for codes: %@
%{public}@: [%{public}@] Redeem failed with error = %{public}@
%{public}@: [%{public}@] Redeem finished with a response.
v24@?0@"SSRedeemCodesResponse"8@"NSError"16
Send -init before checking visibility
No completion block
-[SSVMediaSocialShareExtension getVisibilityWithCompletionBlock:]
com.apple.StoreServices.SSVPlaybackLease.delegate
com.apple.StoreServices.SSVPlaybackLease
com.apple.itunesstored.PlaybackLeaseDidEnd
SSVPlaybackLeaseIgnorePushNotifications
v24@?0@"SSVPlaybackLeaseResponse"8@"NSError"16
%@: Schedule refresh in %.0f seconds
Token of class:%d ID:%ld length:%ld data:%@
SET Token. (length:%ld)
SEQUENCE Token. (length:%ld)
INT Token. Value:%lld (%llx)
multibyte ASN1 identifiers are  not supported.
v16@?0@"SSKeyValueStoreSession"8
-[SSKeyValueStore getValuesForDomain:keys:count:usingBlock:]
B16@?0@"SSKeyValueStoreTransaction"8
-[SSKeyValueStore removeAllValuesForDomain:completionBlock:]
DELETE FROM kvs_value;
-[SSKeyValueStore removeAllValuesWithCompletionBlock:]
-[SSKeyValueStore setValuesWithDictionary:forDomain:completionBlock:]
com.apple.Preferences
%@: Removing account with duplicate AppleID: %@ / %@
-[SSKeyValueStore removeAccountFromDomain:]
%@: Initializing database
%@: Initializing readonly database
DefaultAccountName
com.apple.StoreServices.SSLRUCache.accessQueue.%p
SSLRUCache
v32@?0@8@"SSDoubleLinkedListNode"16^B24
%@: %@ resulted in a cache miss.
%@: %@,
%@: Cache is full. The oldest object will be evicted.
-----------------------------------------
com.apple.PlayActivityFeed
PlayActivityEvents.log
com.apple.StoreServices.SSCircularBuffer
com.apple.StoreServices.SSErrorHandler.%p
com.apple.StoreServices.SSErrorHandler.delegate.%p
-[SSErrorHandler _reconnectToDaemonWithCompletionBlock:]
-[SSVKeybagSyncRequest startWithCompletionBlock:]
1.2.840.113635.100.6.2.1
[%@] Invalid receipt [%ld bytes] -- [%@]
Unparsed Data
[%@] Could not create decoder
[%@] Could not read data
[%@] Could not parse data
[%@] No content
[%@] Failed to load data
[%@] Failed to parse data
[%@] Parsing receipt
[%@] Receipt type: %@
[%@] AdamID: %@
[%@] BundleID: %@
[%@] Application version: %@
[%@] DSID: %@
[%@] SHA1: %lu
[%@] Transaction date: %@
[%@] FR tool version: %@
[%@] Parental controls: %@
[%@] DeveloperID: %@
[%@] Receipt created: %@
[%@] FR app version: %@
[%@] HW type: %@
[%@] DownloadID: %@
[%@] Installer versionID: %@
[%@] Receipt expires: %@
[%@] Receipt renewal: %@
[%@] Organization display name: %@
[%@] Cancellation reason: %@
[%@] Could not read certificates
[%@] Unexpected number of certificates
[%@] Intermediate certificate is missing
[%@] Could not create trust
[%@] Failed to update policies
[%@] Failed to anchor Apple root certificate
[%@] Could not set verification date
com.apple.springboard
SBLastSystemVersion
com.apple.migration
LastSystemVersion
[%{public}@] Feature Enabler migrating from version: %{public}@ to version: %{public}@
[%{public}@] Feature Enabler removing enabled features
com.apple.storeservices-itfe
performedMigration11
11.0
[%{public}@]: Enabling AMF by default for iOS 11
.compressed
.har
HTTP/1.1
SSHTTPArchiveShouldSaveToDiskNotification
SSHTTPArchiveShouldSaveToDiskDecompressedNotification
entries
HTTPArchives
%@ doesn't exist. There are no HAR files to cleanup.
Removing %@ to cleanup HAR log files.
Failed to remove %@. %@
App Store states is: %d
Launched App Store error: %@ state: %d
Failed to create directory, %@, for HTTP archive files. %@
%@_%f%@
Failed to write HTTP archive file. %@
Wrote HTTP archive file to: %@
bodySize
mimeType
com.apple.StoreServices.SSHTTPArchive
uuuu-MM-dd'T'HH:mm:ss.sXXX
startedDateTime
time
request
response
creator
APS-Attempted
APS-Succeeded
clientIPAddress
headersSize
httpVersion
xp.apple.com
/WebObjects/MZFinance.woa/wa/authenticate
password
REDACTED
postData
X-Apple-Connection-Reused
false
statusText
com.apple.StoreServices.SSErrorHandlerSession.%p
-[SSErrorHandlerSession performDefaultHandling]
-[SSErrorHandlerSession redirectToURL:]
-[SSErrorHandlerSession retry]
customerTitleMessage
nextActionUrl
failureClientInfo
SSUserNotificationKeyAccountName
SSUserNotificationKeyAttemptNumber
PRAGMA legacy_file_format = 0;
CREATE TABLE IF NOT EXISTS kvs_value (pid INTEGER, domain TEXT NOT NULL, key TEXT NOT NULL, value BLOB NOT NULL, UNIQUE (domain, key), PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS kvs_value_domain_key ON kvs_value (domain, key);
kvs.sqlitedb
v40@?0q8r^@16Q24^B32
NetworkTimingMetrics
%@: Not setting anything following bag load
%@: Metrics values are: %@
ISURLBagCache
performance
sessionDuration
samplingPercentageUsers
samplingPercentageCachedResponses
sessionDurationPageRender
samplingPercentageUsersPageRender
facebook
twitter
[%{public}@]: percentComplete: %f
com.apple.bookassetd
%{public}@ is an unsupported deprecated method for book downloads
%{public}@ is an unsupported method for book downloads
deepLink
-[SSVSubscriptionStatusRequest startWithStatusResponseBlock:]
kvs_value
XCTestProbe
isTesting
sqlite_result
%@: initWithDatabaseURL:%{public}@ readOnly:%d protectionType:%@
Invalid database URL
com.apple.iTunesStore.SSSQLiteDatabase.%p
UIApplicationBackgroundTaskWillExpireNotification
%@: Failed to close database: [0, %d, %s]
PRAGMA table_info(%@);
%@: Spin for SQL lock: %ld, spin count: [%ld, %s, %@]
%@: Could not execute SQL: %@: [%ld, %s, %@]
BEGIN DEFERRED TRANSACTION;
BEGIN IMMEDIATE TRANSACTION;
COMMIT;
ROLLBACK;
main
PRAGMA %@.user_version=%ld;
PRAGMA %@.user_version;
%@: Step failed: %s: [%d, %s]
com.apple.StoreServices.SSSQLiteDatabase.%@
%@: Releasing process assertion, background task expired
%@: Could not create directory to place new database: %@
SSSQLiteDatabase: Calling setupBlock
%@: Not authorized to open database: [%d, %@]
%@: Could not open read-only db: [%d, %@]
%@: Could not open database, resetting: [%d, %@]
PRAGMA cache_size=512;
%@: Resetting after error: [%d, %@]
%@: Failed to close database: [1, %d, %s]
%@: Re-open database: %@
%@: Failed to close database: [2, %d, %s]
-shm
-wal
%@: Could not prepare statement: %@: [%d, %s, %@]
void SSSQLiteBindFoundationValueToStatement(sqlite3_stmt *, NSInteger, id)
SSSQLiteDatabase.m
file-read-data
file-write-data
_ISSQLiteDispatchQueueTag
_SSVPlayActivityEventCoderDataRepresentation
<%@ %p persistentID:%llu
 containerID:'%@'
 containerIDs:'%@'
 containerType:%td
 deviceName:'%@'
 endReasonType:%td
 enqueuerProperties:'%@'
 eventDate:%@
 eventTimeZone:%@
 externalID:'%@'
 featureName:'%@'
 householdID:'%@'
 systemReleaseType: %li
 itemDuration:%f itemStartTime:%f itemEndTime:%f
 itemType:%td
 itemIDs:'%@'
 mediaType:%td
 offline:%@
 personalizedContainerID:'%@'
 hasRecommendationData:true
 privateListeningEnabled: %@
 SBEnabled:%@
 siriInitiated: %@
 sourceType:%td
 storeAccountID:%llu
 storeFrontID:%@
 storeID:'%@'
 requestingBundleIdentifier:'%@'
 requestingBundleVersion:'%@'
 timedMetadata(length):%td
 hasTrackInfo:true
ROWID
%@: Unrecognized client key: %@
+[%@ databaseTable] not implemented
%@.%@
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
SELECT 
 FROM 
 WHERE 
.ROWID = ?;
SELECT 1 FROM 
 =  ? LIMIT 1;
UPDATE 
 SET 
 = ?
 = ?;
INSERT OR REPLACE INTO 
) VALUES (?
DELETE FROM %@ WHERE %@ = ?;
SSSQLitePredicate.m
Unsupported predicate value: %@
%@ %@ ?
 LIKE 
Invalid comparison type: %ld
 NOT IN (
 IN (
IS NULL
IS NOT NULL
 OR 
DESC
v32@?0q8Q16^B24
CREATE TEMPORARY TABLE 
 AS 
DISTINCT 
 FROM %@
 ORDER BY 
 LIMIT ?
%@(%@)
COUNT
v32@?0@"SSMemoryEntity"8Q16^B24
promise
v16@?0@"SSPromiseResult"8
%{public}@: Someone is finishing a promise with both a result and an error. This will result in both the success and error blocks being called. result = %{public}@ error = %{public}@
%{public}@: Someone is finishing a promise with neither a result nor an error. This will result in neither the success nor the error blocks being called.
%{public}@: Someone is attempting to finish or cancel a finished SSPromise.
com.apple.StoreServices.SSPromise.globalPromiseStorageAccessQueue
-[SSVEnableSubscriptionRequest startWithCompletionBlock:]
-[SSVServerAuthenticateRequest startWithAuthenticateResponse:]
com.apple.StoreServices.HTTPServerResponse
SSHTTPServerResponseErrorDomain
Socket Read Error
Length < 0
Page Not Found
[%@] An error occurred writing the response. Written=%ld Error=%@
[%@] Successfully sent the response. %{public}@
<html><head><title>%d</title></head><body><div align='center'><h1>%d</h1>
<p>%@</p>
</div></body></html>
Write Error
No data to write
Error writing data to socket. [2]
Expception occurred during write to socket. Exception=%@
com.apple.itunescloudd.playactivity
SSVPlayActivityControllerEndpointIdentifierJingle
SSVPlayActivityControllerEndpointIdentifierPairedDevice
SSVPlayActivityControllerDidRecordPlayActivityEventsNotification
SSVPlayActivityControllerEndpointRevisionInformationDidChangeNotification
SSVPlayActivityControllerUserInfoKeyEndpointIdentifier
SSVPlayActivityControllerUserInfoKeyEndRevision
SSVPlayActivityControllerUserInfoKeyStartRevision
SSVPlayActivityEndpointRevisionInformation
AdditionalPendingRevisions
CurrentRevision
RevisionVersionToken
com.apple.StoreServices.SSVPlayActivityController.accessQueue
com.apple.StoreServices.SSVPlayActivityController.serialQueue
[%@] Error %{public}@ completing %lu play activity events with session token:%llu flushResult:%lu
[%@] Completed %lu play activity events with session token:%llu flushResult:%lu with error %{public}@
[%@] Error %{public}@ flushing play activity events for %{public}@
[%@] Finished flushing play activity events for %{public}@ with error %{public}@
v32@?0@"_SSVPlayActivityFlushSessionInformation"8@"NSArray"16@"NSError"24
[%@] Recording play activity events: %@
ShouldDebugLogRecordedEvents
com.apple.StoreServices.SSVPlayActivityController.debugLogOperationQueue
[%@] Error %{public}@ recording %lu play activity events
[%@] Finished recording %lu play activity events with error %{public}@
[SSVPlayActivityController] Removing play events up to revision: %llu
[%@] Error %{public}@ removing play activity events upto revision %llu
[%@] Finished removing play activity events upto revision %llu with error %{public}@
[%@] Error %{public}@ setting revision %llu, version token %{public}@ for end point identifier %{public}@
[%@] Finished setting revision %llu, version token %{public}@ for end point identifier %{public}@ with error %{public}@
[%@] Error %{public}@ getting play activity events for end point identifier %{public}@
[%@] Finished getting %lu play activity events for end point identifier %{public}@
v32@?0@"NSArray"8Q16@"NSError"24
[SSVPlayActivityController] Completing pending play events for revision index set: %@ session token: %llu with result: %lu
[SSVPlayActivityController] Session information: %@
[SSVPlayActivityController] Removing pending revisions index set %@ from sessionInformation revisions index set: %@
[SSVPlayActivityController] Resulting index set: %@
[SSVPlayActivityController] Existing additional pending revisions index set: %@
[SSVPlayActivityController] New additional pending revisions index set from flush success: %@
[SSVPlayActivityController] New additional pending revisions index set from flush failure: %@
[SSVPlayActivityController] Revisions version token has changed, clearing out.
[SSVPlayActivityController] Connection to daemon play activity controller interrupted.
[SSVPlayActivityController] Connection to daemon play activity controller invalidated.
v32@?0Q8@"NSString"16@"NSError"24
%{public}@: Failed to unarchive revision information. Error = %{public}@
%{public}@: Failed to archive revision information. Error = %{public}@
com.apple.StoreServices.SSVPlayActivityControllerEndpointRevisionInformationDidChange
-[SSInstallAttributionPingbackRequest startWithCompletionBlock:]
com.apple.StoreServices.SSPurchaseManager.%@.%p
com.apple.StoreServices.SSPurchaseManager.completion.%@.%p
-[SSPurchaseManager addPurchases:withCompletionBlock:]
-[SSPurchaseManager cancelPurchases:withCompletionBlock:]
-[SSPurchaseManager getPurchasesUsingBlock:]
-[SSPurchaseManager insertPurchases:afterPurchase:withCompletionBlock:]
-[SSPurchaseManager movePurchases:afterPurchase:withCompletionBlock:]
-[SSPurchaseManager _connectToDaemon]
[%{public}@]: [%{public}@] Initiating authentication request
[%{public}@]: [%{public}@] Authentication request completed with error: %{public}@
[%{public}@]: Received authentication request but context was missing or invalid
-[SSPurchaseManager _handlePurchasesFinished:fromConnection:]
buyProduct
v24@?0@"NSString"8@"NSError"16
ISMachineDataActionOperation
acknowledged
acknowledgmentGroup
acknowledgmentVersion
bundleIdentifier
displayed
xp_amp_gdpr
Store
personID
locationPosition
locationType
adamId
fcKind
longName
shortName
cacheTimestamp
ISO3Country
dsId
storeFrontId
subscriptions
inAppSubscriptions
appVersion
chargeCountryCode
chargeCurrencyCode
chargeStoreFrontId
expireDate
EEE MMM dd HH:mm:ss z yyyy
inAppAdamId
inAppVersion
isNewsAppPurchase
offerIdentifier
originalPurchaseDownloadId
purchasabilityType
purchaseDownloadId
quantity
vendorIdentifier
latestTermsVersionId
isCurrent
termsContentText
termsContextText
coverImage
v32@?0@"NSString"8@"SSVMediaSocialPostAttachment"16^B24
com.apple.coreaudio-format
SSEncodingDictionary
admin
glide
eligible
notEligible
unlinked
needsManualVerification
%@ accountIdentifier %@ accountStatus %@ carrierBundlingStatus: %@
astv
cbec
lstv
prms
expirationDate
isPurchaser
hasOfflineSlots
isNotEligibleForFreeTrial
isFuseEnabled
Enabled
source
Apple
Carrier
Family
Glide
Disabled
InvalidToken
Discovery
Unlinked
hasFamily
hasFamilyGreaterThanOneMember
isHoH
terms
agreedToTerms
latestTerms
isAdmin
GetMACAddress returned 0x%08x
FindEthernetInterfaces returned 0x%08x
get_mac_address
[%s] -- Input buffer too small [%d < %d]
IONetworkController
IOServiceMatching kIONetworkControllerClass: %@
IOPrimaryInterface
IOPropertyMatch
CFDictionaryCreateMutable returned a NULL dictionary.
IOServiceMatching returned a NULL dictionary for kIONetworkControllerClass.
IOServiceGetMatchingServices returned 0x%08x
IOServiceGetMatchingServices iterator %u
IOService
IOMACAddress
IORegistryEntryCreateCFProperty produced bytes
IORegistryEntryCreateCFProperty failed
IORegistryEntryGetParentEntry returned 0x%08x
bgColor
textColor1
textColor2
textColor3
textColor4
height
width
com.apple.private.alloy.itunes.apsr
com.apple.storeservices.metricsEventTransactionIdentifier
TLSSamplingPercentage
TLSSamplingSessionDuration
com.apple.StoreServices.SessionManager.eventqueue
com.apple.StoreServices.SessionManager.sendTimingData
com.apple.StoreServices.SessionManager.sessions
com.apple.StoreServices.SessionManager.taskDelegates
com.apple.StoreServices.SessionManager.taskMetrics
com.apple.StoreServices.SessionManager.requestData
com.apple.StoreServices.SessionManager.responseData
com.apple.StoreServices.SessionManager.recordResponse
%@: Created a nil NSURLSessionTask for %@.
Network Timing Metrics: %@
%{public}@: Overwritting metric event property: %{public}@ with value: %@
Flushing HTTP Archive (HAR) buffer. Count : %ld
urlcache
[%@] [%@] [%@] [%@]
Date
%@: Creating a new NSURLSession with identifier %@.
com.apple.itunesstore
.client-%@
.auditToken-%d-%ld
.setcookies
.collecttimingdata
.requirescellular
.allowscellular
.cache-%@
.allowstls
TLSLastSampleDate
TLSLastSampleResult
[%@]: Metrics network inquiry error occurred. Error: %@
[%@]: Received low memory warning. Reducing HAR buffer size by: %lu
[%@]: No longer in low memory state. Increasing HAR buffer size
Writing %ld HTTP Archive file(s) to disk.
application/javascript
application/x-javascript
text/xml
text/xml+itml
%{public}@: APSR attempted: %{public}@ succeeded: %{public}@ for request: %@
%{public}@: Enabling reverse push using APS
aps-sampling-percentage
aps-enabled-patterns
https?://(p\d{1,3}-)?buy[.]itunes[.]apple[.]com/WebObjects/MZBuy.woa/wa/.*buyProduct.*
%@: Failed to fetch bag value for key: %@. Error: %@
%{public}@: A nil value was loaded from the bag for key %{public}@. Using new bag: %{public}@
ISURLOperation
<%@ %p hasSubscriptionLease:%@ hasSubscriptionSlot:%@>
xp_amp_clientperf
appleTimingApp
apsRelayAttempted
apsRelayDidFallback
apsRelaySucceeded
apsRelayRequested
cachedResponse
clientCorrelationKey
clientError
connectionEndTime
connectionInterface
connectionReused
connectionStartNStatRXBytes
connectionStartNStatTXBytes
connectionStopNStatRXBytes
connectionStopNStatTXBytes
connectionStartTime
connectionType
dnsServersIPAddresses
domainLookupEndTime
domainLookupStartTime
edgeNodeCacheStatus
fetchStartTime
networkQualityReports
redirectCount
redirectEndTime
requestMessageSize
redirectStartTime
requestStartTime
requestUrl
resolvedIPAddress
responseDate
responseEndTime
responseMessageSize
responseStartTime
secureConnectionStartTime
statusCode
tlsSessionTicketsEnabled
tidState
xpSessionDuration
xpSamplingForced
xpSamplingPercentageUsers
xpSamplingPercentageCachedResponses
appleTimingApp = %@
apsRelayAttempted = %@
apsRelayDidFallback = %@
apsRelaySucceeded = %@
clientCorrelationKey = %@
requestUrl = %@
connectionType = %@
dnsServers = %@
resolvedIPAddress = %@
statusCode = %ld
tidState = %@
clientError = %@
fetchStartTime = %f
domainLookupStartTime = %f
domainLookupEndTime = %f
connectionStartTime = %f
connectionStartNStatRXBytes = %ld
connectionStartNStatTXBytes = %ld
secureConnectionStartTime = %f
connectionEndTime = %f
connectionStopNStatRXBytes = %ld
connectionStopNStatTXBytes = %ld
connectionReused = %@
requestStartTime = %f
responseDate = %@
responseStartTime = %f
responseEndTime = %f
redirectStartTime = %f
redirectEndTime = %f
redirectCount = %ld
xpSamplingForced = %@
xpSamplingPercentageCachedResponses = %f
xpSamplingPercentageUsers = %f
xpSessionDuration = %f
requestMessageSize = %lu
esponseMessageSize = %lu
TimingMetricsWindowStartTime
actionText
priceFormatted
subscription
downloaded
downloading
long
short
SSVMediaSocialAdminPermissionsOptionIgnoreCache
com.apple.StoreKitUI.SKUIMediaSocialAdminPermissionsCoordinator
v24@?0B8B12@"NSError"16
SSVMediaSocialAdminPermissionsCoordinator.m
accountID
%{public}@: Failed to unarchive dictionary. Error = %{public}@
adminStatus
%{public}@: Failed to archive status dictionary. Error = %{public}@
MediaSocialRefreshPeriodKey
MediaSocialSavedAdminStatusesKey
eventType
reasonHintType
subscriptionAdamID
purchasedAdamID
radioAdamID
itemCloudID
lyricsID
equivalencySourceAdamID
containerAdamID
globalPlaylistID
stationHash
stationStringID
stationID
cloudAlbumID
cloudPlaylistID
playlistVersionHash
containerType
endReasonType
eventDateTimestamp
featureName
itemDuration
itemEndTime
itemStartTime
itemType
persistentID
sourceType
timedMetadata
trackInfo
recommendationData
requestingBundleIdentifier
requestingBundleVersion
enqueuerProperties
householdID
siriInitiated
eventTimeZoneName
displayType
characterDisplayedCount
lyricLanguage
containerID
personalizedContainerID
storeID
externalID
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
internalBuild
eventSecondsFromGMT
PlayEnd
PlayStart
LyricDisplay
Unknown
ContainerChanged
RadioStation
Playlist
Album
Artist
NotApplicable
Other
SkipBackward
SkipForward
QueueChange
ManualPause
Interruption
InactivityPause
InactivitySessionEnd
NaturalTransition
AssetLoadFailure
ScrubBegin
ScrubEnd
QuickPlay
iTunesStoreContent
AudioClip
Stream
TimedMetadataPing
UploadedContent
AggregateNonCatalogPlayTime
Movie
TVEpisode
Audio
Video
Device
PairedWatch
RemoteControl
NoDisplayType
Static
LineByLine
WordByWord
SSSoftwareUpdatesStoreDidChangeNotification
com.apple.StoreServices.SSSoftwareUpdatesStore.%p
com.apple.StoreServices.SSSoftwareUpdatesStore.callout.%p
-[SSSoftwareUpdatesStore hideApplicationBadgeForPendingUpdates]
-[SSSoftwareUpdatesStore reloadFromServerWithCompletionBlock:]
-[SSFamilyCircleRequest startWithResponseBlock:]
v24@?0@"SSFamilyCircleResponse"8@"NSError"16
notification-type
parameters
media-kinds
put-parameters
mzbookkeeper
purchase
-[SSRentalSyncRequest startWithConnectionResponseBlock:]
<%@ %p
 buildVersion: %@
 deviceGUID: %@
 deviceName: %@
 SBEnabled: %@
 storeAccountID: %llu
 storeFrontID: %@
 timeZone:%@
timeZone
Must have upload kinds
com.apple.StoreServices.SSVDirectUploadQueue
com.apple.StoreServices.SSVDirectUploadQueue.observers
-[SSVDirectUploadQueue cancelAllUploadsWithCompletionBlock:]
-[SSVDirectUploadQueue cancelUploads:completionBlock:]
-[SSVDirectUploadQueue getUploadsWithCompletionBlock:]
-[SSVDirectUploadQueue pauseAllUploadsWithCompletionBlock:]
-[SSVDirectUploadQueue pauseUploads:completionBlock:]
-[SSVDirectUploadQueue resumeAllUploadsWithCompletionBlock:]
-[SSVDirectUploadQueue resumeUploads:completionBlock:]
-[SSVDirectUploadQueue _establishInboundConnection]
%@: Unrecognized message: %lld
B32@?0@"SSVDirectUpload"8Q16^B24
parental_control_attributes
rating-software
xpcData must be non-nil
 adamID: %lli
 cloudAlbumID: %@
 cloudPlaylistID: %llu
 globalPlaylistID: %@
 playlistVersionHash: %@
 stationHash: %@
 stationStringID: %@
 stationID: %lli
SSVPlayActivityEventContainerIDsAdamID
SSVPlayActivityEventContainerIDsCloudAlbumID
SSVPlayActivityEventContainerIDsCloudPlaylistID
SSVPlayActivityEventContainerIDsGlobalPlaylistID
SSVPlayActivityEventContainerIDsPlaylistVersionHash
SSVPlayActivityEventContainerIDsStationHash
SSVPlayActivityEventContainerIDsStationStringID
SSVPlayActivityEventContainerIDsStationID
SSVFairPlaySubscriptionControllerSubscriptionStatusDidChangeNotification
com.apple.StoreServices.SSVFairPlaySubscriptionController.accessQueue
sbKeyBag
subKeyBag
SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
B16@?0@"SSAppPurchaseHistoryTransaction"8
[%@] Posting SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
DELETE FROM %@
DELETE FROM %@ WHERE %@ != '%@'
SELECT value FROM db_properties WHERE key = ?
[%s:%d] Unsupported predicate value: %@
/Library/Caches/com.apple.xbs/Sources/StoreServices_Sim/StoreServices/SSAppPurchaseHistoryDatabase.m
SSAppPurchaseHistoryDatabase.m
INSERT OR REPLACE INTO db_properties (value, key) VALUES (?, ?);
DELETE FROM db_properties WHERE key = ?;
-[SSVCloudServiceCapabilitiesRequest startWithResponseBlock:]
%{public}@: Calling for capabilities. Allows privacy acknowledgement prompt: %{BOOL}d. callStack = %{public}@
v24@?0@"SSVCloudServiceCapabilitiesResponse"8@"NSError"16
v16@?0@"NSMutableURLRequest"8
accountless-streaming
[%@] Unsuccessful database migration function from %ld => %ld [Failure Count: %d]
[%@] Failed to migrate the DB %d times. [%ld vs %ld] Giving up, but nothing will work from this point forward. exit(1) crosses my mind, but probably not the right thing to do.
[%@] Although database migration function failed from %d => %d -- The schema did change. Perhaps another process is updating the database: [Currently at: %d]
Caches
com.apple.storeservices
AppPurchaseHistory.6.sqlitedb
CREATE TABLE IF NOT EXISTS app_purchase_history (pid INTEGER, account_unique_identifier INTEGER,category TEXT, company_title TEXT, content_rating_flags INTEGER, bundle_id TEXT, date_updated INTEGER, date_purchased INTEGER, download_size INTEGER, flavors TEXT, has_messages_extension INTEGER DEFAULT 0, is_hidden_from_springboard INTEGER DEFAULT 0, icon_title TEXT, icon_token TEXT, icon_url TEXT, oval_icon_token TEXT, oval_icon_url TEXT, is_family_shareable INTEGER DEFAULT 0, is_first_party INTEGER DEFAULT 0, is_newsstand INTEGER DEFAULT 0, is_hidden INTEGER DEFAULT 0, long_title TEXT, minimum_os INTEGER, purchased_token INTEGER,store_id INTEGER, supports_ipad INTEGER DEFAULT 0, supports_iphone INTEGER DEFAULT 0, redownload_params TEXT, version_human_readable TEXT, version_itunes INTEGER, vpp_is_licensed INTEGER DEFAULT 0, is_32_bit_only INTEGER DEFAULT 0, is_preorder INTEGER DEFAULT 0, required_capabilities TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS db_properties (key TEXT PRIMARY KEY, value TEXT)
CREATE TABLE IF NOT EXISTS app_purchase_history_accounts (account_unique_identifier INTEGER, local_revision INTEGER, PRIMARY KEY (account_unique_identifier));
CREATE INDEX IF NOT EXISTS app_purchase_history_store_id ON app_purchase_history (store_id);
CREATE INDEX IF NOT EXISTS app_purchase_history_category ON app_purchase_history (category);
CREATE INDEX IF NOT EXISTS app_purchase_history_bundle_id ON app_purchase_history (bundle_id);
CREATE INDEX IF NOT EXISTS app_purchase_history_account_unique_identifier ON app_purchase_history (account_unique_identifier);
SELECT value FROM db_properties WHERE key="app_purchase_history.localRevision";
SELECT value FROM db_properties WHERE key="app_purchase_history.account_unique_identifier";
DELETE FROM db_properties WHERE key="app_purchase_history.localRevision";
ALTER TABLE app_purchase_history ADD COLUMN is_family_shareable INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN vpp_is_licensed INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN is_first_party INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN has_messages_extension INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN is_hidden_from_springboard INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN oval_icon_token TEXT;
ALTER TABLE app_purchase_history ADD COLUMN oval_icon_url TEXT;
ALTER TABLE app_purchase_history ADD COLUMN is_32_bit_only INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN is_preorder INTEGER DEFAULT 0;
ALTER TABLE app_purchase_history ADD COLUMN required_capabilities TEXT;
com.apple.MediaSocial.adminStatus
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
MZStorePlatform
app_purchase_history
IFNULL(app_purchase_history.is_first_party, 0)
company_title
content_rating_flags
bundle_id
date_updated
date_purchased
download_size
flavors
has_messages_extension
icon_title
icon_token
icon_url
is_family_shareable
is_first_party
is_hidden
is_hidden_from_springboard
is_newsstand
is_preorder
IFNULL(app_purchase_history.is_preorder, 0)
long_title
minimum_os
oval_icon_token
oval_icon_url
is_32_bit_only
purchased_token
store_id
supports_ipad
supports_iphone
redownload_params
version_human_readable
version_itunes
vpp_is_licensed
required_capabilities
<%@:%p> [PID: %lld] [Account: %lld] [StoreID: %lld]
MZFreeProductCode
MZGiftCertificate
code
getCodeInfoSrv
codeInfo
codeType
allowAutoSubmission
lockups
salable
 [BundleID: %@] [IconURL: %@]
mobile
[%@] -- Error creating directory: %@ -- %@
[%@] -- Error creating PersistentCache: %@
[%@] -- Error setting up database: %@
[%@] -- Error setting up database.
<%@ : %p> - [ID: %@] [Name: %@] [Max Inline: %u] [DB: %@]
CREATE TABLE IF NOT EXISTS %@ (pid INTEGER, lookup_key TEXT,data_blob BLOB, data_size INTEGER, date_inserted INTEGER, date_expired INTEGER, date_retired INTEGER, user_info TEXT, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS %@_lookup_key ON %@ (lookup_key);
CREATE INDEX IF NOT EXISTS %@_date_inserted ON %@ (date_inserted);
CREATE INDEX IF NOT EXISTS %@_date_expired ON %@ (date_expired);
CREATE INDEX IF NOT EXISTS %@_date_retired ON %@ (date_retired);
CREATE INDEX IF NOT EXISTS %@_date_user_info ON %@ (user_info);
SELECT SUM(%@), COUNT(*) FROM %@ WHERE %@ <= ?;
count
retired
expired
SELECT SUM(%@), COUNT(*) FROM %@;
total
SELECT %@, LENGTH(HEX(%@)) FROM %@ WHERE %@ <= ?;
DELETE FROM %@ WHERE %@ IN ( ?
[%@] [Updated: %d] [External: %d] [LookupKey: %@]
[%@] Failed to update SSDatabaseCacheEntry: %@
-[SSVClaimApplicationsRequest startWithResponseBlock:]
subscriptionStatus
com.apple.itunesstored.SSVSubscriptionStatusCoordinator.changeNotificationSuspensionAccessQueue
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim
[%{public}@]: _copyDownloadsForMessage: %@
[%{public}@]: _sendDownloadsChanged: %@
<%@ : %p> - Persistent ID: %llu
SELECT %@ FROM %@ WHERE %@ = ? LIMIT 1;
database_cache
lookup_key
data_blob
data_size
date_inserted
date_expired
date_retired
user_info
observable
coma.apple.StoreServices.SSObservable.sendMessage
%{public}@: [%{public}@] Someone is attempting to send a completion from a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to send a failure from a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to send a result from a completed SSObservable.
%{public}@: [%{public}@] There's at least one observer. Sending the result along with any queued results.
%{public}@: [%{public}@] The are no observers. Queuing the result.
%{public}@: [%{public}@] Someone is attempting to add an observer to a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to add an observer to a SSObservable it's already observing.
%{public}@: [%{public}@] There are pending results. Sending them now that we have an observer.
<%@ : %p> - [ID: %@] [Name: %@]
%02x
[%@] write bytes (%d) to path: %@
Error clearing cache entry: %@
[%@] -- Failed to read: %@
com.apple.itunesstored.biometricschanged
com.apple.StoreServices.SSBiometrics.%p
-[SSBiometrics getAllCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:]
-[SSBiometrics getCachedBiometricAuthenticationContextWithToken:evict:completionBlock:]
-[SSBiometrics getCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:]
-[SSBiometrics getConstraintsDictionaryForPurpose:completion:]
-[SSBiometrics getCurrentACLVersionWithCompletion:]
-[SSBiometrics getStateWithCompletionBlock:]
-[SSBiometrics resetAccount:withCompletionBlock:]
-[SSBiometrics resetWithCompletionBlock:]
-[SSBiometrics setEnabled:withAuthToken:completionBlock:]
-[SSBiometrics setAllowed:completionBlock:]
-[SSBiometrics tokenUpdateDidFinishWithLogKey:completion:]
-[SSBiometrics tokenUpdateShouldStartWithLogKey:completion:]
-[SSBiometrics tokenUpdateStateWithCompletionBlock:]
-[SSBiometrics getIdentityMapCountWithCompletionBlock:]
-[SSBiometrics isIdentityMapValidForAccountIdentifier:completionBlock:]
-[SSBiometrics saveIdentityMapForAccountIdentifier:completionBlock:]
SELECT %@.%@,%@.%@,%@.%@,%@.%@,%@.%@,%@.%@,%@.%@ FROM %@ LEFT OUTER JOIN %@ ON %@.%@ = %@.%@ WHERE (%@.%@ IS NULL OR %@.%@ <= %lld) AND (%@ = %@)
 AND (%@.%@ IN ("XX"
%@,"%@"
 AND %@.%@ = "%@" 
app_image_cache
Cancelled
Failed
FailedAssetBlocked
FailedDownloadRemoved
FailedInstallVerification
FailedKeepSafeHarborContainer
FailedPermanently
Started
Succeeded
AutoStoreQueue
AutoUpdate
External
Internal
ManualUpdate
PerDevice
Restore
RestoreDemoted
StoreQueue
clientId
xp_amp_app_install
hardwareType
installError
installStatus
installType
jobId
buildVersion = %@
bundleID = %@
hardwareType = %@
installError = %@
installStatus = %@
installType = %@
jobID = %lld
v32@?0@"NSURLQueryItem"8Q16^B24
SSAppImageDatabaseCacheEntry
**** No identifier passed to initialization routine [%@]
%@: [Session Identifier: %@] [Factories: %d]
**** No SSCacheObjectFactory for typeIdentifier [%@]
**** Clearing SSCacheObjectStore [%@]
[%@] No data representation when adding object to cache with item identifier %@
[%@] No item identifier
[%@] No type identifier for item identifier %@
[%@] No data representation for item identifier %@
bplist
-[SSVMediaSocialPostRequest startWithCompletionBlock:]
caller
com.apple.StoreServices.SSVPlatformRequestOperation.%p
x-request-timestamp
X-Request-TimeStamp
v32@?0@"NSString"8@"NSString"16q24
&version=1
-[SSWishlistAddItemsRequest startWithAddItemsResponseBlock:]
SSWishlistErrorDomain
v16@?0^{sqlite3=}8
SELECT value FROM properties WHERE key="lastSyncTime";
DELETE FROM properties WHERE key="lastSyncTime"
INSERT OR REPLACE INTO properties (key, value) VALUES ("lastSyncTime", ?)
-[SSVShowDialogRequest startWithDialogResponseBlock:]
 cloudID: %llu
 lyricsID: %@
 purchasedAdamID: %lli
 radioAdamID: %lli
 equivalencySourceAdamID: %lli
 subscriptionAdamID: %lli
 tvShowPurchasedAdamID: %lli
 tvShowSubscriptionAdamID: %lli
SSVPlayActivityEventItemIDsCloudID
SSVPlayActivityEventItemIDsLyricsID
SSVPlayActivityEventItemIDsPurchasedAdamID
SSVPlayActivityEventItemIDsRadioAdamID
SSVPlayActivityEventItemIDsEquivalencySourceAdamID
SSVPlayActivityEventItemIDsSubscriptionAdamID
SSVPlayActivityEventItemIDsTVShowPurchasedAdamID
SSVPlayActivityEventItemIDsTVShowSubscriptionAdamID
CREATE TABLE IF NOT EXISTS item (pid INTEGER, item_id INTEGER, sort_order INTEGER DEFAULT 0, state INTEGER DEFAULT 0, item_kind TEXT NOT NULL, item_data BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS properties (key TEXT, value TEXT, PRIMARY KEY (key));
CREATE INDEX IF NOT EXISTS item_item_id ON item (item_id);
CREATE INDEX IF NOT EXISTS item_state ON item (state);
%lld.sqlitedb
Wishlists
ALTER TABLE item ADD COLUMN sort_order INTEGER DEFAULT 0;
ALTER TABLE item ADD COLUMN wishlist_item_id INTEGER DEFAULT 0;
Type:%ld Version:%ld Data:%@
-[SSPushNotificationTokenRequest startWithCompletion:]
-[SSVApplicationCapabilitiesRequest startWithCapabilitiesResponseBlock:]
-[SSSilentEnrollmentVerification startWithCompletion:]
item
item_data
item_id
item_kind
sort_order
state
appInstall
click
enter
exit
impressions
loadUrl
buyConfirmed
canary
com.StoreServices.globalEventCanaryLock
[%@] Configuration field-blacklisting trimmed %d fields from event [%@]
[%@] Error creating PLIST: %@ -- Input: %@
[%@] No Dictionary Representation for: %@
Default values are only supported for primitive types.
baseVersion
osVersion
eventVersion
connection
eventTime
topic
clientVersion
hostApp
pClientVersion
timezoneOffset
%@ : %p -- [%d properties] %@
%@/2/%@
main-screen-width
main-screen-height
screenWidth
screenHeight
pixelRatio
windowInnerWidth
windowInnerHeight
pageContext
pageId
pageUrl
windowOrientation
%@ -- [Type: %@] [eVersion: %@]
-[SSPurchaseIntentActionRequest startWithCompletionBlock:]
appBundleId
com.apple.StoreServices.SSVFairPlaySAPSession.completion
com.apple.StoreServices.SSVFairPlaySAPSession
%@: SAP signature failed with bad session, attempting to sign again
%@: SAP signature failed with error: %@
%@: SAP signature verification failed with bad session, attempting to verify signature again
%@: SAP signature verification failed with error: %@
%{public}@: Failed to complete mescal context setup. Error = %@
%{public}@: Failed to load certificate data.
sign-sap-setup-buffer
%{public}@: Unable to find mescal setup url in the bag
%@: Failed to obtain SAP context for signing
No SAP context for signing
%@: Verify prime failed: %@
%@: Verify prime finished: %@
%@: Failed to obtain SAP context for signature verification
No SAP context for signature verification
back
forward
isCachedResponse
isUber
navigation
pageHistory
pageRenderTime
refApp
refUrl
requestEndTime
searchTerm
serverAppInstance
serverTiming
%@: Instance: %@
cancel-purchase-batch
failed-items
keybag
more
page-type
template-name
preorder-success
com.apple.storeservices.StoreDownloadQueueResponse
freelist_count
auto_vacuum
%{public}@: Free page count (%ld) exceeded maximum. Vacuuming the database. auto_vacuum = %ld
VACUUM;
PRAGMA incremental_vacuum(500);
com.apple.storeServices.analytics
eventsTable_v1
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER, %@ TEXT,%@ BLOB, %@ REAL, %@ INTEGER, PRIMARY KEY (%@));
CREATE INDEX IF NOT EXISTS %@_%@ ON %@ (%@);
ALTER TABLE %@ ADD COLUMN %@ INTEGER DEFAULT 0;
suppressUserInfo
UPDATE %@ SET %@ = %@;
Metrics User database current version: %@
PRAGMA auto_vacuum = 2;
Metrics Errored out at version %@
Metrics User database migrated to version %@
PRAGMA %@;
[%@] Blacklisted fields produced an event with zero properties: %@
[%@] Blacklisted event excluded from insert: %@
B16@?0@"SSSQLiteDatabase"8
SELECT COUNT(%@) FROM %@ WHERE %@ = 0 AND %@ < %lld
DELETE FROM %@ WHERE %@ < %lld;
[%@] Deleting out-of-date events returned: %d [%d rows affected]
DELETE FROM %@ WHERE %@ != 0;
[%@] Deleting reported events returned: %d [%d rows affected]
[%@] Direct-access controller is calling through XPC to flush Unreported Events
[%@] Statement Didn't finish after stepping -- %@ -- %@
[%@] Dropping Event Summary which has no value for "%@" -- %@
[%@] Empty input array wastes CPU/Power, but is not fatal
UPDATE %@ SET %@ = %lld WHERE (%@ IN (%@)) AND %@ = 0;
SELECT DISTINCT(%@) FROM %@ WHERE %@ = 0 AND %@ <= %lld ORDER BY %@ ASC
SELECT %@ FROM %@ WHERE %@ = 0 AND %@ <= %lld ORDER BY %@ ASC LIMIT %d
SELECT %@ FROM %@ WHERE %@ = '%@' AND %@ = 0 AND %@ <= %lld AND %@ = %@ ORDER BY %@ ASC LIMIT %d
[%@] === Already Reported Event: %llu -- [Timestamp Reported: %@]
[%@] Error creating JSON: %@ -- Input: %@
report_url
eventBody
timestampInserted
timestampReported
supressDsid
is-background
apps
bundle-ids
claim-item-ids
download-item-ids
ds-id
item-ids
response-content-type
claim-type
serial-no
UniqueDeviceID
udid
InternationalMobileEquipmentIdentity
imei
MobileEquipmentIdentifier
meid
%@: [IDs: %@]
[%@] Marking %d events are reported
[%{public}@] No applicable metric events to report.
deliveryVersion
postTime
[%{public}@] Invalid JSON. Object: %{private}@
[%{public}@] OutputStream did not accept all bytes: %{public}d vs %{public}lu
[%{public}@] Wrote a total of %{public}d bytes to output stream
[%{public}@] Invalid JSON object: %@ with type: %{public}@
[%@] Unreported Event Count: %d
1.2.11
[%{public}@] -- error initializing z_stream [%{public}d] [Errno: %{public}d]
%{public}@: Error occurred during initialization
[%{public}@] Closed Stream [total_in: %{public}d] [total_out: %{public}d] -- %{public}d
[%{public}@] -- write called on stream with error: %{public}@
write:maxLength:
[%{public}@] -- error deflating stream [%{public}d] [Errno: %{public}d] [Context: %{public}@]
avail_in
avail_out
errno
context
SSGzipOutputStream
-[SSImportDownloadToIPodLibraryRequest startWithResponseBlock:]
com.apple.StoreServices.SSCoalescingQueue
com.apple.StoreServices.SSDownloadMonitor.%p
com.apple.StoreServices.SSDownloadMonitor.%p.delegate
signedIn
signedOut
com.apple.StoreServices.SSVSubscriptionEntitlementsCoordinator
%@: Asking daemon for subscription entitlements.
-[SSVSubscriptionEntitlementsCoordinator _loadSubscriptionEntitlementsIgnoreCaches:error:]
debug
info
warn
xp_amp_appstore_log
level
loggerName
logLevel = %@
logSubsystem = %@
message = %@
transactionId
automatic-downloads2
automatic-downloads
downloads-url
com.apple.storeservices.download-queue
@"NSURL"16@?0@"SSURLBagContext"8
%@: Could not load URL bag: %@
%@: Finished loading download queue (%@, %@, %@)
[%@]: Loading download queue (%@, %@, %@) with reason: %ld
[%@]: Download queue response (key = %@ startID = %@ endID = %@)
[%@]: storeCorrelationID: %{public}@
%llu
init
lease
init+lease
actionDetails
positionX
positionY
targetType
actionUrl
%@: %@; [%@, %@]; [%@, %@]; %@
focus
clear
delete
dismiss
select
sheet
sort
brick
button
editorial
flowcase
list
listItem
preview
search_related
tabItem
textField
Stack Shot Failed
Failed to create symbolicator
 %s + %llu
 (%s:%u)
%-3d %-30s
0x%0*llx%s%s
biometricMatchState
biometricType
dialogID
topicName
faceId
touchId
xp_ci
xp_its_main
bioLockout
%{public}@: Unknown match state: %{public}@
%{public}@: Failed to identify biometric style for metrics event `deviceBiometricStyle` unknown
%{public}@: Failed to identity biometric style for metrics event `deviceBiometricStyle` not available
%{public}@: Failed to instrument metrics dialog with match: %{public}@
%{public}@: Lookup clientID for userID: %@
%{public}@: Found clientID: %{public}@, userID: %@
%{public}@: Lookup clientID failed with no userID
fuse
%@ [PID: %lld]
launch
taskSwitch
%@: Type: %@
destinationUrl
quit
ASDJobManager
ASDJobManagerOptions
v16@?0@"NSArray"8
v32@?0@"SSSoftwareDownload"8Q16^B24
ASDInstallManifestRequestOptions
ASDInstallManifestRequest
v28@?0B8@"NSArray"12@"NSError"20
ASDJobAsset
ASDJobActivity
ASDJobManifest
SSDoubleLinkedListInvalidNode
Attempting to add a node that has already been added to another list.
Attempting to remove a node from a list it doesn't belong to.
%@: Count: %ld
%{public}@ is an unsupported method for software downloads
%{public}@ is an unsupported deprecated method for software downloads
ended
pause
revision_id
store_account_id
event_data
events_current_revision
events_revision_version_token
play_activity.sqlitedb
unknown-revision-version
[%@] Statement Didn't finish after stepping -- %@
DELETE FROM %@ WHERE %@ <= ?;
[%@] Statement didn't finish after stepping -- %@
Q16@?0Q8
CREATE TABLE IF NOT EXISTS %@ (%@ INTEGER PRIMARY KEY, %@ INTEGER, %@ INTEGER, %@ BLOB);
CREATE TABLE IF NOT EXISTS %@ (%@ TEXT PRIMARY KEY, %@ TEXT);
DROP TABLE IF EXISTS %@;
INSERT OR IGNORE INTO %@ (%@, %@) VALUES (?, ?);
 FROM %@ WHERE (
(%@ == ?) AND (
%@ BETWEEN ? AND ?
 OR %@ BETWEEN ? AND ?
v32@?0{_NSRange=QQ}8^B24
) ORDER BY 
%@,%@ ASC;
%@ ASC;
SELECT DISTINCT %@ FROM %@ WHERE %@ IN (
INSERT OR REPLACE INTO %@ (%@, %@) VALUES (?, ?);
SELECT %@ FROM %@ WHERE %@ = ?;
leaseDurationInSeconds
offlineSlotAvailable
yyyy-MM-dd HH:mm:ss.SSSSSSZZZ
Unexpected invocation: `%{public}s`. This is legacy SPI that is due to be removed. Please send this report to 'Store Services | All'.
Expected invocation: `%{public}s`. This is legacy SPI that is still in use and not planned for removal at this time.
[%{public}@] Failed to set port. A server is already running.
[%{public}@] Failed to start server. Another server is already running.
[%{public}@] Failed to create socket.
[%{public}@] Failed to bind socket address.
[%{public}@] Server running
[%{public}@] Server stopped
[%{public}@] Failed to accept the socket.
[%{public}@] Fialed to serialize XML object into body data. Error = %@
[%{public}@] Error reading body data into XML object. Error = %@
%{public}@: %{public}@ has an invalid content version. Refusing to acknowledge it.
%{public}@: Returning NO from shouldDisplayPrivacyLinkWithIdentifier: because the internal default is set.
%{public}@: Determining whether or not the privacy policy should be displayed for %{public}@.
%{public}@: No privacy policy for %{public}@ has ever been acknowledged.
%{public}@: identifier = %{public}@ | lastAcceptedVersion = %lu | currentVersion = %lu
%{public}@: Could not initialize the privacy view controller. Make sure your project has linked the AMSUI framework.
%{public}@: The privacy acknowledgement on the account matches what we're trying to add to it. account = %{public}@ | account.privacyAcknowledgement = %{public}@ | privacyAcknowledgement = %{public}@
%{public}@: Failed to save %{public}@. error = %{public}@
%{public}@: There's no active account to acknowledgement privacy consent on.
%{public}@: Acknowledging privacy consent on the active account. activeAccount = %{public}@ | privacyAcknowledgement = %{public}@
%{public}@: Acknowledging privacy consent on local account. privacyAcknowledgement = %{public}@
%{public}@: Failed to acknowledge privacy consent. error = %{public}@
%{public}@: Successfully acknowledged privacy consent, but the response body is nil.
%{public}@: Successfully acknowledged privacy consent.
[%@] Restart Application returned error code: %d
[%@] Restart Application succeeded
%@: Send queue changed with %lu removals
%{public}@: Error unarchiving policy. Error = %{public}@
%{public}@: Failed to archive policy. Error = %{public}@
Unable to add playback-type query param
[%{public}@] Server response returned invalid dictionary object (class is %@)
[%{public}@] Server response returned invalid version object (class is %@)
[%{public}@] Server response returned invalid version %lli, current version: %lli
[%{public}@] Server response returned invalid root dictionary (class is %@)
[%{public}@] Unable to create CKC due to streaming request operation error: %@
[%{public}@] Unable to create persistent CKC due to error: %@
[%{public}@] Unable to create key server request because JSON serialization returned no data without an error.
[%{public}@] Unable to create key server request because JSON serialization returned an error: %@
[%{public}@] Unable to create key server request because creating the SPC failed with error: %@
[%{public}@] Certificate data operation returned no data.
[%{public}@] Certificate data operation failed with error: %@
[%{public}@] Key server returned a streaming key 'dictionary' of the wrong class (class is %@)
[%{public}@] Key server returned an invalid streaming key ID (class is %@)
[%{public}@] Found the streaming key dictionary for ID: %lli
[%{public}@] Streaming key response for ID %lli has a CKC response string that did not successfully decode into data.
[%{public}@] Streaming key response for ID %lli has an invalid CKC response class (class is %@)
[%{public}@] Streaming key response for ID %lli has an invalid status: %lli or failure type: %{public}@. Dialog dictionary is: %{public}@
DestinationURL was unspecified; falling back to directory for asset type %ld
Creating sandbox extension for %{public}@
%{public}@
%@: Taking process assertion
%@: Closing background task early
%@: Releasing process assertion
%@: Background task expired
SSUniqueExecutionQueue: self is out-of-scope.
SSUniqueExecutionQueue: The promise already finished. Calling the completion block directly.
[%@] Received items did change notification with revision ID: %llu, current revisionID: %llu
[%@] Defering refresh due to in-progress request count: %lli
[%{public}@]: Failed initializing from XPC
[%@] Failed to get bag value for key: %@. Error: %@
%{public}@: Using the value stored in AppleLanguageCodeSetup, %{public}@
%{public}@: There's no value stored in AppleLanguageCodeSetup.
%{public}@: Setting the active account's storefront after running %{public}@. activeAccount = %{public}@ | storefrontID = %{public}@
%@: URL bag was needed, but none was provided
%{public}@: Failed to archive download policy. Error = %{public}@
%{public}@: Failed to archive request properties. Error = %{public}@
%{public}@: Failed to unarchive download policy. Error = %{public}@
%{public}@: Failed to unarchive request properties. Error = %{public}@
%@: Refreshing download: %@ / %@
SSAccountStore: Setting a non-pet as the password equivalent token. account = %{public}@
SSAccountStore: Setting a password that may be a password equivalent token. account = %{public}@
%{public}@: Found backing identifier for secure token: %@
%{public}@: Adding new secure token to keychain
%{public}@: Updating existing secure token in keychain
%{public}@: Failed to locate backing identifier for secure token
%{public}@: Someone is changing the country code of an account's storefront outside of authentication. account = %{public}@ | oldStorefront = %{public}@ | newStorefront = %{public}@ | callStack = %{public}@
%{public}@: Someone is setting an account's storefront to nil. account = %{public}@ | callStack = %{public}@
%{public}@: Failed to reset transient data for an account. account = %{public}@ | error + %{public}@
%{public}@: Found secure token
%{public}@: Secure token lookup failed with error: %{public}@
%{public}@: Secure token lookup failed for nil identifier
%{public}@: Merging %{public}@ with %{public}@. creditsString changed.
%{public}@: Merging %{public}@ with %{public}@. uniqueIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. accountName changed.
%{public}@: Merging %{public}@ with %{public}@. altDSID changed.
%{public}@: Merging %{public}@ with %{public}@. iTunesPassSerialNumber changed.
%{public}@: Merging %{public}@ with %{public}@. secureToken changed.
%{public}@: Merging %{public}@ with %{public}@. storeFrontIdentifier changed.
%{public}@: Merging %{public}@ with %{public}@. firstName changed.
%{public}@: Merging %{public}@ with %{public}@. lastName changed.
%{public}@: Merging %{public}@ with %{public}@. isActiveLockerAccount changed.
%{public}@: Merging %{public}@ with %{public}@. accountKind changed.
%{public}@: Merging %{public}@ with %{public}@. accountScope changed.
%{public}@: Merging %{public}@ with %{public}@. accountSource changed.
%{public}@: Merging %{public}@ with %{public}@. didFallbackToPassword changed.
%{public}@: Merging %{public}@ with %{public}@. freeDownloadsPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. isManagedAppleID changed.
%{public}@: Merging %{public}@ with %{public}@. isNewCustomer changed.
%{public}@: Merging %{public}@ with %{public}@. paidPurchasesPasswordSetting changed.
%{public}@: Merging %{public}@ with %{public}@. availableServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. enabledServiceTypes changed.
%{public}@: Merging %{public}@ with %{public}@. eligibilityForService changed.
%{public}@: You shouldn't call -[SSAuthenticateRequest init] directly. Use initWithAccount: or initWithAuthenticationContext: instead.
%{public}@: [%{public}@] An error occurred while authenticating %{public}@. error = %@
%{public}@: [%{public}@] Starting authentication request. context = %@ | context.accountName = %{public}@
%{public}@: Not entitled to talk to AuthKit. Sending request to itunesstored.
%{public}@: [%{public}@] Authenticating the demo account.
%{public}@: [%{public}@] Skiping authentication. %{public}@ doesn't need to be authenticated.
%{public}@: [%{public}@] The device doesn't have an active account. %{public}@ will become the active account.
%{public}@: [%{public}@] Failed to make the account the active account. error = %@
%{public}@: [%{public}@] Using the device's demo account. username = %{public}@
%{public}@: [%{public}@] Attempting to find an existing account using: altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
%{public}@: [%{public}@] Found an existing account. account = %{public}@
%{public}@: [%{public}@] There's no existing account matching the information we were given, but since we were given a username (%{public}@), we'll create one.
%{public}@: [%{public}@] An altDSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A DSID was provided and the account didn't already have one.
%{public}@: [%{public}@] A password was provided.
%{public}@: [%{public}@] A PET was provided.
%{public}@: [%{public}@] There's no existing account matching the information we were given. The user will be prompted to enter their username and password.
%{public}@: [%{public}@] Failed to decode dialog from error. %{public}@
%{public}@: [%{public}@] Unknown dialog from error: %@
%{public}@: [%{public}@] Presenting dialog from error: %@
%{public}@: [%{public}@] Failed to present dialog: %@ error: %{public}@
%{public}@: XPC connection interrupted while attempting authentication request
%{public}@: An error occurred during authentication. error = %@
%{public}@: [%{public}@] Authentication request finished. response.authenticatedAccount.accountName = %{public}@ | response.authenticateResponseType = %ld | response.error = %@
%{public}@: [%{public}@] The user cancelled the authentication.
%{public}@: [%{public}@] The server rejected the credentials we passed it.
%{public}@: [%{public}@] This is a new account that needs to be reviewed.
%{public}@: [%{public}@] Authentication request failed. error = %@
%@: Someone is calling setInitialPassword:. This method is deprecated and will be passed to setPasswordEquivalentToken: which may not be what the caller intended.
%{public}@: Timed out while launching application %{public}@.
%{public}@: Could not launch %{public}@. %{public}@
%{public}@: No PID for app ID %{public}@.
%{public}@: Taking process assertion %{public}@ for %{public}.2f seconds with reason %{public}@.
%{public}@: Could not take process assertion %{public}@.
%{public}@: Releasing power assertion %@.
%@: Timed out while getting application info. identifier = %{public}@ key = %{public}@
[%@] initializing with empty config 
[%@] Blacklisted event [%@] 
%{public}@: Returning cached accounts.
%{public}@: There no cached accounts. We'll load the accounts now from the backing store synchronously.
%{public}@: Unit test mode is enabled. We won't go to the backing account store.
%{public}@: Failed to fetch the backing accounts. error = %{public}@
%{public}@: Caching the accounts.
%{public}@: Someone is attempting to get the active account. activeAccount = %{public}@
%{public}@: Someone is attempting to get the active locker account. activeLockerAccount = %{public}@
%{public}@: Resetting all properties on the local iTunes account.
%{public}@: Failed to reset all properties on the local iTunes account. error = %{public}@
%{public}@: Clearing the in-process account cache.
%{public}@: [%{public}@] %{public}@ has a broken DSID. Attempting to repair it.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding IDMS account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding iCloud account.
%{public}@: [%{public}@] Attempting to find a valid DSID on a corresponding AppleAuthentication account.
%{public}@: [%{public}@] Failed to find a valid DSID. Unable to repair the account.
%{public}@: [%{public}@] Successfully repaired an account's broken DSID. account = %{public}@
%{public}@: [%{public}@] We found a valid DSID, but we failed to save the account with the new DSID. account = %{public}@ | error = %{public}@
%{public}@: There are no accounts that need migrating to Accounts.framework.
%{public}@: Disabling the in-process cache.
%{public}@: Migrating %ld account(s).
%{public}@: [%{public}@] Removing an account from the KVS without migrating it because %@.
%{public}@: [%{public}@] Beginning migration of %{public}@. currentAccounts = %@
%{public}@: [%{public}@] Successfully migrated the account. Removing it from the KVS.
%{public}@: [%{public}@] Failed to migrate the account. We won't remove it from the KVS. error = %@
%{public}@: Ensuring that we have only a single active account after migration.
%{public}@: Migration is complete. Clearing the in-process cache and re-enabling it.
%{public}@: Posting a com.apple.itunesstored.accountschanged (and its internal varient) notification now that migration is complete.
%{public}@: We didn't migrate any accounts, so we aren't posting a com.apple.itunesstored.accountschanged (and its internal varient) notification.
%{public}@: After migration, there are no accounts remaining in the KVS.
%{public}@: After migration, the KVS contains the following accounts: %@
%{public}@: Timed out while trying to remove %{public}@.
%{public}@: Someone is attempting to remove a nil acount.
%{public}@: Removing %{public}@.
%{public}@: Failed to remove %{public}@. error = %@
%{public}@: Timed out while removing account %{public}@.
%{public}@: Timed out while removing accounts %@.
%{public}@: [%{public}@] Removing all cookies for %{public}@.
%{public}@: [%{public}@] Signing out of %{public}@.
%{public}@: [%{public}@] Successfully signed out of %{public}@. We'll now remove its cookies.
%{public}@: [%{public}@] Unable to sign out of %{public}@. error = %@
%{public}@: [%{public}@] We were told to skip the call to AuthKit.
%{public}@: [%{public}@] The user cancelled the create account dialog.
%{public}@: [%{public}@] The user opted to create a new account. This authentication will fail and we'll start the create account flow.
%{public}@: [%{public}@] The device doesn't have an active account for the scope. %{public}@ will become the active account.
%{public}@: The in-process accounts cache is disabled.
%{public}@: Making a copy of the KVS database for later debugging.
%{public}@: A copy of the KVS already exists. Removing it so we can create a new one.
%{public}@: Failed to remove the existing KVS database. error = %@
%{public}@: Failed to copy the KVS database. error = %@
%{public}@: Failed to exclude the KVS database copy from backups. error = %@
%{public}@: Posting a com.apple.itunesstored.accountschanged.internal notification.
%{public}@: Posting a com.apple.itunesstored.accountschanged notification.
%{public}@: Attempting to post a %{public}@, but our notificationQueue is NULL. Something went wrong.
%{public}@: The value of SSActiveAccountIsManagedAppleID changed.
%{public}@: Posting a %{public}@ notification.
%{public}@: Attempted to post a %{public}@, but our notificationQueue is NULL. Something went wrong.
%{public}@: Attempted to post metrics event, but our metricsQueue is NULL. Something went wrong
%{public}@: [%{public}@] Someone is attempting to save a nil acount.
%{public}@: [%{public}@] Refusing to save %{public}@. None of its properties have changed.
%{public}@: [%{public}@] Refusing to save %{public}@. It's backing account is nil.
%{public}@: [%{public}@] Attempting to save %{public}@. verifyCredentials = %{public}@
%{public}@: [%{public}@] Clearing the in-process cache in preparation of saving the account.
%{public}@: [%{public}@] Successfully saved the account.
%{public}@: [%{public}@] Failed to save the account. error = %@
%{public}@: An account is set to active when it shouldn't be. Deactivating it. account = %{public}@ | activeDSID = %{public}@
%{public}@: An account is set as the active locker account when it shouldn't be. Deactivating it. account = %{public}@ | activeLockerDSID = %{public}@
%{public}@: Failed to save %{public}@ after modifying its active or activeLocker property. error = %@
%{public}@: [%{public}@] Attempting to find an existing account. attempt = %ld
%{public}@: [%{public}@] Found a preexisting account with a broken altDSID or DSID that we can use.
%{public}@: [%{public}@] Refusing to migrate an account because there's already an account with the same username but different altDSID or DSID.
%{public}@: [%{public}@] There's no preexisting account. We'll create a new one.
%{public}@: [%{public}@] Found a pre-existing iTunes token. Setting the new account as authenticated.
%{public}@: [%{public}@] There's no pre-existing iTunes token. The new account will be unauthenticated.
%{public}@: [%{public}@] There's a preexisting account, %{public}@. We'll merge the given properties into it.
%{public}@: [%{public}@] Making the account the active account. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account inactive. previousActiveState = %{public}@
%{public}@: [%{public}@] Making the account the active locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] Making the account an inactive locker account. previousActiveLockerState = %{public}@
%{public}@: [%{public}@] It appears that someone created the account while we were attempting to migrate it. We'll perform the migration again.
SSAccountStore: [%{public}@] The raw password might actually be a PET.
SSAccountStore: [%{public}@] Successfully converted a raw password into a PET.
SSAccountStore: [%{public}@] Failed to convert a raw password into a PET. error = %{public}@
SSAccountStore: [%{public}@] We were told to update a nil account. We'll try to find an existing account matching the info we got from AuthKit. altDSID = %{public}@ | DSID = %{public}@ | username = %{public}@ | scope = %ld
SSAccountStore: [%{public}@] Found an account existing account matching the AuthKit information.
SSAccountStore: [%{public}@] Failed to find an account existing account. We'll create a new account.
SSAccountStore: [%{public}@] The newly created account will be set to active.
SSAccountStore: [%{public}@] The newly created account will be set to inactive.
SSAccountStore: [%{public}@] AuthKit gave us an updated altDSID. oldAltDSID = %{public}@ | newAltDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated DSID. oldDSID = %{public}@ | newDSID = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us an updated username. oldUsername = %{public}@ | newUsername = %{public}@
SSAccountStore: [%{public}@] AuthKit gave us updated identifiers. We'll attempt to find an existing account that matches the new identifiers.
SSAccountStore: [%{public}@] The new identifiers point to the same account we're already working with.
SSAccountStore: [%{public}@] The new identifiers are for a different existing account, %{public}@.
SSAccountStore: [%{public}@] We didn't find an existing account using the new identifiers.
SSAccountStore: [%{public}@] Failed to encode AKDevice. Proxied authentication will fail.
%{public}@: [%{public}@] We aren't prompting to create a new account because the account isn't empty.
%{public}@: [%{public}@] We aren't prompting to create a new account because we're authenticating for a sandbox account.
%{public}@: [%{public}@] We aren't prompting to create a new account because we either shouldn't be prompting or SSAccountStoreAuthKitCanCreateNewAccountKey isn't set to YES.
%{public}@: [%{public}@] We aren't prompting to create a new account because Buddy is still running.
%{public}@: [%{public}@] Prompting the user to see if they want to create a new account.
%{public}@: [%{public}@] Allowing silent authentication because the account is marked as a demo account.
SSAccountStore: [%{public}@] Buddy is still running. We can't prompt the user to enter their password. Prompt auth won't run.
SSAccountStore: [%{public}@] We were told not to prompt the user.
SSAccountStore: [%{public}@] Refusing to prompt the user. Account creation isn't allowed and this would create a new account.
SSAccountStore: [%{public}@] Prompting the user for their password.
SSAccountStore: [%{public}@] Failed to update the account by prompting the user for their password. The authentication will fail. error = %@
SSAccountStore: [%{public}@] Unable to perform silent authentication if we don't have an account.
SSAccountStore: [%{public}@] Attempting to update the account silently while we're running Buddy.
SSAccountStore: [%{public}@] We aren't allowed to attempt silent authentication.
SSAccountStore: [%{public}@] Attempting to update the account silently.
SSAccountStore: [%{public}@] Successfully updated the account silently.
SSAccountStore: [%{public}@] Failed to silently update the account. error = %@
SSAccountStore: [%{public}@] Unable to perform silent password authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent password authentication.
SSAccountStore: [%{public}@] We don't have a raw password to convert into a PET.
SSAccountStore: [%{public}@] We were given a raw password. We'll attempt to convert it into a PET.
SSAccountStore: [%{public}@] Unable to perform silent PET authentication if we don't have an account.
SSAccountStore: [%{public}@] We weren't told to allow silent PET authentication.
SSAccountStore: [%{public}@] The account already has a PET we can use.
SSAccountStore: [%{public}@] We weren't given a PET, and we were told not to check alternate accounts for one.
SSAccountStore: [%{public}@] We weren't given a PET. We'll check alternate accounts for one.
SSAccountStore: [%{public}@] Found a PET on an alternate account we can use.
SSAccountStore: [%{public}@] Unable to get a PET from an alternate account.
SSAccountStore: [%{public}@] The PET appears to be misformed and could be a raw password.
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveAccount:] is deprecated. The caller should get the active account, set its active property to NO, and save it.
%{public}@: Failed to deactivate the active account, %{public}@. error = %@
%{public}@: Someone is setting the active account to nil. -[SSAccountStore setActiveLockerAccount:] is deprecated. The caller should get the active locker account, set its activeLocker property to NO, and save it.
%{public}@: Failed to deactivate the active locker account, %{public}@. error = %@
SSAccountStore: Received a com.apple.itunesstored.accountschanged notification.
SSAccountStore: Received a com.apple.itunesstored.accountschanged.internal notification.
SSAccountStore: Received a com.apple.StoreServices.SSAccountStore.activeaccountchanged notification.
[SSRestrictions]: Invalid trust status: %ld, or result: %d
[SSRestrictions]: Ignoring failed extended validation validation
[%@] Dropping event which has no body values after blacklist filtering. [%@]
[%@] Dropping event of a type which is blacklisted. [%@]
[%@] Insert Metrics Events returned error code: %d
[%@] Insert Metrics Events succeeded
[%@] Attempting to insert events with no URL. Dropping [%d] events.
[%@] Flush timer fired
[%@] Flush Unreported Events timer fired -- %@
[%@] Flush Unreported Events timer fired & reported success
[%@] Flush Unreported Events timer fired but was subsequently disabled
[%@] Setting Flush Unreported Events timer: %0.2f
[%@] Flushing events
[%@] Report Metrics Events returned error code: %d
[%@] Report Metrics Events succeeded
[%@] User has opted not to send Apple diagnostic information. Dropped %li events that require it.
[%@] Events dropped by Event Controller with no report URL: [%lu events]
[%@] Events dropped by disabled Event Controller: [%lu events]
[%@] Insert Events called with an empty array.
%@: Connection interrupted
%@: Invalid response
%@: Record analytics events did succeed: %@
%{public}@: Error checking if URL trusted: %{public}@
[%@] -- Error setting up database
[TransactionStore] Started transaction: %{public}@
[TransactionStore] Joined transaction: %{public}@
[TransactionStore] Ended transaction: %{public}@
[TransactionStore] Left transaction: %{public}@
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim2
[%{public}@]: Could not create a BLDownloadQueue sharedInstance
[%{public}@]: Could not retrieve the BLDownloadQueue class
[%{public}@]: downloadStatesDidChange: %@
[%{public}@]: downloadStatesDidChange: -- created SSBookDownloads: %@
[%{public}@]: __book_sendDownloadsChanged: %@
%@: Invalid condition: %@
%{public}@: Failed to fetch needsDisplay for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save the lastAttemptDate for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save the lastAttemptDate for a server prompt. account = %{public}@ | promptIdentifier = %{public}@ | error = %{public}@
%{public}@: Failed to save needsDisplay for a server prompt. There's no active account or local account. promptIdentifier = %{public}@
%{public}@: Failed to save needsDisplay for a server prompt. account = %{public}@ | promptIdentifier = %{public}@ | error = %{public}@
%@: Enable all automatic download kinds
%@: Disable automatic download kinds: %@
%@: Set automatic download kinds: %@
SSDevice: Failed to update the device's storefront ID. We couldn't get the local account. error = %@
SSDevice: Successfully set the device's storefront to %{public}@
SSDevice: Failed to update the device's storefront ID. error = %@
%@: Enable automatic download kinds: %@
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@. %{public}@
%{public}@: [%{public}@] Setting a storefront ID on an account. Saving %{public}@.
%{public}@: [%{public}@] Failed to set a storefront ID on an account.
%{public}@: Failed to unarchive response. Error = %{public}@
%{public}@: Failed to archive response. Error = %{public}@
%{public}s: Failed to archive xpc object. Error = %{public}@
%{public}s: Failed to unarchive xpc object. Error = %{public}@
SSDownloadManager: Reconnect global handler: %@
%{public}@: Failed to retrieve telephony mobile subscriber country code with error: %{public}@.
%{public}@: Failed to retrieve telephony mobile subscriber network code with error: %{public}@.
%{public}@: Failed to retrieve telephony mobile equipment info with error: %{public}@.
%{public}@: Telephony request to send SMS to %@ failed. Telephony context: %{public}@.
%{public}@: Telephony active subscriptions did change.
%{public}@: Failed to instantiate CoreTelephonyClient.
%{public}@: Process %{public}@ is missing required telephony entitlement. Skipping instantiation of CoreTelephonyClient.
%{public}@: Current device does not have telephony capability. Skipping telephony client initialization.
%{public}@: Failed to get telephony user default voice subscription context with error: %{public}@.
%{public}@: Found telephony subscription context %{public}@ at slot %ld as the user default voice one.
%{public}@: Could not find a valid telephony subscription context. Available telephony subscription contexts: %{public}@.
%{public}@: Failed to retrieve telephony phone number with error: %{public}@.
%{public}@: Failed to retrieve telephony operator name with error: %{public}@.
%{public}@: Failed to retrieve telephony registration status with error: %{public}@.
%@: Connecting download handler: %lld
%@: Received message: (%lld, %lld)
%{public}@: No store front identifier found, this could lead to problems
%{public}@: Failed to unarchive auth challenge. Error = %{public}@
%{public}@: Failed to archive credential. Error = %{public}@
%{public}@: Refusing to dismiss a pending follow-up. The follow-up was not for the specified account. identifier = %{public}@ | account.identifier = %{public}@ | followUp.accountIdentifier = %{public}@
%{public}@: Failed to create a FLFollowUpItem for %{public}@
%{public}@: Nil altDSID in userInfo for renew credentials FLFollowUpItem. The user will be asked to sign into their active iTunes account or any iTunes account if no active iTunes account exists.
SSFollowUpController: Successfully posted the FLFollowUpItem. identifier = %{public}@
SSFollowUpController: Failed to post the FLFollowUpItem. identifier = %{public}@ | error = %{public}@
%{public}@: Received connection from: %{public}@ message: [%@ %@]
Failed to create directory, %@, for a log file. %@
Attempted to access a database that is now owned by root. It's been abandoned and replaced by %@.
%{public}@: SSVCookieStorage is being initalized with a backup URL. Setting performingMigration to YES.
%@: Could not create cookie storage path
%{public}@: Cannot remove cookies for a nil DSID.
%@: Feature Enabler removing ITFE cookie
%@: Feature Enabler updating ITFE cookie to value : %@
%{public}@: Someone is migrating the cookies. We found %lu cookie(s) in the database for %{public}@.
%{public}@: Failed to migrate database. Nuking the cookie storage
%{public}@: Successfully recovered the cookie storage
Cookie Storage Errored out at version %@
%{public}@: Failed to archive location. Error = %{public}@
%{public}@: Failed to unarchive location. Error = %{public}@
SSPaymentSheet: Rendering Retina image for tag: %{public}@, scale: %{public}@
SSPaymentSheet: Rendering non-Retina image for tag: %{public}@
%{public}@: Attempting to create AuthKit context with nil username
%{public}@: Failed to create AuthKit context for payment
%@: Failed to lookup username, substituting empty string
%{public}@: Configured payment sheet with title: %{public}@, titleType: %{public}@
%@: Requestor key not found, attempting to infer requestor from title enumeration.
%@: No requestor identified for title: %@
%@: No requestor identified, title type is not enumeration
%{public}@: [%{public}@] Starting redeem operation for codes: %@
%{public}@: [%{public}@] Redeem failed with error = %{public}@
%{public}@: [%{public}@] Redeem finished with a response.
%@: Schedule refresh in %.0f seconds
%@: Removing account with duplicate AppleID: %@ / %@
%@: Initializing database
%@: Initializing readonly database
%@: %@ resulted in a cache miss.
%@: Cache is full. The oldest object will be evicted.
[%@] Invalid receipt [%ld bytes] -- [%@]
[%@] Could not create decoder
[%@] Could not read data
[%@] Could not parse data
[%@] No content
[%@] Failed to load data
[%@] Failed to parse data
[%@] Parsing receipt
[%@] Receipt type: %@
[%@] AdamID: %@
[%@] BundleID: %@
[%@] Application version: %@
[%@] DSID: %@
[%@] SHA1: %lu
[%@] Transaction date: %@
[%@] FR tool version: %@
[%@] Parental controls: %@
[%@] DeveloperID: %@
[%@] Receipt created: %@
[%@] FR app version: %@
[%@] HW type: %@
[%@] DownloadID: %@
[%@] Installer versionID: %@
[%@] Receipt expires: %@
[%@] Receipt renewal: %@
[%@] Organization display name: %@
[%@] Cancellation reason: %@
[%@] Could not read certificates
[%@] Unexpected number of certificates
[%@] Intermediate certificate is missing
[%@] Could not create trust
[%@] Failed to update policies
[%@] Failed to anchor Apple root certificate
[%@] Could not set verification date
[%{public}@] Feature Enabler migrating from version: %{public}@ to version: %{public}@
[%{public}@] Feature Enabler removing enabled features
[%{public}@]: Enabling AMF by default for iOS 11
%@ doesn't exist. There are no HAR files to cleanup.
Removing %@ to cleanup HAR log files.
Failed to remove %@. %@
Failed to create directory, %@, for HTTP archive files. %@
Failed to write HTTP archive file. %@
Wrote HTTP archive file to: %@
%@: Not setting anything following bag load
%@: Metrics values are: %@
[%{public}@]: percentComplete: %f
%{public}@ is an unsupported deprecated method for book downloads
%{public}@ is an unsupported method for book downloads
%@: initWithDatabaseURL:%{public}@ readOnly:%d protectionType:%@
%@: Failed to close database: [0, %d, %s]
%@: Spin for SQL lock: %ld, spin count: [%ld, %s, %@]
%@: Could not execute SQL: %@: [%ld, %s, %@]
%@: Step failed: %s: [%d, %s]
%@: Releasing process assertion, background task expired
%@: Could not create directory to place new database: %@
SSSQLiteDatabase: Calling setupBlock
%@: Not authorized to open database: [%d, %@]
%@: Could not open read-only db: [%d, %@]
%@: Could not open database, resetting: [%d, %@]
%@: Resetting after error: [%d, %@]
%@: Failed to close database: [1, %d, %s]
%@: Re-open database: %@
%@: Failed to close database: [2, %d, %s]
%@: Could not prepare statement: %@: [%d, %s, %@]
%@: Unrecognized client key: %@
%{public}@: Someone is finishing a promise with both a result and an error. This will result in both the success and error blocks being called. result = %{public}@ error = %{public}@
%{public}@: Someone is finishing a promise with neither a result nor an error. This will result in neither the success nor the error blocks being called.
%{public}@: Someone is attempting to finish or cancel a finished SSPromise.
[%@] An error occurred writing the response. Written=%ld Error=%@
[%@] Successfully sent the response. %{public}@
[%@] Error %{public}@ completing %lu play activity events with session token:%llu flushResult:%lu
[%@] Completed %lu play activity events with session token:%llu flushResult:%lu with error %{public}@
[%@] Error %{public}@ flushing play activity events for %{public}@
[%@] Finished flushing play activity events for %{public}@ with error %{public}@
[%@] Recording play activity events: %@
[%@] Error %{public}@ recording %lu play activity events
[%@] Finished recording %lu play activity events with error %{public}@
[SSVPlayActivityController] Removing play events up to revision: %llu
[%@] Error %{public}@ removing play activity events upto revision %llu
[%@] Finished removing play activity events upto revision %llu with error %{public}@
[%@] Error %{public}@ setting revision %llu, version token %{public}@ for end point identifier %{public}@
[%@] Finished setting revision %llu, version token %{public}@ for end point identifier %{public}@ with error %{public}@
[%@] Error %{public}@ getting play activity events for end point identifier %{public}@
[%@] Finished getting %lu play activity events for end point identifier %{public}@
[SSVPlayActivityController] Completing pending play events for revision index set: %@ session token: %llu with result: %lu
[SSVPlayActivityController] Session information: %@
[SSVPlayActivityController] Removing pending revisions index set %@ from sessionInformation revisions index set: %@
[SSVPlayActivityController] Resulting index set: %@
[SSVPlayActivityController] Existing additional pending revisions index set: %@
[SSVPlayActivityController] New additional pending revisions index set from flush success: %@
[SSVPlayActivityController] New additional pending revisions index set from flush failure: %@
[SSVPlayActivityController] Revisions version token has changed, clearing out.
[SSVPlayActivityController] Connection to daemon play activity controller interrupted.
[SSVPlayActivityController] Connection to daemon play activity controller invalidated.
%{public}@: Failed to unarchive revision information. Error = %{public}@
%{public}@: Failed to archive revision information. Error = %{public}@
[%{public}@]: [%{public}@] Initiating authentication request
[%{public}@]: [%{public}@] Authentication request completed with error: %{public}@
[%{public}@]: Received authentication request but context was missing or invalid
GetMACAddress returned 0x%08x
FindEthernetInterfaces returned 0x%08x
[%s] -- Input buffer too small [%d < %d]
IOServiceMatching kIONetworkControllerClass: %@
CFDictionaryCreateMutable returned a NULL dictionary.
IOServiceMatching returned a NULL dictionary for kIONetworkControllerClass.
IOServiceGetMatchingServices returned 0x%08x
IOServiceGetMatchingServices iterator %u
IORegistryEntryCreateCFProperty produced bytes
IORegistryEntryCreateCFProperty failed
IORegistryEntryGetParentEntry returned 0x%08x
%@: Created a nil NSURLSessionTask for %@.
Network Timing Metrics: %@
%{public}@: Overwritting metric event property: %{public}@ with value: %@
Flushing HTTP Archive (HAR) buffer. Count : %ld
[%@] [%@] [%@] [%@]
%@: Creating a new NSURLSession with identifier %@.
[%@]: Metrics network inquiry error occurred. Error: %@
[%@]: Received low memory warning. Reducing HAR buffer size by: %lu
[%@]: No longer in low memory state. Increasing HAR buffer size
Writing %ld HTTP Archive file(s) to disk.
%{public}@: APSR attempted: %{public}@ succeeded: %{public}@ for request: %@
%{public}@: Enabling reverse push using APS
%@: Failed to fetch bag value for key: %@. Error: %@
%{public}@: A nil value was loaded from the bag for key %{public}@. Using new bag: %{public}@
%{public}@: Failed to unarchive dictionary. Error = %{public}@
%{public}@: Failed to archive status dictionary. Error = %{public}@
[%@] Posting SSAppPurchaseHistoryDatabaseLocalRevisionDidChange
%{public}@: Calling for capabilities. Allows privacy acknowledgement prompt: %{BOOL}d. callStack = %{public}@
[%@] Unsuccessful database migration function from %ld => %ld [Failure Count: %d]
[%@] Failed to migrate the DB %d times. [%ld vs %ld] Giving up, but nothing will work from this point forward. exit(1) crosses my mind, but probably not the right thing to do.
[%@] Although database migration function failed from %d => %d -- The schema did change. Perhaps another process is updating the database: [Currently at: %d]
[%@] -- Error creating directory: %@ -- %@
[%@] -- Error creating PersistentCache: %@
[%@] -- Error setting up database: %@
[%@] -- Error setting up database.
[%@] [Updated: %d] [External: %d] [LookupKey: %@]
[%@] Failed to update SSDatabaseCacheEntry: %@
[%{public}@]: Creating a new instance of SSDownloadManagerBookShim
[%{public}@]: _copyDownloadsForMessage: %@
[%{public}@]: _sendDownloadsChanged: %@
%{public}@: [%{public}@] Someone is attempting to send a completion from a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to send a failure from a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to send a result from a completed SSObservable.
%{public}@: [%{public}@] There's at least one observer. Sending the result along with any queued results.
%{public}@: [%{public}@] The are no observers. Queuing the result.
%{public}@: [%{public}@] Someone is attempting to add an observer to a completed SSObservable.
%{public}@: [%{public}@] Someone is attempting to add an observer to a SSObservable it's already observing.
%{public}@: [%{public}@] There are pending results. Sending them now that we have an observer.
[%@] write bytes (%d) to path: %@
Error clearing cache entry: %@
[%@] -- Failed to read: %@
**** No identifier passed to initialization routine [%@]
**** No SSCacheObjectFactory for typeIdentifier [%@]
**** Clearing SSCacheObjectStore [%@]
[%@] No data representation when adding object to cache with item identifier %@
[%@] No item identifier
[%@] No type identifier for item identifier %@
[%@] No data representation for item identifier %@
[%@] Configuration field-blacklisting trimmed %d fields from event [%@]
[%@] Error creating PLIST: %@ -- Input: %@
[%@] No Dictionary Representation for: %@
%@: SAP signature failed with bad session, attempting to sign again
%@: SAP signature failed with error: %@
%@: SAP signature verification failed with bad session, attempting to verify signature again
%@: SAP signature verification failed with error: %@
%{public}@: Failed to complete mescal context setup. Error = %@
%{public}@: Failed to load certificate data.
%{public}@: Unable to find mescal setup url in the bag
%@: Failed to obtain SAP context for signing
%@: Verify prime failed: %@
%@: Verify prime finished: %@
%@: Failed to obtain SAP context for signature verification
%{public}@: Free page count (%ld) exceeded maximum. Vacuuming the database. auto_vacuum = %ld
Metrics User database current version: %@
Metrics Errored out at version %@
Metrics User database migrated to version %@
[%@] Blacklisted fields produced an event with zero properties: %@
[%@] Blacklisted event excluded from insert: %@
[%@] Deleting out-of-date events returned: %d [%d rows affected]
[%@] Deleting reported events returned: %d [%d rows affected]
[%@] Direct-access controller is calling through XPC to flush Unreported Events
[%@] Statement Didn't finish after stepping -- %@ -- %@
[%@] Dropping Event Summary which has no value for "%@" -- %@
[%@] Empty input array wastes CPU/Power, but is not fatal
[%@] === Already Reported Event: %llu -- [Timestamp Reported: %@]
[%@] Error creating JSON: %@ -- Input: %@
[%@] Marking %d events are reported
[%@] Unable to serialize event to JSON.
Dropping invalid event for report: %@
[%{public}@] No applicable metric events to report.
[%{public}@] Invalid JSON. Object: %{private}@
[%{public}@] OutputStream did not accept all bytes: %{public}d vs %{public}lu
[%{public}@] Wrote a total of %{public}d bytes to output stream
[%{public}@] Invalid JSON object: %@ with type: %{public}@
[%@] Unreported Event Count: %d
[%{public}@] -- error initializing z_stream [%{public}d] [Errno: %{public}d]
%{public}@: Error occurred during initialization
[%{public}@] Closed Stream [total_in: %{public}d] [total_out: %{public}d] -- %{public}d
[%{public}@] -- write called on stream with error: %{public}@
[%{public}@] -- error deflating stream [%{public}d] [Errno: %{public}d] [Context: %{public}@]
%@: Asking daemon for subscription entitlements.
%@: Could not load URL bag: %@
%@: Finished loading download queue (%@, %@, %@)
[%@]: Loading download queue (%@, %@, %@) with reason: %ld
[%@]: Download queue response (key = %@ startID = %@ endID = %@)
[%@]: storeCorrelationID: %{public}@
%{public}@: Unknown match state: %{public}@
%{public}@: Failed to identify biometric style for metrics event `deviceBiometricStyle` unknown
%{public}@: Failed to identity biometric style for metrics event `deviceBiometricStyle` not available
%{public}@: Failed to instrument metrics dialog with match: %{public}@
%{public}@: Lookup clientID for userID: %@
%{public}@: Found clientID: %{public}@, userID: %@
%{public}@: Lookup clientID failed with no userID
%{public}@ is an unsupported method for software downloads
%{public}@ is an unsupported deprecated method for software downloads
[%@] Statement Didn't finish after stepping -- %@
[%@] Statement didn't finish after stepping -- %@
softlink:r:path:/System/Library/PrivateFrameworks/AppleMediaServicesUI.framework/AppleMediaServicesUI
softlink:r:path:/System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit
softlink:r:path:/System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
softlink:r:path:/System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp
softlink:r:path:/System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount
SSKeychain
SSHTTPServer
SSHTTPServerRequestHandlerDelegate
SSHTTPServerResponse
SSMetricsDialogEvent
SSXPCCoding
NSObject
SSPrivacyController
SSApplicationUtil
SSVPlaybackAsset
SSMetricsCustomEvent
SSVFamilyContentDeletionEvent
SSVFamilyAccountPair
SSDownloadQueue
SSDownloadManagerObserverPrivate
SSDownloadManagerObserver
SSVMediaSocialPostDescription
NSCopying
SSDownload
SSVContentLink
SSDownloadMetadata
NSSecureCoding
NSCoding
SSVCloudServiceCapabilitiesResponse
SSVSubscriptionStatusCoordinator
SSVDownloadQueueRequest
SSVSecureKeyDeliveryRequestOperation
SSVMediaContentTasteItemUpdate
SSAdditions
SSDownloadStatus
SSDownloadPhase
SSVRefreshSubscriptionRequest
SSDownloadAsset
SSExtensions
SSOperationProgress
SSLogFileOptions
SSVPlaybackResponse
SSDownloadManifestRequest
SSVURLCache
SSVURLCacheConfiguration
SSVURLCacheAdditions
SSDownloadManifestResponse
SSRequest
SSUniqueExecutionQueue
SSVSubscriptionEntitlementsSubscription
SSVMediaContentTasteController
SSVURLDataConsumer
SSVPBPlayActivityEnqueuerProperties
SSInstallAttributionParamsRequest
SSPurchaseRequest
SSPurchaseManagerDelegate
SSVURLBagInterpreter
SSVLoadURLOperation
SSURLSessionManagerDelegate
SSObserver
SSPurchase
SSTonePurchase
SSDecoding
SSRingtonePurchase
SSVRefreshStoreQueueDownloadOperation
SSURLConnectionRequest
SSURLAdditions
SSItemLookupRequest
SSVAppleAccountStore
SSItem
SSURLConnectionRequestDelegate
SSRequestDelegate
SSItemMedia
SSAppWakeRequest
SSRentalCheckoutRequest
SSAccount
SSRemoteWebViewRequest
SSVLeaseCertificateRequestOperation
SSVURLConnectionConsumer
SSAuthenticateRequest
SSVRepairApplicationRequest
SSAuthenticationContext
NSMutableCopying
SSMutableAuthenticationContext
SSPaymentSheetRatingImage
SSSpringBoardUtility
SSMetricsConfiguration
SSPromiseResult
SSVMediaSocialPostItem
SSVMediaContentTasteUpdateResponse
SSAccountStore
AKAppleIDAuthenticationDelegate
SSAuthenticateResponse
SSRestrictions
SSSoftwareUpdatesContext
SSMutableSoftwareUpdatesContext
SSSoftwareUpdatesRequest
SSSoftwareUpdatesResponse
SSMetricsController
SSBag
SSEventsTableBase
SSVCloudServiceAPITokenResponse
SSLazyPromise
SSBagProfileConfig
SSMutableBagProfileConfig
SSBinaryPromise
SSTransactionStore
SSItemOffer
SSVPushNotificationRequest
SSItemOfferDevice
SSItemOfferDeviceError
SSDownloadManagerBookShim2
SSNetworkConstraints
SSProtocolCondition
SSApplicationVersionCondition
SSCapabilityCondition
SSDocumentCondition
SSHasAccountCondition
SSItemAvailableCondition
SSPlatformCondition
SSRestrictionCondition
SSSystemVersionCondition
SSProtocolConditionalEvaluator
SSProtocolConditionalContext
SSDevice
SSLockdown
SSVCloudServiceAPITokenRequest
SSDownloadPolicyUserDefaultState
SSVLoadNearbyAppsOperation
SSVGratisApplication
SSURLRequestProperties
SSMutableURLRequestProperties
SSVSubscriptionResponse
SSDivertedDownload
SSURLConnectionResponse
SSPlayInfoRequest
SSPlayInfoRequestContext
SSPlayInfoResponse
SSVPlaybackLeaseItem
SSMigrator
SSNetworkQualityInquiry
SSDialog
SSDialogButton
SSPurchaseReceipt
SSAuthorizationRequest
SSItemArtworkImage
SSVSAPSignaturePolicy
SSVSAPSignatureComponent
SSItemImageCollection
SSSilentEnrollmentPaymentSession
SSRemoteNotificationClient
SSRemoteNotification
SSURLDataCollection
SSAppPurchaseHistoryAccount
SSURLBagContext
SSAskPermissionActionRequest
SSItemContentRating
SSUpdateAccountResponse
SSVPlayActivityFeedSerialization
SSRentalCheckinRequest
SSBiometricAuthenticationContext
SSVPlaybackItem
SSXPCConnection
SSDownloadManager
SSDownloadManagerOptions
SSSilentEnrollmentContext
SSSilentEnrollment
SSVTelephonyController
CoreTelephonyClientSuppServicesDelegate
CoreTelephonyClientDelegate
CoreTelephonyClientRegistrationDelegate
SSConsolidatedDialog
SSEntity
SSDownloadHandler
SSScriptURLHandler
SSVInstallManagedApplicationRequest
SSDictionaryResponse
SSResponseAction
SSVURLLookupResponseConsumer
SSVPlaybackLeaseRequest
SSAuthenticationResponse
SSURLBag
SSDownloadSession
SSDownloadHandlerSession
SSDownloadAuthenticationSession
SSDownloadAuthenticationChallengeSender
NSURLAuthenticationChallengeSender
SSFollowUpController
SSPersonalizeOffersRequest
SSPersonalizeOffersResponse
SSPreorder
SSPreorderManager
SSRestoreContentItem
SSPurchaseHistoryItem
SSXPCServer
SSXPCServerObserver
SSDistributedNotificationCenter
SSDistributedNotificationCenterObserver
SSRollableLog
SSVFairPlaySAPContext
SSRentalInformationRequest
SSVOperation
SSVDisableSubscriptionRequest
SSDownloadFileManifest
SSVMediaContentTasteUpdateRequest
SSEventMonitor
SSVMediaContentTasteItem
SSVMutableMediaContentTasteItem
SSVCookieKey
SSVCookieStorage
SSWeakReference
SSVComplexOperation
SSLookupProperties
SSLookupRequest
SSLookupResponse
SSLogConfig
SSMutableLogConfig
SSDownloadPolicyApplicationState
SSFamilyCircle
SSFamilyMember
SSDownloadPolicyRule
SSDownloadPolicy
SSPaymentSheet
SSKeybagRequest
SSSoftwareLibraryItem
SSSoftwareLibrary
SSAMSPurchase
SSRedeemCodesRequest
SSVMediaSocialShareExtension
SSVPlaybackLeaseCallback
SSVPlaybackLease
asn1Token
asn1SetToken
asn1SequenceToken
asn1IntegerToken
asn1OSToken
SSRedeemCodesResponse
SSKeyValueStore
SSLRUCache
SSLRUCacheItem
SSVPlayActivityDebugLogOperation
SSCircularBuffer
SSErrorHandler
SSVKeybagSyncRequest
ISPurchaseReceipt
SSFeatureEnablerMigrator
SSHTTPArchive
SSErrorHandlerSession
SSVLeaseRequestOperation
SSKeyValueStoreDatabase
SSKeyValueStoreSchema
SSKeyValueStoreSession
SSMetricsTimingDefaults
SSVMediaSocialPostExternalDestination
SSKeyValueStoreTransaction
HexUtil
SSBookDownload
SSVSubscriptionStatusRequest
SSKeyValueStoreValueEntity
SSUnitTests
SSSQLiteDatabase
SSVPlayActivityEvent
SSVMutablePlayActivityEvent
SSSQLiteEntity
SSSQLitePredicate
SSSQLitePropertyPredicate
SSSQLiteComparisonPredicate
SSSQLiteContainsPredicate
SSSQLiteNullPredicate
SSSQLiteCompoundPredicate
SSSQLiteQuery
SSSQLiteQueryDescriptor
SSSQLiteQueryAdditions
SSPromise
SSVEnableSubscriptionRequest
SSMemoryEntity
SSPurchaseResponse
SSVServerAuthenticateRequest
SSVServerAuthenticateResponse
SSHTTPServerRequestHandler
NSStreamDelegate
SSVURLJSONDataConsumer
ICProcessPlayActivityEventsRequestListener
SSVPlayActivityController
_SSVPlayActivityEndpointRevisionInformation
_SSVPlayActivityFlushSessionInformation
SSInstallAttributionPingbackRequest
SSPurchaseManager
SSMachineDataRequest
SSPrivacyMetricsEvent
SSMetricsEventLocation
SSVSubscriptionEntitlements
SSTermsAndConditions
SSVMediaSocialPostAttachment
SSLookupItem
SSVSubscriptionStatus
SSPaymentSheetPriceSectionItem
SSLookupItemArtwork
SSURLSessionManager
NSCacheDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
SSVFairPlaySubscriptionStatus
SSMetricsLoadURLEvent
SSLookupItemOffer
SSVMediaSocialAdminPermissionsCoordinator
SSVPBPlayActivityEvent
SSVBarrierOperationQueue
SSSoftwareUpdatesStore
SSVPlaybackLeaseConfiguration
SSFamilyCircleRequest
SSFamilyCircleResponse
SSVPushNotificationParameters
SSRentalSyncRequest
SSVPlayActivityEnqueuerProperties
SSVMutablePlayActivityEnqueuerProperties
SSVDirectUploadQueue
SSSoftwareUpdate
SSXPCData
SSVPlayActivityEventContainerIDs
SSVMutablePlayActivityEventContainerIDs
SSVFairPlaySubscriptionController
SSAppPurchaseHistoryDatabase
SSVCloudServiceCapabilitiesRequest
SSVAccountLessPlaybackOperation
SSAppPurchaseHistoryDatabaseSchema
SSVMediaSocialAdminStatusOperation
SSVPlatformContext
SSAppPurchaseHistoryEntry
SSAppPurchaseHistoryTransaction
SSPurchasableItem
SSVRedeemCodeMetadata
SSVRedeemCodeItem
SSPurchasableAppItem
SSDatabaseCache
SSVClaimApplicationsRequest
Private
SSDownloadManagerBookShim
SSDatabaseCacheEntry
SSObservable
SSPersistentCache
SSBiometrics
SSAppPurchaseHistoryCache
SSAppImageDatabaseCacheEntry
SSMetricsAppInstallEvent
SSVSAPSignatureDataSource
SSVMediaSocialAdminStatus
SSAppIconDatabaseCache
SSCacheObjectStore
SSPlistCacheObjectFactory
SSCacheObjectFactory
SSPlistCacheObject
SSCacheObject
SSVMediaSocialPostRequest
SSVURLProtocolConsumer
SSVPlatformRequestOperation
SSVPlaybackLeaseAsset
SSWishlistAddItemsRequest
SSWishlist
SSVShowDialogRequest
SSVDialogResponse
SSVPlayActivityEventItemIDs
SSVMutablePlayActivityEventItemIDs
SSWishlistDatabaseSchema
asn1ReceiptToken
SSPushNotificationTokenRequest
SSSimulatedCrash
SSVApplicationCapabilitiesRequest
SSSilentEnrollmentVerification
SSWishlistItemEntity
SSMetricsEvent
SSBagKey
SSMetricsMutableEvent
SSMetricsBaseEvent
SSPurchaseIntentActionRequest
SSVFairPlaySAPSession
SSVSAPContext
SSMetricsPageEvent
SSVStoreDownloadQueueResponse
SSMetricsEventTable
SSMetricsEventController
SSMetricsEventTableEntity
SSVGratisRequestBody
SSPromiseCompletionBlocks
SSMetricsEventReportingSession
SSGzipOutputStream
SSVPlaybackSubscriptionLeaseRequest
SSImportDownloadToIPodLibraryRequest
SSCoalescingQueue
SSDownloadMonitorItem
SSDownloadMonitor
SSVStoreDownload
SSMetricsAccountEvent
SSVSubscriptionEntitlementsCoordinator
SSMetricsLogEvent
SSMetricsPurchaseEvent
SSVLoadDownloadQueueOperation
SSVPlaybackKDLeaseRequest
SSMetricsClickEvent
SSStackShot
SSVMediaSocialPostArtist
SSAuthorizationMetricsController
SSVDirectUpload
SSMetricsEnterEvent
SSMetricsExitEvent
SSDownloadManagerAppShim
ASDJobManagerObserver
SSDoubleLinkedList
SSDoubleLinkedListNode
SSMetricsImpressionsEvent
SSSoftwareDownload
SSMetricsMediaEvent
SSVPlayActivityTable
SSVPlaybackLeaseResponse
SSMetricsSearchEvent
sharedApplication
scanHexLongLong:
null
blockOperationWithBlock:
countByEnumeratingWithState:objects:count:
initWithObjects:
encodeObject:forKey:
scannerWithString:
number
_setPassword:
initWithObjects:count:
scheduleInRunLoop:forMode:
sharedCache
initWithObjectsAndKeys:
countForObject:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
accountsWithAccountType:
scheme
accountsWithAccountType:options:error:
isPurchase
sharedConnection
_setProxiedAppBundleID:
setScheme:
numberWithBool:
boolForKey:
_setProxiedAppName:
isRestore
numberWithDouble:
_setProxyingForApp:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
setLength:
secondsFromGMT
initWithOptions:
hasPrefix:
numberWithFloat:
setLenient:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
enumerateKeysAndObjectsUsingBlock:
initWithOptions:capacity:
secondsFromGMTForDate:
numberWithInt:
sharedDefaultSession
_calculatedExpiration
initWithPID:flags:reason:name:
setLinkType:
isRunningInStoreDemoMode
numberWithInteger:
setCredential:
DSIDForAccount:
queryItemWithName:value:
initWithPID:flags:reason:name:withHandler:
secureKeyDeliveryRequestOperationDidChangeServerPlaybackContextData:
setCredentialItem:forKey:
queryItems
credential
initWithPassword:
setLocale:
enumerateObjectsUsingBlock:
numberWithLongLong:
sharedHTTPCookieStorage
credentialForTrust:
bundleForClass:
numberWithUnsignedInt:
credentialItemForKey:
seekToEndOfFile
isSecure
numberWithUnsignedInteger:
enumerateRangesUsingBlock:
numberWithUnsignedLong:
timeIntervalSince1970
setServerFriendlyDescription:
isSessionOnly
enumeratorAtPath:
numberWithUnsignedLongLong:
sharedMessageCenter
timeIntervalSinceDate:
isSettingLockedDownByRestrictions:
activeURLRequest
bundleWithIdentifier:
objCType
raise:format:
currentCalendar
timeIntervalSinceNow
bundleWithPath:
timeIntervalSinceReferenceDate
setDPInfo:
rangeOfCharacterFromSet:options:range:
addActivity:withIdentifier:
objectAtIndex:
sharedService
setDSID:
rangeOfString:
initWithProperties:
setServiceIdentifiers:
objectAtIndexedSubscript:
currentHandler
rangeOfString:options:
setServiceType:
sendSMSWithText:text:serviceCenter:toAddress:
addAttribute:value:range:
isSubclassOfClass:
timeZoneForSecondsFromGMT:
rangeOfString:options:range:
addBagKey:valueType:defaultValue:
setSession:
sharedURLCache
currentProcess
initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:
isSuspended
objectForKeyedSubscript:
JSONObjectWithData:options:error:
timeZoneWithName:
errorWithDomain:code:userInfo:
setDataProvider:
objectsPassingTest:
currentRunLoop
initWithQueue:
sender
addDependency:
setDateFormat:
addEntriesFromDictionary:
hasSuffix:
setDefaultButtonString:
data
setShouldAllowAppleIDCreation:
QAMode
setMaxConcurrentOperationCount:
serializedData
isValidJSONObject:
initWithRequest:
read:maxLength:
initWithRequest:result:error:bag:
dataContainerURL
setShouldForceInteractiveAuth:
addIndex:
addIndexes:
dataProvider
topViewController
serverTrust
eventMonitor:receivedEventWithName:userInfo:
addJobObserver:
openApplication:options:withResult:
initWithResponse:data:userInfo:storagePolicy:
dataRequest
dataTaskWithRequest:
setShouldPreventInteractiveAuth:
operations
addObjectsFromArray:
transactionMetrics
sessionWithConfiguration:delegate:delegateQueue:
originalRequest
transferBytesExpected
setShouldUpdatePersistentServiceTokens:
output
setDisplayStyle:
callStackReturnAddresses
dataUsingEncoding:
transferBytesWritten
addObserver:selector:name:object:
callStackSymbols
dataWithBytes:length:
exceptionWithName:reason:userInfo:
URLByAppendingPathComponent:
unarchivedObjectOfClass:fromData:error:
dataWithBytesNoCopy:length:
URLByAppendingQueryParameter:value:
unarchivedObjectOfClasses:fromData:error:
dataWithBytesNoCopy:length:freeWhenDone:
host
URLByDeletingLastPathComponent
recordAnalyticsWithMetricsDialogEvent:forTopic:
dataWithContentsOfFile:
underlyingDictionary
outputStreamToFileAtPath:append:
dataWithJSONObject:options:error:
setSoftwareIconNeedsShine:
dataWithPropertyList:format:options:error:
unionOrderedSet:
setSoftwareVersionExternalIdentifier:
URLForKey:
itunes_allHeaderFields
cancelAllOperations
unionSet:
initWithString:
setNumberOfBytesToHash:
cancelDownloadWithID:withCompletion:
allHTTPHeaderFields
setAccountProperty:forKey:
initWithTask:metrics:
path
URLQueryAllowedCharacterSet
setNumberStyle:
refresh
cancelJobsWithIDs:completionBlock:
allKeys
cancelPreviousPerformRequestsWithTarget:selector:object:
pathExtension
setObject:atIndexedSubscript:
initWithTimeIntervalSince1970:
expiresDate
pathWithComponents:
ignoreServerTrustEvaluation
initWithTimeIntervalSinceNow:
unlockWithCondition:
pauseDownloadWithID:withCompletion:
canonicalFormat
setObject:forKeyedSubscript:
initWithTimeIntervalSinceReferenceDate:
keyWindow
setStoreAccountName:
pauseJobsWithIDs:completionBlock:
setAccountType:
pendingFollowUpItemsWithCompletion:
date
unsignedIntValue
registerBagKeySet:forProfile:profileVersion:
setStoreCohort:
unsignedIntegerValue
dateByAddingTimeInterval:
initWithURL:cachePolicy:timeoutInterval:
allValues
dateFromString:
initWithURL:readonly:extensionClass:
allocWithZone:
failureResponse
lastIndex
setStoreDownloadKey:
percentEncodedQueryItems
initWithURL:resolvingAgainstBaseURL:
perform
initWithURL:statusCode:HTTPVersion:headerFields:
dateWithTimeIntervalSince1970:
setActions:
dateWithTimeIntervalSinceNow:
lastObject
dateWithTimeIntervalSinceReferenceDate:
lastPathComponent
allowsKeyedCoding
skipDescendents
remoteObjectProxyWithErrorHandler:
performSelector:withObject:afterDelay:
sleepForTimeInterval:
decimalDigitCharacterSet
removeAccount:withCompletionHandler:
URLWithString:
indexOfObject:
slotID
decodeBoolForKey:
setAllHTTPHeaderFields:
fetchStartDate
altDSIDForAccount:
indexOfObjectIdenticalTo:
decodeDoubleForKey:
ams_DSID
setStoreTransactionID:
UTF8String
persistentContentKeyFromKeyVendorResponse:options:error:
indexOfObjectPassingTest:
decodeFloatForKey:
ams_activeiTunesAccount
setStorefront:
UUID
indexesOfObjectsPassingTest:
decodeInt64ForKey:
checkQueueForClientWithIdentifier:URLBagContext:
uppercaseLetterCharacterSet
fileExistsAtPath:
ams_addCookies:
UUIDString
infoDictionary
uppercaseString
decodeIntegerForKey:
fileSystemRepresentation
ams_cookies
classForCoder
sortedArrayUsingFunction:context:
fileURLWithPath:
ams_iTunesAccountWithAltDSID:
decodeObjectForKey:
setAllowsCellularAccess:
lengthOfBytesUsingEncoding:
sortedArrayUsingSelector:
decodeObjectOfClass:forKey:
useNewCookieStorage
ams_iTunesAccountWithAltDSID:DSID:username:
fileURLWithPath:isDirectory:
_CFCachedURLResponse
decodeObjectOfClasses:forKey:
ams_iTunesAccountWithDSID:
filteredArrayUsingPredicate:
initWithUTF8String:
ams_iTunesAccountWithUsername:
finishJobs:
_CFURLResponse
clearPendingFollowUpItemsWithUniqueIdentifiers:completion:
defaultCenter
initWithUnsignedLongLong:
removeIndexes:
ams_iTunesAccounts
userAgentForProcessInfo:
phase
removeItemAtPath:error:
ams_iTunesSandboxAccounts
setExpectedDiskspace:
ams_isDemoAccount
setArgument:atIndex:
setSuspended:
standardUserDefaults
initWithAccountType:
phoneNumberWithDigits:digits:countryCode:
setPath:
defaultManager
ams_isLocalAccount
localTimeZone
setArtistID:
removeObject:
ams_isSandboxAccount
localeWithLocaleIdentifier:
firstIndex
removeObjectAtIndex:
_initWithCFCachedURLResponse:
defaultSessionConfiguration
ams_localiTunesAccount
initWithArray:
removeObjectForKey:
userInfo
firstObject
ams_localiTunesAccountForAccountType:
setTarget:
clientInfo
setPercentEncodedQueryItems:
setExternalOrderKey:
removeObjectIdenticalTo:
localizedDescription
firstObjectCommonWithArray:
ams_mapWithTransformIgnoresNil:
removeObjectsAtIndexes:
localizedStringForKey:value:table:
ams_rawPassword
initWithAttributedString:
username
localizedStringForStatusCode:
removeObjectsForKeys:
ams_removeAllCookies
setAssetType:
valid
flowWithBundle:
ams_removeCookiesMatchingProperties:error:
removeObjectsInRange:
localizedUppercaseString
ams_saveAccount:verifyCredentials:
insertObject:atIndex:
removeObserver:name:object:
ams_sharedAccountStore
lockWhenCondition:beforeDate:
ams_sharedAccountStoreForMediaType:
initWithBase64EncodedString:options:
setThumbnailURL:
detachNewThreadWithBlock:
insertString:atIndex:
initWithBool:
removeProfileWithIdentifier:
setFamilyName:
initWithBundleIdentifier:
compare:
pointerValue
initWithBundleType:
instanceMethodSignatureForSelector:
appendAttributedString:
initWithBytes:length:
compare:options:
appendBytes:length:
initWithBytes:length:encoding:
valueForKeyPath:
integerForKey:
appendData:
formattedUsernameFromUsername:
initWithBytesNoCopy:length:freeWhenDone:
replaceCharactersInRange:withString:
appendFormat:
valueForMetricsField:
replaceObjectAtIndex:withObject:
postFollowUpItem:completion:
setAuthenticationType:
initWithCapacity:
appendString:
lowercaseString
postNotificationName:object:
interfaceWithProtocol:
appleIDHeadersForRequest:
_timingData
components:fromDate:
postNotificationName:object:userInfo:
initWithClientIdentifier:
request
componentsJoinedByString:
dictionaryForKey:
componentsSeparatedByCharactersInSet:
setPresentingViewController:
initWithCondition:
valueWithCompletion:
invalidateAndCancel
applicationInfoForApplication:completion:
componentsSeparatedByString:
invertedSet
valueWithNonretainedObject:
setGenreID:
applicationState
getActiveContexts:
setURLCache:
componentsWithURL:resolvingAgainstBaseURL:
applicationStateForApplication:
storagePolicy
initWithContentsOfFile:options:error:
invocationWithMethodSignature:
mainBundle
setGivenName:
verifyCredentialsForAccount:options:completion:
initWithContext:
invoke
applicationsAvailableForOpeningWithError:
dictionaryWithCapacity:
getBytes:length:
initWithDSID:additionalQueryParams:targetIdentifier:
dictionaryWithDictionary:
invokeWithTarget:
mainQueue
getCFRunLoop
setUniqueDeviceIdentifier:
predicateWithFormat:
dictionaryWithObjects:forKeys:count:
initWithData:
makeObjectsPerformSelector:
initWithData:encoding:
condition
setGroupIdentifier:
dictionaryWithObjectsAndKeys:
makeObjectsPerformSelector:withObject:
requestStartDate
archivedDataWithRootObject:requiringSecureCoding:error:
setBoolValue:forSetting:
getJobsUsingBlock:
dirtyAccountProperties
dirtyDataclassProperties
setProcessInfo:
array
getLocalizedOperatorName:error:
requestWithURL:
isAppAnalyticsAllowed
getMobileEquipmentInfoFor:error:
arrayByAddingObjectsFromArray:
arrayForKey:
setUserInfo:
getObjects:range:
setHTTPShouldHandleCookies:
isAutomaticAppDownloadsAllowed
getPhoneNumber:error:
weakObjectsHashTable
setHTTPShouldSetCookies:
diskCapacity
setHTTPShouldUsePipelining:
setUsername:
weakToWeakObjectsMapTable
setBuyParams:
setHandler:
whitespaceAndNewlineCharacterSet
setUsesGroupingSeparator:
arrayWithArray:
setBytesTotal:
present
arrayWithCapacity:
setProtocolClasses:
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
presentedViewController
arrayWithObject:
getReturnValue:
string
writeData:
arrayWithObjects:
connectionTypeHeader
stringByAddingPercentEncodingWithAllowedCharacters:
previousFailureCount
arrayWithObjects:count:
stringByAppendingFormat:
isDiagnosticSubmissionAllowed
setHashArrayData:
writePropertyList:toStream:format:options:error:
getUserDefaultVoiceSubscriptionContext:
initWithDomain:code:userInfo:
stringByAppendingPathComponent:
setHashType:
resourceFetchType
stringByAppendingPathExtension:
initWithDouble:
respondWithData:
setValue:forKey:
stringByAppendingString:
distantFuture
setQualityOfService:
stringByDeletingLastPathComponent
documentProxyForName:type:MIMEType:
writeToFile:atomically:
setCancelIfDuplicate:
stringByDeletingPathExtension
principalClass
setQueryItems:
containsIndex:
writeToURL:options:error:
containsObject:
initWithFileAtPath:
stringByRemovingPercentEncoding
isEqualToArray:
stringByReplacingOccurrencesOfString:withString:
privacyControllerWithIdentifier:acknowledgementHandler:
containsString:
isEqualToData:
initWithFileDescriptor:closeOnDealloc:
handleFailureInFunction:file:lineNumber:description:
attributesOfItemAtPath:error:
initWithFormat:
containsValueForKey:
stringByTrimmingCharactersInSet:
isEqualToDictionary:
doubleForKey:
handleFailureInMethod:object:file:lineNumber:description:
initWithFormat:arguments:
stringForKey:
isEqualToIndexSet:
handleResponse:forRequest:shouldRetry:
methodSignatureForSelector:
contentInformationRequest
isEqualToNumber:
responseEndDate
year
processInfo
isEqualToSet:
authenticateWithContext:completion:
stringFromDate:
processName
isEqualToString:
stringFromNumber:
initWithInteger:
hasBytesAvailable
stringFromPersonNameComponents:
setVariantID:
contentVersion
authenticationMethod
aa_personID
setWithArray:
stringWithCString:encoding:
aa_primaryAppleAccount
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
stringWithFormat:
setInformativeText:
absoluteString
setWithObjects:
moveItemAtPath:toPath:error:
setInitialODRSize:
setClientID:
setInteger:forKey:
isFileURL
stringWithString:
setRemoteObjectInterface:
setClientInfo:
mutableBytes
stringWithUTF8String:
cookiesForURL:
setInterruptionHandler:
setRenewalDate:
initWithKeyOptions:valueOptions:capacity:
mutableCopy
resumeDownloadWithID:withCompletion:
setInvalidationHandler:
cookiesWithResponseHeaderFields:forURL:
setIsAutomatic:
resumeJobsWithIDs:completionBlock:
mutableString
coordinate
initWithLength:
setIsDeviceBasedVPP:
setXpSamplingForced:
copy
initWithLocaleIdentifier:
setIsExternal:
reverseObjectEnumerator
setXpSamplingPercentageCachedResponses:
subscriptions
downloadQueue:changedWithRemovals:
setIsInQueue:
reversePushEnabled
setXpSamplingPercentageUsers:
substringFromIndex:
setIsLocallyCacheable:
setXpSessionDuration:
initWithLongLong:
substringToIndex:
copyCarrierBundleValue:key:bundleType:error:
_apsRelayAttempted
setIsPurchasedRedownload:
set_APSRelayTopic:
_apsRelaySucceeded
setIsRestore:
setCompanionDevice:
bagForProfile:profileVersion:
set_CTDataConnectionServiceType:
setIsUpdate:
set_allowsTLSSessionTickets:
setIsUsernameEditable:
rootViewController
set_infersDiscretionaryFromOriginatingClient:
copyItemAtPath:toPath:error:
initWithMachServiceName:options:
setIsZipStreamable:
set_passwordPromptTitle:
copyMobileSubscriberCountryCode:error:
initWithMachineDataRequest:
runMode:beforeDate:
isNSDictionary__
setResourceValue:forKey:error:
drain
set_sourceApplicationAuditTokenData:
propertyList:isValidForFormat:
copyMobileSubscriberNetworkCode:error:
accountType
isNSString__
set_sourceApplicationBundleIdentifier:
copyRegistrationStatus:error:
accountTypeWithAccountTypeIdentifier:
effectiveBoolValueForSetting:
setResponseBody:
set_timingDataOptions:
propertyListWithData:options:format:error:
syncState
accountTypeWithIdentifier:completion:
initWithManifest:
effectiveRestrictedBoolValueForSetting:
base64EncodedStringWithOptions:
settingEnabled
effectiveValueForSetting:
setItemID:
nextObject
proposedCredential
protectionSpace
systemTimeZone
initWithMemoryCapacity:diskCapacity:diskPath:
encodeBool:forKey:
protocolClasses
initWithName:value:
encodeDouble:forKey:
saveAccount:withDataclassActions:doVerify:completion:
encodeFloat:forKey:
scanDouble:
encodeInt64:forKey:
encodeInteger:forKey:
init
createAttestationDataForAccountIdentifier:completionBlock:
createAttestationDataForAccountIdentifier:purpose:completionBlock:
createX509CertChainDataForAccountIdentifier:purpose:completionBlock:
deleteKeychainTokensForAccountIdentifier:completionBlock:
getPublicKeyDataForAccountIdentifier:completionBlock:
getPublicKeyDataForAccountIdentifier:purpose:completionBlock:
keyCountForAccountIdentifier:completionBlock:
signData:reason:fallback:cancel:forAccountIdentifier:completionBlock:
signData:context:completionBlock:
x509CertChainDataForAccountIdentifier:purpose:regenerateCerts:completionBlock:
_sendMessage:completionBlock:
.cxx_destruct
_connection
_dispatchQueue
dealloc
sharedServer
_isPortOccupied:
requestDidFinish:
responseBlockForPath:
port
responsesDelivered
setPort:
state
serverURL
serverLocalhostURL
setResponseForPath:handler:
start
stop
_handleConnectWithType:handle:
_ipAddress
allowsSecure
downloadSpeed
setDownloadSpeed:
verbose
setVerbose:
_definedResponses
_incomingRequests
_propertyQueue
_socket
_runLoop
_allowsSecure
_verbose
_port
_downloadSpeed
_state
_responsesDelivered
TB,R,N,V_allowsSecure
Ti,N,V_downloadSpeed
Ts,N,V_port
Tq,R,N,V_responsesDelivered
Ti,R,N,V_state
TB,N,V_verbose
initWithStatusCode:
setBodyWithBag:
bagFromBody
copyHTTPMessage
body
setBody:
headers
setHeaders:
statusCode
setStatusCode:
_statusCode
_body
_headers
T@"NSData",&,N,V_body
T@"NSDictionary",&,N,V_headers
Ts,N,V_statusCode
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithXPCEncoding:
copyXPCEncoding
actionType
actionURL
details
dialogId
dialogType
dualAction
message
result
setActionType:
setActionURL:
setDetails:
setDialogId:
setDialogType:
setDualAction:
setMessage:
setResult:
setTargetId:
setUserActions:
targetId
userActions
T@"NSString",C,N
T@"NSDictionary",C,N
T@"NSArray",C,N
acknowledgePrivacyLinkWithIdentifier:
acknowledgePrivacyLinkWithIdentifier:URL:
shouldDisplayPrivacyLinkWithIdentifier:
storePrivacyIdentifiers
appStorePrivacyIdentifiers
syncPrivacyAcknowledgementOnAccount:URL:
viewControllerForPrivacySplashWithIdentifier:URL:
_appendPrivacyAcknowledgement:toAccount:
_appendPrivacyAcknowledgementToActiveAccount:withURL:
_appendPrivacyAcknowledgementToLocalAccount:
_currentPrivacyContentVersionForIdentifier:
_syncPrivacyAcknowledgementOnAccount:URL:
_translateIdentifierToPrivacyAcknowledgement:withVersion:
restartApplication:
_serialQueue
initWithAssetDictionary:
downloadKey
flavor
sinfs
URLString
assetDictionary
_assetDictionary
T@"NSDictionary",R,C,N,V_assetDictionary
T@"NSString",R,N
T@"NSArray",R,N
isFieldBlacklistEnabled
notificationPayloadWithAccountPairs:
postDistributedNotificationWithAccountPairs:
initWithNotificationUserInfo:
initWithXPCEventStreamEvent:
deletedAccounts
_deletedAccounts
T@"NSArray",R,N,V_deletedAccounts
initWithDownloaderAccountIdentifier:purchaserAccountIdentifier:familyIdentifier:
downloaderAccountIdentifier
familyIdentifier
purchaserAccountIdentifier
_downloaderAccountIdentifier
_familyIdentifier
_purchaserAccountIdentifier
TQ,R,N,V_downloaderAccountIdentifier
TQ,R,N,V_familyIdentifier
TQ,R,N,V_purchaserAccountIdentifier
mediaDownloadKinds
softwareApplicationDownloadKinds
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
downloadManagerNetworkUsageDidChange:
downloadManager:downloadsDidChange:
_initWithDownloadManagerOptions:
initWithDownloadKinds:
initWithDownloadManagerOptions:
addDownload:
addObserver:
cancelDownload:
canCancelDownload:
downloadKinds
downloadManager
downloads
getDownloadsUsingBlock:
isUsingNetwork
reloadFromServer
removeObserver:
addPlaceholderDownloads:
downloadForItemIdentifier:
placeholderDownloads
preorders
removePlaceholderDownload:
startPreOrderDownload:
_messageObserversWithFunction:context:
_sendDownloadStatusChangedAtIndex:
_sendQueueChangedWithRemovals:
_sendQueueNetworkUsageChanged
_sendQueuePreOrdersChanged
_handleDownloadsDidChange:
_handleDownloadsRemoved:
shouldAutomaticallyFinishDownloads
setShouldAutomaticallyFinishDownloads:
_autoFinishDownloads
_downloadManager
_observers
T@"NSSet",R
T@"SSDownloadManager",R
TB,N,V_autoFinishDownloads
usingNetwork
TB,R,GisUsingNetwork
downloadQueue:downloadStatusChangedAtIndex:
downloadQueueNetworkUsageChanged:
downloadQueuePreOrdersChanged:
copyWithZone:
accountIdentifier
setAccountIdentifier:
attachments
setAttachments:
isAttributed
setAttributed:
authorIdentifier
setAuthorIdentifier:
authorType
setAuthorType:
contentItems
setContentItems:
externalServiceDestinations
setExternalServiceDestinations:
sourceApplicationIdentifier
setSourceApplicationIdentifier:
text
setText:
_accountIdentifier
_attachments
_attributed
_authorIdentifier
_authorType
_contentItems
_externalServiceDestinations
_sourceApplicationIdentifier
_text
T@"NSNumber",C,N,V_accountIdentifier
T@"NSArray",C,N,V_attachments
attributed
TB,N,GisAttributed,V_attributed
T@"NSString",C,N,V_authorIdentifier
T@"NSString",C,N,V_authorType
T@"NSArray",C,N,V_contentItems
T@"NSArray",C,N,V_externalServiceDestinations
T@"NSString",C,N,V_sourceApplicationIdentifier
T@"NSString",C,N,V_text
_resetLocalIVars
intValue
_existsMessage
_getExternalValuesMessage
_getValueMessage
_setExternalValuesMessage
_setValuesMessage
initWithPersistentIdentifier:
_initWithLocalPropertyValues:
addAsset:forType:
assetsForType:
backgroundNetworkingJobGroupName
bytesDownloaded
bytesTotal
downloadPhaseIdentifier
downloadPolicy
downloadSizeLimit
estimatedSecondsRemaining
failureError
isCancelable
isEligibleForRestore:
networkConstraints
pause
percentComplete
persistentIdentifier
prioritizeAboveDownload:completionBlock:
removeAsset:
resume
restart
setBackgroundNetworkingJobGroupName:
setDownloadHandler:completionBlock:
setDownloadPolicy:
setNetworkConstraints:
setValuesWithStoreDownloadMetadata:
_addCachedExternalValues:
_addCachedPropertyValues:
_newAssetWithURL:assetType:
initWithDownloadMetadata:
assets
downloadIdentifier
handleWithDownloadHandler:completionBlock:
isBackgroundNetworkingUserInitiated
isExternal
metadata
setAssets:
setBackgroundNetworkingUserInitiated:
setMetadata:
setStatus:
status
_localAssets
_resetStatus
_XPCConnection
_applyPhase:toStatus:
_errorWithData:
_errorWithXPCReply:
_metadata
_prioritizeAboveDownload
_status
T@"NSDictionary",R
T@"SSXPCConnection",R,G_XPCConnection
external
TB,R,N,GisExternal
T@,R,N
T@"NSArray",&,N
T@"SSDownloadMetadata",C,N
T@"SSDownloadStatus",&,N
Tq,R
cancelable
TB,R,GisCancelable
T@"SSDownloadPolicy",C
_stringForContentKind:
_targetApplicationWithContentKind:
_URLSchemeWithApplication:
categoryName
setCategoryName:
contentKind
setContentKind:
itemIdentifier
setItemIdentifier:
itemTitle
setItemTitle:
providerName
setProviderName:
searchTerm
setSearchTerm:
targetApplication
setTargetApplication:
_categoryName
_contentKind
_itemIdentifier
_itemTitle
_providerName
_searchTerm
_targetApplication
T@"NSString",C,N,V_categoryName
T@"NSNumber",C,N,V_itemIdentifier
T@"NSString",C,N,V_itemTitle
T@"NSString",C,N,V_providerName
T@"NSString",C,N,V_searchTerm
Tq,N,V_contentKind
Tq,N,V_targetApplication
T@"NSURL",R,N
boolValue
integerValue
artistName
betaExternalVersionIdentifier
bundleIdentifier
cloudIdentifier
collectionArtistName
downloadPermalink
numberOfCollectionsInCollectionGroup
numberOfItemsInCollection
collectionName
composerName
documentTargetIdentifier
durationInMilliseconds
enableExtensions
episodeIdentifier
episodeSortIdentifier
genre
indexInCollection
collectionIndexInCollectionGroup
kind
longDescription
longSeasonDescription
messagesArtworkURL
pageProgressionDirection
podcastEpisodeGUID
podcastFeedURL
podcastType
releaseDate
releaseYear
seasonNumber
seriesName
shortDescription
purchaseDate
publicationVersion
transactionIdentifier
title
cancelDownloadURL
thumbnailImageURL
redownloadActionParameters
thumbnailNewsstandBindingEdge
thumbnailNewsstandBindingType
viewStoreItemURL
variantIdentifier
setArtistName:
setBetaExternalVersionIdentifier:
setBundleIdentifier:
setDownloadPermalink:
setCancelDownloadURL:
setCloudIdentifier:
setCollectionArtistName:
setCollectionIndexInCollectionGroup:
setCollectionName:
setComposerName:
setDocumentTargetIdentifier:
setDownloadKey:
setDurationInMilliseconds:
setEnableExtensions:
setEpisodeIdentifier:
setEpisodeSortIdentifier:
setGenre:
setIndexInCollection:
setKind:
setLongDescription:
setLongSeasonDescription:
setMessagesArtworkURL:
setNumberOfCollectionsInCollectionGroup:
setNumberOfItemsInCollection:
setPageProgressionDirection:
setPodcastEpisodeGUID:
setPodcastFeedURL:
setPodcastType:
setPurchaseDate:
setReleaseDate:
setReleaseYear:
setSeasonNumber:
setSeriesName:
setShortDescription:
setThumbnailImageURL:
setTitle:
setTransactionIdentifier:
setPublicationVersion:
setRedownloadActionParameters:
setThumbnailNewsstandBindingEdge:
setThumbnailNewsstandBindingType:
setViewStoreItemURL:
setVariantIdentifier:
supportsSecureCoding
_addPlaybackTypeToHLSPlaylistURLString:
encodeWithCoder:
initWithCoder:
TB,R
initWithDictionary:
initWithItem:
initWithItem:offer:
initWithKind:
applicationIdentifier
artistIdentifier
artworkIsPrerendered
collectionIdentifier
composerIdentifier
contentRating
fullSizeImageURL
genreIdentifier
hasMessagesExtension
hlsPlaylistURL
is32BitOnly
isCompilation
isDeviceBasedVPP
isExplicitContent
hasHDR
isHighDefinition
isHLS
isPremium
isRental
isSample
isSharedResource
isTvTemplate
launchExtrasUrl
launchProhibited
networkName
primaryAssetDictionary
rentalID
sagaIdentifier
setArtistIdentifier:
setArtworkIsPrerendered:
setCollectionIdentifier:
setCompilation:
setDeviceBasedVPP:
setComposerIdentifier:
setContentRating:
setExplicitContent:
setFullSizeImageURL:
setGenreIdentifier:
setHasMessagesExtension:
setHighDefinition:
setHlsPlaylistURL:
setLaunchExtrasUrl:
setLaunchProhibited:
setNetworkName:
setRental:
setRentalID:
setSagaIdentifier:
setSample:
setMusicShow:
setSharedResource:
setSortArtistName:
setSortCollectionName:
setSortTitle:
setSubtitle:
setTvTemplate:
setVideoDetailsDictionary:
sortArtistName
sortCollectionName
sortTitle
subtitle
thumbnailImageCollection
videoDetailsDictionary
showComposer
isMusicShow
workName
movementName
movementNumber
movementCount
appReceiptData
copyright
copyWritableMetadata
dictionary
epubRightsData
fileExtension
keyStyle
isAutomaticDownload
isContentRestricted
isRedownloadDownload
isSoftwareKind
isVideosKind
MD5HashStrings
newDownloadProperties
numberOfBytesToHash
preferredAssetFlavor
preOrderIdentifier
primaryAssetURL
releaseDateString
requestPersistentID
requiredDeviceCapabilities
setAutomaticDownload:
setCopyright:
setDictionary:
setEpubRightsData:
setFileExtension:
setKeyStyle:
setMD5HashStrings:numberOfBytesToHash:
setPreferredAssetFlavor:
setPreOrderIdentifier:
setPrimaryAssetURL:
setRedownloadDownload:
setReleaseDateString:
setRequestPersistentID:
setRequiredDeviceCapabilities:
setShouldDownloadAutomatically:
setSinfs:
setTransitMapDataURL:
setValue:forMetadataKey:
setValuesFromDownload:
shouldDownloadAutomatically
transitMapDataURL
valueForFirstAvailableKey:
valueForMetadataKey:
_dateValueForValue:
_newImageCollectionWithURLString:
_newDateFormatter
_releaseDateValue
_setValue:forTopLevelKey:
_setValueCopy:forMetadataKey:
_stringValueForValue:
_thumbnailArtworkImage
_urlValueForValue:
_valueForFirstAvailableTopLevelKey:
_dictionary
_keyStyle
_lock
T@"NSData",R,&
automaticDownload
TB,GisAutomaticDownload
T@"NSURL",&
T@"NSString",&
deviceBasedVPP
TB,GisDeviceBasedVPP
T@"NSDictionary",&
T@"NSNumber",R
T@"NSData",&
T@"NSURL",C
TB,R,GhasHDR
TB,R,GisHLS
tvTemplate
TB,GisTvTemplate
T@"NSArray",R
T@"NSString",C
premium
TB,R,GisPremium
redownloadDownload
TB,GisRedownloadDownload
T@"NSNumber",C
T@,C
contentRestricted
TB,R,GisContentRestricted
T@"NSArray",&
softwareKind
TB,R,GisSoftwareKind
videosKind
TB,R,GisVideosKind
T@"NSDate",&
T@"NSNumber",&
T@"SSItemImageCollection",R
_descriptionWithSubscriptionStatusDescriptorBlock:
subscriptionStatus
setSubscriptionStatus:
supportsMusicCatalogPlayback
setSupportsMusicCatalogPlayback:
supportsAddToCloudMusicLibrary
setSupportsAddToCloudMusicLibrary:
canSubscribeToMusicCatalog
setCanSubscribeToMusicCatalog:
_supportsMusicCatalogPlayback
_supportsAddToCloudMusicLibrary
_canSubscribeToMusicCatalog
_subscriptionStatus
T@"SSVSubscriptionStatus",C,N,V_subscriptionStatus
TB,N,V_supportsMusicCatalogPlayback
TB,N,V_supportsAddToCloudMusicLibrary
TB,N,V_canSubscribeToMusicCatalog
_accountStoreChangedNotification
_deviceStoreFrontChangedNotification
sharedCoordinator
copyStatusFromUserDefaults
updateUserDefaultsWithStatus:
_existingSharedCoordinator
getStatusWithOptions:statusBlock:
lastKnownStatus
modifyLastKnownStatusUsingBlock:
reset
_invalidateLastKnownStatus
_copyStatusFromUserDefaults
_copyStatusDateFromUserDefaults
_copyValidStatusForStatus:
_externalChangeNotification
_fireStatusBlocksWithStatus:isFinal:error:
_handleRequestResponseWithStatus:isFinal:error:
_updateSubscriptionStatusAccessPolicyAllowingNotification:
_validateLastKnownStatus
_activeRequest
_callbackQueue
_didReset
_lastKnownStatus
_lastStatusDate
_notificationToken
_subscriptionStatusAccessPolicy
_statusBlocks
T@"SSVSubscriptionStatus",R,C
initWithQueueType:
startWithResponseBlock:
queueType
_queueType
Tq,R,N,V_queueType
longLongValue
doubleValue
certificateURL
keyServerURL
persistentContentKeyContext
resourceLoadingRequest
responseBlock
serverPlaybackContextData
setCertificateURL:
setPersistentContentKeyContext:
setKeyServerURL:
setITunesStoreRequest:
setResourceLoadingRequest:
setResponseBlock:
setShouldIncludeGUID:
setServerPlaybackContextData:
shouldIncludeGUID
isITunesStoreRequest
configureWithURLBagDictionary:
main
_contentKeyContextForStreamingKeyID:streamingKeyDictionaries:renewAfter:error:
_expirationTimeForStreamingKeyID:streamingKeyDictionaries:
_playbackStartTimeForStreamingKeyID:streamingKeyDictionaries:
_sendResponseBlockWithError:
_streamingKeyDictionaryForID:URI:serverPlaybackContextData:
_streamingRequestDictionaryWithStreamingKeyDictionaries:
_timeIntervalForStreamingKeyID:responseKey:streamingKeyDictionaries:
rentalId
setRentalId:
skippedRentalCheckout
setSkippedRentalCheckout:
leaseAction
setLeaseAction:
offline
setOffline:
expirationTime
playbackStartTime
serverPlaybackContextDataDelegate
setServerPlaybackContextDataDelegate:
_accessQueue
_certificateURL
_keyServerURL
_resourceLoadingRequest
_responseBlock
_iTunesStoreRequest
_shouldIncludeGUID
_URLBagDictionary
_persistentContentKeyContext
_serverPlaybackContextData
_skippedRentalCheckout
_offline
_rentalId
_leaseAction
_expirationTime
_playbackStartTime
_serverPlaybackContextDataDelegate
T@"NSData",R,C,N,V_persistentContentKeyContext
Tq,N,V_leaseAction
TB,V_offline
Td,R,N,V_expirationTime
Td,R,N,V_playbackStartTime
T@"<SSVSecureKeyDeliveryRequestOperationDelegate>",W,N,V_serverPlaybackContextDataDelegate
T@"NSData",&,N,V_serverPlaybackContextData
T@"NSURL",&,V_certificateURL
T@"NSURL",&,V_keyServerURL
T@"AVAssetResourceLoadingRequest",&,V_resourceLoadingRequest
T@"NSNumber",C,V_rentalId
TB,V_skippedRentalCheckout
ITunesStoreRequest
TB,GisITunesStoreRequest
TB,N
T@?,C,V_responseBlock
item
setItem:
updateDate
setUpdateDate:
_item
_updateDate
T@"SSVMediaContentTasteItem",C,N,V_item
T@"NSDate",C,N,V_updateDate
initWithItemIdentifier:
itemIdentifierValue
numberWithItemIdentifier:
isFailedTransient
isPausable
setOperationProgress:
setOperationType:
setPausable:
setPercentComplete:
activePhase
setContentRestricted:
error
setError:
isFailed
setFailed:
isPaused
setPaused:
_activePhase
_contentRestricted
_error
_failed
_paused
T@"NSError",&,N,V_error
TB,N,GisContentRestricted,V_contentRestricted
failed
TB,N,GisFailed,V_failed
pausable
TB,N,GisPausable
paused
TB,N,GisPaused,V_paused
failedTransient
TB,R,N,GisFailedTransient
T@"SSDownloadPhase",R,N,V_activePhase
Tf,R,N
initWithOperationProgress:
phaseType
progressUnits
progressChangeRate
progressValue
totalProgressValue
operationProgress
_operationProgress
T@"SSOperationProgress",R
Td,R
Tf,R
startWithCompletionBlock:
authenticationContext
setAuthenticationContext:
isRequestingOfflineSlot
setRequestingOfflineSlot:
_authenticationContext
_requestingOfflineSlot
requestingOfflineSlot
TB,N,GisRequestingOfflineSlot,V_requestingOfflineSlot
T@"SSAuthenticationContext",C,N,V_authenticationContext
assetWithURL:type:
initWithURLRequest:
initWithURLRequestProperties:
bytesUploaded
bytesUploadTotal
URLRequest
URLRequestProperties
_legacyAssetType
_localProperties
initWithURLRequest:type:
assetType
downloadFileName
downloadPath
finalizedPath
fileSize
_copyURLRequestProperties
_assetType
T@"NSString",R
TB,R,GisExternal
T@"SSURLRequestProperties",R
T@"NSURLRequest",R,&
_ss_URLByRemovingQueryParameter:
_ss_hasQueryParameter:
_ss_valueForQueryParameter:
_ss_copyDictionaryForQueryString:unescapedValues:
_ss_unescapedStringForString:
canPause
changeRate
currentValue
estimatedTimeRemaining
maxValue
normalizedCurrentValue
normalizedMaxValue
operationType
resetSnapshots
setCanPause:
setChangeRate:
setCurrentValue:
setEstimatedTimeRemaining:
setMaxValue:
setNormalizedCurrentValue:
setNormalizedMaxValue:
setUnits:
snapshot
units
_updateStatisticsFromSnapshots
_canPause
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
_normalizedCurrentValue
_normalizedMaxValue
_operationType
_snapshotTimes
_snapshotValues
_units
logDirectoryPath
setLogDirectoryPath:
logFileBaseName
setLogFileBaseName:
maxLogFileSize
setMaxLogFileSize:
maxNumberOfLogFiles
setMaxNumberOfLogFiles:
_directoryPath
_fileName
_maxNumberOfLogFiles
_maxSizeInBytes
T@"NSString",C,N,V_directoryPath
T@"NSString",C,N,V_fileName
TQ,N,V_maxSizeInBytes
Tq,N,V_maxNumberOfLogFiles
initWithDictionary:URLResponse:
itemForItemIdentifier:
items
_enumerateItemsUsingBlock:
responseDictionary
URLResponse
fallbackStreamingKeyServerURL
setFallbackStreamingKeyServerURL:
fallbackStreamingKeyCertificateURL
setFallbackStreamingKeyCertificateURL:
_responseDictionary
_urlResponse
_fallbackStreamingKeyServerURL
_fallbackStreamingKeyCertificateURL
T@"NSURL",C,N,V_fallbackStreamingKeyServerURL
T@"NSURL",C,N,V_fallbackStreamingKeyCertificateURL
T@"NSDictionary",R,C,N,V_responseDictionary
T@"NSHTTPURLResponse",R,N,V_urlResponse
downloadManifestRequest:didReceiveResponse:
request:didFailWithError:
setShouldHideUserPrompts:
shouldHideUserPrompts
startWithManifestResponseBlock:
manifestFormat
setManifestFormat:
_manifestFormat
_shouldHideUserPrompts
_urlRequest
delegate
T@"<SSDownloadManifestRequestDelegate>",D,N
T@"NSURLRequest",R
initWithConfiguration:
cachedResponseForRequest:
cachedConnectionResponseForRequestProperties:
cachedConnectionResponseForRequestProperties:cachedResponse:
configureRequest:
loadMemoryCacheFromDisk
removeAllCachedResponses
saveMemoryCacheToDisk
storeCachedResponse:forRequest:
storeConnectionResponse:forRequestProperties:
storeConnectionResponse:forRequestProperties:userInfo:
_accessSerialQueue
_cacheStorageSession
_configuration
_urlCache
sessionIdentifier
setSessionIdentifier:
supportsProcessSharing
setSupportsProcessSharing:
_supportsProcessSharing
_sessionIdentifier
T@"NSString",C,N,V_sessionIdentifier
TB,N,V_supportsProcessSharing
ssv_isExpiredResponse
TB,R,N
validDownloads
setValidDownloads:
_validDownloads
T@"NSArray",C
_allowMultipleCallbacks
_initSSRequest
cancel
disconnect
setShouldCancelAfterTaskExpiration:
shouldCancelAfterTaskExpiration
_beginBackgroundTask
_endBackgroundTask
_shutdownRequest
_startWithMessageID:messageBlock:
__beginBackgroundTask
_cancelBackgroundTaskExpirationTimer
__endBackgroundTask
_expireBackgroundTask
_shutdownRequestWithMessageID:
setDelegate:
usesTaskCompletionAssertions
setUsesTaskCompletionAssertions:
_backgroundTaskIdentifier
_cancelAfterTaskExpiration
_delegate
_requestConnection
_responseConnection
_backgroundTaskExpirationTimer
_callState
_completionBlock
_taskAssertion
_taskAssertionTaken
_usesTaskCompletionAssertions
T@"<SSRequestDelegate>",W,N,V_delegate
TB,N,V_usesTaskCompletionAssertions
initWithBlock:
addCompletionBlock:
block
setBlock:
callBlockQueue
setCallBlockQueue:
executeBlockQueue
setExecuteBlockQueue:
promise
setPromise:
promiseAccessQueue
_block
_callBlockQueue
_executeBlockQueue
_promise
_promiseAccessQueue
T@?,C,N,V_block
T@"NSObject<OS_dispatch_queue>",&,N,V_callBlockQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executeBlockQueue
T@"SSPromise",&,N,V_promise
T@"NSObject<OS_dispatch_queue>",R,N,V_promiseAccessQueue
appAdamId
setAppAdamId:
appVersion
setAppVersion:
chargeCountryCode
setChargeCountryCode:
chargeCurrencyCode
setChargeCurrencyCode:
chargeStoreFrontIdentifier
setChargeStoreFrontIdentifier:
expireDate
setExpireDate:
familyId
setFamilyId:
inAppAdamId
setInAppAdamId:
inAppVersion
setInAppVersion:
isNewsAppPurchase
setNewsAppPurchase:
offerIdentifier
setOfferIdentifier:
originalPurchaseDownloadId
setOriginalPurchaseDownloadId:
purchasabilityType
setPurchasabilityType:
purchaseDownloadId
setPurchaseDownloadId:
quantity
setQuantity:
vendorIdentifier
setVendorIdentifier:
_newsAppPurchase
_appAdamId
_appVersion
_chargeCountryCode
_chargeCurrencyCode
_chargeStoreFrontIdentifier
_expireDate
_familyId
_inAppAdamId
_inAppVersion
_offerIdentifier
_originalPurchaseDownloadId
_purchasabilityType
_purchaseDownloadId
_quantity
_vendorIdentifier
T@"NSNumber",C,N,V_appAdamId
T@"NSNumber",C,N,V_appVersion
T@"NSString",C,N,V_chargeCountryCode
T@"NSString",C,N,V_chargeCurrencyCode
T@"NSNumber",C,N,V_chargeStoreFrontIdentifier
T@"NSDate",C,N,V_expireDate
T@"NSNumber",C,N,V_familyId
T@"NSNumber",C,N,V_inAppAdamId
T@"NSString",C,N,V_inAppVersion
newsAppPurchase
TB,N,GisNewsAppPurchase,V_newsAppPurchase
T@"NSString",C,N,V_offerIdentifier
T@"NSNumber",C,N,V_originalPurchaseDownloadId
T@"NSNumber",C,N,V_purchasabilityType
T@"NSNumber",C,N,V_purchaseDownloadId
T@"NSNumber",C,N,V_quantity
T@"NSString",C,N,V_vendorIdentifier
defaultMediaTasteController
contentTasteTypeForPlaylistGlobalID:
contentTasteTypeForStoreAdamID:
setContentTasteType:forPlaylistGlobalID:withCompletionHandler:
setContentTasteType:forStoreAdamID:withContentType:completionHandler:
_handleContentTasteItemsUpdateResponse:allowNotifications:
_refreshContentTasteItems
_contentTasteForItemUpdate:finishedWithError:
_retryOperationForItemUpdates:finishedWithError:
_isRetryableError:
_scheduleContentTasteUpdateOperationForFailedItems
_sendUpdateWithItemUpdates:completionHandler:
_calloutSerialQueue
_currentResponseRevisionID
_lastNotificationReceivedResponseRevisionID
_havePendingRetryOperation
_itemsDidChangeNotifyToken
_exponentialBackOffSeconds
_pendingMutateRequestCount
_playlistGlobalIDToContentTasteItem
_playlistGlobalIDToPendingContentTasteItem
_contentTasteItemsToRetry
_storeAdamIDToContentTasteItem
_storeAdamIDToPendingContentTasteItem
consumer
objectForData:response:error:
hasBuildVersion
hasDeviceGUID
hasDeviceName
hasTimeZoneName
systemReleaseType
setSystemReleaseType:
setHasSystemReleaseType:
hasSystemReleaseType
systemReleaseTypeAsString:
StringAsSystemReleaseType:
setSBEnabled:
setHasSBEnabled:
hasSBEnabled
setStoreAccountID:
setHasStoreAccountID:
hasStoreAccountID
hasStoreFrontID
setPrivateListeningEnabled:
setHasPrivateListeningEnabled:
hasPrivateListeningEnabled
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
buildVersion
setBuildVersion:
deviceGUID
setDeviceGUID:
deviceName
setDeviceName:
timeZoneName
setTimeZoneName:
sBEnabled
storeAccountID
storeFrontID
setStoreFrontID:
privateListeningEnabled
_storeAccountID
_buildVersion
_deviceGUID
_deviceName
_storeFrontID
_systemReleaseType
_timeZoneName
_privateListeningEnabled
_sBEnabled
_has
T@"NSString",&,N,V_buildVersion
T@"NSString",&,N,V_deviceGUID
T@"NSString",&,N,V_deviceName
T@"NSString",&,N,V_timeZoneName
Ti,N,V_systemReleaseType
TB,N,V_sBEnabled
TQ,N,V_storeAccountID
T@"NSString",&,N,V_storeFrontID
TB,N,V_privateListeningEnabled
initWithAppAdamId:adNetworkId:campaignId:impressionId:timestamp:attributionSignature:
initWithAppAdamId:adNetworkId:campaignId:impressionId:timestamp:attributionSignature:originatingBundleId:
initWithAppAdamId:adNetworkId:campaignId:impressionId:timestamp:attributionSignature:originatingBundleId:overrideCampaignLimit:
adNetworkId
campaignId
impressionId
timestamp
attributionSignature
originatingBundleId
overrideCampaignLimit
_overrideCampaignLimit
_adNetworkId
_campaignId
_impressionId
_timestamp
_attributionSignature
_originatingBundleId
T@"NSNumber",R,N,V_appAdamId
T@"NSString",R,N,V_adNetworkId
T@"NSNumber",R,N,V_campaignId
T@"NSString",R,N,V_impressionId
T@"NSNumber",R,N,V_timestamp
T@"NSString",R,N,V_attributionSignature
T@"NSString",R,N,V_originatingBundleId
TB,R,N,V_overrideCampaignLimit
purchaseRequest:purchaseDidFail:withError:
purchaseRequest:purchaseDidSucceed:
purchaseRequest:purchaseDidSucceedWithResponse:
purchaseManager:didFinishPurchasesWithResponses:
initWithPurchases:
purchases
startWithPurchaseBlock:completionBlock:
startWithPurchaseResponseBlock:completionBlock:
_addPurchasesToManager
_finishPurchasesWithResponses:
_purchaseForUniqueIdentifier:
isBackgroundRequest
setBackgroundRequest:
createsDownloads
setCreatesDownloads:
needsAuthentication
setNeedsAuthentication:
isPlaybackRequest
setPlaybackRequest:
shouldValidatePurchases
setShouldValidatePurchases:
createsJobs
setCreatesJobs:
_isBackgroundRequest
_purchases
_shouldValidatePurchases
_createsDownloads
_openPurchaseIdentifiers
_purchaseBlock
_purchaseResponseBlock
_purchaseManager
_needsAuthentication
_playbackRequest
_createsJobs
TB,N,V_createsDownloads
TB,N,V_createsJobs
playbackRequest
TB,N,GisPlaybackRequest,V_playbackRequest
TB,N,V_shouldValidatePurchases
T@"<SSPurchaseRequestDelegate>",D,N
backgroundRequest
TB,N,GisBackgroundRequest,V_isBackgroundRequest
TB,N,V_needsAuthentication
initWithURLBag:
initWithURLBagDictionary:
initWithSSBag:
cachedValueFromBag:key:withType:updateCache:
AMDDomains
mescalCertificateURL
mescalSetupURL
mescalSignaturePolicyForRequestURL:
mescalSignaturePolicyForResponseURL:
mescalSignedActions
mescalSignedRequests
mescalSignedResponses
pastisCertificateURL
pastisKeyServerURL
shouldSendAnonymousMachineIdentifierForURL:
storeFrontSuffix
URLForURLBagKey:
valueForURLBagKey:
_valueForKey:withClass:
mescalPrimingURL
_cachedBagValues
_subscriptionSignedActions
_subscriptionSignaturePolicy
_mescalPrimingURL
T@"NSArray",R,C,N
T@"NSURL",R,C,N
T@"NSURL",R,C,N,V_mescalPrimingURL
T@"NSDictionary",R,C,N
T@"NSString",R,C,N
_CFURLRequest
metricsLoadURLSessionDuration
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
performDefaultHandlingForAuthenticationChallenge:
_stopIfCancelled
_keepAliveTimer:
currentAcceptLanguage
URLSession:task:decodedDataForResponseData:
URLSession:task:didCompleteWithEvent:error:
URLSession:task:didFinishCreatingHTTPArchive:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
isURLBagRequest
rawResponseData
requestProperties
shouldDisableCellular
shouldRequireCellular
shouldSetCookies
sourceAppAuditTokenData
sourceAppBundleID
URLCache
URLCacheID
T@"NSNumber",R,N
T@"SSBag",R,N
T@"NSData",R,N
T@"SSURLRequestProperties",R,N
T@"NSURLCache",R,N
_initSSVLoadURLOperation
initWithData:fromOperation:
initWithURL:
cachedURLResponse
configureWithURLBag:
dataConsumer
dispatchAsync:
dispatchSync:
expiredOutputBlock
machineDataStyle
metricsPageEvent
outputBlock
prepareRequestBlock
recordsMetrics
referrerApplicationName
referrerURLString
SAPSession
SAPSignaturePolicy
setDataConsumer:
setExpiredOutputBlock:
setMachineDataStyle:
setOutputBlock:
setPrepareRequestBlock:
setRecordsMetrics:
setReferrerApplicationName:
setReferrerURLString:
setSAPSession:
setSAPSignaturePolicy:
setStoreFrontSuffix:
_configureWithURLBagInterpreter:
_addMachineDataHeadersToRequest:withAccountIdentifier:
_addSAPSignatureToRequest:
_applyResponseToMetrics:
_createAuthKitSession
_dataForCachedResponse:
_finishWithData:
_finishWithOutput:error:
_loadURLBagInterpreter
_newURLRequestWithRedirectURL:
_outputForData:error:
_releaseOutputBlocks
_runOnce
_runRunLoopUntilStopped
_shouldRetryAfterMachineDataRequest:
_stopRunLoop
setBag:
shouldSuppressCookies
setShouldSuppressCookies:
shouldSuppressUserInfo
setShouldSuppressUserInfo:
mainDocumentURL
setMainDocumentURL:
attribution
setAttribution:
_authKitSession
_dataBuffer
_dataConsumer
_inputData
_machineDataRetryCount
_machineDataStyle
_metricsPageEvent
_outputBlock
_prepareRequestBlock
_protocolRedirectURLs
_recordsMetrics
_redirectURL
_referrerApplicationName
_referrerURLString
_response
_sapSession
_sapSignaturePolicy
_shouldRetry
_storeFrontSuffix
_stopped
_urlBag
_urlBagInterpreter
_requestProperties
_shouldSuppressCookies
_shouldSuppressUserInfo
_bag
_mainDocumentURL
_attribution
T@"SSVFairPlaySAPSession",&
T@"SSVSAPSignaturePolicy",C
T@"<SSVLoadURLOperationDelegate>",W,N,V_delegate
T@"NSURL",R
T@"NSCachedURLResponse",R
T@"SSVURLDataConsumer",&
T@"SSMetricsPageEvent",R
T@"SSBag",&,N,V_bag
T@"NSHTTPURLResponse",R
T@?,C
TB,V_shouldSuppressCookies
TB,V_shouldSuppressUserInfo
T@"NSURL",C,V_mainDocumentURL
TQ,V_attribution
observerWithResultBlock:
observerWithResultBlock:completionBlock:failureBlock:
_sendCompletionUsingQueue:
_sendFailure:usingQueue:
_sendResult:usingQueue:
completionBlock
setCompletionBlock:
failureBlock
setFailureBlock:
resultBlock
setResultBlock:
_failureBlock
_resultBlock
T@?,C,N,V_completionBlock
T@?,C,N,V_failureBlock
T@?,C,N,V_resultBlock
purchaseWithBuyParameters:
_initSSPurchase
affiliateIdentifier
buyParameters
createsInstallJobs
displaysOnLockScreen
downloadProperties
filteredAssetTypes
ignoresForcedPasswordRestriction
isBackgroundPurchase
ownerAccountDSID
placeholderDownloadIdentifier
presentingSceneIdentifier
setAffiliateIdentifier:
setBackgroundPurchase:
setBuyParameters:
setCreatesInstallJobs:
setDisplaysOnLockScreen:
setDownloadProperties:
setFilteredAssetTypes:
setIgnoresForcedPasswordRestriction:
setOwnerAccountDSID:
setPresentingSceneIdentifier:
setRequestProperties:
setSkipSoftwareAccountPreflight:
setValue:forDownloadProperty:
valueForDownloadProperty:
initWithDatabaseEncoding:
batchIdentifier
databaseEncoding
buyParametersValueForKey:
enabledServiceType
expectedDownloadFileSize
gratisIdentifiers
itemOffer
isGratisSoftwareClaim
isPreauthenticated
setBatchIdentifier:
setDefaultUserAgent:
setEnabledServiceType:
setExpectedDownloadFileSize:
setGratisIdentifiers:
setPlaceholderDownloadIdentifier:
setPreauthenticated:
setTidHeaders:
setUniqueIdentifier:
setUsesLocalRedownloadParametersIfPossible:
tidHeaders
uniqueIdentifier
usesLocalRedownloadParametersIfPossible
_addEntriesToDatabaseEncoding:
_buyParametersValueForKey:fromBuyParams:
_createsDownloadsWithOverride
_createsInstallJobsWithOverride
_createsJobsWithOverride
_setValuesUsingDatabaseEncoding:
downloadMetadata
setDownloadMetadata:
skipSoftwareAccountPreflight
_affiliateIdentifier
_backgroundPurchase
_batchIdentifier
_buyParameters
_buyParamsCreatesDownloads
_buyParamsCreatesInstallJobs
_buyParamsCreatesJobs
_createsInstallJobs
_displaysOnLockScreen
_downloadPolicy
_downloadProperties
_enabledServiceType
_expectedDownloadFileSize
_filteredAssetTypes
_gratisIdentifiers
_ignoresForcedPasswordRestriction
_itemOffer
_networkConstraints
_ownerAccountDSID
_placeholderDownloadIdentifier
_preauthenticated
_requiredDeviceCapabilities
_skipSoftwareAccountPreflight
_tidHeaders
_uniqueIdentifier
_usesLocalRedownloadParametersIfPossible
_presentingSceneIdentifier
gratisSoftwareClaim
TB,R,GisGratisSoftwareClaim
TB,GisPlaybackRequest
T@"NSDictionary",C
preauthenticated
TB,GisPreauthenticated
T@"NSData",R
backgroundPurchase
TB,GisBackgroundPurchase
T@"SSURLRequestProperties",C
T@"SSNetworkConstraints",C
TB,N,V_skipSoftwareAccountPreflight
allowedToneStyles
assigneeIdentifier
assigneeContactIdentifier
assigneeToneStyle
setAllowedToneStyles:
setAssigneeIdentifier:
setAssigneeContactIdentifier:
setAssigneeToneStyle:
setShouldMakeDefaultRingtone:
setShouldMakeDefaultTextTone:
shouldMakeDefaultRingtone
shouldMakeDefaultTextTone
_allowedToneStyles
_assigneeIdentifier
_assigneeContactIdentifier
_assigneeToneStyle
_shouldMakeDefaultRingtone
_shouldMakeDefaultTextTone
newPurchaseWithDatabaseEncoding:
newPurchaseWithXPCEncoding:
initWithDownloadTransactionIdentifier:accountID:
isDownloadTransactionID
accountID
_refreshDownloadWithTransactionID:accountID:bagKey:error:
downloadTransactionID
_downloadTrasactionID
_accountID
_downloadTransactionID
T@"NSString",R,V_downloadTransactionID
urlConnectionRequest:didReceiveResponse:
initWithRequestProperties:
destinationFileURL
setDestinationFileURL:
setShouldMescalSign:
shouldMescalSign
startWithConnectionResponseBlock:
runsInProcess
sendsResponseForHTTPFailures
setRunsInProcess:
setSendsResponseForHTTPFailures:
_canRunInProcess
_destinationFileURL
_runsInProcess
_sendsResponseForHTTPFailures
_shouldMescalSign
T@"SSAuthenticationContext",C
T@"<SSURLConnectionRequestDelegate>",D,N
isStoreServicesURL
itemLookupRequest:didFindItems:
setValue:forParameter:
startWithItemLookupBlock:
valueForParameter:
copyQueryStringParameters
parameters
_copyItemsFromResponse:expirationDate:
_convertedValueForValue:
_errorForStatusCode:
_parameters
T@"NSDictionary",R,C
T@"<SSItemLookupRequestDelegate>",D,N
_accountStoreDidChangeNotification:
sharedAccountStore
primaryAppleAccount
_accountStore
_primaryAppleAccount
T@"ACAccount",R
_setOfferItem:
floatValue
allItemOffers
averageUserRating
defaultItemOffer
imageCollection
isGameCenterEnabled
isRestricted
itemKind
itemOfferForIdentifier:
ITunesStoreIdentifier
loadTellAFriendMessageWithCompletionHandler:
numberOfPrintedPages
numberOfUserRatings
relatedItemsForRelationType:
tellAFriendBody
tellAFriendBodyMIMEType
tellAFriendBodyURL
tellAFriendSubject
thumbnailImages
tweetInitialText
tweetURL
valueForProperty:
viewItemURL
playableMedia
priceDisplay
initWithItemDictionary:
bundleVersion
genreName
mediaKind
rawItemDictionary
sendGiftURL
_setExpirationDate:
softwareType
videoDetails
viewReviewsURL
_finishTellAFriendLoadWithError:
_offers
_tellAFriendDictionary
expirationDate
_expirationDate
_properties
_tellAFriendBody
_tellAFriendBodyMIMEType
_tellAFriendHandlers
_tellAFriendRequest
_tellAFriendSubject
T@"SSItemOffer",R,N
T@"NSDate",R,N,V_expirationDate
restricted
TB,R,N,GisRestricted
highDefinition
TB,R,N,GisHighDefinition
gameCenterEnabled
TB,R,N,GisGameCenterEnabled
Tq,R,N
T@"SSItemImageCollection",R,N
initWithStoreOfferDictionary:
fullDurationInMilliseconds
mediaFileSize
setMediaKind:
isProtectedMedia
_duration
_fullDuration
_mediaFileSize
_mediaKind
_protected
_url
Tq,R,N,V_fullDuration
Tq,R,N,V_mediaFileSize
T@"NSString",C,N,V_mediaKind
Tq,R,N,V_duration
protectedMedia
TB,R,N,GisProtectedMedia,V_protected
T@"NSURL",R,N,V_url
familyContentRemovalRequestWithAppIdentifier:accountPairs:
newsstandFinishRequestWithAppIdentifier:issueIdentifiers:
appIdentifier
setAppIdentifier:
launchOptions
setLaunchOptions:
processAssertionIdentifier
setProcessAssertionIdentifier:
processAssertionInterval
setProcessAssertionInterval:
processAssertionReason
setProcessAssertionReason:
shouldLaunchApp
setShouldLaunchApp:
_appIdentifier
_launchOptions
_processAssertionIdentifier
_processAssertionInterval
_processAssertionReason
_shouldLaunchApp
T@"NSString",C,N,V_appIdentifier
T@"NSDictionary",C,N,V_launchOptions
TB,N,V_shouldLaunchApp
T@"NSString",C,N,V_processAssertionIdentifier
Td,N,V_processAssertionInterval
T@"NSString",C,N,V_processAssertionReason
initWithAccountIdentifier:rentalKeyIdentifier:
initWithDownloadIdentifier:
initWithSinfs:
rentalKeyIdentifier
shouldValidateRentalInfo
setShouldValidateRentalInfo:
shouldCheckoutWithPlay
setCheckoutWithPlay:
checkoutType
setCheckoutType:
_downloadIdentifier
_rentalKeyIdentifier
_sinfs
_shouldValidateRentalInfo
_checkoutWithPlay
_checkoutType
TB,N,V_shouldValidateRentalInfo
checkoutWithPlay
TB,N,GshouldCheckoutWithPlay,V_checkoutWithPlay
TQ,V_checkoutType
accountKindFromAuthenticationResponseDictionary:
accountNameFromAuthenticationResponseDictionary:
altDSIDFromAuthenticationResponseDictionary:
backingAccountIsDemoAccount:
backingAccountIsLocalAccount:
creditsStringFromAuthenticationResponseDictionary:
DSIDFromAuthenticationResponseDictionary:
firstNameFromAuthenticationResponseDictionary:
isManagedAppleIDFromAuthenticationResponseDictionary:
isNewCustomerFromAuthenticationResponseDictionary:
lastNameFromAuthenticationResponseDictionary:
secureTokenForIdentifier:
storeFrontIdentifierFromURLResponse:
serverValueForAccountPasswordSettingValue:
_countryCodeFromStorefrontIdentifier:
_displayedServerPromptKeyWithIdentifier:
_lastAttemptForServerPromptKeyWithIdentifier:
_valueForFirstAvailableKeyPath:inDictionary:
initWithBackingAccount:
accountKind
accountName
accountScope
altDSID
automaticDownloadKinds
availableServiceTypes
backingAccount
creditsString
demoAccountRawPassword
didFallbackToPassword
displayedServerPromptWithIdentifier:
isDirty
enabledServiceTypes
firstName
isAuthenticated
isSocialEnabled
lastAttemptDateForServerPromptWithIdentifier:
lastName
localizedName
storeFrontIdentifier
accountSource
freeDownloadsPasswordSetting
isActive
isActiveLockerAccount
isDemoAccount
isDuplicate:
isManagedAppleID
isNewCustomer
ITunesPassSerialNumber
paidPurchasesPasswordSetting
passwordEquivalentToken
rawPassword
secureToken
setPasswordEquivalentToken:
setRawPassword:
setAccountKind:
setAccountName:
setAccountScope:
setAccountSource:
setActive:
setActiveLockerAccount:
setAltDSID:
setAuthenticated:
setAutomaticDownloadKinds:
setAvailableServiceTypes:
setCreditsString:
setDemoAccountRawPassword:
setDidFallbackToPassword:
setDisplayedServerPrompt:withIdentifier:
setEnabledServiceTypes:
setFirstName:
setFreeDownloadsPasswordSetting:
setITunesPassSerialNumber:
setLastAttemptDate:forServerPromptWithIdentifier:
setLastName:
setManagedAppleID:
setNewCustomer:
setPaidPurchasesPasswordSetting:
setSecureToken:
setSocialEnabled:
setStoreFrontIdentifier:
setStoreFrontIdentifier:forRequest:response:
acceptTermsAndConditions:withCompletionBlock:
eligibilityForService:
getDownloadKindsEligibleForContentRestoreWithBlock:
getEligibilityForService:completionBlock:
getPurchasedItemsForItems:completionBlock:
getTermsAndConditionsWithBlock:
accountPropertyForKey:
addAvailableServiceTypes:
addEnabledServiceTypes:
getITunesMatchStatusWithCompletionBlock:
getKeybagSyncDataWithType:completionHandler:
hasBrokenDSID
hashedDescription
isLocalAccount
privacyAcknowledgement
removeAvailableServiceTypes:
removeEnabledServiceTypes:
resetTransientData
setEligibility:forServiceType:
setPrivacyAcknowledgement:
copyLockdownRepresentation
mergeValuesFromAccount:
popBiometricToken
setBiometricToken:
setLockdownDictionary:
updateAccountPasswordSettings:
updateAccountPasswordSettingsWithRequestProperties:completionBlock:
_addAccountPropertyBitmask:forKey:
_backingAccount
_removeAccountPropertyBitmask:forKey:
_sendMessage:withReply:
_setAccountProperty:forKey:
_setBackingAccount:
backingAccountAccessQueue
setBackingAccountAccessQueue:
_bioToken
_didFallbackToPassword
_backingAccountAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_backingAccountAccessQueue
T@"ACAccount",R,N
demoAccount
TB,R,N,GisDemoAccount
dirty
TB,R,N,GisDirty
localAccount
TB,R,N,GisLocalAccount
active
TB,GisActive
activeLockerAccount
TB,GisActiveLockerAccount
newCustomer
TB,GisNewCustomer
managedAppleID
TB,GisManagedAppleID
authenticated
TB,GisAuthenticated
socialEnabled
TB,GisSocialEnabled
referrer
setReferrer:
setURLString:
_referrer
_URLString
T@"NSString",&,N,V_referrer
T@"NSString",&,N,V_URLString
certificateURLBagKey
setCertificateURLBagKey:
_resolveCertificateURLReturningError:
_bagLoadSemaphore
_certificateURLBagKey
authenticateRequest:didReceiveResponse:
localAuthenticationAvailable
_accountToAuthenticateWithAuthenticationContext:
_isAuthkitEntitled
initWithAccount:
initWithAuthenticationContext:
startWithAuthenticateResponseBlock:
logUUID
_handleDialogFromError:
_performRemoteAuthenticationWithCompletion:
_responseTypeForError:
_shouldRunAuthenticationForAccount:
_verifyCredentialsOptionsFromUpdateAccountResponse:skipAuthKit:
logConfig
setLogConfig:
_parentViewController
set_parentViewController:
_logConfig
__parentViewController
T@"SSLogConfig",&,N,V_logConfig
T@"UIViewController",W,N,V__parentViewController
T@"<SSAuthenticateRequestDelegate>",D,N
T@"SSAuthenticationContext",R
initWithBundleID:accountIdentifier:claimStyle:
accountDSID
claimStyle
bundleID
_claimStyle
_bundleID
_accountDSID
T@"NSString",R,N,V_bundleID
T@"NSNumber",R,N,V_accountDSID
Tq,R,N,V_claimStyle
contextForSignIn
mutableCopyWithZone:
initialPassword
_initSSAuthenticationContext
initWithAccountIdentifier:
accountStoreOptions
URLBagContext
isAccountNameEditable
_allowCreateAccount
_copyIvarsToCopy:withZone:
allowsBioAuthentication
allowsBootstrapCellularData
allowsRetry
allowsSilentAuthentication
cancelButtonLabel
canCreateNewAccount
canSetActiveAccount
clientIdentifierHeader
forceDaemonAuthentication
HTTPHeaders
password
okButtonLabel
persistsAcrossDeviceLock
persistsPasswordFallback
preferredITunesStoreClient
promptStyle
promptTitle
reasonDescription
requestParameters
requiredUniqueIdentifier
shouldCreateNewSession
shouldFollowAccountButtons
shouldIgnoreAccountConversion
shouldIgnoreProtocol
shouldPersonalizeResponseActions
shouldSuppressDialogs
signupRequestParameters
tokenType
touchIDContinueToken
userAgentComponents
_accountName
_accountNameEditable
_accountScope
_allowsBioAuthentication
_allowsBootstrapCellularData
_allowsRetry
_allowsSilentAuthentication
_altDSID
_cancelButtonLabel
_canCreateNewAccount
_canSetActiveAccount
_clientIdentifierHeader
_forceDaemonAuthentication
_httpHeaders
_logUUID
_password
_passwordEquivalentToken
_okButtonLabel
_persistsAcrossDeviceLock
_persistsPasswordFallback
_preferredITunesStoreClient
_promptTitle
_promptStyle
_reasonDescription
_requestParameters
_requiredUniqueIdentifier
_shouldCreateNewSession
_shouldFollowAccountButtons
_shouldIgnoreAccountConversion
_shouldIgnoreProtocol
_shouldPersonalizeResponseActions
_shouldSuppressDialogs
_signupRequestParameters
_tokenType
_touchIDContinueToken
_userAgentComponents
_demoAccount
TB,R,N,V_allowsBioAuthentication
TB,R,N,V_allowsBootstrapCellularData
T@"NSString",R,C,N,V_cancelButtonLabel
T@"NSString",R,C,N,V_clientIdentifierHeader
TB,R,N,V_displaysOnLockScreen
TB,R,N,GisDemoAccount,V_demoAccount
T@"NSString",R,C,N,V_logUUID
T@"NSString",R,C,N,V_okButtonLabel
TB,R,N,V_persistsAcrossDeviceLock
T@"NSString",R,C,N,V_promptTitle
T@"NSString",R,C,N,V_reasonDescription
TB,R,N,V_shouldIgnoreProtocol
Tq,R,N,V_tokenType
T@"SSURLBagContext",R,N
TB,R,N,V_forceDaemonAuthentication
TB,R,N,V_shouldPersonalizeResponseActions
T@"NSString",R,C,N,V_accountName
Tq,R,V_accountScope
accountNameEditable
TB,R,N,GisAccountNameEditable,V_accountNameEditable
TB,R,N,V_allowsRetry
TB,R,N,V_allowsSilentAuthentication
T@"NSString",R,C,N,V_altDSID
TB,R,N,V_canCreateNewAccount
TB,R,N,V_canSetActiveAccount
T@"NSDictionary",R,C,N,V_httpHeaders
T@"NSString",R,C,N,V_password
T@"NSString",R,C,N,V_passwordEquivalentToken
TB,R,N,V_persistsPasswordFallback
T@"NSString",R,C,N,V_preferredITunesStoreClient
Tq,R,N,V_promptStyle
T@"NSDictionary",R,C,N,V_requestParameters
T@"NSNumber",R,&,N,V_requiredUniqueIdentifier
TB,R,N,V_shouldCreateNewSession
TB,R,N,V_shouldFollowAccountButtons
TB,R,N,V_shouldIgnoreAccountConversion
TB,R,N,V_shouldSuppressDialogs
T@"NSDictionary",R,C,N,V_signupRequestParameters
T@"NSString",R,C,N,V_touchIDContinueToken
T@"NSArray",R,C,N,V_userAgentComponents
setAccountNameEditable:
setAllowsRetry:
setAllowsSilentAuthentication:
setCanCreateNewAccount:
setCanSetActiveAccount:
setInitialPassword:
setLogUUID:
setPassword:
setPreferredITunesStoreClient:
setPromptStyle:
setPersistsPasswordFallback:
setRequestParameters:
setRequiredUniqueIdentifier:
setShouldCreateNewSession:
setShouldFollowAccountButtons:
setShouldIgnoreAccountConversion:
setShouldIgnoreProtocol:
setShouldPersonalizeResponseActions:
setShouldSuppressDialogs:
setSignupRequestParameters:
setTouchIDContinueToken:
setUserAgentComponents:
setValue:forHTTPHeaderField:
setAllowsBioAuthentication:
setAllowsBootstrapCellularData:
setCancelButtonLabel:
setClientIdentifierHeader:
setForceDaemonAuthentication:
setHTTPHeaders:
setOkButtonLabel:
setPersistsAcrossDeviceLock:
setPromptTitle:
setReasonDescription:
setTokenType:
setValuesWithAccount:
setDemoAccount:
TB,D,N
T@"NSString",C,D,N
TB,D,N,GisDemoAccount
Tq,D,N
Tq,D
TB,D,N,GisAccountNameEditable
T@"NSDictionary",C,D,N
T@"NSNumber",&,D,N
T@"NSArray",C,D,N
initWithURLString:
isServerSupplied
localAssetName
tint
_ratingTypeForType:
ratingType
urlString
value
_image
_ratingType
_urlString
_value
Tq,R,V_ratingType
T@"NSString",R,C,V_urlString
T@"NSString",R,C,V_value
launchApplicationWithIdentifier:options:error:
wakeAppUsingRequest:
_applicationStateMonitor
_dispatchQueueNotifications
_dispatchQueueSpringBoard
_getApplicationInfoForIdentifier:key:
_getProcessID:forApplicationIdentifier:
_setApplicationState:forClientID:
_stateCache
getReportingFrequencyOverrideWithCompletionBlock:
setReportingFrequencyOverride:
_reportingFrequencyOverride
_initSSMetricsEventConfiguration
initWithGlobalConfiguration:
initWithStorePlatformData:
blacklistedEventFields
cookieFields
eventFields
compoundStringWithElements:
fieldsMap
isDisabled
isEventTypeBlacklisted:
isSendDisabled
pingURLs
reportingFrequency
reportingURLString
setChildConfiguration:
tokenStringWithElements:
valueForConfigurationKey:
_decorateITMLEvents
_configBooleanForKey:defaultValue:
_setReportingFrequencyOverride:
childConfiguration
disableEventDecoration
setDisableEventDecoration:
_blacklistedEvents
_childConfiguration
_config
_disabled
_disableEventDecoration
_cookieFieldsUnion
_eventFieldsUnion
_fields
_internalSettingsToken
_sendDisabled
T@"NSDictionary",R,N
T@"SSMetricsConfiguration",&,N,V_childConfiguration
TB,N,V_disableEventDecoration
initWithResult:error:
_result
T@"NSError",R,C,N,V_error
T@,R,N,V_result
identifier
setIdentifier:
type
setType:
_identifier
_type
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_type
contentTasteItems
setContentTasteItems:
setExpirationDate:
responseRevisionID
setResponseRevisionID:
isCachedResponse
setCachedResponse:
_cachedResponse
_contentTasteItems
_responseRevisionID
T@"NSArray",C,N,V_contentTasteItems
T@"NSDate",C,N,V_expirationDate
TQ,N,V_responseRevisionID
cachedResponse
TB,N,GisCachedResponse,V_cachedResponse
defaultStore
tokenExpirationInterval
URLResponseAllowsSilentAuthentication:
areAccountStoreChangedNotificationsDisabled
existingDefaultStore
resetExpiration
resetExpirationForTokenType:
isExpired
isExpiredForTokenType:
migrateToAccountsFramework
setAuthenticationStartedDate:
unitTestModeEnabled
setUnitTestModeEnabled:
_addAccountToUnitTestStore:
_removeAccountFromUnitTestStore:
_unitTestAccountsAccessQueue
_backingAccountForAccount:
_copyKVSDatabasePath
_copyKVSDatabaseWithError:
_currentProcessLinksUIKit
_disableAccountStoreChangedNotifications
_enableAccountStoreChangedNotifications
_excludeCopyKVSDatabasePathFromBackups
_hashedDescriptionFromAccountDictionary:
_isBuddyRunning
_postAccountsChangedInternalDarwinNotification
_postAccountsChangedDarwinNotification
_refreshAccount:
_setActiveAccountIsManagedAppleIDPreference:
_accountDictionaryRepresentsActiveAccount:inKeyValueStore:
_accountDictionaryRepresentsActiveLockerAccount:inKeyValueStore:
_cleanupActiveAccountsAfterMigrationWithActiveDSID:activeLockerDSID:
_migrateAccountDictionary:fromKeyValueStore:originalActiveDSID:originalActiveLockerDSID:logKey:error:
_removeAccountDictionary:fromKeyValueStore:
_shouldRemoveAccountDictionaryWithoutMigration:reason:
_createAuthenticationContextForAccount:silentAuthentication:options:
_createAuthenticationController
_createUpdatedAccount:withAuthenticationResults:options:
_allowSilentPasswordAuthForAccount:withOptions:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
keyValueStore
accounts
accountsPromise
accountWithAccountName:
accountWithAccountName:scope:
accountWithAltDSID:
accountWithAltDSID:scope:
accountWithAltDSID:uniqueIdentifier:accountName:
accountWithAltDSID:uniqueIdentifier:accountName:scope:
accountWithUniqueIdentifier:
accountWithUniqueIdentifier:scope:
activeAccount
localiTunesAccount
activeSandboxAccount
resetLocalAccount
iTunesStoreAccountType
iTunesStoreAccountTypePromise
clearCachedAccounts
repairAccountWithBrokenDSID:
accountWithUniqueIdentifier:reloadIfNecessary:
getDefaultAccountNameUsingBlock:
isAuthenticationActive
removeAccount:error:
removeAccount:completion:
removeAllAccountsWithCompletion:
removeCookiesForAccount:logKey:
saveAccount:completion:
saveAccount:error:
saveAccount:verifyCredentials:completion:
saveAccount:verifyCredentials:error:
setDefaultAccountName:completionBlock:
signOutAccount:
signOutAccount:completion:
updateAccountWithAuthKit:store:options:
_buyParamsForBuyParamsString:
_cachedAccounts
_postAccountStoreChangeNotification
_postActiveAccountChangedNotification
_postAuthenticationActivityNotification
_recordAnalyticsForMetricsDialogEvent:withTopic:
_saveAccountInUnitTestMode:ignoreValidationErrors:
_saveAccount:verifyCredentials:
_setCachedAccounts:
_convertPasswordToPET:forAccount:options:
_optionsForProxiedAuthenticationWithVerifyCredentialsOptions:
_passwordEquivalentTokenFromAlternateAccountWithAltDSID:DSID:username:
_shouldCreateNewAccountForAccount:options:
_updateAccountWithAuthKitViaPromptAuth:store:options:
_updateAccountWithAuthKitViaSilentAuth:options:
_updateAccountWithAuthKitViaSilentPasswordAuth:options:
_updateAccountWithAuthKitViaSilentPETAuth:options:
addAccount:
reloadAccounts
setAccountCredits:forAccountWithUniqueIdentifier:
setActiveAccount:
signOutAllAccounts
signOutAllAccountsWithCompletionBlock:
accountsCache
setAccountsCache:
accountsCacheAccessQueue
setAccountsCacheAccessQueue:
fetchAccountsQueue
setFetchAccountsQueue:
isInProcessCacheDisabled
setInProcessCacheDisabled:
setKeyValueStore:
metricsQueue
setMetricsQueue:
notificationQueue
setNotificationQueue:
backingAccountStore
_inProcessCacheDisabled
_accountsCache
_accountsCacheAccessQueue
_fetchAccountsQueue
_keyValueStore
_metricsQueue
_notificationQueue
_backingAccountStore
T@"NSArray",&,N,V_accountsCache
T@"NSObject<OS_dispatch_queue>",&,N,V_accountsCacheAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_fetchAccountsQueue
inProcessCacheDisabled
TB,N,GisInProcessCacheDisabled,V_inProcessCacheDisabled
T@"SSKeyValueStore",&,N,V_keyValueStore
T@"NSObject<OS_dispatch_queue>",&,N,V_metricsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T@"SSPromise",R,N
authenticationActive
TB,R,GisAuthenticationActive
T@"ACAccountStore",R,N,V_backingAccountStore
T@"SSAccount",R,N
T@"SSAccount",R
T@"NSArray",R,C
T@"SSAccount",R,C
expired
TB,R,GisExpired
_setError:
authenticatedAccount
setAuthenticatedAccount:
authenticateResponseType
setAuthenticateResponseType:
credentialSource
setCredentialSource:
setResponseDictionary:
_authenticatedAccount
_authenticateResponseType
_credentialSource
T@"SSAccount",&,N,V_authenticatedAccount
Tq,N,V_authenticateResponseType
TQ,N,V_credentialSource
T@"NSDictionary",C,N,V_responseDictionary
setOfActiveRestrictionUUIDs
isExplicitContentRestrictedByDefaultInCurrentStoreFront:
isExplicitContentDisallowedInCurrentStoreFront:
isActiveAccountAllowedToUpdateRestrictions
isRestrictionsPasscodeSet:
setAllowExplicitContent
shouldDisplayExplicitRestrictionAlertOfType:completionBlock:
didDisplayExplicitRestrictionAlertOfType:
_calculateIsRestrictionsPasscodeSet
_isExplicitContentRestrictedByDefaultInCurrentStoreFront
_isExplicitContentDisallowedInCurrentStoreFront
softwareTypes
isForced
_forced
_softwareTypes
forced
TB,R,N,GisForced,V_forced
T@"NSArray",R,C,N,V_softwareTypes
setForced:
setSoftwareTypes:
TB,D,N,GisForced
updateQueueRequest:didReceiveResponse:
initWithUpdateQueueContext:
startWithUpdatesResponseBlock:
updateQueueContext
_context
T@"<SSSoftwareUpdatesRequestDelegate>",D,N
T@"SSSoftwareUpdatesContext",R
initWithError:
updateItems
copyUpdateItemDictionaries
setUpdateItemsWithItemDictionaries:
_updateItems
T@"NSError",R
TB,R,GisFailed
_applicationWillEnterForeground
_cookieValuesForConfiguration:
_serialQueueInsertEvents:withCompletionHandler:
_handleFlushTimer
_flushUnreportedEventsIfEnabled
_setupFlushTimer
setFlushTimerEnabled:
configuration
flushUnreportedEventsWithCompletionHandler:
insertEvent:withCompletionHandler:
insertEvents:withCompletionHandler:
locationWithPosition:type:fieldData:
recordAnalyticsForMetricsDialogEvent:withTopic:
serialQueue
setGlobalConfiguration:
setPageConfiguration:
_enumerateFieldValuesWithMap:fieldData:block:
_valueForField:withFieldData:
_userType
isFlushTimerEnabled
_flushSerialQueue
_flushTimerEnabled
_flushOnForeground
_flushTimerBlock
_flushTimerQueue
flushTimerEnabled
TB,N,GisFlushTimerEnabled,V_flushTimerEnabled
_bagChanged:
bagWithProfileConfig:
cache
removeAllDebugBackingDictionaries
setDebugBackingDictionary:forProfileConfig:
_AMSBagValueTypeFromSSBagValueType:
T@"NSMutableDictionary",R,N
_initWithProfile:profileVersion:
profileConfig
resetCaches
URLIsTrusted:
arrayForKey:withCompletion:
boolForKey:withCompletion:
dictionaryForKey:withCompletion:
doubleForKey:withCompletion:
integerForKey:withCompletion:
stringForKey:withCompletion:
URLForKey:withCompletion:
arrayPromiseForKey:
boolPromiseForKey:
dictionaryPromiseForKey:
doublePromiseForKey:
integerPromiseForKey:
stringPromiseForKey:
URLPromiseForKey:
arrayForKey:error:
boolForKey:error:
dictionaryForKey:error:
doubleForKey:error:
integerForKey:error:
stringForKey:error:
URLForKey:error:
canHandleTrustedDomains
_AMSBag
profile
setProfile:
profileVersion
setProfileVersion:
_profile
_profileVersion
T@"NSString",&,N,V_profile
T@"NSString",&,N,V_profileVersion
TB,R,N,GisExpired
T@"NSDate",R,N
T@"SSBagProfileConfig",R,N
databasePath
performTransactionWithBlock:
_setupDatabase
_database
initWithToken:error:
apiToken
setApiToken:
_apiToken
T@"NSString",C,N,V_apiToken
T@"NSError",C,N,V_error
addErrorBlock:
addSuccessBlock:
resultBeforeDate:error:
resultWithError:
resultWithTimeout:error:
_runBlock
executedBlock
setExecutedBlock:
executeBlockLock
setExecuteBlockLock:
_executedBlock
_executeBlockLock
T@"NSLock",&,N,V_executeBlockLock
TB,N,V_executedBlock
bagKeys
bagKeyForStringRepresentation:
bagLoadTimeout
setBagLoadTimeout:
bagKeysDictionary
setBagKeysDictionary:
_bagLoadTimeout
_bagKeysDictionary
T@"NSDictionary",&,N,V_bagKeysDictionary
Td,N,V_bagLoadTimeout
T@"NSString",C,N,V_profile
T@"NSString",C,N,V_profileVersion
registerBagKey:valueType:
registerBagKey:valueType:defaultValue:
mutableBagKeysDictionary
setMutableBagKeysDictionary:
_mutableBagKeysDictionary
T@"NSMutableDictionary",&,N,V_mutableBagKeysDictionary
Td,D,N
promiseWithError:
promiseWithPromise:
promiseWithSuccess
_globalPromiseStorage
_globalPromiseStorageAccessQueue
addFinishBlock:
finishWithError:
finishWithSuccess
waitUntilFinished
waitUntilFinishedWithTimeout:
completionHandlerAdapter
promiseAdapter
_removeFromGlobalPromiseStorage
backingPromise
setBackingPromise:
_backingPromise
T@"SSPromise",&,N,V_backingPromise
takeKeepAliveWithTransactionID:
releaseKeepAliveWithTransactionID:
_transactionCount
_transactionStore
_preferredOfferIdentifiers
initWithOfferIdentifier:dictionary:
actionDisplayName
confirmationDialog
documentCannotOpenDialog
documentRequiredHandlers
documentUTI
isOneTapOffer
isPreorder
offerMedia
successDialog
supportedDevices
accountIdentifiers
estimatedDiskSpaceNeeded
requiredSoftwareCapabilities
setActionDisplayName:
setOneTapOffer:
setPriceDisplay:
shouldShowPlusIcon
_offerItem
_offerDictionary
_supportedDevices
T@"SSItem",N,G_offerItem,S_setOfferItem:,V_item
T@"NSSet",R,N
T@"NSString",R,N,V_offerIdentifier
oneTapOffer
TB,R,N,GisOneTapOffer
preorder
TB,R,N,GisPreorder
T@"SSItemMedia",R,N
T@"SSDialog",R,N
T@"SSNetworkConstraints",R,N
initWithPushNotificationParameters:
pushNotificationParameters
setPushNotificationParameters:
T@"SSVPushNotificationParameters",C,N,V_parameters
initWithDeviceIdentifier:
initWithOfferDeviceDicitionary:
deviceIdentifier
incompatibleDeviceError
incompatibleSystemError
minimumProductVersion
_deviceIdentifier
_incompatibleDeviceError
_incompatibleSystemError
_minimumProductVersion
Tq,R,N,V_deviceIdentifier
T@"NSString",R,N,V_minimumProductVersion
T@"SSItemOfferDeviceError",R,N,V_incompatibleDeviceError
T@"SSItemOfferDeviceError",R,N,V_incompatibleSystemError
_initWithMessage:title:URLTitle:URL:
localizedMessage
localizedTitle
localizedURLTitle
_localizedMessage
_localizedTitle
_localizedURLTitle
T@"NSString",R,N,V_localizedMessage
T@"NSString",R,N,V_localizedTitle
T@"NSString",R,N,V_localizedURLTitle
initWithManagerOptions:
cancelDownloads:completionBlock:
moveDownload:afterDownload:completionBlock:
moveDownload:beforeDownload:completionBlock:
resumeDownloads:completionBlock:
restartDownloads:completionBlock:
_copyDownloadsForMessage:downloadIDs:
_pauseDownloads:forced:completionBlock:
_sendDownloadsChanged:
downloadQueue:downloadStatesDidChange:
downloadQueue:downloadStates:didCompleteWithError:
__book_dispatchBlock:withError:
__book_filterDownloads:withResult:
bookDownloads
__book_cancelDownloads:completionBlock:
__book_pauseDownloads:completionBlock:
__book_resumeDownloads:completionBlock:
__book_getAllDownloads
__book_downloadsForStati:overrideFinished:overrideFailed:
__book_sendDownloadsChanged:filterBooks:
_downloadQueue
networkConstraintsForDownloadKind:fromBag:
newNetworkConstraintsByDownloadKindFromURLBag:
_addNetworkConstraintsToDictionary:forNetworkType:legacyDictionary:
_newLegacyNetworkConstraintsWithDictionary:
_newModernNetworkConstraintsWithArray:
disableCellularNetworkTypes
hasSizeLimitForNetworkType:
isAnyNetworkTypeEnabled
setAllNetworkTypesDisabled
setSizeLimit:forNetworkType:
sizeLimitForNetworkType:
setSizeLimitsWithStoreConstraintDictionary:
_copySizeLimits
_disableAllNetworkTypes
_setSizeLimit:forNetworkType:
_sizeLimitForNetworkType:
_sizeLimits
anyNetworkTypeEnabled
TB,R,GisAnyNetworkTypeEnabled
newConditionWithDictionary:
evaluateWithContext:
_operator
_bundleIdentifier
_bundleVersion
_externalVersion
_restrictionName
defaultConditionalContext
setDefaultConditionalContext:
initWithDictionary:conditionalContext:
dictionaryByEvaluatingConditions
dictionaryByRemovingConditions
_arrayByEvaluatingChildrenOfArray:withForcedValue:
_checkConditions:withOperator:
_dictionaryByEvaluatingChildrenOfDictionary:withForcedValue:
_dictionaryByEvaluatingDictionary:withForcedValue:
_dictionaryByEvaluatingWithForcedValue:
_logicalOperatorForString:
itemLookupBlock
setItemLookupBlock:
platformName
setPlatformName:
systemVersion
setSystemVersion:
_itemLookupBlock
_platformName
_systemVersion
T@?,C,N,V_itemLookupBlock
T@"NSString",C,N,V_platformName
T@"NSString",C,N,V_systemVersion
currentDevice
copyCachedAvailableItemKinds
promptNeedsDisplay:
setCachedAvailableItemKinds:
setLastPromptAttemptDate:forPromptWithIdentifier:
setPromptWithIdentifier:needsDisplay:
deviceIsAppleTV
deviceIsAppleWatch
deviceIsAudioAccessory
deviceIsInternalBuild
deviceIsiPad
deviceIsiPhone
deviceIsiPod
deviceIsSeedBuild
clientVersion
clientName
cloudMediaLibraryIdentifier
copyStoreFrontRequestHeaders
deviceTypeIdentifier
getAvailableItemKindsWithBlock:
getCellularNetworkingAllowedWithBlock:
loadStoreFrontWithCompletionHandler:
sdk_loadStorefrontCountryCode:
sdk_loadStoreFrontIdentifier:
mediaLibraryIdentifier
setCellularNetworkingAllowed:
setStoreFrontWithResponseHeaders:
showPromptWithIdentifier:completionHandler:
softwareLibraryIdentifier
storeFrontIdentifierPromise
legacyUserAgent
userAgent
userAgentWithBundleRef:isCachable:
userAgentWithClientName:version:
batteryLevel
carrierBundleStatusForService:
compatibleProductType
deviceType
getCarrierBundleStatusForService:completionHandler:
getMachineIdentifier:otp:forAccountIdentifier:
isPluggedIn
enableAllAutomaticDownloadKindsWithCompletionBlock:
minusAutomaticDownloadKinds:withCompletionBlock:
phoneNumber
productType
productVersion
screenScale
serialNumber
setAutomaticDownloadKinds:withCompletionBlock:
setCloudMediaLibraryIdentifier:
setMediaLibraryIdentifier:
setSoftwareLibraryIdentifier:
startPowerMonitoring
stopPowerMonitoring
supportsDeviceCapability:
deviceBiometricStyle
synchronizeAutomaticDownloadKinds
thinnedApplicationVariantIdentifier
unionAutomaticDownloadKinds:withCompletionBlock:
uniqueDeviceIdentifier
userAgentWithBundleIdentifier:version:
setStoreFrontIdentifier:account:
setStoreFrontIdentifier:accountIdentifier:
setStoreFrontIdentifier:forRequest:response:account:
_appleTVProductVersion
_cacheKeyValueStoreValues
_copyCarrierBundleEligibilityWithStatus:
_copyKeyValueStoreValueForDomain:key:
_copyProductType
_deviceClass
_deviceType
_deviceTypeForProductType:
_deviceTypeForUnknownAppleTV:
_deviceTypeForUnknownIPad:
_deviceTypeForUnknownIPhone:
_deviceTypeForUnknownIPod:
_diskCapacityString
_fairPlayDeviceTypeString
_getDeviceType:error:
_invalidateAutomaticDownloadKinds
_invalidatePhoneNumber
_invalidateSoftwareCUID
_is720pCapable
_is1080pCapable
_newLegacyUserAgent:
_newModernUserAgentWithClientName:version:isCachable:
_postStoreFrontDidChangeNotification
_productVersion
_reloadPluggedInState
_screenClass
_updateAutomaticDownloadKinds:withValue:completionBlock:
_updateBatteryLevelFromService:
_userAgentClientNameForAppleTVBundleID:
_userAgentClientNameForBundleID:
_userAgentClientNameForInfoPlist:
_userAgentClientVersionForInfoPlist:clientName:
isStoreFrontIdentifierTransient
reloadStoreFrontIdentifier
setStoreFrontIdentifier:account:isTransient:
setStoreFrontIdentifier:accountIdentifier:isTransient:
setStoreFrontIdentifier:isTransient:
synchedStoreFrontIdentifier
_automaticDownloadKinds
_biometricStyle
_cloudMediaLibraryIdentifier
_legacyUserAgent
_localStoreFrontIdentifier
_mediaLibraryIdentifier
_phoneNumber
_productType
_softwareLibraryIdentifier
_udid
_userAgent
_clientName
TI,R
pluggedIn
TB,R,GisPluggedIn
sharedInstance
copyDeviceGUID
initWithClientToken:
clientToken
_clientToken
T@"NSString",R,C,N,V_clientToken
currentBoolValue
domain
setDomain:
fallbackNumberValue
setFallbackNumberValue:
setKey:
shouldInvertBoolValue
setShouldInvertBoolValue:
_domain
_fallbackNumberValue
_key
_shouldInvertBoolValue
T@"NSString",C,N,V_domain
T@"NSNumber",C,N,V_fallbackNumberValue
T@"NSString",C,N,V_key
TB,N,V_shouldInvertBoolValue
initWithBaseURL:location:
pointOfInterestIdentifier
pointOfInterestProviderIdentifier
pointOfInterestProviderURL
setPointOfInterestIdentifier:
setPointOfInterestProviderIdentifier:
setPointOfInterestProviderURL:
setUserAgent:
_lookupWithRequest:error:
location
_baseURLString
_location
T@"CLLocation",R,V_location
setBundleVersion:
externalVersionIdentifier
setExternalVersionIdentifier:
_externalVersionIdentifier
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_bundleVersion
T@"NSNumber",C,N,V_externalVersionIdentifier
T@"NSString",C,N,V_itemIdentifier
_initCommon
additionalMetrics
allowedRetryCount
cachePolicy
clientIdentifier
expectedContentLength
HTTPBody
HTTPMethod
networkServiceType
shouldProcessProtocol
shouldSendSecureToken
clientAuditBundleIdentifier
clientAuditTokenData
clientBundleIdentifier
timeoutInterval
URLBagKey
canBeResolved
copyURLRequest
HTTPBodyStream
isLargeDownload
KBSyncType
requiresCellularDataNetwork
requiresExtendedValidationCertificates
requiresExternal
requiresHTTPS
shouldAddKBSyncData
shouldDecodeResponse
shouldDisableCellularFallback
shouldDisableReversePush
shouldDisableReversePushSampling
URLBagType
URLBagURLBlock
URLs
_additionalMetrics
_allowedRetryCount
_cachePolicy
_clientAuditBundleIdentifier
_clientAuditTokenData
_clientIdentifier
_expectedContentLength
_httpBody
_httpBodyStream
_httpMethod
_isITunesStoreRequest
_kbsyncType
_largeDownload
_networkServiceType
_requiresCellularDataNetwork
_requiresExtendedValidationCertificates
_requiresExternal
_requiresHTTPS
_shouldDecodeResponse
_shouldDisableCellular
_shouldDisableCellularFallback
_shouldDisableReversePush
_shouldDisableReversePushSampling
_shouldProcessProtocol
_shouldSendSecureToken
_shouldSetCookies
_timeoutInterval
_urlBagKey
_urlBagType
_urlBagURLBlock
_urls
T@"NSData",R,C
T@"NSInputStream",R,&
largeDownload
TB,R,GisLargeDownload
T@?,R,C
TB,R,GisITunesStoreRequest
T@"NSURL",R,&
setAdditionalMetrics:
setAllowedRetryCount:
setCachePolicy:
setClientIdentifier:
setExpectedContentLength:
setHTTPBody:
setHTTPMethod:
setNetworkServiceType:
setShouldDisableCellular:
setShouldDisableCellularFallback:
setShouldDisableReversePush:
setShouldDisableReversePushSampling:
setTimeoutInterval:
setURLBagKey:
setURL:
setValue:forRequestParameter:
setHTTPBodyStream:
setKBSyncType:
setLargeDownload:
setMultiPartFormDataWithDictionary:
setRequiresCellularDataNetwork:
setRequiresExtendedValidationCertificates:
setRequiresExternal:
setRequiresHTTPS:
setShouldAddKBSyncData:
setShouldDecodeResponse:
setShouldProcessProtocol:
setShouldSendSecureToken:
setShouldSetCookies:
setClientAuditBundleIdentifier:
setClientAuditTokenData:
setURLBagType:
setURLBagURLBlock:
setURLs:
T@"NSDictionary",C,D
TB,D
T@"NSString",C,D
T@"NSData",C,D
T@"NSInputStream",&,D
TB,D,GisLargeDownload
T@?,C,D
T@"NSArray",C,D
TQ,D
TB,D,GisITunesStoreRequest
Td,D
T@"NSURL",&,D
subscriptionStatusForAccountUniqueIdentifier:
setSubscriptionStatus:forAccountUniqueIdentifier:
_accountUniqueIdentifierToSubscriptionStatus
initWithURLResponse:bodyData:
allHeaderFields
MIMEType
suggestedFilename
textEncodingName
storeCorrelationID
bodyData
setMetricsPageEvent:
_bodyData
T@"SSMetricsPageEvent",&,N,V_metricsPageEvent
T@"NSData",R,N,V_bodyData
playInfoRequest:didReceiveResponse:
initWithPlayInfoContext:
playInfoContext
playInfoResponse
startWithPlayInfoResponseBlock:
T@"<SSPlayInfoRequestDelegate>",D,N
T@"SSPlayInfoRequestContext",R
T@"SSPlayInfoResponse",R
contentIdentifier
setContentIdentifier:
playbackType
setPlaybackType:
playerGUID
setPlayerGUID:
SICData
setSICData:
_contentIdentifier
_playerGUID
_sic
_playbackType
T@"NSString",C,N,V_playerGUID
T@"NSData",C,N,V_sic
T@"NSArray",C,N,V_sinfs
T@"NSNumber",C,N,V_contentIdentifier
T@"NSString",C,N,V_playbackType
initWithPlayInfoData:error:
playInfoData
_playInfoData
T@"NSError",R,N,V_error
T@"NSData",R,N,V_playInfoData
assetForFlavor:
performMigration:completionBlock:
investigateNetworks
investigateNetworksWithCompletionBlock:
initWithDialogDictionary:
buttons
defaultButton
setDefaultButton:
dialogDictionary
dialogKind
setButtons:
_setValue:forProperty:
_buttons
_dialogDictionary
T@"SSDialogButton",&,N
buttonWithTitle:
initWithTitle:actionDictionary:
buttonTitle
actionParameter
buttonAction
URLTarget
valueForActionProperty:
_actionDictionary
_title
getReceiptPathWithCompletionBlock:
receiptPathForProxy:
vppStateFlagsWithProxy:
initWithContentsOfFile:
initWithContainerPath:
isVPPLicensed
isRevoked
receiptExpired
isValid
_purchaseReceipt
_isValid
TB,R,V_isValid
T@"NSDate",R
_ss_accountTypeWithIdentifier:error:
_ss_appleAuthenticationAccountForAccount:error:
_ss_iCloudAccountForAccount:error:
_ss_IDMSAccountForAccount:error:
_ss_iTunesAccountForAccount:error:
_correspondingAccountWithAccountTypeIdentifier:forAccount:error:
_accountTypesCache
authorizationRequest:didReceiveResponse:
_init
initWithAuthorizationToken:accountIdentifier:
authorizationToken
startWithAuthorizationResponseBlock:
allowSilentAuthentication
setAllowSilentAuthentication:
familyAccountIdentifier
setFamilyAccountIdentifier:
keybagPath
setKeybagPath:
reason
setReason:
shouldAddKeysToKeyBag
setShouldAddKeysToKeyBag:
shouldPromptForCredentials
setShouldPromptForCredentials:
_allowSilentAuthentication
_keybagPath
_token
_reason
_shouldAddKeysToKeyBag
_shouldPromptForCredentials
_familyAccountIdentifier
T@"<SSAuthorizationRequestDelegate>",D,N
T@"NSNumber",C,V_accountIdentifier
TB,N,V_allowSilentAuthentication
T@,R
T@"NSString",C,V_clientIdentifierHeader
T@"NSNumber",C,V_familyAccountIdentifier
T@"NSString",C,V_keybagPath
T@"NSString",C,V_reason
TB,N,V_shouldAddKeysToKeyBag
TB,N,V_shouldPromptForCredentials
T@"NSString",C,V_userAgent
height
imageOrientation
imageScale
isPrerendered
width
initWithArtworkDictionary:
imageSize
setImageKindWithTypeName:variantName:
setValue:forProperty:
_setValue:forKey:
imageKind
setImageKind:
_imageKind
T{CGSize=dd},R,N
T@"NSString",C,N,V_imageKind
T@"NSURL",&,N
Td,R,N
prerendered
TB,R,N,GisPrerendered
initWithPolicyType:
initWithPolicyType:signatureComponents:
initWithSignedActionsDictionary:
dataToSignWithRequestProperties:
dataToSignWithURLRequest:
dataToSignWithURLResponse:responseData:
_dataToSignWithDataSource:
policyType
signatureComponents
_policyType
_signatureComponents
Tq,R,N,V_policyType
T@"NSArray",R,C,N,V_signatureComponents
initWithComponentType:key:
componentType
_componentType
Tq,R,N,V_componentType
T@"NSString",R,C,N,V_key
initWithImageCollection:
initWithItemImages:
bestImageForSize:
imagesForSize:
imagesForKind:
_imagesForSize:scale:
_newImagesForDictionary:
itemImages
_itemImages
T@"NSArray",R,N,V_itemImages
startWithCompletion:
sharedClient
popQueuedNotifications
registerForRemoteNotifications
unregisterForRemoteNotifications
_notifyToken
alertBodyString
alertCancelString
alertOKString
alertTitleString
explicitContent
artworkUrl
badgeValue
category
metrics
soundFileName
tapUrl
version
valueForKey:
notificationUserInfo
_valueForAlertKey:
_valueForAPSKey:
_userInfo
collectURLSessionDataWithBlock:
databaseTable
contextWithBagType:
allHTTPHeaders
cacheKey
setAllHTTPHeaders:
valueForHTTPHeaderField:
userIdentifier
setUserIdentifier:
allowsExpiredBags
setAllowsExpiredBags:
bagType
setBagType:
ignoresCaches
setIgnoresCaches:
usesCachedBagsOnly
setUsesCachedBagsOnly:
_allowsExpiredBags
_bagType
_ignoresCaches
_userIdentifier
_usesCachedBagsOnly
TB,N,V_allowsBootstrapCellularData
TB,N,V_allowsExpiredBags
T@"NSData",&,N,V_clientAuditTokenData
TB,N,V_usesCachedBagsOnly
Tq,N,V_allowedRetryCount
Tq,N,V_bagType
TB,N,V_ignoresCaches
T@"NSNumber",&,N,V_userIdentifier
ratingSystemFromString:
stringForRatingSystem:
rank
ratingDescription
ratingLabel
ratingSystem
setRank:
setRatingDescription:
setRatingLabel:
setRatingSystem:
setShouldHideWhenRestricted:
shouldHideWhenRestricted
contentRatingDictionary
ratingSystemLogo
_isRatingSystemForApps:
_isRatingSystemForMovies:
_isRatingSystemForMusic:
_isRatingSystemForTV:
_setValueCopy:forProperty:
T@"SSItemArtworkImage",R,N
TB,R,N,GisExplicitContent
Tq,N
initWithUpdatedAccount:credentialSource:
updatedAccount
_updatedAccount
TQ,R,N,V_credentialSource
T@"SSAccount",R,N,V_updatedAccount
defaultOverrideHTTPHeaderFields
propertyListObjectWithPlayActivityEvent:
currentStoreFrontID
setCurrentStoreFrontID:
_currentStoreFrontID
T@"NSString",C,N,V_currentStoreFrontID
paymentSheet
setPaymentSheet:
biometricAuthorizationAttempts
setBiometricAuthorizationAttempts:
challenge
setChallenge:
touchIDDelayEnabled
setTouchIDDelayEnabled:
consolidatedDialog
setConsolidatedDialog:
didAuthenticate
setDidAuthenticate:
didBuyParamsChange
setDidBuyParamsChange:
fpanID
setFpanID:
isExtendedAction
setIsExtendedAction:
isIdentityMapInvalid
setIsIdentityMapInvalid:
isPayment
setIsPayment:
paymentTokenData
setPaymentTokenData:
redirectURL
setRedirectURL:
shouldContinueTouchIDSession
setShouldContinueTouchIDSession:
shouldSendFallbackHeader
setShouldSendFallbackHeader:
signature
setSignature:
xAppleAMDHeader
setXAppleAMDHeader:
xAppleAMDMHeader
setXAppleAMDMHeader:
_touchIDDelayEnabled
_didAuthenticate
_didBuyParamsChange
_isExtendedAction
_isIdentityMapInvalid
_isPayment
_shouldContinueTouchIDSession
_shouldSendFallbackHeader
_paymentSheet
_biometricAuthorizationAttempts
_challenge
_consolidatedDialog
_dialogId
_fpanID
_paymentTokenData
_signature
_xAppleAMDHeader
_xAppleAMDMHeader
T@"NSString",C,V_accountName
Tq,V_biometricAuthorizationAttempts
T@"NSString",C,V_challenge
TB,V_touchIDDelayEnabled
T@"SSConsolidatedDialog",&,V_consolidatedDialog
T@"NSString",C,V_dialogId
TB,V_didAuthenticate
TB,V_didBuyParamsChange
TB,V_didFallbackToPassword
T@"NSString",C,V_fpanID
TB,V_isExtendedAction
TB,V_isIdentityMapInvalid
TB,V_isPayment
T@"NSString",C,V_passwordEquivalentToken
T@"SSPaymentSheet",&,V_paymentSheet
T@"NSData",C,V_paymentTokenData
T@"NSURL",C,V_redirectURL
TB,V_shouldContinueTouchIDSession
TB,V_shouldSendFallbackHeader
T@"NSString",C,V_signature
T@"NSString",C,V_xAppleAMDHeader
T@"NSString",C,V_xAppleAMDMHeader
HLSKeyCertificateURL
HLSKeyServerURL
HLSPlaylistURL
isiTunesStoreStream
_enumerateAssetsUsingBlock:
itemDictionary
_itemDictionary
T@"NSDictionary",R,C,N,V_itemDictionary
T@,R,C,N
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
xpcData
_initSSXPCConnection
initWithServiceName:
initWithXPCConnection:
createXPCEndpoint
disconnectBlock
messageBlock
copyReplyQueue
sendMessage:
sendMessage:withReply:
sendSynchronousMessage:withReply:
setDisconnectBlock:
setMessageBlock:
setReplyQueue:
_reloadEventHandler
_disconnectBlock
_replyQueue
_messageBlock
_becomeManagedOnConnection:
reconnectToLSApplicationWorkspace
removePersistenceIdentifier:
setDownloadHandler:
EBookDownloadManager
IPodDownloadManager
softwareDownloadManager
allStoreDownloadKinds
EBookDownloadKinds
IPodDownloadKinds
ITunesDownloadKinds
reevaluateBackgroundDownloadsForBundleIdentifiers:
retryAllRestoreDownloads
softwareDownloadKinds
_triggerDownloads
_sendGlobalHandler:
_initSSDownloadManagerWithOptions:
activeDownloads
addDownloads:completionBlock:
cancelAllDownloadsWithCompletionBlock:
finishDownloads:
insertDownloads:afterDownload:completionBlock:
insertDownloads:beforeDownload:completionBlock:
managerOptions
pauseDownloads:completionBlock:
setDownloads:completionBlock:
_pauseDownloads:completionBlock:
setDownloads:forKinds:completionBlock:
_finishDownloads:
_willFinishDownloads:
_connectAfterDaemonLaunch
_connectAsObserver
_copyDownloadKindsUsingNetwork
_copyDownloads
_supportsSoftwareKind
_handleDownloadKindsUsingNetworkChanged:
_handleDownloadsChanged:
_handleDownloadStatesChanged:
_handleMessage:fromServerConnection:
_handleReply:forDownloads:message:isRetry:block:
_insertDownloads:before:after:completionBlock:
_loadDownloadKindsUsingNetwork
_moveDownload:before:after:completionBlock:
_newOptionsDictionary
_reloadIsUsingNetworkWithDownloadKinds:
_resetAllDownloads
_sendMessage:withCompletionBlock:
_sendMessageToObservers:
_sendObserverConnection
_activeDownloads
_activeDownloadsChanged
_backgroundQueue
_downloads
_downloadsChanged
_isUsingNetwork
_observerConnection
_observerQueue
_options
_removedDownloads
_launchNotificationToken
T@"SSDownloadManagerOptions",R
shouldFilterExternalOriginatedDownloads
setShouldFilterExternalOriginatedDownloads:
setDownloadKinds:
persistenceIdentifier
setPersistenceIdentifier:
prefetchedDownloadProperties
setPrefetchedDownloadProperties:
prefetchedDownloadExternalProperties
setPrefetchedDownloadExternalProperties:
ignoreDivertedDownloads
setIgnoreDivertedDownloads:
_downloadKinds
_filterExternalOriginatedDownloads
_persistenceIdentifier
_prefetchedDownloadExternalProperties
_prefetchedDownloadProperties
_ignoreDivertedDownloads
T@"NSArray",C,N,V_prefetchedDownloadExternalProperties
TB,N,V_ignoreDivertedDownloads
T@"NSArray",C,N,V_downloadKinds
T@"NSString",C,N,V_persistenceIdentifier
T@"NSArray",C,N,V_prefetchedDownloadProperties
TB,N,V_filterExternalOriginatedDownloads
headerADSID
setHeaderADSID:
headerGSToken
setHeaderGSToken:
headerGuid
setHeaderGuid:
headerMMeClientInfo
setHeaderMMeClientInfo:
headerMMeDeviceId
setHeaderMMeDeviceId:
setParameters:
_headerADSID
_headerGSToken
_headerGuid
_headerMMeClientInfo
_headerMMeDeviceId
T@"NSString",C,N,V_headerADSID
T@"NSString",C,N,V_headerGSToken
T@"NSString",C,N,V_headerGuid
T@"NSString",C,N,V_headerMMeClientInfo
T@"NSString",C,N,V_headerMMeDeviceId
T@"NSData",C,N,V_parameters
T@"NSString",C,N,V_URLString
initWithSilentEnrollmentContext:
context
setContext:
T@"SSSilentEnrollmentContext",&,V_context
sharedController
_hasRequiredTelephonyEntitlement
suppServicesEvent:event:settingsType:data:
spcUnlockSuccessful:
phoneBookSelected:
phoneBookFetched:
phoneBookWritten:
phoneBookError:
phoneNumberAvailable:
phoneNumberChanged:
suppServicesStarted:
suppServicesCompleted:
suppServicesError:error:
subscriptionInfoDidChange
activeSubscriptionsDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
operatorNameChanged:name:
displayStatusChanged:status:
signalStrengthChanged:info:
rejectCauseCodeChanged:causeCode:
voiceLinkQualityChanged:metric:
enhancedVoiceLinkQualityChanged:metric:
enhancedDataLinkQualityChanged:metric:
imsRegistrationChanged:info:
cellChanged:cell:
cellMonitorUpdate:info:
networkListAvailable:list:
customerServiceProfileChanged:visible:
networkSelected:success:mode:
networkReselectionNeeded:
encryptionStatusChanged:info:
ratSelectionChanged:selection:
nrDisableStatusChanged:status:
plmnChanged:plmn:
T@"SSVTelephonyController",R
isPhoneNumberAccessRestricted
operatorName
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
registrationStatus
IMEI
sendSMSWithText:toPhoneNumber:countryCode:error:
_ensureTelephonyHandlesAreReady
_telephonyClient
_telephonySubscriptionContext
_updatePhoneNumber
_operatorName
_updateOperatorName
_registrationStatus
_updateRegistrationStatus
_telephonyCallbackQueue
_isPhoneNumberAccessRestricted
_hasTelephonyCapability
phoneNumberAccessRestricted
TB,R,N,GisPhoneNumberAccessRestricted
cancelLabel
setCancelLabel:
_cancelLabel
T@"NSString",C,V_cancelLabel
T@"NSString",C,V_title
_initWithPersistentIdentifier:
exists
getValues:forProperties:count:
setValuesWithDictionary:
getValues:forExternalProperties:count:
resetCachedExternalProperties:count:
resetCachedProperties:count:
setExternalValuesWithDictionary:
valueForExternalProperty:
_localExternalValues
_localValues
_isManaged
_persistentIdentifier
_setDirtyCachedExternalProperties:
_setDirtyCachedProperties:
_setLocalExternalValues:
_setLocalValues:
__addCachedExternalValues:
__addCachedPropertyValues:
_getValues:forProperties:count:message:
_pid
_dirtyLocalExternalProperties
_dirtyLocalProperties
T@"NSDictionary",C,G_localExternalValues,S_setLocalExternalValues:
T@"NSDictionary",C,G_localValues,S_setLocalValues:
_managed
TB,R,G_isManaged
downloadHandler:handleAuthenticationSession:
downloadHandlerDidDisconnect:
downloadHandler:cancelSession:
downloadHandler:handleSession:
downloadHandler:pauseSession:
downloadPhasesToIgnore
handlerIdentifier
resetDisavowedSessions
sessionsNeedPowerAssertion
sessionsShouldBlockOtherDownloads
setDownloadPhasesToIgnore:
setSessionsNeedPowerAssertion:
setSessionsShouldBlockOtherDownloads:
_connectToDaemon
_controlConnection
_newSessionWithMessage:
_sendAuthenticationSessionWithMessage:
_sendDisconnectMessage
_sendSessionCancelWithMessage:
_sendSessionHandleWithMessage:
_sendSessionPauseWithMessage:
_delegateQueue
_downloadPhasesToIgnore
_handlerID
_sessionsNeedPowerAssertion
_sessionsShouldBlockOtherDownloads
T@"<SSDownloadHandlerDelegate>"
shouldHandleSafariScriptURL:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
startWithDetailedResponseBlock:
startWithMetadataResponseBlock:
skipDownloads
setSkipDownloads:
_skipDownloads
TB,N,V_skipDownloads
initWithResponseDictionary:
actions
actionsWithActionType:
failureType
isSupportedProtocolVersion
versionMismatchURL
_copyAccount
_valueForProtocolKey:
T@"NSDictionary",R,N,V_dictionary
supportedProtocolVersion
TB,R,N,GisSupportedProtocolVersion
_actionWithActionType:
_checkInAppQueueActionWithClientID:environment:
_dialogActionWithDialog:
_dialogActionWithTouchIDDialog:
_invalidateURLBagsAction
_selectFooterActionWithSection:
_setActiveAccountActionWithAccount:
_setCreditsActionWithCredits:account:
_urlActionWithType:URL:
account
dialog
footerSection
_account
_actionType
_creditsString
_dialog
_footerSection
T@"NSString",R,N,V_actionType
T@"SSAccount",R,N,V_account
T@"NSString",R,N,V_clientIdentifier
T@"NSString",R,N,V_creditsString
T@"SSDialog",R,N,V_dialog
T@"NSString",R,N,V_footerSection
Tq,R,N,V_urlBagType
_requestWithType:
setHTTPHeaderFields:
setParameterValues:
_copyWithLeaseType:
_actionParameterValue
_copyBodyDictionaryWithFairPlaySession:
_URLBagKey
_applyValuesToCopy:
KDChannelIdentifier
setKDChannelIdentifier:
parameterValues
HTTPHeaderFields
startsLeaseSession
setStartsLeaseSession:
_setActionType:
_certificateData
_setCertificateData:
_leaseType
_KDMovieIdentifier
_setKDMovieIdentifier:
_URL
_setURL:
_httpHeaderFields
_kdChannelIdentifier
_kdMovieIdentifier
_startsLeaseSession
T@"NSString",R,C,N,G_actionParameterValue
T@"NSString",R,C,N,G_URLBagKey
Tq,N,G_actionType,S_setActionType:,V_actionType
Tq,R,N,G_leaseType,V_leaseType
TQ,N,G_KDMovieIdentifier,S_setKDMovieIdentifier:,V_kdMovieIdentifier
T@"NSData",C,N,G_certificateData,S_setCertificateData:,V_certificateData
T@"NSURL",C,N,G_URL,S_setURL:,V_url
TQ,N,V_kdChannelIdentifier
T@"NSDictionary",C,N,V_parameters
T@"NSDictionary",C,N,V_httpHeaderFields
TB,N,V_startsLeaseSession
initWithURLResponse:dictionary:
accountUniqueIdentifier
isManagedStudent
newAccount
responseType
token
userMessage
_responseTypeForErrorNumber:
_responseTypeForFailureType:
_responseTypeForStatusValue:
_valueForFirstAvailableKey:
Tq,V_urlBagType
T@"NSDictionary",R,V_responseDictionary
managedStudent
TB,R,GisManagedStudent
TB,R,GisNewCustomer
URLBagForContext:
setURLBag:forContext:
initWithURLBagContext:
getTrustForURL:completionBlock:
invalidate
loadValueForKey:completionBlock:
valueForKey:error:
existingBagDictionary
loadWithCompletionBlock:
_drainPendingLookupsWithError:
_loadURLBag
_loadWithCompletionBlock:
_ignoreCacheForNextLookup
_pendingLookups
_storeFrontIdentifier
T@"NSString",R,V_storeFrontIdentifier
T@"SSURLBagContext",R
_initSSDownloadSession
_initWithMessage:controlConnection:
download
downloadAsset
_copySessionPropertyWithKey:
_sessionID
_assetID
_downloadID
T@"SSDownload",R
T@"SSDownloadAsset",R
blocksOtherDownloads
canBePaused
disavowSessionWithError:
downloadPhase
finishSessionWithSuccess:error:
needsPowerAssertion
releaseSessionControl
setBlocksOtherDownloads:
setCanBePaused:
setNeedsPowerAssertion:
setStatusDescription:
_finishWithType:error:
_setBool:forSessionProperty:
duetTimeoutInterval
_downloadPhase
_duetTimeoutInterval
T@"NSNumber",R,V_duetTimeoutInterval
authenticationChallenge
_finishWithType:credential:
T@"NSURLAuthenticationChallenge",R
useCredential:forAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
cancelAuthenticationChallenge:
rejectProtectionSpaceAndContinueWithChallenge:
initWithAuthenticationSession:
authenticationSession
_session
T@"SSDownloadAuthenticationSession",R
dismissFollowUpWithIdentifier:
dismissFollowUpWithIdentifier:account:
pendingFollowUpWithIdentifier:
postFollowUpWithIdentifier:account:userInfo:
postFollowUpWithIdentifier:userInfo:
_createFollowUpItemForIdentifier:userInfo:
_createFollowUpItemForRenewCredentialsWithUserInfo:
_dismissFollowUpWithIdentifier:
_postFollowUpWithIdentifier:userInfo:
followUpController
setFollowUpController:
_followUpController
T@"FLFollowUpController",&,N,V_followUpController
personalizeOffersRequest:didReceiveResponse:
initWithItems:
startWithPersonalizedResponseBlock:
_items
T@"<SSPersonalizeOffersDelegate>",D,N
actionDisplayNameForItemType:
personalizedItems
priceDisplayForItemType:
actionParametersForItemIdentifier:
setActionDisplayNameString:forItemType:
setActionParameters:forItemIdentifier:
setPriceDisplayString:forItemType:
_setPersonalizedItems:
_actionDisplayNames
_actionParameters
_priceDisplayNames
copyReleaseDateStringWithStyle:
_setArtistName:
_setImageCollection:
_setItemKind:
_setReleaseDate:
_setReleaseDateString:
_setStoreAccountIdentifier:
_setStoreItemIdentifier:
_setStorePreorderIdentifier:
_setTitle:
storeAccountIdentifier
storeItemIdentifier
storePreorderIdentifier
_artistName
_imageCollection
_itemID
_itemKind
_releaseDate
_releaseDateString
_preorderID
T@"NSString",R,N,V_artistName
T@"SSItemImageCollection",R,N,V_imageCollection
T@"NSString",R,N,V_itemKind
Tq,R,N,V_pid
T@"NSString",R,N,V_releaseDateString
T@"NSNumber",R,N,V_accountID
TQ,R,N,V_itemID
TQ,R,N,V_preorderID
T@"NSString",R,N,V_title
preorderManagerPreordersDidChange:
bookStoreItemKinds
musicStoreItemKinds
initWithItemKinds:
cancelPreorders:withCompletionBlock:
itemKinds
_registerAsObserver
_itemKinds
_preorders
_initSSRestoreContentItem
initWithRestoreDownload:
cloudItemID
cloudMatchStatus
copyRestoreDictionary
downloadKind
isDRMFree
setCloudItemID:
setCloudMatchStatus:
setDownloadKind:
setDRMFree:
setStoreOriginalPurchaserAccountID:
setStoreAccountAppleID:
setStoreFlavor:
setStoreItemID:
setStoreSoftwareVersionID:
setValue:forAssetProperty:
setVideoDimensions:
storeAccountAppleID
storeFlavor
storeItemID
storeOriginalPurchaserAccountID
storeSoftwareVersionID
videoDimensions
_restoreKeyForAssetProperty:
_restoreKeyForDownloadProperty:
setBundleID:
_originalPurchaserAccountID
_appleID
_cloudMatchStatus
_isRestore
T@"NSString",C,N,V_bundleID
T@"NSNumber",&,N
DRMFree
TB,N,GisDRMFree
mainServer
initWithServiceName:entitlement:queue:
addObserver:selector:forMessage:
removeObserver:selector:forMessage:
_dispatchMessage:connection:
_recordCoreAnalyticsEventForClient:andSelector:
_entitlementName
_listener
_serviceName
_xpcRequestsCache
observer
setObserver:
selector
setSelector:
_observer
_selector
T@,N,V_observer
T:,N,V_selector
_distributedNotificationMessage:connection:
initWithNamedPort:
addObserverForName:queue:usingBlock:
namedPort
_sendRegistrationMessage:name:
_portName
_server
initWithName:queue:block:
dispatchQueue
name
_name
T@?,R,N,V_block
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
T@"NSString",R,N,V_name
initWithLogOptions:
logOptions
writeString:
_activeLogFilePath
_checkLogFileSize
_closeLogFile
_logFilePathWithIndex:
_openLogFile
_rollLogFiles
_lastFileStatTime
_fileHandle
_fileObserverSource
T@"SSLogFileOptions",R
initWithSAPVersion:
exchangeData:error:
primingSignatureForData:error:
signData:error:
verifyPrimeSignature:error:
verifySignature:forData:error:
_teardownSession
isComplete
_complete
complete
TB,R,N,GisComplete,V_complete
T@"NSNumber",R,V_accountIdentifier
T@"NSNumber",R,V_rentalKeyIdentifier
addChildRequest:
removeChildRequest:
runChildOperation:
success
setSuccess:
_childOperation
_childRequests
_success
TB,N,V_success
initWithManifestType:
getPathsForFilesWithClass:completionBlock:
manifestType
rebuildManifestWithCompletionBlock:
removeItemWithAssetPath:completionBlock:
removeItemsWithAssetPaths:completionBlock:
_removeItemsWithAssetPaths:completionBlock:
_manifestType
contentTasteItemUpdates
setContentTasteItemUpdates:
shouldInvalidateLocalCache
setShouldInvalidateLocalCache:
_shouldInvalidateLocalCache
_contentTasteItemUpdates
T@"NSArray",C,N,V_contentTasteItemUpdates
TB,N,V_shouldInvalidateLocalCache
_connectEventConnection
_eventConnection
T@"<SSEventMonitorDelegate>"
_copyWithMediaContentTasteItemClass:
contentType
playlistGlobalID
storeAdamID
tasteType
_contentType
_playlistGlobalID
_storeAdamID
_tasteType
TQ,R,N,V_contentType
T@"NSString",R,C,N,V_playlistGlobalID
Tq,R,N,V_storeAdamID
TQ,R,N,V_tasteType
setContentType:
setPlaylistGlobalID:
setStoreAdamID:
setTasteType:
TQ,D,N
keyWithIdentifier:scope:
scope
setScope:
_scope
T@"NSNumber",C,N,V_identifier
Tq,N,V_scope
caseInsensitiveCompare:
sharedStorage
responseHasSetCookies:
_bindStatement:withValues:
_fileURLRepresentsSharedStorageLocation:
_getGlobalSetCookiesForResponse:
_getSetCookiesForResponse:
_getUserSetCookiesForResponse:
_setupCookieDatabase:forCookieStorage:
_migrateToVersion1WithDatabase:
_migrateToVersion2WithDatabase:
_sharedStorageLocationPath
_currentProcessIsRoot
_currentProcessShouldUseRescuedStorageLocationForLocation:
_fileIsOwnedByRoot:
_rescuedStorageLocationForLocation:
initWithStorageLocation:
allCookiesForAccount:
allCookiesForUserIdentifier:
allCookiesForUserIdentifier:scope:
cookieHeadersForURL:account:
cookieHeadersForURL:userIdentifier:
cookieHeadersForURL:userIdentifier:scope:
cookiesForURL:account:
cookiesForURL:userIdentifier:
cookiesForURL:userIdentifier:scope:
removeAllCookies
removeCookiesWithProperties:
removeCookiesWithAccount:
removeCookiesWithUserIdentifier:
removeCookiesWithUserIdentifier:scope:
setCookies:forAccount:
setCookies:forUserIdentifier:
setCookiesForHTTPResponse:account:
setCookiesForHTTPResponse:userIdentifier:
setCookiesForHTTPResponse:userIdentifier:scope:
setCookiesFromCookieStorage:
storageLocation
_handleSharedCookieDatabaseDidChangeDarwinNotification
setFeatureEnablerInDictionary:key:
cookieArrayBySettingFeatureEnablerWithArray:key:
_shouldAddITFECookieToURL:
synchronizeFeatureEnablerCookieWithCookieValue:key:result:
fetchDefaults
_accountForKey:
_allCookieKeys
_bindInsertStatement:forCookie:key:
_columnNameForCookieProperty:
_cookieDatabaseDidChange
_copyCookieDictionaryForURL:key:
_copyCookieObjectsForURL:key:
_copyCookiesForPreparedSQLStatement:
_copyCookiesWithKey:
_copyPrivateCookiesForURL:key:
_copyPrivateCookieObjectsForURL:key:
_filterCookies:forURL:
_insertCookies:forKey:
_setCookies:forKey:
_stopIncludingLocalCookies
synchronizeCookies
performingMigration
setPerformingMigration:
_performingMigration
_storageLocation
_usesSharedCookieDatabase
__database
T@"SSSQLiteDatabase",R,N,V__database
TB,N,V_performingMigration
weakReferenceWithObject:
object
_object
_objectAddress
newLoadURLOperationWithRequest:
URLBagDictionary
_urlBagDictionary
copyRequestParameters
keyProfile
setKeyProfile:
valueForRequestParameter:
localizationStyle
setLocalizationStyle:
setLocation:
_localizationStyle
Tq,N,V_localizationStyle
T@"CLLocation",C,N,V_location
T@"NSNumber",C,N,V_timeoutInterval
initWithLocation:
authenticatesIfNeeded
setAuthenticatesIfNeeded:
startWithLookupBlock:
_lookupProperties
_setTimeoutInterval:
personalizationStyle
setPersonalizationStyle:
resultFilters
setResultFilters:
_personalizationStyle
_resultFilters
T@"SSLookupProperties",R,C,N
Tq,N,V_personalizationStyle
Tq,N,V_resultFilters
initWithLocationResponseDictionary:
allItems
appStoreURLWithReason:initialIndex:
itemForKey:
metricsConfiguration
_enumerateItemsWithBlock:
_setMetricsPageEvent:
_itemOrder
T@"SSMetricsPageEvent",&,N,S_setMetricsPageEvent:,V_metricsPageEvent
T@"SSMetricsConfiguration",R,N
sharedConfig
sharedAccountsConfig
sharedAccountsAuthenticationConfig
sharedAccountsCookiesConfig
sharedAccountsLogoutConfig
sharedAccountsMigrationConfig
sharedAccountsMigrationConfigOversize
sharedAccountsStorefrontConfig
sharedAskPermissionExtensionConfig
sharedBagConfig
sharedBagCacheConfig
sharedDaemonConfig
sharedDaemonConfigOversize
sharedFairPlayAnisetteConfig
sharedFeatureEnablerMigrationConfig
sharedFollowUpConfig
sharediTunesStoreConfig
sharediTunesStoreConfigOversize
sharedPrivacyConfig
sharedPushNotificationConfig
sharedStoreServicesConfig
sharedStoreServicesConfigOversize
sharedWriteToDiskConfig
_createLogConfigWithSubsystem:category:
_createLogConfigWithBaseConfig:subystem:category:
_debugLogsEnabled:
_deviceIsRunningInternalBuild
_deviceIsRunningInternalOrSeedBuild
_deviceIsRunningSeedBuild
_logFileDirectoryPathForSubsystem:category:
_logFilenameForSubsystem:category:
debugLogsEnabled
logFileOptions
outputDirectory
outputFilename
OSLogObject
shouldLog
shouldLogToDisk
setCategory:
environment
setEnvironment:
subsystem
setSubsystem:
writeToDisk
setWriteToDisk:
backingLogFileOptions
setBackingLogFileOptions:
backingOSLogObject
setBackingOSLogObject:
propertyAccessQueue
setPropertyAccessQueue:
setOutputDirectory:
setOutputFilename:
_writeToDisk
_category
_environment
_subsystem
_backingLogFileOptions
_backingOSLogObject
_propertyAccessQueue
_outputDirectory
_outputFilename
T@"SSLogFileOptions",&,N,V_backingLogFileOptions
T@"NSObject<OS_os_log>",&,N,V_backingOSLogObject
T@"NSObject<OS_dispatch_queue>",&,N,V_propertyAccessQueue
T@"NSString",C,N,V_category
TQ,N,V_environment
T@"NSString",C,N,V_outputDirectory
T@"NSString",C,N,V_outputFilename
T@"NSString",C,N,V_subsystem
TB,N,V_writeToDisk
T@"SSLogFileOptions",R,N
T@"NSObject<OS_os_log>",R,N
initWithApplicationIdentifier:
addApplicationState:
setNotRunningApplicationStates
setApplicationIdentifier:
applicationStates
setApplicationStates:
_applicationIdentifier
_applicationStates
T@"NSString",C,N,V_applicationIdentifier
T@"NSSet",C,N,V_applicationStates
allITunesIdentifiers
allITunesAccountNames
initWithCacheRepresentation:
newCacheRepresentation
familyMembers
setFamilyMembers:
iTunesAccountNames
setITunesAccountNames:
_familyMembers
_iTunesAccountNames
T@"NSArray",&,N,V_familyMembers
T@"NSArray",&,N,V_iTunesAccountNames
askToBuy
iCloudAccountName
setICloudAccountName:
iCloudIdentifier
setICloudIdentifier:
iTunesIdentifier
setITunesIdentifier:
isMe
setMe:
isSharingPurchases
setSharingPurchases:
_askToBuy
_firstName
_iCloudAccountName
_iCloudIdentifier
_iTunesIdentifier
_lastName
_sharingPurchases
T@"NSNumber",&,N,V_iTunesIdentifier
T@"NSNumber",&,N,V_iCloudIdentifier
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_iCloudAccountName
TB,N,GisMe,V_me
sharingPurchases
TB,N,GisSharingPurchases,V_sharingPurchases
TB,R,N,V_askToBuy
addNetworkType:
addUserDefaultState:
isCellularAllowed
isWiFiAllowed
unionPolicyRule:
setBatteryLevel:
cellularDataStates
setCellularDataStates:
setDownloadSizeLimit:
networkTypes
setNetworkTypes:
powerStates
setPowerStates:
registrationStates
setRegistrationStates:
timeLimitStates
setTimeLimitStates:
userDefaultStates
setUserDefaultStates:
_batteryLevel
_cellularDataStates
_downloadSizeLimit
_networkTypes
_powerStates
_registrationStates
_timeLimitStates
_userDefaultStates
Tq,N,V_downloadSizeLimit
T@"NSSet",C,N,V_networkTypes
T@"NSSet",C,N,V_userDefaultStates
cellularAllowed
TB,R,N,GisCellularAllowed
wiFiAllowed
TB,R,N,GisWiFiAllowed
Tf,N,V_batteryLevel
Tq,N,V_cellularDataStates
Tq,N,V_powerStates
Tq,N,V_registrationStates
Tq,N,V_timeLimitStates
initWithDownloadKind:URLBagType:
initWithNetworkConstraints:
setPolicyRule:
setPolicyRules:
unionNetworkConstraints:
_policyRuleForSizeLimit:
policyRules
_downloadKind
_policyRules
T@"NSString",R,N,V_downloadKind
Tq,R,N,V_bagType
T@"NSArray",C,N,V_policyRules
stringWithFormattedUsernameForString:username:
_attributedStringWithString:styles:
_styleDictionaryWithName:styles:
defaultAuthKitAuthenticationContext
authKitAuthenticationContextForAccount:
initWithServerResponse:
initWithServerResponse:buyParams:
accountHeader
buyParams
displayPrice
displayPriceLabel
explanation
paymentSummary
ratingHeader
ratingValue
salableIconURL
salableIconURLString
salableInfo
salableInfoLabel
setAccountHeader:
setDisplayPrice:
setExplanation:
setPaymentSummary:
setRatingHeader:
setRatingValue:
setSalableIconURLString:
setSalableInfo:
setStoreName:
storeName
_attributedStringForAttributedArray:
_attributedStringForAttributedDictionary:
_attributedStringForSalableInfoStringArray:
_attributedStringForString:
_attributedStringForStringArray:useGrey:
_confirmationTitleTypeForStringValue:
_displayPriceLabelForDisplayPrice:
_greyAttributedStringForAttributedString:range:
_inferSalableIconTypeWithBuyParams:
_parseResponse:
_attributedListForFlexList:
_payeeTypeForRequestorValue:
_payeeTypeInferredFromEnumeratedTitle
_replaceBreakingSpaceMarkupForMutableAttributedString:
_replaceMarkupForMutableAttributedString:markupType:
_salableIconTypeForString:
_salableInfoItemsToUppercase
_stringValuesToUppercase
_unlock
isApplePayClassic
setApplePayClassic:
shouldShowCardPicker
setShouldShowCardPicker:
attributedList
confirmationTitleType
setConfirmationTitleType:
countryCode
setCountryCode:
currencyCode
setCurrencyCode:
designVersion
setDesignVersion:
flexList
inlineImages
merchantSession
setMerchantSession:
payeeType
setPayeeType:
price
setPrice:
priceSectionItems
setPriceSectionItems:
salableIconType
setSalableIconType:
shouldSuppressPrice
setShouldSuppressPrice:
shouldUppercaseText
setShouldUppercaseText:
styles
setStyles:
titleType
setTitleType:
_applePayClassic
_shouldShowCardPicker
_shouldSuppressPrice
_shouldUppercaseText
_accountHeader
_buyParams
_displayPrice
_displayPriceLabel
_explanation
_paymentSummary
_ratingHeader
_ratingValue
_salableIconURL
_salableIconURLString
_salableInfo
_salableInfoLabel
_storeName
_attributedList
_confirmationTitleType
_countryCode
_currencyCode
_designVersion
_flexList
_inlineImages
_merchantSession
_message
_payeeType
_price
_priceSectionItems
_salableIconType
_styles
_titleType
T@"NSString",C,V_accountHeader
T@"NSArray",R,V_attributedList
T@"NSString",R,C,V_buyParams
Tq,V_confirmationTitleType
T@"NSString",C,V_countryCode
T@"NSString",C,V_currencyCode
T@"NSNumber",C,V_designVersion
T@"NSString",C,V_displayPrice
T@"NSAttributedString",R,C,V_displayPriceLabel
T@"NSString",C,V_explanation
T@"NSArray",R,V_flexList
T@"NSArray",R,C,V_inlineImages
applePayClassic
TB,GisApplePayClassic,V_applePayClassic
T@"NSDictionary",C,V_merchantSession
T@"NSString",C,V_message
Tq,V_payeeType
T@"NSString",C,V_paymentSummary
T@"NSString",C,N,V_presentingSceneIdentifier
T@"NSNumber",C,V_price
T@"NSArray",C,V_priceSectionItems
T@"NSString",C,V_ratingHeader
T@"NSString",C,V_ratingValue
Tq,V_salableIconType
T@"NSURL",R,C,V_salableIconURL
T@"NSString",C,V_salableIconURLString
T@"NSArray",C,V_salableInfo
T@"NSAttributedString",R,C,V_salableInfoLabel
TB,V_shouldShowCardPicker
TB,V_shouldSuppressPrice
TB,V_shouldUppercaseText
T@"NSString",C,V_storeName
T@"NSArray",C,V_styles
Tq,V_titleType
keybagOptions
setKeybagOptions:
T@"NSNumber",R,V_accountID
T@,C,V_contentIdentifier
Tq,V_options
ETagForAssetType:
setETag:forAssetType:error:
_initWithITunesMetadata:
isBeta
setBeta:
isPlaceholder
setPlaceholder:
isProfileValidated
setProfileValidated:
isLaunchProhibited
_beta
_etags
_placeholder
_profileValidated
_propertyValues
_launchProhibited
beta
TB,N,GisBeta,V_beta
TB,N,GisLaunchProhibited,V_launchProhibited
placeholder
TB,N,GisPlaceholder,V_placeholder
profileValidated
TB,N,GisProfileValidated,V_profileValidated
demoteApplicationWithBundleIdentifier:completionBlock:
getLibraryItemForBundleIdentifiers:completionBlock:
getLibraryItemsForITunesStoreItemIdentifiers:completionBlock:
getRemovableSytemApplicationsWithCompletionBlock:
hasDemotedApplicationsWithCompletionBlock:
isInstalledApplicationWithBundleIdentifier:completionBlock:
isRemovedSystemApplicationWithBundleIdentifier:completionBlock:
playableApplicationsWithBundleIdentifiers:completionBlock:
refreshReceiptsWithCompletionBlock:
restoreAllDemotedApplicationsWithOptions:completionBlock:
restoreDemotedApplicationWithBundleIdentifier:options:completionBlock:
restoreRemovedSystemApplicationWithBundleIdentifier:completionBlock:
_getItemsWithMessage:completionBlock:
_sendDemotionMessage:completionBlock:
isEqualToPurchase:
mediaType
setMediaType:
_mediaType
T@"NSString",C,N,V_mediaType
TB,N,GisPreauthenticated,V_preauthenticated
initWithRedeemCodes:
redeemCodes
startWithRedeemResponseBlock:
headless
setHeadless:
cameraRecognized
setCameraRecognized:
logCorrelationKey
setLogCorrelationKey:
params
setParams:
_redeemCodes
_headless
_cameraRecognized
_params
_logCorrelationKey
TB,V_headless
TB,V_cameraRecognized
T@"NSString",&,N,V_logCorrelationKey
T@"NSDictionary",&,N,V_params
extensionIdentifier
getVisibilityWithCompletionBlock:
response
setResponse:
T@"SSVPlaybackLeaseResponse",&,N,V_response
playbackLease:automaticRefreshDidFinishWithResponse:error:
playbackLeaseAutomaticRefreshDidFinish:
playbackLease:automaticRefreshDidFailWithError:
playbackLeaseDidEnd:
playbackLease:didEndWithReasonType:
_initSSVPlaybackLease
initWithLeaseConfiguration:
initWithURLBag:leaseType:
beginLeaseWithRequest:completionBlock:
cancelAllAssetRequests
certificateData
endLease
getAssetWithRequest:completionBlock:
getCertificateDataWithCompletionBlock:
preheatLeaseRequestsWithCompletionBlock:
refreshesAutomatically
refreshLeaseWithRequest:completionBlock:
setCertificateData:
setRefreshesAutomatically:
updateWithExternalLeaseResponseError:
_addOperationWithRequest:configurationURL:completionBlock:
_cancelRefreshTimer
_endLease
_fireRefreshTimer
_sendLeaseDidEndWithEndReasonType:
_shouldEndLeaseForError:returningEndReasonType:
_startRefreshTimerIfNecessary
_updateForLeaseResponse:error:
_updateWithLeaseResponseError:
_assetOperations
_fairPlaySubscriptionController
_lastKDLeaseRequest
_leaseDidEndNotificationToken
_leaseExpirationDate
_offlineSlotRequest
_operationQueue
_refreshesAutomatically
_refreshTimer
T@"<SSVPlaybackLeaseDelegate>",W
T@"NSData",C
readTokenFromBuffer:opaque:
readTokenFromBuffer:
readOpaqueTokenFromBuffer:
_initWithID:class:length:content:opaque:
tokenClass
length
content
mClass
mIdentifier
mLength
mContent
TC,R,VmClass
TQ,R,VmIdentifier
TQ,R,VmLength
Tr*,R,VmContent
nextToken
mReadPointer
mValue
TQ,R,VmValue
stringValue
T@"asn1Token",R,VmValue
codeResponses
dictionaryForCode:
errorForCode:
failedCodes
redeemedCodes
responseDictionaryForCode:
setCodeResponses:
setFailedCodes:
setRedeemedCodes:
_codeResponses
_errors
_redeemedCodes
isLocalReadable
getValueForDomain:key:usingBlock:
getValuesForDomain:keys:count:usingBlock:
removeAllValuesForDomain:
removeAllValuesForDomain:completionBlock:
removeAllValuesWithCompletionBlock:
setValue:forDomain:key:
setValue:forDomain:key:completionBlock:
setValuesWithDictionary:forDomain:
setValuesWithDictionary:forDomain:completionBlock:
accountDictionaries
removeAccountDictionaries
copyAccounts
isLocalWritable
iTunesValueForKey:usedDomain:
modifyUsingTransactionBlock:
readUsingSessionBlock:
removeAccountFromDomain:
_loadDatabaseIfNecessary
_useLocalRead
_useLocalWrite
localReadable
TB,R,GisLocalReadable
localWritable
TB,R,GisLocalWritable
initWithMaxSize:
count
allObjectsAndKeys
objectForKey:
removeAllObjects
setObject:forKey:
_addObject:forKey:
_count
_removeObjectForKey:
maxSize
accessQueue
setAccessQueue:
backingDictionary
setBackingDictionary:
backingList
setBackingList:
_maxSize
_backingDictionary
_backingList
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSMutableDictionary",&,N,V_backingDictionary
T@"SSDoubleLinkedList",&,N,V_backingList
TQ,R,N
TQ,R,N,V_maxSize
initWithObject:
initWithKey:object:
T@"<NSCopying>",W,N,V_key
playActivityEvents
setPlayActivityEvents:
_playActivityEvents
T@"NSArray",C,N,V_playActivityEvents
_rearrangeObjects:forCurrentIndex:
setMaxSize:
addObject:
allObjects
flush
_flush
currentIndex
setCurrentIndex:
buffer
setBuffer:
_currentIndex
_buffer
TQ,N,V_currentIndex
T@"NSMutableArray",&,N,V_buffer
TQ,N
errorHandler:handleSession:
errorHandlerDidDisconnect:
failureTypes
setFailureTypes:
stopWithCompletionBlock:
_dispatchToDelegate:
_openSessionWithMessage:
_reconnectToDaemonWithCompletionBlock:
_tearDownConnections
_failureTypes
T@"<SSErrorHandlerDelegate>"
receiptWithContentsOfFile:
_anchorTrust:toRootCertificateIn:
_checkArray:containsCertificateWithOID:
_checkIfCertificate:containsOID:
_copyCertificatesFromSignedData:
_decodeReceiptData:toDecodedMessage:
_extractSignedDataFromMessage:
_parseReceiptFromMessage:
_parseTokens:
_setPoliciesForTrust:
_verifySignatureForSignedData:onDate:
_cancellationReason
_receiptCreationDate
_renewalDate
T@"NSDate",R,V_expirationDate
migrate
merge:
merge:withEstimatedFileSizeLimit:
outputDirectoryForLogConfig:
removeLogsWithLogConfig:olderThanDate:
sendWriteAllLogsToDiskNotification
sendWriteAllLogsToDiskDecompressedNotification
_contentDictionaryForResponse:responseData:
_creatorDictionary
_dateFormatterForTimeZone:
_entriesArrayForTaskMetrics:requestData:responseData:
_entryDictionaryForTaskMetrics:requestData:responseData:
_headersArrayForHTTPHeaders:
_JSONObjectForEntries:
_JSONObjectForTaskMetrics:requestData:responseData:
_generateCommentsForTaskMetrics:
_localIPAddress
_requestDictionaryForTaskTransactionMetrics:requestData:
_responseDictionaryForTaskMetrics:responseData:
_stringFromDate:
_timeIntervalFromFilename:
initWithJSONObject:
initWithTaskMetrics:requestData:responseData:
JSONData
JSONObject
JSONString
writeToDiskError:
writeToDiskWithLogConfig:compressed:error:
backingJSONData
setBackingJSONData:
compressed
setCompressed:
_compressed
_backingJSONData
T@"NSData",&,N,V_backingJSONData
TB,N,V_compressed
performDefaultHandling
redirectToURL:
retry
_setControlConnection:
_setErrorProperties:
_setSessionID:
_ss_arrayByRemovingObjectsPassingTest:
_ss_filterUsingTest:
_ss_index:
_ss_map:
_ss_any:
_ss_firstObjectPassingTest:
initWithLeaseRequest:configuration:
initWithLeaseRequest:URLBag:
leaseRequest
_loadCertificateDataIfNecessary:
_resolveConfigurationAndURLReturningError:
_shouldRetryForError:
_bagKey
_request
_retryCount
T@"SSVPlaybackLeaseRequest",R,C
_initReadOnly:
initReadOnly
modifyAsyncUsingTransactionBlock:
readAsyncUsingSessionBlock:
_dispatchBlockAsync:
createSchemaInDatabase:
initWithDatabase:
copyAccountDictionaryForDomain:
copyDataForDomain:key:
copyValueForDomain:key:
existingEntityForDomain:key:
database
T@"SSSQLiteDatabase",R,N,V_database
sharedInstanceWithSessionDelegate:
initWithSessionDelegate:
values
sessionDurationLoadURL
samplingPercentageUsersLoadURL
samplingPercentageCachedResponsesLoadURL
sessionDurationPageRender
samplingPercentageUsersPageRender
update
updateQueue
setUpdateQueue:
cachedValues
setCachedValues:
isRunningTests
setRunningTests:
_runningTests
_updateQueue
_cachedValues
T@"SSCoalescingQueue",&,N,V_updateQueue
T@"NSDictionary",&,N,V_cachedValues
runningTests
TB,N,GisRunningTests,V_runningTests
accessToken
setAccessToken:
pageAccessToken
setPageAccessToken:
pageIdentifier
setPageIdentifier:
serviceIdentifier
setServiceIdentifier:
_accessToken
_pageAccessToken
_pageIdentifier
_serviceIdentifier
T@"NSString",C,N,V_pageAccessToken
T@"NSString",C,N,V_pageIdentifier
T@"NSString",C,N,V_accessToken
T@"NSString",C,N,V_serviceIdentifier
setData:forDomain:key:
numberFromHexDigits
initWithDownloadStatus:
downloadID
downloadPhaseIdentifierOverride
setDownloadPhaseIdentifierOverride:
downloadStatus
_downloadPhaseIdentifierOverride
_downloadStatus
T@"NSString",&,N,V_downloadPhaseIdentifierOverride
T@"<SSBookDownloadStatus>",R,N,V_downloadStatus
requestMessage
startWithStatusResponseBlock:
authenticatesIfNecessary
setAuthenticatesIfNecessary:
carrierBundleProvisioningStyle
setCarrierBundleProvisioningStyle:
localizedAuthenticationReason
setLocalizedAuthenticationReason:
_authenticatesIfNecessary
_carrierBundleProvisioningStyle
_localizedAuthenticationReason
TB,N,V_authenticatesIfNecessary
T@"NSString",C,N,V_localizedAuthenticationReason
Tq,N,V_carrierBundleProvisioningStyle
T@"NSString",C,N,V_reason
isRunningUnitTests
expireBackgroundTask
statementDidFinishAfterStepping:
statementHasRowAfterStepping:
_setTakesTaskCompletionAssertions:
_stepStatement:hasRow:didFinish:isCorrupt:
initWithDatabaseURL:
initWithDatabaseURL:readOnly:
initWithDatabaseURL:readOnly:protectionType:
accessDatabaseUsingBlock:
columnName:existsInTable:
countChanges
dispatchAfter:block:
dispatchBlockAsync:
dispatchBlockSync:
executeSQL:
newDispatchSourceWithType:
prepareStatementForSQL:cache:usingBlock:
setUserVersion:
setUserVersion:forDatabase:
userVersion
userVersionForDatabase:
beginTaskCompletionAssertion
endTaskCompletionAssertion
setTakesTaskCompletionAssertions:
takesTaskCompletionAssertions
_accessDatabaseUsingBlock:
_beginTaskCompletionAssertion
_closeDatabaseIfOpen
_endTaskCompletionAssertion
_openDatabaseIfNotOpen
_openFlags
_resetAndReopenDatabaseWithPath:
_resetCorruptDatabase
_resetDatabaseWithPath:
_statementForSQL:cache:
setupBlock
setSetupBlock:
_databasePath
_readOnly
_shouldAttemptToReopenDB
_isInTransaction
_protectionType
_setupBlock
_statementCache
_takesTaskCompletionAssertions
_taskAssertionCount
T@?,C,N,V_setupBlock
initWithDataRepresentation:
dataRepresentation
isInternalBuild
persistentID
_mutableCopyClass
containerIDs
containerType
displayType
endReasonType
enqueuerProperties
eventDate
eventType
eventTimeZone
featureName
householdID
itemIDs
itemDuration
itemEndTime
itemStartTime
itemType
lyricsDisplayedCharacterCount
lyricsLanguage
isOffline
isPrivateListeningEnabled
reasonHintType
recommendationData
requestingBundleIdentifier
requestingBundleVersion
isSBEnabled
isSiriInitiated
sourceType
timedMetadata
trackInfo
containerID
externalID
personalizedContainerID
storeID
_containerID
_containerIDs
_containerType
_displayType
_endReasonType
_enqueuerProperties
_eventDate
_eventTimeZone
_eventType
_externalID
_featureName
_householdID
_itemIDs
_itemDuration
_itemEndTime
_itemStartTime
_itemType
_lyricsDisplayedCharacterCount
_lyricsLanguage
_persistentID
_personalizedContainerID
_reasonHintType
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_SBEnabled
_siriInitiated
_sourceType
_storeID
_timedMetadata
_trackInfo
_version
Tq,R,N,V_version
T@"NSString",R,C,N,V_buildVersion
T@"SSVPlayActivityEventContainerIDs",R,C,N,V_containerIDs
TQ,R,N,V_containerType
T@"NSData",R,C,N
T@"NSString",R,C,N,V_deviceName
TQ,R,N,V_displayType
TQ,R,N,V_endReasonType
T@"SSVPlayActivityEnqueuerProperties",R,C,N,V_enqueuerProperties
T@"NSDate",R,C,N,V_eventDate
TQ,R,N,V_eventType
T@"NSTimeZone",R,C,N,V_eventTimeZone
T@"NSString",R,C,N,V_featureName
T@"NSString",R,C,N,V_householdID
T@"SSVPlayActivityEventItemIDs",R,C,N,V_itemIDs
Td,R,N,V_itemDuration
Td,R,N,V_itemEndTime
Td,R,N,V_itemStartTime
TQ,R,N,V_itemType
TQ,R,N,V_lyricsDisplayedCharacterCount
T@"NSString",R,C,N,V_lyricsLanguage
TQ,R,N,V_mediaType
TB,R,N,GisOffline,V_offline
T@"NSNumber",R,C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TQ,R,N,V_reasonHintType
T@"NSData",R,C,N,V_recommendationData
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
SBEnabled
TB,R,N,GisSBEnabled,V_SBEnabled
siriInitiated
T@"NSNumber",R,C,N,GisSiriInitiated,V_siriInitiated
TQ,R,N,V_sourceType
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_storeFrontID
Tq,R,N,V_systemReleaseType
T@"NSData",R,C,N,V_timedMetadata
T@"NSData",R,C,N,V_trackInfo
T@"NSString",R,C,N,V_containerID
T@"NSString",R,C,N,V_externalID
internalBuild
TB,R,N,GisInternalBuild
T@"NSString",R,C,N,V_personalizedContainerID
T@"NSString",R,C,N,V_storeID
setContainerID:
setContainerIDs:
setContainerType:
setDisplayType:
setEndReasonType:
setEnqueuerProperties:
setEventDate:
setEventTimeZone:
setEventType:
setExternalID:
setFeatureName:
setHouseholdID:
setInternalBuild:
setItemIDs:
setItemDuration:
setItemEndTime:
setItemStartTime:
setItemType:
setLyricsDisplayedCharacterCount:
setLyricsLanguage:
setPersistentID:
setPersonalizedContainerID:
setReasonHintType:
setRecommendationData:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setSiriInitiated:
setSourceType:
setStoreID:
setTimedMetadata:
setTrackInfo:
setVersion:
T@"SSVPlayActivityEventContainerIDs",C,D,N
T@"SSVPlayActivityEnqueuerProperties",C,D,N
T@"NSDate",C,D,N
T@"NSTimeZone",C,D,N
T@"SSVPlayActivityEventItemIDs",C,D,N
TB,D,N,GisOffline
T@"NSNumber",C,D,N,GisPrivateListeningEnabled
T@"NSData",C,D,N
TB,D,N,GisSBEnabled
T@"NSNumber",C,D,N,GisSiriInitiated
TB,D,N,GisInternalBuild
copyDatabaseDictionaryToSetClientDictionary:
databasePropertyToGetClientProperty:
databasePropertyToSetClientProperty:
databaseValueForProperty:clientValue:
disambiguatedSQLForProperty:
foreignDatabaseColumnForProperty:
foreignDatabaseTableForProperty:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
joinClauseForProperty:
memoryEntityClass
_insertValues:intoTable:withPersistentID:database:
copyValuesForClientProperties:
copyXPCEncodedValuesForClientProperties:
deleteFromDatabase
initWithPersistentID:inDatabase:
initWithPropertyValues:inDatabase:
existsInDatabase
_copyTableClusteredValuesWithValues:
_deleteRowFromTable:usingColumn:
Tq,R,N,V_persistentID
bindToStatement:bindingIndex:
SQLForEntityClass:
SQLJoinClausesForEntityClass:
property
_property
T@"NSString",R,N,V_property
predicateWithProperty:equalToLongLong:
predicateWithProperty:equalToValue:
predicateWithProperty:value:comparisonType:
_comparisonTypeString
comparisonType
_comparisonType
Tq,R,N,V_comparisonType
T@,R,N,V_value
containsPredicateWithProperty:values:
containsPredicateWithProperty:query:queryProperty:
doesNotContainPredicateWithProperty:values:
isNegative
query
queryProperty
_negative
_query
_queryProperty
_values
negative
TB,R,N,GisNegative,V_negative
T@"SSSQLiteQuery",R,N,V_query
T@"NSString",R,N,V_queryProperty
T@"NSArray",R,N,V_values
isNotNullPredicateWithProperty:
isNullPredicateWithProperty:
matchesNull
_matchesNull
TB,R,N,V_matchesNull
predicateMatchingAllPredicates:
predicateMatchingAnyPredicates:
predicateWithProperty:values:comparisonType:
predicates
_combinationOperation
_predicates
T@"NSArray",R,N,V_predicates
initWithDatabase:descriptor:
bindToSelectStatement:bindingIndex:
copyEntityIdentifiers
copySelectSQLWithProperties:count:
countOfEntities
createTemporaryTableWithName:properties:count:
deleteAllEntities
enumerateMemoryEntitiesUsingBlock:
enumerateMemoryEntitiesWithProperties:usingBlock:
enumeratePersistentIDsUsingBlock:
enumeratePersistentIDsAndProperties:count:usingBlock:
queryDescriptor
_newSelectSQLWithProperties:count:
_descriptor
T@"SSSQLiteDatabase",R
T@"SSSQLiteQueryDescriptor",R
_newSelectSQLWithProperties:count:columns:
entityClass
setEntityClass:
limitCount
setLimitCount:
setMemoryEntityClass:
orderingClause
setOrderingClause:
orderingDirections
setOrderingDirections:
orderingProperties
setOrderingProperties:
predicate
setPredicate:
returnsDistinctEntities
setReturnsDistinctEntities:
_entityClass
_limitCount
_memoryEntityClass
_orderingClause
_orderingDirections
_orderingProperties
_predicate
_returnsDistinctEntities
T#,N,V_entityClass
T#,N,V_memoryEntityClass
Tq,N,V_limitCount
T@"NSString",C,N,V_orderingClause
T@"NSArray",C,N,V_orderingDirections
T@"NSArray",C,N,V_orderingProperties
TB,N,V_returnsDistinctEntities
T@"SSSQLitePredicate",C,N,V_predicate
anyInDatabase:predicate:
_aggregateValueForProperty:function:predicate:database:
countForProperty:predicate:database:
maxValueForProperty:predicate:database:
minValueForProperty:predicate:database:
queryWithDatabase:predicate:
queryWithDatabase:predicate:orderingProperties:
promiseWithResult:
promiseWithAll:
promiseWithAny:
_configureAllPromise:withResults:promises:currentPromiseIndex:
_configureAnyPromise:withPomises:currentPromiseIndex:
_errorIsCanceledError:
_finishPromise:withPromise:
isCancelled
isFinished
catchWithBlock:
thenWithBlock:
finishWithResult:
finishWithResult:error:
boolCompletionHandlerAdapter
errorOnlyCompletionHandlerAdapter
nilValueCompletionHandlerAdapter
_addBlock:orCallWithResult:
_isFinished
completionBlocks
setCompletionBlocks:
promiseResult
setPromiseResult:
stateLock
setStateLock:
_completionBlocks
_promiseResult
_stateLock
T@"SSPromiseCompletionBlocks",&,N,V_completionBlocks
T@"SSPromiseResult",&,N,V_promiseResult
T@"NSConditionLock",&,N,V_stateLock
cancelled
TB,R,N,GisCancelled
finished
TB,R,N,GisFinished
databaseEntityClass
defaultProperties
initWithDatabaseEntity:properties:
reloadFromDatabaseEntity:properties:
setValues:forProperties:count:
setValue:forExternalProperty:
setValues:forExternalProperties:count:
databaseID
setDatabaseID:
propertyValues
externalPropertyValues
_databaseID
_externalPropertyValues
Tq,N,V_databaseID
T@"NSDictionary",R,C,N,V_propertyValues
T@"NSDictionary",R,C,N,V_externalPropertyValues
downloadMetadataForItemIdentifier:
downloadsMetadata
transactionIdentifierForItemIdentifier:
responseMetrics
cancelsPurchaseBatch
setCancelsPurchaseBatch:
downloadIdentifiers
setDownloadIdentifiers:
purchase
setPurchase:
requestStartTime
setRequestStartTime:
responseEndTime
setResponseEndTime:
responseStartTime
setResponseStartTime:
setURLResponse:
_cancelsPurchaseBatch
_downloadIdentifiers
_purchase
_requestStartTime
_responseEndTime
_responseStartTime
_transactionIdentifiers
TB,N,V_cancelsPurchaseBatch
T@"SSPurchase",C,N,V_purchase
T@"SSURLConnectionResponse",&,N,V_response
T@"NSArray",C,N,V_downloadIdentifiers
Td,N,V_requestStartTime
Td,N,V_responseEndTime
Td,N,V_responseStartTime
T@"NSDictionary",&,N,V_tidHeaders
initWithEncodedDialog:
startWithAuthenticateResponse:
encodedDialog
T@"NSObject<OS_xpc_object>",R,N,V_dialog
authenticatedAccountIdentifier
setAuthenticatedAccountIdentifier:
performedButtonIndex
setPerformedButtonIndex:
selectedButtonIndex
setSelectedButtonIndex:
_authenticatedAccountIdentifier
_performedButtonIndex
_selectedButtonIndex
T@"NSNumber",C,N,V_authenticatedAccountIdentifier
Tq,N,V_performedButtonIndex
T@"NSURL",C,N,V_redirectURL
Tq,N,V_selectedButtonIndex
stream:handleEvent:
initWithReadStream:writeStream:runLoop:
close
_handleReceivedDataWithError:
_respondWithRequest:error:
_close
_errorResponseDataWithStatus:message:
_throttledWriteSpeed
_shouldKeepRunning
_writeResponseData:error:
_incommingHeadersComplete
_incommingMessage
_incommingMessageBody
_input
_output
_requestQueue
T@"<SSHTTPServerRequestHandlerDelegate>",W,N,V_delegate
flushPlayActivityEventsForEndPointIdentifier:withReplyBlock:
setRevision:revisionVersionToken:forEndpointIdentifier:withReplyBlock:
acquirePendingPlayActivityEventsForEndpointIdentifier:storeAccountID:shouldFilterStoreAccountID:withReplyBlock:
removePlayActivityEventsUptoRevision:withReplyBlock:
insertPlayActivityEvents:withReplyBlock:
completePendingPlayActivityEvents:forSessionToken:result:withReplyBlock:
_requiredEndpointIdentifiers
initWithWritingStyle:
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
acquirePendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
completePendingPlayActivityEventPersistentIDs:forSessionToken:withResult:completionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
getHasPendingPlayEventsForEndpointIdentifier:withCompletionHandler:
getRevisionInformationWithCompletionHandler:
getPlayActivityEventsFromRevision:toRevision:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
removeFlushedPlayActivityEventsWithCompletionHandler:
removePlayActivityEventsUpToRevision:withCompletionHandler:
setCurrentRevision:revisionVersionToken:forEndpointIdentifier:withCompletionHandler:
_acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:shouldFilterStoreAccountID:completionHandler:
_completePendingPlayEventsWithRevisionIndexSet:forSessionToken:withResult:completionHandler:
_daemonPlayActivityControllerConnection
_copyEndpointRevisionInformationForEndpointIdentifier:
_getFlushSessionInformationForEndpointIdentifier:shouldAcquire:storeAccountID:shouldFilterStoreAccountID:withCompletionHandler:
_loadEndpointIdentifierInformationIfNeeded
_revisionsIndexSetForPlayActivityEvents:
_revisionsIndexSetForPlayActivityEventPersistentIDs:
_sessionInformationForSessionToken:
_setEndpointRevisionInformation:forEndpointIdentifier:
_setupNotifyTokenIfNeeded
writingStyle
_debugLogOperationQueue
_endpointIdentifierToEndpointRevisionInformation
_endpointRevisionInformationDidChangeNotifyToken
_hasLoadedEndpointRevisionInformation
_hasSetupEndpointRevisionInformationDidChangeNotifyToken
_hasValidEndpointRevisionInformationDidChangeNotifyToken
_pendingFlushingSessions
_table
_writingStyle
TQ,R,N,V_writingStyle
additionalPendingRevisionsIndexSet
setAdditionalPendingRevisionsIndexSet:
currentRevision
setCurrentRevision:
revisionVersionToken
setRevisionVersionToken:
_additionalPendingRevisionsIndexSet
_currentRevision
_revisionVersionToken
T@"NSIndexSet",C,N,V_additionalPendingRevisionsIndexSet
TQ,N,V_currentRevision
T@"NSString",C,N,V_revisionVersionToken
endpointIdentifier
setEndpointIdentifier:
revisionsIndexSet
setRevisionsIndexSet:
sessionToken
setSessionToken:
_endpointIdentifier
_revisionsIndexSet
_sessionToken
T@"NSString",C,N,V_endpointIdentifier
T@"NSIndexSet",&,N,V_revisionsIndexSet
TQ,N,V_sessionToken
initWithManagerIdentifier:
addPurchases:withCompletionBlock:
cancelPurchases:withCompletionBlock:
getPurchasesUsingBlock:
insertPurchases:afterPurchase:withCompletionBlock:
managerIdentifier
movePurchases:afterPurchase:withCompletionBlock:
_handleMessage:fromConnection:
_handleAuthenticateRequest:fromConnection:
_handlePurchasesFinished:fromConnection:
_newEncodedArrayWithPurchaseIdentifiers:
_newEncodedArrayWithPurchases:
_reconnectForDaemonLaunch
_resultForReply:error:
_sendCompletionBlock:forGetPurchasesReply:
_sendCompletionBlock:forStandardReply:
_sendMessage:withPurchaseIdentifiers:afterPurchase:completionBlock:
_sendMessage:withPurchases:afterPurchase:completionBlock:
_shouldInvalidateSubscriptionStatusForPurchaseResponse:
_completionBlockQueue
_managerIdentifier
T@"<SSPurchaseManagerDelegate>"
initWithURLResponse:
actionData
actionName
protocolVersion
setActionData:
setActionName:
setProtocolVersion:
setWaitsForPurchaseOperations:
waitsForPurchaseOperations
startWithDetailedCompletionBlock:
_actionData
_actionName
_protocolVersion
_waitsForPurchaseOperations
acknowledged
acknowledgmentIdentifier
acknowledgmentVersion
displayed
setAcknowledged:
setAcknowledgmentIdentifier:
setAcknowledgmentVersion:
setDisplayed:
T@"NSString",&,N
_ss_altDSID
_ss_DSID
_ss_hashedDescription
_ss_isAppleAuthenticationAccount
_ss_isiCloudAccount
_ss_isIDMSAccount
_ss_isiTunesAccount
_ss_isLocalAccount
_ss_secureToken
_ss_setSecureToken:
_ss_isDuplicate:
T@"NSString",C,N,S_ss_setSecureToken:
reportingDictionary
setValue:forLocationKey:
valueForLocationKey:
locationPosition
setLocationPosition:
locationType
setLocationType:
_position
Tq,N,V_position
_parseJSONDictionary:
_valueForKey:fromDictionary:ofType:
accountStoreFrontIdentifier
setAccountStoreFrontIdentifier:
accountISO3Country
setAccountISO3Country:
entitledSubscriptions
setEntitledSubscriptions:
cachedTimestamp
setCachedTimestamp:
_accountStoreFrontIdentifier
_accountISO3Country
_entitledSubscriptions
_cachedTimestamp
T@"NSDate",C,N,V_cachedTimestamp
T@"NSNumber",C,N,V_accountStoreFrontIdentifier
T@"NSString",C,N,V_accountISO3Country
T@"NSArray",C,N,V_entitledSubscriptions
initWithResponseData:error:
currentText
setCurrentText:
currentVersionIdentifier
setCurrentVersionIdentifier:
requiresAuthentication
isUserAccepted
setUserAccepted:
_requiresAuthentication
_userAccepted
_versionID
userAccepted
TB,N,GisUserAccepted,V_userAccepted
T@"NSString",N,V_text
Tq,N,V_versionID
TB,R,N,V_requiresAuthentication
attachmentType
childAttachmentForRelationship:
enumerateChildAttachmentsUsingBlock:
setChildAttachment:forRelationship:
albumIdentifier
setAlbumIdentifier:
artists
setArtists:
assetData
setAssetData:
assetURL
setAssetURL:
attachmentDescription
setAttachmentDescription:
previewFrameTimestamp
setPreviewFrameTimestamp:
setUTI:
deletesAssetWhenFinished
setDeletesAssetWhenFinished:
_albumIdentifier
_artists
_assetData
_assetURL
_attachmentDescription
_childAttachments
_deletesAssetWhenFinished
_explicitContent
_previewFrameTimestamp
_subtitle
_uti
T@"NSArray",C,N,V_artists
T@"NSString",C,N,V_albumIdentifier
T@"NSString",C,N,V_attachmentDescription
TB,N,GisExplicitContent,V_explicitContent
T@"NSString",C,N,V_subtitle
T@"NSString",C,N,V_title
T@"NSData",C,N,V_assetData
T@"NSURL",C,N,V_assetURL
T@"NSString",C,N,V_uti
TB,N,V_deletesAssetWhenFinished
Td,N,V_previewFrameTimestamp
initWithLookupDictionary:
artwork
categoryNames
displayName
isPOIBased
numberOfUserRatingsForCurrentVersion
offers
productPageURL
userRating
userRatingForCurrentVersion
lookupDictionary
POIBased
TB,R,N,GisPOIBased
unsignedLongLongValue
isSubscribed
subscriptionExpirationDate
initWithUserDefaultsRepresentation:
copyUserDefaultsRepresentation
resetAccountBasedProperties
resetCarrierBundlingProperties
setSubscribed:
setSubscriptionExpirationDate:
setValuesUsingStatusDictionary:
isEqualToStatus:
_setSubscribed:
accountPermissions
setAccountPermissions:
accountStatus
setAccountStatus:
acceptedStoreTermsVersion
setAcceptedStoreTermsVersion:
carrierBundlingStatus
setCarrierBundlingStatus:
carrierBundlingErrorCode
setCarrierBundlingErrorCode:
cellularOperatorName
setCellularOperatorName:
isDiscoveryModeEligible
setDiscoveryModeEligible:
isFamilyOrganizer
setFamilyOrganizer:
isFamilySubscription
setFamilySubscription:
isFreeTrialIneligible
setFreeTrialIneligible:
hasFamily
setHasFamily:
hasFamilyMembers
setHasFamilyMembers:
hasOfflineSlots
setHasOfflineSlots:
latestStoreTermsVersion
setLatestStoreTermsVersion:
setPhoneNumber:
setRawResponseData:
isSubscriptionPurchaser
setSubscriptionPurchaser:
hasOfflineSlot
_accountPermissions
_accountStatus
_acceptedStoreTermsVersion
_carrierBundlingStatus
_carrierBundlingErrorCode
_cellularOperatorName
_discoveryModeEligible
_familyOrganizer
_familySubscription
_freeTrialIneligible
_hasFamily
_hasFamilyMembers
_hasOfflineSlots
_latestStoreTermsVersion
_rawResponseData
_subscriptionExpirationTime
_subscriptionPurchaser
_hasOfflineSlot
T@"NSArray",C,N,V_accountPermissions
Tq,N,V_accountStatus
TQ,N,V_acceptedStoreTermsVersion
Tq,N,V_carrierBundlingStatus
Tq,N,V_carrierBundlingErrorCode
T@"NSString",C,N,V_cellularOperatorName
discoveryModeEligible
TB,N,GisDiscoveryModeEligible,V_discoveryModeEligible
familyOrganizer
TB,N,GisFamilyOrganizer,V_familyOrganizer
familySubscription
TB,N,GisFamilySubscription,V_familySubscription
freeTrialIneligible
TB,N,GisFreeTrialIneligible,V_freeTrialIneligible
TB,N,V_hasFamily
TB,N,V_hasFamilyMembers
TB,N,V_hasOfflineSlots
TQ,N,V_latestStoreTermsVersion
T@"NSString",C,N,V_phoneNumber
T@"NSDictionary",C,N,V_rawResponseData
subscribed
TB,N,GisSubscribed
T@"NSDate",C,N
subscriptionPurchaser
TB,N,GisSubscriptionPurchaser,V_subscriptionPurchaser
TB,R,N,V_hasOfflineSlot
_parseDictionary:withCaseControl:
label
setLabel:
_label
T@"NSString",C,V_label
T@"NSString",C,V_price
getRed:green:blue:alpha:forColorKind:
URLWithHeight:width:
URLWithHeight:width:format:
URLWithHeight:width:cropStyle:format:
sharedManager
eventFromTimingData:task:
eventFromTimingData:task:error:
eventFromTimingData:requestProperties:task:error:
eventFromTimingData:delegate:task:error:
eventFromTimingData:delegate:session:task:error:
_legacyBagValueForKey:
_DNSServerIPAddresses
_messageSizeFromTask:isRequest:delegate:
_responseDateFromTask:delegate:
_shouldCreateLocalCache
_tidStateForTask:delegate:
_fetchedFromCache:
_fetchNetworkQualityReports
_randomDouble
_shouldCollectNetworkLogs
_bagPerformanceValuesWithDelegate:
_metricsDictionaryWithDelegate:
bagValueForKey:delegate:type:
_localTimeIntervalToServerTimeInterval:
_resolvedIPAddressFromTask:
_timingDataMetricToServerTimeInterval:
cache:willEvictObject:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:willCacheResponse:completionHandler:
httpArchiveBufferSize
setHttpArchiveBufferSize:
dataTaskWithRequest:delegate:
flushHTTPArchiveBuffer
_delegateForTask:
_logCacheHitForTask:metrics:
_PIDFromAuditTokenData:
_removeDelegateForTask:
_sendTimingDataForSessionTask:
_sessionWithDelegate:collectTimingData:
_sessionIDWithDelegate:collectTimingData:allowsTLSSessionTickets:
_sessionConfigurationWithDelegate:collectTimingData:allowsTLSSessionTickets:
_setDelegate:forTask:
_setSendTimingData:forSessionTask:
_setTaskMetrics:forSessionTask:
_shouldDisableCellularForDelegate:
_shouldRequireCelluarForDelegate:
_shouldEnableTLSSessionForDelegate:
_shouldSetCookiesForDelegate:
_taskMetricsForSessionTask:
_URLCacheForDelegate:
_URLCacheIDForDelegate:
_appendResponseData:forSessionTask:
_listenForLowMemoryWarning
_removeRecordResponseDataForSessionTask:
_removeResponseDataForSessionTask:
_requestDataForSessionTask:
_responseDataForSessionTask:
_saveHTTPArchiveBufferToDiskDecompressed:
_setRequestData:forSessionTask:
_shouldRecordResponseBodyForDataTask:
_logAPSResultsWithTask:
_setAPSTopicWithTask:
_shouldEnableAPSRWithTask:
_insertEventIntoDatabase:delegate:
customURLProtocols
setCustomURLProtocols:
eventQueue
setEventQueue:
httpArchiveBuffer
setHttpArchiveBuffer:
metricsController
setMetricsController:
requestData
setRequestData:
requestDataQueue
setRequestDataQueue:
taskMetrics
setTaskMetrics:
taskMetricsQueue
setTaskMetricsQueue:
responseData
setResponseData:
responseDataQueue
setResponseDataQueue:
recordResponseMap
setRecordResponseMap:
recordResponseQueue
setRecordResponseQueue:
sendTimingDataMap
setSendTimingDataMap:
sendTimingDataQueue
setSendTimingDataQueue:
sessions
setSessions:
sessionsQueue
setSessionsQueue:
taskDelegates
setTaskDelegates:
taskDelegatesQueue
setTaskDelegatesQueue:
_memoryPressureSource
_memoryPressureStatus
_memoryPressureCachedMaxSize
_customURLProtocols
_eventQueue
_httpArchiveBuffer
_metricsController
_requestData
_requestDataQueue
_taskMetrics
_taskMetricsQueue
_responseData
_responseDataQueue
_recordResponseMap
_recordResponseQueue
_sendTimingDataMap
_sendTimingDataQueue
_sessions
_sessionsQueue
_taskDelegates
_taskDelegatesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_eventQueue
T@"SSCircularBuffer",&,N,V_httpArchiveBuffer
T@"SSMetricsController",&,N,V_metricsController
T@"NSMutableDictionary",&,N,V_requestData
T@"NSObject<OS_dispatch_queue>",&,N,V_requestDataQueue
T@"NSMutableDictionary",&,N,V_taskMetrics
T@"NSObject<OS_dispatch_queue>",&,N,V_taskMetricsQueue
T@"NSMutableDictionary",&,N,V_responseData
T@"NSObject<OS_dispatch_queue>",&,N,V_responseDataQueue
T@"NSMutableDictionary",&,N,V_recordResponseMap
T@"NSObject<OS_dispatch_queue>",&,N,V_recordResponseQueue
T@"NSMutableDictionary",&,N,V_sendTimingDataMap
T@"NSObject<OS_dispatch_queue>",&,N,V_sendTimingDataQueue
T@"NSMutableDictionary",&,N,V_sessions
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionsQueue
T@"NSMapTable",&,N,V_taskDelegates
T@"NSObject<OS_dispatch_queue>",&,N,V_taskDelegatesQueue
T@"NSArray",C,N,V_customURLProtocols
hasSubscriptionLease
setHasSubscriptionLease:
hasSubscriptionSlot
setHasSubscriptionSlot:
_hasSubscriptionLease
_hasSubscriptionSlot
TB,N,V_hasSubscriptionLease
TB,N,V_hasSubscriptionSlot
shouldCollectTimingData
shouldCollectTimingDataWithSessionDelegate:
shouldCollectTimingDataWithSessionDuration:samplingPercentage:
shouldLogTimingMetrics
shouldReportCachedEvent
shouldReportCachedEventWithSamplingPercentage:
_setTimingMetricsWindowStartTime:
_timingMetricsWindowStartTime
appleTimingApp
apsRelayAttempted
apsRelayDidFallback
apsRelaySucceeded
apsRelayRequested
clientCorrelationKey
clientError
connectionEndTime
connectionInterface
connectionReused
connectionStartNStatRXBytes
connectionStartNStatTXBytes
connectionStopNStatRXBytes
connectionStopNStatTXBytes
connectionStartTime
connectionType
DNSServers
domainLookupEndTime
domainLookupStartTime
edgeNodeCacheStatus
fetchStartTime
networkQualityReports
originalApp
redirectCount
redirectEndTime
requestMessageSize
redirectStartTime
requestURL
resolvedIPAddress
responseDate
responseMessageSize
secureConnectionStartTime
TLSSessionTickets
setAppleTimingApp:
setApsRelayAttempted:
setApsRelayDidFallback:
setApsRelayRequested:
setApsRelaySucceeded:
setClientCorrelationKey:
setClientError:
setConnectionEndTime:
setConnectionInterface:
setConnectionReused:
setConnectionStartNStatRXBytes:
setConnectionStartNStatTXBytes:
setConnectionStopNStatRXBytes:
setConnectionStopNStatTXBytes:
setConnectionStartTime:
setConnectionType:
setDNSServers:
setDomainLookupEndTime:
setDomainLookupStartTime:
setEdgeNodeCacheStatus:
setFetchStartTime:
setNetworkQualityReports:
setOriginalApp:
setRedirectCount:
setRedirectEndTime:
setRedirectStartTime:
setRequestMessageSize:
setRequestURL:
setResolvedIPAddress:
setResponseDate:
setResponseMessageSize:
setSecureConnectionStartTime:
setTIDState:
setTLSSessionTickets:
setXPSessionDuration:
setXPSamplingForced:
setXPSamplingPercentageUsers:
setXPSamplingPercentageCachedResponses:
TIDState
xpSessionDuration
xpSamplingForced
xpSamplingPercentageUsers
xpSamplingPercentageCachedResponses
Td,N
T@"NSString",N
Td,N,SsetXPSessionDuration:
TB,N,SsetXPSamplingForced:
Td,N,SsetXPSamplingPercentageUsers:
Td,N,SsetXPSamplingPercentageCachedResponses:
actionTextForType:
formattedPrice
offerType
subscriptionType
getAdminStatusAndWaitWithOptions:resultBlock:
getAdminStatusWithOptions:resultBlock:
isCurrentUserAdmin
_adminStatusForAccountID:
_setAdminStatus:forAccountID:
_statusIsFresh:
refreshPeriod
setRefreshPeriod:
_refreshPeriod
Td,V_refreshPeriod
setHasEventType:
hasEventType
eventTypeAsString:
StringAsEventType:
setHasReasonHintType:
hasReasonHintType
reasonHintTypeAsString:
StringAsReasonHintType:
setSubscriptionAdamID:
setHasSubscriptionAdamID:
hasSubscriptionAdamID
setPurchasedAdamID:
setHasPurchasedAdamID:
hasPurchasedAdamID
setRadioAdamID:
setHasRadioAdamID:
hasRadioAdamID
setItemCloudID:
setHasItemCloudID:
hasItemCloudID
hasLyricsID
setEquivalencySourceAdamID:
setHasEquivalencySourceAdamID:
hasEquivalencySourceAdamID
setContainerAdamID:
setHasContainerAdamID:
hasContainerAdamID
hasGlobalPlaylistID
hasStationHash
hasStationStringID
setStationID:
setHasStationID:
hasStationID
hasCloudAlbumID
setCloudPlaylistID:
setHasCloudPlaylistID:
hasCloudPlaylistID
hasPlaylistVersionHash
setHasContainerType:
hasContainerType
containerTypeAsString:
StringAsContainerType:
setHasEndReasonType:
hasEndReasonType
endReasonTypeAsString:
StringAsEndReasonType:
setEventDateTimestamp:
setHasEventDateTimestamp:
hasEventDateTimestamp
hasFeatureName
setHasItemDuration:
hasItemDuration
setHasItemEndTime:
hasItemEndTime
setHasItemStartTime:
hasItemStartTime
setHasItemType:
hasItemType
itemTypeAsString:
StringAsItemType:
setHasMediaType:
hasMediaType
mediaTypeAsString:
StringAsMediaType:
setHasOffline:
hasOffline
setHasPersistentID:
hasPersistentID
setHasSourceType:
hasSourceType
sourceTypeAsString:
StringAsSourceType:
hasTimedMetadata
hasTrackInfo
hasRecommendationData
hasRequestingBundleIdentifier
hasRequestingBundleVersion
hasEnqueuerProperties
hasHouseholdID
setHasSiriInitiated:
hasSiriInitiated
hasEventTimeZoneName
setHasDisplayType:
hasDisplayType
displayTypeAsString:
StringAsDisplayType:
setCharacterDisplayedCount:
setHasCharacterDisplayedCount:
hasCharacterDisplayedCount
hasLyricLanguage
hasContainerID
hasPersonalizedContainerID
hasStoreID
hasExternalID
setTvShowPurchasedAdamID:
setHasTvShowPurchasedAdamID:
hasTvShowPurchasedAdamID
setTvShowSubscriptionAdamID:
setHasTvShowSubscriptionAdamID:
hasTvShowSubscriptionAdamID
setHasInternalBuild:
hasInternalBuild
setEventSecondsFromGMT:
setHasEventSecondsFromGMT:
hasEventSecondsFromGMT
subscriptionAdamID
purchasedAdamID
radioAdamID
itemCloudID
lyricsID
setLyricsID:
equivalencySourceAdamID
containerAdamID
globalPlaylistID
setGlobalPlaylistID:
stationHash
setStationHash:
stationStringID
setStationStringID:
stationID
cloudAlbumID
setCloudAlbumID:
cloudPlaylistID
playlistVersionHash
setPlaylistVersionHash:
eventDateTimestamp
eventTimeZoneName
setEventTimeZoneName:
characterDisplayedCount
lyricLanguage
setLyricLanguage:
tvShowPurchasedAdamID
tvShowSubscriptionAdamID
eventSecondsFromGMT
_characterDisplayedCount
_cloudPlaylistID
_containerAdamID
_equivalencySourceAdamID
_eventDateTimestamp
_eventSecondsFromGMT
_itemCloudID
_purchasedAdamID
_radioAdamID
_stationID
_subscriptionAdamID
_tvShowPurchasedAdamID
_tvShowSubscriptionAdamID
_cloudAlbumID
_eventTimeZoneName
_globalPlaylistID
_lyricLanguage
_lyricsID
_playlistVersionHash
_stationHash
_stationStringID
_internalBuild
Ti,N,V_eventType
Ti,N,V_reasonHintType
Tq,N,V_subscriptionAdamID
Tq,N,V_purchasedAdamID
Tq,N,V_radioAdamID
TQ,N,V_itemCloudID
T@"NSString",&,N,V_lyricsID
Tq,N,V_equivalencySourceAdamID
Tq,N,V_containerAdamID
T@"NSString",&,N,V_globalPlaylistID
T@"NSString",&,N,V_stationHash
T@"NSString",&,N,V_stationStringID
Tq,N,V_stationID
T@"NSString",&,N,V_cloudAlbumID
TQ,N,V_cloudPlaylistID
T@"NSString",&,N,V_playlistVersionHash
Ti,N,V_containerType
Ti,N,V_endReasonType
Td,N,V_eventDateTimestamp
T@"NSString",&,N,V_featureName
Td,N,V_itemDuration
Td,N,V_itemEndTime
Td,N,V_itemStartTime
Ti,N,V_itemType
Ti,N,V_mediaType
TB,N,V_offline
Tq,N,V_persistentID
Ti,N,V_sourceType
T@"NSData",&,N,V_timedMetadata
T@"NSData",&,N,V_trackInfo
T@"NSData",&,N,V_recommendationData
T@"NSString",&,N,V_requestingBundleIdentifier
T@"NSString",&,N,V_requestingBundleVersion
T@"SSVPBPlayActivityEnqueuerProperties",&,N,V_enqueuerProperties
T@"NSString",&,N,V_householdID
TB,N,V_siriInitiated
T@"NSString",&,N,V_eventTimeZoneName
Ti,N,V_displayType
Tq,N,V_characterDisplayedCount
T@"NSString",&,N,V_lyricLanguage
T@"NSString",&,N,V_containerID
T@"NSString",&,N,V_personalizedContainerID
T@"NSString",&,N,V_storeID
T@"NSString",&,N,V_externalID
Tq,N,V_tvShowPurchasedAdamID
Tq,N,V_tvShowSubscriptionAdamID
TB,N,V_internalBuild
Td,N,V_eventSecondsFromGMT
addOperation:
addOperations:waitUntilFinished:
addOperationWithBlock:
addBarrierOperation:
clearExpiredUpdateHistoryWithCompletionBlock:
getUpdatesWithCompletionBlock:
hideApplicationBadgeForPendingUpdates
reloadFromServerWithCompletionBlock:
removeUpdateBulletins
showApplicationBadgeForPendingUpdates
_calloutQueue
_didMigration
_mobileCoreServices
initWithCertificateURL:leaseURL:pastisKeyServerURL:provisionMachineURL:storeFrontSuffix:syncMachineURL:
initWithCertificateURL:leaseType:leaseURL:pastisKeyServerURL:provisionMachineURL:storeFrontSuffix:syncMachineURL:
initWithURLBagDictionary:leaseType:
beginLeaseURL
setBeginLeaseURL:
getAssetURL
setGetAssetURL:
leaseType
provisionMachineURL
setProvisionMachineURL:
refreshLeaseURL
setRefreshLeaseURL:
syncMachineURL
setSyncMachineURL:
setPastisCertificateURL:
setPastisKeyServerURL:
_beginLeaseURL
_getAssetURL
_provisionMachineURL
_refreshLeaseURL
_syncMachineURL
_pastisCertificateURL
_pastisKeyServerURL
Tq,R,N,V_leaseType
T@"NSURL",C,N,V_beginLeaseURL
T@"NSURL",C,N,V_certificateURL
T@"NSURL",C,N,V_getAssetURL
T@"NSURL",C,N,V_refreshLeaseURL
T@"NSURL",C,N,V_pastisCertificateURL
T@"NSURL",C,N,V_pastisKeyServerURL
T@"NSURL",C,N,V_provisionMachineURL
T@"NSURL",C,N,V_syncMachineURL
T@"NSString",C,N,V_storeFrontSuffix
authenticationPromptStyle
setAuthenticationPromptStyle:
fetchITunesAccountNames
setFetchITunesAccountNames:
_authenticationPromptStyle
_fetchITunesAccountNames
Tq,N,V_authenticationPromptStyle
TB,N,V_fetchITunesAccountNames
familyCircle
setFamilyCircle:
_familyCircle
T@"SSFamilyCircle",&,N,V_familyCircle
mediaKinds
notificationType
putParameters
setMediaKinds:
setNotificationType:
setPutParameters:
_copyParametersDictionary
environmentName
setEnvironmentName:
requestType
setRequestType:
_environmentName
_parameterDictionary
_requestType
T@"NSString",C,N,V_environmentName
Tq,N,V_requestType
T@"NSArray",R,V_sinfs
_copyWithClass:zone:
timeZone
_timeZone
T@"NSString",R,C,N,V_deviceGUID
T@"NSTimeZone",R,C,N,V_timeZone
setTimeZone:
uploadQueue:statusDidChangeForUploads:
uploadQueue:uploadsDidChange:
initWithUploadKinds:
addUploadObserver:
cancelAllUploadsWithCompletionBlock:
cancelUploads:completionBlock:
getUploadsWithCompletionBlock:
pauseAllUploadsWithCompletionBlock:
pauseUploads:completionBlock:
removeUploadObserver:
resumeAllUploadsWithCompletionBlock:
resumeUploads:completionBlock:
uploadKinds
_establishInboundConnection
_handleAddUploadsMessage:
_handleChangeUploadsMessage:
_handleInboundMessage:connection:
_handleRemoveUploadsMessage:
_outboundConnection
_sendObserversUploadsDidChange
_sendSimpleMessage:completionBlock:
_daemonLaunchToken
_inboundConnection
_uploadKinds
_uploads
initWithUpdateDictionary:
parentalControlsRank
installDate
setInstallDate:
updateDictionary
updateState
setUpdateState:
_installDate
_updateState
T@"NSDate",C,N,V_installDate
Tq,N,V_updateState
initWithXPCData:
bytes
_xpcData
T@"NSObject<OS_xpc_object>",R,N,V_xpcData
_copyWithClass:
adamID
_adamID
Tq,R,N,V_adamID
T@"NSString",R,C,N,V_cloudAlbumID
TQ,R,N,V_cloudPlaylistID
T@"NSString",R,C,N,V_globalPlaylistID
T@"NSString",R,C,N,V_playlistVersionHash
T@"NSString",R,C,N,V_stationHash
T@"NSString",R,C,N,V_stationStringID
Tq,R,N,V_stationID
setAdamID:
enumerateAccountSubscriptionStatusUsingBlock:
generateSubscriptionBagRequestWithAccountUniqueIdentifier:transactionType:machineIDData:returningSubscriptionBagData:error:
generateSubscriptionLeaseRequestWithAccountUniqueID:transactionType:certificateData:assetIDData:returningLeaseData:subscriptionBagData:error:
importSubscriptionKeyBagData:returningError:
importSubscriptionKeyBagData:leaseInfoData:returningError:
stopSubscriptionLease:
_hasValidSubscriptionStatusDidChangeNotifyToken
_subscriptionStatusDidChangeNotifyToken
newDefaultInstance
accountUniqueIdentifierKey
_createDatabaseDirectory
_setupDatabase:
modifyUsingAppPurchaseHistoryTransactionBlock:
readAsyncUsingTransactionBlock:
readUsingTransactionBlock:
currentAccountUniqueIdentifier
setCurrentAccountUniqueIdentifier:
localRevisionForAccountUniqueIdentifier:
setLocalRevision:forAccountUniqueIdentifier:
resetCacheForNewAccountID:
valueForDatabaseProperty:
setValue:forDatabaseProperty:
removeValueForDatabaseProperty:
allProperties:accountID:includingHidden:
allowsPromptingForPrivacyAcknowledgement
setAllowsPromptingForPrivacyAcknowledgement:
_allowsPromptingForPrivacyAcknowledgement
TB,N,V_allowsPromptingForPrivacyAcknowledgement
assetStoreFrontIdentifier
setAssetStoreFrontIdentifier:
_requestBodyData
_assetStoreFrontIdentifier
initWithLookupURL:unpersonalizedLookupURL:signedHeaders:signedQueryParameters:
initWithBagDictionary:
bagDictionary
lookupURLString
SAPContext
setSAPContext:
signedHeaders
signedQueryParameters
unpersonalizedLookupURLString
_lookupURLString
_sapContext
_signedHeaders
_signedQueryParameters
_unpersonalizedLookupURLString
T@"NSString",R,N,V_lookupURLString
T@"NSString",R,N,V_unpersonalizedLookupURLString
T@"NSArray",R,N,V_signedHeaders
T@"NSArray",R,N,V_signedQueryParameters
T@"<SSVSAPContext>",&,N,V_sapContext
supportsPlatformPredicate:
predicateForAccountIdentifier:
predicateForNotFirstParty
predicateForNotHidden
predicateForHasMessagesExtension
predicateForIs32BitOnly:
sortByDatePurchasedKey
allPropertyKeys
initWithPropertyValues:
datePurchased
isHidden
_tableName
initWithRedeemCodeDictionary:
code
codeType
allowsAutoSubmission
inputCode
setInputCode:
redeemCodeDictionary
_inputCode
T@"NSString",C,N,V_inputCode
initWithLookupItem:
allItemsFromDatabase:forAccount:sortedBy:sortAscending:
itemsFromDatabase:forAccount:matching:sortedBy:sortAscending:
sortByNameKey
companyName
contentRatingFlags
iconTitle
iconURL
isFamilyShareable
isHiddenFromSpringBoard
isNewsstand
longTitle
minimumOS
ovalIconURLString
supportsIPad
supportsIPhone
redownloadParams
humanReadableVersion
iTunesVersion
requiredCapabilitiesString
initWithIdentifier:cacheName:database:cacheEntryClass:
initWithIdentifier:cacheName:
statistics
clear
clearCacheForLookupKey:
clearRetiredData
cacheEntryForLookupKey:
setData:expiring:retiring:lookupKey:userInfo:
cacheEntryProperties:forLookupKeys:
maximumInlineBlobSize
setMaximumInlineBlobSize:
_maximumInlineBlobSize
_cacheName
_path
_persistentCache
_cacheEntryClass
TQ,N,V_maximumInlineBlobSize
initWithClaimStyle:
beginSuspendingSubscriptionStatusChangeNotifications
endSuspendingSubscriptionStatusChangeNotifications
removeUserDefaultsForAccountIdentifier:
sendChangeNotification
updateWithResponseDictionary:accountIdentifier:
_changeNotificationSuspensionAccessQueue
_sendChangeNotification
_fetchPersistentID:inDatabase:
initWithLookupKey:inDatabase:
setPersistentCache:
dataBlob:
observableWithObserver:
observableWithObservers:
sendCompletion
sendFailure:
sendResult:
subscribe:
_isComplete
setFailureError:
logKey
setLogKey:
observers
setObservers:
queuedResults
setQueuedResults:
sendMessageQueue
setSendMessageQueue:
_failureError
_logKey
_queuedResults
_sendMessageQueue
T@"NSError",&,N,V_failureError
T@"NSString",&,N,V_logKey
T@"NSMutableArray",&,N,V_observers
T@"NSMutableArray",&,N,V_queuedResults
T@"NSObject<OS_dispatch_queue>",&,N,V_sendMessageQueue
TB,R,N,GisComplete
safeKeyForKey:
_pathForKey:
_isFileNotFound:
setFilenameSafeKeys:
setData:forKey:
removeDataForKey:
dataForKey:
_safeKeys
getAllCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:
getCachedBiometricAuthenticationContextWithToken:evict:completionBlock:
getCachedBiometricHTTPHeadersWithToken:accountID:evict:completionBlock:
getConstraintsDictionaryForPurpose:completion:
getCurrentACLVersionWithCompletion:
getStateWithCompletionBlock:
renewPurchaseTokenWithAuthToken:completionBlock:
resetAccount:withCompletionBlock:
resetWithCompletionBlock:
setEnabled:withCompletionBlock:
setEnabled:withAuthToken:completionBlock:
setAllowed:completionBlock:
tokenUpdateDidFinishWithLogKey:completion:
tokenUpdateShouldStartWithLogKey:completion:
tokenUpdateStateWithCompletionBlock:
getIdentityMapCountWithCompletionBlock:
isIdentityMapValidForAccountIdentifier:completionBlock:
saveIdentityMapForAccountIdentifier:completionBlock:
_clientQueue
allUncachedImages:
allUncachedImages
clearCacheForAdamID:
setImageData:forAdamID:imageToken:
imageDataForAdamID:
purgeableSpace
purge:
_databaseCache
_purchaseHistoryDatabase
_installStatusForString:
_installTypeForString:
_stringForInstallStatus:
_stringForInstallType:
hardwareType
installError
installStatus
installType
jobID
setHardwareType:
setInstallError:
setInstallStatus:
setInstallType:
setJobID:
requiresDiagnosticSendingPermission
valueForHTTPHeader:
valueForQueryParameter:
dateUpdated
isAdmin
initWithAdminStatus:dateUpdated:
_admin
_dateUpdated
T@"NSDate",R,N,V_dateUpdated
admin
TB,R,N,GisAdmin,V_admin
newDefaultDatabaseCache
initWithSessionIdentifier:
_factoryForTypeIdentifier:
clearSession
addObject:withItemIdentifier:
removeObjectWithItemIdentifier:
cacheObjectWithItemIdentifier:
addCacheObjectFactory:
removeCacheObjectFactory:
_factories
cachedObjectWithDataRepresentation:typeIdentifier:
supportsTypeIdentifier:
cacheObjectTypeIdentifier
cacheObjectDataRepresentation
setPlist:
plist
initWithCacheObjectDataRepresentation:
_plist
initWithPostDescription:
postDescription
_postDescription
T@"SSVMediaSocialPostDescription",R,N,V_postDescription
initWithPlatformContext:
imageProfile
itemIdentifiers
bundleIdentifiers
setImageProfile:
setItemIdentifiers:
setBundleIdentifiers:
_setCaller:
_setUserAgent:
_callerValue
_enumerateQueryParametersUsingBlock:
_makeLocalJSSignRequest
_makeLocalMescalRequest
_makeLookupRequestWithPersonalizationStyle:
_URLBagContext
_additionalHeaderFields
_additionalParameters
_caller
_itemIdentifiers
_bundleIdentifiers
_imageProfile
_keyProfile
initWithItems:caller:version:
startWithAddItemsResponseBlock:
caller
T@"NSArray",R,C,V_items
T@"NSString",R,C,V_caller
T@"NSString",R,C,V_version
existsForAccountIdentifier:
deleteBackingStore
lastSyncTime
setLastSyncTime:
Tq,R,N,V_accountIdentifier
T@"NSNumber",C,N
startWithDialogResponseBlock:
textFieldValues
setTextFieldValues:
_textFieldValues
T@"NSArray",C,N,V_textFieldValues
cloudID
_cloudID
TQ,R,N,V_cloudID
T@"NSString",R,C,N,V_lyricsID
Tq,R,N,V_purchasedAdamID
Tq,R,N,V_radioAdamID
Tq,R,N,V_equivalencySourceAdamID
Tq,R,N,V_subscriptionAdamID
Tq,R,N,V_tvShowPurchasedAdamID
Tq,R,N,V_tvShowSubscriptionAdamID
setCloudID:
databasePathWithAccountIdentifier:
_migrate7000to7001InDatabase:
_migrate7001to7002InDatabase:
readFromBuffer:
_initWithType:typeVersion:contentToken:
typeVersion
contentToken
mType
mTypeVersion
mContentToken
TQ,R,VmType
TQ,R,VmTypeVersion
T@"asn1Token",R,VmContentToken
T@"NSString",R,D
TQ,R,D
simulateCrashWithFormat:
simulateCrashWithString:
startWithCapabilitiesResponseBlock:
_globalCanaryLock
globalEventCanary
setGlobalEventCanary:
appendPropertiesToBody:
allTableEntityPropertiesPermittedByConfiguration:
allTableEntityPropertiesPermittedByConfiguration:externalValues:
isBlacklistedByConfiguration:
_dictionaryRepresentationOfBody
millisecondsFromTimeInterval:
timeIntervalFromMilliseconds:
decorateReportingURL:
shouldSuppressDSIDHeader
_shouldSuppressDSIDHeader
T@"NSString",R,&,N,V_eventType
TB,R,N,V_shouldSuppressUserInfo
TB,R,N,V_shouldSuppressDSIDHeader
initWithStringRepresentation:valueType:
initWithStringRepresentation:valueType:defaultValue:
valueFromDictionary:
defaultValue
stringRepresentation
valueType
_defaultValue
_stringRepresentation
_valueType
T@"<NSObject>",R,N,V_defaultValue
T@"NSArray",R,N,V_stringRepresentation
TQ,R,N,V_valueType
initWithBodyDictionary:
connection
originalTime
setConnection:
setOriginalTime:
setTopic:
topic
baseVersion
eventVersion
setBaseVersion:
setEventVersion:
hostApplicationIdentifier
previousClientVersion
setClientVersion:
setHostApplicationIdentifier:
setPreviousClientVersion:
canaryIdentifier
setCanaryIdentifier:
addPropertiesWithDictionary:
propertyForBodyKey:
setOriginalTimeUsingDate:
setProperty:forBodyKey:
bodyDictionary
setShouldSuppressDSIDHeader:
_mutableBody
T@"NSDictionary",R,C,N,V_mutableBody
TB,N,V_shouldSuppressUserInfo
TB,N,V_shouldSuppressDSIDHeader
pageContext
pageDescription
pageID
pageType
pageURL
pixelRatio
screenHeight
screenWidth
setPageContext:
setPageDescription:
setPageID:
setPageType:
setPageURL:
setPixelRatio:
setScreenHeight:
setScreenWidth:
setWindowHeight:
setWindowOrientation:
setWindowWidth:
windowHeight
windowOrientation
windowWidth
appBundleId
setAppBundleId:
action
setAction:
_appBundleId
_action
T@"NSString",C,N,V_appBundleId
TQ,N,V_action
signatureWithData:error:
verifyData:withSignature:error:
_initSSVFairPlaySAPSession
initWithSSBag:SAPVersion:
initWithURLBag:SAPVersion:
initWithURLBagDictionary:SAPVersion:
_initWithURLBagInterpreter:SAPVersion:
establishSessionWithCompletionBlock:
primeSessionWithCompletionBlock:
SAPVersion
signData:completionBlock:
verifySignature:forData:completionBlock:
_establishContext
_loadCertificateData
_postExchangeData:
_primeTheConnection
_shouldRetrySAPOperationForError:
_signData:error:
_verifyPrimeResponse:
_verifySignature:forData:error:
urlBagInterpreter
useSharedBagInterpreter
setUseSharedBagInterpreter:
primed
_primed
_useSharedBagInterpreter
T@"SSVURLBagInterpreter",R,N,V_urlBagInterpreter
TB,N,V_useSharedBagInterpreter
TB,R,N,V_primed
isUbered
navigationType
pageHistoryDescription
pageRenderTime
referringAppName
referringURL
requestEndTime
serverApplicationInstance
serverTiming
setNavigationType:
setPageHistoryDescription:
setPageHistoryDescriptionWithIdentifiers:
setPageRenderTime:
setReferringAppName:
setReferringURL:
setRequestEndTime:
setServerApplicationInstance:
setServerTiming:
setUbered:
TB,N,GisCachedResponse
ubered
TB,N,GisUbered
_initStoreDownloadQueueResponse
initWithDictionary:userIdentifier:
initWithDictionary:userIdentifier:preferredAssetFlavor:
initWithError:userIdentifier:
errorForItemIdentifier:
keybag
rangesToLoad
setShouldCancelPurchaseBatch:
setTriggeredQueueCheck:
shouldCancelPurchaseBatch
triggeredQueueCheck
_errorWithFailureType:customerMessage:
setStoreCorrelationID:
_itemErrors
_keybag
_rangesToLoad
_shouldCancelPurchaseBatch
_triggeredQueueCheck
_storeCorrelationID
T@"NSOrderedSet",R
T@"NSString",V_storeCorrelationID
T@"NSError",&
T@"NSString",V_clientIdentifier
_eventsTableName
_migrateToVersion1
_migrateToVersion2
_migrateToVersion3
_pragmaValueForName:
countUnreportedEventsBefore:
deleteEventsInsertedBefore:
deleteReportedEvents
insertEventSummaries:error:
markEventsAsReported:
unreportedEventsForURL:since:suppressUserInfo:
unreportedEventsForURL:since:suppressDSID:
unreportedEventsSince:
unreportedEventURLsSince:
_collectUnreportedEventsFromDatabase:since:
_collectUnreportedPIDsFromDatabase:matchingReportURLString:since:suppressUserInfo:
_maximumUnreportedToSelect
reportingCanaryIdentifier
reportingJSON
_reportingDictionary
initWithRequestStyle:
JSONBodyData
propertyListBodyData
setValue:forBodyParameter:
applications
setApplications:
requestStyle
_applications
_backgroundRequest
_style
Tq,R,N,V_style
T@"NSNumber",C,N,V_accountID
T@"NSArray",C,N,V_applications
TB,N,GisBackgroundRequest,V_backgroundRequest
T@"NSArray",C,N,V_bundleIdentifiers
T@"NSArray",C,N,V_itemIdentifiers
callCompletionBlock:withPromiseResult:
callErrorBlock:withPromiseResult:
callSuccessBlock:withPromiseResult:
flushCompletionBlocksWithPromiseResult:
_shouldCallImmediately
initWithReportingURL:insertTimestamp:eventController:
initWithReportingURL:insertTimestamp:suppressUserInfo:eventController:
initWithReportingURL:insertTimestamp:suppressDSID:eventController:
anyUnreportedEvents
markEventsAsReported
sessionCanaryIdentifier
writeEventsToStream:
writeEventsToStream:uncompressedMaxSize:
_estimateSizeOfJsonObject:
_unreportedEvents
_writeString:toData:
_insertTimestamp
_reportingURL
_unreportedEventPIDs
_eventController
_sessionCanaryIdentifier
_suppressUserInfo
initToMemory
_initializeOutputStream
initToFileAtPath:append:
open
streamContentLength
streamStatus
streamError
write:maxLength:
hasSpaceAvailable
propertyForKey:
setProperty:forKey:
_consumeStreamOutput:
_setStreamError:context:
_backingStream
_stream
_streamContentLength
_streamError
_streamOutBuffer
_streamOutBufferSize
_transactionType
initWithPurchase:
purchaseResponse
_downloadMetadata
_purchaseResponse
T@"SSDownloadMetadata",R,N,V_downloadMetadata
T@"SSPurchaseResponse",R,N,V_purchaseResponse
executeBlock
queue
setQueue:
source
setSource:
_queue
_source
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,N,V_source
itemState
setItemState:
representativeTitle
setRepresentativeTitle:
statusString
setStatusString:
totalNumberOfItems
setTotalNumberOfItems:
transferTypes
setTransferTypes:
_itemState
_representativeTitle
_statusString
_totalNumberOfItems
_transferTypes
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_itemState
T@"NSString",C,N,V_representativeTitle
T@"NSString",C,N,V_statusString
Tq,N,V_totalNumberOfItems
TQ,N,V_transferTypes
downloadMonitor:didReloadWithItems:
getMonitorItemsWithCompletionBlock:
pauseMonitorItem:completionBlock:
prioritizeMonitorItem:completionBlock:
resumeMonitorItem:completionBlock:
_copyItemsWithReply:error:
_reloadForChangeNotification
T@"<SSDownloadMonitorDelegate>"
properties
_preferredAssetFlavor
T@"NSDictionary",R,N,V_properties
T@"NSString",C,N,V_preferredAssetFlavor
accountEventType
setAccountEventType:
setAccountEventTypeWithEventIdentifier:
getSubscriptionEntitlements:
getSubscriptionEntitlementsIgnoreCaches:entitlementsBlock:
_cachedSubscriptionEntitlements
_loadSubscriptionEntitlementsIgnoreCaches:error:
_setCachedSubscriptionEntitlements:
_cachedEntitlements
_logLevelFromString:
_stringFromLogLevel:
logLevel
logSubsystem
setLogLevel:
setLogSubsystem:
addFieldsFromPurchaseResponse:
newLoadAutomaticDownloadQueueOperation
addKeybagSyncToBody:
addGUIDToBody:
featureEnabledForBagKey:bagContext:error:
gzipData:
importKeybagSync:
lock
resolveBagURLForKey:bagContext:error:
requestIdentifier
setDownloadsMetadata:
setRequestIdentifier:
unlock
_handleResponse:
_loadDownloadsFromStart:toEnd:url:
_newURLOperationWithStartIdentifier:endIdentifier:url:
powerAssertionIdentifier
setPowerAssertionIdentifier:
_requestIdentifier
_mdSyncState
_requestURL
_powerAssertionIdentifier
T@"NSURL",C,N,V_requestURL
T@"NSMutableOrderedSet",R
T@"NSString",&,V_powerAssertionIdentifier
T@"NSString",C,N,V_storeCorrelationID
actionDetails
impressions
locationDescription
positionX
positionY
setActionDetails:
setImpressions:
setLocationDescription:
setLocationWithEventLocations:
setPositionX:
setPositionY:
setTargetIdentifier:
setTargetType:
setTargetURL:
targetIdentifier
targetType
targetURL
T@,&,N
generateSymbolicatedStackShot
generateSymbolicatedStackShotPromise
setName:
T@"NSString",C,N,V_name
authorizationDialogEventForParameters:
dialogIdForMetricsDictionary:
userActionDictionaryForBiometricMatchState:didBiometricsLockout:
userActionDictionaryForUserAction:didBiometricsLockout:
_dialogEventForBiometricAuthorizationWithDialogId:buyParams:matchState:topicName:userAgent:
_dialogEventForBiometricOptInWithResult:message:topicName:userAgent:error:
_dialogEventForPasswordAuthorizationWithDialogId:buyParams:topicName:userAgent:
_dialogEventForPaymentSheetPresentationErrorWithBuyParams:error:
_clientIdForMetrics
_clientIDForAccount:orUserID:
_mtTopicForBuyParams:
_adoptStatusFromUpload:
countOfBytesExpectedToSend
setCountOfBytesExpectedToSend:
countOfBytesSent
setCountOfBytesSent:
setPersistentIdentifier:
setState:
_uploadKind
_setUploadKind:
_countOfBytesExpectedToSend
_countOfBytesSent
_thumbnailImageURL
Tq,N,V_countOfBytesExpectedToSend
Tq,N,V_countOfBytesSent
Tq,N,V_persistentIdentifier
Tq,N,V_state
T@"NSURL",C,N,V_thumbnailImageURL
T@"NSString",C,N,S_setUploadKind:,V_uploadKind
enterType
setEnterType:
setEnterTypeWithLaunchReason:
exitType
exitURL
setExitType:
setExitTypeWithSuspendReason:
setExitURL:
jobManager:changedJobs:
jobManager:completedJobs:
jobManager:updatedProgressOfJobs:
jobManager:updatedStateOfJobs:
__app_cancelDownloads:completionBlock:
__app_convertOptions:
__app_downloadsForJobs:
__app_dispatchBlock:withError:
__app_extractJobIDsFromSoftwareDownloads:
__app_filterDownloads:withResult:
__app_finishDownloads:
__app_getAllDownloads
__app_insertDownloads:before:after:completionBlock:
__app_installManifest:completionBlock:
__app_newAssetWithDownloadAsset:assetType:
__app_newActivityWithDownload:
__app_newManifestWithType:
__app_pauseDownloads:completionBlock:
__app_resumeDownloads:completionBlock:
__app_setPropertiesForActivity:withDownload:
__app_sendDownloadsChanged:filterSoftware:
_jobManager
allNodes
appendNode:
appendObject:
insertNode:
insertObject:
removeAllNodes
removeNode:
head
setHead:
tail
setTail:
listIdentifier
setListIdentifier:
_head
_tail
_listIdentifier
T@"NSString",&,N,V_listIdentifier
TQ,R,N,V_count
T@"SSDoubleLinkedListNode",&,N,V_head
T@"SSDoubleLinkedListNode",&,N,V_tail
previous
setPrevious:
setObject:
next
setNext:
_previous
_next
T@"SSDoubleLinkedListNode",&,N,V_previous
T@,&,N,V_object
T@"SSDoubleLinkedListNode",&,N,V_next
impressionIdentifiers
setImpressionIdentifiers:
initWithJob:
_job
T@"ASDJob",R,N,V_job
mediaEventType
mediaURL
setMediaEventType:
setMediaURL:
_eventsDatabaseTableName
_propertiesDatabaseTableName
currentEventsRevision
setCurrentEventsRevision:
eventsRevisionVersionToken
insertPlayActivityEvent:withRevision:returningError:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
removePlayActivityEventsUpToRevision:returningError:
revisionsIndexSetForPlayActivityEvents:
revisionsIndexSetForPlayActivityEventPersistentIDs:
_getPlayActivityEvents:relevantRevisionsIndexSet:withStartRevision:endRevision:storeAccountID:shouldFilterStoreAccountID:additionalRevisionsIndexSet:ignoredRevisionsIndexSet:error:
_revisionsIndexSetUsingPersisentIDGenerationBlock:count:
_setValue:forDatabasePropertyKey:
_valueForDatabasePropertyKey:
leaseDuration
isOfflineSlotAvailable
leaseInfoData
subscriptionKeyBagData
KDMovieIdentifier
setKDMovieIdentifier:
offlineSlotAvailable
TB,R,N,GisOfflineSlotAvailable
T@"NSData",C,N,V_certificateData
TQ,N,V_kdMovieIdentifier
@16@0:8
v32@0:8@16@?24
v40@0:8@16q24@?32
v64@0:8@16@24@32@40@48@?56
v40@0:8@16@24@?32
v44@0:8@16q24B32@?36
v16@0:8
@"SSXPCConnection"
@"NSObject<OS_dispatch_queue>"
B20@0:8s16
v24@0:8@16
@?24@0:8@16
v24@0:8@"SSHTTPServerRequestHandler"16
@?<@"SSHTTPServerResponse"@?@"NSURLRequest">24@0:8@"NSString"16
s16@0:8
q16@0:8
v20@0:8s16
i16@0:8
B16@0:8
v28@0:8Q16i24
v20@0:8i16
v20@0:8B16
@"NSMutableDictionary"
@"NSMutableArray"
^{__CFSocket=}
@"NSRunLoop"
@20@0:8s16
^{__CFHTTPMessage=}16@0:8
@"NSData"
@"NSDictionary"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@24@0:8@"NSObject<OS_xpc_object>"16
@"NSObject<OS_xpc_object>"16@0:8
v32@0:8@16@24
@32@0:8@16@24
Q24@0:8@16
@32@0:8@16Q24
v24@0:8@?16
@"NSArray"
@40@0:8Q16Q24Q32
v32@0:8@"SSDownloadManager"16@"NSArray"24
v24@0:8@"SSDownloadManager"16
v32@0:8@"SSDownloadManager"16@"NSSet"24
@24@0:8Q16
v32@0:8^?16^v24
v24@0:8q16
@"SSDownloadManager"
^{__CFSet=}
@24@0:8^{_NSZone=}16
@"NSNumber"
@"NSString"
@24@0:8q16
B32@0:8@16@24
d16@0:8
B24@0:8^@16
@"SSDownloadMetadata"
@"SSDownloadStatus"
q24@0:8q16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8Q16
@"NSLock"
@24@0:8@?16
@"SSVSubscriptionStatus"
v36@0:8@16B24@28
@"SSVSubscriptionStatusRequest"
@"NSDate"
@?16@0:8
@48@0:8q16@24^d32^@40
d32@0:8q16@24
@40@0:8q16@24@32
d40@0:8q16@24@32
@"NSURL"
@"AVAssetResourceLoadingRequest"
@"<SSVSecureKeyDeliveryRequestOperationDelegate>"
@"SSVMediaContentTasteItem"
f16@0:8
v20@0:8f16
@"SSDownloadPhase"
@"NSError"
@"SSOperationProgress"
@"SSAuthenticationContext"
@32@0:8@16q24
@"SSURLRequestProperties"
@28@0:8@16B24
v24@0:8d16
@"NSHTTPURLResponse"
@"NSURLRequest"
@32@0:8@16^@24
v40@0:8@16@24@32
^{__CFURLStorageSession=}
@"SSVURLCacheConfiguration"
^{_CFURLCache=}
v32@0:8q16@?24
@"<SSRequestDelegate>"
@"NSObject<OS_dispatch_source>"
@"BKSProcessAssertion"
@"SSPromise"
Q24@0:8q16
v40@0:8Q16@24@?32
v48@0:8Q16q24Q32@?40
v28@0:8@16B24
@40@0:8@16@24^@32
@20@0:8i16
i24@0:8@16
{?="storeAccountID"b1"systemReleaseType"b1"privateListeningEnabled"b1"sBEnabled"b1}
@64@0:8@16@24@32@40@48@56
@72@0:8@16@24@32@40@48@56@64
@76@0:8@16@24@32@40@48@56@64B72
v32@0:8@"SSPurchaseManager"16@"NSArray"24
v32@0:8@?16@?24
@"NSMutableSet"
@"SSPurchaseManager"
@44@0:8@16@24Q32B40
@32@0:8@16#24
@"SSVSAPSignaturePolicy"
@40@0:8@16@24@32
v48@0:8@16@24@32@40
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v56@0:8@16@24@32@40@?48
@"NSData"40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"SSMetricsLoadURLEvent"32@"NSError"40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"SSHTTPArchive"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
@"NSNumber"16@0:8
@"SSBag"16@0:8
@"NSData"16@0:8
@"SSURLRequestProperties"16@0:8
@"NSURLCache"16@0:8
@24@0:8r^{_CFCachedURLResponse=}16
@"AKAppleIDSession"
@"NSMutableData"
@"SSVURLDataConsumer"
@"SSMetricsPageEvent"
@"SSVFairPlaySAPSession"
@"SSURLBag"
@"SSVURLBagInterpreter"
@"<SSVLoadURLOperationDelegate>"
@"SSBag"
@40@0:8@?16@?24@?32
@"SSDownloadPolicy"
@"SSItem"
@"SSItemOffer"
@"SSNetworkConstraints"
B48@0:8@16@24@32^@40
@"ACAccountStore"
@"ACAccount"
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v32@0:8@"SSURLConnectionRequest"16@"SSURLConnectionResponse"24
@"SSURLConnectionRequest"
q24@0:8@16
v28@0:8B16@20
v32@0:8@16q24
v32@0:8q16@24
@24@0:8^@16
@"NSObject<OS_dispatch_semaphore>"
@"SSVPlaybackLeaseConfiguration"
@"SSLogConfig"
@"UIViewController"
@40@0:8@16@24q32
v32@0:8@16^{_NSZone=}24
^{CGImage=}
B40@0:8@16@24^@32
B32@0:8^i16@24
v28@0:8I16@20
B28@0:8@16B24
@"NSSet"
@"SSMetricsConfiguration"
B24@0:8q16
@64@0:8@16@24@32@40@48^@56
B32@0:8@16^@24
@36@0:8@16B24@28
B48@0:8@16@24@32@40
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
@48@0:8@16@24@32q40
v36@0:8@16B24@?28
B36@0:8@16B24^@28
@"SSKeyValueStore"
@"SSAccount"
@"SSSoftwareUpdatesContext"
Q24@0:8Q16
@"SSSQLiteDatabase"
@32@0:8d16^@24
v32@0:8@16Q24
v40@0:8@16Q24@32
B32@0:8d16^@24
@"NSCountedSet"
@"SSVPushNotificationParameters"
@"SSItemOfferDeviceError"
@48@0:8@16@24@32@40
v32@0:8@?16@24
@32@0:8q16@24
@32@0:8@16B24B28
@"<SSBookDownloadQueue>"
v40@0:8@16q24@32
v32@0:8q16q24
@"SSProtocolConditionalContext"
I16@0:8
@32@0:8^{__CFBundle=}16^B24
B40@0:8^@16^@24@32
B32@0:8^I16^@24
@24@0:8^B16
@40@0:8@16@24^B32
v20@0:8I16
v36@0:8@16@24B32
^{__CFString=}16@0:8
@"CLLocation"
@"NSInputStream"
@"SSPlayInfoRequestContext"
@"SSPlayInfoResponse"
v32@0:8Q16@?24
@"ISPurchaseReceipt"
{CGSize=dd}16@0:8
@32@0:8{CGSize=dd}16
@40@0:8{CGSize=dd}16d32
@"SSPaymentSheet"
@"SSConsolidatedDialog"
@"NSObject<OS_xpc_object>"
v52@0:8@16@24@32B40@?44
v24@0:8:16
@"NSHashTable"
@"SSDownloadManagerOptions"
@"SSSilentEnrollmentContext"
v40@0:8@16i24i28@32
v40@0:8@"CTXPCServiceSubscriptionContext"16i24i28@"CTSuppServicesNotificationData"32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSError"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSString"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTRegistrationDisplayStatus"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTSignalStrengthInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTVoiceLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTEnhancedLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTEnhancedDataLinkQualityMetric"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTIMSRegistrationTransportInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSDictionary"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTCellInfo"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTNetworkList"24
v28@0:8@"CTXPCServiceSubscriptionContext"16B24
v36@0:8@"CTXPCServiceSubscriptionContext"16B24@"NSString"28
v32@0:8@"CTServiceDescriptor"16@"CTEncryptionStatusInfo"24
v32@0:8@"CTServiceDescriptor"16@"CTRatSelection"24
v32@0:8@"CTServiceDescriptor"16@"CTNRStatus"24
v32@0:8@"CTServiceDescriptor"16@"CTPlmnInfo"24
@"CoreTelephonyClient"
@"CTXPCServiceSubscriptionContext"
v40@0:8^@16r^@24Q32
v32@0:8r^@16Q24
v48@0:8^@16r^@24Q32q40
v32@0:8@16r*24
@"<SSDownloadHandlerDelegate>"
@52@0:8@16@24@32@40B48
@"SSDialog"
@24@0:8^^v16
@"SSURLBagContext"
@24@0:8r*16
v28@0:8i16@20
v28@0:8B16r*20
v32@0:8@"NSURLCredential"16@"NSURLAuthenticationChallenge"24
v24@0:8@"NSURLAuthenticationChallenge"16
@"SSDownloadAuthenticationSession"
@"FLFollowUpController"
@"SSItemImageCollection"
^{__CFArray=}
v40@0:8@16:24q32
:16@0:8
@40@0:8@16@24@?32
@"SSXPCServer"
@"NSFileHandle"
@"SSLogFileOptions"
@"NSOperation"
@"<SSEventMonitorDelegate>"
@24@0:8#16
B32@0:8^{sqlite3_stmt=}16@24
v40@0:8@16@24q32
v40@0:8^{sqlite3_stmt=}16@24@32
@24@0:8^{sqlite3_stmt=}16
@"SSLookupProperties"
@32@0:8q16q24
@"NSObject<OS_os_log>"
@40@0:8@16{_NSRange=QQ}24
@"NSAttributedString"
@"SSVPlaybackLeaseResponse"
B32@0:8@16^Q24
@"<SSVPlaybackLeaseDelegate>"
@"SSVFairPlaySubscriptionController"
@"SSVPlaybackLeaseRequest"
@"SSVRefreshSubscriptionRequest"
@"SSVBarrierOperationQueue"
@28@0:8r*16B24
@48@0:8Q16C24Q28r*36B44
C16@0:8
r*16@0:8
@"asn1Token"
v48@0:8@16r^@24Q32@?40
@"SSKeyValueStoreDatabase"
@"SSDoubleLinkedList"
@"<NSCopying>"
@"<SSErrorHandlerDelegate>"
B32@0:8^{__SecTrust=}16^{__CFArray=}24
B32@0:8^{__CFArray=}16^{__CFString=}24
B32@0:8^{__SecCertificate=}16^{__CFString=}24
^{__CFArray=}24@0:8^{SecCmsSignedDataStr=}16
B32@0:8@16N^^{SecCmsMessageStr}24
^{SecCmsSignedDataStr=}24@0:8^{SecCmsMessageStr=}16
B24@0:8^{SecCmsMessageStr=}16
B24@0:8^{__SecTrust=}16
q32@0:8^{SecCmsSignedDataStr=}16@24
d24@0:8@16
B24@0:8@?16
@20@0:8B16
@"SSCoalescingQueue"
B40@0:8@16@24@32
@"<SSBookDownloadStatus>"
B24@0:8^{sqlite3_stmt=}16
v48@0:8^{sqlite3_stmt=}16^B24^B32^B40
@24@0:8^{dispatch_source_type_s=}16
B32@0:8q16@24
^{sqlite3_stmt=}28@0:8@16B24
^{sqlite3=}
^{__CFDictionary=}
@"SSVPlayActivityEventContainerIDs"
@"SSVPlayActivityEnqueuerProperties"
@"NSTimeZone"
@"SSVPlayActivityEventItemIDs"
B48@0:8@16@24q32@40
@24@0:8@"NSString"16
B32@0:8@16@"NSString"24
B24@0:8@"NSDictionary"16
@"NSDictionary"24@0:8@"NSArray"16
@"NSObject<OS_xpc_object>"24@0:8@"NSArray"16
@32@0:8@"NSString"16@24
@"NSString"24@0:8@"NSString"16
@"NSSet"16@0:8
@"NSMutableDictionary"24@0:8@"NSDictionary"16
v32@0:8^{sqlite3_stmt=}16N^i24
@"SSSQLiteQuery"
@32@0:8r^@16Q24
B40@0:8@16r^@24Q32
v40@0:8r^@16Q24@?32
@"SSSQLiteQueryDescriptor"
@40@0:8r^@16Q24@32
v24@0:8#16
@"SSSQLitePredicate"
v48@0:8@16@24@32Q40
v40@0:8@16@24Q32
@"SSPromiseCompletionBlocks"
@"SSPromiseResult"
@"NSConditionLock"
v40@0:8^@16r^@24q32
@"SSPurchase"
@"SSURLConnectionResponse"
v32@0:8@"NSStream"16Q24
@28@0:8s16@20
q32@0:8@16^@24
^{__CFHTTPMessage=}
@"NSOutputStream"
@"NSMutableURLRequest"
@"<SSHTTPServerRequestHandlerDelegate>"
v48@0:8Q16@24@32@?40
v44@0:8@16Q24B32@?36
v48@0:8@16Q24Q32@?40
v32@0:8@"NSString"16@?<v@?@"NSError">24
v48@0:8Q16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"NSString"16Q24B32@?<v@?@"NSArray"Q@"NSError">36
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v48@0:8@"NSArray"16Q24Q32@?<v@?@"NSError">40
v40@0:8@16Q24@?32
v40@0:8Q16Q24@?32
v48@0:8@16B24Q28B36@?40
@"NSOperationQueue"
@"SSVPlayActivityTable"
@"NSXPCConnection"
@"NSIndexSet"
v48@0:8q16@24@32@?40
@"<SSPurchaseManagerDelegate>"
@40@0:8@16@24#32
B56@0:8^d16^d24^d32^d40@48
@40@0:8q16q24@32
@48@0:8q16q24@32@40
@56@0:8@16@24@32@40@48
Q36@0:8@16B24@28
@40@0:8@16@24Q32
d24@0:8d16
v32@0:8@"NSCache"16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@32@0:8@16^B24
@"SSCircularBuffer"
@"SSMetricsController"
@"NSMapTable"
B32@0:8d16d24
B24@0:8d16
@"SSVPBPlayActivityEnqueuerProperties"
{?="characterDisplayedCount"b1"cloudPlaylistID"b1"containerAdamID"b1"equivalencySourceAdamID"b1"eventDateTimestamp"b1"eventSecondsFromGMT"b1"itemCloudID"b1"itemDuration"b1"itemEndTime"b1"itemStartTime"b1"persistentID"b1"purchasedAdamID"b1"radioAdamID"b1"stationID"b1"storeAccountID"b1"subscriptionAdamID"b1"tvShowPurchasedAdamID"b1"tvShowSubscriptionAdamID"b1"containerType"b1"displayType"b1"endReasonType"b1"eventType"b1"itemType"b1"mediaType"b1"reasonHintType"b1"sourceType"b1"systemReleaseType"b1"internalBuild"b1"offline"b1"privateListeningEnabled"b1"sBEnabled"b1"siriInitiated"b1}
@72@0:8@16q24@32@40@48@56@64
@"SSFamilyCircle"
@32@0:8#16^{_NSZone=}24
r^v16@0:8
B52@0:8Q16I24@28^@36^@44
B68@0:8Q16I24@28@36^@44^@52^@60
@36@0:8@16@24B32
@"<SSVSAPContext>"
@44@0:8@16q24@32B40
@52@0:8@16q24@32@40B48
@48@0:8@16@24@32#40
@56@0:8@16d24d32@40@48
@"SSPersistentCache"
Q32@0:8@16@24
@"NSFileManager"
v44@0:8@16@24B32@?36
v28@0:8B16@?20
v36@0:8B16@20@?28
@"SSDatabaseCache"
@"SSAppPurchaseHistoryDatabase"
@28@0:8B16@20
@"<SSCacheObject>"32@0:8@"NSData"16@"NSString"24
B24@0:8@"NSString"16
@"SSVMediaSocialPostDescription"
@"SSVPlatformContext"
@40@0:8Q16Q24@32
@24@0:8d16
@40@0:8@16Q24@32
@"<NSObject>"
@"NSData"32@0:8@"NSData"16^@24
B40@0:8@"NSMutableData"16@"NSData"24^@32
@"SSVFairPlaySAPContext"
@"NSMutableOrderedSet"
@36@0:8@16q24B32
@44@0:8@16@24q32B40
@"SSMetricsEventTable"
@40@0:8@16q24@32
@44@0:8@16q24B32@36
@"SSMetricsEventController"
q32@0:8r*16Q24
q20@0:8B16
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@"SSPurchaseResponse"
@"<SSDownloadMonitorDelegate>"
@28@0:8B16^@20
@"SSVSubscriptionEntitlements"
@28@0:8Q16B24
@28@0:8q16B24
@56@0:8@16@24q32@40@48
@52@0:8B16@20@28@36@44
v32@0:8@"ASDJobManager"16@"NSArray"24
@"ASDJobManager"
@"SSDoubleLinkedListNode"
@"ASDJob"
B40@0:8@16Q24^@32
B72@0:8^@16^@24Q32Q40@48@56^@64
B80@0:8^@16^@24Q32Q40Q48@56@64^@72
B32@0:8Q16^@24
B84@0:8^@16^@24Q32Q40Q48B56@60@68^@76
@32@0:8@?16Q24
