@333?
 Cfff?o
 @33
A(knN
Ga==
33#@
>VUUA
L>fff?
<33s?
L=fff?
Bfff?
?333?333?333?333?
@A333?
Y>Vb
@333>
L?333?
MbP?
?ffffff
?333333
zt?333333
ffffff
yE>{
?333333
333333
@(#)PROGRAM:RoomScanCore  PROJECT:RoomScanCore-8.4
ff&?
?fff?
333C
333C
?NSt3__117bad_function_callE
St19bad_optional_access
?St12out_of_range
NSt3__111regex_errorE
St13runtime_error
St12length_error
St11logic_error
St9exception
St20bad_array_new_length
St9bad_alloc
q24@?0@"NSString"8@"NSString"16
operator+=
com.apple.RoomScanCore
RoomScanCore
PointCloud
LcnnDetector
OnlineFloorPlan
OfflineFloorPlan
RSCaptureSession
RSGenerationSession
RSValidation
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/range_helper.hpp
compute_range_inner
view shape should large equal 0 and less 
end should not be zero
at least step > 0
end >start
out ouf range
length > 0
consumer
producer
com.apple.roomscancore.debug_info_arframe_dump
com.apple.roomscancore.debug_info_image_dump
com.apple.roomscancore.debug_info_max_keyframe_fps
RoomScanCore.InternalInfoDumper
Live
MM_dd_yyyy_HH_mm_ss_SSS
%@/%@_fp_input.plist
keyframes
skipped
timestamp
video_timestamp
final
type
state
score
vioTrackingState
cameraTransform
intrinsics
cameraTrackingState
rawFeaturePointsCount
rawFeaturePoints
public.png
%@/%@_Image.plist
keyframe_index
cameraPose
width
height
data
depth
%@/%@_ARFrame.plist
keyframesCount
avail_mem
time_stamp
floorPlanDebug
config
keyframeDebug
coachingDebug
driftDebug
sysDebug
firstARFrameTime
fp_earlyout_accumulation
fp_earlyout_projection2DZ
fp_earlyout_wallOpeningDetect
fp_earlyout_consistency
fp_earlyout_curvedWall
fp_earlyout_windowDoorDetect
no_temporal_update
lcnn
consistency
scanui_formatter
filter_other_type_wall
height_estimator
door_window
opening_height_alignment
recessed_area_recon
parent_association
render
orthographic_v9.1.espresso.net
<_RSOrthographicDetector_DetectBox %p> { origin = < %.2f , %.2f > size = < %.2f x %.2f> }
windows
doors
openings
opendoors
%s%u
confidence
B24@?0@"_RSOrthographicDetector_DetectBox"8@"NSDictionary"16
q24@?0@"_RSOrthographicDetector_DetectBox"8@"_RSOrthographicDetector_DetectBox"16
image
logits_
offsets_box_
arg_reduce_core
slice
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/squeeze_helper.hpp
which_dim<dim
which_dim>=0
shape[which_dim]==1
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_equal.hpp
operator==
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/scatter_by_idx.hpp
scatter_by_idx
scatter target must not empty
dim of index not match
Cabinet
Refrigerator
Shelf
Stove
Sink
Washer
Toilet
Bathtub
Oven
Dishwasher
Table
Sofa
Chair
Fireplace
Stool
Screen
Cuboid
Stairs
BuildInCabinet
Storage
ChairGroup
LShapeGroup
UShapeGroup
FloorPlan
rawdetection
raw_online
raw_offline
conservative
aggressive
ultimate
wallaligned
lshaped
unknown
online
offline
identifier
logits
corners_status
edges_status
color
groups
boxes_dict
status
detectionsource
<RS3DObject %p> [id=%@ conf=%0.2f] %@ { position = < %.2f , %.2f , %.2f > dimension = < %.2f x %.2f x %.2f > color = < r=%.2f , g=%.2f , b=%.2f , a=%.2f > }
[3DOD] Warning: The corner array is not valid to convert to box3d.
description=RoomScanCore_Sim-8.4
ERROR [createWorkGroup]: Failed to set workgroup flags with error (%d)
.workloop
opening
window
door
opendoor
size of input shape vector is 0
size of input shape vector > current dim
com.apple.RoomScanCoreError
duplicate dim idx
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/transpose_helper.hpp
out of range
slice_by_axis
floorPlan
onlineAsset
geometryMeta
curved
bay_window_removal
temporalMeta
opening_height
deduplicate_opening_opendoor
doorWindowPostProcessor_mergeDoors
association
offlineDebug
origin
reflect
mirrorPoints
version
isCaptured
rawFloorPlan
inner
outer
begin
size
raw_size
pose
camera_height
camera_width
is_update
incremental_points
covering_hull_points
incremental_ids
mapping_interval
boundary_points
incremental_poses
doorWindowDetectionEnabled
objectBeautificationEnabled
chairBeautificationEnabled
standardizationEnabled
wallOpeningMergeEnabled
openingReplaceOpendoorEnabled
opendoorReplaceOpeningEnabled
nonUniformHeightEnabled
com.apple.RoomScanCore.offlineFloorPlanGeneration
offlineConfig
liveResultEnabled
textCoachingEnabled
onboardingEnabled
coachingMaxFrameRate
maxFramerate
mirrorDetectionEnabled
markerCoachingEnabled
doorWindowBeautificationEnabled
curvedWallEnabled
driftDetectionEnabled
doorReplaceOpeningEnabled
boundaryRefinementEnabled
bayWindowRecessedAreaEnabled
RSMemory_load_thr
RSC_FloorPlan_TG
com.apple.RoomScanCore.onlineFloorPlanGeneration
RSC_Coaching_TG
com.apple.RoomScanCore.Coaching
RSC_Mirror_TG
com.apple.RoomScanCore.mirrorPoint
RSC_ReadWrite_TG
com.apple.RoomScanCore.readWrite
v8@?0
count
points
pointsToWorld
semanticLabels
semanticVotes
colors
walls
open_doors
objects
curved_walls
map::at:  key not found
quad
conf
completed
occluded
groupId
wall_status
parent_wall_status
is_fake_wall
parentIdentifier
individualUpdate
edgeStates
edgeConfidence
polygon
polygon_edge_states
polygon_edge_score
appear_pose_pts
appear_major_views
lcnn_floorplan_fc2_
lcnn_floorplan_model.espresso.net
_computerDominantColor_RGB_Binning: based on RGB-binning, %u out of %lu with dominant color (%f,%f,%f)
_computerDominantColor_HSL_Binning: based on HSL-binning, %u out of %lu with dominant color (%f,%f,%f)
_computerDominantColor_Mean: %lu out of %lu with average color (%f,%f,%f)
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_isin.hpp
isin
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/construction.hpp
arange
empty range
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_concatenate.hpp
concatenate
at least 1 to concat
can not concat
assign_from
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/expression/exp_gather_by_idx.hpp
GatherByIdxExp
dim of source expression and index not match
None
Continue scanning
Slow down
Move further away
Move closer
Turn up the light
Low texture
normal
markers
Surface uuid is unique
Surface parentIdentifier is valid
Child meets geometry constraint to parent wall
Wall
Window
Door
Opening
OpenDoor
Unknown
q24@?0@"<RSKeyframe>"8@"<RSKeyframe>"16
Tensor
dim of the initializer list do not match expectation
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/list_initializer.hpp
nested_shape
empty initializer list
circle_center
starting_orientation
ending_orientation
radius
major_convex_hull
major_convex_hull_buffer
major_view_line
major_views
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../expression/../common/gather_scatter_dim_helper.hpp
gather dim should not be same!
indices shape should be same
scalar assign should create a storage first
v24@?0{LineSegment2D=}8
input_image
loi_input_2
jmap
jmap_peaks
lmap
cameraPositions
unordered_map::at: key not found
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../tensor/shape.hpp
Shape
shape[
 is 
 ,it should <= 6
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/../common/reduce_helper.hpp
format_reduce_axes
reduce axis larger than dim-1
duplicate axis in reduce axis
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/expand_dims_helper.hpp
the absolute value of axis should be less than dim
repeated axis
is_center_scale_updated
pixel_size
scale
shift
center
floor_height
ceiling_height
support_height
image_size
floor_ceiling_count
z_slice
intrinsic
image_resolution
bbox
boxes
group_type
group_id
recessed_walls
bay_windows
front_opening
q24@?0@"RS3DSurface"8@"RS3DSurface"16
shape
should smaller then
_RSNodeSampleMessageFrameAttachmentKey
_RSNodeSampleMessagePointCloudAttachmentKey
_RSNodeSampleMessageFloorPlanAttachmentKey
_RSNodeSampleMessageTemporalMetaAttachmentKey
_RSNodeSampleMessageGeometryMetaAttachmentKey
_RSNodeSampleMessageSemanticImageAttachmentKey
_RSNodeSampleMessageKeyFramesAttachmentKey
_RSNodeSampleMessageObjectsAttachmentKey
_RSNodeSampleMessageMirrorPointsAttachmentKey
lcnn_floorplan_offline_fc2_
lcnn_floorplan_offline_model.espresso.net
0_weight.npy
1_weight.npy
2_weight.npy
0_bias.npy
1_bias.npy
2_bias.npy
q24@?0@"RSKeyframeMeta"8@"RSKeyframeMeta"16
NoGroup
camera
depth_buffer
depth_buffer_width
depth_buffer_height
depth_confidence_buffer
semantic_label_buffer
semantic_label_buffer_width
semantic_label_buffer_height
semantic_confidence_buffer
vio_tracking_state
depthConfidence
semanticSegmentationBufferSampledForDepth
semanticSegmentationConfidenceBufferSampledForDepth
sceneColor
sceneCamera
trackingState
transform
vector
basic_string
runtime_err in 
init
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/tensor.hpp
operator=
empty tensor
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/broadcast_helper.hpp
init_internal
cannot broadcast
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/../expression/exp_element_binary.hpp
TensorBinaryExp
Binary Exp shape should equal
empty tensor in
broadcast_assign_continue
broadcast assign issue
broadcast_assign_stride
reshape
shape can only be -1 or integer between 1 and 
shape cannot be deduced
length not match, cannot reshape
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/io/wnpy.hpp
load_npy
Unable to open npy file 
load: fread failed
parse_npy_header
parse_npy_header: fread failed
parse_npy_header: failed to find 'fortran_order'
parse_npy_header: failed to find '('
parse_npy_header: failed to find ')'
[0-9][0-9]*
parse_npy_header: failed to find 'descr'
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../expression/../common/tile_helper.hpp
tile param should larger 0
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/expression/exp_tile.hpp
alias_type
tile cannot to it self
Detector init failed
pnp measurement: %@
Overall walls: %lu, openings: %lu, windows: %lu, doors: %lu, opendoors: %lu, consume: %lld
DoorWindow IOSurfaceCreate failure
DoorWindow input CVPixelBufferCreate failure
DoorWindow IOSurfaceCreate logitsMap %d failure
CVPixelBufferCreateWithIOSurface output logits failure (%d)
DoorWindow IOSurfaceCreate offsetsMap %d failure
CVPixelBufferCreateWithIOSurface output offsets failure (%d)
espresso_network_bind_cvpixelbuffer input failure (%d)
espresso_network_bind_cvpixelbuffer output logits failure (%d)
espresso_network_bind_cvpixelbuffer output offsets failure (%d)
Empty backbone infer result
Overall walls: %lu, openings: %lu, windows: %lu, doors: %lu, opendoors: %lu
Offline floorplan generator init failed
Online floorplan generator init failed
RSError: limited available memory: %{bytes}zu
Thermal state info in notification: %ld
RSError: kRSError_Runtime_CriticalThermalState
RSError: kRSError_Runtime_DriftDetection: %ld
Bad color value(s) encountered.
Surface count: %lu, uuid count: %lu
wall %s parentIdentifier is not nil
window %s parentIdentifier is nil
window %s parentIdentifier %s is not found in walls
door %s parentIdentifier is nil
door %s parentIdentifier %s is not found in walls
opening %s parentIdentifier is nil
opening %s parentIdentifier %s is not found in walls
openDoor %s parentIdentifier is nil
openDoor %s parentIdentifier %s is not found in walls
[%s] %s height exceeds height boundary of wall %s
[%s] %s is not on the same plane with wall %s
[%s] %s exceeds the XY boundary of wall %s
[Pass] %s
[Fail] %s
Network infer shape not match
Network tensor bind failure
Network infer failure
No candidate line
No candidate line after filtering
No valid candidate line
[3DOD Lshape merge] corner: %f, %f, %f, %f, %f, %f, %f, %f
[3DOD Lshape merge] skip merging due to inability
[3DOD Lshape merge] nearest_box1_corner_idx: %d, nearest_box2_corner_idx: %d
[3DOD Lshape merge] not l shape fill
[3DOD Lshape merge] before fill
[3DOD Lshape merge] skip filling the corner box
[3DOD Lshape merge] force merge extend corner
[3DOD Lshape merge] less point %lu
[3DOD Lshape merge] overlap ratio %f
[3DOD Lshape merge] skip filling the corner box because less points
[3DOD Lshape merge] after
[3DOD Lshape merge] 2D Overlap Ratio %f
[3DOD Lshape merge] history_l_shape_uuids_paired_ %lu
[3DOD Lshape merge] need_merge_list size %lu
[3DOD Lshape merge] merge previous pair
RSParentAssociation
RSOfflineGeometryCalculation
RSDriftDetection
RSSinkNode
RSBayWindowFPRemoval
RSNonUniformHeightEstimation
RSObjectAlign
RSNodeConnection
RSNodeOutputConsumer
NSObject
RSNodeInputProducer
RSKeyframeMetaExtend
RSInternalInfoDumper
RSOnlineFloorPlanGenerator
Debug
RSNode
RSNodeProtected
RSNodeInternal
_RSOrthographicDetector_DetectBox
RSOrthographicDetector
RSDoorWindowOnlineDetector
RS3DObject
NSCopying
NSSecureCoding
NSCoding
RSNodeMessage
RSNodeSampleMessage
RSNodeEventMessage
RSDeduplicateOpeningOpenDoor
RSStructurePostProcess
RSOfflineFloorPlanGenerator
RSWallOpeningOnlineOptimizer
RSMirrorPoint
RSAsset
RSRecessedAreaReconstructor
RSSubPointsLUT
RSTemporalMeta
RSFloorPlanRender
RSGenerationConfiguration
RSGenerationSession
RSCaptureConfiguration
RSCaptureSession
RSKeyframeMeta
RSKeyframeExtended
RSKeyframe
RSFloorPlan
RSOfflineProjection2DZNode
RSNodeOutput
RSNodeInput
RS3DSurface
RSSemanticImage
IOSurfaceBacking
RSWallOpeningOnlineDetector
RSScanUIFormatter
RSTextCoachingSignal
RSDriftDetectionSignal
RS3DMarker
RSMarkerSignal
RSPointCloudColorEstimator
RSValidation
RSOfflineKeyframeAccumulation
RSFloorPlanBoundaryRefinement
RSSourceNode
RS3DCurvedSurface
RSMajorViewInfo
RSPointCloud
RSKeyframeHeightBlob
RS3DObjectMerger
RSFloorPlanGeneratorBase
RSProjection2DZ
RSDoorWindowOfflineDetector
RSGeometryMeta
_RSCamera
RSCamera
RSCurvedWallDetection
RSBox3dSerialization
RSRecessedArea
RSOutsideObjectRemoval
RSMirrorDetection
RSDoorWindowPostProcessor
RSScanCoaching
RSOnlineOfflineAssociation
RSDataTypes
RSMarkerCoaching
RSWallOpeningOfflineDetector
RSGeometryCalculation
RSKeyframeAccumulation
RSOnlineCurvedWallFusion
RSGroupEdge
RSObjectAsset
_RSRawPointCloud
RSRawPointCloud
_RSFrame
RSFrame
RSOpeningHeightAlignment
T,R,N,V_reflect
.cxx_destruct
T@"NSArray",R,N
AlignWithWalls:objectAsset:worldPC:beautification:chairBeautification:
T@"RSNodeOutput",R,W,N,V_output
IOSurface
TB,N,GisWindowDoorDetectionEnabled,V_windowDoorDetectionEnabled
T#,R
TQ,R,N,V_height
T,N,V_circleCenter
T^{__CVBuffer=},N,V_depthBuffer
T,N,V_normal
Tf,N,V_floorSum
T,N,V_shift
Tr^,R,N
T,R,N
_angle_thr_side
T,VappearMajorViews
_camera
T,Vnormal
_center
T@"<RSCamera>",&,N,V_sceneCamera
_driftDetection
T@"<RSCaptureSessionDelegate>",W,N,V_delegate
_endOrientation
T@"<RSNodeInputProducer>",W,N,V_producer
_groups
T@"<RSPointCloud>",R,N
_incrementalIds
T@"<RSRawPointCloud>",R,N
_lastCameraPose
T@"NSArray",&,N,V_mirrorPoints
_maxKeyframeFPS
T@"NSArray",&,N,VbayWindows
_normal
T@"NSArray",&,N,Vdoors
_output
T@"NSArray",&,N,Vobjects
_prevInputDoors
T@"NSArray",&,N,Vopenings
_readWriteQueue
T@"NSArray",&,N,Vwalls
_rsOnlineOfflineAssociationCore
T@"NSArray",R,C,N
allKeys
T@"NSDictionary",&,N,V_groups
T@"NSDictionary",R,N,V_boxesDict
cameraPositions
T@"NSMutableArray",&,N,V_incrementalIds
cleanMajorViews
T@"NSMutableDictionary",&,N,V_mappingInterval
containsObject:
T@"NSString",&,Vdetection_source
doorWindowBeautificationEnabled
T@"NSString",R,N,V_text
T@"NSUUID",&,N,Videntifier
groupId
T@"NSUUID",&,N,Vsource_object_uuid
imageResolution
T@"NSUUID",R,N
initWithDictionary:withGroupId:
T@"RS3DSurface",W,Vparent
isOpeningReplaceOpendoorEnabled
T@"RSFloorPlan",R,N
isValidOpening:
T@"RSGeometryMeta",R,N
keyframeHeights
T@"RSNodeConnection",R,W,N
mappingInterval
T@"RSSemanticImage",R,N
merge_door_instances:withWall:mergedCloseDoors:mergedOpenDoors:
TB,N,GisBayWindowRecessedAreaEnabled,V_bayWindowRecessedAreaEnabled
newCommandQueue
TB,N,GisCurvedWallEnabled,V_curvedWallEnabled
numberWithChar:
TB,N,GisDoorWindowBeautificationEnabled,V_doorWindowBeautificationEnabled
objects
TB,N,GisLiveResultEnabled,V_liveResultEnabled
outputFloorPlan
TB,N,GisMirrorDetectionEnabled,V_mirrorDetectionEnabled
polygon
TB,N,GisObjectBeautificationEnabled,V_objectBeautificationEnabled
rawUpdateCursor
TB,N,GisOpendoorReplaceOpeningEnabled,V_opendoorReplaceOpeningEnabled
release
TB,N,GisStandardizationEnabled,V_standardizationEnabled
runWithPointCloud:geometryMeta:
TB,N,GisWallOpeningMergeEnabled,V_wallOpeningMergeEnabled
TB,N,V_enableARFrameDump
setBox:
TB,N,V_enableLiveDump
setColorBuffer:
TB,N,V_isCenterScaleUpdated
setDepthBuffer:
TB,N,Vstatus
setFloorHeight:
TB,R,N,GisAttached,V_attached
setSceneCamera:
TB,R,N,GisSourceNode
setWallsHeight:
TB,VisFakeWall
stringByAppendingPathComponent:
TC,N,Vtype
version
TI,R,N,V_dataType
.cxx_construct
T@"NSArray",&,N,Vcorners_status
AlignWithFloor:objects:
T@"RSFloorPlan",&,N,V_floorPlan
GetAllObjects
TB,N,GisChairBeautificationEnabled,V_chairBeautificationEnabled
ResizeObjects:
TB,N,V_isUpdate
T,N,V_center
T^{__CVBuffer=},N,V_colorBuffer
T,N,V_floorCeilingCount
Td,N,Vtimestamp
T,N,V_scale
Tf,VfloorHeight
T,N,Vcolor
_angle_thr_back
T,R,N,V_origin
_boundaryPoints
T,VappearPosePts
_ceiling_signal
T@"<RSCamera>",&,N,V_camera
_colors
T@"<RSCamera>",R,N
_enableLiveDump
T@"<RSFrame>",R,N
_floorPlanDebug
T@"<RSNodeOutputConsumer>",&,N,V_consumer
_height
T@"<RSRawPointCloud>",&,N,V_rawFeaturePoints
_keyframesDebug
T@"NSArray",&,N,V_markers
_markerCoaching
T@"NSArray",&,N,V_objects
_mirrorDetector
T@"NSArray",&,N,VcurvedWalls
_origin
T@"NSArray",&,N,Vlogits
_points
T@"NSArray",&,N,Vopendoors
_radius
T@"NSArray",&,N,VrecessedWalls
_render
T@"NSArray",&,N,Vwindows
_zSlice
T@"NSArray",R,N,Vedges_status
assignMajorConvexHull:withSize:
T@"NSDictionary",R,C,N,V_attachments
bundleForClass:
T@"NSDictionary",R,N,V_groups
channel
T@"NSMutableArray",&,Vchildren
clearGroupInfo:
T@"NSString",&,N,Vtype
dealloc
T@"NSString",R,C
encodeDepthPng:
T@"NSUUID",&,N,V_identifier
generateAnchors
T@"NSUUID",&,N,VparentIdentifier
imageOfChannel:
T@"NSUUID",&,N,Vtarget_object_uuid
initWithDevice:
T@"RS3DSurface",&,N,VfrontOpening
isOpendoorReplaceOpeningEnabled
T@"RSFloorPlan",&,N,V_rawFloorPlan
isProxy
T@"RSFloorPlanRender",&,N,V_render
isValidSurface:
T@"RSNodeConnection",R,N
major_view_line
T@"RSNodeInput",R,W,N,V_input
markers
T@"RSTemporalMeta",R,N
TB,N,GisBoundaryRefinementEnabled,V_boundaryRefinementEnabled
numberWithBool:
TB,N,GisDoorReplaceOpeningEnabled,V_doorReplaceOpeningEnabled
obj_wall_dists_
TB,N,GisDriftDetectionEnabled,V_driftDetectionEnabled
onlineRunWithFloorPlan:objects:pointCloud:geometryMeta:density:
TB,N,GisMarkerCoachingEnabled,V_markerCoachingEnabled
outputs
TB,N,GisNonUniformHeightEnabled,V_nonUniformHeightEnabled
rawSize
TB,N,GisOnboardingEnabled,V_onboardingEnabled
reflect
TB,N,GisOpeningReplaceOpendoorEnabled,V_openingReplaceOpendoorEnabled
runWithFloorPlan:majorViewInfo:
TB,N,GisTextCoachingEnabled,V_textCoachingEnabled
select:indices:
TB,N,V_enableARFrameDepth
setBayWindowRecessedAreaEnable:
TB,N,V_enableARFrameRGB
setCeilingVote:
TB,N,V_isCaptured
setCurvedWalls:
TB,N,VnormalizedOutput
setEnd:
TB,R
setObjectBeautificationEnabled:
TB,R,N,GisSinkNode
setUseFastMode:
TB,Vcompleted
setWithObjects:
TB,Voccluded
stringFromDate:
TI,N,VgroupId
windows
TI,VgroupId
TQ,N,V_begin
TQ,N,V_ceilingVote
TQ,N,V_coachingMaxFrameRate
TQ,N,V_end
TQ,N,V_floorVote
TQ,N,V_maxFramerate
TQ,N,V_rawSize
TQ,N,V_size
TQ,R
TQ,R,D,N
TQ,R,N
TQ,R,N,V_backingType
TQ,R,N,V_bytesPerRow
TQ,R,N,V_channel
TQ,R,N,V_size
TQ,R,N,V_width
T^,R,N
T^{?=[4]},R,N
T^{__CVBuffer=},N,V_depthConfidenceBuffer
T^{__CVBuffer=},N,V_sceneColorBuffer
T^{__CVBuffer=},N,V_semanticConfidenceBuffer
T^{__CVBuffer=},N,V_semanticLabelBuffer
T^{__CVBuffer=},R,N
T^{__IOSurface=},R,N
T^{opaqueCMSampleBuffer=},R,N,V_sampleBuffer
Tc,N,VindividualUpdate
Td,N,V_timestamp
Td,R,N
Tf,N,V_camH
Tf,N,V_camW
Tf,N,V_ceilingHeight
Tf,N,V_ceilingSum
Tf,N,V_confidence
Tf,N,V_endOrientation
Tf,N,V_floorHeight
Tf,N,V_pixelSize
Tf,N,V_radius
Tf,N,V_score
Tf,N,V_startOrientation
Tf,N,V_supportHeight
Tf,N,V_visualCeilingHeight
Tf,N,V_visualFloorHeight
Tf,N,Vconfidence
Tf,VceilingHeight
Tf,Vconfidence
Tf,Vdepth
Ti,N,V_imageSize
Ti,N,V_label
Ti,N,V_scale
Ti,N,V_zSlice
Ti,VparentWallStatus
Ti,VwallStatus
Tq,N,V_deviceOrientation
Tq,N,V_state
Tq,N,V_trackingState
Tq,N,V_type
Tq,N,V_vioTrackingState
Tq,R,N
Tq,R,N,V_state
Tq,R,N,V_version
Tr^c,R,N
Tr^f,R,N
T{?=[30]},V_samplePoints
T{?=[3]},N,V_intrinsics
T{?=[3]},R,N
T{?=[4]},N,V_cameraPose
T{?=[4]},N,V_pose
T{?=[4]},N,V_quad
T{?=[4]},N,V_referenceOriginTransform
T{?=[4]},N,VcameraPose
T{?=[4]},N,Vtransform
T{?=[4]},R,N
T{?=[4]},Vquad
T{?=[4c]},N,VedgeStates
T{?=[4f]},N,VedgeConfidence
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_box
T{CGSize=dd},N,V_imageResolution
T{CGSize=dd},R,N
UTF8String
UUID
UUIDString
_accMeta
_accumulator
_allKeyframes
_all_major_view_lines
_all_poses
_allocateBacking
_anchorBoxes
_area
_attached
_attachments
_backing
_backingType
_bayWindowRecessedAreaEnabled
_bay_window_depth_thr
_baywindowFPRemoval
_begin
_boundaryRefinement
_boundaryRefinementEnabled
_boundaryRefinementSemaphore
_box
_boxes
_boxesDict
_bufferDoorImage
_bufferHeightImage
_bufferImage
_bytesPerRow
_camH
_camW
_cameraImage
_cameraPose
_cameraPositions
_camera_positions
_ceilingHeight
_ceilingSum
_ceilingVote
_chairBeautificationEnabled
_channel
_circleCenter
_coachingDebug
_coachingMaxFrameRate
_coachingQueue
_coachingSemaphore
_coachingStartDate
_colorBuffer
_confidence
_configuration
_consumer
_coveringHullPoints
_ctx
_current_frame_recessed_area_list
_curvedWallDetector
_curvedWallEnabled
_curved_walls_pool
_dataType
_deallocateBacking
_debugDumper
_debugInfo
_deduplicateOpeningOpenDoor
_defaultBoxSizes
_defaultBoxStrides
_delegate
_density_map
_depthBuffer
_depthConfidenceBuffer
_detectedObjects
_detector
_deviceOrientation
_diffKeyframes
_distance
_doorImage
_doorReplaceOpeningEnabled
_doorWindowBeautificationEnabled
_doorWindowDetector
_doorWindowPostProcessor
_doors
_driftDebug
_driftDetectionEnabled
_enableARFrameDepth
_enableARFrameDump
_enableARFrameRGB
_enableOnboarding
_end
_estimateObjectColor:withPointCloud:method:
_estimateObjectsColor:withPointCloud:
_estimateSurfacesColor:withPointCloud:thickness:semanticLabel:method:sameLabelShareColor:
_filterThresholds
_firstARFrameTime
_firstCallTime
_firstKeyframeTime
_floorCeilingCount
_floorCeilingTime
_floorHeight
_floorPlan
_floorPlanForOffline
_floorSum
_floorVote
_floor_signal
_floorplan
_fpGenerator
_fpQueue
_fpSemaphore
_fpStartDate
_generationSemaphore
_generator
_geoMeta
_geometryEstimator
_handleMessage:fromInput:
_heightEstimation
_heightEstimator
_heightImage
_identifier
_image
_imageResolution
_imageSize
_img_sz_step
_importantClasses
_incrementalPoints
_incrementalPoses
_initParam
_initProcessor
_input
_inputSemanticsVersion
_intrinsics
_ioSurface
_isActiveWallEnabled
_isBayWindowRecessedAreaEnable
_isCameraPositionEnabled
_isCaptured
_isCenterScaleUpdated
_isChairBeautificationEnabled
_isCurvedWallEnabled
_isDoorReplaceOpeningEnabled
_isDoorWindowEnabled
_isEstimateFloorPlanColorEnabled
_isMarkerCoachingEnabled
_isNonUniformHeightEnabled
_isObjectBeautificationEnabled
_isOnline
_isOpendoorReplaceOpeningEnabled
_isOpeningReplaceOpendoorEnabled
_isStandardizationEnabled
_isUpdate
_keyframeHeights
_keyframeMeta
_keyframeOrderDict
_keyframeVoxelSet
_label
_lastARFrame
_lastKeyframeTime
_lastModelTime
_lastWalls
_last_frame_recall_idx
_last_signal
_lcnnDetector
_light
_liveResultEnabled
_loggingDirectory
_logitsMap
_logitsMapBuffers
_logitsMapIoSurfaces
_major_convex_hull
_major_convex_hull_buffer
_major_view_line
_major_views
_mappingInterval
_markerCoachingEnabled
_markerSignal
_markers
_maxDensity2d
_maxDensity3d
_maxFramerate
_maxModelFrameRate
_memoryMonitorSource
_memoryMonitorSuspended
_merger_for_close_door_window
_merger_for_open_door
_metas
_mirrorDetectionEnabled
_mirrorPointQueue
_mirrorPointSemaphore
_mirrorPoints
_net
_newKeyframes
_nonUniformHeightEnabled
_objAlign
_objectBeautificationEnabled
_objects
_offsetsMap
_offsetsMapBuffers
_offsetsMapIoSurfaces
_onboard
_onboardingEnabled
_onlineBayWindowConfig
_onlineCurvedWallFusion
_onlineDoorWindow
_onlineOfflineAssociation
_onlineWallOpeningConsistency
_online_config
_online_fusion
_online_refinement
_open_selector_for_door_window
_opendoorReplaceOpeningEnabled
_opendoors
_openingHeightAlignment
_openingReplaceOpendoorEnabled
_openings
_output_count
_overlap_thr
_parentAssociation
_pixelSize
_plan
_pointCloudColorEstimator
_pointsToWorld
_polygon
_polygonEdgeConfidence
_polygonEdgeStates
_pose
_prevFloorPlan
_prevInputWindows
_prevOutputFloorPlan
_processInfoThermalStateDidChangeNotification:
_processor
_producer
_projection_distance_thr_back
_projection_distance_thr_side
_projector
_quad
_queue
_rSDeduplicateOpeningOpenDoorCore
_rawFeaturePoints
_rawFloorPlan
_rawMappingInterval
_rawPoints
_rawSize
_rawUpdateCursor
_readwriteLock
_recessedAreaReconstructor
_recessed_area_pool
_referenceOriginTransform
_refinedFloorPlan
_reflect
_removeOutsideObject
_roomStandardizer
_rsParentAssociationCore
_sampleBuffer
_samplePoints
_save_group
_save_queue
_scale
_scanUiFormatter
_sceneCamera
_sceneColorBuffer
_score
_semLabels
_semVotes
_semanticConfidenceBuffer
_semanticLabelBuffer
_semanticMap
_semanticMapBuffer
_shift
_size
_skipCnt
_softmaxBuffer
_speed
_standardizationEnabled
_startOrientation
_state
_structurePostprocess
_supportHeight
_sysDebug
_text
_textCoaching
_textCoachingEnabled
_timestamp
_tracing_map
_trackingState
_type
_updateCursor
_updateKeyframeIds
_updateKeyframes
_version
_vioTrackingState
_visualCeilingHeight
_visualFloorHeight
_voxelSet
_wallOpeningDetector
_wallOpeningMergeEnabled
_wallThr
_wall_selector_for_door_window
_width
_windowDoorDetectionEnabled
_windows
_workgroupCoaching
_workgroupFloorPlan
_workgroupMirror
_workgroupReadWrite
_worldpc
accumulateWithKeyframesInWorld:voxelize:
addBoxesDict:forDictKey:
addEntriesFromDictionary:
addGroupId:forGroupType:
addInput:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addOutput:
aggregatePointCloud
alignBoxesToNearestWall:conservative:
allValues
allocWithZone:
appearMajorViews
appearPosePts
append:points:semanticLabels:semanticVotes:colors:
appendIncrementalPose:
appendVisualWallsForOpenings
apppendMajorConvexHull:
apppendMajorConvexHullBuffer:
apppendMajorViewLine:
apppendMajorViews:
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObjects:count:
assignBoundaryPoints:withSize:
assignCoveringHullPoints:withSize:
assignIdentifiersTo:
assignIncrementalPoints:withSize:
assignMajorConvexHullBuffer:withSize:
assignMajorViewLine:withSize:
assignMajorViews:withSize:
assignPolygon:polygonEdgeStates:polygonEdgeConfidence:count:
assignUuidsForNewObjects:withOldObjects:
attachWithError:
attached
attachments
autorelease
backingType
bayWindowRecessedAreaEnabled
bayWindows
beautifyObjects:withFloorPlan:
beautifyObjects:withFloorPlan:pointCloud:
begin
boolForKey:
boolValue
boundaryPoints
boundaryPointsCount
boundaryRefinementEnabled
box3dFromDictionary:
boxes3dFromDictionary:
boxesDict
bytes
bytesPerRow
camH
camW
camera
cameraImage
cameraPose
ceilingHeight
ceilingSum
ceilingVote
center
chairBeautificationEnabled
checkChildNodeGeometryConstraint:
checkParentIdentifierIsValid:
checkSurfaceUuidIsUnique:
children
circleCenter
class
cleanMajorConvexHull
cleanMajorConvexHullBuffer
cleanMajorViewLine
clear
clearIncrementalPoses
clipBoxes:
coachingMaxFrameRate
color
colorBuffer
colors
commandBuffer
commit
completed
computeCosPitchFromPose:intrinsic:
computeMirrorPoints:
confidence
conformsToProtocol:
connection
constrainHeightInFloorPlan:
constrainHeightOfSurfaces:byWalls:
consumeMessage:fromOutput:
consumer
convertLcnnResultTo3DSurface:withSurfaceType:scale:shift:
copy
copyWithZone:
corners_status
correctIntrinsics:
count
countByEnumeratingWithState:objects:count:
coveringHullPoints
coveringHullPointsCount
createDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentPoseSeeWall:intrinsic:
curvedWallEnabled
curvedWalls
cutOverlap:withRect:withIntersecRect:withUnionRect:
data
dataType
dataWithBytes:length:
date
debugDescription
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeFloatForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
deduplicateSurfaceUUIDInFloorPlan:
deduplicateUUIDInSurfaces:uuidSet:
defaultCenter
defaultManager
delegate
depth
depthBuffer
depthConfidenceBuffer
description
detachWithError:
detectDepthOnSurface:withPointCloud:
detectWithPointCloud:walls:lcnnOpenings:
detectWithPointCloud:walls:lcnnOpenings:isOnline:
detection_source
deviceOrientation
dictionary
dictionaryFromBox3d:
dictionaryFromBoxes3d:
dictionaryFromBoxes3dPointCloud:pointCloud:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
diffKeyframes
dimensions
doesNotRecognizeSelector:
doorImage
doorReplaceOpeningEnabled
doors
doubleForKey:
doubleValue
driftDetectionEnabled
dumpARFrame:withKeyFrames:withCameraPose:
dumpLastARFrameImage
edgeConfidence
edgeStates
edges_status
emitMessage:
enableARFrameDepth
enableARFrameDump
enableARFrameRGB
enableLiveDump
encodeBool:forKey:
encodeBytes:length:forKey:
encodeFloat:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodePng:
encodeRGBPng:withWidth:Height:
encodeToCommandBuffer:sourceTexture:destinationTexture:
encodeWithCoder:
endOrientation
errorWithDomain:code:userInfo:
estimateFloorPlanColor:withPointCloud:
estimateFloorPlanColor:withPointCloud:method:sameLabelShareColor:
exportAsset
extendSurface:byLength:
fileExistsAtPath:isDirectory:
fillWithDictionaryRepresentation:
filterBoxes:
filterEmptySurfaceInFloorPlan:
filterEmptySurfaces:
filterNoParentNodes:
filterOtherTypeWalls
filterOutPointsBeyondDistance:
filteredArrayUsingPredicate:
firstObject
floatValue
floorCeilingCount
floorHeight
floorPlan
floorSum
floorVote
frame
frontOpening
generateFloorPlanWithKeyframes:initialAsset:
generateFloorPlanWithKeyframes:initialAsset:error:
generateFloorPlanWithKeyframes:objects:
generateFloorPlanWithKeyframes:objects:error:
generateKeyframesMeta:
generateMirrorPointWithFrame:
geometryMeta
getBytes:bytesPerRow:fromRegion:mipmapLevel:
getBytes:length:
getDebugInfo
getDebugInfoWithConfig:OnlineDebug:
getDimension:dim:
getSurface_center:
getSurface_e_height:
getSurface_e_width:
getSurface_height:
getSurface_width:
getTransform:transform:
groups
hasBoxesDict:
hash
height
heightImage
identifier
imageSize
incrementalIds
incrementalPoints
incrementalPointsCount
incrementalPoses
individualUpdate
infer
init
initWithAllocedInput:
initWithArray:copyItems:
initWithBox:confidence:scale:label:
initWithBytesNoCopy:length:freeWhenDone:
initWithCoder:
initWithConfiguration:
initWithCount:points:semanticLabels:semanticVotes:colors:
initWithDevice:linearToGrayScaleTransform:sigma:
initWithDictionary:
initWithDictionaryRepresentation:
initWithDictionaryRepresentation:WithGroupId:
initWithDictionaryRepresentation:withGroupId:
initWithFloorPlan:
initWithFormat:arguments:
initWithFrame:
initWithGeometryMeta:
initWithHeight:width:channel:
initWithHeight:width:channel:backingType:
initWithHeight:width:channel:backingType:dataType:
initWithKeyFrames:
initWithKeyframe:
initWithKeyframes:enableCameraPosition:
initWithMirrorPoints:
initWithObjects:
initWithObjectsAndKeys:
initWithOrigin:reflect:
initWithOutput:input:
initWithPointCloud:
initWithPoints:count:
initWithPythonDictionary:
initWithSampleBuffer:attachments:
initWithSemanticImage:
initWithSuiteName:
initWithTemporalMeta:
initWithType:score:
initWithType:state:score:
initWithUUIDString:
input
inputSemanticsVersion
inputs
insertObject:atIndex:
intValue
integerValue
intrinsics
isAttached
isBayWindowRecessedAreaEnabled
isBoundaryRefinementEnabled
isCaptured
isCenterScaleUpdated
isChairBeautificationEnabled
isCurvedWallEnabled
isDoorReplaceOpeningEnabled
isDoorWindowBeautificationEnabled
isDoorWindowEnabled
isDriftDetectionEnabled
isEqual:
isEqualToRSGeometryMeta:
isEqualToRSPointCloud:
isEqualToRSSemanticImage:
isEqualToRSSubPointsLUT:
isEqualToRSTemporalMeta:
isEqualToString:
isFakeWall
isKindOfClass:
isLiveResultEnabled
isMarkerCoachingEnabled
isMemberOfClass:
isMirrorDetectionEnabled
isNonUniformHeightEnabled
isObjectBeautificationEnabled
isOnboardingEnabled
isSinkNode
isSourceNode
isStandardizationEnabled
isTextCoachingEnabled
isUpdate
isWallOpeningMergeEnabled
isWindowDoorDetectionEnabled
keyFrames
keyPathsForValuesAffectingConnection
label
lastObject
length
listenToAvailableMemory
listenToThermalState
liveResultEnabled
lmap
lmapOfWall
logFinalFloorPlan:
logKeyFrame:WithSkip:
logMemory:
logWithFrame:coaching:
logWithFrame:drift:
logits
major_convex_hull
major_convex_hull_buffer
major_views
make_corners_order_consistent_with_wall:withWalls:
make_merged_instance:withFirstPoint:withLastPoint:withConfidence:
mappingIntervalOfKeyframe:
markerCoachingEnabled
markerSignal
maxDensity2d
maxFramerate
mergeDoors:
mergeLShape:worldpc:objecttypes:
mergeLShapeCabinets:worldpc:
merge_doors_on_same_wall:
merger
mirrorDetectionEnabled
mirrorPoints
mutableCopy
nearest_wall_indices_
newKeyframes
newTextureWithDescriptor:iosurface:plane:
nmsBoxes:
nonUniformHeightEnabled
normal
normalizeSizesOfSurfaces:withLowerWidthThreshold:higherWidthThreshold:
normalizedOutput
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
objectAtIndex:
objectAtIndexedSubscript:
objectBeautificationEnabled
objectForKey:
objectForKeyedSubscript:
occluded
onboardingEnabled
opendoorReplaceOpeningEnabled
opendoors
openingReplaceOpendoorEnabled
openings
optimizeBbox:intersectWallsIndex:nearestWallId:conservative:
origin
output
overlap:
parent
parentIdentifier
parentWallStatus
parseNetOut
pathForResource:ofType:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pixelBuffer
pixelSize
pointCloud
pointCloudFromDictionary:
points
pointsToWorld
polygonEdgeConfidence
polygonEdgeStates
polygonSize
pose
postprocess
postprocessWithNetInput:
predicateWithBlock:
preprocessOnSurface:withPointCloud:
processFloorPlan:
processInfo
processWithFloorPlan:temporalMeta:geometryMeta:
processWithKeyframes:initialAsset:
processWithKeyframes:initialAsset:completionHandler:
processWithKeyframes:initialAsset:completionHandlerWithError:
processWithKeyframes:initialAsset:error:
processWithVoxelize:asPythonApproach:resample:
processWithVoxelize:asPythonApproach:resample:outlierRemove:
producer
projectDetectBoxesTo3dOnSurface:withPointCloud:
quad
radius
rawCount
rawFeaturePoints
rawFloorPlan
rawPoints
recessedWalls
referenceOriginTransform
refineBoundaryWithFrame:
removeAllObjects
removeInput:
removeMultiDetectionAcrossClassesWithOverlap:
removeMultiDetectionAcrossClassesWithOverlapOffline:
removeObject:
removeObserver:name:object:
removeOpenDoorPanelFp
removeOpenDoorPanelFpWithOpenDoors:andCloseDoors:
removeOutput:
render
renderSampleBuffer:fromInput:
replaceObjectAtIndex:withObject:
reset
resetAllSurfacesUpdateStatus
resetScanUIFormatter
resizeToHeight:width:channel:
respondsToSelector:
retain
retainCount
rotateAlongZAxis:
run:
runModelWithFrame:cameraPose:driftSignal:intrinsic:seeWall:
runPipelineOnSurface:withPointCloud:
runWithConfiguration:
runWithFloorCeilingCount:
runWithFloorPlan:
runWithFloorPlan:lmap:geometryMeta:
runWithFloorPlan:lmap:geometryMeta:temporalMeta:
runWithFloorPlan:objects:keyframes:
runWithFloorPlan:objects:pointCloud:geometryMeta:density:
runWithFloorPlan:pointCloud:temporalMeta:
runWithFloorPlan:pointCloud:temporalMeta:geometryMeta:semanticImage:doorImage:maxDensity:lmap:
runWithFloorPlan:rsFrame:
runWithFloorPlan:semanticImage:heightImage:geometryMeta:temporalMeta:
runWithFloorPlan:temporalMeta:
runWithFloorPlan:temporalMeta:geometryMeta:
runWithFloorplan:geoMetryMeta:
runWithFloorplan:needMerge:replaceOpendoorByOpening:replaceOpeningByOpendoor:replaceOpeningByDoor:
runWithFrame:cameraPose:driftSignal:
runWithFrame:keyframes:cameraPose:
runWithLcnnFloorPlan:onlineFloorPlan:objects:mirrorPoints:keyframes:pointCloud:
runWithOnlineFloorplan:offlineFloorplan:camDensity2D:geoMetryMeta:
runWithPointCloud:currentKeyframe:temporalMeta:floorPlan:lcnnOpenings:
runWithPointCloud:floorPlan:lcnnOpenings:
runWithPointCloud:temporalMeta:geometryMeta:
runWithSemanticImage:geometryMeta:
sampleBuffer
samplePoints
scale
sceneCamera
sceneColorBuffer
score
select:indices:from:
self
semanticConfidenceBuffer
semanticImage
semanticLabelBuffer
semanticLabels
semanticVotes
serailizeARFrameMeta:
session:didFailWithError:
session:didUpdateAsset:
session:didUpdateFloorPlan:
session:didUpdateMarkerCoaching:
session:didUpdateTextCoaching:
setAppearMajorViews:
setAppearPosePts:
setBayWindowRecessedAreaEnabled:
setBayWindows:
setBeautificationEnable:
setBegin:
setBoundaryRefinementEnabled:
setCamH:
setCamW:
setCamera:
setCameraPose:
setCeilingHeight:
setCeilingSum:
setCenter:
setChairBeautificationEnable:
setChairBeautificationEnabled:
setChildren:
setCircleCenter:
setCoachingMaxFrameRate:
setColor:
setCompleted:
setConfidence:
setConsumer:
setCorners_status:
setCurvedWallEnable:
setCurvedWallEnabled:
setDateFormat:
setDelegate:
setDepth:
setDepthConfidenceBuffer:
setDetection_source:
setDeviceOrientation:
setDoorReplaceOpeningEnable:
setDoorReplaceOpeningEnabled:
setDoorWindowBeautificationEnable:
setDoorWindowBeautificationEnabled:
setDoorWindowEnable:
setDoors:
setDriftDetectionEnabled:
setEdgeConfidence:
setEdgeStates:
setEnableARFrameDepth:
setEnableARFrameDump:
setEnableARFrameRGB:
setEnableLiveDump:
setEndOrientation:
setEstimateFloorPlanColorEnable:
setFirstARFrame:
setFixedFloorPlanColor:withPointCloud:
setFloorCeilingCount:
setFloorPlan:
setFloorSum:
setFloorVote:
setFrontOpening:
setGroupId:
setGroups:
setHeightWithCeiling:floor:
setHighThreshold:
setIdentifier:
setImageResolution:
setImageSize:
setIncrementalIds:
setIndividualUpdate:
setIntrinsics:
setIsCaptured:
setIsCenterScaleUpdated:
setIsFakeWall:
setIsUpdate:
setLabel:
setLastARFrame:withCameraPose:
setLiveDumpEnable:
setLiveResultEnabled:
setLogits:
setLowThreshold:
setMappingInterval:
setMarkerCoachingEnable:
setMarkerCoachingEnabled:
setMarkers:
setMaxFramerate:
setMirrorDetectionEnabled:
setMirrorPoints:
setNonUniformHeightEnable:
setNonUniformHeightEnabled:
setNormal:
setNormalizedOutput:
setObject:forKey:
setObject:forKeyedSubscript:
setObjectBeautificationEnable:
setObjects:
setOccluded:
setOnboarding:
setOnboardingEnabled:
setOpendoorReplaceOpeningEnable:
setOpendoorReplaceOpeningEnabled:
setOpendoors:
setOpeningReplaceOpendoorEnable:
setOpeningReplaceOpendoorEnabled:
setOpenings:
setParent:
setParentIdentifier:
setParentWallStatus:
setPixelSize:
setPoints:semanticLabels:semanticVotes:colors:count:
setPose:
setProducer:
setQuad:
setRadius:
setRawFeaturePoints:
setRawFloorPlan:
setRawSize:
setRecessedWalls:
setReferenceOriginTransform:
setRender:
setSamplePoints:
setScale:
setScaleTransform:
setSceneColorBuffer:
setScore:
setSemanticConfidenceBuffer:
setSemanticLabelBuffer:
setShift:
setSize:
setSource_object_uuid:
setStandardizationEnable:
setStandardizationEnabled:
setStartOrientation:
setState:
setStatus:
setSupportHeight:
setTarget_object_uuid:
setTextCoachingEnabled:
setTimestamp:
setTrackingState:
setTransform:
setType:
setUpInternalDumpWithLogDir:enable:
setUsage:
setVioTrackingState:
setVisualCeilingHeight:
setVisualFloorHeight:
setWallOpeningMergeEnable:
setWallOpeningMergeEnabled:
setWallStatus:
setWalls:
setWindowDoorDetectionEnabled:
setWindows:
setWithArray:
setWithObject:
setZSlice:
setupHeight
setupRefinementProcessor:
shift
sinkNode
size
snapWallsWithFloorPlan:lmap:shift:scale:imageSize:
sortDescriptorWithKey:ascending:
sortKeyframeMetas:
sortKeyframesBySizeInDescendingOrder:
sortKeyframesByTimestamp:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sourceNode
source_object_uuid
standardUserDefaults
standardizationEnabled
standardizeFloorPlan:
startOrientation
state
status
stop
stringByAppendingString:
stringWithFormat:
stringWithUTF8String:
subarrayWithRange:
superclass
supportHeight
supportsSecureCoding
sz_major_convex_hull
sz_major_convex_hull_buffer
sz_major_view_line
sz_major_views
target_object_uuid
temporalMeta
text
textCoachingEnabled
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
thermalState
timeIntervalSinceDate:
timestamp
trackingState
transform
translateBy:
type
unsignedIntValue
unsignedIntegerValue
updateCoachingStateFirstKeyframe:
updateCoachingWithFrame:
updateCursor
updateDoorsHeight
updateFloorPlan:withRecessedArea:
updateFloorPlan:withRecessedAreas:
updateFloorPlanGeneratorWithConfiguration:
updateKeyframeHeights
updateKeyframeIds
updateMirrorPointWithFrame:
updateNodesHeight
updateObjects:
updateOpenDoorsHeight
updateOpeningsHeight
updateRecessedAreaPoolAndCurrentFrameWithWalls:windows:openings:doors:opendoors:
updateStructure:
updateSurfacesHeight:withCeiling:floor:
updateWallsHeight
updateWindowsHeight
updateWithFrame:
updateWithKeyframes:
updateWithObjects:
validateDepthOfRSFrame:
validateFloorPlan:
validateParentIdentifierOfWalls:
vioTrackingState
visualCeilingHeight
visualFloorHeight
waitUntilCompleted
wallOpeningMergeEnabled
wallStatus
walls
width
windowDoorDetectionEnabled
writeToFile:atomically:
zSlice
zone
@16@0:8
@40@0:8@16B24B28B32B36
v16@0:8
{RSParentAssociationCore="_vptr$RSParentAssociationCore"^^?"_matching_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
v24@0:8@16
@"RSGeometryMeta"
{?="margin"i"img_sz"i"use_pw_center"B"pw_center_update_rate"i"use_global_center"B"use_dynamic_pixel_sz"B"pixel_sz"f"hist_norm"B"z_slice"i"z_slice_pixel"f}
@96@0:8@16@24{?=[4]}32
{RSDriftDetectionCore="_vptr$RSDriftDetectionCore"^^?"_is_arTrackingStable"B"_is_vioTrackingStable"B"_is_first_wall_generated"B"_is_first_keyframe_generated"B"_enable_sample_colors"B"_ar_frames"{vector<rs_drift_detection::DriftFrameInternalWraper, std::allocator<rs_drift_detection::DriftFrameInternalWraper>>="__begin_"^{DriftFrameInternalWraper}"__end_"^{DriftFrameInternalWraper}"__end_cap_"{__compressed_pair<rs_drift_detection::DriftFrameInternalWraper *, std::allocator<rs_drift_detection::DriftFrameInternalWraper>>="__value_"^{DriftFrameInternalWraper}}}"_drift_detection_config"{DRIFT_DETECTION_CONFIG="xyz_speed_drift_thres"f"view_speed_drift_thres"f"feature_pts_match_thres"f"feature_pts_similarity_thres"f"flying_away_frames"f"flying_away_angle_thres"f"flying_away_xyz_speed_drift_thres"f"flying_away_view_speed_drift_thres"f"big_align_gap_wall_len_thres"f"big_align_gap_thres"f"big_align_gap_search_thres"f"big_align_area_thres"f"pose_get_stuck_eps"f"n_lost_track_thr"i}"_count_idx"Q"_ignore_idx"Q"_keep_frame_size"Q"_n_lost_track"Q}
B16@0:8
@24@0:8@16
@56@0:8@16@24@32@40@48
v20@0:8B16
{vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__value_"^}}
{NonUniformHeightEstimation="_floor_global_value"d"_ceiling_global_value"d"_line_points"{unordered_map<std::string, PointsLine, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, PointsLine>>>="__table_"{__hash_table<std::__hash_value_type<std::string, PointsLine>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, PointsLine>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, PointsLine>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, PointsLine>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, PointsLine>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, PointsLine>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_individual_wall_height"{unordered_map<std::string, IndividualWallHeightStruct, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, IndividualWallHeightStruct>>>="__table_"{__hash_table<std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, IndividualWallHeightStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_valid_line_segments"{vector<SegmentsInfo, std::allocator<SegmentsInfo>>="__begin_"^{SegmentsInfo}"__end_"^{SegmentsInfo}"__end_cap_"{__compressed_pair<SegmentsInfo *, std::allocator<SegmentsInfo>>="__value_"^{SegmentsInfo}}}}
v32@0:8@16@24
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}28@0:8r^v16B24
{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}40@0:8r^v16r^v24i32B36
@48@0:8@16@24@32B40B44
@"RS3DObjectMerger"
{vector<quad3dType2, std::allocator<quad3dType2>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<quad3dType2 *, std::allocator<quad3dType2>>="__value_"^{?}}}
{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}
{vector<std::vector<float>, std::allocator<std::vector<float>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<float> *, std::allocator<std::vector<float>>>="__value_"^v}}
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"RSNodeMessage"16@"RSNodeOutput"24
@32@0:8@16@24
B24@0:8^@16
@"RSNodeOutput"
@"RSNodeInput"
{?=[30]}16@0:8
v496@0:8{?=[30]}16
{?="points"[30]}
v28@0:8@16B24
v88@0:8@16{?=[4]}24
@24@0:8^{__CVBuffer=}16
@40@0:8^{__CVBuffer=}16Q24Q32
v96@0:8@16@24{?=[4]}32
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSString"
@"NSMutableArray"
@"NSDate"
@"NSMutableDictionary"
@"<RSFrame>"
{?="columns"[4]}
@40@0:8@16@24^@32
16@0:8
@"RSWallOpeningOnlineOptimizer"
@"RSDoorWindowOnlineDetector"
@"RSMirrorDetection"
@"RSWallOpeningOnlineDetector"
@"RSKeyframeAccumulation"
@"RSGeometryCalculation"
@"RSScanUIFormatter"
@"RSOnlineCurvedWallFusion"
@"RSProjection2DZ"
@"RSNonUniformHeightEstimation"
@"RSOpeningHeightAlignment"
@"RSRecessedAreaReconstructor"
@"RSParentAssociation"
@"RSMarkerCoaching"
@"RSMarkerSignal"
@"RSFloorPlan"
r^v16@0:8
v32@0:8^{opaqueCMSampleBuffer=}16@24
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16f48i52i56
f24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
f16@0:8
v20@0:8f16
i16@0:8
v20@0:8i16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@44@0:8@16@24@32B40
@40@0:8@16@24@32
@28@0:8@16f24
v96@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}32{CGRect={CGPoint=dd}{CGSize=dd}}64
B32@0:8@16@24
v32@0:8@16f24f28
f32@0:8@16@24
^{__CVBuffer=}
^{__IOSurface=}
[6^{__CVBuffer}]
[6^{__IOSurface}]
{?="plan"^v"network_index"i}
[6[20[2f]]]
{vector<std::vector<std::vector<std::vector<std::vector<float>>>>, std::allocator<std::vector<std::vector<std::vector<std::vector<float>>>>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<std::vector<std::vector<std::vector<float>>>> *, std::allocator<std::vector<std::vector<std::vector<std::vector<float>>>>>>="__value_"^v}}
{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}
@"NSArray"
{WallOpeningSelectorForDoorWindow="_vptr$WallOpeningSelectorForDoorWindow"^^?"_infer_wall_openings"@"NSMutableArray""_infer_wall_openings_attributes"{vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>>="__begin_"^{WallOpeningAttribute}"__end_"^{WallOpeningAttribute}"__end_cap_"{__compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>>="__value_"^{WallOpeningAttribute}}}"_target_infer_wall_openings"@"NSMutableArray""_target_infer_wall_openings_attributes"{vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>>="__begin_"^{WallOpeningAttribute}"__end_"^{WallOpeningAttribute}"__end_cap_"{__compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>>="__value_"^{WallOpeningAttribute}}}"_new_wall_openings"@"NSArray""_cur_keyframe"@"<RSKeyframe>""_floor_height"f"_ceiling_height"f"_convex_hull"^"_convex_hull_size"Q"_cur_lines"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"_new_lines"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"_cur_matches"{vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>>="__begin_"^{RS_Match_Info}"__end_"^{RS_Match_Info}"__end_cap_"{__compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>>="__value_"^{RS_Match_Info}}}"_new_matches"{vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>>="__begin_"^{RS_Match_Info}"__end_"^{RS_Match_Info}"__end_cap_"{__compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>>="__value_"^{RS_Match_Info}}}"_select_wall"B}
{MergerForDoorWindow="_vptr$MergerForDoorWindow"^^?"_new_instances"@"NSMutableArray""_target_infer_walls_openings"@"NSArray""_new_walls_openings"@"NSArray""_merged_instances"@"NSMutableArray""_prev_instances"@"NSMutableArray""_prev_instances_on_infer_walls_openings"@"NSMutableArray""_prev_instances_to_keep"@"NSMutableArray"}
@"RSOrthographicDetector"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=[4]}16@0:8
B32@0:8@16^24
B32@0:8@16^{?=[4]}24
v32@0:816
v28@0:8i16@20
v32@0:8r^{box3d=[8]}16@24
@"NSUUID"
@32@0:8^{opaqueCMSampleBuffer=}16@24
^{opaqueCMSampleBuffer=}16@0:8
^{opaqueCMSampleBuffer=}
@"NSDictionary"
{RSDeduplicateOpeningOpenDoorCore="_vptr$RSDeduplicateOpeningOpenDoorCore"^^?"_angle_thresh"f"_projection_dist_thresh"f"_dist_thresh"f"_matching_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
@64@0:8@16@24@32@40@48@56
@"RSDoorWindowOfflineDetector"
@"RSWallOpeningOfflineDetector"
@"RSOfflineKeyframeAccumulation"
@"RSOfflineGeometryCalculation"
@"RSCurvedWallDetection"
@"RSOfflineProjection2DZNode"
@"RSBayWindowFPRemoval"
@"RSStructurePostProcess"
@"RSDeduplicateOpeningOpenDoor"
@"RSOnlineOfflineAssociation"
@"RSOutsideObjectRemoval"
@"RSDoorWindowPostProcessor"
@76@0:8@16@24@32@40@48@56f64r^v68
{RSOnlineRefinement="_vptr$RSOnlineRefinement"^^?"_search_range_7"{Tensor<int, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<int>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^i}"_search_range_3"{Tensor<int, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<int>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^i}"_fitting_lines"{optional<rs_ol::RS3DSurfaceOnline>=""(?="__null_state_"c"__val_"{RS3DSurfaceOnline="_vptr$RS3DSurfaceOnline"^^?"surface"@"RS3DSurface""line_2d"{RSLine2D="_vptr$RSLine2D"^^?"pt"[2]}"line_3d"{RSLine3D="_vptr$RSLine3D"^^?"pt"[2]}"floor_height"f"ceiling_height"f"height"f"visible"B"visible_buffer"B"major_dist"f"major_angle"f"transition_status"i"first_appear_frame"i"last_appear_frame"i"non_match_count"i"non_match_shorten_count"i"debug_idx"i"wall_type"i"standalone_opening_count"i"_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"_parrent_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}})"__engaged_"B}"_config"{ONLINE_REFINE_CONFIG="density_index"i"slice_threshold"f"min_slice_num"f"min_wall_length"f"min_density"f"zslice_density_threshold"f"major_small_wall_length_th"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
{RSOnlineFusion="_vptr$RSOnlineFusion"^^?"_camera_positions"{vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__value_"^}}"_online_floorplan_last"{RSFloorPlanOnline="_vptr$RSFloorPlanOnline"^^?"walls"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"openings"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"windows"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"doors"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"open_doors"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"door_panels"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"curved_circles"{vector<RS3DCurvedSurface *, std::allocator<RS3DCurvedSurface *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<RS3DCurvedSurface *__strong *, std::allocator<RS3DCurvedSurface *>>="__value_"^@}}"structure_graph"{RSStructureGraph="_vptr$RSStructureGraph"^^?"_structures"{vector<rs_ol::RSStructure *, std::allocator<rs_ol::RSStructure *>>="__begin_"^^{RSStructure}"__end_"^^{RSStructure}"__end_cap_"{__compressed_pair<rs_ol::RSStructure **, std::allocator<rs_ol::RSStructure *>>="__value_"^^{RSStructure}}}}"_empty"{RS3DSurfaceOnline="_vptr$RS3DSurfaceOnline"^^?"surface"@"RS3DSurface""line_2d"{RSLine2D="_vptr$RSLine2D"^^?"pt"[2]}"line_3d"{RSLine3D="_vptr$RSLine3D"^^?"pt"[2]}"floor_height"f"ceiling_height"f"height"f"visible"B"visible_buffer"B"major_dist"f"major_angle"f"transition_status"i"first_appear_frame"i"last_appear_frame"i"non_match_count"i"non_match_shorten_count"i"debug_idx"i"wall_type"i"standalone_opening_count"i"_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"_parrent_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}}"_empty_lists"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}"_structure_config"{ONLINE_STRUCTURE_CONFIG="z_shape_min_len"f"z_shape_max_len"f"w_shape_min_len"f"w_shape_max_len"f}"_tm_helper"{RSTmOnlineTMScoreHelper="_vptr$RSTmOnlineTMScoreHelper"^^?}"_local_standardization"{RSLocalStandardization="_vptr$RSLocalStandardization"^^?"_online_std_config"{ONLINE_STANDARDIZATION_CONFIG="large_wall_len_thr"f"small_wall_len_thr"f"noise_wall_len_thr"f"angle_thr"f"noise_wall_angle_thr"f"angle_eps"f"anchor_wall_len_factor"f"corner_dist_thr"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}"_curved_walls"{vector<rs_ol::RSCurvedSurfaceOnline, std::allocator<rs_ol::RSCurvedSurfaceOnline>>="__begin_"^{RSCurvedSurfaceOnline}"__end_"^{RSCurvedSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RSCurvedSurfaceOnline *, std::allocator<rs_ol::RSCurvedSurfaceOnline>>="__value_"^{RSCurvedSurfaceOnline}}}"_online_curved_segments"{vector<RS3DCurvedSurface *, std::allocator<RS3DCurvedSurface *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<RS3DCurvedSurface *__strong *, std::allocator<RS3DCurvedSurface *>>="__value_"^@}}"_online_curved_wall_config"{ONLINE_CURVED_CONFIG="minDist"f"param1"i"param2"i"minRadius"f"maxRadius"f"density_thres"f"angle_thres"f"length_thres"f"kernel_size"i"iou_thr"f"min_iou_thr"f"dist_thr"f"inner_line_tol"f"inner_circle_tol"f"intersect_tol"f"segment_type"i"segment_angle"f"segment_length"f"direction_change_eps"f"reuse_uuid_iou_thr"f"reuse_uuid_dist_thr"f"reuse_uuid_angle_thr"f}"_need_curved_wall_process"B"_historical_low_conf_walls"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}}
{TracingMap="_vptr$TracingMap"^^?"_voxel_sz"f"_values"{unordered_map<unsigned long long, bool, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, bool>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, bool>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, bool>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}}
{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}
{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}
@48@0:81632
q16@0:8
{tuple<NSArray<RS3DSurface *> *, NSArray<RS3DSurface *> *>={__tuple_impl<std::__tuple_indices<0, 1>, NSArray<RS3DSurface *> *, NSArray<RS3DSurface *> *>=@@}}56@0:8@16@24@32@40@48
{ONLINE_BAY_WINDOW_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}
{unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long>>="__table_"{__hash_table<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long, void *> *>, std::allocator<std::__hash_node<unsigned long, void *>>>="__value_"{__hash_node_base<std::__hash_node<unsigned long, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<unsigned long>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<unsigned long>>="__value_"f}}}
v80@0:8{?=[4]}16
{?=[3]}16@0:8
v64@0:8{?=[3]}16
{?="columns"[3]}
r^16@0:8
^{?=[4]}16@0:8
^16@0:8
v32@0:8r^16Q24
v32@0:8^16Q24
{vector<simd_float4x4, std::allocator<simd_float4x4>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<simd_float4x4 *, std::allocator<simd_float4x4>>="__value_"^{?}}}
@56@0:8@16@24@32@40r^v48
{Room_Standardization="standardizer_"{Standard_Room="initparam"{Standard_Param="pixel_sz_dynamic"f"init_minimum_walls"i"shortest_wall_length"f"duplicate_point_thresh"f"unique_point_angle"f"tiny_small_wall_length"f"parallel_dis_thresh"f"parallel_angle_thresh"f"lbfgs_drift_angle_thresh"f"lbfgs_dist_thresh"f"lbfgs_optimize_min_length"f"lbfgs_move_region"f"lbfgs_move_region_rate"f"lbfgs_tm_score_diff_thresh"f"min_first_wall_length"f"manhattan_angle_offset"f"keep_connect_angle_thresh"f"keep_connect_intersection_distance"f"need_rotate_small_wall_length"f"need_rotate_wall_angle"f"need_rotate_small_wall_angle"f"standard_manhattan_angle"f"merge_cross_lines_dis_thresh"f"merge_cross_lines_angle_thresh"f"merge_cross_lines_split_dist_th"f"merge_cross_gap_dist_th"f"merge_cross_gap_angle_th"f"add_tiny_corner_dist_th"f"add_tiny_corner_vertical_angle_th"f"add_tiny_corner_parallel_angle_th"f"add_tiny_opening_dist_th"f"add_tiny_opening_parallel_angle_th"f"add_tiny_opening_parallel_dist_th"f}"walls"{vector<wlw::lcnn_flp::standard_line2d, std::allocator<wlw::lcnn_flp::standard_line2d>>="__begin_"^{standard_line2d}"__end_"^{standard_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::standard_line2d *, std::allocator<wlw::lcnn_flp::standard_line2d>>="__value_"^{standard_line2d}}}"vertex"{vector<wlw::lcnn_flp::standard_point2d, std::allocator<wlw::lcnn_flp::standard_point2d>>="__begin_"^{standard_point2d}"__end_"^{standard_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::standard_point2d *, std::allocator<wlw::lcnn_flp::standard_point2d>>="__value_"^{standard_point2d}}}"vertex_1d"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"line_mask"{vector<std::vector<unsigned long>, std::allocator<std::vector<unsigned long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<unsigned long> *, std::allocator<std::vector<unsigned long>>>="__value_"^v}}"vertex_walls"{vector<std::vector<unsigned long>, std::allocator<std::vector<unsigned long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<unsigned long> *, std::allocator<std::vector<unsigned long>>>="__value_"^v}}"vertex_angles"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"vertex_angles_180"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"tiny_sw_vertex"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"tiny_sw_line_id"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"first_wall"{standard_line2d="pt"[4f]"pts0"{standard_point2d="x"f"y"f}"pts1"{standard_point2d="x"f"y"f}"theta"f"a"f"length"f"angle"f"align_n"i"score"f}"_geoMeta"@"RSGeometryMeta""_density_map"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_before_tm_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}}"angle_th"f"dis_th"f"project_map"{unordered_map<std::string, std::vector<wlw::lcnn_flp::ProjectParam>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::vector<wlw::lcnn_flp::ProjectParam>>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"localStandardizer_"{RSLocalStandardization="_vptr$RSLocalStandardization"^^?"_online_std_config"{ONLINE_STANDARDIZATION_CONFIG="large_wall_len_thr"f"small_wall_len_thr"f"noise_wall_len_thr"f"angle_thr"f"noise_wall_angle_thr"f"angle_eps"f"anchor_wall_len_factor"f"corner_dist_thr"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}}
@"RSObjectAlign"
@"RSPointCloudColorEstimator"
v40@0:8@16@24@?32
@"NSObject<OS_dispatch_semaphore>"
@"RSOfflineFloorPlanGenerator"
@"RSGenerationConfiguration"
@"RSCaptureConfiguration"
@"RSOnlineFloorPlanGenerator"
@"RSScanCoaching"
@"RSDriftDetection"
@"NSObject<OS_dispatch_source>"
@"RSInternalInfoDumper"
@"OS_os_workgroup"
@"RSFloorPlanBoundaryRefinement"
@"<RSCaptureSessionDelegate>"
d16@0:8
v24@0:8d16
@"NSUUID"16@0:8
@28@0:8@16I24
v52@0:8^16^24^32^40I48
v32@0:8Q16r^Q24
v40@0:8Q16r^Q24@32
v32@0:8B16B20B24B28
I16@0:8
v20@0:8I16
{vector<unsigned char __attribute__((ext_vector_type(4))), std::allocator<unsigned char __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<unsigned char * __attribute__((ext_vector_type(4))), std::allocator<unsigned char __attribute__((ext_vector_type(4)))>>="__value_"^}}
{vector<unsigned short __attribute__((ext_vector_type(4))), std::allocator<unsigned short __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<unsigned short * __attribute__((ext_vector_type(4))), std::allocator<unsigned short __attribute__((ext_vector_type(4)))>>="__value_"^}}
@"RSSemanticImage"
{?="global_max_density"f"global_max_density_3d"f"voxel_size"f"z_slice"i"numSemanticChannels"Q"numAllChannels"Q}
@"<RSNodeOutputConsumer>"
@"<RSNodeInputProducer>"
v24@0:8f16f20
r^c16@0:8
r^f16@0:8
v48@0:8r^16r^c24r^f32Q40
C16@0:8
v20@0:8C16
{?=[4c]}16@0:8
v20@0:8{?=[4c]}16
{?=[4f]}16@0:8
v32@0:8{?=[4f]}16
c16@0:8
v20@0:8c16
{vector<RSEdgeStatesType, std::allocator<RSEdgeStatesType>>="__begin_"^c"__end_"^c"__end_cap_"{__compressed_pair<RSEdgeStatesType *, std::allocator<RSEdgeStatesType>>="__value_"^c}}
{?="states"[4c]}
@"RS3DSurface"
{?="confidence"[4f]}
{?="corners"[4]}
@40@0:8Q16Q24Q32
@52@0:8Q16Q24Q32Q40I48
@48@0:8Q16Q24Q32Q40
^v16@0:8
^v24@0:8Q16
v40@0:8Q16Q24Q32
(?="memoryBuffer"^f"pixelBuffer"^{__CVBuffer})
^{__CVBuffer=}16@0:8
^{__IOSurface=}16@0:8
@40@0:8r^v16C24f2832
{Lcnn_floorplan_detector="_vptr$Lcnn_floorplan_detector"^^?"_unet_fpn_backbone"{Unet_fpn_backbone_v1="_vptr$Unet_fpn_backbone_v1"^^?"_net"{IEspresso_Interface_v1="_vptr$IEspresso_Interface_v1"^^?"_output_tensor"{map<std::string, espresso_buffer_t *, std::less<std::string>, std::allocator<std::pair<const std::string, espresso_buffer_t *>>>="__tree_"{__tree<std::__value_type<std::string, espresso_buffer_t *>, std::__map_value_compare<std::string, std::__value_type<std::string, espresso_buffer_t *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, espresso_buffer_t *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, espresso_buffer_t *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, espresso_buffer_t *>, std::less<std::string>, true>>="__value_"Q}}}"_ctx"^v"_plan"^v"_net"{?="plan"^v"network_index"i}"_previous_mode"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"_single_resolution"B}"_lcnn_fc2"{Lcnn_FC2="_vptr$Lcnn_FC2"^^?"_fc2_0_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_1_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_2_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_0_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_1_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_2_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc_dim"i"_fc_dim1"i}"_lambda"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_backbone_param"{BackBone_Param="single_resolution"B"fixed_input_shape"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"dynamic_input_shape"{map<std::vector<unsigned long>, std::string, std::less<std::vector<unsigned long>>, std::allocator<std::pair<const std::vector<unsigned long>, std::string>>>="__tree_"{__tree<std::__value_type<std::vector<unsigned long>, std::string>, std::__map_value_compare<std::vector<unsigned long>, std::__value_type<std::vector<unsigned long>, std::string>, std::less<std::vector<unsigned long>>, true>, std::allocator<std::__value_type<std::vector<unsigned long>, std::string>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<unsigned long>, std::string>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<unsigned long>, std::__value_type<std::vector<unsigned long>, std::string>, std::less<std::vector<unsigned long>>, true>>="__value_"Q}}}"max_K"Q"junc_score_thres"f"fpn_len_range_max"f"fpn_len_range_min"f"n_pts0"Q"n_pts1"Q"dim_fc"Q"dim_loi"Q"cls_score_thres"f"filter_line_proposal"B}}"_wall_postprocess"{Lcnn_Floorplan_Post="density_buffer"^f"lcnn_lines"{willow_lcnn_lines="lines"{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_lines"Q}"lcnn_juncs"{willow_lcnn_juncs="juncs"{vector<wlw::lcnn_flp::willow_point2d, std::allocator<wlw::lcnn_flp::willow_point2d>>="__begin_"^{willow_point2d}"__end_"^{willow_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_point2d *, std::allocator<wlw::lcnn_flp::willow_point2d>>="__value_"^{willow_point2d}}}"junc_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_juncs"Q}"_param"{PostProcess_Param="image_sz"Q"pixel_m"f"max_length"i"small_wall_length_thres"f"length_score_weight"f"tm_score_protect_size"Q"tm_score_weight"f"tm_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"line_nms_angle_thres"f"line_nms_dist_thres"f"line_nms_sw_angle_thres"f"line_nms_projection_iou_thres"f"line_nms_score_diff_thres"f"score_filtering_decision_boundary_map"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"cls_delta"f"tms_delta"f"score_filtering_decision_boundary_map_for_line_proposals"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"structure_filtering_acute_angle_min_thres"f"structure_filtering_acute_angle_max_thres"f"opening_score_density_thres"f"opening_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"hard_mode_opening_area_len_thres"f}}"_opening_postprocess"{Lcnn_Floorplan_Post="density_buffer"^f"lcnn_lines"{willow_lcnn_lines="lines"{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_lines"Q}"lcnn_juncs"{willow_lcnn_juncs="juncs"{vector<wlw::lcnn_flp::willow_point2d, std::allocator<wlw::lcnn_flp::willow_point2d>>="__begin_"^{willow_point2d}"__end_"^{willow_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_point2d *, std::allocator<wlw::lcnn_flp::willow_point2d>>="__value_"^{willow_point2d}}}"junc_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_juncs"Q}"_param"{PostProcess_Param="image_sz"Q"pixel_m"f"max_length"i"small_wall_length_thres"f"length_score_weight"f"tm_score_protect_size"Q"tm_score_weight"f"tm_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"line_nms_angle_thres"f"line_nms_dist_thres"f"line_nms_sw_angle_thres"f"line_nms_projection_iou_thres"f"line_nms_score_diff_thres"f"score_filtering_decision_boundary_map"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"cls_delta"f"tms_delta"f"score_filtering_decision_boundary_map_for_line_proposals"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"structure_filtering_acute_angle_min_thres"f"structure_filtering_acute_angle_max_thres"f"opening_score_density_thres"f"opening_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"hard_mode_opening_area_len_thres"f}}"_wall_lmap"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_lmap"{Tensor<float, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}}
@36@0:8q16q24f32
@28@0:8q16f24
v24@0:8q16
v40@0:8@16@24i32B36
v48@0:8@16@24f32C36i40B44
v36@0:8@16@24i32
@"RSPointCloud"
@"RSTemporalMeta"
{unique_ptr<rs_erf::EdgeRefinement, std::default_delete<rs_erf::EdgeRefinement>>="__ptr_"{__compressed_pair<rs_erf::EdgeRefinement *, std::default_delete<rs_erf::EdgeRefinement>>="__value_"^{EdgeRefinement}}}
v24@0:816
@28@0:8@16B24
@56@0:8Q16r^24r^32r^40^48
v56@0:8Q16r^24r^32r^40^48
v28@0:8B16B20B24
24@0:8@16
{unordered_map<std::string, unsigned int __attribute__((ext_vector_type(2))), std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int __attribute__((ext_vector_type(2)))>>>="__table_"{__hash_table<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
{unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long>>="__table_"{__hash_table<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *>, std::allocator<std::__hash_node<unsigned long long, void *>>>="__value_"{__hash_node_base<std::__hash_node<unsigned long long, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<unsigned long long>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<unsigned long long>>="__value_"f}}}
{unordered_map<std::string, std::unordered_set<unsigned long long>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::unordered_set<unsigned long long>>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}32@0:8r^v16@24
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}40@0:8r^v16@24@32
@"RSFloorPlanRender"
v40@0:8@16@24@32
{?="global_max_density"f"global_max_density_3d"f"voxel_size"f"z_slice"i"numSemanticChannels"Q"numAllChannels"Q"numHeightChannels"Q}
v48@0:816
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@40@0:8@16r^v24@32
@208@0:8{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}16
@40@0:8{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}16
@48@0:8{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}16@40
{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}24@0:8@16
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}24@0:8@16
@60@0:8@162440f56
v48@0:8@16@24@32@40
B128@0:8{?=[4]}16{?=[3]}80
f128@0:8{?=[4]}16{?=[3]}80
{?=[3]}64@0:8{?=[3]}16
@148@0:8@16{?=[4]}24@88{?=[3]}96B144
@96@0:8@16{?=[4]}24@88
{SpeedCoaching="_speed_range"f"_proj_speed_range"f"_threshold"f"_pose_queue"{deque<std::tuple<simd_float4x4, double>, std::allocator<std::tuple<simd_float4x4, double>>>="__map_"{__split_buffer<std::tuple<simd_float4x4, double> *, std::allocator<std::tuple<simd_float4x4, double> *>>="__first_"^^v"__begin_"^^v"__end_"^^v"__end_cap_"{__compressed_pair<std::tuple<simd_float4x4, double> **, std::allocator<std::tuple<simd_float4x4, double> *>>="__value_"^^v}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<std::tuple<simd_float4x4, double>>>="__value_"Q}}"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>="__map_"{__split_buffer<float * __attribute__((ext_vector_type(2))), std::allocator<float * __attribute__((ext_vector_type(2)))>>="__first_"^^"__begin_"^^"__end_"^^"__end_cap_"{__compressed_pair<float ** __attribute__((ext_vector_type(2))), std::allocator<float * __attribute__((ext_vector_type(2)))>>="__value_"^^}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float __attribute__((ext_vector_type(2)))>>="__value_"Q}}"_latest_v""_latest_w""_last_vio_lost_time"@"NSDate""_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{LightCoaching="_kpt_range"f"_threshold"f"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_latest_mean_color"f"_latest_n_kpt"f"_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{DistanceCoaching="_threshold"f"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_latest_meand"f"_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{OnboardCoaching="_v_thr1"f"_v_thr2"f"_w_thr1"f"_w_thr2"f"_brightness_thr1"f"_brightness_thr2"f"_distance_thr1"f"_distance_thr2"f"_n_kpt_thr1"f"_n_kpt_thr2"f"_texture_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_speed_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_firstCallTime"@"NSDate""_latest_signal"@"RSTextCoachingSignal""_w_v"f"_b_v"f"_w_w"f"_b_w"f"_w_brightness"f"_b_brightness"f"_w_distance"f"_b_distance"f"_w_n_kpt"f"_b_n_kpt"f}
{vector<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>, std::allocator<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad> *, std::allocator<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>>>="__value_"^v}}
@"RSTextCoachingSignal"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
@48@0:8@16@24@32@40
{RSOnlineOfflineAssociationCore="_vptr$RSOnlineOfflineAssociationCore"^^?"_offline_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
{MarkerProposal="_vptr$MarkerProposal"^^?"_extend_length"f"_angle_thres_for_major_wall"f"_parallel_angle_thres"f"_corner_dist_thres"f"_alg_structure_complete"{Structure_complete="small_gaps"{vector<marker_proposal::Structure_completeOutput, std::allocator<marker_proposal::Structure_completeOutput>>="__begin_"^{Structure_completeOutput}"__end_"^{Structure_completeOutput}"__end_cap_"{__compressed_pair<marker_proposal::Structure_completeOutput *, std::allocator<marker_proposal::Structure_completeOutput>>="__value_"^{Structure_completeOutput}}}"small_gaps_result"{vector<marker_proposal::Structure_completeOutput, std::allocator<marker_proposal::Structure_completeOutput>>="__begin_"^{Structure_completeOutput}"__end_"^{Structure_completeOutput}"__end_cap_"{__compressed_pair<marker_proposal::Structure_completeOutput *, std::allocator<marker_proposal::Structure_completeOutput>>="__value_"^{Structure_completeOutput}}}"_connection_angle_thresh"f"_gap_length_thresh"f"_gap_size_thresh"f"_iou_thresh"f"_line_occupancy_thresh"f"_angle_thres_with_view_line"f"_neighbor_line_threshold"f"_frame_in_consider"i"_line_id1"i"_line_id2"i}"_pool"{vector<marker_proposal::ProposalWrapper, std::allocator<marker_proposal::ProposalWrapper>>="__begin_"^{ProposalWrapper}"__end_"^{ProposalWrapper}"__end_cap_"{__compressed_pair<marker_proposal::ProposalWrapper *, std::allocator<marker_proposal::ProposalWrapper>>="__value_"^{ProposalWrapper}}}"_all_major_convex_hulls"{vector<std::vector<float __attribute__((ext_vector_type(3)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<float __attribute__((ext_vector_type(3)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}}
{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}
{?="margin"i"img_sz"i"use_dynamic_img_sz"B"img_sz0"i"img_sz_step"i"use_pw_center"B"pw_center_update_rate"i"use_global_center"B"use_dynamic_pixel_sz"B"pixel_sz"f"hist_norm"B"z_slice"i"z_slice_pixel"f}
@100@0:8@16r^v243264i96
@48@0:8@16r^v24@32@40
{vector<RSOnlineCurvedWall, std::allocator<RSOnlineCurvedWall>>="__begin_"^{RSOnlineCurvedWall}"__end_"^{RSOnlineCurvedWall}"__end_cap_"{__compressed_pair<RSOnlineCurvedWall *, std::allocator<RSOnlineCurvedWall>>="__value_"^{RSOnlineCurvedWall}}}
@32@0:8r^16Q24
@"<RSCamera>"16@0:8
@"<RSRawPointCloud>"16@0:8
v24@0:8^{__CVBuffer=}16
@"<RSCamera>"
@"<RSRawPointCloud>"
{OpeningHeightAlignment="_vptr$OpeningHeightAlignment"^^?"_opening_fixed"{unordered_map<std::string, rs_oalign::OpeningFixedNode, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, rs_oalign::OpeningFixedNode>>>="__table_"{__hash_table<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_check_in_view"B"_floor_v"f"Min_Opening_height"f"Invaid_height_min"f"Max_try_times"i"Second_try_times"i"Max_opeing_height"f"opening_wall_gap"d"_hole_vector"{vector<rs_oalign::HoleOpening, std::allocator<rs_oalign::HoleOpening>>="__begin_"^{HoleOpening}"__end_"^{HoleOpening}"__end_cap_"{__compressed_pair<rs_oalign::HoleOpening *, std::allocator<rs_oalign::HoleOpening>>="__value_"^{HoleOpening}}}}
h00L
ARGB
L>fff?
L>fff?
<33s?
L=fff?
Bfff?
?333?333?333?333?
@A333?
Y>Vb
@333>
MbP?
?ffffff
?333333
=fff?
A333333
pB33s?
>33s?
ffffff
?333333
333333
@333?
>333?
fff?o
+2ff
>(knN
Ga==
>33#@
>VUUA
Ga>5
9G?XX
CQIi
7F>#
<KC=
1=6CC
&&&?&F&M
>%iii
%||ii@@(#)PROGRAM:RoomScanCore  PROJECT:RoomScanCore-8.4
ff&?
?fff?
333C
333C
?NSt3__117bad_function_callE
St19bad_optional_access
?St12out_of_range
NSt3__111regex_errorE
St13runtime_error
St12length_error
St11logic_error
St9exception
St20bad_array_new_length
St9bad_alloc
q24@?0@"NSString"8@"NSString"16
operator+=
com.apple.RoomScanCore
RoomScanCore
PointCloud
LcnnDetector
OnlineFloorPlan
OfflineFloorPlan
RSCaptureSession
RSGenerationSession
RSValidation
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/range_helper.hpp
compute_range_inner
view shape should large equal 0 and less 
end should not be zero
at least step > 0
end >start
out ouf range
length > 0
consumer
producer
com.apple.roomscancore.debug_info_arframe_dump
com.apple.roomscancore.debug_info_image_dump
com.apple.roomscancore.debug_info_max_keyframe_fps
RoomScanCore.InternalInfoDumper
Live
MM_dd_yyyy_HH_mm_ss_SSS
%@/%@_fp_input.plist
keyframes
skipped
timestamp
video_timestamp
final
type
state
score
vioTrackingState
cameraTransform
intrinsics
cameraTrackingState
rawFeaturePointsCount
rawFeaturePoints
public.png
%@/%@_Image.plist
keyframe_index
cameraPose
width
height
data
depth
%@/%@_ARFrame.plist
keyframesCount
avail_mem
time_stamp
floorPlanDebug
config
keyframeDebug
coachingDebug
driftDebug
sysDebug
firstARFrameTime
fp_earlyout_accumulation
fp_earlyout_projection2DZ
fp_earlyout_wallOpeningDetect
fp_earlyout_consistency
fp_earlyout_curvedWall
fp_earlyout_windowDoorDetect
no_temporal_update
lcnn
consistency
scanui_formatter
filter_other_type_wall
height_estimator
door_window
opening_height_alignment
recessed_area_recon
parent_association
render
orthographic_v9.1.espresso.net
<_RSOrthographicDetector_DetectBox %p> { origin = < %.2f , %.2f > size = < %.2f x %.2f> }
windows
doors
openings
opendoors
%s%u
confidence
B24@?0@"_RSOrthographicDetector_DetectBox"8@"NSDictionary"16
q24@?0@"_RSOrthographicDetector_DetectBox"8@"_RSOrthographicDetector_DetectBox"16
image
logits_
offsets_box_
arg_reduce_core
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/squeeze_helper.hpp
which_dim<dim
which_dim>=0
shape[which_dim]==1
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_equal.hpp
operator==
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/scatter_by_idx.hpp
scatter_by_idx
scatter target must not empty
dim of index not match
Cabinet
Refrigerator
Shelf
Stove
Sink
Washer
Toilet
Bathtub
Oven
Dishwasher
Table
Sofa
Chair
Fireplace
Stool
Screen
Cuboid
Stairs
BuildInCabinet
Storage
ChairGroup
LShapeGroup
UShapeGroup
FloorPlan
rawdetection
raw_online
raw_offline
conservative
aggressive
ultimate
wallaligned
lshaped
unknown
online
offline
identifier
logits
corners_status
edges_status
color
groups
boxes_dict
status
detectionsource
<RS3DObject %p> [id=%@ conf=%0.2f] %@ { position = < %.2f , %.2f , %.2f > dimension = < %.2f x %.2f x %.2f > color = < r=%.2f , g=%.2f , b=%.2f , a=%.2f > }
[3DOD] Warning: The corner array is not valid to convert to box3d.
description=RoomScanCore_Sim-8.4
ERROR [createWorkGroup]: Failed to set workgroup flags with error (%d)
.workloop
opening
window
door
opendoor
size of input shape vector is 0
size of input shape vector > current dim
com.apple.RoomScanCoreError
slice
duplicate dim idx
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/transpose_helper.hpp
out of range
slice_by_axis
floorPlan
onlineAsset
geometryMeta
curved
bay_window_removal
temporalMeta
opening_height
deduplicate_opening_opendoor
doorWindowPostProcessor_mergeDoors
association
offlineDebug
origin
reflect
mirrorPoints
version
isCaptured
rawFloorPlan
inner
outer
begin
size
raw_size
pose
camera_height
camera_width
is_update
incremental_points
covering_hull_points
incremental_ids
mapping_interval
boundary_points
incremental_poses
doorWindowDetectionEnabled
objectBeautificationEnabled
chairBeautificationEnabled
standardizationEnabled
wallOpeningMergeEnabled
openingReplaceOpendoorEnabled
opendoorReplaceOpeningEnabled
nonUniformHeightEnabled
com.apple.RoomScanCore.offlineFloorPlanGeneration
offlineConfig
liveResultEnabled
textCoachingEnabled
onboardingEnabled
coachingMaxFrameRate
maxFramerate
mirrorDetectionEnabled
markerCoachingEnabled
doorWindowBeautificationEnabled
curvedWallEnabled
driftDetectionEnabled
doorReplaceOpeningEnabled
boundaryRefinementEnabled
bayWindowRecessedAreaEnabled
RSMemory_load_thr
RSC_FloorPlan_TG
com.apple.RoomScanCore.onlineFloorPlanGeneration
RSC_Coaching_TG
com.apple.RoomScanCore.Coaching
RSC_Mirror_TG
com.apple.RoomScanCore.mirrorPoint
RSC_ReadWrite_TG
com.apple.RoomScanCore.readWrite
v8@?0
count
points
pointsToWorld
semanticLabels
semanticVotes
colors
walls
open_doors
objects
curved_walls
map::at:  key not found
quad
conf
completed
occluded
groupId
wall_status
parent_wall_status
is_fake_wall
parentIdentifier
individualUpdate
edgeStates
edgeConfidence
polygon
polygon_edge_states
polygon_edge_score
appear_pose_pts
appear_major_views
lcnn_floorplan_fc2_
lcnn_floorplan_model.espresso.net
_computerDominantColor_RGB_Binning: based on RGB-binning, %u out of %lu with dominant color (%f,%f,%f)
_computerDominantColor_HSL_Binning: based on HSL-binning, %u out of %lu with dominant color (%f,%f,%f)
_computerDominantColor_Mean: %lu out of %lu with average color (%f,%f,%f)
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_isin.hpp
isin
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/construction.hpp
arange
empty range
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_concatenate.hpp
concatenate
at least 1 to concat
can not concat
assign_from
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/expression/exp_gather_by_idx.hpp
GatherByIdxExp
dim of source expression and index not match
None
Continue scanning
Slow down
Move further away
Move closer
Turn up the light
Low texture
normal
markers
Surface uuid is unique
Surface parentIdentifier is valid
Child meets geometry constraint to parent wall
Wall
Window
Door
Opening
OpenDoor
Unknown
q24@?0@"<RSKeyframe>"8@"<RSKeyframe>"16
Tensor
dim of the initializer list do not match expectation
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/list_initializer.hpp
nested_shape
empty initializer list
circle_center
starting_orientation
ending_orientation
radius
major_convex_hull
major_convex_hull_buffer
major_view_line
major_views
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../expression/../common/gather_scatter_dim_helper.hpp
gather dim should not be same!
indices shape should be same
scalar assign should create a storage first
v24@?0{LineSegment2D=}8
input_image
loi_input_2
jmap
jmap_peaks
lmap
cameraPositions
unordered_map::at: key not found
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../tensor/shape.hpp
Shape
shape[
 is 
 ,it should <= 6
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/expand_dims_helper.hpp
the absolute value of axis should be less than dim
repeated axis
is_center_scale_updated
pixel_size
scale
shift
center
floor_height
ceiling_height
support_height
image_size
floor_ceiling_count
z_slice
intrinsic
image_resolution
bbox
boxes
group_type
group_id
recessed_walls
bay_windows
front_opening
q24@?0@"RS3DSurface"8@"RS3DSurface"16
shape
should smaller then
_RSNodeSampleMessageFrameAttachmentKey
_RSNodeSampleMessagePointCloudAttachmentKey
_RSNodeSampleMessageFloorPlanAttachmentKey
_RSNodeSampleMessageTemporalMetaAttachmentKey
_RSNodeSampleMessageGeometryMetaAttachmentKey
_RSNodeSampleMessageSemanticImageAttachmentKey
_RSNodeSampleMessageKeyFramesAttachmentKey
_RSNodeSampleMessageObjectsAttachmentKey
_RSNodeSampleMessageMirrorPointsAttachmentKey
lcnn_floorplan_offline_fc2_
lcnn_floorplan_offline_model.espresso.net
0_weight.npy
1_weight.npy
2_weight.npy
0_bias.npy
1_bias.npy
2_bias.npy
q24@?0@"RSKeyframeMeta"8@"RSKeyframeMeta"16
NoGroup
camera
depth_buffer
depth_buffer_width
depth_buffer_height
depth_confidence_buffer
semantic_label_buffer
semantic_label_buffer_width
semantic_label_buffer_height
semantic_confidence_buffer
vio_tracking_state
depthConfidence
semanticSegmentationBufferSampledForDepth
semanticSegmentationConfidenceBufferSampledForDepth
sceneColor
sceneCamera
trackingState
transform
vector
basic_string
runtime_err in 
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/../common/reduce_helper.hpp
format_reduce_axes
reduce axis larger than dim-1
duplicate axis in reduce axis
init
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/tensor.hpp
operator=
empty tensor
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/broadcast_helper.hpp
init_internal
cannot broadcast
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/../expression/exp_element_binary.hpp
TensorBinaryExp
Binary Exp shape should equal
empty tensor in
broadcast_assign_continue
broadcast assign issue
broadcast_assign_stride
reshape
shape can only be -1 or integer between 1 and 
shape cannot be deduced
length not match, cannot reshape
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/io/wnpy.hpp
load_npy
Unable to open npy file 
load: fread failed
parse_npy_header
parse_npy_header: fread failed
parse_npy_header: failed to find 'fortran_order'
parse_npy_header: failed to find '('
parse_npy_header: failed to find ')'
[0-9][0-9]*
parse_npy_header: failed to find 'descr'
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../expression/../common/tile_helper.hpp
tile param should larger 0
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/expression/exp_tile.hpp
alias_type
tile cannot to it self
Detector init failed
pnp measurement: %@
Overall walls: %lu, openings: %lu, windows: %lu, doors: %lu, opendoors: %lu, consume: %lld
DoorWindow IOSurfaceCreate failure
DoorWindow input CVPixelBufferCreate failure
DoorWindow IOSurfaceCreate logitsMap %d failure
CVPixelBufferCreateWithIOSurface output logits failure (%d)
DoorWindow IOSurfaceCreate offsetsMap %d failure
CVPixelBufferCreateWithIOSurface output offsets failure (%d)
espresso_network_bind_cvpixelbuffer input failure (%d)
espresso_network_bind_cvpixelbuffer output logits failure (%d)
espresso_network_bind_cvpixelbuffer output offsets failure (%d)
Empty backbone infer result
Overall walls: %lu, openings: %lu, windows: %lu, doors: %lu, opendoors: %lu
Offline floorplan generator init failed
Online floorplan generator init failed
RSError: limited available memory: %{bytes}zu
Thermal state info in notification: %ld
RSError: kRSError_Runtime_CriticalThermalState
RSError: kRSError_Runtime_DriftDetection: %ld
Bad color value(s) encountered.
Surface count: %lu, uuid count: %lu
wall %s parentIdentifier is not nil
window %s parentIdentifier is nil
window %s parentIdentifier %s is not found in walls
door %s parentIdentifier is nil
door %s parentIdentifier %s is not found in walls
opening %s parentIdentifier is nil
opening %s parentIdentifier %s is not found in walls
openDoor %s parentIdentifier is nil
openDoor %s parentIdentifier %s is not found in walls
[%s] %s height exceeds height boundary of wall %s
[%s] %s is not on the same plane with wall %s
[%s] %s exceeds the XY boundary of wall %s
[Pass] %s
[Fail] %s
Network infer shape not match
Network tensor bind failure
Network infer failure
No candidate line
No candidate line after filtering
No valid candidate line
[3DOD Lshape merge] corner: %f, %f, %f, %f, %f, %f, %f, %f
[3DOD Lshape merge] skip merging due to inability
[3DOD Lshape merge] nearest_box1_corner_idx: %d, nearest_box2_corner_idx: %d
[3DOD Lshape merge] not l shape fill
[3DOD Lshape merge] before fill
[3DOD Lshape merge] skip filling the corner box
[3DOD Lshape merge] force merge extend corner
[3DOD Lshape merge] less point %lu
[3DOD Lshape merge] overlap ratio %f
[3DOD Lshape merge] skip filling the corner box because less points
[3DOD Lshape merge] after
[3DOD Lshape merge] 2D Overlap Ratio %f
[3DOD Lshape merge] history_l_shape_uuids_paired_ %lu
[3DOD Lshape merge] need_merge_list size %lu
[3DOD Lshape merge] merge previous pair
RSParentAssociation
RSOfflineGeometryCalculation
RSDriftDetection
RSSinkNode
RSBayWindowFPRemoval
RSNonUniformHeightEstimation
RSObjectAlign
RSNodeConnection
RSNodeOutputConsumer
NSObject
RSNodeInputProducer
RSKeyframeMetaExtend
RSInternalInfoDumper
RSOnlineFloorPlanGenerator
Debug
RSNode
RSNodeProtected
RSNodeInternal
_RSOrthographicDetector_DetectBox
RSOrthographicDetector
RSDoorWindowOnlineDetector
RS3DObject
NSCopying
NSSecureCoding
NSCoding
RSNodeMessage
RSNodeSampleMessage
RSNodeEventMessage
RSDeduplicateOpeningOpenDoor
RSStructurePostProcess
RSOfflineFloorPlanGenerator
RSWallOpeningOnlineOptimizer
RSMirrorPoint
RSAsset
RSRecessedAreaReconstructor
RSSubPointsLUT
RSTemporalMeta
RSFloorPlanRender
RSGenerationConfiguration
RSGenerationSession
RSCaptureConfiguration
RSCaptureSession
RSKeyframeMeta
RSKeyframeExtended
RSKeyframe
RSFloorPlan
RSOfflineProjection2DZNode
RSNodeOutput
RSNodeInput
RS3DSurface
RSSemanticImage
IOSurfaceBacking
RSWallOpeningOnlineDetector
RSScanUIFormatter
RSTextCoachingSignal
RSDriftDetectionSignal
RS3DMarker
RSMarkerSignal
RSPointCloudColorEstimator
RSValidation
RSOfflineKeyframeAccumulation
RSFloorPlanBoundaryRefinement
RSSourceNode
RS3DCurvedSurface
RSMajorViewInfo
RSPointCloud
RSKeyframeHeightBlob
RS3DObjectMerger
RSFloorPlanGeneratorBase
RSProjection2DZ
RSDoorWindowOfflineDetector
RSGeometryMeta
_RSCamera
RSCamera
RSCurvedWallDetection
RSBox3dSerialization
RSRecessedArea
RSOutsideObjectRemoval
RSMirrorDetection
RSDoorWindowPostProcessor
RSScanCoaching
RSOnlineOfflineAssociation
RSDataTypes
RSMarkerCoaching
RSWallOpeningOfflineDetector
RSGeometryCalculation
RSKeyframeAccumulation
RSOnlineCurvedWallFusion
RSGroupEdge
RSObjectAsset
_RSRawPointCloud
RSRawPointCloud
_RSFrame
RSFrame
RSOpeningHeightAlignment
T,R,N,V_reflect
.cxx_destruct
T@"NSArray",R,N
AlignWithWalls:objectAsset:worldPC:beautification:chairBeautification:
T@"RSNodeOutput",R,W,N,V_output
IOSurface
TB,N,GisWindowDoorDetectionEnabled,V_windowDoorDetectionEnabled
T#,R
TQ,R,N,V_height
T,N,V_circleCenter
T^{__CVBuffer=},N,V_depthBuffer
T,N,V_normal
Tf,N,V_floorSum
T,N,V_shift
Tr^,R,N
T,R,N
_angle_thr_side
T,VappearMajorViews
_camera
T,Vnormal
_center
T@"<RSCamera>",&,N,V_sceneCamera
_driftDetection
T@"<RSCaptureSessionDelegate>",W,N,V_delegate
_endOrientation
T@"<RSNodeInputProducer>",W,N,V_producer
_groups
T@"<RSPointCloud>",R,N
_incrementalIds
T@"<RSRawPointCloud>",R,N
_lastCameraPose
T@"NSArray",&,N,V_mirrorPoints
_maxKeyframeFPS
T@"NSArray",&,N,VbayWindows
_normal
T@"NSArray",&,N,Vdoors
_output
T@"NSArray",&,N,Vobjects
_prevInputDoors
T@"NSArray",&,N,Vopenings
_readWriteQueue
T@"NSArray",&,N,Vwalls
_rsOnlineOfflineAssociationCore
T@"NSArray",R,C,N
allKeys
T@"NSDictionary",&,N,V_groups
T@"NSDictionary",R,N,V_boxesDict
cameraPositions
T@"NSMutableArray",&,N,V_incrementalIds
cleanMajorViews
T@"NSMutableDictionary",&,N,V_mappingInterval
containsObject:
T@"NSString",&,Vdetection_source
doorWindowBeautificationEnabled
T@"NSString",R,N,V_text
T@"NSUUID",&,N,Videntifier
groupId
T@"NSUUID",&,N,Vsource_object_uuid
imageResolution
T@"NSUUID",R,N
initWithDictionary:withGroupId:
T@"RS3DSurface",W,Vparent
isOpeningReplaceOpendoorEnabled
T@"RSFloorPlan",R,N
isValidOpening:
T@"RSGeometryMeta",R,N
keyframeHeights
T@"RSNodeConnection",R,W,N
mappingInterval
T@"RSSemanticImage",R,N
merge_door_instances:withWall:mergedCloseDoors:mergedOpenDoors:
TB,N,GisBayWindowRecessedAreaEnabled,V_bayWindowRecessedAreaEnabled
newCommandQueue
TB,N,GisCurvedWallEnabled,V_curvedWallEnabled
numberWithChar:
TB,N,GisDoorWindowBeautificationEnabled,V_doorWindowBeautificationEnabled
objects
TB,N,GisLiveResultEnabled,V_liveResultEnabled
outputFloorPlan
TB,N,GisMirrorDetectionEnabled,V_mirrorDetectionEnabled
polygon
TB,N,GisObjectBeautificationEnabled,V_objectBeautificationEnabled
rawUpdateCursor
TB,N,GisOpendoorReplaceOpeningEnabled,V_opendoorReplaceOpeningEnabled
release
TB,N,GisStandardizationEnabled,V_standardizationEnabled
runWithPointCloud:geometryMeta:
TB,N,GisWallOpeningMergeEnabled,V_wallOpeningMergeEnabled
TB,N,V_enableARFrameDump
setBox:
TB,N,V_enableLiveDump
setColorBuffer:
TB,N,V_isCenterScaleUpdated
setDepthBuffer:
TB,N,Vstatus
setFloorHeight:
TB,R,N,GisAttached,V_attached
setSceneCamera:
TB,R,N,GisSourceNode
setWallsHeight:
TB,VisFakeWall
stringByAppendingPathComponent:
TC,N,Vtype
version
TI,R,N,V_dataType
.cxx_construct
T@"NSArray",&,N,Vcorners_status
AlignWithFloor:objects:
T@"RSFloorPlan",&,N,V_floorPlan
GetAllObjects
TB,N,GisChairBeautificationEnabled,V_chairBeautificationEnabled
ResizeObjects:
TB,N,V_isUpdate
T,N,V_center
T^{__CVBuffer=},N,V_colorBuffer
T,N,V_floorCeilingCount
Td,N,Vtimestamp
T,N,V_scale
Tf,VfloorHeight
T,N,Vcolor
_angle_thr_back
T,R,N,V_origin
_boundaryPoints
T,VappearPosePts
_ceiling_signal
T@"<RSCamera>",&,N,V_camera
_colors
T@"<RSCamera>",R,N
_enableLiveDump
T@"<RSFrame>",R,N
_floorPlanDebug
T@"<RSNodeOutputConsumer>",&,N,V_consumer
_height
T@"<RSRawPointCloud>",&,N,V_rawFeaturePoints
_keyframesDebug
T@"NSArray",&,N,V_markers
_markerCoaching
T@"NSArray",&,N,V_objects
_mirrorDetector
T@"NSArray",&,N,VcurvedWalls
_origin
T@"NSArray",&,N,Vlogits
_points
T@"NSArray",&,N,Vopendoors
_radius
T@"NSArray",&,N,VrecessedWalls
_render
T@"NSArray",&,N,Vwindows
_zSlice
T@"NSArray",R,N,Vedges_status
assignMajorConvexHull:withSize:
T@"NSDictionary",R,C,N,V_attachments
bundleForClass:
T@"NSDictionary",R,N,V_groups
channel
T@"NSMutableArray",&,Vchildren
clearGroupInfo:
T@"NSString",&,N,Vtype
dealloc
T@"NSString",R,C
encodeDepthPng:
T@"NSUUID",&,N,V_identifier
generateAnchors
T@"NSUUID",&,N,VparentIdentifier
imageOfChannel:
T@"NSUUID",&,N,Vtarget_object_uuid
initWithDevice:
T@"RS3DSurface",&,N,VfrontOpening
isOpendoorReplaceOpeningEnabled
T@"RSFloorPlan",&,N,V_rawFloorPlan
isProxy
T@"RSFloorPlanRender",&,N,V_render
isValidSurface:
T@"RSNodeConnection",R,N
major_view_line
T@"RSNodeInput",R,W,N,V_input
markers
T@"RSTemporalMeta",R,N
TB,N,GisBoundaryRefinementEnabled,V_boundaryRefinementEnabled
numberWithBool:
TB,N,GisDoorReplaceOpeningEnabled,V_doorReplaceOpeningEnabled
obj_wall_dists_
TB,N,GisDriftDetectionEnabled,V_driftDetectionEnabled
onlineRunWithFloorPlan:objects:pointCloud:geometryMeta:density:
TB,N,GisMarkerCoachingEnabled,V_markerCoachingEnabled
outputs
TB,N,GisNonUniformHeightEnabled,V_nonUniformHeightEnabled
rawSize
TB,N,GisOnboardingEnabled,V_onboardingEnabled
reflect
TB,N,GisOpeningReplaceOpendoorEnabled,V_openingReplaceOpendoorEnabled
runWithFloorPlan:majorViewInfo:
TB,N,GisTextCoachingEnabled,V_textCoachingEnabled
select:indices:
TB,N,V_enableARFrameDepth
setBayWindowRecessedAreaEnable:
TB,N,V_enableARFrameRGB
setCeilingVote:
TB,N,V_isCaptured
setCurvedWalls:
TB,N,VnormalizedOutput
setEnd:
TB,R
setObjectBeautificationEnabled:
TB,R,N,GisSinkNode
setUseFastMode:
TB,Vcompleted
setWithObjects:
TB,Voccluded
stringFromDate:
TI,N,VgroupId
windows
TI,VgroupId
TQ,N,V_begin
TQ,N,V_ceilingVote
TQ,N,V_coachingMaxFrameRate
TQ,N,V_end
TQ,N,V_floorVote
TQ,N,V_maxFramerate
TQ,N,V_rawSize
TQ,N,V_size
TQ,R
TQ,R,D,N
TQ,R,N
TQ,R,N,V_backingType
TQ,R,N,V_bytesPerRow
TQ,R,N,V_channel
TQ,R,N,V_size
TQ,R,N,V_width
T^,R,N
T^{?=[4]},R,N
T^{__CVBuffer=},N,V_depthConfidenceBuffer
T^{__CVBuffer=},N,V_sceneColorBuffer
T^{__CVBuffer=},N,V_semanticConfidenceBuffer
T^{__CVBuffer=},N,V_semanticLabelBuffer
T^{__CVBuffer=},R,N
T^{__IOSurface=},R,N
T^{opaqueCMSampleBuffer=},R,N,V_sampleBuffer
Tc,N,VindividualUpdate
Td,N,V_timestamp
Td,R,N
Tf,N,V_camH
Tf,N,V_camW
Tf,N,V_ceilingHeight
Tf,N,V_ceilingSum
Tf,N,V_confidence
Tf,N,V_endOrientation
Tf,N,V_floorHeight
Tf,N,V_pixelSize
Tf,N,V_radius
Tf,N,V_score
Tf,N,V_startOrientation
Tf,N,V_supportHeight
Tf,N,V_visualCeilingHeight
Tf,N,V_visualFloorHeight
Tf,N,Vconfidence
Tf,VceilingHeight
Tf,Vconfidence
Tf,Vdepth
Ti,N,V_imageSize
Ti,N,V_label
Ti,N,V_scale
Ti,N,V_zSlice
Ti,VparentWallStatus
Ti,VwallStatus
Tq,N,V_deviceOrientation
Tq,N,V_state
Tq,N,V_trackingState
Tq,N,V_type
Tq,N,V_vioTrackingState
Tq,R,N
Tq,R,N,V_state
Tq,R,N,V_version
Tr^c,R,N
Tr^f,R,N
T{?=[30]},V_samplePoints
T{?=[3]},N,V_intrinsics
T{?=[3]},R,N
T{?=[4]},N,V_cameraPose
T{?=[4]},N,V_pose
T{?=[4]},N,V_quad
T{?=[4]},N,V_referenceOriginTransform
T{?=[4]},N,VcameraPose
T{?=[4]},N,Vtransform
T{?=[4]},R,N
T{?=[4]},Vquad
T{?=[4c]},N,VedgeStates
T{?=[4f]},N,VedgeConfidence
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_box
T{CGSize=dd},N,V_imageResolution
T{CGSize=dd},R,N
UTF8String
UUID
UUIDString
_accMeta
_accumulator
_allKeyframes
_all_major_view_lines
_all_poses
_allocateBacking
_anchorBoxes
_area
_attached
_attachments
_backing
_backingType
_bayWindowRecessedAreaEnabled
_bay_window_depth_thr
_baywindowFPRemoval
_begin
_boundaryRefinement
_boundaryRefinementEnabled
_boundaryRefinementSemaphore
_box
_boxes
_boxesDict
_bufferDoorImage
_bufferHeightImage
_bufferImage
_bytesPerRow
_camH
_camW
_cameraImage
_cameraPose
_cameraPositions
_camera_positions
_ceilingHeight
_ceilingSum
_ceilingVote
_chairBeautificationEnabled
_channel
_circleCenter
_coachingDebug
_coachingMaxFrameRate
_coachingQueue
_coachingSemaphore
_coachingStartDate
_colorBuffer
_confidence
_configuration
_consumer
_coveringHullPoints
_ctx
_current_frame_recessed_area_list
_curvedWallDetector
_curvedWallEnabled
_curved_walls_pool
_dataType
_deallocateBacking
_debugDumper
_debugInfo
_deduplicateOpeningOpenDoor
_defaultBoxSizes
_defaultBoxStrides
_delegate
_density_map
_depthBuffer
_depthConfidenceBuffer
_detectedObjects
_detector
_deviceOrientation
_diffKeyframes
_distance
_doorImage
_doorReplaceOpeningEnabled
_doorWindowBeautificationEnabled
_doorWindowDetector
_doorWindowPostProcessor
_doors
_driftDebug
_driftDetectionEnabled
_enableARFrameDepth
_enableARFrameDump
_enableARFrameRGB
_enableOnboarding
_end
_estimateObjectColor:withPointCloud:method:
_estimateObjectsColor:withPointCloud:
_estimateSurfacesColor:withPointCloud:thickness:semanticLabel:method:sameLabelShareColor:
_filterThresholds
_firstARFrameTime
_firstCallTime
_firstKeyframeTime
_floorCeilingCount
_floorCeilingTime
_floorHeight
_floorPlan
_floorPlanForOffline
_floorSum
_floorVote
_floor_signal
_floorplan
_fpGenerator
_fpQueue
_fpSemaphore
_fpStartDate
_generationSemaphore
_generator
_geoMeta
_geometryEstimator
_handleMessage:fromInput:
_heightEstimation
_heightEstimator
_heightImage
_identifier
_image
_imageResolution
_imageSize
_img_sz_step
_importantClasses
_incrementalPoints
_incrementalPoses
_initParam
_initProcessor
_input
_inputSemanticsVersion
_intrinsics
_ioSurface
_isActiveWallEnabled
_isBayWindowRecessedAreaEnable
_isCameraPositionEnabled
_isCaptured
_isCenterScaleUpdated
_isChairBeautificationEnabled
_isCurvedWallEnabled
_isDoorReplaceOpeningEnabled
_isDoorWindowEnabled
_isEstimateFloorPlanColorEnabled
_isMarkerCoachingEnabled
_isNonUniformHeightEnabled
_isObjectBeautificationEnabled
_isOnline
_isOpendoorReplaceOpeningEnabled
_isOpeningReplaceOpendoorEnabled
_isStandardizationEnabled
_isUpdate
_keyframeHeights
_keyframeMeta
_keyframeOrderDict
_keyframeVoxelSet
_label
_lastARFrame
_lastKeyframeTime
_lastModelTime
_lastWalls
_last_frame_recall_idx
_last_signal
_lcnnDetector
_light
_liveResultEnabled
_loggingDirectory
_logitsMap
_logitsMapBuffers
_logitsMapIoSurfaces
_major_convex_hull
_major_convex_hull_buffer
_major_view_line
_major_views
_mappingInterval
_markerCoachingEnabled
_markerSignal
_markers
_maxDensity2d
_maxDensity3d
_maxFramerate
_maxModelFrameRate
_memoryMonitorSource
_memoryMonitorSuspended
_merger_for_close_door_window
_merger_for_open_door
_metas
_mirrorDetectionEnabled
_mirrorPointQueue
_mirrorPointSemaphore
_mirrorPoints
_net
_newKeyframes
_nonUniformHeightEnabled
_objAlign
_objectBeautificationEnabled
_objects
_offsetsMap
_offsetsMapBuffers
_offsetsMapIoSurfaces
_onboard
_onboardingEnabled
_onlineBayWindowConfig
_onlineCurvedWallFusion
_onlineDoorWindow
_onlineOfflineAssociation
_onlineWallOpeningConsistency
_online_config
_online_fusion
_online_refinement
_open_selector_for_door_window
_opendoorReplaceOpeningEnabled
_opendoors
_openingHeightAlignment
_openingReplaceOpendoorEnabled
_openings
_output_count
_overlap_thr
_parentAssociation
_pixelSize
_plan
_pointCloudColorEstimator
_pointsToWorld
_polygon
_polygonEdgeConfidence
_polygonEdgeStates
_pose
_prevFloorPlan
_prevInputWindows
_prevOutputFloorPlan
_processInfoThermalStateDidChangeNotification:
_processor
_producer
_projection_distance_thr_back
_projection_distance_thr_side
_projector
_quad
_queue
_rSDeduplicateOpeningOpenDoorCore
_rawFeaturePoints
_rawFloorPlan
_rawMappingInterval
_rawPoints
_rawSize
_rawUpdateCursor
_readwriteLock
_recessedAreaReconstructor
_recessed_area_pool
_referenceOriginTransform
_refinedFloorPlan
_reflect
_removeOutsideObject
_roomStandardizer
_rsParentAssociationCore
_sampleBuffer
_samplePoints
_save_group
_save_queue
_scale
_scanUiFormatter
_sceneCamera
_sceneColorBuffer
_score
_semLabels
_semVotes
_semanticConfidenceBuffer
_semanticLabelBuffer
_semanticMap
_semanticMapBuffer
_shift
_size
_skipCnt
_softmaxBuffer
_speed
_standardizationEnabled
_startOrientation
_state
_structurePostprocess
_supportHeight
_sysDebug
_text
_textCoaching
_textCoachingEnabled
_timestamp
_tracing_map
_trackingState
_type
_updateCursor
_updateKeyframeIds
_updateKeyframes
_version
_vioTrackingState
_visualCeilingHeight
_visualFloorHeight
_voxelSet
_wallOpeningDetector
_wallOpeningMergeEnabled
_wallThr
_wall_selector_for_door_window
_width
_windowDoorDetectionEnabled
_windows
_workgroupCoaching
_workgroupFloorPlan
_workgroupMirror
_workgroupReadWrite
_worldpc
accumulateWithKeyframesInWorld:voxelize:
addBoxesDict:forDictKey:
addEntriesFromDictionary:
addGroupId:forGroupType:
addInput:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addOutput:
aggregatePointCloud
alignBoxesToNearestWall:conservative:
allValues
allocWithZone:
appearMajorViews
appearPosePts
append:points:semanticLabels:semanticVotes:colors:
appendIncrementalPose:
appendVisualWallsForOpenings
apppendMajorConvexHull:
apppendMajorConvexHullBuffer:
apppendMajorViewLine:
apppendMajorViews:
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObjects:count:
assignBoundaryPoints:withSize:
assignCoveringHullPoints:withSize:
assignIdentifiersTo:
assignIncrementalPoints:withSize:
assignMajorConvexHullBuffer:withSize:
assignMajorViewLine:withSize:
assignMajorViews:withSize:
assignPolygon:polygonEdgeStates:polygonEdgeConfidence:count:
assignUuidsForNewObjects:withOldObjects:
attachWithError:
attached
attachments
autorelease
backingType
bayWindowRecessedAreaEnabled
bayWindows
beautifyObjects:withFloorPlan:
beautifyObjects:withFloorPlan:pointCloud:
begin
boolForKey:
boolValue
boundaryPoints
boundaryPointsCount
boundaryRefinementEnabled
box3dFromDictionary:
boxes3dFromDictionary:
boxesDict
bytes
bytesPerRow
camH
camW
camera
cameraImage
cameraPose
ceilingHeight
ceilingSum
ceilingVote
center
chairBeautificationEnabled
checkChildNodeGeometryConstraint:
checkParentIdentifierIsValid:
checkSurfaceUuidIsUnique:
children
circleCenter
class
cleanMajorConvexHull
cleanMajorConvexHullBuffer
cleanMajorViewLine
clear
clearIncrementalPoses
clipBoxes:
coachingMaxFrameRate
color
colorBuffer
colors
commandBuffer
commit
completed
computeCosPitchFromPose:intrinsic:
computeMirrorPoints:
confidence
conformsToProtocol:
connection
constrainHeightInFloorPlan:
constrainHeightOfSurfaces:byWalls:
consumeMessage:fromOutput:
consumer
convertLcnnResultTo3DSurface:withSurfaceType:scale:shift:
copy
copyWithZone:
corners_status
correctIntrinsics:
count
countByEnumeratingWithState:objects:count:
coveringHullPoints
coveringHullPointsCount
createDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentPoseSeeWall:intrinsic:
curvedWallEnabled
curvedWalls
cutOverlap:withRect:withIntersecRect:withUnionRect:
data
dataType
dataWithBytes:length:
date
debugDescription
decodeBoolForKey:
decodeFloatForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
deduplicateSurfaceUUIDInFloorPlan:
deduplicateUUIDInSurfaces:uuidSet:
defaultCenter
defaultManager
delegate
depth
depthBuffer
depthConfidenceBuffer
description
detachWithError:
detectDepthOnSurface:withPointCloud:
detectWithPointCloud:walls:lcnnOpenings:
detectWithPointCloud:walls:lcnnOpenings:isOnline:
detection_source
deviceOrientation
dictionary
dictionaryFromBox3d:
dictionaryFromBoxes3d:
dictionaryFromBoxes3dPointCloud:pointCloud:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
diffKeyframes
dimensions
doesNotRecognizeSelector:
doorImage
doorReplaceOpeningEnabled
doors
doubleForKey:
doubleValue
driftDetectionEnabled
dumpARFrame:withKeyFrames:withCameraPose:
dumpLastARFrameImage
edgeConfidence
edgeStates
edges_status
emitMessage:
enableARFrameDepth
enableARFrameDump
enableARFrameRGB
enableLiveDump
encodeBool:forKey:
encodeFloat:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodePng:
encodeRGBPng:withWidth:Height:
encodeToCommandBuffer:sourceTexture:destinationTexture:
encodeWithCoder:
endOrientation
estimateFloorPlanColor:withPointCloud:
estimateFloorPlanColor:withPointCloud:method:sameLabelShareColor:
exportAsset
extendSurface:byLength:
fileExistsAtPath:isDirectory:
fillWithDictionaryRepresentation:
filterBoxes:
filterEmptySurfaceInFloorPlan:
filterEmptySurfaces:
filterNoParentNodes:
filterOtherTypeWalls
filterOutPointsBeyondDistance:
filteredArrayUsingPredicate:
firstObject
floatValue
floorCeilingCount
floorHeight
floorPlan
floorSum
floorVote
frame
frontOpening
generateFloorPlanWithKeyframes:initialAsset:
generateFloorPlanWithKeyframes:initialAsset:error:
generateFloorPlanWithKeyframes:objects:
generateFloorPlanWithKeyframes:objects:error:
generateKeyframesMeta:
generateMirrorPointWithFrame:
geometryMeta
getBytes:bytesPerRow:fromRegion:mipmapLevel:
getDebugInfo
getDebugInfoWithConfig:OnlineDebug:
getDimension:dim:
getSurface_center:
getSurface_e_height:
getSurface_e_width:
getSurface_height:
getSurface_width:
getTransform:transform:
groups
hasBoxesDict:
hash
height
heightImage
identifier
imageSize
incrementalIds
incrementalPoints
incrementalPointsCount
incrementalPoses
individualUpdate
infer
init
initWithAllocedInput:
initWithArray:copyItems:
initWithBox:confidence:scale:label:
initWithCoder:
initWithConfiguration:
initWithCount:points:semanticLabels:semanticVotes:colors:
initWithDevice:linearToGrayScaleTransform:sigma:
initWithDictionary:
initWithDictionaryRepresentation:
initWithDictionaryRepresentation:WithGroupId:
initWithDictionaryRepresentation:withGroupId:
initWithFloorPlan:
initWithFrame:
initWithGeometryMeta:
initWithHeight:width:channel:
initWithHeight:width:channel:backingType:
initWithHeight:width:channel:backingType:dataType:
initWithKeyFrames:
initWithKeyframe:
initWithKeyframes:enableCameraPosition:
initWithMirrorPoints:
initWithObjects:
initWithObjectsAndKeys:
initWithOrigin:reflect:
initWithOutput:input:
initWithPointCloud:
initWithPoints:count:
initWithPythonDictionary:
initWithSampleBuffer:attachments:
initWithSemanticImage:
initWithSuiteName:
initWithTemporalMeta:
initWithType:score:
initWithType:state:score:
initWithUUIDString:
input
inputSemanticsVersion
inputs
insertObject:atIndex:
intValue
integerValue
intrinsics
isAttached
isBayWindowRecessedAreaEnabled
isBoundaryRefinementEnabled
isCaptured
isCenterScaleUpdated
isChairBeautificationEnabled
isCurvedWallEnabled
isDoorReplaceOpeningEnabled
isDoorWindowBeautificationEnabled
isDoorWindowEnabled
isDriftDetectionEnabled
isEqual:
isEqualToRSGeometryMeta:
isEqualToRSPointCloud:
isEqualToRSSemanticImage:
isEqualToRSSubPointsLUT:
isEqualToRSTemporalMeta:
isEqualToString:
isFakeWall
isKindOfClass:
isLiveResultEnabled
isMarkerCoachingEnabled
isMemberOfClass:
isMirrorDetectionEnabled
isNonUniformHeightEnabled
isObjectBeautificationEnabled
isOnboardingEnabled
isSinkNode
isSourceNode
isStandardizationEnabled
isTextCoachingEnabled
isUpdate
isWallOpeningMergeEnabled
isWindowDoorDetectionEnabled
keyFrames
keyPathsForValuesAffectingConnection
label
lastObject
length
listenToAvailableMemory
listenToThermalState
liveResultEnabled
lmap
lmapOfWall
logFinalFloorPlan:
logKeyFrame:WithSkip:
logMemory:
logWithFrame:coaching:
logWithFrame:drift:
logits
major_convex_hull
major_convex_hull_buffer
major_views
make_corners_order_consistent_with_wall:withWalls:
make_merged_instance:withFirstPoint:withLastPoint:withConfidence:
mappingIntervalOfKeyframe:
markerCoachingEnabled
markerSignal
maxDensity2d
maxFramerate
mergeDoors:
mergeLShape:worldpc:objecttypes:
mergeLShapeCabinets:worldpc:
merge_doors_on_same_wall:
merger
mirrorDetectionEnabled
mirrorPoints
mutableCopy
nearest_wall_indices_
newKeyframes
newTextureWithDescriptor:iosurface:plane:
nmsBoxes:
nonUniformHeightEnabled
normal
normalizeSizesOfSurfaces:withLowerWidthThreshold:higherWidthThreshold:
normalizedOutput
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
objectAtIndex:
objectAtIndexedSubscript:
objectBeautificationEnabled
objectForKey:
objectForKeyedSubscript:
occluded
onboardingEnabled
opendoorReplaceOpeningEnabled
opendoors
openingReplaceOpendoorEnabled
openings
optimizeBbox:intersectWallsIndex:nearestWallId:conservative:
origin
output
overlap:
parent
parentIdentifier
parentWallStatus
parseNetOut
pathForResource:ofType:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pixelBuffer
pixelSize
pointCloud
pointCloudFromDictionary:
points
pointsToWorld
polygonEdgeConfidence
polygonEdgeStates
polygonSize
pose
postprocess
postprocessWithNetInput:
predicateWithBlock:
preprocessOnSurface:withPointCloud:
processFloorPlan:
processInfo
processWithFloorPlan:temporalMeta:geometryMeta:
processWithKeyframes:initialAsset:
processWithKeyframes:initialAsset:completionHandler:
processWithKeyframes:initialAsset:completionHandlerWithError:
processWithKeyframes:initialAsset:error:
processWithVoxelize:asPythonApproach:resample:
processWithVoxelize:asPythonApproach:resample:outlierRemove:
producer
projectDetectBoxesTo3dOnSurface:withPointCloud:
quad
radius
rawCount
rawFeaturePoints
rawFloorPlan
rawPoints
recessedWalls
referenceOriginTransform
refineBoundaryWithFrame:
removeAllObjects
removeInput:
removeMultiDetectionAcrossClassesWithOverlap:
removeMultiDetectionAcrossClassesWithOverlapOffline:
removeObject:
removeObserver:name:object:
removeOpenDoorPanelFp
removeOpenDoorPanelFpWithOpenDoors:andCloseDoors:
removeOutput:
render
renderSampleBuffer:fromInput:
replaceObjectAtIndex:withObject:
reset
resetAllSurfacesUpdateStatus
resetScanUIFormatter
resizeToHeight:width:channel:
respondsToSelector:
retain
retainCount
rotateAlongZAxis:
run:
runModelWithFrame:cameraPose:driftSignal:intrinsic:seeWall:
runPipelineOnSurface:withPointCloud:
runWithConfiguration:
runWithFloorCeilingCount:
runWithFloorPlan:
runWithFloorPlan:lmap:geometryMeta:
runWithFloorPlan:lmap:geometryMeta:temporalMeta:
runWithFloorPlan:objects:keyframes:
runWithFloorPlan:objects:pointCloud:geometryMeta:density:
runWithFloorPlan:pointCloud:temporalMeta:
runWithFloorPlan:pointCloud:temporalMeta:geometryMeta:semanticImage:doorImage:maxDensity:lmap:
runWithFloorPlan:rsFrame:
runWithFloorPlan:semanticImage:heightImage:geometryMeta:temporalMeta:
runWithFloorPlan:temporalMeta:
runWithFloorPlan:temporalMeta:geometryMeta:
runWithFloorplan:geoMetryMeta:
runWithFloorplan:needMerge:replaceOpendoorByOpening:replaceOpeningByOpendoor:replaceOpeningByDoor:
runWithFrame:cameraPose:driftSignal:
runWithFrame:keyframes:cameraPose:
runWithLcnnFloorPlan:onlineFloorPlan:objects:mirrorPoints:keyframes:pointCloud:
runWithOnlineFloorplan:offlineFloorplan:camDensity2D:geoMetryMeta:
runWithPointCloud:currentKeyframe:temporalMeta:floorPlan:lcnnOpenings:
runWithPointCloud:floorPlan:lcnnOpenings:
runWithPointCloud:temporalMeta:geometryMeta:
runWithSemanticImage:geometryMeta:
sampleBuffer
samplePoints
scale
sceneCamera
sceneColorBuffer
score
select:indices:from:
self
semanticConfidenceBuffer
semanticImage
semanticLabelBuffer
semanticLabels
semanticVotes
serailizeARFrameMeta:
session:didFailWithError:
session:didUpdateAsset:
session:didUpdateFloorPlan:
session:didUpdateMarkerCoaching:
session:didUpdateTextCoaching:
setAppearMajorViews:
setAppearPosePts:
setBayWindowRecessedAreaEnabled:
setBayWindows:
setBeautificationEnable:
setBegin:
setBoundaryRefinementEnabled:
setCamH:
setCamW:
setCamera:
setCameraPose:
setCeilingHeight:
setCeilingSum:
setCenter:
setChairBeautificationEnable:
setChairBeautificationEnabled:
setChildren:
setCircleCenter:
setCoachingMaxFrameRate:
setColor:
setCompleted:
setConfidence:
setConsumer:
setCorners_status:
setCurvedWallEnable:
setCurvedWallEnabled:
setDateFormat:
setDelegate:
setDepth:
setDepthConfidenceBuffer:
setDetection_source:
setDeviceOrientation:
setDoorReplaceOpeningEnable:
setDoorReplaceOpeningEnabled:
setDoorWindowBeautificationEnable:
setDoorWindowBeautificationEnabled:
setDoorWindowEnable:
setDoors:
setDriftDetectionEnabled:
setEdgeConfidence:
setEdgeStates:
setEnableARFrameDepth:
setEnableARFrameDump:
setEnableARFrameRGB:
setEnableLiveDump:
setEndOrientation:
setEstimateFloorPlanColorEnable:
setFirstARFrame:
setFixedFloorPlanColor:withPointCloud:
setFloorCeilingCount:
setFloorPlan:
setFloorSum:
setFloorVote:
setFrontOpening:
setGroupId:
setGroups:
setHeightWithCeiling:floor:
setHighThreshold:
setIdentifier:
setImageResolution:
setImageSize:
setIncrementalIds:
setIndividualUpdate:
setIntrinsics:
setIsCaptured:
setIsCenterScaleUpdated:
setIsFakeWall:
setIsUpdate:
setLabel:
setLastARFrame:withCameraPose:
setLiveDumpEnable:
setLiveResultEnabled:
setLogits:
setLowThreshold:
setMappingInterval:
setMarkerCoachingEnable:
setMarkerCoachingEnabled:
setMarkers:
setMaxFramerate:
setMirrorDetectionEnabled:
setMirrorPoints:
setNonUniformHeightEnable:
setNonUniformHeightEnabled:
setNormal:
setNormalizedOutput:
setObject:forKey:
setObject:forKeyedSubscript:
setObjectBeautificationEnable:
setObjects:
setOccluded:
setOnboarding:
setOnboardingEnabled:
setOpendoorReplaceOpeningEnable:
setOpendoorReplaceOpeningEnabled:
setOpendoors:
setOpeningReplaceOpendoorEnable:
setOpeningReplaceOpendoorEnabled:
setOpenings:
setParent:
setParentIdentifier:
setParentWallStatus:
setPixelSize:
setPoints:semanticLabels:semanticVotes:colors:count:
setPose:
setProducer:
setQuad:
setRadius:
setRawFeaturePoints:
setRawFloorPlan:
setRawSize:
setRecessedWalls:
setReferenceOriginTransform:
setRender:
setSamplePoints:
setScale:
setScaleTransform:
setSceneColorBuffer:
setScore:
setSemanticConfidenceBuffer:
setSemanticLabelBuffer:
setShift:
setSize:
setSource_object_uuid:
setStandardizationEnable:
setStandardizationEnabled:
setStartOrientation:
setState:
setStatus:
setSupportHeight:
setTarget_object_uuid:
setTextCoachingEnabled:
setTimestamp:
setTrackingState:
setTransform:
setType:
setUpInternalDumpWithLogDir:enable:
setUsage:
setVioTrackingState:
setVisualCeilingHeight:
setVisualFloorHeight:
setWallOpeningMergeEnable:
setWallOpeningMergeEnabled:
setWallStatus:
setWalls:
setWindowDoorDetectionEnabled:
setWindows:
setWithArray:
setWithObject:
setZSlice:
setupHeight
setupRefinementProcessor:
shift
sinkNode
size
snapWallsWithFloorPlan:lmap:shift:scale:imageSize:
sortDescriptorWithKey:ascending:
sortKeyframeMetas:
sortKeyframesBySizeInDescendingOrder:
sortKeyframesByTimestamp:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sourceNode
source_object_uuid
standardUserDefaults
standardizationEnabled
standardizeFloorPlan:
startOrientation
state
status
stop
stringByAppendingString:
stringWithFormat:
stringWithUTF8String:
subarrayWithRange:
superclass
supportHeight
supportsSecureCoding
sz_major_convex_hull
sz_major_convex_hull_buffer
sz_major_view_line
sz_major_views
target_object_uuid
temporalMeta
text
textCoachingEnabled
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
thermalState
timeIntervalSinceDate:
timestamp
trackingState
transform
translateBy:
type
unsignedIntValue
unsignedIntegerValue
updateCoachingStateFirstKeyframe:
updateCoachingWithFrame:
updateCursor
updateDoorsHeight
updateFloorPlan:withRecessedArea:
updateFloorPlan:withRecessedAreas:
updateFloorPlanGeneratorWithConfiguration:
updateKeyframeHeights
updateKeyframeIds
updateMirrorPointWithFrame:
updateNodesHeight
updateObjects:
updateOpenDoorsHeight
updateOpeningsHeight
updateRecessedAreaPoolAndCurrentFrameWithWalls:windows:openings:doors:opendoors:
updateStructure:
updateSurfacesHeight:withCeiling:floor:
updateWallsHeight
updateWindowsHeight
updateWithFrame:
updateWithKeyframes:
updateWithObjects:
validateDepthOfRSFrame:
validateFloorPlan:
validateParentIdentifierOfWalls:
vioTrackingState
visualCeilingHeight
visualFloorHeight
waitUntilCompleted
wallOpeningMergeEnabled
wallStatus
walls
width
windowDoorDetectionEnabled
writeToFile:atomically:
zSlice
zone
@16@0:8
@40@0:8@16B24B28B32B36
v16@0:8
{RSParentAssociationCore="_vptr$RSParentAssociationCore"^^?"_matching_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
v24@0:8@16
@"RSGeometryMeta"
{?="margin"i"img_sz"i"use_pw_center"B"pw_center_update_rate"i"use_global_center"B"use_dynamic_pixel_sz"B"pixel_sz"f"hist_norm"B"z_slice"i"z_slice_pixel"f}
@96@0:8@16@24{?=[4]}32
{RSDriftDetectionCore="_vptr$RSDriftDetectionCore"^^?"_is_arTrackingStable"B"_is_vioTrackingStable"B"_is_first_wall_generated"B"_is_first_keyframe_generated"B"_enable_sample_colors"B"_ar_frames"{vector<rs_drift_detection::DriftFrameInternalWraper, std::allocator<rs_drift_detection::DriftFrameInternalWraper>>="__begin_"^{DriftFrameInternalWraper}"__end_"^{DriftFrameInternalWraper}"__end_cap_"{__compressed_pair<rs_drift_detection::DriftFrameInternalWraper *, std::allocator<rs_drift_detection::DriftFrameInternalWraper>>="__value_"^{DriftFrameInternalWraper}}}"_drift_detection_config"{DRIFT_DETECTION_CONFIG="xyz_speed_drift_thres"f"view_speed_drift_thres"f"feature_pts_match_thres"f"feature_pts_similarity_thres"f"flying_away_frames"f"flying_away_angle_thres"f"flying_away_xyz_speed_drift_thres"f"flying_away_view_speed_drift_thres"f"big_align_gap_wall_len_thres"f"big_align_gap_thres"f"big_align_gap_search_thres"f"big_align_area_thres"f"pose_get_stuck_eps"f"n_lost_track_thr"i}"_count_idx"Q"_ignore_idx"Q"_keep_frame_size"Q"_n_lost_track"Q}
B16@0:8
@24@0:8@16
@56@0:8@16@24@32@40@48
v20@0:8B16
{vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__value_"^}}
{NonUniformHeightEstimation="_floor_global_value"d"_ceiling_global_value"d"_line_points"{unordered_map<std::string, PointsLine, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, PointsLine>>>="__table_"{__hash_table<std::__hash_value_type<std::string, PointsLine>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, PointsLine>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, PointsLine>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, PointsLine>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, PointsLine>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, PointsLine>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_individual_wall_height"{unordered_map<std::string, IndividualWallHeightStruct, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, IndividualWallHeightStruct>>>="__table_"{__hash_table<std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, IndividualWallHeightStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_valid_line_segments"{vector<SegmentsInfo, std::allocator<SegmentsInfo>>="__begin_"^{SegmentsInfo}"__end_"^{SegmentsInfo}"__end_cap_"{__compressed_pair<SegmentsInfo *, std::allocator<SegmentsInfo>>="__value_"^{SegmentsInfo}}}}
v32@0:8@16@24
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}28@0:8r^v16B24
{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}40@0:8r^v16r^v24i32B36
@48@0:8@16@24@32B40B44
@"RS3DObjectMerger"
{vector<quad3dType2, std::allocator<quad3dType2>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<quad3dType2 *, std::allocator<quad3dType2>>="__value_"^{?}}}
{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}
{vector<std::vector<float>, std::allocator<std::vector<float>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<float> *, std::allocator<std::vector<float>>>="__value_"^v}}
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"RSNodeMessage"16@"RSNodeOutput"24
@32@0:8@16@24
B24@0:8^@16
@"RSNodeOutput"
@"RSNodeInput"
{?=[30]}16@0:8
v496@0:8{?=[30]}16
{?="points"[30]}
v28@0:8@16B24
v88@0:8@16{?=[4]}24
@24@0:8^{__CVBuffer=}16
@40@0:8^{__CVBuffer=}16Q24Q32
v96@0:8@16@24{?=[4]}32
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSString"
@"NSMutableArray"
@"NSDate"
@"NSMutableDictionary"
@"<RSFrame>"
{?="columns"[4]}
@40@0:8@16@24^@32
16@0:8
@"RSWallOpeningOnlineOptimizer"
@"RSDoorWindowOnlineDetector"
@"RSMirrorDetection"
@"RSWallOpeningOnlineDetector"
@"RSKeyframeAccumulation"
@"RSGeometryCalculation"
@"RSScanUIFormatter"
@"RSOnlineCurvedWallFusion"
@"RSProjection2DZ"
@"RSNonUniformHeightEstimation"
@"RSOpeningHeightAlignment"
@"RSRecessedAreaReconstructor"
@"RSParentAssociation"
@"RSMarkerCoaching"
@"RSMarkerSignal"
@"RSFloorPlan"
r^v16@0:8
v32@0:8^{opaqueCMSampleBuffer=}16@24
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16f48i52i56
f24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
f16@0:8
v20@0:8f16
i16@0:8
v20@0:8i16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@44@0:8@16@24@32B40
@40@0:8@16@24@32
@28@0:8@16f24
v96@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}32{CGRect={CGPoint=dd}{CGSize=dd}}64
B32@0:8@16@24
v32@0:8@16f24f28
f32@0:8@16@24
^{__CVBuffer=}
^{__IOSurface=}
[6^{__CVBuffer}]
[6^{__IOSurface}]
{?="plan"^v"network_index"i}
[6[20[2f]]]
{vector<std::vector<std::vector<std::vector<std::vector<float>>>>, std::allocator<std::vector<std::vector<std::vector<std::vector<float>>>>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<std::vector<std::vector<std::vector<float>>>> *, std::allocator<std::vector<std::vector<std::vector<std::vector<float>>>>>>="__value_"^v}}
{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}
@"NSArray"
{WallOpeningSelectorForDoorWindow="_vptr$WallOpeningSelectorForDoorWindow"^^?"_infer_wall_openings"@"NSMutableArray""_infer_wall_openings_attributes"{vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>>="__begin_"^{WallOpeningAttribute}"__end_"^{WallOpeningAttribute}"__end_cap_"{__compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>>="__value_"^{WallOpeningAttribute}}}"_target_infer_wall_openings"@"NSMutableArray""_target_infer_wall_openings_attributes"{vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>>="__begin_"^{WallOpeningAttribute}"__end_"^{WallOpeningAttribute}"__end_cap_"{__compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>>="__value_"^{WallOpeningAttribute}}}"_new_wall_openings"@"NSArray""_cur_keyframe"@"<RSKeyframe>""_floor_height"f"_ceiling_height"f"_convex_hull"^"_convex_hull_size"Q"_cur_lines"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"_new_lines"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"_cur_matches"{vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>>="__begin_"^{RS_Match_Info}"__end_"^{RS_Match_Info}"__end_cap_"{__compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>>="__value_"^{RS_Match_Info}}}"_new_matches"{vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>>="__begin_"^{RS_Match_Info}"__end_"^{RS_Match_Info}"__end_cap_"{__compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>>="__value_"^{RS_Match_Info}}}"_select_wall"B}
{MergerForDoorWindow="_vptr$MergerForDoorWindow"^^?"_new_instances"@"NSMutableArray""_target_infer_walls_openings"@"NSArray""_new_walls_openings"@"NSArray""_merged_instances"@"NSMutableArray""_prev_instances"@"NSMutableArray""_prev_instances_on_infer_walls_openings"@"NSMutableArray""_prev_instances_to_keep"@"NSMutableArray"}
@"RSOrthographicDetector"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=[4]}16@0:8
B32@0:8@16^24
B32@0:8@16^{?=[4]}24
v32@0:816
v28@0:8i16@20
v32@0:8r^{box3d=[8]}16@24
@"NSUUID"
@32@0:8^{opaqueCMSampleBuffer=}16@24
^{opaqueCMSampleBuffer=}16@0:8
^{opaqueCMSampleBuffer=}
@"NSDictionary"
{RSDeduplicateOpeningOpenDoorCore="_vptr$RSDeduplicateOpeningOpenDoorCore"^^?"_angle_thresh"f"_projection_dist_thresh"f"_dist_thresh"f"_matching_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
@64@0:8@16@24@32@40@48@56
@"RSDoorWindowOfflineDetector"
@"RSWallOpeningOfflineDetector"
@"RSOfflineKeyframeAccumulation"
@"RSOfflineGeometryCalculation"
@"RSCurvedWallDetection"
@"RSOfflineProjection2DZNode"
@"RSBayWindowFPRemoval"
@"RSStructurePostProcess"
@"RSDeduplicateOpeningOpenDoor"
@"RSOnlineOfflineAssociation"
@"RSOutsideObjectRemoval"
@"RSDoorWindowPostProcessor"
@76@0:8@16@24@32@40@48@56f64r^v68
{RSOnlineRefinement="_vptr$RSOnlineRefinement"^^?"_search_range_7"{Tensor<int, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<int>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^i}"_search_range_3"{Tensor<int, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<int>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^i}"_fitting_lines"{optional<rs_ol::RS3DSurfaceOnline>=""(?="__null_state_"c"__val_"{RS3DSurfaceOnline="_vptr$RS3DSurfaceOnline"^^?"surface"@"RS3DSurface""line_2d"{RSLine2D="_vptr$RSLine2D"^^?"pt"[2]}"line_3d"{RSLine3D="_vptr$RSLine3D"^^?"pt"[2]}"floor_height"f"ceiling_height"f"height"f"visible"B"visible_buffer"B"major_dist"f"major_angle"f"transition_status"i"first_appear_frame"i"last_appear_frame"i"non_match_count"i"non_match_shorten_count"i"debug_idx"i"wall_type"i"standalone_opening_count"i"_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_parrent_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}})"__engaged_"B}"_config"{ONLINE_REFINE_CONFIG="density_index"i"slice_threshold"f"min_slice_num"f"min_wall_length"f"min_density"f"zslice_density_threshold"f"major_small_wall_length_th"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
{RSOnlineFusion="_vptr$RSOnlineFusion"^^?"_camera_positions"{vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__value_"^}}"_online_floorplan_last"{RSFloorPlanOnline="_vptr$RSFloorPlanOnline"^^?"walls"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"openings"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"windows"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"doors"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"open_doors"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"door_panels"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"curved_circles"{vector<RS3DCurvedSurface *, std::allocator<RS3DCurvedSurface *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<RS3DCurvedSurface *__strong *, std::allocator<RS3DCurvedSurface *>>="__value_"^@}}"structure_graph"{RSStructureGraph="_vptr$RSStructureGraph"^^?"_structures"{vector<rs_ol::RSStructure *, std::allocator<rs_ol::RSStructure *>>="__begin_"^^{RSStructure}"__end_"^^{RSStructure}"__end_cap_"{__compressed_pair<rs_ol::RSStructure **, std::allocator<rs_ol::RSStructure *>>="__value_"^^{RSStructure}}}}"_empty"{RS3DSurfaceOnline="_vptr$RS3DSurfaceOnline"^^?"surface"@"RS3DSurface""line_2d"{RSLine2D="_vptr$RSLine2D"^^?"pt"[2]}"line_3d"{RSLine3D="_vptr$RSLine3D"^^?"pt"[2]}"floor_height"f"ceiling_height"f"height"f"visible"B"visible_buffer"B"major_dist"f"major_angle"f"transition_status"i"first_appear_frame"i"last_appear_frame"i"non_match_count"i"non_match_shorten_count"i"debug_idx"i"wall_type"i"standalone_opening_count"i"_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_parrent_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}}"_empty_lists"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}"_structure_config"{ONLINE_STRUCTURE_CONFIG="z_shape_min_len"f"z_shape_max_len"f"w_shape_min_len"f"w_shape_max_len"f}"_tm_helper"{RSTmOnlineTMScoreHelper="_vptr$RSTmOnlineTMScoreHelper"^^?}"_local_standardization"{RSLocalStandardization="_vptr$RSLocalStandardization"^^?"_online_std_config"{ONLINE_STANDARDIZATION_CONFIG="large_wall_len_thr"f"small_wall_len_thr"f"noise_wall_len_thr"f"angle_thr"f"noise_wall_angle_thr"f"angle_eps"f"anchor_wall_len_factor"f"corner_dist_thr"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}"_curved_walls"{vector<rs_ol::RSCurvedSurfaceOnline, std::allocator<rs_ol::RSCurvedSurfaceOnline>>="__begin_"^{RSCurvedSurfaceOnline}"__end_"^{RSCurvedSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RSCurvedSurfaceOnline *, std::allocator<rs_ol::RSCurvedSurfaceOnline>>="__value_"^{RSCurvedSurfaceOnline}}}"_online_curved_segments"{vector<RS3DCurvedSurface *, std::allocator<RS3DCurvedSurface *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<RS3DCurvedSurface *__strong *, std::allocator<RS3DCurvedSurface *>>="__value_"^@}}"_online_curved_wall_config"{ONLINE_CURVED_CONFIG="minDist"f"param1"i"param2"i"minRadius"f"maxRadius"f"density_thres"f"angle_thres"f"length_thres"f"kernel_size"i"iou_thr"f"min_iou_thr"f"dist_thr"f"inner_line_tol"f"inner_circle_tol"f"intersect_tol"f"segment_type"i"segment_angle"f"segment_length"f"direction_change_eps"f"reuse_uuid_iou_thr"f"reuse_uuid_dist_thr"f"reuse_uuid_angle_thr"f}"_need_curved_wall_process"B"_historical_low_conf_walls"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}}
{TracingMap="_vptr$TracingMap"^^?"_voxel_sz"f"_values"{unordered_map<unsigned long long, bool, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, bool>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, bool>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, bool>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}}
{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}
{Tensor<__fp16, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<__fp16>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^ }
@48@0:81632
q16@0:8
{tuple<NSArray<RS3DSurface *> *, NSArray<RS3DSurface *> *>={__tuple_impl<std::__tuple_indices<0, 1>, NSArray<RS3DSurface *> *, NSArray<RS3DSurface *> *>=@@}}56@0:8@16@24@32@40@48
{ONLINE_BAY_WINDOW_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}
{unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long>>="__table_"{__hash_table<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long, void *> *>, std::allocator<std::__hash_node<unsigned long, void *>>>="__value_"{__hash_node_base<std::__hash_node<unsigned long, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<unsigned long>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<unsigned long>>="__value_"f}}}
v80@0:8{?=[4]}16
{?=[3]}16@0:8
v64@0:8{?=[3]}16
{?="columns"[3]}
r^16@0:8
^{?=[4]}16@0:8
^16@0:8
v32@0:8r^16Q24
v32@0:8^16Q24
{vector<simd_float4x4, std::allocator<simd_float4x4>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<simd_float4x4 *, std::allocator<simd_float4x4>>="__value_"^{?}}}
@56@0:8@16@24@32@40r^v48
{Room_Standardization="standardizer_"{Standard_Room="initparam"{Standard_Param="pixel_sz_dynamic"f"init_minimum_walls"i"shortest_wall_length"f"duplicate_point_thresh"f"unique_point_angle"f"tiny_small_wall_length"f"parallel_dis_thresh"f"parallel_angle_thresh"f"lbfgs_drift_angle_thresh"f"lbfgs_dist_thresh"f"lbfgs_optimize_min_length"f"lbfgs_move_region"f"lbfgs_move_region_rate"f"lbfgs_tm_score_diff_thresh"f"min_first_wall_length"f"manhattan_angle_offset"f"keep_connect_angle_thresh"f"keep_connect_intersection_distance"f"need_rotate_small_wall_length"f"need_rotate_wall_angle"f"need_rotate_small_wall_angle"f"standard_manhattan_angle"f"merge_cross_lines_dis_thresh"f"merge_cross_lines_angle_thresh"f"merge_cross_lines_split_dist_th"f"merge_cross_gap_dist_th"f"merge_cross_gap_angle_th"f"add_tiny_corner_dist_th"f"add_tiny_corner_vertical_angle_th"f"add_tiny_corner_parallel_angle_th"f"add_tiny_opening_dist_th"f"add_tiny_opening_parallel_angle_th"f"add_tiny_opening_parallel_dist_th"f}"walls"{vector<wlw::lcnn_flp::standard_line2d, std::allocator<wlw::lcnn_flp::standard_line2d>>="__begin_"^{standard_line2d}"__end_"^{standard_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::standard_line2d *, std::allocator<wlw::lcnn_flp::standard_line2d>>="__value_"^{standard_line2d}}}"vertex"{vector<wlw::lcnn_flp::standard_point2d, std::allocator<wlw::lcnn_flp::standard_point2d>>="__begin_"^{standard_point2d}"__end_"^{standard_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::standard_point2d *, std::allocator<wlw::lcnn_flp::standard_point2d>>="__value_"^{standard_point2d}}}"vertex_1d"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"line_mask"{vector<std::vector<unsigned long>, std::allocator<std::vector<unsigned long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<unsigned long> *, std::allocator<std::vector<unsigned long>>>="__value_"^v}}"vertex_walls"{vector<std::vector<unsigned long>, std::allocator<std::vector<unsigned long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<unsigned long> *, std::allocator<std::vector<unsigned long>>>="__value_"^v}}"vertex_angles"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"vertex_angles_180"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"tiny_sw_vertex"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"tiny_sw_line_id"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"first_wall"{standard_line2d="pt"[4f]"pts0"{standard_point2d="x"f"y"f}"pts1"{standard_point2d="x"f"y"f}"theta"f"a"f"length"f"angle"f"align_n"i"score"f}"_geoMeta"@"RSGeometryMeta""_density_map"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_before_tm_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}}"angle_th"f"dis_th"f"project_map"{unordered_map<std::string, std::vector<wlw::lcnn_flp::ProjectParam>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::vector<wlw::lcnn_flp::ProjectParam>>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"localStandardizer_"{RSLocalStandardization="_vptr$RSLocalStandardization"^^?"_online_std_config"{ONLINE_STANDARDIZATION_CONFIG="large_wall_len_thr"f"small_wall_len_thr"f"noise_wall_len_thr"f"angle_thr"f"noise_wall_angle_thr"f"angle_eps"f"anchor_wall_len_factor"f"corner_dist_thr"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}}
@"RSObjectAlign"
@"RSPointCloudColorEstimator"
v40@0:8@16@24@?32
@"NSObject<OS_dispatch_semaphore>"
@"RSOfflineFloorPlanGenerator"
@"RSGenerationConfiguration"
@"RSCaptureConfiguration"
@"RSOnlineFloorPlanGenerator"
@"RSScanCoaching"
@"RSDriftDetection"
@"NSObject<OS_dispatch_source>"
@"RSInternalInfoDumper"
@"OS_os_workgroup"
@"RSFloorPlanBoundaryRefinement"
@"<RSCaptureSessionDelegate>"
d16@0:8
v24@0:8d16
@"NSUUID"16@0:8
@28@0:8@16I24
v52@0:8^16^24^32^40I48
v32@0:8Q16r^Q24
v40@0:8Q16r^Q24@32
v32@0:8B16B20B24B28
I16@0:8
v20@0:8I16
{vector<unsigned char __attribute__((ext_vector_type(4))), std::allocator<unsigned char __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<unsigned char * __attribute__((ext_vector_type(4))), std::allocator<unsigned char __attribute__((ext_vector_type(4)))>>="__value_"^}}
{vector<unsigned short __attribute__((ext_vector_type(4))), std::allocator<unsigned short __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<unsigned short * __attribute__((ext_vector_type(4))), std::allocator<unsigned short __attribute__((ext_vector_type(4)))>>="__value_"^}}
@"RSSemanticImage"
{?="global_max_density"f"global_max_density_3d"f"voxel_size"f"z_slice"i"numSemanticChannels"Q"numAllChannels"Q}
@"<RSNodeOutputConsumer>"
@"<RSNodeInputProducer>"
v24@0:8f16f20
r^c16@0:8
r^f16@0:8
v48@0:8r^16r^c24r^f32Q40
C16@0:8
v20@0:8C16
{?=[4c]}16@0:8
v20@0:8{?=[4c]}16
{?=[4f]}16@0:8
v32@0:8{?=[4f]}16
c16@0:8
v20@0:8c16
{vector<RSEdgeStatesType, std::allocator<RSEdgeStatesType>>="__begin_"^c"__end_"^c"__end_cap_"{__compressed_pair<RSEdgeStatesType *, std::allocator<RSEdgeStatesType>>="__value_"^c}}
{?="states"[4c]}
@"RS3DSurface"
{?="confidence"[4f]}
{?="corners"[4]}
@40@0:8Q16Q24Q32
@52@0:8Q16Q24Q32Q40I48
@48@0:8Q16Q24Q32Q40
^v16@0:8
^v24@0:8Q16
v40@0:8Q16Q24Q32
(?="memoryBuffer"^f"pixelBuffer"^{__CVBuffer})
^{__CVBuffer=}16@0:8
^{__IOSurface=}16@0:8
@40@0:8r^v16C24f2832
{Lcnn_floorplan_detector="_vptr$Lcnn_floorplan_detector"^^?"_unet_fpn_backbone"{Unet_fpn_backbone_v1="_vptr$Unet_fpn_backbone_v1"^^?"_net"{IEspresso_Interface_v1="_vptr$IEspresso_Interface_v1"^^?"_output_tensor"{map<std::string, espresso_buffer_t *, std::less<std::string>, std::allocator<std::pair<const std::string, espresso_buffer_t *>>>="__tree_"{__tree<std::__value_type<std::string, espresso_buffer_t *>, std::__map_value_compare<std::string, std::__value_type<std::string, espresso_buffer_t *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, espresso_buffer_t *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, espresso_buffer_t *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, espresso_buffer_t *>, std::less<std::string>, true>>="__value_"Q}}}"_ctx"^v"_plan"^v"_net"{?="plan"^v"network_index"i}"_previous_mode"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_single_resolution"B}"_lcnn_fc2"{Lcnn_FC2="_vptr$Lcnn_FC2"^^?"_fc2_0_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_1_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_2_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_0_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_1_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_2_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc_dim"i"_fc_dim1"i}"_lambda"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_backbone_param"{BackBone_Param="single_resolution"B"fixed_input_shape"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"dynamic_input_shape"{map<std::vector<unsigned long>, std::string, std::less<std::vector<unsigned long>>, std::allocator<std::pair<const std::vector<unsigned long>, std::string>>>="__tree_"{__tree<std::__value_type<std::vector<unsigned long>, std::string>, std::__map_value_compare<std::vector<unsigned long>, std::__value_type<std::vector<unsigned long>, std::string>, std::less<std::vector<unsigned long>>, true>, std::allocator<std::__value_type<std::vector<unsigned long>, std::string>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<unsigned long>, std::string>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<unsigned long>, std::__value_type<std::vector<unsigned long>, std::string>, std::less<std::vector<unsigned long>>, true>>="__value_"Q}}}"max_K"Q"junc_score_thres"f"fpn_len_range_max"f"fpn_len_range_min"f"n_pts0"Q"n_pts1"Q"dim_fc"Q"dim_loi"Q"cls_score_thres"f"filter_line_proposal"B}}"_wall_postprocess"{Lcnn_Floorplan_Post="density_buffer"^f"lcnn_lines"{willow_lcnn_lines="lines"{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_lines"Q}"lcnn_juncs"{willow_lcnn_juncs="juncs"{vector<wlw::lcnn_flp::willow_point2d, std::allocator<wlw::lcnn_flp::willow_point2d>>="__begin_"^{willow_point2d}"__end_"^{willow_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_point2d *, std::allocator<wlw::lcnn_flp::willow_point2d>>="__value_"^{willow_point2d}}}"junc_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_juncs"Q}"_param"{PostProcess_Param="image_sz"Q"pixel_m"f"max_length"i"small_wall_length_thres"f"length_score_weight"f"tm_score_protect_size"Q"tm_score_weight"f"tm_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"line_nms_angle_thres"f"line_nms_dist_thres"f"line_nms_sw_angle_thres"f"line_nms_projection_iou_thres"f"line_nms_score_diff_thres"f"score_filtering_decision_boundary_map"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"cls_delta"f"tms_delta"f"score_filtering_decision_boundary_map_for_line_proposals"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"structure_filtering_acute_angle_min_thres"f"structure_filtering_acute_angle_max_thres"f"opening_score_density_thres"f"opening_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"hard_mode_opening_area_len_thres"f}}"_opening_postprocess"{Lcnn_Floorplan_Post="density_buffer"^f"lcnn_lines"{willow_lcnn_lines="lines"{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_lines"Q}"lcnn_juncs"{willow_lcnn_juncs="juncs"{vector<wlw::lcnn_flp::willow_point2d, std::allocator<wlw::lcnn_flp::willow_point2d>>="__begin_"^{willow_point2d}"__end_"^{willow_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_point2d *, std::allocator<wlw::lcnn_flp::willow_point2d>>="__value_"^{willow_point2d}}}"junc_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_juncs"Q}"_param"{PostProcess_Param="image_sz"Q"pixel_m"f"max_length"i"small_wall_length_thres"f"length_score_weight"f"tm_score_protect_size"Q"tm_score_weight"f"tm_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"line_nms_angle_thres"f"line_nms_dist_thres"f"line_nms_sw_angle_thres"f"line_nms_projection_iou_thres"f"line_nms_score_diff_thres"f"score_filtering_decision_boundary_map"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"cls_delta"f"tms_delta"f"score_filtering_decision_boundary_map_for_line_proposals"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"structure_filtering_acute_angle_min_thres"f"structure_filtering_acute_angle_max_thres"f"opening_score_density_thres"f"opening_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"hard_mode_opening_area_len_thres"f}}"_wall_lmap"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_lmap"{Tensor<float, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}}
@36@0:8q16q24f32
@28@0:8q16f24
v24@0:8q16
v40@0:8@16@24i32B36
v48@0:8@16@24f32C36i40B44
v36@0:8@16@24i32
@"RSPointCloud"
@"RSTemporalMeta"
{unique_ptr<rs_erf::EdgeRefinement, std::default_delete<rs_erf::EdgeRefinement>>="__ptr_"{__compressed_pair<rs_erf::EdgeRefinement *, std::default_delete<rs_erf::EdgeRefinement>>="__value_"^{EdgeRefinement}}}
v24@0:816
@28@0:8@16B24
@56@0:8Q16r^24r^32r^40^48
v56@0:8Q16r^24r^32r^40^48
v28@0:8B16B20B24
24@0:8@16
{unordered_map<std::string, unsigned int __attribute__((ext_vector_type(2))), std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int __attribute__((ext_vector_type(2)))>>>="__table_"{__hash_table<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
{unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long>>="__table_"{__hash_table<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *>, std::allocator<std::__hash_node<unsigned long long, void *>>>="__value_"{__hash_node_base<std::__hash_node<unsigned long long, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<unsigned long long>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<unsigned long long>>="__value_"f}}}
{unordered_map<std::string, std::unordered_set<unsigned long long>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::unordered_set<unsigned long long>>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}32@0:8r^v16@24
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}40@0:8r^v16@24@32
@"RSFloorPlanRender"
v40@0:8@16@24@32
{?="global_max_density"f"global_max_density_3d"f"voxel_size"f"z_slice"i"numSemanticChannels"Q"numAllChannels"Q"numHeightChannels"Q}
v48@0:816
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@40@0:8@16r^v24@32
@208@0:8{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}16
@40@0:8{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}16
@48@0:8{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}16@40
{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}24@0:8@16
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}24@0:8@16
@60@0:8@162440f56
v48@0:8@16@24@32@40
B128@0:8{?=[4]}16{?=[3]}80
f128@0:8{?=[4]}16{?=[3]}80
{?=[3]}64@0:8{?=[3]}16
@148@0:8@16{?=[4]}24@88{?=[3]}96B144
@96@0:8@16{?=[4]}24@88
{SpeedCoaching="_speed_range"f"_proj_speed_range"f"_threshold"f"_pose_queue"{deque<std::tuple<simd_float4x4, double>, std::allocator<std::tuple<simd_float4x4, double>>>="__map_"{__split_buffer<std::tuple<simd_float4x4, double> *, std::allocator<std::tuple<simd_float4x4, double> *>>="__first_"^^v"__begin_"^^v"__end_"^^v"__end_cap_"{__compressed_pair<std::tuple<simd_float4x4, double> **, std::allocator<std::tuple<simd_float4x4, double> *>>="__value_"^^v}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<std::tuple<simd_float4x4, double>>>="__value_"Q}}"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>="__map_"{__split_buffer<float * __attribute__((ext_vector_type(2))), std::allocator<float * __attribute__((ext_vector_type(2)))>>="__first_"^^"__begin_"^^"__end_"^^"__end_cap_"{__compressed_pair<float ** __attribute__((ext_vector_type(2))), std::allocator<float * __attribute__((ext_vector_type(2)))>>="__value_"^^}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float __attribute__((ext_vector_type(2)))>>="__value_"Q}}"_latest_v""_latest_w""_last_vio_lost_time"@"NSDate""_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{LightCoaching="_kpt_range"f"_threshold"f"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_latest_mean_color"f"_latest_n_kpt"f"_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{DistanceCoaching="_threshold"f"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_latest_meand"f"_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{OnboardCoaching="_v_thr1"f"_v_thr2"f"_w_thr1"f"_w_thr2"f"_brightness_thr1"f"_brightness_thr2"f"_distance_thr1"f"_distance_thr2"f"_n_kpt_thr1"f"_n_kpt_thr2"f"_texture_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_speed_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_firstCallTime"@"NSDate""_latest_signal"@"RSTextCoachingSignal""_w_v"f"_b_v"f"_w_w"f"_b_w"f"_w_brightness"f"_b_brightness"f"_w_distance"f"_b_distance"f"_w_n_kpt"f"_b_n_kpt"f}
{vector<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>, std::allocator<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad> *, std::allocator<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>>>="__value_"^v}}
@"RSTextCoachingSignal"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
@48@0:8@16@24@32@40
{RSOnlineOfflineAssociationCore="_vptr$RSOnlineOfflineAssociationCore"^^?"_offline_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
{MarkerProposal="_vptr$MarkerProposal"^^?"_extend_length"f"_angle_thres_for_major_wall"f"_parallel_angle_thres"f"_corner_dist_thres"f"_alg_structure_complete"{Structure_complete="small_gaps"{vector<marker_proposal::Structure_completeOutput, std::allocator<marker_proposal::Structure_completeOutput>>="__begin_"^{Structure_completeOutput}"__end_"^{Structure_completeOutput}"__end_cap_"{__compressed_pair<marker_proposal::Structure_completeOutput *, std::allocator<marker_proposal::Structure_completeOutput>>="__value_"^{Structure_completeOutput}}}"small_gaps_result"{vector<marker_proposal::Structure_completeOutput, std::allocator<marker_proposal::Structure_completeOutput>>="__begin_"^{Structure_completeOutput}"__end_"^{Structure_completeOutput}"__end_cap_"{__compressed_pair<marker_proposal::Structure_completeOutput *, std::allocator<marker_proposal::Structure_completeOutput>>="__value_"^{Structure_completeOutput}}}"_connection_angle_thresh"f"_gap_length_thresh"f"_gap_size_thresh"f"_iou_thresh"f"_line_occupancy_thresh"f"_angle_thres_with_view_line"f"_neighbor_line_threshold"f"_frame_in_consider"i"_line_id1"i"_line_id2"i}"_pool"{vector<marker_proposal::ProposalWrapper, std::allocator<marker_proposal::ProposalWrapper>>="__begin_"^{ProposalWrapper}"__end_"^{ProposalWrapper}"__end_cap_"{__compressed_pair<marker_proposal::ProposalWrapper *, std::allocator<marker_proposal::ProposalWrapper>>="__value_"^{ProposalWrapper}}}"_all_major_convex_hulls"{vector<std::vector<float __attribute__((ext_vector_type(3)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<float __attribute__((ext_vector_type(3)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}}
{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}
{?="margin"i"img_sz"i"use_dynamic_img_sz"B"img_sz0"i"img_sz_step"i"use_pw_center"B"pw_center_update_rate"i"use_global_center"B"use_dynamic_pixel_sz"B"pixel_sz"f"hist_norm"B"z_slice"i"z_slice_pixel"f}
@100@0:8@16r^v243264i96
@48@0:8@16r^v24@32@40
{vector<RSOnlineCurvedWall, std::allocator<RSOnlineCurvedWall>>="__begin_"^{RSOnlineCurvedWall}"__end_"^{RSOnlineCurvedWall}"__end_cap_"{__compressed_pair<RSOnlineCurvedWall *, std::allocator<RSOnlineCurvedWall>>="__value_"^{RSOnlineCurvedWall}}}
@32@0:8r^16Q24
@"<RSCamera>"16@0:8
@"<RSRawPointCloud>"16@0:8
v24@0:8^{__CVBuffer=}16
@"<RSCamera>"
@"<RSRawPointCloud>"
{OpeningHeightAlignment="_vptr$OpeningHeightAlignment"^^?"_opening_fixed"{unordered_map<std::string, rs_oalign::OpeningFixedNode, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, rs_oalign::OpeningFixedNode>>>="__table_"{__hash_table<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_check_in_view"B"_floor_v"f"Min_Opening_height"f"Invaid_height_min"f"Max_try_times"i"Second_try_times"i"Max_opeing_height"f"opening_wall_gap"d"_hole_vector"{vector<rs_oalign::HoleOpening, std::allocator<rs_oalign::HoleOpening>>="__begin_"^{HoleOpening}"__end_"^{HoleOpening}"__end_cap_"{__compressed_pair<rs_oalign::HoleOpening *, std::allocator<rs_oalign::HoleOpening>>="__value_"^{HoleOpening}}}}
h00L
ARGB
L>fff?
