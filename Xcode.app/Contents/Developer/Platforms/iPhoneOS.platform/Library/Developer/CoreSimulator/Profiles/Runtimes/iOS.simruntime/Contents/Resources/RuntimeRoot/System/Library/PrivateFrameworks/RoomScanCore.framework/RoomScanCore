333?
 Cfff?o
 @33
A(knN
Ga==
33#@
>VUUA
L>fff?
<33s?
L=fff?
Bfff?
?333?333?333?333?
@A333?
Y>Vb
@333>
L?333?
MbP?
?ffffff
?333333
zt?333333
V@ffffff
yE>{
?333333
333333
@(#)PROGRAM:RoomScanCore  PROJECT:RoomScanCore-8
ff&?
?fff?
333C
333C
St12out_of_range
?NSt3__117bad_function_callE
St19bad_optional_access
?NSt3__111regex_errorE
St13runtime_error
St12length_error
St11logic_error
St9exception
q24@?0@"NSString"8@"NSString"16
operator+=
com.apple.RoomScanCore
RoomScanCore
PointCloud
LcnnDetector
OnlineFloorPlan
OfflineFloorPlan
RSCaptureSession
RSGenerationSession
RSValidation
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/range_helper.hpp
compute_range_inner
view shape should large equal 0 and less 
end should not be zero
at least step > 0
end >start
out ouf range
length > 0
consumer
producer
com.apple.roomscancore.debug_info_arframe_dump
com.apple.roomscancore.debug_info_image_dump
com.apple.roomscancore.debug_info_max_keyframe_fps
RoomScanCore.InternalInfoDumper
Live
MM_dd_yyyy_HH_mm_ss_SSS
%@/%@_fp_input.plist
keyframes
skipped
timestamp
video_timestamp
final
type
state
score
vioTrackingState
cameraTransform
intrinsics
cameraTrackingState
rawFeaturePointsCount
rawFeaturePoints
public.png
%@/%@_Image.plist
keyframe_index
cameraPose
width
height
data
depth
%@/%@_ARFrame.plist
keyframesCount
avail_mem
time_stamp
floorPlanDebug
config
keyframeDebug
coachingDebug
driftDebug
sysDebug
firstARFrameTime
fp_earlyout_accumulation
fp_earlyout_projection2DZ
fp_earlyout_wallOpeningDetect
fp_earlyout_consistency
fp_earlyout_curvedWall
fp_earlyout_windowDoorDetect
no_temporal_update
lcnn
consistency
scanui_formatter
filter_other_type_wall
height_estimator
door_window
opening_height_alignment
recessed_area_recon
parent_association
render
orthographic_v9.1.espresso.net
<_RSOrthographicDetector_DetectBox %p> { origin = < %.2f , %.2f > size = < %.2f x %.2f> }
windows
doors
openings
opendoors
%s%u
confidence
B24@?0@"_RSOrthographicDetector_DetectBox"8@"NSDictionary"16
q24@?0@"_RSOrthographicDetector_DetectBox"8@"_RSOrthographicDetector_DetectBox"16
image
logits_
offsets_box_
arg_reduce_core
slice
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/squeeze_helper.hpp
which_dim<dim
which_dim>=0
shape[which_dim]==1
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_equal.hpp
operator==
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/scatter_by_idx.hpp
scatter_by_idx
scatter target must not empty
dim of index not match
Cabinet
Refrigerator
Shelf
Stove
Sink
Washer
Toilet
Bathtub
Oven
Dishwasher
Table
Sofa
Chair
Fireplace
Stool
Screen
Cuboid
Stairs
BuildInCabinet
Storage
ChairGroup
LShapeGroup
UShapeGroup
FloorPlan
rawdetection
raw_online
raw_offline
conservative
aggressive
ultimate
wallaligned
lshaped
unknown
online
offline
identifier
logits
corners_status
edges_status
color
groups
boxes_dict
status
detectionsource
<RS3DObject %p> [id=%@ conf=%0.2f] %@ { position = < %.2f , %.2f , %.2f > dimension = < %.2f x %.2f x %.2f > color = < r=%.2f , g=%.2f , b=%.2f , a=%.2f > }
[3DOD] Warning: The corner array is not valid to convert to box3d.
description=RoomScanCore_Sim-8
ERROR [createWorkGroup]: Failed to set workgroup flags with error (%d)
.workloop
opening
window
door
opendoor
size of input shape vector is 0
size of input shape vector > current dim
com.apple.RoomScanCoreError
duplicate dim idx
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/transpose_helper.hpp
out of range
slice_by_axis
floorPlan
onlineAsset
geometryMeta
curved
bay_window_removal
temporalMeta
opening_height
deduplicate_opening_opendoor
doorWindowPostProcessor_mergeDoors
association
offlineDebug
origin
reflect
mirrorPoints
version
isCaptured
rawFloorPlan
inner
outer
begin
size
raw_size
pose
camera_height
camera_width
is_update
incremental_points
covering_hull_points
incremental_ids
mapping_interval
boundary_points
incremental_poses
doorWindowDetectionEnabled
objectBeautificationEnabled
chairBeautificationEnabled
standardizationEnabled
wallOpeningMergeEnabled
openingReplaceOpendoorEnabled
opendoorReplaceOpeningEnabled
nonUniformHeightEnabled
com.apple.RoomScanCore.offlineFloorPlanGeneration
offlineConfig
liveResultEnabled
textCoachingEnabled
onboardingEnabled
coachingMaxFrameRate
maxFramerate
mirrorDetectionEnabled
markerCoachingEnabled
doorWindowBeautificationEnabled
curvedWallEnabled
driftDetectionEnabled
doorReplaceOpeningEnabled
boundaryRefinementEnabled
bayWindowRecessedAreaEnabled
RSMemory_load_thr
RSC_FloorPlan_TG
com.apple.RoomScanCore.onlineFloorPlanGeneration
RSC_Coaching_TG
com.apple.RoomScanCore.Coaching
RSC_Mirror_TG
com.apple.RoomScanCore.mirrorPoint
RSC_ReadWrite_TG
com.apple.RoomScanCore.readWrite
v8@?0
count
points
pointsToWorld
semanticLabels
semanticVotes
colors
walls
open_doors
objects
curved_walls
quad
conf
completed
occluded
groupId
wall_status
parent_wall_status
is_fake_wall
parentIdentifier
individualUpdate
edgeStates
edgeConfidence
polygon
polygon_edge_states
polygon_edge_score
appear_pose_pts
appear_major_views
lcnn_floorplan_fc2_
lcnn_floorplan_model.espresso.net
_computerDominantColor_RGB_Binning: based on RGB-binning, %u out of %lu with dominant color (%f,%f,%f)
_computerDominantColor_HSL_Binning: based on HSL-binning, %u out of %lu with dominant color (%f,%f,%f)
_computerDominantColor_Mean: %lu out of %lu with average color (%f,%f,%f)
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_isin.hpp
isin
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/construction.hpp
arange
empty range
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_concatenate.hpp
concatenate
at least 1 to concat
can not concat
assign_from
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/expression/exp_gather_by_idx.hpp
GatherByIdxExp
dim of source expression and index not match
None
Continue scanning
Slow down
Move further away
Move closer
Turn up the light
Low texture
normal
markers
un_known
Surface uuid is unique
Surface parentIdentifier is valid
Child meets geometry constraint to parent wall
Wall
Window
Door
Opening
OpenDoor
Unknown
q24@?0@"<RSKeyframe>"8@"<RSKeyframe>"16
Tensor
dim of the initializer list do not match expectation
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/list_initializer.hpp
nested_shape
empty initializer list
circle_center
starting_orientation
ending_orientation
radius
major_convex_hull
major_convex_hull_buffer
major_view_line
major_views
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../expression/../common/gather_scatter_dim_helper.hpp
gather dim should not be same!
indices shape should be same
scalar assign should create a storage first
v24@?0{LineSegment2D=}8
input_image
loi_input_2
jmap
jmap_peaks
lmap
cameraPositions
unordered_map::at: key not found
map::at:  key not found
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../tensor/shape.hpp
Shape
shape[
 is 
 ,it should <= 6
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/../common/reduce_helper.hpp
format_reduce_axes
reduce axis larger than dim-1
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/expand_dims_helper.hpp
the absolute value of axis should be less than dim
repeated axis
is_center_scale_updated
pixel_size
scale
shift
center
floor_height
ceiling_height
support_height
image_size
floor_ceiling_count
z_slice
intrinsic
image_resolution
bbox
boxes
group_type
group_id
recessed_walls
bay_windows
front_opening
q24@?0@"RS3DSurface"8@"RS3DSurface"16
shape
should smaller then
_RSNodeSampleMessageFrameAttachmentKey
_RSNodeSampleMessagePointCloudAttachmentKey
_RSNodeSampleMessageFloorPlanAttachmentKey
_RSNodeSampleMessageTemporalMetaAttachmentKey
_RSNodeSampleMessageGeometryMetaAttachmentKey
_RSNodeSampleMessageSemanticImageAttachmentKey
_RSNodeSampleMessageKeyFramesAttachmentKey
_RSNodeSampleMessageObjectsAttachmentKey
_RSNodeSampleMessageMirrorPointsAttachmentKey
lcnn_floorplan_offline_fc2_
lcnn_floorplan_offline_model.espresso.net
0_weight.npy
1_weight.npy
2_weight.npy
0_bias.npy
1_bias.npy
2_bias.npy
q24@?0@"RSKeyframeMeta"8@"RSKeyframeMeta"16
NoGroup
camera
depth_buffer
depth_buffer_width
depth_buffer_height
depth_confidence_buffer
semantic_label_buffer
semantic_label_buffer_width
semantic_label_buffer_height
semantic_confidence_buffer
vio_tracking_state
depthConfidence
semanticSegmentationBufferSampledForDepth
semanticSegmentationConfidenceBufferSampledForDepth
sceneColor
sceneCamera
trackingState
transform
runtime_err in 
init
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/tensor.hpp
operator=
empty tensor
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/broadcast_helper.hpp
init_internal
cannot broadcast
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/../expression/exp_element_binary.hpp
TensorBinaryExp
Binary Exp shape should equal
empty tensor in
broadcast_assign_continue
broadcast assign issue
broadcast_assign_stride
reshape
shape can only be -1 or integer between 1 and 
shape cannot be deduced
length not match, cannot reshape
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/io/wnpy.hpp
load_npy
Unable to open npy file 
load: fread failed
parse_npy_header
parse_npy_header: fread failed
parse_npy_header: failed to find 'fortran_order'
True
parse_npy_header: failed to find '('
parse_npy_header: failed to find ')'
[0-9][0-9]*
parse_npy_header: failed to find 'descr'
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../expression/../common/tile_helper.hpp
tile param should larger 0
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/expression/exp_tile.hpp
alias_type
tile cannot to it self
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Detector init failed
pnp measurement: %@
Overall walls: %lu, openings: %lu, windows: %lu, doors: %lu, opendoors: %lu, consume: %lld
DoorWindow IOSurfaceCreate failure
DoorWindow input CVPixelBufferCreate failure
DoorWindow IOSurfaceCreate logitsMap %d failure
CVPixelBufferCreateWithIOSurface output logits failure (%d)
DoorWindow IOSurfaceCreate offsetsMap %d failure
CVPixelBufferCreateWithIOSurface output offsets failure (%d)
espresso_network_bind_cvpixelbuffer input failure (%d)
espresso_network_bind_cvpixelbuffer output logits failure (%d)
espresso_network_bind_cvpixelbuffer output offsets failure (%d)
Empty backbone infer result
Overall walls: %lu, openings: %lu, windows: %lu, doors: %lu, opendoors: %lu
Offline floorplan generator init failed
Online floorplan generator init failed
RSError: limited available memory: %{bytes}zu
Thermal state info in notification: %ld
RSError: kRSError_Runtime_CriticalThermalState
RSError: kRSError_Runtime_DriftDetection: %ld
Bad color value(s) encountered.
Surface count: %lu, uuid count: %lu
wall %s parentIdentifier is not nil
window %s parentIdentifier is nil
window %s parentIdentifier %s is not found in walls
door %s parentIdentifier is nil
door %s parentIdentifier %s is not found in walls
opening %s parentIdentifier is nil
opening %s parentIdentifier %s is not found in walls
openDoor %s parentIdentifier is nil
openDoor %s parentIdentifier %s is not found in walls
[%s] %s height exceeds height boundary of wall %s
[%s] %s is not on the same plane with wall %s
[%s] %s exceeds the XY boundary of wall %s
[Pass] %s
[Fail] %s
Network infer shape not match
Network tensor bind failure
Network infer failure
No candidate line
No candidate line after filtering
No valid candidate line
[3DOD Lshape merge] corner: %f, %f, %f, %f, %f, %f, %f, %f
[3DOD Lshape merge] skip merging due to inability
[3DOD Lshape merge] nearest_box1_corner_idx: %d, nearest_box2_corner_idx: %d
[3DOD Lshape merge] not l shape fill
[3DOD Lshape merge] before fill
[3DOD Lshape merge] skip filling the corner box
[3DOD Lshape merge] force merge extend corner
[3DOD Lshape merge] less point %lu
[3DOD Lshape merge] overlap ratio %f
[3DOD Lshape merge] skip filling the corner box because less points
[3DOD Lshape merge] after
[3DOD Lshape merge] 2D Overlap Ratio %f
[3DOD Lshape merge] history_l_shape_uuids_paired_ %lu
[3DOD Lshape merge] need_merge_list size %lu
[3DOD Lshape merge] merge previous pair
RSParentAssociation
RSOfflineGeometryCalculation
RSDriftDetection
RSSinkNode
RSBayWindowFPRemoval
RSNonUniformHeightEstimation
RSObjectAlign
RSNodeConnection
RSNodeOutputConsumer
NSObject
RSNodeInputProducer
RSKeyframeMetaExtend
RSInternalInfoDumper
RSOnlineFloorPlanGenerator
Debug
RSNode
RSNodeProtected
RSNodeInternal
_RSOrthographicDetector_DetectBox
RSOrthographicDetector
RSDoorWindowOnlineDetector
RS3DObject
NSCopying
NSSecureCoding
NSCoding
RSNodeMessage
RSNodeSampleMessage
RSNodeEventMessage
RSDeduplicateOpeningOpenDoor
RSStructurePostProcess
RSOfflineFloorPlanGenerator
RSWallOpeningOnlineOptimizer
RSMirrorPoint
RSAsset
RSRecessedAreaReconstructor
RSSubPointsLUT
RSTemporalMeta
RSFloorPlanRender
RSGenerationConfiguration
RSGenerationSession
RSCaptureConfiguration
RSCaptureSession
RSKeyframeMeta
RSKeyframeExtended
RSKeyframe
RSFloorPlan
RSOfflineProjection2DZNode
RSNodeOutput
RSNodeInput
RS3DSurface
RSSemanticImage
IOSurfaceBacking
RSWallOpeningOnlineDetector
RSScanUIFormatter
RSTextCoachingSignal
RSDriftDetectionSignal
RS3DMarker
RSMarkerSignal
RSPointCloudColorEstimator
RSValidation
RSOfflineKeyframeAccumulation
RSFloorPlanBoundaryRefinement
RSSourceNode
RS3DCurvedSurface
RSMajorViewInfo
RSPointCloud
RSKeyframeHeightBlob
RS3DObjectMerger
RSFloorPlanGeneratorBase
RSProjection2DZ
RSDoorWindowOfflineDetector
RSGeometryMeta
_RSCamera
RSCamera
RSCurvedWallDetection
RSBox3dSerialization
RSRecessedArea
RSOutsideObjectRemoval
RSMirrorDetection
RSDoorWindowPostProcessor
RSScanCoaching
RSOnlineOfflineAssociation
RSDataTypes
RSMarkerCoaching
RSWallOpeningOfflineDetector
RSGeometryCalculation
RSKeyframeAccumulation
RSOnlineCurvedWallFusion
RSGroupEdge
RSObjectAsset
_RSRawPointCloud
RSRawPointCloud
_RSFrame
RSFrame
RSOpeningHeightAlignment
init
copy
array
setType:
addObject:
setWalls:
setOpenings:
setWindows:
setDoors:
setOpendoors:
runWithFloorplan:needMerge:replaceOpendoorByOpening:replaceOpeningByOpendoor:replaceOpeningByDoor:
reset
.cxx_destruct
.cxx_construct
_rsParentAssociationCore
setZSlice:
count
points
setIsCenterScaleUpdated:
setCenter:
setPixelSize:
setScale:
setShift:
setFloorHeight:
setCeilingHeight:
setSupportHeight:
setImageSize:
setVisualFloorHeight:
setVisualCeilingHeight:
pixelSize
run:
geometryMeta
_geoMeta
_initParam
runWithFrame:keyframes:cameraPose:
processFloorPlan:
_detector
openings
incrementalIds
mutableCopy
objectAtIndexedSubscript:
replaceObjectAtIndex:withObject:
quad
mappingInterval
objectForKey:
pose
intrinsics
camW
camH
walls
countByEnumeratingWithState:objects:count:
parentIdentifier
identifier
isEqual:
setQuad:
UUIDString
UTF8String
allKeys
intValue
sortedArrayUsingComparator:
begin
semanticLabels
semanticVotes
edgeStates
setEdgeStates:
setConfidence:
setIndividualUpdate:
stringWithUTF8String:
initWithUUIDString:
setParentIdentifier:
setIdentifier:
windows
doors
isSinkNode
depth
floorHeight
ceilingHeight
runWithFloorPlan:
_angle_thr_side
_angle_thr_back
_projection_distance_thr_side
_projection_distance_thr_back
_overlap_thr
_bay_window_depth_thr
edgeConfidence
assignPolygon:polygonEdgeStates:polygonEdgeConfidence:count:
pixelBuffer
height
width
data
channel
incrementalPoses
runWithFloorPlan:semanticImage:heightImage:geometryMeta:temporalMeta:
setNonUniformHeightEnable:
_camera_positions
_heightEstimation
_isNonUniformHeightEnabled
boxesDict
objectForKeyedSubscript:
type
optimizeBbox:intersectWallsIndex:nearestWallId:conservative:
isEqualToString:
addBoxesDict:forDictKey:
addGroupId:forGroupType:
setLogits:
setStatus:
setColor:
insertObject:atIndex:
GetAllObjects
mergeLShape:worldpc:objecttypes:
alignBoxesToNearestWall:conservative:
clearGroupInfo:
assignUuidsForNewObjects:withOldObjects:
ResizeObjects:
AlignWithFloor:objects:
AlignWithWalls:objectAsset:worldPC:beautification:chairBeautification:
merger
nearest_wall_indices_
obj_wall_dists_
initWithObjectsAndKeys:
floatValue
numberWithFloat:
compare:
doesNotRecognizeSelector:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
consumeMessage:fromOutput:
initWithOutput:input:
attachWithError:
detachWithError:
output
input
isAttached
_attached
_output
_input
T@"RSNodeOutput",R,W,N,V_output
T@"RSNodeInput",R,W,N,V_input
attached
TB,R,N,GisAttached,V_attached
setWithObject:
consumer
connection
keyPathsForValuesAffectingConnection
T@"RSNodeConnection",R,N
producer
T@"RSNodeConnection",R,W,N
samplePoints
setSamplePoints:
_samplePoints
T{?=[30]},V_samplePoints
standardUserDefaults
doubleForKey:
defaultManager
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
createDirectory:
date
timeIntervalSinceDate:
size
cameraPose
setSize:
setCameraPose:
timestamp
setTimestamp:
setObject:forKeyedSubscript:
setDateFormat:
stringFromDate:
stringWithFormat:
dictionary
dictionaryWithObjects:forKeys:count:
writeToFile:atomically:
numberWithBool:
numberWithDouble:
dumpLastARFrameImage
dictionaryRepresentation
numberWithInteger:
state
score
vioTrackingState
camera
transform
dataWithBytes:length:
trackingState
rawFeaturePoints
numberWithUnsignedInteger:
encodePng:
serailizeARFrameMeta:
numberWithUnsignedLong:
depthBuffer
colorBuffer
encodeRGBPng:withWidth:Height:
encodeDepthPng:
setLastARFrame:withCameraPose:
addEntriesFromDictionary:
setUpInternalDumpWithLogDir:enable:
logKeyFrame:WithSkip:
logFinalFloorPlan:
logWithFrame:drift:
logWithFrame:coaching:
setFirstARFrame:
dumpARFrame:withKeyFrames:withCameraPose:
logMemory:
getDebugInfoWithConfig:OnlineDebug:
enableARFrameDump
setEnableARFrameDump:
enableLiveDump
setEnableLiveDump:
enableARFrameRGB
setEnableARFrameRGB:
enableARFrameDepth
setEnableARFrameDepth:
_save_queue
_save_group
_loggingDirectory
_keyframesDebug
_floorPlanDebug
_coachingDebug
_driftDebug
_sysDebug
_firstARFrameTime
_lastKeyframeTime
_keyframeMeta
_maxKeyframeFPS
_lastARFrame
_lastCameraPose
_enableARFrameDump
_enableLiveDump
_enableARFrameRGB
_enableARFrameDepth
TB,N,V_enableARFrameDump
TB,N,V_enableLiveDump
TB,N,V_enableARFrameRGB
TB,N,V_enableARFrameDepth
boolForKey:
semanticImage
initWithAllocedInput:
clear
render
pointCloud
beautifyObjects:withFloorPlan:pointCloud:
generateFloorPlanWithKeyframes:objects:error:
temporalMeta
newKeyframes
isUpdate
outputFloorPlan
resetAllSurfacesUpdateStatus
runWithPointCloud:temporalMeta:geometryMeta:
doorImage
runWithSemanticImage:geometryMeta:
maxDensity2d
lmap
runWithFloorPlan:pointCloud:temporalMeta:geometryMeta:semanticImage:doorImage:maxDensity:lmap:
runWithFloorPlan:temporalMeta:geometryMeta:
runWithFloorPlan:temporalMeta:
filterOtherTypeWalls
heightImage
isDoorWindowEnabled
firstObject
runWithPointCloud:currentKeyframe:temporalMeta:floorPlan:lcnnOpenings:
runWithFloorPlan:pointCloud:temporalMeta:
runWithFloorPlan:majorViewInfo:
lmapOfWall
onlineRunWithFloorPlan:objects:pointCloud:geometryMeta:density:
opendoors
setIsCaptured:
setFloorPlan:
setRawFloorPlan:
mirrorPoints
setMirrorPoints:
floorCeilingCount
setBeautificationEnable:
setMarkerCoachingEnable:
setCurvedWallEnable:
setOpeningReplaceOpendoorEnable:
setOpendoorReplaceOpeningEnable:
setDoorReplaceOpeningEnable:
setBayWindowRecessedAreaEnable:
computeMirrorPoints:
beautifyObjects:withFloorPlan:
generateFloorPlanWithKeyframes:objects:
exportAsset
markerSignal
setDoorWindowBeautificationEnable:
resetScanUIFormatter
_onlineWallOpeningConsistency
_onlineDoorWindow
_mirrorDetector
_wallOpeningDetector
_accumulator
_geometryEstimator
_scanUiFormatter
_onlineCurvedWallFusion
_projector
_heightEstimator
_openingHeightAlignment
_recessedAreaReconstructor
_parentAssociation
_isMarkerCoachingEnabled
_markerCoaching
_markerSignal
_isCurvedWallEnabled
_isOpeningReplaceOpendoorEnabled
_isOpendoorReplaceOpeningEnabled
_isDoorReplaceOpeningEnabled
_isBayWindowRecessedAreaEnable
_floorPlanForOffline
aggregatePointCloud
setLiveDumpEnable:
getDebugInfo
isSourceNode
inputs
outputs
sourceNode
TB,R,N,GisSourceNode
sinkNode
TB,R,N,GisSinkNode
T@"NSArray",R,C,N
addInput:
removeInput:
addOutput:
removeOutput:
renderSampleBuffer:fromInput:
_handleMessage:fromInput:
initWithBox:confidence:scale:label:
overlap:
setBox:
confidence
scale
label
setLabel:
_area
_confidence
_scale
_label
_box
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_box
Tf,N,V_confidence
Ti,N,V_scale
Ti,N,V_label
bundleForClass:
pathForResource:ofType:
numberWithUnsignedInt:
generateAnchors
dealloc
detectWithPointCloud:walls:lcnnOpenings:
removeAllObjects
runPipelineOnSurface:withPointCloud:
isValidOpening:
extendSurface:byLength:
normalizeSizesOfSurfaces:withLowerWidthThreshold:higherWidthThreshold:
removeOpenDoorPanelFp
isValidSurface:
preprocessOnSurface:withPointCloud:
infer
postprocess
projectDetectBoxesTo3dOnSurface:withPointCloud:
subarrayWithRange:
detectDepthOnSurface:withPointCloud:
setDepth:
parseNetOut
nmsBoxes:
filterBoxes:
clipBoxes:
removeMultiDetectionAcrossClassesWithOverlap:
removeMultiDetectionAcrossClassesWithOverlapOffline:
predicateWithBlock:
filteredArrayUsingPredicate:
sortDescriptorWithKey:ascending:
arrayWithObjects:count:
sortedArrayUsingDescriptors:
cutOverlap:withRect:withIntersecRect:withUnionRect:
setParent:
children
arrayByAddingObject:
bytes
detectWithPointCloud:walls:lcnnOpenings:isOnline:
postprocessWithNetInput:
removeOpenDoorPanelFpWithOpenDoors:andCloseDoors:
normalizedOutput
setNormalizedOutput:
_semanticMapBuffer
_semanticMap
_ioSurface
_logitsMapBuffers
_offsetsMapBuffers
_logitsMapIoSurfaces
_offsetsMapIoSurfaces
_logitsMap
_offsetsMap
_ctx
_plan
_net
_shift
_defaultBoxSizes
_anchorBoxes
_softmaxBuffer
_importantClasses
_defaultBoxStrides
_boxes
_windows
_doors
_openings
_opendoors
_filterThresholds
_isOnline
TB,N,VnormalizedOutput
arrayWithCapacity:
logits
objectAtIndex:
hasBoxesDict:
newCommandQueue
initWithDevice:
setScaleTransform:
commandBuffer
encodeToCommandBuffer:sourceTexture:destinationTexture:
commit
waitUntilCompleted
numberWithInt:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
setUsage:
newTextureWithDescriptor:iosurface:plane:
initWithType:score:
coveringHullPoints
coveringHullPointsCount
addObjectsFromArray:
_wall_selector_for_door_window
_open_selector_for_door_window
_merger_for_close_door_window
_merger_for_open_door
_doorWindowDetector
containsObject:
decodeObjectOfClass:forKey:
decodeFloatForKey:
decodeBoolForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
encodeFloat:forKey:
encodeBool:forKey:
boolValue
getTransform:transform:
getDimension:dim:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
dimensions
initWithDictionaryRepresentation:
rotateAlongZAxis:
translateBy:
corners_status
setCorners_status:
edges_status
color
status
detection_source
setDetection_source:
groups
_groups
_boxesDict
T@"NSString",&,N,Vtype
T@"NSUUID",&,N,Videntifier
Tf,N,Vconfidence
T@"NSArray",&,N,Vlogits
T@"NSArray",&,N,Vcorners_status
TB,N,Vstatus
T,N,Vcolor
T@"NSString",&,Vdetection_source
T@"NSArray",R,N,Vedges_status
T,R,N
T{?=[4]},R,N
T@"NSDictionary",R,N,V_groups
T@"NSDictionary",R,N,V_boxesDict
wallStatus
setWallStatus:
removeObject:
initWithArray:copyItems:
circleCenter
setCircleCenter:
setStartOrientation:
setEndOrientation:
setRadius:
curvedWalls
setCurvedWalls:
individualUpdate
shift
major_view_line
sz_major_view_line
major_convex_hull
sz_major_convex_hull
major_convex_hull_buffer
sz_major_convex_hull_buffer
setParentWallStatus:
referenceOriginTransform
getBytes:bytesPerRow:fromRegion:mipmapLevel:
initWithFormat:arguments:
errorWithDomain:code:userInfo:
startOrientation
endOrientation
radius
TQ,R,D,N
initWithSampleBuffer:attachments:
sampleBuffer
attachments
_sampleBuffer
_attachments
T^{opaqueCMSampleBuffer=},R,N,V_sampleBuffer
T@"NSDictionary",R,C,N,V_attachments
runWithFloorplan:geoMetryMeta:
_rSDeduplicateOpeningOpenDoorCore
setWithArray:
origin
reflect
allValues
cameraPositions
updateNodesHeight
runWithLcnnFloorPlan:onlineFloorPlan:objects:mirrorPoints:keyframes:pointCloud:
generateFloorPlanWithKeyframes:initialAsset:error:
floorPlan
objects
rawFloorPlan
runWithPointCloud:geometryMeta:
runWithFloorPlan:lmap:geometryMeta:
runWithPointCloud:floorPlan:lcnnOpenings:
mergeDoors:
cameraImage
runWithOnlineFloorplan:offlineFloorplan:camDensity2D:geoMetryMeta:
runWithFloorPlan:objects:pointCloud:geometryMeta:density:
runWithFloorPlan:objects:keyframes:
setObjects:
setWallOpeningMergeEnable:
generateFloorPlanWithKeyframes:initialAsset:
_curvedWallDetector
_baywindowFPRemoval
_structurePostprocess
_deduplicateOpeningOpenDoor
_onlineOfflineAssociation
_removeOutsideObject
_doorWindowPostProcessor
_wallOpeningMergeEnabled
_openingReplaceOpendoorEnabled
_opendoorReplaceOpeningEnabled
_debugInfo
imageOfChannel:
assignMajorViews:withSize:
assignMajorViewLine:withSize:
assignMajorConvexHull:withSize:
assignMajorConvexHullBuffer:withSize:
_isActiveWallEnabled
_online_refinement
_online_fusion
_prevFloorPlan
_tracing_map
_online_config
_density_map
initWithOrigin:reflect:
_origin
_reflect
T,R,N,V_origin
T,R,N,V_reflect
encodeInteger:forKey:
decodeIntegerForKey:
isCaptured
version
_isCaptured
_floorPlan
_mirrorPoints
_version
_rawFloorPlan
T@"RSFloorPlan",&,N,V_floorPlan
T@"NSArray",&,N,V_mirrorPoints
TB,N,V_isCaptured
Tq,R,N,V_version
T@"RSFloorPlan",&,N,V_rawFloorPlan
frontOpening
recessedWalls
lastObject
bayWindows
updateFloorPlan:withRecessedArea:
updateRecessedAreaPoolAndCurrentFrameWithWalls:windows:openings:doors:opendoors:
updateFloorPlan:withRecessedAreas:
_current_frame_recessed_area_list
_recessed_area_pool
_onlineBayWindowConfig
_last_frame_recall_idx
appearPosePts
setAppearPosePts:
setAppearMajorViews:
setEdgeConfidence:
appearMajorViews
setRecessedWalls:
setBayWindows:
setFrontOpening:
unsignedIntValue
rawSize
isEqualToRSSubPointsLUT:
initWithDictionary:
setBegin:
setEnd:
setPose:
setIntrinsics:
setRawSize:
setCamW:
setCamH:
_camW
_camH
_begin
_end
_size
_rawSize
_intrinsics
_pose
TQ,N,V_begin
TQ,N,V_end
T{?=[4]},N,V_pose
T{?=[3]},N,V_intrinsics
TQ,N,V_size
TQ,N,V_rawSize
Tf,N,V_camW
Tf,N,V_camH
boundaryPointsCount
boundaryPoints
isEqualToRSTemporalMeta:
incrementalPoints
incrementalPointsCount
assignIncrementalPoints:withSize:
appendIncrementalPose:
clearIncrementalPoses
assignCoveringHullPoints:withSize:
assignBoundaryPoints:withSize:
setIsUpdate:
setIncrementalIds:
setMappingInterval:
_incrementalPoints
_coveringHullPoints
_boundaryPoints
_incrementalPoses
_isUpdate
_incrementalIds
_mappingInterval
TB,N,V_isUpdate
T@"NSMutableArray",&,N,V_incrementalIds
T@"NSMutableDictionary",&,N,V_mappingInterval
T^{?=[4]},R,N
Tr^,R,N
TQ,R,N
T^,R,N
length
setHighThreshold:
setLowThreshold:
setUseFastMode:
constrainHeightOfSurfaces:byWalls:
filterEmptySurfaces:
setFixedFloorPlanColor:withPointCloud:
constrainHeightInFloorPlan:
filterEmptySurfaceInFloorPlan:
estimateFloorPlanColor:withPointCloud:
setObjectBeautificationEnable:
setChairBeautificationEnable:
setStandardizationEnable:
setEstimateFloorPlanColorEnable:
assignIdentifiersTo:
_roomStandardizer
_objAlign
_pointCloudColorEstimator
_isObjectBeautificationEnabled
_isChairBeautificationEnabled
_isStandardizationEnabled
_isEstimateFloorPlanColorEnabled
allocWithZone:
isWindowDoorDetectionEnabled
setWindowDoorDetectionEnabled:
isObjectBeautificationEnabled
setObjectBeautificationEnabled:
isChairBeautificationEnabled
setChairBeautificationEnabled:
isStandardizationEnabled
setStandardizationEnabled:
isWallOpeningMergeEnabled
setWallOpeningMergeEnabled:
isOpeningReplaceOpendoorEnabled
setOpeningReplaceOpendoorEnabled:
isNonUniformHeightEnabled
setNonUniformHeightEnabled:
isOpendoorReplaceOpeningEnabled
setOpendoorReplaceOpeningEnabled:
_windowDoorDetectionEnabled
_objectBeautificationEnabled
_chairBeautificationEnabled
_standardizationEnabled
_nonUniformHeightEnabled
windowDoorDetectionEnabled
TB,N,GisWindowDoorDetectionEnabled,V_windowDoorDetectionEnabled
objectBeautificationEnabled
TB,N,GisObjectBeautificationEnabled,V_objectBeautificationEnabled
chairBeautificationEnabled
TB,N,GisChairBeautificationEnabled,V_chairBeautificationEnabled
standardizationEnabled
TB,N,GisStandardizationEnabled,V_standardizationEnabled
wallOpeningMergeEnabled
TB,N,GisWallOpeningMergeEnabled,V_wallOpeningMergeEnabled
openingReplaceOpendoorEnabled
TB,N,GisOpeningReplaceOpendoorEnabled,V_openingReplaceOpendoorEnabled
nonUniformHeightEnabled
TB,N,GisNonUniformHeightEnabled,V_nonUniformHeightEnabled
opendoorReplaceOpeningEnabled
TB,N,GisOpendoorReplaceOpeningEnabled,V_opendoorReplaceOpeningEnabled
setDoorWindowEnable:
updateFloorPlanGeneratorWithConfiguration:
initWithConfiguration:
processWithKeyframes:initialAsset:error:
processWithKeyframes:initialAsset:
updateObjects:
processWithKeyframes:initialAsset:completionHandler:
processWithKeyframes:initialAsset:completionHandlerWithError:
standardizeFloorPlan:
_generationSemaphore
_queue
_fpGenerator
_configuration
isLiveResultEnabled
setLiveResultEnabled:
isTextCoachingEnabled
setTextCoachingEnabled:
isOnboardingEnabled
setOnboardingEnabled:
isMarkerCoachingEnabled
setMarkerCoachingEnabled:
isDoorWindowBeautificationEnabled
setDoorWindowBeautificationEnabled:
isDriftDetectionEnabled
setDriftDetectionEnabled:
isDoorReplaceOpeningEnabled
setDoorReplaceOpeningEnabled:
isBoundaryRefinementEnabled
setBoundaryRefinementEnabled:
isBayWindowRecessedAreaEnabled
setBayWindowRecessedAreaEnabled:
maxFramerate
setMaxFramerate:
isMirrorDetectionEnabled
setMirrorDetectionEnabled:
coachingMaxFrameRate
setCoachingMaxFrameRate:
isCurvedWallEnabled
setCurvedWallEnabled:
_liveResultEnabled
_textCoachingEnabled
_onboardingEnabled
_markerCoachingEnabled
_doorWindowBeautificationEnabled
_driftDetectionEnabled
_doorReplaceOpeningEnabled
_boundaryRefinementEnabled
_bayWindowRecessedAreaEnabled
_mirrorDetectionEnabled
_curvedWallEnabled
_maxFramerate
_coachingMaxFrameRate
mirrorDetectionEnabled
TB,N,GisMirrorDetectionEnabled,V_mirrorDetectionEnabled
TQ,N,V_coachingMaxFrameRate
curvedWallEnabled
TB,N,GisCurvedWallEnabled,V_curvedWallEnabled
liveResultEnabled
TB,N,GisLiveResultEnabled,V_liveResultEnabled
textCoachingEnabled
TB,N,GisTextCoachingEnabled,V_textCoachingEnabled
onboardingEnabled
TB,N,GisOnboardingEnabled,V_onboardingEnabled
markerCoachingEnabled
TB,N,GisMarkerCoachingEnabled,V_markerCoachingEnabled
doorWindowBeautificationEnabled
TB,N,GisDoorWindowBeautificationEnabled,V_doorWindowBeautificationEnabled
driftDetectionEnabled
TB,N,GisDriftDetectionEnabled,V_driftDetectionEnabled
doorReplaceOpeningEnabled
TB,N,GisDoorReplaceOpeningEnabled,V_doorReplaceOpeningEnabled
boundaryRefinementEnabled
TB,N,GisBoundaryRefinementEnabled,V_boundaryRefinementEnabled
bayWindowRecessedAreaEnabled
TB,N,GisBayWindowRecessedAreaEnabled,V_bayWindowRecessedAreaEnabled
TQ,N,V_maxFramerate
listenToThermalState
listenToAvailableMemory
initWithSuiteName:
delegate
session:didFailWithError:
processInfo
thermalState
defaultCenter
_processInfoThermalStateDidChangeNotification:
addObserver:selector:name:object:
setOnboarding:
runWithFloorCeilingCount:
session:didUpdateFloorPlan:
session:didUpdateMarkerCoaching:
validateDepthOfRSFrame:
runWithFrame:cameraPose:driftSignal:
session:didUpdateTextCoaching:
runWithFloorPlan:rsFrame:
refineBoundaryWithFrame:
updateCoachingWithFrame:
updateMirrorPointWithFrame:
updateStructure:
session:didUpdateAsset:
removeObserver:name:object:
runWithConfiguration:
updateWithKeyframes:
updateWithObjects:
updateWithFrame:
stop
generateMirrorPointWithFrame:
setDelegate:
_fpQueue
_allKeyframes
_updateKeyframes
_fpStartDate
_coachingQueue
_textCoaching
_coachingStartDate
_driftDetection
_mirrorPointQueue
_refinedFloorPlan
_detectedObjects
_memoryMonitorSource
_memoryMonitorSuspended
_fpSemaphore
_coachingSemaphore
_mirrorPointSemaphore
_debugDumper
_workgroupFloorPlan
_workgroupCoaching
_workgroupMirror
_boundaryRefinementSemaphore
_boundaryRefinement
_readWriteQueue
_workgroupReadWrite
_delegate
T@"<RSCaptureSessionDelegate>",W,N,V_delegate
_identifier
_timestamp
_cameraPose
T@"NSUUID",&,N,V_identifier
T{?=[4]},N,V_cameraPose
Td,N,V_timestamp
setGroupId:
initWithDictionary:withGroupId:
integerValue
doubleValue
select:indices:
pointsToWorld
colors
T@"NSUUID",R,N
Tq,R,N
Td,R,N
setPoints:semanticLabels:semanticVotes:colors:count:
filterOutPointsBeyondDistance:
select:indices:from:
initWithKeyframe:
processWithVoxelize:asPythonApproach:resample:outlierRemove:
groupId
_points
_pointsToWorld
_semLabels
_semVotes
_colors
Td,N,Vtimestamp
T{?=[4]},N,VcameraPose
TI,N,VgroupId
dictionaryWithCapacity:
initWithDictionaryRepresentation:withGroupId:
setupHeight
setIsFakeWall:
setHeightWithCeiling:floor:
setWallsHeight:
updateSurfacesHeight:withCeiling:floor:
updateWallsHeight
updateOpeningsHeight
updateWindowsHeight
updateDoorsHeight
updateOpenDoorsHeight
parent
parentWallStatus
appendVisualWallsForOpenings
filterNoParentNodes:
T@"NSArray",&,N,Vwalls
T@"NSArray",&,N,Vdoors
T@"NSArray",&,N,Vwindows
T@"NSArray",&,N,Vopenings
T@"NSArray",&,N,Vopendoors
T@"NSArray",&,N,Vobjects
T@"NSArray",&,N,VcurvedWalls
TI,VgroupId
Tf,VceilingHeight
Tf,VfloorHeight
initWithDictionaryRepresentation:WithGroupId:
isFakeWall
initWithHeight:width:channel:backingType:dataType:
imageSize
resizeToHeight:width:channel:
_image
_maxDensity2d
_maxDensity3d
_heightImage
_cameraImage
emitMessage:
setConsumer:
_consumer
T@"<RSNodeOutputConsumer>",&,N,V_consumer
setProducer:
_producer
T@"<RSNodeInputProducer>",W,N,V_producer
fillWithDictionaryRepresentation:
numberWithUnsignedChar:
numberWithChar:
encodeInt:forKey:
decodeIntForKey:
polygon
polygonSize
polygonEdgeStates
polygonEdgeConfidence
completed
setCompleted:
occluded
setOccluded:
setChildren:
normal
setNormal:
_polygon
_polygonEdgeStates
_polygonEdgeConfidence
T{?=[4]},Vquad
Tf,Vconfidence
TB,Vcompleted
Ti,VwallStatus
Ti,VparentWallStatus
TB,Voccluded
TC,N,Vtype
T@"NSUUID",&,N,VparentIdentifier
T@"NSMutableArray",&,Vchildren
T@"RS3DSurface",W,Vparent
T,Vnormal
TB,VisFakeWall
Tf,Vdepth
T{?=[4c]},N,VedgeStates
T{?=[4f]},N,VedgeConfidence
Tc,N,VindividualUpdate
T,VappearPosePts
T,VappearMajorViews
Tr^c,R,N
Tr^f,R,N
initWithHeight:width:channel:
_allocateBacking
_deallocateBacking
dataType
bytesPerRow
isEqualToRSSemanticImage:
initWithHeight:width:channel:backingType:
backingType
_backing
_dataType
_bytesPerRow
_height
_width
_channel
_backingType
TQ,R,N,V_bytesPerRow
TQ,R,N,V_size
TQ,R,N,V_height
TQ,R,N,V_width
TQ,R,N,V_channel
TQ,R,N,V_backingType
TI,R,N,V_dataType
IOSurface
T^{__CVBuffer=},R,N
T^{__IOSurface=},R,N
stringByAppendingString:
convertLcnnResultTo3DSurface:withSurfaceType:scale:shift:
visualFloorHeight
visualCeilingHeight
_lcnnDetector
processWithFloorPlan:temporalMeta:geometryMeta:
initWithType:state:score:
setState:
text
setScore:
_score
_type
_state
_text
Tq,N,V_type
Tq,N,V_state
Tf,N,V_score
T@"NSString",R,N,V_text
_normal
_quad
T{?=[4]},N,V_quad
T,N,V_normal
setObject:forKey:
markers
setMarkers:
_markers
T@"NSArray",&,N,V_markers
estimateFloorPlanColor:withPointCloud:method:sameLabelShareColor:
_estimateSurfacesColor:withPointCloud:thickness:semanticLabel:method:sameLabelShareColor:
_estimateObjectsColor:withPointCloud:
_estimateObjectColor:withPointCloud:method:
_worldpc
_floorplan
checkSurfaceUuidIsUnique:
checkParentIdentifierIsValid:
checkChildNodeGeometryConstraint:
validateFloorPlan:
sortKeyframesByTimestamp:
initWithKeyframes:enableCameraPosition:
processWithVoxelize:asPythonApproach:resample:
_accMeta
setupRefinementProcessor:
_processor
_initProcessor
_prevInputWindows
_prevInputDoors
_prevOutputFloorPlan
_radius
_startOrientation
_endOrientation
_circleCenter
T,N,V_circleCenter
Tf,N,V_radius
Tf,N,V_startOrientation
Tf,N,V_endOrientation
major_views
sz_major_views
apppendMajorConvexHull:
cleanMajorConvexHull
apppendMajorConvexHullBuffer:
cleanMajorConvexHullBuffer
apppendMajorViewLine:
cleanMajorViewLine
apppendMajorViews:
cleanMajorViews
_major_convex_hull
_major_convex_hull_buffer
_major_view_line
_major_views
unsignedIntegerValue
mappingIntervalOfKeyframe:
setCeilingSum:
setCeilingVote:
setFloorSum:
setFloorVote:
sortKeyframesBySizeInDescendingOrder:
isEqualToRSPointCloud:
initWithCount:points:semanticLabels:semanticVotes:colors:
append:points:semanticLabels:semanticVotes:colors:
updateKeyframeHeights
accumulateWithKeyframesInWorld:voxelize:
updateCursor
updateKeyframeIds
keyframeHeights
rawPoints
rawCount
rawUpdateCursor
_cameraPositions
_updateCursor
_keyframeHeights
_updateKeyframeIds
_voxelSet
_keyframeVoxelSet
_rawPoints
_rawMappingInterval
_rawUpdateCursor
_isCameraPositionEnabled
ceilingSum
ceilingVote
floorSum
floorVote
_ceilingSum
_floorSum
_ceilingVote
_floorVote
Tf,N,V_ceilingSum
TQ,N,V_ceilingVote
Tf,N,V_floorSum
TQ,N,V_floorVote
UUID
mergeLShapeCabinets:worldpc:
inputSemanticsVersion
setRender:
_inputSemanticsVersion
_isDoorWindowEnabled
_render
T@"RSFloorPlanRender",&,N,V_render
isCenterScaleUpdated
_bufferImage
_bufferHeightImage
_doorImage
_bufferDoorImage
supportHeight
center
zSlice
isEqualToRSGeometryMeta:
setFloorCeilingCount:
_isCenterScaleUpdated
_pixelSize
_floorHeight
_ceilingHeight
_supportHeight
_imageSize
_zSlice
_visualFloorHeight
_visualCeilingHeight
_floorCeilingCount
_center
TB,N,V_isCenterScaleUpdated
Tf,N,V_pixelSize
Tf,N,V_floorHeight
Tf,N,V_ceilingHeight
Tf,N,V_supportHeight
T,N,V_center
T,N,V_scale
T,N,V_shift
Ti,N,V_imageSize
Ti,N,V_zSlice
Tf,N,V_visualFloorHeight
Tf,N,V_visualCeilingHeight
T,N,V_floorCeilingCount
imageResolution
T{?=[3]},R,N
T{CGSize=dd},R,N
setTransform:
setImageResolution:
setTrackingState:
_trackingState
_imageResolution
T{CGSize=dd},N,V_imageResolution
Tq,N,V_trackingState
T{?=[4]},N,Vtransform
numberWithShort:
dictionaryFromBox3d:
dictionaryFromBoxes3d:
box3dFromDictionary:
dictionaryFromBoxes3dPointCloud:pointCloud:
pointCloudFromDictionary:
boxes3dFromDictionary:
T@"NSArray",&,N,VrecessedWalls
T@"NSArray",&,N,VbayWindows
T@"RS3DSurface",&,N,VfrontOpening
semanticLabelBuffer
initWithDevice:linearToGrayScaleTransform:sigma:
merge_doors_on_same_wall:
make_corners_order_consistent_with_wall:withWalls:
initWithObjects:
merge_door_instances:withWall:mergedCloseDoors:mergedOpenDoors:
getSurface_center:
getSurface_width:
getSurface_height:
getSurface_e_height:
getSurface_e_width:
make_merged_instance:withFirstPoint:withLastPoint:withConfidence:
correctIntrinsics:
computeCosPitchFromPose:intrinsic:
updateCoachingStateFirstKeyframe:
runModelWithFrame:cameraPose:driftSignal:intrinsic:seeWall:
currentPoseSeeWall:intrinsic:
_speed
_light
_distance
_onboard
_lastWalls
_floor_signal
_ceiling_signal
_last_signal
_wallThr
_firstKeyframeTime
_firstCallTime
_floorCeilingTime
_lastModelTime
_maxModelFrameRate
_enableOnboarding
_readwriteLock
Tq,R,N,V_state
deduplicateUUIDInSurfaces:uuidSet:
deduplicateSurfaceUUIDInFloorPlan:
validateParentIdentifierOfWalls:
_rsOnlineOfflineAssociationCore
frame
initWithFrame:
initWithPointCloud:
initWithFloorPlan:
initWithTemporalMeta:
initWithGeometryMeta:
initWithSemanticImage:
keyFrames
initWithKeyFrames:
initWithMirrorPoints:
T@"<RSFrame>",R,N
T@"<RSPointCloud>",R,N
T@"RSFloorPlan",R,N
T@"RSTemporalMeta",R,N
T@"RSGeometryMeta",R,N
T@"RSSemanticImage",R,N
T@"NSArray",R,N
_generator
_all_major_view_lines
_all_poses
_output_count
_img_sz_step
generateKeyframesMeta:
sortKeyframeMetas:
diffKeyframes
_skipCnt
_metas
_newKeyframes
_diffKeyframes
_keyframeOrderDict
snapWallsWithFloorPlan:lmap:shift:scale:imageSize:
runWithFloorPlan:lmap:geometryMeta:temporalMeta:
_curved_walls_pool
source_object_uuid
setSource_object_uuid:
target_object_uuid
setTarget_object_uuid:
T@"NSUUID",&,N,Vsource_object_uuid
T@"NSUUID",&,N,Vtarget_object_uuid
setGroups:
_objects
T@"NSArray",&,N,V_objects
T@"NSDictionary",&,N,V_groups
initWithPoints:count:
sceneCamera
sceneColorBuffer
depthConfidenceBuffer
semanticConfidenceBuffer
deviceOrientation
T@"<RSCamera>",R,N
T@"<RSRawPointCloud>",R,N
initWithPythonDictionary:
setCamera:
setColorBuffer:
setSceneCamera:
setSceneColorBuffer:
setDepthBuffer:
setDepthConfidenceBuffer:
setSemanticLabelBuffer:
setSemanticConfidenceBuffer:
setVioTrackingState:
setRawFeaturePoints:
setReferenceOriginTransform:
setDeviceOrientation:
_camera
_colorBuffer
_sceneCamera
_sceneColorBuffer
_depthBuffer
_depthConfidenceBuffer
_semanticLabelBuffer
_semanticConfidenceBuffer
_vioTrackingState
_rawFeaturePoints
_deviceOrientation
_referenceOriginTransform
T@"<RSCamera>",&,N,V_camera
T^{__CVBuffer=},N,V_colorBuffer
T@"<RSCamera>",&,N,V_sceneCamera
T^{__CVBuffer=},N,V_sceneColorBuffer
T^{__CVBuffer=},N,V_depthBuffer
T^{__CVBuffer=},N,V_depthConfidenceBuffer
T^{__CVBuffer=},N,V_semanticLabelBuffer
T^{__CVBuffer=},N,V_semanticConfidenceBuffer
Tq,N,V_vioTrackingState
T@"<RSRawPointCloud>",&,N,V_rawFeaturePoints
T{?=[4]},N,V_referenceOriginTransform
Tq,N,V_deviceOrientation
encodeBytes:length:forKey:
getBytes:length:
decodeBytesForKey:returnedLength:
initWithBytesNoCopy:length:freeWhenDone:
@16@0:8
@40@0:8@16B24B28B32B36
v16@0:8
{RSParentAssociationCore="_vptr$RSParentAssociationCore"^^?"_matching_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
v24@0:8@16
@"RSGeometryMeta"
{?="margin"i"img_sz"i"use_pw_center"B"pw_center_update_rate"i"use_global_center"B"use_dynamic_pixel_sz"B"pixel_sz"f"hist_norm"B"z_slice"i"z_slice_pixel"f}
@96@0:8@16@24{?=[4]}32
{RSDriftDetectionCore="_vptr$RSDriftDetectionCore"^^?"_is_arTrackingStable"B"_is_vioTrackingStable"B"_is_first_wall_generated"B"_is_first_keyframe_generated"B"_enable_sample_colors"B"_ar_frames"{vector<rs_drift_detection::DriftFrameInternalWraper, std::allocator<rs_drift_detection::DriftFrameInternalWraper>>="__begin_"^{DriftFrameInternalWraper}"__end_"^{DriftFrameInternalWraper}"__end_cap_"{__compressed_pair<rs_drift_detection::DriftFrameInternalWraper *, std::allocator<rs_drift_detection::DriftFrameInternalWraper>>="__value_"^{DriftFrameInternalWraper}}}"_drift_detection_config"{DRIFT_DETECTION_CONFIG="xyz_speed_drift_thres"f"view_speed_drift_thres"f"feature_pts_match_thres"f"feature_pts_similarity_thres"f"flying_away_frames"f"flying_away_angle_thres"f"flying_away_xyz_speed_drift_thres"f"flying_away_view_speed_drift_thres"f"big_align_gap_wall_len_thres"f"big_align_gap_thres"f"big_align_gap_search_thres"f"big_align_area_thres"f"pose_get_stuck_eps"f"n_lost_track_thr"i}"_count_idx"Q"_ignore_idx"Q"_keep_frame_size"Q"_n_lost_track"Q}
B16@0:8
@24@0:8@16
@56@0:8@16@24@32@40@48
v20@0:8B16
{vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__value_"^}}
{NonUniformHeightEstimation="_floor_global_value"d"_ceiling_global_value"d"_line_points"{unordered_map<std::string, PointsLine, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, PointsLine>>>="__table_"{__hash_table<std::__hash_value_type<std::string, PointsLine>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, PointsLine>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, PointsLine>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, PointsLine>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, PointsLine>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, PointsLine>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_individual_wall_height"{unordered_map<std::string, IndividualWallHeightStruct, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, IndividualWallHeightStruct>>>="__table_"{__hash_table<std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, IndividualWallHeightStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_valid_line_segments"{vector<SegmentsInfo, std::allocator<SegmentsInfo>>="__begin_"^{SegmentsInfo}"__end_"^{SegmentsInfo}"__end_cap_"{__compressed_pair<SegmentsInfo *, std::allocator<SegmentsInfo>>="__value_"^{SegmentsInfo}}}}
v32@0:8@16@24
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}28@0:8r^v16B24
{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}40@0:8r^v16r^v24i32B36
@48@0:8@16@24@32B40B44
@"RS3DObjectMerger"
{vector<quad3dType2, std::allocator<quad3dType2>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<quad3dType2 *, std::allocator<quad3dType2>>="__value_"^{?}}}
{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}
{vector<std::vector<float>, std::allocator<std::vector<float>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<float> *, std::allocator<std::vector<float>>>="__value_"^v}}
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"RSNodeMessage"16@"RSNodeOutput"24
@32@0:8@16@24
B24@0:8^@16
@"RSNodeOutput"
@"RSNodeInput"
{?=[30]}16@0:8
v496@0:8{?=[30]}16
{?="points"[30]}
v28@0:8@16B24
v88@0:8@16{?=[4]}24
@24@0:8^{__CVBuffer=}16
@40@0:8^{__CVBuffer=}16Q24Q32
v96@0:8@16@24{?=[4]}32
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSString"
@"NSMutableArray"
@"NSDate"
@"NSMutableDictionary"
@"<RSFrame>"
{?="columns"[4]}
@40@0:8@16@24^@32
16@0:8
@"RSWallOpeningOnlineOptimizer"
@"RSDoorWindowOnlineDetector"
@"RSMirrorDetection"
@"RSWallOpeningOnlineDetector"
@"RSKeyframeAccumulation"
@"RSGeometryCalculation"
@"RSScanUIFormatter"
@"RSOnlineCurvedWallFusion"
@"RSProjection2DZ"
@"RSNonUniformHeightEstimation"
@"RSOpeningHeightAlignment"
@"RSRecessedAreaReconstructor"
@"RSParentAssociation"
@"RSMarkerCoaching"
@"RSMarkerSignal"
@"RSFloorPlan"
r^v16@0:8
v32@0:8^{opaqueCMSampleBuffer=}16@24
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16f48i52i56
f24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
f16@0:8
v20@0:8f16
i16@0:8
v20@0:8i16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@44@0:8@16@24@32B40
@40@0:8@16@24@32
@28@0:8@16f24
v96@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}32{CGRect={CGPoint=dd}{CGSize=dd}}64
B32@0:8@16@24
v32@0:8@16f24f28
f32@0:8@16@24
^{__CVBuffer=}
^{__IOSurface=}
[6^{__CVBuffer}]
[6^{__IOSurface}]
{?="plan"^v"network_index"i}
[6[20[2f]]]
{vector<std::vector<std::vector<std::vector<std::vector<float>>>>, std::allocator<std::vector<std::vector<std::vector<std::vector<float>>>>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<std::vector<std::vector<std::vector<float>>>> *, std::allocator<std::vector<std::vector<std::vector<std::vector<float>>>>>>="__value_"^v}}
{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}
@"NSArray"
{WallOpeningSelectorForDoorWindow="_vptr$WallOpeningSelectorForDoorWindow"^^?"_infer_wall_openings"@"NSMutableArray""_infer_wall_openings_attributes"{vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>>="__begin_"^{WallOpeningAttribute}"__end_"^{WallOpeningAttribute}"__end_cap_"{__compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>>="__value_"^{WallOpeningAttribute}}}"_target_infer_wall_openings"@"NSMutableArray""_target_infer_wall_openings_attributes"{vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>>="__begin_"^{WallOpeningAttribute}"__end_"^{WallOpeningAttribute}"__end_cap_"{__compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>>="__value_"^{WallOpeningAttribute}}}"_new_wall_openings"@"NSArray""_cur_keyframe"@"<RSKeyframe>""_floor_height"f"_ceiling_height"f"_convex_hull"^"_convex_hull_size"Q"_cur_lines"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"_new_lines"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"_cur_matches"{vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>>="__begin_"^{RS_Match_Info}"__end_"^{RS_Match_Info}"__end_cap_"{__compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>>="__value_"^{RS_Match_Info}}}"_new_matches"{vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>>="__begin_"^{RS_Match_Info}"__end_"^{RS_Match_Info}"__end_cap_"{__compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>>="__value_"^{RS_Match_Info}}}"_select_wall"B}
{MergerForDoorWindow="_vptr$MergerForDoorWindow"^^?"_new_instances"@"NSMutableArray""_target_infer_walls_openings"@"NSArray""_new_walls_openings"@"NSArray""_merged_instances"@"NSMutableArray""_prev_instances"@"NSMutableArray""_prev_instances_on_infer_walls_openings"@"NSMutableArray""_prev_instances_to_keep"@"NSMutableArray"}
@"RSOrthographicDetector"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=[4]}16@0:8
B32@0:8@16^24
B32@0:8@16^{?=[4]}24
v32@0:816
v28@0:8i16@20
v32@0:8r^{box3d=[8]}16@24
@"NSUUID"
@32@0:8^{opaqueCMSampleBuffer=}16@24
^{opaqueCMSampleBuffer=}16@0:8
^{opaqueCMSampleBuffer=}
@"NSDictionary"
{RSDeduplicateOpeningOpenDoorCore="_vptr$RSDeduplicateOpeningOpenDoorCore"^^?"_angle_thresh"f"_projection_dist_thresh"f"_dist_thresh"f"_matching_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
@64@0:8@16@24@32@40@48@56
@"RSDoorWindowOfflineDetector"
@"RSWallOpeningOfflineDetector"
@"RSOfflineKeyframeAccumulation"
@"RSOfflineGeometryCalculation"
@"RSCurvedWallDetection"
@"RSOfflineProjection2DZNode"
@"RSBayWindowFPRemoval"
@"RSStructurePostProcess"
@"RSDeduplicateOpeningOpenDoor"
@"RSOnlineOfflineAssociation"
@"RSOutsideObjectRemoval"
@"RSDoorWindowPostProcessor"
@76@0:8@16@24@32@40@48@56f64r^v68
{RSOnlineRefinement="_vptr$RSOnlineRefinement"^^?"_search_range_7"{Tensor<int, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<int>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^i}"_search_range_3"{Tensor<int, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<int>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^i}"_fitting_lines"{optional<rs_ol::RS3DSurfaceOnline>=""(?="__null_state_"c"__val_"{RS3DSurfaceOnline="_vptr$RS3DSurfaceOnline"^^?"surface"@"RS3DSurface""line_2d"{RSLine2D="_vptr$RSLine2D"^^?"pt"[2]}"line_3d"{RSLine3D="_vptr$RSLine3D"^^?"pt"[2]}"floor_height"f"ceiling_height"f"height"f"visible"B"visible_buffer"B"major_dist"f"major_angle"f"transition_status"i"first_appear_frame"i"last_appear_frame"i"non_match_count"i"non_match_shorten_count"i"debug_idx"i"wall_type"i"standalone_opening_count"i"_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"_parrent_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}})"__engaged_"B}"_config"{ONLINE_REFINE_CONFIG="density_index"i"slice_threshold"f"min_slice_num"f"min_wall_length"f"min_density"f"zslice_density_threshold"f"major_small_wall_length_th"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
{RSOnlineFusion="_vptr$RSOnlineFusion"^^?"_camera_positions"{vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__value_"^}}"_online_floorplan_last"{RSFloorPlanOnline="_vptr$RSFloorPlanOnline"^^?"walls"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"openings"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"windows"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"doors"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"open_doors"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"door_panels"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"curved_circles"{vector<RS3DCurvedSurface *, std::allocator<RS3DCurvedSurface *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<RS3DCurvedSurface *__strong *, std::allocator<RS3DCurvedSurface *>>="__value_"^@}}"structure_graph"{RSStructureGraph="_vptr$RSStructureGraph"^^?"_structures"{vector<rs_ol::RSStructure *, std::allocator<rs_ol::RSStructure *>>="__begin_"^^{RSStructure}"__end_"^^{RSStructure}"__end_cap_"{__compressed_pair<rs_ol::RSStructure **, std::allocator<rs_ol::RSStructure *>>="__value_"^^{RSStructure}}}}"_empty"{RS3DSurfaceOnline="_vptr$RS3DSurfaceOnline"^^?"surface"@"RS3DSurface""line_2d"{RSLine2D="_vptr$RSLine2D"^^?"pt"[2]}"line_3d"{RSLine3D="_vptr$RSLine3D"^^?"pt"[2]}"floor_height"f"ceiling_height"f"height"f"visible"B"visible_buffer"B"major_dist"f"major_angle"f"transition_status"i"first_appear_frame"i"last_appear_frame"i"non_match_count"i"non_match_shorten_count"i"debug_idx"i"wall_type"i"standalone_opening_count"i"_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"_parrent_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}}"_empty_lists"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}"_structure_config"{ONLINE_STRUCTURE_CONFIG="z_shape_min_len"f"z_shape_max_len"f"w_shape_min_len"f"w_shape_max_len"f}"_tm_helper"{RSTmOnlineTMScoreHelper="_vptr$RSTmOnlineTMScoreHelper"^^?}"_local_standardization"{RSLocalStandardization="_vptr$RSLocalStandardization"^^?"_online_std_config"{ONLINE_STANDARDIZATION_CONFIG="large_wall_len_thr"f"small_wall_len_thr"f"noise_wall_len_thr"f"angle_thr"f"noise_wall_angle_thr"f"angle_eps"f"anchor_wall_len_factor"f"corner_dist_thr"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}"_curved_walls"{vector<rs_ol::RSCurvedSurfaceOnline, std::allocator<rs_ol::RSCurvedSurfaceOnline>>="__begin_"^{RSCurvedSurfaceOnline}"__end_"^{RSCurvedSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RSCurvedSurfaceOnline *, std::allocator<rs_ol::RSCurvedSurfaceOnline>>="__value_"^{RSCurvedSurfaceOnline}}}"_online_curved_segments"{vector<RS3DCurvedSurface *, std::allocator<RS3DCurvedSurface *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<RS3DCurvedSurface *__strong *, std::allocator<RS3DCurvedSurface *>>="__value_"^@}}"_online_curved_wall_config"{ONLINE_CURVED_CONFIG="minDist"f"param1"i"param2"i"minRadius"f"maxRadius"f"density_thres"f"angle_thres"f"length_thres"f"kernel_size"i"iou_thr"f"min_iou_thr"f"dist_thr"f"inner_line_tol"f"inner_circle_tol"f"intersect_tol"f"segment_type"i"segment_angle"f"segment_length"f"direction_change_eps"f"reuse_uuid_iou_thr"f"reuse_uuid_dist_thr"f"reuse_uuid_angle_thr"f}"_need_curved_wall_process"B"_historical_low_conf_walls"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}}
{TracingMap="_vptr$TracingMap"^^?"_voxel_sz"f"_values"{unordered_map<unsigned long long, bool, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, bool>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, bool>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, bool>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}}
{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}
{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}
@48@0:81632
q16@0:8
{tuple<NSArray<RS3DSurface *> *, NSArray<RS3DSurface *> *>={__tuple_impl<std::__tuple_indices<0, 1>, NSArray<RS3DSurface *> *, NSArray<RS3DSurface *> *>=@@}}56@0:8@16@24@32@40@48
{ONLINE_BAY_WINDOW_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}
{unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long>>="__table_"{__hash_table<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long, void *> *>, std::allocator<std::__hash_node<unsigned long, void *>>>="__value_"{__hash_node_base<std::__hash_node<unsigned long, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<unsigned long>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<unsigned long>>="__value_"f}}}
v80@0:8{?=[4]}16
{?=[3]}16@0:8
v64@0:8{?=[3]}16
{?="columns"[3]}
r^16@0:8
^{?=[4]}16@0:8
^16@0:8
v32@0:8r^16Q24
v32@0:8^16Q24
{vector<simd_float4x4, std::allocator<simd_float4x4>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<simd_float4x4 *, std::allocator<simd_float4x4>>="__value_"^{?}}}
@56@0:8@16@24@32@40r^v48
{Room_Standardization="standardizer_"{Standard_Room="initparam"{Standard_Param="pixel_sz_dynamic"f"init_minimum_walls"i"shortest_wall_length"f"duplicate_point_thresh"f"unique_point_angle"f"tiny_small_wall_length"f"parallel_dis_thresh"f"parallel_angle_thresh"f"lbfgs_drift_angle_thresh"f"lbfgs_dist_thresh"f"lbfgs_optimize_min_length"f"lbfgs_move_region"f"lbfgs_move_region_rate"f"lbfgs_tm_score_diff_thresh"f"min_first_wall_length"f"manhattan_angle_offset"f"keep_connect_angle_thresh"f"keep_connect_intersection_distance"f"need_rotate_small_wall_length"f"need_rotate_wall_angle"f"need_rotate_small_wall_angle"f"standard_manhattan_angle"f"merge_cross_lines_dis_thresh"f"merge_cross_lines_angle_thresh"f"merge_cross_lines_split_dist_th"f"merge_cross_gap_dist_th"f"merge_cross_gap_angle_th"f"add_tiny_corner_dist_th"f"add_tiny_corner_vertical_angle_th"f"add_tiny_corner_parallel_angle_th"f"add_tiny_opening_dist_th"f"add_tiny_opening_parallel_angle_th"f"add_tiny_opening_parallel_dist_th"f}"walls"{vector<wlw::lcnn_flp::standard_line2d, std::allocator<wlw::lcnn_flp::standard_line2d>>="__begin_"^{standard_line2d}"__end_"^{standard_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::standard_line2d *, std::allocator<wlw::lcnn_flp::standard_line2d>>="__value_"^{standard_line2d}}}"vertex"{vector<wlw::lcnn_flp::standard_point2d, std::allocator<wlw::lcnn_flp::standard_point2d>>="__begin_"^{standard_point2d}"__end_"^{standard_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::standard_point2d *, std::allocator<wlw::lcnn_flp::standard_point2d>>="__value_"^{standard_point2d}}}"vertex_1d"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"line_mask"{vector<std::vector<unsigned long>, std::allocator<std::vector<unsigned long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<unsigned long> *, std::allocator<std::vector<unsigned long>>>="__value_"^v}}"vertex_walls"{vector<std::vector<unsigned long>, std::allocator<std::vector<unsigned long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<unsigned long> *, std::allocator<std::vector<unsigned long>>>="__value_"^v}}"vertex_angles"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"vertex_angles_180"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"tiny_sw_vertex"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"tiny_sw_line_id"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"first_wall"{standard_line2d="pt"[4f]"pts0"{standard_point2d="x"f"y"f}"pts1"{standard_point2d="x"f"y"f}"theta"f"a"f"length"f"angle"f"align_n"i"score"f}"_geoMeta"@"RSGeometryMeta""_density_map"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_before_tm_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}}"angle_th"f"dis_th"f"project_map"{unordered_map<std::string, std::vector<wlw::lcnn_flp::ProjectParam>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::vector<wlw::lcnn_flp::ProjectParam>>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"localStandardizer_"{RSLocalStandardization="_vptr$RSLocalStandardization"^^?"_online_std_config"{ONLINE_STANDARDIZATION_CONFIG="large_wall_len_thr"f"small_wall_len_thr"f"noise_wall_len_thr"f"angle_thr"f"noise_wall_angle_thr"f"angle_eps"f"anchor_wall_len_factor"f"corner_dist_thr"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}}
@"RSObjectAlign"
@"RSPointCloudColorEstimator"
v40@0:8@16@24@?32
@"NSObject<OS_dispatch_semaphore>"
@"RSOfflineFloorPlanGenerator"
@"RSGenerationConfiguration"
@"RSCaptureConfiguration"
@"RSOnlineFloorPlanGenerator"
@"RSScanCoaching"
@"RSDriftDetection"
@"NSObject<OS_dispatch_source>"
@"RSInternalInfoDumper"
@"OS_os_workgroup"
@"RSFloorPlanBoundaryRefinement"
@"<RSCaptureSessionDelegate>"
d16@0:8
v24@0:8d16
@"NSUUID"16@0:8
@28@0:8@16I24
v52@0:8^16^24^32^40I48
v32@0:8Q16r^Q24
v40@0:8Q16r^Q24@32
v32@0:8B16B20B24B28
I16@0:8
v20@0:8I16
{vector<unsigned char __attribute__((ext_vector_type(4))), std::allocator<unsigned char __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<unsigned char * __attribute__((ext_vector_type(4))), std::allocator<unsigned char __attribute__((ext_vector_type(4)))>>="__value_"^}}
{vector<unsigned short __attribute__((ext_vector_type(4))), std::allocator<unsigned short __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<unsigned short * __attribute__((ext_vector_type(4))), std::allocator<unsigned short __attribute__((ext_vector_type(4)))>>="__value_"^}}
@"RSSemanticImage"
{?="global_max_density"f"global_max_density_3d"f"voxel_size"f"z_slice"i"numSemanticChannels"Q"numAllChannels"Q}
@"<RSNodeOutputConsumer>"
@"<RSNodeInputProducer>"
v24@0:8f16f20
r^c16@0:8
r^f16@0:8
v48@0:8r^16r^c24r^f32Q40
C16@0:8
v20@0:8C16
{?=[4c]}16@0:8
v20@0:8{?=[4c]}16
{?=[4f]}16@0:8
v32@0:8{?=[4f]}16
c16@0:8
v20@0:8c16
{vector<RSEdgeStatesType, std::allocator<RSEdgeStatesType>>="__begin_"^c"__end_"^c"__end_cap_"{__compressed_pair<RSEdgeStatesType *, std::allocator<RSEdgeStatesType>>="__value_"^c}}
{?="states"[4c]}
@"RS3DSurface"
{?="confidence"[4f]}
{?="corners"[4]}
@40@0:8Q16Q24Q32
@52@0:8Q16Q24Q32Q40I48
@48@0:8Q16Q24Q32Q40
^v16@0:8
^v24@0:8Q16
v40@0:8Q16Q24Q32
(?="memoryBuffer"^f"pixelBuffer"^{__CVBuffer})
^{__CVBuffer=}16@0:8
^{__IOSurface=}16@0:8
@40@0:8r^v16C24f2832
{Lcnn_floorplan_detector="_vptr$Lcnn_floorplan_detector"^^?"_unet_fpn_backbone"{Unet_fpn_backbone_v1="_vptr$Unet_fpn_backbone_v1"^^?"_net"{IEspresso_Interface_v1="_vptr$IEspresso_Interface_v1"^^?"_output_tensor"{map<std::string, espresso_buffer_t *, std::less<std::string>, std::allocator<std::pair<const std::string, espresso_buffer_t *>>>="__tree_"{__tree<std::__value_type<std::string, espresso_buffer_t *>, std::__map_value_compare<std::string, std::__value_type<std::string, espresso_buffer_t *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, espresso_buffer_t *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, espresso_buffer_t *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, espresso_buffer_t *>, std::less<std::string>, true>>="__value_"Q}}}"_ctx"^v"_plan"^v"_net"{?="plan"^v"network_index"i}"_previous_mode"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"_single_resolution"B}"_lcnn_fc2"{Lcnn_FC2="_vptr$Lcnn_FC2"^^?"_fc2_0_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_1_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_2_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_0_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_1_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_2_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc_dim"i"_fc_dim1"i}"_lambda"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_backbone_param"{BackBone_Param="single_resolution"B"fixed_input_shape"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"dynamic_input_shape"{map<std::vector<unsigned long>, std::string, std::less<std::vector<unsigned long>>, std::allocator<std::pair<const std::vector<unsigned long>, std::string>>>="__tree_"{__tree<std::__value_type<std::vector<unsigned long>, std::string>, std::__map_value_compare<std::vector<unsigned long>, std::__value_type<std::vector<unsigned long>, std::string>, std::less<std::vector<unsigned long>>, true>, std::allocator<std::__value_type<std::vector<unsigned long>, std::string>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<unsigned long>, std::string>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<unsigned long>, std::__value_type<std::vector<unsigned long>, std::string>, std::less<std::vector<unsigned long>>, true>>="__value_"Q}}}"max_K"Q"junc_score_thres"f"fpn_len_range_max"f"fpn_len_range_min"f"n_pts0"Q"n_pts1"Q"dim_fc"Q"dim_loi"Q"cls_score_thres"f"filter_line_proposal"B}}"_wall_postprocess"{Lcnn_Floorplan_Post="density_buffer"^f"lcnn_lines"{willow_lcnn_lines="lines"{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_lines"Q}"lcnn_juncs"{willow_lcnn_juncs="juncs"{vector<wlw::lcnn_flp::willow_point2d, std::allocator<wlw::lcnn_flp::willow_point2d>>="__begin_"^{willow_point2d}"__end_"^{willow_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_point2d *, std::allocator<wlw::lcnn_flp::willow_point2d>>="__value_"^{willow_point2d}}}"junc_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_juncs"Q}"_param"{PostProcess_Param="image_sz"Q"pixel_m"f"max_length"i"small_wall_length_thres"f"length_score_weight"f"tm_score_protect_size"Q"tm_score_weight"f"tm_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"line_nms_angle_thres"f"line_nms_dist_thres"f"line_nms_sw_angle_thres"f"line_nms_projection_iou_thres"f"line_nms_score_diff_thres"f"score_filtering_decision_boundary_map"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"cls_delta"f"tms_delta"f"score_filtering_decision_boundary_map_for_line_proposals"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"structure_filtering_acute_angle_min_thres"f"structure_filtering_acute_angle_max_thres"f"opening_score_density_thres"f"opening_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"hard_mode_opening_area_len_thres"f}}"_opening_postprocess"{Lcnn_Floorplan_Post="density_buffer"^f"lcnn_lines"{willow_lcnn_lines="lines"{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_lines"Q}"lcnn_juncs"{willow_lcnn_juncs="juncs"{vector<wlw::lcnn_flp::willow_point2d, std::allocator<wlw::lcnn_flp::willow_point2d>>="__begin_"^{willow_point2d}"__end_"^{willow_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_point2d *, std::allocator<wlw::lcnn_flp::willow_point2d>>="__value_"^{willow_point2d}}}"junc_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_juncs"Q}"_param"{PostProcess_Param="image_sz"Q"pixel_m"f"max_length"i"small_wall_length_thres"f"length_score_weight"f"tm_score_protect_size"Q"tm_score_weight"f"tm_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"line_nms_angle_thres"f"line_nms_dist_thres"f"line_nms_sw_angle_thres"f"line_nms_projection_iou_thres"f"line_nms_score_diff_thres"f"score_filtering_decision_boundary_map"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"cls_delta"f"tms_delta"f"score_filtering_decision_boundary_map_for_line_proposals"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"structure_filtering_acute_angle_min_thres"f"structure_filtering_acute_angle_max_thres"f"opening_score_density_thres"f"opening_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"hard_mode_opening_area_len_thres"f}}"_wall_lmap"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_lmap"{Tensor<float, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}}
@36@0:8q16q24f32
@28@0:8q16f24
v24@0:8q16
v40@0:8@16@24i32B36
v48@0:8@16@24f32C36i40B44
v36@0:8@16@24i32
@"RSPointCloud"
@"RSTemporalMeta"
{unique_ptr<rs_erf::EdgeRefinement, std::default_delete<rs_erf::EdgeRefinement>>="__ptr_"{__compressed_pair<rs_erf::EdgeRefinement *, std::default_delete<rs_erf::EdgeRefinement>>="__value_"^{EdgeRefinement}}}
v24@0:816
@28@0:8@16B24
@56@0:8Q16r^24r^32r^40^48
v56@0:8Q16r^24r^32r^40^48
v28@0:8B16B20B24
24@0:8@16
{unordered_map<std::string, unsigned int __attribute__((ext_vector_type(2))), std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int __attribute__((ext_vector_type(2)))>>>="__table_"{__hash_table<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
{unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long>>="__table_"{__hash_table<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *>, std::allocator<std::__hash_node<unsigned long long, void *>>>="__value_"{__hash_node_base<std::__hash_node<unsigned long long, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<unsigned long long>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<unsigned long long>>="__value_"f}}}
{unordered_map<std::string, std::unordered_set<unsigned long long>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::unordered_set<unsigned long long>>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}32@0:8r^v16@24
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}40@0:8r^v16@24r^v32
@"RSFloorPlanRender"
v40@0:8@16@24@32
{?="global_max_density"f"global_max_density_3d"f"voxel_size"f"z_slice"i"numSemanticChannels"Q"numAllChannels"Q"numHeightChannels"Q}
v48@0:816
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@40@0:8@16r^v24@32
@208@0:8{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}16
@40@0:8{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}16
@48@0:8{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}16@40
{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}24@0:8@16
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}24@0:8@16
@60@0:8@162440f56
v48@0:8@16@24@32@40
B128@0:8{?=[4]}16{?=[3]}80
f128@0:8{?=[4]}16{?=[3]}80
{?=[3]}64@0:8{?=[3]}16
@148@0:8@16{?=[4]}24@88{?=[3]}96B144
@96@0:8@16{?=[4]}24@88
{SpeedCoaching="_speed_range"f"_proj_speed_range"f"_threshold"f"_pose_queue"{deque<std::tuple<simd_float4x4, double>, std::allocator<std::tuple<simd_float4x4, double>>>="__map_"{__split_buffer<std::tuple<simd_float4x4, double> *, std::allocator<std::tuple<simd_float4x4, double> *>>="__first_"^^v"__begin_"^^v"__end_"^^v"__end_cap_"{__compressed_pair<std::tuple<simd_float4x4, double> **, std::allocator<std::tuple<simd_float4x4, double> *>>="__value_"^^v}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<std::tuple<simd_float4x4, double>>>="__value_"Q}}"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>="__map_"{__split_buffer<float * __attribute__((ext_vector_type(2))), std::allocator<float * __attribute__((ext_vector_type(2)))>>="__first_"^^"__begin_"^^"__end_"^^"__end_cap_"{__compressed_pair<float ** __attribute__((ext_vector_type(2))), std::allocator<float * __attribute__((ext_vector_type(2)))>>="__value_"^^}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float __attribute__((ext_vector_type(2)))>>="__value_"Q}}"_latest_v""_latest_w""_last_vio_lost_time"@"NSDate""_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{LightCoaching="_kpt_range"f"_threshold"f"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_latest_mean_color"f"_latest_n_kpt"f"_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{DistanceCoaching="_threshold"f"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_latest_meand"f"_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{OnboardCoaching="_v_thr1"f"_v_thr2"f"_w_thr1"f"_w_thr2"f"_brightness_thr1"f"_brightness_thr2"f"_distance_thr1"f"_distance_thr2"f"_n_kpt_thr1"f"_n_kpt_thr2"f"_texture_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_speed_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_firstCallTime"@"NSDate""_latest_signal"@"RSTextCoachingSignal""_w_v"f"_b_v"f"_w_w"f"_b_w"f"_w_brightness"f"_b_brightness"f"_w_distance"f"_b_distance"f"_w_n_kpt"f"_b_n_kpt"f}
{vector<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>, std::allocator<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad> *, std::allocator<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>>>="__value_"^v}}
@"RSTextCoachingSignal"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
@48@0:8@16@24@32@40
{RSOnlineOfflineAssociationCore="_vptr$RSOnlineOfflineAssociationCore"^^?"_offline_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
{MarkerProposal="_vptr$MarkerProposal"^^?"_extend_length"f"_angle_thres_for_major_wall"f"_parallel_angle_thres"f"_corner_dist_thres"f"_alg_structure_complete"{Structure_complete="small_gaps"{vector<marker_proposal::Structure_completeOutput, std::allocator<marker_proposal::Structure_completeOutput>>="__begin_"^{Structure_completeOutput}"__end_"^{Structure_completeOutput}"__end_cap_"{__compressed_pair<marker_proposal::Structure_completeOutput *, std::allocator<marker_proposal::Structure_completeOutput>>="__value_"^{Structure_completeOutput}}}"small_gaps_result"{vector<marker_proposal::Structure_completeOutput, std::allocator<marker_proposal::Structure_completeOutput>>="__begin_"^{Structure_completeOutput}"__end_"^{Structure_completeOutput}"__end_cap_"{__compressed_pair<marker_proposal::Structure_completeOutput *, std::allocator<marker_proposal::Structure_completeOutput>>="__value_"^{Structure_completeOutput}}}"_connection_angle_thresh"f"_gap_length_thresh"f"_gap_size_thresh"f"_iou_thresh"f"_line_occupancy_thresh"f"_angle_thres_with_view_line"f"_neighbor_line_threshold"f"_frame_in_consider"i"_line_id1"i"_line_id2"i}"_pool"{vector<marker_proposal::ProposalWrapper, std::allocator<marker_proposal::ProposalWrapper>>="__begin_"^{ProposalWrapper}"__end_"^{ProposalWrapper}"__end_cap_"{__compressed_pair<marker_proposal::ProposalWrapper *, std::allocator<marker_proposal::ProposalWrapper>>="__value_"^{ProposalWrapper}}}"_all_major_convex_hulls"{vector<std::vector<float __attribute__((ext_vector_type(3)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<float __attribute__((ext_vector_type(3)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}}
{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}
{?="margin"i"img_sz"i"use_dynamic_img_sz"B"img_sz0"i"img_sz_step"i"use_pw_center"B"pw_center_update_rate"i"use_global_center"B"use_dynamic_pixel_sz"B"pixel_sz"f"hist_norm"B"z_slice"i"z_slice_pixel"f}
@100@0:8@16r^v243264i96
@48@0:8@16r^v24@32@40
{vector<RSOnlineCurvedWall, std::allocator<RSOnlineCurvedWall>>="__begin_"^{RSOnlineCurvedWall}"__end_"^{RSOnlineCurvedWall}"__end_cap_"{__compressed_pair<RSOnlineCurvedWall *, std::allocator<RSOnlineCurvedWall>>="__value_"^{RSOnlineCurvedWall}}}
@32@0:8r^16Q24
@"<RSCamera>"16@0:8
@"<RSRawPointCloud>"16@0:8
v24@0:8^{__CVBuffer=}16
@"<RSCamera>"
@"<RSRawPointCloud>"
{OpeningHeightAlignment="_vptr$OpeningHeightAlignment"^^?"_opening_fixed"{unordered_map<std::string, rs_oalign::OpeningFixedNode, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, rs_oalign::OpeningFixedNode>>>="__table_"{__hash_table<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_check_in_view"B"_floor_v"f"Min_Opening_height"f"Invaid_height_min"f"Max_try_times"i"Second_try_times"i"Max_opeing_height"f"opening_wall_gap"d"_hole_vector"{vector<rs_oalign::HoleOpening, std::allocator<rs_oalign::HoleOpening>>="__begin_"^{HoleOpening}"__end_"^{HoleOpening}"__end_cap_"{__compressed_pair<rs_oalign::HoleOpening *, std::allocator<rs_oalign::HoleOpening>>="__value_"^{HoleOpening}}}}
h00L
ARGB
L>fff?
L>fff?
<33s?
L=fff?
Bfff?
?333?333?333?333?
@A333?
Y>Vb
@333>
MbP?
?ffffff
?333333
=fff?
A333333
ffffff
?333333
333333
?333?
5333?
fff?o
+2ff
>(knN
Ga==
>33#@
>VUUA
Ga>5
8F>WW
BPHII
!-{{
ahoSS
EJPXX
;JB&
0<5BB
6E=JJ
Q]V__
COH]]
>T2%iii
%||ii@@(#)PROGRAM:RoomScanCore  PROJECT:RoomScanCore-8
ff&?
?fff?
333C
333C
St12out_of_range
?NSt3__117bad_function_callE
St19bad_optional_access
?NSt3__111regex_errorE
St13runtime_error
St12length_error
St11logic_error
St9exception
q24@?0@"NSString"8@"NSString"16
operator+=
com.apple.RoomScanCore
RoomScanCore
PointCloud
LcnnDetector
OnlineFloorPlan
OfflineFloorPlan
RSCaptureSession
RSGenerationSession
RSValidation
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/range_helper.hpp
compute_range_inner
view shape should large equal 0 and less 
end should not be zero
at least step > 0
end >start
out ouf range
length > 0
consumer
producer
com.apple.roomscancore.debug_info_arframe_dump
com.apple.roomscancore.debug_info_image_dump
com.apple.roomscancore.debug_info_max_keyframe_fps
RoomScanCore.InternalInfoDumper
Live
MM_dd_yyyy_HH_mm_ss_SSS
%@/%@_fp_input.plist
keyframes
skipped
timestamp
video_timestamp
final
type
state
score
vioTrackingState
cameraTransform
intrinsics
cameraTrackingState
rawFeaturePointsCount
rawFeaturePoints
public.png
%@/%@_Image.plist
keyframe_index
cameraPose
width
height
data
depth
%@/%@_ARFrame.plist
keyframesCount
avail_mem
time_stamp
floorPlanDebug
config
keyframeDebug
coachingDebug
driftDebug
sysDebug
firstARFrameTime
fp_earlyout_accumulation
fp_earlyout_projection2DZ
fp_earlyout_wallOpeningDetect
fp_earlyout_consistency
fp_earlyout_curvedWall
fp_earlyout_windowDoorDetect
no_temporal_update
lcnn
consistency
scanui_formatter
filter_other_type_wall
height_estimator
door_window
opening_height_alignment
recessed_area_recon
parent_association
render
orthographic_v9.1.espresso.net
<_RSOrthographicDetector_DetectBox %p> { origin = < %.2f , %.2f > size = < %.2f x %.2f> }
windows
doors
openings
opendoors
%s%u
confidence
B24@?0@"_RSOrthographicDetector_DetectBox"8@"NSDictionary"16
q24@?0@"_RSOrthographicDetector_DetectBox"8@"_RSOrthographicDetector_DetectBox"16
image
logits_
offsets_box_
arg_reduce_core
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/squeeze_helper.hpp
which_dim<dim
which_dim>=0
shape[which_dim]==1
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_equal.hpp
operator==
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/scatter_by_idx.hpp
scatter_by_idx
scatter target must not empty
dim of index not match
Cabinet
Refrigerator
Shelf
Stove
Sink
Washer
Toilet
Bathtub
Oven
Dishwasher
Table
Sofa
Chair
Fireplace
Stool
Screen
Cuboid
Stairs
BuildInCabinet
Storage
ChairGroup
LShapeGroup
UShapeGroup
FloorPlan
rawdetection
raw_online
raw_offline
conservative
aggressive
ultimate
wallaligned
lshaped
unknown
online
offline
identifier
logits
corners_status
edges_status
color
groups
boxes_dict
status
detectionsource
<RS3DObject %p> [id=%@ conf=%0.2f] %@ { position = < %.2f , %.2f , %.2f > dimension = < %.2f x %.2f x %.2f > color = < r=%.2f , g=%.2f , b=%.2f , a=%.2f > }
[3DOD] Warning: The corner array is not valid to convert to box3d.
description=RoomScanCore_Sim-8
ERROR [createWorkGroup]: Failed to set workgroup flags with error (%d)
.workloop
opening
window
door
opendoor
size of input shape vector is 0
size of input shape vector > current dim
com.apple.RoomScanCoreError
slice
duplicate dim idx
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/transpose_helper.hpp
out of range
slice_by_axis
floorPlan
onlineAsset
geometryMeta
curved
bay_window_removal
temporalMeta
opening_height
deduplicate_opening_opendoor
doorWindowPostProcessor_mergeDoors
association
offlineDebug
origin
reflect
mirrorPoints
version
isCaptured
rawFloorPlan
inner
outer
begin
size
raw_size
pose
camera_height
camera_width
is_update
incremental_points
covering_hull_points
incremental_ids
mapping_interval
boundary_points
incremental_poses
doorWindowDetectionEnabled
objectBeautificationEnabled
chairBeautificationEnabled
standardizationEnabled
wallOpeningMergeEnabled
openingReplaceOpendoorEnabled
opendoorReplaceOpeningEnabled
nonUniformHeightEnabled
com.apple.RoomScanCore.offlineFloorPlanGeneration
offlineConfig
liveResultEnabled
textCoachingEnabled
onboardingEnabled
coachingMaxFrameRate
maxFramerate
mirrorDetectionEnabled
markerCoachingEnabled
doorWindowBeautificationEnabled
curvedWallEnabled
driftDetectionEnabled
doorReplaceOpeningEnabled
boundaryRefinementEnabled
bayWindowRecessedAreaEnabled
RSMemory_load_thr
RSC_FloorPlan_TG
com.apple.RoomScanCore.onlineFloorPlanGeneration
RSC_Coaching_TG
com.apple.RoomScanCore.Coaching
RSC_Mirror_TG
com.apple.RoomScanCore.mirrorPoint
RSC_ReadWrite_TG
com.apple.RoomScanCore.readWrite
v8@?0
count
points
pointsToWorld
semanticLabels
semanticVotes
colors
walls
open_doors
objects
curved_walls
quad
conf
completed
occluded
groupId
wall_status
parent_wall_status
is_fake_wall
parentIdentifier
individualUpdate
edgeStates
edgeConfidence
polygon
polygon_edge_states
polygon_edge_score
appear_pose_pts
appear_major_views
lcnn_floorplan_fc2_
lcnn_floorplan_model.espresso.net
_computerDominantColor_RGB_Binning: based on RGB-binning, %u out of %lu with dominant color (%f,%f,%f)
_computerDominantColor_HSL_Binning: based on HSL-binning, %u out of %lu with dominant color (%f,%f,%f)
_computerDominantColor_Mean: %lu out of %lu with average color (%f,%f,%f)
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_isin.hpp
isin
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/construction.hpp
arange
empty range
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/tensor_concatenate.hpp
concatenate
at least 1 to concat
can not concat
assign_from
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/expression/exp_gather_by_idx.hpp
GatherByIdxExp
dim of source expression and index not match
None
Continue scanning
Slow down
Move further away
Move closer
Turn up the light
Low texture
normal
markers
un_known
Surface uuid is unique
Surface parentIdentifier is valid
Child meets geometry constraint to parent wall
Wall
Window
Door
Opening
OpenDoor
Unknown
q24@?0@"<RSKeyframe>"8@"<RSKeyframe>"16
Tensor
dim of the initializer list do not match expectation
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/list_initializer.hpp
nested_shape
empty initializer list
circle_center
starting_orientation
ending_orientation
radius
major_convex_hull
major_convex_hull_buffer
major_view_line
major_views
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../expression/../common/gather_scatter_dim_helper.hpp
gather dim should not be same!
indices shape should be same
scalar assign should create a storage first
v24@?0{LineSegment2D=}8
input_image
loi_input_2
jmap
jmap_peaks
lmap
cameraPositions
unordered_map::at: key not found
map::at:  key not found
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../tensor/shape.hpp
Shape
shape[
 is 
 ,it should <= 6
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/expand_dims_helper.hpp
the absolute value of axis should be less than dim
repeated axis
is_center_scale_updated
pixel_size
scale
shift
center
floor_height
ceiling_height
support_height
image_size
floor_ceiling_count
z_slice
intrinsic
image_resolution
bbox
boxes
group_type
group_id
recessed_walls
bay_windows
front_opening
q24@?0@"RS3DSurface"8@"RS3DSurface"16
shape
should smaller then
_RSNodeSampleMessageFrameAttachmentKey
_RSNodeSampleMessagePointCloudAttachmentKey
_RSNodeSampleMessageFloorPlanAttachmentKey
_RSNodeSampleMessageTemporalMetaAttachmentKey
_RSNodeSampleMessageGeometryMetaAttachmentKey
_RSNodeSampleMessageSemanticImageAttachmentKey
_RSNodeSampleMessageKeyFramesAttachmentKey
_RSNodeSampleMessageObjectsAttachmentKey
_RSNodeSampleMessageMirrorPointsAttachmentKey
lcnn_floorplan_offline_fc2_
lcnn_floorplan_offline_model.espresso.net
0_weight.npy
1_weight.npy
2_weight.npy
0_bias.npy
1_bias.npy
2_bias.npy
q24@?0@"RSKeyframeMeta"8@"RSKeyframeMeta"16
NoGroup
camera
depth_buffer
depth_buffer_width
depth_buffer_height
depth_confidence_buffer
semantic_label_buffer
semantic_label_buffer_width
semantic_label_buffer_height
semantic_confidence_buffer
vio_tracking_state
depthConfidence
semanticSegmentationBufferSampledForDepth
semanticSegmentationConfidenceBufferSampledForDepth
sceneColor
sceneCamera
trackingState
transform
runtime_err in 
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/../common/reduce_helper.hpp
format_reduce_axes
reduce axis larger than dim-1
init
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/tensor.hpp
operator=
empty tensor
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/broadcast_helper.hpp
init_internal
cannot broadcast
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/function/../expression/exp_element_binary.hpp
TensorBinaryExp
Binary Exp shape should equal
empty tensor in
broadcast_assign_continue
broadcast assign issue
broadcast_assign_stride
reshape
shape can only be -1 or integer between 1 and 
shape cannot be deduced
length not match, cannot reshape
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/io/wnpy.hpp
load_npy
Unable to open npy file 
load: fread failed
parse_npy_header
parse_npy_header: fread failed
parse_npy_header: failed to find 'fortran_order'
True
parse_npy_header: failed to find '('
parse_npy_header: failed to find ')'
[0-9][0-9]*
parse_npy_header: failed to find 'descr'
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/tensor/../common/../expression/../common/tile_helper.hpp
tile param should larger 0
/Library/Caches/com.apple.xbs/Sources/RoomScanCore_Sim/Sources/Utilities/wTensor/core/expression/exp_tile.hpp
alias_type
tile cannot to it self
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Detector init failed
pnp measurement: %@
Overall walls: %lu, openings: %lu, windows: %lu, doors: %lu, opendoors: %lu, consume: %lld
DoorWindow IOSurfaceCreate failure
DoorWindow input CVPixelBufferCreate failure
DoorWindow IOSurfaceCreate logitsMap %d failure
CVPixelBufferCreateWithIOSurface output logits failure (%d)
DoorWindow IOSurfaceCreate offsetsMap %d failure
CVPixelBufferCreateWithIOSurface output offsets failure (%d)
espresso_network_bind_cvpixelbuffer input failure (%d)
espresso_network_bind_cvpixelbuffer output logits failure (%d)
espresso_network_bind_cvpixelbuffer output offsets failure (%d)
Empty backbone infer result
Overall walls: %lu, openings: %lu, windows: %lu, doors: %lu, opendoors: %lu
Offline floorplan generator init failed
Online floorplan generator init failed
RSError: limited available memory: %{bytes}zu
Thermal state info in notification: %ld
RSError: kRSError_Runtime_CriticalThermalState
RSError: kRSError_Runtime_DriftDetection: %ld
Bad color value(s) encountered.
Surface count: %lu, uuid count: %lu
wall %s parentIdentifier is not nil
window %s parentIdentifier is nil
window %s parentIdentifier %s is not found in walls
door %s parentIdentifier is nil
door %s parentIdentifier %s is not found in walls
opening %s parentIdentifier is nil
opening %s parentIdentifier %s is not found in walls
openDoor %s parentIdentifier is nil
openDoor %s parentIdentifier %s is not found in walls
[%s] %s height exceeds height boundary of wall %s
[%s] %s is not on the same plane with wall %s
[%s] %s exceeds the XY boundary of wall %s
[Pass] %s
[Fail] %s
Network infer shape not match
Network tensor bind failure
Network infer failure
No candidate line
No candidate line after filtering
No valid candidate line
[3DOD Lshape merge] corner: %f, %f, %f, %f, %f, %f, %f, %f
[3DOD Lshape merge] skip merging due to inability
[3DOD Lshape merge] nearest_box1_corner_idx: %d, nearest_box2_corner_idx: %d
[3DOD Lshape merge] not l shape fill
[3DOD Lshape merge] before fill
[3DOD Lshape merge] skip filling the corner box
[3DOD Lshape merge] force merge extend corner
[3DOD Lshape merge] less point %lu
[3DOD Lshape merge] overlap ratio %f
[3DOD Lshape merge] skip filling the corner box because less points
[3DOD Lshape merge] after
[3DOD Lshape merge] 2D Overlap Ratio %f
[3DOD Lshape merge] history_l_shape_uuids_paired_ %lu
[3DOD Lshape merge] need_merge_list size %lu
[3DOD Lshape merge] merge previous pair
RSParentAssociation
RSOfflineGeometryCalculation
RSDriftDetection
RSSinkNode
RSBayWindowFPRemoval
RSNonUniformHeightEstimation
RSObjectAlign
RSNodeConnection
RSNodeOutputConsumer
NSObject
RSNodeInputProducer
RSKeyframeMetaExtend
RSInternalInfoDumper
RSOnlineFloorPlanGenerator
Debug
RSNode
RSNodeProtected
RSNodeInternal
_RSOrthographicDetector_DetectBox
RSOrthographicDetector
RSDoorWindowOnlineDetector
RS3DObject
NSCopying
NSSecureCoding
NSCoding
RSNodeMessage
RSNodeSampleMessage
RSNodeEventMessage
RSDeduplicateOpeningOpenDoor
RSStructurePostProcess
RSOfflineFloorPlanGenerator
RSWallOpeningOnlineOptimizer
RSMirrorPoint
RSAsset
RSRecessedAreaReconstructor
RSSubPointsLUT
RSTemporalMeta
RSFloorPlanRender
RSGenerationConfiguration
RSGenerationSession
RSCaptureConfiguration
RSCaptureSession
RSKeyframeMeta
RSKeyframeExtended
RSKeyframe
RSFloorPlan
RSOfflineProjection2DZNode
RSNodeOutput
RSNodeInput
RS3DSurface
RSSemanticImage
IOSurfaceBacking
RSWallOpeningOnlineDetector
RSScanUIFormatter
RSTextCoachingSignal
RSDriftDetectionSignal
RS3DMarker
RSMarkerSignal
RSPointCloudColorEstimator
RSValidation
RSOfflineKeyframeAccumulation
RSFloorPlanBoundaryRefinement
RSSourceNode
RS3DCurvedSurface
RSMajorViewInfo
RSPointCloud
RSKeyframeHeightBlob
RS3DObjectMerger
RSFloorPlanGeneratorBase
RSProjection2DZ
RSDoorWindowOfflineDetector
RSGeometryMeta
_RSCamera
RSCamera
RSCurvedWallDetection
RSBox3dSerialization
RSRecessedArea
RSOutsideObjectRemoval
RSMirrorDetection
RSDoorWindowPostProcessor
RSScanCoaching
RSOnlineOfflineAssociation
RSDataTypes
RSMarkerCoaching
RSWallOpeningOfflineDetector
RSGeometryCalculation
RSKeyframeAccumulation
RSOnlineCurvedWallFusion
RSGroupEdge
RSObjectAsset
_RSRawPointCloud
RSRawPointCloud
_RSFrame
RSFrame
RSOpeningHeightAlignment
initWithSuiteName:
defaultManager
setUsage:
countByEnumeratingWithState:objects:count:
sortedArrayUsingComparator:
setLowThreshold:
objectAtIndexedSubscript:
isEqualToString:
setUseFastMode:
array
sortedArrayUsingDescriptors:
encodeBool:forKey:
objectForKey:
initWithUUIDString:
arrayByAddingObject:
standardUserDefaults
unsignedIntValue
predicateWithBlock:
initWithDevice:
objectForKeyedSubscript:
mutableCopy
insertObject:atIndex:
filteredArrayUsingPredicate:
arrayWithCapacity:
unsignedIntegerValue
initWithDevice:linearToGrayScaleTransform:sigma:
bundleForClass:
waitUntilCompleted
firstObject
intValue
arrayWithObjects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
removeAllObjects
newCommandQueue
encodeFloat:forKey:
bytes
floatValue
stringByAppendingPathComponent:
processInfo
integerValue
encodeInt:forKey:
UTF8String
newTextureWithDescriptor:iosurface:plane:
encodeInteger:forKey:
stringByAppendingString:
dictionary
setScaleTransform:
stringFromDate:
commandBuffer
encodeObject:forKey:
removeObject:
setObject:forKey:
setObject:forKeyedSubscript:
removeObserver:name:object:
stringWithFormat:
commit
writeToFile:atomically:
dataWithBytes:length:
setWithArray:
compare:
UUIDString
setHighThreshold:
stringWithUTF8String:
setWithObject:
numberWithBool:
date
subarrayWithRange:
encodeToCommandBuffer:sourceTexture:destinationTexture:
dictionaryWithCapacity:
setDateFormat:
decodeBoolForKey:
setWithObjects:
numberWithChar:
replaceObjectAtIndex:withObject:
dictionaryWithObjects:forKeys:count:
numberWithDouble:
numberWithFloat:
decodeFloatForKey:
addObjectsFromArray:
doesNotRecognizeSelector:
numberWithInt:
decodeIntForKey:
addEntriesFromDictionary:
UUID
addObserver:selector:name:object:
numberWithInteger:
decodeIntegerForKey:
initWithObjectsAndKeys:
pathForResource:ofType:
decodeObjectOfClass:forKey:
allKeys
getBytes:bytesPerRow:fromRegion:mipmapLevel:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
containsObject:
doubleForKey:
numberWithShort:
decodeObjectOfClasses:forKey:
numberWithUnsignedChar:
allValues
addObject:
thermalState
sortDescriptorWithKey:ascending:
boolForKey:
numberWithUnsignedInt:
doubleValue
copy
fileExistsAtPath:isDirectory:
timeIntervalSinceDate:
allocWithZone:
initWithArray:copyItems:
lastObject
numberWithUnsignedInteger:
boolValue
length
numberWithUnsignedLong:
defaultCenter
objectAtIndex:
init
runWithFloorplan:needMerge:replaceOpendoorByOpening:replaceOpeningByOpendoor:replaceOpeningByDoor:
reset
.cxx_destruct
.cxx_construct
_rsParentAssociationCore
run:
geometryMeta
_geoMeta
_initParam
runWithFrame:keyframes:cameraPose:
processFloorPlan:
_detector
isSinkNode
runWithFloorPlan:
_angle_thr_side
_angle_thr_back
_projection_distance_thr_side
_projection_distance_thr_back
_overlap_thr
_bay_window_depth_thr
runWithFloorPlan:semanticImage:heightImage:geometryMeta:temporalMeta:
setNonUniformHeightEnable:
_camera_positions
_heightEstimation
_isNonUniformHeightEnabled
assignUuidsForNewObjects:withOldObjects:
alignBoxesToNearestWall:conservative:
optimizeBbox:intersectWallsIndex:nearestWallId:conservative:
ResizeObjects:
AlignWithFloor:objects:
AlignWithWalls:objectAsset:worldPC:beautification:chairBeautification:
merger
walls
nearest_wall_indices_
obj_wall_dists_
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
consumeMessage:fromOutput:
initWithOutput:input:
attachWithError:
detachWithError:
output
input
isAttached
_attached
_output
_input
T@"RSNodeOutput",R,W,N,V_output
T@"RSNodeInput",R,W,N,V_input
attached
TB,R,N,GisAttached,V_attached
connection
keyPathsForValuesAffectingConnection
T@"RSNodeConnection",R,N
T@"RSNodeConnection",R,W,N
samplePoints
setSamplePoints:
_samplePoints
T{?=[30]},V_samplePoints
serailizeARFrameMeta:
createDirectory:
setUpInternalDumpWithLogDir:enable:
logKeyFrame:WithSkip:
logFinalFloorPlan:
logWithFrame:drift:
logWithFrame:coaching:
setFirstARFrame:
setLastARFrame:withCameraPose:
encodePng:
encodeRGBPng:withWidth:Height:
encodeDepthPng:
dumpLastARFrameImage
dumpARFrame:withKeyFrames:withCameraPose:
logMemory:
getDebugInfoWithConfig:OnlineDebug:
enableARFrameDump
setEnableARFrameDump:
enableLiveDump
setEnableLiveDump:
enableARFrameRGB
setEnableARFrameRGB:
enableARFrameDepth
setEnableARFrameDepth:
_save_queue
_save_group
_loggingDirectory
_keyframesDebug
_floorPlanDebug
_coachingDebug
_driftDebug
_sysDebug
_firstARFrameTime
_lastKeyframeTime
_keyframeMeta
_maxKeyframeFPS
_lastARFrame
_lastCameraPose
_enableARFrameDump
_enableLiveDump
_enableARFrameRGB
_enableARFrameDepth
TB,N,V_enableARFrameDump
TB,N,V_enableLiveDump
TB,N,V_enableARFrameRGB
TB,N,V_enableARFrameDepth
clear
setMarkerCoachingEnable:
setCurvedWallEnable:
setOpeningReplaceOpendoorEnable:
setOpendoorReplaceOpeningEnable:
setDoorReplaceOpeningEnable:
setBayWindowRecessedAreaEnable:
computeMirrorPoints:
beautifyObjects:withFloorPlan:
generateFloorPlanWithKeyframes:objects:
generateFloorPlanWithKeyframes:objects:error:
exportAsset
markerSignal
floorCeilingCount
setDoorWindowBeautificationEnable:
resetScanUIFormatter
_onlineWallOpeningConsistency
_onlineDoorWindow
_mirrorDetector
_wallOpeningDetector
_accumulator
_geometryEstimator
_scanUiFormatter
_onlineCurvedWallFusion
_projector
_heightEstimator
_openingHeightAlignment
_recessedAreaReconstructor
_parentAssociation
_isMarkerCoachingEnabled
_markerCoaching
_markerSignal
_isCurvedWallEnabled
_isOpeningReplaceOpendoorEnabled
_isOpendoorReplaceOpeningEnabled
_isDoorReplaceOpeningEnabled
_isBayWindowRecessedAreaEnable
_floorPlanForOffline
aggregatePointCloud
setLiveDumpEnable:
getDebugInfo
lmapOfWall
isSourceNode
inputs
outputs
sourceNode
TB,R,N,GisSourceNode
sinkNode
TB,R,N,GisSinkNode
T@"NSArray",R,C,N
addInput:
removeInput:
addOutput:
removeOutput:
renderSampleBuffer:fromInput:
_handleMessage:fromInput:
initWithBox:confidence:scale:label:
overlap:
setBox:
confidence
setConfidence:
scale
setScale:
label
setLabel:
_area
_confidence
_scale
_label
_box
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_box
Tf,N,V_confidence
Ti,N,V_scale
Ti,N,V_label
dealloc
detectWithPointCloud:walls:lcnnOpenings:isOnline:
detectWithPointCloud:walls:lcnnOpenings:
isValidOpening:
isValidSurface:
runPipelineOnSurface:withPointCloud:
extendSurface:byLength:
preprocessOnSurface:withPointCloud:
infer
postprocess
generateAnchors
parseNetOut
nmsBoxes:
filterBoxes:
clipBoxes:
removeMultiDetectionAcrossClassesWithOverlap:
cutOverlap:withRect:withIntersecRect:withUnionRect:
removeMultiDetectionAcrossClassesWithOverlapOffline:
projectDetectBoxesTo3dOnSurface:withPointCloud:
normalizeSizesOfSurfaces:withLowerWidthThreshold:higherWidthThreshold:
detectDepthOnSurface:withPointCloud:
removeOpenDoorPanelFp
postprocessWithNetInput:
removeOpenDoorPanelFpWithOpenDoors:andCloseDoors:
normalizedOutput
setNormalizedOutput:
_semanticMapBuffer
_semanticMap
_ioSurface
_logitsMapBuffers
_offsetsMapBuffers
_logitsMapIoSurfaces
_offsetsMapIoSurfaces
_logitsMap
_offsetsMap
_ctx
_plan
_net
_shift
_defaultBoxSizes
_anchorBoxes
_softmaxBuffer
_importantClasses
_defaultBoxStrides
_boxes
_windows
_doors
_openings
_opendoors
_filterThresholds
_isOnline
TB,N,VnormalizedOutput
runWithPointCloud:currentKeyframe:temporalMeta:floorPlan:lcnnOpenings:
setBeautificationEnable:
_wall_selector_for_door_window
_open_selector_for_door_window
_merger_for_close_door_window
_merger_for_open_door
_doorWindowDetector
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
dimensions
transform
hasBoxesDict:
getDimension:dim:
getTransform:transform:
dictionaryRepresentation
initWithDictionaryRepresentation:
rotateAlongZAxis:
translateBy:
addGroupId:forGroupType:
addBoxesDict:forDictKey:
clearGroupInfo:
type
setType:
identifier
setIdentifier:
logits
setLogits:
corners_status
setCorners_status:
edges_status
color
setColor:
status
setStatus:
detection_source
setDetection_source:
groups
boxesDict
_groups
_boxesDict
T@"NSString",&,N,Vtype
T@"NSUUID",&,N,Videntifier
Tf,N,Vconfidence
T@"NSArray",&,N,Vlogits
T@"NSArray",&,N,Vcorners_status
TB,N,Vstatus
T,N,Vcolor
T@"NSString",&,Vdetection_source
T@"NSArray",R,N,Vedges_status
T,R,N
T{?=[4]},R,N
T@"NSDictionary",R,N,V_groups
T@"NSDictionary",R,N,V_boxesDict
TQ,R,D,N
initWithSampleBuffer:attachments:
sampleBuffer
attachments
_sampleBuffer
_attachments
T^{opaqueCMSampleBuffer=},R,N,V_sampleBuffer
T@"NSDictionary",R,C,N,V_attachments
runWithFloorplan:geoMetryMeta:
_rSDeduplicateOpeningOpenDoorCore
runWithLcnnFloorPlan:onlineFloorPlan:objects:mirrorPoints:keyframes:pointCloud:
setWallOpeningMergeEnable:
generateFloorPlanWithKeyframes:initialAsset:
generateFloorPlanWithKeyframes:initialAsset:error:
_curvedWallDetector
_baywindowFPRemoval
_structurePostprocess
_deduplicateOpeningOpenDoor
_onlineOfflineAssociation
_removeOutsideObject
_doorWindowPostProcessor
_wallOpeningMergeEnabled
_openingReplaceOpendoorEnabled
_opendoorReplaceOpeningEnabled
_debugInfo
runWithFloorPlan:pointCloud:temporalMeta:geometryMeta:semanticImage:doorImage:maxDensity:lmap:
_isActiveWallEnabled
_online_refinement
_online_fusion
_prevFloorPlan
_tracing_map
_online_config
_density_map
initWithOrigin:reflect:
origin
reflect
_origin
_reflect
T,R,N,V_origin
T,R,N,V_reflect
floorPlan
setFloorPlan:
mirrorPoints
setMirrorPoints:
isCaptured
setIsCaptured:
version
rawFloorPlan
setRawFloorPlan:
_isCaptured
_floorPlan
_mirrorPoints
_version
_rawFloorPlan
T@"RSFloorPlan",&,N,V_floorPlan
T@"NSArray",&,N,V_mirrorPoints
TB,N,V_isCaptured
Tq,R,N,V_version
T@"RSFloorPlan",&,N,V_rawFloorPlan
updateRecessedAreaPoolAndCurrentFrameWithWalls:windows:openings:doors:opendoors:
updateFloorPlan:withRecessedArea:
updateFloorPlan:withRecessedAreas:
runWithFloorPlan:majorViewInfo:
_current_frame_recessed_area_list
_recessed_area_pool
_onlineBayWindowConfig
_last_frame_recall_idx
initWithDictionary:
isEqualToRSSubPointsLUT:
begin
setBegin:
setEnd:
pose
setPose:
intrinsics
setIntrinsics:
size
setSize:
rawSize
setRawSize:
camW
setCamW:
camH
setCamH:
_camW
_camH
_begin
_end
_size
_rawSize
_intrinsics
_pose
TQ,N,V_begin
TQ,N,V_end
T{?=[4]},N,V_pose
T{?=[3]},N,V_intrinsics
TQ,N,V_size
TQ,N,V_rawSize
Tf,N,V_camW
Tf,N,V_camH
incrementalPoints
incrementalPointsCount
incrementalPoses
coveringHullPoints
coveringHullPointsCount
boundaryPoints
boundaryPointsCount
assignIncrementalPoints:withSize:
appendIncrementalPose:
clearIncrementalPoses
assignCoveringHullPoints:withSize:
assignBoundaryPoints:withSize:
isEqualToRSTemporalMeta:
isUpdate
setIsUpdate:
incrementalIds
setIncrementalIds:
mappingInterval
setMappingInterval:
_incrementalPoints
_coveringHullPoints
_boundaryPoints
_incrementalPoses
_isUpdate
_incrementalIds
_mappingInterval
TB,N,V_isUpdate
T@"NSMutableArray",&,N,V_incrementalIds
T@"NSMutableDictionary",&,N,V_mappingInterval
T^{?=[4]},R,N
Tr^,R,N
TQ,R,N
T^,R,N
setObjectBeautificationEnable:
setChairBeautificationEnable:
setStandardizationEnable:
setEstimateFloorPlanColorEnable:
constrainHeightOfSurfaces:byWalls:
constrainHeightInFloorPlan:
filterEmptySurfaces:
filterEmptySurfaceInFloorPlan:
onlineRunWithFloorPlan:objects:pointCloud:geometryMeta:density:
assignIdentifiersTo:
runWithFloorPlan:objects:pointCloud:geometryMeta:density:
beautifyObjects:withFloorPlan:pointCloud:
outputFloorPlan
_roomStandardizer
_objAlign
_pointCloudColorEstimator
_isObjectBeautificationEnabled
_isChairBeautificationEnabled
_isStandardizationEnabled
_isEstimateFloorPlanColorEnabled
isWindowDoorDetectionEnabled
setWindowDoorDetectionEnabled:
isObjectBeautificationEnabled
setObjectBeautificationEnabled:
isChairBeautificationEnabled
setChairBeautificationEnabled:
isStandardizationEnabled
setStandardizationEnabled:
isWallOpeningMergeEnabled
setWallOpeningMergeEnabled:
isOpeningReplaceOpendoorEnabled
setOpeningReplaceOpendoorEnabled:
isNonUniformHeightEnabled
setNonUniformHeightEnabled:
isOpendoorReplaceOpeningEnabled
setOpendoorReplaceOpeningEnabled:
_windowDoorDetectionEnabled
_objectBeautificationEnabled
_chairBeautificationEnabled
_standardizationEnabled
_nonUniformHeightEnabled
windowDoorDetectionEnabled
TB,N,GisWindowDoorDetectionEnabled,V_windowDoorDetectionEnabled
objectBeautificationEnabled
TB,N,GisObjectBeautificationEnabled,V_objectBeautificationEnabled
chairBeautificationEnabled
TB,N,GisChairBeautificationEnabled,V_chairBeautificationEnabled
standardizationEnabled
TB,N,GisStandardizationEnabled,V_standardizationEnabled
wallOpeningMergeEnabled
TB,N,GisWallOpeningMergeEnabled,V_wallOpeningMergeEnabled
openingReplaceOpendoorEnabled
TB,N,GisOpeningReplaceOpendoorEnabled,V_openingReplaceOpendoorEnabled
nonUniformHeightEnabled
TB,N,GisNonUniformHeightEnabled,V_nonUniformHeightEnabled
opendoorReplaceOpeningEnabled
TB,N,GisOpendoorReplaceOpeningEnabled,V_opendoorReplaceOpeningEnabled
updateFloorPlanGeneratorWithConfiguration:
initWithConfiguration:
processWithKeyframes:initialAsset:
processWithKeyframes:initialAsset:error:
processWithKeyframes:initialAsset:completionHandler:
processWithKeyframes:initialAsset:completionHandlerWithError:
standardizeFloorPlan:
_generationSemaphore
_queue
_fpGenerator
_configuration
isLiveResultEnabled
setLiveResultEnabled:
isTextCoachingEnabled
setTextCoachingEnabled:
isOnboardingEnabled
setOnboardingEnabled:
isMarkerCoachingEnabled
setMarkerCoachingEnabled:
isDoorWindowBeautificationEnabled
setDoorWindowBeautificationEnabled:
isDriftDetectionEnabled
setDriftDetectionEnabled:
isDoorReplaceOpeningEnabled
setDoorReplaceOpeningEnabled:
isBoundaryRefinementEnabled
setBoundaryRefinementEnabled:
isBayWindowRecessedAreaEnabled
setBayWindowRecessedAreaEnabled:
maxFramerate
setMaxFramerate:
isMirrorDetectionEnabled
setMirrorDetectionEnabled:
coachingMaxFrameRate
setCoachingMaxFrameRate:
isCurvedWallEnabled
setCurvedWallEnabled:
_liveResultEnabled
_textCoachingEnabled
_onboardingEnabled
_markerCoachingEnabled
_doorWindowBeautificationEnabled
_driftDetectionEnabled
_doorReplaceOpeningEnabled
_boundaryRefinementEnabled
_bayWindowRecessedAreaEnabled
_mirrorDetectionEnabled
_curvedWallEnabled
_maxFramerate
_coachingMaxFrameRate
mirrorDetectionEnabled
TB,N,GisMirrorDetectionEnabled,V_mirrorDetectionEnabled
TQ,N,V_coachingMaxFrameRate
curvedWallEnabled
TB,N,GisCurvedWallEnabled,V_curvedWallEnabled
liveResultEnabled
TB,N,GisLiveResultEnabled,V_liveResultEnabled
textCoachingEnabled
TB,N,GisTextCoachingEnabled,V_textCoachingEnabled
onboardingEnabled
TB,N,GisOnboardingEnabled,V_onboardingEnabled
markerCoachingEnabled
TB,N,GisMarkerCoachingEnabled,V_markerCoachingEnabled
doorWindowBeautificationEnabled
TB,N,GisDoorWindowBeautificationEnabled,V_doorWindowBeautificationEnabled
driftDetectionEnabled
TB,N,GisDriftDetectionEnabled,V_driftDetectionEnabled
doorReplaceOpeningEnabled
TB,N,GisDoorReplaceOpeningEnabled,V_doorReplaceOpeningEnabled
boundaryRefinementEnabled
TB,N,GisBoundaryRefinementEnabled,V_boundaryRefinementEnabled
bayWindowRecessedAreaEnabled
TB,N,GisBayWindowRecessedAreaEnabled,V_bayWindowRecessedAreaEnabled
TQ,N,V_maxFramerate
session:didFailWithError:
_processInfoThermalStateDidChangeNotification:
session:didUpdateFloorPlan:
session:didUpdateMarkerCoaching:
session:didUpdateTextCoaching:
session:didUpdateAsset:
listenToAvailableMemory
listenToThermalState
runWithConfiguration:
updateWithKeyframes:
updateWithObjects:
updateCoachingWithFrame:
updateMirrorPointWithFrame:
validateDepthOfRSFrame:
refineBoundaryWithFrame:
updateWithFrame:
stop
generateMirrorPointWithFrame:
delegate
setDelegate:
_fpQueue
_allKeyframes
_updateKeyframes
_fpStartDate
_coachingQueue
_textCoaching
_coachingStartDate
_driftDetection
_mirrorPointQueue
_refinedFloorPlan
_detectedObjects
_memoryMonitorSource
_memoryMonitorSuspended
_fpSemaphore
_coachingSemaphore
_mirrorPointSemaphore
_debugDumper
_workgroupFloorPlan
_workgroupCoaching
_workgroupMirror
_boundaryRefinementSemaphore
_boundaryRefinement
_readWriteQueue
_workgroupReadWrite
_delegate
T@"<RSCaptureSessionDelegate>",W,N,V_delegate
cameraPose
setCameraPose:
timestamp
setTimestamp:
_identifier
_timestamp
_cameraPose
T@"NSUUID",&,N,V_identifier
T{?=[4]},N,V_cameraPose
Td,N,V_timestamp
count
points
semanticLabels
semanticVotes
colors
pointsToWorld
T@"NSUUID",R,N
Tq,R,N
Td,R,N
initWithDictionary:withGroupId:
setPoints:semanticLabels:semanticVotes:colors:count:
filterOutPointsBeyondDistance:
select:indices:
select:indices:from:
initWithKeyframe:
processWithVoxelize:asPythonApproach:resample:outlierRemove:
groupId
setGroupId:
_points
_pointsToWorld
_semLabels
_semVotes
_colors
Td,N,Vtimestamp
T{?=[4]},N,VcameraPose
TI,N,VgroupId
initWithDictionaryRepresentation:withGroupId:
resetAllSurfacesUpdateStatus
updateObjects:
updateStructure:
appendVisualWallsForOpenings
updateSurfacesHeight:withCeiling:floor:
setWallsHeight:
updateWallsHeight
updateOpeningsHeight
updateWindowsHeight
updateDoorsHeight
updateOpenDoorsHeight
updateNodesHeight
filterNoParentNodes:
filterOtherTypeWalls
setupHeight
setWalls:
doors
setDoors:
windows
setWindows:
openings
setOpenings:
opendoors
setOpendoors:
objects
setObjects:
ceilingHeight
setCeilingHeight:
floorHeight
setFloorHeight:
curvedWalls
setCurvedWalls:
T@"NSArray",&,N,Vwalls
T@"NSArray",&,N,Vdoors
T@"NSArray",&,N,Vwindows
T@"NSArray",&,N,Vopenings
T@"NSArray",&,N,Vopendoors
T@"NSArray",&,N,Vobjects
T@"NSArray",&,N,VcurvedWalls
TI,VgroupId
Tf,VceilingHeight
Tf,VfloorHeight
runWithPointCloud:geometryMeta:
semanticImage
heightImage
cameraImage
_image
_maxDensity2d
_maxDensity3d
_heightImage
_cameraImage
emitMessage:
consumer
setConsumer:
_consumer
T@"<RSNodeOutputConsumer>",&,N,V_consumer
producer
setProducer:
_producer
T@"<RSNodeInputProducer>",W,N,V_producer
fillWithDictionaryRepresentation:
initWithDictionaryRepresentation:WithGroupId:
setHeightWithCeiling:floor:
polygon
polygonSize
polygonEdgeStates
polygonEdgeConfidence
assignPolygon:polygonEdgeStates:polygonEdgeConfidence:count:
quad
setQuad:
completed
setCompleted:
occluded
setOccluded:
children
setChildren:
parent
setParent:
parentIdentifier
setParentIdentifier:
wallStatus
setWallStatus:
parentWallStatus
setParentWallStatus:
normal
setNormal:
isFakeWall
setIsFakeWall:
edgeStates
setEdgeStates:
edgeConfidence
setEdgeConfidence:
individualUpdate
setIndividualUpdate:
appearPosePts
setAppearPosePts:
appearMajorViews
setAppearMajorViews:
depth
setDepth:
_polygon
_polygonEdgeStates
_polygonEdgeConfidence
T{?=[4]},Vquad
Tf,Vconfidence
TB,Vcompleted
Ti,VwallStatus
Ti,VparentWallStatus
TB,Voccluded
TC,N,Vtype
T@"NSUUID",&,N,VparentIdentifier
T@"NSMutableArray",&,Vchildren
T@"RS3DSurface",W,Vparent
T,Vnormal
TB,VisFakeWall
Tf,Vdepth
T{?=[4c]},N,VedgeStates
T{?=[4f]},N,VedgeConfidence
Tc,N,VindividualUpdate
T,VappearPosePts
T,VappearMajorViews
Tr^c,R,N
Tr^f,R,N
initWithHeight:width:channel:
initWithHeight:width:channel:backingType:dataType:
initWithHeight:width:channel:backingType:
data
imageOfChannel:
resizeToHeight:width:channel:
_allocateBacking
_deallocateBacking
isEqualToRSSemanticImage:
bytesPerRow
height
width
channel
backingType
dataType
_backing
_dataType
_bytesPerRow
_height
_width
_channel
_backingType
TQ,R,N,V_bytesPerRow
TQ,R,N,V_size
TQ,R,N,V_height
TQ,R,N,V_width
TQ,R,N,V_channel
TQ,R,N,V_backingType
TI,R,N,V_dataType
pixelBuffer
IOSurface
T^{__CVBuffer=},R,N
T^{__IOSurface=},R,N
initWithAllocedInput:
convertLcnnResultTo3DSurface:withSurfaceType:scale:shift:
runWithSemanticImage:geometryMeta:
lmap
_lcnnDetector
processWithFloorPlan:temporalMeta:geometryMeta:
runWithFloorPlan:temporalMeta:geometryMeta:
initWithType:state:score:
initWithType:score:
state
setState:
text
score
setScore:
_score
_type
_state
_text
Tq,N,V_type
Tq,N,V_state
Tf,N,V_score
T@"NSString",R,N,V_text
_normal
_quad
T{?=[4]},N,V_quad
T,N,V_normal
markers
setMarkers:
_markers
T@"NSArray",&,N,V_markers
setFixedFloorPlanColor:withPointCloud:
estimateFloorPlanColor:withPointCloud:
estimateFloorPlanColor:withPointCloud:method:sameLabelShareColor:
_estimateSurfacesColor:withPointCloud:thickness:semanticLabel:method:sameLabelShareColor:
_estimateObjectColor:withPointCloud:method:
_estimateObjectsColor:withPointCloud:
_worldpc
_floorplan
checkSurfaceUuidIsUnique:
checkParentIdentifierIsValid:
checkChildNodeGeometryConstraint:
validateFloorPlan:
sortKeyframesByTimestamp:
pointCloud
temporalMeta
_accMeta
setupRefinementProcessor:
runWithFloorPlan:rsFrame:
_processor
_initProcessor
_prevInputWindows
_prevInputDoors
_prevOutputFloorPlan
circleCenter
setCircleCenter:
radius
setRadius:
startOrientation
setStartOrientation:
endOrientation
setEndOrientation:
_radius
_startOrientation
_endOrientation
_circleCenter
T,N,V_circleCenter
Tf,N,V_radius
Tf,N,V_startOrientation
Tf,N,V_endOrientation
major_convex_hull
sz_major_convex_hull
major_convex_hull_buffer
sz_major_convex_hull_buffer
major_view_line
sz_major_view_line
major_views
sz_major_views
assignMajorConvexHull:withSize:
apppendMajorConvexHull:
cleanMajorConvexHull
assignMajorConvexHullBuffer:withSize:
apppendMajorConvexHullBuffer:
cleanMajorConvexHullBuffer
assignMajorViewLine:withSize:
apppendMajorViewLine:
cleanMajorViewLine
assignMajorViews:withSize:
apppendMajorViews:
cleanMajorViews
_major_convex_hull
_major_convex_hull_buffer
_major_view_line
_major_views
sortKeyframesBySizeInDescendingOrder:
initWithKeyframes:enableCameraPosition:
initWithCount:points:semanticLabels:semanticVotes:colors:
append:points:semanticLabels:semanticVotes:colors:
updateKeyframeHeights
accumulateWithKeyframesInWorld:voxelize:
processWithVoxelize:asPythonApproach:resample:
mappingIntervalOfKeyframe:
updateCursor
isEqualToRSPointCloud:
updateKeyframeIds
keyframeHeights
rawPoints
rawCount
rawUpdateCursor
cameraPositions
_cameraPositions
_updateCursor
_keyframeHeights
_updateKeyframeIds
_voxelSet
_keyframeVoxelSet
_rawPoints
_rawMappingInterval
_rawUpdateCursor
_isCameraPositionEnabled
ceilingSum
setCeilingSum:
ceilingVote
setCeilingVote:
floorSum
setFloorSum:
floorVote
setFloorVote:
_ceilingSum
_floorSum
_ceilingVote
_floorVote
Tf,N,V_ceilingSum
TQ,N,V_ceilingVote
Tf,N,V_floorSum
TQ,N,V_floorVote
mergeLShapeCabinets:worldpc:
mergeLShape:worldpc:objecttypes:
inputSemanticsVersion
isDoorWindowEnabled
setDoorWindowEnable:
render
setRender:
_inputSemanticsVersion
_isDoorWindowEnabled
_render
T@"RSFloorPlanRender",&,N,V_render
runWithPointCloud:temporalMeta:geometryMeta:
maxDensity2d
doorImage
_bufferImage
_bufferHeightImage
_doorImage
_bufferDoorImage
runWithPointCloud:floorPlan:lcnnOpenings:
isEqualToRSGeometryMeta:
isCenterScaleUpdated
setIsCenterScaleUpdated:
pixelSize
setPixelSize:
supportHeight
setSupportHeight:
center
setCenter:
shift
setShift:
imageSize
setImageSize:
zSlice
setZSlice:
visualFloorHeight
setVisualFloorHeight:
visualCeilingHeight
setVisualCeilingHeight:
setFloorCeilingCount:
_isCenterScaleUpdated
_pixelSize
_floorHeight
_ceilingHeight
_supportHeight
_imageSize
_zSlice
_visualFloorHeight
_visualCeilingHeight
_floorCeilingCount
_center
TB,N,V_isCenterScaleUpdated
Tf,N,V_pixelSize
Tf,N,V_floorHeight
Tf,N,V_ceilingHeight
Tf,N,V_supportHeight
T,N,V_center
T,N,V_scale
T,N,V_shift
Ti,N,V_imageSize
Ti,N,V_zSlice
Tf,N,V_visualFloorHeight
Tf,N,V_visualCeilingHeight
T,N,V_floorCeilingCount
imageResolution
trackingState
T{?=[3]},R,N
T{CGSize=dd},R,N
setTransform:
setImageResolution:
setTrackingState:
_trackingState
_imageResolution
T{CGSize=dd},N,V_imageResolution
Tq,N,V_trackingState
T{?=[4]},N,Vtransform
runWithFloorPlan:lmap:geometryMeta:
dictionaryFromBox3d:
dictionaryFromBoxes3d:
dictionaryFromBoxes3dPointCloud:pointCloud:
box3dFromDictionary:
pointCloudFromDictionary:
boxes3dFromDictionary:
recessedWalls
setRecessedWalls:
bayWindows
setBayWindows:
frontOpening
setFrontOpening:
T@"NSArray",&,N,VrecessedWalls
T@"NSArray",&,N,VbayWindows
T@"RS3DSurface",&,N,VfrontOpening
runWithFloorPlan:objects:keyframes:
mergeDoors:
merge_doors_on_same_wall:
getSurface_e_width:
getSurface_e_height:
getSurface_width:
getSurface_height:
getSurface_center:
make_corners_order_consistent_with_wall:withWalls:
make_merged_instance:withFirstPoint:withLastPoint:withConfidence:
merge_door_instances:withWall:mergedCloseDoors:mergedOpenDoors:
setOnboarding:
currentPoseSeeWall:intrinsic:
computeCosPitchFromPose:intrinsic:
updateCoachingStateFirstKeyframe:
correctIntrinsics:
runModelWithFrame:cameraPose:driftSignal:intrinsic:seeWall:
runWithFrame:cameraPose:driftSignal:
runWithFloorCeilingCount:
_speed
_light
_distance
_onboard
_lastWalls
_floor_signal
_ceiling_signal
_last_signal
_wallThr
_firstKeyframeTime
_firstCallTime
_floorCeilingTime
_lastModelTime
_maxModelFrameRate
_enableOnboarding
_readwriteLock
Tq,R,N,V_state
deduplicateUUIDInSurfaces:uuidSet:
deduplicateSurfaceUUIDInFloorPlan:
validateParentIdentifierOfWalls:
runWithOnlineFloorplan:offlineFloorplan:camDensity2D:geoMetryMeta:
_rsOnlineOfflineAssociationCore
frame
initWithFrame:
initWithPointCloud:
initWithFloorPlan:
initWithTemporalMeta:
initWithGeometryMeta:
initWithSemanticImage:
keyFrames
initWithKeyFrames:
initWithObjects:
initWithMirrorPoints:
T@"<RSFrame>",R,N
T@"<RSPointCloud>",R,N
T@"RSFloorPlan",R,N
T@"RSTemporalMeta",R,N
T@"RSGeometryMeta",R,N
T@"RSSemanticImage",R,N
T@"NSArray",R,N
runWithFloorPlan:temporalMeta:
_generator
_all_major_view_lines
_all_poses
_output_count
_img_sz_step
sortKeyframeMetas:
generateKeyframesMeta:
newKeyframes
diffKeyframes
_skipCnt
_metas
_newKeyframes
_diffKeyframes
_keyframeOrderDict
snapWallsWithFloorPlan:lmap:shift:scale:imageSize:
runWithFloorPlan:lmap:geometryMeta:temporalMeta:
_curved_walls_pool
source_object_uuid
setSource_object_uuid:
target_object_uuid
setTarget_object_uuid:
T@"NSUUID",&,N,Vsource_object_uuid
T@"NSUUID",&,N,Vtarget_object_uuid
GetAllObjects
setGroups:
_objects
T@"NSArray",&,N,V_objects
T@"NSDictionary",&,N,V_groups
initWithPoints:count:
camera
colorBuffer
sceneCamera
sceneColorBuffer
depthBuffer
depthConfidenceBuffer
semanticLabelBuffer
semanticConfidenceBuffer
vioTrackingState
rawFeaturePoints
referenceOriginTransform
deviceOrientation
T@"<RSCamera>",R,N
T@"<RSRawPointCloud>",R,N
initWithPythonDictionary:
setCamera:
setColorBuffer:
setSceneCamera:
setSceneColorBuffer:
setDepthBuffer:
setDepthConfidenceBuffer:
setSemanticLabelBuffer:
setSemanticConfidenceBuffer:
setVioTrackingState:
setRawFeaturePoints:
setReferenceOriginTransform:
setDeviceOrientation:
_camera
_colorBuffer
_sceneCamera
_sceneColorBuffer
_depthBuffer
_depthConfidenceBuffer
_semanticLabelBuffer
_semanticConfidenceBuffer
_vioTrackingState
_rawFeaturePoints
_deviceOrientation
_referenceOriginTransform
T@"<RSCamera>",&,N,V_camera
T^{__CVBuffer=},N,V_colorBuffer
T@"<RSCamera>",&,N,V_sceneCamera
T^{__CVBuffer=},N,V_sceneColorBuffer
T^{__CVBuffer=},N,V_depthBuffer
T^{__CVBuffer=},N,V_depthConfidenceBuffer
T^{__CVBuffer=},N,V_semanticLabelBuffer
T^{__CVBuffer=},N,V_semanticConfidenceBuffer
Tq,N,V_vioTrackingState
T@"<RSRawPointCloud>",&,N,V_rawFeaturePoints
T{?=[4]},N,V_referenceOriginTransform
Tq,N,V_deviceOrientation
runWithFloorPlan:pointCloud:temporalMeta:
@16@0:8
@40@0:8@16B24B28B32B36
v16@0:8
{RSParentAssociationCore="_vptr$RSParentAssociationCore"^^?"_matching_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
v24@0:8@16
@"RSGeometryMeta"
{?="margin"i"img_sz"i"use_pw_center"B"pw_center_update_rate"i"use_global_center"B"use_dynamic_pixel_sz"B"pixel_sz"f"hist_norm"B"z_slice"i"z_slice_pixel"f}
@96@0:8@16@24{?=[4]}32
{RSDriftDetectionCore="_vptr$RSDriftDetectionCore"^^?"_is_arTrackingStable"B"_is_vioTrackingStable"B"_is_first_wall_generated"B"_is_first_keyframe_generated"B"_enable_sample_colors"B"_ar_frames"{vector<rs_drift_detection::DriftFrameInternalWraper, std::allocator<rs_drift_detection::DriftFrameInternalWraper>>="__begin_"^{DriftFrameInternalWraper}"__end_"^{DriftFrameInternalWraper}"__end_cap_"{__compressed_pair<rs_drift_detection::DriftFrameInternalWraper *, std::allocator<rs_drift_detection::DriftFrameInternalWraper>>="__value_"^{DriftFrameInternalWraper}}}"_drift_detection_config"{DRIFT_DETECTION_CONFIG="xyz_speed_drift_thres"f"view_speed_drift_thres"f"feature_pts_match_thres"f"feature_pts_similarity_thres"f"flying_away_frames"f"flying_away_angle_thres"f"flying_away_xyz_speed_drift_thres"f"flying_away_view_speed_drift_thres"f"big_align_gap_wall_len_thres"f"big_align_gap_thres"f"big_align_gap_search_thres"f"big_align_area_thres"f"pose_get_stuck_eps"f"n_lost_track_thr"i}"_count_idx"Q"_ignore_idx"Q"_keep_frame_size"Q"_n_lost_track"Q}
B16@0:8
@24@0:8@16
@56@0:8@16@24@32@40@48
v20@0:8B16
{vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__value_"^}}
{NonUniformHeightEstimation="_floor_global_value"d"_ceiling_global_value"d"_line_points"{unordered_map<std::string, PointsLine, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, PointsLine>>>="__table_"{__hash_table<std::__hash_value_type<std::string, PointsLine>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, PointsLine>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, PointsLine>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, PointsLine>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, PointsLine>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, PointsLine>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, PointsLine>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_individual_wall_height"{unordered_map<std::string, IndividualWallHeightStruct, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, IndividualWallHeightStruct>>>="__table_"{__hash_table<std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, IndividualWallHeightStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, IndividualWallHeightStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, IndividualWallHeightStruct>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_valid_line_segments"{vector<SegmentsInfo, std::allocator<SegmentsInfo>>="__begin_"^{SegmentsInfo}"__end_"^{SegmentsInfo}"__end_cap_"{__compressed_pair<SegmentsInfo *, std::allocator<SegmentsInfo>>="__value_"^{SegmentsInfo}}}}
v32@0:8@16@24
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}28@0:8r^v16B24
{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}40@0:8r^v16r^v24i32B36
@48@0:8@16@24@32B40B44
@"RS3DObjectMerger"
{vector<quad3dType2, std::allocator<quad3dType2>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<quad3dType2 *, std::allocator<quad3dType2>>="__value_"^{?}}}
{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}
{vector<std::vector<float>, std::allocator<std::vector<float>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<float> *, std::allocator<std::vector<float>>>="__value_"^v}}
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"RSNodeMessage"16@"RSNodeOutput"24
@32@0:8@16@24
B24@0:8^@16
@"RSNodeOutput"
@"RSNodeInput"
{?=[30]}16@0:8
v496@0:8{?=[30]}16
{?="points"[30]}
v28@0:8@16B24
v88@0:8@16{?=[4]}24
@24@0:8^{__CVBuffer=}16
@40@0:8^{__CVBuffer=}16Q24Q32
v96@0:8@16@24{?=[4]}32
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSString"
@"NSMutableArray"
@"NSDate"
@"NSMutableDictionary"
@"<RSFrame>"
{?="columns"[4]}
@40@0:8@16@24^@32
16@0:8
@"RSWallOpeningOnlineOptimizer"
@"RSDoorWindowOnlineDetector"
@"RSMirrorDetection"
@"RSWallOpeningOnlineDetector"
@"RSKeyframeAccumulation"
@"RSGeometryCalculation"
@"RSScanUIFormatter"
@"RSOnlineCurvedWallFusion"
@"RSProjection2DZ"
@"RSNonUniformHeightEstimation"
@"RSOpeningHeightAlignment"
@"RSRecessedAreaReconstructor"
@"RSParentAssociation"
@"RSMarkerCoaching"
@"RSMarkerSignal"
@"RSFloorPlan"
r^v16@0:8
v32@0:8^{opaqueCMSampleBuffer=}16@24
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16f48i52i56
f24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
f16@0:8
v20@0:8f16
i16@0:8
v20@0:8i16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@44@0:8@16@24@32B40
@40@0:8@16@24@32
@28@0:8@16f24
v96@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}32{CGRect={CGPoint=dd}{CGSize=dd}}64
B32@0:8@16@24
v32@0:8@16f24f28
f32@0:8@16@24
^{__CVBuffer=}
^{__IOSurface=}
[6^{__CVBuffer}]
[6^{__IOSurface}]
{?="plan"^v"network_index"i}
[6[20[2f]]]
{vector<std::vector<std::vector<std::vector<std::vector<float>>>>, std::allocator<std::vector<std::vector<std::vector<std::vector<float>>>>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<std::vector<std::vector<std::vector<float>>>> *, std::allocator<std::vector<std::vector<std::vector<std::vector<float>>>>>>="__value_"^v}}
{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}
@"NSArray"
{WallOpeningSelectorForDoorWindow="_vptr$WallOpeningSelectorForDoorWindow"^^?"_infer_wall_openings"@"NSMutableArray""_infer_wall_openings_attributes"{vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>>="__begin_"^{WallOpeningAttribute}"__end_"^{WallOpeningAttribute}"__end_cap_"{__compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>>="__value_"^{WallOpeningAttribute}}}"_target_infer_wall_openings"@"NSMutableArray""_target_infer_wall_openings_attributes"{vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>>="__begin_"^{WallOpeningAttribute}"__end_"^{WallOpeningAttribute}"__end_cap_"{__compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>>="__value_"^{WallOpeningAttribute}}}"_new_wall_openings"@"NSArray""_cur_keyframe"@"<RSKeyframe>""_floor_height"f"_ceiling_height"f"_convex_hull"^"_convex_hull_size"Q"_cur_lines"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"_new_lines"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"_cur_matches"{vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>>="__begin_"^{RS_Match_Info}"__end_"^{RS_Match_Info}"__end_cap_"{__compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>>="__value_"^{RS_Match_Info}}}"_new_matches"{vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>>="__begin_"^{RS_Match_Info}"__end_"^{RS_Match_Info}"__end_cap_"{__compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>>="__value_"^{RS_Match_Info}}}"_select_wall"B}
{MergerForDoorWindow="_vptr$MergerForDoorWindow"^^?"_new_instances"@"NSMutableArray""_target_infer_walls_openings"@"NSArray""_new_walls_openings"@"NSArray""_merged_instances"@"NSMutableArray""_prev_instances"@"NSMutableArray""_prev_instances_on_infer_walls_openings"@"NSMutableArray""_prev_instances_to_keep"@"NSMutableArray"}
@"RSOrthographicDetector"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=[4]}16@0:8
B32@0:8@16^24
B32@0:8@16^{?=[4]}24
v32@0:816
v28@0:8i16@20
v32@0:8r^{box3d=[8]}16@24
@"NSUUID"
@32@0:8^{opaqueCMSampleBuffer=}16@24
^{opaqueCMSampleBuffer=}16@0:8
^{opaqueCMSampleBuffer=}
@"NSDictionary"
{RSDeduplicateOpeningOpenDoorCore="_vptr$RSDeduplicateOpeningOpenDoorCore"^^?"_angle_thresh"f"_projection_dist_thresh"f"_dist_thresh"f"_matching_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
@64@0:8@16@24@32@40@48@56
@"RSDoorWindowOfflineDetector"
@"RSWallOpeningOfflineDetector"
@"RSOfflineKeyframeAccumulation"
@"RSOfflineGeometryCalculation"
@"RSCurvedWallDetection"
@"RSOfflineProjection2DZNode"
@"RSBayWindowFPRemoval"
@"RSStructurePostProcess"
@"RSDeduplicateOpeningOpenDoor"
@"RSOnlineOfflineAssociation"
@"RSOutsideObjectRemoval"
@"RSDoorWindowPostProcessor"
@76@0:8@16@24@32@40@48@56f64r^v68
{RSOnlineRefinement="_vptr$RSOnlineRefinement"^^?"_search_range_7"{Tensor<int, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<int>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^i}"_search_range_3"{Tensor<int, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<int>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^i}"_fitting_lines"{optional<rs_ol::RS3DSurfaceOnline>=""(?="__null_state_"c"__val_"{RS3DSurfaceOnline="_vptr$RS3DSurfaceOnline"^^?"surface"@"RS3DSurface""line_2d"{RSLine2D="_vptr$RSLine2D"^^?"pt"[2]}"line_3d"{RSLine3D="_vptr$RSLine3D"^^?"pt"[2]}"floor_height"f"ceiling_height"f"height"f"visible"B"visible_buffer"B"major_dist"f"major_angle"f"transition_status"i"first_appear_frame"i"last_appear_frame"i"non_match_count"i"non_match_shorten_count"i"debug_idx"i"wall_type"i"standalone_opening_count"i"_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"Q}"__s"{__short="__data_"[23c]""{?="__size_"C}}"__r"{__raw="__words"[3Q]})}}}"_parrent_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"Q}"__s"{__short="__data_"[23c]""{?="__size_"C}}"__r"{__raw="__words"[3Q]})}}}})"__engaged_"B}"_config"{ONLINE_REFINE_CONFIG="density_index"i"slice_threshold"f"min_slice_num"f"min_wall_length"f"min_density"f"zslice_density_threshold"f"major_small_wall_length_th"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
{RSOnlineFusion="_vptr$RSOnlineFusion"^^?"_camera_positions"{vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__value_"^}}"_online_floorplan_last"{RSFloorPlanOnline="_vptr$RSFloorPlanOnline"^^?"walls"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"openings"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"windows"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"doors"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"open_doors"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"door_panels"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}"curved_circles"{vector<RS3DCurvedSurface *, std::allocator<RS3DCurvedSurface *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<RS3DCurvedSurface *__strong *, std::allocator<RS3DCurvedSurface *>>="__value_"^@}}"structure_graph"{RSStructureGraph="_vptr$RSStructureGraph"^^?"_structures"{vector<rs_ol::RSStructure *, std::allocator<rs_ol::RSStructure *>>="__begin_"^^{RSStructure}"__end_"^^{RSStructure}"__end_cap_"{__compressed_pair<rs_ol::RSStructure **, std::allocator<rs_ol::RSStructure *>>="__value_"^^{RSStructure}}}}"_empty"{RS3DSurfaceOnline="_vptr$RS3DSurfaceOnline"^^?"surface"@"RS3DSurface""line_2d"{RSLine2D="_vptr$RSLine2D"^^?"pt"[2]}"line_3d"{RSLine3D="_vptr$RSLine3D"^^?"pt"[2]}"floor_height"f"ceiling_height"f"height"f"visible"B"visible_buffer"B"major_dist"f"major_angle"f"transition_status"i"first_appear_frame"i"last_appear_frame"i"non_match_count"i"non_match_shorten_count"i"debug_idx"i"wall_type"i"standalone_opening_count"i"_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"Q}"__s"{__short="__data_"[23c]""{?="__size_"C}}"__r"{__raw="__words"[3Q]})}}}"_parrent_uuid"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"Q}"__s"{__short="__data_"[23c]""{?="__size_"C}}"__r"{__raw="__words"[3Q]})}}}}"_empty_lists"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}"_structure_config"{ONLINE_STRUCTURE_CONFIG="z_shape_min_len"f"z_shape_max_len"f"w_shape_min_len"f"w_shape_max_len"f}"_tm_helper"{RSTmOnlineTMScoreHelper="_vptr$RSTmOnlineTMScoreHelper"^^?}"_local_standardization"{RSLocalStandardization="_vptr$RSLocalStandardization"^^?"_online_std_config"{ONLINE_STANDARDIZATION_CONFIG="large_wall_len_thr"f"small_wall_len_thr"f"noise_wall_len_thr"f"angle_thr"f"noise_wall_angle_thr"f"angle_eps"f"anchor_wall_len_factor"f"corner_dist_thr"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}"_curved_walls"{vector<rs_ol::RSCurvedSurfaceOnline, std::allocator<rs_ol::RSCurvedSurfaceOnline>>="__begin_"^{RSCurvedSurfaceOnline}"__end_"^{RSCurvedSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RSCurvedSurfaceOnline *, std::allocator<rs_ol::RSCurvedSurfaceOnline>>="__value_"^{RSCurvedSurfaceOnline}}}"_online_curved_segments"{vector<RS3DCurvedSurface *, std::allocator<RS3DCurvedSurface *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<RS3DCurvedSurface *__strong *, std::allocator<RS3DCurvedSurface *>>="__value_"^@}}"_online_curved_wall_config"{ONLINE_CURVED_CONFIG="minDist"f"param1"i"param2"i"minRadius"f"maxRadius"f"density_thres"f"angle_thres"f"length_thres"f"kernel_size"i"iou_thr"f"min_iou_thr"f"dist_thr"f"inner_line_tol"f"inner_circle_tol"f"intersect_tol"f"segment_type"i"segment_angle"f"segment_length"f"direction_change_eps"f"reuse_uuid_iou_thr"f"reuse_uuid_dist_thr"f"reuse_uuid_angle_thr"f}"_need_curved_wall_process"B"_historical_low_conf_walls"{vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>>="__begin_"^{RS3DSurfaceOnline}"__end_"^{RS3DSurfaceOnline}"__end_cap_"{__compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>>="__value_"^{RS3DSurfaceOnline}}}}
{TracingMap="_vptr$TracingMap"^^?"_voxel_sz"f"_values"{unordered_map<unsigned long long, bool, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<std::pair<const unsigned long long, bool>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long long, bool>, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>, std::allocator<std::__hash_value_type<unsigned long long, bool>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long long, bool>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::hash<unsigned long long>, std::equal_to<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long long, std::__hash_value_type<unsigned long long, bool>, std::equal_to<unsigned long long>, std::hash<unsigned long long>, true>>="__value_"f}}}}
{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}
{Tensor<__fp16, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<__fp16>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^ }
@48@0:81632
q16@0:8
{tuple<NSArray<RS3DSurface *> *, NSArray<RS3DSurface *> *>={__tuple_impl<std::__tuple_indices<0, 1>, NSArray<RS3DSurface *> *, NSArray<RS3DSurface *> *>=@@}}56@0:8@16@24@32@40@48
{ONLINE_BAY_WINDOW_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}
{unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long>>="__table_"{__hash_table<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<unsigned long, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long, void *> *>, std::allocator<std::__hash_node<unsigned long, void *>>>="__value_"{__hash_node_base<std::__hash_node<unsigned long, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<unsigned long>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<unsigned long>>="__value_"f}}}
v80@0:8{?=[4]}16
{?=[3]}16@0:8
v64@0:8{?=[3]}16
{?="columns"[3]}
r^16@0:8
^{?=[4]}16@0:8
^16@0:8
v32@0:8r^16Q24
v32@0:8^16Q24
{vector<simd_float4x4, std::allocator<simd_float4x4>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<simd_float4x4 *, std::allocator<simd_float4x4>>="__value_"^{?}}}
@56@0:8@16@24@32@40r^v48
{Room_Standardization="standardizer_"{Standard_Room="initparam"{Standard_Param="pixel_sz_dynamic"f"init_minimum_walls"i"shortest_wall_length"f"duplicate_point_thresh"f"unique_point_angle"f"tiny_small_wall_length"f"parallel_dis_thresh"f"parallel_angle_thresh"f"lbfgs_drift_angle_thresh"f"lbfgs_dist_thresh"f"lbfgs_optimize_min_length"f"lbfgs_move_region"f"lbfgs_move_region_rate"f"lbfgs_tm_score_diff_thresh"f"min_first_wall_length"f"manhattan_angle_offset"f"keep_connect_angle_thresh"f"keep_connect_intersection_distance"f"need_rotate_small_wall_length"f"need_rotate_wall_angle"f"need_rotate_small_wall_angle"f"standard_manhattan_angle"f"merge_cross_lines_dis_thresh"f"merge_cross_lines_angle_thresh"f"merge_cross_lines_split_dist_th"f"merge_cross_gap_dist_th"f"merge_cross_gap_angle_th"f"add_tiny_corner_dist_th"f"add_tiny_corner_vertical_angle_th"f"add_tiny_corner_parallel_angle_th"f"add_tiny_opening_dist_th"f"add_tiny_opening_parallel_angle_th"f"add_tiny_opening_parallel_dist_th"f}"walls"{vector<wlw::lcnn_flp::standard_line2d, std::allocator<wlw::lcnn_flp::standard_line2d>>="__begin_"^{standard_line2d}"__end_"^{standard_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::standard_line2d *, std::allocator<wlw::lcnn_flp::standard_line2d>>="__value_"^{standard_line2d}}}"vertex"{vector<wlw::lcnn_flp::standard_point2d, std::allocator<wlw::lcnn_flp::standard_point2d>>="__begin_"^{standard_point2d}"__end_"^{standard_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::standard_point2d *, std::allocator<wlw::lcnn_flp::standard_point2d>>="__value_"^{standard_point2d}}}"vertex_1d"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"line_mask"{vector<std::vector<unsigned long>, std::allocator<std::vector<unsigned long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<unsigned long> *, std::allocator<std::vector<unsigned long>>>="__value_"^v}}"vertex_walls"{vector<std::vector<unsigned long>, std::allocator<std::vector<unsigned long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<unsigned long> *, std::allocator<std::vector<unsigned long>>>="__value_"^v}}"vertex_angles"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"vertex_angles_180"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"tiny_sw_vertex"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"tiny_sw_line_id"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"first_wall"{standard_line2d="pt"[4f]"pts0"{standard_point2d="x"f"y"f}"pts1"{standard_point2d="x"f"y"f}"theta"f"a"f"length"f"angle"f"align_n"i"score"f}"_geoMeta"@"RSGeometryMeta""_density_map"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_before_tm_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}}"angle_th"f"dis_th"f"project_map"{unordered_map<std::string, std::vector<wlw::lcnn_flp::ProjectParam>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::vector<wlw::lcnn_flp::ProjectParam>>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::vector<wlw::lcnn_flp::ProjectParam>>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"localStandardizer_"{RSLocalStandardization="_vptr$RSLocalStandardization"^^?"_online_std_config"{ONLINE_STANDARDIZATION_CONFIG="large_wall_len_thr"f"small_wall_len_thr"f"noise_wall_len_thr"f"angle_thr"f"noise_wall_angle_thr"f"angle_eps"f"anchor_wall_len_factor"f"corner_dist_thr"f}"_online_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}}
@"RSObjectAlign"
@"RSPointCloudColorEstimator"
v40@0:8@16@24@?32
@"NSObject<OS_dispatch_semaphore>"
@"RSOfflineFloorPlanGenerator"
@"RSGenerationConfiguration"
@"RSCaptureConfiguration"
@"RSOnlineFloorPlanGenerator"
@"RSScanCoaching"
@"RSDriftDetection"
@"NSObject<OS_dispatch_source>"
@"RSInternalInfoDumper"
@"OS_os_workgroup"
@"RSFloorPlanBoundaryRefinement"
@"<RSCaptureSessionDelegate>"
d16@0:8
v24@0:8d16
@"NSUUID"16@0:8
@28@0:8@16I24
v52@0:8^16^24^32^40I48
v32@0:8Q16r^Q24
v40@0:8Q16r^Q24@32
v32@0:8B16B20B24B28
I16@0:8
v20@0:8I16
{vector<unsigned char __attribute__((ext_vector_type(4))), std::allocator<unsigned char __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<unsigned char * __attribute__((ext_vector_type(4))), std::allocator<unsigned char __attribute__((ext_vector_type(4)))>>="__value_"^}}
{vector<unsigned short __attribute__((ext_vector_type(4))), std::allocator<unsigned short __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<unsigned short * __attribute__((ext_vector_type(4))), std::allocator<unsigned short __attribute__((ext_vector_type(4)))>>="__value_"^}}
@"RSSemanticImage"
{?="global_max_density"f"global_max_density_3d"f"voxel_size"f"z_slice"i"numSemanticChannels"Q"numAllChannels"Q}
@"<RSNodeOutputConsumer>"
@"<RSNodeInputProducer>"
v24@0:8f16f20
r^c16@0:8
r^f16@0:8
v48@0:8r^16r^c24r^f32Q40
C16@0:8
v20@0:8C16
{?=[4c]}16@0:8
v20@0:8{?=[4c]}16
{?=[4f]}16@0:8
v32@0:8{?=[4f]}16
c16@0:8
v20@0:8c16
{vector<RSEdgeStatesType, std::allocator<RSEdgeStatesType>>="__begin_"^c"__end_"^c"__end_cap_"{__compressed_pair<RSEdgeStatesType *, std::allocator<RSEdgeStatesType>>="__value_"^c}}
{?="states"[4c]}
@"RS3DSurface"
{?="confidence"[4f]}
{?="corners"[4]}
@40@0:8Q16Q24Q32
@52@0:8Q16Q24Q32Q40I48
@48@0:8Q16Q24Q32Q40
^v16@0:8
^v24@0:8Q16
v40@0:8Q16Q24Q32
(?="memoryBuffer"^f"pixelBuffer"^{__CVBuffer})
^{__CVBuffer=}16@0:8
^{__IOSurface=}16@0:8
@40@0:8r^v16C24f2832
{Lcnn_floorplan_detector="_vptr$Lcnn_floorplan_detector"^^?"_unet_fpn_backbone"{Unet_fpn_backbone_v1="_vptr$Unet_fpn_backbone_v1"^^?"_net"{IEspresso_Interface_v1="_vptr$IEspresso_Interface_v1"^^?"_output_tensor"{map<std::string, espresso_buffer_t *, std::less<std::string>, std::allocator<std::pair<const std::string, espresso_buffer_t *>>>="__tree_"{__tree<std::__value_type<std::string, espresso_buffer_t *>, std::__map_value_compare<std::string, std::__value_type<std::string, espresso_buffer_t *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, espresso_buffer_t *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, espresso_buffer_t *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, espresso_buffer_t *>, std::less<std::string>, true>>="__value_"Q}}}"_ctx"^v"_plan"^v"_net"{?="plan"^v"network_index"i}"_previous_mode"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"Q}"__s"{__short="__data_"[23c]""{?="__size_"C}}"__r"{__raw="__words"[3Q]})}}}"_single_resolution"B}"_lcnn_fc2"{Lcnn_FC2="_vptr$Lcnn_FC2"^^?"_fc2_0_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_1_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_2_weight"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_0_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_1_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc2_2_bias"{Tensor<float, 1UL>="_vptr$Tensor"^^?"_view"{Inside_View<1UL>="_shape_of_view"{Shape<1UL>="_sp"[6Q]}"_stride_of_view"{Shape<1UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_fc_dim"i"_fc_dim1"i}"_lambda"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_backbone_param"{BackBone_Param="single_resolution"B"fixed_input_shape"{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}"dynamic_input_shape"{map<std::vector<unsigned long>, std::string, std::less<std::vector<unsigned long>>, std::allocator<std::pair<const std::vector<unsigned long>, std::string>>>="__tree_"{__tree<std::__value_type<std::vector<unsigned long>, std::string>, std::__map_value_compare<std::vector<unsigned long>, std::__value_type<std::vector<unsigned long>, std::string>, std::less<std::vector<unsigned long>>, true>, std::allocator<std::__value_type<std::vector<unsigned long>, std::string>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<unsigned long>, std::string>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<unsigned long>, std::__value_type<std::vector<unsigned long>, std::string>, std::less<std::vector<unsigned long>>, true>>="__value_"Q}}}"max_K"Q"junc_score_thres"f"fpn_len_range_max"f"fpn_len_range_min"f"n_pts0"Q"n_pts1"Q"dim_fc"Q"dim_loi"Q"cls_score_thres"f"filter_line_proposal"B}}"_wall_postprocess"{Lcnn_Floorplan_Post="density_buffer"^f"lcnn_lines"{willow_lcnn_lines="lines"{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_lines"Q}"lcnn_juncs"{willow_lcnn_juncs="juncs"{vector<wlw::lcnn_flp::willow_point2d, std::allocator<wlw::lcnn_flp::willow_point2d>>="__begin_"^{willow_point2d}"__end_"^{willow_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_point2d *, std::allocator<wlw::lcnn_flp::willow_point2d>>="__value_"^{willow_point2d}}}"junc_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_juncs"Q}"_param"{PostProcess_Param="image_sz"Q"pixel_m"f"max_length"i"small_wall_length_thres"f"length_score_weight"f"tm_score_protect_size"Q"tm_score_weight"f"tm_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"line_nms_angle_thres"f"line_nms_dist_thres"f"line_nms_sw_angle_thres"f"line_nms_projection_iou_thres"f"line_nms_score_diff_thres"f"score_filtering_decision_boundary_map"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"cls_delta"f"tms_delta"f"score_filtering_decision_boundary_map_for_line_proposals"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"structure_filtering_acute_angle_min_thres"f"structure_filtering_acute_angle_max_thres"f"opening_score_density_thres"f"opening_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"hard_mode_opening_area_len_thres"f}}"_opening_postprocess"{Lcnn_Floorplan_Post="density_buffer"^f"lcnn_lines"{willow_lcnn_lines="lines"{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}"scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_lines"Q}"lcnn_juncs"{willow_lcnn_juncs="juncs"{vector<wlw::lcnn_flp::willow_point2d, std::allocator<wlw::lcnn_flp::willow_point2d>>="__begin_"^{willow_point2d}"__end_"^{willow_point2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_point2d *, std::allocator<wlw::lcnn_flp::willow_point2d>>="__value_"^{willow_point2d}}}"junc_scores"{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}"num_juncs"Q}"_param"{PostProcess_Param="image_sz"Q"pixel_m"f"max_length"i"small_wall_length_thres"f"length_score_weight"f"tm_score_protect_size"Q"tm_score_weight"f"tm_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"line_nms_angle_thres"f"line_nms_dist_thres"f"line_nms_sw_angle_thres"f"line_nms_projection_iou_thres"f"line_nms_score_diff_thres"f"score_filtering_decision_boundary_map"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"cls_delta"f"tms_delta"f"score_filtering_decision_boundary_map_for_line_proposals"{map<std::vector<float>, std::vector<std::vector<float>>, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, std::vector<std::vector<float>>>>>="__tree_"{__tree<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, std::vector<std::vector<float>>>, std::less<std::vector<float>>, true>>="__value_"Q}}}"structure_filtering_acute_angle_min_thres"f"structure_filtering_acute_angle_max_thres"f"opening_score_density_thres"f"opening_score_line_width_map"{map<std::vector<float>, unsigned long, std::less<std::vector<float>>, std::allocator<std::pair<const std::vector<float>, unsigned long>>>="__tree_"{__tree<std::__value_type<std::vector<float>, unsigned long>, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>, std::allocator<std::__value_type<std::vector<float>, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::vector<float>, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::vector<float>, std::__value_type<std::vector<float>, unsigned long>, std::less<std::vector<float>>, true>>="__value_"Q}}}"hard_mode_opening_area_len_thres"f}}"_wall_lmap"{Tensor<float, 2UL>="_vptr$Tensor"^^?"_view"{Inside_View<2UL>="_shape_of_view"{Shape<2UL>="_sp"[6Q]}"_stride_of_view"{Shape<2UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}"_lmap"{Tensor<float, 3UL>="_vptr$Tensor"^^?"_view"{Inside_View<3UL>="_shape_of_view"{Shape<3UL>="_sp"[6Q]}"_stride_of_view"{Shape<3UL>="_sp"[6Q]}"_length_of_view"Q"_offset_of_view"Q}"_storage"{shared_ptr<wt::Storage<float>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}"_is_contiguous"B"_is_empty"B"_buffer_head"^f}}
@36@0:8q16q24f32
@28@0:8q16f24
v24@0:8q16
v40@0:8@16@24i32B36
v48@0:8@16@24f32C36i40B44
v36@0:8@16@24i32
@"RSPointCloud"
@"RSTemporalMeta"
{unique_ptr<rs_erf::EdgeRefinement, std::default_delete<rs_erf::EdgeRefinement>>="__ptr_"{__compressed_pair<rs_erf::EdgeRefinement *, std::default_delete<rs_erf::EdgeRefinement>>="__value_"^{EdgeRefinement}}}
v24@0:816
@28@0:8@16B24
@56@0:8Q16r^24r^32r^40^48
v56@0:8Q16r^24r^32r^40^48
v28@0:8B16B20B24
24@0:8@16
{unordered_map<std::string, unsigned int __attribute__((ext_vector_type(2))), std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int __attribute__((ext_vector_type(2)))>>>="__table_"{__hash_table<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned int __attribute__((ext_vector_type(2)))>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
{unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long>>="__table_"{__hash_table<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<unsigned long long, void *> *>, std::allocator<std::__hash_node<unsigned long long, void *>>>="__value_"{__hash_node_base<std::__hash_node<unsigned long long, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<unsigned long long>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<unsigned long long>>="__value_"f}}}
{unordered_map<std::string, std::unordered_set<unsigned long long>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::unordered_set<unsigned long long>>>>="__table_"{__hash_table<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, std::unordered_set<unsigned long long>>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}32@0:8r^v16@24
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}40@0:8r^v16@24r^v32
@"RSFloorPlanRender"
v40@0:8@16@24@32
{?="global_max_density"f"global_max_density_3d"f"voxel_size"f"z_slice"i"numSemanticChannels"Q"numAllChannels"Q"numHeightChannels"Q}
v48@0:816
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
@40@0:8@16r^v24@32
@208@0:8{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}16
@40@0:8{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}16
@48@0:8{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}16@40
{Box3d={box3d=[8]}@f@{vector<float, std::allocator<float>>=^f^f{__compressed_pair<float *, std::allocator<float>>=^f}}@s}24@0:8@16
{vector<Box3d, std::allocator<Box3d>>=^{Box3d}^{Box3d}{__compressed_pair<Box3d *, std::allocator<Box3d>>=^{Box3d}}}24@0:8@16
@60@0:8@162440f56
v48@0:8@16@24@32@40
B128@0:8{?=[4]}16{?=[3]}80
f128@0:8{?=[4]}16{?=[3]}80
{?=[3]}64@0:8{?=[3]}16
@148@0:8@16{?=[4]}24@88{?=[3]}96B144
@96@0:8@16{?=[4]}24@88
{SpeedCoaching="_speed_range"f"_proj_speed_range"f"_threshold"f"_pose_queue"{deque<std::tuple<simd_float4x4, double>, std::allocator<std::tuple<simd_float4x4, double>>>="__map_"{__split_buffer<std::tuple<simd_float4x4, double> *, std::allocator<std::tuple<simd_float4x4, double> *>>="__first_"^^v"__begin_"^^v"__end_"^^v"__end_cap_"{__compressed_pair<std::tuple<simd_float4x4, double> **, std::allocator<std::tuple<simd_float4x4, double> *>>="__value_"^^v}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<std::tuple<simd_float4x4, double>>>="__value_"Q}}"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>="__map_"{__split_buffer<float * __attribute__((ext_vector_type(2))), std::allocator<float * __attribute__((ext_vector_type(2)))>>="__first_"^^"__begin_"^^"__end_"^^"__end_cap_"{__compressed_pair<float ** __attribute__((ext_vector_type(2))), std::allocator<float * __attribute__((ext_vector_type(2)))>>="__value_"^^}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float __attribute__((ext_vector_type(2)))>>="__value_"Q}}"_latest_v""_latest_w""_last_vio_lost_time"@"NSDate""_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{LightCoaching="_kpt_range"f"_threshold"f"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_latest_mean_color"f"_latest_n_kpt"f"_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{DistanceCoaching="_threshold"f"_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_smooth_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_latest_meand"f"_model"{CoachingModel="_w1"{DMat="rows"i"cols"i"data"^d}"_b1"{DMat="rows"i"cols"i"data"^d}"_w2"{DMat="rows"i"cols"i"data"^d}"_b2"{DMat="rows"i"cols"i"data"^d}}}
{OnboardCoaching="_v_thr1"f"_v_thr2"f"_w_thr1"f"_w_thr2"f"_brightness_thr1"f"_brightness_thr2"f"_distance_thr1"f"_distance_thr2"f"_n_kpt_thr1"f"_n_kpt_thr2"f"_texture_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_speed_score_queue"{deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}}"_firstCallTime"@"NSDate""_latest_signal"@"RSTextCoachingSignal""_w_v"f"_b_v"f"_w_w"f"_b_w"f"_w_brightness"f"_b_brightness"f"_w_distance"f"_b_distance"f"_w_n_kpt"f"_b_n_kpt"f}
{vector<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>, std::allocator<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad> *, std::allocator<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>>>="__value_"^v}}
@"RSTextCoachingSignal"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
@48@0:8@16@24@32@40
{RSOnlineOfflineAssociationCore="_vptr$RSOnlineOfflineAssociationCore"^^?"_offline_config"{ONLINE_CONFIG="major_fov_angle_thres"f"major_fov_angle_thres_buffer"f"dist_thres"f"iou_thres"f"angle_thres"f"angle_thres_for_small_walls"f"small_wall_length_thres"f"corner_dist_thres"f"overlap_angle_thres"f"overlap_dist_thres"f"overlap_iou_thres"f"acute_angle_thres"f"shorten_len_thr"f"one_vs_two_shorten_len_thr"f"shorten_non_match_thr"i"iou_thres_opening"f"standalone_opening_thr"i"hold_score_thres"f"hold_small_wall_length_thres"f"opening_checking_range"f"opening_checking_thres"f"opening_checking_occlusion_range"f"min_length_thres"f"parallel_angle_epsilon"f"dup_dist_thr"f"dup_angle_thr"f"dup_iou_thr"f"curved_wall_early_stop_score_thr"f"low_conf_wall_score_thr"f"low_conf_wall_non_match_thr"i}}
{MarkerProposal="_vptr$MarkerProposal"^^?"_extend_length"f"_angle_thres_for_major_wall"f"_parallel_angle_thres"f"_corner_dist_thres"f"_alg_structure_complete"{Structure_complete="small_gaps"{vector<marker_proposal::Structure_completeOutput, std::allocator<marker_proposal::Structure_completeOutput>>="__begin_"^{Structure_completeOutput}"__end_"^{Structure_completeOutput}"__end_cap_"{__compressed_pair<marker_proposal::Structure_completeOutput *, std::allocator<marker_proposal::Structure_completeOutput>>="__value_"^{Structure_completeOutput}}}"small_gaps_result"{vector<marker_proposal::Structure_completeOutput, std::allocator<marker_proposal::Structure_completeOutput>>="__begin_"^{Structure_completeOutput}"__end_"^{Structure_completeOutput}"__end_cap_"{__compressed_pair<marker_proposal::Structure_completeOutput *, std::allocator<marker_proposal::Structure_completeOutput>>="__value_"^{Structure_completeOutput}}}"_connection_angle_thresh"f"_gap_length_thresh"f"_gap_size_thresh"f"_iou_thresh"f"_line_occupancy_thresh"f"_angle_thres_with_view_line"f"_neighbor_line_threshold"f"_frame_in_consider"i"_line_id1"i"_line_id2"i}"_pool"{vector<marker_proposal::ProposalWrapper, std::allocator<marker_proposal::ProposalWrapper>>="__begin_"^{ProposalWrapper}"__end_"^{ProposalWrapper}"__end_cap_"{__compressed_pair<marker_proposal::ProposalWrapper *, std::allocator<marker_proposal::ProposalWrapper>>="__value_"^{ProposalWrapper}}}"_all_major_convex_hulls"{vector<std::vector<float __attribute__((ext_vector_type(3)))>, std::allocator<std::vector<float __attribute__((ext_vector_type(3)))>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<float __attribute__((ext_vector_type(3)))> *, std::allocator<std::vector<float __attribute__((ext_vector_type(3)))>>>="__value_"^v}}}
{vector<wlw::lcnn_flp::willow_line2d, std::allocator<wlw::lcnn_flp::willow_line2d>>="__begin_"^{willow_line2d}"__end_"^{willow_line2d}"__end_cap_"{__compressed_pair<wlw::lcnn_flp::willow_line2d *, std::allocator<wlw::lcnn_flp::willow_line2d>>="__value_"^{willow_line2d}}}
{?="margin"i"img_sz"i"use_dynamic_img_sz"B"img_sz0"i"img_sz_step"i"use_pw_center"B"pw_center_update_rate"i"use_global_center"B"use_dynamic_pixel_sz"B"pixel_sz"f"hist_norm"B"z_slice"i"z_slice_pixel"f}
@100@0:8@16r^v243264i96
@48@0:8@16r^v24@32@40
{vector<RSOnlineCurvedWall, std::allocator<RSOnlineCurvedWall>>="__begin_"^{RSOnlineCurvedWall}"__end_"^{RSOnlineCurvedWall}"__end_cap_"{__compressed_pair<RSOnlineCurvedWall *, std::allocator<RSOnlineCurvedWall>>="__value_"^{RSOnlineCurvedWall}}}
@32@0:8r^16Q24
@"<RSCamera>"16@0:8
@"<RSRawPointCloud>"16@0:8
v24@0:8^{__CVBuffer=}16
@"<RSCamera>"
@"<RSRawPointCloud>"
{OpeningHeightAlignment="_vptr$OpeningHeightAlignment"^^?"_opening_fixed"{unordered_map<std::string, rs_oalign::OpeningFixedNode, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, rs_oalign::OpeningFixedNode>>>="__table_"{__hash_table<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::hash<std::string>, std::equal_to<std::string>, true>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::equal_to<std::string>, std::hash<std::string>, true>, std::allocator<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::hash<std::string>, std::equal_to<std::string>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, rs_oalign::OpeningFixedNode>, std::equal_to<std::string>, std::hash<std::string>, true>>="__value_"f}}}"_check_in_view"B"_floor_v"f"Min_Opening_height"f"Invaid_height_min"f"Max_try_times"i"Second_try_times"i"Max_opeing_height"f"opening_wall_gap"d"_hole_vector"{vector<rs_oalign::HoleOpening, std::allocator<rs_oalign::HoleOpening>>="__begin_"^{HoleOpening}"__end_"^{HoleOpening}"__end_cap_"{__compressed_pair<rs_oalign::HoleOpening *, std::allocator<rs_oalign::HoleOpening>>="__value_"^{HoleOpening}}}}
h00L
ARGB
L>fff?
