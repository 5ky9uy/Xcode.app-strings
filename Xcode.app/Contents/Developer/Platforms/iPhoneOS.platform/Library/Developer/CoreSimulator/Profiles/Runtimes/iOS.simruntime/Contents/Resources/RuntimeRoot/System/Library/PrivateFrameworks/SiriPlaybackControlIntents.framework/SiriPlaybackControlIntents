@(#)PROGRAM:SiriPlaybackControlIntents  PROJECT:SiriPlaybackControls-1
?__C
Port
NAVAudioSessionPort
FLOWSchemaFLOWMediaPlayerTaskType
SiriPlaybackControlIntents
SkipTimeFlowStrategy
ResumeMediaDeviceDisambiguationStrategy
DeviceContextProvider
DefaultConfirmIntentStrategy
NLIntentType NLContextProvider
DeviceDisambiguationStrategy
NLIntentType NLContextProvider
DeviceSelectingUtil
DeviceSelectingError
QuickStopDialogProvider
NothingToStopParameters
CodingKeys
PauseMediaHandleIntentStrategy
QuickStopLocalStoppedFlow
DeviceNLContextProviding
Speaker
CodingKeys
PauseMediaDeviceDisambiguationStrategy
SettingsFlowProvider
UserDefaultsProvider
UserDefaultsProviderImpl
Bfff?
SetVolumeLevelIntentHandler
BoundedResult
ServerFallbackFlow
MediaPlayerVerb
MediaPlayerBoolSettingVerb
MediaPlayerBoolSettingState
MediaPlayerAttributes
MediaPlayerConfirmationStateValue
MediaType
MediaPlayerIntent
AnalyticsService
AnalyticsServiceImpl
ContextIntent
VolumeLevelNeedsValueStrategy
SkipContentIntentHandler
LanguageDisambiguationStrategy
SetRepeatStateIntentHandler
ResumeMediaFlowStrategy
SetVolumeLevelHandleIntentStrategy
VolumeLevelNeedsConfirmationStrategy
MatchedLanguageResult
SkipTimeDeviceDisambiguationStrategy
ConfirmableIntent
FiringItem
QuickStopContext
Verb
FloatSettingName
NumericSettingState
NumericSettingQualifier
SettingAttribute
ConfirmationStateValue
SettingsIntentProperties
NumericSettingUnit
SettingsIntent
ContextItem
SetSubtitleStateUnsupportedValueStrategy
InProcessHandlingStrategy
IntentHandler
SetVolumeLevelUnsupportedValueStrategy
SimulatedContextProvider
SkipTimeIntentHandler
MoveSpeakerFlowStrategy
MediaPlayerFlowProvider
AddSpeakerIntentHandler
ControlsFlowProvider
DirectInvocationIdentifier
shouldHandleAmbiguousPlayResult
HomeAutomationCapableIntent
HomeAutomationNodes
UsoSettingsName
AddSpeakerHandleIntentStrategy
MoveSpeakerUnsupportedValueStrategy
MediaDeviceNLContextProvider
GetVolumeLevelFlowStrategy
SkipContentDeviceDisambiguationStrategy
ResumeMediaHandleIntentStrategy
ResumeMediaConfirmIntentStrategy
MRMediaType
DialogProviding
BaseDialogProvider
WholeHouseAudioDestination
ResumeMediaIntentHandler
SetRepeatStateConfirmIntentStrategy
SetAudioLanguageIntentHandler
SetAudioLanguageHandleIntentStrategy
LanguageNLContextProvider
WhatDidTheySayHandleIntentStrategy
MachineUtteranceProvidingIntent
GetVolumeLevelIntentHandler
AnalyticsServiceLogging
PauseMediaFlowStrategy
SetShuffleStateIntentHandler
NeedsDisambiguationWrapperFlow
SetAudioLanguageConfirmIntentStrategy
GetVolumeLevelUnsupportedValueStrategy
MediaFlowProvider
GroupingUtil
SetRepeatStateDeviceDisambiguationStrategy
SkipTimeHandleIntentStrategy
SetShuffleStateFlowStrategy
SettingNLIntent
WhatDidTheySayIntentHandler
FeatureFlagProviding
Features
FeatureFlagProvider
SeekTimeFlowStrategy
SeekTimeHandleIntentStrategy
AceServiceHelper
VolumeControlsDialogProvider
SetVolumeLevelErrorParameters
SetVolumeParameters
GetVolumeLevelParams
CodingKeys
AudioSessionProviding
AudioSessionProvider
LanguageControlsDialogProvider
SubtitleSetSuccessfullyParameters
SubtitleFailedToToggleParameters
DeviceDisambiguationAudioLanguageParameters
ConfirmWhatDidTheySayParameters
AudioLanguageNotAvailableParameters
IntentConfirmationSetSubtitleStateParams
DeviceDisambiguationSubtitlesParameters
DeviceDisambiguationWhatDidTheySayParameters
IntentConfirmationSetAudioLanguageParams
WhatDidTheySayHandledParameters
AudioSetSuccessfullyParameters
NoRelevantDeviceParameters
SubtitleAlreadyOnParameters
SubtitleLanguageNotAvailableParameters
CodingKeys
SkipTimeConfirmIntentStrategy
SetVolumeLevelFlowStrategy
GetVolumeLevelHandleIntentStrategy
WhatDidTheySayFlowStrategy
SkipContentFlowStrategy
RCHNamespace
AddSpeakerFlowStrategy
LanguageSelectableIntent
WhatDidTheySayDeviceDisambiguationStrategy
SeekTimeUnsupportedValueStrategy
SetSubtitleStateHandleIntentStrategy
DeviceDisambiguatableIntent
DeviceSelectableIntent
SingleDeviceSelectableIntent
MoveSpeakerHandleIntentStrategy
SetSubtitleStateFlowStrategy
PauseMediaConfirmIntentStrategy
AppBundleIdentifiers
MusicBundleIds
PodcastsBundleIds
AudioBooksBundleIds
AddSpeakerUnsupportedValueStrategy
PauseMediaUnsupportedValueStrategy
SetSubtitleStateDeviceDisambiguationStrategy
SetSubtitleStateIntentHandler
SetShuffleStateHandleIntentStrategy
.music
.podcast
.playlis
.musicVi
.song
.audioBo
.video
.iTunesU
.compila
.album
.radioSh
.show
.tvShow
.radioSt
.podcast
.musicPl
.station
.episode
.single
.genre
.news
.rington
.sounds
.movie
.unknown
podcast
playlist
musicVid
song
audioBoo
video
iTunesU
compilat
album
radioSho
show
tvShow
radioSta
podcastS
musicPla
station
episode
single
genre
news
ringtone
sounds
movie
SetSubtitleStateConfirmIntentStrategy
ControlsDialogParameters
SmartControlsDialogParameters
WholeHouseAudioDialogParameters
QuickStopUtilities
QuickStopUtil
Name
Signpost
ControlsError
SetAudioLanguageUnsupportedValueStrategy
DefaultNeedsConfirmationStrategy
NLIntentType
SetShuffleStateDeviceDisambiguationStrategy
SetRepeatStateHandleIntentStrategy
MediaTypeProvidingIntent
WhatDidTheySayUnsupportedValueStrategy
QuickStopNothingToStopFlow
ControlsFlowProviding
MediaPlayerDeviceNLContextProvider
SourceDestinationResolvingIntent
SetAudioLanguageFlowStrategy
DeviceQueryableIntent
SetRepeatStateFlowStrategy
SeekTimeDeviceDisambiguationStrategy
ConfirmationCapableNLIntent
MoveSpeakerIntentHandler
MediaPlayerNLv3Intent
MobileGestalt
DeviceType
SeekTimeConfirmIntentStrategy
WhatDidTheySayConfirmIntentStrategy
DialogProvider
DeviceDisambiguationPauseParams
IntentConfirmationPauseParams
DeviceDisambiguationResumeParams
IntentConfirmationResumeParams
DeviceDisambiguationSeekTimeParams
IntentConfirmationSeekParams
SpeakerFailedOperationParameters
RepeatErrorParameter
DeviceDisambiguationRepeatParams
IntentConfirmationRepeatParams
DeviceDisambiguationSkipTimeParams
IntentConfirmationSkipTimeParams
DeviceDisambiguationSkipContentParams
IntentConfirmationSkipContentParams
DeviceDisambiguationShuffleStateParams
IntentConfirmationShuffleParams
CannotSkipLimitExceededParameters
ShuffleErrorParameters
CannotSkipAdvertisementParameters
AddSpeakerParameters
UnsupportedDestinationSpeakerParameters
SkipErrorParameters
SkipToPreviousParameters
SkipToNextParameters
ToggleRepeatParameters
ToggleShuffleParameters
SpeakerMoveParameters
SeekErrorParameters
SeekParameters
SkipBackwardParameters
SkipForwardParameters
ResumeParameters
NoSpeakerFoundParameters
PausedParameters
CodingKeys
SpeakerOperation
DialogDeviceType
RepeatMode
Duration
HomeAutomationEntityProvidingIntent
SetShuffleStateConfirmIntentStrategy
SkipContentConfirmIntentStrategy
AnalyticsServiceLogger
ContextProviding
ContextUtil
DeviceGroup
SetAudioLanguageDeviceDisambiguationStrategy
SkipContentHandleIntentStrategy
PauseMediaIntentHandler
ControlsFlowFactory
ControlsFlowFactoryImpl
QuestionAttributes
Verb
ViewOption
ConfirmationStateValue
MediaNLIntent
NLContextProviding
ItemType
MetricsLoggableIntent
SettingNLContextProvider
N@SeekTimeIntentHandler
PauseMediaIntent
PauseMediaIntentResponseCode
PauseMediaIntentResponse
PauseMediaDevicesUnsupportedReason
PauseMediaDevicesResolutionResult
ResumeMediaIntent
ResumeMediaIntentResponseCode
ResumeMediaIntentResponse
SkipTimeIntent
SkipTimeIntentResponseCode
SkipTimeIntentResponse
SkipContentIntent
SkipContentIntentResponseCode
SkipContentIntentResponse
SetSubtitleStateIntent
SetSubtitleStateIntentResponseCode
SetSubtitleStateIntentResponse
SetSubtitleStateDeviceUnsupportedReason
SetSubtitleStateDeviceResolutionResult
SetSubtitleStateLanguageUnsupportedReason
SetSubtitleStateLanguageResolutionResult
SetAudioLanguageIntent
SetAudioLanguageIntentResponseCode
SetAudioLanguageIntentResponse
SetAudioLanguageDeviceUnsupportedReason
SetAudioLanguageDeviceResolutionResult
SetAudioLanguageLanguageUnsupportedReason
SetAudioLanguageLanguageResolutionResult
WhatDidTheySayIntent
WhatDidTheySayIntentResponseCode
WhatDidTheySayIntentResponse
WhatDidTheySayDeviceUnsupportedReason
WhatDidTheySayDeviceResolutionResult
SeekTimeIntent
SeekTimeIntentResponseCode
SeekTimeIntentResponse
SeekTimePlayheadPositionUnsupportedReason
SeekTimePlayheadPositionResolutionResult
SetShuffleStateIntent
SetShuffleStateIntentResponseCode
SetShuffleStateIntentResponse
SetRepeatStateIntent
SetRepeatStateIntentResponseCode
SetRepeatStateIntentResponse
GetVolumeLevelIntent
GetVolumeLevelIntentResponseCode
GetVolumeLevelIntentResponse
GetVolumeLevelDeviceUnsupportedReason
GetVolumeLevelDeviceResolutionResult
SetVolumeLevelIntent
SetVolumeLevelIntentResponseCode
SetVolumeLevelIntentResponse
SetVolumeLevelDevicesUnsupportedReason
SetVolumeLevelDevicesResolutionResult
SetVolumeLevelVolumeLevelUnsupportedReason
SetVolumeLevelVolumeLevelResolutionResult
AddSpeakerIntent
AddSpeakerIntentResponseCode
AddSpeakerIntentResponse
AddSpeakerSourceUnsupportedReason
AddSpeakerSourceResolutionResult
AddSpeakerDestinationsUnsupportedReason
AddSpeakerDestinationsResolutionResult
MoveSpeakerIntent
MoveSpeakerIntentResponseCode
MoveSpeakerIntentResponse
MoveSpeakerSourceUnsupportedReason
MoveSpeakerSourceResolutionResult
MoveSpeakerDestinationsUnsupportedReason
MoveSpeakerDestinationsResolutionResult
Direction
DirectionResolutionResult
RepeatState
RepeatStateResolutionResult
ShuffleState
ShuffleStateResolutionResult
SubtitleState
SubtitleStateResolutionResult
DeviceProximity
DeviceProximityResolutionResult
NowPlayingState
NowPlayingStateResolutionResult
SubtitleType
SubtitleTypeResolutionResult
NowPlayingMediaType
NowPlayingMediaTypeResolutionResult
NLMediaType
NLMediaTypeResolutionResult
VolumeSettingState
VolumeSettingStateResolutionResult
VolumeSettingUnit
VolumeSettingUnitResolutionResult
VolumeSettingAttribute
VolumeSettingAttributeResolutionResult
VolumeSettingQualifier
VolumeSettingQualifierResolutionResult
VolumeSettingType
VolumeSettingTypeResolutionResult
GroupType
GroupTypeResolutionResult
Device
DeviceResolutionResult
SignedDuration
SignedDurationResolutionResult
DeviceContext
DeviceContextResolutionResult
LanguageOption
LanguageOptionResolutionResult
DeviceQuery
DeviceQueryResolutionResult
VolumeLevel
VolumeLevelResolutionResult
DeviceGroup
DeviceGroupResolutionResult
MediaStream
MediaStreamResolutionResult
cancel
MRMediaRemoteMediaTypeMusic
MRMediaRemoteMediaTypePodcast
MRMediaRemoteMediaTypeAudioBook
MRMediaRemoteMediaTypeITunesU
kMRMediaRemoteMediaTypeITunesRadio
kMRMediaRemoteNowPlayingInfoTypeAudio
kMRMediaRemoteNowPlayingInfoTypeVideo
mute
unmute
volume
voice
play
pause
resume
stop
skip
previous
seek
skipForward
skipBackward
repeat
shuffle
moveSpeaker
addSpeaker
removeSpeaker
noVerb
music
podcast
playlist
musicVideo
song
audioBook
video
iTunesU
compilation
album
tvShow
show
radioShow
podcastStation
musicPlaylist
station
episode
single
genre
news
ringtone
sounds
movie
toggle
enable
disable
again
ending
less
maximum
mean
minimum
more
read
percent
a_little
a_lot
referentialTo
increaseByMeasurement
decreaseByMeasurement
com.apple.siri.nl.Media
com.apple.siri.nl.HomeAutomationRoom
com.apple.siri.nl.HomeAutomationPlaceHint
com.apple.siri.nl.HomeAutomationDeviceQuantifier
com.apple.siri.nl.MediaConfirmation
com.apple.siri.nl.MediaConfirmation.Value.CANCEL
com.apple.siri.nl.MediaConfirmation.Value.YES
com.apple.siri.nl.MediaConfirmation.Value.NO
com.apple.siri.nl.MediaReference
com.apple.siri.nl.MediaLanguage
com.apple.siri.nl.MediaViewOption
com.apple.siri.nl.MediaPlayerReference
com.apple.siri.nl.MediaPlayerConfirmation
com.apple.siri.nl.MediaPlayerConfirmation.Value.CANCEL
com.apple.siri.nl.MediaPlayerConfirmation.Value.YES
com.apple.siri.nl.MediaPlayerConfirmation.Value.NO
none
phone
watch
television
homepod
unknown
get attribute value
audio
subtitles
previous audio
com.apple.siri.nl.FloatSettingValue
com.apple.siri.nl.FloatSettingState
com.apple.siri.nl.FloatSettingQualifier
com.apple.siri.nl.SettingAttribute
com.apple.siri.nl.SettingConfirmation
com.apple.siri.nl.FloatSettingReference
com.apple.siri.nl.SettingConfirmation.Value.CANCEL
com.apple.siri.nl.SettingConfirmation.Value.YES
com.apple.siri.nl.SettingConfirmation.Value.NO
OS_dispatch_source_timer
SIRINLUSystemDialogAct
v24@0:8@16
renderedText
T@"NSString",N,C
@"NSString"16@0:8
v24@0:8@"NSString"16
SIRINLUUserDialogAct
SAClientBoundCommand
B16@0:8
appId
callbacks
T@"NSArray",N,C
@"NSArray"16@0:8
v24@0:8@"NSArray"16
SAServerBoundCommand
SASTTemplateItem
OS_dispatch_source
NSSecureCoding
supportsSecureCoding
TB,N,R
SAAceCommand
aceId
refId
SAAceReferable
SAAceSerializable
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
AceObject
@24@0:8@"NSDictionary"16
@32@0:8@"NSDictionary"16@"<AceContext>"24
@"NSMutableDictionary"16@0:8
NSCopying
@24@0:8^{_NSZone=}16
NSMutableCopying
_TtC26SiriPlaybackControlIntents20SkipTimeFlowStrategy
analyticsService
Received unexpected parse: %s
SkipTimeFlowStrategy.makeIntentFromParse() called
Finished creating intent from parse
Received non NLv3IntentOnly parse
SkipTimeFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents39ResumeMediaDeviceDisambiguationStrategy
DeviceDisambiguationStrategy.makePromptForDisambiguation() called
ResumeMediaDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
DeviceDisambiguationStrategy.makeContextUpdate() called
destinationDeviceId
com.apple.siri.nl.DestinationDeviceId
homeAutomationRoom
homeAutomationPlaceHint
homeAutomationDeviceQuantifier
encodeRouteIds
Encoding routeIds
enableTelemetry=YES
Including SystemGaveOptions in context update: %s
NLv4 disambiguate among: %s
Unable to serialize protoGraph: %s
Unable to map graph into protoGraph: %s
SiriPlaybackControlIntents/NLContextProviding.swift
Descriptive hint was not built with an id value or display value
Adding machine utterance: %s as nlInput to the context update
Submit SiriKitEvent for intent: %s with domainContext: %s
FLOWSchemaFLOWDomainContext error creating domainContext. Returning nil
DeviceSelectableIntent metricsEligibleDeviceCount: %s
DeviceQueryableIntent metricsIsWHAIntent: %{bool}d
No deviceQueries found in the intent. This is not a WHA intent
MediaTypeProvidingIntent metricsMediaType: %s
No device matched specified destinationId: %s
Found matching device from previous request, injecting it in the intent: %@
DeviceDisambiguationStrategy.parseDisambiguationResult() called
Ignoring action due to missing destinationDeviceId in NL intent
Intent indicates we should cancel out of disambiguation
DeviceDisambiguationStrategy.actionForInput() called
PlaybackControls#ConfirmationCancelled
DeviceDisambiguationStrategy.makeFlowCancelledResponse()
Default metricsMediaType: .unknown
Intent is not a machineUtteranceProvidingIntent. Returning the contextUpdate as is without providing an NL input
SingleDeviceSelectableIntent metricsEligibleDeviceCount: %s
Default metricsIsWHAIntent: nil
mapDevicesToAFServiceDeviceContext
Got nil context array
fetchQuickStopContext
Returning %ld QuickStop context(s): %@
Got QuickStop context for %ld devices
Mapping device context %ld: %@
fetchContext
Returning %ld context(s): %@
Got mediaContext for %ld devices
Device %s is in interrupted state, treating as paused.
DeviceDisambiguationStrategy.makeDisambiguationItemContainer() called
Unexpected disambiguation item type
Could not convert disambiguation item to INObject
MediaStream { groupLeader: 
SiriPlaybackControlIntents
Merging streams %s failed. Could not find any group leaders
_TtC26SiriPlaybackControlIntents19DeviceSelectingUtil
contextUtil
groupingUtil
localizationProvider
Primary device context is nil. Primary IS a valid fallback
A deviceType: %s is specified. Cannot assume that the primary matches that device type. Primary is NOT a valid fallback
primary hasMatchingNowPlayingMediaTypeQueued: %{bool}d. isPrimaryValidFallback: %{bool}d
No mediaType nor device types specified. Primary IS a valid fallback
ControlType is .resumable but the primary device is already playing something. Primary is NOT a valid fallback
ControlType is .pausable but the primary device is not playing anything. Primary is NOT a valid fallback
ControlType is .videoControls and we are on HomePod so primary should not be valid fallback.
ControlType is volumeControls, so primary should always be a valid fallback.
Deciding wether the primary is an acceptable candidate for controls using controlType: %{public}s, deviceType: %{public}s, mediaTypeFilter: %{public}s and primaryContext: %s
Contexts found, but primary context is not included... shouldControlPrimary: false.
Primary does not satisfy user query and thus is not a valid fallback. shouldControlPrimary: false
Unknown controlType: %s, returning false
.any request and primary is playing something == %{bool}d, nothing else is playing and primary is the only resumable == %{bool}d. shouldControlPrimary: %{bool}d
.resumable request and primary is the only resumable context == %{bool}d. shouldControlPrimary: %{bool}d
.pausable request and primary is playing something == %{bool}d. shouldControlPrimary: %{bool}d
Pausable Contexts: %s, Resumable Contexts :%s
Primary now playing state is unknown. shouldControlPrimary: false
Primary context is the only context we have and user asked for controls other than .pausable. shouldControlPrimary: true
Primary is the only context and user asked for .videoControls on HomePod. shouldControlPrimary: false.
User asked for volume controls, always return local device. shouldControlPrimary: true
User asked for video controls on appleTV. shouldControlPrimary: true
This is a CarPlay request. shouldControlPrimary: true
No contexts found and user asked for controls. shouldControlPrimary: true
Determining if we should short circuit and control the primary device immediately
Resolving destination groups for moveSpeaker request
User asked to "control *this*" and local device is an ambiguousEntity. Removing from possible destinations.
Cannot filter out excluded groups since superset group cannot be determined
Setting excludeGroup to true for: %@
containsExcludeGroups set and found a superset group. Returning all ambiguous entities with excludeGroup flag applied to smaller entities: %s
isSuperset: %{bool}d
Entity/Group with the most amount of devices found is: %s. Determining if it is a superset of all other groups
No groups passed in so there is no superset group
Resolving destination groups for add
Found other entities in the intent. Choosing those as the destination: %s
No entities are found in the intent after filtering out the source group. Local device is the destination
No possible destinations found and local fallback is disabled. Cannot determine the destination
Local device is the source, no other devices are found in the intent. Cannot determine the destination
Local device is the source. This is a "add this to the rest of the room/zone" request. Choosing ambiguous entities as the destination
Local device is the source. Checking if this is a "add this to the rest of the room/zone" request
Group: %s is a superset of all other groups. Choosing it as the destination
Found 2 or more distinct groups playing.
All entities in the intent are paused. Local device is also paused. Attempting to get a source from the context
All entities in the intent are paused. Local device is playing something. Choosing it as the source
All entities in the intent are paused. Determining if local is possible source
All entities in the intent are paused. Context lookup is disabled, cannot determine the source.
Some entities in the intent are playing in a stream and others are paused. Choosing the playing group as the source
All entities in the intent are playing in the same group and the local device is not playing anything. Group is source and primary should be the destination
All entities in the intent are playing in one stream and the local device is playing something different. Returning both as possible sources
All entities in the intent are playing in the same stream and the local device is part of that group. Cannot determine the source
All entities in the intent are playing in the same stream and the local device is part of that group. However this is a move request so returning the local device
All entities in the intent are playing in the same group (1 group found).
resolveAddSourceFromAmbiguousEntities called with empty ambiguousEntities. Cannot determine the source
Resolving add source from ambiguous entities
Found pausable devices from context: %s. Creating device groups
No pausable contexts were found. Cannot determine the source
Local device is playing. Choosing local device as the source
Resolving add source from context
Predicates already contain condition with routeId: %s, a duplicate will not be added.
Multiple sources found, but one of them contains the local device. Choosing that one as the source
Found explicit source streams in the intent: %@
Disambiguated Intent with destinationDeviceId: %s
Error while resolving devices: %s
No devices found, returning .notRequired
select() resolutionResult is success with device(s): %s
select() resolutionResult is disambiguating with devices: %s
Resolving source groups for add speaker request with explicit sources: %s and ambiguousEntities: %s
resolveDevice
Created predicate: %s
Using predicates: %s
Forcing disambiguation based on predicate device type
Resolving devices: %@
No devices provided in intent, resolving with local device
Resolved devices: %@
smartDeviceSelection
Short circuiting and controlling the local device
No predicates could be generated from context, primary is a logical candidate! Selecting the local device
Non-empty device context expected for smart device selection, returning local device
Select devices with deviceType=%{public}s, controlType=%{public}s
User asked for .resumable or .any devices to control but we couldn't find any. Returning the local device
resolvedDevice count: %ld
More than 1 device. Adding everywhere for pause control
Primary device is a logical candidate. Adding back the local device to the list of devices elligible for controlling
%ld devices matching media type %{public}s: %s
Filtering devices %s using mediaTypeFilter %{public}s
Using HomeAutomationEntities: %s
No home automation entities in intent, returning failure.
Device context is empty, skipping grouping and returning resolved devices: %@
No matching devices found in HomeKit.
Matched devices: %@
quickStop#NothingToStop
_TtC26SiriPlaybackControlIntents30PauseMediaHandleIntentStrategy
userDefaultsProvider
No device found in intent
PauseMediaHandleIntentStrategy.makeIntentHandledResponse()
All devices are within the same room
User asked to control *everywhere*
Cannot update dialog parameters using an empty device list
Updating parameters for WHA request
Destination #2: Destination is a room or zone. Setting speaker.secondRoom to the groupName
Destination #2: Destination is an accesory. Setting speaker.secondSpeakerName to the groupName
Destination #1: Destination is a room or zone. Setting speaker.firstRoom to the groupName
Destination #1: Destination is an accesory. Setting speaker.firstSpeakerName to the groupName
Final speaker names: %s, Final room names: %s
All entities mentioned in the user's intent: %s
suppressSnippets
Updating parameters for local controls
Updating parameters for smart controls
Smart selected more than 1 device?! count = %ld
SiriPlaybackControlIntents/ControlsDialogParameters.swift
Proximity not supported!
Everywhere: Smart pause of all devices or groups
Unsupported deviceType for native playback controls!
Unrecognized intentresponse code %{public}ld
PlaybackControls#NothingIsPlaying
PlaybackControls#PauseFailed
PauseMediaHandleIntentStrategy.makeFailureHandlingIntentResponse()
_TtC26SiriPlaybackControlIntents25QuickStopLocalStoppedFlow
aceServiceInvoker
quickStop#LocalStopped
QuickStopLocalStoppedFlow#execute Skipping dialog on HomePod, returning complete
QuickStopLocalStoppedFlow#execute DialogEngine returned an error
QuickStopLocalStoppedFlow#execute dialog generated successfully
hasThreeOrMoreRooms
firstSpeakerName
secondSpeakerName
_TtC26SiriPlaybackControlIntents38PauseMediaDeviceDisambiguationStrategy
PauseMediaDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
SettingsFlowProvider.makeFlow Received unexpected parse: %s
Making flow from parse
Not a media volume request
Could not find any verbs in the setting intent for the volume request. Returning getVolume flow
previousVolumeLevel_
UserDefaultsProvider#clearPreviousVolumeLevel for key: %s
UserDefaultsProvider#getPreviousVolumeLevel for key: %s volume: %s
UserDefaultsProvider#setPreviousVolumeLevel for key: %s
com.apple.siri.playbackcontrols
No devices resolved. Returning failure
resolvedVolumeOutput or currentVolume is undefined or could not be cast to float. Returning failure
Unknown volume setting type: %s, returning failure.
Failed to set volume: Could not get routeId for device: %@
Volume is already at 0%%. Skip setting volume.
Volume is already at 100%%. Skip setting volume.
Volume settingType: %s, increase: %{bool}d, decrease: %{bool}d, resolved output: %s
Unable to get route ids for the intent devices: %s
SetVolumeLevel.SetVolumeLevelIntentHandler.handle() called
SetVolumeLevel.SetVolumeLevelIntentHandler.confirm() called
Can't do volume controls on CarPlay, returning unsupported.
Resolving devices for SetVolume
Resolving volume level for SetVolume
_TtC26SiriPlaybackControlIntents27SetVolumeLevelIntentHandler
accessoryVolumeController
playbackController
aceServiceHelper
Nothing to unmute
Volume Level retrieved from stash: %f
Failed to get routeId to use when storing previous volume level
Already Muted
Found unexpected volumeSettingState: %{public}s. Returning failure
resolveVolumeLevelUsingQualifiers volume set to mean
resolveVolumeLevelUsingQualifiers volume set to min
resolveVolumeLevelUsingQualifiers volume set to max
resolveVolumeLevelUsingQualifiers increase by %f
resolveVolumeLevelUsingQualifiers decrease by %f
Intent does not contain a volumeSettingValue. Cannot resolve volume level from numeric input
This is an absolute volume adjust intent
This is a relative volume adjust intent
User specified a numeric value in the intent: %@
Calculated delta value: %f
Recalculating delta based on percent of current value
Calculating delta based on percent of current value
Using value directly as delta because value is less than normalizedMinimumValueToUseAsMultiplier or current volume is 0
Normalizing floatSettingValue percentage value
Percent not specified so increase/decrease based on defaultRelativeChangeStepSize and value
User did not specify neither a numeric value in the intent nor any qualifiers. Returning .needsValue
resolvedVolumeOutput = %f
Error getting the volume resolution result
User did not specify a numeric volume level in the intent, but intent has qualifiers. Trying to resolve volume level using qualifiers
User specified a numeric value in the intent. Trying to resolve the volume level from numeric input
Could not find a resolveVolumeOutput in the intent. shouldPresentLoudVolumeWarning = false
Expected volume output = %f is smaller than the loud volume range start value of %f. shouldPresentLoudVolumeWarning = false
Delta = %f is smaller than the required volume delta before loud warning %f. shouldPresentLoudVolumeWarning = false
Volume level is too loud, device has very loud audio output (hence should present warning): %{bool}d
Request is to decrease volume, skip loud volume confirmation
Checking if we should be presenting loud volume warning for expectedOutputVolume = %f, currentVolumeOutput = %s, device = %@, volumeSettingState: %ld
isHomePodFromDeviceType: %{bool}d, isHomePodFromDeviceState: %{bool}d, isAudioRouteToHeadphone: %{bool}d. hasVeryLoudAudioOutput=%{bool}d
Determining if device: %@ has very loud audio output
Failed to get volume for accessory
resolveVolumeLevel: An error occurred in the GetVolumeLevel media remote call: %{public}s
Can't do volume controls on Apple TV, returning unsupported.
Multiple devices selected.
Attempting to set the volume for sidekick device to %f for routeId: %s
Failed to set volume for accessory
floatVolumeLevel: %f deceeds minimum level. This is okay, we'll still try to set it to the min value
floatVolumeLevel: %f exceeds maximum level. This is okay, we'll still try to set it to the max value
Attempting to set the volume for local device to %f for routeId: %s
An error occurred in the SetVolumeLevel media remote call: %{public}s
Attempting to change the volume by %f for routeIds: %s
Attempting to set the volume to %f for routeIds: %s isLocal: %{bool}d
Getting routeIds from intent. PreferContextRouteId: %{bool}d
SetVolumeLevelIntentHandling
v32@0:8@"SetVolumeLevelIntent"16@?<v@?@"SetVolumeLevelIntentResponse">24
v32@0:8@"SetVolumeLevelIntent"16@?<v@?@"NSArray">24
v32@0:8@"SetVolumeLevelIntent"16@?<v@?@"SetVolumeLevelVolumeLevelResolutionResult">24
_TtC26SiriPlaybackControlIntents18ServerFallbackFlow
SiriPlaybackControlIntents/ServerFallbackFlow.swift
ServerFallbackFlow#execute This function should never be called
ServerFallbackFlow#on returning false to reject back to server
Unexpected parse type: %s, returning nil MediaPlayerIntent
Invalid user data for buttonPress: %s
Could not convert user dialog act to tasks: %s
No tasks found in usoTasks input, might be a confirmation response.
Creating  MediaPlayerNLv4Intent
Creating  MediaPlayerNLv3Intent
Failed to decode destinationDeviceId
UserDialogAct is UserCancelled
UserDialogAct is UserRejected
UserDialogAct is UserAccepted
UsoMediaItemType value is %s
_TtC26SiriPlaybackControlIntents20AnalyticsServiceImpl
analyticsServiceLogger
contextProvider
metricsState
com.apple.siri.playbackcontrols.numberOfDevicesFiltered
@"NSDictionary"8@?0
sending %s with filterName: %s devicesBefore: %ld devicesAfter: %ld devicesFiltered: %ld
primaryProximityCount
immediateProximityCount
nearProximityCount
farProximityCount
unknownProximityCount
com.apple.siri.playbackcontrols.contextDeviceProximities
sending %s with proximityCounts: %@
sending logSELFCrossDeviceCommandEndedEvent with intent:%s requestId: %s
sending logSELFCrossDeviceCommandStartedEvent with requestId: %s
Error creating contexts for eventType: %s
Error creating createAFCoreAnalyticsCrossDeviceEvent
sending logAFCoreAnalyticsCrossDeviceEvent with event: %s
sending eventType: %s with event: %s
selectedDeviceProximity
com.apple.siri.playbackcontrols.selectedDeviceProximity
sending %s for intent: %s with proximity: %s and selectedBy: %s
primaryProximityPresent
immediateProximityPresent
nearProximityPresent
farProximityPresent
unknownProximityPresent
com.apple.siri.playbackcontrols.disambiguatedDeviceProximities
sending %s with counts [P, I, N, F, U]: [%ld, %ld, %ld, %ld, %ld] and is present: [%ld, %ld, %ld, %ld, %ld]
Unable to get turnId or convert to UUID
Unable to create SISchemaUUFRCompletion object
Finished logging UUFR
_TtC26SiriPlaybackControlIntents29VolumeLevelNeedsValueStrategy
deviceState
volumeControlsDialogProvider
Unknown parameter found: %{public}s. Unable to make prompt value.
VolumeControls#VolumeLevelNeedsValue
Making prompt value for "volumeLevel"
VolumeLevelNeedsValueStrategy.makePromptForValue()
Including SystemPrompted in context update: %s
NLv4 NeedsValue: %s
com.apple.siri.nl
floatSettingName
Unknown parameter found: %{public}s. Unable to parse response value
Unable to create SettingsIntent from parse
Could not get volumeSettingValue from intent
VolumeLevelNeedsValueStrategy.parseResponseValue()
Unknown parameter found: %s. Returning .ignore()
Could not create SettingsIntent from parse. ActionForInput = ignore()
Could not find a numericSettingState nor a numericSettingValue in the response. ActionForInput = ignore()
VolumeLevelNeedsValueStrategy.actionForInput()
handleSkipItem
Resolving devices for skip content
_TtC26SiriPlaybackControlIntents24SkipContentIntentHandler
v16@0:8
deviceSelector
No devices found in intent, returning failure
Skip direction not provided in intent, returning failure
SkipContentIntentHandling
v32@0:8@"SkipContentIntent"16@?<v@?@"SkipContentIntentResponse">24
v32@0:8@"SkipContentIntent"16@?<v@?@"NSArray">24
@32@0:8:16@24
dialogProviding
languageDialogProvider
LanguageControls#DisambiguateLanguage
LanguageDisambiguationStrategy.makePromptForDisambiguation() called
Unable to select a language from previous items, returning failure
User selected language: %@
LanguageDisambiguationStrategy.parseDisambiguationResult() called
Intent is missing language, ignoring
Comparing %{public}s against: %{public}s
LanguageDisambiguationStrategy.makeDisambiguationItemContainer() called
LanguageDisambiguationStrategy.makeFlowCancelledResponse()
LanguageDisambiguationStrategy.actionForInput() called
handleRepeatMedia
Resolving devices for set repeat state
_TtC26SiriPlaybackControlIntents27SetRepeatStateIntentHandler
Uknown repeat mode
Handling repeatState with value: %{public}ld
SetRepeatStateIntentHandling
v32@0:8@"SetRepeatStateIntent"16@?<v@?@"SetRepeatStateIntentResponse">24
v32@0:8@"SetRepeatStateIntent"16@?<v@?@"NSArray">24
#16@0:8
_TtC26SiriPlaybackControlIntents23ResumeMediaFlowStrategy
ResumeMediaFlowStrategy.makeIntentFromParse() called
Home Automation entities are empty, skip adding to intent.
Found destination device id in the intent. parsing the routes and setting disambiguated to true
Found home automation nodes, attempting to map them to SiriKit intent
ResumeMediaFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents34SetVolumeLevelHandleIntentStrategy
Did not receive devices in intent
SetVolumeLevel.HandleIntentStrategy.makeFailureHandlingIntentResponse() called
Did not receive volume level from response
VolumeControls#AlreadyAtMinimum
VolumeControls#AlreadyAtMaximum
SetVolumeLevel.HandleIntentStrategy.makeIntentHandledResponse() called
_TtC26SiriPlaybackControlIntents36VolumeLevelNeedsConfirmationStrategy
DefaultNeedsConfirmationStrategy.makeConfirmationRejectedResponse()
Could not find any devices or volume level in the intent for confirmation
Unable to generate views for confirmation
VolumeControls#ConfirmSetLoudVolume
VolumeLevelNeedsConfirmationStrategy.makePromptForConfirmation()
Failed to localize labels for confirmation dialog.
Unexpected device type, returning empty views
Including SystemOffered in context update: %s
NLv4 UserWantedToProceed: %s
Unexpected parse: %s
DefaultNeedsConfirmationStrategy.parseConfirmationResponse()
No confirmation response in the intent, ignoring input
Cancelling due to confirmation value in intent
DefaultNeedsConfirmationStrategy.actionForInput()
Filtered %ld options against %{public}s to: %{public}@
Error when getting language options: %{public}s
Unable to autoselect a language, returning all options: %@
Found already enabled language: %s
_TtC26SiriPlaybackControlIntents36SkipTimeDeviceDisambiguationStrategy
Missing direction in intent
SkipTimeDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
Unexpected parse type: %s, returning nil SettingsIntent
Mapped properties from USO graph: %s
Error creating SettingsNLv4Intent. No tasks found in input.
Creating SettingsNLv4Intent
Creating SettingsNLv3Intent
Attempted to obtain Settings NL properties from an unknown task: %s, returning empty properties
Received unsupported decreaseByMeasurement task: %s, from settings, returning empty properties
Received unsupported increaseByMeasurement task: %s, from settings, returning empty properties
Unable to obtain common number from fromIncreaseByTask, intent might be ambiguous.
Number %s cannot be cast to MultipliedNumber, decimal or integer, returning nil.
Number value: %s
Number value: %lld
Multiplier value: %s
Unable to obtain common number from fromDecreaseByTask, intent might be ambiguous.
Unable to obtain common number from setNumberTask, intent might be ambiguous.
_TtC26SiriPlaybackControlIntents40SetSubtitleStateUnsupportedValueStrategy
LanguageControls#FailedToRetrieveOptions
SetSubtitleStateUnsupportedValueStrategy.makeUnsupportedValueOutput()
Unable to create SettingsIntent from parse, ignoring input
Incorrect verb in intent for flow, ignoring input
SetVolumeLevel.shouldHandle() called
Intent Device { name: 
, mediaSystemId: 
, disambiguated: 
, skipConfirmation: 
Device missing identifier, skipping conversion: %s
Context missing route ID while converting to Intent Device: %@. Skipping device.
Context contains duplicate routeId: %s with context: %@. Keeping only last processed context: %@
Local SideKick device, using endpointId: %s
_TtC26SiriPlaybackControlIntents38SetVolumeLevelUnsupportedValueStrategy
VolumeControls#NothingIsPlaying
VolumeControls#VolumeLevelUnsupportedOnCarPlay
VolumeControls#VolumeLevelUnsupportedOnAppleTV
fetchQuickStopContext not implemented in SimulatedContextProvider
Returning %ld contexts: %@
nowPlayingMediaType
handleSkipTimeMedia
Resolving devices for skip time
_TtC26SiriPlaybackControlIntents21SkipTimeIntentHandler
v32@0:8@16@?24
responseCodeFromResult for SkipTimeIntentResponseCode
Unable to get time from intent, returning failure
Unknown skip direction provided in intent, returning failure
Missing routeId in intent, returning failure
SkipTimeIntentHandling
v32@0:8@"SkipTimeIntent"16@?<v@?@"SkipTimeIntentResponse">24
v32@0:8@"SkipTimeIntent"16@?<v@?@"NSArray">24
v32@0:8@"SkipTimeIntent"16@?<v@?@"SignedDurationResolutionResult">24
_TtC26SiriPlaybackControlIntents23MoveSpeakerFlowStrategy
MoveSpeakerFlowStrategy.makeIntentFromParse() called
MoveSpeakerFlowStrategy.actionForInput() called
MediaPlayerFlowProvider.makeFlow Received unexpected parse: %s
handleAddSpeakerIntent
resolveAddSpeakerSource
resolveAddSpeakerDestiantions
AddSpeakerIntentHandler.confirm() called
_TtC26SiriPlaybackControlIntents23AddSpeakerIntentHandler
Could not find a device query or could not find add source in the intent. Returning error
AddSpeakerIntentHandler.resolveDestination() called
Success resolving destination: %s.
User asked for a single device matching a deviceType, but multiple devices were found. Returning an error
AddSpeaker destination device is not TV or HomePod. Returning an error
Could not resolve any destination for add speaker request.
Could not find any device queries in the intent. Returning error
AddSpeakerIntentHandler.resolveSource()
Multiple sources found for add request.
Success resolving source: %@.
Could not find a source stream for the add request.
Could not find a valid source and/or destinations in the intent
Failed to get the device id of the source. Returning error
Source device is is not TV or HomePod. Sending a move command instead of add
Empty destination ids found after filtration. Returning error
Resolved Source: %s, Resolved Destinations: %s
AddSpeakerIntentHandler.handle() called
Success moving output devices to group
Failed to move output devices to group. Error: %s
Success adding output devices to group
Failed to add output devices to group. Error: %s
AddSpeakerIntentHandling
v32@0:8@"AddSpeakerIntent"16@?<v@?@"AddSpeakerIntentResponse">24
v32@0:8@"AddSpeakerIntent"16@?<v@?@"AddSpeakerSourceResolutionResult">24
v32@0:8@"AddSpeakerIntent"16@?<v@?@"NSArray">24
NSObject
findFlowFor
findFlowFor(parse:)
ControlsFlowProvider#findFlowFor Didn't recieve a flow, returning .noFlow
ControlsFlowProvider#findFlowFor Calling ControlsFlowProvider().makeFlow for a flow to return
ControlsFlowProvider#findFlowFor Received an NLv4 parse but Media Controls on Siri X feature is disabled, returning .noFlow
ControlsFlowProvider#findFlowFor Recieved parse
makeFlow
makeFlow(for parse:)
com.apple.siri.DirectInvocation.PlaybackControls.StopMedia
Unexpected invocation identifier: %s
Returning PauseMediaFlow for stop direct invocation
Unexpected NL domain: %s, returning no flow
Attempting to make frame from settings NL intent
Attempting to make frame from mediaPlayer NL intent
Attempting to make frame from media NL intent
Received an NLv4 parse but Media Controls on Siri X feature is disabled, rejecting back to server
Did not get a task from userDialogAct, rejecting back to server
Unexpected task, returning no flow
Attempting to make flow from settings NLv4 intent
Attempting to make flow from mediaPlayer NLv4 intent
Nlv4 parse input is entity=%{public}s verb=%{public}s
ControlsFlowProvider#makeFlow Recieved parse
makeFrameForPlayMediaIntent
Determining if this is a play or resume request
ControlsFlowProvider.shouldHandleAmbiguousPlay Received unexpected parse: %s
ControlsFlowProvider.shouldHandleAmbiguousPlay Did not receive a task from userDialogAct
ControlsFlowProvider.shouldHandleAmbiguousPlay Non-ambiguous play, entity: %s verb: %s
Checking context for ambiguous play request
ControlsFlowProvider.shouldHandleAmbiguousPlay Non ambiguous play request. Returning a nil flow for SiriAudio to handle the play request
Resumable device found in context: %s, returning handle response
Contexts matching media type %s: %s
User asked to "Play [music/podcast/audiobook]" but no primary context found or primary was playing a different mediaType. Returning nil flow frame for SiriAudio to handle the play request
User asked to "Play [music/podcast/audiobook]". Primary is playing that mediaType. Resuming local device
User asked to "Play [music/podcast/audiobook]". Determining if we need to start a new container or if there's music/podcast/audiobook queued locally to resume
Local device has resumable content: %{bool}d
No relevant resumable contexts found to resume and local device play queue is empty or does not match the requested mediaType. Returning nil
No relevant resumable contexts found. Local device can be resumed. Return handle response
mediaType: %{public}s is ambiguous or unspecified, filtering skipped.
makeQuickStopFlow
ControlsFlowProvider#quickStopFlowResult QuickStop received an unsupported QuickStop parse. Returning .noFlow
homeAnnouncement
ControlsFlowProvider#quickStopFlowResult QuickStop reforming to %s domain
ControlsFlowProvider#quickStopFlowResult QuickStop returned flow
Found no context for item: %s, filtering skipped for this item.
homeAutomationSpeakerService
homeAutomationFromEntity
homeAutomationServiceGroup
homeAutomationServiceName
homeAutomationAccessoryName
homeAutomationZone
homeAutomationHome
common_MediaItem
Not rendering the controls platter due to enabled suppressSnippets user default
Setting sash applicationBundleIdentifier to: %{public}s
_TtC26SiriPlaybackControlIntents30AddSpeakerHandleIntentStrategy
AddSpeakerHandleIntentStrategy.makeFailureHandlingIntentResponse() called
Unable to find any destinations in the intent. Returning a failure
Returning default response dialog for add speaker.
Requested to add speaker from phone/iOS device which resulted in a moveSpeaker operation instead. Returning moveSpeaker dialog
AddSpeakerHandleIntentStrategy.makeIntentHandledResponse() called
_TtC26SiriPlaybackControlIntents35MoveSpeakerUnsupportedValueStrategy
PlaybackControls#NoWholeHouseAudioMentionedInIntent
PlaybackControls#TooManyStreamsInHome
MoveSpeakerUnsupportedValueStrategy.makeUnsupportedValueOutput() called
Destination #2: Destination type is unknown. Ignoring...
Destination #2: Destination is a room or zone. Setting speaker.firstRoom to the groupName
Destination #2: Destination is an accesory. Setting speaker.firstSpeakerName to the groupName
Destination #1: Destination type is unknown. Ignoring...
Destination resolved as the local device. Setting speaker.isInHere to true
More than 2 rooms mentioned in the intent. Setting speaker.hasThreeOrMoreRooms to true
User mentioned "everywhere" in the intent. Setting speaker.isAllSpeakers to true
No destinations found to populate speaker parameter.
Updating destination parameters for WHA dialog
resolveVolumeLevelUsingQualifiers a lot triggered
resolveVolumeLevelUsingQualifiers a little triggered
volumeSettingState not specified in the intent. isIncreaseOrDecreaseVolumeIntent = false
_TtC26SiriPlaybackControlIntents26GetVolumeLevelFlowStrategy
GetVolumeLevelFlowStrategy.makeIntentFromParse() called
GetVolumeLevelFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents39SkipContentDeviceDisambiguationStrategy
SkipContentDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents31ResumeMediaHandleIntentStrategy
ResumeMediaHandleIntentStrategy.makeIntentHandledResponse()
PlaybackControls#ResumeFailed
ResumeMediaHandleIntentStrategy.makeFailureHandlingIntentResponse()
_TtC26SiriPlaybackControlIntents32ResumeMediaConfirmIntentStrategy
dialogProvider
ConfirmIntentStrategy.makeFlowCancelledResponse()
ConfirmIntentStrategy.makeConfirmationRejectedResponse()
ResumeMediaConfirmIntentStrategy.makePromptForConfirmation() called
Could not find any devices in the intent for confirmation
Confirming devices: %s
ResumeMediaConfirmIntentStrategy.makeDialogForConfirmation()
ConfirmIntentStrategy.parseConfirmationResponse()
ConfirmIntentStrategy.actionForInput()
DeviceGroup { groupName: 
, excludeGroup: 
unmapped NowPlayingMediaType case (
Found an unknown media type playing: "%{public}s". Treating as unknown
Task entity/verb: %s/%s is not supported by SettingsFlowProvider
Task entity/verb: %s/%s is not supported by MediaPlayerFlowProvider
_TtC26SiriPlaybackControlIntents18BaseDialogProvider
testMode
testGlobals
globals
isMultiUserEnabled
requiresUserGrounding
executeCAT
Executing CAT: %s with params: %s
Error while executing dialog: %{public}s
handleResumeMedia
Resolving devices for resume media
_TtC26SiriPlaybackControlIntents24ResumeMediaIntentHandler
App bundle id for mediaType %{public}s on %{public}s is nil. Returning failure
Handling resume media
Handling resume for devices: %@
Resuming in here
Failed to handle Resume intent. No route ids found.
User asked to "Resume [mediaType]", however no devices with a matching nowPlayingMediaType was found. Falling back to resuming the corresponding first party app locally
Prepare for audio handoff came back with result: %{bool}d
More than one device found in the intent or primary device not found. shouldResumeLocalFirstPartyAppForMediaType = false
shouldResumeLocalFirstPartyAppForMediaType = %{bool}d
Determining if we should resume the local first party app using %s and mediaType %{public}s.
ResumeMediaIntentHandling
v32@0:8@"ResumeMediaIntent"16@?<v@?@"ResumeMediaIntentResponse">24
v32@0:8@"ResumeMediaIntent"16@?<v@?@"NSArray">24
_TtC26SiriPlaybackControlIntents35SetRepeatStateConfirmIntentStrategy
ConfirmIntentStrategy.makePromptForConfirmation() called
Unexpected repeat mode found
SetRepeatStateConfirmIntentStrategy.makeDialogForConfirmation()
setAudioLanguage
handleSetAudioLanguage
resolveAudioLanguage
_TtC26SiriPlaybackControlIntents29SetAudioLanguageIntentHandler
@16@0:8
No device found in intent, returning failure
Language already found in intent, returning it
Resolving language for set audio language
No language resolved and user requested to enable subtitles, returning failure
SetAudioLanguageIntentHandling
v32@0:8@"SetAudioLanguageIntent"16@?<v@?@"SetAudioLanguageIntentResponse">24
v32@0:8@"SetAudioLanguageIntent"16@?<v@?@"SetAudioLanguageDeviceResolutionResult">24
v32@0:8@"SetAudioLanguageIntent"16@?<v@?@"SetAudioLanguageLanguageResolutionResult">24
B24@0:8@16
_TtC26SiriPlaybackControlIntents36SetAudioLanguageHandleIntentStrategy
No device present in intent
SetAudioLanguageHandleIntentStrategy.makeIntentHandledResponse()
LanguageControls#AudioFailedToChange
_TtC26SiriPlaybackControlIntents34WhatDidTheySayHandleIntentStrategy
controlsDialogProvider
WhatDidTheySayHandleIntentStrategy.makeIntentHandledResponse()
WhatDidTheySayHandleIntentStrategy.makeFailureHandlingIntentResponse()
Missing routeId in intent
Getting the volume for route Id: %s
GetVolumeLevel.GetVolumeLevelIntentHandler.handle() called
GetVolumeLevel.GetVolumeLevelIntentHandler.resolveDevices() called
GetVolumeLevel.GetVolumeLevelIntentHandler.confirm() called
_TtC26SiriPlaybackControlIntents27GetVolumeLevelIntentHandler
Getting routeId from intent. PreferContextRouteId: %{bool}d
Multiple devices selected, returning unsupported.
The current volume level from GetVolumeLevel media remote call is: %f
An error occurred in the GetVolumeLevel media remote call: %{public}s
GetVolumeLevelIntentHandling
v32@0:8@"GetVolumeLevelIntent"16@?<v@?@"GetVolumeLevelIntentResponse">24
v32@0:8@"GetVolumeLevelIntent"16@?<v@?@"GetVolumeLevelDeviceResolutionResult">24
Intent LanguageOption { name: 
, languageIdentifier: 
_TtC26SiriPlaybackControlIntents22PauseMediaFlowStrategy
Unexpected parse type in makeIntentFromParse: %s
com.apple.siri.DirectInvocation.PlaybackControls.QuickStop
com.apple.siri.DirectInvocation.PlaybackControls.ButtonPress
Unexpected direct invocation identifier
Failed to create MediaPlayerIntent from parse: %s
PauseMediaFlowStrategy.makeIntentFromParse() called
Didn't recieve an NLv3IntentOnly parse or direct invocation.
PauseMediaFlowStrategy.actionForInput() called
handleShuffleMedia
Resolving devices for set shuffle state
_TtC26SiriPlaybackControlIntents28SetShuffleStateIntentHandler
responseCodeFromResult for SetShuffleStateIntentHandler
Uknown shuffle mode
Unexpected shuffle mode
SetShuffleStateIntentHandling
v32@0:8@"SetShuffleStateIntent"16@?<v@?@"SetShuffleStateIntentResponse">24
v32@0:8@"SetShuffleStateIntent"16@?<v@?@"NSArray">24
getUsoTask() returning task with entity=%{public}s verb=%{public}s
No tasks found in input
wrappedFlow
shouldRedirectToServer
NeedsDisambiguationWrapperFlow Wrapped flow exit value: %s
NeedsDisambiguationWrapperFlow shouldRedirectToServer is set to true, exiting flow with .unhandled response to trigger server fallback
NeedsDisambiguationWrapperFlow.execute called
NeedsDisambiguationWrapperFlow Disambiguation received an NLv4 parse. Setting shouldRedirectToServer to true
NeedsDisambiguationWrapperFlow.on called
No resolved devices were found in the intent. Skipping confirmation step
Intent indicates confirmation is not necessary
Confirm intent condition returning true
Checking confirm intent condition
DeviceQueryableIntent.shouldConfirm: %{bool}d
This is a WHA request. Skipping confirmation
shouldSkipUserConfirmation is set to true. Skipping confirmation step
ConfirmableIntent.shouldConfirm: %{bool}d
_TtC26SiriPlaybackControlIntents37SetAudioLanguageConfirmIntentStrategy
Confirming device: %@
SetAudioLanguageConfirmIntentStrategy.makeDialogForDisambiguation()
_TtC26SiriPlaybackControlIntents38GetVolumeLevelUnsupportedValueStrategy
VolumeControls#GetVolumeLevelError
VolumeControls#GetVolumeLevelUnsupportedOnMultipleDevices
GetVolumeLevelUnsupportedValueStrategy.makeUnsupportedValueOutput() called
Received non-NLv3Intent parse: %s
_TtC26SiriPlaybackControlIntents12GroupingUtil
ambiguousGroupsSync
v8@?0
Found primary context and creating a 'this' DeviceGroup for the local device.
HomeAutomation entity contains reference for 'this'.
Multiple predicates found, filtering out .allDevices
Getting ambiguous groups for homeAutomationEntities: %s, includeFromEntities: %{bool}d
Could not find any groups for %s
%s has multiple groups but none are zone/room/accessory. GroupTypes: %s
Adding deduplicated group for %s: %@
Groups for %s: %@
Returning ambiguousGroups: %s
Adding a group includingTVs: %{bool}d for streams: %s
Adding a stream for paused devices: %@
Playing streams: %s
Selecting devices based on predicate: %s, devices: %s
No devices found in group: %s. Skipping this group.
Creating stream for groupId: %s from devicesInGroup: %s
Grouping devices into streams
FromEntity homeAutomationEntities: %s
Returning sourceStreams: %@
Selecting devices based on predicate: %s
Device selector returned devices: %s
_TtC26SiriPlaybackControlIntents42SetRepeatStateDeviceDisambiguationStrategy
SetRepeatStateDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents28SkipTimeHandleIntentStrategy
Did not receive valid duration
SkipTimeHandleIntentStrategy.makeIntentHandledResponse()
SkipTimeHandleIntentStrategy.makeFailureHandlingIntentResponse()
Could not create skip error params
callIntentHandledFailedUnsupportedCommand in SkipTimeDialogTemplatingService
callGenericIntentHandledFailed in SkipTimeDialogTemplatingService
_TtC26SiriPlaybackControlIntents27SetShuffleStateFlowStrategy
SetShuffleStateFlowStrategy.makeIntentFromParse() called
SetShuffleStateFlowStrategy.actionForInput() called
settingConfirmation
settingAttribute
floatSettingQualifier
floatSettingState
floatSettingValue
floatSettingVerb
Unsupported parse while creating SettingNLIntent: %s
Found language in intent, mapping it to SiriKit intent
handleWhatDidTheySayIntent
_TtC26SiriPlaybackControlIntents27WhatDidTheySayIntentHandler
timer
queue
assertion
What did they say timer
MediaQuotationIntentHandler
v24@?0@"RBSAssertion"8@"NSError"16
Acquired RB assertion
Error acquiring assertion %{public}s
Error disabling subtitles for 'What did they say' request
Successfully disabled subtitles for 'What did they say' request
Missing device in intent
Handling What did they say
Error getting matching subtitle options: %{public}s
Calculated %f seconds as the duration to skip back
Unable to infer a language option. Trying to match %{public}s against options: %{public}s
Setting subtitle language
Skipping language change due to already enabled language
Error while performing rewind command
WhatDidTheySayIntentHandling
v32@0:8@"WhatDidTheySayIntent"16@?<v@?@"WhatDidTheySayIntentResponse">24
v32@0:8@"WhatDidTheySayIntent"16@?<v@?@"WhatDidTheySayDeviceResolutionResult">24
Transformer#quickStopToAlarmTransformer Task is not a valid QuickStop task, returning untransformed parse
com.apple.siri.DirectInvocation.Alarm.Stop
Transformer#quickStopToAlarmTransformer Reformed parse to stop alarm DirectInvocation: %s
Transformer#quickStopToTimerTransformer Task is not a valid QuickStop task, returning untransformed parse
com.apple.siri.DirectInvocation.Timer.Stop
Transformer#quickStopToTimerTransformer Reformed parse to stop timer DirectInvocation: %s
Transformer#quickStopToHomeAnnouncementTransformer Task is not a valid QuickStop task, returning untransformed parse
com.apple.siri.directInvocation.HomeCommunication.Stop
Transformer#quickStopToHomeAnnouncementTransformer Reformed parse to stop home announcement DirectInvocation: %s
media_controls_on_sirix
SiriPlaybackControls
_TtC26SiriPlaybackControlIntents20SeekTimeFlowStrategy
SeekTimeFlowStrategy.makeIntentFromParse() called
SeekTimeFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents28SeekTimeHandleIntentStrategy
Did not receive valid playheadPosition
SeekTimeHandleIntentStrategy.makeIntentHandledResponse()
SeekTimeHandleIntentStrategy.makeFailureHandlingIntentResponse()
_TtC26SiriPlaybackControlIntents16AceServiceHelper
aceService
Local device not found in devices to control. Skipping prepareForAudioHandoff
Local device found in devices to control. Asking to prepareForAudioHandoff
iOSOnly is set and the device is not an iOS device. Skipping prepareForAudioHandoff
VolumeControls#GetVolumeLevel
VolumeControls#AlreadyUnmuted
VolumeControls#SetVolumeLevelError
VolumeControls#SetVolumeLevel
isHomePodLocalOnly
requestedStateIsCurrentState
smartControlFarRooms
preferSpeakerName
requestedVolumeLevel
_TtC26SiriPlaybackControlIntents20AudioSessionProvider
audioSession
LanguageControls#SubtitleLanguageNotAvailable
LanguageControls#SubtitleAlreadyOn
LanguageControls#NoRelevantDevice
LanguageControls#AudioSetSuccessfully
LanguageControls#WhatDidTheySayHandled
LanguageControls#ConfirmSetAudioLanguage
LanguageControls#DeviceDisambiguationWhatDidTheySay
LanguageControls#DeviceDisambiguationSubtitles
LanguageControls#ConfirmSetSubtitleState
LanguageControls#AudioLanguageNotAvailable
LanguageControls#ConfirmWhatDidTheySay
LanguageControls#DeviceDisambiguationAudioLanguage
LanguageControls#SubtitleFailedToToggle
LanguageControls#SubtitleSetSuccessfully
requestedLanguage
isClosedCaptionRequest
deviceIsInferred
isEnableSubtitles
_TtC26SiriPlaybackControlIntents29SkipTimeConfirmIntentStrategy
Unexpected skip time direction
SkipTimeConfirmIntentStrategy.makePromptForConfirmation()
isQuickStopParse() Parse is not a valid QuickStop parse
isQuickStopParse() did not get a task from userDialogAct, returning false
isQuickStopParse() Parse is Quickstop NLv4 parse, returning true
isQuickStopParse() Parse is QuickStop direct invocation, returning true
_TtC26SiriPlaybackControlIntents26SetVolumeLevelFlowStrategy
SetVolumeLevel.FlowStrategy.makeIntentFromParse() called
SetVolumeLevel.FlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents34GetVolumeLevelHandleIntentStrategy
GetVolumeLevel.HandleIntentStrategy.makeFailureHandlingIntentResponse() called
An error occurred in generating the error dialog for GetVolumeLevel: %{public}s
Did not receive device in intent
Did not receive the volume level
Current volume level in the intent response is: %s
GetVolumeLevel.HandleIntentStrategy.makeIntentHandledResponse() called
An error occurred in generating the dialog for GetVolumeLevel: %{public}s
Updating parameters for Volume control
_TtC26SiriPlaybackControlIntents26WhatDidTheySayFlowStrategy
WhatDidTheySayFlowStrategy.makeIntentFromParse() called
WhatDidTheySayFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents23SkipContentFlowStrategy
SkipContentFlowStrategy.makeIntentFromParse() called
SkipContentFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents22AddSpeakerFlowStrategy
AddSpeakerFlowStrategy.makeIntentFromParse() called
AddSpeakerFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents42WhatDidTheySayDeviceDisambiguationStrategy
WhatDidTheySayDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents32SeekTimeUnsupportedValueStrategy
playheadPosition
Did not receive intent response for seekTime or devices not populated!
SeekTimeUnsupportedValueStrategy.makeUnsupportedValueOutput()
DeviceContext { routeId: 
, nowPlayingState: 
, nowPlayingTimestamp: 
, nowPlayingMediaType: 
exactMediaTypeFound: %{bool}d, isAmbiguousMediaType: %{bool}d, unknownMediaTypeQueued: %{bool}d, acceptAmbiguousMediaType: %{bool}d, acceptUnknownNowPlayingMediaType: %{bool}d. hasMatchingNowPlayingMediaTypeQueued: %{bool}d
Device: %@ is silent primary. Converting its nowPlayingState to .paused
_TtC26SiriPlaybackControlIntents36SetSubtitleStateHandleIntentStrategy
SetSubtitleStateHandleIntentStrategy.makeFailureHandlingIntentResponse()
setSubtitleState
SetSubtitleStateHandleIntentStrategy.makeIntentHandledResponse()
Cannot convert value "%{public}s" to GroupType
_TtC26SiriPlaybackControlIntents31MoveSpeakerHandleIntentStrategy
MoveSpeakerHandleIntentStrategy.makeIntentHandledResponse() called
MoveSpeakerHandleIntentStrategy.makeFailureHandlingIntentResponse() called
_TtC26SiriPlaybackControlIntents28SetSubtitleStateFlowStrategy
SetSubtitleStateFlowStrategy.makeIntentFromParse() called
SetSubtitleStateFlowStrategy.actionForInput() called
Making views for watch
Making views for TV with confirmUtterance: %s and cancelUtterance: %s
Making SAUIConfirmationView with confirmLabel: %s and cancelLabel: %s
_TtC26SiriPlaybackControlIntents31PauseMediaConfirmIntentStrategy
PauseMediaConfirmIntentStrategy.makePromptForConfirmation() called
PauseMediaConfirmIntentStrategy.makeDialogForConfirmation()
Device type is nil. Returning nil for getLocalBundleIdentifier
Could not get bunlde id for type: %{public}s
Getting app identifier for mediaType %{public}s and deviceType: %{public}s
com.apple.iBooks
com.apple.iBooksX
com.apple.NanoBooks
com.apple.podcasts
com.apple.TVMusic
com.apple.NanoMusic
_TtC26SiriPlaybackControlIntents34AddSpeakerUnsupportedValueStrategy
AddSpeakerUnsupportedValueStrategy.makeUnsupportedValueOutput() called
_TtC26SiriPlaybackControlIntents34PauseMediaUnsupportedValueStrategy
PauseMediaUnsupportedValueStrategy#makeUnsupportedValueOutput Unexpected parameter name: %s
PauseMediaUnsupportedValueStrategy#makeUnsupportedValueOutput Unexpected unsupportedReason
PauseMediaUnsupportedValueStrategy.makeUnsupportedValueOutput() called
_TtC26SiriPlaybackControlIntents44SetSubtitleStateDeviceDisambiguationStrategy
LanguageControls#DisambiguateDevices
SetSubtitleStateDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
handleVideoCaptioning
resolveSubtitleLanguageForVideoCaptioning
_TtC26SiriPlaybackControlIntents29SetSubtitleStateIntentHandler
Disambiguating languages: %s
Resolving successfully with: %s
No languages matched
Received .matched response with languages: %s
Received .allAvailable response with languages: %s
Returning .alreadyEnabled response code
Received failure response when resolving language
Did not request to enable subtitles
Resolving language for set subtitle state
The requested language was already enabled
SetSubtitleStateIntentHandling
v32@0:8@"SetSubtitleStateIntent"16@?<v@?@"SetSubtitleStateIntentResponse">24
v32@0:8@"SetSubtitleStateIntent"16@?<v@?@"SetSubtitleStateDeviceResolutionResult">24
v32@0:8@"SetSubtitleStateIntent"16@?<v@?@"SetSubtitleStateLanguageResolutionResult">24
_TtC26SiriPlaybackControlIntents35SetShuffleStateHandleIntentStrategy
Did not receive intent response for shuffle request or devices not populated!
Unexpected shuffle state found
SetShuffleStateHandleIntentStrategy.makeIntentHandledResponse()
SetShuffleStateHandleIntentStrategy.makeFailureHandlingIntentResponse()
unmapped NLMediaType case (
Cannot convert value "%{public}s" to NLMediaType
_TtC26SiriPlaybackControlIntents37SetSubtitleStateConfirmIntentStrategy
SetSubtitleStateConfirmIntentStrategy.makeDialogForConfirmation()
_TtC26SiriPlaybackControlIntents13QuickStopUtil
flowFactory
QuickStopUtil#quickStopResult Not a valid QuickStop parse, returning .invalid
QuickStopUtil#quickStopResult Didn't find anything to stop. Returning QuickStopNothingToStop flow
QuickStopUtil#quickStopResult Local device has running timer. Reforming to timer domain
QuickStopUtil#quickStopResult Far device has playing media. Returning PauseMedia flow
QuickStopUtil#quickStopResult Far device has firing %s. Reforming to %s domain
QuickStopUtil#quickStopResult Local or nearby device has playing media. Returning PauseMedia flow
QuickStopUtil#quickStopResult Nearby device has firing %s. Reforming to %s domain
QuickStopUtil#quickStopResult Barged in over Home Anouncement. Reforming to Home Communication to stop the announcement
QuickStopUtil#quickStopResult Barged in over Siri. Dismiss with no action
QuickStopUtil#quickStopResult Local device has firing %s. Reforming to %s domain
QuickStopUtil#quickStopResult Fetching context
ControlsFlowProvider#mostRelevantFiringItemDomain Most recent firing item should not be empty, returning nil
QuickStopUtil#mostRelevantFiringItemDomain Most recently firing item is timer within %s proximity
QuickStopUtil#mostRelevantFiringItemDomain Most recently firing item is alarm within %s proximity
QuickStopUtil#mostRelevantFiringItemDomain No firing alarms/timers found within %s proximity
QuickStopUtil#quickStopResult Fetched context
_TtC26SiriPlaybackControlIntents40SetAudioLanguageUnsupportedValueStrategy
SetAudioLanguageUnsupportedValueStrategy.makeUnsupportedValueOutput()
_TtC26SiriPlaybackControlIntents43SetShuffleStateDeviceDisambiguationStrategy
SetShuffleStateDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents34SetRepeatStateHandleIntentStrategy
Did not receive intent response for repeat request or devices not populated!
Unexpected repeat mode during handle dialog
SetRepeatStateHandleIntentStrategy.makeIntentHandledResponse()
SetRepeatStateHandleIntentStrategy.makeFailureHandlingIntentResponse()
_TtC26SiriPlaybackControlIntents38WhatDidTheySayUnsupportedValueStrategy
WhatDidTheySayUnsupportedValueStrategy.makeUnsupportedValueOutput()
Unable to create SettingNLIntent from parse, ignoring input
GetVolumeLevel.shouldHandle() called
_TtC26SiriPlaybackControlIntents26QuickStopNothingToStopFlow
QuickStopNothingToStopFlow#execute generating dialog
QuickStopNothingToStopFlow#execute DialogEngine returned an error
QuickStopNothingToStopFlow#execute dialog generated successfully
mediaPlayerReference
com.apple.siri.nl.MediaPlayer
_TtC26SiriPlaybackControlIntents28SetAudioLanguageFlowStrategy
SetAudioLanguageFlowStrategy.makeIntentFromParse() called
SetAudioLanguageFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents26SetRepeatStateFlowStrategy
SetRepeatStateFlowStrategy#makeIntentFromParse Received unexpected parse: %s
SetRepeatStateFlowStrategy.makeIntentFromParse() called
SetRepeatStateFlowStrategy.actionForInput() called
_TtC26SiriPlaybackControlIntents36SeekTimeDeviceDisambiguationStrategy
SeekTimeDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
handleMoveSpeakerIntent
resolveMoveSpeakerSource
resolveMoveSpeakerDestiantions
MoveSpeakerIntentHandler.confirm() called
_TtC26SiriPlaybackControlIntents24MoveSpeakerIntentHandler
Could not find a device query. Returning error
MoveSpeakerIntentHandler.resolveDestination() called
MoveSpeaker destination device is not TV or HomePod. Returning an error
Could not resolve any destination for move speaker request.
MoveSpeakerIntentHandler.resolveSource()
Multiple sources found for move request.
Could not find a source stream for the move request.
MoveSpeakerIntentHandler.handle() called
Success moving devices
Failed to move the source stream to the expected destinations. Error: %s
MoveSpeakerIntentHandling
v32@0:8@"MoveSpeakerIntent"16@?<v@?@"MoveSpeakerIntentResponse">24
v32@0:8@"MoveSpeakerIntent"16@?<v@?@"MoveSpeakerSourceResolutionResult">24
v32@0:8@"MoveSpeakerIntent"16@?<v@?@"NSArray">24
No mediaType found the intent.
MediaType: %s found in the intent but it was not explicitly mentioned by the user. Returning nil mediaType
Returning mediaType = %s
Getting MediaType
MediaType node is not inferred, or could not find origin details. isMediaTypeExplicitlyMentioned: true.
MediaType inferred, but no explanation found or explanation shows it was mentioned by the user. isMediaTypeExplicitlyMentioned: true
USER_DIDNT_ACTUALLY_SAY_MUSIC
MediaType inferred, and the user didn't explicitly mention it. This is possibly a SmartPlay reformation. isMediaTypeExplicitlyMentioned: false
mediaPlayerConfirmation
mediaPlayerAttributes
mediaPlayerSkipInterval
mediaPlayerBoolSettingState
mediaPlayerBoolSettingVerb
DeviceClassNumber
_TtC26SiriPlaybackControlIntents29SeekTimeConfirmIntentStrategy
SeekTimeConfirmIntentStrategy.makePromptForConfirmation()
_TtC26SiriPlaybackControlIntents35WhatDidTheySayConfirmIntentStrategy
WhatDidTheySayConfirmIntentStrategy.makeDialogForConfirmation()
_TtC26SiriPlaybackControlIntents14DialogProvider
Cannot create DialogDeviceType from unknown deviceState.
PlaybackControls#UnsupportedDestinationSpeaker
PlaybackControls#SpeakerAdd
PlaybackControls#CannotSkipAdvertisement
PlaybackControls#CannotShuffle
PlaybackControls#UnableToSeekToPlaybackPosition
PlaybackControls#SkipBackward
PlaybackControls#CannotSkipBackward
PlaybackControls#CannotSkipForward
PlaybackControls#CannotSkipLimitExceeded
PlaybackControls#SkipToPrevious
PlaybackControls#SkipToNext
PlaybackControls#ConfirmShuffleState
PlaybackControls#DeviceDisambiguationShuffleState
PlaybackControls#ConfirmSkipContent
PlaybackControls#DeviceDisambiguationSkipContent
PlaybackControls#ConfirmSkipTime
PlaybackControls#DeviceDisambiguationSkipTime
PlaybackControls#SkipForward
PlaybackControls#ToggleShuffle
PlaybackControls#ConfirmRepeatState
PlaybackControls#DeviceDisambiguationRepeat
PlaybackControls#ToggleRepeat
PlaybackControls#CannotRepeat
PlaybackControls#NoSpeakerFound
PlaybackControls#SpeakerFailedOperation
PlaybackControls#SpeakerMove
PlaybackControls#ConfirmSeekTime
PlaybackControls#DeviceDisambiguationSeekTime
PlaybackControls#Seek
PlaybackControls#ConfirmResume
PlaybackControls#DeviceDisambiguationResume
PlaybackControls#Resume
PlaybackControls#ConfirmPause
PlaybackControls#DeviceDisambiguationPause
PlaybackControls#Paused
speakerOperation
isMultipleSpeakers
skipBackwardDuration
isShuffleEnabled
isSkipToPrevious
skipForwardDuration
isDestinationMissing
_TtC26SiriPlaybackControlIntents36SetShuffleStateConfirmIntentStrategy
SetShuffleStateConfirmIntentStrategy.makeDialogForConfirmation()
_TtC26SiriPlaybackControlIntents32SkipContentConfirmIntentStrategy
Unexpected skip content direction
SkipContentConfirmIntentStrategy.makePromptForConfirmation() called
SkipContentConfirmIntentStrategy.makeDialogForConfirmation()
_TtC26SiriPlaybackControlIntents22AnalyticsServiceLogger
deviceResolutionAnalytics
AnalyticsServiceLogger.logSELFCrossDeviceCommandEndedEvent expects a valid requestId. Returning.
AnalyticsServiceLogger.logSELFCrossDeviceCommandStartedEvent expects a valid requestId. Returning.
_TtC26SiriPlaybackControlIntents11ContextUtil
resumeLongWindowDuration
resumeShortWindowDuration
autoResumableProximitiesInLongWindow
autoResumableProximitiesInShortWindow
selectMostRelevantContexts: Selecting playing immediate device context(s): %s
selectMostRelevantContexts: Found same room devices with video up on the screen, returning those devices: %s
selectMostRelevantContexts: No devices selected
selectMostRelevantContexts: Selecting the playing primary device context
Selecting most recent resumable deviceContexts: %s
Contexts in selection window %s
Selection window [%{public}s - %{public}s]
Excluding context %@ with no timestamp
Excluding item %s with no context
Selected pausable devices: %s
Could not find immediate devices, look near and far
Selecting primary device context
Skipping item with missing proximity: %s
Devices %s are autoresumable. Setting skipConfirmation to true
Most recent resumable context in short window = %{public}s
Unknown controlType: %s, no selectedDeviceContexts
Adding back local device to the filtered resumable devices
Smart Selecting devices of type: %{public}s
Auto resumable device found, don't disambiguate with local!
No resumable device found in long resumable window. Include local device
Local device is playing. Don't disambiguate with local device since it is already resumed.
The resumable devices contain the primary device. Don't include local device again
Selected and grouped devices: %s
Video control received on homepod! Removing this device (primary) if it was selected
Adding device types for devices in room %s
Could not find device contexts for group %s...skipping this group
Group %s: unique rooms: %s
Error getting the first room name in a group. groupRoomCount %ld...skipping this group
Group %s: Skipping context %@
Grouping devices in group %s
Group %s has primary or immediate device. Adding it.
Devices in group after silent primary filtration: %s
Single device in group, adding it to grouped device list
Error generating group name...skipping this group
Cannot group empty device list
Picking device %@ as the group representing device
Device %@ is silent primary, isTV: %{bool}d. keepSilentPrimary: %{bool}d
ShortResumeTimeWindow
RecentTimeWindow
No devices in group for mediaSystemId: %s...skipping it
Only one device is in the group for mediaSystemId: %s. Adding it
Devices grouped by mediaSystem: %s
Cannot group empty device list by media system
!!!!! Simulated context is being used !!!!!
_TtC26SiriPlaybackControlIntents44SetAudioLanguageDeviceDisambiguationStrategy
SetAudioLanguageDeviceDisambiguationStrategy.makeDialogForDisambiguation() called
_TtC26SiriPlaybackControlIntents31SkipContentHandleIntentStrategy
SkipContentHandleIntentStrategy.makeIntentHandledResponse()
SkipContentHandleIntentStrategy.makeFailureHandlingIntentResponse()
SkipContentHandleIntentStrategy.callIntentHandledFailedUnsupportedCommand()
SkipContentHandleIntentStrategy.callGenericIntentHandledFailed()
handlePauseMedia
PauseMediaIntentHandler#resolveDevices Pause request has ambiguous target entities. Going down the select route
PauseMediaIntentHandler#resolveDevices Resolving devices for deviceQueries: %s
Resolving devices for pause media
_TtC26SiriPlaybackControlIntents23PauseMediaIntentHandler
PauseMediaIntentHandler#resolveDevices Success resolving devices: %s
PauseMediaIntentHandler#resolveDevices .noMatchingDevicesFound
PauseMediaIntentHandler#resolveDevices Error resolving devices: %s
No whole house audio in the intent. Target can be the local device or any other devices in the home. hasAmbiguousTargetEntities: true
No deviceQueries found in the intent. hasAmbiguousTargetEntities: true
No devices found in intent, returning nothing is playing, but also sending a pause command to the local device just in case...
Local device selected with unknown playstate. Returning nothing is playing, but also sending a pause command to the local device just in case...
Handling pause media
Found non ambiguous target entities in the intent. Applying a remove from group command
Found ambiguous target entities in the intent. Applying a pause command
Handling pause for devices: %@
Pausing everywhere using context %@
Failed to handle Pause intent
Executing pause for devices: %s, deviceContext: %s
PauseMediaIntentHandling
v32@0:8@"PauseMediaIntent"16@?<v@?@"PauseMediaIntentResponse">24
v32@0:8@"PauseMediaIntent"16@?<v@?@"NSArray">24
Initializing ResumeMediaFlow with intent
RCHChildFlowProducers.resumeMediaFlowProducers() called
Initializing WhatDidTheySayFlow
RCHChildFlowProducers.whatDidTheySayFlowProducers() called
Initializing SetSubtitleStateFlow
RCHChildFlowProducers.setSubtitleStateFlowProducers() called
SiriPlaybackControlIntents/RCHChildFlowProducers+SetSubtitleState.swift
Unexpected parameter while generating disambiguation strategy
getDisambiguationStrategy() for SetSubtitleState called
Initializing SetAudioLanguageFlow
RCHChildFlowProducers.setAudioLanguageFlowProducers() called
SiriPlaybackControlIntents/RCHChildFlowProducers+SetAudioLanguage.swift
getDisambiguationStrategy() for SetAudioLanguage called
Initializing MoveSpeakerFlow
RCHChildFlowProducers.moveSpeakerFlowProducers() called
Initializing AddSpeakerFlow
RCHChildFlowProducers.addSpeakerFlowProducers() called
Initializing ResumeMediaFlow
Initializing SkipTimeFlow
RCHChildFlowProducers.skipTimeFlowProducers() called
Initializing SkipContentFlow
RCHChildFlowProducers.skipContentFlowProducers() called
Initializing SeekTimeFlow
RCHChildFlowProducers.seekTimeFlowProducers() called
Initializing SetRepeatStateFlow
RCHChildFlowProducers.setRepeatStateFlowProducers() called
Initializing SetShuffleStateFlow
RCHChildFlowProducers.setShuffleStateFlowProducers() called
Initializing SetVolumeLevelFlow
RCHChildFlowProducers.setVolumeLevelFlowProducers() called
Initializing GetVolumeLevelFlow
RCHChildFlowProducers.getVolumeLevelFlowProducers() called
Initializing PauseMediaFlow
RCHChildFlowProducers.pauseMediaFlowProducers() called
Initializing QuickStopLocalStoppedFlow
Initializing QuickStopNothingToStopFlow
mediaConfirmation
Unsupported parse while creating MediaNLIntent: %s
mediaQuestionAttributes
MoveSpeaker metricsEligibleDeviceCount: %ld
AddSpeaker metricsEligibleDeviceCount: %ld
com.apple.siri.nl.Setting
handleSeekTimeMedia
Resolving devices for seek time
Playhead position doesn't exist in intent.
Multiple devices in intent, can't get duration info
Resolving playHeadPosition for seek time
_TtC26SiriPlaybackControlIntents21SeekTimeIntentHandler
responseCodeFromResult for SeekTimeIntentHandler
Content has no duration, can't skip to end
Missing duration info or elapsed duration is within 15 seconds of the end. Seeking to end of duration
Could not find time to seek in intent or it was invalid, returning failure
Can't seek to end on multiple devices, returning failure
Seeking to: %@
Handling seek to time
SeekTimeIntentHandling
v32@0:8@"SeekTimeIntent"16@?<v@?@"SeekTimeIntentResponse">24
v32@0:8@"SeekTimeIntent"16@?<v@?@"NSArray">24
v32@0:8@"SeekTimeIntent"16@?<v@?@"SeekTimePlayheadPositionResolutionResult">24
@24@0:8@16
@40@0:8@16@24@32
T@"NSArray",N,D,C
deviceContext
isDirectInvocation
T@"NSNumber",N,D,&
mediaType
targetBundleIdentifier
T@"NSString",N,D,C
T@"SignedDuration",N,D,&
deviceQueries
direction
Tq,N,Vcode
device
T@"Device",N,D,&
Tq,N,D
language
T@"LanguageOption",N,D,&
type
@32@0:8q16@24
q16@0:8
v24@0:8q16
startTime
T@"NSDate",N,D,C
shouldStartPlaybackAfterSeek
isSkipToEnd
@24@0:8q16
shuffleState
repeatState
code
@24@0:8:16
currentVolumeLevel
volumeLevel
T@"VolumeLevel",N,D,&
source
T@"MediaStream",N,D,&
destinations
SiriPlaybackControlIntents/Device.swift
name
roomName
zoneNames
currentHome
currentRoom
numberOfAffectedRooms
isDeviceSelectedUsingContext
context
T@"DeviceContext",N,D,&
disambiguated
confirmed
skipConfirmation
mediaSystemId
isEndpoint
SiriPlaybackControlIntents/SignedDuration.swift
Fatal error
duration
SiriPlaybackControlIntents/DeviceContext.swift
routeId
proximity
nowPlayingState
nowPlayingTimestamp
groupId
silentPrimary
SiriPlaybackControlIntents/LanguageOption.swift
languageIdentifier
languageTag
isActive
SiriPlaybackControlIntents/DeviceQuery.swift
accessoryName
zoneName
placeHintString
deviceQuantifierString
serviceName
serviceGroup
deviceTypeString
referenceString
fromEntity
SiriPlaybackControlIntents/VolumeLevel.swift
volumeSettingValue
volumeSettingState
volumeSettingUnit
volumeSettingQualifier
resolvedVolumeOutput
currentVolumeOutput
volumeSettingType
SiriPlaybackControlIntents/DeviceGroup.swift
groupName
streams
includesTVs
excludeGroup
@32@0:8@16@24
SiriPlaybackControlIntents/MediaStream.swift
devices
groupLeader
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
$s11SiriKitFlow19IntentErrorHandlingP
$s11SiriKitFlow026RouteConfirmIntentResponseC8StrategyP
$s11SiriKitFlow28IntentExtensionCommunicatingP
$s26SiriPlaybackControlIntents25InProcessHandlingStrategyP
_pGIegg_
$s11SiriKitFlow27ParameterResolutionHandlingP
$s11SiriKitFlow019NeedsDisambiguationC8StrategyP
$s26SiriPlaybackControlIntents28DeviceDisambiguationStrategyP
So24INIntentResolutionResultC
_pGIegn_
Iegn_
Gz_Xx
GIegg_
SaySSGIegg_
SaySSGIegn_
ySSG
ySo22SIRINLUSystemDialogAct_pG
So22SIRINLUSystemDialogAct_p
So20SIRINLUUserDialogAct_p
_pSg
So27FLOWSchemaFLOWDomainContextCSg
SiSg
Sg_ABt
ySo9SAAceViewCG
ySo20SAClientBoundCommand_pG
ySo20SAServerBoundCommand_pG
So20SAServerBoundCommand_p
So20SAClientBoundCommand_p
SaySo19SAUIHideSiriOverlayCG
ySo19SAUIHideSiriOverlayCG
_pSg
ySSSgG
SSSg
ySo22AFServiceDeviceContextCG
ySDyS2SGG
SDyS2SG
SaySo22AFServiceDeviceContextCGIegg_
SaySo22AFServiceDeviceContextCGIegn_
SaySSG
GIegg_
GIegn_
3key_So12AFClockTimerC5valuet
ypSg
GIegg_
GIegn_
$s26SiriPlaybackControlIntents28DefaultConfirmIntentStrategyP
10IntentType
17NLContextProvider
12NLIntentType
31DisambiguationItemContainerType
10IntentType
17NLContextProvider
12NLIntentType
Sg_ABt
GIegg_
GIegg_
Gz_Xx
So7NSArrayCIeyBy_
GIegg_
ySay
_pGIegg_
ySay
G_Sbt
_pGIegg_
ySay
G_Sbt
_pGIegn_
ySay
_pGIegg_
ySay
_pGIegn_
ySay
GIegg_
ySay
GIegn_
SDySSypG
$s11SiriKitFlow012HandleIntentC8StrategyP
ySSG
ySSSgG
$s11SiriKitFlow0C0P
Iegn_
$s26SiriPlaybackControlIntents24DeviceNLContextProvidingP
$s26SiriPlaybackControlIntents20UserDefaultsProviderP
So14NSUserDefaultsCSg
GIegg_
Iegg_
So8NSObjectC
So8NSNumberCSg
IeyBy_
IeyBy_
Iegg_
GSpySo8NSObjectCGSgSpyypGSgytIeglllr_
SSSgz_Xx
So21OS_dispatch_semaphoreC
$ss12CaseIterableP
$s26SiriPlaybackControlIntents16AnalyticsServiceP
ySS_So8NSObjectCtG
SDySSSo8NSObjectCG
ySS_So8NSNumberCtG
ySSSo8NSObjectCG
3key_yp5valuetSg
$s26SiriPlaybackControlIntents13ContextIntentP
So8INIntentC
$s11SiriKitFlow010NeedsValueC8StrategyP
Iegg_
Iegn_
IeyBy_
So16INIntentResponseC
yxq_G
G0R2_
G1R2_
_pGIegn_
G0R4_
G1R4_
Iegg_
Iegn_
IeyBy_
_pGIegg_
$s11SiriKitFlow017NeedsConfirmationC8StrategyP
$s26SiriPlaybackControlIntents32DefaultNeedsConfirmationStrategyP
SaySo9SAAceViewCG
Iegg_
ySay
$s26SiriPlaybackControlIntents17ConfirmableIntentP
5value_t
SdSg
$s26SiriPlaybackControlIntents11ContextItemP
$s11SiriKitFlow016UnsupportedValueC8StrategyP
13IntentHandler
Iegg_
Iegn_
IeyBy_
_pGIegg_
Iegg_
Iegn_
IeyBy_
Iegg_
Iegn_
IeyBy_
GIegg_
GIegn_
ySo22SAUIConfirmationOptionCG
_pGIegg_
_pGIegn_
Iegg_
SbIegy_
G13deviceContext_t
$s26SiriPlaybackControlIntents27HomeAutomationCapableIntentP
ySo21SIRINLUUserStatedTaskCG
ySo12SAUIListItemCG
26SiriPlaybackControlIntentsyHCg_G
26SiriPlaybackControlIntentsyHCg_G
ySSG
26SiriPlaybackControlIntentsyHCg_G
ySS_SaySSGtG
ySo13SFCardSectionCG
So8SAUISashC
So13SACardSnippetC
ySaySo9SAAceViewCG
_pGIegg_
SSIegg_
$s26SiriPlaybackControlIntents18NLContextProvidingP
_pGIegg_
$s11SiriKitFlow013ConfirmIntentC8StrategyP
$s26SiriPlaybackControlIntents15DialogProvidingP
_pGIegn_
_pSg
SS4name_t
Iegg_
Iegn_
IeyBy_
Iegg_
Iegn_
IeyBy_
Iegg_
Iegg_
Iegn_
IeyBy_
IeyBy_
SaySo13SABaseCommandCG
ySo13SABaseCommandCG
$s26SiriPlaybackControlIntents31MachineUtteranceProvidingIntentP
Iegg_
Iegg_
IeyBy_
IeyBy_
$s26SiriPlaybackControlIntents23AnalyticsServiceLoggingP
_pGIegg_
Iegg_
Iegn_
IeyBy_
yxGG
$s11SiriKitFlow019NeedsDisambiguationC0P
So17OS_dispatch_queueC
Gz_Xx
So17OS_dispatch_groupC
_pGIegg_
Iegg_
Iegg_
Iegn_
IeyBy_
So24OS_dispatch_source_timer_pSg
So17OS_dispatch_queueCSg
So12RBSAssertionCSg
ySo12RBSAttributeCG
IeyBy_
$s26SiriPlaybackControlIntents20FeatureFlagProvidingP
_pGIegg_
$s26SiriPlaybackControlIntents21AudioSessionProvidingP
So14AVAudioSessionC
_pGIegg_
_pGIegg_
_pGIegg_
$s26SiriPlaybackControlIntents12RCHNamespaceP
_pGIegg_
$s26SiriPlaybackControlIntents24LanguageSelectableIntentP
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
$s26SiriPlaybackControlIntents27DeviceDisambiguatableIntentP
$s26SiriPlaybackControlIntents22DeviceSelectableIntentP
$s26SiriPlaybackControlIntents28SingleDeviceSelectableIntentP
_pGIegg_
ySo16SASTTemplateItem_pG
So16SASTTemplateItem_p
ySo10SAUIButtonCG
_yptG
$s26SiriPlaybackControlIntents20AppBundleIdentifiersP
_pSg
Iegg_
Iegn_
IeyBy_
Iegg_
Iegg_
Iegn_
IeyBy_
IeyBy_
_SStG
ySSypG
SS_ypt
_ypt
ySSSo8NSNumberCG
ySS_
ySSSaySSGG
$s26SiriPlaybackControlIntents24ControlsDialogParametersP
$s26SiriPlaybackControlIntents29SmartControlsDialogParametersP
$s26SiriPlaybackControlIntents31WholeHouseAudioDialogParametersP
$s26SiriPlaybackControlIntents18QuickStopUtilitiesP
Gz_Xx
12NLIntentType
$s26SiriPlaybackControlIntents24MediaTypeProvidingIntentP
$s26SiriPlaybackControlIntents21ControlsFlowProvidingP
$s26SiriPlaybackControlIntents32SourceDestinationResolvingIntentP
_pGIegg_
$s26SiriPlaybackControlIntents21DeviceQueryableIntentP
_pGIegg_
$s26SiriPlaybackControlIntents27ConfirmationCapableNLIntentP
Iegg_
Iegn_
IeyBy_
Iegg_
Iegn_
IeyBy_
GIegg_
GIegn_
26SiriPlaybackControlIntentsyHCg_G
$s26SiriPlaybackControlIntents35HomeAutomationEntityProvidingIntentP
4info_
6resultt
4info_
6reasont
GSg11deviceUnits_SaySo22AFServiceDeviceContextCGSg8contexts
4infot
$s26SiriPlaybackControlIntents16ContextProvidingP
ySnySiGG
ySSSgSay
ySSSgSay
Ieg_
ySSSgSay
ySSSgSay
z_Xx
z_Xx
Iegg_
Iegn_
IeyBy_
GIegg_
$s26SiriPlaybackControlIntents19ControlsFlowFactoryP
GIegg_
ABSo24INIntentResolutionResultCSSSi
yABGIegg_Ieggggggyg_
ABSo24INIntentResolutionResultCSSSi
yABGIegg_Ieggggggyg_
GIegg_
GIegg_
So8INObjectC
8ItemType
$s26SiriPlaybackControlIntents21MetricsLoggableIntentP
Iegg_
Iegn_
IeyBy_
Iegg_
IeyBy_
$s26SiriPlaybackControlIntents24PauseMediaIntentHandlingP
$s26SiriPlaybackControlIntents25ResumeMediaIntentHandlingP
$s26SiriPlaybackControlIntents22SkipTimeIntentHandlingP
$s26SiriPlaybackControlIntents25SkipContentIntentHandlingP
$s26SiriPlaybackControlIntents30SetSubtitleStateIntentHandlingP
$s26SiriPlaybackControlIntents30SetAudioLanguageIntentHandlingP
$s26SiriPlaybackControlIntents28WhatDidTheySayIntentHandlingP
$s26SiriPlaybackControlIntents22SeekTimeIntentHandlingP
So30INTimeIntervalResolutionResultC
$s26SiriPlaybackControlIntents29SetShuffleStateIntentHandlingP
$s26SiriPlaybackControlIntents28SetRepeatStateIntentHandlingP
$s26SiriPlaybackControlIntents28GetVolumeLevelIntentHandlingP
$s26SiriPlaybackControlIntents28SetVolumeLevelIntentHandlingP
$s26SiriPlaybackControlIntents24AddSpeakerIntentHandlingP
$s26SiriPlaybackControlIntents25MoveSpeakerIntentHandlingP
So22INEnumResolutionResultC
So24INObjectResolutionResultC
_rawValue
RawValue
_ObjectiveCType
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
sharedContextService
deviceSelector
deviceState
contextUtil
groupingUtil
analyticsService
aceService
localizationProvider
unknown
noMatchingDevicesFound
dialogProvider
checkWiFiHint
deviceState
dialogProvider
userDefaultsProvider
analyticsService
IntentType
IntentHandler
IntentResponseType
aceServiceInvoker
deviceState
dialogProvider
analyticsService
ExitValue
hasRoutes
hasThreeOrMoreRooms
isAllSpeakers
isInHere
firstSpeakerName
secondSpeakerName
firstRoom
secondRoom
otherRoomsCount
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
flowFactory
userDefaults
deviceSelector
accessoryVolumeController
analyticsService
deviceState
playbackController
userDefaultsProvider
audioSession
aceServiceHelper
handleResponseCode
boundedVolumeLevel
ExitValue
music
podcast
playlist
musicVideo
song
audioBook
video
iTunesU
compilation
album
tvShow
show
radioShow
podcastStation
musicPlaylist
station
episode
extendedPlay
longPlay
single
genre
news
ringtone
sounds
movie
cancel
again
ending
toggle
enable
disable
play
pause
resume
stop
skip
previous
seek
skipForward
skipBackward
repeat
shuffle
moveSpeaker
addSpeaker
removeSpeaker
noVerb
isNLv4Intent
verb
boolSettingVerb
boolSettingState
skipInterval
attributes
confirmationValue
reference
mediaType
roomNames
homeName
zoneNames
accessoryNames
serviceNames
serviceGroups
fromEntities
deviceQuantifier
destinationDeviceId
deviceType
placeHint
AllCases
RawValue
analyticsServiceLogger
contextProvider
metricsState
deviceState
volumeControlsDialogProvider
IntentType
IntentResponseType
playbackController
deviceSelector
analyticsService
aceServiceHelper
deviceState
dialogProviding
languageDialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
playbackController
deviceSelector
analyticsService
aceServiceHelper
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
volumeControlsDialogProvider
deviceState
IntentType
IntentHandler
IntentResponseType
deviceState
dialogProvider
volumeControlsDialogProvider
IntentType
IntentResponseType
NLIntentType
allAvailable
matched
failure
autoSelectionAlreadyEnabled
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
alarm
timer
none
deviceId
proximity
hasFiringAlarm
hasFiringTimer
firingAlarmTimestamp
firingTimerTimestamp
hasRunningTimer
hasPlayingMedia
bargeInOverSiri
bargeInOverHomeAnnouncement
isNLv4Intent
verb
settingName
numericSettingValue
numericSettingState
numericSettingQualifier
settingAttribute
confirmationValue
roomNames
homeName
zoneNames
accessoryNames
serviceNames
serviceGroups
fromEntities
deviceQuantifier
destinationDeviceId
deviceType
placeHint
reference
percent
cancel
referentialTo
aLittle
aLot
less
maximum
mean
minimum
more
mute
unmute
volume
voice
mediaType
read
AllCases
RawValue
deviceState
languageDialogProvider
IntentType
IntentResponseType
deviceState
volumeControlsDialogProvider
IntentType
IntentResponseType
playbackController
deviceSelector
analyticsService
aceServiceHelper
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
flowFactory
deviceSelector
analyticsService
playbackController
deviceState
aceServiceHelper
flowFactory
playbackController
contextProvider
contextUtil
settingsFlowProvider
mediaFlowProvider
mediaPlayerFlowProvider
deviceState
featureFlagProvider
quickStopUtil
analyticsService
handle
dontHandle
mute
unmute
volume
mediaType
voice
RawValue
dialogProvider
deviceState
IntentType
IntentHandler
IntentResponseType
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceState
dialogProvider
userDefaultsProvider
analyticsService
IntentType
IntentHandler
IntentResponseType
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
music
podcast
audiobook
iTunesU
radio
audio
video
AllCases
RawValue
testMode
testGlobals
globals
accessory
room
playbackController
deviceSelector
analyticsService
aceServiceHelper
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
playbackController
deviceSelector
analyticsService
aceServiceHelper
deviceState
deviceState
languageDialogProvider
analyticsService
IntentType
IntentHandler
IntentResponseType
ItemType
deviceState
languageDialogProvider
controlsDialogProvider
analyticsService
IntentType
IntentHandler
IntentResponseType
deviceSelector
accessoryVolumeController
analyticsService
playbackController
deviceState
aceServiceHelper
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
playbackController
deviceSelector
analyticsService
aceServiceHelper
wrappedFlow
shouldRedirectToServer
ExitValue
IntentType
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
deviceState
volumeControlsDialogProvider
IntentType
IntentResponseType
flowFactory
deviceSelector
aceService
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceState
dialogProvider
userDefaultsProvider
playbackController
analyticsService
IntentType
IntentHandler
IntentResponseType
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
intent
playbackController
deviceSelector
timer
queue
assertion
analyticsService
deviceState
aceServiceHelper
mediaControlsOnSiriX
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
userDefaultsProvider
playbackController
analyticsService
IntentType
IntentHandler
IntentResponseType
deviceState
aceService
dialogProvider
isIOS
isTV
isHomePodLocalOnly
requestedStateIsCurrentState
isSameRoomOnly
smartControlFarRooms
volumeLevel
speaker
preferSpeakerName
requestedVolumeLevel
isMediaPlaying
isIncreaseLevel
isDecreaseLevel
deviceState
audioSession
dialogProvider
requestedLanguage
isClosedCaptionRequest
deviceIsInferred
isIOS
isTV
isHomePodLocalOnly
speaker
isSameRoomOnly
smartControlFarRooms
rooms
hasInHere
isEnable
isEnableSubtitles
isOn
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
volumeControlsDialogProvider
deviceState
IntentType
IntentHandler
IntentResponseType
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceState
dialogProvider
IntentType
IntentResponseType
deviceState
languageDialogProvider
analyticsService
IntentType
IntentHandler
IntentResponseType
dialogProvider
deviceState
IntentType
IntentHandler
IntentResponseType
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
homePod
appleTV
macOS
watchOS
deviceState
dialogProvider
IntentType
IntentResponseType
deviceState
dialogProvider
IntentType
IntentResponseType
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
playbackController
deviceSelector
analyticsService
aceServiceHelper
deviceState
deviceState
dialogProvider
userDefaultsProvider
analyticsService
IntentType
IntentHandler
IntentResponseType
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
flowFactory
contextProvider
name
unknown
deviceState
languageDialogProvider
IntentType
IntentResponseType
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceState
dialogProvider
userDefaultsProvider
analyticsService
IntentType
IntentHandler
IntentResponseType
deviceState
languageDialogProvider
IntentType
IntentResponseType
aceServiceInvoker
deviceState
dialogProvider
analyticsService
ExitValue
ItemType
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
contextProvider
analyticsService
IntentType
IntentResponseType
IntentHandler
deviceState
dialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceSelector
analyticsService
playbackController
deviceState
aceServiceHelper
intent
iPhone
iPad
homePod
appleTV
watch
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
dialogProvider
isIOS
isTV
isHomePodLocalOnly
speaker
requestedStateIsCurrentState
isSameRoomOnly
smartControlFarRooms
isSourceMissing
isDestinationMissing
skipForwardDuration
skipBackwardDuration
playheadPosition
isMultipleSpeakers
shuffleEnabled
repeatMode
deviceType
speakerOperation
isEnableShuffle
rooms
isShuffleEnabled
hasInHere
isSkipToPrevious
isSkipPrevious
isFastForward
isEnableRepeat
appName
secs
none
phone
watch
television
homepod
unknown
addSpeaker
moveSpeaker
RawValue
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
deviceState
dialogProvider
IntentType
IntentResponseType
NLIntentType
NLContextProvider
deviceResolutionAnalytics
analyticsService
deviceState
localizationProvider
resumeLongWindowDuration
resumeShortWindowDuration
autoResumableProximitiesInLongWindow
autoResumableProximitiesInShortWindow
groupControlDevice
roomCount
deviceState
dialogProvider
languageDialogProvider
IntentType
IntentResponseType
ItemType
DisambiguationItemContainerType
NLIntentType
NLContextProvider
deviceState
dialogProvider
userDefaultsProvider
playbackController
analyticsService
IntentType
IntentHandler
IntentResponseType
playbackController
deviceSelector
analyticsService
aceServiceHelper
cancel
audio
subtitles
closedCaptioning
subtitlesForDeafHardHearing
enable
disable
getAttributeValue
previousAudio
intent
AllCases
RawValue
ItemType
playbackController
deviceSelector
analyticsService
aceServiceHelper
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
code
RawValue
RawValue
RawValue
RawValue
RawValue
RawValue
RawValue
RawValue
RawValue
RawValue
RawValue
RawValue
RawValue
RawValue
RawValue
renderedText
setRenderedText:
appId
setAppId:
callbacks
setCallbacks:
requiresResponse
supportsSecureCoding
aceId
setAceId:
refId
setRefId:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
encodeWithCoder:
initWithCoder:
init
initWithDictionary:
initWithDictionary:context:
dictionary
properties
encodedClassName
groupIdentifier
copyWithZone:
mutableCopyWithZone:
routeId
context
proximity
roomName
initWithChoices:
initWithTask:
typeName
setTaskType:
setMediaType:
setIsWholeHouseAudio:
setWholeHouseAudioDestinationContext:
setMediaPlayerContext:
devices
deviceQueries
referenceString
mediaType
setItems:
setTitle:
setUtterance:
setCommands:
setDisambiguated:
setDevices:
device
direction
setDevice:
mediaRouteIdentifier
identifier
serializedContextByKey
initWithSerializedBackingStore:
state
unsignedLongLongValue
playbackState
hasFiringTimers
timersByID
mostRecentFiringTimer
firedDate
hasFiringAlarms
mostRecentFiringAlarm
initWithIdentifier:displayString:
setProximity:
nowPlayingTimestamp
setNowPlayingTimestamp:
setNowPlayingState:
setNowPlayingMediaType:
setRouteId:
setGroupId:
isProxyGroupPlayer
setSilentPrimary:
disambiguationItems
groupLeader
groupId
setGroupLeader:
nowPlayingState
nowPlayingMediaType
type
groupName
setExcludeGroup:
streams
setType:
setIncludesTVs:
setStreams:
notRequired
name
setContext:
setRoomName:
JSONObjectWithData:options:error:
boolForKey:
isDeviceSelectedUsingContext
numberOfAffectedRooms
removeObjectForKey:
objectForKey:
setFloat:forKey:
initWithSuiteName:
setUserActivity:
volumeLevel
volumeSettingType
volumeSettingState
resolvedVolumeOutput
floatValue
currentVolumeOutput
deviceContext
unsupported
dealloc
handleSetVolumeLevel:completion:
confirmSetVolumeLevel:completion:
resolveDevicesForSetVolumeLevel:withCompletion:
resolveVolumeLevelForSetVolumeLevel:withCompletion:
.cxx_destruct
setVolumeSettingType:
volumeSettingValue
volumeSettingUnit
setCurrentVolumeOutput:
needsValue
setResolvedVolumeOutput:
resolutionResultConfirmationRequiredWithItemToConfirm:
setCurrentVolumeLevel:
setVolumeLevel:
sharedAnalytics
logEventWithType:context:
sharedLoggingService
logToCoreAnalyticsCrossDeviceRequestEvent:
confirmed
disambiguated
setCompletionStatus:
logInstrumentation:machAbsoluteTime:turnIdentifier:
initWithReference:
handleSkipContent:completion:
resolveDevicesForSkipContent:withCompletion:
confirmSkipContent:completion:
languageIdentifier
languageTag
handleSetRepeatState:completion:
resolveDevicesForSetRepeatState:withCompletion:
confirmSetRepeatState:completion:
repeatState
setDeviceQueries:
integerValue
runSiriKitExecutorCommandWithContext:payload:
wrapCommandInStartLocalRequest:
initWithOfferedAct:
autoupdatingCurrentLocale
duration
unsupportedReason
mediaSystemId
isEndpoint
skipConfirmation
setIsDeviceSelectedUsingContext:
setName:
setMediaSystemId:
setIsEndpoint:
setEligibleDeviceCount:
enable
synchronize
arrayForKey:
setDirection:
handleSkipTime:completion:
resolveDurationForSkipTime:withCompletion:
resolveDevicesForSkipTime:withCompletion:
confirmSkipTime:completion:
handleAddSpeaker:completion:
resolveSourceForAddSpeaker:withCompletion:
resolveDestinationsForAddSpeaker:withCompletion:
confirmAddSpeaker:completion:
source
deviceQuantifierString
destinations
commands
setConfirmCommands:
setDenyCommands:
label
setConfirmText:
setDenyText:
setCancelTrigger:
setAllConfirmationOptions:
setLabel:
setIconType:
privatePlayMediaIntentData
isAmbiguousPlay
setDeviceContext:
setPlaybackRouteUniqueIdentifier:
setPlaybackRouteUniqueIdentifierIsEncrypted:
setApplicationBundleIdentifier:
setSash:
excludeGroup
includesTVs
volumeSettingQualifier
settingAttribute
setShuffleState:
bundleForClass:
handleResumeMedia:completion:
resolveDevicesForResumeMedia:withCompletion:
confirmResumeMedia:completion:
setTargetBundleIdentifier:
handleSetAudioLanguage:completion:
resolveDeviceForSetAudioLanguage:withCompletion:
resolveLanguageForSetAudioLanguage:withCompletion:
confirmSetAudioLanguage:completion:
language
handleGetVolumeLevel:completion:
resolveDeviceForGetVolumeLevel:withCompletion:
confirmGetVolumeLevel:completion:
isActive
setLanguageTag:
setLanguageIdentifier:
setIsActive:
setIsDirectInvocation:
handleSetShuffleState:completion:
resolveDevicesForSetShuffleState:withCompletion:
confirmSetShuffleState:completion:
shuffleState
setConfirmed:
setGroupName:
setLanguage:
resolveDeviceForWhatDidTheySay:withCompletion:
handleWhatDidTheySay:completion:
confirmWhatDidTheySay:completion:
currentProcess
attributeWithDomain:name:
initWithExplanation:target:attributes:
isValid
acquireWithInvalidationHandler:
invalidate
startTime
playheadPosition
currentRoute
outputs
portType
currentVolumeLevel
setStartTime:
setEnable:
silentPrimary
setIsSkipToEnd:
setPlayheadPosition:
setShouldStartPlaybackAfterSeek:
setCentered:
setAction:
setText:
setDecoratedLabel:
setTemplateItems:
initWithIdentifier:
setUserData:
handleSetSubtitleState:completion:
resolveDeviceForSetSubtitleState:withCompletion:
resolveLanguageForSetSubtitleState:withCompletion:
confirmSetSubtitleState:completion:
setDuration:
setVolumeSettingState:
setVolumeSettingQualifier:
setVolumeSettingUnit:
setSettingAttribute:
setVolumeSettingValue:
setRepeatState:
setZoneNames:
setCurrentHome:
setCurrentRoom:
handleMoveSpeaker:completion:
resolveSourceForMoveSpeaker:withCompletion:
resolveDestinationsForMoveSpeaker:withCompletion:
confirmMoveSpeaker:completion:
fromEntity
setDeviceQuantifierString:
deviceTypeString
setDeviceTypeString:
placeHintString
setZoneName:
setAccessoryName:
setServiceName:
setServiceGroup:
initWithBool:
setFromEntity:
setPlaceHintString:
setReferenceString:
serviceGroup
serviceName
accessoryName
zoneName
initWithNearbyDevicesLoggingID:
addCoreAnalyticsDeviceTargetedWithContextIdentifier:commandResultDescription:
setSkipConfirmation:
doubleForKey:
handlePauseMedia:completion:
resolveDevicesForPauseMedia:withCompletion:
confirmPauseMedia:completion:
isSkipToEnd
successWithResolvedTimeInterval:
handleSeekTime:completion:
resolveDevicesForSeekTime:withCompletion:
resolvePlayheadPositionForSeekTime:withCompletion:
confirmSeekTime:completion:
shouldStartPlaybackAfterSeek
initWithIdentifier:backingStore:
initWithDomain:verb:parametersByName:
initWithBackingStore:
initWithPropertiesByName:
unsupportedWithReason:
initWithJSONDictionary:forIntent:
isDirectInvocation
code
setCode:
initWithCode:userActivity:
unsupportedForReason:
targetBundleIdentifier
setDestinations:
setSource:
successWithResolvedValue:
confirmationRequiredWithValueToConfirm:
successWithResolvedDirection:
confirmationRequiredWithDirectionToConfirm:
successWithResolvedRepeatState:
confirmationRequiredWithRepeatStateToConfirm:
successWithResolvedShuffleState:
confirmationRequiredWithShuffleStateToConfirm:
successWithResolvedSubtitleState:
confirmationRequiredWithSubtitleStateToConfirm:
successWithResolvedDeviceProximity:
confirmationRequiredWithDeviceProximityToConfirm:
successWithResolvedNowPlayingState:
confirmationRequiredWithNowPlayingStateToConfirm:
successWithResolvedSubtitleType:
confirmationRequiredWithSubtitleTypeToConfirm:
successWithResolvedNowPlayingMediaType:
confirmationRequiredWithNowPlayingMediaTypeToConfirm:
successWithResolvedNLMediaType:
confirmationRequiredWithNLMediaTypeToConfirm:
successWithResolvedVolumeSettingState:
confirmationRequiredWithVolumeSettingStateToConfirm:
successWithResolvedVolumeSettingUnit:
confirmationRequiredWithVolumeSettingUnitToConfirm:
successWithResolvedVolumeSettingAttribute:
confirmationRequiredWithVolumeSettingAttributeToConfirm:
successWithResolvedVolumeSettingQualifier:
confirmationRequiredWithVolumeSettingQualifierToConfirm:
successWithResolvedVolumeSettingType:
confirmationRequiredWithVolumeSettingTypeToConfirm:
successWithResolvedGroupType:
confirmationRequiredWithGroupTypeToConfirm:
successWithResolvedObject:
disambiguationWithObjectsToDisambiguate:
confirmationRequiredWithObjectToConfirm:
initWithIdentifier:displayString:pronunciationHint:
zoneNames
currentHome
currentRoom
successWithResolvedDevice:
disambiguationWithDevicesToDisambiguate:
confirmationRequiredWithDeviceToConfirm:
setNumberOfAffectedRooms:
successWithResolvedSignedDuration:
disambiguationWithSignedDurationsToDisambiguate:
confirmationRequiredWithSignedDurationToConfirm:
successWithResolvedDeviceContext:
disambiguationWithDeviceContextsToDisambiguate:
confirmationRequiredWithDeviceContextToConfirm:
successWithResolvedLanguageOption:
disambiguationWithLanguageOptionsToDisambiguate:
confirmationRequiredWithLanguageOptionToConfirm:
successWithResolvedDeviceQuery:
disambiguationWithDeviceQuerysToDisambiguate:
confirmationRequiredWithDeviceQueryToConfirm:
successWithResolvedVolumeLevel:
disambiguationWithVolumeLevelsToDisambiguate:
confirmationRequiredWithVolumeLevelToConfirm:
successWithResolvedDeviceGroup:
disambiguationWithDeviceGroupsToDisambiguate:
confirmationRequiredWithDeviceGroupToConfirm:
successWithResolvedMediaStream:
disambiguationWithMediaStreamsToDisambiguate:
confirmationRequiredWithMediaStreamToConfirm:
first
second
third
fourth
fifth
sixth
seventh
eighth
ninth
tenth
eleventh
twelfth
thirteenth
fourteenth
fifteenth
sixteenth
seventeenth
eighteenth
nineteenth
twentieth
twenty first
twenty second
twenty third
twenty fourth
twenty fifth
first
second
third
fourth
fifth
sixth
seventh
eighth
ninth
tenth
eleventh
twelfth
thirteenth
fourteenth
fifteenth
sixteenth
seventeenth
eighteenth
nineteenth
twentieth
twenty first
twenty second
twenty third
twenty fourth
twenty fifth
first
second
third
fourth
fifth
sixth
seventh
eighth
ninth
tenth
eleventh
twelfth
thirteenth
fourteenth
fifteenth
sixteenth
seventeenth
eighteenth
nineteenth
twentieth
twenty first
twenty second
twenty third
twenty fourth
twenty fifth
resume
stop
pause
skipForward
skipBackward
resume
pause
skipForward
skipBackward
noVerb
setNumber
increaseBy
decreaseBy
summarise
enable
disable
noVerb
mediaReference
