%p [%s center=<%f,%f>]
_traverse_postorder
GVNode.m
0 && "unreachable"
_traverse_postorder_randomized
_traverse_preorder
_traverse_preorder_randomized
%p [%p -> %p%@]
 (r)
v32@?0@"GVEdge"8Q16^B24
Nodes:
Edges:
-[GVRank inCrossings]
GVLayout.m
inNodeI.rank == inNodeJ.rank
-[GVRank outCrossings]
outNodeI.rank == outNodeJ.rank
-[GVHorizontalRank centerNodesWithRespectoTo:]
rank == prev || rank == next
Q16@?0@"GVNode"8
-[GVVerticalRank centerNodesWithRespectoTo:]
@"NSMutableSet"32@?0@"GVNode"8^@16^@24
B32@?0@"GVNode"8@"GVNode"16Q24
-[GVLayout makeFeasibleTree]
treeNode && incidentNode
q24@?0@"GVNode"8@"GVNode"16
+[GVInternalRenderer drawAllEdges:renderer:]
GVRenderer.m
{CGPoint=dd}
GVNode
GVDummyNode
GVEdge
GVGraph
GVRank
GVHorizontalRank
GVVerticalRank
GVLayout
GVInternalRenderer
T@"NSMutableArray",&,N,Vdummies
T@"GVNode",N,Vnext
Td,N,Vw
T@"GVNode",R,N,Vfrom
Td,N,Vy
T@"GVRank",N,Vnext
T{CGPoint=dd},N
T@"NSMutableArray",&,N,Vranks
computePriority
T@"NSMutableOrderedSet",&,N,Vedges
dealloc
T@"NSMutableOrderedSet",&,N,Vnodes
TB,N,Vreversed
inNodes
TQ,N,VoutPriority
initializeRanks
Td,N
removeEdgeFrom:
Tq,N,Vindex
render:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
setOutPriority:
T{CGSize=dd},N
weightedMedian:
_removeCycleDFS:visistedNodes:nodesInStack:
T@"GVGraph",N,Vgraph
Td,N,Vh
T@"GVNode",N,Vprev
Td,N,Vx
T@"GVNode",R,N,Vto
Ti,N,Vdirection
T@"GVRank",N,Vprev
addEdgeFrom:to:
T@"NSMutableArray",&,N,VselfEdges
containsObject:
T@"NSMutableOrderedSet",&,N,VinNodes
dummies
T@"NSMutableOrderedSet",&,N,VoutNodes
hasEdgeFrom:to:
TQ,N,VinPriority
initializeOrder
TQ,R
medianPosition:
Td,R,N
removeSelfEdges
Tq,N,Vrank
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGSize=dd},N,Vseparation
addEdgeFrom:
addEdgeFrom:to:reversed:
addEdgeTo:
addNode:
addObject:
allEdges
allNodes
array
arrayWithCapacity:
assignCoordinates
assignNodeCoordinates
assignNodePriorities
assignRankCoordinates
assignRanks
balanceRanks
bounds
buildNodeIterators
buildRankIterators
center
centerNode:at:
centerNodesWithRespectoTo:
commitOrder
connectedSubgraphs
count
countByEnumeratingWithState:objects:count:
crossings
currentCrossings
description
direction
doLayout:direction:separation:
drawAllEdges:renderer:
drawAllNodes:renderer:
drawEdge:withPath:
drawEdgesFirst
drawNode:
edgeFrom:to:
edges
enumerateObjectsUsingBlock:
exchangeNodeAtIndex:withNodeAtIndex:
exchangeObjectAtIndex:withObjectAtIndex:
firstObject
frame
from
graph
hasEdgeFrom:
hasEdgeTo:
hasNode:
height
inCrossings
inDegree
inPriority
index
init
initWithFromNode:to:
initWithSeparation:
initializeNodeCoordinates
isMemberOfClass:
iterateOverAllEdges:
iterateOverAllNodes:
lastObject
layoutGraph:withDirection:separation:
makeFeasibleTree
medianSort:withRespectTo:
medianValueOf:withRespectTo:
minimizeCutValues
minusSet:
mutableCopy
neighborsOfNode:
next
nextObject
nodes
normalizeRanks
objectAtIndexedSubscript:
objectEnumerator
orderVertices
orderedSet
origin
outCrossings
outDegree
outNodes
outPriority
packCutX:
packCutY:
prev
rank
ranks
removeAllObjects
removeCycles
removeEdgeFrom:to:
removeEdgeTo:
removeNode:
removeObject:
removeObjectAtIndex:
render:renderer:
restoreOrder
reverseEdge:
reverseObjectEnumerator
reversed
saveOrder
savedOrder
selfEdges
separation
setCanvasWidth:height:
setCenter:
setCx:
setCy:
setDirection:
setDummies:
setEdges:
setFrame:
setGraph:
setH:
setInNodes:
setInPriority:
setIndex:
setNext:
setNodes:
setObject:atIndexedSubscript:
setOrigin:
setOutNodes:
setPrev:
setRank:
setRanks:
setReversed:
setSelfEdges:
setSeparation:
setSize:
setW:
setWithObject:
setX:
setY:
size
sizeForDummy
sortByIndex
sortUsingComparator:
straightenX
straightenY
string
stringByAppendingString:
stringWithFormat:
transpose
traversePostorder:withCallback:stopper:randomize:
traversePreorder:withCallback:randomize:
undoRemoveCycles
undoRemoveSelfEdges
undoReverseEdge:
unionOrderedSet:
valueWithBytes:objCType:
width
@16@0:8
v16@0:8
d16@0:8
v24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
Q16@0:8
B24@0:8@16
v24@0:8@16
v40@0:8i16@?20@?28B36
v32@0:8i16@?20B28
q16@0:8
v24@0:8q16
v24@0:8Q16
@"NSMutableOrderedSet"
@"GVNode"
@32@0:8@16@24
B16@0:8
v20@0:8B16
@"NSMutableArray"
B32@0:8@16@24
v32@0:8@16@24
v36@0:8@16@24B32
v24@0:8@?16
@32@0:8{CGSize=dd}16
@24@0:8@16
v32@0:8Q16Q24
v32@0:8@16d24
@"GVRank"
{CGSize=dd}44@0:8@16i24{CGSize=dd}28
v40@0:8@16@24@32
Q32@0:8@16@24
i16@0:8
v20@0:8i16
@"GVGraph"
{CGSize="width"d"height"d}
%p [%s center=<%f,%f>]
_traverse_postorder
GVNode.m
0 && "unreachable"
_traverse_postorder_randomized
_traverse_preorder
_traverse_preorder_randomized
%p [%p -> %p%@]
 (r)
v32@?0@"GVEdge"8Q16^B24
Nodes:
Edges:
-[GVRank inCrossings]
GVLayout.m
inNodeI.rank == inNodeJ.rank
-[GVRank outCrossings]
outNodeI.rank == outNodeJ.rank
-[GVHorizontalRank centerNodesWithRespectoTo:]
rank == prev || rank == next
Q16@?0@"GVNode"8
-[GVVerticalRank centerNodesWithRespectoTo:]
@"NSMutableSet"32@?0@"GVNode"8^@16^@24
B32@?0@"GVNode"8@"GVNode"16Q24
-[GVLayout makeFeasibleTree]
treeNode && incidentNode
q24@?0@"GVNode"8@"GVNode"16
+[GVInternalRenderer drawAllEdges:renderer:]
GVRenderer.m
{CGPoint=dd}
GVNode
GVDummyNode
GVEdge
GVGraph
GVRank
GVHorizontalRank
GVVerticalRank
GVLayout
GVInternalRenderer
T@"NSMutableArray",&,N,Vdummies
T@"GVNode",N,Vnext
Td,N,Vw
T@"GVNode",R,N,Vfrom
Td,N,Vy
T@"GVRank",N,Vnext
T{CGPoint=dd},N
T@"NSMutableArray",&,N,Vranks
computePriority
T@"NSMutableOrderedSet",&,N,Vedges
dealloc
T@"NSMutableOrderedSet",&,N,Vnodes
TB,N,Vreversed
inNodes
TQ,N,VoutPriority
initializeRanks
Td,N
removeEdgeFrom:
Tq,N,Vindex
render:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
setOutPriority:
T{CGSize=dd},N
weightedMedian:
_removeCycleDFS:visistedNodes:nodesInStack:
T@"GVGraph",N,Vgraph
Td,N,Vh
T@"GVNode",N,Vprev
Td,N,Vx
T@"GVNode",R,N,Vto
Ti,N,Vdirection
T@"GVRank",N,Vprev
addEdgeFrom:to:
T@"NSMutableArray",&,N,VselfEdges
containsObject:
T@"NSMutableOrderedSet",&,N,VinNodes
dummies
T@"NSMutableOrderedSet",&,N,VoutNodes
hasEdgeFrom:to:
TQ,N,VinPriority
initializeOrder
TQ,R
medianPosition:
Td,R,N
removeSelfEdges
Tq,N,Vrank
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGSize=dd},N,Vseparation
addEdgeFrom:
addEdgeFrom:to:reversed:
addEdgeTo:
addNode:
addObject:
allEdges
allNodes
array
arrayWithCapacity:
assignCoordinates
assignNodeCoordinates
assignNodePriorities
assignRankCoordinates
assignRanks
balanceRanks
bounds
buildNodeIterators
buildRankIterators
center
centerNode:at:
centerNodesWithRespectoTo:
commitOrder
connectedSubgraphs
count
countByEnumeratingWithState:objects:count:
crossings
currentCrossings
description
direction
doLayout:direction:separation:
drawAllEdges:renderer:
drawAllNodes:renderer:
drawEdge:withPath:
drawEdgesFirst
drawNode:
edgeFrom:to:
edges
enumerateObjectsUsingBlock:
exchangeNodeAtIndex:withNodeAtIndex:
exchangeObjectAtIndex:withObjectAtIndex:
firstObject
frame
from
graph
hasEdgeFrom:
hasEdgeTo:
hasNode:
height
inCrossings
inDegree
inPriority
index
init
initWithFromNode:to:
initWithSeparation:
initializeNodeCoordinates
isMemberOfClass:
iterateOverAllEdges:
iterateOverAllNodes:
lastObject
layoutGraph:withDirection:separation:
makeFeasibleTree
medianSort:withRespectTo:
medianValueOf:withRespectTo:
minimizeCutValues
minusSet:
mutableCopy
neighborsOfNode:
next
nextObject
nodes
normalizeRanks
objectAtIndexedSubscript:
objectEnumerator
orderVertices
orderedSet
origin
outCrossings
outDegree
outNodes
outPriority
packCutX:
packCutY:
prev
rank
ranks
removeAllObjects
removeCycles
removeEdgeFrom:to:
removeEdgeTo:
removeNode:
removeObject:
removeObjectAtIndex:
render:renderer:
restoreOrder
reverseEdge:
reverseObjectEnumerator
reversed
saveOrder
savedOrder
selfEdges
separation
setCanvasWidth:height:
setCenter:
setCx:
setCy:
setDirection:
setDummies:
setEdges:
setFrame:
setGraph:
setH:
setInNodes:
setInPriority:
setIndex:
setNext:
setNodes:
setObject:atIndexedSubscript:
setOrigin:
setOutNodes:
setPrev:
setRank:
setRanks:
setReversed:
setSelfEdges:
setSeparation:
setSize:
setW:
setWithObject:
setX:
setY:
size
sizeForDummy
sortByIndex
sortUsingComparator:
straightenX
straightenY
string
stringByAppendingString:
stringWithFormat:
transpose
traversePostorder:withCallback:stopper:randomize:
traversePreorder:withCallback:randomize:
undoRemoveCycles
undoRemoveSelfEdges
undoReverseEdge:
unionOrderedSet:
valueWithBytes:objCType:
width
@16@0:8
v16@0:8
d16@0:8
v24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
Q16@0:8
B24@0:8@16
v24@0:8@16
v40@0:8i16@?20@?28B36
v32@0:8i16@?20B28
q16@0:8
v24@0:8q16
v24@0:8Q16
@"NSMutableOrderedSet"
@"GVNode"
@32@0:8@16@24
B16@0:8
v20@0:8B16
@"NSMutableArray"
B32@0:8@16@24
v32@0:8@16@24
v36@0:8@16@24B32
v24@0:8@?16
@32@0:8{CGSize=dd}16
@24@0:8@16
v32@0:8Q16Q24
v32@0:8@16d24
@"GVRank"
{CGSize=dd}44@0:8@16i24{CGSize=dd}28
v40@0:8@16@24@32
Q32@0:8@16@24
i16@0:8
v20@0:8i16
@"GVGraph"
{CGSize="width"d"height"d}
