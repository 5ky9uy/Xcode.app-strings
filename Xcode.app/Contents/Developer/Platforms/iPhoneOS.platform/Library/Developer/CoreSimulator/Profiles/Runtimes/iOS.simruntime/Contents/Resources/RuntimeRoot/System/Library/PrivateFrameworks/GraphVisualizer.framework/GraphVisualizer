%p [%s center=<%f,%f>]
_traverse_postorder
GVNode.m
0 && "unreachable"
_traverse_postorder_randomized
_traverse_preorder
_traverse_preorder_randomized
%p [%p -> %p%@]
 (r)
v32@?0@"GVEdge"8Q16^B24
Nodes:
Edges:
-[GVRank inCrossings]
GVLayout.m
inNodeI.rank == inNodeJ.rank
-[GVRank outCrossings]
outNodeI.rank == outNodeJ.rank
-[GVHorizontalRank centerNodesWithRespectoTo:]
rank == prev || rank == next
Q16@?0@"GVNode"8
-[GVVerticalRank centerNodesWithRespectoTo:]
@"NSMutableSet"32@?0@"GVNode"8^@16^@24
B32@?0@"GVNode"8@"GVNode"16Q24
-[GVLayout makeFeasibleTree]
treeNode && incidentNode
q24@?0@"GVNode"8@"GVNode"16
+[GVInternalRenderer drawAllEdges:renderer:]
GVRenderer.m
{CGPoint=dd}
GVNode
GVDummyNode
GVEdge
GVGraph
GVRank
GVHorizontalRank
GVVerticalRank
GVLayout
GVInternalRenderer
init
dealloc
inNodes
count
outNodes
containsObject:
addObject:
removeObject:
countByEnumeratingWithState:objects:count:
isMemberOfClass:
center
stringWithFormat:
setCx:
setCy:
frame
setFrame:
origin
setOrigin:
setCenter:
size
setSize:
inDegree
outDegree
hasEdgeFrom:
hasEdgeTo:
addEdgeFrom:
addEdgeTo:
removeEdgeFrom:
removeEdgeTo:
computePriority
description
traversePostorder:withCallback:stopper:randomize:
traversePreorder:withCallback:randomize:
setX:
setY:
setW:
setH:
setInNodes:
setOutNodes:
rank
setRank:
index
setIndex:
prev
setPrev:
next
setNext:
inPriority
setInPriority:
outPriority
setOutPriority:
Td,N,Vx
Td,N,Vy
Td,N,Vw
Td,N,Vh
Td,N
T@"NSMutableOrderedSet",&,N,VinNodes
T@"NSMutableOrderedSet",&,N,VoutNodes
TQ,R
Tq,N,Vrank
Tq,N,Vindex
T@"GVNode",N,Vprev
T@"GVNode",N,Vnext
TQ,N,VinPriority
TQ,N,VoutPriority
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{CGPoint=dd},N
T{CGSize=dd},N
orderedSet
unionOrderedSet:
minusSet:
array
mutableCopy
exchangeObjectAtIndex:withObjectAtIndex:
initWithFromNode:to:
from
dummies
setDummies:
reversed
setReversed:
T@"NSMutableArray",&,N,Vdummies
TB,N,Vreversed
T@"GVNode",R,N,Vfrom
T@"GVNode",R,N,Vto
enumerateObjectsUsingBlock:
hasEdgeFrom:to:
edgeFrom:to:
removeEdgeFrom:to:
addEdgeFrom:to:reversed:
direction
separation
layoutGraph:withDirection:separation:
setCanvasWidth:height:
render:renderer:
string
stringByAppendingString:
allNodes
hasNode:
addNode:
removeNode:
allEdges
addEdgeFrom:to:
reverseEdge:
undoReverseEdge:
connectedSubgraphs
bounds
render:
iterateOverAllEdges:
iterateOverAllNodes:
nodes
setNodes:
edges
setEdges:
T@"NSMutableOrderedSet",&,N,Vnodes
T@"NSMutableOrderedSet",&,N,Vedges
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
objectAtIndexedSubscript:
setObject:atIndexedSubscript:
objectEnumerator
nextObject
reverseObjectEnumerator
initWithSeparation:
neighborsOfNode:
sortByIndex
exchangeNodeAtIndex:withNodeAtIndex:
buildNodeIterators
inCrossings
outCrossings
width
height
sizeForDummy
centerNodesWithRespectoTo:
centerNode:at:
T@"GVRank",N,Vprev
T@"GVRank",N,Vnext
Td,R,N
doLayout:direction:separation:
removeSelfEdges
removeCycles
assignRanks
orderVertices
assignCoordinates
undoRemoveCycles
removeAllObjects
_removeCycleDFS:visistedNodes:nodesInStack:
makeFeasibleTree
minimizeCutValues
normalizeRanks
balanceRanks
buildRankIterators
arrayWithCapacity:
firstObject
removeObjectAtIndex:
initializeRanks
setWithObject:
initializeOrder
weightedMedian:
transpose
commitOrder
crossings
saveOrder
restoreOrder
medianValueOf:withRespectTo:
medianSort:withRespectTo:
lastObject
assignNodePriorities
assignNodeCoordinates
assignRankCoordinates
initializeNodeCoordinates
medianPosition:
packCutX:
straightenX
packCutY:
straightenY
undoRemoveSelfEdges
graph
setGraph:
setDirection:
setSeparation:
selfEdges
setSelfEdges:
ranks
setRanks:
savedOrder
currentCrossings
T@"GVGraph",N,Vgraph
Ti,N,Vdirection
T{CGSize=dd},N,Vseparation
T@"NSMutableArray",&,N,VselfEdges
T@"NSMutableArray",&,N,Vranks
sortUsingComparator:
drawNode:
drawEdge:withPath:
drawEdgesFirst
drawAllEdges:renderer:
drawAllNodes:renderer:
valueWithBytes:objCType:
@16@0:8
v16@0:8
d16@0:8
v24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
Q16@0:8
B24@0:8@16
v24@0:8@16
v40@0:8i16@?20@?28B36
v32@0:8i16@?20B28
q16@0:8
v24@0:8q16
v24@0:8Q16
@"NSMutableOrderedSet"
@"GVNode"
@32@0:8@16@24
B16@0:8
v20@0:8B16
@"NSMutableArray"
B32@0:8@16@24
v32@0:8@16@24
v36@0:8@16@24B32
v24@0:8@?16
@32@0:8{CGSize=dd}16
@24@0:8@16
v32@0:8Q16Q24
v32@0:8@16d24
@"GVRank"
{CGSize=dd}44@0:8@16i24{CGSize=dd}28
v40@0:8@16@24@32
Q32@0:8@16@24
i16@0:8
v20@0:8i16
@"GVGraph"
{CGSize="width"d"height"d}
%p [%s center=<%f,%f>]
_traverse_postorder
GVNode.m
0 && "unreachable"
_traverse_postorder_randomized
_traverse_preorder
_traverse_preorder_randomized
%p [%p -> %p%@]
 (r)
v32@?0@"GVEdge"8Q16^B24
Nodes:
Edges:
-[GVRank inCrossings]
GVLayout.m
inNodeI.rank == inNodeJ.rank
-[GVRank outCrossings]
outNodeI.rank == outNodeJ.rank
-[GVHorizontalRank centerNodesWithRespectoTo:]
rank == prev || rank == next
Q16@?0@"GVNode"8
-[GVVerticalRank centerNodesWithRespectoTo:]
@"NSMutableSet"32@?0@"GVNode"8^@16^@24
B32@?0@"GVNode"8@"GVNode"16Q24
-[GVLayout makeFeasibleTree]
treeNode && incidentNode
q24@?0@"GVNode"8@"GVNode"16
+[GVInternalRenderer drawAllEdges:renderer:]
GVRenderer.m
{CGPoint=dd}
GVNode
GVDummyNode
GVEdge
GVGraph
GVRank
GVHorizontalRank
GVVerticalRank
GVLayout
GVInternalRenderer
string
exchangeObjectAtIndex:withObjectAtIndex:
drawNode:
minusSet:
addObject:
valueWithBytes:objCType:
orderedSet
drawEdge:withPath:
lastObject
nextObject
removeObjectAtIndex:
countByEnumeratingWithState:objects:count:
enumerateObjectsUsingBlock:
arrayWithCapacity:
unionOrderedSet:
setCanvasWidth:height:
reverseObjectEnumerator
setObject:atIndexedSubscript:
count
removeAllObjects
sortUsingComparator:
stringWithFormat:
removeObject:
isMemberOfClass:
objectEnumerator
setWithObject:
array
containsObject:
firstObject
objectAtIndexedSubscript:
stringByAppendingString:
mutableCopy
init
dealloc
setCx:
setCy:
frame
setFrame:
origin
setOrigin:
center
setCenter:
size
setSize:
inDegree
outDegree
hasEdgeFrom:
hasEdgeTo:
addEdgeFrom:
addEdgeTo:
removeEdgeFrom:
removeEdgeTo:
computePriority
description
traversePostorder:withCallback:stopper:randomize:
traversePreorder:withCallback:randomize:
setX:
setY:
setW:
setH:
inNodes
setInNodes:
outNodes
setOutNodes:
rank
setRank:
index
setIndex:
prev
setPrev:
next
setNext:
inPriority
setInPriority:
outPriority
setOutPriority:
Td,N,Vx
Td,N,Vy
Td,N,Vw
Td,N,Vh
Td,N
T@"NSMutableOrderedSet",&,N,VinNodes
T@"NSMutableOrderedSet",&,N,VoutNodes
TQ,R
Tq,N,Vrank
Tq,N,Vindex
T@"GVNode",N,Vprev
T@"GVNode",N,Vnext
TQ,N,VinPriority
TQ,N,VoutPriority
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{CGPoint=dd},N
T{CGSize=dd},N
initWithFromNode:to:
from
dummies
setDummies:
reversed
setReversed:
T@"NSMutableArray",&,N,Vdummies
TB,N,Vreversed
T@"GVNode",R,N,Vfrom
T@"GVNode",R,N,Vto
direction
separation
allNodes
hasNode:
addNode:
removeNode:
allEdges
edgeFrom:to:
hasEdgeFrom:to:
addEdgeFrom:to:
removeEdgeFrom:to:
addEdgeFrom:to:reversed:
reverseEdge:
undoReverseEdge:
connectedSubgraphs
bounds
render:
iterateOverAllEdges:
iterateOverAllNodes:
nodes
setNodes:
edges
setEdges:
T@"NSMutableOrderedSet",&,N,Vnodes
T@"NSMutableOrderedSet",&,N,Vedges
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
initWithSeparation:
neighborsOfNode:
sortByIndex
exchangeNodeAtIndex:withNodeAtIndex:
buildNodeIterators
inCrossings
outCrossings
width
height
sizeForDummy
centerNodesWithRespectoTo:
centerNode:at:
T@"GVRank",N,Vprev
T@"GVRank",N,Vnext
Td,R,N
layoutGraph:withDirection:separation:
doLayout:direction:separation:
removeSelfEdges
undoRemoveSelfEdges
_removeCycleDFS:visistedNodes:nodesInStack:
removeCycles
undoRemoveCycles
assignRanks
initializeRanks
makeFeasibleTree
minimizeCutValues
normalizeRanks
balanceRanks
buildRankIterators
orderVertices
crossings
saveOrder
restoreOrder
commitOrder
initializeOrder
medianValueOf:withRespectTo:
medianSort:withRespectTo:
weightedMedian:
transpose
assignCoordinates
assignNodePriorities
initializeNodeCoordinates
medianPosition:
packCutX:
packCutY:
straightenX
straightenY
assignNodeCoordinates
assignRankCoordinates
graph
setGraph:
setDirection:
setSeparation:
selfEdges
setSelfEdges:
ranks
setRanks:
savedOrder
currentCrossings
T@"GVGraph",N,Vgraph
Ti,N,Vdirection
T{CGSize=dd},N,Vseparation
T@"NSMutableArray",&,N,VselfEdges
T@"NSMutableArray",&,N,Vranks
drawEdgesFirst
drawAllNodes:renderer:
drawAllEdges:renderer:
render:renderer:
@16@0:8
v16@0:8
d16@0:8
v24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
Q16@0:8
B24@0:8@16
v24@0:8@16
v40@0:8i16@?20@?28B36
v32@0:8i16@?20B28
q16@0:8
v24@0:8q16
v24@0:8Q16
@"NSMutableOrderedSet"
@"GVNode"
@32@0:8@16@24
B16@0:8
v20@0:8B16
@"NSMutableArray"
B32@0:8@16@24
v32@0:8@16@24
v36@0:8@16@24B32
v24@0:8@?16
@32@0:8{CGSize=dd}16
@24@0:8@16
v32@0:8Q16Q24
v32@0:8@16d24
@"GVRank"
{CGSize=dd}44@0:8@16i24{CGSize=dd}28
v40@0:8@16@24@32
Q32@0:8@16@24
i16@0:8
v20@0:8i16
@"GVGraph"
{CGSize="width"d"height"d}
