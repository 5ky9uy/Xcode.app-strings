@(#)PROGRAM:ExtensionFoundation  PROJECT:ExtensionKit-34.5
softlink:r:path:/System/Library/PrivateFrameworks/ExtensionKit.framework/ExtensionKit
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
v8@?0
EXTENSION_KIT_EXTENSION_TYPE
false
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/EXExtension/Extension/Internal/EXRunningExtension.m
__TEXT
__swift5_entry
main
-[_EXRunningExtension installRunloopObserverToPingLaunchdAfterEvent]
EXRunningExtension.m
mainRunLoop != NULL
_EXRunningUIExtension
Unable to find class %s
/System/Library/PrivateFrameworks/ExtensionKit.framework/ExtensionKit
/System/Library/PrivateFrameworks/ExtensionKit.framework/Contents/MacOS/ExtensionKit
EXExtensionPointConfiguration
EXPresentsUserInterface
EXExtensionPrincipalClass
EXSupportsNSExtensionPlistKeys
NSExtensionPrincipalClass
EXConnectionHandlerClass
EXRequiredEntitlements
com.apple.extensionkit.host.extension-point-identifiers
NSExtensionContextHostClass
_EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent
EXConcreteExtension.m
EXAssertionLoggingEnabled
NSExtensionDiscoveryLoggingEnabled
com.apple.foundation.NSExtension
connection
context
discovery
plugin
v24@?0@"NSArray"8@"NSError"16
v24@?0@"NSSet"8@"NSError"16
NSUserElection
v24@?0@"<PKPlugIn>"8@"NSError"16
com.apple.extension.global-state-queue
Unable to create null NSExtensions!
UIApplication
UIApplicationWillEnterForegroundNotification
UIApplicationDidEnterBackgroundNotification
UIApplicationWillResignActiveNotification
UIApplicationDidBecomeActiveNotification
%@ {id = %@}
%@.%@
_connectionUUID != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXConcreteExtension.m
v24@?0@"<NSCopying>"8@"NSError"16
extensionContext != nil
Failed to make extension context for extension: %@ request: %@
Extension assertion was invalidated! request: %@; plugin_identifier: %@
Failed to make XPC connection for extension: %@ request: %@
v16@?0@"NSError"8
v24@?0@"NSUUID"8@"NSError"16
v24@?0@8@"NSError"16
Extension cancelled by host.
Unable to use extension bundle: %@
bundleURL != nil
UUID != nil
Unable to communicate with bundle helper: %@
Cannot access privacy settings for %@: %@
v20@?0B8@"NSError"12
Timed out attempting to resolve bundle!
self.infoDictionary != nil
XPCService
ServiceType
System
_MultipleInstances
NSExtension
NSExtensionDisableTeardownDelay
extensionContextHostClass != nil
The plugin is dead.
__plugIn != nil
!__plugIn.spent
The plugin cannot be restarted.
firstDateIndicatedFor
lastDateManagedOn
extensionState
markedNew
Forcibly dropping assertion for plugIn: %@
safe plugin queue for NSExtension
plugin != nil
Unable to resolve bundle URL: %@
v24@?0@"NSDictionary"8@"NSError"16
com.apple.uifoundation-bundle-helper
MCProfileConnection
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/Contents/MacOS/ManagedConfiguration
RunningBoard
manage_all_extensions
v16@?0^{__CFDictionary=}8
com.apple.extension.resolution-queue
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.extension.session
_extensionRequest
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXExtensionContext.m
CKShare
NSCloudKitShareProvider
UIImage
NSImage
com.apple.extension.protocol-creation
subclassProtocol != NULL
__NSX__HOST__PROTOCOL__
uuid
inputItems
auxVendorProtocol != nil && auxHostProtocol != nil
[self.extensionContext conformsToProtocol:auxHostProtocol.protocol]
v12@?0B8
%@ - UUID: %@ - _isHost: %@
_isDummyExtension:%@
inputItems:
__auxiliaryConnection == nil
com.apple.extension-completion
com.apple.private.extensionkit.host.any-extension
B24@?0@"NSDictionary"8^@16
NSRunLoop
apple-extension-service
_NSApplicationMain
viewbridge
_UIApplicationMain
viewservice
Application
RunLoopType
_AdditionalSubServices
EnvironmentVariables
CFBundlePackageType
XPC!
Launching extension %@(%@) for host %d
com.apple.pluginkit.plugin-service
Active query: %lx-%d
Connection observer for connection: `%@`
NSExtensionAttributes
NSExtensionActivationRule
extensionItems
attachments
registeredTypeIdentifiers
supportsJavaScript
public.url
com.apple.webarchive
com.apple.active-webpage
B24@?0@"NSExtensionItem"8@"NSDictionary"16
@"NSArray"16@?0@"NSDictionary"8
B24@?0@8@"NSDictionary"16
@"NSArray"16@?0@"NSExtensionItem"8
@"NSArray"16@?0@"NSItemProvider"8
B24@?0@"NSExtensionItem"8@"NSItemProvider"16
v24@?0@8Q16
B32@?0@8Q16^B24
_matchingDictionaryRepresentation
NSExtensionContainingViewControllerClass
_EXQuery async execution queue
v16@?0@"NSSet"8
_extensionPointIdentifier
_platform
_predicate
EXQuery: extension point %@ platforms: %d
EX Service client notify queue 
-[_EXServiceClient extensionsWithQueries:]_block_invoke
-[_EXServiceClient extensionsWithQueries:]
-[_EXServiceClient fetchExtensionsWithQueries:completionHandler:]_block_invoke
-[_EXServiceClient fetchExtensionsWithQueries:completionHandler:]
-[_EXServiceClient _beginActiveQuery:]_block_invoke
-[_EXServiceClient prepareConnectionForExtension:error:]_block_invoke
v24@?0@"_EXExtensionProcess"8@"NSError"16
@count
NSDictionary
@avg
@max
@min
@sum
B16@?0@8
NSNumber
@distinctUnionOfObjects
@unionOfObjects
@distinctUnionOfArrays
@unionOfArrays
NSArray
@distinctUnionOfSets
NSSet
NSTruePredicate
Use of NSTruePredicate is forbidden: %@
%s: NSPredicate considered unsafe: %@
EXExtensionIsPredicateSafeToExecuteWithObject
NSExtensionActivationDictionaryVersion
NSExtensionActivationUsesStrictMatching
NSExtensionUseAlternateRules
v32@?0@"NSNumber"8Q16^B24
NSExtensionActivationSupportsLocationWithMaxCount
NSString
length
NSOrderedSet
NSCompoundPredicate
NSComparisonPredicate
NSFalsePredicate
%s: NSPredicateOperator considered unsafe: %ld
EXExtensionIsSafePredicateOperatorTypeForObjectWithSubquerySubstitutions
valueForKey:
valueForKeyPath:
%s: Key%@ "%@" not safe to evaluate with %@
EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions
path
%s: Operand expression not safe to execute %@
%s: No operand expression
%s: Keypath not of expected class (%@, %@)
%s: Argument expression not safe to execute %@
%s: Unexpected number of arguments %ld
from:subtract:
add:to:
%s: Unsafe operand %@
%s: Unexpected selector name %@
%s: Unexpected NSExpression type %ld
%s: Expression considered unsafe: %@
public.plain-text
com.apple.mapkit.map-item
([rule isKindOfClass:objc_getClass("NSString")] || [rule isKindOfClass:objc_getClass("NSDictionary")])
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXConcreteExtension+Filtering.m
NSExtension predicate cache
Generating predicate for predicate dictionary %@
Got predicate %@
activation_rules
plist
RULES
GENERIC_ACCEPT
GENERIC_REJECT_EXCEPT_ONE_OTHER_TYPE
GENERIC_REJECT_EXCEPT_MULTIPLE_OTHER_TYPES
GENERIC_ENFORCE_ALL_TYPES
GENERIC_ENFORCE_ANY_TYPE
GENERIC_ENFORCE_ALL_TYPES_WITH_EXCEPTIONS
GENERIC_ENFORCE_ANY_TYPE_WITH_EXCEPTIONS
Unable to load rules from internal property list, aborting. Error: %@
SPECIFIED_COUNT
TYPE
predicate != NULL
@"NSPredicate"36@?0@"NSString"8@"NSString"16@"NSArray"24i32
OTHER_TYPES
OTHER_TYPE
@"NSPredicate"32@?0@"NSString"8@"NSString"16@"NSArray"24
ACCEPT
REJECT
TYPES
EXCEPT_TYPES
v32@?0@8@16^B24
@"NSPredicate"44@?0@"NSDictionary"8@"NSString"16B24^@28^@36
Generated predicate %@ for rule %@
@"NSPredicate"92@?0@"NSString"8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSString"48@"NSDictionary"56B64^B68^@76^@84
REJECTED_TYPES
solePersonality
bundleInfoDictionary
__extensionPrincipalClass != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXConcreteExtensionContextVendor.m
[__extensionPrincipalClass conformsToProtocol:@protocol(NSExtensionRequestHandling)]
_EXAllowedItemPayloadClasses
NSExtensionMainStoryboard
NSExtensionContextClass
%s - %s:%d: Unable to find NSExtensionContextClass (%@) in extension bundle - did you link the framework that declares the extension point?
__extensionContextClass != nil
com.apple.NSExtensionContest-completion-concurrent
NSExtensionShouldCreatePrincipalObject
%s - %s:%d: _extensionContextClass: (%@) returned nil from initializer!
com.apple.NSExtensionContext
principalObject != nil
[__extensionPrincipalObjects objectForKey:UUID] == nil
com.apple.extensionKit.errorDomain
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/EXExtension/Extension/EXExtension.m
EXAppExtensionAttributes
extensionPointIdentifier
bundleIdentifier
platform
UUID
localizedName
containingURL
sdkDictionary
extensionDictionary
attributes
entitlements
EXExtension [%@]: %@ extension point: %@ platform: %u
-[_EXExtensionRep entitlementNamed:ofClass:]
Notification queue
%@ Request PK UUID: %@ with item count %lu
System/Library/Frameworks
System/Library/PrivateFrameworks
AppleInternal/Library/Frameworks
SIMULATOR_ROOT
envvar
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/Registration/EXFrameworkScanner.m
System/iOSSupport
AppleInternal
System/iOSSupport/AppleInternal
appexpt
framework
Frameworks
NSExtensionSDK
EXDeclaringPath
EXCatalystSDKVariant
v32@?0@"NSString"8@"NSDictionary"16^B24
appex
v24@?0@"NSURL"8^B16
v24@?0^{__CFBundle=}8^B16
_NSItemProviderIdentifierPayload
_NSItemProviderTypeIdentifierPayload
_NSItemProviderExpectedValueClassPayload
_NSItemProviderOptionsPayload
identifier
extensionContextIdentifier
loadedItems
item
error
v24@?0@"<NSSecureCoding>"8@"NSError"16
v32@?0@"NSString"8Q16^B24
resourceURL
sandboxExtensionToken
Cannot issue a sandbox extension for file "%@": %s
NSExtensionMainStoryboard~ipad
_UIViewServiceSessionManager
com.apple.extensionkit
default
registration
extension
auditToken
serviceListenerEndpoint
sandboxExtensions
Extension: %@ pid: %d
Failed to aquire assertion for pid: %d
processError
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/EXExtension/Internal/Instance/EXExtensionProcess.m
System/Library/xpc/extensions.plist
System/Library/xpc/launchd.plist
System/Library/ExtensionKit
AppleInternal/System/Library/ExtensionKit
ExtensionPoints
Extensions
appexlist
AppExtensions
LegacyExtensionPointAllowList
EXExtensionPointDefinitionPath
NSExtensionPointIdentifier
NSExtensionPointName
NSExtensionPointVersion
EXSupportsCatalyst
'%@' platform `%d` SDK dictionary: %@'
config
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/Registration/EXEnumerator.m
com.apple.extension-kit
/System/iOSSupport/
v16@?0@"NSDictionary"8
/System/Library/Frameworks
/System/Library/PrivateFrameworks
v16@?0@"NSURL"8
B24@?0@"NSString"8@"NSDictionary"16
extensionkit.internal
ExtensionKit
use_lsd_extensionkitservice_for_discovery
use_lsd_extensionkitservice_for_launch
prefer_inprocess_discovery
reject_extension_requests_with_insecure_input_items
embedded_support_extension_kit_config_path
allows_apple_internal_components
host_requires_entitlements
enforce_legacy_extension_point_allow_list
B24@?0@"_EXExtensionRep"8^B16
EXActiveQuery query: %@ observers: %@
addedExtensions
removedUUIDs
EXActiveQueryUpdate added: %@ removed UUIDs: %@
com.apple.lsd.extensions
com.apple.extensionkitservice
Class EXGetExtensionClass(void)
Class EXGetExtensionContextInternalClass(void)
Class EXGetExtensionContextVendorClass(void)
info
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/NSExtension/PK Subsystems/EXService_Subsystem.m
[extensionRep isKindOfClass:_EXExtensionRep.class]
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionKit-49/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/NSExtension+ExtensionKitAdditions.m
NSExtensionContext cannot accept connections in non-extension processes
Unrecognized extension type: '%s'
%s - %s:%d: Unrecognized extension type: '%s'
Failed to find LSApplicationExtensionrecord for current process '%d'
SwiftUI: Swift entry point section not found in the current image
SwiftUI: Swift entry point data not found.
SwiftUI: Swift entry point address could not be determined.
SwiftUI: Falling back to main function lookup via dlsym().
SwiftUI: Unable to find entry point function for extension with bundle ID '%@'.
SwiftUI: Falling back to principal class lookup.
Failed to create principal object. Principal class '%@', protocol '%@' for extension with bundle ID '%@'.
Did not create adaptor object. Adaptor class '%@', for extension with bundle ID '%@'.
Starting service listener.
Connection rejected by: `%@`
Extension `%@` does not provide a service interface.
Pinging launchd
Failed to load connection handler class.
discovering extensions
discovered extension: %{public}@, uuid: %@
errors encountered while discovering extensions: %{public}@
discovered extension: %{public}@, url: %@
discovered extensions: attributes %@, extensionSet %{public}@
%@ Making host default XPC interface, allowed payload classes: %@, allowed error classes: %@
%s - %s:%d: _connectionUUID is required for process per request!
Making extension context and XPC connection for %@ request: %@
%s - %s:%d: Unable to initialize extension context class: %@
extension connection was interrupted! request: %@; plugin_identifier: %@
extension connection was invalidated! request: %@; plugin_identifier: %@
Failed to make extension context for extension: %@ request: %@
extension assertion was invalidated! request: %@; plugin_identifier: %@
Failed to make XPC connection for extension: %@ request: %@
%@ Finished making extension context: %@ and connection: %@
%@ really begining request: %@ synchronously: %s
Unable to setup extension context - error: %@
%@ Did begin request: %@ context UUID: %@
UUIDs did not match!
Extension request contains input items but the extension point does not specify a set of allowed payload classes. The extension point's NSExtensionContext subclass must implement `+_allowedItemPayloadClasses`. This must return the set of allowed NSExtensionItem payload classes. In future, this request will fail with an error. Extension: %@ Items: %@
Extension request contains input items but the extension point does not specify a set of allowed payload classes. The extension point's NSExtensionContext subclass must implement `+_allowedItemPayloadClasses`. This must return the set of allowed NSExtensionItem payload classes. In future, this request will fail with an error.
%@ request %@ is valid: %s
async extension request
begin async extension request %@
Async Begin using error: %@
begin extension request %@ complete with identifier: %@
Async Begin using internal completion handler called multiple times. Due to error after initial completion: %@
Async Begin using internal completion handler called multiple times. Due to error before initial completion for request: %@
Async Begin using internal completion handler called multiple times. For unknow reasons. (request ID: %@ error: %@)
begin extension request %@ complete with error: %@
async extension request'
synchronus extension request
synchronus begin extension request %@
Failed to begin using with error: %@
completed synchronus begin extension request %@ with identifier: %@ error: %@
synchronus extension request'
nil service connection for UUID: %@
%s - %s:%d: nil extensionContext
%s - %s:%d: Unable to fetch URL for plugIn!
%s - %s:%d: PlugIn's UUID is nil!
completing extension request
tear down extension request
cancelling extension request
in completeTearDown block
%s - %s:%d: infoDictionary is not available
%s - %s:%d: Unable to load host extension context class: %@
Attempt to reuse spect multi instance extension. Request will fail with error: %@
begin using plugin
Assertion invalidated: Invalidating XPC connection %@ 
Aquired asertion %@ for running extension with pid %d
%s - %s:%d: attempting to message a nil plugin!
%s - %s:%d: attempting to message a spent plugin!
Plugin %@ must have pid! Extension request will fail
Failed to aquire assertion for plugin: %@ pid: %d
BeginUsing: PluginKit responded for requesr: %@ with error: %@
Unable to acquire process assertion in beginUsing: with plugin identifier: %@, killing plugin
PlugInKit error in beginUsing: with plugin identifier: %@, killing plugin
BeginUsing: Calling into PluginKit plugin: %@ requestUUID: %@
EndUsing failed to endUsing extension %@with error: %@
EndUsing: Calling into PluginKit plugin: %@ requestUUID: %@
Client requested termination of extension %@ with signal: %d 
teardown requested for request %@ to extension %@ but no such request was issued, or the request already completed or canceled earlier.
tearing down extension request %@ to extension %@ (last known pid %d)
Schedule request '%@' assertion (%@) cleanup after %llu seconds.
Begining request '%@' assertion (%@) cleanup.
Completed request '%@' assertion (%@) cleanup.
__plugin endUsing for '%@' returned error: %@
%s - %s:%d: can't get info dictionary keys from a nil plugin
in EXConcreteExtensionTearDownRequestCompletion for plugin pid %d
Derived context: %@
%s - %s:%d: unexpected nil `_extensionRequest`
Setting allowed payload classes: %@
+[NSExtensionContext _allowedItemPayloadClasses] not implemented. Setting the allowed payload classes to %@
+[NSExtensionContext _allowedItemPayloadClasses] not implemented, the interface will not support NSExtensionItems in the request completion handler.
%s - %s:%d: unexpected nil subclass aux host protocol!
%@ initialized with inputItems: %@ endpoint: %@ UUID: %@ extensionContext: %@
%@ initialized with inputItems: %@ UUID: %@ 
_initializeAuxillaryConnectionWithListenerEndpoint: %@ - extensionContext: %@ auxVendorProtocol: %@ auxHostProtocol:%@
%s - %s:%d: must define both host and vendor aux protocols!
AUX connection created: %@
%@ : AUX connectino has already been created for endpoint '%@'.
%s - %s:%d: Class %@ does not conform to aux host protocol: %@
AUX Listener created: %@
%@ : AUX Listener has already been created.
invalidated extension context: %@
preparing to call _completeRequestReturningItems:forExtensionContextWithUUID: UUID: %@
completing request
completing request - consume items
completing request - completion part 1
completing request - completion part 2
call _completeRequestReturningItems:forExtensionContextWithUUID:
calling out to _completeRequestReturningItemsSecondHalf
preparing to call _cancelRequestWithError:forExtensionContextWithUUID: UUID: %@
cancelling request
cancelling request - teardown
opening URL
opening URL completion
failed to ping host: %@
%s - %s:%d: listener is one-shot!
New connection: %@ for listener: %@ interface: %@
in _NSExtensionCompleteRequestReturningItemsContinuation
Process %d is missing entitlement: %@ : %@
Failed to get LSExtensionPointRecord for extension point identifier '%@' platform: '%d'
Adding observer '%@' for query '%@'
New active query '%@'
LS database observing started.
Cannot run query `%@` with error: `%@`
Removing observer '%@' for query '%@'
No more observers for query '%@'
No more active queries LS database observing stopped
Unknown platform for query '%@' using %d
Unregistered extension point for query `%@`
Database changed
Failed to add service with status: [%d] %s 
failed to obtain execPath
%@ XPC overlay: %@
Launched extension `%@` pid %d
Adding extension service sandbox extension for host pid %d
Adding '%@'subservice sandbox extension for host pid %d
Could not acquire assertion for extension: %@, pid: %d, error: %@
RBSLaunchRequest error launching extension `%@` error: `%@`
Recieved connection request from '%d'
Createing interface for launch for connection request from '%d'
Createing interface for dicovery and launch for connection request from '%d'
Createing interface for dicovery for connection request from '%d'
Starting XPC listener for connection request from '%d'
No XPC interface available. XPC listener was *not* started for connection request from '%d'
Host is missing entitlement: %@ : %@
Cannot run query `%@` for host process %d with error: `%@`
Connection invalidated: %@
Connection interupted: %@
Preparing extension %@ for host: %@
Created trusted extension rep from record: %@
Host %d is not entitled to launch extension %@ error: %@
Failed to find extension %@ in LS database with error: %@
launched extension process: %@
Instance '%@' released so its asertion can be invalidated.
failed  to launch extension process with error: %@
-extensionsWithQuery: failed with error: %@
Notifying client with pid `%d` of querie `%@` update: %@
Starting ExtensionKit service for discovery `%s`, launch `%s`
ExtensionKit service is disabled and will not start.
Initializing %@.
Calling main function at address %lx.
Extension 'main() returned EXIT_FAILURE'
Failed to find the 'main()' function in the main binary.
%@ - Begin using bunde %@ with personality: %@ personality.
SwiftUI: Process mach header not found.
Input items match active web page alternative.
Applying active web page alternative to items: %@ matching rule %@
Failed to locate LSApplicationExtensionRecord for %@
Execute queries sync
Execute queries async
Remote query change notification %@
%s failed with error: %@
Running %s in remotely.
Failed to aquire assertion: %@
%s - %s:%d: Unable to parse rule which is not either a string or a dictionary - type: %@
%s - %s:%d: Unable to create predicate!
Failed to get NSURLIsDirectoryKey property for URL '%@' with error '%{public}@'
Failed to get NSURLIsApplicationKey property for URL '%@' with error '%{public}@'
Extension `%s` of type: `%s` launched.
Failed to get audit token for current process: %llx
Cecking in with launchd immediately
Scheduling launchd after initial event
%s - %s:%d: Unable to find NSExtensionPrincipalClass (%@) in extension bundle! Please verify that the extension links the required frameworks and that the value for NSExtensionPrincipalClass is prefixed with '$(PRODUCT_MODULE_NAME).' if the class is implemented in Swift.
%s - %s:%d: NSExtensionPrincipalClass does not conform to NSExtensionRequestHandling protocol!
beginning request with UUID: %@ with endpoint: %@ for items: %@
beginning extension request
tearing down context in extension due to interruption
tearing down context in extension due to invalidation
error from host: %@
creating principle object: %@ - with extensionContext %@
view services will create object for extensionContext: %@
in _willPerformHostCallback: block ( UUID: %@ error: %@ )
tearing down extension context
%s - %s:%d: principal object cannot be nil!
%s - %s:%d: There is already a principal object (%@) for UUID (%@)
%s - %s:%d: %@ cannot be decoded.
%s - %s:%d: _EXExtensionRep subclass must implement '%s'
Failed to create extensionProcess for extension '%@' error: %@.
Make extension XPC connection
making XPC connection for extension: %@
Failed to make xpc connection for extension %@  (extension launch failed)
Resuming Query observer: '%@'
Suspending Query observer: '%@'
Query result update
Query results update: To add: '%@'
Query results update: To remove UUIDs: '%@'
Query results: removing '%@'
Query results did change: %@
Update original results:
updated results:
Query results did *not* change.
%s - %s:%d: getenv( "SIMULATOR_ROOT" ) returned NULL
NSExtensionSDK found in '%@'
failed to load file at `%@` with error: `%@`
Failed to parse extension point definition with error: `%@`
Extension point declaration `%@` found.
Updating catalyst SDK variant with definition from `%@`
Updating native SDK variant with definition from `%@`
Scanning bundle for AppExtensions at : `%@`
Discoverd App Extension: `%@`
Scanning frameworks at '%@'
Processing: %@
Failed to issue sandbox token for URL: '%@' with error: '%@'
Decoded URL: `%@` sandbox token: `%@`
Failed to attach sandbox extension to URL: '%@'
Encoding URL: `%@` sandbox token: `%@`
Issuing sandbox extension for URL: `%@` to pid: `%d`
NSExtensionPrincipalClass could not be resolved to class!
Failed to consume sandbox extension. Token is NULL
Failed to consume sandbox extension `%s` - errno=%{darwin.errno}d
Consumed sandbox extension `%s` -> %llu
Extending the sandbox for `%@` extensionProcess pid: `%d`.
Failed to consume sandbox extension for app extension: %@ pid: `%d`
Creating connection for extension withidentifier: '%@'
Failed to create connection for extension withidentifier: '%@'
Assertion for extension process '%@' invalidated
Invalidating connection '%@'
Informing process observer '%@' of extension process invalidation
new process %@ was created in a race and is valid, returning it.
created new process %@.
%s - %s:%d: Process is nil with no error!
existing process %@ is valid, returning it.
Failed to load or create cache extension/extension point info.
extensionURLEnumerator
_extensionLiveEnumerator
extensionPointDefinitionEnumerator
_extensionPointLiveEnumerator
Translating SDK Dictionary: %@
ExtensionPoint supports catalyst: %@ (synthesizing catalyst variant)
Translated SDK Dictionary: %@
Extension point '%@' - Synthesized NSExtension dictionary: %@ -> %@
NSExtension Extension Point identifier: %@ is legacy: %s
Rejected invalid Extension Point `%@` targeting depricated NSExtension infrastructure!
New Extension Point `%@` targeting depricated NSExtension infrastructure!
NO list of legacy extension points found. All extension points are considered valid... for now.
Enumerator returning: '%@'
Discovered list of App Extension paths '%@'
unexpected class for entry in %@ extension list.
Looking for caches at URLs: %@ with know paths: %@
Discovered App Extension at '%@'
Discovered cached App Extension paths '%@'
Excluding extension at path: `%@`
%s returning %@
Initializing 'EXService_Subsystem'
Begin using %@ for bundle %@
%s - %s:%d: Failed to get extension info  for current process
NSRunLoop type detected. Start listening with imediate launchd checkin.
%@ (non-NSRunLoop) type detected. Start listening with delayed launchd checkin.
%s - %s:%d: Unexpected input type with class: `%@`
Errors encountered while discovering extensions: %{public}@
UUID not found for extension representation: %@
Setting preferred languages on %@: %@
Extension point not found for: %@ with error: %@
_EXConnectionHandler
NSXPCListenerDelegate
NSObject
_EXPrincipalAdapting
_EXRunningExtension
Configuration
_EXExtensionConfigurationProviding
_EXExtensionPointConfigurationProviding
extensionPointConfigurationAdditions
EXConcreteExtension
ExtensionStateManagement
NSExtensionBundleHelper
ExtensionKitAdditions
EXExtensionContextHosting
EXExtensionContextVending
_NSExtensionAuxHostingBase
EXExtensionContextImplementation
NSSecureCoding
NSCoding
NSCopying
_NSExtensionContextInternalImplementation
_EXDiscoveryController
LSObserverDelegate
_EXServiceDelegate
_EXService
_EXServiceProtocol
_EXConnectionActiveQueryObserver
_EXActiveQueryObserver
EXSwiftUI_Subsystem
PKModularService
NSExtensionActiveWebPageAlternative
_EXRunningExtensionInfo
EXExtensionInfoProviding
Execution
_EXQuery
_EXActiveClientQuery
_EXQueryResultsProtocol
_EXServiceClient
EXTransaction
Filtering
NSExtensionRequestHandling
EXConcreteExtensionContextVendor
_EXExtensionRecordRep
_EXExtensionValueRep
_EXExtensionRep
_EXExtensionRepresenting
_EXConnectionCreating
_EXExtension
_EXQueryObserver
EXExtensionRequest
EXFrameworkScanner
_EXItemProviderExtensionVendorLoadOperator
_EXItemProviderLoading
_EXItemProviderCopyingLoadOperator
_EXItemProviderSandboxedResource
EXUIKit_Subsystem
_EXSandboxExtension
_EXExtensionProcess
_EXExtensionProcessMannger
_EXExtensionProcessObserver
_EXExtensionPoint
EXExtensionPoint
EXEnumeratorConfig
EXEnumerator
EXExtensionPointEnumerator
EXOSExtensionEnumerator
_EXDefaults
_EXActiveQuery
_EXActiveQueryUpdate
_EXDiscoveryServiceProtocol
_EXLaunchServiceProtocol
EXService
EXService_Subsystem
EXXPCUtil
bundleRecordForCurrentProcess
initWithApplicationExtensionRecord:
configuration
entryPointFunction
bundleIdentifier
principalClass
connectionHandlerClass
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
shouldAcceptXPCConnection:
initWithPrincipalObject:
principalObject
T@,R
presentsUserInterface
installRunloopObserverToPingLaunchdAfterEvent
currentProcess
_startWithArguments:count:
resume
checkIn
serviceListener
setDelegate:
sharedInstance
init
startWithArguments:count:
setPrincipalObject:
hasSwiftEntryPoint
.cxx_destruct
_hasSwiftEntryPoint
_principalObject
T@"<_EXConnectionHandler>",&,V_principalObject
TB,R,V_hasSwiftEntryPoint
checkInWithLaunchd
sdkDictionary
_EX_dictionaryForKey:
extensionPointConfiguration
_EX_boolForKey:
platform
_EX_stringForKey:
attributes
extensionDictionary
initWithUTF8String:
stringByAppendingFormat:
extensionPointIdentifier
_EX_requiredHostEntitlementsForExtensionPointIdentifier:
stringByAppendingString:
type
requiredHostEntitlements
internalServiceName
TB,R
T@"NSDictionary",R
T@"NSString",R
T#,R,D
T@"NSDictionary",R,D
hostRequiresEntitlements
arrayWithObjects:count:
dictionaryWithObjects:forKeys:count:
initializeFiltering
copy
extensionsWithMatchingAttributes:synchronously:completion:
defaultHost
countByEnumeratingWithState:objects:count:
_initWithPKPlugin:
addObject:
allObjects
discoverPlugInsForAttributes:flags:found:
extensionWithIdentifier:excludingDisabledExtensions:error:
numberWithInteger:
stringValue
extensionsWithMatchingAttributes:error:
firstObject
findPlugInByUUID:reply:
findPlugInByPathURL:reply:
continuouslyDiscoverPlugInsForAttributes:flags:found:
cancelPlugInDiscovery:
_init
identifier
version
bundleInfoDictionary
localizedName
localizedShortName
objectForKey:
_wantsProcessPerRequest
UUID
createInstanceWithUUID:
exceptionWithName:reason:userInfo:
allValues
setInvalidationHandler:
setInterruptionHandler:
invalidate
sharedApplication
defaultCenter
removeObserver:name:object:
dealloc
uuid
_plugIn
stringWithFormat:
userElection
setUserElection:
globalStateQueueForExtension:
_extensionBundle
_allowedItemPayloadClasses
initWithServiceName:
_extensionContextVendorProtocolWithAllowedErrorClasses:
setRemoteObjectInterface:
_extensionContextHostProtocolWithAllowedPayloadCompletionClasses:AllowedErrorClasses:
setExportedInterface:
setExportedObject:
_xpcConnection
getUUIDBytes:
makeExtensionContextAndXPCConnectionForRequest:error:
_reallyBeginExtensionRequest:synchronously:completion:
_hostContextClass
inputItems
initWithInputItems:
_UUID
internalImplementation
setExtensionRequest:
setObject:forKey:
_bareExtensionServiceConnection
requestInterruptionBlock
setContext:
errorWithDomain:code:userInfo:
setXpcConnection:
assertion
valid
context
xpcConnection
localizedDescription
endpoint
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectProxyWithErrorHandler:
_setExtensionVendorProxy:
_auxiliaryListener
_didCreateExtensionContext:
_beginRequestWithExtensionItems:listenerEndpoint:withContextUUID:completion:
count
containsObject:
rejectExtensionRequestsWithInsecureInputItems
_EX_parameterError
setOptions:
setInputItems:
_beginExtensionRequest:completion:
_beginExtensionRequest:error:
setEndpoint:
applyActiveWebPageAlternativeIfNeededForExtension:
setAssertion:
_reallyBeginExtensionRequest:completion:
validateRequest:error:
_safelyBeginUsingWithRequest:readyHandler:
_beginUsingAndCreateExtensionAssertionWithRequest:error:
beginExtensionRequestWithOptions:inputItems:listenerEndpoint:completion:
beginExtensionRequestWithOptions:inputItems:listenerEndpoint:error:
beginExtensionRequestWithInputItems:listenerEndpoint:completion:
beginExtensionRequestWithInputItems:listenerEndpoint:error:
_requestPostCompletionBlock
objectForKeyedSubscript:
processIdentifier
_shouldSendHostApplicationStateNotifications
_hostWillEnterForegroundNote:
addObserver:selector:name:object:
_hostDidEnterBackgroundNote:
_hostWillResignActiveNote:
_hostDidBecomeActiveNote:
__UIKit_upcall_icons
useBundle:error:
initWithURL:
attachments
_loadOperator
__queryPhotoServiceAuthorizationStatusForPlugInUUID:completion:
requestCompletionBlock
_requestPostCompletionBlockWithItems
requestCancellationBlock
requestTeardownDelay
_extensionContextForUUID:
_itemProviderForPayload:extensionContext:
UTF8String
currentConnection
auditToken
objectWithItemProviderData:typeIdentifier:error:
_loadItemOfClass:forTypeIdentifier:options:coerceForCoding:completionHandler:
_loadPreviewImageOfClass:options:coerceForCoding:completionHandler:
__UI_upcall_openURL:completion:
infoDictionary
isEqualToString:
boolValue
pluginConnection
spent
options
_plugInProcessIdentifier
set_stashedPlugInConnection:
pkUUID
_kill:
beginUsingRequest:error:
beginUsingWithError:
beginUsingRequest:completion:
beginUsing:
_safelyBeginUsingSynchronously:request:readyHandler:
_safelyEndUsingRequestWithPKUUID:processAssertion:continuation:
endUsingRequest:completion:
endUsing:
_killConnection:
_stashedPlugInConnection
extensionContexts
_processAssertion
_setProcessAssertion:
_extensionVendorProxy
_hostWillEnterForegroundForContextUUID:completion:
_hostDidEnterBackgroundForContextUUID:completion:
_hostWillResignActiveForContextUUID:completion:
_hostDidBecomeActiveForContextUUID:completion:
initialize
_shouldLogExtensionDiscovery
extensionsWithMatchingAttributes:completion:
extensionWithIdentifier:error:
extensionWithUUID:completion:
extensionWithURL:completion:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
optedIn
attemptOptIn:
attemptOptOut:
beginExtensionRequestWithOptions:inputItems:completion:
beginExtensionRequestWithOptions:inputItems:error:
beginExtensionRequestWithInputItems:completion:
beginExtensionRequestWithInputItems:error:
cancelExtensionRequestWithIdentifier:
pidForRequestIdentifier:
objectForInfoDictionaryKey:
icons
_isPhotoServiceAccessGranted
_completeRequestReturningItems:forExtensionContextWithUUID:completion:
_cancelRequestWithError:forExtensionContextWithUUID:completion:
_loadItemForPayload:contextIdentifier:completionHandler:
_loadPreviewImageForPayload:contextIdentifier:completionHandler:
_openURL:completion:
_isSystemExtension
_safelyBeginUsing:
_safelyEndUsing:
_dropAssertion
_localizedName
_localizedShortName
connectionUUID
setConnectionUUID:
_setPlugIn:
_extensionServiceConnections
_setExtensionServiceConnections:
_extensionExpirationIdentifiers
_setExtensionExpirationsIdentifiers:
_extensionContexts
_setExtensionContexts:
setRequestCompletionBlock:
setRequestCancellationBlock:
setRequestInterruptionBlock:
set_requestPostCompletionBlock:
set_requestPostCompletionBlockWithItems:
_allowedErrorClasses
_setAllowedErrorClasses:
_isObservingHostAppStateChanges
_setObservingHostAppStateChanges:
wantsDedicatedQueue
setWantsDedicatedQueue:
_unfairLock
_observingHostAppStateChanges
_identifier
_version
_attributes
_infoDictionary
__localizedName
__localizedShortName
_extensionPointIdentifier
_connectionUUID
__plugIn
__extensionServiceConnections
__extensionExpirationIdentifiers
__extensionContexts
__stashedPlugInConnection
_requestCompletionBlock
_requestCancellationBlock
_requestInterruptionBlock
__requestPostCompletionBlock
__requestPostCompletionBlockWithItems
__extensionBundle
__allowedErrorClasses
_wantsDedicatedQueue
T@"NSString",R,C,V__localizedName
T@"NSString",R,C,V__localizedShortName
T@"<PKPlugIn>",&,S_setPlugIn:,V__plugIn
T@"NSBundle",R,&,N,V__extensionBundle
T@?,C,V__requestPostCompletionBlock
T@?,C,V__requestPostCompletionBlockWithItems
Td,R
T@"NSUUID",C,N,V_connectionUUID
Tq,N,V_wantsDedicatedQueue
T@"NSMutableDictionary",&,N,S_setExtensionExpirationsIdentifiers:,V__extensionExpirationIdentifiers
T@"NSMutableDictionary",&,N,S_setExtensionServiceConnections:,V__extensionServiceConnections
T@"NSMutableDictionary",&,N,S_setExtensionContexts:,V__extensionContexts
_extensionState
T@"NSDictionary",C,D,N,G_extensionState,S_setExtensionState:
T@"NSSet",C,N,S_setAllowedErrorClasses:,V__allowedErrorClasses
observingHostAppStateChanges
TB,N,G_isObservingHostAppStateChanges,S_setObservingHostAppStateChanges:,V_observingHostAppStateChanges
T@,&,V__stashedPlugInConnection
extensionState
setExtensionState:
valueForKey:
currentCalendar
date
components:fromDate:toDate:options:
mutableCopy
willChangeValueForKey:
_setExtensionState:
didChangeValueForKey:
dictionary
_isMarkedNew
_didShowExtensionManagementInterface
_didShowNewExtensionIndicator
_resetExtensionState
removeObjectForKey:
_pkUUID
localizedInfoDictionaryForKeys:completion:
__localizedInfoDictionaryObjectForKeys:withPlugInUUID:completion:
interfaceWithProtocol:
sharedConnection
mainBundle
allowedAppBundleIDsForBidirectionalDataMovementAfterApplyingFilterToBundleIDs:localAppBundleID:localAccountIsManaged:
isFileURL
initWithContentsOfURL:auditToken:error:
servicePidFromXPCConnection:
initWithPID:flags:reason:name:
acquire
_derivedExtensionAuxiliaryHostProtocolWithContextClass:
_derivedExtensionAuxiliaryHostProtocol
setPkUUID:
setWithObjects:count:
_extensionContextHostProtocolAllowedClassesForItems
setClasses:forSelector:argumentIndex:ofReply:
setWithObject:
setByAddingObject:
_defaultExtensionContextVendorProtocol
_sharedExtensionContextVendor
_extensionAuxiliaryHostProtocol
protocol
___nsx_pingHost:
initWithCapacity:
initWithExtensionContextIdentifier:
set_loadOperator:
_initializeAuxillaryConnectionWithListenerEndpoint:
decodeObjectOfClass:forKey:
encodeObject:forKey:
extensionContext
_extensionAuxiliaryVendorProtocol
initWithListenerEndpoint:
anonymousListener
_setExtensionHostProxy:
_setTransaction:
_extensionHostProxy
_extensionHostAuditToken
initWithItemProvider:destinationProcessAuditToken:
_completeRequestReturningItemsSecondHalf:
_tearDownContextWithUUID:
_isHost
_isDummyExtension
didConnectToVendor:
_extensionContextForIdentifier:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
copyWithZone:
completeRequestReturningItems:completionHandler:
cancelRequestWithError:
openURL:completionHandler:
initWithInputItems:listenerEndpoint:contextUUID:extensionContext:
_auxiliaryConnection
_requestCleanUpBlock
_setRequestCleanUpBlock:
T@"NSArray",R,C
T@"NSUUID",R,C
T@"NSXPCConnection",R
T@?,C,S_setRequestCleanUpBlock:
T{?=[8I]},R
set_pkUUID:
_loadItemForPayload:completionHandler:
_loadPreviewImageForPayload:completionHandler:
_willPerformHostCallback:
extensionRequest
_setExtensionHostAuditToken:
_transaction
_setPrincipalObject:
_setAuxiliaryListener:
set_UUID:
_setInputItems:
_setAuxiliaryConnection:
_setDummyExtension:
__dummyExtension
__requestCleanUpBlock
_extensionContext
_extensionRequest
__extensionHostProxy
__transaction
__principalObject
__extensionVendorProxy
__auxiliaryListener
__UUID
_inputItems
__auxiliaryConnection
__extensionHostAuditToken
T@"NSUUID",C,N,V__UUID
T@"NSArray",C,N,S_setInputItems:,V_inputItems
T@"NSXPCConnection",&,N,S_setAuxiliaryConnection:,V__auxiliaryConnection
_dummyExtension
TB,G_isDummyExtension,S_setDummyExtension:,V__dummyExtension
T@"NSExtensionContext",R,W,V_extensionContext
T@"EXExtensionRequest",&,V_extensionRequest
T@"<EXExtensionContextHosting>",&,S_setExtensionHostProxy:,V__extensionHostProxy
T{?=[8I]},S_setExtensionHostAuditToken:,V__extensionHostAuditToken
T@"NSObject<OS_os_transaction>",&,G_transaction,S_setTransaction:,V__transaction
T@,S_setPrincipalObject:,V__principalObject
T@,&,D,S_setProcessAssertion:
T@"<EXExtensionContextVending>",&,S_setExtensionVendorProxy:,V__extensionVendorProxy
T@"NSXPCListener",&,S_setAuxiliaryListener:,V__auxiliaryListener
T@"NSUUID",C,D
T@?,C,S_setRequestCleanUpBlock:,V__requestCleanUpBlock
processInfo
performExpiringActivityWithReason:usingBlock:
resourceURL
initWithIdentifier:platform:error:
SDKDictionary
objectForKey:ofClass:
currentProcessCanRunQuery:error:
initWithQuery:discoveryController:
setObject:forKeyedSubscript:
addObserver:
observer
startObserving
update
removeObserver:
observers
stopObserving
extensionsMatchingQuery:
unionSet:
sharedDatabaseContext
startAccessingWithOptions:error:
enumeratorWithExtensionPointRecord:options:
enumeratorWithOptions:
matchesRecord:
predicate
evaluateWithObject:
stopAccessing
observerDidObserveDatabaseChange:
addActiveQueryObserver:query:
removeActiveQueryObserver:query:
extensionsMatchingQueries:
activeQueries
setActiveQueries:
setObserver:
_activeQueries
_observer
T@"NSMutableDictionary",&,V_activeQueries
T@"LSObserver",&,V_observer
sharedService
dictionaryWithDictionary:
addEntriesFromDictionary:
allKeys
getServiceConfigForExtension:overlay:subservices:
executableURL
path
addExternalServiceForPid:path:overlay:
identifierWithPid:
extensionIdentityForPlugInKitIdentifier:hostIdentifier:UUID:
initWithFormat:
contextWithIdentity:
setHostPid:
setExtensionOverlay:
_setOverrideExecutablePath:
setExplanation:
initWithContext:
execute:error:
initWithExtensionClass:machServiceName:process:
identity
initWithExtension:auditToken:processIdentity:sandboxExtensions:
aquireAsertionWithError:
useLSDExtensionKitServiceForDiscovery
useLSDExtensionKitServiceForLaunch
_EX_combinedServiceInterface
_EX_discoveryServiceInterface
_EX_launchServiceInterface
valueForEntitlement:
connection:hasRequiredEntitlements:error:
connection:canRunQuery:error:
initWitConnection:
_EX_queryResultsInterface
initWithUUID:error:
launchExtension:clientConnection:error:
runAsXPCService
extensionsWithQuery:reply:
beginExtensionsQuery:listenerEndpoint:reply:
prepareExtension:reply:
registerServiceForClientConnection:extension:error:
discoveryController
_discoveryController
T@"_EXDiscoveryController",R,V_discoveryController
connection
query:resultsDidUpdate:reply:
query:resultDidUpdate:
setConnection:
transaction
setTransaction:
_connection
T@"NSObject<OS_os_transaction>",&,V_transaction
T@"NSXPCConnection",&,V_connection
initWithMachServiceName:
_startListening
initialized
initForPlugInKit
beginUsing:withBundle:
communicationsFailed:
initForPlugInKitWithOptions:
_inputItemsMatchActiveWebPageAlternative:
_inputItemsByApplyingActiveWebPageAlternative:ifNeededByActivationRule:
_evaluateActivationRule:withInputItemsIfTheyMatchActiveWebPageAlternative:matchResult:
registeredTypeIdentifiers
userInfo
predicateWithBlock:
filteredArrayUsingPredicate:
_genericValuesMatchActiveWebPageAlternativeWithExtensionItems:attachmentsLens:registeredTypeIdentifiersLens:isActiveWebPageAttachmentCheck:
objectAtIndexedSubscript:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
_evaluateActivationRule:withDictionaryIfItMatchesActiveWebPageAlternative:matchResult:
_matchingDictionaryMatchesActiveWebPageAlternative:
_evaluateActivationRuleWithoutWorkarounds:withExtensionItemsRepresentation:
_dictionaryIncludingOnlyItemsWithRegisteredTypeIdentifier:fromMatchingDictionary:
initForCurrentProcess
containingBundleRecord
extensionPointRecord
_EX_arrayForKey:
bundleURL
notifyExtensionMainCalled
extensionInfoForCurrentProcess
containerBundleIdentifier
containingViewControllerClassName
T@"NSString",R,N
T@"_EXRunningExtensionInfo",R,N
runLoopType
_bundleIdentifier
_containerBundleIdentifier
_containingViewControllerClassName
_runLoopType
T@"NSString",R,V_runLoopType
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_containerBundleIdentifier
T@"NSString",R,N,V_containingViewControllerClassName
executeQueries:
executeQueries:completionHandler:
preferInProcessDiscovery
extensionsWithQueries:
asyncQueryQueue
fetchExtensionsWithQueries:completionHandler:
executeQuery:
executeQuery:completionHandler:
setExtensionPointIdentifier:
setPlatform:
decodeInt32ForKey:
queryPredicatesEvaluatedOutOfProcess
encodeInt32:forKey:
setPredicate:
isEqualToQuery:
extensionPointIdentifierQuery:
extensionPointIdentifierQuery:platform:
allExtensionsQuery
matches:
_platform
_predicate
T@"NSString",&,V_extensionPointIdentifier
TI,V_platform
T@"NSPredicate",&,V_predicate
removeObject:
isEqualToActiveQuery:
query
initWithQuery:
addQueryObserver:
removeQueryObserver:
isActive
reset
setObservers:
started
setStarted:
xpcListener
_started
_query
_observers
_xpcListener
T@"_EXQuery",R,V_query
T@"NSSet",&,V_observers
T@"NSXPCListenerEndpoint",R
T@"NSXPCConnection",W,V_connection
active
TB,R,GisActive
TB,V_started
T@"NSXPCListener",R,V_xpcListener
connectionLock
initWithMachServiceName:options:
setDiscoveryConnection:
reconnectActiveQueries
setLaunchConnection:
activeQueriesLock
_beginActiveQuery:
discoveryConnection
filteredSetUsingPredicate:
member:
queries
_activeQueryForQuery:
launchConnection
prepareConnectionForExtension:error:
notifyQueue
_connectionLock
_activeQueriesLock
_discoveryConnection
_launchConnection
_notifyQueue
T@"NSXPCConnection",&,N,V_discoveryConnection
T@"NSXPCConnection",&,N,V_launchConnection
T^{os_unfair_lock_s=I},D,N
T@"NSMutableSet",&,N,V_activeQueries
T@"NSObject<OS_dispatch_queue>",R,V_notifyQueue
_EX_transaction
_EX_setTransaction:
T@"NSObject<OS_os_transaction>",&,S_EX_setTransaction:
rangeOfString:
substringToIndex:
substringFromIndex:
intValue
enumerateObjectsUsingBlock:
evaluateActivationRule:withExtensionItemsRepresentation:
predicateForActivationRule:
length
characterAtIndex:
valueForKeyPath:
subpredicates
predicateOperatorType
leftExpression
rightExpression
expressionType
function
arguments
expressionValueWithObject:context:
operand
collection
initWithDictionary:
variable
arrayWithObject:
dictionaryWithObject:forKey:
setWithArray:
setWithObjects:
isEqualToSet:
predicateWithFormat:
setName:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
URLForResource:withExtension:
dataWithContentsOfURL:
bundleForClass:
unsignedIntegerValue
numberWithInt:
predicateWithSubstitutionVariables:
addObjectsFromArray:
enumerateKeysAndObjectsUsingBlock:
objectAtIndex:
array
removeObjectsInArray:
andPredicateWithSubpredicates:
URLByResolvingSymlinksInPath
getResourceValue:forKey:error:
absoluteURL
URLByDeletingLastPathComponent
_EX_isApplication
defaultManager
getRelationship:ofDirectoryAtURL:toItemAtURL:error:
_EX_isDirectory
_EX_containingApplicationBundleURL
_EX_isContainedInDirectory:
_defaultRun:arguments:
_startListening:
defaultService
_extensionDictionary
beginRequestWithExtensionContext:
assertIsExtensionProcess
_extensionContextClass
_EX_boolForKey:defaultValue:
_extensionMainStoryboard
_extensionPrincipalClass
_initializedByViewServices
initWithInputItems:listenerEndpoint:contextUUID:
_shouldCreatePrincipalObject
_onGlobalStateQueueOnly_setPrincipalObject:forUUID:
_completionConcurrentQueue
_expirationConcurrentQueue
_setPrincipalObject:forUUID:
_extensionPrincipalObjects
_setExtensionPrincipalObjects:
__extensionPrincipalObjects
T@"NSMutableDictionary",&,N,S_setExtensionPrincipalObjects:,V__extensionPrincipalObjects
postNotificationName:object:userInfo:
initWithInputItems:contextUUID:
_EX_objectForKey:ofClass:
setValuesForKeysWithDictionary:
_EX_dictionaryByRemovingObjectForKey:
_EX_dictionaryBySettingObject:forKey:
_EX_dictionaryBySettingValuesForKeysWithDictionary:
_EX_objectAtIndex:ofClass:
_EX_dictionaryAtIndex:
_EX_arrayAtIndex:
_EX_stringAtIndex:
_EX_boolAtIndex:
_EX_boolAtIndex:defaultValue:
_EX_unimplementedError
initWithBundleIdentifier:error:
uniqueIdentifier
_expensiveDictionaryRepresentation
record
entitlements
initWithPlugInKitProxy:
classForCoder
containingURL
entitlementNamed:ofClass:
extensionPoint
_record
_extensionPoint
T@"LSApplicationExtensionRecord",R,V_record
T@"LSExtensionPointRecord",R,V_extensionPoint
plistTypes
decodeObjectOfClasses:forKey:
_url
_containingURL
_sdkDictionary
_entitlements
allocWithZone:
isEqualToExtension:
processForExtension:error:
extensionProcessWithError:
makeXPCConnectionWithError:
requiresMacCatalystBehavior
hostContextClass
extensionContextClass
T@"NSURL",R,V_url
T@"NSURL",R,V_containingURL
T@"NSUUID",R,V_UUID
T@"NSURL",R
T@"NSDictionary",R,V_sdkDictionary
T@"NSDictionary",R,V_extensionDictionary
TI,R,V_platform
T@"<_EXExtensionConfigurationProviding>",R,D
T@"NSString",R,D
TB,R,D
internalRep
_internalRep
T@"<_EXExtensionConfigurationProviding>",R
T@"_EXExtensionRep",R,V_internalRep
suspend
internalExtensions
extensionsLock
initWithCurrentExtensions:updatedExtensions:
resultDidUpdate:
addedExtensions
removedUUIDs
delegate
observerDidUpdate:
initWithQueries:delegate:
extensions
setInternalExtensions:
notificationQueue
_extensionsLock
_internalExtensions
_delegate
_queries
_notificationQueue
T@"NSSet",&,N,V_internalExtensions
T@"NSObject<OS_dispatch_queue>",R,V_notificationQueue
T@"<_EXQueryObserverDelegate>",R,W,V_delegate
T@"NSArray",R
T@"NSArray",R,C,V_queries
_options
_endpoint
_assertion
_context
TQ,V_options
T@"NSArray",C,V_inputItems
T@"NSXPCListenerEndpoint",&,V_endpoint
T@"NSUUID",&,V_pkUUID
T@,&,V_assertion
T@"NSXPCConnection",&,V_xpcConnection
T@"NSExtensionContext",W,V_context
allowsAppleInternalComponents
initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
sourceURL
URLByAppendingPathComponent:
lowercaseString
hasPrefix:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
lastPathComponent
pathExtension
caseInsensitiveCompare:
processExtensionSDK:declaringURL:
dataWithContentsOfURL:options:error:
isCatalystSupportURL:
isAppleInternalURL:
_combinedExtensionSDK
_combinedAppleInternalExtensionSDK
processExtensionsInDirectory:
stringByReplacingOccurrencesOfString:withString:options:range:
rootURL
fileURLWithPath:relativeToURL:
enumerateBundlesWithPathExtension:atURL:block:
frameworkPaths
processExtensionSDKFromBundle:
processExtensionsFromBundle:
enumerateFrameworksBundlesWithFrameworkURL:block:
initWithSourceURL:
combinedExtensionSDK
combinedAppleInternalExtensionSDK
extensionPaths
appleInternalExtensionPaths
enumerateAppexptAtURL:block:
processExtensionSDKFromFile:
main
set_combinedExtensionSDK:
set_combinedAppleInternalExtensionSDK:
_extensions
set_extensions:
_appleInternalExtensions
set_appleInternalExtensions:
_sourceURL
__combinedExtensionSDK
__combinedAppleInternalExtensionSDK
__extensions
__appleInternalExtensions
T@"NSMutableDictionary",&,V__combinedExtensionSDK
T@"NSMutableDictionary",&,V__combinedAppleInternalExtensionSDK
T@"NSMutableArray",&,V__extensions
T@"NSMutableArray",&,V__appleInternalExtensions
T@"NSURL",R,V_sourceURL
T@"NSArray",R,D
setIdentifier:
setExtensionContextIdentifier:
extensionContextIdentifier
dictionaryWithCapacity:
stringWithCString:encoding:
loadItemForTypeIdentifier:completionHandler:expectedValueClass:options:
loadPreviewImageWithCompletionHandler:expectedValueClass:options:
_extensionContextIdentifier
T@"NSUUID",C,N,V_identifier
T@"NSUUID",C,N,V_extensionContextIdentifier
setItemProvider:
setDestinationProcessAuditToken:
setLoadedItems:
allowedClasses
itemProvider
_loadItemsForTypeIdentifiers:auditToken:itemProvider:
loadedItems
_sandboxedResourceForItemIfNeeded:auditToken:error:
loadItemForTypeIdentifier:options:completionHandler:
destinationProcessAuditToken
_itemProvider
_loadedItems
_destinationProcessAuditToken
T@"NSItemProvider",N,V_itemProvider
T@"NSDictionary",&,N,V_loadedItems
T{?=[8I]},N,V_destinationProcessAuditToken
setResourceURL:
setSandboxExtensionToken:
isAccessingSecurityScopedResource
setAccessingSecurityScopedResource:
sandboxExtensionToken
initWithContentsOfURL:
resolveURLAndReturnError:
_accessingSecurityScopedResource
_resourceURL
_sandboxExtensionToken
T@"NSData",C,N,V_sandboxExtensionToken
T@"NSURL",C,N,V_resourceURL
accessingSecurityScopedResource
TB,N,GisAccessingSecurityScopedResource,V_accessingSecurityScopedResource
startAccessingSecurityScopedResource
fileSystemRepresentation
stopAccessingSecurityScopedResource
dataWithBytesNoCopy:length:freeWhenDone:
setInfoDictionary:
startViewServiceSessionManagerAsPlugin:
isPlugInKitProcess
setPlugInKitProcess:
_initialized
_plugInKitProcess
T@"NSDictionary",C,N,V_infoDictionary
plugInKitProcess
TB,N,GisPlugInKitProcess,V_plugInKitProcess
stringWithUTF8String:
sandboxed
consume
consumedSandboxExtension
setConsumedSandboxExtension:
_consumedSandboxExtension
TQ,V_consumedSandboxExtension
T@"NSString",&,V_sandboxExtensionToken
_EX_extensionProcess
_EX_setExtensionProcess:
T@"_EXExtensionProcess",&,S_EX_setExtensionProcess:
weakObjectsHashTable
encodeBytes:length:forKey:
extension
decodeBytesForKey:returnedLength:
_handleAssertionInvalidation
manager
processDidInvalidate:
makeXPCConnection
initWithExtension:auditToken:
isValid
sandboxExtensions
setSandboxExtensions:
xpcConnectionLock
setXpcConnectionLock:
xpcConnections
setXpcConnections:
setManager:
observersLock
setObserversLock:
internalConnection
setInternalConnection:
serviceListenerEndpoint
processIdentity
_xpcConnectionLock
_observersLock
_sandboxExtensions
_xpcConnections
_manager
_internalConnection
_extension
_serviceListenerEndpoint
_processIdentity
_auditToken
T@"NSArray",&,V_sandboxExtensions
T{os_unfair_lock_s=I},V_xpcConnectionLock
T@"NSHashTable",&,V_xpcConnections
T@"_EXExtensionProcessMannger",W,V_manager
T{os_unfair_lock_s=I},V_observersLock
T@"NSHashTable",&,V_observers
T@"_EXInternalHostConnection",W,V_internalConnection
T@"_EXExtensionRep",R,V_extension
T{?=[8I]},R,V_auditToken
T@"NSXPCListenerEndpoint",R,V_serviceListenerEndpoint
Ti,R
T@"BKSProcessAssertion",R,V_assertion
T@"RBSProcessIdentity",R,V_processIdentity
TB,R,D,GisValid
processExtensionMap
setProcessExtensionMap:
processExtensionMapLock
setProcessExtensionMapLock:
_processExtensionMapLock
_processExtensionMap
T@"NSMutableDictionary",&,V_processExtensionMap
T{os_unfair_lock_s=I},V_processExtensionMapLock
variant
TI,R
setSDKDictionary:
setVariant:
setUrl:
_SDKDictionary
_variant
T@"NSString",&,V_identifier
T@"NSDictionary",&,V_SDKDictionary
TQ,V_variant
T@"NSURL",&,V_url
dictionaryWithContentsOfURL:
URLByAppendingPathComponent:isDirectory:
xpcExtensionsCache
xpcExtensionPointsCache
extensionPointsConfigURL
legacyExtensionPointAllowList
_extensionPointsConfigURL
_legacyExtensionPointAllowList
_rootURL
_xpcExtensionsCache
_xpcExtensionPointsCache
T@"NSURL",R,V_rootURL
T@"NSURL",R,V_xpcExtensionsCache
T@"NSURL",R,V_xpcExtensionPointsCache
T@"NSURL",R,V_extensionPointsConfigURL
T@"NSDictionary",R,V_legacyExtensionPointAllowList
config
fileExistsAtPath:
supportExtensionKitConfigPath
extensionURLEnumerator
extensionCacheFileURLs
extensionInstallDirectoryURLs
arrayByAddingObjectsFromArray:
initWithCacheURLs:
_extensionLiveEnumerator
start
appleInternal
initWithCacheURLs:paths:
extensionPointCacheFileURLs
extensionPointDefinitionDirectoryURLs
initWithCacheURLs:config:
_extensionPointLiveEnumerator
initWithSDKDictionary:urls:config:
initWithSDKDictionary:config:
extensionEnumerator
extensionPointDefinitionEnumerator
extensionPointDefinitionEnumeratorWithSDKDictionary:
containsString:
enumerateExtensionPointsInDirectoryAtURL:block:
keyEnumerator
enforceLegacyExtensionPointAllowList
validateExtensionPointIdentifier:sdkDictionary:
nextObject
translateXPCCacheDictionary:
fileURLWithPath:isDirectory:
synthesizeNSExtensionKeysInDictionary:identifier:
validateExtensionPoints
extensionPoints
extensionPointsKeyEnumerator
currentExtensionPointDict
currentExtensionPoint
_validateExtensionPoints
_config
_extensionPoints
_extensionPointsKeyEnumerator
_currentExtensionPointDict
_currentExtensionPoint
T@"<EXEnumeratorConfig>",R,V_config
T@"NSDictionary",R,V_extensionPoints
T@"NSEnumerator",R,V_extensionPointsKeyEnumerator
T@"NSDictionary",R,V_currentExtensionPointDict
T@"_EXExtensionPoint",R,V_currentExtensionPoint
TB,R,V_validateExtensionPoints
initWithArray:
enumerateExtensionsInDirectoryAtURL:block:
objectEnumerator
extensionPathsEnumerator
_extensionPaths
_extensionPathsEnumerator
T@"NSArray",R,V_extensionPaths
T@"NSEnumerator",R,V_extensionPathsEnumerator
startAccessingReturningError:
implementsNSExtension
errorTypes
plistAndValueTypes
T@"NSSet",R
internalObservers
currentUUIDs
minusSet:
setCurrentUUIDs:
objectsPassingTest:
initWithAddedExtensions:removedUUIDs:
_internalObservers
_currentUUIDs
T@"NSMutableSet",R,V_internalObservers
T@"_EXDiscoveryController",R,W,V_discoveryController
T@"NSSet",&,V_currentUUIDs
setWithSet:
_addedExtensions
_removedUUIDs
T@"NSSet",R,V_addedExtensions
T@"NSSet",R,V_removedUUIDs
_EX_extensionSetClasses
UUIDString
anyObject
preferredLanguages
setPreferredLanguages:
containingBundleIdentifier
extensionRepresentedBy:error:
T@"NSArray",&,N
T@"<EXExtensionInfoProviding>",R,N
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8@"NSXPCConnection"16
@24@0:8@16
^?16@0:8
i28@0:8r^*16i24
v16@0:8
v24@0:8@16
@"<_EXConnectionHandler>"
@"NSDictionary"16@0:8
@32@0:8@16^@24
v32@0:8@16@?24
v36@0:8@16B24@?28
@36@0:8@16B24^@28
@32@0:8@16@?24
B24@0:8^@16
B32@0:8@16^@24
v40@0:8Q16@24@?32
@40@0:8Q16@24^@32
v48@0:8Q16@24@32@?40
@48@0:8Q16@24@32^@40
v40@0:8@16@24@?32
@40@0:8@16@24^@32
i24@0:8@16
@32@0:8@16@24
d16@0:8
i16@0:8
v24@0:8@?16
v36@0:8B16@20@?28
v20@0:8i16
@?16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@"NSDictionary"
@"NSUUID"
@"<PKPlugIn>"
@"NSMutableDictionary"
@"NSBundle"
@"NSSet"
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?>32
v40@0:8@"NSError"16@"NSUUID"24@?<v@?>32
v40@0:8@"NSDictionary"16@"NSUUID"24@?<v@?@@"NSError">32
v32@0:8@"NSURL"16@?<v@?B>24
v48@0:8@16@24@32@?40
v48@0:8@"NSArray"16@"NSXPCListenerEndpoint"24@"NSUUID"32@?<v@?@"NSUUID"@"NSError">40
v32@0:8@"NSUUID"16@?<v@?>24
v24@0:8@?<v@?>16
@24@0:8#16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
{?=[8I]}16@0:8
v32@0:8@"NSArray"16@?<v@?B>24
v24@0:8@"NSError"16
@48@0:8@"NSArray"16@"NSXPCListenerEndpoint"24@"NSUUID"32@"NSExtensionContext"40
@"NSArray"16@0:8
@"NSUUID"16@0:8
@"NSXPCConnection"16@0:8
@?<v@?>16@0:8
v48@0:8{?=[8I]}16
@"NSExtensionContext"
@"EXExtensionRequest"
@"<EXExtensionContextHosting>"
@"NSObject<OS_os_transaction>"
@"<EXExtensionContextVending>"
@"NSXPCListener"
@"NSArray"
@"NSXPCConnection"
{?="val"[8I]}
v24@0:8@"LSObserver"16
v32@0:8@16@24
@"LSObserver"
v32@0:8@"_EXQuery"16@?<v@?@"NSSet"@"NSError">24
v40@0:8@"_EXQuery"16@"NSXPCListenerEndpoint"24@?<v@?@"NSError">32
v32@0:8@"_EXExtensionRep"16@?<v@?@"_EXExtensionProcess"@"NSError">24
v40@0:8@16^@24^@32
B40@0:8@16@24^@32
@"_EXDiscoveryController"
v32@0:8@"_EXQuery"16@"_EXActiveQueryUpdate"24
v32@0:8@"<PKSubsystemServicePersonality>"16@"NSBundle"24
v24@0:8@"<PKSubsystemServicePersonality>"16
@"<PKModularService>"16@0:8
@"<PKModularService>"24@0:8@"NSDictionary"16
B48@0:8@16@?24@?32@?40
B40@0:8@16@24o^q32
@28@0:8@16I24
I16@0:8
v20@0:8I16
@"NSPredicate"
v40@0:8@"_EXQuery"16@"_EXActiveQueryUpdate"24@?<v@?>32
@"_EXQuery"
^{os_unfair_lock_s=I}16@0:8
@"NSMutableSet"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"NSExtensionContext"16
@32@0:8@16#24
B28@0:8@16B24
@32@0:8Q16#24
@24@0:8Q16
B24@0:8Q16
B28@0:8Q16B24
@"LSApplicationExtensionRecord"
@"LSExtensionPointRecord"
@"NSURL"
@24@0:8^@16
@"NSXPCConnection"24@0:8^@16
@32@0:8@"NSString"16#24
@"_EXExtensionRep"
@"<_EXQueryObserverDelegate>"
v24@0:8Q16
@"NSXPCListenerEndpoint"
v24@0:8^{__CFBundle=}16
@"NSMutableArray"
v48@0:8@16@?24#32@40
v40@0:8@?16#24@32
v48@0:8@"NSString"16@?<v@?@"<NSSecureCoding>"@"NSError">24#32@"NSDictionary"40
v40@0:8@?<v@?@"<NSSecureCoding>"@"NSError">16#24@"NSDictionary"32
@56@0:8@16{?=[8I]}24
@64@0:8@16{?=[8I]}24@56
@64@0:8@16{?=[8I]}24^@56
@"NSItemProvider"
@"NSData"
@64@0:8@16@24{?=[8I]}32
@72@0:8@16{?=[8I]}24@56@64
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSHashTable"
@"_EXExtensionProcessMannger"
@"_EXInternalHostConnection"
@"BKSProcessAssertion"
@"RBSProcessIdentity"
v24@0:8@"_EXExtensionProcess"16
@"NSURL"16@0:8
@40@0:8@16@24@32
@"<EXEnumeratorConfig>"
@"NSEnumerator"
@"_EXExtensionPoint"
i36@0:8i16@20@28
