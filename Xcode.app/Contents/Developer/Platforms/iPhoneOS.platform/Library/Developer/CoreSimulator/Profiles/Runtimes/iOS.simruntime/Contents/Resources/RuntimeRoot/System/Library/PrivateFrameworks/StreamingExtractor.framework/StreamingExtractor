@(#)PROGRAM:StreamingExtractor  PROJECT:StreamingExtractor-1
STExtractorError
[%s:%d][%s] %@
STCreateErrorWithInfo
STAEAExtractorSymmetricEncryptionKey<Private>
STAEAExtractorAsymmetricDecryptionKey<Private>
STAEAExtractorSigningPublicKey<Private>
STAEAExtractorSourceDirectory
STAEAExtractorArchiveID
STAEAExtractorSourceDirectorySandboxExtension<Private>
+[STRemoteExtractor(STAEAExtractor) STAEAExtractorWithOptions:]
[srcDir isKindOfClass:[NSString class]]
/Library/Caches/com.apple.xbs/Sources/StreamingExtractor_Sim/StreamingExtractor_Framework/STAEAExtractor.m
[sandboxExtensionOption isKindOfClass:[NSString class]]
+[STRemoteExtractor(STAEAExtractor) fullReplacementSTAEAExtractor:]
sessionID != nil
STAEAExtractionPlugin
+[STRemoteExtractor(STAEAExtractor) incrementalPatchSTAEAExtractor:srcDirectory:]
srcDirectory != nil
-[STRemoteExtractor(STAEAExtractor) setSourceDirectory:sandboxExtension:]
path_result != NULL
com.apple.STExtractionService
sandbox_extension != NULL
v8@?0
com.apple.StreamingExtractor
com.apple.StreamingExtractor.signposts
STRemoteExtractorPluginBundleName
STRemoteExtractorPluginBundlePath
STRemoteExtractorPluginDirectory
STRemoteExtractorDoesConsumeExtractedData
STRemoteExtractorSessionID
STRemoteExtractorSuppressCompletionsDuringShutdown
STRemoteExtractorFrameworkPath
STRemoteExtractorMemoryFootprint
-[STRemoteExtractor init]
options
-[STRemoteExtractor createOutputDir:]
result
/Library/Caches/com.apple.xbs/Sources/StreamingExtractor_Sim/StreamingExtractor_Framework/STRemoteExtractor.m
Failed to create extraction directory at path %@: %@
-[STRemoteExtractor suppressCompletionsDuringShutdown]
[option isKindOfClass:[NSNumber class]]
-[STRemoteExtractor _reserveExtractionMemory]
numRequiredBytes != 0
required extraction memory == 0
numRequiredBytes <= MAX_EXTRACTION_MEMORY_FOOTPRINT
num required bytes (%zu) > max allowed extraction memory (%d)
STRemoteExtractor became invalid while waiting for extraction memory reservation
-[STRemoteExtractor _releaseExtractionMemory]
-[STRemoteExtractor _checkForInvalidExtractionMemoryReservation]
-[STRemoteExtractor doesConsumeExtractedData]
-[STRemoteExtractor prepareForExtractionToPath:completionBlock:]
path != nil
No path to extract to
com.apple.StreamingExtractor.STRemoteExtractorIOQueue
_ioQueue != NULL
Failed to create displatch queue for I/O
_reservationQueue != NULL
Failed to get global concurrent queue for extraction memory reservations
-[STRemoteExtractor prepareForExtractionToPath:completionBlock:]_block_invoke
!self.isPrepared
-prepare... called on already prepared extractor
self.extractionServiceConnection != nil
Failed to create NSXPCConnection
Connection interrupted to streaming extraction service
-[STRemoteExtractor prepareForExtractionToPath:completionBlock:]_block_invoke_3
Connection invalidated to streaming extraction service
-[STRemoteExtractor prepareForExtractionToPath:completionBlock:]_block_invoke_2
self.error == nil
Failed to realpath "%@" at "%s": %s
v16@?0@"NSError"8
v32@?0@"NSDictionary"8Q16@"NSError"24
-[STRemoteExtractor _invalidate]
-[STRemoteExtractor _sendData:completion:]
-supplyBytes called on extractor that has already returned an error: %@
self.isPrepared
%s called before -prepareForExtraction on %@
!self.isInvalid
-supplyBytes: called on invalid extractor
no service connection for extraction service
v28@?0@"NSError"8B16Q20
-[STRemoteExtractor _sendData:completion:]_block_invoke
FAILED
SUCCEEDED
v20@?0@"NSError"8B16
v40@?0r^v8{_NSRange=QQ}16^B32
lastByteRange.location != NSNotFound
internal error processing byte ranges
failed
succeeded
ErrorCausedBySystemShuttingDown
-[STRemoteExtractor supplyBytes:withCompletionBlock:]
bytes != nil
no bytes supplied to -supplyBytes
self.ioQueue != NULL
no ioQueue
copiedBytes != nil
unable to copy bytes
-[STRemoteExtractor supplyBytes:withCompletionBlock:]_block_invoke
reservationError == nil
-[STRemoteExtractor suspendStreamWithCompletionBlock:]
-[STRemoteExtractor suspendStreamWithCompletionBlock:]_block_invoke
%s called before prepare on %@
-suspendStreamWithCompletionBlock: called on invalid extractor
%@: no connection to extraction service
-[STRemoteExtractor suspendStreamWithCompletionBlock:]_block_invoke_3
v24@?0Q8@"NSError"16
-[STRemoteExtractor finishStreamWithCompletionBlock:]
-[STRemoteExtractor finishStreamWithCompletionBlock:]_block_invoke
-[STRemoteExtractor finishStreamWithCompletionBlock:]_block_invoke_3
-[STRemoteExtractor terminateStreamWithError:completionBlock:]
-[STRemoteExtractor terminateStreamWithError:completionBlock:]_block_invoke
-[STRemoteExtractor terminateStreamWithError:completionBlock:]_block_invoke_3
framework
%{public}s: Error [%s:%d][%s]: %@ - %ld - %@ %@
%{public}s: %s: AssertMacros: %s, %s file: %s, line: %d
%{public}s: %s: AssertMacros: %s - Failed to get realpath for source dir, %s file: %s, line: %d
%{public}s: %s: AssertMacros: %s - Failed to get sandbox extension for "%s" : %s, %s file: %s, line: %d
%{public}s: %s not available.
%{public}s: Creating output dir: %@
%{public}s: %zu bytes
%{public}s: waiting for available extraction memory (need [%zu] - avail [%zu])
%{public}s: available memory notification (need [%zu] - avail [%zu] - isValid [%d]
%{public}s: Got extraction memory reservation [%zu] - %zu bytes still available
%{public}s: Releasing extraction memory reservation [%zu] - %zu bytes available
%{public}s: Extraction invalid - signaling to allow possible thread waiting for extraction memory to return
%{public}s: path: %@
%{public}s: Existing path is not a directory - removing and recreating: %s
%{public}s: Failed to remove existing path: %s (%@)
%{public}s: Trying to create it anyway.
%{public}s: Failed to issue sandbox extension for "%s" : %d (%s)
%{public}s: %@: prepare returning error %@
%{public}s: %@: prepare completed with offset %llu, error %@
%{public}s: %@: extractor requires %zu bytes extraction memory
%{public}s: %@: calling prepare completion block with offset %llu, error %@
%{public}s: %@: invalidating
%{public}s: Supplying entire byte range of data (%lu bytes)
Sending buffer (%lu bytes) to extraction service over XPC
%{public}s: got error from remote connection: %@
Finished (FAILED) processing buffer (%lu bytes) sent to extraction service over XPC
Finished (%s) processing buffer (%lu bytes) sent to extraction service over XPC
DATA_OVER_XPC
%{public}s: Starting to send %lu bytes to extractor in chunks
Starting fragmentation of supplied buffer (%lu bytes)
%{public}s: Already processed {%lu, %lu}
%{public}s: Reserved %ld bytes; adding to existing length: %ld bytes; total reserved: %lu bytes
%{public}s: Failed to reserve last range; falling out with last range {%lu, %lu}
%{public}s: Waiting for %lu bytes to becom available
%{public}s: Reserved %ld bytes for too-big partial range {%lu, %lu}
%{public}s: Reserved %ld bytes at %ld for too-big partial range {%lu, %lu}
%{public}s: Supplying byte range {%lu, %lu}
Sending buffer (%lu bytes) to the extraction service over XPC
%{public}s: Active partial range {%lu, %lu} exhausted
Ending fragmentation of the supplied buffer
FRAGMENT_DATA
%{public}s: %@: calling supplyBytes: completion block with error %@
%{public}s: %@: calling supplyBytes: completion block with no error; dataComplete = %s
%@: -supplyBytes:[%lu bytes] %s
SUPPLY_BYTES
%{public}s: %@: -supplyBytes:[%lu bytes]
%@: -supplyBytes:[%lu bytes] began
%{public}s: %@: suspend called on extractor that has already returned an error %@
%{public}s: %@: calling suspend completion block with offset %llu, error %@
%{public}s: %@: finish called on extractor that has already returned an error %@
%{public}s: %@: calling finish completion block - error %@
%{public}s: %@: terminate called on extractor that has already returned an error: %@
%{public}s: %@: calling terminate completion block - error %@
STAEAExtractor
STExtractionOriginator
STExtractionOriginatorProtocol
STExtractionServiceProtocol
STRemoteExtractor
STExtractor
NSObject
NSSecureCoding
NSCoding
NSCopying
TQ,N,V_requiredExtractionMemory
STAEAExtractorWithOptions:
_finalBytesSent
T@"<STExtractionOriginatorProtocol>",W,V_originator
dealloc
T@"<STExtractorDelegate>",W,N,V_extractorDelegate
isProxy
T@"NSDictionary",R,N,V_options
pluginDirectory
T@"NSObject<OS_dispatch_queue>",R,N,V_ioQueue
sourceDirectory
.cxx_destruct
TQ,N,V_reservedExtractionMemory
T#,R
bundleForClass:
T@"<STExtractorDelegate>",W,N
ioQueue
T@"NSData",&,N
options
T@"NSError",&,N,V_error
release
T@"NSObject<OS_dispatch_queue>",R,N,V_reservationQueue
T@"NSString",&,N
T@"NSString",R,C
T@"NSXPCConnection",R,N,V_extractionServiceConnection
T@"STExtractionOriginator",R,N,V_internalExtractionOriginator
TB,N,V_dataStreamStarted
TB,N,V_finalBytesSent
TB,N,V_isInvalid
TB,N,V_isPrepared
TB,R
TB,R,N
TQ,N,V_lastResumptionOffset
TQ,R
UTF8String
_checkForInvalidExtractionMemoryReservation
_dataStreamStarted
_error
_extractionServiceConnection
_extractorDelegate
_internalExtractionOriginator
_invalidate
_ioQueue
_isInvalid
_isPrepared
_lastResumptionOffset
_options
_originator
_releaseExtractionMemory
_requiredExtractionMemory
_reservationQueue
_reserveExtractionMemory
_reservedExtractionMemory
_sendData:completion:
addEntriesFromDictionary:
allocWithZone:
archiveID
asymmetricDecryptionKey
autorelease
boolValue
bundlePath
class
conformsToProtocol:
copy
copyWithZone:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createOutputDir:
dataStreamStarted
debugDescription
decodePropertyListForKey:
defaultManager
description
dictionary
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
doesConsumeExtractedData
encodeObject:forKey:
encodeWithCoder:
enumerateByteRangesUsingBlock:
error
errorWithDomain:code:userInfo:
extractionCompleteAtArchivePath:
extractionEnteredPassthroughMode
extractionServiceConnection
extractorDelegate
fileExistsAtPath:
fileSystemRepresentationWithPath:
finalBytesSent
finishStreamWithCompletionBlock:
fullReplacementSTAEAExtractor:
hash
incrementalPatchSTAEAExtractor:srcDirectory:
init
initWithCoder:
initWithOptions:
initWithServiceName:
interfaceWithProtocol:
internalExtractionOriginator
invalidate
isEqual:
isInvalid
isKindOfClass:
isMemberOfClass:
isPrepared
lastResumptionOffset
length
mutableCopy
numberWithUnsignedShort:
objectForKeyedSubscript:
originator
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pluginBundlePath
prepareForExtractionToPath:completionBlock:
remoteObjectProxyWithErrorHandler:
remote_extractionCompleteAtArchivePath:
remote_extractionEnteredPassthroughMode
remote_finishStreamWithCompletionBlock:
remote_prepareForExtractionToPath:sandboxExtensionToken:options:withCompletionBlock:
remote_setExtractionProgress:
remote_supplyBytes:withCompletionBlock:
remote_suspendStreamWithCompletionBlock:
remote_terminateStreamWithError:completionBlock:
removeItemAtPath:error:
requiredExtractionMemory
reservationQueue
reservedExtractionMemory
respondsToSelector:
resume
retain
retainCount
self
sessionID
setArchiveID:
setAsymmetricDecryptionKey:
setDataStreamStarted:
setError:
setExportedInterface:
setExportedObject:
setExtractionProgress:
setExtractorDelegate:
setFinalBytesSent:
setInterruptionHandler:
setInvalidationHandler:
setIsInvalid:
setIsPrepared:
setLastResumptionOffset:
setObject:forKey:
setOption:forKey:
setOriginator:
setPluginBundlePath:
setPluginDirectory:
setRemoteObjectInterface:
setRequiredExtractionMemory:
setReservedExtractionMemory:
setSessionID:
setSigningPublicKey:
setSourceDirectory:
setSourceDirectory:sandboxExtension:
setSymmetricDecryptionKey:
setValue:forKey:
signingPublicKey
stringWithCString:encoding:
stringWithFileSystemRepresentation:length:
stringWithFormat:
subdataWithRange:
superclass
supplyBytes:withCompletionBlock:
supportsSecureCoding
suppressCompletionsDuringShutdown
suspendStreamWithCompletionBlock:
symmetricDecryptionKey
terminateStreamWithError:completionBlock:
unsignedLongLongValue
userInfo
zone
@16@0:8
v24@0:8@16
B32@0:8@16@24
@24@0:8@16
@32@0:8@16@24
v24@0:8d16
v16@0:8
v24@0:8@"NSString"16
@"<STExtractionOriginatorProtocol>"
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v24@0:8@?16
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?@"NSDictionary"Q@"NSError">40
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
@"<STExtractorDelegate>"16@0:8
v24@0:8@"<STExtractorDelegate>"16
@24@0:8^{_NSZone=}16
v32@0:8@16@24
v24@0:8Q16
v20@0:8B16
@"NSMutableDictionary"
@"<STExtractorDelegate>"
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"STExtractionOriginator"
@"NSError"
@(#)PROGRAM:StreamingExtractor  PROJECT:StreamingExtractor-1
STExtractorError
[%s:%d][%s] %@
STCreateErrorWithInfo
STAEAExtractorSymmetricEncryptionKey<Private>
STAEAExtractorAsymmetricDecryptionKey<Private>
STAEAExtractorSigningPublicKey<Private>
STAEAExtractorSourceDirectory
STAEAExtractorArchiveID
STAEAExtractorSourceDirectorySandboxExtension<Private>
+[STRemoteExtractor(STAEAExtractor) STAEAExtractorWithOptions:]
[srcDir isKindOfClass:[NSString class]]
/Library/Caches/com.apple.xbs/Sources/StreamingExtractor_Sim/StreamingExtractor_Framework/STAEAExtractor.m
[sandboxExtensionOption isKindOfClass:[NSString class]]
+[STRemoteExtractor(STAEAExtractor) fullReplacementSTAEAExtractor:]
sessionID != nil
STAEAExtractionPlugin
+[STRemoteExtractor(STAEAExtractor) incrementalPatchSTAEAExtractor:srcDirectory:]
srcDirectory != nil
-[STRemoteExtractor(STAEAExtractor) setSourceDirectory:sandboxExtension:]
path_result != NULL
com.apple.STExtractionService
sandbox_extension != NULL
v8@?0
com.apple.StreamingExtractor
com.apple.StreamingExtractor.signposts
STRemoteExtractorPluginBundleName
STRemoteExtractorPluginBundlePath
STRemoteExtractorPluginDirectory
STRemoteExtractorDoesConsumeExtractedData
STRemoteExtractorSessionID
STRemoteExtractorSuppressCompletionsDuringShutdown
STRemoteExtractorFrameworkPath
STRemoteExtractorMemoryFootprint
-[STRemoteExtractor init]
options
-[STRemoteExtractor createOutputDir:]
result
/Library/Caches/com.apple.xbs/Sources/StreamingExtractor_Sim/StreamingExtractor_Framework/STRemoteExtractor.m
Failed to create extraction directory at path %@: %@
-[STRemoteExtractor suppressCompletionsDuringShutdown]
[option isKindOfClass:[NSNumber class]]
-[STRemoteExtractor _reserveExtractionMemory]
numRequiredBytes != 0
required extraction memory == 0
numRequiredBytes <= MAX_EXTRACTION_MEMORY_FOOTPRINT
num required bytes (%zu) > max allowed extraction memory (%d)
STRemoteExtractor became invalid while waiting for extraction memory reservation
-[STRemoteExtractor _releaseExtractionMemory]
-[STRemoteExtractor _checkForInvalidExtractionMemoryReservation]
-[STRemoteExtractor doesConsumeExtractedData]
-[STRemoteExtractor prepareForExtractionToPath:completionBlock:]
path != nil
No path to extract to
com.apple.StreamingExtractor.STRemoteExtractorIOQueue
_ioQueue != NULL
Failed to create displatch queue for I/O
_reservationQueue != NULL
Failed to get global concurrent queue for extraction memory reservations
-[STRemoteExtractor prepareForExtractionToPath:completionBlock:]_block_invoke
!self.isPrepared
-prepare... called on already prepared extractor
self.extractionServiceConnection != nil
Failed to create NSXPCConnection
Connection interrupted to streaming extraction service
-[STRemoteExtractor prepareForExtractionToPath:completionBlock:]_block_invoke_3
Connection invalidated to streaming extraction service
-[STRemoteExtractor prepareForExtractionToPath:completionBlock:]_block_invoke_5
self.error == nil
Failed to realpath "%@" at "%s": %s
v16@?0@"NSError"8
-[STRemoteExtractor prepareForExtractionToPath:completionBlock:]_block_invoke_2
v32@?0@"NSDictionary"8Q16@"NSError"24
-[STRemoteExtractor _invalidate]
-[STRemoteExtractor _sendData:completion:]
-supplyBytes called on extractor that has already returned an error: %@
self.isPrepared
%s called before -prepareForExtraction on %@
!self.isInvalid
-supplyBytes: called on invalid extractor
no service connection for extraction service
v28@?0@"NSError"8B16Q20
-[STRemoteExtractor _sendData:completion:]_block_invoke
FAILED
SUCCEEDED
v20@?0@"NSError"8B16
v40@?0r^v8{_NSRange=QQ}16^B32
lastByteRange.location != NSNotFound
internal error processing byte ranges
failed
succeeded
ErrorCausedBySystemShuttingDown
-[STRemoteExtractor supplyBytes:withCompletionBlock:]
bytes != nil
no bytes supplied to -supplyBytes
self.ioQueue != NULL
no ioQueue
copiedBytes != nil
unable to copy bytes
-[STRemoteExtractor supplyBytes:withCompletionBlock:]_block_invoke
-[STRemoteExtractor supplyBytes:withCompletionBlock:]_block_invoke_4
reservationError == nil
-[STRemoteExtractor suspendStreamWithCompletionBlock:]
-[STRemoteExtractor suspendStreamWithCompletionBlock:]_block_invoke
%s called before prepare on %@
-suspendStreamWithCompletionBlock: called on invalid extractor
%@: no connection to extraction service
-[STRemoteExtractor suspendStreamWithCompletionBlock:]_block_invoke_3
v24@?0Q8@"NSError"16
-[STRemoteExtractor finishStreamWithCompletionBlock:]
-[STRemoteExtractor finishStreamWithCompletionBlock:]_block_invoke
-[STRemoteExtractor finishStreamWithCompletionBlock:]_block_invoke_3
-[STRemoteExtractor terminateStreamWithError:completionBlock:]
-[STRemoteExtractor terminateStreamWithError:completionBlock:]_block_invoke
-[STRemoteExtractor terminateStreamWithError:completionBlock:]_block_invoke_3
framework
%{public}s: Error [%s:%d][%s]: %@ - %ld - %@ %@
%{public}s: %s: AssertMacros: %s, %s file: %s, line: %d
%{public}s: %s: AssertMacros: %s - Failed to get realpath for source dir, %s file: %s, line: %d
%{public}s: %s: AssertMacros: %s - Failed to get sandbox extension for "%s" : %s, %s file: %s, line: %d
%{public}s: %s not available.
%{public}s: Creating output dir: %@
%{public}s: %zu bytes
%{public}s: waiting for available extraction memory (need [%zu] - avail [%zu])
%{public}s: available memory notification (need [%zu] - avail [%zu] - isValid [%d]
%{public}s: Got extraction memory reservation [%zu] - %zu bytes still available
%{public}s: Releasing extraction memory reservation [%zu] - %zu bytes available
%{public}s: Extraction invalid - signaling to allow possible thread waiting for extraction memory to return
%{public}s: path: %@
%{public}s: Existing path is not a directory - removing and recreating: %s
%{public}s: Failed to remove existing path: %s (%@)
%{public}s: Trying to create it anyway.
%{public}s: Failed to issue sandbox extension for "%s" : %d (%s)
%{public}s: %@: prepare returning error %@
%{public}s: %@: prepare completed with offset %llu, error %@
%{public}s: %@: extractor requires %zu bytes extraction memory
%{public}s: %@: calling prepare completion block with offset %llu, error %@
%{public}s: %@: invalidating
%{public}s: Supplying entire byte range of data (%lu bytes)
Sending buffer (%lu bytes) to extraction service over XPC
%{public}s: got error from remote connection: %@
Finished (FAILED) processing buffer (%lu bytes) sent to extraction service over XPC
Finished (%s) processing buffer (%lu bytes) sent to extraction service over XPC
%{public}s: Starting to send %lu bytes to extractor in chunks
Starting fragmentation of supplied buffer (%lu bytes)
%{public}s: Already processed {%lu, %lu}
%{public}s: Reserved %ld bytes; adding to existing length: %ld bytes; total reserved: %lu bytes
%{public}s: Failed to reserve last range; falling out with last range {%lu, %lu}
%{public}s: Waiting for %lu bytes to becom available
%{public}s: Reserved %ld bytes for too-big partial range {%lu, %lu}
%{public}s: Reserved %ld bytes at %ld for too-big partial range {%lu, %lu}
%{public}s: Supplying byte range {%lu, %lu}
Sending buffer (%lu bytes) to the extraction service over XPC
DATA_OVER_XPC
%{public}s: Active partial range {%lu, %lu} exhausted
Ending fragmentation of the supplied buffer
FRAGMENT_DATA
%{public}s: %@: calling supplyBytes: completion block with error %@
%{public}s: %@: calling supplyBytes: completion block with no error; dataComplete = %s
%@: -supplyBytes:[%lu bytes] %s
%{public}s: %@: -supplyBytes:[%lu bytes]
%@: -supplyBytes:[%lu bytes] began
SUPPLY_BYTES
%{public}s: %@: suspend called on extractor that has already returned an error %@
%{public}s: %@: calling suspend completion block with offset %llu, error %@
%{public}s: %@: finish called on extractor that has already returned an error %@
%{public}s: %@: calling finish completion block - error %@
%{public}s: %@: terminate called on extractor that has already returned an error: %@
%{public}s: %@: calling terminate completion block - error %@
STAEAExtractor
STExtractionOriginator
STExtractionOriginatorProtocol
STExtractionServiceProtocol
STRemoteExtractor
STExtractor
NSObject
NSSecureCoding
NSCoding
NSCopying
TQ,N,V_requiredExtractionMemory
STAEAExtractorWithOptions:
_finalBytesSent
T@"<STExtractionOriginatorProtocol>",W,V_originator
dealloc
T@"<STExtractorDelegate>",W,N,V_extractorDelegate
isProxy
T@"NSDictionary",R,N,V_options
pluginDirectory
T@"NSObject<OS_dispatch_queue>",R,N,V_ioQueue
sourceDirectory
.cxx_destruct
TQ,N,V_reservedExtractionMemory
T#,R
bundleForClass:
T@"<STExtractorDelegate>",W,N
ioQueue
T@"NSData",&,N
options
T@"NSError",&,N,V_error
release
T@"NSObject<OS_dispatch_queue>",R,N,V_reservationQueue
T@"NSString",&,N
T@"NSString",R,C
T@"NSXPCConnection",R,N,V_extractionServiceConnection
T@"STExtractionOriginator",R,N,V_internalExtractionOriginator
TB,N,V_dataStreamStarted
TB,N,V_finalBytesSent
TB,N,V_isInvalid
TB,N,V_isPrepared
TB,R
TB,R,N
TQ,N,V_lastResumptionOffset
TQ,R
UTF8String
_checkForInvalidExtractionMemoryReservation
_dataStreamStarted
_error
_extractionServiceConnection
_extractorDelegate
_internalExtractionOriginator
_invalidate
_ioQueue
_isInvalid
_isPrepared
_lastResumptionOffset
_options
_originator
_releaseExtractionMemory
_requiredExtractionMemory
_reservationQueue
_reserveExtractionMemory
_reservedExtractionMemory
_sendData:completion:
addEntriesFromDictionary:
allocWithZone:
archiveID
asymmetricDecryptionKey
autorelease
boolValue
bundlePath
class
conformsToProtocol:
copy
copyWithZone:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createOutputDir:
dataStreamStarted
debugDescription
decodePropertyListForKey:
defaultManager
description
dictionary
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
doesConsumeExtractedData
encodeObject:forKey:
encodeWithCoder:
enumerateByteRangesUsingBlock:
error
errorWithDomain:code:userInfo:
extractionCompleteAtArchivePath:
extractionEnteredPassthroughMode
extractionServiceConnection
extractorDelegate
fileExistsAtPath:
fileSystemRepresentationWithPath:
finalBytesSent
finishStreamWithCompletionBlock:
fullReplacementSTAEAExtractor:
hash
incrementalPatchSTAEAExtractor:srcDirectory:
init
initWithCoder:
initWithOptions:
initWithServiceName:
interfaceWithProtocol:
internalExtractionOriginator
invalidate
isEqual:
isInvalid
isKindOfClass:
isMemberOfClass:
isPrepared
lastResumptionOffset
length
mutableCopy
numberWithUnsignedShort:
objectForKeyedSubscript:
originator
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pluginBundlePath
prepareForExtractionToPath:completionBlock:
remoteObjectProxyWithErrorHandler:
remote_extractionCompleteAtArchivePath:
remote_extractionEnteredPassthroughMode
remote_finishStreamWithCompletionBlock:
remote_prepareForExtractionToPath:sandboxExtensionToken:options:withCompletionBlock:
remote_setExtractionProgress:
remote_supplyBytes:withCompletionBlock:
remote_suspendStreamWithCompletionBlock:
remote_terminateStreamWithError:completionBlock:
removeItemAtPath:error:
requiredExtractionMemory
reservationQueue
reservedExtractionMemory
respondsToSelector:
resume
retain
retainCount
self
sessionID
setArchiveID:
setAsymmetricDecryptionKey:
setDataStreamStarted:
setError:
setExportedInterface:
setExportedObject:
setExtractionProgress:
setExtractorDelegate:
setFinalBytesSent:
setInterruptionHandler:
setInvalidationHandler:
setIsInvalid:
setIsPrepared:
setLastResumptionOffset:
setObject:forKey:
setOption:forKey:
setOriginator:
setPluginBundlePath:
setPluginDirectory:
setRemoteObjectInterface:
setRequiredExtractionMemory:
setReservedExtractionMemory:
setSessionID:
setSigningPublicKey:
setSourceDirectory:
setSourceDirectory:sandboxExtension:
setSymmetricDecryptionKey:
setValue:forKey:
signingPublicKey
stringWithCString:encoding:
stringWithFileSystemRepresentation:length:
stringWithFormat:
subdataWithRange:
superclass
supplyBytes:withCompletionBlock:
supportsSecureCoding
suppressCompletionsDuringShutdown
suspendStreamWithCompletionBlock:
symmetricDecryptionKey
terminateStreamWithError:completionBlock:
unsignedLongLongValue
userInfo
zone
@16@0:8
v24@0:8@16
B32@0:8@16@24
@24@0:8@16
@32@0:8@16@24
v24@0:8d16
v16@0:8
v24@0:8@"NSString"16
@"<STExtractionOriginatorProtocol>"
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v24@0:8@?16
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?@"NSDictionary"Q@"NSError">40
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
@"<STExtractorDelegate>"16@0:8
v24@0:8@"<STExtractorDelegate>"16
@24@0:8^{_NSZone=}16
v32@0:8@16@24
v24@0:8Q16
v20@0:8B16
@"NSMutableDictionary"
@"<STExtractorDelegate>"
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"STExtractionOriginator"
@"NSError"
