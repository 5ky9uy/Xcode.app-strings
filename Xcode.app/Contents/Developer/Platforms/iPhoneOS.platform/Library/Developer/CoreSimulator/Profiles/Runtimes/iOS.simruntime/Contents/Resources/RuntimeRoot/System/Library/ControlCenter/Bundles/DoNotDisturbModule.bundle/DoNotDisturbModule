com.apple.donotdisturb.control-center.module
com.apple.control-center.manual-toggle
prefs:root=DO_NOT_DISTURB
v8@?0
com.apple.donotdisturb
ControlCenter
v20@?0B8@"NSError"12
v24@?0@"DNDLifetimeDetails"8@"NSError"16
B8@?0
CONTROL_CENTER_TITLE
CONTROL_CENTER_SETTINGS_LINK_TITLE
DoNotDisturbDarker
DoNotDisturb
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
contentViewController
T@"UIViewController<CCUIContentModuleContentViewController>",R,N
backgroundViewController
T@"UIViewController<CCUIContentModuleBackgroundViewController>",R,N
currentAssertion
T@"DNDModeAssertion",&,N,V_currentAssertion
T@"UIViewController<CCUIContentModuleContentViewController>",R,D,N
Registered for state updates
Error registering for state updates: error=%{public}@
Added assertion update listener
Error adding assertion update listener: error=%{public}@
Setting current assertion: previousAssertion=%{public}@, currentAssertion=%{public}@
Could not set current assertion lifetime detail as assertion has changed
Set current assertion lifetime details: details=%{public}@
Will reload menu options
Successfully took toggle assertion; assertion=%{public}@
Unable to take toggle assertion; error=%{public}@
Active assertion changed: assertion=%{public}@
Will toggle state for active: active=%{BOOL}u
Taking toggle assertion
Invalidating all assertions for toggle
Successfully invalidated all assertions
Unable to invalidate all assertions; error=%{public}@
@(#)PROGRAM:DoNotDisturbModule  PROJECT:DoNotDisturb-1
DNDUIControlCenterModule
CCUIContentModule
NSObject
DNDLifetimeDetailsProviderDelegate
DNDStateUpdateListener
DNDModeAssertionUpdateListener
initWithNibName:bundle:
setIndentation:
setUseTallLayout:
init
setDelegate:
serviceForClientIdentifier:
addStateUpdateListener:withCompletionHandler:
queryCurrentStateWithError:
addAssertionUpdateListener:withCompletionHandler:
activeModeAssertionWithError:
setCurrentAssertion:
_observeSystemNotifications
_unobserveSystemNotifications
dealloc
isEqual:
details
lifetime
lifetimeDetailsForAssertionDetails:error:
_updateDoNotDisturbMenuItemsIfExpanded
lifetimeDetailsWithMetadataForAssertionDetails:completionHandler:
isExpanded
_updateDoNotDisturbMenuItems
countByEnumeratingWithState:objects:count:
identifier
isEqualToString:
_menuItemForLifeTimeDetails:
addObject:
setMenuItems:
name
invalidateActiveModeAssertionWithError:
lifetimeForLifetimeDetails:error:
setIdentifier:
setLifetime:
takeModeAssertionWithDetails:error:
initWithTitle:identifier:handler:
metadata
setSubtitle:
setSelected:
count
viewDidLoad
_configureGlyphPackageDescription
bundleForClass:
localizedStringForKey:value:table:
setTitle:
contentModuleContext
URLWithString:
openURL:completionHandler:
setFooterButtonTitle:handler:
viewWillAppear:
_refreshState
startUpdatingLifetimeDetails
viewDidDisappear:
stopUpdatingLifetimeDetails
resetLifetimeDetails
isSelected
_toggleStateForActive:
_refreshStateWithSelected:expanded:
startUpdatingLifetimeDetailMetadata
performWithoutAnimation:
stopUpdatingLifetimeDetailMetadata
willTransitionToExpandedContentMode:
didTransitionToExpandedContentMode:
setContentModuleContext:
state
isActive
setGlyphState:
lifetimeUntilEndOfScheduleWithIdentifier:
invalidateAllActiveModeAssertionsWithError:
descriptionForPackageNamed:inBundle:
setGlyphPackageDescription:
defaultCenter
_updateForDarkerSystemColorsChange
addObserver:selector:name:object:
removeObserver:name:object:
initialize
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
contentViewControllerForContext:
backgroundViewControllerForContext:
contentViewController
backgroundViewController
lifetimeDetailsProvider:didUpdateAvailableLifetimeDetails:
stateService:didReceiveDoNotDisturbStateUpdate:
modeAssertionService:didUpdateActiveModeAssertion:
modeAssertionService:didReceiveModeAssertionInvalidation:
shouldBeginTransitionToExpandedContentModule
_canShowWhileLocked
buttonTapped:forEvent:
.cxx_destruct
currentAssertion
_contentModuleContext
_selectedOnExpansion
_stateService
_assertionService
_currentState
_lifetimeDetailsProvider
_availableLifetimeDetails
_currentAssertionLifetimeDetails
_currentAssertion
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v24@0:8@16
@"UIViewController<CCUIContentModuleContentViewController>"24@0:8@"CCUIContentModulePresentationContext"16
@"UIViewController<CCUIContentModuleBackgroundViewController>"24@0:8@"CCUIContentModulePresentationContext"16
v24@0:8@"CCUIContentModuleContext"16
@"UIViewController<CCUIContentModuleContentViewController>"16@0:8
@"UIViewController<CCUIContentModuleBackgroundViewController>"16@0:8
v32@0:8@16@24
v32@0:8@"DNDLifetimeDetailsProvider"16@"NSArray"24
v32@0:8@"DNDStateService"16@"DNDStateUpdate"24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertion"24
v32@0:8@"DNDModeAssertionService"16@"DNDModeAssertionInvalidation"24
@32@0:8@16@24
v20@0:8B16
v24@0:8B16B20
@"CCUIContentModuleContext"
@"DNDStateService"
@"DNDModeAssertionService"
@"DNDState"
@"DNDLifetimeDetailsProvider"
@"NSArray"
@"DNDLifetimeDetails"
@"DNDModeAssertion"
