com.apple.pairedunlock
kPURemoteDeviceState_Version
kPURemoteDeviceState_PasscodeSet
kPURemoteDeviceState_PasscodeLocked
kPURemoteDeviceState_UnlockOnly
kPURemoteDeviceState_WristDetectEnabled
kPURemoteDeviceState_PasscodePolicy
B8@?0
@"NSObject"8@?0
version
passcodeSet
isUnlockOnly
isPasscodeLocked
wristDetectEnabled
policy
kPURemotePasscodePolicy_MinimumLength
kPURemotePasscodePolicy_ModificationAllowed
isModificationAllowed
passcodeMinimumLength
v8@?0
com.apple.PairedUnlock
pairedunlock
PasscodeCreate
PasscodeChange
PasscodeRemove
PairForUnlock
DisableWristDetection
EnableWristDetection
Cancel
com.apple.pairedunlock.removed-lockout
connection
delegate
%@-%@
com.apple.paired-unlock
Unlock manager connection interrupted
Unlock manager connection INVALIDATED
PairedUnlock connection failed to check in, error = %@!
v16@?0@"NSError"8
v24@?0@"PURemoteDeviceState"8@"NSError"16
connection requestDeviceSetWristDetectionDisabled: %@
PUError
PURemoteDeviceState
NSSecureCoding
NSCoding
PURemotePasscodePolicy
PUUnlockServer
NSObject
PUUnlockClient
PUConnection
PUConnectionUnlockClient
TB,N,GisUnlockOnly,V_unlockOnly
T#,R
_passcodePolicy
T@"NSString",R,C
checkIn
T@"PURemotePasscodePolicy",&,N,V_passcodePolicy
dealloc
TB,N,GhasPasscodeSet,V_passcodeSet
isProxy
TB,N,GisPasscodeLocked,V_passcodeLocked
release
TB,R
setPasscodeSet:
TQ,N,V_passcodeMinimumLength
unpairForUnlock
UTF8String
.cxx_destruct
_passcodeLocked
T@"<PUConnectionDelegate>",W,V_delegate
appendUnsignedInteger:withName:
T@"PUConnection",W,N,V_connection
clientInterface
T@?,C,N,V_remoteDeviceRemoveLockoutHandler
isEqual
TB,N,GisModificationAllowed,V_modificationAllowed
numberWithBool:
TB,N,GisWristDetectEnabled,V_wristDetectEnabled
serverInterface
TI,N,V_version
setWithObjects:
TQ,R
version
_connection
_delegate
_delegateQueue
_modificationAllowed
_passcodeMinimumLength
_passcodeSet
_remoteDeviceRemoveLockoutHandler
_serverConnection
_serverConnectionQueue
_unlockClient
_unlockOnly
_version
_wristDetectEnabled
appendBool:
appendBool:counterpart:
appendBool:withName:
appendBool:withName:ifEqualTo:
appendInt:withName:
appendObject:
appendObject:counterpart:
appendObject:withName:
appendUnsignedInteger:
autorelease
build
builderWithObject:
builderWithObject:ofExpectedClass:
class
conformsToProtocol:
connection
copy
debugDescription
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectForKey:
delegate
delegateIfRespondsToSelector:
description
dictionaryWithObjects:forKeys:count:
didCompleteRemoteAction:error:
didDisableOnlyRemoteUnlock:error:
didEnableOnlyRemoteUnlock:error:
didGetRemoteDeviceState:error:
didPairForUnlock:error:
didUnpairForUnlock:error:
disableOnlyRemoteUnlock
enableOnlyRemoteUnlockWithPasscode:
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
errorWithCode:description:
errorWithDomain:code:userInfo:
getRemoteDeviceState:
hasPasscodeSet
hash
init
initWithCoder:
initWithConnection:
initWithDelegate:
initWithMachServiceName:options:
interfaceWithProtocol:
invalidate
isEqual:
isKindOfClass:
isMemberOfClass:
isModificationAllowed
isPasscodeLocked
isUnlockOnly
isWristDetectEnabled
modificationAllowed
pairForUnlockWithPasscode:
passcodeLocked
passcodeMinimumLength
passcodePolicy
passcodeSet
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
queryRemoteDeviceState:
queueNameWithSuffix:
remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
remoteDeviceDidRemoveLockout:error:
remoteDeviceDidUnlock
remoteDeviceRemoveLockoutHandler
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
requestDeviceSetWristDetectionDisabled:completion:
requestRemoteDeviceRemoteAction:type:
requestRemoteDeviceRemoveLockout
requestRemoteDeviceRemoveLockout:
requestRemoteDeviceUnlockNotification
respondsToSelector:
resume
retain
retainCount
self
serverConnection
setClasses:forSelector:argumentIndex:ofReply:
setConnection:
setDelegate:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
setModificationAllowed:
setPasscodeLocked:
setPasscodeMinimumLength:
setPasscodePolicy:
setRemoteDeviceRemoveLockoutHandler:
setRemoteObjectInterface:
setServerConnection:
setUnlockOnly:
setVersion:
setWristDetectEnabled:
stringWithFormat:
superclass
supportsSecureCoding
syncPasscodeState
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnection:didPairForUnlock:error:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnection:remoteDeviceDidNotifyState:
unlockConnectionRemoteDeviceDidUnlock:
unlockOnly
wristDetectEnabled
zone
@32@0:8Q16@24
@16@0:8
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
Q16@0:8
I16@0:8
v20@0:8I16
v20@0:8B16
v16@0:8
@"PURemotePasscodePolicy"
v24@0:8Q16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8q16q24
v28@0:8B16@20
v24@0:8@?16
v28@0:8B16@?20
v24@0:8@"NSString"16
v28@0:8B16@"NSError"20
v24@0:8@?<v@?@"PURemoteDeviceState"@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v36@0:8B16@20@28
v32@0:8@16@24
v36@0:8B16@"PURemoteDeviceState"20@"NSError"28
v32@0:8@"PURemoteDeviceState"16@"NSError"24
r*24@0:8@16
@?16@0:8
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"PUConnectionUnlockClient"
@"<PUConnectionDelegate>"
@"PUConnection"
com.apple.pairedunlock
kPURemoteDeviceState_Version
kPURemoteDeviceState_PasscodeSet
kPURemoteDeviceState_PasscodeLocked
kPURemoteDeviceState_UnlockOnly
kPURemoteDeviceState_WristDetectEnabled
kPURemoteDeviceState_PasscodePolicy
B8@?0
@"NSObject"8@?0
version
passcodeSet
isUnlockOnly
isPasscodeLocked
wristDetectEnabled
policy
kPURemotePasscodePolicy_MinimumLength
kPURemotePasscodePolicy_ModificationAllowed
isModificationAllowed
passcodeMinimumLength
v8@?0
com.apple.PairedUnlock
pairedunlock
PasscodeCreate
PasscodeChange
PasscodeRemove
PairForUnlock
DisableWristDetection
EnableWristDetection
Cancel
com.apple.pairedunlock.removed-lockout
connection
delegate
%@-%@
com.apple.paired-unlock
Unlock manager connection interrupted
Unlock manager connection INVALIDATED
PairedUnlock connection failed to check in, error = %@!
v16@?0@"NSError"8
v24@?0@"PURemoteDeviceState"8@"NSError"16
connection requestDeviceSetWristDetectionDisabled: %@
PUError
PURemoteDeviceState
NSSecureCoding
NSCoding
PURemotePasscodePolicy
PUUnlockServer
NSObject
PUUnlockClient
PUConnection
PUConnectionUnlockClient
TB,N,GisUnlockOnly,V_unlockOnly
T#,R
_passcodePolicy
T@"NSString",R,C
checkIn
T@"PURemotePasscodePolicy",&,N,V_passcodePolicy
dealloc
TB,N,GhasPasscodeSet,V_passcodeSet
isProxy
TB,N,GisPasscodeLocked,V_passcodeLocked
release
TB,R
setPasscodeSet:
TQ,N,V_passcodeMinimumLength
unpairForUnlock
UTF8String
.cxx_destruct
_passcodeLocked
T@"<PUConnectionDelegate>",W,V_delegate
appendUnsignedInteger:withName:
T@"PUConnection",W,N,V_connection
clientInterface
T@?,C,N,V_remoteDeviceRemoveLockoutHandler
isEqual
TB,N,GisModificationAllowed,V_modificationAllowed
numberWithBool:
TB,N,GisWristDetectEnabled,V_wristDetectEnabled
serverInterface
TI,N,V_version
setWithObjects:
TQ,R
version
_connection
_delegate
_delegateQueue
_modificationAllowed
_passcodeMinimumLength
_passcodeSet
_remoteDeviceRemoveLockoutHandler
_serverConnection
_serverConnectionQueue
_unlockClient
_unlockOnly
_version
_wristDetectEnabled
appendBool:
appendBool:counterpart:
appendBool:withName:
appendBool:withName:ifEqualTo:
appendInt:withName:
appendObject:
appendObject:counterpart:
appendObject:withName:
appendUnsignedInteger:
autorelease
build
builderWithObject:
builderWithObject:ofExpectedClass:
class
conformsToProtocol:
connection
copy
debugDescription
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectForKey:
delegate
delegateIfRespondsToSelector:
description
dictionaryWithObjects:forKeys:count:
didCompleteRemoteAction:error:
didDisableOnlyRemoteUnlock:error:
didEnableOnlyRemoteUnlock:error:
didGetRemoteDeviceState:error:
didPairForUnlock:error:
didUnpairForUnlock:error:
disableOnlyRemoteUnlock
enableOnlyRemoteUnlockWithPasscode:
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
errorWithCode:description:
errorWithDomain:code:userInfo:
getRemoteDeviceState:
hasPasscodeSet
hash
init
initWithCoder:
initWithConnection:
initWithDelegate:
initWithMachServiceName:options:
interfaceWithProtocol:
invalidate
isEqual:
isKindOfClass:
isMemberOfClass:
isModificationAllowed
isPasscodeLocked
isUnlockOnly
isWristDetectEnabled
modificationAllowed
pairForUnlockWithPasscode:
passcodeLocked
passcodeMinimumLength
passcodePolicy
passcodeSet
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
queryRemoteDeviceState:
queueNameWithSuffix:
remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
remoteDeviceDidRemoveLockout:error:
remoteDeviceDidUnlock
remoteDeviceRemoveLockoutHandler
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
requestDeviceSetWristDetectionDisabled:completion:
requestRemoteDeviceRemoteAction:type:
requestRemoteDeviceRemoveLockout
requestRemoteDeviceRemoveLockout:
requestRemoteDeviceUnlockNotification
respondsToSelector:
resume
retain
retainCount
self
serverConnection
setClasses:forSelector:argumentIndex:ofReply:
setConnection:
setDelegate:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
setModificationAllowed:
setPasscodeLocked:
setPasscodeMinimumLength:
setPasscodePolicy:
setRemoteDeviceRemoveLockoutHandler:
setRemoteObjectInterface:
setServerConnection:
setUnlockOnly:
setVersion:
setWristDetectEnabled:
stringWithFormat:
superclass
supportsSecureCoding
syncPasscodeState
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnection:didPairForUnlock:error:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnection:remoteDeviceDidNotifyState:
unlockConnectionRemoteDeviceDidUnlock:
unlockOnly
wristDetectEnabled
zone
@32@0:8Q16@24
@16@0:8
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
Q16@0:8
I16@0:8
v20@0:8I16
v20@0:8B16
v16@0:8
@"PURemotePasscodePolicy"
v24@0:8Q16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8q16q24
v28@0:8B16@20
v24@0:8@?16
v28@0:8B16@?20
v24@0:8@"NSString"16
v28@0:8B16@"NSError"20
v24@0:8@?<v@?@"PURemoteDeviceState"@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v36@0:8B16@20@28
v32@0:8@16@24
v36@0:8B16@"PURemoteDeviceState"20@"NSError"28
v32@0:8@"PURemoteDeviceState"16@"NSError"24
r*24@0:8@16
@?16@0:8
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"PUConnectionUnlockClient"
@"<PUConnectionDelegate>"
@"PUConnection"
