com.apple.pairedunlock
kPURemoteDeviceState_Version
kPURemoteDeviceState_PasscodeSet
kPURemoteDeviceState_PasscodeLocked
kPURemoteDeviceState_UnlockOnly
kPURemoteDeviceState_WristDetectEnabled
kPURemoteDeviceState_PasscodePolicy
B8@?0
@"NSObject"8@?0
version
passcodeSet
isUnlockOnly
isPasscodeLocked
wristDetectEnabled
policy
kPURemotePasscodePolicy_MinimumLength
kPURemotePasscodePolicy_ModificationAllowed
isModificationAllowed
passcodeMinimumLength
v8@?0
com.apple.PairedUnlock
pairedunlock
PasscodeCreate
PasscodeChange
PasscodeRemove
PairForUnlock
DisableWristDetection
EnableWristDetection
Cancel
com.apple.pairedunlock.removed-lockout
connection
delegate
%@-%@
com.apple.paired-unlock
Unlock manager connection interrupted
Unlock manager connection INVALIDATED
PairedUnlock connection failed to check in, error = %@!
v16@?0@"NSError"8
v24@?0@"PURemoteDeviceState"8@"NSError"16
connection requestDeviceSetWristDetectionDisabled: %@
PUError
PURemoteDeviceState
NSSecureCoding
NSCoding
PURemotePasscodePolicy
PUUnlockServer
NSObject
PUUnlockClient
PUConnection
PUConnectionUnlockClient
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
errorWithCode:description:
init
builderWithObject:ofExpectedClass:
hasPasscodeSet
appendBool:counterpart:
isUnlockOnly
isPasscodeLocked
isWristDetectEnabled
passcodePolicy
appendObject:counterpart:
isEqual
appendBool:
appendObject:
hash
builderWithObject:
appendInt:withName:
appendBool:withName:
appendBool:withName:ifEqualTo:
appendObject:withName:
build
decodeIntegerForKey:
decodeBoolForKey:
decodeObjectForKey:
encodeInteger:forKey:
encodeBool:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
isEqual:
description
version
setVersion:
setPasscodeSet:
setPasscodeLocked:
setUnlockOnly:
setWristDetectEnabled:
setPasscodePolicy:
.cxx_destruct
_passcodeSet
_passcodeLocked
_unlockOnly
_wristDetectEnabled
_version
_passcodePolicy
TI,N,V_version
passcodeSet
TB,N,GhasPasscodeSet,V_passcodeSet
passcodeLocked
TB,N,GisPasscodeLocked,V_passcodeLocked
unlockOnly
TB,N,GisUnlockOnly,V_unlockOnly
wristDetectEnabled
TB,N,GisWristDetectEnabled,V_wristDetectEnabled
T@"PURemotePasscodePolicy",&,N,V_passcodePolicy
isModificationAllowed
passcodeMinimumLength
appendUnsignedInteger:withName:
appendUnsignedInteger:
setModificationAllowed:
setPasscodeMinimumLength:
_modificationAllowed
_passcodeMinimumLength
modificationAllowed
TB,N,GisModificationAllowed,V_modificationAllowed
TQ,N,V_passcodeMinimumLength
queueNameWithSuffix:
initWithConnection:
initWithDelegate:
stringWithFormat:
UTF8String
invalidate
dealloc
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
checkIn
pairForUnlockWithPasscode:
unpairForUnlock
enableOnlyRemoteUnlockWithPasscode:
disableOnlyRemoteUnlock
requestRemoteDeviceRemoteAction:type:
requestRemoteDeviceUnlockNotification
requestRemoteDeviceRemoveLockout
didCompleteRemoteAction:error:
queryRemoteDeviceState:
requestDeviceSetWristDetectionDisabled:completion:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
didPairForUnlock:error:
didUnpairForUnlock:error:
didEnableOnlyRemoteUnlock:error:
didDisableOnlyRemoteUnlock:error:
remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
remoteDeviceDidUnlock
remoteDeviceDidRemoveLockout:error:
didGetRemoteDeviceState:error:
initWithMachServiceName:options:
serverInterface
setRemoteObjectInterface:
clientInterface
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setServerConnection:
setInvalidationHandler:
resume
remoteObjectProxyWithErrorHandler:
serverConnection
remoteObjectProxy
copy
setRemoteDeviceRemoveLockoutHandler:
numberWithBool:
delegate
unlockConnection:didPairForUnlock:error:
delegateIfRespondsToSelector:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnectionRemoteDeviceDidUnlock:
unlockConnection:remoteDeviceDidNotifyState:
remoteDeviceRemoveLockoutHandler
syncPasscodeState
requestRemoteDeviceRemoveLockout:
getRemoteDeviceState:
setDelegate:
_serverConnection
_serverConnectionQueue
_delegateQueue
_unlockClient
_delegate
_remoteDeviceRemoveLockoutHandler
T@?,C,N,V_remoteDeviceRemoveLockoutHandler
T@"<PUConnectionDelegate>",W,V_delegate
connection
setConnection:
_connection
T@"PUConnection",W,N,V_connection
@32@0:8Q16@24
@16@0:8
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
Q16@0:8
I16@0:8
v20@0:8I16
v20@0:8B16
v16@0:8
@"PURemotePasscodePolicy"
v24@0:8Q16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8q16q24
v28@0:8B16@20
v24@0:8@?16
v28@0:8B16@?20
v24@0:8@"NSString"16
v28@0:8B16@"NSError"20
v24@0:8@?<v@?@"PURemoteDeviceState"@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v36@0:8B16@20@28
v32@0:8@16@24
v36@0:8B16@"PURemoteDeviceState"20@"NSError"28
v32@0:8@"PURemoteDeviceState"16@"NSError"24
r*24@0:8@16
@?16@0:8
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"PUConnectionUnlockClient"
@"<PUConnectionDelegate>"
@"PUConnection"
com.apple.pairedunlock
kPURemoteDeviceState_Version
kPURemoteDeviceState_PasscodeSet
kPURemoteDeviceState_PasscodeLocked
kPURemoteDeviceState_UnlockOnly
kPURemoteDeviceState_WristDetectEnabled
kPURemoteDeviceState_PasscodePolicy
B8@?0
@"NSObject"8@?0
version
passcodeSet
isUnlockOnly
isPasscodeLocked
wristDetectEnabled
policy
kPURemotePasscodePolicy_MinimumLength
kPURemotePasscodePolicy_ModificationAllowed
isModificationAllowed
passcodeMinimumLength
v8@?0
com.apple.PairedUnlock
pairedunlock
PasscodeCreate
PasscodeChange
PasscodeRemove
PairForUnlock
DisableWristDetection
EnableWristDetection
Cancel
com.apple.pairedunlock.removed-lockout
connection
delegate
%@-%@
com.apple.paired-unlock
Unlock manager connection interrupted
Unlock manager connection INVALIDATED
PairedUnlock connection failed to check in, error = %@!
v16@?0@"NSError"8
v24@?0@"PURemoteDeviceState"8@"NSError"16
connection requestDeviceSetWristDetectionDisabled: %@
PUError
PURemoteDeviceState
NSSecureCoding
NSCoding
PURemotePasscodePolicy
PUUnlockServer
NSObject
PUUnlockClient
PUConnection
PUConnectionUnlockClient
UTF8String
stringWithFormat:
setWithObjects:
setRemoteObjectInterface:
setInvalidationHandler:
setInterruptionHandler:
setExportedObject:
setExportedInterface:
setClasses:forSelector:argumentIndex:ofReply:
resume
remoteObjectProxyWithErrorHandler:
remoteObjectProxy
numberWithBool:
isEqual
invalidate
interfaceWithProtocol:
initWithMachServiceName:options:
errorWithDomain:code:userInfo:
encodeObject:forKey:
encodeInteger:forKey:
encodeBool:forKey:
dictionaryWithObjects:forKeys:count:
decodeObjectForKey:
decodeIntegerForKey:
decodeBoolForKey:
copy
builderWithObject:ofExpectedClass:
builderWithObject:
build
appendUnsignedInteger:withName:
appendUnsignedInteger:
appendObject:withName:
appendObject:counterpart:
appendObject:
appendInt:withName:
appendBool:withName:ifEqualTo:
appendBool:withName:
appendBool:
appendBool:counterpart:
errorWithCode:description:
init
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
isEqual:
hash
description
version
setVersion:
hasPasscodeSet
setPasscodeSet:
isPasscodeLocked
setPasscodeLocked:
isUnlockOnly
setUnlockOnly:
isWristDetectEnabled
setWristDetectEnabled:
passcodePolicy
setPasscodePolicy:
.cxx_destruct
_passcodeSet
_passcodeLocked
_unlockOnly
_wristDetectEnabled
_version
_passcodePolicy
TI,N,V_version
passcodeSet
TB,N,GhasPasscodeSet,V_passcodeSet
passcodeLocked
TB,N,GisPasscodeLocked,V_passcodeLocked
unlockOnly
TB,N,GisUnlockOnly,V_unlockOnly
wristDetectEnabled
TB,N,GisWristDetectEnabled,V_wristDetectEnabled
T@"PURemotePasscodePolicy",&,N,V_passcodePolicy
isModificationAllowed
setModificationAllowed:
passcodeMinimumLength
setPasscodeMinimumLength:
_modificationAllowed
_passcodeMinimumLength
modificationAllowed
TB,N,GisModificationAllowed,V_modificationAllowed
TQ,N,V_passcodeMinimumLength
dealloc
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
checkIn
pairForUnlockWithPasscode:
unpairForUnlock
enableOnlyRemoteUnlockWithPasscode:
disableOnlyRemoteUnlock
requestRemoteDeviceRemoteAction:type:
requestRemoteDeviceUnlockNotification
requestRemoteDeviceRemoveLockout
didCompleteRemoteAction:error:
queryRemoteDeviceState:
requestDeviceSetWristDetectionDisabled:completion:
didPairForUnlock:error:
didUnpairForUnlock:error:
didEnableOnlyRemoteUnlock:error:
didDisableOnlyRemoteUnlock:error:
remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
remoteDeviceDidUnlock
remoteDeviceDidRemoveLockout:error:
didGetRemoteDeviceState:error:
unlockConnection:didPairForUnlock:error:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnectionRemoteDeviceDidUnlock:
unlockConnection:remoteDeviceDidNotifyState:
serverInterface
clientInterface
syncPasscodeState
initWithDelegate:
queueNameWithSuffix:
serverConnection
setServerConnection:
requestRemoteDeviceRemoveLockout:
getRemoteDeviceState:
delegateIfRespondsToSelector:
delegate
setDelegate:
remoteDeviceRemoveLockoutHandler
setRemoteDeviceRemoveLockoutHandler:
_serverConnection
_serverConnectionQueue
_delegateQueue
_unlockClient
_delegate
_remoteDeviceRemoveLockoutHandler
T@?,C,N,V_remoteDeviceRemoveLockoutHandler
T@"<PUConnectionDelegate>",W,V_delegate
initWithConnection:
connection
setConnection:
_connection
T@"PUConnection",W,N,V_connection
@32@0:8Q16@24
@16@0:8
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
Q16@0:8
I16@0:8
v20@0:8I16
v20@0:8B16
v16@0:8
@"PURemotePasscodePolicy"
v24@0:8Q16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8q16q24
v28@0:8B16@20
v24@0:8@?16
v28@0:8B16@?20
v24@0:8@"NSString"16
v28@0:8B16@"NSError"20
v24@0:8@?<v@?@"PURemoteDeviceState"@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v36@0:8B16@20@28
v32@0:8@16@24
v36@0:8B16@"PURemoteDeviceState"20@"NSError"28
v32@0:8@"PURemoteDeviceState"16@"NSError"24
r*24@0:8@16
@?16@0:8
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"PUConnectionUnlockClient"
@"<PUConnectionDelegate>"
@"PUConnection"
