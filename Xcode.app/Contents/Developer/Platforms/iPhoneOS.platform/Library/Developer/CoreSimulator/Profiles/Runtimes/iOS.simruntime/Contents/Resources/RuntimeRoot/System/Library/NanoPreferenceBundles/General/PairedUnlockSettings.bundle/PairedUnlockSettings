com.apple.nanosystemsettings
erase-data-enabled
simple-passcode
CSLLockoutStateDidChangeNotification
NanoSimplePasscodeSettingChangedNotification
CSLDisableWristDetectionChangedNotification
v8@?0
v24@?0@"PURemoteDeviceState"8@"NSError"16
v20@?0B8@"NSError"12
v24@?0@"NSSet"8@"NSError"16
com.apple.paired-unlock
BUSY_TITLE_PASSCODE_ENABLE
BUSY_TITLE_PASSCODE_CHANGE
BUSY_TITLE_PASSCODE_DISABLE_UNLOCK_ONLY
BUSY_TITLE_PASSCODE_DISABLE
BUSY_TITLE_UNLOCK_ENABLE
PasscodeSettings
BUSY_TEXT
BUSY_OK_BUTTON
PairedUnlock:PUSPasscodeSettingsListController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
ALERT_NEED_UNLOCK_TITLE
ALERT_NEED_UNLOCK_TEXT
ALERT_NEED_UNLOCK_CANCEL
InLockout
com.apple.Carousel
TOGGLE_PASSCODE_ID
PASSCODE_DISABLE_UNLOCK_ONLY
PASSCODE_DISABLE
PASSCODE_ENABLE
CHANGE_PASSCODE_ID
PASSCODE_CHANGE_UNLOCK_ONLY
PASSCODE_CHANGE
END_LOCKOUT_GROUP_ID
END_LOCKOUT_BUTTON_ID
SIMPLE_PASSCODE_SWITCH_ID
SIMPLE_PASSCODE_GROUP_ID
SIMPLE_PASSCODE_DESCRIPTION
AUTO_UNLOCK_SWITCH_ID
AUTO_UNLOCK_GROUP_ID
AUTO_UNLOCK_DESCRIPTION
AUTO_UNLOCK_COMPANION_NO_PASSCODE_DESCRIPTION
ERASE_DATA_SWITCH_ID
ERASE_DATA_GROUP_ID
ERASE_DATA_DESCRIPTION
WRIST_DETECTION_GROUP_ID
WRIST_DETECTION_CELL_ID
PASSCODE_DISABLE_WARNING_TITLE_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_TITLE
PASSCODE_DISABLE_WARNING_BODY_CARDS_AND_KEYS_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_BODY_CARDS_AND_KEYS
PASSCODE_DISABLE_WARNING_BODY_CARDS_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_BODY_CARDS
PASSCODE_DISABLE_WARNING_CONFIRM
PASSCODE_DISABLE_WARNING_CANCEL
AUTO_UNLOCK_CONFIRMATION_OK
AUTO_UNLOCK_CONFIRMATION_BODY
AUTO_UNLOCK_CONFIRMATION_CANCEL
WRIST_DETECTION_FOOTER
WRIST_DETECTION_OFF_FOOTER
WRIST_DETECTION_DISABLE_WARNING_CONFIRM
WRIST_DETECTION_DISABLE_WARNING_MSG
WRIST_DETECTION_DISABLE_WARNING_MSG_PAIREDUNLOCK
WRIST_DETECTION_DISABLE_WARNING_MSG_AUTOLOCK
WRIST_DETECTION_DISABLE_WARNING_MSG_UNLOCKPHONE
WRIST_DETECTION_DISABLE_WARNING_MSG_PAY
WRIST_DETECTION_DISABLE_WARNING_MSG_NEWTON
WRIST_DETECTION_DISABLE_WARNING_MSG_HEART
WRIST_DETECTION_DISABLE_WARNING_MSG_SCANDIUM
PasscodeSettings_Scandium
WRIST_DETECTION_DISABLE_WARNING_MSG_RR
WRIST_DETECTION_DISABLE_WARNING_MSG_EUCALYPTUS
WRIST_DETECTION_DISABLE_WARNING_MSG_ACTIVITY
WRIST_DETECTION_DISABLE_WARNING_MSG_NOISE
WRIST_DETECTION_DISABLE_WARNING_CANCEL
E17D2903-B868-4E6C-8E76-6D4939BEED44
F5C2DAD0-38FB-4B3B-86D3-B264F4F8CBDA
BD3A4341-7090-4622-9694-2AC0F536C478
5C64C95B-8E7C-46AB-A110-1E51C93D7B7F
C0F3C2C3-0CDE-4DF9-A95A-789AC9A0348B
SOSUtilities
Unable to find class %s
HKFeatureFlagBloodOxygenSaturationEnabled
CREATE
CHANGE
REMOVE
ENABLE_UNLOCK
ENABLE_WRIST_DETECT
DISABLE_WRIST_DETECT
REMOTE_PASSCODE_%@_TITLE
REMOTE_PASSCODE_%@_TEXT
_action
T#,R
_gizmoSupportPasscodePolicySync
T@"<PUSRemotePasscodeViewControllerDelegate>",W,N,V_passcodeDelegate
_setGizmoState:
T@"PUConnection",R,N,V_connection
bundleForClass:
T@"PUSRemotePasscodeInstructionViewController",&,N,V_instructionController
initWithAction:
T@"UILabel",&,N,V_instructionLabel
initWithDomain:
TB,N,V_devicesArePairedForUnlocking
numberWithBool:
TB,N,V_gizmoHasPaymentPasses
removeObserver:
TB,N,V_gizmoUnlocksPhone
setPasscodeSet:
Ti,N,V_activityFlags
togglePasscode:
_addActivityFlag:
version
.cxx_destruct
_cancel
T@"<PUSRemotePasscodeViewControllerDelegate>",W,N,V_delegate
_justChangedWantsSimplePasscode
T@"NSString",R,C
alertView:clickedButtonAtIndex:
T@"PURemoteDeviceState",&,N,V_gizmoState
dealloc
T@"SFAutoUnlockManager",&,N,V_autoUnlockManager
initWithActivityIndicatorStyle:
T@?,C,N,V_checkGizmoUnlockedCompletionHandler
isProxy
TB,N,V_gizmoHasCredentialedPasses
release
TB,N,V_gizmoIsInLockout
setBool:forKey:
TQ,R
specifierForID:
_activityFlags
unpairForUnlock
_autoUnlockManager
_awaitingUnlockAlertView
_cancelRemoteAction
_checkGizmoLockState
_checkGizmoUnlockedCompletionHandler
_checkHasCredentialedPasses
_checkHasPaymentPasses
_connection
_delegate
_devicesArePairedForUnlocking
_enableAutoUnlockCanceled:
_enableAutoUnlockConfirmed:
_endLockoutAvailable
_finishRemoteAction:
_gizmoHardwareSupportsSEP
_gizmoHasCredentialedPasses
_gizmoHasPaymentPasses
_gizmoIsInLockout
_gizmoState
_gizmoSupportEnvironmentalDosimetry
_gizmoSupportEucalyptus
_gizmoSupportHeartRateAlert
_gizmoSupportsKappaDetection
_gizmoSupportsRespiratoryRate
_gizmoSupportsSEPWristDetectSetting
_gizmoSupportsScandium
_gizmoUnlocksPhone
_handleError:
_handleUnknownError
_instructionController
_instructionLabel
_noteAppWillResignActive
_passcodeDelegate
_passcodeMinimumLength
_passcodeModificationAllowed
_pendingAction
_promptForGizmoUnlock
_removeActivityFlag:
_resetSimplePasscodeChangeIfNeeded
_setWristDetectFooter:reload:
_showWristDetectDisableConfirmation
_startRemoteAction:
_storeAndSyncSimplePasscodeEnabled:
_syncManager
_updateLockoutState
_updateSimplePasscodeState
_updateUnlockPhoneEnabled
_updateUnlockState
_wantsSimplePasscode
activityFlags
addObserver:
addObserver:selector:name:object:
addSubview:
alertView:didDismissWithButtonIndex:
alertView:willDismissWithButtonIndex:
alertViewCancel:
alertViewShouldEnableFirstOtherButton:
animateAlongsideTransition:completion:
appendString:
arrayWithObjects:count:
autoUnlockEnabledValue
autoUnlockManager
autorelease
boolForKey:
boolForKey:keyExistsAndHasValidFormat:
boolRestrictionForFeature:
boolValue
bounds
canBeShownFromSuspendedState
cancelDisableWristDetect:
changePasscode
checkGizmoUnlockedCompletionHandler
class
code
confirmDisablePasscode:
confirmDisableWristDetect:
conformsToProtocol:
connection
count
countByEnumeratingWithState:objects:count:
crashDetectionWristDetectionWarningDescription
debugDescription
defaultCenter
delegate
description
devicesArePairedForUnlocking
dictionaryWithObjects:forKeys:count:
didPresentAlertView:
dismissViewControllerAnimated:completion:
dismissWithClickedButtonIndex:animated:
domain
eligibleAutoUnlockDevicesWithCompletionHandler:
endLockout:
eraseDataEnabledValue
getActivePairedDevice
getDevices
gizmoHasCredentialedPasses
gizmoHasPaymentPasses
gizmoIsInLockout
gizmoState
gizmoUnlocksPhone
hasPasscodeSet
hash
init
initWithBarButtonSystemItem:target:action:
initWithCustomView:
initWithFrame:
initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
initWithUUIDString:
instructionController
instructionLabel
isDefaultPairedDevice
isEqual:
isEqualToString:
isKappaDetectionSupportedOnActiveWatch
isKappaVisible
isKindOfClass:
isMemberOfClass:
isModificationAllowed
isPasscodeLocked
isPasscodeModificationAllowed
isPasscodeRequired
isPasscodeSet
isSettingLockedDownByRestrictions:
isUnlockOnly
isWristDetectEnabled
kappaTriggersEmergencySOS
loadSpecifiersFromPlistName:target:
localizedStringForKey:value:table:
localizedStringWithFormat:
mainScreen
navigationBar
navigationController
navigationItem
newtonTriggersEmergencySOS
numberWithInt:
numberWithUnsignedInt:
objectAtIndexedSubscript:
passcodeDelegate
passcodeMinimumLength
passcodePolicy
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
popViewControllerAnimated:
presentViewController:animated:completion:
presentedViewController
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
queryRemoteDeviceState:
readPreferenceValue:
reloadSpecifier:
reloadSpecifierID:
reloadSpecifierID:animated:
reloadSpecifiers
reloadUI
remotePasscodeViewControllerDidCancel:
removeObject:
requestRemoteDeviceRemoteAction:type:
requestRemoteDeviceRemoveLockout:
respondsToSelector:
retain
retainCount
scale
self
setActivityFlags:
setAutoUnlockEnabledValue:
setAutoUnlockManager:
setBackgroundColor:
setCancelButton:
setCheckGizmoUnlockedCompletionHandler:
setConfirmationAction:
setConfirmationCancelAction:
setDelegate:
setDevicesArePairedForUnlocking:
setEraseDataEnabledValue:
setFont:
setFrame:
setGizmoHasCredentialedPasses:
setGizmoHasPaymentPasses:
setGizmoIsInLockout:
setGizmoState:
setGizmoUnlocksPhone:
setInstructionController:
setInstructionLabel:
setLeftBarButtonItem:
setModalInPresentation:
setName:
setNumberOfLines:
setOkButton:
setPasscodeDelegate:
setPreferenceValue:specifier:
setPrompt:
setProperty:forKey:
setRightBarButtonItem:
setSimplePasscodeEnabledValue:
setTarget:
setText:
setTextAlignment:
setTextColor:
setTitle:
setUnlockOnly:
setViewControllers:
setWithObject:
setWristDetectValue:specifier:
setupWithDictionary:
sharedConnection
sharedInstance
sharedUnlockManager
show
showConfirmationViewForSpecifier:
simplePasscodeEnabledValue
sizeThatFits:
specifiers
startAnimating
stringWithFormat:
stringWithString:
superclass
supportedInterfaceOrientations
supportsCapability:
synchronize
synchronizeNanoDomain:keys:
systemFontOfSize:
transitionCoordinator
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnection:didPairForUnlock:error:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnection:remoteDeviceDidNotifyState:
unlockConnectionRemoteDeviceDidUnlock:
unlockEnabled
unlockEnabledWithDevice:completionHandler:
unsignedIntegerValue
valueForProperty:
valueRestrictionForFeature:
view
viewDidLoad
viewWillLayoutSubviews
willPresentAlertView:
wristDetectValue:
zone
Updating gizmo state %@
Will bypass lockout to allow user re-enable pin entry
Will ask user to enter passcode on gizmo
Allow user to view settings because gizmo is unlocked
Checking gizmo state
Checking with Sharing if paired unlock is enabled
Paired unlock enabled=%{BOOL}u
Checking with Sharing if gizmo can unlock phone
Unable to determine if gizmo can unlock phone, error %@
Gizmo unlocks phone enabled=%{BOOL}u
Received error %{public}@
Finished remote action %@, completed = %@
Starting remote action %@
Canceling remote action
Remote action completed:%{BOOL}u, gizmo state: %@
Received new gizmo state: %@
busyOrDisabled:%{BOOL}u, requireUnlockOnly:%{BOOL}u, passcodeModificationAllowed:%{BOOL}u, hasPasscodeSet:%{BOOL}u, gizmoIsInLockout:%{BOOL}u
thisDeviceHasPasscode:%{BOOL}u, nonSimplePasscodeRequired:%{BOOL}u, isUnlockOnly:%{BOOL}u
activityFlags:0x%X, _pendingAction:%u, isPasscodeSet:%{BOOL}u, hasPasscodeSet:%{BOOL}u, devicesArePairedForUnlocking:%{BOOL}u
enabling wrist dection, paired device version = %@
disabling wrist dection, paired device version = %@, wrist detect support in SEP = %@
Activity flag updates from 0x%X to 0x%X
PUSPasscodeSettingsListController
PUConnectionDelegatePrivate
PUConnectionDelegate
NSObject
UIAlertViewDelegate
PUSRemotePasscodeViewControllerDelegate
MCProfileConnectionObserver
PUSRemotePasscodeInstructionViewController
PUSRemotePasscodeViewController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16B24@28
v24@0:8@16
v36@0:8@"PUConnection"16B24@"NSError"28
v24@0:8@"PUConnection"16
v44@0:8@16B24@28@36
v32@0:8@16@24
v44@0:8@"PUConnection"16B24@"PURemoteDeviceState"28@"NSError"36
v32@0:8@"PUConnection"16@"PURemoteDeviceState"24
v32@0:8@16q24
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v16@0:8
v20@0:8B16
v24@0:8q16
@24@0:8@16
v28@0:8@16B24
v20@0:8i16
@?16@0:8
v24@0:8@?16
i16@0:8
@"UIAlertView"
@"NPSManager"
@"SFAutoUnlockManager"
@"PURemoteDeviceState"
@"PUConnection"
@24@0:8q16
@"<PUSRemotePasscodeViewControllerDelegate>"
@"UILabel"
@"PUSRemotePasscodeInstructionViewController"
softlink:r:path:/System/Library/PrivateFrameworks/SOS.framework/SOS
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
com.apple.nanosystemsettings
erase-data-enabled
simple-passcode
CSLLockoutStateDidChangeNotification
NanoSimplePasscodeSettingChangedNotification
CSLDisableWristDetectionChangedNotification
v8@?0
v24@?0@"PURemoteDeviceState"8@"NSError"16
v20@?0B8@"NSError"12
v24@?0@"NSSet"8@"NSError"16
com.apple.paired-unlock
BUSY_TITLE_PASSCODE_ENABLE
BUSY_TITLE_PASSCODE_CHANGE
BUSY_TITLE_PASSCODE_DISABLE_UNLOCK_ONLY
BUSY_TITLE_PASSCODE_DISABLE
BUSY_TITLE_UNLOCK_ENABLE
PasscodeSettings
BUSY_TEXT
BUSY_OK_BUTTON
PairedUnlock:PUSPasscodeSettingsListController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
ALERT_NEED_UNLOCK_TITLE
ALERT_NEED_UNLOCK_TEXT
ALERT_NEED_UNLOCK_CANCEL
InLockout
com.apple.Carousel
TOGGLE_PASSCODE_ID
PASSCODE_DISABLE_UNLOCK_ONLY
PASSCODE_DISABLE
PASSCODE_ENABLE
CHANGE_PASSCODE_ID
PASSCODE_CHANGE_UNLOCK_ONLY
PASSCODE_CHANGE
END_LOCKOUT_GROUP_ID
END_LOCKOUT_BUTTON_ID
SIMPLE_PASSCODE_SWITCH_ID
SIMPLE_PASSCODE_GROUP_ID
SIMPLE_PASSCODE_DESCRIPTION
AUTO_UNLOCK_SWITCH_ID
AUTO_UNLOCK_GROUP_ID
AUTO_UNLOCK_DESCRIPTION
AUTO_UNLOCK_COMPANION_NO_PASSCODE_DESCRIPTION
ERASE_DATA_SWITCH_ID
ERASE_DATA_GROUP_ID
ERASE_DATA_DESCRIPTION
WRIST_DETECTION_GROUP_ID
WRIST_DETECTION_CELL_ID
PASSCODE_DISABLE_WARNING_TITLE_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_TITLE
PASSCODE_DISABLE_WARNING_BODY_CARDS_AND_KEYS_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_BODY_CARDS_AND_KEYS
PASSCODE_DISABLE_WARNING_BODY_CARDS_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_BODY_CARDS
PASSCODE_DISABLE_WARNING_CONFIRM
PASSCODE_DISABLE_WARNING_CANCEL
AUTO_UNLOCK_CONFIRMATION_OK
AUTO_UNLOCK_CONFIRMATION_BODY
AUTO_UNLOCK_CONFIRMATION_CANCEL
WRIST_DETECTION_FOOTER
WRIST_DETECTION_OFF_FOOTER
WRIST_DETECTION_DISABLE_WARNING_CONFIRM
WRIST_DETECTION_DISABLE_WARNING_MSG
WRIST_DETECTION_DISABLE_WARNING_MSG_PAIREDUNLOCK
WRIST_DETECTION_DISABLE_WARNING_MSG_AUTOLOCK
WRIST_DETECTION_DISABLE_WARNING_MSG_UNLOCKPHONE
WRIST_DETECTION_DISABLE_WARNING_MSG_PAY
WRIST_DETECTION_DISABLE_WARNING_MSG_NEWTON
WRIST_DETECTION_DISABLE_WARNING_MSG_HEART
WRIST_DETECTION_DISABLE_WARNING_MSG_SCANDIUM
PasscodeSettings_Scandium
WRIST_DETECTION_DISABLE_WARNING_MSG_RR
WRIST_DETECTION_DISABLE_WARNING_MSG_EUCALYPTUS
WRIST_DETECTION_DISABLE_WARNING_MSG_ACTIVITY
WRIST_DETECTION_DISABLE_WARNING_MSG_NOISE
WRIST_DETECTION_DISABLE_WARNING_CANCEL
E17D2903-B868-4E6C-8E76-6D4939BEED44
F5C2DAD0-38FB-4B3B-86D3-B264F4F8CBDA
BD3A4341-7090-4622-9694-2AC0F536C478
5C64C95B-8E7C-46AB-A110-1E51C93D7B7F
C0F3C2C3-0CDE-4DF9-A95A-789AC9A0348B
SOSUtilities
Unable to find class %s
HKFeatureFlagBloodOxygenSaturationEnabled
CREATE
CHANGE
REMOVE
ENABLE_UNLOCK
ENABLE_WRIST_DETECT
DISABLE_WRIST_DETECT
REMOTE_PASSCODE_%@_TITLE
REMOTE_PASSCODE_%@_TEXT
_action
T#,R
_gizmoSupportPasscodePolicySync
T@"<PUSRemotePasscodeViewControllerDelegate>",W,N,V_passcodeDelegate
_setGizmoState:
T@"PUConnection",R,N,V_connection
bundleForClass:
T@"PUSRemotePasscodeInstructionViewController",&,N,V_instructionController
initWithAction:
T@"UILabel",&,N,V_instructionLabel
initWithDomain:
TB,N,V_devicesArePairedForUnlocking
numberWithBool:
TB,N,V_gizmoHasPaymentPasses
removeObserver:
TB,N,V_gizmoUnlocksPhone
setPasscodeSet:
Ti,N,V_activityFlags
togglePasscode:
_addActivityFlag:
version
.cxx_destruct
_cancel
T@"<PUSRemotePasscodeViewControllerDelegate>",W,N,V_delegate
_justChangedWantsSimplePasscode
T@"NSString",R,C
alertView:clickedButtonAtIndex:
T@"PURemoteDeviceState",&,N,V_gizmoState
dealloc
T@"SFAutoUnlockManager",&,N,V_autoUnlockManager
initWithActivityIndicatorStyle:
T@?,C,N,V_checkGizmoUnlockedCompletionHandler
isProxy
TB,N,V_gizmoHasCredentialedPasses
release
TB,N,V_gizmoIsInLockout
setBool:forKey:
TQ,R
specifierForID:
_activityFlags
unpairForUnlock
_autoUnlockManager
_awaitingUnlockAlertView
_cancelRemoteAction
_checkGizmoLockState
_checkGizmoUnlockedCompletionHandler
_checkHasCredentialedPasses
_checkHasPaymentPasses
_connection
_delegate
_devicesArePairedForUnlocking
_enableAutoUnlockCanceled:
_enableAutoUnlockConfirmed:
_endLockoutAvailable
_finishRemoteAction:
_gizmoHardwareSupportsSEP
_gizmoHasCredentialedPasses
_gizmoHasPaymentPasses
_gizmoIsInLockout
_gizmoState
_gizmoSupportEnvironmentalDosimetry
_gizmoSupportEucalyptus
_gizmoSupportHeartRateAlert
_gizmoSupportsKappaDetection
_gizmoSupportsRespiratoryRate
_gizmoSupportsSEPWristDetectSetting
_gizmoSupportsScandium
_gizmoUnlocksPhone
_handleError:
_handleUnknownError
_instructionController
_instructionLabel
_noteAppWillResignActive
_passcodeDelegate
_passcodeMinimumLength
_passcodeModificationAllowed
_pendingAction
_promptForGizmoUnlock
_removeActivityFlag:
_resetSimplePasscodeChangeIfNeeded
_setWristDetectFooter:reload:
_showWristDetectDisableConfirmation
_startRemoteAction:
_storeAndSyncSimplePasscodeEnabled:
_syncManager
_updateLockoutState
_updateSimplePasscodeState
_updateUnlockPhoneEnabled
_updateUnlockState
_wantsSimplePasscode
activityFlags
addObserver:
addObserver:selector:name:object:
addSubview:
alertView:didDismissWithButtonIndex:
alertView:willDismissWithButtonIndex:
alertViewCancel:
alertViewShouldEnableFirstOtherButton:
animateAlongsideTransition:completion:
appendString:
arrayWithObjects:count:
autoUnlockEnabledValue
autoUnlockManager
autorelease
boolForKey:
boolForKey:keyExistsAndHasValidFormat:
boolRestrictionForFeature:
boolValue
bounds
canBeShownFromSuspendedState
cancelDisableWristDetect:
changePasscode
checkGizmoUnlockedCompletionHandler
class
code
confirmDisablePasscode:
confirmDisableWristDetect:
conformsToProtocol:
connection
count
countByEnumeratingWithState:objects:count:
crashDetectionWristDetectionWarningDescription
debugDescription
defaultCenter
delegate
description
devicesArePairedForUnlocking
dictionaryWithObjects:forKeys:count:
didPresentAlertView:
dismissViewControllerAnimated:completion:
dismissWithClickedButtonIndex:animated:
domain
eligibleAutoUnlockDevicesWithCompletionHandler:
endLockout:
eraseDataEnabledValue
getActivePairedDevice
getDevices
gizmoHasCredentialedPasses
gizmoHasPaymentPasses
gizmoIsInLockout
gizmoState
gizmoUnlocksPhone
hasPasscodeSet
hash
init
initWithBarButtonSystemItem:target:action:
initWithCustomView:
initWithFrame:
initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
initWithUUIDString:
instructionController
instructionLabel
isDefaultPairedDevice
isEqual:
isEqualToString:
isKappaDetectionSupportedOnActiveWatch
isKappaVisible
isKindOfClass:
isMemberOfClass:
isModificationAllowed
isPasscodeLocked
isPasscodeModificationAllowed
isPasscodeRequired
isPasscodeSet
isSettingLockedDownByRestrictions:
isUnlockOnly
isWristDetectEnabled
kappaTriggersEmergencySOS
loadSpecifiersFromPlistName:target:
localizedStringForKey:value:table:
localizedStringWithFormat:
mainScreen
navigationBar
navigationController
navigationItem
newtonTriggersEmergencySOS
numberWithInt:
numberWithUnsignedInt:
objectAtIndexedSubscript:
passcodeDelegate
passcodeMinimumLength
passcodePolicy
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
popViewControllerAnimated:
presentViewController:animated:completion:
presentedViewController
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
queryRemoteDeviceState:
readPreferenceValue:
reloadSpecifier:
reloadSpecifierID:
reloadSpecifierID:animated:
reloadSpecifiers
reloadUI
remotePasscodeViewControllerDidCancel:
removeObject:
requestRemoteDeviceRemoteAction:type:
requestRemoteDeviceRemoveLockout:
respondsToSelector:
retain
retainCount
scale
self
setActivityFlags:
setAutoUnlockEnabledValue:
setAutoUnlockManager:
setBackgroundColor:
setCancelButton:
setCheckGizmoUnlockedCompletionHandler:
setConfirmationAction:
setConfirmationCancelAction:
setDelegate:
setDevicesArePairedForUnlocking:
setEraseDataEnabledValue:
setFont:
setFrame:
setGizmoHasCredentialedPasses:
setGizmoHasPaymentPasses:
setGizmoIsInLockout:
setGizmoState:
setGizmoUnlocksPhone:
setInstructionController:
setInstructionLabel:
setLeftBarButtonItem:
setModalInPresentation:
setName:
setNumberOfLines:
setOkButton:
setPasscodeDelegate:
setPreferenceValue:specifier:
setPrompt:
setProperty:forKey:
setRightBarButtonItem:
setSimplePasscodeEnabledValue:
setTarget:
setText:
setTextAlignment:
setTextColor:
setTitle:
setUnlockOnly:
setViewControllers:
setWithObject:
setWristDetectValue:specifier:
setupWithDictionary:
sharedConnection
sharedInstance
sharedUnlockManager
show
showConfirmationViewForSpecifier:
simplePasscodeEnabledValue
sizeThatFits:
specifiers
startAnimating
stringWithFormat:
stringWithString:
superclass
supportedInterfaceOrientations
supportsCapability:
synchronize
synchronizeNanoDomain:keys:
systemFontOfSize:
transitionCoordinator
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnection:didPairForUnlock:error:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnection:remoteDeviceDidNotifyState:
unlockConnectionRemoteDeviceDidUnlock:
unlockEnabled
unlockEnabledWithDevice:completionHandler:
unsignedIntegerValue
valueForProperty:
valueRestrictionForFeature:
view
viewDidLoad
viewWillLayoutSubviews
willPresentAlertView:
wristDetectValue:
zone
Updating gizmo state %@
Will bypass lockout to allow user re-enable pin entry
Will ask user to enter passcode on gizmo
Allow user to view settings because gizmo is unlocked
Checking gizmo state
Checking with Sharing if paired unlock is enabled
Paired unlock enabled=%{BOOL}u
Checking with Sharing if gizmo can unlock phone
Unable to determine if gizmo can unlock phone, error %@
Gizmo unlocks phone enabled=%{BOOL}u
Received error %{public}@
Finished remote action %@, completed = %@
Starting remote action %@
Canceling remote action
Remote action completed:%{BOOL}u, gizmo state: %@
Received new gizmo state: %@
busyOrDisabled:%{BOOL}u, requireUnlockOnly:%{BOOL}u, passcodeModificationAllowed:%{BOOL}u, hasPasscodeSet:%{BOOL}u, gizmoIsInLockout:%{BOOL}u
thisDeviceHasPasscode:%{BOOL}u, nonSimplePasscodeRequired:%{BOOL}u, isUnlockOnly:%{BOOL}u
activityFlags:0x%X, _pendingAction:%u, isPasscodeSet:%{BOOL}u, hasPasscodeSet:%{BOOL}u, devicesArePairedForUnlocking:%{BOOL}u
enabling wrist dection, paired device version = %@
disabling wrist dection, paired device version = %@, wrist detect support in SEP = %@
Activity flag updates from 0x%X to 0x%X
PUSPasscodeSettingsListController
PUConnectionDelegatePrivate
PUConnectionDelegate
NSObject
UIAlertViewDelegate
PUSRemotePasscodeViewControllerDelegate
MCProfileConnectionObserver
PUSRemotePasscodeInstructionViewController
PUSRemotePasscodeViewController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16B24@28
v24@0:8@16
v36@0:8@"PUConnection"16B24@"NSError"28
v24@0:8@"PUConnection"16
v44@0:8@16B24@28@36
v32@0:8@16@24
v44@0:8@"PUConnection"16B24@"PURemoteDeviceState"28@"NSError"36
v32@0:8@"PUConnection"16@"PURemoteDeviceState"24
v32@0:8@16q24
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v16@0:8
v20@0:8B16
v24@0:8q16
@24@0:8@16
v28@0:8@16B24
v20@0:8i16
@?16@0:8
v24@0:8@?16
i16@0:8
@"UIAlertView"
@"NPSManager"
@"SFAutoUnlockManager"
@"PURemoteDeviceState"
@"PUConnection"
@24@0:8q16
@"<PUSRemotePasscodeViewControllerDelegate>"
@"UILabel"
@"PUSRemotePasscodeInstructionViewController"
softlink:r:path:/System/Library/PrivateFrameworks/SOS.framework/SOS
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
