com.apple.nanosystemsettings
erase-data-enabled
simple-passcode
CSLLockoutStateDidChangeNotification
NanoSimplePasscodeSettingChangedNotification
CSLDisableWristDetectionChangedNotification
v8@?0
v24@?0@"PURemoteDeviceState"8@"NSError"16
v20@?0B8@"NSError"12
com.apple.paired-unlock
BUSY_TITLE_PASSCODE_ENABLE
BUSY_TITLE_PASSCODE_CHANGE
BUSY_TITLE_PASSCODE_DISABLE_UNLOCK_ONLY
BUSY_TITLE_PASSCODE_DISABLE
BUSY_TITLE_UNLOCK_ENABLE
PasscodeSettings
BUSY_TEXT
BUSY_OK_BUTTON
ALERT_NEED_UNLOCK_TITLE
ALERT_NEED_UNLOCK_TEXT
ALERT_NEED_UNLOCK_CANCEL
InLockout
com.apple.Carousel
TOGGLE_PASSCODE_ID
PASSCODE_DISABLE_UNLOCK_ONLY
PASSCODE_DISABLE
PASSCODE_ENABLE
CHANGE_PASSCODE_ID
PASSCODE_CHANGE_UNLOCK_ONLY
PASSCODE_CHANGE
END_LOCKOUT_GROUP_ID
END_LOCKOUT_BUTTON_ID
SIMPLE_PASSCODE_SWITCH_ID
SIMPLE_PASSCODE_GROUP_ID
SIMPLE_PASSCODE_DESCRIPTION
AUTO_UNLOCK_SWITCH_ID
AUTO_UNLOCK_GROUP_ID
AUTO_UNLOCK_DESCRIPTION
AUTO_UNLOCK_COMPANION_NO_PASSCODE_DESCRIPTION
ERASE_DATA_SWITCH_ID
ERASE_DATA_GROUP_ID
ERASE_DATA_DESCRIPTION
WRIST_DETECTION_GROUP_ID
WRIST_DETECTION_CELL_ID
PASSCODE_DISABLE_WARNING_TITLE_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_TITLE
PASSCODE_DISABLE_WARNING_BODY_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_BODY
PASSCODE_DISABLE_WARNING_CONFIRM
PASSCODE_DISABLE_WARNING_CANCEL
AUTO_UNLOCK_CONFIRMATION_OK
AUTO_UNLOCK_CONFIRMATION_BODY
AUTO_UNLOCK_CONFIRMATION_CANCEL
WRIST_DETECTION_FOOTER
WRIST_DETECTION_OFF_FOOTER
WRIST_DETECTION_DISABLE_WARNING_CONFIRM
WRIST_DETECTION_DISABLE_WARNING_MSG
WRIST_DETECTION_DISABLE_WARNING_MSG_PAIREDUNLOCK
WRIST_DETECTION_DISABLE_WARNING_MSG_AUTOLOCK
WRIST_DETECTION_DISABLE_WARNING_MSG_PAY
WRIST_DETECTION_DISABLE_WARNING_MSG_HEART
WRIST_DETECTION_DISABLE_WARNING_MSG_NOISE
WRIST_DETECTION_DISABLE_WARNING_MSG_NEWTON
WRIST_DETECTION_DISABLE_WARNING_CANCEL
E17D2903-B868-4E6C-8E76-6D4939BEED44
F5C2DAD0-38FB-4B3B-86D3-B264F4F8CBDA
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
gizmoHasPaymentPasses
TB,N,V_gizmoHasPaymentPasses
devicesArePairedForUnlocking
TB,N,V_devicesArePairedForUnlocking
gizmoState
T@"PURemoteDeviceState",&,N,V_gizmoState
gizmoIsInLockout
TB,N,V_gizmoIsInLockout
checkGizmoUnlockedCompletionHandler
T@?,C,N,V_checkGizmoUnlockedCompletionHandler
connection
T@"PUConnection",R,N,V_connection
activityFlags
Ti,N,V_activityFlags
SOSUtilities
Unable to find class %s
/System/Library/PrivateFrameworks/SOS.framework/SOS
CREATE
CHANGE
REMOVE
ENABLE_UNLOCK
ENABLE_WRIST_DETECT
DISABLE_WRIST_DETECT
REMOTE_PASSCODE_%@_TITLE
REMOTE_PASSCODE_%@_TEXT
delegate
T@"<PUSRemotePasscodeViewControllerDelegate>",W,N,V_delegate
instructionLabel
T@"UILabel",&,N,V_instructionLabel
instructionController
T@"PUSRemotePasscodeInstructionViewController",&,N,V_instructionController
passcodeDelegate
T@"<PUSRemotePasscodeViewControllerDelegate>",W,N,V_passcodeDelegate
init
setDelegate:
_updateSimplePasscodeState
_updateLockoutState
_checkGizmoLockState
_checkHasPaymentPasses
_updateUnlockState
defaultCenter
_noteAppWillResignActive
addObserver:selector:name:object:
sharedConnection
addObserver:
removeObserver:
dealloc
isPasscodeLocked
_endLockoutAvailable
_removeActivityFlag:
setCheckGizmoUnlockedCompletionHandler:
_promptForGizmoUnlock
_addActivityFlag:
_handleError:
_setGizmoState:
queryRemoteDeviceState:
sharedUnlockManager
setDevicesArePairedForUnlocking:
unlockEnabledWithDevice:completionHandler:
domain
isEqualToString:
code
isUnlockOnly
bundleForClass:
localizedStringForKey:value:table:
initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
show
_resetSimplePasscodeChangeIfNeeded
navigationController
popViewControllerAnimated:
numberWithBool:
presentedViewController
dismissViewControllerAnimated:completion:
reloadSpecifiers
initWithDomain:
synchronize
boolForKey:keyExistsAndHasValidFormat:
_gizmoSupportsSEPWristDetectSetting
hasPasscodeSet
initWithAction:
setPasscodeDelegate:
presentViewController:animated:completion:
requestRemoteDeviceRemoteAction:type:
_cancelRemoteAction
_storeAndSyncSimplePasscodeEnabled:
_finishRemoteAction:
setPasscodeSet:
setUnlockOnly:
dismissWithClickedButtonIndex:animated:
isEqual:
loadSpecifiersFromPlistName:target:
specifierForID:
boolRestrictionForFeature:
isPasscodeModificationAllowed
isPasscodeRequired
setProperty:forKey:
setName:
numberWithInt:
removeObject:
isPasscodeSet
valueRestrictionForFeature:
integerValue
localizedStringWithFormat:
_startRemoteAction:
confirmDisablePasscode:
dictionaryWithObjects:forKeys:count:
setupWithDictionary:
setTarget:
setConfirmationAction:
showConfirmationViewForSpecifier:
setGizmoIsInLockout:
requestRemoteDeviceRemoveLockout:
boolValue
isWristDetectEnabled
_enableAutoUnlockConfirmed:
_enableAutoUnlockCanceled:
setConfirmationCancelAction:
unpairForUnlock
reloadSpecifierID:animated:
setBool:forKey:
setWithObject:
synchronizeNanoDomain:keys:
boolForKey:
_showWristDetectDisableConfirmation
version
numberWithUnsignedInt:
setPreferenceValue:specifier:
_setWristDetectFooter:reload:
readPreferenceValue:
isSettingLockedDownByRestrictions:
reloadSpecifier:
setTitle:
stringWithString:
appendString:
_gizmoSupportHeartRateAlert
_gizmoSupportEnvironmentalDosimetry
newtonTriggersEmergencySOS
setPrompt:
setCancelButton:
setOkButton:
confirmDisableWristDetect:
cancelDisableWristDetect:
gizmoIsInLockout
_gizmoHardwareSupportsSEP
sharedInstance
getDevices
count
objectAtIndexedSubscript:
valueForProperty:
reloadSpecifierID:
getActivePairedDevice
initWithUUIDString:
supportsCapability:
reloadUI
activityFlags
setActivityFlags:
initWithActivityIndicatorStyle:
startAnimating
initWithCustomView:
navigationItem
setRightBarButtonItem:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnectionRemoteDeviceDidUnlock:
unlockConnection:didPairForUnlock:error:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnection:remoteDeviceDidNotifyState:
alertView:clickedButtonAtIndex:
alertViewCancel:
willPresentAlertView:
didPresentAlertView:
alertView:willDismissWithButtonIndex:
alertView:didDismissWithButtonIndex:
alertViewShouldEnableFirstOtherButton:
remotePasscodeViewControllerDidCancel:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
specifiers
canBeShownFromSuspendedState
togglePasscode:
changePasscode
endLockout:
autoUnlockEnabledValue
setAutoUnlockEnabledValue:
simplePasscodeEnabledValue
setSimplePasscodeEnabledValue:
eraseDataEnabledValue
setEraseDataEnabledValue:
setWristDetectValue:specifier:
wristDetectValue:
.cxx_destruct
gizmoHasPaymentPasses
setGizmoHasPaymentPasses:
devicesArePairedForUnlocking
gizmoState
setGizmoState:
checkGizmoUnlockedCompletionHandler
connection
_awaitingUnlockAlertView
_pendingAction
_syncManager
_wantsSimplePasscode
_justChangedWantsSimplePasscode
_gizmoHasPaymentPasses
_devicesArePairedForUnlocking
_gizmoIsInLockout
_activityFlags
_gizmoState
_checkGizmoUnlockedCompletionHandler
_connection
_cancel
initWithBarButtonSystemItem:target:action:
setLeftBarButtonItem:
viewDidLoad
stringWithFormat:
view
setBackgroundColor:
initWithFrame:
setText:
setTextColor:
systemFontOfSize:
setFont:
setNumberOfLines:
setTextAlignment:
addSubview:
setModalInPresentation:
bounds
sizeThatFits:
navigationBar
mainScreen
scale
setFrame:
viewWillLayoutSubviews
supportedInterfaceOrientations
delegate
instructionLabel
setInstructionLabel:
_action
_delegate
_instructionLabel
arrayWithObjects:count:
setViewControllers:
passcodeDelegate
instructionController
setInstructionController:
_passcodeDelegate
_instructionController
Received gizmo state %@
Will bypass lockout to allow user re-enable pin entry
Will ask user to enter passcode on gizmo
Allow user to view settings because gizmo is unlocked
Checking gizmo state
Checking with Sharing if paired unlock is enabled
Paired unlock enabled=%{BOOL}u
Received error %{public}@
Finished remote action %@, completed = %@
Starting remote action %@
Canceling remote action
busyOrDisabled:%{BOOL}u, requireUnlockOnly:%{BOOL}u, passcodeModificationAllowed:%{BOOL}u, hasPasscodeSet:%{BOOL}u, gizmoIsInLockout:%{BOOL}u
thisDeviceHasPasscode:%{BOOL}u, nonSimplePasscodeRequired:%{BOOL}u, isUnlockOnly:%{BOOL}u
activityFlags:0x%X, _pendingAction:%u, isPasscodeSet:%{BOOL}u, hasPasscodeSet:%{BOOL}u, devicesArePairedForUnlocking:%{BOOL}u
enabling wrist dection, paired device version = %@
disabling wrist dection, paired device version = %@, wrist detect support in SEP = %@
Activity flag updates from 0x%X to 0x%X
PUSPasscodeSettingsListController
PUConnectionDelegatePrivate
PUConnectionDelegate
NSObject
UIAlertViewDelegate
PUSRemotePasscodeViewControllerDelegate
MCProfileConnectionObserver
PUSRemotePasscodeInstructionViewController
PUSRemotePasscodeViewController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16B24@28
v24@0:8@16
v36@0:8@"PUConnection"16B24@"NSError"28
v24@0:8@"PUConnection"16
v44@0:8@16B24@28@36
v32@0:8@16@24
v44@0:8@"PUConnection"16B24@"PURemoteDeviceState"28@"NSError"36
v32@0:8@"PUConnection"16@"PURemoteDeviceState"24
v32@0:8@16q24
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v16@0:8
v20@0:8B16
v24@0:8q16
@24@0:8@16
v28@0:8@16B24
v20@0:8i16
@?16@0:8
v24@0:8@?16
i16@0:8
@"UIAlertView"
@"NPSManager"
@"PURemoteDeviceState"
@"PUConnection"
@24@0:8q16
@"<PUSRemotePasscodeViewControllerDelegate>"
@"UILabel"
@"PUSRemotePasscodeInstructionViewController"
