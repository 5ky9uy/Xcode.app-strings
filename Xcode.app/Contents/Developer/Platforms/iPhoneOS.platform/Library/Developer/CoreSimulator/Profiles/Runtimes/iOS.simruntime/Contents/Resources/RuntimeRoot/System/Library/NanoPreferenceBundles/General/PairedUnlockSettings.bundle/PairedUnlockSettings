com.apple.nanosystemsettings
erase-data-enabled
simple-passcode
CSLLockoutStateDidChangeNotification
NanoSimplePasscodeSettingChangedNotification
CSLDisableWristDetectionChangedNotification
v8@?0
v24@?0@"PURemoteDeviceState"8@"NSError"16
v20@?0B8@"NSError"12
v24@?0@"NSSet"8@"NSError"16
com.apple.paired-unlock
BUSY_TITLE_PASSCODE_ENABLE
BUSY_TITLE_PASSCODE_CHANGE
BUSY_TITLE_PASSCODE_DISABLE_UNLOCK_ONLY
BUSY_TITLE_PASSCODE_DISABLE
BUSY_TITLE_UNLOCK_ENABLE
PasscodeSettings
BUSY_TEXT
BUSY_OK_BUTTON
PairedUnlock:PUSPasscodeSettingsListController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
ALERT_NEED_UNLOCK_TITLE
ALERT_NEED_UNLOCK_TEXT
ALERT_NEED_UNLOCK_CANCEL
InLockout
com.apple.Carousel
TOGGLE_PASSCODE_ID
PASSCODE_DISABLE_UNLOCK_ONLY
PASSCODE_DISABLE
PASSCODE_ENABLE
CHANGE_PASSCODE_ID
PASSCODE_CHANGE_UNLOCK_ONLY
PASSCODE_CHANGE
END_LOCKOUT_GROUP_ID
END_LOCKOUT_BUTTON_ID
SIMPLE_PASSCODE_SWITCH_ID
SIMPLE_PASSCODE_GROUP_ID
SIMPLE_PASSCODE_DESCRIPTION
AUTO_UNLOCK_SWITCH_ID
AUTO_UNLOCK_GROUP_ID
AUTO_UNLOCK_DESCRIPTION
AUTO_UNLOCK_COMPANION_NO_PASSCODE_DESCRIPTION
ERASE_DATA_SWITCH_ID
ERASE_DATA_GROUP_ID
ERASE_DATA_DESCRIPTION
WRIST_DETECTION_GROUP_ID
WRIST_DETECTION_CELL_ID
PASSCODE_DISABLE_WARNING_TITLE_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_TITLE
PASSCODE_DISABLE_WARNING_BODY_CARDS_AND_KEYS_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_BODY_CARDS_AND_KEYS
PASSCODE_DISABLE_WARNING_BODY_CARDS_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_BODY_CARDS
PASSCODE_DISABLE_WARNING_CONFIRM
PASSCODE_DISABLE_WARNING_CANCEL
AUTO_UNLOCK_CONFIRMATION_OK
AUTO_UNLOCK_CONFIRMATION_BODY
AUTO_UNLOCK_CONFIRMATION_CANCEL
WRIST_DETECTION_FOOTER
WRIST_DETECTION_OFF_FOOTER
WRIST_DETECTION_DISABLE_WARNING_CONFIRM
WRIST_DETECTION_DISABLE_WARNING_MSG
WRIST_DETECTION_DISABLE_WARNING_MSG_PAIREDUNLOCK
WRIST_DETECTION_DISABLE_WARNING_MSG_AUTOLOCK
WRIST_DETECTION_DISABLE_WARNING_MSG_UNLOCKPHONE
WRIST_DETECTION_DISABLE_WARNING_MSG_PAY
WRIST_DETECTION_DISABLE_WARNING_MSG_NEWTON
WRIST_DETECTION_DISABLE_WARNING_MSG_HEART
WRIST_DETECTION_DISABLE_WARNING_MSG_SCANDIUM
PasscodeSettings_Scandium
WRIST_DETECTION_DISABLE_WARNING_MSG_RR
WRIST_DETECTION_DISABLE_WARNING_MSG_EUCALYPTUS
WRIST_DETECTION_DISABLE_WARNING_MSG_ACTIVITY
WRIST_DETECTION_DISABLE_WARNING_MSG_NOISE
WRIST_DETECTION_DISABLE_WARNING_CANCEL
E17D2903-B868-4E6C-8E76-6D4939BEED44
F5C2DAD0-38FB-4B3B-86D3-B264F4F8CBDA
BD3A4341-7090-4622-9694-2AC0F536C478
5C64C95B-8E7C-46AB-A110-1E51C93D7B7F
C0F3C2C3-0CDE-4DF9-A95A-789AC9A0348B
SOSUtilities
Unable to find class %s
HKFeatureFlagBloodOxygenSaturationEnabled
CREATE
CHANGE
REMOVE
ENABLE_UNLOCK
ENABLE_WRIST_DETECT
DISABLE_WRIST_DETECT
REMOTE_PASSCODE_%@_TITLE
REMOTE_PASSCODE_%@_TEXT
init
setDelegate:
_updateSimplePasscodeState
_updateLockoutState
_checkGizmoLockState
_checkHasPaymentPasses
_checkHasCredentialedPasses
_updateUnlockState
_updateUnlockPhoneEnabled
defaultCenter
_noteAppWillResignActive
addObserver:selector:name:object:
sharedConnection
addObserver:
removeObserver:
dealloc
isPasscodeLocked
_endLockoutAvailable
_removeActivityFlag:
setCheckGizmoUnlockedCompletionHandler:
_promptForGizmoUnlock
_addActivityFlag:
_handleError:
_setGizmoState:
queryRemoteDeviceState:
sharedUnlockManager
setDevicesArePairedForUnlocking:
unlockEnabledWithDevice:completionHandler:
countByEnumeratingWithState:objects:count:
isDefaultPairedDevice
unlockEnabled
setGizmoUnlocksPhone:
eligibleAutoUnlockDevicesWithCompletionHandler:
domain
isEqualToString:
code
isUnlockOnly
bundleForClass:
localizedStringForKey:value:table:
initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
show
_resetSimplePasscodeChangeIfNeeded
_handleUnknownError
navigationController
popViewControllerAnimated:
transitionCoordinator
animateAlongsideTransition:completion:
numberWithBool:
presentedViewController
dismissViewControllerAnimated:completion:
reloadSpecifiers
initWithDomain:
synchronize
boolForKey:keyExistsAndHasValidFormat:
_gizmoSupportsSEPWristDetectSetting
hasPasscodeSet
initWithAction:
setPasscodeDelegate:
presentViewController:animated:completion:
requestRemoteDeviceRemoteAction:type:
_cancelRemoteAction
_storeAndSyncSimplePasscodeEnabled:
_finishRemoteAction:
setPasscodeSet:
setUnlockOnly:
dismissWithClickedButtonIndex:animated:
isEqual:
loadSpecifiersFromPlistName:target:
specifierForID:
boolRestrictionForFeature:
_passcodeModificationAllowed
isPasscodeRequired
setProperty:forKey:
setName:
numberWithInt:
removeObject:
isPasscodeSet
_passcodeMinimumLength
localizedStringWithFormat:
_startRemoteAction:
confirmDisablePasscode:
dictionaryWithObjects:forKeys:count:
setupWithDictionary:
setTarget:
setConfirmationAction:
showConfirmationViewForSpecifier:
setGizmoIsInLockout:
requestRemoteDeviceRemoveLockout:
boolValue
isWristDetectEnabled
_enableAutoUnlockConfirmed:
_enableAutoUnlockCanceled:
setConfirmationCancelAction:
unpairForUnlock
reloadSpecifierID:animated:
_gizmoSupportPasscodePolicySync
passcodePolicy
passcodeMinimumLength
valueRestrictionForFeature:
unsignedIntegerValue
isModificationAllowed
isPasscodeModificationAllowed
setBool:forKey:
setWithObject:
synchronizeNanoDomain:keys:
boolForKey:
_showWristDetectDisableConfirmation
version
numberWithUnsignedInt:
setPreferenceValue:specifier:
_setWristDetectFooter:reload:
readPreferenceValue:
isSettingLockedDownByRestrictions:
reloadSpecifier:
setTitle:
stringWithString:
appendString:
gizmoUnlocksPhone
newtonTriggersEmergencySOS
kappaTriggersEmergencySOS
_gizmoSupportsKappaDetection
crashDetectionWristDetectionWarningDescription
_gizmoSupportHeartRateAlert
_gizmoSupportsScandium
_gizmoSupportsRespiratoryRate
_gizmoSupportEucalyptus
_gizmoSupportEnvironmentalDosimetry
setPrompt:
setCancelButton:
setOkButton:
confirmDisableWristDetect:
cancelDisableWristDetect:
gizmoIsInLockout
_gizmoHardwareSupportsSEP
sharedInstance
getDevices
count
objectAtIndexedSubscript:
valueForProperty:
reloadSpecifierID:
isKappaDetectionSupportedOnActiveWatch
isKappaVisible
getActivePairedDevice
initWithUUIDString:
supportsCapability:
reloadUI
activityFlags
setActivityFlags:
initWithActivityIndicatorStyle:
startAnimating
initWithCustomView:
navigationItem
setRightBarButtonItem:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnectionRemoteDeviceDidUnlock:
unlockConnection:didPairForUnlock:error:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnection:remoteDeviceDidNotifyState:
alertView:clickedButtonAtIndex:
alertViewCancel:
willPresentAlertView:
didPresentAlertView:
alertView:willDismissWithButtonIndex:
alertView:didDismissWithButtonIndex:
alertViewShouldEnableFirstOtherButton:
remotePasscodeViewControllerDidCancel:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
specifiers
canBeShownFromSuspendedState
togglePasscode:
changePasscode
endLockout:
autoUnlockEnabledValue
setAutoUnlockEnabledValue:
simplePasscodeEnabledValue
setSimplePasscodeEnabledValue:
eraseDataEnabledValue
setEraseDataEnabledValue:
setWristDetectValue:specifier:
wristDetectValue:
gizmoHasPaymentPasses
setGizmoHasPaymentPasses:
gizmoHasCredentialedPasses
setGizmoHasCredentialedPasses:
devicesArePairedForUnlocking
autoUnlockManager
setAutoUnlockManager:
gizmoState
setGizmoState:
checkGizmoUnlockedCompletionHandler
connection
.cxx_destruct
_awaitingUnlockAlertView
_pendingAction
_syncManager
_wantsSimplePasscode
_justChangedWantsSimplePasscode
_gizmoHasPaymentPasses
_gizmoHasCredentialedPasses
_devicesArePairedForUnlocking
_gizmoUnlocksPhone
_gizmoIsInLockout
_activityFlags
_autoUnlockManager
_gizmoState
_checkGizmoUnlockedCompletionHandler
_connection
TB,N,V_gizmoHasPaymentPasses
TB,N,V_gizmoHasCredentialedPasses
TB,N,V_devicesArePairedForUnlocking
TB,N,V_gizmoUnlocksPhone
T@"SFAutoUnlockManager",&,N,V_autoUnlockManager
T@"PURemoteDeviceState",&,N,V_gizmoState
TB,N,V_gizmoIsInLockout
T@?,C,N,V_checkGizmoUnlockedCompletionHandler
T@"PUConnection",R,N,V_connection
Ti,N,V_activityFlags
_cancel
initWithBarButtonSystemItem:target:action:
setLeftBarButtonItem:
viewDidLoad
stringWithFormat:
view
setBackgroundColor:
initWithFrame:
setText:
setTextColor:
systemFontOfSize:
setFont:
setNumberOfLines:
setTextAlignment:
addSubview:
setModalInPresentation:
bounds
sizeThatFits:
navigationBar
mainScreen
scale
setFrame:
viewWillLayoutSubviews
supportedInterfaceOrientations
delegate
instructionLabel
setInstructionLabel:
_action
_delegate
_instructionLabel
T@"<PUSRemotePasscodeViewControllerDelegate>",W,N,V_delegate
T@"UILabel",&,N,V_instructionLabel
arrayWithObjects:count:
setViewControllers:
passcodeDelegate
instructionController
setInstructionController:
_passcodeDelegate
_instructionController
T@"PUSRemotePasscodeInstructionViewController",&,N,V_instructionController
T@"<PUSRemotePasscodeViewControllerDelegate>",W,N,V_passcodeDelegate
Updating gizmo state %@
Will bypass lockout to allow user re-enable pin entry
Will ask user to enter passcode on gizmo
Allow user to view settings because gizmo is unlocked
Checking gizmo state
Checking with Sharing if paired unlock is enabled
Paired unlock enabled=%{BOOL}u
Checking with Sharing if gizmo can unlock phone
Unable to determine if gizmo can unlock phone, error %@
Gizmo unlocks phone enabled=%{BOOL}u
Received error %{public}@
Finished remote action %@, completed = %@
Starting remote action %@
Canceling remote action
Remote action completed:%{BOOL}u, gizmo state: %@
Received new gizmo state: %@
busyOrDisabled:%{BOOL}u, requireUnlockOnly:%{BOOL}u, passcodeModificationAllowed:%{BOOL}u, hasPasscodeSet:%{BOOL}u, gizmoIsInLockout:%{BOOL}u
thisDeviceHasPasscode:%{BOOL}u, nonSimplePasscodeRequired:%{BOOL}u, isUnlockOnly:%{BOOL}u
activityFlags:0x%X, _pendingAction:%u, isPasscodeSet:%{BOOL}u, hasPasscodeSet:%{BOOL}u, devicesArePairedForUnlocking:%{BOOL}u
enabling wrist dection, paired device version = %@
disabling wrist dection, paired device version = %@, wrist detect support in SEP = %@
Activity flag updates from 0x%X to 0x%X
PUSPasscodeSettingsListController
PUConnectionDelegatePrivate
PUConnectionDelegate
NSObject
UIAlertViewDelegate
PUSRemotePasscodeViewControllerDelegate
MCProfileConnectionObserver
PUSRemotePasscodeInstructionViewController
PUSRemotePasscodeViewController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16B24@28
v24@0:8@16
v36@0:8@"PUConnection"16B24@"NSError"28
v24@0:8@"PUConnection"16
v44@0:8@16B24@28@36
v32@0:8@16@24
v44@0:8@"PUConnection"16B24@"PURemoteDeviceState"28@"NSError"36
v32@0:8@"PUConnection"16@"PURemoteDeviceState"24
v32@0:8@16q24
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v16@0:8
v20@0:8B16
v24@0:8q16
@24@0:8@16
v28@0:8@16B24
v20@0:8i16
@?16@0:8
v24@0:8@?16
i16@0:8
@"UIAlertView"
@"NPSManager"
@"SFAutoUnlockManager"
@"PURemoteDeviceState"
@"PUConnection"
@24@0:8q16
@"<PUSRemotePasscodeViewControllerDelegate>"
@"UILabel"
@"PUSRemotePasscodeInstructionViewController"
softlink:r:path:/System/Library/PrivateFrameworks/SOS.framework/SOS
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
com.apple.nanosystemsettings
erase-data-enabled
simple-passcode
CSLLockoutStateDidChangeNotification
NanoSimplePasscodeSettingChangedNotification
CSLDisableWristDetectionChangedNotification
v8@?0
v24@?0@"PURemoteDeviceState"8@"NSError"16
v20@?0B8@"NSError"12
v24@?0@"NSSet"8@"NSError"16
com.apple.paired-unlock
BUSY_TITLE_PASSCODE_ENABLE
BUSY_TITLE_PASSCODE_CHANGE
BUSY_TITLE_PASSCODE_DISABLE_UNLOCK_ONLY
BUSY_TITLE_PASSCODE_DISABLE
BUSY_TITLE_UNLOCK_ENABLE
PasscodeSettings
BUSY_TEXT
BUSY_OK_BUTTON
PairedUnlock:PUSPasscodeSettingsListController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
ALERT_NEED_UNLOCK_TITLE
ALERT_NEED_UNLOCK_TEXT
ALERT_NEED_UNLOCK_CANCEL
InLockout
com.apple.Carousel
TOGGLE_PASSCODE_ID
PASSCODE_DISABLE_UNLOCK_ONLY
PASSCODE_DISABLE
PASSCODE_ENABLE
CHANGE_PASSCODE_ID
PASSCODE_CHANGE_UNLOCK_ONLY
PASSCODE_CHANGE
END_LOCKOUT_GROUP_ID
END_LOCKOUT_BUTTON_ID
SIMPLE_PASSCODE_SWITCH_ID
SIMPLE_PASSCODE_GROUP_ID
SIMPLE_PASSCODE_DESCRIPTION
AUTO_UNLOCK_SWITCH_ID
AUTO_UNLOCK_GROUP_ID
AUTO_UNLOCK_DESCRIPTION
AUTO_UNLOCK_COMPANION_NO_PASSCODE_DESCRIPTION
ERASE_DATA_SWITCH_ID
ERASE_DATA_GROUP_ID
ERASE_DATA_DESCRIPTION
WRIST_DETECTION_GROUP_ID
WRIST_DETECTION_CELL_ID
PASSCODE_DISABLE_WARNING_TITLE_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_TITLE
PASSCODE_DISABLE_WARNING_BODY_CARDS_AND_KEYS_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_BODY_CARDS_AND_KEYS
PASSCODE_DISABLE_WARNING_BODY_CARDS_UNLOCK_ONLY
PASSCODE_DISABLE_WARNING_BODY_CARDS
PASSCODE_DISABLE_WARNING_CONFIRM
PASSCODE_DISABLE_WARNING_CANCEL
AUTO_UNLOCK_CONFIRMATION_OK
AUTO_UNLOCK_CONFIRMATION_BODY
AUTO_UNLOCK_CONFIRMATION_CANCEL
WRIST_DETECTION_FOOTER
WRIST_DETECTION_OFF_FOOTER
WRIST_DETECTION_DISABLE_WARNING_CONFIRM
WRIST_DETECTION_DISABLE_WARNING_MSG
WRIST_DETECTION_DISABLE_WARNING_MSG_PAIREDUNLOCK
WRIST_DETECTION_DISABLE_WARNING_MSG_AUTOLOCK
WRIST_DETECTION_DISABLE_WARNING_MSG_UNLOCKPHONE
WRIST_DETECTION_DISABLE_WARNING_MSG_PAY
WRIST_DETECTION_DISABLE_WARNING_MSG_NEWTON
WRIST_DETECTION_DISABLE_WARNING_MSG_HEART
WRIST_DETECTION_DISABLE_WARNING_MSG_SCANDIUM
PasscodeSettings_Scandium
WRIST_DETECTION_DISABLE_WARNING_MSG_RR
WRIST_DETECTION_DISABLE_WARNING_MSG_EUCALYPTUS
WRIST_DETECTION_DISABLE_WARNING_MSG_ACTIVITY
WRIST_DETECTION_DISABLE_WARNING_MSG_NOISE
WRIST_DETECTION_DISABLE_WARNING_CANCEL
E17D2903-B868-4E6C-8E76-6D4939BEED44
F5C2DAD0-38FB-4B3B-86D3-B264F4F8CBDA
BD3A4341-7090-4622-9694-2AC0F536C478
5C64C95B-8E7C-46AB-A110-1E51C93D7B7F
C0F3C2C3-0CDE-4DF9-A95A-789AC9A0348B
SOSUtilities
Unable to find class %s
HKFeatureFlagBloodOxygenSaturationEnabled
CREATE
CHANGE
REMOVE
ENABLE_UNLOCK
ENABLE_WRIST_DETECT
DISABLE_WRIST_DETECT
REMOTE_PASSCODE_%@_TITLE
REMOTE_PASSCODE_%@_TEXT
removeObserver:
sharedInstance
synchronizeNanoDomain:keys:
code
view
isPasscodeRequired
setText:
setPreferenceValue:specifier:
presentViewController:animated:completion:
setViewControllers:
defaultCenter
boolForKey:
setFont:
addObserver:selector:name:object:
setName:
unpairForUnlock
setModalInPresentation:
setConfirmationCancelAction:
isEqualToString:
isPasscodeModificationAllowed
eligibleAutoUnlockDevicesWithCompletionHandler:
reloadSpecifierID:
specifierForID:
arrayWithObjects:count:
crashDetectionWristDetectionWarningDescription
removeObject:
sizeThatFits:
hasPasscodeSet
mainScreen
bundleForClass:
numberWithInt:
bounds
reloadSpecifier:
isWristDetectEnabled
initWithDomain:
setConfirmationAction:
synchronize
addObserver:
popViewControllerAnimated:
scale
version
setPasscodeSet:
unlockEnabledWithDevice:completionHandler:
setTarget:
setLeftBarButtonItem:
sharedConnection
setRightBarButtonItem:
domain
appendString:
initWithCustomView:
numberWithBool:
readPreferenceValue:
isPasscodeLocked
supportsCapability:
passcodePolicy
isDefaultPairedDevice
newtonTriggersEmergencySOS
setUnlockOnly:
isUnlockOnly
countByEnumeratingWithState:objects:count:
unlockEnabled
localizedStringWithFormat:
dismissWithClickedButtonIndex:animated:
isModificationAllowed
initWithBarButtonSystemItem:target:action:
initWithUUIDString:
count
navigationItem
valueRestrictionForFeature:
setTitle:
boolValue
showConfirmationViewForSpecifier:
stringWithString:
isKappaVisible
setCancelButton:
isSettingLockedDownByRestrictions:
passcodeMinimumLength
setOkButton:
getDevices
requestRemoteDeviceRemoveLockout:
transitionCoordinator
valueForProperty:
animateAlongsideTransition:completion:
localizedStringForKey:value:table:
stringWithFormat:
dismissViewControllerAnimated:completion:
queryRemoteDeviceState:
boolRestrictionForFeature:
systemFontOfSize:
setTextColor:
setProperty:forKey:
reloadSpecifiers
initWithActivityIndicatorStyle:
setNumberOfLines:
show
objectAtIndexedSubscript:
setBackgroundColor:
getActivePairedDevice
addSubview:
setFrame:
setBool:forKey:
isKappaDetectionSupportedOnActiveWatch
isPasscodeSet
initWithFrame:
requestRemoteDeviceRemoteAction:type:
dictionaryWithObjects:forKeys:count:
setTextAlignment:
setPrompt:
setupWithDictionary:
kappaTriggersEmergencySOS
loadSpecifiersFromPlistName:target:
startAnimating
presentedViewController
initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
unsignedIntegerValue
numberWithUnsignedInt:
reloadSpecifierID:animated:
navigationBar
boolForKey:keyExistsAndHasValidFormat:
setWithObject:
sharedUnlockManager
navigationController
init
_noteAppWillResignActive
dealloc
confirmDisablePasscode:
_enableAutoUnlockConfirmed:
_enableAutoUnlockCanceled:
confirmDisableWristDetect:
cancelDisableWristDetect:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnectionRemoteDeviceDidUnlock:
unlockConnection:didPairForUnlock:error:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnection:remoteDeviceDidNotifyState:
alertView:clickedButtonAtIndex:
alertViewCancel:
willPresentAlertView:
didPresentAlertView:
alertView:willDismissWithButtonIndex:
alertView:didDismissWithButtonIndex:
alertViewShouldEnableFirstOtherButton:
remotePasscodeViewControllerDidCancel:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
_setGizmoState:
_checkGizmoLockState
_checkHasPaymentPasses
_checkHasCredentialedPasses
_updateUnlockState
_updateUnlockPhoneEnabled
_handleError:
_handleUnknownError
_promptForGizmoUnlock
_finishRemoteAction:
_updateLockoutState
_updateSimplePasscodeState
_startRemoteAction:
_resetSimplePasscodeChangeIfNeeded
_cancelRemoteAction
specifiers
canBeShownFromSuspendedState
togglePasscode:
changePasscode
endLockout:
autoUnlockEnabledValue
setAutoUnlockEnabledValue:
simplePasscodeEnabledValue
_passcodeMinimumLength
_passcodeModificationAllowed
_storeAndSyncSimplePasscodeEnabled:
setSimplePasscodeEnabledValue:
eraseDataEnabledValue
setEraseDataEnabledValue:
setWristDetectValue:specifier:
wristDetectValue:
_setWristDetectFooter:reload:
_showWristDetectDisableConfirmation
_endLockoutAvailable
_gizmoHardwareSupportsSEP
_gizmoSupportsSEPWristDetectSetting
_gizmoSupportsKappaDetection
_gizmoSupportHeartRateAlert
_gizmoSupportEnvironmentalDosimetry
_gizmoSupportsScandium
_gizmoSupportsRespiratoryRate
_gizmoSupportPasscodePolicySync
_gizmoSupportEucalyptus
setActivityFlags:
_addActivityFlag:
_removeActivityFlag:
reloadUI
gizmoHasPaymentPasses
setGizmoHasPaymentPasses:
gizmoHasCredentialedPasses
setGizmoHasCredentialedPasses:
devicesArePairedForUnlocking
setDevicesArePairedForUnlocking:
gizmoUnlocksPhone
setGizmoUnlocksPhone:
autoUnlockManager
setAutoUnlockManager:
gizmoState
setGizmoState:
gizmoIsInLockout
setGizmoIsInLockout:
checkGizmoUnlockedCompletionHandler
setCheckGizmoUnlockedCompletionHandler:
connection
activityFlags
.cxx_destruct
_awaitingUnlockAlertView
_pendingAction
_syncManager
_wantsSimplePasscode
_justChangedWantsSimplePasscode
_gizmoHasPaymentPasses
_gizmoHasCredentialedPasses
_devicesArePairedForUnlocking
_gizmoUnlocksPhone
_gizmoIsInLockout
_activityFlags
_autoUnlockManager
_gizmoState
_checkGizmoUnlockedCompletionHandler
_connection
TB,N,V_gizmoHasPaymentPasses
TB,N,V_gizmoHasCredentialedPasses
TB,N,V_devicesArePairedForUnlocking
TB,N,V_gizmoUnlocksPhone
T@"SFAutoUnlockManager",&,N,V_autoUnlockManager
T@"PURemoteDeviceState",&,N,V_gizmoState
TB,N,V_gizmoIsInLockout
T@?,C,N,V_checkGizmoUnlockedCompletionHandler
T@"PUConnection",R,N,V_connection
Ti,N,V_activityFlags
_cancel
viewDidLoad
initWithAction:
viewWillLayoutSubviews
supportedInterfaceOrientations
delegate
setDelegate:
instructionLabel
setInstructionLabel:
_action
_delegate
_instructionLabel
T@"<PUSRemotePasscodeViewControllerDelegate>",W,N,V_delegate
T@"UILabel",&,N,V_instructionLabel
setPasscodeDelegate:
passcodeDelegate
instructionController
setInstructionController:
_passcodeDelegate
_instructionController
T@"PUSRemotePasscodeInstructionViewController",&,N,V_instructionController
T@"<PUSRemotePasscodeViewControllerDelegate>",W,N,V_passcodeDelegate
Updating gizmo state %@
Will bypass lockout to allow user re-enable pin entry
Will ask user to enter passcode on gizmo
Allow user to view settings because gizmo is unlocked
Checking gizmo state
Checking with Sharing if paired unlock is enabled
Paired unlock enabled=%{BOOL}u
Checking with Sharing if gizmo can unlock phone
Unable to determine if gizmo can unlock phone, error %@
Gizmo unlocks phone enabled=%{BOOL}u
Received error %{public}@
Finished remote action %@, completed = %@
Starting remote action %@
Canceling remote action
Remote action completed:%{BOOL}u, gizmo state: %@
Received new gizmo state: %@
busyOrDisabled:%{BOOL}u, requireUnlockOnly:%{BOOL}u, passcodeModificationAllowed:%{BOOL}u, hasPasscodeSet:%{BOOL}u, gizmoIsInLockout:%{BOOL}u
thisDeviceHasPasscode:%{BOOL}u, nonSimplePasscodeRequired:%{BOOL}u, isUnlockOnly:%{BOOL}u
activityFlags:0x%X, _pendingAction:%u, isPasscodeSet:%{BOOL}u, hasPasscodeSet:%{BOOL}u, devicesArePairedForUnlocking:%{BOOL}u
enabling wrist dection, paired device version = %@
disabling wrist dection, paired device version = %@, wrist detect support in SEP = %@
Activity flag updates from 0x%X to 0x%X
PUSPasscodeSettingsListController
PUConnectionDelegatePrivate
PUConnectionDelegate
NSObject
UIAlertViewDelegate
PUSRemotePasscodeViewControllerDelegate
MCProfileConnectionObserver
PUSRemotePasscodeInstructionViewController
PUSRemotePasscodeViewController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16B24@28
v24@0:8@16
v36@0:8@"PUConnection"16B24@"NSError"28
v24@0:8@"PUConnection"16
v44@0:8@16B24@28@36
v32@0:8@16@24
v44@0:8@"PUConnection"16B24@"PURemoteDeviceState"28@"NSError"36
v32@0:8@"PUConnection"16@"PURemoteDeviceState"24
v32@0:8@16q24
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v16@0:8
v20@0:8B16
v24@0:8q16
@24@0:8@16
v28@0:8@16B24
v20@0:8i16
@?16@0:8
v24@0:8@?16
i16@0:8
@"UIAlertView"
@"NPSManager"
@"SFAutoUnlockManager"
@"PURemoteDeviceState"
@"PUConnection"
@24@0:8q16
@"<PUSRemotePasscodeViewControllerDelegate>"
@"UILabel"
@"PUSRemotePasscodeInstructionViewController"
softlink:r:path:/System/Library/PrivateFrameworks/SOS.framework/SOS
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
