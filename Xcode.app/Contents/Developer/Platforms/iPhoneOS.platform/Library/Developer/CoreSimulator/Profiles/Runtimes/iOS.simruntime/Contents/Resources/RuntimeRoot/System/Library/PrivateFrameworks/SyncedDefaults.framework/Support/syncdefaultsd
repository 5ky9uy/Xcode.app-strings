@(#)PROGRAM:syncdefaultsd  PROJECT:SyncedDefaults-
kvs/main
Starting
Exiting due to SIGTERM
Not syncing store that isn't used on this device: %@
Not syncing TCC-disabled store %@
Not syncing store that is disabled via NSUserDefaults: <(%@)>
Checking cloud sync status for store <(%@)> Status is disabled.
Checking cloud sync status for store <(%@)> Status is enabled.
Enabling cloud sync for store <(%@)>
Disabling cloud sync for store <(%@)>
Explicitly disabling store %@
Found bundle identifiers for store %@: %@
No bundle identifiers for store %@
No cached bundle map, generating a new one
Generating store bundle mapping
LSBundleRecord did not map to an effectiveBundleIdentifier or contain one: %@
Checking if bundle identifier: %@ is entitled for KVS
Found %ld store identifiers for bundle identifier: %@ %@ 
No bundle identifier found using LSBundleRecord for: %@
Generated new store bundle mapping: %@
Installed apps changed. Clearing cached store bundle map. Notification=%@
Resuming server
Accepting new XPC connection %@
Created client connection %@
Removing client connection %@
Processing account changes
Processing account changes for sync manager %@
Persona doesn't exist for sync manager %@
Current logged in account identifier: %@
Not processing account changes for %@ due to error getting account identifier: %@
No database account identifier and not logged-in
Database has no account, but the user is now logged in. Setting account identifier and marking everything as needing to be uploaded.
No longer logged into an account
Account in database is the same as logged-in account
Account in database (%@) is different from the logged-in account (%@)
The account did change, will notify clients and tell the sync engine
Will tell sync engine to reload the account for sync manager %@
Found registered store in %@, but no application identifier from %@
Couldn't find any application identifiers for store identifiers: %@
Not creating sync manager for store type %d because it is not supported
Getting sync manager for lookup key=%@ storeType=%@ container=%@
No existing sync manager, creating now for personaLookupKey=%@
Error ensuring KVS directory exists: %@
Error ensuring KVS directory has the right attributes: %@
Will set initial account identifier
Setting initial account identifier to %@
Created sync manager %@
Should not lazily create sync manager %@
Initializing known sync managers
Initializing known sync managers for persona %@
Checking to make sure persona still exists for sync manager %@
Persona still exists for sync manager %@
Persona no longer exists for sync manager %@
No persona unique string, moving on...
Forgetting about sync managers for account identifiers: %@
Registering for periodic analytics XPC activity
Checking in for periodic analytics XPC activity
Setting periodic analytics XPC activity criteria
Sending periodic analytics
Store state for %@: %@
Container state: %@
Error unarchiving server record: %@
No encoded data for new server record %@
Trying to set server record if newer, but no other record
No current system fields record for %@
No current modification date on system fields record for %@
Trying to set server record using record with a different ID. current=%@ other=%@
Server record is newer than current system fields record for %@
Replacing local system fields record for %@: current=%@ other=%@
Not replacing local system fields record for %@: current=%@ other=%@
Merging data from record to %{private}@
Trying to merge data from an unknown record type: %@
Trying to merge data from a record of a different type (%@) from this key value record type (%@)
No modification date in record
Record's modification date was of the wrong class (%@). Expected NSDate.
Error loading data from asset: %@
No file URL for value data asset in %@
No value data in record
Record's value data was of the wrong class (%@). Expected NSData.
No current valueModificationDate
Record value modification date is greater than local value
Replacing local value with value from record
Error decoding value data from record: %@
Expected record type %@ for record name %@, but server record had record type %@
Error generating plist value: %@
Going to use an asset for %@ because the data is %ld bytes
Somehow we got to a point where we're creating a record for %@, but we have no data. Bailing
Could not get key from record %@
Deleting file for asset (%@) in key value record %@
Failed to delete asset file: %@
Error adding notification request: %@
Requesting notification authorization
Error requesting notification authorization: %@
Requested notification authorization, granted=%d
Created change token URL for type=%@ process=%@ url=%@
Got container path from containermanager: %s
Failed to get container path from containermanager: %llu
Falling back to NSFileManager to get the Library directory
Failed to get Library directory from NSFileManager: %@
Found KVS container directory: %@
About to adopt persona %@
Error copying current persona context: %@
Error adopting persona %@: %@
Adopted persona %@ and copied context %@
Error restoring saved persona context %@: %@
Restored saved persona context %@
Checking if syncing is disabled for store %@
Caching disabled store identifiers: %@
Store %@ is disabled
Finding list of disabled store identifiers
Error getting bundle record: %@
Couldn't find bundle record for disabled bundle %@
Bundle %@ has Ubiquity disabled and is entitled to defaultStoreIdentifier=%@ additionalStoreIdentifiers=%@
Bundle %@ has Ubiquity disabled, but is not entitled to any KVS stores
Enabling TCC if necessary
No bundle, no TCC
TCC is already enabled for %@
TCC is already disabled for %@
Enabling TCC for %@
Starting to listen to TCC access change notifications
Invalidating cached disabled store identifiers
Cancelling TCC access changed notifications
Initializing store with container=%@ coreDataStore=%@
Not initializing sync engine due to error getting sync engine metadata from database: %@
Initializing sync engine
Unable to initialize engine: %@
Error fetching object for key %{private}@ in %@: %@
Fetched %@object for key %{private}@ in %@
Setting %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching existing key value: %@
Unable to get or create value for key %{private}@ in %@
Not setting identical value for key <(%{private, mask.hash}@)> in store <(%@)>
BUG IN CLIENT OF KVS: Trying to set a nil object for key <(%{private, mask.hash}@)>, but we should have early returned above
Assigned new record name (%@) for (%{private}@) in (%@)
Unable to check how many key values we had in this store. Moving on.
We had no keys in %@, so let's save the zone
Error saving value for key: %@
Not adding record to sync engine because we were told not to sync
alwaysSaveRecordZones=YES, saving record zone
Removing object for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching while removing value for key: %@
Error marking key-value as deleted: %@
Trying to remove object for a key that doesn't exist (%{private}@)
kvs/sync-store
Synchronizing stores with the cloud: %@
Sync was cancelled during fetch changes. Not saving changes
Synchronizing with cloud
Failed to load engine when saving pending changes: %@
Saving pending changes to cloud for stores [%@]
Saving all pending changes to cloud
Error modify pending records: %@
Finished modifying pending records
Will retry after error modifying pending records: %@
Failed to load engine when fetching changes: %@
Fetching pending changes from cloud for stores [%@]
Fetching all changes from cloud
Found ignorable error fetching records: %@
Error fetching records: %@
Finished fetching changes
Deleting data from cloud for %@
Error fetching all zones for deleting data from cloud: %@
Error deleting deleting data from cloud: %@
Finished deleting data from cloud
Marking all key values as needing to be uploaded for all stores
Error getting store identifiers from database while trying to mark key values as needing to be uploaded: %@
Marking all key values as needing to be uploaded for store (%@)
Error fetching record names from database when marking key values as needing to be uploaded for %@: %@
Setting new container %@ for %@
Deleting sync engine metadata for %@
Failed to fetch changes for RecordZoneID %@: %@
Missing Manatee identity fetching %@, deleting the zone now
Generating record to save for %@
Error getting sync anchor data for %@: %@
Error unarchiving server sync anchor record: %@
Error getting key value for %@ when returning record to sync engine: %@
No keyValue for recordID %@, so we're returning nothing
Returning record to save %@
Did save sync anchor record %@
Did save keyValue record %@
Error fetching key value after saving record: %@
No keyValue by record name after saving %@
Saved record %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Error saving new server system fields record: %@
Failed to save record %@: %@
No server record for conflict on sync anchor
Conflict saving key-value record %@
Not merging data from server record %@ because it has an asset
No value modification date from server after asset conflict
Error fetching key-value from database trying to resolve a conflict on a server record with an asset: %@
Taking the server system fields record from the server record even though we don't have the server's value
Error saving key value after taking server record: %@
Resolving conflict for record %@
No server record when resolving conflict saving record %@
Unknown item saving key-value record, will re-upload %@
Error fetching keyValue handling CKErrorUnknownItem for record %@: %@
Unable to save key value to database when processing CKErrorUnknownItem: %@
Couldn't find keyValue for record %@ after CKErrorUnknownItem
Zone not found saving %@. Saving zone and re-saving record
Error clearing server system fields for records in %@: %@
Failed to save %@ because zone was user-purged
Missing Manatee identity saving %@, deleting the zone now
Manatee unavailable trying to save %@. Retrying eventually
Batch failure trying to save %@. Retrying eventually
Unknown error saving record %@: %@
Deleted sync anchor record %@
Deleted keyValue record for key <(%{private, mask.hash}@)> in store <(%@)> %@
Error fetching key-value after deleting record from the cloud: %@
No key-value in database after deleting record from the cloud
Client set a value for key-value while we were deleting it from the cloud
Removing key-value from local database after deleting record from the cloud
Error removing key-value from database after it was deleted in the cloud: %@
Error deleting record %@: %@
Fetched sync anchor record %@
Will save sync anchor server record: %@
Failed to archive sync anchor record: %@
Failed to save sync anchor system fields: %@
Processing %ld pending fetched records and %ld deleted records (%@)
No pending records to process
Processing %ld fetched records
Record was fetched %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Failed to get key values from database to process fetched records: %@
Expected a dictionary with %ld values but only received %ld values: %@
Value didn't change for key <(%{private, mask.hash}@)> in store <(%@)>
Failed to save key values from fetched records: %@
Record was deleted for key <(%{private, mask.hash}@)> in store <(%@)> %@
Unable to find key to post notification for %@
Local record name (%@) and fetched record name (%@) do not match for key (%{private}@)
Creation dates were exactly the same when de-duplicating. Comparing record names
Local record was created first, choosing local record name %@
Remote record was created earlier, choosing remote record name %@
Telling sync engine to delete duplicate record %@ and save the chosen record %@
KeyValue record was deleted %@
Sync anchor record was deleted: %@
Saved zones: %@
Error saving record zones: %@
Deleted zone %@ and re-uploading key values
Failed to delete zone %@
Zone was purged: %@
Not going to fetch changes for store %@
Started fetching changes for %@
Finished fetching changes for %@
Posting %@
Will post store-specific Darwin notification for %ld stores
Deleting local persisted data for %@
Getting account for persona %@
Error getting all AppleAccounts: %@
Found account for persona %@: %@
Couldn't find account for persona %@
Getting account for current persona
Using primary Apple account for current persona
Error getting account for persona %@: %@
Looking up application identifier for %@
Couldn't create SecTask from audit token
Error getting application identifier: %@
Found application identifier %@ for %@
Resuming connection %@
Connection interrupted %@
Connection invalidated %@
Caching entitlement for %@ for %@
Process %@ is NOT entitled for store %@
Checking if process %d is entitled for store %@
Process %d is entitled for store %@ via %@
Handling setObject (%{private}@) for store=%@
Handling objectForKey (%{private}@) for store=%@
Handling removeObject (%{private}@) for store=%@
Handling sync for store=%@
No sync manager for store=%@
Asked to sync zero stores
Handling sync for stores with type %@: %@
No sync manager for store type %@
Handling dictionaryRepresentation for store=%@
Fetching all store identifiers.
BUG IN CLIENT OF KVS: Connection is trying to fetch all store identifiers without the correct entitlement.
BUG IN CLIENT OF KVS: Connection is trying to use an a sync status operation without the correct entitlement for store %@
Asked to register for store %@
Registering for store %@
Generating change dictionary for token %@ in store (%@) for %@
Unable to get current change token: %@
Unable to get changed keys: %@
Generated change dictionary for %ld changes
Could not find change token URL to load change token
Unable to determine if change token URL is a symbolic link: %@
KVS store has a symbolic link for its change token (%@)
Error loading change token from disk: %@
Could not find change token URL to save change token: %@
Removing change token from disk for %@
Error removing change token when setting nil change token: %@
Saving change token to disk for %@
Error creating change token directory: %@
Error saving change token to disk: %@
Received error about a bad persistent history token. Throwing it away and trying again.
No store ID for sync manager change notification %@
No sync manager for sync manager change notification %@
kvs/notify-store-change
Received notification for registered store ID %@ in %@
Error getting change token to send change dictionary: %@
Sending notification about %d changed keys for store <(%@)>: ( %@ )
Failed to notify client about changes to store %@: %@
Successfully notified client about changes to store %@
Received a notification about a changed sync manager, but the notification object is a %@
kvs/notify-account-change
Notifying client that account did change %@
Not notifying data-separated client about account change: %@
Error getting change token to notify about account change: %@
Error getting async client for posting change notification: %@
Not processing did-change-value notification for store ID=%@ changedKeys=%@
Error getting change token to send change dictionary for local change: %@
Sending notification about %d changed keys for store <(%@)>
Error obtaining async remote object proxy: %@
Error obtaining remote object proxy: %@
BUG IN CLIENT OF KVS: Tried to access unknown store %@
Incremented manual sync count to %ld for %@
Decremented manual sync count to %ld for %@
Failed to get the library directory when migrating: %@
kvs/migrate-if-necessary
Migrating all plists to Core Data if necessary
Error checking if already migrated: %@
Already migrated. High five. Not migrating again.
Not migrating in multi-user mode.
Did not already migrate. Migrating now
Error saving migration state: %@
Did save migration state
Error migrating all plists: %@
Error getting failed migration count: %@
Failed to set new failed migration count: %@
Set new failed migration count %d
Reached maximum number of migration failures. Not migrating again.
Failed to set didMigrateFromPlists after reaching max failures: %@
Set didMigrateFromPlists after reaching max failures
kvs/migrate-all-plists
We should not migrate the non-personal persona
Migrating all plists to store %@
About to migrate %lu possible plists
Error loading plist at %@: %@
Error creating new transactional store for plist: %@
Error saving transactional store when migrating plist: %@
Error migrating plist at %@: %@
Migrated plist at %@
Error deleting plist at %@: %@
Deleted plist at %@
No key-value store plist at %@, moving on.
Migrating all (%lu) plists took %.2f seconds
Migrating plist for store %@
Migrating key <(%{private, mask.hash}@)> for store <(%@)>
Found value in plist that wasn't a dictionary (%@): %@
No plist value from plist storage
No timestamp in plist storage
Error fetching key value while migrating plist: %@
Using plist value for (%{private}@) in %@: no value in Core Data
Using plist value for (%{private}@) in %@: timestamp %f is later than current timestamp %f
Not using plist value for (%{private}@) in %@
Error saving key value while migrating plist: %@
Migrating plist for %@ took %.0f milliseconds
File at URL is not a plist %@
Plist at URL does not have a 'values' dictionary in it %@
Error checking plist file size to determine if we should use a transaction: %@
Plist %@: useTransaction=%d size=%ld KB
Finding all store plists on disk
Checking for plist URLs from bundle: %@
No KVS entitlements for bundle %@
No bundle identifier for bundle %@
Using uncontainerized Library directory for %@
Finding plists for known daemons
Adding plist URLs for bundle identifier %@ with defaultStoreIdentifier=(%@) additionalStoreIdentifiers=[%@]
Error decoding plist value data: %@
Fetching keyValue for key <(%{private, mask.hash}@)> in store <(%@)> create=%d
Trying to access key value for nil key
Error trying to access a key value with an empty store identifier
Found multiple key values for the same key (%@)
Short circuiting due to error fetching managedKeyValuesForKeyIDs: %@
Existing keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Creating new keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
No keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Fetching keyValue for record name (%@) in store <(%@)>
Existing keyValue for record name (%@) in store <(%@)>
No keyValue for record name (%@) in store <(%@)>
SYDManagedKeyValue for key <(%{private, mask.hash}@)> is missing a store identifier. Manually setting store identifier <(%@)>
Saving value for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)> excludeFromChangeTracking=%d
Error fetching managed key values while saving: %@
Creating new managed key value for key <(%{private, mask.hash}@)> in store <(%@)>
Exceeded maximum number of keys in store <(%@)>
Exceeded maximum bytes for key <(%{private, mask.hash}@)> in store <(%@)>
Exceeded maximum total bytes in store <(%@)>
Deleting managed object that would go over quota
Reverting managed object that would go over quota
Removing keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching existing key value when removing a key value: %@
Deleting managed key value for key <(%{private, mask.hash}@)> in store <(%@)>
No managed key value to delete for key <(%{private, mask.hash}@)> in store <(%@)>
Removing keyValue for record name <(%@)> in store <(%@)>
Deleting managed key value for record name <(%@)> in store <(%@)>
No managed key value to delete for record name <(%@)> in store <(%@)>
Fetching sync anchor for (%@)
Error fetching sync anchor: %@
No store when fetching sync anchor data
Saving sync anchor for (%@)
Clearing sync anchor for (%@)
No store when saving sync anchor data
Deleting data for stores matching predicate (%@)
Failed to delete data for stores matching predicate (%@): %@
Deleted data for stores matching predicate (%@)
Failed to fetch record names for store <(%@)>: %@
Fetched a key value with no record name
Failed to fetch all store identifiers: %@
Clearing server records for store <(%@)>
No managed store for store identifier (%@), so there's nothing to do
Failed to clear server records for store <(%@)>: %@
Cleared server records for store <(%@)>
Error fetching count of key values with predicate %@: %@
Getting current token for (%@)
Trying to get change token with no persistent store
No current persistent history token
Failed to archive history token to NSData: %@
Getting changed keys for store <(%@)> with%@ token
Error unarchiving token from data: %@
Persistent history token expired for (%@): %@
Error fetching persistent history for (%@): %@
Received unexpected type of persistent history result (%@)
Expected a list of %@, but got %@
Found %ld persistent history transactions in store <(%@)>
Found multiple stores in a single transaction
We have some deleted keys, but no store object ID
Error fetching store properties when validating deleted keys: %@
No store identifier when validating deleted keys
Error fetching properties when fetching change history: %@
Found %ld changed keys for store <(%@)>
Clearing server records for all stores
Failed to clear key value server records for all stores: %@
Cleared key value server records for all stores
Failed to clear sync anchor server records for all stores: %@
Cleared sync anchor server records for all stores
Saving ACAccount identifier (%@)
About to set didMigrateFromPlists=%d
Error fetching managed database while setting didMigrateFromPlists: %@
Saving didMigrateFromPlists=%d
About to set failedMigrationCount=%d
Error fetching managed database while setting failedMigrationCount: %@
Saving failedMigrationCount=%d
Generating dictionary for store <(%@)>
Error fetching key value properties for dictionary representation: %@
Error decoding plist value data for key <(%{private, mask.hash}@)> in dictionary representation for store <(%@)>: %@
Nil deserialized value for key <(%{private, mask.hash}@)> when generating dictionary for store <(%@)>
No value for key <(%{private, mask.hash}@)> when generating dictionary for store <(%@)>
Saving sync engine metadata (length=%ld)
Retrieving sync engine metadata
Found multiple managed databases in the CoreData database
Error fetching managed database: %@
Creating new managed database
Found multiple stores for the same identifier: %@
Error fetching managed store: %@
Creating new managed store %@
Found multiple key values for the same record name (%@) in store <(%@)>
Error fetching key values: %@
Error fetching managed keyValue with predicate %@: %@
Could not create context for %@ without a persistent container
Not saving transaction context
Error saving context (%@): %@
Saved context (%@)
Loading persistent store for %@
File protection error loading persistent store: %@
Disk is full while loading persistent store: %@
Error loading persistent store: %@
Retrying to load persistent store
Failed to load persistent store on second try: %@
Successfully loaded persistent store on second try
Loaded persistent store
Unable to find SyncedDefaults framework bundle
Loading managed object model
Unable to get URL for managed object model
Not destroying persistent store due to error: %@
No persistent container to destroy
Destroying persistent store at %@
Error destroying persistent store: %@
Destroyed persistent store at %@
Error getting file size for %@: %@
Computed database size for %@: %lu
Error getting persistent container for creating a transactional store: %@
Trying to save a non-transactional store.
Saving transaction
Database was corrupt with NSFileReadCorruptFileError: %@
Database was corrupt with SQLITE_NOTADB: %@
Database was corrupt with SQLITE_CORRUPT: %@
Destroying corrupt database
v8@?0
com.apple.syncdefaultsd.daemon.wake
com.apple.kvs.bundle-store-map
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
SYDStoreBundleMap.m
storeIdentifier must not be empty
com.apple.kvs.disable-sync
com.apple.
com.apple.developer.ubiquity-kvstore-identifier
com.apple.private.ubiquity-additional-kvstore-identifiers
PersonalPersona
com.apple.kvs.daemon.queue
com.apple.kvsd
v32@?0@"CKContainerID"8@"SYDSyncManager"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
NADA
com.apple.kvs.periodic-analytics
v16@?0@"NSObject<OS_xpc_object>"8
containerIdentifier
containerEnvironment
storeIdentifier
keyValueCount
com.apple.kvs.storeState
storeCount
databaseSizeBytes
com.apple.kvs.containerState
Trying to init a keyValue without a key: %@
Trying to init a keyValue without a store identifier: %@
Trying to init a keyValue without a keyID: %@
Trying to init a keyValue without a keyID.key: %@
<%@: %p; key=%@ storeIdentifier=%@%@%@>
 recordName=
<%@: %p; storeIdentifier=%@%@%@>
Tried to set invalid value '%@' of class '%@'
Trying to get a record ID for a keyValue that has not been assigned a record name yet: %@
Trying to get a record ID for a keyValue that does not have an associated zoneID: %@
KVSRecord
EncryptedKeyValue
value
assetValue
valueData
valueDataAsset
valueModificationDate
localModificationDate
KVS: %@
v16@?0@"NSError"8
v20@?0B8@"NSError"12
com.apple.Preferences
KVSNotifications
com.apple.kvs
com.apple.kvs.user-notifications
UNMutableNotificationContent
Class getUNMutableNotificationContentClass(void)_block_invoke
SYDUserNotifications.m
Unable to find class %s
void *UserNotificationsLibrary(void)
UNNotificationRequest
Class getUNNotificationRequestClass(void)_block_invoke
UNUserNotificationCenter
Class getUNUserNotificationCenterClass(void)_block_invoke
remotevalue
timestamp
KVSOnCloudKitForAll
EncryptedAllPlatforms
Unable to open database file
Disk is full
Unable to open database
Network error
No account
Network failure
Service unavailable
Encryption key sync failed
End-to-end encryption unavailable
Failed to sync with CloudKit (%@)
v32@?0@8@"NSError"16^B24
Failed to sync with CloudKit (Partial failure with no partial errors)
Failed to sync with CloudKit
 (%@)
SyncedDefaults
Unknown error
NoEncryption
EndToEndEncryption
EndToEndEncryptionAllPlatforms
Unknown
ChangeTokens
Library
Could not find ~/Library directory
SyncedPreferences
%@-%@
sqlite
com.apple.KeyValueService
com.apple.KeyValueService.EndToEndEncrypted
com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms
CKRecordZoneID *SYDStoreZoneID(NSString *__strong)
SYDUtilities.m
Must specify a store identifier to get a zone ID
CKRecordID *SYDSyncAnchorRecordID(NSString *__strong)
Must specify a store identifier to get a sync anchor record ID
syncAnchor
com.apple.security.cloudkeychainproxy3
com.apple.sbd3
com.apple.mail.recents
com.apple.messages.recents
v24@?0#8^B16
com.apple.kvs.tcc
com.apple.tcc.access.changed
v12@?0i8
SYDSyncManagerNotificationValuesDidChange
changedKeys
storeID
SYDSyncManager.m
Must specify a container for %@
Must specify a database URL for %@
com.apple.kvs.sync-manager.%@
.callback
<%@: %p; container=%@ coreDataStore=%@ storeType=%@
 personaUniqueString=%@
com.apple.aps.kvsd
Invalid key parameter provided
(null) 
Attempted to insert invalid value '%@' of class '%@'
Failed to set value: %@
Set %@ = %@
Trying to delete a key-value that never had a record name in a store that uses UUID record names
ManualSync
metadata_zone
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"NSArray"8@"NSError"16
%@%@
KeyValue:
KVSSyncAnchorRecord
Uploaded %@ = %@
com.apple.kvs.failedToSaveKey
errorCode
Failed to save record: %@
reached max pending records
Trying to process a record without a SYDKeyValue
Downloaded %@ = %@
v32@?0@"NSString"8@"NSMutableSet"16^B24
Trying to de-duplicate two identical records %@ and %@
com.apple.kvs.deduplicate
updated metadata
finished fetching changes
SYDRemotePreferencesSourceDidChangeExternally
%s%@
com.apple.kvs.store-did-change.
<CKRecordID recordName=%@ zone=%@>
 modifiedBy='%@'
<CKRecord type=%@ recordName=%@ zone=%@ etag=%@%@>
SYDDaemonToClientConnectionNotificationChangedValues
com.apple.kvs.daemon-to-client.%d
<%@: %p;
 registeredStoreIDs=[%@]
 clientPID=%d
com.apple.private.ubiquity-kvstore-identifier-prefix
com.apple.private.ubiquity-kvstore-manage
com.apple.private.trust-ubiquity-kvstore-identifier
com.apple.private.ubiquity-kvstore-access
com.apple.private.kvs.test
com.apple.kvs.test
Not entitled to access store %@
com.apple.private.kvs.ignore-quota
No sync manager trying to sync store %@
No sync manager trying to sync stores with type %@
com.apple.private.ubiquity-kvsutil-access
com.apple.private.kvs.allow-sync-enablement-modifications
Change token should not be a symbolic link
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
Tried to access unknown store %@
SYDKeyID.m
Cannot create a key ID with no key
Cannot create a key ID with no store identifier
%s is not available
-[SYDKeyID init]
<key=%@ storeIdentifier=%@>
Cannot migrate the non-personal persona
v32@?0@"NSURL"8@"NSString"16^B24
com.apple.kvs.migrationFailed
errorDomainAndCode
%@_%ld
com.apple.kvs.migrationCompleted
duration
values
v32@?0@"NSString"8@"NSDictionary"16^B24
StoreIdentifier
AdditionalStoreIdentifiers
plist
com.apple.sbd
com.apple.sbd.emcs
accountsd
com.apple.accounts
com.apple.finder
com.apple.accessibility.AccessibilityUIServer
com.apple.VoiceOverTouch
com.apple.TextInput.kbd
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.weather
com.apple.springboard
com.apple.backboardd
com.apple.datamigrator
com.apple.CoreSuggestions
com.apple.cmfsyncagent
com.apple.accessibility.heard
com.apple.HearingAids
com.apple.wifid
com.apple.wifid.known-networks
com.apple.coretelephony
com.apple.cloudrecents.CloudRecentsAgent
com.apple.eventkit.locations
com.apple.corerecents.map-locations
com.apple.passbook.locations
com.apple.facetime.recents
com.apple.calendar.recents
com.apple.mediaaccessibilityd
com.apple.mediaaccessibility
com.apple.email.maild
com.apple.mail.threadinfo
com.apple.mail.vipsenders
com.apple.tipsd
com.apple.touristd
Misc
CloudKit
CoreData
Connection
Analytics
Accounts
Migration
no-change-tracking
TransactionStoreDidSave
SYDCoreDataStore.m
Cannot initialize %@ with a nil URL
com.apple.kvs.coredata.persistent-container
Cannot create a transactional context without a persistent container
<%@: %p; url=%@>
Trying to access a key value with an empty store identifier
Trying load a nil key in store <(%@)>
Trying to load without a store identifier
Trying to save a nil %@ in %@
Trying to save without a store identifier
Exceeded maximum number of keys (%d) in store (%@).
Exceeded maximum size (%d) for key (%@) in store (%@).
Exceeded maximum total bytes (%d) in store (%@).
saving key values
v32@?0@"NSString"8@"NSMutableArray"16^B24
Trying to remove a value for a nil key
Trying to remove without a store identifier
removing key value
Trying to remove a value for a nil record name
removing key value for record name
Saving sync anchor
identifier == %@
store.identifier == %@
Removing sync anchor server record
store == %@
Unable to load database
 nil
author == nil
contextName == %@
self == %@
identifier
self IN %@
ACAccount identifier
did migrate from plists
failed migration count
sync engine metadata
recordName == %@
Fetched a managedKeyValue with an empty store identifier
key IN %@
SYDManagedObjectModel
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
momd
-wal
-shm
saving transaction
errorDomain
sqliteError
com.apple.kvs.corruptDatabase
T@"CKContainer",&,N,V_container
T#,R
TB,N,GisAutomaticSyncingEnabled
T@"<SYDSyncManagerDelegate>",W,N,V_delegate
T@"CKRecord",C,N
_engine
T@"CKSyncEngine",R,N,V_engine
allSyncManagers
T@"NSData",&,N,V_serverSystemFieldsRecordData
bundleForClass:
T@"NSDate",&,N,V_valueModificationDate
changes
T@"NSManagedObjectContext",&,N,V_transactionContext
dealloc
T@"NSMutableArray",&,N,V_pendingFetchedRecords
fileURL
T@"NSMutableSet",&,N,V_clientConnections
initWithURL:fileProtectionType:
T@"NSMutableSet",&,N,V_notEntitledStoreIDs
initWithZoneID:
T@"NSMutableSet",&,N,V_storeIdentifiersWithChangedValuesDuringFetchChanges
T@"NSObject<OS_dispatch_group>",&,N,V_changeNotificationGroup
markForDeletion
T@"NSObject<OS_dispatch_queue>",&,N,V_persistentContainerQueue
recordChangeTag
T@"NSPersistentContainer",&,N,V__persistentContainer
release
T@"NSString",&,D,N
requestAuthorizationIfNecessary
T@"NSString",&,N,V_fileProtectionType
T@"NSString",C,N,V_personaUniqueString
setIgnoreQuotaEntitlementValue:
T@"NSString",R,C,N,V_key
setMergePolicy:
T@"NSString",R,N
setPersistentStoreDescriptions:
T@"NSXPCConnection",&,N,V_xpcConnection
setWithObjects:
T@"SYDCoreDataStore",&,N,V_coreDataStore
shouldLogValues
T@"SYDManagedDatabase",&,D,N
storeIdentifier
T@,&,N,V_value
syncEngine:zoneWithIDWasPurged:
TB,D,N
userPersonaType
.cxx_destruct
T@"NSSet",&,D,N
T@"<SYDDaemonToClientConnectionDelegate>",W,N,V_delegate
TQ,N,V_maxPendingFetchedRecords
T@"ACAccountStore",R,N
_cachedDisabledStoreIdentifiers
T@"CKRecordID",R,N
allKeys
T@"NSData",&,D,N
base64EncodedStringWithOptions:
T@"NSDate",&,D,N
changedObjectID
T@"NSDictionary",&,N,V_cachedStoreBundleMap
containsObject:
T@"NSMutableArray",&,N,V_pendingDeletedRecordIDs
encryptedValues
T@"NSMutableDictionary",&,N,V_syncManagersByPersona
initWithEntity:
T@"NSMutableSet",&,N,V_entitledStoreIDs
initWithXPCConnection:delegate:
T@"NSMutableSet",&,N,V_registeredStoreIDs
isProxy
T@"NSNumber",&,N,V_ignoreQuotaEntitlementValue
manualSyncCount
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
plistDataLength
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
recordZonesToSaveForSyncEngine:
T@"NSSet",&,N,V_cachedDisabledStoreIdentifiers
removeObserver:
T@"NSString",&,N,V_applicationIdentifier
resetSyncEngine
T@"NSString",&,N,V_recordName
setBool:forKey:
T@"NSString",R,C
setKey:
T@"NSString",R,C,N,V_storeIdentifier
setNotifyToken:
T@"NSURL",&,N,V_URL
setURL:
T@"NSXPCListener",&,N,V_xpcListener
setXpcListener:
T@"SYDKeyID",&,N,V_keyID
storeID
T@"SYDManagedStore",&,D,N
stringByAppendingPathExtension:
T@,C,N
totalDataLength
TB,N,GisInitializingSyncManagers,V_initializingSyncManagers
TB,N,V_alwaysSaveRecordZones
TB,N,V_isNewKeyValue
TB,N,V_shouldLogValues
TB,R,N
TQ,N,V_manualSyncCount
TQ,R
Ti,N,V_notifyToken
Tq,D,N
Tq,N,V_storeType
Ts,D,N
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLForDirectory:inDomain:appropriateForURL:create:error:
URLForResource:withExtension:
URLHostAllowedCharacterSet
UTF8String
UUID
UUIDString
_URL
__persistentContainer
_alwaysSaveRecordZones
_applicationIdentifier
_cachedStoreBundleMap
_callbackQueue
_changeNotificationGroup
_clientConnections
_container
_contextForStoreIdentifier:persistentContainer:
_coreDataStore
_delegate
_entitledStoreIDs
_fileProtectionType
_ignoreQuotaEntitlementValue
_initializingSyncManagers
_isNewKeyValue
_key
_keyID
_manualSyncCount
_markZoneForDeletionOnManateeFailureForRecordZoneID:
_maxPendingFetchedRecords
_notEntitledStoreIDs
_notifyToken
_pendingDeletedRecordIDs
_pendingFetchedRecords
_persistentContainer
_persistentContainerQueue
_personaUniqueString
_processAccountChanges
_queue
_queue_allSyncManagers
_queue_destroyPersistentStoreInPersistentStoreCoordinator:
_queue_handleCorruptionIfNecessaryFromError:inPersistentStoreCoordinator:
_queue_resetSyncEngine
_recordName
_registeredStoreIDs
_saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:forceCreateNewRow:error:
_saveKeyValues:excludeFromChangeTracking:enforceQuota:forceCreateNewRow:error:
_serverSystemFieldsRecordData
_shouldLogValues
_storeIdentifier
_storeIdentifiersWithChangedValuesDuringFetchChanges
_storeType
_syncManagersByPersona
_transactionContext
_value
_valueModificationDate
_xpcConnection
_xpcListener
aa_primaryAppleAccount
acAccountIdentifier
acAccountIdentifierWithError:
accountStore
accountsWithAccountTypeIdentifiers:error:
addKeyValueRecordIDsToSave:recordIDsToDelete:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addOperation:
addPlistURLsAndStoreIdentifiersForBundleRecord:toDictionary:uncontainerizedSyncedPreferencesDirectoryURL:
addPlistURLsAndStoreIdentifiersForKnownDaemonsToDictionary:uncontainerizedSyncedPreferencesDirectoryURL:
addPlistURLsForBundleIdentifier:defaultStoreIdentifier:additionalStoreIdentifiers:toDictionary:syncedPreferencesDirectoryURL:
addRecordIDsToSave:recordIDsToDelete:
addRecordZonesToSave:recordZoneIDsToDelete:
addSyncAnchorRecordIDToSaveIfNecessaryForStoreIdentifier:
allObjects
allPossibleStorePlistURLsWithLibraryDirectoryURL:
allRecordNamesInStoreWithIdentifier:error:
allStoreIdentifiersWithCompletionHandler:
allStoreIdentifiersWithError:
allValues
alwaysSaveRecordZones
andPredicateWithSubpredicates:
appendFormat:
appendString:
applicationIdentifier
applicationIdentifiersForStoreIdentifiers:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObjects:count:
assetContent
asyncClientWithErrorHandler:
auditToken
automaticSyncingEnabled
autorelease
boolForKey:
boolValue
bundleIdentifier
bundleIdentifiersForStoreIdentifier:
bundleRecordForAuditToken:error:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
cachedDisabledStoreIdentifiers
cachedStoreBundleMap
callbackQueue
caseInsensitiveCompare:
changeDictionarySinceChangeToken:inStoreWithConfiguration:reply:
changeDictionaryWithChangedKeys:reason:changeToken:
changeNotificationGroup
changeTokenForStoreWithConfiguration:reply:
changeTokenURLForStoreConfiguration:xpcConnection:
changeType
changedKeysForStoreIdentifier:sinceChangeToken:error:
changedKeysForStoreIdentifier:sinceChangeTokenIfValid:inCoreDataStore:error:
checkResourceIsReachableAndReturnError:
class
clearServerSystemFieldsRecordsForAllKeyValuesInStoreWithIdentifier:error:
clearServerSystemFieldsRecordsForAllStoresWithError:
client
clientConnections
clientProtocolInterface
close
code
compare:
componentsJoinedByString:
conformsToProtocol:
connection:syncManagerForStoreID:
connectionDidInvalidate:
container
containerForStoreType:containerID:
containerID
containerIdentifier
contextForStoreIdentifier:error:
copy
copyCurrentPersonaContextWithError:
copyWithZone:
coreDataStore
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
creationDate
currentChangeTokenForStoreIdentifier:error:
currentHandler
currentPersistentHistoryTokenFromStores:
currentPersona
daemonProtocolInterface
daemonToClientConnectionDidChangeValues:
dataContainerURL
dataUsingEncoding:
dataWithContentsOfURL:options:error:
dataWithPropertyList:format:options:error:
database
date
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decrementManualSyncCount
deduplicateRecordForKeyValue:withNewlyFetchedRecord:
defaultCenter
defaultConfiguration
defaultManager
defaultStore
delegate
deleteDataForAllStoresWithError:
deleteDataForStoreWithIdentifier:error:
deleteDataForStoresMatchingPredicate:context:error:
deleteDataFromCloudWithCompletionHandler:
deleteDataFromDisk
deleteFilesForAssetsInKeyValueRecord:
deleteObject:
description
destroyPersistentStore
destroyPersistentStoreAtURL:withType:options:error:
dictionary
dictionaryRepresentationForStoreWithConfiguration:reply:
dictionaryRepresentationForStoreWithIdentifier:error:
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didMigrateFromPlists
didMigrateFromPlistsWithError:
didSaveKeyValueRecord:
disabledStoreIdentifiers
domain
effectiveBundleIdentifier
enableUbiquityIfNecessaryForAuditToken:
encodeSystemFieldsWithCoder:
encodedData
engine
engineWithError:
entitledStoreIDs
entitlements
entity
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumeratorWithOptions:
environment
error
errorForUnknownStore:
errorNotEntitledForStoreConfiguration:
errorWithDomain:code:userInfo:
execute:
executeFetchRequest:error:
executeRequest:error:
failedMigrationCount
failedMigrationCountWithError:
failedToSaveKeyValueRecord:error:
fetchAllRecordZonesWithCompletionHandler:
fetchChangesForZoneIDs:group:completionHandler:
fetchChangesFromCloudForAllStoresWithCompletionHandler:
fetchChangesFromCloudForStoreIdentifiers:group:completionHandler:
fetchHistoryAfterToken:
fetchRequest
fileProtectionType
fileSizeBytes
fileURLWithPath:
fileURLWithPath:isDirectory:
findDisabledStoreIdentifiers
firstObject
generateAndRestorePersonaContextWithPersonaUniqueString:
generateStoreBundleMap
generateStoreBundleMapIfNecessary
getResourceValue:forKey:error:
handleCorruptionIfNecessaryFromError:inPersistentStoreCoordinator:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasChanges
hasPendingChangesToUpload
hasPendingModifications
hasPrefix:
hash
identifier
ignoreQuotaEntitlementValue
incrementManualSyncCount
init
initForReadingFromData:error:
initRequiringSecureCoding:
initWithAssetContent:itemTypeHint:
initWithBase64EncodedString:options:
initWithBundleIdentifier:
initWithCapacity:
initWithCoder:
initWithConfiguration:
initWithContainer:coreDataStore:storeType:
initWithContainerID:options:
initWithContainerIdentifier:environment:
initWithContentsOfURL:
initWithContext:
initWithData:encoding:
initWithDatabase:dataSource:metadata:
initWithDomain:code:userInfo:
initWithFetchRequest:
initWithFormat:arguments:
initWithIdentifier:type:
initWithInitialStoreCreation:
initWithKey:storeIdentifier:
initWithMachServiceName:
initWithName:managedObjectModel:
initWithObjects:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithStoreID:
initWithURL:
initWithURL:fileProtectionType:persistentContainer:isTransactional:
initWithZoneName:ownerName:
initializeKnownSyncManagers
initializeSyncEngineWithError:
initializingSyncManagers
inputStreamWithURL:
installedAppsDidChange:
integerValue
intersectsSet:
isAutomaticSyncingEnabled
isCloudSyncEnablementEntitledForStoreIdentifier:
isCloudSyncUserDefaultEnabledForStoreIdentifier:
isCloudSyncUserDefaultEnabledForStoreIdentifier:completionHandler:
isCorruptionError:
isDataSeparatedPersona
isEntitledForStoreConfiguration:
isEqual:
isEqualToString:
isInitializingSyncManagers
isInserted
isInvalidTokenError:
isKindOfClass:
isKnownStore:
isMemberOfClass:
isNewKeyValue
isPerformingManualSync
isSharedIPad
isStoreIdentifierUsedOnThisDevice:
isUbiquityDisabledForStoreIdentifier:
isXPCConnection:entitledForStoreConfiguration:
keyFromKeyValueRecord:
keyFromUnencryptedKeyValueRecordName:
keyID
keyValueForKey:inStoreWithIdentifier:createIfNecessary:error:
keyValueForRecordName:inStoreWithIdentifier:error:
keyValueFromManagedKeyValue:inStoreWithIdentifier:
keyValueRecordHasAssetWithoutFile:
keyValueStorePlistFromURL:error:
keyValues
keyValuesForKeyIDs:createIfNecessary:error:
knownDaemons
lastPathComponent
length
listAllPersonaWithAttributes
listener:shouldAcceptNewConnection:
loadPersistentStoresWithCompletionHandler:
localizedDescription
managedDatabaseCreateIfNecessary:inContext:error:
managedKeyValueWithRecordName:inStoreWithIdentifier:inContext:error:
managedKeyValuesForKeyIDs:inContext:error:
managedKeyValuesMatchingPredicate:inContext:error:
managedObjectModel
managedStoreWithIdentifier:createIfNecessary:inContext:error:
markAllKeyValuesAsNeedingToBeUploaded
markAllKeyValuesAsNeedingToBeUploadedForStoreWithIdentifier:
maxPendingFetchedRecords
mergeDataFromRecord:
migrateAllPlistsIfNecessaryToCoreDataStore:deleteMigratedPlists:error:
migrateAllPlistsIfNecessaryToCoreDataStore:deleteMigratedPlists:libraryDirectoryURL:error:
migrateAllPlistsToCoreDataStore:deleteMigratedPlists:libraryDirectoryURL:error:
migratePlist:forStoreWithIdentifier:toCoreDataStore:error:
modificationDate
modifiedByDevice
modifyPendingChangesInZoneIDs:group:completionHandler:
name
newBackgroundContext
newRecordNameForKey:
notEntitledStoreIDs
notifyAccountDidChangeWithCompletionHandler:
notifyToken
null
numberOfKeyValuesInStoreWithIdentifier:error:
numberWithDouble:
numberWithInteger:
numberWithUnsignedInteger:
object
objectAtIndexedSubscript:
objectForKey:inStoreWithConfiguration:reply:
objectForKey:inStoreWithIdentifier:error:
objectForKey:ofClass:
objectForKey:ofClass:valuesOfClass:
objectForKeyedSubscript:
open
orPredicateWithSubpredicates:
path
pendingDeletedRecordIDs
pendingFetchedRecords
performBlockAndWait:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistentContainerQueue
persistentContainerWithError:
persistentStoreCoordinator
persistentStores
personaAttributesForPersonaType:
personaAttributesForPersonaUniqueString:
personaIdentifier
personaUniqueString
plistDataValue
postNotificationName:object:
postNotificationName:object:userInfo:
predicate
predicateWithFormat:
privateCloudDatabase
processAccountChanges
processAccountChangesWithCompletionHandler:
processFetchedRecords:deletedRecordIDs:
processIdentifier
processName
processPendingFetchedRecordsWithReason:
propertyList:isValidForFormat:
propertyListWithData:options:format:error:
propertyListWithStream:options:format:error:
queue
raise:format:
recordFieldKeyForValueModificationDateInStoreType:
recordID
recordIDForKey:inStoreWithIdentifier:
recordName
recordNameForUnencryptedKey:
recordRepresentationForStoreType:
recordType
recordZoneIDsToDeleteForSyncEngine:
redactedDescription
refreshObject:mergeChanges:
registerForChangeNotificationsForStoreWithConfiguration:reply:
registerForPeriodAnalyticsXPCActivity
registeredStoreIDs
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeInvalidSyncManagers
removeItemAtURL:error:
removeKeyValueForKey:inStoreWithIdentifier:excludeFromChangeTracking:error:
removeKeyValueForRecordName:inStoreWithIdentifier:error:
removeObject:
removeObjectForKey:
removeObjectForKey:inStoreWithConfiguration:reply:
removeObjectForKey:inStoreWithIdentifier:error:
removeObjectForKey:inStoreWithIdentifier:excludeFromChangeTracking:didRemoveValue:error:
removeObjectForKey:inStoreWithIdentifier:excludeFromChangeTracking:error:
removeObjectsForKeys:
requestAuthorizationWithOptions:completionHandler:
requestWithIdentifier:content:trigger:
resetSyncEngineWithContainer:
respondsToSelector:
restorePersonaWithSavedPersonaContext:
result
resume
retain
retainCount
save:
saveChangeToken:forStoreWithConfiguration:reply:
saveContext:reason:includingTransactionContext:error:
saveKeyValue:inStoreWithIdentifier:error:
saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:error:
saveKeyValues:excludeFromChangeTracking:enforceQuota:error:
savePendingChangesToCloudForAllStoresWithCompletionHandler:
savePendingChangesToCloudForStoreIdentifiers:group:completionHandler:
saveServerSyncAnchorSystemFieldsRecordData:forStoreWithIdentifier:error:
saveSyncAnchorSystemFieldsRecord:
saveSyncEngineMetadata:error:
saveTransaction:
self
sendAnalyticsEventForCurrentState
serverSyncAnchorSystemFieldsRecordDataForStoreWithIdentifier:error:
serverSystemFieldsRecord
serverSystemFieldsRecordData
setACAccountIdentifier:error:
setAcAccountIdentifier:
setAlwaysSaveRecordZones:
setApplicationBundleIdentifierOverrideForPushTopicGeneration:
setApplicationIdentifier:
setApsMachServiceName:
setAttributes:ofItemAtPath:error:
setAutomaticSyncingEnabled:
setBody:
setCachedDisabledStoreIdentifiers:
setCachedStoreBundleMap:
setCallbackQueue:
setChangeNotificationGroup:
setClientConnections:
setCloudSyncUserDefaultEnabled:storeIdentifier:
setContainer:
setCoreDataStore:
setDatabase:
setDelegate:
setDidMigrateFromPlists:
setDidMigrateFromPlists:error:
setEntitledStoreIDs:
setExportedInterface:
setExportedObject:
setFailedMigrationCount:
setFailedMigrationCount:error:
setFetchRequest:
setFileProtectionType:
setIdentifier:
setInitializingSyncManagers:
setInterruptionHandler:
setInvalidationHandler:
setIsCloudKitSupportOperation:
setIsNewKeyValue:
setKeyID:
setManualSyncCount:
setMarkZonesAsUserPurged:
setMaxPendingFetchedRecords:
setModifyRecordZonesCompletionBlock:
setName:
setNeedsToReloadAccount:
setNotEntitledStoreIDs:
setObject:forKey:inStoreWithConfiguration:reply:
setObject:forKey:inStoreWithIdentifier:error:
setObject:forKey:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:didChangeValue:error:
setObject:forKey:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:error:
setObject:forKeyedSubscript:
setOption:forKey:
setPendingDeletedRecordIDs:
setPendingFetchedRecords:
setPersistentContainerQueue:
setPersonaIdentifier:
setPersonaUniqueString:
setPlistDataLength:
setPlistDataValue:
setPredicate:
setPropertiesToFetch:
setPropertiesToUpdate:
setQueue:
setRecordName:
setRegisteredStoreIDs:
setRemoteObjectInterface:
setResultType:
setReturnsDistinctResults:
setServerSystemFieldsRecord:
setServerSystemFieldsRecordData:
setServerSystemFieldsRecordIfNewer:
setShouldAddStoreAsynchronously:
setShouldInferMappingModelAutomatically:
setShouldLogValues:
setShouldMigrateStoreAutomatically:
setSortDescriptors:
setStore:
setStoreIdentifiersWithChangedValuesDuringFetchChanges:
setStoreType:
setSyncAnchorServerSystemFieldsRecordData:
setSyncEngineMetadata:
setSyncManagersByPersona:
setThreadIdentifier:
setTitle:
setTransactionAuthor:
setTransactionContext:
setType:
setUseClearAssetEncryption:
setValue:
setValue:withModificationDate:
setValueModificationDate:
setWithArray:
setWithCapacity:
setXpcConnection:
set_persistentContainer:
sharedHelper
sharedInstance
sharedManager
shouldEnforceQuotaForStoreConfiguration:
shouldIgnoreFetchError:
shouldIncrementFailureCountForError:
shouldRetryAfterModifyError:
shouldShowNotifications
shouldStopMigrationAfterError:
shouldSyncStoreWithIdentifier:
shouldUseTransactionForPlistAtURL:
showNotificationWithTitle:body:threadIdentifier:
showUserNotificationIfEnabledForStoreIdentifier:format:
sortDescriptorWithKey:ascending:
sortedArrayUsingSelector:
standardUserDefaults
start
startListeningToTCCAccessChangedNotifications
stopListeningToTCCAccessChangedNotifications
store
storeDidChangeWithStoreID:changeDictionary:reply:
storeIdentifiersForInstalledBundles
storeIdentifiersWithChangedValuesDuringFetchChanges
storeType
stores
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringWithFileSystemRepresentation:length:
stringWithFormat:
stringWithUTF8String:
superclass
syd_accountForCurrentPersonaWithError:
syd_accountForPersonaIdentifier:error:
syd_accountIdentifierForCurrentPersona
syd_shortDescription
syncAnchorServerSystemFieldsRecordData
syncEngine:accountChangedFromUserRecordID:toUserRecordID:
syncEngine:didCompleteModifyRecordsBatch:error:
syncEngine:didDeleteRecordWithID:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:didEndFetchingChangesForZoneID:
syncEngine:didFetchRecord:
syncEngine:didSaveRecord:
syncEngine:didSaveRecordZone:
syncEngine:didSaveRecordZones:
syncEngine:didUpdateMetadata:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:failedToFetchChangesForRecordZoneID:error:
syncEngine:failedToSaveRecord:error:
syncEngine:failedToSaveRecordZone:error:
syncEngine:nextBatchOfRecordsToModifyForZoneIDs:
syncEngine:recordToSaveForRecordID:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:relatedApplicationBundleIdentifiersForZoneIDs:recordIDs:
syncEngine:shouldFetchAssetContentsForZoneID:
syncEngine:shouldFetchChangesForZoneID:
syncEngine:willBeginFetchingChangesForZoneIDs:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
syncEngine:zoneWithIDWasDeletedDueToUserEncryptedDataReset:
syncEngineDidBeginFetchingChanges:
syncEngineDidEndFetchingChanges:
syncEngineDidEndModifyingPendingChanges:
syncEngineMetadata
syncEngineMetadataWithError:
syncEngineWillBeginFetchingChanges:
syncEngineWillBeginModifyingPendingChanges:
syncManager:shouldSyncStoreWithIdentifier:
syncManagerDidChangeNotification:
syncManagerForStoreType:containerID:
syncManagerForStoreType:containerID:createIfNecessary:
syncManagerForStoreType:environment:
syncManagerForStoreType:environment:createIfNecessary:
syncManagersByPersona
synchronizeAllStoresWithCompletionHandler:
synchronizeStoreWithConfiguration:completionHandler:
synchronizeStoreWithIdentifier:completionHandler:
synchronizeStoresWithIdentifiers:completionHandler:
synchronizeStoresWithIdentifiers:type:completionHandler:
synchronousRemoteObjectProxyWithErrorHandler:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
tombstone
transactionContext
transactionStoreDidSave:
transactionalStoreWithError:
type
unarchivedObjectOfClass:fromData:error:
unionSet:
unsignedIntegerValue
unsignedLongValue
updatedProperties
useSyncAnchor
useUUIDRecordNames
userInfo
userNotificationCenter
userPersonaUniqueString
validateKey:error:
value
valueForEntitlement:
valueForEntitlement:xpcConnection:storeConfiguration:
valueModificationDate
writeToURL:options:error:
xpcConnection
xpcListener
zone
zoneID
zoneName
SYDStoreBundleMap
SYDDaemon
NSXPCListenerDelegate
NSObject
SYDDaemonToClientConnectionDelegate
SYDSyncManagerDelegate
SYDKeyValue
SYDUserNotifications
SYDTCCHelper
SYDSyncManager
CKSyncEngineDataSource
CKSyncEngineDataSourcePrivate
SYDManagedStore
SYDDaemonToClientConnection
SYDDaemonProtocol
SYDKeyID
NSCopying
SYDPlistToCoreDataMigrator
SYDManagedDatabase
SYDManagedKeyValue
SYDCoreDataStore
@16@0:8
v16@0:8
B24@0:8@16
v28@0:8B16@20
@24@0:8@16
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSDictionary"
@32@0:8q16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@24@0:8^@16
v24@0:8@"SYDDaemonToClientConnection"16
@"SYDSyncManager"32@0:8@"SYDDaemonToClientConnection"16@"SYDStoreID"24
@"NSArray"24@0:8^@16
B32@0:8@"SYDSyncManager"16@"NSString"24
@"NSArray"24@0:8@"NSArray"16
@20@0:8B16
@32@0:8q16q24
@36@0:8q16q24B32
@36@0:8q16@24B32
v20@0:8B16
@"NSXPCListener"
@"NSMutableSet"
@"NSMutableDictionary"
@24@0:8q16
v32@0:8@16@24
@"SYDKeyID"
@"NSDate"
@"NSData"
@"NSString"
v40@0:8@16@24@32
v48@0:8{?=[8I]}16
i16@0:8
v20@0:8i16
@"NSSet"
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"CKRecordID"32
v24@0:8@"CKSyncEngine"16
v32@0:8@"CKSyncEngine"16@"NSArray"24
@"CKSyncEngineBatch"32@0:8@"CKSyncEngine"16@"NSSet"24
v40@0:8@"CKSyncEngine"16@"CKSyncEngineBatch"24@"NSError"32
@"NSArray"24@0:8@"CKSyncEngine"16
@40@0:8@16@24@32
B32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
@"NSArray"40@0:8@"CKSyncEngine"16@"NSArray"24@"NSArray"32
@40@0:8@16@24q32
B24@0:8^@16
B32@0:8@16^@24
@40@0:8@16@24^@32
B56@0:8@16@24@32B40B44^@48
B64@0:8@16@24@32B40B44^B48^@56
B48@0:8@16@24@32^@40
B44@0:8@16@24B32^@36
B52@0:8@16@24B32^B36^@44
B40@0:8@16@24^@32
v32@0:8@16@?24
v24@0:8@?16
v40@0:8@16@24@?32
q16@0:8
v24@0:8q16
v24@0:8Q16
@"CKSyncEngine"
@"CKContainer"
@"SYDCoreDataStore"
@"NSMutableArray"
@"<SYDSyncManagerDelegate>"
@32@0:8@16^@24
@48@0:8@16@24@32^@40
@40@0:8@16q24@32
v48@0:8@16@24@32@?40
v40@0:8@16q24@?32
v48@0:8@16@"NSString"24@"SYDStoreConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@@"NSError">32
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
v28@0:8B16@"NSString"20
v24@0:8@?<v@?@"NSArray"@"NSError">16
@24@0:8@?16
@"NSXPCConnection"
@"<SYDDaemonToClientConnectionDelegate>"
@"NSObject<OS_dispatch_group>"
@"NSNumber"
@24@0:8^{_NSZone=}16
B36@0:8@16B24^@28
B44@0:8@16B24@28^@36
v56@0:8@16@24@32@40@48
@44@0:8@16@24@32B40
@44@0:8@16@24B32^@36
@36@0:8@16B24^@28
B48@0:8@16@24B32B36^@40
B52@0:8@16@24B32B36B40^@44
B40@0:8@16B24B28^@32
B44@0:8@16B24B28B32^@36
Q32@0:8@16^@24
B28@0:8B16^@20
B28@0:8s16^@20
s24@0:8^@16
@36@0:8B16@20^@28
@44@0:8@16B24@28^@36
@"NSPersistentContainer"
@"NSURL"
@"NSManagedObjectContext"
softlink:r:path:/System/Library/Frameworks/UserNotifications.framework/UserNotifications
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleIdentifier</key>
<string>com.apple.syncdefaultsd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>syncdefaultsd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20E5212g</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212g</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.syncdefaultsd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.mobile.keybagd.UserManager.logout</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.allowUnverifiedAccount</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.customAccounts</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.KeyValueService.EndToEndEncrypted</key>
<string>com.apple.KeyValueService.EndToEndEncrypted</string>
<key>com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms</key>
<string>com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.manager.access.delete</key>
<array>
<string>kTCCServiceUbiquity</string>
</array>
<key>com.apple.private.tcc.manager.access.modify</key>
<array>
<string>kTCCServiceUbiquity</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceAll</string>
</array>
<key>com.apple.private.ubiquity-kvstore-manage</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Preferences</string>
</array>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobile.keybagd.UserManager.xpc</string>
<string>com.apple.mobile.usermanagerd.xpc</string>
</array>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>appleaccount</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>syncdefaultsd</string>
</array>
</dict>
</plist>
application-identifier
com.apple.syncdefaultsd0
aps-connection-initiate
aps-environment
production0/*com.apple.accounts.appleaccount.fullaccess
0% com.apple.authkit.client.private
01#com.apple.developer.icloud-services0
CloudKit00+com.apple.mobile.keybagd.UserManager.logout
0.)com.apple.mobile.keybagd.UserManager.sync
0;6com.apple.private.MobileContainerManager.otherIdLookup
061com.apple.private.cloudkit.allowUnverifiedAccount
0+&com.apple.private.cloudkit.buddyAccess
0.)com.apple.private.cloudkit.customAccounts
0*%com.apple.private.cloudkit.masquerade
5com.apple.private.cloudkit.serviceNameForContainerMap
0Z+com.apple.KeyValueService.EndToEndEncrypted+com.apple.KeyValueService.EndToEndEncrypted0t8com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms8com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms0.)com.apple.private.cloudkit.setEnvironment
com.apple.private.cloudkit.spi
0.)com.apple.private.cloudkit.supportservice
0-(com.apple.private.cloudkit.systemService
083com.apple.private.security.storage-exempt.heritable
094com.apple.private.security.storage.AppDataContainers
com.apple.private.tcc.allow0
kTCCServiceLiverpool0D+com.apple.private.tcc.manager.access.delete0
kTCCServiceUbiquity0D+com.apple.private.tcc.manager.access.modify0
kTCCServiceUbiquity0=)com.apple.private.tcc.manager.access.read0
kTCCServiceAll0.)com.apple.private.ubiquity-kvstore-manage
0Q6com.apple.private.usernotifications.bundle-identifiers0
com.apple.Preferences00+com.apple.security.enterprise-volume-access
4com.apple.security.exception.mach-lookup.global-name0k
com.apple.mobile.keybagd.xpc(com.apple.mobile.keybagd.UserManager.xpc!com.apple.mobile.usermanagerd.xpc0.)com.apple.usermanagerd.persona.background
0)$com.apple.usermanagerd.persona.fetch
keychain-access-groups0
appleaccount0$
seatbelt-profiles0
syncdefaultsd
@(#)PROGRAM:syncdefaultsd  PROJECT:SyncedDefaults-
kvs/main
Starting
Exiting due to SIGTERM
Not syncing store that isn't used on this device: %@
Not syncing TCC-disabled store %@
Not syncing store that is disabled via NSUserDefaults: <(%@)>
Checking cloud sync status for store <(%@)> Status is disabled.
Checking cloud sync status for store <(%@)> Status is enabled.
Enabling cloud sync for store <(%@)>
Disabling cloud sync for store <(%@)>
Explicitly disabling store %@
Found bundle identifiers for store %@: %@
No bundle identifiers for store %@
No cached bundle map, generating a new one
Generating store bundle mapping
LSBundleRecord did not map to an effectiveBundleIdentifier or contain one: %@
Checking if bundle identifier: %@ is entitled for KVS
Found %ld store identifiers for bundle identifier: %@ %@ 
No bundle identifier found using LSBundleRecord for: %@
Generated new store bundle mapping: %@
Installed apps changed. Clearing cached store bundle map. Notification=%@
Resuming server
Accepting new XPC connection %@
Created client connection %@
Removing client connection %@
Processing account changes
Processing account changes for sync manager %@
Persona doesn't exist for sync manager %@
Current logged in account identifier: %@
Not processing account changes for %@ due to error getting account identifier: %@
No database account identifier and not logged-in
Database has no account, but the user is now logged in. Setting account identifier and marking everything as needing to be uploaded.
No longer logged into an account
Account in database is the same as logged-in account
Account in database (%@) is different from the logged-in account (%@)
The account did change, will notify clients and tell the sync engine
Will tell sync engine to reload the account for sync manager %@
Found registered store in %@, but no application identifier from %@
Couldn't find any application identifiers for store identifiers: %@
Not creating sync manager for store type %d because it is not supported
Getting sync manager for lookup key=%@ storeType=%@ container=%@
No existing sync manager, creating now for personaLookupKey=%@
Error ensuring KVS directory exists: %@
Error ensuring KVS directory has the right attributes: %@
Will set initial account identifier
Setting initial account identifier to %@
Created sync manager %@
Should not lazily create sync manager %@
Initializing known sync managers
Initializing known sync managers for persona %@
Checking to make sure persona still exists for sync manager %@
Persona still exists for sync manager %@
Persona no longer exists for sync manager %@
No persona unique string, moving on...
Forgetting about sync managers for account identifiers: %@
Registering for periodic analytics XPC activity
Checking in for periodic analytics XPC activity
Setting periodic analytics XPC activity criteria
Sending periodic analytics
Store state for %@: %@
Container state: %@
Error unarchiving server record: %@
No encoded data for new server record %@
Trying to set server record if newer, but no other record
No current system fields record for %@
No current modification date on system fields record for %@
Trying to set server record using record with a different ID. current=%@ other=%@
Server record is newer than current system fields record for %@
Replacing local system fields record for %@: current=%@ other=%@
Not replacing local system fields record for %@: current=%@ other=%@
Merging data from record to %{private}@
Trying to merge data from an unknown record type: %@
Trying to merge data from a record of a different type (%@) from this key value record type (%@)
No modification date in record
Record's modification date was of the wrong class (%@). Expected NSDate.
Error loading data from asset: %@
No file URL for value data asset in %@
No value data in record
Record's value data was of the wrong class (%@). Expected NSData.
No current valueModificationDate
Record value modification date is greater than local value
Replacing local value with value from record
Error decoding value data from record: %@
Expected record type %@ for record name %@, but server record had record type %@
Error generating plist value: %@
Going to use an asset for %@ because the data is %ld bytes
Somehow we got to a point where we're creating a record for %@, but we have no data. Bailing
Could not get key from record %@
Deleting file for asset (%@) in key value record %@
Failed to delete asset file: %@
Error adding notification request: %@
Requesting notification authorization
Error requesting notification authorization: %@
Requested notification authorization, granted=%d
Created change token URL for type=%@ process=%@ url=%@
Got container path from containermanager: %s
Failed to get container path from containermanager: %llu
Falling back to NSFileManager to get the Library directory
Failed to get Library directory from NSFileManager: %@
Found KVS container directory: %@
About to adopt persona %@
Error copying current persona context: %@
Error adopting persona %@: %@
Adopted persona %@ and copied context %@
Error restoring saved persona context %@: %@
Restored saved persona context %@
Checking if syncing is disabled for store %@
Caching disabled store identifiers: %@
Store %@ is disabled
Finding list of disabled store identifiers
Error getting bundle record: %@
Couldn't find bundle record for disabled bundle %@
Bundle %@ has Ubiquity disabled and is entitled to defaultStoreIdentifier=%@ additionalStoreIdentifiers=%@
Bundle %@ has Ubiquity disabled, but is not entitled to any KVS stores
Enabling TCC if necessary
No bundle, no TCC
TCC is already enabled for %@
TCC is already disabled for %@
Enabling TCC for %@
Starting to listen to TCC access change notifications
Invalidating cached disabled store identifiers
Cancelling TCC access changed notifications
Initializing store with container=%@ coreDataStore=%@
Not initializing sync engine due to error getting sync engine metadata from database: %@
Initializing sync engine
Unable to initialize engine: %@
Error fetching object for key %{private}@ in %@: %@
Fetched %@object for key %{private}@ in %@
Setting %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching existing key value: %@
Unable to get or create value for key %{private}@ in %@
Not setting identical value for key <(%{private, mask.hash}@)> in store <(%@)>
BUG IN CLIENT OF KVS: Trying to set a nil object for key <(%{private, mask.hash}@)>, but we should have early returned above
Assigned new record name (%@) for (%{private}@) in (%@)
Unable to check how many key values we had in this store. Moving on.
We had no keys in %@, so let's save the zone
Error saving value for key: %@
Not adding record to sync engine because we were told not to sync
alwaysSaveRecordZones=YES, saving record zone
Removing object for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching while removing value for key: %@
Error marking key-value as deleted: %@
Trying to remove object for a key that doesn't exist (%{private}@)
kvs/sync-store
Synchronizing stores with the cloud: %@
Sync was cancelled during fetch changes. Not saving changes
Synchronizing with cloud
Failed to load engine when saving pending changes: %@
Saving pending changes to cloud for stores [%@]
Saving all pending changes to cloud
Error modify pending records: %@
Finished modifying pending records
Will retry after error modifying pending records: %@
Failed to load engine when fetching changes: %@
Fetching pending changes from cloud for stores [%@]
Fetching all changes from cloud
Found ignorable error fetching records: %@
Error fetching records: %@
Finished fetching changes
Deleting data from cloud for %@
Error fetching all zones for deleting data from cloud: %@
Error deleting deleting data from cloud: %@
Finished deleting data from cloud
Marking all key values as needing to be uploaded for all stores
Error getting store identifiers from database while trying to mark key values as needing to be uploaded: %@
Marking all key values as needing to be uploaded for store (%@)
Error fetching record names from database when marking key values as needing to be uploaded for %@: %@
Setting new container %@ for %@
Deleting sync engine metadata for %@
Failed to fetch changes for RecordZoneID %@: %@
Missing Manatee identity fetching %@, deleting the zone now
Generating record to save for %@
Error getting sync anchor data for %@: %@
Error unarchiving server sync anchor record: %@
Error getting key value for %@ when returning record to sync engine: %@
No keyValue for recordID %@, so we're returning nothing
Returning record to save %@
Did save sync anchor record %@
Did save keyValue record %@
Error fetching key value after saving record: %@
No keyValue by record name after saving %@
Saved record %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Error saving new server system fields record: %@
Failed to save record %@: %@
No server record for conflict on sync anchor
Conflict saving key-value record %@
Not merging data from server record %@ because it has an asset
No value modification date from server after asset conflict
Error fetching key-value from database trying to resolve a conflict on a server record with an asset: %@
Taking the server system fields record from the server record even though we don't have the server's value
Error saving key value after taking server record: %@
Resolving conflict for record %@
No server record when resolving conflict saving record %@
Unknown item saving key-value record, will re-upload %@
Error fetching keyValue handling CKErrorUnknownItem for record %@: %@
Unable to save key value to database when processing CKErrorUnknownItem: %@
Couldn't find keyValue for record %@ after CKErrorUnknownItem
Zone not found saving %@. Saving zone and re-saving record
Error clearing server system fields for records in %@: %@
Failed to save %@ because zone was user-purged
Missing Manatee identity saving %@, deleting the zone now
Manatee unavailable trying to save %@. Retrying eventually
Batch failure trying to save %@. Retrying eventually
Unknown error saving record %@: %@
Deleted sync anchor record %@
Deleted keyValue record for key <(%{private, mask.hash}@)> in store <(%@)> %@
Error fetching key-value after deleting record from the cloud: %@
No key-value in database after deleting record from the cloud
Client set a value for key-value while we were deleting it from the cloud
Removing key-value from local database after deleting record from the cloud
Error removing key-value from database after it was deleted in the cloud: %@
Error deleting record %@: %@
Fetched sync anchor record %@
Will save sync anchor server record: %@
Failed to archive sync anchor record: %@
Failed to save sync anchor system fields: %@
Processing %ld pending fetched records and %ld deleted records (%@)
No pending records to process
Processing %ld fetched records
Record was fetched %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Failed to get key values from database to process fetched records: %@
Expected a dictionary with %ld values but only received %ld values: %@
Value didn't change for key <(%{private, mask.hash}@)> in store <(%@)>
Failed to save key values from fetched records: %@
Record was deleted for key <(%{private, mask.hash}@)> in store <(%@)> %@
Unable to find key to post notification for %@
Local record name (%@) and fetched record name (%@) do not match for key (%{private}@)
Creation dates were exactly the same when de-duplicating. Comparing record names
Local record was created first, choosing local record name %@
Remote record was created earlier, choosing remote record name %@
Telling sync engine to delete duplicate record %@ and save the chosen record %@
KeyValue record was deleted %@
Sync anchor record was deleted: %@
Saved zones: %@
Error saving record zones: %@
Deleted zone %@ and re-uploading key values
Failed to delete zone %@
Zone was purged: %@
Not going to fetch changes for store %@
Started fetching changes for %@
Finished fetching changes for %@
Posting %@
Will post store-specific Darwin notification for %ld stores
Deleting local persisted data for %@
Getting account for persona %@
Error getting all AppleAccounts: %@
Found account for persona %@: %@
Couldn't find account for persona %@
Getting account for current persona
Using primary Apple account for current persona
Error getting account for persona %@: %@
Looking up application identifier for %@
Couldn't create SecTask from audit token
Error getting application identifier: %@
Found application identifier %@ for %@
Resuming connection %@
Connection interrupted %@
Connection invalidated %@
Caching entitlement for %@ for %@
Process %@ is NOT entitled for store %@
Checking if process %d is entitled for store %@
Process %d is entitled for store %@ via %@
Handling setObject (%{private}@) for store=%@
Handling objectForKey (%{private}@) for store=%@
Handling removeObject (%{private}@) for store=%@
Handling sync for store=%@
No sync manager for store=%@
Asked to sync zero stores
Handling sync for stores with type %@: %@
No sync manager for store type %@
Handling dictionaryRepresentation for store=%@
Fetching all store identifiers.
BUG IN CLIENT OF KVS: Connection is trying to fetch all store identifiers without the correct entitlement.
BUG IN CLIENT OF KVS: Connection is trying to use an a sync status operation without the correct entitlement for store %@
Asked to register for store %@
Registering for store %@
Generating change dictionary for token %@ in store (%@) for %@
Unable to get current change token: %@
Unable to get changed keys: %@
Generated change dictionary for %ld changes
Could not find change token URL to load change token
Unable to determine if change token URL is a symbolic link: %@
KVS store has a symbolic link for its change token (%@)
Error loading change token from disk: %@
Could not find change token URL to save change token: %@
Removing change token from disk for %@
Error removing change token when setting nil change token: %@
Saving change token to disk for %@
Error creating change token directory: %@
Error saving change token to disk: %@
Received error about a bad persistent history token. Throwing it away and trying again.
No store ID for sync manager change notification %@
No sync manager for sync manager change notification %@
kvs/notify-store-change
Received notification for registered store ID %@ in %@
Error getting change token to send change dictionary: %@
Sending notification about %d changed keys for store <(%@)>: ( %@ )
Failed to notify client about changes to store %@: %@
Successfully notified client about changes to store %@
Received a notification about a changed sync manager, but the notification object is a %@
kvs/notify-account-change
Notifying client that account did change %@
Not notifying data-separated client about account change: %@
Error getting change token to notify about account change: %@
Error getting async client for posting change notification: %@
Not processing did-change-value notification for store ID=%@ changedKeys=%@
Error getting change token to send change dictionary for local change: %@
Sending notification about %d changed keys for store <(%@)>
Error obtaining async remote object proxy: %@
Error obtaining remote object proxy: %@
BUG IN CLIENT OF KVS: Tried to access unknown store %@
Incremented manual sync count to %ld for %@
Decremented manual sync count to %ld for %@
Failed to get the library directory when migrating: %@
kvs/migrate-if-necessary
Migrating all plists to Core Data if necessary
Error checking if already migrated: %@
Already migrated. High five. Not migrating again.
Not migrating in multi-user mode.
Did not already migrate. Migrating now
Error saving migration state: %@
Did save migration state
Error migrating all plists: %@
Error getting failed migration count: %@
Failed to set new failed migration count: %@
Set new failed migration count %d
Reached maximum number of migration failures. Not migrating again.
Failed to set didMigrateFromPlists after reaching max failures: %@
Set didMigrateFromPlists after reaching max failures
kvs/migrate-all-plists
We should not migrate the non-personal persona
Migrating all plists to store %@
About to migrate %lu possible plists
Error loading plist at %@: %@
Error creating new transactional store for plist: %@
Error saving transactional store when migrating plist: %@
Error migrating plist at %@: %@
Migrated plist at %@
Error deleting plist at %@: %@
Deleted plist at %@
No key-value store plist at %@, moving on.
Migrating all (%lu) plists took %.2f seconds
Migrating plist for store %@
Migrating key <(%{private, mask.hash}@)> for store <(%@)>
Found value in plist that wasn't a dictionary (%@): %@
No plist value from plist storage
No timestamp in plist storage
Error fetching key value while migrating plist: %@
Using plist value for (%{private}@) in %@: no value in Core Data
Using plist value for (%{private}@) in %@: timestamp %f is later than current timestamp %f
Not using plist value for (%{private}@) in %@
Error saving key value while migrating plist: %@
Migrating plist for %@ took %.0f milliseconds
File at URL is not a plist %@
Plist at URL does not have a 'values' dictionary in it %@
Error checking plist file size to determine if we should use a transaction: %@
Plist %@: useTransaction=%d size=%ld KB
Finding all store plists on disk
Checking for plist URLs from bundle: %@
No KVS entitlements for bundle %@
No bundle identifier for bundle %@
Using uncontainerized Library directory for %@
Finding plists for known daemons
Adding plist URLs for bundle identifier %@ with defaultStoreIdentifier=(%@) additionalStoreIdentifiers=[%@]
Error decoding plist value data: %@
Fetching keyValue for key <(%{private, mask.hash}@)> in store <(%@)> create=%d
Trying to access key value for nil key
Error trying to access a key value with an empty store identifier
Found multiple key values for the same key (%@)
Short circuiting due to error fetching managedKeyValuesForKeyIDs: %@
Existing keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Creating new keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
No keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Fetching keyValue for record name (%@) in store <(%@)>
Existing keyValue for record name (%@) in store <(%@)>
No keyValue for record name (%@) in store <(%@)>
SYDManagedKeyValue for key <(%{private, mask.hash}@)> is missing a store identifier. Manually setting store identifier <(%@)>
Saving value for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)> excludeFromChangeTracking=%d
Error fetching managed key values while saving: %@
Creating new managed key value for key <(%{private, mask.hash}@)> in store <(%@)>
Exceeded maximum number of keys in store <(%@)>
Exceeded maximum bytes for key <(%{private, mask.hash}@)> in store <(%@)>
Exceeded maximum total bytes in store <(%@)>
Deleting managed object that would go over quota
Reverting managed object that would go over quota
Removing keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching existing key value when removing a key value: %@
Deleting managed key value for key <(%{private, mask.hash}@)> in store <(%@)>
No managed key value to delete for key <(%{private, mask.hash}@)> in store <(%@)>
Removing keyValue for record name <(%@)> in store <(%@)>
Deleting managed key value for record name <(%@)> in store <(%@)>
No managed key value to delete for record name <(%@)> in store <(%@)>
Fetching sync anchor for (%@)
Error fetching sync anchor: %@
No store when fetching sync anchor data
Saving sync anchor for (%@)
Clearing sync anchor for (%@)
No store when saving sync anchor data
Deleting data for stores matching predicate (%@)
Failed to delete data for stores matching predicate (%@): %@
Deleted data for stores matching predicate (%@)
Failed to fetch record names for store <(%@)>: %@
Fetched a key value with no record name
Failed to fetch all store identifiers: %@
Clearing server records for store <(%@)>
No managed store for store identifier (%@), so there's nothing to do
Failed to clear server records for store <(%@)>: %@
Cleared server records for store <(%@)>
Error fetching count of key values with predicate %@: %@
Getting current token for (%@)
Trying to get change token with no persistent store
No current persistent history token
Failed to archive history token to NSData: %@
Getting changed keys for store <(%@)> with%@ token
Error unarchiving token from data: %@
Persistent history token expired for (%@): %@
Error fetching persistent history for (%@): %@
Received unexpected type of persistent history result (%@)
Expected a list of %@, but got %@
Found %ld persistent history transactions in store <(%@)>
Found multiple stores in a single transaction
We have some deleted keys, but no store object ID
Error fetching store properties when validating deleted keys: %@
No store identifier when validating deleted keys
Error fetching properties when fetching change history: %@
Found %ld changed keys for store <(%@)>
Clearing server records for all stores
Failed to clear key value server records for all stores: %@
Cleared key value server records for all stores
Failed to clear sync anchor server records for all stores: %@
Cleared sync anchor server records for all stores
Saving ACAccount identifier (%@)
About to set didMigrateFromPlists=%d
Error fetching managed database while setting didMigrateFromPlists: %@
Saving didMigrateFromPlists=%d
About to set failedMigrationCount=%d
Error fetching managed database while setting failedMigrationCount: %@
Saving failedMigrationCount=%d
Generating dictionary for store <(%@)>
Error fetching key value properties for dictionary representation: %@
Error decoding plist value data for key <(%{private, mask.hash}@)> in dictionary representation for store <(%@)>: %@
Nil deserialized value for key <(%{private, mask.hash}@)> when generating dictionary for store <(%@)>
No value for key <(%{private, mask.hash}@)> when generating dictionary for store <(%@)>
Saving sync engine metadata (length=%ld)
Retrieving sync engine metadata
Found multiple managed databases in the CoreData database
Error fetching managed database: %@
Creating new managed database
Found multiple stores for the same identifier: %@
Error fetching managed store: %@
Creating new managed store %@
Found multiple key values for the same record name (%@) in store <(%@)>
Error fetching key values: %@
Error fetching managed keyValue with predicate %@: %@
Could not create context for %@ without a persistent container
Not saving transaction context
Error saving context (%@): %@
Saved context (%@)
Loading persistent store for %@
File protection error loading persistent store: %@
Disk is full while loading persistent store: %@
Error loading persistent store: %@
Retrying to load persistent store
Failed to load persistent store on second try: %@
Successfully loaded persistent store on second try
Loaded persistent store
Unable to find SyncedDefaults framework bundle
Loading managed object model
Unable to get URL for managed object model
Not destroying persistent store due to error: %@
No persistent container to destroy
Destroying persistent store at %@
Error destroying persistent store: %@
Destroyed persistent store at %@
Error getting file size for %@: %@
Computed database size for %@: %lu
Error getting persistent container for creating a transactional store: %@
Trying to save a non-transactional store.
Saving transaction
Database was corrupt with NSFileReadCorruptFileError: %@
Database was corrupt with SQLITE_NOTADB: %@
Database was corrupt with SQLITE_CORRUPT: %@
Destroying corrupt database
v8@?0
com.apple.syncdefaultsd.daemon.wake
com.apple.kvs.bundle-store-map
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
SYDStoreBundleMap.m
storeIdentifier must not be empty
com.apple.kvs.disable-sync
com.apple.
com.apple.developer.ubiquity-kvstore-identifier
com.apple.private.ubiquity-additional-kvstore-identifiers
PersonalPersona
com.apple.kvs.daemon.queue
com.apple.kvsd
v32@?0@"CKContainerID"8@"SYDSyncManager"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
NADA
com.apple.kvs.periodic-analytics
v16@?0@"NSObject<OS_xpc_object>"8
containerIdentifier
containerEnvironment
storeIdentifier
keyValueCount
com.apple.kvs.storeState
storeCount
databaseSizeBytes
com.apple.kvs.containerState
Trying to init a keyValue without a key: %@
Trying to init a keyValue without a store identifier: %@
Trying to init a keyValue without a keyID: %@
Trying to init a keyValue without a keyID.key: %@
<%@: %p; key=%@ storeIdentifier=%@%@%@>
 recordName=
<%@: %p; storeIdentifier=%@%@%@>
Tried to set invalid value '%@' of class '%@'
Trying to get a record ID for a keyValue that has not been assigned a record name yet: %@
Trying to get a record ID for a keyValue that does not have an associated zoneID: %@
KVSRecord
EncryptedKeyValue
value
assetValue
valueData
valueDataAsset
valueModificationDate
localModificationDate
KVS: %@
v16@?0@"NSError"8
v20@?0B8@"NSError"12
com.apple.Preferences
KVSNotifications
com.apple.kvs
com.apple.kvs.user-notifications
UNMutableNotificationContent
Class getUNMutableNotificationContentClass(void)_block_invoke
SYDUserNotifications.m
Unable to find class %s
void *UserNotificationsLibrary(void)
UNNotificationRequest
Class getUNNotificationRequestClass(void)_block_invoke
UNUserNotificationCenter
Class getUNUserNotificationCenterClass(void)_block_invoke
remotevalue
timestamp
KVSOnCloudKitForAll
EncryptedAllPlatforms
Unable to open database file
Disk is full
Unable to open database
Network error
No account
Network failure
Service unavailable
Encryption key sync failed
End-to-end encryption unavailable
Failed to sync with CloudKit (%@)
v32@?0@8@"NSError"16^B24
Failed to sync with CloudKit (Partial failure with no partial errors)
Failed to sync with CloudKit
 (%@)
SyncedDefaults
Unknown error
NoEncryption
EndToEndEncryption
EndToEndEncryptionAllPlatforms
Unknown
ChangeTokens
Library
Could not find ~/Library directory
SyncedPreferences
%@-%@
sqlite
com.apple.KeyValueService
com.apple.KeyValueService.EndToEndEncrypted
com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms
CKRecordZoneID *SYDStoreZoneID(NSString *__strong)
SYDUtilities.m
Must specify a store identifier to get a zone ID
CKRecordID *SYDSyncAnchorRecordID(NSString *__strong)
Must specify a store identifier to get a sync anchor record ID
syncAnchor
com.apple.security.cloudkeychainproxy3
com.apple.sbd3
com.apple.mail.recents
com.apple.messages.recents
v24@?0#8^B16
com.apple.kvs.tcc
com.apple.tcc.access.changed
v12@?0i8
SYDSyncManagerNotificationValuesDidChange
changedKeys
storeID
SYDSyncManager.m
Must specify a container for %@
Must specify a database URL for %@
com.apple.kvs.sync-manager.%@
.callback
<%@: %p; container=%@ coreDataStore=%@ storeType=%@
 personaUniqueString=%@
com.apple.aps.kvsd
Invalid key parameter provided
(null) 
Attempted to insert invalid value '%@' of class '%@'
Failed to set value: %@
Set %@ = %@
Trying to delete a key-value that never had a record name in a store that uses UUID record names
ManualSync
metadata_zone
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"NSArray"8@"NSError"16
%@%@
KeyValue:
KVSSyncAnchorRecord
Uploaded %@ = %@
com.apple.kvs.failedToSaveKey
errorCode
Failed to save record: %@
reached max pending records
Trying to process a record without a SYDKeyValue
Downloaded %@ = %@
v32@?0@"NSString"8@"NSMutableSet"16^B24
Trying to de-duplicate two identical records %@ and %@
com.apple.kvs.deduplicate
updated metadata
finished fetching changes
SYDRemotePreferencesSourceDidChangeExternally
%s%@
com.apple.kvs.store-did-change.
<CKRecordID recordName=%@ zone=%@>
 modifiedBy='%@'
<CKRecord type=%@ recordName=%@ zone=%@ etag=%@%@>
SYDDaemonToClientConnectionNotificationChangedValues
com.apple.kvs.daemon-to-client.%d
<%@: %p;
 registeredStoreIDs=[%@]
 clientPID=%d
com.apple.private.ubiquity-kvstore-identifier-prefix
com.apple.private.ubiquity-kvstore-manage
com.apple.private.trust-ubiquity-kvstore-identifier
com.apple.private.ubiquity-kvstore-access
com.apple.private.kvs.test
com.apple.kvs.test
Not entitled to access store %@
com.apple.private.kvs.ignore-quota
No sync manager trying to sync store %@
No sync manager trying to sync stores with type %@
com.apple.private.ubiquity-kvsutil-access
com.apple.private.kvs.allow-sync-enablement-modifications
Change token should not be a symbolic link
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
Tried to access unknown store %@
SYDKeyID.m
Cannot create a key ID with no key
Cannot create a key ID with no store identifier
%s is not available
-[SYDKeyID init]
<key=%@ storeIdentifier=%@>
Cannot migrate the non-personal persona
v32@?0@"NSURL"8@"NSString"16^B24
com.apple.kvs.migrationFailed
errorDomainAndCode
%@_%ld
com.apple.kvs.migrationCompleted
duration
values
v32@?0@"NSString"8@"NSDictionary"16^B24
StoreIdentifier
AdditionalStoreIdentifiers
plist
com.apple.sbd
com.apple.sbd.emcs
accountsd
com.apple.accounts
com.apple.finder
com.apple.accessibility.AccessibilityUIServer
com.apple.VoiceOverTouch
com.apple.TextInput.kbd
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.weather
com.apple.springboard
com.apple.backboardd
com.apple.datamigrator
com.apple.CoreSuggestions
com.apple.cmfsyncagent
com.apple.accessibility.heard
com.apple.HearingAids
com.apple.wifid
com.apple.wifid.known-networks
com.apple.coretelephony
com.apple.cloudrecents.CloudRecentsAgent
com.apple.eventkit.locations
com.apple.corerecents.map-locations
com.apple.passbook.locations
com.apple.facetime.recents
com.apple.calendar.recents
com.apple.mediaaccessibilityd
com.apple.mediaaccessibility
com.apple.email.maild
com.apple.mail.threadinfo
com.apple.mail.vipsenders
com.apple.tipsd
com.apple.touristd
Misc
CloudKit
CoreData
Connection
Analytics
Accounts
Migration
no-change-tracking
TransactionStoreDidSave
SYDCoreDataStore.m
Cannot initialize %@ with a nil URL
com.apple.kvs.coredata.persistent-container
Cannot create a transactional context without a persistent container
<%@: %p; url=%@>
Trying to access a key value with an empty store identifier
Trying load a nil key in store <(%@)>
Trying to load without a store identifier
Trying to save a nil %@ in %@
Trying to save without a store identifier
Exceeded maximum number of keys (%d) in store (%@).
Exceeded maximum size (%d) for key (%@) in store (%@).
Exceeded maximum total bytes (%d) in store (%@).
saving key values
v32@?0@"NSString"8@"NSMutableArray"16^B24
Trying to remove a value for a nil key
Trying to remove without a store identifier
removing key value
Trying to remove a value for a nil record name
removing key value for record name
Saving sync anchor
identifier == %@
store.identifier == %@
Removing sync anchor server record
store == %@
Unable to load database
 nil
author == nil
contextName == %@
self == %@
identifier
self IN %@
ACAccount identifier
did migrate from plists
failed migration count
sync engine metadata
recordName == %@
Fetched a managedKeyValue with an empty store identifier
key IN %@
SYDManagedObjectModel
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
momd
-wal
-shm
saving transaction
errorDomain
sqliteError
com.apple.kvs.corruptDatabase
T@"CKContainer",&,N,V_container
T#,R
TB,N,GisAutomaticSyncingEnabled
T@"<SYDSyncManagerDelegate>",W,N,V_delegate
T@"CKRecord",C,N
_engine
T@"CKSyncEngine",R,N,V_engine
allSyncManagers
T@"NSData",&,N,V_serverSystemFieldsRecordData
bundleForClass:
T@"NSDate",&,N,V_valueModificationDate
changes
T@"NSManagedObjectContext",&,N,V_transactionContext
dealloc
T@"NSMutableArray",&,N,V_pendingFetchedRecords
fileURL
T@"NSMutableSet",&,N,V_clientConnections
initWithURL:fileProtectionType:
T@"NSMutableSet",&,N,V_notEntitledStoreIDs
initWithZoneID:
T@"NSMutableSet",&,N,V_storeIdentifiersWithChangedValuesDuringFetchChanges
T@"NSObject<OS_dispatch_group>",&,N,V_changeNotificationGroup
markForDeletion
T@"NSObject<OS_dispatch_queue>",&,N,V_persistentContainerQueue
recordChangeTag
T@"NSPersistentContainer",&,N,V__persistentContainer
release
T@"NSString",&,D,N
requestAuthorizationIfNecessary
T@"NSString",&,N,V_fileProtectionType
T@"NSString",C,N,V_personaUniqueString
setIgnoreQuotaEntitlementValue:
T@"NSString",R,C,N,V_key
setMergePolicy:
T@"NSString",R,N
setPersistentStoreDescriptions:
T@"NSXPCConnection",&,N,V_xpcConnection
setWithObjects:
T@"SYDCoreDataStore",&,N,V_coreDataStore
shouldLogValues
T@"SYDManagedDatabase",&,D,N
storeIdentifier
T@,&,N,V_value
syncEngine:zoneWithIDWasPurged:
TB,D,N
userPersonaType
.cxx_destruct
T@"NSSet",&,D,N
T@"<SYDDaemonToClientConnectionDelegate>",W,N,V_delegate
TQ,N,V_maxPendingFetchedRecords
T@"ACAccountStore",R,N
_cachedDisabledStoreIdentifiers
T@"CKRecordID",R,N
allKeys
T@"NSData",&,D,N
base64EncodedStringWithOptions:
T@"NSDate",&,D,N
changedObjectID
T@"NSDictionary",&,N,V_cachedStoreBundleMap
containsObject:
T@"NSMutableArray",&,N,V_pendingDeletedRecordIDs
encryptedValues
T@"NSMutableDictionary",&,N,V_syncManagersByPersona
initWithEntity:
T@"NSMutableSet",&,N,V_entitledStoreIDs
initWithXPCConnection:delegate:
T@"NSMutableSet",&,N,V_registeredStoreIDs
isProxy
T@"NSNumber",&,N,V_ignoreQuotaEntitlementValue
manualSyncCount
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
plistDataLength
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
recordZonesToSaveForSyncEngine:
T@"NSSet",&,N,V_cachedDisabledStoreIdentifiers
removeObserver:
T@"NSString",&,N,V_applicationIdentifier
resetSyncEngine
T@"NSString",&,N,V_recordName
setBool:forKey:
T@"NSString",R,C
setKey:
T@"NSString",R,C,N,V_storeIdentifier
setNotifyToken:
T@"NSURL",&,N,V_URL
setURL:
T@"NSXPCListener",&,N,V_xpcListener
setXpcListener:
T@"SYDKeyID",&,N,V_keyID
storeID
T@"SYDManagedStore",&,D,N
stringByAppendingPathExtension:
T@,C,N
totalDataLength
TB,N,GisInitializingSyncManagers,V_initializingSyncManagers
TB,N,V_alwaysSaveRecordZones
TB,N,V_isNewKeyValue
TB,N,V_shouldLogValues
TB,R,N
TQ,N,V_manualSyncCount
TQ,R
Ti,N,V_notifyToken
Tq,D,N
Tq,N,V_storeType
Ts,D,N
URLByAppendingPathComponent:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLForDirectory:inDomain:appropriateForURL:create:error:
URLForResource:withExtension:
URLHostAllowedCharacterSet
UTF8String
UUID
UUIDString
_URL
__persistentContainer
_alwaysSaveRecordZones
_applicationIdentifier
_cachedStoreBundleMap
_callbackQueue
_changeNotificationGroup
_clientConnections
_container
_contextForStoreIdentifier:persistentContainer:
_coreDataStore
_delegate
_entitledStoreIDs
_fileProtectionType
_ignoreQuotaEntitlementValue
_initializingSyncManagers
_isNewKeyValue
_key
_keyID
_manualSyncCount
_markZoneForDeletionOnManateeFailureForRecordZoneID:
_maxPendingFetchedRecords
_notEntitledStoreIDs
_notifyToken
_pendingDeletedRecordIDs
_pendingFetchedRecords
_persistentContainer
_persistentContainerQueue
_personaUniqueString
_processAccountChanges
_queue
_queue_allSyncManagers
_queue_destroyPersistentStoreInPersistentStoreCoordinator:
_queue_handleCorruptionIfNecessaryFromError:inPersistentStoreCoordinator:
_queue_resetSyncEngine
_recordName
_registeredStoreIDs
_saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:forceCreateNewRow:error:
_saveKeyValues:excludeFromChangeTracking:enforceQuota:forceCreateNewRow:error:
_serverSystemFieldsRecordData
_shouldLogValues
_storeIdentifier
_storeIdentifiersWithChangedValuesDuringFetchChanges
_storeType
_syncManagersByPersona
_transactionContext
_value
_valueModificationDate
_xpcConnection
_xpcListener
aa_primaryAppleAccount
acAccountIdentifier
acAccountIdentifierWithError:
accountStore
accountsWithAccountTypeIdentifiers:error:
addKeyValueRecordIDsToSave:recordIDsToDelete:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addOperation:
addPlistURLsAndStoreIdentifiersForBundleRecord:toDictionary:uncontainerizedSyncedPreferencesDirectoryURL:
addPlistURLsAndStoreIdentifiersForKnownDaemonsToDictionary:uncontainerizedSyncedPreferencesDirectoryURL:
addPlistURLsForBundleIdentifier:defaultStoreIdentifier:additionalStoreIdentifiers:toDictionary:syncedPreferencesDirectoryURL:
addRecordIDsToSave:recordIDsToDelete:
addRecordZonesToSave:recordZoneIDsToDelete:
addSyncAnchorRecordIDToSaveIfNecessaryForStoreIdentifier:
allObjects
allPossibleStorePlistURLsWithLibraryDirectoryURL:
allRecordNamesInStoreWithIdentifier:error:
allStoreIdentifiersWithCompletionHandler:
allStoreIdentifiersWithError:
allValues
alwaysSaveRecordZones
andPredicateWithSubpredicates:
appendFormat:
appendString:
applicationIdentifier
applicationIdentifiersForStoreIdentifiers:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObjects:count:
assetContent
asyncClientWithErrorHandler:
auditToken
automaticSyncingEnabled
autorelease
boolForKey:
boolValue
bundleIdentifier
bundleIdentifiersForStoreIdentifier:
bundleRecordForAuditToken:error:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
cachedDisabledStoreIdentifiers
cachedStoreBundleMap
callbackQueue
caseInsensitiveCompare:
changeDictionarySinceChangeToken:inStoreWithConfiguration:reply:
changeDictionaryWithChangedKeys:reason:changeToken:
changeNotificationGroup
changeTokenForStoreWithConfiguration:reply:
changeTokenURLForStoreConfiguration:xpcConnection:
changeType
changedKeysForStoreIdentifier:sinceChangeToken:error:
changedKeysForStoreIdentifier:sinceChangeTokenIfValid:inCoreDataStore:error:
checkResourceIsReachableAndReturnError:
class
clearServerSystemFieldsRecordsForAllKeyValuesInStoreWithIdentifier:error:
clearServerSystemFieldsRecordsForAllStoresWithError:
client
clientConnections
clientProtocolInterface
close
code
compare:
componentsJoinedByString:
conformsToProtocol:
connection:syncManagerForStoreID:
connectionDidInvalidate:
container
containerForStoreType:containerID:
containerID
containerIdentifier
contextForStoreIdentifier:error:
copy
copyCurrentPersonaContextWithError:
copyWithZone:
coreDataStore
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
creationDate
currentChangeTokenForStoreIdentifier:error:
currentHandler
currentPersistentHistoryTokenFromStores:
currentPersona
daemonProtocolInterface
daemonToClientConnectionDidChangeValues:
dataContainerURL
dataUsingEncoding:
dataWithContentsOfURL:options:error:
dataWithPropertyList:format:options:error:
database
date
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decrementManualSyncCount
deduplicateRecordForKeyValue:withNewlyFetchedRecord:
defaultCenter
defaultConfiguration
defaultManager
defaultStore
delegate
deleteDataForAllStoresWithError:
deleteDataForStoreWithIdentifier:error:
deleteDataForStoresMatchingPredicate:context:error:
deleteDataFromCloudWithCompletionHandler:
deleteDataFromDisk
deleteFilesForAssetsInKeyValueRecord:
deleteObject:
description
destroyPersistentStore
destroyPersistentStoreAtURL:withType:options:error:
dictionary
dictionaryRepresentationForStoreWithConfiguration:reply:
dictionaryRepresentationForStoreWithIdentifier:error:
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didMigrateFromPlists
didMigrateFromPlistsWithError:
didSaveKeyValueRecord:
disabledStoreIdentifiers
domain
effectiveBundleIdentifier
enableUbiquityIfNecessaryForAuditToken:
encodeSystemFieldsWithCoder:
encodedData
engine
engineWithError:
entitledStoreIDs
entitlements
entity
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumeratorWithOptions:
environment
error
errorForUnknownStore:
errorNotEntitledForStoreConfiguration:
errorWithDomain:code:userInfo:
execute:
executeFetchRequest:error:
executeRequest:error:
failedMigrationCount
failedMigrationCountWithError:
failedToSaveKeyValueRecord:error:
fetchAllRecordZonesWithCompletionHandler:
fetchChangesForZoneIDs:group:completionHandler:
fetchChangesFromCloudForAllStoresWithCompletionHandler:
fetchChangesFromCloudForStoreIdentifiers:group:completionHandler:
fetchHistoryAfterToken:
fetchRequest
fileProtectionType
fileSizeBytes
fileURLWithPath:
fileURLWithPath:isDirectory:
findDisabledStoreIdentifiers
firstObject
generateAndRestorePersonaContextWithPersonaUniqueString:
generateStoreBundleMap
generateStoreBundleMapIfNecessary
getResourceValue:forKey:error:
handleCorruptionIfNecessaryFromError:inPersistentStoreCoordinator:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasChanges
hasPendingChangesToUpload
hasPendingModifications
hasPrefix:
hash
identifier
ignoreQuotaEntitlementValue
incrementManualSyncCount
init
initForReadingFromData:error:
initRequiringSecureCoding:
initWithAssetContent:itemTypeHint:
initWithBase64EncodedString:options:
initWithBundleIdentifier:
initWithCapacity:
initWithCoder:
initWithConfiguration:
initWithContainer:coreDataStore:storeType:
initWithContainerID:options:
initWithContainerIdentifier:environment:
initWithContentsOfURL:
initWithContext:
initWithData:encoding:
initWithDatabase:dataSource:metadata:
initWithDomain:code:userInfo:
initWithFetchRequest:
initWithFormat:arguments:
initWithIdentifier:type:
initWithInitialStoreCreation:
initWithKey:storeIdentifier:
initWithMachServiceName:
initWithName:managedObjectModel:
initWithObjects:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithStoreID:
initWithURL:
initWithURL:fileProtectionType:persistentContainer:isTransactional:
initWithZoneName:ownerName:
initializeKnownSyncManagers
initializeSyncEngineWithError:
initializingSyncManagers
inputStreamWithURL:
installedAppsDidChange:
integerValue
intersectsSet:
isAutomaticSyncingEnabled
isCloudSyncEnablementEntitledForStoreIdentifier:
isCloudSyncUserDefaultEnabledForStoreIdentifier:
isCloudSyncUserDefaultEnabledForStoreIdentifier:completionHandler:
isCorruptionError:
isDataSeparatedPersona
isEntitledForStoreConfiguration:
isEqual:
isEqualToString:
isInitializingSyncManagers
isInserted
isInvalidTokenError:
isKindOfClass:
isKnownStore:
isMemberOfClass:
isNewKeyValue
isPerformingManualSync
isSharedIPad
isStoreIdentifierUsedOnThisDevice:
isUbiquityDisabledForStoreIdentifier:
isXPCConnection:entitledForStoreConfiguration:
keyFromKeyValueRecord:
keyFromUnencryptedKeyValueRecordName:
keyID
keyValueForKey:inStoreWithIdentifier:createIfNecessary:error:
keyValueForRecordName:inStoreWithIdentifier:error:
keyValueFromManagedKeyValue:inStoreWithIdentifier:
keyValueRecordHasAssetWithoutFile:
keyValueStorePlistFromURL:error:
keyValues
keyValuesForKeyIDs:createIfNecessary:error:
knownDaemons
lastPathComponent
length
listAllPersonaWithAttributes
listener:shouldAcceptNewConnection:
loadPersistentStoresWithCompletionHandler:
localizedDescription
managedDatabaseCreateIfNecessary:inContext:error:
managedKeyValueWithRecordName:inStoreWithIdentifier:inContext:error:
managedKeyValuesForKeyIDs:inContext:error:
managedKeyValuesMatchingPredicate:inContext:error:
managedObjectModel
managedStoreWithIdentifier:createIfNecessary:inContext:error:
markAllKeyValuesAsNeedingToBeUploaded
markAllKeyValuesAsNeedingToBeUploadedForStoreWithIdentifier:
maxPendingFetchedRecords
mergeDataFromRecord:
migrateAllPlistsIfNecessaryToCoreDataStore:deleteMigratedPlists:error:
migrateAllPlistsIfNecessaryToCoreDataStore:deleteMigratedPlists:libraryDirectoryURL:error:
migrateAllPlistsToCoreDataStore:deleteMigratedPlists:libraryDirectoryURL:error:
migratePlist:forStoreWithIdentifier:toCoreDataStore:error:
modificationDate
modifiedByDevice
modifyPendingChangesInZoneIDs:group:completionHandler:
name
newBackgroundContext
newRecordNameForKey:
notEntitledStoreIDs
notifyAccountDidChangeWithCompletionHandler:
notifyToken
null
numberOfKeyValuesInStoreWithIdentifier:error:
numberWithDouble:
numberWithInteger:
numberWithUnsignedInteger:
object
objectAtIndexedSubscript:
objectForKey:inStoreWithConfiguration:reply:
objectForKey:inStoreWithIdentifier:error:
objectForKey:ofClass:
objectForKey:ofClass:valuesOfClass:
objectForKeyedSubscript:
open
orPredicateWithSubpredicates:
path
pendingDeletedRecordIDs
pendingFetchedRecords
performBlockAndWait:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistentContainerQueue
persistentContainerWithError:
persistentStoreCoordinator
persistentStores
personaAttributesForPersonaType:
personaAttributesForPersonaUniqueString:
personaIdentifier
personaUniqueString
plistDataValue
postNotificationName:object:
postNotificationName:object:userInfo:
predicate
predicateWithFormat:
privateCloudDatabase
processAccountChanges
processAccountChangesWithCompletionHandler:
processFetchedRecords:deletedRecordIDs:
processIdentifier
processName
processPendingFetchedRecordsWithReason:
propertyList:isValidForFormat:
propertyListWithData:options:format:error:
propertyListWithStream:options:format:error:
queue
raise:format:
recordFieldKeyForValueModificationDateInStoreType:
recordID
recordIDForKey:inStoreWithIdentifier:
recordName
recordNameForUnencryptedKey:
recordRepresentationForStoreType:
recordType
recordZoneIDsToDeleteForSyncEngine:
redactedDescription
refreshObject:mergeChanges:
registerForChangeNotificationsForStoreWithConfiguration:reply:
registerForPeriodAnalyticsXPCActivity
registeredStoreIDs
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeInvalidSyncManagers
removeItemAtURL:error:
removeKeyValueForKey:inStoreWithIdentifier:excludeFromChangeTracking:error:
removeKeyValueForRecordName:inStoreWithIdentifier:error:
removeObject:
removeObjectForKey:
removeObjectForKey:inStoreWithConfiguration:reply:
removeObjectForKey:inStoreWithIdentifier:error:
removeObjectForKey:inStoreWithIdentifier:excludeFromChangeTracking:didRemoveValue:error:
removeObjectForKey:inStoreWithIdentifier:excludeFromChangeTracking:error:
removeObjectsForKeys:
requestAuthorizationWithOptions:completionHandler:
requestWithIdentifier:content:trigger:
resetSyncEngineWithContainer:
respondsToSelector:
restorePersonaWithSavedPersonaContext:
result
resume
retain
retainCount
save:
saveChangeToken:forStoreWithConfiguration:reply:
saveContext:reason:includingTransactionContext:error:
saveKeyValue:inStoreWithIdentifier:error:
saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:error:
saveKeyValues:excludeFromChangeTracking:enforceQuota:error:
savePendingChangesToCloudForAllStoresWithCompletionHandler:
savePendingChangesToCloudForStoreIdentifiers:group:completionHandler:
saveServerSyncAnchorSystemFieldsRecordData:forStoreWithIdentifier:error:
saveSyncAnchorSystemFieldsRecord:
saveSyncEngineMetadata:error:
saveTransaction:
self
sendAnalyticsEventForCurrentState
serverSyncAnchorSystemFieldsRecordDataForStoreWithIdentifier:error:
serverSystemFieldsRecord
serverSystemFieldsRecordData
setACAccountIdentifier:error:
setAcAccountIdentifier:
setAlwaysSaveRecordZones:
setApplicationIdentifier:
setApsMachServiceName:
setAttributes:ofItemAtPath:error:
setAutomaticSyncingEnabled:
setBody:
setCachedDisabledStoreIdentifiers:
setCachedStoreBundleMap:
setCallbackQueue:
setChangeNotificationGroup:
setClientConnections:
setCloudSyncUserDefaultEnabled:storeIdentifier:
setContainer:
setCoreDataStore:
setDatabase:
setDelegate:
setDidMigrateFromPlists:
setDidMigrateFromPlists:error:
setEntitledStoreIDs:
setExportedInterface:
setExportedObject:
setFailedMigrationCount:
setFailedMigrationCount:error:
setFetchRequest:
setFileProtectionType:
setIdentifier:
setInitializingSyncManagers:
setInterruptionHandler:
setInvalidationHandler:
setIsCloudKitSupportOperation:
setIsNewKeyValue:
setKeyID:
setManualSyncCount:
setMarkZonesAsUserPurged:
setMaxPendingFetchedRecords:
setModifyRecordZonesCompletionBlock:
setName:
setNeedsToReloadAccount:
setNotEntitledStoreIDs:
setObject:forKey:inStoreWithConfiguration:reply:
setObject:forKey:inStoreWithIdentifier:error:
setObject:forKey:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:didChangeValue:error:
setObject:forKey:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:error:
setObject:forKeyedSubscript:
setOption:forKey:
setPendingDeletedRecordIDs:
setPendingFetchedRecords:
setPersistentContainerQueue:
setPersonaIdentifier:
setPersonaUniqueString:
setPlistDataLength:
setPlistDataValue:
setPredicate:
setPropertiesToFetch:
setPropertiesToUpdate:
setQueue:
setRecordName:
setRegisteredStoreIDs:
setRemoteObjectInterface:
setResultType:
setReturnsDistinctResults:
setServerSystemFieldsRecord:
setServerSystemFieldsRecordData:
setServerSystemFieldsRecordIfNewer:
setShouldAddStoreAsynchronously:
setShouldInferMappingModelAutomatically:
setShouldLogValues:
setShouldMigrateStoreAutomatically:
setSortDescriptors:
setStore:
setStoreIdentifiersWithChangedValuesDuringFetchChanges:
setStoreType:
setSyncAnchorServerSystemFieldsRecordData:
setSyncEngineMetadata:
setSyncManagersByPersona:
setThreadIdentifier:
setTitle:
setTransactionAuthor:
setTransactionContext:
setType:
setUseClearAssetEncryption:
setValue:
setValue:withModificationDate:
setValueModificationDate:
setWithArray:
setWithCapacity:
setXpcConnection:
set_persistentContainer:
sharedHelper
sharedInstance
sharedManager
shouldEnforceQuotaForStoreConfiguration:
shouldIgnoreFetchError:
shouldIncrementFailureCountForError:
shouldRetryAfterModifyError:
shouldShowNotifications
shouldStopMigrationAfterError:
shouldSyncStoreWithIdentifier:
shouldUseTransactionForPlistAtURL:
showNotificationWithTitle:body:threadIdentifier:
showUserNotificationIfEnabledForStoreIdentifier:format:
sortDescriptorWithKey:ascending:
sortedArrayUsingSelector:
standardUserDefaults
start
startListeningToTCCAccessChangedNotifications
stopListeningToTCCAccessChangedNotifications
store
storeDidChangeWithStoreID:changeDictionary:reply:
storeIdentifiersForInstalledBundles
storeIdentifiersWithChangedValuesDuringFetchChanges
storeType
stores
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringWithFileSystemRepresentation:length:
stringWithFormat:
stringWithUTF8String:
superclass
syd_accountForCurrentPersonaWithError:
syd_accountForPersonaIdentifier:error:
syd_accountIdentifierForCurrentPersona
syd_shortDescription
syncAnchorServerSystemFieldsRecordData
syncEngine:accountChangedFromUserRecordID:toUserRecordID:
syncEngine:didCompleteModifyRecordsBatch:error:
syncEngine:didDeleteRecordWithID:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:didEndFetchingChangesForZoneID:
syncEngine:didFetchRecord:
syncEngine:didSaveRecord:
syncEngine:didSaveRecordZone:
syncEngine:didSaveRecordZones:
syncEngine:didUpdateMetadata:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:failedToFetchChangesForRecordZoneID:error:
syncEngine:failedToSaveRecord:error:
syncEngine:failedToSaveRecordZone:error:
syncEngine:nextBatchOfRecordsToModifyForZoneIDs:
syncEngine:recordToSaveForRecordID:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:relatedApplicationBundleIdentifiersForZoneIDs:recordIDs:
syncEngine:shouldFetchAssetContentsForZoneID:
syncEngine:shouldFetchChangesForZoneID:
syncEngine:willBeginFetchingChangesForZoneIDs:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
syncEngine:zoneWithIDWasDeletedDueToUserEncryptedDataReset:
syncEngineDidBeginFetchingChanges:
syncEngineDidEndFetchingChanges:
syncEngineDidEndModifyingPendingChanges:
syncEngineMetadata
syncEngineMetadataWithError:
syncEngineWillBeginFetchingChanges:
syncEngineWillBeginModifyingPendingChanges:
syncManager:shouldSyncStoreWithIdentifier:
syncManagerDidChangeNotification:
syncManagerForStoreType:containerID:
syncManagerForStoreType:containerID:createIfNecessary:
syncManagerForStoreType:environment:
syncManagerForStoreType:environment:createIfNecessary:
syncManagersByPersona
synchronizeAllStoresWithCompletionHandler:
synchronizeStoreWithConfiguration:completionHandler:
synchronizeStoreWithIdentifier:completionHandler:
synchronizeStoresWithIdentifiers:completionHandler:
synchronizeStoresWithIdentifiers:type:completionHandler:
synchronousRemoteObjectProxyWithErrorHandler:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
tombstone
transactionContext
transactionStoreDidSave:
transactionalStoreWithError:
type
unarchivedObjectOfClass:fromData:error:
unionSet:
unsignedIntegerValue
unsignedLongValue
updatedProperties
useSyncAnchor
useUUIDRecordNames
userInfo
userNotificationCenter
userPersonaUniqueString
validateKey:error:
value
valueForEntitlement:
valueForEntitlement:xpcConnection:storeConfiguration:
valueModificationDate
writeToURL:options:error:
xpcConnection
xpcListener
zone
zoneID
zoneName
SYDStoreBundleMap
SYDDaemon
NSXPCListenerDelegate
NSObject
SYDDaemonToClientConnectionDelegate
SYDSyncManagerDelegate
SYDKeyValue
SYDUserNotifications
SYDTCCHelper
SYDSyncManager
CKSyncEngineDataSource
CKSyncEngineDataSourcePrivate
SYDManagedStore
SYDDaemonToClientConnection
SYDDaemonProtocol
SYDKeyID
NSCopying
SYDPlistToCoreDataMigrator
SYDManagedDatabase
SYDManagedKeyValue
SYDCoreDataStore
@16@0:8
v16@0:8
B24@0:8@16
v28@0:8B16@20
@24@0:8@16
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSDictionary"
@32@0:8q16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@24@0:8^@16
v24@0:8@"SYDDaemonToClientConnection"16
@"SYDSyncManager"32@0:8@"SYDDaemonToClientConnection"16@"SYDStoreID"24
@"NSArray"24@0:8^@16
B32@0:8@"SYDSyncManager"16@"NSString"24
@"NSArray"24@0:8@"NSArray"16
@20@0:8B16
@32@0:8q16q24
@36@0:8q16q24B32
@36@0:8q16@24B32
v20@0:8B16
@"NSXPCListener"
@"NSMutableSet"
@"NSMutableDictionary"
@24@0:8q16
v32@0:8@16@24
@"SYDKeyID"
@"NSDate"
@"NSData"
@"NSString"
v40@0:8@16@24@32
v48@0:8{?=[8I]}16
i16@0:8
v20@0:8i16
@"NSSet"
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"CKRecordID"32
v24@0:8@"CKSyncEngine"16
v32@0:8@"CKSyncEngine"16@"NSArray"24
@"CKSyncEngineBatch"32@0:8@"CKSyncEngine"16@"NSSet"24
v40@0:8@"CKSyncEngine"16@"CKSyncEngineBatch"24@"NSError"32
@"NSArray"24@0:8@"CKSyncEngine"16
@40@0:8@16@24@32
B32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
@"NSArray"40@0:8@"CKSyncEngine"16@"NSArray"24@"NSArray"32
@40@0:8@16@24q32
B24@0:8^@16
B32@0:8@16^@24
@40@0:8@16@24^@32
B56@0:8@16@24@32B40B44^@48
B64@0:8@16@24@32B40B44^B48^@56
B48@0:8@16@24@32^@40
B44@0:8@16@24B32^@36
B52@0:8@16@24B32^B36^@44
B40@0:8@16@24^@32
v32@0:8@16@?24
v24@0:8@?16
v40@0:8@16@24@?32
q16@0:8
v24@0:8q16
v24@0:8Q16
@"CKSyncEngine"
@"CKContainer"
@"SYDCoreDataStore"
@"NSMutableArray"
@"<SYDSyncManagerDelegate>"
@32@0:8@16^@24
@48@0:8@16@24@32^@40
@40@0:8@16q24@32
v48@0:8@16@24@32@?40
v40@0:8@16q24@?32
v48@0:8@16@"NSString"24@"SYDStoreConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@@"NSError">32
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
v28@0:8B16@"NSString"20
v24@0:8@?<v@?@"NSArray"@"NSError">16
@24@0:8@?16
@"NSXPCConnection"
@"<SYDDaemonToClientConnectionDelegate>"
@"NSObject<OS_dispatch_group>"
@"NSNumber"
@24@0:8^{_NSZone=}16
B36@0:8@16B24^@28
B44@0:8@16B24@28^@36
v56@0:8@16@24@32@40@48
@44@0:8@16@24@32B40
@44@0:8@16@24B32^@36
@36@0:8@16B24^@28
B48@0:8@16@24B32B36^@40
B52@0:8@16@24B32B36B40^@44
B40@0:8@16B24B28^@32
B44@0:8@16B24B28B32^@36
Q32@0:8@16^@24
B28@0:8B16^@20
B28@0:8s16^@20
s24@0:8^@16
@36@0:8B16@20^@28
@44@0:8@16B24@28^@36
@"NSPersistentContainer"
@"NSURL"
@"NSManagedObjectContext"
softlink:r:path:/System/Library/Frameworks/UserNotifications.framework/UserNotifications
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleIdentifier</key>
<string>com.apple.syncdefaultsd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>syncdefaultsd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20E5212g</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212g</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.syncdefaultsd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.mobile.keybagd.UserManager.logout</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.allowUnverifiedAccount</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.customAccounts</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.KeyValueService.EndToEndEncrypted</key>
<string>com.apple.KeyValueService.EndToEndEncrypted</string>
<key>com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms</key>
<string>com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.manager.access.delete</key>
<array>
<string>kTCCServiceUbiquity</string>
</array>
<key>com.apple.private.tcc.manager.access.modify</key>
<array>
<string>kTCCServiceUbiquity</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceAll</string>
</array>
<key>com.apple.private.ubiquity-kvstore-manage</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Preferences</string>
</array>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobile.keybagd.UserManager.xpc</string>
<string>com.apple.mobile.usermanagerd.xpc</string>
</array>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>appleaccount</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>syncdefaultsd</string>
</array>
</dict>
</plist>
application-identifier
com.apple.syncdefaultsd0
aps-connection-initiate
aps-environment
production0/*com.apple.accounts.appleaccount.fullaccess
0% com.apple.authkit.client.private
01#com.apple.developer.icloud-services0
CloudKit00+com.apple.mobile.keybagd.UserManager.logout
0.)com.apple.mobile.keybagd.UserManager.sync
0;6com.apple.private.MobileContainerManager.otherIdLookup
061com.apple.private.cloudkit.allowUnverifiedAccount
0+&com.apple.private.cloudkit.buddyAccess
0.)com.apple.private.cloudkit.customAccounts
0*%com.apple.private.cloudkit.masquerade
5com.apple.private.cloudkit.serviceNameForContainerMap
0Z+com.apple.KeyValueService.EndToEndEncrypted+com.apple.KeyValueService.EndToEndEncrypted0t8com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms8com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms0.)com.apple.private.cloudkit.setEnvironment
com.apple.private.cloudkit.spi
0.)com.apple.private.cloudkit.supportservice
0-(com.apple.private.cloudkit.systemService
083com.apple.private.security.storage-exempt.heritable
094com.apple.private.security.storage.AppDataContainers
com.apple.private.tcc.allow0
kTCCServiceLiverpool0D+com.apple.private.tcc.manager.access.delete0
kTCCServiceUbiquity0D+com.apple.private.tcc.manager.access.modify0
kTCCServiceUbiquity0=)com.apple.private.tcc.manager.access.read0
kTCCServiceAll0.)com.apple.private.ubiquity-kvstore-manage
0Q6com.apple.private.usernotifications.bundle-identifiers0
com.apple.Preferences00+com.apple.security.enterprise-volume-access
4com.apple.security.exception.mach-lookup.global-name0k
com.apple.mobile.keybagd.xpc(com.apple.mobile.keybagd.UserManager.xpc!com.apple.mobile.usermanagerd.xpc0.)com.apple.usermanagerd.persona.background
0)$com.apple.usermanagerd.persona.fetch
keychain-access-groups0
appleaccount0$
seatbelt-profiles0
syncdefaultsd
