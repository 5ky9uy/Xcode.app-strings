@(#)PROGRAM:syncdefaultsd  PROJECT:SyncedDefaults-
kvs/main
Starting
Exiting due to SIGTERM
Not syncing store that isn't used on this device: %@
Not syncing TCC-disabled store %@
Not syncing store that is disabled via NSUserDefaults: <(%@)>
Checking cloud sync status for store <(%@)> Status is disabled.
Checking cloud sync status for store <(%@)> Status is enabled.
Enabling cloud sync for store <(%@)>
Disabling cloud sync for store <(%@)>
Found bundle identifiers for store %@: %@
No bundle identifiers for store %@
No cached bundle map, generating a new one
Generating store bundle mapping
LSBundleRecord did not map to an effectiveBundleIdentifier or contain one: %@
Checking if bundle identifier: %@ is entitled for KVS
Found %ld store identifiers for bundle identifier: %@ %@ 
No bundle identifier found using LSBundleRecord for: %@
Generated new store bundle mapping: %@
Installed apps changed. Clearing cached store bundle map. Notification=%@
Resuming server
Accepting new XPC connection %@
Created client connection %@
Removing client connection %@
Processing account changes
Processing account changes for sync manager %@
Persona doesn't exist for sync manager %@
Current logged in account identifier: %@
Not processing account changes for %@ due to error getting account identifier: %@
No database account identifier and not logged-in
Database has no account, but the user is now logged in. Setting account identifier and marking everything as needing to be uploaded.
No longer logged into an account
Account in database is the same as logged-in account
Account in database (%@) is different from the logged-in account (%@)
The account did change, will notify clients and tell the sync engine
Will tell sync engine to reload the account for sync manager %@
Not creating sync manager for store type %d because it is not supported
Getting sync manager for lookup key=%@ storeType=%@ container=%@
No existing sync manager, creating now for personaLookupKey=%@
Error ensuring KVS directory exists: %@
Error ensuring KVS directory has the right attributes: %@
Will set initial account identifier
Setting initial account identifier to %@
Created sync manager %@
Should not lazily create sync manager %@
Initializing known sync managers
Initializing known sync managers for persona %@
Checking to make sure persona still exists for sync manager %@
Persona still exists for sync manager %@
Persona no longer exists for sync manager %@
No persona unique string, moving on...
Forgetting about sync managers for account identifiers: %@
Registering for periodic analytics XPC activity
Checking in for periodic analytics XPC activity
Setting periodic analytics XPC activity criteria
Sending periodic analytics
Store state for %@: %@
Container state: %@
Error unarchiving server record: %@
No encoded data for new server record %@
Trying to set server record if newer, but no other record
No current system fields record for %@
No current modification date on system fields record for %@
Trying to set server record using record with a different ID. current=%@ other=%@
Server record is newer than current system fields record for %@
Replacing local system fields record for %@: current=%@ other=%@
Not replacing local system fields record for %@: current=%@ other=%@
Merging data from record to %{private}@
Trying to merge data from an unknown record type: %@
Trying to merge data from a record of a different type (%@) from this key value record type (%@)
No modification date in record
Record's modification date was of the wrong class (%@). Expected NSDate.
Error loading data from asset: %@
No file URL for value data asset in %@
No value data in record
Record's value data was of the wrong class (%@). Expected NSData.
No current valueModificationDate
Record value modification date is greater than local value
Replacing local value with value from record
Error decoding value data from record: %@
Expected record type %@ for record name %@, but server record had record type %@
Error generating plist value: %@
Going to use an asset for %@ because the data is %ld bytes
Somehow we got to a point where we're creating a record for %@, but we have no data. Bailing
Could not get key from record %@
Deleting file for asset (%@) in key value record %@
Failed to delete asset file: %@
Error adding notification request: %@
Requesting notification authorization
Error requesting notification authorization: %@
Requested notification authorization, granted=%d
Created change token URL for type=%@ process=%@ url=%@
Got container path from containermanager: %s
Failed to get container path from containermanager: %llu
Falling back to NSFileManager to get the Library directory
Failed to get Library directory from NSFileManager: %@
Found KVS container directory: %@
About to adopt persona %@
Error copying current persona context: %@
Error adopting persona %@: %@
Adopted persona %@ and copied context %@
Error restoring saved persona context %@: %@
Restored saved persona context %@
Current device class %@ end-to-end encryption
Checking if syncing is disabled for store %@
Caching disabled store identifiers: %@
Store %@ is disabled
Finding list of disabled store identifiers
Error getting bundle record: %@
Couldn't find bundle record for disabled bundle %@
Bundle %@ has Ubiquity disabled and is entitled to defaultStoreIdentifier=%@ additionalStoreIdentifiers=%@
Bundle %@ has Ubiquity disabled, but is not entitled to any KVS stores
Enabling TCC if necessary
No bundle, no TCC
TCC is already enabled for %@
TCC is already disabled for %@
Enabling TCC for %@
Starting to listen to TCC access change notifications
Invalidating cached disabled store identifiers
Cancelling TCC access changed notifications
Initializing store with container=%@ coreDataStore=%@
Not initializing sync engine due to error getting sync engine metadata from database: %@
Initializing sync engine
Unable to initialize engine: %@
Error fetching object for key %{private}@ in %@: %@
Fetched %@object for key %{private}@ in %@
Setting %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching existing key value: %@
Unable to get or create value for key %{private}@ in %@
Not setting identical value for key <(%{private, mask.hash}@)> in store <(%@)>
BUG IN CLIENT OF KVS: Trying to set a nil object for key <(%{private, mask.hash}@)>, but we should have early returned above
Assigned new record name (%@) for (%{private}@) in (%@)
Unable to check how many key values we had in this store. Moving on.
We had no keys in %@, so let's save the zone
Error saving value for key: %@
Not adding record to sync engine because we were told not to sync
alwaysSaveRecordZones=YES, saving record zone
Removing object for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching while removing value for key: %@
Error marking key-value as deleted: %@
Trying to remove object for a key that doesn't exist (%{private}@)
kvs/sync-store
Synchronizing stores with the cloud: %@
Sync was cancelled during fetch changes. Not saving changes
Synchronizing with cloud
Failed to load engine when saving pending changes: %@
Saving pending changes to cloud for stores [%@]
Saving all pending changes to cloud
Error modify pending records: %@
Finished modifying pending records
Will retry after error modifying pending records: %@
Failed to load engine when fetching changes: %@
Fetching pending changes from cloud for stores [%@]
Fetching all changes from cloud
Found ignorable error fetching records: %@
Error fetching records: %@
Finished fetching changes
Deleting data from cloud for %@
Error fetching all zones for deleting data from cloud: %@
Error deleting deleting data from cloud: %@
Finished deleting data from cloud
Marking all key values as needing to be uploaded for all stores
Error getting store identifiers from database while trying to mark key values as needing to be uploaded: %@
Marking all key values as needing to be uploaded for store (%@)
Error fetching record names from database when marking key values as needing to be uploaded for %@: %@
Setting new container %@ for %@
Deleting sync engine metadata for %@
Failed to fetch changes for RecordZoneID %@: %@
Missing Manatee identity fetching %@, deleting the zone now
Generating record to save for %@
Error getting sync anchor data for %@: %@
Error unarchiving server sync anchor record: %@
Error getting key value for %@ when returning record to sync engine: %@
No keyValue for recordID %@, so we're returning nothing
Returning record to save %@
Did save sync anchor record %@
Did save keyValue record %@
Error fetching key value after saving record: %@
No keyValue by record name after saving %@
Saved record %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Error saving new server system fields record: %@
Failed to save record %@: %@
No server record for conflict on sync anchor
Conflict saving key-value record %@
Not merging data from server record %@ because it has an asset
No value modification date from server after asset conflict
Error fetching key-value from database trying to resolve a conflict on a server record with an asset: %@
Taking the server system fields record from the server record even though we don't have the server's value
Error saving key value after taking server record: %@
Resolving conflict for record %@
No server record when resolving conflict saving record %@
Unknown item saving key-value record, will re-upload %@
Error fetching keyValue handling CKErrorUnknownItem for record %@: %@
Unable to save key value to database when processing CKErrorUnknownItem: %@
Couldn't find keyValue for record %@ after CKErrorUnknownItem
Zone not found saving %@. Saving zone and re-saving record
Error clearing server system fields for records in %@: %@
Failed to save %@ because zone was user-purged
Missing Manatee identity saving %@, deleting the zone now
Manatee unavailable trying to save %@. Retrying eventually
Batch failure trying to save %@. Retrying eventually
Unknown error saving record %@: %@
Deleted sync anchor record %@
Deleted keyValue record for key <(%{private, mask.hash}@)> in store <(%@)> %@
Error fetching key-value after deleting record from the cloud: %@
No key-value in database after deleting record from the cloud
Client set a value for key-value while we were deleting it from the cloud
Removing key-value from local database after deleting record from the cloud
Error removing key-value from database after it was deleted in the cloud: %@
Error deleting record %@: %@
Fetched sync anchor record %@
Will save sync anchor server record: %@
Failed to archive sync anchor record: %@
Failed to save sync anchor system fields: %@
Record was fetched %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Unable to get key value from database when processing fetched record: %@
Unable to save key value to database when processing fetched record: %@
Value didn't change for key <(%{private, mask.hash}@)> in store <(%@)>
Local record name (%@) and fetched record name (%@) do not match for key (%{private}@)
Creation dates were exactly the same when de-duplicating. Comparing record names
Local record was created first, choosing local record name %@
Remote record was created earlier, choosing remote record name %@
Telling sync engine to delete duplicate record %@ and save the chosen record %@
KeyValue record was deleted for key <(%{private, mask.hash}@)> in store <(%@)> %@
Posting notification for removed key <(%{private, mask.hash}@)> in store <(%@)>
Unable to find key to post notification
Sync anchor record was deleted: %@
Saved zones: %@
Error saving record zones: %@
Deleted zone %@ and re-uploading key values
Failed to delete zone %@
Zone was purged: %@
Not going to fetch changes for store %@
Started fetching changes for %@
Finished fetching changes for %@
Posting %@
Will post store-specific Darwin notification for %ld stores
Deleting local persisted data for %@
Getting account for persona %@
Error getting all AppleAccounts: %@
Found account for persona %@: %@
Couldn't find account for persona %@
Getting account for current persona
Using primary Apple account for current persona
Error getting account for persona %@: %@
Resuming connection %@
Connection interrupted %@
Connection invalidated %@
Caching entitlement for %@ for %@
Process %@ is NOT entitled for store %@
Checking if process %d is entitled for store %@
Process %d is entitled for store %@ via %@
Handling setObject (%{private}@) for store=%@
Handling objectForKey (%{private}@) for store=%@
Handling removeObject (%{private}@) for store=%@
Handling sync for store=%@
No sync manager for store=%@
Asked to sync zero stores
Handling sync for stores with type %@: %@
No sync manager for store type %@
Handling dictionaryRepresentation for store=%@
Fetching all store identifiers.
BUG IN CLIENT OF KVS: Connection is trying to fetch all store identifiers without the correct entitlement.
BUG IN CLIENT OF KVS: Connection is trying to use an a sync status operation without the correct entitlement for store %@
Asked to register for store %@
Registering for store %@
Generating change dictionary for token %@ in store (%@) for %@
Unable to get current change token: %@
Unable to get changed keys: %@
Generated change dictionary for %ld changes
Could not find change token URL to load change token
Unable to determine if change token URL is a symbolic link: %@
KVS store has a symbolic link for its change token (%@)
Error loading change token from disk: %@
Could not find change token URL to save change token: %@
Removing change token from disk for %@
Error removing change token when setting nil change token: %@
Saving change token to disk for %@
Error creating change token directory: %@
Error saving change token to disk: %@
Received error about a bad persistent history token. Throwing it away and trying again.
No store ID for sync manager change notification %@
No sync manager for sync manager change notification %@
kvs/notify-store-change
Received notification for registered store ID %@ in %@
Error getting change token to send change dictionary: %@
Sending notification about %d changed keys for store <(%@)>: ( %@ )
Failed to notify client about changes to store %@: %@
Successfully notified client about changes to store %@
Received a notification about a changed sync manager, but the notification object is a %@
kvs/notify-account-change
Notifying client that account did change %@
Not notifying data-separated client about account change: %@
Error getting change token to notify about account change: %@
Error getting async client for posting change notification: %@
Not processing did-change-value notification for store ID=%@ changedKeys=%@
Error getting change token to send change dictionary for local change: %@
Sending notification about %d changed keys for store <(%@)>
Error obtaining async remote object proxy: %@
Error obtaining remote object proxy: %@
BUG IN CLIENT OF KVS: Tried to access unknown store %@
Incremented manual sync count to %ld for %@
Decremented manual sync count to %ld for %@
Failed to get the library directory when migrating: %@
kvs/migrate-if-necessary
Migrating all plists to Core Data if necessary
Error checking if already migrated: %@
Already migrated. High five. Not migrating again.
Not migrating in multi-user mode.
Did not already migrate. Migrating now
Error saving migration state: %@
Did save migration state
Error migrating all plists: %@
Error getting failed migration count: %@
Failed to set new failed migration count: %@
Set new failed migration count %d
Reached maximum number of migration failures. Not migrating again.
Failed to set didMigrateFromPlists after reaching max failures: %@
Set didMigrateFromPlists after reaching max failures
kvs/migrate-all-plists
We should not migrate the non-personal persona
Migrating all plists to store %@
About to migrate %lu possible plists
Error loading plist at %@: %@
Error creating new transactional store for plist: %@
Error saving transactional store when migrating plist: %@
Error migrating plist at %@: %@
Migrated plist at %@
Error deleting plist at %@: %@
Deleted plist at %@
No key-value store plist at %@, moving on.
Migrating all (%lu) plists took %.2f seconds
Migrating plist for store %@
Migrating key <(%{private, mask.hash}@)> for store <(%@)>
Found value in plist that wasn't a dictionary (%@): %@
No plist value from plist storage
No timestamp in plist storage
Error fetching key value while migrating plist: %@
Using plist value for (%{private}@) in %@: no value in Core Data
Using plist value for (%{private}@) in %@: timestamp %f is later than current timestamp %f
Not using plist value for (%{private}@) in %@
Error saving key value while migrating plist: %@
Migrating plist for %@ took %.0f milliseconds
File at URL is not a plist %@
Plist at URL does not have a 'values' dictionary in it %@
Error checking plist file size to determine if we should use a transaction: %@
Plist %@: useTransaction=%d size=%ld KB
Finding all store plists on disk
Checking for plist URLs from bundle: %@
No KVS entitlements for bundle %@
No bundle identifier for bundle %@
Using uncontainerized Library directory for %@
Finding plists for known daemons
Adding plist URLs for bundle identifier %@ with defaultStoreIdentifier=(%@) additionalStoreIdentifiers=[%@]
Error decoding plist value data: %@
Trying to access key value for nil key
Error trying to access a key value with an empty store identifier
Fetching keyValue for key <(%{private, mask.hash}@)> in store <(%@)> create=%d
Existing keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Creating new keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
No keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Fetching keyValue for record name (%@) in store <(%@)>
Existing keyValue for record name (%@) in store <(%@)>
No keyValue for record name (%@) in store <(%@)>
SYDManagedKeyValue for key <(%{private, mask.hash}@)> is missing a store identifier. Manually setting store identifier <(%@)>
Saving value for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)> excludeFromChangeTracking=%d
Exceeded maximum number of keys in store <(%@)>
Exceeded maximum bytes for key <(%{private, mask.hash}@)> in store <(%@)>
Exceeded maximum total bytes in store <(%@)>
Deleting managed object that would go over quota
Reverting managed object that would go over quota
Removing keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching existing key value when removing a key value: %@
Deleting managed key value for key <(%{private, mask.hash}@)> in store <(%@)>
No managed key value to delete for key <(%{private, mask.hash}@)> in store <(%@)>
Removing keyValue for record name <(%@)> in store <(%@)>
Deleting managed key value for record name <(%@)> in store <(%@)>
No managed key value to delete for record name <(%@)> in store <(%@)>
Fetching sync anchor for (%@)
Error fetching sync anchor: %@
No store when fetching sync anchor data
Saving sync anchor for (%@)
Clearing sync anchor for (%@)
No store when saving sync anchor data
Deleting data for stores matching predicate (%@)
Failed to delete data for stores matching predicate (%@): %@
Deleted data for stores matching predicate (%@)
Failed to fetch record names for store <(%@)>: %@
Fetched a key value with no record name
Failed to fetch all store identifiers: %@
Clearing server records for store <(%@)>
No managed store for store identifier (%@), so there's nothing to do
Failed to clear server records for store <(%@)>: %@
Cleared server records for store <(%@)>
Error fetching count of key values with predicate %@: %@
Getting current token for (%@)
Trying to get change token with no persistent store
No current persistent history token
Failed to archive history token to NSData: %@
Getting changed keys for store <(%@)> with%@ token
Error unarchiving token from data: %@
Persistent history token expired for (%@): %@
Error fetching persistent history for (%@): %@
Received unexpected type of persistent history result (%@)
Expected a list of %@, but got %@
Found %ld persistent history transactions in store <(%@)>
Found multiple stores in a single transaction
We have some deleted keys, but no store object ID
Error fetching store properties when validating deleted keys: %@
No store identifier when validating deleted keys
Error fetching properties when fetching change history: %@
Found %ld changed keys for store <(%@)>
Clearing server records for all stores
Failed to clear key value server records for all stores: %@
Cleared key value server records for all stores
Failed to clear sync anchor server records for all stores: %@
Cleared sync anchor server records for all stores
Saving ACAccount identifier (%@)
About to set didMigrateFromPlists=%d
Error fetching managed database while setting didMigrateFromPlists: %@
Saving didMigrateFromPlists=%d
About to set failedMigrationCount=%d
Error fetching managed database while setting failedMigrationCount: %@
Saving failedMigrationCount=%d
Generating dictionary for store <(%@)>
Error fetching key value properties for dictionary representation: %@
Error decoding plist value data for key <(%{private, mask.hash}@)> in dictionary representation for store <(%@)>: %@
Nil deserialized value for key <(%{private, mask.hash}@)> when generating dictionary for store <(%@)>
No value for key <(%{private, mask.hash}@)> when generating dictionary for store <(%@)>
Saving sync engine metadata (length=%ld)
Retrieving sync engine metadata
Found multiple managed databases in the CoreData database
Error fetching managed database: %@
Creating new managed database
Found multiple stores for the same identifier: %@
Error fetching managed store: %@
Creating new managed store %@
Error fetching key value for key <(%{private, mask.hash}@)> in store <(%@)>: %@
Found multiple key values for the same key <(%{private, mask.hash}@)> in store <(%@)>
Creating new managed key value for key <(%{private, mask.hash}@)> in store <(%@)>
Found multiple key values for the same record name (%@) in store <(%@)>
Error fetching managed keyValue with predicate %@: %@
Could not create context for %@ without a persistent container
Not saving transaction context
Error saving context (%@): %@
Saved context (%@)
Loading persistent store for %@
File protection error loading persistent store: %@
Disk is full while loading persistent store: %@
Error loading persistent store: %@
Retrying to load persistent store
Failed to load persistent store on second try: %@
Successfully loaded persistent store on second try
Loaded persistent store
Unable to find SyncedDefaults framework bundle
Loading managed object model
Unable to get URL for managed object model
Not destroying persistent store due to error: %@
No persistent container to destroy
Destroying persistent store at %@
Error destroying persistent store: %@
Destroyed persistent store at %@
Error getting file size for %@: %@
Computed database size for %@: %lu
Error getting persistent container for creating a transactional store: %@
Trying to save a non-transactional store.
Saving transaction
Database was corrupt with NSFileReadCorruptFileError: %@
Database was corrupt with SQLITE_NOTADB: %@
Database was corrupt with SQLITE_CORRUPT: %@
Destroying corrupt database
v8@?0
com.apple.syncdefaultsd.daemon.wake
com.apple.kvs.bundle-store-map
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
SYDStoreBundleMap.m
storeIdentifier must not be empty
com.apple.kvs.disable-sync
com.apple.
com.apple.developer.ubiquity-kvstore-identifier
com.apple.private.ubiquity-additional-kvstore-identifiers
PersonalPersona
com.apple.kvs.daemon.queue
com.apple.kvsd
v32@?0@"CKContainerID"8@"SYDSyncManager"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
NADA
com.apple.kvs.periodic-analytics
v16@?0@"NSObject<OS_xpc_object>"8
containerIdentifier
containerEnvironment
storeIdentifier
keyValueCount
com.apple.kvs.storeState
storeCount
databaseSizeBytes
com.apple.kvs.containerState
Trying to init a keyValue without a key: %@
Trying to init a keyValue without a store identifier: %@
<%@: %p; key=%@ storeIdentifier=%@%@%@>
 recordName=
<%@: %p; storeIdentifier=%@%@%@>
Tried to set invalid value '%@' of class '%@'
Trying to get a record ID for a keyValue that has not been assigned a record name yet: %@
Trying to get a record ID for a keyValue that does not have an associated zoneID: %@
KVSRecord
EncryptedKeyValue
value
assetValue
valueData
valueDataAsset
valueModificationDate
localModificationDate
KVS: %@
v16@?0@"NSError"8
v20@?0B8@"NSError"12
com.apple.Preferences
KVSNotifications
com.apple.kvs
com.apple.kvs.user-notifications
UNMutableNotificationContent
Class getUNMutableNotificationContentClass(void)_block_invoke
SYDUserNotifications.m
Unable to find class %s
void *UserNotificationsLibrary(void)
UNNotificationRequest
Class getUNNotificationRequestClass(void)_block_invoke
UNUserNotificationCenter
Class getUNUserNotificationCenterClass(void)_block_invoke
remotevalue
timestamp
KVSOnCloudKitForAll
EncryptedAllPlatforms
Unable to open database file
Disk is full
Network error
No account
Network failure
Service unavailable
Failed to sync with CloudKit
SyncedDefaults
Unknown error
NoEncryption
EndToEndEncryption
EndToEndEncryptionAllPlatforms
Unknown
ChangeTokens
Library
Could not find ~/Library directory
SyncedPreferences
%@-%@
sqlite
com.apple.KeyValueService
com.apple.KeyValueService.EndToEndEncrypted
com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms
CKRecordZoneID *SYDStoreZoneID(NSString *__strong)
SYDUtilities.m
Must specify a store identifier to get a zone ID
CKRecordID *SYDSyncAnchorRecordID(NSString *__strong)
Must specify a store identifier to get a sync anchor record ID
syncAnchor
DeviceClass
AudioAccessory
supports
does not support
com.apple.security.cloudkeychainproxy3
com.apple.sbd3
com.apple.mail.recents
com.apple.messages.recents
v24@?0#8^B16
com.apple.kvs.tcc
com.apple.tcc.access.changed
v12@?0i8
SYDSyncManagerNotificationValuesDidChange
changedKeys
storeID
SYDSyncManager.m
Must specify a container for %@
Must specify a database URL for %@
com.apple.kvs.sync-manager.%@
<%@: %p; container=%@ coreDataStore=%@ storeType=%@
 personaUniqueString=%@
com.apple.aps.kvsd
Invalid key parameter provided
(null) 
Attempted to insert invalid value '%@' of class '%@'
Failed to set value: %@
Set %@ = %@
Trying to delete a key-value that never had a record name in a store that uses UUID record names
ManualSync
v32@?0@8@"NSError"16^B24
metadata_zone
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"NSArray"8@"NSError"16
%@%@
KeyValue:
KVSSyncAnchorRecord
Uploaded %@ = %@
com.apple.kvs.failedToSaveKey
errorCode
Failed to save record: %@
Downloaded %@ = %@
Trying to de-duplicate two identical records %@ and %@
com.apple.kvs.deduplicate
SYDRemotePreferencesSourceDidChangeExternally
%s%@
com.apple.kvs.store-did-change.
<CKRecordID recordName=%@ zone=%@>
 modifiedBy='%@'
<CKRecord type=%@ recordName=%@ zone=%@ etag=%@%@>
SYDDaemonToClientConnectionNotificationChangedValues
com.apple.kvs.daemon-to-client.%d
.callback
<%@: %p;
 registeredStoreIDs=[%@]
 clientPID=%d
com.apple.private.ubiquity-kvstore-identifier-prefix
com.apple.private.ubiquity-kvstore-manage
com.apple.private.trust-ubiquity-kvstore-identifier
com.apple.private.ubiquity-kvstore-access
com.apple.private.kvs.test
com.apple.kvs.test
Not entitled to access store %@
com.apple.private.kvs.ignore-quota
No sync manager trying to sync store %@
No sync manager trying to sync stores with type %@
com.apple.private.ubiquity-kvsutil-access
com.apple.private.kvs.allow-sync-enablement-modifications
Change token should not be a symbolic link
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
Tried to access unknown store %@
Cannot migrate the non-personal persona
v32@?0@"NSURL"8@"NSString"16^B24
com.apple.kvs.migrationFailed
errorDomainAndCode
%@_%ld
com.apple.kvs.migrationCompleted
duration
values
v32@?0@"NSString"8@"NSDictionary"16^B24
StoreIdentifier
AdditionalStoreIdentifiers
plist
com.apple.sbd
com.apple.sbd.emcs
accountsd
com.apple.accounts
com.apple.finder
com.apple.accessibility.AccessibilityUIServer
com.apple.VoiceOverTouch
com.apple.TextInput.kbd
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.weather
com.apple.springboard
com.apple.backboardd
com.apple.datamigrator
com.apple.CoreSuggestions
com.apple.cmfsyncagent
com.apple.accessibility.heard
com.apple.HearingAids
com.apple.wifid
com.apple.wifid.known-networks
com.apple.coretelephony
com.apple.cloudrecents.CloudRecentsAgent
com.apple.eventkit.locations
com.apple.corerecents.map-locations
com.apple.passbook.locations
com.apple.facetime.recents
com.apple.calendar.recents
com.apple.mediaaccessibilityd
com.apple.mediaaccessibility
com.apple.email.maild
com.apple.mail.threadinfo
com.apple.mail.vipsenders
com.apple.tipsd
com.apple.touristd
Misc
CloudKit
CoreData
Connection
Analytics
Accounts
Migration
no-change-tracking
TransactionStoreDidSave
SYDCoreDataStore.m
Cannot initialize %@ with a nil URL
com.apple.kvs.coredata.persistent-container
Cannot create a transactional context without a persistent container
<%@: %p; url=%@>
Trying to access a key value with an empty store identifier
Trying load a nil key in store <(%@)>
Trying to load without a store identifier
Trying to save a nil %@ in %@
Trying to save without a store identifier
Exceeded maximum number of keys (%d) in store (%@).
Exceeded maximum size (%d) for key (%@) in store (%@).
Exceeded maximum total bytes (%d) in store (%@).
saving key value
Trying to remove a value for a nil key
Trying to remove without a store identifier
removing key value
Trying to remove a value for a nil record name
removing key value for record name
Saving sync anchor
identifier == %@
store.identifier == %@
Removing sync anchor server record
store == %@
Unable to load database
 nil
author == nil
contextName == %@
self == %@
identifier
self IN %@
ACAccount identifier
did migrate from plists
failed migration count
sync engine metadata
key == %@
Fetched a managedKeyValue with an empty store identifier
recordName == %@
SYDManagedObjectModel
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
momd
-wal
-shm
saving transaction
errorDomain
sqliteError
com.apple.kvs.corruptDatabase
start
init
defaultCenter
installedAppsDidChange:
addObserver:selector:name:object:
removeObserver:
dealloc
isStoreIdentifierUsedOnThisDevice:
sharedHelper
isUbiquityDisabledForStoreIdentifier:
isCloudSyncUserDefaultEnabledForStoreIdentifier:
queue
length
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
stringByAppendingString:
standardUserDefaults
boolForKey:
removeObjectForKey:
setBool:forKey:
storeIdentifiersForInstalledBundles
containsObject:
hasPrefix:
generateStoreBundleMapIfNecessary
cachedStoreBundleMap
objectForKeyedSubscript:
count
generateStoreBundleMap
setCachedStoreBundleMap:
allKeys
setWithArray:
enumeratorWithOptions:
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
effectiveBundleIdentifier
bundleIdentifier
entitlements
objectForKey:ofClass:
objectForKey:ofClass:valuesOfClass:
addObject:
addObjectsFromArray:
setObject:forKeyedSubscript:
sharedInstance
shouldSyncStoreWithIdentifier:
setCloudSyncUserDefaultEnabled:storeIdentifier:
bundleIdentifiersForStoreIdentifier:
setQueue:
.cxx_destruct
_queue
_cachedStoreBundleMap
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSDictionary",&,N,V_cachedStoreBundleMap
initWithInitialStoreCreation:
initializeKnownSyncManagers
initWithMachServiceName:
setXpcListener:
xpcListener
setDelegate:
resume
registerForPeriodAnalyticsXPCActivity
_queue_allSyncManagers
syncManagersByPersona
enumerateKeysAndObjectsUsingBlock:
allObjects
defaultStore
initWithXPCConnection:delegate:
clientConnections
type
syncManagerForStoreType:containerID:
removeObject:
_processAccountChanges
personaUniqueString
personaAttributesForPersonaUniqueString:
personaAttributesForPersonaType:
userPersonaUniqueString
accountStore
syd_accountIdentifierForCurrentPersona
coreDataStore
acAccountIdentifierWithError:
clearServerSystemFieldsRecordsForAllStoresWithError:
setACAccountIdentifier:error:
deleteDataForAllStoresWithError:
isEqualToString:
storeType
container
containerID
containerForStoreType:containerID:
resetSyncEngineWithContainer:
markAllKeyValuesAsNeedingToBeUploaded
removeInvalidSyncManagers
notifyAccountDidChangeWithCompletionHandler:
engine
setNeedsToReloadAccount:
syncManagerForStoreType:environment:createIfNecessary:
syncManagerForStoreType:containerID:createIfNecessary:
currentPersona
dictionary
checkResourceIsReachableAndReturnError:
dictionaryWithObjects:forKeys:count:
URLByDeletingLastPathComponent
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
path
setAttributes:ofItemAtPath:error:
initWithURL:fileProtectionType:
migrateAllPlistsIfNecessaryToCoreDataStore:deleteMigratedPlists:error:
initWithContainer:coreDataStore:storeType:
isInitializingSyncManagers
setInitializingSyncManagers:
sharedManager
listAllPersonaWithAttributes
userPersonaType
syncManagerForStoreType:environment:
removeObjectsForKeys:
setUseClearAssetEncryption:
initWithContainerID:options:
setPersonaIdentifier:
allStoreIdentifiersWithError:
caseInsensitiveCompare:
sortedArrayUsingSelector:
sendAnalyticsEventForCurrentState
numberOfKeyValuesInStoreWithIdentifier:error:
containerIdentifier
environment
numberWithInteger:
numberWithUnsignedInteger:
fileSizeBytes
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
connectionDidInvalidate:
connection:syncManagerForStoreID:
processAccountChanges
syncManager:shouldSyncStoreWithIdentifier:
allSyncManagers
setClientConnections:
setSyncManagersByPersona:
_initializingSyncManagers
_xpcListener
_clientConnections
_syncManagersByPersona
T@"NSXPCListener",&,N,V_xpcListener
initializingSyncManagers
TB,N,GisInitializingSyncManagers,V_initializingSyncManagers
T@"NSMutableSet",&,N,V_clientConnections
T@"NSMutableDictionary",&,N,V_syncManagersByPersona
T@"ACAccountStore",R,N
raise:format:
storeIdentifier
recordName
appendFormat:
propertyList:isValidForFormat:
setValue:
setValueModificationDate:
date
serverSystemFieldsRecordData
initForReadingFromData:error:
initWithCoder:
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
encodedData
setServerSystemFieldsRecordData:
recordID
initWithRecordName:zoneID:
serverSystemFieldsRecord
syd_shortDescription
modificationDate
compare:
setServerSystemFieldsRecord:
recordType
setServerSystemFieldsRecordIfNewer:
recordFieldKeyForValueModificationDateInStoreType:
encryptedValues
fileURL
dataWithContentsOfURL:options:error:
assetContent
valueModificationDate
propertyListWithData:options:format:error:
initWithRecordType:recordID:
value
dataWithPropertyList:format:options:error:
identifier
initWithAssetContent:itemTypeHint:
keyFromUnencryptedKeyValueRecordName:
initWithBase64EncodedString:options:
initWithData:encoding:
dataUsingEncoding:
base64EncodedStringWithOptions:
removeItemAtURL:error:
keyFromKeyValueRecord:
recordNameForUnencryptedKey:
deleteFilesForAssetsInKeyValueRecord:
keyValueRecordHasAssetWithoutFile:
initWithKey:storeIdentifier:
redactedDescription
setValue:withModificationDate:
markForDeletion
mergeDataFromRecord:
recordRepresentationForStoreType:
setKey:
setStoreIdentifier:
setRecordName:
isNewKeyValue
setIsNewKeyValue:
_isNewKeyValue
_key
_storeIdentifier
_value
_valueModificationDate
_serverSystemFieldsRecordData
_recordName
T@"NSString",&,N,V_key
T@"NSString",&,N,V_storeIdentifier
T@,&,N,V_value
T@"NSDate",&,N,V_valueModificationDate
T@"NSData",&,N,V_serverSystemFieldsRecordData
T@"NSString",&,N,V_recordName
T@"CKRecord",C,N
T@"CKRecordID",R,N
TB,N,V_isNewKeyValue
shouldShowNotifications
initWithFormat:arguments:
stringWithFormat:
showNotificationWithTitle:body:threadIdentifier:
requestAuthorizationIfNecessary
setTitle:
setBody:
setThreadIdentifier:
UUID
UUIDString
requestWithIdentifier:content:trigger:
userNotificationCenter
addNotificationRequest:withCompletionHandler:
requestAuthorizationWithOptions:completionHandler:
initWithBundleIdentifier:
showUserNotificationIfEnabledForStoreIdentifier:format:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
domain
code
localizedDescription
userInfo
errorWithDomain:code:userInfo:
integerValue
URLByAppendingPathComponent:isDirectory:
URLHostAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
URLByAppendingPathComponent:
stringWithFileSystemRepresentation:length:
fileURLWithPath:
URLForDirectory:inDomain:appropriateForURL:create:error:
stringByAppendingPathExtension:
initWithContainerIdentifier:environment:
initWithZoneName:ownerName:
isDataSeparatedPersona
copyCurrentPersonaContextWithError:
generateAndRestorePersonaContextWithPersonaUniqueString:
restorePersonaWithSavedPersonaContext:
setWithObjects:
objectAtIndexedSubscript:
initWithDomain:code:userInfo:
enumerateObjectsUsingBlock:
startListeningToTCCAccessChangedNotifications
stopListeningToTCCAccessChangedNotifications
cachedDisabledStoreIdentifiers
findDisabledStoreIdentifiers
setCachedDisabledStoreIdentifiers:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
bundleRecordForAuditToken:error:
boolValue
setNotifyToken:
notifyToken
enableUbiquityIfNecessaryForAuditToken:
_notifyToken
_cachedDisabledStoreIdentifiers
Ti,N,V_notifyToken
T@"NSSet",&,N,V_cachedDisabledStoreIdentifiers
copy
UTF8String
initializeSyncEngineWithError:
appendString:
syncEngineMetadataWithError:
privateCloudDatabase
initWithDatabase:dataSource:metadata:
setApsMachServiceName:
setPriority:
initWithConfiguration:
engineWithError:
delegate
validateKey:error:
keyValueForKey:inStoreWithIdentifier:createIfNecessary:error:
removeObjectForKey:inStoreWithIdentifier:excludeFromChangeTracking:error:
newRecordNameForKey:
saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:error:
alwaysSaveRecordZones
zoneID
initWithZoneID:
addRecordZonesToSave:recordZoneIDsToDelete:
addKeyValueRecordIDsToSave:recordIDsToDelete:
setObject:forKey:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:error:
useUUIDRecordNames
removeKeyValueForKey:inStoreWithIdentifier:excludeFromChangeTracking:error:
saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:error:
initWithObjects:
synchronizeStoresWithIdentifiers:completionHandler:
setName:
intersectsSet:
defaultConfiguration
setIsCloudKitSupportOperation:
savePendingChangesToCloudForStoreIdentifiers:group:completionHandler:
fetchChangesFromCloudForStoreIdentifiers:group:completionHandler:
savePendingChangesToCloudForAllStoresWithCompletionHandler:
fetchChangesFromCloudForAllStoresWithCompletionHandler:
componentsJoinedByString:
initWithCapacity:
shouldRetryAfterModifyError:
modifyPendingChangesInZoneIDs:group:completionHandler:
shouldIgnoreFetchError:
fetchChangesForZoneIDs:group:completionHandler:
database
array
zoneName
initWithRecordZonesToSave:recordZoneIDsToDelete:
setMarkZonesAsUserPurged:
setModifyRecordZonesCompletionBlock:
addOperation:
fetchAllRecordZonesWithCompletionHandler:
setAutomaticSyncingEnabled:
isAutomaticSyncingEnabled
hasPendingModifications
markAllKeyValuesAsNeedingToBeUploadedForStoreWithIdentifier:
allRecordNamesInStoreWithIdentifier:error:
arrayWithCapacity:
addRecordIDsToSave:recordIDsToDelete:
setWithCapacity:
addSyncAnchorRecordIDToSaveIfNecessaryForStoreIdentifier:
useSyncAnchor
_queue_resetSyncEngine
setContainer:
saveSyncEngineMetadata:error:
_markZoneForDeletionOnManateeFailureForRecordZoneID:
clearServerSystemFieldsRecordsForAllKeyValuesInStoreWithIdentifier:error:
serverSyncAnchorSystemFieldsRecordDataForStoreWithIdentifier:error:
keyValueForRecordName:inStoreWithIdentifier:error:
saveSyncAnchorSystemFieldsRecord:
didSaveKeyValueRecord:
saveKeyValue:inStoreWithIdentifier:error:
failedToSaveKeyValueRecord:error:
didFetchKeyValueRecord:
removeKeyValueForRecordName:inStoreWithIdentifier:error:
error
saveServerSyncAnchorSystemFieldsRecordData:forStoreWithIdentifier:error:
deduplicateRecordForKeyValue:withNewlyFetchedRecord:
initWithIdentifier:type:
setPersonaUniqueString:
postNotificationName:object:userInfo:
storeIdentifiersWithChangedValuesDuringFetchChanges
creationDate
deleteDataForStoreWithIdentifier:error:
removeAllObjects
destroyPersistentStore
syncEngine:recordToSaveForRecordID:
syncEngine:didSaveRecord:
syncEngine:failedToSaveRecord:error:
syncEngine:didDeleteRecordWithID:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:didFetchRecord:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:didUpdateMetadata:
syncEngine:didSaveRecordZone:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:failedToFetchChangesForRecordZoneID:error:
syncEngine:failedToSaveRecordZone:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
syncEngine:zoneWithIDWasDeletedDueToUserEncryptedDataReset:
syncEngine:zoneWithIDWasPurged:
syncEngine:accountChangedFromUserRecordID:toUserRecordID:
syncEngineDidBeginFetchingChanges:
syncEngineWillBeginFetchingChanges:
syncEngineDidEndFetchingChanges:
syncEngine:willBeginFetchingChangesForZoneIDs:
syncEngine:didEndFetchingChangesForZoneID:
syncEngineWillBeginModifyingPendingChanges:
syncEngineDidEndModifyingPendingChanges:
syncEngine:nextBatchOfRecordsToModifyForZoneIDs:
syncEngine:didCompleteModifyRecordsBatch:error:
recordZonesToSaveForSyncEngine:
recordZoneIDsToDeleteForSyncEngine:
syncEngine:shouldFetchChangesForZoneID:
syncEngine:shouldFetchAssetContentsForZoneID:
syncEngine:relatedApplicationBundleIdentifiersForZoneIDs:recordIDs:
objectForKey:inStoreWithIdentifier:error:
setObject:forKey:inStoreWithIdentifier:error:
removeObjectForKey:inStoreWithIdentifier:error:
synchronizeStoreWithIdentifier:completionHandler:
synchronizeAllStoresWithCompletionHandler:
deleteDataFromCloudWithCompletionHandler:
recordIDForKey:inStoreWithIdentifier:
hasPendingChangesToUpload
resetSyncEngine
syncEngine:didSaveRecordZones:
deleteDataFromDisk
setCoreDataStore:
setStoreType:
setStoreIdentifiersWithChangedValuesDuringFetchChanges:
setAlwaysSaveRecordZones:
_alwaysSaveRecordZones
_engine
_container
_coreDataStore
_storeType
_personaUniqueString
_storeIdentifiersWithChangedValuesDuringFetchChanges
_delegate
T@"SYDCoreDataStore",&,N,V_coreDataStore
Tq,N,V_storeType
T@"CKContainer",&,N,V_container
T@"NSMutableSet",&,N,V_storeIdentifiersWithChangedValuesDuringFetchChanges
T@"NSString",C,N,V_personaUniqueString
TB,N,V_alwaysSaveRecordZones
automaticSyncingEnabled
TB,N,GisAutomaticSyncingEnabled
T@"<SYDSyncManagerDelegate>",W,N,V_delegate
T@"CKSyncEngine",R,N,V_engine
TB,R,N
T@"NSString",&,D,N
totalDataLength
Tq,D,N
T@"SYDManagedDatabase",&,D,N
keyValues
T@"NSSet",&,D,N
syncAnchorServerSystemFieldsRecordData
T@"NSData",&,D,N
accountsWithAccountTypeIdentifiers:error:
personaIdentifier
aa_primaryAppleAccount
syd_accountForPersonaIdentifier:error:
syd_accountForCurrentPersonaWithError:
modifiedByDevice
recordChangeTag
processIdentifier
syncManagerDidChangeNotification:
daemonToClientConnectionDidChangeValues:
registeredStoreIDs
xpcConnection
daemonProtocolInterface
setExportedInterface:
setExportedObject:
clientProtocolInterface
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
valueForEntitlement:
entitledStoreIDs
storeID
isXPCConnection:entitledForStoreConfiguration:
notEntitledStoreIDs
setNotEntitledStoreIDs:
processName
valueForEntitlement:xpcConnection:storeConfiguration:
ignoreQuotaEntitlementValue
setIgnoreQuotaEntitlementValue:
isEntitledForStoreConfiguration:
errorNotEntitledForStoreConfiguration:
isKnownStore:
errorForUnknownStore:
shouldEnforceQuotaForStoreConfiguration:
incrementManualSyncCount
decrementManualSyncCount
changeNotificationGroup
callbackQueue
initWithStoreID:
firstObject
dictionaryRepresentationForStoreWithIdentifier:error:
isCloudSyncEnablementEntitledForStoreIdentifier:
auditToken
currentChangeTokenForStoreIdentifier:error:
changedKeysForStoreIdentifier:sinceChangeTokenIfValid:inCoreDataStore:error:
changeDictionaryWithChangedKeys:reason:changeToken:
changeTokenURLForStoreConfiguration:xpcConnection:
getResourceValue:forKey:error:
writeToURL:options:error:
changedKeysForStoreIdentifier:sinceChangeToken:error:
isInvalidTokenError:
dictionaryWithCapacity:
isPerformingManualSync
object
asyncClientWithErrorHandler:
storeDidChangeWithStoreID:changeDictionary:reply:
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
fileURLWithPath:isDirectory:
manualSyncCount
setManualSyncCount:
setObject:forKey:inStoreWithConfiguration:reply:
objectForKey:inStoreWithConfiguration:reply:
removeObjectForKey:inStoreWithConfiguration:reply:
dictionaryRepresentationForStoreWithConfiguration:reply:
registerForChangeNotificationsForStoreWithConfiguration:reply:
changeDictionarySinceChangeToken:inStoreWithConfiguration:reply:
changeTokenForStoreWithConfiguration:reply:
saveChangeToken:forStoreWithConfiguration:reply:
synchronizeStoreWithConfiguration:completionHandler:
synchronizeStoresWithIdentifiers:type:completionHandler:
processAccountChangesWithCompletionHandler:
isCloudSyncUserDefaultEnabledForStoreIdentifier:completionHandler:
allStoreIdentifiersWithCompletionHandler:
client
setXpcConnection:
setCallbackQueue:
setChangeNotificationGroup:
setRegisteredStoreIDs:
setEntitledStoreIDs:
_xpcConnection
_callbackQueue
_changeNotificationGroup
_registeredStoreIDs
_entitledStoreIDs
_notEntitledStoreIDs
_ignoreQuotaEntitlementValue
_manualSyncCount
T@"NSXPCConnection",&,N,V_xpcConnection
T@"<SYDDaemonToClientConnectionDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_group>",&,N,V_changeNotificationGroup
T@"NSMutableSet",&,N,V_registeredStoreIDs
T@"NSMutableSet",&,N,V_entitledStoreIDs
T@"NSMutableSet",&,N,V_notEntitledStoreIDs
T@"NSNumber",&,N,V_ignoreQuotaEntitlementValue
TQ,N,V_manualSyncCount
migrateAllPlistsIfNecessaryToCoreDataStore:deleteMigratedPlists:libraryDirectoryURL:error:
didMigrateFromPlistsWithError:
isSharedIPad
migrateAllPlistsToCoreDataStore:deleteMigratedPlists:libraryDirectoryURL:error:
setDidMigrateFromPlists:error:
shouldIncrementFailureCountForError:
failedMigrationCountWithError:
setFailedMigrationCount:error:
allPossibleStorePlistURLsWithLibraryDirectoryURL:
keyValueStorePlistFromURL:error:
shouldStopMigrationAfterError:
shouldUseTransactionForPlistAtURL:
transactionalStoreWithError:
migratePlist:forStoreWithIdentifier:toCoreDataStore:error:
saveTransaction:
timeIntervalSinceNow
numberWithDouble:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
inputStreamWithURL:
open
propertyListWithStream:options:format:error:
close
unsignedLongValue
lastPathComponent
addPlistURLsAndStoreIdentifiersForBundleRecord:toDictionary:uncontainerizedSyncedPreferencesDirectoryURL:
addPlistURLsAndStoreIdentifiersForKnownDaemonsToDictionary:uncontainerizedSyncedPreferencesDirectoryURL:
dataContainerURL
addPlistURLsForBundleIdentifier:defaultStoreIdentifier:additionalStoreIdentifiers:toDictionary:syncedPreferencesDirectoryURL:
knownDaemons
URLByAppendingPathExtension:
acAccountIdentifier
syncEngineMetadata
didMigrateFromPlists
TB,D,N
failedMigrationCount
Ts,D,N
stores
plistDataValue
setPlistDataValue:
plistDataLength
T@"NSDate",&,D,N
store
T@"SYDManagedStore",&,D,N
T@,C,N
initWithURL:fileProtectionType:persistentContainer:isTransactional:
_contextForStoreIdentifier:persistentContainer:
transactionStoreDidSave:
contextForStoreIdentifier:error:
managedKeyValueWithKey:inStoreWithIdentifier:createIfNecessary:inContext:error:
keyValueFromManagedKeyValue:inStoreWithIdentifier:
performBlockAndWait:
managedKeyValueWithRecordName:inStoreWithIdentifier:inContext:error:
_saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:forceCreateNewRow:error:
setTransactionAuthor:
managedKeyValueWithKey:inStoreWithIdentifier:createIfNecessary:forceCreateNewRow:inContext:error:
setPlistDataLength:
isInserted
deleteObject:
refreshObject:mergeChanges:
saveContext:reason:includingTransactionContext:error:
managedStoreWithIdentifier:createIfNecessary:inContext:error:
setSyncAnchorServerSystemFieldsRecordData:
predicateWithFormat:
deleteDataForStoresMatchingPredicate:context:error:
fetchRequest
setPredicate:
initWithFetchRequest:
executeRequest:error:
setResultType:
setPropertiesToFetch:
executeFetchRequest:error:
persistentStoreCoordinator
handleCorruptionIfNecessaryFromError:inPersistentStoreCoordinator:
entity
initWithEntity:
null
setPropertiesToUpdate:
countForFetchRequest:error:
predicate
persistentContainerWithError:
persistentStores
currentPersistentHistoryTokenFromStores:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
andPredicateWithSubpredicates:
fetchHistoryAfterToken:
setFetchRequest:
result
changes
changedObjectID
changeType
tombstone
updatedProperties
name
unionSet:
setReturnsDistinctResults:
managedDatabaseCreateIfNecessary:inContext:error:
setAcAccountIdentifier:
setDidMigrateFromPlists:
setFailedMigrationCount:
sortDescriptorWithKey:ascending:
setSortDescriptors:
execute:
setSyncEngineMetadata:
initWithContext:
setIdentifier:
setDatabase:
managedKeyValuesMatchingPredicate:inContext:error:
setStore:
transactionContext
newBackgroundContext
setMergePolicy:
hasChanges
save:
persistentContainerQueue
managedObjectModel
initWithName:managedObjectModel:
initWithURL:
setType:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
setShouldAddStoreAsynchronously:
setOption:forKey:
fileProtectionType
setPersistentStoreDescriptions:
_queue_handleCorruptionIfNecessaryFromError:inPersistentStoreCoordinator:
loadPersistentStoresWithCompletionHandler:
bundleForClass:
URLForResource:withExtension:
initWithContentsOfURL:
_queue_destroyPersistentStoreInPersistentStoreCoordinator:
destroyPersistentStoreAtURL:withType:options:error:
unsignedIntegerValue
postNotificationName:object:
isCorruptionError:
removeKeyValueForKey:inStoreWithIdentifier:error:
_persistentContainer
set_persistentContainer:
setURL:
setFileProtectionType:
shouldLogValues
setShouldLogValues:
setPersistentContainerQueue:
setTransactionContext:
_shouldLogValues
__persistentContainer
_URL
_fileProtectionType
_persistentContainerQueue
_transactionContext
T@"NSObject<OS_dispatch_queue>",&,N,V_persistentContainerQueue
T@"NSPersistentContainer",&,N,V__persistentContainer
T@"NSURL",&,N,V_URL
T@"NSString",&,N,V_fileProtectionType
T@"NSManagedObjectContext",&,N,V_transactionContext
TB,N,V_shouldLogValues
SYDStoreBundleMap
SYDDaemon
NSXPCListenerDelegate
NSObject
SYDDaemonToClientConnectionDelegate
SYDSyncManagerDelegate
SYDKeyValue
SYDUserNotifications
SYDTCCHelper
SYDSyncManager
CKSyncEngineDataSource
CKSyncEngineDataSourcePrivate
SYDManagedStore
SYDDaemonToClientConnection
SYDDaemonProtocol
SYDPlistToCoreDataMigrator
SYDManagedDatabase
SYDManagedKeyValue
SYDCoreDataStore
@16@0:8
v16@0:8
B24@0:8@16
v28@0:8B16@20
@24@0:8@16
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSDictionary"
@32@0:8q16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@24@0:8^@16
v24@0:8@"SYDDaemonToClientConnection"16
@"SYDSyncManager"32@0:8@"SYDDaemonToClientConnection"16@"SYDStoreID"24
@"NSArray"24@0:8^@16
B32@0:8@"SYDSyncManager"16@"NSString"24
@20@0:8B16
@32@0:8q16q24
@36@0:8q16q24B32
@36@0:8q16@24B32
v20@0:8B16
@"NSXPCListener"
@"NSMutableSet"
@"NSMutableDictionary"
@24@0:8q16
v32@0:8@16@24
@"NSString"
@"NSDate"
@"NSData"
v40@0:8@16@24@32
v48@0:8{?=[8I]}16
i16@0:8
v20@0:8i16
@"NSSet"
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"CKRecordID"32
v24@0:8@"CKSyncEngine"16
v32@0:8@"CKSyncEngine"16@"NSArray"24
@"CKSyncEngineBatch"32@0:8@"CKSyncEngine"16@"NSSet"24
v40@0:8@"CKSyncEngine"16@"CKSyncEngineBatch"24@"NSError"32
@"NSArray"24@0:8@"CKSyncEngine"16
@40@0:8@16@24@32
B32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
@"NSArray"40@0:8@"CKSyncEngine"16@"NSArray"24@"NSArray"32
@40@0:8@16@24q32
B24@0:8^@16
B32@0:8@16^@24
@40@0:8@16@24^@32
B56@0:8@16@24@32B40B44^@48
B48@0:8@16@24@32^@40
B44@0:8@16@24B32^@36
B40@0:8@16@24^@32
v32@0:8@16@?24
v24@0:8@?16
v40@0:8@16@24@?32
q16@0:8
v24@0:8q16
@"CKSyncEngine"
@"CKContainer"
@"SYDCoreDataStore"
@"<SYDSyncManagerDelegate>"
@32@0:8@16^@24
@48@0:8@16@24@32^@40
@40@0:8@16q24@32
v48@0:8@16@24@32@?40
v40@0:8@16q24@?32
v48@0:8@16@"NSString"24@"SYDStoreConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@@"NSError">32
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
v28@0:8B16@"NSString"20
v24@0:8@?<v@?@"NSArray"@"NSError">16
@24@0:8@?16
v24@0:8Q16
@"NSXPCConnection"
@"<SYDDaemonToClientConnectionDelegate>"
@"NSObject<OS_dispatch_group>"
@"NSNumber"
B36@0:8@16B24^@28
B44@0:8@16B24@28^@36
v56@0:8@16@24@32@40@48
@44@0:8@16@24@32B40
@44@0:8@16@24B32^@36
B48@0:8@16@24B32B36^@40
B52@0:8@16@24B32B36B40^@44
Q32@0:8@16^@24
B28@0:8B16^@20
B28@0:8s16^@20
s24@0:8^@16
@36@0:8B16@20^@28
@44@0:8@16B24@28^@36
@52@0:8@16@24B32@36^@44
@56@0:8@16@24B32B36@40^@48
@"NSPersistentContainer"
@"NSURL"
@"NSManagedObjectContext"
softlink:r:path:/System/Library/Frameworks/UserNotifications.framework/UserNotifications
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleIdentifier</key>
<string>com.apple.syncdefaultsd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>syncdefaultsd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B5050f</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.syncdefaultsd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.mobile.keybagd.UserManager.logout</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.allowUnverifiedAccount</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.customAccounts</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.KeyValueService.EndToEndEncrypted</key>
<string>com.apple.KeyValueService.EndToEndEncrypted</string>
<key>com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms</key>
<string>com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.manager.access.delete</key>
<array>
<string>kTCCServiceUbiquity</string>
</array>
<key>com.apple.private.tcc.manager.access.modify</key>
<array>
<string>kTCCServiceUbiquity</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceAll</string>
</array>
<key>com.apple.private.ubiquity-kvstore-manage</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Preferences</string>
</array>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobile.keybagd.UserManager.xpc</string>
<string>com.apple.mobile.usermanagerd.xpc</string>
</array>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>appleaccount</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>syncdefaultsd</string>
</array>
</dict>
</plist>
@(#)PROGRAM:syncdefaultsd  PROJECT:SyncedDefaults-
kvs/main
Starting
Exiting due to SIGTERM
Not syncing store that isn't used on this device: %@
Not syncing TCC-disabled store %@
Not syncing store that is disabled via NSUserDefaults: <(%@)>
Checking cloud sync status for store <(%@)> Status is disabled.
Checking cloud sync status for store <(%@)> Status is enabled.
Enabling cloud sync for store <(%@)>
Disabling cloud sync for store <(%@)>
Found bundle identifiers for store %@: %@
No bundle identifiers for store %@
No cached bundle map, generating a new one
Generating store bundle mapping
LSBundleRecord did not map to an effectiveBundleIdentifier or contain one: %@
Checking if bundle identifier: %@ is entitled for KVS
Found %ld store identifiers for bundle identifier: %@ %@ 
No bundle identifier found using LSBundleRecord for: %@
Generated new store bundle mapping: %@
Installed apps changed. Clearing cached store bundle map. Notification=%@
Resuming server
Accepting new XPC connection %@
Created client connection %@
Removing client connection %@
Processing account changes
Processing account changes for sync manager %@
Persona doesn't exist for sync manager %@
Current logged in account identifier: %@
Not processing account changes for %@ due to error getting account identifier: %@
No database account identifier and not logged-in
Database has no account, but the user is now logged in. Setting account identifier and marking everything as needing to be uploaded.
No longer logged into an account
Account in database is the same as logged-in account
Account in database (%@) is different from the logged-in account (%@)
The account did change, will notify clients and tell the sync engine
Will tell sync engine to reload the account for sync manager %@
Not creating sync manager for store type %d because it is not supported
Getting sync manager for lookup key=%@ storeType=%@ container=%@
No existing sync manager, creating now for personaLookupKey=%@
Error ensuring KVS directory exists: %@
Error ensuring KVS directory has the right attributes: %@
Will set initial account identifier
Setting initial account identifier to %@
Created sync manager %@
Should not lazily create sync manager %@
Initializing known sync managers
Initializing known sync managers for persona %@
Checking to make sure persona still exists for sync manager %@
Persona still exists for sync manager %@
Persona no longer exists for sync manager %@
No persona unique string, moving on...
Forgetting about sync managers for account identifiers: %@
Registering for periodic analytics XPC activity
Checking in for periodic analytics XPC activity
Setting periodic analytics XPC activity criteria
Sending periodic analytics
Store state for %@: %@
Container state: %@
Error unarchiving server record: %@
No encoded data for new server record %@
Trying to set server record if newer, but no other record
No current system fields record for %@
No current modification date on system fields record for %@
Trying to set server record using record with a different ID. current=%@ other=%@
Server record is newer than current system fields record for %@
Replacing local system fields record for %@: current=%@ other=%@
Not replacing local system fields record for %@: current=%@ other=%@
Merging data from record to %{private}@
Trying to merge data from an unknown record type: %@
Trying to merge data from a record of a different type (%@) from this key value record type (%@)
No modification date in record
Record's modification date was of the wrong class (%@). Expected NSDate.
Error loading data from asset: %@
No file URL for value data asset in %@
No value data in record
Record's value data was of the wrong class (%@). Expected NSData.
No current valueModificationDate
Record value modification date is greater than local value
Replacing local value with value from record
Error decoding value data from record: %@
Expected record type %@ for record name %@, but server record had record type %@
Error generating plist value: %@
Going to use an asset for %@ because the data is %ld bytes
Somehow we got to a point where we're creating a record for %@, but we have no data. Bailing
Could not get key from record %@
Deleting file for asset (%@) in key value record %@
Failed to delete asset file: %@
Error adding notification request: %@
Requesting notification authorization
Error requesting notification authorization: %@
Requested notification authorization, granted=%d
Created change token URL for type=%@ process=%@ url=%@
Got container path from containermanager: %s
Failed to get container path from containermanager: %llu
Falling back to NSFileManager to get the Library directory
Failed to get Library directory from NSFileManager: %@
Found KVS container directory: %@
About to adopt persona %@
Error copying current persona context: %@
Error adopting persona %@: %@
Adopted persona %@ and copied context %@
Error restoring saved persona context %@: %@
Restored saved persona context %@
Current device class %@ end-to-end encryption
Checking if syncing is disabled for store %@
Caching disabled store identifiers: %@
Store %@ is disabled
Finding list of disabled store identifiers
Error getting bundle record: %@
Couldn't find bundle record for disabled bundle %@
Bundle %@ has Ubiquity disabled and is entitled to defaultStoreIdentifier=%@ additionalStoreIdentifiers=%@
Bundle %@ has Ubiquity disabled, but is not entitled to any KVS stores
Enabling TCC if necessary
No bundle, no TCC
TCC is already enabled for %@
TCC is already disabled for %@
Enabling TCC for %@
Starting to listen to TCC access change notifications
Invalidating cached disabled store identifiers
Cancelling TCC access changed notifications
Initializing store with container=%@ coreDataStore=%@
Not initializing sync engine due to error getting sync engine metadata from database: %@
Initializing sync engine
Unable to initialize engine: %@
Error fetching object for key %{private}@ in %@: %@
Fetched %@object for key %{private}@ in %@
Setting %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching existing key value: %@
Unable to get or create value for key %{private}@ in %@
Not setting identical value for key <(%{private, mask.hash}@)> in store <(%@)>
BUG IN CLIENT OF KVS: Trying to set a nil object for key <(%{private, mask.hash}@)>, but we should have early returned above
Assigned new record name (%@) for (%{private}@) in (%@)
Unable to check how many key values we had in this store. Moving on.
We had no keys in %@, so let's save the zone
Error saving value for key: %@
Not adding record to sync engine because we were told not to sync
alwaysSaveRecordZones=YES, saving record zone
Removing object for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching while removing value for key: %@
Error marking key-value as deleted: %@
Trying to remove object for a key that doesn't exist (%{private}@)
kvs/sync-store
Synchronizing stores with the cloud: %@
Sync was cancelled during fetch changes. Not saving changes
Synchronizing with cloud
Failed to load engine when saving pending changes: %@
Saving pending changes to cloud for stores [%@]
Saving all pending changes to cloud
Error modify pending records: %@
Finished modifying pending records
Will retry after error modifying pending records: %@
Failed to load engine when fetching changes: %@
Fetching pending changes from cloud for stores [%@]
Fetching all changes from cloud
Found ignorable error fetching records: %@
Error fetching records: %@
Finished fetching changes
Deleting data from cloud for %@
Error fetching all zones for deleting data from cloud: %@
Error deleting deleting data from cloud: %@
Finished deleting data from cloud
Marking all key values as needing to be uploaded for all stores
Error getting store identifiers from database while trying to mark key values as needing to be uploaded: %@
Marking all key values as needing to be uploaded for store (%@)
Error fetching record names from database when marking key values as needing to be uploaded for %@: %@
Setting new container %@ for %@
Deleting sync engine metadata for %@
Failed to fetch changes for RecordZoneID %@: %@
Missing Manatee identity fetching %@, deleting the zone now
Generating record to save for %@
Error getting sync anchor data for %@: %@
Error unarchiving server sync anchor record: %@
Error getting key value for %@ when returning record to sync engine: %@
No keyValue for recordID %@, so we're returning nothing
Returning record to save %@
Did save sync anchor record %@
Did save keyValue record %@
Error fetching key value after saving record: %@
No keyValue by record name after saving %@
Saved record %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Error saving new server system fields record: %@
Failed to save record %@: %@
No server record for conflict on sync anchor
Conflict saving key-value record %@
Not merging data from server record %@ because it has an asset
No value modification date from server after asset conflict
Error fetching key-value from database trying to resolve a conflict on a server record with an asset: %@
Taking the server system fields record from the server record even though we don't have the server's value
Error saving key value after taking server record: %@
Resolving conflict for record %@
No server record when resolving conflict saving record %@
Unknown item saving key-value record, will re-upload %@
Error fetching keyValue handling CKErrorUnknownItem for record %@: %@
Unable to save key value to database when processing CKErrorUnknownItem: %@
Couldn't find keyValue for record %@ after CKErrorUnknownItem
Zone not found saving %@. Saving zone and re-saving record
Error clearing server system fields for records in %@: %@
Failed to save %@ because zone was user-purged
Missing Manatee identity saving %@, deleting the zone now
Manatee unavailable trying to save %@. Retrying eventually
Batch failure trying to save %@. Retrying eventually
Unknown error saving record %@: %@
Deleted sync anchor record %@
Deleted keyValue record for key <(%{private, mask.hash}@)> in store <(%@)> %@
Error fetching key-value after deleting record from the cloud: %@
No key-value in database after deleting record from the cloud
Client set a value for key-value while we were deleting it from the cloud
Removing key-value from local database after deleting record from the cloud
Error removing key-value from database after it was deleted in the cloud: %@
Error deleting record %@: %@
Fetched sync anchor record %@
Will save sync anchor server record: %@
Failed to archive sync anchor record: %@
Failed to save sync anchor system fields: %@
Record was fetched %@ for key <(%{private, mask.hash}@)> in store <(%@)>
Unable to get key value from database when processing fetched record: %@
Unable to save key value to database when processing fetched record: %@
Value didn't change for key <(%{private, mask.hash}@)> in store <(%@)>
Local record name (%@) and fetched record name (%@) do not match for key (%{private}@)
Creation dates were exactly the same when de-duplicating. Comparing record names
Local record was created first, choosing local record name %@
Remote record was created earlier, choosing remote record name %@
Telling sync engine to delete duplicate record %@ and save the chosen record %@
KeyValue record was deleted for key <(%{private, mask.hash}@)> in store <(%@)> %@
Posting notification for removed key <(%{private, mask.hash}@)> in store <(%@)>
Unable to find key to post notification
Sync anchor record was deleted: %@
Saved zones: %@
Error saving record zones: %@
Deleted zone %@ and re-uploading key values
Failed to delete zone %@
Zone was purged: %@
Not going to fetch changes for store %@
Started fetching changes for %@
Finished fetching changes for %@
Posting %@
Will post store-specific Darwin notification for %ld stores
Deleting local persisted data for %@
Getting account for persona %@
Error getting all AppleAccounts: %@
Found account for persona %@: %@
Couldn't find account for persona %@
Getting account for current persona
Using primary Apple account for current persona
Error getting account for persona %@: %@
Resuming connection %@
Connection interrupted %@
Connection invalidated %@
Caching entitlement for %@ for %@
Process %@ is NOT entitled for store %@
Checking if process %d is entitled for store %@
Process %d is entitled for store %@ via %@
Handling setObject (%{private}@) for store=%@
Handling objectForKey (%{private}@) for store=%@
Handling removeObject (%{private}@) for store=%@
Handling sync for store=%@
No sync manager for store=%@
Asked to sync zero stores
Handling sync for stores with type %@: %@
No sync manager for store type %@
Handling dictionaryRepresentation for store=%@
Fetching all store identifiers.
BUG IN CLIENT OF KVS: Connection is trying to fetch all store identifiers without the correct entitlement.
BUG IN CLIENT OF KVS: Connection is trying to use an a sync status operation without the correct entitlement for store %@
Asked to register for store %@
Registering for store %@
Generating change dictionary for token %@ in store (%@) for %@
Unable to get current change token: %@
Unable to get changed keys: %@
Generated change dictionary for %ld changes
Could not find change token URL to load change token
Unable to determine if change token URL is a symbolic link: %@
KVS store has a symbolic link for its change token (%@)
Error loading change token from disk: %@
Could not find change token URL to save change token: %@
Removing change token from disk for %@
Error removing change token when setting nil change token: %@
Saving change token to disk for %@
Error creating change token directory: %@
Error saving change token to disk: %@
Received error about a bad persistent history token. Throwing it away and trying again.
No store ID for sync manager change notification %@
No sync manager for sync manager change notification %@
kvs/notify-store-change
Received notification for registered store ID %@ in %@
Error getting change token to send change dictionary: %@
Sending notification about %d changed keys for store <(%@)>: ( %@ )
Failed to notify client about changes to store %@: %@
Successfully notified client about changes to store %@
Received a notification about a changed sync manager, but the notification object is a %@
kvs/notify-account-change
Notifying client that account did change %@
Not notifying data-separated client about account change: %@
Error getting change token to notify about account change: %@
Error getting async client for posting change notification: %@
Not processing did-change-value notification for store ID=%@ changedKeys=%@
Error getting change token to send change dictionary for local change: %@
Sending notification about %d changed keys for store <(%@)>
Error obtaining async remote object proxy: %@
Error obtaining remote object proxy: %@
BUG IN CLIENT OF KVS: Tried to access unknown store %@
Incremented manual sync count to %ld for %@
Decremented manual sync count to %ld for %@
Failed to get the library directory when migrating: %@
kvs/migrate-if-necessary
Migrating all plists to Core Data if necessary
Error checking if already migrated: %@
Already migrated. High five. Not migrating again.
Not migrating in multi-user mode.
Did not already migrate. Migrating now
Error saving migration state: %@
Did save migration state
Error migrating all plists: %@
Error getting failed migration count: %@
Failed to set new failed migration count: %@
Set new failed migration count %d
Reached maximum number of migration failures. Not migrating again.
Failed to set didMigrateFromPlists after reaching max failures: %@
Set didMigrateFromPlists after reaching max failures
kvs/migrate-all-plists
We should not migrate the non-personal persona
Migrating all plists to store %@
About to migrate %lu possible plists
Error loading plist at %@: %@
Error creating new transactional store for plist: %@
Error saving transactional store when migrating plist: %@
Error migrating plist at %@: %@
Migrated plist at %@
Error deleting plist at %@: %@
Deleted plist at %@
No key-value store plist at %@, moving on.
Migrating all (%lu) plists took %.2f seconds
Migrating plist for store %@
Migrating key <(%{private, mask.hash}@)> for store <(%@)>
Found value in plist that wasn't a dictionary (%@): %@
No plist value from plist storage
No timestamp in plist storage
Error fetching key value while migrating plist: %@
Using plist value for (%{private}@) in %@: no value in Core Data
Using plist value for (%{private}@) in %@: timestamp %f is later than current timestamp %f
Not using plist value for (%{private}@) in %@
Error saving key value while migrating plist: %@
Migrating plist for %@ took %.0f milliseconds
File at URL is not a plist %@
Plist at URL does not have a 'values' dictionary in it %@
Error checking plist file size to determine if we should use a transaction: %@
Plist %@: useTransaction=%d size=%ld KB
Finding all store plists on disk
Checking for plist URLs from bundle: %@
No KVS entitlements for bundle %@
No bundle identifier for bundle %@
Using uncontainerized Library directory for %@
Finding plists for known daemons
Adding plist URLs for bundle identifier %@ with defaultStoreIdentifier=(%@) additionalStoreIdentifiers=[%@]
Error decoding plist value data: %@
Trying to access key value for nil key
Error trying to access a key value with an empty store identifier
Fetching keyValue for key <(%{private, mask.hash}@)> in store <(%@)> create=%d
Existing keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Creating new keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
No keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Fetching keyValue for record name (%@) in store <(%@)>
Existing keyValue for record name (%@) in store <(%@)>
No keyValue for record name (%@) in store <(%@)>
SYDManagedKeyValue for key <(%{private, mask.hash}@)> is missing a store identifier. Manually setting store identifier <(%@)>
Saving value for key <(%{private, mask.hash}@)> = <(%{private, mask.hash}@)> in store <(%@)> excludeFromChangeTracking=%d
Exceeded maximum number of keys in store <(%@)>
Exceeded maximum bytes for key <(%{private, mask.hash}@)> in store <(%@)>
Exceeded maximum total bytes in store <(%@)>
Deleting managed object that would go over quota
Reverting managed object that would go over quota
Removing keyValue for key <(%{private, mask.hash}@)> in store <(%@)>
Error fetching existing key value when removing a key value: %@
Deleting managed key value for key <(%{private, mask.hash}@)> in store <(%@)>
No managed key value to delete for key <(%{private, mask.hash}@)> in store <(%@)>
Removing keyValue for record name <(%@)> in store <(%@)>
Deleting managed key value for record name <(%@)> in store <(%@)>
No managed key value to delete for record name <(%@)> in store <(%@)>
Fetching sync anchor for (%@)
Error fetching sync anchor: %@
No store when fetching sync anchor data
Saving sync anchor for (%@)
Clearing sync anchor for (%@)
No store when saving sync anchor data
Deleting data for stores matching predicate (%@)
Failed to delete data for stores matching predicate (%@): %@
Deleted data for stores matching predicate (%@)
Failed to fetch record names for store <(%@)>: %@
Fetched a key value with no record name
Failed to fetch all store identifiers: %@
Clearing server records for store <(%@)>
No managed store for store identifier (%@), so there's nothing to do
Failed to clear server records for store <(%@)>: %@
Cleared server records for store <(%@)>
Error fetching count of key values with predicate %@: %@
Getting current token for (%@)
Trying to get change token with no persistent store
No current persistent history token
Failed to archive history token to NSData: %@
Getting changed keys for store <(%@)> with%@ token
Error unarchiving token from data: %@
Persistent history token expired for (%@): %@
Error fetching persistent history for (%@): %@
Received unexpected type of persistent history result (%@)
Expected a list of %@, but got %@
Found %ld persistent history transactions in store <(%@)>
Found multiple stores in a single transaction
We have some deleted keys, but no store object ID
Error fetching store properties when validating deleted keys: %@
No store identifier when validating deleted keys
Error fetching properties when fetching change history: %@
Found %ld changed keys for store <(%@)>
Clearing server records for all stores
Failed to clear key value server records for all stores: %@
Cleared key value server records for all stores
Failed to clear sync anchor server records for all stores: %@
Cleared sync anchor server records for all stores
Saving ACAccount identifier (%@)
About to set didMigrateFromPlists=%d
Error fetching managed database while setting didMigrateFromPlists: %@
Saving didMigrateFromPlists=%d
About to set failedMigrationCount=%d
Error fetching managed database while setting failedMigrationCount: %@
Saving failedMigrationCount=%d
Generating dictionary for store <(%@)>
Error fetching key value properties for dictionary representation: %@
Error decoding plist value data for key <(%{private, mask.hash}@)> in dictionary representation for store <(%@)>: %@
Nil deserialized value for key <(%{private, mask.hash}@)> when generating dictionary for store <(%@)>
No value for key <(%{private, mask.hash}@)> when generating dictionary for store <(%@)>
Saving sync engine metadata (length=%ld)
Retrieving sync engine metadata
Found multiple managed databases in the CoreData database
Error fetching managed database: %@
Creating new managed database
Found multiple stores for the same identifier: %@
Error fetching managed store: %@
Creating new managed store %@
Error fetching key value for key <(%{private, mask.hash}@)> in store <(%@)>: %@
Found multiple key values for the same key <(%{private, mask.hash}@)> in store <(%@)>
Creating new managed key value for key <(%{private, mask.hash}@)> in store <(%@)>
Found multiple key values for the same record name (%@) in store <(%@)>
Error fetching managed keyValue with predicate %@: %@
Could not create context for %@ without a persistent container
Not saving transaction context
Error saving context (%@): %@
Saved context (%@)
Loading persistent store for %@
File protection error loading persistent store: %@
Disk is full while loading persistent store: %@
Error loading persistent store: %@
Retrying to load persistent store
Failed to load persistent store on second try: %@
Successfully loaded persistent store on second try
Loaded persistent store
Unable to find SyncedDefaults framework bundle
Loading managed object model
Unable to get URL for managed object model
Not destroying persistent store due to error: %@
No persistent container to destroy
Destroying persistent store at %@
Error destroying persistent store: %@
Destroyed persistent store at %@
Error getting file size for %@: %@
Computed database size for %@: %lu
Error getting persistent container for creating a transactional store: %@
Trying to save a non-transactional store.
Saving transaction
Database was corrupt with NSFileReadCorruptFileError: %@
Database was corrupt with SQLITE_NOTADB: %@
Database was corrupt with SQLITE_CORRUPT: %@
Destroying corrupt database
v8@?0
com.apple.syncdefaultsd.daemon.wake
com.apple.kvs.bundle-store-map
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
SYDStoreBundleMap.m
storeIdentifier must not be empty
com.apple.kvs.disable-sync
com.apple.
com.apple.developer.ubiquity-kvstore-identifier
com.apple.private.ubiquity-additional-kvstore-identifiers
PersonalPersona
com.apple.kvs.daemon.queue
com.apple.kvsd
v32@?0@"CKContainerID"8@"SYDSyncManager"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
NADA
com.apple.kvs.periodic-analytics
v16@?0@"NSObject<OS_xpc_object>"8
containerIdentifier
containerEnvironment
storeIdentifier
keyValueCount
com.apple.kvs.storeState
storeCount
databaseSizeBytes
com.apple.kvs.containerState
Trying to init a keyValue without a key: %@
Trying to init a keyValue without a store identifier: %@
<%@: %p; key=%@ storeIdentifier=%@%@%@>
 recordName=
<%@: %p; storeIdentifier=%@%@%@>
Tried to set invalid value '%@' of class '%@'
Trying to get a record ID for a keyValue that has not been assigned a record name yet: %@
Trying to get a record ID for a keyValue that does not have an associated zoneID: %@
KVSRecord
EncryptedKeyValue
value
assetValue
valueData
valueDataAsset
valueModificationDate
localModificationDate
KVS: %@
v16@?0@"NSError"8
v20@?0B8@"NSError"12
com.apple.Preferences
KVSNotifications
com.apple.kvs
com.apple.kvs.user-notifications
UNMutableNotificationContent
Class getUNMutableNotificationContentClass(void)_block_invoke
SYDUserNotifications.m
Unable to find class %s
void *UserNotificationsLibrary(void)
UNNotificationRequest
Class getUNNotificationRequestClass(void)_block_invoke
UNUserNotificationCenter
Class getUNUserNotificationCenterClass(void)_block_invoke
remotevalue
timestamp
KVSOnCloudKitForAll
EncryptedAllPlatforms
Unable to open database file
Disk is full
Network error
No account
Network failure
Service unavailable
Failed to sync with CloudKit
SyncedDefaults
Unknown error
NoEncryption
EndToEndEncryption
EndToEndEncryptionAllPlatforms
Unknown
ChangeTokens
Library
Could not find ~/Library directory
SyncedPreferences
%@-%@
sqlite
com.apple.KeyValueService
com.apple.KeyValueService.EndToEndEncrypted
com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms
CKRecordZoneID *SYDStoreZoneID(NSString *__strong)
SYDUtilities.m
Must specify a store identifier to get a zone ID
CKRecordID *SYDSyncAnchorRecordID(NSString *__strong)
Must specify a store identifier to get a sync anchor record ID
syncAnchor
DeviceClass
AudioAccessory
supports
does not support
com.apple.security.cloudkeychainproxy3
com.apple.sbd3
com.apple.mail.recents
com.apple.messages.recents
v24@?0#8^B16
com.apple.kvs.tcc
com.apple.tcc.access.changed
v12@?0i8
SYDSyncManagerNotificationValuesDidChange
changedKeys
storeID
SYDSyncManager.m
Must specify a container for %@
Must specify a database URL for %@
com.apple.kvs.sync-manager.%@
<%@: %p; container=%@ coreDataStore=%@ storeType=%@
 personaUniqueString=%@
com.apple.aps.kvsd
Invalid key parameter provided
(null) 
Attempted to insert invalid value '%@' of class '%@'
Failed to set value: %@
Set %@ = %@
Trying to delete a key-value that never had a record name in a store that uses UUID record names
ManualSync
v32@?0@8@"NSError"16^B24
metadata_zone
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"NSArray"8@"NSError"16
%@%@
KeyValue:
KVSSyncAnchorRecord
Uploaded %@ = %@
com.apple.kvs.failedToSaveKey
errorCode
Failed to save record: %@
Downloaded %@ = %@
Trying to de-duplicate two identical records %@ and %@
com.apple.kvs.deduplicate
SYDRemotePreferencesSourceDidChangeExternally
%s%@
com.apple.kvs.store-did-change.
<CKRecordID recordName=%@ zone=%@>
 modifiedBy='%@'
<CKRecord type=%@ recordName=%@ zone=%@ etag=%@%@>
SYDDaemonToClientConnectionNotificationChangedValues
com.apple.kvs.daemon-to-client.%d
.callback
<%@: %p;
 registeredStoreIDs=[%@]
 clientPID=%d
com.apple.private.ubiquity-kvstore-identifier-prefix
com.apple.private.ubiquity-kvstore-manage
com.apple.private.trust-ubiquity-kvstore-identifier
com.apple.private.ubiquity-kvstore-access
com.apple.private.kvs.test
com.apple.kvs.test
Not entitled to access store %@
com.apple.private.kvs.ignore-quota
No sync manager trying to sync store %@
No sync manager trying to sync stores with type %@
com.apple.private.ubiquity-kvsutil-access
com.apple.private.kvs.allow-sync-enablement-modifications
Change token should not be a symbolic link
NSUbiquitousKeyValueStoreDidChangeExternallyNotificationUserInfo
ChangeToken
Tried to access unknown store %@
Cannot migrate the non-personal persona
v32@?0@"NSURL"8@"NSString"16^B24
com.apple.kvs.migrationFailed
errorDomainAndCode
%@_%ld
com.apple.kvs.migrationCompleted
duration
values
v32@?0@"NSString"8@"NSDictionary"16^B24
StoreIdentifier
AdditionalStoreIdentifiers
plist
com.apple.sbd
com.apple.sbd.emcs
accountsd
com.apple.accounts
com.apple.finder
com.apple.accessibility.AccessibilityUIServer
com.apple.VoiceOverTouch
com.apple.TextInput.kbd
com.apple.inputmethod.kbd
com.apple.nanoweatherprefsd
com.apple.weather
com.apple.springboard
com.apple.backboardd
com.apple.datamigrator
com.apple.CoreSuggestions
com.apple.cmfsyncagent
com.apple.accessibility.heard
com.apple.HearingAids
com.apple.wifid
com.apple.wifid.known-networks
com.apple.coretelephony
com.apple.cloudrecents.CloudRecentsAgent
com.apple.eventkit.locations
com.apple.corerecents.map-locations
com.apple.passbook.locations
com.apple.facetime.recents
com.apple.calendar.recents
com.apple.mediaaccessibilityd
com.apple.mediaaccessibility
com.apple.email.maild
com.apple.mail.threadinfo
com.apple.mail.vipsenders
com.apple.tipsd
com.apple.touristd
Misc
CloudKit
CoreData
Connection
Analytics
Accounts
Migration
no-change-tracking
TransactionStoreDidSave
SYDCoreDataStore.m
Cannot initialize %@ with a nil URL
com.apple.kvs.coredata.persistent-container
Cannot create a transactional context without a persistent container
<%@: %p; url=%@>
Trying to access a key value with an empty store identifier
Trying load a nil key in store <(%@)>
Trying to load without a store identifier
Trying to save a nil %@ in %@
Trying to save without a store identifier
Exceeded maximum number of keys (%d) in store (%@).
Exceeded maximum size (%d) for key (%@) in store (%@).
Exceeded maximum total bytes (%d) in store (%@).
saving key value
Trying to remove a value for a nil key
Trying to remove without a store identifier
removing key value
Trying to remove a value for a nil record name
removing key value for record name
Saving sync anchor
identifier == %@
store.identifier == %@
Removing sync anchor server record
store == %@
Unable to load database
 nil
author == nil
contextName == %@
self == %@
identifier
self IN %@
ACAccount identifier
did migrate from plists
failed migration count
sync engine metadata
key == %@
Fetched a managedKeyValue with an empty store identifier
recordName == %@
SYDManagedObjectModel
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
momd
-wal
-shm
saving transaction
errorDomain
sqliteError
com.apple.kvs.corruptDatabase
setType:
containerID
setAcAccountIdentifier:
errorWithDomain:code:userInfo:
unarchivedObjectOfClass:fromData:error:
personaAttributesForPersonaType:
setPlistDataValue:
initWithContainerID:options:
aa_primaryAppleAccount
persistentStores
setTransactionAuthor:
requestWithIdentifier:content:trigger:
generateAndRestorePersonaContextWithPersonaUniqueString:
zoneName
dataWithPropertyList:format:options:error:
type
newBackgroundContext
dictionaryWithObjects:forKeys:count:
localizedDescription
setPlistDataLength:
persistentStoreCoordinator
requestAuthorizationWithOptions:completionHandler:
loadPersistentStoresWithCompletionHandler:
firstObject
setIdentifier:
setTitle:
dataWithContentsOfURL:options:error:
name
dictionaryWithCapacity:
recordChangeTag
initWithStoreID:
zoneID
initWithConfiguration:
error
stringWithUTF8String:
isInserted
setFetchRequest:
setThreadIdentifier:
dataUsingEncoding:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
initWithCoder:
raise:format:
listAllPersonaWithAttributes
initWithRecordZonesToSave:recordZoneIDsToDelete:
modifyPendingChangesInZoneIDs:group:completionHandler:
stringWithFormat:
setSyncEngineMetadata:
environment
setPersonaIdentifier:
removeObserver:
dataContainerURL
fileURLWithPath:isDirectory:
allObjects
initWithCapacity:
bundleRecordForAuditToken:error:
setPersistentStoreDescriptions:
dictionary
length
modifiedByDevice
tombstone
componentsJoinedByString:
stringWithFileSystemRepresentation:length:
setSyncAnchorServerSystemFieldsRecordData:
initWithRecordType:recordID:
removeObjectsForKeys:
enumeratorWithOptions:
performBlockAndWait:
destroyPersistentStoreAtURL:withType:options:error:
daemonProtocolInterface
setFailedMigrationCount:
isEqualToString:
fileURLWithPath:
allKeys
lastPathComponent
setOption:forKey:
propertyListWithStream:options:format:error:
writeToURL:options:error:
initWithBundleIdentifier:
enumerateObjectsUsingBlock:
setStore:
stringByAppendingString:
timeIntervalSinceReferenceDate
modificationDate
compare:
initWithRecordName:zoneID:
fileURL
setExportedObject:
currentPersona
path
initWithBase64EncodedString:options:
initWithObjects:
propertyListWithData:options:format:error:
bundleIdentifier
stringByAppendingPathExtension:
setSortDescriptors:
enumerateKeysAndObjectsUsingBlock:
currentPersistentHistoryTokenFromStores:
removeObjectForKey:
setObject:forKeyedSubscript:
code
open
bundleForClass:
timeIntervalSinceNow
addRecordZonesToSave:recordZoneIDsToDelete:
deleteObject:
initWithName:managedObjectModel:
entity
setExportedInterface:
initWithAssetContent:itemTypeHint:
propertyList:isValidForFormat:
close
setShouldMigrateStoreAutomatically:
stringByAddingPercentEncodingWithAllowedCharacters:
removeObject:
synchronousRemoteObjectProxyWithErrorHandler:
addRecordIDsToSave:recordIDsToDelete:
processName
isDataSeparatedPersona
objectForKeyedSubscript:
currentHandler
valueForEntitlement:
boolValue
URLByAppendingPathComponent:
initRequiringSecureCoding:
clientProtocolInterface
setShouldInferMappingModelAutomatically:
initWithMachServiceName:
entitlements
fetchRequest
setDidMigrateFromPlists:
objectForKey:ofClass:valuesOfClass:
processIdentifier
initForReadingFromData:error:
boolForKey:
setShouldAddStoreAsynchronously:
fetchHistoryAfterToken:
UUIDString
creationDate
base64EncodedStringWithOptions:
objectForKey:ofClass:
sharedManager
removeItemAtURL:error:
setNeedsToReloadAccount:
UUID
setDatabase:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
privateCloudDatabase
initWithIdentifier:type:
userPersonaUniqueString
auditToken
setName:
countForFetchRequest:error:
UTF8String
addOperation:
predicateWithFormat:
objectAtIndexedSubscript:
storeID
removeAllObjects
userPersonaType
object
setModifyRecordZonesCompletionBlock:
URLHostAllowedCharacterSet
fetchChangesForZoneIDs:group:completionHandler:
initWithFormat:arguments:
encryptedValues
checkResourceIsReachableAndReturnError:
intersectsSet:
predicate
countByEnumeratingWithState:objects:count:
addObserver:selector:name:object:
URLForResource:withExtension:
assetContent
setMergePolicy:
hasPrefix:
defaultStore
changes
setReturnsDistinctResults:
initWithFetchRequest:
remoteObjectProxyWithErrorHandler:
fetchAllRecordZonesWithCompletionHandler:
storeDidChangeWithStoreID:changeDictionary:reply:
encodedData
postNotificationName:object:userInfo:
integerValue
numberWithUnsignedInteger:
addObjectsFromArray:
count
hasPendingModifications
changedObjectID
setWithObjects:
userInfo
initWithEntity:
defaultManager
arrayWithObjects:count:
setResultType:
inputStreamWithURL:
setMarkZonesAsUserPurged:
URLForDirectory:inDomain:appropriateForURL:create:error:
encodeSystemFieldsWithCoder:
postNotificationName:object:
numberWithInteger:
hasChanges
addObject:
setWithCapacity:
arrayWithCapacity:
defaultConfiguration
numberWithDouble:
initWithDomain:code:userInfo:
URLByDeletingLastPathComponent
setRemoteObjectInterface:
copyCurrentPersonaContextWithError:
addNotificationRequest:withCompletionHandler:
array
defaultCenter
handleFailureInMethod:object:file:lineNumber:description:
setBool:forKey:
setWithArray:
refreshObject:mergeChanges:
save:
URLByAppendingPathExtension:
initWithDatabase:dataSource:metadata:
effectiveBundleIdentifier
updatedProperties
archivedDataWithRootObject:requiringSecureCoding:error:
copy
setBody:
handleFailureInFunction:file:lineNumber:description:
changeType
domain
null
initWithData:encoding:
recordType
setPropertiesToUpdate:
executeRequest:error:
unsignedLongValue
accountsWithAccountTypeIdentifiers:error:
initWithZoneName:ownerName:
initWithContext:
result
appendString:
setPropertiesToFetch:
executeFetchRequest:error:
unsignedIntegerValue
setIsCloudKitSupportOperation:
standardUserDefaults
dateWithTimeIntervalSinceReferenceDate:
initWithZoneID:
containsObject:
getResourceValue:forKey:error:
personaIdentifier
URLByAppendingPathComponent:isDirectory:
initWithContentsOfURL:
appendFormat:
setAttributes:ofItemAtPath:error:
execute:
setPriority:
setInvalidationHandler:
sortedArrayUsingSelector:
restorePersonaWithSavedPersonaContext:
unionSet:
containerIdentifier
andPredicateWithSubpredicates:
setApsMachServiceName:
date
sortDescriptorWithKey:ascending:
setUseClearAssetEncryption:
personaAttributesForPersonaUniqueString:
setPredicate:
setInterruptionHandler:
initWithContainerIdentifier:environment:
init
installedAppsDidChange:
dealloc
sharedInstance
shouldSyncStoreWithIdentifier:
isCloudSyncUserDefaultEnabledForStoreIdentifier:
setCloudSyncUserDefaultEnabled:storeIdentifier:
isStoreIdentifierUsedOnThisDevice:
bundleIdentifiersForStoreIdentifier:
generateStoreBundleMapIfNecessary
storeIdentifiersForInstalledBundles
generateStoreBundleMap
queue
setQueue:
cachedStoreBundleMap
setCachedStoreBundleMap:
.cxx_destruct
_queue
_cachedStoreBundleMap
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSDictionary",&,N,V_cachedStoreBundleMap
caseInsensitiveCompare:
containerForStoreType:containerID:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
connectionDidInvalidate:
connection:syncManagerForStoreID:
processAccountChanges
allStoreIdentifiersWithError:
syncManager:shouldSyncStoreWithIdentifier:
initWithInitialStoreCreation:
start
allSyncManagers
_queue_allSyncManagers
accountStore
_processAccountChanges
syncManagerForStoreType:environment:
syncManagerForStoreType:environment:createIfNecessary:
syncManagerForStoreType:containerID:
syncManagerForStoreType:containerID:createIfNecessary:
initializeKnownSyncManagers
removeInvalidSyncManagers
registerForPeriodAnalyticsXPCActivity
sendAnalyticsEventForCurrentState
xpcListener
setXpcListener:
isInitializingSyncManagers
setInitializingSyncManagers:
clientConnections
setClientConnections:
syncManagersByPersona
setSyncManagersByPersona:
_initializingSyncManagers
_xpcListener
_clientConnections
_syncManagersByPersona
T@"NSXPCListener",&,N,V_xpcListener
initializingSyncManagers
TB,N,GisInitializingSyncManagers,V_initializingSyncManagers
T@"NSMutableSet",&,N,V_clientConnections
T@"NSMutableDictionary",&,N,V_syncManagersByPersona
T@"ACAccountStore",R,N
keyFromKeyValueRecord:
keyFromUnencryptedKeyValueRecordName:
recordNameForUnencryptedKey:
deleteFilesForAssetsInKeyValueRecord:
keyValueRecordHasAssetWithoutFile:
recordFieldKeyForValueModificationDateInStoreType:
initWithKey:storeIdentifier:
redactedDescription
setValue:
setValue:withModificationDate:
markForDeletion
serverSystemFieldsRecord
setServerSystemFieldsRecord:
recordID
setServerSystemFieldsRecordIfNewer:
mergeDataFromRecord:
recordRepresentationForStoreType:
setKey:
storeIdentifier
setStoreIdentifier:
value
valueModificationDate
setValueModificationDate:
serverSystemFieldsRecordData
setServerSystemFieldsRecordData:
recordName
setRecordName:
isNewKeyValue
setIsNewKeyValue:
_isNewKeyValue
_key
_storeIdentifier
_value
_valueModificationDate
_serverSystemFieldsRecordData
_recordName
T@"NSString",&,N,V_key
T@"NSString",&,N,V_storeIdentifier
T@,&,N,V_value
T@"NSDate",&,N,V_valueModificationDate
T@"NSData",&,N,V_serverSystemFieldsRecordData
T@"NSString",&,N,V_recordName
T@"CKRecord",C,N
T@"CKRecordID",R,N
TB,N,V_isNewKeyValue
showUserNotificationIfEnabledForStoreIdentifier:format:
showNotificationWithTitle:body:threadIdentifier:
requestAuthorizationIfNecessary
userNotificationCenter
shouldShowNotifications
sharedHelper
isUbiquityDisabledForStoreIdentifier:
findDisabledStoreIdentifiers
enableUbiquityIfNecessaryForAuditToken:
startListeningToTCCAccessChangedNotifications
stopListeningToTCCAccessChangedNotifications
notifyToken
setNotifyToken:
cachedDisabledStoreIdentifiers
setCachedDisabledStoreIdentifiers:
_notifyToken
_cachedDisabledStoreIdentifiers
Ti,N,V_notifyToken
T@"NSSet",&,N,V_cachedDisabledStoreIdentifiers
shouldIgnoreFetchError:
syncEngine:recordToSaveForRecordID:
syncEngine:didSaveRecord:
syncEngine:failedToSaveRecord:error:
syncEngine:didDeleteRecordWithID:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:didFetchRecord:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:didUpdateMetadata:
syncEngine:didSaveRecordZone:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:failedToFetchChangesForRecordZoneID:error:
syncEngine:failedToSaveRecordZone:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
syncEngine:zoneWithIDWasDeletedDueToUserEncryptedDataReset:
syncEngine:zoneWithIDWasPurged:
syncEngine:accountChangedFromUserRecordID:toUserRecordID:
syncEngineDidBeginFetchingChanges:
syncEngineWillBeginFetchingChanges:
syncEngineDidEndFetchingChanges:
syncEngine:willBeginFetchingChangesForZoneIDs:
syncEngine:didEndFetchingChangesForZoneID:
syncEngineWillBeginModifyingPendingChanges:
syncEngineDidEndModifyingPendingChanges:
syncEngine:nextBatchOfRecordsToModifyForZoneIDs:
syncEngine:didCompleteModifyRecordsBatch:error:
recordZonesToSaveForSyncEngine:
recordZoneIDsToDeleteForSyncEngine:
syncEngine:shouldFetchChangesForZoneID:
syncEngine:shouldFetchAssetContentsForZoneID:
syncEngine:relatedApplicationBundleIdentifiersForZoneIDs:recordIDs:
initWithContainer:coreDataStore:storeType:
initializeSyncEngineWithError:
engine
engineWithError:
validateKey:error:
useUUIDRecordNames
useSyncAnchor
objectForKey:inStoreWithIdentifier:error:
setObject:forKey:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:error:
setObject:forKey:inStoreWithIdentifier:error:
removeObjectForKey:inStoreWithIdentifier:excludeFromChangeTracking:error:
removeObjectForKey:inStoreWithIdentifier:error:
synchronizeStoreWithIdentifier:completionHandler:
synchronizeStoresWithIdentifiers:completionHandler:
synchronizeAllStoresWithCompletionHandler:
savePendingChangesToCloudForAllStoresWithCompletionHandler:
savePendingChangesToCloudForStoreIdentifiers:group:completionHandler:
fetchChangesFromCloudForAllStoresWithCompletionHandler:
fetchChangesFromCloudForStoreIdentifiers:group:completionHandler:
shouldRetryAfterModifyError:
deleteDataFromCloudWithCompletionHandler:
recordIDForKey:inStoreWithIdentifier:
setAutomaticSyncingEnabled:
isAutomaticSyncingEnabled
hasPendingChangesToUpload
newRecordNameForKey:
markAllKeyValuesAsNeedingToBeUploaded
markAllKeyValuesAsNeedingToBeUploadedForStoreWithIdentifier:
addKeyValueRecordIDsToSave:recordIDsToDelete:
addSyncAnchorRecordIDToSaveIfNecessaryForStoreIdentifier:
resetSyncEngine
resetSyncEngineWithContainer:
_queue_resetSyncEngine
_markZoneForDeletionOnManateeFailureForRecordZoneID:
didSaveKeyValueRecord:
failedToSaveKeyValueRecord:error:
saveSyncAnchorSystemFieldsRecord:
didFetchKeyValueRecord:
deduplicateRecordForKeyValue:withNewlyFetchedRecord:
syncEngine:didSaveRecordZones:
deleteDataFromDisk
container
setContainer:
coreDataStore
setCoreDataStore:
storeType
setStoreType:
personaUniqueString
setPersonaUniqueString:
storeIdentifiersWithChangedValuesDuringFetchChanges
setStoreIdentifiersWithChangedValuesDuringFetchChanges:
alwaysSaveRecordZones
setAlwaysSaveRecordZones:
delegate
setDelegate:
_alwaysSaveRecordZones
_engine
_container
_coreDataStore
_storeType
_personaUniqueString
_storeIdentifiersWithChangedValuesDuringFetchChanges
_delegate
T@"SYDCoreDataStore",&,N,V_coreDataStore
Tq,N,V_storeType
T@"CKContainer",&,N,V_container
T@"NSMutableSet",&,N,V_storeIdentifiersWithChangedValuesDuringFetchChanges
T@"NSString",C,N,V_personaUniqueString
TB,N,V_alwaysSaveRecordZones
automaticSyncingEnabled
TB,N,GisAutomaticSyncingEnabled
T@"<SYDSyncManagerDelegate>",W,N,V_delegate
T@"CKSyncEngine",R,N,V_engine
TB,R,N
identifier
T@"NSString",&,D,N
totalDataLength
Tq,D,N
database
T@"SYDManagedDatabase",&,D,N
keyValues
T@"NSSet",&,D,N
syncAnchorServerSystemFieldsRecordData
T@"NSData",&,D,N
syd_accountForPersonaIdentifier:error:
syd_accountForCurrentPersonaWithError:
syd_accountIdentifierForCurrentPersona
syd_shortDescription
syncManagerDidChangeNotification:
daemonToClientConnectionDidChangeValues:
valueForEntitlement:xpcConnection:storeConfiguration:
isXPCConnection:entitledForStoreConfiguration:
errorNotEntitledForStoreConfiguration:
changedKeysForStoreIdentifier:sinceChangeTokenIfValid:inCoreDataStore:error:
changeDictionaryWithChangedKeys:reason:changeToken:
errorForUnknownStore:
setObject:forKey:inStoreWithConfiguration:reply:
objectForKey:inStoreWithConfiguration:reply:
removeObjectForKey:inStoreWithConfiguration:reply:
dictionaryRepresentationForStoreWithConfiguration:reply:
registerForChangeNotificationsForStoreWithConfiguration:reply:
changeDictionarySinceChangeToken:inStoreWithConfiguration:reply:
changeTokenForStoreWithConfiguration:reply:
saveChangeToken:forStoreWithConfiguration:reply:
synchronizeStoreWithConfiguration:completionHandler:
synchronizeStoresWithIdentifiers:type:completionHandler:
processAccountChangesWithCompletionHandler:
isCloudSyncUserDefaultEnabledForStoreIdentifier:completionHandler:
allStoreIdentifiersWithCompletionHandler:
initWithXPCConnection:delegate:
resume
isEntitledForStoreConfiguration:
shouldEnforceQuotaForStoreConfiguration:
isCloudSyncEnablementEntitledForStoreIdentifier:
notifyAccountDidChangeWithCompletionHandler:
asyncClientWithErrorHandler:
client
changeTokenURLForStoreConfiguration:xpcConnection:
isKnownStore:
incrementManualSyncCount
decrementManualSyncCount
isPerformingManualSync
xpcConnection
setXpcConnection:
callbackQueue
setCallbackQueue:
changeNotificationGroup
setChangeNotificationGroup:
registeredStoreIDs
setRegisteredStoreIDs:
entitledStoreIDs
setEntitledStoreIDs:
notEntitledStoreIDs
setNotEntitledStoreIDs:
ignoreQuotaEntitlementValue
setIgnoreQuotaEntitlementValue:
manualSyncCount
setManualSyncCount:
_xpcConnection
_callbackQueue
_changeNotificationGroup
_registeredStoreIDs
_entitledStoreIDs
_notEntitledStoreIDs
_ignoreQuotaEntitlementValue
_manualSyncCount
T@"NSXPCConnection",&,N,V_xpcConnection
T@"<SYDDaemonToClientConnectionDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSObject<OS_dispatch_group>",&,N,V_changeNotificationGroup
T@"NSMutableSet",&,N,V_registeredStoreIDs
T@"NSMutableSet",&,N,V_entitledStoreIDs
T@"NSMutableSet",&,N,V_notEntitledStoreIDs
T@"NSNumber",&,N,V_ignoreQuotaEntitlementValue
TQ,N,V_manualSyncCount
migrateAllPlistsIfNecessaryToCoreDataStore:deleteMigratedPlists:error:
migrateAllPlistsIfNecessaryToCoreDataStore:deleteMigratedPlists:libraryDirectoryURL:error:
migrateAllPlistsToCoreDataStore:deleteMigratedPlists:libraryDirectoryURL:error:
migratePlist:forStoreWithIdentifier:toCoreDataStore:error:
keyValueStorePlistFromURL:error:
shouldStopMigrationAfterError:
shouldIncrementFailureCountForError:
shouldUseTransactionForPlistAtURL:
isSharedIPad
allPossibleStorePlistURLsWithLibraryDirectoryURL:
addPlistURLsAndStoreIdentifiersForBundleRecord:toDictionary:uncontainerizedSyncedPreferencesDirectoryURL:
addPlistURLsAndStoreIdentifiersForKnownDaemonsToDictionary:uncontainerizedSyncedPreferencesDirectoryURL:
addPlistURLsForBundleIdentifier:defaultStoreIdentifier:additionalStoreIdentifiers:toDictionary:syncedPreferencesDirectoryURL:
knownDaemons
acAccountIdentifier
syncEngineMetadata
didMigrateFromPlists
TB,D,N
failedMigrationCount
Ts,D,N
stores
plistDataValue
plistDataLength
T@"NSDate",&,D,N
store
T@"SYDManagedStore",&,D,N
T@,C,N
transactionStoreDidSave:
managedObjectModel
isCorruptionError:
isInvalidTokenError:
initWithURL:
initWithURL:fileProtectionType:
initWithURL:fileProtectionType:persistentContainer:isTransactional:
keyValueForKey:inStoreWithIdentifier:createIfNecessary:error:
keyValueForRecordName:inStoreWithIdentifier:error:
keyValueFromManagedKeyValue:inStoreWithIdentifier:
saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:error:
saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:error:
_saveKeyValue:inStoreWithIdentifier:excludeFromChangeTracking:enforceQuota:forceCreateNewRow:error:
saveKeyValue:inStoreWithIdentifier:error:
removeKeyValueForKey:inStoreWithIdentifier:excludeFromChangeTracking:error:
removeKeyValueForKey:inStoreWithIdentifier:error:
removeKeyValueForRecordName:inStoreWithIdentifier:error:
serverSyncAnchorSystemFieldsRecordDataForStoreWithIdentifier:error:
saveServerSyncAnchorSystemFieldsRecordData:forStoreWithIdentifier:error:
deleteDataForStoreWithIdentifier:error:
deleteDataForAllStoresWithError:
deleteDataForStoresMatchingPredicate:context:error:
allRecordNamesInStoreWithIdentifier:error:
clearServerSystemFieldsRecordsForAllKeyValuesInStoreWithIdentifier:error:
numberOfKeyValuesInStoreWithIdentifier:error:
currentChangeTokenForStoreIdentifier:error:
changedKeysForStoreIdentifier:sinceChangeToken:error:
clearServerSystemFieldsRecordsForAllStoresWithError:
setACAccountIdentifier:error:
acAccountIdentifierWithError:
setDidMigrateFromPlists:error:
didMigrateFromPlistsWithError:
setFailedMigrationCount:error:
failedMigrationCountWithError:
dictionaryRepresentationForStoreWithIdentifier:error:
saveSyncEngineMetadata:error:
syncEngineMetadataWithError:
managedDatabaseCreateIfNecessary:inContext:error:
managedStoreWithIdentifier:createIfNecessary:inContext:error:
managedKeyValueWithKey:inStoreWithIdentifier:createIfNecessary:inContext:error:
managedKeyValueWithKey:inStoreWithIdentifier:createIfNecessary:forceCreateNewRow:inContext:error:
managedKeyValueWithRecordName:inStoreWithIdentifier:inContext:error:
managedKeyValuesMatchingPredicate:inContext:error:
contextForStoreIdentifier:error:
_contextForStoreIdentifier:persistentContainer:
saveContext:reason:includingTransactionContext:error:
persistentContainerWithError:
destroyPersistentStore
_queue_destroyPersistentStoreInPersistentStoreCoordinator:
fileSizeBytes
transactionalStoreWithError:
saveTransaction:
handleCorruptionIfNecessaryFromError:inPersistentStoreCoordinator:
_queue_handleCorruptionIfNecessaryFromError:inPersistentStoreCoordinator:
_persistentContainer
set_persistentContainer:
setURL:
fileProtectionType
setFileProtectionType:
shouldLogValues
setShouldLogValues:
persistentContainerQueue
setPersistentContainerQueue:
transactionContext
setTransactionContext:
_shouldLogValues
__persistentContainer
_URL
_fileProtectionType
_persistentContainerQueue
_transactionContext
T@"NSObject<OS_dispatch_queue>",&,N,V_persistentContainerQueue
T@"NSPersistentContainer",&,N,V__persistentContainer
T@"NSURL",&,N,V_URL
T@"NSString",&,N,V_fileProtectionType
T@"NSManagedObjectContext",&,N,V_transactionContext
TB,N,V_shouldLogValues
SYDStoreBundleMap
SYDDaemon
NSXPCListenerDelegate
NSObject
SYDDaemonToClientConnectionDelegate
SYDSyncManagerDelegate
SYDKeyValue
SYDUserNotifications
SYDTCCHelper
SYDSyncManager
CKSyncEngineDataSource
CKSyncEngineDataSourcePrivate
SYDManagedStore
SYDDaemonToClientConnection
SYDDaemonProtocol
SYDPlistToCoreDataMigrator
SYDManagedDatabase
SYDManagedKeyValue
SYDCoreDataStore
@16@0:8
v16@0:8
B24@0:8@16
v28@0:8B16@20
@24@0:8@16
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSDictionary"
@32@0:8q16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@24@0:8^@16
v24@0:8@"SYDDaemonToClientConnection"16
@"SYDSyncManager"32@0:8@"SYDDaemonToClientConnection"16@"SYDStoreID"24
@"NSArray"24@0:8^@16
B32@0:8@"SYDSyncManager"16@"NSString"24
@20@0:8B16
@32@0:8q16q24
@36@0:8q16q24B32
@36@0:8q16@24B32
v20@0:8B16
@"NSXPCListener"
@"NSMutableSet"
@"NSMutableDictionary"
@24@0:8q16
v32@0:8@16@24
@"NSString"
@"NSDate"
@"NSData"
v40@0:8@16@24@32
v48@0:8{?=[8I]}16
i16@0:8
v20@0:8i16
@"NSSet"
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"CKRecordID"32
v24@0:8@"CKSyncEngine"16
v32@0:8@"CKSyncEngine"16@"NSArray"24
@"CKSyncEngineBatch"32@0:8@"CKSyncEngine"16@"NSSet"24
v40@0:8@"CKSyncEngine"16@"CKSyncEngineBatch"24@"NSError"32
@"NSArray"24@0:8@"CKSyncEngine"16
@40@0:8@16@24@32
B32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
@"NSArray"40@0:8@"CKSyncEngine"16@"NSArray"24@"NSArray"32
@40@0:8@16@24q32
B24@0:8^@16
B32@0:8@16^@24
@40@0:8@16@24^@32
B56@0:8@16@24@32B40B44^@48
B48@0:8@16@24@32^@40
B44@0:8@16@24B32^@36
B40@0:8@16@24^@32
v32@0:8@16@?24
v24@0:8@?16
v40@0:8@16@24@?32
q16@0:8
v24@0:8q16
@"CKSyncEngine"
@"CKContainer"
@"SYDCoreDataStore"
@"<SYDSyncManagerDelegate>"
@32@0:8@16^@24
@48@0:8@16@24@32^@40
@40@0:8@16q24@32
v48@0:8@16@24@32@?40
v40@0:8@16q24@?32
v48@0:8@16@"NSString"24@"SYDStoreConfiguration"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@@"NSError">32
v40@0:8@"NSString"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"SYDStoreConfiguration"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"NSData"16@"SYDStoreConfiguration"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16q24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
v28@0:8B16@"NSString"20
v24@0:8@?<v@?@"NSArray"@"NSError">16
@24@0:8@?16
v24@0:8Q16
@"NSXPCConnection"
@"<SYDDaemonToClientConnectionDelegate>"
@"NSObject<OS_dispatch_group>"
@"NSNumber"
B36@0:8@16B24^@28
B44@0:8@16B24@28^@36
v56@0:8@16@24@32@40@48
@44@0:8@16@24@32B40
@44@0:8@16@24B32^@36
B48@0:8@16@24B32B36^@40
B52@0:8@16@24B32B36B40^@44
Q32@0:8@16^@24
B28@0:8B16^@20
B28@0:8s16^@20
s24@0:8^@16
@36@0:8B16@20^@28
@44@0:8@16B24@28^@36
@52@0:8@16@24B32@36^@44
@56@0:8@16@24B32B36@40^@48
@"NSPersistentContainer"
@"NSURL"
@"NSManagedObjectContext"
softlink:r:path:/System/Library/Frameworks/UserNotifications.framework/UserNotifications
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleIdentifier</key>
<string>com.apple.syncdefaultsd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>syncdefaultsd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B5050f</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.syncdefaultsd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.mobile.keybagd.UserManager.logout</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.sync</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.cloudkit.allowUnverifiedAccount</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.customAccounts</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.KeyValueService.EndToEndEncrypted</key>
<string>com.apple.KeyValueService.EndToEndEncrypted</string>
<key>com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms</key>
<string>com.apple.KeyValueService.EndToEndEncrypted.AllPlatforms</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.manager.access.delete</key>
<array>
<string>kTCCServiceUbiquity</string>
</array>
<key>com.apple.private.tcc.manager.access.modify</key>
<array>
<string>kTCCServiceUbiquity</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceAll</string>
</array>
<key>com.apple.private.ubiquity-kvstore-manage</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Preferences</string>
</array>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobile.keybagd.UserManager.xpc</string>
<string>com.apple.mobile.usermanagerd.xpc</string>
</array>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>appleaccount</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>syncdefaultsd</string>
</array>
</dict>
</plist>
