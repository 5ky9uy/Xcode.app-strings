X-Apple-ABUID
X-Apple-Radius
X-APPLE-ABUID
X-APPLE-RADIUS
X-APPLE-REFERENCEFRAME
v8@?0
_CalDatabaseChangedNotification
_CalDatabaseStoreSyncStatusChangedNotification
kCalDatabaseChangedExternallyNotification
CalSyncClientBeginningMultiSave
CalSyncClientFinishedMultiSave
CalDBSpotLightError
LastUnfinishedSpotlightReindex
LastABCReport
/Library/Calendar/
CalLastCalendarChanges
CalLastEventRecurrenceChanges
CalLastEventAlarmChanges
CalLastCategoryChanges
_CalDatabaseAddChangeset
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalDatabase.m
changedRecordIds != NULL
Bad result %i for query
Couldn't get statement for SQL "%@"
Error: %s
SELECT ROWID FROM Store WHERE disabled = 1;
spotlightQ
Couldn't open a connection to the calendar database.  Error: [%d]
Couldn't create calendar database at default path.
com.apple.ManagedConfiguration.profileListChanged
NULL database given to [%s]
CalDatabaseFlushStatementCache
Spotlight
IndexFailure
com.apple.calendar.database.resetSpotlightQueue
com.apple.mobilecal
DefaultCalendarUID
DefaultTaskCalendarUID
PrefMigrationSeed
Cleaning up plist...
DefaultCalendarDatabaseID
DefaultCalendarStoreUID
DefaultCalendarName
Calendar.sqlitedb
Could not find the size of the database in bytes.  Received a negative size: [%lld]
Could not find the true size of the database in bytes.  Received a size greater than [%llu]: [%lld]
 WHERE %@
CSSearchableIndex
events
CSSearchableItem
v16@?0@"NSError"8
%@.%f
CSSearchableItemAttributeSet
com.apple.calendar.spotlight.identifier
com.apple.calendar.ics
com.apple.ical.ics
CSPerson
CNContactEmailAddressesKey
CNContactPhoneNumbersKey
com.apple.reminders.ics
com.apple.reminders
%@.%@
com.apple.%@.%@.%@
mobilecal
reminders
, %d
CalDatabase
:memory:
com.apple.calendar.migrator
DROP TABLE Task;
DROP TABLE TaskChanges;
... Calendar database migration complete (%g s)
SELECT ROWID, flags, external_id from Calendar WHERE store_id IN (SELECT ROWID from Store where Type = %d)
UPDATE Calendar SET external_id = ? WHERE rowid = ?
UPDATE CalendarItem SET external_id = ? WHERE rowid = ?
UPDATE EventAction SET external_id = ? WHERE rowid = ?
UPDATE Notification SET external_id = ?, host_url = ? WHERE rowid = ?
SELECT rowid, calendar_id, external_id from CalendarItem where calendar_id = %d
SELECT rowid, event_id, external_id from EventAction where event_id = %d
SELECT rowid, calendar_id, external_id, host_url from Notification where calendar_id = %d
SELECT
read Calendar data
INSERT
UPDATE
modified Calendar data
DELETE
deleted Calendar data
com.apple.calendar
Enabling
Disabling
Removing orphan %@
SELECT ROWID, orig_item_id, orig_date FROM CalendarItem WHERE orig_date IN (%@)
An attempt to add a detached calendar item with an original item ID of [%d] and an original date of [%@] was made, but this detached item already exists in the database.  Removing existing detached item with row ID: [%d]
Unexpected entity type: %i row ID: %i
function
postchangenote
timestamp
changes
onlysyncstatuschanged
notificationwasposted
com.apple.calaccessd.xpc
v16@?0@"NSObject<OS_xpc_object>"8
Error launching application with id [%@]: Error code %d
pragma page_count;
pragma freelist_count;
pragma incremental_vacuum(%d);
/System/Library/PrivateFrameworks/ReminderMigration.framework/ReminderMigration
CalDefaultReminderKitProvider
Unable to find class %s
CalDefaultReminderMigrationDefaultsProvider
CalCalendarDatabaseReminderMigrator
SQLCorruption
com.apple.calendardatabase.sqlite_error_code
UNKNOWN
SQLITE_OK
SQLITE_ERROR
SQLITE_INTERNAL
SQLITE_PERM
SQLITE_ABORT
SQLITE_BUSY
SQLITE_LOCKED
SQLITE_NOMEM
SQLITE_READONLY
SQLITE_INTERRUPT
SQLITE_IOERR
SQLITE_CORRUPT
SQLITE_NOTFOUND
SQLITE_FULL
SQLITE_CANTOPEN
SQLITE_PROTOCOL
SQLITE_EMPTY
SQLITE_SCHEMA
SQLITE_TOOBIG
SQLITE_CONSTRAINT
SQLITE_MISMATCH
SQLITE_MISUSE
SQLITE_NOLFS
SQLITE_AUTH
SQLITE_FORMAT
SQLITE_RANGE
SQLITE_NOTADB
SQLITE_NOTICE
SQLITE_WARNING
SQLITE_ROW
SQLITE_DONE
kCalScheduledTaskCacheChangedNotification
CREATE TABLE ScheduledTaskCache (day REAL, date_for_sorting REAL, completed INTEGER, task_id INTEGER, count INTEGER, PRIMARY KEY (day, task_id));
CREATE TRIGGER update_task_cache_count_after_insert AFTER INSERT ON ScheduledTaskCache
BEGIN
    REPLACE INTO ScheduledTaskCache VALUES (NEW.day, NULL, NULL, -2, 1 + IFNULL((SELECT count FROM ScheduledTaskCache WHERE day = NEW.day AND task_id = -2), 0));
END;
CREATE TRIGGER update_task_cache_count_after_update AFTER UPDATE OF day ON ScheduledTaskCache
BEGIN
    UPDATE ScheduledTaskCache SET count = count - 1 WHERE day = OLD.day AND task_id = -2;
    REPLACE INTO ScheduledTaskCache VALUES (NEW.day, NULL, NULL, -2, IFNULL((SELECT count FROM ScheduledTaskCache WHERE day = NEW.day AND task_id = -2), 0));
    DELETE FROM ScheduledTaskCache WHERE day = OLD.day AND count = 0;
END;
CREATE TRIGGER update_task_cache_days_after_delete AFTER DELETE ON ScheduledTaskCache
BEGIN
    UPDATE ScheduledTaskCache SET count = count - 1 WHERE day = OLD.day AND task_id = -2;
    DELETE FROM ScheduledTaskCache WHERE day = OLD.day AND count = 0;
END;
CREATE INDEX ScheduledTaskCacheDayTaskId on ScheduledTaskCache(day);
CREATE INDEX ScheduledTaskCacheTaskId on ScheduledTaskCache(task_id);
SELECT day, count FROM ScheduledTaskCache WHERE task_id = -2 ORDER BY day
SELECT task_id FROM ScheduledTaskCache WHERE day = ? AND task_id != -2 ORDER BY day ASC, completed DESC, date_for_sorting ASC
SELECT DISTINCT task_id FROM ScheduledTaskCache WHERE day >= ? AND day <= ? AND task_id != -2
previousTimeZone
T@"NSTimeZone",&,N,V_previousTimeZone
nextTimeZone
T@"NSTimeZone",&,N,V_nextTimeZone
dict
T@"NSMutableDictionary",&,N,V_dict
ForceRebuildScheduledTaskCache
EventKitSTC: Unable to start transaction (error %d). Aborting rebuild.
TaskCacheTimeZone
25534103: Beginning CalScheduledTaskCacheTrimAndExtendAndUpdateOverdue
EventKitSTC: Unable to start transaction (error %d). Aborting trim/extend.
TaskCacheLastSavedDay
25534103: ScheduledTaskCache last saved %@
25534103: today is %@, comparisonResult is %ld
DELETE FROM ScheduledTaskCache WHERE task_id = ?;
CalScheduledTaskCache
count
EventKitSTC: Unable to start transaction (error %d). Aborting time zone update.
SELECT day, date_for_sorting, task_id FROM ScheduledTaskCache WHERE task_id != -2
UPDATE ScheduledTaskCache SET day = ?, date_for_sorting = ? WHERE task_id = ?;
dateForSorting
taskId
DELETE FROM ScheduledTaskCache;
25534103: Inserting item due at %@ at %@
EventKitSTC: *** ERROR *** No transaction is in effect! This may end poorly.
INSERT INTO ScheduledTaskCache (day, date_for_sorting, completed, task_id, count) VALUES (?, ?, ?, ?, 1);
DELETE FROM ScheduledTaskCache WHERE day < ?
25534103: Updating overdue with today %f
UPDATE ScheduledTaskCache SET day = ?, date_for_sorting = ? WHERE day < ? AND completed = 0
25534103: Updating last saved to %@
Recurrence
UPDATE Recurrence SET end_date = NULL WHERE end_date = 0
UPDATE Recurrence SET cached_end_date = NULL WHERE cached_end_date = 0
DELETE FROM Recurrence WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
B16@?0^v8
UUID = '%@'
 WHERE external_id = ?
UPDATE 
 SET 
 = NULL
 WHERE Recurrence.ROWID in (select Recurrence.ROWID FROM Recurrence JOIN CalendarItem ON owner_id = CalendarItem.ROWID AND calendar_id = ?);
UPDATE Recurrence SET external_id = NULL, external_mod_tag = NULL, external_id_tag = NULL, external_rep = NULL WHERE owner_id IN (SELECT CalendarItem.ROWID FROM CalendarItem JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = %d);
frequency
interval
week_start
cached_end_date
cached_end_date_tz
end_date
specifier
specifier_parsed
by_day_days
by_month_months
by_month_day_days
by_week_weeks
by_year_day_days
by_set_pos
by_month
owner_id
external_id
external_mod_tag
external_id_tag
external_rep
store_id
event_id_tomb
calendar_id
owner
end_date_tomb
UUID
record_id
common_entity_functionality_handler
RecurrenceEventIdIndex
event_id
RecurrenceEndCountIndex
end_date, count
RecurrenceExternalId
RecurrenceOwnerIdIndex
RecurrenceOwnerTypeIndex
owner_type
RecurrenceUUID
record
type
sequence_number
endDate
cachedEndDate
weekStart
SELECT Recurrence.* FROM Recurrence JOIN CalendarItem ON owner_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID AND store_id = ?;
Recurrence without owner
,%s%d%s
%s%d%s
_float
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
calendar_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
Type
ChangeID
ExternalID
UniqueIdentifier
SignificantAttributes
OldCalendarID
OldExternalID
OwningEventID
EndDate
ExternalModTag
CalendarID
SequenceNumber
WHERE UUID = ?
v16@?0^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}8
CalDatabaseCopyCalendarItemsWithCalendarFilter
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalCalendarItem.m
entityType == CalEventEntity || entityType == CalTaskEntity
WHERE entity_type = ?
 AND %@
NSArray<NSString *> *CalDatabaseCopyCalendarItemUUIDs(CalDatabaseRef, CalEntityType)
<Unknown Function>
<Unknown File>
Invalid parameter not satisfying: %@
entityType == CalEventEntity || entityType == CalTaskEntity || entityType == CalUndefinedEntity
SELECT UUID FROM CalendarItem
 WHERE entity_type = ?
CalDatabaseCopyCalendarItemsWithStoreID
JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ? AND entity_type = ?
WHERE calendar_id = ?
WHERE calendar_id = ? AND entity_type = ?
SELECT ROWID FROM CalendarItem WHERE calendar_id = ? LIMIT 1
SELECT ROWID FROM CalendarItem WHERE entity_type = ? AND calendar_id = ? LIMIT 1
WHERE 1=1
 AND entity_type = ?
JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?
 WHERE
 entity_type = ? AND
 %@ = ?
 AND calendar_id = ?
 AND calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = ?)
 LIMIT 1
unique_identifier
 WHERE unique_identifier = ?;
title
notes
startDate
timeZone
allDay
uniqueID
sequence
invitationStatus
hasRecurrences
hasAttendees
priority
dueDate
dueDateTimeZone
dueDateAllDay
completionDate
creationDate
travelTime
travelAdvisoryBehavior
action
appLink
categories
status
availability
privacyLevel
lastModifiedDate
originalStartDate
birthdayID
hidden
externalID
externalScheduleID
externalModificationTag
externalData
responseComment
phantomMaster
participationStatusModifiedDate
calendarScale
startTimeZone
endTimeZone
firstAlertDate
proposedStartDate
canForward
locationPredictionState
firedTTL
disallowProposeNewTime
structuredData
localStructuredData
junkStatus
conferenceURL
contactIdentifier
recurrenceSet
flags
hasNotes
selfParticipantStatus
displayOrder
createdById
modifiedById
sharedItemCreatedDate
sharedItemCreatedTz
sharedItemModifiedDate
sharedItemModifiedTz
modifiedProperties
externalTrackingStatus
needsOccurrenceCacheUpdate
defaultAlarmRemoved
calendar
organizer
selfAttendee
originalItem
alarms
recurrenceRules
attendees
detachedItems
actions
exceptionDates
attachments
location
clientLocation
startLocation
createdByDisplayName
createdByAddress
createdByFirstName
createdByLastName
modifiedByDisplayName
modifiedByAddress
modifiedByFirstName
modifiedByLastName
invitationChangedProperties
suggestedEventInfo
contacts
%@Changes
DROP INDEX IF EXISTS %@;
CREATE %@INDEX %@ on %@(%@);
UNIQUE 
DROP TRIGGER IF EXISTS %@;
AFTER DELETE
CREATE TRIGGER %@ %@ ON %@
BEGIN
END;
ROWID
NULL
INSERT INTO %@ (%@) SELECT %@ FROM %@_;
firstVersion
lastVersion
oldName
defaultText
, %@
SELECT %@ FROM %@_;
INSERT INTO %@ (%@) VALUES(%@);
ALTER TABLE %@ RENAME TO %@_;
DROP TABLE IF EXISTS %@_;
legacyURL
T@"NSURL",R,C,N,V_legacyURL
T@"NSURL",R,C,N,V_url
localRelativePath
T@"NSString",R,C,N,V_localRelativePath
v32@?0@"NSString"8@"CDBAttachmentInfo"16^B24
searchParticipants
TB,V_searchParticipants
searchLocations
TB,V_searchLocations
searchAttendees
TB,V_searchAttendees
%Y%m%d
CFStringRef _EKCreateMSUIDStringForEvent(CalEventRef, CalEventRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/EKMSUID.m
You must set a parent event's unique id before constructing one for a detached event
Event has no original start date?
%@%@%@
<!ExceptionDate!>
NSString *_EKMSUUIDStringForDetachedEvent(NSString *__strong, NSDate *__strong, NSTimeZone *__strong, BOOL)
%%0.%ld
CalToManyRelationHasObjects
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalToManyRelation.m
relation->_loadedObjects != nil
CalToManyRelation
<CalToManyRelation: %p> loaded: %@; added: %@; deleted %@
_EnsureLoaded
inverseRelationInfo->realIDColumn != -1
WHERE %s = ? AND entity_type = ? AND (%@)
WHERE %s = ? AND (%@)
WHERE %s = ? AND entity_type = ?
WHERE %s = ?
%s inverse relation is NULL!
void _EnsureLoaded(CalToManyRelationRef)
%s inverse relation for %s (%s) not a relation!
Property %d not found for class %s!
%s: property is not a custom property!
com.apple.calendar.database
CalendarDatabase
iCalendarConversion
SQLProfile
ResourceChange
notification_id
calendar_item_id
identity_id
change_type
changed_properties
create_count
update_count
delete_count
deleted_summary
deleted_start_date
alerted
public_status
notification
calendar_item
changed_by_display_name
changed_by_address
changed_by_first_name
changed_by_last_name
ResourceChangeNotificationID
ResourceChangeCalendarID
ResourceChangeCalendarItemID
ResourceChangeIdentityID
delete_notification_resource_changes
DELETE FROM ResourceChange WHERE notification_id NOT IN (SELECT ROWID FROM Notification WHERE entity_type = 17);
delete_notification_calendar
DELETE FROM ResourceChange WHERE calendar_id NOT IN (SELECT ROWID FROM Calendar);
delete_last_resource_change_in_notification
DELETE FROM Notification WHERE entity_type = 17 AND ROWID NOT IN (SELECT DISTINCT notification_id FROM ResourceChange);
changeType
changedProperties
createCount
updateCount
deleteCount
deletedTitle
deletedStartDate
publicStatus
calendarItem
changedByDisplayName
changedByAddress
changedByFirstName
changedByLastName
com.apple.calendar.database.preference.notification.enableTravelAdvisoriesForAutomaticBehavior
com.apple.calendar.database.preference.notification.suggestEventLocations
com.apple.calendar.database.preference.notification.sqlProfileLoggingEnabled
com.apple.calendar.database.preference.notification.suggestedLocationsTestMode
com.apple.calendar.database.preference.notification.kCalPreferredDaysToSyncKey
com.apple.calendar.database.preference.notification.kCalRemindersPreferredDaysToSyncKey
com.apple.calendar.database.preference.notification.LastConfirmedSplashScreenVersionViewed
enableTravelAdvisoriesForAutomaticBehavior
suggestEventLocations
sqlProfileLoggingEnabled
suggestedLocationsTestMode
kCalPreferredDaysToSyncKey
kCalRemindersPreferredDaysToSyncKey
LastConfirmedSplashScreenVersionViewed
TB,N,Gget_enableTravelAdvisoriesForAutomaticBehavior,Sset_enableTravelAdvisoriesForAutomaticBehavior:
TB,N,Gget_suggestEventLocations,Sset_suggestEventLocations:
TB,N,Gget_sqlProfileLoggingEnabled,Sset_sqlProfileLoggingEnabled:
TB,N,Gget_suggestedLocationsTestMode,Sset_suggestedLocationsTestMode:
Tq,N,Gget_kCalPreferredDaysToSyncKey,Sset_kCalPreferredDaysToSyncKey:
Tq,N,Gget_kCalRemindersPreferredDaysToSyncKey,Sset_kCalRemindersPreferredDaysToSyncKey:
Tq,N,Gget_LastConfirmedSplashScreenVersionViewed,Sset_LastConfirmedSplashScreenVersionViewed:
CalDefaultCalendarChangedNotification
Calendar
SuggestionsCalendarID
NaturalLanguageSuggestionsCalendarID
INSERT INTO Calendar (ROWID, store_id, title, flags, UUID, self_identity_id, owner_identity_id) VALUES (1, 1, 'Default', %u, '%@', -1, -1);
INSERT INTO Calendar (store_id, title, UUID, self_identity_id, owner_identity_id) VALUES (%d, 'Default', '%@', -1, -1);
color
color_r
color_g
color_b
symbolic_color_name
^v24@?0^{__CFString=}8^{__CFDictionary=}16
BirthdayCalendarID
UPDATE Calendar SET supported_entity_types = %ld, color = '%@' WHERE ROWID = %d;
#8295AF
SELECT ROWID, flags FROM Calendar WHERE color IS NULL
UPDATE Calendar SET color = ?, color_is_display = 1 WHERE ROWID = ?
UPDATE Calendar SET color = '%@' WHERE color in ('%@', '%@', '%@');
UPDATE Calendar SET supported_entity_types = %ld WHERE (supported_entity_types = 0 OR supported_entity_types IS NULL);
UPDATE Calendar SET invitation_status = 3 WHERE invitation_status = 2
UPDATE Calendar SET invitation_status = 2 WHERE invitation_status = 1
DELETE FROM Calendar WHERE store_id NOT IN (SELECT ROWID FROM Store);
/?&:$+,;=@
x-apple-calendar://%@
CalCalendarRef CalDatabaseCopyDefaultOrAnyReadWriteCalendarForNewEvents(CalDatabaseRef, CalStoreRef)
CalCalendarRef CalDatabaseCopyOrCreateDefaultCalendarForNewEvents(CalDatabaseRef)
DEFAULT_CALENDAR_NAME
void CalDatabaseCreateWritableCalendarForEntityTypeInStoreIfNeeded(CalDatabaseRef, CalEntityType, CalStoreRef)
DEFAULT_TASK_CALENDAR_NAME
void CalDatabaseEnsureDefaultCalendarForNewTasksExists(CalDatabaseRef)
Unable to add calendar to store. Store is restricted to calendars which support only one entity
DELETE FROM CalendarItem WHERE calendar_id = ?;
Reminders
Flags
OldFlags
ExternalIDTag
UPDATE Calendar SET external_id = NULL, external_mod_tag = NULL, external_id_tag = NULL, external_rep = NULL, shared_owner_name = NULL, shared_owner_address = NULL, sharing_status = 0, sync_token = NULL, is_published = 0, published_URL = NULL WHERE store_id = %d;
UPDATE Calendar SET store_id = %d WHERE store_id = %d AND ROWID != %d;
UPDATE Calendar SET store_id = %d WHERE store_id = %d AND ROWID = %d;
color_is_display
supported_entity_types
display_order
added_items
shared_owner_name
shared_owner_address
sharing_status
sharing_invitation_response
published_URL
is_published
invitation_status
sync_token
has_dirty_instance_attributes
self_identity_id
self_identity_email
self_identity_phone_number
owner_identity_id
owner_identity_email
owner_identity_phone_number
bulk_requests
subcal_account_id
push_key
digest
store
sharees
notifications
resource_changes
selfIdentityDisplayName
selfIdentityAddress
ownerIdentityDisplayName
ownerIdentityAddress
selfIdentityFirstName
selfIdentityLastName
ownerIdentityFirstName
ownerIdentityLastName
old_flags
NativeStoreID
Found in Mail
INSERT INTO Calendar (store_id, title, flags, supported_entity_types, UUID, color, self_identity_id, owner_identity_id) VALUES (%d, '%@', %d, %ld, '%@', '%@', -1, -1);
DELETE FROM Calendar WHERE ROWID = %d;
DELETE FROM Notification WHERE calendar_id = %d;
DELETE FROM NotificationChanges WHERE calendar_id = %d;
Found in Natural Language
FacebookBirthdayCalendarID
CalendarExternalId
CalendarStoreId
CalendarUUID
CalendarIsPublished
CalendarSelfIdentityId
delete_calendar_members
DELETE FROM OccurrenceCacheDays where calendar_id = OLD.ROWID;DELETE FROM OccurrenceCache where calendar_id = OLD.ROWID;DELETE FROM CalendarItem WHERE calendar_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Notification WHERE calendar_id = OLD.ROWID; DELETE FROM sharee where owner_id = OLD.ROWID;
DELETE FROM OccurrenceCacheDays where calendar_id = OLD.ROWID;DELETE FROM OccurrenceCache where calendar_id = OLD.ROWID;DELETE FROM CalendarItem WHERE calendar_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Notification WHERE calendar_id = OLD.ROWID; DELETE FROM sharee where owner_id = OLD.ROWID;DELETE FROM Alarm WHERE calendar_owner_id = OLD.ROWID;
INSERT INTO Calendar (store_id, title, flags, supported_entity_types, UUID, color, color_is_display, self_identity_id, owner_identity_id) VALUES (1, '%@', 0, %d, '%@', '%@', 1, -1, -1);
Facebook Birthdays
Birthdays
DELETE FROM Calendar WHERE ROWID IN (SELECT ROWID FROM Calendar WHERE (flags & %d));
DELETE FROM Notification WHERE calendar_id IN (SELECT ROWID FROM Calendar WHERE (flags & %d));
DELETE FROM NotificationChanges WHERE calendar_id IN (SELECT ROWID FROM Calendar WHERE (flags & %d));
read_only
immutable
shared_owner_email
read_status
SuggestionsShowEventsFoundInMail
com.apple.suggestions
symbolicColorName
isColorDisplayOnly
externalIDTag
externalRepresentation
source
allowedEntities
sharedOwnerName
sharedOwnerAddress
sharingStatus
sharingInvitationResponse
publishedURL
isPublished
syncToken
selfIdentityEmail
selfIdentityPhoneNumber
ownerIdentityEmail
ownerIdentityPhoneNumber
bulkRequests
subcalAccountID
pushKey
resourceChanges
ownerIdentityId
DefaultCalendarID
DefaultTaskCalendarID
DefaultTaskCalendarStoreUID
DefaultTaskCalendarName
#%02X%02X%02X
_CalCalendarLoad
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalCalendar.m
propDesc->extra != 0
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN     (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN     (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
SELECT color, flags FROM Calendar;
Category
WHERE name LIKE ? AND entity_type = ?
Multiple categories found with name = '%@', entityType = %d
WHERE hidden = 0 AND entity_type = ?
name
entity_type
CategoryNameAndType
name, entity_type
JOIN CategoryLink ON CategoryLink.owner_id = e.ROWID WHERE CategoryLink.category_id = ?
CalRelation
<CalRelation: %p> owner: [%@] related object: [%@]
Undefined
Source
Event
Task
Alarm
RecurrenceRule
Attendee
Organizer
ExceptionDate
EventAction
Location
Attachment
Sharee
InviteReplyNotification
ResourceChangeNotification
SuggestionNotification
Notification
CalendarItem
CategoryLink
Participant
SuggestedEventInfo
Contact
entityType: [%@] address: [%p] row ID: [%@] changedProperties: [%@]
Got entity type 0 for entity with CFType: %lu, recordDescriptor: %p, recordDescriptorName: %s
Unknown
Normal
Personal
Private
Confidential
Person
Room
Resource
Group
Unknown (%@)
None
Required
Optional
Chair
NonParticipant
NonParticipantChair
Pending
Accepted
Declined
Tentative
Delegated
Completed
Inprocess
Email
UPDATE Participant SET identity_id = (SELECT Attendee_.participant_id FROM Attendee_ WHERE Attendee_.ROWID = Participant.ROWID);
UPDATE Participant SET email = (SELECT Identity.address FROM Attendee_, Identity WHERE Attendee_.ROWID = Participant.ROWID AND Attendee_.participant_id = Identity.ROWID);
UPDATE Participant SET email = (SELECT Identity.address FROM Participant_, Identity WHERE Participant_.ROWID = Participant.ROWID AND Participant_.identity_id = Identity.ROWID);
UPDATE Identity SET address = IFNULL((SELECT external_id FROM Participant_, Identity WHERE Identity.ROWID = Participant_.identity_id), 'mailto:' || address);
Unexpected entity type for participant: %d
DELETE FROM Participant WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
IDENTITY_MATCHES
SELECT owner_id FROM Participant WHERE IDENTITY_MATCHES(identity_id);
uuid: [%@] displayName: [%@] address: [%@] emailAddress: [%@] phoneNumber: [%@] role: [%@] status: [%@] type: [%@] responseComment: [%@] calendarItemRowID: [%@] calendarItemUUID: [%@]
CalOrganizerSetOwner
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalAttendee.m
CalEntityIsOfType(organizer, CalOrganizerEntity)
email
phone_number
pending_status
role
is_self
comment
schedule_agent
last_modified
proposed_start_date
invited_by
proposed_start_date_status
display_name
address
organizer_owner
attendee_owner
first_name
last_name
comment_last_modified
ParticipantEventId
ParticipantUUID
ParticipantEntityType
ParticipantOwnerId
ParticipantIdentityId
ParticipantEmail
ParticipantPhoneNumber
ParticipantProposedStartDate
participant_id
_CalCreateParticipant
entityType == CalAttendeeEntity || entityType == CalOrganizerEntity
CalParticipantGetUID
CalEntityIsOfType(participant, CalParticipantEntity)
participant
WHERE participant.entity_type = ?
JOIN CalendarItem ON participant.owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID WHERE participant.entity_type = ? AND store_id = ?
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class IN (%d, %d) AND client_identifier = '%@')
entity_type = %d  AND store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
calendar_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class IN (%d, %d) AND client_identifier = '%@')
entity_type = %d  AND calendar_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
pendingStatus
lastModified
proposedStart
invitedBy
proposedStartStatus
WHERE UUID = ? AND participant.entity_type = ?
JOIN Identity ON participant.identity_id = Identity.rowid WHERE participant.owner_id = ? AND Identity.address = ?
isSelf
SELECT 1 WHERE EXISTS (SELECT CalendarItem.ROWID FROM Participant as SelfParticipant, Participant as Organizer, CalendarItem WHERE CalendarItem.organizer_id = Organizer.ROWID AND CalendarItem.self_attendee_id = SelfParticipant.ROWID AND (SelfParticipant.status = ? OR SelfParticipant.status = ?) AND Organizer.%s = ? AND SelfParticipant.ROWID != Organizer.ROWID)
SELECT 1 WHERE EXISTS (SELECT CalendarItem.ROWID FROM Participant as SelfParticipant, Participant as OtherParticipant, CalendarItem WHERE OtherParticipant.owner_id = CalendarItem.ROWID AND CalendarItem.self_attendee_id = SelfParticipant.ROWID AND (SelfParticipant.status = ? OR SelfParticipant.status = ?) AND OtherParticipant.%s = ? AND SelfParticipant.ROWID != OtherParticipant.ROWID)
SELECT 1 WHERE EXISTS (SELECT CalendarItem.ROWID FROM Participant as SelfParticipant, Participant as OtherParticipant, CalendarItem WHERE OtherParticipant.owner_id = CalendarItem.ROWID AND CalendarItem.organizer_id = SelfParticipant.ROWID AND SelfParticipant.is_self = 1 AND OtherParticipant.%s = ? AND SelfParticipant.ROWID != OtherParticipant.ROWID)
CalRecordID
<CalRecordID: %p> { entityType = %d; rowID = %d; }
com.apple.calendar.CalendarDatabase.CalRecordID
<rdar://problem/27536217>
_CalRecordIDLoad
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalRecordID.m
false
SELECT ROWID from %@ WHERE UUID IS NULL
UPDATE %@ SET UUID= ? WHERE rowid = ?;
com.apple.mobilecal.invitationalertschanged
com.apple.mobilecal.showdeclinedchanged
UPDATE CalendarItem SET orig_date = NULL WHERE orig_date = -2147483648
UPDATE CalendarItem SET last_modified = NULL WHERE last_modified = -2147483648
UPDATE CalendarItem SET has_attendees = 1 WHERE EXISTS (SELECT ROWID FROM Participant WHERE Participant.owner_id = CalendarItem.ROWID AND entity_type = 7)
UPDATE CalendarItem SET due_tz = start_tz, due_all_day = all_day WHERE entity_type = 3 AND due_date IS NOT NULL
UPDATE CalendarItem SET display_order = CAST(creation_date AS INT), external_mod_tag = NULL WHERE entity_type = 3
UPDATE CalendarItem SET invitation_status = 3 WHERE invitation_status = 2
UPDATE CalendarItem SET invitation_status = 2 WHERE invitation_status = 1
UPDATE CalendarItem SET end_tz = start_tz WHERE entity_type = 2
DELETE FROM CalendarItem WHERE calendar_id NOT IN (SELECT ROWID FROM Calendar);
DELETE FROM CalendarItem WHERE (orig_date != 0 AND orig_item_id = 0) OR orig_item_id IN (SELECT ROWID FROM CalendarItem WHERE orig_date != 0 AND orig_item_id = 0);
DELETE FROM CalendarItem WHERE orig_item_id = ROWID OR orig_item_id IN (SELECT ROWID FROM CalendarItem WHERE orig_item_id = ROWID);
_CalCalendarItemCreate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalEvent.m
uuid: [%@] externalID: [%@] uniqueIdentifier: [%@] summary: [%@] startDate: [%@] endDate: [%@] isAllDay: [%@] url: [%@] isDetached: [%@] locationFullDisplayString: [%@] calendarUUID: [%@] calendarRowID: [%@]
_CalCalendarItemCreateCopyPreservingUniqueIdentifier
original != NULL
CalCalendarItemCreateCopy
_CalTaskMarkAsNeedingScheduledTaskCacheUpdate
_CalEntityIsOfType(task, CalTaskEntity)
x-apple-calevent://%@/%@?o=%lld
x-apple-calevent://%@/%@
%@:%@
Unexpected entity type [%d for calendar item with rowid [%d]
CalCalendarItemCopyUUID
item != NULL
 WHERE calendar_id = ?;
SELECT external_id, external_mod_tag FROM CalendarItem WHERE entity_type = 2 AND external_id IN (
) AND calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = ?);
 JOIN Participant ON self_attendee_id = Participant.rowid 
 JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ? AND 
 WHERE 
Participant.entity_type = ? AND Participant.pending_status IN (?, ?, ?)
 JOIN Participant ON self_attendee_id = Participant.rowid WHERE Participant.entity_type = ? AND calendar_id = ? AND Participant.pending_status IN (?, ?, ?)
 AND 
(external_tracking_status != 0)
 WHERE calendar_id = ? AND external_tracking_status != 0;
CalDB: Invalid timezone (start date): '%@', substituting float
SELECT rowid FROM CalendarItem WHERE location LIKE '%%%@%%' or summary LIKE '%%%@%%';
%s: %s
CalDatabaseCopyEventIDsThatMatchLocationOrSummary
LastDeclinedEventCull
 JOIN Participant ON self_attendee_id = Participant.rowid
 WHERE Event.external_id IS NULL AND Participant.entity_type == ? AND Participant.status = ? AND end_date < ?
SELECT COUNT(*) FROM CalendarItem AS ci
JOIN SuggestedEventInfo ON CalendarItem.ROWID = SuggestedEventInfo.owner_id WHERE SuggestedEventInfo.opaque_key = ?
 WHERE status = ? and invitation_status = 0
 WHERE invitation_status = ? AND self_attendee_id != 0
 AND calendar_id NOT IN (SELECT ROWID FROM Calendar WHERE store_id IN 
 AND (has_recurrences = 1 OR (start_tz = ? AND end_date > ?) OR (start_tz != ? AND end_date > ?));
InvitationAlerts
SharedEventAlerts
InviteeDeclineAlerts
ShowDeclinedEvents
SELECT end_date, start_tz FROM CalendarItem INDEXED BY EventInvitationStatus WHERE entity_type = 2 AND invitation_status IN (1,2,3) AND has_recurrences = 0
 AND (calendar_id IN (SELECT ROWID From Calendar WHERE store_id NOT IN 
_CalDatabaseCopyNonRecurringEventsInDateRange
has_recurrences = 0 AND hidden = 0 AND ((end_date > ? AND start_date < ?) OR (proposed_start_date > ? AND proposed_start_date < ?))
r.frequency
r.count
r.cached_end_date
r.cached_end_date_tz
r.end_date
r.specifier
r.by_month_months
 FROM CalendarItem e JOIN Recurrence r ON r.owner_id = e.ROWID
_CalDatabaseCopyRecurringEventsPossiblyOccurringInDateRange
entity_type = 2 AND has_recurrences = 1 AND hidden=0 AND start_date < ? 
CalDatabaseRemoveCalendarItemChangesInCalendarToIndex
calendar != NULL
entity_type = ? AND calendar_id = ?
v20@?0^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}8i16
CalDatabaseRemoveCalendarItemChangesInStoreToIndex
store != NULL
CalDatabaseCopyCalendarItemChangesInCalendar
entity_type = ? AND calendar_id = ? AND old_calendar_id != 0
entity_type = ? AND calendar_id = ? AND old_calendar_id = 0
 AND sequence_number > (select latest_consumed_sequence_number FROM ClientCursor WHERE client_identifier = ?)
 AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)
 AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = ? AND client_identifier = ?)
entity_type = ?
 AND store_id = ?
 AND old_calendar_id != 0
 AND old_calendar_id = 0
UPDATE CalendarItem SET external_tracking_status = NULL, external_id = NULL, external_mod_tag = NULL, external_rep = NULL WHERE (calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = %d));
SELECT calendaritem.rowid, calendaritem.orig_item_id, calendaritem.orig_date, calendaritem.unique_identifier from CalendarItem, Calendar, Store WHERE calendaritem.unique_identifier IS NULL and (calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = %d));
UPDATE CalendarItem SET calendar_id = %d WHERE calendar_id = %d;
STRING_MATCHES
ORGANIZER_MATCHES
LOCATION_MATCHES
SELECT ROWID FROM CalendarItem WHERE %@ AND (STRING_MATCHES(?, IFNULL(summary, '') || ' ' || IFNULL(description,'')) OR ORGANIZER_MATCHES(organizer_id) OR LOCATION_MATCHES(location_id));
SELECT ROWID FROM CalendarItem WHERE STRING_MATCHES(?, IFNULL(summary, '') || ' ' || IFNULL(description,'')) OR ORGANIZER_MATCHES(organizer_id) OR LOCATION_MATCHES(location_id);
CalDatabaseCopyEventIdsForSearch
SELECT CalendarItem.ROWID FROM CalendarItem, Location WHERE entity_type = 2 AND Location.ROWID = CalendarItem.location_id
SELECT CalendarItem.ROWID FROM CalendarItem WHERE entity_type = 2
STRING_MATCHES(?, IFNULL(summary, ''))
STRING_MATCHES(?, IFNULL(location.title, ''))
(organizer_id == 0 AND STRING_MATCHES(?, IFNULL(summary, '')))
STRING_MATCHES(?, IFNULL(description, ''))
 WHERE recurrence_set = ? AND start_date > ?
 AND external_id IS NOT NULL AND external_id != ""
 ORDER BY start_date LIMIT 1
summary
location_id
client_location_id
description
start_date
start_tz
end_tz
all_day
orig_item_id
orig_date
organizer_id
self_attendee_id
privacy_level
sequence_num
birthday_id
modified_properties
external_tracking_status
external_schedule_id
response_comment
last_synced_response_comment
has_recurrences
has_attendees
due_date
due_tz
due_all_day
completion_date
creation_date
app_link
created_by_id
modified_by_id
shared_item_created_date
shared_item_created_tz
shared_item_modified_date
shared_item_modified_tz
invitation_changed_properties
default_alarm_removed
phantom_master
participation_status_modified_date
calendar_scale
travel_time
travel_advisory_behavior
start_location_id
suggested_event_info_id
first_alert_date
can_forward
location_prediction_state
fired_ttl
disallow_propose_new_time
structured_data
local_structured_data
junk_status
conference_url
contact_identifier
recurrence_set
exception_dates
recurrences
attendees_pending_delete
self_attendee
update_occurrence_cache
update_scheduled_task_cache
has_dirty_notifiable_instance_attributes
old_calendar_id
old_external_id
event_actions
detached_events
original_event
client_location
start_location
suggested_event_info
created_by_display_name
created_by_address
modified_by_display_name
modified_by_address
created_by_first_name
created_by_last_name
modified_by_first_name
modified_by_last_name
has_description
self_participant_status
status != -1
status == -1
SELECT (description != '') FROM %s WHERE ROWID = ?
EventCalendarId
EventOriginalEventId
orig_event_id
EventExternalId
EventExternalIdentificationTag
EventExternalUniqueIdentifier
CalendarItemOriginalItemId
EventCalendarIdHiddenEndDateStartDate
calendar_id, hidden, end_date, start_date
EventStatus
EventHiddenEndDateStartDate
hidden, end_date, start_date
EventExternalIdCalId
external_id, calendar_id
EventExternalUniqueIdentifierCalId
unique_identifier, calendar_id
EventUUID
EventReadStatus
CalendarItemDueDate
CalendarItemEntityTypeCompletionDate
entity_type, completion_date
CalendarItemEntityTypeCalendarIdCompletionDateCreationDate
entity_type, calendar_id, completion_date, creation_date
EventInvitationStatus
CalendarItemOriginalDate
delete_event_alarms_recurs
DELETE FROM Alarm WHERE entity_id = OLD.ROWID AND entity_type = 2;DELETE FROM Recurrence WHERE event_id = OLD.ROWID;DELETE FROM Attendee WHERE event_id = OLD.ROWID;DELETE FROM EventExceptionDate WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;
DELETE FROM Alarm WHERE entity_id = OLD.ROWID AND entity_type = 2;DELETE FROM Recurrence WHERE owner_type = 2 and owner_id = OLD.ROWID;DELETE FROM Attendee WHERE event_id = OLD.ROWID;DELETE FROM EventExceptionDate WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;
DELETE FROM Alarm WHERE entity_id = OLD.ROWID AND entity_type = 2;DELETE FROM Recurrence WHERE owner_type = 2 and owner_id = OLD.ROWID;DELETE FROM Participant WHERE event_id = OLD.ROWID;DELETE FROM EventExceptionDate WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;
DELETE FROM Alarm WHERE owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;
DELETE FROM Location WHERE item_owner_id = OLD.ROWID;DELETE FROM CalendarItem WHERE orig_item_id = OLD.ROWID;DELETE FROM Alarm WHERE owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;
DELETE FROM Location WHERE item_owner_id = OLD.ROWID;DELETE FROM CalendarItem WHERE orig_item_id = OLD.ROWID;DELETE FROM Alarm WHERE owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Attachment WHERE owner_id = OLD.ROWID;
DELETE FROM Location WHERE item_owner_id = OLD.ROWID;DELETE FROM Alarm WHERE owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Attachment WHERE owner_id = OLD.ROWID;
DELETE FROM Location WHERE item_owner_id = OLD.ROWID;DELETE FROM Alarm WHERE owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Attachment WHERE owner_id = OLD.ROWID;DELETE FROM ScheduledTaskCache WHERE task_id = OLD.ROWID;
DELETE FROM Location WHERE item_owner_id = OLD.ROWID;DELETE FROM Alarm WHERE owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Attachment WHERE owner_id = OLD.ROWID;DELETE FROM ScheduledTaskCache WHERE task_id = OLD.ROWID;DELETE FROM EventAction WHERE event_id = OLD.ROWID;
DELETE FROM Location WHERE item_owner_id = OLD.ROWID;DELETE FROM Alarm WHERE calendaritem_owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Attachment WHERE owner_id = OLD.ROWID;DELETE FROM ScheduledTaskCache WHERE task_id = OLD.ROWID;DELETE FROM EventAction WHERE event_id = OLD.ROWID;
DELETE FROM Location WHERE item_owner_id = OLD.ROWID;DELETE FROM Alarm WHERE calendaritem_owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Attachment WHERE owner_id = OLD.ROWID;DELETE FROM ScheduledTaskCache WHERE task_id = OLD.ROWID;DELETE FROM EventAction WHERE event_id = OLD.ROWID;DELETE FROM SuggestedEventInfo WHERE ROWID = OLD.suggested_event_info_id;
DELETE FROM Location WHERE item_owner_id = OLD.ROWID;DELETE FROM Location WHERE start_loc_owner_id = OLD.ROWID;DELETE FROM Location WHERE client_loc_owner_id = OLD.ROWID;DELETE FROM Alarm WHERE calendaritem_owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Attachment WHERE owner_id = OLD.ROWID;DELETE FROM ScheduledTaskCache WHERE task_id = OLD.ROWID;DELETE FROM EventAction WHERE event_id = OLD.ROWID;DELETE FROM SuggestedEventInfo WHERE ROWID = OLD.suggested_event_info_id;
orig_start_date
organizer_is_self
external_status
external_delivery_source_id
external_delivery_item_id
organizer_external_id
conference
suggestion_id
travel_advisory_generation_is_automatic
suggestions_opaque_key
suggestions_unique_key
suggestions_changed_fields
SELECT Event.rowid, organizer_id, organizer_is_self, address FROM Event, Identity WHERE organizer_id > 0 AND organizer_id = Identity.rowid
INSERT INTO Participant (entity_type, identity_id, owner_id, is_self, email, UUID) VALUES (?, ?, ?, ?, ?, ?)
UPDATE Event SET organizer_id = ? WHERE rowid = ?
INSERT INTO Location (title, item_owner_id) VALUES (?, ?)
SELECT rowid, location FROM %@ WHERE location IS NOT NULL
SELECT ROWID, item_owner_id FROM Location
UPDATE CalendarItem SET location_id = ? WHERE ROWID = ?
SELECT COUNT(*) FROM Recurrence WHERE event_id = ?
SELECT COUNT(*) FROM Recurrence WHERE owner_id = ? AND owner_type = 2
SELECT rowid, status FROM CalendarItem
UPDATE CalendarItem SET status = ?, invitation_status = ?, has_recurrences = ? WHERE ROWID=?
SELECT calendaritem.rowid, calendaritem.orig_item_id, calendaritem.orig_date, calendaritem.unique_identifier from CalendarItem, Calendar, Store WHERE calendaritem.unique_identifier IS NULL and calendaritem.calendar_id = calendar.rowid and calendar.store_id = store.rowid and store.type != 1;
UPDATE CalendarItem SET orig_item_id = 0, orig_date = NULL WHERE orig_item_id = ?
_CalEventMarkEventAsNeedingOccurrenceCacheUpdate
_CalEntityIsOfType(event, CalEventEntity)
Duplicate Location Reference
_CalEventPrepareForSave
_CalEntityIsOfType(record, CalEventEntity)
_CalEntityIsOfType(record, CalTaskEntity)
INSERT INTO CalendarItemChanges (record, type, entity_type, sequence_number, store_id, calendar_id, old_calendar_id, external_id, old_external_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
%@/RID=%llu
Mevent
 JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?
 WHERE summary = ? AND start_date = ?
 WHERE calendar_id = ?
 AND start_date > ? AND suggested_event_info_id > 0
%%%@%%
 AND summary LIKE ?
EKEventNaturalLanguageSuggestedEventExpirationDate
CalDB: Invalid timezone (all day): '%@', substituting float
 JOIN Participant ON ci.self_attendee_id = Participant.rowid
 WHERE (Participant.entity_type = ? AND Participant.status NOT IN (?, ?, ?))
 WHERE (Participant.entity_type = ? AND Participant.status IN (?, ?, ?)) AND Participant.is_self = 0
 AND
 (ci.invitation_status IN (0, 1, 2, 3)
 (ci.invitation_status IN (1, 2, 3)
 AND (                 ((start_tz = ? AND end_date > ?) OR (start_tz != ? AND end_date > ?))                     OR                 (ci.has_recurrences AND (                        ( ci.ROWID IN (SELECT owner_id FROM Recurrence WHERE owner_id = ci.ROWID AND (                             cached_end_date > ? OR                             end_date > ? OR                             (count = 0 AND end_date IS NULL)                        ) )                     ) )                 )             );
SELECT CalendarItem.* FROM CalendarItem JOIN Participant As organizerParticipant ON CalendarItem.organizer_id = organizerParticipant.rowid JOIN Participant AS otherParticipant ON CalendarItem.ROWID = otherParticipant.owner_id WHERE (CalendarItem.invitation_changed_properties & %i) != 0 AND otherParticipant.is_self = 0 AND otherParticipant.proposed_start_date > 0 AND (otherParticipant.proposed_start_date + (CalendarItem.end_date - CalendarItem.start_date) > ?) AND organizerParticipant.is_self = 1
 AND otherParticipant.proposed_start_date_status != 1
 GROUP BY CalendarItem.ROWID;
gregorian
_CalDatabaseRemoveCalendarItemChangesInStoreToIndex
entity_type = ? AND store_id = ?
rowid
origEventId
origStartDate
uniqueId
UPDATE CalendarItem SET orig_event_id = 0, orig_start_date = 0 WHERE rowid = %d;
UPDATE CalendarItem SET unique_identifier="%@" WHERE rowid = %d;
%@/RID=%.f
calendar_id IN (SELECT ROWID From Calendar WHERE store_id NOT IN %@)
CalAttachmentXXXXXX
X-APPLE-FILENAME
CalAlarm
CalEvent
CalAttendee
CalTask
CalCalendar
CalStore
SupportedTriggers
Interval
Absolute
IntervalConstrainedToRecurrenceInterval
SupportsAlarmsTriggeringAfterStartDate
MaximumNumberOfAlarms
MaximumNumberOfRecurrences
FutureStartLimitedToOccurrenceCache
ResponseRequiresDeliverySourceOrExternalID
SupportsResponseComment
DeletesDetachedEventsWhenDeletingOriginal
DurationConstrainedToRecurrenceInterval
ResponseRequiresProposedStatus
OccurrenceOrderEnforcedAfterDetachment
OccurrencesMustOccurOnSeparateDays
StatusIsAccurate
ExternalStatusMirrorsStatus
RejectedStatusChangeRequiresNoExternalStatus
CalendarNotChangeable
SupportsAvailability
SupportsLimitedAvailability
CancelDeletedEvents
DeclineDeletedInvitations
RequiresOutgoingInvitationsInDefaultCalendar
RequiresMSFormattedUID
RecurrencesPinnedToMonthDays
MustAcknowledgeMasterEvent
SupportsStructuredLocations
SupportsReminderLocations
SupportsReminderActions
SupportsAlarmProximity
SupportsURL
SupportsAutoGeocodingStructuredLocations
UseDeletedByOrganizerStatus
StatusIsKnownForInvitedEvents
StatusIsKnownForOrganizedEvents
RequireAttendeeSearchInSingleAccount
CanUpdateLastModified
SupportedPriorities
supportsAllDayDueDates
SupportsExactlyOneEntityType
RecurrenceSeriesMustIncludeMoreThanFirstOccurrence
SupportsIncomingInvitations
SupportsOutgoingInvitations
SupportsInvitationModifications
SupportsReadWriteCalendars
SEEKRITEVENT
[Placeholder Item]
SELECT Alarm.rowid, trigger_date, trigger_tz, start_tz, due_tz, entity_type FROM Alarm, CalendarItem WHERE Alarm.owner_id = CalendarItem.rowid
UPDATE Alarm SET trigger_date = ? WHERE ROWID = ?
UPDATE Alarm SET trigger_date = NULL WHERE trigger_date = -2147483648
DELETE FROM Alarm WHERE calendaritem_owner_id NOT IN (SELECT ROWID FROM CalendarItem)                                                                                      AND calendar_owner_id NOT IN (SELECT ROWID FROM Calendar);
 WHERE Alarm.ROWID in (select Alarm.ROWID FROM Alarm JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID WHERE calendar_id = ?);
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND trigger_date IS NOT NULL AND completion_date IS NULL AND (trigger_date >= ? AND trigger_date <= ?) AND CalendarItem.has_recurrences = 0
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND trigger_date IS NOT NULL AND completion_date IS NULL AND trigger_date <= ? AND CalendarItem.entity_type == 3 AND CalendarItem.has_recurrences = 1
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND (CalendarItem.entity_type = ? AND (proximity = 0 OR proximity IS NULL) AND trigger_date IS NULL AND completion_date IS NULL AND CalendarItem.due_date IS NOT NULL AND (CalendarItem.due_date + trigger_interval) >= ? AND (CalendarItem.due_date + trigger_interval) <= ?)
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND (entity_type = ? AND (proximity = 0 OR proximity IS NULL) AND trigger_date IS NULL AND has_recurrences = 0 AND ((start_tz != ? AND start_date - IFNULL(travel_time, 0) + trigger_interval >= ? AND start_date - IFNULL(travel_time, 0) + trigger_interval <= ?) OR (start_tz == ? AND start_date - IFNULL(travel_time, 0) + trigger_interval >= ? AND start_date - IFNULL(travel_time, 0) + trigger_interval <= ?))
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND (CalendarItem.entity_type = ? AND (proximity = 0 OR proximity IS NULL) AND trigger_date IS NULL AND CalendarItem.has_recurrences = 1 AND ((start_tz != ? AND start_date - IFNULL(travel_time, 0) + trigger_interval <= ?) OR (start_tz == ? AND start_date - IFNULL(travel_time, 0) + trigger_interval <= ?))
UPDATE Alarm SET external_id = NULL, external_mod_tag = NULL, external_id_tag = NULL, external_rep = NULL                                                                           WHERE calendaritem_owner_id IN (SELECT CalendarItem.ROWID FROM CalendarItem JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = %d)                                                                           OR calendar_owner_id IN (SELECT Calendar.ROWID FROM Calendar WHERE store_id = %d);
JOIN CalendarItem ON alarm.calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND CalendarItem.entity_type = 3 AND CalendarItem.completion_date IS NULL AND alarm.disabled = 0 AND alarm.proximity != 0 AND alarm.location_id != 0
alarm
WHERE alarm.disabled = 0 AND alarm.proximity != 0 AND alarm.location_id != 0 AND alarm.calendar_owner_id IN (SELECT ROWID FROM Calendar)
JOIN CalendarItem ON alarm.calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND CalendarItem.entity_type = 3 AND CalendarItem.completion_date IS NULL AND alarm.disabled = 0 AND alarm.proximity >= 3 AND alarm.proximity <= 4
DefaultTimedAlarmOffset
DefaultAllDayAlarmOffset
trigger_date
trigger_interval
calendaritem_owner_id
calendar_owner_id
proximity
disabled
acknowledgedDate
default_alarm
orig_alarm_id
calendaritem_owner
calendar_owner
original_alarm
snoozed_alarms
AlarmExternalId
AlarmUUID
AlarmOwnerId
AlarmTriggerDate
AlarmCalendarItemOwnerId
AlarmCalendarOwnerId
cascade_alarm_delete
DELETE FROM Location WHERE alarm_owner_id = OLD.ROWID;
entity_id
trigger_tz
absoluteDate
relativeOffset
alarmType
externalRep
defaultAlarm
calendarItemOwner
calendarOwner
originalAlarm
snoozedAlarms
WHERE calendaritem_owner_id IN (SELECT CalendarItem.ROWID FROM CalendarItem JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?)                                                                                                       OR calendar_owner_id IN (SELECT Calendar.ROWID From Calendar WHERE store_id = ?)
 AND %@ IN (
%d, 
CalendarItem.calendar_id
calendar_id = %d AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@') AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@') AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
ItemBridgeOptions
ItemBridgeExceptionDates
ItemBridgeIsAllDay
ItemBridgeEventIsFloating
ItemBridgeStartDateTimezone
/RID=
X-MICROSOFT-CDO-ALLDAYEVENT
X-FUNAMBOL-ALLDAY
v32@?0@8@16^B24
q24@?0@8@16
Attach
Description
Summary
supportsSecureCoding
TB,R
attach
T@"NSArray",&,V_attach
attendee
T@"NSArray",&,V_attendee
T@"NSString",&,V_description
T@"NSString",&,V_summary
Reminder
CREATE TABLE Identity (display_name TEXT, address TEXT, first_name TEXT, last_name TEXT, UNIQUE (display_name, address, first_name, last_name));
ALTER TABLE Participant RENAME TO Participant_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, email FROM Participant_ WHERE name IS NOT NULL AND email IS NOT NULL;
INSERT INTO Identity (ROWID, display_name, address) SELECT MIN(ROWID), name, email FROM Participant_ WHERE email IS NULL AND name IS NOT NULL GROUP BY name;
INSERT INTO Identity (ROWID, display_name, address) SELECT MIN(ROWID), name, email FROM Participant_ WHERE name IS NULL AND email IS NOT NULL GROUP BY email;
INSERT INTO Identity (ROWID, display_name, address) SELECT MIN(ROWID), name, email FROM Participant_ WHERE name IS NULL AND email IS NULL GROUP BY email;
SELECT ROWID, address FROM Identity WHERE address IS NULL AND display_name IS NOT NULL;
UPDATE Attendee SET participant_id = ? WHERE participant_id IN (SELECT ROWID FROM Participant_ WHERE email IS NULL AND name = ?);
UPDATE Event SET organizer_id = ? WHERE organizer_id IN (SELECT ROWID FROM Participant_ WHERE email IS NULL AND name = ?);
SELECT ROWID, address FROM Identity WHERE address IS NULL;
UPDATE Attendee SET participant_id = ? WHERE participant_id IN (SELECT ROWID FROM Participant_ WHERE name IS NULL AND email = ?);
UPDATE Event SET organizer_id = ? WHERE organizer_id IN (SELECT ROWID FROM Participant_ WHERE name IS NULL AND email = ?);
DROP TABLE Participant_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, email FROM Participant_
ALTER TABLE Identity RENAME TO Identity_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, email FROM Identity_
DROP TABLE Identity_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, address FROM Identity_
display_name IS NULL
display_name = ?
address IS NULL
address = ?
first_name IS NULL
first_name = ?
last_name IS NULL
last_name = ?
SELECT ROWID FROM Identity WHERE %@ AND %@ AND %@ AND %@
INSERT INTO Identity (display_name, address, first_name, last_name) VALUES (?, ?, ?, ?);
DELETE FROM Identity WHERE NOT EXISTS (SELECT ROWID FROM Participant WHERE Participant.identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM Calendar WHERE Calendar.self_identity_id = Identity.ROWID OR Calendar.owner_identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM CalendarItem WHERE CalendarItem.modified_by_id = Identity.ROWID OR CalendarItem.created_by_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM ResourceChange WHERE ResourceChange.identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM Notification WHERE Notification.identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM Sharee WHERE Sharee.identity_id = Identity.ROWID);
SELECT rowid FROM Identity WHERE STRING_MATCHES(?, IFNULL(display_name, ''))
CalDatabaseCopyParticipantIdsThatMatchSearch
UPDATE Identity SET display_name = ?, address = ? WHERE address = ?;
UPDATE Attendee SET participant_id = ? WHERE participant_id IN (SELECT ROWID FROM Participant_ WHERE address IS NULL AND NAME IS NULL);
UPDATE Event SET organizer_id = ? WHERE organizer_id IN (SELECT ROWID FROM Participant_ WHERE address IS NULL AND NAME IS NULL);
select i1.rowid, i2.rowid from Identity i1, Identity i2 where i1.display_name = i2.display_name and i1.address = ("mailto:" || i2.address)
UPDATE Calendar SET self_identity_id = ? WHERE self_identity_id = ?;
UPDATE Calendar SET owner_identity_id = ? WHERE owner_identity_id = ?;
UPDATE CalendarItem SET modified_by_id = ? WHERE modified_by_id = ?;
UPDATE CalendarItem SET created_by_id = ? WHERE created_by_id = ?;
UPDATE Notification SET identity_id = ? WHERE identity_id = ?;
UPDATE Participant SET identity_id = ? WHERE identity_id = ?;
UPDATE ResourceChange SET identity_id = ? WHERE identity_id = ?;
UPDATE Sharee SET identity_id = ? WHERE identity_id = ?;
DELETE FROM Identity where rowid = ?;
update Identity set address = "mailto:" || address where rowid in (select s.rowid from Identity s where s.address not like "urn:uuid:%" and s.address not like "mailto:%" and s.address not like "http%" and s.address not like "/%");
Couldn't create a statement to prefix identity addresses with mailto:
Identity
EventExceptionDate
DELETE FROM ExceptionDate WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
CalExceptionDateSetDate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalExceptionDate.m
date != NULL
calendar_id = ?1 AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = ?2) AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?2) AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = ?3 AND client_identifier = ?2)
date
sync_order
EventExceptionDateEventId
ExceptionDateOwnerId
Store
CREATE TRIGGER delete_store_members AFTER DELETE ON Store
BEGIN
DELETE FROM Calendar WHERE store_id = OLD.ROWID;
END;
CREATE TRIGGER delete_store_changes AFTER DELETE ON Store
BEGIN
DELETE FROM CalendarChanges WHERE store_id = OLD.ROWID;DELETE FROM CalendarItemChanges WHERE store_id = OLD.ROWID;DELETE FROM AlarmChanges WHERE store_id = OLD.ROWID;DELETE FROM RecurrenceChanges WHERE store_id = OLD.ROWID;DELETE FROM ParticipantChanges WHERE store_id = OLD.ROWID;
END;
CREATE INDEX StoreExternalId on Store(external_id)
DROP TABLE StoreChanges;
DROP TRIGGER IF EXISTS delete_store_members;
DROP TRIGGER IF EXISTS delete_store_changes;
ALTER TABLE Store RENAME TO Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, NULL, type, constraint_path, disabled, external_id, NULL, NULL, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, NULL, type, constraint_path, disabled, external_id, persistent_id, NULL, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, NULL, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_error, last_sync_start, last_sync_end) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_error, last_sync_start, last_sync_end FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_error, last_sync_start, last_sync_end, delegated_account_owner_store_id ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_error, last_sync_start, last_sync_end, delegated_account_owner_store_id FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_error, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_error, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_error, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_error, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications FROM Store_;
DROP TABLE Store_;
SELECT rowid from Store;
UPDATE Store SET persistent_id="%@" WHERE rowid = %d;
DELETE FROM Calendar WHERE rowid NOT IN (SELECT Calendar.rowid FROM Calendar, Store WHERE Calendar.store_id = Store.rowid);
UPDATE Store SET constraint_path = NULL WHERE rowid = 1
UPDATE Store SET flags = %d WHERE ROWID = %d;
SELECT COUNT(rowid) from Store WHERE type = %i;
Found %i native stores.  Deleting all but store ID %i.
DELETE FROM Store WHERE type = %i AND rowid != %i
com.apple.dataaccessd-%@
 WHERE external_id = ?;
 WHERE persistent_id = ?;
CalDatabaseMigrateCalendarsWithEntityType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalStore.m
SELECT ROWID FROM CalendarItem WHERE end_date IS NOT NULL AND end_date < ? AND (orig_item_id == 0 OR orig_item_id == NULL) AND rowid NOT IN (SELECT owner_id FROM Recurrence) AND phantom_master == 0 AND calendar_id IN (SELECT rowid FROM Calendar WHERE store_id = ?)
SELECT ROWID FROM CalendarItem WHERE entity_type = ? AND end_date IS NOT NULL AND end_date < ? AND (orig_item_id == 0 OR orig_item_id == NULL) AND rowid NOT IN (SELECT owner_id FROM Recurrence) AND phantom_master == 0 AND calendar_id IN (SELECT rowid FROM Calendar WHERE store_id = ?)
SELECT ROWID from CalendarItem where rowid in (SELECT owner_id FROM Recurrence r, CalendarItem i WHERE i.rowid = r.owner_id AND ((cached_end_date IS NOT NULL AND cached_end_date < ?) OR (r.end_date IS NOT NULL AND r.end_date < ?)) AND ((SELECT COUNT(*) FROM CalendarItem where orig_item_id = i.rowid) == 0 OR (SELECT MAX(end_date) from CalendarItem where orig_item_id = i.rowid and end_date) < ?) AND (i.calendar_id IN (select rowid from Calendar where store_id = ?)))
SELECT ROWID from CalendarItem where entity_type = ? AND rowid in (SELECT owner_id FROM Recurrence r, CalendarItem i WHERE i.rowid = r.owner_id AND ((cached_end_date IS NOT NULL AND cached_end_date < ?) OR (r.end_date IS NOT NULL AND r.end_date < ?)) AND ((SELECT COUNT(*) FROM CalendarItem where orig_item_id = i.rowid) == 0 OR (SELECT MAX(end_date) from CalendarItem where orig_item_id = i.rowid and end_date) < ?) AND (i.calendar_id IN (select rowid from Calendar where store_id = ?)))
SELECT ROWID FROM CalendarItem master WHERE master.hidden == 1 AND master.phantom_master == 1 AND master.end_date < ? AND ((SELECT COUNT(*) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) == 0 OR (SELECT MAX(detached.end_date) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) < ?) AND master.calendar_id IN (SELECT ROWID from Calendar WHERE store_id = ?);
SELECT ROWID FROM CalendarItem master WHERE master.hidden == 1 AND master.phantom_master == 1 AND master.end_date < ? AND master.entity_type == ? AND ((SELECT COUNT(*) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) == 0 OR (SELECT MAX(detached.end_date) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) < ?) AND master.calendar_id IN (SELECT ROWID from Calendar WHERE store_id = ?);
default_alarm_offset
constraint_path
persistent_id
added_calendars
constraints
calendars
creator_bundle_id
creator_code_signing_identity
only_creator_can_modify
preferred_event_private_value
strictest_event_private_value
last_sync_error
last_sync_start
last_sync_end
dirty_sync_attributes
delegated_account_owner_store_id
delegated_account_default_calendar_for_new_events_id
delegated_account_default_calendar_for_new_events
shows_notifications
flags2
Couldn't open constraints file at path %s
INSERT INTO Store (ROWID, type, name, persistent_id, flags) VALUES (1, 0, 'Default', '%@', %d);
INSERT INTO Store (type, name, persistent_id, flags) VALUES (%d, 'Other', '%@', %d);
defaultAlarmOffset
creatorBundleID
creatorCodeSigningIdentity
onlyCreatorCanModify
preferredEventPrivateValue
strictestEventPrivateValue
constraintsDescriptionPath
lastSyncError
lastSyncStartDate
lastSyncEndDate
delegatedAccountOwnerStoreID
showsNotifications
delegateDataCleanupQueue
Store Without PersistentID
entityType
rowID
temporary
%@:///%@/%@%d
x-apple-eventkit
Ti,R,N,V_entityType
entityID
Ti,R,N,V_entityID
TB,R,N,GisTemporary,V_temporary
BOOL CalEventUpdateFromICSEventWithOptions(ICSEvent *__strong, ICSCalendar *__strong, CalEventRef, CalDatabaseRef, NSUInteger, __strong id<CDBAccountInfo>)
iCalExtraProperties
CalXProps
CalClassification
x_props
T@"NSDictionary",&,V_x_props
classification
Ti,V_classification
X-APPLE-NEEDS-REPLY
X-CALENDARSERVER-PRIVATE-COMMENT
X-CALENDARSERVER-ACCESS
X-APPLE-STRUCTURED-LOCATION
SELECT %s FROM %s WHERE ROWID = ?
UPDATE %s SET %s = ? WHERE ROWID = ?
UPDATE Location SET start_loc_owner_id = item_owner_id, item_owner_id = NULL WHERE rowid in (SELECT location.rowid FROM location INNER JOIN calendaritem ON calendaritem.start_location_id=location.rowid);
UPDATE Location SET client_loc_owner_id = item_owner_id, item_owner_id = NULL WHERE rowid in (SELECT location.rowid FROM location INNER JOIN calendaritem ON calendaritem.client_location_id=location.rowid);
DELETE FROM Location WHERE item_owner_id > 0 AND item_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
DELETE FROM Location WHERE alarm_owner_id > 0 AND alarm_owner_id NOT IN (SELECT ROWID FROM Alarm);
DELETE FROM Location WHERE start_loc_owner_id > 0 AND start_loc_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
DELETE FROM Location WHERE client_loc_owner_id > 0 AND client_loc_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
SELECT rowid FROM Location WHERE STRING_MATCHES(?, IFNULL(title, '')) OR STRING_MATCHES(?, IFNULL(address, ''))
CalDatabaseCopyLocationIdsThatMatchSearch
latitude
longitude
reference_frame
address_book_id
mapkit_handle
radius
routing
derived_from
item_owner_id
alarm_owner_id
start_loc_owner_id
client_loc_owner_id
item_owner
alarm_owner
start_loc_owner
client_loc_owner
LocationOwnerItemId
referenceFrame
addressBookEntityID
mapKitHandle
derivedFrom
alarmOwner
startLocationOwner
clientLocationOwner
%@ AND %@
%@ WHERE %@
%@ in ()
%@ IN ()
%@ = %@
%@ IN (%@)
%@ NOT IN (%@)
searchTerm
T@"NSString",C,N,V_searchTerm
Unexpected entity type for notification: %d
DELETE FROM Notification WHERE calendar_id NOT IN (SELECT ROWID FROM Calendar);
CalNotificationGetUID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalNotification.m
CalEntityIsOfType(notification, CalNotificationEntity)
CalDatabaseCopyNotificationsWithCalendar
entityType == CalNotificationEntity || entityType == CalInviteReplyNotificationEntity || entityType == CalResourceChangeNotificationEntity || entityType == CalSuggestionNotificationEntity || entityType == CalUndefinedEntity
invite_reply_calendar_id
host_url
in_reply_to
invite_reply_calendar
NotificationUUIDOwnerId
UUID, owner_id
NotificationUUIDCalendarId
UUID, calendar_id
NotificationOwnerId
NotificationEntityType
NotificationExternalIDOwnerId
external_id, owner_id
NotificationExternalIDCalendarId
NotificationCalendarId
delete_resource_changes_for_notification
DELETE FROM ResourceChange WHERE notification_id NOT IN (SELECT ROWID FROM Notification WHERE entity_type = 17 OR entity_type = 19);
_CalCreateNotification
entityType == CalInviteReplyNotificationEntity || entityType == CalResourceChangeNotificationEntity || entityType == CalNotificationEntity || entityType == CalSuggestionNotificationEntity
WHERE UUID = ? AND notification.entity_type = ?
WHERE notification.entity_type = ?
JOIN Calendar ON notification.calendar_id = Calendar.ROWID WHERE notification.entity_type = ? AND store_id = ?
kCalEventOccurrenceCacheChangedNotification
OccurrenceCacheLastSavedDay
SELECT COUNT() FROM OccurrenceCacheDays LIMIT 1
SELECT COUNT(*) FROM OccurrenceCache WHERE event_id NOT IN (SELECT ROWID FROM CalendarItem);
EventKitOC: *** INTEGRITY FAILURE *** There were orphaned entries in the cache
DELETE FROM OccurrenceCache WHERE event_id NOT IN (SELECT ROWID FROM CalendarItem);
EventKitOC: *** CLEAN ORPHAN FAILURE *** Got error code %i when attempting to clean orphans
com.apple.calendar.database.occurrencecache.db
CREATE TABLE OccurrenceCache (day REAL, event_id INTEGER, calendar_id INTEGER, store_id INTEGER, occurrence_date REAL, occurrence_start_date REAL, occurrence_end_date REAL);
CREATE TABLE OccurrenceCacheDays (calendar_id INTEGER, store_id INTEGER, day REAL, count INTEGER, PRIMARY KEY (calendar_id, day));
CREATE TRIGGER update_cache_days_after_delete AFTER DELETE ON OccurrenceCache
BEGIN
UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = OLD.calendar_id;UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = -2;
END;
CREATE TRIGGER update_cache_days_after_insert AFTER INSERT ON OccurrenceCache
BEGIN
REPLACE INTO OccurrenceCacheDays VALUES (NEW.calendar_id, NEW.store_id, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = NEW.calendar_id), 0));
REPLACE INTO OccurrenceCacheDays VALUES (-2, -2, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = -2), 0));
END;
CREATE TRIGGER update_cache_days_after_update AFTER UPDATE OF day ON OccurrenceCache
BEGIN
REPLACE INTO OccurrenceCacheDays VALUES (NEW.calendar_id, NEW.store_id, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = NEW.calendar_id), 0));
REPLACE INTO OccurrenceCacheDays VALUES (-2, -2, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = -2), 0));
UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = OLD.calendar_id;UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = -2;
END;
DROP TRIGGER update_cache_days_after_delete;
DROP TRIGGER update_cache_days_after_insert;
ALTER TABLE OccurrenceCache RENAME TO OccurrenceCache_;
ALTER TABLE OccurrenceCacheDays RENAME TO OccurrenceCacheDays_;
DROP TRIGGER IF EXISTS update_cache_days_after_update;
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date) SELECT day, event_id, CalendarItem.calendar_id, %d, occurrence_date, occurrence_start_date FROM OccurrenceCache_ JOIN CalendarItem ON CalendarItem.ROWID = event_id;
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date) SELECT day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date FROM OccurrenceCache_;
DROP TABLE OccurrenceCache_;
DROP TABLE OccurrenceCacheDays_;
ALTER TABLE OccurrenceCache ADD COLUMN occurrence_end_date REAL;
SELECT day, SUM(count) FROM OccurrenceCacheDays
GROUP BY day ORDER BY day
SELECT day, event_id, IFNULL(occurrence_start_date, occurrence_date) AS fetched_occurrence_start_date FROM OccurrenceCache
day = ?
ORDER BY day, occurrence_date ASC
ORDER BY occurrence_date
SELECT event_id, occurrence_date FROM OccurrenceCache
occurrence_date > ?
occurrence_date > ? AND event_id IN (%@)
SELECT occurrence_date FROM OccurrenceCache
SELECT COUNT() FROM OccurrenceCache WHERE occurrence_date > ? AND event_id = ? LIMIT 1
SELECT event_id, occurrence_date, occurrence_start_date FROM OccurrenceCache
occurrence_date >= ? AND event_id = ?
ORDER BY occurrence_date ASC
occurrence_date < ? AND event_id = ?
ORDER BY occurrence_date DESC
SELECT event_id, occurrence_date, occurrence_start_date, day FROM OccurrenceCache
day >= ? AND event_id = ?
SELECT event_id, occurrence_date, occurrence_start_date, day FROM OccurrenceCache INDEXED BY OccurrenceCacheDayEventIdOccurrenceDate
day < ? AND event_id = ?
SELECT event_id, occurrence_date FROM OccurrenceCache WHERE day = ? ORDER BY occurrence_date ASC LIMIT 1 OFFSET ?
occurrence_date > ? AND occurrence_date <= ?
_CalDatabaseCopyEventOccurrencesThatMatchEventIds
SELECT occurrence_date FROM OccurrenceCache WHERE occurrence_date > ? AND occurrence_date <= ? AND  event_id = ? ORDER BY occurrence_date ASC LIMIT 1;
SELECT occurrence_date FROM OccurrenceCache WHERE occurrence_date >= ? AND occurrence_date <= ? AND event_id = ? ORDER BY occurrence_date DESC LIMIT 1;
_CalDatabaseDateOfEventOccurrencesCloserToDate
[%s] Could not get the forward search query statement
CalDate _CalDatabaseDateOfEventOccurrencesCloserToDate(CalDatabaseRef, int, CFAbsoluteTime, CFAbsoluteTime, CFAbsoluteTime)
[%s] Could not get the backwards search query statement
DELETE FROM OccurrenceCache WHERE event_id = ?;
DELETE FROM OccurrenceCacheDays WHERE count = 0;
OccurrenceCacheTimeZone
ForceRebuildSeed
EventKitOC: Unable to start transaction (error %d). Aborting rebuild.
com.apple.calendar.occurrenceCacheRebuilds
UPDATE OccurrenceCacheDays SET store_id = %d WHERE store_id = %d;
UPDATE OccurrenceCache SET store_id = %d WHERE store_id = %d;
UPDATE OccurrenceCacheDays SET calendar_id = %d WHERE calendar_id = %d;
UPDATE OccurrenceCache SET calendar_id = %d WHERE calendar_id = %d;
EventKitOC: *** ERROR *** No transaction is in effect! This may end poorly.
DELETE FROM OccurrenceCache WHERE occurrence_date < ? AND ROWID IN (SELECT ROWID FROM OccurrenceCache JOIN CalendarItem ON CalendarItem.ROWID = OccurrenceCache.event_id WHERE CalendarItem.has_recurrences = 1 AND CalendarItem.entity_type = 2);
Insert Corrupt Occurrence - GenerateOccurrences
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date, occurrence_end_date) values (?, ?, ?, ?, ?, ?, ?);
CalEventOccurrenceCache
CREATE INDEX OccurrenceCacheDayEventIdOccurrenceDate on OccurrenceCache(day, event_id, occurrence_date);
CREATE INDEX OccurrenceCacheOccurrenceDateEventId on OccurrenceCache(occurrence_date, event_id);
CREATE INDEX OccurrenceCacheCalendarId on OccurrenceCache(calendar_id);
CREATE INDEX OccurrenceCacheDaysCount on OccurrenceCacheDays(count);
CREATE INDEX OccurrenceCacheDaysDayCalendarId on OccurrenceCacheDays(day, calendar_id);
DROP INDEX OccurrenceCacheDay;
DROP INDEX OccurrenceCacheOccurrenceDate;
DROP INDEX OccurrenceCacheEventId;
DROP INDEX OccurrenceCacheDayCalendarId;
DROP INDEX OccurrenceCacheDayStoreId;
DROP INDEX OccurrenceCacheStoreIdOccurrenceDate;
DROP INDEX OccurrenceCacheCalendarIdOccurrenceDate;
DROP INDEX OccurrenceCacheDaysCount;
DROP INDEX OccurrenceCacheDaysStoreIdDay;
 WHERE %@ AND calendar_id != -2
 WHERE store_id != -2 AND store_id NOT IN 
 WHERE calendar_id = -2
 LIMIT %d
occurrenceCount
eventUID
occurrenceDate
SELECT event_id, IFNULL(occurrence_start_date, occurrence_date) AS fetched_occurrence_start_date, occurrence_end_date FROM OccurrenceCache
day >= ? AND day < ?
GROUP BY event_id, fetched_occurrence_start_date
Unable to malloc a _CalEventOccurrenceWithoutEvent
Occurrence cache is pointing to nonexistent event %d
Insert Corrupt Occurrence - ProcessAdds
EventKitOC: Unable to start transaction (error %d). Aborting time zone update.
SELECT occurrencecache.ROWID, occurrence_date, occurrence_start_date, occurrence_end_date, CalendarItem.all_day, CalendarItem.start_tz FROM OccurrenceCache, CalendarItem where CalendarItem.ROWID = occurrencecache.event_id;
UPDATE OccurrenceCache SET day = ? WHERE ROWID = ?;
UPDATE OccurrenceCache SET day = ?, occurrence_date = ?, occurrence_end_date = ? WHERE ROWID = ?;
UPDATE OccurrenceCache SET day = ?, occurrence_date = ?, occurrence_start_date = ?, occurrence_end_date = ? WHERE ROWID = ?;
occurrenceEndDate
occurrenceStartDate
DELETE FROM OccurrenceCache;
DELETE FROM OccurrenceCacheDays;
CDBCommonEntityFunctionalityHandler.lock
lock
T@"NSObject<OS_dispatch_queue>",&,N,V_lock
destructionObservers
T@"NSMutableSet",&,N,V_destructionObservers
DELETE FROM Sharee WHERE owner_id NOT IN (SELECT ROWID FROM Calendar);
CalShareeGetUID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase-788/CalendarDatabase/CalSharee.m
CalEntityIsOfType(sharee, CalShareeEntity)
OwnerID
Name
Address
access_level
ShareeUUID
ShareeOwnerId
ShareeStatus
ShareeAccessLevel
ShareeIdentityId
accessLevel
CalAlarmOccurrence
Database
domain
T@"NSString",R,N
subtype
T@"NSString",&,N,V_subtype
subtypeContext
T@"NSString",&,N,V_subtypeContext
T@"NSArray",&,N,V_events
ignoreRateLimiting
TB,N,V_ignoreRateLimiting
ExternalFolderID
ExternalScheduleID
DELETE FROM EventAction WHERE event_id NOT IN (SELECT ROWID FROM CalendarItem);
SELECT EventAction.ROWID, EventAction.event_id, EventAction.external_id, EventAction.external_mod_tag, EventAction.external_folder_id, EventAction.external_schedule_id, EventAction.external_rep FROM EventAction JOIN CalendarItem ON EventAction.event_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?;
external_folder_id
EventActionEventId
EventActionExternalId
EventActionFolderId
externalModTag
externalFolderID
 JOIN CalendarItem ON event_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE EventAction.external_id = ? 
Meventaction
external_folder_id = ?
Meventaction.external_id = ?;
CalEventOccurrence
DisableOccurrenceCache
DELETE FROM SuggestedEventInfo WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
_CalSuggestedEventInfoInsertAndUpdateNotificationsForEvent
opaque_key
unique_key
changed_fields
changes_acknowledged
SuggestedEventInfoOwnerId
opaqueKey
uniqueKey
changedFields
changesAcknowledged
geo:%f,%f
changeID
Tq,R,N,V_changeID
CalDatabaseIdleChangeTrackingClientWasPurgedNotification
CREATE TABLE ClientCursor (     ROWID INTEGER PRIMARY KEY AUTOINCREMENT,     client_identifier TEXT,     store_id INTEGER,     latest_consumed_sequence_number INTEGER,     latest_consumed_timestamp REAL,     UNIQUE(client_identifier) );
CREATE INDEX ClientCursorClientIdentifier ON ClientCursor(client_identifier); 
CREATE TABLE ClientSequence (client_identifier TEXT, sequence_number INTEGER );
CREATE INDEX ClientSequenceClientIdentifier ON ClientSequence(client_identifier); 
CREATE TABLE ClientCursorConsumed (    client_identifier TEXT,     consumed_entity_class INTEGER,     consumed_entity_id INTEGER,     consumed_change_id INTEGER,     sequence_number INTEGER );
CREATE INDEX ClientCursorConsumedClientIdentifier ON ClientCursorConsumed(client_identifier); 
CREATE TRIGGER delete_clientcursor_consumed AFTER DELETE ON ClientCursor     BEGIN         DELETE FROM ClientCursorConsumed WHERE client_identifier = OLD.client_identifier;         DELETE FROM ClientSequence WHERE client_identifier = OLD.client_identifier;     END; 
ALTER TABLE ClientCursor ADD COLUMN     store_id INTEGER;
INSERT INTO ClientSequence (client_identifier, sequence_number) VALUES (?, ?);
sequence_number > ?  AND entity_type = ?  AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)  AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE client_identifier = ? AND consumed_entity_class = ?)
sequence_number > ?  AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)  AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE client_identifier = ? AND consumed_entity_class = ?)
 AND %@ = ?
v36@?0r^{?=*^?^?^?^?^?^?C^vi^{?}^v*^?^?i^{?}i^?}8i16B20@?<v@?^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}>24i32
%@ <%p> {minConsumedClientIdentifier "%@"; minConsumedSequenceNumber = %d; secondMinConsumedSequenceNumber = %d}
minConsumedSequenceNumber
Ti,N,V_minConsumedSequenceNumber
minConsumedClientIdentifier
T@"NSString",&,N,V_minConsumedClientIdentifier
secondMinConsumedSequenceNumber
Ti,N,V_secondMinConsumedSequenceNumber
%@ <%p> {clientIdentifier "%@"; consumedSequenceNumber = %d}
clientIdentifier
T@"NSString",&,N,V_clientIdentifier
consumedSequenceNumber
Ti,N,V_consumedSequenceNumber
DELETE FROM ClientCursorConsumed;
UPDATE ClientCursor SET latest_consumed_timestamp = ?, latest_consumed_sequence_number = ?;
CalDatabasePersistentChangeTracking: unable to start transaction (error %d)
SELECT COUNT(*) FROM %@Changes WHERE ROWID = ? AND sequence_number > ?
INSERT INTO ClientCursorConsumed (client_identifier, consumed_entity_class, consumed_entity_id, consumed_change_id, sequence_number) VALUES (?, ?,  (SELECT record FROM %@Changes WHERE ROWID = ? LIMIT 1),  ?,  (SELECT sequence_number FROM %@Changes WHERE ROWID = ?) )
CalDatabasePersistentChangeTracking: unable to commit transaction (error %d)
SELECT client_identifier FROM ClientCursor;
SELECT client_identifier FROM ClientCursor WHERE store_id = ?;
DELETE FROM ClientCursor WHERE client_identifier = ?;
SELECT client_identifier FROM ClientCursor WHERE latest_consumed_timestamp < ? OR (store_id = 0 AND (SELECT count(*) FROM CalendarItemChanges WHERE sequence_number > latest_consumed_sequence_number AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE ClientSequence.client_identifier = ClientCursor.client_identifier)) > ?);
Purging change-tracking client %@ which has been idle since %f or is tracking all stores and is behind more more than %d changes
INSERT OR REPLACE INTO ClientCursor (client_identifier, store_id, latest_consumed_sequence_number, latest_consumed_timestamp) VALUES (?, ?, (SELECT MIN(IFNULL(MIN(latest_consumed_sequence_number), 0), ?) FROM ClientCursor WHERE client_identifier = ?), ?);
SELECT IFNULL(MIN(latest_consumed_sequence_number), -1) FROM ClientCursor WHERE client_identifier = ?;
B24@?0@8^B16
(store_id == %d) AND ((sequence_number <= %d) OR ((sequence_number <= %d) AND (sequence_number IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier == "%@"))))
(store_id == %d) AND (sequence_number <= %d)
store_id == %d
(%@) OR sequence_number IS NULL OR store_id = 0
sequence_number <= %d
DELETE FROM ClientSequence WHERE ClientSequence.sequence_number NOT IN 
AND ClientSequence.sequence_number NOT IN 
(SELECT DISTINCT %@Changes.sequence_number FROM %@Changes WHERE %@Changes.sequence_number IS NOT NULL)
SELECT DISTINCT IFNULL(store_id, 0) FROM ClientCursor;
SELECT client_identifier, IFNULL(latest_consumed_sequence_number, -1) FROM ClientCursor WHERE (IFNULL(store_id, 0) == 0 OR (store_id == ?)) ORDER BY latest_consumed_sequence_number
DELETE FROM ClientCursorConsumed WHERE client_identifier = ? AND IFNULL(sequence_number, 0) <= ?;
UPDATE ClientCursor SET latest_consumed_timestamp = ?, latest_consumed_sequence_number = MAX(?, MIN((SELECT latest_consumed_sequence_number FROM ClientCursor WHERE client_identifier = ?), ?)) WHERE client_identifier = ?;
category_id
category
context
Integrity
DELETE FROM Attachment WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
JOIN CalendarItem ON owner_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?
ATTACHMENT CLEAN UP ERROR - Could not delete orphaned file at path (%@): %@
ATTACHMENT CLEAN UP ERROR - Could not delete empty source directory: %s
data
format
is_binary
filename
local_url
file_size
url_pending_copy
AttachmentEventId
AttachmentUUID
isBinary
fileSize
xprops
externalId
Attachment failed to copy to local storage: %d
x-apple-reminder://%@
WHERE entity_type = 3 AND (due_date NOT NULL OR completion_date NOT NULL)
WHERE entity_type = 3 AND (due_date NOT NULL OR completion_date NOT NULL)                                    AND (                                           (due_date NOT NULL AND due_all_day = 0 AND due_date >= ? AND due_date < ?)                                        OR (due_date NOT NULL AND due_all_day = 1 AND due_date >= ? AND due_date < ?)                                        OR (completion_date NOT NULL AND completion_date >= ? AND completion_date < ?)                                    )
 WHERE summary = ?
 AND due_date = ?
SELECT count(CalendarItem.rowid) from CalendarItem 
 JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID
 WHERE entity_type = %d
STRING_MATCHES_WORD
STRING_MATCHES_PREFIX
 AND STRING_MATCHES_WORD(?, IFNULL(summary, ''))
 AND (((calendar.title != ? AND calendar.title != ?) AND STRING_MATCHES_PREFIX(?, IFNULL(summary, '') || ' ' || IFNULL(calendar.title, ''))) OR ((calendar.title = ? OR calendar.title = ?) AND STRING_MATCHES_PREFIX(?, IFNULL(summary, '') || ' ' || ?) ))
 AND (((calendar.title != ? AND calendar.title != ?) AND STRING_MATCHES_WORD(?, IFNULL(calendar.title, ''))) OR ((calendar.title = ? OR calendar.title = ?) AND STRING_MATCHES_WORD(?, ?)))
 AND (
(completion_date >= ?)
(completion_date < ?)
 AND ((
(((due_tz IS NOT NULL AND due_tz != ?) AND due_date >= ?) OR ((due_tz IS NULL OR due_tz = ?) AND due_date >= ?))
(((due_tz IS NOT NULL AND due_tz != ?) AND due_date < ?) OR ((due_tz IS NULL OR due_tz = ?) AND due_date < ?))
) OR (
 AND completion_date IS NOT NULL
 AND completion_date IS NULL
 ORDER BY completion_date DESC
 ORDER BY CalendarItem.display_order ASC, creation_date ASC
 ORDER BY CalendarItem.display_order DESC, creation_date DESC
 ORDER BY due_date ASC
 LIMIT ?
DELETE FROM Contact WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
SELECT COUNT(*) FROM Contact WHERE contact_id = ?
SELECT owner_id FROM Contact WHERE contact_id = ?
contact_id
ContactID
store_id = %d AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@') AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@') AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
stateChangedNotificationName
deviceLockObserver
T@"CalDeviceLockObserver",&,N,V_deviceLockObserver
stateChangedCallback
T@?,C,N,V_stateChangedCallback
dataIsAccessible
TB,R,N
@333333
Mbp?
Unable to get database connection to clean up danglers.
Creating database with options [%@] and path [%@].
****** [CDB MIGRATION] Migration needed
****** [CDB MIGRATION] Migration not needed
Skipping reminders migration because ReminderMigration.framework is not available
Failed to get a CalReminderKitDatabaseMigrationContext. Skipping reminders migration
ReminderKit wants migration = %d
Needs reminder migration cleanup = %d
****** [CDB MIGRATION] Performing reminders migration
****** [CDB MIGRATION] Finished reminders migration
Skipping reminders migration because it is not needed
****** [CDB Spotlight indexing] Spotlight reindex needed
****** [CDB MIGRATION] Beginning migration
****** [CDB MIGRATION] Finished all migration tasks
Attempting to rebuild the occurrence cache.
No database provided.  Will not rebuild the occurrence cache.
Could not acquire the occurrence cache.  Will not rebuild the occurrence cache.
Posting Darwin notification: [%@].
Unsupported entity type %i
Passed in %lu values but %lu value types.
Wrong type for parameter %i; expected int but got %@
Wrong type for parameter %i; expected string but got %@
Wrong type for parameter %i; expected date but got %@
Unsupported property type %i
****** [CDB Spotlight indexing]  Beginning delete of events
****** [CDB Spotlight indexing] Event delete finished, beginning index
****** [CDB Spotlight indexing] Indexing %lu events
****** [CDB Spotlight indexing] Finished indexing %lu events
****** [CDB Spotlight indexing] Beginning wait for spotlight operations
Failed to push spotlight updates
****** [CDB Spotlight indexing] Finished wait, spotlight complete
Couldn't construct a path to the calendar database.
Couldn't get the path to the calendar database.
Migrating Calendar database from version %d to version %d...
No 'database' given.  Will not adjust profile logging.
Execution time was [%@] milliseconds for statement: [%@]
%@ %@
Received notification: [%@]
[%@] profile logging for database: [%p]
[%@] greentea logging for database: [%p]
Commencing database save for client with identifier [%@].  Commit: [%@]
No record store found.  Will not proceed with saving the database.
CalDatabaseSaveInternal: failed to get recordID for updated record with rowid [%d], deleted: %d
CalDatabaseSaveInternal: failed to get recordID for deleted record with rowid [%d], deleted: %d
CalDatabaseSaveInternal: failed to get recordID for added record with rowid [%d], deleted: %d
Database save complete.  Commit: [%@].  Total time spent: [%@] milliseconds.
NULL 'database' given.  Will not log database changes to be saved.
No recordStore found.  Will not log database changes to be saved.
Commencing log of changes to be saved.
Added entity: [%@]
Updated entity: [%@]
Deleted entity: [%@]
Completed log of changes to be saved.
Organizer has no owner.  We need to remove it.
Attendee has no owner. We need to remove it.
Failed to push spotlight deletes
****** [CDB Spotlight indexing] Beginning spotlight
****** [CDB Spotlight indexing] Will index %ld events %ld tasks
****** [CDB Spotlight indexing] Deleting tasks
Error deleting searchable items for reminders, error = %@
****** [CDB Spotlight indexing] Tasks deleted, beginning index
****** [CDB Spotlight indexing] Deleting events
Error deleting searchable items for calendar, error = %@
****** [CDB Spotlight indexing] Events deleted, beginning index
****** [CDB Spotlight indexing] Finished indexing
No existing database handle while handling corrupt database error.
Calendar database corrupted with extended sqlite code %i; header from corrupt database=%@
Reading sqlite database header failed; sqlitecode=%i, sqlite_last_errno=%i, sqlite3_file_control return value=%i
Unable to get sqlite3_file: %i
saving a recurrence with owner_id 0: relation=%p, owner=%@
Encountered an unknown CalEventStatus: %d
Encountered an unhandled ICSStatus: %d
Encountered an unknown ICSStatus: %d
Encountered an unknown CalEventPrivacyLevel: %d
Encountered an unknown ICSCalendarServerAccess: %d
Encountered an unknown CalAlarmType: %d
Encountered an unknown ICSAction: %d
Encountered an unknown calendar frequency: %d
Encountered an ICS frequency that the calendar database doesn't handle: %d. Defaulting to daily
Encountered an unknown ICS frequency: %d
Encountered an unknown CalDayOfWeek: %d
Encountered an unknown ICSWeekday: %d
Encountered an unknown CalMonthOfYear: %d
Encountered an unknown ICSMonth: %d
Encountered an unknown CalAttendeeType: %d
Encountered an unknown ICSCalendarUser: %d
Encountered an unknown CalAttendeeRole: %d
Encountered an unknown ICSRole: %d
Encountered an unknown CalAttendeeStatus: %d
Encountered an unhandled ICSParticipationStatus: %d
Encountered an unknown ICSParticipationStatus: %d
NULL 'item' given.  Will not determine if there is a preferred location.
NULL 'item' given.  Will not return a preferred location.
Calendar item row handler has no uuid context. Aborting sqlite statement.
Could not get uuid column text for sqlite statement
Could not get uuid string from utf8 string = %s
Could not save database.
Could not get account persistent id for store. store uid = %d
Could not get attachment container for store. store uuid = %{public}@, legacy attachment container = %@
Could not get attachment container path for store. store uuid = %{public}@, legacy attachment container = %@
Legacy attachment container for store does not exist. store uuid = %{public}@, legacy attachment container for store path = %@
Legacy attachment container for store is not a directory. store uuid = %{public}@, legacy attachment container for store path = %@
Could not get new calendar data container. persona identifier = %@, store uuid = %{public}@
Could not get new attachment container. persona identifier = %@, store uuid = %{public}@, new calendar data container = %@
Could not get new attachment container for store. store uuid = %{public}@, new attachment container = %@
Could not create new attachment container for store if needed. error = %@, new attachment container for store = %@
Could not move attachments for store. error = %@, legacy attachment container for store = %@, new attachment container = %@, attachment info = %@
Could not get attachment. attachment uuid = %{public}@, local relative path = %{public}@
Setting file size for attachment uuid = %{public}@, attachment url = %@
Could not get file size. error = %@, attachment uuid = %{public}@, attachment path = %@
Could not get attachment. attachment uuid = %{public}@, attachment path = %@, file size = %@
Could not get attachment for file name = %@
Could not get new attachment local relative path. attachemnt uuid = %@ new attachment url = %@, new calendar data container = %@
New container path is nil. new attachment container = %@
Fixing up dataclass protection for calendar attachments
Could not get legacy attachment container
Setting dataclass protection for attachment: %@
Setting until date: %@ (%f)
Setting by day days array: %@
Setting by month array: %@
setting by month day array: %@
Setting by weekno array: %@
Setting by year day array: %@
Setting by set pos array: %@
NULL 'entity' given.  Will not acquire a common entity functionality handler.
Could not find the raw type of the given entity.  Will not get a common entity functionality handler property ID.
Could not find the property ID for the entity with raw type [%@].  Will not get a common entity functionality handler.
%s: No default set. Getting first suitable read-write calendar.
%s: Failed to find either default or suitable read-write calendar. Making one.
%s: Failed to find a non-hidden calendar for %s. Making one
%s: Failed to get default calendar for reminders. Making one
Given 'relation' is NULL.  Will not eliminate related object reference.
Given 'relation' is NULL.  Will not get related object reference.
Given 'relation' is NULL.  Will not set related object reference.
NULL 'entity' given.  Will not generate a debug description.
typeId != CPRecordGetTypeID(), CPRecordGetTypeID(): %lu, typeId: %lu
NULL 'participant' given.  Will not generate a debug description.
Record with a rowID of [%@] found.  Record pointer address: [%p].  Will not load record ID.
Record with pointer address of [%p] was marked as being deleted.
Record with pointer address of [%p] was not marked as being deleted.
NULL 'event' given.  Will not generate a debug description.
Rectifying recurrence series privacy levels for event with ID: [%d] title: [%@]
Privacy level change to [%@] detected on event with ID: [%d]
The store for the event with ID [%d] requires the same privacy level across the recurrence series: [%@]
Privacy level override for event with ID [%d] is [%@].
Event with ID [%d] is a detached event.  Grabbed the master event with ID [%d].
Event with ID [%d] is a master event.
Master event with ID [%d] for event with ID [%d] had its privacy level changed from [%@] to [%@].
Detached event with ID [%d] associated with event with ID [%d] had its privacy level changed from [%@] to [%@].
Attempting to add an event (ROWID = %d, startDate = %{public}@) as a detachment of itself. Ignoring.
No event given.  Will not determine travel advisory eligibility.
Event is not a candidate for travel advisories because it is a cancelled event.  Summary: [%@]
Event is not a candidate for travel advisories because it is an all-day event.  Summary: [%@]
Event is not a candidate for travel advisories because the user declined the event.  Summary: [%@]
Event is not a candidate for travel advisories because its travel advisory behavior is not 'automatic' or 'enabled'.  Summary: [%@]
Event is not a candidate for travel advisories because its calendar has all event alerts disabled.  Summary: [%@]
NULL 'event' given.  Will not determine immediate eligibility for travel advisory
Could not fetch predicted location of interest for event title: [%@], event location: [%@], calendar identifier: [%@], error: [%@]
failed to create statement for reading with query: `%@`
Multiple relationships to the same location: Location is the same value as clientLocation. recordID=%i, location=%i, clientLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: Location is the same value as startLocation. recordID=%i, location=%i, startLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: clientLocation is the same value as startLocation. recordID=%i, clientLocation=%i, startLocation=%i, currently setting %i; original value for property set = %i
Error unarchiving local structured data. Error: %@
Couldn't create a path to write the inline attachment into
Error writing inline attachment (%@) to disk: %@
Error setting file data (%@) in database
Found an x-prop: %@
Memory mapping the file at %@
Can't get file system representation for backup file path %@
Memory mapping a zero byte file
Successfully mapped %@ (%lld bytes)
Could not mmap %@: %s
Unmapped %zu bytes
Searching for an event with a unique identifier matching %@
Found identity match for event %@ in calendar %@
The local event has a greater sequence number. Refusing to update the event
The local event has a greater last modified date. Refusing to update this event
Don't create a new event in case of METHOD:REPLY in ics.
Couldn't find an existing event in the calendar database. Creating a new one.
Couldn't update CalEvent from icsEvent %@
Found identity match for task %@ in calendar %@
The local event has a greater dtstamp. Refusing to update this event
Couldn't find a task with external id %@ in the calendar database. Creating a new one.
Couldn't update CalTask from icsEvent %@
ICSEvent has %lu detached events
Setting %d as the original event for %d
Encountered an unknown ICSComponent in the calendar: %@
Import of iCalendar data requested.  Data: [%@]
Could not parse ICSDocument from data: %@
Component found for component key: [%@].  Will not attempt to create a phantom master.
Component not found for component key: [%@].  Attempting to create a phantom master.
Phantom master with UID [%@] is scheduled to be added already.  Will not create phantom master.
Creating a phantom master with UID: [%@].
[%lu] Phantom masters were created.  Adding them to the list of components.
iCalendar items will be generated from database items.  includeParentChain: [%@]
Couldn't create ICSComponents for cal item with uid %d
Could not convert the original CalEvent
This event has %@ detached events
Could not convert the detached event with the cal uid %d
Could not convert the original calTask
icsItem is nil. There's nothing for us to do
Cannot update a NULL calendar item
Updating attendees in the database for calendar item: [%@]
Removing [%@] existing attendees on calendar item: [%@]
Removing attendee [%@] on event with UID: [%@]
Adding [%@] attendees from the iCalendar object onto the calendar item: [%@]
Adding attendee [%@] for event with UID [%@]
Has new proposed time: [%{public}@]. Proposed start date status: [%{public}@]. Proposed start date: [%{public}@]. Attendee uuid: [%{public}@].
Couldn't update the CalAttendee from %@
Couldn't update organizer from %@
Couldn't create a new CalOrganizer object
Encountered an unknown subcomponent for an ICSComponent: %@. Dropping it on the floor
Couldn't update calendar alarm from ICSAlarm: %@
Couldn't update the CalRecurrenceRef from %@
Generating iCalendar objects for attendees on event: [%@]
Generating iCalendar object for attendee: [%@]
Couldn't create an icsUser from attendee %d
Couldn't create an ICSRecurrence
Setting %ld exception dates on the ICS component
Couldn't create an ICS attachment from attachment %d
Error unarchiving alarm metadata: %@
Error archiving alarm metadata: %@
CalDatabaseCopyStoreWithExternalID: no results for query
CalDatabaseCopyStoreWithExternalID: query resulted in nil results
CalDatabaseCopyStoreWithExternalID: failed to get sqlite database
CalDatabaseCopyStoreWithExternalID: failed to create query
CalDatabaseCopyStoreWithExternalID: externalID is nil
database was busy or locked; sleeping for 1 second
Ignoring attempt to set allowsTasks to %d on store %{public}@. Forcing to NO
Saving a store with no persistent ID (source identifier). UID = %i, original persistent ID = %@
icsEvent is nil. There's nothing for us to do
Cannot update a NULL Cal event
CalCalendarItemUpdateFromICSComponent failed
%s - No existing suggested event info for calEvent %@ and icsEvent %@, creating one
%s - Existing suggested event info %@ found for calEvent %@ and icsEvent %@
Setting a recurrence_id based on %f
Couldn't update the calendar item components of event %d
Using uid from owning event: %@
Owning event had no uid. Creating a new one: %@
This event has no original event. Creating a new uid %@
Initializing calItem metadata
Failed to unarchive external data for item. Error = %@
Unknown object in external data for item.  Dropping it.  object is %@
exception %@ while trying to unarchive external data for item
Error archiving item metadata: %@
Error archiving external representation dictionary: %@
Failed to unarchive external data to fetch item metadata. Error = %@
Failed to unarchive extra properties from external data. Error = %@
exception %@ while trying to convert item
Location to be removed (%i) has an owner of calendar item %i, but that calendar item doesn't reference that location.
NULL 'location' given.  Will not return a full display string.
Location is being saved with no valid inverse relationship. location id = %i; alarm_owner_id = %i; item_owner_id = %i; start_location_owner_id = %i; client_location_owner_id = %i; previous alarm_owner_id = %i; previous location_owner_id = %i; previous start_location_owner_id = %i; previous client_location_owner_id = %i;
Occurrence cache trim and extend requested.
Could not acquire a database object.  Will not trim and extend the occurrence cache.
Could not open a connection to the database.  Will not trim and extend the occurrence cache.
EventKitOC: Unable to start transaction (SQLite error [%d]). Aborting trim/extend.
Could not find a value for [%@].  Will not trim and extend the occurrence cache.
Found a last saved date of [%@].
Today [%@] is after the last saved date [%@].  Will not trim and extend the occurrence cache.
Trim and extend complete in %f
Trim and extend not needed
EventKitOC: Checking if we need to rebuild
EventKitOC: Rebuilding cache in time zone %@...
EventKitOC: Cache rebuilt in %f
The occurrence cache is not valid.  Will not rebuild the occurrence cache.
Could not acquire the database lock.  Will not rebuild the occurrence cache.
Unable to start transaction (SQLite error: [%d]).  Will not rebuild the occurrence cache.
The occurrence cache was successfully rebuilt.
Preparing to trim and extend the occurrence cache.  startDateAbs: [%@] todayAbs: [%@] lastSaved: [%@]
Removing occurrences in the occurrence cache before [%@]
Rebuilding occurrence cache from start date [%@] to end date [%@].
Found [%@] non-recurring events in the date range.
Found [%@] recurring events possibly in the date range.
Occurrence cache candidate event fetching took [%@] seconds and found [%@] total events.
Analyzing occurrence cache candidate event.   Row ID: [%@]  Title: [%@]
Event with row ID [%@] is not displayable.  Will not insert into occurrence cache.
Found [%@] occurrence dates in the date range for candidate event with row ID [%@].  Number of days spanned: [%@]
Inserting an event with id -1 into the occurrence cache in _CalEventOccurrenceCacheGenerateOccurencesInDateRange. event=%@
Determining if occurrence chunk with date [%@] for event with row ID [%@] should be included in the occurrence cache.
Occurrence cache rebuilt.  Took [%f] seconds.  Was cache modified: [%@]
Inserting occurrence into occurrence cache.  event_id: [%@],  calendar_id: [%@], store_id: [%@], occurrence_date: [%@], occurrence_start_date: [%@].  occurrence_end_date: [%@], day: [%@]
Skipping invalid entry in occurrence cache occurring at %f with eventID -1
EventKitOC: Event duration is too long, not adding to occurrence cache.
Inserting an event with id -1 into the occurrence cache in _CalEventOccurenceCacheProcessAdds. event=%@
EventKitOC: Adjusting for time zone change
EventKitOC: Time zone was %@, now %@
EventKitOC: Done with time zone adjustment in %f
EventKitOC: Time Zone adjustment not needed.
Deleting all data from the 'OccurrenceCache' table.
Deleting all data from the 'OccurrenceCacheDays' table.
Acquired occurrence cache range.  Start date: [%@].  End date: [%@]
nil 'observer' given.  Will not add destruction observer.
nil 'observer' given.  Will not remove destruction observer.
Couldn't update the calendar item components of task
Not reporting to ABC because it is not available on this platform: %@.%@.%@.%@ - %@
Not reporting to ABC because we are rate limited: %@.%@.%@.%@ - %@
No UUIDs were given.  Will not push any calendar items to Spotlight in batches.
Pushing [%@] calendar items in batches of [%@]
Attempting to push calendar items to Spotlight.  Calendar item UUIDs: [%@]
Could not find a calendar item with UUID [%@].  Will not push this item to Spotlight.
%s called on an an event with no suggested event info (probably not a suggested event)
Error unarchiving structured data. Error: %@
updatingStartLocationProperty and includeLocationProperty should not both be true at the same time.
updatingStartLocationProperty set, but icsItem is type '%@'
Ignoring invalid coordinates: %@
Ignoring unexpected location URL scheme: %@.
UpdateICSStructuredLocationFromCalLocation dropping mapkit handle because it exceeds the max length restriction on many servers.
Unable to start transaction before clearing superfluous changes.  Error: [%@].
Committing after clearing superfluous changes.
Moving client cursor for %@ forward from %i to %i because all changes in those sequences have been individually consumed.
Client cursor for %@ is still %i.
_CalDatabaseRegisterClientForPersistentChangeTracking - ClientIdentifier: [%@]
_CalDatabaseRegisterClientForPersistentChangeTracking - ClientIdentifier is NULL
_CalDatabaseRegisterClientForPersistentChangeTracking - clientIdentifierCString is NULL
_CalDatabaseRegisterClientForPersistentChangeTracking - clientIdentifierCString string is empty
Unsupported entityType %i
Unsupported type %i for key %@
__ClientRowHandler - clientIdentifier is nil
Failed to change dataclass of attachment at path %@. Error = %@
Couldn't create a local attachment path for the attachment %d
Failed to get a c string for the attachment path.
Failed to link attachment (error: %s). We'll try a copy
Failed to copy attachment (error: %s).
Set local relative path for attachment. attachment UUID = %{public}@, local relative path = %@, local absolute url = %@
Could not set local relative path for attachment. attachment UUID = %{public}@, local relative path = %@, local absolute url = %@
Could not get local url for components. local absolute url = %@, calendar data container url = %@
Could not set file size for attachment. error = %@, attachment uid = %d, local absolute path = %@
Device lock state changed.  New 'dataIsAccessible' state: [%@].
The given ICSDate (%@) is not of any known type
CalScheduledTaskCache_TimeZoneFetchContext
CADObjectChangeIDHelper
CDBAttachmentInfo
CDBAttachmentMigrator
CalSearch
EKMSUIDAdditions
CDBPreferences
CalAlarmMetadata
NSSecureCoding
NSCoding
CDBRecurrenceGenerator
CADObjectID
NSCopying
CalItemMetadata
EKCalendarFilter
CDBBundle
CDBCommonEntityFunctionalityHandler
CDBABCReporter
CDBSpotlightUtilities
CADObjectChangeID
EKPersistentChangeStoreInfo
EKPersistentChangeStoreRowInfo
CDBDataProtectionObserver
init
initWithCalendarIdentifier:
setCalendar:
timeZoneWithName:
setTimeZone:
setYear:
setMonth:
setDay:
setHour:
setMinute:
setSecond:
isEqual:
year
month
hour
minute
second
timeZone
isEquivalentTo:
copy
numberWithUnsignedInt:
shared
get_sqlProfileLoggingEnabled
sharedInstance
initWithUTF8String:
legacyCalendarDataContainer
migrateWithLegacyCalendarDataContainer:calendarDataContainerProvider:database:
objectForKey:
laterDate:
date
timeIntervalSinceDate:
initWithSubtype:context:
report
setObject:forKey:
newDatabaseMigrationContext
shouldPerformMigration
havePerformedReminderMigrationCleanup
alloc
initWithReminderKitProvider:defaultsProvider:
attemptMigrationWithCalendarDatabase:
standardUserDefaults
persistentDomainForName:
decimalDigitCharacterSet
rangeOfCharacterFromSet:
length
intValue
mutableCopy
boolValue
numberWithBool:
setValue:forKey:
removeObjectForKey:
numberWithInt:
setPersistentDomain:forName:
synchronize
appendFormat:
count
objectAtIndexedSubscript:
UTF8String
timeIntervalSinceReferenceDate
array
initWithName:protectionClass:bundleIdentifier:
removeAllObjects
indexSearchableItems:completionHandler:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
firstObject
addObject:
setIdentifier:
countByEnumeratingWithState:objects:count:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
setStartDate:
setEndDate:
stringWithFormat:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
distantFuture
setExpirationDate:
initWithItemContentType:
setAccountIdentifier:
resourceSpecifier
arrayWithObjects:count:
setAccountHandles:
setTitle:
setComment:
setProviderDataTypes:
setNamedLocation:
numberWithDouble:
setLatitude:
setLongitude:
setAllDay:
initWithDisplayName:handles:handleIdentifier:
isEqualToString:
setPrimaryRecipients:
setAuthors:
setDueDate:
setCompletionDate:
numberWithUnsignedLongLong:
start
stop
elapsedTimeAsNumber:
addObjectsFromArray:
deleteSearchableItemsWithIdentifiers:completionHandler:
arrayByAddingObjectsFromArray:
dictionaryWithObjects:forKeys:count:
code
openApplication:options:withResult:
pushBatchedUpdatesForCalendarItemsWithUUIDs:database:
deleteAllSearchableItemsForBundleID:completionHandler:
base64EncodedStringWithOptions:
dataWithBytes:length:
setEvents:
setIgnoreRateLimiting:
stringWithUTF8String:
.cxx_destruct
previousTimeZone
setPreviousTimeZone:
nextTimeZone
setNextTimeZone:
dict
setDict:
_previousTimeZone
_nextTimeZone
_dict
systemTimeZone
calendarDateWithDate:timeZone:
calendarDateForDay
calendarDateWithAbsoluteTime:timeZone:
compare:
calendarDateByAddingGregorianUnits:
absoluteTime
dictionaryWithObjectsAndKeys:
initWithName:
objectForKeyedSubscript:
calendarDateInTimeZone:
currentHandler
handleFailureInFunction:file:lineNumber:description:
dictionaryWithCapacity:
entityType
changeID
numberWithInteger:
makeObjectChangeEntityTypeMap:
initWithLegacyURL:url:localRelativePath:
legacyURL
localRelativePath
_legacyURL
_url
_localRelativePath
migrateDataClassProtectionForAttachmentsInLegacyCalendarDataContainer:
legacyAttachmentContainerWithBaseURL:
_moveAttachmentsFromLegacyAttachmentContainer:calendarDataContainerProvider:database:
_moveAttachmentsForStore:fromLegacyAttachmentContainer:calendarDataContainerProvider:database:
URLByAppendingPathComponent:
path
defaultManager
fileExistsAtPath:isDirectory:
containerForPersonaIdentifier:
attachmentContainerWithBaseURL:
_createNewContainerIfNeeded:error:
_infoForAttachmentsInLegacyAttachmentContainerForStore:newAttachmentContainerForStore:newCalendarDataContainer:database:
_moveAttachmentsWithInfo:error:
_updateLocalRelativeURLForAttachmentsWithInfo:database:
_setFileSizeForAttachmentsWithInfo:database:
_setLocalRelativePathForAttachmentUUID:localRelativePath:database:
enumerateKeysAndObjectsUsingBlock:
stringByDeletingPathExtension
_setFileSizeForAttachmentUUID:attachmentURL:database:
getFileSizeForPath:fileManager:error:
_moveAttachmentWithInfo:error:
moveItemAtURL:toURL:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
_attachmentInfoForLegacyAttachmentURL:newAttachmentContainerForStore:newCalendarDataContainer:database:attachmentUUID:
setObject:forKeyedSubscript:
lastPathComponent
localRelativePathForLocalAbsoluteURL:localBaseURL:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
enumeratorAtPath:
stringByAppendingPathComponent:
calSearchShouldStopSearching:
dealloc
_startLoadingResults
searchParticipants
_createParticipantIdsSearchContext
_getParticipantsSearchResults:
_deleteParticipantIdsSearchContext:
searchLocations
_createLocationIdsSearchContext
_getLocationSearchResults:
_deleteLocationIdsSearchContext:
_createEventIdsSearchContext
searchAttendees
_getAttendeesSearchResults:
_getEventsSearchResults:
_deleteEventIdsSearchContext:
_createSearchContext
_getApplicationSearchResults:
_deleteSearchContext:
calSearchComplete:
_addMatchedParticipantIds:
_addMatchedLocationIds:
_addMatchedEventIds:
calSearch:foundOccurrences:cachedDays:cachedDaysIndexes:
calSearch:showResultsStartingOnDate:
initWithDatabase:filter:dataSink:
startSearching
stopSearching
moreResultsAvailable
seed
setSearchParticipants:
setSearchLocations:
setSearchAttendees:
_database
_filter
_searchString
_seed
_dataSink
_dateToStartShowingResultsSentToDataSink
_moreResultsAvailable
_partialResults
_partialCachedOccurrences
_partialCachedDays
_partialCachedDaysIndexes
_matchedEventsSet
_matchedParticipantsSet
_matchedLocationsSet
_stopLoadingResults
_dataSourceDeallocLock
_implementsCancellationCallback
_searchParticipants
_searchLocations
_searchAttendees
secondsFromGMTForDate:
dateByAddingYears:months:days:hours:minutes:seconds:
daylightSavingTimeOffsetForDate:
dateByAddingTimeInterval:
timeZoneWithAbbreviation:
descriptionWithCalendarFormat:timeZone:locale:
ekmsuidGMTDateToDateInTimeZone:
ekmsuidStringForYearMonthDay
defaultTimeZone
dateWithCalendarFormat:timeZone:
initWithFormat:
replaceOccurrencesOfString:withString:options:range:
stringByAppendingFormat:
initWithFrequency:
setInterval:
setWkst:
setCount:
value
setUntil:
initWithWeekday:number:
setByday:
numberWithUnsignedInteger:
setBymonth:
setBymonthday:
setByweekno:
setByyearday:
setBysetpos:
freq
interval
wkst
until
initWithValue:
byday
weekday
number
bymonth
bymonthday
byweekno
byyearday
bysetpos
componentsSeparatedByString:
objectAtIndex:
substringToIndex:
substringWithRange:
substringFromIndex:
lastObject
rangeOfString:
initWithDomain:
registerReflectionForPreferenceWithNotificationName:
getBooleanPreference:defaultValue:
setBooleanPreference:value:notificationName:
getIntegerPreference:defaultValue:
setIntegerPreference:value:notificationName:
get_enableTravelAdvisoriesForAutomaticBehavior
set_enableTravelAdvisoriesForAutomaticBehavior:
get_suggestEventLocations
set_suggestEventLocations:
set_sqlProfileLoggingEnabled:
get_suggestedLocationsTestMode
set_suggestedLocationsTestMode:
get_kCalPreferredDaysToSyncKey
set_kCalPreferredDaysToSyncKey:
get_kCalRemindersPreferredDaysToSyncKey
set_kCalRemindersPreferredDaysToSyncKey:
get_LastConfirmedSplashScreenVersionViewed
set_LastConfirmedSplashScreenVersionViewed:
_preferences
characterSetWithCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
bundle
localizedStringForKey:value:table:
emailAddress
phoneNumber
cutype
partstat
role
scheduleagent
rsvp
partstatModified
alternateTimeProposal
startDate
status
initWithURL:
setEmail:
setX_apple_telephone:
initWithEmailAddress:
initWithPhoneNumber:
setCn:
setCutype:
setPartstat:
setRole:
setScheduleagent:
setRsvp:
components:fromDate:
initWithYear:month:day:hour:minute:second:
setPartstatModified:
setStatus:
setAlternateTimeProposal:
computeRecurrenceEndDateForCalEvent:recurrenceRule:count:locked:
CalGregorianGMTCalendar
dateFromComponents:
calendarIdentifier
rangeOfUnit:inUnit:forDate:
copyOccurrenceDatesWithCalEvent:startDate:endDate:timeZone:limit:locked:
removeDestructionObserver:
addDestructionObserver:
componentsJoinedByString:
initWithString:
notifyOfEntityDestruction
simulateCrashWithMessage:
URLPathAllowedCharacterSet
bitmapRepresentation
characterSetWithBitmapRepresentation:
removeCharactersInString:
CalIsBeforeOrSameAsDate:
predictedLocationOfInterestForEventTitle:eventLocation:calendarIdentifier:timeout:error:
localizedDescription
unarchiveDictionaryFromData:error:
containsObject:
filename
stringByRemovingPercentEncoding
fmtype
isBinary
fileURLWithPath:
writeToURL:options:error:
managed_id
allParameters
allKeys
uppercaseString
hasPrefix:
initWithData:
URLWithString:
setFmtype:
setX_apple_filename:
addParametersFromDictionary:
initWithObjects:
recurrence_id
summary
dtstart
sequence
last_modified
method
dictionaryWithObject:forKey:
calendar
componentKeys
componentForKey:
componentOccurrencesForKey:
initWithData:encoding:
initWithData:options:error:
setUid:
setSummary:
setDtstart:
dtend
setDtend:
duration
setDuration:
setExdate:
setPropertyValue:type:forName:
components
initWithArray:
setComponents:options:
compareCalendarServerAccess:withAccess:
setX_calendarserver_access:
attendee
setAttendee:
completed
description
setDescription:
initWithCalendar:
ICSDataWithOptions:
ICSCompressedDataWithOptions:
numberWithLong:
arrayWithObject:
unsignedIntegerValue
location
x_apple_structured_location
x_apple_travel_start
propertiesForName:
dtstamp
created
priority
x_apple_structuredData
isEqualToData:
metadataWithICSComponent:
dataRepresentationWithExistingMetaData:
metadataWithData:
applyToComponent:
setUrl:
setDtstamp:
setLast_modified:
setCreated:
setPriority:
setSequence:
setX_apple_structuredData:
removePropertiesForName:
isEqualToDate:
title
address
fullDisplayStringWithTitle:address:
absoluteString
addressIsAccountOwner:
organizer
attach
action
trigger
isDurationBased
x_wr_alarmuid
x_apple_default_alarm
timeInterval
dictionary
relatedTo
rrule
ICSStringWithOptions:
exdate
values
x_calendarserver_access
x_apple_contactIdentifiers
initWithDate:
setTrigger:
setAction:
setComponents:
setOrganizer:
setRrule:
setAttach:
sortUsingComparator:
setX_apple_contactIdentifiers:
initWithCapacity:
sortUsingSelector:
initWithValue:type:
setProperty:forName:
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
encodeObject:forKey:
setWithArray:
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithICSAlarm:
applyToAlarm:
dataRepresentation
_attach
_attendee
_description
_summary
initWithWeeks:days:hours:minutes:seconds:
initWithDuration:
setX_wr_alarmuid:
makeUID
setX_apple_proximity:
setX_apple_default_alarm:
setAcknowledged:
setRelatedTo:
x_apple_proximity
acknowledged
setEventStartDate:
setEventEndDate:
setEventTimeZone:
CalCalendarWithUnsanitizedCalendarIdentifier:
calendarDateWithGregorianDate:timeZone:
initWithStartDate:endDate:
initWithTimeIntervalSinceReferenceDate:
CalIsAfterOrSameAsDate:
endDate
CalOccurrencesForBirthday:inDateRange:
_setupForCalEvent:locked:
_copyOccurrenceDatesWithBirthdayEvent:startDate:endDate:timeZone:limit:locked:
_prepareForCalRecurrence:locked:
copyOccurrenceDatesBetweenStartDate:endDate:timeZone:limit:
copyOccurrenceDatesWithInitialDate:rangeStart:rangeEnd:timeZone:
setWeekStart:
setFrequency:
setSetPositions:
dayOfWeek:weekNumber:
setDaysOfTheWeek:
setMonthsOfTheYear:
setDaysOfTheMonth:
setWeeksOfTheYear:
setDaysOfTheYear:
computeRecurrenceEndDate:
eventTimeZone
copyOccurrenceDatesWithInitialDate:calRecurrences:rangeStart:rangeEnd:timeZone:
removeObject:
decodeIntForKey:
decodeBoolForKey:
encodeInt:forKey:
encodeBool:forKey:
stringRepresentation
entityName
entityID
isTemporary
copyWithZone:
initWithEntityType:entityID:
initWithDictionaryRepresentation:
dictionaryRepresentation
URIRepresentation
hash
_temporary
_entityType
_entityID
isAllDay
transp
x_calendarserver_private_comment
x_calendarserver_attendee_comment
x_calendarserver_attendee_ref
x_apple_travel_duration
x_apple_travel_advisory_behavior
x_apple_suggestionInfoOpaqueKey
x_apple_suggestionInfoUniqueKey
x_apple_suggestionInfoChangedFields
x_apple_suggestionInfoChangesAcknowledged
conferences
parameterValueForName:
longValue
setRecurrence_id:
setX_apple_needs_reply:
setTransp:
setX_calendarserver_private_comment:
integerValue
setX_apple_travel_duration:
setX_apple_travel_advisory_behavior:
setX_apple_suggestionInfoOpaqueKey:
setX_apple_suggestionInfoUniqueKey:
setX_apple_suggestionInfoChangesAcknowledged:
setX_apple_suggestionInfoChangedFields:
setConferences:
relationshipParameterFromCode:
setParameterValue:forName:
arrayByAddingObject:
hasFloatingTimeZone
classification
setClassification:
properties
setX_props:
initWithICSComponent:
setProperties:forName:
_whitelistedClassesForSecureCoding
unarchivedObjectOfClasses:fromData:error:
x_props
_x_props
_classification
initWithDatabase:entityType:calendarUIDs:
_generateUIDSetToFilterAllCalendars
_generateUIDSetToShowCalendars:
_generateUIDSetToShowCalendarUIDs:
_generateUIDSetToFilterCalendars:
_UIDSetWithCalendars:
minusSet:
_isFilteringAllWhileLocked
setWithCapacity:
arrayWithCapacity:
isShowingAll
_addCalendarWithUID:toSet:database:
_addFilterToQuery:creator:userInfo:
isSubsetOfSet:
anyObject
allObjects
_UIDAntiSetWithCalendars:
unionSet:
_addCalendarUIDsFromPrefs:toSet:database:
_addCalendarsForStoreWithUID:toSet:database:
initWithDatabase:
initWithDatabase:entityType:
initFilteringAllWithDatabase:
initWithDatabase:showingCalendars:
initWithDatabase:showingCalendarsWithUIDs:
initWithDatabase:entityType:showingCalendarsWithUIDs:
initWithDatabase:entityType:filteringCalendars:
initWithDatabase:entityType:filteringCalendarsWithUIDs:
isFilteringAll
filteredCalendars
visibleCalendarsWithOptions:
visibleCalendarCountWithOptions:
isCalendarUIDVisible:
removeCalendarWithUID:
validate
filterQueryForQueryString:creator:userInfo:
filterQueryForKey:prefix:whereClause:creator:userInfo:
calendarIDClauseForQueryWithVariableName:
searchTerm
setSearchTerm:
_lock
_calendarUIDs
_searchTerm
bundleForClass:
sharedAggregateDictionary
pushValue:forKey:
setDestructionObservers:
setLock:
destructionObservers
_notifyDestructionObservers:
lock
_destructionObservers
hasTimeComponent
x_apple_activity
x_apple_appLinkData
percentComplete
x_apple_sort_order
setX_apple_activity:
setX_apple_appLinkData:
setDue:
setCompleted:
setPercentComplete:
setX_apple_sort_order:
setSubtype:
setSubtypeContext:
rateLimitingAllowsABCReport
domain
type
subtype
subtypeContext
events
ignoreRateLimiting
_ignoreRateLimiting
_events
_subtype
_subtypeContext
_pushUpdatesForCalendarItemsWithUUIDs:inBatchesOf:database:
_pushUpdatesForCalendarItemsWithUUIDs:database:
_resetDatabase:
routing
scheme
lowercaseString
mapKitHandle
setX_apple_travel_start:
setX_apple_structured_location:
setAddress:
setRouting:
setLocation:
setValue:type:
stringValue
setMapKitHandle:
encodeInteger:forKey:
decodeIntegerForKey:
initWithEntityType:changeID:
_changeID
minConsumedClientIdentifier
minConsumedSequenceNumber
secondMinConsumedSequenceNumber
setMinConsumedSequenceNumber:
setMinConsumedClientIdentifier:
setSecondMinConsumedSequenceNumber:
_minConsumedSequenceNumber
_secondMinConsumedSequenceNumber
_minConsumedClientIdentifier
clientIdentifier
consumedSequenceNumber
setClientIdentifier:
setConsumedSequenceNumber:
_consumedSequenceNumber
_clientIdentifier
cStringUsingEncoding:
objectsPassingTest:
null
appendString:
removeObjectAtIndex:
insertObject:atIndex:
countForObject:
initWithKeyOptions:valueOptions:capacity:
setAttributes:ofItemAtPath:error:
localURLForAttachmentWithRelativePath:baseURL:
removeItemAtURL:error:
personaIdentifierForAccountIdentifier:
attachmentContainerForSourceIdentifier:calendarDataContainer:
_deviceLockStateChanged
initWithStateChangedCallback:
setDeviceLockObserver:
dataIsAccessible
stateChangedCallback
deviceLockObserver
hasBeenUnlockedSinceBoot
stateChangedNotificationName
setStateChangedCallback:
_stateChangedCallback
_deviceLockObserver
tzid
systemTimeZoneForDate:
name
initWithYear:month:day:
initWithYear:month:day:hour:minute:second:timeZone:
v16@0:8
@16@0:8
v24@0:8@16
@"NSTimeZone"
@"NSMutableDictionary"
@24@0:8@16
@40@0:8@16@24@32
@"NSURL"
@"NSString"
v40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}32
v48@0:8r^v16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}40
v32@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}24
B32@0:8@16^@24
@48@0:8@16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}40
@56@0:8@16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}40^@48
@40@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}16^{CalFilter=}24@32
B16@0:8
i16@0:8
v24@0:8^{__CFArray=}16
v24@0:8^{CalParticipantIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16
^{CalParticipantIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16@0:8
^{CalLocationIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16@0:8
v24@0:8^{CalLocationIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16
v24@0:8^{CalEventIdsSearchContext=^{__CFArray}^{__CFSet}^{__CFSet}^B^B^{CalDatabase}}16
^{CalEventIdsSearchContext=^{__CFArray}^{__CFSet}^{__CFSet}^B^B^{CalDatabase}}16@0:8
v24@0:8^{CalEventOccurrenceSearchContext=^{__CFSet}^{__CFArray}^{__CFArray}^{__CFArray}^B^BddidI^{CalEventOccurrenceCache}^?^viB^{__CFString}dBd}16
^{CalEventOccurrenceSearchContext=^{__CFSet}^{__CFArray}^{__CFArray}^{__CFArray}^B^BddidI^{CalEventOccurrenceCache}^?^viB^{__CFString}dBd}16@0:8
v20@0:8B16
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}
^{CalFilter=}
^{__CFString=}
@"<CalSearchDataSink>"
^{__CFArray=}
^{__CFSet=}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
q16@0:8
v24@0:8q16
@"CalPreferences"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSArray"
v28@0:8^v16B24
@76@0:8^v16{?=iccccd}24{?=iccccd}40@56q64B72
@56@0:8@16@24@32@40@48
@44@0:8^v16^v24Q32B40
@24@0:8^{_NSZone=}16
@24@0:8i16i20
Q16@0:8
B24@0:8@16
v20@0:8i16
@"NSDictionary"
@24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}16
@28@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}16i24
@32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}16@24
@36@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}16i24@28
@20@0:8i16
i20@0:8i16
@40@0:8@16^?24^v32
@56@0:8@16@24@32^?40^v48
@"NSMutableSet"
v24@0:8^{CalRelation=}16
@"NSObject<OS_dispatch_queue>"
@32@0:8@16@24
v40@0:8@16Q24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}32
v24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=q[56c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@B^{__CFSet}@B}16
@28@0:8i16q20
@?16@0:8
v24@0:8@?16
@"CalDeviceLockObserver"
