UUID
externalID
owner
snoozedAlarmsSet
structuredLocation
absoluteDate
acknowledgedDate
type
externalData
isDefaultAlarm
proximity
relativeOffset
originalAlarm
calendarOwner
calendarItemOwner
emailAddress
urlWrapper
flags
participantRole
participantType
lastModifiedParticipationStatus
pendingStatusRaw
statusRaw
isCurrentUser
URLString
securityScopedURLWrapperForPendingFileCopy
XPropertiesData
externalModificationTag
fileFormat
fileNameRaw
localRelativePath
fileSize
shouldSetQuarantineAttributesOnCopiedFile
securityScopedLocalURLWrapper
securityScopedLocalURLForArchivedDataWrapper
allAlarms
allowedEntities
colorStringRaw
digest
displayOrder
externalIDTag
externalRepresentation
invitationStatus
colorDisplayOnly
isPublished
lastSyncStartDate
lastSyncEndDate
notes
ownerIdentityAddressString
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityFirstName
ownerIdentityId
ownerIdentityLastName
ownerIdentityPhoneNumber
publishURLString
pushKey
refreshDate
refreshInterval
selfIdentityAddressString
selfIdentityDisplayName
selfIdentityEmail
selfIdentityFirstName
selfIdentityLastName
selfIdentityPhoneNumber
sharedOwnerURLString
sharedOwnerName
sharees
notifications
pubcalAccountID
sharingInvitationResponse
sharingStatus
source
subcalAccountID
subcalURL
subscriptionID
symbolicColorName
syncError
syncToken
unlocalizedTitle
maxAttendees
lastSyncTitle
locale
allAlarmsSet
recurrenceRulesSet
attendeesRaw
attachmentsSet
detachedItems
ekExceptionDates
structuredLocationWithoutPrediction
clientLocation
organizer
selfAttendee
originalItem
calendar
travelStartLocation
endLocation
actionString
isAllDay
calendarScale
creationDate
defaultAlarmWasDeleted
endTimeZoneName
hasAttendees
lastModifiedDate
modifiedProperties
priority
selfParticipantStatusRaw
sequenceNumber
sharedItemCreatedByAddressString
sharedItemCreatedByDisplayName
sharedItemCreatedByFirstName
sharedItemCreatedByLastName
sharedItemCreatedDate
sharedItemCreatedTimeZoneName
sharedItemModifiedByAddressString
sharedItemModifiedByDisplayName
sharedItemModifiedByFirstName
sharedItemModifiedByLastName
sharedItemModifiedDate
sharedItemModifiedTimeZoneName
startTimeZoneName
uniqueID
hasNotes
startDateRaw
structuredData
phantomMaster
hasRecurrenceRules
localStructuredData
participationStatusModifiedDate
externalScheduleID
suppressNotificationForChanges
urlString
feature
info
language
region
storeOwner
errorType
errorCode
userInfoData
birthdayID
endDateRaw
travelTime
status
locationPredictionState
invitationChangedProperties
availability
privacyLevel
travelAdvisoryBehavior
responseComment
externalTrackingStatus
canForward
disallowProposeNewTime
junkStatus
originalStartDate
conferenceURLString
birthdayContactIdentifier
birthdayContactName
recurrenceSet
suggestionInfo
firedTTL
actions
proposedStartDate
conferenceURLDetectedString
specialDayString
externalFolderID
date
title
address
latitude
longitude
contactLabel
mapKitHandle
routing
referenceFrame
radius
derivedFrom
alarmOwner
summary
shareeStatus
hostURL
inReplyTo
alerted
inviteReplyCalendar
resourceChanges
shareeDisplayName
shareeURLString
shareeFirstName
shareeLastName
scheduleAgent
comment
displayNameRaw
firstName
inviterNameString
lastName
phoneNumber
proposedStartDateStatus
scheduleStatus
scheduleForceSend
frequencyRaw
interval
firstDayOfTheWeekRaw
endDate
count
specifier
cachedEndDate
cachedEndDateTimeZone
calendarItem
changeType
changedByAddress
changedByDisplayName
changedByFirstName
changedByLastName
changedProperties
createCount
deleteCount
updateCount
deletedTitle
notification
publicStatus
timestamp
displayName
shareeAccessLevelRaw
shareeStatusRaw
shareeMuteRemoval
sourceType
preferredEventPrivateValueRaw
strictestEventPrivateValueRaw
defaultAlarmOffset
defaultAllDayAlarmOffset
cachedExternalInfoData
constraintsName
creatorBundleID
creatorCodeSigningIdentity
onlyCreatorCanModify
flags2
showsNotifications
disabled
delegatedAccountOwnerStoreID
calendars
ownerName
managedConfigurationAccountAccess
opaqueKey
uniqueKey
changedFields
changesAcknowledged
timestampAsDate
extractionGroupIdentifier
X-Apple-ABUID
X-Apple-Radius
X-APPLE-ABUID
X-APPLE-RADIUS
X-APPLE-REFERENCEFRAME
v8@?0
_CalDatabaseChangedNotification
_CalDatabaseStoreSyncStatusChangedNotification
kCalDatabaseChangedExternallyNotification
_CalDatabaseSpotlightUpdatedNotification
CalSyncClientBeginningMultiSave
CalSyncClientFinishedMultiSave
CalDBSpotLightError
LastUnfinishedSpotlightReindex
LastABCReport
kCalDBLastSpotLightIndexVersion
BOOL __CalDatabaseCommitTransaction(CalDatabaseRef, const char *)
CalDatabase.m
Tried to commit a transaction (%s) when no transaction was open (%s)
BOOL __CalDatabaseRollbackTransaction(CalDatabaseRef, const char *)
Tried to roll back a transaction (%s) when no transaction was open (%s)
RestoreGeneration
delegate must not be nil
Attempting to register a restore generation delegate when there is already a registered delegate
CalDatabaseAsyncNotificationQueue
com.apple.calendar.database.refreshWidgetQueue
com.apple.mobilecal
CalLastCalendarChanges
CalLastEventRecurrenceChanges
CalLastEventAlarmChanges
CalLastCategoryChanges
CalLastAuxDatabaseChanges
SELECT ROWID FROM Store WHERE disabled = 1;
com.apple.calendar.CalendarDatabase
spotlightQ
com.apple.ManagedConfiguration.profileListChanged
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabase.m:5061
NULL database given to [%s]
CalDatabaseFlushStatementCache
PrefMigrationSeed
DefaultCalendarUID
DefaultCalendarDatabaseID
DefaultCalendarStoreUID
DefaultCalendarName
migration
DefaultTaskCalendarUID
Could not find the size of the database in bytes.  Received a negative size: [%lld]
Could not find the true size of the database in bytes.  Received a size greater than [%llu]: [%lld]
 WHERE %@
VACUUM
[<CalDatabaseInitializationConfiguration:%p> options=%i, directoryURL=%@, dataContainerProvider=%@ preferences=%@]
(not null)
(null)
BOOL _CalDatabaseBeginTransactionOfType(CalDatabaseRef, CPSqliteTransactionType, const char *)
Tried to begin a transaction of type %i (%s) when there's already an open transaction of type %i (%s)
v24@?0@"BSProcessHandle"8@"NSError"16
Error launching application with id [%@]: Error code %ld
CSSearchableIndex
events
CSSearchableItem
v24@?0@"NSString"8@"CSSearchableItemAttributeSet"16
%@.%f
globalSpotlightQ
com.apple.calendardatabase.spotlight.lastUpdate
v16@?0@"NSError"8
CSSearchableItemAttributeSet
com.apple.calendar.spotlight.identifier
com.apple.calendar.ics
com.apple.ical.ics
CSPerson
CNContactEmailAddressesKey
CNContactPhoneNumbersKey
CSCustomAttributeKey
com_apple_mobilecal_recipientParticipationStatuses
%@.%@.%@.%@
%@.%@
function
postchangenote
databasePath
notificationwasposted
com.apple.calaccessd.xpc
v16@?0@"NSObject<OS_xpc_object>"8
, %d
CalOutOfProcessMigrator
Class getCalOutOfProcessMigratorClass(void)_block_invoke
Unable to find class %s
void *CalendarMigrationLibrary(void)
CalDatabase
:memory:
com.apple.calendar.migrator
auxiliaryDB
DROP TABLE Task;
DROP TABLE TaskChanges;
... Calendar database migration complete (%g s)
SELECT ROWID, flags, external_id from Calendar WHERE store_id IN (SELECT ROWID from Store where Type = %d)
UPDATE Calendar SET external_id = ? WHERE rowid = ?
UPDATE CalendarItem SET external_id = ? WHERE rowid = ?
UPDATE EventAction SET external_id = ? WHERE rowid = ?
UPDATE Notification SET external_id = ?, host_url = ? WHERE rowid = ?
SELECT rowid, calendar_id, external_id from CalendarItem where calendar_id = %d
SELECT rowid, event_id, external_id from EventAction where event_id = %d
SELECT rowid, calendar_id, external_id, host_url from Notification where calendar_id = %d
DefaultCalendarID
SELECT
read Calendar data
INSERT
UPDATE
modified Calendar data
DELETE
deleted Calendar data
com.apple.calendar
Enabling
Disabling
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabase.m:3037
CalDatabaseErrorDomain
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabase.m:3301
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabase.m:3303
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabase.m:3362
ChangeTypeAdded
ChangeTypeUpdated
ChangeTypeDeleted
Removing orphan %@
SELECT ROWID, orig_item_id, orig_date FROM CalendarItem WHERE orig_date IN (%@)
An attempt to add a detached calendar item with an original item ID of [%d] and an original date of [%@] was made, but this detached item already exists in the database.  Removing existing detached item with row ID: [%d]
com.apple.calendardatabase.spotlight.update
Unexpected entity type: %i row ID: %i
changes
onlysyncstatuschanged
postnotificationsynchronously
pragma page_count;
pragma freelist_count;
pragma incremental_vacuum(%d);
Asia/Shanghai
Asia/Kashgar
Asia/Urumqi
com.apple.calendar.database.resetSpotlightQueue
void _CalDatabaseAsynchronouslyReindexSpotlight(void)
com.apple.calendardatabase.spotlight.reset
v16@?0@"NSString"8
v20@?0i8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}12
Calendar migration
EventKit
data_separation
DataSeparationMigrationCompleted
Database
Spotlight
IndexFailure
CalDefaultReminderKitProvider
Class getCalDefaultReminderKitProviderClass(void)_block_invoke
CalDefaultReminderMigrationDefaultsProvider
Class getCalDefaultReminderMigrationDefaultsProviderClass(void)_block_invoke
CalCalendarDatabaseReminderMigrator
Class getCalCalendarDatabaseReminderMigratorClass(void)_block_invoke
/var/mobile/Library/Calendar/Notifications.db
/var/mobile/Library/Calendar/Notifications.db-wal
/var/mobile/Library/Calendar/Notifications.db-shm
SQLCorruption
com.apple.calendardatabase.sqlite_error_code
UNKNOWN
SQLITE_OK
SQLITE_ERROR
SQLITE_INTERNAL
SQLITE_PERM
SQLITE_ABORT
SQLITE_BUSY
SQLITE_LOCKED
SQLITE_NOMEM
SQLITE_READONLY
SQLITE_INTERRUPT
SQLITE_IOERR
SQLITE_CORRUPT
SQLITE_NOTFOUND
SQLITE_FULL
SQLITE_CANTOPEN
SQLITE_PROTOCOL
SQLITE_EMPTY
SQLITE_SCHEMA
SQLITE_TOOBIG
SQLITE_CONSTRAINT
SQLITE_MISMATCH
SQLITE_MISUSE
SQLITE_NOLFS
SQLITE_AUTH
SQLITE_FORMAT
SQLITE_RANGE
SQLITE_NOTADB
SQLITE_NOTICE
SQLITE_WARNING
SQLITE_ROW
SQLITE_DONE
v32@?0@"NSNumber"8@"CalAttachmentFileCleanupContext"16^B24
kCalScheduledTaskCacheChangedNotification
CREATE TABLE ScheduledTaskCache (day REAL, date_for_sorting REAL, completed INTEGER, task_id INTEGER, count INTEGER, PRIMARY KEY (day, task_id));
CREATE TRIGGER update_task_cache_count_after_insert AFTER INSERT ON ScheduledTaskCache
BEGIN
    REPLACE INTO ScheduledTaskCache VALUES (NEW.day, NULL, NULL, -2, 1 + IFNULL((SELECT count FROM ScheduledTaskCache WHERE day = NEW.day AND task_id = -2), 0));
END;
CREATE TRIGGER update_task_cache_count_after_update AFTER UPDATE OF day ON ScheduledTaskCache
BEGIN
    UPDATE ScheduledTaskCache SET count = count - 1 WHERE day = OLD.day AND task_id = -2;
    REPLACE INTO ScheduledTaskCache VALUES (NEW.day, NULL, NULL, -2, IFNULL((SELECT count FROM ScheduledTaskCache WHERE day = NEW.day AND task_id = -2), 0));
    DELETE FROM ScheduledTaskCache WHERE day = OLD.day AND count = 0;
END;
CREATE TRIGGER update_task_cache_days_after_delete AFTER DELETE ON ScheduledTaskCache
BEGIN
    UPDATE ScheduledTaskCache SET count = count - 1 WHERE day = OLD.day AND task_id = -2;
    DELETE FROM ScheduledTaskCache WHERE day = OLD.day AND count = 0;
END;
CREATE INDEX ScheduledTaskCacheDayTaskId on ScheduledTaskCache(day);
CREATE INDEX ScheduledTaskCacheTaskId on ScheduledTaskCache(task_id);
SELECT day, count FROM ScheduledTaskCache WHERE task_id = -2 ORDER BY day
SELECT task_id FROM ScheduledTaskCache WHERE day = ? AND task_id != -2 ORDER BY day ASC, completed DESC, date_for_sorting ASC
SELECT DISTINCT task_id FROM ScheduledTaskCache WHERE day >= ? AND day <= ? AND task_id != -2
ForceRebuildScheduledTaskCache
EventKitSTC: Unable to start transaction (error %d). Aborting rebuild.
TaskCacheTimeZone
25534103: Beginning CalScheduledTaskCacheTrimAndExtendAndUpdateOverdue
EventKitSTC: Unable to start transaction (error %d). Aborting trim/extend.
TaskCacheLastSavedDay
25534103: ScheduledTaskCache last saved %@
25534103: today is %@, comparisonResult is %ld
DELETE FROM ScheduledTaskCache WHERE task_id = ?;
CalScheduledTaskCache
EventKitSTC: Unable to start transaction (error %d). Aborting time zone update.
SELECT day, date_for_sorting, task_id FROM ScheduledTaskCache WHERE task_id != -2
UPDATE ScheduledTaskCache SET day = ?, date_for_sorting = ? WHERE task_id = ?;
dateForSorting
taskId
DELETE FROM ScheduledTaskCache;
25534103: Inserting item due at %@ at %@
EventKitSTC: *** ERROR *** No transaction is in effect! This may end poorly.
INSERT INTO ScheduledTaskCache (day, date_for_sorting, completed, task_id, count) VALUES (?, ?, ?, ?, 1);
DELETE FROM ScheduledTaskCache WHERE day < ?
25534103: Updating overdue with today %f
UPDATE ScheduledTaskCache SET day = ?, date_for_sorting = ? WHERE day < ? AND completed = 0
25534103: Updating last saved to %@
v32@?0@"NSString"8@"NSMutableSet"16^B24
Parent
_CalChangeFilterMigrationAccount_setAuthenticationType
None
_CalChangeFilterMigrationAccount_accountDescription
_CalChangeFilterMigrationAccount_visible
_CalChangeFilterMigrationAccount_enabledForCalendarsDataClass
_CalChangeFilterMigrationAccount_provisionedForCalendarsDataClass
_CalChangeFilterMigrationAccount_authenticated
_CalChangeFilterMigrationAccount_username
_CalChangeFilterMigrationAccount_password
Recurrence
UPDATE Recurrence SET end_date = NULL WHERE end_date = 0
UPDATE Recurrence SET cached_end_date = NULL WHERE cached_end_date = 0
DELETE FROM Recurrence WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
B16@?0^v8
UUID = '%@'
 WHERE external_id = ?
UPDATE Recurrence SET external_id = NULL, external_mod_tag = NULL, external_id_tag = NULL, external_rep = NULL WHERE owner_id IN (SELECT CalendarItem.ROWID FROM CalendarItem JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = %d);
frequency
week_start
cached_end_date
cached_end_date_tz
end_date
specifier_parsed
by_day_days
by_month_months
by_month_day_days
by_week_weeks
by_year_day_days
by_set_pos
by_month
owner_id
external_id
external_mod_tag
external_id_tag
external_rep
store_id
event_id_tomb
calendar_id
end_date_tomb
record_id
common_entity_functionality_handler
RecurrenceEventIdIndex
event_id
RecurrenceEndCountIndex
end_date, count
RecurrenceExternalId
RecurrenceOwnerIdIndex
RecurrenceOwnerTypeIndex
owner_type
RecurrenceUUID
record
sequence_number
SELECT Recurrence.* FROM Recurrence JOIN CalendarItem ON owner_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID AND store_id = ?;
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalRecurrence.m:1044
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalRecurrence.m:1046
_float
Recurrence without owner
,%s%d%s
%s%d%s
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
calendar_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
%@: iTIP Message contained no events
%@: component not supported in iTIP message: %@
%@: more than one event in iTIP message: %lu
%@ <%p> { %@ %@ %ld %@ "%@"}
Type
ChangeID
ExternalID
UniqueIdentifier
SignificantAttributes
OldCalendarID
OldExternalID
OwningEventID
EndDate
ExternalModTag
CalendarID
SequenceNumber
WHERE UUID = ?
v16@?0^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}8
WHERE UUID IN (
'%@')
'%@',
 AND calendar_id IN (
'%i')
'%i',
CalDatabaseCopyCalendarItemsWithCalendarFilter
CalCalendarItem.m
entityType == CalEventEntity || entityType == CalTaskEntity
WHERE entity_type = ?
 AND %@
NSArray<NSString *> *CalDatabaseCopyCalendarItemUUIDs(CalDatabaseRef, CalEntityType)
Invalid parameter not satisfying: %@
entityType == CalEventEntity || entityType == CalTaskEntity || entityType == CalUndefinedEntity
SELECT UUID FROM CalendarItem
 WHERE entity_type = ?
CalDatabaseCopyCalendarItemsWithStoreID
JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ? AND entity_type = ?
WHERE calendar_id = ?
WHERE calendar_id = ? AND entity_type = ?
SELECT ROWID FROM CalendarItem WHERE calendar_id = ? LIMIT 1
SELECT ROWID FROM CalendarItem WHERE entity_type = ? AND calendar_id = ? LIMIT 1
WHERE 1=1
 AND entity_type = ?
JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?
 WHERE
 entity_type = ? AND
 %@ = ?
 AND calendar_id = ?
 AND calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = ?)
 LIMIT 1
unique_identifier
 WHERE unique_identifier = ?;
%@Changes
DROP INDEX IF EXISTS %@;
CREATE %@INDEX %@ on %@(%@)%@%@;
UNIQUE 
 WHERE 
DROP TRIGGER IF EXISTS %@;
AFTER DELETE
CREATE TRIGGER %@ %@ ON %@
BEGIN
END;
ROWID
NULL
INSERT INTO %@ (%@) SELECT %@ FROM %@_;
firstVersion
lastVersion
oldName
defaultText
, %@
SELECT %@ FROM %@_;
INSERT INTO %@ (%@) VALUES(%@);
ALTER TABLE %@ RENAME TO %@_;
DROP TABLE IF EXISTS %@_;
Info.plist
version
LocalSubscribedCalendarAccounts
preferences
defaultCalendarID
defaultCalendarStoreUID
defaultCalendarName
Calendar.sqlitedb
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabaseBackup.m:224
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabaseBackup.m:241
main
-wal
-shm
B24@?0@"NSURL"8@"NSError"16
v32@?0@"NSString"8#16^B24
StagedBackup.XXXXXXXX
__CPRecordSequenceNumber
v32@?0@"NSString"8@16^B24
restore
ATTACH DATABASE ? AS aux
WHERE ROWID = ?
WHERE record = ?
WHERE store_id = ?
WHERE calendar_id IN (SELECT ROWID FROM aux.Calendar)
WHERE calendaritem_owner_id IN (SELECT ROWID FROM aux.CalendarItem) OR calendar_owner_id IN (SELECT ROWID FROM aux.Calendar)
WHERE item_owner_id IN (SELECT ROWID FROM aux.CalendarItem) OR client_loc_owner_id IN (SELECT ROWID FROM aux.CalendarItem) OR start_loc_owner_id IN (SELECT ROWID FROM aux.CalendarItem) OR end_loc_owner_id IN (SELECT ROWID FROM aux.CalendarItem) OR alarm_owner_id IN (SELECT ROWID FROM aux.Alarm)
WHERE owner_id IN (SELECT ROWID FROM aux.CalendarItem)
WHERE store_owner_id = ? OR calendar_owner_id IN (SELECT ROWID FROM aux.Calendar) OR calendaritem_owner_id IN (SELECT ROWID FROM aux.CalendarItem)
WHERE event_id IN (SELECT ROWID FROM aux.CalendarItem)
WHERE file_id IN (SELECT ROWID FROM aux.AttachmentFile)
WHERE ROWID IN (SELECT category_id FROM aux.CategoryLink)
WHERE owner_id IN (SELECT ROWID FROM aux.Calendar)
WHERE calendar_id IN (SELECT ROWID FROM aux.Calendar) OR invite_reply_calendar_id IN (SELECT ROWID FROM aux.Calendar)
WHERE notification_id IN (SELECT ROWID FROM aux.Notification)
INSERT OR REPLACE INTO aux._SqliteDatabaseProperties SELECT * FROM _SqliteDatabaseProperties WHERE key IN ("CalLastCategoryChanges", "CalLastCalendarChanges", "CalLastEventRecurrenceChanges", "CalLastEventAlarmChanges", "__CPRecordSequenceNumber")
DETACH DATABASE aux
INSERT INTO AuxDatabase (path, persona_id) VALUES (?, ?)
INSERT OR REPLACE INTO AuxDatabaseAccount (account_id, database_id) VALUES (?, ?)
DELETE FROM Store WHERE ROWID = ?
INSERT INTO aux.%s (%@) SELECT %@ FROM %s %@
ROWID, record, type
, sequence_number
, %s
INSERT INTO aux.%sChanges (%@) SELECT %@ FROM %sChanges %@
v32@?0@"NSString"8@"CDBAttachmentInfo"16^B24
EKErrorCertificateSerializedSecTrust
ClearErrorForChangesToKeys
attachments
Error
DELETE FROM Error WHERE calendaritem_owner_id NOT IN (SELECT ROWID FROM CalendarItem) AND calendar_owner_id NOT IN (SELECT ROWID FROM Calendar) AND store_owner_id NOT IN (SELECT ROWID FROM Store);
store_owner_id
calendar_owner_id
calendaritem_owner_id
error_type
error_code
user_info
store_owner
calendar_owner
calendaritem_owner
common_entitiy_functionality_handler
SELECT MIN(calendaritem_owner_id), store_id FROM Error JOIN calendaritem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE calendaritem_owner_id > 0 GROUP BY store_id
v32@?0@"NSNumber"8@"NSNumber"16^B24
[%@], _storeAttachmentContainer: [%@], _deleteEntireContainer: [%@], _attachmentUUIDsToDelete: [%@]
%Y%m%d
CFStringRef _EKCreateMSUIDStringForEvent(CalEventRef, CalEventRef)
EKMSUID.m
You must set a parent event's unique id before constructing one for a detached event
Event has no original start date?
%@%@%@
<!ExceptionDate!>
NSString *_EKMSUUIDStringForDetachedEvent(NSString *__strong, NSDate *__strong, NSTimeZone *__strong, BOOL)
%%0.%ld
CalToManyRelationHasObjects
CalToManyRelation.m
relation->_loadedObjects != nil
CalToManyRelation
<CalToManyRelation: %p> loaded: %@; added: %@; deleted %@
_EnsureLoaded
inverseRelationInfo->realIDColumn != -1
WHERE %s = ? AND entity_type = ? AND (%@)
WHERE %s = ? AND (%@)
WHERE %s = ? AND entity_type = ?
WHERE %s = ?
%s inverse relation is NULL!
void _EnsureLoaded(CalToManyRelationRef)
%s inverse relation for %s (%s) not a relation!
Property %d not found for class %s!
%s: property is not a custom property!
B24@?0@8@"NSDictionary"16
com.apple.calendar.database
CalendarDatabase
WidgetReload
iCalendarConversion
SQLProfile
CalendarDatabasePerf
ResourceChange
notification_id
calendar_item_id
identity_id
change_type
changed_properties
create_count
update_count
delete_count
deleted_summary
deleted_start_date
public_status
calendar_item
changed_by_display_name
changed_by_address
changed_by_first_name
changed_by_last_name
ResourceChangeNotificationID
ResourceChangeCalendarID
ResourceChangeCalendarItemID
ResourceChangeIdentityID
delete_notification_resource_changes
DELETE FROM ResourceChange WHERE notification_id NOT IN (SELECT ROWID FROM Notification WHERE entity_type = 17);
delete_notification_calendar
DELETE FROM ResourceChange WHERE calendar_id NOT IN (SELECT ROWID FROM Calendar);
delete_last_resource_change_in_notification
DELETE FROM Notification WHERE entity_type = 17 AND ROWID NOT IN (SELECT DISTINCT notification_id FROM ResourceChange);
com.apple.calendar.database.preference.notification.enableTravelAdvisoriesForAutomaticBehavior
com.apple.calendar.database.preference.notification.suggestEventLocations
com.apple.calendar.database.preference.notification.sqlProfileLoggingEnabled
com.apple.calendar.database.preference.notification.suggestedLocationsTestMode
com.apple.calendar.database.preference.notification.overrideParticipantRoleConstraint
com.apple.calendar.database.preference.notification.kCalPreferredDaysToSyncKey
com.apple.calendar.database.preference.notification.kCalRemindersPreferredDaysToSyncKey
com.apple.calendar.database.preference.notification.LastConfirmedSplashScreenVersionViewed
com.apple.calendar.database.preference.notification.privacyPaneHasBeenAcknowledgedVersion
com.apple.calendar.database.preference.notification.defaultCalendarStoreUID
com.apple.calendar.database.preference.notification.defaultCalendarDatabaseID
com.apple.calendar.database.preference.notification.defaultCalendarChangedTimestamp
com.apple.calendar.database.preference.notification.defaultCalendarID
com.apple.calendar.database.preference.notification.defaultCalendarName
com.apple.calendar.database.preference.notification.defaultCalendarChangedReason
enableTravelAdvisoriesForAutomaticBehavior
suggestEventLocations
sqlProfileLoggingEnabled
suggestedLocationsTestMode
overrideParticipantRoleConstraint
kCalPreferredDaysToSyncKey
kCalRemindersPreferredDaysToSyncKey
LastConfirmedSplashScreenVersionViewed
privacyPaneHasBeenAcknowledgedVersion
defaultCalendarDatabaseID
defaultCalendarChangedTimestamp
defaultCalendarChangedReason
AttachmentFile
CalNoteAttachmentDeleted
CalNoteStoreDeleted
UPDATE AttachmentFile SET local_path = ? || SUBSTR(local_path, ?) WHERE store_id = ? AND SUBSTR(local_path, 1, ?) = ?
DELETE FROM AttachmentFile WHERE ROWID NOT IN (SELECT file_id FROM Attachment);
WHERE store_id = ? AND url = ?
v24@?0^v8^B16
WHERE store_id = ? AND external_id = ?
WHERE local_path IS NULL AND IFNULL(download_tries, 0) < ?
WHERE store_id = ? AND local_path IS NULL AND IFNULL(download_tries, 0) < ?
format
filename
local_path
file_size
download_start
download_tries
url_pending_copy
quarantine_copied_file
AttachmentFileStoreURL
store_id, url
AttachmentFileUUID
AttachmentFileStoreLocalPathDownloadTries
store_id, local_path, download_tries
AttachmentFileExternalID
clean_attachments_attachment_file_deleted
SELECT CalNoteAttachmentDeleted(OLD.store_id, OLD.UUID);
is_binary
WHERE store_id = ? AND local_path = ?
CalDefaultCalendarChangedNotification
Calendar
SuggestionsCalendarID
NaturalLanguageSuggestionsCalendarID
INSERT INTO Calendar (ROWID, store_id, title, flags, UUID, self_identity_id, owner_identity_id) VALUES (1, 1, 'Default', %u, '%@', -1, -1);
DEFAULT_CALENDAR_NAME
INSERT INTO Calendar (store_id, title, UUID, self_identity_id, owner_identity_id) VALUES (%d, 'Default', '%@', -1, -1);
DELETE FROM Calendar WHERE ROWID = 1
INSERT INTO Error (calendar_owner_id, error_code, user_info) SELECT ROWID, last_sync_error, last_sync_error_data FROM Calendar WHERE last_sync_error != 0
color
color_r
color_g
color_b
symbolic_color_name
error_id
last_sync_error
SELECT ROWID FROM Error WHERE calendar_owner_id = ?
^v24@?0^{__CFString=}8^{__CFDictionary=}16
BirthdayCalendarID
UPDATE Calendar SET supported_entity_types = %ld, color = '%@' WHERE ROWID = %d;
#8295AF
SELECT ROWID, flags FROM Calendar WHERE color IS NULL
UPDATE Calendar SET color = ?, color_is_display = 1 WHERE ROWID = ?
UPDATE Calendar SET color = '%@' WHERE color in ('%@', '%@', '%@');
UPDATE Calendar SET supported_entity_types = %ld WHERE (supported_entity_types = 0 OR supported_entity_types IS NULL);
UPDATE Calendar SET invitation_status = 3 WHERE invitation_status = 2
UPDATE Calendar SET invitation_status = 2 WHERE invitation_status = 1
DELETE FROM Calendar WHERE store_id NOT IN (SELECT ROWID FROM Store);
/?&:$+,;=@
x-apple-calendar://%@
CalCalendarRef CalDatabaseCopyDefaultOrAnyReadWriteCalendarForNewEvents(CalDatabaseRef, CalStoreRef)
CalCalendarRef CalDatabaseCopyOrCreateDefaultCalendarForNewEvents(CalDatabaseRef)
void CalDatabaseCreateWritableCalendarForEntityTypeInStoreIfNeeded(CalDatabaseRef, CalEntityType, CalStoreRef)
reminders
DEFAULT_TASK_CALENDAR_NAME
No reason provided
vestigial
void CalDatabaseEnsureDefaultCalendarForNewTasksExists(CalDatabaseRef)
Unable to add calendar to store. Store is restricted to calendars which support only one entity
Reminders
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalCalendar.m:4032
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalCalendar.m:4055
Flags
OldFlags
ExternalIDTag
UPDATE Calendar SET external_id = NULL, external_mod_tag = NULL, external_id_tag = NULL, external_rep = NULL, shared_owner_name = NULL, shared_owner_address = NULL, sharing_status = 0, sync_token = NULL, is_published = 0, published_URL = NULL WHERE store_id = %d;
UPDATE Calendar SET store_id = %d WHERE store_id = %d AND ROWID != %d;
UPDATE Calendar SET store_id = %d WHERE store_id = %d AND ROWID = %d;
color_is_display
supported_entity_types
display_order
added_items
shared_owner_name
shared_owner_address
sharing_status
sharing_invitation_response
published_URL
is_published
invitation_status
sync_token
has_dirty_instance_attributes
has_dirty_sync_attributes
self_identity_id
self_identity_email
self_identity_phone_number
owner_identity_id
owner_identity_email
owner_identity_phone_number
bulk_requests
subcal_account_id
push_key
refresh_date
subscription_id
last_sync_start
last_sync_end
subcal_url
refresh_interval
pubcal_account_id
old_flags
max_attendees
last_sync_title
store
resource_changes
selfIdentityAddress
ownerIdentityAddress
alarms
error
NativeStoreID
Facebook Birthdays
Birthdays
INSERT INTO Calendar (store_id, title, flags, supported_entity_types, UUID, color, self_identity_id, owner_identity_id) VALUES (%d, '%@', %d, %ld, '%@', '%@', -1, -1);
Found in Mail
INSERT INTO Calendar (store_id, title, flags, supported_entity_types, UUID, color, symbolic_color_name, self_identity_id, owner_identity_id) VALUES (%d, '%@', %d, %ld, '%@', '%@', '%@', -1, -1);
DELETE FROM Notification WHERE calendar_id IN (SELECT ROWID FROM Calendar WHERE (flags & %d));
DELETE FROM NotificationChanges WHERE calendar_id IN (SELECT ROWID FROM Calendar WHERE (flags & %d));
DELETE FROM Calendar WHERE ROWID IN (SELECT ROWID FROM Calendar WHERE (flags & %d));
Found in Natural Language
FacebookBirthdayCalendarID
CalendarExternalId
CalendarStoreId
CalendarUUID
CalendarIsPublished
CalendarSelfIdentityId
INSERT INTO Calendar (store_id, title, flags, supported_entity_types, UUID, color, color_is_display, self_identity_id, owner_identity_id) VALUES (1, '%@', 0, %d, '%@', '%@', 1, -1, -1);
delete_calendar_members
DELETE FROM OccurrenceCacheDays where calendar_id = OLD.ROWID;DELETE FROM OccurrenceCache where calendar_id = OLD.ROWID;DELETE FROM CalendarItem WHERE calendar_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Notification WHERE calendar_id = OLD.ROWID; DELETE FROM sharee where owner_id = OLD.ROWID;DELETE FROM Alarm WHERE calendar_owner_id = OLD.ROWID;DELETE FROM Error WHERE calendar_owner_id = OLD.ROWID;
read_only
hidden
immutable
shared_owner_email
read_status
last_sync_error_data
SiriCanLearnFromAppBlacklist
com.apple.suggestions
com.apple.suggestions.settingsChanged
AppCanShowSiriSuggestionsBlacklist
CalMigrateSubcalExternalID
UPDATE Calendar SET external_id = CalMigrateSubcalExternalID(external_id) WHERE (Calendar.flags & %i) != 0 AND EXISTS (SELECT Store.ROWID FROM Store WHERE Store.ROWID = store_id AND Store.type == %i)
Database null during saving?
Old default (%@) not valid
DefaultTaskCalendarID
DefaultTaskCalendarStoreUID
DefaultTaskCalendarName
#%02X%02X%02X
_CalCalendarLoad
CalCalendar.m
propDesc->extra != 0
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN     (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN     (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
SELECT color, flags FROM Calendar;
caldav
urlsubscribe
PreMergeSourceCalendarItemCount
PreMergeDestiniationCalendarItemCount
PostMergeSourceCalendarItemCount
PostMergeDestinationCalendarItemCount
ErrorCount
CountMismatch
DataSource.Merge
%@-CalDAVInfo
CalStoreSetupAndTeardownUtils.m
Cannot enable/disable local store in an auxiliary database
extraParams
Category
WHERE name LIKE ? AND entity_type = ?
Multiple categories found with name = '%@', entityType = %d
WHERE hidden = 0 AND entity_type = ?
name
entity_type
CategoryNameAndType
name, entity_type
JOIN CategoryLink ON CategoryLink.owner_id = e.ROWID WHERE CategoryLink.category_id = ?
CalRelation
<CalRelation: %p> owner: [%@] related object: [%@]
Undefined
Source
Event
Task
Alarm
RecurrenceRule
Attendee
Organizer
ExceptionDate
EventAction
Location
Attachment
Sharee
InviteReplyNotification
ResourceChangeNotification
SuggestionNotification
Notification
CalendarItem
CategoryLink
Participant
SuggestedEventInfo
Contact
Conference
AuxDatabase
AuxDatabaseAccount
entityType: [%@] address: [%p] row ID: [%@] changedProperties: [%@]
Got entity type 0 for entity with CFType: %lu, recordDescriptor: %p, recordDescriptorName: %s
Unknown
Normal
Personal
Private
Confidential
Person
Room
Resource
Group
Unknown (%@)
Required
Optional
Chair
NonParticipant
NonParticipantChair
Pending
Accepted
Declined
Tentative
Delegated
Completed
Inprocess
Email
CREATE TEMP TABLE _MigrationParticipant (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, UUID TEXT, owner_id INTEGER, is_self INTEGER, entity_type INTEGER, identity_match_type INTEGER, identity_match_value TEXT);
CREATE INDEX temp._MigrationParticipantIndex on _MigrationParticipant(owner_id, is_self, entity_type, identity_match_type, identity_match_value);
        INSERT INTO temp._MigrationParticipant (ROWID, UUID, owner_id, is_self, entity_type, identity_match_type, identity_match_value) SELECT ROWID, UUID, owner_id, is_self, entity_type, CASE         WHEN Identity.address NOT NULL THEN 1         WHEN email NOT NULL THEN 2         WHEN phone_number NOT NULL THEN 3         WHEN Identity.display_name NOT NULL THEN 4         ELSE 5         END as identity_match_type,         CASE         WHEN Identity.address NOT NULL THEN Identity.address         WHEN email NOT NULL THEN email         WHEN phone_number NOT NULL THEN phone_number         WHEN Identity.display_name NOT NULL THEN Identity.display_name         ELSE Identity.first_name || "_&NZB^^_" || Identity.last_name         END as identity_match_value         FROM Participant LEFT JOIN Identity ON identity_id = Identity.ROWID;
        UPDATE temp._MigrationParticipant AS participantToUpdate         SET UUID = subQuery.mainParticipantUUID         FROM         (         SELECT detachedParticipant.ROWID as detachedParticipantROWID, mainParticipant.UUID AS mainParticipantUUID FROM temp._MigrationParticipant AS detachedParticipant         INNER JOIN CalendarItem AS detachedEvent ON detachedParticipant.owner_id = detachedEvent.ROWID         INNER JOIN CalendarItem AS mainEvent ON mainEvent.ROWID = detachedEvent.orig_item_id         INNER JOIN temp._MigrationParticipant AS mainParticipant ON mainEvent.ROWID = mainParticipant.owner_id         WHERE         detachedParticipant.is_self = mainParticipant.is_self AND         detachedParticipant.entity_type = mainParticipant.entity_type AND         detachedParticipant.identity_match_type = mainParticipant.identity_match_type AND         detachedParticipant.identity_match_value = mainParticipant.identity_match_value GROUP BY detachedParticipantROWID) AS subQuery         WHERE participantToUpdate.ROWID = subQuery.detachedParticipantROWID;
UPDATE Participant SET UUID = subQuery.UUID FROM (SELECT ROWID, UUID FROM temp._MigrationParticipant) AS subQuery WHERE Participant.ROWID = subQuery.ROWID;
DROP TABLE _MigrationParticipant;
UPDATE Participant SET identity_id = (SELECT Attendee_.participant_id FROM Attendee_ WHERE Attendee_.ROWID = Participant.ROWID);
UPDATE Participant SET email = (SELECT Identity.address FROM Attendee_, Identity WHERE Attendee_.ROWID = Participant.ROWID AND Attendee_.participant_id = Identity.ROWID);
UPDATE Participant SET email = (SELECT Identity.address FROM Participant_, Identity WHERE Participant_.ROWID = Participant.ROWID AND Participant_.identity_id = Identity.ROWID);
UPDATE Identity SET address = IFNULL((SELECT external_id FROM Participant_, Identity WHERE Identity.ROWID = Participant_.identity_id), 'mailto:' || address);
Unexpected entity type for participant: %d
DELETE FROM Participant WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
IDENTITY_MATCHES
SELECT owner_id FROM Participant WHERE IDENTITY_MATCHES(identity_id);
uuid: [%@] displayName: [%@] address: [%@] emailAddress: [%@] phoneNumber: [%@] role: [%@] status: [%@] type: [%@] responseComment: [%@] calendarItemRowID: [%@] calendarItemUUID: [%@]
CalOrganizerSetOwner
CalAttendee.m
CalEntityIsOfType(organizer, CalOrganizerEntity)
FIRST=%@;
LAST=%@;
email
phone_number
pending_status
role
is_self
schedule_agent
last_modified
proposed_start_date
invited_by
proposed_start_date_status
schedule_status
schedule_force_send
display_name
organizer_owner
attendee_owner
first_name
last_name
comment_last_modified
is_self_attendee
ParticipantEventId
ParticipantUUID
ParticipantEntityType
ParticipantOwnerId
ParticipantIdentityId
ParticipantEmail
ParticipantPhoneNumber
ParticipantProposedStartDate
participant_id
participation_type
_CalCreateParticipant
entityType == CalAttendeeEntity || entityType == CalOrganizerEntity
CalParticipantGetUID
CalEntityIsOfType(participant, CalParticipantEntity)
participant
WHERE participant.entity_type = ?
JOIN CalendarItem ON participant.owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID WHERE participant.entity_type = ? AND store_id = ?
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class IN (%d, %d) AND client_identifier = '%@')
entity_type = %d  AND store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
calendar_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class IN (%d, %d) AND client_identifier = '%@')
entity_type = %d  AND calendar_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
WHERE UUID = ? AND participant.entity_type = ?
JOIN Identity ON participant.identity_id = Identity.rowid WHERE participant.owner_id = ? AND Identity.address = ?
SELECT 1 WHERE EXISTS (SELECT CalendarItem.ROWID FROM Participant as SelfParticipant, Participant as Organizer, CalendarItem WHERE CalendarItem.organizer_id = Organizer.ROWID AND CalendarItem.self_attendee_id = SelfParticipant.ROWID AND (SelfParticipant.status = ? OR SelfParticipant.status = ?) AND Organizer.%s = ? AND SelfParticipant.ROWID != Organizer.ROWID)
SELECT 1 WHERE EXISTS (SELECT CalendarItem.ROWID FROM Participant as SelfParticipant, Participant as OtherParticipant, CalendarItem WHERE OtherParticipant.owner_id = CalendarItem.ROWID AND CalendarItem.self_attendee_id = SelfParticipant.ROWID AND (SelfParticipant.status = ? OR SelfParticipant.status = ?) AND OtherParticipant.%s = ? AND SelfParticipant.ROWID != OtherParticipant.ROWID)
SELECT 1 WHERE EXISTS (SELECT CalendarItem.ROWID FROM Participant as SelfParticipant, Participant as OtherParticipant, CalendarItem WHERE OtherParticipant.owner_id = CalendarItem.ROWID AND CalendarItem.organizer_id = SelfParticipant.ROWID AND SelfParticipant.is_self = 1 AND OtherParticipant.%s = ? AND SelfParticipant.ROWID != OtherParticipant.ROWID)
CalRecordID
<CalRecordID: %p> { entityType = %d; rowID = %d; }
com.apple.calendar.CalendarDatabase.CalRecordID
<rdar://problem/27536217>
_CalRecordIDLoad
CalRecordID.m
false
SELECT ROWID from %@ WHERE UUID IS NULL
UPDATE %@ SET UUID= ? WHERE rowid = ?;
SELECT ROWID FROM %s WHERE ROWID = ?
com.apple.mobilecal.invitationalertschanged
UPDATE CalendarItem SET orig_date = NULL WHERE orig_date = -2147483648
UPDATE CalendarItem SET last_modified = NULL WHERE last_modified = -2147483648
UPDATE CalendarItem SET has_attendees = 1 WHERE EXISTS (SELECT ROWID FROM Participant WHERE Participant.owner_id = CalendarItem.ROWID AND entity_type = 7)
UPDATE CalendarItem SET due_tz = start_tz, due_all_day = all_day WHERE entity_type = 3 AND due_date IS NOT NULL
UPDATE CalendarItem SET display_order = CAST(creation_date AS INT), external_mod_tag = NULL WHERE entity_type = 3
UPDATE CalendarItem SET invitation_status = 3 WHERE invitation_status = 2
UPDATE CalendarItem SET invitation_status = 2 WHERE invitation_status = 1
UPDATE CalendarItem SET end_tz = start_tz WHERE entity_type = 2
DELETE FROM CalendarItem WHERE calendar_id NOT IN (SELECT ROWID FROM Calendar);
DELETE FROM CalendarItem WHERE (orig_date != 0 AND orig_item_id = 0) OR orig_item_id IN (SELECT ROWID FROM CalendarItem WHERE orig_date != 0 AND orig_item_id = 0);
DELETE FROM CalendarItem WHERE orig_item_id = ROWID OR orig_item_id IN (SELECT ROWID FROM CalendarItem WHERE orig_item_id = ROWID);
_CalCalendarItemCreate
CalEvent.m
uuid: [%@] externalID: [%@] uniqueIdentifier: [%@] summary: [%@] startDate: [%@] endDate: [%@] isAllDay: [%@] url: [%@] isDetached: [%@] locationFullDisplayString: [%@] calendarUUID: [%@] calendarRowID: [%@]
_CalCalendarItemCreateCopyPreservingUniqueIdentifier
original != NULL
CalCalendarItemCreateCopy
_CalTaskMarkAsNeedingScheduledTaskCacheUpdate
_CalEntityIsOfType(task, CalTaskEntity)
 WHERE entity_type = %i AND ROWID > ?
 LIMIT %i
x-apple-calevent://%@/%@?o=%lld
x-apple-calevent://%@/%@
Unexpected entity type [%d for calendar item with rowid [%d]
CalCalendarItemCopyUUID
item != NULL
SELECT external_id, external_mod_tag FROM CalendarItem WHERE entity_type = 2 AND external_id IN (
) AND calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = ?);
 JOIN Participant ON self_attendee_id = Participant.rowid 
 JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ? AND 
Participant.entity_type = ? AND Participant.pending_status IN (?, ?, ?)
 JOIN Participant ON self_attendee_id = Participant.rowid WHERE Participant.entity_type = ? AND calendar_id = ? AND Participant.pending_status IN (?, ?, ?)
 JOIN Participant ON organizer_id = Participant.rowid JOIN Calendar ON calendar_id = Calendar.rowid JOIN Store ON Calendar.store_id = Store.rowid WHERE (Participant.schedule_agent = ? OR Store.type = ?) AND Participant.is_self = 1
 AND 
(external_tracking_status != 0)
 WHERE calendar_id = ? AND external_tracking_status != 0;
CalDB: Invalid timezone (start date): '%@', substituting float
SELECT rowid FROM CalendarItem WHERE location LIKE '%%%@%%' or summary LIKE '%%%@%%';
%s: %s
CalDatabaseCopyEventIDsThatMatchLocationOrSummary
SELECT COUNT(*) FROM CalendarItem AS ci
 WHERE status = ? and invitation_status = 0
 WHERE invitation_status = ? AND self_attendee_id != 0
 AND calendar_id NOT IN (SELECT ROWID FROM Calendar WHERE store_id IN 
 AND (has_recurrences = 1 OR (start_tz = ? AND end_date > ?) OR (start_tz != ? AND end_date > ?));
InvitationAlerts
SharedEventAlerts
InviteeDeclineAlerts
ShowDeclinedEvents
com.apple.mobilecal.showdeclinedchanged
_CalDatabaseCopyNonRecurringEventsInDateRange
has_recurrences = 0 AND hidden = 0 AND ((end_date > ? AND start_date < ?) OR (proposed_start_date > ? AND proposed_start_date < ?))
r.frequency
r.count
r.cached_end_date
r.cached_end_date_tz
r.end_date
r.specifier
r.by_month_months
 FROM CalendarItem e JOIN Recurrence r ON r.owner_id = e.ROWID
_CalDatabaseCopyRecurringEventsPossiblyOccurringInDateRange
entity_type = 2 AND has_recurrences = 1 AND hidden=0 AND start_date < ? 
invalid
CalDatabaseRemoveCalendarItemChangesInCalendarToIndex
calendar != NULL
entity_type = ? AND calendar_id = ?
v20@?0^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}8i16
CalDatabaseRemoveCalendarItemChangesInStoreToIndex
store != NULL
CalDatabaseCopyCalendarItemChangesInCalendar
entity_type = ? AND calendar_id = ? AND old_calendar_id != 0
entity_type = ? AND calendar_id = ? AND old_calendar_id = 0
 AND sequence_number > (select latest_consumed_sequence_number FROM ClientCursor WHERE client_identifier = ?)
 AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)
 AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = ? AND client_identifier = ?)
 AND sequence_number <= ?
entity_type = ?
 AND store_id = ?
 AND old_calendar_id != 0
 AND old_calendar_id = 0
UPDATE CalendarItem SET external_tracking_status = NULL, external_id = NULL, external_mod_tag = NULL, external_rep = NULL WHERE (calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = %d));
SELECT calendaritem.rowid, calendaritem.orig_item_id, calendaritem.orig_date, calendaritem.unique_identifier from CalendarItem, Calendar, Store WHERE calendaritem.unique_identifier IS NULL and (calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = %d));
UPDATE CalendarItem SET calendar_id = %d WHERE calendar_id = %d;
STRING_MATCHES
ORGANIZER_MATCHES
LOCATION_MATCHES
SELECT ROWID FROM CalendarItem WHERE 
STRING_MATCHES(?, IFNULL(summary, '') || ' ' || IFNULL(description,'')) OR ORGANIZER_MATCHES(organizer_id) OR 
LOCATION_MATCHES(location_id)
%@ AND (%@);
CalDatabaseCopyEventIdsForSearch
SELECT CalendarItem.ROWID FROM CalendarItem, Location WHERE entity_type = 2 AND Location.ROWID = CalendarItem.location_id
SELECT CalendarItem.ROWID FROM CalendarItem WHERE entity_type = 2
STRING_MATCHES(?, IFNULL(summary, ''))
STRING_MATCHES(?, IFNULL(location.title, ''))
(organizer_id == 0 AND STRING_MATCHES(?, IFNULL(summary, '')))
STRING_MATCHES(?, IFNULL(description, ''))
 WHERE recurrence_set = ? AND start_date > ?
 AND external_id IS NOT NULL AND external_id != ""
 ORDER BY start_date LIMIT 1
q24@?0@8@16
WHERE recurrence_set = ?
location_id
client_location_id
description
start_date
start_tz
end_tz
all_day
orig_item_id
orig_date
organizer_id
self_attendee_id
privacy_level
sequence_num
birthday_id
modified_properties
external_tracking_status
external_schedule_id
response_comment
last_synced_response_comment
has_recurrences
has_attendees
due_date
due_tz
due_all_day
completion_date
creation_date
action
app_link
created_by_id
modified_by_id
shared_item_created_date
shared_item_created_tz
shared_item_modified_date
shared_item_modified_tz
invitation_changed_properties
default_alarm_removed
phantom_master
participation_status_modified_date
calendar_scale
travel_time
travel_advisory_behavior
start_location_id
end_location_id
suggested_event_info_id
first_alert_date
can_forward
location_prediction_state
fired_ttl
disallow_propose_new_time
structured_data
local_structured_data
junk_status
conference_url
contact_identifier
recurrence_set
contact_name
exception_dates
recurrences
attendees
attendees_pending_delete
categories
self_attendee
update_occurrence_cache
update_scheduled_task_cache
has_dirty_notifiable_instance_attributes
old_calendar_id
old_external_id
event_actions
detached_events
original_event
location
client_location
start_location
end_location
suggested_event_info
contacts
created_by_display_name
created_by_address
modified_by_display_name
modified_by_address
created_by_first_name
created_by_last_name
modified_by_first_name
modified_by_last_name
conference_url_detected
has_description
self_participant_status
virtual_conference
suppress_notification_for_changes
special_day
status != -1
status == -1
SELECT (description != '') FROM %s WHERE ROWID = ?
EventCalendarId
EventOriginalEventId
orig_event_id
EventExternalId
EventExternalIdentificationTag
EventExternalUniqueIdentifier
CalendarItemOriginalItemId
EventCalendarIdHiddenEndDateStartDate
calendar_id, hidden, end_date, start_date
EventReadStatus
CalendarItemEntityTypeCompletionDate
entity_type, completion_date
CalendarItemEntityTypeCalendarIdCompletionDateCreationDate
entity_type, calendar_id, completion_date, creation_date
EventStatus
EventHiddenEndDateStartDate
hidden, end_date, start_date
EventExternalIdCalId
external_id, calendar_id
EventExternalUniqueIdentifierCalId
unique_identifier, calendar_id
EventUUID
CalendarItemDueDate
EventInvitationStatus
CalendarItemOriginalDate
CalendarItemCalendarId
CalendarItemRecurrenceSet
delete_event_alarms_recurs
DELETE FROM Location WHERE item_owner_id = OLD.ROWID;DELETE FROM Location WHERE start_loc_owner_id > 0 AND start_loc_owner_id = OLD.ROWID;DELETE FROM Location WHERE end_loc_owner_id > 0 AND end_loc_owner_id = OLD.ROWID;DELETE FROM Location WHERE client_loc_owner_id > 0 AND client_loc_owner_id = OLD.ROWID;DELETE FROM Alarm WHERE calendaritem_owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Attachment WHERE owner_id = OLD.ROWID;DELETE FROM ScheduledTaskCache WHERE task_id = OLD.ROWID;DELETE FROM EventAction WHERE event_id = OLD.ROWID;DELETE FROM SuggestedEventInfo WHERE ROWID = OLD.suggested_event_info_id;DELETE FROM Error WHERE ROWID = OLD.error_id;DELETE FROM CategoryLink WHERE owner_id = OLD.ROWID;
orig_start_date
organizer_is_self
external_status
external_delivery_source_id
external_delivery_item_id
organizer_external_id
conference
suggestion_id
travel_advisory_generation_is_automatic
suggestions_opaque_key
suggestions_unique_key
suggestions_changed_fields
arrival_offset
departure_offset
SELECT Event.rowid, organizer_id, organizer_is_self, address FROM Event, Identity WHERE organizer_id > 0 AND organizer_id = Identity.rowid
INSERT INTO Participant (entity_type, identity_id, owner_id, is_self, email, UUID) VALUES (?, ?, ?, ?, ?, ?)
UPDATE Event SET organizer_id = ? WHERE rowid = ?
INSERT INTO Location (title, item_owner_id) VALUES (?, ?)
SELECT rowid, location FROM %@ WHERE location IS NOT NULL
SELECT ROWID, item_owner_id FROM Location
UPDATE CalendarItem SET location_id = ? WHERE ROWID = ?
SELECT COUNT(*) FROM Recurrence WHERE event_id = ?
SELECT COUNT(*) FROM Recurrence WHERE owner_id = ? AND owner_type = 2
SELECT rowid, status FROM CalendarItem
UPDATE CalendarItem SET status = ?, invitation_status = ?, has_recurrences = ? WHERE ROWID=?
SELECT calendaritem.rowid, calendaritem.orig_item_id, calendaritem.orig_date, calendaritem.unique_identifier from CalendarItem, Calendar, Store WHERE calendaritem.unique_identifier IS NULL and calendaritem.calendar_id = calendar.rowid and calendar.store_id = store.rowid and store.type != 1;
CalDetectedConferenceURL
UPDATE CalendarItem SET conference_url_detected = (SELECT CalDetectedConferenceURL(description, url, Location.title, Location.address) FROM CalendarItem as ci LEFT JOIN Location ON Location.ROWID = IFNULL(client_location_id, location_id) WHERE ci.ROWID = CalendarItem.ROWID)
UPDATE CalendarItem SET orig_item_id = 0, orig_date = NULL WHERE orig_item_id = ?
_CalEventMarkEventAsNeedingOccurrenceCacheUpdate
_CalEntityIsOfType(event, CalEventEntity)
Duplicate Location Reference
_CalEventPrepareForSave
_CalEntityIsOfType(record, CalEventEntity)
_CalEntityIsOfType(record, CalTaskEntity)
INSERT INTO CalendarItemChanges (record, type, entity_type, sequence_number, store_id, calendar_id, old_calendar_id, external_id, old_external_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
%@/RID=%llu
Mevent
 JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?
 WHERE summary = ? AND start_date = ?
 WHERE calendar_id = ?
 AND start_date > ? AND suggested_event_info_id > 0
%%%@%%
 AND summary LIKE ?
EKEventNaturalLanguageSuggestedEventExpirationDate
CalDB: Invalid timezone (all day): '%@', substituting float
 JOIN Participant ON self_attendee_id = Participant.rowid
 WHERE Event.external_id IS NULL AND Participant.entity_type == ? AND Participant.status = ? AND end_date < ?
 JOIN Participant ON ci.self_attendee_id = Participant.rowid
 WHERE (Participant.entity_type = ? AND Participant.status NOT IN (?, ?, ?))
 WHERE (Participant.entity_type = ? AND Participant.status IN (?, ?, ?)) AND Participant.is_self = 0
 AND
 (ci.invitation_status IN (0, 1, 2, 3)
 (ci.invitation_status IN (1, 2, 3)
 AND (                 ((start_tz = ? AND end_date > ?) OR (start_tz != ? AND end_date > ?))                     OR                 (ci.has_recurrences AND (                        ( ci.ROWID IN (SELECT owner_id FROM Recurrence WHERE owner_id = ci.ROWID AND (                             cached_end_date + ci.end_date - ci.start_date > ? OR                             end_date + ci.end_date - ci.start_date > ? OR                             (count = 0 AND end_date IS NULL)                        ) )                     ) )                 )             );
opaque_key
extraction_group_identifier
JOIN SuggestedEventInfo ON CalendarItem.ROWID = SuggestedEventInfo.owner_id WHERE SuggestedEventInfo.%@ = ?
JOIN SuggestedEventInfo ON CalendarItem.ROWID = SuggestedEventInfo.owner_id
SELECT CalendarItem.* FROM CalendarItem JOIN Participant As organizerParticipant ON CalendarItem.organizer_id = organizerParticipant.rowid JOIN Participant AS otherParticipant ON CalendarItem.ROWID = otherParticipant.owner_id WHERE (CalendarItem.invitation_changed_properties & %i) != 0 AND otherParticipant.is_self = 0 AND otherParticipant.proposed_start_date > 0 AND (otherParticipant.proposed_start_date + (CalendarItem.end_date - CalendarItem.start_date) > ?) AND organizerParticipant.is_self = 1
 AND otherParticipant.proposed_start_date_status != 1
 GROUP BY CalendarItem.ROWID;
WHERE ROWID = (SELECT calendar_id FROM CalendarItem WHERE ROWID = ?)
gregorian
_CalDatabaseRemoveCalendarItemChangesInStoreToIndex
entity_type = ? AND store_id = ?
_CalDatabaseAmendDeleteForCalendarItemWithExternalID
UPDATE CalendarItemChanges SET external_id = ? WHERE record = ? AND type = 2
rowid
origEventId
origStartDate
uniqueId
UPDATE CalendarItem SET orig_event_id = 0, orig_start_date = 0 WHERE rowid = %d;
UPDATE CalendarItem SET unique_identifier="%@" WHERE rowid = %d;
%@/RID=%.f
calendar_id IN (SELECT ROWID From Calendar WHERE store_id NOT IN %@)
CalAttachmentXXXXXX
CalAlarm
CalEvent
CalAttendee
CalAttachment
CalTask
CalCalendar
CalStore
SupportedTriggers
Interval
Absolute
SupportsAlarmsTriggeringAfterStartDate
MaximumNumberOfAlarms
MaximumNumberOfRecurrences
FutureStartLimitedToOccurrenceCache
ResponseRequiresDeliverySourceOrExternalID
SupportsResponseComment
DeletesDetachedEventsWhenDeletingOriginal
DurationConstrainedToRecurrenceInterval
ResponseRequiresProposedStatus
OccurrenceOrderEnforcedAfterDetachment
OccurrencesMustOccurOnSeparateDays
StatusIsAccurate
ExternalStatusMirrorsStatus
RejectedStatusChangeRequiresNoExternalStatus
CalendarNotChangeable
SupportsAvailability
SupportsLimitedAvailability
CancelDeletedEvents
DeclineDeletedInvitations
RequiresOutgoingInvitationsInDefaultCalendar
RequiresMSFormattedUID
RecurrencesPinnedToMonthDays
MustAcknowledgeMasterEvent
SupportsStructuredLocations
SupportsReminderLocations
SupportsReminderActions
SupportsAlarmProximity
SupportsURL
SupportsAutoGeocodingStructuredLocations
UseDeletedByOrganizerStatus
StatusIsKnownForInvitedEvents
StatusIsKnownForOrganizedEvents
RequireAttendeeSearchInSingleAccount
CanUpdateLastModified
RequiresSeparateFilesForAllAttachments
SupportedPriorities
supportsAllDayDueDates
SupportsExactlyOneEntityType
RecurrenceSeriesMustIncludeMoreThanFirstOccurrence
SupportsIncomingInvitations
SupportsOutgoingInvitations
SupportsInvitationModifications
SupportsReadWriteCalendars
EWSItemIDString
EWSChangeKeyString
EWSPermissionString
CalExchangeCalendarItemExternalRepresentation
SEEKRITEVENT
[Placeholder Item]
SELECT Alarm.rowid, trigger_date, trigger_tz, start_tz, due_tz, entity_type FROM Alarm, CalendarItem WHERE Alarm.owner_id = CalendarItem.rowid
UPDATE Alarm SET trigger_date = ? WHERE ROWID = ?
UPDATE Alarm SET trigger_date = NULL WHERE trigger_date = -2147483648
CREATE_UUID
INSERT INTO Alarm (trigger_interval, type, calendarItem_owner_id, calendar_owner_id, UUID, proximity, disabled, location_id, default_alarm, orig_alarm_id) SELECT 0, 0, ROWID, -1, CREATE_UUID(), 0, 0, 0, 1, 0 FROM CalendarItem WHERE     entity_type = 2     AND IFNULL(default_alarm_removed, 0) = 0     AND ROWID NOT IN (SELECT DISTINCT calendaritem_owner_id FROM Alarm WHERE default_alarm = 1) 
DELETE FROM Alarm WHERE calendaritem_owner_id NOT IN (SELECT ROWID FROM CalendarItem)                                                                                      AND calendar_owner_id NOT IN (SELECT ROWID FROM Calendar);
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND trigger_date IS NOT NULL AND completion_date IS NULL AND (trigger_date >= ? AND trigger_date <= ?) AND CalendarItem.has_recurrences = 0
MATCH_DATE_RANGE
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE     Store.delegated_account_owner_store_id IS NULL     AND ((proximity = 0 OR proximity IS NULL)     AND trigger_date IS NULL     AND has_recurrences = 0     AND MATCH_DATE_RANGE(start_tz, start_date, travel_time, trigger_interval, all_day, default_all_day_alarm_offset, default_alarm_offset, default_alarm, has_recurrences) 
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE     Store.delegated_account_owner_store_id IS NULL     AND ((proximity = 0 OR proximity IS NULL)     AND trigger_date IS NULL     AND has_recurrences = 1     AND MATCH_DATE_RANGE(start_tz, start_date, travel_time, trigger_interval, all_day, default_all_day_alarm_offset, default_alarm_offset, default_alarm, has_recurrences) 
UPDATE Alarm SET external_mod_tag = NULL, external_id_tag = NULL, external_rep = NULL                                                                           WHERE calendaritem_owner_id IN (SELECT CalendarItem.ROWID FROM CalendarItem JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = %d)                                                                           OR calendar_owner_id IN (SELECT Calendar.ROWID FROM Calendar WHERE store_id = %d);
JOIN CalendarItem ON alarm.calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND CalendarItem.entity_type = 3 AND CalendarItem.completion_date IS NULL AND alarm.disabled = 0 AND alarm.proximity != 0 AND alarm.location_id != 0
alarm
WHERE alarm.disabled = 0 AND alarm.proximity != 0 AND alarm.location_id != 0 AND alarm.calendar_owner_id IN (SELECT ROWID FROM Calendar)
JOIN CalendarItem ON alarm.calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND CalendarItem.entity_type = 3 AND CalendarItem.completion_date IS NULL AND alarm.disabled = 0 AND alarm.proximity >= 3 AND alarm.proximity <= 4
trigger_date
trigger_interval
default_alarm
orig_alarm_id
email_address
bookmark
original_alarm
snoozed_alarms
url_wrapper
AlarmExternalId
AlarmUUID
AlarmOwnerId
AlarmTriggerDate
AlarmCalendarItemOwnerId
AlarmCalendarOwnerId
AlarmOrigAlarmId
cascade_alarm_delete
DELETE FROM Location WHERE alarm_owner_id = OLD.ROWID AND alarm_owner_id > 0;
entity_id
trigger_tz
url_string
WHERE calendaritem_owner_id IN (SELECT CalendarItem.ROWID FROM CalendarItem JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?)                                                                                                       OR calendar_owner_id IN (SELECT Calendar.ROWID From Calendar WHERE store_id = ?)
 AND %@ IN (
%d, 
CalendarItem.calendar_id
calendar_id = %d AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@') AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@') AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
ItemBridgeOptions
ItemBridgeExceptionDates
ItemBridgeIsAllDay
ItemBridgeEventIsFloating
ItemBridgeStartDateTimezone
/RID=
(none)
X-MICROSOFT-CDO-ALLDAYEVENT
X-FUNAMBOL-ALLDAY
v32@?0@8@16^B24
B32@?0@8Q16^B24
Attach
Description
Summary
Reminder
mailto
CREATE TABLE Identity (display_name TEXT, address TEXT, first_name TEXT, last_name TEXT, UNIQUE (display_name, address, first_name, last_name));
ALTER TABLE Participant RENAME TO Participant_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, email FROM Participant_ WHERE name IS NOT NULL AND email IS NOT NULL;
INSERT INTO Identity (ROWID, display_name, address) SELECT MIN(ROWID), name, email FROM Participant_ WHERE email IS NULL AND name IS NOT NULL GROUP BY name;
INSERT INTO Identity (ROWID, display_name, address) SELECT MIN(ROWID), name, email FROM Participant_ WHERE name IS NULL AND email IS NOT NULL GROUP BY email;
INSERT INTO Identity (ROWID, display_name, address) SELECT MIN(ROWID), name, email FROM Participant_ WHERE name IS NULL AND email IS NULL GROUP BY email;
SELECT ROWID, address FROM Identity WHERE address IS NULL AND display_name IS NOT NULL;
UPDATE Attendee SET participant_id = ? WHERE participant_id IN (SELECT ROWID FROM Participant_ WHERE email IS NULL AND name = ?);
UPDATE Event SET organizer_id = ? WHERE organizer_id IN (SELECT ROWID FROM Participant_ WHERE email IS NULL AND name = ?);
SELECT ROWID, address FROM Identity WHERE address IS NULL;
UPDATE Attendee SET participant_id = ? WHERE participant_id IN (SELECT ROWID FROM Participant_ WHERE name IS NULL AND email = ?);
UPDATE Event SET organizer_id = ? WHERE organizer_id IN (SELECT ROWID FROM Participant_ WHERE name IS NULL AND email = ?);
DROP TABLE Participant_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, email FROM Participant_
ALTER TABLE Identity RENAME TO Identity_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, email FROM Identity_
DROP TABLE Identity_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, address FROM Identity_
INSERT OR REPLACE INTO aux.Identity (ROWID, display_name, address, first_name, last_name) SELECT ROWID, display_name, address, first_name, last_name FROM Identity WHERE ROWID IN (SELECT identity_id FROM aux.Participant) OR ROWID IN (SELECT identity_id FROM aux.Sharee) OR ROWID IN (SELECT identity_id FROM aux.Notification) OR ROWID IN (SELECT identity_id FROM aux.ResourceChange) OR ROWID IN (SELECT created_by_id FROM aux.CalendarItem) OR ROWID IN (SELECT modified_by_id FROM aux.CalendarItem) OR ROWID IN (SELECT self_identity_id FROM aux.Calendar) OR ROWID IN (SELECT owner_identity_id FROM aux.Calendar)
display_name IS NULL
display_name = ?
address IS NULL
address = ?
first_name IS NULL
first_name = ?
last_name IS NULL
last_name = ?
SELECT ROWID FROM Identity WHERE %@ AND %@ AND %@ AND %@
INSERT INTO Identity (display_name, address, first_name, last_name) VALUES (?, ?, ?, ?);
DELETE FROM Identity WHERE NOT EXISTS (SELECT ROWID FROM Participant WHERE Participant.identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM Calendar WHERE Calendar.self_identity_id = Identity.ROWID OR Calendar.owner_identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM CalendarItem WHERE CalendarItem.modified_by_id = Identity.ROWID OR CalendarItem.created_by_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM ResourceChange WHERE ResourceChange.identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM Notification WHERE Notification.identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM Sharee WHERE Sharee.identity_id = Identity.ROWID);
SELECT rowid FROM Identity WHERE STRING_MATCHES(?, IFNULL(display_name, ''))
CalDatabaseCopyParticipantIdsThatMatchSearch
UPDATE Identity SET display_name = ?, address = ? WHERE address = ?;
UPDATE Attendee SET participant_id = ? WHERE participant_id IN (SELECT ROWID FROM Participant_ WHERE address IS NULL AND NAME IS NULL);
UPDATE Event SET organizer_id = ? WHERE organizer_id IN (SELECT ROWID FROM Participant_ WHERE address IS NULL AND NAME IS NULL);
select i1.rowid, i2.rowid from Identity i1, Identity i2 where i1.display_name = i2.display_name and i1.address = ("mailto:" || i2.address)
UPDATE Calendar SET self_identity_id = ? WHERE self_identity_id = ?;
UPDATE Calendar SET owner_identity_id = ? WHERE owner_identity_id = ?;
UPDATE CalendarItem SET modified_by_id = ? WHERE modified_by_id = ?;
UPDATE CalendarItem SET created_by_id = ? WHERE created_by_id = ?;
UPDATE Notification SET identity_id = ? WHERE identity_id = ?;
UPDATE Participant SET identity_id = ? WHERE identity_id = ?;
UPDATE ResourceChange SET identity_id = ? WHERE identity_id = ?;
UPDATE Sharee SET identity_id = ? WHERE identity_id = ?;
DELETE FROM Identity where rowid = ?;
update Identity set address = "mailto:" || address where rowid in (select s.rowid from Identity s where s.address not like "urn:uuid:%" and s.address not like "mailto:%" and s.address not like "http%" and s.address not like "/%");
Couldn't create a statement to prefix identity addresses with mailto:
Identity
Date
EventExceptionDate
DELETE FROM ExceptionDate WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
CalExceptionDateSetDate
CalExceptionDate.m
date != NULL
calendar_id = ?1 AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = ?2) AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?2) AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = ?3 AND client_identifier = ?2)
sync_order
EventExceptionDateEventId
ExceptionDateOwnerId
DELETE FROM Conference WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
uuid
ConferenceEventId
ConferenceUUID
______NativeStorePersistentID_______
host
port
useSSL
ownerAddresses
preferredOwnerAddress
Store
CREATE INDEX StoreExternalId on Store(external_id)
DELETE FROM Store WHERE ROWID = 1
CREATE TRIGGER delete_store_members AFTER DELETE ON Store
BEGIN
DELETE FROM Calendar WHERE store_id = OLD.ROWID;
DELETE FROM Error WHERE ROWID = OLD.error_id;
END;
CREATE TRIGGER delete_store_changes AFTER DELETE ON Store
BEGIN
DELETE FROM CalendarChanges WHERE store_id = OLD.ROWID;DELETE FROM CalendarItemChanges WHERE store_id = OLD.ROWID;DELETE FROM AlarmChanges WHERE store_id = OLD.ROWID;DELETE FROM RecurrenceChanges WHERE store_id = OLD.ROWID;DELETE FROM ParticipantChanges WHERE store_id = OLD.ROWID;DELETE FROM AttachmentChanges WHERE store_id = OLD.ROWID;DELETE FROM ContactChanges WHERE store_id = OLD.ROWID;DELETE FROM EventActionChanges WHERE store_id = OLD.ROWID;DELETE FROM ExceptionDateChanges WHERE store_id = OLD.ROWID;DELETE FROM NotificationChanges WHERE store_id = OLD.ROWID;DELETE FROM ShareeChanges WHERE store_id = OLD.ROWID;DELETE FROM ClientCursor WHERE store_id = OLD.ROWID;
END;
CREATE TRIGGER clean_attachments_store_deleted AFTER DELETE ON Store
BEGIN
SELECT CalNoteStoreDeleted(OLD.ROWID, OLD.external_id, OLD.persistent_id);
END;
Local Store Not Local
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:433
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:439
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:444
DROP TABLE StoreChanges;
DROP TRIGGER IF EXISTS delete_store_members;
DROP TRIGGER IF EXISTS delete_store_changes;
DROP TRIGGER IF EXISTS clean_attachments_store_deleted;
ALTER TABLE Store RENAME TO Store_;
ALTER TABLE StoreChanges RENAME TO StoreChanges_;
DROP TABLE Store_;
DROP TABLE StoreChanges_;
SELECT rowid from Store;
UPDATE Store SET persistent_id="%@" WHERE rowid = %d;
DELETE FROM Calendar WHERE rowid NOT IN (SELECT Calendar.rowid FROM Calendar, Store WHERE Calendar.store_id = Store.rowid);
UPDATE Store SET constraint_path = NULL WHERE rowid = 1
UPDATE Store SET flags = %u WHERE type = %d AND ROWID != %d
UPDATE Store SET flags2 = %u WHERE type = %d AND ROWID != %d
SELECT COUNT(rowid) from Store WHERE type = %i;
DELETE FROM Store WHERE type = %i AND rowid != %i
UPDATE Store SET persistent_id = '%@' WHERE type = %i;
DefaultAlarms
DefaultAllDayAlarms
com.apple.dataaccessd-%@
.plist
 WHERE external_id = ?;
 WHERE persistent_id = ?;
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:2739
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:2803
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:2811
CalDatabaseMigrateCalendarsWithEntityType
CalStore.m
SELECT ROWID FROM CalendarItem WHERE end_date IS NOT NULL AND end_date < ? AND (orig_item_id == 0 OR orig_item_id == NULL) AND rowid NOT IN (SELECT owner_id FROM Recurrence) AND phantom_master == 0 AND calendar_id IN (SELECT rowid FROM Calendar WHERE store_id = ?)
SELECT ROWID FROM CalendarItem WHERE entity_type = ? AND end_date IS NOT NULL AND end_date < ? AND (orig_item_id == 0 OR orig_item_id == NULL) AND rowid NOT IN (SELECT owner_id FROM Recurrence) AND phantom_master == 0 AND calendar_id IN (SELECT rowid FROM Calendar WHERE store_id = ?)
SELECT ROWID from CalendarItem where rowid in (SELECT owner_id FROM Recurrence r, CalendarItem i WHERE i.rowid = r.owner_id AND ((cached_end_date IS NOT NULL AND cached_end_date < ?) OR (r.end_date IS NOT NULL AND r.end_date < ?)) AND ((SELECT COUNT(*) FROM CalendarItem where orig_item_id = i.rowid) == 0 OR (SELECT MAX(end_date) from CalendarItem where orig_item_id = i.rowid and end_date) < ?) AND (i.calendar_id IN (select rowid from Calendar where store_id = ?)))
SELECT ROWID from CalendarItem where entity_type = ? AND rowid in (SELECT owner_id FROM Recurrence r, CalendarItem i WHERE i.rowid = r.owner_id AND ((cached_end_date IS NOT NULL AND cached_end_date < ?) OR (r.end_date IS NOT NULL AND r.end_date < ?)) AND ((SELECT COUNT(*) FROM CalendarItem where orig_item_id = i.rowid) == 0 OR (SELECT MAX(end_date) from CalendarItem where orig_item_id = i.rowid and end_date) < ?) AND (i.calendar_id IN (select rowid from Calendar where store_id = ?)))
SELECT ROWID FROM CalendarItem master WHERE master.hidden == 1 AND master.phantom_master == 1 AND master.end_date < ? AND ((SELECT COUNT(*) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) == 0 OR (SELECT MAX(detached.end_date) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) < ?) AND master.calendar_id IN (SELECT ROWID from Calendar WHERE store_id = ?);
SELECT ROWID FROM CalendarItem master WHERE master.hidden == 1 AND master.phantom_master == 1 AND master.end_date < ? AND master.entity_type == ? AND ((SELECT COUNT(*) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) == 0 OR (SELECT MAX(detached.end_date) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) < ?) AND master.calendar_id IN (SELECT ROWID from Calendar WHERE store_id = ?);
default_alarm_offset
constraint_path
persistent_id
added_calendars
constraints
creator_bundle_id
creator_code_signing_identity
only_creator_can_modify
preferred_event_private_value
strictest_event_private_value
dirty_sync_attributes
delegated_account_owner_store_id
delegated_account_default_calendar_for_new_events_id
delegated_account_default_calendar_for_new_events
shows_notifications
owner_name
default_all_day_alarm_offset
cached_external_info
INSERT INTO Store (ROWID, type, name, persistent_id, flags, flags2) VALUES (%d, 0, 'Default', '%@', %u, %u);
INSERT INTO Store (type, name, persistent_id, flags) VALUES (%d, 'Other', '%@', %u);
SELECT type FROM Store WHERE ROWID = %i
SELECT MAX((SELECT MAX(ROWID) FROM Store), (SELECT seq FROM sqlite_sequence WHERE name = "Store"))+1
%i%i
B16@?0@"NSString"8
UPDATE Store SET ROWID = %i WHERE ROWID = %i
UPDATE Store SET delegated_account_owner_store_id = %i WHERE delegated_account_owner_store_id = %i
UPDATE Calendar SET store_id = %i WHERE store_id = %i
UPDATE CalendarChanges SET store_id = %i WHERE store_id = %i
UPDATE RecurrenceChanges SET store_id = %i WHERE store_id = %i
UPDATE AlarmChanges SET store_id = %i WHERE store_id = %i
UPDATE ParticipantChanges SET store_id = %i WHERE store_id = %i
UPDATE EventActionChanges SET store_id = %i WHERE store_id = %i
UPDATE CalendarItemChanges SET store_id = %i WHERE store_id = %i
UPDATE ExceptionDateChanges SET store_id = %i WHERE store_id = %i
UPDATE AttachmentChanges SET store_id = %i WHERE store_id = %i
UPDATE ShareeChanges SET store_id = %i WHERE store_id = %i
UPDATE NotificationChanges SET store_id = %i WHERE store_id = %i
UPDATE ContactChanges SET store_id = %i WHERE store_id = %i
UPDATE OccurrenceCache SET store_id = %i WHERE store_id = %i
UPDATE OccurrenceCacheDays SET store_id = %i WHERE store_id = %i
UPDATE ClientCursor SET store_id = %i WHERE store_id = %i
SELECT default_alarm_offset, default_all_day_alarm_offset FROM Store_ WHERE ROWID = 1
i16@?0^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}8
UPDATE Store_ SET default_alarm_offset=NULL, default_all_day_alarm_offset=NULL WHERE ROWID = 1 OR external_id="Subscribed Calendars"
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, NULL, type, constraint_path, disabled, external_id, NULL, NULL, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, NULL, type, constraint_path, disabled, external_id, persistent_id, NULL, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, NULL, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications, flags2 ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications, flags2 FROM Store_;
ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications, flags2
, display_order
, owner_name
, default_all_day_alarm_offset
, error_id
, notes
, cached_external_info
INSERT INTO Store (%@) SELECT %@ FROM Store_;
INSERT INTO Error (store_owner_id, error_code, user_info) SELECT ROWID, last_sync_error, last_sync_error_data FROM Store_ WHERE last_sync_error != 0
INSERT INTO Error (store_owner_id, error_code) SELECT ROWID, last_sync_error FROM Store_ WHERE last_sync_error != 0
UPDATE Store SET error_id = (SELECT ROWID FROM Error WHERE store_owner_id = Store.ROWID)
record, type, sequence_number
, default_alarm_offset
INSERT INTO StoreChanges (%@) SELECT %@ FROM StoreChanges_;
UPDATE Store SET flags = %u WHERE ROWID = %d;
UPDATE Store SET flags = (IFNULL(flags,0) & %u) | %u WHERE ROWID = %d;
UPDATE Store SET flags2 = %u WHERE ROWID = %d;
delegateDataCleanupQueue
record = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN     (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN     (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
Store Without PersistentID
Subscribed Calendars
com.apple.calendar.ACMigrationAccountStoreErrors
v20@?0B8@"NSError"12
-[CADObjectID initWithEntityType:entityID:databaseID:]
CADObjectID.m
entityType
rowID
dbID
temporary
%@://%d/%@/%@%d
x-apple-eventkit
%@:///%@/%@%d
BOOL CalEventUpdateFromICSEventWithOptions(ICSEvent *__strong, ICSCalendar *__strong, CalEventRef, CalEventRef, CalDatabaseRef, NSUInteger, __strong id<CDBAccountInfo>, NSMutableSet *__strong, BOOL)
CalExchangeCalendarExternalRepresentation
VTODO
iCalExtraProperties
CalXProps
CalClassification
SELECT %s FROM %s WHERE ROWID = ?
UPDATE %s SET %s = ? WHERE ROWID = ?
UPDATE Location SET start_loc_owner_id = item_owner_id, item_owner_id = NULL WHERE rowid in (SELECT location.rowid FROM location INNER JOIN calendaritem ON calendaritem.start_location_id=location.rowid);
UPDATE Location SET client_loc_owner_id = item_owner_id, item_owner_id = NULL WHERE rowid in (SELECT location.rowid FROM location INNER JOIN calendaritem ON calendaritem.client_location_id=location.rowid);
DELETE FROM Location WHERE item_owner_id > 0 AND item_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
DELETE FROM Location WHERE alarm_owner_id > 0 AND alarm_owner_id NOT IN (SELECT ROWID FROM Alarm);
DELETE FROM Location WHERE start_loc_owner_id > 0 AND start_loc_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
DELETE FROM Location WHERE end_loc_owner_id > 0 AND end_loc_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
DELETE FROM Location WHERE client_loc_owner_id > 0 AND client_loc_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
SELECT rowid FROM Location WHERE STRING_MATCHES(?, IFNULL(title, '')) OR STRING_MATCHES(?, IFNULL(address, ''))
CalDatabaseCopyLocationIdsThatMatchSearch
reference_frame
address_book_id
mapkit_handle
derived_from
item_owner_id
alarm_owner_id
start_loc_owner_id
end_loc_owner_id
client_loc_owner_id
item_owner
alarm_owner
start_loc_owner
end_loc_owner
client_loc_owner
LocationOwnerItemId
LocationStartLocOwnerItemId
start_loc_owner_id > 0
LocationEndLocOwnerItemId
end_loc_owner_id > 0
LocationClientLocOwnerItemId
client_loc_owner_id > 0
LocationAlarmOwnerID
alarm_owner_id > 0
master
TimeChanged
DateChanged
VEVENT
dtstart
x-apple-structured-location
time
%@ AND %@
%@ WHERE %@
%@ in ()
%@ IN ()
%@ = %@
%@ IN (%@)
%@ NOT IN (%@)
Unexpected entity type for notification: %d
DELETE FROM Notification WHERE calendar_id NOT IN (SELECT ROWID FROM Calendar);
CalNotificationGetUID
CalNotification.m
CalEntityIsOfType(notification, CalNotificationEntity)
CalDatabaseCopyNotificationsWithCalendar
entityType == CalNotificationEntity || entityType == CalInviteReplyNotificationEntity || entityType == CalResourceChangeNotificationEntity || entityType == CalSuggestionNotificationEntity || entityType == CalUndefinedEntity
invite_reply_calendar_id
host_url
in_reply_to
invite_reply_calendar
NotificationUUIDOwnerId
UUID, owner_id
NotificationUUIDCalendarId
UUID, calendar_id
NotificationOwnerId
NotificationEntityType
NotificationExternalIDOwnerId
external_id, owner_id
NotificationExternalIDCalendarId
NotificationCalendarId
delete_resource_changes_for_notification
DELETE FROM ResourceChange WHERE notification_id NOT IN (SELECT ROWID FROM Notification WHERE entity_type = 17 OR entity_type = 19);
_CalCreateNotification
entityType == CalInviteReplyNotificationEntity || entityType == CalResourceChangeNotificationEntity || entityType == CalNotificationEntity || entityType == CalSuggestionNotificationEntity
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class IN (%d, %d, %d) AND client_identifier = '%@')
WHERE UUID = ? AND notification.entity_type = ?
WHERE notification.entity_type = ?
JOIN Calendar ON notification.calendar_id = Calendar.ROWID WHERE notification.entity_type = ? AND store_id = ?
kCalEventOccurrenceCacheChangedNotification
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:514
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:562
SELECT COUNT(*) FROM OccurrenceCache WHERE event_id NOT IN (SELECT ROWID FROM CalendarItem);
EventKitOC: *** INTEGRITY FAILURE *** There were orphaned entries in the cache
DELETE FROM OccurrenceCache WHERE event_id NOT IN (SELECT ROWID FROM CalendarItem);
EventKitOC: *** CLEAN ORPHAN FAILURE *** Got error code %i when attempting to clean orphans
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:670
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:672
CREATE TABLE OccurrenceCache (day REAL, event_id INTEGER, calendar_id INTEGER, store_id INTEGER, occurrence_date REAL, occurrence_start_date REAL, occurrence_end_date REAL);
CREATE TABLE OccurrenceCacheDays (calendar_id INTEGER, store_id INTEGER, day REAL, count INTEGER, PRIMARY KEY (calendar_id, day));
CREATE TRIGGER update_cache_days_after_delete AFTER DELETE ON OccurrenceCache
BEGIN
UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = OLD.calendar_id;UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = -2;
END;
CREATE TRIGGER update_cache_days_after_insert AFTER INSERT ON OccurrenceCache
BEGIN
REPLACE INTO OccurrenceCacheDays VALUES (NEW.calendar_id, NEW.store_id, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = NEW.calendar_id), 0));
REPLACE INTO OccurrenceCacheDays VALUES (-2, -2, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = -2), 0));
END;
CREATE TRIGGER update_cache_days_after_update AFTER UPDATE OF day ON OccurrenceCache
BEGIN
REPLACE INTO OccurrenceCacheDays VALUES (NEW.calendar_id, NEW.store_id, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = NEW.calendar_id), 0));
REPLACE INTO OccurrenceCacheDays VALUES (-2, -2, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = -2), 0));
UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = OLD.calendar_id;UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = -2;
END;
DROP TRIGGER update_cache_days_after_delete;
DROP TRIGGER update_cache_days_after_insert;
ALTER TABLE OccurrenceCache RENAME TO OccurrenceCache_;
ALTER TABLE OccurrenceCacheDays RENAME TO OccurrenceCacheDays_;
DROP TRIGGER IF EXISTS update_cache_days_after_update;
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date) SELECT day, event_id, CalendarItem.calendar_id, %d, occurrence_date, occurrence_start_date FROM OccurrenceCache_ JOIN CalendarItem ON CalendarItem.ROWID = event_id GROUP BY occurrence_date, event_id, occurrence_start_date;
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date) SELECT day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date FROM OccurrenceCache_ GROUP BY occurrence_date, event_id, occurrence_start_date;
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date, occurrence_end_date) SELECT day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date, occurrence_end_date FROM OccurrenceCache_ GROUP BY occurrence_date, event_id, occurrence_start_date;
DROP TABLE OccurrenceCache_;
DROP TABLE OccurrenceCacheDays_;
SELECT day, SUM(count) FROM OccurrenceCacheDays
GROUP BY day ORDER BY day
SELECT day, event_id, IFNULL(occurrence_start_date, occurrence_date) AS fetched_occurrence_start_date FROM OccurrenceCache
day = ?
ORDER BY day, occurrence_date ASC
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1188
ORDER BY occurrence_date
SELECT event_id, occurrence_date FROM OccurrenceCache
occurrence_date > ?
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1213
ORDER BY occurrence_date DESC
occurrence_date > ? AND event_id IN (%@)
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1243
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1280
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1366
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1370
SELECT COUNT() FROM OccurrenceCache WHERE occurrence_date > ? AND event_id = ? LIMIT 1
SELECT event_id, occurrence_date, occurrence_start_date FROM OccurrenceCache
occurrence_date >= ? AND event_id = ?
ORDER BY occurrence_date ASC
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2005
occurrence_date < ? AND event_id = ?
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2077
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2092
SELECT event_id, occurrence_date, occurrence_start_date, day FROM OccurrenceCache
day >= ? AND event_id = ?
SELECT event_id, occurrence_date, occurrence_start_date, day FROM OccurrenceCache INDEXED BY OccurrenceCacheDayEventIdOccurrenceDate
day < ? AND event_id = ?
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2132
SELECT event_id, occurrence_date FROM OccurrenceCache WHERE day = ? ORDER BY occurrence_date ASC LIMIT 1 OFFSET ?
occurrence_date > ? AND occurrence_date <= ?
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2245
_CalDatabaseCopyEventOccurrencesThatMatchEventIds
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2299
ForceRebuildSeed
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2537
EventKitOC: Unable to start transaction. Aborting rebuild.
UPDATE Recurrence SET cached_end_date = NULL
milliseconds
occurrenceCacheRebuilds
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2566
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2592
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2600
UPDATE OccurrenceCacheDays SET store_id = %d WHERE store_id = %d;
UPDATE OccurrenceCache SET store_id = %d WHERE store_id = %d;
UPDATE OccurrenceCacheDays SET calendar_id = %d WHERE calendar_id = %d;
UPDATE OccurrenceCache SET calendar_id = %d WHERE calendar_id = %d;
void _CalEventOccurrenceCacheLoadInfo(CalEventOccurrenceCacheRef)
CalEventOccurrenceCache.m
No transaction when accessing time zone.
OccurrenceCacheTimeZone
OccurrenceCacheStart
OccurrenceCacheEnd
EventKitOC: *** ERROR *** No transaction is in effect! This may end poorly.
DELETE FROM OccurrenceCache WHERE occurrence_date < ? AND ROWID IN (SELECT ROWID FROM OccurrenceCache JOIN CalendarItem ON CalendarItem.ROWID = OccurrenceCache.event_id WHERE CalendarItem.has_recurrences = 1 AND CalendarItem.entity_type = 2);
DELETE FROM OccurrenceCacheDays WHERE count = 0;
Insert Corrupt Occurrence - GenerateOccurrences
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date, occurrence_end_date) values (?, ?, ?, ?, ?, ?, ?);
Insert duplicate occurrence
void _CalEventOccurrenceCacheSetRangeAndTimeZone(CalEventOccurrenceCacheRef, NSDate *__strong, NSDate *__strong, NSTimeZone *__strong)
No write transaction when updating occurrence cache range.
CalEventOccurrenceCache
CREATE INDEX OccurrenceCacheDayEventIdOccurrenceDate on OccurrenceCache(day, event_id, occurrence_date);
CREATE UNIQUE INDEX OccurrenceCacheOccurrenceDateEventId on OccurrenceCache(occurrence_date, event_id, occurrence_start_date);
CREATE INDEX OccurrenceCacheCalendarId on OccurrenceCache(calendar_id);
CREATE INDEX OccurrenceCacheDaysCount on OccurrenceCacheDays(count);
CREATE INDEX OccurrenceCacheDaysDayCalendarId on OccurrenceCacheDays(day, calendar_id);
DROP INDEX IF EXISTS OccurrenceCacheDay;
DROP INDEX IF EXISTS OccurrenceCacheOccurrenceDate;
DROP INDEX IF EXISTS OccurrenceCacheEventId;
DROP INDEX IF EXISTS OccurrenceCacheDayEventIdOccurrenceDate;
DROP INDEX IF EXISTS OccurrenceCacheOccurrenceDateEventId;
DROP INDEX IF EXISTS OccurrenceCacheCalendarId;
DROP INDEX IF EXISTS OccurrenceCacheDaysCount;
DROP INDEX IF EXISTS OccurrenceCacheDaysDayCalendarId;
DROP INDEX IF EXISTS OccurrenceCacheDayCalendarId;
DROP INDEX IF EXISTS OccurrenceCacheDayStoreId;
DROP INDEX IF EXISTS OccurrenceCacheStoreIdOccurrenceDate;
DROP INDEX IF EXISTS OccurrenceCacheCalendarIdOccurrenceDate;
DROP INDEX IF EXISTS OccurrenceCacheDaysStoreIdDay;
 WHERE %@ AND calendar_id != -2
 WHERE store_id != -2 AND store_id NOT IN 
 WHERE calendar_id = -2
 LIMIT %d
occurrenceCount
eventUID
occurrenceDate
 AND occurrence_start_date is NULL
SELECT occurrence_date FROM OccurrenceCache
v16@?0^{__CFArray=}8
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1793
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1821
SELECT event_id, IFNULL(occurrence_start_date, occurrence_date) AS fetched_occurrence_start_date, occurrence_end_date FROM OccurrenceCache
day >= ? AND day < ?
GROUP BY event_id, fetched_occurrence_start_date
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1904
Unable to malloc a _CalEventOccurrenceWithoutEvent
Occurrence cache is pointing to nonexistent event %d
DELETE FROM OccurrenceCache;
DELETE FROM OccurrenceCacheDays;
DELETE FROM OccurrenceCache WHERE event_id = ?;
Insert Corrupt Occurrence - ProcessAdds
CDBCommonEntityFunctionalityHandler.lock
DELETE FROM Sharee WHERE owner_id NOT IN (SELECT ROWID FROM Calendar);
CalShareeGetUID
CalSharee.m
CalEntityIsOfType(sharee, CalShareeEntity)
OwnerID
Name
Address
MuteNotification
access_level
mute_notifications
ShareeUUID
ShareeOwnerId
ShareeStatus
ShareeAccessLevel
ShareeIdentityId
CalAlarmOccurrence
default
enable
disable
<%@: %p>(
 migrateUsingCalendarDaemon = YES,
 waitForRemindersOnly = %@
homeDirectory
sourceCalendarDirectory
<%@: %p>(
 %@ = %@,
 destinationDirectory = %@,
 performCalendarMigration = %@,
 performReminderMigration = %@,
 performCleanup = %@,
 deleteMigratedData = %@,
 backupBeforeCalendarMigration = %@,
 backupBeforeReminderMigration = %@,
 accountChangesFile = %@,
 accountsDatabaseFile = %@,
WHERE persona_id = ?
path
persona_id
accounts
delete_aux_database_accounts
DELETE FROM AuxDatabaseAccount WHERE database_id = OLD.ROWID;
account_id
ExternalFolderID
ExternalScheduleID
DELETE FROM EventAction WHERE event_id NOT IN (SELECT ROWID FROM CalendarItem);
SELECT EventAction.ROWID, EventAction.event_id, EventAction.external_id, EventAction.external_mod_tag, EventAction.external_folder_id, EventAction.external_schedule_id, EventAction.external_rep FROM EventAction JOIN CalendarItem ON EventAction.event_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?;
external_folder_id
EventActionEventId
EventActionExternalId
EventActionFolderId
 JOIN CalendarItem ON event_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE EventAction.external_id = ? 
Meventaction
external_folder_id = ?
Meventaction.external_id = ?;
CalEventOccurrence
DisableOccurrenceCache
WHERE account_id = ?
database_id
database
myself
others
DELETE FROM SuggestedEventInfo WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
_CalSuggestedEventInfoInsertAndUpdateNotificationsForEvent
unique_key
changed_fields
changes_acknowledged
SuggestedEventInfoOwnerId
geo:%f,%f
changeID
CalDatabaseIdleChangeTrackingClientWasPurgedNotification
CREATE TABLE ClientCursor (     ROWID INTEGER PRIMARY KEY AUTOINCREMENT,     client_identifier TEXT,     store_id INTEGER,     latest_consumed_sequence_number INTEGER,     latest_consumed_timestamp REAL,     UNIQUE(client_identifier) );
CREATE INDEX ClientCursorClientIdentifier ON ClientCursor(client_identifier); 
CREATE TABLE ClientSequence (client_identifier TEXT, sequence_number INTEGER );
CREATE INDEX ClientSequenceClientIdentifier ON ClientSequence(client_identifier); 
CREATE TABLE ClientCursorConsumed (    client_identifier TEXT,     consumed_entity_class INTEGER,     consumed_entity_id INTEGER,     consumed_change_id INTEGER,     sequence_number INTEGER );
CREATE INDEX ClientCursorConsumedClientIdentifier ON ClientCursorConsumed(client_identifier); 
CREATE TRIGGER delete_clientcursor_consumed AFTER DELETE ON ClientCursor     BEGIN         DELETE FROM ClientCursorConsumed WHERE client_identifier = OLD.client_identifier;         DELETE FROM ClientSequence WHERE client_identifier = OLD.client_identifier;     END; 
ALTER TABLE ClientCursor ADD COLUMN     store_id INTEGER;
INSERT INTO aux.ClientCursor SELECT * FROM ClientCursor WHERE store_id IN (0, ?) AND client_identifier NOT IN (SELECT client_identifier FROM aux.ClientCursor)
SELECT (SELECT COUNT() FROM aux.ClientCursorConsumed) > 0 OR (SELECT COUNT() FROM aux.ClientSequence) > 0
INSERT INTO aux.ClientCursorConsumed SELECT * FROM ClientCursorConsumed
INSERT INTO aux.ClientSequence SELECT * FROM ClientSequence
INSERT OR REPLACE INTO ClientCursor (client_identifier, store_id, latest_consumed_sequence_number, latest_consumed_timestamp) VALUES (?, ?, (SELECT MIN(IFNULL(MIN(latest_consumed_sequence_number), ?), ?) FROM ClientCursor WHERE client_identifier = ?), ?);
INSERT INTO ClientSequence (client_identifier, sequence_number) VALUES (?, ?);
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:977
sequence_number > ?  AND entity_type = ?  AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)  AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE client_identifier = ? AND consumed_entity_class = ?)
sequence_number > ?  AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)  AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE client_identifier = ? AND consumed_entity_class = ?)
sequence_number > ?  AND entity_type = ?  AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)  AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE client_identifier = ? AND consumed_entity_class = ?) AND sequence_number <= ?
sequence_number > ?  AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)  AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE client_identifier = ? AND consumed_entity_class = ?) AND sequence_number <= ?
 AND %@ = ?
v36@?0r^{?=*^?^?^?^?^?^?C^vi^{?}^v*^?^?i^{?}i^?}8i16B20@?<v@?^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}>24i32
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1059
%@ <%p> {minConsumedClientIdentifier "%@"; minConsumedSequenceNumber = %d; secondMinConsumedSequenceNumber = %d}
%@ <%p> {clientIdentifier "%@"; consumedSequenceNumber = %d}
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1440
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1450
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1508
DELETE FROM ClientCursorConsumed;
UPDATE ClientCursor SET latest_consumed_timestamp = ?, latest_consumed_sequence_number = ?;
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1538
changedIDs
changeTypes
changeTableIDs
sequenceNumbers
v44@?0i8^{__CFArray=}12^{__CFArray=}20^{__CFArray=}28^{__CFArray=}36
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1700
CalDatabasePersistentChangeTracking: unable to start transaction (error %d)
SELECT COUNT(*) FROM %@Changes WHERE ROWID = ? AND sequence_number > ?
INSERT INTO ClientCursorConsumed (client_identifier, consumed_entity_class, consumed_entity_id, consumed_change_id, sequence_number) VALUES (?, ?,  (SELECT record FROM %@Changes WHERE ROWID = ? LIMIT 1),  ?,  (SELECT sequence_number FROM %@Changes WHERE ROWID = ?) )
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1744
SELECT client_identifier FROM ClientCursor;
SELECT client_identifier FROM ClientCursor WHERE store_id = ?;
SELECT IFNULL(MIN(store_id), -1) FROM ClientCursor WHERE client_identifier = ?
DELETE FROM ClientCursor WHERE client_identifier = ?;
SELECT client_identifier FROM ClientCursor WHERE latest_consumed_timestamp < ? OR (store_id = 0 AND (SELECT count(*) FROM CalendarItemChanges WHERE sequence_number > latest_consumed_sequence_number AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE ClientSequence.client_identifier = ClientCursor.client_identifier)) > ?);
Purging change-tracking client %@ which has been idle since %f or is tracking all stores and is behind more more than %d changes
AND sequence_number <= %i
sequence_number <= %i
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:675
SELECT IFNULL(MIN(latest_consumed_sequence_number), -1) FROM ClientCursor WHERE client_identifier = ?;
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:783
v24@?0Q8^B16
 OR 
((store_id == %d) AND ((sequence_number <= %d) OR ((sequence_number <= %d) AND (sequence_number IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier == "%@")))))
((store_id == %d) AND (sequence_number <= %d))
store_id NOT IN (
) OR sequence_number IS NULL
sequence_number <= %d
DELETE FROM ClientSequence WHERE ClientSequence.sequence_number NOT IN 
AND ClientSequence.sequence_number NOT IN 
(SELECT DISTINCT %@Changes.sequence_number FROM %@Changes WHERE %@Changes.sequence_number IS NOT NULL)
SELECT DISTINCT IFNULL(store_id, 0) FROM ClientCursor;
SELECT client_identifier, IFNULL(latest_consumed_sequence_number, -1) FROM ClientCursor WHERE (IFNULL(store_id, 0) == 0 OR (store_id == ?)) ORDER BY latest_consumed_sequence_number
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1459
DELETE FROM ClientCursorConsumed WHERE client_identifier = ? AND IFNULL(sequence_number, 0) <= ?;
UPDATE ClientCursor SET latest_consumed_timestamp = ?, latest_consumed_sequence_number = MAX(?, MIN((SELECT latest_consumed_sequence_number FROM ClientCursor WHERE client_identifier = ?), ?)) WHERE client_identifier = ?;
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1492
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1562
 AND record = ?
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1628
SELECT store_id FROM ClientCursor WHERE client_identifier = ?
category_id
group_id
category
CategoryLinkCategoryID
delete_category
DELETE FROM Category WHERE Category.ROWID = OLD.category_id AND NOT EXISTS(SELECT category_id FROM CategoryLink WHERE category_id = OLD.category_id);
Category link without category
context
Integrity
CREATE TEMP TABLE AttachmentMigration (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, UUID TEXT, url TEXT, original_url TEXT, store_id INTEGER, external_id TEXT, external_mod_tag TEXT, format TEXT, is_binary INTEGER, filename TEXT, local_url TEXT, file_size INTEGER)
INSERT INTO temp.AttachmentMigration (ROWID, UUID, url, original_url, store_id, external_id, external_mod_tag, format, is_binary, filename, local_url, file_size) SELECT Attachment.ROWID, Attachment.UUID, iif(Attachment.url = "http://localhost", NULL, Attachment.url), Attachment.url, Calendar.store_id, Attachment.external_id, Attachment.external_mod_tag, Attachment.format, Attachment.is_binary, Attachment.filename, Attachment.local_url, Attachment.file_size FROM Attachment JOIN CalendarItem ON CalendarItem.ROWID = Attachment.owner_id JOIN Calendar ON Calendar.ROWID = CalendarItem.calendar_id
CREATE INDEX temp.AttachmentMigrationURLStoreID ON AttachmentMigration(url, store_id)
UPDATE temp.AttachmentMigration AS target SET UUID = (SELECT other.UUID FROM temp.AttachmentMigration AS other WHERE (other.url = target.url AND other.store_id = target.store_id AND target.url IS NOT NULL) OR (target.url IS NULL AND other.ROWID = target.ROWID) ORDER BY other.ROWID LIMIT 1)
CREATE INDEX temp.AttachmentMigrationUUID ON AttachmentMigration(UUID)
UPDATE temp.AttachmentMigration AS target SET (external_id, external_mod_tag, format, is_binary, local_url, file_size) = (SELECT external_id, external_mod_tag, format, is_binary, local_url, file_size FROM temp.AttachmentMigration as source WHERE source.local_url IS NOT NULL AND target.UUID = source.UUID LIMIT 1) WHERE target.local_url IS NULL AND (SELECT other.local_url FROM temp.AttachmentMigration as other WHERE other.UUID = target.UUID AND other.local_url IS NOT NULL) IS NOT NULL
INSERT INTO AttachmentFile (UUID, url, external_id, external_mod_tag, format, flags, filename, local_path, file_size, store_id) SELECT UUID, original_url, external_id, external_mod_tag, format, is_binary, filename, local_url, file_size, store_id FROM AttachmentMigration GROUP BY UUID
UPDATE Attachment SET UUID = other.UUID FROM (SELECT ROWID, UUID FROM temp.AttachmentMigration) AS other WHERE other.ROWID = Attachment.ROWID
UPDATE AttachmentChanges SET UUID = IFNULL((SELECT UUID FROM Attachment WHERE Attachment.ROWID = AttachmentChanges.record), UUID)
DROP TABLE temp.AttachmentMigration
SELECT ROWID FROM AttachmentFile WHERE UUID = ?
file_id
DELETE FROM Attachment WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
JOIN CalendarItem ON owner_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?
local_url
security_scoped_local_url_wrapper
security_scoped_local_url_for_archived_data_wrapper
dirty_trackable_attributes
file
CalLoadAttachmentPropertyFromFileProperty
CalAttachment.m
AttachmentEventId
AttachmentUUID
AttachmentURL
AttachmentFileId
delete_attachment_file
DELETE FROM AttachmentFile WHERE AttachmentFile.ROWID = OLD.file_id AND (SELECT file_id FROM Attachment WHERE file_id = OLD.file_id) IS NULL;
data
x-apple-reminder://%@
WHERE entity_type = 3 AND (due_date NOT NULL OR completion_date NOT NULL)
WHERE entity_type = 3 AND (due_date NOT NULL OR completion_date NOT NULL)                                    AND (                                           (due_date NOT NULL AND due_all_day = 0 AND due_date >= ? AND due_date < ?)                                        OR (due_date NOT NULL AND due_all_day = 1 AND due_date >= ? AND due_date < ?)                                        OR (completion_date NOT NULL AND completion_date >= ? AND completion_date < ?)                                    )
 WHERE summary = ?
 AND due_date = ?
SELECT count(CalendarItem.rowid) from CalendarItem 
 JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID
 WHERE entity_type = %d
STRING_MATCHES_WORD
STRING_MATCHES_PREFIX
 AND STRING_MATCHES_WORD(?, IFNULL(summary, ''))
 AND (((calendar.title != ? AND calendar.title != ?) AND STRING_MATCHES_PREFIX(?, IFNULL(summary, '') || ' ' || IFNULL(calendar.title, ''))) OR ((calendar.title = ? OR calendar.title = ?) AND STRING_MATCHES_PREFIX(?, IFNULL(summary, '') || ' ' || ?) ))
 AND (((calendar.title != ? AND calendar.title != ?) AND STRING_MATCHES_WORD(?, IFNULL(calendar.title, ''))) OR ((calendar.title = ? OR calendar.title = ?) AND STRING_MATCHES_WORD(?, ?)))
 AND (
(completion_date >= ?)
(completion_date < ?)
 AND ((
(((due_tz IS NOT NULL AND due_tz != ?) AND due_date >= ?) OR ((due_tz IS NULL OR due_tz = ?) AND due_date >= ?))
(((due_tz IS NOT NULL AND due_tz != ?) AND due_date < ?) OR ((due_tz IS NULL OR due_tz = ?) AND due_date < ?))
) OR (
 AND completion_date IS NOT NULL
 AND completion_date IS NULL
 ORDER BY completion_date DESC
 ORDER BY CalendarItem.display_order ASC, creation_date ASC
 ORDER BY CalendarItem.display_order DESC, creation_date DESC
 ORDER BY due_date ASC
 LIMIT ?
DELETE FROM Contact WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
SELECT COUNT(*) FROM Contact WHERE contact_id = ?
SELECT owner_id FROM Contact WHERE contact_id = ?
contact_id
ContactID
store_id = %d AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@') AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@') AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
II_Event_Title_key
II_Location_key
II_ALL_DAY_KEY
II_From_key
II_To_key
II_Time_Zone_key
II_Recurrence_key
II_Attendees_key
II_Organizer_key
II_URL_key
II_Attachment_key
II_Note_key
II_Comments_key
II_ProposedTime_key
II_VideoConference_key
II_Attendee:|:
%@ (%@)
%@%@
C333333
Mbp?
Refusing to open DB with version %d for restoring
Failed to get connection for writing to database to update its restore generation
Reloading widget timeline because of database change notification
Unable to get database connection to clean up danglers.
Bad result %i for query "%@"
Couldn't get statement for SQL "%@"; Error: %s
Skipping out of process migration because CalendarMigration.framework is not available
Requesting out-of-process migration
Out of process migration failed! This may cause the database to get deleted!
Out-of-process migration complete
Creating database with configuration: [%@]
Forcing in-memory database because we are running as the setup user. No changes will be saved.
Failing to create with path %@ because no database exists at that location and we were told not to make one.
Error [%d] opening a connection to the calendar database at [%@]
Couldn't create calendar database at default path.
Cleaning up plist...
****** [CDB Spotlight indexing] 1 day since last failure, reindex needed
****** [CDB Spotlight indexing] reindex aborted, less than one day since last failure
Found a store with no identifier at ROWID %d. Setting identifier to %{public}@
Saving database after cleaning up stores without identifiers
Failed to save database after cleaning up stores with missing identifiers
****** [CDB MIGRATION] Beginning schema migration
****** [CDB MIGRATION] Finished all schema migration tasks
Attempting to rebuild the occurrence cache.
No database provided.  Will not rebuild the occurrence cache.
Could not acquire the occurrence cache.  Will not rebuild the occurrence cache.
Posting Darwin notification: [%@].
Unsupported entity type %i
Passed in %lu values but %lu value types.
Wrong type for parameter %i; expected int but got %@
Wrong type for parameter %i; expected string but got %@
Wrong type for parameter %i; expected date but got %@
Unsupported property type %i
Failed to set resource value NSURLIsExcludedFromBackupKey to %@ for database directory %@
Unable to get database connection to run vacuum.
Begin transaction (%{public}s) failed with error %i
Asked to index an event with rowID == -1 for Spotlight. Skipping
****** [CDB Spotlight indexing] Finished wait, spotlight complete
****** [CDB Spotlight indexing] Indexing %d events
Failed to push spotlight inserts/updates: %@
****** [CDB Spotlight indexing] Finished indexing %d events
****** [CDB Spotlight indexing]  Beginning delete of events
Failed to push spotlight deletes for ids before inserts/updates: %{public}@, %@
****** [CDB Spotlight indexing] Event delete finished, beginning index
****** [CDB Spotlight indexing] Beginning wait for spotlight operations
Couldn't construct a path to the calendar database.
Couldn't get the path to the calendar database.
Migrating Calendar database from version %d to version %d...
Asked to migrate when the database should already be migrated. Failing.
Opening the database caused it to be deleted for reason: %d
The calendar database was deleted when opened, but we can't find the CPRecordStoreRef to notify!
The calendar database was deleted when opened, but we can't find the CalDatabaseRef to notify!
No 'database' given.  Will not adjust profile logging.
Execution time was [%@] milliseconds for statement: [%@]
%@ %@
No existing database handle while setting rollback hook callback.
Received notification: [%@]
[%@] profile logging for database: [%p]
[%@] greentea logging for database: [%p]
Commencing database save for client with identifier [%{public}@], name [%{public}@].  Commit: [%{public}@]
No record store found.  Will not proceed with saving the database.
Couldn't begin a transaction. Won't save the database
CalDatabaseSaveInternal: failed to get recordID for updated record with rowid [%d], deleted: %d
CalDatabaseSaveInternal: failed to get recordID for deleted record with rowid [%d], deleted: %d
CalDatabaseSaveInternal: failed to get recordID for added record with rowid [%d], deleted: %d
Database save complete.  Commit: [%@].  Total time spent: [%@] milliseconds.
NULL 'database' given.  Will not log database changes to be saved.
No recordStore found.  Will not log database changes to be saved.
Commencing log of changes to be saved.
Added entity: [%@]
Updated entity: [%@]
Deleted entity: [%@]
Completed log of changes to be saved.
Summary of changes being saved: %{public}@ (add: %i mod: %i del: %i)
Summary of changes being saved: Unknown (add: %i mod: %i del: %i)
Organizer has no owner.  We need to remove it.
Attendee has no owner. We need to remove it.
Disallowing reload for changes because they don't affect the widget
_CalDatabaseChangesInArrayMayAffectWidgets: failed to get recordID for updated record with rowid [%d], deleted: %{BOOL}d
Allowing reload for changeType %{public}@ because store has dirty instance attributes
Allowing reload for changeType %{public}@ because calendar has dirty instance attributes
Allowing reload because of changeType %{public}@ for recurrence rule
Event was added or removed which may affect the widget view if it's in the time range
ChangeTypeUpdated contains changed property (%{public}@), which may affect the widget view if it's in the time range
Allowing reload for %{public}@ because changedPropertiesShowInWidget (%{BOOL}d) and its in range.
Allowing reload for %{public}@ because changedPropertiesShowInWidget (%{BOOL}d), eventOccurrencesExistInRange (%{BOOL}d)
Attempt to add record with invalid entity type %i
Attempt to add record with invalid row ID %i
Failed to push spotlight deletes for eventDomainIDsToDelete: %{public}@, %@
Failed to push spotlight deletes for domainIDsToDelete: %{public}@, %@
Couldn't get statement for SQL "%@"
Error: %s
****** [CDB Spotlight indexing] Spotlight reindex needed
****** [CDB MIGRATION] Spotlight reindex started
****** [CDB MIGRATION] Spotlight reindex completed
****** [CDB Spotlight indexing] Beginning spotlight
****** [CDB Spotlight indexing] Deleting events
Error deleting searchable items for calendar, error = %@
****** [CDB Spotlight indexing] Events deleted, beginning index
****** [CDB Spotlight indexing] Finished indexing
****** [CDB MIGRATION] Migration needed
****** [CDB MIGRATION] %lu aux databases to migrate
****** [CDB MIGRATION] migrating aux database at %@
****** [CDB MIGRATION] Migration not needed
Didn't find aux DB for persona %{public}@ at path %{public}@. Getting current path for persona
Couldn't look up persona %{public}@
No container for persona %{public}@
Still couldn't open aux DB for persona %{public}@ after looking up current container URL %{public}@
Main database schema is up-to-date (%i), but aux database schema is out-of-date. (%i)
****** [CDB Spotlight indexing] reindex needed, last version was %@
****** [CDB Spotlight indexing] spotlight index is current
Skipping reminders migration because CalendarMigration.framework is not available
Failed to get a CalReminderKitDatabaseMigrationContext. Skipping reminders migration
ReminderKit wants migration = %d
Needs reminder migration cleanup = %d
****** [CDB MIGRATION] Performing reminders migration
****** [CDB MIGRATION] Finished reminders migration
Skipping reminders migration because it is not needed
Unable to remove %{public}@: %@
Removed %{public}@
No existing database handle while handling corrupt database error.
Calendar database corrupted with extended sqlite code %i; header from corrupt database=%@
The aux database at path "%@" no longer exists. Since this is an aux database, assuming that the volume was removed and ignoring.
The aux database at path "%@" is corrupt.
Reading sqlite database header failed; sqlitecode=%i, sqlite_last_errno=%i, sqlite3_file_control return value=%i
Unable to get sqlite3_file: %i
The calendar database was committed, but we can't find the CPRecordStoreRef on it.
The calendar database was committed, but we can't find the CalDatabaseRef on the record store.
saving a recurrence with owner_id 0: relation=%p, owner=%@
Encountered an unknown CalEventStatus: %d
Encountered an unhandled ICSStatus: %d
Encountered an unknown ICSStatus: %d
Encountered an unknown CalEventPrivacyLevel: %d
Encountered an unknown ICSCalendarServerAccess: %d
Encountered an unknown CalAlarmType: %d
Encountered an unknown ICSAction: %d
Encountered an unknown calendar frequency: %d
Encountered an ICS frequency that the calendar database doesn't handle: %d. Defaulting to daily
Encountered an unknown ICS frequency: %d
Encountered an unknown CalDayOfWeek: %d
Encountered an unknown ICSWeekday: %d
Encountered an unknown CalMonthOfYear: %d
Encountered an unknown ICSMonth: %d
Encountered an unknown CalAttendeeType: %d
Encountered an unknown ICSCalendarUser: %d
Encountered an unknown CalAttendeeRole: %d
Encountered an unknown ICSRole: %d
Encountered an unknown CalAttendeeStatus: %d
Encountered an unhandled ICSParticipationStatus: %d
Encountered an unknown ICSParticipationStatus: %d
NULL 'item' given.  Will not determine if there is a preferred location.
NULL 'item' given.  Will not return a preferred location.
Calendar item row handler has no uuid context. Aborting sqlite statement.
Could not get uuid column text for sqlite statement
Could not get uuid string from utf8 string = %s
Beginning backup of database file to %@
Finished backup of database file with result = %{BOOL}d
Beginning backup of database file and attachments to %@
Finished backup of database file and attachments with result = %{BOOL}d
Beginning ICBU backup to %@
Failed to create destination .icbu Info.plist file: %@
Cleaning up failed backup output
Failed to clean up backup output: %@
Finished ICBU backup with result = %{BOOL}d
Beginning restore of database file from %@
Finished restore of database file with result = %{BOOL}d
Beginning restore of database file and attachments from %@
Cleaning up failed backup database output
Failed to clean up backup database output: %@
Failed to clean up backup attachments output: %@
Backup destination URL is an existing file: %@
Backup destination URL has non-existent parent directory: %@
Backup destination URL has a parent that is not a directory: %@
Failed to open database connection for source database while attempting to backup
Failed to start transaction while attempting to backup
Failed to create a directory for copying attachment: %@.
Failed to copy attachment (%@): %@
Failed to open destination database for backup: %{public}s
Failed to initialize backup: %{public}s
Failure while performing backup: %{public}s
Failed to vacuum DB: %{public}s
Failed to checkpoint DB: %{public}s
Failed to close DB: %{public}s
Failed to remove backup -wal file (%@): %@
Failed to remove backup -shm file (%@): %@
Nil path given for backup destination
Backup destination URL is not a file URL: %@
Backup destination URL does not exist: %@
Backup destination URL is not a directory: %@
Failed to list destination URL (%@): %@
Destination directory is not empty: %@
Account not found for subscribed calendar (ROWID=%d): %{public}@. Will not be included in Info.plist for backup
Multiple local subscribed calendar accounts have the same account identifier (%{public}@). This one (ROWID=%d) will not be included in the Info.plist for backup
Nil path given for restore database
Restore database backup URL is not a file URL: %@
Restore database backup URL is not an existing file: %@
Restore database backup URL is a directory: %@
Failed to create temp directory for staging backup for restore
Cleaning up staged temp directory
Failed to clean up staged temp directory: %@
Failed to copy backup database to staged location: %@
Backup file is not a valid database!
Failed to open source database for restore: %{public}s
Failed to open destination database for staging restore: %{public}s
Failed to open database when attempting to validate it: %{public}s
Failed to execute vacuum on database when attempting to validate it: %{public}s
Failed to close database when attempting to validate it: %{public}s
Failed to open staged backup database for schema migration
Failed to find expected attachment in backup: %@
Attachment in backup is directory when a file was expected: %@
Removing store for non-existent account %{public}@ from backup during restore
Removing subscribed calendar for non-existent account %{public}@ from backup during restore
Failed to save database to remove stores/calendars for non-existent accounts
Attempted to restore from a database in which all data belonged to accounts not signed in. Failing the restore to prevent wiping all useful data.
Cleaning up staged backup directory
Failed to clean up staged backup directory: %@
Failed to get destination path for restore
Failed to get destination URL for attachment: %@
Failed to create directory for attachment when restoring backup: %@
Attachment from backup (%@) already exists in destination (%@), but we could not replace it: %@
Failed to copy attachment (%@) when restoring backup: %@
Failed to get connection for writing to database to update its sequence number after restoring
Could not open Info.plist from .icbu (%@) for restore
Could not find version key in Info.plist for .icbu (%@)
Restoring from version 3.0 .icbu
Restoring from a 2.0 .icbu is not supported on this platform
Could not restore from unsupported .icbu version: "%{public}@"
Failed to update subscribed calendars after restore.
Local subscribed calendar info from backup Info.plist was not a dictionary. Ignoring
Entry in subscribed calendar info from backup Info.plist has wrong key type (%{public}@). Ignoring.
Entry in subscribed calendar info from backup Info.plist has wrong value type (%{public}@). Ignoring.
Entry in subscribed calendar info inner dictionary from backup Info.plist has wrong key type (%{public}@). Ignoring.
Unexpected property (%{public}@) in subscribed calendar info inner dictionary from backup Info.plist. Ignoring.
Entry in subscribed calendar info inner dictionary from backup Info.plist has wrong value type (key = %{public}@, type = %{public}@). Ignoring.
Local subscribed calendar in database (ROWID=%d) has no account ID. Will not update account for this subscription
Did not find subscription account info for local subscribed calendar in database (ROWID=%d, accountId= %{public}@). Will not update account for this subscription
Failed to create subscription account after restore: %@
Failed to remove subscribed calendar account after restore: %@
Failed to save subscribed calendar account after restore: %@
Removing subscribed calendar %d because we failed to save its account
Failed to save local subscribed calendar changes to database after restoring from .icbu
Failed to get existing subscribed calendar accounts when attempting to update subscribed calendars for .icbu restore: %@
Account ID %{public}@ with persona ID %@{public}@ is data separated, but we couldn't get a container for it.
Account ID %{public}@ will be migrated to %@
Account ID %{public}@ successfully migrated to %@
Account ID %{public}@ NOT migrated. Migration failed.
Account ID %{public}@ does not need to be migrated out of the main database
Can't create directories for new separated database for account %{public}@ at path %@: %@
Found old database file in directory for account %{public}@ to be migrated to (%@). Deleting it.
Unable to remove old database for account %{public}@: %@
Unable to remove old database-shm for account %{public}@: %@
Database already exists for persona %{public}@; also migrating account %{public}@ to the same database
No record store.
No sqliteDB
Couldn't get writer connection to database
Couldn't create database for account %{public}@ in directory %@
Couldn't insert aux db reference into main db
Could not save database.
Could not get account persistent id for store. store uid = %d
Could not get attachment container for store. store uuid = %{public}@, legacy attachment container = %@
Could not get attachment container path for store. store uuid = %{public}@, legacy attachment container = %@
Legacy attachment container for store does not exist. store uuid = %{public}@, legacy attachment container for store path = %@
Legacy attachment container for store is not a directory. store uuid = %{public}@, legacy attachment container for store path = %@
Could not get new calendar data container. store uuid = %{public}@
Could not get new attachment container. store uuid = %{public}@, new calendar data container = %@
Could not get new attachment container for store. store uuid = %{public}@, new attachment container = %@
Could not create new attachment container for store if needed. error = %@, new attachment container for store = %@
Could not move attachments for store. error = %@, legacy attachment container for store = %@, new attachment container = %@, attachment info = %@
Could not get attachment. attachment uuid = %{public}@, local relative path = %{public}@
Setting file size for attachment uuid = %{public}@, attachment url = %@
Could not get file size. error = %@, attachment uuid = %{public}@, attachment path = %@
Could not get attachment. attachment uuid = %{public}@, attachment path = %@, file size = %@
Could not get attachment for file name = %@
Could not get new attachment local relative path. attachment uuid = %@ new attachment url = %@, new calendar data container = %@
New container path is nil. new attachment container = %@
Fixing up dataclass protection for calendar attachments
Could not get legacy attachment container
Setting dataclass protection for attachment: %@
Error encoding user info: %@
Error decoding user info: %@
Failed to open main db.
No store or aux db entry for account: %@.
Account [%{public}@, persona=%{public}@] is not data-separated. Using main DB.
Found existing aux database with persona [%{public}@] for account [%{public}@]. Attaching account to existing auxiliary database.
Account [%{public}@, persona=%{public}@] is data-separated. Attempting to create aux DB
Unexpected NULL path for auxDatabase [%d]
Failed to open aux db [%d] with cached path %@
Attempting to derive path for auxDatabase [%d], persona: %{public}@
AuxDatabase entry [%d] missing persona ID
Couldn't look up persona ID %{public}@
Account [%{public}@] with persona [%{public}@] is not data-separated, but we have an aux db entry in the main db. Removing the aux entry
Unexpected nil auxURL for account %{public}@ with persona %{public}@.  Giving up.
Failed to create aux db with derived path [%@] for account: %{public}@ persona=%{public}@.  Giving up.
Failed to delete attachments for deleted store at path %@: %@
Deleted attachments for deleted store at path %@
Failed to delete attachment at path %@: %@
Deleted attachment at path %@
Setting until date: %@ (%f)
Setting by day days array: %@
Setting by month array: %@
setting by month day array: %@
Setting by weekno array: %@
Setting by year day array: %@
Setting by set pos array: %@
End date for component %@%{public}@%{public}@ is invalid; DTEND:%{public}@ is before DTSTART:%{public}@. Setting DTEND to %{public}@ instead.
NULL 'entity' given.  Will not acquire a common entity functionality handler.
Could not find the raw type of the given entity.  Will not get a common entity functionality handler property ID.
Could not find the property ID for the entity with raw type [%@].  Will not get a common entity functionality handler.
Error adding CalNoteAttachmentDeleted function: %i
Error adding CalNoteStoreDeleted function: %i
Failed to change dataclass of attachment at path %@. Error = %@
Couldn't create a local attachment path for the attachment file %d
Failed to unzip attachment (error: %@).
Failed to copy attachment (error: %@).
Set local relative path for attachment. file UUID = %{public}@, local relative path = %@, local absolute url = %@
Could not set local relative path for attachment. file UUID = %{public}@, local relative path = %@, local absolute url = %@
Unable to archive data: %@
Changing store uid %d persistent id from %{public}@ to %{public}@: couldn't get attachment base URL, so won't migrate any attachments.
Couldn't rename attachment directory from %{public}@ to %{public}@: %@
Attachment cleanup: Ignoring error for url %@: %@
Error checking if %@ is a directory: %@
Error checking creation date for %@: %@
Attachment cleanup: removed orphaned file %@
Attachment cleanup: failed to remove orphaned file %@: %@
Attachment cleanup: skipping removing file because it is archived and is too young: %@
Attachment cleanup: removed empty directory %@
Attachment cleanup: failed to remove empty store directory %@: %@
Attachment cleanup: Unable to get persistent ID for store %d (%@). Aborting cleanup.
Attachment cleanup: Unable to get URLs for store %d (%@). Skipping cleanup for it
Error getting name of %@: %@
Attachment cleanup: found and removed orphaned store directory %@
Attachment cleanup: failed to remove orphaned store directory %@: %@
Attempting to save an attachment file that is not in any store
Attachment failed to copy to local storage: %d
Unable to create directories to attachment directory "%{public}@"
Could not get local url for components. local absolute url = %@, calendar data container url = %@
Could not set file size for attachment. error = %@, file uid = %d, local absolute path = %@
Wrong number of arguments for CalNoteAttachmentDeleted
Unable to find store with storeUID when attachment deleted: %d
Wrong number of arguments for CalNoteStoreDeleted
%s: No default set. Getting first suitable read-write calendar.
%s: Failed to find either default or suitable read-write calendar. Making one.
%s: Failed to find a non-hidden calendar for %s. Making one
%s: Failed to get default calendar for reminders. Making one
New calendar not assigned an ID when migrating calendar. This won't end well!
Client %{public}@ (%{public}@) is adding a calendar with properties: [rowid=%i, title=%@, external_id=%@, external_mod_tag=%{public}@, external_id_tag=%{public}@, UUID=%{public}@, sync_token=%{public}@]
Setting default calendar to %i (%@, "%@" in store %i db %i). Reason: %{public}@
Ignoring request to set default calendar as the new value is the same as the old value
Cleaning out keep away from server calendars
Dropping calendar "%@" (%@) from merge since we don't want it going up to the server
Creating new Cal store with External ID: %{public}@
Don't know what CalStoreType to set for ACAccountType %{public}@
No new Cal store: CalDatabaseCreateStore failed.
Found existing Cal store. Updating...
Removing calendar with name: %@
Could not clear events from store for account with identifier %{public}@ because no store was found.
Calendars DCO was asked to enable the local store if necessary.
Account with identifier %{public}@ is syncing calendars. Will not enable local store!
Enabling local store for events because we didn't find any syncing accounts
Removing store because events were disabled or the account was deleted.
Removing store because the account was deleted.
Attempting to move local store events into a sync store.
Attempting to move sync store events into local store.
Error decoding extra parameters for attendee: %@
We have a saved value for an unrecognized parameter %{public}@ on an attachment, but the property already has a parameter with that name! _isSavedParameter may be out of date.
_CalEventOccurrencesExistInDateRange is not making any progress. currentStartAbs=%f, lastStartAbs=%f, duration=%u, tz=%{public}@
Given 'relation' is NULL.  Will not eliminate related object reference.
Given 'relation' is NULL.  Will not get related object reference.
Given 'relation' is NULL.  Will not set related object reference.
NULL 'entity' given.  Will not generate a debug description.
typeId != CPRecordGetTypeID(), CPRecordGetTypeID(): %lu, typeId: %lu
NULL 'participant' given.  Will not generate a debug description.
Record with a rowID of [%@] found.  Record pointer address: [%p].  Will not load record ID.
Record with pointer address of [%p] was marked as being deleted.
Record with pointer address of [%p] was not marked as being deleted.
NULL 'event' given.  Will not generate a debug description.
Rectifying recurrence series privacy levels for event with ID: [%d] title: [%@]
Privacy level change to [%@] detected on event with ID: [%d]
The store for the event with ID [%d] requires the same privacy level across the recurrence series: [%@]
Privacy level override for event with ID [%d] is [%@].
Event with ID [%d] is a detached event.  Grabbed the master event with ID [%d].
Event with ID [%d] is a master event.
Master event with ID [%d] for event with ID [%d] had its privacy level changed from [%@] to [%@].
Detached event with ID [%d] associated with event with ID [%d] had its privacy level changed from [%@] to [%@].
Attempting to add an event (ROWID = %d, startDate = %{public}@) as a detachment of itself. Ignoring.
No event given.  Will not determine travel advisory eligibility.
Event is not a candidate for travel advisories because it is a cancelled event.  Summary: [%@]
Event is not a candidate for travel advisories because it is an all-day event.  Summary: [%@]
Event is not a candidate for travel advisories because the user declined the event.  Summary: [%@]
Event is not a candidate for travel advisories because its travel advisory behavior is not 'automatic' or 'enabled'.  Summary: [%@]
Event is not a candidate for travel advisories because its calendar has all event alerts disabled.  Summary: [%@]
NULL 'event' given.  Will not determine immediate eligibility for travel advisory
Could not fetch predicted location of interest for event title: [%@], event location: [%@], calendar identifier: [%@], error: [%@]
failed to create statement for reading with query: `%@`
Multiple relationships to the same location: Location is the same value as clientLocation. recordID=%i, location=%i, clientLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: Location is the same value as startLocation. recordID=%i, location=%i, startLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: Location is the same value as endLocation. recordID=%i, location=%i, endLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: startLocation is the same value as endLocation. recordID=%i, startLocation=%i, endLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: clientLocation is the same value as startLocation. recordID=%i, clientLocation=%i, startLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: clientLocation is the same value as endLocation. recordID=%i, clientLocation=%i, endLocation=%i, currently setting %i; original value for property set = %i
Error unarchiving local structured data. Error: %@
_CalEventCopyUncachedCalendar: called with NULL event
%s: externalID is null and it wasn't intended to be so. exiting this function now to avoid crash.
Couldn't create a path to write the inline attachment into
Error writing inline attachment (%@) to disk: %@
Error setting file data (%@) in database
Found an unrecognized parameter: %@
We have a saved value for an unrecognized parameter %{public}@ on an attachment, but the property already has a parameter with that name! _isSavedAttachmentParameter may be out of date.
Memory mapping the file at %@
Can't get file system representation for backup file path %@
Memory mapping a zero byte file
Successfully mapped %@ (%lld bytes)
Could not mmap %@: %s
Unmapped %zu bytes
Failed to serialize Exchange calendar item external representation data: %@
Failed to deserialize Exchange calendar item external representation data: %@
Got unexpected data type (%{public}@) after deserializing Exchange calendar item external representation data
Exception caught while deserializating Exchange calendar item external representation data: %@
Searching for an event with a unique identifier matching %@
Found identity match for event %@ in calendar %@
The local event has a greater sequence number. Refusing to update the event
The local event has a greater last modified date. Refusing to update this event
ignoring imported event because the local sequence number (%lu) is greater than the imported sequence number (%lu)
ignoring imported event because the local dtstamp number (%f) is greater than the imported dtstamp (%f)
Don't create a new event in case of METHOD:REPLY in ics.
Couldn't find an existing event in the calendar database. Creating a new one.
Couldn't update CalEvent from icsEvent %@
Found identity match for task %@ in calendar %@
The local event has a greater dtstamp. Refusing to update this event
Couldn't find a task with external id %@ in the calendar database. Creating a new one.
Couldn't update CalTask from icsEvent %@
ICSEvent has %lu detached events
Setting %d as the original event for %d
Encountered an unknown ICSComponent in the calendar: %@
Component not found for component key: [%@].  Attempting to create a phantom master.
Phantom master with UID [%@] is scheduled to be added already.  Will not create phantom master.
Creating a phantom master with UID: [%@].
[%lu] Phantom masters were created.  Adding them to the list of components.
Import of compressed iCalendar data requested.  DataLen: %d
Import of iCalendar data requested.  Data: [%@]
Could not parse ICSDocument from data: %@
Removing %lu leftover detachments with unique identifiers %@
Compression of ICS failed. Somehow.
iCalendar items will be generated from database items.  occurrenceDate: [%@]
Couldn't create ICSComponents for cal item with uid %d
Could not convert the original CalEvent
This event has %@ detached events
Could not convert the detached event with the cal uid %d
Could not convert the original calTask
Failed to create MATCH_DATE_RANGE function in CalCopyRelativeNonRecurringEventAlarmsInDateRange, with error code: %i
Failed to create MATCH_DATE_RANGE function in CalCopyRelativeRecurringEventAlarmsInDateRange, with error code: %i
Failed to start accessing security scoped URL wrapper when trying to create a bookmark for it: %@
MatchDateRangeCallback received wrong number of args. [%i args]
icsItem is nil. There's nothing for us to do
Cannot update a NULL calendar item
VCNotification: Searching for room attendee among %d attendees. Searching for room name: %@ (original) or %@ (updated)
VCNotification: Found a matching virtual conference room attendee.
VCNotification: Found a room attendee, but the name does not match: %@
VCNotification: Not searching for room attendees because we currently have no attendees.
VCNotification: Not searching for room attendees because we have no virtual conference titles.
VCNotification: Adding virtual conference invitation changed flag because a virtual conference was added (%@)
VCNotification: Adding virtual conference invitation changed flag because a virtual conference was deleted (%@)
VCNotification: Adding virtual conference invitation changed flag because a virtual conference was changed
VCNotification:   Old virtual conference: %@
VCNotification:   New virtual conference: %@
VCNotification: Not adding virtual conference invitation changed flag because we found a matching room attendee.
Updating attendees in the database for calendar item: [%@]
Removing [%ld] existing attendees that couldn't be uniquely mapped to by their address from calendar item: [%@]
Removing attendee [%@] on event with UID: [%@]
Adding [%@] attendees from the iCalendar object onto the calendar item: [%@]
Adding attendee [%@] for event with UID [%@]
Updating attendee [%@] for event with UID [%@]
Couldn't update the CalAttendee from %@
Removing [%ld] attendees that weren't in the updated ICS for calendar item: [%@]
Couldn't update organizer from %@
Couldn't create a new CalOrganizer object
Encountered an unknown subcomponent for an ICSComponent: %@. Dropping it on the floor
Couldn't update calendar alarm from ICSAlarm: %@
Couldn't update the CalRecurrenceRef from %@
Generating iCalendar objects for attendees on event: [%@]
Generating iCalendar object for attendee: [%@]
Couldn't create an icsUser from attendee %d
Couldn't create an ICSRecurrence
Setting %ld exception dates on the ICS component
Couldn't create an ICS attachment from attachment %d
Error unarchiving alarm metadata: %@
INV: Invalidating conference %d
Error repairing local store, could not get record store from database %p
Error repairing local store, could not get sqlitedb from recordStore %p
Error repairing local store, could not get coonnection from sqlitedb %p
Error repairing local store, could not start a transaction
Flushing change in-memory change tracking and posting a database change notification because we just repaired the local store
Found %i native stores.  Deleting all but store ID %i.
Error deserializing cached external store info: %@
Deserialized data wasn't a dictionary (it was a %{public}@
Couldn't serialize external info: %@
Attempting to set a path (%{public}@) with CalStoreSetConstraintsName. Only the name should be supplied without an extension.
Attempting to set a file name with .plist extension (%{public}@) with CalStoreSetConstraintsName. Only the name should be supplied without an extension.
Attempting to set an unrecognized constraints name (%{public}@) with CalStoreSetConstraintsName. The given name should be a valid .plist resource in CalendarFoundation.
CalDatabaseCopyStoreWithExternalID: no results for query
CalDatabaseCopyStoreWithExternalID: query resulted in nil results
CalDatabaseCopyStoreWithExternalID: failed to get sqlite database
CalDatabaseCopyStoreWithExternalID: failed to create query
CalDatabaseCopyStoreWithExternalID: externalID is nil
database was busy or locked; sleeping for 1 second
Ignoring attempt to set allowsTasks to %d on store %{public}@. Forcing to NO
Failed to load constraints plist (%{public}@): %@
Failed to load constraints data (%{public}@)
Failed to get URL for stored constraints name: %{public}@
Failed to create statement from SQL "%{public}@".
Migration didn't find the default local store (sqlite returned %i). Inserting a new default local store.
The default local store has type %i. Will move it aside and insert a new default local store
Couldn't get statement for sql "%@"
Error finding next rowID: %i
Couldn't get statement for sql "%{public}@"
Unexpected result %i for sql "%{public}@"
Saving a store with no persistent ID (source identifier). UID = %i, original persistent ID = %@
Subscribed calendar store not found. Creating one now
Failed to save database after creating subscribed calendar store
Found %li subscribed calendar stores. Keeping store with ID %i and deleting the rest.
Deleting duplicate subscribed calendar store: %@ (%i)
Didn't find any store at all when trying to clean up duplicates.
Unknown entity type (%i) in -[CADObjectID initWithEntityType:entityID:databaseID:]
Unknown entity type (%i) in -[CADObjectID initWithCoder:]
icsEvent is nil. There's nothing for us to do
Cannot update a NULL Cal event
CalCalendarItemUpdateFromICSComponent failed
%s - No existing suggested event info for calEvent %@ and icsEvent %@, creating one
%s - Existing suggested event info %@ found for calEvent %@ and icsEvent %@
Setting a recurrence_id based on %f
Couldn't update the calendar item components of event %d
Using uid from owning event: %@
Owning event had no uid. Creating a new one: %@
This event has no original event. Creating a new uid %@
Failed to serialize Exchange calendar external representation data: %@
Failed to deserialize Exchange calendar external representation data: %@
Got unexpected data type (%{public}@) after deserializing Exchange calendar external representation data
Exception caught while deserializating Exchange calendar external representation data: %@
Initializing calItem metadata
Found an unrecognized property: %@
We have a value for %{public}@, but the item already has properties with that name! _isSavedProp may be out of date.
We have a value for parameter %{public}@ on %{public}@, but the property already has a parameter with that name! -isRecognizedParameter:forProperty:inComponent: may be out of date.
Failed to unarchive external data for item. Error = %@
Unknown object in external data for item.  Dropping it.  object is %@
exception %@ while trying to unarchive external data for item
Error archiving item metadata: %@
Error archiving external representation dictionary: %@
Failed to unarchive external data to fetch item metadata. Error = %@
Failed to unarchive extra properties from external data. Error = %@
exception %@ while trying to convert item
Location to be removed (%i) has an owner of calendar item %i, but that calendar item doesn't reference that location.
NULL 'location' given.  Will not return a full display string.
Location is being saved with no valid inverse relationship. location id = %i; alarm_owner_id = %i; item_owner_id = %i; start_location_owner_id = %i; end_location_owner_id = %i; client_location_owner_id = %i; previous alarm_owner_id = %i; previous location_owner_id = %i; previous start_location_owner_id = %i; previous client_location_owner_id = %i;
Got an invitation response of %d for calendar %@, so we're going to remove it
Handling invite reply notification %@
Ignoring invite reply notification for an unknown calendar: %@
Invite reply has firstName: %@, lastName: %@
Invite reply has no names. Using the provided address of %@
This looks like a mailto address. Search the addressbook for a contact with the address %@
This looks like a telephone number. Search the addressbook for a contact with the phone number %@
Couldn't set url for the event %@ because it doesn't exist in our database
Occurrence cache trim and extend requested.
Could not acquire a database object.  Will not trim and extend the occurrence cache.
Could not open a connection to the database.  Will not trim and extend the occurrence cache.
EventKitOC: Unable to start transaction. Aborting trim/extend.
Time zone changed during trim and extend. (was "%{public}@", now "%{public}@") Will do a full rebuild instead.
Occurrence cache start moved backwards (from %{public}@ to %{public}@) during trim and extend. Will do a full rebuild instead.
The occurrence cache has drifted too far out of date. Trimming and extending NOW. (start was %{public}@ and should be %{public}@; end was %{public}@ and should be %{public}@)
Deferring occurrence cache update because the occurrence cache isn't that far out of date yet. (start was %{public}@ and should be %{public}@; end was %{public}@ and should be %{public}@)
Trim and extend complete in %f
Trim and extend not needed
Unable to begin transaction
Could not begin transaction
Couldn't begin transaction
Unable to start transaction
EventKitOC: Checking if we need to rebuild
EventKitOC: Clearing recurrence rule cached end dates
EventKitOC: Rebuilding cache in time zone %@...
EventKitOC: Cache rebuilt in %f
The occurrence cache is not valid.  Will not rebuild the occurrence cache.
Could not acquire the database lock.  Will not rebuild the occurrence cache.
Unable to start transaction.  Will not rebuild the occurrence cache.
The occurrence cache was successfully rebuilt.
Preparing to trim and extend the occurrence cache.  newStartDate: [%@] oldEndDate: [%@] newEndDate: [%@]
Removing occurrences in the occurrence cache before [%@]
Rebuilding occurrence cache from start date [%@] to end date [%@].
Found [%@] non-recurring events in the date range.
Found [%@] recurring events possibly in the date range.
Occurrence cache candidate event fetching took [%@] seconds and found [%@] total events.
Analyzing occurrence cache candidate event.   Row ID: [%@]  Title: [%@]
Event with row ID [%@] is not displayable.  Will not insert into occurrence cache.
Found [%@] occurrence dates in the date range for candidate event with row ID [%@].  Number of days spanned: [%@]
Inserting an event with id -1 into the occurrence cache in _CalEventOccurrenceCacheGenerateOccurencesInDateRange. event=%@
Determining if occurrence chunk with date [%@] for event with row ID [%@] should be included in the occurrence cache.
Occurrence cache rebuilt.  Took [%f] seconds.  Was cache modified: [%@]
Skipping cache insert for event with id == -1
Inserting occurrence into occurrence cache.  event_id: [%@],  calendar_id: [%@], store_id: [%@], occurrence_date: [%@], occurrence_start_date: [%@].  occurrence_end_date: [%@], day: [%@]
Attempted to insert a duplicate occurrence into the occurrence cache. event_id: [%i], calendar_id: [%i], store_id: [%i], occurrence_date: [%f], occurrence_start_date: [%f], occurrence_endDate: [%f], day: [%f]
Skipping invalid entry in occurrence cache occurring at %f with eventID -1
Failed to get SQL statement when fetching event occurrences
Failed to get db handle when fetching event occurrences
Deleting all data from the 'OccurrenceCache' table.
Deleting all data from the 'OccurrenceCacheDays' table.
Acquired occurrence cache range.  Start date: [%@].  End date: [%@]
EventKitOC: Event duration is too long, not adding to occurrence cache (asked to add %li occurrences each with %i days).
Inserting an event with id -1 into the occurrence cache in _CalEventOccurenceCacheProcessAdds. event=%@
nil 'observer' given.  Will not add destruction observer.
nil 'observer' given.  Will not remove destruction observer.
Couldn't update the calendar item components of task
No UUIDs were given.  Will not push any calendar items to Spotlight in batches.
Pushing [%@] calendar items in batches of [%@]
Attempting to push calendar items to Spotlight.  Calendar item UUIDs: [%@]
Could not find a calendar item with UUID [%@].  Will not push this item to Spotlight.
%s called on an an event with no suggested event info (probably not a suggested event)
Error unarchiving structured data. Error: %@
Event is missing value for key to determine if suggested event is eligible for notification, event unique identifier = %{public}@
includeLocationProperty should not both be true for property %zd.
updating location type %zd, but icsItem is type '%@'
Ignoring invalid coordinates: %@
Ignoring unexpected location URL scheme: %@.
UpdateICSStructuredLocationFromCalLocation dropping mapkit handle because it exceeds the max length restriction on many servers.
Error checking for changes to copy: %d
_CalDatabaseRegisterClientForPersistentChangeTracking - ClientIdentifier: [%@]
_CalDatabaseRegisterClientForPersistentChangeTracking - ClientIdentifier is NULL
_CalDatabaseRegisterClientForPersistentChangeTracking - clientIdentifierCString is NULL
_CalDatabaseRegisterClientForPersistentChangeTracking - clientIdentifierCString string is empty
Couldn't start transaction to get changed ek objects
Unable to start transaction before clearing superfluous changes.
Committing after clearing superfluous changes.
Unable to start transaction before cleaing change history
No class for entity type: %d
CalDatabasePersistentChangeTracking: unable to commit transaction (error %d)
Moving client cursor for %@ forward from %i to %i because all changes in those sequences have been individually consumed.
Client cursor for %@ is still %i.
Couldn't start transaction before fetching changes since sequence number
Unable to allocate space for %zu object IDs
Unable to allocate space for %zu object states
Unable to allocated %zu bytes for returning changes
Failed to allocate memory for changePropertiesByRecord mapping desc: %p, cstring: %p, nsstrings: %p, types: %p
Unsupported record descriptor %s
Failed to allocate property values array
Unsupported type %i for key %@
ClearSuperfluousChanges
Unable to start transaction before cleaing changes
Couldn't start transaction to enumerate unconsumed changes.
__ClientRowHandler - clientIdentifier is nil
saving a category link with NULL category: relation=%p, record=%@
INV: Invalidating attachment %d
Unknown property id %i in CalLoadAttachmentPropertyFromFileProperty
Device lock state changed.  New 'dataIsAccessible' state: [%@].
The given ICSDate (%@) is not of any known type
event has occurrence change: %@
event does NOT have occurrence change: %@
process: ++++ %@ (contains %lu occurrences)
Rejecting candidate event for iTIP message because it is on a calendar that does not allow scheduling %@
Could not find a valid event in the calendar database with uid %@
Ignoring inbox item %@ because it's detached but not significantly
Event with identifier %@ handled message.
Event with identifier %@ didn't handle the message; looking at the next event.
process: ~~~~ leaving message: %@
Ignoring cancellation for event we never responded to (%@)
Ignoring inbox item %@ because it's for an event that is not significantly detached
Setting needs notification for event %@ because an iTIP request was found in the inbox
Ignoring inbox item %@ because it doesn't look important
Ignoring inbox update for %@ because it is in the past
Found a cancellation for an event (%d) that was proposed or invitee not yet accepted. Hiding alert for this change.
Marking cancelled event %d as needing a notification
softlink:o:path:/System/Library/PrivateFrameworks/CalendarMigration.framework/CalendarMigration
CalDatabaseInitializationConfiguration
CalScheduledTaskCache_TimeZoneFetchContext
CalChangeFilteringMigrationAccountStore
CalMigrationAccountStore
CalMigrationReadOnlyAccountStore
NSObject
CalChangeFilteringMigrationAccount
CalMigrationAccount
CalMigrationReadOnlyAccount
CaliTIPMessage
CalAccountStoreChangeFilterDelegateForLegacyICBURestore
CalChangeFilteringMigrationAccountStoreDelegate
CADObjectChangeIDHelper
CDBAttachmentInfo
CDBAttachmentMigrator
CalAttachmentFileCleanupContext
CalSearch
EKMSUIDAdditions
CalCalendarLocalAccountInfo
CDBAccountInfo
CDBiCalFixUps
CalDatabaseWriteLock
CDBPreferences
CalACMigrationAccount
CalStoreSetupAndTeardownUtils
CalExchangeCalendarItemExternalRepresentation
CalExchangeSerializable
CalAlarmMetadata
CDBRecurrenceGenerator
CalACMigrationAccountStore
CADObjectID
NSCopying
NSSecureCoding
NSCoding
CalExchangeCalendarExternalRepresentation
CalItemMetadata
CalDAVNotificationHandler
EKCalendarFilter
CDBBundle
CalEventOccurrenceCacheRange
CDBCommonEntityFunctionalityHandler
CalMigrationToolOptions
CDBSpotlightUtilities
CalSingleDatabaseInMemoryChangeTimestamp
CalInMemoryTrackedDatabase
CalDatabaseInMemoryChangeTracking
CalAllFilteringMigrationAccountStoreDelegate
CADObjectChangeID
EKPersistentChangeStoreInfo
EKPersistentChangeStoreRowInfo
CalDatabaseIntegrityErrors
CDBDataProtectionObserver
CaliTIPHandler
CalIsAfterDate:
CDVStringByXMLUnquoting
T@"NSString",C,N,Gget_defaultCalendarID,Sset_defaultCalendarID:
CalDateByComponentwiseAddingSeconds:inCalendar:
TQ,R,N,V_myself
CalGregorianCalendarForTimeZone:
Tq,N,Gget_defaultCalendarStoreUID,Sset_defaultCalendarStoreUID:
CalIsAfterOrSameAsDate:
_createLocationIdsSearchContext
CalIsBeforeOrSameAsDate:
_filter
CalSimulatedDateForNow
_implementsCancellationCallback
CalTemporaryDirectoryAppropriateForURL:
_moveAttachmentsWithInfo:error:
ICSStringFromMethod:
_others
JSONObjectWithData:options:error:
_performCleanup
T#,R
account
T@"<CalCalendarDatabaseIntegrityErrorReportingDelegate>",&,N,V_delegate
allAccountTypes
T@"<CalMigrationAccount>",R,N,V_backingAccount
attachmentContainerWithBaseURL:
T@"ACAccount",R,N,V_account
base64EncodedStringWithOptions:
T@"CalDAVScheduleChangesProperty",&,N,V_scheduleChanges
bundleForClass:
T@"CalDeviceLockObserver",&,N,V_deviceLockObserver
calendarChanges
T@"ICSCalendar",R,N
changes
T@"ICSEvent",&,N,V_event
clients
T@"NSCountedSet",R,N,V_errors
containsString:
T@"NSDate",R,N,V_endDate
countForObject:
T@"NSDictionary",R,N,V_unrecognizedProperties
currentCalendar
T@"NSMutableDictionary",&,N,V_dict
T@"NSMutableDictionary",R,N,V_addedWrappedChildAccounts
defaultCalendarChangedTimestamp
T@"NSMutableDictionary",R,N,V_modifiedPropertyValues
defaultTimeZone
T@"NSMutableSet",R,N,V_removedWrappedAccountIdentifiers
dtstamp
T@"NSString",&,N
T@"NSString",&,N,V_minConsumedClientIdentifier
endDate
T@"NSString",C,N,Gget_defaultCalendarChangedReason,Sset_defaultCalendarChangedReason:
hasSize
T@"NSString",C,N,V_filename
initWithDomain:
T@"NSString",R,C
initWithString:
T@"NSString",R,N
isDirty
T@"NSTimeZone",&,N,V_previousTimeZone
isEquivalentTo:
T@"NSURL",&,N,V_directoryURL
locationChanged
T@"NSURL",R,C,N,V_url
makeUID
T@"NSURL",R,N,V_accountsDatabaseFile
numberWithBool:
T@"NSURL",R,N,V_homeDirectory
options
T@?,C,N,V_stateChangedCallback
percentComplete
TB,N,Gget_enableTravelAdvisoriesForAutomaticBehavior,Sset_enableTravelAdvisoriesForAutomaticBehavior:
routing
TB,N,Gget_sqlProfileLoggingEnabled,Sset_sqlProfileLoggingEnabled:
searchAttendees
TB,N,Gget_suggestedLocationsTestMode,Sset_suggestedLocationsTestMode:
secondMinConsumedSequenceNumber
TB,R,N
TB,R,N,V_waitForRemindersOnly
setConferences:
TB,V_searchAttendees
setDescription:
TB,V_searchParticipants
setMinConsumedClientIdentifier:
TQ,R
setUid:
Ti,N,V_minConsumedSequenceNumber
setWithObjects:
Ti,N,V_secondMinConsumedSequenceNumber
set_kCalPreferredDaysToSyncKey:
Ti,R,N,V_entityID
sharedReadWrite
Tq,N,Gget_LastConfirmedSplashScreenVersionViewed,Sset_LastConfirmedSplashScreenVersionViewed:
stringByAppendingPathComponent:
Tq,N,Gget_defaultCalendarDatabaseID,Sset_defaultCalendarDatabaseID:
summary
Tq,N,Gget_kCalRemindersPreferredDaysToSyncKey,Sset_kCalRemindersPreferredDaysToSyncKey:
trigger
Tq,R,N,V_backupBeforeCalendarMigration
updated
Tq,R,N,V_changeID
Tq,R,N,V_performCalendarMigration
weekday
Tq,R,N,V_performReminderMigration
x_apple_suggestionInfoTimestamp
URLByAppendingPathComponent:
.cxx_destruct
T@"NSArray",R,N
CalCalendarWithUnsanitizedCalendarIdentifier:
TB,R,N,GisTemporary,V_temporary
CalDateForNow
TQ,R,N,V_others
CalGregorianGMTCalendar
_backingAccount
CalIsBeforeDate:
_errors
CalOccurrencesForBirthday:inDateRange:
_generateUIDSetToShowCalendars:
CalStringByRemovingAutoComment
_loadedAccounts
ICSDataWithOptions:
_myself
ICSStringWithOptions:
_partialResults
LastConfirmedSplashScreenVersionViewed
_resetDatabase:
T@"<CalCalendarDataContainerProvider>",&,N,V_dataContainerProvider
address
T@"<CalChangeFilteringMigrationAccountStoreDelegate>",R,W,N,V_delegate
allKeys
T@"<CalMigrationAccountStore>",R,N,V_backingAccountStore
attendeeAddress
T@"CDBPreferences",&,N,V_preferences
birthdayStringForContactName:eventDate:birthDate:lunarCalendar:
T@"CalDatabaseInMemoryChangeTracking",R,N,V_database
bymonth
T@"CalPreferences",R,N,V_preferences
calendarDateByAddingComponents:
T@"ICSDocument",&,N,V_document
cleanup
T@"ICSEvent",R,N
containsObject:
T@"NSData",C,N,V_data
content
T@"NSDate",R,N,V_startDate
created
T@"NSHashTable",R,N,V_clients
dateTimeChanged
T@"NSMutableDictionary",R,N,V_addedWrappedAccounts
dealloc
T@"NSMutableDictionary",R,N,V_loadedAccounts
defaultProvider
T@"NSMutableSet",&,N,V_destructionObservers
deleted
T@"NSObject<OS_dispatch_queue>",&,N,V_lock
dtstart
T@"NSString",&,N,V_clientIdentifier
ekmsuidGMTDateToDateInTimeZone:
T@"NSString",&,N,V_parentAccountIdentifier
feature
T@"NSString",C,N,Gget_defaultCalendarName,Sset_defaultCalendarName:
hostURL
T@"NSString",C,N,V_searchTerm
initWithFormat:
T@"NSString",R,C,N,V_localRelativePath
isAuthenticated
T@"NSTimeZone",&,N,V_nextTimeZone
isDurationBased
T@"NSTimeZone",R,N,V_timeZone
isProxy
T@"NSURL",R,C,N,V_legacyURL
lowercaseString
T@"NSURL",R,N,V_accountsChangesFile
member:
T@"NSURL",R,N,V_destinationDirectory
numberWithLong:
T@"NSURL",R,N,V_sourceCalendarDirectory
payloadAsString
TB,N
release
TB,N,Gget_overrideParticipantRoleConstraint,Sset_overrideParticipantRoleConstraint:
scheduleChanges
TB,N,Gget_suggestEventLocations,Sset_suggestEventLocations:
searchLocations
TB,R
serviceWithDefaultShellEndpoint
TB,R,N,V_migrateUsingCalendarDaemon
setAuthorNames:
TB,V_iMIPImported
setDay:
TB,V_searchLocations
setDue:
TB,V_shouldMatchLocationsOnlyForEventSearch
setPreferences:
Ti,N,V_consumedSequenceNumber
setUrl:
Ti,N,V_options
setX_apple_structured_location:
Ti,R,N,V_databaseID
set_suggestedLocationsTestMode:
Ti,R,N,V_entityType
stringAddingTel
Tq,N,Gget_defaultCalendarChangedTimestamp,Sset_defaultCalendarChangedTimestamp:
stringByAppendingPathExtension:
Tq,N,Gget_kCalPreferredDaysToSyncKey,Sset_kCalPreferredDaysToSyncKey:
timeZoneChanged
Tq,N,Gget_privacyPaneHasBeenAcknowledgedVersion,Sset_privacyPaneHasBeenAcknowledgedVersion:
Tq,R,N,V_backupBeforeReminderMigration
uppercaseString
Tq,R,N,V_deleteMigratedData
visible
Tq,R,N,V_performCleanup
x_apple_suggestionInfoOpaqueKey
URIRepresentation
x_apple_suggestionInfoUniqueKey
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLByDeletingPathExtension
URLPathAllowedCharacterSet
URLWithString:
UTF8String
UUID
UUIDString
_UIDAntiSetWithCalendars:
_UIDSetWithCalendars:
_account
_accountIdentifier
_accountTypeIdentifier
_accountWithIdentifier:preloadedBackingAccount:
_accountsChangesFile
_accountsDatabaseFile
_addCalendarUIDsFromPrefs:toSet:database:
_addCalendarWithUID:toSet:database:
_addCalendarsForStoreWithUID:toSet:database:
_addFilterToQuery:creator:userInfo:
_addMatchedEventIds:
_addMatchedLocationIds:
_addMatchedParticipantIds:
_addedWrappedAccounts
_addedWrappedChildAccounts
_attachmentInfoForLegacyAttachmentURL:newAttachmentContainerForStore:newCalendarDataContainer:database:attachmentUUID:
_attachmentUUIDsToDelete
_backingAccountForAccount:
_backingAccountStore
_backupBeforeCalendarMigration
_backupBeforeReminderMigration
_calDAVInfoStringForTitle:
_calculateDiffsForCalEvent:icsEvent:inMessage:
_calendarUIDs
_changeCount
_changeID
_changedAttributesFromCalendarChanges:
_changes
_cleanKeepAwayFromServerCalsInStore:
_clearAllEventsFromStore:inDatabase:
_clientIdentifier
_clients
_consumedSequenceNumber
_copyCalendarForReplyItem:inDatabase:store:calendarHomeURL:
_copyNotificationWithExternalID:inCalendar:withDatabase:recordIDMap:
_copyNotificationWithUniqueIdentifier:inCalendar:orStore:withDatabase:recordIDMap:
_copyOccurrenceDatesWithBirthdayEvent:startDate:endDate:timeZone:limit:locked:
_copyStoreForAccountWithIdentifier:inDatabase:
_copyStoreWithExternalIdentifier:inDatabase:
_createEventIdsSearchContext
_createNewContainerIfNeeded:error:
_createNotificationWithInviteStatus:inDatabase:
_createParticipantIdsSearchContext
_createResourceChange:withType:forNotification:withRecurrenceID:database:store:calendarHomeURL:
_createSearchContext
_data
_dataContainerProvider
_dataSink
_dataSourceDeallocLock
_database
_databaseID
_dateToStartShowingResultsSentToDataSink
_delegate
_deleteEntireContainer
_deleteEventIdsSearchContext:
_deleteLocationIdsSearchContext:
_deleteMigratedData
_deleteParticipantIdsSearchContext:
_deleteSearchContext:
_destinationDirectory
_destructionObservers
_deviceLockObserver
_deviceLockStateChanged
_dict
_directoryURL
_document
_durationForEvent:
_enableLocalStoreIfNecessaryIgnoringAccount:inDatabase:accountStore:
_endDate
_entityID
_entityType
_event
_filename
_fixEndDateForEvent:withOriginalEvent:detachments:
_generateUIDSetToFilterAllCalendars
_generateUIDSetToFilterCalendars:
_generateUIDSetToShowCalendarUIDs:
_getApplicationSearchResults:
_getAttendeesSearchResults:
_getEventsSearchResults:
_getLocationSearchResults:
_getParticipantsSearchResults:
_handleInviteNotification:withUid:serverURL:syncKey:database:store:calendarHomeURL:notificationCalendar:notificationCalendarURL:recordIDMap:
_handleInviteReply:withUid:serverURL:syncKey:owningNotification:database:store:calendarHomeURL:notificationCalendar:notificationCalendarURL:contactsProvider:recordIDMap:
_handleResourceChanged:withUid:serverURL:syncKey:database:store:calendarHomeURL:notificationCalendar:notificationCalendarURL:recordIDMap:
_homeDirectory
_iMIPImported
_infoForAttachmentsInLegacyAttachmentContainerForStore:newAttachmentContainerForStore:newCalendarDataContainer:database:
_initWithHomeDirectory:sourceCalendarDirectory:destinationDirectory:migrateUsingCalendarDaemon:waitForRemindersOnly:performCalendarMigration:performReminderMigration:performCleanup:deleteMigratedData:backupBeforeCalendarMigration:backupBeforeReminderMigration:saveAccountsChangesToFile:accountsDatabaseFile:
_inviteStatusFromString:
_isFilteringAllWhileLocked
_lastPrunedTimestamp
_legacyURL
_localRelativePath
_lock
_lp_URLWithUserTypedString:relativeToURL:
_matchedEventsSet
_matchedLocationsSet
_matchedParticipantsSet
_mergeEntityType:fromStore:toStore:inDatabase:
_migrateUsingCalendarDaemon
_minConsumedClientIdentifier
_minConsumedSequenceNumber
_modifiedPropertyValues
_moreResultsAvailable
_moveAttachmentWithInfo:error:
_moveAttachmentsForStore:fromLegacyAttachmentContainer:calendarDataContainerProvider:database:
_moveAttachmentsFromLegacyAttachmentContainer:calendarDataContainerProvider:database:
_nextIndex
_nextTimeZone
_notifyDestructionObservers:
_options
_parentAccountIdentifier
_partialCachedDays
_partialCachedDaysIndexes
_partialCachedOccurrences
_performCalendarMigration
_performReminderMigration
_preferences
_prepareForCalRecurrence:locked:
_previousTimeZone
_pushUpdatesForCalendarItemsWithUUIDs:database:
_pushUpdatesForCalendarItemsWithUUIDs:inBatchesOf:database:
_removedWrappedAccountIdentifiers
_scheduleChanges
_searchAttendees
_searchLocations
_searchParticipants
_searchString
_searchTerm
_secondMinConsumedSequenceNumber
_seed
_setFileSizeForAttachmentUUID:attachmentURL:database:
_setFileSizeForAttachmentsWithInfo:database:
_setInterestedDatabasePaths:forContext:
_setLocalRelativePathForAttachmentUUID:localRelativePath:database:
_setupForCalEvent:locked:
_shouldMatchLocationsOnlyForEventSearch
_sourceCalendarDirectory
_startDate
_startLoadingResults
_stateChangedCallback
_stopLoadingResults
_storeAttachmentContainer
_stringForTriStateOption:
_temporary
_timeZone
_unrecognizedProperties
_updateLocalRelativeURLForAttachmentsWithInfo:database:
_url
_waitForRemindersOnly
_whitelistedClassesForSecureCoding
absoluteString
absoluteTime
acceptedURL
accountDescription
accountID
accountPropertyForKey:
accountStore
accountType
accountTypeIdentifier
accountTypeWithIdentifier:
accountUsesDataSeparatedContainer:
accountWithIdentifier:
accountsChangesFile
accountsDatabaseFile
accountsWithAccountType:
accountsWithAccountTypeIdentifier:error:
acknowledged
action
addAttachmentToDelete:
addChangeset:clientID:onlySyncStatusChanged:
addDestructionObserver:
addIndex:
addObject:
addObjectsFromArray:
addedWrappedAccounts
addedWrappedChildAccounts
addressIsAccountOwner:
allObjects
allOccurrences
allParameters
allValues
allowChangesToExistingTopLevelAccount:
allowCreationOfTopLevelAccountWithTypeIdentifier:
allowedCalendars:contains:
alternateTimeProposal
anyObject
appendFormat:
appendSlashIfNeeded
appendString:
applyToComponent:
archivePathToFile:toFile:createPKZipArchive:error:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
attach
attachmentContainerForSourceIdentifier:calendarDataContainer:
attachmentsChanged
attemptMigrationWithCalendarDatabase:
attendee
attendeesChanged
authenticated
autorelease
backingAccount
backingAccountStore
backupBeforeCalendarMigration
backupBeforeReminderMigration
bitmapRepresentation
blockTitle
bookmark
boolValue
bundle
byday
bymonthday
bysetpos
bytes
byweekno
byyearday
cStringUsingEncoding:
calDAV_leastInfoStringRepresentationRelativeToParentURL:
calSearch:foundOccurrences:cachedDays:cachedDaysIndexes:
calSearch:showResultsStartingOnDate:
calSearchComplete:
calSearchShouldStopSearching:
calSyncingAccountUsingChildAccounts:
calendar
calendarDateByAddingSeconds:
calendarDateForDay
calendarDateInTimeZone:
calendarDateWithAbsoluteTime:timeZone:
calendarDateWithDate:timeZone:
calendarIDClauseForQueryWithVariableName:
calendarIdentifier
canonicalizePath:
caseInsensitiveCompare:
changeForOccurrence:
changeID
changeTrackingForDatabase:
changeTrackingForDatabaseWithPath:
changedBy
changedEntityIDsBetweenMinExternalTimestamp:minSelfTimestamp:maxExternalTimestamp:latestSelfTimestamp:client:changesAreSyncStatusOnly:
changedEntityIDsBetweenTimestamp:andTimestamp:latestTimestamp:client:changesAreSyncStatusOnly:
changedEntityIDsForDatabase:sinceTimestamp:latestTimestamp:changesAreSyncStatusOnly:
changedProperties
characterSetWithBitmapRepresentation:
characterSetWithCharactersInString:
childAccounts
childAccountsForAccount:withTypeIdentifier:
class
cleanupAuxDatabaseIfNeededForAccountID:auxDatabase:mainDatabase:
clearAllChangesets
clearAllEventsFromStoreForParentAccount:withChildren:inDatabase:
clientIdentifier
code
collectionChanges
collectionUpdates
commonName
compare:
compareCalendarServerAccess:withAccess:
completed
componentForKey:
componentKeys
componentOccurrencesForKey:
components
components:fromDate:
componentsAsString
componentsJoinedByString:
componentsSeparatedByString:
computeRecurrenceEndDate:
computeRecurrenceEndDateForCalEvent:recurrenceRule:locked:
conference
conferenceURLFromSources:
conferences
conformsToProtocol:
constraintsURLForName:
consumedSequenceNumber
containerForAccountIdentifier:
containerInfoForAccountIdentifier:
containerInfoForPersonaIdentifier:
containerURL
containsValueForKey:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
copy
copyItemAtPath:toPath:error:
copyItemAtURL:toURL:error:
copyOccurrenceDatesBetweenStartDate:endDate:timeZone:limit:
copyOccurrenceDatesWithCalEvent:startDate:endDate:timeZone:limit:locked:
copyOccurrenceDatesWithInitialDate:allDay:rangeStart:rangeEnd:timeZone:limit:
copyOccurrenceDatesWithInitialDate:calRecurrences:rangeStart:rangeEnd:timeZone:
copyStoreForAccount:withChildren:inDatabase:
copyString
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAccountWithAccountTypeIdentifier:error:
createChildAccountOfParent:withAccountTypeIdentifier:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
currentHandler
currentHash
cutype
data
dataContainerProvider
dataIsAccessible
dataRepresentationWithExistingMetaData:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithContentsOfURL:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
database
database:restoreGenerationChangedExternally:
databaseID
date
dateByAddingComponents:toDate:options:
dateByAddingDays:inCalendar:
dateByAddingTimeInterval:
dateByAddingYears:months:days:hours:minutes:seconds:
dateFromComponents:
dateFromICSString:
dateInTimeZone:fromTimeZone:
dateWithCalendarFormat:timeZone:
dateWithTimeIntervalSinceReferenceDate:
dayOfWeek:weekNumber:
daylightSavingTimeOffsetForDate:
debugDescription
debugStringForEvent:
decimalDigitCharacterSet
decodeBoolForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCalendarChangedReason
defaultCalendarDatabaseID
defaultCalendarID
defaultCalendarName
defaultCalendarStoreUID
defaultCityForTimeZone:
defaultManager
delegate
deleteAllSearchableItemsForBundleID:completionHandler:
deleteMigratedData
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
description
descriptionChanged
descriptionWithCalendarFormat:timeZone:locale:
deserializeConference:
destinationDirectory
destructionObservers
deviceLockObserver
dict
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithContentsOfURL:
dictionaryWithExternalRepresentationData:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
diffsAreImportant:
directoryURL
dirty
displayName
distantFuture
doScheduleChanges:applyToEvent:inCalendar:
document
doubleValue
drainLocalStoreInDatabase:
dtend
duration
earlierDate:
ekmsuidStringForYearMonthDay
elapsedTimeAsNumber:
emailAddress
enableTravelAdvisoriesForAutomaticBehavior
enabledForCalendarsDataClass
encodeBool:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endTimeChanged
entityID
entityName
entityType
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumeratorAtPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
errorWithDomain:code:userInfo:
errors
event
eventTimeZone
exceptionWithName:reason:userInfo:
exdate
externalRepresentationDataWithDictionary:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileSystemRepresentation
fileURLWithPath:
filename
filterQueryForKey:prefix:whereClause:creator:userInfo:
filterQueryForQueryString:creator:userInfo:
filteredArrayUsingPredicate:
filteredCalendars
firstName
firstObject
fixEndDates:
fmtype
freq
fullDisplayStringWithTitle:address:
fullNameForFirstContactMatchingEmailAddress:
fullNameForFirstContactMatchingPhoneNumber:
getBooleanPreference:defaultValue:
getFileSizeForPath:fileManager:error:
getIntegerPreference:defaultValue:
getOccurrenceChange:forEvent:inCalendar:
getResourceValue:forKey:error:
getValueForPreference:expectedClass:
get_LastConfirmedSplashScreenVersionViewed
get_defaultCalendarChangedReason
get_defaultCalendarChangedTimestamp
get_defaultCalendarDatabaseID
get_defaultCalendarID
get_defaultCalendarName
get_defaultCalendarStoreUID
get_enableTravelAdvisoriesForAutomaticBehavior
get_kCalPreferredDaysToSyncKey
get_kCalRemindersPreferredDaysToSyncKey
get_overrideParticipantRoleConstraint
get_privacyPaneHasBeenAcknowledgedVersion
get_sqlProfileLoggingEnabled
get_suggestEventLocations
get_suggestedLocationsTestMode
handleEvent:calEvent:eventID:database:message:accountInfo:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasBeenUnlockedSinceBoot
hasClients
hasFloatingTimeZone
hasMailto
hasPrefix:
hasSuffix:
hasTel
hasTimeComponent
has_LastConfirmedSplashScreenVersionViewed
has_defaultCalendarChangedReason
has_defaultCalendarChangedTimestamp
has_defaultCalendarDatabaseID
has_defaultCalendarID
has_defaultCalendarName
has_defaultCalendarStoreUID
has_enableTravelAdvisoriesForAutomaticBehavior
has_kCalPreferredDaysToSyncKey
has_kCalRemindersPreferredDaysToSyncKey
has_overrideParticipantRoleConstraint
has_privacyPaneHasBeenAcknowledgedVersion
has_sqlProfileLoggingEnabled
has_suggestEventLocations
has_suggestedLocationsTestMode
hash
havePerformedReminderMigrationCleanup
homeDirectory
hour
href
iMIPImported
identifier
inReplyTo
indexOfObjectPassingTest:
indexSearchableItems:completionHandler:
info
init
initFilteringAllWithDatabase:
initUsingCalendarDaemon
initUsingCalendarDaemonWaitingForRemindersOnly
initWithACAccount:
initWithAccountIdentifier:accountTypeIdentifier:
initWithAccountType:
initWithArray:
initWithBackingAccount:
initWithBackingAccountStore:delegate:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
initWithCalendar:
initWithCalendarDataContainerURL:
initWithCalendarIdentifier:
initWithCapacity:
initWithCoder:
initWithData:
initWithData:encoding:
initWithData:filename:
initWithData:filename:scheduleChanges:
initWithData:options:error:
initWithDatabase:
initWithDatabase:entityType:
initWithDatabase:entityType:calendarUIDs:
initWithDatabase:entityType:filteringCalendars:
initWithDatabase:entityType:filteringCalendarsWithUIDs:
initWithDatabase:entityType:showingCalendarsWithUIDs:
initWithDatabase:filter:dataSink:
initWithDatabase:showingCalendars:
initWithDatabase:showingCalendarsWithUIDs:
initWithDate:
initWithDawnOfTime
initWithDictionaryRepresentation:
initWithDirectoryURL:
initWithDisplayName:handles:handleIdentifier:
initWithDomain:readOnly:
initWithDomain:store:
initWithDuration:
initWithEmailAddress:
initWithEntityType:changeID:
initWithEntityType:entityID:
initWithEntityType:entityID:databaseID:
initWithExternalID:storeUUID:database:
initWithFrequency:
initWithHomeDirectory:
initWithHomeDirectory:destinationDirectory:performCalendarMigration:performReminderMigration:performCleanup:deleteMigratedData:backupBeforeCalendarMigration:backupBeforeReminderMigration:saveAccountsChangesToFile:accountsDatabaseFile:
initWithICSComponent:
initWithItemContentType:
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
initWithKeyOptions:valueOptions:capacity:
initWithLegacyURL:url:localRelativePath:
initWithName:
initWithName:protectionClass:bundleIdentifier:
initWithObjects:
initWithOptions:capacity:
initWithPassword:
initWithPhoneNumber:
initWithPreferences:
initWithReadOnly:
initWithRed:green:blue:
initWithReminderKitProvider:defaultsProvider:
initWithRootElementNameSpace:name:parseClass:baseURL:
initWithSourceCalendarDirectory:destinationDirectory:performCalendarMigration:performReminderMigration:performCleanup:deleteMigratedData:backupBeforeCalendarMigration:backupBeforeReminderMigration:saveAccountsChangesToFile:accountsDatabaseFile:
initWithStartDate:endDate:
initWithStartDate:endDate:timeZone:
initWithStateChangedCallback:
initWithStore:
initWithTimeIntervalSinceReferenceDate:
initWithTimestampForMyself:others:
initWithType:subtype:context:
initWithURL:
initWithURL:readonly:
initWithUTF8String:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
initWithValue:
initWithValue:type:
initWithWeekday:number:
initWithWeeks:days:hours:minutes:seconds:
initWithYear:month:day:
initWithYear:month:day:hour:minute:second:
initWithYear:month:day:hour:minute:second:timeZone:
insertObject:atIndex:
intValue
integerValue
intersectsRangeWithStartDate:endDate:allowSinglePointIntersection:
interval
inviteStatus
isAbsolutePath
isAddressMe:withAccountInfo:
isAfterDate:
isAllDay
isBeforeDate:
isBinary
isCalendarUIDVisible:
isCancelled
isCreate
isEnabledForDataclass:
isEqual:
isEqualToConference:
isEqualToData:
isEqualToDate:
isEqualToString:
isEqualToTimeZone:
isFileURL
isFilteringAll
isKindOfClass:
isLocalStoreEmptyInDatabase:
isLocalStoreEnabledInDatabase:
isMemberOfClass:
isProvisionedForDataclass:
isReadOnlyAccount:
isRecognizedParameter:forProperty:inComponent:
isRecognizedProperty:inComponent:
isRunningAsSetupUser
isShowingAll
isStoreEmptyForAccount:inDatabase:
isSubsetOfSet:
isTemporary
isVisible
kCalPreferredDaysToSyncKey
kCalRemindersPreferredDaysToSyncKey
language
lastName
lastObject
lastPathComponent
last_modified
laterDate:
legacyAttachmentContainerWithBaseURL:
legacyCalendarDataContainer
legacyURL
length
loadedAccounts
localRelativePath
localRelativePathForLocalAbsoluteURL:localBaseURL:
localURLForAttachmentWithRelativePath:baseURL:
localizedDescription
localizedStringForKey:value:table:
location
lock
logHandle
longValue
lookaheadIntervalForDaysPerEntry:
makeObjectChangeEntityTypeMap:
managed_id
mapKitHandle
markStoreAsDeleted
masterChange
masterEvent
matchesOneOfMyEmails:
mergeEventsFromLocalStoreIntoStore:inDatabase:
mergeEventsIntoLocalStoreFromStore:inDatabase:
metadataWithData:
metadataWithICSComponent:
method
migrateDataClassProtectionForAttachmentsInLegacyCalendarDataContainer:
migrateUsingCalendarDaemon
migrateWithLegacyCalendarDataContainer:calendarDataContainerProvider:database:
minConsumedClientIdentifier
minConsumedSequenceNumber
minusSet:
minute
modifiedPropertyValues
month
moreResultsAvailable
moveItemAtURL:toURL:error:
mutableCopy
myAddressWithAccountInfo:forEvent:
myStatusNeedsActionForEvent:withAccountInfo:
myself
name
nameAttribute
newDatabaseMigrationContext
nextOccurrenceDateWithCalRecurrences:exceptionDates:initialDate:afterDate:
nextTimeZone
notifyOfEntityDestruction
null
number
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
occurrences
openApplication:withOptions:completion:
optionsWithDictionary:
organizer
others
overrideParticipantRoleConstraint
parameterValueForName:
parentAccount
parentAccountIdentifier
participationChanged
partstat
partstatModified
path
pathExtension
pathForDatabase:
payloadAsFullURL
payloadAsOriginalURL
performCalendarMigration
performCleanup
performMigrationIfNeeded
performReminderMigration
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithWriteLock:
personaID
phoneNumber
pointerValue
postDarwinNotificationNamed:
predicateWithBlock:
predictedLocationOfInterestForEventTitle:eventLocation:calendarIdentifier:timeout:error:
preferences
preferencesForDirectory:
preferencesStoreForPath:
previousTimeZone
priority
privacyPaneHasBeenAcknowledgedVersion
privateCommentChanged
processData:forTask:
processMessage:withDatabase:calStore:accountInfo:handledEventCallback:
processMessages:withDatabase:calStore:accountInfo:handledEventCallback:cancellationToken:
processNotificationWithData:serverURL:syncKey:database:notificationCalendar:store:calendarHomeURL:notificationCalendarURL:contactsProvider:recordIDMap:
properties
propertiesForName:
propertyListWithData:options:format:error:
propertyValueForComparison:propertyKey:
proposedStartDateChanged
provisionedForCalendarsDataClass
pushBatchedUpdatesForCalendarItemsWithUUIDs:database:
raise
range
rangeOfCharacterFromSet:
rangeOfComposedCharacterSequenceAtIndex:
rangeOfString:
rangeOfUnit:inUnit:forDate:
recordIDForExternalIdentifier:
recordIDForUniqueIdentifier:
recurrenceChanged
recurrenceID
recurrenceIDs
recurrence_id
recurrences
redactedDescription
refreshEventWidgets
region
registerReflectionForPreferenceWithNotificationName:
relatedTo
relationshipParameterFromCode:
removeAccount:error:
removeAccount:withDeleteSync:completion:
removeAllObjects
removeCalendarWithUID:
removeCharactersInString:
removeDestructionObserver:
removeItemAtPath:error:
removeItemAtURL:error:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removePreference:notificationName:
removePropertiesForName:
removeStoreForAccount:withChildren:inDatabase:mainDatabase:accountStore:
removeStoreForDeletedAccountWithIdentifier:inDatabase:mainDatabase:accountStore:
removedWrappedAccountIdentifiers
replaceOccurrencesOfString:withString:options:range:
report
reportIntegrityErrors:
resourceSpecifier
respondsToSelector:
retain
retainCount
role
rootElement
rrule
rsvp
saveAccount:verify:withError:
saveAccount:withError:
scheduleagent
scheduleforcesend
schedulestatus
scheme
searchParticipants
searchTerm
second
secondsFromGMTForDate:
seed
self
sequence
setAccountDescription:
setAccountHandles:
setAccountIdentifier:
setAccountProperty:forKey:
setAcknowledged:
setAction:
setActive:
setAddress:
setAllDay:
setAlternateTimeProposal:
setAttach:
setAttendee:
setAttributes:ofItemAtPath:error:
setAuthenticated:
setAuthenticationType:
setAuthenticationTypeNone
setAuthenticationTypeParent
setAuthorEmailAddresses:
setAuthors:
setBooleanPreference:value:notificationName:
setByday:
setBymonth:
setBymonthday:
setBysetpos:
setByweekno:
setByyearday:
setCalendar:
setCalendarDelegateIdentifier:
setCalendarHolidayIdentifier:
setClientIdentifier:
setCn:
setComment:
setCompleted:
setComponents:
setComponents:options:
setConsumedSequenceNumber:
setContainerDisplayName:
setCount:
setCreated:
setCredential:
setCutype:
setData:
setDataContainerProvider:
setDaysOfTheMonth:
setDaysOfTheWeek:
setDaysOfTheYear:
setDefaultProdid:
setDelegate:
setDestructionObservers:
setDeviceLockObserver:
setDict:
setDirectoryURL:
setDocument:
setDtend:
setDtstamp:
setDtstart:
setDuration:
setEmail:
setEnabled:forDataclass:
setEnabledForCalendarsDataClass:
setEndDate:
setEvent:
setEventEndDate:
setEventStartDate:
setEventTimeZone:
setEvents:
setExdate:
setExpirationDate:
setExternalIdentifier:forRecordID:
setFeature:
setFilename:
setFmtype:
setFrequency:
setHour:
setIMIPImported:
setIdentifier:
setIgnoreRateLimiting:
setInfo:
setIntegerPreference:value:notificationName:
setInterestedDatabasePaths:forContext:
setInterestedDatabases:forContext:
setInterval:
setLanguage:
setLast_modified:
setLatitude:
setLocalStoreEnabled:inDatabase:
setLocation:
setLock:
setLongitude:
setManaged_id:
setMapKitHandle:
setMinConsumedSequenceNumber:
setMinute:
setMonth:
setMonthsOfTheYear:
setNamedLocation:
setNextTimeZone:
setObject:forKey:
setObject:forKeyedSubscript:
setOptions:
setOrganizer:
setParameterValue:forName:
setParentAccount:
setParentAccountIdentifier:
setPartstat:
setPartstatModified:
setPassword:
setPercentComplete:
setPreviousTimeZone:
setPrimaryRecipients:
setPriority:
setProperties:forName:
setPropertyValue:type:forName:
setProviderDataTypes:
setProvisioned:forDataclass:
setProvisionedForCalendarsDataClass:
setRecipientEmailAddresses:
setRecipientNames:
setRecurrence_id:
setRegion:
setRelatedTo:
setResourceValue:forKey:error:
setRole:
setRouting:
setRrule:
setRsvp:
setScheduleChanges:
setScheduleagent:
setScheduleforcesend:
setSearchAttendees:
setSearchLocations:
setSearchParticipants:
setSearchTerm:
setSecond:
setSecondMinConsumedSequenceNumber:
setSequence:
setSetPositions:
setShouldMatchLocationsOnlyForEventSearch:
setShouldPinMonthDays:
setSize:
setStartDate:
setStateChangedCallback:
setStatus:
setSummary:
setSupportsAuthentication:
setSupportsNavigation:
setTimeZone:
setTitle:
setTransp:
setTrigger:
setURL:forResourceWithUUID:withDatabase:notificationCalendar:notificationCalendarURL:recordIDMap:
setUniqueIdentifier:forRecordID:
setUntil:
setUpCalStoreForParentAccount:withChildren:inDatabase:
setUsername:
setValue:forCustomKey:
setValue:forKey:
setValue:type:
setValueForPreference:value:notificationName:
setValues:valueType:
setVisible:
setWeekStart:
setWeeksOfTheYear:
setWithArray:
setWithCapacity:
setWithObject:
setWkst:
setX_apple_activity:
setX_apple_appLinkData:
setX_apple_autoarchived:
setX_apple_calendar_color:
setX_apple_contactIdentifiers:
setX_apple_default_alarm:
setX_apple_end_location:
setX_apple_etag:
setX_apple_filename:
setX_apple_language:
setX_apple_needs_reply:
setX_apple_proximity:
setX_apple_region:
setX_apple_scheduletag:
setX_apple_serverFilename:
setX_apple_sort_order:
setX_apple_special_day:
setX_apple_structuredData:
setX_apple_suggestionInfoChangedFields:
setX_apple_suggestionInfoChangesAcknowledged:
setX_apple_suggestionInfoOpaqueKey:
setX_apple_suggestionInfoTimestamp:
setX_apple_suggestionInfoUniqueKey:
setX_apple_telephone:
setX_apple_travel_advisory_behavior:
setX_apple_travel_duration:
setX_apple_travel_start:
setX_calendarserver_access:
setX_calendarserver_private_comment:
setX_wr_alarmuid:
setX_wr_caldesc:
setX_wr_calname:
setYear:
set_LastConfirmedSplashScreenVersionViewed:
set_defaultCalendarChangedReason:
set_defaultCalendarChangedTimestamp:
set_defaultCalendarDatabaseID:
set_defaultCalendarID:
set_defaultCalendarName:
set_defaultCalendarStoreUID:
set_enableTravelAdvisoriesForAutomaticBehavior:
set_kCalRemindersPreferredDaysToSyncKey:
set_overrideParticipantRoleConstraint:
set_privacyPaneHasBeenAcknowledgedVersion:
set_sqlProfileLoggingEnabled:
set_suggestEventLocations:
shared
sharedInstance
sharedManager
sharedReadOnly
shouldMatchLocationsOnlyForEventSearch
shouldPerformMigration
shouldSkipSavingUnrecognizedParametersForProperty:inComponent:
simulateCrashWithMessage:
size
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
sortedArrayUsingSelector:
sourceCalendarDirectory
sqlProfileLoggingEnabled
start
startAccessingSecurityScopedResource
startDate
startOfDayForDate:
startSearching
startTimeChanged
state
stateChangedCallback
stateChangedNotificationName
status
stop
stopAccessingSecurityScopedResource
stopSearching
storeFilteringAllChangesInBackingAccountStore:
string
stringAddingMailto
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByRemovingPercentEscapes
stringByReplacingCharactersInRange:withString:
stringByReplacingOccurrencesOfString:withString:
stringRemovingMailto
stringRemovingTel
stringRepresentation
stringValue
stringWithFormat:
stringWithUTF8String:
stringWithValidatedFormat:validFormatSpecifiers:error:
strongToWeakObjectsMapTable
substringFromIndex:
substringToIndex:
substringWithRange:
suggestEventLocations
suggestedLocationsTestMode
summaryChanged
superclass
supportedCalendarComponentSet
supportsSecureCoding
systemDateForDate:options:
systemTimeZone
systemTimeZoneForDate:
temporary
timeInterval
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeZone
timeZoneForSecondsFromGMT:
timeZoneWithAbbreviation:
timeZoneWithName:
title
topLevelAccountsWithAccountTypeIdentifier:error:
transp
typeAttribute
tzid
unarchiveDictionaryFromData:error:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unionSet:
unlock
unrecognizedComponentName
unrecognizedProperties
unsignedIntegerValue
until
updateHTML:withEventNotes:
urlChanged
username
usesDataSeparatedContainer
validate
value
valueAndParameterClasses
valueWithPointer:
values
visibleCalendarCountWithOptions:
visibleCalendarsWithOptions:
waitForRemindersOnly
willApplyTimeZoneChanges1
wkst
writeLockForDatabasePath:
writeToURL:error:
writeToURL:options:error:
x_apple_activity
x_apple_autoarchived
x_apple_contactIdentifiers
x_apple_default_alarm
x_apple_end_location
x_apple_etag
x_apple_ews_changekey
x_apple_ews_itemid
x_apple_ews_permission
x_apple_proximity
x_apple_scheduletag
x_apple_serverFilename
x_apple_sort_order
x_apple_special_day
x_apple_structuredData
x_apple_structured_location
x_apple_suggestionInfoChangedFields
x_apple_suggestionInfoChangesAcknowledged
x_apple_travel_advisory_behavior
x_apple_travel_duration
x_apple_travel_start
x_calendarserver_access
x_calendarserver_attendee_comment
x_calendarserver_attendee_ref
x_calendarserver_private_comment
x_wr_alarmuid
year
zone
@24@0:8@16
@16@0:8
i16@0:8
v20@0:8i16
v24@0:8@16
v16@0:8
@"NSURL"
@"<CalCalendarDataContainerProvider>"
@"CDBPreferences"
@"NSTimeZone"
@"NSMutableDictionary"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
@32@0:8@16@24
@"<CalMigrationReadOnlyAccount>"24@0:8@"NSString"16
@"NSArray"32@0:8@"NSString"16^@24
@"NSArray"32@0:8@"<CalMigrationReadOnlyAccount>"16@"NSString"24
@40@0:8@16@24^@32
B32@0:8@16^@24
@"<CalMigrationAccount>"24@0:8@"NSString"16
@"NSArray"32@0:8@"<CalMigrationAccount>"16@"NSString"24
@"<CalMigrationAccount>"32@0:8@"NSString"16^@24
@"<CalMigrationAccount>"40@0:8@"<CalMigrationAccount>"16@"NSString"24^@32
B32@0:8@"<CalMigrationAccount>"16^@24
@"<CalMigrationAccountStore>"
@"<CalChangeFilteringMigrationAccountStoreDelegate>"
@"NSMutableSet"
@24@0:8@"NSString"16
v32@0:8@16@24
v20@0:8B16
v32@0:8@16@"NSString"24
v24@0:8@"NSString"16
@"NSString"
@"<CalMigrationAccount>"
@40@0:8@16@24@32
q24@0:8@16
@"NSData"
@"CalDAVScheduleChangesProperty"
@"ICSDocument"
@"ICSEvent"
B24@0:8@"<CalMigrationAccount>"16
B24@0:8@"NSString"16
v40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
v48@0:8r^v16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40
v32@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24
@48@0:8@16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40
@56@0:8@16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40^@48
@24@0:8^v16
@40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
@"NSMutableArray"
@40@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16^{CalFilter=}24@32
v24@0:8^{__CFArray=}16
v24@0:8^{CalParticipantIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16
^{CalParticipantIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16@0:8
^{CalLocationIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16@0:8
v24@0:8^{CalLocationIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16
v24@0:8^{CalEventIdsSearchContext=^{__CFArray}^{__CFSet}^{__CFSet}^B^B^{CalDatabase}}16
^{CalEventIdsSearchContext=^{__CFArray}^{__CFSet}^{__CFSet}^B^B^{CalDatabase}}16@0:8
v24@0:8^{CalEventOccurrenceSearchContext=^{__CFSet}^{__CFArray}^{__CFArray}^{__CFArray}^B^BddidI^{CalEventOccurrenceCache}^?^viB^{__CFString}dBd}16
^{CalEventOccurrenceSearchContext=^{__CFSet}^{__CFArray}^{__CFArray}^{__CFArray}^B^BddidI^{CalEventOccurrenceCache}^?^viB^{__CFString}dBd}16@0:8
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}
^{CalFilter=}
^{__CFString=}
@"<CalSearchDataSink>"
^{__CFArray=}
^{__CFSet=}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
B40@0:8@16@24@32
d24@0:8@16
v24@0:8@?16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@20@0:8B16
q16@0:8
v24@0:8q16
@"CalPreferences"
@"ACAccount"
v24@0:8^v16
B44@0:8i16^v20^v28^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}36
B40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
B32@0:8^v16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24
B24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
r^v40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
^v32@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24
B32@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24
v28@0:8B16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}20
v40@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@32
v40@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
v56@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40@48
v48@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@40
@"NSData"24@0:8@"NSDictionary"16
@"NSDictionary"24@0:8@"NSData"16
B32@0:8@16@24
v28@0:8^v16B24
@60@0:8^v16@24@32@40q48B56
@56@0:8@16@24@32@40@48
@48@0:8@16@24@32@40
@36@0:8^v16^v24B32
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8i16i20
@28@0:8i16i20i24
@"NSDictionary"
v96@0:8@16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40^v48^v56@64@72@80@88
i24@0:8@16
^v28@0:8i16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}20
v96@0:8@16@24@32@40^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}48^v56@64^v72@80@88
v112@0:8@16@24@32@40@48^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}56^v64@72^v80@88@96@104
^v48@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24^v32@40
^v68@0:8@16I24^v28@36^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}44^v52@60
^v56@0:8@16^v24^v32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40@48
^v48@0:8@16^v24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@40
v64@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32^v40@48@56
@24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
@28@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16i24
@32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24
@36@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16i24@28
@20@0:8i16
i20@0:8i16
@40@0:8@16^?24^v32
@56@0:8@16@24@32^?40^v48
@"NSDate"
v24@0:8^{CalRelation=}16
@"NSObject<OS_dispatch_queue>"
@24@0:8q16
@96@0:8@16@24q32q40q48q56q64q72@80@88
@112@0:8@16@24@32B40B44q48q56q64q72q80q88@96@104
v40@0:8@16Q24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
v24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
@32@0:8Q16Q24
@"CalDatabaseInMemoryChangeTracking"
@"NSHashTable"
v32@0:8^{__CFArray=}16I24B28
@60@0:8Q16Q24Q32^Q40i48^B52
@52@0:8@16Q24^@32I40^B44
@48@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24^@32^B40
[512{?="timestamp"Q"rowID"I"entityType"b8"clientID"b23"flags"b1}]
@28@0:8i16q20
@"NSCountedSet"
@"<CalCalendarDatabaseIntegrityErrorReportingDelegate>"
@?16@0:8
@"CalDeviceLockObserver"
v64@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24^v32@40@?48@56
v56@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24^v32@40@?48
B64@0:8@16^v24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40@48@56
@40@0:8^v16@24@32
UUID
externalID
owner
snoozedAlarmsSet
structuredLocation
absoluteDate
acknowledgedDate
type
externalData
isDefaultAlarm
proximity
relativeOffset
originalAlarm
calendarOwner
calendarItemOwner
emailAddress
urlWrapper
flags
participantRole
participantType
lastModifiedParticipationStatus
pendingStatusRaw
statusRaw
isCurrentUser
URLString
securityScopedURLWrapperForPendingFileCopy
XPropertiesData
externalModificationTag
fileFormat
fileNameRaw
localRelativePath
fileSize
shouldSetQuarantineAttributesOnCopiedFile
securityScopedLocalURLWrapper
securityScopedLocalURLForArchivedDataWrapper
allAlarms
allowedEntities
colorStringRaw
digest
displayOrder
externalIDTag
externalRepresentation
invitationStatus
colorDisplayOnly
isPublished
lastSyncStartDate
lastSyncEndDate
notes
ownerIdentityAddressString
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityFirstName
ownerIdentityId
ownerIdentityLastName
ownerIdentityPhoneNumber
publishURLString
pushKey
refreshDate
refreshInterval
selfIdentityAddressString
selfIdentityDisplayName
selfIdentityEmail
selfIdentityFirstName
selfIdentityLastName
selfIdentityPhoneNumber
sharedOwnerURLString
sharedOwnerName
sharees
notifications
pubcalAccountID
sharingInvitationResponse
sharingStatus
source
subcalAccountID
subcalURL
subscriptionID
symbolicColorName
syncError
syncToken
unlocalizedTitle
maxAttendees
lastSyncTitle
locale
allAlarmsSet
recurrenceRulesSet
attendeesRaw
attachmentsSet
detachedItems
ekExceptionDates
structuredLocationWithoutPrediction
clientLocation
organizer
selfAttendee
originalItem
calendar
travelStartLocation
endLocation
actionString
isAllDay
calendarScale
creationDate
defaultAlarmWasDeleted
endTimeZoneName
hasAttendees
lastModifiedDate
modifiedProperties
priority
selfParticipantStatusRaw
sequenceNumber
sharedItemCreatedByAddressString
sharedItemCreatedByDisplayName
sharedItemCreatedByFirstName
sharedItemCreatedByLastName
sharedItemCreatedDate
sharedItemCreatedTimeZoneName
sharedItemModifiedByAddressString
sharedItemModifiedByDisplayName
sharedItemModifiedByFirstName
sharedItemModifiedByLastName
sharedItemModifiedDate
sharedItemModifiedTimeZoneName
startTimeZoneName
uniqueID
hasNotes
startDateRaw
structuredData
phantomMaster
hasRecurrenceRules
localStructuredData
participationStatusModifiedDate
externalScheduleID
suppressNotificationForChanges
urlString
feature
info
language
region
storeOwner
errorType
errorCode
userInfoData
birthdayID
endDateRaw
travelTime
status
locationPredictionState
invitationChangedProperties
availability
privacyLevel
travelAdvisoryBehavior
responseComment
externalTrackingStatus
canForward
disallowProposeNewTime
junkStatus
originalStartDate
conferenceURLString
birthdayContactIdentifier
birthdayContactName
recurrenceSet
suggestionInfo
firedTTL
actions
proposedStartDate
conferenceURLDetectedString
specialDayString
externalFolderID
date
title
address
latitude
longitude
contactLabel
mapKitHandle
routing
referenceFrame
radius
derivedFrom
alarmOwner
summary
shareeStatus
hostURL
inReplyTo
alerted
inviteReplyCalendar
resourceChanges
shareeDisplayName
shareeURLString
shareeFirstName
shareeLastName
scheduleAgent
comment
displayNameRaw
firstName
inviterNameString
lastName
phoneNumber
proposedStartDateStatus
scheduleStatus
scheduleForceSend
frequencyRaw
interval
firstDayOfTheWeekRaw
endDate
count
specifier
cachedEndDate
cachedEndDateTimeZone
calendarItem
changeType
changedByAddress
changedByDisplayName
changedByFirstName
changedByLastName
changedProperties
createCount
deleteCount
updateCount
deletedTitle
notification
publicStatus
timestamp
displayName
shareeAccessLevelRaw
shareeStatusRaw
shareeMuteRemoval
sourceType
preferredEventPrivateValueRaw
strictestEventPrivateValueRaw
defaultAlarmOffset
defaultAllDayAlarmOffset
cachedExternalInfoData
constraintsName
creatorBundleID
creatorCodeSigningIdentity
onlyCreatorCanModify
flags2
showsNotifications
disabled
delegatedAccountOwnerStoreID
calendars
ownerName
managedConfigurationAccountAccess
opaqueKey
uniqueKey
changedFields
changesAcknowledged
timestampAsDate
extractionGroupIdentifier
X-Apple-ABUID
X-Apple-Radius
X-APPLE-ABUID
X-APPLE-RADIUS
X-APPLE-REFERENCEFRAME
v8@?0
_CalDatabaseChangedNotification
_CalDatabaseStoreSyncStatusChangedNotification
kCalDatabaseChangedExternallyNotification
_CalDatabaseSpotlightUpdatedNotification
CalSyncClientBeginningMultiSave
CalSyncClientFinishedMultiSave
CalDBSpotLightError
LastUnfinishedSpotlightReindex
LastABCReport
kCalDBLastSpotLightIndexVersion
BOOL __CalDatabaseCommitTransaction(CalDatabaseRef, const char *)
CalDatabase.m
Tried to commit a transaction (%s) when no transaction was open (%s)
BOOL __CalDatabaseRollbackTransaction(CalDatabaseRef, const char *)
Tried to roll back a transaction (%s) when no transaction was open (%s)
RestoreGeneration
delegate must not be nil
Attempting to register a restore generation delegate when there is already a registered delegate
CalDatabaseAsyncNotificationQueue
com.apple.calendar.database.refreshWidgetQueue
com.apple.mobilecal
CalLastCalendarChanges
CalLastEventRecurrenceChanges
CalLastEventAlarmChanges
CalLastCategoryChanges
CalLastAuxDatabaseChanges
SELECT ROWID FROM Store WHERE disabled = 1;
com.apple.calendar.CalendarDatabase
spotlightQ
com.apple.ManagedConfiguration.profileListChanged
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabase.m:5061
NULL database given to [%s]
CalDatabaseFlushStatementCache
PrefMigrationSeed
DefaultCalendarUID
DefaultCalendarDatabaseID
DefaultCalendarStoreUID
DefaultCalendarName
migration
DefaultTaskCalendarUID
Could not find the size of the database in bytes.  Received a negative size: [%lld]
Could not find the true size of the database in bytes.  Received a size greater than [%llu]: [%lld]
 WHERE %@
VACUUM
[<CalDatabaseInitializationConfiguration:%p> options=%i, directoryURL=%@, dataContainerProvider=%@ preferences=%@]
(not null)
(null)
BOOL _CalDatabaseBeginTransactionOfType(CalDatabaseRef, CPSqliteTransactionType, const char *)
Tried to begin a transaction of type %i (%s) when there's already an open transaction of type %i (%s)
v24@?0@"BSProcessHandle"8@"NSError"16
Error launching application with id [%@]: Error code %ld
CSSearchableIndex
events
CSSearchableItem
v24@?0@"NSString"8@"CSSearchableItemAttributeSet"16
%@.%f
globalSpotlightQ
com.apple.calendardatabase.spotlight.lastUpdate
v16@?0@"NSError"8
CSSearchableItemAttributeSet
com.apple.calendar.spotlight.identifier
com.apple.calendar.ics
com.apple.ical.ics
CSPerson
CNContactEmailAddressesKey
CNContactPhoneNumbersKey
CSCustomAttributeKey
com_apple_mobilecal_recipientParticipationStatuses
%@.%@.%@.%@
%@.%@
function
postchangenote
databasePath
notificationwasposted
com.apple.calaccessd.xpc
v16@?0@"NSObject<OS_xpc_object>"8
, %d
CalOutOfProcessMigrator
Class getCalOutOfProcessMigratorClass(void)_block_invoke
Unable to find class %s
void *CalendarMigrationLibrary(void)
CalDatabase
:memory:
com.apple.calendar.migrator
auxiliaryDB
DROP TABLE Task;
DROP TABLE TaskChanges;
... Calendar database migration complete (%g s)
SELECT ROWID, flags, external_id from Calendar WHERE store_id IN (SELECT ROWID from Store where Type = %d)
UPDATE Calendar SET external_id = ? WHERE rowid = ?
UPDATE CalendarItem SET external_id = ? WHERE rowid = ?
UPDATE EventAction SET external_id = ? WHERE rowid = ?
UPDATE Notification SET external_id = ?, host_url = ? WHERE rowid = ?
SELECT rowid, calendar_id, external_id from CalendarItem where calendar_id = %d
SELECT rowid, event_id, external_id from EventAction where event_id = %d
SELECT rowid, calendar_id, external_id, host_url from Notification where calendar_id = %d
DefaultCalendarID
SELECT
read Calendar data
INSERT
UPDATE
modified Calendar data
DELETE
deleted Calendar data
com.apple.calendar
Enabling
Disabling
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabase.m:3037
CalDatabaseErrorDomain
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabase.m:3301
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabase.m:3303
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabase.m:3362
ChangeTypeAdded
ChangeTypeUpdated
ChangeTypeDeleted
Removing orphan %@
SELECT ROWID, orig_item_id, orig_date FROM CalendarItem WHERE orig_date IN (%@)
An attempt to add a detached calendar item with an original item ID of [%d] and an original date of [%@] was made, but this detached item already exists in the database.  Removing existing detached item with row ID: [%d]
com.apple.calendardatabase.spotlight.update
Unexpected entity type: %i row ID: %i
changes
onlysyncstatuschanged
postnotificationsynchronously
pragma page_count;
pragma freelist_count;
pragma incremental_vacuum(%d);
Asia/Shanghai
Asia/Kashgar
Asia/Urumqi
com.apple.calendar.database.resetSpotlightQueue
void _CalDatabaseAsynchronouslyReindexSpotlight(void)
com.apple.calendardatabase.spotlight.reset
v16@?0@"NSString"8
v20@?0i8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}12
Calendar migration
EventKit
data_separation
DataSeparationMigrationCompleted
Database
Spotlight
IndexFailure
CalDefaultReminderKitProvider
Class getCalDefaultReminderKitProviderClass(void)_block_invoke
CalDefaultReminderMigrationDefaultsProvider
Class getCalDefaultReminderMigrationDefaultsProviderClass(void)_block_invoke
CalCalendarDatabaseReminderMigrator
Class getCalCalendarDatabaseReminderMigratorClass(void)_block_invoke
/var/mobile/Library/Calendar/Notifications.db
/var/mobile/Library/Calendar/Notifications.db-wal
/var/mobile/Library/Calendar/Notifications.db-shm
SQLCorruption
com.apple.calendardatabase.sqlite_error_code
UNKNOWN
SQLITE_OK
SQLITE_ERROR
SQLITE_INTERNAL
SQLITE_PERM
SQLITE_ABORT
SQLITE_BUSY
SQLITE_LOCKED
SQLITE_NOMEM
SQLITE_READONLY
SQLITE_INTERRUPT
SQLITE_IOERR
SQLITE_CORRUPT
SQLITE_NOTFOUND
SQLITE_FULL
SQLITE_CANTOPEN
SQLITE_PROTOCOL
SQLITE_EMPTY
SQLITE_SCHEMA
SQLITE_TOOBIG
SQLITE_CONSTRAINT
SQLITE_MISMATCH
SQLITE_MISUSE
SQLITE_NOLFS
SQLITE_AUTH
SQLITE_FORMAT
SQLITE_RANGE
SQLITE_NOTADB
SQLITE_NOTICE
SQLITE_WARNING
SQLITE_ROW
SQLITE_DONE
v32@?0@"NSNumber"8@"CalAttachmentFileCleanupContext"16^B24
kCalScheduledTaskCacheChangedNotification
CREATE TABLE ScheduledTaskCache (day REAL, date_for_sorting REAL, completed INTEGER, task_id INTEGER, count INTEGER, PRIMARY KEY (day, task_id));
CREATE TRIGGER update_task_cache_count_after_insert AFTER INSERT ON ScheduledTaskCache
BEGIN
    REPLACE INTO ScheduledTaskCache VALUES (NEW.day, NULL, NULL, -2, 1 + IFNULL((SELECT count FROM ScheduledTaskCache WHERE day = NEW.day AND task_id = -2), 0));
END;
CREATE TRIGGER update_task_cache_count_after_update AFTER UPDATE OF day ON ScheduledTaskCache
BEGIN
    UPDATE ScheduledTaskCache SET count = count - 1 WHERE day = OLD.day AND task_id = -2;
    REPLACE INTO ScheduledTaskCache VALUES (NEW.day, NULL, NULL, -2, IFNULL((SELECT count FROM ScheduledTaskCache WHERE day = NEW.day AND task_id = -2), 0));
    DELETE FROM ScheduledTaskCache WHERE day = OLD.day AND count = 0;
END;
CREATE TRIGGER update_task_cache_days_after_delete AFTER DELETE ON ScheduledTaskCache
BEGIN
    UPDATE ScheduledTaskCache SET count = count - 1 WHERE day = OLD.day AND task_id = -2;
    DELETE FROM ScheduledTaskCache WHERE day = OLD.day AND count = 0;
END;
CREATE INDEX ScheduledTaskCacheDayTaskId on ScheduledTaskCache(day);
CREATE INDEX ScheduledTaskCacheTaskId on ScheduledTaskCache(task_id);
SELECT day, count FROM ScheduledTaskCache WHERE task_id = -2 ORDER BY day
SELECT task_id FROM ScheduledTaskCache WHERE day = ? AND task_id != -2 ORDER BY day ASC, completed DESC, date_for_sorting ASC
SELECT DISTINCT task_id FROM ScheduledTaskCache WHERE day >= ? AND day <= ? AND task_id != -2
ForceRebuildScheduledTaskCache
EventKitSTC: Unable to start transaction (error %d). Aborting rebuild.
TaskCacheTimeZone
25534103: Beginning CalScheduledTaskCacheTrimAndExtendAndUpdateOverdue
EventKitSTC: Unable to start transaction (error %d). Aborting trim/extend.
TaskCacheLastSavedDay
25534103: ScheduledTaskCache last saved %@
25534103: today is %@, comparisonResult is %ld
DELETE FROM ScheduledTaskCache WHERE task_id = ?;
CalScheduledTaskCache
EventKitSTC: Unable to start transaction (error %d). Aborting time zone update.
SELECT day, date_for_sorting, task_id FROM ScheduledTaskCache WHERE task_id != -2
UPDATE ScheduledTaskCache SET day = ?, date_for_sorting = ? WHERE task_id = ?;
dateForSorting
taskId
DELETE FROM ScheduledTaskCache;
25534103: Inserting item due at %@ at %@
EventKitSTC: *** ERROR *** No transaction is in effect! This may end poorly.
INSERT INTO ScheduledTaskCache (day, date_for_sorting, completed, task_id, count) VALUES (?, ?, ?, ?, 1);
DELETE FROM ScheduledTaskCache WHERE day < ?
25534103: Updating overdue with today %f
UPDATE ScheduledTaskCache SET day = ?, date_for_sorting = ? WHERE day < ? AND completed = 0
25534103: Updating last saved to %@
v32@?0@"NSString"8@"NSMutableSet"16^B24
Parent
_CalChangeFilterMigrationAccount_setAuthenticationType
None
_CalChangeFilterMigrationAccount_accountDescription
_CalChangeFilterMigrationAccount_visible
_CalChangeFilterMigrationAccount_enabledForCalendarsDataClass
_CalChangeFilterMigrationAccount_provisionedForCalendarsDataClass
_CalChangeFilterMigrationAccount_authenticated
_CalChangeFilterMigrationAccount_username
_CalChangeFilterMigrationAccount_password
Recurrence
UPDATE Recurrence SET end_date = NULL WHERE end_date = 0
UPDATE Recurrence SET cached_end_date = NULL WHERE cached_end_date = 0
DELETE FROM Recurrence WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
B16@?0^v8
UUID = '%@'
 WHERE external_id = ?
UPDATE Recurrence SET external_id = NULL, external_mod_tag = NULL, external_id_tag = NULL, external_rep = NULL WHERE owner_id IN (SELECT CalendarItem.ROWID FROM CalendarItem JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = %d);
frequency
week_start
cached_end_date
cached_end_date_tz
end_date
specifier_parsed
by_day_days
by_month_months
by_month_day_days
by_week_weeks
by_year_day_days
by_set_pos
by_month
owner_id
external_id
external_mod_tag
external_id_tag
external_rep
store_id
event_id_tomb
calendar_id
end_date_tomb
record_id
common_entity_functionality_handler
RecurrenceEventIdIndex
event_id
RecurrenceEndCountIndex
end_date, count
RecurrenceExternalId
RecurrenceOwnerIdIndex
RecurrenceOwnerTypeIndex
owner_type
RecurrenceUUID
record
sequence_number
SELECT Recurrence.* FROM Recurrence JOIN CalendarItem ON owner_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID AND store_id = ?;
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalRecurrence.m:1044
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalRecurrence.m:1046
_float
Recurrence without owner
,%s%d%s
%s%d%s
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
calendar_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
%@: iTIP Message contained no events
%@: component not supported in iTIP message: %@
%@: more than one event in iTIP message: %lu
%@ <%p> { %@ %@ %ld %@ "%@"}
Type
ChangeID
ExternalID
UniqueIdentifier
SignificantAttributes
OldCalendarID
OldExternalID
OwningEventID
EndDate
ExternalModTag
CalendarID
SequenceNumber
WHERE UUID = ?
v16@?0^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}8
WHERE UUID IN (
'%@')
'%@',
 AND calendar_id IN (
'%i')
'%i',
CalDatabaseCopyCalendarItemsWithCalendarFilter
CalCalendarItem.m
entityType == CalEventEntity || entityType == CalTaskEntity
WHERE entity_type = ?
 AND %@
NSArray<NSString *> *CalDatabaseCopyCalendarItemUUIDs(CalDatabaseRef, CalEntityType)
Invalid parameter not satisfying: %@
entityType == CalEventEntity || entityType == CalTaskEntity || entityType == CalUndefinedEntity
SELECT UUID FROM CalendarItem
 WHERE entity_type = ?
CalDatabaseCopyCalendarItemsWithStoreID
JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ? AND entity_type = ?
WHERE calendar_id = ?
WHERE calendar_id = ? AND entity_type = ?
SELECT ROWID FROM CalendarItem WHERE calendar_id = ? LIMIT 1
SELECT ROWID FROM CalendarItem WHERE entity_type = ? AND calendar_id = ? LIMIT 1
WHERE 1=1
 AND entity_type = ?
JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?
 WHERE
 entity_type = ? AND
 %@ = ?
 AND calendar_id = ?
 AND calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = ?)
 LIMIT 1
unique_identifier
 WHERE unique_identifier = ?;
%@Changes
DROP INDEX IF EXISTS %@;
CREATE %@INDEX %@ on %@(%@)%@%@;
UNIQUE 
 WHERE 
DROP TRIGGER IF EXISTS %@;
AFTER DELETE
CREATE TRIGGER %@ %@ ON %@
BEGIN
END;
ROWID
NULL
INSERT INTO %@ (%@) SELECT %@ FROM %@_;
firstVersion
lastVersion
oldName
defaultText
, %@
SELECT %@ FROM %@_;
INSERT INTO %@ (%@) VALUES(%@);
ALTER TABLE %@ RENAME TO %@_;
DROP TABLE IF EXISTS %@_;
Info.plist
version
LocalSubscribedCalendarAccounts
preferences
defaultCalendarID
defaultCalendarStoreUID
defaultCalendarName
Calendar.sqlitedb
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabaseBackup.m:224
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabaseBackup.m:241
main
-wal
-shm
B24@?0@"NSURL"8@"NSError"16
v32@?0@"NSString"8#16^B24
StagedBackup.XXXXXXXX
__CPRecordSequenceNumber
v32@?0@"NSString"8@16^B24
restore
ATTACH DATABASE ? AS aux
WHERE ROWID = ?
WHERE record = ?
WHERE store_id = ?
WHERE calendar_id IN (SELECT ROWID FROM aux.Calendar)
WHERE calendaritem_owner_id IN (SELECT ROWID FROM aux.CalendarItem) OR calendar_owner_id IN (SELECT ROWID FROM aux.Calendar)
WHERE item_owner_id IN (SELECT ROWID FROM aux.CalendarItem) OR client_loc_owner_id IN (SELECT ROWID FROM aux.CalendarItem) OR start_loc_owner_id IN (SELECT ROWID FROM aux.CalendarItem) OR end_loc_owner_id IN (SELECT ROWID FROM aux.CalendarItem) OR alarm_owner_id IN (SELECT ROWID FROM aux.Alarm)
WHERE owner_id IN (SELECT ROWID FROM aux.CalendarItem)
WHERE store_owner_id = ? OR calendar_owner_id IN (SELECT ROWID FROM aux.Calendar) OR calendaritem_owner_id IN (SELECT ROWID FROM aux.CalendarItem)
WHERE event_id IN (SELECT ROWID FROM aux.CalendarItem)
WHERE file_id IN (SELECT ROWID FROM aux.AttachmentFile)
WHERE ROWID IN (SELECT category_id FROM aux.CategoryLink)
WHERE owner_id IN (SELECT ROWID FROM aux.Calendar)
WHERE calendar_id IN (SELECT ROWID FROM aux.Calendar) OR invite_reply_calendar_id IN (SELECT ROWID FROM aux.Calendar)
WHERE notification_id IN (SELECT ROWID FROM aux.Notification)
INSERT OR REPLACE INTO aux._SqliteDatabaseProperties SELECT * FROM _SqliteDatabaseProperties WHERE key IN ("CalLastCategoryChanges", "CalLastCalendarChanges", "CalLastEventRecurrenceChanges", "CalLastEventAlarmChanges", "__CPRecordSequenceNumber")
DETACH DATABASE aux
INSERT INTO AuxDatabase (path, persona_id) VALUES (?, ?)
INSERT OR REPLACE INTO AuxDatabaseAccount (account_id, database_id) VALUES (?, ?)
DELETE FROM Store WHERE ROWID = ?
INSERT INTO aux.%s (%@) SELECT %@ FROM %s %@
ROWID, record, type
, sequence_number
, %s
INSERT INTO aux.%sChanges (%@) SELECT %@ FROM %sChanges %@
v32@?0@"NSString"8@"CDBAttachmentInfo"16^B24
EKErrorCertificateSerializedSecTrust
ClearErrorForChangesToKeys
attachments
Error
DELETE FROM Error WHERE calendaritem_owner_id NOT IN (SELECT ROWID FROM CalendarItem) AND calendar_owner_id NOT IN (SELECT ROWID FROM Calendar) AND store_owner_id NOT IN (SELECT ROWID FROM Store);
store_owner_id
calendar_owner_id
calendaritem_owner_id
error_type
error_code
user_info
store_owner
calendar_owner
calendaritem_owner
common_entitiy_functionality_handler
SELECT MIN(calendaritem_owner_id), store_id FROM Error JOIN calendaritem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE calendaritem_owner_id > 0 GROUP BY store_id
v32@?0@"NSNumber"8@"NSNumber"16^B24
[%@], _storeAttachmentContainer: [%@], _deleteEntireContainer: [%@], _attachmentUUIDsToDelete: [%@]
%Y%m%d
CFStringRef _EKCreateMSUIDStringForEvent(CalEventRef, CalEventRef)
EKMSUID.m
You must set a parent event's unique id before constructing one for a detached event
Event has no original start date?
%@%@%@
<!ExceptionDate!>
NSString *_EKMSUUIDStringForDetachedEvent(NSString *__strong, NSDate *__strong, NSTimeZone *__strong, BOOL)
%%0.%ld
CalToManyRelationHasObjects
CalToManyRelation.m
relation->_loadedObjects != nil
CalToManyRelation
<CalToManyRelation: %p> loaded: %@; added: %@; deleted %@
_EnsureLoaded
inverseRelationInfo->realIDColumn != -1
WHERE %s = ? AND entity_type = ? AND (%@)
WHERE %s = ? AND (%@)
WHERE %s = ? AND entity_type = ?
WHERE %s = ?
%s inverse relation is NULL!
void _EnsureLoaded(CalToManyRelationRef)
%s inverse relation for %s (%s) not a relation!
Property %d not found for class %s!
%s: property is not a custom property!
B24@?0@8@"NSDictionary"16
com.apple.calendar.database
CalendarDatabase
WidgetReload
iCalendarConversion
SQLProfile
CalendarDatabasePerf
ResourceChange
notification_id
calendar_item_id
identity_id
change_type
changed_properties
create_count
update_count
delete_count
deleted_summary
deleted_start_date
public_status
calendar_item
changed_by_display_name
changed_by_address
changed_by_first_name
changed_by_last_name
ResourceChangeNotificationID
ResourceChangeCalendarID
ResourceChangeCalendarItemID
ResourceChangeIdentityID
delete_notification_resource_changes
DELETE FROM ResourceChange WHERE notification_id NOT IN (SELECT ROWID FROM Notification WHERE entity_type = 17);
delete_notification_calendar
DELETE FROM ResourceChange WHERE calendar_id NOT IN (SELECT ROWID FROM Calendar);
delete_last_resource_change_in_notification
DELETE FROM Notification WHERE entity_type = 17 AND ROWID NOT IN (SELECT DISTINCT notification_id FROM ResourceChange);
com.apple.calendar.database.preference.notification.enableTravelAdvisoriesForAutomaticBehavior
com.apple.calendar.database.preference.notification.suggestEventLocations
com.apple.calendar.database.preference.notification.sqlProfileLoggingEnabled
com.apple.calendar.database.preference.notification.suggestedLocationsTestMode
com.apple.calendar.database.preference.notification.overrideParticipantRoleConstraint
com.apple.calendar.database.preference.notification.kCalPreferredDaysToSyncKey
com.apple.calendar.database.preference.notification.kCalRemindersPreferredDaysToSyncKey
com.apple.calendar.database.preference.notification.LastConfirmedSplashScreenVersionViewed
com.apple.calendar.database.preference.notification.privacyPaneHasBeenAcknowledgedVersion
com.apple.calendar.database.preference.notification.defaultCalendarStoreUID
com.apple.calendar.database.preference.notification.defaultCalendarDatabaseID
com.apple.calendar.database.preference.notification.defaultCalendarChangedTimestamp
com.apple.calendar.database.preference.notification.defaultCalendarID
com.apple.calendar.database.preference.notification.defaultCalendarName
com.apple.calendar.database.preference.notification.defaultCalendarChangedReason
enableTravelAdvisoriesForAutomaticBehavior
suggestEventLocations
sqlProfileLoggingEnabled
suggestedLocationsTestMode
overrideParticipantRoleConstraint
kCalPreferredDaysToSyncKey
kCalRemindersPreferredDaysToSyncKey
LastConfirmedSplashScreenVersionViewed
privacyPaneHasBeenAcknowledgedVersion
defaultCalendarDatabaseID
defaultCalendarChangedTimestamp
defaultCalendarChangedReason
AttachmentFile
CalNoteAttachmentDeleted
CalNoteStoreDeleted
UPDATE AttachmentFile SET local_path = ? || SUBSTR(local_path, ?) WHERE store_id = ? AND SUBSTR(local_path, 1, ?) = ?
DELETE FROM AttachmentFile WHERE ROWID NOT IN (SELECT file_id FROM Attachment);
WHERE store_id = ? AND url = ?
v24@?0^v8^B16
WHERE store_id = ? AND external_id = ?
WHERE local_path IS NULL AND IFNULL(download_tries, 0) < ?
WHERE store_id = ? AND local_path IS NULL AND IFNULL(download_tries, 0) < ?
format
filename
local_path
file_size
download_start
download_tries
url_pending_copy
quarantine_copied_file
AttachmentFileStoreURL
store_id, url
AttachmentFileUUID
AttachmentFileStoreLocalPathDownloadTries
store_id, local_path, download_tries
AttachmentFileExternalID
clean_attachments_attachment_file_deleted
SELECT CalNoteAttachmentDeleted(OLD.store_id, OLD.UUID);
is_binary
WHERE store_id = ? AND local_path = ?
CalDefaultCalendarChangedNotification
Calendar
SuggestionsCalendarID
NaturalLanguageSuggestionsCalendarID
INSERT INTO Calendar (ROWID, store_id, title, flags, UUID, self_identity_id, owner_identity_id) VALUES (1, 1, 'Default', %u, '%@', -1, -1);
DEFAULT_CALENDAR_NAME
INSERT INTO Calendar (store_id, title, UUID, self_identity_id, owner_identity_id) VALUES (%d, 'Default', '%@', -1, -1);
DELETE FROM Calendar WHERE ROWID = 1
INSERT INTO Error (calendar_owner_id, error_code, user_info) SELECT ROWID, last_sync_error, last_sync_error_data FROM Calendar WHERE last_sync_error != 0
color
color_r
color_g
color_b
symbolic_color_name
error_id
last_sync_error
SELECT ROWID FROM Error WHERE calendar_owner_id = ?
^v24@?0^{__CFString=}8^{__CFDictionary=}16
BirthdayCalendarID
UPDATE Calendar SET supported_entity_types = %ld, color = '%@' WHERE ROWID = %d;
#8295AF
SELECT ROWID, flags FROM Calendar WHERE color IS NULL
UPDATE Calendar SET color = ?, color_is_display = 1 WHERE ROWID = ?
UPDATE Calendar SET color = '%@' WHERE color in ('%@', '%@', '%@');
UPDATE Calendar SET supported_entity_types = %ld WHERE (supported_entity_types = 0 OR supported_entity_types IS NULL);
UPDATE Calendar SET invitation_status = 3 WHERE invitation_status = 2
UPDATE Calendar SET invitation_status = 2 WHERE invitation_status = 1
DELETE FROM Calendar WHERE store_id NOT IN (SELECT ROWID FROM Store);
/?&:$+,;=@
x-apple-calendar://%@
CalCalendarRef CalDatabaseCopyDefaultOrAnyReadWriteCalendarForNewEvents(CalDatabaseRef, CalStoreRef)
CalCalendarRef CalDatabaseCopyOrCreateDefaultCalendarForNewEvents(CalDatabaseRef)
void CalDatabaseCreateWritableCalendarForEntityTypeInStoreIfNeeded(CalDatabaseRef, CalEntityType, CalStoreRef)
reminders
DEFAULT_TASK_CALENDAR_NAME
No reason provided
vestigial
void CalDatabaseEnsureDefaultCalendarForNewTasksExists(CalDatabaseRef)
Unable to add calendar to store. Store is restricted to calendars which support only one entity
Reminders
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalCalendar.m:4032
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalCalendar.m:4055
Flags
OldFlags
ExternalIDTag
UPDATE Calendar SET external_id = NULL, external_mod_tag = NULL, external_id_tag = NULL, external_rep = NULL, shared_owner_name = NULL, shared_owner_address = NULL, sharing_status = 0, sync_token = NULL, is_published = 0, published_URL = NULL WHERE store_id = %d;
UPDATE Calendar SET store_id = %d WHERE store_id = %d AND ROWID != %d;
UPDATE Calendar SET store_id = %d WHERE store_id = %d AND ROWID = %d;
color_is_display
supported_entity_types
display_order
added_items
shared_owner_name
shared_owner_address
sharing_status
sharing_invitation_response
published_URL
is_published
invitation_status
sync_token
has_dirty_instance_attributes
has_dirty_sync_attributes
self_identity_id
self_identity_email
self_identity_phone_number
owner_identity_id
owner_identity_email
owner_identity_phone_number
bulk_requests
subcal_account_id
push_key
refresh_date
subscription_id
last_sync_start
last_sync_end
subcal_url
refresh_interval
pubcal_account_id
old_flags
max_attendees
last_sync_title
store
resource_changes
selfIdentityAddress
ownerIdentityAddress
alarms
error
NativeStoreID
Facebook Birthdays
Birthdays
INSERT INTO Calendar (store_id, title, flags, supported_entity_types, UUID, color, self_identity_id, owner_identity_id) VALUES (%d, '%@', %d, %ld, '%@', '%@', -1, -1);
Found in Mail
INSERT INTO Calendar (store_id, title, flags, supported_entity_types, UUID, color, symbolic_color_name, self_identity_id, owner_identity_id) VALUES (%d, '%@', %d, %ld, '%@', '%@', '%@', -1, -1);
DELETE FROM Notification WHERE calendar_id IN (SELECT ROWID FROM Calendar WHERE (flags & %d));
DELETE FROM NotificationChanges WHERE calendar_id IN (SELECT ROWID FROM Calendar WHERE (flags & %d));
DELETE FROM Calendar WHERE ROWID IN (SELECT ROWID FROM Calendar WHERE (flags & %d));
Found in Natural Language
FacebookBirthdayCalendarID
CalendarExternalId
CalendarStoreId
CalendarUUID
CalendarIsPublished
CalendarSelfIdentityId
INSERT INTO Calendar (store_id, title, flags, supported_entity_types, UUID, color, color_is_display, self_identity_id, owner_identity_id) VALUES (1, '%@', 0, %d, '%@', '%@', 1, -1, -1);
delete_calendar_members
DELETE FROM OccurrenceCacheDays where calendar_id = OLD.ROWID;DELETE FROM OccurrenceCache where calendar_id = OLD.ROWID;DELETE FROM CalendarItem WHERE calendar_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Notification WHERE calendar_id = OLD.ROWID; DELETE FROM sharee where owner_id = OLD.ROWID;DELETE FROM Alarm WHERE calendar_owner_id = OLD.ROWID;DELETE FROM Error WHERE calendar_owner_id = OLD.ROWID;
read_only
hidden
immutable
shared_owner_email
read_status
last_sync_error_data
SiriCanLearnFromAppBlacklist
com.apple.suggestions
com.apple.suggestions.settingsChanged
AppCanShowSiriSuggestionsBlacklist
CalMigrateSubcalExternalID
UPDATE Calendar SET external_id = CalMigrateSubcalExternalID(external_id) WHERE (Calendar.flags & %i) != 0 AND EXISTS (SELECT Store.ROWID FROM Store WHERE Store.ROWID = store_id AND Store.type == %i)
Database null during saving?
Old default (%@) not valid
DefaultTaskCalendarID
DefaultTaskCalendarStoreUID
DefaultTaskCalendarName
#%02X%02X%02X
_CalCalendarLoad
CalCalendar.m
propDesc->extra != 0
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN     (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN     (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
SELECT color, flags FROM Calendar;
caldav
urlsubscribe
PreMergeSourceCalendarItemCount
PreMergeDestiniationCalendarItemCount
PostMergeSourceCalendarItemCount
PostMergeDestinationCalendarItemCount
ErrorCount
CountMismatch
DataSource.Merge
%@-CalDAVInfo
CalStoreSetupAndTeardownUtils.m
Cannot enable/disable local store in an auxiliary database
extraParams
Category
WHERE name LIKE ? AND entity_type = ?
Multiple categories found with name = '%@', entityType = %d
WHERE hidden = 0 AND entity_type = ?
name
entity_type
CategoryNameAndType
name, entity_type
JOIN CategoryLink ON CategoryLink.owner_id = e.ROWID WHERE CategoryLink.category_id = ?
CalRelation
<CalRelation: %p> owner: [%@] related object: [%@]
Undefined
Source
Event
Task
Alarm
RecurrenceRule
Attendee
Organizer
ExceptionDate
EventAction
Location
Attachment
Sharee
InviteReplyNotification
ResourceChangeNotification
SuggestionNotification
Notification
CalendarItem
CategoryLink
Participant
SuggestedEventInfo
Contact
Conference
AuxDatabase
AuxDatabaseAccount
entityType: [%@] address: [%p] row ID: [%@] changedProperties: [%@]
Got entity type 0 for entity with CFType: %lu, recordDescriptor: %p, recordDescriptorName: %s
Unknown
Normal
Personal
Private
Confidential
Person
Room
Resource
Group
Unknown (%@)
Required
Optional
Chair
NonParticipant
NonParticipantChair
Pending
Accepted
Declined
Tentative
Delegated
Completed
Inprocess
Email
CREATE TEMP TABLE _MigrationParticipant (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, UUID TEXT, owner_id INTEGER, is_self INTEGER, entity_type INTEGER, identity_match_type INTEGER, identity_match_value TEXT);
CREATE INDEX temp._MigrationParticipantIndex on _MigrationParticipant(owner_id, is_self, entity_type, identity_match_type, identity_match_value);
        INSERT INTO temp._MigrationParticipant (ROWID, UUID, owner_id, is_self, entity_type, identity_match_type, identity_match_value) SELECT ROWID, UUID, owner_id, is_self, entity_type, CASE         WHEN Identity.address NOT NULL THEN 1         WHEN email NOT NULL THEN 2         WHEN phone_number NOT NULL THEN 3         WHEN Identity.display_name NOT NULL THEN 4         ELSE 5         END as identity_match_type,         CASE         WHEN Identity.address NOT NULL THEN Identity.address         WHEN email NOT NULL THEN email         WHEN phone_number NOT NULL THEN phone_number         WHEN Identity.display_name NOT NULL THEN Identity.display_name         ELSE Identity.first_name || "_&NZB^^_" || Identity.last_name         END as identity_match_value         FROM Participant LEFT JOIN Identity ON identity_id = Identity.ROWID;
        UPDATE temp._MigrationParticipant AS participantToUpdate         SET UUID = subQuery.mainParticipantUUID         FROM         (         SELECT detachedParticipant.ROWID as detachedParticipantROWID, mainParticipant.UUID AS mainParticipantUUID FROM temp._MigrationParticipant AS detachedParticipant         INNER JOIN CalendarItem AS detachedEvent ON detachedParticipant.owner_id = detachedEvent.ROWID         INNER JOIN CalendarItem AS mainEvent ON mainEvent.ROWID = detachedEvent.orig_item_id         INNER JOIN temp._MigrationParticipant AS mainParticipant ON mainEvent.ROWID = mainParticipant.owner_id         WHERE         detachedParticipant.is_self = mainParticipant.is_self AND         detachedParticipant.entity_type = mainParticipant.entity_type AND         detachedParticipant.identity_match_type = mainParticipant.identity_match_type AND         detachedParticipant.identity_match_value = mainParticipant.identity_match_value GROUP BY detachedParticipantROWID) AS subQuery         WHERE participantToUpdate.ROWID = subQuery.detachedParticipantROWID;
UPDATE Participant SET UUID = subQuery.UUID FROM (SELECT ROWID, UUID FROM temp._MigrationParticipant) AS subQuery WHERE Participant.ROWID = subQuery.ROWID;
DROP TABLE _MigrationParticipant;
UPDATE Participant SET identity_id = (SELECT Attendee_.participant_id FROM Attendee_ WHERE Attendee_.ROWID = Participant.ROWID);
UPDATE Participant SET email = (SELECT Identity.address FROM Attendee_, Identity WHERE Attendee_.ROWID = Participant.ROWID AND Attendee_.participant_id = Identity.ROWID);
UPDATE Participant SET email = (SELECT Identity.address FROM Participant_, Identity WHERE Participant_.ROWID = Participant.ROWID AND Participant_.identity_id = Identity.ROWID);
UPDATE Identity SET address = IFNULL((SELECT external_id FROM Participant_, Identity WHERE Identity.ROWID = Participant_.identity_id), 'mailto:' || address);
Unexpected entity type for participant: %d
DELETE FROM Participant WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
IDENTITY_MATCHES
SELECT owner_id FROM Participant WHERE IDENTITY_MATCHES(identity_id);
uuid: [%@] displayName: [%@] address: [%@] emailAddress: [%@] phoneNumber: [%@] role: [%@] status: [%@] type: [%@] responseComment: [%@] calendarItemRowID: [%@] calendarItemUUID: [%@]
CalOrganizerSetOwner
CalAttendee.m
CalEntityIsOfType(organizer, CalOrganizerEntity)
FIRST=%@;
LAST=%@;
email
phone_number
pending_status
role
is_self
schedule_agent
last_modified
proposed_start_date
invited_by
proposed_start_date_status
schedule_status
schedule_force_send
display_name
organizer_owner
attendee_owner
first_name
last_name
comment_last_modified
is_self_attendee
ParticipantEventId
ParticipantUUID
ParticipantEntityType
ParticipantOwnerId
ParticipantIdentityId
ParticipantEmail
ParticipantPhoneNumber
ParticipantProposedStartDate
participant_id
participation_type
_CalCreateParticipant
entityType == CalAttendeeEntity || entityType == CalOrganizerEntity
CalParticipantGetUID
CalEntityIsOfType(participant, CalParticipantEntity)
participant
WHERE participant.entity_type = ?
JOIN CalendarItem ON participant.owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID WHERE participant.entity_type = ? AND store_id = ?
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class IN (%d, %d) AND client_identifier = '%@')
entity_type = %d  AND store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
calendar_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class IN (%d, %d) AND client_identifier = '%@')
entity_type = %d  AND calendar_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
WHERE UUID = ? AND participant.entity_type = ?
JOIN Identity ON participant.identity_id = Identity.rowid WHERE participant.owner_id = ? AND Identity.address = ?
SELECT 1 WHERE EXISTS (SELECT CalendarItem.ROWID FROM Participant as SelfParticipant, Participant as Organizer, CalendarItem WHERE CalendarItem.organizer_id = Organizer.ROWID AND CalendarItem.self_attendee_id = SelfParticipant.ROWID AND (SelfParticipant.status = ? OR SelfParticipant.status = ?) AND Organizer.%s = ? AND SelfParticipant.ROWID != Organizer.ROWID)
SELECT 1 WHERE EXISTS (SELECT CalendarItem.ROWID FROM Participant as SelfParticipant, Participant as OtherParticipant, CalendarItem WHERE OtherParticipant.owner_id = CalendarItem.ROWID AND CalendarItem.self_attendee_id = SelfParticipant.ROWID AND (SelfParticipant.status = ? OR SelfParticipant.status = ?) AND OtherParticipant.%s = ? AND SelfParticipant.ROWID != OtherParticipant.ROWID)
SELECT 1 WHERE EXISTS (SELECT CalendarItem.ROWID FROM Participant as SelfParticipant, Participant as OtherParticipant, CalendarItem WHERE OtherParticipant.owner_id = CalendarItem.ROWID AND CalendarItem.organizer_id = SelfParticipant.ROWID AND SelfParticipant.is_self = 1 AND OtherParticipant.%s = ? AND SelfParticipant.ROWID != OtherParticipant.ROWID)
CalRecordID
<CalRecordID: %p> { entityType = %d; rowID = %d; }
com.apple.calendar.CalendarDatabase.CalRecordID
<rdar://problem/27536217>
_CalRecordIDLoad
CalRecordID.m
false
SELECT ROWID from %@ WHERE UUID IS NULL
UPDATE %@ SET UUID= ? WHERE rowid = ?;
SELECT ROWID FROM %s WHERE ROWID = ?
com.apple.mobilecal.invitationalertschanged
UPDATE CalendarItem SET orig_date = NULL WHERE orig_date = -2147483648
UPDATE CalendarItem SET last_modified = NULL WHERE last_modified = -2147483648
UPDATE CalendarItem SET has_attendees = 1 WHERE EXISTS (SELECT ROWID FROM Participant WHERE Participant.owner_id = CalendarItem.ROWID AND entity_type = 7)
UPDATE CalendarItem SET due_tz = start_tz, due_all_day = all_day WHERE entity_type = 3 AND due_date IS NOT NULL
UPDATE CalendarItem SET display_order = CAST(creation_date AS INT), external_mod_tag = NULL WHERE entity_type = 3
UPDATE CalendarItem SET invitation_status = 3 WHERE invitation_status = 2
UPDATE CalendarItem SET invitation_status = 2 WHERE invitation_status = 1
UPDATE CalendarItem SET end_tz = start_tz WHERE entity_type = 2
DELETE FROM CalendarItem WHERE calendar_id NOT IN (SELECT ROWID FROM Calendar);
DELETE FROM CalendarItem WHERE (orig_date != 0 AND orig_item_id = 0) OR orig_item_id IN (SELECT ROWID FROM CalendarItem WHERE orig_date != 0 AND orig_item_id = 0);
DELETE FROM CalendarItem WHERE orig_item_id = ROWID OR orig_item_id IN (SELECT ROWID FROM CalendarItem WHERE orig_item_id = ROWID);
_CalCalendarItemCreate
CalEvent.m
uuid: [%@] externalID: [%@] uniqueIdentifier: [%@] summary: [%@] startDate: [%@] endDate: [%@] isAllDay: [%@] url: [%@] isDetached: [%@] locationFullDisplayString: [%@] calendarUUID: [%@] calendarRowID: [%@]
_CalCalendarItemCreateCopyPreservingUniqueIdentifier
original != NULL
CalCalendarItemCreateCopy
_CalTaskMarkAsNeedingScheduledTaskCacheUpdate
_CalEntityIsOfType(task, CalTaskEntity)
 WHERE entity_type = %i AND ROWID > ?
 LIMIT %i
x-apple-calevent://%@/%@?o=%lld
x-apple-calevent://%@/%@
Unexpected entity type [%d for calendar item with rowid [%d]
CalCalendarItemCopyUUID
item != NULL
SELECT external_id, external_mod_tag FROM CalendarItem WHERE entity_type = 2 AND external_id IN (
) AND calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = ?);
 JOIN Participant ON self_attendee_id = Participant.rowid 
 JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ? AND 
Participant.entity_type = ? AND Participant.pending_status IN (?, ?, ?)
 JOIN Participant ON self_attendee_id = Participant.rowid WHERE Participant.entity_type = ? AND calendar_id = ? AND Participant.pending_status IN (?, ?, ?)
 JOIN Participant ON organizer_id = Participant.rowid JOIN Calendar ON calendar_id = Calendar.rowid JOIN Store ON Calendar.store_id = Store.rowid WHERE (Participant.schedule_agent = ? OR Store.type = ?) AND Participant.is_self = 1
 AND 
(external_tracking_status != 0)
 WHERE calendar_id = ? AND external_tracking_status != 0;
CalDB: Invalid timezone (start date): '%@', substituting float
SELECT rowid FROM CalendarItem WHERE location LIKE '%%%@%%' or summary LIKE '%%%@%%';
%s: %s
CalDatabaseCopyEventIDsThatMatchLocationOrSummary
SELECT COUNT(*) FROM CalendarItem AS ci
 WHERE status = ? and invitation_status = 0
 WHERE invitation_status = ? AND self_attendee_id != 0
 AND calendar_id NOT IN (SELECT ROWID FROM Calendar WHERE store_id IN 
 AND (has_recurrences = 1 OR (start_tz = ? AND end_date > ?) OR (start_tz != ? AND end_date > ?));
InvitationAlerts
SharedEventAlerts
InviteeDeclineAlerts
ShowDeclinedEvents
com.apple.mobilecal.showdeclinedchanged
_CalDatabaseCopyNonRecurringEventsInDateRange
has_recurrences = 0 AND hidden = 0 AND ((end_date > ? AND start_date < ?) OR (proposed_start_date > ? AND proposed_start_date < ?))
r.frequency
r.count
r.cached_end_date
r.cached_end_date_tz
r.end_date
r.specifier
r.by_month_months
 FROM CalendarItem e JOIN Recurrence r ON r.owner_id = e.ROWID
_CalDatabaseCopyRecurringEventsPossiblyOccurringInDateRange
entity_type = 2 AND has_recurrences = 1 AND hidden=0 AND start_date < ? 
invalid
CalDatabaseRemoveCalendarItemChangesInCalendarToIndex
calendar != NULL
entity_type = ? AND calendar_id = ?
v20@?0^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}8i16
CalDatabaseRemoveCalendarItemChangesInStoreToIndex
store != NULL
CalDatabaseCopyCalendarItemChangesInCalendar
entity_type = ? AND calendar_id = ? AND old_calendar_id != 0
entity_type = ? AND calendar_id = ? AND old_calendar_id = 0
 AND sequence_number > (select latest_consumed_sequence_number FROM ClientCursor WHERE client_identifier = ?)
 AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)
 AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = ? AND client_identifier = ?)
 AND sequence_number <= ?
entity_type = ?
 AND store_id = ?
 AND old_calendar_id != 0
 AND old_calendar_id = 0
UPDATE CalendarItem SET external_tracking_status = NULL, external_id = NULL, external_mod_tag = NULL, external_rep = NULL WHERE (calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = %d));
SELECT calendaritem.rowid, calendaritem.orig_item_id, calendaritem.orig_date, calendaritem.unique_identifier from CalendarItem, Calendar, Store WHERE calendaritem.unique_identifier IS NULL and (calendar_id IN (SELECT ROWID FROM Calendar WHERE store_id = %d));
UPDATE CalendarItem SET calendar_id = %d WHERE calendar_id = %d;
STRING_MATCHES
ORGANIZER_MATCHES
LOCATION_MATCHES
SELECT ROWID FROM CalendarItem WHERE 
STRING_MATCHES(?, IFNULL(summary, '') || ' ' || IFNULL(description,'')) OR ORGANIZER_MATCHES(organizer_id) OR 
LOCATION_MATCHES(location_id)
%@ AND (%@);
CalDatabaseCopyEventIdsForSearch
SELECT CalendarItem.ROWID FROM CalendarItem, Location WHERE entity_type = 2 AND Location.ROWID = CalendarItem.location_id
SELECT CalendarItem.ROWID FROM CalendarItem WHERE entity_type = 2
STRING_MATCHES(?, IFNULL(summary, ''))
STRING_MATCHES(?, IFNULL(location.title, ''))
(organizer_id == 0 AND STRING_MATCHES(?, IFNULL(summary, '')))
STRING_MATCHES(?, IFNULL(description, ''))
 WHERE recurrence_set = ? AND start_date > ?
 AND external_id IS NOT NULL AND external_id != ""
 ORDER BY start_date LIMIT 1
q24@?0@8@16
WHERE recurrence_set = ?
location_id
client_location_id
description
start_date
start_tz
end_tz
all_day
orig_item_id
orig_date
organizer_id
self_attendee_id
privacy_level
sequence_num
birthday_id
modified_properties
external_tracking_status
external_schedule_id
response_comment
last_synced_response_comment
has_recurrences
has_attendees
due_date
due_tz
due_all_day
completion_date
creation_date
action
app_link
created_by_id
modified_by_id
shared_item_created_date
shared_item_created_tz
shared_item_modified_date
shared_item_modified_tz
invitation_changed_properties
default_alarm_removed
phantom_master
participation_status_modified_date
calendar_scale
travel_time
travel_advisory_behavior
start_location_id
end_location_id
suggested_event_info_id
first_alert_date
can_forward
location_prediction_state
fired_ttl
disallow_propose_new_time
structured_data
local_structured_data
junk_status
conference_url
contact_identifier
recurrence_set
contact_name
exception_dates
recurrences
attendees
attendees_pending_delete
categories
self_attendee
update_occurrence_cache
update_scheduled_task_cache
has_dirty_notifiable_instance_attributes
old_calendar_id
old_external_id
event_actions
detached_events
original_event
location
client_location
start_location
end_location
suggested_event_info
contacts
created_by_display_name
created_by_address
modified_by_display_name
modified_by_address
created_by_first_name
created_by_last_name
modified_by_first_name
modified_by_last_name
conference_url_detected
has_description
self_participant_status
virtual_conference
suppress_notification_for_changes
special_day
status != -1
status == -1
SELECT (description != '') FROM %s WHERE ROWID = ?
EventCalendarId
EventOriginalEventId
orig_event_id
EventExternalId
EventExternalIdentificationTag
EventExternalUniqueIdentifier
CalendarItemOriginalItemId
EventCalendarIdHiddenEndDateStartDate
calendar_id, hidden, end_date, start_date
EventReadStatus
CalendarItemEntityTypeCompletionDate
entity_type, completion_date
CalendarItemEntityTypeCalendarIdCompletionDateCreationDate
entity_type, calendar_id, completion_date, creation_date
EventStatus
EventHiddenEndDateStartDate
hidden, end_date, start_date
EventExternalIdCalId
external_id, calendar_id
EventExternalUniqueIdentifierCalId
unique_identifier, calendar_id
EventUUID
CalendarItemDueDate
EventInvitationStatus
CalendarItemOriginalDate
CalendarItemCalendarId
CalendarItemRecurrenceSet
delete_event_alarms_recurs
DELETE FROM Location WHERE item_owner_id = OLD.ROWID;DELETE FROM Location WHERE start_loc_owner_id > 0 AND start_loc_owner_id = OLD.ROWID;DELETE FROM Location WHERE end_loc_owner_id > 0 AND end_loc_owner_id = OLD.ROWID;DELETE FROM Location WHERE client_loc_owner_id > 0 AND client_loc_owner_id = OLD.ROWID;DELETE FROM Alarm WHERE calendaritem_owner_id = OLD.ROWID;DELETE FROM Recurrence WHERE owner_id = OLD.ROWID;DELETE FROM Participant WHERE owner_id = OLD.ROWID;DELETE FROM ExceptionDate WHERE owner_id = OLD.ROWID;DELETE FROM OccurrenceCache WHERE event_id = OLD.ROWID;DELETE FROM OccurrenceCacheDays WHERE count = 0;DELETE FROM Attachment WHERE owner_id = OLD.ROWID;DELETE FROM ScheduledTaskCache WHERE task_id = OLD.ROWID;DELETE FROM EventAction WHERE event_id = OLD.ROWID;DELETE FROM SuggestedEventInfo WHERE ROWID = OLD.suggested_event_info_id;DELETE FROM Error WHERE ROWID = OLD.error_id;DELETE FROM CategoryLink WHERE owner_id = OLD.ROWID;
orig_start_date
organizer_is_self
external_status
external_delivery_source_id
external_delivery_item_id
organizer_external_id
conference
suggestion_id
travel_advisory_generation_is_automatic
suggestions_opaque_key
suggestions_unique_key
suggestions_changed_fields
arrival_offset
departure_offset
SELECT Event.rowid, organizer_id, organizer_is_self, address FROM Event, Identity WHERE organizer_id > 0 AND organizer_id = Identity.rowid
INSERT INTO Participant (entity_type, identity_id, owner_id, is_self, email, UUID) VALUES (?, ?, ?, ?, ?, ?)
UPDATE Event SET organizer_id = ? WHERE rowid = ?
INSERT INTO Location (title, item_owner_id) VALUES (?, ?)
SELECT rowid, location FROM %@ WHERE location IS NOT NULL
SELECT ROWID, item_owner_id FROM Location
UPDATE CalendarItem SET location_id = ? WHERE ROWID = ?
SELECT COUNT(*) FROM Recurrence WHERE event_id = ?
SELECT COUNT(*) FROM Recurrence WHERE owner_id = ? AND owner_type = 2
SELECT rowid, status FROM CalendarItem
UPDATE CalendarItem SET status = ?, invitation_status = ?, has_recurrences = ? WHERE ROWID=?
SELECT calendaritem.rowid, calendaritem.orig_item_id, calendaritem.orig_date, calendaritem.unique_identifier from CalendarItem, Calendar, Store WHERE calendaritem.unique_identifier IS NULL and calendaritem.calendar_id = calendar.rowid and calendar.store_id = store.rowid and store.type != 1;
CalDetectedConferenceURL
UPDATE CalendarItem SET conference_url_detected = (SELECT CalDetectedConferenceURL(description, url, Location.title, Location.address) FROM CalendarItem as ci LEFT JOIN Location ON Location.ROWID = IFNULL(client_location_id, location_id) WHERE ci.ROWID = CalendarItem.ROWID)
UPDATE CalendarItem SET orig_item_id = 0, orig_date = NULL WHERE orig_item_id = ?
_CalEventMarkEventAsNeedingOccurrenceCacheUpdate
_CalEntityIsOfType(event, CalEventEntity)
Duplicate Location Reference
_CalEventPrepareForSave
_CalEntityIsOfType(record, CalEventEntity)
_CalEntityIsOfType(record, CalTaskEntity)
INSERT INTO CalendarItemChanges (record, type, entity_type, sequence_number, store_id, calendar_id, old_calendar_id, external_id, old_external_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
%@/RID=%llu
Mevent
 JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?
 WHERE summary = ? AND start_date = ?
 WHERE calendar_id = ?
 AND start_date > ? AND suggested_event_info_id > 0
%%%@%%
 AND summary LIKE ?
EKEventNaturalLanguageSuggestedEventExpirationDate
CalDB: Invalid timezone (all day): '%@', substituting float
 JOIN Participant ON self_attendee_id = Participant.rowid
 WHERE Event.external_id IS NULL AND Participant.entity_type == ? AND Participant.status = ? AND end_date < ?
 JOIN Participant ON ci.self_attendee_id = Participant.rowid
 WHERE (Participant.entity_type = ? AND Participant.status NOT IN (?, ?, ?))
 WHERE (Participant.entity_type = ? AND Participant.status IN (?, ?, ?)) AND Participant.is_self = 0
 AND
 (ci.invitation_status IN (0, 1, 2, 3)
 (ci.invitation_status IN (1, 2, 3)
 AND (                 ((start_tz = ? AND end_date > ?) OR (start_tz != ? AND end_date > ?))                     OR                 (ci.has_recurrences AND (                        ( ci.ROWID IN (SELECT owner_id FROM Recurrence WHERE owner_id = ci.ROWID AND (                             cached_end_date + ci.end_date - ci.start_date > ? OR                             end_date + ci.end_date - ci.start_date > ? OR                             (count = 0 AND end_date IS NULL)                        ) )                     ) )                 )             );
opaque_key
extraction_group_identifier
JOIN SuggestedEventInfo ON CalendarItem.ROWID = SuggestedEventInfo.owner_id WHERE SuggestedEventInfo.%@ = ?
JOIN SuggestedEventInfo ON CalendarItem.ROWID = SuggestedEventInfo.owner_id
SELECT CalendarItem.* FROM CalendarItem JOIN Participant As organizerParticipant ON CalendarItem.organizer_id = organizerParticipant.rowid JOIN Participant AS otherParticipant ON CalendarItem.ROWID = otherParticipant.owner_id WHERE (CalendarItem.invitation_changed_properties & %i) != 0 AND otherParticipant.is_self = 0 AND otherParticipant.proposed_start_date > 0 AND (otherParticipant.proposed_start_date + (CalendarItem.end_date - CalendarItem.start_date) > ?) AND organizerParticipant.is_self = 1
 AND otherParticipant.proposed_start_date_status != 1
 GROUP BY CalendarItem.ROWID;
WHERE ROWID = (SELECT calendar_id FROM CalendarItem WHERE ROWID = ?)
gregorian
_CalDatabaseRemoveCalendarItemChangesInStoreToIndex
entity_type = ? AND store_id = ?
_CalDatabaseAmendDeleteForCalendarItemWithExternalID
UPDATE CalendarItemChanges SET external_id = ? WHERE record = ? AND type = 2
rowid
origEventId
origStartDate
uniqueId
UPDATE CalendarItem SET orig_event_id = 0, orig_start_date = 0 WHERE rowid = %d;
UPDATE CalendarItem SET unique_identifier="%@" WHERE rowid = %d;
%@/RID=%.f
calendar_id IN (SELECT ROWID From Calendar WHERE store_id NOT IN %@)
CalAttachmentXXXXXX
CalAlarm
CalEvent
CalAttendee
CalAttachment
CalTask
CalCalendar
CalStore
SupportedTriggers
Interval
Absolute
SupportsAlarmsTriggeringAfterStartDate
MaximumNumberOfAlarms
MaximumNumberOfRecurrences
FutureStartLimitedToOccurrenceCache
ResponseRequiresDeliverySourceOrExternalID
SupportsResponseComment
DeletesDetachedEventsWhenDeletingOriginal
DurationConstrainedToRecurrenceInterval
ResponseRequiresProposedStatus
OccurrenceOrderEnforcedAfterDetachment
OccurrencesMustOccurOnSeparateDays
StatusIsAccurate
ExternalStatusMirrorsStatus
RejectedStatusChangeRequiresNoExternalStatus
CalendarNotChangeable
SupportsAvailability
SupportsLimitedAvailability
CancelDeletedEvents
DeclineDeletedInvitations
RequiresOutgoingInvitationsInDefaultCalendar
RequiresMSFormattedUID
RecurrencesPinnedToMonthDays
MustAcknowledgeMasterEvent
SupportsStructuredLocations
SupportsReminderLocations
SupportsReminderActions
SupportsAlarmProximity
SupportsURL
SupportsAutoGeocodingStructuredLocations
UseDeletedByOrganizerStatus
StatusIsKnownForInvitedEvents
StatusIsKnownForOrganizedEvents
RequireAttendeeSearchInSingleAccount
CanUpdateLastModified
RequiresSeparateFilesForAllAttachments
SupportedPriorities
supportsAllDayDueDates
SupportsExactlyOneEntityType
RecurrenceSeriesMustIncludeMoreThanFirstOccurrence
SupportsIncomingInvitations
SupportsOutgoingInvitations
SupportsInvitationModifications
SupportsReadWriteCalendars
EWSItemIDString
EWSChangeKeyString
EWSPermissionString
CalExchangeCalendarItemExternalRepresentation
SEEKRITEVENT
[Placeholder Item]
SELECT Alarm.rowid, trigger_date, trigger_tz, start_tz, due_tz, entity_type FROM Alarm, CalendarItem WHERE Alarm.owner_id = CalendarItem.rowid
UPDATE Alarm SET trigger_date = ? WHERE ROWID = ?
UPDATE Alarm SET trigger_date = NULL WHERE trigger_date = -2147483648
CREATE_UUID
INSERT INTO Alarm (trigger_interval, type, calendarItem_owner_id, calendar_owner_id, UUID, proximity, disabled, location_id, default_alarm, orig_alarm_id) SELECT 0, 0, ROWID, -1, CREATE_UUID(), 0, 0, 0, 1, 0 FROM CalendarItem WHERE     entity_type = 2     AND IFNULL(default_alarm_removed, 0) = 0     AND ROWID NOT IN (SELECT DISTINCT calendaritem_owner_id FROM Alarm WHERE default_alarm = 1) 
DELETE FROM Alarm WHERE calendaritem_owner_id NOT IN (SELECT ROWID FROM CalendarItem)                                                                                      AND calendar_owner_id NOT IN (SELECT ROWID FROM Calendar);
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND trigger_date IS NOT NULL AND completion_date IS NULL AND (trigger_date >= ? AND trigger_date <= ?) AND CalendarItem.has_recurrences = 0
MATCH_DATE_RANGE
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE     Store.delegated_account_owner_store_id IS NULL     AND ((proximity = 0 OR proximity IS NULL)     AND trigger_date IS NULL     AND has_recurrences = 0     AND MATCH_DATE_RANGE(start_tz, start_date, travel_time, trigger_interval, all_day, default_all_day_alarm_offset, default_alarm_offset, default_alarm, has_recurrences) 
JOIN CalendarItem ON calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE     Store.delegated_account_owner_store_id IS NULL     AND ((proximity = 0 OR proximity IS NULL)     AND trigger_date IS NULL     AND has_recurrences = 1     AND MATCH_DATE_RANGE(start_tz, start_date, travel_time, trigger_interval, all_day, default_all_day_alarm_offset, default_alarm_offset, default_alarm, has_recurrences) 
UPDATE Alarm SET external_mod_tag = NULL, external_id_tag = NULL, external_rep = NULL                                                                           WHERE calendaritem_owner_id IN (SELECT CalendarItem.ROWID FROM CalendarItem JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = %d)                                                                           OR calendar_owner_id IN (SELECT Calendar.ROWID FROM Calendar WHERE store_id = %d);
JOIN CalendarItem ON alarm.calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND CalendarItem.entity_type = 3 AND CalendarItem.completion_date IS NULL AND alarm.disabled = 0 AND alarm.proximity != 0 AND alarm.location_id != 0
alarm
WHERE alarm.disabled = 0 AND alarm.proximity != 0 AND alarm.location_id != 0 AND alarm.calendar_owner_id IN (SELECT ROWID FROM Calendar)
JOIN CalendarItem ON alarm.calendaritem_owner_id = CalendarItem.ROWID JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID JOIN Store ON Calendar.store_id = Store.ROWID WHERE Store.delegated_account_owner_store_id IS NULL AND CalendarItem.entity_type = 3 AND CalendarItem.completion_date IS NULL AND alarm.disabled = 0 AND alarm.proximity >= 3 AND alarm.proximity <= 4
trigger_date
trigger_interval
default_alarm
orig_alarm_id
email_address
bookmark
original_alarm
snoozed_alarms
url_wrapper
AlarmExternalId
AlarmUUID
AlarmOwnerId
AlarmTriggerDate
AlarmCalendarItemOwnerId
AlarmCalendarOwnerId
AlarmOrigAlarmId
cascade_alarm_delete
DELETE FROM Location WHERE alarm_owner_id = OLD.ROWID AND alarm_owner_id > 0;
entity_id
trigger_tz
url_string
WHERE calendaritem_owner_id IN (SELECT CalendarItem.ROWID FROM CalendarItem JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?)                                                                                                       OR calendar_owner_id IN (SELECT Calendar.ROWID From Calendar WHERE store_id = ?)
 AND %@ IN (
%d, 
CalendarItem.calendar_id
calendar_id = %d AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@') AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@') AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
ItemBridgeOptions
ItemBridgeExceptionDates
ItemBridgeIsAllDay
ItemBridgeEventIsFloating
ItemBridgeStartDateTimezone
/RID=
(none)
X-MICROSOFT-CDO-ALLDAYEVENT
X-FUNAMBOL-ALLDAY
v32@?0@8@16^B24
B32@?0@8Q16^B24
Attach
Description
Summary
Reminder
mailto
CREATE TABLE Identity (display_name TEXT, address TEXT, first_name TEXT, last_name TEXT, UNIQUE (display_name, address, first_name, last_name));
ALTER TABLE Participant RENAME TO Participant_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, email FROM Participant_ WHERE name IS NOT NULL AND email IS NOT NULL;
INSERT INTO Identity (ROWID, display_name, address) SELECT MIN(ROWID), name, email FROM Participant_ WHERE email IS NULL AND name IS NOT NULL GROUP BY name;
INSERT INTO Identity (ROWID, display_name, address) SELECT MIN(ROWID), name, email FROM Participant_ WHERE name IS NULL AND email IS NOT NULL GROUP BY email;
INSERT INTO Identity (ROWID, display_name, address) SELECT MIN(ROWID), name, email FROM Participant_ WHERE name IS NULL AND email IS NULL GROUP BY email;
SELECT ROWID, address FROM Identity WHERE address IS NULL AND display_name IS NOT NULL;
UPDATE Attendee SET participant_id = ? WHERE participant_id IN (SELECT ROWID FROM Participant_ WHERE email IS NULL AND name = ?);
UPDATE Event SET organizer_id = ? WHERE organizer_id IN (SELECT ROWID FROM Participant_ WHERE email IS NULL AND name = ?);
SELECT ROWID, address FROM Identity WHERE address IS NULL;
UPDATE Attendee SET participant_id = ? WHERE participant_id IN (SELECT ROWID FROM Participant_ WHERE name IS NULL AND email = ?);
UPDATE Event SET organizer_id = ? WHERE organizer_id IN (SELECT ROWID FROM Participant_ WHERE name IS NULL AND email = ?);
DROP TABLE Participant_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, email FROM Participant_
ALTER TABLE Identity RENAME TO Identity_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, email FROM Identity_
DROP TABLE Identity_;
INSERT INTO Identity (ROWID, display_name, address) SELECT ROWID, name, address FROM Identity_
INSERT OR REPLACE INTO aux.Identity (ROWID, display_name, address, first_name, last_name) SELECT ROWID, display_name, address, first_name, last_name FROM Identity WHERE ROWID IN (SELECT identity_id FROM aux.Participant) OR ROWID IN (SELECT identity_id FROM aux.Sharee) OR ROWID IN (SELECT identity_id FROM aux.Notification) OR ROWID IN (SELECT identity_id FROM aux.ResourceChange) OR ROWID IN (SELECT created_by_id FROM aux.CalendarItem) OR ROWID IN (SELECT modified_by_id FROM aux.CalendarItem) OR ROWID IN (SELECT self_identity_id FROM aux.Calendar) OR ROWID IN (SELECT owner_identity_id FROM aux.Calendar)
display_name IS NULL
display_name = ?
address IS NULL
address = ?
first_name IS NULL
first_name = ?
last_name IS NULL
last_name = ?
SELECT ROWID FROM Identity WHERE %@ AND %@ AND %@ AND %@
INSERT INTO Identity (display_name, address, first_name, last_name) VALUES (?, ?, ?, ?);
DELETE FROM Identity WHERE NOT EXISTS (SELECT ROWID FROM Participant WHERE Participant.identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM Calendar WHERE Calendar.self_identity_id = Identity.ROWID OR Calendar.owner_identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM CalendarItem WHERE CalendarItem.modified_by_id = Identity.ROWID OR CalendarItem.created_by_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM ResourceChange WHERE ResourceChange.identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM Notification WHERE Notification.identity_id = Identity.ROWID) AND NOT EXISTS (SELECT ROWID FROM Sharee WHERE Sharee.identity_id = Identity.ROWID);
SELECT rowid FROM Identity WHERE STRING_MATCHES(?, IFNULL(display_name, ''))
CalDatabaseCopyParticipantIdsThatMatchSearch
UPDATE Identity SET display_name = ?, address = ? WHERE address = ?;
UPDATE Attendee SET participant_id = ? WHERE participant_id IN (SELECT ROWID FROM Participant_ WHERE address IS NULL AND NAME IS NULL);
UPDATE Event SET organizer_id = ? WHERE organizer_id IN (SELECT ROWID FROM Participant_ WHERE address IS NULL AND NAME IS NULL);
select i1.rowid, i2.rowid from Identity i1, Identity i2 where i1.display_name = i2.display_name and i1.address = ("mailto:" || i2.address)
UPDATE Calendar SET self_identity_id = ? WHERE self_identity_id = ?;
UPDATE Calendar SET owner_identity_id = ? WHERE owner_identity_id = ?;
UPDATE CalendarItem SET modified_by_id = ? WHERE modified_by_id = ?;
UPDATE CalendarItem SET created_by_id = ? WHERE created_by_id = ?;
UPDATE Notification SET identity_id = ? WHERE identity_id = ?;
UPDATE Participant SET identity_id = ? WHERE identity_id = ?;
UPDATE ResourceChange SET identity_id = ? WHERE identity_id = ?;
UPDATE Sharee SET identity_id = ? WHERE identity_id = ?;
DELETE FROM Identity where rowid = ?;
update Identity set address = "mailto:" || address where rowid in (select s.rowid from Identity s where s.address not like "urn:uuid:%" and s.address not like "mailto:%" and s.address not like "http%" and s.address not like "/%");
Couldn't create a statement to prefix identity addresses with mailto:
Identity
Date
EventExceptionDate
DELETE FROM ExceptionDate WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
CalExceptionDateSetDate
CalExceptionDate.m
date != NULL
calendar_id = ?1 AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = ?2) AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?2) AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = ?3 AND client_identifier = ?2)
sync_order
EventExceptionDateEventId
ExceptionDateOwnerId
DELETE FROM Conference WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
uuid
ConferenceEventId
ConferenceUUID
______NativeStorePersistentID_______
host
port
useSSL
ownerAddresses
preferredOwnerAddress
Store
CREATE INDEX StoreExternalId on Store(external_id)
DELETE FROM Store WHERE ROWID = 1
CREATE TRIGGER delete_store_members AFTER DELETE ON Store
BEGIN
DELETE FROM Calendar WHERE store_id = OLD.ROWID;
DELETE FROM Error WHERE ROWID = OLD.error_id;
END;
CREATE TRIGGER delete_store_changes AFTER DELETE ON Store
BEGIN
DELETE FROM CalendarChanges WHERE store_id = OLD.ROWID;DELETE FROM CalendarItemChanges WHERE store_id = OLD.ROWID;DELETE FROM AlarmChanges WHERE store_id = OLD.ROWID;DELETE FROM RecurrenceChanges WHERE store_id = OLD.ROWID;DELETE FROM ParticipantChanges WHERE store_id = OLD.ROWID;DELETE FROM AttachmentChanges WHERE store_id = OLD.ROWID;DELETE FROM ContactChanges WHERE store_id = OLD.ROWID;DELETE FROM EventActionChanges WHERE store_id = OLD.ROWID;DELETE FROM ExceptionDateChanges WHERE store_id = OLD.ROWID;DELETE FROM NotificationChanges WHERE store_id = OLD.ROWID;DELETE FROM ShareeChanges WHERE store_id = OLD.ROWID;DELETE FROM ClientCursor WHERE store_id = OLD.ROWID;
END;
CREATE TRIGGER clean_attachments_store_deleted AFTER DELETE ON Store
BEGIN
SELECT CalNoteStoreDeleted(OLD.ROWID, OLD.external_id, OLD.persistent_id);
END;
Local Store Not Local
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:433
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:439
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:444
DROP TABLE StoreChanges;
DROP TRIGGER IF EXISTS delete_store_members;
DROP TRIGGER IF EXISTS delete_store_changes;
DROP TRIGGER IF EXISTS clean_attachments_store_deleted;
ALTER TABLE Store RENAME TO Store_;
ALTER TABLE StoreChanges RENAME TO StoreChanges_;
DROP TABLE Store_;
DROP TABLE StoreChanges_;
SELECT rowid from Store;
UPDATE Store SET persistent_id="%@" WHERE rowid = %d;
DELETE FROM Calendar WHERE rowid NOT IN (SELECT Calendar.rowid FROM Calendar, Store WHERE Calendar.store_id = Store.rowid);
UPDATE Store SET constraint_path = NULL WHERE rowid = 1
UPDATE Store SET flags = %u WHERE type = %d AND ROWID != %d
UPDATE Store SET flags2 = %u WHERE type = %d AND ROWID != %d
SELECT COUNT(rowid) from Store WHERE type = %i;
DELETE FROM Store WHERE type = %i AND rowid != %i
UPDATE Store SET persistent_id = '%@' WHERE type = %i;
DefaultAlarms
DefaultAllDayAlarms
com.apple.dataaccessd-%@
.plist
 WHERE external_id = ?;
 WHERE persistent_id = ?;
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:2739
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:2803
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalStore.m:2811
CalDatabaseMigrateCalendarsWithEntityType
CalStore.m
SELECT ROWID FROM CalendarItem WHERE end_date IS NOT NULL AND end_date < ? AND (orig_item_id == 0 OR orig_item_id == NULL) AND rowid NOT IN (SELECT owner_id FROM Recurrence) AND phantom_master == 0 AND calendar_id IN (SELECT rowid FROM Calendar WHERE store_id = ?)
SELECT ROWID FROM CalendarItem WHERE entity_type = ? AND end_date IS NOT NULL AND end_date < ? AND (orig_item_id == 0 OR orig_item_id == NULL) AND rowid NOT IN (SELECT owner_id FROM Recurrence) AND phantom_master == 0 AND calendar_id IN (SELECT rowid FROM Calendar WHERE store_id = ?)
SELECT ROWID from CalendarItem where rowid in (SELECT owner_id FROM Recurrence r, CalendarItem i WHERE i.rowid = r.owner_id AND ((cached_end_date IS NOT NULL AND cached_end_date < ?) OR (r.end_date IS NOT NULL AND r.end_date < ?)) AND ((SELECT COUNT(*) FROM CalendarItem where orig_item_id = i.rowid) == 0 OR (SELECT MAX(end_date) from CalendarItem where orig_item_id = i.rowid and end_date) < ?) AND (i.calendar_id IN (select rowid from Calendar where store_id = ?)))
SELECT ROWID from CalendarItem where entity_type = ? AND rowid in (SELECT owner_id FROM Recurrence r, CalendarItem i WHERE i.rowid = r.owner_id AND ((cached_end_date IS NOT NULL AND cached_end_date < ?) OR (r.end_date IS NOT NULL AND r.end_date < ?)) AND ((SELECT COUNT(*) FROM CalendarItem where orig_item_id = i.rowid) == 0 OR (SELECT MAX(end_date) from CalendarItem where orig_item_id = i.rowid and end_date) < ?) AND (i.calendar_id IN (select rowid from Calendar where store_id = ?)))
SELECT ROWID FROM CalendarItem master WHERE master.hidden == 1 AND master.phantom_master == 1 AND master.end_date < ? AND ((SELECT COUNT(*) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) == 0 OR (SELECT MAX(detached.end_date) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) < ?) AND master.calendar_id IN (SELECT ROWID from Calendar WHERE store_id = ?);
SELECT ROWID FROM CalendarItem master WHERE master.hidden == 1 AND master.phantom_master == 1 AND master.end_date < ? AND master.entity_type == ? AND ((SELECT COUNT(*) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) == 0 OR (SELECT MAX(detached.end_date) FROM CalendarItem detached WHERE detached.orig_item_id == master.ROWID) < ?) AND master.calendar_id IN (SELECT ROWID from Calendar WHERE store_id = ?);
default_alarm_offset
constraint_path
persistent_id
added_calendars
constraints
creator_bundle_id
creator_code_signing_identity
only_creator_can_modify
preferred_event_private_value
strictest_event_private_value
dirty_sync_attributes
delegated_account_owner_store_id
delegated_account_default_calendar_for_new_events_id
delegated_account_default_calendar_for_new_events
shows_notifications
owner_name
default_all_day_alarm_offset
cached_external_info
INSERT INTO Store (ROWID, type, name, persistent_id, flags, flags2) VALUES (%d, 0, 'Default', '%@', %u, %u);
INSERT INTO Store (type, name, persistent_id, flags) VALUES (%d, 'Other', '%@', %u);
SELECT type FROM Store WHERE ROWID = %i
SELECT MAX((SELECT MAX(ROWID) FROM Store), (SELECT seq FROM sqlite_sequence WHERE name = "Store"))+1
%i%i
B16@?0@"NSString"8
UPDATE Store SET ROWID = %i WHERE ROWID = %i
UPDATE Store SET delegated_account_owner_store_id = %i WHERE delegated_account_owner_store_id = %i
UPDATE Calendar SET store_id = %i WHERE store_id = %i
UPDATE CalendarChanges SET store_id = %i WHERE store_id = %i
UPDATE RecurrenceChanges SET store_id = %i WHERE store_id = %i
UPDATE AlarmChanges SET store_id = %i WHERE store_id = %i
UPDATE ParticipantChanges SET store_id = %i WHERE store_id = %i
UPDATE EventActionChanges SET store_id = %i WHERE store_id = %i
UPDATE CalendarItemChanges SET store_id = %i WHERE store_id = %i
UPDATE ExceptionDateChanges SET store_id = %i WHERE store_id = %i
UPDATE AttachmentChanges SET store_id = %i WHERE store_id = %i
UPDATE ShareeChanges SET store_id = %i WHERE store_id = %i
UPDATE NotificationChanges SET store_id = %i WHERE store_id = %i
UPDATE ContactChanges SET store_id = %i WHERE store_id = %i
UPDATE OccurrenceCache SET store_id = %i WHERE store_id = %i
UPDATE OccurrenceCacheDays SET store_id = %i WHERE store_id = %i
UPDATE ClientCursor SET store_id = %i WHERE store_id = %i
SELECT default_alarm_offset, default_all_day_alarm_offset FROM Store_ WHERE ROWID = 1
i16@?0^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}8
UPDATE Store_ SET default_alarm_offset=NULL, default_all_day_alarm_offset=NULL WHERE ROWID = 1 OR external_id="Subscribed Calendars"
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, NULL, type, constraint_path, disabled, external_id, NULL, NULL, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, NULL, type, constraint_path, disabled, external_id, persistent_id, NULL, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, NULL, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, NULL, NULL, 0, NULL, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, 0, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, 0 FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications FROM Store_;
INSERT INTO Store (ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications, flags2 ) SELECT ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications, flags2 FROM Store_;
ROWID, name, default_alarm_offset, type, constraint_path, disabled, external_id, persistent_id, flags, creator_bundle_id, creator_code_signing_identity, only_creator_can_modify, external_mod_tag, preferred_event_private_value, strictest_event_private_value, last_sync_start, last_sync_end, delegated_account_owner_store_id, delegated_account_default_calendar_for_new_events_id, shows_notifications, flags2
, display_order
, owner_name
, default_all_day_alarm_offset
, error_id
, notes
, cached_external_info
INSERT INTO Store (%@) SELECT %@ FROM Store_;
INSERT INTO Error (store_owner_id, error_code, user_info) SELECT ROWID, last_sync_error, last_sync_error_data FROM Store_ WHERE last_sync_error != 0
INSERT INTO Error (store_owner_id, error_code) SELECT ROWID, last_sync_error FROM Store_ WHERE last_sync_error != 0
UPDATE Store SET error_id = (SELECT ROWID FROM Error WHERE store_owner_id = Store.ROWID)
record, type, sequence_number
, default_alarm_offset
INSERT INTO StoreChanges (%@) SELECT %@ FROM StoreChanges_;
UPDATE Store SET flags = %u WHERE ROWID = %d;
UPDATE Store SET flags = (IFNULL(flags,0) & %u) | %u WHERE ROWID = %d;
UPDATE Store SET flags2 = %u WHERE ROWID = %d;
delegateDataCleanupQueue
record = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN     (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN     (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
Store Without PersistentID
Subscribed Calendars
com.apple.calendar.ACMigrationAccountStoreErrors
v20@?0B8@"NSError"12
-[CADObjectID initWithEntityType:entityID:databaseID:]
CADObjectID.m
entityType
rowID
dbID
temporary
%@://%d/%@/%@%d
x-apple-eventkit
%@:///%@/%@%d
BOOL CalEventUpdateFromICSEventWithOptions(ICSEvent *__strong, ICSCalendar *__strong, CalEventRef, CalEventRef, CalDatabaseRef, NSUInteger, __strong id<CDBAccountInfo>, NSMutableSet *__strong, BOOL)
CalExchangeCalendarExternalRepresentation
VTODO
iCalExtraProperties
CalXProps
CalClassification
SELECT %s FROM %s WHERE ROWID = ?
UPDATE %s SET %s = ? WHERE ROWID = ?
UPDATE Location SET start_loc_owner_id = item_owner_id, item_owner_id = NULL WHERE rowid in (SELECT location.rowid FROM location INNER JOIN calendaritem ON calendaritem.start_location_id=location.rowid);
UPDATE Location SET client_loc_owner_id = item_owner_id, item_owner_id = NULL WHERE rowid in (SELECT location.rowid FROM location INNER JOIN calendaritem ON calendaritem.client_location_id=location.rowid);
DELETE FROM Location WHERE item_owner_id > 0 AND item_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
DELETE FROM Location WHERE alarm_owner_id > 0 AND alarm_owner_id NOT IN (SELECT ROWID FROM Alarm);
DELETE FROM Location WHERE start_loc_owner_id > 0 AND start_loc_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
DELETE FROM Location WHERE end_loc_owner_id > 0 AND end_loc_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
DELETE FROM Location WHERE client_loc_owner_id > 0 AND client_loc_owner_id NOT IN (SELECT ROWID FROM CalendarItem);
SELECT rowid FROM Location WHERE STRING_MATCHES(?, IFNULL(title, '')) OR STRING_MATCHES(?, IFNULL(address, ''))
CalDatabaseCopyLocationIdsThatMatchSearch
reference_frame
address_book_id
mapkit_handle
derived_from
item_owner_id
alarm_owner_id
start_loc_owner_id
end_loc_owner_id
client_loc_owner_id
item_owner
alarm_owner
start_loc_owner
end_loc_owner
client_loc_owner
LocationOwnerItemId
LocationStartLocOwnerItemId
start_loc_owner_id > 0
LocationEndLocOwnerItemId
end_loc_owner_id > 0
LocationClientLocOwnerItemId
client_loc_owner_id > 0
LocationAlarmOwnerID
alarm_owner_id > 0
master
TimeChanged
DateChanged
VEVENT
dtstart
x-apple-structured-location
time
%@ AND %@
%@ WHERE %@
%@ in ()
%@ IN ()
%@ = %@
%@ IN (%@)
%@ NOT IN (%@)
Unexpected entity type for notification: %d
DELETE FROM Notification WHERE calendar_id NOT IN (SELECT ROWID FROM Calendar);
CalNotificationGetUID
CalNotification.m
CalEntityIsOfType(notification, CalNotificationEntity)
CalDatabaseCopyNotificationsWithCalendar
entityType == CalNotificationEntity || entityType == CalInviteReplyNotificationEntity || entityType == CalResourceChangeNotificationEntity || entityType == CalSuggestionNotificationEntity || entityType == CalUndefinedEntity
invite_reply_calendar_id
host_url
in_reply_to
invite_reply_calendar
NotificationUUIDOwnerId
UUID, owner_id
NotificationUUIDCalendarId
UUID, calendar_id
NotificationOwnerId
NotificationEntityType
NotificationExternalIDOwnerId
external_id, owner_id
NotificationExternalIDCalendarId
NotificationCalendarId
delete_resource_changes_for_notification
DELETE FROM ResourceChange WHERE notification_id NOT IN (SELECT ROWID FROM Notification WHERE entity_type = 17 OR entity_type = 19);
_CalCreateNotification
entityType == CalInviteReplyNotificationEntity || entityType == CalResourceChangeNotificationEntity || entityType == CalNotificationEntity || entityType == CalSuggestionNotificationEntity
store_id = %d  AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@')  AND sequence_number NOT IN  (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@')  AND ROWID NOT IN  (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class IN (%d, %d, %d) AND client_identifier = '%@')
WHERE UUID = ? AND notification.entity_type = ?
WHERE notification.entity_type = ?
JOIN Calendar ON notification.calendar_id = Calendar.ROWID WHERE notification.entity_type = ? AND store_id = ?
kCalEventOccurrenceCacheChangedNotification
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:514
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:562
SELECT COUNT(*) FROM OccurrenceCache WHERE event_id NOT IN (SELECT ROWID FROM CalendarItem);
EventKitOC: *** INTEGRITY FAILURE *** There were orphaned entries in the cache
DELETE FROM OccurrenceCache WHERE event_id NOT IN (SELECT ROWID FROM CalendarItem);
EventKitOC: *** CLEAN ORPHAN FAILURE *** Got error code %i when attempting to clean orphans
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:670
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:672
CREATE TABLE OccurrenceCache (day REAL, event_id INTEGER, calendar_id INTEGER, store_id INTEGER, occurrence_date REAL, occurrence_start_date REAL, occurrence_end_date REAL);
CREATE TABLE OccurrenceCacheDays (calendar_id INTEGER, store_id INTEGER, day REAL, count INTEGER, PRIMARY KEY (calendar_id, day));
CREATE TRIGGER update_cache_days_after_delete AFTER DELETE ON OccurrenceCache
BEGIN
UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = OLD.calendar_id;UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = -2;
END;
CREATE TRIGGER update_cache_days_after_insert AFTER INSERT ON OccurrenceCache
BEGIN
REPLACE INTO OccurrenceCacheDays VALUES (NEW.calendar_id, NEW.store_id, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = NEW.calendar_id), 0));
REPLACE INTO OccurrenceCacheDays VALUES (-2, -2, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = -2), 0));
END;
CREATE TRIGGER update_cache_days_after_update AFTER UPDATE OF day ON OccurrenceCache
BEGIN
REPLACE INTO OccurrenceCacheDays VALUES (NEW.calendar_id, NEW.store_id, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = NEW.calendar_id), 0));
REPLACE INTO OccurrenceCacheDays VALUES (-2, -2, NEW.day, 1 + IFNULL((SELECT count FROM OccurrenceCacheDays WHERE day = NEW.day AND calendar_id = -2), 0));
UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = OLD.calendar_id;UPDATE OccurrenceCacheDays SET count = count - 1 WHERE day = OLD.day AND calendar_id = -2;
END;
DROP TRIGGER update_cache_days_after_delete;
DROP TRIGGER update_cache_days_after_insert;
ALTER TABLE OccurrenceCache RENAME TO OccurrenceCache_;
ALTER TABLE OccurrenceCacheDays RENAME TO OccurrenceCacheDays_;
DROP TRIGGER IF EXISTS update_cache_days_after_update;
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date) SELECT day, event_id, CalendarItem.calendar_id, %d, occurrence_date, occurrence_start_date FROM OccurrenceCache_ JOIN CalendarItem ON CalendarItem.ROWID = event_id GROUP BY occurrence_date, event_id, occurrence_start_date;
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date) SELECT day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date FROM OccurrenceCache_ GROUP BY occurrence_date, event_id, occurrence_start_date;
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date, occurrence_end_date) SELECT day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date, occurrence_end_date FROM OccurrenceCache_ GROUP BY occurrence_date, event_id, occurrence_start_date;
DROP TABLE OccurrenceCache_;
DROP TABLE OccurrenceCacheDays_;
SELECT day, SUM(count) FROM OccurrenceCacheDays
GROUP BY day ORDER BY day
SELECT day, event_id, IFNULL(occurrence_start_date, occurrence_date) AS fetched_occurrence_start_date FROM OccurrenceCache
day = ?
ORDER BY day, occurrence_date ASC
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1188
ORDER BY occurrence_date
SELECT event_id, occurrence_date FROM OccurrenceCache
occurrence_date > ?
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1213
ORDER BY occurrence_date DESC
occurrence_date > ? AND event_id IN (%@)
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1243
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1280
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1366
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1370
SELECT COUNT() FROM OccurrenceCache WHERE occurrence_date > ? AND event_id = ? LIMIT 1
SELECT event_id, occurrence_date, occurrence_start_date FROM OccurrenceCache
occurrence_date >= ? AND event_id = ?
ORDER BY occurrence_date ASC
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2005
occurrence_date < ? AND event_id = ?
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2077
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2092
SELECT event_id, occurrence_date, occurrence_start_date, day FROM OccurrenceCache
day >= ? AND event_id = ?
SELECT event_id, occurrence_date, occurrence_start_date, day FROM OccurrenceCache INDEXED BY OccurrenceCacheDayEventIdOccurrenceDate
day < ? AND event_id = ?
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2132
SELECT event_id, occurrence_date FROM OccurrenceCache WHERE day = ? ORDER BY occurrence_date ASC LIMIT 1 OFFSET ?
occurrence_date > ? AND occurrence_date <= ?
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2245
_CalDatabaseCopyEventOccurrencesThatMatchEventIds
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2299
ForceRebuildSeed
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2537
EventKitOC: Unable to start transaction. Aborting rebuild.
UPDATE Recurrence SET cached_end_date = NULL
milliseconds
occurrenceCacheRebuilds
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2566
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2592
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:2600
UPDATE OccurrenceCacheDays SET store_id = %d WHERE store_id = %d;
UPDATE OccurrenceCache SET store_id = %d WHERE store_id = %d;
UPDATE OccurrenceCacheDays SET calendar_id = %d WHERE calendar_id = %d;
UPDATE OccurrenceCache SET calendar_id = %d WHERE calendar_id = %d;
void _CalEventOccurrenceCacheLoadInfo(CalEventOccurrenceCacheRef)
CalEventOccurrenceCache.m
No transaction when accessing time zone.
OccurrenceCacheTimeZone
OccurrenceCacheStart
OccurrenceCacheEnd
EventKitOC: *** ERROR *** No transaction is in effect! This may end poorly.
DELETE FROM OccurrenceCache WHERE occurrence_date < ? AND ROWID IN (SELECT ROWID FROM OccurrenceCache JOIN CalendarItem ON CalendarItem.ROWID = OccurrenceCache.event_id WHERE CalendarItem.has_recurrences = 1 AND CalendarItem.entity_type = 2);
DELETE FROM OccurrenceCacheDays WHERE count = 0;
Insert Corrupt Occurrence - GenerateOccurrences
INSERT INTO OccurrenceCache (day, event_id, calendar_id, store_id, occurrence_date, occurrence_start_date, occurrence_end_date) values (?, ?, ?, ?, ?, ?, ?);
Insert duplicate occurrence
void _CalEventOccurrenceCacheSetRangeAndTimeZone(CalEventOccurrenceCacheRef, NSDate *__strong, NSDate *__strong, NSTimeZone *__strong)
No write transaction when updating occurrence cache range.
CalEventOccurrenceCache
CREATE INDEX OccurrenceCacheDayEventIdOccurrenceDate on OccurrenceCache(day, event_id, occurrence_date);
CREATE UNIQUE INDEX OccurrenceCacheOccurrenceDateEventId on OccurrenceCache(occurrence_date, event_id, occurrence_start_date);
CREATE INDEX OccurrenceCacheCalendarId on OccurrenceCache(calendar_id);
CREATE INDEX OccurrenceCacheDaysCount on OccurrenceCacheDays(count);
CREATE INDEX OccurrenceCacheDaysDayCalendarId on OccurrenceCacheDays(day, calendar_id);
DROP INDEX IF EXISTS OccurrenceCacheDay;
DROP INDEX IF EXISTS OccurrenceCacheOccurrenceDate;
DROP INDEX IF EXISTS OccurrenceCacheEventId;
DROP INDEX IF EXISTS OccurrenceCacheDayEventIdOccurrenceDate;
DROP INDEX IF EXISTS OccurrenceCacheOccurrenceDateEventId;
DROP INDEX IF EXISTS OccurrenceCacheCalendarId;
DROP INDEX IF EXISTS OccurrenceCacheDaysCount;
DROP INDEX IF EXISTS OccurrenceCacheDaysDayCalendarId;
DROP INDEX IF EXISTS OccurrenceCacheDayCalendarId;
DROP INDEX IF EXISTS OccurrenceCacheDayStoreId;
DROP INDEX IF EXISTS OccurrenceCacheStoreIdOccurrenceDate;
DROP INDEX IF EXISTS OccurrenceCacheCalendarIdOccurrenceDate;
DROP INDEX IF EXISTS OccurrenceCacheDaysStoreIdDay;
 WHERE %@ AND calendar_id != -2
 WHERE store_id != -2 AND store_id NOT IN 
 WHERE calendar_id = -2
 LIMIT %d
occurrenceCount
eventUID
occurrenceDate
 AND occurrence_start_date is NULL
SELECT occurrence_date FROM OccurrenceCache
v16@?0^{__CFArray=}8
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1793
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1821
SELECT event_id, IFNULL(occurrence_start_date, occurrence_date) AS fetched_occurrence_start_date, occurrence_end_date FROM OccurrenceCache
day >= ? AND day < ?
GROUP BY event_id, fetched_occurrence_start_date
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalEventOccurrenceCache.m:1904
Unable to malloc a _CalEventOccurrenceWithoutEvent
Occurrence cache is pointing to nonexistent event %d
DELETE FROM OccurrenceCache;
DELETE FROM OccurrenceCacheDays;
DELETE FROM OccurrenceCache WHERE event_id = ?;
Insert Corrupt Occurrence - ProcessAdds
CDBCommonEntityFunctionalityHandler.lock
DELETE FROM Sharee WHERE owner_id NOT IN (SELECT ROWID FROM Calendar);
CalShareeGetUID
CalSharee.m
CalEntityIsOfType(sharee, CalShareeEntity)
OwnerID
Name
Address
MuteNotification
access_level
mute_notifications
ShareeUUID
ShareeOwnerId
ShareeStatus
ShareeAccessLevel
ShareeIdentityId
CalAlarmOccurrence
default
enable
disable
<%@: %p>(
 migrateUsingCalendarDaemon = YES,
 waitForRemindersOnly = %@
homeDirectory
sourceCalendarDirectory
<%@: %p>(
 %@ = %@,
 destinationDirectory = %@,
 performCalendarMigration = %@,
 performReminderMigration = %@,
 performCleanup = %@,
 deleteMigratedData = %@,
 backupBeforeCalendarMigration = %@,
 backupBeforeReminderMigration = %@,
 accountChangesFile = %@,
 accountsDatabaseFile = %@,
WHERE persona_id = ?
path
persona_id
accounts
delete_aux_database_accounts
DELETE FROM AuxDatabaseAccount WHERE database_id = OLD.ROWID;
account_id
ExternalFolderID
ExternalScheduleID
DELETE FROM EventAction WHERE event_id NOT IN (SELECT ROWID FROM CalendarItem);
SELECT EventAction.ROWID, EventAction.event_id, EventAction.external_id, EventAction.external_mod_tag, EventAction.external_folder_id, EventAction.external_schedule_id, EventAction.external_rep FROM EventAction JOIN CalendarItem ON EventAction.event_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?;
external_folder_id
EventActionEventId
EventActionExternalId
EventActionFolderId
 JOIN CalendarItem ON event_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE EventAction.external_id = ? 
Meventaction
external_folder_id = ?
Meventaction.external_id = ?;
CalEventOccurrence
DisableOccurrenceCache
WHERE account_id = ?
database_id
database
myself
others
DELETE FROM SuggestedEventInfo WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
_CalSuggestedEventInfoInsertAndUpdateNotificationsForEvent
unique_key
changed_fields
changes_acknowledged
SuggestedEventInfoOwnerId
geo:%f,%f
changeID
CalDatabaseIdleChangeTrackingClientWasPurgedNotification
CREATE TABLE ClientCursor (     ROWID INTEGER PRIMARY KEY AUTOINCREMENT,     client_identifier TEXT,     store_id INTEGER,     latest_consumed_sequence_number INTEGER,     latest_consumed_timestamp REAL,     UNIQUE(client_identifier) );
CREATE INDEX ClientCursorClientIdentifier ON ClientCursor(client_identifier); 
CREATE TABLE ClientSequence (client_identifier TEXT, sequence_number INTEGER );
CREATE INDEX ClientSequenceClientIdentifier ON ClientSequence(client_identifier); 
CREATE TABLE ClientCursorConsumed (    client_identifier TEXT,     consumed_entity_class INTEGER,     consumed_entity_id INTEGER,     consumed_change_id INTEGER,     sequence_number INTEGER );
CREATE INDEX ClientCursorConsumedClientIdentifier ON ClientCursorConsumed(client_identifier); 
CREATE TRIGGER delete_clientcursor_consumed AFTER DELETE ON ClientCursor     BEGIN         DELETE FROM ClientCursorConsumed WHERE client_identifier = OLD.client_identifier;         DELETE FROM ClientSequence WHERE client_identifier = OLD.client_identifier;     END; 
ALTER TABLE ClientCursor ADD COLUMN     store_id INTEGER;
INSERT INTO aux.ClientCursor SELECT * FROM ClientCursor WHERE store_id IN (0, ?) AND client_identifier NOT IN (SELECT client_identifier FROM aux.ClientCursor)
SELECT (SELECT COUNT() FROM aux.ClientCursorConsumed) > 0 OR (SELECT COUNT() FROM aux.ClientSequence) > 0
INSERT INTO aux.ClientCursorConsumed SELECT * FROM ClientCursorConsumed
INSERT INTO aux.ClientSequence SELECT * FROM ClientSequence
INSERT OR REPLACE INTO ClientCursor (client_identifier, store_id, latest_consumed_sequence_number, latest_consumed_timestamp) VALUES (?, ?, (SELECT MIN(IFNULL(MIN(latest_consumed_sequence_number), ?), ?) FROM ClientCursor WHERE client_identifier = ?), ?);
INSERT INTO ClientSequence (client_identifier, sequence_number) VALUES (?, ?);
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:977
sequence_number > ?  AND entity_type = ?  AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)  AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE client_identifier = ? AND consumed_entity_class = ?)
sequence_number > ?  AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)  AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE client_identifier = ? AND consumed_entity_class = ?)
sequence_number > ?  AND entity_type = ?  AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)  AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE client_identifier = ? AND consumed_entity_class = ?) AND sequence_number <= ?
sequence_number > ?  AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = ?)  AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE client_identifier = ? AND consumed_entity_class = ?) AND sequence_number <= ?
 AND %@ = ?
v36@?0r^{?=*^?^?^?^?^?^?C^vi^{?}^v*^?^?i^{?}i^?}8i16B20@?<v@?^{CPSqliteStatement=^{CPSqliteConnection}^{sqlite3_stmt}dB}>24i32
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1059
%@ <%p> {minConsumedClientIdentifier "%@"; minConsumedSequenceNumber = %d; secondMinConsumedSequenceNumber = %d}
%@ <%p> {clientIdentifier "%@"; consumedSequenceNumber = %d}
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1440
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1450
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1508
DELETE FROM ClientCursorConsumed;
UPDATE ClientCursor SET latest_consumed_timestamp = ?, latest_consumed_sequence_number = ?;
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1538
changedIDs
changeTypes
changeTableIDs
sequenceNumbers
v44@?0i8^{__CFArray=}12^{__CFArray=}20^{__CFArray=}28^{__CFArray=}36
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1700
CalDatabasePersistentChangeTracking: unable to start transaction (error %d)
SELECT COUNT(*) FROM %@Changes WHERE ROWID = ? AND sequence_number > ?
INSERT INTO ClientCursorConsumed (client_identifier, consumed_entity_class, consumed_entity_id, consumed_change_id, sequence_number) VALUES (?, ?,  (SELECT record FROM %@Changes WHERE ROWID = ? LIMIT 1),  ?,  (SELECT sequence_number FROM %@Changes WHERE ROWID = ?) )
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1744
SELECT client_identifier FROM ClientCursor;
SELECT client_identifier FROM ClientCursor WHERE store_id = ?;
SELECT IFNULL(MIN(store_id), -1) FROM ClientCursor WHERE client_identifier = ?
DELETE FROM ClientCursor WHERE client_identifier = ?;
SELECT client_identifier FROM ClientCursor WHERE latest_consumed_timestamp < ? OR (store_id = 0 AND (SELECT count(*) FROM CalendarItemChanges WHERE sequence_number > latest_consumed_sequence_number AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE ClientSequence.client_identifier = ClientCursor.client_identifier)) > ?);
Purging change-tracking client %@ which has been idle since %f or is tracking all stores and is behind more more than %d changes
AND sequence_number <= %i
sequence_number <= %i
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:675
SELECT IFNULL(MIN(latest_consumed_sequence_number), -1) FROM ClientCursor WHERE client_identifier = ?;
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:783
v24@?0Q8^B16
 OR 
((store_id == %d) AND ((sequence_number <= %d) OR ((sequence_number <= %d) AND (sequence_number IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier == "%@")))))
((store_id == %d) AND (sequence_number <= %d))
store_id NOT IN (
) OR sequence_number IS NULL
sequence_number <= %d
DELETE FROM ClientSequence WHERE ClientSequence.sequence_number NOT IN 
AND ClientSequence.sequence_number NOT IN 
(SELECT DISTINCT %@Changes.sequence_number FROM %@Changes WHERE %@Changes.sequence_number IS NOT NULL)
SELECT DISTINCT IFNULL(store_id, 0) FROM ClientCursor;
SELECT client_identifier, IFNULL(latest_consumed_sequence_number, -1) FROM ClientCursor WHERE (IFNULL(store_id, 0) == 0 OR (store_id == ?)) ORDER BY latest_consumed_sequence_number
write at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1459
DELETE FROM ClientCursorConsumed WHERE client_identifier = ? AND IFNULL(sequence_number, 0) <= ?;
UPDATE ClientCursor SET latest_consumed_timestamp = ?, latest_consumed_sequence_number = MAX(?, MIN((SELECT latest_consumed_sequence_number FROM ClientCursor WHERE client_identifier = ?), ?)) WHERE client_identifier = ?;
commit at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1492
read at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1562
 AND record = ?
rollback at /Library/Caches/com.apple.xbs/Sources/CalendarDatabase_Sim/CalendarDatabase/CalDatabasePersistentChangeTracking.m:1628
SELECT store_id FROM ClientCursor WHERE client_identifier = ?
category_id
group_id
category
CategoryLinkCategoryID
delete_category
DELETE FROM Category WHERE Category.ROWID = OLD.category_id AND NOT EXISTS(SELECT category_id FROM CategoryLink WHERE category_id = OLD.category_id);
Category link without category
context
Integrity
CREATE TEMP TABLE AttachmentMigration (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, UUID TEXT, url TEXT, original_url TEXT, store_id INTEGER, external_id TEXT, external_mod_tag TEXT, format TEXT, is_binary INTEGER, filename TEXT, local_url TEXT, file_size INTEGER)
INSERT INTO temp.AttachmentMigration (ROWID, UUID, url, original_url, store_id, external_id, external_mod_tag, format, is_binary, filename, local_url, file_size) SELECT Attachment.ROWID, Attachment.UUID, iif(Attachment.url = "http://localhost", NULL, Attachment.url), Attachment.url, Calendar.store_id, Attachment.external_id, Attachment.external_mod_tag, Attachment.format, Attachment.is_binary, Attachment.filename, Attachment.local_url, Attachment.file_size FROM Attachment JOIN CalendarItem ON CalendarItem.ROWID = Attachment.owner_id JOIN Calendar ON Calendar.ROWID = CalendarItem.calendar_id
CREATE INDEX temp.AttachmentMigrationURLStoreID ON AttachmentMigration(url, store_id)
UPDATE temp.AttachmentMigration AS target SET UUID = (SELECT other.UUID FROM temp.AttachmentMigration AS other WHERE (other.url = target.url AND other.store_id = target.store_id AND target.url IS NOT NULL) OR (target.url IS NULL AND other.ROWID = target.ROWID) ORDER BY other.ROWID LIMIT 1)
CREATE INDEX temp.AttachmentMigrationUUID ON AttachmentMigration(UUID)
UPDATE temp.AttachmentMigration AS target SET (external_id, external_mod_tag, format, is_binary, local_url, file_size) = (SELECT external_id, external_mod_tag, format, is_binary, local_url, file_size FROM temp.AttachmentMigration as source WHERE source.local_url IS NOT NULL AND target.UUID = source.UUID LIMIT 1) WHERE target.local_url IS NULL AND (SELECT other.local_url FROM temp.AttachmentMigration as other WHERE other.UUID = target.UUID AND other.local_url IS NOT NULL) IS NOT NULL
INSERT INTO AttachmentFile (UUID, url, external_id, external_mod_tag, format, flags, filename, local_path, file_size, store_id) SELECT UUID, original_url, external_id, external_mod_tag, format, is_binary, filename, local_url, file_size, store_id FROM AttachmentMigration GROUP BY UUID
UPDATE Attachment SET UUID = other.UUID FROM (SELECT ROWID, UUID FROM temp.AttachmentMigration) AS other WHERE other.ROWID = Attachment.ROWID
UPDATE AttachmentChanges SET UUID = IFNULL((SELECT UUID FROM Attachment WHERE Attachment.ROWID = AttachmentChanges.record), UUID)
DROP TABLE temp.AttachmentMigration
SELECT ROWID FROM AttachmentFile WHERE UUID = ?
file_id
DELETE FROM Attachment WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
JOIN CalendarItem ON owner_id = CalendarItem.ROWID JOIN Calendar ON calendar_id = Calendar.ROWID WHERE store_id = ?
local_url
security_scoped_local_url_wrapper
security_scoped_local_url_for_archived_data_wrapper
dirty_trackable_attributes
file
CalLoadAttachmentPropertyFromFileProperty
CalAttachment.m
AttachmentEventId
AttachmentUUID
AttachmentURL
AttachmentFileId
delete_attachment_file
DELETE FROM AttachmentFile WHERE AttachmentFile.ROWID = OLD.file_id AND (SELECT file_id FROM Attachment WHERE file_id = OLD.file_id) IS NULL;
data
x-apple-reminder://%@
WHERE entity_type = 3 AND (due_date NOT NULL OR completion_date NOT NULL)
WHERE entity_type = 3 AND (due_date NOT NULL OR completion_date NOT NULL)                                    AND (                                           (due_date NOT NULL AND due_all_day = 0 AND due_date >= ? AND due_date < ?)                                        OR (due_date NOT NULL AND due_all_day = 1 AND due_date >= ? AND due_date < ?)                                        OR (completion_date NOT NULL AND completion_date >= ? AND completion_date < ?)                                    )
 WHERE summary = ?
 AND due_date = ?
SELECT count(CalendarItem.rowid) from CalendarItem 
 JOIN Calendar ON CalendarItem.calendar_id = Calendar.ROWID
 WHERE entity_type = %d
STRING_MATCHES_WORD
STRING_MATCHES_PREFIX
 AND STRING_MATCHES_WORD(?, IFNULL(summary, ''))
 AND (((calendar.title != ? AND calendar.title != ?) AND STRING_MATCHES_PREFIX(?, IFNULL(summary, '') || ' ' || IFNULL(calendar.title, ''))) OR ((calendar.title = ? OR calendar.title = ?) AND STRING_MATCHES_PREFIX(?, IFNULL(summary, '') || ' ' || ?) ))
 AND (((calendar.title != ? AND calendar.title != ?) AND STRING_MATCHES_WORD(?, IFNULL(calendar.title, ''))) OR ((calendar.title = ? OR calendar.title = ?) AND STRING_MATCHES_WORD(?, ?)))
 AND (
(completion_date >= ?)
(completion_date < ?)
 AND ((
(((due_tz IS NOT NULL AND due_tz != ?) AND due_date >= ?) OR ((due_tz IS NULL OR due_tz = ?) AND due_date >= ?))
(((due_tz IS NOT NULL AND due_tz != ?) AND due_date < ?) OR ((due_tz IS NULL OR due_tz = ?) AND due_date < ?))
) OR (
 AND completion_date IS NOT NULL
 AND completion_date IS NULL
 ORDER BY completion_date DESC
 ORDER BY CalendarItem.display_order ASC, creation_date ASC
 ORDER BY CalendarItem.display_order DESC, creation_date DESC
 ORDER BY due_date ASC
 LIMIT ?
DELETE FROM Contact WHERE owner_id NOT IN (SELECT ROWID FROM CalendarItem);
SELECT COUNT(*) FROM Contact WHERE contact_id = ?
SELECT owner_id FROM Contact WHERE contact_id = ?
contact_id
ContactID
store_id = %d AND sequence_number > (SELECT latest_consumed_sequence_number from ClientCursor WHERE client_identifier = '%@') AND sequence_number NOT IN (SELECT sequence_number FROM ClientSequence WHERE client_identifier = '%@') AND ROWID NOT IN (SELECT consumed_change_id FROM ClientCursorConsumed WHERE consumed_entity_class = %d AND client_identifier = '%@')
II_Event_Title_key
II_Location_key
II_ALL_DAY_KEY
II_From_key
II_To_key
II_Time_Zone_key
II_Recurrence_key
II_Attendees_key
II_Organizer_key
II_URL_key
II_Attachment_key
II_Note_key
II_Comments_key
II_ProposedTime_key
II_VideoConference_key
II_Attendee:|:
%@ (%@)
%@%@
.A333333
')1111.
 (08@HPX`h
#-/1<
1/"$&(*,.
Mbp?
"%(+.147:=@CFIL]ORUX[
"&*.26:
JNRVZ
"$&(*,.02468:<>@BDF
Refusing to open DB with version %d for restoring
Failed to get connection for writing to database to update its restore generation
Reloading widget timeline because of database change notification
Unable to get database connection to clean up danglers.
Bad result %i for query "%@"
Couldn't get statement for SQL "%@"; Error: %s
Skipping out of process migration because CalendarMigration.framework is not available
Requesting out-of-process migration
Out of process migration failed! This may cause the database to get deleted!
Out-of-process migration complete
Creating database with configuration: [%@]
Forcing in-memory database because we are running as the setup user. No changes will be saved.
Failing to create with path %@ because no database exists at that location and we were told not to make one.
Error [%d] opening a connection to the calendar database at [%@]
Couldn't create calendar database at default path.
Cleaning up plist...
****** [CDB Spotlight indexing] 1 day since last failure, reindex needed
****** [CDB Spotlight indexing] reindex aborted, less than one day since last failure
Found a store with no identifier at ROWID %d. Setting identifier to %{public}@
Saving database after cleaning up stores without identifiers
Failed to save database after cleaning up stores with missing identifiers
****** [CDB MIGRATION] Beginning schema migration
****** [CDB MIGRATION] Finished all schema migration tasks
Attempting to rebuild the occurrence cache.
No database provided.  Will not rebuild the occurrence cache.
Could not acquire the occurrence cache.  Will not rebuild the occurrence cache.
Posting Darwin notification: [%@].
Unsupported entity type %i
Passed in %lu values but %lu value types.
Wrong type for parameter %i; expected int but got %@
Wrong type for parameter %i; expected string but got %@
Wrong type for parameter %i; expected date but got %@
Unsupported property type %i
Failed to set resource value NSURLIsExcludedFromBackupKey to %@ for database directory %@
Unable to get database connection to run vacuum.
Begin transaction (%{public}s) failed with error %i
Asked to index an event with rowID == -1 for Spotlight. Skipping
****** [CDB Spotlight indexing] Finished wait, spotlight complete
****** [CDB Spotlight indexing] Indexing %d events
Failed to push spotlight inserts/updates: %@
****** [CDB Spotlight indexing] Finished indexing %d events
****** [CDB Spotlight indexing]  Beginning delete of events
Failed to push spotlight deletes for ids before inserts/updates: %{public}@, %@
****** [CDB Spotlight indexing] Event delete finished, beginning index
****** [CDB Spotlight indexing] Beginning wait for spotlight operations
Couldn't construct a path to the calendar database.
Couldn't get the path to the calendar database.
Migrating Calendar database from version %d to version %d...
Asked to migrate when the database should already be migrated. Failing.
Opening the database caused it to be deleted for reason: %d
The calendar database was deleted when opened, but we can't find the CPRecordStoreRef to notify!
The calendar database was deleted when opened, but we can't find the CalDatabaseRef to notify!
No 'database' given.  Will not adjust profile logging.
Execution time was [%@] milliseconds for statement: [%@]
%@ %@
No existing database handle while setting rollback hook callback.
Received notification: [%@]
[%@] profile logging for database: [%p]
[%@] greentea logging for database: [%p]
Commencing database save for client with identifier [%{public}@], name [%{public}@].  Commit: [%{public}@]
No record store found.  Will not proceed with saving the database.
Couldn't begin a transaction. Won't save the database
CalDatabaseSaveInternal: failed to get recordID for updated record with rowid [%d], deleted: %d
CalDatabaseSaveInternal: failed to get recordID for deleted record with rowid [%d], deleted: %d
CalDatabaseSaveInternal: failed to get recordID for added record with rowid [%d], deleted: %d
Database save complete.  Commit: [%@].  Total time spent: [%@] milliseconds.
NULL 'database' given.  Will not log database changes to be saved.
No recordStore found.  Will not log database changes to be saved.
Commencing log of changes to be saved.
Added entity: [%@]
Updated entity: [%@]
Deleted entity: [%@]
Completed log of changes to be saved.
Summary of changes being saved: %{public}@ (add: %i mod: %i del: %i)
Summary of changes being saved: Unknown (add: %i mod: %i del: %i)
Organizer has no owner.  We need to remove it.
Attendee has no owner. We need to remove it.
Disallowing reload for changes because they don't affect the widget
_CalDatabaseChangesInArrayMayAffectWidgets: failed to get recordID for updated record with rowid [%d], deleted: %{BOOL}d
Allowing reload for changeType %{public}@ because store has dirty instance attributes
Allowing reload for changeType %{public}@ because calendar has dirty instance attributes
Allowing reload because of changeType %{public}@ for recurrence rule
Event was added or removed which may affect the widget view if it's in the time range
ChangeTypeUpdated contains changed property (%{public}@), which may affect the widget view if it's in the time range
Allowing reload for %{public}@ because changedPropertiesShowInWidget (%{BOOL}d) and its in range.
Allowing reload for %{public}@ because changedPropertiesShowInWidget (%{BOOL}d), eventOccurrencesExistInRange (%{BOOL}d)
Attempt to add record with invalid entity type %i
Attempt to add record with invalid row ID %i
Failed to push spotlight deletes for eventDomainIDsToDelete: %{public}@, %@
Failed to push spotlight deletes for domainIDsToDelete: %{public}@, %@
Couldn't get statement for SQL "%@"
Error: %s
****** [CDB Spotlight indexing] Spotlight reindex needed
****** [CDB MIGRATION] Spotlight reindex started
****** [CDB MIGRATION] Spotlight reindex completed
****** [CDB Spotlight indexing] Beginning spotlight
****** [CDB Spotlight indexing] Deleting events
Error deleting searchable items for calendar, error = %@
****** [CDB Spotlight indexing] Events deleted, beginning index
****** [CDB Spotlight indexing] Finished indexing
****** [CDB MIGRATION] Migration needed
****** [CDB MIGRATION] %lu aux databases to migrate
****** [CDB MIGRATION] migrating aux database at %@
****** [CDB MIGRATION] Migration not needed
Didn't find aux DB for persona %{public}@ at path %{public}@. Getting current path for persona
Couldn't look up persona %{public}@
No container for persona %{public}@
Still couldn't open aux DB for persona %{public}@ after looking up current container URL %{public}@
Main database schema is up-to-date (%i), but aux database schema is out-of-date. (%i)
****** [CDB Spotlight indexing] reindex needed, last version was %@
****** [CDB Spotlight indexing] spotlight index is current
Skipping reminders migration because CalendarMigration.framework is not available
Failed to get a CalReminderKitDatabaseMigrationContext. Skipping reminders migration
ReminderKit wants migration = %d
Needs reminder migration cleanup = %d
****** [CDB MIGRATION] Performing reminders migration
****** [CDB MIGRATION] Finished reminders migration
Skipping reminders migration because it is not needed
Unable to remove %{public}@: %@
Removed %{public}@
No existing database handle while handling corrupt database error.
Calendar database corrupted with extended sqlite code %i; header from corrupt database=%@
The aux database at path "%@" no longer exists. Since this is an aux database, assuming that the volume was removed and ignoring.
The aux database at path "%@" is corrupt.
Reading sqlite database header failed; sqlitecode=%i, sqlite_last_errno=%i, sqlite3_file_control return value=%i
Unable to get sqlite3_file: %i
The calendar database was committed, but we can't find the CPRecordStoreRef on it.
The calendar database was committed, but we can't find the CalDatabaseRef on the record store.
saving a recurrence with owner_id 0: relation=%p, owner=%@
Encountered an unknown CalEventStatus: %d
Encountered an unhandled ICSStatus: %d
Encountered an unknown ICSStatus: %d
Encountered an unknown CalEventPrivacyLevel: %d
Encountered an unknown ICSCalendarServerAccess: %d
Encountered an unknown CalAlarmType: %d
Encountered an unknown ICSAction: %d
Encountered an unknown calendar frequency: %d
Encountered an ICS frequency that the calendar database doesn't handle: %d. Defaulting to daily
Encountered an unknown ICS frequency: %d
Encountered an unknown CalDayOfWeek: %d
Encountered an unknown ICSWeekday: %d
Encountered an unknown CalMonthOfYear: %d
Encountered an unknown ICSMonth: %d
Encountered an unknown CalAttendeeType: %d
Encountered an unknown ICSCalendarUser: %d
Encountered an unknown CalAttendeeRole: %d
Encountered an unknown ICSRole: %d
Encountered an unknown CalAttendeeStatus: %d
Encountered an unhandled ICSParticipationStatus: %d
Encountered an unknown ICSParticipationStatus: %d
NULL 'item' given.  Will not determine if there is a preferred location.
NULL 'item' given.  Will not return a preferred location.
Calendar item row handler has no uuid context. Aborting sqlite statement.
Could not get uuid column text for sqlite statement
Could not get uuid string from utf8 string = %s
Beginning backup of database file to %@
Finished backup of database file with result = %{BOOL}d
Beginning backup of database file and attachments to %@
Finished backup of database file and attachments with result = %{BOOL}d
Beginning ICBU backup to %@
Failed to create destination .icbu Info.plist file: %@
Cleaning up failed backup output
Failed to clean up backup output: %@
Finished ICBU backup with result = %{BOOL}d
Beginning restore of database file from %@
Finished restore of database file with result = %{BOOL}d
Beginning restore of database file and attachments from %@
Cleaning up failed backup database output
Failed to clean up backup database output: %@
Failed to clean up backup attachments output: %@
Backup destination URL is an existing file: %@
Backup destination URL has non-existent parent directory: %@
Backup destination URL has a parent that is not a directory: %@
Failed to open database connection for source database while attempting to backup
Failed to start transaction while attempting to backup
Failed to create a directory for copying attachment: %@.
Failed to copy attachment (%@): %@
Failed to open destination database for backup: %{public}s
Failed to initialize backup: %{public}s
Failure while performing backup: %{public}s
Failed to vacuum DB: %{public}s
Failed to checkpoint DB: %{public}s
Failed to close DB: %{public}s
Failed to remove backup -wal file (%@): %@
Failed to remove backup -shm file (%@): %@
Nil path given for backup destination
Backup destination URL is not a file URL: %@
Backup destination URL does not exist: %@
Backup destination URL is not a directory: %@
Failed to list destination URL (%@): %@
Destination directory is not empty: %@
Account not found for subscribed calendar (ROWID=%d): %{public}@. Will not be included in Info.plist for backup
Multiple local subscribed calendar accounts have the same account identifier (%{public}@). This one (ROWID=%d) will not be included in the Info.plist for backup
Nil path given for restore database
Restore database backup URL is not a file URL: %@
Restore database backup URL is not an existing file: %@
Restore database backup URL is a directory: %@
Failed to create temp directory for staging backup for restore
Cleaning up staged temp directory
Failed to clean up staged temp directory: %@
Failed to copy backup database to staged location: %@
Backup file is not a valid database!
Failed to open source database for restore: %{public}s
Failed to open destination database for staging restore: %{public}s
Failed to open database when attempting to validate it: %{public}s
Failed to execute vacuum on database when attempting to validate it: %{public}s
Failed to close database when attempting to validate it: %{public}s
Failed to open staged backup database for schema migration
Failed to find expected attachment in backup: %@
Attachment in backup is directory when a file was expected: %@
Removing store for non-existent account %{public}@ from backup during restore
Removing subscribed calendar for non-existent account %{public}@ from backup during restore
Failed to save database to remove stores/calendars for non-existent accounts
Attempted to restore from a database in which all data belonged to accounts not signed in. Failing the restore to prevent wiping all useful data.
Cleaning up staged backup directory
Failed to clean up staged backup directory: %@
Failed to get destination path for restore
Failed to get destination URL for attachment: %@
Failed to create directory for attachment when restoring backup: %@
Attachment from backup (%@) already exists in destination (%@), but we could not replace it: %@
Failed to copy attachment (%@) when restoring backup: %@
Failed to get connection for writing to database to update its sequence number after restoring
Could not open Info.plist from .icbu (%@) for restore
Could not find version key in Info.plist for .icbu (%@)
Restoring from version 3.0 .icbu
Restoring from a 2.0 .icbu is not supported on this platform
Could not restore from unsupported .icbu version: "%{public}@"
Failed to update subscribed calendars after restore.
Local subscribed calendar info from backup Info.plist was not a dictionary. Ignoring
Entry in subscribed calendar info from backup Info.plist has wrong key type (%{public}@). Ignoring.
Entry in subscribed calendar info from backup Info.plist has wrong value type (%{public}@). Ignoring.
Entry in subscribed calendar info inner dictionary from backup Info.plist has wrong key type (%{public}@). Ignoring.
Unexpected property (%{public}@) in subscribed calendar info inner dictionary from backup Info.plist. Ignoring.
Entry in subscribed calendar info inner dictionary from backup Info.plist has wrong value type (key = %{public}@, type = %{public}@). Ignoring.
Local subscribed calendar in database (ROWID=%d) has no account ID. Will not update account for this subscription
Did not find subscription account info for local subscribed calendar in database (ROWID=%d, accountId= %{public}@). Will not update account for this subscription
Failed to create subscription account after restore: %@
Failed to remove subscribed calendar account after restore: %@
Failed to save subscribed calendar account after restore: %@
Removing subscribed calendar %d because we failed to save its account
Failed to save local subscribed calendar changes to database after restoring from .icbu
Failed to get existing subscribed calendar accounts when attempting to update subscribed calendars for .icbu restore: %@
Account ID %{public}@ with persona ID %@{public}@ is data separated, but we couldn't get a container for it.
Account ID %{public}@ will be migrated to %@
Account ID %{public}@ successfully migrated to %@
Account ID %{public}@ NOT migrated. Migration failed.
Account ID %{public}@ does not need to be migrated out of the main database
Can't create directories for new separated database for account %{public}@ at path %@: %@
Found old database file in directory for account %{public}@ to be migrated to (%@). Deleting it.
Unable to remove old database for account %{public}@: %@
Unable to remove old database-shm for account %{public}@: %@
Database already exists for persona %{public}@; also migrating account %{public}@ to the same database
No record store.
No sqliteDB
Couldn't get writer connection to database
Couldn't create database for account %{public}@ in directory %@
Couldn't insert aux db reference into main db
Could not save database.
Could not get account persistent id for store. store uid = %d
Could not get attachment container for store. store uuid = %{public}@, legacy attachment container = %@
Could not get attachment container path for store. store uuid = %{public}@, legacy attachment container = %@
Legacy attachment container for store does not exist. store uuid = %{public}@, legacy attachment container for store path = %@
Legacy attachment container for store is not a directory. store uuid = %{public}@, legacy attachment container for store path = %@
Could not get new calendar data container. store uuid = %{public}@
Could not get new attachment container. store uuid = %{public}@, new calendar data container = %@
Could not get new attachment container for store. store uuid = %{public}@, new attachment container = %@
Could not create new attachment container for store if needed. error = %@, new attachment container for store = %@
Could not move attachments for store. error = %@, legacy attachment container for store = %@, new attachment container = %@, attachment info = %@
Could not get attachment. attachment uuid = %{public}@, local relative path = %{public}@
Setting file size for attachment uuid = %{public}@, attachment url = %@
Could not get file size. error = %@, attachment uuid = %{public}@, attachment path = %@
Could not get attachment. attachment uuid = %{public}@, attachment path = %@, file size = %@
Could not get attachment for file name = %@
Could not get new attachment local relative path. attachment uuid = %@ new attachment url = %@, new calendar data container = %@
New container path is nil. new attachment container = %@
Fixing up dataclass protection for calendar attachments
Could not get legacy attachment container
Setting dataclass protection for attachment: %@
Error encoding user info: %@
Error decoding user info: %@
Failed to open main db.
No store or aux db entry for account: %@.
Account [%{public}@, persona=%{public}@] is not data-separated. Using main DB.
Found existing aux database with persona [%{public}@] for account [%{public}@]. Attaching account to existing auxiliary database.
Account [%{public}@, persona=%{public}@] is data-separated. Attempting to create aux DB
Unexpected NULL path for auxDatabase [%d]
Failed to open aux db [%d] with cached path %@
Attempting to derive path for auxDatabase [%d], persona: %{public}@
AuxDatabase entry [%d] missing persona ID
Couldn't look up persona ID %{public}@
Account [%{public}@] with persona [%{public}@] is not data-separated, but we have an aux db entry in the main db. Removing the aux entry
Unexpected nil auxURL for account %{public}@ with persona %{public}@.  Giving up.
Failed to create aux db with derived path [%@] for account: %{public}@ persona=%{public}@.  Giving up.
Failed to delete attachments for deleted store at path %@: %@
Deleted attachments for deleted store at path %@
Failed to delete attachment at path %@: %@
Deleted attachment at path %@
Setting until date: %@ (%f)
Setting by day days array: %@
Setting by month array: %@
setting by month day array: %@
Setting by weekno array: %@
Setting by year day array: %@
Setting by set pos array: %@
End date for component %@%{public}@%{public}@ is invalid; DTEND:%{public}@ is before DTSTART:%{public}@. Setting DTEND to %{public}@ instead.
NULL 'entity' given.  Will not acquire a common entity functionality handler.
Could not find the raw type of the given entity.  Will not get a common entity functionality handler property ID.
Could not find the property ID for the entity with raw type [%@].  Will not get a common entity functionality handler.
Error adding CalNoteAttachmentDeleted function: %i
Error adding CalNoteStoreDeleted function: %i
Failed to change dataclass of attachment at path %@. Error = %@
Couldn't create a local attachment path for the attachment file %d
Failed to unzip attachment (error: %@).
Failed to copy attachment (error: %@).
Set local relative path for attachment. file UUID = %{public}@, local relative path = %@, local absolute url = %@
Could not set local relative path for attachment. file UUID = %{public}@, local relative path = %@, local absolute url = %@
Unable to archive data: %@
Changing store uid %d persistent id from %{public}@ to %{public}@: couldn't get attachment base URL, so won't migrate any attachments.
Couldn't rename attachment directory from %{public}@ to %{public}@: %@
Attachment cleanup: Ignoring error for url %@: %@
Error checking if %@ is a directory: %@
Error checking creation date for %@: %@
Attachment cleanup: removed orphaned file %@
Attachment cleanup: failed to remove orphaned file %@: %@
Attachment cleanup: skipping removing file because it is archived and is too young: %@
Attachment cleanup: removed empty directory %@
Attachment cleanup: failed to remove empty store directory %@: %@
Attachment cleanup: Unable to get persistent ID for store %d (%@). Aborting cleanup.
Attachment cleanup: Unable to get URLs for store %d (%@). Skipping cleanup for it
Error getting name of %@: %@
Attachment cleanup: found and removed orphaned store directory %@
Attachment cleanup: failed to remove orphaned store directory %@: %@
Attempting to save an attachment file that is not in any store
Attachment failed to copy to local storage: %d
Unable to create directories to attachment directory "%{public}@"
Could not get local url for components. local absolute url = %@, calendar data container url = %@
Could not set file size for attachment. error = %@, file uid = %d, local absolute path = %@
Wrong number of arguments for CalNoteAttachmentDeleted
Unable to find store with storeUID when attachment deleted: %d
Wrong number of arguments for CalNoteStoreDeleted
%s: No default set. Getting first suitable read-write calendar.
%s: Failed to find either default or suitable read-write calendar. Making one.
%s: Failed to find a non-hidden calendar for %s. Making one
%s: Failed to get default calendar for reminders. Making one
New calendar not assigned an ID when migrating calendar. This won't end well!
Client %{public}@ (%{public}@) is adding a calendar with properties: [rowid=%i, title=%@, external_id=%@, external_mod_tag=%{public}@, external_id_tag=%{public}@, UUID=%{public}@, sync_token=%{public}@]
Setting default calendar to %i (%@, "%@" in store %i db %i). Reason: %{public}@
Ignoring request to set default calendar as the new value is the same as the old value
Cleaning out keep away from server calendars
Dropping calendar "%@" (%@) from merge since we don't want it going up to the server
Creating new Cal store with External ID: %{public}@
Don't know what CalStoreType to set for ACAccountType %{public}@
No new Cal store: CalDatabaseCreateStore failed.
Found existing Cal store. Updating...
Removing calendar with name: %@
Could not clear events from store for account with identifier %{public}@ because no store was found.
Calendars DCO was asked to enable the local store if necessary.
Account with identifier %{public}@ is syncing calendars. Will not enable local store!
Enabling local store for events because we didn't find any syncing accounts
Removing store because events were disabled or the account was deleted.
Removing store because the account was deleted.
Attempting to move local store events into a sync store.
Attempting to move sync store events into local store.
Error decoding extra parameters for attendee: %@
We have a saved value for an unrecognized parameter %{public}@ on an attachment, but the property already has a parameter with that name! _isSavedParameter may be out of date.
_CalEventOccurrencesExistInDateRange is not making any progress. currentStartAbs=%f, lastStartAbs=%f, duration=%u, tz=%{public}@
Given 'relation' is NULL.  Will not eliminate related object reference.
Given 'relation' is NULL.  Will not get related object reference.
Given 'relation' is NULL.  Will not set related object reference.
NULL 'entity' given.  Will not generate a debug description.
typeId != CPRecordGetTypeID(), CPRecordGetTypeID(): %lu, typeId: %lu
NULL 'participant' given.  Will not generate a debug description.
Record with a rowID of [%@] found.  Record pointer address: [%p].  Will not load record ID.
Record with pointer address of [%p] was marked as being deleted.
Record with pointer address of [%p] was not marked as being deleted.
NULL 'event' given.  Will not generate a debug description.
Rectifying recurrence series privacy levels for event with ID: [%d] title: [%@]
Privacy level change to [%@] detected on event with ID: [%d]
The store for the event with ID [%d] requires the same privacy level across the recurrence series: [%@]
Privacy level override for event with ID [%d] is [%@].
Event with ID [%d] is a detached event.  Grabbed the master event with ID [%d].
Event with ID [%d] is a master event.
Master event with ID [%d] for event with ID [%d] had its privacy level changed from [%@] to [%@].
Detached event with ID [%d] associated with event with ID [%d] had its privacy level changed from [%@] to [%@].
Attempting to add an event (ROWID = %d, startDate = %{public}@) as a detachment of itself. Ignoring.
No event given.  Will not determine travel advisory eligibility.
Event is not a candidate for travel advisories because it is a cancelled event.  Summary: [%@]
Event is not a candidate for travel advisories because it is an all-day event.  Summary: [%@]
Event is not a candidate for travel advisories because the user declined the event.  Summary: [%@]
Event is not a candidate for travel advisories because its travel advisory behavior is not 'automatic' or 'enabled'.  Summary: [%@]
Event is not a candidate for travel advisories because its calendar has all event alerts disabled.  Summary: [%@]
NULL 'event' given.  Will not determine immediate eligibility for travel advisory
Could not fetch predicted location of interest for event title: [%@], event location: [%@], calendar identifier: [%@], error: [%@]
failed to create statement for reading with query: `%@`
Multiple relationships to the same location: Location is the same value as clientLocation. recordID=%i, location=%i, clientLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: Location is the same value as startLocation. recordID=%i, location=%i, startLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: Location is the same value as endLocation. recordID=%i, location=%i, endLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: startLocation is the same value as endLocation. recordID=%i, startLocation=%i, endLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: clientLocation is the same value as startLocation. recordID=%i, clientLocation=%i, startLocation=%i, currently setting %i; original value for property set = %i
Multiple relationships to the same location: clientLocation is the same value as endLocation. recordID=%i, clientLocation=%i, endLocation=%i, currently setting %i; original value for property set = %i
Error unarchiving local structured data. Error: %@
_CalEventCopyUncachedCalendar: called with NULL event
%s: externalID is null and it wasn't intended to be so. exiting this function now to avoid crash.
Couldn't create a path to write the inline attachment into
Error writing inline attachment (%@) to disk: %@
Error setting file data (%@) in database
Found an unrecognized parameter: %@
We have a saved value for an unrecognized parameter %{public}@ on an attachment, but the property already has a parameter with that name! _isSavedAttachmentParameter may be out of date.
Memory mapping the file at %@
Can't get file system representation for backup file path %@
Memory mapping a zero byte file
Successfully mapped %@ (%lld bytes)
Could not mmap %@: %s
Unmapped %zu bytes
Failed to serialize Exchange calendar item external representation data: %@
Failed to deserialize Exchange calendar item external representation data: %@
Got unexpected data type (%{public}@) after deserializing Exchange calendar item external representation data
Exception caught while deserializating Exchange calendar item external representation data: %@
Searching for an event with a unique identifier matching %@
Found identity match for event %@ in calendar %@
The local event has a greater sequence number. Refusing to update the event
The local event has a greater last modified date. Refusing to update this event
ignoring imported event because the local sequence number (%lu) is greater than the imported sequence number (%lu)
ignoring imported event because the local dtstamp number (%f) is greater than the imported dtstamp (%f)
Don't create a new event in case of METHOD:REPLY in ics.
Couldn't find an existing event in the calendar database. Creating a new one.
Couldn't update CalEvent from icsEvent %@
Found identity match for task %@ in calendar %@
The local event has a greater dtstamp. Refusing to update this event
Couldn't find a task with external id %@ in the calendar database. Creating a new one.
Couldn't update CalTask from icsEvent %@
ICSEvent has %lu detached events
Setting %d as the original event for %d
Encountered an unknown ICSComponent in the calendar: %@
Component not found for component key: [%@].  Attempting to create a phantom master.
Phantom master with UID [%@] is scheduled to be added already.  Will not create phantom master.
Creating a phantom master with UID: [%@].
[%lu] Phantom masters were created.  Adding them to the list of components.
Import of compressed iCalendar data requested.  DataLen: %d
Import of iCalendar data requested.  Data: [%@]
Could not parse ICSDocument from data: %@
Removing %lu leftover detachments with unique identifiers %@
Compression of ICS failed. Somehow.
iCalendar items will be generated from database items.  occurrenceDate: [%@]
Couldn't create ICSComponents for cal item with uid %d
Could not convert the original CalEvent
This event has %@ detached events
Could not convert the detached event with the cal uid %d
Could not convert the original calTask
Failed to create MATCH_DATE_RANGE function in CalCopyRelativeNonRecurringEventAlarmsInDateRange, with error code: %i
Failed to create MATCH_DATE_RANGE function in CalCopyRelativeRecurringEventAlarmsInDateRange, with error code: %i
Failed to start accessing security scoped URL wrapper when trying to create a bookmark for it: %@
MatchDateRangeCallback received wrong number of args. [%i args]
icsItem is nil. There's nothing for us to do
Cannot update a NULL calendar item
VCNotification: Searching for room attendee among %d attendees. Searching for room name: %@ (original) or %@ (updated)
VCNotification: Found a matching virtual conference room attendee.
VCNotification: Found a room attendee, but the name does not match: %@
VCNotification: Not searching for room attendees because we currently have no attendees.
VCNotification: Not searching for room attendees because we have no virtual conference titles.
VCNotification: Adding virtual conference invitation changed flag because a virtual conference was added (%@)
VCNotification: Adding virtual conference invitation changed flag because a virtual conference was deleted (%@)
VCNotification: Adding virtual conference invitation changed flag because a virtual conference was changed
VCNotification:   Old virtual conference: %@
VCNotification:   New virtual conference: %@
VCNotification: Not adding virtual conference invitation changed flag because we found a matching room attendee.
Updating attendees in the database for calendar item: [%@]
Removing [%ld] existing attendees that couldn't be uniquely mapped to by their address from calendar item: [%@]
Removing attendee [%@] on event with UID: [%@]
Adding [%@] attendees from the iCalendar object onto the calendar item: [%@]
Adding attendee [%@] for event with UID [%@]
Updating attendee [%@] for event with UID [%@]
Couldn't update the CalAttendee from %@
Removing [%ld] attendees that weren't in the updated ICS for calendar item: [%@]
Couldn't update organizer from %@
Couldn't create a new CalOrganizer object
Encountered an unknown subcomponent for an ICSComponent: %@. Dropping it on the floor
Couldn't update calendar alarm from ICSAlarm: %@
Couldn't update the CalRecurrenceRef from %@
Generating iCalendar objects for attendees on event: [%@]
Generating iCalendar object for attendee: [%@]
Couldn't create an icsUser from attendee %d
Couldn't create an ICSRecurrence
Setting %ld exception dates on the ICS component
Couldn't create an ICS attachment from attachment %d
Error unarchiving alarm metadata: %@
INV: Invalidating conference %d
Error repairing local store, could not get record store from database %p
Error repairing local store, could not get sqlitedb from recordStore %p
Error repairing local store, could not get coonnection from sqlitedb %p
Error repairing local store, could not start a transaction
Flushing change in-memory change tracking and posting a database change notification because we just repaired the local store
Found %i native stores.  Deleting all but store ID %i.
Error deserializing cached external store info: %@
Deserialized data wasn't a dictionary (it was a %{public}@
Couldn't serialize external info: %@
Attempting to set a path (%{public}@) with CalStoreSetConstraintsName. Only the name should be supplied without an extension.
Attempting to set a file name with .plist extension (%{public}@) with CalStoreSetConstraintsName. Only the name should be supplied without an extension.
Attempting to set an unrecognized constraints name (%{public}@) with CalStoreSetConstraintsName. The given name should be a valid .plist resource in CalendarFoundation.
CalDatabaseCopyStoreWithExternalID: no results for query
CalDatabaseCopyStoreWithExternalID: query resulted in nil results
CalDatabaseCopyStoreWithExternalID: failed to get sqlite database
CalDatabaseCopyStoreWithExternalID: failed to create query
CalDatabaseCopyStoreWithExternalID: externalID is nil
database was busy or locked; sleeping for 1 second
Ignoring attempt to set allowsTasks to %d on store %{public}@. Forcing to NO
Failed to load constraints plist (%{public}@): %@
Failed to load constraints data (%{public}@)
Failed to get URL for stored constraints name: %{public}@
Failed to create statement from SQL "%{public}@".
Migration didn't find the default local store (sqlite returned %i). Inserting a new default local store.
The default local store has type %i. Will move it aside and insert a new default local store
Couldn't get statement for sql "%@"
Error finding next rowID: %i
Couldn't get statement for sql "%{public}@"
Unexpected result %i for sql "%{public}@"
Saving a store with no persistent ID (source identifier). UID = %i, original persistent ID = %@
Subscribed calendar store not found. Creating one now
Failed to save database after creating subscribed calendar store
Found %li subscribed calendar stores. Keeping store with ID %i and deleting the rest.
Deleting duplicate subscribed calendar store: %@ (%i)
Didn't find any store at all when trying to clean up duplicates.
Unknown entity type (%i) in -[CADObjectID initWithEntityType:entityID:databaseID:]
Unknown entity type (%i) in -[CADObjectID initWithCoder:]
icsEvent is nil. There's nothing for us to do
Cannot update a NULL Cal event
CalCalendarItemUpdateFromICSComponent failed
%s - No existing suggested event info for calEvent %@ and icsEvent %@, creating one
%s - Existing suggested event info %@ found for calEvent %@ and icsEvent %@
Setting a recurrence_id based on %f
Couldn't update the calendar item components of event %d
Using uid from owning event: %@
Owning event had no uid. Creating a new one: %@
This event has no original event. Creating a new uid %@
Failed to serialize Exchange calendar external representation data: %@
Failed to deserialize Exchange calendar external representation data: %@
Got unexpected data type (%{public}@) after deserializing Exchange calendar external representation data
Exception caught while deserializating Exchange calendar external representation data: %@
Initializing calItem metadata
Found an unrecognized property: %@
We have a value for %{public}@, but the item already has properties with that name! _isSavedProp may be out of date.
We have a value for parameter %{public}@ on %{public}@, but the property already has a parameter with that name! -isRecognizedParameter:forProperty:inComponent: may be out of date.
Failed to unarchive external data for item. Error = %@
Unknown object in external data for item.  Dropping it.  object is %@
exception %@ while trying to unarchive external data for item
Error archiving item metadata: %@
Error archiving external representation dictionary: %@
Failed to unarchive external data to fetch item metadata. Error = %@
Failed to unarchive extra properties from external data. Error = %@
exception %@ while trying to convert item
Location to be removed (%i) has an owner of calendar item %i, but that calendar item doesn't reference that location.
NULL 'location' given.  Will not return a full display string.
Location is being saved with no valid inverse relationship. location id = %i; alarm_owner_id = %i; item_owner_id = %i; start_location_owner_id = %i; end_location_owner_id = %i; client_location_owner_id = %i; previous alarm_owner_id = %i; previous location_owner_id = %i; previous start_location_owner_id = %i; previous client_location_owner_id = %i;
Got an invitation response of %d for calendar %@, so we're going to remove it
Handling invite reply notification %@
Ignoring invite reply notification for an unknown calendar: %@
Invite reply has firstName: %@, lastName: %@
Invite reply has no names. Using the provided address of %@
This looks like a mailto address. Search the addressbook for a contact with the address %@
This looks like a telephone number. Search the addressbook for a contact with the phone number %@
Couldn't set url for the event %@ because it doesn't exist in our database
Occurrence cache trim and extend requested.
Could not acquire a database object.  Will not trim and extend the occurrence cache.
Could not open a connection to the database.  Will not trim and extend the occurrence cache.
EventKitOC: Unable to start transaction. Aborting trim/extend.
Time zone changed during trim and extend. (was "%{public}@", now "%{public}@") Will do a full rebuild instead.
Occurrence cache start moved backwards (from %{public}@ to %{public}@) during trim and extend. Will do a full rebuild instead.
The occurrence cache has drifted too far out of date. Trimming and extending NOW. (start was %{public}@ and should be %{public}@; end was %{public}@ and should be %{public}@)
Deferring occurrence cache update because the occurrence cache isn't that far out of date yet. (start was %{public}@ and should be %{public}@; end was %{public}@ and should be %{public}@)
Trim and extend complete in %f
Trim and extend not needed
Unable to begin transaction
Could not begin transaction
Couldn't begin transaction
Unable to start transaction
EventKitOC: Checking if we need to rebuild
EventKitOC: Clearing recurrence rule cached end dates
EventKitOC: Rebuilding cache in time zone %@...
EventKitOC: Cache rebuilt in %f
The occurrence cache is not valid.  Will not rebuild the occurrence cache.
Could not acquire the database lock.  Will not rebuild the occurrence cache.
Unable to start transaction.  Will not rebuild the occurrence cache.
The occurrence cache was successfully rebuilt.
Preparing to trim and extend the occurrence cache.  newStartDate: [%@] oldEndDate: [%@] newEndDate: [%@]
Removing occurrences in the occurrence cache before [%@]
Rebuilding occurrence cache from start date [%@] to end date [%@].
Found [%@] non-recurring events in the date range.
Found [%@] recurring events possibly in the date range.
Occurrence cache candidate event fetching took [%@] seconds and found [%@] total events.
Analyzing occurrence cache candidate event.   Row ID: [%@]  Title: [%@]
Event with row ID [%@] is not displayable.  Will not insert into occurrence cache.
Found [%@] occurrence dates in the date range for candidate event with row ID [%@].  Number of days spanned: [%@]
Inserting an event with id -1 into the occurrence cache in _CalEventOccurrenceCacheGenerateOccurencesInDateRange. event=%@
Determining if occurrence chunk with date [%@] for event with row ID [%@] should be included in the occurrence cache.
Occurrence cache rebuilt.  Took [%f] seconds.  Was cache modified: [%@]
Skipping cache insert for event with id == -1
Inserting occurrence into occurrence cache.  event_id: [%@],  calendar_id: [%@], store_id: [%@], occurrence_date: [%@], occurrence_start_date: [%@].  occurrence_end_date: [%@], day: [%@]
Attempted to insert a duplicate occurrence into the occurrence cache. event_id: [%i], calendar_id: [%i], store_id: [%i], occurrence_date: [%f], occurrence_start_date: [%f], occurrence_endDate: [%f], day: [%f]
Skipping invalid entry in occurrence cache occurring at %f with eventID -1
Failed to get SQL statement when fetching event occurrences
Failed to get db handle when fetching event occurrences
Deleting all data from the 'OccurrenceCache' table.
Deleting all data from the 'OccurrenceCacheDays' table.
Acquired occurrence cache range.  Start date: [%@].  End date: [%@]
EventKitOC: Event duration is too long, not adding to occurrence cache (asked to add %li occurrences each with %i days).
Inserting an event with id -1 into the occurrence cache in _CalEventOccurenceCacheProcessAdds. event=%@
nil 'observer' given.  Will not add destruction observer.
nil 'observer' given.  Will not remove destruction observer.
Couldn't update the calendar item components of task
No UUIDs were given.  Will not push any calendar items to Spotlight in batches.
Pushing [%@] calendar items in batches of [%@]
Attempting to push calendar items to Spotlight.  Calendar item UUIDs: [%@]
Could not find a calendar item with UUID [%@].  Will not push this item to Spotlight.
%s called on an an event with no suggested event info (probably not a suggested event)
Error unarchiving structured data. Error: %@
Event is missing value for key to determine if suggested event is eligible for notification, event unique identifier = %{public}@
includeLocationProperty should not both be true for property %zd.
updating location type %zd, but icsItem is type '%@'
Ignoring invalid coordinates: %@
Ignoring unexpected location URL scheme: %@.
UpdateICSStructuredLocationFromCalLocation dropping mapkit handle because it exceeds the max length restriction on many servers.
Error checking for changes to copy: %d
_CalDatabaseRegisterClientForPersistentChangeTracking - ClientIdentifier: [%@]
_CalDatabaseRegisterClientForPersistentChangeTracking - ClientIdentifier is NULL
_CalDatabaseRegisterClientForPersistentChangeTracking - clientIdentifierCString is NULL
_CalDatabaseRegisterClientForPersistentChangeTracking - clientIdentifierCString string is empty
Couldn't start transaction to get changed ek objects
Unable to start transaction before clearing superfluous changes.
Committing after clearing superfluous changes.
Unable to start transaction before cleaing change history
No class for entity type: %d
CalDatabasePersistentChangeTracking: unable to commit transaction (error %d)
Moving client cursor for %@ forward from %i to %i because all changes in those sequences have been individually consumed.
Client cursor for %@ is still %i.
Couldn't start transaction before fetching changes since sequence number
Unable to allocate space for %zu object IDs
Unable to allocate space for %zu object states
Unable to allocated %zu bytes for returning changes
Failed to allocate memory for changePropertiesByRecord mapping desc: %p, cstring: %p, nsstrings: %p, types: %p
Unsupported record descriptor %s
Failed to allocate property values array
Unsupported type %i for key %@
ClearSuperfluousChanges
Unable to start transaction before cleaing changes
Couldn't start transaction to enumerate unconsumed changes.
__ClientRowHandler - clientIdentifier is nil
saving a category link with NULL category: relation=%p, record=%@
INV: Invalidating attachment %d
Unknown property id %i in CalLoadAttachmentPropertyFromFileProperty
Device lock state changed.  New 'dataIsAccessible' state: [%@].
The given ICSDate (%@) is not of any known type
event has occurrence change: %@
event does NOT have occurrence change: %@
process: ++++ %@ (contains %lu occurrences)
Rejecting candidate event for iTIP message because it is on a calendar that does not allow scheduling %@
Could not find a valid event in the calendar database with uid %@
Ignoring inbox item %@ because it's detached but not significantly
Event with identifier %@ handled message.
Event with identifier %@ didn't handle the message; looking at the next event.
process: ~~~~ leaving message: %@
Ignoring cancellation for event we never responded to (%@)
Ignoring inbox item %@ because it's for an event that is not significantly detached
Setting needs notification for event %@ because an iTIP request was found in the inbox
Ignoring inbox item %@ because it doesn't look important
Ignoring inbox update for %@ because it is in the past
Found a cancellation for an event (%d) that was proposed or invitee not yet accepted. Hiding alert for this change.
Marking cancelled event %d as needing a notification
softlink:o:path:/System/Library/PrivateFrameworks/CalendarMigration.framework/CalendarMigration
CalDatabaseInitializationConfiguration
CalScheduledTaskCache_TimeZoneFetchContext
CalChangeFilteringMigrationAccountStore
CalMigrationAccountStore
CalMigrationReadOnlyAccountStore
NSObject
CalChangeFilteringMigrationAccount
CalMigrationAccount
CalMigrationReadOnlyAccount
CaliTIPMessage
CalAccountStoreChangeFilterDelegateForLegacyICBURestore
CalChangeFilteringMigrationAccountStoreDelegate
CADObjectChangeIDHelper
CDBAttachmentInfo
CDBAttachmentMigrator
CalAttachmentFileCleanupContext
CalSearch
EKMSUIDAdditions
CalCalendarLocalAccountInfo
CDBAccountInfo
CDBiCalFixUps
CalDatabaseWriteLock
CDBPreferences
CalACMigrationAccount
CalStoreSetupAndTeardownUtils
CalExchangeCalendarItemExternalRepresentation
CalExchangeSerializable
CalAlarmMetadata
CDBRecurrenceGenerator
CalACMigrationAccountStore
CADObjectID
NSCopying
NSSecureCoding
NSCoding
CalExchangeCalendarExternalRepresentation
CalItemMetadata
CalDAVNotificationHandler
EKCalendarFilter
CDBBundle
CalEventOccurrenceCacheRange
CDBCommonEntityFunctionalityHandler
CalMigrationToolOptions
CDBSpotlightUtilities
CalSingleDatabaseInMemoryChangeTimestamp
CalInMemoryTrackedDatabase
CalDatabaseInMemoryChangeTracking
CalAllFilteringMigrationAccountStoreDelegate
CADObjectChangeID
EKPersistentChangeStoreInfo
EKPersistentChangeStoreRowInfo
CalDatabaseIntegrityErrors
CDBDataProtectionObserver
CaliTIPHandler
CalIsAfterDate:
CDVStringByXMLUnquoting
T@"NSString",C,N,Gget_defaultCalendarID,Sset_defaultCalendarID:
CalDateByComponentwiseAddingSeconds:inCalendar:
TQ,R,N,V_myself
CalGregorianCalendarForTimeZone:
Tq,N,Gget_defaultCalendarStoreUID,Sset_defaultCalendarStoreUID:
CalIsAfterOrSameAsDate:
_createLocationIdsSearchContext
CalIsBeforeOrSameAsDate:
_filter
CalSimulatedDateForNow
_implementsCancellationCallback
CalTemporaryDirectoryAppropriateForURL:
_moveAttachmentsWithInfo:error:
ICSStringFromMethod:
_others
JSONObjectWithData:options:error:
_performCleanup
T#,R
account
T@"<CalCalendarDatabaseIntegrityErrorReportingDelegate>",&,N,V_delegate
allAccountTypes
T@"<CalMigrationAccount>",R,N,V_backingAccount
attachmentContainerWithBaseURL:
T@"ACAccount",R,N,V_account
base64EncodedStringWithOptions:
T@"CalDAVScheduleChangesProperty",&,N,V_scheduleChanges
bundleForClass:
T@"CalDeviceLockObserver",&,N,V_deviceLockObserver
calendarChanges
T@"ICSCalendar",R,N
changes
T@"ICSEvent",&,N,V_event
clients
T@"NSCountedSet",R,N,V_errors
containsString:
T@"NSDate",R,N,V_endDate
countForObject:
T@"NSDictionary",R,N,V_unrecognizedProperties
currentCalendar
T@"NSMutableDictionary",&,N,V_dict
T@"NSMutableDictionary",R,N,V_addedWrappedChildAccounts
defaultCalendarChangedTimestamp
T@"NSMutableDictionary",R,N,V_modifiedPropertyValues
defaultTimeZone
T@"NSMutableSet",R,N,V_removedWrappedAccountIdentifiers
dtstamp
T@"NSString",&,N
T@"NSString",&,N,V_minConsumedClientIdentifier
endDate
T@"NSString",C,N,Gget_defaultCalendarChangedReason,Sset_defaultCalendarChangedReason:
hasSize
T@"NSString",C,N,V_filename
initWithDomain:
T@"NSString",R,C
initWithString:
T@"NSString",R,N
isDirty
T@"NSTimeZone",&,N,V_previousTimeZone
isEquivalentTo:
T@"NSURL",&,N,V_directoryURL
locationChanged
T@"NSURL",R,C,N,V_url
makeUID
T@"NSURL",R,N,V_accountsDatabaseFile
numberWithBool:
T@"NSURL",R,N,V_homeDirectory
options
T@?,C,N,V_stateChangedCallback
percentComplete
TB,N,Gget_enableTravelAdvisoriesForAutomaticBehavior,Sset_enableTravelAdvisoriesForAutomaticBehavior:
routing
TB,N,Gget_sqlProfileLoggingEnabled,Sset_sqlProfileLoggingEnabled:
searchAttendees
TB,N,Gget_suggestedLocationsTestMode,Sset_suggestedLocationsTestMode:
secondMinConsumedSequenceNumber
TB,R,N
TB,R,N,V_waitForRemindersOnly
setConferences:
TB,V_searchAttendees
setDescription:
TB,V_searchParticipants
setMinConsumedClientIdentifier:
TQ,R
setUid:
Ti,N,V_minConsumedSequenceNumber
setWithObjects:
Ti,N,V_secondMinConsumedSequenceNumber
set_kCalPreferredDaysToSyncKey:
Ti,R,N,V_entityID
sharedReadWrite
Tq,N,Gget_LastConfirmedSplashScreenVersionViewed,Sset_LastConfirmedSplashScreenVersionViewed:
stringByAppendingPathComponent:
Tq,N,Gget_defaultCalendarDatabaseID,Sset_defaultCalendarDatabaseID:
summary
Tq,N,Gget_kCalRemindersPreferredDaysToSyncKey,Sset_kCalRemindersPreferredDaysToSyncKey:
trigger
Tq,R,N,V_backupBeforeCalendarMigration
updated
Tq,R,N,V_changeID
Tq,R,N,V_performCalendarMigration
weekday
Tq,R,N,V_performReminderMigration
x_apple_suggestionInfoTimestamp
URLByAppendingPathComponent:
.cxx_destruct
T@"NSArray",R,N
CalCalendarWithUnsanitizedCalendarIdentifier:
TB,R,N,GisTemporary,V_temporary
CalDateForNow
TQ,R,N,V_others
CalGregorianGMTCalendar
_backingAccount
CalIsBeforeDate:
_errors
CalOccurrencesForBirthday:inDateRange:
_generateUIDSetToShowCalendars:
CalStringByRemovingAutoComment
_loadedAccounts
ICSDataWithOptions:
_myself
ICSStringWithOptions:
_partialResults
LastConfirmedSplashScreenVersionViewed
_resetDatabase:
T@"<CalCalendarDataContainerProvider>",&,N,V_dataContainerProvider
address
T@"<CalChangeFilteringMigrationAccountStoreDelegate>",R,W,N,V_delegate
allKeys
T@"<CalMigrationAccountStore>",R,N,V_backingAccountStore
attendeeAddress
T@"CDBPreferences",&,N,V_preferences
birthdayStringForContactName:eventDate:birthDate:lunarCalendar:
T@"CalDatabaseInMemoryChangeTracking",R,N,V_database
bymonth
T@"CalPreferences",R,N,V_preferences
calendarDateByAddingComponents:
T@"ICSDocument",&,N,V_document
cleanup
T@"ICSEvent",R,N
containsObject:
T@"NSData",C,N,V_data
content
T@"NSDate",R,N,V_startDate
created
T@"NSHashTable",R,N,V_clients
dateTimeChanged
T@"NSMutableDictionary",R,N,V_addedWrappedAccounts
dealloc
T@"NSMutableDictionary",R,N,V_loadedAccounts
defaultProvider
T@"NSMutableSet",&,N,V_destructionObservers
deleted
T@"NSObject<OS_dispatch_queue>",&,N,V_lock
dtstart
T@"NSString",&,N,V_clientIdentifier
ekmsuidGMTDateToDateInTimeZone:
T@"NSString",&,N,V_parentAccountIdentifier
feature
T@"NSString",C,N,Gget_defaultCalendarName,Sset_defaultCalendarName:
hostURL
T@"NSString",C,N,V_searchTerm
initWithFormat:
T@"NSString",R,C,N,V_localRelativePath
isAuthenticated
T@"NSTimeZone",&,N,V_nextTimeZone
isDurationBased
T@"NSTimeZone",R,N,V_timeZone
isProxy
T@"NSURL",R,C,N,V_legacyURL
lowercaseString
T@"NSURL",R,N,V_accountsChangesFile
member:
T@"NSURL",R,N,V_destinationDirectory
numberWithLong:
T@"NSURL",R,N,V_sourceCalendarDirectory
payloadAsString
TB,N
release
TB,N,Gget_overrideParticipantRoleConstraint,Sset_overrideParticipantRoleConstraint:
scheduleChanges
TB,N,Gget_suggestEventLocations,Sset_suggestEventLocations:
searchLocations
TB,R
serviceWithDefaultShellEndpoint
TB,R,N,V_migrateUsingCalendarDaemon
setAuthorNames:
TB,V_iMIPImported
setDay:
TB,V_searchLocations
setDue:
TB,V_shouldMatchLocationsOnlyForEventSearch
setPreferences:
Ti,N,V_consumedSequenceNumber
setUrl:
Ti,N,V_options
setX_apple_structured_location:
Ti,R,N,V_databaseID
set_suggestedLocationsTestMode:
Ti,R,N,V_entityType
stringAddingTel
Tq,N,Gget_defaultCalendarChangedTimestamp,Sset_defaultCalendarChangedTimestamp:
stringByAppendingPathExtension:
Tq,N,Gget_kCalPreferredDaysToSyncKey,Sset_kCalPreferredDaysToSyncKey:
timeZoneChanged
Tq,N,Gget_privacyPaneHasBeenAcknowledgedVersion,Sset_privacyPaneHasBeenAcknowledgedVersion:
Tq,R,N,V_backupBeforeReminderMigration
uppercaseString
Tq,R,N,V_deleteMigratedData
visible
Tq,R,N,V_performCleanup
x_apple_suggestionInfoOpaqueKey
URIRepresentation
x_apple_suggestionInfoUniqueKey
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLByDeletingPathExtension
URLPathAllowedCharacterSet
URLWithString:
UTF8String
UUID
UUIDString
_UIDAntiSetWithCalendars:
_UIDSetWithCalendars:
_account
_accountIdentifier
_accountTypeIdentifier
_accountWithIdentifier:preloadedBackingAccount:
_accountsChangesFile
_accountsDatabaseFile
_addCalendarUIDsFromPrefs:toSet:database:
_addCalendarWithUID:toSet:database:
_addCalendarsForStoreWithUID:toSet:database:
_addFilterToQuery:creator:userInfo:
_addMatchedEventIds:
_addMatchedLocationIds:
_addMatchedParticipantIds:
_addedWrappedAccounts
_addedWrappedChildAccounts
_attachmentInfoForLegacyAttachmentURL:newAttachmentContainerForStore:newCalendarDataContainer:database:attachmentUUID:
_attachmentUUIDsToDelete
_backingAccountForAccount:
_backingAccountStore
_backupBeforeCalendarMigration
_backupBeforeReminderMigration
_calDAVInfoStringForTitle:
_calculateDiffsForCalEvent:icsEvent:inMessage:
_calendarUIDs
_changeCount
_changeID
_changedAttributesFromCalendarChanges:
_changes
_cleanKeepAwayFromServerCalsInStore:
_clearAllEventsFromStore:inDatabase:
_clientIdentifier
_clients
_consumedSequenceNumber
_copyCalendarForReplyItem:inDatabase:store:calendarHomeURL:
_copyNotificationWithExternalID:inCalendar:withDatabase:recordIDMap:
_copyNotificationWithUniqueIdentifier:inCalendar:orStore:withDatabase:recordIDMap:
_copyOccurrenceDatesWithBirthdayEvent:startDate:endDate:timeZone:limit:locked:
_copyStoreForAccountWithIdentifier:inDatabase:
_copyStoreWithExternalIdentifier:inDatabase:
_createEventIdsSearchContext
_createNewContainerIfNeeded:error:
_createNotificationWithInviteStatus:inDatabase:
_createParticipantIdsSearchContext
_createResourceChange:withType:forNotification:withRecurrenceID:database:store:calendarHomeURL:
_createSearchContext
_data
_dataContainerProvider
_dataSink
_dataSourceDeallocLock
_database
_databaseID
_dateToStartShowingResultsSentToDataSink
_delegate
_deleteEntireContainer
_deleteEventIdsSearchContext:
_deleteLocationIdsSearchContext:
_deleteMigratedData
_deleteParticipantIdsSearchContext:
_deleteSearchContext:
_destinationDirectory
_destructionObservers
_deviceLockObserver
_deviceLockStateChanged
_dict
_directoryURL
_document
_durationForEvent:
_enableLocalStoreIfNecessaryIgnoringAccount:inDatabase:accountStore:
_endDate
_entityID
_entityType
_event
_filename
_fixEndDateForEvent:withOriginalEvent:detachments:
_generateUIDSetToFilterAllCalendars
_generateUIDSetToFilterCalendars:
_generateUIDSetToShowCalendarUIDs:
_getApplicationSearchResults:
_getAttendeesSearchResults:
_getEventsSearchResults:
_getLocationSearchResults:
_getParticipantsSearchResults:
_handleInviteNotification:withUid:serverURL:syncKey:database:store:calendarHomeURL:notificationCalendar:notificationCalendarURL:recordIDMap:
_handleInviteReply:withUid:serverURL:syncKey:owningNotification:database:store:calendarHomeURL:notificationCalendar:notificationCalendarURL:contactsProvider:recordIDMap:
_handleResourceChanged:withUid:serverURL:syncKey:database:store:calendarHomeURL:notificationCalendar:notificationCalendarURL:recordIDMap:
_homeDirectory
_iMIPImported
_infoForAttachmentsInLegacyAttachmentContainerForStore:newAttachmentContainerForStore:newCalendarDataContainer:database:
_initWithHomeDirectory:sourceCalendarDirectory:destinationDirectory:migrateUsingCalendarDaemon:waitForRemindersOnly:performCalendarMigration:performReminderMigration:performCleanup:deleteMigratedData:backupBeforeCalendarMigration:backupBeforeReminderMigration:saveAccountsChangesToFile:accountsDatabaseFile:
_inviteStatusFromString:
_isFilteringAllWhileLocked
_lastPrunedTimestamp
_legacyURL
_localRelativePath
_lock
_lp_URLWithUserTypedString:relativeToURL:
_matchedEventsSet
_matchedLocationsSet
_matchedParticipantsSet
_mergeEntityType:fromStore:toStore:inDatabase:
_migrateUsingCalendarDaemon
_minConsumedClientIdentifier
_minConsumedSequenceNumber
_modifiedPropertyValues
_moreResultsAvailable
_moveAttachmentWithInfo:error:
_moveAttachmentsForStore:fromLegacyAttachmentContainer:calendarDataContainerProvider:database:
_moveAttachmentsFromLegacyAttachmentContainer:calendarDataContainerProvider:database:
_nextIndex
_nextTimeZone
_notifyDestructionObservers:
_options
_parentAccountIdentifier
_partialCachedDays
_partialCachedDaysIndexes
_partialCachedOccurrences
_performCalendarMigration
_performReminderMigration
_preferences
_prepareForCalRecurrence:locked:
_previousTimeZone
_pushUpdatesForCalendarItemsWithUUIDs:database:
_pushUpdatesForCalendarItemsWithUUIDs:inBatchesOf:database:
_removedWrappedAccountIdentifiers
_scheduleChanges
_searchAttendees
_searchLocations
_searchParticipants
_searchString
_searchTerm
_secondMinConsumedSequenceNumber
_seed
_setFileSizeForAttachmentUUID:attachmentURL:database:
_setFileSizeForAttachmentsWithInfo:database:
_setInterestedDatabasePaths:forContext:
_setLocalRelativePathForAttachmentUUID:localRelativePath:database:
_setupForCalEvent:locked:
_shouldMatchLocationsOnlyForEventSearch
_sourceCalendarDirectory
_startDate
_startLoadingResults
_stateChangedCallback
_stopLoadingResults
_storeAttachmentContainer
_stringForTriStateOption:
_temporary
_timeZone
_unrecognizedProperties
_updateLocalRelativeURLForAttachmentsWithInfo:database:
_url
_waitForRemindersOnly
_whitelistedClassesForSecureCoding
absoluteString
absoluteTime
acceptedURL
accountDescription
accountID
accountPropertyForKey:
accountStore
accountType
accountTypeIdentifier
accountTypeWithIdentifier:
accountUsesDataSeparatedContainer:
accountWithIdentifier:
accountsChangesFile
accountsDatabaseFile
accountsWithAccountType:
accountsWithAccountTypeIdentifier:error:
acknowledged
action
addAttachmentToDelete:
addChangeset:clientID:onlySyncStatusChanged:
addDestructionObserver:
addIndex:
addObject:
addObjectsFromArray:
addedWrappedAccounts
addedWrappedChildAccounts
addressIsAccountOwner:
allObjects
allOccurrences
allParameters
allValues
allowChangesToExistingTopLevelAccount:
allowCreationOfTopLevelAccountWithTypeIdentifier:
allowedCalendars:contains:
alternateTimeProposal
anyObject
appendFormat:
appendSlashIfNeeded
appendString:
applyToComponent:
archivePathToFile:toFile:createPKZipArchive:error:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
attach
attachmentContainerForSourceIdentifier:calendarDataContainer:
attachmentsChanged
attemptMigrationWithCalendarDatabase:
attendee
attendeesChanged
authenticated
autorelease
backingAccount
backingAccountStore
backupBeforeCalendarMigration
backupBeforeReminderMigration
bitmapRepresentation
blockTitle
bookmark
boolValue
bundle
byday
bymonthday
bysetpos
bytes
byweekno
byyearday
cStringUsingEncoding:
calDAV_leastInfoStringRepresentationRelativeToParentURL:
calSearch:foundOccurrences:cachedDays:cachedDaysIndexes:
calSearch:showResultsStartingOnDate:
calSearchComplete:
calSearchShouldStopSearching:
calSyncingAccountUsingChildAccounts:
calendar
calendarDateByAddingSeconds:
calendarDateForDay
calendarDateInTimeZone:
calendarDateWithAbsoluteTime:timeZone:
calendarDateWithDate:timeZone:
calendarIDClauseForQueryWithVariableName:
calendarIdentifier
canonicalizePath:
caseInsensitiveCompare:
changeForOccurrence:
changeID
changeTrackingForDatabase:
changeTrackingForDatabaseWithPath:
changedBy
changedEntityIDsBetweenMinExternalTimestamp:minSelfTimestamp:maxExternalTimestamp:latestSelfTimestamp:client:changesAreSyncStatusOnly:
changedEntityIDsBetweenTimestamp:andTimestamp:latestTimestamp:client:changesAreSyncStatusOnly:
changedEntityIDsForDatabase:sinceTimestamp:latestTimestamp:changesAreSyncStatusOnly:
changedProperties
characterSetWithBitmapRepresentation:
characterSetWithCharactersInString:
childAccounts
childAccountsForAccount:withTypeIdentifier:
class
cleanupAuxDatabaseIfNeededForAccountID:auxDatabase:mainDatabase:
clearAllChangesets
clearAllEventsFromStoreForParentAccount:withChildren:inDatabase:
clientIdentifier
code
collectionChanges
collectionUpdates
commonName
compare:
compareCalendarServerAccess:withAccess:
completed
componentForKey:
componentKeys
componentOccurrencesForKey:
components
components:fromDate:
componentsAsString
componentsJoinedByString:
componentsSeparatedByString:
computeRecurrenceEndDate:
computeRecurrenceEndDateForCalEvent:recurrenceRule:locked:
conference
conferenceURLFromSources:
conferences
conformsToProtocol:
constraintsURLForName:
consumedSequenceNumber
containerForAccountIdentifier:
containerInfoForAccountIdentifier:
containerInfoForPersonaIdentifier:
containerURL
containsValueForKey:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
copy
copyItemAtPath:toPath:error:
copyItemAtURL:toURL:error:
copyOccurrenceDatesBetweenStartDate:endDate:timeZone:limit:
copyOccurrenceDatesWithCalEvent:startDate:endDate:timeZone:limit:locked:
copyOccurrenceDatesWithInitialDate:allDay:rangeStart:rangeEnd:timeZone:limit:
copyOccurrenceDatesWithInitialDate:calRecurrences:rangeStart:rangeEnd:timeZone:
copyStoreForAccount:withChildren:inDatabase:
copyString
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAccountWithAccountTypeIdentifier:error:
createChildAccountOfParent:withAccountTypeIdentifier:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
currentHandler
currentHash
cutype
data
dataContainerProvider
dataIsAccessible
dataRepresentationWithExistingMetaData:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithContentsOfURL:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
database
database:restoreGenerationChangedExternally:
databaseID
date
dateByAddingComponents:toDate:options:
dateByAddingDays:inCalendar:
dateByAddingTimeInterval:
dateByAddingYears:months:days:hours:minutes:seconds:
dateFromComponents:
dateFromICSString:
dateInTimeZone:fromTimeZone:
dateWithCalendarFormat:timeZone:
dateWithTimeIntervalSinceReferenceDate:
dayOfWeek:weekNumber:
daylightSavingTimeOffsetForDate:
debugDescription
debugStringForEvent:
decimalDigitCharacterSet
decodeBoolForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCalendarChangedReason
defaultCalendarDatabaseID
defaultCalendarID
defaultCalendarName
defaultCalendarStoreUID
defaultCityForTimeZone:
defaultManager
delegate
deleteAllSearchableItemsForBundleID:completionHandler:
deleteMigratedData
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
description
descriptionChanged
descriptionWithCalendarFormat:timeZone:locale:
deserializeConference:
destinationDirectory
destructionObservers
deviceLockObserver
dict
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithContentsOfURL:
dictionaryWithExternalRepresentationData:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
diffsAreImportant:
directoryURL
dirty
displayName
distantFuture
doScheduleChanges:applyToEvent:inCalendar:
document
doubleValue
drainLocalStoreInDatabase:
dtend
duration
earlierDate:
ekmsuidStringForYearMonthDay
elapsedTimeAsNumber:
emailAddress
enableTravelAdvisoriesForAutomaticBehavior
enabledForCalendarsDataClass
encodeBool:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endTimeChanged
entityID
entityName
entityType
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumeratorAtPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
errorWithDomain:code:userInfo:
errors
event
eventTimeZone
exceptionWithName:reason:userInfo:
exdate
externalRepresentationDataWithDictionary:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileSystemRepresentation
fileURLWithPath:
filename
filterQueryForKey:prefix:whereClause:creator:userInfo:
filterQueryForQueryString:creator:userInfo:
filteredArrayUsingPredicate:
filteredCalendars
firstName
firstObject
fixEndDates:
fmtype
freq
fullDisplayStringWithTitle:address:
fullNameForFirstContactMatchingEmailAddress:
fullNameForFirstContactMatchingPhoneNumber:
getBooleanPreference:defaultValue:
getFileSizeForPath:fileManager:error:
getIntegerPreference:defaultValue:
getOccurrenceChange:forEvent:inCalendar:
getResourceValue:forKey:error:
getValueForPreference:expectedClass:
get_LastConfirmedSplashScreenVersionViewed
get_defaultCalendarChangedReason
get_defaultCalendarChangedTimestamp
get_defaultCalendarDatabaseID
get_defaultCalendarID
get_defaultCalendarName
get_defaultCalendarStoreUID
get_enableTravelAdvisoriesForAutomaticBehavior
get_kCalPreferredDaysToSyncKey
get_kCalRemindersPreferredDaysToSyncKey
get_overrideParticipantRoleConstraint
get_privacyPaneHasBeenAcknowledgedVersion
get_sqlProfileLoggingEnabled
get_suggestEventLocations
get_suggestedLocationsTestMode
handleEvent:calEvent:eventID:database:message:accountInfo:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasBeenUnlockedSinceBoot
hasClients
hasFloatingTimeZone
hasMailto
hasPrefix:
hasSuffix:
hasTel
hasTimeComponent
has_LastConfirmedSplashScreenVersionViewed
has_defaultCalendarChangedReason
has_defaultCalendarChangedTimestamp
has_defaultCalendarDatabaseID
has_defaultCalendarID
has_defaultCalendarName
has_defaultCalendarStoreUID
has_enableTravelAdvisoriesForAutomaticBehavior
has_kCalPreferredDaysToSyncKey
has_kCalRemindersPreferredDaysToSyncKey
has_overrideParticipantRoleConstraint
has_privacyPaneHasBeenAcknowledgedVersion
has_sqlProfileLoggingEnabled
has_suggestEventLocations
has_suggestedLocationsTestMode
hash
havePerformedReminderMigrationCleanup
homeDirectory
hour
href
iMIPImported
identifier
inReplyTo
indexOfObjectPassingTest:
indexSearchableItems:completionHandler:
info
init
initFilteringAllWithDatabase:
initUsingCalendarDaemon
initUsingCalendarDaemonWaitingForRemindersOnly
initWithACAccount:
initWithAccountIdentifier:accountTypeIdentifier:
initWithAccountType:
initWithArray:
initWithBackingAccount:
initWithBackingAccountStore:delegate:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
initWithCalendar:
initWithCalendarDataContainerURL:
initWithCalendarIdentifier:
initWithCapacity:
initWithCoder:
initWithData:
initWithData:encoding:
initWithData:filename:
initWithData:filename:scheduleChanges:
initWithData:options:error:
initWithDatabase:
initWithDatabase:entityType:
initWithDatabase:entityType:calendarUIDs:
initWithDatabase:entityType:filteringCalendars:
initWithDatabase:entityType:filteringCalendarsWithUIDs:
initWithDatabase:entityType:showingCalendarsWithUIDs:
initWithDatabase:filter:dataSink:
initWithDatabase:showingCalendars:
initWithDatabase:showingCalendarsWithUIDs:
initWithDate:
initWithDawnOfTime
initWithDictionaryRepresentation:
initWithDirectoryURL:
initWithDisplayName:handles:handleIdentifier:
initWithDomain:readOnly:
initWithDomain:store:
initWithDuration:
initWithEmailAddress:
initWithEntityType:changeID:
initWithEntityType:entityID:
initWithEntityType:entityID:databaseID:
initWithExternalID:storeUUID:database:
initWithFrequency:
initWithHomeDirectory:
initWithHomeDirectory:destinationDirectory:performCalendarMigration:performReminderMigration:performCleanup:deleteMigratedData:backupBeforeCalendarMigration:backupBeforeReminderMigration:saveAccountsChangesToFile:accountsDatabaseFile:
initWithICSComponent:
initWithItemContentType:
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
initWithKeyOptions:valueOptions:capacity:
initWithLegacyURL:url:localRelativePath:
initWithName:
initWithName:protectionClass:bundleIdentifier:
initWithObjects:
initWithOptions:capacity:
initWithPassword:
initWithPhoneNumber:
initWithPreferences:
initWithReadOnly:
initWithRed:green:blue:
initWithReminderKitProvider:defaultsProvider:
initWithRootElementNameSpace:name:parseClass:baseURL:
initWithSourceCalendarDirectory:destinationDirectory:performCalendarMigration:performReminderMigration:performCleanup:deleteMigratedData:backupBeforeCalendarMigration:backupBeforeReminderMigration:saveAccountsChangesToFile:accountsDatabaseFile:
initWithStartDate:endDate:
initWithStartDate:endDate:timeZone:
initWithStateChangedCallback:
initWithStore:
initWithTimeIntervalSinceReferenceDate:
initWithTimestampForMyself:others:
initWithType:subtype:context:
initWithURL:
initWithURL:readonly:
initWithUTF8String:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
initWithValue:
initWithValue:type:
initWithWeekday:number:
initWithWeeks:days:hours:minutes:seconds:
initWithYear:month:day:
initWithYear:month:day:hour:minute:second:
initWithYear:month:day:hour:minute:second:timeZone:
insertObject:atIndex:
intValue
integerValue
intersectsRangeWithStartDate:endDate:allowSinglePointIntersection:
interval
inviteStatus
isAbsolutePath
isAddressMe:withAccountInfo:
isAfterDate:
isAllDay
isBeforeDate:
isBinary
isCalendarUIDVisible:
isCancelled
isCreate
isEnabledForDataclass:
isEqual:
isEqualToConference:
isEqualToData:
isEqualToDate:
isEqualToString:
isEqualToTimeZone:
isFileURL
isFilteringAll
isKindOfClass:
isLocalStoreEmptyInDatabase:
isLocalStoreEnabledInDatabase:
isMemberOfClass:
isProvisionedForDataclass:
isReadOnlyAccount:
isRecognizedParameter:forProperty:inComponent:
isRecognizedProperty:inComponent:
isRunningAsSetupUser
isShowingAll
isStoreEmptyForAccount:inDatabase:
isSubsetOfSet:
isTemporary
isVisible
kCalPreferredDaysToSyncKey
kCalRemindersPreferredDaysToSyncKey
language
lastName
lastObject
lastPathComponent
last_modified
laterDate:
legacyAttachmentContainerWithBaseURL:
legacyCalendarDataContainer
legacyURL
length
loadedAccounts
localRelativePath
localRelativePathForLocalAbsoluteURL:localBaseURL:
localURLForAttachmentWithRelativePath:baseURL:
localizedDescription
localizedStringForKey:value:table:
location
lock
logHandle
longValue
lookaheadIntervalForDaysPerEntry:
makeObjectChangeEntityTypeMap:
managed_id
mapKitHandle
markStoreAsDeleted
masterChange
masterEvent
matchesOneOfMyEmails:
mergeEventsFromLocalStoreIntoStore:inDatabase:
mergeEventsIntoLocalStoreFromStore:inDatabase:
metadataWithData:
metadataWithICSComponent:
method
migrateDataClassProtectionForAttachmentsInLegacyCalendarDataContainer:
migrateUsingCalendarDaemon
migrateWithLegacyCalendarDataContainer:calendarDataContainerProvider:database:
minConsumedClientIdentifier
minConsumedSequenceNumber
minusSet:
minute
modifiedPropertyValues
month
moreResultsAvailable
moveItemAtURL:toURL:error:
mutableCopy
myAddressWithAccountInfo:forEvent:
myStatusNeedsActionForEvent:withAccountInfo:
myself
name
nameAttribute
newDatabaseMigrationContext
nextOccurrenceDateWithCalRecurrences:exceptionDates:initialDate:afterDate:
nextTimeZone
notifyOfEntityDestruction
null
number
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
occurrences
openApplication:withOptions:completion:
optionsWithDictionary:
organizer
others
overrideParticipantRoleConstraint
parameterValueForName:
parentAccount
parentAccountIdentifier
participationChanged
partstat
partstatModified
path
pathExtension
pathForDatabase:
payloadAsFullURL
payloadAsOriginalURL
performCalendarMigration
performCleanup
performMigrationIfNeeded
performReminderMigration
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithWriteLock:
personaID
phoneNumber
pointerValue
postDarwinNotificationNamed:
predicateWithBlock:
predictedLocationOfInterestForEventTitle:eventLocation:calendarIdentifier:timeout:error:
preferences
preferencesForDirectory:
preferencesStoreForPath:
previousTimeZone
priority
privacyPaneHasBeenAcknowledgedVersion
privateCommentChanged
processData:forTask:
processMessage:withDatabase:calStore:accountInfo:handledEventCallback:
processMessages:withDatabase:calStore:accountInfo:handledEventCallback:cancellationToken:
processNotificationWithData:serverURL:syncKey:database:notificationCalendar:store:calendarHomeURL:notificationCalendarURL:contactsProvider:recordIDMap:
properties
propertiesForName:
propertyListWithData:options:format:error:
propertyValueForComparison:propertyKey:
proposedStartDateChanged
provisionedForCalendarsDataClass
pushBatchedUpdatesForCalendarItemsWithUUIDs:database:
raise
range
rangeOfCharacterFromSet:
rangeOfComposedCharacterSequenceAtIndex:
rangeOfString:
rangeOfUnit:inUnit:forDate:
recordIDForExternalIdentifier:
recordIDForUniqueIdentifier:
recurrenceChanged
recurrenceID
recurrenceIDs
recurrence_id
recurrences
redactedDescription
refreshEventWidgets
region
registerReflectionForPreferenceWithNotificationName:
relatedTo
relationshipParameterFromCode:
removeAccount:error:
removeAccount:withDeleteSync:completion:
removeAllObjects
removeCalendarWithUID:
removeCharactersInString:
removeDestructionObserver:
removeItemAtPath:error:
removeItemAtURL:error:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removePreference:notificationName:
removePropertiesForName:
removeStoreForAccount:withChildren:inDatabase:mainDatabase:accountStore:
removeStoreForDeletedAccountWithIdentifier:inDatabase:mainDatabase:accountStore:
removedWrappedAccountIdentifiers
replaceOccurrencesOfString:withString:options:range:
report
reportIntegrityErrors:
resourceSpecifier
respondsToSelector:
retain
retainCount
role
rootElement
rrule
rsvp
saveAccount:verify:withError:
saveAccount:withError:
scheduleagent
scheduleforcesend
schedulestatus
scheme
searchParticipants
searchTerm
second
secondsFromGMTForDate:
seed
self
sequence
setAccountDescription:
setAccountHandles:
setAccountIdentifier:
setAccountProperty:forKey:
setAcknowledged:
setAction:
setActive:
setAddress:
setAllDay:
setAlternateTimeProposal:
setAttach:
setAttendee:
setAttributes:ofItemAtPath:error:
setAuthenticated:
setAuthenticationType:
setAuthenticationTypeNone
setAuthenticationTypeParent
setAuthorEmailAddresses:
setAuthors:
setBooleanPreference:value:notificationName:
setByday:
setBymonth:
setBymonthday:
setBysetpos:
setByweekno:
setByyearday:
setCalendar:
setCalendarDelegateIdentifier:
setCalendarHolidayIdentifier:
setClientIdentifier:
setCn:
setComment:
setCompleted:
setComponents:
setComponents:options:
setConsumedSequenceNumber:
setContainerDisplayName:
setCount:
setCreated:
setCredential:
setCutype:
setData:
setDataContainerProvider:
setDaysOfTheMonth:
setDaysOfTheWeek:
setDaysOfTheYear:
setDefaultProdid:
setDelegate:
setDestructionObservers:
setDeviceLockObserver:
setDict:
setDirectoryURL:
setDocument:
setDtend:
setDtstamp:
setDtstart:
setDuration:
setEmail:
setEnabled:forDataclass:
setEnabledForCalendarsDataClass:
setEndDate:
setEvent:
setEventEndDate:
setEventStartDate:
setEventTimeZone:
setEvents:
setExdate:
setExpirationDate:
setExternalIdentifier:forRecordID:
setFeature:
setFilename:
setFmtype:
setFrequency:
setHour:
setIMIPImported:
setIdentifier:
setIgnoreRateLimiting:
setInfo:
setIntegerPreference:value:notificationName:
setInterestedDatabasePaths:forContext:
setInterestedDatabases:forContext:
setInterval:
setLanguage:
setLast_modified:
setLatitude:
setLocalStoreEnabled:inDatabase:
setLocation:
setLock:
setLongitude:
setManaged_id:
setMapKitHandle:
setMinConsumedSequenceNumber:
setMinute:
setMonth:
setMonthsOfTheYear:
setNamedLocation:
setNextTimeZone:
setObject:forKey:
setObject:forKeyedSubscript:
setOptions:
setOrganizer:
setParameterValue:forName:
setParentAccount:
setParentAccountIdentifier:
setPartstat:
setPartstatModified:
setPassword:
setPercentComplete:
setPreviousTimeZone:
setPrimaryRecipients:
setPriority:
setProperties:forName:
setPropertyValue:type:forName:
setProviderDataTypes:
setProvisioned:forDataclass:
setProvisionedForCalendarsDataClass:
setRecipientEmailAddresses:
setRecipientNames:
setRecurrence_id:
setRegion:
setRelatedTo:
setResourceValue:forKey:error:
setRole:
setRouting:
setRrule:
setRsvp:
setScheduleChanges:
setScheduleagent:
setScheduleforcesend:
setSearchAttendees:
setSearchLocations:
setSearchParticipants:
setSearchTerm:
setSecond:
setSecondMinConsumedSequenceNumber:
setSequence:
setSetPositions:
setShouldMatchLocationsOnlyForEventSearch:
setShouldPinMonthDays:
setSize:
setStartDate:
setStateChangedCallback:
setStatus:
setSummary:
setSupportsAuthentication:
setSupportsNavigation:
setTimeZone:
setTitle:
setTransp:
setTrigger:
setURL:forResourceWithUUID:withDatabase:notificationCalendar:notificationCalendarURL:recordIDMap:
setUniqueIdentifier:forRecordID:
setUntil:
setUpCalStoreForParentAccount:withChildren:inDatabase:
setUsername:
setValue:forCustomKey:
setValue:forKey:
setValue:type:
setValueForPreference:value:notificationName:
setValues:valueType:
setVisible:
setWeekStart:
setWeeksOfTheYear:
setWithArray:
setWithCapacity:
setWithObject:
setWkst:
setX_apple_activity:
setX_apple_appLinkData:
setX_apple_autoarchived:
setX_apple_calendar_color:
setX_apple_contactIdentifiers:
setX_apple_default_alarm:
setX_apple_end_location:
setX_apple_etag:
setX_apple_filename:
setX_apple_language:
setX_apple_needs_reply:
setX_apple_proximity:
setX_apple_region:
setX_apple_scheduletag:
setX_apple_serverFilename:
setX_apple_sort_order:
setX_apple_special_day:
setX_apple_structuredData:
setX_apple_suggestionInfoChangedFields:
setX_apple_suggestionInfoChangesAcknowledged:
setX_apple_suggestionInfoOpaqueKey:
setX_apple_suggestionInfoTimestamp:
setX_apple_suggestionInfoUniqueKey:
setX_apple_telephone:
setX_apple_travel_advisory_behavior:
setX_apple_travel_duration:
setX_apple_travel_start:
setX_calendarserver_access:
setX_calendarserver_private_comment:
setX_wr_alarmuid:
setX_wr_caldesc:
setX_wr_calname:
setYear:
set_LastConfirmedSplashScreenVersionViewed:
set_defaultCalendarChangedReason:
set_defaultCalendarChangedTimestamp:
set_defaultCalendarDatabaseID:
set_defaultCalendarID:
set_defaultCalendarName:
set_defaultCalendarStoreUID:
set_enableTravelAdvisoriesForAutomaticBehavior:
set_kCalRemindersPreferredDaysToSyncKey:
set_overrideParticipantRoleConstraint:
set_privacyPaneHasBeenAcknowledgedVersion:
set_sqlProfileLoggingEnabled:
set_suggestEventLocations:
shared
sharedInstance
sharedManager
sharedReadOnly
shouldMatchLocationsOnlyForEventSearch
shouldPerformMigration
shouldSkipSavingUnrecognizedParametersForProperty:inComponent:
simulateCrashWithMessage:
size
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
sortedArrayUsingSelector:
sourceCalendarDirectory
sqlProfileLoggingEnabled
start
startAccessingSecurityScopedResource
startDate
startOfDayForDate:
startSearching
startTimeChanged
state
stateChangedCallback
stateChangedNotificationName
status
stop
stopAccessingSecurityScopedResource
stopSearching
storeFilteringAllChangesInBackingAccountStore:
string
stringAddingMailto
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByRemovingPercentEscapes
stringByReplacingCharactersInRange:withString:
stringByReplacingOccurrencesOfString:withString:
stringRemovingMailto
stringRemovingTel
stringRepresentation
stringValue
stringWithFormat:
stringWithUTF8String:
stringWithValidatedFormat:validFormatSpecifiers:error:
strongToWeakObjectsMapTable
substringFromIndex:
substringToIndex:
substringWithRange:
suggestEventLocations
suggestedLocationsTestMode
summaryChanged
superclass
supportedCalendarComponentSet
supportsSecureCoding
systemDateForDate:options:
systemTimeZone
systemTimeZoneForDate:
temporary
timeInterval
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeZone
timeZoneForSecondsFromGMT:
timeZoneWithAbbreviation:
timeZoneWithName:
title
topLevelAccountsWithAccountTypeIdentifier:error:
transp
typeAttribute
tzid
unarchiveDictionaryFromData:error:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unionSet:
unlock
unrecognizedComponentName
unrecognizedProperties
unsignedIntegerValue
until
updateHTML:withEventNotes:
urlChanged
username
usesDataSeparatedContainer
validate
value
valueAndParameterClasses
valueWithPointer:
values
visibleCalendarCountWithOptions:
visibleCalendarsWithOptions:
waitForRemindersOnly
willApplyTimeZoneChanges1
wkst
writeLockForDatabasePath:
writeToURL:error:
writeToURL:options:error:
x_apple_activity
x_apple_autoarchived
x_apple_contactIdentifiers
x_apple_default_alarm
x_apple_end_location
x_apple_etag
x_apple_ews_changekey
x_apple_ews_itemid
x_apple_ews_permission
x_apple_proximity
x_apple_scheduletag
x_apple_serverFilename
x_apple_sort_order
x_apple_special_day
x_apple_structuredData
x_apple_structured_location
x_apple_suggestionInfoChangedFields
x_apple_suggestionInfoChangesAcknowledged
x_apple_travel_advisory_behavior
x_apple_travel_duration
x_apple_travel_start
x_calendarserver_access
x_calendarserver_attendee_comment
x_calendarserver_attendee_ref
x_calendarserver_private_comment
x_wr_alarmuid
year
zone
@24@0:8@16
@16@0:8
i16@0:8
v20@0:8i16
v24@0:8@16
v16@0:8
@"NSURL"
@"<CalCalendarDataContainerProvider>"
@"CDBPreferences"
@"NSTimeZone"
@"NSMutableDictionary"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
@32@0:8@16@24
@"<CalMigrationReadOnlyAccount>"24@0:8@"NSString"16
@"NSArray"32@0:8@"NSString"16^@24
@"NSArray"32@0:8@"<CalMigrationReadOnlyAccount>"16@"NSString"24
@40@0:8@16@24^@32
B32@0:8@16^@24
@"<CalMigrationAccount>"24@0:8@"NSString"16
@"NSArray"32@0:8@"<CalMigrationAccount>"16@"NSString"24
@"<CalMigrationAccount>"32@0:8@"NSString"16^@24
@"<CalMigrationAccount>"40@0:8@"<CalMigrationAccount>"16@"NSString"24^@32
B32@0:8@"<CalMigrationAccount>"16^@24
@"<CalMigrationAccountStore>"
@"<CalChangeFilteringMigrationAccountStoreDelegate>"
@"NSMutableSet"
@24@0:8@"NSString"16
v32@0:8@16@24
v20@0:8B16
v32@0:8@16@"NSString"24
v24@0:8@"NSString"16
@"NSString"
@"<CalMigrationAccount>"
@40@0:8@16@24@32
q24@0:8@16
@"NSData"
@"CalDAVScheduleChangesProperty"
@"ICSDocument"
@"ICSEvent"
B24@0:8@"<CalMigrationAccount>"16
B24@0:8@"NSString"16
v40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
v48@0:8r^v16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40
v32@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24
@48@0:8@16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40
@56@0:8@16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40^@48
@24@0:8^v16
@40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
@"NSMutableArray"
@40@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16^{CalFilter=}24@32
v24@0:8^{__CFArray=}16
v24@0:8^{CalParticipantIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16
^{CalParticipantIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16@0:8
^{CalLocationIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16@0:8
v24@0:8^{CalLocationIdsSearchContext=^{__CFArray}I^B^B^{CalDatabase}}16
v24@0:8^{CalEventIdsSearchContext=^{__CFArray}^{__CFSet}^{__CFSet}^B^B^{CalDatabase}}16
^{CalEventIdsSearchContext=^{__CFArray}^{__CFSet}^{__CFSet}^B^B^{CalDatabase}}16@0:8
v24@0:8^{CalEventOccurrenceSearchContext=^{__CFSet}^{__CFArray}^{__CFArray}^{__CFArray}^B^BddidI^{CalEventOccurrenceCache}^?^viB^{__CFString}dBd}16
^{CalEventOccurrenceSearchContext=^{__CFSet}^{__CFArray}^{__CFArray}^{__CFArray}^B^BddidI^{CalEventOccurrenceCache}^?^viB^{__CFString}dBd}16@0:8
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}
^{CalFilter=}
^{__CFString=}
@"<CalSearchDataSink>"
^{__CFArray=}
^{__CFSet=}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
B40@0:8@16@24@32
d24@0:8@16
v24@0:8@?16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@20@0:8B16
q16@0:8
v24@0:8q16
@"CalPreferences"
@"ACAccount"
v24@0:8^v16
B44@0:8i16^v20^v28^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}36
B40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
B32@0:8^v16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24
B24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
r^v40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
^v32@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24
B32@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24
v28@0:8B16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}20
v40@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@32
v40@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
v56@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40@48
v48@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@40
@"NSData"24@0:8@"NSDictionary"16
@"NSDictionary"24@0:8@"NSData"16
B32@0:8@16@24
v28@0:8^v16B24
@60@0:8^v16@24@32@40q48B56
@56@0:8@16@24@32@40@48
@48@0:8@16@24@32@40
@36@0:8^v16^v24B32
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8i16i20
@28@0:8i16i20i24
@"NSDictionary"
v96@0:8@16@24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40^v48^v56@64@72@80@88
i24@0:8@16
^v28@0:8i16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}20
v96@0:8@16@24@32@40^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}48^v56@64^v72@80@88
v112@0:8@16@24@32@40@48^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}56^v64@72^v80@88@96@104
^v48@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24^v32@40
^v68@0:8@16I24^v28@36^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}44^v52@60
^v56@0:8@16^v24^v32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40@48
^v48@0:8@16^v24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@40
v64@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32^v40@48@56
@24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
@28@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16i24
@32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24
@36@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16i24@28
@20@0:8i16
i20@0:8i16
@40@0:8@16^?24^v32
@56@0:8@16@24@32^?40^v48
@"NSDate"
v24@0:8^{CalRelation=}16
@"NSObject<OS_dispatch_queue>"
@24@0:8q16
@96@0:8@16@24q32q40q48q56q64q72@80@88
@112@0:8@16@24@32B40B44q48q56q64q72q80q88@96@104
v40@0:8@16Q24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
v24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
@32@0:8Q16Q24
@"CalDatabaseInMemoryChangeTracking"
@"NSHashTable"
v32@0:8^{__CFArray=}16I24B28
@60@0:8Q16Q24Q32^Q40i48^B52
@52@0:8@16Q24^@32I40^B44
@48@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24^@32^B40
[512{?="timestamp"Q"rowID"I"entityType"b8"clientID"b23"flags"b1}]
@28@0:8i16q20
@"NSCountedSet"
@"<CalCalendarDatabaseIntegrityErrorReportingDelegate>"
@?16@0:8
@"CalDeviceLockObserver"
v64@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24^v32@40@?48@56
v56@0:8@16^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24^v32@40@?48
B64@0:8@16^v24@32^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}40@48@56
@40@0:8^v16@24@32
@6z
