init
copy
arrayWithObjects:count:
initWithBundleIDs:states:
bundleInfoValueForKey:PID:
containsObject:
objectForKeyedSubscript:
integerValue
pause
playbackEngines
allValues
_performRequestFromResponse:forPlaybackEngines:withReason:completion:
setHandler:
dictionaryWithCapacity:
strongToStrongObjectsMapTable
invalidate
dealloc
stop
_updateProcessAssertion
_playbackEngineForPlayerID:
playerPath
start
becomeActive
addObject:
removeObject:
playerID
setObject:forKey:
initWithPlayerID:
addEngineObserver:
setObject:forKeyedSubscript:
_cancelAssertionInvalidationTimerWithReason:
_invalidateProcessAssertionWithReason:
_shouldPreventSuspensionForBackgroundPlayback
_takeProcessAssertion
_startAssertionInvalidationTimerWithEventHandler:
objectEnumerator
countByEnumeratingWithState:objects:count:
count
initWithPID:flags:reason:name:withHandler:
setPlayerPath:
stringWithFormat:
setLabel:
performRequest:completion:
performWithCompletion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engine:didChangeAccounts:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
getPlayerPathForPlayerID:reply:
startPlayerForPlayerID:
becomeActiveForPlayerID:
setWantsReverseProcessAssertion:forPlayerID:
initWithPID:
setConnectionInvalidated:
.cxx_destruct
accessQueue
assertionInvalidationTimer
setAssertionInvalidationTimer:
bundleID
setBundleID:
setPid:
setPlaybackEngines:
playbackEngineStateMap
setPlaybackEngineStateMap:
stateMonitor
setStateMonitor:
processAssertion
setProcessAssertion:
playerIDsWantingAssertions
setPlayerIDsWantingAssertions:
supportsBackgroundAudio
setSupportsBackgroundAudio:
connectionInvalidated
_supportsBackgroundAudio
_connectionInvalidated
_pid
_accessQueue
_assertionInvalidationTimer
_bundleID
_playbackEngines
_playbackEngineStateMap
_stateMonitor
_processAssertion
_playerIDsWantingAssertions
processIdentifier
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
resume
listener:shouldAcceptNewConnection:
sharedCloudController
sharedController
beginObservingCloudLibraryEnabled
setFilteringDisabled:
defaultMediaLibrary
beginGeneratingLibraryChangeNotifications
serviceListener
setDelegate:
com.apple.MediaPlayer/MPRemotePlayerService/accessQueue
UIBackgroundModes
audio
@"MPCPlayerCommandRequest"16@?0@"MPCPlayerResponse"8
task suspension
v24@?0@"NSString"8@"NSError"16
v8@?0
v16@?0@"NSDictionary"8
connection invalidated
Q8@?0
reset invalidation window
!shouldPreventSuspensionForBackgroundPlayback
event handler
MPMusicPlayerController/applicationMusicPlayer/notifications
v12@?0B8
Supported command request [%@]
v16@?0@"NSError"8
v24@?0@"MPCPlayerResponse"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
assertionInvalidationTimer
T@"NSObject<OS_dispatch_source>",&,N,V_assertionInvalidationTimer
bundleID
T@"NSString",C,N,V_bundleID
Ti,N,V_pid
playbackEngines
T@"NSMutableDictionary",&,N,V_playbackEngines
playbackEngineStateMap
T@"NSMapTable",&,N,V_playbackEngineStateMap
stateMonitor
T@"BKSApplicationStateMonitor",&,N,V_stateMonitor
processAssertion
T@"BKSProcessAssertion",&,N,V_processAssertion
playerIDsWantingAssertions
T@"NSMutableSet",&,N,V_playerIDsWantingAssertions
supportsBackgroundAudio
TB,N,V_supportsBackgroundAudio
connectionInvalidated
TB,N,V_connectionInvalidated
MPRemotePlayerService: %p: pausing playback (%{public}@) [task suspension] error: %{public}@
MPRemotePlayerService: %p: pausing playback (%{public}@) [task suspension]
MPRemotePlayerService: %p: setConnectionInvalidated:%{BOOL}u
MPRemotePlayerService: %p: stopping playback (%{public}@) [connection invalidated] error: %{public}@
MPRemotePlayerService: %p: stopping playback (%{public}@) [connection invalidated]
MPRemotePlayerService: %p: player %{public}@ started requesting assertions [setWantsReverseProcessAssertion:forPlayerID:]
MPRemotePlayerService: %p: player %{public}@ ended requesting assertions [setWantsReverseProcessAssertion:forPlayerID:]
MPRemotePlayerService: %p: caching state %{public}lu for playback engine %p [engine:didChangeToState:]
MPRemotePlayerService: %p: took process assertion %p for pid %{public}d
MPRemotePlayerService: %p: clearing process assertion %p for pid %{public}d [failed to acquire assertion]
MPRemotePlayerService: %p: invalidated process assertion %p for pid %{public}d [%{public}@]
MPRemotePlayerService: %p: started assertion invalidation timer %p
MPRemotePlayerService: %p: canceled assertion invalidation timer %p [%{public}@]
MPRemotePlayerService
MPCPlaybackEngineEventObserving
NSObject
MPRemotePlayerServiceProtocol
ServiceDelegate
NSXPCListenerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16@24@32
v32@0:8@16@24
v32@0:8@16q24
v24@0:8@16
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v32@0:8@"MPCPlaybackEngine"16@"NSArray"24
v24@0:8@"MPCPlaybackEngine"16
v32@0:8@16@?24
v28@0:8B16@20
v32@0:8@"NSString"16@?<v@?@"MPCPlayerPath">24
v24@0:8@"NSString"16
v28@0:8B16@"NSString"20
@20@0:8i16
v16@0:8
v20@0:8B16
@24@0:8@16
v24@0:8@?16
v48@0:8@?16@24@32@?40
i16@0:8
v20@0:8i16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSString"
@"NSMutableDictionary"
@"NSMapTable"
@"BKSApplicationStateMonitor"
@"BKSProcessAssertion"
@"NSMutableSet"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.assertiond.background-view-services</key>
<true/>
<key>com.apple.assistant.contextprovider</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-amr-encode</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.developer.networking.multipath</key>
<true/>
<key>com.apple.familycircle.agent</key>
<true/>
<key>com.apple.itunescloud.delegate-account-store</key>
<true/>
<key>com.apple.itunescloud.delegation-provider</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.launchservices.receivereferrerrurl</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.coremedia.pidinheritance.allow</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.iad.background-client</key>
<true/>
<key>com.apple.private.iad.privileged-client</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.security.assets.music.read-write</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/tmp/MediaCache</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Preferences/com.apple.restrictionspassword.plist</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/com.apple.iTunesCloud/</string>
<string>/Library/com.apple.itunesstored/</string>
<string>/Library/Caches/com.apple.Music/</string>
<string>/Library/Cookies/</string>
<string>/Media/</string>
<string>/Library/Caches/com.apple.Radio/</string>
<string>/Library/Caches/com.apple.iTunesStore/</string>
<string>/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache/</string>
<string>/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache/</string>
<string>/Library/com.apple.MediaSocial/</string>
<string>/Library/Logs/MediaServices/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.adid</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.askpermissiond</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.hsa-authentication-server</string>
<string>com.apple.mediaartworkd.xpc</string>
<string>com.apple.MediaPlayer.MPRadioControllerServer</string>
<string>com.apple.rtcreportingd</string>
<string>com.apple.storebookkeeperd.xpc</string>
<string>com.apple.atc.xpc</string>
<string>com.apple.atc.xpc.downloadprogress</string>
<string>com.apple.atc.xpc.runkeeplocaltask</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloud.delegation-provider</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.itunescloudd.playactivity</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mediaplaybackcore</string>
<string>com.apple.videos-preferences</string>
<string>com.apple.mobileipod</string>
<string>com.apple.Music</string>
<string>com.apple.itunesstored</string>
<string>com.apple.homesharing</string>
<string>com.apple.mediaremote</string>
<string>com.apple.restrictionspassword</string>
<string>com.apple.itunescloudd</string>
<string>com.apple.medialibrary</string>
<string>com.apple.itunescloud</string>
</array>
<key>com.apple.security.files.downloads.read-write</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.smoot.subscriptionservice</key>
<true/>
<key>com.apple.springboard.activateassistant</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>fairplay-client</key>
<integer>1974055701</integer>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
