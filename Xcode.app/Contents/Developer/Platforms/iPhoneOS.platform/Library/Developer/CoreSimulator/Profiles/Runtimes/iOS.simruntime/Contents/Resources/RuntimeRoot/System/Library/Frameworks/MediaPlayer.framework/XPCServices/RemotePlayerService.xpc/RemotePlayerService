<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.MediaPlayer.RemotePlayerService</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.assertiond.background-view-services</key>
<true/>
<key>com.apple.assistant.contextprovider</key>
<true/>
<key>com.apple.atc.private</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-amr-encode</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.developer.networking.multipath</key>
<true/>
<key>com.apple.familycircle.agent</key>
<true/>
<key>com.apple.itunescloud.delegate-account-store</key>
<true/>
<key>com.apple.itunescloud.delegation-provider</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.launchservices.receivereferrerrurl</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mediaremote.request-bless</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.coremedia.pidinheritance.allow</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corewifi</key>
<true/>
<key>com.apple.private.fpsd.client</key>
<true/>
<key>com.apple.private.iad.background-client</key>
<true/>
<key>com.apple.private.iad.privileged-client</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.runningboard.remoteplayerservice</key>
<true/>
<key>com.apple.security.assets.music.read-write</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/tmp/MediaCache</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Preferences/com.apple.restrictionspassword.plist</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/com.apple.iTunesCloud/</string>
<string>/Library/com.apple.itunesstored/</string>
<string>/Library/Caches/com.apple.Music/</string>
<string>/Library/Cookies/</string>
<string>/Media/</string>
<string>/Library/Caches/com.apple.Radio/</string>
<string>/Library/Caches/com.apple.iTunesStore/</string>
<string>/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache/</string>
<string>/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache/</string>
<string>/Library/com.apple.MediaSocial/</string>
<string>/Library/Logs/MediaServices/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.private.corewifi-xpc</string>
<string>com.apple.adid</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.askpermissiond</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.hsa-authentication-server</string>
<string>com.apple.mediaartworkd.xpc</string>
<string>com.apple.MediaPlayer.MPRadioControllerServer</string>
<string>com.apple.rtcreportingd</string>
<string>com.apple.storebookkeeperd.xpc</string>
<string>com.apple.atc.xpc</string>
<string>com.apple.atc.xpc.downloadprogress</string>
<string>com.apple.atc.xpc.runkeeplocaltask</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloud.delegation-provider</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.itunescloudd.playactivity</string>
<string>com.apple.itunescloud.music-subscription-status-service</string>
<string>com.apple.symptom_diagnostics</string>
<string>com.apple.xpc.amsaccountsd</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mediaplaybackcore</string>
<string>com.apple.videos-preferences</string>
<string>com.apple.mobileipod</string>
<string>com.apple.Music</string>
<string>com.apple.itunesstored</string>
<string>com.apple.homesharing</string>
<string>com.apple.mediaremote</string>
<string>com.apple.restrictionspassword</string>
<string>com.apple.itunescloudd</string>
<string>com.apple.medialibrary</string>
<string>com.apple.itunescloud</string>
<string>com.apple.springboard</string>
</array>
<key>com.apple.security.files.downloads.read-write</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.smoot.subscriptionservice</key>
<true/>
<key>com.apple.springboard.activateassistant</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>fairplay-client</key>
<integer>1974055701</integer>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
init
addEngineObserver:
reportUserBackgroundedApplication
_updateProcessAssertion
setInvalidationHandler:
arrayWithObjects:count:
initWithBundleIDs:states:
bundleInfoValueForKey:PID:
containsObject:
objectForKeyedSubscript:
integerValue
setHandler:
invalidate
dealloc
serverEndpoint
_cancelAssertionInvalidationTimerWithReason:
_shouldPreventSuspensionForBackgroundPlayback
initWithPID:flags:reason:name:withHandler:
_startAssertionInvalidationTimerWithEventHandler:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
length
getServerEndpointWithReply:
setWantsReverseProcessAssertion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:didAchieveLikelyToKeepUpWithItem:
engine:didEndPlaybackOfItem:
engine:didChangeItemElapsedTime:rate:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didReachEndOfQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engine:didChangeActionAtQueueEnd:
engine:didChangeAccounts:
engine:didChangeCurrentItemVariantID:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
engineDidLoseMediaServices:
engineDidResetMediaServices:
initWithConnection:bundleID:pid:playbackEngine:
supportsBackgroundAudio
setSupportsBackgroundAudio:
bundleID
setBundleID:
setPid:
playbackEngine
connection
connectionInvalidated
setConnectionInvalidated:
state
stateMonitor
setStateMonitor:
processAssertion
setProcessAssertion:
wantsProcessAssertion
setWantsProcessAssertion:
assertionInvalidationTimer
setAssertionInvalidationTimer:
.cxx_destruct
_supportsBackgroundAudio
_connectionInvalidated
_wantsProcessAssertion
_pid
_bundleID
_playbackEngine
_connection
_state
_stateMonitor
_processAssertion
_assertionInvalidationTimer
TB,N,V_supportsBackgroundAudio
T@"NSString",C,N,V_bundleID
Ti,N,V_pid
T@"MPCPlaybackEngine",R,N,V_playbackEngine
T@"NSXPCConnection",R,W,N,V_connection
TB,N,V_connectionInvalidated
TQ,R,N,V_state
T@"BKSApplicationStateMonitor",&,N,V_stateMonitor
T@"BKSProcessAssertion",&,N,V_processAssertion
TB,N,V_wantsProcessAssertion
T@"NSObject<OS_dispatch_source>",&,N,V_assertionInvalidationTimer
auditToken
processIdentifier
setGlobalPrivacyClientWithAuditToken:
initWithPlayerID:
start
becomeActive
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
resume
listener:shouldAcceptNewConnection:
sharedCloudController
sharedController
beginObservingCloudLibraryEnabled
setFilteringDisabled:
defaultMediaLibrary
beginGeneratingLibraryChangeNotifications
serviceListener
setDelegate:
currentProcess
attributeWithDomain:name:
initWithExplanation:target:attributes:
acquireWithInvalidationHandler:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
v8@?0
UIBackgroundModes
audio
v16@?0@"NSDictionary"8
getServerEndpointWithReply
setWantsReverseProcessAssertion
connection invalidated
MPMusicPlayerController/applicationMusicPlayer/notifications
v12@?0B8
reset invalidation window
event handler
MPRemotePlayerService.m
Cancel existing timer before starting a new one.
Must provide a reason for logging.
shouldAcceptNewConnection
com.apple.MediaPlayer.RemotePlayerService
PlaybackEnginePrep
v24@?0@"RBSAssertion"8@"NSError"16
com.apple.amp.MediaPlayer
MPRemotePlayerService
MPMediaLibrary
Class getMPMediaLibraryClass(void)_block_invoke
Unable to find class %s
void *MediaPlayerLibrary(void)
MPCPlaybackEngine
Class getMPCPlaybackEngineClass(void)_block_invoke
void *MediaPlaybackCoreLibrary(void)
MPCloudController
Class getMPCloudControllerClass(void)_block_invoke
MPCloudServiceStatusController
Class getMPCloudServiceStatusControllerClass(void)_block_invoke
MPMediaQuery
Class getMPMediaQueryClass(void)_block_invoke
MPRemotePlayerService: %p: Got server endpoint: %@
MPRemotePlayerService: %p: setWantsReverseProcessAssertion: %{BOOL}u
MPRemotePlayerService: %p: invalidated process assertion %p for %d [connection invalidated]
MPRemotePlayerService: %p: took process assertion %p for pid %d
MPRemotePlayerService: %p: clearing process assertion %p for pid %d [failed to acquire assertion]
MPRemotePlayerService: %p: invalidated process assertion %p for %d [!shouldPreventSuspensionForBackgroundPlayback]
MPRemotePlayerService: %p: started assertion invalidation timer %p
MPRemotePlayerService: %p: canceled assertion invalidation timer %p [%{public}@]
MPRemotePlayerService: %p: Received new incoming XPC connection: %@
MPRemotePlayerService: %p: Resumed XPC connection: %@
MPRemotePlayerService: %{public}@ invalidated with error: %{public}@
MPRemotePlayerService: Took RBSAssertion: %{public}@ %{public}@
MPRemotePlayerServiceConnection
MPRemotePlayerServiceProtocol
MPCPlaybackEngineEventObserving
NSObject
MPRemotePlayerService
NSXPCListenerDelegate
v24@0:8@?16
v20@0:8B16
v24@0:8@?<v@?@"NSXPCListenerEndpoint">16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16@24@32
v32@0:8@16@24
v36@0:8@16d24f32
v32@0:8@16q24
v24@0:8@16
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v36@0:8@"MPCPlaybackEngine"16d24f32
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v32@0:8@"MPCPlaybackEngine"16@"NSArray"24
v24@0:8@"MPCPlaybackEngine"16
@44@0:8@16@24i32@36
v16@0:8
i16@0:8
v20@0:8i16
@"NSString"
@"MPCPlaybackEngine"
@"NSXPCConnection"
@"BKSApplicationStateMonitor"
@"BKSProcessAssertion"
@"NSObject<OS_dispatch_source>"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.MediaPlayer.RemotePlayerService</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.assertiond.background-view-services</key>
<true/>
<key>com.apple.assistant.contextprovider</key>
<true/>
<key>com.apple.atc.private</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-amr-encode</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.developer.networking.multipath</key>
<true/>
<key>com.apple.familycircle.agent</key>
<true/>
<key>com.apple.itunescloud.delegate-account-store</key>
<true/>
<key>com.apple.itunescloud.delegation-provider</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.launchservices.receivereferrerrurl</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mediaremote.request-bless</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.coremedia.pidinheritance.allow</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corewifi</key>
<true/>
<key>com.apple.private.fpsd.client</key>
<true/>
<key>com.apple.private.iad.background-client</key>
<true/>
<key>com.apple.private.iad.privileged-client</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.runningboard.remoteplayerservice</key>
<true/>
<key>com.apple.security.assets.music.read-write</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/tmp/MediaCache</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Preferences/com.apple.restrictionspassword.plist</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/com.apple.iTunesCloud/</string>
<string>/Library/com.apple.itunesstored/</string>
<string>/Library/Caches/com.apple.Music/</string>
<string>/Library/Cookies/</string>
<string>/Media/</string>
<string>/Library/Caches/com.apple.Radio/</string>
<string>/Library/Caches/com.apple.iTunesStore/</string>
<string>/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache/</string>
<string>/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache/</string>
<string>/Library/com.apple.MediaSocial/</string>
<string>/Library/Logs/MediaServices/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.private.corewifi-xpc</string>
<string>com.apple.adid</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.askpermissiond</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.hsa-authentication-server</string>
<string>com.apple.mediaartworkd.xpc</string>
<string>com.apple.MediaPlayer.MPRadioControllerServer</string>
<string>com.apple.rtcreportingd</string>
<string>com.apple.storebookkeeperd.xpc</string>
<string>com.apple.atc.xpc</string>
<string>com.apple.atc.xpc.downloadprogress</string>
<string>com.apple.atc.xpc.runkeeplocaltask</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloud.delegation-provider</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.itunescloudd.playactivity</string>
<string>com.apple.itunescloud.music-subscription-status-service</string>
<string>com.apple.symptom_diagnostics</string>
<string>com.apple.xpc.amsaccountsd</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mediaplaybackcore</string>
<string>com.apple.videos-preferences</string>
<string>com.apple.mobileipod</string>
<string>com.apple.Music</string>
<string>com.apple.itunesstored</string>
<string>com.apple.homesharing</string>
<string>com.apple.mediaremote</string>
<string>com.apple.restrictionspassword</string>
<string>com.apple.itunescloudd</string>
<string>com.apple.medialibrary</string>
<string>com.apple.itunescloud</string>
<string>com.apple.springboard</string>
</array>
<key>com.apple.security.files.downloads.read-write</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.smoot.subscriptionservice</key>
<true/>
<key>com.apple.springboard.activateassistant</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>fairplay-client</key>
<integer>1974055701</integer>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
objectForKeyedSubscript:
setGlobalPrivacyClientWithAuditToken:
becomeActive
integerValue
beginObservingCloudLibraryEnabled
serverEndpoint
interfaceWithProtocol:
reportUserBackgroundedApplication
setInvalidationHandler:
bundleInfoValueForKey:PID:
acquireWithInvalidationHandler:
processIdentifier
initWithPlayerID:
defaultMediaLibrary
containsObject:
currentHandler
start
initWithExplanation:target:attributes:
addEngineObserver:
serviceListener
handleFailureInMethod:object:file:lineNumber:description:
stringWithUTF8String:
setExportedInterface:
arrayWithObjects:count:
sharedCloudController
invalidate
attributeWithDomain:name:
setDelegate:
sharedController
initWithPID:flags:reason:name:withHandler:
setFilteringDisabled:
setExportedObject:
initWithBundleIDs:states:
beginGeneratingLibraryChangeNotifications
setHandler:
auditToken
handleFailureInFunction:file:lineNumber:description:
length
currentProcess
resume
init
dealloc
getServerEndpointWithReply:
setWantsReverseProcessAssertion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:didAchieveLikelyToKeepUpWithItem:
engine:didEndPlaybackOfItem:
engine:didChangeItemElapsedTime:rate:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didReachEndOfQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engine:didChangeActionAtQueueEnd:
engine:didChangeAccounts:
engine:didChangeCurrentItemVariantID:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
engineDidLoseMediaServices:
engineDidResetMediaServices:
initWithConnection:bundleID:pid:playbackEngine:
_updateProcessAssertion
_shouldPreventSuspensionForBackgroundPlayback
_startAssertionInvalidationTimerWithEventHandler:
_cancelAssertionInvalidationTimerWithReason:
supportsBackgroundAudio
setSupportsBackgroundAudio:
bundleID
setBundleID:
setPid:
playbackEngine
connection
connectionInvalidated
setConnectionInvalidated:
state
stateMonitor
setStateMonitor:
processAssertion
setProcessAssertion:
wantsProcessAssertion
setWantsProcessAssertion:
assertionInvalidationTimer
setAssertionInvalidationTimer:
.cxx_destruct
_supportsBackgroundAudio
_connectionInvalidated
_wantsProcessAssertion
_pid
_bundleID
_playbackEngine
_connection
_state
_stateMonitor
_processAssertion
_assertionInvalidationTimer
TB,N,V_supportsBackgroundAudio
T@"NSString",C,N,V_bundleID
Ti,N,V_pid
T@"MPCPlaybackEngine",R,N,V_playbackEngine
T@"NSXPCConnection",R,W,N,V_connection
TB,N,V_connectionInvalidated
TQ,R,N,V_state
T@"BKSApplicationStateMonitor",&,N,V_stateMonitor
T@"BKSProcessAssertion",&,N,V_processAssertion
TB,N,V_wantsProcessAssertion
T@"NSObject<OS_dispatch_source>",&,N,V_assertionInvalidationTimer
listener:shouldAcceptNewConnection:
v8@?0
UIBackgroundModes
audio
v16@?0@"NSDictionary"8
getServerEndpointWithReply
setWantsReverseProcessAssertion
connection invalidated
MPMusicPlayerController/applicationMusicPlayer/notifications
v12@?0B8
reset invalidation window
event handler
MPRemotePlayerService.m
Cancel existing timer before starting a new one.
Must provide a reason for logging.
shouldAcceptNewConnection
com.apple.MediaPlayer.RemotePlayerService
PlaybackEnginePrep
v24@?0@"RBSAssertion"8@"NSError"16
com.apple.amp.MediaPlayer
MPRemotePlayerService
MPMediaLibrary
Class getMPMediaLibraryClass(void)_block_invoke
Unable to find class %s
void *MediaPlayerLibrary(void)
MPCPlaybackEngine
Class getMPCPlaybackEngineClass(void)_block_invoke
void *MediaPlaybackCoreLibrary(void)
MPCloudController
Class getMPCloudControllerClass(void)_block_invoke
MPCloudServiceStatusController
Class getMPCloudServiceStatusControllerClass(void)_block_invoke
MPMediaQuery
Class getMPMediaQueryClass(void)_block_invoke
MPRemotePlayerService: %p: Got server endpoint: %@
MPRemotePlayerService: %p: setWantsReverseProcessAssertion: %{BOOL}u
MPRemotePlayerService: %p: invalidated process assertion %p for %d [connection invalidated]
MPRemotePlayerService: %p: took process assertion %p for pid %d
MPRemotePlayerService: %p: clearing process assertion %p for pid %d [failed to acquire assertion]
MPRemotePlayerService: %p: invalidated process assertion %p for %d [!shouldPreventSuspensionForBackgroundPlayback]
MPRemotePlayerService: %p: started assertion invalidation timer %p
MPRemotePlayerService: %p: canceled assertion invalidation timer %p [%{public}@]
MPRemotePlayerService: %p: Received new incoming XPC connection: %@
MPRemotePlayerService: %p: Resumed XPC connection: %@
MPRemotePlayerService: %{public}@ invalidated with error: %{public}@
MPRemotePlayerService: Took RBSAssertion: %{public}@ %{public}@
MPRemotePlayerServiceConnection
MPRemotePlayerServiceProtocol
MPCPlaybackEngineEventObserving
NSObject
MPRemotePlayerService
NSXPCListenerDelegate
v24@0:8@?16
v20@0:8B16
v24@0:8@?<v@?@"NSXPCListenerEndpoint">16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16@24@32
v32@0:8@16@24
v36@0:8@16d24f32
v32@0:8@16q24
v24@0:8@16
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v36@0:8@"MPCPlaybackEngine"16d24f32
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v32@0:8@"MPCPlaybackEngine"16@"NSArray"24
v24@0:8@"MPCPlaybackEngine"16
@44@0:8@16@24i32@36
v16@0:8
i16@0:8
v20@0:8i16
@"NSString"
@"MPCPlaybackEngine"
@"NSXPCConnection"
@"BKSApplicationStateMonitor"
@"BKSProcessAssertion"
@"NSObject<OS_dispatch_source>"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
