@(#)PROGRAM:shazamd  PROJECT:ShazamKit-1
Deallocating the XPC connection
Failed to setup the remote proxy %@
Connection listener removed a handle, now we have %lu left
Calling stop on the service %@ of the handle %@
Interruption handler called for service %@ from %@:%i
Invalidation handler called for service %@ from %@:%i
Failed to set tmp dir suffix
Calling completion handler %@ on library controller %@
Shazam service matching signature of duration %f with data of length %lu at %@
Received network response, no data %@
Server response parser: No response %@
Server response parser: Error, %@
Server response parser: Error, returning results, recording intermission %f, retry %f
Server response parser: Returning results, recording intermission %f, retry %f
Server response parser: has match %@
Server response parser: has no match
Audio interruption ended but recording should not restart
Resuming recording after interruption
Assistant service will attach a tap
willAttachTap: number of assistant taps %li
Assistant service has detached a tap
didDetachTap: number of assistant taps %li
audioRecordingManagerWillStartRecording - number of assistant taps %li
audioRecordingManagerDidStopRecording
Server response parser: has no media items
Failed to fetch data task %@
Failed to encode network request %@
Presenting media item %@
No web URL available for media item %@
Attempting to open app directly with url %@
Unable to get strong reference to self
Opened url %@ in the Shazam app
failed to open app, likely not installed - requesting App Clip
Opened url %@ as an App Clip
Falling back to launching url %@ in Safari
Failed to open url with error %@
Opened URL %@ with result %@
Sending no match notification
Sending match notification
Error adding notification request %@
Failed to schedule notification: %@
Failed to create dispatch group while loading context
Failed to add default values to response context %@
Failed to add campaign token to response context %@
SHMultipleConcurrentAudioTapMatcher Calling stop on audioTapMatchers %@
Suggested audio recording source %li signature source %li shouldAttempt %i
Failed fetching media item, bundle identifier missing
URL %@ not properly tokenized
Fetching media item at %@
Error fetching media item %@
Returning audio tap for source %li bundle identifier %@
Deallocating the Shazam Service
Current Bundle ID is not entitled to use the Library SPI
Missing Bundle ID, it's required to sync the Library
Sent signal event: %@
Failed to parse lyrics song info %@
Failed to load description %@
Failed to observe local track changes: %@
Failed to observe local group changes: %@
Updating existing entries for %lu library track(s)
Creating entries for %lu library track(s)
Updating existing entries for %lu Library Group IDs: %@
Creating entries for %lu library group(s)
Failed to purge local group objects: %@
Failed to purge local track objects: %@
Failed to delete sync metadata: %@
Failed to fetch request %{public}@
Persisting a Track with an associated Group ID, but there is no group saved locally. Will fallback to creation.
Failed to convert %@ to %@
Processed %lu changes before sync. Inserted %ld & Updated %ld local group entries
Processed %lu changes before sync. Inserted %ld & Updated %ld local track entries
Processed %lu deletions before sync. Deleted %ld local entries
Failed to persist library changes with error %@
iCloud account is not available or device to device encryption is not supported, skipping remote sync
Syncronize changes with changeset: %@
Processed %lu returned track changes. Inserted %ld & Updated %ld local entries
Processed %lu returned group changes. Inserted %ld & Updated %ld local entries
Processed %lu returned deletions. Deleted %ld local entries
Failed to persist sync changes with error: %@
Clear all local data and cache sync status
Failed to fetch account info %@
Account supports device to device encryption
Deallocating SHAudioRecorder
Already running audio queue
Failed to create a new audio queue input with error %@
Failed to set audio queue property
Failed to add isRunning property listener
Failed to start audio queue, retry one more time
Failed to stop audio queue %@
Failed to remove isRunning property listener %@
Failed to dispose audio queue %@
Failed to start audio queue after a retry
Audio queue for audio recorder %@ has changed running state %i
Error: audio tap matcher: %@ asked to start recognition when it is already matching
startRecognition based upon deadline %@
No buffer received in tap completion - error %@
Tagging finish conditions: timeOut %d, oneAttempt: %d, foundMatch: %d, failed %d
Stopping recognition
Stopping recognition for matcher %@
<task: %{public}@ %@> Local subscription for <zone: %{public}@> does not exist, creating one now
<task: %{public}@ %@> <zone: %{public}@> does not exist, so we are attempting to create one with a subscription
<task: %{public}@ %@> is scheduled
Requesting app clip metadata for url %@
Error requesting App Clip metadata %@
Requesting app clip for url %@
Error in requestClipWithCompletion %@ clipIsAvailable %i
App clip request was successful
Unable to unarchive notification payload data %@ with error %@
Received public token '%@' on connection %@
APS push received for topic: '%@'
Ignoring APS push message, not a CloudKit update
iCloud account has changed, updating current user account id
Failed to complete modify operation. Error %@
Service %@ stopping after final worker %@ finished
Service %@ started running %@
Starting watchdog timer for %f seconds
Stopping watchdog timer
Unable to load Application Support directory: %@
Parent directory of persistent store url doesn't exist, creating one now
Failed to create persistent store directory: %@
Persistent store url missing, fallback to in memory store type
iCloud account is available
No iCloud account available
iCloud account is restricted
iCloud account is temporarily unavailable
Failed to retrieve iCloud account information with error %@
Deallocating recording service
Starting recording
Failed to start recorder %@ with error: %@
Stopping recording for reason %lu
Stopping recorder: %@
Failed to stop recorder with error: %@
Stopped recording for reason %lu
Detached tap: %@ taps remaining: %@
Internal audio source support: %d alternative output source to built-in speaker is available: %d other audio playing %d
Marking the internal audio source as preferred
Marking the external audio source as preferred
Sync started with startCondition: %{public}@
Failed to complete <task: %{public}@ %@> and not retrying due to <error: %@>
Finished <task: %{public}@ %@> and sync complete
Finished <task: %{public}@ %@>, still syncing
Client called Library completion with success = %d for <task: %{public}@ %@>
Error finishing transaction for <task: %{public}@ %@> %@
Finished handling transaction for <task: %{public}@ %@>
Uploaded %lu modified tracks
Uploaded %lu modified groups
Deleted %lu items
Fetched %lu tracks
Fetched %lu groups
Fetched %lu deleted items
Current local cache requires migration
Successfully migrated local cache
Failed to migrate current local cache %@
Received notification response %@ for request %@ with content %@
No webURL provided for payload %@
Presenting media item with web url %@
Presented media item with error %@
Using <token: %@> for database fetch
<zone: %@> does not exist locally, saving now
<zone: %@> was deleted
<zone: %@> was purged
Updated database <token: %@>
Failed to fetch changes for record (%@)
Updated <zone: %{public}@> token: %@>
<zone: %{public}@> token has expired. Removing saved token
Using <zone changes configuration: %@> for fetch
Failed to schedule <task: %{public}@ %@> pre-conditions were not satisifed
Deallocating audio session manager
Registering audio session observers
Unregistering audio session observers
Activating audio session
Failed to activate AVAudioSession: %@
configureAudioSessionForStandardClient
Failed to set category on AVAudioSession: %@
Failed to set mode: %@
Failed to enable haptics while recording: %@
Failed to decouple IO AVAudioSession: %@
configureAudioSessionForAssistantService
Deactivating audio session
Failed to deactivate AVAudioSession: %@
Audio interruption started
Audio interruption ended
Media services lost notification - stopping recognition
Media services reset notification - restarting recognition
handleAudioSessionRouteChange: %@
Failed to complete zone operation. Error %@
Watchdog timer fired
Worker %@ changed running state to %d
Retrying <task: %{public}@ %@> after %f seconds <error: %@>
Retrying <task: %{public}@ %@> immediately <error: %@>
Unable to fetch matcher - it is likely some required entitlements are missing
Missing or invalid host %@
Missing or invalid match endpoint %@
Fetching endpoint with storefront %@
<task: %{public}@ %@> <zone: %{public}@> does not exist locally, so we are creating one
dealloc
init
setExportedInterface:
setRemoteObjectInterface:
connection
exportedObject
setExportedObject:
remoteObjectProxyWithErrorHandler:
initWithConnection:exportedInterface:remoteInterface:
remoteObject
serviceStateHandler
setServiceStateHandler:
.cxx_destruct
_remoteObject
_serviceStateHandler
_connection
T@"NSXPCConnection",R,N,V_connection
T@,R,N,V_remoteObject
T@,&,N
T@"<SHServiceDelegate>",&,N,V_serviceStateHandler
buildListeners
listeners
countByEnumeratingWithState:objects:count:
listen
apsConnection
registerForPushNotifications
array
availableServices
buildListenerForMachService:
addObject:
initializeGlobalServiceState
copy
initWithService:
buildListener
initWithServiceProvider:listener:
start
_listeners
_apsConnection
T@"NSArray",R,N,V_listeners
T@"SHAPSConnection",R,N,V_apsConnection
arrayWithObjects:count:
setWithArray:
machServiceName
initWithMachServiceName:
isEqualToString:
shazamKitServiceHandleForConnection:withAttribution:
eventsServiceHandleForConnection:withAttribution:
uiServiceHandlerForConnection:withAttribution:
stringWithFormat:
exceptionWithName:reason:userInfo:
bundleIdentifier
initWithBundleIdentifier:connection:
setServiceDelegate:
initWithConnection:
initWithEntitlements:attribution:
setDelegate:
handleForConnection:withAttribution:
_machServiceName
T@"NSString",R,C,N,V_machServiceName
listener
resume
serviceProvider
connectionHandles
removeObject:
count
stop
processIdentifier
setInterruptionHandler:
setInvalidationHandler:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
lock
setLock:
_lock
_connectionHandles
_listener
_serviceProvider
T@"NSMutableArray",R,N,V_connectionHandles
T@"NSXPCListener",R,N,V_listener
T@"<SHServiceProvider>",R,N,V_serviceProvider
T{os_unfair_lock_s=I},N,V_lock
currentRunLoop
shazamItemDictionary
stringByReplacingOccurrencesOfString:withString:
extractIDsFromRelation:
initWithShazamItemDictionary:
shazamID
shazamURL
artistName
artworkURL
setShazamItemDictionary:
_shazamItemDictionary
T@"NSDictionary",&,N,V_shazamItemDictionary
T@"NSNumber",R,N
T@"NSArray",R,C,N
shazamDictionary
setShazamDictionary:
_shazamDictionary
T@"NSDictionary",&,N,V_shazamDictionary
updateSnapshotWithAttribution:
activeControllers
productName
_activeControllers
T@"NSMapTable",R,N,V_activeControllers
setDefaultRecordingIntermissionInSeconds:
defaultValuesWithCompletion:
tokenForClientIdentifier:
setCampaignToken:
campaignTokenWithCompletion:
_defaultRecordingIntermissionInSeconds
_campaignToken
Td,N,V_defaultRecordingIntermissionInSeconds
T@"NSString",C,N,V_campaignToken
initWithCatalog:recognitionRequester:
catalog
matchSignature:tokenizedURL:
partnerURLRequestForSignature:endpoint:
duration
dataRepresentation
networkRequester
responseForServerData:signature:
buildURLForSignature:endpoint:
requestWithURL:
setHTTPMethod:
base64EncodedStringWithOptions:
iso8601Formatter
stringFromDate:
sessionDuration
numberWithDouble:
dictionaryWithDictionary:
dataWithJSONObject:options:error:
setHTTPBody:
addValue:forHTTPHeaderField:
updateToken:withValue:
URLRepresentation
setCatalog:
setNetworkRequester:
_iso8601Formatter
_catalog
_networkRequester
T@"SHShazamKitServerCatalog",&,N,V_catalog
T@"<SHNetworkRecognitionRequester>",&,N,V_networkRequester
T@"NSISO8601DateFormatter",R,N,V_iso8601Formatter
T@"<SHMatcherDelegate>",W,N,V_delegate
initWithBundleIdentifier:
notificationCategories
setNotificationCategories:
setWantsNotificationResponsesDelivered
matchResultNotificationCenter
initWithRequest:
request
completion
setCompletion:
_request
_completion
T@"SHMatcherRequest",R,N,V_request
T@?,C,N,V_completion
JSONObjectWithData:options:error:
errorResponseForSignature:error:
firstObject
initWithErrorDictionary:
initWithResultsDictionary:
error
defaultRecordingIntermissionInSeconds
initWithRecordingIntermission:retrySeconds:match:signature:stillRunningAssociatedRequest:error:
recordingIntermissionSeconds
retrySeconds
noMatchWithRecordingIntermission:retrySeconds:signature:
shazamIDs
arrayWithCapacity:
audioStartDate
campaignToken
mediaItemFromResourcesResponse:shazamID:signatureStartDate:campaignToken:
songsDictionary
set_rawResponseSongs:
initWithMediaItems:forSignature:
matchWithRecordingIntermission:retrySeconds:match:
mediaDictionaryFromResourcesResponse:shazamID:campaignToken:
mutableCopy
itemForIdentifier:
matchOffset
setValue:forKey:
speedSkew
frequencySkew
songRelationIDs
itemForIdentifiers:
lyricsRelationIDs
doubleValue
snippetFromOffset:
dateByAddingTimeInterval:
lyricLines
songwriters
initWithLyricsStartDate:lines:songwriters:
initWithMatchedMediaItemDictionary:syncedLyrics:
matcherResponseFromServerData:signature:context:
availableRecorders
initWithRecorders:
initWithAudioSessionManager:audioRecordingManager:
audioRecordingManager
stopRecordingForReason:
isRunning
startRecording
audioSessionManager
isAudioSessionInterrupted
client
activeAssistantServiceTaps
setActiveAssistantServiceTaps:
activateAudioSessionForClient:
deactivateAudioSession
sharedInstance
audioSessionManager:interruptionBeganWithOptions:
audioSessionManager:interruptionEndedWithOptions:
audioRecordingManager:willAttachTap:
audioRecordingManager:didDetachTap:
audioRecordingManagerWillStartRecording:
audioRecordingManagerDidStopRecording:
audioRecordingManager:failedToStartRecorders:
recorder:shouldProcessAudioBuffer:atTime:
_audioRecordingManager
_audioSessionManager
_activeAssistantServiceTaps
Tq,V_activeAssistantServiceTaps
T@"SHAudioRecordingManager",R,N,V_audioRecordingManager
T@"SHAudioSessionManager",R,N,V_audioSessionManager
annotateClientError:code:underlyingError:
annotateError:withError:
mediaItemFromResourcesResponse:shazamID:campaignToken:
initWithString:
containsTokens
mediaItemsFromServerData:context:error:
initWithSubscription:
subscription
_subscription
T@"CKSubscription",R,N,V_subscription
resourcesDictionary
objectForKeyedSubscript:
initWithSongsDictionary:
initWithShazamDictionary:
initWithLyricsDictionary:
initWithMusicVideoDictionary:
initWithResourcesDictionary:
songsResponse
shazamResponse
lyricsResponse
musicVideoResponse
setResourcesDictionary:
_resourcesDictionary
T@"NSDictionary",&,N,V_resourcesDictionary
T@"SHServerSongsResponse",R,N
T@"SHServerShazamResponse",R,N
T@"SHServerLyricsResponse",R,N
T@"SHServerMusicVideoResponse",R,N
sessionConfiguration
invalidateAndCancel
response
isTokenFailureError:
encoder
requestByEncodingRequest:parameters:
dataTaskPromiseWithRequest:
handleResult:callback:error:
addFinishBlock:
defaultSessionConfiguration
setTimeoutIntervalForRequest:
setWaitsForConnectivity:
setDiscretionary:
amsBag
initWithClientIdentifier:bag:
setClientType:
initWithTokenService:
setProtocolHandler:
initWithTokenService:bag:
performRequest:withReply:
invalidate
initWithClientIdentifier:clientType:
setClientIdentifier:
_encoder
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_clientType
T@"AMSURLSession",&,N,V_session
T@"AMSMediaRequestEncoder",R,N,V_encoder
webURL
errorWithCode:underlyingError:
workerDelegate
workerUpdated:withRunningState:
dictionaryWithObjects:forKeys:count:
setFrontBoardOptions:
errorWithCode:underlyingError:keyOverrides:
defaultWorkspace
openURL:configuration:completionHandler:
requestAppClipForURL:withCompletionHandler:
openWithURL:configuration:completionHandler:
requiredEntitlements
timeRequiredToPerformWork
setWorkerDelegate:
managesRecordingSession
T@"<SHWorkerDelegate>",W,N
TB,R
TB,R,N
presentMediaItem:completionHandler:
_isRunning
_workerDelegate
T@"<SHWorkerDelegate>",W,N,V_workerDelegate
TB,R,V_isRunning
currentMediaItem
containsMediaItemWithFuzzyTolerance:
currentSignatureID
querySignature
mediaItems
setCurrentMediaItem:
setCurrentSignatureID:
sendMatchNotification:
sendAnalyticsEventForMatch:
contentDeliverer
numberWithBool:
sendEvent:withPayload:
setUserNotificationCenter:
T@"UNUserNotificationCenter",&,N
canSendNotificationForMatch:
sendNotificationForMatch:
canSendNotificationForNoMatchSignatureID:
sendNotificationForNoMatch
_currentMediaItem
_currentSignatureID
_contentDeliverer
T@"SHMatchedMediaItem",&,N,V_currentMediaItem
T@"NSUUID",&,N,V_currentSignatureID
T@"SHAttribution",R,N,V_attribution
T@"<SHMatchResultNotificationContentDeliverer>",R,N,V_contentDeliverer
initWithRecordingSource:client:
open
close
isClosed
_isClosed
_client
Tq,R,N,V_recordingSource
Tq,R,N,V_client
TB,R,N,V_isClosed
contentProvider
requestWithIdentifier:content:trigger:
userNotificationCenter
addNotificationRequest:withCompletionHandler:
initWithContentProvider:
_contentProvider
T@"SHMatchResultUserNotificationContentProvider",R,N,V_contentProvider
sh_setDefaultValuesWithCompletion:
sh_setCampaignTokenForClientIdentifier:completion:
loadContextForClientIdentifier:completion:
audioTapMatchers
startRecognitionForRequest:
unlock
metrics
audioRecordingSource
suggestedAudioRecordingSource
handleCommonActionsForMatcher:withResponse:
result
delegate
matcher:didFail:
matcher:didNotFindMatch:
matcher:didFindMatch:
code
session:didFindMatch:
session:didNotFindMatchForSignature:error:
session:shouldAttemptToMatchSignature:
session:didProduceResponse:
finishedSession:
T@"<SHMatcherDelegate>",W,N
initWithAudioTapMatchers:audioRecordingManager:
_audioTapMatchers
T@"NSArray",R,N,V_audioTapMatchers
T@"<SHAudioRecordingManager>",R,N,V_audioRecordingManager
T@"NSRecursiveLock",R,N,V_lock
T@"<SHMatcherDelegate>",W,N,Vdelegate
options
setApplicationBundleIdentifierOverrideForTCC:
sharedContainer
T@"CKContainer",R,N
initWithAttribution:clientType:URLBuilder:contextBuilder:networkRequester:
loadLookupEndpointForClientIdentifier:clientType:callback:
T@"SHShazamKitServerURLBuilder",R,N,V_URLBuilder
T@"SHServerResponseContextBuilder",R,N,V_contextBuilder
T@"<SHNetworkRecognitionRequester>",R,N,V_networkRequester
title
setTitle:
setShouldBackgroundDefaultAction:
setThreadIdentifier:
setShouldIgnoreDoNotDisturb:
setShouldIgnoreDowntime:
defaultSound
setSound:
setShouldAuthenticateDefaultAction:
artist
setBody:
appleMusicURL
setCategoryIdentifier:
attribution
userInfoPayloadForMediaItem:bundleIdentifier:
setUserInfo:
setAttachments:
notificationAttachmentForMediaItem:completionHandler:
categoryWithIdentifier:actions:intentIdentifiers:options:
setWithObjects:
localizedUserNotificationStringForKey:arguments:
dateWithTimeIntervalSinceNow:
setExpirationDate:
setShouldHideDate:
setShouldSuppressDefaultAction:
initWithAttribution:
notificationContentForMediaItem:completionHandler:
notificationContentForNoMatch
setAttribution:
_attribution
T@"SHAttribution",&,N,V_attribution
dataArray
initWithDataArray:
setDataArray:
_dataArray
T@"NSArray",&,N,V_dataArray
T@"NSArray",R,N
initWithRecordingSource:
simulatorRecorders
iOSAudioRecorders
watchOSAudioRecorders
tvOSAudioRecorders
macOSAudioRecorders
resultsDictionary
setResultsDictionary:
_resultsDictionary
T@"NSDictionary",&,N,V_resultsDictionary
Td,R,N
isEntitledForSource:
entitlements
isEntitledForInternalAudioRecording
isEntitledForExternalAudioRecording
isEntitledForMicrophone
initWithAudioRecordingManager:entitlements:bundleIdentifier:
tapForSource:
_entitlements
T@"SHEntitlements",R,N,V_entitlements
validateClientIdentifier:
_initWithInstallationID:
URLBuilder
clientIdentifier
clientType
installationID
loadMatchEndpointForClientIdentifier:clientType:installationID:callback:
contextBuilder
initWithCatalog:
length
initWithClientIdentifier:clientType:installationID:
loadConfiguration:
loadContext:
_createMatcher
setURLBuilder:
setContextBuilder:
_installationID
_clientIdentifier
_clientType
_URLBuilder
_contextBuilder
T@"SHShazamKitServerURLBuilder",&,N,V_URLBuilder
T@"SHServerResponseContextBuilder",&,N,V_contextBuilder
T@"NSString",R,C,N,V_installationID
T@"NSString",R,C,N,V_clientIdentifier
Tq,R,N,V_clientType
sharedSession
processInfo
globallyUniqueString
temporaryDirectory
URLByAppendingPathComponent:
moveItemAtURL:toURL:error:
downloadTaskWithURL:completionHandler:
downloadImageURL:completionHandler:
sessionScope
initWithScope:
configuration
sessionType
containerTransformer
cloudBackedContainer
callingProcessIdentifier
container
containerIdentifier
initWithCallingProcessIdentifier:containerIdentifier:
initWithConfiguration:
currentCache
setConfiguration:
setContainerTransformer:
setCurrentCache:
_configuration
_containerTransformer
_currentCache
T@"SHLSyncSessionConfiguration",&,N,V_configuration
T@"SHLCloudContainerTransformer",&,N,V_containerTransformer
T@"<SHLLibraryCache>",&,N,V_currentCache
privateOperation
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
initWithOperation:
operation
setPrivateOperation:
_privateOperation
T@"CKDatabaseOperation",&,N,V_privateOperation
T@"CKDatabaseOperation",R,N
musicVideoItemDictionary
URLWithString:
initWithMusicVideoItemDictionary:
setMusicVideoItemDictionary:
_musicVideoItemDictionary
T@"NSDictionary",&,N,V_musicVideoItemDictionary
T@"NSURL",R,N
musicVideoDictionary
setMusicVideoDictionary:
_musicVideoDictionary
T@"NSDictionary",&,N,V_musicVideoDictionary
populateRemoteConfiguration
matcherController
isCurrentBundleIdentifierValid
librarySyncManager
synchronizeSnapshot:startCondition:completionHandler:
isEntitledForLibrarySPI
libraryQueryManager
requiresAttributionForBundlerIdentifier:
mediaItemFetcher
mediaItemForShazamID:completionHandler:
eventSignalScheduler
hasRequiredEntitlements:
initWithAttribution:clientType:
setEntitlements:
_matcherController
_librarySyncManager
_libraryQueryManager
_mediaItemFetcher
_eventSignalScheduler
T@"SHEntitlements",&,N,V_entitlements
T@"SHMatcherController",R,N,V_matcherController
T@"SHMediaLibrarySyncManager",R,N,V_librarySyncManager
T@"SHMediaLibraryQueryManager",R,N,V_libraryQueryManager
T@"SHMediaItemFetcher",R,N,V_mediaItemFetcher
T@"SHEventSignalScheduler",R,N,V_eventSignalScheduler
T@"<SHShazamKitClient>",W,N,V_delegate
setIsRunning:
initWithIdentifier:bundleID:context:
discoverabilitySignal
source
sendEvent:
sendEventSignal:
initWithType:scope:callingProcessIdentifier:
_sessionType
_sessionScope
_callingProcessIdentifier
Tq,R,N,V_sessionType
Tq,R,N,V_sessionScope
T@"NSString",R,C,N,V_callingProcessIdentifier
trackSetToAdd
trackSetToDelete
groupSetToAdd
groupSetToDelete
valueForKeyPath:
tracksToDelete
groupsToDelete
setTrackSetToAdd:
setTrackSetToDelete:
setGroupSetToAdd:
setGroupSetToDelete:
_trackSetToAdd
_trackSetToDelete
_groupSetToAdd
_groupSetToDelete
T@"NSMutableSet",&,N,V_trackSetToAdd
T@"NSMutableSet",&,N,V_trackSetToDelete
T@"NSMutableSet",&,N,V_groupSetToAdd
T@"NSMutableSet",&,N,V_groupSetToDelete
_initWithTasksToRetry:error:
tasksToRetry
type
allItemIdentifiers
addObjectsFromArray:
initWithError:
initWithTasksToRetry:error:
failedItemIdentifiers
_tasksToRetry
_error
T@"NSError",R,N,V_error
T@"NSArray",R,N,V_tasksToRetry
parseTTMLFromLyricsItemDictionary:
songInfo
lyricsLines
lyricsText
string
startTime
lyricLineWithText:offset:
name
dataUsingEncoding:
initWithTTMLData:
parseWithError:
lyricsLineStartingBeforeTimeOffset:
appendString:
nextLine
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
initWithLyricsItemDictionary:
lyricsSnippet
staticLyrics
setSongInfo:
_songInfo
T@"MSVLyricsSongInfo",&,N,V_songInfo
T@"NSString",R,C,N
lyricsDictionary
setLyricsDictionary:
_lyricsDictionary
T@"NSDictionary",&,N,V_lyricsDictionary
loadStoreWithType:
initWithContentsOfURL:
initWithName:managedObjectModel:
setPersistentStoreDescriptions:
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
mergeByPropertyStoreTrumpMergePolicy
setMergePolicy:
managedObjectContext
tracksFetchedResultsController
performFetch:
groupsFetchedResultsController
performBlockAndWait:
filterOptions
fetchLibraryTracksWithParameters:
fetchLibraryGroupsWithParameters:
setIncludesPendingChanges:
resultsLimit
setFetchLimit:
predicateWithFormat:
ascending
fetchManagedObjectForRequest:withPredicate:context:
andPredicateWithSubpredicates:
updateReportForLibraryTrack:
setData:
createMetadataWithData:track:group:context:
updateManagedTrack:withUpdatedTrack:
insertNewObjectForEntityForName:inManagedObjectContext:
associateTrack:toGroupWithIdentifier:context:
predicateWithBlock:
filteredArrayUsingPredicate:
updateReportForLibraryGroups:
setSyncID:
deleteObject:
persistentContainer
persistentStoreDescriptions
initWithFetchRequest:
persistentStoreCoordinator
executeRequest:withContext:error:
deleteAllItemsWithFetchRequest:completionHandler:
reset
save:
setPredicate:
executeFetchRequest:error:
setTrack:
setRecognitionID:
setProviderID:
setLatitude:
setLongitude:
setLabels:
libraryItemFromManagedObject:
libraryChangeTypeForFetchedResultsChangeType:
initWithLibraryItem:changeType:indexPath:
entityForName:inManagedObjectContext:
entity
isKindOfEntity:
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
setPersistentContainer:
setManagedObjectContext:
_tracksFetchedResultsController
_groupsFetchedResultsController
_persistentContainer
_managedObjectContext
T@"NSPersistentContainer",&,N,V_persistentContainer
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSFetchedResultsController",R,N,V_tracksFetchedResultsController
T@"NSFetchedResultsController",R,N,V_groupsFetchedResultsController
T@"<SHMediaLibraryDataStoreDelegate>",W,N,V_delegate
initWithStoreType:
commonInitWithDataStore:remoteLibrary:accountListener:
syncGroup
dataStore
dispatchQueue
syncQueue
setCurrentContext:
synchronizeLocalSnapshot:
synchronizeRemoteSnapshot:startCondition:
accountListener
fetchLibraryInfoWithCompletionHandler:
fetchLibraryItemsWithParameters:completionHandler:
changes
changeType
libraryItem
persistLibraryGroups:completionHandler:
allObjects
persistUpdatedTracks:completionHandler:
deleteItemsByIdentifiers:completionHandler:
commitChangesWithError:
status
_synchronizeRemoteSnapshot:startCondition:
beginLibrarySync
handleLibraryError:failedItemIdentifiers:
persistChangesAndCompleteSyncWithCompletionHandler:
unsyncedGroupChangeset
mergeChangeset:
unsyncedTrackChangeset
addGroups:
deleteTracks:
deleteGroups:
shazamLibrarySyncStartConditionForMediaLibraryStartCondition:
remoteLibrary
fetchAllUploadableGroupsMissingLibrarySyncMetadata
fetchAllUploadableTracksMissingLibrarySyncMetadata
currentContext
resetDataIfNeededForSyncError:
currentSnapshot
mapInternalLibraryErrorToMediaLibrary:
deleteAllSyncMetadataItems
deleteAllItems
localizedDescription
addChanges:
raise:format:
currentLibraryAccountHasChanged
libraryDataStore:didUpdateWithChange:
_synchronizeSnapshot:startCondition:
T@"<SHMediaLibrarySyncDelegate>",W,N
_libraryInfoWithCompletionHandler:
_queryLibraryWithParameters:completionHandler:
initWithDataStore:remoteLibrary:accountListener:
setCurrentSnapshot:
setRemoteLibrary:
setDataStore:
dataStoreShouldPersistChanges
setSyncGroup:
setDispatchQueue:
setSyncQueue:
setAccountListener:
_dataStoreShouldPersistChanges
_currentSnapshot
_remoteLibrary
_dataStore
_syncGroup
_dispatchQueue
_syncQueue
_currentContext
_accountListener
T@"SHLShazamLibrary",&,N,V_remoteLibrary
T@"SHMediaLibraryDataStore",&,N,V_dataStore
T@"SHMediaLibrarySnapshot",&,N,V_currentSnapshot
TB,R,N,V_dataStoreShouldPersistChanges
T@"NSObject<OS_dispatch_group>",&,N,V_syncGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
T@"SHMediaLibraryContext",&,N,V_currentContext
T@"SHMediaLibraryAccountListener",&,N,V_accountListener
T@"<SHMediaLibrarySyncDelegate>",W,N,Vdelegate
isTrackIdentifier:
recognitionIdentifierFromTrackIdentifier:
shazamKeyFromTrackIdentifier:
identifierWithRecognitionIdentifier:shazamKey:
containsString:
rangeOfString:options:
substringFromIndex:
substringToIndex:
precomposedStringWithCanonicalMapping
compoundIdentifierFromTrackIdentifier:
T@"NSString",R,N,V_recognitionIdentifier
T@"SHLShazamKey",R,N,V_shazamKey
cloudContainer
errorWithCode:
resultWithError:
supportsDeviceToDeviceEncryption
fulfilledResult
accountInfoWithCompletionHandler:
evaluatePreconditionWithCompletion:
initWithContainer:
setCloudContainer:
_cloudContainer
T@"SHLCloudBackedContainer",&,N,V_cloudContainer
registerBundleAttributionForAuditToken:
powerlogCallingProcessBundleID:startDate:endDate:
startMediaSafetyNetExemption
stopMediaSafetyNetExemption
associatedGroupIdentifier
identifier
shl_exceptionWithName:reason:
setAssociatedGroupIdentifier:
tracksToSave
allocWithZone:
initWithLibraryGroup:
addTracks:
removeTracks:
copyWithZone:
UUID
UUIDString
progressWithTotalUnitCount:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
progress
size
retryCount
setRetryCount:
syncStartCondition
setSyncStartCondition:
session
setSession:
Tq,R,N
T@"NSString",R,N
T@"NSProgress",R,N
Tq,N
T@"NSString",N
T@"SHLSyncSession",W,N
fetchType
setFetchType:
_progress
_identifier
_retryCount
_syncStartCondition
_fetchType
_delegate
Tq,N,V_fetchType
T@"<SHLSyncSessionFetchTaskDelegate>",W,N,V_delegate
T@"NSString",R,N,V_identifier
T@"NSProgress",R,N,V_progress
Tq,N,V_retryCount
T@"NSString",N,V_syncStartCondition
T@"SHLSyncSession",W,N,Vsession
initOperationQueue
setName:
setMaxConcurrentOperationCount:
addOperation:waitUntilFinished:
tailOperation
isFinished
isCancelled
addDependency:
setTailOperation:
operationQueue
addOperations:waitUntilFinished:
cancelAllOperations
defaultQueue
addOperation:
setOperationQueue:
_operationQueue
_tailOperation
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperation",W,N,V_tailOperation
initWithUpdatedTrack:localTrack:
updatedTrack
localTrack
_updatedTrack
_localTrack
T@"SHMediaLibraryTrack",R,N,V_updatedTrack
T@"SHTrackMO",R,N,V_localTrack
initWithUpdatedGroup:localGroup:
updatedGroup
localGroup
_updatedGroup
_localGroup
T@"SHMediaLibraryGroup",R,N,V_updatedGroup
T@"SHGroupMO",R,N,V_localGroup
locallyFoundTracks
missingFromLocalStoreTracks
locallyFoundGroups
missingFromLocalStoreGroups
_locallyFoundTracks
_missingFromLocalStoreTracks
_locallyFoundGroups
_missingFromLocalStoreGroups
T@"NSMutableArray",R,N,V_locallyFoundTracks
T@"NSMutableArray",R,N,V_missingFromLocalStoreTracks
T@"NSMutableArray",R,N,V_locallyFoundGroups
T@"NSMutableArray",R,N,V_missingFromLocalStoreGroups
errorCode:underlyingError:
errorCodeForError:
domain
userInfo
enumerateKeysAndObjectsUsingBlock:
canRetryForPartialError:
canRetryForError:
userInfoForErrorCode:withUnderlyingError:
initWithDomain:code:userInfo:
dictionary
localizedDescriptionForSyncError:
setObject:forKey:
localizedFailureReasonForSyncError:
localizedRecoverySuggestionForSyncError:
errorWithUnderlyingError:
retrySecondsForError:
validEncodedSystemData:
encodedSystemData
initWithMetadata:
initWithEncodedSystemData:
_encodedSystemData
T@"NSData",R,N,V_encodedSystemData
initWithLibraryTrack:
date
T@"NSDate",&,D,N
recognitionIdentifier
T@"NSString",&,D,N
shazamKey
T@"SHLShazamKey",&,D,N
T@"NSString",C,D,N
subtitle
location
T@"CLLocation",&,D,N
containingAppBundleIdentifier
audioTapProvider
initWithAudioTapProvider:
matcherForRequest:attribution:clientType:
_audioTapProvider
T@"SHAudioTapProvider",R,N,V_audioTapProvider
stopAudioQueueAndClearBuffersWithError:
isAudioQueueRunning:
initStandardFormatWithSampleRate:channels:
streamDescription
recordingSource
hasAudioQueueFailedWithStatus:annotateError:
startAudioQueueAfterRetrySecondsWithCompletion:
initWithPCMFormat:frameCapacity:
setFrameLength:
audioBufferList
errorWithDomain:code:userInfo:
audioRecorderDispatchQueue
stopRecordingWithError:
audioBufferFromData:byteSize:inFormat:
startRecordingWithCompletion:
T@"<SHAudioRecorderDelegate>",W,N
setRecordingSource:
audioQueue
setAudioQueue:
audioStreamBasicDescription
setAudioStreamBasicDescription:
setAudioRecorderDispatchQueue:
mBuffers
_recordingSource
_audioQueue
_audioRecorderDispatchQueue
_audioStreamBasicDescription
Tq,N,V_recordingSource
T^{OpaqueAudioQueue=},N,V_audioQueue
T{AudioStreamBasicDescription=dIIIIIIII},N,V_audioStreamBasicDescription
T@"NSObject<OS_dispatch_queue>",&,N,V_audioRecorderDispatchQueue
T@"<SHAudioRecorderDelegate>",W,N,V_delegate
initWithStreamDescription:
sampleRate
initWithAudioTimeStamp:sampleRate:
recorder:producedAudioBuffer:atTime:
_initWithIdentifier:metadata:labels:
commonInitWithIdentifier:metadata:labels:
validProviderIdentifier
validProviderName
bundleName
addPlatformLabel
mainBundle
objectForInfoDictionaryKey:
labelSet
containsObject:
initWithKey:
libraryItemIdentifier
decodeObjectOfClasses:forKey:
validatedKey
metadata
providerIdentifier
providerName
compoundIdentifier
isEqualTrack:
initWithName:
labels
platformLabel
addLabel:
_initWithRecognitionIdentifier:shazamKey:metadata:labels:
initWithRecognitionIdentifier:shazamKey:
hasValidRecognitionIdentifier
initWithIdentifier:
initWithIdentifier:metadata:
T@"SHLLibraryItemMetadata",R,N
mutableCopyWithZone:
removeLabel:
initWithRecognitionIdentifier:shazamKey:metadata:
setProviderName:
setProviderIdentifier:
setDate:
setRecognitionIdentifier:
setShazamKey:
setSubtitle:
setLocation:
setLabelSet:
_metadata
_providerName
_providerIdentifier
_date
_recognitionIdentifier
_shazamKey
_title
_subtitle
_location
_associatedGroupIdentifier
_compoundIdentifier
_labelSet
T@"NSMutableSet",&,N,V_labelSet
T@"NSDate",&,N,V_date
T@"NSString",&,N,V_recognitionIdentifier
T@"SHLShazamKey",&,N,V_shazamKey
T@"NSString",C,N,V_title
T@"NSString",C,N,V_subtitle
T@"CLLocation",&,N,V_location
T@"NSString",&,N,V_associatedGroupIdentifier
T@"NSString",&,N,V_providerIdentifier
T@"NSString",&,N,V_providerName
T@"NSSet",R,N
T@"SHLLibraryTrackCompoundIdentifier",R,N,V_compoundIdentifier
T@"SHLLibraryItemMetadata",R,N,V_metadata
originalTask
recoverTaskFromPartialError
recoverTaskFromLimitExceededError
savedGroups
deletedIDs
intersectSet:
initWithInsertions:deletions:
savedTracks
differenceOfBatch:
initWithTracksToModify:groupsToModify:
subdivideTaskIntoBatchesOfSize:
setOriginalTask:
setSavedGroups:
setSavedTracks:
setDeletedIDs:
setError:
_originalTask
_savedGroups
_savedTracks
_deletedIDs
T@"SHLSyncSessionModifyTask",&,N,V_originalTask
T@"NSArray",&,N,V_savedGroups
T@"NSArray",&,N,V_savedTracks
T@"NSArray",&,N,V_deletedIDs
T@"NSError",&,N,V_error
responseSignatureForRequest:
setMatcherRequest:
deadline
matchStreamingBuffer:atTime:
_stop
audioTap
attachTap:
signature
matcherRequest
setAudioRecordingSource:
finishSessionConditionsMetForRequest:response:
recordingIntermission
match
stopCondition
hasHitDeadline
detachTap:
initWithAudioTap:audioRecordingManager:catalog:
_audioTap
_session
_matcherRequest
T@"SHAudioTap",R,N,V_audioTap
T@"SHSession",R,N,V_session
T@"SHMatcherRequest",&,N,V_matcherRequest
fetchTaskTransformer
cloudBackedZoneChangesOperationFromFetchTask:forChangedZones:container:
subscriptionExistsForZoneIdentifier:
subscriptionTaskTransformer
zoneExistsForIdentifier:
initWithZone:
storeZoneIdentifier:error:
cloudBackedOperationForZonesToSave:container:
cloudBackedDatabaseChangesOperationFromFetchTask:container:completion:
preconditions
scheduleFetchTask:
setFetchTaskTransformer:
setSubscriptionTaskTransformer:
_fetchTaskTransformer
_subscriptionTaskTransformer
T@"SHLCloudFetchTaskTransformer",&,N,V_fetchTaskTransformer
T@"SHLCloudSubscriptionTransformer",&,N,V_subscriptionTaskTransformer
initWithURL:
sessionProxy
setLaunchReason:
requestClipWithCompletion:
requestMetadataWithCompletion:
notificationFromLegacyUserInfoFormat:
initForReadingFromData:error:
setMediaItem:
setBundleIdentifier:
initRequiringSecureCoding:
encodedData
mediaItemWithProperties:
payloadFromNotificationContentUserInfo:
mediaItem
_mediaItem
_bundleIdentifier
T@"SHMediaItem",&,N,V_mediaItem
T@"NSString",C,N,V_bundleIdentifier
topic
notificationFromRemoteNotificationDictionary:
notificationType
initWithSnapshot:startCondition:
libraryController
synchronizeWithContext:
apsEnvironment
connectionQueue
initWithEnvironmentName:namedDelegatePort:queue:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
_libraryWillBeginSync:
_library:didChangeWithSnapshot:
_library:didProduceError:failedItemIdentifiers:
_libraryDidCompleteSync:
setConnectionQueue:
_apsEnvironment
_libraryController
_connectionQueue
T@"APSConnection",R,N,V_connection
T@"NSString",R,C,N,V_apsEnvironment
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"SHMediaLibraryController",R,N,V_libraryController
observeAccountChangedNotification
accountStatus
libraryStatusForAccountStatus:
initWithStatus:encrypted:
currentUserID
setIdentityToken:
updateUserRecordWithAccountInfo:completion:
fetchAccountInfoWithCompletionHandler:
mainQueue
updateAccountInfo
setCurrentUserID:
fetchUserRecordIDWithCompletion:
fetchUserRecordIDWithCompletionHandler:
standardUserDefaults
T@"NSString",C,N
T@"<SHMediaLibraryAccountListenerDelegate>",W,N,V_delegate
scope
initWithContainer:usingEncryption:
setScope:
_scope
Tq,N,V_scope
sharedContext
containerWithScope:
modifyTaskScheduler
fetchTaskScheduler
createTransaction
T@"<SHLModifyTaskScheduler>",R,N
T@"<SHLFetchTaskScheduler>",R,N
setSavePolicy:
privateCloudDatabase
modifyRecordsOperation
setDatabase:
recordsToSaveFromModifyTask:container:
setRecordsToSave:
recordIDsToDeleteFromModifyTask:
setRecordIDsToDelete:
recordsToSave
setTotalUnitCount:
completedUnitCount
setCompletedUnitCount:
setPerRecordSaveBlock:
setPerRecordCompletionBlock:
removeTaskOfType:forIdentifier:error:
taskOfType:identifier:
session:task:didProduceOutcome:
initWithRecord:
recordType
libraryGroupFromCloudBackedItem:
isEncrypted
libraryTrackFromCloudBackedItem:usingEncryption:
recordName
session:task:didModifyGroups:
session:task:didModifyTracks:
session:task:didDeleteItemsWithIdentifiers:
initWithOriginalTask:savedGroups:savedTracks:deletedIDs:error:
recoverableTasks
storeTask:ofType:error:
setModifyRecordsCompletionBlock:
setExpectedSendSize:
recordIDsToDelete
setQuantity:
setGroup:
tracksToModify
insertions
groupsToModify
cloudBackedItemFromLibraryGroup:
record
cloudBackedItemFromLibraryTrack:usingEncryption:
deletions
shazamLibraryZone
zoneID
initWithRecordName:zoneID:
cloudBackedOperationFromModifyTask:container:
setModifyRecordsOperation:
_modifyRecordsOperation
T@"CKModifyRecordsOperation",&,N,V_modifyRecordsOperation
minusSet:
_insertions
_deletions
T@"NSSet",R,N,V_insertions
T@"NSSet",R,N,V_deletions
TB,R,N,GhasChanges
containerWithIdentifier:
initWithZoneName:ownerName:
initWithZoneID:
defaultContainer
manateeContainer
debugContainer
T@"SHLCloudContext",R,N
_defaultContainer
_manateeContainer
_debugContainer
_shazamLibraryZone
T@"CKContainer",R,N,V_debugContainer
T@"CKContainer",R,N,V_defaultContainer
T@"CKContainer",R,N,V_manateeContainer
T@"CKRecordZone",R,N,V_shazamLibraryZone
auditToken
startManagedRecordingDate
stopWatchdogTimer
setStartManagedRecordingDate:
startWatchdogTimerForInterval:firedCompletion:
watchdogTimer
service:updatedWorker:
_watchdogTimer
_startManagedRecordingDate
T@"NSDate",&,N,V_startManagedRecordingDate
T@"SHWatchdogTimer",R,N,V_watchdogTimer
T@"NSString",R,C,N,V_bundleIdentifier
zoneTransformer
setZoneTransformer:
cache
setCache:
_zoneTransformer
_cache
T@"SHLCloudModifyZoneTransformer",&,N,V_zoneTransformer
T@"SHLCloudLibraryCache",&,N,V_cache
T@"SHLSyncSessionConfiguration",R,N,V_configuration
encodeSystemFieldsWithCoder:
recordID
baseCloudRecordFromGroup:
finishDecoding
initWithRecordType:recordID:
errorDictionary
errorCodeForResponseCode:
setErrorDictionary:
_errorDictionary
T@"NSDictionary",&,N,V_errorDictionary
T@"NSError",R,N
_zone
T@"CKRecordZone",R,N,V_zone
setLibraryController:
dictionaryWithCapacity:
newSubscriptionForZoneID:
zoneName
storeSubscription:forZoneIdentifier:error:
subscriptionID
modifySubscriptionsOperation
allValues
setSubscriptionsToSave:
objectForKey:
removeSubscriptionForZoneIdentifier:error:
setModifySubscriptionsCompletionBlock:
subscriptionsToSave
subscriptionIDsToDelete
initWithZoneID:subscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
cloudBackedOperationForZones:container:
setModifySubscriptionsOperation:
_modifySubscriptionsOperation
T@"CKModifySubscriptionsOperation",&,N,V_modifySubscriptionsOperation
cStringUsingEncoding:
isSatisfied
removeObjectAtIndex:
evaluatePreconditions:withCompletion:
_encrypted
_container
T@"CKContainer",R,N,V_container
encrypted
TB,R,N,GisEncrypted,V_encrypted
bundleForClass:
URLForResource:withExtension:
URLForDirectory:inDomain:appropriateForURL:create:error:
applicationSupportDirectory
URLByAppendingPathComponent:isDirectory:
path
URLByAppendingPathExtension:
setType:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
setUsesPersistentHistoryTracking:
persistentStoreURL
setURL:
managedObjectModelURL
persistentStoreDescriptionForStoreType:
failedResult
accountStatusWithCompletionHandler:
doesCacheDirectoryExist
defaultManager
cacheDirectory
removeItemAtPath:error:
doesLegacyCacheDirectoryExist
legacyCacheDirectory
doesTaskFolderPathsExist
createTaskFolderPaths
inflightTaskPathForIdentifier:
failedTaskPathForIdentifier:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:options:error:
fileExistsAtPath:
tasksOfType:
inflightFolderPath
failedFolderPath
fileURLWithPath:
tasksForFolderPath:ofType:
taskForFilePath:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
lastPathComponent
removeItemAtURL:error:
dataWithContentsOfFile:
doesZoneFolderPathExist
createZoneFolderPath
zonePathForIdentifier:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:isDirectory:
doesPrivateDatabaseFolderPathExist
createPrivateDatabaseFolderPathWithError:
currentDatabaseFolderPath
writeToken:toPath:error:
stringByAppendingPathComponent:
removeTokenAtPath:error:
bundleDirectory
zonesFolderPath
privateDatabaseFolderPath
containerID
rootDirectory
processID
privateDatabaseTransactionPath
undoTransactionWithError:
copyItemAtPath:toPath:error:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
createBundleDirectory
removeAllTasksOfType:
migrateWithError:
resetWithError:
needsMigration
startTransactionWithError:
commitTransactionWithError:
removeZoneIdentifier:error:
storeDatabaseToken:error:
storeZoneToken:forZoneIdentifier:error:
removeDatabaseTokenWithError:
removeTokenForZoneIdentifier:error:
databaseToken
zoneTokenForZoneIdentifier:
_processID
_containerID
T@"NSString",R,C,N,V_processID
T@"NSString",R,C,N,V_containerID
_record
T@"CKRecord",R,N,V_record
audioSession
currentRoute
outputs
portType
isOtherAudioPlaying
isAlternativeOutputToBuiltInSpeakerAvailable
setAudioSession:
_audioSession
T@"AVAudioSession",&,N,V_audioSession
startRecognitionGroup
recorders
activeTaps
removeAllObjects
isAudioSourceSupported:
audioEnvironment
setAudioEnvironment:
_recorders
_activeTaps
_startRecognitionGroup
_audioEnvironment
T@"NSMutableArray",R,N,V_activeTaps
T@"NSObject<OS_dispatch_queue>",R,N,V_audioManagerDispatchQueue
T@"NSObject<OS_dispatch_group>",R,N,V_startRecognitionGroup
T@"SHAudioEnvironment",&,N,V_audioEnvironment
T@"NSRecursiveLock",&,N,V_lock
T@"<SHAudioRecordingManagerDelegate>",W,N,V_delegate
T@"NSArray",R,N,V_recorders
hasPrefix:
isEqualLabel:
lowercaseString
_name
T@"NSString",R,N,V_name
initWithResult:error:
_satisfied
satisfied
TB,R,N,GisSatisfied,V_satisfied
encryptedValuesByKey
baseCloudRecordFromTrack:usingEncryption:
setObject:forKeyedSubscript:
coordinate
initWithLatitude:longitude:
initWithRecordID:action:
initWithScope:callingProcessIdentifier:
migrateCacheIfNeeded
cleanupTransactionsWithError:
synchronizeChanges:startCondition:
libraryWillBeginSync:
syncSession
library:didProduceError:withFailedItemIdentifiers:syncAction:
library:didCompleteSyncWithCompletionHandler:
shouldPerformFetch
newFetchTaskWithStartCondition:
updateProgressWithTask:
executeTask:
newModifyTaskWithChanges:startCondition:
syncProgress
shl_markIndeterminate
store
syncActionForTaskType:
finishSession:
retryFailedTasks:
initWithOutcome:retryBlock:
retryHandler
retryTask:withContext:
library:didChangeTracks:syncAction:
library:didChangeGroups:syncAction:
library:didDeleteItemsWithIdentifiers:syncAction:
taskWithFailedItemsAndCurrentChanges:
tracksToAdd
trackIDsToDelete
groupsToAdd
groupIDsToDelete
unionSet:
hasChanges
totalUnitCount
addChild:withPendingUnitCount:
defaultLibrary
session:task:didFetchTracks:
session:task:didFetchGroups:
session:task:didFetchDeletedItemsWithIdentifiers:
T@"SHLShazamLibrary",R,N
initWithCallingProcessIdentifier:
synchronizeWithStartCondition:
clearCachedSyncStatus
isValidCallingProcessIdentifier:
setSyncProgress:
setSyncSession:
setStore:
setRetryHandler:
setShouldPerformFetch:
_shouldPerformFetch
_syncProgress
_syncSession
_store
_retryHandler
T@"NSProgress",&,N,V_syncProgress
T@"SHLSyncSession",&,N,V_syncSession
T@"SHLLibraryStore",&,N,V_store
T@"SHLFailedTaskRetryHandler",&,N,V_retryHandler
TB,N,V_shouldPerformFetch
T@"<SHLShazamLibraryDelegate>",W,N,V_delegate
songItemDictionary
artworkURLFromDictionary:
setFormatOptions:
dateFromString:
uppercaseString
initWithDictionary:
artworkSize
targetArtworkImageSizeFromOriginalSize:
URLWithSize:cropStyle:format:
initWithSongItemDictionary:
appleMusicID
appleMusicURLString
genreNames
releaseDate
isExplicitContent
albumName
isrc
musicVideoRelationIDs
setSongItemDictionary:
_songItemDictionary
T@"NSDictionary",&,N,V_songItemDictionary
T@"NSDate",R,N
_songsDictionary
T@"NSDictionary",R,N,V_songsDictionary
fetchRequest
sortDescriptorWithKey:ascending:
setSortDescriptors:
setReturnsObjectsAsFaults:
setRelationshipKeyPathsForPrefetching:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
tracks
trackFetchedResultsControllerWithContext:
groupFetchedResultsControllerWithContext:
notification
content
mediaItemPresenter
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
setMediaItemPresenter:
_mediaItemPresenter
T@"SHMediaItemPresenter",&,N,V_mediaItemPresenter
setFetchAllChanges:
databaseChangesOperation
setPreviousServerChangeToken:
previousServerChangeToken
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDWasPurgedBlock:
setFetchDatabaseChangesCompletionBlock:
setExpectedReceiveSize:
recordZoneChangesOperation
recordIDsFromCloudBackedZones:
setRecordZoneIDs:
configurationsByRecordZoneIDUsingCache:
setConfigurationsByRecordZoneID:
setRecordWasChangedBlock:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
recordZoneIDs
setDatabaseChangesOperation:
setRecordZoneChangesOperation:
_databaseChangesOperation
_recordZoneChangesOperation
T@"CKFetchDatabaseChangesOperation",&,N,V_databaseChangesOperation
T@"CKFetchRecordZoneChangesOperation",&,N,V_recordZoneChangesOperation
keyWithValue:
creationDate
setCreationDate:
shazamLibraryTrackFromLibraryTrack:
_initWithIdentifier:metadata:tracksToSave:
libraryTrackFromShazamLibraryTrack:
data
syncID
providerID
recognitionID
setArtworkURL:
setShazamURL:
group
latitude
longitude
shazamLibraryGroupFromLibraryGroup:
libraryGroupFromShazamLibraryGroup:
libraryTrackFromManagedTrack:
libraryGroupFromManagedGroup:
executeModifyTask:
executeFetchTask:
schedulerFactory
sessionDispatchQueue
setTransaction:
transaction
setSchedulerFactory:
setSessionDispatchQueue:
_schedulerFactory
_transaction
_sessionDispatchQueue
T@"SHLTaskSchedulerFactory",&,N,V_schedulerFactory
T@"<SHLLocalStateTransactionable>",&,N,V_transaction
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionDispatchQueue
T@"<SHLSyncSessionDelegate>",W,N,V_delegate
deliverContentForNoMatchWithCompletion:
deliverContentForMatchedMediaItem:completion:
deliverContentForMatchedMediaItem:imageData:completion:
initWithToken:
serverChangeToken
_serverChangeToken
T@"CKServerChangeToken",R,N,V_serverChangeToken
handleAudioSessionInterruption:
addObserver:selector:name:object:
handleAudioSessionRouteChange:
handleMediaServicesWereLost:
handleMediaServicesWereReset:
removeObserver:name:object:
registerAudioSessionObservers
setIsAudioSessionInterrupted:
configureAudioSessionForStandardClient:
configureAudioSessionForAssistantService:
setActive:error:
setCategory:withOptions:error:
setMode:error:
setAllowHapticsAndSystemSoundsDuringRecording:error:
preferDecoupledIO:error:
unregisterAudioSessionObservers
setActive:withOptions:error:
unsignedIntegerValue
audioManagerDispatchQueue
setAudioManagerDispatchQueue:
_isAudioSessionInterrupted
_audioManagerDispatchQueue
TB,N,V_isAudioSessionInterrupted
T@"NSObject<OS_dispatch_queue>",&,N,V_audioManagerDispatchQueue
T@"<SHAudioSessionManagerDelegate>",W,N,V_delegate
modifyRecordZonesOperation
recordZonesFromCloudBackedZones:
setRecordZonesToSave:
setModifyRecordZonesCompletionBlock:
recordZonesToSave
recordZoneIDsToDelete
setModifyRecordZonesOperation:
_modifyRecordZonesOperation
T@"CKModifyRecordZonesOperation",&,N,V_modifyRecordZonesOperation
watchdogTimerSource
_watchdogTimerSource
T@"NSObject<OS_dispatch_source>",R,N,V_watchdogTimerSource
serviceDelegate
workers
shouldStartWorker:
_serviceDelegate
T@"SHMediaItemPresenter",R,N,V_mediaItemPresenter
commonInitWithIdentifier:metadata:tracksToSave:
validIdentifier:
isEqualGroup:
setTracksToSave:
_tracksToSave
T@"NSMutableArray",&,N,V_tracksToSave
isShazamKeyValid:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
longLongValue
numberWithLongLong:
_validatedKey
T@"NSString",R,N,V_validatedKey
snapshot
startCondition
_snapshot
_startCondition
T@"<SHMediaLibrarySyncDelegate>",W,N,V_delegate
T@"SHMediaLibrarySnapshot",R,N,V_snapshot
T@"NSString",R,C,N,V_startCondition
outcome
retryBlock
_outcome
_retryBlock
T@"SHLTaskOutcome",R,N,V_outcome
T@?,R,N,V_retryBlock
defaultCenter
removeObserver:
addObserverForName:object:queue:usingBlock:
retryTaskWithTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
subdivideIntoBatchesOfSize:
numberOfItems
sortUsingComparator:
_init
setGroupsToModify:
setTracksToModify:
updateProgress
decodeInt64ForKey:
encodeInt64:forKey:
_tracksToModify
_groupsToModify
T@"SHLLibraryBatch",&,N,V_tracksToModify
T@"SHLLibraryBatch",&,N,V_groupsToModify
T@"<SHLSyncSessionModifyTaskDelegate>",W,N,V_delegate
isEntitledForInternalClient
initWithKeyOptions:valueOptions:capacity:
matcherFactory
inflightMatchAttempts
sendNotifications
notificationScheduler
removeObjectForKey:
objectEnumerator
nextObject
laterDate:
mostDistantActiveMatcherDeadline
timeIntervalSinceNow
keyEnumerator
initWithAudioRecordingManager:entitlements:attribution:notificationScheduler:
startRecognitionForRequest:completionHandler:
_inflightMatchAttempts
_matcherFactory
_notificationScheduler
T@"NSMapTable",R,N,V_inflightMatchAttempts
T@"SHMatcherFactory",R,N,V_matcherFactory
T@"SHMatchResultNotificationScheduler",R,N,V_notificationScheduler
loadEndpointForClientIdentifier:clientType:endpointType:installationID:callback:
matchURLPathForClientIdentifier:
lookupURLPathForClientIdentifier:
storefront
initWithHost:URLPath:
suggestedLanguage
updateTokensForEndpoint:language:storefront:installationID:
storefrontCountryCode:
endpointsWithCompletion:
hostForClientType:completion:
_storefront
T@"SHStorefront",R,N,V_storefront
T@"<SHAudioRecorderDelegate>",W,N,Vdelegate
taskTransformer
scheduleModifyTask:
setTaskTransformer:
_taskTransformer
T@"SHLCloudModifyTaskTransformer",&,N,V_taskTransformer
attachmentWithIdentifier:URL:options:error:
fetchRequestWithEntityName:
T@"SHMetadataMO",&,D,N
T@"NSSet",&,D,N
T@"NSData",&,D,N
T@"SHGroupMO",&,D,N
track
T@"SHTrackMO",&,D,N
T@"NSURL",C,D,N
T@"NSDate",C,D,N
T@"NSArray",&,D,N
Td,D,N
v16@?0@"NSError"8
Attempted to start an unknown service: %@
v8@?0
com.apple.shazamd
artistName
name
shazamUrl
relationships
data
meta
matchOffset
speedSkew
frequencySkew
artwork
width
height
com.apple.ShazamKit
%@ is not supported by shazamd, please use synchronizeSnapshot:startCondition:completionHandler:
v24@?0@"SHDefaultConfigurationValues"8@"NSError"16
v24@?0@"SHCampaignTokens"8@"NSError"16
unknown
external
internal
v16@?0@"SHServerResponseContext"8
v24@?0@"SHTokenizedURL"8@"NSError"16
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
POST
signature
data:audio/vnd.shazam.sig;base64,%@
audioSource
startDate
sessionDurationInSeconds
application/json
Content-Type
com.apple.ShazamNotifications
results
resources
errors
songs
shazam-songs
lyrics
music-videos
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
Failed to open url %@
v24@?0@"NSDictionary"8@"NSError"16
v20@?0B8@"NSError"12
NOMATCH
v16@?0@"UNNotificationContent"8
com.apple.ShazamKit.serverResponseContextBuilder.dispatch
com.apple.musicrecognition
Failed to fetch media item due to missing bundle identifier
Failed to fetch media item with shazam ID %@. Ensure ShazamID is valid.
com.apple.ShazamNotifications.main-thread
com.apple.ShazamNotifications.category.actionable
com.apple.ShazamNotifications.category.default
v16@?0@"UNNotificationAttachment"8
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_SUBTITLE
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_BODY
matches
retry
retryInMilliseconds
recordingIntermissionInMilliseconds
com.apple.assistant_service
%@ is not a valid client identifier
-[_initWithInstallationID:] should not be used on this class
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
attributes
%@ is not supported by shazamd, please use synchronizeSnapshot:startCondition:completionHandler
You don't have permission to fetch the library for %@
@distinctUnionOfObjects.%@
Should not try to save and delete tracks at the same time: %@
Should not try to save and delete groups at the same time: %@
T: +%lu -%lu G: +%lu -%lu
ttml
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
%@ context
%K == %@
%@ != nil
%@ == nil
%K IN %@
syncID
B24@?0@"SHTrackMO"8@"NSDictionary"16
@unionOfObjects.%@.%@
B24@?0@"SHGroupMO"8@"NSDictionary"16
com.apple.shazamd.library.dispatch-queue
com.apple.shazamd.library.sync-queue
v24@?0@"SHMediaLibraryInfo"8@"NSError"16
v24@?0q8q16
v16@?0q8
%@ is not supported by shazamd, please use synchronizeWithContext:
SHLLibraryTrackRecognitionIdentifierKey
_[T]_
%@ %@ is not a valid recognition identifier and key
%@%@%@
v24@?0@"CKAccountInfo"8@"NSError"16
Track with identifier %@ is already associated to a group (%@), try removing it before.
Track with identifier %@ cannot be removed, try adding it before.
SHLSyncSessionFetchTaskIdentifier
SHLSyncSessionFetchTaskFetchType
SHLSyncSessionFetchTaskSyncTrigger
com.shazam.ShazamLibrary.operation-queue
com.shazam.library
v32@?0@"CKRecordID"8@"NSError"16^B24
No account logged in on this device.
Logged in account is restricted.
Logged in account is not a two-factor auth account with at least one passcode enabled device.
Missing encryption identity.
Network is unavailable.
Storage is full.
The content of your Shazam Library was deleted.
The content of your Shazam Library was purged.
Failed to sync your Shazam Library.
Shazam Library saves to the user's private database, which requires an authenticated session.
Parental Controls / Device Management has denied access to account credentials.
A device to device encryption requires an account with two-factor auth and a device with passcode enabled.
Encryption key has been permanently lost.
There's no network available to perform any networking tasks.
The user has reached the storage quota.
All contents have been removed.
All contents have been removed, usually through the Settings UI.
A possible internal sync error, check underlying error for a detailed description.
The user should manually log in.
Switch to an account that is not restricted by the system.
Turn on a passcode on the device and enable two-factor auth on the current iCloud account.
Non-recoverable. The user's local data should be automatically re-sync to Shazam Library.
Wait for network to become available and retry sync later.
The user should manually remove data or upgrade storage plans.
Non-recoverable. The user should choose to remove local data or re-sync to Shazam Library.
Initiate a manual sync later.
You must provide a valid encoded data.
com.apple.ShazamKit.shazamaudiorecorder.dispatch
Recorder using source %li
SHLLibraryTrackIdentifier
SHLLibraryTrackRecognitionIdentifier
SHLLibraryTrackShazamKey
SHLLibraryTrackMetadata
SHLLibraryTrackProviderIdentifier
SHLLibraryTrackProviderName
SHLLibraryTrackDate
SHLLibraryTrackTitle
SHLLibraryTrackSubtitle
SHLLibraryTrackLocation
SHLLibraryTrackCompoundIdentifierKey
SHLLibraryTrackAssociatedGroupIdentifier
SHLLibraryTrackLibrarySet
CFBundleName
%@_ios
You must have a valid Shazam key to create a library item.
%@ is not a valid recognition identifier.
v32@?0@"AVAudioPCMBuffer"8@"AVAudioTime"16@"NSError"24
v16@?0@"NSArray"8
v24@?0@"CPSClipMetadata"8@"NSError"16
com.apple.ShazamNotifications.user-info.payload
com.apple.ShazamNotifications.user-info.media-item
com.apple.ShazamNotifications.user-info.attribution
com.apple.ShazamNotifications.user-info.apple-music
com.apple.aps.shazamd
com.apple.aps.shazamd.queue
SHLibraryAvailabilityListenerUserID
v24@?0@"CKRecordID"8@"NSError"16
ModifyRecords
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
%@_%@
libraryBatchInsertions
libraryBatchDeletions
com.apple.shazam
com.apple.shazam.secure
iCloud.com.shazam.Shazam
shazam-library
Group
detail
code
sh.001
sh.002
ModifySubscriptions
v32@?0@"NSString"8@"NSError"16^B24
Library
v16@?0@"SHLTaskPreconditionResult"8
ShazamLibrary
momd
sqlite
v24@?0q8@"NSError"16
com.apple.shazamlibrary.cloud
inflighttasks
failedtasks
privatedatabase
privatedatabasetransaction
zones
token
zonesubscription
com.apple.ShazamKit.recordingService.audioManager.dispatch
SHLLibraryLabelName
platform
Track
RecognitionIdentifier
ShazamKey
ProviderIdentifier
ProviderName
Date
Title
Subtitle
Location
AssociatedGroupIdentifier
Labels
InitialFetch
InitialUpload
UserAction
RemotePush
Migration
v12@?0B8
albumName
isrc
contentRating
genreNames
releaseDate
public-lyrics
EXPLICIT
SHFetchedResultsControllerTrackCacheName
SHFetchedResultsControllerGroupCacheName
FetchDatabaseChanges
FetchZoneChanges
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
A valid Shazam track requires a ShazamID. Library item (%@) is missing a ShazamID.
com.shazam.ShazamLibrary.syncSession.dispatchQueue
You must conform to the protocol of the modify task you're trying to add.
You must conform to the protocol of the fetch task you're trying to add.
com.apple.shazamd.audiomanager.dispatch
ModifyZones
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
SHLLibraryGroupIdentifier
SHLLibraryGroupMetadata
SHLLibraryGroupTracksToSave
%@ is not a valid identifier.
v16@?0@"NSNotification"8
SHLSyncSessionModifyTaskTracksToModify
SHLSyncSessionModifyTaskGroupsToModify
SHLSyncSessionModifyTaskIdentifier
SHLSyncSessionModifyTaskProgress
SHLSyncSessionModifyTaskRetryCount
SHLSyncSessionModifyTaskSyncTrigger
q24@?0@"SHLLibraryBatch"8@"SHLLibraryBatch"16
%@ is not supported by shazamd, please use startRecognitionForRequest:completionHandler
handleCommonActionsForMatcher: %@ withResponse: %@ matchAttemptWasCancelled %i
v16@?0@"NSString"8
v24@?0@"SHEndpoints"8@"NSError"16
v24@?0@"SHHost"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
SHGroupMO
SHMetadataMO
SHTrackMO
SHConnectionHandle
SHServer
SHServiceProvider
SHConnectionListener
NSXPCListenerDelegate
NSObject
SHShazamResponseItem
SHServerShazamResponse
SHMediaLibrarySyncManager
SHServerResponseContext
SHShazamKitServerMatcher
SHNotificationCenterProvider
SHInflightMatchAttempt
SHServerMatchResponseParser
SHAudioManager
SHAudioSessionManagerDelegate
SHAudioRecordingManagerDelegate
SHServerGetResponseParser
SHLCloudBackedSubscription
SHServerResourcesResponse
SHAMSEndpointRequester
SHNetworkRecognitionRequester
SHMediaItemPresenter
SHWorker
SHMediaItemPresentation
SHMatchResultNotificationScheduler
SHAudioTap
SHMatchResultUserNotificationContentDeliverer
SHServerResponseContextBuilder
SHMultipleConcurrentAudioTapMatcher
SHMatcherDelegate
SHSessionDelegate_Internal
SHSessionDelegate
SHMatcher
SHCloudContainer
SHMediaItemFetcher
SHMatchResultUserNotificationContentProvider
SHServerDataResponse
SHAudioRecorderProvider
SHServerResultsResponse
SHAudioTapProvider
SHShazamKitServerCatalog
SHMatchResultNotificationAttachmentProviderUtilities
SHLLibraryStore
SHLCloudBackedOperation
SHMusicVideoResponseItem
SHServerMusicVideoResponse
SHShazamKitService
SHMediaItemProvider
SHEventSignalScheduler
SHEventSignalling
SHLSyncSessionConfiguration
SHLLibraryChangeset
SHLTaskOutcome
SHLyricsResponseItem
SHServerLyricsResponse
SHMediaLibraryDataStore
NSFetchedResultsControllerDelegate
SHMediaLibraryController
SHLShazamLibraryDelegate
SHMediaLibraryAccountListenerDelegate
SHMediaLibraryDataStoreDelegate
SHMediaLibrary
SHMediaLibrarySync
SHMediaLibraryQuery
SHLLibraryTrackCompoundIdentifier
SHLCloudEncryptionPrecondition
SHLTaskPrecondition
SHServiceStateHandlerUtilities
SHLMutableLibraryGroup
SHLSyncSessionFetchTask
SHLSyncSessionTask
NSSecureCoding
NSCoding
SHLOperationQueue
SHUpdatedTrackLocalTrackPair
SHUpdatedGroupLocalGroupPair
SHMediaLibraryUpdateReport
SHLError
SHLLibraryItemMetadata
NSCopying
SHLMutableLibraryTrack
SHMatcherFactory
SHAudioRecorder
SHLLibraryTrack
SHLLibraryItem
NSMutableCopying
SHLModifyTaskRecovery
SHAudioTapMatcher
SHLCloudFetchTaskScheduler
SHLFetchTaskScheduler
SHLTaskScheduler
SHAppClip
SHMatchResultUserNotificationPayload
SHAPSConnection
APSConnectionDelegate
SHMediaLibrarySyncDelegate
SHMediaLibraryAccountListener
SHLCloudContainerTransformer
SHLTaskSchedulerFactory
SHLCloudModifyTaskTransformer
SHLLibraryBatch
SHLCloudContext
SHServiceStateHandler
SHServiceDelegate
SHLCloudTaskScheduler
SHLCloudGroupTransformer
SHServerErrorResponse
SHLCloudBackedZone
SHMediaLibraryQueryManager
SHLCloudSubscriptionTransformer
SHLTaskPreconditionEvaluator
SHLCloudBackedContainer
SHMediaLibraryPersistentConfiguration
SHLCloudAccountStatusPrecondition
SHLCloudLibraryCache
SHLLibraryCache
SHLLocalStateTransactionable
SHLCloudBackedItem
SHAudioEnvironment
SHAudioRecordingManager
SHAudioRecorderDelegate
SHLLibraryLabel
SHLTaskPreconditionResult
SHLCloudTrackTransformer
SHLShazamLibrary
SHLSyncSessionModifyTaskDelegate
SHLSyncSessionTaskDelegate
SHLSyncSessionDelegate
SHLSyncSessionFetchTaskDelegate
SHSongsResponseItem
SHServerSongsResponse
SHFetchedResultsControllerFactory
SHMatchResultUserNotificationCenterDelegate
UNUserNotificationCenterDelegate
SHLCloudFetchTaskTransformer
SHMediaLibraryItemMapper
SHLSyncSession
SHMatchResultBulletinContentDeliverer
SHMatchResultNotificationContentDeliverer
SHLCloudBackedToken
SHAudioSessionManager
SHLCloudModifyZoneTransformer
SHWatchdogTimer
SHUIService
SHWorkerDelegate
SHLLibraryGroup
SHLShazamKey
SHMediaLibraryContext
ShazamLibrary
SHLTaskRetryContext
SHLFailedTaskRetryHandler
SHLSyncSessionModifyTask
SHMatcherController
SHShazamKitServerURLBuilder
SHSimulatorAudioRecorder
SHLCloudModifyTaskScheduler
SHLModifyTaskScheduler
SHMatchResultUserNotificationAttachmentProvider
SHGroupMO
CoreDataProperties
SHMetadataMO
SHTrackMO
v16@0:8
@40@0:8@16@24@32
@16@0:8
v24@0:8@16
@"<SHServiceDelegate>"
@"NSXPCConnection"
@24@0:8#16
@"NSArray"
@"SHAPSConnection"
@32@0:8@16@24
@"NSXPCListener"16@0:8
@"SHConnectionHandle"32@0:8@"NSXPCConnection"16@"SHAttribution"24
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableArray"
@"NSXPCListener"
@"<SHServiceProvider>"
v24@0:8d16
@"NSISO8601DateFormatter"
@"SHShazamKitServerCatalog"
@"<SHNetworkRecognitionRequester>"
@24@0:8@16
@?16@0:8
v24@0:8@?16
@"SHMatcherRequest"
@48@0:8@16@24@32@40
v32@0:8@16Q24
v32@0:8@"SHAudioSessionManager"16Q24
v32@0:8@16@24
B40@0:8@16@24@32
v32@0:8@"SHAudioRecordingManager"16@"SHAudioTap"24
v24@0:8@"SHAudioRecordingManager"16
v32@0:8@"SHAudioRecordingManager"16@"NSArray"24
B40@0:8@"SHAudioRecorder"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
q16@0:8
v24@0:8q16
@"SHAudioRecordingManager"
@"SHAudioSessionManager"
@40@0:8@16@24^@32
@"CKSubscription"
@"NSDictionary"
v32@0:8@"NSURLRequest"16@?<v@?@"NSData"@"NSURLResponse"@"NSError">24
v40@0:8@16@?24@32
@"AMSMediaRequestEncoder"
@"AMSURLSession"
d16@0:8
@"NSArray"16@0:8
@"<SHWorkerDelegate>"16@0:8
v24@0:8@"<SHWorkerDelegate>"16
v32@0:8@16@?24
v32@0:8@"SHMediaItem"16@?<v@?@"NSError">24
@"<SHWorkerDelegate>"
@"SHMatchedMediaItem"
@"NSUUID"
@"<SHMatchResultNotificationContentDeliverer>"
@32@0:8q16q24
@"SHMatchResultUserNotificationContentProvider"
v32@0:8@"<SHMatcher>"16@"SHMatcherResponse"24
v40@0:8@16@24@32
v32@0:8@"SHSession"16@"SHMatch"24
v40@0:8@"SHSession"16@"SHSignature"24@"NSError"32
B32@0:8@"SHSession"16@"SHSignature"24
v32@0:8@"SHSession"16@"SHMatcherResponse"24
v24@0:8@"SHSession"16
v24@0:8@"SHMatcherRequest"16
@"<SHMatcherDelegate>"16@0:8
v24@0:8@"<SHMatcherDelegate>"16
@"<SHMatcherDelegate>"
@"<SHAudioRecordingManager>"
@"NSRecursiveLock"
@56@0:8@16q24@32@40@48
@"SHAttribution"
@"SHEntitlements"
@40@0:8@16q24@32
@"SHShazamKitServerURLBuilder"
@"SHServerResponseContextBuilder"
@"SHLSyncSessionConfiguration"
@"SHLCloudContainerTransformer"
@"<SHLLibraryCache>"
@"CKDatabaseOperation"
v32@0:8@"NSString"16@?<v@?@"SHMediaItem"@"NSError">24
v32@0:8@"SHMatcherRequest"16@?<v@?>24
v40@0:8@"SHMediaLibrarySnapshot"16@"NSString"24@?<v@?>32
@"SHMatcherController"
@"SHMediaLibrarySyncManager"
@"SHMediaLibraryQueryManager"
@"SHMediaItemFetcher"
@"SHEventSignalScheduler"
@"<SHShazamKitClient>"
Vv24@0:8@16
Vv24@0:8@"NSString"16
v20@0:8B16
@40@0:8q16q24@32
@"NSError"
@24@0:8d16
@"MSVLyricsSongInfo"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
q24@0:8Q16
@"NSFetchedResultsController"
@"<SHMediaLibraryDataStoreDelegate>"
@"NSPersistentContainer"
@"NSManagedObjectContext"
v40@0:8@16@24q32
v48@0:8@16@24@32q40
v24@0:8@"SHLShazamLibrary"16
v40@0:8@"SHLShazamLibrary"16@"NSArray"24q32
v48@0:8@"SHLShazamLibrary"16@"NSError"24@"NSArray"32q40
v32@0:8@"SHLShazamLibrary"16@?<v@?B>24
v32@0:8@"SHMediaLibraryDataStore"16@"SHMediaLibraryChange"24
v32@0:8@"SHMediaLibrarySnapshot"16@"NSString"24
@"<SHMediaLibrarySyncDelegate>"16@0:8
v24@0:8@"<SHMediaLibrarySyncDelegate>"16
v24@0:8@?<v@?@"SHMediaLibraryInfo"@"NSError">16
v32@0:8@"SHMediaLibraryQueryParameters"16@?<v@?@"NSArray"@"NSArray"@"NSError">24
@"SHLShazamLibrary"
@"SHMediaLibraryDataStore"
@"NSObject<OS_dispatch_group>"
@"SHMediaLibraryContext"
@"SHMediaLibraryAccountListener"
v24@0:8@?<v@?@"SHLTaskPreconditionResult">16
@"SHLCloudBackedContainer"
v48@0:8{?=[8I]}16
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSProgress"16@0:8
v24@0:8@"NSString"16
@"SHLSyncSession"16@0:8
v24@0:8@"SHLSyncSession"16
@"NSProgress"
@"SHLSyncSession"
@"<SHLSyncSessionFetchTaskDelegate>"
v28@0:8@16B24
@"NSOperationQueue"
@"NSOperation"
@"SHMediaLibraryTrack"
@"SHTrackMO"
@"SHMediaLibraryGroup"
@"SHGroupMO"
@24@0:8q16
@32@0:8q16@24
d24@0:8@16
q24@0:8@16
@"NSData"
@40@0:8@16@24q32
@"SHAudioTapProvider"
@40@0:8^v16Q24@32
B24@0:8^{OpaqueAudioQueue=}16
B28@0:8i16^@20
B24@0:8^@16
v24@0:8@?<v@?B@"NSError">16
@"<SHAudioRecorderDelegate>"16@0:8
v24@0:8@"<SHAudioRecorderDelegate>"16
^{OpaqueAudioQueue=}16@0:8
v24@0:8^{OpaqueAudioQueue=}16
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
[3^{AudioQueueBuffer}]
@"<SHAudioRecorderDelegate>"
^{OpaqueAudioQueue=}
@"NSObject<OS_dispatch_queue>"
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@24@0:8@"NSString"16
@32@0:8@"NSString"16@"SHLLibraryItemMetadata"24
@"SHLLibraryItemMetadata"16@0:8
@"SHLLibraryItemMetadata"
@"NSDate"
@"SHLShazamKey"
@"CLLocation"
@"SHLLibraryTrackCompoundIdentifier"
@"NSMutableSet"
@56@0:8@16@24@32@40@48
@"SHLSyncSessionModifyTask"
@"SHAudioTap"
@"SHSession"
v24@0:8@"SHLSyncSessionFetchTask"16
@"SHLCloudFetchTaskTransformer"
@"SHLCloudSubscriptionTransformer"
@"SHMediaItem"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"<SHMediaLibrarySync>"16
v32@0:8@"<SHMediaLibrarySync>"16@"SHMediaLibrarySnapshot"24
v40@0:8@"<SHMediaLibrarySync>"16@"NSError"24@"NSArray"32
@"APSConnection"
@"SHMediaLibraryController"
@"<SHMediaLibraryAccountListenerDelegate>"
@"CKModifyRecordsOperation"
@"NSSet"
@"CKContainer"
@"CKRecordZone"
v32@0:8@"<SHService>"16@"<SHWorker>"24
v32@0:8d16@?24
@"SHWatchdogTimer"
@"SHLCloudModifyZoneTransformer"
@"SHLCloudLibraryCache"
@"CKModifySubscriptionsOperation"
B40@0:8@16q24^@32
B40@0:8q16@24^@32
B40@0:8@"<SHLSyncSessionTask>"16q24^@32
B40@0:8q16@"NSString"24^@32
@"NSArray"24@0:8q16
@"<SHLSyncSessionTask>"32@0:8q16@"NSString"24
@32@0:8@16q24
B32@0:8@16^@24
B40@0:8@16@24^@32
@"CKRecord"
@"AVAudioSession"
v40@0:8@"<SHAudioRecorder>"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
v24@0:8@"SHAudioTap"16
B24@0:8q16
@"<SHAudioRecordingManagerDelegate>"
@"SHAudioEnvironment"
@28@0:8B16@20
@28@0:8@16B24
v40@0:8@"SHLSyncSession"16@"<SHLSyncSessionTask>"24@"SHLTaskOutcome"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionModifyTask"24@"NSArray"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionFetchTask"24@"NSArray"32
q24@0:8q16
@"<SHLShazamLibraryDelegate>"
@"SHLLibraryStore"
@"SHLFailedTaskRetryHandler"
{CGSize=dd}32@0:8{CGSize=dd}16
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"SHMediaItemPresenter"
@40@0:8@16@24@?32
@"CKFetchDatabaseChangesOperation"
@"CKFetchRecordZoneChangesOperation"
@"<SHLSyncSessionDelegate>"
@"SHLTaskSchedulerFactory"
@"<SHLLocalStateTransactionable>"
v24@0:8@?<v@?>16
v32@0:8@"SHMatchedMediaItem"16@?<v@?>24
v40@0:8@16@24@?32
@"CKServerChangeToken"
@"<SHAudioSessionManagerDelegate>"
@"CKModifyRecordZonesOperation"
@"NSObject<OS_dispatch_source>"
v28@0:8@"<SHWorker>"16B24
@"<SHMediaLibrarySyncDelegate>"
@"SHMediaLibrarySnapshot"
@32@0:8@16@?24
@"SHLTaskOutcome"
@"<SHLSyncSessionModifyTaskDelegate>"
@"SHLLibraryBatch"
@"NSMapTable"
@"SHMatcherFactory"
@"SHMatchResultNotificationScheduler"
v40@0:8@16q24@?32
v48@0:8@16q24@32@?40
v56@0:8@16q24q32@40@?48
@"SHStorefront"
v24@0:8@"SHLSyncSessionModifyTask"16
@"SHLCloudModifyTaskTransformer"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>shazamd</string>
<key>CFBundleExecutable</key>
<string>shazamd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.shazamd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>shazamd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5283j</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5283j</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>628765583</string>
<key>application-identifier</key>
<string>com.apple.shazamd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.shazam.secure</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.ClipServices</key>
<true/>
<key>com.apple.private.ShazamKit</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/Frameworks/ShazamKit.framework/shazamd</string>
</dict>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.shazam.secure</key>
<string>com.apple.shazam.secure</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.shazamkit.controlcenter.ShazamModule</string>
</array>
<key>com.apple.private.mediasafetynet.exception.shazam</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>shazamd</string>
<key>com.apple.private.shazamkit.persistence</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.ShazamNotifications</string>
</array>
<key>com.apple.security.device.audio-input</key>
<true/>
<key>com.apple.security.device.microphone</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/com.apple.shazamd/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Caches/com.apple.shazamlibrary.cloud/</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.play-media</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.shazamd</string>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
@(#)PROGRAM:shazamd  PROJECT:ShazamKit-1
Deallocating the XPC connection
Failed to setup the remote proxy %@
Connection listener removed a handle, now we have %lu left
Calling stop on the service %@ of the handle %@
Interruption handler called for service %@ from %@:%i
Invalidation handler called for service %@ from %@:%i
Failed to set tmp dir suffix
Calling completion handler %@ on library controller %@
Shazam service matching signature of duration %f with data of length %lu at %@
Received network response, no data %@
Server response parser: No response %@
Server response parser: Error, %@
Server response parser: Error, returning results, recording intermission %f, retry %f
Server response parser: Returning results, recording intermission %f, retry %f
Server response parser: has match %@
Server response parser: has no match
Audio interruption ended but recording should not restart
Resuming recording after interruption
Assistant service will attach a tap
willAttachTap: number of assistant taps %li
Assistant service has detached a tap
didDetachTap: number of assistant taps %li
audioRecordingManagerWillStartRecording - number of assistant taps %li
audioRecordingManagerDidStopRecording
Server response parser: has no media items
Failed to fetch data task %@
Failed to encode network request %@
Presenting media item %@
No web URL available for media item %@
Attempting to open app directly with url %@
Unable to get strong reference to self
Opened url %@ in the Shazam app
failed to open app, likely not installed - requesting App Clip
Opened url %@ as an App Clip
Falling back to launching url %@ in Safari
Failed to open url with error %@
Opened URL %@ with result %@
Sending no match notification
Sending match notification
Error adding notification request %@
Failed to schedule notification: %@
Failed to create dispatch group while loading context
Failed to add default values to response context %@
Failed to add campaign token to response context %@
SHMultipleConcurrentAudioTapMatcher Calling stop on audioTapMatchers %@
Suggested audio recording source %li signature source %li shouldAttempt %i
Failed fetching media item, bundle identifier missing
URL %@ not properly tokenized
Fetching media item at %@
Error fetching media item %@
Returning audio tap for source %li bundle identifier %@
Deallocating the Shazam Service
Current Bundle ID is not entitled to use the Library SPI
Missing Bundle ID, it's required to sync the Library
Sent signal event: %@
Failed to parse lyrics song info %@
Failed to load description %@
Failed to observe local track changes: %@
Failed to observe local group changes: %@
Updating existing entries for %lu library track(s)
Creating entries for %lu library track(s)
Updating existing entries for %lu Library Group IDs: %@
Creating entries for %lu library group(s)
Failed to purge local group objects: %@
Failed to purge local track objects: %@
Failed to delete sync metadata: %@
Failed to fetch request %{public}@
Persisting a Track with an associated Group ID, but there is no group saved locally. Will fallback to creation.
Failed to convert %@ to %@
Processed %lu changes before sync. Inserted %ld & Updated %ld local group entries
Processed %lu changes before sync. Inserted %ld & Updated %ld local track entries
Processed %lu deletions before sync. Deleted %ld local entries
Failed to persist library changes with error %@
iCloud account is not available or device to device encryption is not supported, skipping remote sync
Syncronize changes with changeset: %@
Processed %lu returned track changes. Inserted %ld & Updated %ld local entries
Processed %lu returned group changes. Inserted %ld & Updated %ld local entries
Processed %lu returned deletions. Deleted %ld local entries
Failed to persist sync changes with error: %@
Clear all local data and cache sync status
Failed to fetch account info %@
Account supports device to device encryption
Deallocating SHAudioRecorder
Already running audio queue
Failed to create a new audio queue input with error %@
Failed to set audio queue property
Failed to add isRunning property listener
Failed to start audio queue, retry one more time
Failed to stop audio queue %@
Failed to remove isRunning property listener %@
Failed to dispose audio queue %@
Failed to start audio queue after a retry
Audio queue for audio recorder %@ has changed running state %i
Error: audio tap matcher: %@ asked to start recognition when it is already matching
startRecognition based upon deadline %@
No buffer received in tap completion - error %@
Tagging finish conditions: timeOut %d, oneAttempt: %d, foundMatch: %d, failed %d
Stopping recognition
Stopping recognition for matcher %@
<task: %{public}@ %@> Local subscription for <zone: %{public}@> does not exist, creating one now
<task: %{public}@ %@> <zone: %{public}@> does not exist, so we are attempting to create one with a subscription
<task: %{public}@ %@> is scheduled
Requesting app clip metadata for url %@
Error requesting App Clip metadata %@
Requesting app clip for url %@
Error in requestClipWithCompletion %@ clipIsAvailable %i
App clip request was successful
Unable to unarchive notification payload data %@ with error %@
Received public token '%@' on connection %@
APS push received for topic: '%@'
Ignoring APS push message, not a CloudKit update
iCloud account has changed, updating current user account id
Failed to complete modify operation. Error %@
Service %@ stopping after final worker %@ finished
Service %@ started running %@
Starting watchdog timer for %f seconds
Stopping watchdog timer
Unable to load Application Support directory: %@
Parent directory of persistent store url doesn't exist, creating one now
Failed to create persistent store directory: %@
Persistent store url missing, fallback to in memory store type
iCloud account is available
No iCloud account available
iCloud account is restricted
iCloud account is temporarily unavailable
Failed to retrieve iCloud account information with error %@
Deallocating recording service
Starting recording
Failed to start recorder %@ with error: %@
Stopping recording for reason %lu
Stopping recorder: %@
Failed to stop recorder with error: %@
Stopped recording for reason %lu
Detached tap: %@ taps remaining: %@
Internal audio source support: %d alternative output source to built-in speaker is available: %d other audio playing %d
Marking the internal audio source as preferred
Marking the external audio source as preferred
Sync started with startCondition: %{public}@
Failed to complete <task: %{public}@ %@> and not retrying due to <error: %@>
Finished <task: %{public}@ %@> and sync complete
Finished <task: %{public}@ %@>, still syncing
Client called Library completion with success = %d for <task: %{public}@ %@>
Error finishing transaction for <task: %{public}@ %@> %@
Finished handling transaction for <task: %{public}@ %@>
Uploaded %lu modified tracks
Uploaded %lu modified groups
Deleted %lu items
Fetched %lu tracks
Fetched %lu groups
Fetched %lu deleted items
Current local cache requires migration
Successfully migrated local cache
Failed to migrate current local cache %@
Received notification response %@ for request %@ with content %@
No webURL provided for payload %@
Presenting media item with web url %@
Presented media item with error %@
Using <token: %@> for database fetch
<zone: %@> does not exist locally, saving now
<zone: %@> was deleted
<zone: %@> was purged
Updated database <token: %@>
Failed to fetch changes for record (%@)
Updated <zone: %{public}@> token: %@>
<zone: %{public}@> token has expired. Removing saved token
Using <zone changes configuration: %@> for fetch
Failed to schedule <task: %{public}@ %@> pre-conditions were not satisifed
Deallocating audio session manager
Registering audio session observers
Unregistering audio session observers
Activating audio session
Failed to activate AVAudioSession: %@
configureAudioSessionForStandardClient
Failed to set category on AVAudioSession: %@
Failed to set mode: %@
Failed to enable haptics while recording: %@
Failed to decouple IO AVAudioSession: %@
configureAudioSessionForAssistantService
Deactivating audio session
Failed to deactivate AVAudioSession: %@
Audio interruption started
Audio interruption ended
Media services lost notification - stopping recognition
Media services reset notification - restarting recognition
handleAudioSessionRouteChange: %@
Failed to complete zone operation. Error %@
Watchdog timer fired
Worker %@ changed running state to %d
Retrying <task: %{public}@ %@> after %f seconds <error: %@>
Retrying <task: %{public}@ %@> immediately <error: %@>
Unable to fetch matcher - it is likely some required entitlements are missing
Missing or invalid host %@
Missing or invalid match endpoint %@
Fetching endpoint with storefront %@
<task: %{public}@ %@> <zone: %{public}@> does not exist locally, so we are creating one
zoneName
URLByAppendingPathExtension:
URLForResource:withExtension:
URLRepresentation
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
URLWithSize:cropStyle:format:
URLByAppendingPathComponent:isDirectory:
URLWithString:
UUID
UUIDString
accountInfoWithCompletionHandler:
accountStatus
accountStatusWithCompletionHandler:
addChanges:
JSONObjectWithData:options:error:
addChild:withPendingUnitCount:
addDependency:
addFinishBlock:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperations:waitUntilFinished:
addValue:forHTTPHeaderField:
allObjects
allValues
allocWithZone:
amsBag
andPredicateWithSubpredicates:
annotateClientError:code:underlyingError:
annotateError:withError:
appendString:
appleMusicURL
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObjects:count:
artist
artworkSize
ascending
attachmentWithIdentifier:URL:options:error:
audioBufferList
audioRecordingSource
audioStartDate
auditToken
base64EncodedStringWithOptions:
bundleForClass:
cStringUsingEncoding:
campaignTokenWithCompletion:
categoryWithIdentifier:actions:intentIdentifiers:options:
changeType
code
completedUnitCount
containerIdentifier
containerWithIdentifier:
containingAppBundleIdentifier
containsMediaItemWithFuzzyTolerance:
containsObject:
containsString:
containsTokens
content
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
coordinate
copy
copyItemAtPath:toPath:error:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
creationDate
currentRoute
currentRunLoop
dataRepresentation
dataTaskPromiseWithRequest:
dataUsingEncoding:
dataWithContentsOfFile:
dataWithJSONObject:options:error:
dateByAddingTimeInterval:
dateFromString:
dateWithTimeIntervalSinceNow:
deadline
decimalDigitCharacterSet
decodeInt64ForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultManager
defaultSessionConfiguration
defaultSound
defaultValuesWithCompletion:
defaultWorkspace
deleteObject:
dictionary
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
discoverabilitySignal
domain
doubleValue
downloadTaskWithURL:completionHandler:
duration
encodeInt64:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeSystemFieldsWithCoder:
encodedData
encryptedValuesByKey
endpointsWithCompletion:
entity
entityForName:inManagedObjectContext:
enumerateKeysAndObjectsUsingBlock:
errorResponseForSignature:error:
errorWithCode:underlyingError:keyOverrides:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
executeFetchRequest:error:
executeRequest:withContext:error:
fetchRequestWithEntityName:
fetchUserRecordIDWithCompletionHandler:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileURLWithPath:
filterOptions
filteredArrayUsingPredicate:
finishDecoding
firstObject
globallyUniqueString
hasHitDeadline
hasPrefix:
hasRequiredEntitlements:
hostForClientType:completion:
initForReadingFromData:error:
initRequiringSecureCoding:
initStandardFormatWithSampleRate:channels:
initWithAudioTimeStamp:sampleRate:
initWithClientIdentifier:bag:
initWithConnection:
initWithContentsOfURL:
initWithDictionary:
initWithDomain:code:userInfo:
initWithEnvironmentName:namedDelegatePort:queue:
initWithFetchRequest:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
initWithHost:URLPath:
initWithIdentifier:bundleID:context:
initWithKeyOptions:valueOptions:capacity:
initWithLatitude:longitude:
initWithLibraryItem:changeType:indexPath:
initWithLyricsStartDate:lines:songwriters:
initWithMachServiceName:
initWithMatchedMediaItemDictionary:syncedLyrics:
initWithMediaItems:forSignature:
initWithName:managedObjectModel:
initWithPCMFormat:frameCapacity:
initWithRecordID:action:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRecordingIntermission:retrySeconds:match:signature:stillRunningAssociatedRequest:error:
initWithStatus:encrypted:
initWithStreamDescription:
initWithString:
initWithTTMLData:
initWithTokenService:
initWithTokenService:bag:
initWithURL:
initWithZoneID:
initWithZoneID:subscriptionID:
initWithZoneName:ownerName:
insertNewObjectForEntityForName:inManagedObjectContext:
intersectSet:
invalidateAndCancel
invertedSet
isCancelled
isEntitledForExternalAudioRecording
isEntitledForInternalAudioRecording
isEntitledForInternalClient
isEntitledForMicrophone
isEqualToString:
isFinished
isKindOfEntity:
keyEnumerator
lastPathComponent
laterDate:
length
libraryItem
loadPersistentStoresWithCompletionHandler:
localizedDescription
localizedUserNotificationStringForKey:arguments:
longLongValue
lookupURLPathForClientIdentifier:
lowercaseString
lyricLineWithText:offset:
lyricsLineStartingBeforeTimeOffset:
lyricsLines
lyricsText
mainBundle
mainQueue
match
matchStreamingBuffer:atTime:
matchURLPathForClientIdentifier:
matchWithRecordingIntermission:retrySeconds:match:
mediaItemWithProperties:
mediaItems
mergeByPropertyStoreTrumpMergePolicy
metrics
minusSet:
moveItemAtURL:toURL:error:
mutableCopy
newBackgroundContext
nextLine
nextObject
noMatchWithRecordingIntermission:retrySeconds:signature:
notification
notificationFromRemoteNotificationDictionary:
notificationType
numberWithBool:
numberWithDouble:
numberWithLongLong:
objectEnumerator
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
openURL:configuration:completionHandler:
openWithURL:configuration:completionHandler:
options
outputs
parseWithError:
path
performBlockAndWait:
performFetch:
persistentStoreCoordinator
persistentStoreDescriptions
populateRemoteConfiguration
portType
precomposedStringWithCanonicalMapping
predicateWithBlock:
predicateWithFormat:
preferDecoupledIO:error:
previousServerChangeToken
privateCloudDatabase
processIdentifier
processInfo
productName
progressWithTotalUnitCount:
querySignature
raise:format:
rangeOfCharacterFromSet:
rangeOfString:options:
recordID
recordIDsToDelete
recordName
recordType
recordZoneIDs
recordZoneIDsToDelete
recordZonesToSave
recordingIntermission
recordsToSave
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeItemAtPath:error:
removeItemAtURL:error:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:
removeObserver:name:object:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
requestByEncodingRequest:parameters:
requestClipWithCompletion:
requestMetadataWithCompletion:
requestWithIdentifier:content:trigger:
requestWithURL:
requiresAttributionForBundlerIdentifier:
response
result
resultsLimit
resume
sampleRate
save:
zoneID
writeToFile:options:error:
whitespaceAndNewlineCharacterSet
webURL
valueForKeyPath:
userInfo
uppercaseString
updateToken:withValue:
unsignedIntegerValue
unlock
unionSet:
totalUnitCount
topic
tokenForClientIdentifier:
timeIntervalSinceNow
temporaryDirectory
supportsDeviceToDeviceEncryption
suggestedLanguage
substringToIndex:
substringFromIndex:
subscriptionsToSave
subscriptionIDsToDelete
subscriptionID
stringWithFormat:
stringFromDate:
stringByTrimmingCharactersInSet:
stringByReplacingOccurrencesOfString:withString:
stringByAppendingPathComponent:
string
streamDescription
storefrontCountryCode:
stopCondition
status
startTime
standardUserDefaults
source
sortUsingComparator:
sortDescriptorWithKey:ascending:
signature
sharedSession
set_rawResponseSongs:
setWithObjects:
setWithArray:
setWantsNotificationResponsesDelivered
setWaitsForConnectivity:
setValue:forKey:
setUsesPersistentHistoryTracking:
setUserInfo:
setURL:
setType:
setTrack:
setTotalUnitCount:
setTimeoutIntervalForRequest:
setThreadIdentifier:
setSyncID:
setSubscriptionsToSave:
setSound:
setSortDescriptors:
setShouldSuppressDefaultAction:
setShouldSendContentAvailable:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
setShouldIgnoreDowntime:
setShouldIgnoreDoNotDisturb:
setShouldHideDate:
setShouldBackgroundDefaultAction:
setShouldAuthenticateDefaultAction:
setShazamURL:
setSavePolicy:
setReturnsObjectsAsFaults:
setRemoteObjectInterface:
setRelationshipKeyPathsForPrefetching:
setRecordsToSave:
setRecordZonesToSave:
setRecordZoneWithIDWasPurgedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDChangedBlock:
setRecordZoneIDs:
setRecordZoneFetchCompletionBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordWithIDWasDeletedBlock:
setRecordWasChangedBlock:
setRecordIDsToDelete:
setRecognitionID:
setQuantity:
setProviderID:
setProtocolHandler:
setPreviousServerChangeToken:
setPredicate:
setPersistentStoreDescriptions:
setPerRecordSaveBlock:
setObject:forKeyedSubscript:
setObject:forKey:
setNotificationInfo:
setNotificationCategories:
setName:
setModifySubscriptionsCompletionBlock:
setModifyRecordsCompletionBlock:
setModifyRecordZonesCompletionBlock:
setMode:error:
setMergePolicy:
setMaxConcurrentOperationCount:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
sendEvent:
sendEvent:withPayload:
sendNotifications
sessionDuration
sessionProxy
setActive:error:
setActive:withOptions:error:
setAllowHapticsAndSystemSoundsDuringRecording:error:
setApplicationBundleIdentifierOverrideForTCC:
setArtworkURL:
setAttachments:
setAudioRecordingSource:
setAutomaticallyRetryNetworkFailures:
setBody:
setCategory:withOptions:error:
setCategoryIdentifier:
setCompletedUnitCount:
setConfigurationsByRecordZoneID:
setCreationDate:
setData:
setDatabase:
setLongitude:
setLaunchReason:
setLatitude:
setLabels:
setInvalidationHandler:
setInterruptionHandler:
setIncludesPendingChanges:
setIdentityToken:
setHTTPMethod:
setHTTPBody:
setGroup:
setFrontBoardOptions:
setFrameLength:
setFormatOptions:
setFetchRecordZoneChangesCompletionBlock:
setDiscretionary:
setDiscretionaryNetworkBehavior:
setExpectedReceiveSize:
setExpectedSendSize:
setExpirationDate:
setExportedInterface:
setFetchAllChanges:
setFetchDatabaseChangesCompletionBlock:
setFetchLimit:
dealloc
init
initWithConnection:exportedInterface:remoteInterface:
exportedObject
setExportedObject:
remoteObject
serviceStateHandler
setServiceStateHandler:
connection
.cxx_destruct
_remoteObject
_serviceStateHandler
_connection
T@"NSXPCConnection",R,N,V_connection
T@,R,N,V_remoteObject
T@,&,N
T@"<SHServiceDelegate>",&,N,V_serviceStateHandler
start
buildListeners
buildListenerForMachService:
listeners
apsConnection
_listeners
_apsConnection
T@"NSArray",R,N,V_listeners
T@"SHAPSConnection",R,N,V_apsConnection
availableServices
buildListener
handleForConnection:withAttribution:
initWithService:
eventsServiceHandleForConnection:withAttribution:
shazamKitServiceHandleForConnection:withAttribution:
uiServiceHandlerForConnection:withAttribution:
machServiceName
_machServiceName
T@"NSString",R,C,N,V_machServiceName
stop
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
initWithServiceProvider:listener:
listen
connectionHandles
listener
serviceProvider
lock
setLock:
_lock
_connectionHandles
_listener
_serviceProvider
T@"NSMutableArray",R,N,V_connectionHandles
T@"NSXPCListener",R,N,V_listener
T@"<SHServiceProvider>",R,N,V_serviceProvider
T{os_unfair_lock_s=I},N,V_lock
initWithShazamItemDictionary:
shazamID
shazamURL
title
artistName
artworkURL
matchOffset
speedSkew
frequencySkew
songRelationIDs
extractIDsFromRelation:
shazamItemDictionary
setShazamItemDictionary:
_shazamItemDictionary
T@"NSDictionary",&,N,V_shazamItemDictionary
T@"NSNumber",R,N
T@"NSArray",R,C,N
initWithShazamDictionary:
itemForIdentifier:
shazamDictionary
setShazamDictionary:
_shazamDictionary
T@"NSDictionary",&,N,V_shazamDictionary
updateSnapshotWithAttribution:
activeControllers
_activeControllers
T@"NSMapTable",R,N,V_activeControllers
sh_setDefaultValuesWithCompletion:
sh_setCampaignTokenForClientIdentifier:completion:
defaultRecordingIntermissionInSeconds
setDefaultRecordingIntermissionInSeconds:
campaignToken
setCampaignToken:
_defaultRecordingIntermissionInSeconds
_campaignToken
Td,N,V_defaultRecordingIntermissionInSeconds
T@"NSString",C,N,V_campaignToken
initWithCatalog:
initWithCatalog:recognitionRequester:
iso8601Formatter
responseForServerData:signature:
matchSignature:tokenizedURL:
partnerURLRequestForSignature:endpoint:
buildURLForSignature:endpoint:
catalog
setCatalog:
setNetworkRequester:
_iso8601Formatter
_catalog
T@"SHShazamKitServerCatalog",&,N,V_catalog
T@"<SHNetworkRecognitionRequester>",&,N,V_networkRequester
T@"NSISO8601DateFormatter",R,N,V_iso8601Formatter
T@"<SHMatcherDelegate>",W,N,V_delegate
matchResultNotificationCenter
initWithRequest:
request
completion
setCompletion:
_request
_completion
T@"SHMatcherRequest",R,N,V_request
T@?,C,N,V_completion
matcherResponseFromServerData:signature:context:
mediaItemFromResourcesResponse:shazamID:signatureStartDate:campaignToken:
sharedInstance
audioSessionManager:interruptionBeganWithOptions:
audioSessionManager:interruptionEndedWithOptions:
audioRecordingManager:willAttachTap:
audioRecordingManager:didDetachTap:
audioRecordingManagerWillStartRecording:
audioRecordingManagerDidStopRecording:
audioRecordingManager:failedToStartRecorders:
recorder:shouldProcessAudioBuffer:atTime:
initWithAudioSessionManager:audioRecordingManager:
audioRecordingManager
audioSessionManager
activeAssistantServiceTaps
setActiveAssistantServiceTaps:
_audioRecordingManager
_audioSessionManager
_activeAssistantServiceTaps
Tq,V_activeAssistantServiceTaps
T@"SHAudioRecordingManager",R,N,V_audioRecordingManager
T@"SHAudioSessionManager",R,N,V_audioSessionManager
mediaItemsFromServerData:context:error:
mediaItemFromResourcesResponse:shazamID:campaignToken:
mediaDictionaryFromResourcesResponse:shazamID:campaignToken:
initWithSubscription:
subscription
_subscription
T@"CKSubscription",R,N,V_subscription
initWithResourcesDictionary:
songsResponse
shazamResponse
lyricsResponse
musicVideoResponse
resourcesDictionary
setResourcesDictionary:
_resourcesDictionary
T@"NSDictionary",&,N,V_resourcesDictionary
T@"SHServerSongsResponse",R,N
T@"SHServerShazamResponse",R,N
T@"SHServerLyricsResponse",R,N
T@"SHServerMusicVideoResponse",R,N
performRequest:withReply:
invalidate
initWithClientIdentifier:clientType:
handleResult:callback:error:
isTokenFailureError:
sessionConfiguration
encoder
clientIdentifier
setClientIdentifier:
clientType
setClientType:
session
setSession:
_encoder
_clientIdentifier
_clientType
_session
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_clientType
T@"AMSURLSession",&,N,V_session
T@"AMSMediaRequestEncoder",R,N,V_encoder
requiredEntitlements
timeRequiredToPerformWork
workerDelegate
setWorkerDelegate:
isRunning
managesRecordingSession
T@"<SHWorkerDelegate>",W,N
TB,R
TB,R,N
presentMediaItem:completionHandler:
_isRunning
_workerDelegate
T@"<SHWorkerDelegate>",W,N,V_workerDelegate
TB,R,V_isRunning
setUserNotificationCenter:
userNotificationCenter
T@"UNUserNotificationCenter",&,N
canSendNotificationForMatch:
sendNotificationForMatch:
canSendNotificationForNoMatchSignatureID:
sendNotificationForNoMatch
sendAnalyticsEventForMatch:
sendMatchNotification:
currentMediaItem
setCurrentMediaItem:
currentSignatureID
setCurrentSignatureID:
contentDeliverer
_currentMediaItem
_currentSignatureID
_contentDeliverer
T@"SHMatchedMediaItem",&,N,V_currentMediaItem
T@"NSUUID",&,N,V_currentSignatureID
T@"<SHMatchResultNotificationContentDeliverer>",R,N,V_contentDeliverer
initWithRecordingSource:client:
open
close
recordingSource
client
isClosed
_isClosed
_recordingSource
_client
Tq,R,N,V_recordingSource
Tq,R,N,V_client
TB,R,N,V_isClosed
initWithContentProvider:
contentProvider
_contentProvider
T@"SHMatchResultUserNotificationContentProvider",R,N,V_contentProvider
loadContextForClientIdentifier:completion:
matcher:didFindMatch:
matcher:didNotFindMatch:
matcher:didFail:
session:didFindMatch:
session:didNotFindMatchForSignature:error:
session:shouldAttemptToMatchSignature:
session:didProduceResponse:
finishedSession:
startRecognitionForRequest:
delegate
setDelegate:
T@"<SHMatcherDelegate>",W,N
initWithAudioTapMatchers:audioRecordingManager:
handleCommonActionsForMatcher:withResponse:
audioTapMatchers
_audioTapMatchers
T@"NSArray",R,N,V_audioTapMatchers
T@"<SHAudioRecordingManager>",R,N,V_audioRecordingManager
T@"NSRecursiveLock",R,N,V_lock
T@"<SHMatcherDelegate>",W,N,Vdelegate
sharedContainer
T@"CKContainer",R,N
initWithAttribution:clientType:
initWithAttribution:clientType:URLBuilder:contextBuilder:networkRequester:
mediaItemForShazamID:completionHandler:
URLBuilder
contextBuilder
attribution
networkRequester
_URLBuilder
_contextBuilder
_attribution
_networkRequester
T@"SHShazamKitServerURLBuilder",R,N,V_URLBuilder
T@"SHServerResponseContextBuilder",R,N,V_contextBuilder
T@"SHAttribution",R,N,V_attribution
T@"<SHNetworkRecognitionRequester>",R,N,V_networkRequester
Tq,R,N,V_clientType
notificationCategories
initWithAttribution:
notificationContentForMediaItem:completionHandler:
notificationContentForNoMatch
setAttribution:
T@"SHAttribution",&,N,V_attribution
initWithDataArray:
shazamIDs
dataArray
setDataArray:
_dataArray
T@"NSArray",&,N,V_dataArray
T@"NSArray",R,N
simulatorRecorders
iOSAudioRecorders
watchOSAudioRecorders
tvOSAudioRecorders
macOSAudioRecorders
availableRecorders
initWithResultsDictionary:
retrySeconds
recordingIntermissionSeconds
resultsDictionary
setResultsDictionary:
_resultsDictionary
T@"NSDictionary",&,N,V_resultsDictionary
Td,R,N
initWithAudioRecordingManager:entitlements:bundleIdentifier:
tapForSource:
isEntitledForSource:
T@"SHEntitlements",R,N,V_entitlements
_initWithInstallationID:
validateClientIdentifier:
initWithClientIdentifier:clientType:installationID:
loadConfiguration:
loadContext:
_createMatcher
installationID
setURLBuilder:
setContextBuilder:
_installationID
T@"SHShazamKitServerURLBuilder",&,N,V_URLBuilder
T@"SHServerResponseContextBuilder",&,N,V_contextBuilder
T@"NSString",R,C,N,V_installationID
T@"NSString",R,C,N,V_clientIdentifier
downloadImageURL:completionHandler:
initWithConfiguration:
currentCache
configuration
setConfiguration:
containerTransformer
setContainerTransformer:
setCurrentCache:
_configuration
_containerTransformer
_currentCache
T@"SHLSyncSessionConfiguration",&,N,V_configuration
T@"SHLCloudContainerTransformer",&,N,V_containerTransformer
T@"<SHLLibraryCache>",&,N,V_currentCache
initWithOperation:
operation
privateOperation
setPrivateOperation:
_privateOperation
T@"CKDatabaseOperation",&,N,V_privateOperation
T@"CKDatabaseOperation",R,N
initWithMusicVideoItemDictionary:
musicVideoItemDictionary
setMusicVideoItemDictionary:
_musicVideoItemDictionary
T@"NSDictionary",&,N,V_musicVideoItemDictionary
T@"NSURL",R,N
initWithMusicVideoDictionary:
itemForIdentifiers:
musicVideoDictionary
setMusicVideoDictionary:
_musicVideoDictionary
T@"NSDictionary",&,N,V_musicVideoDictionary
startRecognitionForRequest:completionHandler:
synchronizeSnapshot:startCondition:completionHandler:
initWithEntitlements:attribution:
isEntitledForLibrarySPI
isCurrentBundleIdentifierValid
matcherController
notificationScheduler
librarySyncManager
libraryQueryManager
mediaItemFetcher
eventSignalScheduler
entitlements
setEntitlements:
_entitlements
_matcherController
_notificationScheduler
_librarySyncManager
_libraryQueryManager
_mediaItemFetcher
_eventSignalScheduler
T@"SHEntitlements",&,N,V_entitlements
T@"SHMatcherController",R,N,V_matcherController
T@"SHMatchResultNotificationScheduler",R,N,V_notificationScheduler
T@"SHMediaLibrarySyncManager",R,N,V_librarySyncManager
T@"SHMediaLibraryQueryManager",R,N,V_libraryQueryManager
T@"SHMediaItemFetcher",R,N,V_mediaItemFetcher
T@"SHEventSignalScheduler",R,N,V_eventSignalScheduler
T@"<SHShazamKitClient>",W,N,V_delegate
sendEventSignal:
setIsRunning:
initWithType:scope:callingProcessIdentifier:
sessionType
sessionScope
callingProcessIdentifier
_sessionType
_sessionScope
_callingProcessIdentifier
Tq,R,N,V_sessionType
Tq,R,N,V_sessionScope
T@"NSString",R,C,N,V_callingProcessIdentifier
tracksToAdd
tracksToDelete
groupsToAdd
groupsToDelete
trackIDsToDelete
groupIDsToDelete
deleteTracks:
addGroups:
deleteGroups:
mergeChangeset:
trackSetToAdd
setTrackSetToAdd:
trackSetToDelete
setTrackSetToDelete:
groupSetToAdd
setGroupSetToAdd:
groupSetToDelete
setGroupSetToDelete:
_trackSetToAdd
_trackSetToDelete
_groupSetToAdd
_groupSetToDelete
T@"NSMutableSet",&,N,V_trackSetToAdd
T@"NSMutableSet",&,N,V_trackSetToDelete
T@"NSMutableSet",&,N,V_groupSetToAdd
T@"NSMutableSet",&,N,V_groupSetToDelete
initWithError:
initWithTasksToRetry:error:
_initWithTasksToRetry:error:
failedItemIdentifiers
tasksToRetry
_tasksToRetry
T@"NSArray",R,N,V_tasksToRetry
initWithLyricsItemDictionary:
lyricLines
lyricsSnippet
staticLyrics
songwriters
parseTTMLFromLyricsItemDictionary:
snippetFromOffset:
songInfo
setSongInfo:
_songInfo
T@"MSVLyricsSongInfo",&,N,V_songInfo
T@"NSString",R,C,N
initWithLyricsDictionary:
lyricsDictionary
setLyricsDictionary:
_lyricsDictionary
T@"NSDictionary",&,N,V_lyricsDictionary
providerID
syncID
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
initWithStoreType:
loadStoreWithType:
fetchLibraryItemsWithParameters:completionHandler:
fetchLibraryTracksWithParameters:
fetchAllUploadableTracksMissingLibrarySyncMetadata
fetchAllUploadableGroupsMissingLibrarySyncMetadata
fetchLibraryGroupsWithParameters:
persistUpdatedTracks:completionHandler:
updateReportForLibraryTrack:
persistLibraryGroups:completionHandler:
updateReportForLibraryGroups:
deleteItemsByIdentifiers:completionHandler:
deleteAllItemsWithFetchRequest:completionHandler:
deleteAllItems
deleteAllSyncMetadataItems
commitChangesWithError:
reset
fetchManagedObjectForRequest:withPredicate:context:
createMetadataWithData:track:group:context:
associateTrack:toGroupWithIdentifier:context:
updateManagedTrack:withUpdatedTrack:
tracksFetchedResultsController
groupsFetchedResultsController
libraryItemFromManagedObject:
libraryChangeTypeForFetchedResultsChangeType:
persistentContainer
setPersistentContainer:
managedObjectContext
setManagedObjectContext:
_tracksFetchedResultsController
_groupsFetchedResultsController
_persistentContainer
_managedObjectContext
T@"NSPersistentContainer",&,N,V_persistentContainer
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSFetchedResultsController",R,N,V_tracksFetchedResultsController
T@"NSFetchedResultsController",R,N,V_groupsFetchedResultsController
T@"<SHMediaLibraryDataStoreDelegate>",W,N,V_delegate
_library:didProduceError:failedItemIdentifiers:
_libraryDidCompleteSync:
_libraryWillBeginSync:
_library:didChangeWithSnapshot:
libraryWillBeginSync:
library:didChangeTracks:syncAction:
library:didChangeGroups:syncAction:
library:didDeleteItemsWithIdentifiers:syncAction:
library:didProduceError:withFailedItemIdentifiers:syncAction:
library:didCompleteSyncWithCompletionHandler:
currentLibraryAccountHasChanged
libraryDataStore:didUpdateWithChange:
_synchronizeSnapshot:startCondition:
T@"<SHMediaLibrarySyncDelegate>",W,N
_libraryInfoWithCompletionHandler:
_queryLibraryWithParameters:completionHandler:
initWithBundleIdentifier:
initWithDataStore:remoteLibrary:accountListener:
commonInitWithDataStore:remoteLibrary:accountListener:
synchronizeWithContext:
synchronizeLocalSnapshot:
synchronizeRemoteSnapshot:startCondition:
_synchronizeRemoteSnapshot:startCondition:
unsyncedGroupChangeset
unsyncedTrackChangeset
shazamLibrarySyncStartConditionForMediaLibraryStartCondition:
beginLibrarySync
persistChangesAndCompleteSyncWithCompletionHandler:
handleLibraryError:failedItemIdentifiers:
resetDataIfNeededForSyncError:
mapInternalLibraryErrorToMediaLibrary:
currentSnapshot
setCurrentSnapshot:
remoteLibrary
setRemoteLibrary:
dataStore
setDataStore:
dataStoreShouldPersistChanges
syncGroup
setSyncGroup:
dispatchQueue
setDispatchQueue:
syncQueue
setSyncQueue:
currentContext
setCurrentContext:
accountListener
setAccountListener:
_dataStoreShouldPersistChanges
_currentSnapshot
_remoteLibrary
_dataStore
_syncGroup
_dispatchQueue
_syncQueue
_currentContext
_accountListener
T@"SHLShazamLibrary",&,N,V_remoteLibrary
T@"SHMediaLibraryDataStore",&,N,V_dataStore
T@"SHMediaLibrarySnapshot",&,N,V_currentSnapshot
TB,R,N,V_dataStoreShouldPersistChanges
T@"NSObject<OS_dispatch_group>",&,N,V_syncGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
T@"SHMediaLibraryContext",&,N,V_currentContext
T@"SHMediaLibraryAccountListener",&,N,V_accountListener
T@"<SHMediaLibrarySyncDelegate>",W,N,Vdelegate
identifierWithRecognitionIdentifier:shazamKey:
compoundIdentifierFromTrackIdentifier:
isTrackIdentifier:
shazamKeyFromTrackIdentifier:
recognitionIdentifierFromTrackIdentifier:
initWithRecognitionIdentifier:shazamKey:
libraryItemIdentifier
hasValidRecognitionIdentifier
_recognitionIdentifier
_shazamKey
T@"NSString",R,N,V_recognitionIdentifier
T@"SHLShazamKey",R,N,V_shazamKey
evaluatePreconditionWithCompletion:
initWithContainer:
cloudContainer
setCloudContainer:
_cloudContainer
T@"SHLCloudBackedContainer",&,N,V_cloudContainer
registerBundleAttributionForAuditToken:
powerlogCallingProcessBundleID:startDate:endDate:
startMediaSafetyNetExemption
stopMediaSafetyNetExemption
addTracks:
removeTracks:
copyWithZone:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
type
identifier
progress
size
retryCount
setRetryCount:
syncStartCondition
setSyncStartCondition:
Tq,R,N
T@"NSString",R,N
T@"NSProgress",R,N
Tq,N
T@"NSString",N
T@"SHLSyncSession",W,N
fetchType
setFetchType:
_progress
_identifier
_retryCount
_syncStartCondition
_fetchType
_delegate
Tq,N,V_fetchType
T@"<SHLSyncSessionFetchTaskDelegate>",W,N,V_delegate
T@"NSString",R,N,V_identifier
T@"NSProgress",R,N,V_progress
Tq,N,V_retryCount
T@"NSString",N,V_syncStartCondition
T@"SHLSyncSession",W,N,Vsession
defaultQueue
initOperationQueue
addOperation:
addOperation:waitUntilFinished:
cancelAllOperations
operationQueue
setOperationQueue:
tailOperation
setTailOperation:
_operationQueue
_tailOperation
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperation",W,N,V_tailOperation
initWithUpdatedTrack:localTrack:
updatedTrack
localTrack
_updatedTrack
_localTrack
T@"SHMediaLibraryTrack",R,N,V_updatedTrack
T@"SHTrackMO",R,N,V_localTrack
initWithUpdatedGroup:localGroup:
updatedGroup
localGroup
_updatedGroup
_localGroup
T@"SHMediaLibraryGroup",R,N,V_updatedGroup
T@"SHGroupMO",R,N,V_localGroup
locallyFoundTracks
missingFromLocalStoreTracks
locallyFoundGroups
missingFromLocalStoreGroups
_locallyFoundTracks
_missingFromLocalStoreTracks
_locallyFoundGroups
_missingFromLocalStoreGroups
T@"NSMutableArray",R,N,V_locallyFoundTracks
T@"NSMutableArray",R,N,V_missingFromLocalStoreTracks
T@"NSMutableArray",R,N,V_locallyFoundGroups
T@"NSMutableArray",R,N,V_missingFromLocalStoreGroups
errorWithCode:
errorWithCode:underlyingError:
errorWithUnderlyingError:
retrySecondsForError:
canRetryForError:
canRetryForPartialError:
errorCode:underlyingError:
userInfoForErrorCode:withUnderlyingError:
errorCodeForError:
localizedDescriptionForSyncError:
localizedFailureReasonForSyncError:
localizedRecoverySuggestionForSyncError:
initWithEncodedSystemData:
initWithMetadata:
validEncodedSystemData:
encodedSystemData
_encodedSystemData
T@"NSData",R,N,V_encodedSystemData
date
T@"NSDate",&,D,N
recognitionIdentifier
T@"NSString",&,D,N
shazamKey
T@"SHLShazamKey",&,D,N
T@"NSString",C,D,N
subtitle
location
T@"CLLocation",&,D,N
initWithAudioTapProvider:
matcherForRequest:attribution:clientType:
audioTapProvider
_audioTapProvider
T@"SHAudioTapProvider",R,N,V_audioTapProvider
audioBufferFromData:byteSize:inFormat:
isAudioQueueRunning:
hasAudioQueueFailedWithStatus:annotateError:
startRecordingWithCompletion:
stopRecordingWithError:
T@"<SHAudioRecorderDelegate>",W,N
initWithRecordingSource:
stopAudioQueueAndClearBuffersWithError:
startAudioQueueAfterRetrySecondsWithCompletion:
setRecordingSource:
audioQueue
setAudioQueue:
audioStreamBasicDescription
setAudioStreamBasicDescription:
audioRecorderDispatchQueue
setAudioRecorderDispatchQueue:
mBuffers
_audioQueue
_audioRecorderDispatchQueue
_audioStreamBasicDescription
Tq,N,V_recordingSource
T^{OpaqueAudioQueue=},N,V_audioQueue
T{AudioStreamBasicDescription=dIIIIIIII},N,V_audioStreamBasicDescription
T@"NSObject<OS_dispatch_queue>",&,N,V_audioRecorderDispatchQueue
T@"<SHAudioRecorderDelegate>",W,N,V_delegate
_initWithIdentifier:metadata:labels:
commonInitWithIdentifier:metadata:labels:
bundleName
labels
addLabel:
removeLabel:
initWithLibraryTrack:
isEqualTrack:
validProviderIdentifier
validProviderName
platformLabel
addPlatformLabel
initWithRecognitionIdentifier:shazamKey:metadata:
_initWithRecognitionIdentifier:shazamKey:metadata:labels:
providerName
setProviderName:
providerIdentifier
setProviderIdentifier:
setDate:
setRecognitionIdentifier:
setShazamKey:
setTitle:
setSubtitle:
setLocation:
associatedGroupIdentifier
setAssociatedGroupIdentifier:
compoundIdentifier
labelSet
setLabelSet:
_providerName
_providerIdentifier
_date
_title
_subtitle
_location
_associatedGroupIdentifier
_compoundIdentifier
_labelSet
T@"NSMutableSet",&,N,V_labelSet
T@"NSDate",&,N,V_date
T@"NSString",&,N,V_recognitionIdentifier
T@"SHLShazamKey",&,N,V_shazamKey
T@"NSString",C,N,V_title
T@"NSString",C,N,V_subtitle
T@"CLLocation",&,N,V_location
T@"NSString",&,N,V_associatedGroupIdentifier
T@"NSString",&,N,V_providerIdentifier
T@"NSString",&,N,V_providerName
T@"NSSet",R,N
T@"SHLLibraryTrackCompoundIdentifier",R,N,V_compoundIdentifier
initWithOriginalTask:savedGroups:savedTracks:deletedIDs:error:
recoverableTasks
recoverTaskFromPartialError
recoverTaskFromLimitExceededError
originalTask
setOriginalTask:
savedGroups
setSavedGroups:
savedTracks
setSavedTracks:
deletedIDs
setDeletedIDs:
setError:
_originalTask
_savedGroups
_savedTracks
_deletedIDs
T@"SHLSyncSessionModifyTask",&,N,V_originalTask
T@"NSArray",&,N,V_savedGroups
T@"NSArray",&,N,V_savedTracks
T@"NSArray",&,N,V_deletedIDs
T@"NSError",&,N,V_error
initWithAudioTap:audioRecordingManager:catalog:
responseSignatureForRequest:
finishSessionConditionsMetForRequest:response:
_stop
audioTap
matcherRequest
setMatcherRequest:
_audioTap
_matcherRequest
T@"SHAudioTap",R,N,V_audioTap
T@"SHSession",R,N,V_session
T@"SHMatcherRequest",&,N,V_matcherRequest
preconditions
scheduleFetchTask:
fetchTaskTransformer
setFetchTaskTransformer:
subscriptionTaskTransformer
setSubscriptionTaskTransformer:
_fetchTaskTransformer
_subscriptionTaskTransformer
T@"SHLCloudFetchTaskTransformer",&,N,V_fetchTaskTransformer
T@"SHLCloudSubscriptionTransformer",&,N,V_subscriptionTaskTransformer
requestAppClipForURL:withCompletionHandler:
payloadFromNotificationContentUserInfo:
userInfoPayloadForMediaItem:bundleIdentifier:
notificationFromLegacyUserInfoFormat:
mediaItem
setMediaItem:
bundleIdentifier
setBundleIdentifier:
_mediaItem
_bundleIdentifier
T@"SHMediaItem",&,N,V_mediaItem
T@"NSString",C,N,V_bundleIdentifier
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
registerForPushNotifications
apsEnvironment
libraryController
connectionQueue
setConnectionQueue:
_apsEnvironment
_libraryController
_connectionQueue
T@"APSConnection",R,N,V_connection
T@"NSString",R,C,N,V_apsEnvironment
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"SHMediaLibraryController",R,N,V_libraryController
fetchLibraryInfoWithCompletionHandler:
libraryStatusForAccountStatus:
observeAccountChangedNotification
updateAccountInfo
fetchAccountInfoWithCompletionHandler:
updateUserRecordWithAccountInfo:completion:
fetchUserRecordIDWithCompletion:
currentUserID
setCurrentUserID:
T@"NSString",C,N
T@"<SHMediaLibraryAccountListenerDelegate>",W,N,V_delegate
initWithScope:
cloudBackedContainer
scope
setScope:
_scope
Tq,N,V_scope
modifyTaskScheduler
fetchTaskScheduler
createTransaction
T@"<SHLModifyTaskScheduler>",R,N
T@"<SHLFetchTaskScheduler>",R,N
cloudBackedOperationFromModifyTask:container:
recordsToSaveFromModifyTask:container:
recordIDsToDeleteFromModifyTask:
modifyRecordsOperation
setModifyRecordsOperation:
_modifyRecordsOperation
T@"CKModifyRecordsOperation",&,N,V_modifyRecordsOperation
initWithInsertions:deletions:
differenceOfBatch:
subdivideIntoBatchesOfSize:
hasChanges
numberOfItems
insertions
deletions
_insertions
_deletions
T@"NSSet",R,N,V_insertions
T@"NSSet",R,N,V_deletions
changes
TB,R,N,GhasChanges
sharedContext
T@"SHLCloudContext",R,N
defaultContainer
manateeContainer
debugContainer
shazamLibraryZone
containerWithScope:
_defaultContainer
_manateeContainer
_debugContainer
_shazamLibraryZone
T@"CKContainer",R,N,V_debugContainer
T@"CKContainer",R,N,V_defaultContainer
T@"CKContainer",R,N,V_manateeContainer
T@"CKRecordZone",R,N,V_shazamLibraryZone
service:updatedWorker:
initWithBundleIdentifier:connection:
startWatchdogTimerForInterval:firedCompletion:
stopWatchdogTimer
watchdogTimer
startManagedRecordingDate
setStartManagedRecordingDate:
_watchdogTimer
_startManagedRecordingDate
T@"NSDate",&,N,V_startManagedRecordingDate
T@"SHWatchdogTimer",R,N,V_watchdogTimer
T@"NSString",R,C,N,V_bundleIdentifier
zoneTransformer
setZoneTransformer:
cache
setCache:
_zoneTransformer
_cache
T@"SHLCloudModifyZoneTransformer",&,N,V_zoneTransformer
T@"SHLCloudLibraryCache",&,N,V_cache
T@"SHLSyncSessionConfiguration",R,N,V_configuration
libraryGroupFromCloudBackedItem:
cloudBackedItemFromLibraryGroup:
baseCloudRecordFromGroup:
initWithErrorDictionary:
errorCodeForResponseCode:
errorDictionary
setErrorDictionary:
_errorDictionary
T@"NSDictionary",&,N,V_errorDictionary
T@"NSError",R,N
initWithZone:
_zone
T@"CKRecordZone",R,N,V_zone
setLibraryController:
cloudBackedOperationForZones:container:
newSubscriptionForZoneID:
modifySubscriptionsOperation
setModifySubscriptionsOperation:
_modifySubscriptionsOperation
T@"CKModifySubscriptionsOperation",&,N,V_modifySubscriptionsOperation
evaluatePreconditions:withCompletion:
initWithContainer:usingEncryption:
container
isEncrypted
_encrypted
_container
T@"CKContainer",R,N,V_container
encrypted
TB,R,N,GisEncrypted,V_encrypted
managedObjectModelURL
applicationSupportDirectory
persistentStoreURL
persistentStoreDescriptionForStoreType:
storeTask:ofType:error:
removeTaskOfType:forIdentifier:error:
removeAllTasksOfType:
tasksOfType:
taskOfType:identifier:
migrateWithError:
resetWithError:
needsMigration
startTransactionWithError:
undoTransactionWithError:
commitTransactionWithError:
initWithCallingProcessIdentifier:containerIdentifier:
tasksForFolderPath:ofType:
taskForFilePath:
storeZoneIdentifier:error:
removeZoneIdentifier:error:
zoneExistsForIdentifier:
storeDatabaseToken:error:
storeZoneToken:forZoneIdentifier:error:
writeToken:toPath:error:
removeDatabaseTokenWithError:
removeTokenForZoneIdentifier:error:
removeTokenAtPath:error:
databaseToken
zoneTokenForZoneIdentifier:
storeSubscription:forZoneIdentifier:error:
removeSubscriptionForZoneIdentifier:error:
subscriptionExistsForZoneIdentifier:
doesLegacyCacheDirectoryExist
createBundleDirectory
doesCacheDirectoryExist
doesZoneFolderPathExist
createZoneFolderPath
doesTaskFolderPathsExist
createTaskFolderPaths
doesPrivateDatabaseFolderPathExist
createPrivateDatabaseFolderPathWithError:
legacyCacheDirectory
rootDirectory
bundleDirectory
cacheDirectory
currentDatabaseFolderPath
privateDatabaseFolderPath
privateDatabaseTransactionPath
zonesFolderPath
inflightFolderPath
failedFolderPath
zonePathForIdentifier:
inflightTaskPathForIdentifier:
failedTaskPathForIdentifier:
processID
containerID
_processID
_containerID
T@"NSString",R,C,N,V_processID
T@"NSString",R,C,N,V_containerID
initWithRecord:
record
_record
T@"CKRecord",R,N,V_record
isAlternativeOutputToBuiltInSpeakerAvailable
isOtherAudioPlaying
audioSession
setAudioSession:
_audioSession
T@"AVAudioSession",&,N,V_audioSession
recorder:producedAudioBuffer:atTime:
attachTap:
detachTap:
startRecording
stopRecordingForReason:
suggestedAudioRecordingSource
recorders
initWithRecorders:
isAudioSourceSupported:
activeTaps
audioManagerDispatchQueue
startRecognitionGroup
audioEnvironment
setAudioEnvironment:
_recorders
_activeTaps
_audioManagerDispatchQueue
_startRecognitionGroup
_audioEnvironment
T@"NSMutableArray",R,N,V_activeTaps
T@"NSObject<OS_dispatch_queue>",R,N,V_audioManagerDispatchQueue
T@"NSObject<OS_dispatch_group>",R,N,V_startRecognitionGroup
T@"SHAudioEnvironment",&,N,V_audioEnvironment
T@"NSRecursiveLock",&,N,V_lock
T@"<SHAudioRecordingManagerDelegate>",W,N,V_delegate
T@"NSArray",R,N,V_recorders
initWithName:
isEqualLabel:
name
_name
T@"NSString",R,N,V_name
fulfilledResult
failedResult
resultWithError:
initWithResult:error:
isSatisfied
error
_satisfied
_error
satisfied
TB,R,N,GisSatisfied,V_satisfied
T@"NSError",R,N,V_error
libraryTrackFromCloudBackedItem:usingEncryption:
cloudBackedItemFromLibraryTrack:usingEncryption:
baseCloudRecordFromTrack:usingEncryption:
defaultLibrary
session:task:didProduceOutcome:
session:task:didModifyTracks:
session:task:didModifyGroups:
session:task:didDeleteItemsWithIdentifiers:
session:task:didFetchTracks:
session:task:didFetchGroups:
session:task:didFetchDeletedItemsWithIdentifiers:
T@"SHLShazamLibrary",R,N
initWithCallingProcessIdentifier:
initWithScope:callingProcessIdentifier:
synchronizeWithStartCondition:
synchronizeChanges:startCondition:
clearCachedSyncStatus
finishSession:
newModifyTaskWithChanges:startCondition:
newFetchTaskWithStartCondition:
taskWithFailedItemsAndCurrentChanges:
isValidCallingProcessIdentifier:
migrateCacheIfNeeded
updateProgressWithTask:
syncActionForTaskType:
retryFailedTasks:
syncProgress
setSyncProgress:
syncSession
setSyncSession:
store
setStore:
retryHandler
setRetryHandler:
shouldPerformFetch
setShouldPerformFetch:
_shouldPerformFetch
_syncProgress
_syncSession
_store
_retryHandler
T@"NSProgress",&,N,V_syncProgress
T@"SHLSyncSession",&,N,V_syncSession
T@"SHLLibraryStore",&,N,V_store
T@"SHLFailedTaskRetryHandler",&,N,V_retryHandler
TB,N,V_shouldPerformFetch
T@"<SHLShazamLibraryDelegate>",W,N,V_delegate
initWithSongItemDictionary:
appleMusicID
appleMusicURLString
genreNames
releaseDate
isExplicitContent
albumName
isrc
lyricsRelationIDs
musicVideoRelationIDs
artworkURLFromDictionary:
targetArtworkImageSizeFromOriginalSize:
songItemDictionary
setSongItemDictionary:
_songItemDictionary
T@"NSDictionary",&,N,V_songItemDictionary
T@"NSDate",R,N
initWithSongsDictionary:
songsDictionary
_songsDictionary
T@"NSDictionary",R,N,V_songsDictionary
metadata
tracks
trackFetchedResultsControllerWithContext:
groupFetchedResultsControllerWithContext:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
setMediaItemPresenter:
T@"SHMediaItemPresenter",&,N,V_mediaItemPresenter
cloudBackedDatabaseChangesOperationFromFetchTask:container:completion:
cloudBackedZoneChangesOperationFromFetchTask:forChangedZones:container:
recordIDsFromCloudBackedZones:
configurationsByRecordZoneIDUsingCache:
databaseChangesOperation
setDatabaseChangesOperation:
recordZoneChangesOperation
setRecordZoneChangesOperation:
_databaseChangesOperation
_recordZoneChangesOperation
T@"CKFetchDatabaseChangesOperation",&,N,V_databaseChangesOperation
T@"CKFetchRecordZoneChangesOperation",&,N,V_recordZoneChangesOperation
shazamLibraryTrackFromLibraryTrack:
libraryTrackFromShazamLibraryTrack:
shazamLibraryGroupFromLibraryGroup:
libraryGroupFromShazamLibraryGroup:
libraryTrackFromManagedTrack:
libraryGroupFromManagedGroup:
executeTask:
executeModifyTask:
executeFetchTask:
cleanupTransactionsWithError:
schedulerFactory
setSchedulerFactory:
transaction
setTransaction:
sessionDispatchQueue
setSessionDispatchQueue:
_schedulerFactory
_transaction
_sessionDispatchQueue
T@"SHLTaskSchedulerFactory",&,N,V_schedulerFactory
T@"<SHLLocalStateTransactionable>",&,N,V_transaction
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionDispatchQueue
T@"<SHLSyncSessionDelegate>",W,N,V_delegate
deliverContentForNoMatchWithCompletion:
deliverContentForMatchedMediaItem:completion:
deliverContentForMatchedMediaItem:imageData:completion:
initWithToken:
serverChangeToken
_serverChangeToken
T@"CKServerChangeToken",R,N,V_serverChangeToken
handleAudioSessionInterruption:
handleAudioSessionRouteChange:
handleMediaServicesWereLost:
handleMediaServicesWereReset:
registerAudioSessionObservers
unregisterAudioSessionObservers
activateAudioSessionForClient:
configureAudioSessionForStandardClient:
configureAudioSessionForAssistantService:
deactivateAudioSession
isAudioSessionInterrupted
setIsAudioSessionInterrupted:
setAudioManagerDispatchQueue:
_isAudioSessionInterrupted
TB,N,V_isAudioSessionInterrupted
T@"NSObject<OS_dispatch_queue>",&,N,V_audioManagerDispatchQueue
T@"<SHAudioSessionManagerDelegate>",W,N,V_delegate
cloudBackedOperationForZonesToSave:container:
recordZonesFromCloudBackedZones:
modifyRecordZonesOperation
setModifyRecordZonesOperation:
_modifyRecordZonesOperation
T@"CKModifyRecordZonesOperation",&,N,V_modifyRecordZonesOperation
watchdogTimerSource
_watchdogTimerSource
T@"NSObject<OS_dispatch_source>",R,N,V_watchdogTimerSource
initializeGlobalServiceState
workerUpdated:withRunningState:
mediaItemPresenter
workers
shouldStartWorker:
serviceDelegate
setServiceDelegate:
_mediaItemPresenter
_serviceDelegate
T@"SHMediaItemPresenter",R,N,V_mediaItemPresenter
initWithIdentifier:
initWithIdentifier:metadata:
T@"SHLLibraryItemMetadata",R,N
mutableCopyWithZone:
_initWithIdentifier:metadata:tracksToSave:
commonInitWithIdentifier:metadata:tracksToSave:
initWithLibraryGroup:
isEqualGroup:
validIdentifier:
tracksToSave
setTracksToSave:
_metadata
_tracksToSave
T@"NSMutableArray",&,N,V_tracksToSave
T@"SHLLibraryItemMetadata",R,N,V_metadata
keyWithValue:
initWithKey:
isShazamKeyValid:
validatedKey
_validatedKey
T@"NSString",R,N,V_validatedKey
initWithSnapshot:startCondition:
snapshot
startCondition
_snapshot
_startCondition
T@"<SHMediaLibrarySyncDelegate>",W,N,V_delegate
T@"SHMediaLibrarySnapshot",R,N,V_snapshot
T@"NSString",R,C,N,V_startCondition
shl_exceptionWithName:reason:
initWithOutcome:retryBlock:
outcome
retryBlock
_outcome
_retryBlock
T@"SHLTaskOutcome",R,N,V_outcome
T@?,R,N,V_retryBlock
retryTaskWithTimer:
retryTask:withContext:
initWithTracksToModify:groupsToModify:
_init
subdivideTaskIntoBatchesOfSize:
allItemIdentifiers
updateProgress
tracksToModify
setTracksToModify:
groupsToModify
setGroupsToModify:
_tracksToModify
_groupsToModify
T@"SHLLibraryBatch",&,N,V_tracksToModify
T@"SHLLibraryBatch",&,N,V_groupsToModify
T@"<SHLSyncSessionModifyTaskDelegate>",W,N,V_delegate
initWithAudioRecordingManager:entitlements:attribution:notificationScheduler:
mostDistantActiveMatcherDeadline
inflightMatchAttempts
matcherFactory
_inflightMatchAttempts
_matcherFactory
T@"NSMapTable",R,N,V_inflightMatchAttempts
T@"SHMatcherFactory",R,N,V_matcherFactory
updateTokensForEndpoint:language:storefront:installationID:
loadLookupEndpointForClientIdentifier:clientType:callback:
loadMatchEndpointForClientIdentifier:clientType:installationID:callback:
loadEndpointForClientIdentifier:clientType:endpointType:installationID:callback:
storefront
_storefront
T@"SHStorefront",R,N,V_storefront
shl_markIndeterminate
T@"<SHAudioRecorderDelegate>",W,N,Vdelegate
scheduleModifyTask:
taskTransformer
setTaskTransformer:
_taskTransformer
T@"SHLCloudModifyTaskTransformer",&,N,V_taskTransformer
notificationAttachmentForMediaItem:completionHandler:
fetchRequest
T@"SHMetadataMO",&,D,N
T@"NSSet",&,D,N
data
T@"NSData",&,D,N
group
T@"SHGroupMO",&,D,N
track
T@"SHTrackMO",&,D,N
T@"NSURL",C,D,N
T@"NSDate",C,D,N
T@"NSArray",&,D,N
latitude
Td,D,N
longitude
recognitionID
v16@?0@"NSError"8
Attempted to start an unknown service: %@
v8@?0
com.apple.shazamd
artistName
name
shazamUrl
relationships
meta
matchOffset
speedSkew
frequencySkew
artwork
width
height
com.apple.ShazamKit
%@ is not supported by shazamd, please use synchronizeSnapshot:startCondition:completionHandler:
v24@?0@"SHDefaultConfigurationValues"8@"NSError"16
v24@?0@"SHCampaignTokens"8@"NSError"16
unknown
external
internal
POST
signature
data:audio/vnd.shazam.sig;base64,%@
audioSource
startDate
sessionDurationInSeconds
com.apple.ShazamNotifications
results
resources
errors
data
songs
shazam-songs
lyrics
music-videos
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
Failed to open url %@
v24@?0@"NSDictionary"8@"NSError"16
v20@?0B8@"NSError"12
NOMATCH
v16@?0@"UNNotificationContent"8
com.apple.ShazamKit.serverResponseContextBuilder.dispatch
com.apple.musicrecognition
Failed to fetch media item due to missing bundle identifier
Failed to fetch media item with shazam ID %@. Ensure ShazamID is valid.
application/json
Content-Type
v16@?0@"SHServerResponseContext"8
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v24@?0@"SHTokenizedURL"8@"NSError"16
com.apple.ShazamNotifications.main-thread
com.apple.ShazamNotifications.category.actionable
com.apple.ShazamNotifications.category.default
v16@?0@"UNNotificationAttachment"8
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_SUBTITLE
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_BODY
matches
retry
retryInMilliseconds
recordingIntermissionInMilliseconds
com.apple.assistant_service
%@ is not a valid client identifier
-[_initWithInstallationID:] should not be used on this class
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
attributes
%@ is not supported by shazamd, please use startRecognitionForRequest:completionHandler
%@ is not supported by shazamd, please use synchronizeSnapshot:startCondition:completionHandler
You don't have permission to fetch the library for %@
@distinctUnionOfObjects.%@
Should not try to save and delete tracks at the same time: %@
Should not try to save and delete groups at the same time: %@
T: +%lu -%lu G: +%lu -%lu
ttml
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
%@ context
%K == %@
%@ != nil
%@ == nil
%K IN %@
syncID
B24@?0@"SHTrackMO"8@"NSDictionary"16
@unionOfObjects.%@.%@
B24@?0@"SHGroupMO"8@"NSDictionary"16
com.apple.shazamd.library.dispatch-queue
com.apple.shazamd.library.sync-queue
v24@?0@"SHMediaLibraryInfo"8@"NSError"16
v24@?0q8q16
v16@?0q8
%@ is not supported by shazamd, please use synchronizeWithContext:
SHLLibraryTrackRecognitionIdentifierKey
SHLLibraryTrackShazamKey
_[T]_
%@ %@ is not a valid recognition identifier and key
%@%@%@
v24@?0@"CKAccountInfo"8@"NSError"16
Track with identifier %@ is already associated to a group (%@), try removing it before.
Track with identifier %@ cannot be removed, try adding it before.
SHLSyncSessionFetchTaskIdentifier
SHLSyncSessionFetchTaskFetchType
SHLSyncSessionFetchTaskSyncTrigger
com.shazam.ShazamLibrary.operation-queue
com.shazam.library
v32@?0@"CKRecordID"8@"NSError"16^B24
No account logged in on this device.
Logged in account is restricted.
Logged in account is not a two-factor auth account with at least one passcode enabled device.
Missing encryption identity.
Network is unavailable.
Storage is full.
The content of your Shazam Library was deleted.
The content of your Shazam Library was purged.
Failed to sync your Shazam Library.
Shazam Library saves to the user's private database, which requires an authenticated session.
Parental Controls / Device Management has denied access to account credentials.
A device to device encryption requires an account with two-factor auth and a device with passcode enabled.
Encryption key has been permanently lost.
There's no network available to perform any networking tasks.
The user has reached the storage quota.
All contents have been removed.
All contents have been removed, usually through the Settings UI.
A possible internal sync error, check underlying error for a detailed description.
The user should manually log in.
Switch to an account that is not restricted by the system.
Turn on a passcode on the device and enable two-factor auth on the current iCloud account.
Non-recoverable. The user's local data should be automatically re-sync to Shazam Library.
Wait for network to become available and retry sync later.
The user should manually remove data or upgrade storage plans.
Non-recoverable. The user should choose to remove local data or re-sync to Shazam Library.
Initiate a manual sync later.
You must provide a valid encoded data.
com.apple.ShazamKit.shazamaudiorecorder.dispatch
Recorder using source %li
SHLLibraryTrackIdentifier
SHLLibraryTrackRecognitionIdentifier
SHLLibraryTrackMetadata
SHLLibraryTrackProviderIdentifier
SHLLibraryTrackProviderName
SHLLibraryTrackDate
SHLLibraryTrackTitle
SHLLibraryTrackSubtitle
SHLLibraryTrackLocation
SHLLibraryTrackCompoundIdentifierKey
SHLLibraryTrackAssociatedGroupIdentifier
SHLLibraryTrackLibrarySet
CFBundleName
%@_ios
You must have a valid Shazam key to create a library item.
%@ is not a valid recognition identifier.
v32@?0@"AVAudioPCMBuffer"8@"AVAudioTime"16@"NSError"24
v16@?0@"NSArray"8
v24@?0@"CPSClipMetadata"8@"NSError"16
com.apple.ShazamNotifications.user-info.payload
com.apple.ShazamNotifications.user-info.media-item
com.apple.ShazamNotifications.user-info.attribution
com.apple.ShazamNotifications.user-info.apple-music
com.apple.aps.shazamd
com.apple.aps.shazamd.queue
SHLibraryAvailabilityListenerUserID
v24@?0@"CKRecordID"8@"NSError"16
ModifyRecords
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
%@_%@
libraryBatchInsertions
libraryBatchDeletions
com.apple.shazam
com.apple.shazam.secure
iCloud.com.shazam.Shazam
shazam-library
Group
detail
code
sh.001
sh.002
ModifySubscriptions
v32@?0@"NSString"8@"NSError"16^B24
Library
v16@?0@"SHLTaskPreconditionResult"8
ShazamLibrary
momd
sqlite
v24@?0q8@"NSError"16
com.apple.shazamlibrary.cloud
inflighttasks
failedtasks
privatedatabase
privatedatabasetransaction
zones
token
zonesubscription
com.apple.ShazamKit.recordingService.audioManager.dispatch
SHLLibraryLabelName
platform
Track
RecognitionIdentifier
ShazamKey
ProviderIdentifier
ProviderName
Date
Title
Subtitle
Location
AssociatedGroupIdentifier
Labels
InitialFetch
InitialUpload
UserAction
RemotePush
Migration
v12@?0B8
albumName
isrc
contentRating
genreNames
releaseDate
public-lyrics
EXPLICIT
SHFetchedResultsControllerTrackCacheName
SHFetchedResultsControllerGroupCacheName
FetchDatabaseChanges
FetchZoneChanges
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
A valid Shazam track requires a ShazamID. Library item (%@) is missing a ShazamID.
com.shazam.ShazamLibrary.syncSession.dispatchQueue
You must conform to the protocol of the modify task you're trying to add.
You must conform to the protocol of the fetch task you're trying to add.
com.apple.shazamd.audiomanager.dispatch
ModifyZones
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
SHLLibraryGroupIdentifier
SHLLibraryGroupMetadata
SHLLibraryGroupTracksToSave
%@ is not a valid identifier.
v16@?0@"NSNotification"8
SHLSyncSessionModifyTaskTracksToModify
SHLSyncSessionModifyTaskGroupsToModify
SHLSyncSessionModifyTaskIdentifier
SHLSyncSessionModifyTaskProgress
SHLSyncSessionModifyTaskRetryCount
SHLSyncSessionModifyTaskSyncTrigger
q24@?0@"SHLLibraryBatch"8@"SHLLibraryBatch"16
handleCommonActionsForMatcher: %@ withResponse: %@ matchAttemptWasCancelled %i
v16@?0@"NSString"8
v24@?0@"SHEndpoints"8@"NSError"16
v24@?0@"SHHost"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
SHGroupMO
SHMetadataMO
SHTrackMO
SHConnectionHandle
SHServer
SHServiceProvider
SHConnectionListener
NSXPCListenerDelegate
NSObject
SHShazamResponseItem
SHServerShazamResponse
SHMediaLibrarySyncManager
SHServerResponseContext
SHShazamKitServerMatcher
SHNotificationCenterProvider
SHInflightMatchAttempt
SHServerMatchResponseParser
SHAudioManager
SHAudioSessionManagerDelegate
SHAudioRecordingManagerDelegate
SHServerGetResponseParser
SHLCloudBackedSubscription
SHServerResourcesResponse
SHAMSEndpointRequester
SHNetworkRecognitionRequester
SHMediaItemPresenter
SHWorker
SHMediaItemPresentation
SHMatchResultNotificationScheduler
SHAudioTap
SHMatchResultUserNotificationContentDeliverer
SHServerResponseContextBuilder
SHMultipleConcurrentAudioTapMatcher
SHMatcherDelegate
SHSessionDelegate_Internal
SHSessionDelegate
SHMatcher
SHCloudContainer
SHMediaItemFetcher
SHMatchResultUserNotificationContentProvider
SHServerDataResponse
SHAudioRecorderProvider
SHServerResultsResponse
SHAudioTapProvider
SHShazamKitServerCatalog
SHMatchResultNotificationAttachmentProviderUtilities
SHLLibraryStore
SHLCloudBackedOperation
SHMusicVideoResponseItem
SHServerMusicVideoResponse
SHShazamKitService
SHMediaItemProvider
SHEventSignalScheduler
SHEventSignalling
SHLSyncSessionConfiguration
SHLLibraryChangeset
SHLTaskOutcome
SHLyricsResponseItem
SHServerLyricsResponse
SHMediaLibraryDataStore
NSFetchedResultsControllerDelegate
SHMediaLibraryController
SHLShazamLibraryDelegate
SHMediaLibraryAccountListenerDelegate
SHMediaLibraryDataStoreDelegate
SHMediaLibrary
SHMediaLibrarySync
SHMediaLibraryQuery
SHLLibraryTrackCompoundIdentifier
SHLCloudEncryptionPrecondition
SHLTaskPrecondition
SHServiceStateHandlerUtilities
SHLMutableLibraryGroup
SHLSyncSessionFetchTask
SHLSyncSessionTask
NSSecureCoding
NSCoding
SHLOperationQueue
SHUpdatedTrackLocalTrackPair
SHUpdatedGroupLocalGroupPair
SHMediaLibraryUpdateReport
SHLError
SHLLibraryItemMetadata
NSCopying
SHLMutableLibraryTrack
SHMatcherFactory
SHAudioRecorder
SHLLibraryTrack
SHLModifyTaskRecovery
SHAudioTapMatcher
SHLCloudFetchTaskScheduler
SHLFetchTaskScheduler
SHLTaskScheduler
SHAppClip
SHMatchResultUserNotificationPayload
SHAPSConnection
APSConnectionDelegate
SHMediaLibrarySyncDelegate
SHMediaLibraryAccountListener
SHLCloudContainerTransformer
SHLTaskSchedulerFactory
SHLCloudModifyTaskTransformer
SHLLibraryBatch
SHLCloudContext
SHServiceStateHandler
SHServiceDelegate
SHLCloudTaskScheduler
SHLCloudGroupTransformer
SHServerErrorResponse
SHLCloudBackedZone
SHMediaLibraryQueryManager
SHLCloudSubscriptionTransformer
SHLTaskPreconditionEvaluator
SHLCloudBackedContainer
SHMediaLibraryPersistentConfiguration
SHLCloudAccountStatusPrecondition
SHLCloudLibraryCache
SHLLibraryCache
SHLLocalStateTransactionable
SHLCloudBackedItem
SHAudioEnvironment
SHAudioRecordingManager
SHAudioRecorderDelegate
SHLLibraryLabel
SHLTaskPreconditionResult
SHLCloudTrackTransformer
SHLShazamLibrary
SHLSyncSessionModifyTaskDelegate
SHLSyncSessionTaskDelegate
SHLSyncSessionDelegate
SHLSyncSessionFetchTaskDelegate
SHSongsResponseItem
SHServerSongsResponse
SHFetchedResultsControllerFactory
SHMatchResultUserNotificationCenterDelegate
UNUserNotificationCenterDelegate
SHLCloudFetchTaskTransformer
SHMediaLibraryItemMapper
SHLSyncSession
SHMatchResultBulletinContentDeliverer
SHMatchResultNotificationContentDeliverer
SHLCloudBackedToken
SHAudioSessionManager
SHLCloudModifyZoneTransformer
SHWatchdogTimer
SHUIService
SHWorkerDelegate
SHLLibraryGroup
SHLLibraryItem
NSMutableCopying
SHLShazamKey
SHMediaLibraryContext
ShazamLibrary
SHLTaskRetryContext
SHLFailedTaskRetryHandler
SHLSyncSessionModifyTask
SHMatcherController
SHShazamKitServerURLBuilder
SHSimulatorAudioRecorder
SHLCloudModifyTaskScheduler
SHLModifyTaskScheduler
SHMatchResultUserNotificationAttachmentProvider
SHGroupMO
CoreDataProperties
SHMetadataMO
SHTrackMO
v16@0:8
@40@0:8@16@24@32
@16@0:8
v24@0:8@16
@"<SHServiceDelegate>"
@"NSXPCConnection"
@24@0:8#16
@"NSArray"
@"SHAPSConnection"
@32@0:8@16@24
@"NSXPCListener"16@0:8
@"SHConnectionHandle"32@0:8@"NSXPCConnection"16@"SHAttribution"24
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableArray"
@"NSXPCListener"
@"<SHServiceProvider>"
v24@0:8d16
@"NSISO8601DateFormatter"
@"SHShazamKitServerCatalog"
@24@0:8@16
@?16@0:8
v24@0:8@?16
@"SHMatcherRequest"
@48@0:8@16@24@32@40
v32@0:8@16Q24
v32@0:8@"SHAudioSessionManager"16Q24
v32@0:8@16@24
B40@0:8@16@24@32
v32@0:8@"SHAudioRecordingManager"16@"SHAudioTap"24
v24@0:8@"SHAudioRecordingManager"16
v32@0:8@"SHAudioRecordingManager"16@"NSArray"24
B40@0:8@"SHAudioRecorder"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
q16@0:8
v24@0:8q16
@"SHAudioRecordingManager"
@"SHAudioSessionManager"
@40@0:8@16@24^@32
@"CKSubscription"
@"NSDictionary"
v32@0:8@16@?24
v32@0:8@"NSURLRequest"16@?<v@?@"NSData"@"NSURLResponse"@"NSError">24
@32@0:8@16q24
v40@0:8@16@?24@32
@"AMSMediaRequestEncoder"
@"AMSURLSession"
d16@0:8
@"NSArray"16@0:8
@"<SHWorkerDelegate>"16@0:8
v24@0:8@"<SHWorkerDelegate>"16
v32@0:8@"SHMediaItem"16@?<v@?@"NSError">24
@"<SHWorkerDelegate>"
@"SHMatchedMediaItem"
@"NSUUID"
@"<SHMatchResultNotificationContentDeliverer>"
@32@0:8q16q24
@"SHMatchResultUserNotificationContentProvider"
v32@0:8@"<SHMatcher>"16@"SHMatcherResponse"24
v40@0:8@16@24@32
v32@0:8@"SHSession"16@"SHMatch"24
v40@0:8@"SHSession"16@"SHSignature"24@"NSError"32
B32@0:8@"SHSession"16@"SHSignature"24
v32@0:8@"SHSession"16@"SHMatcherResponse"24
v24@0:8@"SHSession"16
v24@0:8@"SHMatcherRequest"16
@"<SHMatcherDelegate>"16@0:8
v24@0:8@"<SHMatcherDelegate>"16
@"<SHMatcherDelegate>"
@"<SHAudioRecordingManager>"
@"NSRecursiveLock"
@56@0:8@16q24@32@40@48
@"SHShazamKitServerURLBuilder"
@"SHServerResponseContextBuilder"
@"SHAttribution"
@"<SHNetworkRecognitionRequester>"
@40@0:8@16q24@32
@"SHLSyncSessionConfiguration"
@"SHLCloudContainerTransformer"
@"<SHLLibraryCache>"
@"CKDatabaseOperation"
v32@0:8@"NSString"16@?<v@?@"SHMediaItem"@"NSError">24
v32@0:8@"SHMatcherRequest"16@?<v@?>24
v40@0:8@"SHMediaLibrarySnapshot"16@"NSString"24@?<v@?>32
@"SHEntitlements"
@"SHMatcherController"
@"SHMatchResultNotificationScheduler"
@"SHMediaLibrarySyncManager"
@"SHMediaLibraryQueryManager"
@"SHMediaItemFetcher"
@"SHEventSignalScheduler"
@"<SHShazamKitClient>"
Vv24@0:8@16
Vv24@0:8@"NSString"16
v20@0:8B16
@40@0:8q16q24@32
@24@0:8d16
@"MSVLyricsSongInfo"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
q24@0:8Q16
@"NSFetchedResultsController"
@"<SHMediaLibraryDataStoreDelegate>"
@"NSPersistentContainer"
@"NSManagedObjectContext"
v40@0:8@16@24q32
v48@0:8@16@24@32q40
v24@0:8@"SHLShazamLibrary"16
v40@0:8@"SHLShazamLibrary"16@"NSArray"24q32
v48@0:8@"SHLShazamLibrary"16@"NSError"24@"NSArray"32q40
v32@0:8@"SHLShazamLibrary"16@?<v@?B>24
v32@0:8@"SHMediaLibraryDataStore"16@"SHMediaLibraryChange"24
v32@0:8@"SHMediaLibrarySnapshot"16@"NSString"24
@"<SHMediaLibrarySyncDelegate>"16@0:8
v24@0:8@"<SHMediaLibrarySyncDelegate>"16
v24@0:8@?<v@?@"SHMediaLibraryInfo"@"NSError">16
v32@0:8@"SHMediaLibraryQueryParameters"16@?<v@?@"NSArray"@"NSArray"@"NSError">24
@"<SHMediaLibrarySyncDelegate>"
@"SHMediaLibrarySnapshot"
@"SHLShazamLibrary"
@"SHMediaLibraryDataStore"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_queue>"
@"SHMediaLibraryContext"
@"SHMediaLibraryAccountListener"
@"SHLShazamKey"
v24@0:8@?<v@?@"SHLTaskPreconditionResult">16
@"SHLCloudBackedContainer"
v48@0:8{?=[8I]}16
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSProgress"16@0:8
v24@0:8@"NSString"16
@"SHLSyncSession"16@0:8
v24@0:8@"SHLSyncSession"16
@"NSProgress"
@"SHLSyncSession"
@"<SHLSyncSessionFetchTaskDelegate>"
v28@0:8@16B24
@"NSOperationQueue"
@"NSOperation"
@"SHMediaLibraryTrack"
@"SHTrackMO"
@"SHMediaLibraryGroup"
@"SHGroupMO"
@24@0:8q16
@32@0:8q16@24
d24@0:8@16
q24@0:8@16
@"NSData"
@40@0:8@16@24q32
@"SHAudioTapProvider"
@40@0:8^v16Q24@32
B24@0:8^{OpaqueAudioQueue=}16
B28@0:8i16^@20
B24@0:8^@16
v24@0:8@?<v@?B@"NSError">16
@"<SHAudioRecorderDelegate>"16@0:8
v24@0:8@"<SHAudioRecorderDelegate>"16
^{OpaqueAudioQueue=}16@0:8
v24@0:8^{OpaqueAudioQueue=}16
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
[3^{AudioQueueBuffer}]
@"<SHAudioRecorderDelegate>"
^{OpaqueAudioQueue=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@"CLLocation"
@"SHLLibraryTrackCompoundIdentifier"
@"NSMutableSet"
@56@0:8@16@24@32@40@48
@"SHLSyncSessionModifyTask"
@"SHAudioTap"
@"SHSession"
v24@0:8@"SHLSyncSessionFetchTask"16
@"SHLCloudFetchTaskTransformer"
@"SHLCloudSubscriptionTransformer"
@"SHMediaItem"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"<SHMediaLibrarySync>"16
v32@0:8@"<SHMediaLibrarySync>"16@"SHMediaLibrarySnapshot"24
v40@0:8@"<SHMediaLibrarySync>"16@"NSError"24@"NSArray"32
@"APSConnection"
@"SHMediaLibraryController"
@"<SHMediaLibraryAccountListenerDelegate>"
@"CKModifyRecordsOperation"
@"NSSet"
@"CKContainer"
@"CKRecordZone"
v32@0:8@"<SHService>"16@"<SHWorker>"24
v32@0:8d16@?24
@"SHWatchdogTimer"
@"NSDate"
@"SHLCloudModifyZoneTransformer"
@"SHLCloudLibraryCache"
@"CKModifySubscriptionsOperation"
B40@0:8@16q24^@32
B40@0:8q16@24^@32
B40@0:8@"<SHLSyncSessionTask>"16q24^@32
B40@0:8q16@"NSString"24^@32
@"NSArray"24@0:8q16
@"<SHLSyncSessionTask>"32@0:8q16@"NSString"24
B32@0:8@16^@24
B40@0:8@16@24^@32
@"CKRecord"
@"AVAudioSession"
v40@0:8@"<SHAudioRecorder>"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
v24@0:8@"SHAudioTap"16
B24@0:8q16
@"<SHAudioRecordingManagerDelegate>"
@"SHAudioEnvironment"
@28@0:8B16@20
@"NSError"
@28@0:8@16B24
v40@0:8@"SHLSyncSession"16@"<SHLSyncSessionTask>"24@"SHLTaskOutcome"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionModifyTask"24@"NSArray"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionFetchTask"24@"NSArray"32
q24@0:8q16
@"<SHLShazamLibraryDelegate>"
@"SHLLibraryStore"
@"SHLFailedTaskRetryHandler"
{CGSize=dd}32@0:8{CGSize=dd}16
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@40@0:8@16@24@?32
@"CKFetchDatabaseChangesOperation"
@"CKFetchRecordZoneChangesOperation"
@"<SHLSyncSessionDelegate>"
@"SHLTaskSchedulerFactory"
@"<SHLLocalStateTransactionable>"
v24@0:8@?<v@?>16
v32@0:8@"SHMatchedMediaItem"16@?<v@?>24
v40@0:8@16@24@?32
@"CKServerChangeToken"
@"<SHAudioSessionManagerDelegate>"
@"CKModifyRecordZonesOperation"
@"NSObject<OS_dispatch_source>"
v28@0:8@"<SHWorker>"16B24
@"SHMediaItemPresenter"
@24@0:8@"NSString"16
@32@0:8@"NSString"16@"SHLLibraryItemMetadata"24
@"SHLLibraryItemMetadata"16@0:8
@"SHLLibraryItemMetadata"
@32@0:8@16@?24
@"SHLTaskOutcome"
@"<SHLSyncSessionModifyTaskDelegate>"
@"SHLLibraryBatch"
@"NSMapTable"
@"SHMatcherFactory"
v40@0:8@16q24@?32
v48@0:8@16q24@32@?40
v56@0:8@16q24q32@40@?48
@"SHStorefront"
v24@0:8@"SHLSyncSessionModifyTask"16
@"SHLCloudModifyTaskTransformer"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>shazamd</string>
<key>CFBundleExecutable</key>
<string>shazamd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.shazamd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>shazamd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5283j</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5283j</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>628765583</string>
<key>application-identifier</key>
<string>com.apple.shazamd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.shazam.secure</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.ClipServices</key>
<true/>
<key>com.apple.private.ShazamKit</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/Frameworks/ShazamKit.framework/shazamd</string>
</dict>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.shazam.secure</key>
<string>com.apple.shazam.secure</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.shazamkit.controlcenter.ShazamModule</string>
</array>
<key>com.apple.private.mediasafetynet.exception.shazam</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>shazamd</string>
<key>com.apple.private.shazamkit.persistence</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.ShazamNotifications</string>
</array>
<key>com.apple.security.device.audio-input</key>
<true/>
<key>com.apple.security.device.microphone</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/com.apple.shazamd/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Caches/com.apple.shazamlibrary.cloud/</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.play-media</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.shazamd</string>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
