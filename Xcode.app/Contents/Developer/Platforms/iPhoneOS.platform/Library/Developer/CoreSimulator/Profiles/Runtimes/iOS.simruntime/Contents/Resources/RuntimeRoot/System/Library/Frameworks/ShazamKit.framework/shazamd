@(#)PROGRAM:shazamd  PROJECT:ShazamKit-1
Deallocating the XPC connection
Failed to setup the remote proxy %@
Connection listener removed a handle, now we have %lu left
Calling stop on the service %@ of the handle %@
Interruption handler called for service %@ from %@:%i
Invalidation handler called for service %@ from %@:%i
Failed to set tmp dir suffix
Calling completion handler %@ on library controller %@
Shazam service matching signature of duration %f with data of length %lu at %@
Received network response, no data %@
Server response parser: No response %@
Server response parser: Error, %@
Server response parser: Error, returning results, recording intermission %f, retry %f
Server response parser: Returning results, recording intermission %f, retry %f
Server response parser: has match %@
Server response parser: has no match
Audio interruption ended but recording should not restart
Resuming recording after interruption
Assistant service will attach a tap
willAttachTap: number of assistant taps %li
Assistant service has detached a tap
didDetachTap: number of assistant taps %li
audioRecordingManagerWillStartRecording - number of assistant taps %li
audioRecordingManagerDidStopRecording
Server response parser: has no media items
Failed to fetch data task %@
Failed to encode network request %@
Presenting media item %@
No web URL available for media item %@
Attempting to open app directly with url %@
Unable to get strong reference to self
Opened url %@ in the Shazam app
failed to open app, likely not installed - requesting App Clip
Opened url %@ as an App Clip
Falling back to launching url %@ in Safari
Failed to open url with error %@
Opened URL %@ with result %@
Sending no match notification
Sending match notification
Error adding notification request %@
Failed to schedule notification: %@
Failed to create dispatch group while loading context
Failed to add default values to response context %@
Failed to add campaign token to response context %@
SHMultipleConcurrentAudioTapMatcher Calling stop on audioTapMatchers %@
Suggested audio recording source %li signature source %li shouldAttempt %i
Failed fetching media item, bundle identifier missing
URL %@ not properly tokenized
Fetching media item at %@
Error fetching media item %@
Returning audio tap for source %li bundle identifier %@
Deallocating the Shazam Service
Current Bundle ID is not entitled to use the Library SPI
Missing Bundle ID, it's required to sync the Library
Worker %@ changed running state to %d
Sent signal event: %@
Failed to parse lyrics song info %@
Failed to load description %@
Failed to observe local track changes: %@
Failed to observe local group changes: %@
Updating existing entries for %lu library track(s)
Creating entries for %lu library track(s)
Updating existing entries for %lu Library Group IDs: %@
Creating entries for %lu library group(s)
Failed to purge local group objects: %@
Failed to purge local track objects: %@
Failed to delete sync metadata: %@
Failed to fetch request %{public}@
Persisting a Track with an associated Group ID, but there is no group saved locally. Will fallback to creation.
Failed to convert %@ to %@
Media Library started syncing. Sync ID: %@
[Local] Media Library sync starts. Sync ID: %@
Processed %lu changes before sync. Inserted %ld & Updated %ld local group entries
Processed %lu changes before sync. Inserted %ld & Updated %ld local track entries
Processed %lu deletions before sync. Deleted %ld local entries
Failed to persist library changes with error %@
[Local] Media Library completed sync. Sync ID: %@
iCloud account is not available or device to device encryption is not supported, skipping remote sync
[Remote] Media Library sync starts. Sync ID: %@, changes: %@
Processed %lu returned track changes. Inserted %ld & Updated %ld local entries
Processed %lu returned group changes. Inserted %ld & Updated %ld local entries
Processed %lu returned deletions. Deleted %ld local entries
Failed to persist sync changes with error: %@
[Remote] Media Library completed sync. Sync ID: %@
Clear all local data and cache sync status
Failed to fetch account info %@
Account supports device to device encryption
Deallocating SHAudioRecorder
Already running audio queue
Failed to create a new audio queue input with error %@
Failed to set audio queue property
Failed to add isRunning property listener
Failed to start audio queue, retry one more time
Failed to stop audio queue %@
Failed to remove isRunning property listener %@
Failed to dispose audio queue %@
Failed to start audio queue after a retry
Audio queue for audio recorder %@ has changed running state %i
Error: audio tap matcher: %@ asked to start recognition when it is already matching
startRecognition based upon deadline %@
No buffer received in tap completion - error %@
Tagging finish conditions: timeOut %d, oneAttempt: %d, foundMatch: %d, failed %d
Stopping recognition
Stopping recognition for matcher %@
<task: %{public}@ %@> Local subscription for <zone: %{public}@> does not exist, creating one now
<task: %{public}@ %@> <zone: %{public}@> does not exist, so we are attempting to create one with a subscription
<task: %{public}@ %@> is scheduled
Requesting app clip metadata for url %@
Error requesting App Clip metadata %@
Requesting app clip for url %@
Error in requestClipWithCompletion %@ clipIsAvailable %i
App clip request was successful
Unable to unarchive notification payload data %@ with error %@
Received public token '%@' on connection %@
APS push received for topic: '%@'
Ignoring APS push message, not a CloudKit update
iCloud account has changed, updating current user account id
Failed to complete modify operation. Error %@
Service %@ stopping after final worker %@ finished
Service %@ started running %@
Starting watchdog timer for %f seconds
Stopping watchdog timer
Unable to load Application Support directory: %@
Parent directory of persistent store url doesn't exist, creating one now
Failed to create persistent store directory: %@
Persistent store url missing, fallback to in memory store type
iCloud account is available
No iCloud account available
iCloud account is restricted
iCloud account is temporarily unavailable
Failed to retrieve iCloud account information with error %@
Deallocating recording service
Starting recording
Failed to start recorder %@ with error: %@
Stopping recording for reason %lu
Stopping recorder: %@
Failed to stop recorder with error: %@
Stopped recording for reason %lu
Detached tap: %@ taps remaining: %@
Internal audio source support: %d alternative output source to built-in speaker is available: %d other audio playing %d
Marking the internal audio source as preferred
Marking the external audio source as preferred
Sync started with startCondition: %{public}@
Failed to complete <task: %{public}@ %@> and not retrying due to <error: %@>
Finished <task: %{public}@ %@> and sync complete
Finished <task: %{public}@ %@>, still syncing
Client called Library completion with success = %d for <task: %{public}@ %@>
Error finishing transaction for <task: %{public}@ %@> %@
Finished handling transaction for <task: %{public}@ %@>
Uploaded %lu modified tracks
Uploaded %lu modified groups
Deleted %lu items
Fetched %lu tracks
Fetched %lu groups
Fetched %lu deleted items
Current local cache requires migration
Successfully migrated local cache
Failed to migrate current local cache %@
Received notification response %@ for request %@ with content %@
No webURL provided for payload %@
Presenting media item with web url %@
Presented media item with error %@
Using <token: %@> for database fetch
<zone: %@> does not exist locally, saving now
<zone: %@> was deleted
<zone: %@> was purged
Updated database <token: %@>
Failed to fetch changes for record (%@)
Updated <zone: %{public}@> token: %@>
<zone: %{public}@> token has expired. Removing saved token
Using <zone changes configuration: %@> for fetch
Failed to schedule <task: %{public}@ %@> pre-conditions were not satisifed
Deallocating audio session manager
Registering audio session observers
Unregistering audio session observers
Activating audio session
Failed to activate AVAudioSession: %@
configureAudioSessionForStandardClient
Failed to set category on AVAudioSession: %@
Failed to set mode: %@
Failed to enable haptics while recording: %@
Failed to decouple IO AVAudioSession: %@
configureAudioSessionForAssistantService
Deactivating audio session
Failed to deactivate AVAudioSession: %@
Audio interruption started
Audio interruption ended
Received media services were lost notification
Received media services were reset notification - restarting recognition
handleAudioSessionRouteChange: %@
Failed to complete zone operation. Error %@
Watchdog timer fired
Retrying <task: %{public}@ %@> after %f seconds <error: %@>
Retrying <task: %{public}@ %@> immediately <error: %@>
Unable to fetch matcher - it is likely some required entitlements are missing
Missing or invalid host %@
Missing or invalid match endpoint %@
Fetching endpoint with storefront %@
<task: %{public}@ %@> <zone: %{public}@> does not exist locally, so we are creating one
dealloc
init
setExportedInterface:
setRemoteObjectInterface:
connection
exportedObject
setExportedObject:
remoteObjectProxyWithErrorHandler:
initWithConnection:exportedInterface:remoteInterface:
remoteObject
serviceStateHandler
setServiceStateHandler:
.cxx_destruct
_remoteObject
_serviceStateHandler
_connection
T@"NSXPCConnection",R,N,V_connection
T@,R,N,V_remoteObject
T@,&,N
T@"<SHServiceDelegate>",&,N,V_serviceStateHandler
buildListeners
listeners
countByEnumeratingWithState:objects:count:
listen
apsConnection
registerForPushNotifications
array
availableServices
buildListenerForMachService:
addObject:
initializeGlobalServiceState
copy
initWithService:
buildListener
initWithServiceProvider:listener:
start
_listeners
_apsConnection
T@"NSArray",R,N,V_listeners
T@"SHAPSConnection",R,N,V_apsConnection
arrayWithObjects:count:
setWithArray:
machServiceName
initWithMachServiceName:
isEqualToString:
shazamKitServiceHandleForConnection:withAttribution:
eventsServiceHandleForConnection:withAttribution:
uiServiceHandlerForConnection:withAttribution:
stringWithFormat:
exceptionWithName:reason:userInfo:
bundleIdentifier
initWithBundleIdentifier:
setServiceDelegate:
initWithConnection:
initWithEntitlements:attribution:
setDelegate:
handleForConnection:withAttribution:
_machServiceName
T@"NSString",R,C,N,V_machServiceName
listener
resume
serviceProvider
connectionHandles
removeObject:
count
stop
processIdentifier
setInterruptionHandler:
setInvalidationHandler:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
lock
setLock:
_lock
_connectionHandles
_listener
_serviceProvider
T@"NSMutableArray",R,N,V_connectionHandles
T@"NSXPCListener",R,N,V_listener
T@"<SHServiceProvider>",R,N,V_serviceProvider
T{os_unfair_lock_s=I},N,V_lock
currentRunLoop
shazamItemDictionary
URLWithString:
stringByReplacingOccurrencesOfString:withString:
initWithShazamItemDictionary:
shazamID
shazamURL
title
artistName
matchOffset
speedSkew
frequencySkew
songRelationIDs
setShazamItemDictionary:
_shazamItemDictionary
T@"NSDictionary",&,N,V_shazamItemDictionary
T@"NSNumber",R,N
shazamDictionary
initWithShazamDictionary:
itemForIdentifier:
setShazamDictionary:
_shazamDictionary
T@"NSDictionary",&,N,V_shazamDictionary
initWithKeyOptions:valueOptions:capacity:
updateSnapshotWithAttribution:
activeControllers
unlock
workerDelegate
removeObjectForKey:
isRunning
removeAllObjects
libraryItem
changeType
productName
timeRequiredToPerformWork
managesRecordingSession
T@"<SHWorkerDelegate>",W,N
_workerDelegate
_activeControllers
T@"NSMapTable",R,N,V_activeControllers
T@"SHAttribution",R,N,V_attribution
T@"NSRecursiveLock",R,N,V_lock
T@"<SHWorkerDelegate>",W,N,V_workerDelegate
setDefaultRecordingIntermissionInSeconds:
defaultValuesWithCompletion:
tokenForClientIdentifier:
setCampaignToken:
campaignTokenWithCompletion:
_defaultRecordingIntermissionInSeconds
_campaignToken
Td,N,V_defaultRecordingIntermissionInSeconds
T@"NSString",C,N,V_campaignToken
initWithCatalog:recognitionRequester:
catalog
loadContext:
setMatcherRequest:
matchSignature:tokenizedURL:
loadConfiguration:
partnerURLRequestForSignature:endpoint:
duration
dataRepresentation
responseForServerData:signature:
buildURLForSignature:endpoint:
setHTTPMethod:
base64EncodedStringWithOptions:
iso8601Formatter
stringFromDate:
sessionDuration
numberWithDouble:
dictionaryWithDictionary:
musicSubscriptionStatus
appleMusicSubscriptionStatus
numberWithInteger:
eligibleAppleMusicOffers
dataWithJSONObject:options:error:
setHTTPBody:
matcherRequest
initWithCatalog:
setCatalog:
setNetworkRequester:
_iso8601Formatter
_catalog
_matcherRequest
T@"SHShazamKitServerCatalog",&,N,V_catalog
T@"<SHNetworkRecognitionRequester>",&,N,V_networkRequester
T@"NSISO8601DateFormatter",R,N,V_iso8601Formatter
T@"SHMatcherRequest",&,N,V_matcherRequest
notificationCategories
setNotificationCategories:
setWantsNotificationResponsesDelivered
initWithRequest:
request
_request
T@"SHMatcherRequest",R,N,V_request
JSONObjectWithData:options:error:
errorWithCode:underlyingError:
errorResponseForSignature:error:
firstObject
initWithErrorDictionary:
initWithResultsDictionary:
error
defaultRecordingIntermissionInSeconds
initWithRecordingIntermission:retrySeconds:match:signature:stillRunningAssociatedRequest:error:
recordingIntermissionSeconds
retrySeconds
noMatchWithRecordingIntermission:retrySeconds:signature:
initWithResourcesDictionary:
shazamIDs
audioStartDate
campaignToken
mediaItemFromResourcesResponse:shazamID:signatureStartDate:campaignToken:
songsResponse
set_rawResponseSongs:
initWithMediaItems:forSignature:
matchWithRecordingIntermission:retrySeconds:match:
mediaDictionaryFromResourcesResponse:shazamID:campaignToken:
mutableCopy
shazamResponse
setValue:forKey:
lyricsResponse
doubleValue
snippetFromOffset:
dateByAddingTimeInterval:
lyricLines
songwriters
initWithLyricsStartDate:lines:songwriters:
initWithMatchedMediaItemDictionary:syncedLyrics:
matcherResponseFromServerData:signature:context:
availableRecorders
initWithRecorders:
initWithAudioSessionManager:audioRecordingManager:
stopRecordingForReason:
startRecording
audioSessionManager
activeAssistantServiceTaps
setActiveAssistantServiceTaps:
audioRecordingManager:willAttachTap:
audioRecordingManager:didDetachTap:
audioRecordingManagerWillStartRecording:
audioRecordingManagerDidStopRecording:
audioRecordingManager:failedToStartRecorders:
recorder:shouldProcessAudioBuffer:atTime:
_audioSessionManager
_activeAssistantServiceTaps
Tq,V_activeAssistantServiceTaps
T@"SHAudioRecordingManager",R,N,V_audioRecordingManager
T@"SHAudioSessionManager",R,N,V_audioSessionManager
annotateClientError:code:underlyingError:
annotateError:withError:
initWithDataArray:
mediaItemFromResourcesResponse:shazamID:campaignToken:
dictionary
numberWithBool:
initWithString:
containsTokens
URLRepresentation
lyricsSnippet
staticLyrics
musicVideoResponse
mediaItemsFromServerData:context:error:
initWithSubscription:
subscription
_subscription
T@"CKSubscription",R,N,V_subscription
resourcesDictionary
setResourcesDictionary:
_resourcesDictionary
T@"NSDictionary",&,N,V_resourcesDictionary
T@"SHServerSongsResponse",R,N
T@"SHServerShazamResponse",R,N
T@"SHServerLyricsResponse",R,N
T@"SHServerMusicVideoResponse",R,N
sessionConfiguration
invalidateAndCancel
data
response
isTokenFailureError:
encoder
requestByEncodingRequest:parameters:
dataTaskPromiseWithRequest:
handleResult:callback:error:
addFinishBlock:
defaultSessionConfiguration
setTimeoutIntervalForRequest:
setWaitsForConnectivity:
setDiscretionary:
clientIdentifier
amsBag
initWithClientIdentifier:bag:
setClientType:
initWithTokenService:
setProtocolHandler:
initWithTokenService:bag:
setClientIdentifier:
_encoder
_clientIdentifier
_session
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_clientType
T@"AMSURLSession",&,N,V_session
T@"AMSMediaRequestEncoder",R,N,V_encoder
setFrontBoardOptions:
defaultWorkspace
openURL:configuration:completionHandler:
openWithURL:configuration:completionHandler:
currentMediaItem
containsMediaItemWithFuzzyTolerance:
currentSignatureID
querySignature
mediaItems
setCurrentMediaItem:
setCurrentSignatureID:
sendMatchNotification:
sendAnalyticsEventForMatch:
contentDeliverer
T@"UNUserNotificationCenter",&,N
_currentMediaItem
_currentSignatureID
_contentDeliverer
T@"SHMatchedMediaItem",&,N,V_currentMediaItem
T@"NSUUID",&,N,V_currentSignatureID
T@"<SHMatchResultNotificationContentDeliverer>",R,N,V_contentDeliverer
initWithRecordingSource:client:
open
close
completion
setCompletion:
recordingSource
client
isClosed
_isClosed
_completion
_recordingSource
_client
T@?,C,N,V_completion
Tq,R,N,V_recordingSource
Tq,R,N,V_client
TB,R,N,V_isClosed
contentProvider
notificationContentForNoMatch
requestWithIdentifier:content:trigger:
userNotificationCenter
addNotificationRequest:withCompletionHandler:
notificationContentForMediaItem:completionHandler:
deliverContentForNoMatchWithCompletion:
deliverContentForMatchedMediaItem:completion:
initWithContentProvider:
_contentProvider
T@"SHMatchResultUserNotificationContentProvider",R,N,V_contentProvider
sh_setDefaultValuesWithCompletion:
sh_setCampaignTokenForClientIdentifier:completion:
audioTapMatchers
metrics
audioRecordingSource
suggestedAudioRecordingSource
signature
matcher:didProduceResponse:
sh_isCoreMatchAttemptCancelledError
session:didFindMatch:
session:didNotFindMatchForSignature:error:
session:shouldAttemptToMatchSignature:
session:didProduceResponse:
finishedSession:
initWithAudioTapMatchers:audioRecordingManager:
_audioTapMatchers
_audioRecordingManager
T@"NSArray",R,N,V_audioTapMatchers
T@"<SHAudioRecordingManager>",R,N,V_audioRecordingManager
T@"<SHMatcherDelegate>",W,N,Vdelegate
options
setApplicationBundleIdentifierOverrideForTCC:
sharedContainer
T@"CKContainer",R,N
containingAppBundleIdentifier
initWithClientIdentifier:clientType:
initWithAttribution:clientType:URLBuilder:contextBuilder:networkRequester:
URLBuilder
requestWithURL:
addValue:forHTTPHeaderField:
networkRequester
contextBuilder
loadContextForClientIdentifier:completion:
performRequest:withReply:
_isRunning
_URLBuilder
_contextBuilder
_networkRequester
T@"SHShazamKitServerURLBuilder",R,N,V_URLBuilder
T@"SHServerResponseContextBuilder",R,N,V_contextBuilder
T@"<SHNetworkRecognitionRequester>",R,N,V_networkRequester
TB,R,V_isRunning
setShouldBackgroundDefaultAction:
setThreadIdentifier:
setShouldIgnoreDoNotDisturb:
setShouldIgnoreDowntime:
defaultSound
setSound:
setShouldAuthenticateDefaultAction:
artist
setBody:
appleMusicURL
setCategoryIdentifier:
setUserInfo:
setAttachments:
notificationAttachmentForMediaItem:completionHandler:
categoryWithIdentifier:actions:intentIdentifiers:options:
localizedUserNotificationStringForKey:arguments:
dateWithTimeIntervalSinceNow:
setExpirationDate:
setShouldHideDate:
setShouldSuppressDefaultAction:
dataArray
setDataArray:
_dataArray
T@"NSArray",&,N,V_dataArray
simulatorRecorders
iOSAudioRecorders
watchOSAudioRecorders
tvOSAudioRecorders
macOSAudioRecorders
resultsDictionary
setResultsDictionary:
_resultsDictionary
T@"NSDictionary",&,N,V_resultsDictionary
Td,R,N
isEntitledForSource:
isEntitledForInternalAudioRecording
isEntitledForExternalAudioRecording
isEntitledForMicrophone
tapForSource:
T@"NSString",R,C,N,V_bundleIdentifier
validateClientIdentifier:
_initWithInstallationID:
setURLBuilder:
setContextBuilder:
_installationID
T@"SHShazamKitServerURLBuilder",&,N,V_URLBuilder
T@"SHServerResponseContextBuilder",&,N,V_contextBuilder
T@"NSString",R,C,N,V_installationID
T@"NSString",R,C,N,V_clientIdentifier
sharedSession
defaultManager
processInfo
globallyUniqueString
temporaryDirectory
URLByAppendingPathComponent:
URLByAppendingPathExtension:
moveItemAtURL:toURL:error:
downloadTaskWithURL:completionHandler:
downloadImageURL:completionHandler:
setCurrentCache:
_currentCache
T@"<SHLLibraryCache>",&,N,V_currentCache
privateOperation
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
setPrivateOperation:
_privateOperation
T@"CKDatabaseOperation",&,N,V_privateOperation
T@"CKDatabaseOperation",R,N
musicVideoItemDictionary
initWithMusicVideoItemDictionary:
setMusicVideoItemDictionary:
_musicVideoItemDictionary
T@"NSDictionary",&,N,V_musicVideoItemDictionary
musicVideoDictionary
initWithMusicVideoDictionary:
setMusicVideoDictionary:
_musicVideoDictionary
T@"NSDictionary",&,N,V_musicVideoDictionary
matchResultNotificationCenter
setUserNotificationCenter:
populateRemoteConfiguration
raise:format:
matcherController
startRecognitionForRequest:completionHandler:
isCurrentBundleIdentifierValid
librarySyncManager
synchronizeSnapshot:startCondition:completionHandler:
isEntitledForLibrarySPI
libraryQueryManager
_libraryInfoWithCompletionHandler:
attribution
errorWithCode:underlyingError:keyOverrides:
_queryLibraryWithParameters:completionHandler:
entitlements
isEntitledForInternalClient
requiresAttributionForBundleIdentifier:
mediaItemFetcher
mediaItemForShazamID:completionHandler:
hasRequiredEntitlements:
eventSignalScheduler
sendEventSignal:
serviceDelegate
service:updatedWorker:
notificationScheduler
audioRecordingManager
initWithAudioRecordingManager:entitlements:attribution:notificationScheduler:
setWorkerDelegate:
initWithAttribution:
clientType
initWithAttribution:clientType:
workerUpdated:withRunningState:
startRecognitionForRequest:
T@"<SHMatcherDelegate>",W,N
_synchronizeSnapshot:startCondition:
T@"<SHMediaLibrarySyncDelegate>",W,N
workers
setEntitlements:
setAttribution:
_entitlements
_serviceDelegate
_matcherController
_notificationScheduler
_librarySyncManager
_libraryQueryManager
_mediaItemFetcher
_eventSignalScheduler
_attribution
T@"SHEntitlements",&,N,V_entitlements
T@"SHAttribution",&,N,V_attribution
T@"SHMatcherController",R,N,V_matcherController
T@"SHMatchResultNotificationScheduler",R,N,V_notificationScheduler
T@"SHMediaLibrarySyncManager",R,N,V_librarySyncManager
T@"SHMediaLibraryQueryManager",R,N,V_libraryQueryManager
T@"SHMediaItemFetcher",R,N,V_mediaItemFetcher
T@"SHEventSignalScheduler",R,N,V_eventSignalScheduler
T@"<SHShazamKitClient>",W,N,V_delegate
setIsRunning:
initWithIdentifier:bundleID:context:
discoverabilitySignal
source
sendEvent:
_sessionType
_sessionScope
_callingProcessIdentifier
_sessionIdentifier
Tq,R,N,V_sessionType
Tq,R,N,V_sessionScope
T@"NSString",R,C,N,V_callingProcessIdentifier
T@"NSUUID",R,C,N,V_sessionIdentifier
trackSetToAdd
trackSetToDelete
groupSetToAdd
groupSetToDelete
valueForKeyPath:
tracksToAdd
addTracks:
tracksToDelete
deleteTracks:
groupsToAdd
addGroups:
groupsToDelete
deleteGroups:
trackIDsToDelete
groupIDsToDelete
mergeChangeset:
setTrackSetToAdd:
setTrackSetToDelete:
setGroupSetToAdd:
setGroupSetToDelete:
_trackSetToAdd
_trackSetToDelete
_groupSetToAdd
_groupSetToDelete
T@"NSMutableSet",&,N,V_trackSetToAdd
T@"NSMutableSet",&,N,V_trackSetToDelete
T@"NSMutableSet",&,N,V_groupSetToAdd
T@"NSMutableSet",&,N,V_groupSetToDelete
_initWithTasksToRetry:error:
tasksToRetry
allItemIdentifiers
addObjectsFromArray:
initWithTasksToRetry:error:
failedItemIdentifiers
_tasksToRetry
T@"NSError",R,N,V_error
T@"NSArray",R,N,V_tasksToRetry
parseTTMLFromLyricsItemDictionary:
songInfo
lyricsLines
lyricsText
string
startTime
lyricLineWithText:offset:
dataUsingEncoding:
initWithTTMLData:
parseWithError:
lyricsLineStartingBeforeTimeOffset:
appendString:
nextLine
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
initWithLyricsItemDictionary:
setSongInfo:
_songInfo
T@"MSVLyricsSongInfo",&,N,V_songInfo
lyricsDictionary
initWithLyricsDictionary:
setLyricsDictionary:
_lyricsDictionary
T@"NSDictionary",&,N,V_lyricsDictionary
loadStoreWithType:
initWithContentsOfURL:
initWithName:managedObjectModel:
setPersistentStoreDescriptions:
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
mergeByPropertyStoreTrumpMergePolicy
setMergePolicy:
managedObjectContext
tracksFetchedResultsController
performFetch:
groupsFetchedResultsController
performBlockAndWait:
filterOptions
fetchLibraryTracksWithParameters:
fetchLibraryGroupsWithParameters:
setIncludesPendingChanges:
resultsLimit
setFetchLimit:
providerID
predicateWithFormat:
ascending
fetchManagedObjectForRequest:withPredicate:context:
libraryTrackFromManagedTrack:
andPredicateWithSubpredicates:
libraryGroupFromManagedGroup:
updateReportForLibraryTrack:
setData:
createMetadataWithData:track:group:context:
updateManagedTrack:withUpdatedTrack:
insertNewObjectForEntityForName:inManagedObjectContext:
associateTrack:toGroupWithIdentifier:context:
predicateWithBlock:
filteredArrayUsingPredicate:
updateReportForLibraryGroups:
deleteObject:
persistentContainer
persistentStoreDescriptions
initWithFetchRequest:
persistentStoreCoordinator
executeRequest:withContext:error:
deleteAllItemsWithFetchRequest:completionHandler:
reset
save:
setPredicate:
executeFetchRequest:error:
setTrack:
setRecognitionID:
setProviderID:
setArtworkURL:
setShazamURL:
setLatitude:
setLongitude:
setLabels:
libraryItemFromManagedObject:
libraryChangeTypeForFetchedResultsChangeType:
initWithLibraryItem:changeType:indexPath:
entityForName:inManagedObjectContext:
entity
isKindOfEntity:
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
setPersistentContainer:
setManagedObjectContext:
_tracksFetchedResultsController
_groupsFetchedResultsController
_persistentContainer
_managedObjectContext
T@"NSPersistentContainer",&,N,V_persistentContainer
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSFetchedResultsController",R,N,V_tracksFetchedResultsController
T@"NSFetchedResultsController",R,N,V_groupsFetchedResultsController
T@"<SHMediaLibraryDataStoreDelegate>",W,N,V_delegate
initWithStoreType:
commonInitWithDataStore:remoteLibrary:accountListener:
syncGroup
dispatchQueue
isSyncing
setSyncing:
setSyncID:
setCurrentContext:
setCurrentSnapshot:
syncID
dataStore
synchronizeLocalSnapshot:
synchronizeRemoteSnapshot:startCondition:
accountListener
fetchLibraryItemsWithParameters:completionHandler:
persistLibraryGroups:completionHandler:
persistUpdatedTracks:completionHandler:
deleteItemsByIdentifiers:completionHandler:
commitChangesWithError:
status
_synchronizeRemoteSnapshot:startCondition:
errorWithDomain:code:userInfo:
beginLibrarySync
handleLibraryError:failedItemIdentifiers:
persistChangesAndCompleteSyncWithCompletionHandler:
unsyncedGroupChangeset
unsyncedTrackChangeset
shazamLibraryTrackFromLibraryTrack:
shazamLibraryGroupFromLibraryGroup:
shazamLibrarySyncStartConditionForMediaLibraryStartCondition:
remoteLibrary
fetchAllUploadableGroupsMissingLibrarySyncMetadata
fetchAllUploadableTracksMissingLibrarySyncMetadata
libraryTrackFromShazamLibraryTrack:
currentSnapshot
containsLibraryItem:
creationDate
compare:
sortUsingComparator:
libraryGroupFromShazamLibraryGroup:
currentContext
resetDataIfNeededForSyncError:
mapInternalLibraryErrorToMediaLibrary:
deleteAllSyncMetadataItems
deleteAllItems
localizedDescription
addChanges:
libraryDataStore:didUpdateWithChange:
initWithDataStore:remoteLibrary:accountListener:
setRemoteLibrary:
setDataStore:
setAccountListener:
setSyncGroup:
setDispatchQueue:
_syncing
_remoteLibrary
_dataStore
_accountListener
_currentSnapshot
_currentContext
_syncGroup
_dispatchQueue
_syncID
T@"SHLShazamLibrary",&,N,V_remoteLibrary
T@"SHMediaLibraryDataStore",&,N,V_dataStore
T@"SHMediaLibraryAccountListener",&,N,V_accountListener
T@"SHMediaLibrarySnapshot",&,N,V_currentSnapshot
T@"SHMediaLibraryContext",&,N,V_currentContext
T@"NSObject<OS_dispatch_group>",&,N,V_syncGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
syncing
TB,N,GisSyncing,V_syncing
T@"NSString",&,N,V_syncID
T@"<SHMediaLibrarySyncDelegate>",W,N,Vdelegate
isTrackIdentifier:
recognitionIdentifierFromTrackIdentifier:
shazamKeyFromTrackIdentifier:
identifierWithRecognitionIdentifier:shazamKey:
containsString:
rangeOfString:options:
substringFromIndex:
keyWithValue:
substringToIndex:
precomposedStringWithCanonicalMapping
compoundIdentifierFromTrackIdentifier:
T@"NSString",R,N,V_recognitionIdentifier
T@"SHLShazamKey",R,N,V_shazamKey
cloudContainer
resultWithError:
fulfilledResult
evaluatePreconditionWithCompletion:
setCloudContainer:
_cloudContainer
T@"SHLCloudBackedContainer",&,N,V_cloudContainer
removeTracks:
UUID
UUIDString
progressWithTotalUnitCount:
decodeIntegerForKey:
encodeInteger:forKey:
size
retryCount
setRetryCount:
setSyncStartCondition:
setSession:
T@"NSProgress",R,N
Tq,N
T@"NSString",N
T@"SHLSyncSession",W,N
setFetchType:
_progress
_retryCount
_syncStartCondition
_fetchType
Tq,N,V_fetchType
T@"<SHLSyncSessionFetchTaskDelegate>",W,N,V_delegate
T@"NSProgress",R,N,V_progress
Tq,N,V_retryCount
T@"NSString",N,V_syncStartCondition
T@"SHLSyncSession",W,N,Vsession
initOperationQueue
setName:
setMaxConcurrentOperationCount:
tailOperation
isFinished
isCancelled
addDependency:
setTailOperation:
operationQueue
addOperations:waitUntilFinished:
cancelAllOperations
setOperationQueue:
_operationQueue
_tailOperation
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperation",W,N,V_tailOperation
initWithUpdatedTrack:localTrack:
updatedTrack
localTrack
_updatedTrack
_localTrack
T@"SHMediaLibraryTrack",R,N,V_updatedTrack
T@"SHTrackMO",R,N,V_localTrack
initWithUpdatedGroup:localGroup:
updatedGroup
localGroup
_updatedGroup
_localGroup
T@"SHMediaLibraryGroup",R,N,V_updatedGroup
T@"SHGroupMO",R,N,V_localGroup
locallyFoundTracks
missingFromLocalStoreTracks
locallyFoundGroups
missingFromLocalStoreGroups
_locallyFoundTracks
_missingFromLocalStoreTracks
_locallyFoundGroups
_missingFromLocalStoreGroups
T@"NSMutableArray",R,N,V_locallyFoundTracks
T@"NSMutableArray",R,N,V_missingFromLocalStoreTracks
T@"NSMutableArray",R,N,V_locallyFoundGroups
T@"NSMutableArray",R,N,V_missingFromLocalStoreGroups
errorCode:underlyingError:
errorCodeForError:
canRetryForPartialError:
userInfoForErrorCode:withUnderlyingError:
initWithDomain:code:userInfo:
localizedDescriptionForSyncError:
localizedFailureReasonForSyncError:
localizedRecoverySuggestionForSyncError:
validEncodedSystemData:
shl_exceptionWithName:reason:
allocWithZone:
initWithMetadata:
length
copyWithZone:
_encodedSystemData
T@"NSData",R,N,V_encodedSystemData
T@"NSDate",&,D,N
T@"NSString",&,D,N
T@"SHLShazamKey",&,D,N
T@"NSString",C,D,N
T@"CLLocation",&,D,N
installationID
initWithClientIdentifier:clientType:installationID:
_createMatcher
audioTapProvider
recorders
initWithAudioTap:audioRecordingManager:catalog:
_audioTapProvider
T@"SHAudioTapProvider",R,N,V_audioTapProvider
stopAudioQueueAndClearBuffersWithError:
isAudioQueueRunning:
initStandardFormatWithSampleRate:channels:
streamDescription
hasAudioQueueFailedWithStatus:annotateError:
startAudioQueueAfterRetrySecondsWithCompletion:
initWithPCMFormat:frameCapacity:
setFrameLength:
audioBufferList
audioRecorderDispatchQueue
audioBufferFromData:byteSize:inFormat:
initWithRecordingSource:
setRecordingSource:
audioQueue
setAudioQueue:
audioStreamBasicDescription
setAudioStreamBasicDescription:
setAudioRecorderDispatchQueue:
mBuffers
_audioQueue
_audioRecorderDispatchQueue
_audioStreamBasicDescription
Tq,N,V_recordingSource
T^{OpaqueAudioQueue=},N,V_audioQueue
T{AudioStreamBasicDescription=dIIIIIIII},N,V_audioStreamBasicDescription
T@"NSObject<OS_dispatch_queue>",&,N,V_audioRecorderDispatchQueue
T@"<SHAudioRecorderDelegate>",W,N,V_delegate
initWithStreamDescription:
sampleRate
initWithAudioTimeStamp:sampleRate:
recorder:producedAudioBuffer:atTime:
_initWithIdentifier:metadata:labels:
commonInitWithIdentifier:metadata:labels:
validProviderIdentifier
validProviderName
bundleName
addPlatformLabel
objectForInfoDictionaryKey:
labelSet
containsObject:
libraryItemIdentifier
initWithLibraryTrack:
isEqualTrack:
platformLabel
_initWithRecognitionIdentifier:shazamKey:metadata:labels:
initWithRecognitionIdentifier:shazamKey:
hasValidRecognitionIdentifier
removeLabel:
setLabelSet:
_providerName
_providerIdentifier
_date
_recognitionIdentifier
_shazamKey
_title
_subtitle
_location
_associatedGroupIdentifier
_compoundIdentifier
_labelSet
T@"NSMutableSet",&,N,V_labelSet
T@"NSDate",&,N,V_date
T@"NSString",&,N,V_recognitionIdentifier
T@"SHLShazamKey",&,N,V_shazamKey
T@"NSString",C,N,V_title
T@"NSString",C,N,V_subtitle
T@"CLLocation",&,N,V_location
T@"NSString",&,N,V_associatedGroupIdentifier
T@"NSString",&,N,V_providerIdentifier
T@"NSString",&,N,V_providerName
T@"NSSet",R,N
T@"SHLLibraryTrackCompoundIdentifier",R,N,V_compoundIdentifier
domain
originalTask
recoverTaskFromPartialError
recoverTaskFromLimitExceededError
savedGroups
deletedIDs
groupsToModify
deletions
intersectSet:
initWithInsertions:deletions:
savedTracks
tracksToModify
differenceOfBatch:
initWithTracksToModify:groupsToModify:
subdivideTaskIntoBatchesOfSize:
initWithOriginalTask:savedGroups:savedTracks:deletedIDs:error:
recoverableTasks
setOriginalTask:
setSavedGroups:
setSavedTracks:
setDeletedIDs:
_originalTask
_savedGroups
_savedTracks
_deletedIDs
T@"SHLSyncSessionModifyTask",&,N,V_originalTask
T@"NSArray",&,N,V_savedGroups
T@"NSArray",&,N,V_savedTracks
T@"NSArray",&,N,V_deletedIDs
responseSignatureForRequest:
matchStreamingBuffer:atTime:
_stop
audioTap
attachTap:
setAudioRecordingSource:
finishSessionConditionsMetForRequest:response:
recordingIntermission
stopCondition
hasHitDeadline
detachTap:
_audioTap
T@"SHAudioTap",R,N,V_audioTap
T@"SHSession",R,N,V_session
initWithConfiguration:
containerTransformer
cloudBackedContainer
initWithContainer:
configuration
sessionScope
fetchTaskTransformer
cloudBackedZoneChangesOperationFromFetchTask:forChangedZones:container:
defaultQueue
operation
addOperation:
arrayWithCapacity:
cache
zoneID
zoneName
subscriptionExistsForZoneIdentifier:
identifier
subscriptionTaskTransformer
cloudBackedOperationForZones:container:
sharedContext
shazamLibraryZone
zoneExistsForIdentifier:
initWithZone:
storeZoneIdentifier:error:
zoneTransformer
cloudBackedOperationForZonesToSave:container:
cloudBackedDatabaseChangesOperationFromFetchTask:container:completion:
storeTask:ofType:error:
addOperation:waitUntilFinished:
preconditions
T@"NSArray",R,N
scheduleFetchTask:
setFetchTaskTransformer:
setSubscriptionTaskTransformer:
_fetchTaskTransformer
_subscriptionTaskTransformer
T@"SHLCloudFetchTaskTransformer",&,N,V_fetchTaskTransformer
T@"SHLCloudSubscriptionTransformer",&,N,V_subscriptionTaskTransformer
initWithURL:
sessionProxy
setLaunchReason:
requestClipWithCompletion:
requestMetadataWithCompletion:
requestAppClipForURL:withCompletionHandler:
notificationFromLegacyUserInfoFormat:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
setMediaItem:
setBundleIdentifier:
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
dictionaryWithObjects:forKeys:count:
mediaItemWithProperties:
payloadFromNotificationContentUserInfo:
userInfoPayloadForMediaItem:bundleIdentifier:
mediaItem
_mediaItem
_bundleIdentifier
T@"SHMediaItem",&,N,V_mediaItem
T@"NSString",C,N,V_bundleIdentifier
topic
userInfo
notificationFromRemoteNotificationDictionary:
notificationType
initWithSnapshot:startCondition:
libraryController
synchronizeWithContext:
apsEnvironment
connectionQueue
initWithEnvironmentName:namedDelegatePort:queue:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
_libraryWillBeginSync:
_library:didChangeWithSnapshot:
_library:didProduceError:failedItemIdentifiers:
_libraryDidCompleteSync:
setConnectionQueue:
_apsEnvironment
_libraryController
_connectionQueue
T@"APSConnection",R,N,V_connection
T@"NSString",R,C,N,V_apsEnvironment
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"SHMediaLibraryController",R,N,V_libraryController
observeAccountChangedNotification
supportsDeviceToDeviceEncryption
accountStatus
libraryStatusForAccountStatus:
initWithStatus:encrypted:
currentUserID
setIdentityToken:
updateUserRecordWithAccountInfo:completion:
fetchAccountInfoWithCompletionHandler:
mainQueue
updateAccountInfo
accountInfoWithCompletionHandler:
ubiquityIdentityToken
setCurrentUserID:
fetchUserRecordIDWithCompletion:
fetchUserRecordIDWithCompletionHandler:
standardUserDefaults
currentLibraryAccountHasChanged
fetchLibraryInfoWithCompletionHandler:
T@"NSString",C,N
T@"<SHMediaLibraryAccountListenerDelegate>",W,N,V_delegate
scope
initWithContainer:usingEncryption:
setScope:
_scope
Tq,N,V_scope
sessionType
modifyTaskScheduler
fetchTaskScheduler
createTransaction
T@"<SHLModifyTaskScheduler>",R,N
T@"<SHLFetchTaskScheduler>",R,N
setSavePolicy:
modifyRecordsOperation
recordsToSaveFromModifyTask:container:
setRecordsToSave:
recordIDsToDeleteFromModifyTask:
setRecordIDsToDelete:
recordsToSave
setTotalUnitCount:
setPerRecordSaveBlock:
setPerRecordCompletionBlock:
canRetryForError:
taskOfType:identifier:
session:task:didModifyGroups:
session:task:didModifyTracks:
session:task:didDeleteItemsWithIdentifiers:
setModifyRecordsCompletionBlock:
recordIDsToDelete
cloudBackedOperationFromModifyTask:container:
setModifyRecordsOperation:
_modifyRecordsOperation
T@"CKModifyRecordsOperation",&,N,V_modifyRecordsOperation
insertions
minusSet:
allObjects
removeObjectAtIndex:
numberOfItems
subdivideIntoBatchesOfSize:
hasChanges
_insertions
_deletions
T@"NSSet",R,N,V_insertions
T@"NSSet",R,N,V_deletions
changes
TB,R,N,GhasChanges
containerWithIdentifier:
initWithZoneName:ownerName:
initWithZoneID:
defaultContainer
manateeContainer
debugContainer
T@"SHLCloudContext",R,N
containerWithScope:
_defaultContainer
_manateeContainer
_debugContainer
_shazamLibraryZone
T@"CKContainer",R,N,V_debugContainer
T@"CKContainer",R,N,V_defaultContainer
T@"CKContainer",R,N,V_manateeContainer
T@"CKRecordZone",R,N,V_shazamLibraryZone
registerBundleAttribution
startManagedRecordingDate
powerlogCallingProcessBundleID:startDate:endDate:
stopMediaSafetyNetExemption
stopWatchdogTimer
setStartManagedRecordingDate:
startMediaSafetyNetExemption
startWatchdogTimerForInterval:firedCompletion:
watchdogTimer
_watchdogTimer
_startManagedRecordingDate
T@"NSDate",&,N,V_startManagedRecordingDate
T@"SHWatchdogTimer",R,N,V_watchdogTimer
initWithScope:
setZoneTransformer:
setCache:
setContainerTransformer:
_zoneTransformer
_cache
_containerTransformer
T@"SHLCloudContainerTransformer",&,N,V_containerTransformer
T@"SHLCloudModifyZoneTransformer",&,N,V_zoneTransformer
T@"SHLCloudLibraryCache",&,N,V_cache
baseCloudRecordFromGroup:
cloudBackedItemFromLibraryGroup:
errorDictionary
errorCodeForResponseCode:
setErrorDictionary:
_errorDictionary
T@"NSDictionary",&,N,V_errorDictionary
T@"NSError",R,N
_zone
T@"CKRecordZone",R,N,V_zone
setLibraryController:
callingProcessIdentifier
container
containerIdentifier
sessionIdentifier
initWithCallingProcessIdentifier:containerIdentifier:transactionIdentifier:
dictionaryWithCapacity:
newSubscriptionForZoneID:
storeSubscription:forZoneIdentifier:error:
subscriptionID
setObject:forKey:
privateCloudDatabase
modifySubscriptionsOperation
setDatabase:
allValues
setSubscriptionsToSave:
objectForKey:
code
removeSubscriptionForZoneIdentifier:error:
enumerateKeysAndObjectsUsingBlock:
setModifySubscriptionsCompletionBlock:
setExpectedSendSize:
subscriptionsToSave
subscriptionIDsToDelete
setQuantity:
setGroup:
initWithOperation:
initWithZoneID:subscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
setModifySubscriptionsOperation:
_configuration
_modifySubscriptionsOperation
T@"SHLSyncSessionConfiguration",R,N,V_configuration
T@"CKModifySubscriptionsOperation",&,N,V_modifySubscriptionsOperation
cStringUsingEncoding:
_encrypted
_container
T@"CKContainer",R,N,V_container
encrypted
TB,R,N,GisEncrypted,V_encrypted
bundleForClass:
URLForResource:withExtension:
URLForDirectory:inDomain:appropriateForURL:create:error:
applicationSupportDirectory
URLByAppendingPathComponent:isDirectory:
path
setType:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
setUsesPersistentHistoryTracking:
persistentStoreURL
setURL:
managedObjectModelURL
persistentStoreDescriptionForStoreType:
accountStatusWithCompletionHandler:
doesCacheDirectoryExist
cacheDirectory
removeItemAtPath:error:
doesLegacyCacheDirectoryExist
legacyCacheDirectory
doesTaskFolderPathsExist
createTaskFolderPaths
inflightTaskPathForIdentifier:
failedTaskPathForIdentifier:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:options:error:
fileExistsAtPath:
inflightFolderPath
failedFolderPath
fileURLWithPath:
tasksForFolderPath:ofType:
taskForFilePath:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
lastPathComponent
removeItemAtURL:error:
dataWithContentsOfFile:
doesZoneFolderPathExist
createZoneFolderPath
zonePathForIdentifier:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:isDirectory:
doesPrivateDatabaseFolderPathExist
createPrivateDatabaseFolderPathWithError:
currentDatabaseFolderPath
writeToken:toPath:error:
stringByAppendingPathComponent:
removeTokenAtPath:error:
bundleDirectory
zonesFolderPath
privateDatabaseFolderPath
containerID
rootDirectory
processID
privateDatabaseTransactionPath
transactionID
copyItemAtPath:toPath:error:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
createBundleDirectory
_processID
_containerID
_transactionID
T@"NSString",R,C,N,V_processID
T@"NSString",R,C,N,V_containerID
T@"NSUUID",R,C,N,V_transactionID
initWithRecord:
record
_record
T@"CKRecord",R,N,V_record
sharedInstance
audioSession
currentRoute
outputs
portType
isOtherAudioPlaying
isAlternativeOutputToBuiltInSpeakerAvailable
setAudioSession:
_audioSession
T@"AVAudioSession",&,N,V_audioSession
startRecognitionGroup
activeTaps
isAudioSourceSupported:
audioEnvironment
setAudioEnvironment:
_recorders
_activeTaps
_startRecognitionGroup
_audioEnvironment
T@"NSMutableArray",R,N,V_activeTaps
T@"NSObject<OS_dispatch_group>",R,N,V_startRecognitionGroup
T@"SHAudioEnvironment",&,N,V_audioEnvironment
T@"NSRecursiveLock",&,N,V_lock
T@"<SHAudioRecordingManagerDelegate>",W,N,V_delegate
T@"NSArray",R,N,V_recorders
hasPrefix:
isEqualLabel:
lowercaseString
_name
T@"NSString",R,N,V_name
initWithResult:error:
failedResult
isSatisfied
_satisfied
satisfied
TB,R,N,GisSatisfied,V_satisfied
recordType
encryptedValuesByKey
encodeSystemFieldsWithCoder:
initWithEncodedSystemData:
recordID
recordName
initWithIdentifier:metadata:
setRecognitionIdentifier:
initWithKey:
setShazamKey:
initWithRecognitionIdentifier:shazamKey:metadata:
setDate:
setTitle:
setSubtitle:
setProviderIdentifier:
setProviderName:
setLocation:
setAssociatedGroupIdentifier:
initWithName:
type
addLabel:
baseCloudRecordFromTrack:usingEncryption:
recognitionIdentifier
compoundIdentifier
shazamKey
validatedKey
setObject:forKeyedSubscript:
date
providerIdentifier
providerName
subtitle
labels
name
location
coordinate
initWithLatitude:longitude:
associatedGroupIdentifier
initWithRecordName:zoneID:
initWithRecordID:action:
metadata
encodedSystemData
initWithCoder:
finishDecoding
initWithRecordType:recordID:
libraryTrackFromCloudBackedItem:usingEncryption:
cloudBackedItemFromLibraryTrack:usingEncryption:
initWithScope:callingProcessIdentifier:
initWithType:scope:callingProcessIdentifier:sessionIdentifier:
migrateCacheIfNeeded
synchronizeChanges:startCondition:
libraryWillBeginSync:
syncSession
startTransactionWithError:
library:didProduceError:withFailedItemIdentifiers:syncAction:
library:didCompleteSyncWithCompletionHandler:
shouldPerformFetch
newFetchTaskWithStartCondition:
updateProgressWithTask:
executeTask:
newModifyTaskWithChanges:startCondition:
syncProgress
shl_markIndeterminate
commitTransactionWithError:
store
currentCache
resetWithError:
syncActionForTaskType:
finishSession:
retryFailedTasks:
initWithOutcome:retryBlock:
retryHandler
retryTask:withContext:
undoTransactionWithError:
library:didChangeTracks:syncAction:
library:didChangeGroups:syncAction:
library:didDeleteItemsWithIdentifiers:syncAction:
taskWithFailedItemsAndCurrentChanges:
tasksOfType:
removeAllTasksOfType:
unionSet:
needsMigration
migrateWithError:
totalUnitCount
addChild:withPendingUnitCount:
defaultLibrary
T@"SHLShazamLibrary",R,N
initWithCallingProcessIdentifier:
synchronizeWithStartCondition:
clearCachedSyncStatus
isValidCallingProcessIdentifier:
setSyncProgress:
setConfiguration:
setSyncSession:
setStore:
setRetryHandler:
setShouldPerformFetch:
_shouldPerformFetch
_syncProgress
_syncSession
_store
_retryHandler
T@"NSProgress",&,N,V_syncProgress
T@"SHLSyncSessionConfiguration",&,N,V_configuration
T@"SHLSyncSession",&,N,V_syncSession
T@"SHLLibraryStore",&,N,V_store
T@"SHLFailedTaskRetryHandler",&,N,V_retryHandler
TB,N,V_shouldPerformFetch
T@"<SHLShazamLibraryDelegate>",W,N,V_delegate
songItemDictionary
objectForKeyedSubscript:
artworkURLFromDictionary:
setFormatOptions:
dateFromString:
uppercaseString
extractIDsFromRelation:
initWithDictionary:
artworkSize
targetArtworkImageSizeFromOriginalSize:
URLWithSize:cropStyle:format:
initWithSongItemDictionary:
appleMusicID
artworkURL
appleMusicURLString
genreNames
releaseDate
isExplicitContent
albumName
isrc
lyricsRelationIDs
musicVideoRelationIDs
setSongItemDictionary:
_songItemDictionary
T@"NSDictionary",&,N,V_songItemDictionary
T@"NSString",R,C,N
T@"NSURL",R,N
T@"NSDate",R,N
TB,R,N
T@"NSArray",R,C,N
songsDictionary
initWithSongsDictionary:
itemForIdentifiers:
_songsDictionary
T@"NSDictionary",R,N,V_songsDictionary
fetchRequest
sortDescriptorWithKey:ascending:
setSortDescriptors:
setReturnsObjectsAsFaults:
setRelationshipKeyPathsForPrefetching:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
tracks
trackFetchedResultsControllerWithContext:
groupFetchedResultsControllerWithContext:
notification
content
mainBundle
sendEvent:withPayload:
webURL
mediaItemPresenter
presentMediaItem:completionHandler:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
setMediaItemPresenter:
_mediaItemPresenter
T@"SHMediaItemPresenter",&,N,V_mediaItemPresenter
setFetchAllChanges:
databaseChangesOperation
fetchType
databaseToken
serverChangeToken
setPreviousServerChangeToken:
previousServerChangeToken
setRecordZoneWithIDChangedBlock:
removeZoneIdentifier:error:
errorWithCode:
initWithError:
session
session:task:didProduceOutcome:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDWasPurgedBlock:
initWithToken:
storeDatabaseToken:error:
removeTaskOfType:forIdentifier:error:
progress
completedUnitCount
setCompletedUnitCount:
removeDatabaseTokenWithError:
errorWithUnderlyingError:
setFetchDatabaseChangesCompletionBlock:
setExpectedReceiveSize:
syncStartCondition
recordZoneChangesOperation
recordIDsFromCloudBackedZones:
setRecordZoneIDs:
configurationsByRecordZoneIDUsingCache:
setConfigurationsByRecordZoneID:
libraryGroupFromCloudBackedItem:
isEncrypted
setRecordWasChangedBlock:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
storeZoneToken:forZoneIdentifier:error:
setRecordZoneChangeTokensUpdatedBlock:
removeTokenForZoneIdentifier:error:
setRecordZoneFetchCompletionBlock:
session:task:didFetchGroups:
session:task:didFetchTracks:
session:task:didFetchDeletedItemsWithIdentifiers:
setFetchRecordZoneChangesCompletionBlock:
recordZoneIDs
zoneTokenForZoneIdentifier:
setDatabaseChangesOperation:
setRecordZoneChangesOperation:
_databaseChangesOperation
_recordZoneChangesOperation
T@"CKFetchDatabaseChangesOperation",&,N,V_databaseChangesOperation
T@"CKFetchRecordZoneChangesOperation",&,N,V_recordZoneChangesOperation
setCreationDate:
recognitionID
group
latitude
longitude
executeModifyTask:
executeFetchTask:
schedulerFactory
sessionDispatchQueue
evaluatePreconditions:withCompletion:
setTransaction:
transaction
setSchedulerFactory:
setSessionDispatchQueue:
_schedulerFactory
_transaction
_sessionDispatchQueue
T@"SHLTaskSchedulerFactory",&,N,V_schedulerFactory
T@"<SHLLocalStateTransactionable>",&,N,V_transaction
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionDispatchQueue
T@"<SHLSyncSessionDelegate>",W,N,V_delegate
deliverContentForMatchedMediaItem:imageData:completion:
_serverChangeToken
T@"CKServerChangeToken",R,N,V_serverChangeToken
defaultCenter
handleAudioSessionInterruption:
addObserver:selector:name:object:
handleAudioSessionRouteChange:
handleMediaServicesWereLost:
handleMediaServicesWereReset:
removeObserver:name:object:
registerAudioSessionObservers
setIsAudioSessionInterrupted:
configureAudioSessionForStandardClient:
configureAudioSessionForAssistantService:
setActive:error:
setCategory:withOptions:error:
setMode:error:
setAllowHapticsAndSystemSoundsDuringRecording:error:
preferDecoupledIO:error:
unregisterAudioSessionObservers
setActive:withOptions:error:
unsignedIntegerValue
audioSessionManager:interruptionBeganWithOptions:
audioSessionManager:interruptionEndedWithOptions:
mediaServicesWereReset
activateAudioSessionForClient:
deactivateAudioSession
isAudioSessionInterrupted
audioManagerDispatchQueue
setAudioManagerDispatchQueue:
_isAudioSessionInterrupted
_audioManagerDispatchQueue
TB,N,V_isAudioSessionInterrupted
T@"NSObject<OS_dispatch_queue>",&,N,V_audioManagerDispatchQueue
T@"<SHAudioSessionManagerDelegate>",W,N,V_delegate
modifyRecordZonesOperation
recordZonesFromCloudBackedZones:
setRecordZonesToSave:
setModifyRecordZonesCompletionBlock:
recordZonesToSave
recordZoneIDsToDelete
setModifyRecordZonesOperation:
_modifyRecordZonesOperation
T@"CKModifyRecordZonesOperation",&,N,V_modifyRecordZonesOperation
watchdogTimerSource
_watchdogTimerSource
T@"NSObject<OS_dispatch_source>",R,N,V_watchdogTimerSource
shouldStartWorker:
T@"SHMediaItemPresenter",R,N,V_mediaItemPresenter
_initWithIdentifier:metadata:tracksToSave:
commonInitWithIdentifier:metadata:tracksToSave:
validIdentifier:
setWithObjects:
decodeObjectOfClasses:forKey:
tracksToSave
initWithLibraryGroup:
isEqualGroup:
supportsSecureCoding
encodeWithCoder:
TB,R
initWithIdentifier:
T@"NSString",R,N
T@"SHLLibraryItemMetadata",R,N
mutableCopyWithZone:
setTracksToSave:
_metadata
_identifier
_tracksToSave
T@"NSMutableArray",&,N,V_tracksToSave
T@"NSString",R,N,V_identifier
T@"SHLLibraryItemMetadata",R,N,V_metadata
isShazamKeyValid:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
longLongValue
numberWithLongLong:
_validatedKey
T@"NSString",R,N,V_validatedKey
delegate
snapshot
startCondition
setError:
_delegate
_snapshot
_startCondition
_error
T@"<SHMediaLibrarySyncDelegate>",W,N,V_delegate
T@"SHMediaLibrarySnapshot",R,N,V_snapshot
T@"NSString",R,C,N,V_startCondition
T@"NSError",&,N,V_error
outcome
retryBlock
_outcome
_retryBlock
T@"SHLTaskOutcome",R,N,V_outcome
T@?,R,N,V_retryBlock
removeObserver:
addObserverForName:object:queue:usingBlock:
retrySecondsForError:
retryTaskWithTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
invalidate
_init
setGroupsToModify:
setTracksToModify:
updateProgress
decodeInt64ForKey:
encodeInt64:forKey:
_tracksToModify
_groupsToModify
T@"SHLLibraryBatch",&,N,V_tracksToModify
T@"SHLLibraryBatch",&,N,V_groupsToModify
T@"<SHLSyncSessionModifyTaskDelegate>",W,N,V_delegate
initWithAudioRecordingManager:entitlements:bundleIdentifier:
initWithAudioTapProvider:
matcherFactory
matcherForRequest:attribution:clientType:
inflightMatchAttempts
result
sendNotifications
canSendNotificationForNoMatchSignatureID:
sendNotificationForNoMatch
match
canSendNotificationForMatch:
sendNotificationForMatch:
objectEnumerator
nextObject
deadline
laterDate:
mostDistantActiveMatcherDeadline
timeIntervalSinceNow
keyEnumerator
_inflightMatchAttempts
_clientType
_matcherFactory
T@"NSMapTable",R,N,V_inflightMatchAttempts
Tq,R,N,V_clientType
T@"SHEntitlements",R,N,V_entitlements
T@"SHMatcherFactory",R,N,V_matcherFactory
T@"<SHMatcherDelegate>",W,N,V_delegate
loadEndpointForClientIdentifier:clientType:endpointType:installationID:callback:
matchURLPathForClientIdentifier:
lookupURLPathForClientIdentifier:
storefront
initWithHost:URLPath:
suggestedLanguage
updateTokensForEndpoint:language:storefront:installationID:
storefrontCountryCode:
endpointsWithCompletion:
hostForClientType:completion:
updateToken:withValue:
loadLookupEndpointForClientIdentifier:clientType:callback:
loadMatchEndpointForClientIdentifier:clientType:installationID:callback:
_storefront
T@"SHStorefront",R,N,V_storefront
startRecordingWithCompletion:
stopRecordingWithError:
T@"<SHAudioRecorderDelegate>",W,N
Tq,R,N
T@"<SHAudioRecorderDelegate>",W,N,Vdelegate
taskTransformer
scheduleModifyTask:
setTaskTransformer:
_taskTransformer
T@"SHLCloudModifyTaskTransformer",&,N,V_taskTransformer
attachmentWithIdentifier:URL:options:error:
fetchRequestWithEntityName:
T@"SHMetadataMO",&,D,N
T@"NSSet",&,D,N
T@"NSData",&,D,N
T@"SHGroupMO",&,D,N
track
T@"SHTrackMO",&,D,N
T@"NSURL",C,D,N
T@"NSDate",C,D,N
T@"NSArray",&,D,N
Td,D,N
v16@?0@"NSError"8
Attempted to start an unknown service: %@
v8@?0
com.apple.shazamd
artistName
name
shazamUrl
songs
meta
matchOffset
speedSkew
frequencySkew
width
height
com.apple.ShazamKit
%@ is not supported by shazamd, please use synchronizeSnapshot:startCondition:completionHandler:
v24@?0@"SHDefaultConfigurationValues"8@"NSError"16
v24@?0@"SHCampaignTokens"8@"NSError"16
unknown
external
internal
POST
signature
data:audio/vnd.shazam.sig;base64,%@
audioSource
startDate
sessionDurationInSeconds
subscriptionStatusType
eligibleOffers
subscriptionStatus
com.apple.ShazamNotifications
results
resources
errors
shazam-songs
lyrics
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
Failed to open url %@
v24@?0@"NSDictionary"8@"NSError"16
NOMATCH
v16@?0@"UNNotificationContent"8
com.apple.ShazamKit.serverResponseContextBuilder.dispatch
com.apple.musicrecognition
Failed to fetch media item due to missing bundle identifier
Failed to fetch media item with shazam ID %@. Ensure ShazamID is valid.
application/json
Content-Type
v16@?0@"SHServerResponseContext"8
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v24@?0@"SHTokenizedURL"8@"NSError"16
com.apple.ShazamNotifications.main-thread
com.apple.ShazamNotifications.category.actionable
com.apple.ShazamNotifications.category.default
v16@?0@"UNNotificationAttachment"8
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_SUBTITLE
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_BODY
matches
retry
retryInMilliseconds
recordingIntermissionInMilliseconds
com.apple.assistant_service
%@ is not a valid client identifier
-[_initWithInstallationID:] should not be used on this class
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
%@ is not supported by shazamd, please use startRecognitionForRequest:completionHandler
%@ is not supported by shazamd, please use synchronizeSnapshot:startCondition:completionHandler
You don't have permission to fetch the library for %@
@distinctUnionOfObjects.%@
Should not try to save and delete tracks at the same time: %@
Should not try to save and delete groups at the same time: %@
T: +%lu -%lu G: +%lu -%lu
ttml
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
%@ context
%K == %@
%@ != nil
%@ == nil
%K IN %@
syncID
B24@?0@"SHTrackMO"8@"NSDictionary"16
@unionOfObjects.%@.%@
B24@?0@"SHGroupMO"8@"NSDictionary"16
com.apple.shazamd.library.dispatch-queue
v24@?0@"SHMediaLibraryInfo"8@"NSError"16
v24@?0q8q16
v16@?0q8
q24@?0@"SHMediaLibraryTrack"8@"SHMediaLibraryTrack"16
%@ is not supported by shazamd, please use synchronizeWithContext:
SHLLibraryTrackRecognitionIdentifierKey
_[T]_
%@ %@ is not a valid recognition identifier and key
%@%@%@
Track with identifier %@ is already associated to a group (%@), try removing it before.
Track with identifier %@ cannot be removed, try adding it before.
SHLSyncSessionFetchTaskIdentifier
SHLSyncSessionFetchTaskFetchType
SHLSyncSessionFetchTaskSyncTrigger
com.shazam.ShazamLibrary.operation-queue
com.shazam.library
v32@?0@"CKRecordID"8@"NSError"16^B24
No account logged in on this device.
Logged in account is restricted.
Logged in account is not a two-factor auth account with at least one passcode enabled device.
Missing encryption identity.
Network is unavailable.
Storage is full.
The content of your Shazam Library was deleted.
The content of your Shazam Library was purged.
Failed to sync your Shazam Library.
Shazam Library saves to the user's private database, which requires an authenticated session.
Parental Controls / Device Management has denied access to account credentials.
A device to device encryption requires an account with two-factor auth and a device with passcode enabled.
Encryption key has been permanently lost.
There's no network available to perform any networking tasks.
The user has reached the storage quota.
All contents have been removed.
All contents have been removed, usually through the Settings UI.
A possible internal sync error, check underlying error for a detailed description.
The user should manually log in.
Switch to an account that is not restricted by the system.
Turn on a passcode on the device and enable two-factor auth on the current iCloud account.
Non-recoverable. The user's local data should be automatically re-sync to Shazam Library.
Wait for network to become available and retry sync later.
The user should manually remove data or upgrade storage plans.
Non-recoverable. The user should choose to remove local data or re-sync to Shazam Library.
Initiate a manual sync later.
You must provide a valid encoded data.
com.apple.ShazamKit.shazamaudiorecorder.dispatch
Recorder using source %li
SHLLibraryTrackIdentifier
SHLLibraryTrackRecognitionIdentifier
SHLLibraryTrackShazamKey
SHLLibraryTrackMetadata
SHLLibraryTrackProviderIdentifier
SHLLibraryTrackProviderName
SHLLibraryTrackDate
SHLLibraryTrackTitle
SHLLibraryTrackSubtitle
SHLLibraryTrackLocation
SHLLibraryTrackCompoundIdentifierKey
SHLLibraryTrackAssociatedGroupIdentifier
SHLLibraryTrackLibrarySet
CFBundleName
%@_ios
You must have a valid Shazam key to create a library item.
%@ is not a valid recognition identifier.
v32@?0@"AVAudioPCMBuffer"8@"AVAudioTime"16@"NSError"24
v16@?0@"NSArray"8
v20@?0B8@"NSError"12
v24@?0@"CPSClipMetadata"8@"NSError"16
com.apple.ShazamNotifications.user-info.payload
com.apple.ShazamNotifications.user-info.media-item
com.apple.ShazamNotifications.user-info.attribution
com.apple.ShazamNotifications.user-info.apple-music
com.apple.aps.shazamd
com.apple.aps.shazamd.queue
SHLibraryAvailabilityListenerUserID
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
ModifyRecords
libraryBatchInsertions
libraryBatchDeletions
com.apple.shazam
com.apple.shazam.secure
iCloud.com.shazam.Shazam
shazam-library
Group
detail
code
sh.001
sh.002
ModifySubscriptions
v32@?0@"NSString"8@"NSError"16^B24
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
Library
ShazamLibrary
momd
sqlite
v24@?0q8@"NSError"16
com.apple.shazamlibrary.cloud
inflighttasks
failedtasks
privatedatabase
privatedatabasetransaction
zones
token
zonesubscription
SHLLibraryLabelName
platform
Track
RecognitionIdentifier
ShazamKey
ProviderIdentifier
ProviderName
Date
Title
Subtitle
Location
AssociatedGroupIdentifier
Labels
InitialFetch
InitialUpload
UserAction
RemotePush
Migration
v12@?0B8
attributes
albumName
isrc
contentRating
genreNames
releaseDate
artwork
relationships
public-lyrics
music-videos
data
EXPLICIT
SHFetchedResultsControllerTrackCacheName
SHFetchedResultsControllerGroupCacheName
FetchDatabaseChanges
FetchZoneChanges
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
%@_%@
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
A valid Shazam track requires a ShazamID. Library item (%@) is missing a ShazamID.
com.shazam.ShazamLibrary.syncSession.dispatchQueue
You must conform to the protocol of the modify task you're trying to add.
v16@?0@"SHLTaskPreconditionResult"8
You must conform to the protocol of the fetch task you're trying to add.
com.apple.shazamd.audiomanager.dispatch
ModifyZones
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
SHLLibraryGroupIdentifier
SHLLibraryGroupMetadata
SHLLibraryGroupTracksToSave
%@ is not a valid identifier.
v16@?0@"NSNotification"8
SHLSyncSessionModifyTaskTracksToModify
SHLSyncSessionModifyTaskGroupsToModify
SHLSyncSessionModifyTaskIdentifier
SHLSyncSessionModifyTaskProgress
SHLSyncSessionModifyTaskRetryCount
SHLSyncSessionModifyTaskSyncTrigger
q24@?0@"SHLLibraryBatch"8@"SHLLibraryBatch"16
handleCommonActionsForMatcher: %@ withResponse: %@ matchAttemptWasCancelled %i
v16@?0@"NSString"8
v24@?0@"SHEndpoints"8@"NSError"16
v24@?0@"SHHost"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
SHGroupMO
SHMetadataMO
SHTrackMO
SHConnectionHandle
SHServer
SHServiceProvider
SHConnectionListener
NSXPCListenerDelegate
NSObject
SHShazamResponseItem
SHServerShazamResponse
SHMediaLibrarySyncManager
SHWorker
SHServerResponseContext
SHShazamKitServerMatcher
SHNotificationCenterProvider
SHInflightMatchAttempt
SHServerMatchResponseParser
SHAudioManager
SHAudioSessionManagerDelegate
SHAudioRecordingManagerDelegate
SHServerGetResponseParser
SHLCloudBackedSubscription
SHServerResourcesResponse
SHAMSEndpointRequester
SHNetworkRecognitionRequester
SHMediaItemPresenter
SHMatchResultNotificationScheduler
SHAudioTap
SHMatchResultUserNotificationContentDeliverer
SHMatchResultNotificationContentDeliverer
SHServerResponseContextBuilder
SHMultipleConcurrentAudioTapMatcher
SHMatcherDelegate
SHSessionDelegate_Internal
SHSessionDelegate
SHCloudContainer
SHMediaItemFetcher
SHMatchResultUserNotificationContentProvider
SHServerDataResponse
SHAudioRecorderProvider
SHServerResultsResponse
SHAudioTapProvider
SHShazamKitServerCatalog
SHMatchResultNotificationAttachmentProviderUtilities
SHLLibraryStore
SHLCloudBackedOperation
SHMusicVideoResponseItem
SHServerMusicVideoResponse
SHShazamKitService
SHWorkerDelegate
SHMatcher
SHMediaLibrary
SHMediaLibrarySync
SHMediaLibraryQuery
SHMediaItemProvider
SHEventSignalling
SHEventSignalScheduler
SHLSyncSessionConfiguration
SHLLibraryChangeset
SHLTaskOutcome
SHLyricsResponseItem
SHServerLyricsResponse
SHMediaLibraryDataStore
NSFetchedResultsControllerDelegate
SHMediaLibraryController
SHLShazamLibraryDelegate
SHMediaLibraryAccountListenerDelegate
SHMediaLibraryDataStoreDelegate
SHLLibraryTrackCompoundIdentifier
SHLCloudEncryptionPrecondition
SHLTaskPrecondition
SHServiceStateHandlerUtilities
SHLMutableLibraryGroup
SHLSyncSessionFetchTask
SHLSyncSessionTask
SHLOperationQueue
SHUpdatedTrackLocalTrackPair
SHUpdatedGroupLocalGroupPair
SHMediaLibraryUpdateReport
SHLError
SHLLibraryItemMetadata
NSCopying
SHLMutableLibraryTrack
SHMatcherFactory
SHLLibraryTrack
SHLModifyTaskRecovery
SHAudioTapMatcher
SHLCloudFetchTaskScheduler
SHLFetchTaskScheduler
SHLTaskScheduler
SHAppClip
SHMatchResultUserNotificationPayload
SHAPSConnection
APSConnectionDelegate
SHMediaLibrarySyncDelegate
SHMediaLibraryAccountListener
SHLCloudContainerTransformer
SHLTaskSchedulerFactory
SHLCloudModifyTaskTransformer
SHLLibraryBatch
SHLCloudContext
SHServiceStateHandler
SHServiceDelegate
SHLCloudTaskScheduler
SHLCloudGroupTransformer
SHServerErrorResponse
SHLCloudBackedZone
SHMediaLibraryQueryManager
SHLCloudSubscriptionTransformer
SHLTaskPreconditionEvaluator
SHLCloudBackedContainer
SHMediaLibraryPersistentConfiguration
SHLCloudAccountStatusPrecondition
SHLCloudLibraryCache
SHLLibraryCache
SHLLocalStateTransactionable
SHLCloudBackedItem
SHAudioEnvironment
SHAudioRecordingManager
SHAudioRecorderDelegate
SHLLibraryLabel
SHLTaskPreconditionResult
SHLCloudTrackTransformer
SHLShazamLibrary
SHLSyncSessionModifyTaskDelegate
SHLSyncSessionTaskDelegate
SHLSyncSessionDelegate
SHLSyncSessionFetchTaskDelegate
SHSongsResponseItem
SHServerSongsResponse
SHFetchedResultsControllerFactory
SHMatchResultUserNotificationCenterDelegate
UNUserNotificationCenterDelegate
SHLCloudFetchTaskTransformer
SHMediaLibraryItemMapper
SHLSyncSession
SHMatchResultBulletinContentDeliverer
SHLCloudBackedToken
SHAudioSessionManager
SHLCloudModifyZoneTransformer
SHWatchdogTimer
SHUIService
SHMediaItemPresentation
SHLLibraryGroup
SHLLibraryItem
NSSecureCoding
NSCoding
NSMutableCopying
SHLShazamKey
SHMediaLibraryContext
ShazamLibrary
SHLTaskRetryContext
SHLFailedTaskRetryHandler
SHLSyncSessionModifyTask
SHMatcherController
SHShazamKitServerURLBuilder
SHSimulatorAudioRecorder
SHAudioRecorder
SHLCloudModifyTaskScheduler
SHLModifyTaskScheduler
SHMatchResultUserNotificationAttachmentProvider
SHGroupMO
CoreDataProperties
SHMetadataMO
SHTrackMO
v16@0:8
@40@0:8@16@24@32
@16@0:8
v24@0:8@16
@"<SHServiceDelegate>"
@"NSXPCConnection"
@24@0:8#16
@"NSArray"
@"SHAPSConnection"
@32@0:8@16@24
@"NSXPCListener"16@0:8
@"SHConnectionHandle"32@0:8@"NSXPCConnection"16@"SHAttribution"24
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableArray"
@"NSXPCListener"
@"<SHServiceProvider>"
@"<SHWorkerDelegate>"16@0:8
v24@0:8@"<SHWorkerDelegate>"16
@"<SHWorkerDelegate>"
@"NSMapTable"
@"NSRecursiveLock"
v24@0:8d16
@"NSISO8601DateFormatter"
@"SHShazamKitServerCatalog"
@"SHMatcherRequest"
@48@0:8@16@24@32@40
v32@0:8@16Q24
v32@0:8@"SHAudioSessionManager"16Q24
B40@0:8@16@24@32
v32@0:8@"SHAudioRecordingManager"16@"SHAudioTap"24
v24@0:8@"SHAudioRecordingManager"16
v32@0:8@"SHAudioRecordingManager"16@"NSArray"24
B40@0:8@"SHAudioRecorder"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
@"SHAudioRecordingManager"
@"SHAudioSessionManager"
@40@0:8@16@24^@32
@"CKSubscription"
v32@0:8@"NSURLRequest"16@?<v@?@"NSData"@"NSURLResponse"@"NSError">24
v40@0:8@16@?24@32
@"AMSMediaRequestEncoder"
@"AMSURLSession"
@"SHMatchedMediaItem"
@"<SHMatchResultNotificationContentDeliverer>"
@32@0:8q16q24
@?16@0:8
v24@0:8@?16
q16@0:8
v24@0:8@?<v@?>16
v32@0:8@"SHMatchedMediaItem"16@?<v@?>24
@"SHMatchResultUserNotificationContentProvider"
v32@0:8@"<SHMatcher>"16@"SHMatcherResponse"24
v32@0:8@"SHSession"16@"SHMatch"24
v40@0:8@"SHSession"16@"SHSignature"24@"NSError"32
B32@0:8@"SHSession"16@"SHSignature"24
v32@0:8@"SHSession"16@"SHMatcherResponse"24
v24@0:8@"SHSession"16
@"<SHMatcherDelegate>"
@"<SHAudioRecordingManager>"
@56@0:8@16q24@32@40@48
@"SHShazamKitServerURLBuilder"
@"SHServerResponseContextBuilder"
@"<SHNetworkRecognitionRequester>"
d16@0:8
B24@0:8q16
@40@0:8@16q24@32
v32@0:8@16@?24
@"<SHLLibraryCache>"
@"CKDatabaseOperation"
v28@0:8@"<SHWorker>"16B24
v24@0:8@"SHMatcherRequest"16
@"<SHMatcherDelegate>"16@0:8
v24@0:8@"<SHMatcherDelegate>"16
v32@0:8@"SHMediaLibrarySnapshot"16@"NSString"24
@"<SHMediaLibrarySyncDelegate>"16@0:8
v24@0:8@"<SHMediaLibrarySyncDelegate>"16
v24@0:8@?<v@?@"SHMediaLibraryInfo"@"NSError">16
v32@0:8@"SHMediaLibraryQueryParameters"16@?<v@?@"NSArray"@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SHMediaItem"@"NSError">24
Vv24@0:8@16
Vv24@0:8@"NSString"16
v40@0:8@16@24@?32
v32@0:8@"SHMatcherRequest"16@?<v@?>24
v40@0:8@"SHMediaLibrarySnapshot"16@"NSString"24@?<v@?>32
@"SHEntitlements"
@"SHMatcherController"
@"SHMatchResultNotificationScheduler"
@"SHMediaLibrarySyncManager"
@"SHMediaLibraryQueryManager"
@"SHMediaItemFetcher"
@"SHEventSignalScheduler"
@"<SHShazamKitClient>"
@"SHAttribution"
@48@0:8q16q24@32@40
@"NSMutableSet"
@24@0:8d16
@"MSVLyricsSongInfo"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
q24@0:8Q16
@"NSFetchedResultsController"
@"<SHMediaLibraryDataStoreDelegate>"
@"NSPersistentContainer"
@"NSManagedObjectContext"
v40@0:8@16@24q32
v48@0:8@16@24@32q40
v24@0:8@"SHLShazamLibrary"16
v40@0:8@"SHLShazamLibrary"16@"NSArray"24q32
v48@0:8@"SHLShazamLibrary"16@"NSError"24@"NSArray"32q40
v32@0:8@"SHLShazamLibrary"16@?<v@?B>24
v32@0:8@"SHMediaLibraryDataStore"16@"SHMediaLibraryChange"24
@"SHLShazamLibrary"
@"SHMediaLibraryDataStore"
@"SHMediaLibraryAccountListener"
@"SHMediaLibraryContext"
@"NSObject<OS_dispatch_group>"
v24@0:8@?<v@?@"SHLTaskPreconditionResult">16
@"SHLCloudBackedContainer"
@"NSProgress"16@0:8
v24@0:8@"NSString"16
@"SHLSyncSession"16@0:8
v24@0:8@"SHLSyncSession"16
@"NSProgress"
@"SHLSyncSession"
@"<SHLSyncSessionFetchTaskDelegate>"
v28@0:8@16B24
@"NSOperationQueue"
@"NSOperation"
@"SHMediaLibraryTrack"
@"SHTrackMO"
@"SHMediaLibraryGroup"
@"SHGroupMO"
d24@0:8@16
q24@0:8@16
@24@0:8^{_NSZone=}16
@"NSData"
@40@0:8@16@24q32
@"SHAudioTapProvider"
@40@0:8^v16Q24@32
B24@0:8^{OpaqueAudioQueue=}16
B28@0:8i16^@20
^{OpaqueAudioQueue=}16@0:8
v24@0:8^{OpaqueAudioQueue=}16
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
[3^{AudioQueueBuffer}]
^{OpaqueAudioQueue=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@"NSDate"
@"SHLShazamKey"
@"CLLocation"
@"SHLLibraryTrackCompoundIdentifier"
@56@0:8@16@24@32@40@48
@"SHLSyncSessionModifyTask"
@"SHAudioTap"
@"SHSession"
@"NSArray"16@0:8
v24@0:8@"SHLSyncSessionFetchTask"16
@24@0:8@16
@"SHLCloudFetchTaskTransformer"
@"SHLCloudSubscriptionTransformer"
@"SHMediaItem"
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"<SHMediaLibrarySync>"16
v32@0:8@"<SHMediaLibrarySync>"16@"SHMediaLibrarySnapshot"24
v40@0:8@"<SHMediaLibrarySync>"16@"NSError"24@"NSArray"32
@"APSConnection"
@"SHMediaLibraryController"
@"NSObject<OS_dispatch_queue>"
@"<SHMediaLibraryAccountListenerDelegate>"
@"CKModifyRecordsOperation"
@"NSSet"
@24@0:8q16
@"CKContainer"
@"CKRecordZone"
v32@0:8@"<SHService>"16@"<SHWorker>"24
v32@0:8d16@?24
@"SHWatchdogTimer"
@"SHLCloudModifyZoneTransformer"
@"SHLCloudLibraryCache"
@"SHLCloudContainerTransformer"
@"SHLSyncSessionConfiguration"
@"CKModifySubscriptionsOperation"
B40@0:8@16q24^@32
B40@0:8q16@24^@32
B40@0:8@"<SHLSyncSessionTask>"16q24^@32
B40@0:8q16@"NSString"24^@32
@"NSArray"24@0:8q16
@"<SHLSyncSessionTask>"32@0:8q16@"NSString"24
@32@0:8@16q24
B32@0:8@16^@24
B40@0:8@16@24^@32
@"NSUUID"
@"CKRecord"
@"AVAudioSession"
v40@0:8@"<SHAudioRecorder>"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
v24@0:8@"SHAudioTap"16
@"<SHAudioRecordingManagerDelegate>"
@"SHAudioEnvironment"
@28@0:8B16@20
@28@0:8@16B24
v40@0:8@"SHLSyncSession"16@"<SHLSyncSessionTask>"24@"SHLTaskOutcome"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionModifyTask"24@"NSArray"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionFetchTask"24@"NSArray"32
@32@0:8q16@24
q24@0:8q16
@"<SHLShazamLibraryDelegate>"
@"SHLLibraryStore"
@"SHLFailedTaskRetryHandler"
{CGSize=dd}32@0:8{CGSize=dd}16
@"NSDictionary"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"SHMediaItemPresenter"
@40@0:8@16@24@?32
@"CKFetchDatabaseChangesOperation"
@"CKFetchRecordZoneChangesOperation"
@"<SHLSyncSessionDelegate>"
@"SHLTaskSchedulerFactory"
@"<SHLLocalStateTransactionable>"
@"CKServerChangeToken"
v24@0:8q16
v20@0:8B16
@"<SHAudioSessionManagerDelegate>"
@"CKModifyRecordZonesOperation"
@"NSObject<OS_dispatch_source>"
v32@0:8@"SHMediaItem"16@?<v@?@"NSError">24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8@"NSString"16
@32@0:8@"NSString"16@"SHLLibraryItemMetadata"24
@"SHLLibraryItemMetadata"16@0:8
@"SHLLibraryItemMetadata"
@"<SHMediaLibrarySyncDelegate>"
@"SHMediaLibrarySnapshot"
@"NSError"
@32@0:8@16@?24
@"SHLTaskOutcome"
@"<SHLSyncSessionModifyTaskDelegate>"
@"SHLLibraryBatch"
@"SHMatcherFactory"
v40@0:8@16q24@?32
v48@0:8@16q24@32@?40
v56@0:8@16q24q32@40@?48
@"SHStorefront"
B24@0:8^@16
v24@0:8@?<v@?B@"NSError">16
@"<SHAudioRecorderDelegate>"16@0:8
v24@0:8@"<SHAudioRecorderDelegate>"16
@"<SHAudioRecorderDelegate>"
v24@0:8@"SHLSyncSessionModifyTask"16
@"SHLCloudModifyTaskTransformer"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>shazamd</string>
<key>CFBundleExecutable</key>
<string>shazamd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.shazamd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>shazamd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.2</string>
<key>DTSDKBuild</key>
<string>20C47</string>
<key>DTSDKName</key>
<string>iphonesimulator16.2.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>628765583</string>
<key>application-identifier</key>
<string>com.apple.shazamd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.shazam.secure</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.ClipServices</key>
<true/>
<key>com.apple.private.ShazamKit</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/Frameworks/ShazamKit.framework/shazamd</string>
</dict>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.shazam.secure</key>
<string>com.apple.shazam.secure</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.shazamkit.controlcenter.ShazamModule</string>
</array>
<key>com.apple.private.mediasafetynet.exception.shazam</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>shazamd</string>
<key>com.apple.private.shazamkit.persistence</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.ShazamNotifications</string>
</array>
<key>com.apple.security.device.audio-input</key>
<true/>
<key>com.apple.security.device.microphone</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.play-media</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.shazamd</string>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
@(#)PROGRAM:shazamd  PROJECT:ShazamKit-1
Deallocating the XPC connection
Failed to setup the remote proxy %@
Connection listener removed a handle, now we have %lu left
Calling stop on the service %@ of the handle %@
Interruption handler called for service %@ from %@:%i
Invalidation handler called for service %@ from %@:%i
Failed to set tmp dir suffix
Calling completion handler %@ on library controller %@
Shazam service matching signature of duration %f with data of length %lu at %@
Received network response, no data %@
Server response parser: No response %@
Server response parser: Error, %@
Server response parser: Error, returning results, recording intermission %f, retry %f
Server response parser: Returning results, recording intermission %f, retry %f
Server response parser: has match %@
Server response parser: has no match
Audio interruption ended but recording should not restart
Resuming recording after interruption
Assistant service will attach a tap
willAttachTap: number of assistant taps %li
Assistant service has detached a tap
didDetachTap: number of assistant taps %li
audioRecordingManagerWillStartRecording - number of assistant taps %li
audioRecordingManagerDidStopRecording
Server response parser: has no media items
Failed to fetch data task %@
Failed to encode network request %@
Presenting media item %@
No web URL available for media item %@
Attempting to open app directly with url %@
Unable to get strong reference to self
Opened url %@ in the Shazam app
failed to open app, likely not installed - requesting App Clip
Opened url %@ as an App Clip
Falling back to launching url %@ in Safari
Failed to open url with error %@
Opened URL %@ with result %@
Sending no match notification
Sending match notification
Error adding notification request %@
Failed to schedule notification: %@
Failed to create dispatch group while loading context
Failed to add default values to response context %@
Failed to add campaign token to response context %@
SHMultipleConcurrentAudioTapMatcher Calling stop on audioTapMatchers %@
Suggested audio recording source %li signature source %li shouldAttempt %i
Failed fetching media item, bundle identifier missing
URL %@ not properly tokenized
Fetching media item at %@
Error fetching media item %@
Returning audio tap for source %li bundle identifier %@
Deallocating the Shazam Service
Current Bundle ID is not entitled to use the Library SPI
Missing Bundle ID, it's required to sync the Library
Worker %@ changed running state to %d
Sent signal event: %@
Failed to parse lyrics song info %@
Failed to load description %@
Failed to observe local track changes: %@
Failed to observe local group changes: %@
Updating existing entries for %lu library track(s)
Creating entries for %lu library track(s)
Updating existing entries for %lu Library Group IDs: %@
Creating entries for %lu library group(s)
Failed to purge local group objects: %@
Failed to purge local track objects: %@
Failed to delete sync metadata: %@
Failed to fetch request %{public}@
Persisting a Track with an associated Group ID, but there is no group saved locally. Will fallback to creation.
Failed to convert %@ to %@
Media Library started syncing. Sync ID: %@
[Local] Media Library sync starts. Sync ID: %@
Processed %lu changes before sync. Inserted %ld & Updated %ld local group entries
Processed %lu changes before sync. Inserted %ld & Updated %ld local track entries
Processed %lu deletions before sync. Deleted %ld local entries
Failed to persist library changes with error %@
[Local] Media Library completed sync. Sync ID: %@
iCloud account is not available or device to device encryption is not supported, skipping remote sync
[Remote] Media Library sync starts. Sync ID: %@, changes: %@
Processed %lu returned track changes. Inserted %ld & Updated %ld local entries
Processed %lu returned group changes. Inserted %ld & Updated %ld local entries
Processed %lu returned deletions. Deleted %ld local entries
Failed to persist sync changes with error: %@
[Remote] Media Library completed sync. Sync ID: %@
Clear all local data and cache sync status
Failed to fetch account info %@
Account supports device to device encryption
Deallocating SHAudioRecorder
Already running audio queue
Failed to create a new audio queue input with error %@
Failed to set audio queue property
Failed to add isRunning property listener
Failed to start audio queue, retry one more time
Failed to stop audio queue %@
Failed to remove isRunning property listener %@
Failed to dispose audio queue %@
Failed to start audio queue after a retry
Audio queue for audio recorder %@ has changed running state %i
Error: audio tap matcher: %@ asked to start recognition when it is already matching
startRecognition based upon deadline %@
No buffer received in tap completion - error %@
Tagging finish conditions: timeOut %d, oneAttempt: %d, foundMatch: %d, failed %d
Stopping recognition
Stopping recognition for matcher %@
<task: %{public}@ %@> Local subscription for <zone: %{public}@> does not exist, creating one now
<task: %{public}@ %@> <zone: %{public}@> does not exist, so we are attempting to create one with a subscription
<task: %{public}@ %@> is scheduled
Requesting app clip metadata for url %@
Error requesting App Clip metadata %@
Requesting app clip for url %@
Error in requestClipWithCompletion %@ clipIsAvailable %i
App clip request was successful
Unable to unarchive notification payload data %@ with error %@
Received public token '%@' on connection %@
APS push received for topic: '%@'
Ignoring APS push message, not a CloudKit update
iCloud account has changed, updating current user account id
Failed to complete modify operation. Error %@
Service %@ stopping after final worker %@ finished
Service %@ started running %@
Starting watchdog timer for %f seconds
Stopping watchdog timer
Unable to load Application Support directory: %@
Parent directory of persistent store url doesn't exist, creating one now
Failed to create persistent store directory: %@
Persistent store url missing, fallback to in memory store type
iCloud account is available
No iCloud account available
iCloud account is restricted
iCloud account is temporarily unavailable
Failed to retrieve iCloud account information with error %@
Deallocating recording service
Starting recording
Failed to start recorder %@ with error: %@
Stopping recording for reason %lu
Stopping recorder: %@
Failed to stop recorder with error: %@
Stopped recording for reason %lu
Detached tap: %@ taps remaining: %@
Internal audio source support: %d alternative output source to built-in speaker is available: %d other audio playing %d
Marking the internal audio source as preferred
Marking the external audio source as preferred
Sync started with startCondition: %{public}@
Failed to complete <task: %{public}@ %@> and not retrying due to <error: %@>
Finished <task: %{public}@ %@> and sync complete
Finished <task: %{public}@ %@>, still syncing
Client called Library completion with success = %d for <task: %{public}@ %@>
Error finishing transaction for <task: %{public}@ %@> %@
Finished handling transaction for <task: %{public}@ %@>
Uploaded %lu modified tracks
Uploaded %lu modified groups
Deleted %lu items
Fetched %lu tracks
Fetched %lu groups
Fetched %lu deleted items
Current local cache requires migration
Successfully migrated local cache
Failed to migrate current local cache %@
Received notification response %@ for request %@ with content %@
No webURL provided for payload %@
Presenting media item with web url %@
Presented media item with error %@
Using <token: %@> for database fetch
<zone: %@> does not exist locally, saving now
<zone: %@> was deleted
<zone: %@> was purged
Updated database <token: %@>
Failed to fetch changes for record (%@)
Updated <zone: %{public}@> token: %@>
<zone: %{public}@> token has expired. Removing saved token
Using <zone changes configuration: %@> for fetch
Failed to schedule <task: %{public}@ %@> pre-conditions were not satisifed
Deallocating audio session manager
Registering audio session observers
Unregistering audio session observers
Activating audio session
Failed to activate AVAudioSession: %@
configureAudioSessionForStandardClient
Failed to set category on AVAudioSession: %@
Failed to set mode: %@
Failed to enable haptics while recording: %@
Failed to decouple IO AVAudioSession: %@
configureAudioSessionForAssistantService
Deactivating audio session
Failed to deactivate AVAudioSession: %@
Audio interruption started
Audio interruption ended
Received media services were lost notification
Received media services were reset notification - restarting recognition
handleAudioSessionRouteChange: %@
Failed to complete zone operation. Error %@
Watchdog timer fired
Retrying <task: %{public}@ %@> after %f seconds <error: %@>
Retrying <task: %{public}@ %@> immediately <error: %@>
Unable to fetch matcher - it is likely some required entitlements are missing
Missing or invalid host %@
Missing or invalid match endpoint %@
Fetching endpoint with storefront %@
<task: %{public}@ %@> <zone: %{public}@> does not exist locally, so we are creating one
setActive:error:
remoteObjectProxyWithErrorHandler:
initWithFetchRequest:
processInfo
minusSet:
lyricsLines
encodedData
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
setRecordIDsToDelete:
isEntitledForExternalAudioRecording
countByEnumeratingWithState:objects:count:
string
allocWithZone:
setActive:withOptions:error:
productName
setFormatOptions:
defaultManager
audioStartDate
removeAllObjects
setTrack:
setRecordWasChangedBlock:
isEntitledForInternalAudioRecording
initWithHost:URLPath:
stringByAppendingPathComponent:
openURL:configuration:completionHandler:
amsBag
isEntitledForInternalClient
stringByReplacingOccurrencesOfString:withString:
setRecordWithIDWasDeletedBlock:
setFrameLength:
libraryItem
setAllowHapticsAndSystemSoundsDuringRecording:error:
progressWithTotalUnitCount:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
andPredicateWithSubpredicates:
openWithURL:configuration:completionHandler:
tokenForClientIdentifier:
encryptedValuesByKey
code
fetchRequestWithEntityName:
setRecordZoneChangeTokensUpdatedBlock:
setFrontBoardOptions:
sampleRate
topic
annotateClientError:code:underlyingError:
stringByTrimmingCharactersInSet:
setApplicationBundleIdentifierOverrideForTCC:
lyricsText
setType:
initForReadingFromData:error:
URLByAppendingPathComponent:
initWithIdentifier:bundleID:context:
setGroup:
removeItemAtPath:error:
setRecordZoneFetchCompletionBlock:
endpointsWithCompletion:
isEntitledForMicrophone
annotateError:withError:
save:
defaultSessionConfiguration
totalUnitCount
stringFromDate:
removeItemAtURL:error:
setURL:
stringWithFormat:
setRecordZoneIDs:
setArtworkURL:
defaultSound
mainBundle
removeObject:
options
setUserInfo:
initRequiringSecureCoding:
setHTTPBody:
appendString:
timeIntervalSinceNow
objectForKeyedSubscript:
setTotalUnitCount:
allValues
count
encodeSystemFieldsWithCoder:
defaultCenter
streamDescription
lyricsLineStartingBeforeTimeOffset:
setFetchRecordZoneChangesCompletionBlock:
setRecordZoneWithIDChangedBlock:
defaultValuesWithCompletion:
mainQueue
entity
setAttachments:
sortDescriptorWithKey:ascending:
querySignature
removeObjectAtIndex:
initStandardFormatWithSampleRate:channels:
setRecordZoneWithIDWasDeletedBlock:
base64EncodedStringWithOptions:
initWithKeyOptions:valueOptions:capacity:
setHTTPMethod:
raise:format:
defaultWorkspace
initWithStatus:encrypted:
allObjects
setRecognitionID:
UUIDString
temporaryDirectory
processIdentifier
objectForKey:
setFetchLimit:
encodeObject:forKey:
setTimeoutIntervalForRequest:
storefrontCountryCode:
hostForClientType:completion:
decodeObjectOfClasses:forKey:
userInfo
copyItemAtPath:toPath:error:
encodeInteger:forKey:
UUID
metrics
setQuantity:
objectForInfoDictionaryKey:
setFetchDatabaseChangesCompletionBlock:
encodeInt64:forKey:
decodeObjectOfClass:forKey:
setThreadIdentifier:
objectEnumerator
copy
signature
audioRecordingSource
lyricLineWithText:offset:
fetchUserRecordIDWithCompletionHandler:
entityForName:inManagedObjectContext:
setUsesPersistentHistoryTracking:
moveItemAtURL:toURL:error:
removeObjectForKey:
appleMusicSubscriptionStatus
valueForKeyPath:
initWithLatitude:longitude:
initWithEnvironmentName:namedDelegatePort:queue:
URLWithString:
decodeIntegerForKey:
addValue:forHTTPHeaderField:
setFetchAllChanges:
numberWithLongLong:
isCancelled
uppercaseString
eligibleAppleMusicOffers
sessionProxy
coordinate
URLWithSize:cropStyle:format:
decodeInt64ForKey:
lowercaseString
numberWithInteger:
hasRequiredEntitlements:
duration
enumerateKeysAndObjectsUsingBlock:
setProviderID:
hasPrefix:
URLRepresentation
decimalDigitCharacterSet
sessionDuration
mergeByPropertyStoreTrumpMergePolicy
numberWithDouble:
setExportedInterface:
setProtocolHandler:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
URLForResource:withExtension:
lookupURLPathForClientIdentifier:
privateCloudDatabase
initWithDomain:code:userInfo:
hasHitDeadline
outputs
setAudioRecordingSource:
setIdentityToken:
setRecordZoneWithIDWasPurgedBlock:
sortUsingComparator:
setValue:forKey:
fileExistsAtPath:
creationDate
appleMusicURL
isEqualToString:
setAutomaticallyRetryNetworkFailures:
removeObserver:
setIncludesPendingChanges:
rangeOfCharacterFromSet:
musicSubscriptionStatus
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
source
compare:
fileExistsAtPath:isDirectory:
initWithStreamDescription:
setBody:
setWaitsForConnectivity:
setExpirationDate:
downloadTaskWithURL:completionHandler:
resume
resultsLimit
previousServerChangeToken
addOperations:waitUntilFinished:
URLForDirectory:inDomain:appropriateForURL:create:error:
numberWithBool:
setPreviousServerChangeToken:
initWithDictionary:
deadline
longLongValue
setExpectedSendSize:
setPredicate:
initWithRecordingIntermission:retrySeconds:match:signature:stillRunningAssociatedRequest:error:
mediaItems
doubleValue
URLByAppendingPathExtension:
invertedSet
updateToken:withValue:
setExpectedReceiveSize:
content
initWithContentsOfURL:
preferDecoupledIO:error:
setPersistentStoreDescriptions:
setSubscriptionsToSave:
URLByAppendingPathComponent:isDirectory:
invalidateAndCancel
dateWithTimeIntervalSinceNow:
domain
length
notificationType
predicateWithFormat:
mediaItemWithProperties:
addObserverForName:object:queue:usingBlock:
setDiscretionaryNetworkBehavior:
containsTokens
initWithRecordType:recordID:
result
containsString:
setPerRecordSaveBlock:
predicateWithBlock:
recordsToSave
dateFromString:
setSound:
addObserver:selector:name:object:
initWithRecordName:zoneID:
setDiscretionary:
changeType
setObject:forKeyedSubscript:
notificationFromRemoteNotificationDictionary:
containsObject:
dateByAddingTimeInterval:
intersectSet:
setSortDescriptors:
initWithRecordID:action:
categoryWithIdentifier:actions:intentIdentifiers:options:
addObjectsFromArray:
laterDate:
audioBufferList
setObject:forKey:
containsMediaItemWithFuzzyTolerance:
JSONObjectWithData:options:error:
precomposedStringWithCanonicalMapping
localizedUserNotificationStringForKey:arguments:
setShouldSuppressDefaultAction:
stopCondition
addObject:
response
lastPathComponent
recordingIntermission
setNotificationInfo:
executeRequest:withContext:error:
containsLibraryItem:
addNotificationRequest:withCompletionHandler:
setShouldSendContentAvailable:
insertNewObjectForEntityForName:inManagedObjectContext:
setNotificationCategories:
initWithConnection:
setShouldMigrateStoreAutomatically:
containingAppBundleIdentifier
portType
attachmentWithIdentifier:URL:options:error:
dataWithJSONObject:options:error:
setName:
setShouldInferMappingModelAutomatically:
setDatabase:
discoverabilitySignal
initWithPCMFormat:frameCapacity:
populateRemoteConfiguration
setData:
executeFetchRequest:error:
status
setModifySubscriptionsCompletionBlock:
addFinishBlock:
dataWithContentsOfFile:
setShouldIgnoreDowntime:
initWithZoneName:ownerName:
localizedDescription
recordZonesToSave
containerWithIdentifier:
keyEnumerator
setModifyRecordsCompletionBlock:
dataUsingEncoding:
notification
setShouldIgnoreDoNotDisturb:
initWithZoneID:subscriptionID:
setModifyRecordZonesCompletionBlock:
addDependency:
exceptionWithName:reason:userInfo:
requiresAttributionForBundleIdentifier:
persistentStoreDescriptions
dictionaryWithObjects:forKeys:count:
noMatchWithRecordingIntermission:retrySeconds:signature:
dataTaskPromiseWithRequest:
setShouldHideDate:
campaignTokenWithCompletion:
unsignedIntegerValue
initWithZoneID:
addChild:withPendingUnitCount:
dictionaryWithDictionary:
containerIdentifier
initWithClientIdentifier:bag:
recordZoneIDsToDelete
requestWithURL:
nextObject
initWithName:managedObjectModel:
setMode:error:
ascending
removeObserver:name:object:
setInterruptionHandler:
setRecordZonesToSave:
webURL
rangeOfString:options:
completedUnitCount
subscriptionID
setRecordsToSave:
initWithString:
setShouldBackgroundDefaultAction:
setMergePolicy:
addChanges:
nextLine
startTime
requestWithIdentifier:content:trigger:
dataRepresentation
dictionaryWithCapacity:
cStringUsingEncoding:
unlock
persistentStoreCoordinator
recordZoneIDs
sharedSession
loadPersistentStoresWithCompletionHandler:
setShouldAuthenticateDefaultAction:
globallyUniqueString
requestMetadataWithCompletion:
dictionary
unionSet:
setShazamURL:
setCreationDate:
requestClipWithCompletion:
setMaxConcurrentOperationCount:
initWithURL:
recordType
artworkSize
sendNotifications
supportsDeviceToDeviceEncryption
requestByEncodingRequest:parameters:
zoneName
setConfigurationsByRecordZoneID:
recordName
matchWithRecordingIntermission:retrySeconds:match:
errorWithDomain:code:userInfo:
suggestedLanguage
setLongitude:
newBackgroundContext
artist
accountStatusWithCompletionHandler:
zoneID
ubiquityIdentityToken
matchURLPathForClientIdentifier:
initWithAudioTimeStamp:sampleRate:
errorWithCode:underlyingError:keyOverrides:
initWithMediaItems:forSignature:
matchStreamingBuffer:atTime:
initWithTokenService:bag:
recordIDsToDelete
firstObject
arrayWithObjects:count:
accountStatus
bundleForClass:
initWithMatchedMediaItemDictionary:syncedLyrics:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
initWithTokenService:
substringToIndex:
setLaunchReason:
sh_isCoreMatchAttemptCancelledError
performFetch:
setCompletedUnitCount:
currentRunLoop
arrayWithCapacity:
setLatitude:
setSavePolicy:
initWithMachServiceName:
substringFromIndex:
parseWithError:
setWantsNotificationResponsesDelivered
initWithLibraryItem:changeType:indexPath:
fileURLWithPath:
setInvalidationHandler:
subscriptionIDsToDelete
setRelationshipKeyPathsForPrefetching:
standardUserDefaults
setWithArray:
whitespaceAndNewlineCharacterSet
isFinished
filterOptions
setRemoteObjectInterface:
path
setWithObjects:
setCategory:withOptions:error:
match
initWithTTMLData:
filteredArrayUsingPredicate:
subscriptionsToSave
isKindOfEntity:
finishDecoding
mutableCopy
sendEvent:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:options:error:
setCategoryIdentifier:
errorResponseForSignature:error:
initWithLyricsStartDate:lines:songwriters:
deleteObject:
sendEvent:withPayload:
setLabels:
setReturnsObjectsAsFaults:
set_rawResponseSongs:
array
recordID
accountInfoWithCompletionHandler:
currentRoute
performBlockAndWait:
dealloc
init
initWithConnection:exportedInterface:remoteInterface:
exportedObject
setExportedObject:
remoteObject
serviceStateHandler
setServiceStateHandler:
connection
.cxx_destruct
_remoteObject
_serviceStateHandler
_connection
T@"NSXPCConnection",R,N,V_connection
T@,R,N,V_remoteObject
T@,&,N
T@"<SHServiceDelegate>",&,N,V_serviceStateHandler
start
buildListeners
buildListenerForMachService:
listeners
apsConnection
_listeners
_apsConnection
T@"NSArray",R,N,V_listeners
T@"SHAPSConnection",R,N,V_apsConnection
availableServices
buildListener
handleForConnection:withAttribution:
initWithService:
eventsServiceHandleForConnection:withAttribution:
shazamKitServiceHandleForConnection:withAttribution:
uiServiceHandlerForConnection:withAttribution:
machServiceName
_machServiceName
T@"NSString",R,C,N,V_machServiceName
stop
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
initWithServiceProvider:listener:
listen
connectionHandles
listener
serviceProvider
lock
setLock:
_lock
_connectionHandles
_listener
_serviceProvider
T@"NSMutableArray",R,N,V_connectionHandles
T@"NSXPCListener",R,N,V_listener
T@"<SHServiceProvider>",R,N,V_serviceProvider
T{os_unfair_lock_s=I},N,V_lock
initWithShazamItemDictionary:
shazamID
shazamURL
title
artistName
matchOffset
speedSkew
frequencySkew
songRelationIDs
shazamItemDictionary
setShazamItemDictionary:
_shazamItemDictionary
T@"NSDictionary",&,N,V_shazamItemDictionary
T@"NSNumber",R,N
initWithShazamDictionary:
itemForIdentifier:
shazamDictionary
setShazamDictionary:
_shazamDictionary
T@"NSDictionary",&,N,V_shazamDictionary
timeRequiredToPerformWork
workerDelegate
setWorkerDelegate:
isRunning
managesRecordingSession
T@"<SHWorkerDelegate>",W,N
initWithAttribution:
updateSnapshotWithAttribution:
activeControllers
_workerDelegate
_activeControllers
T@"NSMapTable",R,N,V_activeControllers
T@"SHAttribution",R,N,V_attribution
T@"NSRecursiveLock",R,N,V_lock
T@"<SHWorkerDelegate>",W,N,V_workerDelegate
sh_setDefaultValuesWithCompletion:
sh_setCampaignTokenForClientIdentifier:completion:
defaultRecordingIntermissionInSeconds
setDefaultRecordingIntermissionInSeconds:
campaignToken
setCampaignToken:
_defaultRecordingIntermissionInSeconds
_campaignToken
Td,N,V_defaultRecordingIntermissionInSeconds
T@"NSString",C,N,V_campaignToken
initWithCatalog:
initWithCatalog:recognitionRequester:
iso8601Formatter
responseForServerData:signature:
matchSignature:tokenizedURL:
partnerURLRequestForSignature:endpoint:
buildURLForSignature:endpoint:
catalog
setCatalog:
setNetworkRequester:
matcherRequest
setMatcherRequest:
_iso8601Formatter
_catalog
_matcherRequest
T@"SHShazamKitServerCatalog",&,N,V_catalog
T@"<SHNetworkRecognitionRequester>",&,N,V_networkRequester
T@"NSISO8601DateFormatter",R,N,V_iso8601Formatter
T@"SHMatcherRequest",&,N,V_matcherRequest
matchResultNotificationCenter
initWithRequest:
request
_request
T@"SHMatcherRequest",R,N,V_request
matcherResponseFromServerData:signature:context:
mediaItemFromResourcesResponse:shazamID:signatureStartDate:campaignToken:
sharedInstance
audioSessionManager:interruptionBeganWithOptions:
audioSessionManager:interruptionEndedWithOptions:
mediaServicesWereReset
audioRecordingManager:willAttachTap:
audioRecordingManager:didDetachTap:
audioRecordingManagerWillStartRecording:
audioRecordingManagerDidStopRecording:
audioRecordingManager:failedToStartRecorders:
recorder:shouldProcessAudioBuffer:atTime:
initWithAudioSessionManager:audioRecordingManager:
audioSessionManager
activeAssistantServiceTaps
setActiveAssistantServiceTaps:
_audioSessionManager
_activeAssistantServiceTaps
Tq,V_activeAssistantServiceTaps
T@"SHAudioRecordingManager",R,N,V_audioRecordingManager
T@"SHAudioSessionManager",R,N,V_audioSessionManager
mediaItemsFromServerData:context:error:
mediaItemFromResourcesResponse:shazamID:campaignToken:
mediaDictionaryFromResourcesResponse:shazamID:campaignToken:
initWithSubscription:
subscription
_subscription
T@"CKSubscription",R,N,V_subscription
initWithResourcesDictionary:
songsResponse
shazamResponse
lyricsResponse
musicVideoResponse
resourcesDictionary
setResourcesDictionary:
_resourcesDictionary
T@"NSDictionary",&,N,V_resourcesDictionary
T@"SHServerSongsResponse",R,N
T@"SHServerShazamResponse",R,N
T@"SHServerLyricsResponse",R,N
T@"SHServerMusicVideoResponse",R,N
performRequest:withReply:
invalidate
initWithClientIdentifier:clientType:
handleResult:callback:error:
isTokenFailureError:
sessionConfiguration
encoder
clientIdentifier
setClientIdentifier:
setClientType:
_encoder
_clientIdentifier
_session
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_clientType
T@"AMSURLSession",&,N,V_session
T@"AMSMediaRequestEncoder",R,N,V_encoder
setUserNotificationCenter:
userNotificationCenter
T@"UNUserNotificationCenter",&,N
canSendNotificationForMatch:
sendNotificationForMatch:
canSendNotificationForNoMatchSignatureID:
sendNotificationForNoMatch
sendAnalyticsEventForMatch:
sendMatchNotification:
currentMediaItem
setCurrentMediaItem:
currentSignatureID
setCurrentSignatureID:
contentDeliverer
_currentMediaItem
_currentSignatureID
_contentDeliverer
T@"SHMatchedMediaItem",&,N,V_currentMediaItem
T@"NSUUID",&,N,V_currentSignatureID
T@"<SHMatchResultNotificationContentDeliverer>",R,N,V_contentDeliverer
initWithRecordingSource:client:
open
close
completion
setCompletion:
recordingSource
client
isClosed
_isClosed
_completion
_recordingSource
_client
T@?,C,N,V_completion
Tq,R,N,V_recordingSource
Tq,R,N,V_client
TB,R,N,V_isClosed
deliverContentForNoMatchWithCompletion:
deliverContentForMatchedMediaItem:completion:
initWithContentProvider:
contentProvider
_contentProvider
T@"SHMatchResultUserNotificationContentProvider",R,N,V_contentProvider
loadContextForClientIdentifier:completion:
matcher:didProduceResponse:
session:didFindMatch:
session:didNotFindMatchForSignature:error:
session:shouldAttemptToMatchSignature:
session:didProduceResponse:
finishedSession:
initWithAudioTapMatchers:audioRecordingManager:
audioTapMatchers
audioRecordingManager
_audioTapMatchers
_audioRecordingManager
T@"NSArray",R,N,V_audioTapMatchers
T@"<SHAudioRecordingManager>",R,N,V_audioRecordingManager
T@"<SHMatcherDelegate>",W,N,Vdelegate
sharedContainer
T@"CKContainer",R,N
initWithAttribution:clientType:
initWithAttribution:clientType:URLBuilder:contextBuilder:networkRequester:
URLBuilder
contextBuilder
networkRequester
_isRunning
_URLBuilder
_contextBuilder
_networkRequester
T@"SHShazamKitServerURLBuilder",R,N,V_URLBuilder
T@"SHServerResponseContextBuilder",R,N,V_contextBuilder
T@"<SHNetworkRecognitionRequester>",R,N,V_networkRequester
TB,R,V_isRunning
notificationCategories
notificationContentForMediaItem:completionHandler:
notificationContentForNoMatch
initWithDataArray:
dataArray
setDataArray:
_dataArray
T@"NSArray",&,N,V_dataArray
simulatorRecorders
iOSAudioRecorders
watchOSAudioRecorders
tvOSAudioRecorders
macOSAudioRecorders
availableRecorders
initWithResultsDictionary:
shazamIDs
retrySeconds
recordingIntermissionSeconds
resultsDictionary
setResultsDictionary:
_resultsDictionary
T@"NSDictionary",&,N,V_resultsDictionary
Td,R,N
initWithAudioRecordingManager:entitlements:bundleIdentifier:
tapForSource:
isEntitledForSource:
T@"NSString",R,C,N,V_bundleIdentifier
_initWithInstallationID:
validateClientIdentifier:
initWithClientIdentifier:clientType:installationID:
loadConfiguration:
loadContext:
_createMatcher
installationID
setURLBuilder:
setContextBuilder:
_installationID
T@"SHShazamKitServerURLBuilder",&,N,V_URLBuilder
T@"SHServerResponseContextBuilder",&,N,V_contextBuilder
T@"NSString",R,C,N,V_installationID
T@"NSString",R,C,N,V_clientIdentifier
downloadImageURL:completionHandler:
currentCache
setCurrentCache:
_currentCache
T@"<SHLLibraryCache>",&,N,V_currentCache
initWithOperation:
operation
privateOperation
setPrivateOperation:
_privateOperation
T@"CKDatabaseOperation",&,N,V_privateOperation
T@"CKDatabaseOperation",R,N
initWithMusicVideoItemDictionary:
musicVideoItemDictionary
setMusicVideoItemDictionary:
_musicVideoItemDictionary
T@"NSDictionary",&,N,V_musicVideoItemDictionary
initWithMusicVideoDictionary:
musicVideoDictionary
setMusicVideoDictionary:
_musicVideoDictionary
T@"NSDictionary",&,N,V_musicVideoDictionary
initializeGlobalServiceState
workerUpdated:withRunningState:
startRecognitionForRequest:
T@"<SHMatcherDelegate>",W,N
_synchronizeSnapshot:startCondition:
T@"<SHMediaLibrarySyncDelegate>",W,N
_libraryInfoWithCompletionHandler:
_queryLibraryWithParameters:completionHandler:
mediaItemForShazamID:completionHandler:
sendEventSignal:
startRecognitionForRequest:completionHandler:
synchronizeSnapshot:startCondition:completionHandler:
initWithEntitlements:attribution:
isEntitledForLibrarySPI
isCurrentBundleIdentifierValid
clientType
workers
matcherController
notificationScheduler
librarySyncManager
libraryQueryManager
mediaItemFetcher
eventSignalScheduler
entitlements
setEntitlements:
serviceDelegate
setServiceDelegate:
attribution
setAttribution:
_entitlements
_serviceDelegate
_matcherController
_notificationScheduler
_librarySyncManager
_libraryQueryManager
_mediaItemFetcher
_eventSignalScheduler
_attribution
T@"SHEntitlements",&,N,V_entitlements
T@"SHAttribution",&,N,V_attribution
T@"SHMatcherController",R,N,V_matcherController
T@"SHMatchResultNotificationScheduler",R,N,V_notificationScheduler
T@"SHMediaLibrarySyncManager",R,N,V_librarySyncManager
T@"SHMediaLibraryQueryManager",R,N,V_libraryQueryManager
T@"SHMediaItemFetcher",R,N,V_mediaItemFetcher
T@"SHEventSignalScheduler",R,N,V_eventSignalScheduler
T@"<SHShazamKitClient>",W,N,V_delegate
setIsRunning:
initWithType:scope:callingProcessIdentifier:sessionIdentifier:
sessionType
sessionScope
callingProcessIdentifier
sessionIdentifier
_sessionType
_sessionScope
_callingProcessIdentifier
_sessionIdentifier
Tq,R,N,V_sessionType
Tq,R,N,V_sessionScope
T@"NSString",R,C,N,V_callingProcessIdentifier
T@"NSUUID",R,C,N,V_sessionIdentifier
tracksToAdd
tracksToDelete
groupsToAdd
groupsToDelete
trackIDsToDelete
groupIDsToDelete
addTracks:
deleteTracks:
addGroups:
deleteGroups:
mergeChangeset:
trackSetToAdd
setTrackSetToAdd:
trackSetToDelete
setTrackSetToDelete:
groupSetToAdd
setGroupSetToAdd:
groupSetToDelete
setGroupSetToDelete:
_trackSetToAdd
_trackSetToDelete
_groupSetToAdd
_groupSetToDelete
T@"NSMutableSet",&,N,V_trackSetToAdd
T@"NSMutableSet",&,N,V_trackSetToDelete
T@"NSMutableSet",&,N,V_groupSetToAdd
T@"NSMutableSet",&,N,V_groupSetToDelete
initWithError:
initWithTasksToRetry:error:
_initWithTasksToRetry:error:
failedItemIdentifiers
tasksToRetry
_tasksToRetry
T@"NSError",R,N,V_error
T@"NSArray",R,N,V_tasksToRetry
initWithLyricsItemDictionary:
lyricLines
lyricsSnippet
staticLyrics
songwriters
parseTTMLFromLyricsItemDictionary:
snippetFromOffset:
songInfo
setSongInfo:
_songInfo
T@"MSVLyricsSongInfo",&,N,V_songInfo
initWithLyricsDictionary:
lyricsDictionary
setLyricsDictionary:
_lyricsDictionary
T@"NSDictionary",&,N,V_lyricsDictionary
providerID
name
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
initWithStoreType:
loadStoreWithType:
fetchLibraryItemsWithParameters:completionHandler:
fetchLibraryTracksWithParameters:
fetchAllUploadableTracksMissingLibrarySyncMetadata
fetchAllUploadableGroupsMissingLibrarySyncMetadata
fetchLibraryGroupsWithParameters:
persistUpdatedTracks:completionHandler:
updateReportForLibraryTrack:
persistLibraryGroups:completionHandler:
updateReportForLibraryGroups:
deleteItemsByIdentifiers:completionHandler:
deleteAllItemsWithFetchRequest:completionHandler:
deleteAllItems
deleteAllSyncMetadataItems
commitChangesWithError:
reset
fetchManagedObjectForRequest:withPredicate:context:
createMetadataWithData:track:group:context:
associateTrack:toGroupWithIdentifier:context:
updateManagedTrack:withUpdatedTrack:
tracksFetchedResultsController
groupsFetchedResultsController
libraryItemFromManagedObject:
libraryChangeTypeForFetchedResultsChangeType:
persistentContainer
setPersistentContainer:
managedObjectContext
setManagedObjectContext:
_tracksFetchedResultsController
_groupsFetchedResultsController
_persistentContainer
_managedObjectContext
T@"NSPersistentContainer",&,N,V_persistentContainer
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSFetchedResultsController",R,N,V_tracksFetchedResultsController
T@"NSFetchedResultsController",R,N,V_groupsFetchedResultsController
T@"<SHMediaLibraryDataStoreDelegate>",W,N,V_delegate
currentLibraryAccountHasChanged
libraryDataStore:didUpdateWithChange:
initWithBundleIdentifier:
initWithDataStore:remoteLibrary:accountListener:
commonInitWithDataStore:remoteLibrary:accountListener:
synchronizeWithContext:
synchronizeLocalSnapshot:
synchronizeRemoteSnapshot:startCondition:
_synchronizeRemoteSnapshot:startCondition:
unsyncedGroupChangeset
unsyncedTrackChangeset
shazamLibrarySyncStartConditionForMediaLibraryStartCondition:
beginLibrarySync
persistChangesAndCompleteSyncWithCompletionHandler:
handleLibraryError:failedItemIdentifiers:
resetDataIfNeededForSyncError:
mapInternalLibraryErrorToMediaLibrary:
remoteLibrary
setRemoteLibrary:
dataStore
setDataStore:
accountListener
setAccountListener:
currentSnapshot
setCurrentSnapshot:
currentContext
setCurrentContext:
syncGroup
setSyncGroup:
dispatchQueue
setDispatchQueue:
isSyncing
setSyncing:
syncID
setSyncID:
_syncing
_remoteLibrary
_dataStore
_accountListener
_currentSnapshot
_currentContext
_syncGroup
_dispatchQueue
_syncID
T@"SHLShazamLibrary",&,N,V_remoteLibrary
T@"SHMediaLibraryDataStore",&,N,V_dataStore
T@"SHMediaLibraryAccountListener",&,N,V_accountListener
T@"SHMediaLibrarySnapshot",&,N,V_currentSnapshot
T@"SHMediaLibraryContext",&,N,V_currentContext
T@"NSObject<OS_dispatch_group>",&,N,V_syncGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
syncing
TB,N,GisSyncing,V_syncing
T@"NSString",&,N,V_syncID
T@"<SHMediaLibrarySyncDelegate>",W,N,Vdelegate
identifierWithRecognitionIdentifier:shazamKey:
compoundIdentifierFromTrackIdentifier:
isTrackIdentifier:
shazamKeyFromTrackIdentifier:
recognitionIdentifierFromTrackIdentifier:
libraryItemIdentifier
hasValidRecognitionIdentifier
T@"NSString",R,N,V_recognitionIdentifier
T@"SHLShazamKey",R,N,V_shazamKey
evaluatePreconditionWithCompletion:
initWithContainer:
cloudContainer
setCloudContainer:
_cloudContainer
T@"SHLCloudBackedContainer",&,N,V_cloudContainer
registerBundleAttribution
powerlogCallingProcessBundleID:startDate:endDate:
startMediaSafetyNetExemption
stopMediaSafetyNetExemption
removeTracks:
type
progress
size
retryCount
setRetryCount:
syncStartCondition
setSyncStartCondition:
session
setSession:
T@"NSProgress",R,N
Tq,N
T@"NSString",N
T@"SHLSyncSession",W,N
fetchType
setFetchType:
_progress
_retryCount
_syncStartCondition
_fetchType
Tq,N,V_fetchType
T@"<SHLSyncSessionFetchTaskDelegate>",W,N,V_delegate
T@"NSProgress",R,N,V_progress
Tq,N,V_retryCount
T@"NSString",N,V_syncStartCondition
T@"SHLSyncSession",W,N,Vsession
defaultQueue
initOperationQueue
addOperation:
addOperation:waitUntilFinished:
cancelAllOperations
operationQueue
setOperationQueue:
tailOperation
setTailOperation:
_operationQueue
_tailOperation
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperation",W,N,V_tailOperation
initWithUpdatedTrack:localTrack:
updatedTrack
localTrack
_updatedTrack
_localTrack
T@"SHMediaLibraryTrack",R,N,V_updatedTrack
T@"SHTrackMO",R,N,V_localTrack
initWithUpdatedGroup:localGroup:
updatedGroup
localGroup
_updatedGroup
_localGroup
T@"SHMediaLibraryGroup",R,N,V_updatedGroup
T@"SHGroupMO",R,N,V_localGroup
locallyFoundTracks
missingFromLocalStoreTracks
locallyFoundGroups
missingFromLocalStoreGroups
_locallyFoundTracks
_missingFromLocalStoreTracks
_locallyFoundGroups
_missingFromLocalStoreGroups
T@"NSMutableArray",R,N,V_locallyFoundTracks
T@"NSMutableArray",R,N,V_missingFromLocalStoreTracks
T@"NSMutableArray",R,N,V_locallyFoundGroups
T@"NSMutableArray",R,N,V_missingFromLocalStoreGroups
errorWithCode:
errorWithCode:underlyingError:
errorWithUnderlyingError:
retrySecondsForError:
canRetryForError:
canRetryForPartialError:
errorCode:underlyingError:
userInfoForErrorCode:withUnderlyingError:
errorCodeForError:
localizedDescriptionForSyncError:
localizedFailureReasonForSyncError:
localizedRecoverySuggestionForSyncError:
copyWithZone:
initWithEncodedSystemData:
initWithMetadata:
validEncodedSystemData:
encodedSystemData
_encodedSystemData
T@"NSData",R,N,V_encodedSystemData
T@"NSDate",&,D,N
T@"NSString",&,D,N
T@"SHLShazamKey",&,D,N
T@"NSString",C,D,N
T@"CLLocation",&,D,N
initWithAudioTapProvider:
matcherForRequest:attribution:clientType:
audioTapProvider
_audioTapProvider
T@"SHAudioTapProvider",R,N,V_audioTapProvider
audioBufferFromData:byteSize:inFormat:
isAudioQueueRunning:
hasAudioQueueFailedWithStatus:annotateError:
initWithRecordingSource:
stopAudioQueueAndClearBuffersWithError:
startAudioQueueAfterRetrySecondsWithCompletion:
setRecordingSource:
audioQueue
setAudioQueue:
audioStreamBasicDescription
setAudioStreamBasicDescription:
audioRecorderDispatchQueue
setAudioRecorderDispatchQueue:
mBuffers
_audioQueue
_audioRecorderDispatchQueue
_audioStreamBasicDescription
Tq,N,V_recordingSource
T^{OpaqueAudioQueue=},N,V_audioQueue
T{AudioStreamBasicDescription=dIIIIIIII},N,V_audioStreamBasicDescription
T@"NSObject<OS_dispatch_queue>",&,N,V_audioRecorderDispatchQueue
T@"<SHAudioRecorderDelegate>",W,N,V_delegate
_initWithIdentifier:metadata:labels:
commonInitWithIdentifier:metadata:labels:
bundleName
labels
addLabel:
removeLabel:
initWithLibraryTrack:
isEqualTrack:
validProviderIdentifier
validProviderName
platformLabel
addPlatformLabel
initWithRecognitionIdentifier:shazamKey:
initWithRecognitionIdentifier:shazamKey:metadata:
_initWithRecognitionIdentifier:shazamKey:metadata:labels:
providerName
setProviderName:
providerIdentifier
setProviderIdentifier:
setDate:
recognitionIdentifier
setRecognitionIdentifier:
shazamKey
setShazamKey:
setTitle:
subtitle
setSubtitle:
location
setLocation:
associatedGroupIdentifier
setAssociatedGroupIdentifier:
compoundIdentifier
labelSet
setLabelSet:
_providerName
_providerIdentifier
_date
_recognitionIdentifier
_shazamKey
_title
_subtitle
_location
_associatedGroupIdentifier
_compoundIdentifier
_labelSet
T@"NSMutableSet",&,N,V_labelSet
T@"NSDate",&,N,V_date
T@"NSString",&,N,V_recognitionIdentifier
T@"SHLShazamKey",&,N,V_shazamKey
T@"NSString",C,N,V_title
T@"NSString",C,N,V_subtitle
T@"CLLocation",&,N,V_location
T@"NSString",&,N,V_associatedGroupIdentifier
T@"NSString",&,N,V_providerIdentifier
T@"NSString",&,N,V_providerName
T@"NSSet",R,N
T@"SHLLibraryTrackCompoundIdentifier",R,N,V_compoundIdentifier
initWithOriginalTask:savedGroups:savedTracks:deletedIDs:error:
recoverableTasks
recoverTaskFromPartialError
recoverTaskFromLimitExceededError
originalTask
setOriginalTask:
savedGroups
setSavedGroups:
savedTracks
setSavedTracks:
deletedIDs
setDeletedIDs:
_originalTask
_savedGroups
_savedTracks
_deletedIDs
T@"SHLSyncSessionModifyTask",&,N,V_originalTask
T@"NSArray",&,N,V_savedGroups
T@"NSArray",&,N,V_savedTracks
T@"NSArray",&,N,V_deletedIDs
initWithAudioTap:audioRecordingManager:catalog:
responseSignatureForRequest:
finishSessionConditionsMetForRequest:response:
_stop
audioTap
_audioTap
T@"SHAudioTap",R,N,V_audioTap
T@"SHSession",R,N,V_session
initWithConfiguration:
preconditions
T@"NSArray",R,N
scheduleFetchTask:
fetchTaskTransformer
setFetchTaskTransformer:
subscriptionTaskTransformer
setSubscriptionTaskTransformer:
_fetchTaskTransformer
_subscriptionTaskTransformer
T@"SHLCloudFetchTaskTransformer",&,N,V_fetchTaskTransformer
T@"SHLCloudSubscriptionTransformer",&,N,V_subscriptionTaskTransformer
requestAppClipForURL:withCompletionHandler:
payloadFromNotificationContentUserInfo:
userInfoPayloadForMediaItem:bundleIdentifier:
notificationFromLegacyUserInfoFormat:
mediaItem
setMediaItem:
bundleIdentifier
setBundleIdentifier:
_mediaItem
_bundleIdentifier
T@"SHMediaItem",&,N,V_mediaItem
T@"NSString",C,N,V_bundleIdentifier
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
_libraryWillBeginSync:
_library:didChangeWithSnapshot:
_library:didProduceError:failedItemIdentifiers:
_libraryDidCompleteSync:
registerForPushNotifications
apsEnvironment
libraryController
connectionQueue
setConnectionQueue:
_apsEnvironment
_libraryController
_connectionQueue
T@"APSConnection",R,N,V_connection
T@"NSString",R,C,N,V_apsEnvironment
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"SHMediaLibraryController",R,N,V_libraryController
fetchLibraryInfoWithCompletionHandler:
libraryStatusForAccountStatus:
observeAccountChangedNotification
updateAccountInfo
fetchAccountInfoWithCompletionHandler:
updateUserRecordWithAccountInfo:completion:
fetchUserRecordIDWithCompletion:
currentUserID
setCurrentUserID:
T@"NSString",C,N
T@"<SHMediaLibraryAccountListenerDelegate>",W,N,V_delegate
initWithScope:
cloudBackedContainer
scope
setScope:
_scope
Tq,N,V_scope
modifyTaskScheduler
fetchTaskScheduler
createTransaction
T@"<SHLModifyTaskScheduler>",R,N
T@"<SHLFetchTaskScheduler>",R,N
cloudBackedOperationFromModifyTask:container:
recordsToSaveFromModifyTask:container:
recordIDsToDeleteFromModifyTask:
modifyRecordsOperation
setModifyRecordsOperation:
_modifyRecordsOperation
T@"CKModifyRecordsOperation",&,N,V_modifyRecordsOperation
initWithInsertions:deletions:
differenceOfBatch:
subdivideIntoBatchesOfSize:
hasChanges
numberOfItems
insertions
deletions
_insertions
_deletions
T@"NSSet",R,N,V_insertions
T@"NSSet",R,N,V_deletions
changes
TB,R,N,GhasChanges
sharedContext
T@"SHLCloudContext",R,N
defaultContainer
manateeContainer
debugContainer
shazamLibraryZone
containerWithScope:
_defaultContainer
_manateeContainer
_debugContainer
_shazamLibraryZone
T@"CKContainer",R,N,V_debugContainer
T@"CKContainer",R,N,V_defaultContainer
T@"CKContainer",R,N,V_manateeContainer
T@"CKRecordZone",R,N,V_shazamLibraryZone
service:updatedWorker:
startWatchdogTimerForInterval:firedCompletion:
stopWatchdogTimer
watchdogTimer
startManagedRecordingDate
setStartManagedRecordingDate:
_watchdogTimer
_startManagedRecordingDate
T@"NSDate",&,N,V_startManagedRecordingDate
T@"SHWatchdogTimer",R,N,V_watchdogTimer
zoneTransformer
setZoneTransformer:
cache
setCache:
containerTransformer
setContainerTransformer:
_zoneTransformer
_cache
_containerTransformer
T@"SHLCloudContainerTransformer",&,N,V_containerTransformer
T@"SHLCloudModifyZoneTransformer",&,N,V_zoneTransformer
T@"SHLCloudLibraryCache",&,N,V_cache
libraryGroupFromCloudBackedItem:
cloudBackedItemFromLibraryGroup:
baseCloudRecordFromGroup:
initWithErrorDictionary:
errorCodeForResponseCode:
errorDictionary
setErrorDictionary:
_errorDictionary
T@"NSDictionary",&,N,V_errorDictionary
T@"NSError",R,N
initWithZone:
_zone
T@"CKRecordZone",R,N,V_zone
setLibraryController:
cloudBackedOperationForZones:container:
newSubscriptionForZoneID:
configuration
modifySubscriptionsOperation
setModifySubscriptionsOperation:
_configuration
_modifySubscriptionsOperation
T@"SHLSyncSessionConfiguration",R,N,V_configuration
T@"CKModifySubscriptionsOperation",&,N,V_modifySubscriptionsOperation
evaluatePreconditions:withCompletion:
initWithContainer:usingEncryption:
container
isEncrypted
_encrypted
_container
T@"CKContainer",R,N,V_container
encrypted
TB,R,N,GisEncrypted,V_encrypted
managedObjectModelURL
applicationSupportDirectory
persistentStoreURL
persistentStoreDescriptionForStoreType:
storeTask:ofType:error:
removeTaskOfType:forIdentifier:error:
removeAllTasksOfType:
tasksOfType:
taskOfType:identifier:
migrateWithError:
resetWithError:
needsMigration
startTransactionWithError:
undoTransactionWithError:
commitTransactionWithError:
initWithCallingProcessIdentifier:containerIdentifier:transactionIdentifier:
tasksForFolderPath:ofType:
taskForFilePath:
storeZoneIdentifier:error:
removeZoneIdentifier:error:
zoneExistsForIdentifier:
storeDatabaseToken:error:
storeZoneToken:forZoneIdentifier:error:
writeToken:toPath:error:
removeDatabaseTokenWithError:
removeTokenForZoneIdentifier:error:
removeTokenAtPath:error:
databaseToken
zoneTokenForZoneIdentifier:
storeSubscription:forZoneIdentifier:error:
removeSubscriptionForZoneIdentifier:error:
subscriptionExistsForZoneIdentifier:
doesLegacyCacheDirectoryExist
createBundleDirectory
doesCacheDirectoryExist
doesZoneFolderPathExist
createZoneFolderPath
doesTaskFolderPathsExist
createTaskFolderPaths
doesPrivateDatabaseFolderPathExist
createPrivateDatabaseFolderPathWithError:
legacyCacheDirectory
rootDirectory
bundleDirectory
cacheDirectory
currentDatabaseFolderPath
privateDatabaseFolderPath
privateDatabaseTransactionPath
zonesFolderPath
inflightFolderPath
failedFolderPath
zonePathForIdentifier:
inflightTaskPathForIdentifier:
failedTaskPathForIdentifier:
processID
containerID
transactionID
_processID
_containerID
_transactionID
T@"NSString",R,C,N,V_processID
T@"NSString",R,C,N,V_containerID
T@"NSUUID",R,C,N,V_transactionID
initWithRecord:
record
_record
T@"CKRecord",R,N,V_record
isAlternativeOutputToBuiltInSpeakerAvailable
isOtherAudioPlaying
audioSession
setAudioSession:
_audioSession
T@"AVAudioSession",&,N,V_audioSession
recorder:producedAudioBuffer:atTime:
attachTap:
detachTap:
startRecording
stopRecordingForReason:
suggestedAudioRecordingSource
recorders
initWithRecorders:
isAudioSourceSupported:
activeTaps
startRecognitionGroup
audioEnvironment
setAudioEnvironment:
_recorders
_activeTaps
_startRecognitionGroup
_audioEnvironment
T@"NSMutableArray",R,N,V_activeTaps
T@"NSObject<OS_dispatch_group>",R,N,V_startRecognitionGroup
T@"SHAudioEnvironment",&,N,V_audioEnvironment
T@"NSRecursiveLock",&,N,V_lock
T@"<SHAudioRecordingManagerDelegate>",W,N,V_delegate
T@"NSArray",R,N,V_recorders
initWithName:
isEqualLabel:
_name
T@"NSString",R,N,V_name
fulfilledResult
failedResult
resultWithError:
initWithResult:error:
isSatisfied
_satisfied
satisfied
TB,R,N,GisSatisfied,V_satisfied
libraryTrackFromCloudBackedItem:usingEncryption:
cloudBackedItemFromLibraryTrack:usingEncryption:
baseCloudRecordFromTrack:usingEncryption:
libraryWillBeginSync:
library:didProduceError:withFailedItemIdentifiers:syncAction:
library:didCompleteSyncWithCompletionHandler:
library:didChangeTracks:syncAction:
library:didChangeGroups:syncAction:
library:didDeleteItemsWithIdentifiers:syncAction:
defaultLibrary
session:task:didProduceOutcome:
session:task:didModifyTracks:
session:task:didModifyGroups:
session:task:didDeleteItemsWithIdentifiers:
session:task:didFetchTracks:
session:task:didFetchGroups:
session:task:didFetchDeletedItemsWithIdentifiers:
T@"SHLShazamLibrary",R,N
initWithCallingProcessIdentifier:
initWithScope:callingProcessIdentifier:
synchronizeWithStartCondition:
synchronizeChanges:startCondition:
clearCachedSyncStatus
finishSession:
newModifyTaskWithChanges:startCondition:
newFetchTaskWithStartCondition:
taskWithFailedItemsAndCurrentChanges:
isValidCallingProcessIdentifier:
migrateCacheIfNeeded
updateProgressWithTask:
syncActionForTaskType:
retryFailedTasks:
syncProgress
setSyncProgress:
setConfiguration:
syncSession
setSyncSession:
store
setStore:
retryHandler
setRetryHandler:
shouldPerformFetch
setShouldPerformFetch:
_shouldPerformFetch
_syncProgress
_syncSession
_store
_retryHandler
T@"NSProgress",&,N,V_syncProgress
T@"SHLSyncSessionConfiguration",&,N,V_configuration
T@"SHLSyncSession",&,N,V_syncSession
T@"SHLLibraryStore",&,N,V_store
T@"SHLFailedTaskRetryHandler",&,N,V_retryHandler
TB,N,V_shouldPerformFetch
T@"<SHLShazamLibraryDelegate>",W,N,V_delegate
initWithSongItemDictionary:
appleMusicID
artworkURL
appleMusicURLString
genreNames
releaseDate
isExplicitContent
albumName
isrc
lyricsRelationIDs
musicVideoRelationIDs
extractIDsFromRelation:
artworkURLFromDictionary:
targetArtworkImageSizeFromOriginalSize:
songItemDictionary
setSongItemDictionary:
_songItemDictionary
T@"NSDictionary",&,N,V_songItemDictionary
T@"NSString",R,C,N
T@"NSURL",R,N
T@"NSDate",R,N
TB,R,N
T@"NSArray",R,C,N
initWithSongsDictionary:
itemForIdentifiers:
songsDictionary
_songsDictionary
T@"NSDictionary",R,N,V_songsDictionary
date
tracks
trackFetchedResultsControllerWithContext:
groupFetchedResultsControllerWithContext:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
mediaItemPresenter
setMediaItemPresenter:
_mediaItemPresenter
T@"SHMediaItemPresenter",&,N,V_mediaItemPresenter
cloudBackedDatabaseChangesOperationFromFetchTask:container:completion:
cloudBackedZoneChangesOperationFromFetchTask:forChangedZones:container:
recordIDsFromCloudBackedZones:
configurationsByRecordZoneIDUsingCache:
databaseChangesOperation
setDatabaseChangesOperation:
recordZoneChangesOperation
setRecordZoneChangesOperation:
_databaseChangesOperation
_recordZoneChangesOperation
T@"CKFetchDatabaseChangesOperation",&,N,V_databaseChangesOperation
T@"CKFetchRecordZoneChangesOperation",&,N,V_recordZoneChangesOperation
shazamLibraryTrackFromLibraryTrack:
libraryTrackFromShazamLibraryTrack:
shazamLibraryGroupFromLibraryGroup:
libraryGroupFromShazamLibraryGroup:
libraryTrackFromManagedTrack:
libraryGroupFromManagedGroup:
executeTask:
executeModifyTask:
executeFetchTask:
schedulerFactory
setSchedulerFactory:
transaction
setTransaction:
sessionDispatchQueue
setSessionDispatchQueue:
_schedulerFactory
_transaction
_sessionDispatchQueue
T@"SHLTaskSchedulerFactory",&,N,V_schedulerFactory
T@"<SHLLocalStateTransactionable>",&,N,V_transaction
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionDispatchQueue
T@"<SHLSyncSessionDelegate>",W,N,V_delegate
deliverContentForMatchedMediaItem:imageData:completion:
initWithToken:
serverChangeToken
_serverChangeToken
T@"CKServerChangeToken",R,N,V_serverChangeToken
handleAudioSessionInterruption:
handleAudioSessionRouteChange:
handleMediaServicesWereLost:
handleMediaServicesWereReset:
registerAudioSessionObservers
unregisterAudioSessionObservers
activateAudioSessionForClient:
configureAudioSessionForStandardClient:
configureAudioSessionForAssistantService:
deactivateAudioSession
isAudioSessionInterrupted
setIsAudioSessionInterrupted:
audioManagerDispatchQueue
setAudioManagerDispatchQueue:
_isAudioSessionInterrupted
_audioManagerDispatchQueue
TB,N,V_isAudioSessionInterrupted
T@"NSObject<OS_dispatch_queue>",&,N,V_audioManagerDispatchQueue
T@"<SHAudioSessionManagerDelegate>",W,N,V_delegate
cloudBackedOperationForZonesToSave:container:
recordZonesFromCloudBackedZones:
modifyRecordZonesOperation
setModifyRecordZonesOperation:
_modifyRecordZonesOperation
T@"CKModifyRecordZonesOperation",&,N,V_modifyRecordZonesOperation
watchdogTimerSource
_watchdogTimerSource
T@"NSObject<OS_dispatch_source>",R,N,V_watchdogTimerSource
presentMediaItem:completionHandler:
shouldStartWorker:
T@"SHMediaItemPresenter",R,N,V_mediaItemPresenter
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithIdentifier:
initWithIdentifier:metadata:
identifier
metadata
T@"NSString",R,N
T@"SHLLibraryItemMetadata",R,N
mutableCopyWithZone:
_initWithIdentifier:metadata:tracksToSave:
commonInitWithIdentifier:metadata:tracksToSave:
initWithLibraryGroup:
isEqualGroup:
validIdentifier:
tracksToSave
setTracksToSave:
_metadata
_identifier
_tracksToSave
T@"NSMutableArray",&,N,V_tracksToSave
T@"NSString",R,N,V_identifier
T@"SHLLibraryItemMetadata",R,N,V_metadata
keyWithValue:
initWithKey:
isShazamKeyValid:
validatedKey
_validatedKey
T@"NSString",R,N,V_validatedKey
initWithSnapshot:startCondition:
delegate
setDelegate:
snapshot
startCondition
error
setError:
_delegate
_snapshot
_startCondition
_error
T@"<SHMediaLibrarySyncDelegate>",W,N,V_delegate
T@"SHMediaLibrarySnapshot",R,N,V_snapshot
T@"NSString",R,C,N,V_startCondition
T@"NSError",&,N,V_error
shl_exceptionWithName:reason:
initWithOutcome:retryBlock:
outcome
retryBlock
_outcome
_retryBlock
T@"SHLTaskOutcome",R,N,V_outcome
T@?,R,N,V_retryBlock
retryTaskWithTimer:
retryTask:withContext:
initWithTracksToModify:groupsToModify:
_init
subdivideTaskIntoBatchesOfSize:
allItemIdentifiers
updateProgress
tracksToModify
setTracksToModify:
groupsToModify
setGroupsToModify:
_tracksToModify
_groupsToModify
T@"SHLLibraryBatch",&,N,V_tracksToModify
T@"SHLLibraryBatch",&,N,V_groupsToModify
T@"<SHLSyncSessionModifyTaskDelegate>",W,N,V_delegate
initWithAudioRecordingManager:entitlements:attribution:notificationScheduler:
mostDistantActiveMatcherDeadline
inflightMatchAttempts
matcherFactory
_inflightMatchAttempts
_clientType
_matcherFactory
T@"NSMapTable",R,N,V_inflightMatchAttempts
Tq,R,N,V_clientType
T@"SHEntitlements",R,N,V_entitlements
T@"SHMatcherFactory",R,N,V_matcherFactory
T@"<SHMatcherDelegate>",W,N,V_delegate
updateTokensForEndpoint:language:storefront:installationID:
loadLookupEndpointForClientIdentifier:clientType:callback:
loadMatchEndpointForClientIdentifier:clientType:installationID:callback:
loadEndpointForClientIdentifier:clientType:endpointType:installationID:callback:
storefront
_storefront
T@"SHStorefront",R,N,V_storefront
shl_markIndeterminate
startRecordingWithCompletion:
stopRecordingWithError:
T@"<SHAudioRecorderDelegate>",W,N
Tq,R,N
T@"<SHAudioRecorderDelegate>",W,N,Vdelegate
scheduleModifyTask:
taskTransformer
setTaskTransformer:
_taskTransformer
T@"SHLCloudModifyTaskTransformer",&,N,V_taskTransformer
notificationAttachmentForMediaItem:completionHandler:
fetchRequest
T@"SHMetadataMO",&,D,N
T@"NSSet",&,D,N
data
T@"NSData",&,D,N
group
T@"SHGroupMO",&,D,N
track
T@"SHTrackMO",&,D,N
T@"NSURL",C,D,N
T@"NSDate",C,D,N
T@"NSArray",&,D,N
latitude
Td,D,N
longitude
recognitionID
v16@?0@"NSError"8
Attempted to start an unknown service: %@
v8@?0
com.apple.shazamd
artistName
name
shazamUrl
songs
meta
matchOffset
speedSkew
frequencySkew
width
height
com.apple.ShazamKit
%@ is not supported by shazamd, please use synchronizeSnapshot:startCondition:completionHandler:
v24@?0@"SHDefaultConfigurationValues"8@"NSError"16
v24@?0@"SHCampaignTokens"8@"NSError"16
unknown
external
internal
POST
signature
data:audio/vnd.shazam.sig;base64,%@
audioSource
startDate
sessionDurationInSeconds
subscriptionStatusType
eligibleOffers
subscriptionStatus
com.apple.ShazamNotifications
results
resources
errors
shazam-songs
lyrics
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
Failed to open url %@
v24@?0@"NSDictionary"8@"NSError"16
NOMATCH
v16@?0@"UNNotificationContent"8
com.apple.ShazamKit.serverResponseContextBuilder.dispatch
com.apple.musicrecognition
Failed to fetch media item due to missing bundle identifier
Failed to fetch media item with shazam ID %@. Ensure ShazamID is valid.
application/json
Content-Type
v16@?0@"SHServerResponseContext"8
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v24@?0@"SHTokenizedURL"8@"NSError"16
com.apple.ShazamNotifications.main-thread
com.apple.ShazamNotifications.category.actionable
com.apple.ShazamNotifications.category.default
v16@?0@"UNNotificationAttachment"8
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_SUBTITLE
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_BODY
matches
retry
retryInMilliseconds
recordingIntermissionInMilliseconds
com.apple.assistant_service
%@ is not a valid client identifier
-[_initWithInstallationID:] should not be used on this class
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
%@ is not supported by shazamd, please use startRecognitionForRequest:completionHandler
%@ is not supported by shazamd, please use synchronizeSnapshot:startCondition:completionHandler
You don't have permission to fetch the library for %@
@distinctUnionOfObjects.%@
Should not try to save and delete tracks at the same time: %@
Should not try to save and delete groups at the same time: %@
T: +%lu -%lu G: +%lu -%lu
ttml
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
%@ context
%K == %@
%@ != nil
%@ == nil
%K IN %@
syncID
B24@?0@"SHTrackMO"8@"NSDictionary"16
@unionOfObjects.%@.%@
B24@?0@"SHGroupMO"8@"NSDictionary"16
com.apple.shazamd.library.dispatch-queue
v24@?0@"SHMediaLibraryInfo"8@"NSError"16
v24@?0q8q16
v16@?0q8
q24@?0@"SHMediaLibraryTrack"8@"SHMediaLibraryTrack"16
%@ is not supported by shazamd, please use synchronizeWithContext:
SHLLibraryTrackRecognitionIdentifierKey
_[T]_
%@ %@ is not a valid recognition identifier and key
%@%@%@
Track with identifier %@ is already associated to a group (%@), try removing it before.
Track with identifier %@ cannot be removed, try adding it before.
SHLSyncSessionFetchTaskIdentifier
SHLSyncSessionFetchTaskFetchType
SHLSyncSessionFetchTaskSyncTrigger
com.shazam.ShazamLibrary.operation-queue
com.shazam.library
v32@?0@"CKRecordID"8@"NSError"16^B24
No account logged in on this device.
Logged in account is restricted.
Logged in account is not a two-factor auth account with at least one passcode enabled device.
Missing encryption identity.
Network is unavailable.
Storage is full.
The content of your Shazam Library was deleted.
The content of your Shazam Library was purged.
Failed to sync your Shazam Library.
Shazam Library saves to the user's private database, which requires an authenticated session.
Parental Controls / Device Management has denied access to account credentials.
A device to device encryption requires an account with two-factor auth and a device with passcode enabled.
Encryption key has been permanently lost.
There's no network available to perform any networking tasks.
The user has reached the storage quota.
All contents have been removed.
All contents have been removed, usually through the Settings UI.
A possible internal sync error, check underlying error for a detailed description.
The user should manually log in.
Switch to an account that is not restricted by the system.
Turn on a passcode on the device and enable two-factor auth on the current iCloud account.
Non-recoverable. The user's local data should be automatically re-sync to Shazam Library.
Wait for network to become available and retry sync later.
The user should manually remove data or upgrade storage plans.
Non-recoverable. The user should choose to remove local data or re-sync to Shazam Library.
Initiate a manual sync later.
You must provide a valid encoded data.
com.apple.ShazamKit.shazamaudiorecorder.dispatch
Recorder using source %li
SHLLibraryTrackIdentifier
SHLLibraryTrackRecognitionIdentifier
SHLLibraryTrackShazamKey
SHLLibraryTrackMetadata
SHLLibraryTrackProviderIdentifier
SHLLibraryTrackProviderName
SHLLibraryTrackDate
SHLLibraryTrackTitle
SHLLibraryTrackSubtitle
SHLLibraryTrackLocation
SHLLibraryTrackCompoundIdentifierKey
SHLLibraryTrackAssociatedGroupIdentifier
SHLLibraryTrackLibrarySet
CFBundleName
%@_ios
You must have a valid Shazam key to create a library item.
%@ is not a valid recognition identifier.
v32@?0@"AVAudioPCMBuffer"8@"AVAudioTime"16@"NSError"24
v16@?0@"NSArray"8
v20@?0B8@"NSError"12
v24@?0@"CPSClipMetadata"8@"NSError"16
com.apple.ShazamNotifications.user-info.payload
com.apple.ShazamNotifications.user-info.media-item
com.apple.ShazamNotifications.user-info.attribution
com.apple.ShazamNotifications.user-info.apple-music
com.apple.aps.shazamd
com.apple.aps.shazamd.queue
SHLibraryAvailabilityListenerUserID
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
ModifyRecords
libraryBatchInsertions
libraryBatchDeletions
com.apple.shazam
com.apple.shazam.secure
iCloud.com.shazam.Shazam
shazam-library
Group
detail
code
sh.001
sh.002
ModifySubscriptions
v32@?0@"NSString"8@"NSError"16^B24
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
Library
ShazamLibrary
momd
sqlite
v24@?0q8@"NSError"16
com.apple.shazamlibrary.cloud
inflighttasks
failedtasks
privatedatabase
privatedatabasetransaction
zones
token
zonesubscription
SHLLibraryLabelName
platform
Track
RecognitionIdentifier
ShazamKey
ProviderIdentifier
ProviderName
Date
Title
Subtitle
Location
AssociatedGroupIdentifier
Labels
InitialFetch
InitialUpload
UserAction
RemotePush
Migration
v12@?0B8
attributes
albumName
isrc
contentRating
genreNames
releaseDate
artwork
relationships
public-lyrics
music-videos
data
EXPLICIT
SHFetchedResultsControllerTrackCacheName
SHFetchedResultsControllerGroupCacheName
FetchDatabaseChanges
FetchZoneChanges
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
%@_%@
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
A valid Shazam track requires a ShazamID. Library item (%@) is missing a ShazamID.
com.shazam.ShazamLibrary.syncSession.dispatchQueue
You must conform to the protocol of the modify task you're trying to add.
v16@?0@"SHLTaskPreconditionResult"8
You must conform to the protocol of the fetch task you're trying to add.
com.apple.shazamd.audiomanager.dispatch
ModifyZones
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
SHLLibraryGroupIdentifier
SHLLibraryGroupMetadata
SHLLibraryGroupTracksToSave
%@ is not a valid identifier.
v16@?0@"NSNotification"8
SHLSyncSessionModifyTaskTracksToModify
SHLSyncSessionModifyTaskGroupsToModify
SHLSyncSessionModifyTaskIdentifier
SHLSyncSessionModifyTaskProgress
SHLSyncSessionModifyTaskRetryCount
SHLSyncSessionModifyTaskSyncTrigger
q24@?0@"SHLLibraryBatch"8@"SHLLibraryBatch"16
handleCommonActionsForMatcher: %@ withResponse: %@ matchAttemptWasCancelled %i
v16@?0@"NSString"8
v24@?0@"SHEndpoints"8@"NSError"16
v24@?0@"SHHost"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
SHGroupMO
SHMetadataMO
SHTrackMO
SHConnectionHandle
SHServer
SHServiceProvider
SHConnectionListener
NSXPCListenerDelegate
NSObject
SHShazamResponseItem
SHServerShazamResponse
SHMediaLibrarySyncManager
SHWorker
SHServerResponseContext
SHShazamKitServerMatcher
SHNotificationCenterProvider
SHInflightMatchAttempt
SHServerMatchResponseParser
SHAudioManager
SHAudioSessionManagerDelegate
SHAudioRecordingManagerDelegate
SHServerGetResponseParser
SHLCloudBackedSubscription
SHServerResourcesResponse
SHAMSEndpointRequester
SHNetworkRecognitionRequester
SHMediaItemPresenter
SHMatchResultNotificationScheduler
SHAudioTap
SHMatchResultUserNotificationContentDeliverer
SHMatchResultNotificationContentDeliverer
SHServerResponseContextBuilder
SHMultipleConcurrentAudioTapMatcher
SHMatcherDelegate
SHSessionDelegate_Internal
SHSessionDelegate
SHCloudContainer
SHMediaItemFetcher
SHMatchResultUserNotificationContentProvider
SHServerDataResponse
SHAudioRecorderProvider
SHServerResultsResponse
SHAudioTapProvider
SHShazamKitServerCatalog
SHMatchResultNotificationAttachmentProviderUtilities
SHLLibraryStore
SHLCloudBackedOperation
SHMusicVideoResponseItem
SHServerMusicVideoResponse
SHShazamKitService
SHWorkerDelegate
SHMatcher
SHMediaLibrary
SHMediaLibrarySync
SHMediaLibraryQuery
SHMediaItemProvider
SHEventSignalling
SHEventSignalScheduler
SHLSyncSessionConfiguration
SHLLibraryChangeset
SHLTaskOutcome
SHLyricsResponseItem
SHServerLyricsResponse
SHMediaLibraryDataStore
NSFetchedResultsControllerDelegate
SHMediaLibraryController
SHLShazamLibraryDelegate
SHMediaLibraryAccountListenerDelegate
SHMediaLibraryDataStoreDelegate
SHLLibraryTrackCompoundIdentifier
SHLCloudEncryptionPrecondition
SHLTaskPrecondition
SHServiceStateHandlerUtilities
SHLMutableLibraryGroup
SHLSyncSessionFetchTask
SHLSyncSessionTask
SHLOperationQueue
SHUpdatedTrackLocalTrackPair
SHUpdatedGroupLocalGroupPair
SHMediaLibraryUpdateReport
SHLError
SHLLibraryItemMetadata
NSCopying
SHLMutableLibraryTrack
SHMatcherFactory
SHLLibraryTrack
SHLModifyTaskRecovery
SHAudioTapMatcher
SHLCloudFetchTaskScheduler
SHLFetchTaskScheduler
SHLTaskScheduler
SHAppClip
SHMatchResultUserNotificationPayload
SHAPSConnection
APSConnectionDelegate
SHMediaLibrarySyncDelegate
SHMediaLibraryAccountListener
SHLCloudContainerTransformer
SHLTaskSchedulerFactory
SHLCloudModifyTaskTransformer
SHLLibraryBatch
SHLCloudContext
SHServiceStateHandler
SHServiceDelegate
SHLCloudTaskScheduler
SHLCloudGroupTransformer
SHServerErrorResponse
SHLCloudBackedZone
SHMediaLibraryQueryManager
SHLCloudSubscriptionTransformer
SHLTaskPreconditionEvaluator
SHLCloudBackedContainer
SHMediaLibraryPersistentConfiguration
SHLCloudAccountStatusPrecondition
SHLCloudLibraryCache
SHLLibraryCache
SHLLocalStateTransactionable
SHLCloudBackedItem
SHAudioEnvironment
SHAudioRecordingManager
SHAudioRecorderDelegate
SHLLibraryLabel
SHLTaskPreconditionResult
SHLCloudTrackTransformer
SHLShazamLibrary
SHLSyncSessionModifyTaskDelegate
SHLSyncSessionTaskDelegate
SHLSyncSessionDelegate
SHLSyncSessionFetchTaskDelegate
SHSongsResponseItem
SHServerSongsResponse
SHFetchedResultsControllerFactory
SHMatchResultUserNotificationCenterDelegate
UNUserNotificationCenterDelegate
SHLCloudFetchTaskTransformer
SHMediaLibraryItemMapper
SHLSyncSession
SHMatchResultBulletinContentDeliverer
SHLCloudBackedToken
SHAudioSessionManager
SHLCloudModifyZoneTransformer
SHWatchdogTimer
SHUIService
SHMediaItemPresentation
SHLLibraryGroup
SHLLibraryItem
NSSecureCoding
NSCoding
NSMutableCopying
SHLShazamKey
SHMediaLibraryContext
ShazamLibrary
SHLTaskRetryContext
SHLFailedTaskRetryHandler
SHLSyncSessionModifyTask
SHMatcherController
SHShazamKitServerURLBuilder
SHSimulatorAudioRecorder
SHAudioRecorder
SHLCloudModifyTaskScheduler
SHLModifyTaskScheduler
SHMatchResultUserNotificationAttachmentProvider
SHGroupMO
CoreDataProperties
SHMetadataMO
SHTrackMO
v16@0:8
@40@0:8@16@24@32
@16@0:8
v24@0:8@16
@"<SHServiceDelegate>"
@"NSXPCConnection"
@24@0:8#16
@"NSArray"
@"SHAPSConnection"
@32@0:8@16@24
@"NSXPCListener"16@0:8
@"SHConnectionHandle"32@0:8@"NSXPCConnection"16@"SHAttribution"24
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableArray"
@"NSXPCListener"
@"<SHServiceProvider>"
@"<SHWorkerDelegate>"16@0:8
v24@0:8@"<SHWorkerDelegate>"16
@"<SHWorkerDelegate>"
@"NSMapTable"
@"NSRecursiveLock"
v24@0:8d16
@"NSISO8601DateFormatter"
@"SHShazamKitServerCatalog"
@"SHMatcherRequest"
@48@0:8@16@24@32@40
v32@0:8@16Q24
v32@0:8@"SHAudioSessionManager"16Q24
B40@0:8@16@24@32
v32@0:8@"SHAudioRecordingManager"16@"SHAudioTap"24
v24@0:8@"SHAudioRecordingManager"16
v32@0:8@"SHAudioRecordingManager"16@"NSArray"24
B40@0:8@"SHAudioRecorder"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
@"SHAudioRecordingManager"
@"SHAudioSessionManager"
@40@0:8@16@24^@32
@"CKSubscription"
v32@0:8@"NSURLRequest"16@?<v@?@"NSData"@"NSURLResponse"@"NSError">24
v40@0:8@16@?24@32
@"AMSMediaRequestEncoder"
@"AMSURLSession"
@"SHMatchedMediaItem"
@"<SHMatchResultNotificationContentDeliverer>"
@32@0:8q16q24
@?16@0:8
v24@0:8@?16
q16@0:8
v24@0:8@?<v@?>16
v32@0:8@"SHMatchedMediaItem"16@?<v@?>24
@"SHMatchResultUserNotificationContentProvider"
v32@0:8@"<SHMatcher>"16@"SHMatcherResponse"24
v32@0:8@"SHSession"16@"SHMatch"24
v40@0:8@"SHSession"16@"SHSignature"24@"NSError"32
B32@0:8@"SHSession"16@"SHSignature"24
v32@0:8@"SHSession"16@"SHMatcherResponse"24
v24@0:8@"SHSession"16
@"<SHMatcherDelegate>"
@"<SHAudioRecordingManager>"
@56@0:8@16q24@32@40@48
@"SHShazamKitServerURLBuilder"
@"SHServerResponseContextBuilder"
@"<SHNetworkRecognitionRequester>"
d16@0:8
B24@0:8q16
@40@0:8@16q24@32
v32@0:8@16@?24
@"<SHLLibraryCache>"
@"CKDatabaseOperation"
v28@0:8@"<SHWorker>"16B24
v24@0:8@"SHMatcherRequest"16
@"<SHMatcherDelegate>"16@0:8
v24@0:8@"<SHMatcherDelegate>"16
v32@0:8@"SHMediaLibrarySnapshot"16@"NSString"24
@"<SHMediaLibrarySyncDelegate>"16@0:8
v24@0:8@"<SHMediaLibrarySyncDelegate>"16
v24@0:8@?<v@?@"SHMediaLibraryInfo"@"NSError">16
v32@0:8@"SHMediaLibraryQueryParameters"16@?<v@?@"NSArray"@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SHMediaItem"@"NSError">24
Vv24@0:8@16
Vv24@0:8@"NSString"16
v40@0:8@16@24@?32
v32@0:8@"SHMatcherRequest"16@?<v@?>24
v40@0:8@"SHMediaLibrarySnapshot"16@"NSString"24@?<v@?>32
@"SHEntitlements"
@"SHMatcherController"
@"SHMatchResultNotificationScheduler"
@"SHMediaLibrarySyncManager"
@"SHMediaLibraryQueryManager"
@"SHMediaItemFetcher"
@"SHEventSignalScheduler"
@"<SHShazamKitClient>"
@"SHAttribution"
@48@0:8q16q24@32@40
@"NSMutableSet"
@24@0:8d16
@"MSVLyricsSongInfo"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
q24@0:8Q16
@"NSFetchedResultsController"
@"<SHMediaLibraryDataStoreDelegate>"
@"NSPersistentContainer"
@"NSManagedObjectContext"
v40@0:8@16@24q32
v48@0:8@16@24@32q40
v24@0:8@"SHLShazamLibrary"16
v40@0:8@"SHLShazamLibrary"16@"NSArray"24q32
v48@0:8@"SHLShazamLibrary"16@"NSError"24@"NSArray"32q40
v32@0:8@"SHLShazamLibrary"16@?<v@?B>24
v32@0:8@"SHMediaLibraryDataStore"16@"SHMediaLibraryChange"24
@"SHLShazamLibrary"
@"SHMediaLibraryDataStore"
@"SHMediaLibraryAccountListener"
@"SHMediaLibraryContext"
@"NSObject<OS_dispatch_group>"
v24@0:8@?<v@?@"SHLTaskPreconditionResult">16
@"SHLCloudBackedContainer"
@"NSProgress"16@0:8
v24@0:8@"NSString"16
@"SHLSyncSession"16@0:8
v24@0:8@"SHLSyncSession"16
@"NSProgress"
@"SHLSyncSession"
@"<SHLSyncSessionFetchTaskDelegate>"
v28@0:8@16B24
@"NSOperationQueue"
@"NSOperation"
@"SHMediaLibraryTrack"
@"SHTrackMO"
@"SHMediaLibraryGroup"
@"SHGroupMO"
d24@0:8@16
q24@0:8@16
@24@0:8^{_NSZone=}16
@"NSData"
@40@0:8@16@24q32
@"SHAudioTapProvider"
@40@0:8^v16Q24@32
B24@0:8^{OpaqueAudioQueue=}16
B28@0:8i16^@20
^{OpaqueAudioQueue=}16@0:8
v24@0:8^{OpaqueAudioQueue=}16
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
[3^{AudioQueueBuffer}]
^{OpaqueAudioQueue=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@"NSDate"
@"SHLShazamKey"
@"CLLocation"
@"SHLLibraryTrackCompoundIdentifier"
@56@0:8@16@24@32@40@48
@"SHLSyncSessionModifyTask"
@"SHAudioTap"
@"SHSession"
@"NSArray"16@0:8
v24@0:8@"SHLSyncSessionFetchTask"16
@24@0:8@16
@"SHLCloudFetchTaskTransformer"
@"SHLCloudSubscriptionTransformer"
@"SHMediaItem"
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"<SHMediaLibrarySync>"16
v32@0:8@"<SHMediaLibrarySync>"16@"SHMediaLibrarySnapshot"24
v40@0:8@"<SHMediaLibrarySync>"16@"NSError"24@"NSArray"32
@"APSConnection"
@"SHMediaLibraryController"
@"NSObject<OS_dispatch_queue>"
@"<SHMediaLibraryAccountListenerDelegate>"
@"CKModifyRecordsOperation"
@"NSSet"
@24@0:8q16
@"CKContainer"
@"CKRecordZone"
v32@0:8@"<SHService>"16@"<SHWorker>"24
v32@0:8d16@?24
@"SHWatchdogTimer"
@"SHLCloudModifyZoneTransformer"
@"SHLCloudLibraryCache"
@"SHLCloudContainerTransformer"
@"SHLSyncSessionConfiguration"
@"CKModifySubscriptionsOperation"
B40@0:8@16q24^@32
B40@0:8q16@24^@32
B40@0:8@"<SHLSyncSessionTask>"16q24^@32
B40@0:8q16@"NSString"24^@32
@"NSArray"24@0:8q16
@"<SHLSyncSessionTask>"32@0:8q16@"NSString"24
@32@0:8@16q24
B32@0:8@16^@24
B40@0:8@16@24^@32
@"NSUUID"
@"CKRecord"
@"AVAudioSession"
v40@0:8@"<SHAudioRecorder>"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
v24@0:8@"SHAudioTap"16
@"<SHAudioRecordingManagerDelegate>"
@"SHAudioEnvironment"
@28@0:8B16@20
@28@0:8@16B24
v40@0:8@"SHLSyncSession"16@"<SHLSyncSessionTask>"24@"SHLTaskOutcome"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionModifyTask"24@"NSArray"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionFetchTask"24@"NSArray"32
@32@0:8q16@24
q24@0:8q16
@"<SHLShazamLibraryDelegate>"
@"SHLLibraryStore"
@"SHLFailedTaskRetryHandler"
{CGSize=dd}32@0:8{CGSize=dd}16
@"NSDictionary"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"SHMediaItemPresenter"
@40@0:8@16@24@?32
@"CKFetchDatabaseChangesOperation"
@"CKFetchRecordZoneChangesOperation"
@"<SHLSyncSessionDelegate>"
@"SHLTaskSchedulerFactory"
@"<SHLLocalStateTransactionable>"
@"CKServerChangeToken"
v24@0:8q16
v20@0:8B16
@"<SHAudioSessionManagerDelegate>"
@"CKModifyRecordZonesOperation"
@"NSObject<OS_dispatch_source>"
v32@0:8@"SHMediaItem"16@?<v@?@"NSError">24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8@"NSString"16
@32@0:8@"NSString"16@"SHLLibraryItemMetadata"24
@"SHLLibraryItemMetadata"16@0:8
@"SHLLibraryItemMetadata"
@"<SHMediaLibrarySyncDelegate>"
@"SHMediaLibrarySnapshot"
@"NSError"
@32@0:8@16@?24
@"SHLTaskOutcome"
@"<SHLSyncSessionModifyTaskDelegate>"
@"SHLLibraryBatch"
@"SHMatcherFactory"
v40@0:8@16q24@?32
v48@0:8@16q24@32@?40
v56@0:8@16q24q32@40@?48
@"SHStorefront"
B24@0:8^@16
v24@0:8@?<v@?B@"NSError">16
@"<SHAudioRecorderDelegate>"16@0:8
v24@0:8@"<SHAudioRecorderDelegate>"16
@"<SHAudioRecorderDelegate>"
v24@0:8@"SHLSyncSessionModifyTask"16
@"SHLCloudModifyTaskTransformer"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>shazamd</string>
<key>CFBundleExecutable</key>
<string>shazamd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.shazamd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>shazamd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.2</string>
<key>DTSDKBuild</key>
<string>20C47</string>
<key>DTSDKName</key>
<string>iphonesimulator16.2.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>628765583</string>
<key>application-identifier</key>
<string>com.apple.shazamd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.shazam.secure</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.ClipServices</key>
<true/>
<key>com.apple.private.ShazamKit</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/Frameworks/ShazamKit.framework/shazamd</string>
</dict>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.shazam.secure</key>
<string>com.apple.shazam.secure</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.shazamkit.controlcenter.ShazamModule</string>
</array>
<key>com.apple.private.mediasafetynet.exception.shazam</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>shazamd</string>
<key>com.apple.private.shazamkit.persistence</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.ShazamNotifications</string>
</array>
<key>com.apple.security.device.audio-input</key>
<true/>
<key>com.apple.security.device.microphone</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.play-media</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.shazamd</string>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
