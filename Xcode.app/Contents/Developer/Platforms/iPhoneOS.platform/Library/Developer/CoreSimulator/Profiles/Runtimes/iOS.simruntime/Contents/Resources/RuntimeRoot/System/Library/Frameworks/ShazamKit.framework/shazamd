@(#)PROGRAM:shazamd  PROJECT:ShazamKit-1
init
array
initWithMachServiceName:
setDelegate:
apsConnection
registerForPushNotifications
supportedServices
countByEnumeratingWithState:objects:count:
initializeService
sharedInstance
populateRemoteConfiguration
initWithConnection:
attribution
initWithEntitlements:attribution:
setShazamServiceDelegate:
remoteDelegate
setExportedObject:
connections
addObject:
processIdentifier
bundleIdentifier
removeObject:
setInterruptionHandler:
setInvalidationHandler:
resume
configure
listener
start
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
lock
setLock:
.cxx_destruct
_lock
_connections
_apsConnection
_listener
T@"NSMutableArray",R,N,V_connections
T@"SHAPSConnection",R,N,V_apsConnection
T@"NSXPCListener",R,N,V_listener
T{os_unfair_lock_s=I},N,V_lock
cStringUsingEncoding:
dealloc
startRecognitionForRequest:
delegate
stop
T@"<SHMatcherDelegate>",W,N
_synchronizeSnapshot:startCondition:
T@"<SHMediaLibrarySyncDelegate>",W,N
_libraryInfoWithCompletionHandler:
_fetchLibraryTracksWithParameters:completionHandler:
mediaItemForShazamID:completionHandler:
sendEventSignal:
interfaceWithProtocol:
setExportedInterface:
remoteInterface
setRemoteObjectInterface:
remoteObjectProxyWithErrorHandler:
registerBundleAttribution:
transaction
setTransaction:
setCurrentAttributionKey:andApp:
watchdogTimer
stopWatchdogTimer
startWatchdogTimerForInterval:firedCompletion:
isRunning
managesRecordingSession
startManagedRecordingDate
date
powerlogCallingProcessBundleID:startDate:endDate:
endTransaction
stopMediaSafetyNetExemption
setStartManagedRecordingDate:
startMediaSafetyNetExemption
timeRequiredToPerformWork
startTransaction
matcher:didFindMatch:
matcher:didNotFindMatch:
matcher:didFail:
matcher:didFinishWithOutcome:
_libraryWillBeginSync:
_library:didChangeWithSnapshot:
_library:didProduceError:failedItemIdentifiers:
_libraryDidCompleteSync:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setInterface:forSelector:argumentIndex:ofReply:
connection
exportedObject
shazamService:updatedChildService:
setRemoteDelegate:
associatedBundleID
hasStartedSafetynetException
setHasStartedSafetynetException:
_hasStartedSafetynetException
_watchdogTimer
_remoteInterface
_remoteDelegate
_attribution
_associatedBundleID
_connection
_transaction
_startManagedRecordingDate
T@"NSString",R,C,N,V_associatedBundleID
T@"NSXPCConnection",R,N,V_connection
T@"NSXPCInterface",R,N,V_remoteInterface
T@"SHWatchdogTimer",R,N,V_watchdogTimer
T@"NSObject<OS_os_transaction>",&,N,V_transaction
TB,N,V_hasStartedSafetynetException
T@"NSDate",&,N,V_startManagedRecordingDate
T@"<SHXPCRemoteDelegate>",&,N,V_remoteDelegate
T@"<SHXPCServiceProxy>",&,N
T@"SHAttribution",R,N,V_attribution
currentRunLoop
shazamItemDictionary
extractIDsFromRelation:
initWithShazamItemDictionary:
setShazamItemDictionary:
_shazamItemDictionary
T@"NSDictionary",&,N,V_shazamItemDictionary
T@"NSNumber",R,N
T@"NSArray",R,C,N
shazamDictionary
setShazamDictionary:
_shazamDictionary
T@"NSDictionary",&,N,V_shazamDictionary
setDefaultRecordingIntermissionInSeconds:
setCampaignToken:
_defaultRecordingIntermissionInSeconds
_campaignToken
Td,N,V_defaultRecordingIntermissionInSeconds
T@"NSString",C,N,V_campaignToken
initWithRecordingService:
audioTap
stopTap
recordingService
setAudioTap:
setTapClosedObserver:
tapClosedObserver
setRecordingService:
_audioTap
_tapClosedObserver
_recordingService
T@"SHAudioTap",W,N,V_audioTap
T@,W,N,V_tapClosedObserver
T@"SHRecordingService",&,N,V_recordingService
invalidate
clientIdentifier
clientType
initWithClientIdentifier:clientType:
initWithCatalog:recognitionRequester:
setFormatOptions:
catalog
matcherResponseFromServerData:signature:context:
error
match
loadContext:
signature
errorWithCode:underlyingError:
errorResponseForSignature:error:
matchSignature:tokenizedURL:
loadConfiguration:
partnerURLRequestForSignature:endpoint:
duration
dataRepresentation
length
networkRequester
responseForServerData:signature:
performRequest:withReply:
buildURLForSignature:endpoint:
requestWithURL:
mutableCopy
setHTTPMethod:
base64EncodedStringWithOptions:
iso8601Formatter
audioStartDate
stringFromDate:
stringWithFormat:
metrics
audioSource
dictionaryWithObjects:forKeys:count:
sessionDuration
numberWithDouble:
dictionaryWithDictionary:
dataWithJSONObject:options:error:
setHTTPBody:
addValue:forHTTPHeaderField:
UUIDString
updateToken:withValue:
URLRepresentation
initWithCatalog:
setCatalog:
setNetworkRequester:
_delegate
_iso8601Formatter
_catalog
_networkRequester
T@"SHShazamServiceCatalog",&,N,V_catalog
T@"<SHNetworkRecognitionRequester>",&,N,V_networkRequester
T@"NSISO8601DateFormatter",R,N,V_iso8601Formatter
T@"<SHMatcherDelegate>",W,N,V_delegate
JSONObjectWithData:options:error:
objectForKeyedSubscript:
firstObject
initWithErrorDictionary:
initWithResultsDictionary:
defaultRecordingIntermissionInSeconds
initWithRecordingIntermission:retrySeconds:match:signature:error:
recordingIntermissionSeconds
retrySeconds
noMatchWithRecordingIntermission:retrySeconds:signature:
initWithResourcesDictionary:
shazamIDs
count
arrayWithCapacity:
campaignToken
mediaItemFromResourcesResponse:shazamID:signatureStartDate:campaignToken:
songsResponse
songsDictionary
set_rawResponseSongs:
initWithMediaItems:forSignature:
matchWithRecordingIntermission:retrySeconds:match:
mediaDictionaryFromResourcesResponse:shazamID:campaignToken:
shazamResponse
itemForIdentifier:
matchOffset
setValue:forKey:
speedSkew
frequencySkew
songRelationIDs
itemForIdentifiers:
lyricsRelationIDs
lyricsResponse
doubleValue
snippetFromOffset:
dateByAddingTimeInterval:
lyricLines
songwriters
initWithLyricsStartDate:lines:songwriters:
copy
initWithMatchedMediaItemDictionary:syncedLyrics:
annotateClientError:code:underlyingError:
annotateClientError:withError:
initWithDataArray:
mediaItemFromResourcesResponse:shazamID:campaignToken:
mediaItemWithProperties:
dictionary
shazamID
shazamURL
title
artistName
appleMusicID
artworkURL
genreNames
releaseDate
isExplicitContent
numberWithBool:
albumName
isrc
appleMusicURLString
initWithString:
containsTokens
lyricsSnippet
staticLyrics
musicVideoRelationIDs
musicVideoResponse
mediaItemsFromServerData:context:error:
resourcesDictionary
initWithSongsDictionary:
initWithShazamDictionary:
initWithLyricsDictionary:
initWithMusicVideoDictionary:
setResourcesDictionary:
_resourcesDictionary
T@"NSDictionary",&,N,V_resourcesDictionary
T@"SHServerSongsResponse",R,N
T@"SHServerShazamResponse",R,N
T@"SHServerLyricsResponse",R,N
T@"SHServerMusicVideoResponse",R,N
sessionConfiguration
invalidateAndCancel
encoder
requestByEncodingRequest:parameters:
dataTaskPromiseWithRequest:
response
addFinishBlock:
defaultSessionConfiguration
setTimeoutIntervalForRequest:
setWaitsForConnectivity:
setDiscretionary:
initWithClientIdentifier:bag:
setClientType:
initWithTokenService:
setProtocolHandler:
initWithTokenService:bag:
setClientIdentifier:
_encoder
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_clientType
T@"AMSURLSession",&,N,V_session
T@"AMSMediaRequestEncoder",R,N,V_encoder
setNotificationCategories:
setWantsNotificationResponsesDelivered
currentMediaItem
containsMediaItemWithFuzzyTolerance:
currentSignatureID
querySignature
mediaItems
setCurrentMediaItem:
setCurrentSignatureID:
sendMatchNotification:
sendAnalyticsEventForMatch:
contentProvider
requestWithIdentifier:content:trigger:
userNotificationCenter
addNotificationRequest:withCompletionHandler:
setUserNotificationCenter:
T@"UNUserNotificationCenter",&,N
setContentProvider:
_currentMediaItem
_currentSignatureID
_contentProvider
T@"SHMatchedMediaItem",&,N,V_currentMediaItem
T@"NSUUID",&,N,V_currentSignatureID
T@"SHNotificationContentProvider",&,N,V_contentProvider
handleAudioSessionInterruption:
addObserver:selector:name:object:
handleAudioSessionRouteChange:
handleMediaServicesWereLost:
handleMediaServicesWereReset:
removeObserver:name:object:
registerObservers
configureAudioSession
setActive:withOptions:error:
removeObservers
setIsAudioSessionInterrupted:
setCategory:withOptions:error:
setAllowHapticsAndSystemSoundsDuringRecording:error:
setMode:error:
preferDecoupledIO:error:
setActive:error:
currentRoute
outputs
portType
areHeadphonesConnected
isExternalSpeakerConnected
setAudioManagerDispatchQueue:
_isAudioSessionInterrupted
TB,N,V_isAudioSessionInterrupted
T@"NSObject<OS_dispatch_queue>",&,N,V_audioManagerDispatchQueue
T@"<SHAudioSessionManagerDelegate>",W,N,V_delegate
isAudioSourceSupported:
audioSessionManager
areHeadphonesOrExternalSpeakerConnected
shouldUseInternalSession
initWithRecordingSource:
activeTaps
defaultCenter
postNotificationName:object:
startRecordingWithOptions:
stopRecording
deactivateAudioSession
removeAllObjects
availableRecorders
stopRecordingWithError:
recordingSource
isAudioSessionInterrupted
isClosed
completion
stopTap:
activateAudioSessionWithOptions:
audioManagerDispatchQueue
failedToResumeAfterInterruption
startRecordersWithCompletion:
startRecordingWithCompletion:
integerValue
arrayWithObjects:count:
recorder:producedAudioBuffer:atTime:
audioSessionManager:interruptionBeganWithOptions:
audioSessionManager:interruptionEndedWithOptions:
initWithRecorders:
createTap
startTap:
requiredEntitlements
_audioSessionManager
_availableRecorders
_activeTaps
_audioManagerDispatchQueue
T@"NSMutableArray",R,N,V_activeTaps
T@"SHAudioSessionManager",R,N,V_audioSessionManager
T@"NSArray",R,N,V_availableRecorders
T@"NSObject<OS_dispatch_queue>",R,N,V_audioManagerDispatchQueue
sh_setDefaultValuesWithCompletion:
sh_setCampaignTokenForClientIdentifier:completion:
loadContextForClientIdentifier:completion:
bundleForClass:
URLForResource:withExtension:
URLForDirectory:inDomain:appropriateForURL:create:error:
applicationSupportDirectory
URLByAppendingPathComponent:isDirectory:
path
URLByAppendingPathExtension:
setType:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
setUsesPersistentHistoryTracking:
persistentStoreURL
setURL:
managedObjectModelURL
persistentStoreDescriptionForStoreType:
initWithSnapshot:startCondition:
snapshot
startCondition
setError:
_snapshot
_startCondition
_error
T@"<SHMediaLibrarySyncDelegate>",W,N,V_delegate
T@"SHMediaLibrarySnapshot",R,N,V_snapshot
T@"NSString",R,C,N,V_startCondition
T@"NSError",&,N,V_error
setTitle:
setShouldBackgroundDefaultAction:
setThreadIdentifier:
setShouldIgnoreDoNotDisturb:
setShouldIgnoreDowntime:
defaultSound
setSound:
setShouldAuthenticateDefaultAction:
artist
setBody:
appleMusicURL
setCategoryIdentifier:
userInfoPayloadForMediaItem:bundleIdentifier:
setUserInfo:
setAttachments:
notificationAttachmentForMediaItem:completionHandler:
categoryWithIdentifier:actions:intentIdentifiers:options:
localizedUserNotificationStringForKey:arguments:
dateWithTimeIntervalSinceNow:
setExpirationDate:
setShouldHideDate:
setShouldSuppressDefaultAction:
notificationCategories
initWithAttribution:
notificationContentForMediaItem:completionHandler:
notificationContentForNoMatch
setAttribution:
T@"SHAttribution",&,N,V_attribution
bagForProfile:profileVersion:
initWithBag:
addBagKey:valueType:
bagKeySet
registerBagKeySet:forProfile:profileVersion:
amsBag
dictionaryForKey:
stringForKey:
endpointsBagValue
valueWithCompletion:
internalHostBagValue
externalHostBagValue
languageTagBagValue
campaignTokenBagValue
defaultValuesBagValue
populateFeatureFlags
featureFlagsBagValue
setFeatureFlags:
featureFlags
endpointsWithCompletion:
hostForClientType:completion:
campaignTokenWithCompletion:
defaultValuesWithCompletion:
setAmsBag:
setFeatureFlagsBagValue:
setEndpointsBagValue:
setInternalHostBagValue:
setExternalHostBagValue:
setCampaignTokenBagValue:
setDefaultValuesBagValue:
setLanguageTagBagValue:
_featureFlags
_amsBag
_featureFlagsBagValue
_endpointsBagValue
_internalHostBagValue
_externalHostBagValue
_campaignTokenBagValue
_defaultValuesBagValue
_languageTagBagValue
T@"AMSBag",&,N,V_amsBag
T@"SHFeatureFlags",&,N,V_featureFlags
T@"AMSBagValue",&,N,V_featureFlagsBagValue
T@"AMSBagValue",&,N,V_endpointsBagValue
T@"AMSBagValue",&,N,V_internalHostBagValue
T@"AMSBagValue",&,N,V_externalHostBagValue
T@"AMSBagValue",&,N,V_campaignTokenBagValue
T@"AMSBagValue",&,N,V_defaultValuesBagValue
T@"AMSBagValue",&,N,V_languageTagBagValue
dataArray
setDataArray:
_dataArray
T@"NSArray",&,N,V_dataArray
T@"NSArray",R,N
subarrayWithRange:
sh_sliceIntoChunksOfMaximumSize:
initWithStoreType:
initWithCallingProcessIdentifier:
commonInitWithDataStore:remoteLibrary:accountListener:
syncGroup
dataStore
dispatchQueue
syncQueue
setCurrentContext:
synchronizeLocalSnapshot:
synchronizeRemoteSnapshot:startCondition:
accountListener
fetchLibraryTracksWithParameters:
fetchLibraryInfoWithCompletionHandler:
changes
changeType
libraryItem
persistLibraryGroups:completionHandler:
persistUpdatedTracks:completionHandler:
deleteItemsByIdentifiers:completionHandler:
commitChangesWithError:
status
isEncrypted
_synchronizeRemoteSnapshot:startCondition:
numberWithInteger:
beginLibrarySync
handleLibraryError:failedItemIdentifiers:
persistChangesAndCompleteSyncWithCompletionHandler:
unsyncedGroupChangeset
unsyncedTrackChangeset
shazamLibraryTrackFromLibraryTrack:
shazamLibraryGroupFromLibraryGroup:
initWithIdentifier:
shazamLibrarySyncStartConditionForMediaLibraryStartCondition:
remoteLibrary
synchronizeChanges:startCondition:
fetchAllUploadableGroupsMissingLibrarySyncMetadata
fetchAllUploadableTracksMissingLibrarySyncMetadata
libraryTrackFromShazamLibraryTrack:
libraryGroupFromShazamLibraryGroup:
currentContext
resetDataIfNeededForSyncError:
currentSnapshot
mapInternalLibraryErrorToMediaLibrary:
deleteAllSyncMetadataItems
deleteAllItems
clearCachedSyncStatus
addChanges:
libraryWillBeginSync:
library:didChangeTracks:syncAction:
library:didChangeGroups:syncAction:
library:didDeleteItemsWithIdentifiers:syncAction:
library:didProduceError:withFailedItemIdentifiers:syncAction:
library:didCompleteSyncWithCompletionHandler:
currentLibraryAccountHasChanged
libraryDataStore:didUpdateWithChange:
initWithBundleIdentifier:
initWithDataStore:remoteLibrary:accountListener:
synchronizeWithContext:
setCurrentSnapshot:
setRemoteLibrary:
setDataStore:
dataStoreShouldPersistChanges
setSyncGroup:
setDispatchQueue:
setSyncQueue:
setAccountListener:
_dataStoreShouldPersistChanges
_currentSnapshot
_remoteLibrary
_dataStore
_syncGroup
_dispatchQueue
_syncQueue
_currentContext
_accountListener
T@"SHLShazamLibrary",&,N,V_remoteLibrary
T@"SHMediaLibraryDataStore",&,N,V_dataStore
T@"SHMediaLibrarySnapshot",&,N,V_currentSnapshot
TB,R,N,V_dataStoreShouldPersistChanges
T@"NSObject<OS_dispatch_group>",&,N,V_syncGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
T@"SHMediaLibraryContext",&,N,V_currentContext
T@"SHMediaLibraryAccountListener",&,N,V_accountListener
T@"<SHMediaLibrarySyncDelegate>",W,N,Vdelegate
_isClosed
_completion
T@?,C,N,V_completion
Tq,R,N,V_recordingSource
TB,R,N,V_isClosed
stopAudioQueueAndClearBuffersWithError:
isAudioQueueRunning
errorWithDomain:code:userInfo:
initStandardFormatWithSampleRate:channels:
streamDescription
hasAudioQueueFailedWithStatus:annotateError:
startAudioQueueAfterRetrySecondsWithCompletion:
initWithPCMFormat:frameCapacity:
setFrameLength:
audioBufferList
audioRecorderDispatchQueue
audioBufferFromData:byteSize:inFormat:
T@"<SHAudioRecorderDelegate>",W,N
Tq,R,N
setRecordingSource:
audioQueue
setAudioQueue:
audioStreamBasicDescription
setAudioStreamBasicDescription:
setAudioRecorderDispatchQueue:
mBuffers
_recordingSource
_audioQueue
_audioRecorderDispatchQueue
_audioStreamBasicDescription
Tq,N,V_recordingSource
T^{OpaqueAudioQueue=},N,V_audioQueue
T{AudioStreamBasicDescription=dIIIIIIII},N,V_audioStreamBasicDescription
T@"NSObject<OS_dispatch_queue>",&,N,V_audioRecorderDispatchQueue
T@"<SHAudioRecorderDelegate>",W,N,V_delegate
initWithStreamDescription:
sampleRate
initWithAudioTimeStamp:sampleRate:
hasPrefix:
isEqualLabel:
lowercaseString
resultsDictionary
setResultsDictionary:
_resultsDictionary
T@"NSDictionary",&,N,V_resultsDictionary
Td,R,N
originalURLPath
tokenForTokenType:
containsString:
tokenDictionary
stringByReplacingOccurrencesOfString:withString:
host
tokenURLPath
URLWithString:
setScheme:
setHost:
componentsSeparatedByString:
setPath:
lastObject
setQuery:
absoluteString
allocWithZone:
copyWithZone:
initWithHost:URLPath:
mutableCopyWithZone:
setTokenDictionary:
setOriginalURLPath:
_host
_originalURLPath
_tokenDictionary
T@"NSString",C,N,V_host
T@"NSString",R,C,N
T@"NSString",C,N,V_originalURLPath
T@"NSMutableDictionary",&,N,V_tokenDictionary
internalErrorWithCode:underlyingError:
setMatcherRequest:
serviceDelegate
serviceUpdated:withRunningState:
containingAppBundleIdentifier
installationID
initWithClientIdentifier:clientType:installationID:
setSession:
session
matcherRequest
type
matchSignature:
deadline
matchStreamingBuffer:atTime:
finishSessionIfNecessaryForRequest:response:outcome:
setCompletion:
finishSessionConditionsMetForRequest:response:outcome:
stopWithOutcome:
stopCondition
hasHitDeadline
setAudioSource:
sendNotifications
postNotificationName:object:userInfo:
dictionaryWithCapacity:
timeIntervalSinceNow
close
session:didFindMatch:
session:didNotFindMatchForSignature:error:
setServiceDelegate:
T@"<SHServiceDelegate>",W,N
TB,R,N
initWithAttribution:clientType:
startRecognitionForRequest:withAudioTap:
session:shouldAttemptToMatchSignature:
session:didFindMatchForResponse:
session:didNotFindMatchForResponse:
_serviceDelegate
_session
_tap
_matcherRequest
_clientType
T@"SHSession",&,N,V_session
T@"SHMatcherRequest",&,N,V_matcherRequest
Tq,R,N,V_clientType
T@"SHAudioTap",R,N,V_tap
T@"<SHServiceDelegate>",W,N,V_serviceDelegate
validateClientIdentifier:
exceptionWithName:reason:userInfo:
_initWithInstallationID:
loadMatchEndpointForClientIdentifier:clientType:installationID:callback:
_createMatcher
setURLBuilder:
setContextBuilder:
_installationID
_clientIdentifier
T@"SHShazamServiceURLBuilder",&,N,V_URLBuilder
T@"SHServerResponseContextBuilder",&,N,V_contextBuilder
T@"NSString",R,C,N,V_installationID
T@"NSString",R,C,N,V_clientIdentifier
privateOperation
configuration
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
setConfiguration:
initWithOperation:
operation
setPrivateOperation:
_privateOperation
T@"CKDatabaseOperation",&,N,V_privateOperation
T@"CKDatabaseOperation",R,N
musicVideoItemDictionary
initWithMusicVideoItemDictionary:
setMusicVideoItemDictionary:
_musicVideoItemDictionary
T@"NSDictionary",&,N,V_musicVideoItemDictionary
T@"NSURL",R,N
musicVideoDictionary
setMusicVideoDictionary:
_musicVideoDictionary
T@"NSDictionary",&,N,V_musicVideoDictionary
unobserveRecognitionNotifications
recognitionService
shouldStartService:
audioTapService
startTap
librarySyncService
shouldStartLibraryService:
libraryQueryService
isEntitledForLibrarySPI
providerIdentifier
isEqualToString:
errorWithCode:underlyingError:keyOverrides:
isCurrentBundleIdentifierValid
entitlements
isEntitledForInternalClient
requiresAttributionForBundlerIdentifier:
mediaItemService
eventSignalService
services
hasRequiredEntitlements:
shazamServiceDelegate
userInfo
notificationService
canSendNotificationForMatch:
sendNotificationForMatch:
addObserverForName:object:queue:usingBlock:
setMatchedObserver:
canSendNotificationForNoMatchSignatureID:
sendNotificationForNoMatch
setNoMatchObserver:
matchedObserver
removeObserver:
noMatchObserver
observeRecognitionNotificationsForService:
configurationForService:
setEntitlements:
_recognitionService
_notificationService
_audioTapService
_librarySyncService
_libraryQueryService
_mediaItemService
_eventSignalService
_shazamServiceDelegate
_entitlements
_matchedObserver
_noMatchObserver
T@"SHEntitlements",&,N,V_entitlements
T@"SHRecognitionService",R,N,V_recognitionService
T@"SHNotificationService",R,N,V_notificationService
T@"SHAudioTapService",R,N,V_audioTapService
T@"SHMediaLibrarySyncService",R,N,V_librarySyncService
T@"SHMediaLibraryQueryService",R,N,V_libraryQueryService
T@"SHMediaItemService",R,N,V_mediaItemService
T@"SHEventSignalService",R,N,V_eventSignalService
T@,W,N,V_matchedObserver
T@,W,N,V_noMatchObserver
T@"<SHXPCRemoteDelegate>",W,N,V_delegate
T@"<SHShazamServiceDelegate>",W,N,V_shazamServiceDelegate
populateWithConfiguration:
defaultFlags
initWithConfiguration:
defaultValues
recordingIntermission
_defaultValues
T@"NSDictionary",R,N,V_defaultValues
initWithName:
name
_name
T@"NSString",R,C,N,V_name
initWithType:scope:callingProcessIdentifier:
sessionType
sessionScope
callingProcessIdentifier
_sessionType
_sessionScope
_callingProcessIdentifier
Tq,R,N,V_sessionType
Tq,R,N,V_sessionScope
T@"NSString",R,C,N,V_callingProcessIdentifier
configureEntitlementsForTask:
configureEntitlementsForConnection:
entitlementArray:containsEntitlementValue:fromSecTask:
boolValueOfEntitlement:fromSecTask:
entitlementArray:containsEntitlementValue:fromConnection:
boolValueOfEntitlement:fromConnection:
isEntitledForStorefront
isEntitledForMicrophone
isEntitledForExternalAudioRecording
isEntitledForInternalAudioRecording
isSubsetOfSet:
valueForEntitlement:
boolValue
copyValueOfEntitlement:fromSecTask:
setIsEntitledForStorefront:
_isEntitledForStorefront
_isEntitledForMicrophone
_isEntitledForExternalAudioRecording
_isEntitledForInternalAudioRecording
_isEntitledForInternalClient
TB,N,V_isEntitledForStorefront
TB,R,N,V_isEntitledForMicrophone
TB,R,N,V_isEntitledForExternalAudioRecording
TB,R,N,V_isEntitledForInternalAudioRecording
TB,R,N,V_isEntitledForInternalClient
sendEvent:withPayload:
trackSetToAdd
allObjects
trackSetToDelete
groupSetToAdd
groupSetToDelete
identifier
valueForKeyPath:
setWithArray:
intersectSet:
shl_exceptionWithName:reason:
addObjectsFromArray:
tracksToSave
tracksToAdd
addTracks:
tracksToDelete
deleteTracks:
groupsToAdd
addGroups:
groupsToDelete
deleteGroups:
trackIDsToDelete
groupIDsToDelete
mergeChangeset:
setTrackSetToAdd:
setTrackSetToDelete:
setGroupSetToAdd:
setGroupSetToDelete:
_trackSetToAdd
_trackSetToDelete
_groupSetToAdd
_groupSetToDelete
T@"NSMutableSet",&,N,V_trackSetToAdd
T@"NSMutableSet",&,N,V_trackSetToDelete
T@"NSMutableSet",&,N,V_groupSetToAdd
T@"NSMutableSet",&,N,V_groupSetToDelete
_initWithTasksToRetry:error:
tasksToRetry
allItemIdentifiers
initWithError:
initWithTasksToRetry:error:
failedItemIdentifiers
_tasksToRetry
T@"NSError",R,N,V_error
T@"NSArray",R,N,V_tasksToRetry
campaignTokens
tokenForClientIdentifier:
_campaignTokens
T@"NSDictionary",R,N,V_campaignTokens
initWithIdentifier:bundleID:context:
discoverabilitySignal
source
sendEvent:
_isRunning
TB,R,N,V_isRunning
parseTTMLFromLyricsItemDictionary:
songInfo
lyricsLines
lyricsText
string
startTime
lyricLineWithText:offset:
dataUsingEncoding:
initWithTTMLData:
parseWithError:
lyricsLineStartingBeforeTimeOffset:
appendString:
nextLine
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
initWithLyricsItemDictionary:
setSongInfo:
_songInfo
T@"MSVLyricsSongInfo",&,N,V_songInfo
lyricsDictionary
setLyricsDictionary:
_lyricsDictionary
T@"NSDictionary",&,N,V_lyricsDictionary
initWithRecognitionIdentifier:shazamKey:
isTrackIdentifier:
recognitionIdentifierFromTrackIdentifier:
shazamKeyFromTrackIdentifier:
identifierWithRecognitionIdentifier:shazamKey:
rangeOfString:options:
substringFromIndex:
substringToIndex:
precomposedStringWithCanonicalMapping
compoundIdentifierFromTrackIdentifier:
libraryItemIdentifier
hasValidRecognitionIdentifier
_recognitionIdentifier
_shazamKey
T@"NSString",R,N,V_recognitionIdentifier
T@"SHLShazamKey",R,N,V_shazamKey
cloudContainer
container
errorWithCode:
resultWithError:
supportsDeviceToDeviceEncryption
fulfilledResult
accountInfoWithCompletionHandler:
evaluatePreconditionWithCompletion:
initWithContainer:
setCloudContainer:
_cloudContainer
T@"SHLCloudBackedContainer",&,N,V_cloudContainer
associatedGroupIdentifier
setAssociatedGroupIdentifier:
initWithLibraryGroup:
removeTracks:
UUID
progressWithTotalUnitCount:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
progress
size
retryCount
setRetryCount:
syncStartCondition
setSyncStartCondition:
T@"NSString",R,N
T@"NSProgress",R,N
Tq,N
T@"NSString",N
T@"SHLSyncSession",W,N
fetchType
setFetchType:
_progress
_identifier
_retryCount
_syncStartCondition
_fetchType
Tq,N,V_fetchType
T@"<SHLSyncSessionFetchTaskDelegate>",W,N,V_delegate
T@"NSString",R,N,V_identifier
T@"NSProgress",R,N,V_progress
Tq,N,V_retryCount
T@"NSString",N,V_syncStartCondition
T@"SHLSyncSession",W,N,Vsession
initOperationQueue
setMaxConcurrentOperationCount:
tailOperation
isFinished
isCancelled
addDependency:
setTailOperation:
operationQueue
addOperations:waitUntilFinished:
cancelAllOperations
setOperationQueue:
_operationQueue
_tailOperation
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperation",W,N,V_tailOperation
autoupdatingCurrentLocale
countryCode
cloudServiceController
requestStorefrontCountryCodeWithCompletionHandler:
storefront:
_cloudServiceController
T@"SKCloudServiceController",R,N,V_cloudServiceController
errorCode:underlyingError:
errorCodeForError:
domain
code
enumerateKeysAndObjectsUsingBlock:
canRetryForPartialError:
canRetryForError:
userInfoForErrorCode:withUnderlyingError:
initWithDomain:code:userInfo:
localizedDescriptionForSyncError:
setObject:forKey:
localizedFailureReasonForSyncError:
localizedRecoverySuggestionForSyncError:
errorWithUnderlyingError:
retrySecondsForError:
validEncodedSystemData:
encodedSystemData
initWithMetadata:
initWithEncodedSystemData:
_encodedSystemData
T@"NSData",R,N,V_encodedSystemData
initWithLibraryTrack:
T@"NSDate",&,D,N
recognitionIdentifier
T@"NSString",&,D,N
shazamKey
T@"SHLShazamKey",&,D,N
T@"NSString",C,D,N
subtitle
location
T@"CLLocation",&,D,N
watchdogTimerSource
_watchdogTimerSource
T@"NSObject<OS_dispatch_source>",R,N,V_watchdogTimerSource
commonInitWithIdentifier:metadata:labels:
validProviderIdentifier
validProviderName
bundleName
addPlatformLabel
objectForInfoDictionaryKey:
labelSet
isEqualTrack:
platformLabel
_initWithRecognitionIdentifier:shazamKey:metadata:labels:
removeLabel:
setLabelSet:
_providerName
_providerIdentifier
_date
_title
_subtitle
_location
_associatedGroupIdentifier
_compoundIdentifier
_labelSet
T@"NSMutableSet",&,N,V_labelSet
T@"NSDate",&,N,V_date
T@"NSString",&,N,V_recognitionIdentifier
T@"SHLShazamKey",&,N,V_shazamKey
T@"NSString",C,N,V_title
T@"NSString",C,N,V_subtitle
T@"CLLocation",&,N,V_location
T@"NSString",&,N,V_associatedGroupIdentifier
T@"NSString",&,N,V_providerIdentifier
T@"NSString",&,N,V_providerName
T@"NSSet",R,N
T@"SHLLibraryTrackCompoundIdentifier",R,N,V_compoundIdentifier
originalTask
recoverTaskFromPartialError
recoverTaskFromLimitExceededError
savedGroups
deletedIDs
initWithInsertions:deletions:
savedTracks
differenceOfBatch:
initWithTracksToModify:groupsToModify:
subdivideTaskIntoBatchesOfSize:
setOriginalTask:
setSavedGroups:
setSavedTracks:
setDeletedIDs:
_originalTask
_savedGroups
_savedTracks
_deletedIDs
T@"SHLSyncSessionModifyTask",&,N,V_originalTask
T@"NSArray",&,N,V_savedGroups
T@"NSArray",&,N,V_savedTracks
T@"NSArray",&,N,V_deletedIDs
containerTransformer
cloudBackedContainer
fetchTaskTransformer
cloudBackedZoneChangesOperationFromFetchTask:forChangedZones:container:
defaultQueue
addOperation:
cache
zoneID
zoneName
subscriptionExistsForZoneIdentifier:
subscriptionTaskTransformer
cloudBackedOperationForZones:container:
sharedContext
shazamLibraryZone
zoneExistsForIdentifier:
initWithZone:
storeZoneIdentifier:error:
zoneTransformer
cloudBackedOperationForZonesToSave:container:
cloudBackedDatabaseChangesOperationFromFetchTask:container:completion:
storeTask:ofType:error:
addOperation:waitUntilFinished:
preconditions
scheduleFetchTask:
setFetchTaskTransformer:
setSubscriptionTaskTransformer:
_fetchTaskTransformer
_subscriptionTaskTransformer
T@"SHLCloudFetchTaskTransformer",&,N,V_fetchTaskTransformer
T@"SHLCloudSubscriptionTransformer",&,N,V_subscriptionTaskTransformer
initWithURL:
appClip:didFailToRequestURL:error:
sessionProxy
setLaunchReason:
requestClipWithCompletion:
requestMetadataWithCompletion:
requestAppClipForURL:
T@"<SHAppClipDelegate>",W,N,V_delegate
URLBuilder
contextBuilder
loadLookupEndpointForClientIdentifier:clientType:callback:
_URLBuilder
_contextBuilder
T@"SHShazamServiceURLBuilder",R,N,V_URLBuilder
T@"SHServerResponseContextBuilder",R,N,V_contextBuilder
T@"<SHNetworkRecognitionRequester>",R,N,V_networkRequester
notificationFromLegacyUserInfoFormat:
setMediaItem:
setBundleIdentifier:
payloadFromNotificationContentUserInfo:
mediaItem
_mediaItem
_bundleIdentifier
T@"SHMediaItem",&,N,V_mediaItem
T@"NSString",C,N,V_bundleIdentifier
topic
notificationFromRemoteNotificationDictionary:
notificationType
libraryController
apsEnvironment
connectionQueue
initWithEnvironmentName:namedDelegatePort:queue:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
setConnectionQueue:
_apsEnvironment
_libraryController
_connectionQueue
T@"APSConnection",R,N,V_connection
T@"NSString",R,C,N,V_apsEnvironment
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"SHMediaLibraryController",R,N,V_libraryController
scope
initWithContainer:usingEncryption:
setScope:
_scope
Tq,N,V_scope
containerWithScope:
modifyTaskScheduler
fetchTaskScheduler
createTransaction
T@"<SHLModifyTaskScheduler>",R,N
T@"<SHLFetchTaskScheduler>",R,N
setSavePolicy:
privateCloudDatabase
modifyRecordsOperation
setDatabase:
recordsToSaveFromModifyTask:container:
setRecordsToSave:
recordIDsToDeleteFromModifyTask:
setRecordIDsToDelete:
recordsToSave
setTotalUnitCount:
completedUnitCount
setCompletedUnitCount:
setPerRecordSaveBlock:
setPerRecordCompletionBlock:
containerIdentifier
initWithCallingProcessIdentifier:containerIdentifier:
removeTaskOfType:forIdentifier:error:
taskOfType:identifier:
session:task:didProduceOutcome:
libraryTrackFromCloudBackedItem:usingEncryption:
session:task:didModifyGroups:
session:task:didModifyTracks:
session:task:didDeleteItemsWithIdentifiers:
initWithOriginalTask:savedGroups:savedTracks:deletedIDs:error:
recoverableTasks
setModifyRecordsCompletionBlock:
setExpectedSendSize:
recordIDsToDelete
setQuantity:
setName:
setGroup:
tracksToModify
insertions
groupsToModify
cloudBackedItemFromLibraryTrack:usingEncryption:
deletions
cloudBackedOperationFromModifyTask:container:
setModifyRecordsOperation:
_configuration
_modifyRecordsOperation
T@"SHLSyncSessionConfiguration",R,N,V_configuration
T@"CKModifyRecordsOperation",&,N,V_modifyRecordsOperation
minusSet:
numberOfItems
subdivideIntoBatchesOfSize:
hasChanges
_insertions
_deletions
T@"NSSet",R,N,V_insertions
T@"NSSet",R,N,V_deletions
TB,R,N,GhasChanges
containerWithIdentifier:
initWithZoneName:ownerName:
defaultContainer
debugContainer
T@"SHLCloudContext",R,N
_defaultContainer
_manateeContainer
_debugContainer
_shazamLibraryZone
T@"CKContainer",R,N,V_debugContainer
T@"CKContainer",R,N,V_defaultContainer
T@"CKContainer",R,N,V_manateeContainer
T@"CKRecordZone",R,N,V_shazamLibraryZone
setZoneTransformer:
setCache:
_zoneTransformer
_cache
T@"SHLCloudModifyZoneTransformer",&,N,V_zoneTransformer
T@"SHLCloudLibraryCache",&,N,V_cache
record
recordType
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
encodedData
recordID
recordName
initWithIdentifier:metadata:
baseCloudRecordFromGroup:
initWithRecord:
metadata
initForReadingFromData:error:
finishDecoding
initWithRecordName:zoneID:
initWithRecordType:recordID:
libraryGroupFromCloudBackedItem:
cloudBackedItemFromLibraryGroup:
errorDictionary
errorCodeForResponseCode:
setErrorDictionary:
_errorDictionary
T@"NSDictionary",&,N,V_errorDictionary
T@"NSError",R,N
_zone
T@"CKRecordZone",R,N,V_zone
newSubscriptionForZoneID:
subscriptionID
modifySubscriptionsOperation
allValues
setSubscriptionsToSave:
setModifySubscriptionsCompletionBlock:
subscriptionsToSave
subscriptionIDsToDelete
initWithZoneID:subscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
setModifySubscriptionsOperation:
_modifySubscriptionsOperation
T@"CKModifySubscriptionsOperation",&,N,V_modifySubscriptionsOperation
isSatisfied
removeObjectAtIndex:
evaluatePreconditions:withCompletion:
_encrypted
_container
T@"CKContainer",R,N,V_container
encrypted
TB,R,N,GisEncrypted,V_encrypted
observeAccountChangedNotification
accountStatus
libraryStatusForAccountStatus:
initWithStatus:encrypted:
currentUserID
setIdentityToken:
updateUserRecordWithAccountInfo:completion:
fetchAccountInfoWithCompletionHandler:
mainQueue
updateAccountInfo
setCurrentUserID:
fetchUserRecordIDWithCompletion:
fetchUserRecordIDWithCompletionHandler:
standardUserDefaults
T@"NSString",C,N
T@"<SHMediaLibraryAccountListenerDelegate>",W,N,V_delegate
initWithScope:
currentCache
setContainerTransformer:
setCurrentCache:
_containerTransformer
_currentCache
T@"SHLSyncSessionConfiguration",&,N,V_configuration
T@"SHLCloudContainerTransformer",&,N,V_containerTransformer
T@"<SHLLibraryCache>",&,N,V_currentCache
initWithSubscription:
subscription
_subscription
T@"CKSubscription",R,N,V_subscription
validatedKey
keyWithValue:
setShazamKey:
setRecognitionIdentifier:
creationDate
setDate:
setSubtitle:
setProviderIdentifier:
providerName
setProviderName:
setLocation:
labels
containsObject:
addLabel:
_initWithIdentifier:metadata:labels:
initWithKey:
setCreationDate:
_initWithIdentifier:metadata:tracksToSave:
data
syncID
providerID
recognitionID
setArtworkURL:
setShazamURL:
group
latitude
longitude
initWithLatitude:longitude:
libraryTrackFromManagedTrack:
libraryGroupFromManagedGroup:
failedResult
accountStatusWithCompletionHandler:
doesCacheDirectoryExist
defaultManager
cacheDirectory
removeItemAtPath:error:
doesLegacyCacheDirectoryExist
legacyCacheDirectory
doesTaskFolderPathsExist
createTaskFolderPaths
inflightTaskPathForIdentifier:
failedTaskPathForIdentifier:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:options:error:
fileExistsAtPath:
tasksOfType:
inflightFolderPath
failedFolderPath
fileURLWithPath:
tasksForFolderPath:ofType:
taskForFilePath:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
lastPathComponent
removeItemAtURL:error:
dataWithContentsOfFile:
decodeObjectOfClasses:forKey:
doesZoneFolderPathExist
createZoneFolderPath
zonePathForIdentifier:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:isDirectory:
doesPrivateDatabaseFolderPathExist
createPrivateDatabaseFolderPathWithError:
currentDatabaseFolderPath
writeToken:toPath:error:
stringByAppendingPathComponent:
removeTokenAtPath:error:
bundleDirectory
zonesFolderPath
privateDatabaseFolderPath
containerID
rootDirectory
processID
privateDatabaseTransactionPath
undoTransactionWithError:
copyItemAtPath:toPath:error:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
createBundleDirectory
removeAllTasksOfType:
migrateWithError:
resetWithError:
needsMigration
startTransactionWithError:
commitTransactionWithError:
removeZoneIdentifier:error:
storeDatabaseToken:error:
storeZoneToken:forZoneIdentifier:error:
removeDatabaseTokenWithError:
removeTokenForZoneIdentifier:error:
databaseToken
zoneTokenForZoneIdentifier:
storeSubscription:forZoneIdentifier:error:
removeSubscriptionForZoneIdentifier:error:
_processID
_containerID
T@"NSString",R,C,N,V_processID
T@"NSString",R,C,N,V_containerID
fetchRequest
sortDescriptorWithKey:ascending:
setSortDescriptors:
setReturnsObjectsAsFaults:
setRelationshipKeyPathsForPrefetching:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
tracks
trackFetchedResultsControllerWithContext:
groupFetchedResultsControllerWithContext:
_record
T@"CKRecord",R,N,V_record
T@"NSString",R,N,V_name
endpoints
initWithConfiguration:suggestedLanguage:
matchURLPathForClientIdentifier:
lookupURLPathForClientIdentifier:
suggestedLanguage
_suggestedLanguage
_endpoints
T@"NSDictionary",R,N,V_endpoints
T@"NSString",R,C,N,V_suggestedLanguage
initWithResult:error:
_satisfied
satisfied
TB,R,N,GisSatisfied,V_satisfied
encryptedValuesByKey
initWithRecognitionIdentifier:shazamKey:metadata:
baseCloudRecordFromTrack:usingEncryption:
compoundIdentifier
setObject:forKeyedSubscript:
coordinate
initWithRecordID:action:
initWithScope:callingProcessIdentifier:
migrateCacheIfNeeded
syncSession
shouldPerformFetch
newFetchTaskWithStartCondition:
updateProgressWithTask:
newModifyTaskWithChanges:startCondition:
syncProgress
shl_markIndeterminate
store
syncActionForTaskType:
finishSession:
retryFailedTasks:
initWithOutcome:retryBlock:
retryHandler
retryTask:withContext:
taskWithFailedItemsAndCurrentChanges:
unionSet:
letterCharacterSet
addCharactersInString:
invertedSet
rangeOfCharacterFromSet:options:
totalUnitCount
addChild:withPendingUnitCount:
mainBundle
defaultLibrary
T@"SHLShazamLibrary",R,N
synchronizeWithStartCondition:
isValidCallingProcessIdentifier:
setSyncProgress:
setSyncSession:
setStore:
setRetryHandler:
setShouldPerformFetch:
_shouldPerformFetch
_syncProgress
_syncSession
_store
_retryHandler
T@"NSProgress",&,N,V_syncProgress
T@"SHLSyncSession",&,N,V_syncSession
T@"SHLLibraryStore",&,N,V_store
T@"SHLFailedTaskRetryHandler",&,N,V_retryHandler
TB,N,V_shouldPerformFetch
T@"<SHLShazamLibraryDelegate>",W,N,V_delegate
songItemDictionary
artworkURLFromDictionary:
dateFromString:
uppercaseString
initWithDictionary:
artworkSize
targetArtworkImageSizeFromOriginalSize:
URLWithSize:cropStyle:format:
initWithSongItemDictionary:
setSongItemDictionary:
_songItemDictionary
T@"NSDictionary",&,N,V_songItemDictionary
T@"NSDate",R,N
_songsDictionary
T@"NSDictionary",R,N,V_songsDictionary
notification
request
content
webURL
appClip
attemptOpeningAppDirectlyWithURL:completionHandler:
defaultWorkspace
openURL:configuration:completionHandler:
setFrontBoardOptions:
openWithURL:configuration:completionHandler:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
setAppClip:
_appClip
T@"SHAppClip",&,N,V_appClip
setFetchAllChanges:
databaseChangesOperation
setPreviousServerChangeToken:
previousServerChangeToken
initWithZoneID:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDWasPurgedBlock:
setFetchDatabaseChangesCompletionBlock:
setExpectedReceiveSize:
recordZoneChangesOperation
recordIDsFromCloudBackedZones:
setRecordZoneIDs:
configurationsByRecordZoneIDUsingCache:
setConfigurationsByRecordZoneID:
setRecordWasChangedBlock:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
session:task:didFetchGroups:
session:task:didFetchTracks:
session:task:didFetchDeletedItemsWithIdentifiers:
setFetchRecordZoneChangesCompletionBlock:
recordZoneIDs
setDatabaseChangesOperation:
setRecordZoneChangesOperation:
_databaseChangesOperation
_recordZoneChangesOperation
T@"CKFetchDatabaseChangesOperation",&,N,V_databaseChangesOperation
T@"CKFetchRecordZoneChangesOperation",&,N,V_recordZoneChangesOperation
manateeContainer
options
setApplicationBundleIdentifierOverrideForTCC:
sharedContainer
T@"CKContainer",R,N
executeModifyTask:
executeFetchTask:
schedulerFactory
sessionDispatchQueue
executeTask:
cleanupTransactionsWithError:
setSchedulerFactory:
setSessionDispatchQueue:
_schedulerFactory
_sessionDispatchQueue
T@"SHLTaskSchedulerFactory",&,N,V_schedulerFactory
T@"<SHLLocalStateTransactionable>",&,N,V_transaction
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionDispatchQueue
T@"<SHLSyncSessionDelegate>",W,N,V_delegate
initWithToken:
serverChangeToken
_serverChangeToken
T@"CKServerChangeToken",R,N,V_serverChangeToken
modifyRecordZonesOperation
recordZonesFromCloudBackedZones:
setRecordZonesToSave:
objectForKey:
setModifyRecordZonesCompletionBlock:
recordZonesToSave
recordZoneIDsToDelete
setModifyRecordZonesOperation:
_modifyRecordZonesOperation
T@"CKModifyRecordZonesOperation",&,N,V_modifyRecordZonesOperation
initWithUpdatedTrack:localTrack:
updatedTrack
localTrack
_updatedTrack
_localTrack
T@"SHMediaLibraryTrack",R,N,V_updatedTrack
T@"SHTrackMO",R,N,V_localTrack
initWithUpdatedGroup:localGroup:
updatedGroup
localGroup
_updatedGroup
_localGroup
T@"SHMediaLibraryGroup",R,N,V_updatedGroup
T@"SHGroupMO",R,N,V_localGroup
locallyFoundTracks
missingFromLocalStoreTracks
locallyFoundGroups
missingFromLocalStoreGroups
_locallyFoundTracks
_missingFromLocalStoreTracks
_locallyFoundGroups
_missingFromLocalStoreGroups
T@"NSMutableArray",R,N,V_locallyFoundTracks
T@"NSMutableArray",R,N,V_missingFromLocalStoreTracks
T@"NSMutableArray",R,N,V_locallyFoundGroups
T@"NSMutableArray",R,N,V_missingFromLocalStoreGroups
setIsRunning:
updateSnapshotWithAttribution:
productName
setLibraryController:
commonInitWithIdentifier:metadata:tracksToSave:
validIdentifier:
isEqualGroup:
T@"SHLLibraryItemMetadata",R,N
setTracksToSave:
_metadata
_tracksToSave
T@"NSMutableArray",&,N,V_tracksToSave
T@"SHLLibraryItemMetadata",R,N,V_metadata
isShazamKeyValid:
decimalDigitCharacterSet
rangeOfCharacterFromSet:
longLongValue
numberWithLongLong:
unsignedIntegerValue
_validatedKey
T@"NSString",R,N,V_validatedKey
outcome
retryBlock
_outcome
_retryBlock
T@"SHLTaskOutcome",R,N,V_outcome
T@?,R,N,V_retryBlock
retryTaskWithTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
sortUsingComparator:
_init
setGroupsToModify:
setTracksToModify:
updateProgress
decodeInt64ForKey:
encodeInt64:forKey:
_tracksToModify
_groupsToModify
T@"SHLLibraryBatch",&,N,V_tracksToModify
T@"SHLLibraryBatch",&,N,V_groupsToModify
T@"<SHLSyncSessionModifyTaskDelegate>",W,N,V_delegate
loadStoreWithType:
initWithContentsOfURL:
initWithName:managedObjectModel:
setPersistentStoreDescriptions:
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
mergeByPropertyStoreTrumpMergePolicy
setMergePolicy:
managedObjectContext
tracksFetchedResultsController
performFetch:
groupsFetchedResultsController
performBlockAndWait:
setIncludesPendingChanges:
resultsLimit
setFetchLimit:
predicateWithFormat:
ascending
fetchManagedObjectForRequest:withPredicate:context:
andPredicateWithSubpredicates:
updateReportForLibraryTrack:
setData:
createMetadataWithData:track:group:context:
updateManagedTrack:withUpdatedTrack:
insertNewObjectForEntityForName:inManagedObjectContext:
associateTrack:toGroupWithIdentifier:context:
predicateWithBlock:
filteredArrayUsingPredicate:
updateReportForLibraryGroups:
setSyncID:
deleteObject:
persistentContainer
persistentStoreDescriptions
initWithFetchRequest:
persistentStoreCoordinator
executeRequest:withContext:error:
deleteAllItemsWithFetchRequest:completionHandler:
reset
save:
setPredicate:
executeFetchRequest:error:
setTrack:
setRecognitionID:
setProviderID:
setLatitude:
setLongitude:
setLabels:
libraryItemFromManagedObject:
libraryChangeTypeForFetchedResultsChangeType:
initWithLibraryItem:changeType:indexPath:
entityForName:inManagedObjectContext:
entity
isKindOfEntity:
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
fetchRecentLibraryGroupsWithLimit:
setPersistentContainer:
setManagedObjectContext:
_tracksFetchedResultsController
_groupsFetchedResultsController
_persistentContainer
_managedObjectContext
T@"NSPersistentContainer",&,N,V_persistentContainer
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSFetchedResultsController",R,N,V_tracksFetchedResultsController
T@"NSFetchedResultsController",R,N,V_groupsFetchedResultsController
T@"<SHMediaLibraryDataStoreDelegate>",W,N,V_delegate
loadEndpointForClientIdentifier:clientType:endpointType:installationID:callback:
storefront
updateTokensForEndpoint:language:storefront:installationID:
_storefront
T@"SHStorefront",R,N,V_storefront
taskTransformer
scheduleModifyTask:
setTaskTransformer:
_taskTransformer
T@"SHLCloudModifyTaskTransformer",&,N,V_taskTransformer
attachmentWithIdentifier:URL:options:error:
downloadImageURL:completionHandler:
sharedSession
processInfo
globallyUniqueString
temporaryDirectory
URLByAppendingPathComponent:
moveItemAtURL:toURL:error:
downloadTaskWithURL:completionHandler:
fetchRequestWithEntityName:
T@"SHMetadataMO",&,D,N
T@"NSSet",&,D,N
T@"NSData",&,D,N
T@"SHGroupMO",&,D,N
track
T@"SHTrackMO",&,D,N
T@"NSURL",C,D,N
T@"NSDate",C,D,N
T@"NSArray",&,D,N
Td,D,N
v8@?0
core
com.apple.ShazamKit
com.apple.shazamd
v16@?0@"NSError"8
com.apple.shazamd.transaction
SHAZAMKIT_MICROPHONE_ACCESS_ATTRIBUTION
artistName
name
shazamUrl
relationships
meta
matchOffset
speedSkew
frequencySkew
artwork
width
height
v24@?0@"SHDefaultConfigurationValues"8@"NSError"16
v24@?0@"SHCampaignTokens"8@"NSError"16
v16@?0@"SHServerResponseContext"8
v24@?0@"SHTokenizedURL"8@"NSError"16
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
POST
signature
data:audio/vnd.shazam.sig;base64,%@
audioSource
startDate
sessionDurationInSeconds
application/json
Content-Type
results
resources
errors
data
songs
shazam-songs
lyrics
music-videos
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
com.apple.ShazamNotifications
NOMATCH
v16@?0@"UNNotificationContent"8
com.apple.shazamd.audiomanager.dispatch
SHRecordingServiceStarted
SHRecordingServiceStopped
SHRecordingServiceTapClosed
com.apple.ShazamKit.recordingService.audioManager.dispatch
v20@?0B8@"NSError"12
com.apple.ShazamKit.serverResponseContextBuilder.dispatch
ShazamLibrary
momd
sqlite
com.apple.ShazamNotifications.main-thread
com.apple.ShazamNotifications.category.actionable
com.apple.ShazamNotifications.category.default
v16@?0@"UNNotificationAttachment"8
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_SUBTITLE
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_BODY
en-US
Shazam
language-tag
shazam-feature-flags
shazam-endpoints
shazam-media-api-host
shazamkit-media-api-host
shazam-campaign-tokens
shazam-default-values
v28@?0@8B16@"NSError"20
com.apple.shazamd.library.dispatch-queue
com.apple.shazamd.library.sync-queue
v24@?0@"SHMediaLibraryInfo"8@"NSError"16
v24@?0q8q16
v16@?0q8
com.apple.ShazamKit.shazamaudiorecorder.dispatch
SHMediaLibraryLabelName
platform
matches
retry
retryInMilliseconds
recordingIntermissionInMilliseconds
{deviceid}
{sessionid}
{language}
{storefront}
{shazamid}
{itsct}
{year}
{weekOfYear}
{geohash}
https
SHRecognitionServiceFoundMatch
match
SHRecognitionServiceNoMatch
unknown
external
internal
v32@?0@"AVAudioPCMBuffer"8@"AVAudioTime"16@"NSError"24
%@ is not a valid client identifier
-[_initWithInstallationID:] should not be used on this class
attributes
You don't have permission to fetch local tracks for %@
v16@?0@"NSNotification"8
recordingIntermission
com.apple.private.shazamkit.allow-external-audio-recording
com.apple.private.shazamkit.allow-internal-audio-recording
com.apple.private.tcc.allow
kTCCServiceMediaLibrary
kTCCServiceMicrophone
com.apple.private.ShazamKit
com.apple.Shazam.MusicRecognition.result
Match
Source
@"NSDictionary"8@?0
@distinctUnionOfObjects.%@
Should not try to save and delete tracks at the same time: %@
Should not try to save and delete groups at the same time: %@
T: +%lu -%lu G: +%lu -%lu
itsct
bglsk
%@.%@
ttml
SHLLibraryTrackRecognitionIdentifierKey
SHLLibraryTrackShazamKey
_[T]_
%@ %@ is not a valid recognition identifier and key
%@%@%@
v24@?0@"CKAccountInfo"8@"NSError"16
Track with identifier %@ is already associated to a group (%@), try removing it before.
Track with identifier %@ cannot be removed, try adding it before.
SHLSyncSessionFetchTaskIdentifier
SHLSyncSessionFetchTaskFetchType
SHLSyncSessionFetchTaskSyncTrigger
com.shazam.ShazamLibrary.operation-queue
v24@?0@"NSString"8@"NSError"16
com.shazam.library
v32@?0@"CKRecordID"8@"NSError"16^B24
No account logged in on this device.
Logged in account is restricted.
Logged in account is not a two-factor auth account with at least one passcode enabled device.
Missing encryption identity.
Network is unavailable.
Storage is full.
The content of your Shazam Library was deleted.
The content of your Shazam Library was purged.
Failed to sync your Shazam Library.
Shazam Library saves to the user's private database, which requires an authenticated session.
Parental Controls / Device Management has denied access to account credentials.
A device to device encryption requires an account with two-factor auth and a device with passcode enabled.
Encryption key has been permanently lost.
There's no network available to perform any networking tasks.
The user has reached the storage quota.
All contents have been removed.
All contents have been removed, usually through the Settings UI.
A possible internal sync error, check underlying error for a detailed description.
The user should manually log in.
Switch to an account that is not restricted by the system.
Turn on a passcode on the device and enable two-factor auth on the current iCloud account.
Non-recoverable. The user's local data should be automatically re-sync to Shazam Library.
Wait for network to become available and retry sync later.
The user should manually remove data or upgrade storage plans.
Non-recoverable. The user should choose to remove local data or re-sync to Shazam Library.
Initiate a manual sync later.
You must provide a valid encoded data.
SHLLibraryTrackIdentifier
SHLLibraryTrackRecognitionIdentifier
SHLLibraryTrackMetadata
SHLLibraryTrackProviderIdentifier
SHLLibraryTrackProviderName
SHLLibraryTrackDate
SHLLibraryTrackTitle
SHLLibraryTrackSubtitle
SHLLibraryTrackLocation
SHLLibraryTrackCompoundIdentifierKey
SHLLibraryTrackAssociatedGroupIdentifier
SHLLibraryTrackLibrarySet
CFBundleName
%@_ios
You must have a valid Shazam key to create a library item.
%@ is not a valid recognition identifier.
v16@?0@"NSArray"8
v24@?0@"CPSClipMetadata"8@"NSError"16
com.apple.ShazamNotifications.user-info.payload
com.apple.ShazamNotifications.user-info.media-item
com.apple.ShazamNotifications.user-info.attribution
com.apple.ShazamNotifications.user-info.apple-music
com.apple.aps.shazamd
com.apple.aps.shazamd.queue
ModifyRecords
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
%@_%@
libraryBatchInsertions
libraryBatchDeletions
com.apple.shazam
com.apple.shazam.secure
iCloud.com.shazam.Shazam
shazam-library
Group
detail
code
sh.001
sh.002
ModifySubscriptions
v32@?0@"NSString"8@"NSError"16^B24
Library
v16@?0@"SHLTaskPreconditionResult"8
SHLibraryAvailabilityListenerUserID
v24@?0@"CKRecordID"8@"NSError"16
A valid Shazam track requires a ShazamID. Library item (%@) is missing a ShazamID.
v24@?0q8@"NSError"16
com.apple.shazamlibrary.cloud
inflighttasks
failedtasks
privatedatabase
privatedatabasetransaction
zones
token
zonesubscription
SHFetchedResultsControllerTrackCacheName
SHFetchedResultsControllerGroupCacheName
SHLLibraryLabelName
lookup
Track
RecognitionIdentifier
ShazamKey
ProviderIdentifier
ProviderName
Date
Title
Subtitle
Location
AssociatedGroupIdentifier
Labels
InitialFetch
InitialUpload
UserAction
RemotePush
Migration
albumName
isrc
contentRating
genreNames
releaseDate
public-lyrics
EXPLICIT
v12@?0B8
v24@?0@"NSDictionary"8@"NSError"16
FetchDatabaseChanges
FetchZoneChanges
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
com.apple.musicrecognition
com.shazam.ShazamLibrary.syncSession.dispatchQueue
You must conform to the protocol of the modify task you're trying to add.
You must conform to the protocol of the fetch task you're trying to add.
ModifyZones
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
SHLLibraryGroupIdentifier
SHLLibraryGroupMetadata
SHLLibraryGroupTracksToSave
%@ is not a valid identifier.
SHLSyncSessionModifyTaskTracksToModify
SHLSyncSessionModifyTaskGroupsToModify
SHLSyncSessionModifyTaskIdentifier
SHLSyncSessionModifyTaskProgress
SHLSyncSessionModifyTaskRetryCount
SHLSyncSessionModifyTaskSyncTrigger
q24@?0@"SHLLibraryBatch"8@"SHLLibraryBatch"16
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
%@ context
%K == %@
%@ != nil
%@ == nil
%K IN %@
syncID
B24@?0@"SHTrackMO"8@"NSDictionary"16
@unionOfObjects.%@.%@
B24@?0@"SHGroupMO"8@"NSDictionary"16
v24@?0@"NSArray"8@"NSError"16
v16@?0@"NSString"8
v24@?0@"SHEndpoints"8@"NSError"16
v24@?0@"SHHost"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
SHGroupMO
SHMetadataMO
SHTrackMO
XPC connection interrupted from %@:%i
XPC connection invalidated from %@:%i
Deallocating the XPC Service
Failed to setup the remote proxy %@
Starting transaction
Ending transaction
Starting watchdog timer for %f seconds
Stopping watchdog timer
XPC Service stopping after final service %@ finished
XPC Service started running %@
Failed to set tmp dir suffix
Shazam service matching signature of duration %f with data of length %lu at %@
Received network response, no data %@
Server response parser: No response %@
Server response parser: Error, %@
Server response parser: Error, returning results, recording intermission %f, retry %f
Server response parser: Returning results, recording intermission %f, retry %f
Server response parser: has match %@
Server response parser: has no match
Server response parser: has no media items
Failed to encode network request %@
Failed to fetch data task %@
Sending no match notification
Sending match notification
Failed to schedule notification: %@
Deallocating audio session manager
Register observers
Remove observers
Deactivating audio session
Failed to deactivate AVAudioSession: %@
Audio interruption started, stopping recognition
Audio interruption ended
Media services lost notification - stopping recognition
Media services reset notification - restarting recognition
Activating audio session
Failed to set category on AVAudioSession: %@
Failed to enable haptics while recording: %@
Failed to set mode: %@
Failed to decouple IO AVAudioSession: %@
Failed to activate AVAudioSession: %@
handleAudioSessionRouteChange: %@
Deallocating recording service
Internal session support: %d headphones connected: %d
Using internal recognition session as the preferred session
Using external recognition session as the preferred session
Failed to stop recorder with error: %@
Unable to resume recognition after audio interruption: %@
Failed to start recorder %@
Failed to start recorders with error: %@
Told not to resume after audio interruption ended
Failed to create dispatch group while loading context
Failed to add default values to response context %@
Failed to add campaign token to response context %@
Unable to load Application Support directory: %@
Parent directory of persistent store url doesn't exist, creating one now
Failed to create persistent store directory: %@
Persistent store url missing, fallback to in memory store type
Populating remote configuration...
Fetching feature flags...
Feature flags fetch complete with value %@ error %@
Fetching endpoints...
Endpoint fetch complete with value %@ error %@
Fetching hosts...
Host fetch complete with value %@ error %@
Fetching campaign tokens...
Campaign tokens fetch complete with value %@ error %@
Fetching default values...
Default values fetch complete with value %@ error %@
Processed %lu changes before sync. Inserted %ld & Updated %ld local group entries
Processed %lu changes before sync. Inserted %ld & Updated %ld local track entries
Processed %lu deletions before sync. Deleted %ld local entries
Failed to persist library changes with error %@
iCloud account is not available or device to device encryption is not supported, skipping remote sync
Syncronize changes with changeset: %@
Processed %lu returned track changes. Inserted %ld & Updated %ld local entries
Processed %lu returned group changes. Inserted %ld & Updated %ld local entries
Processed %lu returned deletions. Deleted %ld local entries
Failed to persist sync changes with error: %@
Clear all local data and cache sync status
Deallocating SHAudioRecorder
Failed to create a new audio queue input with error %@
Failed to set audio queue property
Failed to add isRunning property listener
Failed to start audio queue, retry one more time
Failed to stop audio queue %@
Failed to remove isRunning property listener %@
Failed to dispose audio queue %@
Failed to start audio queue after a retry
Audio queue <%p> running state has changed
Recognition Service already recognizing
startRecognition of single signature
startRecognition based upon deadline %@
Tagging finish conditions NOT met - continuing
Tagging finish conditions: timeOut %d, oneAttempt: %d, foundMatch: %d, signatureMatch: %d, failed %d
Not recognizing so returning from stop
Deallocating the Shazam Service
Current bundle id is not entitled to use the library SPI
Missing bundle identifier, failed to start library service
Shazam service stop called
Validating entitlements failed with missing entitlements %@, stopping
Service %@ changed running state to %d
Client does not have entitlement: %@
Sent signal event: %@
Failed to parse lyrics song info %@
Failed to fetch account info %@
Account supports device to device encryption
Watchdog timer fired
<task: %{public}@ %@> Local subscription for <zone: %{public}@> does not exist, creating one now
<task: %{public}@ %@> <zone: %{public}@> does not exist, so we are attempting to create one with a subscription
<task: %{public}@ %@> is scheduled
Requesting app clip metadata for url %@
Error requesting App Clip metadata %@
Requesting app clip for url %@
Error in requestClipWithCompletion %@ clipIsAvailable %i
App clip request was successful
Failed fetching media item, bundle identifier missing
Fetching media item at %@
Error fetching media item %@
Unable to unarchive notification payload data %@ with error %@
Received public token '%@' on connection %@
APS push received for topic: '%@'
Ignoring APS push message, not a CloudKit update
Failed to complete modify operation. Error %@
iCloud account has changed, updating current user account id
iCloud account is available
No iCloud account available
iCloud account is restricted
iCloud account is temporarily unavailable
Failed to retrieve iCloud account information with error %@
Sync started with startCondition: %{public}@
Failed to complete <task: %{public}@ %@> and not retrying due to <error: %@>
Finished <task: %{public}@ %@> and sync complete
Finished <task: %{public}@ %@>, still syncing
Client called Library completion with success = %d for <task: %{public}@ %@>
Error finishing transaction for <task: %{public}@ %@> %@
Finished handling transaction for <task: %{public}@ %@>
Uploaded %lu modified tracks
Uploaded %lu modified groups
Deleted %lu items
Fetched %lu tracks
Fetched %lu groups
Fetched %lu deleted items
Current local cache requires migration
Successfully migrated local cache
Failed to migrate current local cache %@
Received notification response %@ for request %@ with content %@
No webURL provided for payload %@
Attempting to open app directly with url %@
failed to open app, likely not installed - requesting App Clip
Falling back to launching url %@ in Safari
Failed to open url with error %@
Opened URL %@ with result %@
LSAppLink openWithURL completed with success %i error %@
Using <token: %@> for database fetch
<zone: %@> does not exist locally, saving now
<zone: %@> was deleted
<zone: %@> was purged
Updated database <token: %@>
Failed to fetch changes for record (%@)
Updated <zone: %{public}@> token: %@>
<zone: %{public}@> token has expired. Removing saved token
Using <zone changes configuration: %@> for fetch
Failed to schedule <task: %{public}@ %@> pre-conditions were not satisifed
Failed to complete zone operation. Error %@
Retrying <task: %{public}@ %@> after %f seconds <error: %@>
Retrying <task: %{public}@ %@> immediately <error: %@>
Failed to load description %@
Failed to observe local track changes: %@
Failed to observe local group changes: %@
Updating existing entries for %lu library track(s)
Creating entries for %lu library track(s)
Updating existing entries for %lu Library Group IDs: %@
Creating entries for %lu library group(s)
Failed to purge local group objects: %@
Failed to purge local track objects: %@
Failed to delete sync metadata: %@
Failed to fetch request %{public}@
Persisting a Track with an associated Group ID, but there is no group saved locally. Will fallback to creation.
Failed to convert %@ to %@
Missing or invalid host %@
Missing or invalid match endpoint %@
Fetching endpoint with storefront %@
<task: %{public}@ %@> <zone: %{public}@> does not exist locally, so we are creating one
SHServer
NSXPCListenerDelegate
NSObject
SHXPCServiceProxy
SHMatcher
SHMediaLibrary
SHMediaLibrarySync
SHMediaLibraryQuery
SHMediaItemProvider
SHEventSignalling
SHXPCRemoteDelegate
SHMatcherDelegate
SHMediaLibrarySyncDelegate
SHXPCConnection
SHShazamServiceDelegate
SHShazamResponseItem
SHServerShazamResponse
SHServerResponseContext
SHAudioTapService
SHShazamServiceMatcher
SHServerMatchResponseParser
SHServerGetResponseParser
SHServerResourcesResponse
SHAMSEndpointRequester
SHNetworkRecognitionRequester
SHNotificationService
SHAudioSessionManager
SHRecordingService
SHAudioRecorderDelegate
SHAudioSessionManagerDelegate
SHServerResponseContextBuilder
SHMediaLibraryPersistentConfiguration
SHMediaLibraryContext
SHNotificationContentProvider
SHRemoteConfiguration
SHServerDataResponse
Chunking
SHMediaLibraryController
SHLShazamLibraryDelegate
SHMediaLibraryAccountListenerDelegate
SHMediaLibraryDataStoreDelegate
SHAudioTap
SHAudioRecorder
SHMediaLibraryLabel
SHServerResultsResponse
SHTokenizedURL
NSCopying
SHRecognitionService
SHSessionDelegate
SHService
SHShazamServiceCatalog
SHLCloudBackedOperation
SHMusicVideoResponseItem
SHServerMusicVideoResponse
SHShazamService
SHServiceDelegate
SHFeatureFlags
SHDefaultConfigurationValues
SHHost
SHLSyncSessionConfiguration
SHEntitlements
SHAnalytics
SHLLibraryChangeset
SHLTaskOutcome
SHCampaignTokens
SHEventSignalService
SHLyricsResponseItem
SHServerLyricsResponse
SHLLibraryTrackCompoundIdentifier
SHLCloudEncryptionPrecondition
SHLTaskPrecondition
SHLMutableLibraryGroup
SHLSyncSessionFetchTask
SHLSyncSessionTask
NSSecureCoding
NSCoding
SHLOperationQueue
SHStorefront
SHLError
SHLLibraryItemMetadata
SHLMutableLibraryTrack
SHWatchdogTimer
SHLLibraryTrack
SHLModifyTaskRecovery
SHLCloudFetchTaskScheduler
SHLFetchTaskScheduler
SHLTaskScheduler
SHAppClip
SHMediaItemService
SHNotificationPayload
SHAPSConnection
APSConnectionDelegate
SHLCloudContainerTransformer
SHLTaskSchedulerFactory
SHLCloudModifyTaskTransformer
SHLLibraryBatch
SHLCloudContext
SHLCloudTaskScheduler
SHLCloudGroupTransformer
SHServerErrorResponse
SHLCloudBackedZone
SHLCloudSubscriptionTransformer
SHLTaskPreconditionEvaluator
SHLCloudBackedContainer
SHMediaLibraryAccountListener
SHLLibraryStore
SHLCloudBackedSubscription
SHMediaLibraryItemMapper
SHLCloudAccountStatusPrecondition
SHLCloudLibraryCache
SHLLibraryCache
SHLLocalStateTransactionable
SHFetchedResultsControllerFactory
SHLCloudBackedItem
SHLLibraryLabel
SHEndpoints
SHLTaskPreconditionResult
SHLCloudTrackTransformer
SHLShazamLibrary
SHSongsResponseItem
SHServerSongsResponse
SHNotificationCenterDelegate
SHAppClipDelegate
UNUserNotificationCenterDelegate
SHLCloudFetchTaskTransformer
SHCloudContainer
SHLSyncSessionModifyTaskDelegate
SHLSyncSessionTaskDelegate
SHLSyncSessionDelegate
SHLSyncSessionFetchTaskDelegate
SHLSyncSession
SHLCloudBackedToken
SHLCloudModifyZoneTransformer
SHUpdatedTrackLocalTrackPair
SHUpdatedGroupLocalGroupPair
SHMediaLibraryUpdateReport
SHMediaLibrarySyncService
SHLLibraryGroup
SHLLibraryItem
NSMutableCopying
SHLShazamKey
ShazamLibrary
SHLTaskRetryContext
SHLFailedTaskRetryHandler
SHLSyncSessionModifyTask
SHMediaLibraryDataStore
NSFetchedResultsControllerDelegate
SHMediaLibraryQueryService
SHShazamServiceURLBuilder
SHLCloudModifyTaskScheduler
SHLModifyTaskScheduler
SHNotificationAttachmentProvider
SHGroupMO
CoreDataProperties
SHMetadataMO
SHTrackMO
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableArray"
@"SHAPSConnection"
@"NSXPCListener"
v24@0:8@16
v24@0:8@"SHMatcherRequest"16
@"<SHMatcherDelegate>"16@0:8
v24@0:8@"<SHMatcherDelegate>"16
v32@0:8@16@24
v32@0:8@"SHMediaLibrarySnapshot"16@"NSString"24
@"<SHMediaLibrarySyncDelegate>"16@0:8
v24@0:8@"<SHMediaLibrarySyncDelegate>"16
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"SHMediaLibraryInfo"@"NSError">16
v32@0:8@"SHMediaLibraryQueryParameters"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SHMediaItem"@"NSError">24
v24@0:8@"NSString"16
v32@0:8@16q24
v32@0:8@"<SHMatcher>"16@"SHMatcherResponse"24
v32@0:8@"<SHMatcher>"16q24
v40@0:8@16@24@32
v24@0:8@"<SHMediaLibrarySync>"16
v32@0:8@"<SHMediaLibrarySync>"16@"SHMediaLibrarySnapshot"24
v40@0:8@"<SHMediaLibrarySync>"16@"NSError"24@"NSArray"32
v32@0:8@"SHShazamService"16@"<SHService>"24
@24@0:8@16
v32@0:8d16@?24
v20@0:8B16
@"SHWatchdogTimer"
@"NSXPCInterface"
@"<SHXPCRemoteDelegate>"
@"SHAttribution"
@"NSString"
@"NSXPCConnection"
@"NSObject<OS_os_transaction>"
@"NSDate"
v24@0:8d16
@"SHRecordingService"
@32@0:8@16@24
@"<SHMatcherDelegate>"
@"NSISO8601DateFormatter"
@"SHShazamServiceCatalog"
@"<SHNetworkRecognitionRequester>"
@40@0:8@16@24@32
@48@0:8@16@24@32@40
@40@0:8@16@24^@32
@"NSDictionary"
v32@0:8@"NSURLRequest"16@?<v@?@"NSData"@"NSURLResponse"@"NSError">24
@"AMSMediaRequestEncoder"
@"AMSURLSession"
@"SHMatchedMediaItem"
@"NSUUID"
@"SHNotificationContentProvider"
@"<SHAudioSessionManagerDelegate>"
v40@0:8@"<SHAudioRecorder>"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
v32@0:8@16Q24
v32@0:8@"SHAudioSessionManager"16Q24
B24@0:8q16
v24@0:8Q16
@"SHAudioSessionManager"
@"NSArray"
@"NSObject<OS_dispatch_queue>"
@"<SHMediaLibrarySyncDelegate>"
@"SHMediaLibrarySnapshot"
@"NSError"
v32@0:8q16@?24
@"SHFeatureFlags"
@"AMSBag"
@"AMSBagValue"
v48@0:8@16@24@32q40
v24@0:8@"SHLShazamLibrary"16
v40@0:8@"SHLShazamLibrary"16@"NSArray"24q32
v48@0:8@"SHLShazamLibrary"16@"NSError"24@"NSArray"32q40
v32@0:8@"SHLShazamLibrary"16@?<v@?B>24
v32@0:8@"SHMediaLibraryDataStore"16@"SHMediaLibraryChange"24
@"SHLShazamLibrary"
@"SHMediaLibraryDataStore"
@"NSObject<OS_dispatch_group>"
@"SHMediaLibraryContext"
@"SHMediaLibraryAccountListener"
@?16@0:8
@40@0:8^v16Q24@32
B24@0:8^@16
q16@0:8
v24@0:8@?<v@?B@"NSError">16
@"<SHAudioRecorderDelegate>"16@0:8
v24@0:8@"<SHAudioRecorderDelegate>"16
@24@0:8q16
B28@0:8i16^@20
v24@0:8q16
^{OpaqueAudioQueue=}16@0:8
v24@0:8^{OpaqueAudioQueue=}16
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
[3^{AudioQueueBuffer}]
@"<SHAudioRecorderDelegate>"
^{OpaqueAudioQueue=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@24@0:8^{_NSZone=}16
B32@0:8q16@24
@"NSMutableDictionary"
v32@0:8@"SHSession"16@"SHMatch"24
v40@0:8@"SHSession"16@"SHSignature"24@"NSError"32
d16@0:8
@"NSArray"16@0:8
@"<SHServiceDelegate>"16@0:8
v24@0:8@"<SHServiceDelegate>"16
@32@0:8@16q24
v40@0:8@16@24q32
B40@0:8@16@24q32
@"<SHServiceDelegate>"
@"SHSession"
@"SHAudioTap"
@"SHMatcherRequest"
@40@0:8@16q24@32
@"CKDatabaseOperation"
v28@0:8@16B24
v28@0:8@"<SHService>"16B24
@"SHRemoteConfiguration"24@0:8@"<SHService>"16
@"SHRecognitionService"
@"SHNotificationService"
@"SHAudioTapService"
@"SHMediaLibrarySyncService"
@"SHMediaLibraryQueryService"
@"SHMediaItemService"
@"SHEventSignalService"
@"<SHShazamServiceDelegate>"
@"SHEntitlements"
@40@0:8q16q24@32
v24@0:8^{__SecTask=}16
B40@0:8@16@24@32
^v32@0:8@16^{__SecTask=}24
B32@0:8@16^{__SecTask=}24
B40@0:8@16@24^{__SecTask=}32
@"NSMutableSet"
@24@0:8d16
@"MSVLyricsSongInfo"
@"SHLShazamKey"
v24@0:8@?<v@?@"SHLTaskPreconditionResult">16
@"SHLCloudBackedContainer"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSProgress"16@0:8
@"SHLSyncSession"16@0:8
v24@0:8@"SHLSyncSession"16
@"NSProgress"
@"SHLSyncSession"
@"<SHLSyncSessionFetchTaskDelegate>"
@"NSOperationQueue"
@"NSOperation"
@"SKCloudServiceController"
@32@0:8q16@24
d24@0:8@16
q24@0:8@16
@"NSData"
@"NSObject<OS_dispatch_source>"
@"CLLocation"
@"SHLLibraryTrackCompoundIdentifier"
@56@0:8@16@24@32@40@48
@"SHLSyncSessionModifyTask"
v24@0:8@"SHLSyncSessionFetchTask"16
@"SHLCloudFetchTaskTransformer"
@"SHLCloudSubscriptionTransformer"
@"<SHAppClipDelegate>"
@"SHShazamServiceURLBuilder"
@"SHServerResponseContextBuilder"
@"SHMediaItem"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"APSConnection"
@"SHMediaLibraryController"
@"SHLSyncSessionConfiguration"
@"CKModifyRecordsOperation"
@"NSSet"
@"SHLCloudModifyZoneTransformer"
@"SHLCloudLibraryCache"
@"CKRecordZone"
@"CKModifySubscriptionsOperation"
@"CKContainer"
@"<SHMediaLibraryAccountListenerDelegate>"
@"SHLCloudContainerTransformer"
@"<SHLLibraryCache>"
@"CKSubscription"
B40@0:8@16q24^@32
B40@0:8q16@24^@32
B40@0:8@"<SHLSyncSessionTask>"16q24^@32
B40@0:8q16@"NSString"24^@32
@"NSArray"24@0:8q16
@"<SHLSyncSessionTask>"32@0:8q16@"NSString"24
B32@0:8@16^@24
B40@0:8@16@24^@32
@"CKRecord"
@28@0:8B16@20
@28@0:8@16B24
q24@0:8q16
@"<SHLShazamLibraryDelegate>"
@"SHLLibraryStore"
@"SHLFailedTaskRetryHandler"
{CGSize=dd}32@0:8{CGSize=dd}16
v40@0:8@"SHAppClip"16@"NSURL"24@"NSError"32
v40@0:8@16@24@?32
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"SHAppClip"
@40@0:8@16@24@?32
@"CKFetchDatabaseChangesOperation"
@"CKFetchRecordZoneChangesOperation"
v40@0:8@"SHLSyncSession"16@"<SHLSyncSessionTask>"24@"SHLTaskOutcome"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionModifyTask"24@"NSArray"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionFetchTask"24@"NSArray"32
@"<SHLSyncSessionDelegate>"
@"SHLTaskSchedulerFactory"
@"<SHLLocalStateTransactionable>"
@"CKServerChangeToken"
@"CKModifyRecordZonesOperation"
@"SHMediaLibraryTrack"
@"SHTrackMO"
@"SHMediaLibraryGroup"
@"SHGroupMO"
@24@0:8@"NSString"16
@32@0:8@"NSString"16@"SHLLibraryItemMetadata"24
@"SHLLibraryItemMetadata"16@0:8
@"SHLLibraryItemMetadata"
@32@0:8@16@?24
@"SHLTaskOutcome"
@"<SHLSyncSessionModifyTaskDelegate>"
@"SHLLibraryBatch"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
q24@0:8Q16
@"NSFetchedResultsController"
@"<SHMediaLibraryDataStoreDelegate>"
@"NSPersistentContainer"
@"NSManagedObjectContext"
v40@0:8@16q24@?32
v48@0:8@16q24@32@?40
v56@0:8@16q24q32@40@?48
@"SHStorefront"
v24@0:8@"SHLSyncSessionModifyTask"16
@"SHLCloudModifyTaskTransformer"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241128</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>shazamd</string>
<key>CFBundleExecutable</key>
<string>shazamd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.shazamd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>shazamd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>19E232</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>15.4</string>
<key>DTSDKBuild</key>
<string>19E232</string>
<key>DTSDKName</key>
<string>iphonesimulator15.4.internal</string>
<key>DTXcode</key>
<string>1330</string>
<key>DTXcodeBuild</key>
<string>13E6049a</string>
<key>MinimumOSVersion</key>
<string>15.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.shazamd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.shazam.secure</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.ClipServices</key>
<true/>
<key>com.apple.private.ShazamKit</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/Frameworks/ShazamKit.framework/shazamd</string>
</dict>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.shazam.secure</key>
<string>com.apple.shazam.secure</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.shazamkit.controlcenter.ShazamModule</string>
</array>
<key>com.apple.private.mediasafetynet.exception.shazam</key>
<true/>
<key>com.apple.private.shazamkit.persistence</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.ShazamNotifications</string>
</array>
<key>com.apple.security.device.audio-input</key>
<true/>
<key>com.apple.security.device.microphone</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Application Support/com.apple.shazamd/</string>
<string>/Library/Caches/com.apple.shazamd/</string>
<string>/Library/Caches/com.apple.shazam.secure/</string>
<string>/Library/Caches/com.apple.shazamlibrary.cloud/</string>
<string>/Library/HTTPStorages/com.apple.shazamd/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.ClipServices.clipserviced</string>
<string>com.apple.audio.AudioQueueServer</string>
<string>com.apple.controlcenter.remoteservice</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.systemstatus.activityattribution</string>
<string>com.apple.mediasafetynet.exceptions</string>
<string>com.apple.powerlog.plxpclogger.xpc</string>
<string>com.apple.apsd</string>
<string>com.apple.shazamd.persistence</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.ShazamKit</string>
<string>com.apple.shazamd</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.play-media</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.shazamd</string>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
@(#)PROGRAM:shazamd  PROJECT:ShazamKit-1
 -Fn
init
array
initWithMachServiceName:
setDelegate:
apsConnection
registerForPushNotifications
supportedServices
countByEnumeratingWithState:objects:count:
initializeService
sharedInstance
populateRemoteConfiguration
initWithConnection:
attribution
initWithEntitlements:attribution:
setShazamServiceDelegate:
remoteDelegate
setExportedObject:
connections
addObject:
processIdentifier
bundleIdentifier
removeObject:
setInterruptionHandler:
setInvalidationHandler:
resume
configure
listener
start
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
lock
setLock:
.cxx_destruct
_lock
_connections
_apsConnection
_listener
T@"NSMutableArray",R,N,V_connections
T@"SHAPSConnection",R,N,V_apsConnection
T@"NSXPCListener",R,N,V_listener
T{os_unfair_lock_s=I},N,V_lock
cStringUsingEncoding:
dealloc
startRecognitionForRequest:
delegate
stop
T@"<SHMatcherDelegate>",W,N
_synchronizeSnapshot:startCondition:
T@"<SHMediaLibrarySyncDelegate>",W,N
_libraryInfoWithCompletionHandler:
_fetchLibraryTracksWithParameters:completionHandler:
mediaItemForShazamID:completionHandler:
sendEventSignal:
interfaceWithProtocol:
setExportedInterface:
remoteInterface
setRemoteObjectInterface:
remoteObjectProxyWithErrorHandler:
registerBundleAttribution:
transaction
setTransaction:
setCurrentAttributionKey:andApp:
watchdogTimer
stopWatchdogTimer
startWatchdogTimerForInterval:firedCompletion:
isRunning
managesRecordingSession
startManagedRecordingDate
date
powerlogCallingProcessBundleID:startDate:endDate:
endTransaction
stopMediaSafetyNetExemption
setStartManagedRecordingDate:
startMediaSafetyNetExemption
timeRequiredToPerformWork
startTransaction
matcher:didFindMatch:
matcher:didNotFindMatch:
matcher:didFail:
matcher:didFinishWithOutcome:
_libraryWillBeginSync:
_library:didChangeWithSnapshot:
_library:didProduceError:failedItemIdentifiers:
_libraryDidCompleteSync:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setInterface:forSelector:argumentIndex:ofReply:
connection
exportedObject
shazamService:updatedChildService:
setRemoteDelegate:
associatedBundleID
hasStartedSafetynetException
setHasStartedSafetynetException:
_hasStartedSafetynetException
_watchdogTimer
_remoteInterface
_remoteDelegate
_attribution
_associatedBundleID
_connection
_transaction
_startManagedRecordingDate
T@"NSString",R,C,N,V_associatedBundleID
T@"NSXPCConnection",R,N,V_connection
T@"NSXPCInterface",R,N,V_remoteInterface
T@"SHWatchdogTimer",R,N,V_watchdogTimer
T@"NSObject<OS_os_transaction>",&,N,V_transaction
TB,N,V_hasStartedSafetynetException
T@"NSDate",&,N,V_startManagedRecordingDate
T@"<SHXPCRemoteDelegate>",&,N,V_remoteDelegate
T@"<SHXPCServiceProxy>",&,N
T@"SHAttribution",R,N,V_attribution
currentRunLoop
shazamItemDictionary
extractIDsFromRelation:
initWithShazamItemDictionary:
setShazamItemDictionary:
_shazamItemDictionary
T@"NSDictionary",&,N,V_shazamItemDictionary
T@"NSNumber",R,N
T@"NSArray",R,C,N
shazamDictionary
setShazamDictionary:
_shazamDictionary
T@"NSDictionary",&,N,V_shazamDictionary
setDefaultRecordingIntermissionInSeconds:
setCampaignToken:
_defaultRecordingIntermissionInSeconds
_campaignToken
Td,N,V_defaultRecordingIntermissionInSeconds
T@"NSString",C,N,V_campaignToken
initWithRecordingService:
audioTap
stopTap
recordingService
setAudioTap:
setTapClosedObserver:
tapClosedObserver
setRecordingService:
_audioTap
_tapClosedObserver
_recordingService
T@"SHAudioTap",W,N,V_audioTap
T@,W,N,V_tapClosedObserver
T@"SHRecordingService",&,N,V_recordingService
invalidate
clientIdentifier
clientType
initWithClientIdentifier:clientType:
initWithCatalog:recognitionRequester:
setFormatOptions:
catalog
matcherResponseFromServerData:signature:context:
error
match
loadContext:
signature
errorWithCode:underlyingError:
errorResponseForSignature:error:
matchSignature:tokenizedURL:
loadConfiguration:
partnerURLRequestForSignature:endpoint:
duration
dataRepresentation
length
networkRequester
responseForServerData:signature:
performRequest:withReply:
buildURLForSignature:endpoint:
requestWithURL:
mutableCopy
setHTTPMethod:
base64EncodedStringWithOptions:
iso8601Formatter
audioStartDate
stringFromDate:
stringWithFormat:
metrics
audioSource
dictionaryWithObjects:forKeys:count:
sessionDuration
numberWithDouble:
dictionaryWithDictionary:
dataWithJSONObject:options:error:
setHTTPBody:
addValue:forHTTPHeaderField:
UUIDString
updateToken:withValue:
URLRepresentation
initWithCatalog:
setCatalog:
setNetworkRequester:
_delegate
_iso8601Formatter
_catalog
_networkRequester
T@"SHShazamServiceCatalog",&,N,V_catalog
T@"<SHNetworkRecognitionRequester>",&,N,V_networkRequester
T@"NSISO8601DateFormatter",R,N,V_iso8601Formatter
T@"<SHMatcherDelegate>",W,N,V_delegate
JSONObjectWithData:options:error:
objectForKeyedSubscript:
firstObject
initWithErrorDictionary:
initWithResultsDictionary:
defaultRecordingIntermissionInSeconds
initWithRecordingIntermission:retrySeconds:match:signature:error:
recordingIntermissionSeconds
retrySeconds
noMatchWithRecordingIntermission:retrySeconds:signature:
initWithResourcesDictionary:
shazamIDs
count
arrayWithCapacity:
campaignToken
mediaItemFromResourcesResponse:shazamID:signatureStartDate:campaignToken:
songsResponse
songsDictionary
set_rawResponseSongs:
initWithMediaItems:forSignature:
matchWithRecordingIntermission:retrySeconds:match:
mediaDictionaryFromResourcesResponse:shazamID:campaignToken:
shazamResponse
itemForIdentifier:
matchOffset
setValue:forKey:
speedSkew
frequencySkew
songRelationIDs
itemForIdentifiers:
lyricsRelationIDs
lyricsResponse
doubleValue
snippetFromOffset:
dateByAddingTimeInterval:
lyricLines
songwriters
initWithLyricsStartDate:lines:songwriters:
copy
initWithMatchedMediaItemDictionary:syncedLyrics:
annotateClientError:code:underlyingError:
annotateClientError:withError:
initWithDataArray:
mediaItemFromResourcesResponse:shazamID:campaignToken:
mediaItemWithProperties:
dictionary
shazamID
shazamURL
title
artistName
appleMusicID
artworkURL
genreNames
releaseDate
isExplicitContent
numberWithBool:
albumName
isrc
appleMusicURLString
initWithString:
containsTokens
lyricsSnippet
staticLyrics
musicVideoRelationIDs
musicVideoResponse
mediaItemsFromServerData:context:error:
resourcesDictionary
initWithSongsDictionary:
initWithShazamDictionary:
initWithLyricsDictionary:
initWithMusicVideoDictionary:
setResourcesDictionary:
_resourcesDictionary
T@"NSDictionary",&,N,V_resourcesDictionary
T@"SHServerSongsResponse",R,N
T@"SHServerShazamResponse",R,N
T@"SHServerLyricsResponse",R,N
T@"SHServerMusicVideoResponse",R,N
sessionConfiguration
invalidateAndCancel
encoder
requestByEncodingRequest:parameters:
dataTaskPromiseWithRequest:
response
addFinishBlock:
defaultSessionConfiguration
setTimeoutIntervalForRequest:
setWaitsForConnectivity:
setDiscretionary:
initWithClientIdentifier:bag:
setClientType:
initWithTokenService:
setProtocolHandler:
initWithTokenService:bag:
setClientIdentifier:
_encoder
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_clientType
T@"AMSURLSession",&,N,V_session
T@"AMSMediaRequestEncoder",R,N,V_encoder
setNotificationCategories:
setWantsNotificationResponsesDelivered
currentMediaItem
containsMediaItemWithFuzzyTolerance:
currentSignatureID
querySignature
mediaItems
setCurrentMediaItem:
setCurrentSignatureID:
sendMatchNotification:
sendAnalyticsEventForMatch:
contentProvider
requestWithIdentifier:content:trigger:
userNotificationCenter
addNotificationRequest:withCompletionHandler:
setUserNotificationCenter:
T@"UNUserNotificationCenter",&,N
setContentProvider:
_currentMediaItem
_currentSignatureID
_contentProvider
T@"SHMatchedMediaItem",&,N,V_currentMediaItem
T@"NSUUID",&,N,V_currentSignatureID
T@"SHNotificationContentProvider",&,N,V_contentProvider
handleAudioSessionInterruption:
addObserver:selector:name:object:
handleAudioSessionRouteChange:
handleMediaServicesWereLost:
handleMediaServicesWereReset:
removeObserver:name:object:
registerObservers
configureAudioSession
setActive:withOptions:error:
removeObservers
setIsAudioSessionInterrupted:
setCategory:withOptions:error:
setAllowHapticsAndSystemSoundsDuringRecording:error:
setMode:error:
preferDecoupledIO:error:
setActive:error:
currentRoute
outputs
portType
areHeadphonesConnected
isExternalSpeakerConnected
setAudioManagerDispatchQueue:
_isAudioSessionInterrupted
TB,N,V_isAudioSessionInterrupted
T@"NSObject<OS_dispatch_queue>",&,N,V_audioManagerDispatchQueue
T@"<SHAudioSessionManagerDelegate>",W,N,V_delegate
isAudioSourceSupported:
audioSessionManager
areHeadphonesOrExternalSpeakerConnected
shouldUseInternalSession
initWithRecordingSource:
activeTaps
defaultCenter
postNotificationName:object:
startRecordingWithOptions:
stopRecording
deactivateAudioSession
removeAllObjects
availableRecorders
stopRecordingWithError:
recordingSource
isAudioSessionInterrupted
isClosed
completion
stopTap:
activateAudioSessionWithOptions:
audioManagerDispatchQueue
failedToResumeAfterInterruption
startRecordersWithCompletion:
startRecordingWithCompletion:
integerValue
arrayWithObjects:count:
recorder:producedAudioBuffer:atTime:
audioSessionManager:interruptionBeganWithOptions:
audioSessionManager:interruptionEndedWithOptions:
initWithRecorders:
createTap
startTap:
requiredEntitlements
_audioSessionManager
_availableRecorders
_activeTaps
_audioManagerDispatchQueue
T@"NSMutableArray",R,N,V_activeTaps
T@"SHAudioSessionManager",R,N,V_audioSessionManager
T@"NSArray",R,N,V_availableRecorders
T@"NSObject<OS_dispatch_queue>",R,N,V_audioManagerDispatchQueue
sh_setDefaultValuesWithCompletion:
sh_setCampaignTokenForClientIdentifier:completion:
loadContextForClientIdentifier:completion:
bundleForClass:
URLForResource:withExtension:
URLForDirectory:inDomain:appropriateForURL:create:error:
applicationSupportDirectory
URLByAppendingPathComponent:isDirectory:
path
URLByAppendingPathExtension:
setType:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
setUsesPersistentHistoryTracking:
persistentStoreURL
setURL:
managedObjectModelURL
persistentStoreDescriptionForStoreType:
initWithSnapshot:startCondition:
snapshot
startCondition
setError:
_snapshot
_startCondition
_error
T@"<SHMediaLibrarySyncDelegate>",W,N,V_delegate
T@"SHMediaLibrarySnapshot",R,N,V_snapshot
T@"NSString",R,C,N,V_startCondition
T@"NSError",&,N,V_error
setTitle:
setShouldBackgroundDefaultAction:
setThreadIdentifier:
setShouldIgnoreDoNotDisturb:
setShouldIgnoreDowntime:
defaultSound
setSound:
setShouldAuthenticateDefaultAction:
artist
setBody:
appleMusicURL
setCategoryIdentifier:
userInfoPayloadForMediaItem:bundleIdentifier:
setUserInfo:
setAttachments:
notificationAttachmentForMediaItem:completionHandler:
categoryWithIdentifier:actions:intentIdentifiers:options:
localizedUserNotificationStringForKey:arguments:
dateWithTimeIntervalSinceNow:
setExpirationDate:
setShouldHideDate:
setShouldSuppressDefaultAction:
notificationCategories
initWithAttribution:
notificationContentForMediaItem:completionHandler:
notificationContentForNoMatch
setAttribution:
T@"SHAttribution",&,N,V_attribution
bagForProfile:profileVersion:
initWithBag:
addBagKey:valueType:
bagKeySet
registerBagKeySet:forProfile:profileVersion:
amsBag
dictionaryForKey:
stringForKey:
endpointsBagValue
valueWithCompletion:
internalHostBagValue
externalHostBagValue
languageTagBagValue
campaignTokenBagValue
defaultValuesBagValue
populateFeatureFlags
featureFlagsBagValue
setFeatureFlags:
featureFlags
endpointsWithCompletion:
hostForClientType:completion:
campaignTokenWithCompletion:
defaultValuesWithCompletion:
setAmsBag:
setFeatureFlagsBagValue:
setEndpointsBagValue:
setInternalHostBagValue:
setExternalHostBagValue:
setCampaignTokenBagValue:
setDefaultValuesBagValue:
setLanguageTagBagValue:
_featureFlags
_amsBag
_featureFlagsBagValue
_endpointsBagValue
_internalHostBagValue
_externalHostBagValue
_campaignTokenBagValue
_defaultValuesBagValue
_languageTagBagValue
T@"AMSBag",&,N,V_amsBag
T@"SHFeatureFlags",&,N,V_featureFlags
T@"AMSBagValue",&,N,V_featureFlagsBagValue
T@"AMSBagValue",&,N,V_endpointsBagValue
T@"AMSBagValue",&,N,V_internalHostBagValue
T@"AMSBagValue",&,N,V_externalHostBagValue
T@"AMSBagValue",&,N,V_campaignTokenBagValue
T@"AMSBagValue",&,N,V_defaultValuesBagValue
T@"AMSBagValue",&,N,V_languageTagBagValue
dataArray
setDataArray:
_dataArray
T@"NSArray",&,N,V_dataArray
T@"NSArray",R,N
subarrayWithRange:
sh_sliceIntoChunksOfMaximumSize:
initWithStoreType:
initWithCallingProcessIdentifier:
commonInitWithDataStore:remoteLibrary:accountListener:
syncGroup
dataStore
dispatchQueue
syncQueue
setCurrentContext:
synchronizeLocalSnapshot:
synchronizeRemoteSnapshot:startCondition:
accountListener
fetchLibraryTracksWithParameters:
fetchLibraryInfoWithCompletionHandler:
changes
changeType
libraryItem
persistLibraryGroups:completionHandler:
persistUpdatedTracks:completionHandler:
deleteItemsByIdentifiers:completionHandler:
commitChangesWithError:
status
isEncrypted
_synchronizeRemoteSnapshot:startCondition:
numberWithInteger:
beginLibrarySync
handleLibraryError:failedItemIdentifiers:
persistChangesAndCompleteSyncWithCompletionHandler:
unsyncedGroupChangeset
unsyncedTrackChangeset
shazamLibraryTrackFromLibraryTrack:
shazamLibraryGroupFromLibraryGroup:
initWithIdentifier:
shazamLibrarySyncStartConditionForMediaLibraryStartCondition:
remoteLibrary
synchronizeChanges:startCondition:
fetchAllUploadableGroupsMissingLibrarySyncMetadata
fetchAllUploadableTracksMissingLibrarySyncMetadata
libraryTrackFromShazamLibraryTrack:
libraryGroupFromShazamLibraryGroup:
currentContext
resetDataIfNeededForSyncError:
currentSnapshot
mapInternalLibraryErrorToMediaLibrary:
deleteAllSyncMetadataItems
deleteAllItems
clearCachedSyncStatus
addChanges:
libraryWillBeginSync:
library:didChangeTracks:syncAction:
library:didChangeGroups:syncAction:
library:didDeleteItemsWithIdentifiers:syncAction:
library:didProduceError:withFailedItemIdentifiers:syncAction:
library:didCompleteSyncWithCompletionHandler:
currentLibraryAccountHasChanged
libraryDataStore:didUpdateWithChange:
initWithBundleIdentifier:
initWithDataStore:remoteLibrary:accountListener:
synchronizeWithContext:
setCurrentSnapshot:
setRemoteLibrary:
setDataStore:
dataStoreShouldPersistChanges
setSyncGroup:
setDispatchQueue:
setSyncQueue:
setAccountListener:
_dataStoreShouldPersistChanges
_currentSnapshot
_remoteLibrary
_dataStore
_syncGroup
_dispatchQueue
_syncQueue
_currentContext
_accountListener
T@"SHLShazamLibrary",&,N,V_remoteLibrary
T@"SHMediaLibraryDataStore",&,N,V_dataStore
T@"SHMediaLibrarySnapshot",&,N,V_currentSnapshot
TB,R,N,V_dataStoreShouldPersistChanges
T@"NSObject<OS_dispatch_group>",&,N,V_syncGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
T@"SHMediaLibraryContext",&,N,V_currentContext
T@"SHMediaLibraryAccountListener",&,N,V_accountListener
T@"<SHMediaLibrarySyncDelegate>",W,N,Vdelegate
_isClosed
_completion
T@?,C,N,V_completion
Tq,R,N,V_recordingSource
TB,R,N,V_isClosed
stopAudioQueueAndClearBuffersWithError:
isAudioQueueRunning
errorWithDomain:code:userInfo:
initStandardFormatWithSampleRate:channels:
streamDescription
hasAudioQueueFailedWithStatus:annotateError:
startAudioQueueAfterRetrySecondsWithCompletion:
initWithPCMFormat:frameCapacity:
setFrameLength:
audioBufferList
audioRecorderDispatchQueue
audioBufferFromData:byteSize:inFormat:
T@"<SHAudioRecorderDelegate>",W,N
Tq,R,N
setRecordingSource:
audioQueue
setAudioQueue:
audioStreamBasicDescription
setAudioStreamBasicDescription:
setAudioRecorderDispatchQueue:
mBuffers
_recordingSource
_audioQueue
_audioRecorderDispatchQueue
_audioStreamBasicDescription
Tq,N,V_recordingSource
T^{OpaqueAudioQueue=},N,V_audioQueue
T{AudioStreamBasicDescription=dIIIIIIII},N,V_audioStreamBasicDescription
T@"NSObject<OS_dispatch_queue>",&,N,V_audioRecorderDispatchQueue
T@"<SHAudioRecorderDelegate>",W,N,V_delegate
initWithStreamDescription:
sampleRate
initWithAudioTimeStamp:sampleRate:
hasPrefix:
isEqualLabel:
lowercaseString
resultsDictionary
setResultsDictionary:
_resultsDictionary
T@"NSDictionary",&,N,V_resultsDictionary
Td,R,N
originalURLPath
tokenForTokenType:
containsString:
tokenDictionary
stringByReplacingOccurrencesOfString:withString:
host
tokenURLPath
URLWithString:
setScheme:
setHost:
componentsSeparatedByString:
setPath:
lastObject
setQuery:
absoluteString
allocWithZone:
copyWithZone:
initWithHost:URLPath:
mutableCopyWithZone:
setTokenDictionary:
setOriginalURLPath:
_host
_originalURLPath
_tokenDictionary
T@"NSString",C,N,V_host
T@"NSString",R,C,N
T@"NSString",C,N,V_originalURLPath
T@"NSMutableDictionary",&,N,V_tokenDictionary
internalErrorWithCode:underlyingError:
setMatcherRequest:
serviceDelegate
serviceUpdated:withRunningState:
containingAppBundleIdentifier
installationID
initWithClientIdentifier:clientType:installationID:
setSession:
session
matcherRequest
type
matchSignature:
deadline
matchStreamingBuffer:atTime:
finishSessionIfNecessaryForRequest:response:outcome:
setCompletion:
finishSessionConditionsMetForRequest:response:outcome:
stopWithOutcome:
stopCondition
hasHitDeadline
setAudioSource:
sendNotifications
postNotificationName:object:userInfo:
dictionaryWithCapacity:
timeIntervalSinceNow
close
session:didFindMatch:
session:didNotFindMatchForSignature:error:
setServiceDelegate:
T@"<SHServiceDelegate>",W,N
TB,R,N
initWithAttribution:clientType:
startRecognitionForRequest:withAudioTap:
session:shouldAttemptToMatchSignature:
session:didFindMatchForResponse:
session:didNotFindMatchForResponse:
_serviceDelegate
_session
_tap
_matcherRequest
_clientType
T@"SHSession",&,N,V_session
T@"SHMatcherRequest",&,N,V_matcherRequest
Tq,R,N,V_clientType
T@"SHAudioTap",R,N,V_tap
T@"<SHServiceDelegate>",W,N,V_serviceDelegate
validateClientIdentifier:
exceptionWithName:reason:userInfo:
_initWithInstallationID:
loadMatchEndpointForClientIdentifier:clientType:installationID:callback:
_createMatcher
setURLBuilder:
setContextBuilder:
_installationID
_clientIdentifier
T@"SHShazamServiceURLBuilder",&,N,V_URLBuilder
T@"SHServerResponseContextBuilder",&,N,V_contextBuilder
T@"NSString",R,C,N,V_installationID
T@"NSString",R,C,N,V_clientIdentifier
privateOperation
configuration
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
setConfiguration:
initWithOperation:
operation
setPrivateOperation:
_privateOperation
T@"CKDatabaseOperation",&,N,V_privateOperation
T@"CKDatabaseOperation",R,N
musicVideoItemDictionary
initWithMusicVideoItemDictionary:
setMusicVideoItemDictionary:
_musicVideoItemDictionary
T@"NSDictionary",&,N,V_musicVideoItemDictionary
T@"NSURL",R,N
musicVideoDictionary
setMusicVideoDictionary:
_musicVideoDictionary
T@"NSDictionary",&,N,V_musicVideoDictionary
unobserveRecognitionNotifications
recognitionService
shouldStartService:
audioTapService
startTap
librarySyncService
shouldStartLibraryService:
libraryQueryService
isEntitledForLibrarySPI
providerIdentifier
isEqualToString:
errorWithCode:underlyingError:keyOverrides:
isCurrentBundleIdentifierValid
entitlements
isEntitledForInternalClient
requiresAttributionForBundlerIdentifier:
mediaItemService
eventSignalService
services
hasRequiredEntitlements:
shazamServiceDelegate
userInfo
notificationService
canSendNotificationForMatch:
sendNotificationForMatch:
addObserverForName:object:queue:usingBlock:
setMatchedObserver:
canSendNotificationForNoMatchSignatureID:
sendNotificationForNoMatch
setNoMatchObserver:
matchedObserver
removeObserver:
noMatchObserver
observeRecognitionNotificationsForService:
configurationForService:
setEntitlements:
_recognitionService
_notificationService
_audioTapService
_librarySyncService
_libraryQueryService
_mediaItemService
_eventSignalService
_shazamServiceDelegate
_entitlements
_matchedObserver
_noMatchObserver
T@"SHEntitlements",&,N,V_entitlements
T@"SHRecognitionService",R,N,V_recognitionService
T@"SHNotificationService",R,N,V_notificationService
T@"SHAudioTapService",R,N,V_audioTapService
T@"SHMediaLibrarySyncService",R,N,V_librarySyncService
T@"SHMediaLibraryQueryService",R,N,V_libraryQueryService
T@"SHMediaItemService",R,N,V_mediaItemService
T@"SHEventSignalService",R,N,V_eventSignalService
T@,W,N,V_matchedObserver
T@,W,N,V_noMatchObserver
T@"<SHXPCRemoteDelegate>",W,N,V_delegate
T@"<SHShazamServiceDelegate>",W,N,V_shazamServiceDelegate
populateWithConfiguration:
defaultFlags
initWithConfiguration:
defaultValues
recordingIntermission
_defaultValues
T@"NSDictionary",R,N,V_defaultValues
initWithName:
name
_name
T@"NSString",R,C,N,V_name
initWithType:scope:callingProcessIdentifier:
sessionType
sessionScope
callingProcessIdentifier
_sessionType
_sessionScope
_callingProcessIdentifier
Tq,R,N,V_sessionType
Tq,R,N,V_sessionScope
T@"NSString",R,C,N,V_callingProcessIdentifier
configureEntitlementsForTask:
configureEntitlementsForConnection:
entitlementArray:containsEntitlementValue:fromSecTask:
boolValueOfEntitlement:fromSecTask:
entitlementArray:containsEntitlementValue:fromConnection:
boolValueOfEntitlement:fromConnection:
isEntitledForStorefront
isEntitledForMicrophone
isEntitledForExternalAudioRecording
isEntitledForInternalAudioRecording
isSubsetOfSet:
valueForEntitlement:
boolValue
copyValueOfEntitlement:fromSecTask:
setIsEntitledForStorefront:
_isEntitledForStorefront
_isEntitledForMicrophone
_isEntitledForExternalAudioRecording
_isEntitledForInternalAudioRecording
_isEntitledForInternalClient
TB,N,V_isEntitledForStorefront
TB,R,N,V_isEntitledForMicrophone
TB,R,N,V_isEntitledForExternalAudioRecording
TB,R,N,V_isEntitledForInternalAudioRecording
TB,R,N,V_isEntitledForInternalClient
sendEvent:withPayload:
trackSetToAdd
allObjects
trackSetToDelete
groupSetToAdd
groupSetToDelete
identifier
valueForKeyPath:
setWithArray:
intersectSet:
shl_exceptionWithName:reason:
addObjectsFromArray:
tracksToSave
tracksToAdd
addTracks:
tracksToDelete
deleteTracks:
groupsToAdd
addGroups:
groupsToDelete
deleteGroups:
trackIDsToDelete
groupIDsToDelete
mergeChangeset:
setTrackSetToAdd:
setTrackSetToDelete:
setGroupSetToAdd:
setGroupSetToDelete:
_trackSetToAdd
_trackSetToDelete
_groupSetToAdd
_groupSetToDelete
T@"NSMutableSet",&,N,V_trackSetToAdd
T@"NSMutableSet",&,N,V_trackSetToDelete
T@"NSMutableSet",&,N,V_groupSetToAdd
T@"NSMutableSet",&,N,V_groupSetToDelete
_initWithTasksToRetry:error:
tasksToRetry
allItemIdentifiers
initWithError:
initWithTasksToRetry:error:
failedItemIdentifiers
_tasksToRetry
T@"NSError",R,N,V_error
T@"NSArray",R,N,V_tasksToRetry
campaignTokens
tokenForClientIdentifier:
_campaignTokens
T@"NSDictionary",R,N,V_campaignTokens
initWithIdentifier:bundleID:context:
discoverabilitySignal
source
sendEvent:
_isRunning
TB,R,N,V_isRunning
parseTTMLFromLyricsItemDictionary:
songInfo
lyricsLines
lyricsText
string
startTime
lyricLineWithText:offset:
dataUsingEncoding:
initWithTTMLData:
parseWithError:
lyricsLineStartingBeforeTimeOffset:
appendString:
nextLine
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
initWithLyricsItemDictionary:
setSongInfo:
_songInfo
T@"MSVLyricsSongInfo",&,N,V_songInfo
lyricsDictionary
setLyricsDictionary:
_lyricsDictionary
T@"NSDictionary",&,N,V_lyricsDictionary
initWithRecognitionIdentifier:shazamKey:
isTrackIdentifier:
recognitionIdentifierFromTrackIdentifier:
shazamKeyFromTrackIdentifier:
identifierWithRecognitionIdentifier:shazamKey:
rangeOfString:options:
substringFromIndex:
substringToIndex:
precomposedStringWithCanonicalMapping
compoundIdentifierFromTrackIdentifier:
libraryItemIdentifier
hasValidRecognitionIdentifier
_recognitionIdentifier
_shazamKey
T@"NSString",R,N,V_recognitionIdentifier
T@"SHLShazamKey",R,N,V_shazamKey
cloudContainer
container
errorWithCode:
resultWithError:
supportsDeviceToDeviceEncryption
fulfilledResult
accountInfoWithCompletionHandler:
evaluatePreconditionWithCompletion:
initWithContainer:
setCloudContainer:
_cloudContainer
T@"SHLCloudBackedContainer",&,N,V_cloudContainer
associatedGroupIdentifier
setAssociatedGroupIdentifier:
initWithLibraryGroup:
removeTracks:
UUID
progressWithTotalUnitCount:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
progress
size
retryCount
setRetryCount:
syncStartCondition
setSyncStartCondition:
T@"NSString",R,N
T@"NSProgress",R,N
Tq,N
T@"NSString",N
T@"SHLSyncSession",W,N
fetchType
setFetchType:
_progress
_identifier
_retryCount
_syncStartCondition
_fetchType
Tq,N,V_fetchType
T@"<SHLSyncSessionFetchTaskDelegate>",W,N,V_delegate
T@"NSString",R,N,V_identifier
T@"NSProgress",R,N,V_progress
Tq,N,V_retryCount
T@"NSString",N,V_syncStartCondition
T@"SHLSyncSession",W,N,Vsession
initOperationQueue
setMaxConcurrentOperationCount:
tailOperation
isFinished
isCancelled
addDependency:
setTailOperation:
operationQueue
addOperations:waitUntilFinished:
cancelAllOperations
setOperationQueue:
_operationQueue
_tailOperation
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperation",W,N,V_tailOperation
autoupdatingCurrentLocale
countryCode
cloudServiceController
requestStorefrontCountryCodeWithCompletionHandler:
storefront:
_cloudServiceController
T@"SKCloudServiceController",R,N,V_cloudServiceController
errorCode:underlyingError:
errorCodeForError:
domain
code
enumerateKeysAndObjectsUsingBlock:
canRetryForPartialError:
canRetryForError:
userInfoForErrorCode:withUnderlyingError:
initWithDomain:code:userInfo:
localizedDescriptionForSyncError:
setObject:forKey:
localizedFailureReasonForSyncError:
localizedRecoverySuggestionForSyncError:
errorWithUnderlyingError:
retrySecondsForError:
validEncodedSystemData:
encodedSystemData
initWithMetadata:
initWithEncodedSystemData:
_encodedSystemData
T@"NSData",R,N,V_encodedSystemData
initWithLibraryTrack:
T@"NSDate",&,D,N
recognitionIdentifier
T@"NSString",&,D,N
shazamKey
T@"SHLShazamKey",&,D,N
T@"NSString",C,D,N
subtitle
location
T@"CLLocation",&,D,N
watchdogTimerSource
_watchdogTimerSource
T@"NSObject<OS_dispatch_source>",R,N,V_watchdogTimerSource
commonInitWithIdentifier:metadata:labels:
validProviderIdentifier
validProviderName
bundleName
addPlatformLabel
objectForInfoDictionaryKey:
labelSet
isEqualTrack:
platformLabel
_initWithRecognitionIdentifier:shazamKey:metadata:labels:
removeLabel:
setLabelSet:
_providerName
_providerIdentifier
_date
_title
_subtitle
_location
_associatedGroupIdentifier
_compoundIdentifier
_labelSet
T@"NSMutableSet",&,N,V_labelSet
T@"NSDate",&,N,V_date
T@"NSString",&,N,V_recognitionIdentifier
T@"SHLShazamKey",&,N,V_shazamKey
T@"NSString",C,N,V_title
T@"NSString",C,N,V_subtitle
T@"CLLocation",&,N,V_location
T@"NSString",&,N,V_associatedGroupIdentifier
T@"NSString",&,N,V_providerIdentifier
T@"NSString",&,N,V_providerName
T@"NSSet",R,N
T@"SHLLibraryTrackCompoundIdentifier",R,N,V_compoundIdentifier
originalTask
recoverTaskFromPartialError
recoverTaskFromLimitExceededError
savedGroups
deletedIDs
initWithInsertions:deletions:
savedTracks
differenceOfBatch:
initWithTracksToModify:groupsToModify:
subdivideTaskIntoBatchesOfSize:
setOriginalTask:
setSavedGroups:
setSavedTracks:
setDeletedIDs:
_originalTask
_savedGroups
_savedTracks
_deletedIDs
T@"SHLSyncSessionModifyTask",&,N,V_originalTask
T@"NSArray",&,N,V_savedGroups
T@"NSArray",&,N,V_savedTracks
T@"NSArray",&,N,V_deletedIDs
containerTransformer
cloudBackedContainer
fetchTaskTransformer
cloudBackedZoneChangesOperationFromFetchTask:forChangedZones:container:
defaultQueue
addOperation:
cache
zoneID
zoneName
subscriptionExistsForZoneIdentifier:
subscriptionTaskTransformer
cloudBackedOperationForZones:container:
sharedContext
shazamLibraryZone
zoneExistsForIdentifier:
initWithZone:
storeZoneIdentifier:error:
zoneTransformer
cloudBackedOperationForZonesToSave:container:
cloudBackedDatabaseChangesOperationFromFetchTask:container:completion:
storeTask:ofType:error:
addOperation:waitUntilFinished:
preconditions
scheduleFetchTask:
setFetchTaskTransformer:
setSubscriptionTaskTransformer:
_fetchTaskTransformer
_subscriptionTaskTransformer
T@"SHLCloudFetchTaskTransformer",&,N,V_fetchTaskTransformer
T@"SHLCloudSubscriptionTransformer",&,N,V_subscriptionTaskTransformer
initWithURL:
appClip:didFailToRequestURL:error:
sessionProxy
setLaunchReason:
requestClipWithCompletion:
requestMetadataWithCompletion:
requestAppClipForURL:
T@"<SHAppClipDelegate>",W,N,V_delegate
URLBuilder
contextBuilder
loadLookupEndpointForClientIdentifier:clientType:callback:
_URLBuilder
_contextBuilder
T@"SHShazamServiceURLBuilder",R,N,V_URLBuilder
T@"SHServerResponseContextBuilder",R,N,V_contextBuilder
T@"<SHNetworkRecognitionRequester>",R,N,V_networkRequester
notificationFromLegacyUserInfoFormat:
setMediaItem:
setBundleIdentifier:
payloadFromNotificationContentUserInfo:
mediaItem
_mediaItem
_bundleIdentifier
T@"SHMediaItem",&,N,V_mediaItem
T@"NSString",C,N,V_bundleIdentifier
topic
notificationFromRemoteNotificationDictionary:
notificationType
libraryController
apsEnvironment
connectionQueue
initWithEnvironmentName:namedDelegatePort:queue:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
setConnectionQueue:
_apsEnvironment
_libraryController
_connectionQueue
T@"APSConnection",R,N,V_connection
T@"NSString",R,C,N,V_apsEnvironment
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"SHMediaLibraryController",R,N,V_libraryController
scope
initWithContainer:usingEncryption:
setScope:
_scope
Tq,N,V_scope
containerWithScope:
modifyTaskScheduler
fetchTaskScheduler
createTransaction
T@"<SHLModifyTaskScheduler>",R,N
T@"<SHLFetchTaskScheduler>",R,N
setSavePolicy:
privateCloudDatabase
modifyRecordsOperation
setDatabase:
recordsToSaveFromModifyTask:container:
setRecordsToSave:
recordIDsToDeleteFromModifyTask:
setRecordIDsToDelete:
recordsToSave
setTotalUnitCount:
completedUnitCount
setCompletedUnitCount:
setPerRecordSaveBlock:
setPerRecordCompletionBlock:
containerIdentifier
initWithCallingProcessIdentifier:containerIdentifier:
removeTaskOfType:forIdentifier:error:
taskOfType:identifier:
session:task:didProduceOutcome:
libraryTrackFromCloudBackedItem:usingEncryption:
session:task:didModifyGroups:
session:task:didModifyTracks:
session:task:didDeleteItemsWithIdentifiers:
initWithOriginalTask:savedGroups:savedTracks:deletedIDs:error:
recoverableTasks
setModifyRecordsCompletionBlock:
setExpectedSendSize:
recordIDsToDelete
setQuantity:
setName:
setGroup:
tracksToModify
insertions
groupsToModify
cloudBackedItemFromLibraryTrack:usingEncryption:
deletions
cloudBackedOperationFromModifyTask:container:
setModifyRecordsOperation:
_configuration
_modifyRecordsOperation
T@"SHLSyncSessionConfiguration",R,N,V_configuration
T@"CKModifyRecordsOperation",&,N,V_modifyRecordsOperation
minusSet:
numberOfItems
subdivideIntoBatchesOfSize:
hasChanges
_insertions
_deletions
T@"NSSet",R,N,V_insertions
T@"NSSet",R,N,V_deletions
TB,R,N,GhasChanges
containerWithIdentifier:
initWithZoneName:ownerName:
defaultContainer
debugContainer
T@"SHLCloudContext",R,N
_defaultContainer
_manateeContainer
_debugContainer
_shazamLibraryZone
T@"CKContainer",R,N,V_debugContainer
T@"CKContainer",R,N,V_defaultContainer
T@"CKContainer",R,N,V_manateeContainer
T@"CKRecordZone",R,N,V_shazamLibraryZone
setZoneTransformer:
setCache:
_zoneTransformer
_cache
T@"SHLCloudModifyZoneTransformer",&,N,V_zoneTransformer
T@"SHLCloudLibraryCache",&,N,V_cache
record
recordType
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
encodedData
recordID
recordName
initWithIdentifier:metadata:
baseCloudRecordFromGroup:
initWithRecord:
metadata
initForReadingFromData:error:
finishDecoding
initWithRecordName:zoneID:
initWithRecordType:recordID:
libraryGroupFromCloudBackedItem:
cloudBackedItemFromLibraryGroup:
errorDictionary
errorCodeForResponseCode:
setErrorDictionary:
_errorDictionary
T@"NSDictionary",&,N,V_errorDictionary
T@"NSError",R,N
_zone
T@"CKRecordZone",R,N,V_zone
newSubscriptionForZoneID:
subscriptionID
modifySubscriptionsOperation
allValues
setSubscriptionsToSave:
setModifySubscriptionsCompletionBlock:
subscriptionsToSave
subscriptionIDsToDelete
initWithZoneID:subscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
setModifySubscriptionsOperation:
_modifySubscriptionsOperation
T@"CKModifySubscriptionsOperation",&,N,V_modifySubscriptionsOperation
isSatisfied
removeObjectAtIndex:
evaluatePreconditions:withCompletion:
_encrypted
_container
T@"CKContainer",R,N,V_container
encrypted
TB,R,N,GisEncrypted,V_encrypted
observeAccountChangedNotification
accountStatus
libraryStatusForAccountStatus:
initWithStatus:encrypted:
currentUserID
setIdentityToken:
updateUserRecordWithAccountInfo:completion:
fetchAccountInfoWithCompletionHandler:
mainQueue
updateAccountInfo
setCurrentUserID:
fetchUserRecordIDWithCompletion:
fetchUserRecordIDWithCompletionHandler:
standardUserDefaults
T@"NSString",C,N
T@"<SHMediaLibraryAccountListenerDelegate>",W,N,V_delegate
initWithScope:
currentCache
setContainerTransformer:
setCurrentCache:
_containerTransformer
_currentCache
T@"SHLSyncSessionConfiguration",&,N,V_configuration
T@"SHLCloudContainerTransformer",&,N,V_containerTransformer
T@"<SHLLibraryCache>",&,N,V_currentCache
initWithSubscription:
subscription
_subscription
T@"CKSubscription",R,N,V_subscription
validatedKey
keyWithValue:
setShazamKey:
setRecognitionIdentifier:
creationDate
setDate:
setSubtitle:
setProviderIdentifier:
providerName
setProviderName:
setLocation:
labels
containsObject:
addLabel:
_initWithIdentifier:metadata:labels:
initWithKey:
setCreationDate:
_initWithIdentifier:metadata:tracksToSave:
data
syncID
providerID
recognitionID
setArtworkURL:
setShazamURL:
group
latitude
longitude
initWithLatitude:longitude:
libraryTrackFromManagedTrack:
libraryGroupFromManagedGroup:
failedResult
accountStatusWithCompletionHandler:
doesCacheDirectoryExist
defaultManager
cacheDirectory
removeItemAtPath:error:
doesLegacyCacheDirectoryExist
legacyCacheDirectory
doesTaskFolderPathsExist
createTaskFolderPaths
inflightTaskPathForIdentifier:
failedTaskPathForIdentifier:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:options:error:
fileExistsAtPath:
tasksOfType:
inflightFolderPath
failedFolderPath
fileURLWithPath:
tasksForFolderPath:ofType:
taskForFilePath:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
lastPathComponent
removeItemAtURL:error:
dataWithContentsOfFile:
decodeObjectOfClasses:forKey:
doesZoneFolderPathExist
createZoneFolderPath
zonePathForIdentifier:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:isDirectory:
doesPrivateDatabaseFolderPathExist
createPrivateDatabaseFolderPathWithError:
currentDatabaseFolderPath
writeToken:toPath:error:
stringByAppendingPathComponent:
removeTokenAtPath:error:
bundleDirectory
zonesFolderPath
privateDatabaseFolderPath
containerID
rootDirectory
processID
privateDatabaseTransactionPath
undoTransactionWithError:
copyItemAtPath:toPath:error:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
createBundleDirectory
removeAllTasksOfType:
migrateWithError:
resetWithError:
needsMigration
startTransactionWithError:
commitTransactionWithError:
removeZoneIdentifier:error:
storeDatabaseToken:error:
storeZoneToken:forZoneIdentifier:error:
removeDatabaseTokenWithError:
removeTokenForZoneIdentifier:error:
databaseToken
zoneTokenForZoneIdentifier:
storeSubscription:forZoneIdentifier:error:
removeSubscriptionForZoneIdentifier:error:
_processID
_containerID
T@"NSString",R,C,N,V_processID
T@"NSString",R,C,N,V_containerID
fetchRequest
sortDescriptorWithKey:ascending:
setSortDescriptors:
setReturnsObjectsAsFaults:
setRelationshipKeyPathsForPrefetching:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
tracks
trackFetchedResultsControllerWithContext:
groupFetchedResultsControllerWithContext:
_record
T@"CKRecord",R,N,V_record
T@"NSString",R,N,V_name
endpoints
initWithConfiguration:suggestedLanguage:
matchURLPathForClientIdentifier:
lookupURLPathForClientIdentifier:
suggestedLanguage
_suggestedLanguage
_endpoints
T@"NSDictionary",R,N,V_endpoints
T@"NSString",R,C,N,V_suggestedLanguage
initWithResult:error:
_satisfied
satisfied
TB,R,N,GisSatisfied,V_satisfied
encryptedValuesByKey
initWithRecognitionIdentifier:shazamKey:metadata:
baseCloudRecordFromTrack:usingEncryption:
compoundIdentifier
setObject:forKeyedSubscript:
coordinate
initWithRecordID:action:
initWithScope:callingProcessIdentifier:
migrateCacheIfNeeded
syncSession
shouldPerformFetch
newFetchTaskWithStartCondition:
updateProgressWithTask:
newModifyTaskWithChanges:startCondition:
syncProgress
shl_markIndeterminate
store
syncActionForTaskType:
finishSession:
retryFailedTasks:
initWithOutcome:retryBlock:
retryHandler
retryTask:withContext:
taskWithFailedItemsAndCurrentChanges:
unionSet:
letterCharacterSet
addCharactersInString:
invertedSet
rangeOfCharacterFromSet:options:
totalUnitCount
addChild:withPendingUnitCount:
mainBundle
defaultLibrary
T@"SHLShazamLibrary",R,N
synchronizeWithStartCondition:
isValidCallingProcessIdentifier:
setSyncProgress:
setSyncSession:
setStore:
setRetryHandler:
setShouldPerformFetch:
_shouldPerformFetch
_syncProgress
_syncSession
_store
_retryHandler
T@"NSProgress",&,N,V_syncProgress
T@"SHLSyncSession",&,N,V_syncSession
T@"SHLLibraryStore",&,N,V_store
T@"SHLFailedTaskRetryHandler",&,N,V_retryHandler
TB,N,V_shouldPerformFetch
T@"<SHLShazamLibraryDelegate>",W,N,V_delegate
songItemDictionary
artworkURLFromDictionary:
dateFromString:
uppercaseString
initWithDictionary:
artworkSize
targetArtworkImageSizeFromOriginalSize:
URLWithSize:cropStyle:format:
initWithSongItemDictionary:
setSongItemDictionary:
_songItemDictionary
T@"NSDictionary",&,N,V_songItemDictionary
T@"NSDate",R,N
_songsDictionary
T@"NSDictionary",R,N,V_songsDictionary
notification
request
content
webURL
appClip
attemptOpeningAppDirectlyWithURL:completionHandler:
defaultWorkspace
openURL:configuration:completionHandler:
setFrontBoardOptions:
openWithURL:configuration:completionHandler:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
setAppClip:
_appClip
T@"SHAppClip",&,N,V_appClip
setFetchAllChanges:
databaseChangesOperation
setPreviousServerChangeToken:
previousServerChangeToken
initWithZoneID:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDWasPurgedBlock:
setFetchDatabaseChangesCompletionBlock:
setExpectedReceiveSize:
recordZoneChangesOperation
recordIDsFromCloudBackedZones:
setRecordZoneIDs:
configurationsByRecordZoneIDUsingCache:
setConfigurationsByRecordZoneID:
setRecordWasChangedBlock:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
session:task:didFetchGroups:
session:task:didFetchTracks:
session:task:didFetchDeletedItemsWithIdentifiers:
setFetchRecordZoneChangesCompletionBlock:
recordZoneIDs
setDatabaseChangesOperation:
setRecordZoneChangesOperation:
_databaseChangesOperation
_recordZoneChangesOperation
T@"CKFetchDatabaseChangesOperation",&,N,V_databaseChangesOperation
T@"CKFetchRecordZoneChangesOperation",&,N,V_recordZoneChangesOperation
manateeContainer
options
setApplicationBundleIdentifierOverrideForTCC:
sharedContainer
T@"CKContainer",R,N
executeModifyTask:
executeFetchTask:
schedulerFactory
sessionDispatchQueue
executeTask:
cleanupTransactionsWithError:
setSchedulerFactory:
setSessionDispatchQueue:
_schedulerFactory
_sessionDispatchQueue
T@"SHLTaskSchedulerFactory",&,N,V_schedulerFactory
T@"<SHLLocalStateTransactionable>",&,N,V_transaction
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionDispatchQueue
T@"<SHLSyncSessionDelegate>",W,N,V_delegate
initWithToken:
serverChangeToken
_serverChangeToken
T@"CKServerChangeToken",R,N,V_serverChangeToken
modifyRecordZonesOperation
recordZonesFromCloudBackedZones:
setRecordZonesToSave:
objectForKey:
setModifyRecordZonesCompletionBlock:
recordZonesToSave
recordZoneIDsToDelete
setModifyRecordZonesOperation:
_modifyRecordZonesOperation
T@"CKModifyRecordZonesOperation",&,N,V_modifyRecordZonesOperation
initWithUpdatedTrack:localTrack:
updatedTrack
localTrack
_updatedTrack
_localTrack
T@"SHMediaLibraryTrack",R,N,V_updatedTrack
T@"SHTrackMO",R,N,V_localTrack
initWithUpdatedGroup:localGroup:
updatedGroup
localGroup
_updatedGroup
_localGroup
T@"SHMediaLibraryGroup",R,N,V_updatedGroup
T@"SHGroupMO",R,N,V_localGroup
locallyFoundTracks
missingFromLocalStoreTracks
locallyFoundGroups
missingFromLocalStoreGroups
_locallyFoundTracks
_missingFromLocalStoreTracks
_locallyFoundGroups
_missingFromLocalStoreGroups
T@"NSMutableArray",R,N,V_locallyFoundTracks
T@"NSMutableArray",R,N,V_missingFromLocalStoreTracks
T@"NSMutableArray",R,N,V_locallyFoundGroups
T@"NSMutableArray",R,N,V_missingFromLocalStoreGroups
setIsRunning:
updateSnapshotWithAttribution:
productName
setLibraryController:
commonInitWithIdentifier:metadata:tracksToSave:
validIdentifier:
isEqualGroup:
T@"SHLLibraryItemMetadata",R,N
setTracksToSave:
_metadata
_tracksToSave
T@"NSMutableArray",&,N,V_tracksToSave
T@"SHLLibraryItemMetadata",R,N,V_metadata
isShazamKeyValid:
decimalDigitCharacterSet
rangeOfCharacterFromSet:
longLongValue
numberWithLongLong:
unsignedIntegerValue
_validatedKey
T@"NSString",R,N,V_validatedKey
outcome
retryBlock
_outcome
_retryBlock
T@"SHLTaskOutcome",R,N,V_outcome
T@?,R,N,V_retryBlock
retryTaskWithTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
sortUsingComparator:
_init
setGroupsToModify:
setTracksToModify:
updateProgress
decodeInt64ForKey:
encodeInt64:forKey:
_tracksToModify
_groupsToModify
T@"SHLLibraryBatch",&,N,V_tracksToModify
T@"SHLLibraryBatch",&,N,V_groupsToModify
T@"<SHLSyncSessionModifyTaskDelegate>",W,N,V_delegate
loadStoreWithType:
initWithContentsOfURL:
initWithName:managedObjectModel:
setPersistentStoreDescriptions:
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
mergeByPropertyStoreTrumpMergePolicy
setMergePolicy:
managedObjectContext
tracksFetchedResultsController
performFetch:
groupsFetchedResultsController
performBlockAndWait:
setIncludesPendingChanges:
resultsLimit
setFetchLimit:
predicateWithFormat:
ascending
fetchManagedObjectForRequest:withPredicate:context:
andPredicateWithSubpredicates:
updateReportForLibraryTrack:
setData:
createMetadataWithData:track:group:context:
updateManagedTrack:withUpdatedTrack:
insertNewObjectForEntityForName:inManagedObjectContext:
associateTrack:toGroupWithIdentifier:context:
predicateWithBlock:
filteredArrayUsingPredicate:
updateReportForLibraryGroups:
setSyncID:
deleteObject:
persistentContainer
persistentStoreDescriptions
initWithFetchRequest:
persistentStoreCoordinator
executeRequest:withContext:error:
deleteAllItemsWithFetchRequest:completionHandler:
reset
save:
setPredicate:
executeFetchRequest:error:
setTrack:
setRecognitionID:
setProviderID:
setLatitude:
setLongitude:
setLabels:
libraryItemFromManagedObject:
libraryChangeTypeForFetchedResultsChangeType:
initWithLibraryItem:changeType:indexPath:
entityForName:inManagedObjectContext:
entity
isKindOfEntity:
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
fetchRecentLibraryGroupsWithLimit:
setPersistentContainer:
setManagedObjectContext:
_tracksFetchedResultsController
_groupsFetchedResultsController
_persistentContainer
_managedObjectContext
T@"NSPersistentContainer",&,N,V_persistentContainer
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSFetchedResultsController",R,N,V_tracksFetchedResultsController
T@"NSFetchedResultsController",R,N,V_groupsFetchedResultsController
T@"<SHMediaLibraryDataStoreDelegate>",W,N,V_delegate
loadEndpointForClientIdentifier:clientType:endpointType:installationID:callback:
storefront
updateTokensForEndpoint:language:storefront:installationID:
_storefront
T@"SHStorefront",R,N,V_storefront
taskTransformer
scheduleModifyTask:
setTaskTransformer:
_taskTransformer
T@"SHLCloudModifyTaskTransformer",&,N,V_taskTransformer
attachmentWithIdentifier:URL:options:error:
downloadImageURL:completionHandler:
sharedSession
processInfo
globallyUniqueString
temporaryDirectory
URLByAppendingPathComponent:
moveItemAtURL:toURL:error:
downloadTaskWithURL:completionHandler:
fetchRequestWithEntityName:
T@"SHMetadataMO",&,D,N
T@"NSSet",&,D,N
T@"NSData",&,D,N
T@"SHGroupMO",&,D,N
track
T@"SHTrackMO",&,D,N
T@"NSURL",C,D,N
T@"NSDate",C,D,N
T@"NSArray",&,D,N
Td,D,N
v8@?0
core
com.apple.ShazamKit
com.apple.shazamd
v16@?0@"NSError"8
com.apple.shazamd.transaction
SHAZAMKIT_MICROPHONE_ACCESS_ATTRIBUTION
artistName
name
shazamUrl
relationships
meta
matchOffset
speedSkew
frequencySkew
artwork
width
height
v24@?0@"SHDefaultConfigurationValues"8@"NSError"16
v24@?0@"SHCampaignTokens"8@"NSError"16
v16@?0@"SHServerResponseContext"8
v24@?0@"SHTokenizedURL"8@"NSError"16
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
POST
signature
data:audio/vnd.shazam.sig;base64,%@
audioSource
startDate
sessionDurationInSeconds
application/json
Content-Type
results
resources
errors
data
songs
shazam-songs
lyrics
music-videos
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
com.apple.ShazamNotifications
NOMATCH
v16@?0@"UNNotificationContent"8
com.apple.shazamd.audiomanager.dispatch
SHRecordingServiceStarted
SHRecordingServiceStopped
SHRecordingServiceTapClosed
com.apple.ShazamKit.recordingService.audioManager.dispatch
v20@?0B8@"NSError"12
com.apple.ShazamKit.serverResponseContextBuilder.dispatch
ShazamLibrary
momd
sqlite
com.apple.ShazamNotifications.main-thread
com.apple.ShazamNotifications.category.actionable
com.apple.ShazamNotifications.category.default
v16@?0@"UNNotificationAttachment"8
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_SUBTITLE
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_BODY
en-US
Shazam
language-tag
shazam-feature-flags
shazam-endpoints
shazam-media-api-host
shazamkit-media-api-host
shazam-campaign-tokens
shazam-default-values
v28@?0@8B16@"NSError"20
com.apple.shazamd.library.dispatch-queue
com.apple.shazamd.library.sync-queue
v24@?0@"SHMediaLibraryInfo"8@"NSError"16
v24@?0q8q16
v16@?0q8
com.apple.ShazamKit.shazamaudiorecorder.dispatch
SHMediaLibraryLabelName
platform
matches
retry
retryInMilliseconds
recordingIntermissionInMilliseconds
{deviceid}
{sessionid}
{language}
{storefront}
{shazamid}
{itsct}
{year}
{weekOfYear}
{geohash}
https
SHRecognitionServiceFoundMatch
match
SHRecognitionServiceNoMatch
unknown
external
internal
v32@?0@"AVAudioPCMBuffer"8@"AVAudioTime"16@"NSError"24
%@ is not a valid client identifier
-[_initWithInstallationID:] should not be used on this class
attributes
You don't have permission to fetch local tracks for %@
v16@?0@"NSNotification"8
recordingIntermission
com.apple.private.shazamkit.allow-external-audio-recording
com.apple.private.shazamkit.allow-internal-audio-recording
com.apple.private.tcc.allow
kTCCServiceMediaLibrary
kTCCServiceMicrophone
com.apple.private.ShazamKit
com.apple.Shazam.MusicRecognition.result
Match
Source
@"NSDictionary"8@?0
@distinctUnionOfObjects.%@
Should not try to save and delete tracks at the same time: %@
Should not try to save and delete groups at the same time: %@
T: +%lu -%lu G: +%lu -%lu
itsct
bglsk
%@.%@
ttml
SHLLibraryTrackRecognitionIdentifierKey
SHLLibraryTrackShazamKey
_[T]_
%@ %@ is not a valid recognition identifier and key
%@%@%@
v24@?0@"CKAccountInfo"8@"NSError"16
Track with identifier %@ is already associated to a group (%@), try removing it before.
Track with identifier %@ cannot be removed, try adding it before.
SHLSyncSessionFetchTaskIdentifier
SHLSyncSessionFetchTaskFetchType
SHLSyncSessionFetchTaskSyncTrigger
com.shazam.ShazamLibrary.operation-queue
v24@?0@"NSString"8@"NSError"16
com.shazam.library
v32@?0@"CKRecordID"8@"NSError"16^B24
No account logged in on this device.
Logged in account is restricted.
Logged in account is not a two-factor auth account with at least one passcode enabled device.
Missing encryption identity.
Network is unavailable.
Storage is full.
The content of your Shazam Library was deleted.
The content of your Shazam Library was purged.
Failed to sync your Shazam Library.
Shazam Library saves to the user's private database, which requires an authenticated session.
Parental Controls / Device Management has denied access to account credentials.
A device to device encryption requires an account with two-factor auth and a device with passcode enabled.
Encryption key has been permanently lost.
There's no network available to perform any networking tasks.
The user has reached the storage quota.
All contents have been removed.
All contents have been removed, usually through the Settings UI.
A possible internal sync error, check underlying error for a detailed description.
The user should manually log in.
Switch to an account that is not restricted by the system.
Turn on a passcode on the device and enable two-factor auth on the current iCloud account.
Non-recoverable. The user's local data should be automatically re-sync to Shazam Library.
Wait for network to become available and retry sync later.
The user should manually remove data or upgrade storage plans.
Non-recoverable. The user should choose to remove local data or re-sync to Shazam Library.
Initiate a manual sync later.
You must provide a valid encoded data.
SHLLibraryTrackIdentifier
SHLLibraryTrackRecognitionIdentifier
SHLLibraryTrackMetadata
SHLLibraryTrackProviderIdentifier
SHLLibraryTrackProviderName
SHLLibraryTrackDate
SHLLibraryTrackTitle
SHLLibraryTrackSubtitle
SHLLibraryTrackLocation
SHLLibraryTrackCompoundIdentifierKey
SHLLibraryTrackAssociatedGroupIdentifier
SHLLibraryTrackLibrarySet
CFBundleName
%@_ios
You must have a valid Shazam key to create a library item.
%@ is not a valid recognition identifier.
v16@?0@"NSArray"8
v24@?0@"CPSClipMetadata"8@"NSError"16
com.apple.ShazamNotifications.user-info.payload
com.apple.ShazamNotifications.user-info.media-item
com.apple.ShazamNotifications.user-info.attribution
com.apple.ShazamNotifications.user-info.apple-music
com.apple.aps.shazamd
com.apple.aps.shazamd.queue
ModifyRecords
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
%@_%@
libraryBatchInsertions
libraryBatchDeletions
com.apple.shazam
com.apple.shazam.secure
iCloud.com.shazam.Shazam
shazam-library
Group
detail
code
sh.001
sh.002
ModifySubscriptions
v32@?0@"NSString"8@"NSError"16^B24
Library
v16@?0@"SHLTaskPreconditionResult"8
SHLibraryAvailabilityListenerUserID
v24@?0@"CKRecordID"8@"NSError"16
A valid Shazam track requires a ShazamID. Library item (%@) is missing a ShazamID.
v24@?0q8@"NSError"16
com.apple.shazamlibrary.cloud
inflighttasks
failedtasks
privatedatabase
privatedatabasetransaction
zones
token
zonesubscription
SHFetchedResultsControllerTrackCacheName
SHFetchedResultsControllerGroupCacheName
SHLLibraryLabelName
lookup
Track
RecognitionIdentifier
ShazamKey
ProviderIdentifier
ProviderName
Date
Title
Subtitle
Location
AssociatedGroupIdentifier
Labels
InitialFetch
InitialUpload
UserAction
RemotePush
Migration
albumName
isrc
contentRating
genreNames
releaseDate
public-lyrics
EXPLICIT
v12@?0B8
v24@?0@"NSDictionary"8@"NSError"16
FetchDatabaseChanges
FetchZoneChanges
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
com.apple.musicrecognition
com.shazam.ShazamLibrary.syncSession.dispatchQueue
You must conform to the protocol of the modify task you're trying to add.
You must conform to the protocol of the fetch task you're trying to add.
ModifyZones
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
SHLLibraryGroupIdentifier
SHLLibraryGroupMetadata
SHLLibraryGroupTracksToSave
%@ is not a valid identifier.
SHLSyncSessionModifyTaskTracksToModify
SHLSyncSessionModifyTaskGroupsToModify
SHLSyncSessionModifyTaskIdentifier
SHLSyncSessionModifyTaskProgress
SHLSyncSessionModifyTaskRetryCount
SHLSyncSessionModifyTaskSyncTrigger
q24@?0@"SHLLibraryBatch"8@"SHLLibraryBatch"16
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
%@ context
%K == %@
%@ != nil
%@ == nil
%K IN %@
syncID
B24@?0@"SHTrackMO"8@"NSDictionary"16
@unionOfObjects.%@.%@
B24@?0@"SHGroupMO"8@"NSDictionary"16
v24@?0@"NSArray"8@"NSError"16
v16@?0@"NSString"8
v24@?0@"SHEndpoints"8@"NSError"16
v24@?0@"SHHost"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
SHGroupMO
SHMetadataMO
SHTrackMO
XPC connection interrupted from %@:%i
XPC connection invalidated from %@:%i
Deallocating the XPC Service
Failed to setup the remote proxy %@
Starting transaction
Ending transaction
Starting watchdog timer for %f seconds
Stopping watchdog timer
XPC Service stopping after final service %@ finished
XPC Service started running %@
Failed to set tmp dir suffix
Shazam service matching signature of duration %f with data of length %lu at %@
Received network response, no data %@
Server response parser: No response %@
Server response parser: Error, %@
Server response parser: Error, returning results, recording intermission %f, retry %f
Server response parser: Returning results, recording intermission %f, retry %f
Server response parser: has match %@
Server response parser: has no match
Server response parser: has no media items
Failed to encode network request %@
Failed to fetch data task %@
Sending no match notification
Sending match notification
Failed to schedule notification: %@
Deallocating audio session manager
Register observers
Remove observers
Deactivating audio session
Failed to deactivate AVAudioSession: %@
Audio interruption started, stopping recognition
Audio interruption ended
Media services lost notification - stopping recognition
Media services reset notification - restarting recognition
Activating audio session
Failed to set category on AVAudioSession: %@
Failed to enable haptics while recording: %@
Failed to set mode: %@
Failed to decouple IO AVAudioSession: %@
Failed to activate AVAudioSession: %@
handleAudioSessionRouteChange: %@
Deallocating recording service
Internal session support: %d headphones connected: %d
Using internal recognition session as the preferred session
Using external recognition session as the preferred session
Failed to stop recorder with error: %@
Unable to resume recognition after audio interruption: %@
Failed to start recorder %@
Failed to start recorders with error: %@
Told not to resume after audio interruption ended
Failed to create dispatch group while loading context
Failed to add default values to response context %@
Failed to add campaign token to response context %@
Unable to load Application Support directory: %@
Parent directory of persistent store url doesn't exist, creating one now
Failed to create persistent store directory: %@
Persistent store url missing, fallback to in memory store type
Populating remote configuration...
Fetching feature flags...
Feature flags fetch complete with value %@ error %@
Fetching endpoints...
Endpoint fetch complete with value %@ error %@
Fetching hosts...
Host fetch complete with value %@ error %@
Fetching campaign tokens...
Campaign tokens fetch complete with value %@ error %@
Fetching default values...
Default values fetch complete with value %@ error %@
Processed %lu changes before sync. Inserted %ld & Updated %ld local group entries
Processed %lu changes before sync. Inserted %ld & Updated %ld local track entries
Processed %lu deletions before sync. Deleted %ld local entries
Failed to persist library changes with error %@
iCloud account is not available or device to device encryption is not supported, skipping remote sync
Syncronize changes with changeset: %@
Processed %lu returned track changes. Inserted %ld & Updated %ld local entries
Processed %lu returned group changes. Inserted %ld & Updated %ld local entries
Processed %lu returned deletions. Deleted %ld local entries
Failed to persist sync changes with error: %@
Clear all local data and cache sync status
Deallocating SHAudioRecorder
Failed to create a new audio queue input with error %@
Failed to set audio queue property
Failed to add isRunning property listener
Failed to start audio queue, retry one more time
Failed to stop audio queue %@
Failed to remove isRunning property listener %@
Failed to dispose audio queue %@
Failed to start audio queue after a retry
Audio queue <%p> running state has changed
Recognition Service already recognizing
startRecognition of single signature
startRecognition based upon deadline %@
Tagging finish conditions NOT met - continuing
Tagging finish conditions: timeOut %d, oneAttempt: %d, foundMatch: %d, signatureMatch: %d, failed %d
Not recognizing so returning from stop
Deallocating the Shazam Service
Current bundle id is not entitled to use the library SPI
Missing bundle identifier, failed to start library service
Shazam service stop called
Validating entitlements failed with missing entitlements %@, stopping
Service %@ changed running state to %d
Client does not have entitlement: %@
Sent signal event: %@
Failed to parse lyrics song info %@
Failed to fetch account info %@
Account supports device to device encryption
Watchdog timer fired
<task: %{public}@ %@> Local subscription for <zone: %{public}@> does not exist, creating one now
<task: %{public}@ %@> <zone: %{public}@> does not exist, so we are attempting to create one with a subscription
<task: %{public}@ %@> is scheduled
Requesting app clip metadata for url %@
Error requesting App Clip metadata %@
Requesting app clip for url %@
Error in requestClipWithCompletion %@ clipIsAvailable %i
App clip request was successful
Failed fetching media item, bundle identifier missing
Fetching media item at %@
Error fetching media item %@
Unable to unarchive notification payload data %@ with error %@
Received public token '%@' on connection %@
APS push received for topic: '%@'
Ignoring APS push message, not a CloudKit update
Failed to complete modify operation. Error %@
iCloud account has changed, updating current user account id
iCloud account is available
No iCloud account available
iCloud account is restricted
iCloud account is temporarily unavailable
Failed to retrieve iCloud account information with error %@
Sync started with startCondition: %{public}@
Failed to complete <task: %{public}@ %@> and not retrying due to <error: %@>
Finished <task: %{public}@ %@> and sync complete
Finished <task: %{public}@ %@>, still syncing
Client called Library completion with success = %d for <task: %{public}@ %@>
Error finishing transaction for <task: %{public}@ %@> %@
Finished handling transaction for <task: %{public}@ %@>
Uploaded %lu modified tracks
Uploaded %lu modified groups
Deleted %lu items
Fetched %lu tracks
Fetched %lu groups
Fetched %lu deleted items
Current local cache requires migration
Successfully migrated local cache
Failed to migrate current local cache %@
Received notification response %@ for request %@ with content %@
No webURL provided for payload %@
Attempting to open app directly with url %@
failed to open app, likely not installed - requesting App Clip
Falling back to launching url %@ in Safari
Failed to open url with error %@
Opened URL %@ with result %@
LSAppLink openWithURL completed with success %i error %@
Using <token: %@> for database fetch
<zone: %@> does not exist locally, saving now
<zone: %@> was deleted
<zone: %@> was purged
Updated database <token: %@>
Failed to fetch changes for record (%@)
Updated <zone: %{public}@> token: %@>
<zone: %{public}@> token has expired. Removing saved token
Using <zone changes configuration: %@> for fetch
Failed to schedule <task: %{public}@ %@> pre-conditions were not satisifed
Failed to complete zone operation. Error %@
Retrying <task: %{public}@ %@> after %f seconds <error: %@>
Retrying <task: %{public}@ %@> immediately <error: %@>
Failed to load description %@
Failed to observe local track changes: %@
Failed to observe local group changes: %@
Updating existing entries for %lu library track(s)
Creating entries for %lu library track(s)
Updating existing entries for %lu Library Group IDs: %@
Creating entries for %lu library group(s)
Failed to purge local group objects: %@
Failed to purge local track objects: %@
Failed to delete sync metadata: %@
Failed to fetch request %{public}@
Persisting a Track with an associated Group ID, but there is no group saved locally. Will fallback to creation.
Failed to convert %@ to %@
Missing or invalid host %@
Missing or invalid match endpoint %@
Fetching endpoint with storefront %@
<task: %{public}@ %@> <zone: %{public}@> does not exist locally, so we are creating one
SHServer
NSXPCListenerDelegate
NSObject
SHXPCServiceProxy
SHMatcher
SHMediaLibrary
SHMediaLibrarySync
SHMediaLibraryQuery
SHMediaItemProvider
SHEventSignalling
SHXPCRemoteDelegate
SHMatcherDelegate
SHMediaLibrarySyncDelegate
SHXPCConnection
SHShazamServiceDelegate
SHShazamResponseItem
SHServerShazamResponse
SHServerResponseContext
SHAudioTapService
SHShazamServiceMatcher
SHServerMatchResponseParser
SHServerGetResponseParser
SHServerResourcesResponse
SHAMSEndpointRequester
SHNetworkRecognitionRequester
SHNotificationService
SHAudioSessionManager
SHRecordingService
SHAudioRecorderDelegate
SHAudioSessionManagerDelegate
SHServerResponseContextBuilder
SHMediaLibraryPersistentConfiguration
SHMediaLibraryContext
SHNotificationContentProvider
SHRemoteConfiguration
SHServerDataResponse
Chunking
SHMediaLibraryController
SHLShazamLibraryDelegate
SHMediaLibraryAccountListenerDelegate
SHMediaLibraryDataStoreDelegate
SHAudioTap
SHAudioRecorder
SHMediaLibraryLabel
SHServerResultsResponse
SHTokenizedURL
NSCopying
SHRecognitionService
SHSessionDelegate
SHService
SHShazamServiceCatalog
SHLCloudBackedOperation
SHMusicVideoResponseItem
SHServerMusicVideoResponse
SHShazamService
SHServiceDelegate
SHFeatureFlags
SHDefaultConfigurationValues
SHHost
SHLSyncSessionConfiguration
SHEntitlements
SHAnalytics
SHLLibraryChangeset
SHLTaskOutcome
SHCampaignTokens
SHEventSignalService
SHLyricsResponseItem
SHServerLyricsResponse
SHLLibraryTrackCompoundIdentifier
SHLCloudEncryptionPrecondition
SHLTaskPrecondition
SHLMutableLibraryGroup
SHLSyncSessionFetchTask
SHLSyncSessionTask
NSSecureCoding
NSCoding
SHLOperationQueue
SHStorefront
SHLError
SHLLibraryItemMetadata
SHLMutableLibraryTrack
SHWatchdogTimer
SHLLibraryTrack
SHLModifyTaskRecovery
SHLCloudFetchTaskScheduler
SHLFetchTaskScheduler
SHLTaskScheduler
SHAppClip
SHMediaItemService
SHNotificationPayload
SHAPSConnection
APSConnectionDelegate
SHLCloudContainerTransformer
SHLTaskSchedulerFactory
SHLCloudModifyTaskTransformer
SHLLibraryBatch
SHLCloudContext
SHLCloudTaskScheduler
SHLCloudGroupTransformer
SHServerErrorResponse
SHLCloudBackedZone
SHLCloudSubscriptionTransformer
SHLTaskPreconditionEvaluator
SHLCloudBackedContainer
SHMediaLibraryAccountListener
SHLLibraryStore
SHLCloudBackedSubscription
SHMediaLibraryItemMapper
SHLCloudAccountStatusPrecondition
SHLCloudLibraryCache
SHLLibraryCache
SHLLocalStateTransactionable
SHFetchedResultsControllerFactory
SHLCloudBackedItem
SHLLibraryLabel
SHEndpoints
SHLTaskPreconditionResult
SHLCloudTrackTransformer
SHLShazamLibrary
SHSongsResponseItem
SHServerSongsResponse
SHNotificationCenterDelegate
SHAppClipDelegate
UNUserNotificationCenterDelegate
SHLCloudFetchTaskTransformer
SHCloudContainer
SHLSyncSessionModifyTaskDelegate
SHLSyncSessionTaskDelegate
SHLSyncSessionDelegate
SHLSyncSessionFetchTaskDelegate
SHLSyncSession
SHLCloudBackedToken
SHLCloudModifyZoneTransformer
SHUpdatedTrackLocalTrackPair
SHUpdatedGroupLocalGroupPair
SHMediaLibraryUpdateReport
SHMediaLibrarySyncService
SHLLibraryGroup
SHLLibraryItem
NSMutableCopying
SHLShazamKey
ShazamLibrary
SHLTaskRetryContext
SHLFailedTaskRetryHandler
SHLSyncSessionModifyTask
SHMediaLibraryDataStore
NSFetchedResultsControllerDelegate
SHMediaLibraryQueryService
SHShazamServiceURLBuilder
SHLCloudModifyTaskScheduler
SHLModifyTaskScheduler
SHNotificationAttachmentProvider
SHGroupMO
CoreDataProperties
SHMetadataMO
SHTrackMO
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableArray"
@"SHAPSConnection"
@"NSXPCListener"
v24@0:8@16
v24@0:8@"SHMatcherRequest"16
@"<SHMatcherDelegate>"16@0:8
v24@0:8@"<SHMatcherDelegate>"16
v32@0:8@16@24
v32@0:8@"SHMediaLibrarySnapshot"16@"NSString"24
@"<SHMediaLibrarySyncDelegate>"16@0:8
v24@0:8@"<SHMediaLibrarySyncDelegate>"16
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"SHMediaLibraryInfo"@"NSError">16
v32@0:8@"SHMediaLibraryQueryParameters"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SHMediaItem"@"NSError">24
v24@0:8@"NSString"16
v32@0:8@16q24
v32@0:8@"<SHMatcher>"16@"SHMatcherResponse"24
v32@0:8@"<SHMatcher>"16q24
v40@0:8@16@24@32
v24@0:8@"<SHMediaLibrarySync>"16
v32@0:8@"<SHMediaLibrarySync>"16@"SHMediaLibrarySnapshot"24
v40@0:8@"<SHMediaLibrarySync>"16@"NSError"24@"NSArray"32
v32@0:8@"SHShazamService"16@"<SHService>"24
@24@0:8@16
v32@0:8d16@?24
v20@0:8B16
@"SHWatchdogTimer"
@"NSXPCInterface"
@"<SHXPCRemoteDelegate>"
@"SHAttribution"
@"NSString"
@"NSXPCConnection"
@"NSObject<OS_os_transaction>"
@"NSDate"
v24@0:8d16
@"SHRecordingService"
@32@0:8@16@24
@"<SHMatcherDelegate>"
@"NSISO8601DateFormatter"
@"SHShazamServiceCatalog"
@"<SHNetworkRecognitionRequester>"
@40@0:8@16@24@32
@48@0:8@16@24@32@40
@40@0:8@16@24^@32
@"NSDictionary"
v32@0:8@"NSURLRequest"16@?<v@?@"NSData"@"NSURLResponse"@"NSError">24
@"AMSMediaRequestEncoder"
@"AMSURLSession"
@"SHMatchedMediaItem"
@"NSUUID"
@"SHNotificationContentProvider"
@"<SHAudioSessionManagerDelegate>"
v40@0:8@"<SHAudioRecorder>"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
v32@0:8@16Q24
v32@0:8@"SHAudioSessionManager"16Q24
B24@0:8q16
v24@0:8Q16
@"SHAudioSessionManager"
@"NSArray"
@"NSObject<OS_dispatch_queue>"
@"<SHMediaLibrarySyncDelegate>"
@"SHMediaLibrarySnapshot"
@"NSError"
v32@0:8q16@?24
@"SHFeatureFlags"
@"AMSBag"
@"AMSBagValue"
v48@0:8@16@24@32q40
v24@0:8@"SHLShazamLibrary"16
v40@0:8@"SHLShazamLibrary"16@"NSArray"24q32
v48@0:8@"SHLShazamLibrary"16@"NSError"24@"NSArray"32q40
v32@0:8@"SHLShazamLibrary"16@?<v@?B>24
v32@0:8@"SHMediaLibraryDataStore"16@"SHMediaLibraryChange"24
@"SHLShazamLibrary"
@"SHMediaLibraryDataStore"
@"NSObject<OS_dispatch_group>"
@"SHMediaLibraryContext"
@"SHMediaLibraryAccountListener"
@?16@0:8
@40@0:8^v16Q24@32
B24@0:8^@16
q16@0:8
v24@0:8@?<v@?B@"NSError">16
@"<SHAudioRecorderDelegate>"16@0:8
v24@0:8@"<SHAudioRecorderDelegate>"16
@24@0:8q16
B28@0:8i16^@20
v24@0:8q16
^{OpaqueAudioQueue=}16@0:8
v24@0:8^{OpaqueAudioQueue=}16
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
[3^{AudioQueueBuffer}]
@"<SHAudioRecorderDelegate>"
^{OpaqueAudioQueue=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
@24@0:8^{_NSZone=}16
B32@0:8q16@24
@"NSMutableDictionary"
v32@0:8@"SHSession"16@"SHMatch"24
v40@0:8@"SHSession"16@"SHSignature"24@"NSError"32
d16@0:8
@"NSArray"16@0:8
@"<SHServiceDelegate>"16@0:8
v24@0:8@"<SHServiceDelegate>"16
@32@0:8@16q24
v40@0:8@16@24q32
B40@0:8@16@24q32
@"<SHServiceDelegate>"
@"SHSession"
@"SHAudioTap"
@"SHMatcherRequest"
@40@0:8@16q24@32
@"CKDatabaseOperation"
v28@0:8@16B24
v28@0:8@"<SHService>"16B24
@"SHRemoteConfiguration"24@0:8@"<SHService>"16
@"SHRecognitionService"
@"SHNotificationService"
@"SHAudioTapService"
@"SHMediaLibrarySyncService"
@"SHMediaLibraryQueryService"
@"SHMediaItemService"
@"SHEventSignalService"
@"<SHShazamServiceDelegate>"
@"SHEntitlements"
@40@0:8q16q24@32
v24@0:8^{__SecTask=}16
B40@0:8@16@24@32
^v32@0:8@16^{__SecTask=}24
B32@0:8@16^{__SecTask=}24
B40@0:8@16@24^{__SecTask=}32
@"NSMutableSet"
@24@0:8d16
@"MSVLyricsSongInfo"
@"SHLShazamKey"
v24@0:8@?<v@?@"SHLTaskPreconditionResult">16
@"SHLCloudBackedContainer"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSProgress"16@0:8
@"SHLSyncSession"16@0:8
v24@0:8@"SHLSyncSession"16
@"NSProgress"
@"SHLSyncSession"
@"<SHLSyncSessionFetchTaskDelegate>"
@"NSOperationQueue"
@"NSOperation"
@"SKCloudServiceController"
@32@0:8q16@24
d24@0:8@16
q24@0:8@16
@"NSData"
@"NSObject<OS_dispatch_source>"
@"CLLocation"
@"SHLLibraryTrackCompoundIdentifier"
@56@0:8@16@24@32@40@48
@"SHLSyncSessionModifyTask"
v24@0:8@"SHLSyncSessionFetchTask"16
@"SHLCloudFetchTaskTransformer"
@"SHLCloudSubscriptionTransformer"
@"<SHAppClipDelegate>"
@"SHShazamServiceURLBuilder"
@"SHServerResponseContextBuilder"
@"SHMediaItem"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"APSConnection"
@"SHMediaLibraryController"
@"SHLSyncSessionConfiguration"
@"CKModifyRecordsOperation"
@"NSSet"
@"SHLCloudModifyZoneTransformer"
@"SHLCloudLibraryCache"
@"CKRecordZone"
@"CKModifySubscriptionsOperation"
@"CKContainer"
@"<SHMediaLibraryAccountListenerDelegate>"
@"SHLCloudContainerTransformer"
@"<SHLLibraryCache>"
@"CKSubscription"
B40@0:8@16q24^@32
B40@0:8q16@24^@32
B40@0:8@"<SHLSyncSessionTask>"16q24^@32
B40@0:8q16@"NSString"24^@32
@"NSArray"24@0:8q16
@"<SHLSyncSessionTask>"32@0:8q16@"NSString"24
B32@0:8@16^@24
B40@0:8@16@24^@32
@"CKRecord"
@28@0:8B16@20
@28@0:8@16B24
q24@0:8q16
@"<SHLShazamLibraryDelegate>"
@"SHLLibraryStore"
@"SHLFailedTaskRetryHandler"
{CGSize=dd}32@0:8{CGSize=dd}16
v40@0:8@"SHAppClip"16@"NSURL"24@"NSError"32
v40@0:8@16@24@?32
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"SHAppClip"
@40@0:8@16@24@?32
@"CKFetchDatabaseChangesOperation"
@"CKFetchRecordZoneChangesOperation"
v40@0:8@"SHLSyncSession"16@"<SHLSyncSessionTask>"24@"SHLTaskOutcome"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionModifyTask"24@"NSArray"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionFetchTask"24@"NSArray"32
@"<SHLSyncSessionDelegate>"
@"SHLTaskSchedulerFactory"
@"<SHLLocalStateTransactionable>"
@"CKServerChangeToken"
@"CKModifyRecordZonesOperation"
@"SHMediaLibraryTrack"
@"SHTrackMO"
@"SHMediaLibraryGroup"
@"SHGroupMO"
@24@0:8@"NSString"16
@32@0:8@"NSString"16@"SHLLibraryItemMetadata"24
@"SHLLibraryItemMetadata"16@0:8
@"SHLLibraryItemMetadata"
@32@0:8@16@?24
@"SHLTaskOutcome"
@"<SHLSyncSessionModifyTaskDelegate>"
@"SHLLibraryBatch"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
q24@0:8Q16
@"NSFetchedResultsController"
@"<SHMediaLibraryDataStoreDelegate>"
@"NSPersistentContainer"
@"NSManagedObjectContext"
v40@0:8@16q24@?32
v48@0:8@16q24@32@?40
v56@0:8@16q24q32@40@?48
@"SHStorefront"
v24@0:8@"SHLSyncSessionModifyTask"16
@"SHLCloudModifyTaskTransformer"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241128</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>shazamd</string>
<key>CFBundleExecutable</key>
<string>shazamd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.shazamd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>shazamd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>19E232</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>15.4</string>
<key>DTSDKBuild</key>
<string>19E232</string>
<key>DTSDKName</key>
<string>iphonesimulator15.4.internal</string>
<key>DTXcode</key>
<string>1330</string>
<key>DTXcodeBuild</key>
<string>13E6049a</string>
<key>MinimumOSVersion</key>
<string>15.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.shazamd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.shazam.secure</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.ClipServices</key>
<true/>
<key>com.apple.private.ShazamKit</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/Frameworks/ShazamKit.framework/shazamd</string>
</dict>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.shazam.secure</key>
<string>com.apple.shazam.secure</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.shazamkit.controlcenter.ShazamModule</string>
</array>
<key>com.apple.private.mediasafetynet.exception.shazam</key>
<true/>
<key>com.apple.private.shazamkit.persistence</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.ShazamNotifications</string>
</array>
<key>com.apple.security.device.audio-input</key>
<true/>
<key>com.apple.security.device.microphone</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Application Support/com.apple.shazamd/</string>
<string>/Library/Caches/com.apple.shazamd/</string>
<string>/Library/Caches/com.apple.shazam.secure/</string>
<string>/Library/Caches/com.apple.shazamlibrary.cloud/</string>
<string>/Library/HTTPStorages/com.apple.shazamd/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.ClipServices.clipserviced</string>
<string>com.apple.audio.AudioQueueServer</string>
<string>com.apple.controlcenter.remoteservice</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.systemstatus.activityattribution</string>
<string>com.apple.mediasafetynet.exceptions</string>
<string>com.apple.powerlog.plxpclogger.xpc</string>
<string>com.apple.apsd</string>
<string>com.apple.shazamd.persistence</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.ShazamKit</string>
<string>com.apple.shazamd</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.play-media</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.shazamd</string>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
