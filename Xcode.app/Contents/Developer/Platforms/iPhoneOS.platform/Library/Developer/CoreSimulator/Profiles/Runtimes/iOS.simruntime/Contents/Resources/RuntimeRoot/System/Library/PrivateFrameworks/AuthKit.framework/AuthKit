@(#)PROGRAM:AuthKit  PROJECT:AuthKit-1
com.apple.Carousel.authAlertXPCService
alertTitle
alertMessage
alertIdentifier
defaultButtonTitle
alternateButtonTitle
otherButtonTitle
alertResponse
alertSupplementViewID
alertSupplementViewData
overWriteExistingAlert
systemSoundIDKey
textFieldDescription
textFieldIsSecure
textFieldInputType
textFieldLength
textFieldValue
textFieldContentType
com.apple.AuthKit.AKSecondFactorCodeView
com.apple.AuthKit.AKLocationSignInView
com.apple.AuthKit.AKAuthorize
_transactionID
_bundleID
_teamID
v8@?0
com.apple.AuthKit.alertRequestQueue
v16@?0@"NSError"8
v24@?0@"NSDictionary"8@"NSError"16
_userID
_clientID
_altDSID
com.apple.authkit
com.apple.ak.custodian.xpc
AKExtensionItemContext
com.apple.AuthKitUI.AKLocationSignInAlert
com.apple.AuthKitUI.AKSecondFactorAlert
com.apple.AuthKitUI.AKSecondFactorEntryAlert
/System/Library/Frameworks/SetupAssistant.framework/SetupAssistant
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
/AppleInternal/Library/Frameworks/SetupAssistant.framework/SetupAssistant
BYLicenseAgreement
Unable to find class %s
_appID
_appName
_nonce
_serviceID
_state
AKPassword
AKRawPassword
AKIDMSToken
token
AKDSID
AKAltDSID
AKRememberPassword
AKIsHSA2
AKSecurityLevel
AKAuthenticationMode
AKIsUnderage
AKIsLegacyStudent
AKDidPerformInteractive
AKNewAppleIDSetupInfo
AKMasterKeyID
AKDidShowServerUI
AKAcceptedTerms
AKManagedAppleID
AKAuditLogin
AKFirstName
AKLastName
AKImageURL
AKShortLivedToken
AKIdentityToken
AKCustodianSetupToken
AKIsServerUIRequired
AKInheritanceBeneficiarySetupToken
GsIdmsToken
AKInheritanceBeneficiaryIdentifier
AKInheritanceBeneficiaryWrappedKey
AKIsPasscodeResetRequired
AKConfigurationInfo
AKDuplexSession
AKCircleContext
AKRepairState
AKCustodianRecoverySessionID
AKAppleIDEmailsDidChangeNotification
com.apple.authkit.user-info-changed
altDSID
security-level
auth-mode
AKDidPerformBiometric
AKDidPerformPasscode
managedOrganizationType
managedOrganizationName
isNotificationEmailAvailable
notificationEmail
primaryEmailVetted
firstName
lastName
reachableEmails
forwardTo
authorizedAppListVersion
previouslySelectedAsPrivateEmail
previouslySelectedEmail
AKDemoAccount
AKAdditionalInfo
AKAppleIDAuthenticationControllerXPCLock
-[AKAppleIDAuthenticationController authenticateWithContext:completion:] requires a non-nil value for the context parameter.
v20@?0B8@"NSError"12
v24@?0@"AKUserInformation"8@"NSError"16
v24@?0Q8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
(null)
v24@?0@"NSNumber"8@"NSError"16
v24@?0@"AKCircleRequestPayload"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
-[AKAppleIDAuthenticationController clearSessionCacheWithCompletion:]_block_invoke_2
_encryptedPRKC
_ownerCustodianAltDSID
<%@: %p {
encryptedPRKC: %@...
ownerCustodianAltDSID: %@
<%@: %p, _underlylingTask: %@>
AuthKitURLSession
com.apple.authkit.url
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
icloud.com
@32@?0@"NSString"8Q16^B24
 not
scopes
client_id
credential_state
transfer_state
primary_client_id
origin
transferred
expired
<%@:%p> clientID: %@, scopes: %@, state:%li, transferState:%@, primaryClientID:%@, origin:%@
_beneficiaryID
_wrappingKeyData
_wrappingKeyString
_wrappedKeyData
_wrappedKeyString
_claimTokenData
_claimTokenString
Access code for beneficiary %@
core
traffic
query
signpost
aaa-itriage
userInteraction
fido
siwa
com.apple.ak.puffin.xpc
BundleID
IconData
IconScale
type
DidTapNotification
DidStartServerAuthorization
FetchAppIcon
FetchAppIconReply
StartProgressAnimation
Unknown
_attestationHeaders
%@ %@
com.apple.ak.inheritance.xpc
v24@?0@"AKBeneficiaryManifest"8@"NSError"16
-[AKInheritanceController fetchManifestOptionsWithInheritanceContext:completion:]_block_invoke
-[AKInheritanceController setupBeneficiaryWithInheritanceContext:completion:]_block_invoke
-[AKInheritanceController updateBeneficiaryWithInheritanceContext:completion:]_block_invoke_2
-[AKInheritanceController removeBeneficiaryWithInheritanceContext:completion:]_block_invoke_2
v24@?0@"AKBeneficiaryAliasSetupResult"8@"NSError"16
-[AKInheritanceController _setupBeneficiaryAliasWithInheritanceContext:completion:]_block_invoke
AKContextManagerQueue
v20@?0B8@"NSDictionary"12
v12@?0B8
-[AKAppleIDAuthenticationContextManager provisionAnisetteForContext:withCompletion:]
-[AKAppleIDAuthenticationContextManager syncAnisetteForContext:withSIMData:completion:]
-[AKAppleIDAuthenticationContextManager eraseAnisetteForContext:withCompletion:]
-[AKAppleIDAuthenticationContextManager fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[AKAppleIDAuthenticationContextManager legacyAnisetteDataForContext:DSID:withCompletion:]
-[AKAppleIDAuthenticationContextManager fetchPeerAttestationDataForContext:withRequest:completion:]
com.apple.gs.
(cag).
%@...
(******)
v32@?0@"NSString"8@16^B24
@32@?0@8@16^B24
v32@?0@8@16^B24
com.apple.authkit.trusted-device-list-changed
mids
_custodianUUID
_wrappingKeyRKC
_ownerAppleID
_custodianSetupToken
_pushToken
_recoverySessionID
_custodianRecoveryToken
_aaData
_idmsData
_recoveryStep
_ownerDevice
_errorCode
_cliMode
_notificationAction
_custodianUUIDs
_beneficiaryUUIDs
_lastDataSyncTimestamp
_custodianContacts
_beneficiaryContacts
_isCustodianSyncAction
<%@: %p> with 
CustodianUUID: %@ 
altDSID: %@ 
OwnerAppleID: %@ 
ownerCustodianAltDSID: %@ 
wrappingKeyRKC: %@ 
pushToken: %@ 
sessionID: %@ 
custodianRecoveryToken: %@ 
recoveryStep: %@ 
cliMode: %i 
 custodianContacts: %@ 
 beneficiaryContacts: %@ 
 isCustodianSyncAction: %d
_userSelection
_loginChoice
_selectedRequest
_rawAccountPassword
<%@: %p { selectedRequest: %@, userSelection: %@, loginChoice: %@, rawPassword: %@}
(empty)
%@==
[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}
SELF MATCHES %@
POST
AKAttestationErrorDomain
AKAttestationSignerValidity
AKAttestationUseDeviceCheckKeychainAccess
v32@?0@"NSDictionary"8@"NSData"16@"NSError"24
v32@?0@"NSData"8@"NSData"16@"NSError"24
_akAction
_itemIdentifier
_txnid
_isContinuityPush
<%@:%p> identifier: %@, action: %@, altDSID: %@, txnid: %@
<<%@> - Web session ID: %@, Expiry: %@, User info: %@>
webSessionIdentifier
expiryDate
userInfo
number
slotID
label
dataPreferred
defaultVoice
physicalSim
inUse
PhoneCertificate
B32@?0@"CTXPCServiceSubscriptionContext"8Q16^B24
com.apple.accounts.carrierUtilities.queue
@"NSXPCConnection"8@?0
UserInitiated
ScheduledActivity
LocaleChange
true
ak-button
ak-action
X-Apple-AK-Action
X-Apple-I-Cont
AKHarvestedContinuationHeaders
start-icsc
mk-validation
continue
complete
read
cancel
delete
teardown
open
clientInfo
X-Apple-AK-Continuation-Data
X-Apple-Alternate-Id
X-Apple-DSID
X-Apple-I-88CC-99DE-EE63-2736
X-Apple-I-Experiment-Features
X-Apple-PE-Token
X-Apple-I-Account-Name
X-Apple-I-Account-NameType
phoneNumber
X-Apple-Requested-Partition
AKUsername
AKPasswordResetTokenKey
AKEmailVerificationCompletedNotificationKey
icloud
imessage
facetime
itunesstore
gamecenter
AKICSCURLKey
AKRecoveryURLKey
X-Apple-iCSC-Identity-Token
X-Apple-iCSC-PE-Token
X-Apple-Recovery-Identity-Token
X-Apple-Recovery-PE-Token
X-Apple-MK-Validation-Token
X-Apple-I-iCSC-PRK
X-Apple-I-iCSC-MD-M
X-Apple-I-ICSCREC
X-Apple-I-IdMS-Data
status
success
failure
appleid
errorCode
errorMessage
action
start_account_recovery
try_again
prs_account_nm
personID
dsid
repair-state
authmode
pakedata
idmsdata
circlestep
ptkn
atxid
RequestURL
Request
Header
prkgen
X-Apple-AK-Auth-Type
X-Apple-AK-Request-Auth-Type
HSA2
X-Apple-I-Experiment-Mode
X-Apple-I-RecoveryKey-Show
X-Apple-I-HSA1-Conversion
X-Apple-I-Test-Account-Mode
source
clear_followup_notification
continuity_push_followup_notification
AKFollowUpAltDSIDKey
AKFollowUpServerURL
AKFollowUpSafariURL
com.apple.authkit.hsa2-password-reset
verifyPrimaryEmail
AKFollowUpLocalURLKey
AKFollowUpAppleAccountRootKey
IDMSUrl
urlKey
txnid
cfudata
cfuids
items
com.apple.AuthKitUI.AKFollowUpServerUIExtension
Sign In With Apple
AKUserIdentifier
AKAuthorizedScopes
AKUserInformation
AKAuthorizationCode
AKClientBundleID
envelope.fill.badge.shield.trailinghalf.fill
faceid
touchid
key.fill
hmeListVersion
TEMPORARY
X-Apple-CR-Token
X-Apple-I-Private-Email-Address
privateEmailKey
X-Apple-I-Private-Email-Client-Bundle
AUTH_EVENT_TYPE_UNKNOWN
SRP_AUTH_FAILURE
SECOND_FACTOR_SERVER_UI
SECOND_FACTOR_PIGGYBACK_TRANSITION
SECOND_FACTOR_PIGGYBACK_FAILURE
SECOND_FACTOR_PIGGYBACK_ESCAPE_SMS_SUCCESS
SECOND_FACTOR_PIGGYBACK_ESCAPE_FAILURE
appleManagedAccountSignIn
appleIdSettings
CFBundleIconFile
CFBundleIconName
com.apple.gs.appleid.auth
com.apple.gs.idms.hb
RKMandate
isManagedAccount
localizedAppName
X-Apple-Client-App-Name
X-Apple-Proxied-App-Name
X-Apple-AK-Context-Type
X-Apple-I-Auth-Type
X-Apple-I-BC
X-Apple-I-Client-Bundle-Id
X-Apple-I-Proxied-Bundle-Id
webAccessEnabled
serverExperimentalFeatures
X-Apple-I-Device-Region-Code
silentEscrowRecordRepairEnabled
custodianInfos
custodianUuid
groupkitEligibilityInd
_authorizationRequests
_callerBundleID
_iconData
_iconName
_iconScale
_iconSize
_isFirstPartyLogin
_isRapportLogin
_isWebLogin
_localizedAppName
_passwordRequests
_proxiedAssociatedDomains
_proxiedClientAppID
_proxiedClientAppName
_proxiedClientBundleID
_proxiedServiceID
_proxiedClientTeamID
_proxiedDeviceClass
_proxiedDeviceName
_requestIdentifier
_requirePassword
_shouldForcePrivateEmail
_shoudlForceUI
_shoudlSkipBiometrics
_shoudlSkipUI
_upgradeContext
_upgradeFromPassword
_clientShouldAuthenticateExternally
_authSessionTimeout
_externalAuthToken
_externalLocalAuthData
_continuationRequestIdentifier
_requestOptions
_sessionID
_shouldUseProxiedClientBundleIDForSRP
B24@?0@"<AKCredentialRequestProtocol>"8Q16
<%@: %p> Auth Request %@ 
Password Request: %@ 
Proxied Bundle: %@
Proxied Team: %@ 
Session ID: %@
_userInformation
_makePrivateEmail
{ userInformation: %@, makePrivateEmail: %@}
X-Mme-Device-Id
X-Apple-I-Provisioning-Device-Id
X-Apple-I-Client-Time
X-Mme-Proxied-Device-Id
X-Apple-Identity-Token
X-Apple-Proxied-Identity-Token
X-Apple-GS-Token
X-Apple-SL-Token
X-Apple-I-MD
X-Apple-I-MD-M
X-Apple-I-MD-RINFO
X-Apple-I-Companion-MD
X-Apple-I-Companion-MD-M
X-Apple-I-Companion-MD-RINFO
X-Apple-I-Proxied-MD
X-Apple-I-Proxied-MD-M
X-Apple-I-Proxied-MD-RINFO
X-Apple-Ephemeral-Auth
X-Mme-Nas-Qualify
X-Apple-I-Logged-In-Services
Content-Type
X-Apple-I-CK
X-Apple-I-PRK
X-MMe-Country
X-MMe-Proxied-Country
X-Apple-I-Locale
X-Apple-I-TimeZone
X-Apple-I-TimeZone-Offset
X-MMe-Companion-Client-Info
X-MMe-Proxied-Client-Info
X-Apple-I-PRK-Gen
X-Apple-I-Proxied-PRK-Gen
X-Apple-I-Local-Login-Uses-AppleID
X-Apple-HB-Token
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Apple-I-Proxied-SRL-NO
X-Apple-I-Device-PN
X-Apple-IDS-PAC
X-Apple-I-Phone
X-Apple-iOS-SLA-Version
X-Apple-I-MD-LU
X-Apple-I-CDP-Circle-Status
X-Apple-I-OT-Status
X-Apple-I-CDP-Status
X-Mme-Show-Warranty
X-MMe-Device-Model
X-Apple-I-AppleID
X-Apple-I-DeviceUserMode
X-Apple-I-CFU-State
X-Apple-Offer-Security-Upgrade
X-Apple-I-App-Provided-Context
X-Apple-I-ReAuth
X-Apple-I-Proxied-ICSCREC
X-Apple-Test-Application
X-Apple-I-Device-Configuration-Mode
X-Apple-I-SKU-Country
X-Apple-I-DC
X-Apple-I-Exec-Mode
X-Apple-I-Request-Context
X-Apple-AK-DataRecoveryService-Status
X-Apple-I-Device-Region-Required
X-Apple-I-UrlSwitch-Info
X-Apple-I-Request-UUID
X-Apple-I-Private-Email-Domain
X-Apple-I-Private-Email-Origin
X-Apple-I-Private-Email-App-Name
X-Apple-Guardian-Identity-Token
X-Apple-Guardian-HB-Token
X-Apple-Guardian-GS-Token
X-Apple-I-Device-Mode
X-Apple-I-Fido-Recovery-Token
X-Apple-I-Recovery-Contact-Sync-Action
false
v32@?0@"NSString"8@"NSString"16^B24
%@:%@
application/json
itunes
piggybacking
RegionCode
%llu
AKFakeAuthSuccess
AKDisablePiggy
AKAddHS2CreateHeader
AKSuppressHSA2Suggestions
AKAllowPhoneNumberAccounts
AKAddExperimentalModeHeader
AKHideInternalBuildHeader
AKAddTestApplicationHeader
AKSuppressModalSheetsInMacBuddy
_AKAlwaysShowWelcome
_AKAutocycleAppsInTiburon
_AKAutocycleAppsInWebTakeOver
_AKAddTestAccountHeader
_AKAuthorizationDemoMode
_AKCloudPartition
_AKByPassCustodianDeviceCheck
_AKBeneficiaryLiveOnKey
AKForceSilentEscrowRecordRepairEnabled
AKLastIDMSEnvironment
AKLastLocale
AKShouldRequestPiggybackingPresenceEnforcement
AKOverridePiggybackingIDMSPresence
AKOverridePiggybackingLocalPresence
com.apple.authkit.config
v12@?0i8
AKConfigurationDidChangeNotification
cfgs
abs-enable
baa-interval
X-MMe-Nas-Qualify
X-MMe-Nas-E
X-Apple-Baa
X-Apple-I-Payload-Hash
X-Apple-Baa-E
X-Apple-I-Baa-S
X-Mme-Device-Id-S
X-Apple-I-Provisioning-Device-Id-S
X-MMe-Client-Info-S
X-MMe-Proxied-Nas-Qualify
X-MMe-Proxied-Nas-E
X-Apple-Proxied-Baa
X-MMe-Proxied-Client-Info-S
X-Apple-Proxied-Baa-E
com.apple.authkit.signingQ
v16@?0@"NSMutableDictionary"8
%@%@
@"NSString"32@?0@"NSString"8@"NSData"16^B24
_manifest
_accessCode
_beneficiarySetupToken
_beneficiaryIdentifier
_services
_operatingSystems
_includeUntrustedDevices
_includeFamilyDevices
<%@:%p> altDSID: %@, os: %@, services: %@, untrusted: %d, family: %d
/System/Library/Frameworks/AppleMediaServices.framework/AppleMediaServices
/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
/AppleInternal/Library/Frameworks/AppleMediaServices.framework/AppleMediaServices
AMSMediaTask
AMSBag
AMSMediaArtwork
AMSMediaArtworkFormatPNG
AMSMediaArtworkCropStyleBoundedBox
AMSMediaTaskPlatformMac
artwork
name
v24@?0@"AMSMediaResult"8@"NSError"16
attributes
platformAttributes
com.apple.ak.authorizationservices.xpc
AppleIDAuthSupportNoPinning
.GlobalPreferences
adsid
DSID
aliases
retaining-services
additionalInfo
reachableEmailAddresses
vettedPrimaryEmail
forwardingEmail
phoneAsAppleID
isUnderage
isSenior
demoAccount
ageOfMajority
appleIdSignInEnabled
privateAttestationEnabled
privateEmailSelection
authorizationEmailSelection
primaryEmail
WarmUpVerificationTimeStamp
DeviceTrustRevoked
AuthModeTimeStamp
canHaveCustodian
canBeCustodian
custodianEnabled
custodianLastModified
beneficiaryAccount
canHaveBeneficiary
canBeBeneficiary
appleIDCountryCode
hasMDM
custodianListVersion
beneficiaryListVersion
fidoAccount
AKAccountManagerQueue
v32@?0@"NSString"8Q16^B24
B24@?0@"ACAccount"8Q16
v32@?0@"ACAccount"8Q16^B24
@"NSString"32@?0@"NSNumber"8Q16^B24
AKAccountManager.groupedAccountCleanup
accountClass
primaryAccount
primary
primaryEmailVerified
appleIdAliases
@8@?0
com.apple.ak.privateemail.xpc
v24@?0@"AKPrivateEmail"8@"NSError"16
-[AKPrivateEmailController lookupPrivateEmailWithContext:completion:]_block_invoke
-[AKPrivateEmailController fetchPrivateEmailForAltDSID:withKey:completion:]_block_invoke
-[AKPrivateEmailController registerPrivateEmailForAltDSID:withKey:completion:]_block_invoke
-[AKPrivateEmailController fetchPrivateEmailWithContext:completion:]_block_invoke
v24@?0@"AKPrivateEmailContext"8@"NSError"16
-[AKPrivateEmailController getContextForRequestContext:completion:]_block_invoke
-[AKPrivateEmailController deletePrivateEmailDatabaseWithCompletion:]_block_invoke
-[AKPrivateEmailController privateEmailListVersionWithCompletion:]_block_invoke
-[AKPrivateEmailController removePrivateEmailKey:completion:]_block_invoke
-[AKPrivateEmailController listAllPrivateEmailsForAltDSID:completion:]_block_invoke
%02X
com.apple.ak.anisette.xpc
_user
_site
_appleIDAuth
_createAppleID
AKAuthorizationLoginChoice:
User: %@    Site: %@    AppleIDAuth: %@
/System/Library/Frameworks/CoreFollowUp.framework/CoreFollowUp
/System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp
/AppleInternal/Library/Frameworks/CoreFollowUp.framework/CoreFollowUp
FLFollowUpAction
FLFollowUpController
FLFollowUpItem
FLFollowUpNotification
FLGroupIdentifierAccount
FLNotificationOptionForce
FLNotificationOptionSpringboardAlert
FLNotificationOptionSpringboardAlertActionOnly
FLNotificationOptionExtensionForNotification
FLNotificationOptionExtensionActions
FLNotificationOptionBannerAlert
_accessibleBundleInformation
_manifestOptions
identifier
description
safari
_identityToken
_heartbeatToken
_shouldSendSigningHeaders
_shouldSendEphemeralAuthHeader
_serviceType
_continuationToken
_passwordResetToken
_serviceToken
_serviceTokenIdentifier
_proxiedDeviceAnisetteData
_proxiedDevice
_proxyAppName
_clientAppName
_clientBundleID
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendICSCIntentHeader
_loggedInServices
_hasEmptyPasswordOverride
_securityUpgradeContext
_shouldOfferSecurityUpgrade
_shouldSendPhoneNumber
_phoneNumberCertificate
_phoneInformation
_followupItems
_appProvidedContext
_proxiedAltDSID
_proxiedIdentityToken
v16@?0@?<v@?>8
v24@?0@"AKAnisetteData"8@"NSError"16
v24@?0@"AKAttestationData"8@"NSError"16
hsa2
X-Apple-CDP-Action
@"NSString"32@?0@"NSString"8@"NSString"16^B24
team_id
privateEmail
apps
v32@?0@8Q16^B24
<%@:%p> team: %@, user: %@, email: %@, apps: {
step
atxnid
pake
<%@:%p> transaction: %@, step: %ld, errorCode: %ld
_responseInfo
_serverInfo
_clientInfo
_transactionId
_clientErrorCode
_circleStep
_supportsPresence
_presenceSID
_presenceMode
_presenceFallbackApproved
_presenceCheckPassed
_localPresenceFound
contextKey
contextAltDSID
contextProxiedApp
contextBundleID
contextAppName
upgradeBundleID
HmeContext:{%@:%@:%@}
/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
/System/Library/PrivateFrameworks/AuthenticationServices.framework/AuthenticationServices
/AppleInternal/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
ASAuthorizationSecurityKeyPublicKeyCredentialProvider
ASAuthorizationSecurityKeyPublicKeyCredentialRegistration
ASAuthorizationPublicKeyCredentialParameters
ASAuthorizationController
ASAuthorizationSecurityKeyPublicKeyCredentialAssertion
ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor
ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports
ASAuthorizationPublicKeyCredentialResidentKeyPreferencePreferred
ASAuthorizationPublicKeyCredentialAttestationKindDirect
ASAuthorizationErrorDomain
gsService
midStartProvisioning
midFinishProvisioning
midSyncMachine
securityUpgradeEligibility
securityUpgrade
validateCode
postData
iForgot
iForgotResetNotification
createAccount
device_list_self
trustedDevices
trustedDevicesSummaryUrl
qualifyCert
qualifySession
tokenUpgrade
postConfigData
fetchConfigData
changePasswordUrl
validateVettingToken
renewRecoveryToken
circle
followUpItems
fetchUserInfo
fetchAuthorizedApps
fetchPrimaryApp
fetchAuthMode
storeModernRecoveryKey
acsURL
repair
userVerificationResult
appleIDAuthorizeHTMLResponse
secondaryAuth
createChildAccount
deleteAuthorizedApp
managePrivateEmailAddress
fetchHmeList
usePrivateEmailAddress
registerHme
privacyRepair
goldilocksIncompatibleDevices
startCustodianSetup
finishCustodianSetup
abortCustodianSetup
updateDataRecoveryKey
startCustodianRecovery
custodianRecoveryStep
custodianRecoveryValidate
fetchDataRecoveryKey
custodianRecoveryFeedback
custodianIncompatibleDevices
manageRecoveryKey
manageDataRecoveryService
accountContactDataSync
dataRecoveryServiceEnable
dataRecoveryServiceDisable
dataRecoveryServiceDisableComplete
dataRecoveryServiceEnableComplete
webAccessDisable
webAccessEnable
walrusKB
walrusCountryAnchorKB
webAccessKB
fetchGlobalConfigs
fetchBeneficiaryDataSelectionOptions
setupBeneficiary
updateBeneficiary
removeBeneficiary
createBeneficiaryAccountLiveOn
startFidoAuth
finishFidoAuth
startFidoRecoveryAuth
finishFidoRecoveryAuth
contactKeyVerificationIneligibleDevices
urls
apsEnv
iForgotAppleIdLocked
idmsEnv
is-phone-number-supported
appleOwnedDomains
appleIDAuthorizationUrls
is-in-line-flow-supported
continuation-header-prefix
2faUpgradeAccountTypePriority
custodian
inheritance-cfg
settingsInlineLogoViewDisabled
IdMS1
IdMS2
IdMS3
actions
notification
body
title
dismiss
frequency
localUrlKey
root
bundlePath
iconName
notifyingAppBundleID
force
delay
osAlert
osAlertActionOnly
bannerAlert
defbtn
albtn
priority
zeroAction
badgeOnly
omitBadge
AKAction
notifyingAppId
@32@?0@"NSDictionary"8Q16^B24
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_authContext
_recoveryContinuationURL
_supportsMasterKeyRecovery
_mandatesRecoveryKey
%s%s%s
[31m
yyyy-MM-dd
Accept
Error deserializing data %@ for data %@
_authenticatorData
_signature
_clientData
_credentialName
_userIdentifier
_challenge
_relyingPartyIdentifier
<%@: %p {
AuthenticatorData: %@, 
Signature: %@, 
CredentialID: %@, 
ClientData: %@, 
UserIdentifier: %@, 
Challenge: %@, 
RelyingPartyIdentifier: %@, 
com.apple.ak.walrus.xpc
AKWalrusWebAccessRequestedServices
v24@?0@"AKPCSAuthContext"8@"NSError"16
-[AKWalrusController PCSAuthContextForWebSessionIdentifier:serviceName:completion:]_block_invoke
-[AKWalrusController removeAllPCSAuthCredentialWithCompletion:]_block_invoke
-[AKWalrusController verifyEnableWalrusAllowedWithContext:completion:]_block_invoke
-[AKWalrusController postWalrusStateUpdateToServerWithContext:urlBagKey:username:password:completion:]_block_invoke
prefs:root=APPLE_ACCOUNT
prefs:root=APPLE_ACCOUNT&aaaction=upgradeSecurityLevel
prefs:root=Passcode
com.apple.AuthKit
AUTH_ERROR_ALERT_INVALID_CONTEXT_TITLE
Localizable
AUTH_ERROR_ALERT_INVALID_CONTEXT_MESSAGE
AUTH_ERROR_ALERT_BUTTON_OK
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_MESSAGE
AUTH_ERROR_ALERT_BUTTON_SETTINGS
AUTH_ERROR_ALERT_BUTTON_CLOSE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_TITLE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_MESSAGE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_TITLE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_MESSAGE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE
AUTH_ERROR_ALERT_BUTTON_CONTINUE
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_TITLE
wapi
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE_WLAN
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE_WIFI
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_MESSAGE
AUTH_ERROR_ALERT_CREATE_PASSCODE_TITLE
AUTH_ERROR_ALERT_CREATE_PASSCODE_MESSAGE_WATCH
AUTH_ERROR_BUTTON_OPEN_PASSCODE_SETUP
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_CANNOT_SIGN_IN_TITLE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_CANNOT_SIGN_IN_MESSAGE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_TITLE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_ORGNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_ORGNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE
&%@=%@
_accessKey
_beneficiaryFirstName
_beneficiaryLastName
_beneficiaryPassword
Access Key: %@ 
beneficiaryPassword: %@
beneficiaryFirstName: %@
beneficiaryLastName: %@
identityToken: %@
authToken: %@
X-Apple-Session-Key
X-Apple-Encrypted-Session-Key
duration
X-Apple-I-MD-Cmd-Target
X-Apple-I-Data
AKAnisetteControllerLock
_pairedDevice
_proxiedAnisetteData
com.apple.authkit.anisette.deny.url
v16@?0@"NSDictionary"8
v24@?0@"NSURLRequest"8@"NSError"16
paired
X-Apple-I-MD-DATA
Localizable-Walrus
_SERVICE_ICLOUD
_SERVICE_ITUNES
_SERVICE_IMESSAGE
_SERVICE_FACETIME
_SERVICE_GAME_CENTER
_NO_SERVICE
_machineID
_oneTimePassword
_routingInfo
AKAnisetteData <%p>: {MID: %@ - OTP: %@ - RD: %@}
AuthKit
Lisbon
com.apple.AuthKitUIService
context
oopUIMode
v24@?0@"BSProcessHandle"8@"NSError"16
IDToken
authCode
state
isLikelyRealUser
_isLikelyRealUser
Authorization Credential:
 UID: %@ 
 Identity Token: %@ 
 AuthorizationCode: %@ 
 User Verification Result: %@ 
 User Info: %@ /n Transaction ID: %@
teams
<%@:%p> version: %@, teams: {
altDSID: %@, cliMode: %i
v32@?0@"FLFollowUpItem"8Q16^B24
@32@?0@"FLFollowUpItem"8Q16^B24
id: %@
number with dial code: %@
mode: %@
AKAuthenticationError
AKAnisetteError
AKSQLError
AKPrivateEmailError
AKSilentTTRError
AKWalrusError
AKUnderlyingADIErrors
_authorizedRequest
_credential
<%@: %p {
Authorized request: %@
Credential: %@
_data
_scale
_maskingStyle
AKAbsintheErrorDomain
v24@?0@"NSData"8@"NSError"16
/System/Library/Frameworks/CoreCDP.framework/CoreCDP
/System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP
/AppleInternal/Library/Frameworks/CoreCDP.framework/CoreCDP
CDPFollowUpContext
CDPFollowUpController
CDPContext
CDPRecoveryController
CDPStateController
CDPAccount
CDPStateErrorDomain
CDPIDMSPasswordResetKey
CDPIDMSRecordMIDKey
/System/Library/Frameworks/CoreCDPUI.framework/CoreCDPUI
/System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI
/AppleInternal/Library/Frameworks/CoreCDPUI.framework/CoreCDPUI
CDPUIAccountRecoveryController
CDPUIController
CDPUIStatusChangeController
CDPWalrusStateController
CDPWebAccessStateController
com.akd.cdp.walrusStatus
com.akd.cdp.webStatus
_waitForReply
_identityTokenValue
_heartbeatTokenValue
_payload
_waitForReplyTimeout
__notifyOfTimeout
_uuid
_status
_hashedWrappingKeyRKC
_originalChallenge
_displayName
_credentials
challenge
rpid
credentialIds
_promptTitle
_promptHeader
_promptBody
_useAlternativeKeysIcon
_incorrectKeyPresentedMessage
<%@: %p {
RelyingPartyIdentifier: %@, 
Challenge: %@, 
Original Challenge: %@, 
UserIdentifier: %@, 
DisplayName: %@, 
CredentialName: %@, 
Credentials: %@, 
PromptTitle: %@, 
PromptHeader: %@, 
PromptBody: %@, 
IncorrectKeyPresentedMessage: %@, 
AKFollowUpAccountRefreshTimestamp
_credentialRequestContext
_loginChoices
_signInAllowsPCSKeyAccess
<%@: %p> - bundleID: %@, localizedAppName: %@, credentialRequestContext: %@, userInformation: %@, loginChoices: %@, signInAllowsPCSKeyAccess: %@
com.apple.aktool
aktool
com.nextdoor.nextdoor
com.etsy.etsyforios
com.tinyspeck.chatlyio
com.apple.AppShack
com.apple.AuthKit.AKNetworkObserver
v16@?0@"NSObject<OS_nw_path>"8
_request
_resourceLoadDelegate
_requestType
_presentationType
_whitelistedRedirectURLs
<%@: %p 
 request: %@
 delegate: %@
 requestType: %lu
 presentationType: %lu 
/System/Library/Frameworks/KeychainCircle.framework/KeychainCircle
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
/AppleInternal/Library/Frameworks/KeychainCircle.framework/KeychainCircle
KCAESGCMDuplexSession
B32@?0@"FLFollowUpItem"8Q16^B24
_custodianListVersion
_beneficiaryListVersion
_custodianOperationsByID
_beneficiaryOperationsByID
updateRKC
finish
<%@: %p {
custodianListVersion: %@
beneficiaryListVersion: %@
_custodianOperationsByID: %@
_beneficiaryOperationsByID: %@
X-Apple-I-Accepted-Terms
_password
AKApplicationState
AKApplicationNonce
AKAppProvidedData
AKRequestedScopes
AKClientID
AKTeamID
AKAuthorizationStatus
AKAuthorizationAccount
AKAuthorizationIsSilentAppTransfer
AKAuthorizationIsEligibleForUpgradeFromPassword
AKClientAuthenticatedExternallyWithPassword
AKExternalAuthToken
<%@: %p {
requestIdentifier: %@,
transactionID: %@, 
clientID: %@,
teamID: %@,
userIdentifier: %@,
altDSID: %@,
state: %@,
nonce: %@,
requestedScopes: %@,
appProvidedData: %@,
isSilentAppTransfer: %d,
isEligibleForUpgradeFromPassword: %d,
email
X-MMe-Client-Info
https
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
_attestationsData
_credentialID
<%@: %p {
Challenge: %@, 
AttestationsData: %@, 
CredentialID: %@, 
ClientData: %@, 
RelyingPartyIdentifier: %@, 
CredentialName: %@, 
UserIdentifier: %@, 
<%@: %p> requestIdentifier: %@,
altDSID: %@,
userID: %@ 
transactionID:%@
adpCountries
reason
https://gsa.apple.com
https://grandslam-idms1.apple.com
https://grandslam-idms2.apple.com
https://grandslam-idms3.apple.com
/auth
/appleid/account
/verify/phone
/verify/phone/securitycode
/birthday
/password
account
person
birthday
createContext
password
phoneNumberVerification
mode
countryCode
securityCode
code
numberWithDialCode
obfuscatedNumber
pushMode
acceptedTerms
versions
deviceVersions
termsList
iCloud
termsPageDetails
prologue
agree
hasError
serviceErrors
message
underAge
studentAccount
mkid
accountName
custodianLastUpdateDate
appleManagedAccount
orgType
orgName
notificationEmailAvailable
phoneAsAppleId
_givenName
_familyName
_forwardingEmail
_primaryEmailAddress
_accountName
_accountAliases
_reachableEmails
_previouslySelectedEmail
_ageOfMajority
_authorizedApplicationsListVersion
_masterKeyID
_vettedPrimaryEmail
_phoneAsAppleID
_isUnderage
_isSenior
_isLegacyStudent
_hasUsedAuthorization
_privateAttestationEnabled
_previouslyWantedPrivateEmail
_appleIDSecurityLevel
_authMode
_repairState
_selectedEmail
_additionalInfo
_privateEmailListVersion
_canBeCustodian
_canHaveCustodian
_custodianEnabled
_custodianLastModified
_canBeBeneficiary
_canHaveBeneficiary
_appleIDCountryCode
_hasMDM
_managedOrganizationType
_managedOrganizationName
_isNotificationEmailAvailable
_notificationEmail
_webAccessEnabled
_serverExperimentalFeatures
_custodianInfos
_groupKitEligibility
<%@: %p {
givenName: %@,
familyName: %@,
forwardingEmail: %@,
primaryEmailAddress: %@,
accountName: %@,
accountAliases: %@,
reachableEmails: %@,
authorizedApplicationsListVersion: %@,
masterKeyID: %@,
vettedPrimaryEmail: %@,
phoneAsAppleID: %@,
isUnderage: %@,
isSenior: %@,
ageOfMajority: %@,
isLegacyStudent: %@,
appleIDCountryCode: %@,
hasUsedAuthorization: %@, 
privateAttestationEnabled: %@, 
appleIDSecurityLevel: %lu,
authMode: %lu,
repairState: %lu,
selectedEmail: %@,
canBeCustodian: %@,
canHaveCustodian: %@,
custodianEnabled: %@,
canBeBeneficiary: %@,
canHaveBeneficiary: %@,
hasMDM: %@,
managedOrganizationType: %@,
managedOrganizationName: %@,
isNotificationEmailAvailable: %@,
notificationEmail: %@,
additionalInfo: %@,
privateEmailListVersion: %@,
webAccessEnabled: %@,
serverExperimentalFeatures: %@,
custodianInfos: %@,
groupKitEligibility: %@,
_uniqueDeviceIdentifier
_provisioningDeviceIdentifier
_serverFriendlyDescription
_color
_enclosureColor
_coverGlassColor
_housingColor
_backingColor
_locale
_ROMAddress
_MLBSerialNumber
_modelNumber
_linkType
UniqueDeviceID
+[AKDevice activeIDSPeerDevice]
Library/Caches
AKDevice <%p> {%@} link %@
@"NSString"8@?0
@"NSNumber"8@?0
ProvisioningUniqueDeviceID
ModelNumber
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
iPhoneSimulator
ivIu8YTDnBSrYv/SN4G8Ag
ProductVersion
Simulator
@"NSLocale"8@?0
%@_%@
AKAnisetteProvisioningControllerXPCLock
No DSID was provided!
-[_AKAnisetteProviderProxy provisionAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy syncAnisetteForContext:withSIMData:completion:]
-[_AKAnisetteProviderProxy eraseAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[_AKAnisetteProviderProxy legacyAnisetteDataForContext:DSID:withCompletion:]
-[_AKAnisetteProviderProxy fetchPeerAttestationDataForContext:withRequest:completion:]
%06u
LOGIN_CODE_ALERT_OK_BUTTON
application/x-plist
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/PrivateFrameworks/UIKit.framework/UIKit
/AppleInternal/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/RemoteUI.framework/RemoteUI
/System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI
/AppleInternal/Library/Frameworks/RemoteUI.framework/RemoteUI
RUIParser
NSDocumentTypeDocumentAttribute
NSHTMLTextDocumentType
Failed to validate username and password combination: %@
Enter 6 digit code: 
Failed to read code!
Failed to validate code: %@
IDP second factor-authentication is not supported!
Requesting second-factor ServerUI...
Unexpected second-factor authentication (%@)!
Unknown verification type
Unsupported object model found: %@
v16@?0@"NSString"8
missing page
missing passcode view
missing passcode identifier
missing response URL
httpMethod
missing HTTP method
secure
serverInfo
Error creating an account: %@.
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
Error Validating phone number: %@
v24@?0@"AKTrustedPhoneNumber"8@"NSError"16
trustedPhoneNumbers
Multiple trusted numbers found!
Verifying code...
v32@?0@"NSNumber"8@"AKTrustedPhoneNumber"16^B24
%@. %@ via %@
Please select a trusted number: 
HTMLContent
application/x-buddyml
A second factor code was send to %@ via %@
Enter second factor code: 
Enter your birthday(YYYY-MM-DD): 
Please enter a valid birthday(%@)!
Enter password: 
Enter username: 
Phone Number for this account: 
Enter first name for the account: 
Enter last name for the account: 
Do you agree to terms and conditions?
Y to agree / READ to print out the terms (please just say yess!): 
READ
Y to agree: 
_beneficiaryAltDSID
_beneficiaryAccountName
<%@: %p {
beneficiaryAltDSID: %@
beneficiaryAccountName: %@
AKTemporaryValue
com.apple.ak.code.entered
AKAuthenticationInternalTokenCK
findmydeviced
com.apple.authkit.generic
com.apple.authkit.messages
com.apple.authkit.passkit
com.apple.authkit.appleconnect
com.apple.authkit.screentime
com.apple.authkit.tinker
com.apple.authkit.keychainsync
com.apple.authkit.dependent
X-Apple-Security-Upgrade-Context
INLINE_PASSWORD_ALERT_TITLE
PASSCODE_ALERT_MESSAGE_IPAD
%username%
authless
dependent
dependentToken
dependentSpyglass
_reason
_username
_isUsernameEditable
_DSID
_dependentAltDSID
_isProxyingForApp
_proxiedAppBundleID
_proxiedAppName
_serviceIdentifiers
_identifier
_maximumLoginAttempts
_isEphemeral
_shouldAllowAppleIDCreation
_shouldPromptForPasswordOnly
_passwordPromptTitle
_defaultButtonString
_httpHeadersForRemoteUI
_isPasswordEditable
_shouldUpdatePersistentServiceTokens
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_shouldPreventInteractiveAuth
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_notificationDisclaimer
_shouldForceInteractiveAuth
_capabilityForUIDisplay
_companionDeviceAnisetteData
_companionDevice
_isAppleIDLoginEnabled
_hasEmptyPassword
_shouldRequestShortLivedToken
_shortLivedToken
_shouldRequestConfigurationInfo
_isTriggeredByNotification
_message
_anticipateEscrowAttempt
_isFirstTimeLogin
_supportsPiggybacking
_desiredInternalTokens
_shouldSkipSettingsLaunchAlert
_shouldSendIdentityTokenForRemoteUI
_shouldRequestRecoveryPET
_title
_shouldSkipInitialReachabilityCheck
_attemptIndex
_authenticationType
_shouldSendGrandSlamTokensForRemoteUI
_needsRepair
_appProvidedData
_masterKey
_performUIOutOfProcess
_keepAlive
_cancelButtonString
_alternativeButtonString
_hideAlternativeButton
_hideCancelButton
_hideReasonString
_clientShouldHandleAlternativeButtonAction
_windowTitle
_alwaysShowUsernameField
_privacyBundleIdentifier
_authenticationPromptStyle
_needsNewChildAccount
_authenticationMode
_needsSecurityUpgradeUI
_displayImageData
_verifyCredentialReason
_callerIconBundlePath
_localizedCallerName
_forceEligibleForForegroundAuthentication
_deviceRegionRequired
_helpAnchor
_helpBook
<%@: %p { UUID: %@ }>
<%@: %p {
UUID: %@,
username: %@,
editable-username: %@,
altDSID: %@,
DSID: %@,
dependentAltDSID: %@,
password: %@,
service-type: %ld,
service IDs: %@,
reason: %@
ephemeral: %@,
password-only: %@,
authentication-type: %@,
update-service-tokens: %@,
offer-upgrade: %@,
offer-upgrade-context: %@,
proxying-for-app: %@,
proxied-app-id: %@,
proxied-device: %@,
companion-device: %@
max-login-attempts: %@
appleid-login-enabled: %@
has-empty-password: %@
request-slt: %@
short-lived-token: %@
identity-token: %@
triggered-by-push: %@
skip-alert: %@
skip-reachability-check: %@
attempt-index: %lu,
masterKey: %@,
performUIOutOfProcess: %@,
VerifyCredentialReason: %@, 
INLINE_PASSWORD_ALERT_MESSAGE
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_SERVICE_TYPE_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
INLINE_PASSWORD_ALERT_OK_BUTTON
INLINE_PASSWORD_ALERT_CANCEL_BUTTON
PASSCODE_ALERT_TITLE_LOCKSCREEN
PASSCODE_ALERT_MESSAGE_LOCKSCREEN_GENERIC
PASSWORD_ALERT_TITLE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_LOCKSCREEN_GENERIC
INLINE_PASSWORD_ALERT_PASSCODE_PLACEHOLDER
INLINE_PASSWORD_ALERT_PASSWORD_PLACEHOLDER
INLINE_PASSWORD_ALERT_USERNAME_PLACEHOLDER
WRONG_PASSWORD_ALERT_TRY_AGAIN_BUTTON
WRONG_PASSWORD_ALERT_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_FAILED_BUTTON
WRONG_LOGIN_CODE_TRY_AGAIN_BUTTON
WRONG_LOGIN_CODE_ALERT_CANCEL_BUTTON
com.apple.ak.twofa
<%@: %p {
altDSID: %@,
proxiedAppName: %@,
serviceType: %@,
proxiedDevice: %@,
companionDevice: %@,
appProvidedData: %@,
teamID: %@,
appID: %@,
request: %@,
appProvidedContext: %@,
userSelection: %@,
clientAuthenticatedExternallyWithPassword: %@,
com.apple.ak.auth.xpc
passwordPrompt
passwordPromptGoToSettingsNotification
invalidAccountSave
invalidAccountUpdate
missingAccountServices
username
clientKey
privateEmailAddress
privateEmailClientBundle
<PrivateEmail: {%@} -> {%@} [%@]>
<PrivateEmail: {%@} -> {%@}>
v24@?0@"AKCustodianSetupResult"8@"NSError"16
v24@?0@"AKTrustedContactsSyncResult"8@"NSError"16
serialNumber
buildNumber
osVersion
model
lastUpdatedDate
trusted
circleStatus
clcg
clhs
clbg
_name
_serialNumber
_buildNumber
_operatingSystemName
_operatingSystemVersion
_model
_machineId
_lastUpdatedDate
_trusted
_inCircle
_colorCode
_enclosureColorCode
_coverGlassColorCode
_housingColorCode
_backingColorCode
<%@:%p> Name: %@, SN: %@, Build: %@, OS: %@, Version: %@, Model: %@, Timestamp: %@, Trusted: %d, Circle Status: %d, Color Code: %@ Additional Info %@
<AKWalrusConfig: FeatureStatus: [%lu], StatusDescription: %@>
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
/System/Library/Frameworks/DeviceCheckInternal.framework/DeviceCheckInternal
/System/Library/PrivateFrameworks/DeviceCheckInternal.framework/DeviceCheckInternal
/AppleInternal/Library/Frameworks/DeviceCheckInternal.framework/DeviceCheckInternal
DCBAASigningController
v24@?0@"AKAuthorization"8@"NSError"16
v24@?0@"AKAuthorizationUserResponse"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v24@?0@"NSSet"8@"NSError"16
Cannot perform HME request - Insufficient security level
Cannot perform HME request - Phone as AppleID Account without reachable emails
self: (%p); Connection interrupted
self: (%p); Connection invalidated
error communicating to XPC: %@
Biometric validation of externalizedContext completed with result: %@ and error: %@
Failed to validate externalized Context data with error: %@
%@ deallocated
authkit/authenticate
 AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
AuthenticateWithContext
BEGIN [%lld]: AuthenticateWithContext  AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number2,name=Error}d 
END [%lld] %fs:AuthenticateWithContext  Error=%{public,signpost.telemetry:number2,name=Error}d 
Request with %@
Remote authentication service returned an error: %{public}@
Interactive authentication requested by background daemon, client error, AKAppleIDAuthenticationTypeSilentPreferred should be used
Interactive authentication requested by UI context, please investigate why silent auth could not be used
Remote authentication service came back with: %@
authkit/set-in-use
Remote authentication service returned an error: %@
Calling out to remote auth service for altDSID %@, service %@, inUse %@.
Result of remote call: %@. Error: %@.
Calling out to remote auth service for DSID %@, service %@, inUse %@.
authkit/fetch-user-info
Calling out to remote auth service to fetch user information for: %@
Result of remote call: %{private}@. Error: %{public}@
authkit/fetch-user-info-with-context
Calling out to remote auth service to fetch user information for altDSID (%@) with context: %@
authkit/fetch-user-info-typed
authkit/update-user-info
Calling out to remote auth service to update user information for: %@
Result of remote call: %{public}@. Error: %{public}@
authkit/fetch-auth-mode
Calling out to remote auth service to fetch auth mode for: %@
Result of remote call: %lu. Error: %{public}@
authkit/fetch-device-list
authkit/fetch-device-map
Calling out to remote auth service to fetch device list information for: %{public}@
Result of remote call: %@. Error: %@
authkit/fetch-app-list
Calling out to remote auth service to fetch app list information for: %@
authkit/delete-authorization-list
Calling out to remote auth service to wipe authorization database
authkit/silent-TTR
 enableTelemetry=YES 
TriggerSilentTTR
BEGIN [%lld]: TriggerSilentTTR  enableTelemetry=YES 
END [%lld] %fs:TriggerSilentTTR 
Remote Auth Service SilentTTR returned success: %@
Remote Auth Service SilentTTR returned an error: %@
authkit/revoke-authorization
Calling out to remote auth service to revoke authorization for clientID: %@
authkit/satori-warmup
Calling out to remote auth service to warmup verification session
WarmUp Session completed...
authkit/set-configuration-info
Calling out to remote auth service to set: %@ for identifier: %@.
authkit/fetch-configuration-info
Calling out to remote auth service to fetch configuration for identifiers: %@.
Result of remote call: %{private}@. Error: %@
authkit/check-upgrade-eligibility
HSA 2 eligibility check came back with result: %@ and error: %@
authkit/generate-login-code
Generated code: %@. Error: %@
authkit/validate-login-code
authkit/perform-circle-request
authkit/check-in
Calling remote authentication service to perform check-in for altDSID: %@
Remote call to peform check-in for account with altDSID (%@) returned
Failed to perform check-in: %@
authkit/report-sign-out
authkit/report-sign-out-all
authkit/update-state-with-response
Asking akd to update state for %@ with auth response: %@
Result of updating auth state: %@. Error: %@
Failed to get passcode state with error: %@
Failed to get active code with error: %@
authkit/fetch-load-delegate
FetchServerLoadDelegate
BEGIN [%lld]: FetchServerLoadDelegate  enableTelemetry=YES 
END [%lld] %fs:FetchServerLoadDelegate 
Asking akd for AKAppleIDServerResourceLoadDelegate for altDSID %@
Result of getting AKAppleIDServerResourceLoadDelegate: %@. Error: %@
Asking akd for AKAppleIDServerResourceLoadDelegate for context %@
authkit/sync-follow-up-items
Synchronizing follow ups for altDSID: %@
Synchronized follow ups %@ with error %@
Failed to synchronize follow ups due to xpc error: %@
authkit/followup-teardown
Asking akd to teardown: %@
Completed teardown request; Error: %@
authkit/renew-recovery-token
Asking akd to fetch a new recovery token token with info: %@
Failed to renew recovery token: %@
authkit/verify-master-key
Asking akd to verify master key with info: %@
Failed to verify master key: %@
authkit/persist-master-key
Failed to persist master key: %@
authkit/validate-vetting-token
Asking akd to validate vetting token %@ for altDSID: %@
Vetting-token validation failed due to expired master token. Attempting to re-auth...
Unable to refresh expired master token for vetting-token validation.
Master token should be fresh now. Reattempting vetting token-validation...
Result afer reauth: Is token valid? %@. Error: %@
Result: Is token valid? %@. Error: %@
authkit/create-appleid-allowed
Error getting create Apple ID state - %@
Allow create AppleID is determined to be - %@
Failed to get account name list: %@
Account name list: %@
authkit/fetch-url-bag
Calling out to remote auth service to url bag
Finished fetching URL bag. Error: %{public}@
Synchronously calling out to remote auth service to url bag
authkit/urlbag-update
Synchronously calling out to remote auth service to force update URL Bag for altDSID: %@
Finished updating urlbag update for AltDSID: %@ with result: %d error:%@
Connection to akd was interrupted!
Connection to akd was invalidated.
authkit/clear-session-cache
Connection to session remote service '%s' returned an error: %@
authkit/fetch-global-config
Calling out to remote auth service for global config
Finished fetching global config. Error: %{public}@
%{public}@ completed with error:%@
URLSessionConfig doesn't respond to _allowsVirtualInterfaces!
Initializing URL cache at URL: %@
Failed to generate cache due to missing container path!
AKURLSession %p is initializing...
NSURLSession became invalid with error: %@
Calling all pending completions.
Creating new NSURLSession with default config...
Asked to begin task with either nil request %@ or completion handler %@
Creating task %{public}@ for request at URL: %@
Resuming task %{public}@ for URL %@
Cancelling task %{public}@ for request %@
The data parameter is nil!
Aggregating received data for task: %{public}@
Task %{public}@ completed! Error: %@
Error is recoverable. Checking if retry is possible.
Retrying is not available on this platform.
Request failed for task: %{public}@ error: %@
Task %{public}@ Request response not of expected class!
Task %{public}@ Request completed with HTTP status code: %@
response: %@
data: %@
Task %{public}@ Server responded with authentication error
Detected an iCloud URL request, will not perform IdMS cert validation.
Server cert validity check failed!
Adding %lu credentials to the excluded credentials list.
Converting credential to base64: %@
Invalid credential was sent: %@
Adding credential to the list: %@
Fido registration was a success
Fido registration CredentialID: %@
Attestation Data: %@
ClientData: %@
Fido authentication was a success
Fido authentication Signature: %@
Authenticator Data: %@
UserID: %@
Unable to complete the Fido interaction: %{public}@
Provided error is%{public}@ an AS user cancel error.
Populating strings from context: %@
inheritance-authkit/fetch-dataclass-rules
Connection to remote inheritance service to %s returned an error: %@
inheritance-authkit/persist-manifest
inheritance-authkit/update-beneficiary
inheritance-authkit/remove-beneficiary
Not an Internal Build. Aborting beneficiary alias setup
inheritance-authkit/create-beneficiary-alias
Bad client! You are not supposed to provide your own implementation of AKAppleIDAuthenticationUIProvider!
Context ID %@ has already been registered for authentication!
Missing context identifier, how did we get here?
authkit/should-continue
Client has no knowledge of context ID: %@
 Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
ShouldContinueWithResults
BEGIN [%lld]: ShouldContinueWithResults  Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
 ShouldContinue=%{public,signpost.telemetry:number2,name=ShouldContinue}d 
END [%lld] %fs:ShouldContinueWithResults  ShouldContinue=%{public,signpost.telemetry:number2,name=ShouldContinue}d 
Delegate says to continue? %@
Calling delegate...
No delegate available.
Error: We do not have a UI-capable context on the client side!
Error: We do not have a UI-capabable context on the client side!
%@: Presenting server provided UI for context (%@) with configuration (%@)
%@: Setting the anisette data provider (%@) on resource load delegate (%@)
Error: Context is not configured for a Fido presentation!
Asking the client context to present Fido ui.
Error: We do not have a UIProvider. Unable to launch the Fido service!
%@: Called to fetch peer attestation data for context (%@) with request (%@)
%@: Calling anisette data provider (%@) to fetch peer attestation data for request (%@)
%@: Unable to call anisette data provider (%@) to fetch peer attestation data for request (%@) because it does not respond to 'fetchPeerAttestationDataForRequest:completion:'
Server has provided an invalid context lacking an ID: %@
Error: No response data!
There was an error parsing body data! %@
The body data was not in the expected (dictionary) format!
JSON for response cannot be formed from dictionary: %@
Dictionary serialization to JSON encountered error: %@
AKDeviceListDeltaMessagePayload missing timestamp
AKDeviceListDeltaMessagePayload unable to process missing operation.
AKDeviceListDeltaMessagePayload unable to process non-string operation.
AKDeviceListDeltaMessagePayload unable to process unexpected operation.
Error converting object to json string: %@
Adding padding to the string: %{private}@
Starting retrieval of recovery info for appleId <%@ : %@>
Starting recovery using %@...
Failed to retrieve recovery info with error. %@
Recovered data for context: %@
Escrowed recovery info missing PRK
Escrowed recovery info missing MID
Building recovery response request
Recovered info %@
Failed to unwrap the icsc recovery identity token.
Unexpected recoveredValue: %@
Recovery response: %@
Recovery response body: %@
Building recovery response body
shouldSendServerResponseForRecoveredInfo: Recovery error: %@
AKAttestationSigner signatureForData: - No data, nothing to sign.
AKAttestationSigner signaturesForData: - No data, nothing to sign.
Populating results with bundle info: %@
Failed to fetch subscription info with error: %@
Connection to authorization service interrupted
Connection to authorization service invalidated
Passcode protected: %@
Unable to get Anisette data for request %@! Error: %@
Adding proxied attestation headers - %@
Unable to serialize request parameters! Error: %@
JSON Serialization exception: %@
Invalid JSON input: %@
Adding header with services: %@
Failed to attach PTN header
Failed to attach Phone Information header
Encountered incomplete Anisette data! %@
Encountered incomplete companion Anisette data! %@
Encountered incomplete Anisette data for proxied device! %@
Setting Execution mode header to CLI
Got unknown Walrus status when setting header
AllowExperimentMode header state is %@
Cached AuthKit configurations have changed. Clearing cache...
Nil key!
Connection to akd signer was interrupted!
Connection to akd signer was invalidated: this is fine.
authkit/absinthe-signature-for-data
Remote signing service returned an error: %@
Remote signing service successfully signed data.
authkit/signatures-for-data
%@: Generating attestation data for request (%@)
%@: Failed to generate attestation data with error (%@)
%@: Generated additional headers for attestation (%@)
No request, nothing to sign.
urlBag not present
We have additional absinthe headers %@
Failed to fetch absinthe headers, error: %@
Requesting additional Attestation for header
We have attesation headers: %@
Failed to fetch attestation headers, error: %@
Absinthe not enabled
No baaInterval
returing %lu additional headers
Absinthe data generated for proxy %@
Absinthe error %@
Unknown absinthe error
Attestation signature headers %@
Attestation error %@
Unknown attestation error
Fetching Icon for bundleID: %@
AMSMediaTask for bundleID %@ artwork resulted in error %@
AMSMediaResult: %@
Request for %@ received data of length %lu
Request for %@ failed %@
Exception caught: %@
Will not allow nil altDSID to be set!
Will not allow nil DSID to be set!
DSID *must* be an NSNumber, but we got: %@
Failed to update verified email to %@ with error %@ after observing verified primary email for account %@
Updated account %@ verified email to %@ after observing verified email followup tear down
Account %@ already updated to reflect email verified is %@.
Requested to update username to %@ for altDSID: %@
Updating username for: %@
Exception caught when fetching primary email address: %@
Exeption caught when setting primery email address: %@
Exception caught when fetching primary verified email: %@
Exception caught when setting primary verified email: %@
Exception caught when fetching phone as AppleID: %@
Exception caught when fetching underage property: %@
Exception caught when setting underage property: %@
Exception caught when fetching isSenior property: %@
Exception caught when setting isSenior property: %@
Exception caught when fetching demoAccount property: %@
Exception caught when setting demoAccount property: %@
Exception caught when fetching ageOfMajority property: %@
Exception caught when setting ageOfMajority property: %@
Exception caught when fetching Apple ID country code property: %@
Exception caught when setting Apple ID country code property %@
Exception caught when fetching authorization used: %@
Exception caught when setting authorization used: %@
Exception caught when fetching private attestation enabled: %@
Exception caught when setting private attestation enabled: %@
Exception caught when fetching reachable emails: %@
Exception caught when setting reachable emails: %@
Exception caught when fetching given name: %@
Exeption caught when setting given name: %@
Exception caught when fetching family name: %@
Exception caught when setting last name: %@
Exception caught when fetching forwarding email: %@
Exception caught when setting forwarding email: %@
Exception caught when fetching private email selected: %@
Exception caught when setting private email selection: %@
Exception caught when fetching slected email: %@
Exception caught when setting selected email: %@
Saving account %@...
Exception caught while saving account: %@
Could not save %@ due to %@
Saving of account %@ succeeed!
Last Authentication mode fetch occured %@ seconds ago
Exception caught when fetching device trust status: %@
Last Satori warmup occured %@ seconds ago
Fetching token: %@ for account %@
Nil account cannot possibly have a %@ token!
AuthKit credential is completely MIA! Account: %@. Fetch error: %@
AuthKit %@ token is missing! Account: %@. Credential: %@.
Account of service type "%@" is eligible for security upgrade.
No account is eligible for security upgrade.
Servicetype is not supported.
AuthKit account (%@) that is not an SA account is not eligible for security upgrade.
There is no matching service account for service type (%li). (%@) may be abandoned authkit account, but still on device.
Found %@ IDMS accounts for which PRK might need to be cleared.
%@: Attempting to remove continuation key for account (%@)
Attempted to remove a token for nil key
Nil credential for account %@. Odd, but no clearing is necessary.
Clearing %{public}@ for account %@...
SilentTTR not triggered - supported only on TvOS
Checking if IDMS account cleanup is necessary (%lu found)...
Removing unusued IDMS account %@...
Removing duplicate IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Failed to save account %@. Error: %@
Successfully saved account %@.
Done removing unused and duplicate IDMS accounts.
Invalid type for value of primaryAccount account property: %@. Account: %@
Invalid type for value of %@ account property: %@. Account: %@
Invalid type for value of appleIdAliases %@. Account: %@
Invalid type for altDSID %@. Account: %@
Found %@ iCloud accounts for which password cache might need to be cleared.
Found a cached raw password for %@... removing...
Exception caught when fetching isNotificationEmailAvailable property: %@
Exception caught when setting isNotificationEmailAvailable: %@
Exception caught when fetching canBeCustodian property: %@
Exception caught when setting canBeCustodian: %@
Exception caught when fetching canHaveCustodian property: %@
Exception caught when setting canHaveCustodian: %@
Exception caught when fetching custodianEnabled property: %@
Exception caught when setting custodianEnabled: %@
Exception caught when fetching custodianListVersion property: %@
Exception caught when setting custodianListVersion: %@
Exception caught when fetching custodianLastModified property: %@
Exception caught when setting custodianLastModified: %@
Exception caught when fetching custodianInfos property: %@
Exception caught when setting custodianInfos: %@
Exception caught when fetching beneficiary property: %@
Exception caught when setting beneficiary: %@
Exception caught when fetching canBeBeneficiary property: %@
Exception caught when setting canBeBeneficiary: %@
Exception caught when fetching canHaveBeneficiary property: %@
Exception caught when setting canHaveBeneficiary: %@
Exception caught when fetching beneficiaryListVersion property: %@
Exception caught when setting beneficiaryListVersion: %@
Exception caught when fetching hasMDMForAccount property: %@
Exception caught when setting hasMDMForAccount: %@
Silent escrow record repair is force disabled
Silent escrow record repair is force enabled
Exception caught when fetching silentEscrowRecordRepairEnabled property: %@
Exception caught when setting silentEscrowRecordRepairDisabled property: %@
Exception caught when fetching fido property: %@
Exception caught when setting fido property: %@
private-email-authkit/lookup-email
PrivateEmailLocalLookup
BEGIN [%lld]: PrivateEmailLocalLookup  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailLocalLookup  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email lookup, error:%@
Connection to private email service to %s returned an error: %@
private-email-authkit/fetch-email
PrivateEmailRemoteFetch
BEGIN [%lld]: PrivateEmailRemoteFetch  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoteFetch  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email fetch, error:%@
private-email-authkit/register-email
PrivateEmailRemoteRegister
BEGIN [%lld]: PrivateEmailRemoteRegister  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoteRegister  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email fetch in background, error:%@
private-email-authkit/fetch-with-context
PrivateEmailContextFetch
BEGIN [%lld]: PrivateEmailContextFetch  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailContextFetch  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email context fetch, error:%@
authkit/PrivateEmailContext
getContext completed with context: %@
getContext failed: %@
private-email-authkit/delete-db
PrivateEmailDeleteDatabase
BEGIN [%lld]: PrivateEmailDeleteDatabase  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailDeleteDatabase  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/list-version
PrivateEmailListVersion
BEGIN [%lld]: PrivateEmailListVersion  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailListVersion  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/remove-key
PrivateEmailRemoveKey
BEGIN [%lld]: PrivateEmailRemoveKey  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoveKey  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/fetch-email-list
PrivateEmailLocalFetchAll
BEGIN [%lld]: PrivateEmailLocalFetchAll  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailLocalFetchAll  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Fetch Private Email list with %lu addresses, error:%@
Overflow while attempting to compress data!
Failed to allocate buffer for compressed data!
Failed to compress data!
Base64 encoded string after replacement: %{private}@
Attempting to unregister for all Apple IDs.
Unregistering all Apple IDs failed with error: %@
Unregistering all Apple IDs succeeded!
Current process is requesting signing synchronously, this is an error, please do not do this!
Grabbing signing headers from current device.
Failed to get signing headers, error: %@
Attempting to fetch peer anisette
Peer anisette fetch complete
Error while fetching proxied anisette %@
Not attmepting to fetch peer anisette
Configuring peer signing headers
%@: Fetching attestation data for proxied device (%@) with request (%@)
Peer attestation completed with results: %@
Failed to fetch peer attestation data: %@
No proxied device, no peer headers to attach.
Looks like we already have attestation data, thanks!
Not sending signing headers for peer
Cannot find application name for %@, got %@
Attaching app-name %@
Could not find application name for %@
Could not determine passcode state with error %@
Attaching PRK header
Signing request as ephemeral
Attaching ICSC header
Attaching Phone Info header
Attaching PTN header
Attaching PAC header
Harvested continuation header added %@
Signing request with common headers
Signing request with service token
Signing request with ID token
Signing request with HB token
Signing request with URLSwitching UrlKey
Signing request with CR token
Signing request with basic headers
Signing request with data center identifier
Setting execution mode to CLI
Signing request with Experimental Mode opt-in header
Server delegate missing bagUrlKey, cannot determine if BAA attestation is needed
Signing request with BAA headers
Decorating with: %@
Updating service token for identifier %@ succeded
Updating service token for identifier %@ failed: key not found in results
Custom service token value is set. The results of a reauth are likely unused!
Updating delegate identity token succeded.
Updating delegate identity token failed: key not found in results
Harvested continuation headers %@
AKCircleRequestPayload: Unable to parse payload from invalid response
AKCircleRequestPayload: Processing parsed response dictionary (%@)
AKCircleRequestPayload: Unable to parse response dictionary (%@)
AKCircleRequestPayload: Unable to parse presence SID (%@) as valid UUIDv4
AKCircleRequestPayload: Unable to parse plistData (nil)
AKCircleRequestPayload: Failed to parse plist (%@) from plist data (%@) with error (%@)
Parsing CFU Item Payload: %@
Settings a custom icon for the CFU with app id: %@
Detected %@
Continuity push detected.
Continuity push with alternate button title detected.
Couldn't find pyaload data to post notification.
Building recovery context with info: %@
_mutableJSONRequestForURL: %@
walrus-authkit/fetch-pcs-auth-context
Connection to Walrus remote service '%s' returned an error: %@
walrus-authkit/remove-all-pcs-auth-credentials
walrus-authkit/verify-walrus-enable-allowed
VerifyEnableWalrusAllowed
BEGIN [%lld]: VerifyEnableWalrusAllowed  enableTelemetry=YES 
END [%lld] %fs:VerifyEnableWalrusAllowed 
Error verifying whether user is allowed to enable walrus - %{public}@
Successfully verified allowed to enable walrus status.
walrus-authkit/post-walrus-state-update-to-server
PostWalrusStateUpdateToServer
BEGIN [%lld]: PostWalrusStateUpdateToServer  enableTelemetry=YES 
END [%lld] %fs:PostWalrusStateUpdateToServer 
Error updating walrus state update status to server - %{public}@
Successfully posted walrus state update status to server.
AlertHandler called with error: %@
Authorization alert - invalid context
Authorization alert dismissed - invalid context
Authorization alert dismissed - missing apple account
Authorization alert dismissed - unverified email
Authorization alert dismissed - insufficient security level
Authorization alert dismissed - cannot find server
Authorization alert dismissed - underage account
Authorization alert dismissed - passcode setup required
Authorization alert dismissed - managed account
Showing alert (%@) failed, user notification is nil!. Error: %d
No existing IdMS account for altDSID %@
No existing IdMS account for DSID %@
No existing IdMS account for username %@
No altDSID, DSID or username passed on context, unable to find account
Cannot pull up IDMS account without immutable username or altDSID.
Invalid token string! %@
Error: Got malformed GS token data!
Value for %@ is missing/invalid!
Nil value for expected header: %@
Unable to serialized token properties! Error: %@
Checking for deny listing URL:%@ Task: %{public}@ ...
Anisette deny url is set: %@
Denying Anisette to URL:%@ Task: %{public}@ ...
Not going to do anything with non-HTTP response from URL: %@ Task: %{public}@.
Trying to get new Anisette headers to retry request for URL:%@ Task: %{public}@ ...
Redirecting urlRequest from URL: %@ to alternate URL: %@
Url Switch request failed with error: %@, ignoring URL Switch
Unable to append header for request %@! Error: %@
Passing along decorated request for: %@
Using proxied Anisette data for headers to URL: %@.
Fetching paired device Anisette data for headers to URL: %@.
Unable to append header for request %@! Task %{public}@ Error: %@.
Passing along decorated request for URL: %@ Task %{public}@.
Using proxied Anisette data for headers to URL: %@ Task %{public}@.
Fetching paired device Anisette data for headers to URL: %@. Task: %{public}@.
No handling for HTTP status code %@ in response for URL %@
No instance of AKAnisetteProvisioningController to handle HTTP code %@ in response to %@ %@.
Sync status code (%d) received for URL: %@
HTTP 434 without sync data received!
Anisette sync was successful!
Anisette sync failed! Error: %@
Reprovision status code (%d) received for URL: %@
Unable to reprovision because Anisette data could not be erased! Error: %@
Erased Anisette data successfully. Time to provision!
Provisioning new Anisette data failed! Error: %@
Successfully provisioned new Anisette data.
Handling response %@ for URL %@...
URL Switching state code (%d) received for URL: %@
No Value found for URLSwitching header ignoring URL Switching request
No Value found for Response URLSwitch data header ignoring URL Switching request
No URL found for UrlKey after URLBag update, ignoring URL Switching request
URLBag failed to update with error: %@, ignoring URL Switching request
Failed to find localized string for key: %{private}@
Feature Lisbon is supported. Is Lisbon available - %@
Redirecting to AuthKitUIService, to present basic login UI with context: %@
Context data is nil: %@
Trying to launch application with Scene Delegate
Unable to launch application: %@ with the error: %@
Successfully launched process: %@
Failed to launch application: %@ with error: %@
Call completion with authentication result with presentation completion: %@
Parsing server provided Data %@
AKAuthorizationCredential Successfully created with transaction id:%@
Called -[AKCoordinatedDataBlock start] after block has already been started. Ignoring call and not starting again.
Failed to fetch walrus status with error: %@
Failed to fetch web access status with error: %@
Web access change UI requested for unknown status
Present Authorization call forwarded to UI provider
UI provider is nil
Authorization Client that has UI provider deallocated
Sync for account: %{private}@ - %{private}@
Last follow up refresh occured %@ seconds ago
Checking for sparse follow ups
Failed to fetch items, falling back to sync
Sparse followup item detected: %@
Will synchronize followups %@
Failed to update follow up synchronization date: %@
Updating follow up synchronization for %@
No followup items found in payload.
Synchronizing local follow up state.
Deleting: %@
Failed to clear existing follow ups: %@
Clearing Notifications: %@
Inserting: %@
Unknown action, ignoring...
Detected an item without an identifier, invalid payload
Updating existing item with identifier: %@
Existing item notification was previously dismissed, ignoring incoming notification
Incoming notification was forced, keeping it!
Found incoming sparse followups: %@
Found incoming full followups: %@
Missing username, trying to fetch one via idMS account
Matching account missing, there be dragons ahead!
Using idMS account username
Cannot perform request - Missing authorization request
Cannot perform request - Current platform require passcode setup
Cannot perform request - Missing account
Cannot perform request - Missing AppleAccount
Cannot perform request - Managed Accounts Not Permitted on Shared iPad
Cannot perform request - FedAuth Accounts Not Permitted
Cannot perform request - Invalid age
Cannot perform request - Insufficient security level
Cannot perform request - Account not verified.
Cannot perform password request without password request.
Fetch global config completed with error: %@
Fetching global config for walrus config.
Global config has no ADP countries
Global config has no entry for account country
Account name is missing.
Account name value has an invalid type: %@
Primary email address is missing, probably MAKO account.
Primary email address value has an invalid type: %@
No aliases.
Aliases array value has an invalid type: %@
No additional Info.
User given name is missing.
User given name name value has an invalid type: %@
User family name is missing.
User family name value has an invalid type: %@
Mako Account Identifier Missing
Mako Account Identifier value has an invalid type: %@
User Apple ID country code is missing.
User apple id country code value has an invalid type: %@
User vetted primary email is missing, Possibly unverified or Mako Account.
No reachable emails for account
User reachable emails value has an invalid type: %@
No Forwarding email set for this account
Forwarding email value has an invalid type: %@
Previously selected email value has an invalid type: %@
No authorized applications list version set for this account
Authorized applications list version value has an invalid type: %@
No private email list version set for this account
Private email list version value has an invalid type: %@
CanBeCustodian is missing.
CanHaveCustodian is missing.
custodianEnabled is missing.
CustodianLastModified is missing or has invalid type.
canBeBeneficiary is missing.
canHaveBeneficiary is missing.
hasMDM is missing.
Managed organization type value has an invalid type: %@
Managed organization type has an invalid value: %@
Managed organization name value has an invalid type: %@
Managed organization isNotificationEmailAvailable value has an invalid type: %@
Managed organization notificationEmail value has an invalid type: %@
Duplicate custodian UUID %@ with different values (%@ and %@) found in custodianInfos
No valid Custodian Info found in custodianInfos array.
Valid Custodian Info found in custodianInfos array %@
No custodian info in response.
%{private}s called on unsupported platform, please file a radar!
System container path is %s
Error getting system container: %llu
Caught error (%@) unserializing AKDevice data (%@)
Caught error (%@) serializing self (%@)
Failed to check circle status: %@
System reports isPasscodeSet: %@
Local auth returned error: %@
Not biometric capable
authkit/anisette-provision
ProvisionAnisette
BEGIN [%lld]: ProvisionAnisette  enableTelemetry=YES 
END [%lld] %fs:ProvisionAnisette 
Remote Anisette service returned an error: %@
Remote Anisette service successfuly provisioned.
authkit/sync-sim
Remote Anisette service successfuly resynced provisioning data.
authkit/anisette-erase
EraseAnisette
BEGIN [%lld]: EraseAnisette 
END [%lld] %fs:EraseAnisette 
Remote Anisette service successfuly erased provisioning data.
authkit/anisette-for-request
Not allowed to use Anisette data with non-HTTPS URLs.
authkit/fetch-anisette
FetchAnisette
BEGIN [%lld]: FetchAnisette 
Remote Anisette service returned Anisette data.
END [%lld] %fs:FetchAnisette 
authkit/legacy-anisette
Remote Anisette service returned legacy Anisette data.
authkit/fetch-peer-attestation-data
FetchAttestation
BEGIN [%lld]: FetchAttestation 
END [%lld] %fs:FetchAttestation 
Remote Anisette service returned Attestation data.
Remote Attestation data returned %@ - error %@
%s (%d) called
%@: Unable to call anisette data provider (%@) to fetch peer attestation data for request (%@) because it does not implement 'fetchPeerAttestationDataForRequest:completion:'
request: %@
Providing birthday info.
Providing password info.
Providing Phone number info.
Finishing up Apple ID creation flow.
Error, not attempting to collect second factor code
Prompting for second factor code
Selecting trusted numbers
No trusted number selected
Server indicates we only have one trusted number, lets use that.
Sending selected trusted number
Selected trusted number response %@
Invalid trusted number selection %@ - %@
Received response %@
Attempt to show server UI with unsupported configuration (still in the works)
(%@)
User agreed to terms and conditions
Constructed SMS postback dictionary - %@
Client passed auth context with email value in altDSID property - this is an error, do not do this.
%@ being updated by %@
Cannot update auth context with nil context
Client set raw password to a PET - this is an error, please do not do this.
self.username is nil
Will prompt for password...
Will prompt for username and password...
Determined that we should show password field for username: %@
Showing login error...
Canceling second-factor entry prompt.
Nothing to dismiss right now.
Listening for code entry notification...
No longer listening for code entry notification.
Notified that 2FA code was entered, but code is empty!
Passing 2FA code to akd.
Dropping 2FA code because we are currently holding a reply block.
Closing login code prompt.
Received notification of login code entry. Forwarding to observer %@.
Presenting %@ to %@
custodian-authkit/initiate-custodian
CustodianSetupStart
BEGIN [%lld]: CustodianSetupStart  enableTelemetry=YES 
END [%lld] %fs:CustodianSetupStart 
Initiated Custodian with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to initiate custodian for context %@
Result of remote custodian initiation call: %@. Error: %{public}@
authkit/custodian-finalize-custodian
CustodianSetupFinalize
BEGIN [%lld]: CustodianSetupFinalize  enableTelemetry=YES 
END [%lld] %fs:CustodianSetupFinalize 
Finalized Custodian setup with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to finalize custodian for context %@
Error finalizing custodianship: %{public}@
Successfully finalized custodianship.
authkit/custodian-revoke-custodian
Revoke custodian with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to revoke custodian for context %@
Error revoking custodianship: %{public}@
Successfully revoked custodianship.
authkit/custodian-update-key
Update recovery key returned an error: %{public}@
Updating idMS recovery key with context %@
Error updating recovery key: %{public}@
Successfully updated recovery key with idMS.
custodian-authkit/start-custodian-recovery
CustodianRecoveryStart
BEGIN [%lld]: CustodianRecoveryStart  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryStart 
startCustodianRecoveryRequestWithContext completed with response: %@
startCustodianRecoveryRequestWithContext completed with error: %{public}@
custodian-authkit/fetch-code-config
fetchCustodianRecoveryCodeConfiguration completed with result: %@
Failed to fetch custodian recovery code configuration with error: %{public}@
custodian-authkit/custodian-recovery-circle
 RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
CustodianRecoveryMessage
BEGIN [%lld]: CustodianRecoveryMessage  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryMessage 
startCustodianRecoveryTransactionWithContext completed successfully
startCustodianRecoveryTransactionWithContext completed with error: %{public}@
XPC Connection failed or interrupted with error: %@ on call: startCustodianRecoveryTransactionWithContext
custodian-authkit/fetch-recovery-token
CustodianRecoveryToken
BEGIN [%lld]: CustodianRecoveryToken  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryToken 
fetchCustodianRecoveryTokenWithContext completed with error: %{public}@
fetchCustodianRecoveryTokenWithContext completed with token: %@
XPC Connection failed or interrupted with error: %@ on call: fetchCustodianRecoveryTokenWithContext
custodian-authkit/fetch-wrap-rkc
CustodianDataRecoveryKey
BEGIN [%lld]: CustodianDataRecoveryKey  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianDataRecoveryKey 
fetchCustodianDataRecoveryKey completed with response: %@
Failed to fetch custodian data recovery key with error: %{public}@
XPC Connection failed or interrupted with error: %@ on call: fetchCustodianDataRecoveryKeyWithContext
custodian-authkit/embargo-feedback
Starting call to send embargo end notification feedback to IdMS with context: %@
sendEmbargoEndNotificationFeedback failed with error: %{public}@
sendEmbargoEndNotification completed without error for transactionID: %@
XPC Connection failed or interrupted with error: %@ on call: sendEmbargoEndNotificationFeedbackWithContext
custodian-authkit/perform-trustedContacts-sync
Starting call to perform trusted contacts data sync with IdMS: %@
Result of trusted contacts data sync call: %@. Error: %{public}@
authkit/authorize
Authorization controller performAuthorizationWithContext called
Authorization completed with authorization: %@
Authorization failed: %@
authkit/begin-authorize
AuthorizationExternalAuthBegin
BEGIN [%lld]: AuthorizationExternalAuthBegin  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthBegin  Error=%{public,signpost.telemetry:number2,name=Error}d 
Begin Authorization completed with userResponse: %@
Begin Authorization failed: %@
authkit/continue-authorize
AuthorizationExternalAuthContinue
BEGIN [%lld]: AuthorizationExternalAuthContinue  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthContinue  Error=%{public,signpost.telemetry:number2,name=Error}d 
Continue Authorization completed with authorization: %@
Continue Authorization failed: %@
authkit/cancel-authorize
AuthorizationExternalAuthCancel
BEGIN [%lld]: AuthorizationExternalAuthCancel  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthCancel  Error=%{public,signpost.telemetry:number2,name=Error}d 
Cancel Authorization failed: %@
Cancel Authorization completed successfully
authkit/revokeUpgrade
Revoke completed successfully
Revoke failed: %@
authkit/credentialState
Credential State request returned with error: %@
Credential State returned with state: %@
authkit/credentialStateForClientID
authkit/presentationContext
getPresentationContext completed with presentation context: %@
authkit/performRequestWithSelection
performAuthorizationWithContext completed with presentation context: %@
%@: Authorization failed: %@
Attempting proxy auth with context: %@
Failed to fetch authorized URLs with XPC error: %@
Failed to fetch authorized URLs with error: %@
Failed to fetch apple owned domains with XPC error: %@
Failed to fetch apple owned domains with error: %@
fetchAppleIDAuthorizeHTMLResponseTemplate completed with result.
Failed to fetch authorization HTML response template with error: %@
continueFetchingIconWithCompletion completed with result.
Failed to continue fetching icon with error: %@
authkit/fetch-primary-bundleid
Calling out to remote auth service to fetch primary bundle ID for service: %@
authkit/store-proxied-authorization
Store proxied authorization completed
Store proxied authorization failed: %@
No URL for Apple ID Authorization
Authorization controller should process URL
Established connection between notification center endpoint and daemon service.
Failed to establish connection between notification center endpoint and daemon service with error: %@
Established connection between state broadcast handler endpoint and daemon service.
Failed to establish connection between state broadcast handler endpoint and daemon service with error: %@
AKPrivateEmailValidator
AKAuthorizationRevokeUpgradeContext
NSCopying
NSSecureCoding
NSCoding
AKCarouselAlertProviderServiceInterface
NSObject
AKCarouselAlertClientConnection
AKAuthorizationCredentialStateRequest
AKLAContextValidator
AKFLFollowUpController
AKCustodianDaemonProtocol
AKCustodianDaemonInterface
AKExtensionItem
AKAuthorizationUpgradeContext
AKAdaptiveService
NSXPCListenerDelegate
_AKMessageForwarder
AKAdaptiveServiceInterface
AKAdaptiveServiceShouldHandle
AKAppleIDAuthenticationController
AKAuthenticationController
AKCustodianSetupResult
AKURLDataTask
AKURLSession
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKFidoAuthorizationController
ASAuthorizationControllerDelegate
AKConsentedApplication
AKInheritanceAccessKey
AKAuthorizationStateBroadcastHandler
AKAuthorizationStateBroadcastHandlerInterface
AKAuthorizationTVServicePresenter
AKAttestationData
AKInheritanceInterface
AKInheritanceController
AAFXPCSessionDelegate
AKAppleIDAuthenticationLimitedUIProvider
AKAppleIDServerAuthenticationUIProvider
AKAppleIDAuthenticationUIProvider
AKAppleIDAuthenticationContextManager
AKAppleIDAuthenticationClientProtocol
AKAnisetteProvisioningClientProtocol
AuthKit
AKDeviceListDeltaMessagePayload
AKCustodianContext
AKAuthenticationContext
AKAuthorizationUserResponse
AKNativeAccountRecoveryController
CDPAuthProvider
AKAttestationSigner
AKFollowUpTearDownContext
AKPCSAuthContext
AKAuthorizationPresenterHostProtocol
AKAuthorizationPresenterHostInterface
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKFollowUpProviderFactory
AKCustodianDaemonConnection
AKCredentialRequestContext
AKAppleIDAuthenticationClientInterface
AKAuthorizationScopesUserSelection
AKConfiguration
AKAppleIDSigningController
Convenience
AKInheritanceContext
AKDeviceListRequestContext
CGSize
AKMediaServicesController
AKAuthorizationDaemonProtocol
AKAuthorizationDaemonInterface
AKCertificatePinning
AKAccountManager
AKPrivateEmailDaemonProtocol
AKPrivateEmailClientProtocol
AKPrivateEmailController
AKAppleIDSigningDaemonProtocol
AKAppleIDSigningDaemonInterface
AKAuthorizationLoginChoice
AKLoginPresenterHostInterfaceProtocol
AKLoginPresenterHostInterface
AKBeneficiaryManifest
AKAppleIDServerResourceLoadDelegate
AKPrivateEmailPresenterHostProtocol
AKPrivateEmailPresenterHostInterface
AKDeveloperTeam
AKCircleRequestPayload
AKPrivateEmailDaemonInterface
AKPrivateEmailContext
AKURLBag
AKFollowUpFactoryImpl
AKFollowUpItemFactory
AKAccountRecoveryContext
AKAuthorizationNotificationHandler
AKAuthorizationNotificationHandlerInterface
AKCommandLineUtilities
AKFidoAuthenticationResponse
AKFidoResponse
AKWalrusDaemonProtocol
AKWalrusController
AKAlertHandler
AKInheritanceCLIContext
Accounts
AKGrandSlamResponseHandler
AKToken
AKMasterToken
AKAppleIDSession
NSURLSessionAppleIDContext
AKAnisetteData
AKFeatureManager
AKFuture
AKAnisetteProvisioningClientInterface
AKLoginPresenter
AKAuthorizationCredential
AKCredential
AKApplicationMetadataInfo
AKWalrusContext
AKFollowUpController
AKFollowUpProvider
AKTrustedPhoneNumber
AKFollowUpServerPayloadFormatter
AKAuthorization
AKIconContext
AKAbsintheSigner
AKCoordinatedDataBlock
AKCDPFactory
AKPasswordRequest
AKCircleRequestContext
AKTrustedContact
AKUsernameFormatter
AKFidoContext
AKAuthorizationClientImpl
AKAuthorizationClientProtocol
AKAnisetteProvisioningAndSigningDeamonInterface
AKAnisetteProvisioningDaemonProtocol
AKAnisetteProvisioningDaemonInterface
AKFollowUpSynchronizer
AKAppleIDAuthenticationDelegate
AKAuthorizationPresentationContext
AKNetworkObserver
AKServerRequestConfiguration
AKBaseFollowupManager
AKTrustedContactsSyncResult
AKAuthorizationAppSignInDiscovery
AKPasswordCredential
AKGlobalConfig
AKAuthorizationRequest
AKAuthHandlerImpl
AKAuthHandler
AKAuthorizationDaemonConnection
AKFidoRegistrationResponse
AKAuthorizationValidator
AKCredentialRequest
AKCredentialRequestProtocol
AKWalrusConfigProvider
AKAuthorizationNotificationService
AKUserInformation
AKDevice
AKUtilities
AKAnisetteProvisioningController
_AKAnisetteProviderProxy
AKLoginCodeNotificationBuilder
AKAppleIDAuthenticationCommandLineContext
AKBeneficiaryAliasSetupResult
AKAppleIDAuthenticationSurrogateUIProvider
AKAppleIDAuthenticationContext
SecondFactorSupport
LocationNotificationSupport
AKAuthorizationContext
AKAppleIDAuthenticationDaemonProtocol
AKAppleIDAuthenticationDaemonInterface
AKPrivateEmailClientImpl
AKPrivateEmailClientInterface
AKAutoBugCapture
AKProxiedClientContext
AKPrivateEmail
AKCustodianController
AKRemoteDevice
AKAuthorizationClientInterface
AKWalrusConfig
AKBundleInformation
AKAuthorizationController
DSIDForAccount:
APSEnvironment
MLBSerialNumber
DSID
T@"AKDevice",&,N,V_targetDevice
HTTPBody
T@"NSArray",&,N
IsFollowUpItemNotificationForced:
T@"NSData",&,N,V_claimTokenData
JSONObjectWithData:options:error:
T@"NSData",C,N,V_wrappingKeyRKC
PCSAuthContextForWebSessionUUID:serviceName:completion:
T@"NSDate",R,N,V_expirationDate
T#,R
T@"NSNumber",C,N,V_backingColor
T@"<AKAnisetteServiceProtocol>",&,N,V_anisetteDataProvider
T@"NSString",&,N,V_securityCode
T@"<AKAppleIDAuthenticationDelegate>",W,N,V_delegate
T@"NSString",C,N,V_ownerAppleID
T@"<AKAuthorizationUIProvider>",&,N,V_uiProvider
T@"NSString",C,N,V_promptHeader
T@"<AKCredentialRequestProtocol>",&,N,V_authorizedRequest
T@"NSString",C,N,V_proxyAppName
T@"<AKFidoUIProvider>",&,N,V_uiProvider
T@"NSString",C,N,V_serviceToken
T@"<AKPrivateEmailUIProvider>",&
T@"NSString",R,N,V_credentialID
T@"<AKURLBagDictionaryProvider>",&,N,V_bagProvider
T@"NSUUID",R,C,N,V_webSessionID
T@"ACAccount",&,N,V_authkitAccount
TB,N,V_presenceFallbackApproved
T@"ACAccountStore",&,N,V_accountStore
TB,N,V_shouldRequestRecoveryPET
T@"AKAccountManager",R,N
TB,N,V_shouldSendSigningHeaders
T@"AKAnisetteData",&,N,V_companionDeviceAnisetteData
TB,R,N,GisValid
T@"AKAppleIDAuthenticationContext",&,D,N,Sak_setContext:
TQ,R,N,V_capabilityForUIDisplay
T@"AKAppleIDAuthenticationContext",&,N,V_context
URLSession:task:getAppleIDHeadersForResponse:completionHandler:
T@"AKAppleIDAuthenticationController",&,N,V_controller
_accountAliases
T@"AKAttestationData",&,N,V_proxiedDeviceAttestationData
_additionalInfo
T@"AKAuthorizationRequest",&,N,V_authorizationRequest
_authController
T@"AKAuthorizationScopesUserSelection",&,N,V_userSelection
_bundleIconName
T@"AKBeneficiaryManifest",&,N,V_manifest
_callerBundleID
T@"AKCircleRequestPayload",&,N,V_payload
_claimTokenData
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
_connectionLock
T@"AKDevice",C,N
_credentialName
T@"AKDevice",C,N,V_proxiedDevice
_custodianUUIDs
T@"AKPasswordRequest",&,N,V_passwordRequest
_deallocHandler
T@"AKUserInformation",&,N,V_userInformation
_existingStatus
T@"AKUserInformation",R,N,V_userInformation
_exportedObject
T@"ASAuthorizationController",&,N,V__authController
_heartbeatToken
T@"NSArray",C,N,V_accountAliases
_itemIdentifier
T@"NSArray",C,N,V_beneficiaryContacts
_locale
T@"NSArray",C,N,V_custodianContacts
_origin
T@"NSArray",C,N,V_custodianUUIDs
_pairedDeviceAnisetteController
T@"NSArray",C,N,V_loginChoices
_proxiedAltDSID
T@"NSArray",C,N,V_orphanedBeneficiaryUUIDs
_reason
T@"NSArray",C,N,V_phoneInformation
_removeTokenForKeys:forAccount:
T@"NSArray",C,N,V_requestedScopes
_scopes
T@"NSArray",C,N,V_serviceIdentifiers
_setSessionKey:
T@"NSArray",C,N,V_whitelistedPathURLs
_slotID
T@"NSArray",R,C,N,V_machineIDs
_stringForType:
T@"NSArray",R,N,V_credentials
_teamID
T@"NSData",&,N,V_clientInfo
_unsafe_completeTask:withError:
T@"NSData",&,N,V_displayImageData
_userID
T@"NSData",C,N,V_aaData
_valueCondition
T@"NSData",C,N,V_externalLocalAuthData
_wrappingKeyRKC
T@"NSData",C,N,V_idmsData
accessKeyString
T@"NSData",R,C,N,V_authorizationCode
addFinishBlock:
T@"NSData",R,C,N,V_identityToken
ak_addAuthorizationHeaderWithCustodianRecoveryToken:forAltDSID:
T@"NSData",R,N,V_challenge
ak_addGuardianAuthorizationHeaderWithHeartbeatToken:forAltDSID:
T@"NSDate",C,N,V_birthday
ak_addPrivateEmailDomainHeader:
T@"NSDate",R,C,N,V_lastUpdatedDate
ak_addProxyApp:
T@"NSDate",R,N,V_expiryDate
ak_localeHeader
T@"NSDictionary",&,N,V_responseInfo
ak_mapNullable:
T@"NSDictionary",C,N,V_additionalInfo
ak_toJSONString
T@"NSDictionary",C,N,V_apps
allKeys
T@"NSDictionary",C,N,V_beneficiaryOperationsByID
appName
T@"NSDictionary",C,N,V_httpHeadersForRemoteUI
appleID
T@"NSDictionary",R,C,N,V_otherInfo
authKitAccount:
T@"NSDictionary",R,N
baaSignatureForData:completion:
T@"NSLocale",C,N,V_locale
bundleForClass:
T@"NSMutableData",&,N,V_receivedData
cdpAccountIsICDPEnabledForDSID:
T@"NSNumber",&,N,V_identifier
cliMode
T@"NSNumber",&,N,V_scale
companionDevice
T@"NSNumber",C,N,SsetAppleIDLoginEnabled:,V_isAppleIDLoginEnabled
containsString:
T@"NSNumber",C,N,V_ageOfMajority
coverGlassColor
T@"NSNumber",C,N,V_canBeCustodian
currentDeviceAuthenticationMode
T@"NSNumber",C,N,V_canHaveCustodian
dateFromString:
T@"NSNumber",C,N,V_custodianEnabled
fetchAppInfoURL
T@"NSNumber",C,N,V_groupKitEligibility
forwardingEmail
T@"NSNumber",C,N,V_hasUsedAuthorization
initWithBeneficiairyIdentifier:
T@"NSNumber",C,N,V_isLegacyStudent
initWithInterface:strongObject:
T@"NSNumber",C,N,V_isSenior
initWithString:
T@"NSNumber",C,N,V_localPresenceFound
internalWrapper
T@"NSNumber",C,N,V_phoneAsAppleID
isFaceIDCapable
T@"NSNumber",C,N,V_previouslyWantedPrivateEmail
isLegacyStudent
T@"NSNumber",C,N,V_secondFactorCode
isProxy
T@"NSNumber",C,N,V_vettedPrimaryEmail
isWalrusEnabled
T@"NSNumber",R,C,N,V_iconScale
lastKnownLocale
T@"NSSet",C,N,V_desiredInternalTokens
lisbonAvailable
T@"NSString",&,N,V_altDSID
manifestOptions
T@"NSString",&,N,V_appName
message
T@"NSString",&,N,V_cancelButtonString
numberWithBool:
T@"NSString",&,N,V_heartbeatTokenValue
options
T@"NSString",&,N,V_initialURLKey
overrideForKey:
T@"NSString",&,N,V_number
payload
T@"NSString",&,N,V_obfuscatedNumber
performRequests
T@"NSString",&,N,V_phoneCertificate
presentLoginAlertForContext:withError:title:message:completion:
T@"NSString",&,N,V_proxiedAltDSID
primaryClientID
T@"NSString",&,N,V_proxiedClientAppName
reachableEmails
T@"NSString",&,N,V_proxiedClientServiceID
removeNetworkReachableObserver:
T@"NSString",&,N,V_proxiedDeviceClass
requestWithURL:
T@"NSString",&,N,V_proxiedIdentityToken
responseMessage
T@"NSString",&,N,V_pushToken
selectedRequest
T@"NSString",&,N,V_title
T@"NSString",&,N,V_transferState
setAppleIDAuth:
T@"NSString",&,N,V_wrappedKeyString
setBagProvider:
T@"NSString",C,N
setCanHaveCustodian:forAccount:
T@"NSString",C,N,S_setIdentityToken:,V_identityToken
setCompanionDeviceAnisetteData:
T@"NSString",C,N,S_setMessage:,V_message
setDeviceClass:
T@"NSString",C,N,S_setProxiedAppBundleID:,V_proxiedAppBundleID
setIsEphemeral:
T@"NSString",C,N,S_setProxiedAppName:,V_proxiedAppName
setMasterKeyID:
T@"NSString",C,N,SsetCustodianRecoveryToken:,V_custodianRecoveryToken
setModelNumber:
T@"NSString",C,N,V_MLBSerialNumber
setOwnerDevice:
T@"NSString",C,N,V_accessKeyString
setPresenceSID:
T@"NSString",C,N,V_akAction
setPromptTitle:
T@"NSString",C,N,V_appID
setRequestType:
T@"NSString",C,N,V_appProvidedContext
setServiceType:
T@"NSString",C,N,V_authorizedApplicationsListVersion
setShouldEnableTestAccountMode:
T@"NSString",C,N,V_beneficiaryAccountName
setStringValue:
T@"NSString",C,N,V_beneficiaryFirstName
setWebAccessEnabled:forAccount:
T@"NSString",C,N,V_beneficiaryLastName
setWithObjects:
T@"NSString",C,N,V_beneficiaryPassword
set_isWebLogin:
T@"NSString",C,N,V_bundleID
shouldUpdateAuthModeForAccount:
T@"NSString",C,N,V_callerIconBundlePath
stringByAppendingPathComponent:
T@"NSString",C,N,V_clientAppBundleId
stringRepresentationForService:
T@"NSString",C,N,V_clientBundleID
tokenUpgradeURL
T@"NSString",C,N,V_color
uppercaseString
T@"NSString",C,N,V_continuationToken
utility
T@"NSString",C,N,V_custodianListVersion
verifiedPrimaryEmailForAccount:
T@"NSString",C,N,V_custodianSetupToken
wrappingKeyData
.cxx_destruct
IDMSEnvironment
CGSizeValue
T@"AKDevice",&,N,V_pairedDevice
HTMLHeader
T@"AKFidoContext",&,N,V_context
IDMSEnvironmentFromBag:
T@"NSArray",R,N
IsInlineFlowSupportedConfig
T@"NSData",&,N,V_wrappedKeyData
PCSAuthContextForWebSessionIdentifier:serviceName:completion:
T@"NSData",R,N,V_userIdentifier
ROMAddress
T@"NSDictionary",&,N,V_userInfo
T@"<AKAlertHandlerUIProvider>",W,N,V_uiProvider
T@"NSNumber",C,N,V_housingColor
T@"<AKAppleIDAuthenticationDelegate>",W,N
T@"NSString",C,N,V_displayTitle
T@"<AKAuthorizationUIProvider>",&
T@"NSString",C,N,V_privateEmail
T@"<AKCredential>",&,N,V_credential
T@"NSString",C,N,V_proxiedAppID
T@"<AKCredentialRequestProtocol>",&,N,V_selectedRequest
T@"NSString",C,N,V_recoveryStep
T@"<AKFollowUpProvider>",&,N,V_followupProvider
T@"NSString",R,C,N,V_bundleName
T@"<AKPrivateEmailUIProvider>",&,N,V_uiProvider
T@"NSURL",R,C,N
T@"AAFXPCSession",&,N,V_remoteService
TB,N,V__cliMode
T@"ACAccount",R,N
TB,N,V_resolved
T@"ACAccountType",R,N
TB,N,V_shouldSendAbsintheHeader
T@"AKAlertHandler",R,N
TB,N,V_signInAllowsPCSKeyAccess
T@"AKAnisetteData",&,N,V_proxiedDeviceAnisetteData
TQ,N,V_authMode
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
T@"AKAppleIDAuthenticationController",&,N,V_authenticationController
_aaData
T@"AKAppleIDServerResourceLoadDelegate",&,N,V_resourceLoadDelegate
_activeSecondFactoryEntryPrompt
T@"AKAttestationSigner",R,N
_authCompletion
T@"AKAuthorizationRequest",R,C,N,V_request
_authkitAccount
T@"AKAuthorizationUpgradeContext",R,N,V_upgradeContext
_cachedSettings
T@"AKCarrierBundleUtilities",R
_canBeCustodian
T@"AKCommandLineUtilities",R,N,V_utility
_clientBundleID
T@"AKDevice",&,N,V_proxiedDevice
_contextManager
T@"AKDevice",C,N,V_companionDevice
_custodianInfos
T@"AKInheritanceAccessKey",&,N,V_accessKey
_daemonEndpoint
T@"AKPushMessage",&,N,V_responseMessage
_enclosureColor
T@"AKUserInformation",C,N,V_userInformation
_expirationDate
T@"AKWalrusConfig",R,N,V_cachedConfig
_hasMDM
T@"NSArray",&,N,V_proxiedAssociatedDomains
_isRapportLogin
T@"NSArray",C,N,V_associatedDomains
_lastRetryError
T@"NSArray",C,N,V_beneficiaryUUIDs
_number
T@"NSArray",C,N,V_custodianInfos
_osName
T@"NSArray",C,N,V_loggedInServices
_phoneAsAppleID
T@"NSArray",C,N,V_operatingSystems
_proxiedAppName
T@"NSArray",C,N,V_orphanedCustodianUUIDs
_remoteListener
T@"NSArray",C,N,V_reachableEmails
_requestOptions
T@"NSArray",C,N,V_scopes
_serviceTypesForSecurityUpgrade
T@"NSArray",C,N,V_services
_shouldRequestConfigurationInfo
T@"NSArray",R,C,N,V_authorizedScopes
_status
T@"NSArray",R,N,V_accessibleBundleInformation
_strongReceiver
T@"NSCondition",&,N,V_valueCondition
_underlyingTask
T@"NSData",&,N,V_data
_upgradeContext
T@"NSData",&,N,V_wrappingKeyData
_userIdentifier
T@"NSData",C,N,V_encryptedPRKC
_wrappedKeyData
T@"NSData",C,N,V_iconData
absintheCertURL
T@"NSData",R,C,N
actions
T@"NSData",R,C,N,V_iconData
ak_SHA256String
T@"NSData",R,N
ak_addCustodianSyncActionHeader
T@"NSDate",&,N,V_beginDate
ak_addOTStatusHeaderForAltDSID:
T@"NSDate",C,N,V_lastDataSyncTimestamp
ak_addPrivateEmailOriginHeader:
T@"NSDate",R,C,N,V_timestamp
ak_base64EncodedJsonFromObject:
T@"NSDateFormatter",R,N
ak_map:
T@"NSDictionary",C,N
ak_redactedCopy
T@"NSDictionary",C,N,V_appProvidedData
allHeaderFields
T@"NSDictionary",C,N,V_attestationHeaders
altDSID
T@"NSDictionary",C,N,V_custodianOperationsByID
appProvidedData
T@"NSDictionary",R,C,N,V_additionalInfo
appleIDAuthorizeHTMLResponseURL
T@"NSDictionary",R,C,N,V_teams
authorizationRequestFinishedWithAuthorization:error:completion:
T@"NSError",&,N,V_lastRetryError
base64EncodedStringWithOptions:
T@"NSMutableArray",&,N,V_internalWrapper
cancelDataTask:
T@"NSNumber",&,N,V_hasEmptyPasswordOverride
clearNotificationForItem:error:
T@"NSNumber",&,N,V_loginChoice
clientErrorCode
T@"NSNumber",C,N
containsObject:
T@"NSNumber",C,N,SsetHasEmptyPassword:,V_hasEmptyPassword
context
T@"NSNumber",C,N,V_canBeBeneficiary
credentialForAccount:serviceID:
T@"NSNumber",C,N,V_canHaveBeneficiary
custodianListVersionForAccount:
T@"NSNumber",C,N,V_coverGlassColor
dealloc
T@"NSNumber",C,N,V_custodianLastModified
forceSilentAuth
T@"NSNumber",C,N,V_hasMDM
informativeText
T@"NSNumber",C,N,V_iconScale
initWithFormat:
T@"NSNumber",C,N,V_isNotificationEmailAvailable
initWithRelyingPartyIdentifier:
T@"NSNumber",C,N,V_isUnderage
integratedCircuitCardIdentifier
T@"NSNumber",C,N,V_managedOrganizationType
isEligibleToArmDeviceForPCSAuth
T@"NSNumber",C,N,V_presenceCheckPassed
isInternalBuild
T@"NSNumber",C,N,V_privateAttestationEnabled
isMultiUserMode
T@"NSNumber",C,N,V_serverExperimentalFeatures
isValid
T@"NSNumber",C,N,V_webAccessEnabled
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
lastUpdatedDate
T@"NSSet",R,N
lowercaseString
T@"NSString",&,N,V_alternativeButtonString
maxWait
T@"NSString",&,N,V_callerBundleID
needsNewAppleID
T@"NSString",&,N,V_claimTokenString
oneTimePassword
T@"NSString",&,N,V_identityTokenValue
originalRequest
T@"NSString",&,N,V_localizedStatusDescription
passwordRequest
T@"NSString",&,N,V_numberWithDialCode
perform
T@"NSString",&,N,V_origin
performSilentTTRFor:completion:
T@"NSString",&,N,V_primaryClientID
presentServerProvidedUIForContext:withConfiguration:completion:
T@"NSString",&,N,V_proxiedClientAppID
protectionSpace
T@"NSString",&,N,V_proxiedClientBundleID
release
T@"NSString",&,N,V_proxiedClientTeamID
request
T@"NSString",&,N,V_proxiedDeviceName
requestedScopes
T@"NSString",&,N,V_pushMode
selectedPrivateEmailForAccount:
T@"NSString",&,N,V_serverInfo
serviceWithDefaultShellEndpoint
T@"NSString",&,N,V_transactionId
setAccountName:
T@"NSString",&,N,V_windowTitle
setAuthContext:
T@"NSString",&,N,V_wrappingKeyString
setCanBeBeneficiary:forAccount:
T@"NSString",C,N,S_setHeartbeatToken:,V_heartbeatToken
setClearAction:
T@"NSString",C,N,S_setMasterKey:,V_masterKey
setCustodianEnabled:forAccount:
T@"NSString",C,N,S_setPassword:,V_password
setDeviceColor:
T@"NSString",C,N,S_setProxiedAppName:
setLoginChoice:
T@"NSString",C,N,S_setShortLivedToken:,V_shortLivedToken
setMaxConcurrentOperationCount:
T@"NSString",C,N,V_DSID
setNeedsRepair:
T@"NSString",C,N,V_ROMAddress
setPhoneNumber:
T@"NSString",C,N,V_accountName
setPresentationContextProvider:
T@"NSString",C,N,V_altDSID
setRepairState:
T@"NSString",C,N,V_appName
setRoutingInfo:
T@"NSString",C,N,V_appleIDCountryCode
setShouldAllowExperimentalMode:
T@"NSString",C,N,V_bagUrlKey
setShouldPromptForPasswordOnly:
T@"NSString",C,N,V_beneficiaryAltDSID
setURL:
T@"NSString",C,N,V_beneficiaryIdentifier
setWindowTitle:
T@"NSString",C,N,V_beneficiaryListVersion
set_authSessionTimeoutInterval:
T@"NSString",C,N,V_beneficiarySetupToken
settingsServiceTokenForAccount:
T@"NSString",C,N,V_bundleIconName
silentEscrowRecordRepairEnabled
T@"NSString",C,N,V_cellularDataAttributionAppBundleID
stringFromDate:
T@"NSString",C,N,V_clientAppName
syncAnisetteURL
T@"NSString",C,N,V_clientID
trusted
T@"NSString",C,N,V_continuationRequestIdentifier
userInformation
T@"NSString",C,N,V_continuityIDMSData
validateCodeURL
T@"NSString",C,N,V_custodianRecoveryToken
webAccessStatus
T@"NSString",C,N,V_dataCenterIdentifier
T@"NSString",C,N,V_defaultButtonString
T@"NSString",C,N,V_dependentAltDSID
T@"NSString",C,N,V_deviceClass
T@"NSString",C,N,V_deviceName
T@"NSString",C,N,V_displayString
T@"NSString",C,N,V_enclosureColor
T@"NSString",C,N,V_encodedRecoveryIdentityToken
T@"NSString",C,N,V_encodedRecoveryPET
T@"NSString",C,N,V_extensionIdentifier
T@"NSString",C,N,V_externalAuthToken
T@"NSString",C,N,V_familyName
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_followupItems
T@"NSString",C,N,V_forwardingEmail
T@"NSString",C,N,V_givenName
T@"NSString",C,N,V_hashedWrappingKeyRKC
T@"NSString",C,N,V_heartbeatToken
T@"NSString",C,N,V_helpAnchor
T@"NSString",C,N,V_helpBook
T@"NSString",C,N,V_iconName
T@"NSString",C,N,V_identityToken
T@"NSString",C,N,V_idmsData
T@"NSString",C,N,V_incorrectKeyPresentedMessage
T@"NSString",C,N,V_informativeText
T@"NSString",C,N,V_initialURLRequestKey
T@"NSString",C,N,V_itemIdentifier
T@"NSString",C,N,V_lastName
T@"NSString",C,N,V_localizedAppName
T@"NSString",C,N,V_localizedCallerName
T@"NSString",C,N,V_machineID
T@"NSString",C,N,V_managedOrganizationName
T@"NSString",C,N,V_masterKeyID
T@"NSString",C,N,V_modelNumber
T@"NSString",C,N,V_name
T@"NSString",C,N,V_nonce
T@"NSString",C,N,V_notificationEmail
T@"NSString",C,N,V_oneTimePassword
T@"NSString",C,N,V_ownerCustodianAltDSID
T@"NSString",C,N,V_passwordPromptTitle
T@"NSString",C,N,V_passwordResetToken
T@"NSString",C,N,V_phoneNumber
T@"NSString",C,N,V_phoneNumberCertificate
T@"NSString",C,N,V_previouslySelectedEmail
T@"NSString",C,N,V_primaryEmailAddress
T@"NSString",C,N,V_privacyBundleIdentifier
T@"NSString",C,N,V_privateEmailBundleId
T@"NSString",C,N,V_privateEmailDomain
T@"NSString",C,N,V_privateEmailListVersion
T@"NSString",C,N,V_promptBody
T@"NSString",C,N,V_promptTitle
T@"NSString",C,N,V_provisioningDeviceIdentifier
T@"NSString",C,N,V_proxiedAppName
T@"NSString",C,N,V_proxiedBundleIdentifier
T@"NSString",C,N,V_pushToken
T@"NSString",C,N,V_rawAccountPassword
T@"NSString",C,N,V_realUserVerificationData
T@"NSString",C,N,V_reason
T@"NSString",C,N,V_recoverySessionID
T@"NSString",C,N,V_representingBundlePath
T@"NSString",C,N,V_securityUpgradeContext
T@"NSString",C,N,V_selectedEmail
T@"NSString",C,N,V_serverFriendlyDescription
T@"NSString",C,N,V_serviceID
T@"NSString",C,N,V_serviceTokenIdentifier
T@"NSString",C,N,V_sessionID
T@"NSString",C,N,V_site
T@"NSString",C,N,V_state
T@"NSString",C,N,V_stringValue
T@"NSString",C,N,V_teamID
T@"NSString",C,N,V_transactionID
T@"NSString",C,N,V_txnid
T@"NSString",C,N,V_uniqueDeviceIdentifier
T@"NSString",C,N,V_user
T@"NSString",C,N,V_userID
T@"NSString",C,N,V_userIdentifier
T@"NSString",C,N,V_username
T@"NSString",R,C
T@"NSString",R,C,N
T@"NSString",R,C,N,V_altDSID
T@"NSString",R,C,N,V_authorizedAppListVersion
T@"NSString",R,C,N,V_backingColorCode
T@"NSString",R,C,N,V_buildNumber
T@"NSString",R,C,N,V_bundleDescription
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_clientAppBundleId
T@"NSString",R,C,N,V_colorCode
T@"NSString",R,C,N,V_coverGlassColorCode
T@"NSString",R,C,N,V_enclosureColorCode
T@"NSString",R,C,N,V_housingColorCode
T@"NSString",R,C,N,V_iconName
T@"NSString",R,C,N,V_key
T@"NSString",R,C,N,V_machineID
T@"NSString",R,C,N,V_machineId
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_operatingSystemName
T@"NSString",R,C,N,V_operatingSystemVersion
T@"NSString",R,C,N,V_password
T@"NSString",R,C,N,V_privateEmailAddress
T@"NSString",R,C,N,V_serialNumber
T@"NSString",R,C,N,V_state
T@"NSString",R,C,N,V_transactionID
T@"NSString",R,C,N,V_upgradeBundleIdentifier
T@"NSString",R,C,N,V_userIdentifier
T@"NSString",R,C,N,V_webSessionIdentifier
T@"NSString",R,N
T@"NSString",R,N,V_attestationsData
T@"NSString",R,N,V_authenticatorData
T@"NSString",R,N,V_challenge
T@"NSString",R,N,V_clientData
T@"NSString",R,N,V_credentialName
T@"NSString",R,N,V_displayName
T@"NSString",R,N,V_originalChallenge
T@"NSString",R,N,V_relyingPartyIdentifier
T@"NSString",R,N,V_rootPath
T@"NSString",R,N,V_signature
T@"NSString",R,N,V_userIdentifier
T@"NSURL",C,N,V_recoveryContinuationURL
T@"NSURL",R,N
T@"NSURLRequest",&,N,V_request
T@"NSURLSessionDataTask",&,N,V_underlyingTask
T@"NSUUID",&,N,V_presenceSID
T@"NSUUID",C,N,V_custodianUUID
T@"NSUUID",C,N,V_uuid
T@"NSUUID",R,C,N
T@"NSUUID",R,C,N,V_requestIdentifier
T@"NSUUID",R,C,N,V_transactionID
T@"NSUUID",R,N,V_beneficiaryID
T@"NSUUID",R,N,V_identifier
T@"NSValue",C,N,V_iconSize
T@"NSXPCConnection",&,N,V_xpcConnection
T@"NSXPCInterface",R,N
T@"NSXPCListener",&,N,V_remoteListener
T@"NSXPCListenerEndpoint",R,N,V_listenerEndpoint
T@,&,N,V_clientInfo
T@?,C,N,V_authCompletion
T@?,C,N,V_completionHandler
T@?,C,N,V_deallocHandler
T@?,C,N,V_interruptionHandler
T@?,C,N,V_invalidationHandler
T@?,C,N,V_presentationCompletion
T@?,C,N,V_registrationCompletion
TB,N
TB,N,G_isForcedEligibleForForegroundAuthentication,Sset_forceEligibleForForegroundAuthentication:,V_forceEligibleForForegroundAuthentication
TB,N,GisAppleIDAuthorization,V_appleIDAuth
TB,N,GisCustodianSyncAction,V_custodianSyncAction
TB,N,GshouldCreateAppleID,V_createAppleID
TB,N,S_setProxyingForApp:,V_isProxyingForApp
TB,N,SsetFirstTimeLogin:,V_isFirstTimeLogin
TB,N,SsetTriggeredByNotification:,V_isTriggeredByNotification
TB,N,V__notifyOfTimeout
TB,N,V__usesAppleIDContext
TB,N,V_alwaysShowUsernameField
TB,N,V_anticipateEscrowAttempt
TB,N,V_canceledOrCompleted
TB,N,V_cliMode
TB,N,V_clientAuthenticatedExternallyWithPassword
TB,N,V_clientShouldAuthenticateExternally
TB,N,V_clientShouldHandleAlternativeButtonAction
TB,N,V_deviceRegionRequired
TB,N,V_forceSilentAuth
TB,N,V_hideAlternativeButton
TB,N,V_hideCancelButton
TB,N,V_hideReasonString
TB,N,V_includeFamilyDevices
TB,N,V_includeUntrustedDevices
TB,N,V_isContinuityPush
TB,N,V_isEligibleForUpgradeFromPassword
TB,N,V_isEphemeral
TB,N,V_isFirstPartyLogin
TB,N,V_isLikelyRealUser
TB,N,V_isPasswordEditable
TB,N,V_isProxy
TB,N,V_isRapportLogin
TB,N,V_isSilentAppTransfer
TB,N,V_isUsernameEditable
TB,N,V_isWebLogin
TB,N,V_keepAlive
TB,N,V_keyAndBundleIdAreHashed
TB,N,V_makePrivateEmail
TB,N,V_mandatesRecoveryKey
TB,N,V_needsCredentialRecovery
TB,N,V_needsNewAppleID
TB,N,V_needsNewChildAccount
TB,N,V_needsPasswordChange
TB,N,V_needsRepair
TB,N,V_needsSecurityUpgradeUI
TB,N,V_ownerDevice
TB,N,V_performUIOutOfProcess
TB,N,V_requirePassword
TB,N,V_shouldAllowAppleIDCreation
TB,N,V_shouldForceInteractiveAuth
TB,N,V_shouldForcePrivateEmail
TB,N,V_shouldForceUI
TB,N,V_shouldIgnoreTeamID
TB,N,V_shouldIgnoreUserID
TB,N,V_shouldOfferSecurityUpgrade
TB,N,V_shouldPreventInteractiveAuth
TB,N,V_shouldPromptForPasswordOnly
TB,N,V_shouldRequestConfigurationInfo
TB,N,V_shouldRequestShortLivedToken
TB,N,V_shouldSendEphemeralAuthHeader
TB,N,V_shouldSendGrandSlamTokensForRemoteUI
TB,N,V_shouldSendICSCIntentHeader
TB,N,V_shouldSendIdentityTokenForRemoteUI
TB,N,V_shouldSendLocalUserHasAppleIDLoginHeader
TB,N,V_shouldSendPhoneNumber
TB,N,V_shouldSkipAuthorizationUI
TB,N,V_shouldSkipBiometrics
TB,N,V_shouldSkipInitialReachabilityCheck
TB,N,V_shouldSkipSettingsLaunchAlert
TB,N,V_shouldUpdatePersistentServiceTokens
TB,N,V_shouldUseProxiedClientBundleIDForSRP
TB,N,V_supportsMasterKeyRecovery
TB,N,V_supportsPiggybacking
TB,N,V_supportsPresence
TB,N,V_termsAccepted
TB,N,V_useAlternativeKeysIcon
TB,N,V_waitForReply
TB,N,VcliMode
TB,R
TB,R,N
TB,R,N,GIsInlineFlowSupportedConfig
TB,R,N,GisContextEligibleForBiometricOrPasscodeAuth
TB,R,N,GisContextEligibleForSilentAuth
TB,R,N,GisContextEligibleForSilentAuthCoercion
TB,R,N,GisContextRequestingReauthForExistingService
TB,R,N,GisLisbonAvailable
TB,R,N,GisPhoneNumberSupportedConfig
TB,R,N,GisSettingsInlineLogoViewDisabled
TB,R,N,V_inCircle
TB,R,N,V_isEligibleForUpgradeFromPassword
TB,R,N,V_isInRestrictedSharingMode
TB,R,N,V_isNetworkReachable
TB,R,N,V_trusted
TQ,N
TQ,N,SsetLinkType:,V_linkType
TQ,N,V_appleIDSecurityLevel
TQ,N,V_attemptIndex
TQ,N,V_authenticationMode
TQ,N,V_authenticationType
TQ,N,V_circleStep
TQ,N,V_maskingStyle
TQ,N,V_presentationType
TQ,N,V_repairState
TQ,N,V_requestOptions
TQ,N,V_requestType
TQ,N,V_retryCount
TQ,N,V_routingInfo
TQ,R
TQ,R,N
TQ,R,N,V_bundleType
TQ,R,N,V_operation
Td,N,V_authSessionTimeoutInterval
Td,N,V_maxWait
Td,N,V_waitForReplyTimeout
Tq,N
Tq,N,V_authenticationPromptStyle
Tq,N,V_clientErrorCode
Tq,N,V_existingStatus
Tq,N,V_featureStatus
Tq,N,V_maximumLoginAttempts
Tq,N,V_notificationAction
Tq,N,V_presenceMode
Tq,N,V_serviceType
Tq,N,V_shouldEnablePiggybackingPresence
Tq,N,V_slotID
Tq,N,V_state
Tq,N,V_status
Tq,N,V_verifyCredentialReason
Tq,R,N,V_manifestOptions
Tq,R,N,V_verificationType
URLByAppendingPathComponent:
URLQueryAllowedCharacterSet
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:getAppleIDRequestOrHeadersForResponse:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSessionDidFinishEventsForBackgroundURLSession:
URLWithSize:cropStyle:format:
URLWithString:
UTF8String
UUID
UUIDString
XPCInterface
_DSID
_IDMSEnvironmentFromString:
_MLBSerialNumber
_ROMAddress
_URLSession
_URLWithString:byAppendingParameters:
__authController
__cliMode
__notifyOfTimeout
__usesAppleIDContext
_accessKey
_accessKeyString
_accessibleBundleInformation
_accountCreationRequestBodyFromResponseDictionary:shouldIncludePhoneNumber:shouldIncludeForSecurityCode:
_accountDictionary
_accountName
_accountQueue
_accountStore
_accountTypeCache
_accountTypeCacheLock
_accountTypeForServiceType:
_actionFromInfo:pushMessageInfo:
_actionsFromPayload:pushMessageInfo:
_addPresentationParametersForContext:
_addPresenterParameters
_additionalAbsintheHeadersForRequest:completion:
_additionalAttestationHeadersForRequest:options:completion:
_ageOfMajority
_akAction
_ak_dataForEncodedHeaderWithKey:
_ak_shortenServiceIdentifier:
_ak_truncateTokenDict:
_ak_truncateTokenString:
_aliasesForiCloudAccount:
_alignedInsertionCandidates:withExistingItems:
_altDSID
_altDSIDForiCloudAccount:
_alternativeButtonString
_alwaysShowUsernameField
_anisetteControllerLock
_anisetteDataProvider
_anisetteServiceConnection
_anticipateEscrowAttempt
_appID
_appName
_appProvidedContext
_appProvidedData
_appendBlameIfRequiredTo:
_appleIDAccountType
_appleIDAccountTypeLock
_appleIDAuth
_appleIDAuthorizationURLs
_appleIDCountryCode
_appleIDSecurityLevel
_appleOwnedDomains
_apps
_artworkURLFromResult:size:updatingIconContext:
_associatedDomains
_attemptIndex
_attestationHeaders
_attestationsData
_authContext
_authContextsByUUID
_authContextsQueue
_authKitAccountType
_authKitAccountTypeLock
_authMode
_authRequestFromContext:
_authSessionTimeoutInterval
_authenticationController
_authenticationMode
_authenticationPromptStyle
_authenticationServiceConnection
_authenticationType
_authenticatorData
_authorizationCode
_authorizationRequest
_authorizedAppListVersion
_authorizedApplicationsListVersion
_authorizedRequest
_authorizedScopes
_baaSignatureForData:completion:
_baaSignaturesForData:completion:
_backingColor
_backingColorCode
_bagProvider
_bagUrlKey
_beginDataTaskWithRequest:configuration:completion:
_beginDate
_beneficiaryAccountName
_beneficiaryAltDSID
_beneficiaryContacts
_beneficiaryFirstName
_beneficiaryID
_beneficiaryIdentifier
_beneficiaryLastName
_beneficiaryListVersion
_beneficiaryOperationsByID
_beneficiaryPassword
_beneficiarySetupToken
_beneficiaryUUIDs
_birthday
_block
_buildNumber
_bundleDescription
_bundleID
_bundleIdentifier
_bundleName
_bundleType
_bundleTypeFrom:
_cachedConfig
_cachedIsLisbonAvailable
_callCompletionWithData:error:
_callCompletionWithResults:password:additionalData:error:
_callerIconBundlePath
_canBeBeneficiary
_canHaveBeneficiary
_canHaveCustodian
_cancelButtonString
_canceledOrCompleted
_capabilityForUIDisplay
_carrierUtilitiesQueue
_cdpUiProvider
_cellularDataAttributionAppBundleID
_challenge
_circleStep
_claimTokenString
_clearAction
_clearRawPasswordForAccount:
_cliMode
_clientAppBundleId
_clientAppName
_clientAuthenticatedExternallyWithPassword
_clientData
_clientErrorCode
_clientID
_clientImpl
_clientInfo
_clientShouldAuthenticateExternally
_clientShouldHandleAlternativeButtonAction
_clientSideContextForServerContext:
_collectAndHandleTermsAndConditionsWithResponseDictionary:configuration:completion:
_collectAndPostSecondFactorCodeWithRequestBody:configuration:completion:
_color
_colorCode
_companionDevice
_companionDeviceAnisetteData
_completeWithError:
_completionHandler
_configurationsFromCache:withError:
_configureNotificationServiceWithCompletion:
_configureStateBroadcastServiceWithCompletion:
_connection
_connectionInterrupted
_connectionInterruptionHandler
_connectionInvalidated
_connectionInvalidationHandler
_context
_contextCreationDate
_continuationHeaders
_continuationRequestIdentifier
_continuationToken
_continuityIDMSData
_controller
_convertOperationToEnum:
_coverGlassColor
_coverGlassColorCode
_createAppleID
_createContextDictionaryFromResponse:
_createURLSessionUsesAppleIDContext:
_credential
_credentialID
_credentialRequestContext
_credentials
_currentBags
_currentDeviceAuthenticationMode
_custodianContacts
_custodianEnabled
_custodianLastModified
_custodianListVersion
_custodianOperationsByID
_custodianRecoveryToken
_custodianSetupToken
_custodianSyncAction
_custodianUUID
_daemonConnection
_daemonXPCEndpoint
_data
_dataCenterIdentifier
_dateFormatter
_defaultButtonString
_defaultSecurityUpgradeServiceNames
_delegate
_dependentAltDSID
_desiredInternalTokens
_deviceClass
_deviceColor
_deviceEnclosureColor
_deviceName
_deviceRegionRequired
_dictionaryWithPlistData:
_displayImageData
_displayName
_displayString
_displayTitle
_enclosureColorCode
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_encryptedPRKC
_endpoint
_expiryDate
_exportedInterface
_extensionIdentifier
_externalAuthToken
_externalLocalAuthData
_extractWalrusConfigWithAccountCountry:fromGlobalConfig:
_factory
_familyName
_featureStatus
_fetchApplicationNameForBundleId:
_fetchURLBagWithCompletion:
_filterDeprecatedType:
_firstName
_followupController
_followupItems
_followupProvider
_forceEligibleForForegroundAuthentication
_forceSilentAuth
_formattedValueForPhoneNumber:countryCode:
_forwardingEmail
_generateAppleIDHeadersForRequest:error:
_generateAppleIDHeadersForSessionTask:withCompletion:
_generatedCode
_genericAppleIDHeadersDictionaryForRequest:
_givenName
_group
_groupKitEligibility
_handleAnissetteURLResponse:forRequest:withCompletion:
_handleInvalidMasterTokenWithSubErrorCode:
_handleSecondFactorCodeEntry
_handleServerUIBirthdayVerificationWithResponseDictionary:configuration:completion:
_handleServerUIPasswordVerificationWithResponseDictionary:configuration:completion:
_handleServerUIPhoneVerificationWithResponseDictionary:configuration:completion:
_handleServerUISMSVerificationWithResponseDictionary:statusCode:configuration:completion:
_handleServerUISecondFactorWithObjectModel:configuration:completion:
_handleServerUIWithDictionary:statusCode:configuration:completion:
_handleURLSwitchingResponse:forRequest:withCompletion:
_hardwareModel
_harvestContinuationHeadersFromHeaders:
_hasApplicationMetaData
_hasEmptyPassword
_hasEmptyPasswordOverride
_hasUsedAuthorization
_hashedWrappingKeyRKC
_heartbeatTokenValue
_helpAnchor
_helpBook
_hideAlternativeButton
_hideCancelButton
_hideReasonString
_hostURL
_housingColor
_housingColorCode
_httpHeadersForRemoteUI
_iCloudAccountType
_iCloudAccountTypeLock
_iconData
_iconName
_iconScale
_iconSize
_identifier
_identityToken
_identityTokenValue
_idmsData
_inCircle
_includeFamilyDevices
_includeUntrustedDevices
_incorrectKeyPresentedMessage
_informativeText
_initWithIdentifier:
_initWithInfo:
_initWithInterface:object:
_initialURLKey
_initialURLRequestKey
_internalQueue
_internalWrapper
_interpolatedReason
_interpolatedReasonWithBlame
_interruptionHandler
_invalidationHandler
_invocationByObserver
_isAccountEligibleForSecurityUpgrade:ofServiceType:
_isAllOptionsSelected
_isAppleIDLoginEnabled
_isContextRequestingReauthForExistingService
_isContinuityPush
_isEligibleForUpgradeFromPassword
_isEphemeral
_isFirstPartyLogin
_isFirstTimeLogin
_isForcedEligibleForForegroundAuthentication
_isInRestrictedSharingMode
_isLegacyStudent
_isLikelyRealUser
_isNetworkReachable
_isNotificationEmailAvailable
_isOTCliqueStatusIn
_isPasswordEditable
_isProxy
_isProxyingForApp
_isResponseSuccessful:
_isSenior
_isSilentAppTransfer
_isSilentEscrowRecordRepairEnabledForAccount:
_isSubscriptionLogin
_isTriggeredByNotification
_isUnderage
_isUsernameEditable
_isVerifyCredentialReasonEligibleForBiometricOrPasscodeAuth
_isWebLogin
_itemFromPayload:pushMessageInfo:withAltDSID:
_jsonPostbackDictionaryForCode:numberId:
_keepAlive
_key
_keyAndBundleIdAreHashed
_lastDataSyncTimestamp
_lastName
_lastUpdatedDate
_latitude
_linkType
_listener
_listenerEndpoint
_localPresenceFound
_localUserHasEmptyPassword
_localizedAppName
_localizedCallerName
_localizedStatusDescription
_lock
_loggedInServices
_loginChoice
_loginChoices
_longitude
_machineID
_machineIDs
_machineId
_makePrivateEmail
_managedOrganizationName
_managedOrganizationType
_mandatesRecoveryKey
_manifest
_manifestOptions
_mapICSCRecoveryResultsToAuthKit:
_maskingStyle
_masterKey
_masterKeyID
_matchingServiceAccountForAuthKitAccount:service:
_maxWait
_maximumLoginAttempts
_message
_model
_modelNumber
_name
_nativeAnisetteController
_needsCredentialRecovery
_needsNewAppleID
_needsNewChildAccount
_needsPasswordChange
_needsRepair
_needsSecurityUpgradeUI
_networkReachabilityDidChange
_nonce
_notificationAction
_notificationDisclaimer
_notificationEmail
_notificationFromPayload:pushMessageInfo:
_notificationToken
_notifyOfTimeout
_numberWithDialCode
_obfuscatedNumber
_observerQueue
_oneTimePassword
_openPasscodeSetup
_openSpyglass
_openUpgradeAccountSecurityLevelWithBundleID:
_operatingSystemName
_operatingSystemVersion
_operatingSystems
_operation
_originalChallenge
_orphanedBeneficiaryUUIDs
_orphanedCustodianUUIDs
_osVersion
_otherInfo
_ownerAppleID
_ownerCustodianAltDSID
_ownerDevice
_pairedDevice
_parseCustodiansInfo:
_parseHeaderTitleForPasscodeView:
_parseTrustedPhoneNumberFromResponseDictionary:
_passcodeProtected
_password
_passwordPromptTitle
_passwordRequest
_passwordResetToken
_pathMonitor
_payload
_performUIOutOfProcess
_phoneCertificate
_phoneInformation
_phoneNumber
_phoneNumberCertificate
_populateCustomStringsFromContext:
_presenceCheckPassed
_presenceFallbackApproved
_presenceMode
_presenceSID
_presentServerUISecondFactorWithConfiguration:completion:
_presentationCompletion
_presentationType
_previouslySelectedEmail
_previouslyWantedPrivateEmail
_primaryClientID
_primaryEmailAddress
_privacyBundleIdentifier
_privateAttestationEnabled
_privateEmail
_privateEmailAddress
_privateEmailBundleId
_privateEmailDomain
_privateEmailListVersion
_promptBody
_promptForBirthday
_promptForFirstName
_promptForLastName
_promptForPassword
_promptForPhoneNumber
_promptForUsername
_promptForVerificationCodeWithSecureEntry:forTrustedNumber:
_promptHeader
_promptTitle
_promptUserForSelectionWithTrustedNumbers:
_promptUserForTermsWithResponseDictionary:
_properties
_provider
_provisioningDeviceIdentifier
_proxiedAnisetteData
_proxiedAppBundleID
_proxiedAppID
_proxiedAssociatedDomains
_proxiedBundleIdentifier
_proxiedClientAppID
_proxiedClientAppName
_proxiedClientBundleID
_proxiedClientServiceID
_proxiedClientTeamID
_proxiedDevice
_proxiedDeviceAnisetteData
_proxiedDeviceAttestationData
_proxiedDeviceClass
_proxiedDeviceName
_proxiedIdentityToken
_proxiedProvisioningController
_proxyAppName
_pushMode
_pushToken
_rawAccountPassword
_reachableEmails
_realUserVerificationData
_receivedData
_recoveryContext
_recoveryContinuationURL
_recoveryController
_recoverySessionID
_recoveryStep
_registrationCompletion
_relyingPartyIdentifier
_remoteService
_removeAllRawPasswordCaches
_removeTokenKey:forAccount:
_repairState
_representingBundlePath
_request
_requestEnvironmentsWithBag:
_requestEnvironmentsWithError:
_requestFromContext:
_requestIdentifier
_requestNewURLBagIfNecessaryWithError:
_requestType
_requestedScopes
_requirePasscodeSet
_requirePassword
_requiresPasswordInput
_resolved
_resourceLoadDelegate
_responseInfo
_responseMessage
_retrieveAndResetContinuationHeaders
_retryCount
_revokeDeviceTrust
_rootPath
_routingInfo
_sanitizeCredentialIDString:
_sanitizedCopy
_scale
_secondFactorCode
_secondFactorQueue
_secondFactoryEntryCompletion
_securityCode
_securityUpgradeContext
_selectedEmail
_selectedRequest
_serialNumber
_serverExperimentalFeatures
_serverFriendlyDescription
_serverInfo
_service
_serviceID
_serviceIdentifiers
_serviceToken
_serviceTokenIdentifier
_serviceType
_serviceTypeForServiceNameString:
_services
_sessionID
_sessionQueue
_setAuthorizationHeaderWithToken:altDSID:key:
_setCurrentSharingMode
_setEncryptedSessionKey:
_setHeartbeatToken:
_setIdentityToken:
_setMasterKey:
_setMessage:
_setPassword:
_setProxiedAppBundleID:
_setProxiedAppName:
_setProxyingForApp:
_setShortLivedToken:
_setShouldUpdateToValue:
_setUsername:forAccount:
_settingsQueue
_setupBeneficiaryAliasWithInheritanceContext:completion:
_sharedService
_shortLivedToken
_shouldAllowAppleIDCreation
_shouldEnablePiggybackingPresence
_shouldForceInteractiveAuth
_shouldForcePrivateEmail
_shouldForceUI
_shouldIgnoreTeamID
_shouldIgnoreUserID
_shouldOfferSecurityUpgrade
_shouldOverrideProxiedBundleIDForContext:
_shouldPreventInteractiveAuth
_shouldPromptForPasswordOnly
_shouldRefreshAccountAndUpdateContext
_shouldRequestRecoveryPET
_shouldRequestShortLivedToken
_shouldSendAbsintheHeader
_shouldSendEphemeralAuthHeader
_shouldSendGrandSlamTokensForRemoteUI
_shouldSendICSCIntentHeader
_shouldSendIdentityTokenForRemoteUI
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendPhoneNumber
_shouldSendSigningHeaders
_shouldShowAlertForManagedAccount:error:
_shouldSkipAuthorizationUI
_shouldSkipBiometrics
_shouldSkipInitialReachabilityCheck
_shouldSkipSettingsLaunchAlert
_shouldUpdateBackingColor
_shouldUpdateColor
_shouldUpdateCoverGlassColor
_shouldUpdateEnclosureColor
_shouldUpdateHousingColor
_shouldUpdateLocale
_shouldUpdateMLBSerialNumber
_shouldUpdateModelNumber
_shouldUpdatePersistentServiceTokens
_shouldUpdateProvisioningDeviceIdentifier
_shouldUpdateROMAddress
_shouldUpdateServerFriendlyDescription
_shouldUpdateUniqueDeviceIdentifier
_shouldUseProxiedClientBundleIDForSRP
_showAlertForAccountNotSupportedWithCompletion:
_showAlertForCannotFindServerWithCompletion:
_showAlertForInsufficientSecurityLevelWithError:completionHandler:
_showAlertForInvalidContextWithCompletion:
_showAlertForManagedAccount:error:withCompletion:
_showAlertForMissingAppleAccountWithCompletion:
_showAlertForPasscodeSetupWithCompletion:
_showAlertForUnderageAccount:withCompletion:
_showAlertForUnverifiedEmailWithCompletion:
_signInAllowsPCSKeyAccess
_signRequest:
_signRequestWithBAAHeaders:
_signWithFeatureOptInHeaders:
_signWithProxiedDeviceHeaders:
_signature
_signerLock
_signingQueue
_site
_start
_startAuthControllerWithRequest:context:
_startListeningForSecondFactorCodeEntryNotification
_startPathMonitor
_started
_state
_stopListeningForSecondFactorCodeEntryNotification
_stopPathMonitor
_stringValue
_supportsMasterKeyRecovery
_supportsPiggybacking
_supportsPresence
_systemVersionDictionary
_targetDevice
_tasksByIdentifier
_teams
_telephonyClient
_termsAccepted
_timestamp
_title
_tokenWithName:forAccount:error:
_transactionID
_transactionId
_transferState
_triggerSilentTTRFor:
_trusted
_txnid
_typeFromString:
_uiProvider
_unfairLock
_uniqueDeviceIdentifier
_unsafe_retryTaskIfPossible:
_updateWithValuesFromContext:
_upgradeBundleIdentifier
_urlAtKey:
_urlBagCache
_urlBagFromCache:altDSID:withError:
_urlBagFromCache:withError:
_urlSession
_useAlternativeKeysIcon
_user
_userInfo
_userInformation
_userSelection
_username
_usesAppleIDContext
_utility
_uuid
_validCloudPartition:
_verificationType
_verifyCredentialReason
_verifySecondFactorCodeWithRequest:completion:
_vettedPrimaryEmail
_volumeGroupUUID
_waitForReply
_waitForReplyTimeout
_weakReceiver
_webAccessEnabled
_webSessionID
_webSessionIdentifier
_whitelistedPathURLs
_windowTitle
_wrappedKeyString
_wrappingKeyData
_wrappingKeyString
_xmlUIRequestForURL:withPostbackDictionary:
_xmlUIRequestForURL:withServerInfo:
_xpcConnection
aaData
abbreviation
absintheSessionURL
absintheSignatureForData:completion:
absoluteString
absoluteURLWithString:
accessKey
accessibleBundleInformation
accountAliases
accountEligibleForUpdate
accountName
accountNamesForAltDSID:
accountNamesForAltDSID:completion:
accountPropertyForKey:
accountRecoveryControllerWithPresentingViewController:
accountTypeForTypeIdentifier:
accountTypeWithAccountTypeIdentifier:error:
accountsUsingService:
accountsWithAccountType:
accountsWithAccountType:options:error:
acsURL
actionWithTitle:andActionKey:
activate
activeIDSPeerDevice
activeLoginCode:
activeServiceNamesForAccount:
addEntriesFromDictionary:
addFollowUpItems:error:
addNetworkReachableObserver:selector:
addObject:
additionalInfo
additionalInfoForAccount:
ageOfMajority
ageOfMajorityForAccount:
akAction
ak_SHA256
ak_SHA256Data
ak_acceptedTermsInfo
ak_addAbsintheHeaderWithValue:
ak_addAcceptedSLAHeaderWithVersion:
ak_addAnisetteHeaders
ak_addAppProvidedContext:
ak_addAppleIDHeaderWithValue:
ak_addAppleIDUserModeHeaderWithValue:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addAuthorizationHeaderWithServiceToken:forAltDSID:
ak_addCDPStatusHeaderForAltDSID:
ak_addCFUHeader:
ak_addCircleStatusHeader
ak_addCircleStatusHeaderForCircleStatus:
ak_addClientApp:
ak_addClientBundleIDHeader:
ak_addClientInfoHeader
ak_addClientTimeHeader
ak_addCompanionClientInfoHeader:
ak_addContextHeaderForServiceType:
ak_addContinutationKeyHeader:
ak_addCountryHeader
ak_addDataCenterHeaderWithIdentifier:
ak_addDeviceConfigurationModeHeader
ak_addDeviceConfigurationModeHeaderForAuthContext:
ak_addDeviceMLBHeader
ak_addDeviceModeHeader
ak_addDeviceModel
ak_addDeviceROMHeader
ak_addDeviceSerialNumberHeader
ak_addDeviceUDIDHeader
ak_addEphemeralAuthHeader
ak_addExecutionModeHeader:
ak_addExperimentModeHeader
ak_addFeatureMaskHeader
ak_addFidoRecoveryTokenHeader:
ak_addGuardianAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithIdentityToken:heartbeatToken:serviceToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithServiceToken:forAltDSID:
ak_addICSCIntentHeader
ak_addICSCRecoveryHeaderWithIdentityToken:forAltDSID:
ak_addInternalBuildHeader
ak_addJSONRequestHeader
ak_addLocalUserHasAppleIDLoginHeader
ak_addLocalUserUUIDHashHeader
ak_addLocaleHeader
ak_addLoggedInServicesHeaderForServices:
ak_addOfferSecurityUpgrade:
ak_addPRKRequestHeader
ak_addPasswordResetKeyHeader:
ak_addPhoneInformationHeaderWithValue:
ak_addPhoneNumberCertificateHeaderWithValue:
ak_addPhoneNumberHeader
ak_addPrivateEmailAppBundleIdHeader:
ak_addPrivateEmailAppNameHeader:
ak_addProvisioningUDIDHeader
ak_addProxiedAnisetteHeaders:
ak_addProxiedAttestationHeaders:
ak_addProxiedAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addProxiedBundleIDHeader:
ak_addProxiedClientInfoHeader:
ak_addProxiedDeviceCountryHeader:
ak_addProxiedDeviceICSCIntentHeader
ak_addProxiedDevicePRKRequestHeader
ak_addProxiedDeviceSerialNumberHeader:
ak_addProxiedDeviceUDIDHeader:
ak_addReAuthenticationHeader
ak_addRecoveryHeaderWithIdentityToken:forAltDSID:
ak_addRequestContextHeader:
ak_addRequestUUIDHeader:
ak_addSKUCountryHeader
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
ak_addShowWarranty
ak_addTimeZoneHeaders
ak_addURLSwitchingHeaderWithURLKey:altDSID:
ak_addWalrusDeviceRegionHeader
ak_addWalrusStatusHeader
ak_anisetteHeadersWithCompanionData:
ak_anisetteHeadersWithData:
ak_arrayWithJSONResponseData:
ak_arrayWithResponseData:
ak_booleanAsInteger
ak_clientInfoHeader
ak_clientTimeHeader
ak_compressedData:
ak_context
ak_dataWithBase64UrlEncodedString:
ak_deviceUDIDHeader
ak_dictionaryWithResponseData:
ak_errorByAppendingUserInfo:
ak_errorWithCode:
ak_errorWithCode:underlyingError:
ak_errorWithCode:userInfo:
ak_filter:
ak_firstObjectMatchingFilter:
ak_hexString
ak_isAuthenticationError
ak_isAuthenticationErrorWithCode:
ak_isBoolean
ak_isEmailAddress
ak_isIncompatibleDevicesError
ak_isServiceError
ak_isSurrogateAuthAlreadyInProgressError
ak_isUnableToPromptError
ak_isUserCancelError
ak_isUserInitiatedError
ak_isUserSkippedError
ak_isUserTryAgainError
ak_jsonDictionaryWithResponseData:
ak_mapObjects:
ak_mapObjectsNullable:
ak_proxiedAnisetteHeadersWithData:
ak_proxiedClientInfoHeadersWithDevice:
ak_proxiedHeadersForDevice:anisetteData:
ak_safeBase64String
ak_serverFriendlyString
ak_setBodyWithParameters:
ak_setContext:
ak_setJSONBodyWithParameters:
ak_stringByZeroPaddingOccurencesOfString:
ak_stringForEncodedHeaderWithKey:
ak_timeZoneHeader
ak_truncatedCopy
ak_urlEncoded
ak_urlQueryString
ak_usesHTTPSScheme
ak_uuidData
ak_valueForEncodedHeaderWithKey:
ak_wrappedAnisetteError:
alertHandlerShowAlert:primaryAction:altAction:
aliasesForAccount:
allAuthKitAccounts
allHTTPHeaderFields
allObjects
allPages
allValues
allocWithZone:
altDSIDForAccount:
altDSIDforPrimaryiCloudAccount
alternativeButtonString
alwaysShowUsernameField
anisetteDataForURLRequest:completion:
anisetteDataForURLRequest:error:
anisetteDataProvider
anisetteDataWithCompletion:
anisetteDataWithError:
anonymousListener
anticipateEscrowAttempt
appID
appIconForBundleID:size:completion:
appProvidedContext
appendData:
appendFormat:
appleIDAccountType
appleIDAccountWithAltDSID:
appleIDAccountWithAppleID:
appleIDAuth
appleIDAuthorizationURLs
appleIDCountryCode
appleIDCountryCodeForAccount:
appleIDHeadersForRequest:
appleIDSecurityLevel
appleOwnedDomains
applicationProxyForIdentifier:
apps
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
artworkDictionary
associatedDomains
attestationDataForDevice:withRequest:completion:
attestationDataForRequest:completion:
attestationHeaders
attestationsData
attributes
authCompletion
authContext
authKitAccountForSilentServiceToken:
authKitAccountType
authKitAccountWithAltDSID:
authKitAccountWithAppleID:
authKitAccountWithDSID:
authMode
authenticateWithContext:completion:
authenticationController
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
authenticationMethod
authenticationMode
authenticationModeForAccount:
authenticationPromptStyle
authenticationRequestFinishedWithResults:password:additionalData:error:
authenticationType
authenticatorData
authkitAccount
authorizationCode
authorizationController:didCompleteWithAuthorization:
authorizationController:didCompleteWithCustomMethod:
authorizationController:didCompleteWithError:
authorizationRequest
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationUsedForAccount:
authorizedAppListVersion
authorizedApplicationsListVersion
authorizedRequest
authorizedScopes
autorelease
autoupdatingCurrentLocale
baaSignaturesForData:completion:
backingColor
backingColorCode
bagForAltDSID:
bagForProfile:profileVersion:
bagProvider
bagSubProfile
bagSubProfileVersion
bagUrlKey
basicAuthURL
beginAuthenticationDataTaskWithRequest:completionHandler:
beginAuthorizationWithContext:completion:
beginDataTaskWithRequest:completionHandler:
beginDate
beneficiaryAccountName
beneficiaryAltDSID
beneficiaryContacts
beneficiaryFirstName
beneficiaryID
beneficiaryIdentifier
beneficiaryLastName
beneficiaryListVersion
beneficiaryListVersionForAccount:
beneficiaryOperationsByID
beneficiaryPassword
beneficiarySetupToken
beneficiaryUUIDs
birthday
boolValue
buildDidStartServerAuthorizationMessage
buildDidTapNotificationMessage
buildFetchAppIconMessage
buildFetchAppIconReplyWithImageData:imageScale:
buildLoginCodeNotificationOptionsWithTitle:body:footer:loginCode:
buildLoginCodeNotificationWithTitle:body:footer:loginCode:
buildNumber
buildReauthenticationContextFromContext:error:
bundleDescription
bundleID
bundleIconName
bundleIdentifier
bundleName
bundleType
bundleWithIdentifier:
bytes
cachedConfig
callerIconBundlePath
canBeBeneficiary
canBeBeneficiaryForAccount:
canBeCustodian
canBeCustodianForAccount:
canEvaluatePolicy:error:
canHaveBeneficiary
canHaveBeneficiaryForAccount:
canHaveCustodian
canHaveCustodianForAccount:
canOpenApplication:reason:
canPerformAuthorization
canPerformAuthorizationRequest:error:
canPerformCredentialRequest:error:
canPerformPasswordRequest:error:
canPerformRequestWithAccount:error:
cancel
cancelAuthorizationWithContext:completion:
cancelButtonString
canceledOrCompleted
caseInsensitiveCompare:
cdpAccountIsOTEnabledForAltDSID:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:verifyMasterKey:completion:
cdpErrorDomain
cdpIDMSRecordMIDKey
cdpIDMSRecordPRKKey
cdpStateUIController
cdpUIControllerWithPresentingViewController:
cdp_isCDPErrorWithCode:
cellularDataAttributionAppBundleID
challenge
changePasswordURL
characterAtIndex:
checkInURL
checkSecurityUpgradeEligibilityForContext:completion:
circleStep
circleURL
claimTokenData
claimTokenString
class
clearNotificationsForItem:error:
clearPendingFollowUpItems:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
clearSessionCacheWithCompletion:
clientAppBundleId
clientAppName
clientBundleID
clientData
clientID
clientInfo
clientShouldHandleAlternativeButtonAction
code
color
colorCode
combinedAliasesAndReachableEmailsForAccount:
companionDeviceAnisetteData
compare:
compare:options:range:
completionHandler
componentsJoinedByString:
componentsSeparatedByString:
componentsWithString:
componentsWithURL:resolvingAgainstBaseURL:
configurationAtKey:
configurationAtKey:fromCache:
configurationInfoURL
configurationInfoWithIdentifiers:forAltDSID:completion:
configurationValueForKey:
configureExportedInterface:
configureRemoteInterface:
conformsToProtocol:
connection
contactKeyVerificationIneligibleDevicesURL
contextEligibleForBiometricOrPasscodeAuth
contextEligibleForSilentAuth
contextEligibleForSilentAuthCoercion
contextForStateRepair
contextRequestingReauthForExistingService
contextWithAuthResults:
continuationHeaderPrefix
continuationToken
continuationTokenForAccount:
continuationTokenForAccount:error:
continueAuthorizationWithContext:completion:
continueFetchingIconForRequestContext:completion:
continueFetchingIconWithCompletion:
continuityIDMSData
controller
controllerWithTargetWebAccessStatus:
copy
copyWithZone:
correspondingApplicationRecord
count
countByEnumeratingWithState:objects:count:
countryCode
coverGlassColorCode
createAndExecuteRequestForPath:requestBody:httpMethod:configuration:completion:
createAppleID
createAppleIDURL
createChildAccountURL
createCredentialAssertionRequestWithChallenge:
createCredentialRegistrationRequestWithChallenge:displayName:name:userID:
creationDate
credential
credentialForAccount:error:
credentialID
credentialItemForKey:
credentialName
credentialRequestContext
credentialRequests
credentialStateDidChange:completion:
credentialStateDidChange:forApplicationWithClientID:
credentials
currentConnection
currentDevice
currentDeviceAuthenticationModeForAuthContext:
currentLocale
custodianCodeConfiguration
custodianContacts
custodianEnabled
custodianEnabledForAccount:
custodianInfos
custodianInfosForAccount:
custodianLastModified
custodianLastModifiedForAccount:
custodianListVersion
custodianOperationsByID
custodianRecoveryToken
custodianSetupToken
custodianSyncAction
custodianUUID
custodianUUIDs
data
dataCenterIdentifier
dataRecoveryServiceDisableURL
dataRecoveryServiceEnableURL
dataTaskWithRequest:
dataUsingEncoding:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
date
dateFormatter
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
deallocHandler
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodedRecoveryIdentityTokenString
decodedRecoveryPETString
decorateWithContext:
decorateWithPrivateEmailContext:
defaultButtonString
defaultSessionConfiguration
defaultSessionObjectWithConfiguration:
defaultWorkspace
delegate
deleteAuthorizationDatabase:
deleteAuthorizationDatabaseWithCompletion:
deleteAuthorizedAppURL
deletePrivateEmailDatabaseWithCompletion:
demoAccountForAccount:
dependentAltDSID
description
desiredInternalTokens
deviceClass
deviceColor
deviceEnclosureColor
deviceListURL
deviceName
deviceRegionRequired
deviceSpecificLocalizedStringWithKey:
deviceSpecificLocalizedStringWithKey:inTable:
deviceTrustRevokedForAccount:
deviceWithSerializedData:
dictionary
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dismissAlert:
dismissBasicLoginUIForContext:completion:
dismissBasicLoginUIWithCompletion:
dismissKeepUsingUIForContext:withCompletion:
dismissKeepUsingUIWithCompletion:
dismissNativeRecoveryUIForContext:completion:
dismissNativeRecoveryUIWithCompletion:
dismissSecondFactorUIForContext:completion:
dismissSecondFactorUIWithCompletion:
dismissServerProvidedUIForContext:completion:
dismissServerProvidedUIWithCompletion:
displayImageData
displayName
displayString
displayStyle
displayTitle
domain
doubleValue
dsid
enclosureColor
enclosureColorCode
encodeBool:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedRecoveryIdentityToken
encodedRecoveryPET
encryptedPRKC
encryptedSessionKey
endProvisioningURL
endpoint
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
eraseAnisetteForContext:withCompletion:
eraseAnisetteForDevice:completion:
eraseAnisetteWithCompletion:
eraseWithCompletion:
error
errorFromServerResponseBody:
errorWithDomain:code:userInfo:
escapeHatchURL
establishConnectionWithNotificationHandlerEndpoint:completion:
establishConnectionWithStateBroadcastHandlerEndpoint:completion:
evaluatePolicy:options:error:
evaluateWithObject:
exceptionWithName:reason:userInfo:
existingStatus
expirationDate
expiryDate
exportedObject
extensionIdentifier
extensionItemWithAppleIDAuthenticationContext:
externalizedVersion
externalizedVersionString
failWithError:
familyName
familyNameForAccount:
featureStatus
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
fetchAnisetteDataAndProvisionIfNecessary:error:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
fetchAppListWithAltDSID:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
fetchAuthModeWithContext:completion:
fetchAuthenticationModeURL
fetchAuthorizedAppListWithContext:error:
fetchCliqueStatus:error:
fetchConfigDataURL
fetchCustodianDataRecoveryKeyWithContext:completion:
fetchCustodianRecoveryCodeConfigurationWithCompletion:
fetchCustodianRecoveryTokenWithContext:completion:
fetchDeviceListWithContext:completion:
fetchDeviceListWithContext:error:
fetchDeviceMapWithContext:completion:
fetchFollowUps
fetchGlobalConfigURL
fetchGlobalConfigUsingCachePolicy:completion:
fetchGlobalConfigurationUsingPolicy:completion:
fetchManifestOptionsWithInheritanceContext:completion:
fetchPeerAttestationDataForContext:withRequest:completion:
fetchPeerAttestationDataForRequest:completion:
fetchPrimaryApplicationInformationForWebServiceWithInfo:completion:
fetchPrimaryBundleIDURL
fetchPrivateEmailForAltDSID:withKey:completion:
fetchPrivateEmailWithContext:completion:
fetchURLBagForAltDSID:completion:
fetchURLBagFromCache:altDSID:completion:
fetchUserInfoURL
fetchUserInformationForAltDSID:completion:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
finalizeCustodianSetupWithContext:completion:
finishFidoAuthURL
finishFidoRecoveryAuthURL
firstName
firstObject
followUpController
followUpRepairContext
followupItems
followupProvider
forceSilentEscrowRecordRepairEnabled
forceURLBagUpdateForAltDSID:urlSwitchData:completion:
forceUpdateBagWithUrlSwitchData:completion:
formattedUsernameForAccount:
formattedUsernameFromUsername:
forwardingEmailForAccount:
forwardingTargetForSelector:
frequency
generateLoginCodeWithCompletion:
generatedCode
getContextForRequestContext:completion:
getCredentialStateForClientID:completion:
getCredentialStateForRequest:completion:
getCurrentDataSubscriptionContextSync:
getMobileSubscriberHomeCountryList:error:
getPresentationContextForRequestContext:completion:
getServerUILoadDelegateForAltDSID:completion:
getServerUILoadDelegateWithContext:completion:
getSubscriptionInfoWithError:
getUUIDBytes:
getUserDefaultVoiceSubscriptionContext:
getUserInformationForAltDSID:completion:
getUserInformationWithContext:completion:
getValue:size:
getWalrusConfigWithCompletion:
givenName
givenNameForAccount:
goldilocksIncompatibleDevicesURL
groupKitEligibility
groupKitEligibilityForAccount:
handleResponse:forRequest:shouldRetry:
handleResponseError:
hasEmptyPassword
hasEmptyPasswordOverride
hasMDM
hasMDMForAccount:
hasPrefix:
hasPrimaryiCloudAccountForAltDSID:
hasPrimaryiCloudAccountForAppleID:
hasSuffix:
hasUniqueDeviceIdentifier
hasUsedAuthorization
hash
hashedWrappingKeyRKC
hearbeatTokenForAccount:
hearbeatTokenForAccount:error:
heartbeatToken
heartbeatTokenValue
helpAnchor
helpBook
hideAlternativeButton
hideCancelButton
hideReasonString
host
housingColor
housingColorCode
httpHeadersForRemoteUI
iCloudAccountForAltDSID:
iCloudAccountForAppleID:
iCloudAccountType
iForgotContinuationURL
iForgotURL
iTunesMetadata
iconData
iconName
iconScale
identifier
identityToken
identityTokenValue
idmsData
idmsMasterKeyRecovery
inCircle
includeFamilyDevices
includeUntrustedDevices
incorrectKeyPresentedMessage
indexOfObjectPassingTest:
infoDictionary
inheritanceConfiguration
init
initForDevice:provider:
initWithAddress:forKey:
initWithAddress:forKey:withBundleId:
initWithAlgorithm:
initWithAltDSID:
initWithAltDSID:identityToken:
initWithAppleID:altDSID:
initWithAuthenticationContext:
initWithAuthenticationController:
initWithAuthenticationResults:
initWithAuthenticatorData:challengeString:relyingPartyIdentifier:signature:clientData:credentialID:userIdentifier:
initWithAuthenticatorDataString:challengeString:relyingPartyIdentifier:signature:clientDataString:credentialID:userIdentifier:
initWithAuthorizationRequests:
initWithBase64EncodedString:options:
initWithBlock:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleIdentifier:bundleName:bundleDescription:bundleType:otherInfo:
initWithBundleInformation:manifestOptions:
initWithCString:encoding:
initWithCapacity:
initWithChallenge:relyingPartyIdentifier:userIdentifier:displayName:credentialName:credentials:
initWithChallengeString:attestationsData:credentialID:clientData:relyingPartyIdentifier:credentialName:userIdentifier:
initWithChallengeString:attestationsDataString:credentialIDString:clientDataString:relyingPartyIdentifier:credentialName:userIdentifier:
initWithChallengeString:relyingPartyIdentifier:userIdentifierString:displayName:credentialName:credentials:
initWithClientIdentifier:
initWithCoder:
initWithContext:
initWithContext:bundleID:
initWithContext:client:
initWithContext:uiProvider:
initWithContextData:
initWithCredentialID:transports:
initWithDaemonXPCEndpoint:
initWithData:encoding:
initWithData:options:documentAttributes:error:
initWithDictionary:
initWithExternalizedContext:
initWithFLFollowupController:
initWithFollowUpFactory:provider:
initWithFormat:arguments:
initWithIdentifier:
initWithIdentifier:daemonXPCEndpoint:
initWithInfo:
initWithInfo:responder:
initWithInterface:weakObject:
initWithJSONDictionary:
initWithKey:
initWithKey:altDSID:
initWithKey:altDSID:clientAppBundleId:
initWithListenerEndpoint:
initWithListenerEndpoint:exportedInterface:
initWithLocaleIdentifier:
initWithMachServiceName:options:
initWithMaxWait:description:
initWithMemoryCapacity:diskCapacity:directoryURL:
initWithName:value:
initWithOwnerAltDSID:
initWithParameters:
initWithPresentingViewController:
initWithProvider:
initWithProxiedClientContext:
initWithQueue:
initWithReceiver:strong:
initWithRemoteServiceConfig:delegate:
initWithRequest:
initWithRequest:requestType:
initWithResponseBody:
initWithResponseInfo:
initWithServerResponse:
initWithServiceName:remoteProtocol:exportedProtocol:options:
initWithServiceName:remoteProtocol:options:
initWithStrongReceiver:
initWithSurrogateID:
initWithType:clientIdentifier:clientVersion:bag:
initWithURL:
initWithUUID:status:
initWithUUIDString:
initWithUpgradeContext:
initWithUser:password:
initWithUser:site:
initWithUsername:
initWithVerificationType:
initWithWeakReceiver:
initWithWebSessionID:expiryDate:userInfo:
initWithWebSessionIdentifier:expiryDate:userInfo:
initWithXML:baseURL:delegate:
initWithXPCSession:
initialURLKey
initialURLRequestKey
initiateCustodianSetupWithContext:completion:
inlineFlowSupportedConfig
intValue
integerValue
interfaceWithProtocol:
internalAuthKitAccount
internalFeaturesMaskValue
internalQueue
internationalMobileEquipmentIdentity
internationalMobileEquipmentIdentity2
interruptionHandler
invalidate
invalidationHandler
invocationWithMethodSignature:
invoke
isAcceptingPayload
isAccountsFrameworkAvailable
isAppleIDAuthorization
isAppleIDLoginEnabled
isAuthenticationRequired:
isBaaEnabledForKey:
isBeneficiaryForAccount:
isBiometricAuthCapable
isBiometricIDCapable
isContextEligibleForBiometricOrPasscodeAuth
isContextEligibleForSilentAuth
isContextEligibleForSilentAuthCoercion
isContextRequestingReauthForExistingService
isContinuityPush
isCreateAppleIDAllowedWithCompletion:
isCustodianSyncAction
isDevicePasscodeProtected:
isEligibleForUpgradeFromPassword
isEphemeral
isEqual:
isEqualToData:
isEqualToDictionary:
isEqualToString:
isFidoForAccount:
isFidoUserCancelError:
isFirstTimeLogin
isICDPEnabledForDSID:
isInCircle
isInRestrictedSharingMode
isKindOfClass:
isLikelyRealUser
isLisbonAvailable
isManagedAppleID
isManagedAppleIDForAccount:
isMemberOfClass:
isNetworkReachable
isNotificationEmailAvailable
isNotificationEmailAvailableForAccount:
isOTEnabledForContext:
isPasscodeSet
isPhoneNumberSupportedConfig
isPrimaryiCloudAccount:
isPrimaryiCloudAccountEmailVerified:
isProtectedWithPasscode
isRapportLogin
isRecoverableError:
isRequestingPayload
isResponseActionable:
isResponseCompleteAndConflict:
isResponseFinal:
isResponseFinalForHSA2ServerFlow:
isSenior
isSettingsInlineLogoViewDisabled
isSilentEscrowRecordRepairEnabledForAccount:
isTriggeredByNotification
isURLFromAppleOwnedDomain:
isUnderage
isUnlocked
isUsernameEditable
isValidCertificateTrust:forHostname:
isValidJSONObject:
isWebAccessEnabled
itemIdentifier
itemIdentifiersRequiringNotificationClearFromPayload:
itemName
itemsForAltDSID:pushMessageInfo:fromIDMSPayload:
jsonDictionaryForData:error:
keyAndBundleIdAreHashed
keyEnumerator
keyForEscapeHatchURL
label
lastDataSyncTimestamp
lastKnownIDMSEnvironment
lastName
lastObject
lastRetryError
latitude
launchOutOfProcessAuthentication:surrogateID:withErrorHandler:
legacyAnisetteDataForContext:DSID:withCompletion:
legacyAnisetteDataForDSID:device:completion:
legacyAnisetteDataForDSID:withCompletion:
length
linkType
listAllPrivateEmailsForAltDSID:completion:
listener:shouldAcceptNewConnection:
listenerEndpoint
localPresenceFound
localTimeZone
localUserUUID
locale
localeIdentifier
localizedAppName
localizedCallerName
localizedDescription
localizedFailureReason
localizedName
localizedStatusDescription
localizedStringForKey:value:table:
lock
loggedInServices
loginChoice
loginChoices
longLongValue
longitude
looksLikeiForgotURLKey:
lookupPrivateEmailForAltDSID:withKey:completion:
lookupPrivateEmailWithContext:completion:
machineID
machineIDs
machineId
mainBundle
makePrivateEmail
managedOrganizationName
managedOrganizationNameForAccount:
managedOrganizationType
managedOrganizationTypeForAccount:
mandatesRecoveryKey
manifest
maskingStyle
masterKeyID
masterTokenForAccount:
maximumLoginAttempts
methodSignatureForSelector:
mobileEquipmentIdentifier
model
modelNumber
mostRecentlyUsedAuthKitAccount
mutableCopy
mutableJSONRequestForPath:
mutableJSONRequestForURL:
name
navTitle
needsCredentialRecovery
needsNewChildAccount
needsPasswordChange
needsRepair
needsRepairForAccount:
needsSecurityUpgradeUI
nonce
notification
notificationAckURL
notificationAction
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
notificationDisclaimer
notificationEmail
notificationEmailForAccount:
number
numberWithDialCode
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
obfuscatedNumber
objCType
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
openApplication:withOptions:completion:
openSensitiveURL:withOptions:
operatingSystemName
operatingSystemVersion
operatingSystems
operation
optionsWithDictionary:
origin
originalChallenge
orphanedBeneficiaryUUIDs
orphanedCustodianUUIDs
otherInfo
ownerAppleID
ownerCustodianAltDSID
ownerDevice
pairedDevice
parsableRepresentation
passcodeViewOM
password
passwordResetToken
passwordResetTokenBackupForAccount:
passwordResetTokenBackupForAccount:error:
passwordResetTokenForAccount:
passwordResetTokenForAccount:error:
path
payloadWithMessage:
payloadWithResponseData:forCircleStep:
pendingAuthKitFollowUpPayload:
pendingFollowUpItems:
performAuthenticationRequestWithContext:completion:
performAuthorization:completion:
performAuthorizationWithContext:completion:
performAuthorizationWithContext:withUserProvidedInformation:completion:
performCheckInForAccountWithAltDSID:completion:
performCircleRequestWithContext:completion:
performRecovery:
performRegistrationRequestWithContext:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTrustedContactsDataSync:completion:
performWithinPersonaForAccount:withBlock:
persistMasterKeyVerifier:context:completion:
persistMasterKeyVerifier:withContext:completion:
personaIDIfCurrentPersonaIsDataSeparated
phoneAsAppleID
phoneAsAppleIDForAccount:
phoneBundleInfoWithAdditionalInfo:error:
phoneCertificate
phoneInformation
phoneNumber
phoneNumberCertificate
phoneNumberSupportedConfig
piggybackingAcceptorSupportsPresence
piggybackingIDMSFallbackApproved
piggybackingIDMSPresenceOverride
piggybackingLocalPresenceOverride
piggybackingPresenceMode
piggybackingRequestorPresenceSID
piggybackingRequestorUsesPresence
port
postBodyForiCSCServerUIResponseWithContext:recoveryError:
postFollowUpItem:error:
postWalrusStateUpdateToServerWithContext:urlBagKey:username:password:completion:
predicateWithFormat:
presenceCheckPassed
presenceFallbackApproved
presenceMode
presenceSID
presentAlertWithDictionary:completion:
presentAuthorizationUIForContext:completion:
presentBasicLoginUIForContext:completion:
presentBasicLoginUIWithCompletion:
presentBiometricOrPasscodeValidationForAppleID:completion:
presentBiometricOrPasscodeValidationForContext:completion:
presentFidoAuthForContext:fidoContext:completion:
presentKeepUsingUIForAppleID:completion:
presentKeepUsingUIForContext:appleID:completion:
presentLoginAlertWithError:title:message:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
presentNativeRecoveryUIWithCompletion:
presentNativeRecoveryUIWithContext:completion:
presentOOPLoginUIWithContext:completion:
presentPrivateEmailUIForContext:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentSecondFactorAlertWithError:title:message:completion:
presentSecondFactorUIForContext:completion:
presentSecondFactorUIWithCompletion:
presentServerProvidedUIWithConfiguration:completion:
presentationAnchorForAuthorizationController:
presentationCompletion
presentationContextForRequestContext:client:
presentationType
previouslySelectedEmail
previouslyWantedPrivateEmail
primaryAlert
primaryApplicationInformationForWebServiceWithInfo:error:
primaryAuthKitAccount
primaryEmailAddress
primaryEmailAddressForAccount:
primaryiCloudAccount
privacyBundleIdentifier
privacyRepairURL
privateAttestationEnabled
privateAttestationEnabledForAccount:
privateEmail
privateEmailAddress
privateEmailBundleId
privateEmailDomain
privateEmailFetchCompletedWith:error:completion:
privateEmailListVersion
privateEmailListVersionWithCompletion:
privateEmailManageURL
processResponse:
promptBody
promptHeader
promptTitle
propertyListWithData:options:format:error:
provisionAnisetteForContext:withCompletion:
provisionAnisetteForDevice:completion:
provisionAnisetteWithCompletion:
provisionWithCompletion:
provisioningDeviceIdentifier
proxiedAltDSID
proxiedAppID
proxiedAppName
proxiedBundleIdentifier
proxiedDevice
proxiedDeviceAnisetteData
proxiedDeviceAttestationData
proxiedIdentityToken
proxyAppName
pushMode
pushToken
query
raise:format:
rawAccountPassword
rawAttestationObject
rawAuthenticatorData
rawClientDataJSON
reachableEmailAddressesForAccount:
realUserVerificationData
reason
reauthenticateWithContext:completion:
reauthenticateWithContext:completionWithResults:
receivedData
recoveryContextWithServerInfo:
recoveryContinuationURL
recoveryControllerWithContext:
recoverySessionID
recoveryStep
registerContext:
registerPrivateEmailForAltDSID:withKey:completion:
registrationCompletion
relevantHTTPStatusCodes
relyingPartyIdentifier
remoteListener
remoteObjectProxyWithErrorHandler:
remoteService
remoteServiceDidInterrupt
remoteServiceDidInvalidate
remoteServiceProxyWithErrorHandler:
removeAccount:withCompletionHandler:
removeAllCachedResponses
removeAllFollowUpItems:
removeAllObjects
removeAllPCSAuthCredentialWithCompletion:
removeAllPasswordResetTokens
removeBeneficiaryWithInheritanceContext:completion:
removeContinuationTokenForAccount:
removeFollowUpItems:error:
removeFollowUpItemsWithIdentifiers:error:
removeMasterTokenForAccount:
removeObject:
removeObjectForKey:
removePrivateEmailKey:completion:
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
renewRecoveryTokenURL
renewRecoveryTokenWithContext:completion:
repairState
repairStateForAccount:
repairURL
replyPayload
reportSignOutForAllAppleIDsWithCompletion:
reportSignOutForAppleID:service:completion:
representingBundlePath
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
requestIdentifier
requestNewURLBagIfNecessaryWithCompletion:
requestNewURLBagIfNecessaryWithError:
requestOptions
requestType
requestedCloudPartition
resolved
resourceLoadDelegate
resourceURL
respondsToSelector:
response
responseDataItems
responseInfo
resume
retain
retainCount
retryCount
revokeAuthorizationForApplicationWithClientID:completion:
revokeAuthorizationForApplicationWithClientID:error:
revokeAuthorizationWithContext:completion:
revokeCustodianWithContext:completion:
revokeUpgradeWithContext:completion:
rootPath
routingInfo
sanitiseInternalState
saveAccount:error:
saveAccount:withCompletionHandler:
saveVerifiedAccount:error:
scale
scheme
scopes
secondFactorCode
secondsFromGMT
securityCode
securityLevelForAccount:
securityUpgradeContext
securityUpgradeServiceNames
selectedAuthorizationEmailForAccount:
selectedEmail
self
sendEmbargoEndNotificationFeedbackWithContext:urlKey:completion:
sensitiveAuthenticationKeys
sensitiveTokenKeys
serialNumber
serializedData
serverExperimentalFeatures
serverExperimentalFeaturesForAccount:
serverFriendlyDescription
serverInfo
serverProvidedData
serverTrust
serviceID
serviceIdentifier
serviceIdentifiers
serviceToken
serviceTokenIdentifier
serviceTokens
serviceType
services
servicesUsingAccount:
sessionKey
sessionWithConfiguration:delegate:delegateQueue:
setAaData:
setAccessKey:
setAccessKeyString:
setAccount:inUse:byService:
setAccountAliases:
setAccountProperty:forKey:
setActions:
setActivateAction:
setAdditionalInfo:
setAdditionalInfo:forAccount:
setAdditionalPlatforms:
setAgeOfMajority:
setAgeOfMajority:forAccount:
setAkAction:
setAliases:forAccount:
setAllowedCredentials:
setAltDSID:
setAltDSID:forAccount:
setAlternativeButtonString:
setAlwaysShowUsernameField:
setAnisetteDataProvider:
setAnticipateEscrowAttempt:
setAppID:
setAppName:
setAppProvidedContext:
setAppProvidedData:
setAppleID:
setAppleIDCountryCode:
setAppleIDCountryCode:forAccount:
setAppleIDLoginEnabled:
setAppleIDSecurityLevel:
setAppleIDWithAltDSID:inUse:forService:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:
setAppleIDWithDSID:inUse:forService:completion:
setApps:
setArgument:atIndex:
setAssociatedDomains:
setAttestationHeaders:
setAttestationPreference:
setAuthCompletion:
setAuthMode:
setAuthProvider:
setAuthenticationController:
setAuthenticationMode:
setAuthenticationMode:forAccount:
setAuthenticationPromptStyle:
setAuthenticationType:
setAuthkitAccount:
setAuthorizationRequest:
setAuthorizationUsed:forAccount:
setAuthorizedApplicationsListVersion:
setAuthorizedRequest:
setBackingColor:
setBagUrlKey:
setBeginDate:
setBeneficiary:forAccount:
setBeneficiaryAccountName:
setBeneficiaryAltDSID:
setBeneficiaryContacts:
setBeneficiaryFirstName:
setBeneficiaryIdentifier:
setBeneficiaryLastName:
setBeneficiaryListVersion:
setBeneficiaryListVersion:forAccount:
setBeneficiaryOperationsByID:
setBeneficiaryPassword:
setBeneficiarySetupToken:
setBeneficiaryUUIDs:
setBirthday:
setBundleID:
setBundleIconName:
setBundleIdentifiers:
setByAddingObject:
setByAddingObjectsFromArray:
setCallerIconBundlePath:
setCanBeBeneficiary:
setCanBeCustodian:
setCanBeCustodian:forAccount:
setCanHaveBeneficiary:
setCanHaveBeneficiary:forAccount:
setCanHaveCustodian:
setCancelButtonString:
setCanceledOrCompleted:
setCellularDataAttributionAppBundleID:
setCircleStep:
setClaimTokenData:
setClaimTokenString:
setClass:forSelector:argumentIndex:ofReply:
setClasses:forSelector:argumentIndex:ofReply:
setCliMode:
setClientAppBundleId:
setClientAppName:
setClientBundleID:
setClientErrorCode:
setClientID:
setClientInfo:
setClientShouldHandleAlternativeButtonAction:
setColor:
setCompanionDevice:
setCompletion:
setCompletionHandler:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
setConfigurationValue:forKey:
setContext:
setContinuationToken:
setContinuityIDMSData:
setController:
setCoverGlassColor:
setCreateAppleID:
setCredential:
setCredentialItem:forKey:
setCredentialParameters:
setCredentialRequestContext:
setCredentialRequests:
setCustodianContacts:
setCustodianEnabled:
setCustodianInfos:
setCustodianInfos:forAccount:
setCustodianLastModified:
setCustodianLastModified:forAccount:
setCustodianListVersion:
setCustodianListVersion:forAccount:
setCustodianOperationsByID:
setCustodianRecoveryToken:
setCustodianSetupToken:
setCustodianSyncAction:
setCustodianUUID:
setCustodianUUIDs:
setDSID:
setDSID:forAccount:
setData:
setDataCenterIdentifier:
setDateFormat:
setDateStyle:
setDeallocHandler:
setDefaultButtonString:
setDelegate:
setDemoAccount:forAccount:
setDependentAltDSID:
setDesiredInternalTokens:
setDeviceEnclosureColor:
setDeviceName:
setDeviceRegionRequired:
setDeviceTrustRevoked:forAccount:
setDisplayImageData:
setDisplayString:
setDisplayStyle:
setDisplayTitle:
setDsid:
setEnclosureColor:
setEncodedRecoveryIdentityToken:
setEncodedRecoveryPET:
setEncryptedPRKC:
setExcludedCredentials:
setExistingStatus:
setExportedInterface:
setExportedObject:
setExtensionIdentifier:
setFamilyName:
setFamilyName:forAccount:
setFeatureStatus:
setFido:forAccount:
setFirstName:
setFirstNotificationDelay:
setFirstTimeLogin:
setFollowupItems:
setFollowupProvider:
setForceSilentAuth:
setForceSilentEscrowRecordRepairEnabled:
setForwardingEmail:
setForwardingEmail:forAccount:
setFrequency:
setGeneratedCode:
setGivenName:
setGivenName:forAccount:
setGroupIdentifier:
setGroupKitEligibility:
setGroupKitEligibility:forAccount:
setGuestMode:
setHTTPBody:
setHTTPMethod:
setHasEmptyPassword:
setHasEmptyPasswordOverride:
setHasMDM:
setHasMDM:forAccount:
setHasUsedAuthorization:
setHashedWrappingKeyRKC:
setHeartbeatToken:
setHeartbeatTokenValue:
setHelpAnchor:
setHelpBook:
setHideAlternativeButton:
setHideCancelButton:
setHideReasonString:
setHousingColor:
setHttpHeadersForRemoteUI:
setIdentifier:
setIdentityToken:
setIdentityTokenValue:
setIdmsData:
setIdmsMasterKeyRecovery:
setIdmsRecovery:
setIncludeFamilyDevices:
setIncludeUntrustedDevices:
setIncludedResultKeys:
setIncorrectKeyPresentedMessage:
setInformativeText:
setInitialURLKey:
setInitialURLRequestKey:
setInternalQueue:
setInternalWrapper:
setInterruptionHandler:
setInvalidationHandler:
setIsContinuityPush:
setIsEligibleForUpgradeFromPassword:
setIsLegacyStudent:
setIsLikelyRealUser:
setIsNotificationEmailAvailable:
setIsNotificationEmailAvailable:forAccount:
setIsProxy:
setIsRapportLogin:
setIsSenior:
setIsUnderage:
setIsUsernameEditable:
setItemIdentifier:
setKeyAndBundleIdAreHashed:
setLabel:
setLastDataSyncTimestamp:
setLastKnownIDMSEnvironment:
setLastKnownLocale:
setLastName:
setLastRetryError:
setLatitude:
setLinkType:
setLocalPresenceFound:
setLocale:
setLocalizedAppName:
setLocalizedCallerName:
setLocalizedStatusDescription:
setLoggedInServices:
setLoginChoices:
setLongitude:
setMLBSerialNumber:
setMachineID:
setMakePrivateEmail:
setManagedOrganizationName:
setManagedOrganizationName:forAccount:
setManagedOrganizationType:
setManagedOrganizationType:forAccount:
setMandatesRecoveryKey:
setManifest:
setMaskingStyle:
setMaxWait:
setMaximumLoginAttempts:
setName:
setNeedsCredentialRecovery:
setNeedsNewAppleID:
setNeedsNewChildAccount:
setNeedsPasswordChange:
setNeedsSecurityUpgradeUI:
setNonce:
setNotification:
setNotificationAction:
setNotificationDisclaimer:
setNotificationEmail:
setNotificationEmail:forAccount:
setNumber:
setNumberWithDialCode:
setObfuscatedNumber:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setObject:forSetting:
setOneTimePassword:
setOperatingSystems:
setOptions:
setOrigin:
setOrphanedBeneficiaryUUIDs:
setOrphanedCustodianUUIDs:
setOverride:forKey:
setOwnerAppleID:
setOwnerCustodianAltDSID:
setPairedDevice:
setPasswordEquivToken:
setPasswordRequest:
setPasswordResetToken:
setPath:
setPayload:
setPhoneAsAppleID:
setPhoneAsAppleID:forAccount:
setPhoneCertificate:
setPhoneInformation:
setPhoneNumberCertificate:
setPiggybackingIDMSPresenceOverride:
setPiggybackingLocalPresenceOverride:
setPresenceCheckPassed:
setPresenceFallbackApproved:
setPresenceMode:
setPresentationCompletion:
setPresentationType:
setPreviouslySelectedEmail:
setPreviouslyWantedPrivateEmail:
setPrimaryClientID:
setPrimaryEmailAddress:
setPrimaryEmailAddress:forAccount:
setPrivacyBundleIdentifier:
setPrivateAttestationEnabled:
setPrivateAttestationEnabled:forAccount:
setPrivateEmail:
setPrivateEmailBundleId:
setPrivateEmailDomain:
setPrivateEmailListVersion:
setPromptBody:
setPromptHeader:
setProvisioningDeviceIdentifier:
setProxiedAltDSID:
setProxiedAppID:
setProxiedAppName:
setProxiedAssociatedDomains:
setProxiedBundleIdentifier:
setProxiedDevice:
setProxiedDeviceAnisetteData:
setProxiedDeviceAttestationData:
setProxiedIdentityToken:
setProxyAppName:
setProxySheetHeaderOverride:
setProxySheetNoCredentialsErrorMessageOverride:
setProxySheetSubtitleOverride:
setProxySheetTitleOverride:
setPushMode:
setPushToken:
setQueryItems:
setROMAddress:
setRawAccountPassword:
setReachableEmailAddresses:forAccount:
setReachableEmails:
setRealUserVerificationData:
setReason:
setReceivedData:
setRecoveryContinuationURL:
setRecoverySessionID:
setRecoveryStep:
setRegistrationCompletion:
setRemoteListener:
setRemoteObjectInterface:
setRemoteService:
setRepairState:forAccount:
setRepresentingBundlePath:
setRequest:
setRequestCachePolicy:
setRequestIdentifier:
setRequestOptions:
setRequestedCloudPartition:
setRequestedScopes:
setResidentKeyPreference:
setResolved:
setResourceLoadDelegate:
setResponseInfo:
setResponseMessage:
setRetryCount:
setScale:
setScopes:
setSecondFactorCode:
setSecurityCode:
setSecurityLevel:forAccount:
setSecurityUpgradeContext:
setSelectedAuthorizationEmail:forAccount:
setSelectedEmail:
setSelectedPrivateEmail:forAccount:
setSelectedRequest:
setSelector:
setServerExperimentalFeatures:
setServerExperimentalFeatures:forAccount:
setServerFriendlyDescription:
setServerInfo:
setServiceID:
setServiceIdentifier:
setServiceIdentifiers:
setServiceToken:
setServiceTokenIdentifier:
setServices:
setShouldAddHSA2CreateHeader:
setShouldAllowAppleIDCreation:
setShouldAllowDemoMode:
setShouldAllowPhoneNumberAccounts:
setShouldAllowTestApplication:
setShouldAlwaysShowWelcome:
setShouldAutocycleAppsInTiburon:
setShouldAutocycleAppsInWebTakeover:
setShouldBypassCustodianDeviceCheck:
setShouldDisablePiggybacking:
setShouldEnableBeneficiaryLiveOn:
setShouldEnablePiggybackingPresence:
setShouldFakeAuthSuccess:
setShouldForceInteractiveAuth:
setShouldHandleInvalidation:
setShouldHideInternalBuildHeader:
setShouldIgnoreTeamID:
setShouldIgnoreUserID:
setShouldOfferSecurityUpgrade:
setShouldPreventInteractiveAuth:
setShouldRequestConfigurationInfo:
setShouldRequestRecoveryPET:
setShouldRequestShortLivedToken:
setShouldSendAbsintheHeader:
setShouldSendEphemeralAuthHeader:
setShouldSendICSCIntentHeader:
setShouldSendLocalUserHasAppleIDLoginHeader:
setShouldSendPhoneNumber:
setShouldSendSigningHeaders:
setShouldSkipAuthorizationUI:
setShouldSkipSettingsLaunchAlert:
setShouldSuppressHSA2Suggestions:
setShouldSuppressModalSheetsInMacBuddy:
setShouldUpdatePersistentServiceTokens:
setSignInAllowsPCSKeyAccess:
setSilentEscrowRecordRepairEnabled:
setSilentEscrowRecordRepairEnabled:forAccount:
setSite:
setSlotID:
setState:
setStatus:
setStore:
setSupportsMasterKeyRecovery:
setSupportsPiggybacking:
setSupportsPresence:
setTarget:
setTargetDevice:
setTeamID:
setTermsAccepted:
setTimeStyle:
setTimeZone:
setTimeoutIntervalForResource:
setTitle:
setTransactionID:
setTransactionId:
setTransferState:
setTriggeredByNotification:
setTxnid:
setURLCache:
setUiProvider:
setUnderlyingQueue:
setUnderlyingTask:
setUniqueDeviceIdentifier:
setUniqueIdentifier:
setUseAlternativeKeysIcon:
setUseAlternativeSecurityKeysIcon:
setUseCachedAccountStatus:
setUser:
setUserID:
setUserIdentifier:
setUserInfo:
setUserInformation:
setUserIsSenior:forAccount:
setUserSelection:
setUserUnderage:forAccount:
setUsername:
setUuid:
setValue:
setValue:forHTTPHeaderField:
setValueCondition:
setVerifiedPrimaryEmail:forAccount:
setVerifyCredentialReason:
setVettedPrimaryEmail:
setWaitForReply:
setWaitForReplyTimeout:
setWaitsForConnectivity:
setWebAccessEnabled:
setWhitelistedPathURLs:
setWithArray:
setWrappedKeyData:
setWrappedKeyString:
setWrappingKeyData:
setWrappingKeyRKC:
setWrappingKeyString:
setXpcConnection:
set_allowsVirtualInterfaces:
set_appleIDContext:
set_attemptIndex:
set_authController:
set_callerBundleID:
set_cliMode:
set_clientAuthenticatedExternallyWithPassword:
set_clientShouldAuthenticateExternally:
set_continuationRequestIdentifier:
set_externalAuthToken:
set_externalLocalAuthData:
set_forceEligibleForForegroundAuthentication:
set_iconData:
set_iconName:
set_iconScale:
set_iconSize:
set_informativeText:
set_isFirstPartyLogin:
set_isPasswordEditable:
set_isRapportLogin:
set_isSilentAppTransfer:
set_keepAlive:
set_notifyOfTimeout:
set_passwordPromptTitle:
set_performUIOutOfProcess:
set_proxiedAssociatedDomains:
set_proxiedClientAppID:
set_proxiedClientAppName:
set_proxiedClientBundleID:
set_proxiedClientServiceID:
set_proxiedClientTeamID:
set_proxiedDeviceClass:
set_proxiedDeviceName:
set_requirePassword:
set_sessionID:
set_shouldForcePrivateEmail:
set_shouldForceUI:
set_shouldSendGrandSlamTokensForRemoteUI:
set_shouldSendIdentityTokenForRemoteUI:
set_shouldSkipAuthorizationUI:
set_shouldSkipBiometrics:
set_shouldSkipInitialReachabilityCheck:
set_shouldUseProxiedClientBundleIDForSRP:
set_usesAppleIDContext:
settingsInlineLogoViewDisabled
setupBeneficiaryWithInheritanceContext:completion:
sharedAnisetteFreeURLSession
sharedAuthKitFollowupProvider
sharedBag
sharedCacheEnabledAnisetteFreeSession
sharedCacheEnabledURLSession
sharedCacheReliantAnisetteFreeSession
sharedConfiguration
sharedConnection
sharedController
sharedEmailForManagedAppleID
sharedInstance
sharedManager
sharedNetworkObserver
sharedSigner
sharedURLSession
sharedURLSessionWithDenyVirtualInterfaces
shouldAddHSA2CreateHeader
shouldAllowAppleIDCreation
shouldAllowDemoMode
shouldAllowExperimentalMode
shouldAllowPhoneNumberAccounts
shouldAllowTestApplication
shouldAlwaysShowWelcome
shouldAutocycleAppsInTiburon
shouldAutocycleAppsInWebTakeover
shouldBypassCustodianDeviceCheck
shouldCapturePromptBugForContext:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
shouldContinueWithResponse:error:
shouldCreateAppleID
shouldDenyRequestForURL:task:
shouldDisablePiggybacking
shouldEnableBeneficiaryLiveOn
shouldEnablePiggybackingPresence
shouldEnableTestAccountMode
shouldFakeAuthSuccess
shouldForceInteractiveAuth
shouldHandleInvalidation
shouldHideInternalBuildHeader
shouldIgnoreTeamID
shouldIgnoreUserID
shouldOfferSecurityUpgrade
shouldPerformSatoriWarmupVerificationForAccount:
shouldPreventInteractiveAuth
shouldProcessURL:
shouldPromptForPasswordOnly
shouldRequestConfigurationInfo
shouldRequestPiggybackingPresenceEnforcement
shouldRequestRecoveryPET
shouldRequestShortLivedToken
shouldSendAbsintheHeader
shouldSendEphemeralAuthHeader
shouldSendICSCIntentHeader
shouldSendLocalUserHasAppleIDLoginHeader
shouldSendPhoneNumber
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
shouldSendSigningHeaders
shouldSkipAuthorizationUI
shouldSkipSettingsLaunchAlert
shouldSuppressHSA2Suggestions
shouldSuppressModalSheetsInMacBuddy
shouldSynchronizeForAccount:
shouldUpdatePersistentServiceTokens
showAlert:primaryAction:altAction:
showAlert:primaryAction:altAction:cancelAction:
showAlertForError:withAuthKitAccount:withCompletion:
showAlertForError:withCompletion:
signInAllowsPCSKeyAccess
signRequest:
signRequest:withCompletionHandler:
signRequestWithBasicHeaders:
signRequestWithCommonHeaders:
signWithBAAHeaders:completion:
signal
signalFromServerResponse:
signature
signatureForData:options:completion:
signatureForURLRequest:
signatureForURLRequest:completionHandler:
signaturesForData:options:completion:
signingController
signingHeadersForRequest:completion:
site
slotID
standardUserDefaults
start
startCoordinatingBlock:
startCustodianRecoveryRequestWithContext:completion:
startCustodianRecoveryTransactionWithContext:completion:
startDiscoveryWithCompletion:
startFidoAuthURL
startFidoRecoveryAuthURL
startProvisioningURL
startServiceWithNotificationHandler:
startServiceWithStateBroadcastHandler:
startWithNotificationHandler:completion:
startWithStateBroadcastHandler:completion:
state
stateControllerWithContext:
status
statusCode
store
storeAuthorization:forProxiedRequest:completion:
storeModernRecoveryURL
string
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByTrimmingCharactersInSet:
stringValue
stringWithFormat:
stringWithUTF8String:
subscriptions
subscriptionsInUse
substringFromIndex:
substringToIndex:
superclass
supportsMasterKeyRecovery
supportsPiggybacking
supportsPresence
supportsSecureCoding
syncAnisetteForContext:withSIMData:completion:
syncAnisetteWithSIMData:completion:
syncAnisetteWithSIMData:device:completion:
syncWithSIMData:completion:
synchronizeFollowUpItemsForContext:completion:
synchronizeFollowUpItemsForContext:error:
synchronizeFollowUpsForAccount:inStore:error:
synchronizeFollowUpsWithServerPayload:altDSID:error:
synchronousRemoteObjectProxyWithErrorHandler:
systemContainerCacheURL
systemContainerURL
targetDevice
taskIdentifier
teamID
teams
teardownFollowUpWithContext:completion:
termsAccepted
timeIntervalSinceDate:
timeZoneForSecondsFromGMT:
timestamp
title
token
tokenDictionaryKeys
tokenWithBase64String:
tokenWithDictionary:
tokenWithExternalizedVersion:lifetime:
tokenWithExternalizedVersionString:
tokenWithValue:lifetime:
transactionID
transactionId
transferState
transportableAuthKitAccount:
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
trustedDevicesSummaryURL
trustedDevicesURL
txnid
typeOfMessage:
uiObjectModel
uiProvider
unarchivedObjectOfClass:fromData:error:
underlyingErrors
underlyingTask
uniqueDeviceIdentifier
uniqueIdentifier
unlock
unregisterContext:
unsafe_invalidate
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
updateAuthModeTimestampForAccount:
updateBeneficiaryWithInheritanceContext:completion:
updateCustodianRecoveryKeyWithContext:completion:
updateSatoriWarmUpTimestampForAccount:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
updateSynchronizeTimeForAccount:inStore:
updateSynchronizeTimeNoSaveForAccount:
updateUserInformationForAltDSID:userInformation:completion:
updateUsername:forAccountsWithAltDSID:
updateVerifiedEmail:forAccountWithAltDSID:
updateWithAuthResults:
updateWithHTTPURLResponse:
upgradeBundleIdentifier
upgradeEligibilityCheckURL
upgradeUIURL
urlAtKey:
urlBagFromCache:altDSID:error:
useAlternativeKeysIcon
user
userChosenName
userFullName
userID
userIdentifier
userInfo
userInfoFromAccount:
userInfoFromContext:
userIsSeniorForAccount:
userSelection
userUnderAgeForAccount:
userVerificationURL
username
usesTouchID
uuid
valid
validateExternalizedContext:error:
validateLoginCode:forAppleID:completion:
validateLoginCode:forAppleID:withCompletion:
validateVettingToken:forAltDSID:completion:
validateVettingTokenURL
value
valueCondition
valueForHTTPHeaderField:
valueForKey:
valueWithNonretainedObject:
verificationType
verifyCredentialReason
verifyEnableWalrusAllowedWithContext:completion:
verifyMasterKey:context:completion:
verifyMasterKey:withContext:completion:
versionOfAcceptedAgreement
vettedPrimaryEmail
wait
waitForReply
waitForReplyTimeout
waitUntilDate:
walrusCountryAnchorKBURL
walrusKBURL
walrusStatus
walrusStatus:
walrusStatusFuture
warmUpVerificationSessionWithCompletion:
webAccessChangeControllerForTargetStatus:
webAccessDisableURL
webAccessEnableURL
webAccessEnabled
webAccessEnabledForAccount:
webAccessKBURL
webAccessStatus:
webAccessStatusFuture
webSessionID
webSessionIdentifier
whitelistedPathURLs
whitespaceCharacterSet
windowTitle
wrappedKeyData
wrappedKeyString
wrappingKeyRKC
wrappingKeyString
xpcConnection
zone
B32@0:8@16^@24
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@"NSString"16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
v20@0:8B16
v24@0:8@?16
v40@0:8@16@24@?32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKCustodianSetupResult"@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"AKCustodianContext"16@?<v@?B@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"AKCustodianContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKTrustedContactsSyncResult"@"NSError">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@?16@0:8
@"NSXPCInterface"
@"NSXPCListener"
@28@0:8@16B24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8@16B24q28
@32@0:8@16^@24
B24@0:8^@16
v32@0:8Q16@?24
v48@0:8@16@24@32@?40
v40@0:8Q16@24@?32
Vv32@0:8@16@?24
v40@0:8@16q24@?32
@24@0:8^@16
@36@0:8B16@20^@28
@"NSXPCListenerEndpoint"
@"AKAppleIDAuthenticationContextManager"
@"NSLock"
@"NSData"
v24@0:8Q16
@"NSURLRequest"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
@20@0:8B16
v32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@32@0:8@16@?24
@"NSURLSession"
@"NSMutableDictionary"
v32@0:8@"ASAuthorizationController"16@"ASAuthorization"24
v32@0:8@"ASAuthorizationController"16@"NSError"24
v32@0:8@"ASAuthorizationController"16@"NSString"24
@"<AKFidoUIProvider>"
@"ASAuthorizationController"
@"AKFidoContext"
q16@0:8
v24@0:8q16
@"NSArray"
@"NSUUID"
v32@0:8q16@24
v32@0:8q16@"NSString"24
q24@0:8@16
@24@0:8q16
@"NSDictionary"
v32@0:8@"AKInheritanceContext"16@?<v@?@"AKBeneficiaryManifest"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"NSError">24
v32@0:8@"AKInheritanceCLIContext"16@?<v@?@"AKBeneficiaryAliasSetupResult"@"NSError">24
v24@0:8@"NSXPCInterface"16
@"NSObject"16@0:8
@"AAFXPCSession"
v24@0:8@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">40
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"AKServerRequestConfiguration"16@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKFidoContext"24@?<v@?@"AKFidoAuthenticationResponse"@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8@16B24@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSData"24@?<v@?B@"NSError">32
v36@0:8@"AKAppleIDAuthenticationContext"16B24@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">48
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSNumber"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSNumber"@"NSError">48
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKServerRequestConfiguration"24@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSUUID"24@?<v@?@"NSError">32
v48@0:8@"NSDictionary"16@"NSError"24@"NSUUID"32@?<v@?B@"NSDictionary">40
@"AKAppleIDAuthenticationController"
@"<AKAppleIDAuthenticationDelegate>"
@24@0:8@?16
Q24@0:8@16
@"NSDate"
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"AKDevice"16@0:8
v24@0:8@"AKDevice"16
@"AKDevice"
@"<AKCredentialRequestProtocol>"
@"AKAuthorizationScopesUserSelection"
@"NSNumber"
@40@0:8@16@24@32
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
@"CDPRecoveryController"
@"AKAccountRecoveryContext"
@"<CDPStateUIProvider>"
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKAuthorization"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSData"@"NSError">16
@"CoreTelephonyClient"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
d16@0:8
v24@0:8d16
@"NSValue"
@"AKAuthorizationUpgradeContext"
@"AKAuthorizationRequest"
@"AKPasswordRequest"
@"AKUserInformation"
v48@0:8@16@24@32@40
B24@0:8q16
@"AKBeneficiaryManifest"
@"AKInheritanceAccessKey"
{CGSize=dd}16@0:8
@48@0:8@16{CGSize=dd}24@40
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationUserResponse"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSError">24
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"AKAuthorizationRevokeUpgradeContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v40@0:8@"AKAuthorization"16@"AKCredentialRequestContext"24@?<v@?B@"NSError">32
B32@0:8^{__SecTrust=}16@24
v28@0:8B16@20
v32@0:8Q16@24
@40@0:8@16@24^@32
B32@0:8@16q24
@32@0:8@16q24
@"ACAccountStore"
@"ACAccountType"
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPrivateEmail"@"NSError">32
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmail"@"NSError">24
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmailContext"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
@"AKPrivateEmailClientImpl"
@20@0:8i16
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSError"40
@24@0:8Q16
@"AKAnisetteProvisioningController"
@"AKAppleIDAuthenticationContext"
@"<AKAnisetteServiceProtocol>"
@"AKAnisetteData"
@"AKAttestationData"
v40@0:8@"AKPrivateEmail"16@"NSError"24@?<v@?B@"NSError">32
@32@0:8@16Q24
@"AKPushMessage"
@28@0:8B16^@20
@"<AKURLBagDictionaryProvider>"
@"NSArray"40@0:8@"NSString"16@"NSDictionary"24@"NSArray"32
@"NSArray"24@0:8@"NSArray"16
B24@0:8@"FLFollowUpItem"16
@"NSURL"
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
@"NSDateFormatter"
@72@0:8@16@24@32@40@48@56@64
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPCSAuthContext"@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"AKWalrusContext"16@?<v@?@"NSError">24
v56@0:8@"AKWalrusContext"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
@48@0:8@16@24@32@40
@"<AKAlertHandlerUIProvider>"
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary">40
@"NSSet"16@0:8
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary"@"NSURLRequest">40
v40@0:8@16@24^B32
@32@0:8d16@24
@"NSCondition"
@"NSMutableArray"
@"NSArray"24@0:8^@16
B32@0:8@"NSArray"16^@24
B32@0:8@"FLFollowUpItem"16^@24
@"FLFollowUpController"
@32@0:8q16@24
@"<AKCredential>"
@"NSObject<OS_dispatch_group>"
@"AKCircleRequestPayload"
@64@0:8@16@24@32@40@48@56
@"<AKAuthorizationUIProvider>"
v36@0:8B16@20@?28
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
B48@0:8@16@24@32@40
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
B40@0:8@16@24^@32
@"<AKFollowUpProvider>"
@"AKCredentialRequestContext"
v32@0:8@16:24
@"NSObject<OS_nw_path_monitor>"
@"AKAppleIDServerResourceLoadDelegate"
@"<AKFollowUpItemFactory>"
@"AKAuthorizationDaemonConnection"
@"ACAccount"
@"AKAppleIDAuthenticationContext"32@0:8@"AKAppleIDAuthenticationContext"16^@24
@"<AKAuthorizationClientProtocol>"
@"NSUUID"16@0:8
@"AKWalrusConfig"
@"AKAdaptiveService"
@"NSLocale"
v28@0:8B16@?20
^{__CFUserNotification=}48@0:8@16@24@32@40
v48@0:8@16q24@32@?40
@32@0:8@16B24B28
@28@0:8B16@20
@"AKCommandLineUtilities"
@24@0:8@"NSString"16
^{__CFUserNotification=}
@"NSSet"
v44@0:8@16B24q28@?36
Vv24@0:8@?16
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKUserInformation"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v40@0:8@"NSString"16@"AKUserInformation"24@?<v@?B@"NSError">32
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v32@0:8Q16@?<v@?B@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError">16
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSDictionary"@"NSError">28
v32@0:8Q16@?<v@?@"NSDictionary"@"NSError">24
@"<AKPrivateEmailUIProvider>"
@"AKCustodianDaemonConnection"
@56@0:8@16@24@32Q40@48
@"AKAuthorizationClientImpl"
@(#)PROGRAM:AuthKit  PROJECT:AuthKit-1
com.apple.Carousel.authAlertXPCService
alertTitle
alertMessage
alertIdentifier
defaultButtonTitle
alternateButtonTitle
otherButtonTitle
alertResponse
alertSupplementViewID
alertSupplementViewData
overWriteExistingAlert
systemSoundIDKey
textFieldDescription
textFieldIsSecure
textFieldInputType
textFieldLength
textFieldValue
textFieldContentType
com.apple.AuthKit.AKSecondFactorCodeView
com.apple.AuthKit.AKLocationSignInView
com.apple.AuthKit.AKAuthorize
_transactionID
_bundleID
_teamID
v8@?0
com.apple.AuthKit.alertRequestQueue
v16@?0@"NSError"8
v24@?0@"NSDictionary"8@"NSError"16
_userID
_clientID
_altDSID
com.apple.authkit
com.apple.ak.custodian.xpc
AKExtensionItemContext
com.apple.AuthKitUI.AKLocationSignInAlert
com.apple.AuthKitUI.AKSecondFactorAlert
com.apple.AuthKitUI.AKSecondFactorEntryAlert
/System/Library/Frameworks/SetupAssistant.framework/SetupAssistant
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
/AppleInternal/Library/Frameworks/SetupAssistant.framework/SetupAssistant
BYLicenseAgreement
Unable to find class %s
_appID
_appName
_nonce
_serviceID
_state
AKPassword
AKRawPassword
AKIDMSToken
token
AKDSID
AKAltDSID
AKRememberPassword
AKIsHSA2
AKSecurityLevel
AKAuthenticationMode
AKIsUnderage
AKIsLegacyStudent
AKDidPerformInteractive
AKNewAppleIDSetupInfo
AKMasterKeyID
AKDidShowServerUI
AKAcceptedTerms
AKManagedAppleID
AKAuditLogin
AKFirstName
AKLastName
AKImageURL
AKShortLivedToken
AKIdentityToken
AKCustodianSetupToken
AKIsServerUIRequired
AKInheritanceBeneficiarySetupToken
GsIdmsToken
AKInheritanceBeneficiaryIdentifier
AKInheritanceBeneficiaryWrappedKey
AKIsPasscodeResetRequired
AKConfigurationInfo
AKDuplexSession
AKCircleContext
AKRepairState
AKCustodianRecoverySessionID
AKAppleIDEmailsDidChangeNotification
com.apple.authkit.user-info-changed
altDSID
security-level
auth-mode
AKDidPerformBiometric
AKDidPerformPasscode
managedOrganizationType
managedOrganizationName
isNotificationEmailAvailable
notificationEmail
primaryEmailVetted
firstName
lastName
reachableEmails
forwardTo
authorizedAppListVersion
previouslySelectedAsPrivateEmail
previouslySelectedEmail
AKDemoAccount
AKAdditionalInfo
AKAppleIDAuthenticationControllerXPCLock
-[AKAppleIDAuthenticationController authenticateWithContext:completion:] requires a non-nil value for the context parameter.
v20@?0B8@"NSError"12
v24@?0@"AKUserInformation"8@"NSError"16
v24@?0Q8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
(null)
v24@?0@"NSNumber"8@"NSError"16
v24@?0@"AKCircleRequestPayload"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
-[AKAppleIDAuthenticationController clearSessionCacheWithCompletion:]_block_invoke_2
_encryptedPRKC
_ownerCustodianAltDSID
<%@: %p {
encryptedPRKC: %@...
ownerCustodianAltDSID: %@
<%@: %p, _underlylingTask: %@>
AuthKitURLSession
com.apple.authkit.url
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
icloud.com
@32@?0@"NSString"8Q16^B24
 not
scopes
client_id
credential_state
transfer_state
primary_client_id
origin
transferred
expired
<%@:%p> clientID: %@, scopes: %@, state:%li, transferState:%@, primaryClientID:%@, origin:%@
_beneficiaryID
_wrappingKeyData
_wrappingKeyString
_wrappedKeyData
_wrappedKeyString
_claimTokenData
_claimTokenString
Access code for beneficiary %@
core
traffic
query
signpost
aaa-itriage
userInteraction
fido
siwa
com.apple.ak.puffin.xpc
BundleID
IconData
IconScale
type
DidTapNotification
DidStartServerAuthorization
FetchAppIcon
FetchAppIconReply
StartProgressAnimation
Unknown
_attestationHeaders
%@ %@
com.apple.ak.inheritance.xpc
v24@?0@"AKBeneficiaryManifest"8@"NSError"16
-[AKInheritanceController fetchManifestOptionsWithInheritanceContext:completion:]_block_invoke_2
-[AKInheritanceController setupBeneficiaryWithInheritanceContext:completion:]_block_invoke_2
-[AKInheritanceController updateBeneficiaryWithInheritanceContext:completion:]_block_invoke_2
-[AKInheritanceController removeBeneficiaryWithInheritanceContext:completion:]_block_invoke_2
v24@?0@"AKBeneficiaryAliasSetupResult"8@"NSError"16
-[AKInheritanceController _setupBeneficiaryAliasWithInheritanceContext:completion:]_block_invoke_2
AKContextManagerQueue
v20@?0B8@"NSDictionary"12
v12@?0B8
-[AKAppleIDAuthenticationContextManager provisionAnisetteForContext:withCompletion:]
-[AKAppleIDAuthenticationContextManager syncAnisetteForContext:withSIMData:completion:]
-[AKAppleIDAuthenticationContextManager eraseAnisetteForContext:withCompletion:]
-[AKAppleIDAuthenticationContextManager fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[AKAppleIDAuthenticationContextManager legacyAnisetteDataForContext:DSID:withCompletion:]
-[AKAppleIDAuthenticationContextManager fetchPeerAttestationDataForContext:withRequest:completion:]
com.apple.gs.
(cag).
%@...
(******)
v32@?0@"NSString"8@16^B24
@32@?0@8@16^B24
v32@?0@8@16^B24
com.apple.authkit.trusted-device-list-changed
mids
_custodianUUID
_wrappingKeyRKC
_ownerAppleID
_custodianSetupToken
_pushToken
_recoverySessionID
_custodianRecoveryToken
_aaData
_idmsData
_recoveryStep
_ownerDevice
_errorCode
_cliMode
_notificationAction
_custodianUUIDs
_beneficiaryUUIDs
_lastDataSyncTimestamp
_custodianContacts
_beneficiaryContacts
_isCustodianSyncAction
<%@: %p> with 
CustodianUUID: %@ 
altDSID: %@ 
OwnerAppleID: %@ 
ownerCustodianAltDSID: %@ 
wrappingKeyRKC: %@ 
pushToken: %@ 
sessionID: %@ 
custodianRecoveryToken: %@ 
recoveryStep: %@ 
cliMode: %i 
 custodianContacts: %@ 
 beneficiaryContacts: %@ 
 isCustodianSyncAction: %d
_userSelection
_loginChoice
_selectedRequest
_rawAccountPassword
<%@: %p { selectedRequest: %@, userSelection: %@, loginChoice: %@, rawPassword: %@}
(empty)
%@==
[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}
SELF MATCHES %@
POST
AKAttestationErrorDomain
AKAttestationSignerValidity
AKAttestationUseDeviceCheckKeychainAccess
v32@?0@"NSDictionary"8@"NSData"16@"NSError"24
v32@?0@"NSData"8@"NSData"16@"NSError"24
_akAction
_itemIdentifier
_txnid
_isContinuityPush
<%@:%p> identifier: %@, action: %@, altDSID: %@, txnid: %@
<<%@> - Web session ID: %@, Expiry: %@, User info: %@>
webSessionIdentifier
expiryDate
userInfo
number
slotID
label
dataPreferred
defaultVoice
physicalSim
inUse
PhoneCertificate
B32@?0@"CTXPCServiceSubscriptionContext"8Q16^B24
com.apple.accounts.carrierUtilities.queue
@"NSXPCConnection"8@?0
UserInitiated
ScheduledActivity
LocaleChange
true
ak-button
ak-action
X-Apple-AK-Action
X-Apple-I-Cont
AKHarvestedContinuationHeaders
start-icsc
mk-validation
continue
complete
read
cancel
delete
teardown
open
clientInfo
X-Apple-AK-Continuation-Data
X-Apple-Alternate-Id
X-Apple-DSID
X-Apple-I-88CC-99DE-EE63-2736
X-Apple-I-Experiment-Features
X-Apple-PE-Token
X-Apple-I-Account-Name
X-Apple-I-Account-NameType
phoneNumber
X-Apple-Requested-Partition
AKUsername
AKPasswordResetTokenKey
AKEmailVerificationCompletedNotificationKey
icloud
imessage
facetime
itunesstore
gamecenter
AKICSCURLKey
AKRecoveryURLKey
X-Apple-iCSC-Identity-Token
X-Apple-iCSC-PE-Token
X-Apple-Recovery-Identity-Token
X-Apple-Recovery-PE-Token
X-Apple-MK-Validation-Token
X-Apple-I-iCSC-PRK
X-Apple-I-iCSC-MD-M
X-Apple-I-ICSCREC
X-Apple-I-IdMS-Data
status
success
failure
appleid
errorCode
errorMessage
action
start_account_recovery
try_again
prs_account_nm
personID
dsid
repair-state
authmode
pakedata
idmsdata
circlestep
ptkn
atxid
RequestURL
Request
Header
prkgen
X-Apple-AK-Auth-Type
X-Apple-AK-Request-Auth-Type
HSA2
X-Apple-I-Experiment-Mode
X-Apple-I-RecoveryKey-Show
X-Apple-I-HSA1-Conversion
X-Apple-I-Test-Account-Mode
source
clear_followup_notification
continuity_push_followup_notification
AKFollowUpAltDSIDKey
AKFollowUpServerURL
AKFollowUpSafariURL
com.apple.authkit.hsa2-password-reset
verifyPrimaryEmail
AKFollowUpLocalURLKey
AKFollowUpAppleAccountRootKey
IDMSUrl
urlKey
txnid
cfudata
cfuids
items
com.apple.AuthKitUI.AKFollowUpServerUIExtension
Sign In With Apple
AKUserIdentifier
AKAuthorizedScopes
AKUserInformation
AKAuthorizationCode
AKClientBundleID
envelope.fill.badge.shield.trailinghalf.fill
faceid
touchid
key.fill
hmeListVersion
TEMPORARY
X-Apple-CR-Token
X-Apple-I-Private-Email-Address
privateEmailKey
X-Apple-I-Private-Email-Client-Bundle
AUTH_EVENT_TYPE_UNKNOWN
SRP_AUTH_FAILURE
SECOND_FACTOR_SERVER_UI
SECOND_FACTOR_PIGGYBACK_TRANSITION
SECOND_FACTOR_PIGGYBACK_FAILURE
SECOND_FACTOR_PIGGYBACK_ESCAPE_SMS_SUCCESS
SECOND_FACTOR_PIGGYBACK_ESCAPE_FAILURE
appleManagedAccountSignIn
appleIdSettings
CFBundleIconFile
CFBundleIconName
com.apple.gs.appleid.auth
com.apple.gs.idms.hb
RKMandate
isManagedAccount
localizedAppName
X-Apple-Client-App-Name
X-Apple-Proxied-App-Name
X-Apple-AK-Context-Type
X-Apple-I-Auth-Type
X-Apple-I-BC
X-Apple-I-Client-Bundle-Id
X-Apple-I-Proxied-Bundle-Id
webAccessEnabled
serverExperimentalFeatures
X-Apple-I-Device-Region-Code
silentEscrowRecordRepairEnabled
custodianInfos
custodianUuid
groupkitEligibilityInd
_authorizationRequests
_callerBundleID
_iconData
_iconName
_iconScale
_iconSize
_isFirstPartyLogin
_isRapportLogin
_isWebLogin
_localizedAppName
_passwordRequests
_proxiedAssociatedDomains
_proxiedClientAppID
_proxiedClientAppName
_proxiedClientBundleID
_proxiedServiceID
_proxiedClientTeamID
_proxiedDeviceClass
_proxiedDeviceName
_requestIdentifier
_requirePassword
_shouldForcePrivateEmail
_shoudlForceUI
_shoudlSkipBiometrics
_shoudlSkipUI
_upgradeContext
_upgradeFromPassword
_clientShouldAuthenticateExternally
_authSessionTimeout
_externalAuthToken
_externalLocalAuthData
_continuationRequestIdentifier
_requestOptions
_sessionID
_shouldUseProxiedClientBundleIDForSRP
B24@?0@"<AKCredentialRequestProtocol>"8Q16
<%@: %p> Auth Request %@ 
Password Request: %@ 
Proxied Bundle: %@
Proxied Team: %@ 
Session ID: %@
_userInformation
_makePrivateEmail
{ userInformation: %@, makePrivateEmail: %@}
X-Mme-Device-Id
X-Apple-I-Provisioning-Device-Id
X-Apple-I-Client-Time
X-Mme-Proxied-Device-Id
X-Apple-Identity-Token
X-Apple-Proxied-Identity-Token
X-Apple-GS-Token
X-Apple-SL-Token
X-Apple-I-MD
X-Apple-I-MD-M
X-Apple-I-MD-RINFO
X-Apple-I-Companion-MD
X-Apple-I-Companion-MD-M
X-Apple-I-Companion-MD-RINFO
X-Apple-I-Proxied-MD
X-Apple-I-Proxied-MD-M
X-Apple-I-Proxied-MD-RINFO
X-Apple-Ephemeral-Auth
X-Mme-Nas-Qualify
X-Apple-I-Logged-In-Services
Content-Type
X-Apple-I-CK
X-Apple-I-PRK
X-MMe-Country
X-MMe-Proxied-Country
X-Apple-I-Locale
X-Apple-I-TimeZone
X-Apple-I-TimeZone-Offset
X-MMe-Companion-Client-Info
X-MMe-Proxied-Client-Info
X-Apple-I-PRK-Gen
X-Apple-I-Proxied-PRK-Gen
X-Apple-I-Local-Login-Uses-AppleID
X-Apple-HB-Token
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Apple-I-Proxied-SRL-NO
X-Apple-I-Device-PN
X-Apple-IDS-PAC
X-Apple-I-Phone
X-Apple-iOS-SLA-Version
X-Apple-I-MD-LU
X-Apple-I-CDP-Circle-Status
X-Apple-I-OT-Status
X-Apple-I-CDP-Status
X-Mme-Show-Warranty
X-MMe-Device-Model
X-Apple-I-AppleID
X-Apple-I-DeviceUserMode
X-Apple-I-CFU-State
X-Apple-Offer-Security-Upgrade
X-Apple-I-App-Provided-Context
X-Apple-I-ReAuth
X-Apple-I-Proxied-ICSCREC
X-Apple-Test-Application
X-Apple-I-Device-Configuration-Mode
X-Apple-I-SKU-Country
X-Apple-I-DC
X-Apple-I-Exec-Mode
X-Apple-I-Request-Context
X-Apple-AK-DataRecoveryService-Status
X-Apple-I-Device-Region-Required
X-Apple-I-UrlSwitch-Info
X-Apple-I-Request-UUID
X-Apple-I-Private-Email-Domain
X-Apple-I-Private-Email-Origin
X-Apple-I-Private-Email-App-Name
X-Apple-Guardian-Identity-Token
X-Apple-Guardian-HB-Token
X-Apple-Guardian-GS-Token
X-Apple-I-Device-Mode
X-Apple-I-Fido-Recovery-Token
X-Apple-I-Recovery-Contact-Sync-Action
false
v32@?0@"NSString"8@"NSString"16^B24
%@:%@
application/json
itunes
piggybacking
RegionCode
%llu
AKFakeAuthSuccess
AKDisablePiggy
AKAddHS2CreateHeader
AKSuppressHSA2Suggestions
AKAllowPhoneNumberAccounts
AKAddExperimentalModeHeader
AKHideInternalBuildHeader
AKAddTestApplicationHeader
AKSuppressModalSheetsInMacBuddy
_AKAlwaysShowWelcome
_AKAutocycleAppsInTiburon
_AKAutocycleAppsInWebTakeOver
_AKAddTestAccountHeader
_AKAuthorizationDemoMode
_AKCloudPartition
_AKByPassCustodianDeviceCheck
_AKBeneficiaryLiveOnKey
AKForceSilentEscrowRecordRepairEnabled
AKLastIDMSEnvironment
AKLastLocale
AKShouldRequestPiggybackingPresenceEnforcement
AKOverridePiggybackingIDMSPresence
AKOverridePiggybackingLocalPresence
com.apple.authkit.config
v12@?0i8
AKConfigurationDidChangeNotification
cfgs
abs-enable
baa-interval
X-MMe-Nas-Qualify
X-MMe-Nas-E
X-Apple-Baa
X-Apple-I-Payload-Hash
X-Apple-Baa-E
X-Apple-I-Baa-S
X-Mme-Device-Id-S
X-Apple-I-Provisioning-Device-Id-S
X-MMe-Client-Info-S
X-MMe-Proxied-Nas-Qualify
X-MMe-Proxied-Nas-E
X-Apple-Proxied-Baa
X-MMe-Proxied-Client-Info-S
X-Apple-Proxied-Baa-E
com.apple.authkit.signingQ
v16@?0@"NSMutableDictionary"8
%@%@
@"NSString"32@?0@"NSString"8@"NSData"16^B24
_manifest
_accessCode
_beneficiarySetupToken
_beneficiaryIdentifier
_services
_operatingSystems
_includeUntrustedDevices
_includeFamilyDevices
<%@:%p> altDSID: %@, os: %@, services: %@, untrusted: %d, family: %d
/System/Library/Frameworks/AppleMediaServices.framework/AppleMediaServices
/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
/AppleInternal/Library/Frameworks/AppleMediaServices.framework/AppleMediaServices
AMSMediaTask
AMSBag
AMSMediaArtwork
AMSMediaArtworkFormatPNG
AMSMediaArtworkCropStyleBoundedBox
AMSMediaTaskPlatformMac
artwork
name
v24@?0@"AMSMediaResult"8@"NSError"16
attributes
platformAttributes
com.apple.ak.authorizationservices.xpc
AppleIDAuthSupportNoPinning
.GlobalPreferences
adsid
DSID
aliases
retaining-services
additionalInfo
reachableEmailAddresses
vettedPrimaryEmail
forwardingEmail
phoneAsAppleID
isUnderage
isSenior
demoAccount
ageOfMajority
appleIdSignInEnabled
privateAttestationEnabled
privateEmailSelection
authorizationEmailSelection
primaryEmail
WarmUpVerificationTimeStamp
DeviceTrustRevoked
AuthModeTimeStamp
canHaveCustodian
canBeCustodian
custodianEnabled
custodianLastModified
beneficiaryAccount
canHaveBeneficiary
canBeBeneficiary
appleIDCountryCode
hasMDM
custodianListVersion
beneficiaryListVersion
fidoAccount
AKAccountManagerQueue
v32@?0@"NSString"8Q16^B24
B24@?0@"ACAccount"8Q16
v32@?0@"ACAccount"8Q16^B24
@"NSString"32@?0@"NSNumber"8Q16^B24
AKAccountManager.groupedAccountCleanup
accountClass
primaryAccount
primary
primaryEmailVerified
appleIdAliases
@8@?0
com.apple.ak.privateemail.xpc
v24@?0@"AKPrivateEmail"8@"NSError"16
-[AKPrivateEmailController lookupPrivateEmailWithContext:completion:]_block_invoke
-[AKPrivateEmailController fetchPrivateEmailForAltDSID:withKey:completion:]_block_invoke
-[AKPrivateEmailController registerPrivateEmailForAltDSID:withKey:completion:]_block_invoke
-[AKPrivateEmailController fetchPrivateEmailWithContext:completion:]_block_invoke
v24@?0@"AKPrivateEmailContext"8@"NSError"16
-[AKPrivateEmailController getContextForRequestContext:completion:]_block_invoke
-[AKPrivateEmailController deletePrivateEmailDatabaseWithCompletion:]_block_invoke
-[AKPrivateEmailController privateEmailListVersionWithCompletion:]_block_invoke
-[AKPrivateEmailController removePrivateEmailKey:completion:]_block_invoke
-[AKPrivateEmailController listAllPrivateEmailsForAltDSID:completion:]_block_invoke
%02X
com.apple.ak.anisette.xpc
_user
_site
_appleIDAuth
_createAppleID
AKAuthorizationLoginChoice:
User: %@    Site: %@    AppleIDAuth: %@
/System/Library/Frameworks/CoreFollowUp.framework/CoreFollowUp
/System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp
/AppleInternal/Library/Frameworks/CoreFollowUp.framework/CoreFollowUp
FLFollowUpAction
FLFollowUpController
FLFollowUpItem
FLFollowUpNotification
FLGroupIdentifierAccount
FLNotificationOptionForce
FLNotificationOptionSpringboardAlert
FLNotificationOptionSpringboardAlertActionOnly
FLNotificationOptionExtensionForNotification
FLNotificationOptionExtensionActions
FLNotificationOptionBannerAlert
_accessibleBundleInformation
_manifestOptions
identifier
description
safari
_identityToken
_heartbeatToken
_shouldSendSigningHeaders
_shouldSendEphemeralAuthHeader
_serviceType
_continuationToken
_passwordResetToken
_serviceToken
_serviceTokenIdentifier
_proxiedDeviceAnisetteData
_proxiedDevice
_proxyAppName
_clientAppName
_clientBundleID
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendICSCIntentHeader
_loggedInServices
_hasEmptyPasswordOverride
_securityUpgradeContext
_shouldOfferSecurityUpgrade
_shouldSendPhoneNumber
_phoneNumberCertificate
_phoneInformation
_followupItems
_appProvidedContext
_proxiedAltDSID
_proxiedIdentityToken
v16@?0@?<v@?>8
v24@?0@"AKAnisetteData"8@"NSError"16
v24@?0@"AKAttestationData"8@"NSError"16
hsa2
X-Apple-CDP-Action
@"NSString"32@?0@"NSString"8@"NSString"16^B24
team_id
privateEmail
apps
v32@?0@8Q16^B24
<%@:%p> team: %@, user: %@, email: %@, apps: {
step
atxnid
pake
<%@:%p> transaction: %@, step: %ld, errorCode: %ld
_responseInfo
_serverInfo
_clientInfo
_transactionId
_clientErrorCode
_circleStep
_supportsPresence
_presenceSID
_presenceMode
_presenceFallbackApproved
_presenceCheckPassed
_localPresenceFound
contextKey
contextAltDSID
contextProxiedApp
contextBundleID
contextAppName
upgradeBundleID
HmeContext:{%@:%@:%@}
/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
/System/Library/PrivateFrameworks/AuthenticationServices.framework/AuthenticationServices
/AppleInternal/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
ASAuthorizationSecurityKeyPublicKeyCredentialProvider
ASAuthorizationSecurityKeyPublicKeyCredentialRegistration
ASAuthorizationPublicKeyCredentialParameters
ASAuthorizationController
ASAuthorizationSecurityKeyPublicKeyCredentialAssertion
ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor
ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports
ASAuthorizationPublicKeyCredentialResidentKeyPreferencePreferred
ASAuthorizationPublicKeyCredentialAttestationKindDirect
ASAuthorizationErrorDomain
gsService
midStartProvisioning
midFinishProvisioning
midSyncMachine
securityUpgradeEligibility
securityUpgrade
validateCode
postData
iForgot
iForgotResetNotification
createAccount
device_list_self
trustedDevices
trustedDevicesSummaryUrl
qualifyCert
qualifySession
tokenUpgrade
postConfigData
fetchConfigData
changePasswordUrl
validateVettingToken
renewRecoveryToken
circle
followUpItems
fetchUserInfo
fetchAuthorizedApps
fetchPrimaryApp
fetchAuthMode
storeModernRecoveryKey
acsURL
repair
userVerificationResult
appleIDAuthorizeHTMLResponse
secondaryAuth
createChildAccount
deleteAuthorizedApp
managePrivateEmailAddress
fetchHmeList
usePrivateEmailAddress
registerHme
privacyRepair
goldilocksIncompatibleDevices
startCustodianSetup
finishCustodianSetup
abortCustodianSetup
updateDataRecoveryKey
startCustodianRecovery
custodianRecoveryStep
custodianRecoveryValidate
fetchDataRecoveryKey
custodianRecoveryFeedback
custodianIncompatibleDevices
manageRecoveryKey
manageDataRecoveryService
accountContactDataSync
dataRecoveryServiceEnable
dataRecoveryServiceDisable
dataRecoveryServiceDisableComplete
dataRecoveryServiceEnableComplete
webAccessDisable
webAccessEnable
walrusKB
walrusCountryAnchorKB
webAccessKB
fetchGlobalConfigs
fetchBeneficiaryDataSelectionOptions
setupBeneficiary
updateBeneficiary
removeBeneficiary
createBeneficiaryAccountLiveOn
startFidoAuth
finishFidoAuth
startFidoRecoveryAuth
finishFidoRecoveryAuth
contactKeyVerificationIneligibleDevices
urls
apsEnv
iForgotAppleIdLocked
idmsEnv
is-phone-number-supported
appleOwnedDomains
appleIDAuthorizationUrls
is-in-line-flow-supported
continuation-header-prefix
2faUpgradeAccountTypePriority
custodian
inheritance-cfg
settingsInlineLogoViewDisabled
IdMS1
IdMS2
IdMS3
actions
notification
body
title
dismiss
frequency
localUrlKey
root
bundlePath
iconName
notifyingAppBundleID
force
delay
osAlert
osAlertActionOnly
bannerAlert
defbtn
albtn
priority
zeroAction
badgeOnly
omitBadge
AKAction
notifyingAppId
@32@?0@"NSDictionary"8Q16^B24
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_authContext
_recoveryContinuationURL
_supportsMasterKeyRecovery
_mandatesRecoveryKey
%s%s%s
[31m
yyyy-MM-dd
Accept
Error deserializing data %@ for data %@
_authenticatorData
_signature
_clientData
_credentialName
_userIdentifier
_challenge
_relyingPartyIdentifier
<%@: %p {
AuthenticatorData: %@, 
Signature: %@, 
CredentialID: %@, 
ClientData: %@, 
UserIdentifier: %@, 
Challenge: %@, 
RelyingPartyIdentifier: %@, 
com.apple.ak.walrus.xpc
AKWalrusWebAccessRequestedServices
v24@?0@"AKPCSAuthContext"8@"NSError"16
-[AKWalrusController PCSAuthContextForWebSessionIdentifier:serviceName:completion:]_block_invoke_2
-[AKWalrusController removeAllPCSAuthCredentialWithCompletion:]_block_invoke_2
-[AKWalrusController verifyEnableWalrusAllowedWithContext:completion:]_block_invoke
-[AKWalrusController postWalrusStateUpdateToServerWithContext:urlBagKey:username:password:completion:]_block_invoke
prefs:root=APPLE_ACCOUNT
prefs:root=APPLE_ACCOUNT&aaaction=upgradeSecurityLevel
prefs:root=Passcode
com.apple.AuthKit
AUTH_ERROR_ALERT_INVALID_CONTEXT_TITLE
Localizable
AUTH_ERROR_ALERT_INVALID_CONTEXT_MESSAGE
AUTH_ERROR_ALERT_BUTTON_OK
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_MESSAGE
AUTH_ERROR_ALERT_BUTTON_SETTINGS
AUTH_ERROR_ALERT_BUTTON_CLOSE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_TITLE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_MESSAGE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_TITLE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_MESSAGE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE
AUTH_ERROR_ALERT_BUTTON_CONTINUE
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_TITLE
wapi
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE_WLAN
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE_WIFI
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_MESSAGE
AUTH_ERROR_ALERT_CREATE_PASSCODE_TITLE
AUTH_ERROR_ALERT_CREATE_PASSCODE_MESSAGE_WATCH
AUTH_ERROR_BUTTON_OPEN_PASSCODE_SETUP
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_CANNOT_SIGN_IN_TITLE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_CANNOT_SIGN_IN_MESSAGE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_TITLE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_ORGNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_ORGNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE
&%@=%@
_accessKey
_beneficiaryFirstName
_beneficiaryLastName
_beneficiaryPassword
Access Key: %@ 
beneficiaryPassword: %@
beneficiaryFirstName: %@
beneficiaryLastName: %@
identityToken: %@
authToken: %@
X-Apple-Session-Key
X-Apple-Encrypted-Session-Key
duration
X-Apple-I-MD-Cmd-Target
X-Apple-I-Data
AKAnisetteControllerLock
_pairedDevice
_proxiedAnisetteData
com.apple.authkit.anisette.deny.url
v16@?0@"NSDictionary"8
v24@?0@"NSURLRequest"8@"NSError"16
paired
X-Apple-I-MD-DATA
Localizable-Walrus
_SERVICE_ICLOUD
_SERVICE_ITUNES
_SERVICE_IMESSAGE
_SERVICE_FACETIME
_SERVICE_GAME_CENTER
_NO_SERVICE
_machineID
_oneTimePassword
_routingInfo
AKAnisetteData <%p>: {MID: %@ - OTP: %@ - RD: %@}
AuthKit
Lisbon
com.apple.AuthKitUIService
context
oopUIMode
v24@?0@"BSProcessHandle"8@"NSError"16
IDToken
authCode
state
isLikelyRealUser
_isLikelyRealUser
Authorization Credential:
 UID: %@ 
 Identity Token: %@ 
 AuthorizationCode: %@ 
 User Verification Result: %@ 
 User Info: %@ /n Transaction ID: %@
teams
<%@:%p> version: %@, teams: {
altDSID: %@, cliMode: %i
v32@?0@"FLFollowUpItem"8Q16^B24
@32@?0@"FLFollowUpItem"8Q16^B24
id: %@
number with dial code: %@
mode: %@
AKAuthenticationError
AKAnisetteError
AKSQLError
AKPrivateEmailError
AKSilentTTRError
AKWalrusError
AKUnderlyingADIErrors
_authorizedRequest
_credential
<%@: %p {
Authorized request: %@
Credential: %@
_data
_scale
_maskingStyle
AKAbsintheErrorDomain
v24@?0@"NSData"8@"NSError"16
/System/Library/Frameworks/CoreCDP.framework/CoreCDP
/System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP
/AppleInternal/Library/Frameworks/CoreCDP.framework/CoreCDP
CDPFollowUpContext
CDPFollowUpController
CDPContext
CDPRecoveryController
CDPStateController
CDPAccount
CDPStateErrorDomain
CDPIDMSPasswordResetKey
CDPIDMSRecordMIDKey
/System/Library/Frameworks/CoreCDPUI.framework/CoreCDPUI
/System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI
/AppleInternal/Library/Frameworks/CoreCDPUI.framework/CoreCDPUI
CDPUIAccountRecoveryController
CDPUIController
CDPUIStatusChangeController
CDPWalrusStateController
CDPWebAccessStateController
com.akd.cdp.walrusStatus
com.akd.cdp.webStatus
_waitForReply
_identityTokenValue
_heartbeatTokenValue
_payload
_waitForReplyTimeout
__notifyOfTimeout
_uuid
_status
_hashedWrappingKeyRKC
_originalChallenge
_displayName
_credentials
challenge
rpid
credentialIds
_promptTitle
_promptHeader
_promptBody
_useAlternativeKeysIcon
_incorrectKeyPresentedMessage
<%@: %p {
RelyingPartyIdentifier: %@, 
Challenge: %@, 
Original Challenge: %@, 
UserIdentifier: %@, 
DisplayName: %@, 
CredentialName: %@, 
Credentials: %@, 
PromptTitle: %@, 
PromptHeader: %@, 
PromptBody: %@, 
IncorrectKeyPresentedMessage: %@, 
AKFollowUpAccountRefreshTimestamp
_credentialRequestContext
_loginChoices
_signInAllowsPCSKeyAccess
<%@: %p> - bundleID: %@, localizedAppName: %@, credentialRequestContext: %@, userInformation: %@, loginChoices: %@, signInAllowsPCSKeyAccess: %@
com.apple.aktool
aktool
com.nextdoor.nextdoor
com.etsy.etsyforios
com.tinyspeck.chatlyio
com.apple.AppShack
com.apple.AuthKit.AKNetworkObserver
v16@?0@"NSObject<OS_nw_path>"8
_request
_resourceLoadDelegate
_requestType
_presentationType
_whitelistedRedirectURLs
<%@: %p 
 request: %@
 delegate: %@
 requestType: %lu
 presentationType: %lu 
/System/Library/Frameworks/KeychainCircle.framework/KeychainCircle
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
/AppleInternal/Library/Frameworks/KeychainCircle.framework/KeychainCircle
KCAESGCMDuplexSession
B32@?0@"FLFollowUpItem"8Q16^B24
_custodianListVersion
_beneficiaryListVersion
_custodianOperationsByID
_beneficiaryOperationsByID
updateRKC
finish
<%@: %p {
custodianListVersion: %@
beneficiaryListVersion: %@
_custodianOperationsByID: %@
_beneficiaryOperationsByID: %@
X-Apple-I-Accepted-Terms
_password
AKApplicationState
AKApplicationNonce
AKAppProvidedData
AKRequestedScopes
AKClientID
AKTeamID
AKAuthorizationStatus
AKAuthorizationAccount
AKAuthorizationIsSilentAppTransfer
AKAuthorizationIsEligibleForUpgradeFromPassword
AKClientAuthenticatedExternallyWithPassword
AKExternalAuthToken
<%@: %p {
requestIdentifier: %@,
transactionID: %@, 
clientID: %@,
teamID: %@,
userIdentifier: %@,
altDSID: %@,
state: %@,
nonce: %@,
requestedScopes: %@,
appProvidedData: %@,
isSilentAppTransfer: %d,
isEligibleForUpgradeFromPassword: %d,
email
X-MMe-Client-Info
https
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
_attestationsData
_credentialID
<%@: %p {
Challenge: %@, 
AttestationsData: %@, 
CredentialID: %@, 
ClientData: %@, 
RelyingPartyIdentifier: %@, 
CredentialName: %@, 
UserIdentifier: %@, 
<%@: %p> requestIdentifier: %@,
altDSID: %@,
userID: %@ 
transactionID:%@
adpCountries
reason
https://gsa.apple.com
https://grandslam-idms1.apple.com
https://grandslam-idms2.apple.com
https://grandslam-idms3.apple.com
/auth
/appleid/account
/verify/phone
/verify/phone/securitycode
/birthday
/password
account
person
birthday
createContext
password
phoneNumberVerification
mode
countryCode
securityCode
code
numberWithDialCode
obfuscatedNumber
pushMode
acceptedTerms
versions
deviceVersions
termsList
iCloud
termsPageDetails
prologue
agree
hasError
serviceErrors
message
underAge
studentAccount
mkid
accountName
custodianLastUpdateDate
appleManagedAccount
orgType
orgName
notificationEmailAvailable
phoneAsAppleId
_givenName
_familyName
_forwardingEmail
_primaryEmailAddress
_accountName
_accountAliases
_reachableEmails
_previouslySelectedEmail
_ageOfMajority
_authorizedApplicationsListVersion
_masterKeyID
_vettedPrimaryEmail
_phoneAsAppleID
_isUnderage
_isSenior
_isLegacyStudent
_hasUsedAuthorization
_privateAttestationEnabled
_previouslyWantedPrivateEmail
_appleIDSecurityLevel
_authMode
_repairState
_selectedEmail
_additionalInfo
_privateEmailListVersion
_canBeCustodian
_canHaveCustodian
_custodianEnabled
_custodianLastModified
_canBeBeneficiary
_canHaveBeneficiary
_appleIDCountryCode
_hasMDM
_managedOrganizationType
_managedOrganizationName
_isNotificationEmailAvailable
_notificationEmail
_webAccessEnabled
_serverExperimentalFeatures
_custodianInfos
_groupKitEligibility
<%@: %p {
givenName: %@,
familyName: %@,
forwardingEmail: %@,
primaryEmailAddress: %@,
accountName: %@,
accountAliases: %@,
reachableEmails: %@,
authorizedApplicationsListVersion: %@,
masterKeyID: %@,
vettedPrimaryEmail: %@,
phoneAsAppleID: %@,
isUnderage: %@,
isSenior: %@,
ageOfMajority: %@,
isLegacyStudent: %@,
appleIDCountryCode: %@,
hasUsedAuthorization: %@, 
privateAttestationEnabled: %@, 
appleIDSecurityLevel: %lu,
authMode: %lu,
repairState: %lu,
selectedEmail: %@,
canBeCustodian: %@,
canHaveCustodian: %@,
custodianEnabled: %@,
canBeBeneficiary: %@,
canHaveBeneficiary: %@,
hasMDM: %@,
managedOrganizationType: %@,
managedOrganizationName: %@,
isNotificationEmailAvailable: %@,
notificationEmail: %@,
additionalInfo: %@,
privateEmailListVersion: %@,
webAccessEnabled: %@,
serverExperimentalFeatures: %@,
custodianInfos: %@,
groupKitEligibility: %@,
_uniqueDeviceIdentifier
_provisioningDeviceIdentifier
_serverFriendlyDescription
_color
_enclosureColor
_coverGlassColor
_housingColor
_backingColor
_locale
_ROMAddress
_MLBSerialNumber
_modelNumber
_linkType
UniqueDeviceID
+[AKDevice activeIDSPeerDevice]
Library/Caches
AKDevice <%p> {%@} link %@
@"NSString"8@?0
@"NSNumber"8@?0
ProvisioningUniqueDeviceID
ModelNumber
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
iPhoneSimulator
ivIu8YTDnBSrYv/SN4G8Ag
ProductVersion
Simulator
@"NSLocale"8@?0
%@_%@
AKAnisetteProvisioningControllerXPCLock
No DSID was provided!
-[_AKAnisetteProviderProxy provisionAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy syncAnisetteForContext:withSIMData:completion:]
-[_AKAnisetteProviderProxy eraseAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[_AKAnisetteProviderProxy legacyAnisetteDataForContext:DSID:withCompletion:]
-[_AKAnisetteProviderProxy fetchPeerAttestationDataForContext:withRequest:completion:]
%06u
LOGIN_CODE_ALERT_OK_BUTTON
application/x-plist
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/PrivateFrameworks/UIKit.framework/UIKit
/AppleInternal/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/RemoteUI.framework/RemoteUI
/System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI
/AppleInternal/Library/Frameworks/RemoteUI.framework/RemoteUI
RUIParser
NSDocumentTypeDocumentAttribute
NSHTMLTextDocumentType
Failed to validate username and password combination: %@
Enter 6 digit code: 
Failed to read code!
Failed to validate code: %@
IDP second factor-authentication is not supported!
Requesting second-factor ServerUI...
Unexpected second-factor authentication (%@)!
Unknown verification type
Unsupported object model found: %@
v16@?0@"NSString"8
missing page
missing passcode view
missing passcode identifier
missing response URL
httpMethod
missing HTTP method
secure
serverInfo
Error creating an account: %@.
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
Error Validating phone number: %@
v24@?0@"AKTrustedPhoneNumber"8@"NSError"16
trustedPhoneNumbers
Multiple trusted numbers found!
Verifying code...
v32@?0@"NSNumber"8@"AKTrustedPhoneNumber"16^B24
%@. %@ via %@
Please select a trusted number: 
HTMLContent
application/x-buddyml
A second factor code was send to %@ via %@
Enter second factor code: 
Enter your birthday(YYYY-MM-DD): 
Please enter a valid birthday(%@)!
Enter password: 
Enter username: 
Phone Number for this account: 
Enter first name for the account: 
Enter last name for the account: 
Do you agree to terms and conditions?
Y to agree / READ to print out the terms (please just say yess!): 
READ
Y to agree: 
_beneficiaryAltDSID
_beneficiaryAccountName
<%@: %p {
beneficiaryAltDSID: %@
beneficiaryAccountName: %@
AKTemporaryValue
com.apple.ak.code.entered
AKAuthenticationInternalTokenCK
findmydeviced
com.apple.authkit.generic
com.apple.authkit.messages
com.apple.authkit.passkit
com.apple.authkit.appleconnect
com.apple.authkit.screentime
com.apple.authkit.tinker
com.apple.authkit.keychainsync
com.apple.authkit.dependent
X-Apple-Security-Upgrade-Context
INLINE_PASSWORD_ALERT_TITLE
PASSCODE_ALERT_MESSAGE_IPAD
%username%
authless
dependent
dependentToken
dependentSpyglass
_reason
_username
_isUsernameEditable
_DSID
_dependentAltDSID
_isProxyingForApp
_proxiedAppBundleID
_proxiedAppName
_serviceIdentifiers
_identifier
_maximumLoginAttempts
_isEphemeral
_shouldAllowAppleIDCreation
_shouldPromptForPasswordOnly
_passwordPromptTitle
_defaultButtonString
_httpHeadersForRemoteUI
_isPasswordEditable
_shouldUpdatePersistentServiceTokens
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_shouldPreventInteractiveAuth
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_notificationDisclaimer
_shouldForceInteractiveAuth
_capabilityForUIDisplay
_companionDeviceAnisetteData
_companionDevice
_isAppleIDLoginEnabled
_hasEmptyPassword
_shouldRequestShortLivedToken
_shortLivedToken
_shouldRequestConfigurationInfo
_isTriggeredByNotification
_message
_anticipateEscrowAttempt
_isFirstTimeLogin
_supportsPiggybacking
_desiredInternalTokens
_shouldSkipSettingsLaunchAlert
_shouldSendIdentityTokenForRemoteUI
_shouldRequestRecoveryPET
_title
_shouldSkipInitialReachabilityCheck
_attemptIndex
_authenticationType
_shouldSendGrandSlamTokensForRemoteUI
_needsRepair
_appProvidedData
_masterKey
_performUIOutOfProcess
_keepAlive
_cancelButtonString
_alternativeButtonString
_hideAlternativeButton
_hideCancelButton
_hideReasonString
_clientShouldHandleAlternativeButtonAction
_windowTitle
_alwaysShowUsernameField
_privacyBundleIdentifier
_authenticationPromptStyle
_needsNewChildAccount
_authenticationMode
_needsSecurityUpgradeUI
_displayImageData
_verifyCredentialReason
_callerIconBundlePath
_localizedCallerName
_forceEligibleForForegroundAuthentication
_deviceRegionRequired
_helpAnchor
_helpBook
<%@: %p { UUID: %@ }>
<%@: %p {
UUID: %@,
username: %@,
editable-username: %@,
altDSID: %@,
DSID: %@,
dependentAltDSID: %@,
password: %@,
service-type: %ld,
service IDs: %@,
reason: %@
ephemeral: %@,
password-only: %@,
authentication-type: %@,
update-service-tokens: %@,
offer-upgrade: %@,
offer-upgrade-context: %@,
proxying-for-app: %@,
proxied-app-id: %@,
proxied-device: %@,
companion-device: %@
max-login-attempts: %@
appleid-login-enabled: %@
has-empty-password: %@
request-slt: %@
short-lived-token: %@
identity-token: %@
triggered-by-push: %@
skip-alert: %@
skip-reachability-check: %@
attempt-index: %lu,
masterKey: %@,
performUIOutOfProcess: %@,
VerifyCredentialReason: %@, 
INLINE_PASSWORD_ALERT_MESSAGE
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_SERVICE_TYPE_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
INLINE_PASSWORD_ALERT_OK_BUTTON
INLINE_PASSWORD_ALERT_CANCEL_BUTTON
PASSCODE_ALERT_TITLE_LOCKSCREEN
PASSCODE_ALERT_MESSAGE_LOCKSCREEN_GENERIC
PASSWORD_ALERT_TITLE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_LOCKSCREEN_GENERIC
INLINE_PASSWORD_ALERT_PASSCODE_PLACEHOLDER
INLINE_PASSWORD_ALERT_PASSWORD_PLACEHOLDER
INLINE_PASSWORD_ALERT_USERNAME_PLACEHOLDER
WRONG_PASSWORD_ALERT_TRY_AGAIN_BUTTON
WRONG_PASSWORD_ALERT_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_FAILED_BUTTON
WRONG_LOGIN_CODE_TRY_AGAIN_BUTTON
WRONG_LOGIN_CODE_ALERT_CANCEL_BUTTON
com.apple.ak.twofa
<%@: %p {
altDSID: %@,
proxiedAppName: %@,
serviceType: %@,
proxiedDevice: %@,
companionDevice: %@,
appProvidedData: %@,
teamID: %@,
appID: %@,
request: %@,
appProvidedContext: %@,
userSelection: %@,
clientAuthenticatedExternallyWithPassword: %@,
com.apple.ak.auth.xpc
passwordPrompt
passwordPromptGoToSettingsNotification
invalidAccountSave
invalidAccountUpdate
missingAccountServices
username
clientKey
privateEmailAddress
privateEmailClientBundle
<PrivateEmail: {%@} -> {%@} [%@]>
<PrivateEmail: {%@} -> {%@}>
v24@?0@"AKCustodianSetupResult"8@"NSError"16
v24@?0@"AKTrustedContactsSyncResult"8@"NSError"16
serialNumber
buildNumber
osVersion
model
lastUpdatedDate
trusted
circleStatus
clcg
clhs
clbg
_name
_serialNumber
_buildNumber
_operatingSystemName
_operatingSystemVersion
_model
_machineId
_lastUpdatedDate
_trusted
_inCircle
_colorCode
_enclosureColorCode
_coverGlassColorCode
_housingColorCode
_backingColorCode
<%@:%p> Name: %@, SN: %@, Build: %@, OS: %@, Version: %@, Model: %@, Timestamp: %@, Trusted: %d, Circle Status: %d, Color Code: %@ Additional Info %@
<AKWalrusConfig: FeatureStatus: [%lu], StatusDescription: %@>
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
/System/Library/Frameworks/DeviceCheckInternal.framework/DeviceCheckInternal
/System/Library/PrivateFrameworks/DeviceCheckInternal.framework/DeviceCheckInternal
/AppleInternal/Library/Frameworks/DeviceCheckInternal.framework/DeviceCheckInternal
DCBAASigningController
v24@?0@"AKAuthorization"8@"NSError"16
v24@?0@"AKAuthorizationUserResponse"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v24@?0@"NSSet"8@"NSError"16
Cannot perform HME request - Insufficient security level
Cannot perform HME request - Phone as AppleID Account without reachable emails
self: (%p); Connection interrupted
self: (%p); Connection invalidated
error communicating to XPC: %@
Biometric validation of externalizedContext completed with result: %@ and error: %@
Failed to validate externalized Context data with error: %@
%@ deallocated
authkit/authenticate
 AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
AuthenticateWithContext
BEGIN [%lld]: AuthenticateWithContext  AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number2,name=Error}d 
END [%lld] %fs:AuthenticateWithContext  Error=%{public,signpost.telemetry:number2,name=Error}d 
Request with %@
Remote authentication service returned an error: %{public}@
Interactive authentication requested by background daemon, client error, AKAppleIDAuthenticationTypeSilentPreferred should be used
Interactive authentication requested by UI context, please investigate why silent auth could not be used
Remote authentication service came back with: %@
authkit/set-in-use
Remote authentication service returned an error: %@
Calling out to remote auth service for altDSID %@, service %@, inUse %@.
Result of remote call: %@. Error: %@.
Calling out to remote auth service for DSID %@, service %@, inUse %@.
authkit/fetch-user-info
Calling out to remote auth service to fetch user information for: %@
Result of remote call: %{private}@. Error: %{public}@
authkit/fetch-user-info-with-context
Calling out to remote auth service to fetch user information for altDSID (%@) with context: %@
authkit/fetch-user-info-typed
authkit/update-user-info
Calling out to remote auth service to update user information for: %@
Result of remote call: %{public}@. Error: %{public}@
authkit/fetch-auth-mode
Calling out to remote auth service to fetch auth mode for: %@
Result of remote call: %lu. Error: %{public}@
authkit/fetch-device-list
authkit/fetch-device-map
Calling out to remote auth service to fetch device list information for: %{public}@
Result of remote call: %@. Error: %@
authkit/fetch-app-list
Calling out to remote auth service to fetch app list information for: %@
authkit/delete-authorization-list
Calling out to remote auth service to wipe authorization database
authkit/silent-TTR
 enableTelemetry=YES 
TriggerSilentTTR
BEGIN [%lld]: TriggerSilentTTR  enableTelemetry=YES 
END [%lld] %fs:TriggerSilentTTR 
Remote Auth Service SilentTTR returned success: %@
Remote Auth Service SilentTTR returned an error: %@
authkit/revoke-authorization
Calling out to remote auth service to revoke authorization for clientID: %@
authkit/satori-warmup
Calling out to remote auth service to warmup verification session
WarmUp Session completed...
authkit/set-configuration-info
Calling out to remote auth service to set: %@ for identifier: %@.
authkit/fetch-configuration-info
Calling out to remote auth service to fetch configuration for identifiers: %@.
Result of remote call: %{private}@. Error: %@
authkit/check-upgrade-eligibility
HSA 2 eligibility check came back with result: %@ and error: %@
authkit/generate-login-code
Generated code: %@. Error: %@
authkit/validate-login-code
authkit/perform-circle-request
authkit/check-in
Calling remote authentication service to perform check-in for altDSID: %@
Remote call to peform check-in for account with altDSID (%@) returned
Failed to perform check-in: %@
authkit/report-sign-out
authkit/report-sign-out-all
authkit/update-state-with-response
Asking akd to update state for %@ with auth response: %@
Result of updating auth state: %@. Error: %@
Failed to get passcode state with error: %@
Failed to get active code with error: %@
authkit/fetch-load-delegate
FetchServerLoadDelegate
BEGIN [%lld]: FetchServerLoadDelegate  enableTelemetry=YES 
END [%lld] %fs:FetchServerLoadDelegate 
Asking akd for AKAppleIDServerResourceLoadDelegate for altDSID %@
Result of getting AKAppleIDServerResourceLoadDelegate: %@. Error: %@
Asking akd for AKAppleIDServerResourceLoadDelegate for context %@
authkit/sync-follow-up-items
Synchronizing follow ups for altDSID: %@
Synchronized follow ups %@ with error %@
Failed to synchronize follow ups due to xpc error: %@
authkit/followup-teardown
Asking akd to teardown: %@
Completed teardown request; Error: %@
authkit/renew-recovery-token
Asking akd to fetch a new recovery token token with info: %@
Failed to renew recovery token: %@
authkit/verify-master-key
Asking akd to verify master key with info: %@
Failed to verify master key: %@
authkit/persist-master-key
Failed to persist master key: %@
authkit/validate-vetting-token
Asking akd to validate vetting token %@ for altDSID: %@
Vetting-token validation failed due to expired master token. Attempting to re-auth...
Unable to refresh expired master token for vetting-token validation.
Master token should be fresh now. Reattempting vetting token-validation...
Result afer reauth: Is token valid? %@. Error: %@
Result: Is token valid? %@. Error: %@
authkit/create-appleid-allowed
Error getting create Apple ID state - %@
Allow create AppleID is determined to be - %@
Failed to get account name list: %@
Account name list: %@
authkit/fetch-url-bag
Calling out to remote auth service to url bag
Finished fetching URL bag. Error: %{public}@
Synchronously calling out to remote auth service to url bag
authkit/urlbag-update
Synchronously calling out to remote auth service to force update URL Bag for altDSID: %@
Finished updating urlbag update for AltDSID: %@ with result: %d error:%@
Connection to akd was interrupted!
Connection to akd was invalidated.
authkit/clear-session-cache
Connection to session remote service '%s' returned an error: %@
authkit/fetch-global-config
Calling out to remote auth service for global config
Finished fetching global config. Error: %{public}@
%{public}@ completed with error:%@
URLSessionConfig doesn't respond to _allowsVirtualInterfaces!
Initializing URL cache at URL: %@
Failed to generate cache due to missing container path!
AKURLSession %p is initializing...
NSURLSession became invalid with error: %@
Calling all pending completions.
Creating new NSURLSession with default config...
Asked to begin task with either nil request %@ or completion handler %@
Creating task %{public}@ for request at URL: %@
Resuming task %{public}@ for URL %@
Cancelling task %{public}@ for request %@
The data parameter is nil!
Aggregating received data for task: %{public}@
Task %{public}@ completed! Error: %@
Error is recoverable. Checking if retry is possible.
Retrying is not available on this platform.
Request failed for task: %{public}@ error: %@
Task %{public}@ Request response not of expected class!
Task %{public}@ Request completed with HTTP status code: %@
response: %@
data: %@
Task %{public}@ Server responded with authentication error
Detected an iCloud URL request, will not perform IdMS cert validation.
Server cert validity check failed!
Adding %lu credentials to the excluded credentials list.
Converting credential to base64: %@
Invalid credential was sent: %@
Adding credential to the list: %@
Fido registration was a success
Fido registration CredentialID: %@
Attestation Data: %@
ClientData: %@
Fido authentication was a success
Fido authentication Signature: %@
Authenticator Data: %@
UserID: %@
Unable to complete the Fido interaction: %{public}@
Provided error is%{public}@ an AS user cancel error.
Populating strings from context: %@
inheritance-authkit/fetch-dataclass-rules
Connection to remote inheritance service to %s returned an error: %@
inheritance-authkit/persist-manifest
inheritance-authkit/update-beneficiary
inheritance-authkit/remove-beneficiary
Not an Internal Build. Aborting beneficiary alias setup
inheritance-authkit/create-beneficiary-alias
Bad client! You are not supposed to provide your own implementation of AKAppleIDAuthenticationUIProvider!
Context ID %@ has already been registered for authentication!
Missing context identifier, how did we get here?
authkit/should-continue
Client has no knowledge of context ID: %@
 Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
ShouldContinueWithResults
BEGIN [%lld]: ShouldContinueWithResults  Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
 ShouldContinue=%{public,signpost.telemetry:number2,name=ShouldContinue}d 
END [%lld] %fs:ShouldContinueWithResults  ShouldContinue=%{public,signpost.telemetry:number2,name=ShouldContinue}d 
Delegate says to continue? %@
Calling delegate...
No delegate available.
Error: We do not have a UI-capable context on the client side!
Error: We do not have a UI-capabable context on the client side!
%@: Presenting server provided UI for context (%@) with configuration (%@)
%@: Setting the anisette data provider (%@) on resource load delegate (%@)
Error: Context is not configured for a Fido presentation!
Asking the client context to present Fido ui.
Error: We do not have a UIProvider. Unable to launch the Fido service!
%s (%d) called
%@: Called to fetch peer attestation data for context (%@) with request (%@)
%@: Calling anisette data provider (%@) to fetch peer attestation data for request (%@)
%@: Unable to call anisette data provider (%@) to fetch peer attestation data for request (%@) because it does not respond to 'fetchPeerAttestationDataForRequest:completion:'
Server has provided an invalid context lacking an ID: %@
Error: No response data!
There was an error parsing body data! %@
The body data was not in the expected (dictionary) format!
JSON for response cannot be formed from dictionary: %@
Dictionary serialization to JSON encountered error: %@
AKDeviceListDeltaMessagePayload missing timestamp
AKDeviceListDeltaMessagePayload unable to process missing operation.
AKDeviceListDeltaMessagePayload unable to process non-string operation.
AKDeviceListDeltaMessagePayload unable to process unexpected operation.
Error converting object to json string: %@
Adding padding to the string: %{private}@
Starting retrieval of recovery info for appleId <%@ : %@>
Starting recovery using %@...
Failed to retrieve recovery info with error. %@
Recovered data for context: %@
Escrowed recovery info missing PRK
Escrowed recovery info missing MID
Building recovery response request
Recovered info %@
Failed to unwrap the icsc recovery identity token.
Unexpected recoveredValue: %@
Recovery response: %@
Recovery response body: %@
Building recovery response body
shouldSendServerResponseForRecoveredInfo: Recovery error: %@
AKAttestationSigner signatureForData: - No data, nothing to sign.
AKAttestationSigner signaturesForData: - No data, nothing to sign.
Populating results with bundle info: %@
Failed to fetch subscription info with error: %@
Connection to authorization service interrupted
Connection to authorization service invalidated
Passcode protected: %@
Unable to get Anisette data for request %@! Error: %@
Adding proxied attestation headers - %@
Unable to serialize request parameters! Error: %@
JSON Serialization exception: %@
Invalid JSON input: %@
Adding header with services: %@
Failed to attach PTN header
Failed to attach Phone Information header
Encountered incomplete Anisette data! %@
Encountered incomplete companion Anisette data! %@
Encountered incomplete Anisette data for proxied device! %@
Setting Execution mode header to CLI
Got unknown Walrus status when setting header
AllowExperimentMode header state is %@
Cached AuthKit configurations have changed. Clearing cache...
Nil key!
Connection to akd signer was interrupted!
Connection to akd signer was invalidated: this is fine.
authkit/absinthe-signature-for-data
Remote signing service returned an error: %@
Remote signing service successfully signed data.
authkit/signatures-for-data
%@: Generating attestation data for request (%@)
%@: Failed to generate attestation data with error (%@)
%@: Generated additional headers for attestation (%@)
No request, nothing to sign.
urlBag not present
We have additional absinthe headers %@
Failed to fetch absinthe headers, error: %@
Requesting additional Attestation for header
We have attesation headers: %@
Failed to fetch attestation headers, error: %@
Absinthe not enabled
No baaInterval
returing %lu additional headers
Absinthe data generated for proxy %@
Absinthe error %@
Unknown absinthe error
Attestation signature headers %@
Attestation error %@
Unknown attestation error
Fetching Icon for bundleID: %@
AMSMediaTask for bundleID %@ artwork resulted in error %@
AMSMediaResult: %@
Request for %@ received data of length %lu
Request for %@ failed %@
Exception caught: %@
Will not allow nil altDSID to be set!
Will not allow nil DSID to be set!
DSID *must* be an NSNumber, but we got: %@
Failed to update verified email to %@ with error %@ after observing verified primary email for account %@
Updated account %@ verified email to %@ after observing verified email followup tear down
Account %@ already updated to reflect email verified is %@.
Requested to update username to %@ for altDSID: %@
Updating username for: %@
Exception caught when fetching primary email address: %@
Exeption caught when setting primery email address: %@
Exception caught when fetching primary verified email: %@
Exception caught when setting primary verified email: %@
Exception caught when fetching phone as AppleID: %@
Exception caught when fetching underage property: %@
Exception caught when setting underage property: %@
Exception caught when fetching isSenior property: %@
Exception caught when setting isSenior property: %@
Exception caught when fetching demoAccount property: %@
Exception caught when setting demoAccount property: %@
Exception caught when fetching ageOfMajority property: %@
Exception caught when setting ageOfMajority property: %@
Exception caught when fetching Apple ID country code property: %@
Exception caught when setting Apple ID country code property %@
Exception caught when fetching authorization used: %@
Exception caught when setting authorization used: %@
Exception caught when fetching private attestation enabled: %@
Exception caught when setting private attestation enabled: %@
Exception caught when fetching reachable emails: %@
Exception caught when setting reachable emails: %@
Exception caught when fetching given name: %@
Exeption caught when setting given name: %@
Exception caught when fetching family name: %@
Exception caught when setting last name: %@
Exception caught when fetching forwarding email: %@
Exception caught when setting forwarding email: %@
Exception caught when fetching private email selected: %@
Exception caught when setting private email selection: %@
Exception caught when fetching slected email: %@
Exception caught when setting selected email: %@
Saving account %@...
Exception caught while saving account: %@
Could not save %@ due to %@
Saving of account %@ succeeed!
Last Authentication mode fetch occured %@ seconds ago
Exception caught when fetching device trust status: %@
Last Satori warmup occured %@ seconds ago
Fetching token: %@ for account %@
Nil account cannot possibly have a %@ token!
AuthKit credential is completely MIA! Account: %@. Fetch error: %@
AuthKit %@ token is missing! Account: %@. Credential: %@.
Account of service type "%@" is eligible for security upgrade.
No account is eligible for security upgrade.
Servicetype is not supported.
AuthKit account (%@) that is not an SA account is not eligible for security upgrade.
There is no matching service account for service type (%li). (%@) may be abandoned authkit account, but still on device.
Found %@ IDMS accounts for which PRK might need to be cleared.
%@: Attempting to remove continuation key for account (%@)
Attempted to remove a token for nil key
Nil credential for account %@. Odd, but no clearing is necessary.
Clearing %{public}@ for account %@...
SilentTTR not triggered - supported only on TvOS
Checking if IDMS account cleanup is necessary (%lu found)...
Removing unusued IDMS account %@...
Removing duplicate IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Failed to save account %@. Error: %@
Successfully saved account %@.
Done removing unused and duplicate IDMS accounts.
Invalid type for value of primaryAccount account property: %@. Account: %@
Invalid type for value of %@ account property: %@. Account: %@
Invalid type for value of appleIdAliases %@. Account: %@
Invalid type for altDSID %@. Account: %@
Found %@ iCloud accounts for which password cache might need to be cleared.
Found a cached raw password for %@... removing...
Exception caught when fetching isNotificationEmailAvailable property: %@
Exception caught when setting isNotificationEmailAvailable: %@
Exception caught when fetching canBeCustodian property: %@
Exception caught when setting canBeCustodian: %@
Exception caught when fetching canHaveCustodian property: %@
Exception caught when setting canHaveCustodian: %@
Exception caught when fetching custodianEnabled property: %@
Exception caught when setting custodianEnabled: %@
Exception caught when fetching custodianListVersion property: %@
Exception caught when setting custodianListVersion: %@
Exception caught when fetching custodianLastModified property: %@
Exception caught when setting custodianLastModified: %@
Exception caught when fetching custodianInfos property: %@
Exception caught when setting custodianInfos: %@
Exception caught when fetching beneficiary property: %@
Exception caught when setting beneficiary: %@
Exception caught when fetching canBeBeneficiary property: %@
Exception caught when setting canBeBeneficiary: %@
Exception caught when fetching canHaveBeneficiary property: %@
Exception caught when setting canHaveBeneficiary: %@
Exception caught when fetching beneficiaryListVersion property: %@
Exception caught when setting beneficiaryListVersion: %@
Exception caught when fetching hasMDMForAccount property: %@
Exception caught when setting hasMDMForAccount: %@
Silent escrow record repair is force disabled
Silent escrow record repair is force enabled
Exception caught when fetching silentEscrowRecordRepairEnabled property: %@
Exception caught when setting silentEscrowRecordRepairDisabled property: %@
Exception caught when fetching fido property: %@
Exception caught when setting fido property: %@
private-email-authkit/lookup-email
PrivateEmailLocalLookup
BEGIN [%lld]: PrivateEmailLocalLookup  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailLocalLookup  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email lookup, error:%@
Connection to private email service to %s returned an error: %@
private-email-authkit/fetch-email
PrivateEmailRemoteFetch
BEGIN [%lld]: PrivateEmailRemoteFetch  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoteFetch  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email fetch, error:%@
private-email-authkit/register-email
PrivateEmailRemoteRegister
BEGIN [%lld]: PrivateEmailRemoteRegister  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoteRegister  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email fetch in background, error:%@
private-email-authkit/fetch-with-context
PrivateEmailContextFetch
BEGIN [%lld]: PrivateEmailContextFetch  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailContextFetch  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email context fetch, error:%@
authkit/PrivateEmailContext
getContext completed with context: %@
getContext failed: %@
private-email-authkit/delete-db
PrivateEmailDeleteDatabase
BEGIN [%lld]: PrivateEmailDeleteDatabase  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailDeleteDatabase  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/list-version
PrivateEmailListVersion
BEGIN [%lld]: PrivateEmailListVersion  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailListVersion  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/remove-key
PrivateEmailRemoveKey
BEGIN [%lld]: PrivateEmailRemoveKey  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoveKey  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/fetch-email-list
PrivateEmailLocalFetchAll
BEGIN [%lld]: PrivateEmailLocalFetchAll  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailLocalFetchAll  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Fetch Private Email list with %lu addresses, error:%@
Overflow while attempting to compress data!
Failed to allocate buffer for compressed data!
Failed to compress data!
Base64 encoded string after replacement: %{private}@
Attempting to unregister for all Apple IDs.
Unregistering all Apple IDs failed with error: %@
Unregistering all Apple IDs succeeded!
Current process is requesting signing synchronously, this is an error, please do not do this!
Grabbing signing headers from current device.
Failed to get signing headers, error: %@
Attempting to fetch peer anisette
Peer anisette fetch complete
Error while fetching proxied anisette %@
Not attmepting to fetch peer anisette
Configuring peer signing headers
%@: Fetching attestation data for proxied device (%@) with request (%@)
Peer attestation completed with results: %@
Failed to fetch peer attestation data: %@
No proxied device, no peer headers to attach.
Looks like we already have attestation data, thanks!
Not sending signing headers for peer
Cannot find application name for %@, got %@
Attaching app-name %@
Could not find application name for %@
Could not determine passcode state with error %@
Attaching PRK header
Signing request as ephemeral
Attaching ICSC header
Attaching Phone Info header
Attaching PTN header
Attaching PAC header
Harvested continuation header added %@
Signing request with common headers
Signing request with service token
Signing request with ID token
Signing request with HB token
Signing request with URLSwitching UrlKey
Signing request with CR token
Signing request with basic headers
Signing request with data center identifier
Setting execution mode to CLI
Signing request with Experimental Mode opt-in header
Server delegate missing bagUrlKey, cannot determine if BAA attestation is needed
Signing request with BAA headers
Decorating with: %@
Updating service token for identifier %@ succeded
Updating service token for identifier %@ failed: key not found in results
Custom service token value is set. The results of a reauth are likely unused!
Updating delegate identity token succeded.
Updating delegate identity token failed: key not found in results
Harvested continuation headers %@
AKCircleRequestPayload: Unable to parse payload from invalid response
AKCircleRequestPayload: Processing parsed response dictionary (%@)
AKCircleRequestPayload: Unable to parse response dictionary (%@)
AKCircleRequestPayload: Unable to parse presence SID (%@) as valid UUIDv4
AKCircleRequestPayload: Unable to parse plistData (nil)
AKCircleRequestPayload: Failed to parse plist (%@) from plist data (%@) with error (%@)
Parsing CFU Item Payload: %@
Settings a custom icon for the CFU with app id: %@
Detected %@
Continuity push detected.
Continuity push with alternate button title detected.
Couldn't find pyaload data to post notification.
Building recovery context with info: %@
_mutableJSONRequestForURL: %@
walrus-authkit/fetch-pcs-auth-context
Connection to Walrus remote service '%s' returned an error: %@
walrus-authkit/remove-all-pcs-auth-credentials
walrus-authkit/verify-walrus-enable-allowed
VerifyEnableWalrusAllowed
BEGIN [%lld]: VerifyEnableWalrusAllowed  enableTelemetry=YES 
END [%lld] %fs:VerifyEnableWalrusAllowed 
Error verifying whether user is allowed to enable walrus - %{public}@
Successfully verified allowed to enable walrus status.
walrus-authkit/post-walrus-state-update-to-server
PostWalrusStateUpdateToServer
BEGIN [%lld]: PostWalrusStateUpdateToServer  enableTelemetry=YES 
END [%lld] %fs:PostWalrusStateUpdateToServer 
Error updating walrus state update status to server - %{public}@
Successfully posted walrus state update status to server.
AlertHandler called with error: %@
Authorization alert - invalid context
Authorization alert dismissed - invalid context
Authorization alert dismissed - missing apple account
Authorization alert dismissed - unverified email
Authorization alert dismissed - insufficient security level
Authorization alert dismissed - cannot find server
Authorization alert dismissed - underage account
Authorization alert dismissed - passcode setup required
Authorization alert dismissed - managed account
Showing alert (%@) failed, user notification is nil!. Error: %d
No existing IdMS account for altDSID %@
No existing IdMS account for DSID %@
No existing IdMS account for username %@
No altDSID, DSID or username passed on context, unable to find account
Cannot pull up IDMS account without immutable username or altDSID.
Invalid token string! %@
Error: Got malformed GS token data!
Value for %@ is missing/invalid!
Nil value for expected header: %@
Unable to serialized token properties! Error: %@
Checking for deny listing URL:%@ Task: %{public}@ ...
Anisette deny url is set: %@
Denying Anisette to URL:%@ Task: %{public}@ ...
Not going to do anything with non-HTTP response from URL: %@ Task: %{public}@.
Trying to get new Anisette headers to retry request for URL:%@ Task: %{public}@ ...
Redirecting urlRequest from URL: %@ to alternate URL: %@
Url Switch request failed with error: %@, ignoring URL Switch
Unable to append header for request %@! Error: %@
Passing along decorated request for: %@
Using proxied Anisette data for headers to URL: %@.
Fetching paired device Anisette data for headers to URL: %@.
Unable to append header for request %@! Task %{public}@ Error: %@.
Passing along decorated request for URL: %@ Task %{public}@.
Using proxied Anisette data for headers to URL: %@ Task %{public}@.
Fetching paired device Anisette data for headers to URL: %@. Task: %{public}@.
No handling for HTTP status code %@ in response for URL %@
No instance of AKAnisetteProvisioningController to handle HTTP code %@ in response to %@ %@.
Sync status code (%d) received for URL: %@
HTTP 434 without sync data received!
Anisette sync was successful!
Anisette sync failed! Error: %@
Reprovision status code (%d) received for URL: %@
Unable to reprovision because Anisette data could not be erased! Error: %@
Erased Anisette data successfully. Time to provision!
Provisioning new Anisette data failed! Error: %@
Successfully provisioned new Anisette data.
Handling response %@ for URL %@...
URL Switching state code (%d) received for URL: %@
No Value found for URLSwitching header ignoring URL Switching request
No Value found for Response URLSwitch data header ignoring URL Switching request
No URL found for UrlKey after URLBag update, ignoring URL Switching request
URLBag failed to update with error: %@, ignoring URL Switching request
Failed to find localized string for key: %{private}@
Feature Lisbon is supported. Is Lisbon available - %@
Redirecting to AuthKitUIService, to present basic login UI with context: %@
Context data is nil: %@
Trying to launch application with Scene Delegate
Unable to launch application: %@ with the error: %@
Successfully launched process: %@
Failed to launch application: %@ with error: %@
Call completion with authentication result with presentation completion: %@
Parsing server provided Data %@
AKAuthorizationCredential Successfully created with transaction id:%@
Called -[AKCoordinatedDataBlock start] after block has already been started. Ignoring call and not starting again.
Failed to fetch walrus status with error: %@
Failed to fetch web access status with error: %@
Web access change UI requested for unknown status
Present Authorization call forwarded to UI provider
UI provider is nil
Authorization Client that has UI provider deallocated
Sync for account: %{private}@ - %{private}@
Last follow up refresh occured %@ seconds ago
Checking for sparse follow ups
Failed to fetch items, falling back to sync
Sparse followup item detected: %@
Will synchronize followups %@
Failed to update follow up synchronization date: %@
Updating follow up synchronization for %@
No followup items found in payload.
Synchronizing local follow up state.
Deleting: %@
Failed to clear existing follow ups: %@
Clearing Notifications: %@
Inserting: %@
Unknown action, ignoring...
Detected an item without an identifier, invalid payload
Updating existing item with identifier: %@
Existing item notification was previously dismissed, ignoring incoming notification
Incoming notification was forced, keeping it!
Found incoming sparse followups: %@
Found incoming full followups: %@
Missing username, trying to fetch one via idMS account
Matching account missing, there be dragons ahead!
Using idMS account username
Cannot perform request - Missing authorization request
Cannot perform request - Current platform require passcode setup
Cannot perform request - Missing account
Cannot perform request - Missing AppleAccount
Cannot perform request - Managed Accounts Not Permitted on Shared iPad
Cannot perform request - FedAuth Accounts Not Permitted
Cannot perform request - Invalid age
Cannot perform request - Insufficient security level
Cannot perform request - Account not verified.
Cannot perform password request without password request.
Fetch global config completed with error: %@
Fetching global config for walrus config.
Global config has no ADP countries
Global config has no entry for account country
Account name is missing.
Account name value has an invalid type: %@
Primary email address is missing, probably MAKO account.
Primary email address value has an invalid type: %@
No aliases.
Aliases array value has an invalid type: %@
No additional Info.
User given name is missing.
User given name name value has an invalid type: %@
User family name is missing.
User family name value has an invalid type: %@
Mako Account Identifier Missing
Mako Account Identifier value has an invalid type: %@
User Apple ID country code is missing.
User apple id country code value has an invalid type: %@
User vetted primary email is missing, Possibly unverified or Mako Account.
No reachable emails for account
User reachable emails value has an invalid type: %@
No Forwarding email set for this account
Forwarding email value has an invalid type: %@
Previously selected email value has an invalid type: %@
No authorized applications list version set for this account
Authorized applications list version value has an invalid type: %@
No private email list version set for this account
Private email list version value has an invalid type: %@
CanBeCustodian is missing.
CanHaveCustodian is missing.
custodianEnabled is missing.
CustodianLastModified is missing or has invalid type.
canBeBeneficiary is missing.
canHaveBeneficiary is missing.
hasMDM is missing.
Managed organization type value has an invalid type: %@
Managed organization type has an invalid value: %@
Managed organization name value has an invalid type: %@
Managed organization isNotificationEmailAvailable value has an invalid type: %@
Managed organization notificationEmail value has an invalid type: %@
Duplicate custodian UUID %@ with different values (%@ and %@) found in custodianInfos
No valid Custodian Info found in custodianInfos array.
Valid Custodian Info found in custodianInfos array %@
No custodian info in response.
%{private}s called on unsupported platform, please file a radar!
System container path is %s
Error getting system container: %llu
Caught error (%@) unserializing AKDevice data (%@)
Caught error (%@) serializing self (%@)
Failed to check circle status: %@
System reports isPasscodeSet: %@
Local auth returned error: %@
Not biometric capable
authkit/anisette-provision
ProvisionAnisette
BEGIN [%lld]: ProvisionAnisette  enableTelemetry=YES 
END [%lld] %fs:ProvisionAnisette 
Remote Anisette service returned an error: %@
Remote Anisette service successfuly provisioned.
authkit/sync-sim
Remote Anisette service successfuly resynced provisioning data.
authkit/anisette-erase
EraseAnisette
BEGIN [%lld]: EraseAnisette 
END [%lld] %fs:EraseAnisette 
Remote Anisette service successfuly erased provisioning data.
authkit/anisette-for-request
Not allowed to use Anisette data with non-HTTPS URLs.
authkit/fetch-anisette
BEGIN [%lld]: FetchAnisette 
Remote Anisette service returned Anisette data.
FetchAnisette
END [%lld] %fs:FetchAnisette 
authkit/legacy-anisette
Remote Anisette service returned legacy Anisette data.
authkit/fetch-peer-attestation-data
FetchAttestation
BEGIN [%lld]: FetchAttestation 
END [%lld] %fs:FetchAttestation 
Remote Anisette service returned Attestation data.
Remote Attestation data returned %@ - error %@
%@: Unable to call anisette data provider (%@) to fetch peer attestation data for request (%@) because it does not implement 'fetchPeerAttestationDataForRequest:completion:'
request: %@
Providing birthday info.
Providing password info.
Providing Phone number info.
Finishing up Apple ID creation flow.
Error, not attempting to collect second factor code
Prompting for second factor code
Selecting trusted numbers
No trusted number selected
Server indicates we only have one trusted number, lets use that.
Sending selected trusted number
Selected trusted number response %@
Invalid trusted number selection %@ - %@
Received response %@
Attempt to show server UI with unsupported configuration (still in the works)
(%@)
User agreed to terms and conditions
Constructed SMS postback dictionary - %@
Client passed auth context with email value in altDSID property - this is an error, do not do this.
%@ being updated by %@
Cannot update auth context with nil context
Client set raw password to a PET - this is an error, please do not do this.
self.username is nil
Will prompt for password...
Will prompt for username and password...
Determined that we should show password field for username: %@
Showing login error...
Canceling second-factor entry prompt.
Nothing to dismiss right now.
Listening for code entry notification...
No longer listening for code entry notification.
Notified that 2FA code was entered, but code is empty!
Passing 2FA code to akd.
Dropping 2FA code because we are currently holding a reply block.
Closing login code prompt.
Received notification of login code entry. Forwarding to observer %@.
Presenting %@ to %@
custodian-authkit/initiate-custodian
CustodianSetupStart
BEGIN [%lld]: CustodianSetupStart  enableTelemetry=YES 
END [%lld] %fs:CustodianSetupStart 
Initiated Custodian with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to initiate custodian for context %@
Result of remote custodian initiation call: %@. Error: %{public}@
authkit/custodian-finalize-custodian
CustodianSetupFinalize
BEGIN [%lld]: CustodianSetupFinalize  enableTelemetry=YES 
END [%lld] %fs:CustodianSetupFinalize 
Finalized Custodian setup with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to finalize custodian for context %@
Error finalizing custodianship: %{public}@
Successfully finalized custodianship.
authkit/custodian-revoke-custodian
Revoke custodian with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to revoke custodian for context %@
Error revoking custodianship: %{public}@
Successfully revoked custodianship.
authkit/custodian-update-key
Update recovery key returned an error: %{public}@
Updating idMS recovery key with context %@
Error updating recovery key: %{public}@
Successfully updated recovery key with idMS.
custodian-authkit/start-custodian-recovery
CustodianRecoveryStart
BEGIN [%lld]: CustodianRecoveryStart  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryStart 
startCustodianRecoveryRequestWithContext completed with response: %@
startCustodianRecoveryRequestWithContext completed with error: %{public}@
custodian-authkit/fetch-code-config
fetchCustodianRecoveryCodeConfiguration completed with result: %@
Failed to fetch custodian recovery code configuration with error: %{public}@
custodian-authkit/custodian-recovery-circle
 RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
CustodianRecoveryMessage
BEGIN [%lld]: CustodianRecoveryMessage  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryMessage 
startCustodianRecoveryTransactionWithContext completed successfully
startCustodianRecoveryTransactionWithContext completed with error: %{public}@
XPC Connection failed or interrupted with error: %@ on call: startCustodianRecoveryTransactionWithContext
custodian-authkit/fetch-recovery-token
CustodianRecoveryToken
BEGIN [%lld]: CustodianRecoveryToken  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryToken 
fetchCustodianRecoveryTokenWithContext completed with error: %{public}@
fetchCustodianRecoveryTokenWithContext completed with token: %@
XPC Connection failed or interrupted with error: %@ on call: fetchCustodianRecoveryTokenWithContext
custodian-authkit/fetch-wrap-rkc
CustodianDataRecoveryKey
BEGIN [%lld]: CustodianDataRecoveryKey  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianDataRecoveryKey 
fetchCustodianDataRecoveryKey completed with response: %@
Failed to fetch custodian data recovery key with error: %{public}@
XPC Connection failed or interrupted with error: %@ on call: fetchCustodianDataRecoveryKeyWithContext
custodian-authkit/embargo-feedback
Starting call to send embargo end notification feedback to IdMS with context: %@
sendEmbargoEndNotificationFeedback failed with error: %{public}@
sendEmbargoEndNotification completed without error for transactionID: %@
XPC Connection failed or interrupted with error: %@ on call: sendEmbargoEndNotificationFeedbackWithContext
custodian-authkit/perform-trustedContacts-sync
Starting call to perform trusted contacts data sync with IdMS: %@
Result of trusted contacts data sync call: %@. Error: %{public}@
authkit/authorize
Authorization controller performAuthorizationWithContext called
Authorization completed with authorization: %@
Authorization failed: %@
authkit/begin-authorize
AuthorizationExternalAuthBegin
BEGIN [%lld]: AuthorizationExternalAuthBegin  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthBegin  Error=%{public,signpost.telemetry:number2,name=Error}d 
Begin Authorization completed with userResponse: %@
Begin Authorization failed: %@
authkit/continue-authorize
AuthorizationExternalAuthContinue
BEGIN [%lld]: AuthorizationExternalAuthContinue  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthContinue  Error=%{public,signpost.telemetry:number2,name=Error}d 
Continue Authorization completed with authorization: %@
Continue Authorization failed: %@
authkit/cancel-authorize
AuthorizationExternalAuthCancel
BEGIN [%lld]: AuthorizationExternalAuthCancel  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthCancel  Error=%{public,signpost.telemetry:number2,name=Error}d 
Cancel Authorization failed: %@
Cancel Authorization completed successfully
authkit/revokeUpgrade
Revoke completed successfully
Revoke failed: %@
authkit/credentialState
Credential State request returned with error: %@
Credential State returned with state: %@
authkit/credentialStateForClientID
authkit/presentationContext
getPresentationContext completed with presentation context: %@
authkit/performRequestWithSelection
performAuthorizationWithContext completed with presentation context: %@
%@: Authorization failed: %@
Attempting proxy auth with context: %@
Failed to fetch authorized URLs with XPC error: %@
Failed to fetch authorized URLs with error: %@
Failed to fetch apple owned domains with XPC error: %@
Failed to fetch apple owned domains with error: %@
fetchAppleIDAuthorizeHTMLResponseTemplate completed with result.
Failed to fetch authorization HTML response template with error: %@
continueFetchingIconWithCompletion completed with result.
Failed to continue fetching icon with error: %@
authkit/fetch-primary-bundleid
Calling out to remote auth service to fetch primary bundle ID for service: %@
authkit/store-proxied-authorization
Store proxied authorization completed
Store proxied authorization failed: %@
No URL for Apple ID Authorization
Authorization controller should process URL
Established connection between notification center endpoint and daemon service.
Failed to establish connection between notification center endpoint and daemon service with error: %@
Established connection between state broadcast handler endpoint and daemon service.
Failed to establish connection between state broadcast handler endpoint and daemon service with error: %@
T@B
AKPrivateEmailValidator
AKAuthorizationRevokeUpgradeContext
NSCopying
NSSecureCoding
NSCoding
AKCarouselAlertProviderServiceInterface
NSObject
AKCarouselAlertClientConnection
AKAuthorizationCredentialStateRequest
AKLAContextValidator
AKFLFollowUpController
AKCustodianDaemonProtocol
AKCustodianDaemonInterface
AKExtensionItem
AKAuthorizationUpgradeContext
AKAdaptiveService
NSXPCListenerDelegate
_AKMessageForwarder
AKAdaptiveServiceInterface
AKAdaptiveServiceShouldHandle
AKAppleIDAuthenticationController
AKAuthenticationController
AKCustodianSetupResult
AKURLDataTask
AKURLSession
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKFidoAuthorizationController
ASAuthorizationControllerDelegate
AKConsentedApplication
AKInheritanceAccessKey
AKAuthorizationStateBroadcastHandler
AKAuthorizationStateBroadcastHandlerInterface
AKAuthorizationTVServicePresenter
AKAttestationData
AKInheritanceInterface
AKInheritanceController
AAFXPCSessionDelegate
AKAppleIDAuthenticationLimitedUIProvider
AKAppleIDServerAuthenticationUIProvider
AKAppleIDAuthenticationUIProvider
AKAppleIDAuthenticationContextManager
AKAppleIDAuthenticationClientProtocol
AKAnisetteProvisioningClientProtocol
AuthKit
AKDeviceListDeltaMessagePayload
AKCustodianContext
AKAuthenticationContext
AKAuthorizationUserResponse
AKNativeAccountRecoveryController
CDPAuthProvider
AKAttestationSigner
AKFollowUpTearDownContext
AKPCSAuthContext
AKAuthorizationPresenterHostProtocol
AKAuthorizationPresenterHostInterface
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKFollowUpProviderFactory
AKCustodianDaemonConnection
AKCredentialRequestContext
AKAppleIDAuthenticationClientInterface
AKAuthorizationScopesUserSelection
AKConfiguration
AKAppleIDSigningController
Convenience
AKInheritanceContext
AKDeviceListRequestContext
CGSize
AKMediaServicesController
AKAuthorizationDaemonProtocol
AKAuthorizationDaemonInterface
AKCertificatePinning
AKAccountManager
AKPrivateEmailDaemonProtocol
AKPrivateEmailClientProtocol
AKPrivateEmailController
AKAppleIDSigningDaemonProtocol
AKAppleIDSigningDaemonInterface
AKAuthorizationLoginChoice
AKLoginPresenterHostInterfaceProtocol
AKLoginPresenterHostInterface
AKBeneficiaryManifest
AKAppleIDServerResourceLoadDelegate
AKPrivateEmailPresenterHostProtocol
AKPrivateEmailPresenterHostInterface
AKDeveloperTeam
AKCircleRequestPayload
AKPrivateEmailDaemonInterface
AKPrivateEmailContext
AKURLBag
AKFollowUpFactoryImpl
AKFollowUpItemFactory
AKAccountRecoveryContext
AKAuthorizationNotificationHandler
AKAuthorizationNotificationHandlerInterface
AKCommandLineUtilities
AKFidoAuthenticationResponse
AKFidoResponse
AKWalrusDaemonProtocol
AKWalrusController
AKAlertHandler
AKInheritanceCLIContext
Accounts
AKGrandSlamResponseHandler
AKToken
AKMasterToken
AKAppleIDSession
NSURLSessionAppleIDContext
AKAnisetteData
AKFeatureManager
AKFuture
AKAnisetteProvisioningClientInterface
AKLoginPresenter
AKAuthorizationCredential
AKCredential
AKApplicationMetadataInfo
AKWalrusContext
AKFollowUpController
AKFollowUpProvider
AKTrustedPhoneNumber
AKFollowUpServerPayloadFormatter
AKAuthorization
AKIconContext
AKAbsintheSigner
AKCoordinatedDataBlock
AKCDPFactory
AKPasswordRequest
AKCircleRequestContext
AKTrustedContact
AKUsernameFormatter
AKFidoContext
AKAuthorizationClientImpl
AKAuthorizationClientProtocol
AKAnisetteProvisioningAndSigningDeamonInterface
AKAnisetteProvisioningDaemonProtocol
AKAnisetteProvisioningDaemonInterface
AKFollowUpSynchronizer
AKAppleIDAuthenticationDelegate
AKAuthorizationPresentationContext
AKNetworkObserver
AKServerRequestConfiguration
AKBaseFollowupManager
AKTrustedContactsSyncResult
AKAuthorizationAppSignInDiscovery
AKPasswordCredential
AKGlobalConfig
AKAuthorizationRequest
AKAuthHandlerImpl
AKAuthHandler
AKAuthorizationDaemonConnection
AKFidoRegistrationResponse
AKAuthorizationValidator
AKCredentialRequest
AKCredentialRequestProtocol
AKWalrusConfigProvider
AKAuthorizationNotificationService
AKUserInformation
AKDevice
AKUtilities
AKAnisetteProvisioningController
_AKAnisetteProviderProxy
AKLoginCodeNotificationBuilder
AKAppleIDAuthenticationCommandLineContext
AKBeneficiaryAliasSetupResult
AKAppleIDAuthenticationSurrogateUIProvider
AKAppleIDAuthenticationContext
SecondFactorSupport
LocationNotificationSupport
AKAuthorizationContext
AKAppleIDAuthenticationDaemonProtocol
AKAppleIDAuthenticationDaemonInterface
AKPrivateEmailClientImpl
AKPrivateEmailClientInterface
AKAutoBugCapture
AKProxiedClientContext
AKPrivateEmail
AKCustodianController
AKRemoteDevice
AKAuthorizationClientInterface
AKWalrusConfig
AKBundleInformation
AKAuthorizationController
DSIDForAccount:
APSEnvironment
MLBSerialNumber
DSID
T@"AKDevice",&,N,V_targetDevice
HTTPBody
T@"NSArray",&,N
IsFollowUpItemNotificationForced:
T@"NSData",&,N,V_claimTokenData
JSONObjectWithData:options:error:
T@"NSData",C,N,V_wrappingKeyRKC
PCSAuthContextForWebSessionUUID:serviceName:completion:
T@"NSDate",R,N,V_expirationDate
T#,R
T@"NSNumber",C,N,V_backingColor
T@"<AKAnisetteServiceProtocol>",&,N,V_anisetteDataProvider
T@"NSString",&,N,V_securityCode
T@"<AKAppleIDAuthenticationDelegate>",W,N,V_delegate
T@"NSString",C,N,V_ownerAppleID
T@"<AKAuthorizationUIProvider>",&,N,V_uiProvider
T@"NSString",C,N,V_promptHeader
T@"<AKCredentialRequestProtocol>",&,N,V_authorizedRequest
T@"NSString",C,N,V_proxyAppName
T@"<AKFidoUIProvider>",&,N,V_uiProvider
T@"NSString",C,N,V_serviceToken
T@"<AKPrivateEmailUIProvider>",&
T@"NSString",R,N,V_credentialID
T@"<AKURLBagDictionaryProvider>",&,N,V_bagProvider
T@"NSUUID",R,C,N,V_webSessionID
T@"ACAccount",&,N,V_authkitAccount
TB,N,V_presenceFallbackApproved
T@"ACAccountStore",&,N,V_accountStore
TB,N,V_shouldRequestRecoveryPET
T@"AKAccountManager",R,N
TB,N,V_shouldSendSigningHeaders
T@"AKAnisetteData",&,N,V_companionDeviceAnisetteData
TB,R,N,GisValid
T@"AKAppleIDAuthenticationContext",&,D,N,Sak_setContext:
TQ,R,N,V_capabilityForUIDisplay
T@"AKAppleIDAuthenticationContext",&,N,V_context
URLSession:task:getAppleIDHeadersForResponse:completionHandler:
T@"AKAppleIDAuthenticationController",&,N,V_controller
_accountAliases
T@"AKAttestationData",&,N,V_proxiedDeviceAttestationData
_additionalInfo
T@"AKAuthorizationRequest",&,N,V_authorizationRequest
_authController
T@"AKAuthorizationScopesUserSelection",&,N,V_userSelection
_bundleIconName
T@"AKBeneficiaryManifest",&,N,V_manifest
_callerBundleID
T@"AKCircleRequestPayload",&,N,V_payload
_claimTokenData
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
_connectionLock
T@"AKDevice",C,N
_credentialName
T@"AKDevice",C,N,V_proxiedDevice
_custodianUUIDs
T@"AKPasswordRequest",&,N,V_passwordRequest
_deallocHandler
T@"AKUserInformation",&,N,V_userInformation
_existingStatus
T@"AKUserInformation",R,N,V_userInformation
_exportedObject
T@"ASAuthorizationController",&,N,V__authController
_heartbeatToken
T@"NSArray",C,N,V_accountAliases
_itemIdentifier
T@"NSArray",C,N,V_beneficiaryContacts
_locale
T@"NSArray",C,N,V_custodianContacts
_origin
T@"NSArray",C,N,V_custodianUUIDs
_pairedDeviceAnisetteController
T@"NSArray",C,N,V_loginChoices
_proxiedAltDSID
T@"NSArray",C,N,V_orphanedBeneficiaryUUIDs
_reason
T@"NSArray",C,N,V_phoneInformation
_removeTokenForKeys:forAccount:
T@"NSArray",C,N,V_requestedScopes
_scopes
T@"NSArray",C,N,V_serviceIdentifiers
_setSessionKey:
T@"NSArray",C,N,V_whitelistedPathURLs
_slotID
T@"NSArray",R,C,N,V_machineIDs
_stringForType:
T@"NSArray",R,N,V_credentials
_teamID
T@"NSData",&,N,V_clientInfo
_unsafe_completeTask:withError:
T@"NSData",&,N,V_displayImageData
_userID
T@"NSData",C,N,V_aaData
_valueCondition
T@"NSData",C,N,V_externalLocalAuthData
_wrappingKeyRKC
T@"NSData",C,N,V_idmsData
accessKeyString
T@"NSData",R,C,N,V_authorizationCode
addFinishBlock:
T@"NSData",R,C,N,V_identityToken
ak_addAuthorizationHeaderWithCustodianRecoveryToken:forAltDSID:
T@"NSData",R,N,V_challenge
ak_addGuardianAuthorizationHeaderWithHeartbeatToken:forAltDSID:
T@"NSDate",C,N,V_birthday
ak_addPrivateEmailDomainHeader:
T@"NSDate",R,C,N,V_lastUpdatedDate
ak_addProxyApp:
T@"NSDate",R,N,V_expiryDate
ak_localeHeader
T@"NSDictionary",&,N,V_responseInfo
ak_mapNullable:
T@"NSDictionary",C,N,V_additionalInfo
ak_toJSONString
T@"NSDictionary",C,N,V_apps
allKeys
T@"NSDictionary",C,N,V_beneficiaryOperationsByID
appName
T@"NSDictionary",C,N,V_httpHeadersForRemoteUI
appleID
T@"NSDictionary",R,C,N,V_otherInfo
authKitAccount:
T@"NSDictionary",R,N
baaSignatureForData:completion:
T@"NSLocale",C,N,V_locale
bundleForClass:
T@"NSMutableData",&,N,V_receivedData
cdpAccountIsICDPEnabledForDSID:
T@"NSNumber",&,N,V_identifier
cliMode
T@"NSNumber",&,N,V_scale
companionDevice
T@"NSNumber",C,N,SsetAppleIDLoginEnabled:,V_isAppleIDLoginEnabled
containsString:
T@"NSNumber",C,N,V_ageOfMajority
coverGlassColor
T@"NSNumber",C,N,V_canBeCustodian
currentDeviceAuthenticationMode
T@"NSNumber",C,N,V_canHaveCustodian
dateFromString:
T@"NSNumber",C,N,V_custodianEnabled
fetchAppInfoURL
T@"NSNumber",C,N,V_groupKitEligibility
forwardingEmail
T@"NSNumber",C,N,V_hasUsedAuthorization
initWithBeneficiairyIdentifier:
T@"NSNumber",C,N,V_isLegacyStudent
initWithInterface:strongObject:
T@"NSNumber",C,N,V_isSenior
initWithString:
T@"NSNumber",C,N,V_localPresenceFound
internalWrapper
T@"NSNumber",C,N,V_phoneAsAppleID
isFaceIDCapable
T@"NSNumber",C,N,V_previouslyWantedPrivateEmail
isLegacyStudent
T@"NSNumber",C,N,V_secondFactorCode
isProxy
T@"NSNumber",C,N,V_vettedPrimaryEmail
isWalrusEnabled
T@"NSNumber",R,C,N,V_iconScale
lastKnownLocale
T@"NSSet",C,N,V_desiredInternalTokens
lisbonAvailable
T@"NSString",&,N,V_altDSID
manifestOptions
T@"NSString",&,N,V_appName
message
T@"NSString",&,N,V_cancelButtonString
numberWithBool:
T@"NSString",&,N,V_heartbeatTokenValue
options
T@"NSString",&,N,V_initialURLKey
overrideForKey:
T@"NSString",&,N,V_number
payload
T@"NSString",&,N,V_obfuscatedNumber
performRequests
T@"NSString",&,N,V_phoneCertificate
presentLoginAlertForContext:withError:title:message:completion:
T@"NSString",&,N,V_proxiedAltDSID
primaryClientID
T@"NSString",&,N,V_proxiedClientAppName
reachableEmails
T@"NSString",&,N,V_proxiedClientServiceID
removeNetworkReachableObserver:
T@"NSString",&,N,V_proxiedDeviceClass
requestWithURL:
T@"NSString",&,N,V_proxiedIdentityToken
responseMessage
T@"NSString",&,N,V_pushToken
selectedRequest
T@"NSString",&,N,V_title
T@"NSString",&,N,V_transferState
setAppleIDAuth:
T@"NSString",&,N,V_wrappedKeyString
setBagProvider:
T@"NSString",C,N
setCanHaveCustodian:forAccount:
T@"NSString",C,N,S_setIdentityToken:,V_identityToken
setCompanionDeviceAnisetteData:
T@"NSString",C,N,S_setMessage:,V_message
setDeviceClass:
T@"NSString",C,N,S_setProxiedAppBundleID:,V_proxiedAppBundleID
setIsEphemeral:
T@"NSString",C,N,S_setProxiedAppName:,V_proxiedAppName
setMasterKeyID:
T@"NSString",C,N,SsetCustodianRecoveryToken:,V_custodianRecoveryToken
setModelNumber:
T@"NSString",C,N,V_MLBSerialNumber
setOwnerDevice:
T@"NSString",C,N,V_accessKeyString
setPresenceSID:
T@"NSString",C,N,V_akAction
setPromptTitle:
T@"NSString",C,N,V_appID
setRequestType:
T@"NSString",C,N,V_appProvidedContext
setServiceType:
T@"NSString",C,N,V_authorizedApplicationsListVersion
setShouldEnableTestAccountMode:
T@"NSString",C,N,V_beneficiaryAccountName
setStringValue:
T@"NSString",C,N,V_beneficiaryFirstName
setWebAccessEnabled:forAccount:
T@"NSString",C,N,V_beneficiaryLastName
setWithObjects:
T@"NSString",C,N,V_beneficiaryPassword
set_isWebLogin:
T@"NSString",C,N,V_bundleID
shouldUpdateAuthModeForAccount:
T@"NSString",C,N,V_callerIconBundlePath
stringByAppendingPathComponent:
T@"NSString",C,N,V_clientAppBundleId
stringRepresentationForService:
T@"NSString",C,N,V_clientBundleID
tokenUpgradeURL
T@"NSString",C,N,V_color
uppercaseString
T@"NSString",C,N,V_continuationToken
utility
T@"NSString",C,N,V_custodianListVersion
verifiedPrimaryEmailForAccount:
T@"NSString",C,N,V_custodianSetupToken
wrappingKeyData
.cxx_destruct
IDMSEnvironment
CGSizeValue
T@"AKDevice",&,N,V_pairedDevice
HTMLHeader
T@"AKFidoContext",&,N,V_context
IDMSEnvironmentFromBag:
T@"NSArray",R,N
IsInlineFlowSupportedConfig
T@"NSData",&,N,V_wrappedKeyData
PCSAuthContextForWebSessionIdentifier:serviceName:completion:
T@"NSData",R,N,V_userIdentifier
ROMAddress
T@"NSDictionary",&,N,V_userInfo
T@"<AKAlertHandlerUIProvider>",W,N,V_uiProvider
T@"NSNumber",C,N,V_housingColor
T@"<AKAppleIDAuthenticationDelegate>",W,N
T@"NSString",C,N,V_displayTitle
T@"<AKAuthorizationUIProvider>",&
T@"NSString",C,N,V_privateEmail
T@"<AKCredential>",&,N,V_credential
T@"NSString",C,N,V_proxiedAppID
T@"<AKCredentialRequestProtocol>",&,N,V_selectedRequest
T@"NSString",C,N,V_recoveryStep
T@"<AKFollowUpProvider>",&,N,V_followupProvider
T@"NSString",R,C,N,V_bundleName
T@"<AKPrivateEmailUIProvider>",&,N,V_uiProvider
T@"NSURL",R,C,N
T@"AAFXPCSession",&,N,V_remoteService
TB,N,V__cliMode
T@"ACAccount",R,N
TB,N,V_resolved
T@"ACAccountType",R,N
TB,N,V_shouldSendAbsintheHeader
T@"AKAlertHandler",R,N
TB,N,V_signInAllowsPCSKeyAccess
T@"AKAnisetteData",&,N,V_proxiedDeviceAnisetteData
TQ,N,V_authMode
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
T@"AKAppleIDAuthenticationController",&,N,V_authenticationController
_aaData
T@"AKAppleIDServerResourceLoadDelegate",&,N,V_resourceLoadDelegate
_activeSecondFactoryEntryPrompt
T@"AKAttestationSigner",R,N
_authCompletion
T@"AKAuthorizationRequest",R,C,N,V_request
_authkitAccount
T@"AKAuthorizationUpgradeContext",R,N,V_upgradeContext
_cachedSettings
T@"AKCarrierBundleUtilities",R
_canBeCustodian
T@"AKCommandLineUtilities",R,N,V_utility
_clientBundleID
T@"AKDevice",&,N,V_proxiedDevice
_contextManager
T@"AKDevice",C,N,V_companionDevice
_custodianInfos
T@"AKInheritanceAccessKey",&,N,V_accessKey
_daemonEndpoint
T@"AKPushMessage",&,N,V_responseMessage
_enclosureColor
T@"AKUserInformation",C,N,V_userInformation
_expirationDate
T@"AKWalrusConfig",R,N,V_cachedConfig
_hasMDM
T@"NSArray",&,N,V_proxiedAssociatedDomains
_isRapportLogin
T@"NSArray",C,N,V_associatedDomains
_lastRetryError
T@"NSArray",C,N,V_beneficiaryUUIDs
_number
T@"NSArray",C,N,V_custodianInfos
_osName
T@"NSArray",C,N,V_loggedInServices
_phoneAsAppleID
T@"NSArray",C,N,V_operatingSystems
_proxiedAppName
T@"NSArray",C,N,V_orphanedCustodianUUIDs
_remoteListener
T@"NSArray",C,N,V_reachableEmails
_requestOptions
T@"NSArray",C,N,V_scopes
_serviceTypesForSecurityUpgrade
T@"NSArray",C,N,V_services
_shouldRequestConfigurationInfo
T@"NSArray",R,C,N,V_authorizedScopes
_status
T@"NSArray",R,N,V_accessibleBundleInformation
_strongReceiver
T@"NSCondition",&,N,V_valueCondition
_underlyingTask
T@"NSData",&,N,V_data
_upgradeContext
T@"NSData",&,N,V_wrappingKeyData
_userIdentifier
T@"NSData",C,N,V_encryptedPRKC
_wrappedKeyData
T@"NSData",C,N,V_iconData
absintheCertURL
T@"NSData",R,C,N
actions
T@"NSData",R,C,N,V_iconData
ak_SHA256String
T@"NSData",R,N
ak_addCustodianSyncActionHeader
T@"NSDate",&,N,V_beginDate
ak_addOTStatusHeaderForAltDSID:
T@"NSDate",C,N,V_lastDataSyncTimestamp
ak_addPrivateEmailOriginHeader:
T@"NSDate",R,C,N,V_timestamp
ak_base64EncodedJsonFromObject:
T@"NSDateFormatter",R,N
ak_map:
T@"NSDictionary",C,N
ak_redactedCopy
T@"NSDictionary",C,N,V_appProvidedData
allHeaderFields
T@"NSDictionary",C,N,V_attestationHeaders
altDSID
T@"NSDictionary",C,N,V_custodianOperationsByID
appProvidedData
T@"NSDictionary",R,C,N,V_additionalInfo
appleIDAuthorizeHTMLResponseURL
T@"NSDictionary",R,C,N,V_teams
authorizationRequestFinishedWithAuthorization:error:completion:
T@"NSError",&,N,V_lastRetryError
base64EncodedStringWithOptions:
T@"NSMutableArray",&,N,V_internalWrapper
cancelDataTask:
T@"NSNumber",&,N,V_hasEmptyPasswordOverride
clearNotificationForItem:error:
T@"NSNumber",&,N,V_loginChoice
clientErrorCode
T@"NSNumber",C,N
containsObject:
T@"NSNumber",C,N,SsetHasEmptyPassword:,V_hasEmptyPassword
context
T@"NSNumber",C,N,V_canBeBeneficiary
credentialForAccount:serviceID:
T@"NSNumber",C,N,V_canHaveBeneficiary
custodianListVersionForAccount:
T@"NSNumber",C,N,V_coverGlassColor
dealloc
T@"NSNumber",C,N,V_custodianLastModified
forceSilentAuth
T@"NSNumber",C,N,V_hasMDM
informativeText
T@"NSNumber",C,N,V_iconScale
initWithFormat:
T@"NSNumber",C,N,V_isNotificationEmailAvailable
initWithRelyingPartyIdentifier:
T@"NSNumber",C,N,V_isUnderage
integratedCircuitCardIdentifier
T@"NSNumber",C,N,V_managedOrganizationType
isEligibleToArmDeviceForPCSAuth
T@"NSNumber",C,N,V_presenceCheckPassed
isInternalBuild
T@"NSNumber",C,N,V_privateAttestationEnabled
isMultiUserMode
T@"NSNumber",C,N,V_serverExperimentalFeatures
isValid
T@"NSNumber",C,N,V_webAccessEnabled
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
lastUpdatedDate
T@"NSSet",R,N
lowercaseString
T@"NSString",&,N,V_alternativeButtonString
maxWait
T@"NSString",&,N,V_callerBundleID
needsNewAppleID
T@"NSString",&,N,V_claimTokenString
oneTimePassword
T@"NSString",&,N,V_identityTokenValue
originalRequest
T@"NSString",&,N,V_localizedStatusDescription
passwordRequest
T@"NSString",&,N,V_numberWithDialCode
perform
T@"NSString",&,N,V_origin
performSilentTTRFor:completion:
T@"NSString",&,N,V_primaryClientID
presentServerProvidedUIForContext:withConfiguration:completion:
T@"NSString",&,N,V_proxiedClientAppID
protectionSpace
T@"NSString",&,N,V_proxiedClientBundleID
release
T@"NSString",&,N,V_proxiedClientTeamID
request
T@"NSString",&,N,V_proxiedDeviceName
requestedScopes
T@"NSString",&,N,V_pushMode
selectedPrivateEmailForAccount:
T@"NSString",&,N,V_serverInfo
serviceWithDefaultShellEndpoint
T@"NSString",&,N,V_transactionId
setAccountName:
T@"NSString",&,N,V_windowTitle
setAuthContext:
T@"NSString",&,N,V_wrappingKeyString
setCanBeBeneficiary:forAccount:
T@"NSString",C,N,S_setHeartbeatToken:,V_heartbeatToken
setClearAction:
T@"NSString",C,N,S_setMasterKey:,V_masterKey
setCustodianEnabled:forAccount:
T@"NSString",C,N,S_setPassword:,V_password
setDeviceColor:
T@"NSString",C,N,S_setProxiedAppName:
setLoginChoice:
T@"NSString",C,N,S_setShortLivedToken:,V_shortLivedToken
setMaxConcurrentOperationCount:
T@"NSString",C,N,V_DSID
setNeedsRepair:
T@"NSString",C,N,V_ROMAddress
setPhoneNumber:
T@"NSString",C,N,V_accountName
setPresentationContextProvider:
T@"NSString",C,N,V_altDSID
setRepairState:
T@"NSString",C,N,V_appName
setRoutingInfo:
T@"NSString",C,N,V_appleIDCountryCode
setShouldAllowExperimentalMode:
T@"NSString",C,N,V_bagUrlKey
setShouldPromptForPasswordOnly:
T@"NSString",C,N,V_beneficiaryAltDSID
setURL:
T@"NSString",C,N,V_beneficiaryIdentifier
setWindowTitle:
T@"NSString",C,N,V_beneficiaryListVersion
set_authSessionTimeoutInterval:
T@"NSString",C,N,V_beneficiarySetupToken
settingsServiceTokenForAccount:
T@"NSString",C,N,V_bundleIconName
silentEscrowRecordRepairEnabled
T@"NSString",C,N,V_cellularDataAttributionAppBundleID
stringFromDate:
T@"NSString",C,N,V_clientAppName
syncAnisetteURL
T@"NSString",C,N,V_clientID
trusted
T@"NSString",C,N,V_continuationRequestIdentifier
userInformation
T@"NSString",C,N,V_continuityIDMSData
validateCodeURL
T@"NSString",C,N,V_custodianRecoveryToken
webAccessStatus
T@"NSString",C,N,V_dataCenterIdentifier
T@"NSString",C,N,V_defaultButtonString
T@"NSString",C,N,V_dependentAltDSID
T@"NSString",C,N,V_deviceClass
T@"NSString",C,N,V_deviceName
T@"NSString",C,N,V_displayString
T@"NSString",C,N,V_enclosureColor
T@"NSString",C,N,V_encodedRecoveryIdentityToken
T@"NSString",C,N,V_encodedRecoveryPET
T@"NSString",C,N,V_extensionIdentifier
T@"NSString",C,N,V_externalAuthToken
T@"NSString",C,N,V_familyName
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_followupItems
T@"NSString",C,N,V_forwardingEmail
T@"NSString",C,N,V_givenName
T@"NSString",C,N,V_hashedWrappingKeyRKC
T@"NSString",C,N,V_heartbeatToken
T@"NSString",C,N,V_helpAnchor
T@"NSString",C,N,V_helpBook
T@"NSString",C,N,V_iconName
T@"NSString",C,N,V_identityToken
T@"NSString",C,N,V_idmsData
T@"NSString",C,N,V_incorrectKeyPresentedMessage
T@"NSString",C,N,V_informativeText
T@"NSString",C,N,V_initialURLRequestKey
T@"NSString",C,N,V_itemIdentifier
T@"NSString",C,N,V_lastName
T@"NSString",C,N,V_localizedAppName
T@"NSString",C,N,V_localizedCallerName
T@"NSString",C,N,V_machineID
T@"NSString",C,N,V_managedOrganizationName
T@"NSString",C,N,V_masterKeyID
T@"NSString",C,N,V_modelNumber
T@"NSString",C,N,V_name
T@"NSString",C,N,V_nonce
T@"NSString",C,N,V_notificationEmail
T@"NSString",C,N,V_oneTimePassword
T@"NSString",C,N,V_ownerCustodianAltDSID
T@"NSString",C,N,V_passwordPromptTitle
T@"NSString",C,N,V_passwordResetToken
T@"NSString",C,N,V_phoneNumber
T@"NSString",C,N,V_phoneNumberCertificate
T@"NSString",C,N,V_previouslySelectedEmail
T@"NSString",C,N,V_primaryEmailAddress
T@"NSString",C,N,V_privacyBundleIdentifier
T@"NSString",C,N,V_privateEmailBundleId
T@"NSString",C,N,V_privateEmailDomain
T@"NSString",C,N,V_privateEmailListVersion
T@"NSString",C,N,V_promptBody
T@"NSString",C,N,V_promptTitle
T@"NSString",C,N,V_provisioningDeviceIdentifier
T@"NSString",C,N,V_proxiedAppName
T@"NSString",C,N,V_proxiedBundleIdentifier
T@"NSString",C,N,V_pushToken
T@"NSString",C,N,V_rawAccountPassword
T@"NSString",C,N,V_realUserVerificationData
T@"NSString",C,N,V_reason
T@"NSString",C,N,V_recoverySessionID
T@"NSString",C,N,V_representingBundlePath
T@"NSString",C,N,V_securityUpgradeContext
T@"NSString",C,N,V_selectedEmail
T@"NSString",C,N,V_serverFriendlyDescription
T@"NSString",C,N,V_serviceID
T@"NSString",C,N,V_serviceTokenIdentifier
T@"NSString",C,N,V_sessionID
T@"NSString",C,N,V_site
T@"NSString",C,N,V_state
T@"NSString",C,N,V_stringValue
T@"NSString",C,N,V_teamID
T@"NSString",C,N,V_transactionID
T@"NSString",C,N,V_txnid
T@"NSString",C,N,V_uniqueDeviceIdentifier
T@"NSString",C,N,V_user
T@"NSString",C,N,V_userID
T@"NSString",C,N,V_userIdentifier
T@"NSString",C,N,V_username
T@"NSString",R,C
T@"NSString",R,C,N
T@"NSString",R,C,N,V_altDSID
T@"NSString",R,C,N,V_authorizedAppListVersion
T@"NSString",R,C,N,V_backingColorCode
T@"NSString",R,C,N,V_buildNumber
T@"NSString",R,C,N,V_bundleDescription
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_clientAppBundleId
T@"NSString",R,C,N,V_colorCode
T@"NSString",R,C,N,V_coverGlassColorCode
T@"NSString",R,C,N,V_enclosureColorCode
T@"NSString",R,C,N,V_housingColorCode
T@"NSString",R,C,N,V_iconName
T@"NSString",R,C,N,V_key
T@"NSString",R,C,N,V_machineID
T@"NSString",R,C,N,V_machineId
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_operatingSystemName
T@"NSString",R,C,N,V_operatingSystemVersion
T@"NSString",R,C,N,V_password
T@"NSString",R,C,N,V_privateEmailAddress
T@"NSString",R,C,N,V_serialNumber
T@"NSString",R,C,N,V_state
T@"NSString",R,C,N,V_transactionID
T@"NSString",R,C,N,V_upgradeBundleIdentifier
T@"NSString",R,C,N,V_userIdentifier
T@"NSString",R,C,N,V_webSessionIdentifier
T@"NSString",R,N
T@"NSString",R,N,V_attestationsData
T@"NSString",R,N,V_authenticatorData
T@"NSString",R,N,V_challenge
T@"NSString",R,N,V_clientData
T@"NSString",R,N,V_credentialName
T@"NSString",R,N,V_displayName
T@"NSString",R,N,V_originalChallenge
T@"NSString",R,N,V_relyingPartyIdentifier
T@"NSString",R,N,V_rootPath
T@"NSString",R,N,V_signature
T@"NSString",R,N,V_userIdentifier
T@"NSURL",C,N,V_recoveryContinuationURL
T@"NSURL",R,N
T@"NSURLRequest",&,N,V_request
T@"NSURLSessionDataTask",&,N,V_underlyingTask
T@"NSUUID",&,N,V_presenceSID
T@"NSUUID",C,N,V_custodianUUID
T@"NSUUID",C,N,V_uuid
T@"NSUUID",R,C,N
T@"NSUUID",R,C,N,V_requestIdentifier
T@"NSUUID",R,C,N,V_transactionID
T@"NSUUID",R,N,V_beneficiaryID
T@"NSUUID",R,N,V_identifier
T@"NSValue",C,N,V_iconSize
T@"NSXPCConnection",&,N,V_xpcConnection
T@"NSXPCInterface",R,N
T@"NSXPCListener",&,N,V_remoteListener
T@"NSXPCListenerEndpoint",R,N,V_listenerEndpoint
T@,&,N,V_clientInfo
T@?,C,N,V_authCompletion
T@?,C,N,V_completionHandler
T@?,C,N,V_deallocHandler
T@?,C,N,V_interruptionHandler
T@?,C,N,V_invalidationHandler
T@?,C,N,V_presentationCompletion
T@?,C,N,V_registrationCompletion
TB,N
TB,N,G_isForcedEligibleForForegroundAuthentication,Sset_forceEligibleForForegroundAuthentication:,V_forceEligibleForForegroundAuthentication
TB,N,GisAppleIDAuthorization,V_appleIDAuth
TB,N,GisCustodianSyncAction,V_custodianSyncAction
TB,N,GshouldCreateAppleID,V_createAppleID
TB,N,S_setProxyingForApp:,V_isProxyingForApp
TB,N,SsetFirstTimeLogin:,V_isFirstTimeLogin
TB,N,SsetTriggeredByNotification:,V_isTriggeredByNotification
TB,N,V__notifyOfTimeout
TB,N,V__usesAppleIDContext
TB,N,V_alwaysShowUsernameField
TB,N,V_anticipateEscrowAttempt
TB,N,V_canceledOrCompleted
TB,N,V_cliMode
TB,N,V_clientAuthenticatedExternallyWithPassword
TB,N,V_clientShouldAuthenticateExternally
TB,N,V_clientShouldHandleAlternativeButtonAction
TB,N,V_deviceRegionRequired
TB,N,V_forceSilentAuth
TB,N,V_hideAlternativeButton
TB,N,V_hideCancelButton
TB,N,V_hideReasonString
TB,N,V_includeFamilyDevices
TB,N,V_includeUntrustedDevices
TB,N,V_isContinuityPush
TB,N,V_isEligibleForUpgradeFromPassword
TB,N,V_isEphemeral
TB,N,V_isFirstPartyLogin
TB,N,V_isLikelyRealUser
TB,N,V_isPasswordEditable
TB,N,V_isProxy
TB,N,V_isRapportLogin
TB,N,V_isSilentAppTransfer
TB,N,V_isUsernameEditable
TB,N,V_isWebLogin
TB,N,V_keepAlive
TB,N,V_keyAndBundleIdAreHashed
TB,N,V_makePrivateEmail
TB,N,V_mandatesRecoveryKey
TB,N,V_needsCredentialRecovery
TB,N,V_needsNewAppleID
TB,N,V_needsNewChildAccount
TB,N,V_needsPasswordChange
TB,N,V_needsRepair
TB,N,V_needsSecurityUpgradeUI
TB,N,V_ownerDevice
TB,N,V_performUIOutOfProcess
TB,N,V_requirePassword
TB,N,V_shouldAllowAppleIDCreation
TB,N,V_shouldForceInteractiveAuth
TB,N,V_shouldForcePrivateEmail
TB,N,V_shouldForceUI
TB,N,V_shouldIgnoreTeamID
TB,N,V_shouldIgnoreUserID
TB,N,V_shouldOfferSecurityUpgrade
TB,N,V_shouldPreventInteractiveAuth
TB,N,V_shouldPromptForPasswordOnly
TB,N,V_shouldRequestConfigurationInfo
TB,N,V_shouldRequestShortLivedToken
TB,N,V_shouldSendEphemeralAuthHeader
TB,N,V_shouldSendGrandSlamTokensForRemoteUI
TB,N,V_shouldSendICSCIntentHeader
TB,N,V_shouldSendIdentityTokenForRemoteUI
TB,N,V_shouldSendLocalUserHasAppleIDLoginHeader
TB,N,V_shouldSendPhoneNumber
TB,N,V_shouldSkipAuthorizationUI
TB,N,V_shouldSkipBiometrics
TB,N,V_shouldSkipInitialReachabilityCheck
TB,N,V_shouldSkipSettingsLaunchAlert
TB,N,V_shouldUpdatePersistentServiceTokens
TB,N,V_shouldUseProxiedClientBundleIDForSRP
TB,N,V_supportsMasterKeyRecovery
TB,N,V_supportsPiggybacking
TB,N,V_supportsPresence
TB,N,V_termsAccepted
TB,N,V_useAlternativeKeysIcon
TB,N,V_waitForReply
TB,N,VcliMode
TB,R
TB,R,N
TB,R,N,GIsInlineFlowSupportedConfig
TB,R,N,GisContextEligibleForBiometricOrPasscodeAuth
TB,R,N,GisContextEligibleForSilentAuth
TB,R,N,GisContextEligibleForSilentAuthCoercion
TB,R,N,GisContextRequestingReauthForExistingService
TB,R,N,GisLisbonAvailable
TB,R,N,GisPhoneNumberSupportedConfig
TB,R,N,GisSettingsInlineLogoViewDisabled
TB,R,N,V_inCircle
TB,R,N,V_isEligibleForUpgradeFromPassword
TB,R,N,V_isInRestrictedSharingMode
TB,R,N,V_isNetworkReachable
TB,R,N,V_trusted
TQ,N
TQ,N,SsetLinkType:,V_linkType
TQ,N,V_appleIDSecurityLevel
TQ,N,V_attemptIndex
TQ,N,V_authenticationMode
TQ,N,V_authenticationType
TQ,N,V_circleStep
TQ,N,V_maskingStyle
TQ,N,V_presentationType
TQ,N,V_repairState
TQ,N,V_requestOptions
TQ,N,V_requestType
TQ,N,V_retryCount
TQ,N,V_routingInfo
TQ,R
TQ,R,N
TQ,R,N,V_bundleType
TQ,R,N,V_operation
Td,N,V_authSessionTimeoutInterval
Td,N,V_maxWait
Td,N,V_waitForReplyTimeout
Tq,N
Tq,N,V_authenticationPromptStyle
Tq,N,V_clientErrorCode
Tq,N,V_existingStatus
Tq,N,V_featureStatus
Tq,N,V_maximumLoginAttempts
Tq,N,V_notificationAction
Tq,N,V_presenceMode
Tq,N,V_serviceType
Tq,N,V_shouldEnablePiggybackingPresence
Tq,N,V_slotID
Tq,N,V_state
Tq,N,V_status
Tq,N,V_verifyCredentialReason
Tq,R,N,V_manifestOptions
Tq,R,N,V_verificationType
URLByAppendingPathComponent:
URLQueryAllowedCharacterSet
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:getAppleIDRequestOrHeadersForResponse:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSessionDidFinishEventsForBackgroundURLSession:
URLWithSize:cropStyle:format:
URLWithString:
UTF8String
UUID
UUIDString
XPCInterface
_DSID
_IDMSEnvironmentFromString:
_MLBSerialNumber
_ROMAddress
_URLSession
_URLWithString:byAppendingParameters:
__authController
__cliMode
__notifyOfTimeout
__usesAppleIDContext
_accessKey
_accessKeyString
_accessibleBundleInformation
_accountCreationRequestBodyFromResponseDictionary:shouldIncludePhoneNumber:shouldIncludeForSecurityCode:
_accountDictionary
_accountName
_accountQueue
_accountStore
_accountTypeCache
_accountTypeCacheLock
_accountTypeForServiceType:
_actionFromInfo:pushMessageInfo:
_actionsFromPayload:pushMessageInfo:
_addPresentationParametersForContext:
_addPresenterParameters
_additionalAbsintheHeadersForRequest:completion:
_additionalAttestationHeadersForRequest:options:completion:
_ageOfMajority
_akAction
_ak_dataForEncodedHeaderWithKey:
_ak_shortenServiceIdentifier:
_ak_truncateTokenDict:
_ak_truncateTokenString:
_aliasesForiCloudAccount:
_alignedInsertionCandidates:withExistingItems:
_altDSID
_altDSIDForiCloudAccount:
_alternativeButtonString
_alwaysShowUsernameField
_anisetteControllerLock
_anisetteDataProvider
_anisetteServiceConnection
_anticipateEscrowAttempt
_appID
_appName
_appProvidedContext
_appProvidedData
_appendBlameIfRequiredTo:
_appleIDAccountType
_appleIDAccountTypeLock
_appleIDAuth
_appleIDAuthorizationURLs
_appleIDCountryCode
_appleIDSecurityLevel
_appleOwnedDomains
_apps
_artworkURLFromResult:size:updatingIconContext:
_associatedDomains
_attemptIndex
_attestationHeaders
_attestationsData
_authContext
_authContextsByUUID
_authContextsQueue
_authKitAccountType
_authKitAccountTypeLock
_authMode
_authRequestFromContext:
_authSessionTimeoutInterval
_authenticationController
_authenticationMode
_authenticationPromptStyle
_authenticationServiceConnection
_authenticationType
_authenticatorData
_authorizationCode
_authorizationRequest
_authorizedAppListVersion
_authorizedApplicationsListVersion
_authorizedRequest
_authorizedScopes
_baaSignatureForData:completion:
_baaSignaturesForData:completion:
_backingColor
_backingColorCode
_bagProvider
_bagUrlKey
_beginDataTaskWithRequest:configuration:completion:
_beginDate
_beneficiaryAccountName
_beneficiaryAltDSID
_beneficiaryContacts
_beneficiaryFirstName
_beneficiaryID
_beneficiaryIdentifier
_beneficiaryLastName
_beneficiaryListVersion
_beneficiaryOperationsByID
_beneficiaryPassword
_beneficiarySetupToken
_beneficiaryUUIDs
_birthday
_block
_buildNumber
_bundleDescription
_bundleID
_bundleIdentifier
_bundleName
_bundleType
_bundleTypeFrom:
_cachedConfig
_cachedIsLisbonAvailable
_callCompletionWithData:error:
_callCompletionWithResults:password:additionalData:error:
_callerIconBundlePath
_canBeBeneficiary
_canHaveBeneficiary
_canHaveCustodian
_cancelButtonString
_canceledOrCompleted
_capabilityForUIDisplay
_carrierUtilitiesQueue
_cdpUiProvider
_cellularDataAttributionAppBundleID
_challenge
_circleStep
_claimTokenString
_clearAction
_clearRawPasswordForAccount:
_cliMode
_clientAppBundleId
_clientAppName
_clientAuthenticatedExternallyWithPassword
_clientData
_clientErrorCode
_clientID
_clientImpl
_clientInfo
_clientShouldAuthenticateExternally
_clientShouldHandleAlternativeButtonAction
_clientSideContextForServerContext:
_collectAndHandleTermsAndConditionsWithResponseDictionary:configuration:completion:
_collectAndPostSecondFactorCodeWithRequestBody:configuration:completion:
_color
_colorCode
_companionDevice
_companionDeviceAnisetteData
_completeWithError:
_completionHandler
_configurationsFromCache:withError:
_configureNotificationServiceWithCompletion:
_configureStateBroadcastServiceWithCompletion:
_connection
_connectionInterrupted
_connectionInterruptionHandler
_connectionInvalidated
_connectionInvalidationHandler
_context
_contextCreationDate
_continuationHeaders
_continuationRequestIdentifier
_continuationToken
_continuityIDMSData
_controller
_convertOperationToEnum:
_coverGlassColor
_coverGlassColorCode
_createAppleID
_createContextDictionaryFromResponse:
_createURLSessionUsesAppleIDContext:
_credential
_credentialID
_credentialRequestContext
_credentials
_currentBags
_currentDeviceAuthenticationMode
_custodianContacts
_custodianEnabled
_custodianLastModified
_custodianListVersion
_custodianOperationsByID
_custodianRecoveryToken
_custodianSetupToken
_custodianSyncAction
_custodianUUID
_daemonConnection
_daemonXPCEndpoint
_data
_dataCenterIdentifier
_dateFormatter
_defaultButtonString
_defaultSecurityUpgradeServiceNames
_delegate
_dependentAltDSID
_desiredInternalTokens
_deviceClass
_deviceColor
_deviceEnclosureColor
_deviceName
_deviceRegionRequired
_dictionaryWithPlistData:
_displayImageData
_displayName
_displayString
_displayTitle
_enclosureColorCode
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_encryptedPRKC
_endpoint
_expiryDate
_exportedInterface
_extensionIdentifier
_externalAuthToken
_externalLocalAuthData
_extractWalrusConfigWithAccountCountry:fromGlobalConfig:
_factory
_familyName
_featureStatus
_fetchApplicationNameForBundleId:
_fetchURLBagWithCompletion:
_filterDeprecatedType:
_firstName
_followupController
_followupItems
_followupProvider
_forceEligibleForForegroundAuthentication
_forceSilentAuth
_formattedValueForPhoneNumber:countryCode:
_forwardingEmail
_generateAppleIDHeadersForRequest:error:
_generateAppleIDHeadersForSessionTask:withCompletion:
_generatedCode
_genericAppleIDHeadersDictionaryForRequest:
_givenName
_group
_groupKitEligibility
_handleAnissetteURLResponse:forRequest:withCompletion:
_handleInvalidMasterTokenWithSubErrorCode:
_handleSecondFactorCodeEntry
_handleServerUIBirthdayVerificationWithResponseDictionary:configuration:completion:
_handleServerUIPasswordVerificationWithResponseDictionary:configuration:completion:
_handleServerUIPhoneVerificationWithResponseDictionary:configuration:completion:
_handleServerUISMSVerificationWithResponseDictionary:statusCode:configuration:completion:
_handleServerUISecondFactorWithObjectModel:configuration:completion:
_handleServerUIWithDictionary:statusCode:configuration:completion:
_handleURLSwitchingResponse:forRequest:withCompletion:
_hardwareModel
_harvestContinuationHeadersFromHeaders:
_hasApplicationMetaData
_hasEmptyPassword
_hasEmptyPasswordOverride
_hasUsedAuthorization
_hashedWrappingKeyRKC
_heartbeatTokenValue
_helpAnchor
_helpBook
_hideAlternativeButton
_hideCancelButton
_hideReasonString
_hostURL
_housingColor
_housingColorCode
_httpHeadersForRemoteUI
_iCloudAccountType
_iCloudAccountTypeLock
_iconData
_iconName
_iconScale
_iconSize
_identifier
_identityToken
_identityTokenValue
_idmsData
_inCircle
_includeFamilyDevices
_includeUntrustedDevices
_incorrectKeyPresentedMessage
_informativeText
_initWithIdentifier:
_initWithInfo:
_initWithInterface:object:
_initialURLKey
_initialURLRequestKey
_internalQueue
_internalWrapper
_interpolatedReason
_interpolatedReasonWithBlame
_interruptionHandler
_invalidationHandler
_invocationByObserver
_isAccountEligibleForSecurityUpgrade:ofServiceType:
_isAllOptionsSelected
_isAppleIDLoginEnabled
_isContextRequestingReauthForExistingService
_isContinuityPush
_isEligibleForUpgradeFromPassword
_isEphemeral
_isFirstPartyLogin
_isFirstTimeLogin
_isForcedEligibleForForegroundAuthentication
_isInRestrictedSharingMode
_isLegacyStudent
_isLikelyRealUser
_isNetworkReachable
_isNotificationEmailAvailable
_isOTCliqueStatusIn
_isPasswordEditable
_isProxy
_isProxyingForApp
_isResponseSuccessful:
_isSenior
_isSilentAppTransfer
_isSilentEscrowRecordRepairEnabledForAccount:
_isSubscriptionLogin
_isTriggeredByNotification
_isUnderage
_isUsernameEditable
_isVerifyCredentialReasonEligibleForBiometricOrPasscodeAuth
_isWebLogin
_itemFromPayload:pushMessageInfo:withAltDSID:
_jsonPostbackDictionaryForCode:numberId:
_keepAlive
_key
_keyAndBundleIdAreHashed
_lastDataSyncTimestamp
_lastName
_lastUpdatedDate
_latitude
_linkType
_listener
_listenerEndpoint
_localPresenceFound
_localUserHasEmptyPassword
_localizedAppName
_localizedCallerName
_localizedStatusDescription
_lock
_loggedInServices
_loginChoice
_loginChoices
_longitude
_machineID
_machineIDs
_machineId
_makePrivateEmail
_managedOrganizationName
_managedOrganizationType
_mandatesRecoveryKey
_manifest
_manifestOptions
_mapICSCRecoveryResultsToAuthKit:
_maskingStyle
_masterKey
_masterKeyID
_matchingServiceAccountForAuthKitAccount:service:
_maxWait
_maximumLoginAttempts
_message
_model
_modelNumber
_name
_nativeAnisetteController
_needsCredentialRecovery
_needsNewAppleID
_needsNewChildAccount
_needsPasswordChange
_needsRepair
_needsSecurityUpgradeUI
_networkReachabilityDidChange
_nonce
_notificationAction
_notificationDisclaimer
_notificationEmail
_notificationFromPayload:pushMessageInfo:
_notificationToken
_notifyOfTimeout
_numberWithDialCode
_obfuscatedNumber
_observerQueue
_oneTimePassword
_openPasscodeSetup
_openSpyglass
_openUpgradeAccountSecurityLevelWithBundleID:
_operatingSystemName
_operatingSystemVersion
_operatingSystems
_operation
_originalChallenge
_orphanedBeneficiaryUUIDs
_orphanedCustodianUUIDs
_osVersion
_otherInfo
_ownerAppleID
_ownerCustodianAltDSID
_ownerDevice
_pairedDevice
_parseCustodiansInfo:
_parseHeaderTitleForPasscodeView:
_parseTrustedPhoneNumberFromResponseDictionary:
_passcodeProtected
_password
_passwordPromptTitle
_passwordRequest
_passwordResetToken
_pathMonitor
_payload
_performUIOutOfProcess
_phoneCertificate
_phoneInformation
_phoneNumber
_phoneNumberCertificate
_populateCustomStringsFromContext:
_presenceCheckPassed
_presenceFallbackApproved
_presenceMode
_presenceSID
_presentServerUISecondFactorWithConfiguration:completion:
_presentationCompletion
_presentationType
_previouslySelectedEmail
_previouslyWantedPrivateEmail
_primaryClientID
_primaryEmailAddress
_privacyBundleIdentifier
_privateAttestationEnabled
_privateEmail
_privateEmailAddress
_privateEmailBundleId
_privateEmailDomain
_privateEmailListVersion
_promptBody
_promptForBirthday
_promptForFirstName
_promptForLastName
_promptForPassword
_promptForPhoneNumber
_promptForUsername
_promptForVerificationCodeWithSecureEntry:forTrustedNumber:
_promptHeader
_promptTitle
_promptUserForSelectionWithTrustedNumbers:
_promptUserForTermsWithResponseDictionary:
_properties
_provider
_provisioningDeviceIdentifier
_proxiedAnisetteData
_proxiedAppBundleID
_proxiedAppID
_proxiedAssociatedDomains
_proxiedBundleIdentifier
_proxiedClientAppID
_proxiedClientAppName
_proxiedClientBundleID
_proxiedClientServiceID
_proxiedClientTeamID
_proxiedDevice
_proxiedDeviceAnisetteData
_proxiedDeviceAttestationData
_proxiedDeviceClass
_proxiedDeviceName
_proxiedIdentityToken
_proxiedProvisioningController
_proxyAppName
_pushMode
_pushToken
_rawAccountPassword
_reachableEmails
_realUserVerificationData
_receivedData
_recoveryContext
_recoveryContinuationURL
_recoveryController
_recoverySessionID
_recoveryStep
_registrationCompletion
_relyingPartyIdentifier
_remoteService
_removeAllRawPasswordCaches
_removeTokenKey:forAccount:
_repairState
_representingBundlePath
_request
_requestEnvironmentsWithBag:
_requestEnvironmentsWithError:
_requestFromContext:
_requestIdentifier
_requestNewURLBagIfNecessaryWithError:
_requestType
_requestedScopes
_requirePasscodeSet
_requirePassword
_requiresPasswordInput
_resolved
_resourceLoadDelegate
_responseInfo
_responseMessage
_retrieveAndResetContinuationHeaders
_retryCount
_revokeDeviceTrust
_rootPath
_routingInfo
_sanitizeCredentialIDString:
_sanitizedCopy
_scale
_secondFactorCode
_secondFactorQueue
_secondFactoryEntryCompletion
_securityCode
_securityUpgradeContext
_selectedEmail
_selectedRequest
_serialNumber
_serverExperimentalFeatures
_serverFriendlyDescription
_serverInfo
_service
_serviceID
_serviceIdentifiers
_serviceToken
_serviceTokenIdentifier
_serviceType
_serviceTypeForServiceNameString:
_services
_sessionID
_sessionQueue
_setAuthorizationHeaderWithToken:altDSID:key:
_setCurrentSharingMode
_setEncryptedSessionKey:
_setHeartbeatToken:
_setIdentityToken:
_setMasterKey:
_setMessage:
_setPassword:
_setProxiedAppBundleID:
_setProxiedAppName:
_setProxyingForApp:
_setShortLivedToken:
_setShouldUpdateToValue:
_setUsername:forAccount:
_settingsQueue
_setupBeneficiaryAliasWithInheritanceContext:completion:
_sharedService
_shortLivedToken
_shouldAllowAppleIDCreation
_shouldEnablePiggybackingPresence
_shouldForceInteractiveAuth
_shouldForcePrivateEmail
_shouldForceUI
_shouldIgnoreTeamID
_shouldIgnoreUserID
_shouldOfferSecurityUpgrade
_shouldOverrideProxiedBundleIDForContext:
_shouldPreventInteractiveAuth
_shouldPromptForPasswordOnly
_shouldRefreshAccountAndUpdateContext
_shouldRequestRecoveryPET
_shouldRequestShortLivedToken
_shouldSendAbsintheHeader
_shouldSendEphemeralAuthHeader
_shouldSendGrandSlamTokensForRemoteUI
_shouldSendICSCIntentHeader
_shouldSendIdentityTokenForRemoteUI
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendPhoneNumber
_shouldSendSigningHeaders
_shouldShowAlertForManagedAccount:error:
_shouldSkipAuthorizationUI
_shouldSkipBiometrics
_shouldSkipInitialReachabilityCheck
_shouldSkipSettingsLaunchAlert
_shouldUpdateBackingColor
_shouldUpdateColor
_shouldUpdateCoverGlassColor
_shouldUpdateEnclosureColor
_shouldUpdateHousingColor
_shouldUpdateLocale
_shouldUpdateMLBSerialNumber
_shouldUpdateModelNumber
_shouldUpdatePersistentServiceTokens
_shouldUpdateProvisioningDeviceIdentifier
_shouldUpdateROMAddress
_shouldUpdateServerFriendlyDescription
_shouldUpdateUniqueDeviceIdentifier
_shouldUseProxiedClientBundleIDForSRP
_showAlertForAccountNotSupportedWithCompletion:
_showAlertForCannotFindServerWithCompletion:
_showAlertForInsufficientSecurityLevelWithError:completionHandler:
_showAlertForInvalidContextWithCompletion:
_showAlertForManagedAccount:error:withCompletion:
_showAlertForMissingAppleAccountWithCompletion:
_showAlertForPasscodeSetupWithCompletion:
_showAlertForUnderageAccount:withCompletion:
_showAlertForUnverifiedEmailWithCompletion:
_signInAllowsPCSKeyAccess
_signRequest:
_signRequestWithBAAHeaders:
_signWithFeatureOptInHeaders:
_signWithProxiedDeviceHeaders:
_signature
_signerLock
_signingQueue
_site
_start
_startAuthControllerWithRequest:context:
_startListeningForSecondFactorCodeEntryNotification
_startPathMonitor
_started
_state
_stopListeningForSecondFactorCodeEntryNotification
_stopPathMonitor
_stringValue
_supportsMasterKeyRecovery
_supportsPiggybacking
_supportsPresence
_systemVersionDictionary
_targetDevice
_tasksByIdentifier
_teams
_telephonyClient
_termsAccepted
_timestamp
_title
_tokenWithName:forAccount:error:
_transactionID
_transactionId
_transferState
_triggerSilentTTRFor:
_trusted
_txnid
_typeFromString:
_uiProvider
_unfairLock
_uniqueDeviceIdentifier
_unsafe_retryTaskIfPossible:
_updateWithValuesFromContext:
_upgradeBundleIdentifier
_urlAtKey:
_urlBagCache
_urlBagFromCache:altDSID:withError:
_urlBagFromCache:withError:
_urlSession
_useAlternativeKeysIcon
_user
_userInfo
_userInformation
_userSelection
_username
_usesAppleIDContext
_utility
_uuid
_validCloudPartition:
_verificationType
_verifyCredentialReason
_verifySecondFactorCodeWithRequest:completion:
_vettedPrimaryEmail
_volumeGroupUUID
_waitForReply
_waitForReplyTimeout
_weakReceiver
_webAccessEnabled
_webSessionID
_webSessionIdentifier
_whitelistedPathURLs
_windowTitle
_wrappedKeyString
_wrappingKeyData
_wrappingKeyString
_xmlUIRequestForURL:withPostbackDictionary:
_xmlUIRequestForURL:withServerInfo:
_xpcConnection
aaData
abbreviation
absintheSessionURL
absintheSignatureForData:completion:
absoluteString
absoluteURLWithString:
accessKey
accessibleBundleInformation
accountAliases
accountEligibleForUpdate
accountName
accountNamesForAltDSID:
accountNamesForAltDSID:completion:
accountPropertyForKey:
accountRecoveryControllerWithPresentingViewController:
accountTypeForTypeIdentifier:
accountTypeWithAccountTypeIdentifier:error:
accountsUsingService:
accountsWithAccountType:
accountsWithAccountType:options:error:
acsURL
actionWithTitle:andActionKey:
activate
activeIDSPeerDevice
activeLoginCode:
activeServiceNamesForAccount:
addEntriesFromDictionary:
addFollowUpItems:error:
addNetworkReachableObserver:selector:
addObject:
additionalInfo
additionalInfoForAccount:
ageOfMajority
ageOfMajorityForAccount:
akAction
ak_SHA256
ak_SHA256Data
ak_acceptedTermsInfo
ak_addAbsintheHeaderWithValue:
ak_addAcceptedSLAHeaderWithVersion:
ak_addAnisetteHeaders
ak_addAppProvidedContext:
ak_addAppleIDHeaderWithValue:
ak_addAppleIDUserModeHeaderWithValue:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addAuthorizationHeaderWithServiceToken:forAltDSID:
ak_addCDPStatusHeaderForAltDSID:
ak_addCFUHeader:
ak_addCircleStatusHeader
ak_addCircleStatusHeaderForCircleStatus:
ak_addClientApp:
ak_addClientBundleIDHeader:
ak_addClientInfoHeader
ak_addClientTimeHeader
ak_addCompanionClientInfoHeader:
ak_addContextHeaderForServiceType:
ak_addContinutationKeyHeader:
ak_addCountryHeader
ak_addDataCenterHeaderWithIdentifier:
ak_addDeviceConfigurationModeHeader
ak_addDeviceConfigurationModeHeaderForAuthContext:
ak_addDeviceMLBHeader
ak_addDeviceModeHeader
ak_addDeviceModel
ak_addDeviceROMHeader
ak_addDeviceSerialNumberHeader
ak_addDeviceUDIDHeader
ak_addEphemeralAuthHeader
ak_addExecutionModeHeader:
ak_addExperimentModeHeader
ak_addFeatureMaskHeader
ak_addFidoRecoveryTokenHeader:
ak_addGuardianAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithIdentityToken:heartbeatToken:serviceToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithServiceToken:forAltDSID:
ak_addICSCIntentHeader
ak_addICSCRecoveryHeaderWithIdentityToken:forAltDSID:
ak_addInternalBuildHeader
ak_addJSONRequestHeader
ak_addLocalUserHasAppleIDLoginHeader
ak_addLocalUserUUIDHashHeader
ak_addLocaleHeader
ak_addLoggedInServicesHeaderForServices:
ak_addOfferSecurityUpgrade:
ak_addPRKRequestHeader
ak_addPasswordResetKeyHeader:
ak_addPhoneInformationHeaderWithValue:
ak_addPhoneNumberCertificateHeaderWithValue:
ak_addPhoneNumberHeader
ak_addPrivateEmailAppBundleIdHeader:
ak_addPrivateEmailAppNameHeader:
ak_addProvisioningUDIDHeader
ak_addProxiedAnisetteHeaders:
ak_addProxiedAttestationHeaders:
ak_addProxiedAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addProxiedBundleIDHeader:
ak_addProxiedClientInfoHeader:
ak_addProxiedDeviceCountryHeader:
ak_addProxiedDeviceICSCIntentHeader
ak_addProxiedDevicePRKRequestHeader
ak_addProxiedDeviceSerialNumberHeader:
ak_addProxiedDeviceUDIDHeader:
ak_addReAuthenticationHeader
ak_addRecoveryHeaderWithIdentityToken:forAltDSID:
ak_addRequestContextHeader:
ak_addRequestUUIDHeader:
ak_addSKUCountryHeader
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
ak_addShowWarranty
ak_addTimeZoneHeaders
ak_addURLSwitchingHeaderWithURLKey:altDSID:
ak_addWalrusDeviceRegionHeader
ak_addWalrusStatusHeader
ak_anisetteHeadersWithCompanionData:
ak_anisetteHeadersWithData:
ak_arrayWithJSONResponseData:
ak_arrayWithResponseData:
ak_booleanAsInteger
ak_clientInfoHeader
ak_clientTimeHeader
ak_compressedData:
ak_context
ak_dataWithBase64UrlEncodedString:
ak_deviceUDIDHeader
ak_dictionaryWithResponseData:
ak_errorByAppendingUserInfo:
ak_errorWithCode:
ak_errorWithCode:underlyingError:
ak_errorWithCode:userInfo:
ak_filter:
ak_firstObjectMatchingFilter:
ak_hexString
ak_isAuthenticationError
ak_isAuthenticationErrorWithCode:
ak_isBoolean
ak_isEmailAddress
ak_isIncompatibleDevicesError
ak_isServiceError
ak_isSurrogateAuthAlreadyInProgressError
ak_isUnableToPromptError
ak_isUserCancelError
ak_isUserInitiatedError
ak_isUserSkippedError
ak_isUserTryAgainError
ak_jsonDictionaryWithResponseData:
ak_mapObjects:
ak_mapObjectsNullable:
ak_proxiedAnisetteHeadersWithData:
ak_proxiedClientInfoHeadersWithDevice:
ak_proxiedHeadersForDevice:anisetteData:
ak_safeBase64String
ak_serverFriendlyString
ak_setBodyWithParameters:
ak_setContext:
ak_setJSONBodyWithParameters:
ak_stringByZeroPaddingOccurencesOfString:
ak_stringForEncodedHeaderWithKey:
ak_timeZoneHeader
ak_truncatedCopy
ak_urlEncoded
ak_urlQueryString
ak_usesHTTPSScheme
ak_uuidData
ak_valueForEncodedHeaderWithKey:
ak_wrappedAnisetteError:
alertHandlerShowAlert:primaryAction:altAction:
aliasesForAccount:
allAuthKitAccounts
allHTTPHeaderFields
allObjects
allPages
allValues
allocWithZone:
altDSIDForAccount:
altDSIDforPrimaryiCloudAccount
alternativeButtonString
alwaysShowUsernameField
anisetteDataForURLRequest:completion:
anisetteDataForURLRequest:error:
anisetteDataProvider
anisetteDataWithCompletion:
anisetteDataWithError:
anonymousListener
anticipateEscrowAttempt
appID
appIconForBundleID:size:completion:
appProvidedContext
appendData:
appendFormat:
appleIDAccountType
appleIDAccountWithAltDSID:
appleIDAccountWithAppleID:
appleIDAuth
appleIDAuthorizationURLs
appleIDCountryCode
appleIDCountryCodeForAccount:
appleIDHeadersForRequest:
appleIDSecurityLevel
appleOwnedDomains
applicationProxyForIdentifier:
apps
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
artworkDictionary
associatedDomains
attestationDataForDevice:withRequest:completion:
attestationDataForRequest:completion:
attestationHeaders
attestationsData
attributes
authCompletion
authContext
authKitAccountForSilentServiceToken:
authKitAccountType
authKitAccountWithAltDSID:
authKitAccountWithAppleID:
authKitAccountWithDSID:
authMode
authenticateWithContext:completion:
authenticationController
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
authenticationMethod
authenticationMode
authenticationModeForAccount:
authenticationPromptStyle
authenticationRequestFinishedWithResults:password:additionalData:error:
authenticationType
authenticatorData
authkitAccount
authorizationCode
authorizationController:didCompleteWithAuthorization:
authorizationController:didCompleteWithCustomMethod:
authorizationController:didCompleteWithError:
authorizationRequest
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationUsedForAccount:
authorizedAppListVersion
authorizedApplicationsListVersion
authorizedRequest
authorizedScopes
autorelease
autoupdatingCurrentLocale
baaSignaturesForData:completion:
backingColor
backingColorCode
bagForAltDSID:
bagForProfile:profileVersion:
bagProvider
bagSubProfile
bagSubProfileVersion
bagUrlKey
basicAuthURL
beginAuthenticationDataTaskWithRequest:completionHandler:
beginAuthorizationWithContext:completion:
beginDataTaskWithRequest:completionHandler:
beginDate
beneficiaryAccountName
beneficiaryAltDSID
beneficiaryContacts
beneficiaryFirstName
beneficiaryID
beneficiaryIdentifier
beneficiaryLastName
beneficiaryListVersion
beneficiaryListVersionForAccount:
beneficiaryOperationsByID
beneficiaryPassword
beneficiarySetupToken
beneficiaryUUIDs
birthday
boolValue
buildDidStartServerAuthorizationMessage
buildDidTapNotificationMessage
buildFetchAppIconMessage
buildFetchAppIconReplyWithImageData:imageScale:
buildLoginCodeNotificationOptionsWithTitle:body:footer:loginCode:
buildLoginCodeNotificationWithTitle:body:footer:loginCode:
buildNumber
buildReauthenticationContextFromContext:error:
bundleDescription
bundleID
bundleIconName
bundleIdentifier
bundleName
bundleType
bundleWithIdentifier:
bytes
cachedConfig
callerIconBundlePath
canBeBeneficiary
canBeBeneficiaryForAccount:
canBeCustodian
canBeCustodianForAccount:
canEvaluatePolicy:error:
canHaveBeneficiary
canHaveBeneficiaryForAccount:
canHaveCustodian
canHaveCustodianForAccount:
canOpenApplication:reason:
canPerformAuthorization
canPerformAuthorizationRequest:error:
canPerformCredentialRequest:error:
canPerformPasswordRequest:error:
canPerformRequestWithAccount:error:
cancel
cancelAuthorizationWithContext:completion:
cancelButtonString
canceledOrCompleted
caseInsensitiveCompare:
cdpAccountIsOTEnabledForAltDSID:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:verifyMasterKey:completion:
cdpErrorDomain
cdpIDMSRecordMIDKey
cdpIDMSRecordPRKKey
cdpStateUIController
cdpUIControllerWithPresentingViewController:
cdp_isCDPErrorWithCode:
cellularDataAttributionAppBundleID
challenge
changePasswordURL
characterAtIndex:
checkInURL
checkSecurityUpgradeEligibilityForContext:completion:
circleStep
circleURL
claimTokenData
claimTokenString
class
clearNotificationsForItem:error:
clearPendingFollowUpItems:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
clearSessionCacheWithCompletion:
clientAppBundleId
clientAppName
clientBundleID
clientData
clientID
clientInfo
clientShouldHandleAlternativeButtonAction
code
color
colorCode
combinedAliasesAndReachableEmailsForAccount:
companionDeviceAnisetteData
compare:
compare:options:range:
completionHandler
componentsJoinedByString:
componentsSeparatedByString:
componentsWithString:
componentsWithURL:resolvingAgainstBaseURL:
configurationAtKey:
configurationAtKey:fromCache:
configurationInfoURL
configurationInfoWithIdentifiers:forAltDSID:completion:
configurationValueForKey:
configureExportedInterface:
configureRemoteInterface:
conformsToProtocol:
connection
contactKeyVerificationIneligibleDevicesURL
contextEligibleForBiometricOrPasscodeAuth
contextEligibleForSilentAuth
contextEligibleForSilentAuthCoercion
contextForStateRepair
contextRequestingReauthForExistingService
contextWithAuthResults:
continuationHeaderPrefix
continuationToken
continuationTokenForAccount:
continuationTokenForAccount:error:
continueAuthorizationWithContext:completion:
continueFetchingIconForRequestContext:completion:
continueFetchingIconWithCompletion:
continuityIDMSData
controller
controllerWithTargetWebAccessStatus:
copy
copyWithZone:
correspondingApplicationRecord
count
countByEnumeratingWithState:objects:count:
countryCode
coverGlassColorCode
createAndExecuteRequestForPath:requestBody:httpMethod:configuration:completion:
createAppleID
createAppleIDURL
createChildAccountURL
createCredentialAssertionRequestWithChallenge:
createCredentialRegistrationRequestWithChallenge:displayName:name:userID:
creationDate
credential
credentialForAccount:error:
credentialID
credentialItemForKey:
credentialName
credentialRequestContext
credentialRequests
credentialStateDidChange:completion:
credentialStateDidChange:forApplicationWithClientID:
credentials
currentConnection
currentDevice
currentDeviceAuthenticationModeForAuthContext:
currentLocale
custodianCodeConfiguration
custodianContacts
custodianEnabled
custodianEnabledForAccount:
custodianInfos
custodianInfosForAccount:
custodianLastModified
custodianLastModifiedForAccount:
custodianListVersion
custodianOperationsByID
custodianRecoveryToken
custodianSetupToken
custodianSyncAction
custodianUUID
custodianUUIDs
data
dataCenterIdentifier
dataRecoveryServiceDisableURL
dataRecoveryServiceEnableURL
dataTaskWithRequest:
dataUsingEncoding:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
date
dateFormatter
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
deallocHandler
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodedRecoveryIdentityTokenString
decodedRecoveryPETString
decorateWithContext:
decorateWithPrivateEmailContext:
defaultButtonString
defaultSessionConfiguration
defaultSessionObjectWithConfiguration:
defaultWorkspace
delegate
deleteAuthorizationDatabase:
deleteAuthorizationDatabaseWithCompletion:
deleteAuthorizedAppURL
deletePrivateEmailDatabaseWithCompletion:
demoAccountForAccount:
dependentAltDSID
description
desiredInternalTokens
deviceClass
deviceColor
deviceEnclosureColor
deviceListURL
deviceName
deviceRegionRequired
deviceSpecificLocalizedStringWithKey:
deviceSpecificLocalizedStringWithKey:inTable:
deviceTrustRevokedForAccount:
deviceWithSerializedData:
dictionary
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dismissAlert:
dismissBasicLoginUIForContext:completion:
dismissBasicLoginUIWithCompletion:
dismissKeepUsingUIForContext:withCompletion:
dismissKeepUsingUIWithCompletion:
dismissNativeRecoveryUIForContext:completion:
dismissNativeRecoveryUIWithCompletion:
dismissSecondFactorUIForContext:completion:
dismissSecondFactorUIWithCompletion:
dismissServerProvidedUIForContext:completion:
dismissServerProvidedUIWithCompletion:
displayImageData
displayName
displayString
displayStyle
displayTitle
domain
doubleValue
dsid
enclosureColor
enclosureColorCode
encodeBool:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedRecoveryIdentityToken
encodedRecoveryPET
encryptedPRKC
encryptedSessionKey
endProvisioningURL
endpoint
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
eraseAnisetteForContext:withCompletion:
eraseAnisetteForDevice:completion:
eraseAnisetteWithCompletion:
eraseWithCompletion:
error
errorFromServerResponseBody:
errorWithDomain:code:userInfo:
escapeHatchURL
establishConnectionWithNotificationHandlerEndpoint:completion:
establishConnectionWithStateBroadcastHandlerEndpoint:completion:
evaluatePolicy:options:error:
evaluateWithObject:
exceptionWithName:reason:userInfo:
existingStatus
expirationDate
expiryDate
exportedObject
extensionIdentifier
extensionItemWithAppleIDAuthenticationContext:
externalizedVersion
externalizedVersionString
failWithError:
familyName
familyNameForAccount:
featureStatus
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
fetchAnisetteDataAndProvisionIfNecessary:error:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
fetchAppListWithAltDSID:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
fetchAuthModeWithContext:completion:
fetchAuthenticationModeURL
fetchAuthorizedAppListWithContext:error:
fetchCliqueStatus:error:
fetchConfigDataURL
fetchCustodianDataRecoveryKeyWithContext:completion:
fetchCustodianRecoveryCodeConfigurationWithCompletion:
fetchCustodianRecoveryTokenWithContext:completion:
fetchDeviceListWithContext:completion:
fetchDeviceListWithContext:error:
fetchDeviceMapWithContext:completion:
fetchFollowUps
fetchGlobalConfigURL
fetchGlobalConfigUsingCachePolicy:completion:
fetchGlobalConfigurationUsingPolicy:completion:
fetchManifestOptionsWithInheritanceContext:completion:
fetchPeerAttestationDataForContext:withRequest:completion:
fetchPeerAttestationDataForRequest:completion:
fetchPrimaryApplicationInformationForWebServiceWithInfo:completion:
fetchPrimaryBundleIDURL
fetchPrivateEmailForAltDSID:withKey:completion:
fetchPrivateEmailWithContext:completion:
fetchURLBagForAltDSID:completion:
fetchURLBagFromCache:altDSID:completion:
fetchUserInfoURL
fetchUserInformationForAltDSID:completion:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
finalizeCustodianSetupWithContext:completion:
finishFidoAuthURL
finishFidoRecoveryAuthURL
firstName
firstObject
followUpController
followUpRepairContext
followupItems
followupProvider
forceSilentEscrowRecordRepairEnabled
forceURLBagUpdateForAltDSID:urlSwitchData:completion:
forceUpdateBagWithUrlSwitchData:completion:
formattedUsernameForAccount:
formattedUsernameFromUsername:
forwardingEmailForAccount:
forwardingTargetForSelector:
frequency
generateLoginCodeWithCompletion:
generatedCode
getContextForRequestContext:completion:
getCredentialStateForClientID:completion:
getCredentialStateForRequest:completion:
getCurrentDataSubscriptionContextSync:
getMobileSubscriberHomeCountryList:error:
getPresentationContextForRequestContext:completion:
getServerUILoadDelegateForAltDSID:completion:
getServerUILoadDelegateWithContext:completion:
getSubscriptionInfoWithError:
getUUIDBytes:
getUserDefaultVoiceSubscriptionContext:
getUserInformationForAltDSID:completion:
getUserInformationWithContext:completion:
getValue:size:
getWalrusConfigWithCompletion:
givenName
givenNameForAccount:
goldilocksIncompatibleDevicesURL
groupKitEligibility
groupKitEligibilityForAccount:
handleResponse:forRequest:shouldRetry:
handleResponseError:
hasEmptyPassword
hasEmptyPasswordOverride
hasMDM
hasMDMForAccount:
hasPrefix:
hasPrimaryiCloudAccountForAltDSID:
hasPrimaryiCloudAccountForAppleID:
hasSuffix:
hasUniqueDeviceIdentifier
hasUsedAuthorization
hash
hashedWrappingKeyRKC
hearbeatTokenForAccount:
hearbeatTokenForAccount:error:
heartbeatToken
heartbeatTokenValue
helpAnchor
helpBook
hideAlternativeButton
hideCancelButton
hideReasonString
host
housingColor
housingColorCode
httpHeadersForRemoteUI
iCloudAccountForAltDSID:
iCloudAccountForAppleID:
iCloudAccountType
iForgotContinuationURL
iForgotURL
iTunesMetadata
iconData
iconName
iconScale
identifier
identityToken
identityTokenValue
idmsData
idmsMasterKeyRecovery
inCircle
includeFamilyDevices
includeUntrustedDevices
incorrectKeyPresentedMessage
indexOfObjectPassingTest:
infoDictionary
inheritanceConfiguration
init
initForDevice:provider:
initWithAddress:forKey:
initWithAddress:forKey:withBundleId:
initWithAlgorithm:
initWithAltDSID:
initWithAltDSID:identityToken:
initWithAppleID:altDSID:
initWithAuthenticationContext:
initWithAuthenticationController:
initWithAuthenticationResults:
initWithAuthenticatorData:challengeString:relyingPartyIdentifier:signature:clientData:credentialID:userIdentifier:
initWithAuthenticatorDataString:challengeString:relyingPartyIdentifier:signature:clientDataString:credentialID:userIdentifier:
initWithAuthorizationRequests:
initWithBase64EncodedString:options:
initWithBlock:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleIdentifier:bundleName:bundleDescription:bundleType:otherInfo:
initWithBundleInformation:manifestOptions:
initWithCString:encoding:
initWithCapacity:
initWithChallenge:relyingPartyIdentifier:userIdentifier:displayName:credentialName:credentials:
initWithChallengeString:attestationsData:credentialID:clientData:relyingPartyIdentifier:credentialName:userIdentifier:
initWithChallengeString:attestationsDataString:credentialIDString:clientDataString:relyingPartyIdentifier:credentialName:userIdentifier:
initWithChallengeString:relyingPartyIdentifier:userIdentifierString:displayName:credentialName:credentials:
initWithClientIdentifier:
initWithCoder:
initWithContext:
initWithContext:bundleID:
initWithContext:client:
initWithContext:uiProvider:
initWithContextData:
initWithCredentialID:transports:
initWithDaemonXPCEndpoint:
initWithData:encoding:
initWithData:options:documentAttributes:error:
initWithDictionary:
initWithExternalizedContext:
initWithFLFollowupController:
initWithFollowUpFactory:provider:
initWithFormat:arguments:
initWithIdentifier:
initWithIdentifier:daemonXPCEndpoint:
initWithInfo:
initWithInfo:responder:
initWithInterface:weakObject:
initWithJSONDictionary:
initWithKey:
initWithKey:altDSID:
initWithKey:altDSID:clientAppBundleId:
initWithListenerEndpoint:
initWithListenerEndpoint:exportedInterface:
initWithLocaleIdentifier:
initWithMachServiceName:options:
initWithMaxWait:description:
initWithMemoryCapacity:diskCapacity:directoryURL:
initWithName:value:
initWithOwnerAltDSID:
initWithParameters:
initWithPresentingViewController:
initWithProvider:
initWithProxiedClientContext:
initWithQueue:
initWithReceiver:strong:
initWithRemoteServiceConfig:delegate:
initWithRequest:
initWithRequest:requestType:
initWithResponseBody:
initWithResponseInfo:
initWithServerResponse:
initWithServiceName:remoteProtocol:exportedProtocol:options:
initWithServiceName:remoteProtocol:options:
initWithStrongReceiver:
initWithSurrogateID:
initWithType:clientIdentifier:clientVersion:bag:
initWithURL:
initWithUUID:status:
initWithUUIDString:
initWithUpgradeContext:
initWithUser:password:
initWithUser:site:
initWithUsername:
initWithVerificationType:
initWithWeakReceiver:
initWithWebSessionID:expiryDate:userInfo:
initWithWebSessionIdentifier:expiryDate:userInfo:
initWithXML:baseURL:delegate:
initWithXPCSession:
initialURLKey
initialURLRequestKey
initiateCustodianSetupWithContext:completion:
inlineFlowSupportedConfig
intValue
integerValue
interfaceWithProtocol:
internalAuthKitAccount
internalFeaturesMaskValue
internalQueue
internationalMobileEquipmentIdentity
internationalMobileEquipmentIdentity2
interruptionHandler
invalidate
invalidationHandler
invocationWithMethodSignature:
invoke
isAcceptingPayload
isAccountsFrameworkAvailable
isAppleIDAuthorization
isAppleIDLoginEnabled
isAuthenticationRequired:
isBaaEnabledForKey:
isBeneficiaryForAccount:
isBiometricAuthCapable
isBiometricIDCapable
isContextEligibleForBiometricOrPasscodeAuth
isContextEligibleForSilentAuth
isContextEligibleForSilentAuthCoercion
isContextRequestingReauthForExistingService
isContinuityPush
isCreateAppleIDAllowedWithCompletion:
isCustodianSyncAction
isDevicePasscodeProtected:
isEligibleForUpgradeFromPassword
isEphemeral
isEqual:
isEqualToData:
isEqualToDictionary:
isEqualToString:
isFidoForAccount:
isFidoUserCancelError:
isFirstTimeLogin
isICDPEnabledForDSID:
isInCircle
isInRestrictedSharingMode
isKindOfClass:
isLikelyRealUser
isLisbonAvailable
isManagedAppleID
isManagedAppleIDForAccount:
isMemberOfClass:
isNetworkReachable
isNotificationEmailAvailable
isNotificationEmailAvailableForAccount:
isOTEnabledForContext:
isPasscodeSet
isPhoneNumberSupportedConfig
isPrimaryiCloudAccount:
isPrimaryiCloudAccountEmailVerified:
isProtectedWithPasscode
isRapportLogin
isRecoverableError:
isRequestingPayload
isResponseActionable:
isResponseCompleteAndConflict:
isResponseFinal:
isResponseFinalForHSA2ServerFlow:
isSenior
isSettingsInlineLogoViewDisabled
isSilentEscrowRecordRepairEnabledForAccount:
isTriggeredByNotification
isURLFromAppleOwnedDomain:
isUnderage
isUnlocked
isUsernameEditable
isValidCertificateTrust:forHostname:
isValidJSONObject:
isWebAccessEnabled
itemIdentifier
itemIdentifiersRequiringNotificationClearFromPayload:
itemName
itemsForAltDSID:pushMessageInfo:fromIDMSPayload:
jsonDictionaryForData:error:
keyAndBundleIdAreHashed
keyEnumerator
keyForEscapeHatchURL
label
lastDataSyncTimestamp
lastKnownIDMSEnvironment
lastName
lastObject
lastRetryError
latitude
launchOutOfProcessAuthentication:surrogateID:withErrorHandler:
legacyAnisetteDataForContext:DSID:withCompletion:
legacyAnisetteDataForDSID:device:completion:
legacyAnisetteDataForDSID:withCompletion:
length
linkType
listAllPrivateEmailsForAltDSID:completion:
listener:shouldAcceptNewConnection:
listenerEndpoint
localPresenceFound
localTimeZone
localUserUUID
locale
localeIdentifier
localizedAppName
localizedCallerName
localizedDescription
localizedFailureReason
localizedName
localizedStatusDescription
localizedStringForKey:value:table:
lock
loggedInServices
loginChoice
loginChoices
longLongValue
longitude
looksLikeiForgotURLKey:
lookupPrivateEmailForAltDSID:withKey:completion:
lookupPrivateEmailWithContext:completion:
machineID
machineIDs
machineId
mainBundle
makePrivateEmail
managedOrganizationName
managedOrganizationNameForAccount:
managedOrganizationType
managedOrganizationTypeForAccount:
mandatesRecoveryKey
manifest
maskingStyle
masterKeyID
masterTokenForAccount:
maximumLoginAttempts
methodSignatureForSelector:
mobileEquipmentIdentifier
model
modelNumber
mostRecentlyUsedAuthKitAccount
mutableCopy
mutableJSONRequestForPath:
mutableJSONRequestForURL:
name
navTitle
needsCredentialRecovery
needsNewChildAccount
needsPasswordChange
needsRepair
needsRepairForAccount:
needsSecurityUpgradeUI
nonce
notification
notificationAckURL
notificationAction
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
notificationDisclaimer
notificationEmail
notificationEmailForAccount:
number
numberWithDialCode
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
obfuscatedNumber
objCType
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
openApplication:withOptions:completion:
openSensitiveURL:withOptions:
operatingSystemName
operatingSystemVersion
operatingSystems
operation
optionsWithDictionary:
origin
originalChallenge
orphanedBeneficiaryUUIDs
orphanedCustodianUUIDs
otherInfo
ownerAppleID
ownerCustodianAltDSID
ownerDevice
pairedDevice
parsableRepresentation
passcodeViewOM
password
passwordResetToken
passwordResetTokenBackupForAccount:
passwordResetTokenBackupForAccount:error:
passwordResetTokenForAccount:
passwordResetTokenForAccount:error:
path
payloadWithMessage:
payloadWithResponseData:forCircleStep:
pendingAuthKitFollowUpPayload:
pendingFollowUpItems:
performAuthenticationRequestWithContext:completion:
performAuthorization:completion:
performAuthorizationWithContext:completion:
performAuthorizationWithContext:withUserProvidedInformation:completion:
performCheckInForAccountWithAltDSID:completion:
performCircleRequestWithContext:completion:
performRecovery:
performRegistrationRequestWithContext:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTrustedContactsDataSync:completion:
performWithinPersonaForAccount:withBlock:
persistMasterKeyVerifier:context:completion:
persistMasterKeyVerifier:withContext:completion:
personaIDIfCurrentPersonaIsDataSeparated
phoneAsAppleID
phoneAsAppleIDForAccount:
phoneBundleInfoWithAdditionalInfo:error:
phoneCertificate
phoneInformation
phoneNumber
phoneNumberCertificate
phoneNumberSupportedConfig
piggybackingAcceptorSupportsPresence
piggybackingIDMSFallbackApproved
piggybackingIDMSPresenceOverride
piggybackingLocalPresenceOverride
piggybackingPresenceMode
piggybackingRequestorPresenceSID
piggybackingRequestorUsesPresence
port
postBodyForiCSCServerUIResponseWithContext:recoveryError:
postFollowUpItem:error:
postWalrusStateUpdateToServerWithContext:urlBagKey:username:password:completion:
predicateWithFormat:
presenceCheckPassed
presenceFallbackApproved
presenceMode
presenceSID
presentAlertWithDictionary:completion:
presentAuthorizationUIForContext:completion:
presentBasicLoginUIForContext:completion:
presentBasicLoginUIWithCompletion:
presentBiometricOrPasscodeValidationForAppleID:completion:
presentBiometricOrPasscodeValidationForContext:completion:
presentFidoAuthForContext:fidoContext:completion:
presentKeepUsingUIForAppleID:completion:
presentKeepUsingUIForContext:appleID:completion:
presentLoginAlertWithError:title:message:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
presentNativeRecoveryUIWithCompletion:
presentNativeRecoveryUIWithContext:completion:
presentOOPLoginUIWithContext:completion:
presentPrivateEmailUIForContext:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentSecondFactorAlertWithError:title:message:completion:
presentSecondFactorUIForContext:completion:
presentSecondFactorUIWithCompletion:
presentServerProvidedUIWithConfiguration:completion:
presentationAnchorForAuthorizationController:
presentationCompletion
presentationContextForRequestContext:client:
presentationType
previouslySelectedEmail
previouslyWantedPrivateEmail
primaryAlert
primaryApplicationInformationForWebServiceWithInfo:error:
primaryAuthKitAccount
primaryEmailAddress
primaryEmailAddressForAccount:
primaryiCloudAccount
privacyBundleIdentifier
privacyRepairURL
privateAttestationEnabled
privateAttestationEnabledForAccount:
privateEmail
privateEmailAddress
privateEmailBundleId
privateEmailDomain
privateEmailFetchCompletedWith:error:completion:
privateEmailListVersion
privateEmailListVersionWithCompletion:
privateEmailManageURL
processResponse:
promptBody
promptHeader
promptTitle
propertyListWithData:options:format:error:
provisionAnisetteForContext:withCompletion:
provisionAnisetteForDevice:completion:
provisionAnisetteWithCompletion:
provisionWithCompletion:
provisioningDeviceIdentifier
proxiedAltDSID
proxiedAppID
proxiedAppName
proxiedBundleIdentifier
proxiedDevice
proxiedDeviceAnisetteData
proxiedDeviceAttestationData
proxiedIdentityToken
proxyAppName
pushMode
pushToken
query
raise:format:
rawAccountPassword
rawAttestationObject
rawAuthenticatorData
rawClientDataJSON
reachableEmailAddressesForAccount:
realUserVerificationData
reason
reauthenticateWithContext:completion:
reauthenticateWithContext:completionWithResults:
receivedData
recoveryContextWithServerInfo:
recoveryContinuationURL
recoveryControllerWithContext:
recoverySessionID
recoveryStep
registerContext:
registerPrivateEmailForAltDSID:withKey:completion:
registrationCompletion
relevantHTTPStatusCodes
relyingPartyIdentifier
remoteListener
remoteObjectProxyWithErrorHandler:
remoteService
remoteServiceDidInterrupt
remoteServiceDidInvalidate
remoteServiceProxyWithErrorHandler:
removeAccount:withCompletionHandler:
removeAllCachedResponses
removeAllFollowUpItems:
removeAllObjects
removeAllPCSAuthCredentialWithCompletion:
removeAllPasswordResetTokens
removeBeneficiaryWithInheritanceContext:completion:
removeContinuationTokenForAccount:
removeFollowUpItems:error:
removeFollowUpItemsWithIdentifiers:error:
removeMasterTokenForAccount:
removeObject:
removeObjectForKey:
removePrivateEmailKey:completion:
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
renewRecoveryTokenURL
renewRecoveryTokenWithContext:completion:
repairState
repairStateForAccount:
repairURL
replyPayload
reportSignOutForAllAppleIDsWithCompletion:
reportSignOutForAppleID:service:completion:
representingBundlePath
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
requestIdentifier
requestNewURLBagIfNecessaryWithCompletion:
requestNewURLBagIfNecessaryWithError:
requestOptions
requestType
requestedCloudPartition
resolved
resourceLoadDelegate
resourceURL
respondsToSelector:
response
responseDataItems
responseInfo
resume
retain
retainCount
retryCount
revokeAuthorizationForApplicationWithClientID:completion:
revokeAuthorizationForApplicationWithClientID:error:
revokeAuthorizationWithContext:completion:
revokeCustodianWithContext:completion:
revokeUpgradeWithContext:completion:
rootPath
routingInfo
sanitiseInternalState
saveAccount:error:
saveAccount:withCompletionHandler:
saveVerifiedAccount:error:
scale
scheme
scopes
secondFactorCode
secondsFromGMT
securityCode
securityLevelForAccount:
securityUpgradeContext
securityUpgradeServiceNames
selectedAuthorizationEmailForAccount:
selectedEmail
self
sendEmbargoEndNotificationFeedbackWithContext:urlKey:completion:
sensitiveAuthenticationKeys
sensitiveTokenKeys
serialNumber
serializedData
serverExperimentalFeatures
serverExperimentalFeaturesForAccount:
serverFriendlyDescription
serverInfo
serverProvidedData
serverTrust
serviceID
serviceIdentifier
serviceIdentifiers
serviceToken
serviceTokenIdentifier
serviceTokens
serviceType
services
servicesUsingAccount:
sessionKey
sessionWithConfiguration:delegate:delegateQueue:
setAaData:
setAccessKey:
setAccessKeyString:
setAccount:inUse:byService:
setAccountAliases:
setAccountProperty:forKey:
setActions:
setActivateAction:
setAdditionalInfo:
setAdditionalInfo:forAccount:
setAdditionalPlatforms:
setAgeOfMajority:
setAgeOfMajority:forAccount:
setAkAction:
setAliases:forAccount:
setAllowedCredentials:
setAltDSID:
setAltDSID:forAccount:
setAlternativeButtonString:
setAlwaysShowUsernameField:
setAnisetteDataProvider:
setAnticipateEscrowAttempt:
setAppID:
setAppName:
setAppProvidedContext:
setAppProvidedData:
setAppleID:
setAppleIDCountryCode:
setAppleIDCountryCode:forAccount:
setAppleIDLoginEnabled:
setAppleIDSecurityLevel:
setAppleIDWithAltDSID:inUse:forService:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:
setAppleIDWithDSID:inUse:forService:completion:
setApps:
setArgument:atIndex:
setAssociatedDomains:
setAttestationHeaders:
setAttestationPreference:
setAuthCompletion:
setAuthMode:
setAuthProvider:
setAuthenticationController:
setAuthenticationMode:
setAuthenticationMode:forAccount:
setAuthenticationPromptStyle:
setAuthenticationType:
setAuthkitAccount:
setAuthorizationRequest:
setAuthorizationUsed:forAccount:
setAuthorizedApplicationsListVersion:
setAuthorizedRequest:
setBackingColor:
setBagUrlKey:
setBeginDate:
setBeneficiary:forAccount:
setBeneficiaryAccountName:
setBeneficiaryAltDSID:
setBeneficiaryContacts:
setBeneficiaryFirstName:
setBeneficiaryIdentifier:
setBeneficiaryLastName:
setBeneficiaryListVersion:
setBeneficiaryListVersion:forAccount:
setBeneficiaryOperationsByID:
setBeneficiaryPassword:
setBeneficiarySetupToken:
setBeneficiaryUUIDs:
setBirthday:
setBundleID:
setBundleIconName:
setBundleIdentifiers:
setByAddingObject:
setByAddingObjectsFromArray:
setCallerIconBundlePath:
setCanBeBeneficiary:
setCanBeCustodian:
setCanBeCustodian:forAccount:
setCanHaveBeneficiary:
setCanHaveBeneficiary:forAccount:
setCanHaveCustodian:
setCancelButtonString:
setCanceledOrCompleted:
setCellularDataAttributionAppBundleID:
setCircleStep:
setClaimTokenData:
setClaimTokenString:
setClass:forSelector:argumentIndex:ofReply:
setClasses:forSelector:argumentIndex:ofReply:
setCliMode:
setClientAppBundleId:
setClientAppName:
setClientBundleID:
setClientErrorCode:
setClientID:
setClientInfo:
setClientShouldHandleAlternativeButtonAction:
setColor:
setCompanionDevice:
setCompletion:
setCompletionHandler:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
setConfigurationValue:forKey:
setContext:
setContinuationToken:
setContinuityIDMSData:
setController:
setCoverGlassColor:
setCreateAppleID:
setCredential:
setCredentialItem:forKey:
setCredentialParameters:
setCredentialRequestContext:
setCredentialRequests:
setCustodianContacts:
setCustodianEnabled:
setCustodianInfos:
setCustodianInfos:forAccount:
setCustodianLastModified:
setCustodianLastModified:forAccount:
setCustodianListVersion:
setCustodianListVersion:forAccount:
setCustodianOperationsByID:
setCustodianRecoveryToken:
setCustodianSetupToken:
setCustodianSyncAction:
setCustodianUUID:
setCustodianUUIDs:
setDSID:
setDSID:forAccount:
setData:
setDataCenterIdentifier:
setDateFormat:
setDateStyle:
setDeallocHandler:
setDefaultButtonString:
setDelegate:
setDemoAccount:forAccount:
setDependentAltDSID:
setDesiredInternalTokens:
setDeviceEnclosureColor:
setDeviceName:
setDeviceRegionRequired:
setDeviceTrustRevoked:forAccount:
setDisplayImageData:
setDisplayString:
setDisplayStyle:
setDisplayTitle:
setDsid:
setEnclosureColor:
setEncodedRecoveryIdentityToken:
setEncodedRecoveryPET:
setEncryptedPRKC:
setExcludedCredentials:
setExistingStatus:
setExportedInterface:
setExportedObject:
setExtensionIdentifier:
setFamilyName:
setFamilyName:forAccount:
setFeatureStatus:
setFido:forAccount:
setFirstName:
setFirstNotificationDelay:
setFirstTimeLogin:
setFollowupItems:
setFollowupProvider:
setForceSilentAuth:
setForceSilentEscrowRecordRepairEnabled:
setForwardingEmail:
setForwardingEmail:forAccount:
setFrequency:
setGeneratedCode:
setGivenName:
setGivenName:forAccount:
setGroupIdentifier:
setGroupKitEligibility:
setGroupKitEligibility:forAccount:
setGuestMode:
setHTTPBody:
setHTTPMethod:
setHasEmptyPassword:
setHasEmptyPasswordOverride:
setHasMDM:
setHasMDM:forAccount:
setHasUsedAuthorization:
setHashedWrappingKeyRKC:
setHeartbeatToken:
setHeartbeatTokenValue:
setHelpAnchor:
setHelpBook:
setHideAlternativeButton:
setHideCancelButton:
setHideReasonString:
setHousingColor:
setHttpHeadersForRemoteUI:
setIdentifier:
setIdentityToken:
setIdentityTokenValue:
setIdmsData:
setIdmsMasterKeyRecovery:
setIdmsRecovery:
setIncludeFamilyDevices:
setIncludeUntrustedDevices:
setIncludedResultKeys:
setIncorrectKeyPresentedMessage:
setInformativeText:
setInitialURLKey:
setInitialURLRequestKey:
setInternalQueue:
setInternalWrapper:
setInterruptionHandler:
setInvalidationHandler:
setIsContinuityPush:
setIsEligibleForUpgradeFromPassword:
setIsLegacyStudent:
setIsLikelyRealUser:
setIsNotificationEmailAvailable:
setIsNotificationEmailAvailable:forAccount:
setIsProxy:
setIsRapportLogin:
setIsSenior:
setIsUnderage:
setIsUsernameEditable:
setItemIdentifier:
setKeyAndBundleIdAreHashed:
setLabel:
setLastDataSyncTimestamp:
setLastKnownIDMSEnvironment:
setLastKnownLocale:
setLastName:
setLastRetryError:
setLatitude:
setLinkType:
setLocalPresenceFound:
setLocale:
setLocalizedAppName:
setLocalizedCallerName:
setLocalizedStatusDescription:
setLoggedInServices:
setLoginChoices:
setLongitude:
setMLBSerialNumber:
setMachineID:
setMakePrivateEmail:
setManagedOrganizationName:
setManagedOrganizationName:forAccount:
setManagedOrganizationType:
setManagedOrganizationType:forAccount:
setMandatesRecoveryKey:
setManifest:
setMaskingStyle:
setMaxWait:
setMaximumLoginAttempts:
setName:
setNeedsCredentialRecovery:
setNeedsNewAppleID:
setNeedsNewChildAccount:
setNeedsPasswordChange:
setNeedsSecurityUpgradeUI:
setNonce:
setNotification:
setNotificationAction:
setNotificationDisclaimer:
setNotificationEmail:
setNotificationEmail:forAccount:
setNumber:
setNumberWithDialCode:
setObfuscatedNumber:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setObject:forSetting:
setOneTimePassword:
setOperatingSystems:
setOptions:
setOrigin:
setOrphanedBeneficiaryUUIDs:
setOrphanedCustodianUUIDs:
setOverride:forKey:
setOwnerAppleID:
setOwnerCustodianAltDSID:
setPairedDevice:
setPasswordEquivToken:
setPasswordRequest:
setPasswordResetToken:
setPath:
setPayload:
setPhoneAsAppleID:
setPhoneAsAppleID:forAccount:
setPhoneCertificate:
setPhoneInformation:
setPhoneNumberCertificate:
setPiggybackingIDMSPresenceOverride:
setPiggybackingLocalPresenceOverride:
setPresenceCheckPassed:
setPresenceFallbackApproved:
setPresenceMode:
setPresentationCompletion:
setPresentationType:
setPreviouslySelectedEmail:
setPreviouslyWantedPrivateEmail:
setPrimaryClientID:
setPrimaryEmailAddress:
setPrimaryEmailAddress:forAccount:
setPrivacyBundleIdentifier:
setPrivateAttestationEnabled:
setPrivateAttestationEnabled:forAccount:
setPrivateEmail:
setPrivateEmailBundleId:
setPrivateEmailDomain:
setPrivateEmailListVersion:
setPromptBody:
setPromptHeader:
setProvisioningDeviceIdentifier:
setProxiedAltDSID:
setProxiedAppID:
setProxiedAppName:
setProxiedAssociatedDomains:
setProxiedBundleIdentifier:
setProxiedDevice:
setProxiedDeviceAnisetteData:
setProxiedDeviceAttestationData:
setProxiedIdentityToken:
setProxyAppName:
setProxySheetHeaderOverride:
setProxySheetNoCredentialsErrorMessageOverride:
setProxySheetSubtitleOverride:
setProxySheetTitleOverride:
setPushMode:
setPushToken:
setQueryItems:
setROMAddress:
setRawAccountPassword:
setReachableEmailAddresses:forAccount:
setReachableEmails:
setRealUserVerificationData:
setReason:
setReceivedData:
setRecoveryContinuationURL:
setRecoverySessionID:
setRecoveryStep:
setRegistrationCompletion:
setRemoteListener:
setRemoteObjectInterface:
setRemoteService:
setRepairState:forAccount:
setRepresentingBundlePath:
setRequest:
setRequestCachePolicy:
setRequestIdentifier:
setRequestOptions:
setRequestedCloudPartition:
setRequestedScopes:
setResidentKeyPreference:
setResolved:
setResourceLoadDelegate:
setResponseInfo:
setResponseMessage:
setRetryCount:
setScale:
setScopes:
setSecondFactorCode:
setSecurityCode:
setSecurityLevel:forAccount:
setSecurityUpgradeContext:
setSelectedAuthorizationEmail:forAccount:
setSelectedEmail:
setSelectedPrivateEmail:forAccount:
setSelectedRequest:
setSelector:
setServerExperimentalFeatures:
setServerExperimentalFeatures:forAccount:
setServerFriendlyDescription:
setServerInfo:
setServiceID:
setServiceIdentifier:
setServiceIdentifiers:
setServiceToken:
setServiceTokenIdentifier:
setServices:
setShouldAddHSA2CreateHeader:
setShouldAllowAppleIDCreation:
setShouldAllowDemoMode:
setShouldAllowPhoneNumberAccounts:
setShouldAllowTestApplication:
setShouldAlwaysShowWelcome:
setShouldAutocycleAppsInTiburon:
setShouldAutocycleAppsInWebTakeover:
setShouldBypassCustodianDeviceCheck:
setShouldDisablePiggybacking:
setShouldEnableBeneficiaryLiveOn:
setShouldEnablePiggybackingPresence:
setShouldFakeAuthSuccess:
setShouldForceInteractiveAuth:
setShouldHandleInvalidation:
setShouldHideInternalBuildHeader:
setShouldIgnoreTeamID:
setShouldIgnoreUserID:
setShouldOfferSecurityUpgrade:
setShouldPreventInteractiveAuth:
setShouldRequestConfigurationInfo:
setShouldRequestRecoveryPET:
setShouldRequestShortLivedToken:
setShouldSendAbsintheHeader:
setShouldSendEphemeralAuthHeader:
setShouldSendICSCIntentHeader:
setShouldSendLocalUserHasAppleIDLoginHeader:
setShouldSendPhoneNumber:
setShouldSendSigningHeaders:
setShouldSkipAuthorizationUI:
setShouldSkipSettingsLaunchAlert:
setShouldSuppressHSA2Suggestions:
setShouldSuppressModalSheetsInMacBuddy:
setShouldUpdatePersistentServiceTokens:
setSignInAllowsPCSKeyAccess:
setSilentEscrowRecordRepairEnabled:
setSilentEscrowRecordRepairEnabled:forAccount:
setSite:
setSlotID:
setState:
setStatus:
setStore:
setSupportsMasterKeyRecovery:
setSupportsPiggybacking:
setSupportsPresence:
setTarget:
setTargetDevice:
setTeamID:
setTermsAccepted:
setTimeStyle:
setTimeZone:
setTimeoutIntervalForResource:
setTitle:
setTransactionID:
setTransactionId:
setTransferState:
setTriggeredByNotification:
setTxnid:
setURLCache:
setUiProvider:
setUnderlyingQueue:
setUnderlyingTask:
setUniqueDeviceIdentifier:
setUniqueIdentifier:
setUseAlternativeKeysIcon:
setUseAlternativeSecurityKeysIcon:
setUseCachedAccountStatus:
setUser:
setUserID:
setUserIdentifier:
setUserInfo:
setUserInformation:
setUserIsSenior:forAccount:
setUserSelection:
setUserUnderage:forAccount:
setUsername:
setUuid:
setValue:
setValue:forHTTPHeaderField:
setValueCondition:
setVerifiedPrimaryEmail:forAccount:
setVerifyCredentialReason:
setVettedPrimaryEmail:
setWaitForReply:
setWaitForReplyTimeout:
setWaitsForConnectivity:
setWebAccessEnabled:
setWhitelistedPathURLs:
setWithArray:
setWrappedKeyData:
setWrappedKeyString:
setWrappingKeyData:
setWrappingKeyRKC:
setWrappingKeyString:
setXpcConnection:
set_allowsVirtualInterfaces:
set_appleIDContext:
set_attemptIndex:
set_authController:
set_callerBundleID:
set_cliMode:
set_clientAuthenticatedExternallyWithPassword:
set_clientShouldAuthenticateExternally:
set_continuationRequestIdentifier:
set_externalAuthToken:
set_externalLocalAuthData:
set_forceEligibleForForegroundAuthentication:
set_iconData:
set_iconName:
set_iconScale:
set_iconSize:
set_informativeText:
set_isFirstPartyLogin:
set_isPasswordEditable:
set_isRapportLogin:
set_isSilentAppTransfer:
set_keepAlive:
set_notifyOfTimeout:
set_passwordPromptTitle:
set_performUIOutOfProcess:
set_proxiedAssociatedDomains:
set_proxiedClientAppID:
set_proxiedClientAppName:
set_proxiedClientBundleID:
set_proxiedClientServiceID:
set_proxiedClientTeamID:
set_proxiedDeviceClass:
set_proxiedDeviceName:
set_requirePassword:
set_sessionID:
set_shouldForcePrivateEmail:
set_shouldForceUI:
set_shouldSendGrandSlamTokensForRemoteUI:
set_shouldSendIdentityTokenForRemoteUI:
set_shouldSkipAuthorizationUI:
set_shouldSkipBiometrics:
set_shouldSkipInitialReachabilityCheck:
set_shouldUseProxiedClientBundleIDForSRP:
set_usesAppleIDContext:
settingsInlineLogoViewDisabled
setupBeneficiaryWithInheritanceContext:completion:
sharedAnisetteFreeURLSession
sharedAuthKitFollowupProvider
sharedBag
sharedCacheEnabledAnisetteFreeSession
sharedCacheEnabledURLSession
sharedCacheReliantAnisetteFreeSession
sharedConfiguration
sharedConnection
sharedController
sharedEmailForManagedAppleID
sharedInstance
sharedManager
sharedNetworkObserver
sharedSigner
sharedURLSession
sharedURLSessionWithDenyVirtualInterfaces
shouldAddHSA2CreateHeader
shouldAllowAppleIDCreation
shouldAllowDemoMode
shouldAllowExperimentalMode
shouldAllowPhoneNumberAccounts
shouldAllowTestApplication
shouldAlwaysShowWelcome
shouldAutocycleAppsInTiburon
shouldAutocycleAppsInWebTakeover
shouldBypassCustodianDeviceCheck
shouldCapturePromptBugForContext:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
shouldContinueWithResponse:error:
shouldCreateAppleID
shouldDenyRequestForURL:task:
shouldDisablePiggybacking
shouldEnableBeneficiaryLiveOn
shouldEnablePiggybackingPresence
shouldEnableTestAccountMode
shouldFakeAuthSuccess
shouldForceInteractiveAuth
shouldHandleInvalidation
shouldHideInternalBuildHeader
shouldIgnoreTeamID
shouldIgnoreUserID
shouldOfferSecurityUpgrade
shouldPerformSatoriWarmupVerificationForAccount:
shouldPreventInteractiveAuth
shouldProcessURL:
shouldPromptForPasswordOnly
shouldRequestConfigurationInfo
shouldRequestPiggybackingPresenceEnforcement
shouldRequestRecoveryPET
shouldRequestShortLivedToken
shouldSendAbsintheHeader
shouldSendEphemeralAuthHeader
shouldSendICSCIntentHeader
shouldSendLocalUserHasAppleIDLoginHeader
shouldSendPhoneNumber
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
shouldSendSigningHeaders
shouldSkipAuthorizationUI
shouldSkipSettingsLaunchAlert
shouldSuppressHSA2Suggestions
shouldSuppressModalSheetsInMacBuddy
shouldSynchronizeForAccount:
shouldUpdatePersistentServiceTokens
showAlert:primaryAction:altAction:
showAlert:primaryAction:altAction:cancelAction:
showAlertForError:withAuthKitAccount:withCompletion:
showAlertForError:withCompletion:
signInAllowsPCSKeyAccess
signRequest:
signRequest:withCompletionHandler:
signRequestWithBasicHeaders:
signRequestWithCommonHeaders:
signWithBAAHeaders:completion:
signal
signalFromServerResponse:
signature
signatureForData:options:completion:
signatureForURLRequest:
signatureForURLRequest:completionHandler:
signaturesForData:options:completion:
signingController
signingHeadersForRequest:completion:
site
slotID
standardUserDefaults
start
startCoordinatingBlock:
startCustodianRecoveryRequestWithContext:completion:
startCustodianRecoveryTransactionWithContext:completion:
startDiscoveryWithCompletion:
startFidoAuthURL
startFidoRecoveryAuthURL
startProvisioningURL
startServiceWithNotificationHandler:
startServiceWithStateBroadcastHandler:
startWithNotificationHandler:completion:
startWithStateBroadcastHandler:completion:
state
stateControllerWithContext:
status
statusCode
store
storeAuthorization:forProxiedRequest:completion:
storeModernRecoveryURL
string
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByTrimmingCharactersInSet:
stringValue
stringWithFormat:
stringWithUTF8String:
subscriptions
subscriptionsInUse
substringFromIndex:
substringToIndex:
superclass
supportsMasterKeyRecovery
supportsPiggybacking
supportsPresence
supportsSecureCoding
syncAnisetteForContext:withSIMData:completion:
syncAnisetteWithSIMData:completion:
syncAnisetteWithSIMData:device:completion:
syncWithSIMData:completion:
synchronizeFollowUpItemsForContext:completion:
synchronizeFollowUpItemsForContext:error:
synchronizeFollowUpsForAccount:inStore:error:
synchronizeFollowUpsWithServerPayload:altDSID:error:
synchronousRemoteObjectProxyWithErrorHandler:
systemContainerCacheURL
systemContainerURL
targetDevice
taskIdentifier
teamID
teams
teardownFollowUpWithContext:completion:
termsAccepted
timeIntervalSinceDate:
timeZoneForSecondsFromGMT:
timestamp
title
token
tokenDictionaryKeys
tokenWithBase64String:
tokenWithDictionary:
tokenWithExternalizedVersion:lifetime:
tokenWithExternalizedVersionString:
tokenWithValue:lifetime:
transactionID
transactionId
transferState
transportableAuthKitAccount:
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
trustedDevicesSummaryURL
trustedDevicesURL
txnid
typeOfMessage:
uiObjectModel
uiProvider
unarchivedObjectOfClass:fromData:error:
underlyingErrors
underlyingTask
uniqueDeviceIdentifier
uniqueIdentifier
unlock
unregisterContext:
unsafe_invalidate
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
updateAuthModeTimestampForAccount:
updateBeneficiaryWithInheritanceContext:completion:
updateCustodianRecoveryKeyWithContext:completion:
updateSatoriWarmUpTimestampForAccount:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
updateSynchronizeTimeForAccount:inStore:
updateSynchronizeTimeNoSaveForAccount:
updateUserInformationForAltDSID:userInformation:completion:
updateUsername:forAccountsWithAltDSID:
updateVerifiedEmail:forAccountWithAltDSID:
updateWithAuthResults:
updateWithHTTPURLResponse:
upgradeBundleIdentifier
upgradeEligibilityCheckURL
upgradeUIURL
urlAtKey:
urlBagFromCache:altDSID:error:
useAlternativeKeysIcon
user
userChosenName
userFullName
userID
userIdentifier
userInfo
userInfoFromAccount:
userInfoFromContext:
userIsSeniorForAccount:
userSelection
userUnderAgeForAccount:
userVerificationURL
username
usesTouchID
uuid
valid
validateExternalizedContext:error:
validateLoginCode:forAppleID:completion:
validateLoginCode:forAppleID:withCompletion:
validateVettingToken:forAltDSID:completion:
validateVettingTokenURL
value
valueCondition
valueForHTTPHeaderField:
valueForKey:
valueWithNonretainedObject:
verificationType
verifyCredentialReason
verifyEnableWalrusAllowedWithContext:completion:
verifyMasterKey:context:completion:
verifyMasterKey:withContext:completion:
versionOfAcceptedAgreement
vettedPrimaryEmail
wait
waitForReply
waitForReplyTimeout
waitUntilDate:
walrusCountryAnchorKBURL
walrusKBURL
walrusStatus
walrusStatus:
walrusStatusFuture
warmUpVerificationSessionWithCompletion:
webAccessChangeControllerForTargetStatus:
webAccessDisableURL
webAccessEnableURL
webAccessEnabled
webAccessEnabledForAccount:
webAccessKBURL
webAccessStatus:
webAccessStatusFuture
webSessionID
webSessionIdentifier
whitelistedPathURLs
whitespaceCharacterSet
windowTitle
wrappedKeyData
wrappedKeyString
wrappingKeyRKC
wrappingKeyString
xpcConnection
zone
B32@0:8@16^@24
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@"NSString"16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
v20@0:8B16
v24@0:8@?16
v40@0:8@16@24@?32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKCustodianSetupResult"@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"AKCustodianContext"16@?<v@?B@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"AKCustodianContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKTrustedContactsSyncResult"@"NSError">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@?16@0:8
@"NSXPCInterface"
@"NSXPCListener"
@28@0:8@16B24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8@16B24q28
@32@0:8@16^@24
B24@0:8^@16
v32@0:8Q16@?24
v48@0:8@16@24@32@?40
v40@0:8Q16@24@?32
Vv32@0:8@16@?24
v40@0:8@16q24@?32
@24@0:8^@16
@36@0:8B16@20^@28
@"NSXPCListenerEndpoint"
@"AKAppleIDAuthenticationContextManager"
@"NSLock"
@"NSData"
v24@0:8Q16
@"NSURLRequest"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
@20@0:8B16
v32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@32@0:8@16@?24
@"NSURLSession"
@"NSMutableDictionary"
v32@0:8@"ASAuthorizationController"16@"ASAuthorization"24
v32@0:8@"ASAuthorizationController"16@"NSError"24
v32@0:8@"ASAuthorizationController"16@"NSString"24
@"<AKFidoUIProvider>"
@"ASAuthorizationController"
@"AKFidoContext"
q16@0:8
v24@0:8q16
@"NSArray"
@"NSUUID"
v32@0:8q16@24
v32@0:8q16@"NSString"24
q24@0:8@16
@24@0:8q16
@"NSDictionary"
v32@0:8@"AKInheritanceContext"16@?<v@?@"AKBeneficiaryManifest"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"NSError">24
v32@0:8@"AKInheritanceCLIContext"16@?<v@?@"AKBeneficiaryAliasSetupResult"@"NSError">24
v24@0:8@"NSXPCInterface"16
@"NSObject"16@0:8
@"AAFXPCSession"
v24@0:8@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">40
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"AKServerRequestConfiguration"16@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKFidoContext"24@?<v@?@"AKFidoAuthenticationResponse"@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8@16B24@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSData"24@?<v@?B@"NSError">32
v36@0:8@"AKAppleIDAuthenticationContext"16B24@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">48
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSNumber"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSNumber"@"NSError">48
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKServerRequestConfiguration"24@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSUUID"24@?<v@?@"NSError">32
v48@0:8@"NSDictionary"16@"NSError"24@"NSUUID"32@?<v@?B@"NSDictionary">40
@"AKAppleIDAuthenticationController"
@"<AKAppleIDAuthenticationDelegate>"
@24@0:8@?16
Q24@0:8@16
@"NSDate"
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"AKDevice"16@0:8
v24@0:8@"AKDevice"16
@"AKDevice"
@"<AKCredentialRequestProtocol>"
@"AKAuthorizationScopesUserSelection"
@"NSNumber"
@40@0:8@16@24@32
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
@"CDPRecoveryController"
@"AKAccountRecoveryContext"
@"<CDPStateUIProvider>"
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKAuthorization"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSData"@"NSError">16
@"CoreTelephonyClient"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
d16@0:8
v24@0:8d16
@"NSValue"
@"AKAuthorizationUpgradeContext"
@"AKAuthorizationRequest"
@"AKPasswordRequest"
@"AKUserInformation"
v48@0:8@16@24@32@40
B24@0:8q16
@"AKBeneficiaryManifest"
@"AKInheritanceAccessKey"
{CGSize=dd}16@0:8
@48@0:8@16{CGSize=dd}24@40
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationUserResponse"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSError">24
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"AKAuthorizationRevokeUpgradeContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v40@0:8@"AKAuthorization"16@"AKCredentialRequestContext"24@?<v@?B@"NSError">32
B32@0:8^{__SecTrust=}16@24
v28@0:8B16@20
v32@0:8Q16@24
@40@0:8@16@24^@32
B32@0:8@16q24
@32@0:8@16q24
@"ACAccountStore"
@"ACAccountType"
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPrivateEmail"@"NSError">32
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmail"@"NSError">24
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmailContext"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
@"AKPrivateEmailClientImpl"
@20@0:8i16
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSError"40
@24@0:8Q16
@"AKAnisetteProvisioningController"
@"AKAppleIDAuthenticationContext"
@"<AKAnisetteServiceProtocol>"
@"AKAnisetteData"
@"AKAttestationData"
v40@0:8@"AKPrivateEmail"16@"NSError"24@?<v@?B@"NSError">32
@32@0:8@16Q24
@"AKPushMessage"
@28@0:8B16^@20
@"<AKURLBagDictionaryProvider>"
@"NSArray"40@0:8@"NSString"16@"NSDictionary"24@"NSArray"32
@"NSArray"24@0:8@"NSArray"16
B24@0:8@"FLFollowUpItem"16
@"NSURL"
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
@"NSDateFormatter"
@72@0:8@16@24@32@40@48@56@64
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPCSAuthContext"@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8@"AKWalrusContext"16@?<v@?@"NSError">24
v56@0:8@"AKWalrusContext"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
@48@0:8@16@24@32@40
@"<AKAlertHandlerUIProvider>"
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary">40
@"NSSet"16@0:8
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary"@"NSURLRequest">40
v40@0:8@16@24^B32
@32@0:8d16@24
@"NSCondition"
@"NSMutableArray"
@"NSArray"24@0:8^@16
B32@0:8@"NSArray"16^@24
B32@0:8@"FLFollowUpItem"16^@24
@"FLFollowUpController"
@32@0:8q16@24
@"<AKCredential>"
@"NSObject<OS_dispatch_group>"
@"AKCircleRequestPayload"
@64@0:8@16@24@32@40@48@56
@"<AKAuthorizationUIProvider>"
v36@0:8B16@20@?28
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
B48@0:8@16@24@32@40
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
B40@0:8@16@24^@32
@"<AKFollowUpProvider>"
@"AKCredentialRequestContext"
v32@0:8@16:24
@"NSObject<OS_nw_path_monitor>"
@"AKAppleIDServerResourceLoadDelegate"
@"<AKFollowUpItemFactory>"
@"AKAuthorizationDaemonConnection"
@"ACAccount"
@"AKAppleIDAuthenticationContext"32@0:8@"AKAppleIDAuthenticationContext"16^@24
@"<AKAuthorizationClientProtocol>"
@"NSUUID"16@0:8
@"AKWalrusConfig"
@"AKAdaptiveService"
@"NSLocale"
v28@0:8B16@?20
^{__CFUserNotification=}48@0:8@16@24@32@40
v48@0:8@16q24@32@?40
@32@0:8@16B24B28
@28@0:8B16@20
@"AKCommandLineUtilities"
@24@0:8@"NSString"16
^{__CFUserNotification=}
@"NSSet"
v44@0:8@16B24q28@?36
Vv24@0:8@?16
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKUserInformation"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v40@0:8@"NSString"16@"AKUserInformation"24@?<v@?B@"NSError">32
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v32@0:8Q16@?<v@?B@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError">16
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSDictionary"@"NSError">28
v32@0:8Q16@?<v@?@"NSDictionary"@"NSError">24
@"<AKPrivateEmailUIProvider>"
@"AKCustodianDaemonConnection"
@56@0:8@16@24@32Q40@48
@"AKAuthorizationClientImpl"
