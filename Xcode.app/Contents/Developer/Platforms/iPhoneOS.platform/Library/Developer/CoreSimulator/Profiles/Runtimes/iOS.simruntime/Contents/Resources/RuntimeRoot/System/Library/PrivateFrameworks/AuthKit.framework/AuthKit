@(#)PROGRAM:AuthKit  PROJECT:AuthKit-1
com.apple.Carousel.authAlertXPCService
alertTitle
alertMessage
alertIdentifier
defaultButtonTitle
alternateButtonTitle
otherButtonTitle
alertResponse
alertSupplementViewID
alertSupplementViewData
overWriteExistingAlert
systemSoundIDKey
textFieldDescription
textFieldIsSecure
textFieldInputType
textFieldLength
textFieldValue
textFieldContentType
com.apple.AuthKit.AKSecondFactorCodeView
com.apple.AuthKit.AKLocationSignInView
com.apple.AuthKit.AKAuthorize
_transactionID
_bundleID
_teamID
v8@?0
com.apple.AuthKit.alertRequestQueue
v16@?0@"NSError"8
v24@?0@"NSDictionary"8@"NSError"16
_userID
_clientID
_altDSID
com.apple.authkit
com.apple.ak.custodian.xpc
AKExtensionItemContext
com.apple.AuthKitUI.AKLocationSignInAlert
com.apple.AuthKitUI.AKSecondFactorAlert
com.apple.AuthKitUI.AKSecondFactorEntryAlert
/System/Library/Frameworks/SetupAssistant.framework/SetupAssistant
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
/AppleInternal/Library/Frameworks/SetupAssistant.framework/SetupAssistant
BYLicenseAgreement
Unable to find class %s
_appID
_appName
_nonce
_serviceID
_state
AKPassword
AKRawPassword
AKIDMSToken
token
AKDSID
AKAltDSID
AKRememberPassword
AKIsHSA2
AKSecurityLevel
AKAuthenticationMode
AKIsUnderage
AKIsLegacyStudent
AKDidPerformInteractive
AKNewAppleIDSetupInfo
AKMasterKeyID
AKDidShowServerUI
AKAcceptedTerms
AKManagedAppleID
AKAuditLogin
AKFirstName
AKLastName
AKImageURL
AKShortLivedToken
AKIdentityToken
AKCustodianSetupToken
AKIsServerUIRequired
AKInheritanceBeneficiarySetupToken
GsIdmsToken
AKInheritanceBeneficiaryIdentifier
AKInheritanceBeneficiaryWrappedKey
AKIsPasscodeResetRequired
AKConfigurationInfo
AKDuplexSession
AKCircleContext
AKRepairState
AKCustodianRecoverySessionID
AKAppleIDEmailsDidChangeNotification
com.apple.authkit.user-info-changed
altDSID
security-level
auth-mode
AKDidPerformBiometric
AKDidPerformPasscode
managedOrganizationType
managedOrganizationName
isNotificationEmailAvailable
notificationEmail
primaryEmailVetted
firstName
lastName
reachableEmails
forwardTo
authorizedAppListVersion
previouslySelectedAsPrivateEmail
previouslySelectedEmail
AKDemoAccount
AKAdditionalInfo
AKAppleIDAuthenticationControllerXPCLock
-[AKAppleIDAuthenticationController authenticateWithContext:completion:] requires a non-nil value for the context parameter.
v20@?0B8@"NSError"12
v24@?0@"AKUserInformation"8@"NSError"16
v24@?0Q8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
(null)
v24@?0@"NSNumber"8@"NSError"16
v24@?0@"AKCircleRequestPayload"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
-[AKAppleIDAuthenticationController clearSessionCacheWithCompletion:]_block_invoke_2
_encryptedPRKC
_ownerCustodianAltDSID
<%@: %p {
encryptedPRKC: %@...
ownerCustodianAltDSID: %@
<%@: %p, _underlylingTask: %@>
AuthKitURLSession
com.apple.authkit.url
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
icloud.com
@32@?0@"NSString"8Q16^B24
 not
scopes
client_id
credential_state
transfer_state
primary_client_id
origin
transferred
expired
<%@:%p> clientID: %@, scopes: %@, state:%li, transferState:%@, primaryClientID:%@, origin:%@
_beneficiaryID
_wrappingKeyData
_wrappingKeyString
_wrappedKeyData
_wrappedKeyString
_claimTokenData
_claimTokenString
Access code for beneficiary %@
core
traffic
query
signpost
aaa-itriage
userInteraction
fido
siwa
com.apple.ak.puffin.xpc
BundleID
IconData
IconScale
type
DidTapNotification
DidStartServerAuthorization
FetchAppIcon
FetchAppIconReply
StartProgressAnimation
Unknown
_attestationHeaders
%@ %@
com.apple.ak.inheritance.xpc
v24@?0@"AKBeneficiaryManifest"8@"NSError"16
-[AKInheritanceController fetchManifestOptionsWithInheritanceContext:completion:]_block_invoke
-[AKInheritanceController setupBeneficiaryWithInheritanceContext:completion:]_block_invoke
-[AKInheritanceController updateBeneficiaryWithInheritanceContext:completion:]_block_invoke_2
-[AKInheritanceController removeBeneficiaryWithInheritanceContext:completion:]_block_invoke_2
v24@?0@"AKBeneficiaryAliasSetupResult"8@"NSError"16
-[AKInheritanceController _setupBeneficiaryAliasWithInheritanceContext:completion:]_block_invoke
AKContextManagerQueue
v20@?0B8@"NSDictionary"12
v12@?0B8
-[AKAppleIDAuthenticationContextManager provisionAnisetteForContext:withCompletion:]
-[AKAppleIDAuthenticationContextManager syncAnisetteForContext:withSIMData:completion:]
-[AKAppleIDAuthenticationContextManager eraseAnisetteForContext:withCompletion:]
-[AKAppleIDAuthenticationContextManager fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[AKAppleIDAuthenticationContextManager legacyAnisetteDataForContext:DSID:withCompletion:]
-[AKAppleIDAuthenticationContextManager fetchPeerAttestationDataForContext:withRequest:completion:]
com.apple.gs.
(cag).
%@...
(******)
v32@?0@"NSString"8@16^B24
@32@?0@8@16^B24
v32@?0@8@16^B24
com.apple.authkit.trusted-device-list-changed
mids
_custodianUUID
_wrappingKeyRKC
_ownerAppleID
_custodianSetupToken
_pushToken
_recoverySessionID
_custodianRecoveryToken
_aaData
_idmsData
_recoveryStep
_ownerDevice
_errorCode
_cliMode
_notificationAction
_custodianUUIDs
_beneficiaryUUIDs
_lastDataSyncTimestamp
_custodianContacts
_beneficiaryContacts
<%@: %p> with 
CustodianUUID: %@ 
altDSID: %@ 
OwnerAppleID: %@ 
ownerCustodianAltDSID: %@ 
wrappingKeyRKC: %@ 
pushToken: %@ 
sessionID: %@ 
custodianRecoveryToken: %@ 
recoveryStep: %@ 
cliMode: %i 
 custodianContacts: %@ 
 beneficiaryContacts: %@
_userSelection
_loginChoice
_selectedRequest
_rawAccountPassword
<%@: %p { selectedRequest: %@, userSelection: %@, loginChoice: %@, rawPassword: %@}
(empty)
%@==
[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}
SELF MATCHES %@
POST
AKAttestationErrorDomain
AKAttestationSignerValidity
AKAttestationUseDeviceCheckKeychainAccess
v32@?0@"NSDictionary"8@"NSData"16@"NSError"24
v32@?0@"NSData"8@"NSData"16@"NSError"24
_akAction
_itemIdentifier
_txnid
_isContinuityPush
<%@:%p> identifier: %@, action: %@, altDSID: %@, txnid: %@
number
slotID
label
dataPreferred
defaultVoice
physicalSim
inUse
PhoneCertificate
B32@?0@"CTXPCServiceSubscriptionContext"8Q16^B24
com.apple.accounts.carrierUtilities.queue
@"NSXPCConnection"8@?0
true
ak-button
ak-action
X-Apple-AK-Action
X-Apple-I-Cont
AKHarvestedContinuationHeaders
start-icsc
mk-validation
continue
complete
read
cancel
delete
teardown
open
clientInfo
X-Apple-AK-Continuation-Data
X-Apple-Alternate-Id
X-Apple-DSID
X-Apple-I-88CC-99DE-EE63-2736
X-Apple-I-Experiment-Features
X-Apple-PE-Token
X-Apple-I-Account-Name
X-Apple-I-Account-NameType
phoneNumber
X-Apple-Requested-Partition
AKUsername
AKPasswordResetTokenKey
AKEmailVerificationCompletedNotificationKey
icloud
imessage
facetime
itunesstore
gamecenter
AKICSCURLKey
AKRecoveryURLKey
X-Apple-iCSC-Identity-Token
X-Apple-iCSC-PE-Token
X-Apple-Recovery-Identity-Token
X-Apple-Recovery-PE-Token
X-Apple-MK-Validation-Token
X-Apple-I-iCSC-PRK
X-Apple-I-iCSC-MD-M
X-Apple-I-ICSCREC
X-Apple-I-IdMS-Data
status
success
failure
appleid
errorCode
errorMessage
action
start_account_recovery
try_again
prs_account_nm
personID
dsid
repair-state
authmode
pakedata
idmsdata
circlestep
ptkn
atxid
RequestURL
Request
Header
prkgen
X-Apple-AK-Auth-Type
X-Apple-AK-Request-Auth-Type
HSA2
X-Apple-I-Experiment-Mode
X-Apple-I-RecoveryKey-Show
X-Apple-I-HSA1-Conversion
X-Apple-I-Test-Account-Mode
source
clear_followup_notification
continuity_push_followup_notification
AKFollowUpAltDSIDKey
AKFollowUpServerURL
AKFollowUpSafariURL
com.apple.authkit.hsa2-password-reset
verifyPrimaryEmail
AKFollowUpLocalURLKey
AKFollowUpAppleAccountRootKey
IDMSUrl
urlKey
txnid
cfudata
cfuids
items
com.apple.AuthKitUI.AKFollowUpServerUIExtension
Sign In With Apple
AKUserIdentifier
AKAuthorizedScopes
AKUserInformation
AKAuthorizationCode
AKClientBundleID
envelope.fill.badge.shield.trailinghalf.fill
faceid
touchid
key.fill
hmeListVersion
TEMPORARY
X-Apple-CR-Token
X-Apple-I-Private-Email-Address
privateEmailKey
X-Apple-I-Private-Email-Client-Bundle
AUTH_EVENT_TYPE_UNKNOWN
SRP_AUTH_FAILURE
SECOND_FACTOR_SERVER_UI
SECOND_FACTOR_PIGGYBACK_TRANSITION
SECOND_FACTOR_PIGGYBACK_FAILURE
SECOND_FACTOR_PIGGYBACK_ESCAPE_SMS_SUCCESS
SECOND_FACTOR_PIGGYBACK_ESCAPE_FAILURE
appleManagedAccountSignIn
appleIdSettings
CFBundleIconFile
CFBundleIconName
com.apple.gs.idms.hb
RKMandate
isManagedAccount
localizedAppName
X-Apple-Client-App-Name
X-Apple-Proxied-App-Name
X-Apple-AK-Context-Type
X-Apple-I-Auth-Type
X-Apple-I-BC
X-Apple-I-Client-Bundle-Id
X-Apple-I-Proxied-Bundle-Id
_authorizationRequests
_callerBundleID
_iconData
_iconName
_iconScale
_iconSize
_informativeText
_isFirstPartyLogin
_isRapportLogin
_isWebLogin
_localizedAppName
_passwordRequests
_proxiedAssociatedDomains
_proxiedClientAppID
_proxiedClientAppName
_proxiedClientBundleID
_proxiedServiceID
_proxiedClientTeamID
_proxiedDeviceClass
_proxiedDeviceName
_requestIdentifier
_requirePassword
_shouldForcePrivateEmail
_shoudlForceUI
_shoudlSkipBiometrics
_shoudlSkipUI
_upgradeContext
_upgradeFromPassword
_clientShouldAuthenticateExternally
_authSessionTimeout
_externalAuthToken
_externalLocalAuthData
_continuationRequestIdentifier
_requestOptions
_sessionID
_shouldUseProxiedClientBundleIDForSRP
B24@?0@"<AKCredentialRequestProtocol>"8Q16
<%@: %p> Auth Request %@ 
Password Request: %@ 
Proxied Bundle: %@
Proxied Team: %@ 
Session ID: %@
_userInformation
_makePrivateEmail
{ userInformation: %@, makePrivateEmail: %@}
X-Mme-Device-Id
X-Apple-I-Provisioning-Device-Id
X-Apple-I-Client-Time
X-Mme-Proxied-Device-Id
X-Apple-Identity-Token
X-Apple-Proxied-Identity-Token
X-Apple-GS-Token
X-Apple-SL-Token
X-Apple-I-MD
X-Apple-I-MD-M
X-Apple-I-MD-RINFO
X-Apple-I-Companion-MD
X-Apple-I-Companion-MD-M
X-Apple-I-Companion-MD-RINFO
X-Apple-I-Proxied-MD
X-Apple-I-Proxied-MD-M
X-Apple-I-Proxied-MD-RINFO
X-Apple-Ephemeral-Auth
X-Mme-Nas-Qualify
X-Apple-I-Logged-In-Services
Content-Type
X-Apple-I-CK
X-Apple-I-PRK
X-MMe-Country
X-MMe-Proxied-Country
X-Apple-I-Locale
X-Apple-I-TimeZone
X-Apple-I-TimeZone-Offset
X-MMe-Companion-Client-Info
X-MMe-Proxied-Client-Info
X-Apple-I-PRK-Gen
X-Apple-I-Proxied-PRK-Gen
X-Apple-I-Local-Login-Uses-AppleID
X-Apple-HB-Token
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Apple-I-Proxied-SRL-NO
X-Apple-I-Device-PN
X-Apple-IDS-PAC
X-Apple-I-Phone
X-Apple-iOS-SLA-Version
X-Apple-I-MD-LU
X-Apple-I-CDP-Circle-Status
X-Mme-Show-Warranty
X-MMe-Device-Model
X-Apple-I-AppleID
X-Apple-I-DeviceUserMode
X-Apple-I-CFU-State
X-Apple-Offer-Security-Upgrade
X-Apple-I-App-Provided-Context
X-Apple-I-ReAuth
X-Apple-I-Proxied-ICSCREC
X-Apple-Test-Application
X-Apple-I-Device-Configuration-Mode
X-Apple-I-SKU-Country
X-Apple-I-DC
X-Apple-I-Exec-Mode
X-Apple-I-UrlSwitch-Info
X-Apple-I-Request-UUID
X-Apple-I-Private-Email-Domain
X-Apple-I-Private-Email-Origin
X-Apple-I-Private-Email-App-Name
X-Apple-Guardian-Identity-Token
X-Apple-Guardian-HB-Token
X-Apple-Guardian-GS-Token
X-Apple-I-Fido-Recovery-Token
false
v32@?0@"NSString"8@"NSString"16^B24
%@:%@
application/json
itunes
piggybacking
RegionCode
%llu
AKFakeAuthSuccess
AKDisablePiggy
AKAddHS2CreateHeader
AKSuppressHSA2Suggestions
AKAllowPhoneNumberAccounts
AKAddExperimentalModeHeader
AKHideInternalBuildHeader
AKAddTestApplicationHeader
AKSuppressModalSheetsInMacBuddy
_AKAlwaysShowWelcome
_AKAutocycleAppsInTiburon
_AKAutocycleAppsInWebTakeOver
_AKAddTestAccountHeader
_AKAuthorizationDemoMode
_AKCloudPartition
_AKByPassCustodianDeviceCheck
_AKBeneficiaryLiveOnKey
_AKEnableSigninWithMAID
AKLastIDMSEnvironment
AKShouldRequestPiggybackingPresenceEnforcement
AKOverridePiggybackingIDMSPresence
AKOverridePiggybackingLocalPresence
com.apple.authkit.config
v12@?0i8
AuthKit
SignInWithMAID
AKConfigurationDidChangeNotification
cfgs
abs-enable
baa-interval
X-MMe-Nas-Qualify
X-MMe-Nas-E
X-Apple-Baa
X-Apple-I-Payload-Hash
X-Apple-Baa-E
X-Apple-I-Baa-S
X-Mme-Device-Id-S
X-Apple-I-Provisioning-Device-Id-S
X-MMe-Client-Info-S
X-MMe-Proxied-Nas-Qualify
X-MMe-Proxied-Nas-E
X-Apple-Proxied-Baa
X-MMe-Proxied-Client-Info-S
X-Apple-Proxied-Baa-E
com.apple.authkit.signingQ
v16@?0@"NSMutableDictionary"8
%@%@
@"NSString"32@?0@"NSString"8@"NSData"16^B24
_manifest
_accessCode
_beneficiarySetupToken
_beneficiaryIdentifier
_services
_operatingSystems
_includeUntrustedDevices
_includeFamilyDevices
<%@:%p> altDSID: %@, os: %@, services: %@, untrusted: %d, family: %d
/System/Library/Frameworks/AppleMediaServices.framework/AppleMediaServices
/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
/AppleInternal/Library/Frameworks/AppleMediaServices.framework/AppleMediaServices
AMSMediaTask
AMSBag
AMSMediaArtwork
AMSMediaArtworkFormatPNG
AMSMediaArtworkCropStyleBoundedBox
AMSMediaTaskPlatformMac
artwork
name
v24@?0@"AMSMediaResult"8@"NSError"16
attributes
platformAttributes
com.apple.ak.authorizationservices.xpc
AppleIDAuthSupportNoPinning
.GlobalPreferences
adsid
DSID
aliases
retaining-services
additionalInfo
reachableEmailAddresses
vettedPrimaryEmail
forwardingEmail
phoneAsAppleID
isUnderage
isSenior
demoAccount
ageOfMajority
appleIdSignInEnabled
privateAttestationEnabled
privateEmailSelection
authorizationEmailSelection
primaryEmail
WarmUpVerificationTimeStamp
DeviceTrustRevoked
AuthModeTimeStamp
canHaveCustodian
canBeCustodian
custodianEnabled
custodianLastModified
beneficiaryAccount
canHaveBeneficiary
canBeBeneficiary
appleIDCountryCode
hasMDM
custodianListVersion
beneficiaryListVersion
fidoAccount
com.apple.gs.appleid.auth
AKAccountManagerQueue
v32@?0@"NSString"8Q16^B24
B24@?0@"ACAccount"8Q16
v32@?0@"ACAccount"8Q16^B24
@"NSString"32@?0@"NSNumber"8Q16^B24
AKAccountManager.groupedAccountCleanup
accountClass
primaryAccount
primary
primaryEmailVerified
appleIdAliases
@8@?0
com.apple.ak.privateemail.xpc
v24@?0@"AKPrivateEmail"8@"NSError"16
-[AKPrivateEmailController lookupPrivateEmailWithContext:completion:]_block_invoke
-[AKPrivateEmailController fetchPrivateEmailForAltDSID:withKey:completion:]_block_invoke
-[AKPrivateEmailController registerPrivateEmailForAltDSID:withKey:completion:]_block_invoke
-[AKPrivateEmailController fetchPrivateEmailWithContext:completion:]_block_invoke
v24@?0@"AKPrivateEmailContext"8@"NSError"16
-[AKPrivateEmailController getContextForRequestContext:completion:]_block_invoke
-[AKPrivateEmailController deletePrivateEmailDatabaseWithCompletion:]_block_invoke
-[AKPrivateEmailController privateEmailListVersionWithCompletion:]_block_invoke
-[AKPrivateEmailController removePrivateEmailKey:completion:]_block_invoke
-[AKPrivateEmailController listAllPrivateEmailsForAltDSID:completion:]_block_invoke
%02X
com.apple.ak.anisette.xpc
_user
_site
_appleIDAuth
_createAppleID
AKAuthorizationLoginChoice:
User: %@    Site: %@    AppleIDAuth: %@
/System/Library/Frameworks/CoreFollowUp.framework/CoreFollowUp
/System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp
/AppleInternal/Library/Frameworks/CoreFollowUp.framework/CoreFollowUp
FLFollowUpAction
FLFollowUpController
FLFollowUpItem
FLFollowUpNotification
FLGroupIdentifierAccount
FLNotificationOptionForce
FLNotificationOptionSpringboardAlert
FLNotificationOptionExtensionForNotification
FLNotificationOptionExtensionActions
FLNotificationOptionBannerAlert
_accessibleBundleInformation
_manifestOptions
identifier
description
safari
_identityToken
_heartbeatToken
_shouldSendSigningHeaders
_shouldSendEphemeralAuthHeader
_serviceType
_continuationToken
_passwordResetToken
_serviceToken
_proxiedDeviceAnisetteData
_proxiedDevice
_proxyAppName
_clientAppName
_clientBundleID
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendICSCIntentHeader
_loggedInServices
_hasEmptyPasswordOverride
_securityUpgradeContext
_shouldOfferSecurityUpgrade
_shouldSendPhoneNumber
_phoneNumberCertificate
_phoneInformation
_followupItems
_appProvidedContext
_proxiedAltDSID
_proxiedIdentityToken
v16@?0@?<v@?>8
v24@?0@"AKAnisetteData"8@"NSError"16
v24@?0@"AKAttestationData"8@"NSError"16
hsa2
X-Apple-CDP-Action
@"NSString"32@?0@"NSString"8@"NSString"16^B24
team_id
privateEmail
apps
v32@?0@8Q16^B24
<%@:%p> team: %@, user: %@, email: %@, apps: {
step
atxnid
pake
<%@:%p> transaction: %@, step: %ld, errorCode: %ld
_responseInfo
_serverInfo
_clientInfo
_transactionId
_clientErrorCode
_circleStep
_supportsPresence
_presenceSID
_presenceMode
_presenceFallbackApproved
_presenceCheckPassed
_localPresenceFound
contextKey
contextAltDSID
contextProxiedApp
contextBundleID
contextAppName
upgradeBundleID
HmeContext:{%@:%@:%@}
/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
/System/Library/PrivateFrameworks/AuthenticationServices.framework/AuthenticationServices
/AppleInternal/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
ASAuthorizationSecurityKeyPublicKeyCredentialProvider
ASAuthorizationSecurityKeyPublicKeyCredentialRegistration
ASAuthorizationPublicKeyCredentialParameters
ASAuthorizationController
ASAuthorizationSecurityKeyPublicKeyCredentialAssertion
ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor
ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports
ASAuthorizationPublicKeyCredentialResidentKeyPreferencePreferred
ASAuthorizationPublicKeyCredentialAttestationKindDirect
ASAuthorizationErrorDomain
gsService
midStartProvisioning
midFinishProvisioning
midSyncMachine
securityUpgradeEligibility
securityUpgrade
validateCode
postData
iForgot
iForgotResetNotification
createAccount
device_list_self
trustedDevices
trustedDevicesSummaryUrl
qualifyCert
qualifySession
tokenUpgrade
postConfigData
fetchConfigData
changePasswordUrl
validateVettingToken
renewRecoveryToken
circle
followUpItems
fetchUserInfo
fetchAuthorizedApps
fetchPrimaryApp
fetchAuthMode
storeModernRecoveryKey
acsURL
repair
userVerificationResult
appleIDAuthorizeHTMLResponse
secondaryAuth
createChildAccount
deleteAuthorizedApp
managePrivateEmailAddress
fetchHmeList
usePrivateEmailAddress
registerHme
privacyRepair
startCustodianSetup
finishCustodianSetup
abortCustodianSetup
updateDataRecoveryKey
startCustodianRecovery
custodianRecoveryStep
custodianRecoveryValidate
fetchDataRecoveryKey
custodianRecoveryFeedback
custodianIncompatibleDevices
manageRecoveryKey
manageDataRecoveryService
accountContactDataSync
fetchBeneficiaryDataSelectionOptions
setupBeneficiary
updateBeneficiary
removeBeneficiary
createBeneficiaryAccountLiveOn
startFidoAuth
finishFidoAuth
startFidoRecoveryAuth
finishFidoRecoveryAuth
urls
apsEnv
iForgotAppleIdLocked
idmsEnv
is-phone-number-supported
appleOwnedDomains
appleIDAuthorizationUrls
is-in-line-flow-supported
continuation-header-prefix
2faUpgradeAccountTypePriority
custodian
inheritance-cfg
IdMS1
IdMS2
IdMS3
actions
notification
body
title
dismiss
frequency
localUrlKey
root
bundlePath
iconName
notifyingAppBundleID
force
delay
osAlert
bannerAlert
defbtn
albtn
priority
zeroAction
badgeOnly
omitBadge
AKAction
notifyingAppId
@32@?0@"NSDictionary"8Q16^B24
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_authContext
_recoveryContinuationURL
_supportsMasterKeyRecovery
_mandatesRecoveryKey
%s%s%s
[31m
yyyy-MM-dd
Accept
Error deserializing data %@ for data %@
_authenticatorData
_signature
_clientData
_credentialName
_userIdentifier
_challenge
_relyingPartyIdentifier
<%@: %p {
AuthenticatorData: %@, 
Signature: %@, 
CredentialID: %@, 
ClientData: %@, 
UserIdentifier: %@, 
Challenge: %@, 
RelyingPartyIdentifier: %@, 
prefs:root=APPLE_ACCOUNT
prefs:root=APPLE_ACCOUNT&aaaction=upgradeSecurityLevel
prefs:root=Passcode
com.apple.AuthKit
AUTH_ERROR_ALERT_INVALID_CONTEXT_TITLE
Localizable
AUTH_ERROR_ALERT_INVALID_CONTEXT_MESSAGE
AUTH_ERROR_ALERT_BUTTON_OK
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_MESSAGE
AUTH_ERROR_ALERT_BUTTON_SETTINGS
AUTH_ERROR_ALERT_BUTTON_CLOSE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_TITLE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_MESSAGE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_TITLE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_MESSAGE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE
AUTH_ERROR_ALERT_BUTTON_CONTINUE
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_TITLE
wapi
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE_WLAN
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE_WIFI
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_MESSAGE
AUTH_ERROR_ALERT_CREATE_PASSCODE_TITLE
AUTH_ERROR_ALERT_CREATE_PASSCODE_MESSAGE_WATCH
AUTH_ERROR_BUTTON_OPEN_PASSCODE_SETUP
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_CANNOT_SIGN_IN_TITLE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_CANNOT_SIGN_IN_MESSAGE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_TITLE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_ORGNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_ORGNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE
&%@=%@
_accessKey
_beneficiaryFirstName
_beneficiaryLastName
_beneficiaryPassword
Access Key: %@ 
beneficiaryPassword: %@
beneficiaryFirstName: %@
beneficiaryLastName: %@
identityToken: %@
authToken: %@
X-Apple-Session-Key
X-Apple-Encrypted-Session-Key
duration
X-Apple-I-MD-Cmd-Target
X-Apple-I-Data
AKAnisetteControllerLock
_pairedDevice
_proxiedAnisetteData
v16@?0@"NSDictionary"8
v24@?0@"NSURLRequest"8@"NSError"16
paired
X-Apple-I-MD-DATA
_SERVICE_ICLOUD
_SERVICE_ITUNES
_SERVICE_IMESSAGE
_SERVICE_FACETIME
_SERVICE_GAME_CENTER
_NO_SERVICE
_machineID
_oneTimePassword
_routingInfo
AKAnisetteData <%p>: {MID: %@ - OTP: %@ - RD: %@}
Lisbon
com.apple.AuthKitUIService
context
oopUIMode
v24@?0@"BSProcessHandle"8@"NSError"16
IDToken
authCode
state
isLikelyRealUser
_isLikelyRealUser
Authorization Credential:
 UID: %@ 
 Identity Token: %@ 
 AuthorizationCode: %@ 
 User Verification Result: %@ 
 User Info: %@ /n Transaction ID: %@
teams
<%@:%p> version: %@, teams: {
v32@?0@"FLFollowUpItem"8Q16^B24
@32@?0@"FLFollowUpItem"8Q16^B24
id: %@
number with dial code: %@
mode: %@
AKAuthenticationError
AKAnisetteError
AKSQLError
AKPrivateEmailError
AKUnderlyingADIErrors
_authorizedRequest
_credential
<%@: %p {
Authorized request: %@
Credential: %@
_data
_scale
_maskingStyle
AKAbsintheErrorDomain
v24@?0@"NSData"8@"NSError"16
/System/Library/Frameworks/CoreCDP.framework/CoreCDP
/System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP
/AppleInternal/Library/Frameworks/CoreCDP.framework/CoreCDP
CDPFollowUpContext
CDPFollowUpController
CDPContext
CDPRecoveryController
CDPStateController
CDPAccount
CDPStateErrorDomain
CDPIDMSPasswordResetKey
CDPIDMSRecordMIDKey
/System/Library/Frameworks/CoreCDPUI.framework/CoreCDPUI
/System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI
/AppleInternal/Library/Frameworks/CoreCDPUI.framework/CoreCDPUI
CDPUIAccountRecoveryController
CDPUIController
_waitForReply
_identityTokenValue
_heartbeatTokenValue
_payload
_waitForReplyTimeout
__notifyOfTimeout
_uuid
_status
_hashedWrappingKeyRKC
_originalChallenge
_displayName
_credentials
challenge
rpid
credentialIds
_promptTitle
_promptHeader
_promptBody
_promptIconData
_promptIconScale
<%@: %p {
RelyingPartyIdentifier: %@, 
Challenge: %@, 
Original Challenge: %@, 
UserIdentifier: %@, 
DisplayName: %@, 
CredentialName: %@, 
Credentials: %@, 
PromptTitle: %@, 
PromptHeader: %@, 
PromptBody: %@, 
AKFollowUpAccountRefreshTimestamp
_credentialRequestContext
_loginChoices
_signInAllowsPCSKeyAccess
<%@: %p> - bundleID: %@, localizedAppName: %@, informativeText: %@; credentialRequestContext: %@, userInformation: %@, loginChoices: %@, signInAllowsPCSKeyAccess: %@
com.apple.aktool
aktool
com.nextdoor.nextdoor
com.etsy.etsyforios
com.tinyspeck.chatlyio
com.apple.AppShack
com.apple.AuthKit.AKNetworkObserver
v16@?0@"NSObject<OS_nw_path>"8
_request
_resourceLoadDelegate
_requestType
_presentationType
_whitelistedRedirectURLs
<%@: %p 
 request: %@
 delegate: %@
 requestType: %lu
 presentationType: %lu 
/System/Library/Frameworks/KeychainCircle.framework/KeychainCircle
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
/AppleInternal/Library/Frameworks/KeychainCircle.framework/KeychainCircle
KCAESGCMDuplexSession
B32@?0@"FLFollowUpItem"8Q16^B24
_custodianListVersion
_beneficiaryListVersion
_custodianOperationsByID
_beneficiaryOperationsByID
updateRKC
finish
<%@: %p {
custodianListVersion: %@
beneficiaryListVersion: %@
_custodianOperationsByID: %@
_beneficiaryOperationsByID: %@
X-Apple-I-Accepted-Terms
_password
AKApplicationState
AKApplicationNonce
AKAppProvidedData
AKRequestedScopes
AKClientID
AKTeamID
AKAuthorizationStatus
AKAuthorizationAccount
AKAuthorizationIsSilentAppTransfer
AKAuthorizationIsEligibleForUpgradeFromPassword
AKClientAuthenticatedExternallyWithPassword
AKExternalAuthToken
<%@: %p {
requestIdentifier: %@,
transactionID: %@, 
clientID: %@,
teamID: %@,
userIdentifier: %@,
altDSID: %@,
state: %@,
nonce: %@,
requestedScopes: %@,
appProvidedData: %@,
isSilentAppTransfer: %d,
isEligibleForUpgradeFromPassword: %d,
email
X-MMe-Client-Info
https
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
_attestationsData
_credentialID
<%@: %p {
Challenge: %@, 
AttestationsData: %@, 
CredentialID: %@, 
ClientData: %@, 
RelyingPartyIdentifier: %@, 
CredentialName: %@, 
UserIdentifier: %@, 
<%@: %p> requestIdentifier: %@,
altDSID: %@,
userID: %@ 
transactionID:%@
https://gsa.apple.com
https://grandslam-idms1.apple.com
https://grandslam-idms2.apple.com
https://grandslam-idms3.apple.com
/auth
/appleid/account
/verify/phone
/verify/phone/securitycode
/birthday
/password
account
person
birthday
createContext
password
phoneNumberVerification
mode
countryCode
securityCode
code
numberWithDialCode
obfuscatedNumber
pushMode
acceptedTerms
versions
deviceVersions
termsList
iCloud
termsPageDetails
prologue
agree
hasError
serviceErrors
message
underAge
studentAccount
mkid
accountName
custodianLastUpdateDate
appleManagedAccount
orgType
orgName
notificationEmailAvailable
phoneAsAppleId
_givenName
_familyName
_forwardingEmail
_primaryEmailAddress
_accountName
_accountAliases
_reachableEmails
_previouslySelectedEmail
_ageOfMajority
_authorizedApplicationsListVersion
_masterKeyID
_vettedPrimaryEmail
_phoneAsAppleID
_isUnderage
_isSenior
_isLegacyStudent
_hasUsedAuthorization
_privateAttestationEnabled
_previouslyWantedPrivateEmail
_appleIDSecurityLevel
_authMode
_repairState
_selectedEmail
_additionalInfo
_privateEmailListVersion
_canBeCustodian
_canHaveCustodian
_custodianEnabled
_custodianLastModified
_canBeBeneficiary
_canHaveBeneficiary
_appleIDCountryCode
_hasMDM
_managedOrganizationType
_managedOrganizationName
_isNotificationEmailAvailable
_notificationEmail
<%@: %p {
givenName: %@,
familyName: %@,
forwardingEmail: %@,
primaryEmailAddress: %@,
accountName: %@,
accountAliases: %@,
reachableEmails: %@,
authorizedApplicationsListVersion: %@,
masterKeyID: %@,
vettedPrimaryEmail: %@,
phoneAsAppleID: %@,
isUnderage: %@,
isSenior: %@,
ageOfMajority: %@,
isLegacyStudent: %@,
appleIDCountryCode: %@,
hasUsedAuthorization: %@, 
privateAttestationEnabled: %@, 
appleIDSecurityLevel: %lu,
authMode: %lu,
repairState: %lu,
selectedEmail: %@,
canBeCustodian: %@,
canHaveCustodian: %@,
custodianEnabled: %@,
canBeBeneficiary: %@,
canHaveBeneficiary: %@,
hasMDM: %@,
managedOrganizationType: %@,
managedOrganizationName: %@,
isNotificationEmailAvailable: %@,
notificationEmail: %@,
additionalInfo: %@,
privateEmailListVersion: %@,
_uniqueDeviceIdentifier
_provisioningDeviceIdentifier
_serverFriendlyDescription
_color
_enclosureColor
_coverGlassColor
_housingColor
_backingColor
_locale
_ROMAddress
_MLBSerialNumber
_modelNumber
_linkType
UniqueDeviceID
+[AKDevice activeIDSPeerDevice]
Library/Caches
AKDevice <%p> {%@} link %@
@"NSString"8@?0
@"NSNumber"8@?0
ProvisioningUniqueDeviceID
ModelNumber
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
iPhoneSimulator
ivIu8YTDnBSrYv/SN4G8Ag
ProductVersion
Simulator
@"NSLocale"8@?0
%@_%@
AKAnisetteProvisioningControllerXPCLock
No DSID was provided!
-[_AKAnisetteProviderProxy provisionAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy syncAnisetteForContext:withSIMData:completion:]
-[_AKAnisetteProviderProxy eraseAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[_AKAnisetteProviderProxy legacyAnisetteDataForContext:DSID:withCompletion:]
-[_AKAnisetteProviderProxy fetchPeerAttestationDataForContext:withRequest:completion:]
%06u
LOGIN_CODE_ALERT_OK_BUTTON
application/x-plist
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/PrivateFrameworks/UIKit.framework/UIKit
/AppleInternal/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/RemoteUI.framework/RemoteUI
/System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI
/AppleInternal/Library/Frameworks/RemoteUI.framework/RemoteUI
RUIParser
NSDocumentTypeDocumentAttribute
NSHTMLTextDocumentType
Failed to validate username and password combination: %@
Enter 6 digit code: 
Failed to read code!
Failed to validate code: %@
IDP second factor-authentication is not supported!
Requesting second-factor ServerUI...
Unexpected second-factor authentication (%@)!
Unknown verification type
Unsupported object model found: %@
v16@?0@"NSString"8
missing page
missing passcode view
missing passcode identifier
missing response URL
httpMethod
missing HTTP method
secure
serverInfo
Error creating an account: %@.
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
Error Validating phone number: %@
v24@?0@"AKTrustedPhoneNumber"8@"NSError"16
trustedPhoneNumbers
Multiple trusted numbers found!
Verifying code...
v32@?0@"NSNumber"8@"AKTrustedPhoneNumber"16^B24
%@. %@ via %@
Please select a trusted number: 
HTMLContent
application/x-buddyml
A second factor code was send to %@ via %@
Enter second factor code: 
Enter your birthday(YYYY-MM-DD): 
Please enter a valid birthday(%@)!
Enter password: 
Enter username: 
Phone Number for this account: 
Enter first name for the account: 
Enter last name for the account: 
Do you agree to terms and conditions?
Y to agree / READ to print out the terms (please just say yess!): 
READ
Y to agree: 
_beneficiaryAltDSID
_beneficiaryAccountName
<%@: %p {
beneficiaryAltDSID: %@
beneficiaryAccountName: %@
AKTemporaryValue
com.apple.ak.code.entered
AKAuthenticationInternalTokenCK
findmydeviced
com.apple.authkit.generic
com.apple.authkit.messages
com.apple.authkit.passkit
com.apple.authkit.appleconnect
com.apple.authkit.screentime
com.apple.authkit.tinker
com.apple.authkit.keychainsync
com.apple.authkit.dependent
X-Apple-Security-Upgrade-Context
INLINE_PASSWORD_ALERT_TITLE
PASSCODE_ALERT_MESSAGE_IPAD
%username%
authless
dependent
dependentToken
dependentSpyglass
_reason
_username
_isUsernameEditable
_DSID
_dependentAltDSID
_isProxyingForApp
_proxiedAppBundleID
_proxiedAppName
_serviceIdentifiers
_identifier
_maximumLoginAttempts
_isEphemeral
_shouldAllowAppleIDCreation
_shouldPromptForPasswordOnly
_passwordPromptTitle
_defaultButtonString
_httpHeadersForRemoteUI
_isPasswordEditable
_shouldUpdatePersistentServiceTokens
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_shouldPreventInteractiveAuth
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_notificationDisclaimer
_shouldForceInteractiveAuth
_capabilityForUIDisplay
_companionDeviceAnisetteData
_companionDevice
_isAppleIDLoginEnabled
_hasEmptyPassword
_shouldRequestShortLivedToken
_shortLivedToken
_shouldRequestConfigurationInfo
_isTriggeredByNotification
_message
_anticipateEscrowAttempt
_isFirstTimeLogin
_supportsPiggybacking
_desiredInternalTokens
_shouldSkipSettingsLaunchAlert
_shouldSendIdentityTokenForRemoteUI
_shouldRequestRecoveryPET
_title
_shouldSkipInitialReachabilityCheck
_attemptIndex
_authenticationType
_shouldSendGrandSlamTokensForRemoteUI
_needsRepair
_appProvidedData
_masterKey
_performUIOutOfProcess
_keepAlive
_cancelButtonString
_alternativeButtonString
_hideAlternativeButton
_hideCancelButton
_hideReasonString
_clientShouldHandleAlternativeButtonAction
_windowTitle
_alwaysShowUsernameField
_privacyBundleIdentifier
_authenticationPromptStyle
_needsNewChildAccount
_authenticationMode
_needsSecurityUpgradeUI
_displayImageData
_verifyCredentialReason
_callerIconBundlePath
_localizedCallerName
_forceEligibleForForegroundAuthentication
_helpAnchor
_helpBook
<%@: %p { UUID: %@ }>
<%@: %p {
UUID: %@,
username: %@,
editable-username: %@,
altDSID: %@,
DSID: %@,
dependentAltDSID: %@,
password: %@,
service-type: %ld,
service IDs: %@,
reason: %@
ephemeral: %@,
password-only: %@,
authentication-type: %@,
update-service-tokens: %@,
offer-upgrade: %@,
offer-upgrade-context: %@,
proxying-for-app: %@,
proxied-app-id: %@,
proxied-device: %@,
companion-device: %@
max-login-attempts: %@
appleid-login-enabled: %@
has-empty-password: %@
request-slt: %@
short-lived-token: %@
identity-token: %@
triggered-by-push: %@
skip-alert: %@
skip-reachability-check: %@
attempt-index: %lu,
masterKey: %@,
performUIOutOfProcess: %@,
VerifyCredentialReason: %@, 
INLINE_PASSWORD_ALERT_MESSAGE
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_SERVICE_TYPE_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
INLINE_PASSWORD_ALERT_OK_BUTTON
INLINE_PASSWORD_ALERT_CANCEL_BUTTON
PASSCODE_ALERT_TITLE_LOCKSCREEN
PASSCODE_ALERT_MESSAGE_LOCKSCREEN_GENERIC
PASSWORD_ALERT_TITLE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_LOCKSCREEN_GENERIC
INLINE_PASSWORD_ALERT_PASSCODE_PLACEHOLDER
INLINE_PASSWORD_ALERT_PASSWORD_PLACEHOLDER
INLINE_PASSWORD_ALERT_USERNAME_PLACEHOLDER
WRONG_PASSWORD_ALERT_TRY_AGAIN_BUTTON
WRONG_PASSWORD_ALERT_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_FAILED_BUTTON
WRONG_LOGIN_CODE_TRY_AGAIN_BUTTON
WRONG_LOGIN_CODE_ALERT_CANCEL_BUTTON
com.apple.ak.twofa
<%@: %p {
altDSID: %@,
proxiedAppName: %@,
serviceType: %@,
proxiedDevice: %@,
companionDevice: %@,
appProvidedData: %@,
teamID: %@,
appID: %@,
request: %@,
appProvidedContext: %@,
userSelection: %@,
clientAuthenticatedExternallyWithPassword: %@,
com.apple.ak.auth.xpc
passwordPrompt
passwordPromptGoToSettingsNotification
invalidAccountSave
invalidAccountUpdate
missingAccountServices
username
clientKey
privateEmailAddress
privateEmailClientBundle
<PrivateEmail: {%@} -> {%@} [%@]>
<PrivateEmail: {%@} -> {%@}>
v24@?0@"AKCustodianSetupResult"8@"NSError"16
v24@?0@"AKTrustedContactsSyncResult"8@"NSError"16
serialNumber
buildNumber
osVersion
model
lastUpdatedDate
trusted
circleStatus
clcg
clhs
clbg
_name
_serialNumber
_buildNumber
_operatingSystemName
_operatingSystemVersion
_model
_machineId
_lastUpdatedDate
_trusted
_inCircle
_colorCode
_enclosureColorCode
_coverGlassColorCode
_housingColorCode
_backingColorCode
<%@:%p> Name: %@, SN: %@, Build: %@, OS: %@, Version: %@, Model: %@, Timestamp: %@, Trusted: %d, Circle Status: %d, Color Code: %@ Additional Info %@
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
/System/Library/Frameworks/DeviceCheckInternal.framework/DeviceCheckInternal
/System/Library/PrivateFrameworks/DeviceCheckInternal.framework/DeviceCheckInternal
/AppleInternal/Library/Frameworks/DeviceCheckInternal.framework/DeviceCheckInternal
DCBAASigningController
v24@?0@"AKAuthorization"8@"NSError"16
v24@?0@"AKAuthorizationUserResponse"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v24@?0@"NSSet"8@"NSError"16
Cannot perform HME request - Insufficient security level
Cannot perform HME request - Phone as AppleID Account without reachable emails
self: (%p); Connection interrupted
self: (%p); Connection invalidated
error communicating to XPC: %@
Biometric validation of externalizedContext completed with result: %@ and error: %@
Failed to validate externalized Context data with error: %@
%@ deallocated
authkit/authenticate
 AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
AuthenticateWithContext
BEGIN [%lld]: AuthenticateWithContext  AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number2,name=Error}d 
END [%lld] %fs:AuthenticateWithContext  Error=%{public,signpost.telemetry:number2,name=Error}d 
Request with %@
Remote authentication service returned an error: %{public}@
Interactive authentication requested by background daemon, client error, AKAppleIDAuthenticationTypeSilentPreferred should be used
Interactive authentication requested by UI context, please investigate why silent auth could not be used
Remote authentication service came back with: %@
authkit/set-in-use
Remote authentication service returned an error: %@
Calling out to remote auth service for altDSID %@, service %@, inUse %@.
Result of remote call: %@. Error: %@.
Calling out to remote auth service for DSID %@, service %@, inUse %@.
authkit/fetch-user-info
Calling out to remote auth service to fetch user information for: %@
Result of remote call: %{private}@. Error: %{public}@
authkit/fetch-user-info-typed
authkit/update-user-info
Calling out to remote auth service to update user information for: %@
Result of remote call: %{public}@. Error: %{public}@
authkit/fetch-auth-mode
Calling out to remote auth service to fetch auth mode for: %@
Result of remote call: %lu. Error: %{public}@
authkit/fetch-device-list
authkit/fetch-device-map
Calling out to remote auth service to fetch device list information for: %{public}@
Result of remote call: %@. Error: %@
authkit/fetch-app-list
Calling out to remote auth service to fetch app list information for: %@
authkit/delete-authorization-list
Calling out to remote auth service to wipe authorization database
authkit/revoke-authorization
Calling out to remote auth service to revoke authorization for clientID: %@
authkit/satori-warmup
Calling out to remote auth service to warmup verification session
WarmUp Session completed...
authkit/set-configuration-info
Calling out to remote auth service to set: %@ for identifier: %@.
authkit/fetch-configuration-info
Calling out to remote auth service to fetch configuration for identifiers: %@.
Result of remote call: %{private}@. Error: %@
authkit/check-upgrade-eligibility
HSA 2 eligibility check came back with result: %@ and error: %@
authkit/generate-login-code
Generated code: %@. Error: %@
authkit/validate-login-code
authkit/perform-circle-request
authkit/check-in
Calling remote authentication service to perform check-in for altDSID: %@
Remote call to peform check-in for account with altDSID (%@) returned
Failed to perform check-in: %@
authkit/report-sign-out
authkit/report-sign-out-all
authkit/update-state-with-response
Asking akd to update state for %@ with auth response: %@
Result of updating auth state: %@. Error: %@
Failed to get passcode state with error: %@
Failed to get active code with error: %@
authkit/fetch-load-delegate
 enableTelemetry=YES 
FetchServerLoadDelegate
BEGIN [%lld]: FetchServerLoadDelegate  enableTelemetry=YES 
END [%lld] %fs:FetchServerLoadDelegate 
Asking akd for AKAppleIDServerResourceLoadDelegate for altDSID %@
Result of getting AKAppleIDServerResourceLoadDelegate: %@. Error: %@
Asking akd for AKAppleIDServerResourceLoadDelegate for context %@
authkit/sync-follow-up-items
Synchronizing follow ups for altDSID: %@
Synchronized follow ups %@ with error %@
Failed to synchronize follow ups due to xpc error: %@
authkit/followup-teardown
Asking akd to teardown: %@
Completed teardown request; Error: %@
authkit/renew-recovery-token
Asking akd to fetch a new recovery token token with info: %@
Failed to renew recovery token: %@
authkit/verify-master-key
Asking akd to verify master key with info: %@
Failed to verify master key: %@
authkit/persist-master-key
Failed to persist master key: %@
authkit/validate-vetting-token
Asking akd to validate vetting token %@ for altDSID: %@
Vetting-token validation failed due to expired master token. Attempting to re-auth...
Unable to refresh expired master token for vetting-token validation.
Master token should be fresh now. Reattempting vetting token-validation...
Result afer reauth: Is token valid? %@. Error: %@
Result: Is token valid? %@. Error: %@
authkit/create-appleid-allowed
Error getting create Apple ID state - %@
Allow create AppleID is determined to be - %@
Failed to get account name list: %@
Account name list: %@
authkit/fetch-url-bag
Calling out to remote auth service to url bag
Finished fetching URL bag. Error: %{public}@
Synchronously calling out to remote auth service to url bag
authkit/urlbag-update
Synchronously calling out to remote auth service to force update URL Bag for altDSID: %@
Finished updating urlbag update for AltDSID: %@ with result: %d error:%@
Connection to akd was interrupted!
Connection to akd was invalidated.
authkit/clear-session-cache
Connection to session remote service '%s' returned an error: %@
%{public}@ completed with error:%@
Initializing URL cache at URL: %@
Failed to generate cache due to missing container path!
AKURLSession %p is initializing...
NSURLSession became invalid with error: %@
Calling all pending completions.
Creating new NSURLSession with default config...
Asked to begin task with either nil request %@ or completion handler %@
Creating task %{public}@ for request at URL: %@
Resuming task %{public}@ for URL %@
Cancelling task %{public}@ for request %@
The data parameter is nil!
Aggregating received data for task: %{public}@
Task %{public}@ completed! Error: %@
Error is recoverable. Checking if retry is possible.
Retrying is not available on this platform.
Request failed for task: %{public}@ error: %@
Task %{public}@ Request response not of expected class!
Task %{public}@ Request completed with HTTP status code: %@
response: %@
data: %@
Task %{public}@ Server responded with authentication error
Detected an iCloud URL request, will not perform IdMS cert validation.
Server cert validity check failed!
Adding %lu credentials to the excluded credentials list.
Converting credential to base64: %@
Invalid credential was sent: %@
Adding credential to the list: %@
Fido registration was a success
Fido registration CredentialID: %@
Attestation Data: %@
ClientData: %@
Fido authentication was a success
Fido authentication Signature: %@
Authenticator Data: %@
UserID: %@
Unable to complete the Fido interaction: %{public}@
Provided error is%{public}@ an AS user cancel error.
inheritance-authkit/fetch-dataclass-rules
Connection to remote inheritance service to %s returned an error: %@
inheritance-authkit/persist-manifest
inheritance-authkit/update-beneficiary
inheritance-authkit/remove-beneficiary
Not an Internal Build. Aborting beneficiary alias setup
inheritance-authkit/create-beneficiary-alias
Bad client! You are not supposed to provide your own implementation of AKAppleIDAuthenticationUIProvider!
Context ID %@ has already been registered for authentication!
Missing context identifier, how did we get here?
authkit/should-continue
Client has no knowledge of context ID: %@
 Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
ShouldContinueWithResults
BEGIN [%lld]: ShouldContinueWithResults  Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
 ShouldContinue=%{public,signpost.telemetry:number2,name=ShouldContinue}d 
END [%lld] %fs:ShouldContinueWithResults  ShouldContinue=%{public,signpost.telemetry:number2,name=ShouldContinue}d 
Delegate says to continue? %@
Calling delegate...
No delegate available.
Error: We do not have a UI-capable context on the client side!
Error: We do not have a UI-capabable context on the client side!
%@: Presenting server provided UI for context (%@) with configuration (%@)
%@: Setting the anisette data provider (%@) on resource load delegate (%@)
Error: Context is not configured for a Fido presentation!
Asking the client context to present Fido ui.
Error: We do not have a UIProvider. Unable to launch the Fido service!
%@: Called to fetch peer attestation data for context (%@) with request (%@)
%@: Calling anisette data provider (%@) to fetch peer attestation data for request (%@)
%@: Unable to call anisette data provider (%@) to fetch peer attestation data for request (%@) because it does not respond to 'fetchPeerAttestationDataForRequest:completion:'
Server has provided an invalid context lacking an ID: %@
Error: No response data!
There was an error parsing body data! %@
The body data was not in the expected (dictionary) format!
JSON for response cannot be formed from dictionary: %@
Dictionary serialization to JSON encountered error: %@
AKDeviceListDeltaMessagePayload missing timestamp
AKDeviceListDeltaMessagePayload unable to process missing operation.
AKDeviceListDeltaMessagePayload unable to process non-string operation.
AKDeviceListDeltaMessagePayload unable to process unexpected operation.
Error converting object to json string: %@
Adding padding to the string: %{private}@
Starting retrieval of recovery info for appleId <%@ : %@>
Starting recovery using %@...
Failed to retrieve recovery info with error. %@
Recovered data for context: %@
Escrowed recovery info missing PRK
Escrowed recovery info missing MID
Building recovery response request
Recovered info %@
Failed to unwrap the icsc recovery identity token.
Unexpected recoveredValue: %@
Recovery response: %@
Recovery response body: %@
Building recovery response body
shouldSendServerResponseForRecoveredInfo: Recovery error: %@
AKAttestationSigner signatureForData: - No data, nothing to sign.
AKAttestationSigner signaturesForData: - No data, nothing to sign.
Populating results with bundle info: %@
Failed to fetch subscription info with error: %@
Connection to authorization service interrupted
Connection to authorization service invalidated
Passcode protected: %@
Unable to get Anisette data for request %@! Error: %@
Adding proxied attestation headers - %@
Unable to serialize request parameters! Error: %@
JSON Serialization exception: %@
Invalid JSON input: %@
Adding header with services: %@
Failed to attach PTN header
Failed to attach Phone Information header
Encountered incomplete Anisette data! %@
Encountered incomplete companion Anisette data! %@
Encountered incomplete Anisette data for proxied device! %@
Setting Execution mode header to CLI
Cached AuthKit configurations have changed. Clearing cache...
Nil key!
Connection to akd signer was interrupted!
Connection to akd signer was invalidated: this is fine.
authkit/absinthe-signature-for-data
Remote signing service returned an error: %@
Remote signing service successfully signed data.
authkit/signatures-for-data
%@: Generating attestation data for request (%@)
%@: Failed to generate attestation data with error (%@)
%@: Generated additional headers for attestation (%@)
No request, nothing to sign.
urlBag not present
We have additional absinthe headers %@
Failed to fetch absinthe headers, error: %@
Requesting additional Attestation for header
We have attesation headers: %@
Failed to fetch attestation headers, error: %@
Absinthe not enabled
No baaInterval
returing %lu additional headers
Absinthe data generated for proxy %@
Absinthe error %@
Unknown absinthe error
Attestation signature headers %@
Attestation error %@
Unknown attestation error
Fetching Icon for bundleID: %@
AMSMediaTask for bundleID %@ artwork resulted in error %@
AMSMediaResult: %@
Request for %@ received data of length %lu
Request for %@ failed %@
Exception caught: %@
Will not allow nil altDSID to be set!
Will not allow nil DSID to be set!
DSID *must* be an NSNumber, but we got: %@
Failed to update verified email to %@ with error %@ after observing verified primary email for account %@
Updated account %@ verified email to %@ after observing verified email followup tear down
Account %@ already updated to reflect email verified is %@.
Requested to update username to %@ for altDSID: %@
Updating username for: %@
Exception caught when fetching primary email address: %@
Exeption caught when setting primery email address: %@
Exception caught when fetching primary verified email: %@
Exception caught when setting primary verified email: %@
Exception caught when fetching phone as AppleID: %@
Exception caught when fetching underage property: %@
Exception caught when setting underage property: %@
Exception caught when fetching isSenior property: %@
Exception caught when setting isSenior property: %@
Exception caught when fetching demoAccount property: %@
Exception caught when setting demoAccount property: %@
Exception caught when fetching ageOfMajority property: %@
Exception caught when setting ageOfMajority property: %@
Exception caught when fetching Apple ID country code property: %@
Exception caught when setting Apple ID country code property %@
Exception caught when fetching authorization used: %@
Exception caught when setting authorization used: %@
Exception caught when fetching private attestation enabled: %@
Exception caught when setting private attestation enabled: %@
Exception caught when fetching reachable emails: %@
Exception caught when setting reachable emails: %@
Exception caught when fetching given name: %@
Exeption caught when setting given name: %@
Exception caught when fetching family name: %@
Exception caught when setting last name: %@
Exception caught when fetching forwarding email: %@
Exception caught when setting forwarding email: %@
Exception caught when fetching private email selected: %@
Exception caught when setting private email selection: %@
Exception caught when fetching slected email: %@
Exception caught when setting selected email: %@
Saving account %@...
Exception caught while saving account: %@
Could not save %@ due to %@
Saving of account %@ succeeed!
Last Authentication mode fetch occured %@ seconds ago
Exception caught when fetching device trust status: %@
Last Satori warmup occured %@ seconds ago
Fetching token: %@ for account %@
Nil account cannot possibly have a %@ token!
AuthKit credential is completely MIA! Account: %@. Fetch error: %@
AuthKit %@ token is missing! Account: %@. Credential: %@.
Account of service type "%@" is eligible for security upgrade.
No account is eligible for security upgrade.
Servicetype is not supported.
AuthKit account (%@) that is not an SA account is not eligible for security upgrade.
There is no matching service account for service type (%li). (%@) may be abandoned authkit account, but still on device.
Found %@ IDMS accounts for which PRK might need to be cleared.
%@: Attempting to remove continuation key for account (%@)
Attempted to remove a token for nil key
Nil credential for account %@. Odd, but no clearing is necessary.
Clearing %{public}@ for account %@...
Checking if IDMS account cleanup is necessary (%lu found)...
Removing unusued IDMS account %@...
Removing duplicate IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Failed to save account %@. Error: %@
Successfully saved account %@.
Done removing unused and duplicate IDMS accounts.
Invalid type for value of primaryAccount account property: %@. Account: %@
Invalid type for value of %@ account property: %@. Account: %@
Invalid type for value of appleIdAliases %@. Account: %@
Invalid type for altDSID %@. Account: %@
Found %@ iCloud accounts for which password cache might need to be cleared.
Found a cached raw password for %@... removing...
Exception caught when fetching isNotificationEmailAvailable property: %@
Exception caught when setting isNotificationEmailAvailable: %@
Exception caught when fetching canBeCustodian property: %@
Exception caught when setting canBeCustodian: %@
Exception caught when fetching canHaveCustodian property: %@
Exception caught when setting canHaveCustodian: %@
Exception caught when fetching custodianEnabled property: %@
Exception caught when setting custodianEnabled: %@
Exception caught when fetching custodianListVersion property: %@
Exception caught when setting custodianListVersion: %@
Exception caught when fetching custodianLastModified property: %@
Exception caught when setting custodianLastModified: %@
Exception caught when fetching beneficiary property: %@
Exception caught when setting beneficiary: %@
Exception caught when fetching canBeBeneficiary property: %@
Exception caught when setting canBeBeneficiary: %@
Exception caught when fetching canHaveBeneficiary property: %@
Exception caught when setting canHaveBeneficiary: %@
Exception caught when fetching beneficiaryListVersion property: %@
Exception caught when setting beneficiaryListVersion: %@
Exception caught when fetching hasMDMForAccount property: %@
Exception caught when setting hasMDMForAccount: %@
Exception caught when fetching fido property: %@
Exception caught when setting fido property: %@
private-email-authkit/lookup-email
PrivateEmailLocalLookup
BEGIN [%lld]: PrivateEmailLocalLookup  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailLocalLookup  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email lookup, error:%@
Connection to private email service to %s returned an error: %@
private-email-authkit/fetch-email
PrivateEmailRemoteFetch
BEGIN [%lld]: PrivateEmailRemoteFetch  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoteFetch  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email fetch, error:%@
private-email-authkit/register-email
PrivateEmailRemoteRegister
BEGIN [%lld]: PrivateEmailRemoteRegister  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoteRegister  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email fetch in background, error:%@
private-email-authkit/fetch-with-context
PrivateEmailContextFetch
BEGIN [%lld]: PrivateEmailContextFetch  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailContextFetch  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email context fetch, error:%@
authkit/PrivateEmailContext
getContext completed with context: %@
getContext failed: %@
private-email-authkit/delete-db
PrivateEmailDeleteDatabase
BEGIN [%lld]: PrivateEmailDeleteDatabase  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailDeleteDatabase  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/list-version
PrivateEmailListVersion
BEGIN [%lld]: PrivateEmailListVersion  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailListVersion  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/remove-key
PrivateEmailRemoveKey
BEGIN [%lld]: PrivateEmailRemoveKey  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoveKey  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/fetch-email-list
PrivateEmailLocalFetchAll
BEGIN [%lld]: PrivateEmailLocalFetchAll  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailLocalFetchAll  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Fetch Private Email list with %lu addresses, error:%@
Overflow while attempting to compress data!
Failed to allocate buffer for compressed data!
Failed to compress data!
Base64 encoded string after replacement: %{private}@
Attempting to unregister for all Apple IDs.
Unregistering all Apple IDs failed with error: %@
Unregistering all Apple IDs succeeded!
Current process is requesting signing synchronously, this is an error, please do not do this!
Grabbing signing headers from current device.
Failed to get signing headers, error: %@
Attempting to fetch peer anisette
Peer anisette fetch complete
Error while fetching proxied anisette %@
Not attmepting to fetch peer anisette
Configuring peer signing headers
%@: Fetching attestation data for proxied device (%@) with request (%@)
Peer attestation completed with results: %@
Failed to fetch peer attestation data: %@
No proxied device, no peer headers to attach.
Looks like we already have attestation data, thanks!
Not sending signing headers for peer
Cannot find application name for %@, got %@
Attaching app-name %@
Could not find application name for %@
Could not determine passcode state with error %@
Attaching PRK header
Signing request as ephemeral
Attaching ICSC header
Attaching Phone Info header
Attaching PTN header
Attaching PAC header
Harvested continuation header added %@
Signing request with common headers
Signing request with service token
Signing request with ID token
Signing request with HB token
Signing request with URLSwitching UrlKey
Signing request with CR token
Signing request with basic headers
Signing request with data center identifier
Setting execution mode to CLI
Signing request with Experimental Mode opt-in header
Server delegate missing bagUrlKey, cannot determine if BAA attestation is needed
Signing request with BAA headers
Decorating with: %@
Harvested continuation headers %@
AKCircleRequestPayload: Unable to parse payload from invalid response
AKCircleRequestPayload: Processing parsed response dictionary (%@)
AKCircleRequestPayload: Unable to parse response dictionary (%@)
AKCircleRequestPayload: Unable to parse presence SID (%@) as valid UUIDv4
AKCircleRequestPayload: Unable to parse plistData (nil)
AKCircleRequestPayload: Failed to parse plist (%@) from plist data (%@) with error (%@)
Parsing CFU Item Payload: %@
Settings a custom icon for the CFU with app id: %@
Couldn't find pyaload data to post notification.
Building recovery context with info: %@
_mutableJSONRequestForURL: %@
AlertHandler called with error: %@
Authorization alert - invalid context
Authorization alert dismissed - invalid context
Authorization alert dismissed - missing apple account
Authorization alert dismissed - unverified email
Authorization alert dismissed - insufficient security level
Authorization alert dismissed - cannot find server
Authorization alert dismissed - underage account
Authorization alert dismissed - passcode setup required
Authorization alert dismissed - managed account
Showing alert (%@) failed, user notification is nil!. Error: %d
No existing IdMS account for altDSID %@
No existing IdMS account for DSID %@
No existing IdMS account for username %@
No altDSID, DSID or username passed on context, unable to find account
Cannot pull up IDMS account without immutable username or altDSID.
Invalid token string! %@
Error: Got malformed GS token data!
Value for %@ is missing/invalid!
Nil value for expected header: %@
Unable to serialized token properties! Error: %@
Not going to do anything with non-HTTP response from URL: %@ Task: %{public}@.
Trying to get new Anisette headers to retry request for URL:%@ Task: %{public}@ ...
Redirecting urlRequest from URL: %@ to alternate URL: %@
Url Switch request failed with error: %@, ignoring URL Switch
Unable to append header for request %@! Error: %@
Passing along decorated request for: %@
Using proxied Anisette data for headers to URL: %@.
Fetching paired device Anisette data for headers to URL: %@.
Unable to append header for request %@! Task %{public}@ Error: %@.
Passing along decorated request for URL: %@ Task %{public}@.
Using proxied Anisette data for headers to URL: %@ Task %{public}@.
Fetching paired device Anisette data for headers to URL: %@. Task: %{public}@.
No handling for HTTP status code %@ in response for URL %@
No instance of AKAnisetteProvisioningController to handle HTTP code %@ in response to %@ %@.
Sync status code (%d) received for URL: %@
HTTP 434 without sync data received!
Anisette sync was successful!
Anisette sync failed! Error: %@
Reprovision status code (%d) received for URL: %@
Unable to reprovision because Anisette data could not be erased! Error: %@
Erased Anisette data successfully. Time to provision!
Provisioning new Anisette data failed! Error: %@
Successfully provisioned new Anisette data.
Handling response %@ for URL %@...
URL Switching state code (%d) received for URL: %@
No Value found for URLSwitching header ignoring URL Switching request
No Value found for Response URLSwitch data header ignoring URL Switching request
No URL found for UrlKey after URLBag update, ignoring URL Switching request
URLBag failed to update with error: %@, ignoring URL Switching request
Failed to find localized string for key: %{private}@
Feature Lisbon is supported. Is Lisbon available - %@
Redirecting to AuthKitUIService, to present basic login UI with context: %@
Context data is nil: %@
Trying to launch application with Scene Delegate
Unable to launch application: %@ with the error: %@
Successfully launched process: %@
Failed to launch application: %@ with error: %@
Call completion with authentication result with presentation completion: %@
Parsing server provided Data %@
AKAuthorizationCredential Successfully created with transaction id:%@
Called -[AKCoordinatedDataBlock start] after block has already been started. Ignoring call and not starting again.
Present Authorization call forwarded to UI provider
UI provider is nil
Authorization Client that has UI provider deallocated
Sync for account: %{private}@ - %{private}@
Last follow up refresh occured %@ seconds ago
Checking for sparse follow ups
Failed to fetch items, falling back to sync
Sparse followup item detected: %@
Will synchronize followups %@
Failed to update follow up synchronization date: %@
Updating follow up synchronization for %@
No followup items found in payload.
Synchronizing local follow up state.
Deleting: %@
Failed to clear existing follow ups: %@
Clearing Notifications: %@
Inserting: %@
Unknown action, ignoring...
Detected an item without an identifier, invalid payload
Updating existing item with identifier: %@
Existing item notification was previously dismissed, ignoring incoming notification
Incoming notification was forced, keeping it!
Found incoming sparse followups: %@
Found incoming full followups: %@
Missing username, trying to fetch one via idMS account
Matching account missing, there be dragons ahead!
Using idMS account username
Cannot perform request - Missing authorization request
Cannot perform request - Current platform require passcode setup
Cannot perform request - Missing account
Cannot perform request - Missing AppleAccount
Cannot perform request - Managed Accounts Not Permitted on Shared iPad
Cannot perform request - Managed Accounts Not Permitted
Cannot perform request - FedAuth Accounts Not Permitted
Cannot perform request - Invalid age
Cannot perform request - Insufficient security level
Cannot perform request - Account not verified.
Cannot perform password request without password request.
Account name is missing.
Account name value has an invalid type: %@
Primary email address is missing, probably MAKO account.
Primary email address value has an invalid type: %@
No aliases.
Aliases array value has an invalid type: %@
No additional Info.
User given name is missing.
User given name name value has an invalid type: %@
User family name is missing.
User family name value has an invalid type: %@
Mako Account Identifier Missing
Mako Account Identifier value has an invalid type: %@
User Apple ID country code is missing.
User apple id country code value has an invalid type: %@
User vetted primary email is missing, Possibly unverified or Mako Account.
No reachable emails for account
User reachable emails value has an invalid type: %@
No Forwarding email set for this account
Forwarding email value has an invalid type: %@
Previously selected email value has an invalid type: %@
No authorized applications list version set for this account
Authorized applications list version value has an invalid type: %@
No private email list version set for this account
Private email list version value has an invalid type: %@
CanBeCustodian is missing.
CanHaveCustodian is missing.
custodianEnabled is missing.
CustodianLastModified is missing or has invalid type.
canBeBeneficiary is missing.
canHaveBeneficiary is missing.
hasMDM is missing.
Managed organization type value has an invalid type: %@
Managed organization type has an invalid value: %@
Managed organization name value has an invalid type: %@
Managed organization isNotificationEmailAvailable value has an invalid type: %@
Managed organization notificationEmail value has an invalid type: %@
%{private}s called on unsupported platform, please file a radar!
System container path is %s
Error getting system container: %llu
Caught error (%@) unserializing AKDevice data (%@)
Caught error (%@) serializing self (%@)
Failed to check circle status: %@
System reports isPasscodeSet: %@
Local auth returned error: %@
Not biometric capable
authkit/anisette-provision
ProvisionAnisette
BEGIN [%lld]: ProvisionAnisette  enableTelemetry=YES 
END [%lld] %fs:ProvisionAnisette 
Remote Anisette service returned an error: %@
Remote Anisette service successfuly provisioned.
authkit/sync-sim
Remote Anisette service successfuly resynced provisioning data.
authkit/anisette-erase
EraseAnisette
BEGIN [%lld]: EraseAnisette 
END [%lld] %fs:EraseAnisette 
Remote Anisette service successfuly erased provisioning data.
authkit/anisette-for-request
Not allowed to use Anisette data with non-HTTPS URLs.
authkit/fetch-anisette
FetchAnisette
BEGIN [%lld]: FetchAnisette 
Remote Anisette service returned Anisette data.
END [%lld] %fs:FetchAnisette 
authkit/legacy-anisette
Remote Anisette service returned legacy Anisette data.
authkit/fetch-peer-attestation-data
FetchAttestation
BEGIN [%lld]: FetchAttestation 
END [%lld] %fs:FetchAttestation 
Remote Anisette service returned Attestation data.
Remote Attestation data returned %@ - error %@
%s (%d) called
%@: Unable to call anisette data provider (%@) to fetch peer attestation data for request (%@) because it does not implement 'fetchPeerAttestationDataForRequest:completion:'
request: %@
Providing birthday info.
Providing password info.
Providing Phone number info.
Finishing up Apple ID creation flow.
Error, not attempting to collect second factor code
Prompting for second factor code
Selecting trusted numbers
No trusted number selected
Server indicates we only have one trusted number, lets use that.
Sending selected trusted number
Selected trusted number response %@
Invalid trusted number selection %@ - %@
Received response %@
Attempt to show server UI with unsupported configuration (still in the works)
(%@)
User agreed to terms and conditions
Constructed SMS postback dictionary - %@
Client passed auth context with email value in altDSID property - this is an error, do not do this.
%@ being updated by %@
Cannot update auth context with nil context
Client set raw password to a PET - this is an error, please do not do this.
self.username is nil
Will prompt for password...
Will prompt for username and password...
Determined that we should show password field for username: %@
Showing login error...
Canceling second-factor entry prompt.
Nothing to dismiss right now.
Listening for code entry notification...
No longer listening for code entry notification.
Notified that 2FA code was entered, but code is empty!
Passing 2FA code to akd.
Dropping 2FA code because we are currently holding a reply block.
Closing login code prompt.
Received notification of login code entry. Forwarding to observer %@.
Presenting %@ to %@
custodian-authkit/initiate-custodian
CustodianSetupStart
BEGIN [%lld]: CustodianSetupStart  enableTelemetry=YES 
END [%lld] %fs:CustodianSetupStart 
Initiated Custodian with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to initiate custodian for context %@
Result of remote custodian initiation call: %@. Error: %{public}@
authkit/custodian-finalize-custodian
CustodianSetupFinalize
BEGIN [%lld]: CustodianSetupFinalize  enableTelemetry=YES 
END [%lld] %fs:CustodianSetupFinalize 
Finalized Custodian setup with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to finalize custodian for context %@
Error finalizing custodianship: %{public}@
Successfully finalized custodianship.
authkit/custodian-revoke-custodian
Revoke custodian with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to revoke custodian for context %@
Error revoking custodianship: %{public}@
Successfully revoked custodianship.
authkit/custodian-update-key
Update recovery key returned an error: %{public}@
Updating idMS recovery key with context %@
Error updating recovery key: %{public}@
Successfully updated recovery key with idMS.
custodian-authkit/start-custodian-recovery
CustodianRecoveryStart
BEGIN [%lld]: CustodianRecoveryStart  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryStart 
startCustodianRecoveryRequestWithContext completed with response: %@
startCustodianRecoveryRequestWithContext completed with error: %{public}@
custodian-authkit/fetch-code-config
fetchCustodianRecoveryCodeConfiguration completed with result: %@
Failed to fetch custodian recovery code configuration with error: %{public}@
custodian-authkit/custodian-recovery-circle
 RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
CustodianRecoveryMessage
BEGIN [%lld]: CustodianRecoveryMessage  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryMessage 
startCustodianRecoveryTransactionWithContext completed successfully
startCustodianRecoveryTransactionWithContext completed with error: %{public}@
XPC Connection failed or interrupted with error: %@ on call: startCustodianRecoveryTransactionWithContext
custodian-authkit/fetch-recovery-token
CustodianRecoveryToken
BEGIN [%lld]: CustodianRecoveryToken  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryToken 
fetchCustodianRecoveryTokenWithContext completed with error: %{public}@
fetchCustodianRecoveryTokenWithContext completed with token: %@
XPC Connection failed or interrupted with error: %@ on call: fetchCustodianRecoveryTokenWithContext
custodian-authkit/fetch-wrap-rkc
CustodianDataRecoveryKey
BEGIN [%lld]: CustodianDataRecoveryKey  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianDataRecoveryKey 
fetchCustodianDataRecoveryKey completed with response: %@
Failed to fetch custodian data recovery key with error: %{public}@
XPC Connection failed or interrupted with error: %@ on call: fetchCustodianDataRecoveryKeyWithContext
custodian-authkit/embargo-feedback
Starting call to send embargo end notification feedback to IdMS with context: %@
sendEmbargoEndNotificationFeedback failed with error: %{public}@
sendEmbargoEndNotification completed without error for transactionID: %@
XPC Connection failed or interrupted with error: %@ on call: sendEmbargoEndNotificationFeedbackWithContext
custodian-authkit/perform-trustedContacts-sync
Starting call to perform trusted contacts data sync with IdMS: %@
Result of trusted contacts data sync call: %@. Error: %{public}@
authkit/authorize
Authorization controller performAuthorizationWithContext called
Authorization completed with authorization: %@
Authorization failed: %@
authkit/begin-authorize
AuthorizationExternalAuthBegin
BEGIN [%lld]: AuthorizationExternalAuthBegin  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthBegin  Error=%{public,signpost.telemetry:number2,name=Error}d 
Begin Authorization completed with userResponse: %@
Begin Authorization failed: %@
authkit/continue-authorize
AuthorizationExternalAuthContinue
BEGIN [%lld]: AuthorizationExternalAuthContinue  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthContinue  Error=%{public,signpost.telemetry:number2,name=Error}d 
Continue Authorization completed with authorization: %@
Continue Authorization failed: %@
authkit/cancel-authorize
AuthorizationExternalAuthCancel
BEGIN [%lld]: AuthorizationExternalAuthCancel  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthCancel  Error=%{public,signpost.telemetry:number2,name=Error}d 
Cancel Authorization failed: %@
Cancel Authorization completed successfully
authkit/revokeUpgrade
Revoke completed successfully
Revoke failed: %@
authkit/credentialState
Credential State request returned with error: %@
Credential State returned with state: %@
authkit/credentialStateForClientID
authkit/presentationContext
getPresentationContext completed with presentation context: %@
authkit/performRequestWithSelection
performAuthorizationWithContext completed with presentation context: %@
%@: Authorization failed: %@
Attempting proxy auth with context: %@
Failed to fetch authorized URLs with XPC error: %@
Failed to fetch authorized URLs with error: %@
Failed to fetch apple owned domains with XPC error: %@
Failed to fetch apple owned domains with error: %@
fetchAppleIDAuthorizeHTMLResponseTemplate completed with result.
Failed to fetch authorization HTML response template with error: %@
continueFetchingIconWithCompletion completed with result.
Failed to continue fetching icon with error: %@
authkit/fetch-primary-bundleid
Calling out to remote auth service to fetch primary bundle ID for service: %@
authkit/store-proxied-authorization
Store proxied authorization completed
Store proxied authorization failed: %@
No URL for Apple ID Authorization
Authorization controller should process URL
Established connection between notification center endpoint and daemon service.
Failed to establish connection between notification center endpoint and daemon service with error: %@
Established connection between state broadcast handler endpoint and daemon service.
Failed to establish connection between state broadcast handler endpoint and daemon service with error: %@
Q8B
AKPrivateEmailValidator
AKAuthorizationRevokeUpgradeContext
NSCopying
NSSecureCoding
NSCoding
AKCarouselAlertProviderServiceInterface
NSObject
AKCarouselAlertClientConnection
AKAuthorizationCredentialStateRequest
AKLAContextValidator
AKFLFollowUpController
AKCustodianDaemonProtocol
AKCustodianDaemonInterface
AKExtensionItem
AKAuthorizationUpgradeContext
AKAdaptiveService
NSXPCListenerDelegate
_AKMessageForwarder
AKAdaptiveServiceInterface
AKAdaptiveServiceShouldHandle
AKAppleIDAuthenticationController
AKAuthenticationController
AKCustodianSetupResult
AKURLDataTask
AKURLSession
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKFidoAuthorizationController
ASAuthorizationControllerDelegate
AKConsentedApplication
AKInheritanceAccessKey
AKAuthorizationStateBroadcastHandler
AKAuthorizationStateBroadcastHandlerInterface
AKAuthorizationTVServicePresenter
AKAttestationData
AKInheritanceInterface
AKInheritanceController
AAFXPCSessionDelegate
AKAppleIDAuthenticationLimitedUIProvider
AKAppleIDServerAuthenticationUIProvider
AKAppleIDAuthenticationUIProvider
AKAppleIDAuthenticationContextManager
AKAppleIDAuthenticationClientProtocol
AKAnisetteProvisioningClientProtocol
AuthKit
AKDeviceListDeltaMessagePayload
AKCustodianContext
AKAuthenticationContext
AKAuthorizationUserResponse
AKNativeAccountRecoveryController
CDPAuthProvider
AKAttestationSigner
AKFollowUpTearDownContext
AKAuthorizationPresenterHostProtocol
AKAuthorizationPresenterHostInterface
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKFollowUpProviderFactory
AKCustodianDaemonConnection
AKCredentialRequestContext
AKAppleIDAuthenticationClientInterface
AKAuthorizationScopesUserSelection
AKConfiguration
AKAppleIDSigningController
Convenience
AKInheritanceContext
AKDeviceListRequestContext
CGSize
AKMediaServicesController
AKAuthorizationDaemonProtocol
AKAuthorizationDaemonInterface
AKCertificatePinning
AKAccountManager
AKPrivateEmailDaemonProtocol
AKPrivateEmailClientProtocol
AKPrivateEmailController
AKAppleIDSigningDaemonProtocol
AKAppleIDSigningDaemonInterface
AKAuthorizationLoginChoice
AKLoginPresenterHostInterfaceProtocol
AKLoginPresenterHostInterface
AKBeneficiaryManifest
AKAppleIDServerResourceLoadDelegate
AKPrivateEmailPresenterHostProtocol
AKPrivateEmailPresenterHostInterface
AKDeveloperTeam
AKCircleRequestPayload
AKPrivateEmailDaemonInterface
AKPrivateEmailContext
AKURLBag
AKFollowUpFactoryImpl
AKFollowUpItemFactory
AKAccountRecoveryContext
AKAuthorizationNotificationHandler
AKAuthorizationNotificationHandlerInterface
AKCommandLineUtilities
AKFidoAuthenticationResponse
AKFidoResponse
AKAlertHandler
AKInheritanceCLIContext
Accounts
AKGrandSlamResponseHandler
AKToken
AKMasterToken
AKAppleIDSession
NSURLSessionAppleIDContext
AKAnisetteData
AKFeatureManager
AKFuture
AKAnisetteProvisioningClientInterface
AKLoginPresenter
AKAuthorizationCredential
AKCredential
AKApplicationMetadataInfo
AKFollowUpController
AKFollowUpProvider
AKTrustedPhoneNumber
AKFollowUpServerPayloadFormatter
AKAuthorization
AKIconContext
AKAbsintheSigner
AKCoordinatedDataBlock
AKCDPFactory
AKPasswordRequest
AKCircleRequestContext
AKTrustedContact
AKUsernameFormatter
AKFidoContext
AKAuthorizationClientImpl
AKAuthorizationClientProtocol
AKAnisetteProvisioningAndSigningDeamonInterface
AKAnisetteProvisioningDaemonProtocol
AKAnisetteProvisioningDaemonInterface
AKFollowUpSynchronizer
AKAppleIDAuthenticationDelegate
AKAuthorizationPresentationContext
AKNetworkObserver
AKServerRequestConfiguration
AKBaseFollowupManager
AKTrustedContactsSyncResult
AKAuthorizationAppSignInDiscovery
AKPasswordCredential
AKAuthorizationRequest
AKAuthHandlerImpl
AKAuthHandler
AKAuthorizationDaemonConnection
AKFidoRegistrationResponse
AKAuthorizationValidator
AKCredentialRequest
AKCredentialRequestProtocol
AKAuthorizationNotificationService
AKUserInformation
AKDevice
AKUtilities
AKAnisetteProvisioningController
_AKAnisetteProviderProxy
AKLoginCodeNotificationBuilder
AKAppleIDAuthenticationCommandLineContext
AKBeneficiaryAliasSetupResult
AKAppleIDAuthenticationSurrogateUIProvider
AKAppleIDAuthenticationContext
SecondFactorSupport
LocationNotificationSupport
AKAuthorizationContext
AKAppleIDAuthenticationDaemonProtocol
AKAppleIDAuthenticationDaemonInterface
AKPrivateEmailClientImpl
AKPrivateEmailClientInterface
AKAutoBugCapture
AKProxiedClientContext
AKPrivateEmail
AKCustodianController
AKRemoteDevice
AKAuthorizationClientInterface
AKBundleInformation
AKAuthorizationController
sharedInstance
securityLevelForAccount:
ak_errorWithCode:
reachableEmailAddressesForAccount:
count
phoneAsAppleIDForAccount:
errorWithDomain:code:userInfo:
canPerformRequestWithAccount:error:
encodeObject:forKey:
init
decodeObjectOfClass:forKey:
copy
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
transactionID
setTransactionID:
bundleID
setBundleID:
teamID
setTeamID:
.cxx_destruct
_transactionID
_bundleID
_teamID
T@"NSString",C,N,V_transactionID
T@"NSString",C,N,V_bundleID
T@"NSString",C,N,V_teamID
setInterruptionHandler:
setInvalidationHandler:
invalidate
unsafe_invalidate
dealloc
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
presentAlertWithDictionary:completion:
dismissAlert:
interfaceWithProtocol:
setRemoteObjectInterface:
internalQueue
xpcConnection
setXpcConnection:
resume
connection
remoteObjectProxyWithErrorHandler:
sharedConnection
setInternalQueue:
_internalQueue
_xpcConnection
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
T@"NSXPCConnection",&,N,V_xpcConnection
userID
setUserID:
clientID
setClientID:
altDSID
setAltDSID:
shouldIgnoreUserID
setShouldIgnoreUserID:
shouldIgnoreTeamID
setShouldIgnoreTeamID:
_shouldIgnoreUserID
_shouldIgnoreTeamID
_userID
_clientID
_altDSID
T@"NSString",C,N,V_clientID
T@"NSString",C,N,V_altDSID
TB,N,V_shouldIgnoreUserID
TB,N,V_shouldIgnoreTeamID
T@"NSString",C,N,V_userID
initWithExternalizedContext:
evaluatePolicy:options:error:
validateExternalizedContext:error:
initWithClientIdentifier:
initiateCustodianSetupWithContext:completion:
finalizeCustodianSetupWithContext:completion:
revokeCustodianWithContext:completion:
updateCustodianRecoveryKeyWithContext:completion:
startCustodianRecoveryRequestWithContext:completion:
fetchCustodianRecoveryCodeConfigurationWithCompletion:
startCustodianRecoveryTransactionWithContext:completion:
fetchCustodianRecoveryTokenWithContext:completion:
fetchCustodianDataRecoveryKeyWithContext:completion:
sendEmbargoEndNotificationFeedbackWithContext:urlKey:completion:
performTrustedContactsDataSync:completion:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
XPCInterface
ak_setContext:
userInfo
mutableCopy
archivedDataWithRootObject:requiringSecureCoding:error:
setObject:forKey:
removeObjectForKey:
setUserInfo:
objectForKey:
unarchivedObjectOfClass:fromData:error:
ak_context
extensionItemWithAppleIDAuthenticationContext:
T@"AKAppleIDAuthenticationContext",&,D,N,Sak_setContext:
appName
setAppName:
appID
setAppID:
serviceID
setServiceID:
nonce
setNonce:
state
setState:
_appName
_appID
_serviceID
_nonce
_state
T@"NSString",C,N,V_appName
T@"NSString",C,N,V_appID
T@"NSString",C,N,V_serviceID
T@"NSString",C,N,V_nonce
T@"NSString",C,N,V_state
anonymousListener
setDelegate:
initWithStrongReceiver:
_initWithInterface:object:
initWithWeakReceiver:
endpoint
setExportedInterface:
setExportedObject:
interruptionHandler
shouldHandleInvalidation
invalidationHandler
setShouldHandleInvalidation:
listener:shouldAcceptNewConnection:
initWithInterface:strongObject:
initWithInterface:weakObject:
listenerEndpoint
_exportedInterface
_exportedObject
_listener
_interruptionHandler
_invalidationHandler
T@?,C,N,V_interruptionHandler
T@?,C,N,V_invalidationHandler
initWithReceiver:strong:
currentConnection
activate
forwardingTargetForSelector:
_weakReceiver
_strongReceiver
boolValue
numberWithBool:
TB,N
initWithIdentifier:daemonXPCEndpoint:
initWithAuthenticationController:
setName:
delegate
raise:format:
authenticationType
_proxiedAppBundleID
registerContext:
unregisterContext:
code
setServiceIdentifier:
_authenticationServiceConnection
_sanitizedCopy
isContextEligibleForSilentAuth
_capabilityForUIDisplay
ak_redactedCopy
authenticateWithContext:completion:
synchronousRemoteObjectProxyWithErrorHandler:
numberWithInteger:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
fetchUserInformationForAltDSID:completion:
getUserInformationForAltDSID:completion:
updateUserInformationForAltDSID:userInformation:completion:
username
fetchAuthModeWithContext:completion:
objectForKeyedSubscript:
fetchDeviceMapWithContext:completion:
fetchAppListWithAltDSID:completion:
deleteAuthorizationDatabaseWithCompletion:
revokeAuthorizationForApplicationWithClientID:completion:
warmUpVerificationSessionWithCompletion:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
configurationInfoWithIdentifiers:forAltDSID:completion:
checkSecurityUpgradeEligibilityForContext:completion:
generateLoginCodeWithCompletion:
validateLoginCode:forAppleID:withCompletion:
performCircleRequestWithContext:completion:
performCheckInForAccountWithAltDSID:completion:
reportSignOutForAppleID:service:completion:
reportSignOutForAllAppleIDsWithCompletion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
isDevicePasscodeProtected:
activeLoginCode:
getServerUILoadDelegateForAltDSID:completion:
getServerUILoadDelegateWithContext:completion:
synchronizeFollowUpItemsForContext:completion:
teardownFollowUpWithContext:completion:
renewRecoveryTokenWithContext:completion:
verifyMasterKey:withContext:completion:
persistMasterKeyVerifier:withContext:completion:
domain
setUsername:
setIsUsernameEditable:
_setProxyingForApp:
validateVettingToken:forAltDSID:completion:
isCreateAppleIDAllowedWithCompletion:
accountNamesForAltDSID:completion:
fetchURLBagForAltDSID:completion:
fetchURLBagFromCache:altDSID:completion:
forceURLBagUpdateForAltDSID:urlSwitchData:completion:
lock
initWithListenerEndpoint:
unlock
clearSessionCacheWithCompletion:
sensitiveAuthenticationKeys
sensitiveTokenKeys
tokenDictionaryKeys
T@"NSSet",R,N
initWithIdentifier:
initWithDaemonXPCEndpoint:
setAppleIDWithAltDSID:inUse:forService:
setAppleIDWithDSID:inUse:forService:
fetchDeviceListWithContext:completion:
fetchDeviceListWithContext:error:
fetchAuthorizedAppListWithContext:error:
deleteAuthorizationDatabase:
revokeAuthorizationForApplicationWithClientID:error:
validateLoginCode:forAppleID:completion:
synchronizeFollowUpItemsForContext:error:
verifyMasterKey:context:completion:
persistMasterKeyVerifier:context:completion:
accountNamesForAltDSID:
_urlBagFromCache:altDSID:withError:
deallocHandler
setDeallocHandler:
_daemonXPCEndpoint
_contextManager
_connectionLock
_deallocHandler
T@?,C,N,V_deallocHandler
T@"<AKAppleIDAuthenticationDelegate>",W,N
allocWithZone:
initWithData:encoding:
substringToIndex:
stringWithFormat:
encryptedPRKC
setEncryptedPRKC:
ownerCustodianAltDSID
setOwnerCustodianAltDSID:
_encryptedPRKC
_ownerCustodianAltDSID
T@"NSData",C,N,V_encryptedPRKC
T@"NSString",C,N,V_ownerCustodianAltDSID
setCanceledOrCompleted:
receivedData
response
_completeWithError:
request
setRequest:
retryCount
setRetryCount:
underlyingTask
setUnderlyingTask:
completionHandler
setCompletionHandler:
setReceivedData:
lastRetryError
setLastRetryError:
canceledOrCompleted
_canceledOrCompleted
_request
_retryCount
_underlyingTask
_completionHandler
_receivedData
_lastRetryError
T@"NSURLRequest",&,N,V_request
TQ,N,V_retryCount
T@"NSURLSessionDataTask",&,N,V_underlyingTask
T@?,C,N,V_completionHandler
T@"NSMutableData",&,N,V_receivedData
T@"NSError",&,N,V_lastRetryError
TB,N,V_canceledOrCompleted
set_usesAppleIDContext:
_createURLSessionUsesAppleIDContext:
defaultSessionConfiguration
_urlBagCache
setURLCache:
setWaitsForConnectivity:
setTimeoutIntervalForResource:
set_appleIDContext:
defaultSessionObjectWithConfiguration:
setRequestCachePolicy:
systemContainerCacheURL
initWithMemoryCapacity:diskCapacity:directoryURL:
removeAllCachedResponses
allValues
countByEnumeratingWithState:objects:count:
_unsafe_completeTask:withError:
_usesAppleIDContext
setMaxConcurrentOperationCount:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
absoluteString
_URLSession
dataTaskWithRequest:
taskIdentifier
numberWithUnsignedInteger:
cancel
appendData:
isRecoverableError:
_unsafe_retryTaskIfPossible:
isEqualToString:
dictionaryWithObjects:forKeys:count:
statusCode
beginDataTaskWithRequest:completionHandler:
protectionSpace
host
containsString:
authenticationMethod
serverTrust
isValidCertificateTrust:forHostname:
sharedURLSession
sharedAnisetteFreeURLSession
sharedCacheEnabledURLSession
sharedCacheEnabledAnisetteFreeSession
sharedCacheReliantAnisetteFreeSession
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
cancelDataTask:
beginAuthenticationDataTaskWithRequest:completionHandler:
_urlSession
_sessionQueue
_tasksByIdentifier
__usesAppleIDContext
TB,N,V__usesAppleIDContext
setContext:
_requestFromContext:
_startAuthControllerWithRequest:context:
_authRequestFromContext:
arrayWithObjects:count:
initWithAuthorizationRequests:
set_authController:
_authController
_populateCustomStringsFromContext:
uiProvider
presentationAnchorForAuthorizationController:
setPresentationContextProvider:
performRequests
relyingPartyIdentifier
initWithRelyingPartyIdentifier:
challenge
displayName
credentialName
userIdentifier
createCredentialRegistrationRequestWithChallenge:displayName:name:userID:
credentials
firstObject
length
ak_dataWithBase64UrlEncodedString:
dataUsingEncoding:
base64EncodedStringWithOptions:
initWithCredentialID:transports:
ak_map:
setExcludedCredentials:
initWithAlgorithm:
setCredentialParameters:
setResidentKeyPreference:
setAttestationPreference:
createCredentialAssertionRequestWithChallenge:
setAllowedCredentials:
credential
credentialID
rawAttestationObject
rawClientDataJSON
registrationCompletion
context
originalChallenge
initWithChallengeString:attestationsData:credentialID:clientData:relyingPartyIdentifier:credentialName:userIdentifier:
setRegistrationCompletion:
signature
rawAuthenticatorData
authCompletion
initWithAuthenticatorData:challengeString:relyingPartyIdentifier:signature:clientData:credentialID:userIdentifier:
setAuthCompletion:
promptHeader
setProxySheetHeaderOverride:
promptTitle
setProxySheetTitleOverride:
promptBody
setProxySheetSubtitleOverride:
promptIconData
setProxiedIconData:
promptIconScale
setProxiedIconScale:
setProxiedAssociatedDomains:
isFidoUserCancelError:
authorizationController:didCompleteWithAuthorization:
authorizationController:didCompleteWithError:
authorizationController:didCompleteWithCustomMethod:
performRegistrationRequestWithContext:completion:
performAuthenticationRequestWithContext:completion:
setUiProvider:
_uiProvider
_registrationCompletion
_authCompletion
__authController
_context
T@?,C,N,V_registrationCompletion
T@?,C,N,V_authCompletion
T@"ASAuthorizationController",&,N,V__authController
T@"AKFidoContext",&,N,V_context
T@"<AKFidoUIProvider>",&,N,V_uiProvider
integerValue
decodeObjectOfClasses:forKey:
decodeIntegerForKey:
encodeInteger:forKey:
initWithResponseInfo:
scopes
setScopes:
transferState
setTransferState:
origin
setOrigin:
primaryClientID
setPrimaryClientID:
_scopes
_transferState
_origin
_primaryClientID
T@"NSArray",C,N,V_scopes
Tq,N,V_state
T@"NSString",&,N,V_transferState
T@"NSString",&,N,V_primaryClientID
T@"NSString",&,N,V_origin
beneficiaryID
claimTokenData
isEqualToData:
claimTokenString
wrappedKeyData
wrappedKeyString
wrappingKeyData
wrappingKeyString
initWithBeneficiairyIdentifier:
setWrappingKeyData:
setWrappingKeyString:
setWrappedKeyData:
setWrappedKeyString:
setClaimTokenData:
setClaimTokenString:
_beneficiaryID
_wrappingKeyData
_wrappingKeyString
_wrappedKeyData
_wrappedKeyString
_claimTokenData
_claimTokenString
T@"NSUUID",R,N,V_beneficiaryID
T@"NSData",&,N,V_wrappingKeyData
T@"NSString",&,N,V_wrappingKeyString
T@"NSData",&,N,V_wrappedKeyData
T@"NSString",&,N,V_wrappedKeyString
T@"NSData",&,N,V_claimTokenData
T@"NSString",&,N,V_claimTokenString
credentialStateDidChange:forApplicationWithClientID:
_typeFromString:
_stringForType:
setObject:forKeyedSubscript:
_filterDeprecatedType:
typeOfMessage:
buildDidTapNotificationMessage
buildDidStartServerAuthorizationMessage
buildFetchAppIconMessage
buildFetchAppIconReplyWithImageData:imageScale:
allKeys
initWithDictionary:
attestationHeaders
setAttestationHeaders:
_attestationHeaders
T@"NSDictionary",C,N,V_attestationHeaders
fetchManifestOptionsWithInheritanceContext:completion:
setupBeneficiaryWithInheritanceContext:completion:
updateBeneficiaryWithInheritanceContext:completion:
removeBeneficiaryWithInheritanceContext:completion:
_setupBeneficiaryAliasWithInheritanceContext:completion:
initWithServiceName:remoteProtocol:options:
initWithRemoteServiceConfig:delegate:
initWithXPCSession:
remoteServiceProxyWithErrorHandler:
currentDevice
isInternalBuild
configureRemoteInterface:
configureExportedInterface:
exportedObject
remoteServiceDidInterrupt
remoteServiceDidInvalidate
remoteService
setRemoteService:
_remoteService
T@"AAFXPCSession",&,N,V_remoteService
hasPrefix:
_identifier
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
_clientSideContextForServerContext:
presentKeepUsingUIForAppleID:completion:
dismissKeepUsingUIWithCompletion:
presentBasicLoginUIWithCompletion:
dismissBasicLoginUIWithCompletion:
presentLoginAlertWithError:title:message:completion:
presentSecondFactorUIWithCompletion:
dismissSecondFactorUIWithCompletion:
presentSecondFactorAlertWithError:title:message:completion:
presentBiometricOrPasscodeValidationForAppleID:completion:
presentServerProvidedUIWithConfiguration:completion:
dismissServerProvidedUIWithCompletion:
anisetteDataProvider
resourceLoadDelegate
setAnisetteDataProvider:
presentNativeRecoveryUIWithContext:completion:
dismissNativeRecoveryUIWithCompletion:
presentFidoAuthForContext:fidoContext:completion:
provisionAnisetteWithCompletion:
syncAnisetteWithSIMData:completion:
eraseAnisetteWithCompletion:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
legacyAnisetteDataForDSID:withCompletion:
fetchPeerAttestationDataForRequest:completion:
_updateWithValuesFromContext:
provisionAnisetteForContext:withCompletion:
syncAnisetteForContext:withSIMData:completion:
eraseAnisetteForContext:withCompletion:
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
legacyAnisetteDataForContext:DSID:withCompletion:
fetchPeerAttestationDataForContext:withRequest:completion:
presentKeepUsingUIForContext:appleID:completion:
dismissKeepUsingUIForContext:withCompletion:
presentBasicLoginUIForContext:completion:
dismissBasicLoginUIForContext:completion:
presentLoginAlertForContext:withError:title:message:completion:
presentSecondFactorUIForContext:completion:
dismissSecondFactorUIForContext:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentServerProvidedUIForContext:withConfiguration:completion:
dismissServerProvidedUIForContext:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
dismissNativeRecoveryUIForContext:completion:
presentBiometricOrPasscodeValidationForContext:completion:
launchOutOfProcessAuthentication:surrogateID:withErrorHandler:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
_authContextsByUUID
_authContextsQueue
_delegate
T@"<AKAppleIDAuthenticationDelegate>",W,N,V_delegate
propertyListWithData:options:format:error:
JSONObjectWithData:options:error:
stringByReplacingOccurrencesOfString:withString:
initWithCapacity:
_ak_shortenServiceIdentifier:
_ak_truncateTokenString:
enumerateKeysAndObjectsUsingBlock:
containsObject:
_ak_truncateTokenDict:
ak_mapObjects:
initWithString:
ak_urlEncoded
initWithName:value:
addObject:
setQueryItems:
query
isValidJSONObject:
dataWithJSONObject:options:error:
ak_mapObjectsNullable:
ak_urlQueryString
ak_toJSONString
ak_dictionaryWithResponseData:
ak_jsonDictionaryWithResponseData:
doubleValue
dateWithTimeIntervalSince1970:
_convertOperationToEnum:
caseInsensitiveCompare:
initWithResponseBody:
operation
machineID
machineIDs
serialNumber
timestamp
_operation
_machineID
_machineIDs
_serialNumber
_timestamp
T@"NSString",R,C,N,V_altDSID
TQ,R,N,V_operation
T@"NSString",R,C,N,V_machineID
T@"NSArray",R,C,N,V_machineIDs
T@"NSString",R,C,N,V_serialNumber
T@"NSDate",R,C,N,V_timestamp
decodeBoolForKey:
encodeBool:forKey:
serviceType
setServiceType:
setAuthenticationType:
authenticationMode
setAuthenticationMode:
_proxiedAppName
_setProxiedAppName:
appProvidedData
setAppProvidedData:
appProvidedContext
setAppProvidedContext:
proxiedDevice
setProxiedDevice:
companionDevice
setCompanionDevice:
cliMode
setCliMode:
T@"NSString",C,N
Tq,N
TQ,N
T@"NSString",C,N,S_setProxiedAppName:
T@"NSDictionary",C,N
T@"AKDevice",C,N
_identityToken
_setIdentityToken:
_heartbeatToken
_setHeartbeatToken:
_cliMode
set_cliMode:
ownerAppleID
setOwnerAppleID:
custodianUUID
setCustodianUUID:
wrappingKeyRKC
setWrappingKeyRKC:
custodianSetupToken
setCustodianSetupToken:
pushToken
setPushToken:
recoverySessionID
setRecoverySessionID:
custodianRecoveryToken
setCustodianRecoveryToken:
aaData
setAaData:
idmsData
setIdmsData:
recoveryStep
setRecoveryStep:
ownerDevice
setOwnerDevice:
clientErrorCode
setClientErrorCode:
notificationAction
setNotificationAction:
custodianUUIDs
setCustodianUUIDs:
beneficiaryUUIDs
setBeneficiaryUUIDs:
lastDataSyncTimestamp
setLastDataSyncTimestamp:
custodianContacts
setCustodianContacts:
beneficiaryContacts
setBeneficiaryContacts:
__cliMode
_ownerDevice
_appProvidedData
_companionDevice
_proxiedDevice
_serviceType
_appProvidedContext
_authenticationMode
_authenticationType
_ownerAppleID
_custodianUUID
_wrappingKeyRKC
_custodianSetupToken
_pushToken
_recoverySessionID
_custodianRecoveryToken
_aaData
_idmsData
_recoveryStep
_clientErrorCode
_notificationAction
_custodianUUIDs
_beneficiaryUUIDs
_lastDataSyncTimestamp
_custodianContacts
_beneficiaryContacts
T@"NSString",C,N,S_setIdentityToken:,V_identityToken
T@"NSString",C,N,S_setHeartbeatToken:,V_heartbeatToken
T@"NSString",C,N,V_ownerAppleID
T@"NSUUID",C,N,V_custodianUUID
T@"NSData",C,N,V_wrappingKeyRKC
T@"NSString",C,N,V_custodianSetupToken
T@"NSString",C,N,V_pushToken
T@"NSString",C,N,V_recoverySessionID
T@"NSString",C,N,V_custodianRecoveryToken
T@"NSData",C,N,V_aaData
T@"NSData",C,N,V_idmsData
T@"NSString",C,N,V_recoveryStep
TB,N,V_ownerDevice
Tq,N,V_clientErrorCode
Tq,N,V_notificationAction
TB,N,V_cliMode
T@"NSArray",C,N,V_custodianUUIDs
T@"NSArray",C,N,V_beneficiaryUUIDs
T@"NSDate",C,N,V_lastDataSyncTimestamp
T@"NSArray",C,N,V_custodianContacts
T@"NSArray",C,N,V_beneficiaryContacts
Tq,N,V_serviceType
TQ,N,V_authenticationType
TQ,N,V_authenticationMode
T@"NSString",C,N,S_setProxiedAppName:,V_proxiedAppName
T@"NSDictionary",C,N,V_appProvidedData
T@"NSString",C,N,V_appProvidedContext
T@"AKDevice",C,N,V_proxiedDevice
T@"AKDevice",C,N,V_companionDevice
TB,N,V__cliMode
selectedRequest
setSelectedRequest:
userSelection
setUserSelection:
loginChoice
setLoginChoice:
rawAccountPassword
setRawAccountPassword:
_selectedRequest
_userSelection
_loginChoice
_rawAccountPassword
T@"<AKCredentialRequestProtocol>",&,N,V_selectedRequest
T@"AKAuthorizationScopesUserSelection",&,N,V_userSelection
T@"NSNumber",&,N,V_loginChoice
T@"NSString",C,N,V_rawAccountPassword
UTF8String
dataWithBytes:length:
ak_SHA256
ak_hexString
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
substringFromIndex:
predicateWithFormat:
evaluateWithObject:
ak_SHA256String
ak_truncatedCopy
ak_stringByZeroPaddingOccurencesOfString:
ak_safeBase64String
ak_isEmailAddress
ak_base64EncodedJsonFromObject:
authContext
setAppleID:
decodedRecoveryPETString
setPasswordEquivToken:
DSID
longLongValue
numberWithLongLong:
setDsid:
supportsMasterKeyRecovery
setIdmsMasterKeyRecovery:
mandatesRecoveryKey
setMandatesRecoveryKey:
idmsMasterKeyRecovery
setIdmsRecovery:
setGuestMode:
appleID
dsid
recoveryControllerWithContext:
setAuthProvider:
cdp_isCDPErrorWithCode:
postBodyForiCSCServerUIResponseWithContext:recoveryError:
_mapICSCRecoveryResultsToAuthKit:
performRecovery:
dictionary
cdpIDMSRecordPRKKey
cdpIDMSRecordMIDKey
recoveryContinuationURL
requestWithURL:
setHTTPMethod:
decodedRecoveryIdentityTokenString
ak_addICSCRecoveryHeaderWithIdentityToken:forAltDSID:
ak_addRecoveryHeaderWithIdentityToken:forAltDSID:
stringValue
setValue:forHTTPHeaderField:
ak_setBodyWithParameters:
allHTTPHeaderFields
cdpErrorDomain
localizedFailureReason
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:verifyMasterKey:completion:
initWithContext:uiProvider:
presentNativeRecoveryUIWithCompletion:
_recoveryController
_recoveryContext
_cdpUiProvider
_baaSignatureForData:completion:
_baaSignaturesForData:completion:
baaSignaturesForData:completion:
baaSignatureForData:completion:
sharedSigner
T@"AKAttestationSigner",R,N
signatureForData:options:completion:
signaturesForData:options:completion:
itemIdentifier
setItemIdentifier:
akAction
setAkAction:
txnid
setTxnid:
isContinuityPush
setIsContinuityPush:
_isContinuityPush
_itemIdentifier
_akAction
_txnid
T@"NSString",C,N,V_itemIdentifier
T@"NSString",C,N,V_akAction
T@"NSString",C,N,V_txnid
T@"NSString",C,N,V_idmsData
TB,N,V_isContinuityPush
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationRequestFinishedWithAuthorization:error:completion:
continueFetchingIconWithCompletion:
phoneCertificate
setPhoneCertificate:
slotID
setSlotID:
_phoneCertificate
_slotID
T@"NSString",&,N,V_phoneCertificate
Tq,N,V_slotID
initWithQueue:
getSubscriptionInfoWithError:
array
getCurrentDataSubscriptionContextSync:
getUserDefaultVoiceSubscriptionContext:
subscriptionsInUse
subscriptions
uuid
indexOfObjectPassingTest:
numberWithInt:
getMobileSubscriberHomeCountryList:error:
phoneNumber
_formattedValueForPhoneNumber:countryCode:
label
T@"AKCarrierBundleUtilities",R
phoneBundleInfoWithAdditionalInfo:error:
_telephonyClient
_carrierUtilitiesQueue
initWithFLFollowupController:
sharedAuthKitFollowupProvider
_connection
_connectionInterruptionHandler
_connectionInvalidationHandler
_unfairLock
_listenerEndpoint
T@"NSXPCListenerEndpoint",R,N,V_listenerEndpoint
encodeDouble:forKey:
isProtectedWithPasscode
decodeDoubleForKey:
UUID
setIsEligibleForUpgradeFromPassword:
associatedDomains
deviceClass
deviceName
isRapportLogin
shouldSkipAuthorizationUI
ak_firstObjectMatchingFilter:
isEligibleForUpgradeFromPassword
authorizationRequest
authkitAccount
continuationTokenForAccount:
initWithUpgradeContext:
initWithProxiedClientContext:
setCredentialRequests:
_isEligibleForUpgradeFromPassword
_proxiedClientAppName
_proxiedClientBundleID
_proxiedClientServiceID
_proxiedClientTeamID
_proxiedClientAppID
credentialRequests
_requirePassword
set_requirePassword:
_sessionID
set_sessionID:
_shouldForceUI
set_shouldForceUI:
_shouldSkipBiometrics
set_shouldSkipBiometrics:
_shouldSkipAuthorizationUI
set_shouldSkipAuthorizationUI:
_informativeText
set_informativeText:
_iconName
set_iconName:
_iconData
set_iconData:
_iconScale
set_iconScale:
_iconSize
set_iconSize:
_shouldForcePrivateEmail
set_shouldForcePrivateEmail:
set_proxiedClientAppName:
set_proxiedClientBundleID:
set_proxiedClientAppID:
set_proxiedClientTeamID:
_proxiedAssociatedDomains
set_proxiedAssociatedDomains:
_isWebLogin
set_isWebLogin:
_isFirstPartyLogin
set_isFirstPartyLogin:
_isRapportLogin
set_isRapportLogin:
_callerBundleID
set_callerBundleID:
_proxiedDeviceName
set_proxiedDeviceName:
_proxiedDeviceClass
set_proxiedDeviceClass:
set_proxiedClientServiceID:
_upgradeContext
_clientShouldAuthenticateExternally
set_clientShouldAuthenticateExternally:
_authSessionTimeoutInterval
set_authSessionTimeoutInterval:
_externalAuthToken
set_externalAuthToken:
_externalLocalAuthData
set_externalLocalAuthData:
_continuationRequestIdentifier
set_continuationRequestIdentifier:
_shouldUseProxiedClientBundleIDForSRP
set_shouldUseProxiedClientBundleIDForSRP:
requestIdentifier
requestOptions
setRequestOptions:
setAuthorizationRequest:
passwordRequest
setPasswordRequest:
_passcodeProtected
_requestIdentifier
_requestOptions
_authorizationRequest
_passwordRequest
T@"NSString",C,N,V_sessionID
TB,N,V_shouldForceUI
TB,N,V_shouldSkipBiometrics
TB,N,V_shouldSkipAuthorizationUI
TB,N,V_shouldForcePrivateEmail
TB,N,V_requirePassword
TB,N,V_isWebLogin
TB,N,V_isFirstPartyLogin
TB,N,V_isRapportLogin
TB,R,N,V_isEligibleForUpgradeFromPassword
T@"NSString",&,N,V_callerBundleID
T@"AKAuthorizationUpgradeContext",R,N,V_upgradeContext
T@"NSString",&,N,V_proxiedClientAppName
T@"NSString",&,N,V_proxiedClientBundleID
T@"NSString",&,N,V_proxiedClientServiceID
T@"NSString",&,N,V_proxiedClientTeamID
T@"NSString",&,N,V_proxiedClientAppID
T@"NSArray",&,N,V_proxiedAssociatedDomains
T@"NSString",&,N,V_proxiedDeviceName
T@"NSString",&,N,V_proxiedDeviceClass
TB,N,V_clientShouldAuthenticateExternally
TB,N,V_shouldUseProxiedClientBundleIDForSRP
T@"NSString",C,N,V_iconName
T@"NSData",C,N,V_iconData
T@"NSNumber",C,N,V_iconScale
T@"NSValue",C,N,V_iconSize
T@"NSString",C,N,V_informativeText
Td,N,V_authSessionTimeoutInterval
T@"NSString",C,N,V_externalAuthToken
T@"NSData",C,N,V_externalLocalAuthData
T@"NSString",C,N,V_continuationRequestIdentifier
T@"NSUUID",R,C,N,V_requestIdentifier
TQ,N,V_requestOptions
T@"AKAuthorizationRequest",&,N,V_authorizationRequest
T@"AKPasswordRequest",&,N,V_passwordRequest
T@"NSArray",&,N
userInformation
makePrivateEmail
setUserInformation:
setMakePrivateEmail:
_makePrivateEmail
_userInformation
T@"AKUserInformation",C,N,V_userInformation
TB,N,V_makePrivateEmail
sharedConfiguration
shouldHideInternalBuildHeader
internalFeaturesMaskValue
localUserUUID
uniqueDeviceIdentifier
provisioningDeviceIdentifier
serverFriendlyDescription
date
ak_serverFriendlyString
isInCircle
anisetteDataForURLRequest:error:
ak_anisetteHeadersWithData:
ak_proxiedAnisetteHeadersWithData:
_setAuthorizationHeaderWithToken:altDSID:key:
ak_addGuardianAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithServiceToken:forAltDSID:
valueForHTTPHeaderField:
initWithBase64EncodedString:options:
dataWithPropertyList:format:options:error:
setHTTPBody:
reason
componentsJoinedByString:
currentLocale
uppercaseString
locale
localeIdentifier
localTimeZone
name
secondsFromGMT
ROMAddress
MLBSerialNumber
abbreviation
oneTimePassword
routingInfo
initWithFormat:
shouldAllowTestApplication
addEntriesFromDictionary:
ak_proxiedClientInfoHeadersWithDevice:
modelNumber
currentDeviceAuthenticationMode
currentDeviceAuthenticationModeForAuthContext:
ak_addInternalBuildHeader
ak_addFeatureMaskHeader
ak_addLocalUserUUIDHashHeader
ak_addAppleIDHeaderWithValue:
ak_addAppleIDUserModeHeaderWithValue:
ak_addDeviceUDIDHeader
ak_addProvisioningUDIDHeader
ak_addProxiedDeviceUDIDHeader:
ak_addClientInfoHeader
ak_addClientTimeHeader
ak_addCircleStatusHeader
ak_addCompanionClientInfoHeader:
ak_addProxiedClientInfoHeader:
ak_addEphemeralAuthHeader
ak_addAnisetteHeaders
ak_addProxiedAnisetteHeaders:
ak_addProxiedAttestationHeaders:
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addProxiedAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addAuthorizationHeaderWithServiceToken:forAltDSID:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addAuthorizationHeaderWithCustodianRecoveryToken:forAltDSID:
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithIdentityToken:heartbeatToken:serviceToken:forAltDSID:
ak_addURLSwitchingHeaderWithURLKey:altDSID:
ak_addDataCenterHeaderWithIdentifier:
ak_valueForEncodedHeaderWithKey:
ak_setJSONBodyWithParameters:
ak_addJSONRequestHeader
ak_addAbsintheHeaderWithValue:
ak_addLoggedInServicesHeaderForServices:
ak_addContextHeaderForServiceType:
ak_addContinutationKeyHeader:
ak_addPasswordResetKeyHeader:
ak_addCountryHeader
ak_addSKUCountryHeader
ak_addProxiedDeviceCountryHeader:
ak_addLocaleHeader
ak_addTimeZoneHeaders
ak_addPRKRequestHeader
ak_addProxiedDevicePRKRequestHeader
ak_addICSCIntentHeader
ak_addLocalUserHasAppleIDLoginHeader
ak_addDeviceROMHeader
ak_addDeviceMLBHeader
ak_addDeviceSerialNumberHeader
ak_addProxiedDeviceSerialNumberHeader:
ak_addPhoneNumberHeader
ak_addPhoneNumberCertificateHeaderWithValue:
ak_addPhoneInformationHeaderWithValue:
ak_addAcceptedSLAHeaderWithVersion:
ak_addClientApp:
ak_addProxyApp:
ak_addAppProvidedContext:
ak_addReAuthenticationHeader
ak_addOfferSecurityUpgrade:
ak_addProxiedDeviceICSCIntentHeader
ak_addShowWarranty
ak_addDeviceModel
ak_addCFUHeader:
ak_addDeviceConfigurationModeHeader
ak_addDeviceConfigurationModeHeaderForAuthContext:
ak_addRequestUUIDHeader:
ak_addExecutionModeHeader:
ak_addClientBundleIDHeader:
ak_addProxiedBundleIDHeader:
ak_addFidoRecoveryTokenHeader:
ak_addPrivateEmailDomainHeader:
ak_addPrivateEmailOriginHeader:
ak_addPrivateEmailAppBundleIdHeader:
ak_addPrivateEmailAppNameHeader:
ak_clientTimeHeader
ak_localeHeader
ak_timeZoneHeader
ak_clientInfoHeader
ak_deviceUDIDHeader
ak_anisetteHeadersWithCompanionData:
ak_proxiedHeadersForDevice:anisetteData:
removeAllObjects
standardUserDefaults
configurationValueForKey:
setConfigurationValue:forKey:
unsignedIntegerValue
overrideForKey:
setOverride:forKey:
shouldBypassCustodianDeviceCheck
shouldEnableBeneficiaryLiveOn
shouldRequestPiggybackingPresenceEnforcement
shouldFakeAuthSuccess
setShouldFakeAuthSuccess:
shouldDisablePiggybacking
setShouldDisablePiggybacking:
shouldSuppressHSA2Suggestions
setShouldSuppressHSA2Suggestions:
shouldAddHSA2CreateHeader
setShouldAddHSA2CreateHeader:
shouldAllowPhoneNumberAccounts
setShouldAllowPhoneNumberAccounts:
shouldAllowExperimentalMode
setShouldAllowExperimentalMode:
setShouldHideInternalBuildHeader:
shouldAllowDemoMode
setShouldAllowDemoMode:
setShouldAllowTestApplication:
shouldEnableTestAccountMode
setShouldEnableTestAccountMode:
shouldSuppressModalSheetsInMacBuddy
setShouldSuppressModalSheetsInMacBuddy:
shouldAutocycleAppsInTiburon
setShouldAutocycleAppsInTiburon:
shouldAlwaysShowWelcome
setShouldAlwaysShowWelcome:
shouldAutocycleAppsInWebTakeover
setShouldAutocycleAppsInWebTakeover:
lastKnownIDMSEnvironment
setLastKnownIDMSEnvironment:
piggybackingIDMSPresenceOverride
setPiggybackingIDMSPresenceOverride:
piggybackingLocalPresenceOverride
setPiggybackingLocalPresenceOverride:
setShouldBypassCustodianDeviceCheck:
setShouldEnableBeneficiaryLiveOn:
shouldEnableSigninWithMAID
setShouldEnableSigninWithMAID:
requestedCloudPartition
_validCloudPartition:
setRequestedCloudPartition:
_cachedSettings
_notificationToken
_settingsQueue
TQ,R,N
_connectionInterrupted
_connectionInvalidated
absintheSignatureForData:completion:
signingHeadersForRequest:completion:
attestationDataForRequest:completion:
setIsProxy:
initialURLKey
setInitialURLKey:
authenticationController
setAuthenticationController:
shouldSendAbsintheHeader
setShouldSendAbsintheHeader:
_signerLock
_signingQueue
_isProxy
_shouldSendAbsintheHeader
_initialURLKey
_authenticationController
T@"AKAppleIDAuthenticationController",&,N,V_authenticationController
TB,N,V_shouldSendAbsintheHeader
TB,N,V_isProxy
T@"NSString",&,N,V_initialURLKey
_additionalAbsintheHeadersForRequest:completion:
underlyingErrors
_additionalAttestationHeadersForRequest:options:completion:
HTTPBody
ak_errorWithCode:userInfo:
ak_SHA256Data
lowercaseString
hasUniqueDeviceIdentifier
signWithBAAHeaders:completion:
initWithOwnerAltDSID:
initWithAuthenticationContext:
beneficiaryIdentifier
setBeneficiaryIdentifier:
beneficiarySetupToken
setBeneficiarySetupToken:
manifest
setManifest:
accessKey
setAccessKey:
_beneficiaryIdentifier
_beneficiarySetupToken
_manifest
_accessKey
T@"NSString",C,N,V_beneficiaryIdentifier
T@"NSString",C,N,V_beneficiarySetupToken
T@"AKBeneficiaryManifest",&,N,V_manifest
T@"AKInheritanceAccessKey",&,N,V_accessKey
TB,N,VcliMode
includeUntrustedDevices
setIncludeUntrustedDevices:
includeFamilyDevices
setIncludeFamilyDevices:
services
setServices:
operatingSystems
setOperatingSystems:
_includeUntrustedDevices
_includeFamilyDevices
_services
_operatingSystems
TB,N,V_includeUntrustedDevices
TB,N,V_includeFamilyDevices
T@"NSArray",C,N,V_services
T@"NSArray",C,N,V_operatingSystems
CGSizeValue
bagSubProfile
bagSubProfileVersion
bagForProfile:profileVersion:
mainBundle
bundleIdentifier
initWithType:clientIdentifier:clientVersion:bag:
setBundleIdentifiers:
setIncludedResultKeys:
setAdditionalPlatforms:
perform
responseDataItems
_artworkURLFromResult:size:updatingIconContext:
setData:
addFinishBlock:
artworkDictionary
setMaskingStyle:
URLWithSize:cropStyle:format:
appIconForBundleID:size:completion:
objCType
getValue:size:
performAuthorization:completion:
performAuthorizationWithContext:withUserProvidedInformation:completion:
beginAuthorizationWithContext:completion:
continueAuthorizationWithContext:completion:
cancelAuthorizationWithContext:completion:
getCredentialStateForRequest:completion:
getCredentialStateForClientID:completion:
getPresentationContextForRequestContext:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
revokeUpgradeWithContext:completion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
fetchPrimaryApplicationInformationForWebServiceWithInfo:completion:
continueFetchingIconForRequestContext:completion:
establishConnectionWithNotificationHandlerEndpoint:completion:
establishConnectionWithStateBroadcastHandlerEndpoint:completion:
startDiscoveryWithCompletion:
storeAuthorization:forProxiedRequest:completion:
isAccountsFrameworkAvailable
accountPropertyForKey:
setAccountProperty:forKey:
aliasesForAccount:
enumerateObjectsUsingBlock:
formattedUsernameFromUsername:
authKitAccountWithAltDSID:
verifiedPrimaryEmailForAccount:
setVerifiedPrimaryEmail:forAccount:
saveAccount:error:
_setUsername:forAccount:
appleIDAccountWithAltDSID:
iCloudAccountForAltDSID:
store
saveVerifiedAccount:error:
performWithinPersonaForAccount:withBlock:
updateAuthModeTimestampForAccount:
timeIntervalSinceDate:
numberWithDouble:
hearbeatTokenForAccount:error:
continuationTokenForAccount:error:
passwordResetTokenForAccount:error:
passwordResetTokenBackupForAccount:error:
_tokenWithName:forAccount:error:
tokenWithExternalizedVersionString:
credentialForAccount:serviceID:
token
_removeTokenKey:forAccount:
credentialForAccount:error:
credentialItemForKey:
authKitAccountType
accountsWithAccountType:options:error:
accountTypeWithAccountTypeIdentifier:error:
appleIDAccountType
altDSIDforPrimaryiCloudAccount
_serviceTypesForSecurityUpgrade
_serviceTypeForServiceNameString:
accountsUsingService:
allObjects
_isAccountEligibleForSecurityUpgrade:ofServiceType:
bagForAltDSID:
securityUpgradeServiceNames
_defaultSecurityUpgradeServiceNames
accountTypeForTypeIdentifier:
_matchingServiceAccountForAuthKitAccount:service:
_accountTypeForServiceType:
accountsWithAccountType:
altDSIDForAccount:
creationDate
compare:
_removeTokenForKeys:forAccount:
setCredentialItem:forKey:
setCredential:
removeObject:
allAuthKitAccounts
servicesUsingAccount:
stringRepresentationForService:
removeAccount:withCompletionHandler:
iCloudAccountForAppleID:
isPrimaryiCloudAccount:
iCloudAccountType
_aliasesForiCloudAccount:
_altDSIDForiCloudAccount:
primaryiCloudAccount
_clearRawPasswordForAccount:
personaIDIfCurrentPersonaIsDataSeparated
T@"AKAccountManager",R,N
setAltDSID:forAccount:
DSIDForAccount:
setDSID:forAccount:
combinedAliasesAndReachableEmailsForAccount:
setAliases:forAccount:
formattedUsernameForAccount:
updateVerifiedEmail:forAccountWithAltDSID:
updateUsername:forAccountsWithAltDSID:
primaryEmailAddressForAccount:
setPrimaryEmailAddress:forAccount:
setPhoneAsAppleID:forAccount:
userUnderAgeForAccount:
setUserUnderage:forAccount:
userIsSeniorForAccount:
setUserIsSenior:forAccount:
demoAccountForAccount:
setDemoAccount:forAccount:
ageOfMajorityForAccount:
setAgeOfMajority:forAccount:
appleIDCountryCodeForAccount:
setAppleIDCountryCode:forAccount:
authorizationUsedForAccount:
setAuthorizationUsed:forAccount:
privateAttestationEnabledForAccount:
setPrivateAttestationEnabled:forAccount:
setReachableEmailAddresses:forAccount:
givenNameForAccount:
setGivenName:forAccount:
familyNameForAccount:
setFamilyName:forAccount:
forwardingEmailForAccount:
setForwardingEmail:forAccount:
selectedPrivateEmailForAccount:
setSelectedPrivateEmail:forAccount:
selectedAuthorizationEmailForAccount:
setSelectedAuthorizationEmail:forAccount:
setSecurityLevel:forAccount:
authenticationModeForAccount:
setAuthenticationMode:forAccount:
shouldUpdateAuthModeForAccount:
deviceTrustRevokedForAccount:
setDeviceTrustRevoked:forAccount:
shouldPerformSatoriWarmupVerificationForAccount:
updateSatoriWarmUpTimestampForAccount:
needsRepairForAccount:
repairStateForAccount:
setRepairState:forAccount:
hearbeatTokenForAccount:
passwordResetTokenForAccount:
passwordResetTokenBackupForAccount:
masterTokenForAccount:
settingsServiceTokenForAccount:
removeMasterTokenForAccount:
authKitAccountWithDSID:
authKitAccountWithAppleID:
appleIDAccountWithAppleID:
primaryAuthKitAccount
accountEligibleForUpdate
mostRecentlyUsedAuthKitAccount
removeAllPasswordResetTokens
removeContinuationTokenForAccount:
setAccount:inUse:byService:
activeServiceNamesForAccount:
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
hasPrimaryiCloudAccountForAppleID:
hasPrimaryiCloudAccountForAltDSID:
isPrimaryiCloudAccountEmailVerified:
transportableAuthKitAccount:
additionalInfoForAccount:
setAdditionalInfo:forAccount:
_removeAllRawPasswordCaches
isManagedAppleIDForAccount:
managedOrganizationTypeForAccount:
setManagedOrganizationType:forAccount:
managedOrganizationNameForAccount:
setManagedOrganizationName:forAccount:
isNotificationEmailAvailableForAccount:
setIsNotificationEmailAvailable:forAccount:
notificationEmailForAccount:
setNotificationEmail:forAccount:
canBeCustodianForAccount:
setCanBeCustodian:forAccount:
canHaveCustodianForAccount:
setCanHaveCustodian:forAccount:
custodianEnabledForAccount:
setCustodianEnabled:forAccount:
custodianListVersionForAccount:
setCustodianListVersion:forAccount:
custodianLastModifiedForAccount:
setCustodianLastModified:forAccount:
isBeneficiaryForAccount:
setBeneficiary:forAccount:
canBeBeneficiaryForAccount:
setCanBeBeneficiary:forAccount:
canHaveBeneficiaryForAccount:
setCanHaveBeneficiary:forAccount:
beneficiaryListVersionForAccount:
setBeneficiaryListVersion:forAccount:
hasMDMForAccount:
setHasMDM:forAccount:
isFidoForAccount:
setFido:forAccount:
setStore:
_accountStore
_accountQueue
_authKitAccountType
_authKitAccountTypeLock
_appleIDAccountType
_appleIDAccountTypeLock
_iCloudAccountType
_iCloudAccountTypeLock
_accountTypeCacheLock
_accountTypeCache
T@"ACAccountType",R,N
T@"ACAccountStore",&,N,V_accountStore
lookupPrivateEmailForAltDSID:withKey:completion:
lookupPrivateEmailWithContext:completion:
fetchPrivateEmailForAltDSID:withKey:completion:
fetchPrivateEmailWithContext:completion:
registerPrivateEmailForAltDSID:withKey:completion:
getContextForRequestContext:completion:
deletePrivateEmailDatabaseWithCompletion:
privateEmailListVersionWithCompletion:
removePrivateEmailKey:completion:
listAllPrivateEmailsForAltDSID:completion:
presentPrivateEmailUIForContext:completion:
initWithServiceName:remoteProtocol:exportedProtocol:options:
initWithKey:altDSID:
_clientImpl
T@"<AKPrivateEmailUIProvider>",&
bytes
appendFormat:
dataWithBytesNoCopy:length:freeWhenDone:
ak_compressedData:
T@"NSXPCInterface",R,N
initWithUser:site:
user
setUser:
site
setSite:
isAppleIDAuthorization
setAppleIDAuth:
shouldCreateAppleID
setCreateAppleID:
_appleIDAuth
_createAppleID
_user
_site
T@"NSString",C,N,V_user
T@"NSString",C,N,V_site
appleIDAuth
TB,N,GisAppleIDAuthorization,V_appleIDAuth
createAppleID
TB,N,GshouldCreateAppleID,V_createAppleID
authenticationRequestFinishedWithResults:password:additionalData:error:
ak_isBoolean
ak_booleanAsInteger
accessibleBundleInformation
arrayWithCapacity:
bundleName
bundleType
_bundleTypeFrom:
bundleDescription
_isAllOptionsSelected
manifestOptions
initWithBundleInformation:manifestOptions:
parsableRepresentation
_accessibleBundleInformation
_manifestOptions
T@"NSArray",R,N,V_accessibleBundleInformation
Tq,R,N,V_manifestOptions
T@"NSDictionary",R,N
shouldSendSigningHeaders
setShouldSendSigningHeaders:
signRequest:withCompletionHandler:
_signRequest:
signingController
_proxiedProvisioningController
anisetteDataWithCompletion:
initForDevice:provider:
initWithBundleIdentifier:allowPlaceholder:error:
localizedName
signRequestWithCommonHeaders:
_fetchApplicationNameForBundleId:
UUIDString
versionOfAcceptedAgreement
_signWithProxiedDeviceHeaders:
sharedController
_retrieveAndResetContinuationHeaders
signRequestWithBasicHeaders:
tokenWithBase64String:
_signWithFeatureOptInHeaders:
isMultiUserMode
_signRequestWithBAAHeaders:
sharedBag
isBaaEnabledForKey:
allHeaderFields
_harvestContinuationHeadersFromHeaders:
_isResponseSuccessful:
signalFromServerResponse:
isResponseActionable:
clientAppBundleId
setPrivateEmailBundleId:
setPrivateEmailDomain:
needsNewAppleID
needsNewChildAccount
needsSecurityUpgradeUI
isEphemeral
setShouldSendEphemeralAuthHeader:
isAppleIDLoginEnabled
setShouldSendLocalUserHasAppleIDLoginHeader:
setProxyAppName:
setShouldSendPhoneNumber:
hasEmptyPassword
setHasEmptyPasswordOverride:
securityUpgradeContext
setSecurityUpgradeContext:
anticipateEscrowAttempt
setShouldSendICSCIntentHeader:
shouldOfferSecurityUpgrade
setShouldOfferSecurityUpgrade:
pendingFollowUpItems:
pendingAuthKitFollowUpPayload:
setFollowupItems:
proxiedDeviceAnisetteData
setProxiedDeviceAnisetteData:
setIdentityToken:
continuationHeaderPrefix
initWithAltDSID:identityToken:
signRequest:
processResponse:
isResponseFinal:
isAuthenticationRequired:
isResponseFinalForHSA2ServerFlow:
isResponseCompleteAndConflict:
decorateWithPrivateEmailContext:
decorateWithContext:
updateWithAuthResults:
serviceToken
setServiceToken:
shouldSendEphemeralAuthHeader
shouldSendICSCIntentHeader
shouldSendLocalUserHasAppleIDLoginHeader
shouldSendPhoneNumber
phoneNumberCertificate
setPhoneNumberCertificate:
phoneInformation
setPhoneInformation:
loggedInServices
setLoggedInServices:
passwordResetToken
setPasswordResetToken:
continuationToken
setContinuationToken:
heartbeatToken
setHeartbeatToken:
identityToken
initialURLRequestKey
setInitialURLRequestKey:
proxyAppName
clientAppName
setClientAppName:
clientBundleID
setClientBundleID:
hasEmptyPasswordOverride
followupItems
dataCenterIdentifier
setDataCenterIdentifier:
proxiedAltDSID
setProxiedAltDSID:
proxiedIdentityToken
setProxiedIdentityToken:
proxiedDeviceAttestationData
setProxiedDeviceAttestationData:
privateEmailDomain
privateEmailBundleId
continuityIDMSData
setContinuityIDMSData:
bagUrlKey
setBagUrlKey:
_continuationHeaders
_shouldSendEphemeralAuthHeader
_shouldSendICSCIntentHeader
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendPhoneNumber
_shouldOfferSecurityUpgrade
_shouldSendSigningHeaders
_serviceToken
_phoneNumberCertificate
_phoneInformation
_loggedInServices
_passwordResetToken
_continuationToken
_initialURLRequestKey
_proxyAppName
_clientAppName
_clientBundleID
_hasEmptyPasswordOverride
_securityUpgradeContext
_followupItems
_dataCenterIdentifier
_proxiedAltDSID
_proxiedIdentityToken
_anisetteDataProvider
_proxiedDeviceAnisetteData
_proxiedDeviceAttestationData
_privateEmailDomain
_privateEmailBundleId
_continuityIDMSData
_bagUrlKey
TB,N,V_shouldSendEphemeralAuthHeader
TB,N,V_shouldSendICSCIntentHeader
TB,N,V_shouldSendLocalUserHasAppleIDLoginHeader
TB,N,V_shouldSendPhoneNumber
TB,N,V_shouldOfferSecurityUpgrade
T@"NSString",C,N,V_phoneNumberCertificate
T@"NSArray",C,N,V_phoneInformation
T@"NSArray",C,N,V_loggedInServices
T@"NSString",C,N,V_passwordResetToken
T@"NSString",C,N,V_continuationToken
T@"NSString",C,N,V_heartbeatToken
T@"NSString",C,N,V_identityToken
T@"NSString",C,N,V_initialURLRequestKey
T@"NSString",C,N,V_proxyAppName
T@"NSString",C,N,V_clientAppName
T@"NSString",C,N,V_clientBundleID
T@"NSNumber",&,N,V_hasEmptyPasswordOverride
T@"NSString",C,N,V_securityUpgradeContext
T@"NSString",C,N,V_followupItems
T@"NSString",C,N,V_dataCenterIdentifier
T@"AKDevice",&,N,V_proxiedDevice
T@"NSString",&,N,V_proxiedAltDSID
T@"NSString",&,N,V_proxiedIdentityToken
T@"<AKAnisetteServiceProtocol>",&,N,V_anisetteDataProvider
T@"AKAnisetteData",&,N,V_proxiedDeviceAnisetteData
T@"AKAttestationData",&,N,V_proxiedDeviceAttestationData
T@"NSString",C,N,V_privateEmailDomain
T@"NSString",C,N,V_privateEmailBundleId
T@"NSString",C,N,V_continuityIDMSData
T@"NSString",C,N,V_bagUrlKey
TB,N,V_shouldSendSigningHeaders
T@"NSString",C,N,V_serviceToken
privateEmailFetchCompletedWith:error:completion:
setUserIdentifier:
privateEmail
setPrivateEmail:
apps
setApps:
_userIdentifier
_privateEmail
_apps
T@"NSString",C,N,V_userIdentifier
T@"NSString",C,N,V_privateEmail
T@"NSDictionary",C,N,V_apps
piggybackingIDMSFallbackApproved
piggybackingRequestorUsesPresence
piggybackingRequestorPresenceSID
piggybackingAcceptorSupportsPresence
piggybackingPresenceMode
_dictionaryWithPlistData:
initWithUUIDString:
transactionId
setTransactionId:
serverInfo
setServerInfo:
circleStep
setCircleStep:
setWithArray:
payloadWithMessage:
payloadWithResponseData:forCircleStep:
isRequestingPayload
isAcceptingPayload
clientInfo
replyPayload
setClientInfo:
supportsPresence
setSupportsPresence:
presenceSID
setPresenceSID:
presenceMode
setPresenceMode:
presenceFallbackApproved
setPresenceFallbackApproved:
presenceCheckPassed
setPresenceCheckPassed:
localPresenceFound
setLocalPresenceFound:
responseMessage
setResponseMessage:
responseInfo
setResponseInfo:
_supportsPresence
_presenceFallbackApproved
_serverInfo
_clientInfo
_transactionId
_presenceSID
_presenceMode
_presenceCheckPassed
_localPresenceFound
_responseMessage
_responseInfo
_circleStep
T@"AKPushMessage",&,N,V_responseMessage
T@"NSDictionary",&,N,V_responseInfo
TQ,N,V_circleStep
T@"NSString",&,N,V_serverInfo
T@"NSData",&,N,V_clientInfo
T@"NSString",&,N,V_altDSID
T@"NSString",&,N,V_transactionId
TB,N,V_supportsPresence
T@"NSUUID",&,N,V_presenceSID
Tq,N,V_presenceMode
TB,N,V_presenceFallbackApproved
T@"NSNumber",C,N,V_presenceCheckPassed
T@"NSNumber",C,N,V_localPresenceFound
upgradeBundleIdentifier
initWithContext:bundleID:
proxiedAppID
proxiedAppName
proxiedBundleIdentifier
initWithKey:
initWithKey:altDSID:clientAppBundleId:
initWithContext:client:
sanitiseInternalState
setProxiedAppID:
setProxiedBundleIdentifier:
setProxiedAppName:
setClientAppBundleId:
keyAndBundleIdAreHashed
setKeyAndBundleIdAreHashed:
_keyAndBundleIdAreHashed
_key
_proxiedAppID
_proxiedBundleIdentifier
_upgradeBundleIdentifier
_clientAppBundleId
T@"NSString",R,C,N,V_key
T@"NSString",C,N,V_proxiedAppID
T@"NSString",C,N,V_proxiedBundleIdentifier
T@"NSString",C,N,V_proxiedAppName
T@"NSString",R,C,N,V_upgradeBundleIdentifier
T@"NSString",C,N,V_clientAppBundleId
TB,N,V_keyAndBundleIdAreHashed
_currentBags
initWithAltDSID:
_urlAtKey:
configurationAtKey:
configurationAtKey:fromCache:
_requestEnvironmentsWithError:
_IDMSEnvironmentFromString:
_requestEnvironmentsWithBag:
_configurationsFromCache:withError:
_fetchURLBagWithCompletion:
_requestNewURLBagIfNecessaryWithError:
URLWithString:
_urlBagFromCache:withError:
bagProvider
urlBagFromCache:altDSID:error:
keyForEscapeHatchURL
looksLikeiForgotURLKey:
IDMSEnvironmentFromBag:
basicAuthURL
startProvisioningURL
privateEmailManageURL
endProvisioningURL
syncAnisetteURL
upgradeEligibilityCheckURL
upgradeUIURL
validateCodeURL
escapeHatchURL
privacyRepairURL
checkInURL
notificationAckURL
iForgotURL
iForgotContinuationURL
createAppleIDURL
deviceListURL
trustedDevicesURL
trustedDevicesSummaryURL
absintheCertURL
absintheSessionURL
tokenUpgradeURL
configurationInfoURL
fetchConfigDataURL
changePasswordURL
validateVettingTokenURL
renewRecoveryTokenURL
circleURL
fetchFollowUps
fetchUserInfoURL
fetchAppInfoURL
fetchPrimaryBundleIDURL
fetchAuthenticationModeURL
storeModernRecoveryURL
isPhoneNumberSupportedConfig
acsURL
repairURL
userVerificationURL
deleteAuthorizedAppURL
startFidoAuthURL
finishFidoAuthURL
startFidoRecoveryAuthURL
finishFidoRecoveryAuthURL
appleOwnedDomains
appleIDAuthorizationURLs
appleIDAuthorizeHTMLResponseURL
createChildAccountURL
custodianCodeConfiguration
inheritanceConfiguration
APSEnvironment
IDMSEnvironment
IsInlineFlowSupportedConfig
requestNewURLBagIfNecessaryWithCompletion:
requestNewURLBagIfNecessaryWithError:
urlAtKey:
forceUpdateBagWithUrlSwitchData:completion:
setBagProvider:
_bagProvider
T@"NSURL",R,N
T@"<AKURLBagDictionaryProvider>",&,N,V_bagProvider
T@"NSString",R,N
phoneNumberSupportedConfig
TB,R,N,GisPhoneNumberSupportedConfig
inlineFlowSupportedConfig
TB,R,N,GIsInlineFlowSupportedConfig
T@"NSArray",R,N
_itemFromPayload:pushMessageInfo:withAltDSID:
ak_mapNullable:
setUniqueIdentifier:
extensionIdentifier
setExtensionIdentifier:
_actionsFromPayload:pushMessageInfo:
setActions:
_notificationFromPayload:pushMessageInfo:
setNotification:
notification
title
setTitle:
setInformativeText:
setGroupIdentifier:
setRepresentingBundlePath:
setBundleIconName:
setDisplayStyle:
displayStyle
_actionFromInfo:pushMessageInfo:
unsignedIntValue
setIdentifier:
setLabel:
setFrequency:
setFirstNotificationDelay:
options
setByAddingObjectsFromArray:
setOptions:
actionWithTitle:andActionKey:
setActivateAction:
setClearAction:
_clearAction
itemsForAltDSID:pushMessageInfo:fromIDMSPayload:
itemIdentifiersRequiringNotificationClearFromPayload:
IsFollowUpItemNotificationForced:
representingBundlePath
bundleIconName
_extensionIdentifier
_representingBundlePath
_bundleIconName
T@"NSString",C,N,V_extensionIdentifier
T@"NSString",C,N,V_representingBundlePath
T@"NSString",C,N,V_bundleIconName
setDSID:
setAuthContext:
setSupportsMasterKeyRecovery:
setEncodedRecoveryIdentityToken:
setEncodedRecoveryPET:
setRecoveryContinuationURL:
encodedRecoveryIdentityToken
encodedRecoveryPET
recoveryContextWithServerInfo:
isValid
_supportsMasterKeyRecovery
_mandatesRecoveryKey
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_recoveryContinuationURL
_authContext
TB,N,V_supportsMasterKeyRecovery
TB,N,V_mandatesRecoveryKey
T@"NSString",C,N,V_encodedRecoveryIdentityToken
T@"NSString",C,N,V_encodedRecoveryPET
T@"NSURL",C,N,V_recoveryContinuationURL
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
credentialStateDidChange:completion:
initWithFormat:arguments:
initWithCString:encoding:
setDateStyle:
setTimeStyle:
setDateFormat:
mutableJSONRequestForPath:
jsonDictionaryForData:error:
errorFromServerResponseBody:
_hostURL
componentsWithString:
setPath:
mutableJSONRequestForURL:
dateFormatter
createAndExecuteRequestForPath:requestBody:httpMethod:configuration:completion:
_dateFormatter
T@"NSDateFormatter",R,N
initWithAuthenticatorDataString:challengeString:relyingPartyIdentifier:signature:clientDataString:credentialID:userIdentifier:
clientData
authenticatorData
_clientData
_credentialID
_challenge
_relyingPartyIdentifier
_authenticatorData
_signature
T@"NSString",R,N,V_authenticatorData
T@"NSString",R,N,V_signature
T@"NSString",R,N,V_clientData
T@"NSString",R,N,V_credentialID
T@"NSString",R,N,V_userIdentifier
T@"NSString",R,N,V_challenge
T@"NSString",R,N,V_relyingPartyIdentifier
showAlertForError:withAuthKitAccount:withCompletion:
_showAlertForInvalidContextWithCompletion:
_showAlertForMissingAppleAccountWithCompletion:
_shouldShowAlertForManagedAccount:error:
_showAlertForManagedAccount:error:withCompletion:
_showAlertForAccountNotSupportedWithCompletion:
_showAlertForUnverifiedEmailWithCompletion:
_showAlertForInsufficientSecurityLevelWithError:completionHandler:
_showAlertForCannotFindServerWithCompletion:
_showAlertForUnderageAccount:withCompletion:
_showAlertForPasscodeSetupWithCompletion:
bundleWithIdentifier:
localizedStringForKey:value:table:
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
showAlert:primaryAction:altAction:
_openSpyglass
objectAtIndexedSubscript:
_openUpgradeAccountSecurityLevelWithBundleID:
_openPasscodeSetup
alertHandlerShowAlert:primaryAction:altAction:
showAlert:primaryAction:altAction:cancelAction:
bundleForClass:
resourceURL
defaultWorkspace
openSensitiveURL:withOptions:
_URLWithString:byAppendingParameters:
keyEnumerator
T@"AKAlertHandler",R,N
showAlertForError:withCompletion:
T@"<AKAlertHandlerUIProvider>",W,N,V_uiProvider
accessKeyString
setAccessKeyString:
beneficiaryPassword
setBeneficiaryPassword:
beneficiaryFirstName
setBeneficiaryFirstName:
beneficiaryLastName
setBeneficiaryLastName:
_accessKeyString
_beneficiaryPassword
_beneficiaryFirstName
_beneficiaryLastName
T@"NSString",C,N,V_accessKeyString
T@"NSString",C,N,V_beneficiaryFirstName
T@"NSString",C,N,V_beneficiaryLastName
T@"NSString",C,N,V_beneficiaryPassword
isUsernameEditable
authKitAccount:
authKitAccountForSilentServiceToken:
_handleInvalidMasterTokenWithSubErrorCode:
_revokeDeviceTrust
initWithContext:
handleResponseError:
T@"AKAppleIDAuthenticationContext",&,N,V_context
dateWithTimeIntervalSinceNow:
componentsSeparatedByString:
tokenWithValue:lifetime:
tokenWithDictionary:
setStringValue:
expirationDate
_expirationDate
_stringValue
_name
T@"NSString",C,N,V_stringValue
T@"NSDate",R,N,V_expirationDate
T@"NSString",C,N,V_name
tokenWithExternalizedVersion:lifetime:
_setSessionKey:
_setEncryptedSessionKey:
initWithAppleID:altDSID:
externalizedVersion
updateWithHTTPURLResponse:
sessionKey
encryptedSessionKey
externalizedVersionString
_properties
T@"NSData",R,N
originalRequest
_generateAppleIDHeadersForSessionTask:withCompletion:
_handleAnissetteURLResponse:forRequest:withCompletion:
_handleURLSwitchingResponse:forRequest:withCompletion:
_generateAppleIDHeadersForRequest:error:
_genericAppleIDHeadersDictionaryForRequest:
_nativeAnisetteController
anisetteDataWithError:
_pairedDeviceAnisetteController
anisetteDataForURLRequest:completion:
syncWithSIMData:completion:
provisionWithCompletion:
eraseWithCompletion:
lastObject
setURL:
URLSession:task:getAppleIDHeadersForResponse:completionHandler:
relevantHTTPStatusCodes
URLSession:task:getAppleIDRequestOrHeadersForResponse:completionHandler:
appleIDHeadersForRequest:
handleResponse:forRequest:shouldRetry:
pairedDevice
setPairedDevice:
_proxiedAnisetteData
_anisetteControllerLock
_pairedDevice
T@"AKDevice",&,N,V_pairedDevice
stringByAppendingString:
unsignedLongLongValue
numberWithUnsignedLongLong:
setMachineID:
setOneTimePassword:
setRoutingInfo:
_oneTimePassword
_routingInfo
T@"NSString",C,N,V_machineID
T@"NSString",C,N,V_oneTimePassword
TQ,N,V_routingInfo
sharedManager
isLisbonAvailable
_cachedIsLisbonAvailable
lisbonAvailable
TB,R,N,GisLisbonAvailable
initWithMaxWait:description:
setObject:atIndexedSubscript:
signal
waitUntilDate:
wait
setValue:
value
resolved
setResolved:
maxWait
setMaxWait:
beginDate
setBeginDate:
valueCondition
setValueCondition:
internalWrapper
setInternalWrapper:
_resolved
_maxWait
_beginDate
_valueCondition
_internalWrapper
TB,N,V_resolved
Td,N,V_maxWait
T@"NSDate",&,N,V_beginDate
T@"NSCondition",&,N,V_valueCondition
T@"NSMutableArray",&,N,V_internalWrapper
_callCompletionWithResults:password:additionalData:error:
setPresentationCompletion:
serviceWithDefaultShellEndpoint
canOpenApplication:reason:
setObject:forSetting:
_endpoint
initWithInfo:responder:
optionsWithDictionary:
openApplication:withOptions:completion:
presentationCompletion
presentOOPLoginUIWithContext:completion:
remoteListener
setRemoteListener:
_remoteListener
_presentationCompletion
T@"NSXPCListener",&,N,V_remoteListener
T@?,C,N,V_presentationCompletion
serverProvidedData
serviceTokens
setSelectedEmail:
failWithError:
T@"NSString",R,C,N
initWithServerResponse:
authorizedScopes
authorizationCode
isLikelyRealUser
setIsLikelyRealUser:
_isLikelyRealUser
_authorizedScopes
_authorizationCode
TB,N,V_isLikelyRealUser
T@"NSArray",R,C,N,V_authorizedScopes
T@"NSData",R,C,N,V_identityToken
T@"NSData",R,C,N,V_authorizationCode
T@"NSString",R,C,N,V_state
T@"AKUserInformation",R,N,V_userInformation
T@"NSString",R,C,N,V_transactionID
T@"NSString",R,C,N,V_userIdentifier
authorizedAppListVersion
teams
_authorizedAppListVersion
_teams
T@"NSString",R,C,N,V_authorizedAppListVersion
T@"NSDictionary",R,C,N,V_teams
clearPendingFollowUpItems:
postFollowUpItem:error:
uniqueIdentifier
removeFollowUpItemsWithIdentifiers:error:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
clearNotificationForItem:error:
removeAllFollowUpItems:
addFollowUpItems:error:
removeFollowUpItems:error:
clearNotificationsForItem:error:
_followupController
intValue
initWithJSONDictionary:
identifier
number
setNumber:
numberWithDialCode
setNumberWithDialCode:
obfuscatedNumber
setObfuscatedNumber:
pushMode
setPushMode:
_number
_numberWithDialCode
_obfuscatedNumber
_pushMode
T@"NSNumber",&,N,V_identifier
T@"NSString",&,N,V_number
T@"NSString",&,N,V_numberWithDialCode
T@"NSString",&,N,V_obfuscatedNumber
T@"NSString",&,N,V_pushMode
ak_isAuthenticationError
ak_isUserCancelError
ak_isUserSkippedError
ak_errorByAppendingUserInfo:
ak_isUserTryAgainError
ak_isUserInitiatedError
ak_isServiceError
ak_isUnableToPromptError
ak_isSurrogateAuthAlreadyInProgressError
ak_isIncompatibleDevicesError
ak_isAuthenticationErrorWithCode:
ak_errorWithCode:underlyingError:
ak_wrappedAnisetteError:
authorizedRequest
setAuthorizedRequest:
_authorizedRequest
_credential
T@"<AKCredentialRequestProtocol>",&,N,V_authorizedRequest
T@"<AKCredential>",&,N,V_credential
data
scale
setScale:
maskingStyle
_data
_scale
_maskingStyle
T@"NSData",&,N,V_data
T@"NSNumber",&,N,V_scale
TQ,N,V_maskingStyle
T@"NSString",&,N,V_appName
signatureForURLRequest:completionHandler:
signatureForURLRequest:
_contextCreationDate
initWithBlock:
_start
_callCompletionWithData:error:
startCoordinatingBlock:
start
setCompletion:
_block
_started
_lock
_group
contextWithAuthResults:
initWithAuthenticationResults:
contextForStateRepair
isICDPEnabledForDSID:
initWithPresentingViewController:
stateControllerWithContext:
followUpRepairContext
followUpController
cdpAccountIsICDPEnabledForDSID:
accountRecoveryControllerWithPresentingViewController:
cdpStateUIController
cdpUIControllerWithPresentingViewController:
payload
setPayload:
waitForReply
setWaitForReply:
waitForReplyTimeout
setWaitForReplyTimeout:
identityTokenValue
setIdentityTokenValue:
heartbeatTokenValue
setHeartbeatTokenValue:
_notifyOfTimeout
set_notifyOfTimeout:
_waitForReply
__notifyOfTimeout
_payload
_waitForReplyTimeout
_identityTokenValue
_heartbeatTokenValue
T@"NSString",&,N,V_identityTokenValue
T@"NSString",&,N,V_heartbeatTokenValue
T@"NSString",&,N,V_pushToken
TB,N,V__notifyOfTimeout
T@"AKCircleRequestPayload",&,N,V_payload
TB,N,V_waitForReply
Td,N,V_waitForReplyTimeout
initWithUUID:status:
setUuid:
status
setStatus:
hashedWrappingKeyRKC
setHashedWrappingKeyRKC:
_uuid
_status
_hashedWrappingKeyRKC
T@"NSUUID",C,N,V_uuid
Tq,N,V_status
T@"NSString",C,N,V_hashedWrappingKeyRKC
initWithChallengeString:relyingPartyIdentifier:userIdentifierString:displayName:credentialName:credentials:
initWithChallenge:relyingPartyIdentifier:userIdentifier:displayName:credentialName:credentials:
initWithParameters:
setPromptTitle:
setPromptHeader:
setPromptBody:
setPromptIconData:
setPromptIconScale:
_originalChallenge
_displayName
_credentialName
_credentials
_promptTitle
_promptHeader
_promptBody
_promptIconData
_promptIconScale
T@"NSData",R,N,V_challenge
T@"NSString",R,N,V_originalChallenge
T@"NSData",R,N,V_userIdentifier
T@"NSString",R,N,V_displayName
T@"NSString",R,N,V_credentialName
T@"NSArray",R,N,V_credentials
T@"NSString",C,N,V_promptTitle
T@"NSString",C,N,V_promptHeader
T@"NSString",C,N,V_promptBody
T@"NSData",C,N,V_promptIconData
T@"NSNumber",C,N,V_promptIconScale
presentAuthorizationUIForContext:completion:
T@"<AKAuthorizationUIProvider>",&,N,V_uiProvider
provisionAnisetteForDevice:completion:
syncAnisetteWithSIMData:device:completion:
eraseAnisetteForDevice:completion:
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
legacyAnisetteDataForDSID:device:completion:
attestationDataForDevice:withRequest:completion:
shouldSynchronizeForAccount:
updateSynchronizeTimeForAccount:inStore:
followupProvider
actions
informativeText
updateSynchronizeTimeNoSaveForAccount:
saveAccount:withCompletionHandler:
synchronizeFollowUpsForAccount:inStore:error:
setFollowupProvider:
controller
setController:
_followupProvider
_controller
T@"<AKFollowUpProvider>",&,N,V_followupProvider
T@"AKAppleIDAuthenticationController",&,N,V_controller
_addPresenterParameters
setAccountName:
_addPresentationParametersForContext:
applicationProxyForIdentifier:
correspondingApplicationRecord
iTunesMetadata
itemName
presentationContextForRequestContext:client:
initWithUsername:
localizedAppName
setLocalizedAppName:
iconName
iconData
iconScale
signInAllowsPCSKeyAccess
setSignInAllowsPCSKeyAccess:
credentialRequestContext
setCredentialRequestContext:
loginChoices
setLoginChoices:
_signInAllowsPCSKeyAccess
_localizedAppName
_credentialRequestContext
_loginChoices
TB,N,V_signInAllowsPCSKeyAccess
T@"NSString",C,N,V_localizedAppName
T@"NSString",R,C,N,V_informativeText
T@"NSString",R,C,N,V_iconName
T@"NSData",R,C,N,V_iconData
T@"NSNumber",R,C,N,V_iconScale
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
T@"AKUserInformation",&,N,V_userInformation
T@"NSArray",C,N,V_loginChoices
_startPathMonitor
_stopPathMonitor
_networkReachabilityDidChange
setArgument:atIndex:
invoke
methodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
setTarget:
valueWithNonretainedObject:
sharedNetworkObserver
isNetworkReachable
addNetworkReachableObserver:selector:
removeNetworkReachableObserver:
_pathMonitor
_observerQueue
_invocationByObserver
_isNetworkReachable
TB,R,N,V_isNetworkReachable
initWithRequest:requestType:
setResourceLoadDelegate:
requestType
setRequestType:
presentationType
setPresentationType:
whitelistedPathURLs
setWhitelistedPathURLs:
_resourceLoadDelegate
_requestType
_presentationType
_whitelistedPathURLs
T@"AKAppleIDServerResourceLoadDelegate",&,N,V_resourceLoadDelegate
TQ,N,V_requestType
TQ,N,V_presentationType
T@"NSArray",C,N,V_whitelistedPathURLs
ak_filter:
_alignedInsertionCandidates:withExistingItems:
frequency
arrayByAddingObjectsFromArray:
initWithFollowUpFactory:provider:
synchronizeFollowUpsWithServerPayload:altDSID:error:
_factory
_provider
custodianOperationsByID
setCustodianOperationsByID:
beneficiaryOperationsByID
setBeneficiaryOperationsByID:
custodianListVersion
setCustodianListVersion:
beneficiaryListVersion
setBeneficiaryListVersion:
orphanedCustodianUUIDs
setOrphanedCustodianUUIDs:
orphanedBeneficiaryUUIDs
setOrphanedBeneficiaryUUIDs:
_custodianOperationsByID
_beneficiaryOperationsByID
_custodianListVersion
_beneficiaryListVersion
_orphanedCustodianUUIDs
_orphanedBeneficiaryUUIDs
T@"NSDictionary",C,N,V_custodianOperationsByID
T@"NSDictionary",C,N,V_beneficiaryOperationsByID
T@"NSString",C,N,V_custodianListVersion
T@"NSString",C,N,V_beneficiaryListVersion
T@"NSArray",C,N,V_orphanedCustodianUUIDs
T@"NSArray",C,N,V_orphanedBeneficiaryUUIDs
_daemonConnection
_ak_dataForEncodedHeaderWithKey:
ak_stringForEncodedHeaderWithKey:
ak_acceptedTermsInfo
decodeObjectForKey:
initWithUser:password:
password
_password
T@"NSString",R,C,N,V_password
setRequestIdentifier:
setRequestedScopes:
set_clientAuthenticatedExternallyWithPassword:
internalAuthKitAccount
setAuthkitAccount:
_isSilentAppTransfer
set_isSilentAppTransfer:
_clientAuthenticatedExternallyWithPassword
requestedScopes
existingStatus
setExistingStatus:
_authkitAccount
_requestedScopes
_existingStatus
Tq,N,V_existingStatus
T@"ACAccount",R,N
TB,N,V_isSilentAppTransfer
TB,N,V_clientAuthenticatedExternallyWithPassword
T@"NSArray",C,N,V_requestedScopes
TB,N,V_isEligibleForUpgradeFromPassword
T@"ACAccount",&,N,V_authkitAccount
scheme
ak_usesHTTPSScheme
setShouldSkipSettingsLaunchAlert:
forceSilentAuth
reauthenticateWithContext:completionWithResults:
buildReauthenticationContextFromContext:error:
reauthenticateWithContext:completion:
setForceSilentAuth:
_forceSilentAuth
TB,N,V_forceSilentAuth
initWithListenerEndpoint:exportedInterface:
getUUIDBytes:
ak_uuidData
T@"NSData",R,C,N
initWithLocaleIdentifier:
setLocale:
timeZoneForSecondsFromGMT:
setTimeZone:
stringFromDate:
_sanitizeCredentialIDString:
initWithChallengeString:attestationsDataString:credentialIDString:clientDataString:relyingPartyIdentifier:credentialName:userIdentifier:
stringByReplacingOccurrencesOfString:withString:options:range:
attestationsData
_attestationsData
T@"NSString",R,N,V_attestationsData
canPerformAuthorizationRequest:error:
canPerformPasswordRequest:error:
_requirePasscodeSet
givenName
familyName
selectedEmail
canPerformCredentialRequest:error:
shouldContinueWithResponse:error:
T@"NSUUID",R,C,N
T@"NSUUID",R,C,N,V_transactionID
_sharedService
startWithNotificationHandler:completion:
startWithStateBroadcastHandler:completion:
_configureNotificationServiceWithCompletion:
_configureStateBroadcastServiceWithCompletion:
startServiceWithNotificationHandler:
startServiceWithStateBroadcastHandler:
_service
_daemonEndpoint
setGivenName:
setFamilyName:
setForwardingEmail:
setPrimaryEmailAddress:
setAccountAliases:
setReachableEmails:
setAuthorizedApplicationsListVersion:
setMasterKeyID:
setVettedPrimaryEmail:
setPhoneAsAppleID:
setHasUsedAuthorization:
setPrivateAttestationEnabled:
setIsUnderage:
setIsSenior:
setAgeOfMajority:
setPreviouslySelectedEmail:
setPreviouslyWantedPrivateEmail:
setIsLegacyStudent:
setAppleIDSecurityLevel:
setAuthMode:
setRepairState:
setAdditionalInfo:
setCanBeCustodian:
setCanHaveCustodian:
setCanBeBeneficiary:
setCanHaveBeneficiary:
setPrivateEmailListVersion:
setCustodianEnabled:
setCustodianLastModified:
setAppleIDCountryCode:
setHasMDM:
setManagedOrganizationType:
setManagedOrganizationName:
setIsNotificationEmailAvailable:
setNotificationEmail:
isManagedAppleID
sharedEmailForManagedAppleID
forwardingEmail
previouslySelectedEmail
primaryEmailAddress
accountName
accountAliases
reachableEmails
authorizedApplicationsListVersion
masterKeyID
vettedPrimaryEmail
phoneAsAppleID
isUnderage
isSenior
ageOfMajority
isLegacyStudent
hasUsedAuthorization
privateAttestationEnabled
previouslyWantedPrivateEmail
appleIDSecurityLevel
authMode
repairState
additionalInfo
privateEmailListVersion
appleIDCountryCode
custodianEnabled
canHaveCustodian
canBeCustodian
canHaveBeneficiary
canBeBeneficiary
custodianLastModified
hasMDM
managedOrganizationType
managedOrganizationName
isNotificationEmailAvailable
notificationEmail
_givenName
_familyName
_forwardingEmail
_previouslySelectedEmail
_primaryEmailAddress
_accountName
_accountAliases
_reachableEmails
_authorizedApplicationsListVersion
_masterKeyID
_vettedPrimaryEmail
_phoneAsAppleID
_isUnderage
_isSenior
_ageOfMajority
_isLegacyStudent
_hasUsedAuthorization
_privateAttestationEnabled
_previouslyWantedPrivateEmail
_appleIDSecurityLevel
_authMode
_repairState
_additionalInfo
_privateEmailListVersion
_appleIDCountryCode
_custodianEnabled
_canHaveCustodian
_canBeCustodian
_canHaveBeneficiary
_canBeBeneficiary
_custodianLastModified
_hasMDM
_selectedEmail
_managedOrganizationType
_managedOrganizationName
_isNotificationEmailAvailable
_notificationEmail
T@"NSString",C,N,V_givenName
T@"NSString",C,N,V_familyName
T@"NSString",C,N,V_forwardingEmail
T@"NSString",C,N,V_previouslySelectedEmail
T@"NSString",C,N,V_primaryEmailAddress
T@"NSString",C,N,V_accountName
T@"NSArray",C,N,V_accountAliases
T@"NSArray",C,N,V_reachableEmails
T@"NSString",C,N,V_authorizedApplicationsListVersion
T@"NSString",C,N,V_masterKeyID
T@"NSNumber",C,N,V_vettedPrimaryEmail
T@"NSNumber",C,N,V_phoneAsAppleID
T@"NSNumber",C,N,V_isUnderage
T@"NSNumber",C,N,V_isSenior
T@"NSNumber",C,N,V_ageOfMajority
T@"NSNumber",C,N,V_isLegacyStudent
T@"NSString",C,N,V_appleIDCountryCode
T@"NSNumber",C,N,V_hasUsedAuthorization
T@"NSNumber",C,N,V_privateAttestationEnabled
T@"NSNumber",C,N,V_previouslyWantedPrivateEmail
T@"NSNumber",C,N,V_custodianEnabled
T@"NSNumber",C,N,V_canHaveCustodian
T@"NSNumber",C,N,V_canBeCustodian
T@"NSNumber",C,N,V_canHaveBeneficiary
T@"NSNumber",C,N,V_canBeBeneficiary
T@"NSNumber",C,N,V_custodianLastModified
T@"NSNumber",C,N,V_hasMDM
TQ,N,V_appleIDSecurityLevel
TQ,N,V_authMode
TQ,N,V_repairState
T@"NSString",C,N,V_selectedEmail
T@"NSDictionary",C,N,V_additionalInfo
T@"NSString",C,N,V_privateEmailListVersion
T@"NSNumber",C,N,V_managedOrganizationType
T@"NSString",C,N,V_managedOrganizationName
T@"NSNumber",C,N,V_isNotificationEmailAvailable
T@"NSString",C,N,V_notificationEmail
setLinkType:
_setShouldUpdateToValue:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
systemContainerURL
URLByAppendingPathComponent:
color
enclosureColor
coverGlassColor
housingColor
backingColor
_hardwareModel
_osName
_osVersion
_buildNumber
infoDictionary
_systemVersionDictionary
autoupdatingCurrentLocale
isPasscodeSet
canEvaluatePolicy:error:
deviceSpecificLocalizedStringWithKey:inTable:
_currentDeviceAuthenticationMode
activeIDSPeerDevice
deviceWithSerializedData:
deviceSpecificLocalizedStringWithKey:
T@"NSURL",R,C,N
serializedData
setColor:
setEnclosureColor:
setCoverGlassColor:
setHousingColor:
setBackingColor:
setUniqueDeviceIdentifier:
setProvisioningDeviceIdentifier:
setROMAddress:
setMLBSerialNumber:
setModelNumber:
setServerFriendlyDescription:
userChosenName
userFullName
internationalMobileEquipmentIdentity
internationalMobileEquipmentIdentity2
isUnlocked
isBiometricAuthCapable
isFaceIDCapable
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
_volumeGroupUUID
linkType
_shouldUpdateUniqueDeviceIdentifier
_shouldUpdateServerFriendlyDescription
_shouldUpdateColor
_shouldUpdateEnclosureColor
_shouldUpdateCoverGlassColor
_shouldUpdateHousingColor
_shouldUpdateBackingColor
_shouldUpdateLocale
_shouldUpdateROMAddress
_shouldUpdateMLBSerialNumber
_shouldUpdateModelNumber
_shouldUpdateProvisioningDeviceIdentifier
_uniqueDeviceIdentifier
_serverFriendlyDescription
_color
_enclosureColor
_coverGlassColor
_housingColor
_backingColor
_locale
_ROMAddress
_MLBSerialNumber
_modelNumber
_provisioningDeviceIdentifier
_linkType
TB,R,N
T@"NSString",C,N,V_serverFriendlyDescription
T@"NSString",C,N,V_uniqueDeviceIdentifier
T@"NSString",C,N,V_provisioningDeviceIdentifier
T@"NSString",C,N,V_color
T@"NSString",C,N,V_enclosureColor
T@"NSNumber",C,N,V_coverGlassColor
T@"NSNumber",C,N,V_housingColor
T@"NSNumber",C,N,V_backingColor
T@"NSLocale",C,N,V_locale
T@"NSString",C,N,V_MLBSerialNumber
T@"NSString",C,N,V_ROMAddress
T@"NSString",C,N,V_modelNumber
TQ,N,SsetLinkType:,V_linkType
ak_arrayWithResponseData:
ak_arrayWithJSONResponseData:
_anisetteServiceConnection
fetchAnisetteDataAndProvisionIfNecessary:error:
exceptionWithName:reason:userInfo:
initWithProvider:
targetDevice
setTargetDevice:
_targetDevice
T@"AKDevice",&,N,V_targetDevice
buildLoginCodeNotificationWithTitle:body:footer:loginCode:
buildLoginCodeNotificationOptionsWithTitle:body:footer:loginCode:
_setMessage:
setReason:
setGeneratedCode:
setNotificationDisclaimer:
_message
_interpolatedReason
initWithVerificationType:
_rootPath
setSupportsPiggybacking:
setNeedsNewAppleID:
_promptForUsername
_promptForPassword
localizedDescription
_setPassword:
secondFactorCode
setSecondFactorCode:
_presentServerUISecondFactorWithConfiguration:completion:
utility
rootPath
_beginDataTaskWithRequest:configuration:completion:
allPages
primaryAlert
message
passcodeViewOM
attributes
navTitle
_parseHeaderTitleForPasscodeView:
_promptForVerificationCodeWithSecureEntry:forTrustedNumber:
absoluteURLWithString:
_xmlUIRequestForURL:withPostbackDictionary:
_verifySecondFactorCodeWithRequest:completion:
_handleServerUIBirthdayVerificationWithResponseDictionary:configuration:completion:
_handleServerUISMSVerificationWithResponseDictionary:statusCode:configuration:completion:
_accountCreationRequestBodyFromResponseDictionary:shouldIncludePhoneNumber:shouldIncludeForSecurityCode:
stringByAppendingPathComponent:
_handleServerUIPasswordVerificationWithResponseDictionary:configuration:completion:
_handleServerUIPhoneVerificationWithResponseDictionary:configuration:completion:
_collectAndPostSecondFactorCodeWithRequestBody:configuration:completion:
dictionaryWithDictionary:
_promptUserForTermsWithResponseDictionary:
_jsonPostbackDictionaryForCode:numberId:
_promptUserForSelectionWithTrustedNumbers:
setSecurityCode:
_collectAndHandleTermsAndConditionsWithResponseDictionary:configuration:completion:
setPhoneNumber:
_accountDictionary
_createContextDictionaryFromResponse:
_promptForPhoneNumber
countryCode
_parseTrustedPhoneNumberFromResponseDictionary:
_promptForFirstName
_promptForLastName
_promptForBirthday
verificationType
_handleServerUIWithDictionary:statusCode:configuration:completion:
initWithXML:baseURL:delegate:
error
uiObjectModel
_handleServerUISecondFactorWithObjectModel:configuration:completion:
HTMLHeader
valueForKey:
initWithData:options:documentAttributes:error:
string
initWithURL:
securityCode
birthday
dateFromString:
setBirthday:
firstName
setFirstName:
lastName
setLastName:
termsAccepted
setTermsAccepted:
_xmlUIRequestForURL:withServerInfo:
_termsAccepted
_secondFactorCode
_verificationType
_phoneNumber
_firstName
_lastName
_birthday
_securityCode
_utility
T@"NSString",&,N,V_securityCode
T@"AKCommandLineUtilities",R,N,V_utility
T@"NSString",R,N,V_rootPath
T@"NSNumber",C,N,V_secondFactorCode
Tq,R,N,V_verificationType
T@"NSString",C,N,V_phoneNumber
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
T@"NSDate",C,N,V_birthday
TB,N,V_termsAccepted
beneficiaryAltDSID
setBeneficiaryAltDSID:
beneficiaryAccountName
setBeneficiaryAccountName:
_beneficiaryAltDSID
_beneficiaryAccountName
T@"NSString",C,N,V_beneficiaryAltDSID
T@"NSString",C,N,V_beneficiaryAccountName
_initWithIdentifier:
_shouldSkipInitialReachabilityCheck
shouldPromptForPasswordOnly
_isVerifyCredentialReasonEligibleForBiometricOrPasscodeAuth
verifyCredentialReason
initWithSurrogateID:
hasSuffix:
_appendBlameIfRequiredTo:
stringWithUTF8String:
serviceIdentifiers
setServiceIdentifiers:
_interpolatedReasonWithBlame
_secondFactorQueue
_startListeningForSecondFactorCodeEntryNotification
_stopListeningForSecondFactorCodeEntryNotification
_localUserHasEmptyPassword
isContextEligibleForSilentAuthCoercion
isContextEligibleForBiometricOrPasscodeAuth
isContextRequestingReauthForExistingService
_shouldRefreshAccountAndUpdateContext
setShouldPreventInteractiveAuth:
shouldPreventInteractiveAuth
setShouldForceInteractiveAuth:
shouldForceInteractiveAuth
serviceIdentifier
_requiresPasswordInput
_handleSecondFactorCodeEntry
_isProxyingForApp
_setProxiedAppBundleID:
_shouldSendIdentityTokenForRemoteUI
set_shouldSendIdentityTokenForRemoteUI:
_shouldSendGrandSlamTokensForRemoteUI
set_shouldSendGrandSlamTokensForRemoteUI:
_passwordPromptTitle
set_passwordPromptTitle:
_isPasswordEditable
set_isPasswordEditable:
_shortLivedToken
_setShortLivedToken:
set_shouldSkipInitialReachabilityCheck:
_attemptIndex
set_attemptIndex:
companionDeviceAnisetteData
setCompanionDeviceAnisetteData:
_masterKey
_setMasterKey:
_performUIOutOfProcess
set_performUIOutOfProcess:
_keepAlive
set_keepAlive:
_isForcedEligibleForForegroundAuthentication
set_forceEligibleForForegroundAuthentication:
shouldAllowAppleIDCreation
setShouldAllowAppleIDCreation:
needsCredentialRecovery
setNeedsCredentialRecovery:
needsPasswordChange
setNeedsPasswordChange:
isTriggeredByNotification
setTriggeredByNotification:
defaultButtonString
setDefaultButtonString:
maximumLoginAttempts
setMaximumLoginAttempts:
setIsEphemeral:
httpHeadersForRemoteUI
setHttpHeadersForRemoteUI:
needsRepair
setNeedsRepair:
helpAnchor
setHelpAnchor:
helpBook
setHelpBook:
authenticationPromptStyle
setAuthenticationPromptStyle:
cancelButtonString
setCancelButtonString:
alternativeButtonString
setAlternativeButtonString:
hideAlternativeButton
setHideAlternativeButton:
hideCancelButton
setHideCancelButton:
hideReasonString
setHideReasonString:
clientShouldHandleAlternativeButtonAction
setClientShouldHandleAlternativeButtonAction:
windowTitle
setWindowTitle:
alwaysShowUsernameField
setAlwaysShowUsernameField:
privacyBundleIdentifier
setPrivacyBundleIdentifier:
displayImageData
setDisplayImageData:
setShouldPromptForPasswordOnly:
shouldUpdatePersistentServiceTokens
setShouldUpdatePersistentServiceTokens:
setAppleIDLoginEnabled:
setHasEmptyPassword:
shouldRequestRecoveryPET
setShouldRequestRecoveryPET:
shouldRequestShortLivedToken
setShouldRequestShortLivedToken:
shouldRequestConfigurationInfo
setShouldRequestConfigurationInfo:
supportsPiggybacking
setAnticipateEscrowAttempt:
desiredInternalTokens
setDesiredInternalTokens:
isFirstTimeLogin
setFirstTimeLogin:
shouldSkipSettingsLaunchAlert
setNeedsNewChildAccount:
setNeedsSecurityUpgradeUI:
dependentAltDSID
setDependentAltDSID:
cellularDataAttributionAppBundleID
setCellularDataAttributionAppBundleID:
setVerifyCredentialReason:
callerIconBundlePath
setCallerIconBundlePath:
localizedCallerName
setLocalizedCallerName:
displayString
setDisplayString:
displayTitle
setDisplayTitle:
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_notificationDisclaimer
_activeSecondFactoryEntryPrompt
_secondFactoryEntryCompletion
_isContextRequestingReauthForExistingService
_shouldPreventInteractiveAuth
_shouldForceInteractiveAuth
_forceEligibleForForegroundAuthentication
_isUsernameEditable
_shouldAllowAppleIDCreation
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_isTriggeredByNotification
_isEphemeral
_needsRepair
_hideAlternativeButton
_hideCancelButton
_hideReasonString
_clientShouldHandleAlternativeButtonAction
_alwaysShowUsernameField
_shouldPromptForPasswordOnly
_shouldUpdatePersistentServiceTokens
_shouldRequestRecoveryPET
_shouldRequestShortLivedToken
_shouldRequestConfigurationInfo
_supportsPiggybacking
_anticipateEscrowAttempt
_isFirstTimeLogin
_shouldSkipSettingsLaunchAlert
_needsNewChildAccount
_needsSecurityUpgradeUI
_companionDeviceAnisetteData
_username
_reason
_defaultButtonString
_maximumLoginAttempts
_serviceIdentifiers
_DSID
_httpHeadersForRemoteUI
_title
_helpAnchor
_helpBook
_authenticationPromptStyle
_cancelButtonString
_alternativeButtonString
_windowTitle
_privacyBundleIdentifier
_displayImageData
_isAppleIDLoginEnabled
_hasEmptyPassword
_desiredInternalTokens
_dependentAltDSID
_cellularDataAttributionAppBundleID
_verifyCredentialReason
_callerIconBundlePath
_localizedCallerName
_displayString
_displayTitle
T@"NSUUID",R,N,V_identifier
TQ,R,N,V_capabilityForUIDisplay
TB,N,V_shouldSendIdentityTokenForRemoteUI
TB,N,V_shouldSendGrandSlamTokensForRemoteUI
TB,N,V_shouldSkipInitialReachabilityCheck
TQ,N,V_attemptIndex
contextEligibleForSilentAuthCoercion
TB,R,N,GisContextEligibleForSilentAuthCoercion
contextEligibleForSilentAuth
TB,R,N,GisContextEligibleForSilentAuth
contextEligibleForBiometricOrPasscodeAuth
TB,R,N,GisContextEligibleForBiometricOrPasscodeAuth
contextRequestingReauthForExistingService
TB,R,N,GisContextRequestingReauthForExistingService
TB,N,V_performUIOutOfProcess
TB,N,V_keepAlive
T@"NSData",&,N,V_displayImageData
TB,N,G_isForcedEligibleForForegroundAuthentication,Sset_forceEligibleForForegroundAuthentication:,V_forceEligibleForForegroundAuthentication
TB,N,V_shouldPromptForPasswordOnly
TB,N,V_shouldUpdatePersistentServiceTokens
TB,N,S_setProxyingForApp:,V_isProxyingForApp
T@"NSString",C,N,S_setProxiedAppBundleID:,V_proxiedAppBundleID
T@"NSString",C,N,V_passwordPromptTitle
T@"NSString",C,N,S_setPassword:,V_password
TB,N,V_isPasswordEditable
T@"NSString",C,N,S_setShortLivedToken:,V_shortLivedToken
T@"NSNumber",C,N,SsetAppleIDLoginEnabled:,V_isAppleIDLoginEnabled
T@"NSNumber",C,N,SsetHasEmptyPassword:,V_hasEmptyPassword
TB,N,V_shouldRequestRecoveryPET
TB,N,V_shouldRequestShortLivedToken
TB,N,V_shouldRequestConfigurationInfo
TB,N,V_supportsPiggybacking
TB,N,V_anticipateEscrowAttempt
T@"NSSet",C,N,V_desiredInternalTokens
TB,N,SsetFirstTimeLogin:,V_isFirstTimeLogin
TB,N,V_shouldSkipSettingsLaunchAlert
T@"NSString",C,N,S_setMessage:,V_message
T@"NSString",C,N,S_setMasterKey:,V_masterKey
T@"AKAnisetteData",&,N,V_companionDeviceAnisetteData
TB,N,V_shouldPreventInteractiveAuth
TB,N,V_shouldForceInteractiveAuth
TB,N,V_needsNewChildAccount
TB,N,V_needsSecurityUpgradeUI
T@"NSString",C,N,V_dependentAltDSID
T@"NSString",C,N,V_cellularDataAttributionAppBundleID
Tq,N,V_verifyCredentialReason
T@"NSString",C,N,SsetCustodianRecoveryToken:,V_custodianRecoveryToken
T@"NSString",C,N,V_callerIconBundlePath
T@"NSString",C,N,V_localizedCallerName
T@"NSString",C,N,V_displayString
T@"NSString",C,N,V_displayTitle
T@"NSString",C,N,V_username
TB,N,V_isUsernameEditable
TB,N,V_shouldAllowAppleIDCreation
TB,N,V_needsCredentialRecovery
TB,N,V_needsNewAppleID
TB,N,V_needsPasswordChange
TB,N,SsetTriggeredByNotification:,V_isTriggeredByNotification
T@"NSString",C,N,V_reason
T@"NSString",C,N,V_defaultButtonString
Tq,N,V_maximumLoginAttempts
T@"NSArray",C,N,V_serviceIdentifiers
TB,N,V_isEphemeral
T@"NSString",C,N,V_DSID
T@"NSDictionary",C,N,V_httpHeadersForRemoteUI
T@,&,N,V_clientInfo
TB,N,V_needsRepair
T@"NSString",&,N,V_title
T@"NSString",C,N,V_helpAnchor
T@"NSString",C,N,V_helpBook
Tq,N,V_authenticationPromptStyle
T@"NSString",&,N,V_cancelButtonString
T@"NSString",&,N,V_alternativeButtonString
TB,N,V_hideAlternativeButton
TB,N,V_hideCancelButton
TB,N,V_hideReasonString
TB,N,V_clientShouldHandleAlternativeButtonAction
T@"NSString",&,N,V_windowTitle
TB,N,V_alwaysShowUsernameField
T@"NSString",C,N,V_privacyBundleIdentifier
generatedCode
latitude
setLatitude:
longitude
setLongitude:
setDeviceClass:
deviceColor
setDeviceColor:
deviceEnclosureColor
setDeviceEnclosureColor:
notificationDisclaimer
T@"NSNumber",C,N
initWithRequest:
_hasApplicationMetaData
realUserVerificationData
setRealUserVerificationData:
_realUserVerificationData
T@"AKAuthorizationRequest",R,C,N,V_request
T@"NSString",C,N,V_realUserVerificationData
setByAddingObject:
T@"<AKPrivateEmailUIProvider>",&,N,V_uiProvider
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
shouldCapturePromptBugForContext:
userInfoFromContext:
userInfoFromAccount:
setAssociatedDomains:
setDeviceName:
setIsRapportLogin:
setShouldSkipAuthorizationUI:
_associatedDomains
_deviceName
T@"NSArray",C,N,V_associatedDomains
T@"NSString",C,N,V_deviceClass
T@"NSString",C,N,V_deviceName
privateEmailAddress
initWithAddress:forKey:
initWithAddress:forKey:withBundleId:
_privateEmailAddress
T@"NSString",R,C,N,V_clientAppBundleId
T@"NSString",R,C,N,V_privateEmailAddress
_initWithInfo:
initWithInfo:
buildNumber
operatingSystemName
operatingSystemVersion
model
colorCode
enclosureColorCode
coverGlassColorCode
housingColorCode
backingColorCode
trusted
inCircle
lastUpdatedDate
machineId
_trusted
_inCircle
_operatingSystemName
_operatingSystemVersion
_model
_colorCode
_enclosureColorCode
_coverGlassColorCode
_housingColorCode
_backingColorCode
_lastUpdatedDate
_machineId
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_buildNumber
T@"NSString",R,C,N,V_operatingSystemName
T@"NSString",R,C,N,V_operatingSystemVersion
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_colorCode
T@"NSString",R,C,N,V_enclosureColorCode
T@"NSString",R,C,N,V_coverGlassColorCode
T@"NSString",R,C,N,V_housingColorCode
T@"NSString",R,C,N,V_backingColorCode
TB,R,N,V_trusted
TB,R,N,V_inCircle
T@"NSDate",R,C,N,V_lastUpdatedDate
T@"NSString",R,C,N,V_machineId
T@"NSDictionary",R,C,N,V_additionalInfo
initWithBundleIdentifier:bundleName:bundleDescription:bundleType:otherInfo:
otherInfo
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_bundleName
T@"NSString",R,C,N,V_bundleDescription
TQ,R,N,V_bundleType
T@"NSDictionary",R,C,N,V_otherInfo
_shouldOverrideProxiedBundleIDForContext:
_appleIDAuthorizationURLs
componentsWithURL:resolvingAgainstBaseURL:
path
port
_appleOwnedDomains
compare:options:range:
characterAtIndex:
canPerformAuthorization
shouldProcessURL:
isURLFromAppleOwnedDomain:
performAuthorizationWithContext:completion:
revokeAuthorizationWithContext:completion:
primaryApplicationInformationForWebServiceWithInfo:error:
T@"<AKAuthorizationUIProvider>",&
B32@0:8@16^@24
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@"NSString"16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
v20@0:8B16
v24@0:8@?16
v40@0:8@16@24@?32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKCustodianSetupResult"@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"AKCustodianContext"16@?<v@?B@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"AKCustodianContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKTrustedContactsSyncResult"@"NSError">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@?16@0:8
@"NSXPCInterface"
@"NSXPCListener"
@28@0:8@16B24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8@16B24q28
@32@0:8@16^@24
B24@0:8^@16
v48@0:8@16@24@32@?40
v40@0:8Q16@24@?32
Vv32@0:8@16@?24
v40@0:8@16q24@?32
@24@0:8^@16
@36@0:8B16@20^@28
@"NSXPCListenerEndpoint"
@"AKAppleIDAuthenticationContextManager"
@"NSLock"
@"NSData"
v24@0:8Q16
@"NSURLRequest"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
@20@0:8B16
v32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@32@0:8@16@?24
@"NSURLSession"
@"NSMutableDictionary"
v32@0:8@"ASAuthorizationController"16@"ASAuthorization"24
v32@0:8@"ASAuthorizationController"16@"NSError"24
v32@0:8@"ASAuthorizationController"16@"NSString"24
@"<AKFidoUIProvider>"
@"ASAuthorizationController"
@"AKFidoContext"
q16@0:8
v24@0:8q16
@"NSArray"
@"NSUUID"
v32@0:8q16@24
v32@0:8q16@"NSString"24
q24@0:8@16
@24@0:8q16
@"NSDictionary"
v32@0:8@"AKInheritanceContext"16@?<v@?@"AKBeneficiaryManifest"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"NSError">24
v32@0:8@"AKInheritanceCLIContext"16@?<v@?@"AKBeneficiaryAliasSetupResult"@"NSError">24
v24@0:8@"NSXPCInterface"16
@"NSObject"16@0:8
@"AAFXPCSession"
v24@0:8@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">40
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"AKServerRequestConfiguration"16@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKFidoContext"24@?<v@?@"AKFidoAuthenticationResponse"@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8@16B24@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSData"24@?<v@?B@"NSError">32
v36@0:8@"AKAppleIDAuthenticationContext"16B24@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">48
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSNumber"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSNumber"@"NSError">48
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKServerRequestConfiguration"24@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSUUID"24@?<v@?@"NSError">32
v48@0:8@"NSDictionary"16@"NSError"24@"NSUUID"32@?<v@?B@"NSDictionary">40
@"AKAppleIDAuthenticationController"
@"<AKAppleIDAuthenticationDelegate>"
@24@0:8@?16
Q24@0:8@16
@"NSDate"
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"AKDevice"16@0:8
v24@0:8@"AKDevice"16
@"AKDevice"
@"<AKCredentialRequestProtocol>"
@"AKAuthorizationScopesUserSelection"
@"NSNumber"
@40@0:8@16@24@32
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
@"CDPRecoveryController"
@"AKAccountRecoveryContext"
@"<CDPStateUIProvider>"
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKAuthorization"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSData"@"NSError">16
@"CoreTelephonyClient"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
d16@0:8
v24@0:8d16
@"NSValue"
@"AKAuthorizationUpgradeContext"
@"AKAuthorizationRequest"
@"AKPasswordRequest"
@"AKUserInformation"
v48@0:8@16@24@32@40
B24@0:8q16
@"AKBeneficiaryManifest"
@"AKInheritanceAccessKey"
{CGSize=dd}16@0:8
@48@0:8@16{CGSize=dd}24@40
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationUserResponse"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSError">24
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"AKAuthorizationRevokeUpgradeContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v40@0:8@"AKAuthorization"16@"AKCredentialRequestContext"24@?<v@?B@"NSError">32
B32@0:8^{__SecTrust=}16@24
v28@0:8B16@20
v32@0:8Q16@24
@40@0:8@16@24^@32
B32@0:8@16q24
@32@0:8@16q24
@"ACAccountStore"
@"ACAccountType"
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPrivateEmail"@"NSError">32
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmail"@"NSError">24
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmailContext"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
@"AKPrivateEmailClientImpl"
@20@0:8i16
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSError"40
@24@0:8Q16
@"AKAnisetteProvisioningController"
@"AKAppleIDAuthenticationContext"
@"<AKAnisetteServiceProtocol>"
@"AKAnisetteData"
@"AKAttestationData"
v40@0:8@"AKPrivateEmail"16@"NSError"24@?<v@?B@"NSError">32
@32@0:8@16Q24
@"AKPushMessage"
@28@0:8B16^@20
@"<AKURLBagDictionaryProvider>"
@"NSArray"40@0:8@"NSString"16@"NSDictionary"24@"NSArray"32
@"NSArray"24@0:8@"NSArray"16
B24@0:8@"FLFollowUpItem"16
@"NSURL"
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
@"NSDateFormatter"
@72@0:8@16@24@32@40@48@56@64
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
@48@0:8@16@24@32@40
@"<AKAlertHandlerUIProvider>"
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary">40
@"NSSet"16@0:8
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary"@"NSURLRequest">40
v40@0:8@16@24^B32
@32@0:8d16@24
@"NSCondition"
@"NSMutableArray"
@"NSArray"24@0:8^@16
B32@0:8@"NSArray"16^@24
B32@0:8@"FLFollowUpItem"16^@24
@"FLFollowUpController"
@32@0:8q16@24
@"<AKCredential>"
@"NSObject<OS_dispatch_group>"
@"AKCircleRequestPayload"
@64@0:8@16@24@32@40@48@56
@"<AKAuthorizationUIProvider>"
v36@0:8B16@20@?28
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
B48@0:8@16@24@32@40
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
B40@0:8@16@24^@32
@"<AKFollowUpProvider>"
@"AKCredentialRequestContext"
v32@0:8@16:24
@"NSObject<OS_nw_path_monitor>"
@"AKAppleIDServerResourceLoadDelegate"
@"<AKFollowUpItemFactory>"
@"AKAuthorizationDaemonConnection"
@"ACAccount"
@"AKAppleIDAuthenticationContext"32@0:8@"AKAppleIDAuthenticationContext"16^@24
@"<AKAuthorizationClientProtocol>"
@"NSUUID"16@0:8
@"AKAdaptiveService"
@"NSLocale"
v28@0:8B16@?20
^{__CFUserNotification=}48@0:8@16@24@32@40
v48@0:8@16q24@32@?40
@32@0:8@16B24B28
@28@0:8B16@20
@"AKCommandLineUtilities"
@24@0:8@"NSString"16
^{__CFUserNotification=}
@"NSSet"
v44@0:8@16B24q28@?36
Vv24@0:8@?16
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v40@0:8@"NSString"16@"AKUserInformation"24@?<v@?B@"NSError">32
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError">16
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSDictionary"@"NSError">28
@"<AKPrivateEmailUIProvider>"
@"AKCustodianDaemonConnection"
@56@0:8@16@24@32Q40@48
@"AKAuthorizationClientImpl"
@(#)PROGRAM:AuthKit  PROJECT:AuthKit-1
com.apple.Carousel.authAlertXPCService
alertTitle
alertMessage
alertIdentifier
defaultButtonTitle
alternateButtonTitle
otherButtonTitle
alertResponse
alertSupplementViewID
alertSupplementViewData
overWriteExistingAlert
systemSoundIDKey
textFieldDescription
textFieldIsSecure
textFieldInputType
textFieldLength
textFieldValue
textFieldContentType
com.apple.AuthKit.AKSecondFactorCodeView
com.apple.AuthKit.AKLocationSignInView
com.apple.AuthKit.AKAuthorize
_transactionID
_bundleID
_teamID
v8@?0
com.apple.AuthKit.alertRequestQueue
v16@?0@"NSError"8
v24@?0@"NSDictionary"8@"NSError"16
_userID
_clientID
_altDSID
com.apple.authkit
com.apple.ak.custodian.xpc
AKExtensionItemContext
com.apple.AuthKitUI.AKLocationSignInAlert
com.apple.AuthKitUI.AKSecondFactorAlert
com.apple.AuthKitUI.AKSecondFactorEntryAlert
/System/Library/Frameworks/SetupAssistant.framework/SetupAssistant
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
/AppleInternal/Library/Frameworks/SetupAssistant.framework/SetupAssistant
BYLicenseAgreement
Unable to find class %s
_appID
_appName
_nonce
_serviceID
_state
AKPassword
AKRawPassword
AKIDMSToken
token
AKDSID
AKAltDSID
AKRememberPassword
AKIsHSA2
AKSecurityLevel
AKAuthenticationMode
AKIsUnderage
AKIsLegacyStudent
AKDidPerformInteractive
AKNewAppleIDSetupInfo
AKMasterKeyID
AKDidShowServerUI
AKAcceptedTerms
AKManagedAppleID
AKAuditLogin
AKFirstName
AKLastName
AKImageURL
AKShortLivedToken
AKIdentityToken
AKCustodianSetupToken
AKIsServerUIRequired
AKInheritanceBeneficiarySetupToken
GsIdmsToken
AKInheritanceBeneficiaryIdentifier
AKInheritanceBeneficiaryWrappedKey
AKIsPasscodeResetRequired
AKConfigurationInfo
AKDuplexSession
AKCircleContext
AKRepairState
AKCustodianRecoverySessionID
AKAppleIDEmailsDidChangeNotification
com.apple.authkit.user-info-changed
altDSID
security-level
auth-mode
AKDidPerformBiometric
AKDidPerformPasscode
managedOrganizationType
managedOrganizationName
isNotificationEmailAvailable
notificationEmail
primaryEmailVetted
firstName
lastName
reachableEmails
forwardTo
authorizedAppListVersion
previouslySelectedAsPrivateEmail
previouslySelectedEmail
AKDemoAccount
AKAdditionalInfo
AKAppleIDAuthenticationControllerXPCLock
-[AKAppleIDAuthenticationController authenticateWithContext:completion:] requires a non-nil value for the context parameter.
v20@?0B8@"NSError"12
v24@?0@"AKUserInformation"8@"NSError"16
v24@?0Q8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
(null)
v24@?0@"NSNumber"8@"NSError"16
v24@?0@"AKCircleRequestPayload"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
-[AKAppleIDAuthenticationController clearSessionCacheWithCompletion:]_block_invoke_2
_encryptedPRKC
_ownerCustodianAltDSID
<%@: %p {
encryptedPRKC: %@...
ownerCustodianAltDSID: %@
<%@: %p, _underlylingTask: %@>
AuthKitURLSession
com.apple.authkit.url
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
icloud.com
@32@?0@"NSString"8Q16^B24
 not
scopes
client_id
credential_state
transfer_state
primary_client_id
origin
transferred
expired
<%@:%p> clientID: %@, scopes: %@, state:%li, transferState:%@, primaryClientID:%@, origin:%@
_beneficiaryID
_wrappingKeyData
_wrappingKeyString
_wrappedKeyData
_wrappedKeyString
_claimTokenData
_claimTokenString
Access code for beneficiary %@
core
traffic
query
signpost
aaa-itriage
userInteraction
fido
siwa
com.apple.ak.puffin.xpc
BundleID
IconData
IconScale
type
DidTapNotification
DidStartServerAuthorization
FetchAppIcon
FetchAppIconReply
StartProgressAnimation
Unknown
_attestationHeaders
%@ %@
com.apple.ak.inheritance.xpc
v24@?0@"AKBeneficiaryManifest"8@"NSError"16
-[AKInheritanceController fetchManifestOptionsWithInheritanceContext:completion:]_block_invoke_2
-[AKInheritanceController setupBeneficiaryWithInheritanceContext:completion:]_block_invoke_2
-[AKInheritanceController updateBeneficiaryWithInheritanceContext:completion:]_block_invoke_2
-[AKInheritanceController removeBeneficiaryWithInheritanceContext:completion:]_block_invoke_2
v24@?0@"AKBeneficiaryAliasSetupResult"8@"NSError"16
-[AKInheritanceController _setupBeneficiaryAliasWithInheritanceContext:completion:]_block_invoke_2
AKContextManagerQueue
v20@?0B8@"NSDictionary"12
v12@?0B8
-[AKAppleIDAuthenticationContextManager provisionAnisetteForContext:withCompletion:]
-[AKAppleIDAuthenticationContextManager syncAnisetteForContext:withSIMData:completion:]
-[AKAppleIDAuthenticationContextManager eraseAnisetteForContext:withCompletion:]
-[AKAppleIDAuthenticationContextManager fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[AKAppleIDAuthenticationContextManager legacyAnisetteDataForContext:DSID:withCompletion:]
-[AKAppleIDAuthenticationContextManager fetchPeerAttestationDataForContext:withRequest:completion:]
com.apple.gs.
(cag).
%@...
(******)
v32@?0@"NSString"8@16^B24
@32@?0@8@16^B24
v32@?0@8@16^B24
com.apple.authkit.trusted-device-list-changed
mids
_custodianUUID
_wrappingKeyRKC
_ownerAppleID
_custodianSetupToken
_pushToken
_recoverySessionID
_custodianRecoveryToken
_aaData
_idmsData
_recoveryStep
_ownerDevice
_errorCode
_cliMode
_notificationAction
_custodianUUIDs
_beneficiaryUUIDs
_lastDataSyncTimestamp
_custodianContacts
_beneficiaryContacts
<%@: %p> with 
CustodianUUID: %@ 
altDSID: %@ 
OwnerAppleID: %@ 
ownerCustodianAltDSID: %@ 
wrappingKeyRKC: %@ 
pushToken: %@ 
sessionID: %@ 
custodianRecoveryToken: %@ 
recoveryStep: %@ 
cliMode: %i 
 custodianContacts: %@ 
 beneficiaryContacts: %@
_userSelection
_loginChoice
_selectedRequest
_rawAccountPassword
<%@: %p { selectedRequest: %@, userSelection: %@, loginChoice: %@, rawPassword: %@}
(empty)
%@==
[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}
SELF MATCHES %@
POST
AKAttestationErrorDomain
AKAttestationSignerValidity
AKAttestationUseDeviceCheckKeychainAccess
v32@?0@"NSDictionary"8@"NSData"16@"NSError"24
v32@?0@"NSData"8@"NSData"16@"NSError"24
_akAction
_itemIdentifier
_txnid
_isContinuityPush
<%@:%p> identifier: %@, action: %@, altDSID: %@, txnid: %@
number
slotID
label
dataPreferred
defaultVoice
physicalSim
inUse
PhoneCertificate
B32@?0@"CTXPCServiceSubscriptionContext"8Q16^B24
com.apple.accounts.carrierUtilities.queue
@"NSXPCConnection"8@?0
true
ak-button
ak-action
X-Apple-AK-Action
X-Apple-I-Cont
AKHarvestedContinuationHeaders
start-icsc
mk-validation
continue
complete
read
cancel
delete
teardown
open
clientInfo
X-Apple-AK-Continuation-Data
X-Apple-Alternate-Id
X-Apple-DSID
X-Apple-I-88CC-99DE-EE63-2736
X-Apple-I-Experiment-Features
X-Apple-PE-Token
X-Apple-I-Account-Name
X-Apple-I-Account-NameType
phoneNumber
X-Apple-Requested-Partition
AKUsername
AKPasswordResetTokenKey
AKEmailVerificationCompletedNotificationKey
icloud
imessage
facetime
itunesstore
gamecenter
AKICSCURLKey
AKRecoveryURLKey
X-Apple-iCSC-Identity-Token
X-Apple-iCSC-PE-Token
X-Apple-Recovery-Identity-Token
X-Apple-Recovery-PE-Token
X-Apple-MK-Validation-Token
X-Apple-I-iCSC-PRK
X-Apple-I-iCSC-MD-M
X-Apple-I-ICSCREC
X-Apple-I-IdMS-Data
status
success
failure
appleid
errorCode
errorMessage
action
start_account_recovery
try_again
prs_account_nm
personID
dsid
repair-state
authmode
pakedata
idmsdata
circlestep
ptkn
atxid
RequestURL
Request
Header
prkgen
X-Apple-AK-Auth-Type
X-Apple-AK-Request-Auth-Type
HSA2
X-Apple-I-Experiment-Mode
X-Apple-I-RecoveryKey-Show
X-Apple-I-HSA1-Conversion
X-Apple-I-Test-Account-Mode
source
clear_followup_notification
continuity_push_followup_notification
AKFollowUpAltDSIDKey
AKFollowUpServerURL
AKFollowUpSafariURL
com.apple.authkit.hsa2-password-reset
verifyPrimaryEmail
AKFollowUpLocalURLKey
AKFollowUpAppleAccountRootKey
IDMSUrl
urlKey
txnid
cfudata
cfuids
items
com.apple.AuthKitUI.AKFollowUpServerUIExtension
Sign In With Apple
AKUserIdentifier
AKAuthorizedScopes
AKUserInformation
AKAuthorizationCode
AKClientBundleID
envelope.fill.badge.shield.trailinghalf.fill
faceid
touchid
key.fill
hmeListVersion
TEMPORARY
X-Apple-CR-Token
X-Apple-I-Private-Email-Address
privateEmailKey
X-Apple-I-Private-Email-Client-Bundle
AUTH_EVENT_TYPE_UNKNOWN
SRP_AUTH_FAILURE
SECOND_FACTOR_SERVER_UI
SECOND_FACTOR_PIGGYBACK_TRANSITION
SECOND_FACTOR_PIGGYBACK_FAILURE
SECOND_FACTOR_PIGGYBACK_ESCAPE_SMS_SUCCESS
SECOND_FACTOR_PIGGYBACK_ESCAPE_FAILURE
appleManagedAccountSignIn
appleIdSettings
CFBundleIconFile
CFBundleIconName
com.apple.gs.idms.hb
RKMandate
isManagedAccount
localizedAppName
X-Apple-Client-App-Name
X-Apple-Proxied-App-Name
X-Apple-AK-Context-Type
X-Apple-I-Auth-Type
X-Apple-I-BC
X-Apple-I-Client-Bundle-Id
X-Apple-I-Proxied-Bundle-Id
_authorizationRequests
_callerBundleID
_iconData
_iconName
_iconScale
_iconSize
_informativeText
_isFirstPartyLogin
_isRapportLogin
_isWebLogin
_localizedAppName
_passwordRequests
_proxiedAssociatedDomains
_proxiedClientAppID
_proxiedClientAppName
_proxiedClientBundleID
_proxiedServiceID
_proxiedClientTeamID
_proxiedDeviceClass
_proxiedDeviceName
_requestIdentifier
_requirePassword
_shouldForcePrivateEmail
_shoudlForceUI
_shoudlSkipBiometrics
_shoudlSkipUI
_upgradeContext
_upgradeFromPassword
_clientShouldAuthenticateExternally
_authSessionTimeout
_externalAuthToken
_externalLocalAuthData
_continuationRequestIdentifier
_requestOptions
_sessionID
_shouldUseProxiedClientBundleIDForSRP
B24@?0@"<AKCredentialRequestProtocol>"8Q16
<%@: %p> Auth Request %@ 
Password Request: %@ 
Proxied Bundle: %@
Proxied Team: %@ 
Session ID: %@
_userInformation
_makePrivateEmail
{ userInformation: %@, makePrivateEmail: %@}
X-Mme-Device-Id
X-Apple-I-Provisioning-Device-Id
X-Apple-I-Client-Time
X-Mme-Proxied-Device-Id
X-Apple-Identity-Token
X-Apple-Proxied-Identity-Token
X-Apple-GS-Token
X-Apple-SL-Token
X-Apple-I-MD
X-Apple-I-MD-M
X-Apple-I-MD-RINFO
X-Apple-I-Companion-MD
X-Apple-I-Companion-MD-M
X-Apple-I-Companion-MD-RINFO
X-Apple-I-Proxied-MD
X-Apple-I-Proxied-MD-M
X-Apple-I-Proxied-MD-RINFO
X-Apple-Ephemeral-Auth
X-Mme-Nas-Qualify
X-Apple-I-Logged-In-Services
Content-Type
X-Apple-I-CK
X-Apple-I-PRK
X-MMe-Country
X-MMe-Proxied-Country
X-Apple-I-Locale
X-Apple-I-TimeZone
X-Apple-I-TimeZone-Offset
X-MMe-Companion-Client-Info
X-MMe-Proxied-Client-Info
X-Apple-I-PRK-Gen
X-Apple-I-Proxied-PRK-Gen
X-Apple-I-Local-Login-Uses-AppleID
X-Apple-HB-Token
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Apple-I-Proxied-SRL-NO
X-Apple-I-Device-PN
X-Apple-IDS-PAC
X-Apple-I-Phone
X-Apple-iOS-SLA-Version
X-Apple-I-MD-LU
X-Apple-I-CDP-Circle-Status
X-Mme-Show-Warranty
X-MMe-Device-Model
X-Apple-I-AppleID
X-Apple-I-DeviceUserMode
X-Apple-I-CFU-State
X-Apple-Offer-Security-Upgrade
X-Apple-I-App-Provided-Context
X-Apple-I-ReAuth
X-Apple-I-Proxied-ICSCREC
X-Apple-Test-Application
X-Apple-I-Device-Configuration-Mode
X-Apple-I-SKU-Country
X-Apple-I-DC
X-Apple-I-Exec-Mode
X-Apple-I-UrlSwitch-Info
X-Apple-I-Request-UUID
X-Apple-I-Private-Email-Domain
X-Apple-I-Private-Email-Origin
X-Apple-I-Private-Email-App-Name
X-Apple-Guardian-Identity-Token
X-Apple-Guardian-HB-Token
X-Apple-Guardian-GS-Token
X-Apple-I-Fido-Recovery-Token
false
v32@?0@"NSString"8@"NSString"16^B24
%@:%@
application/json
itunes
piggybacking
RegionCode
%llu
AKFakeAuthSuccess
AKDisablePiggy
AKAddHS2CreateHeader
AKSuppressHSA2Suggestions
AKAllowPhoneNumberAccounts
AKAddExperimentalModeHeader
AKHideInternalBuildHeader
AKAddTestApplicationHeader
AKSuppressModalSheetsInMacBuddy
_AKAlwaysShowWelcome
_AKAutocycleAppsInTiburon
_AKAutocycleAppsInWebTakeOver
_AKAddTestAccountHeader
_AKAuthorizationDemoMode
_AKCloudPartition
_AKByPassCustodianDeviceCheck
_AKBeneficiaryLiveOnKey
_AKEnableSigninWithMAID
AKLastIDMSEnvironment
AKShouldRequestPiggybackingPresenceEnforcement
AKOverridePiggybackingIDMSPresence
AKOverridePiggybackingLocalPresence
com.apple.authkit.config
v12@?0i8
AuthKit
SignInWithMAID
AKConfigurationDidChangeNotification
cfgs
abs-enable
baa-interval
X-MMe-Nas-Qualify
X-MMe-Nas-E
X-Apple-Baa
X-Apple-I-Payload-Hash
X-Apple-Baa-E
X-Apple-I-Baa-S
X-Mme-Device-Id-S
X-Apple-I-Provisioning-Device-Id-S
X-MMe-Client-Info-S
X-MMe-Proxied-Nas-Qualify
X-MMe-Proxied-Nas-E
X-Apple-Proxied-Baa
X-MMe-Proxied-Client-Info-S
X-Apple-Proxied-Baa-E
com.apple.authkit.signingQ
v16@?0@"NSMutableDictionary"8
%@%@
@"NSString"32@?0@"NSString"8@"NSData"16^B24
_manifest
_accessCode
_beneficiarySetupToken
_beneficiaryIdentifier
_services
_operatingSystems
_includeUntrustedDevices
_includeFamilyDevices
<%@:%p> altDSID: %@, os: %@, services: %@, untrusted: %d, family: %d
/System/Library/Frameworks/AppleMediaServices.framework/AppleMediaServices
/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
/AppleInternal/Library/Frameworks/AppleMediaServices.framework/AppleMediaServices
AMSMediaTask
AMSBag
AMSMediaArtwork
AMSMediaArtworkFormatPNG
AMSMediaArtworkCropStyleBoundedBox
AMSMediaTaskPlatformMac
artwork
name
v24@?0@"AMSMediaResult"8@"NSError"16
attributes
platformAttributes
com.apple.ak.authorizationservices.xpc
AppleIDAuthSupportNoPinning
.GlobalPreferences
adsid
DSID
aliases
retaining-services
additionalInfo
reachableEmailAddresses
vettedPrimaryEmail
forwardingEmail
phoneAsAppleID
isUnderage
isSenior
demoAccount
ageOfMajority
appleIdSignInEnabled
privateAttestationEnabled
privateEmailSelection
authorizationEmailSelection
primaryEmail
WarmUpVerificationTimeStamp
DeviceTrustRevoked
AuthModeTimeStamp
canHaveCustodian
canBeCustodian
custodianEnabled
custodianLastModified
beneficiaryAccount
canHaveBeneficiary
canBeBeneficiary
appleIDCountryCode
hasMDM
custodianListVersion
beneficiaryListVersion
fidoAccount
com.apple.gs.appleid.auth
AKAccountManagerQueue
v32@?0@"NSString"8Q16^B24
B24@?0@"ACAccount"8Q16
v32@?0@"ACAccount"8Q16^B24
@"NSString"32@?0@"NSNumber"8Q16^B24
AKAccountManager.groupedAccountCleanup
accountClass
primaryAccount
primary
primaryEmailVerified
appleIdAliases
@8@?0
com.apple.ak.privateemail.xpc
v24@?0@"AKPrivateEmail"8@"NSError"16
-[AKPrivateEmailController lookupPrivateEmailWithContext:completion:]_block_invoke
-[AKPrivateEmailController fetchPrivateEmailForAltDSID:withKey:completion:]_block_invoke
-[AKPrivateEmailController registerPrivateEmailForAltDSID:withKey:completion:]_block_invoke
-[AKPrivateEmailController fetchPrivateEmailWithContext:completion:]_block_invoke
v24@?0@"AKPrivateEmailContext"8@"NSError"16
-[AKPrivateEmailController getContextForRequestContext:completion:]_block_invoke
-[AKPrivateEmailController deletePrivateEmailDatabaseWithCompletion:]_block_invoke
-[AKPrivateEmailController privateEmailListVersionWithCompletion:]_block_invoke
-[AKPrivateEmailController removePrivateEmailKey:completion:]_block_invoke
-[AKPrivateEmailController listAllPrivateEmailsForAltDSID:completion:]_block_invoke
%02X
com.apple.ak.anisette.xpc
_user
_site
_appleIDAuth
_createAppleID
AKAuthorizationLoginChoice:
User: %@    Site: %@    AppleIDAuth: %@
/System/Library/Frameworks/CoreFollowUp.framework/CoreFollowUp
/System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp
/AppleInternal/Library/Frameworks/CoreFollowUp.framework/CoreFollowUp
FLFollowUpAction
FLFollowUpController
FLFollowUpItem
FLFollowUpNotification
FLGroupIdentifierAccount
FLNotificationOptionForce
FLNotificationOptionSpringboardAlert
FLNotificationOptionExtensionForNotification
FLNotificationOptionExtensionActions
FLNotificationOptionBannerAlert
_accessibleBundleInformation
_manifestOptions
identifier
description
safari
_identityToken
_heartbeatToken
_shouldSendSigningHeaders
_shouldSendEphemeralAuthHeader
_serviceType
_continuationToken
_passwordResetToken
_serviceToken
_proxiedDeviceAnisetteData
_proxiedDevice
_proxyAppName
_clientAppName
_clientBundleID
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendICSCIntentHeader
_loggedInServices
_hasEmptyPasswordOverride
_securityUpgradeContext
_shouldOfferSecurityUpgrade
_shouldSendPhoneNumber
_phoneNumberCertificate
_phoneInformation
_followupItems
_appProvidedContext
_proxiedAltDSID
_proxiedIdentityToken
v16@?0@?<v@?>8
v24@?0@"AKAnisetteData"8@"NSError"16
v24@?0@"AKAttestationData"8@"NSError"16
hsa2
X-Apple-CDP-Action
@"NSString"32@?0@"NSString"8@"NSString"16^B24
team_id
privateEmail
apps
v32@?0@8Q16^B24
<%@:%p> team: %@, user: %@, email: %@, apps: {
step
atxnid
pake
<%@:%p> transaction: %@, step: %ld, errorCode: %ld
_responseInfo
_serverInfo
_clientInfo
_transactionId
_clientErrorCode
_circleStep
_supportsPresence
_presenceSID
_presenceMode
_presenceFallbackApproved
_presenceCheckPassed
_localPresenceFound
contextKey
contextAltDSID
contextProxiedApp
contextBundleID
contextAppName
upgradeBundleID
HmeContext:{%@:%@:%@}
/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
/System/Library/PrivateFrameworks/AuthenticationServices.framework/AuthenticationServices
/AppleInternal/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
ASAuthorizationSecurityKeyPublicKeyCredentialProvider
ASAuthorizationSecurityKeyPublicKeyCredentialRegistration
ASAuthorizationPublicKeyCredentialParameters
ASAuthorizationController
ASAuthorizationSecurityKeyPublicKeyCredentialAssertion
ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor
ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports
ASAuthorizationPublicKeyCredentialResidentKeyPreferencePreferred
ASAuthorizationPublicKeyCredentialAttestationKindDirect
ASAuthorizationErrorDomain
gsService
midStartProvisioning
midFinishProvisioning
midSyncMachine
securityUpgradeEligibility
securityUpgrade
validateCode
postData
iForgot
iForgotResetNotification
createAccount
device_list_self
trustedDevices
trustedDevicesSummaryUrl
qualifyCert
qualifySession
tokenUpgrade
postConfigData
fetchConfigData
changePasswordUrl
validateVettingToken
renewRecoveryToken
circle
followUpItems
fetchUserInfo
fetchAuthorizedApps
fetchPrimaryApp
fetchAuthMode
storeModernRecoveryKey
acsURL
repair
userVerificationResult
appleIDAuthorizeHTMLResponse
secondaryAuth
createChildAccount
deleteAuthorizedApp
managePrivateEmailAddress
fetchHmeList
usePrivateEmailAddress
registerHme
privacyRepair
startCustodianSetup
finishCustodianSetup
abortCustodianSetup
updateDataRecoveryKey
startCustodianRecovery
custodianRecoveryStep
custodianRecoveryValidate
fetchDataRecoveryKey
custodianRecoveryFeedback
custodianIncompatibleDevices
manageRecoveryKey
manageDataRecoveryService
accountContactDataSync
fetchBeneficiaryDataSelectionOptions
setupBeneficiary
updateBeneficiary
removeBeneficiary
createBeneficiaryAccountLiveOn
startFidoAuth
finishFidoAuth
startFidoRecoveryAuth
finishFidoRecoveryAuth
urls
apsEnv
iForgotAppleIdLocked
idmsEnv
is-phone-number-supported
appleOwnedDomains
appleIDAuthorizationUrls
is-in-line-flow-supported
continuation-header-prefix
2faUpgradeAccountTypePriority
custodian
inheritance-cfg
IdMS1
IdMS2
IdMS3
actions
notification
body
title
dismiss
frequency
localUrlKey
root
bundlePath
iconName
notifyingAppBundleID
force
delay
osAlert
bannerAlert
defbtn
albtn
priority
zeroAction
badgeOnly
omitBadge
AKAction
notifyingAppId
@32@?0@"NSDictionary"8Q16^B24
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_authContext
_recoveryContinuationURL
_supportsMasterKeyRecovery
_mandatesRecoveryKey
%s%s%s
[31m
yyyy-MM-dd
Accept
Error deserializing data %@ for data %@
_authenticatorData
_signature
_clientData
_credentialName
_userIdentifier
_challenge
_relyingPartyIdentifier
<%@: %p {
AuthenticatorData: %@, 
Signature: %@, 
CredentialID: %@, 
ClientData: %@, 
UserIdentifier: %@, 
Challenge: %@, 
RelyingPartyIdentifier: %@, 
prefs:root=APPLE_ACCOUNT
prefs:root=APPLE_ACCOUNT&aaaction=upgradeSecurityLevel
prefs:root=Passcode
com.apple.AuthKit
AUTH_ERROR_ALERT_INVALID_CONTEXT_TITLE
Localizable
AUTH_ERROR_ALERT_INVALID_CONTEXT_MESSAGE
AUTH_ERROR_ALERT_BUTTON_OK
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_MISSING_APPLE_ACCOUNT_MESSAGE
AUTH_ERROR_ALERT_BUTTON_SETTINGS
AUTH_ERROR_ALERT_BUTTON_CLOSE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_TITLE
AUTH_ERROR_ALERT_ACCOUNT_NOT_SUPPORTED_MESSAGE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_TITLE
AUTH_ERROR_ALERT_UNVERIFIED_EMAIL_MESSAGE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
AUTH_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE
AUTH_ERROR_ALERT_BUTTON_CONTINUE
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_TITLE
wapi
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE_WLAN
AUTH_ERROR_ALERT_CANNOT_FIND_SERVER_MESSAGE_WIFI
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_TITLE
AUTH_ERROR_ALERT_UNDERAGE_ACCOUNT_MESSAGE
AUTH_ERROR_ALERT_CREATE_PASSCODE_TITLE
AUTH_ERROR_ALERT_CREATE_PASSCODE_MESSAGE_WATCH
AUTH_ERROR_BUTTON_OPEN_PASSCODE_SETUP
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_CANNOT_SIGN_IN_TITLE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_CANNOT_SIGN_IN_MESSAGE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_TITLE
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_ORGNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_APPNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE_ORGNAME_FORMAT
AUTH_ERROR_ALERT_MANAGED_ACCOUNT_APPLICATION_BLOCKED_MESSAGE
&%@=%@
_accessKey
_beneficiaryFirstName
_beneficiaryLastName
_beneficiaryPassword
Access Key: %@ 
beneficiaryPassword: %@
beneficiaryFirstName: %@
beneficiaryLastName: %@
identityToken: %@
authToken: %@
X-Apple-Session-Key
X-Apple-Encrypted-Session-Key
duration
X-Apple-I-MD-Cmd-Target
X-Apple-I-Data
AKAnisetteControllerLock
_pairedDevice
_proxiedAnisetteData
v16@?0@"NSDictionary"8
v24@?0@"NSURLRequest"8@"NSError"16
paired
X-Apple-I-MD-DATA
_SERVICE_ICLOUD
_SERVICE_ITUNES
_SERVICE_IMESSAGE
_SERVICE_FACETIME
_SERVICE_GAME_CENTER
_NO_SERVICE
_machineID
_oneTimePassword
_routingInfo
AKAnisetteData <%p>: {MID: %@ - OTP: %@ - RD: %@}
Lisbon
com.apple.AuthKitUIService
context
oopUIMode
v24@?0@"BSProcessHandle"8@"NSError"16
IDToken
authCode
state
isLikelyRealUser
_isLikelyRealUser
Authorization Credential:
 UID: %@ 
 Identity Token: %@ 
 AuthorizationCode: %@ 
 User Verification Result: %@ 
 User Info: %@ /n Transaction ID: %@
teams
<%@:%p> version: %@, teams: {
v32@?0@"FLFollowUpItem"8Q16^B24
@32@?0@"FLFollowUpItem"8Q16^B24
id: %@
number with dial code: %@
mode: %@
AKAuthenticationError
AKAnisetteError
AKSQLError
AKPrivateEmailError
AKUnderlyingADIErrors
_authorizedRequest
_credential
<%@: %p {
Authorized request: %@
Credential: %@
_data
_scale
_maskingStyle
AKAbsintheErrorDomain
v24@?0@"NSData"8@"NSError"16
/System/Library/Frameworks/CoreCDP.framework/CoreCDP
/System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP
/AppleInternal/Library/Frameworks/CoreCDP.framework/CoreCDP
CDPFollowUpContext
CDPFollowUpController
CDPContext
CDPRecoveryController
CDPStateController
CDPAccount
CDPStateErrorDomain
CDPIDMSPasswordResetKey
CDPIDMSRecordMIDKey
/System/Library/Frameworks/CoreCDPUI.framework/CoreCDPUI
/System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI
/AppleInternal/Library/Frameworks/CoreCDPUI.framework/CoreCDPUI
CDPUIAccountRecoveryController
CDPUIController
_waitForReply
_identityTokenValue
_heartbeatTokenValue
_payload
_waitForReplyTimeout
__notifyOfTimeout
_uuid
_status
_hashedWrappingKeyRKC
_originalChallenge
_displayName
_credentials
challenge
rpid
credentialIds
_promptTitle
_promptHeader
_promptBody
_promptIconData
_promptIconScale
<%@: %p {
RelyingPartyIdentifier: %@, 
Challenge: %@, 
Original Challenge: %@, 
UserIdentifier: %@, 
DisplayName: %@, 
CredentialName: %@, 
Credentials: %@, 
PromptTitle: %@, 
PromptHeader: %@, 
PromptBody: %@, 
AKFollowUpAccountRefreshTimestamp
_credentialRequestContext
_loginChoices
_signInAllowsPCSKeyAccess
<%@: %p> - bundleID: %@, localizedAppName: %@, informativeText: %@; credentialRequestContext: %@, userInformation: %@, loginChoices: %@, signInAllowsPCSKeyAccess: %@
com.apple.aktool
aktool
com.nextdoor.nextdoor
com.etsy.etsyforios
com.tinyspeck.chatlyio
com.apple.AppShack
com.apple.AuthKit.AKNetworkObserver
v16@?0@"NSObject<OS_nw_path>"8
_request
_resourceLoadDelegate
_requestType
_presentationType
_whitelistedRedirectURLs
<%@: %p 
 request: %@
 delegate: %@
 requestType: %lu
 presentationType: %lu 
/System/Library/Frameworks/KeychainCircle.framework/KeychainCircle
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
/AppleInternal/Library/Frameworks/KeychainCircle.framework/KeychainCircle
KCAESGCMDuplexSession
B32@?0@"FLFollowUpItem"8Q16^B24
_custodianListVersion
_beneficiaryListVersion
_custodianOperationsByID
_beneficiaryOperationsByID
updateRKC
finish
<%@: %p {
custodianListVersion: %@
beneficiaryListVersion: %@
_custodianOperationsByID: %@
_beneficiaryOperationsByID: %@
X-Apple-I-Accepted-Terms
_password
AKApplicationState
AKApplicationNonce
AKAppProvidedData
AKRequestedScopes
AKClientID
AKTeamID
AKAuthorizationStatus
AKAuthorizationAccount
AKAuthorizationIsSilentAppTransfer
AKAuthorizationIsEligibleForUpgradeFromPassword
AKClientAuthenticatedExternallyWithPassword
AKExternalAuthToken
<%@: %p {
requestIdentifier: %@,
transactionID: %@, 
clientID: %@,
teamID: %@,
userIdentifier: %@,
altDSID: %@,
state: %@,
nonce: %@,
requestedScopes: %@,
appProvidedData: %@,
isSilentAppTransfer: %d,
isEligibleForUpgradeFromPassword: %d,
email
X-MMe-Client-Info
https
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
_attestationsData
_credentialID
<%@: %p {
Challenge: %@, 
AttestationsData: %@, 
CredentialID: %@, 
ClientData: %@, 
RelyingPartyIdentifier: %@, 
CredentialName: %@, 
UserIdentifier: %@, 
<%@: %p> requestIdentifier: %@,
altDSID: %@,
userID: %@ 
transactionID:%@
https://gsa.apple.com
https://grandslam-idms1.apple.com
https://grandslam-idms2.apple.com
https://grandslam-idms3.apple.com
/auth
/appleid/account
/verify/phone
/verify/phone/securitycode
/birthday
/password
account
person
birthday
createContext
password
phoneNumberVerification
mode
countryCode
securityCode
code
numberWithDialCode
obfuscatedNumber
pushMode
acceptedTerms
versions
deviceVersions
termsList
iCloud
termsPageDetails
prologue
agree
hasError
serviceErrors
message
underAge
studentAccount
mkid
accountName
custodianLastUpdateDate
appleManagedAccount
orgType
orgName
notificationEmailAvailable
phoneAsAppleId
_givenName
_familyName
_forwardingEmail
_primaryEmailAddress
_accountName
_accountAliases
_reachableEmails
_previouslySelectedEmail
_ageOfMajority
_authorizedApplicationsListVersion
_masterKeyID
_vettedPrimaryEmail
_phoneAsAppleID
_isUnderage
_isSenior
_isLegacyStudent
_hasUsedAuthorization
_privateAttestationEnabled
_previouslyWantedPrivateEmail
_appleIDSecurityLevel
_authMode
_repairState
_selectedEmail
_additionalInfo
_privateEmailListVersion
_canBeCustodian
_canHaveCustodian
_custodianEnabled
_custodianLastModified
_canBeBeneficiary
_canHaveBeneficiary
_appleIDCountryCode
_hasMDM
_managedOrganizationType
_managedOrganizationName
_isNotificationEmailAvailable
_notificationEmail
<%@: %p {
givenName: %@,
familyName: %@,
forwardingEmail: %@,
primaryEmailAddress: %@,
accountName: %@,
accountAliases: %@,
reachableEmails: %@,
authorizedApplicationsListVersion: %@,
masterKeyID: %@,
vettedPrimaryEmail: %@,
phoneAsAppleID: %@,
isUnderage: %@,
isSenior: %@,
ageOfMajority: %@,
isLegacyStudent: %@,
appleIDCountryCode: %@,
hasUsedAuthorization: %@, 
privateAttestationEnabled: %@, 
appleIDSecurityLevel: %lu,
authMode: %lu,
repairState: %lu,
selectedEmail: %@,
canBeCustodian: %@,
canHaveCustodian: %@,
custodianEnabled: %@,
canBeBeneficiary: %@,
canHaveBeneficiary: %@,
hasMDM: %@,
managedOrganizationType: %@,
managedOrganizationName: %@,
isNotificationEmailAvailable: %@,
notificationEmail: %@,
additionalInfo: %@,
privateEmailListVersion: %@,
_uniqueDeviceIdentifier
_provisioningDeviceIdentifier
_serverFriendlyDescription
_color
_enclosureColor
_coverGlassColor
_housingColor
_backingColor
_locale
_ROMAddress
_MLBSerialNumber
_modelNumber
_linkType
UniqueDeviceID
+[AKDevice activeIDSPeerDevice]
Library/Caches
AKDevice <%p> {%@} link %@
@"NSString"8@?0
@"NSNumber"8@?0
ProvisioningUniqueDeviceID
ModelNumber
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
iPhoneSimulator
ivIu8YTDnBSrYv/SN4G8Ag
ProductVersion
Simulator
@"NSLocale"8@?0
%@_%@
AKAnisetteProvisioningControllerXPCLock
No DSID was provided!
-[_AKAnisetteProviderProxy provisionAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy syncAnisetteForContext:withSIMData:completion:]
-[_AKAnisetteProviderProxy eraseAnisetteForContext:withCompletion:]
-[_AKAnisetteProviderProxy fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:]
-[_AKAnisetteProviderProxy legacyAnisetteDataForContext:DSID:withCompletion:]
-[_AKAnisetteProviderProxy fetchPeerAttestationDataForContext:withRequest:completion:]
%06u
LOGIN_CODE_ALERT_OK_BUTTON
application/x-plist
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/PrivateFrameworks/UIKit.framework/UIKit
/AppleInternal/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/RemoteUI.framework/RemoteUI
/System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI
/AppleInternal/Library/Frameworks/RemoteUI.framework/RemoteUI
RUIParser
NSDocumentTypeDocumentAttribute
NSHTMLTextDocumentType
Failed to validate username and password combination: %@
Enter 6 digit code: 
Failed to read code!
Failed to validate code: %@
IDP second factor-authentication is not supported!
Requesting second-factor ServerUI...
Unexpected second-factor authentication (%@)!
Unknown verification type
Unsupported object model found: %@
v16@?0@"NSString"8
missing page
missing passcode view
missing passcode identifier
missing response URL
httpMethod
missing HTTP method
secure
serverInfo
Error creating an account: %@.
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
Error Validating phone number: %@
v24@?0@"AKTrustedPhoneNumber"8@"NSError"16
trustedPhoneNumbers
Multiple trusted numbers found!
Verifying code...
v32@?0@"NSNumber"8@"AKTrustedPhoneNumber"16^B24
%@. %@ via %@
Please select a trusted number: 
HTMLContent
application/x-buddyml
A second factor code was send to %@ via %@
Enter second factor code: 
Enter your birthday(YYYY-MM-DD): 
Please enter a valid birthday(%@)!
Enter password: 
Enter username: 
Phone Number for this account: 
Enter first name for the account: 
Enter last name for the account: 
Do you agree to terms and conditions?
Y to agree / READ to print out the terms (please just say yess!): 
READ
Y to agree: 
_beneficiaryAltDSID
_beneficiaryAccountName
<%@: %p {
beneficiaryAltDSID: %@
beneficiaryAccountName: %@
AKTemporaryValue
com.apple.ak.code.entered
AKAuthenticationInternalTokenCK
findmydeviced
com.apple.authkit.generic
com.apple.authkit.messages
com.apple.authkit.passkit
com.apple.authkit.appleconnect
com.apple.authkit.screentime
com.apple.authkit.tinker
com.apple.authkit.keychainsync
com.apple.authkit.dependent
X-Apple-Security-Upgrade-Context
INLINE_PASSWORD_ALERT_TITLE
PASSCODE_ALERT_MESSAGE_IPAD
%username%
authless
dependent
dependentToken
dependentSpyglass
_reason
_username
_isUsernameEditable
_DSID
_dependentAltDSID
_isProxyingForApp
_proxiedAppBundleID
_proxiedAppName
_serviceIdentifiers
_identifier
_maximumLoginAttempts
_isEphemeral
_shouldAllowAppleIDCreation
_shouldPromptForPasswordOnly
_passwordPromptTitle
_defaultButtonString
_httpHeadersForRemoteUI
_isPasswordEditable
_shouldUpdatePersistentServiceTokens
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_shouldPreventInteractiveAuth
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_notificationDisclaimer
_shouldForceInteractiveAuth
_capabilityForUIDisplay
_companionDeviceAnisetteData
_companionDevice
_isAppleIDLoginEnabled
_hasEmptyPassword
_shouldRequestShortLivedToken
_shortLivedToken
_shouldRequestConfigurationInfo
_isTriggeredByNotification
_message
_anticipateEscrowAttempt
_isFirstTimeLogin
_supportsPiggybacking
_desiredInternalTokens
_shouldSkipSettingsLaunchAlert
_shouldSendIdentityTokenForRemoteUI
_shouldRequestRecoveryPET
_title
_shouldSkipInitialReachabilityCheck
_attemptIndex
_authenticationType
_shouldSendGrandSlamTokensForRemoteUI
_needsRepair
_appProvidedData
_masterKey
_performUIOutOfProcess
_keepAlive
_cancelButtonString
_alternativeButtonString
_hideAlternativeButton
_hideCancelButton
_hideReasonString
_clientShouldHandleAlternativeButtonAction
_windowTitle
_alwaysShowUsernameField
_privacyBundleIdentifier
_authenticationPromptStyle
_needsNewChildAccount
_authenticationMode
_needsSecurityUpgradeUI
_displayImageData
_verifyCredentialReason
_callerIconBundlePath
_localizedCallerName
_forceEligibleForForegroundAuthentication
_helpAnchor
_helpBook
<%@: %p { UUID: %@ }>
<%@: %p {
UUID: %@,
username: %@,
editable-username: %@,
altDSID: %@,
DSID: %@,
dependentAltDSID: %@,
password: %@,
service-type: %ld,
service IDs: %@,
reason: %@
ephemeral: %@,
password-only: %@,
authentication-type: %@,
update-service-tokens: %@,
offer-upgrade: %@,
offer-upgrade-context: %@,
proxying-for-app: %@,
proxied-app-id: %@,
proxied-device: %@,
companion-device: %@
max-login-attempts: %@
appleid-login-enabled: %@
has-empty-password: %@
request-slt: %@
short-lived-token: %@
identity-token: %@
triggered-by-push: %@
skip-alert: %@
skip-reachability-check: %@
attempt-index: %lu,
masterKey: %@,
performUIOutOfProcess: %@,
VerifyCredentialReason: %@, 
INLINE_PASSWORD_ALERT_MESSAGE
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_SERVICE_TYPE_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
INLINE_PASSWORD_ALERT_OK_BUTTON
INLINE_PASSWORD_ALERT_CANCEL_BUTTON
PASSCODE_ALERT_TITLE_LOCKSCREEN
PASSCODE_ALERT_MESSAGE_LOCKSCREEN_GENERIC
PASSWORD_ALERT_TITLE_LOCKSCREEN
PASSWORD_ALERT_MESSAGE_LOCKSCREEN_GENERIC
INLINE_PASSWORD_ALERT_PASSCODE_PLACEHOLDER
INLINE_PASSWORD_ALERT_PASSWORD_PLACEHOLDER
INLINE_PASSWORD_ALERT_USERNAME_PLACEHOLDER
WRONG_PASSWORD_ALERT_TRY_AGAIN_BUTTON
WRONG_PASSWORD_ALERT_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_CANCEL_BUTTON
ENTER_VERITIFCATION_CODE_FAILED_BUTTON
WRONG_LOGIN_CODE_TRY_AGAIN_BUTTON
WRONG_LOGIN_CODE_ALERT_CANCEL_BUTTON
com.apple.ak.twofa
<%@: %p {
altDSID: %@,
proxiedAppName: %@,
serviceType: %@,
proxiedDevice: %@,
companionDevice: %@,
appProvidedData: %@,
teamID: %@,
appID: %@,
request: %@,
appProvidedContext: %@,
userSelection: %@,
clientAuthenticatedExternallyWithPassword: %@,
com.apple.ak.auth.xpc
passwordPrompt
passwordPromptGoToSettingsNotification
invalidAccountSave
invalidAccountUpdate
missingAccountServices
username
clientKey
privateEmailAddress
privateEmailClientBundle
<PrivateEmail: {%@} -> {%@} [%@]>
<PrivateEmail: {%@} -> {%@}>
v24@?0@"AKCustodianSetupResult"8@"NSError"16
v24@?0@"AKTrustedContactsSyncResult"8@"NSError"16
serialNumber
buildNumber
osVersion
model
lastUpdatedDate
trusted
circleStatus
clcg
clhs
clbg
_name
_serialNumber
_buildNumber
_operatingSystemName
_operatingSystemVersion
_model
_machineId
_lastUpdatedDate
_trusted
_inCircle
_colorCode
_enclosureColorCode
_coverGlassColorCode
_housingColorCode
_backingColorCode
<%@:%p> Name: %@, SN: %@, Build: %@, OS: %@, Version: %@, Model: %@, Timestamp: %@, Trusted: %d, Circle Status: %d, Color Code: %@ Additional Info %@
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
/System/Library/Frameworks/DeviceCheckInternal.framework/DeviceCheckInternal
/System/Library/PrivateFrameworks/DeviceCheckInternal.framework/DeviceCheckInternal
/AppleInternal/Library/Frameworks/DeviceCheckInternal.framework/DeviceCheckInternal
DCBAASigningController
v24@?0@"AKAuthorization"8@"NSError"16
v24@?0@"AKAuthorizationUserResponse"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v24@?0@"NSSet"8@"NSError"16
Cannot perform HME request - Insufficient security level
Cannot perform HME request - Phone as AppleID Account without reachable emails
self: (%p); Connection interrupted
self: (%p); Connection invalidated
error communicating to XPC: %@
Biometric validation of externalizedContext completed with result: %@ and error: %@
Failed to validate externalized Context data with error: %@
%@ deallocated
authkit/authenticate
 AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
AuthenticateWithContext
BEGIN [%lld]: AuthenticateWithContext  AuthenticationType=%{public,signpost.telemetry:number1,name=AuthenticationType}d  ProxiedBundleID=%{public,signpost.telemetry:string1,name=ProxiedBundleID}@  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number2,name=Error}d 
END [%lld] %fs:AuthenticateWithContext  Error=%{public,signpost.telemetry:number2,name=Error}d 
Request with %@
Remote authentication service returned an error: %{public}@
Interactive authentication requested by background daemon, client error, AKAppleIDAuthenticationTypeSilentPreferred should be used
Interactive authentication requested by UI context, please investigate why silent auth could not be used
Remote authentication service came back with: %@
authkit/set-in-use
Remote authentication service returned an error: %@
Calling out to remote auth service for altDSID %@, service %@, inUse %@.
Result of remote call: %@. Error: %@.
Calling out to remote auth service for DSID %@, service %@, inUse %@.
authkit/fetch-user-info
Calling out to remote auth service to fetch user information for: %@
Result of remote call: %{private}@. Error: %{public}@
authkit/fetch-user-info-typed
authkit/update-user-info
Calling out to remote auth service to update user information for: %@
Result of remote call: %{public}@. Error: %{public}@
authkit/fetch-auth-mode
Calling out to remote auth service to fetch auth mode for: %@
Result of remote call: %lu. Error: %{public}@
authkit/fetch-device-list
authkit/fetch-device-map
Calling out to remote auth service to fetch device list information for: %{public}@
Result of remote call: %@. Error: %@
authkit/fetch-app-list
Calling out to remote auth service to fetch app list information for: %@
authkit/delete-authorization-list
Calling out to remote auth service to wipe authorization database
authkit/revoke-authorization
Calling out to remote auth service to revoke authorization for clientID: %@
authkit/satori-warmup
Calling out to remote auth service to warmup verification session
WarmUp Session completed...
authkit/set-configuration-info
Calling out to remote auth service to set: %@ for identifier: %@.
authkit/fetch-configuration-info
Calling out to remote auth service to fetch configuration for identifiers: %@.
Result of remote call: %{private}@. Error: %@
authkit/check-upgrade-eligibility
HSA 2 eligibility check came back with result: %@ and error: %@
authkit/generate-login-code
Generated code: %@. Error: %@
authkit/validate-login-code
authkit/perform-circle-request
authkit/check-in
Calling remote authentication service to perform check-in for altDSID: %@
Remote call to peform check-in for account with altDSID (%@) returned
Failed to perform check-in: %@
authkit/report-sign-out
authkit/report-sign-out-all
authkit/update-state-with-response
Asking akd to update state for %@ with auth response: %@
Result of updating auth state: %@. Error: %@
Failed to get passcode state with error: %@
Failed to get active code with error: %@
authkit/fetch-load-delegate
 enableTelemetry=YES 
FetchServerLoadDelegate
BEGIN [%lld]: FetchServerLoadDelegate  enableTelemetry=YES 
END [%lld] %fs:FetchServerLoadDelegate 
Asking akd for AKAppleIDServerResourceLoadDelegate for altDSID %@
Result of getting AKAppleIDServerResourceLoadDelegate: %@. Error: %@
Asking akd for AKAppleIDServerResourceLoadDelegate for context %@
authkit/sync-follow-up-items
Synchronizing follow ups for altDSID: %@
Synchronized follow ups %@ with error %@
Failed to synchronize follow ups due to xpc error: %@
authkit/followup-teardown
Asking akd to teardown: %@
Completed teardown request; Error: %@
authkit/renew-recovery-token
Asking akd to fetch a new recovery token token with info: %@
Failed to renew recovery token: %@
authkit/verify-master-key
Asking akd to verify master key with info: %@
Failed to verify master key: %@
authkit/persist-master-key
Failed to persist master key: %@
authkit/validate-vetting-token
Asking akd to validate vetting token %@ for altDSID: %@
Vetting-token validation failed due to expired master token. Attempting to re-auth...
Unable to refresh expired master token for vetting-token validation.
Master token should be fresh now. Reattempting vetting token-validation...
Result afer reauth: Is token valid? %@. Error: %@
Result: Is token valid? %@. Error: %@
authkit/create-appleid-allowed
Error getting create Apple ID state - %@
Allow create AppleID is determined to be - %@
Failed to get account name list: %@
Account name list: %@
authkit/fetch-url-bag
Calling out to remote auth service to url bag
Finished fetching URL bag. Error: %{public}@
Synchronously calling out to remote auth service to url bag
authkit/urlbag-update
Synchronously calling out to remote auth service to force update URL Bag for altDSID: %@
Finished updating urlbag update for AltDSID: %@ with result: %d error:%@
Connection to akd was interrupted!
Connection to akd was invalidated.
authkit/clear-session-cache
Connection to session remote service '%s' returned an error: %@
%{public}@ completed with error:%@
Initializing URL cache at URL: %@
Failed to generate cache due to missing container path!
AKURLSession %p is initializing...
NSURLSession became invalid with error: %@
Calling all pending completions.
Creating new NSURLSession with default config...
Asked to begin task with either nil request %@ or completion handler %@
Creating task %{public}@ for request at URL: %@
Resuming task %{public}@ for URL %@
Cancelling task %{public}@ for request %@
The data parameter is nil!
Aggregating received data for task: %{public}@
Task %{public}@ completed! Error: %@
Error is recoverable. Checking if retry is possible.
Retrying is not available on this platform.
Request failed for task: %{public}@ error: %@
Task %{public}@ Request response not of expected class!
Task %{public}@ Request completed with HTTP status code: %@
response: %@
data: %@
Task %{public}@ Server responded with authentication error
Detected an iCloud URL request, will not perform IdMS cert validation.
Server cert validity check failed!
Adding %lu credentials to the excluded credentials list.
Converting credential to base64: %@
Invalid credential was sent: %@
Adding credential to the list: %@
Fido registration was a success
Fido registration CredentialID: %@
Attestation Data: %@
ClientData: %@
Fido authentication was a success
Fido authentication Signature: %@
Authenticator Data: %@
UserID: %@
Unable to complete the Fido interaction: %{public}@
Provided error is%{public}@ an AS user cancel error.
inheritance-authkit/fetch-dataclass-rules
Connection to remote inheritance service to %s returned an error: %@
inheritance-authkit/persist-manifest
inheritance-authkit/update-beneficiary
inheritance-authkit/remove-beneficiary
Not an Internal Build. Aborting beneficiary alias setup
inheritance-authkit/create-beneficiary-alias
Bad client! You are not supposed to provide your own implementation of AKAppleIDAuthenticationUIProvider!
Context ID %@ has already been registered for authentication!
Missing context identifier, how did we get here?
authkit/should-continue
Client has no knowledge of context ID: %@
 Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
ShouldContinueWithResults
BEGIN [%lld]: ShouldContinueWithResults  Error=%{public,signpost.telemetry:number1,name=Error}d  enableTelemetry=YES 
 ShouldContinue=%{public,signpost.telemetry:number2,name=ShouldContinue}d 
END [%lld] %fs:ShouldContinueWithResults  ShouldContinue=%{public,signpost.telemetry:number2,name=ShouldContinue}d 
Delegate says to continue? %@
Calling delegate...
No delegate available.
Error: We do not have a UI-capable context on the client side!
Error: We do not have a UI-capabable context on the client side!
%@: Presenting server provided UI for context (%@) with configuration (%@)
%@: Setting the anisette data provider (%@) on resource load delegate (%@)
Error: Context is not configured for a Fido presentation!
Asking the client context to present Fido ui.
Error: We do not have a UIProvider. Unable to launch the Fido service!
%s (%d) called
%@: Called to fetch peer attestation data for context (%@) with request (%@)
%@: Calling anisette data provider (%@) to fetch peer attestation data for request (%@)
%@: Unable to call anisette data provider (%@) to fetch peer attestation data for request (%@) because it does not respond to 'fetchPeerAttestationDataForRequest:completion:'
Server has provided an invalid context lacking an ID: %@
Error: No response data!
There was an error parsing body data! %@
The body data was not in the expected (dictionary) format!
JSON for response cannot be formed from dictionary: %@
Dictionary serialization to JSON encountered error: %@
AKDeviceListDeltaMessagePayload missing timestamp
AKDeviceListDeltaMessagePayload unable to process missing operation.
AKDeviceListDeltaMessagePayload unable to process non-string operation.
AKDeviceListDeltaMessagePayload unable to process unexpected operation.
Error converting object to json string: %@
Adding padding to the string: %{private}@
Starting retrieval of recovery info for appleId <%@ : %@>
Starting recovery using %@...
Failed to retrieve recovery info with error. %@
Recovered data for context: %@
Escrowed recovery info missing PRK
Escrowed recovery info missing MID
Building recovery response request
Recovered info %@
Failed to unwrap the icsc recovery identity token.
Unexpected recoveredValue: %@
Recovery response: %@
Recovery response body: %@
Building recovery response body
shouldSendServerResponseForRecoveredInfo: Recovery error: %@
AKAttestationSigner signatureForData: - No data, nothing to sign.
AKAttestationSigner signaturesForData: - No data, nothing to sign.
Populating results with bundle info: %@
Failed to fetch subscription info with error: %@
Connection to authorization service interrupted
Connection to authorization service invalidated
Passcode protected: %@
Unable to get Anisette data for request %@! Error: %@
Adding proxied attestation headers - %@
Unable to serialize request parameters! Error: %@
JSON Serialization exception: %@
Invalid JSON input: %@
Adding header with services: %@
Failed to attach PTN header
Failed to attach Phone Information header
Encountered incomplete Anisette data! %@
Encountered incomplete companion Anisette data! %@
Encountered incomplete Anisette data for proxied device! %@
Setting Execution mode header to CLI
Cached AuthKit configurations have changed. Clearing cache...
Nil key!
Connection to akd signer was interrupted!
Connection to akd signer was invalidated: this is fine.
authkit/absinthe-signature-for-data
Remote signing service returned an error: %@
Remote signing service successfully signed data.
authkit/signatures-for-data
%@: Generating attestation data for request (%@)
%@: Failed to generate attestation data with error (%@)
%@: Generated additional headers for attestation (%@)
No request, nothing to sign.
urlBag not present
We have additional absinthe headers %@
Failed to fetch absinthe headers, error: %@
Requesting additional Attestation for header
We have attesation headers: %@
Failed to fetch attestation headers, error: %@
Absinthe not enabled
No baaInterval
returing %lu additional headers
Absinthe data generated for proxy %@
Absinthe error %@
Unknown absinthe error
Attestation signature headers %@
Attestation error %@
Unknown attestation error
Fetching Icon for bundleID: %@
AMSMediaTask for bundleID %@ artwork resulted in error %@
AMSMediaResult: %@
Request for %@ received data of length %lu
Request for %@ failed %@
Exception caught: %@
Will not allow nil altDSID to be set!
Will not allow nil DSID to be set!
DSID *must* be an NSNumber, but we got: %@
Failed to update verified email to %@ with error %@ after observing verified primary email for account %@
Updated account %@ verified email to %@ after observing verified email followup tear down
Account %@ already updated to reflect email verified is %@.
Requested to update username to %@ for altDSID: %@
Updating username for: %@
Exception caught when fetching primary email address: %@
Exeption caught when setting primery email address: %@
Exception caught when fetching primary verified email: %@
Exception caught when setting primary verified email: %@
Exception caught when fetching phone as AppleID: %@
Exception caught when fetching underage property: %@
Exception caught when setting underage property: %@
Exception caught when fetching isSenior property: %@
Exception caught when setting isSenior property: %@
Exception caught when fetching demoAccount property: %@
Exception caught when setting demoAccount property: %@
Exception caught when fetching ageOfMajority property: %@
Exception caught when setting ageOfMajority property: %@
Exception caught when fetching Apple ID country code property: %@
Exception caught when setting Apple ID country code property %@
Exception caught when fetching authorization used: %@
Exception caught when setting authorization used: %@
Exception caught when fetching private attestation enabled: %@
Exception caught when setting private attestation enabled: %@
Exception caught when fetching reachable emails: %@
Exception caught when setting reachable emails: %@
Exception caught when fetching given name: %@
Exeption caught when setting given name: %@
Exception caught when fetching family name: %@
Exception caught when setting last name: %@
Exception caught when fetching forwarding email: %@
Exception caught when setting forwarding email: %@
Exception caught when fetching private email selected: %@
Exception caught when setting private email selection: %@
Exception caught when fetching slected email: %@
Exception caught when setting selected email: %@
Saving account %@...
Exception caught while saving account: %@
Could not save %@ due to %@
Saving of account %@ succeeed!
Last Authentication mode fetch occured %@ seconds ago
Exception caught when fetching device trust status: %@
Last Satori warmup occured %@ seconds ago
Fetching token: %@ for account %@
Nil account cannot possibly have a %@ token!
AuthKit credential is completely MIA! Account: %@. Fetch error: %@
AuthKit %@ token is missing! Account: %@. Credential: %@.
Account of service type "%@" is eligible for security upgrade.
No account is eligible for security upgrade.
Servicetype is not supported.
AuthKit account (%@) that is not an SA account is not eligible for security upgrade.
There is no matching service account for service type (%li). (%@) may be abandoned authkit account, but still on device.
Found %@ IDMS accounts for which PRK might need to be cleared.
%@: Attempting to remove continuation key for account (%@)
Attempted to remove a token for nil key
Nil credential for account %@. Odd, but no clearing is necessary.
Clearing %{public}@ for account %@...
Checking if IDMS account cleanup is necessary (%lu found)...
Removing unusued IDMS account %@...
Removing duplicate IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Failed to save account %@. Error: %@
Successfully saved account %@.
Done removing unused and duplicate IDMS accounts.
Invalid type for value of primaryAccount account property: %@. Account: %@
Invalid type for value of %@ account property: %@. Account: %@
Invalid type for value of appleIdAliases %@. Account: %@
Invalid type for altDSID %@. Account: %@
Found %@ iCloud accounts for which password cache might need to be cleared.
Found a cached raw password for %@... removing...
Exception caught when fetching isNotificationEmailAvailable property: %@
Exception caught when setting isNotificationEmailAvailable: %@
Exception caught when fetching canBeCustodian property: %@
Exception caught when setting canBeCustodian: %@
Exception caught when fetching canHaveCustodian property: %@
Exception caught when setting canHaveCustodian: %@
Exception caught when fetching custodianEnabled property: %@
Exception caught when setting custodianEnabled: %@
Exception caught when fetching custodianListVersion property: %@
Exception caught when setting custodianListVersion: %@
Exception caught when fetching custodianLastModified property: %@
Exception caught when setting custodianLastModified: %@
Exception caught when fetching beneficiary property: %@
Exception caught when setting beneficiary: %@
Exception caught when fetching canBeBeneficiary property: %@
Exception caught when setting canBeBeneficiary: %@
Exception caught when fetching canHaveBeneficiary property: %@
Exception caught when setting canHaveBeneficiary: %@
Exception caught when fetching beneficiaryListVersion property: %@
Exception caught when setting beneficiaryListVersion: %@
Exception caught when fetching hasMDMForAccount property: %@
Exception caught when setting hasMDMForAccount: %@
Exception caught when fetching fido property: %@
Exception caught when setting fido property: %@
private-email-authkit/lookup-email
PrivateEmailLocalLookup
BEGIN [%lld]: PrivateEmailLocalLookup  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailLocalLookup  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email lookup, error:%@
Connection to private email service to %s returned an error: %@
private-email-authkit/fetch-email
PrivateEmailRemoteFetch
BEGIN [%lld]: PrivateEmailRemoteFetch  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoteFetch  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email fetch, error:%@
private-email-authkit/register-email
PrivateEmailRemoteRegister
BEGIN [%lld]: PrivateEmailRemoteRegister  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoteRegister  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email fetch in background, error:%@
private-email-authkit/fetch-with-context
PrivateEmailContextFetch
BEGIN [%lld]: PrivateEmailContextFetch  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailContextFetch  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Private Email context fetch, error:%@
authkit/PrivateEmailContext
getContext completed with context: %@
getContext failed: %@
private-email-authkit/delete-db
PrivateEmailDeleteDatabase
BEGIN [%lld]: PrivateEmailDeleteDatabase  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailDeleteDatabase  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/list-version
PrivateEmailListVersion
BEGIN [%lld]: PrivateEmailListVersion  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailListVersion  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/remove-key
PrivateEmailRemoveKey
BEGIN [%lld]: PrivateEmailRemoveKey  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailRemoveKey  Error=%{public,signpost.telemetry:number2,name=Error}d 
private-email-authkit/fetch-email-list
PrivateEmailLocalFetchAll
BEGIN [%lld]: PrivateEmailLocalFetchAll  enableTelemetry=YES 
END [%lld] %fs:PrivateEmailLocalFetchAll  Error=%{public,signpost.telemetry:number2,name=Error}d 
Completed Fetch Private Email list with %lu addresses, error:%@
Overflow while attempting to compress data!
Failed to allocate buffer for compressed data!
Failed to compress data!
Base64 encoded string after replacement: %{private}@
Attempting to unregister for all Apple IDs.
Unregistering all Apple IDs failed with error: %@
Unregistering all Apple IDs succeeded!
Current process is requesting signing synchronously, this is an error, please do not do this!
Grabbing signing headers from current device.
Failed to get signing headers, error: %@
Attempting to fetch peer anisette
Peer anisette fetch complete
Error while fetching proxied anisette %@
Not attmepting to fetch peer anisette
Configuring peer signing headers
%@: Fetching attestation data for proxied device (%@) with request (%@)
Peer attestation completed with results: %@
Failed to fetch peer attestation data: %@
No proxied device, no peer headers to attach.
Looks like we already have attestation data, thanks!
Not sending signing headers for peer
Cannot find application name for %@, got %@
Attaching app-name %@
Could not find application name for %@
Could not determine passcode state with error %@
Attaching PRK header
Signing request as ephemeral
Attaching ICSC header
Attaching Phone Info header
Attaching PTN header
Attaching PAC header
Harvested continuation header added %@
Signing request with common headers
Signing request with service token
Signing request with ID token
Signing request with HB token
Signing request with URLSwitching UrlKey
Signing request with CR token
Signing request with basic headers
Signing request with data center identifier
Setting execution mode to CLI
Signing request with Experimental Mode opt-in header
Server delegate missing bagUrlKey, cannot determine if BAA attestation is needed
Signing request with BAA headers
Decorating with: %@
Harvested continuation headers %@
AKCircleRequestPayload: Unable to parse payload from invalid response
AKCircleRequestPayload: Processing parsed response dictionary (%@)
AKCircleRequestPayload: Unable to parse response dictionary (%@)
AKCircleRequestPayload: Unable to parse presence SID (%@) as valid UUIDv4
AKCircleRequestPayload: Unable to parse plistData (nil)
AKCircleRequestPayload: Failed to parse plist (%@) from plist data (%@) with error (%@)
Parsing CFU Item Payload: %@
Settings a custom icon for the CFU with app id: %@
Couldn't find pyaload data to post notification.
Building recovery context with info: %@
_mutableJSONRequestForURL: %@
AlertHandler called with error: %@
Authorization alert - invalid context
Authorization alert dismissed - invalid context
Authorization alert dismissed - missing apple account
Authorization alert dismissed - unverified email
Authorization alert dismissed - insufficient security level
Authorization alert dismissed - cannot find server
Authorization alert dismissed - underage account
Authorization alert dismissed - passcode setup required
Authorization alert dismissed - managed account
Showing alert (%@) failed, user notification is nil!. Error: %d
No existing IdMS account for altDSID %@
No existing IdMS account for DSID %@
No existing IdMS account for username %@
No altDSID, DSID or username passed on context, unable to find account
Cannot pull up IDMS account without immutable username or altDSID.
Invalid token string! %@
Error: Got malformed GS token data!
Value for %@ is missing/invalid!
Nil value for expected header: %@
Unable to serialized token properties! Error: %@
Not going to do anything with non-HTTP response from URL: %@ Task: %{public}@.
Trying to get new Anisette headers to retry request for URL:%@ Task: %{public}@ ...
Redirecting urlRequest from URL: %@ to alternate URL: %@
Url Switch request failed with error: %@, ignoring URL Switch
Unable to append header for request %@! Error: %@
Passing along decorated request for: %@
Using proxied Anisette data for headers to URL: %@.
Fetching paired device Anisette data for headers to URL: %@.
Unable to append header for request %@! Task %{public}@ Error: %@.
Passing along decorated request for URL: %@ Task %{public}@.
Using proxied Anisette data for headers to URL: %@ Task %{public}@.
Fetching paired device Anisette data for headers to URL: %@. Task: %{public}@.
No handling for HTTP status code %@ in response for URL %@
No instance of AKAnisetteProvisioningController to handle HTTP code %@ in response to %@ %@.
Sync status code (%d) received for URL: %@
HTTP 434 without sync data received!
Anisette sync was successful!
Anisette sync failed! Error: %@
Reprovision status code (%d) received for URL: %@
Unable to reprovision because Anisette data could not be erased! Error: %@
Erased Anisette data successfully. Time to provision!
Provisioning new Anisette data failed! Error: %@
Successfully provisioned new Anisette data.
Handling response %@ for URL %@...
URL Switching state code (%d) received for URL: %@
No Value found for URLSwitching header ignoring URL Switching request
No Value found for Response URLSwitch data header ignoring URL Switching request
No URL found for UrlKey after URLBag update, ignoring URL Switching request
URLBag failed to update with error: %@, ignoring URL Switching request
Failed to find localized string for key: %{private}@
Feature Lisbon is supported. Is Lisbon available - %@
Redirecting to AuthKitUIService, to present basic login UI with context: %@
Context data is nil: %@
Trying to launch application with Scene Delegate
Unable to launch application: %@ with the error: %@
Successfully launched process: %@
Failed to launch application: %@ with error: %@
Call completion with authentication result with presentation completion: %@
Parsing server provided Data %@
AKAuthorizationCredential Successfully created with transaction id:%@
Called -[AKCoordinatedDataBlock start] after block has already been started. Ignoring call and not starting again.
Present Authorization call forwarded to UI provider
UI provider is nil
Authorization Client that has UI provider deallocated
Sync for account: %{private}@ - %{private}@
Last follow up refresh occured %@ seconds ago
Checking for sparse follow ups
Failed to fetch items, falling back to sync
Sparse followup item detected: %@
Will synchronize followups %@
Failed to update follow up synchronization date: %@
Updating follow up synchronization for %@
No followup items found in payload.
Synchronizing local follow up state.
Deleting: %@
Failed to clear existing follow ups: %@
Clearing Notifications: %@
Inserting: %@
Unknown action, ignoring...
Detected an item without an identifier, invalid payload
Updating existing item with identifier: %@
Existing item notification was previously dismissed, ignoring incoming notification
Incoming notification was forced, keeping it!
Found incoming sparse followups: %@
Found incoming full followups: %@
Missing username, trying to fetch one via idMS account
Matching account missing, there be dragons ahead!
Using idMS account username
Cannot perform request - Missing authorization request
Cannot perform request - Current platform require passcode setup
Cannot perform request - Missing account
Cannot perform request - Missing AppleAccount
Cannot perform request - Managed Accounts Not Permitted on Shared iPad
Cannot perform request - Managed Accounts Not Permitted
Cannot perform request - FedAuth Accounts Not Permitted
Cannot perform request - Invalid age
Cannot perform request - Insufficient security level
Cannot perform request - Account not verified.
Cannot perform password request without password request.
Account name is missing.
Account name value has an invalid type: %@
Primary email address is missing, probably MAKO account.
Primary email address value has an invalid type: %@
No aliases.
Aliases array value has an invalid type: %@
No additional Info.
User given name is missing.
User given name name value has an invalid type: %@
User family name is missing.
User family name value has an invalid type: %@
Mako Account Identifier Missing
Mako Account Identifier value has an invalid type: %@
User Apple ID country code is missing.
User apple id country code value has an invalid type: %@
User vetted primary email is missing, Possibly unverified or Mako Account.
No reachable emails for account
User reachable emails value has an invalid type: %@
No Forwarding email set for this account
Forwarding email value has an invalid type: %@
Previously selected email value has an invalid type: %@
No authorized applications list version set for this account
Authorized applications list version value has an invalid type: %@
No private email list version set for this account
Private email list version value has an invalid type: %@
CanBeCustodian is missing.
CanHaveCustodian is missing.
custodianEnabled is missing.
CustodianLastModified is missing or has invalid type.
canBeBeneficiary is missing.
canHaveBeneficiary is missing.
hasMDM is missing.
Managed organization type value has an invalid type: %@
Managed organization type has an invalid value: %@
Managed organization name value has an invalid type: %@
Managed organization isNotificationEmailAvailable value has an invalid type: %@
Managed organization notificationEmail value has an invalid type: %@
%{private}s called on unsupported platform, please file a radar!
System container path is %s
Error getting system container: %llu
Caught error (%@) unserializing AKDevice data (%@)
Caught error (%@) serializing self (%@)
Failed to check circle status: %@
System reports isPasscodeSet: %@
Local auth returned error: %@
Not biometric capable
authkit/anisette-provision
ProvisionAnisette
BEGIN [%lld]: ProvisionAnisette  enableTelemetry=YES 
END [%lld] %fs:ProvisionAnisette 
Remote Anisette service returned an error: %@
Remote Anisette service successfuly provisioned.
authkit/sync-sim
Remote Anisette service successfuly resynced provisioning data.
authkit/anisette-erase
EraseAnisette
BEGIN [%lld]: EraseAnisette 
END [%lld] %fs:EraseAnisette 
Remote Anisette service successfuly erased provisioning data.
authkit/anisette-for-request
Not allowed to use Anisette data with non-HTTPS URLs.
authkit/fetch-anisette
BEGIN [%lld]: FetchAnisette 
Remote Anisette service returned Anisette data.
FetchAnisette
END [%lld] %fs:FetchAnisette 
authkit/legacy-anisette
Remote Anisette service returned legacy Anisette data.
authkit/fetch-peer-attestation-data
FetchAttestation
BEGIN [%lld]: FetchAttestation 
END [%lld] %fs:FetchAttestation 
Remote Anisette service returned Attestation data.
Remote Attestation data returned %@ - error %@
%@: Unable to call anisette data provider (%@) to fetch peer attestation data for request (%@) because it does not implement 'fetchPeerAttestationDataForRequest:completion:'
request: %@
Providing birthday info.
Providing password info.
Providing Phone number info.
Finishing up Apple ID creation flow.
Error, not attempting to collect second factor code
Prompting for second factor code
Selecting trusted numbers
No trusted number selected
Server indicates we only have one trusted number, lets use that.
Sending selected trusted number
Selected trusted number response %@
Invalid trusted number selection %@ - %@
Received response %@
Attempt to show server UI with unsupported configuration (still in the works)
(%@)
User agreed to terms and conditions
Constructed SMS postback dictionary - %@
Client passed auth context with email value in altDSID property - this is an error, do not do this.
%@ being updated by %@
Cannot update auth context with nil context
Client set raw password to a PET - this is an error, please do not do this.
self.username is nil
Will prompt for password...
Will prompt for username and password...
Determined that we should show password field for username: %@
Showing login error...
Canceling second-factor entry prompt.
Nothing to dismiss right now.
Listening for code entry notification...
No longer listening for code entry notification.
Notified that 2FA code was entered, but code is empty!
Passing 2FA code to akd.
Dropping 2FA code because we are currently holding a reply block.
Closing login code prompt.
Received notification of login code entry. Forwarding to observer %@.
Presenting %@ to %@
custodian-authkit/initiate-custodian
CustodianSetupStart
BEGIN [%lld]: CustodianSetupStart  enableTelemetry=YES 
END [%lld] %fs:CustodianSetupStart 
Initiated Custodian with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to initiate custodian for context %@
Result of remote custodian initiation call: %@. Error: %{public}@
authkit/custodian-finalize-custodian
CustodianSetupFinalize
BEGIN [%lld]: CustodianSetupFinalize  enableTelemetry=YES 
END [%lld] %fs:CustodianSetupFinalize 
Finalized Custodian setup with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to finalize custodian for context %@
Error finalizing custodianship: %{public}@
Successfully finalized custodianship.
authkit/custodian-revoke-custodian
Revoke custodian with remote custodian service returned an error: %{public}@
Calling out to remote custodian service to revoke custodian for context %@
Error revoking custodianship: %{public}@
Successfully revoked custodianship.
authkit/custodian-update-key
Update recovery key returned an error: %{public}@
Updating idMS recovery key with context %@
Error updating recovery key: %{public}@
Successfully updated recovery key with idMS.
custodian-authkit/start-custodian-recovery
CustodianRecoveryStart
BEGIN [%lld]: CustodianRecoveryStart  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryStart 
startCustodianRecoveryRequestWithContext completed with response: %@
startCustodianRecoveryRequestWithContext completed with error: %{public}@
custodian-authkit/fetch-code-config
fetchCustodianRecoveryCodeConfiguration completed with result: %@
Failed to fetch custodian recovery code configuration with error: %{public}@
custodian-authkit/custodian-recovery-circle
 RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
CustodianRecoveryMessage
BEGIN [%lld]: CustodianRecoveryMessage  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryMessage 
startCustodianRecoveryTransactionWithContext completed successfully
startCustodianRecoveryTransactionWithContext completed with error: %{public}@
XPC Connection failed or interrupted with error: %@ on call: startCustodianRecoveryTransactionWithContext
custodian-authkit/fetch-recovery-token
CustodianRecoveryToken
BEGIN [%lld]: CustodianRecoveryToken  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianRecoveryToken 
fetchCustodianRecoveryTokenWithContext completed with error: %{public}@
fetchCustodianRecoveryTokenWithContext completed with token: %@
XPC Connection failed or interrupted with error: %@ on call: fetchCustodianRecoveryTokenWithContext
custodian-authkit/fetch-wrap-rkc
CustodianDataRecoveryKey
BEGIN [%lld]: CustodianDataRecoveryKey  RecoverySessionID=%{public,signpost.telemetry:string1,name=RecoverySessionID}@  enableTelemetry=YES 
END [%lld] %fs:CustodianDataRecoveryKey 
fetchCustodianDataRecoveryKey completed with response: %@
Failed to fetch custodian data recovery key with error: %{public}@
XPC Connection failed or interrupted with error: %@ on call: fetchCustodianDataRecoveryKeyWithContext
custodian-authkit/embargo-feedback
Starting call to send embargo end notification feedback to IdMS with context: %@
sendEmbargoEndNotificationFeedback failed with error: %{public}@
sendEmbargoEndNotification completed without error for transactionID: %@
XPC Connection failed or interrupted with error: %@ on call: sendEmbargoEndNotificationFeedbackWithContext
custodian-authkit/perform-trustedContacts-sync
Starting call to perform trusted contacts data sync with IdMS: %@
Result of trusted contacts data sync call: %@. Error: %{public}@
authkit/authorize
Authorization controller performAuthorizationWithContext called
Authorization completed with authorization: %@
Authorization failed: %@
authkit/begin-authorize
AuthorizationExternalAuthBegin
BEGIN [%lld]: AuthorizationExternalAuthBegin  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthBegin  Error=%{public,signpost.telemetry:number2,name=Error}d 
Begin Authorization completed with userResponse: %@
Begin Authorization failed: %@
authkit/continue-authorize
AuthorizationExternalAuthContinue
BEGIN [%lld]: AuthorizationExternalAuthContinue  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthContinue  Error=%{public,signpost.telemetry:number2,name=Error}d 
Continue Authorization completed with authorization: %@
Continue Authorization failed: %@
authkit/cancel-authorize
AuthorizationExternalAuthCancel
BEGIN [%lld]: AuthorizationExternalAuthCancel  enableTelemetry=YES 
END [%lld] %fs:AuthorizationExternalAuthCancel  Error=%{public,signpost.telemetry:number2,name=Error}d 
Cancel Authorization failed: %@
Cancel Authorization completed successfully
authkit/revokeUpgrade
Revoke completed successfully
Revoke failed: %@
authkit/credentialState
Credential State request returned with error: %@
Credential State returned with state: %@
authkit/credentialStateForClientID
authkit/presentationContext
getPresentationContext completed with presentation context: %@
authkit/performRequestWithSelection
performAuthorizationWithContext completed with presentation context: %@
%@: Authorization failed: %@
Attempting proxy auth with context: %@
Failed to fetch authorized URLs with XPC error: %@
Failed to fetch authorized URLs with error: %@
Failed to fetch apple owned domains with XPC error: %@
Failed to fetch apple owned domains with error: %@
fetchAppleIDAuthorizeHTMLResponseTemplate completed with result.
Failed to fetch authorization HTML response template with error: %@
continueFetchingIconWithCompletion completed with result.
Failed to continue fetching icon with error: %@
authkit/fetch-primary-bundleid
Calling out to remote auth service to fetch primary bundle ID for service: %@
authkit/store-proxied-authorization
Store proxied authorization completed
Store proxied authorization failed: %@
No URL for Apple ID Authorization
Authorization controller should process URL
Established connection between notification center endpoint and daemon service.
Failed to establish connection between notification center endpoint and daemon service with error: %@
Established connection between state broadcast handler endpoint and daemon service.
Failed to establish connection between state broadcast handler endpoint and daemon service with error: %@
AKPrivateEmailValidator
AKAuthorizationRevokeUpgradeContext
NSCopying
NSSecureCoding
NSCoding
AKCarouselAlertProviderServiceInterface
NSObject
AKCarouselAlertClientConnection
AKAuthorizationCredentialStateRequest
AKLAContextValidator
AKFLFollowUpController
AKCustodianDaemonProtocol
AKCustodianDaemonInterface
AKExtensionItem
AKAuthorizationUpgradeContext
AKAdaptiveService
NSXPCListenerDelegate
_AKMessageForwarder
AKAdaptiveServiceInterface
AKAdaptiveServiceShouldHandle
AKAppleIDAuthenticationController
AKAuthenticationController
AKCustodianSetupResult
AKURLDataTask
AKURLSession
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKFidoAuthorizationController
ASAuthorizationControllerDelegate
AKConsentedApplication
AKInheritanceAccessKey
AKAuthorizationStateBroadcastHandler
AKAuthorizationStateBroadcastHandlerInterface
AKAuthorizationTVServicePresenter
AKAttestationData
AKInheritanceInterface
AKInheritanceController
AAFXPCSessionDelegate
AKAppleIDAuthenticationLimitedUIProvider
AKAppleIDServerAuthenticationUIProvider
AKAppleIDAuthenticationUIProvider
AKAppleIDAuthenticationContextManager
AKAppleIDAuthenticationClientProtocol
AKAnisetteProvisioningClientProtocol
AuthKit
AKDeviceListDeltaMessagePayload
AKCustodianContext
AKAuthenticationContext
AKAuthorizationUserResponse
AKNativeAccountRecoveryController
CDPAuthProvider
AKAttestationSigner
AKFollowUpTearDownContext
AKAuthorizationPresenterHostProtocol
AKAuthorizationPresenterHostInterface
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKFollowUpProviderFactory
AKCustodianDaemonConnection
AKCredentialRequestContext
AKAppleIDAuthenticationClientInterface
AKAuthorizationScopesUserSelection
AKConfiguration
AKAppleIDSigningController
Convenience
AKInheritanceContext
AKDeviceListRequestContext
CGSize
AKMediaServicesController
AKAuthorizationDaemonProtocol
AKAuthorizationDaemonInterface
AKCertificatePinning
AKAccountManager
AKPrivateEmailDaemonProtocol
AKPrivateEmailClientProtocol
AKPrivateEmailController
AKAppleIDSigningDaemonProtocol
AKAppleIDSigningDaemonInterface
AKAuthorizationLoginChoice
AKLoginPresenterHostInterfaceProtocol
AKLoginPresenterHostInterface
AKBeneficiaryManifest
AKAppleIDServerResourceLoadDelegate
AKPrivateEmailPresenterHostProtocol
AKPrivateEmailPresenterHostInterface
AKDeveloperTeam
AKCircleRequestPayload
AKPrivateEmailDaemonInterface
AKPrivateEmailContext
AKURLBag
AKFollowUpFactoryImpl
AKFollowUpItemFactory
AKAccountRecoveryContext
AKAuthorizationNotificationHandler
AKAuthorizationNotificationHandlerInterface
AKCommandLineUtilities
AKFidoAuthenticationResponse
AKFidoResponse
AKAlertHandler
AKInheritanceCLIContext
Accounts
AKGrandSlamResponseHandler
AKToken
AKMasterToken
AKAppleIDSession
NSURLSessionAppleIDContext
AKAnisetteData
AKFeatureManager
AKFuture
AKAnisetteProvisioningClientInterface
AKLoginPresenter
AKAuthorizationCredential
AKCredential
AKApplicationMetadataInfo
AKFollowUpController
AKFollowUpProvider
AKTrustedPhoneNumber
AKFollowUpServerPayloadFormatter
AKAuthorization
AKIconContext
AKAbsintheSigner
AKCoordinatedDataBlock
AKCDPFactory
AKPasswordRequest
AKCircleRequestContext
AKTrustedContact
AKUsernameFormatter
AKFidoContext
AKAuthorizationClientImpl
AKAuthorizationClientProtocol
AKAnisetteProvisioningAndSigningDeamonInterface
AKAnisetteProvisioningDaemonProtocol
AKAnisetteProvisioningDaemonInterface
AKFollowUpSynchronizer
AKAppleIDAuthenticationDelegate
AKAuthorizationPresentationContext
AKNetworkObserver
AKServerRequestConfiguration
AKBaseFollowupManager
AKTrustedContactsSyncResult
AKAuthorizationAppSignInDiscovery
AKPasswordCredential
AKAuthorizationRequest
AKAuthHandlerImpl
AKAuthHandler
AKAuthorizationDaemonConnection
AKFidoRegistrationResponse
AKAuthorizationValidator
AKCredentialRequest
AKCredentialRequestProtocol
AKAuthorizationNotificationService
AKUserInformation
AKDevice
AKUtilities
AKAnisetteProvisioningController
_AKAnisetteProviderProxy
AKLoginCodeNotificationBuilder
AKAppleIDAuthenticationCommandLineContext
AKBeneficiaryAliasSetupResult
AKAppleIDAuthenticationSurrogateUIProvider
AKAppleIDAuthenticationContext
SecondFactorSupport
LocationNotificationSupport
AKAuthorizationContext
AKAppleIDAuthenticationDaemonProtocol
AKAppleIDAuthenticationDaemonInterface
AKPrivateEmailClientImpl
AKPrivateEmailClientInterface
AKAutoBugCapture
AKProxiedClientContext
AKPrivateEmail
AKCustodianController
AKRemoteDevice
AKAuthorizationClientInterface
AKBundleInformation
AKAuthorizationController
dataWithBytes:length:
encodeBool:forKey:
setGroupIdentifier:
setPasswordEquivToken:
setByAddingObject:
isEqualToString:
token
setByAddingObjectsFromArray:
setGuestMode:
longLongValue
initWithName:value:
encodeDouble:forKey:
dataWithBytesNoCopy:length:freeWhenDone:
arrayByAddingObjectsFromArray:
componentsWithURL:resolvingAgainstBaseURL:
setPath:
dataWithJSONObject:options:error:
valueForHTTPHeaderField:
isICDPEnabledForDSID:
setHTTPBody:
removeAllObjects
passcodeViewOM
encodeInteger:forKey:
standardUserDefaults
arrayWithCapacity:
bundleForClass:
initWithPresentingViewController:
arrayWithObjects:count:
initWithAlgorithm:
setHTTPMethod:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
dataWithPropertyList:format:options:error:
encodeObject:forKey:
primaryAlert
lowercaseString
serverProvidedData
valueForKey:
date
artworkDictionary
serverTrust
initWithQueue:
valueWithNonretainedObject:
mainBundle
setPresentationContextProvider:
firstObject
removeObject:
endpoint
initWithRelyingPartyIdentifier:
dateFromString:
removeObjectForKey:
dateWithTimeIntervalSince1970:
initWithRemoteServiceConfig:delegate:
enumerateKeysAndObjectsUsingBlock:
bundleWithIdentifier:
initWithAuthenticationResults:
serviceTokens
setClasses:forSelector:argumentIndex:ofReply:
containsObject:
path
enumerateObjectsUsingBlock:
bytes
isPasscodeSet
dateWithTimeIntervalSinceNow:
containsString:
attributes
setIdmsMasterKeyRecovery:
statusCode
initWithServiceName:remoteProtocol:exportedProtocol:options:
setClearAction:
uiObjectModel
serviceWithDefaultShellEndpoint
message
decodeBoolForKey:
setIdmsRecovery:
canEvaluatePolicy:error:
initWithAuthorizationRequests:
initWithServiceName:remoteProtocol:options:
eraseAnisetteWithCompletion:
perform
versionOfAcceptedAgreement
methodSignatureForSelector:
unarchivedObjectOfClass:fromData:error:
decodeDoubleForKey:
initWithBase64EncodedString:options:
contextForStateRepair
canOpenApplication:reason:
setIncludedResultKeys:
sessionWithConfiguration:delegate:delegateQueue:
initWithString:
underlyingErrors
wait
mutableCopy
decodeIntegerForKey:
setInformativeText:
frequency
waitUntilDate:
propertyListWithData:options:format:error:
error
string
initWithBundleIdentifier:allowPlaceholder:error:
cancel
setProxiedAssociatedDomains:
stringByAddingPercentEncodingWithAllowedCharacters:
decodeObjectForKey:
initWithType:clientIdentifier:clientVersion:bag:
protectionSpace
decodeObjectOfClass:forKey:
initWithCString:encoding:
errorWithDomain:code:userInfo:
_endpoint
allHTTPHeaderFields
stringByAppendingPathComponent:
decodeObjectOfClasses:forKey:
initWithCapacity:
initWithURL:
uniqueIdentifier
requestWithURL:
performRecovery:
setAccountProperty:forKey:
unlock
provisionAnisetteWithCompletion:
setCredentialItem:forKey:
allHeaderFields
stringByAppendingString:
setTarget:
performRequests
setProxiedIconData:
stringByReplacingOccurrencesOfString:withString:
caseInsensitiveCompare:
initWithUUIDString:
setCredentialParameters:
setActions:
allKeys
navTitle
isValidJSONObject:
getCurrentDataSubscriptionContextSync:
HTMLHeader
evaluatePolicy:options:error:
setProxiedIconScale:
copy
setActivateAction:
getMobileSubscriberHomeCountryList:error:
stringByReplacingOccurrencesOfString:withString:options:range:
allObjects
defaultSessionConfiguration
evaluateWithObject:
unsignedIntValue
setTimeStyle:
stringFromDate:
correspondingApplicationRecord
resourceURL
allPages
setProxySheetHeaderOverride:
setAdditionalPlatforms:
allValues
count
abbreviation
initWithClientIdentifier:
response
exceptionWithName:reason:userInfo:
unsignedIntegerValue
authenticationMethod
cdp_isCDPErrorWithCode:
setProxySheetSubtitleOverride:
defaultWorkspace
itemName
allocWithZone:
setTimeoutIntervalForResource:
countByEnumeratingWithState:objects:count:
setTimeZone:
initWithXML:baseURL:delegate:
responseDataItems
notification
setLabel:
stringWithFormat:
unsignedLongLongValue
setAllowedCredentials:
absoluteString
getSubscriptionInfoWithError:
setProxySheetTitleOverride:
setQueryItems:
countryCode
stringWithUTF8String:
setDateFormat:
initWithCredentialID:transports:
getUUIDBytes:
characterAtIndex:
subscriptions
piggybackingAcceptorSupportsPresence
absoluteURLWithString:
failWithError:
getUserDefaultVoiceSubscriptionContext:
intValue
setDateStyle:
keyEnumerator
setURL:
numberWithBool:
integerValue
subscriptionsInUse
piggybackingIDMSFallbackApproved
setURLCache:
createCredentialAssertionRequestWithChallenge:
initWithData:encoding:
query
label
interfaceWithProtocol:
substringFromIndex:
raise:format:
createCredentialRegistrationRequestWithChallenge:displayName:name:userID:
piggybackingPresenceMode
getValue:size:
numberWithDouble:
accountPropertyForKey:
substringToIndex:
setAppleID:
autoupdatingCurrentLocale
setUnderlyingQueue:
rawAttestationObject
initWithData:options:documentAttributes:error:
piggybackingRequestorPresenceSID
creationDate
setDisplayStyle:
baaSignatureForData:completion:
numberWithInt:
rawAuthenticatorData
piggybackingRequestorUsesPresence
setDsid:
accountTypeWithAccountTypeIdentifier:error:
clearNotificationForItem:error:
initWithExternalizedContext:
numberWithInteger:
dictionary
baaSignaturesForData:completion:
lastObject
setRemoteObjectInterface:
HTTPBody
syncAnisetteWithSIMData:completion:
rawClientDataJSON
hasPrefix:
credentialForAccount:error:
numberWithLongLong:
setUniqueIdentifier:
port
saveAccount:withCompletionHandler:
invalidate
clearPendingFollowUpItems:
anonymousListener
credentialForAccount:serviceID:
dictionaryWithDictionary:
accountsWithAccountType:
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
JSONObjectWithData:options:error:
initWithFormat:
saveVerifiedAccount:error:
hasSuffix:
setUserInfo:
setExcludedCredentials:
postFollowUpItem:error:
uppercaseString
setMaxConcurrentOperationCount:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
bagForProfile:profileVersion:
accountsWithAccountType:options:error:
initWithFormat:arguments:
predicateWithFormat:
numberWithUnsignedLongLong:
setExportedInterface:
length
scheme
setArgument:atIndex:
invocationWithMethodSignature:
credentialItemForKey:
objCType
setRequestCachePolicy:
setAttestationPreference:
setExportedObject:
host
setValue:forHTTPHeaderField:
invoke
secondsFromGMT
bagSubProfile
urlBagFromCache:altDSID:error:
actions
objectAtIndexedSubscript:
objectForKey:
bagSubProfileVersion
setNotification:
initWithInfo:responder:
URLByAppendingPathComponent:
currentConnection
localTimeZone
objectForKeyedSubscript:
base64EncodedStringWithOptions:
URLQueryAllowedCharacterSet
code
setResidentKeyPreference:
setWaitsForConnectivity:
appendData:
userInfo
addEntriesFromDictionary:
URLWithSize:cropStyle:format:
taskIdentifier
setAuthProvider:
addFinishBlock:
appendFormat:
setWithArray:
setFirstNotificationDelay:
URLWithString:
signal
setWithObjects:
appleID
setObject:atIndexedSubscript:
localeIdentifier
openApplication:withOptions:completion:
setObject:forKey:
UTF8String
iTunesMetadata
compare:
displayStyle
addObject:
openSensitiveURL:withOptions:
currentLocale
domain
setObject:forKeyedSubscript:
UUID
options
localizedDescription
set_appleIDContext:
idmsMasterKeyRecovery
localizedFailureReason
doubleValue
UUIDString
optionsWithDictionary:
setObject:forSetting:
setFrequency:
compare:options:range:
componentsJoinedByString:
timeIntervalSinceDate:
initWithLocaleIdentifier:
dataTaskWithRequest:
indexOfObjectPassingTest:
localizedName
applicationProxyForIdentifier:
dsid
initWithMachServiceName:options:
boolValue
setBundleIdentifiers:
remoteServiceProxyWithErrorHandler:
archivedDataWithRootObject:requiringSecureCoding:error:
componentsSeparatedByString:
dataUsingEncoding:
setOptions:
setSelector:
localizedStringForKey:value:table:
timeZoneForSecondsFromGMT:
isEqualToData:
originalRequest
infoDictionary
lock
array
removeAccount:withCompletionHandler:
componentsWithString:
initWithMemoryCapacity:diskCapacity:directoryURL:
canPerformRequestWithAccount:error:
init
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
transactionID
setTransactionID:
bundleID
setBundleID:
teamID
setTeamID:
.cxx_destruct
_transactionID
_bundleID
_teamID
T@"NSString",C,N,V_transactionID
T@"NSString",C,N,V_bundleID
T@"NSString",C,N,V_teamID
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
presentAlertWithDictionary:completion:
dismissAlert:
sharedConnection
unsafe_invalidate
connection
internalQueue
setInternalQueue:
xpcConnection
setXpcConnection:
_internalQueue
_xpcConnection
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
T@"NSXPCConnection",&,N,V_xpcConnection
userID
setUserID:
clientID
setClientID:
altDSID
setAltDSID:
shouldIgnoreUserID
setShouldIgnoreUserID:
shouldIgnoreTeamID
setShouldIgnoreTeamID:
_shouldIgnoreUserID
_shouldIgnoreTeamID
_userID
_clientID
_altDSID
T@"NSString",C,N,V_clientID
T@"NSString",C,N,V_altDSID
TB,N,V_shouldIgnoreUserID
TB,N,V_shouldIgnoreTeamID
T@"NSString",C,N,V_userID
validateExternalizedContext:error:
sharedInstance
initiateCustodianSetupWithContext:completion:
finalizeCustodianSetupWithContext:completion:
revokeCustodianWithContext:completion:
updateCustodianRecoveryKeyWithContext:completion:
startCustodianRecoveryRequestWithContext:completion:
fetchCustodianRecoveryCodeConfigurationWithCompletion:
startCustodianRecoveryTransactionWithContext:completion:
fetchCustodianRecoveryTokenWithContext:completion:
fetchCustodianDataRecoveryKeyWithContext:completion:
sendEmbargoEndNotificationFeedbackWithContext:urlKey:completion:
performTrustedContactsDataSync:completion:
XPCInterface
ak_setContext:
ak_context
extensionItemWithAppleIDAuthenticationContext:
T@"AKAppleIDAuthenticationContext",&,D,N,Sak_setContext:
appName
setAppName:
appID
setAppID:
serviceID
setServiceID:
nonce
setNonce:
state
setState:
_appName
_appID
_serviceID
_nonce
_state
T@"NSString",C,N,V_appName
T@"NSString",C,N,V_appID
T@"NSString",C,N,V_serviceID
T@"NSString",C,N,V_nonce
T@"NSString",C,N,V_state
listener:shouldAcceptNewConnection:
_initWithInterface:object:
initWithInterface:strongObject:
initWithInterface:weakObject:
resume
listenerEndpoint
interruptionHandler
setInterruptionHandler:
invalidationHandler
setInvalidationHandler:
_exportedInterface
_exportedObject
_listener
_interruptionHandler
_invalidationHandler
T@?,C,N,V_interruptionHandler
T@?,C,N,V_invalidationHandler
activate
initWithReceiver:strong:
initWithWeakReceiver:
initWithStrongReceiver:
forwardingTargetForSelector:
_weakReceiver
_strongReceiver
shouldHandleInvalidation
setShouldHandleInvalidation:
TB,N
sensitiveAuthenticationKeys
sensitiveTokenKeys
tokenDictionaryKeys
authenticateWithContext:completion:
T@"NSSet",R,N
initWithIdentifier:
initWithDaemonXPCEndpoint:
initWithIdentifier:daemonXPCEndpoint:
delegate
setDelegate:
setAppleIDWithAltDSID:inUse:forService:
setAppleIDWithDSID:inUse:forService:
fetchUserInformationForAltDSID:completion:
getUserInformationForAltDSID:completion:
updateUserInformationForAltDSID:userInformation:completion:
fetchAuthModeWithContext:completion:
fetchDeviceListWithContext:completion:
fetchDeviceMapWithContext:completion:
fetchDeviceListWithContext:error:
fetchAuthorizedAppListWithContext:error:
deleteAuthorizationDatabase:
revokeAuthorizationForApplicationWithClientID:error:
warmUpVerificationSessionWithCompletion:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
configurationInfoWithIdentifiers:forAltDSID:completion:
checkSecurityUpgradeEligibilityForContext:completion:
generateLoginCodeWithCompletion:
validateLoginCode:forAppleID:completion:
performCircleRequestWithContext:completion:
performCheckInForAccountWithAltDSID:completion:
reportSignOutForAppleID:service:completion:
reportSignOutForAllAppleIDsWithCompletion:
updateStateWithExternalAuthenticationResponse:forContext:completion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
isDevicePasscodeProtected:
activeLoginCode:
getServerUILoadDelegateForAltDSID:completion:
getServerUILoadDelegateWithContext:completion:
synchronizeFollowUpItemsForContext:error:
synchronizeFollowUpItemsForContext:completion:
teardownFollowUpWithContext:completion:
renewRecoveryTokenWithContext:completion:
verifyMasterKey:context:completion:
persistMasterKeyVerifier:context:completion:
validateVettingToken:forAltDSID:completion:
isCreateAppleIDAllowedWithCompletion:
accountNamesForAltDSID:
fetchURLBagForAltDSID:completion:
_urlBagFromCache:altDSID:withError:
forceURLBagUpdateForAltDSID:urlSwitchData:completion:
_authenticationServiceConnection
clearSessionCacheWithCompletion:
deallocHandler
setDeallocHandler:
_daemonXPCEndpoint
_contextManager
_connectionLock
_deallocHandler
T@?,C,N,V_deallocHandler
T@"<AKAppleIDAuthenticationDelegate>",W,N
encryptedPRKC
setEncryptedPRKC:
ownerCustodianAltDSID
setOwnerCustodianAltDSID:
_encryptedPRKC
_ownerCustodianAltDSID
T@"NSData",C,N,V_encryptedPRKC
T@"NSString",C,N,V_ownerCustodianAltDSID
_completeWithError:
request
setRequest:
retryCount
setRetryCount:
underlyingTask
setUnderlyingTask:
completionHandler
setCompletionHandler:
receivedData
setReceivedData:
lastRetryError
setLastRetryError:
canceledOrCompleted
setCanceledOrCompleted:
_canceledOrCompleted
_request
_retryCount
_underlyingTask
_completionHandler
_receivedData
_lastRetryError
T@"NSURLRequest",&,N,V_request
TQ,N,V_retryCount
T@"NSURLSessionDataTask",&,N,V_underlyingTask
T@?,C,N,V_completionHandler
T@"NSMutableData",&,N,V_receivedData
T@"NSError",&,N,V_lastRetryError
TB,N,V_canceledOrCompleted
_createURLSessionUsesAppleIDContext:
sharedURLSession
sharedAnisetteFreeURLSession
sharedCacheEnabledURLSession
sharedCacheEnabledAnisetteFreeSession
sharedCacheReliantAnisetteFreeSession
_urlBagCache
removeAllCachedResponses
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_URLSession
defaultSessionObjectWithConfiguration:
beginDataTaskWithRequest:completionHandler:
cancelDataTask:
_unsafe_completeTask:withError:
isRecoverableError:
_unsafe_retryTaskIfPossible:
beginAuthenticationDataTaskWithRequest:completionHandler:
_usesAppleIDContext
set_usesAppleIDContext:
_urlSession
_sessionQueue
_tasksByIdentifier
__usesAppleIDContext
TB,N,V__usesAppleIDContext
presentationAnchorForAuthorizationController:
isFidoUserCancelError:
authorizationController:didCompleteWithAuthorization:
authorizationController:didCompleteWithError:
authorizationController:didCompleteWithCustomMethod:
performRegistrationRequestWithContext:completion:
performAuthenticationRequestWithContext:completion:
_startAuthControllerWithRequest:context:
_requestFromContext:
_authRequestFromContext:
_populateCustomStringsFromContext:
uiProvider
setUiProvider:
registrationCompletion
setRegistrationCompletion:
authCompletion
setAuthCompletion:
_authController
set_authController:
context
setContext:
_uiProvider
_registrationCompletion
_authCompletion
__authController
_context
T@?,C,N,V_registrationCompletion
T@?,C,N,V_authCompletion
T@"ASAuthorizationController",&,N,V__authController
T@"AKFidoContext",&,N,V_context
T@"<AKFidoUIProvider>",&,N,V_uiProvider
initWithResponseInfo:
scopes
setScopes:
transferState
setTransferState:
origin
setOrigin:
primaryClientID
setPrimaryClientID:
_scopes
_transferState
_origin
_primaryClientID
T@"NSArray",C,N,V_scopes
Tq,N,V_state
T@"NSString",&,N,V_transferState
T@"NSString",&,N,V_primaryClientID
T@"NSString",&,N,V_origin
initWithBeneficiairyIdentifier:
beneficiaryID
wrappingKeyData
setWrappingKeyData:
wrappingKeyString
setWrappingKeyString:
wrappedKeyData
setWrappedKeyData:
wrappedKeyString
setWrappedKeyString:
claimTokenData
setClaimTokenData:
claimTokenString
setClaimTokenString:
_beneficiaryID
_wrappingKeyData
_wrappingKeyString
_wrappedKeyData
_wrappedKeyString
_claimTokenData
_claimTokenString
T@"NSUUID",R,N,V_beneficiaryID
T@"NSData",&,N,V_wrappingKeyData
T@"NSString",&,N,V_wrappingKeyString
T@"NSData",&,N,V_wrappedKeyData
T@"NSString",&,N,V_wrappedKeyString
T@"NSData",&,N,V_claimTokenData
T@"NSString",&,N,V_claimTokenString
credentialStateDidChange:forApplicationWithClientID:
typeOfMessage:
buildDidTapNotificationMessage
buildDidStartServerAuthorizationMessage
buildFetchAppIconMessage
buildFetchAppIconReplyWithImageData:imageScale:
_typeFromString:
_stringForType:
_filterDeprecatedType:
initWithDictionary:
attestationHeaders
setAttestationHeaders:
_attestationHeaders
T@"NSDictionary",C,N,V_attestationHeaders
fetchManifestOptionsWithInheritanceContext:completion:
setupBeneficiaryWithInheritanceContext:completion:
updateBeneficiaryWithInheritanceContext:completion:
removeBeneficiaryWithInheritanceContext:completion:
_setupBeneficiaryAliasWithInheritanceContext:completion:
configureRemoteInterface:
configureExportedInterface:
exportedObject
remoteServiceDidInterrupt
remoteServiceDidInvalidate
initWithXPCSession:
remoteService
setRemoteService:
_remoteService
T@"AAFXPCSession",&,N,V_remoteService
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:
authenticationController:shouldContinueWithAuthenticationResults:error:forContext:completion:
presentKeepUsingUIForAppleID:completion:
dismissKeepUsingUIWithCompletion:
presentBasicLoginUIWithCompletion:
dismissBasicLoginUIWithCompletion:
presentLoginAlertWithError:title:message:completion:
presentSecondFactorUIWithCompletion:
dismissSecondFactorUIWithCompletion:
presentSecondFactorAlertWithError:title:message:completion:
presentBiometricOrPasscodeValidationForAppleID:completion:
presentServerProvidedUIWithConfiguration:completion:
dismissServerProvidedUIWithCompletion:
presentNativeRecoveryUIWithContext:completion:
dismissNativeRecoveryUIWithCompletion:
presentFidoAuthForContext:fidoContext:completion:
fetchPeerAttestationDataForRequest:completion:
provisionAnisetteForContext:withCompletion:
syncAnisetteForContext:withSIMData:completion:
eraseAnisetteForContext:withCompletion:
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
legacyAnisetteDataForContext:DSID:withCompletion:
fetchPeerAttestationDataForContext:withRequest:completion:
presentKeepUsingUIForContext:appleID:completion:
dismissKeepUsingUIForContext:withCompletion:
presentBasicLoginUIForContext:completion:
dismissBasicLoginUIForContext:completion:
presentLoginAlertForContext:withError:title:message:completion:
presentSecondFactorUIForContext:completion:
dismissSecondFactorUIForContext:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentServerProvidedUIForContext:withConfiguration:completion:
dismissServerProvidedUIForContext:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
dismissNativeRecoveryUIForContext:completion:
presentBiometricOrPasscodeValidationForContext:completion:
launchOutOfProcessAuthentication:surrogateID:withErrorHandler:
shouldContinueWithAuthenticationResults:error:forContextID:completion:
initWithAuthenticationController:
registerContext:
unregisterContext:
_clientSideContextForServerContext:
_authContextsByUUID
_authContextsQueue
_delegate
T@"<AKAppleIDAuthenticationDelegate>",W,N,V_delegate
_ak_shortenServiceIdentifier:
_ak_truncateTokenString:
_ak_truncateTokenDict:
ak_redactedCopy
ak_mapObjects:
ak_mapObjectsNullable:
ak_urlQueryString
ak_toJSONString
ak_dictionaryWithResponseData:
ak_jsonDictionaryWithResponseData:
initWithResponseBody:
_convertOperationToEnum:
operation
machineID
machineIDs
serialNumber
timestamp
_operation
_machineID
_machineIDs
_serialNumber
_timestamp
T@"NSString",R,C,N,V_altDSID
TQ,R,N,V_operation
T@"NSString",R,C,N,V_machineID
T@"NSArray",R,C,N,V_machineIDs
T@"NSString",R,C,N,V_serialNumber
T@"NSDate",R,C,N,V_timestamp
serviceType
setServiceType:
authenticationType
setAuthenticationType:
authenticationMode
setAuthenticationMode:
_proxiedAppName
_setProxiedAppName:
appProvidedData
setAppProvidedData:
appProvidedContext
setAppProvidedContext:
proxiedDevice
setProxiedDevice:
companionDevice
setCompanionDevice:
cliMode
setCliMode:
T@"NSString",C,N
Tq,N
TQ,N
T@"NSString",C,N,S_setProxiedAppName:
T@"NSDictionary",C,N
T@"AKDevice",C,N
_identityToken
_setIdentityToken:
_heartbeatToken
_setHeartbeatToken:
_cliMode
set_cliMode:
ownerAppleID
setOwnerAppleID:
custodianUUID
setCustodianUUID:
wrappingKeyRKC
setWrappingKeyRKC:
custodianSetupToken
setCustodianSetupToken:
pushToken
setPushToken:
recoverySessionID
setRecoverySessionID:
custodianRecoveryToken
setCustodianRecoveryToken:
aaData
setAaData:
idmsData
setIdmsData:
recoveryStep
setRecoveryStep:
ownerDevice
setOwnerDevice:
clientErrorCode
setClientErrorCode:
notificationAction
setNotificationAction:
custodianUUIDs
setCustodianUUIDs:
beneficiaryUUIDs
setBeneficiaryUUIDs:
lastDataSyncTimestamp
setLastDataSyncTimestamp:
custodianContacts
setCustodianContacts:
beneficiaryContacts
setBeneficiaryContacts:
__cliMode
_ownerDevice
_appProvidedData
_companionDevice
_proxiedDevice
_serviceType
_appProvidedContext
_authenticationMode
_authenticationType
_ownerAppleID
_custodianUUID
_wrappingKeyRKC
_custodianSetupToken
_pushToken
_recoverySessionID
_custodianRecoveryToken
_aaData
_idmsData
_recoveryStep
_clientErrorCode
_notificationAction
_custodianUUIDs
_beneficiaryUUIDs
_lastDataSyncTimestamp
_custodianContacts
_beneficiaryContacts
T@"NSString",C,N,S_setIdentityToken:,V_identityToken
T@"NSString",C,N,S_setHeartbeatToken:,V_heartbeatToken
T@"NSString",C,N,V_ownerAppleID
T@"NSUUID",C,N,V_custodianUUID
T@"NSData",C,N,V_wrappingKeyRKC
T@"NSString",C,N,V_custodianSetupToken
T@"NSString",C,N,V_pushToken
T@"NSString",C,N,V_recoverySessionID
T@"NSString",C,N,V_custodianRecoveryToken
T@"NSData",C,N,V_aaData
T@"NSData",C,N,V_idmsData
T@"NSString",C,N,V_recoveryStep
TB,N,V_ownerDevice
Tq,N,V_clientErrorCode
Tq,N,V_notificationAction
TB,N,V_cliMode
T@"NSArray",C,N,V_custodianUUIDs
T@"NSArray",C,N,V_beneficiaryUUIDs
T@"NSDate",C,N,V_lastDataSyncTimestamp
T@"NSArray",C,N,V_custodianContacts
T@"NSArray",C,N,V_beneficiaryContacts
Tq,N,V_serviceType
TQ,N,V_authenticationType
TQ,N,V_authenticationMode
T@"NSString",C,N,S_setProxiedAppName:,V_proxiedAppName
T@"NSDictionary",C,N,V_appProvidedData
T@"NSString",C,N,V_appProvidedContext
T@"AKDevice",C,N,V_proxiedDevice
T@"AKDevice",C,N,V_companionDevice
TB,N,V__cliMode
selectedRequest
setSelectedRequest:
userSelection
setUserSelection:
loginChoice
setLoginChoice:
rawAccountPassword
setRawAccountPassword:
_selectedRequest
_userSelection
_loginChoice
_rawAccountPassword
T@"<AKCredentialRequestProtocol>",&,N,V_selectedRequest
T@"AKAuthorizationScopesUserSelection",&,N,V_userSelection
T@"NSNumber",&,N,V_loginChoice
T@"NSString",C,N,V_rawAccountPassword
ak_SHA256
ak_SHA256String
ak_urlEncoded
ak_truncatedCopy
ak_stringByZeroPaddingOccurencesOfString:
ak_safeBase64String
ak_isEmailAddress
ak_base64EncodedJsonFromObject:
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
postBodyForiCSCServerUIResponseWithContext:recoveryError:
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:verifyMasterKey:completion:
initWithContext:uiProvider:
presentNativeRecoveryUIWithCompletion:
_mapICSCRecoveryResultsToAuthKit:
_recoveryController
_recoveryContext
_cdpUiProvider
sharedSigner
T@"AKAttestationSigner",R,N
signatureForData:options:completion:
signaturesForData:options:completion:
_baaSignaturesForData:completion:
_baaSignatureForData:completion:
itemIdentifier
setItemIdentifier:
akAction
setAkAction:
txnid
setTxnid:
isContinuityPush
setIsContinuityPush:
_isContinuityPush
_itemIdentifier
_akAction
_txnid
T@"NSString",C,N,V_itemIdentifier
T@"NSString",C,N,V_akAction
T@"NSString",C,N,V_txnid
T@"NSString",C,N,V_idmsData
TB,N,V_isContinuityPush
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationRequestFinishedWithAuthorization:error:completion:
continueFetchingIconWithCompletion:
phoneCertificate
setPhoneCertificate:
slotID
setSlotID:
_phoneCertificate
_slotID
T@"NSString",&,N,V_phoneCertificate
Tq,N,V_slotID
T@"AKCarrierBundleUtilities",R
phoneBundleInfoWithAdditionalInfo:error:
_formattedValueForPhoneNumber:countryCode:
_telephonyClient
_carrierUtilitiesQueue
sharedAuthKitFollowupProvider
initWithListenerEndpoint:
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
_connection
_connectionInterruptionHandler
_connectionInvalidationHandler
_unfairLock
_listenerEndpoint
T@"NSXPCListenerEndpoint",R,N,V_listenerEndpoint
initWithUpgradeContext:
initWithProxiedClientContext:
setCredentialRequests:
_isEligibleForUpgradeFromPassword
_proxiedClientAppName
_proxiedClientBundleID
_proxiedClientServiceID
_proxiedClientTeamID
_proxiedClientAppID
credentialRequests
_requirePassword
set_requirePassword:
_sessionID
set_sessionID:
_shouldForceUI
set_shouldForceUI:
_shouldSkipBiometrics
set_shouldSkipBiometrics:
_shouldSkipAuthorizationUI
set_shouldSkipAuthorizationUI:
_informativeText
set_informativeText:
_iconName
set_iconName:
_iconData
set_iconData:
_iconScale
set_iconScale:
_iconSize
set_iconSize:
_shouldForcePrivateEmail
set_shouldForcePrivateEmail:
set_proxiedClientAppName:
set_proxiedClientBundleID:
set_proxiedClientAppID:
set_proxiedClientTeamID:
_proxiedAssociatedDomains
set_proxiedAssociatedDomains:
_isWebLogin
set_isWebLogin:
_isFirstPartyLogin
set_isFirstPartyLogin:
_isRapportLogin
set_isRapportLogin:
_callerBundleID
set_callerBundleID:
_proxiedDeviceName
set_proxiedDeviceName:
_proxiedDeviceClass
set_proxiedDeviceClass:
set_proxiedClientServiceID:
_upgradeContext
_clientShouldAuthenticateExternally
set_clientShouldAuthenticateExternally:
_authSessionTimeoutInterval
set_authSessionTimeoutInterval:
_externalAuthToken
set_externalAuthToken:
_externalLocalAuthData
set_externalLocalAuthData:
_continuationRequestIdentifier
set_continuationRequestIdentifier:
_shouldUseProxiedClientBundleIDForSRP
set_shouldUseProxiedClientBundleIDForSRP:
requestIdentifier
requestOptions
setRequestOptions:
authorizationRequest
setAuthorizationRequest:
passwordRequest
setPasswordRequest:
_passcodeProtected
_requestIdentifier
_requestOptions
_authorizationRequest
_passwordRequest
T@"NSString",C,N,V_sessionID
TB,N,V_shouldForceUI
TB,N,V_shouldSkipBiometrics
TB,N,V_shouldSkipAuthorizationUI
TB,N,V_shouldForcePrivateEmail
TB,N,V_requirePassword
TB,N,V_isWebLogin
TB,N,V_isFirstPartyLogin
TB,N,V_isRapportLogin
TB,R,N,V_isEligibleForUpgradeFromPassword
T@"NSString",&,N,V_callerBundleID
T@"AKAuthorizationUpgradeContext",R,N,V_upgradeContext
T@"NSString",&,N,V_proxiedClientAppName
T@"NSString",&,N,V_proxiedClientBundleID
T@"NSString",&,N,V_proxiedClientServiceID
T@"NSString",&,N,V_proxiedClientTeamID
T@"NSString",&,N,V_proxiedClientAppID
T@"NSArray",&,N,V_proxiedAssociatedDomains
T@"NSString",&,N,V_proxiedDeviceName
T@"NSString",&,N,V_proxiedDeviceClass
TB,N,V_clientShouldAuthenticateExternally
TB,N,V_shouldUseProxiedClientBundleIDForSRP
T@"NSString",C,N,V_iconName
T@"NSData",C,N,V_iconData
T@"NSNumber",C,N,V_iconScale
T@"NSValue",C,N,V_iconSize
T@"NSString",C,N,V_informativeText
Td,N,V_authSessionTimeoutInterval
T@"NSString",C,N,V_externalAuthToken
T@"NSData",C,N,V_externalLocalAuthData
T@"NSString",C,N,V_continuationRequestIdentifier
T@"NSUUID",R,C,N,V_requestIdentifier
TQ,N,V_requestOptions
T@"AKAuthorizationRequest",&,N,V_authorizationRequest
T@"AKPasswordRequest",&,N,V_passwordRequest
T@"NSArray",&,N
userInformation
setUserInformation:
makePrivateEmail
setMakePrivateEmail:
_makePrivateEmail
_userInformation
T@"AKUserInformation",C,N,V_userInformation
TB,N,V_makePrivateEmail
ak_addInternalBuildHeader
ak_addFeatureMaskHeader
ak_addLocalUserUUIDHashHeader
ak_addAppleIDHeaderWithValue:
ak_addAppleIDUserModeHeaderWithValue:
ak_addDeviceUDIDHeader
ak_addProvisioningUDIDHeader
ak_addProxiedDeviceUDIDHeader:
ak_addClientInfoHeader
ak_addClientTimeHeader
ak_addCircleStatusHeader
ak_addCompanionClientInfoHeader:
ak_addProxiedClientInfoHeader:
ak_addEphemeralAuthHeader
ak_addAnisetteHeaders
ak_addProxiedAnisetteHeaders:
ak_addProxiedAttestationHeaders:
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addProxiedAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addAuthorizationHeaderWithServiceToken:forAltDSID:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addAuthorizationHeaderWithCustodianRecoveryToken:forAltDSID:
ak_addICSCRecoveryHeaderWithIdentityToken:forAltDSID:
ak_addRecoveryHeaderWithIdentityToken:forAltDSID:
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithIdentityToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithHeartbeatToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithServiceToken:forAltDSID:
ak_addGuardianAuthorizationHeaderWithIdentityToken:heartbeatToken:serviceToken:forAltDSID:
ak_addURLSwitchingHeaderWithURLKey:altDSID:
ak_addDataCenterHeaderWithIdentifier:
ak_valueForEncodedHeaderWithKey:
_setAuthorizationHeaderWithToken:altDSID:key:
ak_setBodyWithParameters:
ak_setJSONBodyWithParameters:
ak_addJSONRequestHeader
ak_addAbsintheHeaderWithValue:
ak_addLoggedInServicesHeaderForServices:
ak_addContextHeaderForServiceType:
ak_addContinutationKeyHeader:
ak_addPasswordResetKeyHeader:
ak_addCountryHeader
ak_addSKUCountryHeader
ak_addProxiedDeviceCountryHeader:
ak_addLocaleHeader
ak_addTimeZoneHeaders
ak_addPRKRequestHeader
ak_addProxiedDevicePRKRequestHeader
ak_addICSCIntentHeader
ak_addLocalUserHasAppleIDLoginHeader
ak_addDeviceROMHeader
ak_addDeviceMLBHeader
ak_addDeviceSerialNumberHeader
ak_addProxiedDeviceSerialNumberHeader:
ak_addPhoneNumberHeader
ak_addPhoneNumberCertificateHeaderWithValue:
ak_addPhoneInformationHeaderWithValue:
ak_addAcceptedSLAHeaderWithVersion:
ak_addClientApp:
ak_addProxyApp:
ak_addAppProvidedContext:
ak_addReAuthenticationHeader
ak_addOfferSecurityUpgrade:
ak_addProxiedDeviceICSCIntentHeader
ak_addShowWarranty
ak_addDeviceModel
ak_addCFUHeader:
ak_addDeviceConfigurationModeHeader
ak_addDeviceConfigurationModeHeaderForAuthContext:
ak_addRequestUUIDHeader:
ak_addExecutionModeHeader:
ak_addClientBundleIDHeader:
ak_addProxiedBundleIDHeader:
ak_addFidoRecoveryTokenHeader:
ak_addPrivateEmailDomainHeader:
ak_addPrivateEmailOriginHeader:
ak_addPrivateEmailAppBundleIdHeader:
ak_addPrivateEmailAppNameHeader:
ak_clientTimeHeader
ak_localeHeader
ak_timeZoneHeader
ak_clientInfoHeader
ak_deviceUDIDHeader
ak_anisetteHeadersWithData:
ak_anisetteHeadersWithCompanionData:
ak_proxiedHeadersForDevice:anisetteData:
ak_proxiedAnisetteHeadersWithData:
ak_proxiedClientInfoHeadersWithDevice:
sharedConfiguration
configurationValueForKey:
setConfigurationValue:forKey:
overrideForKey:
setOverride:forKey:
shouldFakeAuthSuccess
setShouldFakeAuthSuccess:
shouldDisablePiggybacking
setShouldDisablePiggybacking:
shouldSuppressHSA2Suggestions
setShouldSuppressHSA2Suggestions:
shouldAddHSA2CreateHeader
setShouldAddHSA2CreateHeader:
shouldAllowPhoneNumberAccounts
setShouldAllowPhoneNumberAccounts:
shouldAllowExperimentalMode
setShouldAllowExperimentalMode:
shouldHideInternalBuildHeader
setShouldHideInternalBuildHeader:
shouldAllowDemoMode
setShouldAllowDemoMode:
shouldAllowTestApplication
setShouldAllowTestApplication:
shouldEnableTestAccountMode
setShouldEnableTestAccountMode:
shouldSuppressModalSheetsInMacBuddy
setShouldSuppressModalSheetsInMacBuddy:
shouldAutocycleAppsInTiburon
setShouldAutocycleAppsInTiburon:
shouldAlwaysShowWelcome
setShouldAlwaysShowWelcome:
shouldAutocycleAppsInWebTakeover
setShouldAutocycleAppsInWebTakeover:
lastKnownIDMSEnvironment
setLastKnownIDMSEnvironment:
shouldRequestPiggybackingPresenceEnforcement
piggybackingIDMSPresenceOverride
setPiggybackingIDMSPresenceOverride:
piggybackingLocalPresenceOverride
setPiggybackingLocalPresenceOverride:
internalFeaturesMaskValue
shouldBypassCustodianDeviceCheck
setShouldBypassCustodianDeviceCheck:
shouldEnableBeneficiaryLiveOn
setShouldEnableBeneficiaryLiveOn:
shouldEnableSigninWithMAID
setShouldEnableSigninWithMAID:
requestedCloudPartition
_validCloudPartition:
setRequestedCloudPartition:
_cachedSettings
_notificationToken
_settingsQueue
TQ,R,N
_connectionInterrupted
_connectionInvalidated
absintheSignatureForData:completion:
attestationDataForRequest:completion:
setIsProxy:
initialURLKey
setInitialURLKey:
authenticationController
setAuthenticationController:
shouldSendAbsintheHeader
setShouldSendAbsintheHeader:
_signerLock
_signingQueue
_isProxy
_shouldSendAbsintheHeader
_initialURLKey
_authenticationController
T@"AKAppleIDAuthenticationController",&,N,V_authenticationController
TB,N,V_shouldSendAbsintheHeader
TB,N,V_isProxy
T@"NSString",&,N,V_initialURLKey
signingHeadersForRequest:completion:
signWithBAAHeaders:completion:
_additionalAbsintheHeadersForRequest:completion:
_additionalAttestationHeadersForRequest:options:completion:
initWithOwnerAltDSID:
initWithAuthenticationContext:
beneficiaryIdentifier
setBeneficiaryIdentifier:
beneficiarySetupToken
setBeneficiarySetupToken:
manifest
setManifest:
accessKey
setAccessKey:
_beneficiaryIdentifier
_beneficiarySetupToken
_manifest
_accessKey
T@"NSString",C,N,V_beneficiaryIdentifier
T@"NSString",C,N,V_beneficiarySetupToken
T@"AKBeneficiaryManifest",&,N,V_manifest
T@"AKInheritanceAccessKey",&,N,V_accessKey
TB,N,VcliMode
includeUntrustedDevices
setIncludeUntrustedDevices:
includeFamilyDevices
setIncludeFamilyDevices:
services
setServices:
operatingSystems
setOperatingSystems:
_includeUntrustedDevices
_includeFamilyDevices
_services
_operatingSystems
TB,N,V_includeUntrustedDevices
TB,N,V_includeFamilyDevices
T@"NSArray",C,N,V_services
T@"NSArray",C,N,V_operatingSystems
CGSizeValue
appIconForBundleID:size:completion:
_artworkURLFromResult:size:updatingIconContext:
performAuthorization:completion:
performAuthorizationWithContext:withUserProvidedInformation:completion:
beginAuthorizationWithContext:completion:
continueAuthorizationWithContext:completion:
cancelAuthorizationWithContext:completion:
getCredentialStateForRequest:completion:
getCredentialStateForClientID:completion:
getPresentationContextForRequestContext:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
revokeUpgradeWithContext:completion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
fetchPrimaryApplicationInformationForWebServiceWithInfo:completion:
continueFetchingIconForRequestContext:completion:
establishConnectionWithNotificationHandlerEndpoint:completion:
establishConnectionWithStateBroadcastHandlerEndpoint:completion:
startDiscoveryWithCompletion:
storeAuthorization:forProxiedRequest:completion:
isValidCertificateTrust:forHostname:
isAccountsFrameworkAvailable
stringRepresentationForService:
personaIDIfCurrentPersonaIsDataSeparated
performWithinPersonaForAccount:withBlock:
T@"AKAccountManager",R,N
altDSIDForAccount:
setAltDSID:forAccount:
DSIDForAccount:
setDSID:forAccount:
combinedAliasesAndReachableEmailsForAccount:
aliasesForAccount:
setAliases:forAccount:
formattedUsernameForAccount:
updateVerifiedEmail:forAccountWithAltDSID:
updateUsername:forAccountsWithAltDSID:
_setUsername:forAccount:
primaryEmailAddressForAccount:
setPrimaryEmailAddress:forAccount:
verifiedPrimaryEmailForAccount:
setVerifiedPrimaryEmail:forAccount:
phoneAsAppleIDForAccount:
setPhoneAsAppleID:forAccount:
userUnderAgeForAccount:
setUserUnderage:forAccount:
userIsSeniorForAccount:
setUserIsSenior:forAccount:
demoAccountForAccount:
setDemoAccount:forAccount:
ageOfMajorityForAccount:
setAgeOfMajority:forAccount:
appleIDCountryCodeForAccount:
setAppleIDCountryCode:forAccount:
authorizationUsedForAccount:
setAuthorizationUsed:forAccount:
privateAttestationEnabledForAccount:
setPrivateAttestationEnabled:forAccount:
reachableEmailAddressesForAccount:
setReachableEmailAddresses:forAccount:
givenNameForAccount:
setGivenName:forAccount:
familyNameForAccount:
setFamilyName:forAccount:
forwardingEmailForAccount:
setForwardingEmail:forAccount:
selectedPrivateEmailForAccount:
setSelectedPrivateEmail:forAccount:
selectedAuthorizationEmailForAccount:
setSelectedAuthorizationEmail:forAccount:
saveAccount:error:
securityLevelForAccount:
setSecurityLevel:forAccount:
authenticationModeForAccount:
setAuthenticationMode:forAccount:
shouldUpdateAuthModeForAccount:
updateAuthModeTimestampForAccount:
deviceTrustRevokedForAccount:
setDeviceTrustRevoked:forAccount:
shouldPerformSatoriWarmupVerificationForAccount:
updateSatoriWarmUpTimestampForAccount:
needsRepairForAccount:
repairStateForAccount:
setRepairState:forAccount:
hearbeatTokenForAccount:
continuationTokenForAccount:
passwordResetTokenForAccount:
passwordResetTokenBackupForAccount:
hearbeatTokenForAccount:error:
continuationTokenForAccount:error:
passwordResetTokenForAccount:error:
passwordResetTokenBackupForAccount:error:
masterTokenForAccount:
settingsServiceTokenForAccount:
removeMasterTokenForAccount:
_tokenWithName:forAccount:error:
authKitAccountWithAltDSID:
authKitAccountWithDSID:
authKitAccountWithAppleID:
authKitAccountType
allAuthKitAccounts
appleIDAccountWithAltDSID:
appleIDAccountWithAppleID:
primaryAuthKitAccount
accountEligibleForUpdate
_serviceTypesForSecurityUpgrade
_defaultSecurityUpgradeServiceNames
_serviceTypeForServiceNameString:
_accountTypeForServiceType:
_isAccountEligibleForSecurityUpgrade:ofServiceType:
_matchingServiceAccountForAuthKitAccount:service:
mostRecentlyUsedAuthKitAccount
removeAllPasswordResetTokens
removeContinuationTokenForAccount:
_removeTokenKey:forAccount:
_removeTokenForKeys:forAccount:
setAccount:inUse:byService:
servicesUsingAccount:
accountsUsingService:
activeServiceNamesForAccount:
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
hasPrimaryiCloudAccountForAppleID:
hasPrimaryiCloudAccountForAltDSID:
iCloudAccountForAppleID:
iCloudAccountForAltDSID:
isPrimaryiCloudAccount:
isPrimaryiCloudAccountEmailVerified:
primaryiCloudAccount
altDSIDforPrimaryiCloudAccount
transportableAuthKitAccount:
_aliasesForiCloudAccount:
_altDSIDForiCloudAccount:
iCloudAccountType
appleIDAccountType
accountTypeForTypeIdentifier:
additionalInfoForAccount:
setAdditionalInfo:forAccount:
_removeAllRawPasswordCaches
_clearRawPasswordForAccount:
isManagedAppleIDForAccount:
managedOrganizationTypeForAccount:
setManagedOrganizationType:forAccount:
managedOrganizationNameForAccount:
setManagedOrganizationName:forAccount:
isNotificationEmailAvailableForAccount:
setIsNotificationEmailAvailable:forAccount:
notificationEmailForAccount:
setNotificationEmail:forAccount:
canBeCustodianForAccount:
setCanBeCustodian:forAccount:
canHaveCustodianForAccount:
setCanHaveCustodian:forAccount:
custodianEnabledForAccount:
setCustodianEnabled:forAccount:
custodianListVersionForAccount:
setCustodianListVersion:forAccount:
custodianLastModifiedForAccount:
setCustodianLastModified:forAccount:
isBeneficiaryForAccount:
setBeneficiary:forAccount:
canBeBeneficiaryForAccount:
setCanBeBeneficiary:forAccount:
canHaveBeneficiaryForAccount:
setCanHaveBeneficiary:forAccount:
beneficiaryListVersionForAccount:
setBeneficiaryListVersion:forAccount:
hasMDMForAccount:
setHasMDM:forAccount:
isFidoForAccount:
setFido:forAccount:
store
setStore:
_accountStore
_accountQueue
_authKitAccountType
_authKitAccountTypeLock
_appleIDAccountType
_appleIDAccountTypeLock
_iCloudAccountType
_iCloudAccountTypeLock
_accountTypeCacheLock
_accountTypeCache
T@"ACAccountType",R,N
T@"ACAccountStore",&,N,V_accountStore
lookupPrivateEmailForAltDSID:withKey:completion:
lookupPrivateEmailWithContext:completion:
fetchPrivateEmailForAltDSID:withKey:completion:
fetchPrivateEmailWithContext:completion:
registerPrivateEmailForAltDSID:withKey:completion:
getContextForRequestContext:completion:
deletePrivateEmailDatabaseWithCompletion:
privateEmailListVersionWithCompletion:
removePrivateEmailKey:completion:
listAllPrivateEmailsForAltDSID:completion:
presentPrivateEmailUIForContext:completion:
_clientImpl
T@"<AKPrivateEmailUIProvider>",&
ak_hexString
ak_compressedData:
ak_SHA256Data
ak_dataWithBase64UrlEncodedString:
T@"NSXPCInterface",R,N
initWithUser:site:
user
setUser:
site
setSite:
isAppleIDAuthorization
setAppleIDAuth:
shouldCreateAppleID
setCreateAppleID:
_appleIDAuth
_createAppleID
_user
_site
T@"NSString",C,N,V_user
T@"NSString",C,N,V_site
appleIDAuth
TB,N,GisAppleIDAuthorization,V_appleIDAuth
createAppleID
TB,N,GshouldCreateAppleID,V_createAppleID
authenticationRequestFinishedWithResults:password:additionalData:error:
ak_isBoolean
ak_booleanAsInteger
initWithBundleInformation:manifestOptions:
parsableRepresentation
_bundleTypeFrom:
_isAllOptionsSelected
accessibleBundleInformation
manifestOptions
_accessibleBundleInformation
_manifestOptions
T@"NSArray",R,N,V_accessibleBundleInformation
Tq,R,N,V_manifestOptions
T@"NSDictionary",R,N
sharedController
signalFromServerResponse:
initWithAltDSID:identityToken:
signRequest:
signRequest:withCompletionHandler:
_proxiedProvisioningController
signingController
_fetchApplicationNameForBundleId:
_signRequest:
signRequestWithCommonHeaders:
signRequestWithBasicHeaders:
_signWithProxiedDeviceHeaders:
_signWithFeatureOptInHeaders:
_signRequestWithBAAHeaders:
processResponse:
isResponseFinal:
isAuthenticationRequired:
isResponseActionable:
isResponseFinalForHSA2ServerFlow:
isResponseCompleteAndConflict:
decorateWithPrivateEmailContext:
decorateWithContext:
updateWithAuthResults:
_harvestContinuationHeadersFromHeaders:
_retrieveAndResetContinuationHeaders
_isResponseSuccessful:
serviceToken
setServiceToken:
shouldSendEphemeralAuthHeader
setShouldSendEphemeralAuthHeader:
shouldSendICSCIntentHeader
setShouldSendICSCIntentHeader:
shouldSendLocalUserHasAppleIDLoginHeader
setShouldSendLocalUserHasAppleIDLoginHeader:
shouldSendPhoneNumber
setShouldSendPhoneNumber:
shouldOfferSecurityUpgrade
setShouldOfferSecurityUpgrade:
phoneNumberCertificate
setPhoneNumberCertificate:
phoneInformation
setPhoneInformation:
loggedInServices
setLoggedInServices:
passwordResetToken
setPasswordResetToken:
continuationToken
setContinuationToken:
heartbeatToken
setHeartbeatToken:
identityToken
setIdentityToken:
initialURLRequestKey
setInitialURLRequestKey:
proxyAppName
setProxyAppName:
clientAppName
setClientAppName:
clientBundleID
setClientBundleID:
hasEmptyPasswordOverride
setHasEmptyPasswordOverride:
securityUpgradeContext
setSecurityUpgradeContext:
followupItems
setFollowupItems:
dataCenterIdentifier
setDataCenterIdentifier:
proxiedAltDSID
setProxiedAltDSID:
proxiedIdentityToken
setProxiedIdentityToken:
anisetteDataProvider
setAnisetteDataProvider:
proxiedDeviceAnisetteData
setProxiedDeviceAnisetteData:
proxiedDeviceAttestationData
setProxiedDeviceAttestationData:
privateEmailDomain
setPrivateEmailDomain:
privateEmailBundleId
setPrivateEmailBundleId:
continuityIDMSData
setContinuityIDMSData:
bagUrlKey
setBagUrlKey:
shouldSendSigningHeaders
setShouldSendSigningHeaders:
_continuationHeaders
_shouldSendEphemeralAuthHeader
_shouldSendICSCIntentHeader
_shouldSendLocalUserHasAppleIDLoginHeader
_shouldSendPhoneNumber
_shouldOfferSecurityUpgrade
_shouldSendSigningHeaders
_serviceToken
_phoneNumberCertificate
_phoneInformation
_loggedInServices
_passwordResetToken
_continuationToken
_initialURLRequestKey
_proxyAppName
_clientAppName
_clientBundleID
_hasEmptyPasswordOverride
_securityUpgradeContext
_followupItems
_dataCenterIdentifier
_proxiedAltDSID
_proxiedIdentityToken
_anisetteDataProvider
_proxiedDeviceAnisetteData
_proxiedDeviceAttestationData
_privateEmailDomain
_privateEmailBundleId
_continuityIDMSData
_bagUrlKey
TB,N,V_shouldSendEphemeralAuthHeader
TB,N,V_shouldSendICSCIntentHeader
TB,N,V_shouldSendLocalUserHasAppleIDLoginHeader
TB,N,V_shouldSendPhoneNumber
TB,N,V_shouldOfferSecurityUpgrade
T@"NSString",C,N,V_phoneNumberCertificate
T@"NSArray",C,N,V_phoneInformation
T@"NSArray",C,N,V_loggedInServices
T@"NSString",C,N,V_passwordResetToken
T@"NSString",C,N,V_continuationToken
T@"NSString",C,N,V_heartbeatToken
T@"NSString",C,N,V_identityToken
T@"NSString",C,N,V_initialURLRequestKey
T@"NSString",C,N,V_proxyAppName
T@"NSString",C,N,V_clientAppName
T@"NSString",C,N,V_clientBundleID
T@"NSNumber",&,N,V_hasEmptyPasswordOverride
T@"NSString",C,N,V_securityUpgradeContext
T@"NSString",C,N,V_followupItems
T@"NSString",C,N,V_dataCenterIdentifier
T@"AKDevice",&,N,V_proxiedDevice
T@"NSString",&,N,V_proxiedAltDSID
T@"NSString",&,N,V_proxiedIdentityToken
T@"<AKAnisetteServiceProtocol>",&,N,V_anisetteDataProvider
T@"AKAnisetteData",&,N,V_proxiedDeviceAnisetteData
T@"AKAttestationData",&,N,V_proxiedDeviceAttestationData
T@"NSString",C,N,V_privateEmailDomain
T@"NSString",C,N,V_privateEmailBundleId
T@"NSString",C,N,V_continuityIDMSData
T@"NSString",C,N,V_bagUrlKey
TB,N,V_shouldSendSigningHeaders
T@"NSString",C,N,V_serviceToken
privateEmailFetchCompletedWith:error:completion:
userIdentifier
setUserIdentifier:
privateEmail
setPrivateEmail:
apps
setApps:
_userIdentifier
_privateEmail
_apps
T@"NSString",C,N,V_userIdentifier
T@"NSString",C,N,V_privateEmail
T@"NSDictionary",C,N,V_apps
payloadWithMessage:
payloadWithResponseData:forCircleStep:
_dictionaryWithPlistData:
isRequestingPayload
isAcceptingPayload
clientInfo
replyPayload
serverInfo
setServerInfo:
setClientInfo:
transactionId
setTransactionId:
supportsPresence
setSupportsPresence:
presenceSID
setPresenceSID:
presenceMode
setPresenceMode:
presenceFallbackApproved
setPresenceFallbackApproved:
presenceCheckPassed
setPresenceCheckPassed:
localPresenceFound
setLocalPresenceFound:
responseMessage
setResponseMessage:
responseInfo
setResponseInfo:
circleStep
setCircleStep:
_supportsPresence
_presenceFallbackApproved
_serverInfo
_clientInfo
_transactionId
_presenceSID
_presenceMode
_presenceCheckPassed
_localPresenceFound
_responseMessage
_responseInfo
_circleStep
T@"AKPushMessage",&,N,V_responseMessage
T@"NSDictionary",&,N,V_responseInfo
TQ,N,V_circleStep
T@"NSString",&,N,V_serverInfo
T@"NSData",&,N,V_clientInfo
T@"NSString",&,N,V_altDSID
T@"NSString",&,N,V_transactionId
TB,N,V_supportsPresence
T@"NSUUID",&,N,V_presenceSID
Tq,N,V_presenceMode
TB,N,V_presenceFallbackApproved
T@"NSNumber",C,N,V_presenceCheckPassed
T@"NSNumber",C,N,V_localPresenceFound
initWithKey:
initWithKey:altDSID:
initWithKey:altDSID:clientAppBundleId:
initWithContext:client:
initWithContext:bundleID:
sanitiseInternalState
proxiedAppID
setProxiedAppID:
proxiedBundleIdentifier
setProxiedBundleIdentifier:
proxiedAppName
setProxiedAppName:
upgradeBundleIdentifier
clientAppBundleId
setClientAppBundleId:
keyAndBundleIdAreHashed
setKeyAndBundleIdAreHashed:
_keyAndBundleIdAreHashed
_key
_proxiedAppID
_proxiedBundleIdentifier
_upgradeBundleIdentifier
_clientAppBundleId
T@"NSString",R,C,N,V_key
T@"NSString",C,N,V_proxiedAppID
T@"NSString",C,N,V_proxiedBundleIdentifier
T@"NSString",C,N,V_proxiedAppName
T@"NSString",R,C,N,V_upgradeBundleIdentifier
T@"NSString",C,N,V_clientAppBundleId
TB,N,V_keyAndBundleIdAreHashed
bagForAltDSID:
sharedBag
_currentBags
keyForEscapeHatchURL
looksLikeiForgotURLKey:
IDMSEnvironmentFromBag:
_IDMSEnvironmentFromString:
_requestEnvironmentsWithBag:
initWithAltDSID:
basicAuthURL
startProvisioningURL
privateEmailManageURL
endProvisioningURL
syncAnisetteURL
upgradeEligibilityCheckURL
upgradeUIURL
validateCodeURL
escapeHatchURL
privacyRepairURL
checkInURL
notificationAckURL
iForgotURL
iForgotContinuationURL
createAppleIDURL
deviceListURL
trustedDevicesURL
trustedDevicesSummaryURL
absintheCertURL
absintheSessionURL
tokenUpgradeURL
configurationInfoURL
fetchConfigDataURL
changePasswordURL
validateVettingTokenURL
renewRecoveryTokenURL
circleURL
fetchFollowUps
fetchUserInfoURL
fetchAppInfoURL
fetchPrimaryBundleIDURL
fetchAuthenticationModeURL
storeModernRecoveryURL
isPhoneNumberSupportedConfig
acsURL
repairURL
userVerificationURL
deleteAuthorizedAppURL
startFidoAuthURL
finishFidoAuthURL
startFidoRecoveryAuthURL
finishFidoRecoveryAuthURL
appleOwnedDomains
appleIDAuthorizationURLs
appleIDAuthorizeHTMLResponseURL
createChildAccountURL
custodianCodeConfiguration
inheritanceConfiguration
APSEnvironment
IDMSEnvironment
IsInlineFlowSupportedConfig
continuationHeaderPrefix
securityUpgradeServiceNames
configurationAtKey:
configurationAtKey:fromCache:
requestNewURLBagIfNecessaryWithCompletion:
requestNewURLBagIfNecessaryWithError:
urlAtKey:
_urlAtKey:
isBaaEnabledForKey:
_requestNewURLBagIfNecessaryWithError:
_requestEnvironmentsWithError:
_configurationsFromCache:withError:
_urlBagFromCache:withError:
_fetchURLBagWithCompletion:
forceUpdateBagWithUrlSwitchData:completion:
bagProvider
setBagProvider:
_bagProvider
T@"NSURL",R,N
T@"<AKURLBagDictionaryProvider>",&,N,V_bagProvider
T@"NSString",R,N
phoneNumberSupportedConfig
TB,R,N,GisPhoneNumberSupportedConfig
inlineFlowSupportedConfig
TB,R,N,GIsInlineFlowSupportedConfig
T@"NSArray",R,N
itemsForAltDSID:pushMessageInfo:fromIDMSPayload:
itemIdentifiersRequiringNotificationClearFromPayload:
IsFollowUpItemNotificationForced:
extensionIdentifier
setExtensionIdentifier:
representingBundlePath
setRepresentingBundlePath:
bundleIconName
setBundleIconName:
_itemFromPayload:pushMessageInfo:withAltDSID:
_actionsFromPayload:pushMessageInfo:
_actionFromInfo:pushMessageInfo:
_notificationFromPayload:pushMessageInfo:
_clearAction
actionWithTitle:andActionKey:
_extensionIdentifier
_representingBundlePath
_bundleIconName
T@"NSString",C,N,V_extensionIdentifier
T@"NSString",C,N,V_representingBundlePath
T@"NSString",C,N,V_bundleIconName
recoveryContextWithServerInfo:
decodedRecoveryIdentityTokenString
decodedRecoveryPETString
isValid
supportsMasterKeyRecovery
setSupportsMasterKeyRecovery:
mandatesRecoveryKey
setMandatesRecoveryKey:
encodedRecoveryIdentityToken
setEncodedRecoveryIdentityToken:
encodedRecoveryPET
setEncodedRecoveryPET:
recoveryContinuationURL
setRecoveryContinuationURL:
authContext
setAuthContext:
_supportsMasterKeyRecovery
_mandatesRecoveryKey
_encodedRecoveryIdentityToken
_encodedRecoveryPET
_recoveryContinuationURL
_authContext
TB,N,V_supportsMasterKeyRecovery
TB,N,V_mandatesRecoveryKey
T@"NSString",C,N,V_encodedRecoveryIdentityToken
T@"NSString",C,N,V_encodedRecoveryPET
T@"NSURL",C,N,V_recoveryContinuationURL
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
credentialStateDidChange:completion:
dateFormatter
createAndExecuteRequestForPath:requestBody:httpMethod:configuration:completion:
_hostURL
mutableJSONRequestForPath:
mutableJSONRequestForURL:
errorFromServerResponseBody:
jsonDictionaryForData:error:
_dateFormatter
T@"NSDateFormatter",R,N
clientData
credentialID
challenge
relyingPartyIdentifier
initWithAuthenticatorData:challengeString:relyingPartyIdentifier:signature:clientData:credentialID:userIdentifier:
initWithAuthenticatorDataString:challengeString:relyingPartyIdentifier:signature:clientDataString:credentialID:userIdentifier:
authenticatorData
signature
_clientData
_credentialID
_challenge
_relyingPartyIdentifier
_authenticatorData
_signature
T@"NSString",R,N,V_authenticatorData
T@"NSString",R,N,V_signature
T@"NSString",R,N,V_clientData
T@"NSString",R,N,V_credentialID
T@"NSString",R,N,V_userIdentifier
T@"NSString",R,N,V_challenge
T@"NSString",R,N,V_relyingPartyIdentifier
alertHandlerShowAlert:primaryAction:altAction:
T@"AKAlertHandler",R,N
showAlertForError:withCompletion:
showAlertForError:withAuthKitAccount:withCompletion:
_showAlertForInvalidContextWithCompletion:
_showAlertForMissingAppleAccountWithCompletion:
_showAlertForAccountNotSupportedWithCompletion:
_showAlertForUnverifiedEmailWithCompletion:
_showAlertForInsufficientSecurityLevelWithError:completionHandler:
_showAlertForCannotFindServerWithCompletion:
_showAlertForUnderageAccount:withCompletion:
_showAlertForPasscodeSetupWithCompletion:
_shouldShowAlertForManagedAccount:error:
_showAlertForManagedAccount:error:withCompletion:
showAlert:primaryAction:altAction:
showAlert:primaryAction:altAction:cancelAction:
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
_openSpyglass
_openPasscodeSetup
_openUpgradeAccountSecurityLevelWithBundleID:
_URLWithString:byAppendingParameters:
T@"<AKAlertHandlerUIProvider>",W,N,V_uiProvider
accessKeyString
setAccessKeyString:
beneficiaryPassword
setBeneficiaryPassword:
beneficiaryFirstName
setBeneficiaryFirstName:
beneficiaryLastName
setBeneficiaryLastName:
_accessKeyString
_beneficiaryPassword
_beneficiaryFirstName
_beneficiaryLastName
T@"NSString",C,N,V_accessKeyString
T@"NSString",C,N,V_beneficiaryFirstName
T@"NSString",C,N,V_beneficiaryLastName
T@"NSString",C,N,V_beneficiaryPassword
authKitAccount:
authKitAccountForSilentServiceToken:
initWithContext:
handleResponseError:
_handleInvalidMasterTokenWithSubErrorCode:
_revokeDeviceTrust
T@"AKAppleIDAuthenticationContext",&,N,V_context
tokenWithValue:lifetime:
tokenWithBase64String:
tokenWithDictionary:
stringValue
setStringValue:
expirationDate
name
setName:
_expirationDate
_stringValue
_name
T@"NSString",C,N,V_stringValue
T@"NSDate",R,N,V_expirationDate
T@"NSString",C,N,V_name
tokenWithExternalizedVersionString:
tokenWithExternalizedVersion:lifetime:
updateWithHTTPURLResponse:
initWithAppleID:altDSID:
sessionKey
_setSessionKey:
encryptedSessionKey
_setEncryptedSessionKey:
externalizedVersion
externalizedVersionString
_properties
T@"NSData",R,N
URLSession:task:getAppleIDHeadersForResponse:completionHandler:
relevantHTTPStatusCodes
URLSession:task:getAppleIDRequestOrHeadersForResponse:completionHandler:
appleIDHeadersForRequest:
handleResponse:forRequest:shouldRetry:
_genericAppleIDHeadersDictionaryForRequest:
_generateAppleIDHeadersForRequest:error:
_generateAppleIDHeadersForSessionTask:withCompletion:
_handleAnissetteURLResponse:forRequest:withCompletion:
_handleURLSwitchingResponse:forRequest:withCompletion:
_nativeAnisetteController
_pairedDeviceAnisetteController
pairedDevice
setPairedDevice:
_proxiedAnisetteData
_anisetteControllerLock
_pairedDevice
T@"AKDevice",&,N,V_pairedDevice
setMachineID:
oneTimePassword
setOneTimePassword:
routingInfo
setRoutingInfo:
_oneTimePassword
_routingInfo
T@"NSString",C,N,V_machineID
T@"NSString",C,N,V_oneTimePassword
TQ,N,V_routingInfo
sharedManager
isLisbonAvailable
_cachedIsLisbonAvailable
lisbonAvailable
TB,R,N,GisLisbonAvailable
initWithMaxWait:description:
setValue:
value
resolved
setResolved:
maxWait
setMaxWait:
beginDate
setBeginDate:
valueCondition
setValueCondition:
internalWrapper
setInternalWrapper:
_resolved
_maxWait
_beginDate
_valueCondition
_internalWrapper
TB,N,V_resolved
Td,N,V_maxWait
T@"NSDate",&,N,V_beginDate
T@"NSCondition",&,N,V_valueCondition
T@"NSMutableArray",&,N,V_internalWrapper
presentOOPLoginUIWithContext:completion:
_callCompletionWithResults:password:additionalData:error:
remoteListener
setRemoteListener:
presentationCompletion
setPresentationCompletion:
_remoteListener
_presentationCompletion
T@"NSXPCListener",&,N,V_remoteListener
T@?,C,N,V_presentationCompletion
T@"NSString",R,C,N
initWithServerResponse:
authorizedScopes
authorizationCode
isLikelyRealUser
setIsLikelyRealUser:
_isLikelyRealUser
_authorizedScopes
_authorizationCode
TB,N,V_isLikelyRealUser
T@"NSArray",R,C,N,V_authorizedScopes
T@"NSData",R,C,N,V_identityToken
T@"NSData",R,C,N,V_authorizationCode
T@"NSString",R,C,N,V_state
T@"AKUserInformation",R,N,V_userInformation
T@"NSString",R,C,N,V_transactionID
T@"NSString",R,C,N,V_userIdentifier
authorizedAppListVersion
teams
_authorizedAppListVersion
_teams
T@"NSString",R,C,N,V_authorizedAppListVersion
T@"NSDictionary",R,C,N,V_teams
pendingFollowUpItems:
removeAllFollowUpItems:
addFollowUpItems:error:
removeFollowUpItems:error:
removeFollowUpItemsWithIdentifiers:error:
clearNotificationsForItem:error:
initWithFLFollowupController:
_followupController
initWithJSONDictionary:
identifier
setIdentifier:
number
setNumber:
numberWithDialCode
setNumberWithDialCode:
obfuscatedNumber
setObfuscatedNumber:
pushMode
setPushMode:
_identifier
_number
_numberWithDialCode
_obfuscatedNumber
_pushMode
T@"NSNumber",&,N,V_identifier
T@"NSString",&,N,V_number
T@"NSString",&,N,V_numberWithDialCode
T@"NSString",&,N,V_obfuscatedNumber
T@"NSString",&,N,V_pushMode
ak_errorByAppendingUserInfo:
ak_isUserCancelError
ak_isUserSkippedError
ak_isUserTryAgainError
ak_isUserInitiatedError
ak_isServiceError
ak_isUnableToPromptError
ak_isSurrogateAuthAlreadyInProgressError
ak_isIncompatibleDevicesError
ak_isAuthenticationErrorWithCode:
ak_isAuthenticationError
ak_errorWithCode:
ak_errorWithCode:userInfo:
ak_errorWithCode:underlyingError:
ak_wrappedAnisetteError:
pendingAuthKitFollowUpPayload:
setAuthorizedRequest:
authorizedRequest
credential
setCredential:
_authorizedRequest
_credential
T@"<AKCredentialRequestProtocol>",&,N,V_authorizedRequest
T@"<AKCredential>",&,N,V_credential
data
setData:
scale
setScale:
maskingStyle
setMaskingStyle:
_data
_scale
_maskingStyle
T@"NSData",&,N,V_data
T@"NSNumber",&,N,V_scale
TQ,N,V_maskingStyle
T@"NSString",&,N,V_appName
signatureForURLRequest:
signatureForURLRequest:completionHandler:
_contextCreationDate
startCoordinatingBlock:
initWithBlock:
start
setCompletion:
_start
_callCompletionWithData:error:
_block
_started
_lock
_group
contextWithAuthResults:
stateControllerWithContext:
recoveryControllerWithContext:
followUpRepairContext
followUpController
cdpAccountIsICDPEnabledForDSID:
cdpErrorDomain
cdpIDMSRecordMIDKey
cdpIDMSRecordPRKKey
accountRecoveryControllerWithPresentingViewController:
cdpStateUIController
cdpUIControllerWithPresentingViewController:
payload
setPayload:
waitForReply
setWaitForReply:
waitForReplyTimeout
setWaitForReplyTimeout:
identityTokenValue
setIdentityTokenValue:
heartbeatTokenValue
setHeartbeatTokenValue:
_notifyOfTimeout
set_notifyOfTimeout:
_waitForReply
__notifyOfTimeout
_payload
_waitForReplyTimeout
_identityTokenValue
_heartbeatTokenValue
T@"NSString",&,N,V_identityTokenValue
T@"NSString",&,N,V_heartbeatTokenValue
T@"NSString",&,N,V_pushToken
TB,N,V__notifyOfTimeout
T@"AKCircleRequestPayload",&,N,V_payload
TB,N,V_waitForReply
Td,N,V_waitForReplyTimeout
initWithUUID:status:
uuid
setUuid:
status
setStatus:
hashedWrappingKeyRKC
setHashedWrappingKeyRKC:
_uuid
_status
_hashedWrappingKeyRKC
T@"NSUUID",C,N,V_uuid
Tq,N,V_status
T@"NSString",C,N,V_hashedWrappingKeyRKC
formattedUsernameFromUsername:
initWithParameters:
initWithChallengeString:relyingPartyIdentifier:userIdentifierString:displayName:credentialName:credentials:
initWithChallenge:relyingPartyIdentifier:userIdentifier:displayName:credentialName:credentials:
originalChallenge
displayName
credentialName
credentials
promptTitle
setPromptTitle:
promptHeader
setPromptHeader:
promptBody
setPromptBody:
promptIconData
setPromptIconData:
promptIconScale
setPromptIconScale:
_originalChallenge
_displayName
_credentialName
_credentials
_promptTitle
_promptHeader
_promptBody
_promptIconData
_promptIconScale
T@"NSData",R,N,V_challenge
T@"NSString",R,N,V_originalChallenge
T@"NSData",R,N,V_userIdentifier
T@"NSString",R,N,V_displayName
T@"NSString",R,N,V_credentialName
T@"NSArray",R,N,V_credentials
T@"NSString",C,N,V_promptTitle
T@"NSString",C,N,V_promptHeader
T@"NSString",C,N,V_promptBody
T@"NSData",C,N,V_promptIconData
T@"NSNumber",C,N,V_promptIconScale
presentAuthorizationUIForContext:completion:
T@"<AKAuthorizationUIProvider>",&,N,V_uiProvider
provisionAnisetteForDevice:completion:
syncAnisetteWithSIMData:device:completion:
eraseAnisetteForDevice:completion:
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
legacyAnisetteDataForDSID:device:completion:
attestationDataForDevice:withRequest:completion:
updateSynchronizeTimeForAccount:inStore:
updateSynchronizeTimeNoSaveForAccount:
synchronizeFollowUpsForAccount:inStore:error:
shouldSynchronizeForAccount:
followupProvider
setFollowupProvider:
controller
setController:
_followupProvider
_controller
T@"<AKFollowUpProvider>",&,N,V_followupProvider
T@"AKAppleIDAuthenticationController",&,N,V_controller
presentationContextForRequestContext:client:
initWithUsername:
_addPresenterParameters
_addPresentationParametersForContext:
localizedAppName
setLocalizedAppName:
informativeText
iconName
iconData
iconScale
signInAllowsPCSKeyAccess
setSignInAllowsPCSKeyAccess:
credentialRequestContext
setCredentialRequestContext:
loginChoices
setLoginChoices:
_signInAllowsPCSKeyAccess
_localizedAppName
_credentialRequestContext
_loginChoices
TB,N,V_signInAllowsPCSKeyAccess
T@"NSString",C,N,V_localizedAppName
T@"NSString",R,C,N,V_informativeText
T@"NSString",R,C,N,V_iconName
T@"NSData",R,C,N,V_iconData
T@"NSNumber",R,C,N,V_iconScale
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
T@"AKUserInformation",&,N,V_userInformation
T@"NSArray",C,N,V_loginChoices
sharedNetworkObserver
_startPathMonitor
_stopPathMonitor
_networkReachabilityDidChange
isNetworkReachable
addNetworkReachableObserver:selector:
removeNetworkReachableObserver:
_pathMonitor
_observerQueue
_invocationByObserver
_isNetworkReachable
TB,R,N,V_isNetworkReachable
initWithRequest:requestType:
resourceLoadDelegate
setResourceLoadDelegate:
requestType
setRequestType:
presentationType
setPresentationType:
whitelistedPathURLs
setWhitelistedPathURLs:
_resourceLoadDelegate
_requestType
_presentationType
_whitelistedPathURLs
T@"AKAppleIDServerResourceLoadDelegate",&,N,V_resourceLoadDelegate
TQ,N,V_requestType
TQ,N,V_presentationType
T@"NSArray",C,N,V_whitelistedPathURLs
initWithFollowUpFactory:provider:
synchronizeFollowUpsWithServerPayload:altDSID:error:
_alignedInsertionCandidates:withExistingItems:
_factory
_provider
custodianOperationsByID
setCustodianOperationsByID:
beneficiaryOperationsByID
setBeneficiaryOperationsByID:
custodianListVersion
setCustodianListVersion:
beneficiaryListVersion
setBeneficiaryListVersion:
orphanedCustodianUUIDs
setOrphanedCustodianUUIDs:
orphanedBeneficiaryUUIDs
setOrphanedBeneficiaryUUIDs:
_custodianOperationsByID
_beneficiaryOperationsByID
_custodianListVersion
_beneficiaryListVersion
_orphanedCustodianUUIDs
_orphanedBeneficiaryUUIDs
T@"NSDictionary",C,N,V_custodianOperationsByID
T@"NSDictionary",C,N,V_beneficiaryOperationsByID
T@"NSString",C,N,V_custodianListVersion
T@"NSString",C,N,V_beneficiaryListVersion
T@"NSArray",C,N,V_orphanedCustodianUUIDs
T@"NSArray",C,N,V_orphanedBeneficiaryUUIDs
_daemonConnection
ak_stringForEncodedHeaderWithKey:
ak_acceptedTermsInfo
_ak_dataForEncodedHeaderWithKey:
initWithUser:password:
password
_password
T@"NSString",R,C,N,V_password
_sanitizedCopy
authkitAccount
internalAuthKitAccount
setAuthkitAccount:
_isSilentAppTransfer
set_isSilentAppTransfer:
_clientAuthenticatedExternallyWithPassword
set_clientAuthenticatedExternallyWithPassword:
requestedScopes
setRequestedScopes:
isEligibleForUpgradeFromPassword
setIsEligibleForUpgradeFromPassword:
existingStatus
setExistingStatus:
_authkitAccount
_requestedScopes
_existingStatus
Tq,N,V_existingStatus
T@"ACAccount",R,N
TB,N,V_isSilentAppTransfer
TB,N,V_clientAuthenticatedExternallyWithPassword
T@"NSArray",C,N,V_requestedScopes
TB,N,V_isEligibleForUpgradeFromPassword
T@"ACAccount",&,N,V_authkitAccount
ak_usesHTTPSScheme
buildReauthenticationContextFromContext:error:
reauthenticateWithContext:completion:
reauthenticateWithContext:completionWithResults:
forceSilentAuth
setForceSilentAuth:
_forceSilentAuth
TB,N,V_forceSilentAuth
initWithListenerEndpoint:exportedInterface:
ak_uuidData
T@"NSData",R,C,N
ak_serverFriendlyString
_sanitizeCredentialIDString:
initWithChallengeString:attestationsData:credentialID:clientData:relyingPartyIdentifier:credentialName:userIdentifier:
initWithChallengeString:attestationsDataString:credentialIDString:clientDataString:relyingPartyIdentifier:credentialName:userIdentifier:
attestationsData
_attestationsData
T@"NSString",R,N,V_attestationsData
canPerformCredentialRequest:error:
canPerformAuthorizationRequest:error:
canPerformPasswordRequest:error:
shouldContinueWithResponse:error:
_requirePasscodeSet
T@"NSUUID",R,C,N
setRequestIdentifier:
T@"NSUUID",R,C,N,V_transactionID
_sharedService
startServiceWithNotificationHandler:
startServiceWithStateBroadcastHandler:
startWithNotificationHandler:completion:
startWithStateBroadcastHandler:completion:
_configureNotificationServiceWithCompletion:
_configureStateBroadcastServiceWithCompletion:
_service
_daemonEndpoint
isManagedAppleID
sharedEmailForManagedAppleID
givenName
setGivenName:
familyName
setFamilyName:
forwardingEmail
setForwardingEmail:
previouslySelectedEmail
setPreviouslySelectedEmail:
primaryEmailAddress
setPrimaryEmailAddress:
accountName
setAccountName:
accountAliases
setAccountAliases:
reachableEmails
setReachableEmails:
authorizedApplicationsListVersion
setAuthorizedApplicationsListVersion:
masterKeyID
setMasterKeyID:
vettedPrimaryEmail
setVettedPrimaryEmail:
phoneAsAppleID
setPhoneAsAppleID:
isUnderage
setIsUnderage:
isSenior
setIsSenior:
ageOfMajority
setAgeOfMajority:
isLegacyStudent
setIsLegacyStudent:
hasUsedAuthorization
setHasUsedAuthorization:
privateAttestationEnabled
setPrivateAttestationEnabled:
previouslyWantedPrivateEmail
setPreviouslyWantedPrivateEmail:
appleIDSecurityLevel
setAppleIDSecurityLevel:
authMode
setAuthMode:
repairState
setRepairState:
additionalInfo
setAdditionalInfo:
privateEmailListVersion
setPrivateEmailListVersion:
appleIDCountryCode
setAppleIDCountryCode:
custodianEnabled
setCustodianEnabled:
canHaveCustodian
setCanHaveCustodian:
canBeCustodian
setCanBeCustodian:
canHaveBeneficiary
setCanHaveBeneficiary:
canBeBeneficiary
setCanBeBeneficiary:
custodianLastModified
setCustodianLastModified:
hasMDM
setHasMDM:
selectedEmail
setSelectedEmail:
managedOrganizationType
setManagedOrganizationType:
managedOrganizationName
setManagedOrganizationName:
isNotificationEmailAvailable
setIsNotificationEmailAvailable:
notificationEmail
setNotificationEmail:
_givenName
_familyName
_forwardingEmail
_previouslySelectedEmail
_primaryEmailAddress
_accountName
_accountAliases
_reachableEmails
_authorizedApplicationsListVersion
_masterKeyID
_vettedPrimaryEmail
_phoneAsAppleID
_isUnderage
_isSenior
_ageOfMajority
_isLegacyStudent
_hasUsedAuthorization
_privateAttestationEnabled
_previouslyWantedPrivateEmail
_appleIDSecurityLevel
_authMode
_repairState
_additionalInfo
_privateEmailListVersion
_appleIDCountryCode
_custodianEnabled
_canHaveCustodian
_canBeCustodian
_canHaveBeneficiary
_canBeBeneficiary
_custodianLastModified
_hasMDM
_selectedEmail
_managedOrganizationType
_managedOrganizationName
_isNotificationEmailAvailable
_notificationEmail
T@"NSString",C,N,V_givenName
T@"NSString",C,N,V_familyName
T@"NSString",C,N,V_forwardingEmail
T@"NSString",C,N,V_previouslySelectedEmail
T@"NSString",C,N,V_primaryEmailAddress
T@"NSString",C,N,V_accountName
T@"NSArray",C,N,V_accountAliases
T@"NSArray",C,N,V_reachableEmails
T@"NSString",C,N,V_authorizedApplicationsListVersion
T@"NSString",C,N,V_masterKeyID
T@"NSNumber",C,N,V_vettedPrimaryEmail
T@"NSNumber",C,N,V_phoneAsAppleID
T@"NSNumber",C,N,V_isUnderage
T@"NSNumber",C,N,V_isSenior
T@"NSNumber",C,N,V_ageOfMajority
T@"NSNumber",C,N,V_isLegacyStudent
T@"NSString",C,N,V_appleIDCountryCode
T@"NSNumber",C,N,V_hasUsedAuthorization
T@"NSNumber",C,N,V_privateAttestationEnabled
T@"NSNumber",C,N,V_previouslyWantedPrivateEmail
T@"NSNumber",C,N,V_custodianEnabled
T@"NSNumber",C,N,V_canHaveCustodian
T@"NSNumber",C,N,V_canBeCustodian
T@"NSNumber",C,N,V_canHaveBeneficiary
T@"NSNumber",C,N,V_canBeBeneficiary
T@"NSNumber",C,N,V_custodianLastModified
T@"NSNumber",C,N,V_hasMDM
TQ,N,V_appleIDSecurityLevel
TQ,N,V_authMode
TQ,N,V_repairState
T@"NSString",C,N,V_selectedEmail
T@"NSDictionary",C,N,V_additionalInfo
T@"NSString",C,N,V_privateEmailListVersion
T@"NSNumber",C,N,V_managedOrganizationType
T@"NSString",C,N,V_managedOrganizationName
T@"NSNumber",C,N,V_isNotificationEmailAvailable
T@"NSString",C,N,V_notificationEmail
currentDevice
activeIDSPeerDevice
systemContainerURL
systemContainerCacheURL
deviceWithSerializedData:
_hardwareModel
_systemVersionDictionary
_osName
_osVersion
_buildNumber
deviceSpecificLocalizedStringWithKey:
deviceSpecificLocalizedStringWithKey:inTable:
currentDeviceAuthenticationModeForAuthContext:
currentDeviceAuthenticationMode
_currentDeviceAuthenticationMode
hasUniqueDeviceIdentifier
T@"NSURL",R,C,N
serializedData
_setShouldUpdateToValue:
color
setColor:
enclosureColor
setEnclosureColor:
coverGlassColor
setCoverGlassColor:
housingColor
setHousingColor:
backingColor
setBackingColor:
uniqueDeviceIdentifier
setUniqueDeviceIdentifier:
provisioningDeviceIdentifier
setProvisioningDeviceIdentifier:
ROMAddress
setROMAddress:
MLBSerialNumber
setMLBSerialNumber:
modelNumber
setModelNumber:
serverFriendlyDescription
setServerFriendlyDescription:
userChosenName
localUserUUID
userFullName
internationalMobileEquipmentIdentity
internationalMobileEquipmentIdentity2
locale
setLocale:
isUnlocked
isInCircle
isProtectedWithPasscode
isBiometricAuthCapable
isFaceIDCapable
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
isInternalBuild
isMultiUserMode
phoneNumber
_volumeGroupUUID
linkType
setLinkType:
_shouldUpdateUniqueDeviceIdentifier
_shouldUpdateServerFriendlyDescription
_shouldUpdateColor
_shouldUpdateEnclosureColor
_shouldUpdateCoverGlassColor
_shouldUpdateHousingColor
_shouldUpdateBackingColor
_shouldUpdateLocale
_shouldUpdateROMAddress
_shouldUpdateMLBSerialNumber
_shouldUpdateModelNumber
_shouldUpdateProvisioningDeviceIdentifier
_uniqueDeviceIdentifier
_serverFriendlyDescription
_color
_enclosureColor
_coverGlassColor
_housingColor
_backingColor
_locale
_ROMAddress
_MLBSerialNumber
_modelNumber
_provisioningDeviceIdentifier
_linkType
TB,R,N
T@"NSString",C,N,V_serverFriendlyDescription
T@"NSString",C,N,V_uniqueDeviceIdentifier
T@"NSString",C,N,V_provisioningDeviceIdentifier
T@"NSString",C,N,V_color
T@"NSString",C,N,V_enclosureColor
T@"NSNumber",C,N,V_coverGlassColor
T@"NSNumber",C,N,V_housingColor
T@"NSNumber",C,N,V_backingColor
T@"NSLocale",C,N,V_locale
T@"NSString",C,N,V_MLBSerialNumber
T@"NSString",C,N,V_ROMAddress
T@"NSString",C,N,V_modelNumber
TQ,N,SsetLinkType:,V_linkType
ak_filter:
ak_firstObjectMatchingFilter:
ak_map:
ak_mapNullable:
ak_arrayWithResponseData:
ak_arrayWithJSONResponseData:
initForDevice:provider:
provisionWithCompletion:
syncWithSIMData:completion:
eraseWithCompletion:
anisetteDataWithError:
anisetteDataForURLRequest:error:
anisetteDataWithCompletion:
anisetteDataForURLRequest:completion:
fetchAnisetteDataAndProvisionIfNecessary:error:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
legacyAnisetteDataForDSID:withCompletion:
_anisetteServiceConnection
targetDevice
setTargetDevice:
_targetDevice
T@"AKDevice",&,N,V_targetDevice
initWithProvider:
buildLoginCodeNotificationWithTitle:body:footer:loginCode:
buildLoginCodeNotificationOptionsWithTitle:body:footer:loginCode:
setNeedsNewAppleID:
initWithVerificationType:
_capabilityForUIDisplay
_rootPath
_presentServerUISecondFactorWithConfiguration:completion:
_handleServerUISecondFactorWithObjectModel:configuration:completion:
_handleServerUIWithDictionary:statusCode:configuration:completion:
_verifySecondFactorCodeWithRequest:completion:
_handleServerUIBirthdayVerificationWithResponseDictionary:configuration:completion:
_handleServerUIPasswordVerificationWithResponseDictionary:configuration:completion:
_handleServerUIPhoneVerificationWithResponseDictionary:configuration:completion:
_collectAndHandleTermsAndConditionsWithResponseDictionary:configuration:completion:
_handleServerUISMSVerificationWithResponseDictionary:statusCode:configuration:completion:
_collectAndPostSecondFactorCodeWithRequestBody:configuration:completion:
_promptUserForSelectionWithTrustedNumbers:
_parseTrustedPhoneNumberFromResponseDictionary:
_accountCreationRequestBodyFromResponseDictionary:shouldIncludePhoneNumber:shouldIncludeForSecurityCode:
_createContextDictionaryFromResponse:
_accountDictionary
_beginDataTaskWithRequest:configuration:completion:
_parseHeaderTitleForPasscodeView:
_xmlUIRequestForURL:withServerInfo:
_xmlUIRequestForURL:withPostbackDictionary:
_promptForVerificationCodeWithSecureEntry:forTrustedNumber:
_promptForBirthday
_promptForPassword
_promptForUsername
_promptForPhoneNumber
_promptForFirstName
_promptForLastName
_promptUserForTermsWithResponseDictionary:
_jsonPostbackDictionaryForCode:numberId:
secondFactorCode
setSecondFactorCode:
verificationType
setPhoneNumber:
firstName
setFirstName:
lastName
setLastName:
birthday
setBirthday:
termsAccepted
setTermsAccepted:
securityCode
setSecurityCode:
utility
rootPath
_termsAccepted
_secondFactorCode
_verificationType
_phoneNumber
_firstName
_lastName
_birthday
_securityCode
_utility
T@"NSString",&,N,V_securityCode
T@"AKCommandLineUtilities",R,N,V_utility
T@"NSString",R,N,V_rootPath
T@"NSNumber",C,N,V_secondFactorCode
Tq,R,N,V_verificationType
T@"NSString",C,N,V_phoneNumber
T@"NSString",C,N,V_firstName
T@"NSString",C,N,V_lastName
T@"NSDate",C,N,V_birthday
TB,N,V_termsAccepted
beneficiaryAltDSID
setBeneficiaryAltDSID:
beneficiaryAccountName
setBeneficiaryAccountName:
_beneficiaryAltDSID
_beneficiaryAccountName
T@"NSString",C,N,V_beneficiaryAltDSID
T@"NSString",C,N,V_beneficiaryAccountName
initWithSurrogateID:
_initWithIdentifier:
_updateWithValuesFromContext:
_localUserHasEmptyPassword
isContextEligibleForSilentAuthCoercion
isContextEligibleForSilentAuth
isContextEligibleForBiometricOrPasscodeAuth
_isVerifyCredentialReasonEligibleForBiometricOrPasscodeAuth
isContextRequestingReauthForExistingService
setReason:
setUsername:
_setPassword:
_shouldRefreshAccountAndUpdateContext
setShouldPreventInteractiveAuth:
shouldPreventInteractiveAuth
setShouldForceInteractiveAuth:
shouldForceInteractiveAuth
_interpolatedReason
_interpolatedReasonWithBlame
_appendBlameIfRequiredTo:
serviceIdentifier
setServiceIdentifier:
_requiresPasswordInput
_startListeningForSecondFactorCodeEntryNotification
_stopListeningForSecondFactorCodeEntryNotification
_handleSecondFactorCodeEntry
_secondFactorQueue
_isProxyingForApp
_setProxyingForApp:
_proxiedAppBundleID
_setProxiedAppBundleID:
_shouldSendIdentityTokenForRemoteUI
set_shouldSendIdentityTokenForRemoteUI:
_shouldSendGrandSlamTokensForRemoteUI
set_shouldSendGrandSlamTokensForRemoteUI:
_passwordPromptTitle
set_passwordPromptTitle:
_isPasswordEditable
set_isPasswordEditable:
_shortLivedToken
_setShortLivedToken:
_message
_setMessage:
_shouldSkipInitialReachabilityCheck
set_shouldSkipInitialReachabilityCheck:
_attemptIndex
set_attemptIndex:
companionDeviceAnisetteData
setCompanionDeviceAnisetteData:
_masterKey
_setMasterKey:
_performUIOutOfProcess
set_performUIOutOfProcess:
_keepAlive
set_keepAlive:
_isForcedEligibleForForegroundAuthentication
set_forceEligibleForForegroundAuthentication:
username
isUsernameEditable
setIsUsernameEditable:
shouldAllowAppleIDCreation
setShouldAllowAppleIDCreation:
needsCredentialRecovery
setNeedsCredentialRecovery:
needsNewAppleID
needsPasswordChange
setNeedsPasswordChange:
isTriggeredByNotification
setTriggeredByNotification:
reason
defaultButtonString
setDefaultButtonString:
maximumLoginAttempts
setMaximumLoginAttempts:
serviceIdentifiers
setServiceIdentifiers:
isEphemeral
setIsEphemeral:
DSID
setDSID:
httpHeadersForRemoteUI
setHttpHeadersForRemoteUI:
needsRepair
setNeedsRepair:
title
setTitle:
helpAnchor
setHelpAnchor:
helpBook
setHelpBook:
authenticationPromptStyle
setAuthenticationPromptStyle:
cancelButtonString
setCancelButtonString:
alternativeButtonString
setAlternativeButtonString:
hideAlternativeButton
setHideAlternativeButton:
hideCancelButton
setHideCancelButton:
hideReasonString
setHideReasonString:
clientShouldHandleAlternativeButtonAction
setClientShouldHandleAlternativeButtonAction:
windowTitle
setWindowTitle:
alwaysShowUsernameField
setAlwaysShowUsernameField:
privacyBundleIdentifier
setPrivacyBundleIdentifier:
displayImageData
setDisplayImageData:
shouldPromptForPasswordOnly
setShouldPromptForPasswordOnly:
shouldUpdatePersistentServiceTokens
setShouldUpdatePersistentServiceTokens:
isAppleIDLoginEnabled
setAppleIDLoginEnabled:
hasEmptyPassword
setHasEmptyPassword:
shouldRequestRecoveryPET
setShouldRequestRecoveryPET:
shouldRequestShortLivedToken
setShouldRequestShortLivedToken:
shouldRequestConfigurationInfo
setShouldRequestConfigurationInfo:
supportsPiggybacking
setSupportsPiggybacking:
anticipateEscrowAttempt
setAnticipateEscrowAttempt:
desiredInternalTokens
setDesiredInternalTokens:
isFirstTimeLogin
setFirstTimeLogin:
shouldSkipSettingsLaunchAlert
setShouldSkipSettingsLaunchAlert:
needsNewChildAccount
setNeedsNewChildAccount:
needsSecurityUpgradeUI
setNeedsSecurityUpgradeUI:
dependentAltDSID
setDependentAltDSID:
cellularDataAttributionAppBundleID
setCellularDataAttributionAppBundleID:
verifyCredentialReason
setVerifyCredentialReason:
callerIconBundlePath
setCallerIconBundlePath:
localizedCallerName
setLocalizedCallerName:
displayString
setDisplayString:
displayTitle
setDisplayTitle:
_generatedCode
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
_notificationDisclaimer
_activeSecondFactoryEntryPrompt
_secondFactoryEntryCompletion
_isContextRequestingReauthForExistingService
_shouldPreventInteractiveAuth
_shouldForceInteractiveAuth
_forceEligibleForForegroundAuthentication
_isUsernameEditable
_shouldAllowAppleIDCreation
_needsCredentialRecovery
_needsNewAppleID
_needsPasswordChange
_isTriggeredByNotification
_isEphemeral
_needsRepair
_hideAlternativeButton
_hideCancelButton
_hideReasonString
_clientShouldHandleAlternativeButtonAction
_alwaysShowUsernameField
_shouldPromptForPasswordOnly
_shouldUpdatePersistentServiceTokens
_shouldRequestRecoveryPET
_shouldRequestShortLivedToken
_shouldRequestConfigurationInfo
_supportsPiggybacking
_anticipateEscrowAttempt
_isFirstTimeLogin
_shouldSkipSettingsLaunchAlert
_needsNewChildAccount
_needsSecurityUpgradeUI
_companionDeviceAnisetteData
_username
_reason
_defaultButtonString
_maximumLoginAttempts
_serviceIdentifiers
_DSID
_httpHeadersForRemoteUI
_title
_helpAnchor
_helpBook
_authenticationPromptStyle
_cancelButtonString
_alternativeButtonString
_windowTitle
_privacyBundleIdentifier
_displayImageData
_isAppleIDLoginEnabled
_hasEmptyPassword
_desiredInternalTokens
_dependentAltDSID
_cellularDataAttributionAppBundleID
_verifyCredentialReason
_callerIconBundlePath
_localizedCallerName
_displayString
_displayTitle
T@"NSUUID",R,N,V_identifier
TQ,R,N,V_capabilityForUIDisplay
TB,N,V_shouldSendIdentityTokenForRemoteUI
TB,N,V_shouldSendGrandSlamTokensForRemoteUI
TB,N,V_shouldSkipInitialReachabilityCheck
TQ,N,V_attemptIndex
contextEligibleForSilentAuthCoercion
TB,R,N,GisContextEligibleForSilentAuthCoercion
contextEligibleForSilentAuth
TB,R,N,GisContextEligibleForSilentAuth
contextEligibleForBiometricOrPasscodeAuth
TB,R,N,GisContextEligibleForBiometricOrPasscodeAuth
contextRequestingReauthForExistingService
TB,R,N,GisContextRequestingReauthForExistingService
TB,N,V_performUIOutOfProcess
TB,N,V_keepAlive
T@"NSData",&,N,V_displayImageData
TB,N,G_isForcedEligibleForForegroundAuthentication,Sset_forceEligibleForForegroundAuthentication:,V_forceEligibleForForegroundAuthentication
TB,N,V_shouldPromptForPasswordOnly
TB,N,V_shouldUpdatePersistentServiceTokens
TB,N,S_setProxyingForApp:,V_isProxyingForApp
T@"NSString",C,N,S_setProxiedAppBundleID:,V_proxiedAppBundleID
T@"NSString",C,N,V_passwordPromptTitle
T@"NSString",C,N,S_setPassword:,V_password
TB,N,V_isPasswordEditable
T@"NSString",C,N,S_setShortLivedToken:,V_shortLivedToken
T@"NSNumber",C,N,SsetAppleIDLoginEnabled:,V_isAppleIDLoginEnabled
T@"NSNumber",C,N,SsetHasEmptyPassword:,V_hasEmptyPassword
TB,N,V_shouldRequestRecoveryPET
TB,N,V_shouldRequestShortLivedToken
TB,N,V_shouldRequestConfigurationInfo
TB,N,V_supportsPiggybacking
TB,N,V_anticipateEscrowAttempt
T@"NSSet",C,N,V_desiredInternalTokens
TB,N,SsetFirstTimeLogin:,V_isFirstTimeLogin
TB,N,V_shouldSkipSettingsLaunchAlert
T@"NSString",C,N,S_setMessage:,V_message
T@"NSString",C,N,S_setMasterKey:,V_masterKey
T@"AKAnisetteData",&,N,V_companionDeviceAnisetteData
TB,N,V_shouldPreventInteractiveAuth
TB,N,V_shouldForceInteractiveAuth
TB,N,V_needsNewChildAccount
TB,N,V_needsSecurityUpgradeUI
T@"NSString",C,N,V_dependentAltDSID
T@"NSString",C,N,V_cellularDataAttributionAppBundleID
Tq,N,V_verifyCredentialReason
T@"NSString",C,N,SsetCustodianRecoveryToken:,V_custodianRecoveryToken
T@"NSString",C,N,V_callerIconBundlePath
T@"NSString",C,N,V_localizedCallerName
T@"NSString",C,N,V_displayString
T@"NSString",C,N,V_displayTitle
T@"NSString",C,N,V_username
TB,N,V_isUsernameEditable
TB,N,V_shouldAllowAppleIDCreation
TB,N,V_needsCredentialRecovery
TB,N,V_needsNewAppleID
TB,N,V_needsPasswordChange
TB,N,SsetTriggeredByNotification:,V_isTriggeredByNotification
T@"NSString",C,N,V_reason
T@"NSString",C,N,V_defaultButtonString
Tq,N,V_maximumLoginAttempts
T@"NSArray",C,N,V_serviceIdentifiers
TB,N,V_isEphemeral
T@"NSString",C,N,V_DSID
T@"NSDictionary",C,N,V_httpHeadersForRemoteUI
T@,&,N,V_clientInfo
TB,N,V_needsRepair
T@"NSString",&,N,V_title
T@"NSString",C,N,V_helpAnchor
T@"NSString",C,N,V_helpBook
Tq,N,V_authenticationPromptStyle
T@"NSString",&,N,V_cancelButtonString
T@"NSString",&,N,V_alternativeButtonString
TB,N,V_hideAlternativeButton
TB,N,V_hideCancelButton
TB,N,V_hideReasonString
TB,N,V_clientShouldHandleAlternativeButtonAction
T@"NSString",&,N,V_windowTitle
TB,N,V_alwaysShowUsernameField
T@"NSString",C,N,V_privacyBundleIdentifier
generatedCode
setGeneratedCode:
latitude
setLatitude:
longitude
setLongitude:
deviceClass
setDeviceClass:
deviceColor
setDeviceColor:
deviceEnclosureColor
setDeviceEnclosureColor:
notificationDisclaimer
setNotificationDisclaimer:
T@"NSNumber",C,N
initWithRequest:
_hasApplicationMetaData
realUserVerificationData
setRealUserVerificationData:
_realUserVerificationData
T@"AKAuthorizationRequest",R,C,N,V_request
T@"NSString",C,N,V_realUserVerificationData
validateLoginCode:forAppleID:withCompletion:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
fetchAppListWithAltDSID:completion:
deleteAuthorizationDatabaseWithCompletion:
revokeAuthorizationForApplicationWithClientID:completion:
verifyMasterKey:withContext:completion:
persistMasterKeyVerifier:withContext:completion:
accountNamesForAltDSID:completion:
fetchURLBagFromCache:altDSID:completion:
T@"<AKPrivateEmailUIProvider>",&,N,V_uiProvider
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
shouldCapturePromptBugForContext:
userInfoFromContext:
userInfoFromAccount:
associatedDomains
setAssociatedDomains:
deviceName
setDeviceName:
isRapportLogin
setIsRapportLogin:
shouldSkipAuthorizationUI
setShouldSkipAuthorizationUI:
_associatedDomains
_deviceName
T@"NSArray",C,N,V_associatedDomains
T@"NSString",C,N,V_deviceClass
T@"NSString",C,N,V_deviceName
initWithAddress:forKey:
initWithAddress:forKey:withBundleId:
privateEmailAddress
_privateEmailAddress
T@"NSString",R,C,N,V_clientAppBundleId
T@"NSString",R,C,N,V_privateEmailAddress
initWithInfo:
_initWithInfo:
buildNumber
operatingSystemName
operatingSystemVersion
model
colorCode
enclosureColorCode
coverGlassColorCode
housingColorCode
backingColorCode
trusted
inCircle
lastUpdatedDate
machineId
_trusted
_inCircle
_operatingSystemName
_operatingSystemVersion
_model
_colorCode
_enclosureColorCode
_coverGlassColorCode
_housingColorCode
_backingColorCode
_lastUpdatedDate
_machineId
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_buildNumber
T@"NSString",R,C,N,V_operatingSystemName
T@"NSString",R,C,N,V_operatingSystemVersion
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_colorCode
T@"NSString",R,C,N,V_enclosureColorCode
T@"NSString",R,C,N,V_coverGlassColorCode
T@"NSString",R,C,N,V_housingColorCode
T@"NSString",R,C,N,V_backingColorCode
TB,R,N,V_trusted
TB,R,N,V_inCircle
T@"NSDate",R,C,N,V_lastUpdatedDate
T@"NSString",R,C,N,V_machineId
T@"NSDictionary",R,C,N,V_additionalInfo
initWithBundleIdentifier:bundleName:bundleDescription:bundleType:otherInfo:
bundleIdentifier
bundleName
bundleDescription
bundleType
otherInfo
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_bundleName
T@"NSString",R,C,N,V_bundleDescription
TQ,R,N,V_bundleType
T@"NSDictionary",R,C,N,V_otherInfo
canPerformAuthorization
shouldProcessURL:
isURLFromAppleOwnedDomain:
performAuthorizationWithContext:completion:
revokeAuthorizationWithContext:completion:
_appleIDAuthorizationURLs
_appleOwnedDomains
primaryApplicationInformationForWebServiceWithInfo:error:
_shouldOverrideProxiedBundleIDForContext:
T@"<AKAuthorizationUIProvider>",&
B32@0:8@16^@24
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@"NSString"16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
v20@0:8B16
v24@0:8@?16
v40@0:8@16@24@?32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKCustodianSetupResult"@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"AKCustodianContext"16@?<v@?B@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"AKCustodianContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKTrustedContactsSyncResult"@"NSError">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@?16@0:8
@"NSXPCInterface"
@"NSXPCListener"
@28@0:8@16B24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8@16B24q28
@32@0:8@16^@24
B24@0:8^@16
v48@0:8@16@24@32@?40
v40@0:8Q16@24@?32
Vv32@0:8@16@?24
v40@0:8@16q24@?32
@24@0:8^@16
@36@0:8B16@20^@28
@"NSXPCListenerEndpoint"
@"AKAppleIDAuthenticationContextManager"
@"NSLock"
@"NSData"
v24@0:8Q16
@"NSURLRequest"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
@20@0:8B16
v32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v40@0:8@16@24@32
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@32@0:8@16@?24
@"NSURLSession"
@"NSMutableDictionary"
v32@0:8@"ASAuthorizationController"16@"ASAuthorization"24
v32@0:8@"ASAuthorizationController"16@"NSError"24
v32@0:8@"ASAuthorizationController"16@"NSString"24
@"<AKFidoUIProvider>"
@"ASAuthorizationController"
@"AKFidoContext"
q16@0:8
v24@0:8q16
@"NSArray"
@"NSUUID"
v32@0:8q16@24
v32@0:8q16@"NSString"24
q24@0:8@16
@24@0:8q16
@"NSDictionary"
v32@0:8@"AKInheritanceContext"16@?<v@?@"AKBeneficiaryManifest"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"NSError">24
v32@0:8@"AKInheritanceCLIContext"16@?<v@?@"AKBeneficiaryAliasSetupResult"@"NSError">24
v24@0:8@"NSXPCInterface"16
@"NSObject"16@0:8
@"AAFXPCSession"
v24@0:8@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">40
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v48@0:8@"NSError"16@"NSString"24@"NSString"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"AKServerRequestConfiguration"16@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKFidoContext"24@?<v@?@"AKFidoAuthenticationResponse"@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8@16B24@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSData"24@?<v@?B@"NSError">32
v36@0:8@"AKAppleIDAuthenticationContext"16B24@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"NSString"@"NSDictionary"@"NSError">48
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSNumber"@"NSError">24
v56@0:8@"AKAppleIDAuthenticationContext"16@"NSError"24@"NSString"32@"NSString"40@?<v@?@"NSNumber"@"NSError">48
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKServerRequestConfiguration"24@?<v@?@"NSHTTPURLResponse"@"NSDictionary"@"NSError">32
v40@0:8@"AKAppleIDAuthenticationContext"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v40@0:8@"AKAppleIDAuthenticationContext"16@"NSUUID"24@?<v@?@"NSError">32
v48@0:8@"NSDictionary"16@"NSError"24@"NSUUID"32@?<v@?B@"NSDictionary">40
@"AKAppleIDAuthenticationController"
@"<AKAppleIDAuthenticationDelegate>"
@24@0:8@?16
Q24@0:8@16
@"NSDate"
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"AKDevice"16@0:8
v24@0:8@"AKDevice"16
@"AKDevice"
@"<AKCredentialRequestProtocol>"
@"AKAuthorizationScopesUserSelection"
@"NSNumber"
@40@0:8@16@24@32
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
@"CDPRecoveryController"
@"AKAccountRecoveryContext"
@"<CDPStateUIProvider>"
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKAuthorization"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSData"@"NSError">16
@"CoreTelephonyClient"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
d16@0:8
v24@0:8d16
@"NSValue"
@"AKAuthorizationUpgradeContext"
@"AKAuthorizationRequest"
@"AKPasswordRequest"
@"AKUserInformation"
v48@0:8@16@24@32@40
B24@0:8q16
@"AKBeneficiaryManifest"
@"AKInheritanceAccessKey"
{CGSize=dd}16@0:8
@48@0:8@16{CGSize=dd}24@40
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationUserResponse"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSError">24
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"AKAuthorizationRevokeUpgradeContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v40@0:8@"AKAuthorization"16@"AKCredentialRequestContext"24@?<v@?B@"NSError">32
B32@0:8^{__SecTrust=}16@24
v28@0:8B16@20
v32@0:8Q16@24
@40@0:8@16@24^@32
B32@0:8@16q24
@32@0:8@16q24
@"ACAccountStore"
@"ACAccountType"
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPrivateEmail"@"NSError">32
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmail"@"NSError">24
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmailContext"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
@"AKPrivateEmailClientImpl"
@20@0:8i16
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSError"40
@24@0:8Q16
@"AKAnisetteProvisioningController"
@"AKAppleIDAuthenticationContext"
@"<AKAnisetteServiceProtocol>"
@"AKAnisetteData"
@"AKAttestationData"
v40@0:8@"AKPrivateEmail"16@"NSError"24@?<v@?B@"NSError">32
@32@0:8@16Q24
@"AKPushMessage"
@28@0:8B16^@20
@"<AKURLBagDictionaryProvider>"
@"NSArray"40@0:8@"NSString"16@"NSDictionary"24@"NSArray"32
@"NSArray"24@0:8@"NSArray"16
B24@0:8@"FLFollowUpItem"16
@"NSURL"
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
@"NSDateFormatter"
@72@0:8@16@24@32@40@48@56@64
B40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
@48@0:8@16@24@32@40
@"<AKAlertHandlerUIProvider>"
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary">40
@"NSSet"16@0:8
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32@?<v@?B@"NSDictionary"@"NSURLRequest">40
v40@0:8@16@24^B32
@32@0:8d16@24
@"NSCondition"
@"NSMutableArray"
@"NSArray"24@0:8^@16
B32@0:8@"NSArray"16^@24
B32@0:8@"FLFollowUpItem"16^@24
@"FLFollowUpController"
@32@0:8q16@24
@"<AKCredential>"
@"NSObject<OS_dispatch_group>"
@"AKCircleRequestPayload"
@64@0:8@16@24@32@40@48@56
@"<AKAuthorizationUIProvider>"
v36@0:8B16@20@?28
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
B48@0:8@16@24@32@40
B48@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40
v56@0:8@"AKAppleIDAuthenticationController"16@"NSMutableDictionary"24@"NSError"32@"AKAppleIDAuthenticationContext"40@?<v@?B>48
B40@0:8@16@24^@32
@"<AKFollowUpProvider>"
@"AKCredentialRequestContext"
v32@0:8@16:24
@"NSObject<OS_nw_path_monitor>"
@"AKAppleIDServerResourceLoadDelegate"
@"<AKFollowUpItemFactory>"
@"AKAuthorizationDaemonConnection"
@"ACAccount"
@"AKAppleIDAuthenticationContext"32@0:8@"AKAppleIDAuthenticationContext"16^@24
@"<AKAuthorizationClientProtocol>"
@"NSUUID"16@0:8
@"AKAdaptiveService"
@"NSLocale"
v28@0:8B16@?20
^{__CFUserNotification=}48@0:8@16@24@32@40
v48@0:8@16q24@32@?40
@32@0:8@16B24B28
@28@0:8B16@20
@"AKCommandLineUtilities"
@24@0:8@"NSString"16
^{__CFUserNotification=}
@"NSSet"
v44@0:8@16B24q28@?36
Vv24@0:8@?16
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v40@0:8@"NSString"16@"AKUserInformation"24@?<v@?B@"NSError">32
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError">16
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSDictionary"@"NSError">28
@"<AKPrivateEmailUIProvider>"
@"AKCustodianDaemonConnection"
@56@0:8@16@24@32Q40@48
@"AKAuthorizationClientImpl"
