@(#)PROGRAM:DataDeliveryServices  PROJECT:DataDeliveryServices-1
com.apple.DataDeliveryServices.AssetService
com.apple.DataDeliveryServices.ddsserver.queue
v8@?0
%s Server shouldAcceptNewConnection: (%@)
-[DDSServer listener:shouldAcceptNewConnection:]
%s Client connection invalidated: %@
-[DDSServer listener:shouldAcceptNewConnection:]_block_invoke
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T@"<DDSManagingDelegate>",&,N
manager
T@"<DDSManaging>",R,N,V_manager
listener
T@"NSXPCListener",R,N,V_listener
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
clientConnections
T@"NSMutableSet",R,N,V_clientConnections
_ContentVersion
_CompatibilityVersion
_UnarchivedSize
AssetLocale
Locale
AssetRegion
Province
Country
City
ContentType
AssetType
%s Asked to clear cache...
-[DDSAssetQueryResultCache clearCache]
%s Cache will evict: %@
-[DDSAssetQueryResultCache cache:willEvictObject:]
assetsByQueryCache
T@"NSCache",&,N,V_assetsByQueryCache
timerOverrideDuration
-[DDSScheduledTimerImpl initWithExpirationHandler:]
/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-26/Sources/DDSScheduledTimer.m
[NSThread isMainThread]
SignificantTimeChangeNotification
-[DDSScheduledTimerImpl dealloc]
-[DDSScheduledTimerImpl invalidate]
-[DDSScheduledTimerImpl assetTimerFired]
+[DDSScheduledTimerImpl nextFireDateForDate:]
[fireDate timeIntervalSinceDate:date] > 3 * 3600
[fireDate timeIntervalSinceDate:date] < 28 * 3600
-[DDSScheduledTimerImpl updateAssetTimer]
%s Next asset download date: %@
com.apple.MobileAsset.LinguisticData
com.apple.DataDeliveryServices.ddsassetcenter.queue
%s Adding AssetCenter delegate: %@
-[DDSAssetCenter registerDelegate:]_block_invoke
%s Removing AssetCenter delegate: %@
-[DDSAssetCenter unregisterDelegate:]_block_invoke
%s Returning assertions: (%@) for clientID: (%@)
-[DDSAssetCenter assertionIDsForClientID:]_block_invoke
v16@?0@"NSSet"8
%s Found assertions: (%@) for clientID: (%@)
-[DDSAssetCenter assertionIDsForClientID:]
%s Letting delegates know assets updated: %@
-[DDSAssetCenter serverDidUpdateAssetsWithType:]_block_invoke
v24@?0@"<DDSAssetCenterDelegate>"8^B16
provider
T@"<DDSAssetProviding>",R,N,V_provider
managerInterface
T@"<DDSManaging>",R,N,V_managerInterface
delegates
T@"NSMutableSet",R,N,V_delegates
assetObserver
T@"<DDSAssetObserving>",R,N,V_assetObserver
+[DDSMobileAssetv2QueryAdapter maAssetQueryForddsAssetQuery:compatiblilityVersion:internalInstall:]_block_invoke
%s Added key: %@, value: Unspecified
%s Added key: %@, value: %@
%s Added key: %@, values: %@
%s Skipping key: %@ values: %@ (is this the region dict? that's handled elsewhere)
v32@?0@"NSString"8@"NSMutableSet"16^B24
+[DDSMobileAssetv2QueryAdapter maAssetQueryForddsAssetQuery:compatiblilityVersion:internalInstall:]
http://mesu.apple.com/assets/
https://basejumper.apple.com/assets/
UseInternalServer
com.apple.DataDeliveryServices.reachabilityQueue
%s Could not create reachability!
-[DDSReachabilityObserver queryInitialState]
%s Could not set reachability callback
%s started monitoring reachability
%s Internet reachability did change %@
-[DDSReachabilityObserver reachabilityDidChange:]
reachable
not reachable
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
reachabilityRef
T^{__SCNetworkReachability=},R,N,V_reachabilityRef
isInternetReachable
TB,N,V_isInternetReachable
T@"<DDSReachabilityObserverDelegate>",&,N,V_delegate
TB,R,N,V_reachable
Keyboards
DataDeliveryServices
apple-internal-install
BuildVersion
yyyy-MM-dd_HH:mm:ss
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSString"16^B24
-[DDSAttributeFilter initWithCoder:]
<%@: %p, filters: %@>
supportsSecureCoding
TB,R
filters
T@"NSMutableDictionary",&,N,V_filters
B16@?0@"NSDictionary"8
ContentPath
<%@: %p, type: %@, path: %@>
parentAsset
T@"DDSAsset",&,N,V_parentAsset
contents
T@"NSDictionary",&,N,V_contents
path
T@"NSURL",R,N
region
T@"NSDictionary",R,N
type
T@"NSString",R,N
fileName
locale
__InstallDate
%@::%@
%@ : %@, 
<%@: %p, %@>
maAsset
T@"MAAsset",&,N,V_maAsset
debuggingID
T@"NSString",&,N,V_debuggingID
uniqueIdentifier
T@"NSString",&,N,V_uniqueIdentifier
attributes
T@"NSDictionary",R,N,V_attributes
compatibilityVersion
TQ,R,N
contentVersion
localURL
T@"NSURL",R,N,V_localURL
assetState
TQ,R,N,V_assetState
dataType
T@"NSString",R,N,V_dataType
assetType
T@"NSString",R,N,V_assetType
installDate
shortName
assetUUID
%s Delay: %ld Now: %@ Future: %@
-[DDSBackgroundActivityScheduler scheduleActivityWithIdentifier:interval:tolerance:]
%s Scheduling activity: %@ for approximately %@ (tolerance of %ld seconds)
%s Scheduled activity %@ fired!
-[DDSBackgroundActivityScheduler scheduleActivityWithIdentifier:interval:tolerance:]_block_invoke
v16@?0@?<v@?q>8
schedulerByIdentifier
T@"NSMutableDictionary",&,N,V_schedulerByIdentifier
T@"<DDSBackgroundActivitySchedulerDelegate>",&,N,V_delegate
com.apple.DataDeliveryServices
%s Descriptor with assertion id: %@ already added.
-[DDSAssertion addDescriptorWithAssertionID:clientID:policy:]
v24@?0@"DDSAssertDescriptor"8^B16
-[DDSAssertion initWithCoder:]
<%@: %p, query: %@, policy: %@>
descriptors
T@"NSMutableSet",&,N,V_descriptors
lastUpdated
T@"NSDate",&,N,V_lastUpdated
query
T@"DDSAssetQuery",R,N,V_query
policy
T@"DDSAssetPolicy",R,N
assertionIdentifiers
T@"NSSet",R,N
clientIdentifiers
com.apple.DataDeliveryServices.update
com.apple.DataDeliveryServices.retry
MetadataSyncState
Date
Status
AttemptCount
%s Retry already scheduled
-[DDSRemoteSyncState completedUpdateCycleWithError:]
%s Sync failed, giving up for today
%s Requesting retry...
-[DDSRemoteSyncState requestRetry]
-[DDSRemoteSyncState loadState]
/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-26/Sources/DDSRemoteSyncState.m
[date isKindOfClass:[NSDate class]]
[buildVersion isKindOfClass:[NSString class]]
%s Loaded sync state (date: %@, buildVersion: %@, attempts: %lu, status: %lu)
%s Saving sync state (date: %@, buildVersion: %@, attempts: %lu, status: %lu
-[DDSRemoteSyncState saveState]
date
T@"NSDate",&,N,V_date
syncStatus
Tq,N,V_syncStatus
attemptCount
TQ,N,V_attemptCount
buildVersion
T@"NSString",&,N,V_buildVersion
scheduler
T@"DDSBackgroundActivityScheduler",&,N,V_scheduler
T@"<DDSRemoteSyncStateDelegate>",W,N,V_delegate
Contents
Required
Optional
Delta
Language
Script
InputLayout
ContactLabel
Home
Work
Lexicon
LexiconDelta
Phrases
LanguageModel
LanguageModelDelta
SpellChecker
SpellCheckerDelta
com.apple.DataDeliveryServices.DDSAssetQuery
<%@: %p, at: %@, locO: %d, iO: %d, latO: %d, fil: %@>
filter
T@"DDSAttributeFilter",R,N,V_filter
localOnly
TB,N,V_localOnly
installedOnly
TB,N,V_installedOnly
latestOnly
TB,N,V_latestOnly
com.apple.DataDeliveryServices.ddsinterface.queue
%s Created interface
+[DDSInterface sharedInstance]_block_invoke
%s XPC connection to server invalidated.
-[DDSInterface createConnectionIfNecessary]_block_invoke
%s XPC connection to server interrupted.
%s Using NSXPCConnectionPrivileged for iOS connection
+[DDSInterface xpcConnectionOptionsForServer]
v16@?0@"NSError"8
-[DDSInterface serviceObjectProxy]_block_invoke
-[DDSInterface syncServiceObjectProxy]_block_invoke
%s Using test local server
-[DDSInterface server]
%s Interface is using remote server: (%@)
-[DDSInterface syncServer]
%s Interface is using sync remote server: (%@)
serverOverride
T@"<DDSManaging>",&,N,V_serverOverride
remoteServer
T@"NSXPCConnection",&,N,V_remoteServer
sharedInstance
T@"DDSInterface",R,N,V_sharedInstance
mDelegate
T@"<DDSManagingDelegate>",&,N,V_mDelegate
connectionUsageQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_connectionUsageQueue
T@"<DDSManagingDelegate>",&,N,V_delegate
ddsLogLevel
DDSLog
com.apple.keyboard.dataDeliveryServices.
assetDownload
updateCycle
duration
retries
success
process
assetName
UpdateCatalogAnalytic
com.apple.DataDeliveryServices.DDSAnalytics
%s Record asset action: %@ for %@
-[DDSAnalytics recordAssetAction:forAsset:]
%s Report asset download analytic: %@
-[DDSAnalytics reportAssetDownloadAnalytic:]
@"NSMutableDictionary"8@?0
%s Record update cycle action: %@
-[DDSAnalytics recordUpdateCycleState:]_block_invoke
%s Report update catalog analytic: %@
-[DDSAnalytics reportUpdateCycleAnalytic:]
/var/tmp/dds_dump_%@.log
Installed Assets:
In Progress:
%@, (start: %@, state: %@ retries: %lu)
v32@?0@"NSString"8@"DDSTimedAnalytic"16^B24
%s Dumping: 
-[DDSAnalytics dumpAssetLogWithInstalledAssets:]
None
Requested
Retried
Completed
Failed
analyticByIdentifier
T@"NSMutableDictionary",R,N,V_analyticByIdentifier
analyticQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_analyticQueue
.dds.assets-updated
%s Received assets updated notification for: %@
-[DDSAssetObserver receivedAssetsUpdatedNotification:]
T@"<DDSAssetObservingDelegate>",&,N,V_delegate
typesToObserve
T@"NSSet",&,N,V_typesToObserve
+[DDSMobileAssetv1PredicateAdapter predicateForQuery:compatibilityVersion:internalInstall:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-26/Sources/DDSMobileAssetv1PredicateAdapter.m
[allowedValues.anyObject isKindOfClass:NSString.class] || [allowedValues.anyObject isKindOfClass:NSDictionary.class]
%K == %@
%K == %@ || %K == %@
%s Compatibility predicate: %@
+[DDSMobileAssetv1PredicateAdapter compatibilityPredicateForCompatabilityVersion:internalInstall:]
%K ==[c] %@
%K == nil
SUBQUERY(%K.@allValues, $x, $x != '').@count == 0
%@.%@
%K != nil
T@"DDSLinguisticAttributeFilter",R,N
TQ,N,V_retries
TB,N,V_success
startTime
Td,N,V_startTime
endTime
Td,N,V_endTime
lastAction
Ti,N,V_lastAction
identifier
T@"NSString",R,N,V_identifier
durationInSec
-[DDSAssetPolicy initWithCoder:]
<%@: %p, pdf: %ld, doc: %d, dwp: %d>
idleUsageEvictionPeriod
T@"NSDateComponents",&,N,V_idleUsageEvictionPeriod
preferredDownloadFrequency
Tq,N,V_preferredDownloadFrequency
downloadOverCellular
TB,N,V_downloadOverCellular
downloadWithoutPower
TB,N,V_downloadWithoutPower
notificationDownloadTriggers
T@"NSSet",C,N,V_notificationDownloadTriggers
downloadCompletionNotification
T@"NSString",C,N,V_downloadCompletionNotification
asset
T@"DDSAsset",&,N,V_asset
MobileAssetProperties
com.apple.DataDeliveryServices.DDSMobileAssetv2Provider
-[DDSMobileAssetv2Provider allContentItemsMatchingQuery:error:]
-[DDSMobileAssetv2Provider assetsForQuery:errorPtr:]
%s assetsForQuery raw results: %@, result value: %lu
%s Searching for regions in filters: %@, found allowed regions: %@
/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-26/Sources/DDSMobileAssetv2Provider.m
[allowedRegions isKindOfClass:NSArray.class]
[allowedRegion isKindOfClass:NSDictionary.class]
%s Found asset region: %@ didMatch: %d
%s Skipping regions with allowed regions: %@
%s assetsForQuery: %@ final result: %@ was cached: %d
%s Begin download for assertions: %@
-[DDSMobileAssetv2Provider beginDownloadForAssertions:discretionaryDownload:]
-[DDSMobileAssetv2Provider beginDownloadForAssertions:discretionaryDownload:]_block_invoke
Error updating assertions
message
v24@?0@"DDSAssertion"8@"NSError"16
%s Begin download for assertion: %@
-[DDSMobileAssetv2Provider beginDownloadForAssertion:discretionaryDownload:handler:]
%s Downloading assets %@
%s handling asset: %@, state: %ld
-[DDSMobileAssetv2Provider beginDownloadForAssertion:discretionaryDownload:handler:]_block_invoke
%s Remaining: %ld in set: %@
Error downloading asset: %@
v24@?0@"DDSAsset"8Q16
v16@?0@"MAProgressNotification"8
-[DDSMobileAssetv2Provider beginDownloadForAssets:withPolicy:discretionaryDownload:error:handler:]_block_invoke
v16@?0q8
%s Updating catalog for LinguisticData...
-[DDSMobileAssetv2Provider updateCatalogForAssetTypes:discretionaryDownload:withCompletion:]
%s Updated catalog result %@ (result: %lu)
-[DDSMobileAssetv2Provider updateCatalogForAssetTypes:discretionaryDownload:withCompletion:]_block_invoke
Sucess
Fail
Error updating catalog for %@: %lu
-[DDSMobileAssetv2Provider removeAssetsForAssertions:]_block_invoke
v24@?0@"DDSAssertion"8^B16
%s Removing old assets for assertions: %@
-[DDSMobileAssetv2Provider removeOldAssetsForAssertions:]
%s All assets eligible for removal: %@
-[DDSMobileAssetv2Provider removeOldAssetsForAssertions:]_block_invoke
%s Latest assets not eligible for removal: %@
%s Removing assets: %@
-[DDSMobileAssetv2Provider removeAssets:]
%s Purged asset (%@) successfully
-[DDSMobileAssetv2Provider removeAssets:]_block_invoke
%s didChangeDownloadState: %ld, asset: %@
-[DDSMobileAssetv2Provider didChangeDownloadState:forAsset:]
%s didCompleteDownloadForAssertion: %@
-[DDSMobileAssetv2Provider didCompleteDownloadForAssertion:error:]
%s didUpdateManifestWithError: %@
-[DDSMobileAssetv2Provider didUpdateManifestWithError:]
Info.plist
%s Supported compatibility version = %ld
+[DDSMobileAssetv2Provider supportedCompatibilityVersion]_block_invoke
T@"<DDSAssetProvidingDelegate>",&,N
remainingAssetsByAssertion
T@"NSMutableDictionary",R,N,V_remainingAssetsByAssertion
encounteredAssertionUpdateError
TB,N,V_encounteredAssertionUpdateError
assetQueryResultsCache
T@"<DDSAssetQueryResultCaching>",&,N,V_assetQueryResultsCache
downloadStateByAssetID
T@"NSMutableDictionary",&,N,V_downloadStateByAssetID
T@"<DDSAssetProvidingDelegate>",&,N,Vdelegate
/System/Library/LinguisticData
<%@ %p: aID: %@ cID: %@>
clientIdentifier
T@"NSString",&,N,V_clientIdentifier
assertionIdentifier
T@"NSString",&,N,V_assertionIdentifier
T@"DDSAssetPolicy",&,N,V_policy
/Library/DataDeliveryServices/
ddsassertiondata.plist
%s Loading assertion data from URL: (%@)
-[DDSAssertionDataHandler loadAssertionData]
%s Saved assertion data to URL: (%@)
-[DDSAssertionDataHandler saveAssertionData:]
%s Creating directory at URL: %@, success: %d
-[DDSAssertionDataHandler assertionContentDirectory]_block_invoke
%s Verified the DDS folder is present at %@
com.apple.DataDeliveryServices.DDSAssertionTracker
%s Add assertion (%@) with id (%@) for client (%@)
-[DDSAssertionTracker addAssertionForQuery:policy:assertionID:clientID:]_block_invoke
%s Remove assertion with id: %@
-[DDSAssertionTracker removeAssertionWithID:]_block_invoke
%s Removed descriptor id: %@
%s Removing assertion: %@
%s Descriptors: %@
%s Calling delegate to remove assertion: %@
-[DDSAssertionTracker removeAssertionWithID:]
%s Setting last updated for assertion (%@) set to (%@)
-[DDSAssertionTracker didUpdateAssertion:atDate:]_block_invoke
T@"<DDSAssetTrackingDelegate>",&,N
trackedAssertions
T@"NSMutableArray",R,N,V_trackedAssertions
trackedAssertionSets
T@"NSMutableDictionary",R,N,V_trackedAssertionSets
dataHandler
T@"<DDSAssertionDataHandling>",R,N,V_dataHandler
T@"<DDSAssetTrackingDelegate>",&,N,V_delegate
com.apple.DataDeliveryServices.DDSManager.UpdateCycle
%s Beginning update cycle (forced %d, discretionary %d)...
-[DDSManager beginUpdateCycleForced:discretionaryDownload:]
%s Updating catalog for asset types: %@
%s Cycle will force update all assertions: %@
-[DDSManager beginUpdateCycleForced:discretionaryDownload:]_block_invoke
%s Cycle will update pending assertions: %@
%s Cycle will update time eligible assertions: %@
%s Update cycle already triggered, holding with pending assertions...
%s Add assertion for query: %@ policy: (%@) assertionID: (%@) clientID: (%@)
-[DDSManager addAssertionForQuery:policy:assertionID:clientID:]
%s Remove assertion with ID: (%@)
-[DDSManager removeAssertionWithID:]
%s For clientID (%@), found assertion IDs (%@)
-[DDSManager assertionIDsForClientID:reply:]
%s Handle new assertions: %@
-[DDSManager handleNewAssertions:]
%s Handle removed assertions: %@
-[DDSManager handleRemovedAssertions:]
%s Download state: %lu for asset: %@
-[DDSManager didChangeDownloadState:forAsset:]
%s Completed download for assertion (%@) with error: %@
-[DDSManager didCompleteDownloadForAssertion:error:]
%s Completed download for assertions (%@) with error: %@
-[DDSManager didCompleteDownloadForAssertions:error:]
%s Calling didEndUpdateCycle
%s didUpdateManifest with error: %@
-[DDSManager didUpdateManifestWithError:]
%s Begin update cycle requested...
-[DDSManager remoteSyncStateRequestsUpdate]
%s Retry update cycle requested...
-[DDSManager remoteSyncStateRequestsRetry]
%s Update cycled ended with error: %@
-[DDSManager didEndUpdateCycleWithError:]
%s Begin cycle for missed/remaining pending assertions...
%s Asset log dump requested!
-[DDSManager triggerDump]
%s Asset update requested via ddsutil
-[DDSManager triggerUpdate]
%s Requesting clean v1 LinguisticData repository
-[DDSManager deleteV1AssetsIfNecessary]_block_invoke
%s Finished clean v1 LinguisticData repository
tracker
T@"<DDSAssetTracking>",R,N,V_tracker
timer
T@"DDSScheduledTimer",R,N,V_timer
remoteSyncState
T@"DDSRemoteSyncState",R,N,V_remoteSyncState
pendingAssertionsToUpdate
T@"NSMutableSet",&,N,V_pendingAssertionsToUpdate
pendingAssertionsQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_pendingAssertionsQueue
DDS Error: %s Client connection interrupted: %@
DDS Error: %s No values specified for key (%@)
DDS Error: %s Unexpected failure adding key (%@)/value (%@) pair
DDS Error: %s Could not set reachability queue
DDS Error: %s Error decoding object for key %@
DDS Error: %s Error decoding descriptors: (%@)
DDS Error: %s Error creating proxy (%@)
DDS Error: %s Error creating sync proxy (%@)
DDS Error: %s Unexpected type of value: %@
DDS Error: %s Error decoding %@ (%@)
DDS Error: %s assets query: %@
DDS Error: %s Error for queryMetaDataSync: %lu
DDS Error: %s Encountered error: %@
DDS Error: %s Unexpected installedOnly/localOnly YES value on assertion's query: %@.  Are you really, really sure you meant that?
DDS Error: %s Unexpected error downloading asset %@, result: %ld
DDS Error: %s %@
DDS Error: %s Error removing assets (%@) for query: %@
DDS Error: %s Failed to purged asset (%@) with result: %lu
DDS Error: %s Error (%@) unarchiving assertion content
DDS Error: %s Error (%@) loading assertion data (%@).  Though, this is expected if the file doesn't exist yet.
DDS Error: %s Error (%@) writing content: %@
DDS Error: %s Error (%@) archiving content at URL: %@
DDS Error: %s Error (%@) creating directory at path %@
DDS Error: %s Unexpected error dumping assets: %@
DDSManaging
NSObject
DDSServer
NSXPCListenerDelegate
DDSLinguisticAttributeFilter
DDSAssetQueryResultCache
NSCacheDelegate
DDSAssetQueryResultCaching
DDSScheduledTimerImpl
DDSScheduledTimer
Testing
DDSAssetCenter
DDSManagingDelegate
DDSAssetObservingDelegate
DDSMobileAssetv2QueryAdapter
DDSReachabilityObserver
DDSAttributeFilter
NSSecureCoding
NSCoding
DDSContentItemMatcher
DDSContentItem
DDSAsset
DDSBackgroundActivityScheduler
DDSAssertion
NSCopying
DDSRemoteSyncState
DDSBackgroundActivitySchedulerDelegate
DDSAssetQuery
DDSInterface
DDSAnalytics
DDSAssetObserver
DDSAssetObserving
DDSMobileAssetv1PredicateAdapter
DDSLinguisticAssetQuery
DDSTimedAnalytic
DDSAssetPolicy
DDSAssetDownloadAnalytic
DDSMobileAssetv2Provider
DDSAssetProviding
DDSAssertDescriptor
DDSAssertionDataHandler
DDSAssertionDataHandling
DDSAssertionTracker
DDSAssetTracking
DDSManager
DDSAssetProvidingDelegate
DDSAssetTrackingDelegate
DDSRemoteSyncStateDelegate
initWithManager:
init
setDelegate:
cStringUsingEncoding:
initWithMachServiceName:
_setQueue:
resume
stringWithFormat:
manager
setExportedObject:
interface
setExportedInterface:
setRemoteObjectInterface:
queue
handleEndedConnection:
setInvalidationHandler:
setInterruptionHandler:
clientConnections
addObject:
removeObject:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
addAssertionForQuery:policy:assertionID:clientID:
removeAssertionWithID:
assertionIDsForClientID:reply:
triggerDump
triggerUpdate
delegate
interfaceWithProtocol:
arrayWithObjects:count:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
setClass:forSelector:argumentIndex:ofReply:
invalidate
dealloc
sharedInstance
listener:shouldAcceptNewConnection:
listener
.cxx_destruct
_manager
_listener
_queue
_clientConnections
addAllowedValue:forKey:
setObject:forKeyedSubscript:
addContentType:
addContentItemLocale:
addAssetLocale:
addRegionWithCountry:province:city:
setCountLimit:
assetsByQueryCache
objectForKey:
copy
setObject:forKey:
removeAllObjects
cache:willEvictObject:
cachedAssetsForQuery:
cacheAssets:forQuery:
clearCache
setAssetsByQueryCache:
_assetsByQueryCache
isMainThread
updateAssetTimer
calendarWithIdentifier:
components:fromDate:
dateFromComponents:
setDay:
setHour:
setMinute:
dateByAddingComponents:toDate:options:
timeIntervalSinceDate:
date
nextFireDateForDate:
dateByAddingTimeInterval:
assetTimerFired
initWithFireDate:interval:target:selector:userInfo:repeats:
currentRunLoop
addTimer:forMode:
initWithExpirationHandler:
_expirationHandler
_assetTimer
scheduledTimerWithExpirationHandler:
_impl
setOverrideInterval:
initWithProvider:managerInterface:
setWithObject:
observeAssetTypes:
delegates
provider
assetsForQuery:errorPtr:
allContentItemsMatchingQuery:error:
contentItemsFromAssets:matchingFilter:
managerInterface
serverDidUpdateAssetsWithType:
didUpdateAssetsWithType:
enumerateObjectsUsingBlock:
registerDelegate:
unregisterDelegate:
assetsForQuery:error:
addAssertionForAssetsWithQuery:policy:assertionID:clientID:
removeAssertionWithIdentifier:
assertionIDsForClientID:
assetObserver
_provider
_managerInterface
_delegates
_assetObserver
assetType
initWithType:
setDoNotBlockBeforeFirstUnlock:
filter
filters
anyObject
count
allObjects
firstObject
isEqualToString:
addKeyValueNull:
addKeyValuePair:with:
mutableCopy
addKeyValueArray:with:
enumerateKeysAndObjectsUsingBlock:
stringFromInteger:
maAssetQueryForddsAssetQuery:compatiblilityVersion:internalInstall:
queryInitialState
serverURL
UTF8String
reachabilityStateDidChange:
reachabilityDidChange:
reachable
setQueue:
reachabilityRef
isInternetReachable
setIsInternetReachable:
_reachable
_isInternetReachable
_delegate
_reachabilityRef
systemLocale
setLocale:
setDateFormat:
stringFromDate:
initWithDictionary:
addAllowedValues:forKey:
enumerateAllowedValuesAndKeys:
dictionary
containsObject:
allowedValuesForKey:
_setForKey:
unionSet:
minusSet:
encodeObject:forKey:
decodeTopLevelObjectOfClasses:forKey:error:
isEqualToQueryFilter:
attributeFilter
attributeFilterWithDictionary:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
addEntriesFromFilter:
entriesMatchingAttributes:
doesContainAttributes:
removeAllowedValue:forKey:
removeAllowedValues:forKey:
setFilters:
_filters
attributes
array
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
shouldLenientlyMatchWithContentItemsForRegion:
_anyStringIn:matches:acceptUnspecifiedValue:
_anyDictionaryIn:matches:shouldLenientlyMatch:
initWithParentAsset:contents:
length
caseInsensitiveCompare:
_string:matches:acceptUnspecifiedValue:
allKeys
_dictionary:matches:acceptUnspecifiedAttribute:lenientMatch:
assetContentItemsMatching:contentItems:parentAsset:
contents
parentAsset
localURL
URLByAppendingPathComponent:
isEqualToContentItem:
path
fileName
type
locale
region
setParentAsset:
setContents:
_parentAsset
_contents
setMaAsset:
getLocalUrl
addEntriesFromDictionary:
unsignedIntegerValue
stringValue
maAsset
uniqueIdentifierForMAAsset:
assetUUID
uniqueIdentifier
stringByAppendingString:
stringByAppendingFormat:
pathComponents
objectAtIndexedSubscript:
string
appendString:
appendFormat:
debuggingID
isEqualToAsset:
asset
assetWithMAAsset:
debuggingIDsForAssets:
_mergeAttributes:
compatibilityVersion
contentVersion
installDate
shortName
assetState
dataType
setDebuggingID:
setUniqueIdentifier:
_attributes
_localURL
_assetState
_dataType
_assetType
_maAsset
_debuggingID
_uniqueIdentifier
setSchedulerByIdentifier:
initWithIdentifier:
setQualityOfService:
setRepeats:
setDelay:
setTolerance:
_setAdditionalXPCActivityProperties:
schedulerByIdentifier
performScheduledActivityWithIdentifier:
removeObjectForKey:
scheduleWithBlock:
scheduleActivityWithIdentifier:interval:tolerance:
cancelActivityWithIdentifier:
_schedulerByIdentifier
descriptors
assertionIdentifier
clientIdentifier
initWithPolicy:assertionID:clientID:
invalidateDescription
setPreferredDownloadFrequency:
policy
downloadWithoutPower
setDownloadWithoutPower:
downloadOverCellular
setDownloadOverCellular:
preferredDownloadFrequency
query
decodeObjectOfClass:forKey:
lastUpdated
allocWithZone:
initWithQuery:
setDescriptors:
setLastUpdated:
isEqualToAssertion:
isEqualToDate:
copyWithZone:
addDescriptorWithAssertionID:clientID:policy:
clientIdentifiers
assertionIdentifiers
removeDescriptorWithClientID:
removeDescriptorWithAssertionID:
_description
_lastUpdated
_query
_descriptors
setScheduler:
scheduler
loadState
shouldInitiateRegularUpdateCycle
requestUpdate
scheduleRegularUpdate
timeBetweenSyncs
attemptCount
nextUpdateTimeIntervalForAttemptCount:
timeIntervalSinceNow
buildVersionString
buildVersion
syncStatus
setSyncStatus:
setAttemptCount:
scheduleRetry
setDate:
saveState
remoteSyncStateRequestsUpdate
remoteSyncStateRequestsRetry
resetState
requestRetry
earlierDate:
setBuildVersion:
integerValue
numberWithInteger:
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
timeIntervalUntilNextRegularUpdate
beganUpdateCycle
completedUpdateCycleWithError:
_syncStatus
_date
_attemptCount
_buildVersion
_scheduler
initWithAssetType:filter:
initWithAssetType:filter:localOnly:installedOnly:latestOnly:
localOnly
numberWithBool:
installedOnly
latestOnly
boolValue
isEqualToAssetQuery:
setInstalledOnly:
setLocalOnly:
setLatestOnly:
assetType:
_localOnly
_installedOnly
_latestOnly
_filter
cString
connectionUsageQueue
server
syncServer
xpcConnectionOptionsForServer
initWithMachServiceName:options:
teardownXPCConnection
createConnectionIfNecessary
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
serverOverride
serviceObjectProxy
syncServiceObjectProxy
setServerOverride:
remoteServer
setRemoteServer:
mDelegate
setMDelegate:
_serverOverride
_remoteServer
_sharedInstance
_mDelegate
_connectionUsageQueue
stringForAction:
analyticQueue
analyticByIdentifier
initWithAsset:
updateWithAction:
reportAssetDownloadAnalytic:
durationInSec
success
processName
identifier
reportUpdateCycleAnalytic:
retries
initWithString:
startTime
initWithTimeIntervalSince1970:
lastAction
writeToFile:atomically:encoding:error:
processInfo
recordAssetAction:forAsset:
recordUpdateCycleState:
dumpAssetLogWithInstalledAssets:
_analyticByIdentifier
_analyticQueue
addObserverForTypes:
typesToObserve
defaultCenter
receivedAssetsUpdatedNotification:
addObserver:selector:name:object:suspensionBehavior:
object
postNotificationName:object:
notifyObserversAssetsUpdatedForType:
setTypesToObserve:
_typesToObserve
predicateForQuery:compatibilityVersion:internalInstall:
predicateForKey:matchingAnyStringIn:
predicateForKey:matchingAnyDictionaryIn:acceptUnspecifiedValue:acceptUnspecifiedAttribute:lenientMatch:
compatibilityPredicateForCompatabilityVersion:internalInstall:
andPredicateWithSubpredicates:
regionKeys
setWithObjects:
predicateWithFormat:
numberWithUnsignedLong:
predicateWithValue:
orPredicateWithSubpredicates:
arrayByAddingObject:
predicateForKey:matchingString:
predicateForAssetQuery:compatiblilityVersion:
extractRegionDictFromFilter:
localeWithLocaleIdentifier:
languageCode
initWithLanguageIdentifier:
setLastAction:
timeIntervalSince1970
setStartTime:
setRetries:
setSuccess:
setEndTime:
endTime
_success
_lastAction
_identifier
_retries
_startTime
_endTime
downloadCompletionNotification
idleUsageEvictionPeriod
notificationDownloadTriggers
isEqualToAssetPolicy:
assetPolicy
setNotificationDownloadTriggers:
setDownloadCompletionNotification:
setIdleUsageEvictionPeriod:
_downloadOverCellular
_downloadWithoutPower
_preferredDownloadFrequency
_notificationDownloadTriggers
_downloadCompletionNotification
_idleUsageEvictionPeriod
setAsset:
_asset
addObjectsFromArray:
assetQueryResultsCache
supportedCompatibilityVersion
returnTypes:
queryMetaDataSync
results
shouldMatchAttributeValue:givenValue:
state
latestAssetsOnlyFromAssets:
setEncounteredAssertionUpdateError:
remainingAssetsByAssertion
encounteredAssertionUpdateError
errorWithDomain:code:userInfo:
didCompleteDownloadForAssertions:error:
beginDownloadForAssertion:discretionaryDownload:handler:
initWithArray:
didCompleteDownloadForAssertion:error:
beginDownloadForAssets:withPolicy:discretionaryDownload:error:handler:
isStalled
totalWritten
totalExpected
didChangeDownloadState:forAsset:
attachProgressCallBack:
downloadOptionsForPolicy:discretionaryDownload:
startDownload:then:
setAllowsCellularAccess:
setRequiresPowerPluggedIn:
setDiscretionary:
didUpdateManifestWithError:
startCatalogDownload:options:then:
beginUpdateManifest
latestBetweenAssetA:AssetB:
allValues
removeAssets:
purge:
downloadStateByAssetID
stringWithUTF8String:
stringByAppendingPathComponent:
defaultManager
fileExistsAtPath:
initWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
beginDownloadForAssertions:discretionaryDownload:
updateCatalogForAssetTypes:discretionaryDownload:withCompletion:
removeAssetsForAssertions:
removeOldAssetsForAssertions:
setAssetQueryResultsCache:
setDownloadStateByAssetID:
_encounteredAssertionUpdateError
_remainingAssetsByAssertion
_assetQueryResultsCache
_downloadStateByAssetID
isEqualToDescriptor:
setClientIdentifier:
setAssertionIdentifier:
setPolicy:
_clientIdentifier
_assertionIdentifier
_policy
assertionContentURL
dataWithContentsOfURL:options:error:
unarchivedObjectOfClasses:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToURL:options:error:
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
assertionContentDirectory
loadAssertionData
saveAssertionData:
initWithDataHandler:
trackedAssertions
assertionDueForUpdateFrom:SinceDate:
intervalForDownloadFrequency:
dataHandler
handleNewAssertions:
handleRemovedAssertions:
didUpdateAssertion:atDate:
assertionDueForUpdateSinceDate:
allAssertions
trackedAssetTypes
trackedAssertionSets
_trackedAssertions
_trackedAssertionSets
_dataHandler
initWithProvider:tracker:
deleteV1AssetsIfNecessary
remoteSyncState
didStartUpdateCycle
tracker
pendingAssertionsQueue
setPendingAssertionsToUpdate:
pendingAssertionsToUpdate
didEndUpdateCycleWithError:
beginUpdateCycleForced:discretionaryDownload:
willRetryUpdateCycle
timer
_tracker
_timer
_remoteSyncState
_pendingAssertionsToUpdate
_pendingAssertionsQueue
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@40
v24@0:8@16
v32@0:8@16@?24
v16@0:8
v48@0:8@"DDSAssetQuery"16@"DDSAssetPolicy"24@"NSString"32@"NSString"40
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSSet">24
@"<DDSManagingDelegate>"16@0:8
v24@0:8@"<DDSManagingDelegate>"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
@"<DDSManaging>"
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
v40@0:8@16@24@32
v32@0:8@16@24
v32@0:8@"NSCache"16@24
@"NSArray"24@0:8@"DDSAssetQuery"16
v32@0:8@"NSArray"16@"DDSAssetQuery"24
@"NSCache"
@24@0:8@?16
@"NSTimer"
@"DDSScheduledTimerImpl"
v24@0:8d16
@32@0:8@16@24
@32@0:8@16^@24
@"<DDSAssetProviding>"
@"<DDSAssetObserving>"
@36@0:8@16Q24B32
@24@0:8Q16
v20@0:8B16
^{__SCNetworkReachability=}16@0:8
@"<DDSReachabilityObserverDelegate>"
^{__SCNetworkReachability=}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@?16
@"NSMutableDictionary"
@40@0:8@16@24@32
B36@0:8@16@24B32
B40@0:8@16@24B32B36
B40@0:8@16@24@?32
@"DDSAsset"
@"NSDictionary"
@"NSURL"
@"NSString"
@"MAAsset"
v40@0:8@16d24d32
@"<DDSBackgroundActivitySchedulerDelegate>"
@24@0:8^{_NSZone=}16
@"NSDate"
@"DDSAssetQuery"
d16@0:8
d24@0:8Q16
q16@0:8
v24@0:8q16
v24@0:8Q16
@"<DDSRemoteSyncStateDelegate>"
@"DDSBackgroundActivityScheduler"
@44@0:8@16@24B32B36B40
@"DDSAttributeFilter"
@"<DDSManagingDelegate>"
@"NSXPCConnection"
@"DDSInterface"
v28@0:8i16@20
v20@0:8i16
@20@0:8i16
v24@0:8@"<DDSAssetObservingDelegate>"16
v24@0:8@"NSSet"16
@"<DDSAssetObservingDelegate>"
@"NSSet"
@32@0:8@16Q24
@28@0:8Q16B24
i16@0:8
@"NSDateComponents"
v28@0:8@16B24
v36@0:8@16B24@?28
v28@0:8@"NSSet"16B24
@"NSArray"32@0:8@"DDSAssetQuery"16^@24
@"NSArray"32@0:8@"NSArray"16@"DDSAttributeFilter"24
v36@0:8@"NSSet"16B24@?<v@?@"NSError">28
@"<DDSAssetProvidingDelegate>"16@0:8
v24@0:8@"<DDSAssetProvidingDelegate>"16
v52@0:8@16@24B32^@36@?44
@28@0:8@16B24
v32@0:8Q16@24
@"<DDSAssetProvidingDelegate>"
@"<DDSAssetQueryResultCaching>"
@"DDSAssetPolicy"
@"NSArray"16@0:8
v24@0:8@"NSArray"16
v32@0:8@"DDSAssertion"16@"NSDate"24
@"NSArray"24@0:8@"NSDate"16
@"NSSet"16@0:8
@"NSSet"24@0:8@"NSString"16
@"<DDSAssetTrackingDelegate>"16@0:8
v24@0:8@"<DDSAssetTrackingDelegate>"16
d24@0:8q16
@"<DDSAssetTrackingDelegate>"
@"NSMutableArray"
@"<DDSAssertionDataHandling>"
v24@0:8@"NSError"16
v32@0:8Q16@"DDSAsset"24
v32@0:8@"DDSAssertion"16@"NSError"24
v32@0:8@"NSSet"16@"NSError"24
v24@0:8B16B20
@"<DDSAssetTracking>"
@"DDSScheduledTimer"
@"DDSRemoteSyncState"
