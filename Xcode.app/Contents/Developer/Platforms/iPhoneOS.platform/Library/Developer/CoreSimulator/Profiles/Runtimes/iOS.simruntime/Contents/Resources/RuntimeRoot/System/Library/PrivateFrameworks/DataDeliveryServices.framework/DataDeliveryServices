@(#)PROGRAM:DataDeliveryServices  PROJECT:DataDeliveryServices-44
com.apple.DataDeliveryServices.AssetService
com.apple.DataDeliveryServices.ddsserver.queue
v8@?0
_ContentVersion
_CompatibilityVersion
_SupportedPlatforms
_UnarchivedSize
AssetLocale
Locale
AssetRegion
Province
Country
City
ContentType
AssetType
com.apple.MobileAsset.LinguisticData
com.apple.DataDeliveryServices.ddsassetcenter.queue
v16@?0@"NSSet"8
v24@?0@"<DDSAssetCenterDelegate>"8^B16
v32@?0@"NSString"8@"NSMutableSet"16^B24
Keyboards
DataDeliveryServices
apple-internal-install
BuildVersion
yyyy-MM-dd_HH:mm:ss
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSString"16^B24
<filter: %@>
<redacted>
v32@?0@8@16^B24
B16@?0@"NSDictionary"8
ContentPath
<%@: %p, type: %@, path: %@>
__InstallDate
%@::%@
%@-%@
%@ : %@, 
<%@: %p, %@>
v16@?0@?<v@?q>8
com.apple.DataDeliveryServices
v24@?0@"DDSAssertDescriptor"8^B16
<%@: %p, query: %@, policy: %@>
Updated: %@
timerOverrideDuration
com.apple.DataDeliveryServices.update
com.apple.DataDeliveryServices.retry
MetadataSyncState
Date
Status
AttemptCount
-[DDSRemoteSyncState loadState]
DDSRemoteSyncState.m
[date isKindOfClass:[NSDate class]]
[buildVersion isKindOfClass:[NSString class]]
Contents
Required
Optional
Delta
Language
Script
InputLayout
ContactLabel
Home
Work
Lexicon
LexiconDelta
Phrases
LanguageModel
LanguageModelDelta
SpellChecker
SpellCheckerDelta
com.apple.DataDeliveryServices.DDSAssetQuery
<query: %@, locO: %d, iO: %d, latO: %d, %@>
(%@, localOnly: %d, installedOnly: %d, latestOnly: %d)>
%@-%d-%d-%d-%@
com.apple.DataDeliveryServices.ddsinterface.queue
v16@?0@"NSError"8
Default
Query
Update
com.apple.keyboard.dataDeliveryServices.
assetDownload
updateCycle
aggDuration
duration
retries
success
process
compatibilityVersion
contentVersion
assetName
UpdateCatalogAnalytic
com.apple.DataDeliveryServices.DDSAnalytics
@"NSMutableDictionary"8@?0
/var/tmp/dds_dump_%@.log
Assertions:
Installed Assets:
%@ (%lu)
In Progress:
%@, (start: %@, state: %@ retries: %lu)
v32@?0@"NSString"8@"DDSTimedAnalytic"16^B24
v32@?0@"NSNumber"8Q16^B24
BcsilqCSILQ
None
Requested
Retried
Completed
Failed
.dds.assets-updated
+[DDSMobileAssetv1PredicateAdapter predicateForQuery:compatibilityVersion:internalInstall:]_block_invoke
DDSMobileAssetv1PredicateAdapter.m
[allowedValues.anyObject isKindOfClass:NSString.class] || [allowedValues.anyObject isKindOfClass:NSDictionary.class]
%K == %@
%K == %@ || %K == %@
%K ==[c] %@
%K == nil
SUBQUERY(%K.@allValues, $x, $x != '').@count == 0
%@.%@
%K != nil
<%@: %p, pdf: %ld, doc: %d, dwp: %d>
Frequency: %@
Cellular: %@
5G+Inexpensive
Power: %@
not required
required
%@, %@, %@
Immediate
Daily
Weekly
MobileAssetProperties
com.apple.DataDeliveryServices.DDSMobileAssetv2Provider
-[DDSMobileAssetv2Provider performAssetsForQuery:errorPtr:]
DDSMobileAssetv2Provider.m
[allowedRegions isKindOfClass:NSArray.class]
[allowedRegion isKindOfClass:NSDictionary.class]
Error updating assertions
message
v24@?0@"DDSAssertion"8@"NSError"16
Error downloading asset: %@
v24@?0@"DDSAsset"8Q16
v16@?0@"MAProgressNotification"8
v16@?0q8
Success
Fail
Error updating catalog for %@: %lu
v24@?0@"DDSAssertion"8^B16
DeviceClassNumber
watchOS
macOS
Info.plist
/System/Library/LinguisticData
<%@ %p: aID: %@ cID: %@>
%@, %@ (%@)
com.apple.DataDeliveryServices.DDSAssetQueryResultCache
/Library/DataDeliveryServices/
ddsassertiondata.plist
com.apple.DataDeliveryServices.DDSAssertionTracker
com.apple.DataDeliveryServices.DDSManager.UpdateCycle
Server shouldAcceptNewConnection: (%{public}@)
Client connection invalidated: %{public}@
Client connection interrupted: %{public}@
Asked to clear cache...
Cache will evict: %{public}@
Adding AssetCenter delegate: %{public}@
Removing AssetCenter delegate: %{public}@
Returning assertions: (%{public}@) for clientID: (%{public}@)
Found assertions: (%{public}@) for clientID: (%{public}@)
Letting delegates know assets updated: %{public}@
Setting setDoNotBlockOnNetworkStatus to YES
WARNING: The version of DataDeliveryServices in this build does not set doNotBlockOnNetworkStatusSetter=YES, possibly resulting in hangs.
No values specified for key (%{public}@)
Skipping key: %{public}@ values: %{public}@ (is this the region dict? that's handled elsewhere)
Unexpected failure adding key (%{public}@)/value (%{public}@) pair
Error decoding object for key %{public}@
Delay: %ld Now: %{public}@ Future: %{public}@
Scheduling activity: %{public}@ for approximately %{public}@ (tolerance of %ld seconds)
Scheduled activity %{public}@ fired!
Descriptor with assertion id: %{public}@ already added.
Error decoding descriptors: (%{public}@)
Determined new build version: %@, previously on: %@
Time elapsed since last update: %f, date: %@
Retry already scheduled
Sync failed, giving up for today
Requesting retry...
Requesting complete refresh...
Loaded sync state (date: %{public}@, buildVersion: %{public}@, attempts: %{public}lu, status: %{public}lu)
Saving sync state (date: %{public}@, buildVersion: %{public}@, attempts: %{public}lu, status: %{public}lu
XPC connection to server invalidated.
XPC connection to server interrupted.
Using NSXPCConnectionPrivileged for iOS connection
Error creating proxy (%{public}@)
Error creating sync proxy (%{public}@)
Using test local server
Interface is using remote server: (%{public}@)
Interface is using sync remote server: (%{public}@)
Cancel recording asset analytic for %@
Record asset action: %{public}@ for %{public}@
Report asset download analytic: %{public}@
Report update catalog analytic: %{public}@
Dumping: 
%{public}@
End observing types: %@
Observed asset change notification: %@, type: %@
Unexpected nil AssetObserver in CFNotification callback
Unexpected dealloc for asset observer
Unexpected type of value: %@
Compatibility predicate: %@
Error decoding %{public}@ (%{public}@)
assets query: %@
assetsForQuery: %{public}@ final result: %{public}@ was cached: %d, cachedOnly: %d
Error for queryMetaDataSync: %{public}lu
assetsForQuery raw results: %{public}@, result value: %{public}lu
Searching for regions in filters: %@, found allowed regions: %@
Found asset region: %{private}@ didMatch: %d
Begin download for %lu assertions
Encountered error: %{public}@
Downloading assertions remaining: %lu
Begin download for assertion: %{public}@
Unexpected installedOnly/localOnly YES value on assertion's query: %@.  Are you really, really sure you meant that?
Downloading assets %{public}@
handling asset: %{public}@, state: %ld
Remaining: %ld in set: %{public}@
Unexpected error downloading asset %{public}@, result: %ld
Updating catalog for LinguisticData...
Updated catalog result %{public}@ (result: %lu)
%{public}@
Error removing assets (%{public}@) for query: %{public}@
Removing old assets for assertions: %{public}@
All assets being evaluated for removal: %{public}@
Latest assets not eligible for removal: %{public}@
Removing assets: %{public}@
Purged asset (%{public}@) successfully
Failed to purged asset (%{public}@) with result: %lu
didCompleteDownloadForAssertion: %{public}@
didUpdateCatalogWithError: %{public}@
Unrecognized device class: %d
Supported compatibility version = %ld
Error (%{public}@) unarchiving assertion content
Error (%{public}@) loading assertion data (%{public}@).  Though, this is expected if the file doesn't exist yet.
Saved assertion data to URL: (%{public}@)
Error (%{public}@) writing content: %{public}@
Error (%{public}@) archiving content at URL: %{public}@
Creating directory at URL: %{public}@, success: %d
Error (%{public}@) creating directory at path %{public}@
Verified the DDS folder is present at %{public}@
Add assertion (%{public}@) with id (%{public}@) for client (%{public}@)
Remove assertion with id: %{public}@
Removed descriptor id: %{public}@
Removing assertion: %{public}@
Descriptors: %{public}@
Calling delegate to remove assertion: %{public}@
Setting last updated for assertion (%{public}@) set to (%{public}@)
Beginning update cycle (forced %d, discretionary %d)...
Updating catalog for asset types: %{public}@
Cycle will force update all assertions: %{public}@
Cycle will update pending assertions: %{public}@
Cycle will update time eligible assertions: %{public}@
Update abandoned (due to unexpected welf=nil during update)
Update cycle already triggered, holding with pending assertions...
Add assertion for query: %{public}@ policy: (%{public}@) assertionID: (%{public}@) clientID: (%{public}@)
Remove assertion with ID: (%{public}@)
For clientID (%{public}@), found assertion IDs (%{public}@)
Handle new assertions: %{public}@
Asked to remove assertions: %{public}@, will let garbage collection collect.
Download state: %{public}lu for asset: %{public}@
Completed download for assertion (%{public}@) with error: %{public}@
Completed download for assertions (%{public}@) with error: %{public}@
Calling didEndUpdateCycle
didUpdateCatalogWithError with error: %{public}@
Begin update cycle requested...
Retry update cycle requested...
DDS assertion reset requested, initiating forced update
Update cycled ended with error: %{public}@
Begin cycle for missed/remaining pending assertions...
Asset log dump requested!
Unexpected error dumping assets: %{public}@
Asset update requested via ddsutil
Requesting clean v1 LinguisticData repository
Finished clean v1 LinguisticData repository
DDSManaging
NSObject
DDSServer
NSXPCListenerDelegate
DDSLinguisticAttributeFilter
DDSAssetQueryResultCache
DDSCacheDelegate
DDSAssetQueryResultCaching
DDSAssetCenter
DDSManagingDelegate
DDSAssetObservingDelegate
DDSMobileAssetv2QueryAdapter
DDSAttributeFilter
NSSecureCoding
NSCoding
DDSContentItemMatcher
DDSContentItem
DDSAsset
DDSBackgroundActivityScheduler
DDSAssertion
NSCopying
DDSRemoteSyncState
DDSBackgroundActivitySchedulerDelegate
DDSAssetQuery
DDSInterface
DDSAnalytics
DDSAssetObserver
DDSAssetObserving
DDSMobileAssetv1PredicateAdapter
DDSLinguisticAssetQuery
DDSTimedAnalytic
DDSAssetPolicy
DDSAssetDownloadAnalytic
DDSMobileAssetv2Provider
DDSAssetProviding
DDSAssertDescriptor
DDSCache
DDSAssertionDataHandler
DDSAssertionDataHandling
DDSAssertionTracker
DDSAssetTracking
DDSManager
DDSAssetProvidingDelegate
DDSAssetTrackingDelegate
DDSRemoteSyncStateDelegate
initWithManager:
init
setDelegate:
cStringUsingEncoding:
initWithMachServiceName:
_setQueue:
resume
manager
setExportedObject:
interface
setExportedInterface:
setRemoteObjectInterface:
queue
handleEndedConnection:
setInvalidationHandler:
setInterruptionHandler:
clientConnections
addObject:
removeObject:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
addAssertionForQuery:policy:assertionID:clientID:
removeAssertionWithID:
assertionIDsForClientID:reply:
triggerDump
triggerUpdate
delegate
T@"<DDSManagingDelegate>",&,N
interfaceWithProtocol:
arrayWithObjects:count:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
setClass:forSelector:argumentIndex:ofReply:
invalidate
dealloc
sharedInstance
listener:shouldAcceptNewConnection:
listener
.cxx_destruct
_manager
_listener
_queue
_clientConnections
T@"<DDSManaging>",R,N,V_manager
T@"NSXPCListener",R,N,V_listener
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSMutableSet",R,N,V_clientConnections
addAllowedValue:forKey:
setObject:forKeyedSubscript:
addContentType:
addContentItemLocale:
addAssetLocale:
addRegionWithCountry:province:city:
initWithMaxCount:
cache
cacheKey
objectForKey:
cacheObject:forKey:
clearCache
cache:willEvictObjects:
cachedAssetsForQuery:
cacheAssets:forQuery:
_cache
T@"DDSCache",R,N,V_cache
initWithProvider:managerInterface:
setWithObject:
observeAssetTypes:
delegates
provider
assetsForQuery:errorPtr:
allContentItemsMatchingQuery:error:
contentItemsFromAssets:matchingFilter:
managerInterface
serverDidUpdateAssetsWithType:
didUpdateAssetsWithType:
enumerateObjectsUsingBlock:
registerDelegate:
unregisterDelegate:
assetsForQuery:error:
addAssertionForAssetsWithQuery:policy:assertionID:clientID:
removeAssertionWithIdentifier:
assertionIDsForClientID:
assetObserver
_provider
_managerInterface
_delegates
_assetObserver
T@"<DDSAssetProviding>",R,N,V_provider
T@"<DDSManaging>",R,N,V_managerInterface
T@"NSMutableSet",R,N,V_delegates
T@"<DDSAssetObserving>",R,N,V_assetObserver
assetType
initWithType:
setDoNotBlockBeforeFirstUnlock:
setDoNotBlockOnNetworkStatus:
filter
filters
anyObject
count
allObjects
firstObject
isEqualToString:
addKeyValueNull:
addKeyValuePair:with:
mutableCopy
addKeyValueArray:with:
enumerateKeysAndObjectsUsingBlock:
stringFromInteger:
stringWithFormat:
maAssetQueryForddsAssetQuery:compatiblilityVersion:platformVersion:internalInstall:
systemLocale
setLocale:
setDateFormat:
stringFromDate:
initWithDictionary:
setObject:forKey:
addAllowedValues:forKey:
enumerateAllowedValuesAndKeys:
dictionary
containsObject:
allowedValuesForKey:
_setForKey:
unionSet:
minusSet:
encodeObject:forKey:
decodeTopLevelObjectOfClasses:forKey:error:
isEqualToQueryFilter:
hashObject:
hashDictionary:
hashSet:
countByEnumeratingWithState:objects:count:
attributeFilter
attributeFilterWithDictionary:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
addEntriesFromFilter:
entriesMatchingAttributes:
doesContainAttributes:
removeAllowedValue:forKey:
removeAllowedValues:forKey:
dumpDescription
setFilters:
_filters
T@"NSMutableDictionary",&,N,V_filters
attributes
array
objectForKeyedSubscript:
shouldLenientlyMatchWithContentItemsForRegion:
_anyStringIn:matches:acceptUnspecifiedValue:
_anyDictionaryIn:matches:shouldLenientlyMatch:
initWithParentAsset:contents:
length
caseInsensitiveCompare:
_string:matches:acceptUnspecifiedValue:
allKeys
_dictionary:matches:acceptUnspecifiedAttribute:lenientMatch:
assetContentItemsMatching:contentItems:parentAsset:
contents
parentAsset
localURL
URLByAppendingPathComponent:
isEqualToContentItem:
path
fileName
type
locale
region
setParentAsset:
setContents:
_parentAsset
_contents
T@"DDSAsset",&,N,V_parentAsset
T@"NSDictionary",&,N,V_contents
T@"NSURL",R,N
T@"NSDictionary",R,N
T@"NSString",R,N
setMaAsset:
copy
getLocalUrl
addEntriesFromDictionary:
unsignedIntegerValue
stringValue
maAsset
uniqueIdentifierForMAAsset:
assetUUID
uniqueIdentifier
shortName
stringByAppendingString:
stringByAppendingFormat:
pathComponents
objectAtIndexedSubscript:
string
appendString:
appendFormat:
debuggingID
isEqualToAsset:
asset
assetWithMAAsset:
debuggingIDsForAssets:
_mergeAttributes:
compatibilityVersion
contentVersion
installDate
assetState
dataType
setDebuggingID:
setUniqueIdentifier:
_attributes
_localURL
_assetState
_dataType
_assetType
_maAsset
_debuggingID
_uniqueIdentifier
T@"MAAsset",&,N,V_maAsset
T@"NSString",&,N,V_debuggingID
T@"NSString",&,N,V_uniqueIdentifier
T@"NSDictionary",R,N,V_attributes
TQ,R,N
T@"NSURL",R,N,V_localURL
TQ,R,N,V_assetState
T@"NSString",R,N,V_dataType
T@"NSString",R,N,V_assetType
setSchedulerByIdentifier:
date
dateByAddingTimeInterval:
initWithIdentifier:
setQualityOfService:
setRepeats:
setDelay:
setTolerance:
_setAdditionalXPCActivityProperties:
schedulerByIdentifier
performScheduledActivityWithIdentifier:
removeObjectForKey:
scheduleWithBlock:
scheduleActivityWithIdentifier:interval:tolerance:
cancelActivityWithIdentifier:
_delegate
_schedulerByIdentifier
T@"NSMutableDictionary",&,N,V_schedulerByIdentifier
T@"<DDSBackgroundActivitySchedulerDelegate>",&,N,V_delegate
descriptors
assertionIdentifier
clientIdentifier
initWithPolicy:assertionID:clientID:
invalidateDescription
setPreferredDownloadFrequency:
policy
downloadWithoutPower
setDownloadWithoutPower:
downloadOverCellular
setDownloadOverCellular:
preferredDownloadFrequency
query
decodeObjectOfClass:forKey:
lastUpdated
allocWithZone:
initWithQuery:
setDescriptors:
setLastUpdated:
isEqualToAssertion:
isEqualToDate:
copyWithZone:
addDescriptorWithAssertionID:clientID:policy:
clientIdentifiers
assertionIdentifiers
removeDescriptorWithClientID:
removeDescriptorWithAssertionID:
_description
_lastUpdated
_query
_descriptors
T@"NSMutableSet",&,N,V_descriptors
T@"NSDate",&,N,V_lastUpdated
T@"DDSAssetQuery",R,N,V_query
T@"DDSAssetPolicy",R,N
T@"NSSet",R,N
setScheduler:
scheduler
loadState
shouldRequestCompleteRefresh
requestCompleteRefresh
shouldInitiateRegularUpdateCycle
requestUpdate
scheduleRegularUpdate
timeBetweenSyncs
attemptCount
nextUpdateTimeIntervalForAttemptCount:
buildVersionString
buildVersion
setBuildVersion:
timeIntervalSinceNow
syncStatus
setSyncStatus:
setAttemptCount:
scheduleRetry
setDate:
saveState
remoteSyncStateRequestsUpdate
remoteSyncStateRequestsRetry
remoteSyncStateRequestsReset
resetState
requestRetry
earlierDate:
integerValue
numberWithInteger:
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
calendarWithIdentifier:
components:fromDate:
dateFromComponents:
setDay:
setHour:
setMinute:
dateByAddingComponents:toDate:options:
timeIntervalSinceDate:
timeIntervalUntilNextRegularUpdate
initWithDelegate:
beganUpdateCycle
completedUpdateCycleWithError:
_syncStatus
_date
_attemptCount
_buildVersion
_scheduler
T@"NSDate",&,N,V_date
Tq,N,V_syncStatus
TQ,N,V_attemptCount
T@"NSString",&,N,V_buildVersion
T@"DDSBackgroundActivityScheduler",&,N,V_scheduler
T@"<DDSRemoteSyncStateDelegate>",W,N,V_delegate
initWithAssetType:filter:
initWithAssetType:filter:localOnly:installedOnly:latestOnly:cachedOnly:
localOnly
numberWithBool:
installedOnly
latestOnly
cachedOnly
boolValue
isEqualToAssetQuery:
setInstalledOnly:
setLocalOnly:
setLatestOnly:
setCachedOnly:
assetType:
_localOnly
_installedOnly
_latestOnly
_cachedOnly
_filter
T@"DDSAttributeFilter",R,N,V_filter
TB,N,V_localOnly
TB,N,V_installedOnly
TB,N,V_latestOnly
TB,N,V_cachedOnly
cString
connectionUsageQueue
server
syncServer
xpcConnectionOptionsForServer
initWithMachServiceName:options:
teardownXPCConnection
createConnectionIfNecessary
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
serverOverride
serviceObjectProxy
syncServiceObjectProxy
setServerOverride:
remoteServer
setRemoteServer:
mDelegate
setMDelegate:
_serverOverride
_remoteServer
_sharedInstance
_mDelegate
_connectionUsageQueue
T@"<DDSManaging>",&,N,V_serverOverride
T@"NSXPCConnection",&,N,V_remoteServer
T@"DDSInterface",R,N,V_sharedInstance
T@"<DDSManagingDelegate>",&,N,V_mDelegate
T@"NSObject<OS_dispatch_queue>",R,N,V_connectionUsageQueue
T@"<DDSManagingDelegate>",&,N,V_delegate
analyticQueue
analyticByIdentifier
stringForAction:
initWithAsset:
updateWithAction:
reportAssetDownloadAnalytic:
durationInSec
assetDownloadDurationBuckets
bucketForValue:fromBuckets:
roundNumber:toSignificantDigits:
success
processName
identifier
retries
initWithString:
startTime
initWithTimeIntervalSince1970:
lastAction
writeToFile:atomically:encoding:error:
compare:
isInteger:
doubleValue
numberWithInt:
numberWithDouble:
intValue
objCType
processInfo
cancelRecordingForAsset:
recordAssetAction:forAsset:
recordUpdateCycleState:
reportUpdateCycleAnalytic:
dumpAssetLogWithAssertions:installedAssets:
_analyticByIdentifier
_analyticQueue
T@"NSMutableDictionary",R,N,V_analyticByIdentifier
T@"NSObject<OS_dispatch_queue>",R,N,V_analyticQueue
beginObservingTypes:
stringByReplacingOccurrencesOfString:withString:
typesToObserve
endObservingTypes:
notifyObserversAssetsUpdatedForType:
setTypesToObserve:
_typesToObserve
T@"<DDSAssetObservingDelegate>",W,N,V_delegate
T@"NSSet",&,N,V_typesToObserve
predicateForQuery:compatibilityVersion:internalInstall:
predicateForKey:matchingAnyStringIn:
predicateForKey:matchingAnyDictionaryIn:acceptUnspecifiedValue:acceptUnspecifiedAttribute:lenientMatch:
compatibilityPredicateForCompatabilityVersion:internalInstall:
andPredicateWithSubpredicates:
regionKeys
setWithObjects:
predicateWithFormat:
numberWithUnsignedLong:
predicateWithValue:
orPredicateWithSubpredicates:
arrayByAddingObject:
predicateForKey:matchingString:
predicateForAssetQuery:compatiblilityVersion:
extractRegionDictFromFilter:
localeWithLocaleIdentifier:
languageCode
initWithLanguageIdentifier:
T@"DDSLinguisticAttributeFilter",R,N
setLastAction:
timeIntervalSince1970
setStartTime:
setRetries:
setSuccess:
setEndTime:
endTime
_success
_lastAction
_identifier
_retries
_startTime
_endTime
TQ,N,V_retries
TB,N,V_success
Td,N,V_startTime
Td,N,V_endTime
Ti,N,V_lastAction
T@"NSString",R,N,V_identifier
downloadCompletionNotification
idleUsageEvictionPeriod
notificationDownloadTriggers
stringForAssetDownloadFrequency:
isEqualToAssetPolicy:
assetPolicy
setNotificationDownloadTriggers:
setDownloadCompletionNotification:
setIdleUsageEvictionPeriod:
_downloadOverCellular
_downloadWithoutPower
_preferredDownloadFrequency
_notificationDownloadTriggers
_downloadCompletionNotification
_idleUsageEvictionPeriod
T@"NSDateComponents",&,N,V_idleUsageEvictionPeriod
Tq,N,V_preferredDownloadFrequency
TB,N,V_downloadOverCellular
TB,N,V_downloadWithoutPower
T@"NSSet",C,N,V_notificationDownloadTriggers
T@"NSString",C,N,V_downloadCompletionNotification
setAsset:
_asset
T@"DDSAsset",&,N,V_asset
addObjectsFromArray:
assetQueryResultsCache
performAssetsForQuery:errorPtr:
supportedCompatibilityVersion
platformVersion
returnTypes:
queryMetaDataSync
results
shouldMatchAttributeValue:givenValue:
state
latestAssetsOnlyFromAssets:
setEncounteredAssertionUpdateError:
remainingAssetsByQueryId
encounteredAssertionUpdateError
errorWithDomain:code:userInfo:
didCompleteDownloadForAssertions:error:
beginDownloadForAssertion:discretionaryDownload:handler:
initWithArray:
didCompleteDownloadForAssertion:error:
beginDownloadForAssets:withPolicy:discretionaryDownload:error:handler:
isStalled
totalWritten
totalExpected
didChangeDownloadState:forAsset:
attachProgressCallBack:
downloadOptionsForPolicy:discretionaryDownload:
startDownload:then:
setAllowsCellularAccess:
setAllowsExpensiveAccess:
setRequiresPowerPluggedIn:
setDiscretionary:
downloadOptionsForCatalogWithType:discretionaryDownload:
didUpdateCatalogWithError:
startCatalogDownload:options:then:
didBeginUpdateCatalog
latestBetweenAssetA:AssetB:
allValues
removeAssets:
purge:
downloadStateByAssetID
stringWithUTF8String:
stringByAppendingPathComponent:
defaultManager
fileExistsAtPath:
initWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
beginDownloadForAssertions:discretionaryDownload:
updateCatalogForAssetTypes:discretionaryDownload:withCompletion:
removeAssetsForAssertions:
removeOldAssetsForAssertions:
T@"<DDSAssetProvidingDelegate>",&,N
setAssetQueryResultsCache:
setDownloadStateByAssetID:
_encounteredAssertionUpdateError
_remainingAssetsByQueryId
_assetQueryResultsCache
_downloadStateByAssetID
T@"NSMutableDictionary",R,N,V_remainingAssetsByQueryId
TB,N,V_encounteredAssertionUpdateError
T@"<DDSAssetQueryResultCaching>",&,N,V_assetQueryResultsCache
T@"NSMutableDictionary",&,N,V_downloadStateByAssetID
T@"<DDSAssetProvidingDelegate>",&,N,Vdelegate
isEqualToDescriptor:
setClientIdentifier:
setAssertionIdentifier:
setPolicy:
_clientIdentifier
_assertionIdentifier
_policy
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_assertionIdentifier
T@"DDSAssetPolicy",&,N,V_policy
initWithCapacity:
maxCount
order
objectAtIndex:
removeObjectAtIndex:
removeAllObjects
_order
_maxCount
T@"NSMutableDictionary",R,N,V_cache
T@"NSMutableOrderedSet",R,N,V_order
TQ,R,N,V_maxCount
T@"<DDSCacheDelegate>",W,N,V_delegate
assertionContentURL
dataWithContentsOfURL:options:error:
unarchivedObjectOfClasses:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToURL:options:error:
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
assertionContentDirectory
loadAssertionData
saveAssertionData:
initWithDataHandler:
trackedAssertions
assertionDueForUpdateFrom:SinceDate:
intervalForDownloadFrequency:
dataHandler
handleNewAssertions:
handleRemovedAssertions:
didUpdateAssertion:atDate:
assertionDueForUpdateSinceDate:
allAssertions
trackedAssetTypes
resetAssertionDueDates
T@"<DDSAssetTrackingDelegate>",&,N
trackedAssertionSets
_trackedAssertions
_trackedAssertionSets
_dataHandler
T@"NSMutableArray",R,N,V_trackedAssertions
T@"NSMutableDictionary",R,N,V_trackedAssertionSets
T@"<DDSAssertionDataHandling>",R,N,V_dataHandler
T@"<DDSAssetTrackingDelegate>",&,N,V_delegate
initWithProvider:tracker:
deleteV1AssetsIfNecessary
remoteSyncState
didStartUpdateCycle
tracker
pendingAssertionsQueue
setPendingAssertionsToUpdate:
pendingAssertionsToUpdate
didEndUpdateCycleWithError:
beginUpdateCycleForced:discretionaryDownload:
willRetryUpdateCycle
timer
_tracker
_timer
_remoteSyncState
_pendingAssertionsToUpdate
_pendingAssertionsQueue
T@"<DDSAssetTracking>",R,N,V_tracker
T@"DDSScheduledTimer",R,N,V_timer
T@"DDSRemoteSyncState",R,N,V_remoteSyncState
T@"NSMutableSet",&,N,V_pendingAssertionsToUpdate
T@"NSObject<OS_dispatch_queue>",R,N,V_pendingAssertionsQueue
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@40
v24@0:8@16
v32@0:8@16@?24
v16@0:8
v48@0:8@"DDSAssetQuery"16@"DDSAssetPolicy"24@"NSString"32@"NSString"40
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSSet">24
@"<DDSManagingDelegate>"16@0:8
v24@0:8@"<DDSManagingDelegate>"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
@"<DDSManaging>"
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
v40@0:8@16@24@32
v32@0:8@16@24
v32@0:8@"DDSCache"16@"NSArray"24
@"NSArray"24@0:8@"DDSAssetQuery"16
v32@0:8@"NSArray"16@"DDSAssetQuery"24
@"DDSCache"
@32@0:8@16@24
@32@0:8@16^@24
@"<DDSAssetProviding>"
@"<DDSAssetObserving>"
@44@0:8@16Q24@32B40
@24@0:8Q16
Q24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@?16
@"NSMutableDictionary"
@40@0:8@16@24@32
B36@0:8@16@24B32
B40@0:8@16@24B32B36
B40@0:8@16@24@?32
@"DDSAsset"
@"NSDictionary"
@"NSURL"
@"NSString"
@"MAAsset"
v40@0:8@16d24d32
@"<DDSBackgroundActivitySchedulerDelegate>"
@24@0:8^{_NSZone=}16
@"NSDate"
@"DDSAssetQuery"
d16@0:8
d24@0:8Q16
q16@0:8
v24@0:8q16
v24@0:8Q16
@"<DDSRemoteSyncStateDelegate>"
@"DDSBackgroundActivityScheduler"
@48@0:8@16@24B32B36B40B44
v20@0:8B16
@"DDSAttributeFilter"
@"<DDSManagingDelegate>"
@"NSXPCConnection"
@"DDSInterface"
v28@0:8i16@20
v20@0:8i16
@20@0:8i16
v24@0:8@"<DDSAssetObservingDelegate>"16
@"<DDSAssetObservingDelegate>"16@0:8
v24@0:8@"NSSet"16
@"<DDSAssetObservingDelegate>"
@"NSSet"
@32@0:8@16Q24
@36@0:8@16Q24B32
@28@0:8Q16B24
@44@0:8@16@24B32B36B40
v24@0:8d16
i16@0:8
@24@0:8q16
@"NSDateComponents"
v28@0:8@16B24
v36@0:8@16B24@?28
v28@0:8@"NSSet"16B24
@"NSArray"32@0:8@"DDSAssetQuery"16^@24
@"NSArray"32@0:8@"NSArray"16@"DDSAttributeFilter"24
v36@0:8@"NSSet"16B24@?<v@?@"NSError">28
@"<DDSAssetProvidingDelegate>"16@0:8
v24@0:8@"<DDSAssetProvidingDelegate>"16
v52@0:8@16@24B32^@36@?44
@28@0:8@16B24
v32@0:8Q16@24
@"<DDSAssetProvidingDelegate>"
@"<DDSAssetQueryResultCaching>"
@"DDSAssetPolicy"
@"<DDSCacheDelegate>"
@"NSMutableOrderedSet"
@"NSArray"16@0:8
v24@0:8@"NSArray"16
v32@0:8@"DDSAssertion"16@"NSDate"24
@"NSArray"24@0:8@"NSDate"16
@"NSSet"16@0:8
@"NSSet"24@0:8@"NSString"16
@"<DDSAssetTrackingDelegate>"16@0:8
v24@0:8@"<DDSAssetTrackingDelegate>"16
d24@0:8q16
@"<DDSAssetTrackingDelegate>"
@"NSMutableArray"
@"<DDSAssertionDataHandling>"
v24@0:8@"NSError"16
v32@0:8Q16@"DDSAsset"24
v32@0:8@"DDSAssertion"16@"NSError"24
v32@0:8@"NSSet"16@"NSError"24
v24@0:8B16B20
@"<DDSAssetTracking>"
@"DDSScheduledTimer"
@"DDSRemoteSyncState"
@(#)PROGRAM:DataDeliveryServices  PROJECT:DataDeliveryServices-44
com.apple.DataDeliveryServices.AssetService
com.apple.DataDeliveryServices.ddsserver.queue
v8@?0
_ContentVersion
_CompatibilityVersion
_SupportedPlatforms
_UnarchivedSize
AssetLocale
Locale
AssetRegion
Province
Country
City
ContentType
AssetType
com.apple.MobileAsset.LinguisticData
com.apple.DataDeliveryServices.ddsassetcenter.queue
v16@?0@"NSSet"8
v24@?0@"<DDSAssetCenterDelegate>"8^B16
v32@?0@"NSString"8@"NSMutableSet"16^B24
Keyboards
DataDeliveryServices
apple-internal-install
BuildVersion
yyyy-MM-dd_HH:mm:ss
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSString"16^B24
<filter: %@>
<redacted>
v32@?0@8@16^B24
B16@?0@"NSDictionary"8
ContentPath
<%@: %p, type: %@, path: %@>
__InstallDate
%@::%@
%@-%@
%@ : %@, 
<%@: %p, %@>
v16@?0@?<v@?q>8
com.apple.DataDeliveryServices
v24@?0@"DDSAssertDescriptor"8^B16
<%@: %p, query: %@, policy: %@>
Updated: %@
timerOverrideDuration
com.apple.DataDeliveryServices.update
com.apple.DataDeliveryServices.retry
MetadataSyncState
Date
Status
AttemptCount
-[DDSRemoteSyncState loadState]
DDSRemoteSyncState.m
[date isKindOfClass:[NSDate class]]
[buildVersion isKindOfClass:[NSString class]]
Contents
Required
Optional
Delta
Language
Script
InputLayout
ContactLabel
Home
Work
Lexicon
LexiconDelta
Phrases
LanguageModel
LanguageModelDelta
SpellChecker
SpellCheckerDelta
com.apple.DataDeliveryServices.DDSAssetQuery
<query: %@, locO: %d, iO: %d, latO: %d, %@>
(%@, localOnly: %d, installedOnly: %d, latestOnly: %d)>
%@-%d-%d-%d-%@
com.apple.DataDeliveryServices.ddsinterface.queue
v16@?0@"NSError"8
Default
Query
Update
com.apple.keyboard.dataDeliveryServices.
assetDownload
updateCycle
aggDuration
duration
retries
success
process
compatibilityVersion
contentVersion
assetName
UpdateCatalogAnalytic
com.apple.DataDeliveryServices.DDSAnalytics
@"NSMutableDictionary"8@?0
/var/tmp/dds_dump_%@.log
Assertions:
Installed Assets:
%@ (%lu)
In Progress:
%@, (start: %@, state: %@ retries: %lu)
v32@?0@"NSString"8@"DDSTimedAnalytic"16^B24
v32@?0@"NSNumber"8Q16^B24
BcsilqCSILQ
None
Requested
Retried
Completed
Failed
.dds.assets-updated
+[DDSMobileAssetv1PredicateAdapter predicateForQuery:compatibilityVersion:internalInstall:]_block_invoke
DDSMobileAssetv1PredicateAdapter.m
[allowedValues.anyObject isKindOfClass:NSString.class] || [allowedValues.anyObject isKindOfClass:NSDictionary.class]
%K == %@
%K == %@ || %K == %@
%K ==[c] %@
%K == nil
SUBQUERY(%K.@allValues, $x, $x != '').@count == 0
%@.%@
%K != nil
<%@: %p, pdf: %ld, doc: %d, dwp: %d>
Frequency: %@
Cellular: %@
5G+Inexpensive
Power: %@
not required
required
%@, %@, %@
Immediate
Daily
Weekly
MobileAssetProperties
com.apple.DataDeliveryServices.DDSMobileAssetv2Provider
-[DDSMobileAssetv2Provider performAssetsForQuery:errorPtr:]
DDSMobileAssetv2Provider.m
[allowedRegions isKindOfClass:NSArray.class]
[allowedRegion isKindOfClass:NSDictionary.class]
Error updating assertions
message
v24@?0@"DDSAssertion"8@"NSError"16
Error downloading asset: %@
v24@?0@"DDSAsset"8Q16
v16@?0@"MAProgressNotification"8
v16@?0q8
Success
Fail
Error updating catalog for %@: %lu
v24@?0@"DDSAssertion"8^B16
DeviceClassNumber
watchOS
macOS
Info.plist
/System/Library/LinguisticData
<%@ %p: aID: %@ cID: %@>
%@, %@ (%@)
com.apple.DataDeliveryServices.DDSAssetQueryResultCache
/Library/DataDeliveryServices/
ddsassertiondata.plist
com.apple.DataDeliveryServices.DDSAssertionTracker
com.apple.DataDeliveryServices.DDSManager.UpdateCycle
Server shouldAcceptNewConnection: (%{public}@)
Client connection invalidated: %{public}@
Client connection interrupted: %{public}@
Asked to clear cache...
Cache will evict: %{public}@
Adding AssetCenter delegate: %{public}@
Removing AssetCenter delegate: %{public}@
Returning assertions: (%{public}@) for clientID: (%{public}@)
Found assertions: (%{public}@) for clientID: (%{public}@)
Letting delegates know assets updated: %{public}@
Setting setDoNotBlockOnNetworkStatus to YES
WARNING: The version of DataDeliveryServices in this build does not set doNotBlockOnNetworkStatusSetter=YES, possibly resulting in hangs.
No values specified for key (%{public}@)
Skipping key: %{public}@ values: %{public}@ (is this the region dict? that's handled elsewhere)
Unexpected failure adding key (%{public}@)/value (%{public}@) pair
Error decoding object for key %{public}@
Delay: %ld Now: %{public}@ Future: %{public}@
Scheduling activity: %{public}@ for approximately %{public}@ (tolerance of %ld seconds)
Scheduled activity %{public}@ fired!
Descriptor with assertion id: %{public}@ already added.
Error decoding descriptors: (%{public}@)
Determined new build version: %@, previously on: %@
Time elapsed since last update: %f, date: %@
Retry already scheduled
Sync failed, giving up for today
Requesting retry...
Requesting complete refresh...
Loaded sync state (date: %{public}@, buildVersion: %{public}@, attempts: %{public}lu, status: %{public}lu)
Saving sync state (date: %{public}@, buildVersion: %{public}@, attempts: %{public}lu, status: %{public}lu
XPC connection to server invalidated.
XPC connection to server interrupted.
Using NSXPCConnectionPrivileged for iOS connection
Error creating proxy (%{public}@)
Error creating sync proxy (%{public}@)
Using test local server
Interface is using remote server: (%{public}@)
Interface is using sync remote server: (%{public}@)
Cancel recording asset analytic for %@
Record asset action: %{public}@ for %{public}@
Report asset download analytic: %{public}@
Report update catalog analytic: %{public}@
Dumping: 
%{public}@
End observing types: %@
Observed asset change notification: %@, type: %@
Unexpected nil AssetObserver in CFNotification callback
Unexpected dealloc for asset observer
Unexpected type of value: %@
Compatibility predicate: %@
Error decoding %{public}@ (%{public}@)
assets query: %@
assetsForQuery: %{public}@ final result: %{public}@ was cached: %d, cachedOnly: %d
Error for queryMetaDataSync: %{public}lu
assetsForQuery raw results: %{public}@, result value: %{public}lu
Searching for regions in filters: %@, found allowed regions: %@
Found asset region: %{private}@ didMatch: %d
Begin download for %lu assertions
Encountered error: %{public}@
Downloading assertions remaining: %lu
Begin download for assertion: %{public}@
Unexpected installedOnly/localOnly YES value on assertion's query: %@.  Are you really, really sure you meant that?
Downloading assets %{public}@
handling asset: %{public}@, state: %ld
Remaining: %ld in set: %{public}@
Unexpected error downloading asset %{public}@, result: %ld
Updating catalog for LinguisticData...
Updated catalog result %{public}@ (result: %lu)
%{public}@
Error removing assets (%{public}@) for query: %{public}@
Removing old assets for assertions: %{public}@
All assets being evaluated for removal: %{public}@
Latest assets not eligible for removal: %{public}@
Removing assets: %{public}@
Purged asset (%{public}@) successfully
Failed to purged asset (%{public}@) with result: %lu
didCompleteDownloadForAssertion: %{public}@
didUpdateCatalogWithError: %{public}@
Unrecognized device class: %d
Supported compatibility version = %ld
Error (%{public}@) unarchiving assertion content
Error (%{public}@) loading assertion data (%{public}@).  Though, this is expected if the file doesn't exist yet.
Saved assertion data to URL: (%{public}@)
Error (%{public}@) writing content: %{public}@
Error (%{public}@) archiving content at URL: %{public}@
Creating directory at URL: %{public}@, success: %d
Error (%{public}@) creating directory at path %{public}@
Verified the DDS folder is present at %{public}@
Add assertion (%{public}@) with id (%{public}@) for client (%{public}@)
Remove assertion with id: %{public}@
Removed descriptor id: %{public}@
Removing assertion: %{public}@
Descriptors: %{public}@
Calling delegate to remove assertion: %{public}@
Setting last updated for assertion (%{public}@) set to (%{public}@)
Beginning update cycle (forced %d, discretionary %d)...
Updating catalog for asset types: %{public}@
Cycle will force update all assertions: %{public}@
Cycle will update pending assertions: %{public}@
Cycle will update time eligible assertions: %{public}@
Update abandoned (due to unexpected welf=nil during update)
Update cycle already triggered, holding with pending assertions...
Add assertion for query: %{public}@ policy: (%{public}@) assertionID: (%{public}@) clientID: (%{public}@)
Remove assertion with ID: (%{public}@)
For clientID (%{public}@), found assertion IDs (%{public}@)
Handle new assertions: %{public}@
Asked to remove assertions: %{public}@, will let garbage collection collect.
Download state: %{public}lu for asset: %{public}@
Completed download for assertion (%{public}@) with error: %{public}@
Completed download for assertions (%{public}@) with error: %{public}@
Calling didEndUpdateCycle
didUpdateCatalogWithError with error: %{public}@
Begin update cycle requested...
Retry update cycle requested...
DDS assertion reset requested, initiating forced update
Update cycled ended with error: %{public}@
Begin cycle for missed/remaining pending assertions...
Asset log dump requested!
Unexpected error dumping assets: %{public}@
Asset update requested via ddsutil
Requesting clean v1 LinguisticData repository
Finished clean v1 LinguisticData repository
DDSManaging
NSObject
DDSServer
NSXPCListenerDelegate
DDSLinguisticAttributeFilter
DDSAssetQueryResultCache
DDSCacheDelegate
DDSAssetQueryResultCaching
DDSAssetCenter
DDSManagingDelegate
DDSAssetObservingDelegate
DDSMobileAssetv2QueryAdapter
DDSAttributeFilter
NSSecureCoding
NSCoding
DDSContentItemMatcher
DDSContentItem
DDSAsset
DDSBackgroundActivityScheduler
DDSAssertion
NSCopying
DDSRemoteSyncState
DDSBackgroundActivitySchedulerDelegate
DDSAssetQuery
DDSInterface
DDSAnalytics
DDSAssetObserver
DDSAssetObserving
DDSMobileAssetv1PredicateAdapter
DDSLinguisticAssetQuery
DDSTimedAnalytic
DDSAssetPolicy
DDSAssetDownloadAnalytic
DDSMobileAssetv2Provider
DDSAssetProviding
DDSAssertDescriptor
DDSCache
DDSAssertionDataHandler
DDSAssertionDataHandling
DDSAssertionTracker
DDSAssetTracking
DDSManager
DDSAssetProvidingDelegate
DDSAssetTrackingDelegate
DDSRemoteSyncStateDelegate
interfaceWithProtocol:
unsignedIntegerValue
setObject:forKeyedSubscript:
errorWithDomain:code:userInfo:
numberWithInteger:
addKeyValueArray:with:
dataWithContentsOfURL:options:error:
initWithCapacity:
removeAllObjects
calendarWithIdentifier:
setObject:forKey:
enumerateObjectsUsingBlock:
numberWithInt:
addEntriesFromDictionary:
integerValue
setDelay:
setMinute:
enumerateKeysAndObjectsUsingBlock:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
numberWithDouble:
attachProgressCallBack:
intValue
setDay:
unionSet:
numberWithBool:
allocWithZone:
setDateFormat:
unarchivedObjectOfClasses:fromData:error:
allValues
setLocale:
initWithArray:
countByEnumeratingWithState:objects:count:
stringWithUTF8String:
initWithType:
languageCode
returnTypes:
setWithObjects:
count
allObjects
initWithTimeIntervalSince1970:
stringWithFormat:
setClasses:forSelector:argumentIndex:ofReply:
isStalled
remoteObjectProxyWithErrorHandler:
copy
allKeys
setWithObject:
initWithString:
dictionaryWithObjects:forKeys:count:
stringValue
setClass:forSelector:argumentIndex:ofReply:
encodeObject:forKey:
setWithArray:
resume
dictionary
earlierDate:
isEqualToString:
results
setTolerance:
mutableCopy
stringFromDate:
setInvalidationHandler:
cStringUsingEncoding:
minusSet:
pathComponents
cString
setInterruptionHandler:
containsObject:
addObjectsFromArray:
setAllowsExpensiveAccess:
totalWritten
queryMetaDataSync
isEqualToDate:
addObject:
setAllowsCellularAccess:
stringByReplacingOccurrencesOfString:withString:
totalExpected
setHour:
components:fromDate:
defaultManager
orPredicateWithSubpredicates:
stringByAppendingString:
purge:
setExportedObject:
stringByAppendingPathComponent:
arrayWithObjects:count:
decodeTopLevelObjectOfClasses:forKey:error:
boolValue
timeIntervalSinceNow
setExportedInterface:
arrayByAddingObject:
initWithMachServiceName:options:
decodeObjectOfClass:forKey:
stringByAppendingFormat:
objectForKeyedSubscript:
propertyListWithData:options:format:error:
timeIntervalSinceDate:
URLByAppendingPathComponent:
setRequiresPowerPluggedIn:
localeWithLocaleIdentifier:
getLocalUrl
initWithMachServiceName:
string
array
timeIntervalSince1970
writeToURL:options:error:
compare:
removeObjectForKey:
setRepeats:
firstObject
archivedDataWithRootObject:requiringSecureCoding:error:
state
objectAtIndexedSubscript:
processInfo
removeObjectAtIndex:
writeToFile:atomically:encoding:error:
setRemoteObjectInterface:
objectAtIndex:
dateFromComponents:
appendString:
doubleValue
setQualityOfService:
removeObject:
startDownload:then:
objCType
dateByAddingTimeInterval:
appendFormat:
_setQueue:
predicateWithValue:
setDoNotBlockBeforeFirstUnlock:
invalidate
systemLocale
fileURLWithPath:isDirectory:
startCatalogDownload:options:then:
numberWithUnsignedLong:
dateByAddingComponents:toDate:options:
scheduleWithBlock:
anyObject
addKeyValuePair:with:
setDiscretionary:
predicateWithFormat:
synchronousRemoteObjectProxyWithErrorHandler:
_setAdditionalXPCActivityProperties:
didUpdateAssetsWithType:
fileExistsAtPath:
initWithContentsOfFile:options:error:
caseInsensitiveCompare:
length
andPredicateWithSubpredicates:
numberWithUnsignedInteger:
addKeyValueNull:
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
addAssertionForQuery:policy:assertionID:clientID:
removeAssertionWithID:
assertionIDsForClientID:reply:
triggerDump
triggerUpdate
delegate
setDelegate:
T@"<DDSManagingDelegate>",&,N
dealloc
sharedInstance
interface
listener:shouldAcceptNewConnection:
initWithManager:
handleEndedConnection:
manager
listener
queue
clientConnections
.cxx_destruct
_manager
_listener
_queue
_clientConnections
T@"<DDSManaging>",R,N,V_manager
T@"NSXPCListener",R,N,V_listener
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSMutableSet",R,N,V_clientConnections
addContentType:
addContentItemLocale:
addAssetLocale:
addRegionWithCountry:province:city:
cache:willEvictObjects:
cachedAssetsForQuery:
cacheAssets:forQuery:
clearCache
cache
_cache
T@"DDSCache",R,N,V_cache
serverDidUpdateAssetsWithType:
initWithProvider:managerInterface:
registerDelegate:
unregisterDelegate:
assetsForQuery:error:
allContentItemsMatchingQuery:error:
contentItemsFromAssets:matchingFilter:
addAssertionForAssetsWithQuery:policy:assertionID:clientID:
removeAssertionWithIdentifier:
assertionIDsForClientID:
provider
managerInterface
delegates
assetObserver
_provider
_managerInterface
_delegates
_assetObserver
T@"<DDSAssetProviding>",R,N,V_provider
T@"<DDSManaging>",R,N,V_managerInterface
T@"NSMutableSet",R,N,V_delegates
T@"<DDSAssetObserving>",R,N,V_assetObserver
setDoNotBlockOnNetworkStatus:
maAssetQueryForddsAssetQuery:compatiblilityVersion:platformVersion:internalInstall:
stringFromInteger:
filters
attributeFilter
attributeFilterWithDictionary:
supportsSecureCoding
hashObject:
hashDictionary:
hashSet:
encodeWithCoder:
initWithCoder:
TB,R
initWithDictionary:
allowedValuesForKey:
enumerateAllowedValuesAndKeys:
_setForKey:
addEntriesFromFilter:
entriesMatchingAttributes:
doesContainAttributes:
addAllowedValue:forKey:
addAllowedValues:forKey:
removeAllowedValue:forKey:
removeAllowedValues:forKey:
dumpDescription
isEqualToQueryFilter:
setFilters:
_filters
T@"NSMutableDictionary",&,N,V_filters
assetContentItemsMatching:contentItems:parentAsset:
shouldLenientlyMatchWithContentItemsForRegion:
_string:matches:acceptUnspecifiedValue:
_anyStringIn:matches:acceptUnspecifiedValue:
_dictionary:matches:acceptUnspecifiedAttribute:lenientMatch:
_anyDictionaryIn:matches:shouldLenientlyMatch:
initWithParentAsset:contents:
path
fileName
type
locale
region
isEqualToContentItem:
parentAsset
setParentAsset:
contents
setContents:
_parentAsset
_contents
T@"DDSAsset",&,N,V_parentAsset
T@"NSDictionary",&,N,V_contents
T@"NSURL",R,N
T@"NSDictionary",R,N
T@"NSString",R,N
asset
assetWithMAAsset:
uniqueIdentifierForMAAsset:
debuggingIDsForAssets:
setMaAsset:
_mergeAttributes:
compatibilityVersion
contentVersion
installDate
uniqueIdentifier
debuggingID
shortName
assetUUID
isEqualToAsset:
attributes
localURL
assetState
dataType
assetType
maAsset
setDebuggingID:
setUniqueIdentifier:
_attributes
_localURL
_assetState
_dataType
_assetType
_maAsset
_debuggingID
_uniqueIdentifier
T@"MAAsset",&,N,V_maAsset
T@"NSString",&,N,V_debuggingID
T@"NSString",&,N,V_uniqueIdentifier
T@"NSDictionary",R,N,V_attributes
TQ,R,N
T@"NSURL",R,N,V_localURL
TQ,R,N,V_assetState
T@"NSString",R,N,V_dataType
T@"NSString",R,N,V_assetType
scheduleActivityWithIdentifier:interval:tolerance:
cancelActivityWithIdentifier:
schedulerByIdentifier
setSchedulerByIdentifier:
_delegate
_schedulerByIdentifier
T@"NSMutableDictionary",&,N,V_schedulerByIdentifier
T@"<DDSBackgroundActivitySchedulerDelegate>",&,N,V_delegate
query
lastUpdated
descriptors
copyWithZone:
initWithQuery:
addDescriptorWithAssertionID:clientID:policy:
clientIdentifiers
assertionIdentifiers
policy
removeDescriptorWithClientID:
removeDescriptorWithAssertionID:
invalidateDescription
isEqualToAssertion:
setLastUpdated:
setDescriptors:
_description
_lastUpdated
_query
_descriptors
T@"NSMutableSet",&,N,V_descriptors
T@"NSDate",&,N,V_lastUpdated
T@"DDSAssetQuery",R,N,V_query
T@"DDSAssetPolicy",R,N
T@"NSSet",R,N
buildVersionString
timeIntervalUntilNextRegularUpdate
performScheduledActivityWithIdentifier:
initWithDelegate:
scheduleRegularUpdate
scheduleRetry
shouldRequestCompleteRefresh
shouldInitiateRegularUpdateCycle
beganUpdateCycle
completedUpdateCycleWithError:
requestUpdate
requestRetry
requestCompleteRefresh
resetState
loadState
saveState
nextUpdateTimeIntervalForAttemptCount:
timeBetweenSyncs
syncStatus
setSyncStatus:
date
setDate:
attemptCount
setAttemptCount:
buildVersion
setBuildVersion:
scheduler
setScheduler:
_syncStatus
_date
_attemptCount
_buildVersion
_scheduler
T@"NSDate",&,N,V_date
Tq,N,V_syncStatus
TQ,N,V_attemptCount
T@"NSString",&,N,V_buildVersion
T@"DDSBackgroundActivityScheduler",&,N,V_scheduler
T@"<DDSRemoteSyncStateDelegate>",W,N,V_delegate
filter
localOnly
installedOnly
latestOnly
cachedOnly
assetType:
initWithAssetType:filter:
initWithAssetType:filter:localOnly:installedOnly:latestOnly:cachedOnly:
setLocalOnly:
setInstalledOnly:
setLatestOnly:
cacheKey
isEqualToAssetQuery:
setCachedOnly:
_localOnly
_installedOnly
_latestOnly
_cachedOnly
_filter
T@"DDSAttributeFilter",R,N,V_filter
TB,N,V_localOnly
TB,N,V_installedOnly
TB,N,V_latestOnly
TB,N,V_cachedOnly
xpcConnectionOptionsForServer
createConnectionIfNecessary
teardownXPCConnection
serviceObjectProxy
syncServiceObjectProxy
server
syncServer
serverOverride
setServerOverride:
remoteServer
setRemoteServer:
mDelegate
setMDelegate:
connectionUsageQueue
_serverOverride
_remoteServer
_sharedInstance
_mDelegate
_connectionUsageQueue
T@"<DDSManaging>",&,N,V_serverOverride
T@"NSXPCConnection",&,N,V_remoteServer
T@"DDSInterface",R,N,V_sharedInstance
T@"<DDSManagingDelegate>",&,N,V_mDelegate
T@"NSObject<OS_dispatch_queue>",R,N,V_connectionUsageQueue
T@"<DDSManagingDelegate>",&,N,V_delegate
assetDownloadDurationBuckets
roundNumber:toSignificantDigits:
isInteger:
cancelRecordingForAsset:
recordAssetAction:forAsset:
reportAssetDownloadAnalytic:
recordUpdateCycleState:
reportUpdateCycleAnalytic:
dumpAssetLogWithAssertions:installedAssets:
bucketForValue:fromBuckets:
processName
stringForAction:
analyticByIdentifier
analyticQueue
_analyticByIdentifier
_analyticQueue
T@"NSMutableDictionary",R,N,V_analyticByIdentifier
T@"NSObject<OS_dispatch_queue>",R,N,V_analyticQueue
observeAssetTypes:
notifyObserversAssetsUpdatedForType:
beginObservingTypes:
endObservingTypes:
typesToObserve
setTypesToObserve:
_typesToObserve
T@"<DDSAssetObservingDelegate>",W,N,V_delegate
T@"NSSet",&,N,V_typesToObserve
predicateForAssetQuery:compatiblilityVersion:
predicateForQuery:compatibilityVersion:internalInstall:
extractRegionDictFromFilter:
regionKeys
compatibilityPredicateForCompatabilityVersion:internalInstall:
predicateForKey:matchingString:
predicateForKey:matchingAnyStringIn:
predicateForKey:matchingAnyDictionaryIn:acceptUnspecifiedValue:acceptUnspecifiedAttribute:lenientMatch:
initWithLanguageIdentifier:
T@"DDSLinguisticAttributeFilter",R,N
initWithIdentifier:
updateWithAction:
durationInSec
identifier
success
setSuccess:
retries
setRetries:
startTime
setStartTime:
endTime
setEndTime:
lastAction
setLastAction:
_success
_lastAction
_identifier
_retries
_startTime
_endTime
TQ,N,V_retries
TB,N,V_success
Td,N,V_startTime
Td,N,V_endTime
Ti,N,V_lastAction
T@"NSString",R,N,V_identifier
preferredDownloadFrequency
downloadOverCellular
downloadWithoutPower
downloadCompletionNotification
idleUsageEvictionPeriod
notificationDownloadTriggers
assetPolicy
stringForAssetDownloadFrequency:
isEqualToAssetPolicy:
setPreferredDownloadFrequency:
setDownloadOverCellular:
setDownloadWithoutPower:
setNotificationDownloadTriggers:
setDownloadCompletionNotification:
setIdleUsageEvictionPeriod:
_downloadOverCellular
_downloadWithoutPower
_preferredDownloadFrequency
_notificationDownloadTriggers
_downloadCompletionNotification
_idleUsageEvictionPeriod
T@"NSDateComponents",&,N,V_idleUsageEvictionPeriod
Tq,N,V_preferredDownloadFrequency
TB,N,V_downloadOverCellular
TB,N,V_downloadWithoutPower
T@"NSSet",C,N,V_notificationDownloadTriggers
T@"NSString",C,N,V_downloadCompletionNotification
initWithAsset:
setAsset:
_asset
T@"DDSAsset",&,N,V_asset
latestAssetsOnlyFromAssets:
latestBetweenAssetA:AssetB:
platformVersion
supportedCompatibilityVersion
beginDownloadForAssertions:discretionaryDownload:
assetsForQuery:errorPtr:
updateCatalogForAssetTypes:discretionaryDownload:withCompletion:
removeAssetsForAssertions:
removeOldAssetsForAssertions:
T@"<DDSAssetProvidingDelegate>",&,N
performAssetsForQuery:errorPtr:
shouldMatchAttributeValue:givenValue:
beginDownloadForAssertion:discretionaryDownload:handler:
beginDownloadForAssets:withPolicy:discretionaryDownload:error:handler:
downloadOptionsForPolicy:discretionaryDownload:
downloadOptionsForCatalogWithType:discretionaryDownload:
removeAssets:
didChangeDownloadState:forAsset:
didCompleteDownloadForAssertion:error:
didUpdateCatalogWithError:
remainingAssetsByQueryId
encounteredAssertionUpdateError
setEncounteredAssertionUpdateError:
assetQueryResultsCache
setAssetQueryResultsCache:
downloadStateByAssetID
setDownloadStateByAssetID:
_encounteredAssertionUpdateError
_remainingAssetsByQueryId
_assetQueryResultsCache
_downloadStateByAssetID
T@"NSMutableDictionary",R,N,V_remainingAssetsByQueryId
TB,N,V_encounteredAssertionUpdateError
T@"<DDSAssetQueryResultCaching>",&,N,V_assetQueryResultsCache
T@"NSMutableDictionary",&,N,V_downloadStateByAssetID
T@"<DDSAssetProvidingDelegate>",&,N,Vdelegate
assertionIdentifier
clientIdentifier
initWithPolicy:assertionID:clientID:
isEqualToDescriptor:
setClientIdentifier:
setAssertionIdentifier:
setPolicy:
_clientIdentifier
_assertionIdentifier
_policy
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_assertionIdentifier
T@"DDSAssetPolicy",&,N,V_policy
initWithMaxCount:
cacheObject:forKey:
objectForKey:
order
maxCount
_order
_maxCount
T@"NSMutableDictionary",R,N,V_cache
T@"NSMutableOrderedSet",R,N,V_order
TQ,R,N,V_maxCount
T@"<DDSCacheDelegate>",W,N,V_delegate
loadAssertionData
saveAssertionData:
assertionContentDirectory
assertionContentURL
didUpdateAssertion:atDate:
assertionDueForUpdateSinceDate:
allAssertions
trackedAssetTypes
resetAssertionDueDates
T@"<DDSAssetTrackingDelegate>",&,N
initWithDataHandler:
assertionDueForUpdateFrom:SinceDate:
trackedAssertions
intervalForDownloadFrequency:
trackedAssertionSets
dataHandler
_trackedAssertions
_trackedAssertionSets
_dataHandler
T@"NSMutableArray",R,N,V_trackedAssertions
T@"NSMutableDictionary",R,N,V_trackedAssertionSets
T@"<DDSAssertionDataHandling>",R,N,V_dataHandler
T@"<DDSAssetTrackingDelegate>",&,N,V_delegate
didBeginUpdateCatalog
didCompleteDownloadForAssertions:error:
handleRemovedAssertions:
handleNewAssertions:
remoteSyncStateRequestsUpdate
remoteSyncStateRequestsRetry
remoteSyncStateRequestsReset
initWithProvider:tracker:
beginUpdateCycleForced:discretionaryDownload:
didStartUpdateCycle
willRetryUpdateCycle
didEndUpdateCycleWithError:
deleteV1AssetsIfNecessary
tracker
timer
remoteSyncState
pendingAssertionsToUpdate
setPendingAssertionsToUpdate:
pendingAssertionsQueue
_tracker
_timer
_remoteSyncState
_pendingAssertionsToUpdate
_pendingAssertionsQueue
T@"<DDSAssetTracking>",R,N,V_tracker
T@"DDSScheduledTimer",R,N,V_timer
T@"DDSRemoteSyncState",R,N,V_remoteSyncState
T@"NSMutableSet",&,N,V_pendingAssertionsToUpdate
T@"NSObject<OS_dispatch_queue>",R,N,V_pendingAssertionsQueue
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@40
v24@0:8@16
v32@0:8@16@?24
v16@0:8
v48@0:8@"DDSAssetQuery"16@"DDSAssetPolicy"24@"NSString"32@"NSString"40
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSSet">24
@"<DDSManagingDelegate>"16@0:8
v24@0:8@"<DDSManagingDelegate>"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
@"<DDSManaging>"
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
v40@0:8@16@24@32
v32@0:8@16@24
v32@0:8@"DDSCache"16@"NSArray"24
@"NSArray"24@0:8@"DDSAssetQuery"16
v32@0:8@"NSArray"16@"DDSAssetQuery"24
@"DDSCache"
@32@0:8@16@24
@32@0:8@16^@24
@"<DDSAssetProviding>"
@"<DDSAssetObserving>"
@44@0:8@16Q24@32B40
@24@0:8Q16
Q24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@?16
@"NSMutableDictionary"
@40@0:8@16@24@32
B36@0:8@16@24B32
B40@0:8@16@24B32B36
B40@0:8@16@24@?32
@"DDSAsset"
@"NSDictionary"
@"NSURL"
@"NSString"
@"MAAsset"
v40@0:8@16d24d32
@"<DDSBackgroundActivitySchedulerDelegate>"
@24@0:8^{_NSZone=}16
@"NSDate"
@"DDSAssetQuery"
d16@0:8
d24@0:8Q16
q16@0:8
v24@0:8q16
v24@0:8Q16
@"<DDSRemoteSyncStateDelegate>"
@"DDSBackgroundActivityScheduler"
@48@0:8@16@24B32B36B40B44
v20@0:8B16
@"DDSAttributeFilter"
@"<DDSManagingDelegate>"
@"NSXPCConnection"
@"DDSInterface"
v28@0:8i16@20
v20@0:8i16
@20@0:8i16
v24@0:8@"<DDSAssetObservingDelegate>"16
@"<DDSAssetObservingDelegate>"16@0:8
v24@0:8@"NSSet"16
@"<DDSAssetObservingDelegate>"
@"NSSet"
@32@0:8@16Q24
@36@0:8@16Q24B32
@28@0:8Q16B24
@44@0:8@16@24B32B36B40
v24@0:8d16
i16@0:8
@24@0:8q16
@"NSDateComponents"
v28@0:8@16B24
v36@0:8@16B24@?28
v28@0:8@"NSSet"16B24
@"NSArray"32@0:8@"DDSAssetQuery"16^@24
@"NSArray"32@0:8@"NSArray"16@"DDSAttributeFilter"24
v36@0:8@"NSSet"16B24@?<v@?@"NSError">28
@"<DDSAssetProvidingDelegate>"16@0:8
v24@0:8@"<DDSAssetProvidingDelegate>"16
v52@0:8@16@24B32^@36@?44
@28@0:8@16B24
v32@0:8Q16@24
@"<DDSAssetProvidingDelegate>"
@"<DDSAssetQueryResultCaching>"
@"DDSAssetPolicy"
@"<DDSCacheDelegate>"
@"NSMutableOrderedSet"
@"NSArray"16@0:8
v24@0:8@"NSArray"16
v32@0:8@"DDSAssertion"16@"NSDate"24
@"NSArray"24@0:8@"NSDate"16
@"NSSet"16@0:8
@"NSSet"24@0:8@"NSString"16
@"<DDSAssetTrackingDelegate>"16@0:8
v24@0:8@"<DDSAssetTrackingDelegate>"16
d24@0:8q16
@"<DDSAssetTrackingDelegate>"
@"NSMutableArray"
@"<DDSAssertionDataHandling>"
v24@0:8@"NSError"16
v32@0:8Q16@"DDSAsset"24
v32@0:8@"DDSAssertion"16@"NSError"24
v32@0:8@"NSSet"16@"NSError"24
v24@0:8B16B20
@"<DDSAssetTracking>"
@"DDSScheduledTimer"
@"DDSRemoteSyncState"
