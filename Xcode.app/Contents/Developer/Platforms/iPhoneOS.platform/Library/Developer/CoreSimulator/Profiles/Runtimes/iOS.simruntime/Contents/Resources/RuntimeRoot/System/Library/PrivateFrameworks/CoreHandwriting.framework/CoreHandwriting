?333333
=17TriangleRegressor
9Regressor
10CHTriangle
&@333333
?fffff
f@333333
Mb`?-C
MbP?
333333
333333
 Bff
15CHManhattanLine
6CHLine
12CHChatBubble
19ChatBubbleRegressor
6MatrixIfE
6CHStar
E6MatrixIdE
@RRRRRR
A@333333
?ffffff
?ffffff
?ffffff
______
?______
?______
VVVVVV
?______
?333333
9CHEllipse
______
?______
?______
VVVVVV
?333333
333333
@333333
@333333
333333
@333333
@333333
@333333
@ffffff
@333333
@333333
@333333
@333333
@ffffff
@ffffff
@333333
@ffffff
@333333
333333
?333333
?333333
?ffffff
15CHOutlinedArrow
11CHRectangle
12CHBasicShape
18RectangleRegressor
?^^^^^^
MbP?
@7CHCloud
?14CHStraightLine
12CHBezierLine
?VVVVVV
?^^^^^^
?}}}}}}
=N5boost16exception_detail10clone_implINS_3qvm22zero_determinant_errorEEE
N5boost3qvm22zero_determinant_errorE
N5boost3qvm5errorE
N5boost9exceptionE
N5boost16exception_detail10clone_baseE
??o*Ral
@333333
9SymbolMap
333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
333333
333333
VVVVVV
@7CHHeart
ffffff
es-8R
?ffffff
?es-8R
?es-8R
RRRRRR
10CHPentagon
26CHRSketchRecognitionResult
v8@?0
.@#:/-_
%@%@
v32@?0@"NSString"8@"NSArray"16^B24
v24@?0^{_LXEntry=}8*16
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
!?();:
Guess
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
v16@?0@"CHTokenizedStrokeResult"8
Stroke Group Query %p
Unknown
Handwriting
 ID: %@, StableID: %@, Stroke count: %ld, type: %@
encodedStrokeIdentifier
string
strokeIndexes
wordID
recognitionScore
combinedScore
alignmentScore
properties
substrokeCount
boundsOriginX
boundsOriginY
boundsWidth
boundsHeight
 '%@', strokes: %@, substrokeCount: %ld, wordID: %d, recognitionScore: %0.4f, combinedScore: %0.4f, alignmentScore: %0.4f, rare: %@, lexicon: %@, pattern: %@, inappropriate: %@, precedingSpace: %@, original: %@, bounds: [%0.4f, %0.4f, %0.4f, %0.4f]
imgData
featureData
softmax_output
+N9mZUAHooNvMiQnjeTJ8g
.codemap
vo_en
CHRecognitionOptionTextBefore
CHRecognitionOptionTextAfter
CHRecognitionOptionPrecedingSpaceBehavior
CHRecognitionOptionFrameContext
CHRecognitionOptionDrawingAnchorPoint
CHRecognitionOptionShouldRefineCandidates
CHRecognitionOptionShouldPreserveCaseVariantCandidates
CHRecognitionOptionInferenceCache
CHRecognitionOptionIsRunningSecondaryLocale
CHRecognitionOptionMinSizeForReliableRescaling
v36@?0I8{_NSRange=QQ}12^B28
012olzOLZ
Oval
Line
Outline Arrow
Triangle
Rectangle
Pentagon
Manhattan Line
Chat Bubble
Star
Heart
Cloud
Scribble
com.apple.CoreHandwriting
HWRTriangleAlignToAxisThreshold
HWRTriangleIsoscelesLengthRatioThreshold
HWRTriangleEquilateralLengthRatioThreshold
HWROvalFitToCircleRadiiRatioThreshold
HWROvalAlignToIncrementsOf
HWRRectangleFitToSquareLengthRatioThreshold
HWRRectangleAlignToIncrementsOf
HWROutlinedArrowAlignToIncrementsOf
HWRLineAlignToAxisThreshold
HWRLineLengthRatioThreshold
B24@?0@"CHTextRecognitionResult"8@"NSDictionary"16
v64@?0@"CHTokenizedTextResultToken"8q16{?=qqq}24{_NSRange=QQ}48
'.-/
-/._@
v28@?0r*8q16I24
d16@?0r^{NetworkEdge=QQQQddQQQ}8
d16@?0^v8
B32@?0@"CHTextRecognitionResult"8Q16^B24
d24@?0r^v8d16
'".-
%@%@%@
q24@?0@8@16
v24@?0Q8^B16
com.apple.CoreHandwriting.recognizerQueue
B32@?0@"<CHStroke>"8Q16^B24
v40@?0{CGPoint=dd}8d24^B32
q16@?0q8
=== Insight Request ===
  request: %@
=== Recognizer Configuration ===
  recognizerLocale: %@
  recognizerRecognitionMode: %@
  recognizerContentType: %@
  autoCapitalizationMode: %@
  autoCorrectionMode: %@
  recognizerActiveCharacterSet: %@
  recognizerMaxRecognitionResultCount: %ld
  recognizerMinimumDrawingSize: {width: %0.2f, height: %0.2f}
    %@: %@,
v32@?0@"NSString"8@"NSObject"16^B24
  recognizerOptions: %@
=== Input Drawing ===
None captured
  inputDrawing: %@
=== Text Result ===
drawingStrokes
drawingStrokesTimeStamps
%d %d %d
json
channel
data
origin: (%0.2f, %0.2f), size: (%0.2f, %0.2f)
 strokes: %lu, points: %lu, %@
%d %d
channels
dd-MM-yyyy-HH-mm-ss-SSS
/drawing_%@-%@.json
Error: Degenerated drawing (empty stroke present)
q24@?0@"CHCutPoint"8@"CHCutPoint"16
B32@?0@8Q16^B24
UIImage
Unable to find class %s
  %ld: origin: (%0.2f, %0.2f), size: (%0.2f, %0.2f)
@"NSString"24@?0@8q16
(none)
 textInputTarget: (%@), contentType: %@, textContentLength: %ld, referenceSubstring: "%@", referenceSubstringRange: %@, selectedRange: %@, isCursorStrong: %@, containsCommittedStrokes: %@, activePreviewRange: %@, strokeCoveredTextRange: %@, lastCharacterLevelPosition: %@, isSingleLine: %@, supportsAutoLineBreaks: %@, characterRectsInReferenceSubstring: {%@}, protectedCharacterIndexes: {%@}
aceimnorsuvwxz,.-_*+~<>
gjpqy
v24@?0q8^B16
v56@?0q8{CGRect={CGPoint=dd}{CGSize=dd}}16^B48
strokeIdentifier
substrokesCount
classificationAsNonText
lineOrientation
lineError
containerScore
bounds
boundsDiagonal
enlargedBounds
rotatedBounds
supportByStrokeIdentifier
support
{CGRect={CGPoint=dd}{CGSize=dd}}
<%@: %p strokeIdentifier=(%@) support=%.3f class=%ld>
strokeGroups
groupingResultsByStrategyIdentifier
groupingManagerNonText
%@, 
v32@?0@"CHEncodedStrokeIdentifier"8@"NSNumber"16^B24
v24@?0@"CHEncodedStrokeIdentifier"8^B16
B24@?0@"CHStrokeGroup"8^B16
q24@?0@"CHEncodedStrokeIdentifier"8@"CHEncodedStrokeIdentifier"16
q24@?0@"CHStrokeGroup"8@"CHStrokeGroup"16
q24@?0@"<CHStroke>"8@"<CHStroke>"16
CHTextStrokeTransformationQuery %p
inputStrokeIdentifiers
sessionMode
textCorrectionResult
recognitionResultsByLocale
orderedLocales
errorsByLocale
languageFitnessByLocale
languageFitnessDictByLocale
rawScore
strokeClassificationsByStrokeIdentifier
substrokesByStrokeIdentifier
nontextCandidates
strokeProviderVersion
orderedStrokeIdentifiers
locales
preferredLocales
strokeClassificationResult
strokeGroupingResult
recognitionResults
inlineContinuousModeResults
generationDuration
recognitionEnvironment
", "
"%@"
 strokeProviderVersion: %@, locales: %@, strokeClassificationResult: %@, strokeGroupingResult: %@
  Group %ld: 
recognition: %@
textCorrection: %@
Group Results: 
@"NSString"24@?0@"CHStrokeGroup"8@"NSLocale"16
GroupID %ld, %@
== %@ ==
GroupID %ld
%@: {
<NO RESULT>
"%@"%@
<ERROR: %@>
Gen 1
Gen 2
Recognizer Generation: %@
None
(%.3f, %.3f)
Language Fitness: %@
B32@?0@"CHStrokeGroup"8Q16^B24
 Strokes: %ld, text strokes: %ld
B32@?0@"CHEncodedStrokeIdentifier"8@"NSNumber"16^B24
 Groups: %ld, created: %ld, deleted: %ld
CHSkipConfidenceFiltering
@"NSString"24@?0@"NSLocale"8q16
v32@?0@"NSLocale"8@"NSValue"16^B24
{?=dd}
v32@?0@"NSLocale"8@"NSDictionary"16^B24
v32@?0@"NSLocale"8@"NSNumber"16^B24
q24@?0@"NSString"8@"NSString"16
q24@?0@"NSLocale"8@"NSLocale"16
B32@?0@"NSLocale"8Q16^B24
B20@?0i8Q12
recognitionMode
drawing
options
minimumDrawingWidth
minimumDrawingHeight
contentType
autoCapitalizationMode
autoCorrectionMode
activeCharacterSetPerLocale
maxRecognitionResultCount
shouldUseTextReplacements
enableCachingIfAvailable
enableGen2ModelIfAvailable
enableGen2CharacterLMIfAvailable
enableStrokeReordering
hasBeenSubmitted
priority
parameterOverride
@"NSString"24@?0@"NSCharacterSet"8q16
Remote Recognition Request %p (locales=[%@], mode=%@, content type=%@, autocapitalization mode=%@, autocorrection mode=%@, option keys=%@, active character sets=[%@], drawing=%p, shouldUseTextReplacements=%@, enableCachingIfAvailable=%@, enableGen2ModelIfAvailable=%@, enableGen2CharacterLMIfAvailable=%@, _enableStrokeReordering=%@, hasBeenSubmitted=%@, priority=%ld)
General
Recognizer
RecognitionSession
StrokeGrouping
ClutterFiltering
RemoteRecognizer
TextCorrectionRecognizer
CoreHandwritingSignPosts
com.apple.corehandwriting
tokenRows
@"NSString"24@?0@"NSArray"8q16
@"NSString"24@?0@"CHTokenizedTextResultToken"8q16
[%p "%@" %.2f, %.2f]
  %@
 rows: %ld {
v32@?0@"NSArray"8Q16^B24
q24@?0@"NSArray"8@"NSArray"16
ancestorIdentifier
uniqueIdentifier
strokeIdentifiers
firstStrokeIdentifier
lastStrokeIdentifier
classification
groupingConfidence
strategyIdentifier
firstStrokeOrigin
com.apple.CoreHandwriting.StrokeGroupID
 uniqueID: %ld, ancestorID: %ld, bounds: {x: %0.1f, y: %0.1f, width: %0.1f, height: %0.1f}, strokes: %ld, strategy: %@
{CGPoint=dd}
v16@?0@"CHTextInputTargetContentInfo"8
v32@?0@8Q16^B24
inputTargetIdentifier
frameXOrigin
frameYOrigin
frameWidth
frameHeight
 ID: %@, frame: {x: %0.1f, y: %0.1f, width: %0.1f, height: %0.1f}
writingDirectionSortedStrokeIdentifiers
writingDirectionSortedSubstrokes
averageStrokeDeviation
averageWritingOrientation
localStrokeWritingOrientations
lastSubstrokeIndexBeforeMerge
coalescedLastSubstrokes
gjpqyz
B32@?0@"NSArray"8Q16^B24
B32@?0@"NSIndexSet"8Q16^B24
%@-%@_%@
%@_%@
%@-%@
 Low confidence, reporting nil.
Title Query %p
com.apple.CoreHandwriting.CHSingletonMLModelQueue
class: %@ score: %3.5f string: %@
Freeform
v16@?0@"NSIndexSet"8
v32@?0{_NSRange=QQ}8^B24
Search Query %p
 strokeIdentifiers: %@
B24@?0{_NSRange=QQ}8
0x%x
v16@?0^v8
output_topk_indices
v56@?0q8q16^f24q32^B40^B48
tokenColumns
transcriptionPaths
transcriptionPathScores
recognizerGenerationIdentifier
precedingLineBreaks
changeableTokenColumns
trailingSeparator
columns
column
@"NSString"24@?0@"CHTokenizedTextResultColumn"8q16
rows
%ld %@
transcriptionPath
@"NSString"24@?0@"NSIndexPath"8q16
Column %ld %@
 %ld (%ld changeable) %@ [%@], %ld %@ 
Gen1
Gen2
v48@?0@"CHTokenizedTextResultToken"8q16{?=qqq}24
B32@?0@"CHTokenizedTextResultColumn"8Q16^B24
en_US
/result_%@-%@.dat
B32@?0@"CHTokenizedTextResult"8Q16^B24
@24@?0@"NSIndexPath"8q16
B32@?0@"NSIndexPath"8Q16^B24
v48@?0r^I8q16d24q32^B40
abcxyz
ErrorModel
input
output
/model.espresso.net
s%d_p%d
input_stroke
input_mask
input_posenc
output_predictions
Low split score
Second group with single too short stroke (time interval = %.3f, threshold = %.3f).
Second group with single too short stroke (arc length = %.3f, threshold = %.3f).
Second group with an unfinished stroke and only a few (%li) other short strokes
Two parallel lines (err1=%.3f, err2=%.3f, ori1=%.3f, ori2=%.3f).
timeWindowStrategy
CHRecognitionTaskOverhead
com.apple.CoreHandwriting.RecognitionSessionRecognizers
B8@?0
CHRecognitionSessionLogging
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
Text Input Query %p
, error: %@
 text: '%@', itemID: %@, stableItemID: %@, type: %ld, strokes: %ld%@
v32@?0@"NSDictionary"8@"NSDictionary"16@"DDScannerResult"24
Data Detector Query %p
 strokeIdentifiers: %@, result type: %@
v24@?0@"NSString"8^B16
v32@?0@"CHTokenizedTextResultToken"8Q16^B24
Prefix data Query %p for prefix %@
startTimestamp
endTimestamp
convexHull
curvature
substroke
strokeDeviation
originalWritingDirectionIndex
writingOrientation
coalescedCenter
%.10g
Helvetica-Bold
Stroke group classification: 
text
clutter
doodle
line
container
unknown
CTFontCreateWithName
CTParagraphStyleCreate
CTFramesetterCreateWithAttributedString
CTFramesetterCreateFrame
CTFrameDraw
kCTFontAttributeName
kCTForegroundColorAttributeName
kCTParagraphStyleAttributeName
{%f, %f}
v56@?0q8{CHLineSegment={CGPoint=dd}{CGPoint=dd}}16^B48
com.apple.handwritingd.remoterecognition
v16@?0@"NSError"8
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"CHTokenizedTextResult"8@"NSError"16
CHLogAllDrawings
drawing_%@_%@.json
request_%@_%@.dat
result_%@_%@.dat
StrokeBounds
SubstrokeBounds
StrokePoints
GroupBounds
Grouping
GroupClassification
GroupBaselineLegacy
GroupBaseline
NormalizedDrawing
NormalizedDrawingAll
CHStatusKeyStatus
CHStatusKeyEnvironment
CHStatusKeyLocales
CHStatusKeyLastDurationTotal
CHStatusKeyLastDurationDetailed
CHStatusStrokeCount
CHStatusKeyGroupCount
CHStatusKeyTranscript
CHStatusKeyAllResults
Stroke Bounds
Substroke Bounds
Stroke Points
Stroke Group Bounds
Stroke Groups by Color
Stroke Groups Classification
Stroke Groups Baseline (Legacy)
Stroke Groups Baseline
Normalized Drawing (Selective)
Normalized Drawing (All)
Status
Environment
Locales
Total Duration
Detailed
Stroke Count
Group Count
Transcript
Text Results
In process
Out of process
Automatic
%@ (%@)
%0.2fs
%0.2fs clutter filtering, %0.2fs Stroke class., %0.2fs Grouping, %0.2fs Recog.
%ld text, %ld non-text
Group %ld (ID: %ld)
<Status Reporting Disabled>
v32@?0@"NSNumber"8@"NSNumber"16^B24
Transcription Query %p
com.apple.CoreHandwriting.%@.Processing
Query %p
<div style="clear:both;margin:auto;font-size:250%%;" >
<p>WARNING : NOTHING WAS SAVED : YOU MUST CLICK ON THE FOLLOWING LINK !</p>
<p><a href="#" onclick="SendMail(%d);">Send via email to Antoine !</a></p>
</div>
<p>For information, here are the files you flagged:</p>
<p id="po-term%d" style="margin:0;" \>
</body>
</html>
not triangulation
Cannot link edge
Zund
v32@?0@"NSString"8@"NSNumber"16^B24
num_characters
num_strokes
num_groups
majority_script
nontext_ratio
rotation_angle
time_for_straightening_ms
{CGPoint=dd}24@?0{CGPoint=dd}8
UIGraphicsBeginImageContextWithOptions
UIGraphicsGetImageFromCurrentImageContext
UIGraphicsEndImageContext
UIFont
NSFontAttributeName
UIColor
NSForegroundColorAttributeName
NSStrokeColorAttributeName
typename lazy_enable_if_c<is_mat<A>::value && mat_traits<A>::rows == mat_traits<A>::cols && !qvm_detail::inverse_m_defined<mat_traits<A>::rows>::value, deduce_mat<A>>::type boost::qvm::inverse(const A &) [A = boost::qvm::mat<double, 6, 6>]
/AppleInternal/Library/BuildRoots/2c64d074-f3a6-11ec-b416-82ecb900cc8f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.0.Internal.sdk/usr/local/include/boost/qvm/mat_operations.hpp
Boost QVM error
inputTarget
affectedRange
textResult
resultType
isCharacterLevel
error
Text
Encircle
Polygon
SplitJoin
Insertion Caret
<%@: %p> "%@"
 inputTargetID: %@, affectedRange: %@, resultType: %@, textResult: %@, isCharacterLevel: %@, error: %@
ctc_zh
ctc_latn
ctc_ja
ctc_ko
ctc_th
ctc_cyrl
bundle
DecodingLexiconWeight
DecodingLexiconLowerBoundLogProbability
DecodingCharacterLMWeight
DecodingCharacterLMLowerBoundLogProbability
DecodingWordLMWeight
DecodingWordLMLowerBoundLogProbability
SwapRulePreferEnglishRecognitionScoreMargin
SwapRuleAcceptableEnglishHeuristicTextScoreMargin
SwapRuleAcceptableEnglishRecognitionScoreMargin
SwapRulePreferEnglishHeuristicTextScoreMargin
SwapRuleRecognitionScoreDecisiveMargin
SwapRuleHeuristicTextScoreDecisiveMargin
SwapBlockRulePreferCyrillicHeuristicTextScoreMargin
SwapBlockRuleAcceptableCyrillicRecognitionScoreMargin
SkipLatinProbabilityThreshold
MultiCharacterOverlapped
SingleCharacter
Sketch
MultiCharacterInline
MultiCharacterInlineKeyboard
MultiCharacterCanvas
Default
Digits
PhoneNumber
Username
EmailAddress
ASCII
Equation
Words
Sentences
AllUppercase
AllLowercase
English
French
Spanish
Italian
German
Portuguese
Chinese
Cantonese
Japanese
Indonesian
Dutch
Thai
Korean
Russian
Ukrainian
SimplifiedChinese
TraditionalChinese
Roman
Cyrillic
 Recognizer configuration with mode: %@, locale: %@, contentType: %@, autoCapitalizationMode: %@, autoCorrectionMode: %@, language: %@, script: %@
zh_Hans
zh_Hant
ja_Jpan
Latn
Hans
Hant
Hrkt
Hira
Kata
Jpan
Hani
Kore
Cyrl
CoreHandwriting
experimental_latin_script
thai_support
russian_support
ukrainian_support
none
%@-%ld-%@-%@
zh_hant
com.apple.CoreHandwriting.LanguageModelLoadingQueue
v44@?0^{__CFURL=}8i16^{__CFLocale=}20^{__CFString=}28^B36
pt_BR
/System/Library/PrivateFrameworks/TextRecognition.framework/pt_BR.lm
corpus.wid
odat
P.bin
PP.bin
G.bin
R.bin
synthetics_
zh-Hans
zh-Hant
zh_compact
vo_en_compact
vo_de
vo_other
Invalid empty FST line entry
File not found: (
Node[
has out degree zero but is not marked as a final node
has in degree zero but is not marked as an initial node
0x%zx
mode
version
lastRecognitionResult
sessionVersion
sessionResultVersion
Initial
Accumulating
Processing
Finished
stroke_classification.bundle
com.apple.CoreHandwriting.RecognitionSessionCanvasTaskSharedTarget
com.apple.CoreHandwriting.RecognitionSessionCanvasHighResponsivenessTask
com.apple.CoreHandwriting.RecognitionSessionTextInputTaskSharedTarget
com.apple.CoreHandwriting.RecognitionSessionTask
com.apple.CoreHandwriting.RecognitionSession
v16@?0@"<CHRecognitionSessionObserver>"8
v16@?0@"CHRecognitionSessionResult"8
B32@?0@"NSValue"8Q16^B24
time_for_recognition_ms
com.apple.CoreHandwriting.CHCharacterSetsRules
^*+=<>.,
:'"-/
apmAPM.
strdndth.
:;B=
)(pPDoOxX*
_-.+
_-.:/+&?%()$=
-/.@_
.,!?;:
!?:;
substrokePlacementsByStrokeIdentifier
vertical
horizontal
q24@?0@"CHSubstrokePlacement"8@"CHSubstrokePlacement"16
q24@?0@"CHTextLineStrokeGroup"8@"CHTextLineStrokeGroup"16
PKStrokesDrawn
PKSmartSelection
PKCopyAsText
PKSmartShapes
PKInsertSpace
PKDataDetector
PKTextLineStraightening
com.apple.corehandwriting.fast_stroke_grouping
IndexableContent Query %p
0x61a649a
0x34f55ec
0x7f7446f
0xe6b391a
0x08d4b39
0xbdde29e
0x633a6c7
0x346ff32
0xf9be5b7
0xf9dd946
0x27087b3
0x5fb9dc5
0xcf06682
0xcff9621
CHPostProcessingStepOptionAdjustColumns
es_ES
+-#*'",. 
@"CHTokenizedTextResultToken"40@?0@"CHTokenizedTextResultToken"8{?=qqq}16
Inference cache size for drawing [%@]: %lu (%@)
@24@?0@8q16
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
+=<>
`"e"d"
"& 5"
N5l\SL
NZN+N@
N*N@
 0b
'`$a$b$c$d$e$f$g$h$
minLength has to be > 0
Lexicon correction requires non-empty token string.
The prefix length should be smaller than the candidate string length
The corrected entry string length must be greater than the length of the active prefix
The token prefix should be case-sensitive equal after lexicon correction
The token prefix should be case-insensitive equal after lexicon correction
%@: beginning update for result version %@.
%@: finished update for session %p. %ld item(s) available.
Failed to get stroke with id: %@ from stroke provider version %@
The input string (%@) contains one or more ligature private code points
%@ decoding failed. Token string and stroke indexes are required to be nonnull when constructing a result token
Model execution on CPU only: %d
Model batch size: %d
Falling back to a batch size of %u for usesCPUOnly == %d
Error loading recognition model: %@
Error model output data format not supported: %ld
Error creating MLFeatures: %@
Error, the number of results doesn't match the model batch size (usesCPUOnly == %u)
Error, the number of results doesn't match the data batch size (usesCPUOnly == %u)
Not-a-char codepoint (U+%04x) is being added to the filtered candidate results (activeCharacterSet is nil: %d)
Error for model prediction in CHNeuralNetwork::feedforward: %@
predictionResultsPtr is nullptr
Error for model prediction in CHNeuralNetwork::feedforwardFromBatches: %@
Unexpected prediction tensor dimension: %lu
Prediction tensor must be of dimension %ld instead of %lu for batch size different from 1
predictionsPointer == nullptr
Configuration for recognizer with mode=%@ and locale=%@ is not supported.
Error loading the static lexicon: %@
Error loading the secondary static lexicon: %@
Error loading the phrase lexicon: %@
Processing input as single character drawing with %lu segments
The number of segments (%lu) must be the same as the number of sorted segment indexes (%lu)
The number of nodes in the candidate network (%lu) should match the number of generated segments (%lu)
We must add at least one candidate for each edge
Batch contains %lu non classified drawings
There must be at least one valid path
Incorrect index in segment decoding: index %ld (idx %ld + offset %ld) should be smaller than %ld, the number of segments on the group.
The recognition model must be loaded before inference can be called on it
The text decoder must be loaded before decoding can be executed
Activation matrix retrieved from inference cache for config %@ and drawing %@.
Obtaining activation matrix by model inference for config %@ and drawing %@.
BEGIN "CHActivationMatrix"
CHActivationMatrix
END "CHActivationMatrix"
BEGIN "CHDecoding"
Using the CVNLP Text Decoder
Text decoding unexpectedly leads to empty result - falling back on single-character result from the activation matrix.
CHDecoding
END "CHDecoding"
The token activation range is longer than the sequence in the activation matrix.
Previous token stroke index set is empty, and current token %@ stroke index set is also empty
The first stroke index must be non-negative
CHRecognizer is running RNN recognition pipeline: %d
BEGIN "CHNextGenRecognition"
CHNextGenRecognition
END "CHNextGenRecognition"
BEGIN "CHPostProcessing"
CHPostProcessing
END "CHPostProcessing"
BEGIN "CHSegmentAndDecode"
CHSegmentAndDecode
END "CHSegmentAndDecode"
strokeProvider cannot be nil.
  Stroke provider change added %ld strokes, removed %ld strokes.
  Ignoring %ld added strokes that cannot enumerate their points.
StrokeProviderError: Inconsistency in stroke provider. Stroke with id %@ is exposed but this id can not be resolved by stroke provider version %@.
Stroke Grouping Logic Error: Failed to get stroke with id %@. The stroke is not exposed by stroke provider version %@.
retrieving stroke identifier gave nil result. Encoded stroke identifier: %@
timestep must be > 0
Stroke with no enumerable points found, recognition results may be affected. Stroke: %@
Drawing with no enumerable points found, recognition results may be affected. Drawing: %@
Removed %lu NaN-Points from %lu given points before calculating convex hull.
Removed %lu NaNs from %lu given values before calculating vector mean without outliers.
Warning: Less than %2.1f%% of the original points remain in the drawing after cleanup (before: %d, after: %d)
Error: computeSpatialFeaturesWithNoOverlapFromSparseBitmap: new bitmap size (%u) is larger than the original size (%u)
Error: computeSpatialFeaturesWithNoOverlapFromSparseBitmap: new bitmap size (%u) is equal to 0
Empty stroke detected during spatial resampling.
Error: readCharacter: filename ptr = 0
Error: readCharacter: Empty filename
Error: readCharacter: Wrong filename :%s:
Could not read data from file %@
%@ decoding failed. There was a problem decoding the stroke data.
At least one stroke index must be passed
Drawing unable to create folder at URL %@: Error %@
Drawing writeToFile saving drawing at URL %@, error = %@
Method can only be called on a single character string
isCharacterEmoji: character string doesn't match expectation of being single character with length (%lu)
isCharacterEmoji: codeCounts is 0 when data is encoded from character of length (%lu)
isCharacterEmoji: encoded data is invalid, null or empty, from character of length (%lu)
selectedTextRange %@ beyond text length %ld
activePreviewRange %@ beyond text length %ld
Invalid referenceSubstringRange %@
referenceSubstringRange %@ beyond text length %ld
Invalid referenceSubstringRange %@, length doesn't match string length %ld
The strokeCoveredTextRange %@ must be within the referenceSubstringRange %@
charRectsInReferenceSubstring cannot be NULL for referenceSubstringRange: %@
The referenceSubstring length must be equal to the range that it covers
Trying to get support for unsupported non-text candidate class.
Could not find a point in the drawing to match that in the resampled drawing
At least one stroke grouping strategy must be set.
Stroke Grouping with strategies [%@]. Added strokes: %ld, removed strokes: %ld
Use the designated initializer instead
Error: unexpected missing preferredLocale with competing locales %@, ordered locales %@, falling back on %@
There must be a preferred locale for the filtered results if there exists at least one result.
Filtering results for locale %s based on raw fitness score %.3f. (best score: %.3f, threshold: %.3f)
Filtering results for locale %s based on combined fitness score %.3f. (best score: %.3f, gap threshold: %.3f)
CHRemoteRecognitionRequest must be initialized with at least one locale
%@ decoding failed. Locale and drawing are required to be non-null and priority has to be valid.
CHRemoteRecognitionRequest unable to create folder at URL %@: Error %@
CHRemoteRecognitionRequest writeToFile saving drawing at URL %@, error = %@
The CHRemoteRecognitionRequest cannot be mutated after being submitted
hasBeenSubmitted state cannot be reverted after being set to YES
%@ decoding failed. Result token rows are required to be nonnull when constructing a request
Invalid index %ld when trying to replace a row from column with %lu rows.
Invalid index %ld when trying to remvove a row from column with %lu rows.
Cannot have nil strokeIdentifiers
No group found for stroke identifier %@, All strokes should belong to a group.
The strokes count in the drawing (%ld) must match the ones in the result (%ld).
The strokes count in the original drawing (%ld) must match the ones in the result (%ld).
Received nil target content info for target %@
Target content info is invalid, ignoring. referenceSubstring.length %ld != referenceSubstringRange.length %ld
Target content info is invalid, ignoring. selectedTextRange %@ invalid for length %ld
Target content info is invalid, ignoring. strokeCoveredTextRange %@ is not in range of referenceSubstringRange %@
Request for target content info timed out for target %@
There should be at least one substroke covering one of the strokeIdentifiers.
The number of points in the raw baseline estimate must be > 0 at this point.
Raw points[0] = %.2f, %.2f
Baseline Data detectors baseline approximation with %lu points, correction error = %.2f, number of substrokes %lu
The length of the computed path must be the same as the input
The length of the computed path must be one more than the input
%@: finished update for session %p. Length: %ld.%s
%@: finished update for session %p. Found %ld item(s).
Stroke index %ld in search result out of group stroke count %ld.
item should be of class CHSearchQueryItem: %@
CHTextInputGesture does not support the text correction type.
Gesture recognized with type %ld, range  = %ld,%ld
The affected range to be trimmed must be valid
Refined stroke ranges can only be computed for scribble, circle or polygon result types
The initial affected text range must be valid
Character range cannot be undefined.
The input string and range must be compatible with each other
Range %@ out of string length %ld
leadingExpansion cannot be negative: %ld
trailingExpansion cannot be negative: %ld
Character index %lu beyond bounds for string length: %lu
The searching range must be valid
There must be a valid character closest to the point
No characters found on either side of the vertical bar stroke
The drawing cannot be empty
The stroke covered range must be within the reference substring range
The computed character index (%li) must be valid in the string (length=%li)
An error occurred in the %@ model when extracting features: %@
An error occurred when trying to create feature provider for the %@ model: %@
An error occurred in the %@ model: %@
Unexpect rank of the CoreML output array: %lu
An error occurred in defining a new shape for the output: %@
Error in model %@. Expected output length: %lu, actual output length: %lu
Unable to initialize resultArray and create activation matrix.
An error occurred when trying to allocate feature array for the %@ model: %@
transcriptionPaths count (%ld) != scores count (%ld)
transcriptionPaths count (%ld) != probabilities count (%ld)
Found empty row when creating result with best path tokens. It indicates that the given paths don't cover the same strokes.
transcriptionPaths count (%ld) != probabilities count (%ld) after tokenized result is built
%@ decoding failed. Token columns, transcription paths, and scores are required to be nonnull and equal in size when constructing a text result
Original token not found in column %ld
The character range must be compatible with the top transcription
Error: Tokenized text result without any transcription path encountered when computing language fitness.
Found empty stroke index set for the last character segment.
TokenizedResult writeToFile saving drawing at URL %@, error = %@
Unexpected mismatched stroke indexes in result %@. Top result stroke index set contains %@. This alternative result stroke index set contains %@.
compressResult removed all columns.
Unexpected failure to find common stroke sets between top stroke sets %@ and other stroke sets %@.
Incompatible index sets have no partition of common index sets.
Error: LMLanguageModelConditionalProbabilityVector returns false
found an unknown stroke ID %@ to be removed in clutter filtering
clutter filter inconsistent status: %lu <==> %lu
clutter strokes: %lu, affected strokes: %lu, added strokes: %lu, removed strokes: %lu
Cannot find corresponding stroke ID given the item ID: %@
debug quicklook window MaxCell=%lu
debug quicklook window size=[%lu, %lu]
debug quicklook: grid range X=[%ld, %ld], Y=[%ld, %ld]
calling strokeIDsWithinRegionOfInterest() while clutter filter being in inconsistent status: %lu <==> %lu
An error occurred when loading a model: %@
Model not found ("%@")
Error loading Espresso model %@
Error selecting configuration %@ for Espresso model %@
Text class index not found in stroke classification codemap
Input too wide (%f): adjust with scale factor %f
An error occurred when trying to allocate the input mask array for the %@ model: %@
An error occurred when trying to allocate the input positional encodings for the %@ model: %@
Cancelling stroke classification of chunks
An error occurred in the %@ model during prediction
Unexpected number of strokes %lu to select the model configuration
Unexpected max number of points per stroke %lu to select the model configuration
Cancelling stroke classification
An error occurred in the %@ model when creating the input mask array: %@
An error occurred in the %@ model when creating the positional encodings array: %@
An error occurred selecting the espresso configuration of the %@ model
An error occurred setting the input to the %@ model
An error occurred binding the output of the %@ model
An error occurred executing the %@ model
An error occurred selecting the smallest espresso configuration of the %@ model
Stroke Grouping with strategy %@. Added strokes: %ld, removed strokes: %ld
Stroke Grouping with strategy %@ triggered with 0 strokes in the stroke provider.
Best split (%lu/%lu) has score %.3f, splitting threshold is %.3f
Best split not acceptable: %@
Attempt to create an empty stroke group.
SPLIT %lu/%lu: TS=%.3f, TT=%.3f, VD=%.3f, HD=%.3f, LT=%.3f, AR=%.3f, WD=%.3f, TF=%.3f, HS=%.3f, MH=%.3f, SC=%.3f, AL=%.3f
At least one stroke is needed to calculate accumulated time differences
Could not find stroke for id: %@
Use designated initializer instead
The preferred locales list cannot be empty.
Recognition tasks can only be executed once: %@
delegate cannot be nil when the task starts
BEGIN "CHSessionTaskStrokeClassification"
CHSessionTaskStrokeClassification
END "CHSessionTaskStrokeClassification"
Ran stroke classification in duration = %3.6f seconds
BEGIN "CHSessionTaskAccurateGrouping"
CHSessionTaskAccurateGrouping
END "CHSessionTaskAccurateGrouping"
Grouping algorithm not implemented: %ld
Recognition task almost finished, waiting for explicit overhead of %0.1fs.
strokeGroupingResult cannot be nil for a non-cancelled task.
Invalid status transition from %ld to %ld.
Recognition results for version %@:
GroupingOnly option selected. Skipping the recognition and performing grouping only.
Beginning recognizer request for stroke group %ld, locale %@
Finished recognizer request for stroke group %ld, locale %@. Duration: %0.3f
CHTokenizedTextResult is nil
Recognizer finished for stroke group %ld, duration: %0.3fs
Running remote recognition
Remote Recognition error: %@
Running local recognition
Failed to run recognition on sub-drawing after %li attempts
Remote call to compute transcription paths error: %@
Recognition successful using %li sub-drawings
%@: finished update for session %p, version %@. %ld item(s) available.
item should be of class CHTextInputQueryItem: %@
Found %lu strokes in the data detected content but only %lu strokes in the entire stroke group: %@. Found stroke indexes: %@
The last stroke index found in the data detected content (#strokes=%lu) should be within the scope of the strokeIDs array (#strokes=%lu)
The stroke indexes matching data detected content should be non-empty [%@]
item should be of class CHDataDetectorQueryItem: %@
item should be of class CHPrefixQueryItem: %@
CHRemoteRecognizer must be initialized with at least one locale
Remote connection to handwritingd was interrupted
Remote connection to handwritingd was invalidated
A locale is required to build the remote recognition request
An XPC proxy service error occurred: %@
Error during recognition: %@
XPC connection must be non-nil
%@ serialize drawing to %@/%@, 
%@ serialize request to %@/%@, 
%@ skipping serialization of nil drawing. Error = %@
%@ serialize recognition result to %@/%@, 
%@ skipping serialization of nil result. Error = %@
EspressoModelWrapper::~EspressoModelWrapper Error destroying model
EspressoModelWrapper::initialize Error creating context
EspressoModelWrapper::initialize Error creating plan
EspressoModelWrapper::initialize Error loading model
EspressoModelWrapper::initialize Error buidling plan
EspressoModelWrapper::destroy Error destroying plan
EspressoModelWrapper::destroy Error destroying context
EspressoModelWrapper::setInput Error setting input buffer shape
EspressoModelWrapper::setInput Error binding input buffer
EspressoModelWrapper::bindOutput Bind static buffer but output is dynamic
EspressoModelWrapper::bindOutput Error binding output buffer
EspressoModelWrapper::selectConfiguration Error cleaning current plan
EspressoModelWrapper::selectConfiguration Error selecting configuration
EspressoModelWrapper::selectConfiguration Error building Espresso plan
EspressoModelWrapper::execute Error executing model
Error: unable to mmap resource %s
Error: Index %lu out of bounds of the code map %lu symbols
Use initWithRecognitionSession: instead.
Cannot activate an already active visualization
%@: start for session %p
%@: pause
%@: result changed, will dispatch to main queue to notify the delegate.
%@: result changed, but cannot notify delegate. queryActive: %@, delegate %p.
Empty alphashape from ink with %lu strokes and %lu points.
No or empty transcription. TextLineStraightening not possible.
Empty alphashape from img.
Recognizer configuration needs to be defined
decodingCharacterLMWeight from override weights: %@
decodingWordLMWeight from override weights: %@
decodingLexiconWeight from override weights: %@
decodingLexiconLowerBoundLogProbability from override weights: %@
characterLMLowerBoundLogProbability from override weights: %@
decodingWordLMLowerBoundLogProbability from override weights: %@
shouldSkipLatinActivation from override weights: %@
Synchronization queue can not be nil when async loading language models.
Recognizer can not be nil when async loading language models.
Failed to load n-gram model from TextRecognition.framework at location %@ with error %@
Resource for transliteration map not found for locale "%@" (script=%lu, language=%lu) with resource path "%s"
not supported
configuration locale %@, effective language %@, recognition engine %@
An error occurred when loading the CTC model %@
CHRecognizer is running rnn character language model: %d
Error when merging equivalent edges: index out of bounds
found paths with incompatible number of segments covered from %zu to %zu: previous value %lu, value for new path %zu 
Inconsistent network structure: edge with start node %zu belong in output edges of node %zu 
Unsupported Network Version %s
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 3Gram!
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 2Gram!
Error: unable to reallocate memory for path expansion.
Queue setup can only be performed once.
Configuring RecognitionSession %p with preferred locales: %@. Effective locales: %@.
stroke provider visible strokes %lu
RecognitionSession %p received needsRecognitionUpdate request. Will trigger processing soon.
dataSource %@ returned a nil strokeProviderSnapshot.
RecognitionSession %p cannot process needsRecognitionUpdate request. dataSource: %@, text recognition locales: %@.,  preferred locales: %@.
RecognitionSession %p cancelOngoingRequests. Cancelling %ld pending tasks. hasUnprocessedChanges %@->N. Last saved result for version: %@
RecognitionSession %p received request to rebuild recognition results. Stroke provider version: %@
RecognitionSession %p rebuilding recognition results. Cleared previous results. Will trigger processing soon.
RecognitionSession %p cannot process rebuildRecognitionResults request. dataSource: %@, text recognition locales: %@, preferred locales: %@.
latestStrokeProvider cannot be nil when scheduling change processing.
RecognitionSession %p enqueueing recognition task for version %@.
RecognitionSession %p canceling pending task for version %@, superseded by request for version %@.
RecognitionSession %p trying to process changes, but there are no text recognition locales. Only grouping will be performed
RecognitionSession %p starting task for version: %@.
RecognitionSession %p finished task for version: %@. Duration: %0.3fs (%0.3fs G, %0.3fs R). Groups: %ld, created: %ld, deleted: %ld.
RecognitionSession %p finished task for version: %@. Cancelled: %s. Produced result: %s.
Unimplemented
RecognitionSession %p has been serialized with preferredLocales: %@, recognitionEnvironment: %ld, priority: %ld, and lastRecognitionResult.
Last recognition result not loaded because session result version %ld does not match the current result version %ld.
RecognitionSession %p has been deserialized with preferredLocales: %@, recognitionEnvironment: %ld, priority: %ld, and lastRecognitionResult.
Nil RecognitionSession has been returned because session version %ld does not match the current session version %ld.
Requested creating in-process recognizer with %ld locales. Only the top one will be honored: %@
Visible stroke count: %lu, Ordered stroke count: %lu lastRecognitionResultIsValid: %d, _lastRecognitionResult: %p
Using last accurate results for tokenStrokeIdentifiersForContextStrokes results
Last accurate results for tokenStrokeIdentifiersForContextStrokes don't match visible strokes
Visible strokes not available in the stroke provider for fast grouping. Falling back on the ordered strokes.
Cached fast grouping line clusters not available. Computing line clusters on %lu strokes
Cached clutter filter not available. Creating new clutter filter
Using cached clutter filter for grouping query
Fast grouping duration: %2.2f seconds
Using cached fast grouping line clusters for grouping query
The tokenization level must be CHStrokeTokenizationLevelStroke to be compatible with fastGroupingResult=nil
CHStrokeTokenizationLevelStroke requested, so avoiding any clustering or grouping
Canceling tokenStrokeIdentifiersForContextStrokes request
foundStrokeIdentifiers is nil
A cached result must exist when calling _strokeIdentifiersFromCachedResultUsingContextStrokes:tokenizationLevel:
A cached result must exist when calling _contextualTextResultsFromCachedResultUsingContextStrokes:shouldCancel:
RecognitionSession %p starting high responsiveness task for version: %@.
contextualTextResultsForContextStrokes
Context results must be non-nil
The original and rescaled drawings should have equal stroke counts
The original and rescaled drawings should have equal total point counts
Expected nil or valid tokenized result as output of CHTextCorrectionRecognizer.
Invalid stroke covered range when recognizing editing gesture. %@
Cannot recognize editing gesture for drawing with %ld strokes.
Anchor point has a dummy large value, resetting to zero.
SpaceBehavior: %li
Unexpected number of token columns in text result refinement for single character mode. Expected 1 token column, got %lu
doesIntersectNoSpaceRegion: %i isContainedInPaddedNoSpaceRegion: %i
Method can only be called on a single character string: %@
Stroke group can't be nil and must be of CHTextLineStrokeGroup class.
There must be at least one substroke in the input for the coalescing algorithm.
Running stroke classification over %ld strokes
Index %ld out of bounds in normalized image for container support calculation.
Canceling agglomerative clustering results computation
%lu clusters found by the fast grouping algorithm
Canceling line cluster results computation
Fast grouping result must exist for the requested tokenization type
groupingResultForContextStrokes: %lu words found
Invalid stroke index %ld
%@: finished update for session %p. indexableContent length: %ld
%@ unexpectedly modified original tokens: "%@" -> "%@"
Number of corrected and raw tokens must match: %lu != %lu.
CHPreserveOriginalRecognitionStep is running
The best token index %ld is not contained in the returned tokens range %d, %ld
CHLexiconCorrectionStep is running with autoCapitalizationMode: %@
CHTransliterateHalfWidthPunctuationStep is running
CHOpeningClosingCharacterMatchingStep is running
CHSemanticTokenizerStep is running
wordID count %lu should match wordRangesInString count %lu
growingToken should not be nil
CHIdentifyLowAlignmentConfidenceColumnsStep is running
CHIdentifyLowAlignmentConfidenceColumnsStep unexpectedly decreased the changeable token column count.
CHCleanUpSpacesStep is running
CHCandidateRefinementStep is running
CHRemoveSpacesFromStrongURLsAndEmailsStep is running
CHRemoveSpacesFromStrongURLsStep range: %@ stringLength: %li isEmail: %i isUrl: %i
CHRemoveSpacesFromSpecialFieldsStep is running
CHRemoveSpacesFromHashtagsAndMentionsStep is running
CHRemoveSpacesFromEnglishAndKoreanParticlesStep is running
CHTransliterateChineseJapaneseStep is running
CHTransliterateConfusableCharactersStep is running
CHTransliterateIsolatedConfusableCharactersStep is running
CHReorderSCTCConfusionStep is running
CHMultiWordOVSFilteringStep is running
CHNumberFieldResultReorderingStep is running
CHMarkNoWhiteSpaceColumnsChangeableStep is running
CHJapaneseTokenizationAndConversionStep is running
At least one phrase should be returned in Mecabra tokenization and conversion step.
At least one candidate should be returned for each phrase in Mecabra tokenization and conversion step.
CHPutOriginalRecognitionResultFirstStep is running
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/CoreText.framework/CoreText
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/CoreText.framework/CoreText
CHClassifiableDrawing
CHLanguageUtilities
CHStrokeGroupQuery
CHStrokeGroupQueryItem
CHStrokeGroupingStrategy
SubclassesToOverride
CHEncodedStrokeIdentifier
NSCopying
NSSecureCoding
NSCoding
CHTokenizedTextResultToken
NSMutableCopying
Private
CHMutableTokenizedTextResultToken
CHTokenizedStrokeResult
CHRecognizerOptions
CHRecognizer
CHRecognizing
NSObject
Insight
CHDrawingContext
CHStrokeUtilities
CHRecognitionInsightRequest
CHRecognitionInsight
Internal
CHDrawing
CHCutPoint
CHSegmentDescriptor
CHDrawingSegmentGroup
CHStrokeGroupBaselineVisualization
CHTextInputScriptSpec
CHTextInputTargetContentInfo
CHMutableTextInputTargetContentInfo
CHNonTextCandidateStroke
CHMutableNonTextCandidateStroke
CHCornerDetector
CHMergedStrokeGroupingResults
CHStrokeGroupingManager
CHTextInputProtoSettings
CHTextStrokeTransformationQuery
CHNormalizedDrawingVisualization
CHNormalizedDrawingAllVisualization
CHRecognitionSessionResult
CHStrokeClassificationResult
CHStrokeGroupingResult
CHStrokeGroupRecognitionResult
CHStrokeGroupTextCorrectionResult
CHRemoteRecognitionRequest
CHTokenizedTextResultColumn
CHMutableTokenizedTextResultColumn
CHRecognizerResultCache
CHStrokeGroup
CHRecognitionSessionTextInputTask
CHTextInputTarget
CHTextLineStrokeGroup
CHTitleQuery
CHSingletonMLModel
CHRecognitionResult
CHTextRecognitionResult
CHSketchRecognitionResult
CHLineSketchRecognitionResult
CHManhattanLineSketchRecognitionResult
CHOutlinedArrowSketchRecognitionResult
CHRectangleSketchRecognitionResult
CHTriangleRecognitionResult
CHEllipseRecognitionResult
CHChatBubbleRecognitionResult
CHStarRecognitionResult
CHPentagonRecognitionResult
CHScribbleRecognitionResult
CHHeartRecognitionResult
CHCloudRecognitionResult
CHFreeformRecognitionResult
CHSubstrokeBoundsVisualization
CHStrokeGroupingVisualization
CHSearchQuery
CHSearchQueryItem
CHVisualization
CHPointFIFO
CHPointStrokeFIFO
CHBoxcarFilterPointFIFO
CHQuadCurvePointFIFO
CHStrokePointsVisualization
CHTextInputGesture
CHTextInputInsertionCaretGesture
CHCTCRecognitionModel
CHTokenizedTextResult
CHMutableTokenizedTextResult
CHSpellCheckerErrorModel
CHSpellChecker
CHStrokeClutterFilter
CHRecurrentNeuralNetwork
CHRecurrentNeuralNetworkCoreML
CHStrokeClassificationModel
CHTopDownStrokeSplit
CHOrderedStrokeGroup
CHTopDownStrokeGroupingStrategy
CHTimeWindowStrokeGroup
CHTimeWindowStrokeGroupingStrategy
CHRecognitionSessionTask
CHMultiLocaleResultProcessor
CHTextInputQuery
CHTextInputQueryItem
CHDataDetectorQuery
CHDataDetectorQueryItem
CHPrefixQueryItem
CHPrefixQuery
CHSubstroke
CHSubstrokePlacement
CHStrokeGroupClassificationVisualization
CHPolygon
CHStrokeGroupBasedVisualization
CHRemoteRequestProtocol
CHRemoteRecognizer
CHVisualizationManager
CHStrokeGroupBasedVisualizationDelegate
CHVisualizationDelegate
CHRecognitionSessionObserver
CHTranscriptionQuery
CHQuery
RecognitionSessionObserver
ForSubclasses
CHContextualTextResult
CHContextualTextResults
CHTextLineStraightener
CHStringOVSChecker
CHTextCorrectionResult
CHRecognizerConfiguration
CHStrokeVisualization
CHGroupBoundsVisualization
CHRecognitionSessionVersion
CHRecognitionSession
CHRecognitionSessionTextInputTaskDelegate
CHRecognitionSessionTaskDelegate
CHTextCorrectionRecognizer
CHCharacterSetRules
CHBottomUpStrokeGroupingResult
CHBottomUpStrokeGroupingStrategy
MutableCopying
CHMutableStrokeClassificationResult
CHStrokeClassifier
CHActivationMatrix
CHFastStrokeGroupingStrategy
CHStrokeGroupBaselineLegacyVisualization
CHIndexableContentQuery
CHRecognitionSessionIndexableContent
CHStrokeFastGroupingResult
NetworkCursor
CHPatternNetwork
CHContextualCharacterTransliteration
CHMecabraWrapper
CHResultWithContext
CHPostProcessingManager
CHPostprocessingStep
CHPostprocessingStepModifyingOriginalTokens
CHTextFieldTypeSwitchStep
CHPreserveOriginalRecognitionStep
CHLexiconCorrectionStep
CHTransliterateHalfWidthPunctuationStep
CHOpeningClosingCharacterMatchingStep
CHSemanticTokenizerStep
CHIdentifyLowAlignmentConfidenceColumnsStep
CHCleanUpSpacesStep
CHCandidateRefinementStep
CHRemoveSpacesFromStrongURLsAndEmailsStep
CHRemoveSpacesFromSpecialFieldsStep
CHRemoveSpacesFromHashtagsAndMentionsStep
CHRemoveSpacesFromEnglishAndKoreanParticlesStep
CHTransliterateChineseJapaneseStep
CHTransliterateConfusableCharactersStep
CHTransliterateIsolatedConfusableCharactersStep
CHReorderSCTCConfusionStep
CHMultiWordOVSFilteringStep
CHNumberFieldResultReorderingStep
CHMarkNoWhiteSpaceColumnsChangeableStep
CHJapaneseTokenizationAndConversionStep
CHCyrillicRecoverConfusableWordsStep
CHPutOriginalRecognitionResultFirstStep
CHRecognizerInferenceCache
CoreHandwriting
CHExtensions
init
initWithDrawing:characterSet:expandCodePoints:normalizationContext:maxCandidateCount:
drawing
characterSet
expandCodePoints
normalizationContext
maxCandidateCount
.cxx_destruct
_expandCodePoints
_drawing
_characterSet
_maxCandidateCount
_normalizationContext
T@"CHDrawing",R,N,V_drawing
T@"NSCharacterSet",R,N,V_characterSet
TB,R,N,V_expandCodePoints
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_normalizationContext
TQ,R,N,V_maxCandidateCount
lowercaseString
array
length
substringWithRange:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
rangeOfString:
numberWithUnsignedInteger:
addObject:
valueWithRange:
normalizeLMTokenIDForWord:tokenID:isFromPattern:score:wordLanguageModel:
arrayWithArray:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
countByEnumeratingWithState:objects:count:
properties
string
stringByAppendingFormat:
integerValue
objectForKeyedSubscript:
getCharacters:
stringWithCharacters:length:
copy
rangeOfString:options:range:
stringByReplacingCharactersInRange:withString:
count
objectAtIndexedSubscript:
addObjectsFromArray:
enumerateKeysAndObjectsUsingBlock:
transformString:usingConfusions:
ch_basicAlphabeticCharacterSet
rangeOfCharacterFromSet:
ch_basicCyrillicCharacterSet
isEqualToString:
lmSPIType
languageModel
mutableCopy
ch_basicAlphanumericCharacterSet
formUnionWithCharacterSet:
ch_hiraganaCharacterSet
ch_katakanaCharacterSet
ch_kanjiCharacterSet
ch_kanjiCompCharacterSet
characterAtIndex:
characterIsMember:
isMecabraConversionCandidateAllowed:
punctuationCharacterSet
localeIdentifier
arrayWithObjects:
dictionaryWithObjects:forKeys:count:
orthographyWithDominantScript:languageMap:
enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:
codepointAtIndex:outRange:
expectedMinStrokeCount:
appendString:
compare:options:
stringWithString:
symbolCharacterSet
uppercaseStringWithLocale:
computeEditPenalizationFromString:toReferenceString:withSuffix:withCaseSensitivity:withFirstLetterCaseSensitivity:withDiacriticSensitivity:withDiacriticsCharSet:withConsumableStrokesCharSet:outputSuffix:lexiconExtraCharacters:firstLetterCaseFlipped:
tokenIDForString:withLexicon:
substringFromIndex:
hasPrefix:
caseInsensitiveCompare:
isInappropriateLexiconEntry:
combinedScore
compare:
rangeOfString:options:
objectForKey:
singleScriptCodeForString:
lowercaseStringWithLocale:
strokeIndexes
recognitionScore
alignmentScore
substrokeCount
bounds
initWithString:strokeIndexes:wordID:recognitionScore:combinedScore:alignmentScore:properties:substrokeCount:bounds:
wordID
alphanumericCharacterSet
invertedSet
correctionsForString:shouldUseErrorModel:forLocale:
tokensRangesForString:outTokenIDs:wordLanguageModel:
splitStringIntoSubtokensForLexicon:minLength:
findPartialMatchInPhraseLexicon:token:contextBeforeToken:
transliterateStringUsingICUTransliterator:_icuTransliterator:
transformLatinToCyrillic:
transformCyrillicToLatin:
characterLMLogProbabilityForString:characterLM:
mecabraTokenizationAndKanaConversionForString:mecabraEngine:contextRef:leftCandidateRef:alternativeCandidateLimit:
shouldCapitalizeGivenHistory:shouldAutoCapitalizeSetting:locale:
lexiconCorrectionsForToken:locale:lexicon:lmVocabulary:ovsStringChecker:textReplacements:consumableStrokesSet:minimumTokenScore:activeHistoryRange:outBestTokenScore:shouldCapitalizeWord:shouldSkipEntryCorrection:allowFullCapsCorrections:minimalLengthForLowConfidenceCorrections:lowConfidenceThreshold:minimalLengthForCustomCapitalizationCorrections:outBestTokenIndex:outFoundTokenInLexicon:outFoundCaseMatchingTokenInLexicon:outCorrectionFromOutOfContextEntry:
spellCheckerCorrectionsForToken:spellChecker:wordLanguageModel:locale:
dictionaryWithObjectsAndKeys:
pointCountForStrokeIndex:
pointForStrokeIndex:pointIndex:
q_updateQueryResult
q_sessionResult
debugName
strokeProviderVersion
q_strokeGroupItemsFromSessionResult:
recognitionSession
_setStrokeGroupItems:
strokeGroupingResult
locales
strokeGroups
arrayWithCapacity:
strokeGroupsSortedByWritingOrientation
uniqueIdentifier
numberWithInteger:
recognitionResultForStrokeGroupIdentifier:
inputStrokeIdentifiers
recognitionResultsByLocale
errorsByLocale
ancestorIdentifier
localesSortedByCombinedLanguageFitness:
firstObject
q_itemTypeForStrokeGroup:recognitionResult:
latestStrokeProvider
strokeIdentifiersForData:withStrokeProvider:
initWithStrokeGroupIdentifier:stableIdentifier:strokeIdentifiers:type:preferredLocale:tokenizedTextResultsByLocale:errorsByLocale:
classification
transcriptionPaths
transcriptionWithPath:columnRange:filterLowConfidence:excludeGibberish:rejectionRate:tokenProcessingBlock:
tokenizedStrokeResultForInitialStrokes:point:tokenizationLevel:completion:shouldCancel:
encodedStrokeIdentifiers:withStrokeProvider:
tokenStrokeIdentifiersForContextStrokes:point:tokenizationLevel:completion:shouldCancel:
processingQueue
dictionaryWithCapacity:
strokeGroupIdentifier
setObject:forKeyedSubscript:
q_queryResultDidChange
stringWithFormat:
tokenizedStrokeResultForInitialStrokes:point:tokenizationLevel:
strokeGroupItems
strokeGroupItemsByID
_setStrokeGroupItemsByID:
_strokeGroupItems
_strokeGroupItemsByID
T@"NSArray",C,N,S_setStrokeGroupItems:,V_strokeGroupItems
T@"NSDictionary",C,N,S_setStrokeGroupItemsByID:,V_strokeGroupItemsByID
_tokenizedTextResultsByLocale
_errorsByLocale
descriptionForStrokeGroupQueryItemType:
description
textRecognitionResultForLocale:error:
strokeGroupStableIdentifier
strokeIdentifiers
strokeGroupType
preferredLocale
_strokeGroupIdentifier
_strokeGroupStableIdentifier
_strokeIdentifiers
_strokeGroupType
_preferredLocale
__tokenizedTextResultsByLocale
__errorsByLocale
T@"NSDictionary",R,C,N,V__tokenizedTextResultsByLocale
T@"NSDictionary",R,C,N,V__errorsByLocale
T@"NSNumber",R,N,V_strokeGroupIdentifier
T@"NSNumber",R,N,V_strokeGroupStableIdentifier
T@"NSArray",R,C,N,V_strokeIdentifiers
Tq,R,N,V_strokeGroupType
T@"NSLocale",R,C,N,V_preferredLocale
strokeProvider
strokeIdentifierFromData:
strokeForIdentifier:
firstStrokeIdentifier
lastStrokeIdentifier
minusSet:
containsObject:
compareOrderOfStrokeWithIdentifier:toStrokeWithIdentifier:
setWithCapacity:
firstStrokeOrigin
encodedStrokeIdentifier
getFirstStrokeIdentifier:lastStrokeIdentifier:inGroup:addingStrokeIdentifiers:removingStrokeIdentifiers:
groupingConfidence
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:firstStrokeOrigin:
initWithStrokeProvider:
strategyIdentifier
strokesForIdentifiers:
strokeGroupFromGroup:addingStrokes:
_strokeProvider
T@"<CHStrokeProvider>",R,N,V_strokeProvider
T@"NSString",R,N
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:
updatedGroupingResult:byAddingStrokes:removingStrokeIdentifiers:stableStrokeIdentifiers:allSubstrokesByStrokeIdentifier:withCancellationBlock:
recognizableDrawingForStrokeGroup:translationVector:originalDrawing:orderedStrokesIDs:rescalingFactor:
addPoint:
subdataWithRange:
hash
isEqualToCHEncodedStrokeIdentifier:
isEqual:
encodeObject:forKey:
decodeObjectOfClass:forKey:
initWithData:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
_savedHash
_encodedStrokeIdentifier
T@"NSData",R,N,V_encodedStrokeIdentifier
indexSet
characterSetWithRange:
decodeInt32ForKey:
decodeDoubleForKey:
decodeIntegerForKey:
encodeInt32:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
isEqualToIndexSet:
isEqualToTokenizedTextResultToken:
tokenWithString:strokeIndexes:wordID:recognitionScore:combinedScore:alignmentScore:properties:substrokeCount:bounds:
mutableCopyWithZone:
heuristicTextScore
isEquivalentToToken:
_string
_strokeIndexes
_wordID
_recognitionScore
_combinedScore
_alignmentScore
_properties
_substrokeCount
_bounds
TI,R,N,V_wordID
T@"NSString",R,C,N,V_string
T@"NSIndexSet",R,C,N,V_strokeIndexes
Td,R,N
TQ,R,N
Tq,R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
setString:
addIndexes:
setStrokeIndexes:
setWordID:
setRecognitionScore:
setCombinedScore:
setAlignmentScore:
setProperties:
setSubstrokeCount:
setBounds:
appendToken:
T@"NSString",C,D,N
T@"NSIndexSet",C,D,N
TI,D,N
Td,D,N
TQ,D,N
Tq,D,N
T{CGRect={CGPoint=dd}{CGSize=dd}},D,N
initWithStrokeIdentifiers:resultLevel:
resultLevel
_resultLevel
Tq,R,N,V_resultLevel
T@"NSSet",R,C,N,V_strokeIdentifiers
stringWithCString:encoding:
initWithComputeUnits:
fileURLWithPath:
modelWithContentsOfURL:configuration:error:
lastPathComponent
stringByDeletingPathExtension
stringByDeletingLastPathComponent
stringByAppendingString:
stringByAppendingPathComponent:
cStringUsingEncoding:
modelDescription
inputDescriptionsByName
multiArrayConstraint
shape
objectAtIndex:
unsignedIntValue
outputDescriptionsByName
dataType
numberWithUnsignedInt:
arrayWithObjects:count:
initWithShape:dataType:error:
dataPointer
bitmapRepresentationForSize:
initWithDictionary:error:
initWithUsesCPUOnly:
predictionFromFeatures:options:error:
localizedDescription
featureValueForName:
multiArrayValue
setMaxComputationBatchSize:
strides
enumerateCodepointsInRange:usingBlock:
enableCachingIfAvailable
setEnableCachingIfAvailable:
enableGen2ModelIfAvailable
setEnableGen2ModelIfAvailable:
enableGen2CharacterLMIfAvailable
setEnableGen2CharacterLMIfAvailable:
_enableCachingIfAvailable
_enableGen2ModelIfAvailable
_enableGen2CharacterLMIfAvailable
TB,N,V_enableCachingIfAvailable
TB,N,V_enableGen2ModelIfAvailable
TB,N,V_enableGen2CharacterLMIfAvailable
defaultLocaleForRecognitionType:withMode:
initWithMode:locale:learningDictionaryURL:recognizerOptions:
isLocaleSupported:withMode:
stringForRecognitionMode:
initWithMode:locale:contentType:enableCachingIfAvailable:enableGen2ModelIfAvailable:enableGen2CharacterLMIfAvailable:
defaultMinimumDrawingSize
_reloadEngineAndResources
initWithType:mode:locale:learningDictionaryURL:
numberWithDouble:
_defaultPunctuationStringsOutputScores:maxCandidateCount:
numberWithInt:
indexSetWithIndexesInRange:
doubleValue
numberWithBool:
initWithString:score:wordRanges:wordIDs:wordRecognitionScores:wordCombinedScores:wordStrokeSets:wordLexicalEntries:wordPatternEntries:rareWordIndexes:inappropriateWordIndexes:isTextReplacement:
indexPathWithIndex:
initWithTokenRows:
initWithTokenColumns:transcriptionPaths:scores:recognizerGenerationIdentifier:
isInappropriateString:
_transliterationVariantsForString:
shouldGenerateDigitLetterAlternatives
_alternativeInterpretationsForString:
substringToIndex:
shouldEnforceGrammarOnTransliterations
contentType
rootCursorForContentType:inNetwork:forFirstSegmentGroup:
newCursorByAdvancingWithString:fromCursor:inNetwork:
newCursorByAdvancingWithSymbol:fromCursor:inNetwork:
replaceOccurrencesOfString:withString:options:range:
mecabraInputMethodType
initMecabraIfNeededWithType:learningDictURL:
_safelyUnloadEngineAndResources
newRecognitionEngine
newFreeFormEngine
isMainThread
newWordLanguageModelForRecognizer:async:synchronizationQueue:
newSpellChecker
newStaticLexicon:
newSecondaryStaticLexicon:
newPhraseLexicon:
newCJKStaticLexicon
newOVSStringCheckerWithStaticLexicon:customLexicon:
newPatternFST
sharedPostProcessingFST
newGrammarFST
newRadicalClusterFST
newTransliterationVariantMap
whitelistMecabraRareCharacters
newCharacterLanguageModelAndMap:force:
newCTCRecognitionModel
newMecabraWrapper
_initializeTextDecoder
_initializePostProcessor
shouldConvertKanaInPostProcessing
_loadMecabraIfNeeded
postProcessorLexiconWithStaticLexicon:secondaryLexicon:
languageResourceBundle
characterLanguageModel
_effectiveMaxRecognitionResultCount
newPostProcessorWithStaticLexicon:customLexicon:phraseLexicon:customPhraseLexicon:characterLM:textReplacements:postProcessingFST:wordLM:mecabraWrapper:ovsStringChecker:spellChecker:lmVocabulary:maxResultCount:
newMergedResultPostProcessorWithStringChecker:
newCTCTextDecoderWithStaticLexicon:customLexicon:wordLanguageModel:
mode
_unloadEngineAndResources
mecabra
shouldLoadCJKLexicons
shouldForwardMecabraOTAAssetsUpdate
newWordLanguageModel
removeAllObjects
setObject:forKey:
completionsForCandidate:candidateContext:prefix:option:
rangeValue
addIndex:
initWithType:mode:locale:
dealloc
addCharactersInRange:
sketchDescriptionForCode:
sketchCodeForDescription:
orientationRepresentationForSampling:convolutionWidth:
strokeCount
initWithString:score:rotation:center:size:
initWithString:score:rotation:vertex1:vertex2:vertex3:
initWithString:score:rotation:center:size:stemLocation:stemWidth:
cumulativePointToPointDistance
distanceBetweenFirstAndLastPoint
initWithScore:
initWithString:score:rotation:upperLeftPoint:upperRightPoint:lowerLeftPoint:lowerRightPoint:size:
initWithString:score:rotation:center:size:controlPointLocation:
initWithString:score:rotation:startLocation:startEndpointType:endLocation:endEndpointType:midPointLocation:controlPointLocation:
pointCount
valueWithPoint:
initWithString:score:rotation:startLocation:startEndpointType:endLocation:endEndpointType:midPointLocation:controlPointLocation:pathPoints:
insertObject:atIndex:
chatBubbleCandidateResultForDrawing:candidate:rejectionResult:
ellipseCandidateResultForDrawing:candidate:
rectangleCandidateResultForDrawing:candidate:
triangleCandidateResultForDrawing:candidate:
starCandidateResultForDrawing:candidate:
lineCandidateResultForDrawing:candidate:
heartCandidateResultForDrawing:candidate:
pentagonCandidateResultForDrawing:candidate:
outlineArrowCandidateResultForDrawing:candidate:
manhattanLineCandidateResultForDrawing:candidate:rejectionResult:
cloudCandidateResultForDrawing:candidate:rejectionResult:
score
setScore:
exchangeObjectAtIndex:withObjectAtIndex:
removeLastObject
inappropriateWordIndexes
predicateWithBlock:
filterUsingPredicate:
enumerateSubstringsInRange:options:usingBlock:
_initialContextRectFromRecognizerOptions:
shouldRefineChineseCharacterCandidates
_refineChineseCharacterCandidates:drawing:
shouldApplyLMRescoring
_rescoreCandidatesWithLanguageModel:history:
shouldTransliterateAndSynthetizeCandidates
_applyTransliterationAndSyntheticCandidates:
shouldPromoteCJKCommonCharacters
isRareChineseEntry:
segments
_resolvedStrokeIndexes:segmentGroup:segmentOffset:substrokeCount:
shouldTransformCharacterProbabilitiesIntoLogScores
mecabraRareWordIndexes:wordRanges:
indexSetWithIndex:
_textReplacementResultForLegacyRecognitionResult:
_removeOVSResults:withHistory:
wordStrokeSets
tokenColumnCount
_calculateJointWordLMScoreForString:wordRanges:wordIDs:patternEntries:history:historyLength:
decimalDigitCharacterSet
letterCharacterSet
boolValue
rangeOfCharacterFromSet:options:range:
setObject:atIndexedSubscript:
indexOfObject:
_tokensUsingLMTokenizerForString:wordRanges:nonWordPatterns:outTokenIDs:
unsignedIntegerValue
maximumLengthOfBytesUsingEncoding:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
locale
initWithBytes:length:encoding:
whitespaceAndNewlineCharacterSet
rangeOfComposedCharacterSequenceAtIndex:
shouldPerformGlobalBestSearch
shouldPerformGlobalBestSearchWithSmallLattice
shouldPerformIntegratedLexiconExpansion
shouldPenalizeLetterInsertion
shouldApplyLexicalPenalty
shouldComputeStrokePenalties
shouldExpandCodePoints
shouldPenalizePrefixes
shouldApplyRomanPostProcessing
tokenizedTextResultForRomanLatticePaths:history:activeHistoryRange:startNode:segmentGroup:
shouldApplyChinesePostProcessing
tokenizedTextResultForChineseLatticePaths:maximumPathCount:network:mecabraIDs:startNode:endNode:segmentGroup:
indexOfObjectPassingTest:
tokenizedTextResultForRomanSingleWordLatticePaths:history:activeHistoryRange:startNode:segmentGroup:
shouldTransliterateSentencesSCTC
_applySentenceTransliterationCandidates:codesLen:codesMax:
stringByReplacingOccurrencesOfString:withString:
rareWordIndexes
removeObjectAtIndex:
wordCombinedScores
floatValue
_tokenizedTextResultFromResults:segmentGroup:offsetSegment:decodedStrokeSets:spaceBehavior:
adjustColumns
transcriptionPathScores
tokenColumns
indexAtPosition:
tokensInTranscriptionPath:atColumnIndex:
tokenRows
replaceObjectAtIndex:withObject:
recognizerGenerationIdentifier
shouldAutoCapitalize
componentsJoinedByString:
characterType:
_updateResults:string:score:recognitionScore:lexicalEntry:patternEntry:isInappropriateWord:wordID:wordStrokeSet:
shouldApplyDiacriticSensitivity
sortUsingComparator:
_filterNonHumanFriendlyCandidates:
_adjustResultsForConfusableCharacters:
wordLexicalEntries
lastObject
wordPatternEntries
shouldUseCaching
setCachedDrawing:
supportedSegmentationStrategy
strokeIndicesSortedByMinXCoordinate
totalSegmentCount
_historyStringFromRecognizerOptions:
precomposedStringWithCanonicalMapping
_precedingSpaceBehaviorFromRecognizerOptions:
sortedDrawingUsingMinXCoordinate
shouldFallbackOnSingleCharacterExpansion
recognitionResultsForSingleCharacterDrawing:segmentGroup:options:history:
appendTokenColumns:
matchingStrokePrefixRangeForDrawing:
_cachingWithMatchingStrokeRange:drawing:
_sortedIndexesForSegmentGroup:drawing:
_createCandidateNetworkFromSegmentationNetwork:segmentGroup:drawing:boundsAtNode:matchingStrokeRange:sortedSegmentIndexes:shouldCancel:
shouldComposeLexiconWithNetwork
_textResultWithNetworkComposeFromCandidateNetwork:segmentGroup:drawing:maxRecognitionResultCount:history:totalStrokeCount:totalSubstrokeCount:
setTranscriptionPaths:scores:
shouldExpandLexiconInNetwork
_textResultWithLexiconExpansionFromCandidateNetwork:history:prefix:activeHistoryRange:rootStaticCursor:rootCustomCursor:rootPatternCursor:segmentGroup:maxRecognitionResultCount:precedingSpaceBehavior:shouldPerformNoSpaceRecognition:totalStrokeCount:totalSubstrokeCount:shouldCancel:
_calculateBestTranscriptionPaths:scores:fromTokenizedResult:pathCount:history:skipLMRescoring:
shouldKeepDuplicateTokenIDs
trimTokensToTranscriptionPathCount:
shouldKeepOutOfPatternCandidates
filterCandidatesWithOutOfPattern:duplicateTokenIDs:keepOutOfLexiconAlternatives:keepAlternativeLengths:keepSubstrings:shouldKeepOriginalSpelling:
_addAlternativeCandidatesForTokenizedResult:
_contextTokenIDsFromHistory:maxCharacterLength:maxTokenCount:
refineAlternativeTokens:historyTokenIDs:wordLanguageModel:
contentTypeForNoSpaceRecognition
_createNetworkTruncatedPrefixStringUsingPrefix:fullHistoryStringLength:hasLexiconCursor:prefixStringLength:hasComplexChars:activeHistoryRange:
_mininmumPathCount
bestPathsFromNetwork:pathCount:staticLexiconCursor:customLexiconCursor:patternCursor:history:activeHistoryRange:mecabraIDs:segmentGroup:precedingSpaceBehavior:effectiveContentType:totalStrokeCount:totalSubstrokeCount:
classifiableDrawing
edgeIndex
strokeGroup
_adjustCandidatesForConfusableCharacters:
shouldDetectChinesePunctuation
_adjustCandidatesForChinesePunctuation:segmentDrawing:completeDrawing:
shouldDetectRomanPunctuation
_adjustCandidatesForRomanPunctuation:segmentDrawing:
numberOfSegments
numberOfSubstrokes
_addEdgesFromCandidates:toEdges:referenceEdge:network:consumedSegmentCount:numSubstrokes:
engineCandidateCount
shouldApplyCandidatesThresholding
_candidateLatticePruningThresholdForEdgeType:
appendSegment:fromDrawing:
_computeLocalFrameWithLeftBounds:rightBounds:
initWithEdgeIndex:numberOfSubstrokes:numberOfSegments:classifiableDrawing:strokeGroup:
_classifyEdgeDrawingsFromContexts:allEdges:segmentationNetwork:candidateNetwork:cachedEdgeSet:completeDrawing:allowSmallerFinalBatch:shouldCancel:
removeObjectsInRange:
shouldRelaxFinalCandidatesThresholding
_stringForCode:
engine
shouldApplyLMSorting
wordRanges
wordIDs
intValue
wordRecognitionScores
containsIndex:
shouldUseTokenPrecedingSpaces
isTextReplacement
indexPathByAddingIndex:
_calculateJointWordLMScoreForTokenPath:tokenizedResult:history:historyLength:pathTranscription:
_lmRescoringWeightForPath:
UTF8String
arrayWithObject:
subarrayWithRange:
strokeIndexSet
enumerateIndexesUsingBlock:
_tokenFromLegacyResult:wordIndex:strokeSet:substrokeCount:
addTokenRowWithTokens:
setTokenColumns:
_inferenceCacheFromRecognizerOptions:
_activationMatrixFromInferenceCache:forDrawing:outStrokeEndings:
_minSizeForReliableRescalingFromRecognizerOptions:
_drawingAnchorPointFromRecognizerOptions:
forcedActiveCharacterSet
recognitionModel
recognizeDrawing:minimumDrawingSize:initialVectorAnchorPoint:activeCharacterSet:outStrokeEndings:outFallbackSymbol:outFallbackSymbolScore:
recognitionEngineCachingKey
cacheActivationMatrix:strokeEndings:drawing:recognitionEngineCachingKey:
activations
setActivationMatrix:
initWithHistory:activeRange:
decodingCommitActionBlock
defaultPathScoringFunctionForLanguageResourceBundle:
shouldPruneMixedScriptWordPaths
initWithCommitActionBehavior:scoringFunction:beamWidth:pathCount:shouldOptimizeAlignment:pruneProblematicMixedScriptWordPaths:
decodingResultWithConfiguration:withContext:
_tokenizedTextResultFromTextDecodingResult:options:strokeEndings:drawing:firstTokenHasPrecedingSpacePreference:
_fallbackStructuredResultForDrawing:string:score:firstTokenHasPrecedingSpacePreference:
modelName
ch_sentenceEndPunctuationCharacterSet
shouldApplyLatinSpacingForLocale:
newlineCharacterSet
modelNameChinese
_textAfterFromRecognizerOptions:
candidates
fullString
_updatePrecedingAndTrailingSeparatorsForTopCandidate:history:textAfter:locale:outTrailingSeparator:inFirstTokenHasPrecedingSpace:outFirstTokenHasPrecedingSpace:
rootCursorForPatternType:inNetwork:forFirstSegmentGroup:
tokens
activationRange
lastIndex
terminatingCharacter
boundsForStrokeIndexes:
extendedToken:withStrokeIndexSet:alignmentScore:bounds:
longCharacterIsMember:
removeAllIndexes
isInappropriateTokenID:
isCompletePattern
initWithBestPathTokens:pathProbabilities:trailingSeparator:recognizerGenerationIdentifier:
generateSegmentsFromDrawing:
initWithSegmentGroupIndex:segments:
_recognitionResultsForMultipleCharacterDrawing:segmentGroup:options:shouldCancel:
addIndexesInRange:
_tokenizedTextRecognitionResultForDrawing:writingStatistics:options:shouldCancel:
shouldRunNextGenRecognizer
_resultUsingNextGenerationPipelineWithDrawing:options:
initWithResult:leftContext:contentType:
process:options:
result
lastTokenStrokeIndexes
_resultUsingSegmentAndDecodePipelineWithDrawing:insight:options:shouldCancel:
shouldFilterLowProbabilityTranscriptionPaths
tokenizedResultWithFilteredPaths:
_initializeMergedResultPostProcessor
textRecognitionResultForDrawing:options:writingStatistics:shouldCancel:
_setupRecognitionInsightRecording
_shouldReturnDefaultResultsForDrawing:
_defaultPunctuationResultWithStrokeCount:
recordConfigurationForRecognizer:options:
recordTextResult:recognitionError:
_defaultLegacyPunctuationResultsWithStrokeCount:
recognitionResultsForSketchDrawing:options:
_legacyTextRecognitionResultsForDrawing:options:shouldCancel:
_tokenizedTextRecognitionResultForDrawing:options:shouldCancel:
textRecognitionResultArrayGivenHistory:
recognitionResultsForDrawing:options:shouldCancel:
indexesOfStrokesSmallerThanSize:
_refineCandidates:withAllowedCandidateCodes:
boundsForStrokeIndex:
expectedMaxDotCount:
shouldTreatAllSmallStrokesAsPunctuation
_penalizeCandidatesForRomanPunctuation:punctuationStrokeCount:
removeIndexes:
convexHullForStrokes:inDrawing:
enlargedConvexHull:withMargin:
threePointsOrientationWithOrigin:pointA:pointB:
distanceFromPoint:toRectangle:
distanceFromPoint:toSegmentFromPoint:toPoint:
lowercaseLetterCharacterSet
uppercaseLetterCharacterSet
shouldReplaceInvalidTokenIDs
_tokenIDForUNKCharacterString:
precedingSpaceDefaultBehavior
getValue:
retrieveActivationMatrixForDrawing:recognitionEngineCachingKey:outStrokeEndings:
timestepCount
maxRecognitionResultDefaultCount
autoCapitalizationMode
autoCorrectionMode
initWithMode:locale:contentType:autoCapitalizationMode:autoCorrectionMode:enableCachingIfAvailable:enableGen2ModelIfAvailable:enableGen2CharacterLMIfAvailable:
_setConfiguration:
isEqualToRecognizerConfiguration:
hasSameResourcesAsConfiguration:
hasSamePostProcessingAsConfiguration:
recordInsightRequest:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithMode:locale:
recognitionMode
setContentType:
setAutoCapitalizationMode:
setAutoCorrectionMode:
maxRecognitionResultCount
setMaxRecognitionResultCount:
activeCharacterSet
setActiveCharacterSet:
minimumDrawingSize
setMinimumDrawingSize:
Ti,R,N
Ti,N
T@"NSLocale",R,C,N
TQ,N
T@"NSCharacterSet",&,N
T{CGSize=dd},N
TB,R,N
initWithMode:locale:recognizerOptions:
initWithMode:locale:learningDictionaryURL:
initWithType:mode:learningDictionaryURL:
strokeIndexesForLastCharacter
isOVSString:
transliterationVariantsForString:
_isLocaleSupported:
updateAddressBookLexicon:
updateUserDictionaryLexicon:
updateMecabraWithRegionalOTAAssets:nonRegionalOTAAssets:
setCustomLexicon:customVocabulary:
setCustomPhraseLexicon:
setTextReplacements:
_updateWordLanguageModel:
candidateAccepted:
completionsForCandidate:prefix:option:
initWithType:mode:
supportedCharacterSet
supportedStrings
characterSetForStrings:
endpointsForDrawing:startLocation:endLocation:
bestTranscriptionPathsForTokenizedResult:scores:history:
_postprocessingMergedRecognitionResult:options:
textRecognitionResultForDrawing:options:shouldCancel:
recognitionResultsForDrawing:options:
setRecognitionType:
setRecognitionMode:
setLocale:
recognitionType
setEngine:
freeformEngine
setFreeformEngine:
setRecognitionModel:
textDecoder
setTextDecoder:
recognitionQueue
setRecognitionQueue:
radicalClusterFST
setRadicalClusterFST:
formatGrammarFST
setFormatGrammarFST:
patternFST
setPatternFST:
postProcessingFST
setPostProcessingFST:
configuration
wordLanguageModel
setWordLanguageModel:
lmVocabulary
setLmVocabulary:
setCharacterLanguageModel:
cjkStaticLexicon
setCjkStaticLexicon:
cjkDynamicLexicon
setCjkDynamicLexicon:
staticLexicon
setStaticLexicon:
secondaryStaticLexicon
setSecondaryStaticLexicon:
phraseLexicon
setPhraseLexicon:
customLexicon
setCustomLexicon:
customPhraseLexicon
textReplacements
textReplacementLowercasedKeyMapping
setTextReplacementLowercasedKeyMapping:
spellChecker
setSpellChecker:
mecabraWrapper
setMecabraWrapper:
ovsStringChecker
setOvsStringChecker:
learningDictionaryURL
setLearningDictionaryURL:
cachedDrawing
cachedResults
setCachedResults:
characterIDMap
setCharacterIDMap:
transliterationVariantMap
setTransliterationVariantMap:
icuTransliterator
setIcuTransliterator:
lastCharacterSegmentCount
setLastCharacterSegmentCount:
lastCharacterSegmentIndexes
setLastCharacterSegmentIndexes:
postProcessor
setPostProcessor:
mergedResultPostProcessor
setMergedResultPostProcessor:
.cxx_construct
_nextRecognitionInsightRequest
_activeRecognitionInsight
_whitelistMecabraRareCharacters
_recognitionType
_maxRecognitionResultCount
_activeCharacterSet
_engine
_freeformEngine
_recognitionModel
_textDecoder
_recognitionQueue
_radicalClusterFST
_formatGrammarFST
_patternFST
_postProcessingFST
_configuration
_wordLanguageModel
_lmVocabulary
_characterLanguageModel
_cjkStaticLexicon
_cjkDynamicLexicon
_staticLexicon
_secondaryStaticLexicon
_phraseLexicon
_customLexicon
_customPhraseLexicon
_textReplacements
_textReplacementLowercasedKeyMapping
_spellChecker
_mecabraWrapper
_ovsStringChecker
_learningDictionaryURL
_cachedDrawing
_transliterationVariantMap
_icuTransliterator
_lastCharacterSegmentCount
_lastCharacterSegmentIndexes
_postProcessor
_mergedResultPostProcessor
_minimumDrawingSize
_cachedResults
_characterIDMap
T^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}},N,V_engine
T^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}},N,V_freeformEngine
T@"CHCTCRecognitionModel",&,N,V_recognitionModel
T@"CVNLPCTCTextDecoder",&,N,V_textDecoder
T@"NSObject<OS_dispatch_queue>",&,N,V_recognitionQueue
T^v,N,V_radicalClusterFST
T^v,N,V_formatGrammarFST
T@"CHPatternNetwork",&,N,V_patternFST
T@"CHPatternNetwork",&,N,V_postProcessingFST
T@"CHRecognizerConfiguration",&,N,S_setConfiguration:,V_configuration
T^v,N,V_wordLanguageModel
T^v,N,V_lmVocabulary
T^v,N,V_characterLanguageModel
T^v,N,V_cjkStaticLexicon
T^v,N,V_cjkDynamicLexicon
T^{_LXLexicon=},N,V_staticLexicon
T^{_LXLexicon=},N,V_secondaryStaticLexicon
T^{_LXLexicon=},N,V_phraseLexicon
T^{_LXLexicon=},N,V_customLexicon
T^{_LXLexicon=},N,V_customPhraseLexicon
T@"NSDictionary",&,N,V_textReplacements
T@"NSMutableDictionary",&,N,V_textReplacementLowercasedKeyMapping
T@"CHSpellChecker",&,N,V_spellChecker
T@"CHMecabraWrapper",&,N,V_mecabraWrapper
T@"CHStringOVSChecker",&,N,V_ovsStringChecker
T@"NSURL",&,N,V_learningDictionaryURL
T@"CHDrawing",C,N,V_cachedDrawing
T{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}},N,V_cachedResults
T{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}},N,V_characterIDMap
T^{VariantMap=^i^i^ii^iQ},N,V_transliterationVariantMap
T^^v,N,V_icuTransliterator
TQ,N,V_lastCharacterSegmentCount
T@"NSMutableIndexSet",&,N,V_lastCharacterSegmentIndexes
T@"CHPostProcessingManager",&,N,V_postProcessor
T@"CHPostProcessingManager",&,N,V_mergedResultPostProcessor
T@"NSLocale",C,N
Ti,N,V_recognitionType
TB,N
TQ,N,V_maxRecognitionResultCount
T@"NSCharacterSet",&,N,V_activeCharacterSet
T{CGSize=dd},N,V_minimumDrawingSize
recordInsightWithRequest:
recordedInsightFromLastRequest
T@"CHRecognitionInsight",R,N
_edgeIndex
_numberOfSubstrokes
_numberOfSegments
_classifiableDrawing
_strokeGroup
TQ,R,N,V_edgeIndex
Tq,R,N,V_numberOfSubstrokes
Tq,R,N,V_numberOfSegments
T@"CHClassifiableDrawing",R,N,V_classifiableDrawing
T{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}},R,N,V_strokeGroup
orderedStrokes
unionSet:
removeObject:
isPointEnumerationSupportedForStroke:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
strokeIdentifier
encodedStrokeIdentifier:
enumeratePointsWithDistanceStep:usingBlock:
enumeratePointsWithTimestep:usingBlock:
enumeratePointsForStroke:interpolationType:resolution:usingBlock:
endTimestamp
startTimestamp
endStroke
convexHullForPoints:
getAddedStrokes:removedStrokeIdentifiers:inStrokeProvider:lastGroupingResult:
strokeForIdentifier:inStrokeProvider:
durationOfStrokesInStrokeGroup:strokeProvider:
speedForFinalTimeRange:stroke:
arcLengthForStroke:
boundingBoxOfPoints:rotatedAroundPoint:byAngle:
unionStrokeBounds:usingStrokeCountLimit:reverseOrder:
unionStrokeBounds:aroundXPosition:usingOneSideStrokeCountLimit:
createDrawingForStrokes:cancellationBlock:
convexHullForStroke:
circumferenceRatioOfCircleFittedToPoints:circleCenter:circleRadius:
vectorMeanWithoutOutliers:
lineOrientationForStrokePoints:error:
regularizedPathFromPoints:delta:gamma:outError:
appendFormat:
insightRequest
recognizerActiveCharacterSet
recognizerLocale
recognizerRecognitionModeDescription
recognizerContentTypeDescription
autoCapitalizationModeDescription
autoCorrectionModeDescription
recognizerMaxRecognitionResultCount
recognizerMinimumDrawingSize
recognizerOptions
inputDrawing
textResult
recognizerRecognitionMode
recognizerContentType
stringForRecognitionContentType:
stringForAutoCapitalizationMode:
stringForAutoCorrectionMode:
setInsightRequest:
setRecognizerLocale:
setRecognizerRecognitionMode:
setRecognizerContentType:
setRecognizerActiveCharacterSet:
setRecognizerOptions:
setRecognizerMaxRecognitionResultCount:
setRecognizerMinimumDrawingSize:
setInputDrawing:
setTextResult:
recognitionError
setRecognitionError:
_recognizerRecognitionMode
_recognizerContentType
_autoCapitalizationMode
_autoCorrectionMode
_insightRequest
_recognizerLocale
_recognizerActiveCharacterSet
_recognizerOptions
_recognizerMaxRecognitionResultCount
_inputDrawing
_textResult
_recognitionError
_recognizerMinimumDrawingSize
T@"CHRecognitionInsightRequest",&,N,V_insightRequest
T@"NSLocale",C,N,V_recognizerLocale
Ti,N,V_recognizerRecognitionMode
Ti,N,V_recognizerContentType
Ti,N,V_autoCapitalizationMode
Ti,N,V_autoCorrectionMode
T@"NSCharacterSet",C,N,V_recognizerActiveCharacterSet
T@"NSDictionary",C,N,V_recognizerOptions
TQ,N,V_recognizerMaxRecognitionResultCount
T{CGSize=dd},N,V_recognizerMinimumDrawingSize
T@"CHDrawing",C,N,V_inputDrawing
T@"CHTokenizedTextResult",C,N,V_textResult
T@"NSError",C,N,V_recognitionError
recordInputDrawing:
dataWithContentsOfFile:
JSONObjectWithData:options:error:
initWithContentsOfJSONDictionary:
componentsSeparatedByString:
setWithObjects:
decodeObjectOfClasses:forKey:
bytes
setDrawing:
dataWithBytes:length:
drawingWithStrokesFromIndexArray:
isEqualToDrawing:
numberWithLong:
drawingTransformedWithTranslation:scaleFactor:
startCutPoint
strokeIndex
endCutPoint
pointIndex
allocWithZone:
UUID
UUIDString
URLByAppendingPathComponent:
setDateFormat:
stringFromDate:
writeToFileWithContext:folder:basename:
absoluteString
fileExistsAtPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
jsonRepresentationWithContext:
dataWithJSONObject:options:error:
writeToURL:options:error:
initWithCGImage:
initWithContentsOfFile:
initWithContentsOfXYString:
newDrawingWithTransform:
newDrawingWithAffineTransform:
drawingByRemovingUnnaturalHorizontalGaps:
startTimeForStroke:
endTimeForStroke:
drawingWithStrokesFromIndexSet:
centroidForStrokeIndexes:
strokeBoundsAtIndex:
addStartTime:
addEndTime:
clear
isPrefixForDrawing:
xyRepresentation
sortedDrawingUsingStrokeMidPoint:
drawingScaledByFactor:
drawingSpatiallyResampled:outputPointMap:
drawingSpatiallyResampled:maxPointsPerStroke:
setLineHeight:
appendDrawing:
boundingBoxForDrawingSegmentFromCutPoint:toCutPoint:
averageCharacterHeightEstimation:minChunkHeight:
writeToFile
debugQuickLookObject
T{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}},N,V_drawing
sortedArrayUsingComparator:
sortedCHCutPointArray:
initWithStrokeIndex:pointIndex:isEndOfStroke:
isStartOfStroke
isEndOfStroke
_isEndOfStroke
_strokeIndex
_pointIndex
Tq,R,N,V_strokeIndex
Tq,R,N,V_pointIndex
TB,R,N,V_isEndOfStroke
isSinglePointSegment
initWithSegmentID:startCutPoint:endCutPoint:referenceDrawing:
segmentID
boundingBoxFromSegmentID:toSegmentID:withSegments:withSourceDrawing:
indexForSegmentID:fromSegments:
segmentBounds
contextBounds
setContextBounds:
_segmentID
_startCutPoint
_endCutPoint
_segmentBounds
_contextBounds
T@"NSNumber",R,N,V_segmentID
T@"CHCutPoint",R,N,V_startCutPoint
T@"CHCutPoint",R,N,V_endCutPoint
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_segmentBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_contextBounds
segmentGroupIndex
_segmentGroupIndex
_segments
Tq,R,N,V_segmentGroupIndex
T@"NSArray",R,N,V_segments
drawVisualizationInRect:context:viewBounds:
resultDrawn
textStrokeGroupsSortedTopBottomLeftRight
dirtyRectForStrokeGroup:
allObjects
newEstimatedBaselineForStrokesWithTokens:tokenStrokeIdentifiers:
layeringPriority
isSkippableScriptCode:
dataUsingEncoding:
dictionary
scriptCodeForCodepoint:
stringWithUTF8String:
unsignedLongValue
numberWithUnsignedLong:
shouldCorrectionGesturesSnapToTokensForScriptCode:
isCharacterFullWidth:
isRightToLeftScriptForCharacter:
shouldRelaxCharacterBoundsPercentageOverlapForScript:
isCharacterEmoji:
scriptHistogramForString:
_initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:autoCapitalizationMode:autoCorrectionMode:isSingleLine:lastCharacterLevelPosition:protectedCharacterIndexes:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:isSingleLine:lastCharacterLevelPosition:
referenceSubstringRange
characterRectsInReferenceSubstring
ch_descriptionWithSeparator:filterBlock:
selectedTextRange
activePreviewRange
strokeCoveredTextRange
lastCharacterLevelPosition
textInputTarget
textContentLength
referenceSubstring
isCursorStrong
containsCommittedStrokes
protectedCharacterIndexes
setReferenceSubstring:range:characterRects:
setTextInputTarget:
setTextContentLength:
setStrokeCoveredTextRange:
setSelectedTextRange:
setIsCursorStrong:
setContainsCommittedStrokes:
setActivePreviewRange:
isSingleLine
setIsSingleLine:
supportsAutoLineBreaks
setSupportsAutoLineBreaks:
setLastCharacterLevelPosition:
setProtectedCharacterIndexes:
characterRectForCharacterIndex:
enumerateCharacterRectsInRange:reverse:block:
enumerateCharacterRectsInRange:block:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:autoCapitalizationMode:autoCorrectionMode:isSingleLine:lastCharacterLevelPosition:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:activePreviewRange:contentType:lastCharacterLevelPosition:
absoluteLocationFromRelativeLocation:
relativeLocationFromAbsoluteLocation:
visualCharacterRectForCharacterIndex:
referenceSubstringInRange:
referenceSubstringRangeOfComposedCharacterAtIndex:
unionCharacterRects
_textInputTarget
_textContentLength
_referenceSubstring
_referenceSubstringRange
_characterRectsInReferenceSubstring
_strokeCoveredTextRange
_selectedTextRange
_isCursorStrong
_containsCommittedStrokes
_activePreviewRange
_contentType
_isSingleLine
_supportsAutoLineBreaks
_lastCharacterLevelPosition
_protectedCharacterIndexes
T@"CHTextInputTarget",R,N,V_textInputTarget
Tq,R,N,V_textContentLength
T@"NSString",R,C,N,V_referenceSubstring
T{_NSRange=QQ},R,N,V_referenceSubstringRange
T{_NSRange=QQ},R,N,V_strokeCoveredTextRange
T{_NSRange=QQ},R,N,V_selectedTextRange
TB,R,N,V_isCursorStrong
TB,R,N,V_containsCommittedStrokes
T{_NSRange=QQ},R,N,V_activePreviewRange
Ti,R,N,V_contentType
Ti,R,N,V_autoCapitalizationMode
Ti,R,N,V_autoCorrectionMode
TB,R,N,V_isSingleLine
TB,R,N,V_supportsAutoLineBreaks
Tq,R,N,V_lastCharacterLevelPosition
T^{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_characterRectsInReferenceSubstring
T@"NSIndexSet",R,C,N,V_protectedCharacterIndexes
T@"CHTextInputTarget",&,D,N
T{_NSRange=QQ},D,N
TB,D,N
Ti,D,N
convexHull
initWithStrokeIdentifier:substrokesCount:classificationAsNonText:lineOrientation:lineError:containerScore:bounds:boundsDiagonal:enlargedBounds:rotatedBounds:supportByStrokeIdentifier:support:
substrokesCount
classificationAsNonText
lineOrientationAngle
lineError
containerScore
valueWithBytes:objCType:
boundsDiagonal
supportByStrokeIdentifier
support
getValue:size:
setWithArray:
enlargedBounds
rotatedBounds
isEqualToNonTextCandidateStroke:
initWithStroke:consistingOfSubstrokes:classificationAsNonText:lineOrientation:lineError:containerScore:
effectiveClassification
_supportByStrokeIdentifier
_support
_strokeIdentifier
_classificationAsNonText
_substrokesCount
_lineError
_containerScore
_lineOrientationAngle
_boundsDiagonal
_enlargedBounds
_rotatedBounds
Tq,R,N,V_classificationAsNonText
Tq,R,N,V_substrokesCount
T@"NSDictionary",R,N,V_supportByStrokeIdentifier
Td,R,N,V_lineError
Td,R,N,V_containerScore
Td,R,N,V_lineOrientationAngle
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_bounds
Td,R,N,V_boundsDiagonal
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_enlargedBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_rotatedBounds
T@"CHEncodedStrokeIdentifier",R,N,V_strokeIdentifier
Td,R,N,V_support
_removeSupportForStrokeIdentifier:
numberWithFloat:
removeObjectForKey:
_adjustSupportForLineClassificationByAddingStroke:consistingOfSubstrokes:
_adjustSupportForContainerClassificationByAddingStroke:consistingOfSubstrokes:
_setSupportForStrokeIdentifier:support:
setSupportByStrokeIdentifier:
adjustSupportByRemovingStrokeIdentifier:
adjustSupportByAddingStroke:consistingOfSubstrokes:
T@"NSDictionary",&,D,N
_detectCorners
initWithIndexSet:
cornerIndexes
firstIndex
resampledDrawing
_distance:p1:p2:
minimumSignificantSegmentLength
_resolveResampledDirectionChangePointIndexes:
_resampleDrawing:outputPointMap:
_cornerIndexSet
_strawSize
allValues
sortedArrayUsingSelector:
_postProcessCorners:corners:straws:
_detectDirectionalChanges
_resamplingDistance:
shouldUseDynamicSampling
_isLine:usingThreshold:p1:p2:
_strokeHalfwayCorner:p1:p2:
_removeColinearCorners:usingThreshold:corners:
_removeColinearCorners:usingDistanceThreshold:usingLowerThreshold:usingUpperThreshold:corners:
_removeAdjacentCorners:corners:straws:
_pathDistance:p1:p2:
directionChangeCornerIndexes
setMinimumSignificantSegmentLength:
setShouldUseDynamicSampling:
directionChangeCount
highestDirectionChangeCount
_directionChangeCornerIndexes
_resampledDrawingPointMap
_shouldUseDynamicSampling
_minimumSignificantSegmentLength
_resampledDrawing
_directionChangeCount
_highestDirectionChangeCount
__strawSize
__cornerIndexSet
__directionChangeCornerIndexes
__resampledDrawingPointMap
TQ,R,N,V__strawSize
T@"NSMutableIndexSet",R,C,N,V__cornerIndexSet
T@"NSMutableIndexSet",R,C,N,V__directionChangeCornerIndexes
T{vector<std::map<long, long>, std::allocator<std::map<long, long>>>=^v^v{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>=^v}},R,N,V__resampledDrawingPointMap
TB,N,V_shouldUseDynamicSampling
Td,N,V_minimumSignificantSegmentLength
T@"CHDrawing",C,N,V_drawing
T@"CHDrawing",R,C,N,V_resampledDrawing
TQ,R,N,V_directionChangeCount
TQ,R,N,V_highestDirectionChangeCount
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:groupingResultsByStrategyIdentifier:
groupingResultsByStrategyIdentifier
_groupingResultsByStrategyIdentifier
T@"NSDictionary",R,N,V_groupingResultsByStrategyIdentifier
initWithStrokeProvider:locale:textInputTargets:
initWithStrokeProvider:defaultWritingOrientation:locales:isInlineContinuousMode:inlineContinuousModeTargets:
sessionLastResult
strokeClassificationResult
groupingStrategiesByIdentifier
allKeys
orderedStrokeIdentifiers
strokeClassificationsByStrokeIdentifier
_isGroupableNonTextForStrokeClassification:
enumerateObjectsUsingBlock:
addEntriesFromDictionary:
intersectsSet:
objectsPassingTest:
setWithObject:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
initWithStrokeProvider:locales:clutterFilter:
groupingResultUsingStrokes:distanceMetric:mergingDistanceThreshold:shouldCancel:
_groupsFromClusterResult:strokes:strokeClassificationsByStrokeIdentifier:
substrokesByStrokeIdentifier
_greedyCombinationOfGroupingResults:stableStrokeIdentifiers:withCancellationBlock:
textStrokeGroups
isEqualToSet:
setByAddingObjectsFromSet:
fastGroupingClusters
_simpleDrawingForStrokeGroup:originalDrawing:orderedStrokeIDs:
initWithStrokeProvider:sessionLastResult:locales:isInlineContinuousMode:inlineContinuousModeTargets:
updatedGroupingResultByAddingStrokes:removingStrokeIdentifiers:orderedStrokeIdentifiers:strokeClassificationResult:cancellationBlock:
isInlineContinuousMode
textInputTargets
_isInlineContinuousMode
_sessionLastResult
_locales
_textInputTargets
_groupingStrategiesByIdentifier
T@"NSDictionary",R,N,V_groupingStrategiesByIdentifier
T@"CHRecognitionSessionResult",R,N,V_sessionLastResult
T@"NSArray",R,N,V_locales
TB,R,N,V_isInlineContinuousMode
T@"NSArray",R,N,V_textInputTargets
sharedSettings
isScribbleActive
autoLineBreakEnabled
autoLineBreakRequireWeakCursor
autoLineBreakMinVerticalDistance
autoLineBreakDualBreakVerticalDistance
autoLineBreakAreaWidthFactor
lineBreakVerticalBarGestureEnabled
lineBreakVerticalBarUpToDelete
subwordGestureEndingSpeedRange
subwordGestureSpeedThreshold
preventLeftoverCharsInSubwordGestures
_autoLineBreakEnabled
_autoLineBreakRequireWeakCursor
_lineBreakVerticalBarGestureEnabled
_lineBreakVerticalBarUpToDelete
_preventLeftoverCharsInSubwordGestures
_autoLineBreakMinVerticalDistance
_autoLineBreakDualBreakVerticalDistance
_autoLineBreakAreaWidthFactor
_subwordGestureEndingSpeedRange
_subwordGestureSpeedThreshold
TB,R,N,V_autoLineBreakEnabled
TB,R,N,V_autoLineBreakRequireWeakCursor
Td,R,N,V_autoLineBreakMinVerticalDistance
Td,R,N,V_autoLineBreakDualBreakVerticalDistance
Td,R,N,V_autoLineBreakAreaWidthFactor
TB,R,N,V_lineBreakVerticalBarGestureEnabled
TB,R,N,V_lineBreakVerticalBarUpToDelete
Td,R,N,V_subwordGestureEndingSpeedRange
Td,R,N,V_subwordGestureSpeedThreshold
TB,R,N,V_preventLeftoverCharsInSubwordGestures
strokePointTransformationsForContextStrokes:completion:shouldCancel:
strokePointTransformationsForContextStrokes:completionWithTelemetry:shouldCancel:
shouldDrawStrokeGroup:
_transformForInputDrawingBounds:referenceBounds:viewBounds:
_drawGroupBrackgroundInRect:context:
drawInputDrawing:inContext:transform:
inputDrawingCutPoints
_drawCutPoints:inputDrawing:inContext:transform:
activeStrokeGroupAncestorIdentifiers
wantsInputDrawings
_recognitionResultsByGroupID
_textCorrectionResultsByGroupID
preferredLocales
languageCode
textStrokeGroupsSortedByWritingOrientation
highConfidenceTextForSessionResult:rejectionRate:doesContainUnfilteredMultiLocaleResults:
_resultsDebugDescriptionIntoGroupsArray:groupHeaderBlock:
textCorrectionResultForStrokeGroupIdentifier:
textCorrectionResult
error
transcriptionWithPath:columnRange:filterLowConfidence:
languageFitnessForLocale:
strokeIdentifierToGroupIndexMappingForStrokeIdentifiers:orderedStrokeGroups:
textStrokeGroupClusters
isEquivalentToStrokeGroup:
defaultWordTerminationCharacterForLocale:
initWithTextResult:terminatingSpecialCharacter:strokeGroup:
encodedStrokeProviderVersion
sessionMode
recognitionEnvironment
getBytes:length:
initWithStrokeProviderVersion:encodedStrokeProviderVersion:orderedStrokeIdentifiers:sessionMode:locales:preferredLocales:clutterFilter:strokeClassificationResult:strokeGroupingResult:recognitionResults:inlineContinuousModeResults:generationDuration:recognitionEnvironment:
generationDuration
isEqualToSerializableRecognitionSessionResult:
clutterFilter
isEqualToRecognitionSessionResult:
initWithResult:validStrokes:
_transcriptionCapability
highConfidenceDebugDescription
allResultsDebugDescription
allResultsDebugDescriptionByGroup
allResultsDebugDescriptionWithGroupHeaderBlock:
fullyCoveredStrokeGroupsForContextStrokes:partiallyCoveredStrokeGroups:
contextualResultsWithFullyCoveredStrokeGroups:partiallyCoveredStrokeGroups:drawingCanvasSize:
hasCompleteRecognitionResults
__transcriptionCapability
_encodedStrokeProviderVersion
__shouldUseCachedHasCompleteRecognitionResults
__hasCompleteRecognitionResults
_strokeProviderVersion
_orderedStrokeIdentifiers
_sessionMode
_preferredLocales
_clutterFilter
_recognitionEnvironment
_strokeClassificationResult
_strokeGroupingResult
__recognitionResultsByGroupID
__textCorrectionResultsByGroupID
_generationDuration
T@"NSDictionary",R,C,N,V__recognitionResultsByGroupID
T@"NSDictionary",R,C,N,V__textCorrectionResultsByGroupID
T@"<CHStrokeProviderVersion>",R,N,V_strokeProviderVersion
T@"NSArray",R,N,V_orderedStrokeIdentifiers
Tq,R,N,V_sessionMode
T@"NSArray",R,C,N,V_locales
T@"NSArray",R,C,N,V_preferredLocales
T@"CHStrokeClutterFilter",R,N,V_clutterFilter
Tq,R,N,V_recognitionEnvironment
T@"CHStrokeClassificationResult",R,N,V_strokeClassificationResult
T@"CHStrokeGroupingResult",R,N,V_strokeGroupingResult
T{?=ddddd},R,N,V_generationDuration
T@"NSArray",R,N
textStrokeIdentifiers
keysOfEntriesPassingTest:
nontextCandidates
initWithStrokeClassificationsByStrokeIdentifier:substrokesByStrokeIdentifier:nontextCandidates:
isEqualToStrokeClassificationResult:
isEquivalentToStrokeClassificationResult:
_textStrokeIdentifiers
_strokeClassificationsByStrokeIdentifier
_substrokesByStrokeIdentifier
_nontextCandidates
T@"NSDictionary",R,C,N,V_strokeClassificationsByStrokeIdentifier
T@"NSDictionary",R,C,N,V_substrokesByStrokeIdentifier
T@"NSSet",R,C,N
T@"NSSet",R,C,N,V_nontextCandidates
createdStrokeGroups
deletedStrokeGroups
_sortedStrokeGroupsByWritingOrientationTextOnly:
averageWritingOrientation
strokeGroupsClusteredByProximity:
isEqualToStrokeGroupingResult:
strokeGroupClusters
_strokeGroupsSortedTopBottomLeftRight
_textStrokeGroupsSortedByWritingOrientation
_strokeGroupsSortedByWritingOrientation
_textStrokeGroupClusters
_strokeGroupClusters
_textStrokeGroups
_strokeGroups
_createdStrokeGroups
_deletedStrokeGroups
T@"NSSet",R,C,N,V_strokeGroups
T@"NSSet",R,C,N,V_createdStrokeGroups
T@"NSSet",R,C,N,V_deletedStrokeGroups
T@"NSArray",R,C,N
initWithOrderedLocales:resultsByLocale:errorsByLocale:languageFitnessByLocale:inputStrokeIdentifiers:inputDrawing:inputDrawingCutPoints:
languageFitnessByLocale
sortedLocales:usingLanguageFitness:useCombinedScore:
filteredResultsByLocale:orderedLocales:usingLanguageFitness:outSortedLocales:
topTranscription
standardUserDefaults
boolForKey:
localesSortedByRawLanguageFitness:
containsValueForKey:
value:withObjCType:
initWithOrderedLocales:resultsByLocale:errorsByLocale:languageFitnessByLocale:inputStrokeIdentifiers:
isEqualToStrokeGroupRecognitionResult:
_inputDrawingCutPoints
_languageFitnessByLocale
_orderedLocales
_inputStrokeIdentifiers
_recognitionResultsByLocale
T@"NSArray",R,C,N,V_inputStrokeIdentifiers
T@"NSDictionary",R,C,N,V_recognitionResultsByLocale
T@"NSDictionary",R,C,N,V_errorsByLocale
sortWithOptions:usingComparator:
sortedArrayWithOptions:usingComparator:
localesByLanguageGroup:
sortedLanguageGroups:usingLanguageFitness:
modelNameLatin
allNonLatinModelNames
filteredLocalesFromGroup:results:withCharacterDetectionBlock:
indexOfFirstLocaleWithLanguage:orderedLocales:
modelNameJapanese
T@"CHDrawing",R,N
T@"NSDictionary",R,C,N
initWithTextCorrectionResult:inputStrokeIdentifiers:
isEqualToStrokeGroupTextCorrectionResult:
_textCorrectionResult
T@"CHTextCorrectionResult",R,C,N,V_textCorrectionResult
setLocales:
setOptions:
setHasBeenSubmitted:
setPriority:
parametersOverride
setParametersOverride:
initWithLocales:recognitionMode:drawing:options:priority:
decodeFloatForKey:
setActiveCharacterSetPerLocale:
decodeBoolForKey:
setShouldUseTextReplacements:
setEnableStrokeReordering:
encodeFloat:forKey:
encodeBool:forKey:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
configurationKey
shouldUseTextReplacements
isEqualToArray:
options
isEqualToDictionary:
activeCharacterSetPerLocale
priority
isEqualToRemoteRecognitionRequest:
loadFromFile:
writeToFileInFolder:basename:
shouldRemoveUnnaturalGaps
recognizerConfigurationKeyWithLocale:
enableStrokeReordering
hasBeenSubmitted
_shouldUseTextReplacements
_enableStrokeReordering
_hasBeenSubmitted
_recognitionMode
_activeCharacterSetPerLocale
_options
_priority
_parametersOverride
T@"NSArray",C,N,V_locales
T@"NSDictionary",C,N,V_activeCharacterSetPerLocale
Ti,N,V_recognitionMode
Ti,N,V_contentType
T@"NSDictionary",C,N,V_options
TB,N,V_shouldUseTextReplacements
TB,N,V_enableStrokeReordering
TB,N,V_hasBeenSubmitted
Tq,N,V_priority
T@"NSDictionary",C,N,V_parametersOverride
isEqualToTokenizedTextResultColumn:
indexOfEquivalentTokenRow:tokenRange:
containsStartingTokenEquivalentToToken:
_tokenRows
T@"NSArray",R,C,N,V_tokenRows
T@"NSIndexSet",R,N
_mutableTokenRows
mergeTokenRow:intoUniqueRows:
setTokenRows:
setTokenRowWithTokens:atIndex:
removeTokenRowAtIndex:
sortTokenRows
T@"NSArray",C,D,N
clearCache
cacheTextResult:drawing:recognitionEngineCachingKey:
retrievePartialResultsForDrawing:recognitionEngineCachingKey:matchingColumnRange:
_lastDrawing
_textResults
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
_newStrokeGroupUniqueIdentifier
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
isEqualToStrokeGroup:
_averageInterStrokeGroupDistanceForSortedStrokeGroups:outStdDev:
strokeGroupContainingStrokeIdentifier:strokeGroups:foundStrokeGroupIndex:
isStrokeGroupSet:equivalentToStrokeGroupSet:
strokeGroupContainingStrokeIdentifier:strokeGroups:
_uniqueIdentifier
_ancestorIdentifier
_firstStrokeIdentifier
_lastStrokeIdentifier
_classification
_groupingConfidence
_strategyIdentifier
_firstStrokeOrigin
Tq,R,N,V_uniqueIdentifier
Tq,R,N,V_ancestorIdentifier
T{CGPoint=dd},R,N,V_firstStrokeOrigin
T{CGVector=dd},R,N
T@"NSSet",R,N,V_strokeIdentifiers
T@"CHEncodedStrokeIdentifier",R,N,V_firstStrokeIdentifier
T@"CHEncodedStrokeIdentifier",R,N,V_lastStrokeIdentifier
Tq,R,N,V_classification
Td,R,N,V_groupingConfidence
T@"NSString",R,N,V_strategyIdentifier
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:
inputResult
recognitionLocales
activeTextInputQuery
textInputTargetsDataSource
_dataSource:inputTargetContentInfoForStrokeGroups:groupingManager:
cancelled
inputTarget
inputTargetIdentifier
isEqualToNumber:
_textCorrectionResultForStrokeGroup:groupingManager:targetContentInfo:locales:previousCorrectionResult:
initWithStrokeProvider:strokeClassificationLastResult:textOnly:
initialTextInputTargets
_contextBoundsForTargetContentInfo:
lastStrokeInGroup:strokeProvider:
delegate
textCorrectionRecognizerForLocales:
textCorrectionResultForDrawing:targetContentInfo:originalDrawing:lastStroke:localTypedContextBounds:normalizedDrawingScaleFactor:previousCorrectionResult:
_dataSource:textInputTargetForStrokeGroup:simultaneousGroups:
fetchContentInfoForTextInputTarget:strokeIdentifiers:completion:
queryItemStableIdentifierForStrokeGroup:
textInputTargetForItemStableIdentifier:strokeIdentifiers:simultaneousItemStableIdentifiers:
textInputTargetForItemStableIdentifier:strokeIdentifiers:
defaultTextAffectedRangeForTargetContentInfo:
frame
initWithLocales:strokeProvider:initialTextInputTargets:inputResult:recognitionEnvironment:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:
recognitionResultsForGroupingResult:groupingManager:
textCorrectionResultsForGroupingResult:groupingManager:
newStrokeClassifier
newGroupingManager
setActiveTextInputQuery:
_initialTextInputTargets
_activeTextInputQuery
T@"<CHRecognitionSessionTextInputTaskDelegate>",D,N
T@"NSArray",R,N,V_initialTextInputTargets
T@"CHTextInputQuery",&,N,V_activeTextInputQuery
initWithIdentifier:frame:
isEqualToInputTarget:
_inputTargetIdentifier
_frame
T@"NSNumber",R,C,N,V_inputTargetIdentifier
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_frame
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
writingDirectionSortedSubstrokes
substroke
newEstimatedBaselineForSubStrokes:tokens:tokenSubStrokeIndexes:estimatedDescenderLocations:
orientedBounds
writingOrientation
orientationTransform
initWithFIFO:
initWithFIFO:width:spacing:
flush
path
localStrokeWritingOrientations
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:lastSubstrokeIndexBeforeMerge:firstStrokeOrigin:
localWritingOrientationAtStrokeIndex:
averageStrokeDeviation
lastSubstrokeIndexBeforeMerge
coalescedLastSubstrokes
writingDirectionSortedStrokeIdentifiers
_writingDirectionSortedSubstrokes
_averageWritingOrientation
_averageStrokeDeviation
_localStrokeWritingOrientations
_lastSubstrokeIndexBeforeMerge
_coalescedLastSubstrokes
_writingDirectionSortedStrokeIdentifiers
T@"NSArray",R,N,V_writingDirectionSortedStrokeIdentifiers
getIndexes:range:
indexPathWithIndexes:length:
stringByAppendingPathExtension:
scriptCode
capitalizedString
countryCode
uppercaseString
lengthOfBytesUsingEncoding:
enumerateCodepointsInRange:reverse:usingBlock:
replaceCharactersInRange:withString:
characterTypeFromString:
containsIndexes:
stringByApplyingTransform:reverse:
insertString:atIndex:
scannerWithString:
isAtEnd
scanUpToCharactersFromSet:intoString:
scanFloat:
initWithRecognitionSession:
setPreferredUpdatesInterval:
_setTranscribedTitle:strokeIdentifiers:
transcribedTitle
titleStrokeIdentifiers
_transcribedTitle
_titleStrokeIdentifiers
T@"NSString",R,C,N,V_transcribedTitle
T@"NSSet",R,C,N,V_titleStrokeIdentifiers
setup
initWithMLModel:modelKey:
incrementUsageCount
decrementUsageCount
usageCount
releaseModelWithKey:
model
modelKey
_modelKey
_modelUseCount
_model
T@"MLModelDescription",R,N
T@"MLModelConfiguration",R,N
T@"NSString",R,N,V_modelKey
_score
Td,V_score
mecabraCandidate
_isTextReplacement
_wordRanges
_wordIDs
_wordRecognitionScores
_wordCombinedScores
_wordStrokeSets
_wordLexicalEntries
_wordPatternEntries
_rareWordIndexes
_inappropriateWordIndexes
T@"NSString",R,V_string
T@"NSArray",R,V_wordRanges
T@"NSArray",R,V_wordIDs
T@"NSArray",R,V_wordRecognitionScores
T@"NSArray",R,V_wordCombinedScores
T@"NSArray",R,V_wordStrokeSets
T@"NSArray",R,V_wordLexicalEntries
T@"NSArray",R,V_wordPatternEntries
T@"NSIndexSet",R,V_rareWordIndexes
T@"NSIndexSet",R,V_inappropriateWordIndexes
TB,R,V_isTextReplacement
initWithString:score:rotation:
rotation
_rotation
Td,R,V_rotation
startEndpointType
endEndpointType
startLocation
endLocation
midpointLocation
controlPoint
pathPoints
cornerLine
_cornerLine
_startEndpointType
_endEndpointType
_pathPoints
_startLocation
_endLocation
_midpointLocation
_controlPoint
Ti,R,V_startEndpointType
Ti,R,V_endEndpointType
T{CGPoint=dd},R,V_startLocation
T{CGPoint=dd},R,V_endLocation
T{CGPoint=dd},R,V_midpointLocation
T{CGPoint=dd},R,V_controlPoint
T@"NSArray",R,V_pathPoints
TB,R,V_cornerLine
center
size
_center
_size
T{CGPoint=dd},R,V_center
T{CGSize=dd},R,V_size
upperLeftPoint
upperRightPoint
lowerLeftPoint
lowerRightPoint
_upperLeftPoint
_upperRightPoint
_lowerLeftPoint
_lowerRightPoint
T{CGPoint=dd},R,V_upperLeftPoint
T{CGPoint=dd},R,V_upperRightPoint
T{CGPoint=dd},R,V_lowerLeftPoint
T{CGPoint=dd},R,V_lowerRightPoint
vertex1
vertex2
vertex3
_vertex1
_vertex2
_vertex3
T{CGPoint=dd},R,V_vertex1
T{CGPoint=dd},R,V_vertex2
T{CGPoint=dd},R,V_vertex3
stemLocation
stemWidth
_stemWidth
_stemLocation
T{CGPoint=dd},R,V_stemLocation
Td,R,V_stemWidth
_newColorForStroke:inGroup:
visualizationIndexForStrokeGroup:
newColorForVisualizedItemAtIndex:
pause
q_foundItemsForSearchString:sessionResult:
_setFoundItems:
_enumerateMatchesForStrokeGroupResult:locales:queryString:usingBlock:
objectsAtIndexes:
initWithStrokeIdentifiers:
tokenRowsAtColumnIndex:
_findMatchingTokenPathInResult:initialTokenLocation:queryString:fromIndex:coveredStrokeIndexes:reverseMatchedTokens:
tokenAtLocation:
intersectsIndexesInRange:
enumerateRangesUsingBlock:
_isMatchSeparatorBeforeToken:atLocation:inResult:queryString:fromIndex:matchedLength:
_isMatchStringForToken:queryString:fromIndex:requirePrefixMatch:matchedLength:
precedingSeparatorForToken:
q_setNeedsQueryResultUpdating
stop
setQueryString:
queryString
foundItems
caseMatchingOnly
setCaseMatchingOnly:
fullWordsOnly
setFullWordsOnly:
_caseMatchingOnly
_fullWordsOnly
_foundItems
_queryString
T@"NSArray",C,N,S_setFoundItems:,V_foundItems
T@"NSString",C,N,V_queryString
TB,N,V_caseMatchingOnly
TB,N,V_fullWordsOnly
isEqualToSearchQueryItem:
setDelegate:
_recognitionSession
_delegate
T@"CHRecognitionSession",R,N,V_recognitionSession
T@"<CHVisualizationDelegate>",W,N,V_delegate
recognitionSessionDidUpdateRecognitionResult
toggleVisualizationRegionAtPoint:
nextFIFO
emitPoint:
setNextFIFO:
_nextFIFO
T@"CHPointFIFO",&,N,V_nextFIFO
strokes
setStrokes:
_strokes
T@"CHDrawing",&,N,V_strokes
T@"CHDrawing",&,N,V_drawing
emitAveragedPoint
initWithFIFO:width:
width
setWidth:
spacing
setSpacing:
prevPoints
setPrevPoints:
_spacing
_width
_prevPoints
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_prevPoints
TQ,N,V_width
Tf,N,V_spacing
setUnitScale:
drawingTarget
lineWidth
setNeedsDisplayInRect:
interpolateFromPoint:toPoint:controlPoint:time:
initWithFIFO:drawingTarget:
setUnitScaleForViewSize:normalizedSize:contentScaleFactor:
unitScale
emitInterpolatedPoints
setEmitInterpolatedPoints:
emissionHandler
setEmissionHandler:
setPath:
setLineWidth:
points
setPoints:
controlPoints
setControlPoints:
lastPoint
setLastPoint:
setDrawingTarget:
_emitInterpolatedPoints
_unitScale
_emissionHandler
_path
_lineWidth
_drawingTarget
_lastPoint
_points
_controlPoints
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_points
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_controlPoints
T,N,V_lastPoint
T@"<CHPointFIFODrawingTarget>",&,N,V_drawingTarget
Tf,N,V_unitScale
TB,N,V_emitInterpolatedPoints
T@?,C,V_emissionHandler
T^{CGPath=},N,V_path
Td,N,V_lineWidth
drawStrokesFromStrokeProvider:inRect:context:
targetContentInfo
gestureType
_affectedRangeByAdjustingForProtectedCharacters:
_affectedRangeByRemovingTerminatingNewLines:
_affectedRangeByTrimmingSpaces:
_affectedRangeByAdjustingToTokensIfNeeded:allowSubtoken:didExpand:
originalDrawing
_affectedRangeByRefiningShapeBasedGesture:resultType:drawing:targetContentInfo:
_isShapeBasedRangeRefinementSupportedForResultType:
initWithVertices:vertexCount:
initWithRect:
polygonByIntersectingWithClipPolygon:
area
edgeCountIntersectingLineSegment:
_shouldExpandToFullTokensForScriptInString:withRange:shouldExpandStart:shouldExpandEnd:
rangeOfTokenAtCharacterIndex:inString:locale:
lastStroke
preferCharacterLevel
cursorPositionAtIndex:usingBlockToSelectSide:
isVerticalBarShapeFromLineResult:originalDrawing:isDirectionDownward:
_cursorPositionForPoint:referenceString:referenceCharRects:searchingRange:
controlCharacterSet
formIntersectionWithCharacterSet:
shouldUseFullWidthSpaceBasedOnContextForLocale:
normalizedDrawing
tokenizedTextResultWithString:strokeIndexes:bounds:trailingSeparator:recognizerGenerationIdentifier:
initWithGestureType:targetContentInfo:locale:normalizedDrawing:originalDrawing:lastStroke:preferCharacterLevel:
set_textResult:
set_storedAffectedRange:
verticalBarGestureFromLineResult:currentGesture:
isEditGestureForDrawing:targetContentInfo:tentativeResultType:
shouldReclassifyGestureType:
isDrawingCenterOnBlank:targetContentInfo:insertionLocation:
getAffectedRange:expandedToFullTokens:
setGestureType:
_storedAffectedRange
_preferCharacterLevel
_gestureType
_targetContentInfo
_locale
_normalizedDrawing
_originalDrawing
_lastStroke
__textResult
__storedAffectedRange
T@"CHTokenizedTextResult",&,N,V__textResult
T{_NSRange=QQ},N,V__storedAffectedRange
Tq,N,V_gestureType
T@"CHTextInputTargetContentInfo",R,N,V_targetContentInfo
T@"NSLocale",R,N,V_locale
T@"CHDrawing",R,N,V_normalizedDrawing
T@"CHDrawing",R,N,V_originalDrawing
TB,R,N,V_preferCharacterLevel
T@"<CHStroke>",R,N,V_lastStroke
initWithCaretTipPoint:targetContentInfo:locale:normalizedDrawing:originalDrawing:
caretDirection
caretTipPoint
_caretTipPoint
T{CGPoint=dd},R,N,V_caretTipPoint
initWithModelName:
inputNames
outputNames
resourcePath
orderedSetWithCapacity:
codeMap
directionalFeaturesInputName
_extractFeaturesFromDrawing:inputName:interpointDistance:initialVectorAnchorPoint:normalizeFeatures:padFeatures:error:
featureCounts
sequenceCompression
gapFeatureIndex
normalizedDrawing:targetHeight:minimumDrawingSize:interpolationDistance:outScaleFactor:outputPointMap:
normalizeFeatures
featureProviderForDrawing:initialVectorAnchorPoint:normalizeFeatures:padFeatures:outStrokeEndings:outInputSequenceLength:outOutputSequenceLength:
initWithDataPointer:shape:dataType:strides:deallocator:error:
initWithMultiArray:domainType:characterObservations:blankIndex:pruningPolicy:
initWithMultiArray:indexArray:domainType:characterObservations:blankIndex:pruningPolicy:
initWithActivations:
skipLatinActivationThreshold
reachesActivationThreshold:inCharacterSet:resultArray:indexArray:
setUnlikelyHasLatinContents:
updateActivationsWithActiveCharacterSet:resultArray:indexArray:
highestSymbolActivationWithResultArray:indexArray:symbol:
enumerateActivationsInResultArray:indexArray:block:
blankIndex
spaceIndex
pseudospaceIndex
distanceFeatureIndex
sinAlphaFeatureIndex
cosAlphaFeatureIndex
distMean
distStd
initWithModelName:decodingPruningPolicy:
_extractFeaturesFromDrawing:inputName:interpointDistance:error:
characterProbabilityOutputName
setNormalizeFeatures:
setDistMean:
setDistStd:
interpointDistance
setInterpointDistance:
decodingPruningPolicy
setDecodingPruningPolicy:
_stringCodeMap
_normalizeFeatures
_sequenceCompression
_distanceFeatureIndex
_sinAlphaFeatureIndex
_cosAlphaFeatureIndex
_gapFeatureIndex
_directionalFeaturesInputName
_characterProbabilityOutputName
_codeMap
_blankIndex
_spaceIndex
_pseudospaceIndex
_distMean
_distStd
_interpointDistance
__stringCodeMap
_decodingPruningPolicy
T@"NSOrderedSet",R,V__stringCodeMap
Tq,R,N,V_sequenceCompression
Tq,R,N,V_distanceFeatureIndex
Tq,R,N,V_sinAlphaFeatureIndex
Tq,R,N,V_cosAlphaFeatureIndex
Tq,R,N,V_gapFeatureIndex
T@"NSString",R,N,V_directionalFeaturesInputName
T@"NSString",R,N,V_characterProbabilityOutputName
T^{CHCodeMap=*Q^II},R,N,V_codeMap
Tq,R,N,V_blankIndex
Tq,R,N,V_spaceIndex
Tq,R,N,V_pseudospaceIndex
TB,N,V_normalizeFeatures
Td,N,V_distMean
Td,N,V_distStd
Td,N,V_interpointDistance
T{CVNLPTextDecodingPruningPolicy=qBfI},N,V_decodingPruningPolicy
initWithTokenColumns:transcriptionPaths:scores:trailingSeparator:recognizerGenerationIdentifier:changeableColumnCount:
initWithTokenColumns:transcriptionPaths:scores:trailingSeparator:recognizerGenerationIdentifier:
initWithBestPathTokens:pathProbabilities:trailingSeparator:recognizerGenerationIdentifier:changeableColumnCount:
ch_intersectsIndexSet:
setPrecedingLineBreaks:
changeableTokenColumnCount
enumerateTokensInTopTranscriptionPathWithBlock:
_rawPath
shouldFilterOutStringForToken:isGibberish:
stringByPaddingToLength:withString:startingAtIndex:
enumerateTokensInTranscriptionPath:columnRange:tokenProcessingBlock:
_isGibberishToken:
precedingLineBreaks
_strokeIndexSetsFromTokenRow:
indexOfObjectIdenticalTo:
_rawLanguageFitnessForTranscriptionPath:locale:recognitionMode:
localeWithLocaleIdentifier:
exemplarCharacterSet
_scoreMeanAndStdForToken:forLocale:
_characterCountInToken:filteringCharacterSet:filteredCharacterCount:
_normalizedLanguageFitness:
_averageTokenRecognitionScoreInTranscriptionPath:
ch_occurrencesOfCharactersInSet:maxCount:
_legacyTextRecognitionResultForTranscriptionIndex:
isEqualToTokenizedTextResult:
areTokenRowsEquivalent:otherRow:
_originalRowFromRow:
precedingSeparatorForTopTranscriptionPath
getIndexes:
trailingSeparator
rawTranscription
ch_hasCharactersFromSets:
resultRestoringRawPathInResult:
isSupportedCyrillicScriptLocale:withMode:
ch_latinCharacterSet
commonTopStrokeSetsWithResult:
hasTextReplacementsInColumnRange:
shouldSwapCyrillicTopResult:topRange:englishResult:englishRange:prevousGroupTopString:
indexPathByRemovingLastIndex
ch_mappedArrayWithBlock:
compressResult:atColumnIndexes:
shouldRemoveSpaceBetweenPreviousChar:andNextChar:inLocale:
tokenizedTextResultFromResults:shouldPerformStrictFiltering:doesTopLocaleRequireSpecialHandling:hasSwap:
swappableColumnIndexesInResults:locales:topLocaleIndex:swappableIndex:
resultsBySwapping:swappableColumns:topLocaleIndex:topLocale:
recognizerDebugDescription
heuristicTextScoreForColumnRange:
averageTokenRecognitionScoreForColumnRange:
isPathOriginal:
precedingSeparatorForRawTranscriptionPath
strokeIndexesForColumnsInRange:
strokeIndexSetsInPath:columnRange:
isValid
tokensFromTopTranscriptionWithCharacterRange:
languageFitnessForLocale:recognitionMode:
textRecognitionResultArray
phraseCaseCorrectedResultWithHistory:phraseLexicon:maxPhraseLength:
subResultWithColumnRange:
_columnStrokeSetsFromTokenRows:
_tokenColumns
_transcriptionPaths
_transcriptionPathScores
_recognizerGenerationIdentifier
_precedingLineBreaks
_changeableCount
_trailingSeparator
T@"NSString",R,C,N,V_trailingSeparator
T@"NSArray",R,C,N,V_transcriptionPaths
T@"NSArray",R,C,N,V_transcriptionPathScores
T@"NSString",R,C,N
arrayByAddingObjectsFromArray:
initWithIndexes:length:
containsString:
shiftIndexesStartingAtIndex:by:
prependTokenColumns:prefixTopPath:
setChangeableTokenColumnCount:
offsetAllStrokeIndexesBy:
remapAllStrokeIndexesWithArray:
getCharIndex:
replacementErrorScoreForIntendedCharacter:actualCharacter:
transpositionErrorScoreForIntendedFirstCharacter:intendedSecondCharacter:
sharedSpellServer
newErrorModel
spellServer:findMisspelledWordInString:language:wordCount:countOnly:correction:
ch_sentenceStartPunctuationCharacterSet
rangeOfCharacterFromSet:options:
spellServer:suggestGuessesForWordRange:inString:language:options:
spellServer:suggestGuessDictionariesForWordRange:inString:language:options:errorModel:
isWordInUserDictionaries:caseSensitive:
topCorrectionForString:contextBeforeToken:contextSeparator:shouldUseErrorModel:forLanguage:
errorModel
setErrorModel:
_spellServer
_errorModel
T@"CHSpellCheckerErrorModel",&,N,V_errorModel
initWithCanvasHeatmap:stroke2ItemMapping:item2StrokeMapping:
clutterFilterByAddingStrokes:removingStrokeIdentifiers:affectedStrokeIdentifiers:
isHighDensityStroke:
highDensityStrokeCount
isEmpty
strokeIDsWithinRectangleRegion:
_heatMap
_CHStrokeID2HeatmapItemID
_heatmapItemID2CHStrokeID
normalizedDrawing:scaleFactor:interpolationDistance:outputPointMap:
_modelName
T@"NSString",R,N,V_modelName
initWithModelName:featureIndex:
classCounts
_resourcePath
_inputNames
_featureCounts
_outputNames
_classCounts
T@"CHSingletonMLModel",R,N,V_model
T@"NSString",R,N,V_resourcePath
T@"NSArray",R,N,V_inputNames
T@"NSDictionary",R,N,V_featureCounts
T@"NSArray",R,N,V_outputNames
T@"NSDictionary",R,N,V_classCounts
recognitionMaxStrokes
contextMaxStrokes
_getStringForConfigurationValues:numPoints:
maxInputWidth
maxPointsPerStroke
numInputFeatures
fillWithNumber:
sinAngleFeatureIndex
cosAngleFeatureIndex
modelDecoderSize
maxNumberOfInputStrokes
_classifyStrokesInDrawing:outTextStrokeProbabilities:cancellationBlock:
modelConfigurationsNumStrokes
minPointsPerStroke
modelConfigurationsNumPoints
normalizedDrawing:interpolationDistance:
getModelConfigurationForDrawing:outNumStrokes:outNumPoints:
_extractFeaturesFromDrawing:numStrokes:numPoints:error:
_extractInputMaskFromDrawing:numStrokes:numPoints:error:
_getPositionalEncodings:error:
numOutputClasses
textClassIndex
modelSmallestConfig
classifyStrokes:outTextStrokeProbabilities:cancellationBlock:
_modelConfigurationsNumStrokes
_modelConfigurationsNumPoints
_modelSmallestConfig
_numInputFeatures
_sinAngleFeatureIndex
_cosAngleFeatureIndex
_modelDecoderSize
_maxInputWidth
_minPointsPerStroke
_maxPointsPerStroke
_recognitionMaxStrokes
_contextMaxStrokes
_maxNumberOfInputStrokes
_numOutputClasses
_textClassIndex
T^v,R,N,V_model
T@"NSArray",R,N,V_modelConfigurationsNumStrokes
T@"NSArray",R,N,V_modelConfigurationsNumPoints
T@"NSString",R,N,V_modelSmallestConfig
Tq,R,N,V_numInputFeatures
Tq,R,N,V_sinAngleFeatureIndex
Tq,R,N,V_cosAngleFeatureIndex
Tq,R,N,V_modelDecoderSize
Tq,R,N,V_maxInputWidth
Tq,R,N,V_minPointsPerStroke
Tq,R,N,V_maxPointsPerStroke
Tq,R,N,V_recognitionMaxStrokes
Tq,R,N,V_contextMaxStrokes
Tq,R,N,V_maxNumberOfInputStrokes
Td,R,N,V_interpointDistance
Tq,R,N,V_numOutputClasses
Tq,R,N,V_textClassIndex
writingDirectionOrderedStrokes:substrokesByStrokeIdentifier:
_substrokeCountForStrokes:substrokesByStrokeIdentifier:
initWithStrokes:substrokesByStrokeIdentifier:splitIndex:
strokeGroup1
strokeGroup2
groupBounds1
groupBounds2
transitionTime
orderedStrokesGroup1
orderedStrokesGroup2
substrokeCount1
substrokeCount2
_strokeGroup1
_strokeGroup2
_transitionTime
_orderedStrokes
_orderedStrokesGroup1
_orderedStrokesGroup2
_substrokeCount1
_substrokeCount2
_groupBounds1
_groupBounds2
T@"NSArray",R,N,V_strokeGroup1
T@"NSArray",R,N,V_strokeGroup2
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_groupBounds1
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_groupBounds2
Td,R,N,V_transitionTime
T@"NSArray",R,N,V_orderedStrokes
T@"NSArray",R,N,V_orderedStrokesGroup1
T@"NSArray",R,N,V_orderedStrokesGroup2
Tq,R,N,V_substrokeCount1
Tq,R,N,V_substrokeCount2
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:orderedStrokeIdentifiers:
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:orderedStrokeIdentifiers:
shouldAdjustGroupingForLocale:
_estimateSplitScore:withTextInputTargets:arcLengthsByStrokeIdentifier:
_isSplitAcceptable:arcLengthsByStrokeIdentifier:outRejectionReason:
_strokeIdentifersFromStrokes:
_strokeGroupWithStrokes:orderedStrokeIdentifiers:previousGroups:shouldSearchForStableIdentifier:
isStroke:versionOfStrokeWithIdentifier:
isSubsetOfSet:
_accumulatedTimeDifferences:
_findMostProbableTextInputTarget:forGroupBounds:outOverlap:outDistance:
isFinished
_splitCostThreshold
_transitionTimeWeight
_transitionTimeUpperBound
_verticalDistanceWeight
_leftTransitionWeight
_leftTransitionUpperBound
_horizontalDistanceBarrier
_horizontalDistanceWeight
_aspectRatioWeight
_writingDirectionWeight
_writingDirectionUpperBound
_writingDirectionMinCoeff
_minLineHeightScore
_minArcLengthScore
_expectedSubstrokesPerLine
_minSubstrokesForSplit
_targetFitnessWeight
_reorderStrokes
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:startTimestamp:endTimestamp:
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:startTimestamp:endTimestamp:
_startTimestamp
_endTimestamp
Td,R,N,V_startTimestamp
Td,R,N,V_endTimestamp
_timeSortedStrokesForIdentifiers:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:isHighResponsivenessTask:strokeClassificationModel:strokeGroupingRequirement:partialResultBlock:
outputResult
_setStatus:
timeIntervalSinceReferenceDate
currentProgress
completedUnitCount
setCompletedUnitCount:
partialResultBlock
strokeGroupingRequirement
lineGroupingResultUsingStrokes:shouldCancel:
updatedStrokeClassificationResultByAddingStrokes:removingStrokeIdentifiers:clutterFilter:affectedClutterStrokeIDs:cancellationBlock:
strokeClassificationModel
refineStrokeClassificationResultUsingClassificationResult:strokeClassificationModel:sortedAddedStrokes:removedStrokeIdentifiers:cancellationBlock:
floatForKey:
sleepForTimeInterval:
_setOutputResult:
_logResultsIfAppropriateWithStrokeProvider:
setCancelled:
_isTransitionValidFromStatus:toStatus:
forceRecognitionStrokeGroupIdentifiers
progressWithTotalUnitCount:parent:pendingUnitCount:
totalUnitCount
_textRecognitionResultsForTextStrokeGroup:groupingManager:
_recognitionResultsForNonTextStrokeGroup:groupingManager:
strokeGroupingOnly
recognizerForLocale:
_recognizersQueue
maxRequestStrokeCountForLocale:
_tokenizedTextResultForDrawing:usingRecognizer:isRemoteRecognizer:locale:strokeLimit:recognitionError:
saveInputDrawings
updateMultiLocaleResultDictionary:locales:
textRecognitionResultForDrawing:options:error:
removeIndex:
transcriptionPathsForTokenizedTextResult:withHistory:scores:error:
sortDescriptorWithKey:ascending:comparator:
sortedArrayUsingDescriptors:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:isHighResponsivenessTask:strokeClassificationModel:strokeGroupingRequirement:subjectStrokeIdentifiers:partialResultBlock:
main
cancel
status
isHighResponsivenessTask
setSaveInputDrawings:
setForceRecognitionStrokeGroupIdentifiers:
setStrokeGroupingOnly:
subjectStrokeIdentifiers
setPartialResultBlock:
_cancelled
_isHighResponsivenessTask
_saveInputDrawings
_strokeGroupingOnly
_inputResult
_status
_recognitionLocales
_outputResult
_strokeGroupingRequirement
_forceRecognitionStrokeGroupIdentifiers
__recognizersQueue
_strokeClassificationModel
_subjectStrokeIdentifiers
_partialResultBlock
T@"CHRecognitionSessionResult",&,N,S_setOutputResult:,V_outputResult
Tq,N,S_setStatus:,V_status
T@"NSObject<OS_dispatch_queue>",R,N,V__recognizersQueue
T@"CHStrokeClassificationModel",R,N,V_strokeClassificationModel
T@"NSArray",R,N,V_subjectStrokeIdentifiers
TB,V_cancelled
T@?,C,N,V_partialResultBlock
T@"CHRecognitionSessionResult",R,N,V_inputResult
T@"<CHRecognitionSessionTaskDelegate>",N,V_delegate
T@"NSArray",R,C,N,V_recognitionLocales
Tq,R,N,V_strokeGroupingRequirement
TB,R,N,V_isHighResponsivenessTask
TB,N,V_saveInputDrawings
T@"NSSet",C,N,V_forceRecognitionStrokeGroupIdentifiers
TB,N,V_strokeGroupingOnly
swapMultiLocaleResults:locales:topLocaleIndex:resultHasSwap:resultTopLocale:
swappableColumnIndexesFromResults:locales:topLocaleIndex:
shouldPerformStrictCandidateFiltering:
combineMultiLocaleResults:locales:topLocaleIndex:mergedResultPostprocessingBlock:
q_textInputItemsFromSessionResult:
setTotalDuration:
_setAvailableItems:
sortDescriptorWithKey:ascending:
initWithIdentifier:stableIdentifier:strokeIdentifiers:correctionResult:
availableItems
setTextInputTargetsDataSource:
totalDuration
_availableItems
_textInputTargetsDataSource
_totalDuration
T@"NSArray",C,N,S_setAvailableItems:,V_availableItems
Td,N,V_totalDuration
T@"<CHTextInputQueryTargetDataSource>",W,V_textInputTargetsDataSource
correctionResult
itemIdentifier
itemStableIdentifier
resultType
isEqualToTextInputQueryItem:
_itemIdentifier
_itemStableIdentifier
_correctionResult
T@"NSNumber",R,N,V_itemIdentifier
T@"NSNumber",R,N,V_itemStableIdentifier
T@"CHTextCorrectionResult",R,N,V_correctionResult
initWithScannerType:passiveIntent:
setSpotlightSuggestionsEnabled:
_dataDetectorResultsForSessionResult:
initWithTextResults:
initWithStrokeIdentifiers:detectedResult:estimatedBaseline:
_enumerateDetectedRangesForContextualTextResults:usingBlock:
scanString:range:configuration:
urlificationRange
textResultToIndexMappingFromTopTranscriptionWithCharacterRange:intersectionRanges:
textResults
matchedString
_dataDetectorConfiguration
dataDetectorResult
type
category
isEqualToDataDetectorQueryItem:
estimatedBaseline
_estimatedBaseline
_dataDetectorResult
T@"DDScannerResult",R,N,V_dataDetectorResult
Tr^{CGPath=},R,N,V_estimatedBaseline
queryResult
initWithStrokeIdentifiers:queryResult:estimatedBaseline:
isEqualToPrefixQueryItem:
_queryResult
T@"NSString",R,N,V_queryResult
hashtagDelimiters
initWithRecognitionSession:prefix:validSuffixes:delimiters:
_normalizeSuffixes:
_prefixQueryResultsForSessionResult:
stringByFoldingWithOptions:locale:
_normalizeString:
_stringForTokens:
shouldRefinePrefixQueryMatchesForLocale:
_isTokenStringMatchingQuery:allowPartialMatching:
_queryResultForTokens:groupResult:candidateGroup:
prefix
hashtagQueryForRecognitionSession:
mentionQueryForRecognitionSession:
prefixQueryWithPrefix:forRecognitionSession:
validSuffixes
setValidSuffixes:
_validSuffixes
_queryDelimiters
_prefix
T@"NSString",R,C,N,V_prefix
T@"NSSet",C,N
initWithStrokeIdentifier:bounds:startTimestamp:endTimestamp:convexHull:curvature:
curvature
isEqualToSubstroke:
substrokesForStroke:
_convexHull
_curvature
Td,R,N,V_curvature
initWithSubstroke:
setWritingOrientation:
strokeDeviation
setStrokeDeviation:
originalWritingDirectionIndex
setOriginalWritingDirectionIndex:
coalescedCenter
setCoalescedCenter:
_substroke
_originalWritingDirectionIndex
_writingOrientation
_strokeDeviation
_coalescedCenter
T@"CHSubstroke",R,N,V_substroke
T{CGVector=dd},N,V_writingOrientation
T{CGVector=dd},N,V_strokeDeviation
Tq,N,V_originalWritingDirectionIndex
T{CGPoint=dd},N,V_coalescedCenter
initWithString:
mainBundle
localizedStringForKey:value:table:
_attributedStringFromString:withColor:font:paragraphStyle:
initWithAttributedString:
appendAttributedString:
initWithString:attributes:
_sutherlandHodgmanClipForSubjectPolygon:usingClipPolygon:
enumerateEdgesWithBlock:
vertexCount
vertices
_createClippedPolygonForPolygon:clippingLine:clippedPolygonVertexCount:
polygonDrawing
setArea:
_area
_vertexCount
_vertices
Td,N,V_area
Tq,R,N,V_vertexCount
T^{CGPoint=dd},R,N,V_vertices
setResultDrawn:
lastRecognitionResult
newGroupsDefaultToActive
_markStrokeGroupsAsActive:
visualizationNeedsDisplay:
visualization:needsDisplayInRect:
setActiveStrokeGroupAncestorIdentifiers:
_newGroupsDefaultToActive
_resultDrawn
_activeStrokeGroupAncestorIdentifiers
T@"CHRecognitionSessionResult",&,N,V_resultDrawn
T@"NSSet",C,N,V_activeStrokeGroupAncestorIdentifiers
T@"<CHStrokeGroupBasedVisualizationDelegate>",W,D,N
TB,R,N,V_newGroupsDefaultToActive
initWithMode:locales:activeCharacterSetPerLocale:recognizerOptions:
shouldUseStrokeReorderingForMode:
effectiveRecognitionLocales:recognitionMode:
defaultActiveCharacterSetForLocales:
initWithMachServiceName:options:
handleRecognitionRequest:withReply:
transcriptionPathsForTokenizedResult:recognitionRequest:withReply:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
_teardownXPCConnection
setInterruptionHandler:
setInvalidationHandler:
resume
invalidate
_recognitionRequestWithDrawing:options:
_recognitionResultForRequest:error:
synchronousRemoteObjectProxyWithErrorHandler:
_setupXPCConnectionIfNeeded
logDrawingsAndResultsForRequest:result:error:
dictionaryForKey:
isEqualToRemoteRecognizer:
drawingStrokeLimitForLocale:
newRemoteRecognizerWithMode:locales:
absoluteMaxStrokeCountPerRequest
_connection
_shouldUseStrokeReordering
__connection
T@"NSXPCConnection",R,N,V__connection
T@"NSDictionary",R,C,N,V_activeCharacterSetPerLocale
Ti,R,N,V_recognitionMode
TB,R,N,V_enableCachingIfAvailable
TB,R,N,V_enableGen2ModelIfAvailable
TB,R,N,V_enableGen2CharacterLMIfAvailable
defaultManager
contentsAtPath:
keysSortedByValueUsingComparator:
longLongValue
unregisterChangeObserver:
isEnabledVisualizationForIdentifier:
_enabledVisualizationIDs
_updateInstalledVisualizations
_activeVisualizationIDs
_updateSessionRegistration
statusReportingEnabled
_activeVisualizationsByID
availableVisualizationIdentifiers
_isActiveVisualizationForIdentifier:
_addVisualizationForIdentifier:
_removeVisualizationForIdentifier:
visualizationManagerNeedsDisplay:
_classForVisualizationIdentifier:
_registeredAsChangeObserver
registerChangeObserver:
set_registeredAsChangeObserver:
_registeredAsInputDrawingsClient
registerInputDrawingClient:
unregisterInputDrawingClient:
set_registeredAsInputDrawingsClient:
visualizationManager:needsDisplayInRect:
_strokeGroupIndexByAncestorID
_updateKnownStrokeGroupIndexes
visualizationManagerDidUpdateSessionStatus:
localizedNameForVisualizationIdentifier:
availableRecognitionSessionStatusKeys
localizedNameForRecognitionSessionStatusKey:
variableHeightForRecognitionSessionStatusKey:
recognitionSessionDidUpdateRecognitionResult:
preferredRecognitionResultUpdatesInterval
recognitionSessionDidChangeStatus:
setEnabled:forVisualizationIdentifier:
setStatusReportingEnabled:
valueForRecognitionStatusKey:
toggleSelectiveVisualizationsAtPoint:
_statusReportingEnabled
__registeredAsChangeObserver
__registeredAsInputDrawingsClient
__enabledVisualizationIDs
__activeVisualizationIDs
__activeVisualizationsByID
__strokeGroupIndexByAncestorID
T@"NSMutableSet",R,N,V__enabledVisualizationIDs
T@"NSMutableArray",R,N,V__activeVisualizationIDs
T@"NSMutableDictionary",R,N,V__activeVisualizationsByID
T@"NSMutableDictionary",R,N,V__strokeGroupIndexByAncestorID
TB,N,V__registeredAsChangeObserver
TB,N,V__registeredAsInputDrawingsClient
T@"<CHVisualizationManagerDelegate>",N,V_delegate
TB,N,V_statusReportingEnabled
contextualTextResultsForContextStrokes:completion:shouldCancel:
distantPast
_queryActive
set_queryActive:
_updateForRecognitionSessionResultChangeIfNeeded
waitForPendingRecognitionTasks
preferredUpdatesInterval
start
waitForPendingUpdates
lastProcessedStrokeProviderVersion
setLastProcessedStrokeProviderVersion:
_processingQueue
_currentProcessingSessionResult
_lastProcessedTime
__queryActive
_lastProcessedStrokeProviderVersion
_preferredUpdatesInterval
TB,N,V__queryActive
T@"<CHStrokeProviderVersion>",C,V_lastProcessedStrokeProviderVersion
T@"<CHQueryDelegate>",W,N,V_delegate
Td,N,V_preferredUpdatesInterval
queryDidUpdateResult:
T@"NSObject<OS_dispatch_queue>",R,N
setStrokeGroup:
terminatingSpecialCharacter
setTerminatingSpecialCharacter:
_terminatingSpecialCharacter
T@"CHTokenizedTextResult",&,N,V_textResult
T@"CHStrokeGroup",&,N,V_strokeGroup
T@"NSString",&,N,V_terminatingSpecialCharacter
setTextResults:
T@"NSArray",&,N,V_textResults
deleteCharactersInRange:
writeToURL:atomically:encoding:error:
stringWithContentsOfFile:encoding:error:
systemFontOfSize:
whiteColor
sizeWithAttributes:
drawInRect:withAttributes:
CGImage
countSubstringsWithOptions:
numCharacters
majorityScriptId
meanRotationCorrectionAngle
becomeCurrentWithPendingUnitCount:
initWithArray:
fontTransferTransformForLineAtIndex:progress:shouldCancel:
handleRemainingStrokes:contextStrokeGroups:transformations:groupBounds:
textStrokePointTransformationFromAffineTransformation:
timeIntervalSinceNow
createTelemetryDictionary:nonTextRatio:
strokeAttributes
fontTransferForDrawing:transcription:shouldCancel:
initWithContextStrokes:contextResults:strokeGroupingResult:strokeClassificationResult:strokeProvider:
straightenWithProgress:shouldCancel:
contextStrokes
setContextStrokes:
contextResults
setContextResults:
setStrokeProvider:
setStrokeGroupingResult:
setStrokeClassificationResult:
correctionAngles
setCorrectionAngles:
_originalBoundingBoxes
_transformedBoundingBoxes
_contextStrokes
_contextResults
_correctionAngles
T@"NSArray",&,V_contextStrokes
T@"NSArray",&,V_contextResults
T@"<CHStrokeProvider>",&,V_strokeProvider
T@"CHStrokeGroupingResult",&,V_strokeGroupingResult
T@"CHStrokeClassificationResult",&,V_strokeClassificationResult
T@"NSMutableArray",&,V_correctionAngles
obfuscateString:
_isInappropriateString:withLexicon:
_isInappropriateString:withTrie:
_isInappropriateTokenID:withLexicon:
initWithTrie:staticLexicon:customLexicon:flags:stringNormalizationFunction:
_ovsTrie
_flagsFilter
_stringNormalizationFunction
affectedRange
isCharacterLevel
initWithInputTarget:affectedRange:textResult:resultType:isCharacterLevel:error:
isEqualToTextCorrectionResult:
_characterLevel
_inputTarget
_resultType
_error
_affectedRange
T@"CHTextInputTarget",R,N,V_inputTarget
T{_NSRange=QQ},R,N,V_affectedRange
T@"CHTokenizedTextResult",R,N,V_textResult
Tq,R,N,V_resultType
characterLevel
TB,R,N,GisCharacterLevel,V_characterLevel
T@"NSError",R,N,V_error
_decodeLocale:supportedLanguage:supportedScript:
_stringForRecognitionLanguage:
_stringForRecognitionScript:
supportedScriptForLocale:
supportedLanguageForLocale:
isLanguageSupported:withMode:
forcedGen2ModelLocaleForLocale:
recognitionEngineCachingKeyForRecognitionLocale:
defaultActiveCharacterSetForLocale:
shouldRunNextGenCharacterLM
effectiveEngineLanguage
shouldTransliterateHalfWidthPunctuations
shouldApplySemanticTokenization
shouldIdentifyChangeableColumns
shouldMarkNoWhiteSpaceColumnsChangeable
shouldAutoCorrect
isTextMode
linguisticResourcesFallbackLocale
dictionaryWithDictionary:
loadWordLanguageModelFromOptions:fallbackLocale:
unsafeForSpellCorrection
URLWithString:
checkResourceIsReachableAndReturnError:
requiredInappropriateFilteringFlags
lexiconStringNormalizationFunction
initWithFile:
shouldRemoveSpacesFromStrongURLs
initWithPatternFst:
shouldRunLexiconCorrectionPostProcessingStep
initWithLocale:
shouldReorderSCTCConfusion
initWithMaxResultCount:
initWithMecabra:wordLanguageModel:ovsStringChecker:promoteKanaConversion:
initWithWordLanguageModel:ovsStringChecker:
shouldTransliterateConfusableCharacters
initWithStaticLexicon:customLexicon:locale:
shouldRemoveSpacesFromEnglishAndKoreanParticles
initWithAutoCapitalizationMode:shouldAutoCorrect:shouldAutoCapitalize:locale:staticLexicon:customLexicon:phraseLexicon:customPhraseLexicon:spellChecker:lmVocabulary:ovsStringChecker:textReplacements:
shouldAddAlternativeWidthCandidates
initWithShouldAddAlternatives:
shouldTransliterateForChineseJapaneseLigatures
initWithTransliterateSentences:
shouldRefineCandidates
initWithShouldKeepOutOfPatternCandidates:shouldKeepDuplicateTokenIDs:shouldKeepOutOfLexiconAlternatives:shouldKeepAlternativeLengths:shouldKeepSubstrings:shouldKeepOriginalSpelling:
shouldMarkMultiWordOVS
initWithOVSStringChecker:
shouldRemoveSpacesFromHashtagsAndMentions
initWithSequence:
initWithPatternFst:patternType:capitalizationToSplit:convertToLowercase:
initForPhoneNumberFields
initForDigitFields
initProcessorDefault:processorDigits:processorPhone:processorUsername:processorEmail:processorURL:processorASCII:processorEquation:
initWithStep:
shouldRecoverCyrillicCandidates
languageResourceBundleWithStaticLexicon:customLexicon:wordLanguageModel:
initWithLanguageResourceBundle:
defaultCommitActionBehaviorForLocale:
decodingLexiconWeight
decodingLexiconLowerBoundLogProbability
initWithLexicon:priority:
initWithLexicons:decodingWeight:lowerBoundLogProbability:inputNormalizationFunction:
decodingCharacterLMWeight
characterLMLowerBoundLogProbability
initWithCVNLPLanguageModel:locale:decodingWeight:lowerBoundLogProbability:
shouldAllowNGramCharacterLM
initWithLMLanguageModel:locale:decodingWeight:lowerBoundLogProbability:
decodingWordLMWeight
decodingWordLMLowerBoundLogProbability
initWithLexicons:characterLanguageModel:wordLanguageModel:
modelNameKorean
modelNameThai
modelNameCyrillic
ch_basicClosingParenthesesSet
ch_thaiExtraSpaceAfterSymbolsSet
ch_basicOpeningParenthesesSet
ch_thaiMathSymbolsNeedingSpaceSet
ch_neutralQuotationMarkSet
countForObject:
overridenParameterValueForKey:defaultValue:
isSupportedLatinScriptLocale:withMode:
shouldForceNoAlternativeRecognitionCandidates:
swappableColumnIndexesFromResults:locales:
spellCheckingLocaleForRecognitionLocale:string:
shouldAdjustGroupingHeuristicsForVeryComplexCharacters:
shouldInsertSpaceBetweenPreviousChar:andNextChar:inLocale:inString:atRange:withQuoteCount:
shouldAllowSpaceInsertionGestureForLocale:
shouldAddSpaceToNeutralQuotationMarks:
shouldTransliterateFrenchLigatures
shouldPreserveLegacyTranscriptionPaths
_language
_script
_mode
_contentTypeForNoSpaceRecognition
Ti,R,N,V_mode
T@"NSLocale",R,C,N,V_locale
Ti,R,N,V_contentTypeForNoSpaceRecognition
expectedMaxStrokeCount:
_strokeProviderDrawn
set_strokeProviderDrawn:
__strokeProviderDrawn
T@"<CHStrokeProvider>",&,N,V__strokeProviderDrawn
initWithSessionVersion:sessionResultVersion:
isValidSessionVersion
isValidSessionResultVersion
sessionVersion
sessionResultVersion
_sessionVersion
_sessionResultVersion
Tq,R,N,V_sessionVersion
Tq,R,N,V_sessionResultVersion
_setupExecutionQueuesForMode:
initWithMode:
setDataSource:
strokeProviderSnapshot
_setLatestStrokeProvider:
_updateLatestStrokeProviderVisibleStrokes
_invalidateCachedResults
_sessionQueue
effectiveLocalesFromLocales:
_setTextRecognitionLocales:
_cleanupCachedRecognizers
_isReadyToProcessChanges
rebuildRecognitionResults
setNeedsRecognitionUpdate
setPreferredLocales:
isEqualToData:
_notifyObserversWithBlock:
visibleStrokeEncodedIdentifiers
_setCachedFastGroupingRecognitionResult:
_setPartialRecognitionResult:
_hasPendingRecognitionTasks
_hasUnprocessedChanges
_changeObservers
nonretainedObjectValue
_activeTasks
indexableContent
dataSource
_setLatestTextInputTargets:
_setHasUnprocessedChanges:
_scheduleProcessStrokeProviderChangesImmediately:
_updateRecognitionSessionStatus
_cancelOngoingRequests
_changeCoalescingIndex
set_changeCoalescingIndex:
_setLastRecognitionResult:
_processPendingStrokeChangesIfAvailable
_preferredCoalescingInterval
_newRecognitionSessionTaskWithStrokeGroupingRequirement:isHighResponsivenessTask:strokeGroupingOnly:subjectStrokeIdentifiers:partialResultBlock:
_tasksWorkQueue
_inputDrawingClients
_recognizersByLocaleID
shouldRunRecognitionLocallyWithEnvironment:
createRecognizerForLocale:sessionMode:remote:priority:
_cacheKeyForLocales:
_correctionRecognizersByLocalesKey
isRemoteRecognition
initWithLocales:remoteRecognition:priority:
data
initWithMode:withVersion:
setRecognitionEnvironment:
_setSessionVersion:
isLocaleSupported:
initWithMode:recognitionSessionResult:dataSource:
_validateLastRecognitionResult:visibleStrokeIdentifiers:
_cachedFastGroupingResult
_cachedClutterFilter
cancelOngoingRequests
_cancelAllHighResponsivenessTasks
sessionData
loadSessionData:error:
_textRecognitionLocales
_latestTextInputTargets
_highResponsivenessQueue
_taskQueueQoSClass
_shouldForceFastGrouping
_setShouldForceFastGrouping:
_lastRecognitionResult
_latestStrokeProvider
_latestStrokeProviderVisibleStrokes
_cachedFastGroupingRecognitionResult
_partialRecognitionResult
__hasUnprocessedChanges
__shouldForceFastGrouping
__taskQueueQoSClass
_dataSource
__textRecognitionLocales
__recognizersByLocaleID
__latestTextInputTargets
__correctionRecognizersByLocalesKey
__changeCoalescingIndex
__changeObservers
__inputDrawingClients
__tasksWorkQueue
__sessionQueue
__highResponsivenessQueue
__activeTasks
T@"NSArray",C,N,S_setTextRecognitionLocales:,V__textRecognitionLocales
T@"CHRecognitionSessionResult",&,S_setLastRecognitionResult:
Tq,N,S_setStatus:
T@"<CHStrokeProvider>",&,S_setLatestStrokeProvider:
T@"CHRecognitionSessionVersion",&,S_setSessionVersion:
TB,N,S_setHasUnprocessedChanges:,V__hasUnprocessedChanges
T@"NSMutableDictionary",R,N,V__recognizersByLocaleID
T@"NSArray",&,S_setLatestTextInputTargets:,V__latestTextInputTargets
T@"NSMutableDictionary",R,N,V__correctionRecognizersByLocalesKey
TQ,N,V__changeCoalescingIndex
T@"NSMutableArray",R,N,V__changeObservers
T@"NSMutableArray",R,N,V__inputDrawingClients
T@"NSObject<OS_dispatch_queue>",R,N,V__tasksWorkQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__sessionQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__highResponsivenessQueue
TI,R,N,V__taskQueueQoSClass
T@"NSMutableArray",R,N,V__activeTasks
TB,S_setShouldForceFastGrouping:,V__shouldForceFastGrouping
Tq,R,N,V_mode
T@"NSArray",C,N,V_preferredLocales
T@"NSArray",C,N
T@"<CHRecognitionSessionDataSource>",N,V_dataSource
Tq,N,V_recognitionEnvironment
T@"NSData",R,N
createRecognizerForLocales:sessionMode:remote:priority:
valueWithNonretainedObject:
recognizableDrawingForStrokeGroupQueryItem:
progressWithTotalUnitCount:
_strokeIdentifiersFromCachedResultUsingContextStrokes:tokenizationLevel:
shouldForceFastGrouping
orderedSetWithArray:
groupingResultForContextStrokes:clusteredStrokes:fastGroupingResult:point:tokenizationLevel:
strokeIdentifiersInProximalGroupsForStrokeIdentifiers:sortedStrokeGroups:clusteredStrokeGroups:unusedStrokeIdentifiers:
setWithSet:
_strokeGroupsInProximityOfSubjectStrokeGroups:clusteredStrokeGroups:
_strokeGroupsContainingStrokeIdentifiers:
clustersForStrokes:shouldMakeSingleCluster:
fastGroupingResultWithFastGroupingClusters:clusteredStrokes:
_strokeIdentifiersInWordsContainingStrokeIdentifiers:
_strokeIdentifiersInGroupsContainingStrokeIdentifiers:
_strokeIdentifiersInProximalGroupsForStrokeIdentifiers:
_drawingCanvasSizeForLatestStrokeProviderSnapshot
_recognitionSessionResultOnDemandUsingContextStrokes:shouldCancel:
_contextualTextResultsFromCachedResultUsingContextStrokes:shouldCancel:
_contextResultForContextStrokes:outStrokeGroupingResult:outStrokeClassificationResult:shouldCancel:
resignCurrent
date
setValue:forKey:
drawingCanvasSize
setShouldForceFastGrouping:
lastRecognitionResultWaitingForPendingTasks
T@"CHRecognitionSessionVersion",R
T@"CHRecognitionSessionResult",R
T@"<CHStrokeProvider>",R
T@"CHTextInputQuery",W,N
_verticalBarGestureCloseToTextForDrawing:originalDrawing:targetContentInfo:localTypedContextBounds:
_gestureOnBlankAreaResultForDrawing:originalDrawing:targetContentInfo:
_editingGestureResultForDrawing:originalDrawing:lastStroke:targetContentInfo:previousResult:
_refinedGestureResultForPreviousResult:originalDrawing:lastStroke:targetContentInfo:
_textInsertionResultForDrawing:targetContentInfo:originalDrawing:localTypedContextBounds:normalizedDrawingScaleFactor:insertionRange:
_cornerDetector
_textBeforeStringForTargetContentInfo:insertionRange:
_precedingLineBreakCountForAutoLineBreak:targetContentInfo:
_precedingSpaceBehaviorFromTargetContentInfo:drawingBounds:localTypedContextBounds:insertionRange:lastCharacterBefore:
_textAfterStringForTargetContentInfo:insertionRange:
_textRecognizer
_modifiedTextResult:replacingString:
_improvedSingleCharacterOneColumnTextResult:targetContentInfo:insertionRange:locale:affectedRange:
_verticalBarGestureOnBlankAreaResultForDrawing:originalDrawing:targetContentInfo:
_isInNoSpaceRegionNextToTextFromTargetContentInfo:drawingBounds:localTypedContextBounds:insertionRange:outIsWhiteSpace:outDistance:outSpaceDistanceThreshold:
hasSuffix:
_relativeRangeOfPreviousCharacterFromTargetContentInfo:absoluteInsertionRange:
_shapeRecognizer
_isRemoteRecognition
__textRecognizer
__shapeRecognizer
__cornerDetector
T@"<CHRecognizing>",R,N,V__textRecognizer
T@"CHRecognizer",R,N,V__shapeRecognizer
T@"CHCornerDetector",R,N,V__cornerDetector
TB,R,N,V_isRemoteRecognition
sharedCharacterSetRules
_charSetRulesQueue
_expectedMaxStrokeCount:
_expectedMinStrokeCount:
_expectedMaxDotCount:
_characterType:
lowercaseCharSet
setLowercaseCharSet:
uppercaseCharSet
setUppercaseCharSet:
digitCharSet
setDigitCharSet:
startPunctuationCharSet
setStartPunctuationCharSet:
middlePunctuationCharSet
setMiddlePunctuationCharSet:
endOfWordPunctuationCharSet
setEndOfWordPunctuationCharSet:
endOfSentencePunctuationCharSet
setEndOfSentencePunctuationCharSet:
digitStartPunctuationCharSet
setDigitStartPunctuationCharSet:
digitEndPunctuationCharSet
setDigitEndPunctuationCharSet:
arithmeticOperatorCharSet
setArithmeticOperatorCharSet:
dateTimeSeparatorCharSet
setDateTimeSeparatorCharSet:
dateTimeEndLetterCharSet
setDateTimeEndLetterCharSet:
numeralEndLetterCharSet
setNumeralEndLetterCharSet:
lexiconSkipCharSet
setLexiconSkipCharSet:
containsDotCharSet
setContainsDotCharSet:
containsTwoDotsCharSet
setContainsTwoDotsCharSet:
prefixCapitalizationExceptionCharSet
setPrefixCapitalizationExceptionCharSet:
selfLoopPunctuationCharSet
setSelfLoopPunctuationCharSet:
emoticonTopCharSet
setEmoticonTopCharSet:
emoticonMiddleCharSet
setEmoticonMiddleCharSet:
emoticonBottomCharSet
setEmoticonBottomCharSet:
emailAtCharSet
setEmailAtCharSet:
emailPunctuationCharSet
setEmailPunctuationCharSet:
urlPunctuationCharSet
setUrlPunctuationCharSet:
nonSpaceSeparatorCharSet
setNonSpaceSeparatorCharSet:
punctuationThatNeedSpaceCleanup
setPunctuationThatNeedSpaceCleanup:
currencySymbols
setCurrencySymbols:
symbolsRequiringSpaceBeforeInFrench
setSymbolsRequiringSpaceBeforeInFrench:
sentenceStartPunctuationInSpanish
setSentenceStartPunctuationInSpanish:
commonJapaneseSymbols
setCommonJapaneseSymbols:
CJKPairedPunctuationsCharSet
setCJKPairedPunctuationsCharSet:
alphaNumericCharSet
setAlphaNumericCharSet:
strokeMaxPenalties
setStrokeMaxPenalties:
signatureUniChar
setSignatureUniChar:
_lowercaseCharSet
_uppercaseCharSet
_digitCharSet
_startPunctuationCharSet
_middlePunctuationCharSet
_endOfWordPunctuationCharSet
_endOfSentencePunctuationCharSet
_digitStartPunctuationCharSet
_digitEndPunctuationCharSet
_arithmeticOperatorCharSet
_dateTimeSeparatorCharSet
_dateTimeEndLetterCharSet
_numeralEndLetterCharSet
_lexiconSkipCharSet
_containsDotCharSet
_containsTwoDotsCharSet
_prefixCapitalizationExceptionCharSet
_selfLoopPunctuationCharSet
_emoticonTopCharSet
_emoticonMiddleCharSet
_emoticonBottomCharSet
_emailAtCharSet
_emailPunctuationCharSet
_urlPunctuationCharSet
_nonSpaceSeparatorCharSet
_punctuationThatNeedSpaceCleanup
_currencySymbols
_symbolsRequiringSpaceBeforeInFrench
_sentenceStartPunctuationInSpanish
_commonJapaneseSymbols
_CJKPairedPunctuationsCharSet
_alphaNumericCharSet
__charSetRulesQueue
_strokeMaxPenalties
_signatureUniChar
T@"NSCharacterSet",&,N,V_lowercaseCharSet
T@"NSCharacterSet",&,N,V_uppercaseCharSet
T@"NSCharacterSet",&,N,V_digitCharSet
T@"NSCharacterSet",&,N,V_startPunctuationCharSet
T@"NSCharacterSet",&,N,V_middlePunctuationCharSet
T@"NSCharacterSet",&,N,V_endOfWordPunctuationCharSet
T@"NSCharacterSet",&,N,V_endOfSentencePunctuationCharSet
T@"NSCharacterSet",&,N,V_digitStartPunctuationCharSet
T@"NSCharacterSet",&,N,V_digitEndPunctuationCharSet
T@"NSCharacterSet",&,N,V_arithmeticOperatorCharSet
T@"NSCharacterSet",&,N,V_dateTimeSeparatorCharSet
T@"NSCharacterSet",&,N,V_dateTimeEndLetterCharSet
T@"NSCharacterSet",&,N,V_numeralEndLetterCharSet
T@"NSCharacterSet",&,N,V_lexiconSkipCharSet
T@"NSCharacterSet",&,N,V_containsDotCharSet
T@"NSCharacterSet",&,N,V_containsTwoDotsCharSet
T@"NSCharacterSet",&,N,V_prefixCapitalizationExceptionCharSet
T@"NSCharacterSet",&,N,V_selfLoopPunctuationCharSet
T@"NSCharacterSet",&,N,V_emoticonTopCharSet
T@"NSCharacterSet",&,N,V_emoticonMiddleCharSet
T@"NSCharacterSet",&,N,V_emoticonBottomCharSet
T@"NSCharacterSet",&,N,V_emailAtCharSet
T@"NSCharacterSet",&,N,V_emailPunctuationCharSet
T@"NSCharacterSet",&,N,V_urlPunctuationCharSet
T@"NSCharacterSet",&,N,V_nonSpaceSeparatorCharSet
T@"NSCharacterSet",&,N,V_punctuationThatNeedSpaceCleanup
T@"NSCharacterSet",&,N,V_currencySymbols
T@"NSCharacterSet",&,N,V_symbolsRequiringSpaceBeforeInFrench
T@"NSCharacterSet",&,N,V_sentenceStartPunctuationInSpanish
T@"NSCharacterSet",&,N,V_commonJapaneseSymbols
T@"NSCharacterSet",&,N,V_CJKPairedPunctuationsCharSet
T@"NSCharacterSet",&,N,V_alphaNumericCharSet
T{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}},N,V_strokeMaxPenalties
T{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}},N,V_signatureUniChar
T@"NSObject<OS_dispatch_queue>",R,N,V__charSetRulesQueue
substrokePlacementsByStrokeIdentifier
initWithDictionary:copyItems:
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:substrokePlacementsByStrokeIdentifier:
_substrokePlacementsByStrokeIdentifier
T@"NSDictionary",R,N,V_substrokePlacementsByStrokeIdentifier
_updateGroups:createdGroups:deletedGroups:forAddedStroke:substrokePlacementsByStrokeIdentifier:reusableIDRemovedGroups:trySplit:cancellationBlock:
mergeGroupsPostProcessing:createdGroups:deletedGroups:
_applyDefaultGroupingParameters
_applyStrictGroupingParameters
_getMergingLowerBoundCost:withStrokeBounds:toLineGroup:
getMergingEndOfLineCost:mergingEndOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:
compareDistanceInWritingSequenceOfStroke:andStroke:toReferenceStroke:
getMergingMiddleOfLineCost:mergingMiddleOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:
_textLineStrokeGroupByAddingStroke:withSubstrokePlacements:intoStrokeGroup:mergingEndSubgroup:bestStrokeMergeEnd:
tryRegroupingStrokesInGroup:substrokePlacementsByStrokeIdentifier:cancellationBlock:
_newTextLineStrokeGroupWithStroke:withSubstrokePlacements:reusableIDRemovedGroups:
estimateWritingDirectionAndSortSubstrokesAccordingly:averageWritingOrientation:averageStrokeDeviation:
_writingDirectionSortedStrokeIdentifiersFromSubstrokes:localWritingOrientations:
_lastSubstrokeCoalescedWithOverlappingSubstrokes:strokeDeviation:
_strokeGroupConfidenceForSortedSubstrokes:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:averageWritingOrientation:averageStrokeDeviation:
_normalizedBoundsForWritingDirectionSortedStrokes:strokeWritingOrientations:firstStrokeDeviation:originalDrawing:rotatedSortedStrokes:
_scaleFactorForBoundsHeight:
_getMergingEndOfLineCost:mergingEndOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:refSubstrokeIndex:
clippedWritingOrientation:
_averageVectorFromCoalescedSubstrokes:toSubstroke:withOrientation:strokeRef:strokeDest:
updateLocalWritingOrientationsForSubstrokes:useCoalescedCenter:
sortSubstrokesByWritingDirection:averageWritingOrientation:
refineLocalWritingOrientationsForSubstrokes:useCoalescedCenter:
initWithArray:copyItems:
refineWritingOrientationAndResortSubstrokes:averageWritingOrientation:
updateLocalStrokeDeviationsForSubstrokes:averageStrokeDeviation:
smoothLocalWritingOrientations:
flippedCenters:ofSubstrokes:maxStrokesGap:begnning:
_averageAngleAndReliabilityForStrokeGroup:
_boundingBoxesOfStrokesInGroup:rotatedAroundPoint:byAngle:
_verticalOffsetForBoundsHeight:andScaleFactor:
_defaultOrientationVector
_defaultDeviationVector
_strokeDeviationCapCoeff
_groupingMergingCostThresh
_groupingMergingEndCostLowThresh
_groupingSimilarCostThresh
_groupingContextSize
_mergeEndDxCostCoeff
_mergeEndDyCostCoeff
_mergeEndBelowModifier
_mergeEndLeftModifier
_mergeMiddleDxCostCoeff
_mergeMiddleDyCostCoeff
_mergeMiddleBelowModifier
_splitMinimumStrokeCount
_splitMaxNaturalIndexDiffThreshold
_shouldLimitDefaultWritingOrientationDeviation
_shouldAdjustDeviationOfSmallGroups
_shouldCoalesceLastSubstrokes
initWithCapacity:
updateNonTextCandidatesByRemovingSupportFromStrokeIdentifier:skippingCandidatesWithStrokeIdentifier:
nonTextCandidateForStroke:withSubstrokes:
updateByRemovingStrokeIdentifier:withRemovedAndClutterStrokeIDs:
updateByTransitionedClutterStrokeIdentifier:withRemovedAndClutterStrokeIDs:
updateByAddingNonClutterStroke:withAllStrokes:forceText:
updateByAddingNonClutterStroke:withClassification:
updateByAddingClutterStroke:
strokeClassificationLastResult
textOnly
changeableClassificationByRefinement:stroke:
_tileIndexForYPosition:tileHeight:
containerSupportForPoints:withBounds:
_textOnly
_strokeClassificationLastResult
T@"CHStrokeClassificationResult",R,N,V_strokeClassificationLastResult
TB,R,N,V_textOnly
setActivations:
unlikelyHasLatinContents
_unlikelyHasLatinContents
_activations
T@"CVNLPActivationMatrix",&,N,V_activations
TB,N,V_unlikelyHasLatinContents
initWithFastGroupingClusters:clusteredStrokes:strokeProvider:strategyIdentifier:clutterFilter:
_agglomerativeClusteringUsingInitialClusters:distanceMetric:maxDistanceThreshold:shouldCancel:
_maxDistanceThresholdForTokenizationLevel:
_filterClusters:usingContextStrokes:clusteredStrokes:
_wordClustersForInitialClusters:
_strokeIdentifiersForContextStrokes:clusters:clusteredStrokes:tokenizationLevel:fastGroupingResult:
_labelBoundsForAnchorPoint:
_newBaselinePathForStrokeGroup:outFirstPoint:strokeProvider:
_getOrientedBounds:length:forStroke:atWritingDirectionIndex:inGroup:
_orientationTransformForStrokeBounds:atWritingDirectionIndex:inGroup:
initWithIndexableTextRepresentation:presentableTextRepresentation:
_setIndexableContent:
_indexableContent
T@"CHRecognitionSessionIndexableContent",&,S_setIndexableContent:,V_indexableContent
indexableTextRepresentation
presentableTextRepresentation
_indexableTextRepresentation
_presentableTextRepresentation
T@"NSString",R,C,N,V_indexableTextRepresentation
T@"NSString",R,C,N,V_presentableTextRepresentation
_strokeGroupsFromFastGroupingClusters:clusteredStrokes:strokeProvider:strategyIdentifier:clutterFilter:
_strokeGroupFromSortedStrokeIdentifiers:strokeProvider:strategyIdentifier:
_strokeGroupFromFastGroupingCluster:strokeProvider:strategyIdentifier:
_fastGroupingClusters
T{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}},R,N,V_fastGroupingClusters
nodeIndexCount
nodeIndexAtPosition:
stateType
addNodeIndex:withStateType:
cursorByAddingNodeIndex:toCursor:
setStateType:
_nodeIndexes
_stateType
TQ,N,V_stateType
newCursorByAdvancingCursor:withSymbol:
stateTypeForNodeIndex:
patternToSymbolMap
scanHexInt:
contentTypesToPatternsMapping
isString:fullPattern:inNetwork:
_network
_symbols
_startNodes
_startCursorForContentTypes
ch_emptyCharacterSet
isSupersetOfSet:
initWithConfusion:correction:locales:leftContext:rightContext:requiresLexiconMatch:
meetsContextRequirementWithLeftContext:rightContext:
isValidForLocale:
confusion
correction
requiredLeftContext
requiredRightContext
requiresLexiconMatch
_requiresLexiconMatch
_confusion
_correction
_requiredLeftContext
_requiredRightContext
T@"NSString",R,C,N,V_confusion
T@"NSString",R,C,N,V_correction
T@"NSCharacterSet",R,N,V_requiredLeftContext
T@"NSCharacterSet",R,N,V_requiredRightContext
TB,R,N,V_requiresLexiconMatch
_mecabra
T^{__Mecabra=},R,V_mecabra
leftContext
setLeftContext:
setResult:
_leftContext
_result
T@"NSString",&,N,V_leftContext
T@"CHMutableTokenizedTextResult",&,N,V_result
initWithObjects:
sequence
modifiesOriginalTokens
setSequence:
_sequence
T@"NSArray",&,N,V_sequence
applyTransform:toAllTokens:
expandPathsWithCorrectedTokens:fromTokens:correctedTokenPath:originalTokenPath:
shouldAdjustColumnsFromPostprocessingStepOptions:
defaultProcessor
process:withProcessor:options:
digitProcessor
phoneProcessor
usernameProcessor
emailProcessor
urlProcessor
asciiProcessor
equationProcessor
setDefaultProcessor:
setDigitProcessor:
setPhoneProcessor:
setUsernameProcessor:
setEmailProcessor:
setUrlProcessor:
setAsciiProcessor:
setEquationProcessor:
_defaultProcessor
_digitProcessor
_phoneProcessor
_usernameProcessor
_emailProcessor
_urlProcessor
_asciiProcessor
_equationProcessor
T@"CHPostProcessingManager",&,N,V_defaultProcessor
T@"CHPostProcessingManager",&,N,V_digitProcessor
T@"CHPostProcessingManager",&,N,V_phoneProcessor
T@"CHPostProcessingManager",&,N,V_usernameProcessor
T@"CHPostProcessingManager",&,N,V_emailProcessor
T@"CHPostProcessingManager",&,N,V_urlProcessor
T@"CHPostProcessingManager",&,N,V_asciiProcessor
T@"CHPostProcessingManager",&,N,V_equationProcessor
isAbbreviation
getSpellCorrectedToken:contextBeforeToken:
applyLexiconCorrections:shouldCapitalizeWord:shouldSkipEntryCorrection:outBestTokenIndex:bestLexiconTokenScore:textReplacements:contextBeforeToken:allowSpellChecker:
createPseudoTokensFromToken:
applyCorrectionsOnSingleToken:isFirstToken:contextBeforeToken:shouldCapitalizeGivenHistory:textReplacements:isSingleIsolatedCharacter:allowSpellChecker:
validatedTokenForCorrectedToken:rawToken:
applyCorrectionsAcrossToken:isFirstToken:contextBeforeToken:shouldCapitalizeGivenHistory:textReplacements:isSingleIsolatedCharacter:
setShouldAutoCapitalize:
setShouldAutoCorrect:
consumableStrokesCharSet
setConsumableStrokesCharSet:
fullWidthPunctuationThatExpectsUppercaseAfter
setFullWidthPunctuationThatExpectsUppercaseAfter:
punctuationThatExpectsUppercaseAfter
setPunctuationThatExpectsUppercaseAfter:
_shouldAutoCapitalize
_shouldAutoCorrect
_consumableStrokesCharSet
_fullWidthPunctuationThatExpectsUppercaseAfter
_punctuationThatExpectsUppercaseAfter
TB,N,V_shouldAutoCapitalize
T@"NSLocale",&,N,V_locale
Tr^{_LXLexicon=},N,V_staticLexicon
Tr^{_LXLexicon=},N,V_customLexicon
Tr^{_LXLexicon=},N,V_phraseLexicon
Tr^{_LXLexicon=},N,V_customPhraseLexicon
TB,N,V_shouldAutoCorrect
T@"NSCharacterSet",&,N,V_consumableStrokesCharSet
T@"NSCharacterSet",&,N,V_fullWidthPunctuationThatExpectsUppercaseAfter
T@"NSCharacterSet",&,N,V_punctuationThatExpectsUppercaseAfter
removeCharactersInString:
addCharactersInString:
shouldAddAlternatives
setShouldAddAlternatives:
contextInvariantCharacterSet
setContextInvariantCharacterSet:
forwardLookingCharacterSet
setForwardLookingCharacterSet:
backwardLookingCharacterSet
setBackwardLookingCharacterSet:
widthAlternativeCharacterSet
setWidthAlternativeCharacterSet:
_shouldAddAlternatives
_contextInvariantCharacterSet
_forwardLookingCharacterSet
_backwardLookingCharacterSet
_widthAlternativeCharacterSet
TB,N,V_shouldAddAlternatives
T@"NSCharacterSet",&,N,V_contextInvariantCharacterSet
T@"NSCharacterSet",&,N,V_forwardLookingCharacterSet
T@"NSCharacterSet",&,N,V_backwardLookingCharacterSet
T@"NSCharacterSet",&,N,V_widthAlternativeCharacterSet
openingBracketCharacters
setOpeningBracketCharacters:
closingBracketCharacters
setClosingBracketCharacters:
openingQuoteCharacters
setOpeningQuoteCharacters:
closingQuoteCharacters
setClosingQuoteCharacters:
symmetricQuoteCharacters
setSymmetricQuoteCharacters:
_openingBracketCharacters
_closingBracketCharacters
_openingQuoteCharacters
_closingQuoteCharacters
_symmetricQuoteCharacters
T@"NSCharacterSet",&,N,V_openingBracketCharacters
T@"NSCharacterSet",&,N,V_closingBracketCharacters
T@"NSCharacterSet",&,N,V_openingQuoteCharacters
T@"NSCharacterSet",&,N,V_closingQuoteCharacters
T@"NSCharacterSet",&,N,V_symmetricQuoteCharacters
_updateTokenInappropriateFlag:
prepareQuoteCountFromLeftContext:
cleanUpSpacesInToken:leftContext:inString:withQuoteCount:
setShouldKeepOutOfPatternCandidates:
setShouldKeepDuplicateTokenIDs:
shouldKeepOutOfLexiconAlternatives
setShouldKeepOutOfLexiconAlternatives:
shouldKeepAlternativeLengths
setShouldKeepAlternativeLengths:
shouldKeepSubstrings
setShouldKeepSubstrings:
shouldKeepOriginalSpelling
setShouldKeepOriginalSpelling:
_shouldKeepOutOfPatternCandidates
_shouldKeepDuplicateTokenIDs
_shouldKeepOutOfLexiconAlternatives
_shouldKeepAlternativeLengths
_shouldKeepSubstrings
_shouldKeepOriginalSpelling
TB,N,V_shouldKeepOutOfPatternCandidates
TB,N,V_shouldKeepDuplicateTokenIDs
TB,N,V_shouldKeepOutOfLexiconAlternatives
TB,N,V_shouldKeepAlternativeLengths
TB,N,V_shouldKeepSubstrings
TB,N,V_shouldKeepOriginalSpelling
patternType
setPatternType:
capitalizationToSplit
setCapitalizationToSplit:
convertToLowercase
setConvertToLowercase:
_capitalizationToSplit
_convertToLowercase
_patternType
Tq,N,V_patternType
TB,N,V_capitalizationToSplit
TB,N,V_convertToLowercase
koreanParticlesCharSet
setKoreanParticlesCharSet:
_koreanParticlesCharSet
T@"NSCharacterSet",C,N,V_koreanParticlesCharSet
handleChineseLigaturesInString:
transliterateSentences
setTransliterateSentences:
_transliterateSentences
TB,N,V_transliterateSentences
characterTransliterations
handleConfusableCharactersInToken:previousContext:
wordIDForCandidateString:
setCharacterTransliterations:
_characterTransliterations
T@"NSArray",N,V_characterTransliterations
handleConfusableIsolatedCharacterToken:
_transliterationMap
maxResultCount
setMaxResultCount:
_maxResultCount
Tq,N,V_maxResultCount
countUnallowedCharactersInString:
tokenRowAsString:
compareStringForPhoneNumberCompatibility:with:
allowedCharacters
setAllowedCharacters:
characterReplacements
setCharacterReplacements:
_allowedCharacters
_characterReplacements
T@"NSCharacterSet",&,N,V_allowedCharacters
T@"NSDictionary",&,N,V_characterReplacements
_extendedConversionCandidates:withPhraseCandidates:
_updatedTokenFromToken:withString:
promoteKanaConversion
mecabraContextRef
_promoteKanaConversion
_mecabraContextRef
T@"CHMecabraWrapper",R,N,V_mecabraWrapper
T^{__MecabraContext=},R,N,V_mecabraContextRef
T^v,R,N,V_wordLanguageModel
TB,R,N,V_promoteKanaConversion
checkCharactersInString:outHasLatin:outHasCyrillic:
checkCharactersInTokenRow:outHasLatin:outHasCyrillic:
_cachedActivationMatrices
_cachedStrokeEndings
rangeOfComposedCharacterSequencesForRange:
hasSubstringInSet:
countCodepoints
codepointRangeAtIndex:
@76@0:8@16@24B32{CGRect={CGPoint=dd}{CGSize=dd}}36Q68
@16@0:8
B16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
Q16@0:8
v16@0:8
@"CHDrawing"
@"NSCharacterSet"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
I48@0:8@16I24B28^d32^v40
@40@0:8@16^@24^v32
@32@0:8@16q24
B40@0:8^{_LXLexicon=}16@24@32
@32@0:8@16^^v24
@32@0:8@16@24
@24@0:8@16
I32@0:8@16^{_LXLexicon=}24
d32@0:8@16@24
B24@0:8@16
@56@0:8@16^{__Mecabra=}24^{__MecabraContext=}32^v40q48
B36@0:8@16B24@28
d92@0:8@16@24@32B40B44B48@52@60^@68^@76^B84
@172@0:8@16@24^{_LXLexicon=}32^v40@48@56@64d72{_NSRange=QQ}80^d96B104B108B112q116d124q132^q140^B148^B156^B164
@48@0:8@16@24^v32@40
q32@0:8@16@24
@48@0:8@16{CGPoint=dd}24q40
@64@0:8@16{CGPoint=dd}24q40@?48@?56
v24@0:8@16
@"NSArray"
@"NSDictionary"
@24@0:8q16
@72@0:8@16@24@32q40@48@56@64
@32@0:8@16^@24
q16@0:8
@"NSNumber"
@"NSLocale"
v56@0:8^@16^@24@32@40@48
@"<CHStrokeProvider>"
@64@0:8@16@24@32@40@48@?56
@64@0:8@16{CGVector=dd}24^@40^@48^d56
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSData"
@108@0:8@16@24I32d36d44d52Q60q68{CGRect={CGPoint=dd}{CGSize=dd}}76
d16@0:8
I16@0:8
@"NSString"
@"NSIndexSet"
v20@0:8I16
v24@0:8d16
v24@0:8Q16
v24@0:8q16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSSet"
v20@0:8B16
B28@0:8@16i24
v68@0:8@16@24@32@40^@48B56^B60
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@28@0:8i16@20
i16@0:8
v20@0:8i16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@28@0:8i16@"NSLocale"20
@"NSLocale"16@0:8
@"NSCharacterSet"16@0:8
v24@0:8@"NSCharacterSet"16
@40@0:8i16i20^{__CFLocale=}24@32
@36@0:8i16@20@28
@44@0:8i16@20@28@36
@32@0:8i16i20@24
@32@0:8^@16q24
@24@0:8Q16
v32@0:8@16@24
v32@0:8^{_LXLexicon=}16^v24
v24@0:8^{_LXLexicon=}16
v24@0:8^v16
{vector<const void *, std::allocator<const void *>>=^^v^^v{__compressed_pair<const void **, std::allocator<const void *>>=^^v}}40@0:8@16@24Q32
{vector<const void *, std::allocator<const void *>>=^^v^^v{__compressed_pair<const void **, std::allocator<const void *>>=^^v}}48@0:8@16@24@32Q40
@24@0:8i16i20
@32@0:8i16i20^{__CFLocale=}24
@20@0:8i16
v40@0:8@16^{CGPoint=dd}24^{CGPoint=dd}32
@32@0:8@16^{CHCandidateResult=If}24
@40@0:8@16^{CHCandidateResult=If}24^@32
@48@0:8@16@24@32@40
d56@0:8@16@24^I32Q40^@48
d64@0:8@16@24@32@40^I48Q56
@48@0:8@16@24@32^@40
@124@0:8^v16Q24^{_LXCursor=}32^{_LXCursor=}40@48@56{_NSRange=QQ}64^v80@88q96i104q108q116
B72@0:8@16@24d32d40B48B52B56I60@64
@64@0:8r^v16@24{_NSRange=QQ}32q48@56
@72@0:8r^v16Q24^v32^v40q48q56@64
^I60@0:8@16q24B32^Q36^B44^{_NSRange=QQ}52
v40@0:8{_NSRange=QQ}16@32
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}32@0:8@16@24
@48@0:8@16@24@32@?40
@132@0:8^v16@24@32{_NSRange=QQ}40^{_LXCursor=}56^{_LXCursor=}64@72@80Q88q96B104q108q116@?124
@72@0:8^v16@24@32Q40@48q56q64
q76@0:8@16^v24^v32^v40^v48@56B64@?68
^v96@0:8^v16@24@32^v40{_NSRange=QQ}48{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}64@?88
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
d20@0:8B16
v80@0:8{vector<CHCandidateResult, std::allocator<CHCandidateResult>>=^{CHCandidateResult}^{CHCandidateResult}{__compressed_pair<CHCandidateResult *, std::allocator<CHCandidateResult>>=^{CHCandidateResult}}}16^v40r^{NetworkEdge=QQQQddQQQ}48^v56q64q72
{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}20@0:8I16
@48@0:8@16Q24@32q40
d24@0:8@16
@40@0:8@16^@24@32
v60@0:8^@16^@24@32q40@48B56
@40@0:8@16Q24Q32
@48@0:8@16@24q32^q40
@52@0:8@16@24q32B40q44
@68@0:8@16@24{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}32@56B64
@44@0:8@16@24d32B40
@40@0:8@16@24@?32
v32@0:8^v16r^v24
v32@0:8^v16@24
v40@0:8^v16@24@32
v32@0:8^v16q24
@32@0:8^S16i24i28
I24@0:8@16
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGPoint=dd}24@0:8@16
{CGSize=dd}24@0:8@16
@40@0:8@16@24^v32
^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}16@0:8
v24@0:8^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}16
^v16@0:8
^{_LXLexicon=}16@0:8
{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}}16@0:8
v40@0:8{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}}16
{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}}16
^{VariantMap=^i^i^ii^iQ}16@0:8
v24@0:8^{VariantMap=^i^i^ii^iQ}16
^^v16@0:8
v24@0:8^^v16
@"CHRecognitionInsightRequest"
@"CHRecognitionInsight"
^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}
@"CHCTCRecognitionModel"
@"CVNLPCTCTextDecoder"
@"NSObject<OS_dispatch_queue>"
@"CHPatternNetwork"
@"CHRecognizerConfiguration"
^{_LXLexicon=}
@"NSMutableDictionary"
@"CHSpellChecker"
@"CHMecabraWrapper"
@"CHStringOVSChecker"
@"NSURL"
^{VariantMap=^i^i^ii^iQ}
@"NSMutableIndexSet"
@"CHPostProcessingManager"
{CGSize="width"d"height"d}
{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>="__tree_"{__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>="__value_"Q}}}
{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>="__tree_"{__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>="__value_"Q}}}
@72@0:8Q16q24q32@40{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}}48
{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}}16@0:8
@"CHClassifiableDrawing"
{set<long, std::less<long>, std::allocator<long>>="__tree_"{__tree<long, std::less<long>, std::allocator<long>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::less<long>>="__value_"Q}}}
v48@0:8^@16^@24@32@40
v48@0:8@16q24q32@?40
d32@0:8d16@24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8r^v16{CGPoint=dd}24d40
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8r^v16q24B32
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8r^v16d24q32
@32@0:8@16@?24
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}24@0:8@16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}32@0:8@16@24
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}24@0:8^v16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}32@0:8r^v16d24
d40@0:8r^v16^{CGPoint=dd}24^d32
d24@0:8^v16
d32@0:8r^v16^d24
d64@0:8{CGPoint=dd}16{CGPoint=dd}32{CGPoint=dd}48
d64@0:8{CGPoint=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}48@0:8r^v16d24d32^d40
@"CHTokenizedTextResult"
@"NSError"
v656@0:8{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}}16
@24@0:8@?16
@64@0:8{CGAffineTransform=dddddd}16
@24@0:8d16
Q24@0:8Q16
{CGPoint=dd}32@0:8Q16Q24
d24@0:8Q16
@32@0:8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8Q16
f16@0:8
v32@0:8{CGPoint=dd}16
{_NSRange=QQ}24@0:8@16
{Matrix<float>=^^?^fII}32@0:8{CGSize=dd}16
{Matrix<float>=^^?^fII}32@0:8Q16Q24
@24@0:8^@16
@40@0:8{CGVector=dd}16d32
@32@0:8d16^v24
@32@0:8d16q24
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
d32@0:8d16d24
v40@0:8@16@24@32
{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}}16@0:8
{CHDrawingStrokes="strokeBounds"{vector<std::vector<double>, std::allocator<std::vector<double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>="__value_"^v}}"strokeBoundsValidity"{vector<bool, std::allocator<bool>>="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::allocator<unsigned long>>="__value_"Q}}"startTimes"{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}"endTimes"{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}"strokes"{vector<std::vector<double>, std::allocator<std::vector<double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>="__value_"^v}}"currentStrokeIndex"q"mSize"I"bitmap"{Matrix<double>="_vptr$Matrix"^^?"_data"^d"_w"I"_h"I}"lineHeight"d"sparseBitmap"{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}}
@36@0:8q16q24B32
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8q16q24@32@40
@"CHCutPoint"
@32@0:8q16@24
v88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48{CGRect={CGPoint=dd}{CGSize=dd}}56
B20@0:8i16
i24@0:8@16
i20@0:8I16
@148@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116i120i124B128q132@140
@140@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116i120i124B128q132
@132@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116B120q124
@124@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80{_NSRange=QQ}96i112q116
q24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
v40@0:8{_NSRange=QQ}16@?32
v44@0:8{_NSRange=QQ}16B32@?36
@32@0:8{_NSRange=QQ}16
{_NSRange=QQ}24@0:8q16
{_NSRange=QQ}16@0:8
^{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"CHTextInputTarget"
{_NSRange="location"Q"length"Q}
^{CGRect={CGPoint=dd}{CGSize=dd}}
v32@0:8{_NSRange=QQ}16
v48@0:8@16{_NSRange=QQ}24^{CGRect={CGPoint=dd}{CGSize=dd}}40
@64@0:8@16@24q32d40d48d56
@184@0:8@16q24q32d40d48d56{CGRect={CGPoint=dd}{CGSize=dd}}64d96{CGRect={CGPoint=dd}{CGSize=dd}}104{CGRect={CGPoint=dd}{CGSize=dd}}136@168d176
@"CHEncodedStrokeIdentifier"
v32@0:8@16d24
B32@0:8@16@24
@32@0:8@16^v24
d40@0:8@16q24q32
v40@0:8@16d24@32
v56@0:8@16d24d32d40@48
@40@0:8@16@24@32
q40@0:8@16q24q32
B48@0:8@16d24q32q40
{vector<std::map<long, long>, std::allocator<std::map<long, long>>>=^v^v{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>=^v}}16@0:8
{vector<std::map<long, long>, std::allocator<std::map<long, long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>="__value_"^v}}
B24@0:8q16
@52@0:8@16@24@32B40@44
@56@0:8@16@24@32@40@?48
@40@0:8@16^@24^@32
@"CHRecognitionSessionResult"
@40@0:8@16@?24@?32
{CGAffineTransform=dddddd}112@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGRect={CGPoint=dd}{CGSize=dd}}80
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
v80@0:8@16^{CGContext=}24{CGAffineTransform=dddddd}32
v88@0:8@16@24^{CGContext=}32{CGAffineTransform=dddddd}40
@152@0:8@16@24@32q40@48@56@64@72@80@88@96{?=ddddd}104q144
@48@0:8@16@24{CGSize=dd}32
{?=ddddd}16@0:8
@"<CHStrokeProviderVersion>"
@"CHStrokeClutterFilter"
@"CHStrokeClassificationResult"
@"CHStrokeGroupingResult"
{?="strokeClutterFilteringDuration"d"strokeClassificationDuration"d"groupingDuration"d"recognitionDuration"d"totalDuration"d}
@20@0:8B16
@56@0:8@16@24@32@40@48
@40@0:8@16^d24^B32
{?=dd}24@0:8@16
@72@0:8@16@24@32@40@48@56@64
@36@0:8@16@24B32
@"CHTextCorrectionResult"
@52@0:8@16i24@28@36q44
q40@0:8@16{_NSRange=QQ}24
v32@0:8@16q24
@40@0:8@16@24^{_NSRange=QQ}32
d32@0:8@16^d24
@40@0:8@16@24^q32
@112@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40q72d80@88{CGPoint=dd}96
@120@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88@96{CGPoint=dd}104
@128@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56q88d96@104{CGPoint=dd}112
{CGVector=dd}16@0:8
@112@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88{CGPoint=dd}96
r^{CGPath=}32@0:8@16@24
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
@56@0:8@16@24@32@40q48
@52@0:8@16@24@32@40I48
@"CHTextInputQuery"
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@168@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40@72@80{CGVector=dd}88{CGVector=dd}104@120r^v128@136d144{CGPoint=dd}152
@176@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48@80@88{CGVector=dd}96{CGVector=dd}112@128r^v136@144d152{CGPoint=dd}160
@184@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56@88@96{CGVector=dd}104{CGVector=dd}120@136r^v144@152d160{CGPoint=dd}168
@176@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48@80{CGVector=dd}88{CGVector=dd}104@120r^v128@136d144q152{CGPoint=dd}160
{CGVector=dd}24@0:8q16
^{CGPath=}48@0:8@16@24@32@40
{CGVector="dx"d"dy"d}
{vector<CGVector, std::allocator<CGVector>>="__begin_"^{CGVector}"__end_"^{CGVector}"__end_cap_"{__compressed_pair<CGVector *, std::allocator<CGVector>>="__value_"^{CGVector}}}
@40@0:8@16@24^@32
@"MLModel"
@108@0:8@16d24@32@40@48@56@64@72@80@88@96B104
@40@0:8@16d24d32
@120@0:8@16d24d32{CGPoint=dd}40i56{CGPoint=dd}60i76{CGPoint=dd}80{CGPoint=dd}96@112
@112@0:8@16d24d32{CGPoint=dd}40i56{CGPoint=dd}60i76{CGPoint=dd}80{CGPoint=dd}96
@88@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56{CGPoint=dd}72
@120@0:8@16d24d32{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72{CGPoint=dd}88{CGSize=dd}104
@88@0:8@16d24d32{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72
@72@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56
@96@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56{CGPoint=dd}72d88
^{CGColor=}32@0:8@16@24
v48@0:8@16@24@32@?40
B80@0:8@16{?=qqq}24@48q56@64^@72
B80@0:8@16{?=qqq}24@48@56q64^q72
B52@0:8@16@24q32B40^q44
@"CHRecognitionSession"
@"<CHVisualizationDelegate>"
v32@0:816
@"CHPointFIFO"
@36@0:8@16Q24f32
@32@0:8@16Q24
v20@0:8f16
{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}}16@0:8
v40@0:8{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}}16
{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>="__value_"^}}
68@0:8163248f64
v56@0:8{CGSize=dd}16{CGSize=dd}32d48
@?16@0:8
v24@0:8@?16
^{CGPath=}16@0:8
v24@0:8^{CGPath=}16
16@0:8
^{CGPath=}
@"<CHPointFIFODrawingTarget>"
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
{_NSRange=QQ}56@0:8{_NSRange=QQ}16q32@40@48
v56@0:8@16{_NSRange=QQ}24^B40^B48
{_NSRange=QQ}40@0:8q16@24@32
q64@0:8{CGPoint=dd}16@32^{CGRect={CGPoint=dd}{CGSize=dd}}40{_NSRange=QQ}48
B40@0:8@16@24q32
B40@0:8@16@24^B32
B40@0:8@16@24^q32
@68@0:8q16@24@32@40@48@56B64
v32@0:8^{_NSRange=QQ}16^B24
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}44@0:8{_NSRange=QQ}16B32^B36
@"CHTextInputTargetContentInfo"
@"<CHStroke>"
@64@0:8{CGPoint=dd}16@32@40@48@56
@48@0:8@16{CVNLPTextDecodingPruningPolicy=qBfI}24
@72@0:8@16{CGPoint=dd}24B40B44^v48^q56^q64
@88@0:8@16{CGSize=dd}24{CGPoint=dd}40@56^v64^@72^d80
v40@0:8@16@24@?32
B48@0:8d16@24@32@40
d40@0:8@16@24^@32
@48@0:8@16@24d32^@40
@72@0:8@16@24d32{CGPoint=dd}40B56B60^@64
^{CHCodeMap=*Q^II}16@0:8
{CVNLPTextDecodingPruningPolicy=qBfI}16@0:8
v40@0:8{CVNLPTextDecodingPruningPolicy=qBfI}16
^{CHCodeMap=*Q^II}
@"NSOrderedSet"
{CVNLPTextDecodingPruningPolicy="strategy"q"shouldSort"B"threshold"f"maxNumberOfCandidates"I}
{pair<double, double>=dd}32@0:8@16@24
q40@0:8@16@24^q32
@80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64q72
@72@0:8@16@24d32{CGRect={CGPoint=dd}{CGSize=dd}}40
@36@0:8@16B24B28B32
@48@0:8@16@24q32q40
@48@0:8@16@24q32@40
@64@0:8@16@24@32@40q48q56
@48@0:8@16@24@32q40
@56@0:8@16@24@32q40q48
@40@0:8{?=qqq}16
d32@0:8{_NSRange=QQ}16
B32@0:8{_NSRange=QQ}16
@44@0:8@16{_NSRange=QQ}24B40
@64@0:8@16{_NSRange=QQ}24B40B44^d48@?56
B32@0:8@16^B24
@40@0:8@16{_NSRange=QQ}24
{?=dd}28@0:8@16i24
d36@0:8@16@24i32
d24@0:8d16
v48@0:8@16{_NSRange=QQ}24@?40
@40@0:8@16^{_LXLexicon=}24q32
v40@0:8B16B20B24B28B32B36
Q20@0:8S16
d24@0:8S16S20
B28@0:8@16B24
@36@0:8@16B24@28
@"AppleSpell"
@"CHSpellCheckerErrorModel"
@40@0:8^v16@24@32
@24@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16
@48@0:8@16d24d32^v40
@72@0:8@16d24{CGSize=dd}32d48^d56^v64
@"CHSingletonMLModel"
@32@0:8@16d24
B40@0:8@16^v24@?32
@40@0:8@16@24q32
@128@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88@96{CGPoint=dd}104@120
@136@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56q88d96@104{CGPoint=dd}112@128
@44@0:8@16@24@32B40
d40@0:8@16@24@32
@72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^d56^d64
B40@0:8@16@24^@32
@88@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40d72d80
@96@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48d80d88
@60@0:8@16@24@32@40I48q52
@88@0:8@16@24@32@40I48q52B60@64q72@?80
@96@0:8@16@24@32@40I48q52B60@64q72@80@?88
B32@0:8q16q24
@60@0:8@16@24B32@36q44^@52
@"<CHRecognitionSessionTaskDelegate>"
@"CHStrokeClassificationModel"
@56@0:8@16@24q32^B40^@48
@48@0:8@16@24q32@?40
@"<CHTextInputQueryTargetDataSource>"
v32@0:8@16@?24
@"DDScannerServiceConfiguration"
@40@0:8@16@24^{CGPath=}32
r^{CGPath=}16@0:8
r^{CGPath=}
@"DDScannerResult"
@88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56d64r^v72d80
{vector<CGPoint, std::allocator<CGPoint>>="__begin_"^{CGPoint}"__end_"^{CGPoint}"__end_cap_"{__compressed_pair<CGPoint *, std::allocator<CGPoint>>="__value_"^{CGPoint}}}
{CGAffineTransform=dddddd}16@0:8
v32@0:8{CGVector=dd}16
@"CHSubstroke"
@48@0:8@16^{CGColor=}24^{__CTFont=}32^{__CTParagraphStyle=}40
^{CGPoint=dd}64@0:8@16{CHLineSegment={CGPoint=dd}{CGPoint=dd}}24^q56
@32@0:8^{CGPoint=dd}16q24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
q48@0:8{CHLineSegment={CGPoint=dd}{CGPoint=dd}}16
^{CGPoint=dd}16@0:8
^{CGPoint=dd}
v32@0:8@"CHRemoteRecognitionRequest"16@?<v@?@"CHTokenizedTextResult"@"NSError">24
v40@0:8@"CHTokenizedTextResult"16@"CHRemoteRecognitionRequest"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
@48@0:8@16@24^@32^@40
@"NSXPCConnection"
#24@0:8@16
^{CGColor=}24@0:8q16
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@"CHVisualization"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v24@0:8@"CHVisualization"16
q24@0:8@"CHStrokeGroup"16
v24@0:8@"CHRecognitionSession"16
v28@0:8B16@20
@"<CHVisualizationManagerDelegate>"
@"NSMutableSet"
@"NSMutableArray"
@"<CHQueryDelegate>"
@"CHStrokeGroup"
@40@0:8{_NSRange=QQ}16^@32
@32@0:8d16d24
{CHTextLineStraighteningResult=@@@}32@0:8@16@?24
v48@0:8@16@24^v32@40
{CGAffineTransform=dddddd}40@0:8@16@24@?32
{CGAffineTransform=dddddd}40@0:8q16@24@?32
@?64@0:8{CGAffineTransform=dddddd}16
{vector<CoreHandwriting::BoundingBox, std::allocator<CoreHandwriting::BoundingBox>>="__begin_"^{BoundingBox}"__end_"^{BoundingBox}"__end_cap_"{__compressed_pair<CoreHandwriting::BoundingBox *, std::allocator<CoreHandwriting::BoundingBox>>="__value_"^{BoundingBox}}}
@52@0:8^{_CFBurstTrie=}16^{_LXLexicon=}24^{_LXLexicon=}32I40^?44
B24@0:8^{_LXEntry=}16
B32@0:8@16^{_LXLexicon=}24
B32@0:8@16^{_CFBurstTrie=}24
B20@0:8I16
B28@0:8I16^{_LXLexicon=}20
^{_CFBurstTrie=}
@68@0:8@16{_NSRange=QQ}24@40q48B56@60
v40@0:8@16^Q24^Q32
Q24@0:8@16
B28@0:8Q16i24
@28@0:8@16i24
^v32@0:8@16@24
B40@0:8@16@24@32
B72@0:8@16@24@32@40{_NSRange=QQ}48@64
d32@0:8@16d24
B72@0:8@16{_NSRange=QQ}24@40{_NSRange=QQ}48@64
@44@0:8i16@20i28B32B36B40
@52@0:8i16@20i28i32i36B40B44B48
r^{_LXLexicon=}24@0:8^@16
r^{_LXLexicon=}32@0:8r^{_LXLexicon=}16r^{_LXLexicon=}24
^v36@0:8@16B24@28
^v28@0:8^v16B24
@32@0:8^{_LXLexicon=}16^{_LXLexicon=}24
@120@0:8^{_LXLexicon=}16^{_LXLexicon=}24^{_LXLexicon=}32^{_LXLexicon=}40@48@56@64^v72@80@88@96^v104q112
@40@0:8^{_LXLexicon=}16^{_LXLexicon=}24^v32
^?16@0:8
@32@0:8q16q24
@"<CHRecognizing>"24@0:8@"NSLocale"16
@"CHTextCorrectionRecognizer"24@0:8@"NSArray"16
@40@0:8q16@24@32
@48@0:8q16B24B28@32@?40
B32@0:8@16^@24
@"CHRecognitionSessionVersion"
@"<CHRecognitionSessionDataSource>"
@44@0:8@16q24B32q36
@48@0:8@16^@24^@32@?40
@64@0:8@16@24{_NSRange=QQ}32@48^{_NSRange=QQ}56
{_NSRange=QQ}40@0:8@16{_NSRange=QQ}24
@36@0:8@16B24q28
@96@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48d80@88
@96@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40d72{_NSRange=QQ}80
@72@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40
Q32@0:8@16@24
q112@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}88@104
B128@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}88^B104^d112^d120
@"<CHRecognizing>"
@"CHRecognizer"
@"CHCornerDetector"
Q20@0:8I16
{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}}16
{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}}16
{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>="__tree_"{__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>="__value_"Q}}}
{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>="__tree_"{__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>="__value_"Q}}}
{vector<CGRect, std::allocator<CGRect>>=^{CGRect}^{CGRect}{__compressed_pair<CGRect *, std::allocator<CGRect>>=^{CGRect}}}48@0:8@16{CGPoint=dd}24d40
@52@0:8@16q24@32B40@44
v76@0:8@16@24@32@40@48@56B64@?68
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@16r^v24{CGVector=dd}32^@48^v56
@40@0:8@16{CGVector=dd}24
v64@0:8^d16{CGRect={CGPoint=dd}{CGSize=dd}}24@56
v56@0:8^d16^@24@32@40@48
v64@0:8^d16^@24@32@40@48q56
q40@0:8@16@24@32
{CGVector=dd}64@0:8@16@24{CGVector=dd}32@48@56
v40@0:8^@16^{CGVector=dd}24^{CGVector=dd}32
v32@0:8@16^{CGVector=dd}24
v28@0:8@16B24
{CGVector=dd}32@0:8{CGVector=dd}16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}44@0:8r^v16@24q32B40
B32@0:8@16^{CGVector=dd}24
d72@0:8@16@24r^v32{CGVector=dd}40{CGVector=dd}56
v36@0:8@16@24B32
d56@0:8r^v16{CGRect={CGPoint=dd}{CGSize=dd}}24
B32@0:8q16@24
q32@0:8d16q24
@"CVNLPActivationMatrix"
f24@0:8q16
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}40@0:8^v16i24f28@?32
@32@0:8^v16@24
@44@0:8@16i24d28@?36
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}24@0:8^v16
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}28@0:8@16B24
@64@0:8@16@24@32{CGPoint=dd}40q56
@56@0:8@16^v24@32q40@48
^{CGPath=}40@0:8@16^{CGPoint=dd}24@32
v56@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^d24@32q40@48
{CGAffineTransform=dddddd}64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48@56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGPoint=dd}16
@"CHRecognitionSessionIndexableContent"
@40@0:8r^v16@24@32
@56@0:8r^v16@24@32@40@48
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}16@0:8
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>="__begin_"^{CHFastGroupingCluster}"__end_"^{CHFastGroupingCluster}"__end_cap_"{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>="__value_"^{CHFastGroupingCluster}}}
@32@0:8Q16@24
v32@0:8Q16Q24
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
@32@0:8i16@20B28
@36@0:8q16@24B32
@40@0:8Q16@24@32
B40@0:8@16q24@32
@60@0:8@16@24@32@40@48B56
v28@0:8i16@20
^{__Mecabra=}16@0:8
^{__Mecabra=}
@36@0:8@16@24i32
@"CHMutableTokenizedTextResult"
@32@0:8@?16@24
v48@0:8@16@24@32@40
@80@0:8@16@24@32@40@48@56@64@72
@100@0:8i16B20B24@28^{_LXLexicon=}36^{_LXLexicon=}44^{_LXLexicon=}52^{_LXLexicon=}60@68^v76@84@92
@68@0:8@16B24B28^q32^d40@48@56B64
@56@0:8@16B24@28B36@40B48B52
@52@0:8@16B24@28B36@40B48
r^{_LXLexicon=}16@0:8
v24@0:8r^{_LXLexicon=}16
r^{_LXLexicon=}
@40@0:8B16B20B24B28B32B36
@40@0:8@16q24B32B36
@40@0:8^{_LXLexicon=}16^{_LXLexicon=}24@32
{map<std::string, std::pair<std::string, double>, std::less<std::string>, std::allocator<std::pair<const std::string, std::pair<std::string, double>>>>="__tree_"{__tree<std::__value_type<std::string, std::pair<std::string, double>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::pair<std::string, double>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::pair<std::string, double>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::pair<std::string, double>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::pair<std::string, double>>, std::less<std::string>, true>>="__value_"Q}}}
@44@0:8@16^v24@32B40
^{__MecabraContext=}16@0:8
^{__MecabraContext=}
v40@0:8@16^B24^B32
q32@0:8@16q24
q24@0:8Q16
{_NSRange=QQ}24@0:8Q16
I32@0:8Q16^{_NSRange=QQ}24
Q32@0:8Q16@?24
17TriangleRegressor
9Regressor
10CHTriangle
FNV^f
15CHManhattanLine
6CHLine
12CHChatBubble
6MatrixIfE
6CHStar
$0ss
)8\\
HVN6MatrixIdE
RRRRRR
______
?______
?______
VVVVVV
?______
?19ChatBubbleRegressor
9CHEllipse
?______
?______
?______
VVVVVV
Y^[D
333333
333333
@333333
@333333
333333
@333333
@333333
@333333
@ffffff
@333333
@333333
@333333
@333333
@ffffff
@ffffff
@333333
@ffffff
@333333
333333
?333333
?333333
?ffffff
?15CHOutlinedArrow
11CHRectangle
12CHBasicShape
18RectangleRegressor
?^^^^^^
?7CHCloud
14CHStraightLine
12CHBezierLine
?VVVVVV
?^^^^^^
?}}}}}}
N5boost16exception_detail10clone_implINS_3qvm22zero_determinant_errorEEE
N5boost3qvm22zero_determinant_errorE
N5boost3qvm5errorE
N5boost9exceptionE
N5boost16exception_detail10clone_baseE
"6!&
9SymbolMap
333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
333333
 +7tt
]mdhh
VVVVVV
?7CHHeart
9999
9999
999999
99999999999999999999999999999999999
99999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999
999999999999999999999999999999999999
)8\\
RRRRRR
?10CHPentagon
26CHRSketchRecognitionResult
!,7BM
v8@?0
.@#:/-_
%@%@
v32@?0@"NSString"8@"NSArray"16^B24
v24@?0^{_LXEntry=}8*16
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
!?();:
Guess
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
CHTriangle
v16@?0@"CHTokenizedStrokeResult"8
Stroke Group Query %p
Unknown
Handwriting
 ID: %@, StableID: %@, Stroke count: %ld, type: %@
encodedStrokeIdentifier
string
strokeIndexes
wordID
recognitionScore
combinedScore
alignmentScore
properties
substrokeCount
boundsOriginX
boundsOriginY
boundsWidth
boundsHeight
 '%@', strokes: %@, substrokeCount: %ld, wordID: %d, recognitionScore: %0.4f, combinedScore: %0.4f, alignmentScore: %0.4f, rare: %@, lexicon: %@, pattern: %@, inappropriate: %@, precedingSpace: %@, original: %@, bounds: [%0.4f, %0.4f, %0.4f, %0.4f]
imgData
featureData
softmax_output
+N9mZUAHooNvMiQnjeTJ8g
.codemap
vo_en
CHRecognitionOptionTextBefore
CHRecognitionOptionTextAfter
CHRecognitionOptionPrecedingSpaceBehavior
CHRecognitionOptionFrameContext
CHRecognitionOptionDrawingAnchorPoint
CHRecognitionOptionShouldRefineCandidates
CHRecognitionOptionShouldPreserveCaseVariantCandidates
CHRecognitionOptionInferenceCache
CHRecognitionOptionIsRunningSecondaryLocale
CHRecognitionOptionMinSizeForReliableRescaling
v36@?0I8{_NSRange=QQ}12^B28
012olzOLZ
Oval
Line
Outline Arrow
Triangle
Rectangle
Pentagon
Manhattan Line
Chat Bubble
Star
Heart
Cloud
Scribble
com.apple.CoreHandwriting
HWRTriangleAlignToAxisThreshold
HWRTriangleIsoscelesLengthRatioThreshold
HWRTriangleEquilateralLengthRatioThreshold
HWROvalFitToCircleRadiiRatioThreshold
HWROvalAlignToIncrementsOf
HWRRectangleFitToSquareLengthRatioThreshold
HWRRectangleAlignToIncrementsOf
HWROutlinedArrowAlignToIncrementsOf
HWRLineAlignToAxisThreshold
HWRLineLengthRatioThreshold
B24@?0@"CHTextRecognitionResult"8@"NSDictionary"16
v64@?0@"CHTokenizedTextResultToken"8q16{?=qqq}24{_NSRange=QQ}48
'.-/
-/._@
v28@?0r*8q16I24
d16@?0r^{NetworkEdge=QQQQddQQQ}8
d16@?0^v8
B32@?0@"CHTextRecognitionResult"8Q16^B24
d24@?0r^v8d16
'".-
%@%@%@
q24@?0@8@16
v24@?0Q8^B16
com.apple.CoreHandwriting.recognizerQueue
CHChatBubble
CHManhattanLine
B32@?0@"<CHStroke>"8Q16^B24
v40@?0{CGPoint=dd}8d24^B32
q16@?0q8
=== Insight Request ===
  request: %@
=== Recognizer Configuration ===
  recognizerLocale: %@
  recognizerRecognitionMode: %@
  recognizerContentType: %@
  autoCapitalizationMode: %@
  autoCorrectionMode: %@
  recognizerActiveCharacterSet: %@
  recognizerMaxRecognitionResultCount: %ld
  recognizerMinimumDrawingSize: {width: %0.2f, height: %0.2f}
    %@: %@,
v32@?0@"NSString"8@"NSObject"16^B24
  recognizerOptions: %@
=== Input Drawing ===
None captured
  inputDrawing: %@
=== Text Result ===
drawingStrokes
drawingStrokesTimeStamps
%d %d %d
json
channel
data
origin: (%0.2f, %0.2f), size: (%0.2f, %0.2f)
 strokes: %lu, points: %lu, %@
%d %d
channels
dd-MM-yyyy-HH-mm-ss-SSS
/drawing_%@-%@.json
Error: Degenerated drawing (empty stroke present)
q24@?0@"CHCutPoint"8@"CHCutPoint"16
B32@?0@8Q16^B24
UIImage
Unable to find class %s
  %ld: origin: (%0.2f, %0.2f), size: (%0.2f, %0.2f)
@"NSString"24@?0@8q16
(none)
 textInputTarget: (%@), contentType: %@, textContentLength: %ld, referenceSubstring: "%@", referenceSubstringRange: %@, selectedRange: %@, isCursorStrong: %@, containsCommittedStrokes: %@, activePreviewRange: %@, strokeCoveredTextRange: %@, lastCharacterLevelPosition: %@, isSingleLine: %@, supportsAutoLineBreaks: %@, characterRectsInReferenceSubstring: {%@}, protectedCharacterIndexes: {%@}
aceimnorsuvwxz,.-_*+~<>
gjpqy
v24@?0q8^B16
v56@?0q8{CGRect={CGPoint=dd}{CGSize=dd}}16^B48
strokeIdentifier
substrokesCount
classificationAsNonText
lineOrientation
lineError
containerScore
bounds
boundsDiagonal
enlargedBounds
rotatedBounds
supportByStrokeIdentifier
support
{CGRect={CGPoint=dd}{CGSize=dd}}
<%@: %p strokeIdentifier=(%@) support=%.3f class=%ld>
strokeGroups
groupingResultsByStrategyIdentifier
groupingManagerNonText
%@, 
v32@?0@"CHEncodedStrokeIdentifier"8@"NSNumber"16^B24
v24@?0@"CHEncodedStrokeIdentifier"8^B16
B24@?0@"CHStrokeGroup"8^B16
q24@?0@"CHEncodedStrokeIdentifier"8@"CHEncodedStrokeIdentifier"16
q24@?0@"CHStrokeGroup"8@"CHStrokeGroup"16
q24@?0@"<CHStroke>"8@"<CHStroke>"16
CHTextStrokeTransformationQuery %p
CHEllipse
inputStrokeIdentifiers
sessionMode
textCorrectionResult
recognitionResultsByLocale
orderedLocales
errorsByLocale
languageFitnessByLocale
languageFitnessDictByLocale
rawScore
strokeClassificationsByStrokeIdentifier
substrokesByStrokeIdentifier
nontextCandidates
strokeProviderVersion
orderedStrokeIdentifiers
locales
preferredLocales
strokeClassificationResult
strokeGroupingResult
recognitionResults
inlineContinuousModeResults
generationDuration
recognitionEnvironment
", "
"%@"
 strokeProviderVersion: %@, locales: %@, strokeClassificationResult: %@, strokeGroupingResult: %@
  Group %ld: 
recognition: %@
textCorrection: %@
Group Results: 
@"NSString"24@?0@"CHStrokeGroup"8@"NSLocale"16
GroupID %ld, %@
== %@ ==
GroupID %ld
%@: {
<NO RESULT>
"%@"%@
<ERROR: %@>
Gen 1
Gen 2
Recognizer Generation: %@
None
(%.3f, %.3f)
Language Fitness: %@
B32@?0@"CHStrokeGroup"8Q16^B24
 Strokes: %ld, text strokes: %ld
B32@?0@"CHEncodedStrokeIdentifier"8@"NSNumber"16^B24
 Groups: %ld, created: %ld, deleted: %ld
CHSkipConfidenceFiltering
@"NSString"24@?0@"NSLocale"8q16
v32@?0@"NSLocale"8@"NSValue"16^B24
{?=dd}
v32@?0@"NSLocale"8@"NSDictionary"16^B24
v32@?0@"NSLocale"8@"NSNumber"16^B24
q24@?0@"NSString"8@"NSString"16
q24@?0@"NSLocale"8@"NSLocale"16
B32@?0@"NSLocale"8Q16^B24
B20@?0i8Q12
recognitionMode
drawing
options
minimumDrawingWidth
minimumDrawingHeight
contentType
autoCapitalizationMode
autoCorrectionMode
activeCharacterSetPerLocale
maxRecognitionResultCount
shouldUseTextReplacements
enableCachingIfAvailable
enableGen2ModelIfAvailable
enableGen2CharacterLMIfAvailable
enableStrokeReordering
hasBeenSubmitted
priority
parameterOverride
@"NSString"24@?0@"NSCharacterSet"8q16
Remote Recognition Request %p (locales=[%@], mode=%@, content type=%@, autocapitalization mode=%@, autocorrection mode=%@, option keys=%@, active character sets=[%@], drawing=%p, shouldUseTextReplacements=%@, enableCachingIfAvailable=%@, enableGen2ModelIfAvailable=%@, enableGen2CharacterLMIfAvailable=%@, _enableStrokeReordering=%@, hasBeenSubmitted=%@, priority=%ld)
General
Recognizer
RecognitionSession
StrokeGrouping
ClutterFiltering
RemoteRecognizer
TextCorrectionRecognizer
CoreHandwritingSignPosts
com.apple.corehandwriting
tokenRows
@"NSString"24@?0@"NSArray"8q16
@"NSString"24@?0@"CHTokenizedTextResultToken"8q16
[%p "%@" %.2f, %.2f]
  %@
 rows: %ld {
v32@?0@"NSArray"8Q16^B24
q24@?0@"NSArray"8@"NSArray"16
ancestorIdentifier
uniqueIdentifier
strokeIdentifiers
firstStrokeIdentifier
lastStrokeIdentifier
classification
groupingConfidence
strategyIdentifier
firstStrokeOrigin
com.apple.CoreHandwriting.StrokeGroupID
 uniqueID: %ld, ancestorID: %ld, bounds: {x: %0.1f, y: %0.1f, width: %0.1f, height: %0.1f}, strokes: %ld, strategy: %@
{CGPoint=dd}
v16@?0@"CHTextInputTargetContentInfo"8
v32@?0@8Q16^B24
inputTargetIdentifier
frameXOrigin
frameYOrigin
frameWidth
frameHeight
 ID: %@, frame: {x: %0.1f, y: %0.1f, width: %0.1f, height: %0.1f}
writingDirectionSortedStrokeIdentifiers
writingDirectionSortedSubstrokes
averageStrokeDeviation
averageWritingOrientation
localStrokeWritingOrientations
lastSubstrokeIndexBeforeMerge
coalescedLastSubstrokes
gjpqyz
B32@?0@"NSArray"8Q16^B24
B32@?0@"NSIndexSet"8Q16^B24
%@-%@_%@
%@_%@
%@-%@
 Low confidence, reporting nil.
Title Query %p
com.apple.CoreHandwriting.CHSingletonMLModelQueue
class: %@ score: %3.5f string: %@
Freeform
v16@?0@"NSIndexSet"8
v32@?0{_NSRange=QQ}8^B24
Search Query %p
 strokeIdentifiers: %@
B24@?0{_NSRange=QQ}8
0x%x
v16@?0^v8
output_topk_indices
v56@?0q8q16^f24q32^B40^B48
tokenColumns
transcriptionPaths
transcriptionPathScores
recognizerGenerationIdentifier
precedingLineBreaks
changeableTokenColumns
trailingSeparator
columns
column
@"NSString"24@?0@"CHTokenizedTextResultColumn"8q16
rows
%ld %@
transcriptionPath
@"NSString"24@?0@"NSIndexPath"8q16
Column %ld %@
 %ld (%ld changeable) %@ [%@], %ld %@ 
Gen1
Gen2
v48@?0@"CHTokenizedTextResultToken"8q16{?=qqq}24
B32@?0@"CHTokenizedTextResultColumn"8Q16^B24
en_US
/result_%@-%@.dat
B32@?0@"CHTokenizedTextResult"8Q16^B24
@24@?0@"NSIndexPath"8q16
B32@?0@"NSIndexPath"8Q16^B24
v48@?0r^I8q16d24q32^B40
abcxyz
ErrorModel
CHOutlinedArrow
input
output
/model.espresso.net
s%d_p%d
input_stroke
input_mask
input_posenc
output_predictions
Low split score
Second group with single too short stroke (time interval = %.3f, threshold = %.3f).
Second group with single too short stroke (arc length = %.3f, threshold = %.3f).
Second group with an unfinished stroke and only a few (%li) other short strokes
Two parallel lines (err1=%.3f, err2=%.3f, ori1=%.3f, ori2=%.3f).
timeWindowStrategy
CHRecognitionTaskOverhead
com.apple.CoreHandwriting.RecognitionSessionRecognizers
B8@?0
CHRecognitionSessionLogging
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
Text Input Query %p
, error: %@
 text: '%@', itemID: %@, stableItemID: %@, type: %ld, strokes: %ld%@
v32@?0@"NSDictionary"8@"NSDictionary"16@"DDScannerResult"24
Data Detector Query %p
 strokeIdentifiers: %@, result type: %@
CHRectangle
v24@?0@"NSString"8^B16
v32@?0@"CHTokenizedTextResultToken"8Q16^B24
Prefix data Query %p for prefix %@
startTimestamp
endTimestamp
convexHull
curvature
substroke
strokeDeviation
originalWritingDirectionIndex
writingOrientation
coalescedCenter
%.10g
Helvetica-Bold
Stroke group classification: 
text
clutter
doodle
line
container
unknown
CTFontCreateWithName
CTParagraphStyleCreate
CTFramesetterCreateWithAttributedString
CTFramesetterCreateFrame
CTFrameDraw
kCTFontAttributeName
kCTForegroundColorAttributeName
kCTParagraphStyleAttributeName
{%f, %f}
v56@?0q8{CHLineSegment={CGPoint=dd}{CGPoint=dd}}16^B48
com.apple.handwritingd.remoterecognition
v16@?0@"NSError"8
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"CHTokenizedTextResult"8@"NSError"16
CHLogAllDrawings
drawing_%@_%@.json
request_%@_%@.dat
result_%@_%@.dat
CHStraightLine
CHBezierLine
StrokeBounds
SubstrokeBounds
StrokePoints
GroupBounds
Grouping
GroupClassification
GroupBaselineLegacy
GroupBaseline
NormalizedDrawing
NormalizedDrawingAll
CHStatusKeyStatus
CHStatusKeyEnvironment
CHStatusKeyLocales
CHStatusKeyLastDurationTotal
CHStatusKeyLastDurationDetailed
CHStatusStrokeCount
CHStatusKeyGroupCount
CHStatusKeyTranscript
CHStatusKeyAllResults
Stroke Bounds
Substroke Bounds
Stroke Points
Stroke Group Bounds
Stroke Groups by Color
Stroke Groups Classification
Stroke Groups Baseline (Legacy)
Stroke Groups Baseline
Normalized Drawing (Selective)
Normalized Drawing (All)
Status
Environment
Locales
Total Duration
Detailed
Stroke Count
Group Count
Transcript
Text Results
In process
Out of process
Automatic
%@ (%@)
%0.2fs
%0.2fs clutter filtering, %0.2fs Stroke class., %0.2fs Grouping, %0.2fs Recog.
%ld text, %ld non-text
Group %ld (ID: %ld)
<Status Reporting Disabled>
v32@?0@"NSNumber"8@"NSNumber"16^B24
Transcription Query %p
com.apple.CoreHandwriting.%@.Processing
Query %p
<div style="clear:both;margin:auto;font-size:250%%;" >
<p>WARNING : NOTHING WAS SAVED : YOU MUST CLICK ON THE FOLLOWING LINK !</p>
<p><a href="#" onclick="SendMail(%d);">Send via email to Antoine !</a></p>
</div>
<p>For information, here are the files you flagged:</p>
<p id="po-term%d" style="margin:0;" \>
</body>
</html>
CHPentagon
not triangulation
Cannot link edge
Zund
v32@?0@"NSString"8@"NSNumber"16^B24
num_characters
num_strokes
num_groups
majority_script
nontext_ratio
rotation_angle
time_for_straightening_ms
{CGPoint=dd}24@?0{CGPoint=dd}8
UIGraphicsBeginImageContextWithOptions
UIGraphicsGetImageFromCurrentImageContext
UIGraphicsEndImageContext
UIFont
NSFontAttributeName
UIColor
NSForegroundColorAttributeName
NSStrokeColorAttributeName
typename lazy_enable_if_c<is_mat<A>::value && mat_traits<A>::rows == mat_traits<A>::cols && !qvm_detail::inverse_m_defined<mat_traits<A>::rows>::value, deduce_mat<A>>::type boost::qvm::inverse(const A &) [A = boost::qvm::mat<double, 6, 6>]
/AppleInternal/Library/BuildRoots/2c64d074-f3a6-11ec-b416-82ecb900cc8f/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.0.Internal.sdk/usr/local/include/boost/qvm/mat_operations.hpp
Boost QVM error
inputTarget
affectedRange
textResult
resultType
isCharacterLevel
error
Text
Encircle
Polygon
SplitJoin
Insertion Caret
<%@: %p> "%@"
 inputTargetID: %@, affectedRange: %@, resultType: %@, textResult: %@, isCharacterLevel: %@, error: %@
ctc_zh
ctc_latn
ctc_ja
ctc_ko
ctc_th
ctc_cyrl
bundle
DecodingLexiconWeight
DecodingLexiconLowerBoundLogProbability
DecodingCharacterLMWeight
DecodingCharacterLMLowerBoundLogProbability
DecodingWordLMWeight
DecodingWordLMLowerBoundLogProbability
SwapRulePreferEnglishRecognitionScoreMargin
SwapRuleAcceptableEnglishHeuristicTextScoreMargin
SwapRuleAcceptableEnglishRecognitionScoreMargin
SwapRulePreferEnglishHeuristicTextScoreMargin
SwapRuleRecognitionScoreDecisiveMargin
SwapRuleHeuristicTextScoreDecisiveMargin
SwapBlockRulePreferCyrillicHeuristicTextScoreMargin
SwapBlockRuleAcceptableCyrillicRecognitionScoreMargin
SkipLatinProbabilityThreshold
MultiCharacterOverlapped
SingleCharacter
Sketch
MultiCharacterInline
MultiCharacterInlineKeyboard
MultiCharacterCanvas
Default
Digits
PhoneNumber
Username
EmailAddress
ASCII
Equation
Words
Sentences
AllUppercase
AllLowercase
English
French
Spanish
Italian
German
Portuguese
Chinese
Cantonese
Japanese
Indonesian
Dutch
Thai
Korean
Russian
Ukrainian
SimplifiedChinese
TraditionalChinese
Roman
Cyrillic
 Recognizer configuration with mode: %@, locale: %@, contentType: %@, autoCapitalizationMode: %@, autoCorrectionMode: %@, language: %@, script: %@
zh_Hans
zh_Hant
ja_Jpan
Latn
Hans
Hant
Hrkt
Hira
Kata
Jpan
Hani
Kore
Cyrl
CoreHandwriting
experimental_latin_script
thai_support
russian_support
ukrainian_support
none
%@-%ld-%@-%@
zh_hant
com.apple.CoreHandwriting.LanguageModelLoadingQueue
v44@?0^{__CFURL=}8i16^{__CFLocale=}20^{__CFString=}28^B36
pt_BR
/System/Library/PrivateFrameworks/TextRecognition.framework/pt_BR.lm
corpus.wid
odat
P.bin
PP.bin
G.bin
R.bin
synthetics_
zh-Hans
zh-Hant
zh_compact
vo_en_compact
vo_de
vo_other
Invalid empty FST line entry
File not found: (
Node[
has out degree zero but is not marked as a final node
has in degree zero but is not marked as an initial node
0x%zx
mode
version
lastRecognitionResult
sessionVersion
sessionResultVersion
Initial
Accumulating
Processing
Finished
stroke_classification.bundle
com.apple.CoreHandwriting.RecognitionSessionCanvasTaskSharedTarget
com.apple.CoreHandwriting.RecognitionSessionCanvasHighResponsivenessTask
com.apple.CoreHandwriting.RecognitionSessionTextInputTaskSharedTarget
com.apple.CoreHandwriting.RecognitionSessionTask
com.apple.CoreHandwriting.RecognitionSession
v16@?0@"<CHRecognitionSessionObserver>"8
v16@?0@"CHRecognitionSessionResult"8
B32@?0@"NSValue"8Q16^B24
time_for_recognition_ms
com.apple.CoreHandwriting.CHCharacterSetsRules
^*+=<>.,
:'"-/
apmAPM.
strdndth.
:;B=
)(pPDoOxX*
_-.+
_-.:/+&?%()$=
-/.@_
.,!?;:
!?:;
substrokePlacementsByStrokeIdentifier
vertical
horizontal
q24@?0@"CHSubstrokePlacement"8@"CHSubstrokePlacement"16
q24@?0@"CHTextLineStrokeGroup"8@"CHTextLineStrokeGroup"16
PKStrokesDrawn
PKSmartSelection
PKCopyAsText
PKSmartShapes
PKInsertSpace
PKDataDetector
PKTextLineStraightening
com.apple.corehandwriting.fast_stroke_grouping
IndexableContent Query %p
0x61a649a
0x34f55ec
0x7f7446f
0xe6b391a
0x08d4b39
0xbdde29e
0x633a6c7
0x346ff32
0xf9be5b7
0xf9dd946
0x27087b3
0x5fb9dc5
0xcf06682
0xcff9621
CHPostProcessingStepOptionAdjustColumns
es_ES
+-#*'",. 
@"CHTokenizedTextResultToken"40@?0@"CHTokenizedTextResultToken"8{?=qqq}16
Inference cache size for drawing [%@]: %lu (%@)
@24@?0@8q16
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
+=<>
`"e"d"
"& 5"
N5l\SL
NZN+N@
N*N@
 0b
'`$a$b$c$d$e$f$g$h$
minLength has to be > 0
Lexicon correction requires non-empty token string.
The prefix length should be smaller than the candidate string length
The corrected entry string length must be greater than the length of the active prefix
The token prefix should be case-sensitive equal after lexicon correction
The token prefix should be case-insensitive equal after lexicon correction
%@: beginning update for result version %@.
%@: finished update for session %p. %ld item(s) available.
Failed to get stroke with id: %@ from stroke provider version %@
The input string (%@) contains one or more ligature private code points
%@ decoding failed. Token string and stroke indexes are required to be nonnull when constructing a result token
Model execution on CPU only: %d
Model batch size: %d
Falling back to a batch size of %u for usesCPUOnly == %d
Error loading recognition model: %@
Error model output data format not supported: %ld
Error creating MLFeatures: %@
Error, the number of results doesn't match the model batch size (usesCPUOnly == %u)
Error, the number of results doesn't match the data batch size (usesCPUOnly == %u)
Not-a-char codepoint (U+%04x) is being added to the filtered candidate results (activeCharacterSet is nil: %d)
Error for model prediction in CHNeuralNetwork::feedforward: %@
predictionResultsPtr is nullptr
Error for model prediction in CHNeuralNetwork::feedforwardFromBatches: %@
Unexpected prediction tensor dimension: %lu
Prediction tensor must be of dimension %ld instead of %lu for batch size different from 1
predictionsPointer == nullptr
Configuration for recognizer with mode=%@ and locale=%@ is not supported.
Error loading the static lexicon: %@
Error loading the secondary static lexicon: %@
Error loading the phrase lexicon: %@
Processing input as single character drawing with %lu segments
The number of segments (%lu) must be the same as the number of sorted segment indexes (%lu)
The number of nodes in the candidate network (%lu) should match the number of generated segments (%lu)
We must add at least one candidate for each edge
Batch contains %lu non classified drawings
There must be at least one valid path
Incorrect index in segment decoding: index %ld (idx %ld + offset %ld) should be smaller than %ld, the number of segments on the group.
The recognition model must be loaded before inference can be called on it
The text decoder must be loaded before decoding can be executed
Activation matrix retrieved from inference cache for config %@ and drawing %@.
Obtaining activation matrix by model inference for config %@ and drawing %@.
BEGIN "CHActivationMatrix"
CHActivationMatrix
END "CHActivationMatrix"
BEGIN "CHDecoding"
Using the CVNLP Text Decoder
Text decoding unexpectedly leads to empty result - falling back on single-character result from the activation matrix.
CHDecoding
END "CHDecoding"
The token activation range is longer than the sequence in the activation matrix.
Previous token stroke index set is empty, and current token %@ stroke index set is also empty
The first stroke index must be non-negative
CHRecognizer is running RNN recognition pipeline: %d
BEGIN "CHNextGenRecognition"
CHNextGenRecognition
END "CHNextGenRecognition"
BEGIN "CHPostProcessing"
CHPostProcessing
END "CHPostProcessing"
BEGIN "CHSegmentAndDecode"
CHSegmentAndDecode
END "CHSegmentAndDecode"
strokeProvider cannot be nil.
  Stroke provider change added %ld strokes, removed %ld strokes.
  Ignoring %ld added strokes that cannot enumerate their points.
StrokeProviderError: Inconsistency in stroke provider. Stroke with id %@ is exposed but this id can not be resolved by stroke provider version %@.
Stroke Grouping Logic Error: Failed to get stroke with id %@. The stroke is not exposed by stroke provider version %@.
retrieving stroke identifier gave nil result. Encoded stroke identifier: %@
timestep must be > 0
Stroke with no enumerable points found, recognition results may be affected. Stroke: %@
Drawing with no enumerable points found, recognition results may be affected. Drawing: %@
Removed %lu NaN-Points from %lu given points before calculating convex hull.
Removed %lu NaNs from %lu given values before calculating vector mean without outliers.
Warning: Less than %2.1f%% of the original points remain in the drawing after cleanup (before: %d, after: %d)
Error: computeSpatialFeaturesWithNoOverlapFromSparseBitmap: new bitmap size (%u) is larger than the original size (%u)
Error: computeSpatialFeaturesWithNoOverlapFromSparseBitmap: new bitmap size (%u) is equal to 0
Empty stroke detected during spatial resampling.
Error: readCharacter: filename ptr = 0
Error: readCharacter: Empty filename
Error: readCharacter: Wrong filename :%s:
Could not read data from file %@
%@ decoding failed. There was a problem decoding the stroke data.
At least one stroke index must be passed
Drawing unable to create folder at URL %@: Error %@
Drawing writeToFile saving drawing at URL %@, error = %@
Method can only be called on a single character string
isCharacterEmoji: character string doesn't match expectation of being single character with length (%lu)
isCharacterEmoji: codeCounts is 0 when data is encoded from character of length (%lu)
isCharacterEmoji: encoded data is invalid, null or empty, from character of length (%lu)
selectedTextRange %@ beyond text length %ld
activePreviewRange %@ beyond text length %ld
Invalid referenceSubstringRange %@
referenceSubstringRange %@ beyond text length %ld
Invalid referenceSubstringRange %@, length doesn't match string length %ld
The strokeCoveredTextRange %@ must be within the referenceSubstringRange %@
charRectsInReferenceSubstring cannot be NULL for referenceSubstringRange: %@
The referenceSubstring length must be equal to the range that it covers
Trying to get support for unsupported non-text candidate class.
Could not find a point in the drawing to match that in the resampled drawing
At least one stroke grouping strategy must be set.
Stroke Grouping with strategies [%@]. Added strokes: %ld, removed strokes: %ld
Use the designated initializer instead
Error: unexpected missing preferredLocale with competing locales %@, ordered locales %@, falling back on %@
There must be a preferred locale for the filtered results if there exists at least one result.
Filtering results for locale %s based on raw fitness score %.3f. (best score: %.3f, threshold: %.3f)
Filtering results for locale %s based on combined fitness score %.3f. (best score: %.3f, gap threshold: %.3f)
CHRemoteRecognitionRequest must be initialized with at least one locale
%@ decoding failed. Locale and drawing are required to be non-null and priority has to be valid.
CHRemoteRecognitionRequest unable to create folder at URL %@: Error %@
CHRemoteRecognitionRequest writeToFile saving drawing at URL %@, error = %@
The CHRemoteRecognitionRequest cannot be mutated after being submitted
hasBeenSubmitted state cannot be reverted after being set to YES
%@ decoding failed. Result token rows are required to be nonnull when constructing a request
Invalid index %ld when trying to replace a row from column with %lu rows.
Invalid index %ld when trying to remvove a row from column with %lu rows.
Cannot have nil strokeIdentifiers
No group found for stroke identifier %@, All strokes should belong to a group.
The strokes count in the drawing (%ld) must match the ones in the result (%ld).
The strokes count in the original drawing (%ld) must match the ones in the result (%ld).
Received nil target content info for target %@
Target content info is invalid, ignoring. referenceSubstring.length %ld != referenceSubstringRange.length %ld
Target content info is invalid, ignoring. selectedTextRange %@ invalid for length %ld
Target content info is invalid, ignoring. strokeCoveredTextRange %@ is not in range of referenceSubstringRange %@
Request for target content info timed out for target %@
There should be at least one substroke covering one of the strokeIdentifiers.
The number of points in the raw baseline estimate must be > 0 at this point.
Raw points[0] = %.2f, %.2f
Baseline Data detectors baseline approximation with %lu points, correction error = %.2f, number of substrokes %lu
The length of the computed path must be the same as the input
The length of the computed path must be one more than the input
%@: finished update for session %p. Length: %ld.%s
%@: finished update for session %p. Found %ld item(s).
Stroke index %ld in search result out of group stroke count %ld.
item should be of class CHSearchQueryItem: %@
CHTextInputGesture does not support the text correction type.
Gesture recognized with type %ld, range  = %ld,%ld
The affected range to be trimmed must be valid
Refined stroke ranges can only be computed for scribble, circle or polygon result types
The initial affected text range must be valid
Character range cannot be undefined.
The input string and range must be compatible with each other
Range %@ out of string length %ld
leadingExpansion cannot be negative: %ld
trailingExpansion cannot be negative: %ld
Character index %lu beyond bounds for string length: %lu
The searching range must be valid
There must be a valid character closest to the point
No characters found on either side of the vertical bar stroke
The drawing cannot be empty
The stroke covered range must be within the reference substring range
The computed character index (%li) must be valid in the string (length=%li)
An error occurred in the %@ model when extracting features: %@
An error occurred when trying to create feature provider for the %@ model: %@
An error occurred in the %@ model: %@
Unexpect rank of the CoreML output array: %lu
An error occurred in defining a new shape for the output: %@
Error in model %@. Expected output length: %lu, actual output length: %lu
Unable to initialize resultArray and create activation matrix.
An error occurred when trying to allocate feature array for the %@ model: %@
transcriptionPaths count (%ld) != scores count (%ld)
transcriptionPaths count (%ld) != probabilities count (%ld)
Found empty row when creating result with best path tokens. It indicates that the given paths don't cover the same strokes.
transcriptionPaths count (%ld) != probabilities count (%ld) after tokenized result is built
%@ decoding failed. Token columns, transcription paths, and scores are required to be nonnull and equal in size when constructing a text result
Original token not found in column %ld
The character range must be compatible with the top transcription
Error: Tokenized text result without any transcription path encountered when computing language fitness.
Found empty stroke index set for the last character segment.
TokenizedResult writeToFile saving drawing at URL %@, error = %@
Unexpected mismatched stroke indexes in result %@. Top result stroke index set contains %@. This alternative result stroke index set contains %@.
compressResult removed all columns.
Unexpected failure to find common stroke sets between top stroke sets %@ and other stroke sets %@.
Incompatible index sets have no partition of common index sets.
Error: LMLanguageModelConditionalProbabilityVector returns false
found an unknown stroke ID %@ to be removed in clutter filtering
clutter filter inconsistent status: %lu <==> %lu
clutter strokes: %lu, affected strokes: %lu, added strokes: %lu, removed strokes: %lu
Cannot find corresponding stroke ID given the item ID: %@
debug quicklook window MaxCell=%lu
debug quicklook window size=[%lu, %lu]
debug quicklook: grid range X=[%ld, %ld], Y=[%ld, %ld]
calling strokeIDsWithinRegionOfInterest() while clutter filter being in inconsistent status: %lu <==> %lu
An error occurred when loading a model: %@
Model not found ("%@")
Error loading Espresso model %@
Error selecting configuration %@ for Espresso model %@
Text class index not found in stroke classification codemap
Input too wide (%f): adjust with scale factor %f
An error occurred when trying to allocate the input mask array for the %@ model: %@
An error occurred when trying to allocate the input positional encodings for the %@ model: %@
Cancelling stroke classification of chunks
An error occurred in the %@ model during prediction
Unexpected number of strokes %lu to select the model configuration
Unexpected max number of points per stroke %lu to select the model configuration
Cancelling stroke classification
An error occurred in the %@ model when creating the input mask array: %@
An error occurred in the %@ model when creating the positional encodings array: %@
An error occurred selecting the espresso configuration of the %@ model
An error occurred setting the input to the %@ model
An error occurred binding the output of the %@ model
An error occurred executing the %@ model
An error occurred selecting the smallest espresso configuration of the %@ model
Stroke Grouping with strategy %@. Added strokes: %ld, removed strokes: %ld
Stroke Grouping with strategy %@ triggered with 0 strokes in the stroke provider.
Best split (%lu/%lu) has score %.3f, splitting threshold is %.3f
Best split not acceptable: %@
Attempt to create an empty stroke group.
SPLIT %lu/%lu: TS=%.3f, TT=%.3f, VD=%.3f, HD=%.3f, LT=%.3f, AR=%.3f, WD=%.3f, TF=%.3f, HS=%.3f, MH=%.3f, SC=%.3f, AL=%.3f
At least one stroke is needed to calculate accumulated time differences
Could not find stroke for id: %@
Use designated initializer instead
The preferred locales list cannot be empty.
Recognition tasks can only be executed once: %@
delegate cannot be nil when the task starts
BEGIN "CHSessionTaskStrokeClassification"
CHSessionTaskStrokeClassification
END "CHSessionTaskStrokeClassification"
Ran stroke classification in duration = %3.6f seconds
BEGIN "CHSessionTaskAccurateGrouping"
CHSessionTaskAccurateGrouping
END "CHSessionTaskAccurateGrouping"
Grouping algorithm not implemented: %ld
Recognition task almost finished, waiting for explicit overhead of %0.1fs.
strokeGroupingResult cannot be nil for a non-cancelled task.
Invalid status transition from %ld to %ld.
Recognition results for version %@:
GroupingOnly option selected. Skipping the recognition and performing grouping only.
Beginning recognizer request for stroke group %ld, locale %@
Finished recognizer request for stroke group %ld, locale %@. Duration: %0.3f
CHTokenizedTextResult is nil
Recognizer finished for stroke group %ld, duration: %0.3fs
Running remote recognition
Remote Recognition error: %@
Running local recognition
Failed to run recognition on sub-drawing after %li attempts
Remote call to compute transcription paths error: %@
Recognition successful using %li sub-drawings
%@: finished update for session %p, version %@. %ld item(s) available.
item should be of class CHTextInputQueryItem: %@
Found %lu strokes in the data detected content but only %lu strokes in the entire stroke group: %@. Found stroke indexes: %@
The last stroke index found in the data detected content (#strokes=%lu) should be within the scope of the strokeIDs array (#strokes=%lu)
The stroke indexes matching data detected content should be non-empty [%@]
item should be of class CHDataDetectorQueryItem: %@
item should be of class CHPrefixQueryItem: %@
CHRemoteRecognizer must be initialized with at least one locale
Remote connection to handwritingd was interrupted
Remote connection to handwritingd was invalidated
A locale is required to build the remote recognition request
An XPC proxy service error occurred: %@
Error during recognition: %@
XPC connection must be non-nil
%@ serialize drawing to %@/%@, 
%@ serialize request to %@/%@, 
%@ skipping serialization of nil drawing. Error = %@
%@ serialize recognition result to %@/%@, 
%@ skipping serialization of nil result. Error = %@
EspressoModelWrapper::~EspressoModelWrapper Error destroying model
EspressoModelWrapper::initialize Error creating context
EspressoModelWrapper::initialize Error creating plan
EspressoModelWrapper::initialize Error loading model
EspressoModelWrapper::initialize Error buidling plan
EspressoModelWrapper::destroy Error destroying plan
EspressoModelWrapper::destroy Error destroying context
EspressoModelWrapper::setInput Error setting input buffer shape
EspressoModelWrapper::setInput Error binding input buffer
EspressoModelWrapper::bindOutput Bind static buffer but output is dynamic
EspressoModelWrapper::bindOutput Error binding output buffer
EspressoModelWrapper::selectConfiguration Error cleaning current plan
EspressoModelWrapper::selectConfiguration Error selecting configuration
EspressoModelWrapper::selectConfiguration Error building Espresso plan
EspressoModelWrapper::execute Error executing model
Error: unable to mmap resource %s
Error: Index %lu out of bounds of the code map %lu symbols
Use initWithRecognitionSession: instead.
Cannot activate an already active visualization
%@: start for session %p
%@: pause
%@: result changed, will dispatch to main queue to notify the delegate.
%@: result changed, but cannot notify delegate. queryActive: %@, delegate %p.
Empty alphashape from ink with %lu strokes and %lu points.
No or empty transcription. TextLineStraightening not possible.
Empty alphashape from img.
Recognizer configuration needs to be defined
decodingCharacterLMWeight from override weights: %@
decodingWordLMWeight from override weights: %@
decodingLexiconWeight from override weights: %@
decodingLexiconLowerBoundLogProbability from override weights: %@
characterLMLowerBoundLogProbability from override weights: %@
decodingWordLMLowerBoundLogProbability from override weights: %@
shouldSkipLatinActivation from override weights: %@
Synchronization queue can not be nil when async loading language models.
Recognizer can not be nil when async loading language models.
Failed to load n-gram model from TextRecognition.framework at location %@ with error %@
Resource for transliteration map not found for locale "%@" (script=%lu, language=%lu) with resource path "%s"
not supported
configuration locale %@, effective language %@, recognition engine %@
An error occurred when loading the CTC model %@
CHRecognizer is running rnn character language model: %d
Error when merging equivalent edges: index out of bounds
found paths with incompatible number of segments covered from %zu to %zu: previous value %lu, value for new path %zu 
Inconsistent network structure: edge with start node %zu belong in output edges of node %zu 
Unsupported Network Version %s
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 3Gram!
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 2Gram!
Error: unable to reallocate memory for path expansion.
Queue setup can only be performed once.
Configuring RecognitionSession %p with preferred locales: %@. Effective locales: %@.
stroke provider visible strokes %lu
RecognitionSession %p received needsRecognitionUpdate request. Will trigger processing soon.
dataSource %@ returned a nil strokeProviderSnapshot.
RecognitionSession %p cannot process needsRecognitionUpdate request. dataSource: %@, text recognition locales: %@.,  preferred locales: %@.
RecognitionSession %p cancelOngoingRequests. Cancelling %ld pending tasks. hasUnprocessedChanges %@->N. Last saved result for version: %@
RecognitionSession %p received request to rebuild recognition results. Stroke provider version: %@
RecognitionSession %p rebuilding recognition results. Cleared previous results. Will trigger processing soon.
RecognitionSession %p cannot process rebuildRecognitionResults request. dataSource: %@, text recognition locales: %@, preferred locales: %@.
latestStrokeProvider cannot be nil when scheduling change processing.
RecognitionSession %p enqueueing recognition task for version %@.
RecognitionSession %p canceling pending task for version %@, superseded by request for version %@.
RecognitionSession %p trying to process changes, but there are no text recognition locales. Only grouping will be performed
RecognitionSession %p starting task for version: %@.
RecognitionSession %p finished task for version: %@. Duration: %0.3fs (%0.3fs G, %0.3fs R). Groups: %ld, created: %ld, deleted: %ld.
RecognitionSession %p finished task for version: %@. Cancelled: %s. Produced result: %s.
Unimplemented
RecognitionSession %p has been serialized with preferredLocales: %@, recognitionEnvironment: %ld, priority: %ld, and lastRecognitionResult.
Last recognition result not loaded because session result version %ld does not match the current result version %ld.
RecognitionSession %p has been deserialized with preferredLocales: %@, recognitionEnvironment: %ld, priority: %ld, and lastRecognitionResult.
Nil RecognitionSession has been returned because session version %ld does not match the current session version %ld.
Requested creating in-process recognizer with %ld locales. Only the top one will be honored: %@
Visible stroke count: %lu, Ordered stroke count: %lu lastRecognitionResultIsValid: %d, _lastRecognitionResult: %p
Using last accurate results for tokenStrokeIdentifiersForContextStrokes results
Last accurate results for tokenStrokeIdentifiersForContextStrokes don't match visible strokes
Visible strokes not available in the stroke provider for fast grouping. Falling back on the ordered strokes.
Cached fast grouping line clusters not available. Computing line clusters on %lu strokes
Cached clutter filter not available. Creating new clutter filter
Using cached clutter filter for grouping query
Fast grouping duration: %2.2f seconds
Using cached fast grouping line clusters for grouping query
The tokenization level must be CHStrokeTokenizationLevelStroke to be compatible with fastGroupingResult=nil
CHStrokeTokenizationLevelStroke requested, so avoiding any clustering or grouping
Canceling tokenStrokeIdentifiersForContextStrokes request
foundStrokeIdentifiers is nil
A cached result must exist when calling _strokeIdentifiersFromCachedResultUsingContextStrokes:tokenizationLevel:
A cached result must exist when calling _contextualTextResultsFromCachedResultUsingContextStrokes:shouldCancel:
RecognitionSession %p starting high responsiveness task for version: %@.
contextualTextResultsForContextStrokes
Context results must be non-nil
The original and rescaled drawings should have equal stroke counts
The original and rescaled drawings should have equal total point counts
Expected nil or valid tokenized result as output of CHTextCorrectionRecognizer.
Invalid stroke covered range when recognizing editing gesture. %@
Cannot recognize editing gesture for drawing with %ld strokes.
Anchor point has a dummy large value, resetting to zero.
SpaceBehavior: %li
Unexpected number of token columns in text result refinement for single character mode. Expected 1 token column, got %lu
doesIntersectNoSpaceRegion: %i isContainedInPaddedNoSpaceRegion: %i
Method can only be called on a single character string: %@
Stroke group can't be nil and must be of CHTextLineStrokeGroup class.
There must be at least one substroke in the input for the coalescing algorithm.
Running stroke classification over %ld strokes
Index %ld out of bounds in normalized image for container support calculation.
Canceling agglomerative clustering results computation
%lu clusters found by the fast grouping algorithm
Canceling line cluster results computation
Fast grouping result must exist for the requested tokenization type
groupingResultForContextStrokes: %lu words found
Invalid stroke index %ld
%@: finished update for session %p. indexableContent length: %ld
%@ unexpectedly modified original tokens: "%@" -> "%@"
Number of corrected and raw tokens must match: %lu != %lu.
CHPreserveOriginalRecognitionStep is running
The best token index %ld is not contained in the returned tokens range %d, %ld
CHLexiconCorrectionStep is running with autoCapitalizationMode: %@
CHTransliterateHalfWidthPunctuationStep is running
CHOpeningClosingCharacterMatchingStep is running
CHSemanticTokenizerStep is running
wordID count %lu should match wordRangesInString count %lu
growingToken should not be nil
CHIdentifyLowAlignmentConfidenceColumnsStep is running
CHIdentifyLowAlignmentConfidenceColumnsStep unexpectedly decreased the changeable token column count.
CHCleanUpSpacesStep is running
CHCandidateRefinementStep is running
CHRemoveSpacesFromStrongURLsAndEmailsStep is running
CHRemoveSpacesFromStrongURLsStep range: %@ stringLength: %li isEmail: %i isUrl: %i
CHRemoveSpacesFromSpecialFieldsStep is running
CHRemoveSpacesFromHashtagsAndMentionsStep is running
CHRemoveSpacesFromEnglishAndKoreanParticlesStep is running
CHTransliterateChineseJapaneseStep is running
CHTransliterateConfusableCharactersStep is running
CHTransliterateIsolatedConfusableCharactersStep is running
CHReorderSCTCConfusionStep is running
CHMultiWordOVSFilteringStep is running
CHNumberFieldResultReorderingStep is running
CHMarkNoWhiteSpaceColumnsChangeableStep is running
CHJapaneseTokenizationAndConversionStep is running
At least one phrase should be returned in Mecabra tokenization and conversion step.
At least one candidate should be returned for each phrase in Mecabra tokenization and conversion step.
CHPutOriginalRecognitionResultFirstStep is running
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/CoreText.framework/CoreText
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/CoreText.framework/CoreText
CHClassifiableDrawing
CHLanguageUtilities
CHStrokeGroupQuery
CHStrokeGroupQueryItem
CHStrokeGroupingStrategy
SubclassesToOverride
CHEncodedStrokeIdentifier
NSCopying
NSSecureCoding
NSCoding
CHTokenizedTextResultToken
NSMutableCopying
Private
CHMutableTokenizedTextResultToken
CHTokenizedStrokeResult
CHRecognizerOptions
CHRecognizer
CHRecognizing
NSObject
Insight
CHDrawingContext
CHStrokeUtilities
CHRecognitionInsightRequest
CHRecognitionInsight
Internal
CHDrawing
CHCutPoint
CHSegmentDescriptor
CHDrawingSegmentGroup
CHStrokeGroupBaselineVisualization
CHTextInputScriptSpec
CHTextInputTargetContentInfo
CHMutableTextInputTargetContentInfo
CHNonTextCandidateStroke
CHMutableNonTextCandidateStroke
CHCornerDetector
CHMergedStrokeGroupingResults
CHStrokeGroupingManager
CHTextInputProtoSettings
CHTextStrokeTransformationQuery
CHNormalizedDrawingVisualization
CHNormalizedDrawingAllVisualization
CHRecognitionSessionResult
CHStrokeClassificationResult
CHStrokeGroupingResult
CHStrokeGroupRecognitionResult
CHStrokeGroupTextCorrectionResult
CHRemoteRecognitionRequest
CHTokenizedTextResultColumn
CHMutableTokenizedTextResultColumn
CHRecognizerResultCache
CHStrokeGroup
CHRecognitionSessionTextInputTask
CHTextInputTarget
CHTextLineStrokeGroup
CHTitleQuery
CHSingletonMLModel
CHRecognitionResult
CHTextRecognitionResult
CHSketchRecognitionResult
CHLineSketchRecognitionResult
CHManhattanLineSketchRecognitionResult
CHOutlinedArrowSketchRecognitionResult
CHRectangleSketchRecognitionResult
CHTriangleRecognitionResult
CHEllipseRecognitionResult
CHChatBubbleRecognitionResult
CHStarRecognitionResult
CHPentagonRecognitionResult
CHScribbleRecognitionResult
CHHeartRecognitionResult
CHCloudRecognitionResult
CHFreeformRecognitionResult
CHSubstrokeBoundsVisualization
CHStrokeGroupingVisualization
CHSearchQuery
CHSearchQueryItem
CHVisualization
CHPointFIFO
CHPointStrokeFIFO
CHBoxcarFilterPointFIFO
CHQuadCurvePointFIFO
CHStrokePointsVisualization
CHTextInputGesture
CHTextInputInsertionCaretGesture
CHCTCRecognitionModel
CHTokenizedTextResult
CHMutableTokenizedTextResult
CHSpellCheckerErrorModel
CHSpellChecker
CHStrokeClutterFilter
CHRecurrentNeuralNetwork
CHRecurrentNeuralNetworkCoreML
CHStrokeClassificationModel
CHTopDownStrokeSplit
CHOrderedStrokeGroup
CHTopDownStrokeGroupingStrategy
CHTimeWindowStrokeGroup
CHTimeWindowStrokeGroupingStrategy
CHRecognitionSessionTask
CHMultiLocaleResultProcessor
CHTextInputQuery
CHTextInputQueryItem
CHDataDetectorQuery
CHDataDetectorQueryItem
CHPrefixQueryItem
CHPrefixQuery
CHSubstroke
CHSubstrokePlacement
CHStrokeGroupClassificationVisualization
CHPolygon
CHStrokeGroupBasedVisualization
CHRemoteRequestProtocol
CHRemoteRecognizer
CHVisualizationManager
CHStrokeGroupBasedVisualizationDelegate
CHVisualizationDelegate
CHRecognitionSessionObserver
CHTranscriptionQuery
CHQuery
RecognitionSessionObserver
ForSubclasses
CHContextualTextResult
CHContextualTextResults
CHTextLineStraightener
CHStringOVSChecker
CHTextCorrectionResult
CHRecognizerConfiguration
CHStrokeVisualization
CHGroupBoundsVisualization
CHRecognitionSessionVersion
CHRecognitionSession
CHRecognitionSessionTextInputTaskDelegate
CHRecognitionSessionTaskDelegate
CHTextCorrectionRecognizer
CHCharacterSetRules
CHBottomUpStrokeGroupingResult
CHBottomUpStrokeGroupingStrategy
MutableCopying
CHMutableStrokeClassificationResult
CHStrokeClassifier
CHActivationMatrix
CHFastStrokeGroupingStrategy
CHStrokeGroupBaselineLegacyVisualization
CHIndexableContentQuery
CHRecognitionSessionIndexableContent
CHStrokeFastGroupingResult
NetworkCursor
CHPatternNetwork
CHContextualCharacterTransliteration
CHMecabraWrapper
CHResultWithContext
CHPostProcessingManager
CHPostprocessingStep
CHPostprocessingStepModifyingOriginalTokens
CHTextFieldTypeSwitchStep
CHPreserveOriginalRecognitionStep
CHLexiconCorrectionStep
CHTransliterateHalfWidthPunctuationStep
CHOpeningClosingCharacterMatchingStep
CHSemanticTokenizerStep
CHIdentifyLowAlignmentConfidenceColumnsStep
CHCleanUpSpacesStep
CHCandidateRefinementStep
CHRemoveSpacesFromStrongURLsAndEmailsStep
CHRemoveSpacesFromSpecialFieldsStep
CHRemoveSpacesFromHashtagsAndMentionsStep
CHRemoveSpacesFromEnglishAndKoreanParticlesStep
CHTransliterateChineseJapaneseStep
CHTransliterateConfusableCharactersStep
CHTransliterateIsolatedConfusableCharactersStep
CHReorderSCTCConfusionStep
CHMultiWordOVSFilteringStep
CHNumberFieldResultReorderingStep
CHMarkNoWhiteSpaceColumnsChangeableStep
CHJapaneseTokenizationAndConversionStep
CHCyrillicRecoverConfusableWordsStep
CHPutOriginalRecognitionResultFirstStep
CHRecognizerInferenceCache
CoreHandwriting
CHExtensions
numberWithUnsignedInteger:
numberWithUnsignedLong:
strides
rangeValue
scanHexInt:
bytes
exemplarCharacterSet
setRemoteObjectInterface:
dictionary
scanString:range:configuration:
containsIndex:
objectAtIndex:
cStringUsingEncoding:
stringByAppendingFormat:
absoluteString
dictionaryForKey:
containsIndexes:
objectAtIndexedSubscript:
insertObject:atIndex:
stringByAppendingPathComponent:
dictionaryWithCapacity:
minusSet:
activationRange
containsObject:
scannerWithString:
objectForKey:
symbolCharacterSet
insertString:atIndex:
stringByAppendingPathExtension:
initWithMultiArray:domainType:characterObservations:blankIndex:pruningPolicy:
unsignedIntValue
dictionaryWithDictionary:
objectForKeyedSubscript:
synchronousRemoteObjectProxyWithErrorHandler:
dictionaryWithObjects:forKeys:count:
stringByAppendingString:
scriptCode
initWithMultiArray:indexArray:domainType:characterObservations:blankIndex:pruningPolicy:
unsignedIntegerValue
indexAtPosition:
containsString:
intValue
candidates
objectsAtIndexes:
dictionaryWithObjectsAndKeys:
systemFontOfSize:
stringByApplyingTransform:reverse:
unsignedLongValue
containsValueForKey:
integerValue
objectsPassingTest:
capitalizedString
stringByDeletingLastPathComponent
initWithObjects:
indexOfObject:
caseInsensitiveCompare:
terminatingCharacter
stringByDeletingPathExtension
interfaceWithProtocol:
keysOfEntriesPassingTest:
indexOfObjectIdenticalTo:
setSpotlightSuggestionsEnabled:
category
orderedSetWithArray:
indexOfObjectPassingTest:
stringByFoldingWithOptions:locale:
orderedSetWithCapacity:
addCharactersInRange:
stringByPaddingToLength:withString:startingAtIndex:
indexPathByAddingIndex:
languageCode
intersectsIndexesInRange:
stringByReplacingCharactersInRange:withString:
addCharactersInString:
indexPathByRemovingLastIndex
featureValueForName:
intersectsSet:
stringByReplacingOccurrencesOfString:withString:
indexPathWithIndex:
fetchContentInfoForTextInputTarget:strokeIdentifiers:completion:
invalidate
stringByTrimmingCharactersInSet:
addEntriesFromDictionary:
indexPathWithIndexes:length:
invertedSet
fileExistsAtPath:
addIndex:
indexSet
languageModel
controlCharacterSet
fileURLWithPath:
addIndexes:
languageResourceBundle
indexSetWithIndex:
fillWithNumber:
addIndexesInRange:
UUID
initWithScannerType:passiveIntent:
indexSetWithIndexesInRange:
URLWithString:
distantPast
filterUsingPredicate:
textInputTargetForItemStableIdentifier:strokeIdentifiers:
addObject:
doubleValue
stringFromDate:
copy
lastIndex
indexesOfObjectsPassingTest:
stringWithCString:encoding:
addObjectsFromArray:
setActivationMatrix:
lastObject
drawInRect:withAttributes:
orthographyWithDominantScript:languageMap:
stringWithCharacters:length:
uppercaseLetterCharacterSet
lastPathComponent
multiArrayConstraint
uppercaseString
outputDescriptionsByName
firstIndex
stringWithFormat:
initWithShape:dataType:error:
multiArrayValue
uppercaseStringWithLocale:
firstObject
mutableCopy
stringWithString:
stringWithUTF8String:
urlificationRange
setValue:forKey:
strokeAttributes
count
setWithArray:
countByEnumeratingWithState:objects:count:
setWithCapacity:
floatForKey:
setByAddingObjectsFromSet:
initWithString:
countForObject:
floatValue
setWithObject:
isEqualToArray:
allKeys
initWithString:attributes:
value:withObjCType:
setWithObjects:
valueWithBytes:objCType:
initWithArray:
isEqualToData:
setWithSet:
allObjects
length
countryCode
valueWithNonretainedObject:
initWithArray:copyItems:
JSONObjectWithData:options:error:
valueWithPoint:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
setClasses:forSelector:argumentIndex:ofReply:
lengthOfBytesUsingEncoding:
initWithAttributedString:
isEqualToDictionary:
valueWithRange:
letterCharacterSet
strokeForIdentifier:
allValues
setCompletedUnitCount:
characterAtIndex:
isEqualToIndexSet:
allocWithZone:
UUIDString
characterIsMember:
formIntersectionWithCharacterSet:
alphanumericCharacterSet
initWithBytes:length:encoding:
formUnionWithCharacterSet:
initWithCGImage:
isEqualToNumber:
timeIntervalSinceNow
setDateFormat:
appendAttributedString:
initWithCVNLPLanguageModel:locale:decodingWeight:lowerBoundLogProbability:
fullString
timeIntervalSinceReferenceDate
appendFormat:
timestepCount
currentProgress
initWithCapacity:
appendString:
initWithCommitActionBehavior:scoringFunction:beamWidth:pathCount:shouldOptimizeAlignment:pruneProblematicMixedScriptWordPaths:
characterSetWithCharactersInString:
shape
visualizationManager:needsDisplayInRect:
initWithComputeUnits:
characterSetWithRange:
visualizationManagerNeedsDisplay:
data
precomposedStringWithCanonicalMapping
isEqualToSet:
lmSPIType
isEqualToString:
predicateWithBlock:
dataPointer
getBytes:length:
shiftIndexesStartingAtIndex:by:
encodeBool:forKey:
initWithDataPointer:shape:dataType:strides:deallocator:error:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
encodeDouble:forKey:
dataType
initWithDictionary:copyItems:
encodeFloat:forKey:
archivedDataWithRootObject:requiringSecureCoding:error:
initWithDictionary:error:
dataUsingEncoding:
sizeWithAttributes:
whiteColor
getCharacters:
checkResourceIsReachableAndReturnError:
strokeIdentifierFromData:
encodeInt32:forKey:
localeIdentifier
dataWithBytes:length:
encodeInteger:forKey:
setInterruptionHandler:
whitespaceAndNewlineCharacterSet
dataWithContentsOfFile:
localeWithLocaleIdentifier:
getIndexes:
array
encodeObject:forKey:
setInvalidationHandler:
whitespaceCharacterSet
dataWithJSONObject:options:error:
getIndexes:range:
arrayByAddingObjectsFromArray:
sleepForTimeInterval:
date
arrayWithArray:
encodedStrokeIdentifier:
arrayWithCapacity:
removeAllIndexes
sortDescriptorWithKey:ascending:
arrayWithObject:
localizedDescription
removeAllObjects
decimalDigitCharacterSet
sortDescriptorWithKey:ascending:comparator:
UTF8String
arrayWithObjects:
initWithHistory:activeRange:
decodeBoolForKey:
localizedStringForKey:value:table:
tokens
getValue:
removeCharactersInString:
arrayWithObjects:count:
setMaxComputationBatchSize:
newlineCharacterSet
decodeDoubleForKey:
sortUsingComparator:
removeIndex:
getValue:size:
longCharacterIsMember:
removeIndexes:
sortWithOptions:usingComparator:
decodeFloatForKey:
isFinished
progressWithTotalUnitCount:
decodeInt32ForKey:
removeLastObject
sortedArrayUsingComparator:
initWithIndexSet:
progressWithTotalUnitCount:parent:pendingUnitCount:
setNeedsDisplayInRect:
decodeIntegerForKey:
lowercaseLetterCharacterSet
removeObject:
sortedArrayUsingDescriptors:
decodeObjectOfClass:forKey:
lowercaseString
removeObjectAtIndex:
sortedArrayUsingSelector:
initWithIndexes:length:
strokeProviderSnapshot
removeObjectForKey:
lowercaseStringWithLocale:
nonretainedObjectValue
decodeObjectOfClasses:forKey:
sortedArrayWithOptions:usingComparator:
setObject:atIndexedSubscript:
removeObjectsAtIndexes:
initWithLMLanguageModel:locale:decodingWeight:lowerBoundLogProbability:
totalUnitCount
setObject:forKey:
removeObjectsInRange:
writeToURL:options:error:
mainBundle
punctuationCharacterSet
initWithLanguageResourceBundle:
setObject:forKeyedSubscript:
subarrayWithRange:
replaceCharactersInRange:withString:
initWithLexicon:priority:
subdataWithRange:
replaceObjectAtIndex:withObject:
initWithLexicons:characterLanguageModel:wordLanguageModel:
substringFromIndex:
replaceOccurrencesOfString:withString:options:range:
decodingResultWithConfiguration:withContext:
matchedString
isMainThread
initWithLexicons:decodingWeight:lowerBoundLogProbability:inputNormalizationFunction:
substringToIndex:
substringWithRange:
compare:options:
enumerateIndexesUsingBlock:
spellServer:findMisspelledWordInString:language:wordCount:countOnly:correction:
enumerateKeysAndObjectsUsingBlock:
spellServer:suggestGuessDictionariesForWordRange:inString:language:options:errorModel:
resignCurrent
compareOrderOfStrokeWithIdentifier:toStrokeWithIdentifier:
enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:
spellServer:suggestGuessesForWordRange:inString:language:options:
enumerateObjectsUsingBlock:
becomeCurrentWithPendingUnitCount:
standardUserDefaults
defaultCommitActionBehaviorForLocale:
completedUnitCount
queryDidUpdateResult:
hasPrefix:
initWithMachServiceName:options:
componentsJoinedByString:
initWithUsesCPUOnly:
enumeratePointsWithTimestep:usingBlock:
maximumLengthOfBytesUsingEncoding:
componentsSeparatedByCharactersInSet:
rangeOfCharacterFromSet:
numberWithBool:
enumerateRangesUsingBlock:
defaultPathScoringFunctionForLanguageResourceBundle:
componentsSeparatedByString:
rangeOfCharacterFromSet:options:
numberWithDouble:
enumerateSubstringsInRange:options:usingBlock:
hasSuffix:
boolForKey:
resume
rangeOfCharacterFromSet:options:range:
boolValue
numberWithFloat:
rangeOfComposedCharacterSequenceAtIndex:
type
inputDescriptionsByName
numberWithInt:
unarchivedObjectOfClass:fromData:error:
isSubsetOfSet:
numberWithInteger:
rangeOfComposedCharacterSequencesForRange:
rangeOfString:
numberWithLong:
isSupersetOfSet:
rangeOfString:options:
unionSet:
numberWithUnsignedInt:
rangeOfString:options:range:
URLByAppendingPathComponent:
CGImage
exchangeObjectAtIndex:withObjectAtIndex:
init
initWithDrawing:characterSet:expandCodePoints:normalizationContext:maxCandidateCount:
drawing
characterSet
expandCodePoints
normalizationContext
maxCandidateCount
.cxx_destruct
_expandCodePoints
_drawing
_characterSet
_maxCandidateCount
_normalizationContext
T@"CHDrawing",R,N,V_drawing
T@"NSCharacterSet",R,N,V_characterSet
TB,R,N,V_expandCodePoints
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_normalizationContext
TQ,R,N,V_maxCandidateCount
normalizeLMTokenIDForWord:tokenID:isFromPattern:score:wordLanguageModel:
tokensRangesForString:outTokenIDs:wordLanguageModel:
splitStringIntoSubtokensForLexicon:minLength:
findPartialMatchInPhraseLexicon:token:contextBeforeToken:
transliterateStringUsingICUTransliterator:_icuTransliterator:
transformString:usingConfusions:
transformLatinToCyrillic:
transformCyrillicToLatin:
tokenIDForString:withLexicon:
characterLMLogProbabilityForString:characterLM:
isMecabraConversionCandidateAllowed:
mecabraTokenizationAndKanaConversionForString:mecabraEngine:contextRef:leftCandidateRef:alternativeCandidateLimit:
shouldCapitalizeGivenHistory:shouldAutoCapitalizeSetting:locale:
computeEditPenalizationFromString:toReferenceString:withSuffix:withCaseSensitivity:withFirstLetterCaseSensitivity:withDiacriticSensitivity:withDiacriticsCharSet:withConsumableStrokesCharSet:outputSuffix:lexiconExtraCharacters:firstLetterCaseFlipped:
lexiconCorrectionsForToken:locale:lexicon:lmVocabulary:ovsStringChecker:textReplacements:consumableStrokesSet:minimumTokenScore:activeHistoryRange:outBestTokenScore:shouldCapitalizeWord:shouldSkipEntryCorrection:allowFullCapsCorrections:minimalLengthForLowConfidenceCorrections:lowConfidenceThreshold:minimalLengthForCustomCapitalizationCorrections:outBestTokenIndex:outFoundTokenInLexicon:outFoundCaseMatchingTokenInLexicon:outCorrectionFromOutOfContextEntry:
spellCheckerCorrectionsForToken:spellChecker:wordLanguageModel:locale:
q_updateQueryResult
q_strokeGroupItemsFromSessionResult:
q_itemTypeForStrokeGroup:recognitionResult:
tokenizedStrokeResultForInitialStrokes:point:tokenizationLevel:
tokenizedStrokeResultForInitialStrokes:point:tokenizationLevel:completion:shouldCancel:
strokeGroupItems
_setStrokeGroupItems:
debugName
strokeGroupItemsByID
_setStrokeGroupItemsByID:
_strokeGroupItems
_strokeGroupItemsByID
T@"NSArray",C,N,S_setStrokeGroupItems:,V_strokeGroupItems
T@"NSDictionary",C,N,S_setStrokeGroupItemsByID:,V_strokeGroupItemsByID
description
descriptionForStrokeGroupQueryItemType:
initWithStrokeGroupIdentifier:stableIdentifier:strokeIdentifiers:type:preferredLocale:tokenizedTextResultsByLocale:errorsByLocale:
textRecognitionResultForLocale:error:
strokeGroupIdentifier
strokeGroupStableIdentifier
strokeIdentifiers
strokeGroupType
preferredLocale
_tokenizedTextResultsByLocale
_errorsByLocale
_strokeGroupIdentifier
_strokeGroupStableIdentifier
_strokeIdentifiers
_strokeGroupType
_preferredLocale
__tokenizedTextResultsByLocale
__errorsByLocale
T@"NSDictionary",R,C,N,V__tokenizedTextResultsByLocale
T@"NSDictionary",R,C,N,V__errorsByLocale
T@"NSNumber",R,N,V_strokeGroupIdentifier
T@"NSNumber",R,N,V_strokeGroupStableIdentifier
T@"NSArray",R,C,N,V_strokeIdentifiers
Tq,R,N,V_strokeGroupType
T@"NSLocale",R,C,N,V_preferredLocale
initWithStrokeProvider:
strategyIdentifier
strokesForIdentifiers:
getFirstStrokeIdentifier:lastStrokeIdentifier:inGroup:addingStrokeIdentifiers:removingStrokeIdentifiers:
strokeGroupFromGroup:addingStrokes:
strokeProvider
_strokeProvider
T@"<CHStrokeProvider>",R,N,V_strokeProvider
T@"NSString",R,N
updatedGroupingResult:byAddingStrokes:removingStrokeIdentifiers:stableStrokeIdentifiers:allSubstrokesByStrokeIdentifier:withCancellationBlock:
recognizableDrawingForStrokeGroup:translationVector:originalDrawing:orderedStrokesIDs:rescalingFactor:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithData:
hash
isEqual:
isEqualToCHEncodedStrokeIdentifier:
encodedStrokeIdentifier
_savedHash
_encodedStrokeIdentifier
T@"NSData",R,N,V_encodedStrokeIdentifier
tokenWithString:strokeIndexes:wordID:recognitionScore:combinedScore:alignmentScore:properties:substrokeCount:bounds:
mutableCopyWithZone:
initWithString:strokeIndexes:wordID:recognitionScore:combinedScore:alignmentScore:properties:substrokeCount:bounds:
heuristicTextScore
isEquivalentToToken:
isEqualToTokenizedTextResultToken:
string
strokeIndexes
wordID
_string
_strokeIndexes
_wordID
_recognitionScore
_combinedScore
_alignmentScore
_properties
_substrokeCount
_bounds
TI,R,N,V_wordID
T@"NSString",R,C,N,V_string
T@"NSIndexSet",R,C,N,V_strokeIndexes
recognitionScore
combinedScore
alignmentScore
bounds
properties
substrokeCount
Td,R,N
TQ,R,N
Tq,R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
setString:
setStrokeIndexes:
setWordID:
setRecognitionScore:
setCombinedScore:
setAlignmentScore:
setProperties:
setSubstrokeCount:
setBounds:
appendToken:
T@"NSString",C,D,N
T@"NSIndexSet",C,D,N
TI,D,N
Td,D,N
TQ,D,N
Tq,D,N
T{CGRect={CGPoint=dd}{CGSize=dd}},D,N
initWithStrokeIdentifiers:resultLevel:
resultLevel
_resultLevel
Tq,R,N,V_resultLevel
T@"NSSet",R,C,N,V_strokeIdentifiers
enableCachingIfAvailable
setEnableCachingIfAvailable:
enableGen2ModelIfAvailable
setEnableGen2ModelIfAvailable:
enableGen2CharacterLMIfAvailable
setEnableGen2CharacterLMIfAvailable:
_enableCachingIfAvailable
_enableGen2ModelIfAvailable
_enableGen2CharacterLMIfAvailable
TB,N,V_enableCachingIfAvailable
TB,N,V_enableGen2ModelIfAvailable
TB,N,V_enableGen2CharacterLMIfAvailable
dealloc
isLocaleSupported:withMode:
_updatePrecedingAndTrailingSeparatorsForTopCandidate:history:textAfter:locale:outTrailingSeparator:inFirstTokenHasPrecedingSpace:outFirstTokenHasPrecedingSpace:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithMode:locale:
recognitionMode
contentType
setContentType:
autoCapitalizationMode
setAutoCapitalizationMode:
autoCorrectionMode
setAutoCorrectionMode:
locale
maxRecognitionResultCount
setMaxRecognitionResultCount:
activeCharacterSet
setActiveCharacterSet:
minimumDrawingSize
setMinimumDrawingSize:
Ti,R,N
Ti,N
T@"NSLocale",R,C,N
TQ,N
T@"NSCharacterSet",&,N
T{CGSize=dd},N
TB,R,N
initWithType:mode:locale:learningDictionaryURL:
initWithMode:locale:recognizerOptions:
initWithMode:locale:learningDictionaryURL:
initWithMode:locale:learningDictionaryURL:recognizerOptions:
initWithType:mode:learningDictionaryURL:
strokeIndexesForLastCharacter
_defaultPunctuationStringsOutputScores:maxCandidateCount:
_defaultLegacyPunctuationResultsWithStrokeCount:
_defaultPunctuationResultWithStrokeCount:
isOVSString:
transliterationVariantsForString:
_transliterationVariantsForString:
_alternativeInterpretationsForString:
_loadMecabraIfNeeded
_reloadEngineAndResources
_initializePostProcessor
_initializeMergedResultPostProcessor
_initializeTextDecoder
_isLocaleSupported:
_unloadEngineAndResources
_safelyUnloadEngineAndResources
updateAddressBookLexicon:
updateUserDictionaryLexicon:
updateMecabraWithRegionalOTAAssets:nonRegionalOTAAssets:
setCustomLexicon:customVocabulary:
setCustomPhraseLexicon:
setTextReplacements:
_updateWordLanguageModel:
candidateAccepted:
completionsForCandidate:prefix:option:
completionsForCandidate:candidateContext:prefix:option:
whitelistMecabraRareCharacters
isRareChineseEntry:
mecabraRareWordIndexes:wordRanges:
initWithType:mode:
initWithType:mode:locale:
sketchDescriptionForCode:
sketchCodeForDescription:
supportedCharacterSet
supportedStrings
characterSetForStrings:
endpointsForDrawing:startLocation:endLocation:
starCandidateResultForDrawing:candidate:
triangleCandidateResultForDrawing:candidate:
chatBubbleCandidateResultForDrawing:candidate:rejectionResult:
ellipseCandidateResultForDrawing:candidate:
pentagonCandidateResultForDrawing:candidate:
rectangleCandidateResultForDrawing:candidate:
outlineArrowCandidateResultForDrawing:candidate:
lineCandidateResultForDrawing:candidate:
manhattanLineCandidateResultForDrawing:candidate:rejectionResult:
cloudCandidateResultForDrawing:candidate:rejectionResult:
heartCandidateResultForDrawing:candidate:
recognitionResultsForSketchDrawing:options:
_removeOVSResults:withHistory:
recognitionResultsForSingleCharacterDrawing:segmentGroup:options:history:
_textReplacementResultForLegacyRecognitionResult:
_calculateJointWordLMScoreForTokenPath:tokenizedResult:history:historyLength:pathTranscription:
_calculateJointWordLMScoreForString:wordRanges:wordIDs:patternEntries:history:historyLength:
_tokensUsingLMTokenizerForString:wordRanges:nonWordPatterns:outTokenIDs:
bestPathsFromNetwork:pathCount:staticLexiconCursor:customLexiconCursor:patternCursor:history:activeHistoryRange:mecabraIDs:segmentGroup:precedingSpaceBehavior:effectiveContentType:totalStrokeCount:totalSubstrokeCount:
_updateResults:string:score:recognitionScore:lexicalEntry:patternEntry:isInappropriateWord:wordID:wordStrokeSet:
tokenizedTextResultForRomanLatticePaths:history:activeHistoryRange:startNode:segmentGroup:
tokenizedTextResultForChineseLatticePaths:maximumPathCount:network:mecabraIDs:startNode:endNode:segmentGroup:
_addAlternativeCandidatesForTokenizedResult:
tokenizedTextResultForRomanSingleWordLatticePaths:history:activeHistoryRange:startNode:segmentGroup:
_adjustResultsForConfusableCharacters:
_filterNonHumanFriendlyCandidates:
_createNetworkTruncatedPrefixStringUsingPrefix:fullHistoryStringLength:hasLexiconCursor:prefixStringLength:hasComplexChars:activeHistoryRange:
_cachingWithMatchingStrokeRange:drawing:
_sortedIndexesForSegmentGroup:drawing:
_recognitionResultsForMultipleCharacterDrawing:segmentGroup:options:shouldCancel:
_textResultWithLexiconExpansionFromCandidateNetwork:history:prefix:activeHistoryRange:rootStaticCursor:rootCustomCursor:rootPatternCursor:segmentGroup:maxRecognitionResultCount:precedingSpaceBehavior:shouldPerformNoSpaceRecognition:totalStrokeCount:totalSubstrokeCount:shouldCancel:
_textResultWithNetworkComposeFromCandidateNetwork:segmentGroup:drawing:maxRecognitionResultCount:history:totalStrokeCount:totalSubstrokeCount:
_classifyEdgeDrawingsFromContexts:allEdges:segmentationNetwork:candidateNetwork:cachedEdgeSet:completeDrawing:allowSmallerFinalBatch:shouldCancel:
_createCandidateNetworkFromSegmentationNetwork:segmentGroup:drawing:boundsAtNode:matchingStrokeRange:sortedSegmentIndexes:shouldCancel:
_computeLocalFrameWithLeftBounds:rightBounds:
_candidateLatticePruningThresholdForEdgeType:
_addEdgesFromCandidates:toEdges:referenceEdge:network:consumedSegmentCount:numSubstrokes:
_stringForCode:
_mininmumPathCount
_tokenFromLegacyResult:wordIndex:strokeSet:substrokeCount:
_lmRescoringWeightForPath:
bestTranscriptionPathsForTokenizedResult:scores:history:
_calculateBestTranscriptionPaths:scores:fromTokenizedResult:pathCount:history:skipLMRescoring:
_contextTokenIDsFromHistory:maxCharacterLength:maxTokenCount:
_resolvedStrokeIndexes:segmentGroup:segmentOffset:substrokeCount:
_tokenizedTextResultFromResults:segmentGroup:offsetSegment:decodedStrokeSets:spaceBehavior:
_resultUsingNextGenerationPipelineWithDrawing:options:
recognitionEngineCachingKey
_tokenizedTextResultFromTextDecodingResult:options:strokeEndings:drawing:firstTokenHasPrecedingSpacePreference:
_fallbackStructuredResultForDrawing:string:score:firstTokenHasPrecedingSpacePreference:
_resultUsingSegmentAndDecodePipelineWithDrawing:insight:options:shouldCancel:
_tokenizedTextRecognitionResultForDrawing:options:shouldCancel:
_tokenizedTextRecognitionResultForDrawing:writingStatistics:options:shouldCancel:
_postprocessingMergedRecognitionResult:options:
_shouldReturnDefaultResultsForDrawing:
textRecognitionResultForDrawing:options:shouldCancel:
textRecognitionResultForDrawing:options:writingStatistics:shouldCancel:
recognitionResultsForDrawing:options:shouldCancel:
_legacyTextRecognitionResultsForDrawing:options:shouldCancel:
recognitionResultsForDrawing:options:
_refineCandidates:withAllowedCandidateCodes:
_refineChineseCharacterCandidates:drawing:
_adjustCandidatesForChinesePunctuation:segmentDrawing:completeDrawing:
_penalizeCandidatesForRomanPunctuation:punctuationStrokeCount:
_adjustCandidatesForRomanPunctuation:segmentDrawing:
_adjustCandidatesForConfusableCharacters:
_applySentenceTransliterationCandidates:codesLen:codesMax:
_applyTransliterationAndSyntheticCandidates:
_tokenIDForUNKCharacterString:
_rescoreCandidatesWithLanguageModel:history:
_historyStringFromRecognizerOptions:
_textAfterFromRecognizerOptions:
_precedingSpaceBehaviorFromRecognizerOptions:
_initialContextRectFromRecognizerOptions:
_drawingAnchorPointFromRecognizerOptions:
_minSizeForReliableRescalingFromRecognizerOptions:
_inferenceCacheFromRecognizerOptions:
_activationMatrixFromInferenceCache:forDrawing:outStrokeEndings:
_effectiveMaxRecognitionResultCount
setRecognitionType:
setRecognitionMode:
_setConfiguration:
setLocale:
_setupRecognitionInsightRecording
recognitionType
engine
setEngine:
freeformEngine
setFreeformEngine:
recognitionModel
setRecognitionModel:
textDecoder
setTextDecoder:
recognitionQueue
setRecognitionQueue:
radicalClusterFST
setRadicalClusterFST:
formatGrammarFST
setFormatGrammarFST:
patternFST
setPatternFST:
postProcessingFST
setPostProcessingFST:
configuration
wordLanguageModel
setWordLanguageModel:
lmVocabulary
setLmVocabulary:
characterLanguageModel
setCharacterLanguageModel:
cjkStaticLexicon
setCjkStaticLexicon:
cjkDynamicLexicon
setCjkDynamicLexicon:
staticLexicon
setStaticLexicon:
secondaryStaticLexicon
setSecondaryStaticLexicon:
phraseLexicon
setPhraseLexicon:
customLexicon
setCustomLexicon:
customPhraseLexicon
textReplacements
textReplacementLowercasedKeyMapping
setTextReplacementLowercasedKeyMapping:
spellChecker
setSpellChecker:
mecabraWrapper
setMecabraWrapper:
ovsStringChecker
setOvsStringChecker:
learningDictionaryURL
setLearningDictionaryURL:
cachedDrawing
setCachedDrawing:
cachedResults
setCachedResults:
characterIDMap
setCharacterIDMap:
transliterationVariantMap
setTransliterationVariantMap:
icuTransliterator
setIcuTransliterator:
lastCharacterSegmentCount
setLastCharacterSegmentCount:
lastCharacterSegmentIndexes
setLastCharacterSegmentIndexes:
postProcessor
setPostProcessor:
mergedResultPostProcessor
setMergedResultPostProcessor:
.cxx_construct
_nextRecognitionInsightRequest
_activeRecognitionInsight
_whitelistMecabraRareCharacters
_recognitionType
_maxRecognitionResultCount
_activeCharacterSet
_engine
_freeformEngine
_recognitionModel
_textDecoder
_recognitionQueue
_radicalClusterFST
_formatGrammarFST
_patternFST
_postProcessingFST
_configuration
_wordLanguageModel
_lmVocabulary
_characterLanguageModel
_cjkStaticLexicon
_cjkDynamicLexicon
_staticLexicon
_secondaryStaticLexicon
_phraseLexicon
_customLexicon
_customPhraseLexicon
_textReplacements
_textReplacementLowercasedKeyMapping
_spellChecker
_mecabraWrapper
_ovsStringChecker
_learningDictionaryURL
_cachedDrawing
_transliterationVariantMap
_icuTransliterator
_lastCharacterSegmentCount
_lastCharacterSegmentIndexes
_postProcessor
_mergedResultPostProcessor
_minimumDrawingSize
_cachedResults
_characterIDMap
T^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}},N,V_engine
T^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}},N,V_freeformEngine
T@"CHCTCRecognitionModel",&,N,V_recognitionModel
T@"CVNLPCTCTextDecoder",&,N,V_textDecoder
T@"NSObject<OS_dispatch_queue>",&,N,V_recognitionQueue
T^v,N,V_radicalClusterFST
T^v,N,V_formatGrammarFST
T@"CHPatternNetwork",&,N,V_patternFST
T@"CHPatternNetwork",&,N,V_postProcessingFST
T@"CHRecognizerConfiguration",&,N,S_setConfiguration:,V_configuration
T^v,N,V_wordLanguageModel
T^v,N,V_lmVocabulary
T^v,N,V_characterLanguageModel
T^v,N,V_cjkStaticLexicon
T^v,N,V_cjkDynamicLexicon
T^{_LXLexicon=},N,V_staticLexicon
T^{_LXLexicon=},N,V_secondaryStaticLexicon
T^{_LXLexicon=},N,V_phraseLexicon
T^{_LXLexicon=},N,V_customLexicon
T^{_LXLexicon=},N,V_customPhraseLexicon
T@"NSDictionary",&,N,V_textReplacements
T@"NSMutableDictionary",&,N,V_textReplacementLowercasedKeyMapping
T@"CHSpellChecker",&,N,V_spellChecker
T@"CHMecabraWrapper",&,N,V_mecabraWrapper
T@"CHStringOVSChecker",&,N,V_ovsStringChecker
T@"NSURL",&,N,V_learningDictionaryURL
T@"CHDrawing",C,N,V_cachedDrawing
T{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}},N,V_cachedResults
T{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}},N,V_characterIDMap
T^{VariantMap=^i^i^ii^iQ},N,V_transliterationVariantMap
T^^v,N,V_icuTransliterator
TQ,N,V_lastCharacterSegmentCount
T@"NSMutableIndexSet",&,N,V_lastCharacterSegmentIndexes
T@"CHPostProcessingManager",&,N,V_postProcessor
T@"CHPostProcessingManager",&,N,V_mergedResultPostProcessor
T@"NSLocale",C,N
Ti,N,V_recognitionType
TB,N
TQ,N,V_maxRecognitionResultCount
T@"NSCharacterSet",&,N,V_activeCharacterSet
T{CGSize=dd},N,V_minimumDrawingSize
recordInsightWithRequest:
recordedInsightFromLastRequest
T@"CHRecognitionInsight",R,N
initWithEdgeIndex:numberOfSubstrokes:numberOfSegments:classifiableDrawing:strokeGroup:
edgeIndex
numberOfSubstrokes
numberOfSegments
classifiableDrawing
strokeGroup
_edgeIndex
_numberOfSubstrokes
_numberOfSegments
_classifiableDrawing
_strokeGroup
TQ,R,N,V_edgeIndex
Tq,R,N,V_numberOfSubstrokes
Tq,R,N,V_numberOfSegments
T@"CHClassifiableDrawing",R,N,V_classifiableDrawing
T{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}},R,N,V_strokeGroup
enumeratePointsWithDistanceStep:usingBlock:
getAddedStrokes:removedStrokeIdentifiers:inStrokeProvider:lastGroupingResult:
strokeForIdentifier:inStrokeProvider:
strokeIdentifiersForData:withStrokeProvider:
encodedStrokeIdentifiers:withStrokeProvider:
enumeratePointsForStroke:interpolationType:resolution:usingBlock:
isPointEnumerationSupportedForStroke:
durationOfStrokesInStrokeGroup:strokeProvider:
speedForFinalTimeRange:stroke:
arcLengthForStroke:
boundingBoxOfPoints:rotatedAroundPoint:byAngle:
unionStrokeBounds:usingStrokeCountLimit:reverseOrder:
unionStrokeBounds:aroundXPosition:usingOneSideStrokeCountLimit:
createDrawingForStrokes:cancellationBlock:
convexHullForStroke:
convexHullForStrokes:inDrawing:
convexHullForPoints:
enlargedConvexHull:withMargin:
circumferenceRatioOfCircleFittedToPoints:circleCenter:circleRadius:
vectorMeanWithoutOutliers:
lineOrientationForStrokePoints:error:
threePointsOrientationWithOrigin:pointA:pointB:
distanceFromPoint:toSegmentFromPoint:toPoint:
distanceFromPoint:toRectangle:
regularizedPathFromPoints:delta:gamma:outError:
recognizerRecognitionModeDescription
recognizerContentTypeDescription
autoCapitalizationModeDescription
autoCorrectionModeDescription
insightRequest
setInsightRequest:
recognizerLocale
setRecognizerLocale:
recognizerRecognitionMode
setRecognizerRecognitionMode:
recognizerContentType
setRecognizerContentType:
recognizerActiveCharacterSet
setRecognizerActiveCharacterSet:
recognizerOptions
setRecognizerOptions:
recognizerMaxRecognitionResultCount
setRecognizerMaxRecognitionResultCount:
recognizerMinimumDrawingSize
setRecognizerMinimumDrawingSize:
inputDrawing
setInputDrawing:
textResult
setTextResult:
recognitionError
setRecognitionError:
_recognizerRecognitionMode
_recognizerContentType
_autoCapitalizationMode
_autoCorrectionMode
_insightRequest
_recognizerLocale
_recognizerActiveCharacterSet
_recognizerOptions
_recognizerMaxRecognitionResultCount
_inputDrawing
_textResult
_recognitionError
_recognizerMinimumDrawingSize
T@"CHRecognitionInsightRequest",&,N,V_insightRequest
T@"NSLocale",C,N,V_recognizerLocale
Ti,N,V_recognizerRecognitionMode
Ti,N,V_recognizerContentType
Ti,N,V_autoCapitalizationMode
Ti,N,V_autoCorrectionMode
T@"NSCharacterSet",C,N,V_recognizerActiveCharacterSet
T@"NSDictionary",C,N,V_recognizerOptions
TQ,N,V_recognizerMaxRecognitionResultCount
T{CGSize=dd},N,V_recognizerMinimumDrawingSize
T@"CHDrawing",C,N,V_inputDrawing
T@"CHTokenizedTextResult",C,N,V_textResult
T@"NSError",C,N,V_recognitionError
recordInsightRequest:
recordConfigurationForRecognizer:options:
recordInputDrawing:
recordTextResult:recognitionError:
initWithContentsOfFile:
initWithContentsOfXYString:
initWithContentsOfJSONDictionary:
setDrawing:
newDrawingWithTransform:
newDrawingWithAffineTransform:
drawingByRemovingUnnaturalHorizontalGaps:
pointCount
pointCountForStrokeIndex:
pointForStrokeIndex:pointIndex:
startTimeForStroke:
endTimeForStroke:
strokeCount
indexesOfStrokesSmallerThanSize:
drawingWithStrokesFromIndexSet:
drawingWithStrokesFromIndexArray:
centroidForStrokeIndexes:
boundsForStrokeIndexes:
boundsForStrokeIndex:
strokeBoundsAtIndex:
cumulativePointToPointDistance
distanceBetweenFirstAndLastPoint
addPoint:
addStartTime:
addEndTime:
endStroke
clear
isPrefixForDrawing:
matchingStrokePrefixRangeForDrawing:
isEqualToDrawing:
xyRepresentation
jsonRepresentationWithContext:
bitmapRepresentationForSize:
orientationRepresentationForSampling:convolutionWidth:
sortedDrawingUsingMinXCoordinate
sortedDrawingUsingStrokeMidPoint:
drawingScaledByFactor:
drawingTransformedWithTranslation:scaleFactor:
drawingSpatiallyResampled:outputPointMap:
drawingSpatiallyResampled:maxPointsPerStroke:
strokeIndicesSortedByMinXCoordinate
setLineHeight:
appendSegment:fromDrawing:
appendDrawing:
boundingBoxForDrawingSegmentFromCutPoint:toCutPoint:
averageCharacterHeightEstimation:minChunkHeight:
writeToFile
writeToFileWithContext:folder:basename:
debugQuickLookObject
T{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}},N,V_drawing
sortedCHCutPointArray:
initWithStrokeIndex:pointIndex:isEndOfStroke:
isStartOfStroke
compare:
strokeIndex
pointIndex
isEndOfStroke
_isEndOfStroke
_strokeIndex
_pointIndex
Tq,R,N,V_strokeIndex
Tq,R,N,V_pointIndex
TB,R,N,V_isEndOfStroke
generateSegmentsFromDrawing:
boundingBoxFromSegmentID:toSegmentID:withSegments:withSourceDrawing:
indexForSegmentID:fromSegments:
initWithSegmentID:startCutPoint:endCutPoint:referenceDrawing:
strokeIndexSet
isSinglePointSegment
segmentID
startCutPoint
endCutPoint
segmentBounds
contextBounds
setContextBounds:
_segmentID
_startCutPoint
_endCutPoint
_segmentBounds
_contextBounds
T@"NSNumber",R,N,V_segmentID
T@"CHCutPoint",R,N,V_startCutPoint
T@"CHCutPoint",R,N,V_endCutPoint
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_segmentBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_contextBounds
initWithSegmentGroupIndex:segments:
totalSegmentCount
segmentGroupIndex
segments
_segmentGroupIndex
_segments
Tq,R,N,V_segmentGroupIndex
T@"NSArray",R,N,V_segments
drawVisualizationInRect:context:viewBounds:
layeringPriority
dirtyRectForStrokeGroup:
shouldCorrectionGesturesSnapToTokensForScriptCode:
isSkippableScriptCode:
singleScriptCodeForString:
scriptCodeForCodepoint:
isCharacterFullWidth:
isRightToLeftScriptForCharacter:
shouldRelaxCharacterBoundsPercentageOverlapForScript:
isCharacterEmoji:
scriptHistogramForString:
_initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:autoCapitalizationMode:autoCorrectionMode:isSingleLine:lastCharacterLevelPosition:protectedCharacterIndexes:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:autoCapitalizationMode:autoCorrectionMode:isSingleLine:lastCharacterLevelPosition:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:isSingleLine:lastCharacterLevelPosition:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:activePreviewRange:contentType:lastCharacterLevelPosition:
absoluteLocationFromRelativeLocation:
relativeLocationFromAbsoluteLocation:
characterRectForCharacterIndex:
visualCharacterRectForCharacterIndex:
enumerateCharacterRectsInRange:block:
enumerateCharacterRectsInRange:reverse:block:
referenceSubstringInRange:
referenceSubstringRangeOfComposedCharacterAtIndex:
unionCharacterRects
textInputTarget
textContentLength
referenceSubstring
referenceSubstringRange
strokeCoveredTextRange
selectedTextRange
isCursorStrong
containsCommittedStrokes
activePreviewRange
isSingleLine
supportsAutoLineBreaks
lastCharacterLevelPosition
characterRectsInReferenceSubstring
protectedCharacterIndexes
_textInputTarget
_textContentLength
_referenceSubstring
_referenceSubstringRange
_characterRectsInReferenceSubstring
_strokeCoveredTextRange
_selectedTextRange
_isCursorStrong
_containsCommittedStrokes
_activePreviewRange
_contentType
_isSingleLine
_supportsAutoLineBreaks
_lastCharacterLevelPosition
_protectedCharacterIndexes
T@"CHTextInputTarget",R,N,V_textInputTarget
Tq,R,N,V_textContentLength
T@"NSString",R,C,N,V_referenceSubstring
T{_NSRange=QQ},R,N,V_referenceSubstringRange
T{_NSRange=QQ},R,N,V_strokeCoveredTextRange
T{_NSRange=QQ},R,N,V_selectedTextRange
TB,R,N,V_isCursorStrong
TB,R,N,V_containsCommittedStrokes
T{_NSRange=QQ},R,N,V_activePreviewRange
Ti,R,N,V_contentType
Ti,R,N,V_autoCapitalizationMode
Ti,R,N,V_autoCorrectionMode
TB,R,N,V_isSingleLine
TB,R,N,V_supportsAutoLineBreaks
Tq,R,N,V_lastCharacterLevelPosition
T^{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_characterRectsInReferenceSubstring
T@"NSIndexSet",R,C,N,V_protectedCharacterIndexes
setTextInputTarget:
setTextContentLength:
setStrokeCoveredTextRange:
setSelectedTextRange:
setIsCursorStrong:
setContainsCommittedStrokes:
setActivePreviewRange:
setIsSingleLine:
setSupportsAutoLineBreaks:
setLastCharacterLevelPosition:
setProtectedCharacterIndexes:
setReferenceSubstring:range:characterRects:
T@"CHTextInputTarget",&,D,N
T{_NSRange=QQ},D,N
TB,D,N
Ti,D,N
initWithStroke:consistingOfSubstrokes:classificationAsNonText:lineOrientation:lineError:containerScore:
initWithStrokeIdentifier:substrokesCount:classificationAsNonText:lineOrientation:lineError:containerScore:bounds:boundsDiagonal:enlargedBounds:rotatedBounds:supportByStrokeIdentifier:support:
effectiveClassification
isEqualToNonTextCandidateStroke:
strokeIdentifier
support
classificationAsNonText
substrokesCount
supportByStrokeIdentifier
lineError
containerScore
lineOrientationAngle
boundsDiagonal
enlargedBounds
rotatedBounds
_supportByStrokeIdentifier
_support
_strokeIdentifier
_classificationAsNonText
_substrokesCount
_lineError
_containerScore
_lineOrientationAngle
_boundsDiagonal
_enlargedBounds
_rotatedBounds
Tq,R,N,V_classificationAsNonText
Tq,R,N,V_substrokesCount
T@"NSDictionary",R,N,V_supportByStrokeIdentifier
Td,R,N,V_lineError
Td,R,N,V_containerScore
Td,R,N,V_lineOrientationAngle
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_bounds
Td,R,N,V_boundsDiagonal
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_enlargedBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_rotatedBounds
T@"CHEncodedStrokeIdentifier",R,N,V_strokeIdentifier
Td,R,N,V_support
setSupportByStrokeIdentifier:
_setSupportForStrokeIdentifier:support:
_removeSupportForStrokeIdentifier:
adjustSupportByRemovingStrokeIdentifier:
adjustSupportByAddingStroke:consistingOfSubstrokes:
_adjustSupportForLineClassificationByAddingStroke:consistingOfSubstrokes:
_adjustSupportForContainerClassificationByAddingStroke:consistingOfSubstrokes:
T@"NSDictionary",&,D,N
cornerIndexes
directionChangeCornerIndexes
_detectDirectionalChanges
setMinimumSignificantSegmentLength:
_detectCorners
_resampleDrawing:outputPointMap:
_resamplingDistance:
_distance:p1:p2:
_pathDistance:p1:p2:
_removeColinearCorners:usingThreshold:corners:
_removeColinearCorners:usingDistanceThreshold:usingLowerThreshold:usingUpperThreshold:corners:
_removeAdjacentCorners:corners:straws:
_postProcessCorners:corners:straws:
_strokeHalfwayCorner:p1:p2:
_isLine:usingThreshold:p1:p2:
_resolveResampledDirectionChangePointIndexes:
shouldUseDynamicSampling
setShouldUseDynamicSampling:
minimumSignificantSegmentLength
resampledDrawing
directionChangeCount
highestDirectionChangeCount
_strawSize
_cornerIndexSet
_directionChangeCornerIndexes
_resampledDrawingPointMap
_shouldUseDynamicSampling
_minimumSignificantSegmentLength
_resampledDrawing
_directionChangeCount
_highestDirectionChangeCount
__strawSize
__cornerIndexSet
__directionChangeCornerIndexes
__resampledDrawingPointMap
TQ,R,N,V__strawSize
T@"NSMutableIndexSet",R,C,N,V__cornerIndexSet
T@"NSMutableIndexSet",R,C,N,V__directionChangeCornerIndexes
T{vector<std::map<long, long>, std::allocator<std::map<long, long>>>=^v^v{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>=^v}},R,N,V__resampledDrawingPointMap
TB,N,V_shouldUseDynamicSampling
Td,N,V_minimumSignificantSegmentLength
T@"CHDrawing",C,N,V_drawing
T@"CHDrawing",R,C,N,V_resampledDrawing
TQ,R,N,V_directionChangeCount
TQ,R,N,V_highestDirectionChangeCount
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:groupingResultsByStrategyIdentifier:
groupingResultsByStrategyIdentifier
_groupingResultsByStrategyIdentifier
T@"NSDictionary",R,N,V_groupingResultsByStrategyIdentifier
_isGroupableNonTextForStrokeClassification:
initWithStrokeProvider:sessionLastResult:locales:isInlineContinuousMode:inlineContinuousModeTargets:
updatedGroupingResultByAddingStrokes:removingStrokeIdentifiers:orderedStrokeIdentifiers:strokeClassificationResult:cancellationBlock:
_groupsFromClusterResult:strokes:strokeClassificationsByStrokeIdentifier:
_greedyCombinationOfGroupingResults:stableStrokeIdentifiers:withCancellationBlock:
_simpleDrawingForStrokeGroup:originalDrawing:orderedStrokeIDs:
sessionLastResult
locales
isInlineContinuousMode
textInputTargets
groupingStrategiesByIdentifier
_isInlineContinuousMode
_sessionLastResult
_locales
_textInputTargets
_groupingStrategiesByIdentifier
T@"NSDictionary",R,N,V_groupingStrategiesByIdentifier
T@"CHRecognitionSessionResult",R,N,V_sessionLastResult
T@"NSArray",R,N,V_locales
TB,R,N,V_isInlineContinuousMode
T@"NSArray",R,N,V_textInputTargets
sharedSettings
isScribbleActive
autoLineBreakEnabled
autoLineBreakRequireWeakCursor
autoLineBreakMinVerticalDistance
autoLineBreakDualBreakVerticalDistance
autoLineBreakAreaWidthFactor
lineBreakVerticalBarGestureEnabled
lineBreakVerticalBarUpToDelete
subwordGestureEndingSpeedRange
subwordGestureSpeedThreshold
preventLeftoverCharsInSubwordGestures
_autoLineBreakEnabled
_autoLineBreakRequireWeakCursor
_lineBreakVerticalBarGestureEnabled
_lineBreakVerticalBarUpToDelete
_preventLeftoverCharsInSubwordGestures
_autoLineBreakMinVerticalDistance
_autoLineBreakDualBreakVerticalDistance
_autoLineBreakAreaWidthFactor
_subwordGestureEndingSpeedRange
_subwordGestureSpeedThreshold
TB,R,N,V_autoLineBreakEnabled
TB,R,N,V_autoLineBreakRequireWeakCursor
Td,R,N,V_autoLineBreakMinVerticalDistance
Td,R,N,V_autoLineBreakDualBreakVerticalDistance
Td,R,N,V_autoLineBreakAreaWidthFactor
TB,R,N,V_lineBreakVerticalBarGestureEnabled
TB,R,N,V_lineBreakVerticalBarUpToDelete
Td,R,N,V_subwordGestureEndingSpeedRange
Td,R,N,V_subwordGestureSpeedThreshold
TB,R,N,V_preventLeftoverCharsInSubwordGestures
strokePointTransformationsForContextStrokes:completion:shouldCancel:
strokePointTransformationsForContextStrokes:completionWithTelemetry:shouldCancel:
wantsInputDrawings
_transformForInputDrawingBounds:referenceBounds:viewBounds:
_drawGroupBrackgroundInRect:context:
shouldDrawStrokeGroup:
drawInputDrawing:inContext:transform:
_drawCutPoints:inputDrawing:inContext:transform:
initWithStrokeProviderVersion:encodedStrokeProviderVersion:orderedStrokeIdentifiers:sessionMode:locales:preferredLocales:clutterFilter:strokeClassificationResult:strokeGroupingResult:recognitionResults:inlineContinuousModeResults:generationDuration:recognitionEnvironment:
initWithResult:validStrokes:
_transcriptionCapability
highConfidenceDebugDescription
allResultsDebugDescription
allResultsDebugDescriptionByGroup
allResultsDebugDescriptionWithGroupHeaderBlock:
_resultsDebugDescriptionIntoGroupsArray:groupHeaderBlock:
recognitionResultForStrokeGroupIdentifier:
textCorrectionResultForStrokeGroupIdentifier:
fullyCoveredStrokeGroupsForContextStrokes:partiallyCoveredStrokeGroups:
contextualResultsWithFullyCoveredStrokeGroups:partiallyCoveredStrokeGroups:drawingCanvasSize:
encodedStrokeProviderVersion
isEqualToSerializableRecognitionSessionResult:
isEqualToRecognitionSessionResult:
hasCompleteRecognitionResults
strokeProviderVersion
orderedStrokeIdentifiers
sessionMode
preferredLocales
clutterFilter
recognitionEnvironment
strokeClassificationResult
strokeGroupingResult
generationDuration
_recognitionResultsByGroupID
_textCorrectionResultsByGroupID
__transcriptionCapability
_encodedStrokeProviderVersion
__shouldUseCachedHasCompleteRecognitionResults
__hasCompleteRecognitionResults
_strokeProviderVersion
_orderedStrokeIdentifiers
_sessionMode
_preferredLocales
_clutterFilter
_recognitionEnvironment
_strokeClassificationResult
_strokeGroupingResult
__recognitionResultsByGroupID
__textCorrectionResultsByGroupID
_generationDuration
T@"NSDictionary",R,C,N,V__recognitionResultsByGroupID
T@"NSDictionary",R,C,N,V__textCorrectionResultsByGroupID
T@"<CHStrokeProviderVersion>",R,N,V_strokeProviderVersion
T@"NSArray",R,N,V_orderedStrokeIdentifiers
Tq,R,N,V_sessionMode
T@"NSArray",R,C,N,V_locales
T@"NSArray",R,C,N,V_preferredLocales
T@"CHStrokeClutterFilter",R,N,V_clutterFilter
Tq,R,N,V_recognitionEnvironment
T@"CHStrokeClassificationResult",R,N,V_strokeClassificationResult
T@"CHStrokeGroupingResult",R,N,V_strokeGroupingResult
T{?=ddddd},R,N,V_generationDuration
T@"NSArray",R,N
initWithStrokeClassificationsByStrokeIdentifier:substrokesByStrokeIdentifier:nontextCandidates:
textStrokeIdentifiers
isEquivalentToStrokeClassificationResult:
isEqualToStrokeClassificationResult:
strokeClassificationsByStrokeIdentifier
substrokesByStrokeIdentifier
nontextCandidates
_textStrokeIdentifiers
_strokeClassificationsByStrokeIdentifier
_substrokesByStrokeIdentifier
_nontextCandidates
T@"NSDictionary",R,C,N,V_strokeClassificationsByStrokeIdentifier
T@"NSDictionary",R,C,N,V_substrokesByStrokeIdentifier
T@"NSSet",R,C,N
T@"NSSet",R,C,N,V_nontextCandidates
textStrokeGroupsSortedTopBottomLeftRight
textStrokeGroupsSortedByWritingOrientation
strokeGroupsSortedByWritingOrientation
_sortedStrokeGroupsByWritingOrientationTextOnly:
strokeGroupClusters
textStrokeGroupClusters
textStrokeGroups
isEqualToStrokeGroupingResult:
strokeGroups
createdStrokeGroups
deletedStrokeGroups
_strokeGroupsSortedTopBottomLeftRight
_textStrokeGroupsSortedByWritingOrientation
_strokeGroupsSortedByWritingOrientation
_textStrokeGroupClusters
_strokeGroupClusters
_textStrokeGroups
_strokeGroups
_createdStrokeGroups
_deletedStrokeGroups
T@"NSSet",R,C,N,V_strokeGroups
T@"NSSet",R,C,N,V_createdStrokeGroups
T@"NSSet",R,C,N,V_deletedStrokeGroups
T@"NSArray",R,C,N
initWithOrderedLocales:resultsByLocale:errorsByLocale:languageFitnessByLocale:inputStrokeIdentifiers:
localesSortedByRawLanguageFitness:
localesSortedByCombinedLanguageFitness:
highConfidenceTextForSessionResult:rejectionRate:doesContainUnfilteredMultiLocaleResults:
languageFitnessForLocale:
isEqualToStrokeGroupRecognitionResult:
inputStrokeIdentifiers
recognitionResultsByLocale
errorsByLocale
_inputDrawingCutPoints
_languageFitnessByLocale
_orderedLocales
_inputStrokeIdentifiers
_recognitionResultsByLocale
T@"NSArray",R,C,N,V_inputStrokeIdentifiers
T@"NSDictionary",R,C,N,V_recognitionResultsByLocale
T@"NSDictionary",R,C,N,V_errorsByLocale
initWithOrderedLocales:resultsByLocale:errorsByLocale:languageFitnessByLocale:inputStrokeIdentifiers:inputDrawing:inputDrawingCutPoints:
inputDrawingCutPoints
languageFitnessByLocale
sortedLanguageGroups:usingLanguageFitness:
sortedLocales:usingLanguageFitness:useCombinedScore:
indexOfFirstLocaleWithLanguage:orderedLocales:
filteredResultsByLocale:orderedLocales:usingLanguageFitness:outSortedLocales:
filteredLocalesFromGroup:results:withCharacterDetectionBlock:
T@"CHDrawing",R,N
T@"NSDictionary",R,C,N
initWithTextCorrectionResult:inputStrokeIdentifiers:
isEqualToStrokeGroupTextCorrectionResult:
textCorrectionResult
_textCorrectionResult
T@"CHTextCorrectionResult",R,C,N,V_textCorrectionResult
loadFromFile:
initWithLocales:recognitionMode:drawing:options:priority:
writeToFileInFolder:basename:
shouldRemoveUnnaturalGaps
recognizerConfigurationKeyWithLocale:
setLocales:
setOptions:
setActiveCharacterSetPerLocale:
setShouldUseTextReplacements:
setEnableStrokeReordering:
setHasBeenSubmitted:
setPriority:
isEqualToRemoteRecognitionRequest:
activeCharacterSetPerLocale
options
shouldUseTextReplacements
enableStrokeReordering
hasBeenSubmitted
priority
parametersOverride
setParametersOverride:
_shouldUseTextReplacements
_enableStrokeReordering
_hasBeenSubmitted
_recognitionMode
_activeCharacterSetPerLocale
_options
_priority
_parametersOverride
T@"NSArray",C,N,V_locales
T@"NSDictionary",C,N,V_activeCharacterSetPerLocale
Ti,N,V_recognitionMode
Ti,N,V_contentType
T@"NSDictionary",C,N,V_options
TB,N,V_shouldUseTextReplacements
TB,N,V_enableStrokeReordering
TB,N,V_hasBeenSubmitted
Tq,N,V_priority
T@"NSDictionary",C,N,V_parametersOverride
initWithTokenRows:
indexOfEquivalentTokenRow:tokenRange:
containsStartingTokenEquivalentToToken:
isEqualToTokenizedTextResultColumn:
tokenRows
_tokenRows
T@"NSArray",R,C,N,V_tokenRows
T@"NSIndexSet",R,N
setTokenRows:
addTokenRowWithTokens:
setTokenRowWithTokens:atIndex:
removeTokenRowAtIndex:
sortTokenRows
_mutableTokenRows
T@"NSArray",C,D,N
cacheTextResult:drawing:recognitionEngineCachingKey:
retrievePartialResultsForDrawing:recognitionEngineCachingKey:matchingColumnRange:
clearCache
_lastDrawing
_textResults
_newStrokeGroupUniqueIdentifier
isStrokeGroupSet:equivalentToStrokeGroupSet:
_averageInterStrokeGroupDistanceForSortedStrokeGroups:outStdDev:
strokeGroupsClusteredByProximity:
strokeGroupContainingStrokeIdentifier:strokeGroups:
strokeGroupContainingStrokeIdentifier:strokeGroups:foundStrokeGroupIndex:
strokeIdentifierToGroupIndexMappingForStrokeIdentifiers:orderedStrokeGroups:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
averageWritingOrientation
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:firstStrokeOrigin:
newEstimatedBaselineForStrokesWithTokens:tokenStrokeIdentifiers:
isEqualToStrokeGroup:
isEquivalentToStrokeGroup:
uniqueIdentifier
ancestorIdentifier
firstStrokeOrigin
firstStrokeIdentifier
lastStrokeIdentifier
classification
groupingConfidence
_uniqueIdentifier
_ancestorIdentifier
_firstStrokeIdentifier
_lastStrokeIdentifier
_classification
_groupingConfidence
_strategyIdentifier
_firstStrokeOrigin
Tq,R,N,V_uniqueIdentifier
Tq,R,N,V_ancestorIdentifier
T{CGPoint=dd},R,N,V_firstStrokeOrigin
T{CGVector=dd},R,N
T@"NSSet",R,N,V_strokeIdentifiers
T@"CHEncodedStrokeIdentifier",R,N,V_firstStrokeIdentifier
T@"CHEncodedStrokeIdentifier",R,N,V_lastStrokeIdentifier
Tq,R,N,V_classification
Td,R,N,V_groupingConfidence
T@"NSString",R,N,V_strategyIdentifier
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:
textInputTargetForItemStableIdentifier:strokeIdentifiers:simultaneousItemStableIdentifiers:
_contextBoundsForTargetContentInfo:
lastStrokeInGroup:strokeProvider:
initWithLocales:strokeProvider:initialTextInputTargets:inputResult:recognitionEnvironment:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:
recognitionResultsForGroupingResult:groupingManager:
textCorrectionResultsForGroupingResult:groupingManager:
newStrokeClassifier
newGroupingManager
_textCorrectionResultForStrokeGroup:groupingManager:targetContentInfo:locales:previousCorrectionResult:
_dataSource:inputTargetContentInfoForStrokeGroups:groupingManager:
_dataSource:textInputTargetForStrokeGroup:simultaneousGroups:
initialTextInputTargets
activeTextInputQuery
setActiveTextInputQuery:
_initialTextInputTargets
_activeTextInputQuery
delegate
T@"<CHRecognitionSessionTextInputTaskDelegate>",D,N
T@"NSArray",R,N,V_initialTextInputTargets
T@"CHTextInputQuery",&,N,V_activeTextInputQuery
initWithIdentifier:frame:
isEqualToInputTarget:
inputTargetIdentifier
frame
_inputTargetIdentifier
_frame
T@"NSNumber",R,C,N,V_inputTargetIdentifier
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_frame
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:lastSubstrokeIndexBeforeMerge:firstStrokeOrigin:
writingDirectionSortedSubstrokes
localStrokeWritingOrientations
localWritingOrientationAtStrokeIndex:
averageStrokeDeviation
lastSubstrokeIndexBeforeMerge
coalescedLastSubstrokes
newEstimatedBaselineForSubStrokes:tokens:tokenSubStrokeIndexes:estimatedDescenderLocations:
writingDirectionSortedStrokeIdentifiers
_writingDirectionSortedSubstrokes
_averageWritingOrientation
_averageStrokeDeviation
_localStrokeWritingOrientations
_lastSubstrokeIndexBeforeMerge
_coalescedLastSubstrokes
_writingDirectionSortedStrokeIdentifiers
T@"NSArray",R,N,V_writingDirectionSortedStrokeIdentifiers
initWithRecognitionSession:
_setTranscribedTitle:strokeIdentifiers:
transcribedTitle
titleStrokeIdentifiers
_transcribedTitle
_titleStrokeIdentifiers
T@"NSString",R,C,N,V_transcribedTitle
T@"NSSet",R,C,N,V_titleStrokeIdentifiers
setup
modelWithContentsOfURL:configuration:error:
releaseModelWithKey:
initWithMLModel:modelKey:
incrementUsageCount
decrementUsageCount
predictionFromFeatures:options:error:
model
modelDescription
usageCount
modelKey
_modelKey
_modelUseCount
_model
T@"MLModelDescription",R,N
T@"MLModelConfiguration",R,N
T@"NSString",R,N,V_modelKey
initWithScore:
score
setScore:
_score
Td,V_score
initWithString:score:wordRanges:wordIDs:wordRecognitionScores:wordCombinedScores:wordStrokeSets:wordLexicalEntries:wordPatternEntries:rareWordIndexes:inappropriateWordIndexes:isTextReplacement:
mecabraCandidate
wordRanges
wordIDs
wordRecognitionScores
wordCombinedScores
wordStrokeSets
wordLexicalEntries
wordPatternEntries
rareWordIndexes
inappropriateWordIndexes
isTextReplacement
_isTextReplacement
_wordRanges
_wordIDs
_wordRecognitionScores
_wordCombinedScores
_wordStrokeSets
_wordLexicalEntries
_wordPatternEntries
_rareWordIndexes
_inappropriateWordIndexes
T@"NSString",R,V_string
T@"NSArray",R,V_wordRanges
T@"NSArray",R,V_wordIDs
T@"NSArray",R,V_wordRecognitionScores
T@"NSArray",R,V_wordCombinedScores
T@"NSArray",R,V_wordStrokeSets
T@"NSArray",R,V_wordLexicalEntries
T@"NSArray",R,V_wordPatternEntries
T@"NSIndexSet",R,V_rareWordIndexes
T@"NSIndexSet",R,V_inappropriateWordIndexes
TB,R,V_isTextReplacement
initWithString:score:rotation:
rotation
_rotation
Td,R,V_rotation
initWithString:score:rotation:startLocation:startEndpointType:endLocation:endEndpointType:midPointLocation:controlPointLocation:pathPoints:
initWithString:score:rotation:startLocation:startEndpointType:endLocation:endEndpointType:midPointLocation:controlPointLocation:
startEndpointType
endEndpointType
startLocation
endLocation
midpointLocation
controlPoint
pathPoints
cornerLine
_cornerLine
_startEndpointType
_endEndpointType
_pathPoints
_startLocation
_endLocation
_midpointLocation
_controlPoint
Ti,R,V_startEndpointType
Ti,R,V_endEndpointType
T{CGPoint=dd},R,V_startLocation
T{CGPoint=dd},R,V_endLocation
T{CGPoint=dd},R,V_midpointLocation
T{CGPoint=dd},R,V_controlPoint
T@"NSArray",R,V_pathPoints
TB,R,V_cornerLine
initWithString:score:rotation:center:size:controlPointLocation:
center
size
_center
_size
T{CGPoint=dd},R,V_center
T{CGSize=dd},R,V_size
initWithString:score:rotation:upperLeftPoint:upperRightPoint:lowerLeftPoint:lowerRightPoint:size:
upperLeftPoint
upperRightPoint
lowerLeftPoint
lowerRightPoint
_upperLeftPoint
_upperRightPoint
_lowerLeftPoint
_lowerRightPoint
T{CGPoint=dd},R,V_upperLeftPoint
T{CGPoint=dd},R,V_upperRightPoint
T{CGPoint=dd},R,V_lowerLeftPoint
T{CGPoint=dd},R,V_lowerRightPoint
initWithString:score:rotation:vertex1:vertex2:vertex3:
vertex1
vertex2
vertex3
_vertex1
_vertex2
_vertex3
T{CGPoint=dd},R,V_vertex1
T{CGPoint=dd},R,V_vertex2
T{CGPoint=dd},R,V_vertex3
initWithString:score:rotation:center:size:
initWithString:score:rotation:center:size:stemLocation:stemWidth:
stemLocation
stemWidth
_stemWidth
_stemLocation
T{CGPoint=dd},R,V_stemLocation
Td,R,V_stemWidth
_newColorForStroke:inGroup:
stop
q_foundItemsForSearchString:sessionResult:
_enumerateMatchesForStrokeGroupResult:locales:queryString:usingBlock:
_findMatchingTokenPathInResult:initialTokenLocation:queryString:fromIndex:coveredStrokeIndexes:reverseMatchedTokens:
_isMatchSeparatorBeforeToken:atLocation:inResult:queryString:fromIndex:matchedLength:
_isMatchStringForToken:queryString:fromIndex:requirePrefixMatch:matchedLength:
setQueryString:
queryString
foundItems
_setFoundItems:
caseMatchingOnly
setCaseMatchingOnly:
fullWordsOnly
setFullWordsOnly:
_caseMatchingOnly
_fullWordsOnly
_foundItems
_queryString
T@"NSArray",C,N,S_setFoundItems:,V_foundItems
T@"NSString",C,N,V_queryString
TB,N,V_caseMatchingOnly
TB,N,V_fullWordsOnly
initWithStrokeIdentifiers:
isEqualToSearchQueryItem:
recognitionSession
setDelegate:
_recognitionSession
_delegate
T@"CHRecognitionSession",R,N,V_recognitionSession
T@"<CHVisualizationDelegate>",W,N,V_delegate
recognitionSessionDidUpdateRecognitionResult
toggleVisualizationRegionAtPoint:
initWithFIFO:
emitPoint:
flush
nextFIFO
setNextFIFO:
_nextFIFO
T@"CHPointFIFO",&,N,V_nextFIFO
strokes
setStrokes:
_strokes
T@"CHDrawing",&,N,V_strokes
T@"CHDrawing",&,N,V_drawing
initWithFIFO:width:spacing:
initWithFIFO:width:
emitAveragedPoint
width
setWidth:
spacing
setSpacing:
prevPoints
setPrevPoints:
_spacing
_width
_prevPoints
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_prevPoints
TQ,N,V_width
Tf,N,V_spacing
interpolateFromPoint:toPoint:controlPoint:time:
initWithFIFO:drawingTarget:
setUnitScaleForViewSize:normalizedSize:contentScaleFactor:
unitScale
setUnitScale:
emitInterpolatedPoints
setEmitInterpolatedPoints:
emissionHandler
setEmissionHandler:
path
setPath:
lineWidth
setLineWidth:
points
setPoints:
controlPoints
setControlPoints:
lastPoint
setLastPoint:
drawingTarget
setDrawingTarget:
_emitInterpolatedPoints
_unitScale
_emissionHandler
_path
_lineWidth
_drawingTarget
_lastPoint
_points
_controlPoints
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_points
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_controlPoints
T,N,V_lastPoint
T@"<CHPointFIFODrawingTarget>",&,N,V_drawingTarget
Tf,N,V_unitScale
TB,N,V_emitInterpolatedPoints
T@?,C,V_emissionHandler
T^{CGPath=},N,V_path
Td,N,V_lineWidth
drawStrokesFromStrokeProvider:inRect:context:
_isShapeBasedRangeRefinementSupportedForResultType:
_affectedRangeByRefiningShapeBasedGesture:resultType:drawing:targetContentInfo:
_shouldExpandToFullTokensForScriptInString:withRange:shouldExpandStart:shouldExpandEnd:
rangeOfTokenAtCharacterIndex:inString:locale:
_cursorPositionForPoint:referenceString:referenceCharRects:searchingRange:
verticalBarGestureFromLineResult:currentGesture:
isEditGestureForDrawing:targetContentInfo:tentativeResultType:
shouldReclassifyGestureType:
isVerticalBarShapeFromLineResult:originalDrawing:isDirectionDownward:
isDrawingCenterOnBlank:targetContentInfo:insertionLocation:
initWithGestureType:targetContentInfo:locale:normalizedDrawing:originalDrawing:lastStroke:preferCharacterLevel:
getAffectedRange:expandedToFullTokens:
_affectedRangeByTrimmingSpaces:
_affectedRangeByRemovingTerminatingNewLines:
_affectedRangeByAdjustingForProtectedCharacters:
_affectedRangeByAdjustingToTokensIfNeeded:allowSubtoken:didExpand:
gestureType
setGestureType:
targetContentInfo
normalizedDrawing
originalDrawing
preferCharacterLevel
lastStroke
set_textResult:
_storedAffectedRange
set_storedAffectedRange:
_preferCharacterLevel
_gestureType
_targetContentInfo
_locale
_normalizedDrawing
_originalDrawing
_lastStroke
__textResult
__storedAffectedRange
T@"CHTokenizedTextResult",&,N,V__textResult
T{_NSRange=QQ},N,V__storedAffectedRange
Tq,N,V_gestureType
T@"CHTextInputTargetContentInfo",R,N,V_targetContentInfo
T@"NSLocale",R,N,V_locale
T@"CHDrawing",R,N,V_normalizedDrawing
T@"CHDrawing",R,N,V_originalDrawing
TB,R,N,V_preferCharacterLevel
T@"<CHStroke>",R,N,V_lastStroke
initWithCaretTipPoint:targetContentInfo:locale:normalizedDrawing:originalDrawing:
caretDirection
caretTipPoint
_caretTipPoint
T{CGPoint=dd},R,N,V_caretTipPoint
initWithModelName:
initWithModelName:decodingPruningPolicy:
featureProviderForDrawing:initialVectorAnchorPoint:normalizeFeatures:padFeatures:outStrokeEndings:outInputSequenceLength:outOutputSequenceLength:
recognizeDrawing:minimumDrawingSize:initialVectorAnchorPoint:activeCharacterSet:outStrokeEndings:outFallbackSymbol:outFallbackSymbolScore:
enumerateActivationsInResultArray:indexArray:block:
reachesActivationThreshold:inCharacterSet:resultArray:indexArray:
highestSymbolActivationWithResultArray:indexArray:symbol:
updateActivationsWithActiveCharacterSet:resultArray:indexArray:
_extractFeaturesFromDrawing:inputName:interpointDistance:error:
_extractFeaturesFromDrawing:inputName:interpointDistance:initialVectorAnchorPoint:normalizeFeatures:padFeatures:error:
sequenceCompression
distanceFeatureIndex
sinAlphaFeatureIndex
cosAlphaFeatureIndex
gapFeatureIndex
directionalFeaturesInputName
characterProbabilityOutputName
codeMap
blankIndex
spaceIndex
pseudospaceIndex
normalizeFeatures
setNormalizeFeatures:
distMean
setDistMean:
distStd
setDistStd:
interpointDistance
setInterpointDistance:
decodingPruningPolicy
setDecodingPruningPolicy:
_stringCodeMap
_normalizeFeatures
_sequenceCompression
_distanceFeatureIndex
_sinAlphaFeatureIndex
_cosAlphaFeatureIndex
_gapFeatureIndex
_directionalFeaturesInputName
_characterProbabilityOutputName
_codeMap
_blankIndex
_spaceIndex
_pseudospaceIndex
_distMean
_distStd
_interpointDistance
__stringCodeMap
_decodingPruningPolicy
T@"NSOrderedSet",R,V__stringCodeMap
Tq,R,N,V_sequenceCompression
Tq,R,N,V_distanceFeatureIndex
Tq,R,N,V_sinAlphaFeatureIndex
Tq,R,N,V_cosAlphaFeatureIndex
Tq,R,N,V_gapFeatureIndex
T@"NSString",R,N,V_directionalFeaturesInputName
T@"NSString",R,N,V_characterProbabilityOutputName
T^{CHCodeMap=*Q^II},R,N,V_codeMap
Tq,R,N,V_blankIndex
Tq,R,N,V_spaceIndex
Tq,R,N,V_pseudospaceIndex
TB,N,V_normalizeFeatures
Td,N,V_distMean
Td,N,V_distStd
Td,N,V_interpointDistance
T{CVNLPTextDecodingPruningPolicy=qBfI},N,V_decodingPruningPolicy
_strokeIndexSetsFromTokenRow:
resultRestoringRawPathInResult:
_scoreMeanAndStdForToken:forLocale:
_characterCountInToken:filteringCharacterSet:filteredCharacterCount:
tokenizedTextResultWithString:strokeIndexes:bounds:trailingSeparator:recognizerGenerationIdentifier:
areTokenRowsEquivalent:otherRow:
_originalRowFromRow:
mergeTokenRow:intoUniqueRows:
extendedToken:withStrokeIndexSet:alignmentScore:bounds:
tokenizedTextResultFromResults:shouldPerformStrictFiltering:doesTopLocaleRequireSpecialHandling:hasSwap:
swappableColumnIndexesInResults:locales:topLocaleIndex:swappableIndex:
compressResult:atColumnIndexes:
resultsBySwapping:swappableColumns:topLocaleIndex:topLocale:
initWithTokenColumns:transcriptionPaths:scores:trailingSeparator:recognizerGenerationIdentifier:changeableColumnCount:
initWithTokenColumns:transcriptionPaths:scores:trailingSeparator:recognizerGenerationIdentifier:
initWithTokenColumns:transcriptionPaths:scores:recognizerGenerationIdentifier:
initWithBestPathTokens:pathProbabilities:trailingSeparator:recognizerGenerationIdentifier:
initWithBestPathTokens:pathProbabilities:trailingSeparator:recognizerGenerationIdentifier:changeableColumnCount:
tokenColumns
tokenColumnCount
changeableTokenColumnCount
tokenRowsAtColumnIndex:
tokensInTranscriptionPath:atColumnIndex:
tokenAtLocation:
recognizerGenerationIdentifier
precedingLineBreaks
recognizerDebugDescription
heuristicTextScoreForColumnRange:
averageTokenRecognitionScoreForColumnRange:
hasTextReplacementsInColumnRange:
topTranscription
_rawPath
rawTranscription
transcriptionWithPath:columnRange:filterLowConfidence:
transcriptionWithPath:columnRange:filterLowConfidence:excludeGibberish:rejectionRate:tokenProcessingBlock:
shouldFilterOutStringForToken:isGibberish:
isPathOriginal:
precedingSeparatorForTopTranscriptionPath
precedingSeparatorForRawTranscriptionPath
precedingSeparatorForToken:
strokeIndexesForColumnsInRange:
strokeIndexSetsInPath:columnRange:
isValid
tokensFromTopTranscriptionWithCharacterRange:
tokenizedResultWithFilteredPaths:
languageFitnessForLocale:recognitionMode:
_averageTokenRecognitionScoreInTranscriptionPath:
_rawLanguageFitnessForTranscriptionPath:locale:recognitionMode:
_normalizedLanguageFitness:
_isGibberishToken:
lastTokenStrokeIndexes
textRecognitionResultArrayGivenHistory:
textRecognitionResultArray
_legacyTextRecognitionResultForTranscriptionIndex:
enumerateTokensInTopTranscriptionPathWithBlock:
enumerateTokensInTranscriptionPath:columnRange:tokenProcessingBlock:
isEqualToTokenizedTextResult:
phraseCaseCorrectedResultWithHistory:phraseLexicon:maxPhraseLength:
subResultWithColumnRange:
commonTopStrokeSetsWithResult:
_columnStrokeSetsFromTokenRows:
trailingSeparator
transcriptionPaths
transcriptionPathScores
_tokenColumns
_transcriptionPaths
_transcriptionPathScores
_recognizerGenerationIdentifier
_precedingLineBreaks
_changeableCount
_trailingSeparator
T@"NSString",R,C,N,V_trailingSeparator
T@"NSArray",R,C,N,V_transcriptionPaths
T@"NSArray",R,C,N,V_transcriptionPathScores
T@"NSString",R,C,N
refineAlternativeTokens:historyTokenIDs:wordLanguageModel:
setTokenColumns:
setTranscriptionPaths:scores:
appendTokenColumns:
adjustColumns
prependTokenColumns:prefixTopPath:
trimTokensToTranscriptionPathCount:
filterCandidatesWithOutOfPattern:duplicateTokenIDs:keepOutOfLexiconAlternatives:keepAlternativeLengths:keepSubstrings:shouldKeepOriginalSpelling:
setPrecedingLineBreaks:
setChangeableTokenColumnCount:
offsetAllStrokeIndexesBy:
remapAllStrokeIndexesWithArray:
getCharIndex:
replacementErrorScoreForIntendedCharacter:actualCharacter:
transpositionErrorScoreForIntendedFirstCharacter:intendedSecondCharacter:
newErrorModel
sharedSpellServer
isWordInUserDictionaries:caseSensitive:
topCorrectionForString:contextBeforeToken:contextSeparator:shouldUseErrorModel:forLanguage:
correctionsForString:shouldUseErrorModel:forLocale:
errorModel
setErrorModel:
_spellServer
_errorModel
T@"CHSpellCheckerErrorModel",&,N,V_errorModel
initWithCanvasHeatmap:stroke2ItemMapping:item2StrokeMapping:
clutterFilterByAddingStrokes:removingStrokeIdentifiers:affectedStrokeIdentifiers:
isHighDensityStroke:
highDensityStrokeCount
isEmpty
strokeIDsWithinRectangleRegion:
_heatMap
_CHStrokeID2HeatmapItemID
_heatmapItemID2CHStrokeID
normalizedDrawing:scaleFactor:interpolationDistance:outputPointMap:
normalizedDrawing:targetHeight:minimumDrawingSize:interpolationDistance:outScaleFactor:outputPointMap:
modelName
_modelName
T@"NSString",R,N,V_modelName
initWithModelName:featureIndex:
resourcePath
inputNames
featureCounts
outputNames
classCounts
_resourcePath
_inputNames
_featureCounts
_outputNames
_classCounts
T@"CHSingletonMLModel",R,N,V_model
T@"NSString",R,N,V_resourcePath
T@"NSArray",R,N,V_inputNames
T@"NSDictionary",R,N,V_featureCounts
T@"NSArray",R,N,V_outputNames
T@"NSDictionary",R,N,V_classCounts
normalizedDrawing:interpolationDistance:
_extractFeaturesFromDrawing:numStrokes:numPoints:error:
_extractInputMaskFromDrawing:numStrokes:numPoints:error:
_getPositionalEncodings:error:
classifyStrokes:outTextStrokeProbabilities:cancellationBlock:
_getStringForConfigurationValues:numPoints:
getModelConfigurationForDrawing:outNumStrokes:outNumPoints:
_classifyStrokesInDrawing:outTextStrokeProbabilities:cancellationBlock:
modelConfigurationsNumStrokes
modelConfigurationsNumPoints
modelSmallestConfig
numInputFeatures
sinAngleFeatureIndex
cosAngleFeatureIndex
modelDecoderSize
maxInputWidth
minPointsPerStroke
maxPointsPerStroke
recognitionMaxStrokes
contextMaxStrokes
maxNumberOfInputStrokes
numOutputClasses
textClassIndex
_modelConfigurationsNumStrokes
_modelConfigurationsNumPoints
_modelSmallestConfig
_numInputFeatures
_sinAngleFeatureIndex
_cosAngleFeatureIndex
_modelDecoderSize
_maxInputWidth
_minPointsPerStroke
_maxPointsPerStroke
_recognitionMaxStrokes
_contextMaxStrokes
_maxNumberOfInputStrokes
_numOutputClasses
_textClassIndex
T^v,R,N,V_model
T@"NSArray",R,N,V_modelConfigurationsNumStrokes
T@"NSArray",R,N,V_modelConfigurationsNumPoints
T@"NSString",R,N,V_modelSmallestConfig
Tq,R,N,V_numInputFeatures
Tq,R,N,V_sinAngleFeatureIndex
Tq,R,N,V_cosAngleFeatureIndex
Tq,R,N,V_modelDecoderSize
Tq,R,N,V_maxInputWidth
Tq,R,N,V_minPointsPerStroke
Tq,R,N,V_maxPointsPerStroke
Tq,R,N,V_recognitionMaxStrokes
Tq,R,N,V_contextMaxStrokes
Tq,R,N,V_maxNumberOfInputStrokes
Td,R,N,V_interpointDistance
Tq,R,N,V_numOutputClasses
Tq,R,N,V_textClassIndex
writingDirectionOrderedStrokes:substrokesByStrokeIdentifier:
initWithStrokes:substrokesByStrokeIdentifier:splitIndex:
_substrokeCountForStrokes:substrokesByStrokeIdentifier:
strokeGroup1
strokeGroup2
groupBounds1
groupBounds2
transitionTime
orderedStrokes
orderedStrokesGroup1
orderedStrokesGroup2
substrokeCount1
substrokeCount2
_strokeGroup1
_strokeGroup2
_transitionTime
_orderedStrokes
_orderedStrokesGroup1
_orderedStrokesGroup2
_substrokeCount1
_substrokeCount2
_groupBounds1
_groupBounds2
T@"NSArray",R,N,V_strokeGroup1
T@"NSArray",R,N,V_strokeGroup2
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_groupBounds1
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_groupBounds2
Td,R,N,V_transitionTime
T@"NSArray",R,N,V_orderedStrokes
T@"NSArray",R,N,V_orderedStrokesGroup1
T@"NSArray",R,N,V_orderedStrokesGroup2
Tq,R,N,V_substrokeCount1
Tq,R,N,V_substrokeCount2
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:orderedStrokeIdentifiers:
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:orderedStrokeIdentifiers:
initWithStrokeProvider:locale:textInputTargets:
_strokeIdentifersFromStrokes:
_strokeGroupWithStrokes:orderedStrokeIdentifiers:previousGroups:shouldSearchForStableIdentifier:
_estimateSplitScore:withTextInputTargets:arcLengthsByStrokeIdentifier:
_accumulatedTimeDifferences:
_findMostProbableTextInputTarget:forGroupBounds:outOverlap:outDistance:
_isSplitAcceptable:arcLengthsByStrokeIdentifier:outRejectionReason:
_splitCostThreshold
_transitionTimeWeight
_transitionTimeUpperBound
_verticalDistanceWeight
_leftTransitionWeight
_leftTransitionUpperBound
_horizontalDistanceBarrier
_horizontalDistanceWeight
_aspectRatioWeight
_writingDirectionWeight
_writingDirectionUpperBound
_writingDirectionMinCoeff
_minLineHeightScore
_minArcLengthScore
_expectedSubstrokesPerLine
_minSubstrokesForSplit
_targetFitnessWeight
_reorderStrokes
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:startTimestamp:endTimestamp:
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:startTimestamp:endTimestamp:
startTimestamp
endTimestamp
_startTimestamp
_endTimestamp
Td,R,N,V_startTimestamp
Td,R,N,V_endTimestamp
_timeSortedStrokesForIdentifiers:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:isHighResponsivenessTask:strokeClassificationModel:strokeGroupingRequirement:partialResultBlock:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:isHighResponsivenessTask:strokeClassificationModel:strokeGroupingRequirement:subjectStrokeIdentifiers:partialResultBlock:
main
cancel
_setStatus:
_isTransitionValidFromStatus:toStatus:
_logResultsIfAppropriateWithStrokeProvider:
_textRecognitionResultsForTextStrokeGroup:groupingManager:
_tokenizedTextResultForDrawing:usingRecognizer:isRemoteRecognizer:locale:strokeLimit:recognitionError:
_recognitionResultsForNonTextStrokeGroup:groupingManager:
inputResult
status
cancelled
setCancelled:
recognitionLocales
outputResult
_setOutputResult:
strokeGroupingRequirement
isHighResponsivenessTask
saveInputDrawings
setSaveInputDrawings:
forceRecognitionStrokeGroupIdentifiers
setForceRecognitionStrokeGroupIdentifiers:
strokeGroupingOnly
setStrokeGroupingOnly:
_recognizersQueue
strokeClassificationModel
subjectStrokeIdentifiers
partialResultBlock
setPartialResultBlock:
_cancelled
_isHighResponsivenessTask
_saveInputDrawings
_strokeGroupingOnly
_inputResult
_status
_recognitionLocales
_outputResult
_strokeGroupingRequirement
_forceRecognitionStrokeGroupIdentifiers
__recognizersQueue
_strokeClassificationModel
_subjectStrokeIdentifiers
_partialResultBlock
T@"CHRecognitionSessionResult",&,N,S_setOutputResult:,V_outputResult
Tq,N,S_setStatus:,V_status
T@"NSObject<OS_dispatch_queue>",R,N,V__recognizersQueue
T@"CHStrokeClassificationModel",R,N,V_strokeClassificationModel
T@"NSArray",R,N,V_subjectStrokeIdentifiers
TB,V_cancelled
T@?,C,N,V_partialResultBlock
T@"CHRecognitionSessionResult",R,N,V_inputResult
T@"<CHRecognitionSessionTaskDelegate>",N,V_delegate
T@"NSArray",R,C,N,V_recognitionLocales
Tq,R,N,V_strokeGroupingRequirement
TB,R,N,V_isHighResponsivenessTask
TB,N,V_saveInputDrawings
T@"NSSet",C,N,V_forceRecognitionStrokeGroupIdentifiers
TB,N,V_strokeGroupingOnly
updateMultiLocaleResultDictionary:locales:
swapMultiLocaleResults:locales:topLocaleIndex:resultHasSwap:resultTopLocale:
combineMultiLocaleResults:locales:topLocaleIndex:mergedResultPostprocessingBlock:
q_textInputItemsFromSessionResult:
availableItems
_setAvailableItems:
textInputTargetsDataSource
setTextInputTargetsDataSource:
totalDuration
setTotalDuration:
_availableItems
_textInputTargetsDataSource
_totalDuration
T@"NSArray",C,N,S_setAvailableItems:,V_availableItems
Td,N,V_totalDuration
T@"<CHTextInputQueryTargetDataSource>",W,V_textInputTargetsDataSource
queryItemStableIdentifierForStrokeGroup:
initWithIdentifier:stableIdentifier:strokeIdentifiers:correctionResult:
isEqualToTextInputQueryItem:
itemIdentifier
itemStableIdentifier
correctionResult
_itemIdentifier
_itemStableIdentifier
_correctionResult
T@"NSNumber",R,N,V_itemIdentifier
T@"NSNumber",R,N,V_itemStableIdentifier
T@"CHTextCorrectionResult",R,N,V_correctionResult
_dataDetectorResultsForSessionResult:
_enumerateDetectedRangesForContextualTextResults:usingBlock:
_dataDetectorConfiguration
initWithStrokeIdentifiers:detectedResult:estimatedBaseline:
isEqualToDataDetectorQueryItem:
estimatedBaseline
dataDetectorResult
_estimatedBaseline
_dataDetectorResult
T@"DDScannerResult",R,N,V_dataDetectorResult
Tr^{CGPath=},R,N,V_estimatedBaseline
initWithStrokeIdentifiers:queryResult:estimatedBaseline:
isEqualToPrefixQueryItem:
queryResult
_queryResult
T@"NSString",R,N,V_queryResult
hashtagQueryForRecognitionSession:
mentionQueryForRecognitionSession:
prefixQueryWithPrefix:forRecognitionSession:
hashtagDelimiters
initWithRecognitionSession:prefix:validSuffixes:delimiters:
_normalizeString:
_normalizeSuffixes:
_isTokenStringMatchingQuery:allowPartialMatching:
_queryResultForTokens:groupResult:candidateGroup:
_stringForTokens:
_prefixQueryResultsForSessionResult:
validSuffixes
setValidSuffixes:
prefix
_validSuffixes
_queryDelimiters
_prefix
T@"NSString",R,C,N,V_prefix
T@"NSSet",C,N
substrokesForStroke:
initWithStrokeIdentifier:bounds:startTimestamp:endTimestamp:convexHull:curvature:
convexHull
isEqualToSubstroke:
curvature
_convexHull
_curvature
Td,R,N,V_curvature
initWithSubstroke:
orientationTransform
orientedBounds
substroke
writingOrientation
setWritingOrientation:
strokeDeviation
setStrokeDeviation:
originalWritingDirectionIndex
setOriginalWritingDirectionIndex:
coalescedCenter
setCoalescedCenter:
_substroke
_originalWritingDirectionIndex
_writingOrientation
_strokeDeviation
_coalescedCenter
T@"CHSubstroke",R,N,V_substroke
T{CGVector=dd},N,V_writingOrientation
T{CGVector=dd},N,V_strokeDeviation
Tq,N,V_originalWritingDirectionIndex
T{CGPoint=dd},N,V_coalescedCenter
_attributedStringFromString:withColor:font:paragraphStyle:
_sutherlandHodgmanClipForSubjectPolygon:usingClipPolygon:
_createClippedPolygonForPolygon:clippingLine:clippedPolygonVertexCount:
initWithVertices:vertexCount:
initWithRect:
area
polygonDrawing
polygonByIntersectingWithClipPolygon:
edgeCountIntersectingLineSegment:
enumerateEdgesWithBlock:
setArea:
vertexCount
vertices
_area
_vertexCount
_vertices
Td,N,V_area
Tq,R,N,V_vertexCount
T^{CGPoint=dd},R,N,V_vertices
_markStrokeGroupsAsActive:
resultDrawn
setResultDrawn:
activeStrokeGroupAncestorIdentifiers
setActiveStrokeGroupAncestorIdentifiers:
newGroupsDefaultToActive
_newGroupsDefaultToActive
_resultDrawn
_activeStrokeGroupAncestorIdentifiers
T@"CHRecognitionSessionResult",&,N,V_resultDrawn
T@"NSSet",C,N,V_activeStrokeGroupAncestorIdentifiers
T@"<CHStrokeGroupBasedVisualizationDelegate>",W,D,N
TB,R,N,V_newGroupsDefaultToActive
handleRecognitionRequest:withReply:
transcriptionPathsForTokenizedResult:recognitionRequest:withReply:
newRemoteRecognizerWithMode:locales:
maxRequestStrokeCountForLocale:
absoluteMaxStrokeCountPerRequest
initWithMode:locales:activeCharacterSetPerLocale:recognizerOptions:
_setupXPCConnectionIfNeeded
_teardownXPCConnection
textRecognitionResultForDrawing:options:error:
transcriptionPathsForTokenizedTextResult:withHistory:scores:error:
_recognitionRequestWithDrawing:options:
_recognitionResultForRequest:error:
logDrawingsAndResultsForRequest:result:error:
isEqualToRemoteRecognizer:
_connection
_shouldUseStrokeReordering
__connection
T@"NSXPCConnection",R,N,V__connection
T@"NSDictionary",R,C,N,V_activeCharacterSetPerLocale
Ti,R,N,V_recognitionMode
TB,R,N,V_enableCachingIfAvailable
TB,R,N,V_enableGen2ModelIfAvailable
TB,R,N,V_enableGen2CharacterLMIfAvailable
visualizationManagerDidUpdateSessionStatus:
availableVisualizationIdentifiers
localizedNameForVisualizationIdentifier:
_classForVisualizationIdentifier:
availableRecognitionSessionStatusKeys
localizedNameForRecognitionSessionStatusKey:
variableHeightForRecognitionSessionStatusKey:
newColorForVisualizedItemAtIndex:
visualization:needsDisplayInRect:
visualizationNeedsDisplay:
visualizationIndexForStrokeGroup:
recognitionSessionDidUpdateRecognitionResult:
preferredRecognitionResultUpdatesInterval
recognitionSessionDidChangeStatus:
setEnabled:forVisualizationIdentifier:
isEnabledVisualizationForIdentifier:
_isActiveVisualizationForIdentifier:
setStatusReportingEnabled:
valueForRecognitionStatusKey:
_updateInstalledVisualizations
_addVisualizationForIdentifier:
_removeVisualizationForIdentifier:
_updateSessionRegistration
toggleSelectiveVisualizationsAtPoint:
_updateKnownStrokeGroupIndexes
statusReportingEnabled
_enabledVisualizationIDs
_activeVisualizationIDs
_activeVisualizationsByID
_strokeGroupIndexByAncestorID
_registeredAsChangeObserver
set_registeredAsChangeObserver:
_registeredAsInputDrawingsClient
set_registeredAsInputDrawingsClient:
_statusReportingEnabled
__registeredAsChangeObserver
__registeredAsInputDrawingsClient
__enabledVisualizationIDs
__activeVisualizationIDs
__activeVisualizationsByID
__strokeGroupIndexByAncestorID
T@"NSMutableSet",R,N,V__enabledVisualizationIDs
T@"NSMutableArray",R,N,V__activeVisualizationIDs
T@"NSMutableDictionary",R,N,V__activeVisualizationsByID
T@"NSMutableDictionary",R,N,V__strokeGroupIndexByAncestorID
TB,N,V__registeredAsChangeObserver
TB,N,V__registeredAsInputDrawingsClient
T@"<CHVisualizationManagerDelegate>",N,V_delegate
TB,N,V_statusReportingEnabled
contextualTextResultsForContextStrokes:completion:shouldCancel:
start
pause
waitForPendingUpdates
_updateForRecognitionSessionResultChangeIfNeeded
lastProcessedStrokeProviderVersion
setLastProcessedStrokeProviderVersion:
preferredUpdatesInterval
setPreferredUpdatesInterval:
_queryActive
set_queryActive:
_processingQueue
_currentProcessingSessionResult
_lastProcessedTime
__queryActive
_lastProcessedStrokeProviderVersion
_preferredUpdatesInterval
TB,N,V__queryActive
T@"<CHStrokeProviderVersion>",C,V_lastProcessedStrokeProviderVersion
T@"<CHQueryDelegate>",W,N,V_delegate
Td,N,V_preferredUpdatesInterval
q_setNeedsQueryResultUpdating
q_queryResultDidChange
q_sessionResult
processingQueue
T@"NSObject<OS_dispatch_queue>",R,N
defaultWordTerminationCharacterForLocale:
initWithTextResult:terminatingSpecialCharacter:strokeGroup:
setStrokeGroup:
terminatingSpecialCharacter
setTerminatingSpecialCharacter:
_terminatingSpecialCharacter
T@"CHTokenizedTextResult",&,N,V_textResult
T@"CHStrokeGroup",&,N,V_strokeGroup
T@"NSString",&,N,V_terminatingSpecialCharacter
initWithTextResults:
textResultToIndexMappingFromTopTranscriptionWithCharacterRange:intersectionRanges:
textResults
setTextResults:
T@"NSArray",&,N,V_textResults
initWithContextStrokes:contextResults:strokeGroupingResult:strokeClassificationResult:strokeProvider:
majorityScriptId
numCharacters
meanRotationCorrectionAngle
createTelemetryDictionary:nonTextRatio:
straightenWithProgress:shouldCancel:
handleRemainingStrokes:contextStrokeGroups:transformations:groupBounds:
fontTransferForDrawing:transcription:shouldCancel:
fontTransferTransformForLineAtIndex:progress:shouldCancel:
textStrokePointTransformationFromAffineTransformation:
contextStrokes
setContextStrokes:
contextResults
setContextResults:
setStrokeProvider:
setStrokeGroupingResult:
setStrokeClassificationResult:
correctionAngles
setCorrectionAngles:
_originalBoundingBoxes
_transformedBoundingBoxes
_contextStrokes
_contextResults
_correctionAngles
T@"NSArray",&,V_contextStrokes
T@"NSArray",&,V_contextResults
T@"<CHStrokeProvider>",&,V_strokeProvider
T@"CHStrokeGroupingResult",&,V_strokeGroupingResult
T@"CHStrokeClassificationResult",&,V_strokeClassificationResult
T@"NSMutableArray",&,V_correctionAngles
obfuscateString:
initWithTrie:staticLexicon:customLexicon:flags:stringNormalizationFunction:
isInappropriateLexiconEntry:
_isInappropriateString:withLexicon:
_isInappropriateString:withTrie:
isInappropriateString:
isInappropriateTokenID:
_isInappropriateTokenID:withLexicon:
_ovsTrie
_flagsFilter
_stringNormalizationFunction
initWithInputTarget:affectedRange:textResult:resultType:isCharacterLevel:error:
isEqualToTextCorrectionResult:
inputTarget
affectedRange
resultType
isCharacterLevel
error
_characterLevel
_inputTarget
_resultType
_error
_affectedRange
T@"CHTextInputTarget",R,N,V_inputTarget
T{_NSRange=QQ},R,N,V_affectedRange
T@"CHTokenizedTextResult",R,N,V_textResult
Tq,R,N,V_resultType
characterLevel
TB,R,N,GisCharacterLevel,V_characterLevel
T@"NSError",R,N,V_error
stringForRecognitionMode:
stringForRecognitionContentType:
stringForAutoCapitalizationMode:
stringForAutoCorrectionMode:
_stringForRecognitionLanguage:
_stringForRecognitionScript:
defaultLocaleForRecognitionType:withMode:
_decodeLocale:supportedLanguage:supportedScript:
supportedLanguageForLocale:
supportedScriptForLocale:
isLanguageSupported:withMode:
isSupportedLatinScriptLocale:withMode:
isSupportedCyrillicScriptLocale:withMode:
forcedGen2ModelLocaleForLocale:
effectiveRecognitionLocales:recognitionMode:
recognitionEngineCachingKeyForRecognitionLocale:
localesByLanguageGroup:
defaultActiveCharacterSetForLocale:
defaultActiveCharacterSetForLocales:
shouldForceNoAlternativeRecognitionCandidates:
skipLatinActivationThreshold
loadWordLanguageModelFromOptions:fallbackLocale:
defaultMinimumDrawingSize
shouldUseStrokeReorderingForMode:
shouldApplyLatinSpacingForLocale:
shouldUseFullWidthSpaceBasedOnContextForLocale:
swappableColumnIndexesFromResults:locales:
swappableColumnIndexesFromResults:locales:topLocaleIndex:
shouldPerformStrictCandidateFiltering:
spellCheckingLocaleForRecognitionLocale:string:
shouldAdjustGroupingForLocale:
shouldAdjustGroupingHeuristicsForVeryComplexCharacters:
modelNameChinese
modelNameJapanese
modelNameThai
modelNameKorean
modelNameLatin
modelNameCyrillic
allNonLatinModelNames
drawingStrokeLimitForLocale:
shouldRemoveSpaceBetweenPreviousChar:andNextChar:inLocale:
shouldInsertSpaceBetweenPreviousChar:andNextChar:inLocale:inString:atRange:withQuoteCount:
shouldRefinePrefixQueryMatchesForLocale:
shouldAllowSpaceInsertionGestureForLocale:
overridenParameterValueForKey:defaultValue:
shouldSwapCyrillicTopResult:topRange:englishResult:englishRange:prevousGroupTopString:
shouldAddSpaceToNeutralQuotationMarks:
initWithMode:locale:contentType:enableCachingIfAvailable:enableGen2ModelIfAvailable:enableGen2CharacterLMIfAvailable:
initWithMode:locale:contentType:autoCapitalizationMode:autoCorrectionMode:enableCachingIfAvailable:enableGen2ModelIfAvailable:enableGen2CharacterLMIfAvailable:
isTextMode
isEqualToRecognizerConfiguration:
configurationKey
hasSameResourcesAsConfiguration:
hasSamePostProcessingAsConfiguration:
shouldGenerateDigitLetterAlternatives
shouldEnforceGrammarOnTransliterations
supportedSegmentationStrategy
shouldApplyRomanPostProcessing
shouldApplyChinesePostProcessing
shouldRefineChineseCharacterCandidates
shouldLoadCJKLexicons
shouldComposeLexiconWithNetwork
shouldExpandLexiconInNetwork
shouldApplyLexicalPenalty
shouldApplyDiacriticSensitivity
shouldExpandCodePoints
shouldRunNextGenRecognizer
shouldRunNextGenCharacterLM
shouldAllowNGramCharacterLM
decodingCharacterLMWeight
decodingWordLMWeight
decodingLexiconWeight
decodingLexiconLowerBoundLogProbability
characterLMLowerBoundLogProbability
decodingWordLMLowerBoundLogProbability
shouldPenalizePrefixes
shouldPerformGlobalBestSearch
shouldPerformGlobalBestSearchWithSmallLattice
shouldPerformIntegratedLexiconExpansion
shouldFallbackOnSingleCharacterExpansion
shouldComputeStrokePenalties
shouldPenalizeLetterInsertion
shouldApplyCandidatesThresholding
shouldRelaxFinalCandidatesThresholding
shouldFilterLowProbabilityTranscriptionPaths
shouldTransliterateConfusableCharacters
shouldTransliterateFrenchLigatures
shouldAutoCapitalize
shouldRemoveSpacesFromStrongURLs
shouldAutoCorrect
unsafeForSpellCorrection
shouldRunLexiconCorrectionPostProcessingStep
shouldApplyLMRescoring
shouldApplyLMSorting
shouldTransliterateAndSynthetizeCandidates
shouldTransliterateSentencesSCTC
shouldTransliterateForChineseJapaneseLigatures
shouldReorderSCTCConfusion
shouldRecoverCyrillicCandidates
shouldUseCaching
shouldPreserveLegacyTranscriptionPaths
shouldUseTokenPrecedingSpaces
shouldReplaceInvalidTokenIDs
shouldTransformCharacterProbabilitiesIntoLogScores
shouldPromoteCJKCommonCharacters
shouldMarkMultiWordOVS
shouldKeepOutOfPatternCandidates
shouldKeepDuplicateTokenIDs
shouldRefineCandidates
shouldDetectChinesePunctuation
shouldDetectRomanPunctuation
shouldTreatAllSmallStrokesAsPunctuation
shouldTransliterateHalfWidthPunctuations
shouldAddAlternativeWidthCandidates
shouldApplySemanticTokenization
shouldIdentifyChangeableColumns
shouldMarkNoWhiteSpaceColumnsChangeable
shouldRemoveSpacesFromHashtagsAndMentions
shouldRemoveSpacesFromEnglishAndKoreanParticles
shouldConvertKanaInPostProcessing
requiredInappropriateFilteringFlags
mecabraInputMethodType
shouldForwardMecabraOTAAssetsUpdate
precedingSpaceDefaultBehavior
forcedActiveCharacterSet
linguisticResourcesFallbackLocale
newStaticLexicon:
newSecondaryStaticLexicon:
postProcessorLexiconWithStaticLexicon:secondaryLexicon:
newPhraseLexicon:
newCJKStaticLexicon
newWordLanguageModel
newWordLanguageModelForRecognizer:async:synchronizationQueue:
newSpellChecker
newCharacterLanguageModelAndMap:force:
newOVSStringCheckerWithStaticLexicon:customLexicon:
newPatternFST
sharedPostProcessingFST
newGrammarFST
newRadicalClusterFST
newMecabraWrapper
newTransliterationVariantMap
newRecognitionEngine
effectiveEngineLanguage
newCTCRecognitionModel
newPostProcessorWithStaticLexicon:customLexicon:phraseLexicon:customPhraseLexicon:characterLM:textReplacements:postProcessingFST:wordLM:mecabraWrapper:ovsStringChecker:spellChecker:lmVocabulary:maxResultCount:
newMergedResultPostProcessorWithStringChecker:
newCTCTextDecoderWithStaticLexicon:customLexicon:wordLanguageModel:
newFreeFormEngine
maxRecognitionResultDefaultCount
engineCandidateCount
decodingCommitActionBlock
shouldPruneMixedScriptWordPaths
languageResourceBundleWithStaticLexicon:customLexicon:wordLanguageModel:
lexiconStringNormalizationFunction
mode
contentTypeForNoSpaceRecognition
_language
_script
_mode
_contentTypeForNoSpaceRecognition
Ti,R,N,V_mode
T@"NSLocale",R,C,N,V_locale
Ti,R,N,V_contentTypeForNoSpaceRecognition
_strokeProviderDrawn
set_strokeProviderDrawn:
__strokeProviderDrawn
T@"<CHStrokeProvider>",&,N,V__strokeProviderDrawn
initWithSessionVersion:sessionResultVersion:
isValidSessionVersion
isValidSessionResultVersion
sessionVersion
sessionResultVersion
_sessionVersion
_sessionResultVersion
Tq,R,N,V_sessionVersion
Tq,R,N,V_sessionResultVersion
visibleStrokeEncodedIdentifiers
isLocaleSupported:
_cacheKeyForLocales:
shouldRunRecognitionLocallyWithEnvironment:
recognizerForLocale:
textCorrectionRecognizerForLocales:
initWithMode:
initWithMode:recognitionSessionResult:dataSource:
_setupExecutionQueuesForMode:
_setSessionVersion:
setPreferredLocales:
setDataSource:
lastRecognitionResult
_validateLastRecognitionResult:visibleStrokeIdentifiers:
_cachedFastGroupingResult
_cachedClutterFilter
_setLastRecognitionResult:
_setCachedFastGroupingRecognitionResult:
_setPartialRecognitionResult:
latestStrokeProvider
_setLatestStrokeProvider:
_updateLatestStrokeProviderVisibleStrokes
_invalidateCachedResults
_updateRecognitionSessionStatus
_notifyObserversWithBlock:
_hasPendingRecognitionTasks
indexableContent
setNeedsRecognitionUpdate
cancelOngoingRequests
_cancelOngoingRequests
_cancelAllHighResponsivenessTasks
rebuildRecognitionResults
_isReadyToProcessChanges
_preferredCoalescingInterval
_scheduleProcessStrokeProviderChangesImmediately:
_processPendingStrokeChangesIfAvailable
_newRecognitionSessionTaskWithStrokeGroupingRequirement:isHighResponsivenessTask:strokeGroupingOnly:subjectStrokeIdentifiers:partialResultBlock:
_cleanupCachedRecognizers
sessionData
loadSessionData:error:
dataSource
setRecognitionEnvironment:
_textRecognitionLocales
_setTextRecognitionLocales:
_hasUnprocessedChanges
_setHasUnprocessedChanges:
_recognizersByLocaleID
_latestTextInputTargets
_setLatestTextInputTargets:
_correctionRecognizersByLocalesKey
_changeCoalescingIndex
set_changeCoalescingIndex:
_changeObservers
_inputDrawingClients
_tasksWorkQueue
_sessionQueue
_highResponsivenessQueue
_taskQueueQoSClass
_activeTasks
_shouldForceFastGrouping
_setShouldForceFastGrouping:
_lastRecognitionResult
_latestStrokeProvider
_latestStrokeProviderVisibleStrokes
_cachedFastGroupingRecognitionResult
_partialRecognitionResult
__hasUnprocessedChanges
__shouldForceFastGrouping
__taskQueueQoSClass
_dataSource
__textRecognitionLocales
__recognizersByLocaleID
__latestTextInputTargets
__correctionRecognizersByLocalesKey
__changeCoalescingIndex
__changeObservers
__inputDrawingClients
__tasksWorkQueue
__sessionQueue
__highResponsivenessQueue
__activeTasks
T@"NSArray",C,N,S_setTextRecognitionLocales:,V__textRecognitionLocales
T@"CHRecognitionSessionResult",&,S_setLastRecognitionResult:
Tq,N,S_setStatus:
T@"<CHStrokeProvider>",&,S_setLatestStrokeProvider:
T@"CHRecognitionSessionVersion",&,S_setSessionVersion:
TB,N,S_setHasUnprocessedChanges:,V__hasUnprocessedChanges
T@"NSMutableDictionary",R,N,V__recognizersByLocaleID
T@"NSArray",&,S_setLatestTextInputTargets:,V__latestTextInputTargets
T@"NSMutableDictionary",R,N,V__correctionRecognizersByLocalesKey
TQ,N,V__changeCoalescingIndex
T@"NSMutableArray",R,N,V__changeObservers
T@"NSMutableArray",R,N,V__inputDrawingClients
T@"NSObject<OS_dispatch_queue>",R,N,V__tasksWorkQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__sessionQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__highResponsivenessQueue
TI,R,N,V__taskQueueQoSClass
T@"NSMutableArray",R,N,V__activeTasks
TB,S_setShouldForceFastGrouping:,V__shouldForceFastGrouping
Tq,R,N,V_mode
T@"NSArray",C,N,V_preferredLocales
T@"NSArray",C,N
T@"<CHRecognitionSessionDataSource>",N,V_dataSource
Tq,N,V_recognitionEnvironment
T@"NSData",R,N
recognizableDrawingForStrokeGroupQueryItem:
registerChangeObserver:
unregisterChangeObserver:
createRecognizerForLocale:sessionMode:remote:priority:
createRecognizerForLocales:sessionMode:remote:priority:
drawingCanvasSize
initWithMode:withVersion:
shouldForceFastGrouping
setShouldForceFastGrouping:
waitForPendingRecognitionTasks
lastRecognitionResultWaitingForPendingTasks
registerInputDrawingClient:
unregisterInputDrawingClient:
tokenStrokeIdentifiersForContextStrokes:point:tokenizationLevel:completion:shouldCancel:
_strokeGroupsContainingStrokeIdentifiers:
_strokeIdentifiersInGroupsContainingStrokeIdentifiers:
_strokeIdentifiersInProximalGroupsForStrokeIdentifiers:
_strokeIdentifiersInWordsContainingStrokeIdentifiers:
_strokeIdentifiersFromCachedResultUsingContextStrokes:tokenizationLevel:
_contextualTextResultsFromCachedResultUsingContextStrokes:shouldCancel:
_recognitionSessionResultOnDemandUsingContextStrokes:shouldCancel:
_contextResultForContextStrokes:outStrokeGroupingResult:outStrokeClassificationResult:shouldCancel:
_drawingCanvasSizeForLatestStrokeProviderSnapshot
effectiveLocalesFromLocales:
strokeIdentifiersInProximalGroupsForStrokeIdentifiers:sortedStrokeGroups:clusteredStrokeGroups:unusedStrokeIdentifiers:
_strokeGroupsInProximityOfSubjectStrokeGroups:clusteredStrokeGroups:
T@"CHRecognitionSessionVersion",R
T@"CHRecognitionSessionResult",R
T@"<CHStrokeProvider>",R
T@"CHTextInputQuery",W,N
defaultTextAffectedRangeForTargetContentInfo:
_modifiedTextResult:replacingString:
_improvedSingleCharacterOneColumnTextResult:targetContentInfo:insertionRange:locale:affectedRange:
_relativeRangeOfPreviousCharacterFromTargetContentInfo:absoluteInsertionRange:
initWithLocales:remoteRecognition:priority:
textCorrectionResultForDrawing:targetContentInfo:originalDrawing:lastStroke:localTypedContextBounds:normalizedDrawingScaleFactor:previousCorrectionResult:
_editingGestureResultForDrawing:originalDrawing:lastStroke:targetContentInfo:previousResult:
_textInsertionResultForDrawing:targetContentInfo:originalDrawing:localTypedContextBounds:normalizedDrawingScaleFactor:insertionRange:
_refinedGestureResultForPreviousResult:originalDrawing:lastStroke:targetContentInfo:
_gestureOnBlankAreaResultForDrawing:originalDrawing:targetContentInfo:
_verticalBarGestureOnBlankAreaResultForDrawing:originalDrawing:targetContentInfo:
_verticalBarGestureCloseToTextForDrawing:originalDrawing:targetContentInfo:localTypedContextBounds:
_precedingLineBreakCountForAutoLineBreak:targetContentInfo:
_precedingSpaceBehaviorFromTargetContentInfo:drawingBounds:localTypedContextBounds:insertionRange:lastCharacterBefore:
_textBeforeStringForTargetContentInfo:insertionRange:
_textAfterStringForTargetContentInfo:insertionRange:
_isInNoSpaceRegionNextToTextFromTargetContentInfo:drawingBounds:localTypedContextBounds:insertionRange:outIsWhiteSpace:outDistance:outSpaceDistanceThreshold:
isRemoteRecognition
_textRecognizer
_shapeRecognizer
_cornerDetector
_isRemoteRecognition
__textRecognizer
__shapeRecognizer
__cornerDetector
T@"<CHRecognizing>",R,N,V__textRecognizer
T@"CHRecognizer",R,N,V__shapeRecognizer
T@"CHCornerDetector",R,N,V__cornerDetector
TB,R,N,V_isRemoteRecognition
sharedCharacterSetRules
expectedMaxStrokeCount:
expectedMinStrokeCount:
expectedMaxDotCount:
characterType:
characterTypeFromString:
_expectedMaxStrokeCount:
_expectedMinStrokeCount:
_characterType:
_expectedMaxDotCount:
lowercaseCharSet
setLowercaseCharSet:
uppercaseCharSet
setUppercaseCharSet:
digitCharSet
setDigitCharSet:
startPunctuationCharSet
setStartPunctuationCharSet:
middlePunctuationCharSet
setMiddlePunctuationCharSet:
endOfWordPunctuationCharSet
setEndOfWordPunctuationCharSet:
endOfSentencePunctuationCharSet
setEndOfSentencePunctuationCharSet:
digitStartPunctuationCharSet
setDigitStartPunctuationCharSet:
digitEndPunctuationCharSet
setDigitEndPunctuationCharSet:
arithmeticOperatorCharSet
setArithmeticOperatorCharSet:
dateTimeSeparatorCharSet
setDateTimeSeparatorCharSet:
dateTimeEndLetterCharSet
setDateTimeEndLetterCharSet:
numeralEndLetterCharSet
setNumeralEndLetterCharSet:
lexiconSkipCharSet
setLexiconSkipCharSet:
containsDotCharSet
setContainsDotCharSet:
containsTwoDotsCharSet
setContainsTwoDotsCharSet:
prefixCapitalizationExceptionCharSet
setPrefixCapitalizationExceptionCharSet:
selfLoopPunctuationCharSet
setSelfLoopPunctuationCharSet:
emoticonTopCharSet
setEmoticonTopCharSet:
emoticonMiddleCharSet
setEmoticonMiddleCharSet:
emoticonBottomCharSet
setEmoticonBottomCharSet:
emailAtCharSet
setEmailAtCharSet:
emailPunctuationCharSet
setEmailPunctuationCharSet:
urlPunctuationCharSet
setUrlPunctuationCharSet:
nonSpaceSeparatorCharSet
setNonSpaceSeparatorCharSet:
punctuationThatNeedSpaceCleanup
setPunctuationThatNeedSpaceCleanup:
currencySymbols
setCurrencySymbols:
symbolsRequiringSpaceBeforeInFrench
setSymbolsRequiringSpaceBeforeInFrench:
sentenceStartPunctuationInSpanish
setSentenceStartPunctuationInSpanish:
commonJapaneseSymbols
setCommonJapaneseSymbols:
CJKPairedPunctuationsCharSet
setCJKPairedPunctuationsCharSet:
alphaNumericCharSet
setAlphaNumericCharSet:
strokeMaxPenalties
setStrokeMaxPenalties:
signatureUniChar
setSignatureUniChar:
_charSetRulesQueue
_lowercaseCharSet
_uppercaseCharSet
_digitCharSet
_startPunctuationCharSet
_middlePunctuationCharSet
_endOfWordPunctuationCharSet
_endOfSentencePunctuationCharSet
_digitStartPunctuationCharSet
_digitEndPunctuationCharSet
_arithmeticOperatorCharSet
_dateTimeSeparatorCharSet
_dateTimeEndLetterCharSet
_numeralEndLetterCharSet
_lexiconSkipCharSet
_containsDotCharSet
_containsTwoDotsCharSet
_prefixCapitalizationExceptionCharSet
_selfLoopPunctuationCharSet
_emoticonTopCharSet
_emoticonMiddleCharSet
_emoticonBottomCharSet
_emailAtCharSet
_emailPunctuationCharSet
_urlPunctuationCharSet
_nonSpaceSeparatorCharSet
_punctuationThatNeedSpaceCleanup
_currencySymbols
_symbolsRequiringSpaceBeforeInFrench
_sentenceStartPunctuationInSpanish
_commonJapaneseSymbols
_CJKPairedPunctuationsCharSet
_alphaNumericCharSet
__charSetRulesQueue
_strokeMaxPenalties
_signatureUniChar
T@"NSCharacterSet",&,N,V_lowercaseCharSet
T@"NSCharacterSet",&,N,V_uppercaseCharSet
T@"NSCharacterSet",&,N,V_digitCharSet
T@"NSCharacterSet",&,N,V_startPunctuationCharSet
T@"NSCharacterSet",&,N,V_middlePunctuationCharSet
T@"NSCharacterSet",&,N,V_endOfWordPunctuationCharSet
T@"NSCharacterSet",&,N,V_endOfSentencePunctuationCharSet
T@"NSCharacterSet",&,N,V_digitStartPunctuationCharSet
T@"NSCharacterSet",&,N,V_digitEndPunctuationCharSet
T@"NSCharacterSet",&,N,V_arithmeticOperatorCharSet
T@"NSCharacterSet",&,N,V_dateTimeSeparatorCharSet
T@"NSCharacterSet",&,N,V_dateTimeEndLetterCharSet
T@"NSCharacterSet",&,N,V_numeralEndLetterCharSet
T@"NSCharacterSet",&,N,V_lexiconSkipCharSet
T@"NSCharacterSet",&,N,V_containsDotCharSet
T@"NSCharacterSet",&,N,V_containsTwoDotsCharSet
T@"NSCharacterSet",&,N,V_prefixCapitalizationExceptionCharSet
T@"NSCharacterSet",&,N,V_selfLoopPunctuationCharSet
T@"NSCharacterSet",&,N,V_emoticonTopCharSet
T@"NSCharacterSet",&,N,V_emoticonMiddleCharSet
T@"NSCharacterSet",&,N,V_emoticonBottomCharSet
T@"NSCharacterSet",&,N,V_emailAtCharSet
T@"NSCharacterSet",&,N,V_emailPunctuationCharSet
T@"NSCharacterSet",&,N,V_urlPunctuationCharSet
T@"NSCharacterSet",&,N,V_nonSpaceSeparatorCharSet
T@"NSCharacterSet",&,N,V_punctuationThatNeedSpaceCleanup
T@"NSCharacterSet",&,N,V_currencySymbols
T@"NSCharacterSet",&,N,V_symbolsRequiringSpaceBeforeInFrench
T@"NSCharacterSet",&,N,V_sentenceStartPunctuationInSpanish
T@"NSCharacterSet",&,N,V_commonJapaneseSymbols
T@"NSCharacterSet",&,N,V_CJKPairedPunctuationsCharSet
T@"NSCharacterSet",&,N,V_alphaNumericCharSet
T{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}},N,V_strokeMaxPenalties
T{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}},N,V_signatureUniChar
T@"NSObject<OS_dispatch_queue>",R,N,V__charSetRulesQueue
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:substrokePlacementsByStrokeIdentifier:
substrokePlacementsByStrokeIdentifier
_substrokePlacementsByStrokeIdentifier
T@"NSDictionary",R,N,V_substrokePlacementsByStrokeIdentifier
isStroke:versionOfStrokeWithIdentifier:
_boundingBoxesOfStrokesInGroup:rotatedAroundPoint:byAngle:
initWithStrokeProvider:defaultWritingOrientation:locales:isInlineContinuousMode:inlineContinuousModeTargets:
_applyDefaultGroupingParameters
_applyStrictGroupingParameters
_updateGroups:createdGroups:deletedGroups:forAddedStroke:substrokePlacementsByStrokeIdentifier:reusableIDRemovedGroups:trySplit:cancellationBlock:
_textLineStrokeGroupByAddingStroke:withSubstrokePlacements:intoStrokeGroup:mergingEndSubgroup:bestStrokeMergeEnd:
_newTextLineStrokeGroupWithStroke:withSubstrokePlacements:reusableIDRemovedGroups:
_normalizedBoundsForWritingDirectionSortedStrokes:strokeWritingOrientations:firstStrokeDeviation:originalDrawing:rotatedSortedStrokes:
_lastSubstrokeCoalescedWithOverlappingSubstrokes:strokeDeviation:
_scaleFactorForBoundsHeight:
_verticalOffsetForBoundsHeight:andScaleFactor:
_writingDirectionSortedStrokeIdentifiersFromSubstrokes:localWritingOrientations:
_getMergingLowerBoundCost:withStrokeBounds:toLineGroup:
getMergingEndOfLineCost:mergingEndOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:
_getMergingEndOfLineCost:mergingEndOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:refSubstrokeIndex:
getMergingMiddleOfLineCost:mergingMiddleOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:
compareDistanceInWritingSequenceOfStroke:andStroke:toReferenceStroke:
_averageVectorFromCoalescedSubstrokes:toSubstroke:withOrientation:strokeRef:strokeDest:
estimateWritingDirectionAndSortSubstrokesAccordingly:averageWritingOrientation:averageStrokeDeviation:
sortSubstrokesByWritingDirection:averageWritingOrientation:
updateLocalWritingOrientationsForSubstrokes:useCoalescedCenter:
smoothLocalWritingOrientations:
clippedWritingOrientation:
refineLocalWritingOrientationsForSubstrokes:useCoalescedCenter:
flippedCenters:ofSubstrokes:maxStrokesGap:begnning:
refineWritingOrientationAndResortSubstrokes:averageWritingOrientation:
updateLocalStrokeDeviationsForSubstrokes:averageStrokeDeviation:
mergeGroupsPostProcessing:createdGroups:deletedGroups:
_averageAngleAndReliabilityForStrokeGroup:
_strokeGroupConfidenceForSortedSubstrokes:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:averageWritingOrientation:averageStrokeDeviation:
tryRegroupingStrokesInGroup:substrokePlacementsByStrokeIdentifier:cancellationBlock:
_defaultOrientationVector
_defaultDeviationVector
_strokeDeviationCapCoeff
_groupingMergingCostThresh
_groupingMergingEndCostLowThresh
_groupingSimilarCostThresh
_groupingContextSize
_mergeEndDxCostCoeff
_mergeEndDyCostCoeff
_mergeEndBelowModifier
_mergeEndLeftModifier
_mergeMiddleDxCostCoeff
_mergeMiddleDyCostCoeff
_mergeMiddleBelowModifier
_splitMinimumStrokeCount
_splitMaxNaturalIndexDiffThreshold
_shouldLimitDefaultWritingOrientationDeviation
_shouldAdjustDeviationOfSmallGroups
_shouldCoalesceLastSubstrokes
updateNonTextCandidatesByRemovingSupportFromStrokeIdentifier:skippingCandidatesWithStrokeIdentifier:
updateByRemovingStrokeIdentifier:withRemovedAndClutterStrokeIDs:
updateByTransitionedClutterStrokeIdentifier:withRemovedAndClutterStrokeIDs:
updateByAddingNonClutterStroke:withAllStrokes:forceText:
updateByAddingNonClutterStroke:withClassification:
updateByAddingClutterStroke:
nonTextCandidateForStroke:withSubstrokes:
containerSupportForPoints:withBounds:
initWithStrokeProvider:strokeClassificationLastResult:textOnly:
updatedStrokeClassificationResultByAddingStrokes:removingStrokeIdentifiers:clutterFilter:affectedClutterStrokeIDs:cancellationBlock:
changeableClassificationByRefinement:stroke:
_tileIndexForYPosition:tileHeight:
refineStrokeClassificationResultUsingClassificationResult:strokeClassificationModel:sortedAddedStrokes:removedStrokeIdentifiers:cancellationBlock:
strokeClassificationLastResult
textOnly
_textOnly
_strokeClassificationLastResult
T@"CHStrokeClassificationResult",R,N,V_strokeClassificationLastResult
TB,R,N,V_textOnly
initWithActivations:
activations
setActivations:
unlikelyHasLatinContents
setUnlikelyHasLatinContents:
_unlikelyHasLatinContents
_activations
T@"CVNLPActivationMatrix",&,N,V_activations
TB,N,V_unlikelyHasLatinContents
initWithStrokeProvider:locales:clutterFilter:
_maxDistanceThresholdForTokenizationLevel:
_agglomerativeClusteringUsingInitialClusters:distanceMetric:maxDistanceThreshold:shouldCancel:
lineGroupingResultUsingStrokes:shouldCancel:
fastGroupingResultWithFastGroupingClusters:clusteredStrokes:
groupingResultUsingStrokes:distanceMetric:mergingDistanceThreshold:shouldCancel:
_wordClustersForInitialClusters:
clustersForStrokes:shouldMakeSingleCluster:
_filterClusters:usingContextStrokes:clusteredStrokes:
groupingResultForContextStrokes:clusteredStrokes:fastGroupingResult:point:tokenizationLevel:
_strokeIdentifiersForContextStrokes:clusters:clusteredStrokes:tokenizationLevel:fastGroupingResult:
_newBaselinePathForStrokeGroup:outFirstPoint:strokeProvider:
_getOrientedBounds:length:forStroke:atWritingDirectionIndex:inGroup:
_orientationTransformForStrokeBounds:atWritingDirectionIndex:inGroup:
_labelBoundsForAnchorPoint:
_setIndexableContent:
_indexableContent
T@"CHRecognitionSessionIndexableContent",&,S_setIndexableContent:,V_indexableContent
initWithIndexableTextRepresentation:presentableTextRepresentation:
indexableTextRepresentation
presentableTextRepresentation
_indexableTextRepresentation
_presentableTextRepresentation
T@"NSString",R,C,N,V_indexableTextRepresentation
T@"NSString",R,C,N,V_presentableTextRepresentation
_strokeGroupFromSortedStrokeIdentifiers:strokeProvider:strategyIdentifier:
_strokeGroupFromFastGroupingCluster:strokeProvider:strategyIdentifier:
_strokeGroupsFromFastGroupingClusters:clusteredStrokes:strokeProvider:strategyIdentifier:clutterFilter:
initWithFastGroupingClusters:clusteredStrokes:strokeProvider:strategyIdentifier:clutterFilter:
fastGroupingClusters
_fastGroupingClusters
T{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}},R,N,V_fastGroupingClusters
cursorByAddingNodeIndex:toCursor:
addNodeIndex:withStateType:
nodeIndexCount
nodeIndexAtPosition:
isCompletePattern
stateType
setStateType:
_nodeIndexes
_stateType
TQ,N,V_stateType
contentTypesToPatternsMapping
patternToSymbolMap
rootCursorForContentType:inNetwork:forFirstSegmentGroup:
rootCursorForPatternType:inNetwork:forFirstSegmentGroup:
newCursorByAdvancingWithString:fromCursor:inNetwork:
newCursorByAdvancingWithSymbol:fromCursor:inNetwork:
isString:fullPattern:inNetwork:
stateTypeForNodeIndex:
newCursorByAdvancingCursor:withSymbol:
initWithFile:
_network
_symbols
_startNodes
_startCursorForContentTypes
initWithConfusion:correction:locales:leftContext:rightContext:requiresLexiconMatch:
meetsContextRequirementWithLeftContext:rightContext:
isValidForLocale:
confusion
correction
requiredLeftContext
requiredRightContext
requiresLexiconMatch
_requiresLexiconMatch
_confusion
_correction
_requiredLeftContext
_requiredRightContext
T@"NSString",R,C,N,V_confusion
T@"NSString",R,C,N,V_correction
T@"NSCharacterSet",R,N,V_requiredLeftContext
T@"NSCharacterSet",R,N,V_requiredRightContext
TB,R,N,V_requiresLexiconMatch
initMecabraIfNeededWithType:learningDictURL:
mecabra
_mecabra
T^{__Mecabra=},R,V_mecabra
initWithResult:leftContext:contentType:
leftContext
setLeftContext:
result
setResult:
_leftContext
_result
T@"NSString",&,N,V_leftContext
T@"CHMutableTokenizedTextResult",&,N,V_result
initWithStep:
initWithSequence:
process:options:
sequence
setSequence:
_sequence
T@"NSArray",&,N,V_sequence
applyTransform:toAllTokens:
expandPathsWithCorrectedTokens:fromTokens:correctedTokenPath:originalTokenPath:
shouldAdjustColumnsFromPostprocessingStepOptions:
modifiesOriginalTokens
initProcessorDefault:processorDigits:processorPhone:processorUsername:processorEmail:processorURL:processorASCII:processorEquation:
process:withProcessor:options:
defaultProcessor
setDefaultProcessor:
digitProcessor
setDigitProcessor:
phoneProcessor
setPhoneProcessor:
usernameProcessor
setUsernameProcessor:
emailProcessor
setEmailProcessor:
urlProcessor
setUrlProcessor:
asciiProcessor
setAsciiProcessor:
equationProcessor
setEquationProcessor:
_defaultProcessor
_digitProcessor
_phoneProcessor
_usernameProcessor
_emailProcessor
_urlProcessor
_asciiProcessor
_equationProcessor
T@"CHPostProcessingManager",&,N,V_defaultProcessor
T@"CHPostProcessingManager",&,N,V_digitProcessor
T@"CHPostProcessingManager",&,N,V_phoneProcessor
T@"CHPostProcessingManager",&,N,V_usernameProcessor
T@"CHPostProcessingManager",&,N,V_emailProcessor
T@"CHPostProcessingManager",&,N,V_urlProcessor
T@"CHPostProcessingManager",&,N,V_asciiProcessor
T@"CHPostProcessingManager",&,N,V_equationProcessor
validatedTokenForCorrectedToken:rawToken:
initWithAutoCapitalizationMode:shouldAutoCorrect:shouldAutoCapitalize:locale:staticLexicon:customLexicon:phraseLexicon:customPhraseLexicon:spellChecker:lmVocabulary:ovsStringChecker:textReplacements:
getSpellCorrectedToken:contextBeforeToken:
applyLexiconCorrections:shouldCapitalizeWord:shouldSkipEntryCorrection:outBestTokenIndex:bestLexiconTokenScore:textReplacements:contextBeforeToken:allowSpellChecker:
applyCorrectionsOnSingleToken:isFirstToken:contextBeforeToken:shouldCapitalizeGivenHistory:textReplacements:isSingleIsolatedCharacter:allowSpellChecker:
applyCorrectionsAcrossToken:isFirstToken:contextBeforeToken:shouldCapitalizeGivenHistory:textReplacements:isSingleIsolatedCharacter:
createPseudoTokensFromToken:
setShouldAutoCapitalize:
setShouldAutoCorrect:
consumableStrokesCharSet
setConsumableStrokesCharSet:
fullWidthPunctuationThatExpectsUppercaseAfter
setFullWidthPunctuationThatExpectsUppercaseAfter:
punctuationThatExpectsUppercaseAfter
setPunctuationThatExpectsUppercaseAfter:
_shouldAutoCapitalize
_shouldAutoCorrect
_consumableStrokesCharSet
_fullWidthPunctuationThatExpectsUppercaseAfter
_punctuationThatExpectsUppercaseAfter
TB,N,V_shouldAutoCapitalize
T@"NSLocale",&,N,V_locale
Tr^{_LXLexicon=},N,V_staticLexicon
Tr^{_LXLexicon=},N,V_customLexicon
Tr^{_LXLexicon=},N,V_phraseLexicon
Tr^{_LXLexicon=},N,V_customPhraseLexicon
TB,N,V_shouldAutoCorrect
T@"NSCharacterSet",&,N,V_consumableStrokesCharSet
T@"NSCharacterSet",&,N,V_fullWidthPunctuationThatExpectsUppercaseAfter
T@"NSCharacterSet",&,N,V_punctuationThatExpectsUppercaseAfter
initWithShouldAddAlternatives:
shouldAddAlternatives
setShouldAddAlternatives:
contextInvariantCharacterSet
setContextInvariantCharacterSet:
forwardLookingCharacterSet
setForwardLookingCharacterSet:
backwardLookingCharacterSet
setBackwardLookingCharacterSet:
widthAlternativeCharacterSet
setWidthAlternativeCharacterSet:
_shouldAddAlternatives
_contextInvariantCharacterSet
_forwardLookingCharacterSet
_backwardLookingCharacterSet
_widthAlternativeCharacterSet
TB,N,V_shouldAddAlternatives
T@"NSCharacterSet",&,N,V_contextInvariantCharacterSet
T@"NSCharacterSet",&,N,V_forwardLookingCharacterSet
T@"NSCharacterSet",&,N,V_backwardLookingCharacterSet
T@"NSCharacterSet",&,N,V_widthAlternativeCharacterSet
openingBracketCharacters
setOpeningBracketCharacters:
closingBracketCharacters
setClosingBracketCharacters:
openingQuoteCharacters
setOpeningQuoteCharacters:
closingQuoteCharacters
setClosingQuoteCharacters:
symmetricQuoteCharacters
setSymmetricQuoteCharacters:
_openingBracketCharacters
_closingBracketCharacters
_openingQuoteCharacters
_closingQuoteCharacters
_symmetricQuoteCharacters
T@"NSCharacterSet",&,N,V_openingBracketCharacters
T@"NSCharacterSet",&,N,V_closingBracketCharacters
T@"NSCharacterSet",&,N,V_openingQuoteCharacters
T@"NSCharacterSet",&,N,V_closingQuoteCharacters
T@"NSCharacterSet",&,N,V_symmetricQuoteCharacters
initWithWordLanguageModel:ovsStringChecker:
_updateTokenInappropriateFlag:
initWithLocale:
prepareQuoteCountFromLeftContext:
cleanUpSpacesInToken:leftContext:inString:withQuoteCount:
initWithShouldKeepOutOfPatternCandidates:shouldKeepDuplicateTokenIDs:shouldKeepOutOfLexiconAlternatives:shouldKeepAlternativeLengths:shouldKeepSubstrings:shouldKeepOriginalSpelling:
setShouldKeepOutOfPatternCandidates:
setShouldKeepDuplicateTokenIDs:
shouldKeepOutOfLexiconAlternatives
setShouldKeepOutOfLexiconAlternatives:
shouldKeepAlternativeLengths
setShouldKeepAlternativeLengths:
shouldKeepSubstrings
setShouldKeepSubstrings:
shouldKeepOriginalSpelling
setShouldKeepOriginalSpelling:
_shouldKeepOutOfPatternCandidates
_shouldKeepDuplicateTokenIDs
_shouldKeepOutOfLexiconAlternatives
_shouldKeepAlternativeLengths
_shouldKeepSubstrings
_shouldKeepOriginalSpelling
TB,N,V_shouldKeepOutOfPatternCandidates
TB,N,V_shouldKeepDuplicateTokenIDs
TB,N,V_shouldKeepOutOfLexiconAlternatives
TB,N,V_shouldKeepAlternativeLengths
TB,N,V_shouldKeepSubstrings
TB,N,V_shouldKeepOriginalSpelling
initWithPatternFst:
initWithPatternFst:patternType:capitalizationToSplit:convertToLowercase:
patternType
setPatternType:
capitalizationToSplit
setCapitalizationToSplit:
convertToLowercase
setConvertToLowercase:
_capitalizationToSplit
_convertToLowercase
_patternType
Tq,N,V_patternType
TB,N,V_capitalizationToSplit
TB,N,V_convertToLowercase
koreanParticlesCharSet
setKoreanParticlesCharSet:
_koreanParticlesCharSet
T@"NSCharacterSet",C,N,V_koreanParticlesCharSet
initWithTransliterateSentences:
handleChineseLigaturesInString:
transliterateSentences
setTransliterateSentences:
_transliterateSentences
TB,N,V_transliterateSentences
characterTransliterations
initWithStaticLexicon:customLexicon:locale:
handleConfusableCharactersInToken:previousContext:
wordIDForCandidateString:
setCharacterTransliterations:
_characterTransliterations
T@"NSArray",N,V_characterTransliterations
handleConfusableIsolatedCharacterToken:
_transliterationMap
initWithMaxResultCount:
maxResultCount
setMaxResultCount:
_maxResultCount
Tq,N,V_maxResultCount
initWithOVSStringChecker:
tokenRowAsString:
initForPhoneNumberFields
initForDigitFields
countUnallowedCharactersInString:
compareStringForPhoneNumberCompatibility:with:
allowedCharacters
setAllowedCharacters:
characterReplacements
setCharacterReplacements:
_allowedCharacters
_characterReplacements
T@"NSCharacterSet",&,N,V_allowedCharacters
T@"NSDictionary",&,N,V_characterReplacements
initWithMecabra:wordLanguageModel:ovsStringChecker:promoteKanaConversion:
_updatedTokenFromToken:withString:
_extendedConversionCandidates:withPhraseCandidates:
mecabraContextRef
promoteKanaConversion
_promoteKanaConversion
_mecabraContextRef
T@"CHMecabraWrapper",R,N,V_mecabraWrapper
T^{__MecabraContext=},R,N,V_mecabraContextRef
T^v,R,N,V_wordLanguageModel
TB,R,N,V_promoteKanaConversion
checkCharactersInTokenRow:outHasLatin:outHasCyrillic:
checkCharactersInString:outHasLatin:outHasCyrillic:
cacheActivationMatrix:strokeEndings:drawing:recognitionEngineCachingKey:
retrieveActivationMatrixForDrawing:recognitionEngineCachingKey:outStrokeEndings:
_cachedActivationMatrices
_cachedStrokeEndings
ch_occurrencesOfCharactersInSet:maxCount:
ch_hasCharactersFromSets:
hasSubstringInSet:
countSubstringsWithOptions:
countCodepoints
codepointRangeAtIndex:
codepointAtIndex:outRange:
enumerateCodepointsInRange:usingBlock:
enumerateCodepointsInRange:reverse:usingBlock:
isAbbreviation
cursorPositionAtIndex:usingBlockToSelectSide:
ch_mappedArrayWithBlock:
ch_descriptionWithSeparator:filterBlock:
ch_intersectsIndexSet:
ch_emptyCharacterSet
ch_sentenceEndPunctuationCharacterSet
ch_sentenceStartPunctuationCharacterSet
ch_basicAlphabeticCharacterSet
ch_basicAlphanumericCharacterSet
ch_latinCharacterSet
ch_basicCyrillicCharacterSet
ch_kanjiCharacterSet
ch_kanjiCompCharacterSet
ch_hiraganaCharacterSet
ch_katakanaCharacterSet
ch_basicOpeningParenthesesSet
ch_basicClosingParenthesesSet
ch_thaiMathSymbolsNeedingSpaceSet
ch_thaiExtraSpaceAfterSymbolsSet
ch_neutralQuotationMarkSet
@76@0:8@16@24B32{CGRect={CGPoint=dd}{CGSize=dd}}36Q68
@16@0:8
B16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
Q16@0:8
v16@0:8
@"CHDrawing"
@"NSCharacterSet"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
I48@0:8@16I24B28^d32^v40
@40@0:8@16^@24^v32
@32@0:8@16q24
B40@0:8^{_LXLexicon=}16@24@32
@32@0:8@16^^v24
@32@0:8@16@24
@24@0:8@16
I32@0:8@16^{_LXLexicon=}24
d32@0:8@16@24
B24@0:8@16
@56@0:8@16^{__Mecabra=}24^{__MecabraContext=}32^v40q48
B36@0:8@16B24@28
d92@0:8@16@24@32B40B44B48@52@60^@68^@76^B84
@172@0:8@16@24^{_LXLexicon=}32^v40@48@56@64d72{_NSRange=QQ}80^d96B104B108B112q116d124q132^q140^B148^B156^B164
@48@0:8@16@24^v32@40
q32@0:8@16@24
@48@0:8@16{CGPoint=dd}24q40
@64@0:8@16{CGPoint=dd}24q40@?48@?56
v24@0:8@16
@"NSArray"
@"NSDictionary"
@24@0:8q16
@72@0:8@16@24@32q40@48@56@64
@32@0:8@16^@24
q16@0:8
@"NSNumber"
@"NSLocale"
v56@0:8^@16^@24@32@40@48
@"<CHStrokeProvider>"
@64@0:8@16@24@32@40@48@?56
@64@0:8@16{CGVector=dd}24^@40^@48^d56
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSData"
@108@0:8@16@24I32d36d44d52Q60q68{CGRect={CGPoint=dd}{CGSize=dd}}76
d16@0:8
I16@0:8
@"NSString"
@"NSIndexSet"
v20@0:8I16
v24@0:8d16
v24@0:8Q16
v24@0:8q16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSSet"
v20@0:8B16
B28@0:8@16i24
v68@0:8@16@24@32@40^@48B56^B60
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@28@0:8i16@20
i16@0:8
v20@0:8i16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@28@0:8i16@"NSLocale"20
@"NSLocale"16@0:8
@"NSCharacterSet"16@0:8
v24@0:8@"NSCharacterSet"16
@40@0:8i16i20^{__CFLocale=}24@32
@36@0:8i16@20@28
@44@0:8i16@20@28@36
@32@0:8i16i20@24
@32@0:8^@16q24
@24@0:8Q16
v32@0:8@16@24
v32@0:8^{_LXLexicon=}16^v24
v24@0:8^{_LXLexicon=}16
v24@0:8^v16
{vector<const void *, std::allocator<const void *>>=^^v^^v{__compressed_pair<const void **, std::allocator<const void *>>=^^v}}40@0:8@16@24Q32
{vector<const void *, std::allocator<const void *>>=^^v^^v{__compressed_pair<const void **, std::allocator<const void *>>=^^v}}48@0:8@16@24@32Q40
@24@0:8i16i20
@32@0:8i16i20^{__CFLocale=}24
@20@0:8i16
v40@0:8@16^{CGPoint=dd}24^{CGPoint=dd}32
@32@0:8@16^{CHCandidateResult=If}24
@40@0:8@16^{CHCandidateResult=If}24^@32
@48@0:8@16@24@32@40
d56@0:8@16@24^I32Q40^@48
d64@0:8@16@24@32@40^I48Q56
@48@0:8@16@24@32^@40
@124@0:8^v16Q24^{_LXCursor=}32^{_LXCursor=}40@48@56{_NSRange=QQ}64^v80@88q96i104q108q116
B72@0:8@16@24d32d40B48B52B56I60@64
@64@0:8r^v16@24{_NSRange=QQ}32q48@56
@72@0:8r^v16Q24^v32^v40q48q56@64
^I60@0:8@16q24B32^Q36^B44^{_NSRange=QQ}52
v40@0:8{_NSRange=QQ}16@32
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}32@0:8@16@24
@48@0:8@16@24@32@?40
@132@0:8^v16@24@32{_NSRange=QQ}40^{_LXCursor=}56^{_LXCursor=}64@72@80Q88q96B104q108q116@?124
@72@0:8^v16@24@32Q40@48q56q64
q76@0:8@16^v24^v32^v40^v48@56B64@?68
^v96@0:8^v16@24@32^v40{_NSRange=QQ}48{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}64@?88
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
d20@0:8B16
v80@0:8{vector<CHCandidateResult, std::allocator<CHCandidateResult>>=^{CHCandidateResult}^{CHCandidateResult}{__compressed_pair<CHCandidateResult *, std::allocator<CHCandidateResult>>=^{CHCandidateResult}}}16^v40r^{NetworkEdge=QQQQddQQQ}48^v56q64q72
{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}20@0:8I16
@48@0:8@16Q24@32q40
d24@0:8@16
@40@0:8@16^@24@32
v60@0:8^@16^@24@32q40@48B56
@40@0:8@16Q24Q32
@48@0:8@16@24q32^q40
@52@0:8@16@24q32B40q44
@68@0:8@16@24{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}32@56B64
@44@0:8@16@24d32B40
@40@0:8@16@24@?32
v32@0:8^v16r^v24
v32@0:8^v16@24
v40@0:8^v16@24@32
v32@0:8^v16q24
@32@0:8^S16i24i28
I24@0:8@16
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGPoint=dd}24@0:8@16
{CGSize=dd}24@0:8@16
@40@0:8@16@24^v32
^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}16@0:8
v24@0:8^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}16
^v16@0:8
^{_LXLexicon=}16@0:8
{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}}16@0:8
v40@0:8{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}}16
{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}}16
^{VariantMap=^i^i^ii^iQ}16@0:8
v24@0:8^{VariantMap=^i^i^ii^iQ}16
^^v16@0:8
v24@0:8^^v16
@"CHRecognitionInsightRequest"
@"CHRecognitionInsight"
^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}
@"CHCTCRecognitionModel"
@"CVNLPCTCTextDecoder"
@"NSObject<OS_dispatch_queue>"
@"CHPatternNetwork"
@"CHRecognizerConfiguration"
^{_LXLexicon=}
@"NSMutableDictionary"
@"CHSpellChecker"
@"CHMecabraWrapper"
@"CHStringOVSChecker"
@"NSURL"
^{VariantMap=^i^i^ii^iQ}
@"NSMutableIndexSet"
@"CHPostProcessingManager"
{CGSize="width"d"height"d}
{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>="__tree_"{__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>="__value_"Q}}}
{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>="__tree_"{__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>="__value_"Q}}}
@72@0:8Q16q24q32@40{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}}48
{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}}16@0:8
@"CHClassifiableDrawing"
{set<long, std::less<long>, std::allocator<long>>="__tree_"{__tree<long, std::less<long>, std::allocator<long>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::less<long>>="__value_"Q}}}
v48@0:8^@16^@24@32@40
v48@0:8@16q24q32@?40
d32@0:8d16@24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8r^v16{CGPoint=dd}24d40
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8r^v16q24B32
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8r^v16d24q32
@32@0:8@16@?24
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}24@0:8@16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}32@0:8@16@24
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}24@0:8^v16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}32@0:8r^v16d24
d40@0:8r^v16^{CGPoint=dd}24^d32
d24@0:8^v16
d32@0:8r^v16^d24
d64@0:8{CGPoint=dd}16{CGPoint=dd}32{CGPoint=dd}48
d64@0:8{CGPoint=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}48@0:8r^v16d24d32^d40
@"CHTokenizedTextResult"
@"NSError"
v656@0:8{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}}16
@24@0:8@?16
@64@0:8{CGAffineTransform=dddddd}16
@24@0:8d16
Q24@0:8Q16
{CGPoint=dd}32@0:8Q16Q24
d24@0:8Q16
@32@0:8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8Q16
f16@0:8
v32@0:8{CGPoint=dd}16
{_NSRange=QQ}24@0:8@16
{Matrix<float>=^^?^fII}32@0:8{CGSize=dd}16
{Matrix<float>=^^?^fII}32@0:8Q16Q24
@24@0:8^@16
@40@0:8{CGVector=dd}16d32
@32@0:8d16^v24
@32@0:8d16q24
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
d32@0:8d16d24
v40@0:8@16@24@32
{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}}16@0:8
{CHDrawingStrokes="strokeBounds"{vector<std::vector<double>, std::allocator<std::vector<double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>="__value_"^v}}"strokeBoundsValidity"{vector<bool, std::allocator<bool>>="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::allocator<unsigned long>>="__value_"Q}}"startTimes"{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}"endTimes"{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}"strokes"{vector<std::vector<double>, std::allocator<std::vector<double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>="__value_"^v}}"currentStrokeIndex"q"mSize"I"bitmap"{Matrix<double>="_vptr$Matrix"^^?"_data"^d"_w"I"_h"I}"lineHeight"d"sparseBitmap"{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}}
@36@0:8q16q24B32
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8q16q24@32@40
@"CHCutPoint"
@32@0:8q16@24
v88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48{CGRect={CGPoint=dd}{CGSize=dd}}56
B20@0:8i16
i24@0:8@16
i20@0:8I16
@148@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116i120i124B128q132@140
@140@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116i120i124B128q132
@132@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116B120q124
@124@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80{_NSRange=QQ}96i112q116
q24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
v40@0:8{_NSRange=QQ}16@?32
v44@0:8{_NSRange=QQ}16B32@?36
@32@0:8{_NSRange=QQ}16
{_NSRange=QQ}24@0:8q16
{_NSRange=QQ}16@0:8
^{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"CHTextInputTarget"
{_NSRange="location"Q"length"Q}
^{CGRect={CGPoint=dd}{CGSize=dd}}
v32@0:8{_NSRange=QQ}16
v48@0:8@16{_NSRange=QQ}24^{CGRect={CGPoint=dd}{CGSize=dd}}40
@64@0:8@16@24q32d40d48d56
@184@0:8@16q24q32d40d48d56{CGRect={CGPoint=dd}{CGSize=dd}}64d96{CGRect={CGPoint=dd}{CGSize=dd}}104{CGRect={CGPoint=dd}{CGSize=dd}}136@168d176
@"CHEncodedStrokeIdentifier"
v32@0:8@16d24
B32@0:8@16@24
@32@0:8@16^v24
d40@0:8@16q24q32
v40@0:8@16d24@32
v56@0:8@16d24d32d40@48
@40@0:8@16@24@32
q40@0:8@16q24q32
B48@0:8@16d24q32q40
{vector<std::map<long, long>, std::allocator<std::map<long, long>>>=^v^v{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>=^v}}16@0:8
{vector<std::map<long, long>, std::allocator<std::map<long, long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>="__value_"^v}}
B24@0:8q16
@52@0:8@16@24@32B40@44
@56@0:8@16@24@32@40@?48
@40@0:8@16^@24^@32
@"CHRecognitionSessionResult"
@40@0:8@16@?24@?32
{CGAffineTransform=dddddd}112@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGRect={CGPoint=dd}{CGSize=dd}}80
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
v80@0:8@16^{CGContext=}24{CGAffineTransform=dddddd}32
v88@0:8@16@24^{CGContext=}32{CGAffineTransform=dddddd}40
@152@0:8@16@24@32q40@48@56@64@72@80@88@96{?=ddddd}104q144
@48@0:8@16@24{CGSize=dd}32
{?=ddddd}16@0:8
@"<CHStrokeProviderVersion>"
@"CHStrokeClutterFilter"
@"CHStrokeClassificationResult"
@"CHStrokeGroupingResult"
{?="strokeClutterFilteringDuration"d"strokeClassificationDuration"d"groupingDuration"d"recognitionDuration"d"totalDuration"d}
@20@0:8B16
@56@0:8@16@24@32@40@48
@40@0:8@16^d24^B32
{?=dd}24@0:8@16
@72@0:8@16@24@32@40@48@56@64
@36@0:8@16@24B32
@"CHTextCorrectionResult"
@52@0:8@16i24@28@36q44
q40@0:8@16{_NSRange=QQ}24
v32@0:8@16q24
@40@0:8@16@24^{_NSRange=QQ}32
d32@0:8@16^d24
@40@0:8@16@24^q32
@112@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40q72d80@88{CGPoint=dd}96
@120@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88@96{CGPoint=dd}104
@128@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56q88d96@104{CGPoint=dd}112
{CGVector=dd}16@0:8
@112@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88{CGPoint=dd}96
r^{CGPath=}32@0:8@16@24
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
@56@0:8@16@24@32@40q48
@52@0:8@16@24@32@40I48
@"CHTextInputQuery"
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@168@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40@72@80{CGVector=dd}88{CGVector=dd}104@120r^v128@136d144{CGPoint=dd}152
@176@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48@80@88{CGVector=dd}96{CGVector=dd}112@128r^v136@144d152{CGPoint=dd}160
@184@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56@88@96{CGVector=dd}104{CGVector=dd}120@136r^v144@152d160{CGPoint=dd}168
@176@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48@80{CGVector=dd}88{CGVector=dd}104@120r^v128@136d144q152{CGPoint=dd}160
{CGVector=dd}24@0:8q16
^{CGPath=}48@0:8@16@24@32@40
{CGVector="dx"d"dy"d}
{vector<CGVector, std::allocator<CGVector>>="__begin_"^{CGVector}"__end_"^{CGVector}"__end_cap_"{__compressed_pair<CGVector *, std::allocator<CGVector>>="__value_"^{CGVector}}}
@40@0:8@16@24^@32
@"MLModel"
@108@0:8@16d24@32@40@48@56@64@72@80@88@96B104
@40@0:8@16d24d32
@120@0:8@16d24d32{CGPoint=dd}40i56{CGPoint=dd}60i76{CGPoint=dd}80{CGPoint=dd}96@112
@112@0:8@16d24d32{CGPoint=dd}40i56{CGPoint=dd}60i76{CGPoint=dd}80{CGPoint=dd}96
@88@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56{CGPoint=dd}72
@120@0:8@16d24d32{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72{CGPoint=dd}88{CGSize=dd}104
@88@0:8@16d24d32{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72
@72@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56
@96@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56{CGPoint=dd}72d88
^{CGColor=}32@0:8@16@24
v48@0:8@16@24@32@?40
B80@0:8@16{?=qqq}24@48q56@64^@72
B80@0:8@16{?=qqq}24@48@56q64^q72
B52@0:8@16@24q32B40^q44
@"CHRecognitionSession"
@"<CHVisualizationDelegate>"
v32@0:816
@"CHPointFIFO"
@36@0:8@16Q24f32
@32@0:8@16Q24
v20@0:8f16
{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}}16@0:8
v40@0:8{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}}16
{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>="__value_"^}}
68@0:8163248f64
v56@0:8{CGSize=dd}16{CGSize=dd}32d48
@?16@0:8
v24@0:8@?16
^{CGPath=}16@0:8
v24@0:8^{CGPath=}16
16@0:8
^{CGPath=}
@"<CHPointFIFODrawingTarget>"
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
{_NSRange=QQ}56@0:8{_NSRange=QQ}16q32@40@48
v56@0:8@16{_NSRange=QQ}24^B40^B48
{_NSRange=QQ}40@0:8q16@24@32
q64@0:8{CGPoint=dd}16@32^{CGRect={CGPoint=dd}{CGSize=dd}}40{_NSRange=QQ}48
B40@0:8@16@24q32
B40@0:8@16@24^B32
B40@0:8@16@24^q32
@68@0:8q16@24@32@40@48@56B64
v32@0:8^{_NSRange=QQ}16^B24
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}44@0:8{_NSRange=QQ}16B32^B36
@"CHTextInputTargetContentInfo"
@"<CHStroke>"
@64@0:8{CGPoint=dd}16@32@40@48@56
@48@0:8@16{CVNLPTextDecodingPruningPolicy=qBfI}24
@72@0:8@16{CGPoint=dd}24B40B44^v48^q56^q64
@88@0:8@16{CGSize=dd}24{CGPoint=dd}40@56^v64^@72^d80
v40@0:8@16@24@?32
B48@0:8d16@24@32@40
d40@0:8@16@24^@32
@48@0:8@16@24d32^@40
@72@0:8@16@24d32{CGPoint=dd}40B56B60^@64
^{CHCodeMap=*Q^II}16@0:8
{CVNLPTextDecodingPruningPolicy=qBfI}16@0:8
v40@0:8{CVNLPTextDecodingPruningPolicy=qBfI}16
^{CHCodeMap=*Q^II}
@"NSOrderedSet"
{CVNLPTextDecodingPruningPolicy="strategy"q"shouldSort"B"threshold"f"maxNumberOfCandidates"I}
{pair<double, double>=dd}32@0:8@16@24
q40@0:8@16@24^q32
@80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64q72
@72@0:8@16@24d32{CGRect={CGPoint=dd}{CGSize=dd}}40
@36@0:8@16B24B28B32
@48@0:8@16@24q32q40
@48@0:8@16@24q32@40
@64@0:8@16@24@32@40q48q56
@48@0:8@16@24@32q40
@56@0:8@16@24@32q40q48
@40@0:8{?=qqq}16
d32@0:8{_NSRange=QQ}16
B32@0:8{_NSRange=QQ}16
@44@0:8@16{_NSRange=QQ}24B40
@64@0:8@16{_NSRange=QQ}24B40B44^d48@?56
B32@0:8@16^B24
@40@0:8@16{_NSRange=QQ}24
{?=dd}28@0:8@16i24
d36@0:8@16@24i32
d24@0:8d16
v48@0:8@16{_NSRange=QQ}24@?40
@40@0:8@16^{_LXLexicon=}24q32
v40@0:8B16B20B24B28B32B36
Q20@0:8S16
d24@0:8S16S20
B28@0:8@16B24
@36@0:8@16B24@28
@"AppleSpell"
@"CHSpellCheckerErrorModel"
@40@0:8^v16@24@32
@24@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16
@48@0:8@16d24d32^v40
@72@0:8@16d24{CGSize=dd}32d48^d56^v64
@"CHSingletonMLModel"
@32@0:8@16d24
B40@0:8@16^v24@?32
@40@0:8@16@24q32
@128@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88@96{CGPoint=dd}104@120
@136@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56q88d96@104{CGPoint=dd}112@128
@44@0:8@16@24@32B40
d40@0:8@16@24@32
@72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^d56^d64
B40@0:8@16@24^@32
@88@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40d72d80
@96@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48d80d88
@60@0:8@16@24@32@40I48q52
@88@0:8@16@24@32@40I48q52B60@64q72@?80
@96@0:8@16@24@32@40I48q52B60@64q72@80@?88
B32@0:8q16q24
@60@0:8@16@24B32@36q44^@52
@"<CHRecognitionSessionTaskDelegate>"
@"CHStrokeClassificationModel"
@56@0:8@16@24q32^B40^@48
@48@0:8@16@24q32@?40
@"<CHTextInputQueryTargetDataSource>"
v32@0:8@16@?24
@"DDScannerServiceConfiguration"
@40@0:8@16@24^{CGPath=}32
r^{CGPath=}16@0:8
r^{CGPath=}
@"DDScannerResult"
@88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56d64r^v72d80
{vector<CGPoint, std::allocator<CGPoint>>="__begin_"^{CGPoint}"__end_"^{CGPoint}"__end_cap_"{__compressed_pair<CGPoint *, std::allocator<CGPoint>>="__value_"^{CGPoint}}}
{CGAffineTransform=dddddd}16@0:8
v32@0:8{CGVector=dd}16
@"CHSubstroke"
@48@0:8@16^{CGColor=}24^{__CTFont=}32^{__CTParagraphStyle=}40
^{CGPoint=dd}64@0:8@16{CHLineSegment={CGPoint=dd}{CGPoint=dd}}24^q56
@32@0:8^{CGPoint=dd}16q24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
q48@0:8{CHLineSegment={CGPoint=dd}{CGPoint=dd}}16
^{CGPoint=dd}16@0:8
^{CGPoint=dd}
v32@0:8@"CHRemoteRecognitionRequest"16@?<v@?@"CHTokenizedTextResult"@"NSError">24
v40@0:8@"CHTokenizedTextResult"16@"CHRemoteRecognitionRequest"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
@48@0:8@16@24^@32^@40
@"NSXPCConnection"
#24@0:8@16
^{CGColor=}24@0:8q16
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@"CHVisualization"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v24@0:8@"CHVisualization"16
q24@0:8@"CHStrokeGroup"16
v24@0:8@"CHRecognitionSession"16
v28@0:8B16@20
@"<CHVisualizationManagerDelegate>"
@"NSMutableSet"
@"NSMutableArray"
@"<CHQueryDelegate>"
@"CHStrokeGroup"
@40@0:8{_NSRange=QQ}16^@32
@32@0:8d16d24
{CHTextLineStraighteningResult=@@@}32@0:8@16@?24
v48@0:8@16@24^v32@40
{CGAffineTransform=dddddd}40@0:8@16@24@?32
{CGAffineTransform=dddddd}40@0:8q16@24@?32
@?64@0:8{CGAffineTransform=dddddd}16
{vector<CoreHandwriting::BoundingBox, std::allocator<CoreHandwriting::BoundingBox>>="__begin_"^{BoundingBox}"__end_"^{BoundingBox}"__end_cap_"{__compressed_pair<CoreHandwriting::BoundingBox *, std::allocator<CoreHandwriting::BoundingBox>>="__value_"^{BoundingBox}}}
@52@0:8^{_CFBurstTrie=}16^{_LXLexicon=}24^{_LXLexicon=}32I40^?44
B24@0:8^{_LXEntry=}16
B32@0:8@16^{_LXLexicon=}24
B32@0:8@16^{_CFBurstTrie=}24
B20@0:8I16
B28@0:8I16^{_LXLexicon=}20
^{_CFBurstTrie=}
@68@0:8@16{_NSRange=QQ}24@40q48B56@60
v40@0:8@16^Q24^Q32
Q24@0:8@16
B28@0:8Q16i24
@28@0:8@16i24
^v32@0:8@16@24
B40@0:8@16@24@32
B72@0:8@16@24@32@40{_NSRange=QQ}48@64
d32@0:8@16d24
B72@0:8@16{_NSRange=QQ}24@40{_NSRange=QQ}48@64
@44@0:8i16@20i28B32B36B40
@52@0:8i16@20i28i32i36B40B44B48
r^{_LXLexicon=}24@0:8^@16
r^{_LXLexicon=}32@0:8r^{_LXLexicon=}16r^{_LXLexicon=}24
^v36@0:8@16B24@28
^v28@0:8^v16B24
@32@0:8^{_LXLexicon=}16^{_LXLexicon=}24
@120@0:8^{_LXLexicon=}16^{_LXLexicon=}24^{_LXLexicon=}32^{_LXLexicon=}40@48@56@64^v72@80@88@96^v104q112
@40@0:8^{_LXLexicon=}16^{_LXLexicon=}24^v32
^?16@0:8
@32@0:8q16q24
@"<CHRecognizing>"24@0:8@"NSLocale"16
@"CHTextCorrectionRecognizer"24@0:8@"NSArray"16
@40@0:8q16@24@32
@48@0:8q16B24B28@32@?40
B32@0:8@16^@24
@"CHRecognitionSessionVersion"
@"<CHRecognitionSessionDataSource>"
@44@0:8@16q24B32q36
@48@0:8@16^@24^@32@?40
@64@0:8@16@24{_NSRange=QQ}32@48^{_NSRange=QQ}56
{_NSRange=QQ}40@0:8@16{_NSRange=QQ}24
@36@0:8@16B24q28
@96@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48d80@88
@96@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40d72{_NSRange=QQ}80
@72@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40
Q32@0:8@16@24
q112@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}88@104
B128@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}88^B104^d112^d120
@"<CHRecognizing>"
@"CHRecognizer"
@"CHCornerDetector"
Q20@0:8I16
{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}}16
{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}}16
{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>="__tree_"{__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>="__value_"Q}}}
{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>="__tree_"{__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>="__value_"Q}}}
{vector<CGRect, std::allocator<CGRect>>=^{CGRect}^{CGRect}{__compressed_pair<CGRect *, std::allocator<CGRect>>=^{CGRect}}}48@0:8@16{CGPoint=dd}24d40
@52@0:8@16q24@32B40@44
v76@0:8@16@24@32@40@48@56B64@?68
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@16r^v24{CGVector=dd}32^@48^v56
@40@0:8@16{CGVector=dd}24
v64@0:8^d16{CGRect={CGPoint=dd}{CGSize=dd}}24@56
v56@0:8^d16^@24@32@40@48
v64@0:8^d16^@24@32@40@48q56
q40@0:8@16@24@32
{CGVector=dd}64@0:8@16@24{CGVector=dd}32@48@56
v40@0:8^@16^{CGVector=dd}24^{CGVector=dd}32
v32@0:8@16^{CGVector=dd}24
v28@0:8@16B24
{CGVector=dd}32@0:8{CGVector=dd}16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}44@0:8r^v16@24q32B40
B32@0:8@16^{CGVector=dd}24
d72@0:8@16@24r^v32{CGVector=dd}40{CGVector=dd}56
v36@0:8@16@24B32
d56@0:8r^v16{CGRect={CGPoint=dd}{CGSize=dd}}24
B32@0:8q16@24
q32@0:8d16q24
@"CVNLPActivationMatrix"
f24@0:8q16
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}40@0:8^v16i24f28@?32
@32@0:8^v16@24
@44@0:8@16i24d28@?36
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}24@0:8^v16
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}28@0:8@16B24
@64@0:8@16@24@32{CGPoint=dd}40q56
@56@0:8@16^v24@32q40@48
^{CGPath=}40@0:8@16^{CGPoint=dd}24@32
v56@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^d24@32q40@48
{CGAffineTransform=dddddd}64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48@56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGPoint=dd}16
@"CHRecognitionSessionIndexableContent"
@40@0:8r^v16@24@32
@56@0:8r^v16@24@32@40@48
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}16@0:8
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>="__begin_"^{CHFastGroupingCluster}"__end_"^{CHFastGroupingCluster}"__end_cap_"{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>="__value_"^{CHFastGroupingCluster}}}
@32@0:8Q16@24
v32@0:8Q16Q24
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
@32@0:8i16@20B28
@36@0:8q16@24B32
@40@0:8Q16@24@32
B40@0:8@16q24@32
@60@0:8@16@24@32@40@48B56
v28@0:8i16@20
^{__Mecabra=}16@0:8
^{__Mecabra=}
@36@0:8@16@24i32
@"CHMutableTokenizedTextResult"
@32@0:8@?16@24
v48@0:8@16@24@32@40
@80@0:8@16@24@32@40@48@56@64@72
@100@0:8i16B20B24@28^{_LXLexicon=}36^{_LXLexicon=}44^{_LXLexicon=}52^{_LXLexicon=}60@68^v76@84@92
@68@0:8@16B24B28^q32^d40@48@56B64
@56@0:8@16B24@28B36@40B48B52
@52@0:8@16B24@28B36@40B48
r^{_LXLexicon=}16@0:8
v24@0:8r^{_LXLexicon=}16
r^{_LXLexicon=}
@40@0:8B16B20B24B28B32B36
@40@0:8@16q24B32B36
@40@0:8^{_LXLexicon=}16^{_LXLexicon=}24@32
{map<std::string, std::pair<std::string, double>, std::less<std::string>, std::allocator<std::pair<const std::string, std::pair<std::string, double>>>>="__tree_"{__tree<std::__value_type<std::string, std::pair<std::string, double>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::pair<std::string, double>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::pair<std::string, double>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::pair<std::string, double>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::pair<std::string, double>>, std::less<std::string>, true>>="__value_"Q}}}
@44@0:8@16^v24@32B40
^{__MecabraContext=}16@0:8
^{__MecabraContext=}
v40@0:8@16^B24^B32
q32@0:8@16q24
q24@0:8Q16
{_NSRange=QQ}24@0:8Q16
I32@0:8Q16^{_NSRange=QQ}24
Q32@0:8Q16@?24
