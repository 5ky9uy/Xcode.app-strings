?333333
=17TriangleRegressor
9Regressor
10CHTriangle
&@333333
?fffff
f@333333
N/@333333
Mb`?-C
MbP?
333333
 Bff
15CHManhattanLine
6CHLine
12CHChatBubble
19ChatBubbleRegressor
6MatrixIfE
6CHStar
E6MatrixIdE
@RRRRRR
A@ffffff
?ffffff
?ffffff
______
?______
?______
VVVVVV
?______
?333333
9CHEllipse
______
?______
?______
VVVVVV
?333333
333333
@333333
@333333
333333
@333333
@333333
@333333
@ffffff
@333333
@333333
@333333
@333333
@ffffff
@ffffff
@333333
@ffffff
@333333
333333
?333333
?333333
?ffffff
15CHOutlinedArrow
11CHRectangle
12CHBasicShape
18RectangleRegressor
?^^^^^^
MbP?
@7CHCloud
?14CHStraightLine
12CHBezierLine
?VVVVVV
?^^^^^^
?}}}}}}
>N5boost3qvm22zero_determinant_errorE
N5boost3qvm5errorE
??o*Ral
@333333
9SymbolMap
333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
333333
333333
VVVVVV
@7CHHeart
ffffff
es-8R
?ffffff
?es-8R
?es-8R
RRRRRR
10CHPentagon
26CHRSketchRecognitionResult
333333
v8@?0
.@#:/-_
%@%@
v32@?0@"NSString"8@"NSArray"16^B24
v24@?0^{_LXEntry=}8*16
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
!?();:
vector
v16@?0@"CHTokenizedStrokeResult"8
Stroke Group Query %p
Unknown
Handwriting
 ID: %@, StableID: %@, Stroke count: %ld, type: %@
encodedStrokeIdentifier
string
strokeIndexes
wordID
recognitionScore
combinedScore
alignmentScore
properties
substrokeCount
boundsOriginX
boundsOriginY
boundsWidth
boundsHeight
 '%@', strokes: %@, substrokeCount: %ld, wordID: %d, recognitionScore: %0.4f, combinedScore: %0.4f, alignmentScore: %0.4f, rare: %@, lexicon: %@, pattern: %@, inappropriate: %@, precedingSpace: %@, original: %@, bounds: [%0.4f, %0.4f, %0.4f, %0.4f]
imgData
featureData
softmax_output
+N9mZUAHooNvMiQnjeTJ8g
.codemap
vo_en
basic_string
CHRecognitionOptionTextBefore
CHRecognitionOptionTextAfter
CHRecognitionOptionPrecedingSpaceBehavior
CHRecognitionOptionFrameContext
CHRecognitionOptionDrawingAnchorPoint
CHRecognitionOptionShouldRefineCandidates
CHRecognitionOptionInferenceCache
CHRecognitionOptionIsRunningSecondaryLocale
CHRecognitionOptionMinSizeForReliableRescaling
v36@?0I8{_NSRange=QQ}12^B28
012olzOLZ
Oval
Line
Outline Arrow
Triangle
Rectangle
Pentagon
Manhattan Line
Chat Bubble
Star
Heart
Cloud
Scribble
com.apple.CoreHandwriting
HWRTriangleAlignToAxisThreshold
HWRTriangleIsoscelesLengthRatioThreshold
HWRTriangleEquilateralLengthRatioThreshold
HWROvalFitToCircleRadiiRatioThreshold
HWROvalAlignToIncrementsOf
HWRRectangleFitToSquareLengthRatioThreshold
HWRRectangleAlignToIncrementsOf
HWROutlinedArrowAlignToIncrementsOf
HWRLineAlignToAxisThreshold
HWRLineLengthRatioThreshold
B24@?0@"CHTextRecognitionResult"8@"NSDictionary"16
v64@?0@"CHTokenizedTextResultToken"8q16{?=qqq}24{_NSRange=QQ}48
'.-/
-/._@
v28@?0r*8q16I24
d16@?0r^{NetworkEdge=QQQQddQQQ}8
d16@?0^v8
B32@?0@"CHTextRecognitionResult"8Q16^B24
d24@?0r^v8d16
'".-
%@%@%@
q24@?0@8@16
v24@?0Q8^B16
com.apple.CoreHandwriting.recognizerQueue
PKUIPencilHoverPreviewEnabledKey
B32@?0@"<CHStroke>"8Q16^B24
v40@?0{CGPoint=dd}8d24^B32
q16@?0q8
=== Insight Request ===
  request: %@
=== Recognizer Configuration ===
  recognizerLocale: %@
  recognizerRecognitionMode: %@
  recognizerContentType: %@
  autoCapitalizationMode: %@
  autoCorrectionMode: %@
  recognizerActiveCharacterSet: %@
  recognizerMaxRecognitionResultCount: %ld
  recognizerMinimumDrawingSize: {width: %0.2f, height: %0.2f}
    %@: %@,
v32@?0@"NSString"8@"NSObject"16^B24
  recognizerOptions: %@
=== Input Drawing ===
None captured
  inputDrawing: %@
=== Text Result ===
drawingStrokes
drawingStrokesTimeStamps
%d %d %d
json
channel
data
origin: (%0.2f, %0.2f), size: (%0.2f, %0.2f)
 strokes: %lu, points: %lu, %@
%d %d
channels
dd-MM-yyyy-HH-mm-ss-SSS
/drawing_%@-%@.json
Error: Degenerated drawing (empty stroke present)
q24@?0@"CHCutPoint"8@"CHCutPoint"16
B32@?0@8Q16^B24
UIImage
Unable to find class %s
  %ld: origin: (%0.2f, %0.2f), size: (%0.2f, %0.2f)
@"NSString"24@?0@8q16
(none)
 textInputTarget: (%@), contentType: %@, textContentLength: %ld, referenceSubstring: "%@", referenceSubstringRange: %@, selectedRange: %@, isCursorStrong: %@, containsCommittedStrokes: %@, activePreviewRange: %@, strokeCoveredTextRange: %@, lastCharacterLevelPosition: %@, isSingleLine: %@, supportsAutoLineBreaks: %@, characterRectsInReferenceSubstring: {%@}, protectedCharacterIndexes: {%@}
aceimnorsuvwxz,.-_*+~<>
gjpqy
v24@?0q8^B16
v56@?0q8{CGRect={CGPoint=dd}{CGSize=dd}}16^B48
strokeIdentifier
substrokesCount
classificationAsNonText
lineOrientation
lineError
containerScore
bounds
boundsDiagonal
enlargedBounds
rotatedBounds
supportByStrokeIdentifier
support
{CGRect={CGPoint=dd}{CGSize=dd}}
<%@: %p strokeIdentifier=(%@) support=%.3f class=%ld>
strokeGroups
groupingResultsByStrategyIdentifier
groupingManagerNonText
%@, 
v32@?0@"CHEncodedStrokeIdentifier"8@"NSNumber"16^B24
v24@?0@"CHEncodedStrokeIdentifier"8^B16
B24@?0@"CHStrokeGroup"8^B16
q24@?0@"CHEncodedStrokeIdentifier"8@"CHEncodedStrokeIdentifier"16
q24@?0@"CHStrokeGroup"8@"CHStrokeGroup"16
q24@?0@"<CHStroke>"8@"<CHStroke>"16
CHTextStrokeTransformationQuery %p
inputStrokeIdentifiers
sessionMode
textCorrectionResult
recognitionResultsByLocale
orderedLocales
errorsByLocale
languageFitnessByLocale
languageFitnessDictByLocale
rawScore
strokeClassificationsByStrokeIdentifier
substrokesByStrokeIdentifier
nontextCandidates
strokeProviderVersion
orderedStrokeIdentifiers
locales
preferredLocales
strokeClassificationResult
strokeGroupingResult
recognitionResults
inlineContinuousModeResults
generationDuration
recognitionEnvironment
", "
"%@"
 strokeProviderVersion: %@, locales: %@, strokeClassificationResult: %@, strokeGroupingResult: %@
  Group %ld: 
recognition: %@
textCorrection: %@
Group Results: 
@"NSString"24@?0@"CHStrokeGroup"8@"NSLocale"16
GroupID %ld, %@
== %@ ==
GroupID %ld
%@: {
<NO RESULT>
"%@"%@
<ERROR: %@>
Gen 1
Gen 2
Recognizer Generation: %@
None
(%.3f, %.3f)
Language Fitness: %@
B32@?0@"CHStrokeGroup"8Q16^B24
 Strokes: %ld, text strokes: %ld
B32@?0@"CHEncodedStrokeIdentifier"8@"NSNumber"16^B24
 Groups: %ld, created: %ld, deleted: %ld
CHSkipConfidenceFiltering
@"NSString"24@?0@"NSLocale"8q16
v32@?0@"NSLocale"8@"NSValue"16^B24
{?=dd}
v32@?0@"NSLocale"8@"NSDictionary"16^B24
v32@?0@"NSLocale"8@"NSNumber"16^B24
q24@?0@"NSString"8@"NSString"16
q24@?0@"NSLocale"8@"NSLocale"16
B32@?0@"NSLocale"8Q16^B24
B20@?0i8Q12
recognitionMode
drawing
options
minimumDrawingWidth
minimumDrawingHeight
contentType
autoCapitalizationMode
autoCorrectionMode
activeCharacterSetPerLocale
maxRecognitionResultCount
shouldUseTextReplacements
enableCachingIfAvailable
enableGen2ModelIfAvailable
enableGen2CharacterLMIfAvailable
enableStrokeReordering
hasBeenSubmitted
priority
parameterOverride
@"NSString"24@?0@"NSCharacterSet"8q16
Remote Recognition Request %p (locales=[%@], mode=%@, content type=%@, autocapitalization mode=%@, autocorrection mode=%@, option keys=%@, active character sets=[%@], drawing=%p, shouldUseTextReplacements=%@, enableCachingIfAvailable=%@, enableGen2ModelIfAvailable=%@, enableGen2CharacterLMIfAvailable=%@, _enableStrokeReordering=%@, hasBeenSubmitted=%@, priority=%ld)
General
Recognizer
RecognitionSession
StrokeGrouping
ClutterFiltering
RemoteRecognizer
TextCorrectionRecognizer
CoreHandwritingSignPosts
com.apple.corehandwriting
tokenRows
@"NSString"24@?0@"NSArray"8q16
@"NSString"24@?0@"CHTokenizedTextResultToken"8q16
[%p "%@" %.2f, %.2f]
  %@
 rows: %ld {
v32@?0@"NSArray"8Q16^B24
q24@?0@"NSArray"8@"NSArray"16
ancestorIdentifier
uniqueIdentifier
strokeIdentifiers
firstStrokeIdentifier
lastStrokeIdentifier
classification
groupingConfidence
strategyIdentifier
firstStrokeOrigin
com.apple.CoreHandwriting.StrokeGroupID
 uniqueID: %ld, ancestorID: %ld, bounds: {x: %0.1f, y: %0.1f, width: %0.1f, height: %0.1f}, strokes: %ld, strategy: %@
{CGPoint=dd}
v16@?0@"CHTextInputTargetContentInfo"8
v32@?0@8Q16^B24
inputTargetIdentifier
frameXOrigin
frameYOrigin
frameWidth
frameHeight
 ID: %@, frame: {x: %0.1f, y: %0.1f, width: %0.1f, height: %0.1f}
writingDirectionSortedStrokeIdentifiers
writingDirectionSortedSubstrokes
averageStrokeDeviation
averageWritingOrientation
localStrokeWritingOrientations
lastSubstrokeIndexBeforeMerge
coalescedLastSubstrokes
gjpqyz
B32@?0@"NSArray"8Q16^B24
v32@?0@"CHSubstrokePlacement"8Q16^B24
B32@?0@"NSIndexSet"8Q16^B24
%@-%@_%@
%@_%@
%@-%@
 Low confidence, reporting nil.
Title Query %p
com.apple.CoreHandwriting.CHSingletonMLModelQueue
class: %@ score: %3.5f string: %@
Freeform
v16@?0@"NSIndexSet"8
v32@?0{_NSRange=QQ}8^B24
Search Query %p
 strokeIdentifiers: %@
B24@?0{_NSRange=QQ}8
0x%x
v16@?0^v8
output_topk_indices
v56@?0q8q16^f24q32^B40^B48
tokenColumns
transcriptionPaths
transcriptionPathScores
recognizerGenerationIdentifier
precedingLineBreaks
changeableTokenColumns
trailingSeparator
columns
column
@"NSString"24@?0@"CHTokenizedTextResultColumn"8q16
rows
%ld %@
transcriptionPath
@"NSString"24@?0@"NSIndexPath"8q16
Column %ld %@
 %ld (%ld changeable) %@ [%@], %ld %@ 
Gen1
Gen2
v48@?0@"CHTokenizedTextResultToken"8q16{?=qqq}24
B32@?0@"CHTokenizedTextResultColumn"8Q16^B24
en_US
/result_%@-%@.dat
B32@?0@"CHTokenizedTextResult"8Q16^B24
@24@?0@"NSIndexPath"8q16
B32@?0@"NSIndexPath"8Q16^B24
abcxyz
ErrorModel
input
output
/model.espresso.net
com.apple.CHStrokeClassificationModel.queue
s%d_p%d
input_stroke
input_mask
input_posenc
output_predictions
Low split score
Second group with single too short stroke (time interval = %.3f, threshold = %.3f).
Second group with single too short stroke (arc length = %.3f, threshold = %.3f).
Second group with an unfinished stroke and only a few (%li) other short strokes
Two parallel lines (err1=%.3f, err2=%.3f, ori1=%.3f, ori2=%.3f).
timeWindowStrategy
CHRecognitionTaskOverhead
com.apple.CoreHandwriting.RecognitionSessionRecognizers
B8@?0
CHRecognitionSessionLogging
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
Text Input Query %p
, error: %@
 text: '%@', itemID: %@, stableItemID: %@, type: %ld, strokes: %ld%@
v32@?0@"NSDictionary"8@"NSDictionary"16@"DDScannerResult"24
Data Detector Query %p
 strokeIdentifiers: %@, result type: %@
v24@?0@"NSString"8^B16
v32@?0@"CHTokenizedTextResultToken"8Q16^B24
Prefix data Query %p for prefix %@
startTimestamp
endTimestamp
convexHull
curvature
substroke
strokeDeviation
originalWritingDirectionIndex
writingOrientation
coalescedCenter
%.10g
Helvetica-Bold
Stroke group classification: 
text
clutter
doodle
line
container
unknown
CTFontCreateWithName
CTParagraphStyleCreate
CTFramesetterCreateWithAttributedString
CTFramesetterCreateFrame
CTFrameDraw
kCTFontAttributeName
kCTForegroundColorAttributeName
kCTParagraphStyleAttributeName
{%f, %f}
v56@?0q8{CHLineSegment={CGPoint=dd}{CGPoint=dd}}16^B48
com.apple.handwritingd.remoterecognition
v16@?0@"NSError"8
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"CHTokenizedTextResult"8@"NSError"16
CHLogAllDrawings
drawing_%@_%@.json
request_%@_%@.dat
result_%@_%@.dat
StrokeBounds
SubstrokeBounds
StrokePoints
GroupBounds
Grouping
GroupClassification
GroupBaselineLegacy
GroupBaseline
NormalizedDrawing
NormalizedDrawingAll
CHStatusKeyStatus
CHStatusKeyEnvironment
CHStatusKeyLocales
CHStatusKeyLastDurationTotal
CHStatusKeyLastDurationDetailed
CHStatusStrokeCount
CHStatusKeyGroupCount
CHStatusKeyTranscript
CHStatusKeyAllResults
Stroke Bounds
Substroke Bounds
Stroke Points
Stroke Group Bounds
Stroke Groups by Color
Stroke Groups Classification
Stroke Groups Baseline (Legacy)
Stroke Groups Baseline
Normalized Drawing (Selective)
Normalized Drawing (All)
Status
Environment
Locales
Total Duration
Detailed
Stroke Count
Group Count
Transcript
Text Results
In process
Out of process
Automatic
%@ (%@)
%0.2fs
%0.2fs clutter filtering, %0.2fs Stroke class., %0.2fs Grouping, %0.2fs Recog.
%ld text, %ld non-text
Group %ld (ID: %ld)
<Status Reporting Disabled>
v32@?0@"NSNumber"8@"NSNumber"16^B24
Transcription Query %p
com.apple.CoreHandwriting.%@.Processing
Query %p
<div style="clear:both;margin:auto;font-size:250%%;" >
<p>WARNING : NOTHING WAS SAVED : YOU MUST CLICK ON THE FOLLOWING LINK !</p>
<p><a href="#" onclick="SendMail(%d);">Send via email to Antoine !</a></p>
</div>
<p>For information, here are the files you flagged:</p>
<p id="po-term%d" style="margin:0;" \>
</body>
</html>
not triangulation
Cannot link edge
Zund
v32@?0@"NSString"8@"NSNumber"16^B24
num_characters
num_strokes
num_groups
majority_script
nontext_ratio
rotation_angle
time_for_straightening_ms
{CGPoint=dd}24@?0{CGPoint=dd}8
UIGraphicsBeginImageContextWithOptions
UIGraphicsGetImageFromCurrentImageContext
UIGraphicsEndImageContext
UIFont
NSFontAttributeName
UIColor
NSForegroundColorAttributeName
NSStrokeColorAttributeName
Boost QVM error
inputTarget
affectedRange
textResult
resultType
isCharacterLevel
error
Text
Encircle
Polygon
SplitJoin
Insertion Caret
<%@: %p> "%@"
 inputTargetID: %@, affectedRange: %@, resultType: %@, textResult: %@, isCharacterLevel: %@, error: %@
ctc_zh
ctc_latn
ctc_ja
ctc_ko
ctc_th
ctc_cyrl
bundle
DecodingLexiconWeight
DecodingLexiconLowerBoundLogProbability
DecodingCharacterLMWeight
DecodingCharacterLMLowerBoundLogProbability
DecodingWordLMWeight
DecodingWordLMLowerBoundLogProbability
SwapRulePreferEnglishRecognitionScoreMargin
SwapRuleAcceptableEnglishHeuristicTextScoreMargin
SwapRuleAcceptableEnglishRecognitionScoreMargin
SwapRulePreferEnglishHeuristicTextScoreMargin
SwapRuleRecognitionScoreDecisiveMargin
SwapRuleHeuristicTextScoreDecisiveMargin
SwapBlockRulePreferCyrillicHeuristicTextScoreMargin
SwapBlockRuleAcceptableCyrillicRecognitionScoreMargin
SkipLatinProbabilityThreshold
MultiCharacterOverlapped
SingleCharacter
Sketch
MultiCharacterInline
MultiCharacterInlineKeyboard
MultiCharacterCanvas
Default
Digits
PhoneNumber
Username
EmailAddress
ASCII
Equation
Words
Sentences
AllUppercase
AllLowercase
English
French
Spanish
Italian
German
Portuguese
Chinese
Cantonese
Japanese
Indonesian
Dutch
Thai
Korean
Russian
Ukrainian
SimplifiedChinese
TraditionalChinese
Roman
Cyrillic
 Recognizer configuration with mode: %@, locale: %@, contentType: %@, autoCapitalizationMode: %@, autoCorrectionMode: %@, language: %@, script: %@
zh_Hans
zh_Hant
ja_Jpan
Latn
Hans
Hant
Hrkt
Hira
Kata
Jpan
Hani
Kore
Cyrl
CoreHandwriting
experimental_latin_script
thai_support
russian_support
ukrainian_support
none
%@-%ld-%@-%@
zh_hant
com.apple.CoreHandwriting.LanguageModelLoadingQueue
v44@?0^{__CFURL=}8i16^{__CFLocale=}20^{__CFString=}28^B36
pt_BR
/System/Library/PrivateFrameworks/TextRecognition.framework/pt_BR.lm
corpus.wid
odat
P.bin
PP.bin
G.bin
R.bin
synthetics_
zh-Hans
zh-Hant
zh_compact
vo_en_compact
vo_de
vo_other
d16@?0@"CVNLPTextDecodingPath"8
Invalid empty FST line entry
File not found: (
Node[
has out degree zero but is not marked as a final node
has in degree zero but is not marked as an initial node
0x%zx
mode
version
lastRecognitionResult
sessionVersion
sessionResultVersion
Initial
Accumulating
Processing
Finished
stroke_classification.bundle
com.apple.CoreHandwriting.RecognitionSessionCanvasTaskHighResponsiveness
com.apple.CoreHandwriting.RecognitionSessionCanvasTaskSharedWorkloop
com.apple.CoreHandwriting.RecognitionSessionCanvasTaskForeground
com.apple.CoreHandwriting.RecognitionSessionCanvasTaskBackground
com.apple.CoreHandwriting.RecognitionSession
com.apple.CoreHandwriting.RecognitionSessionTextInputTaskSharedTarget
v16@?0@"<CHRecognitionSessionObserver>"8
v16@?0@"CHRecognitionSessionResult"8
B32@?0@"NSValue"8Q16^B24
time_for_recognition_ms
com.apple.CoreHandwriting.CHCharacterSetsRules
^*+=<>.,
:'"-/
apmAPM.
strdndth.
:;B=
)(pPDoOxX*
_-.+
_-.:/+&?%()$=
-/.@_
.,!?;:
!?:;
substrokePlacementsByStrokeIdentifier
vertical
horizontal
q24@?0@"CHSubstrokePlacement"8@"CHSubstrokePlacement"16
q24@?0@"CHTextLineStrokeGroup"8@"CHTextLineStrokeGroup"16
PKStrokesDrawn
PKSmartSelection
PKCopyAsText
PKSmartShapes
PKInsertSpace
PKDataDetector
PKTextLineStraightening
com.apple.corehandwriting.fast_stroke_grouping
IndexableContent Query %p
0x61a649a
0x34f55ec
0x7f7446f
0xe6b391a
0x08d4b39
0xbdde29e
0x633a6c7
0x346ff32
0xf9be5b7
0xf9dd946
0x27087b3
0x5fb9dc5
0xcf06682
0xcff9621
CHPostProcessingStepOptionAdjustColumns
es_ES
+-#*'",. 
@"CHTokenizedTextResultToken"40@?0@"CHTokenizedTextResultToken"8{?=qqq}16
Inference cache size for drawing [%@]: %lu (%@)
@24@?0@8q16
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
+=<>
`"e"d"
"& 5"
N5l\SL
NZN+N@
N*N@
 0b
'`$a$b$c$d$e$f$g$h$
minLength has to be > 0
Lexicon correction requires non-empty token string.
The prefix length should be smaller than the candidate string length
The corrected entry string length must be greater than the length of the active prefix
The token prefix should be case-sensitive equal after lexicon correction
The token prefix should be case-insensitive equal after lexicon correction
%@: beginning update for result version %@.
%@: finished update for session %p. %ld item(s) available.
Failed to get stroke with id: %@ from stroke provider version %@
The input string (%@) contains one or more ligature private code points
%@ decoding failed. Token string and stroke indexes are required to be nonnull when constructing a result token
Model execution on CPU only: %d
Model batch size: %d
Falling back to a batch size of %u for usesCPUOnly == %d
Error in MMapBinaryModel: %@ from path=%@
Error model output data format not supported: %ld
Error creating MLFeatures: %@
Error, the number of results doesn't match the model batch size (usesCPUOnly == %u)
Error, the number of results doesn't match the data batch size (usesCPUOnly == %u)
Not-a-char codepoint (U+%04x) is being added to the filtered candidate results (activeCharacterSet is nil: %d)
Error for model prediction in CHNeuralNetwork::feedforward: %@
predictionResultsPtr is nullptr
Error for model prediction in CHNeuralNetwork::feedforwardFromBatches: %@
Unexpected prediction tensor dimension: %lu
Prediction tensor must be of dimension %ld instead of %lu for batch size different from 1
predictionsPointer == nullptr
Configuration for recognizer with mode=%@ and locale=%@ is not supported.
Error loading the static lexicon: %@
Error loading the secondary static lexicon: %@
Error loading the phrase lexicon: %@
Processing input as single character drawing with %lu segments
The number of segments (%lu) must be the same as the number of sorted segment indexes (%lu)
The number of nodes in the candidate network (%lu) should match the number of generated segments (%lu)
We must add at least one candidate for each edge
Batch contains %lu non classified drawings
There must be at least one valid path
Incorrect index in segment decoding: index %ld (idx %ld + offset %ld) should be smaller than %ld, the number of segments on the group.
The recognition model must be loaded before inference can be called on it
The text decoder must be loaded before decoding can be executed
Activation matrix retrieved from inference cache for config %@ and drawing %@.
Obtaining activation matrix by model inference for config %@ and drawing %@.
BEGIN "CHActivationMatrix"
CHActivationMatrix
END "CHActivationMatrix"
BEGIN "CHDecoding"
Using the CVNLP Text Decoder
Text decoding unexpectedly leads to empty result - falling back on single-character result from the activation matrix.
CHDecoding
END "CHDecoding"
Decoder predicted string with %ld code points in single character mode, truncating results to 1 character.
The token activation range is longer than the sequence in the activation matrix.
Previous token stroke index set is empty, and current token %@ stroke index set is also empty
The first stroke index must be non-negative
CHRecognizer is running RNN recognition pipeline: %d
BEGIN "CHNextGenRecognition"
CHNextGenRecognition
END "CHNextGenRecognition"
BEGIN "CHPostProcessing"
CHPostProcessing
END "CHPostProcessing"
BEGIN "CHSegmentAndDecode"
CHSegmentAndDecode
END "CHSegmentAndDecode"
strokeProvider cannot be nil.
  Stroke provider change added %ld strokes, removed %ld strokes.
  Ignoring %ld added strokes that cannot enumerate their points.
StrokeProviderError: Inconsistency in stroke provider. Stroke with id %@ is exposed but this id can not be resolved by stroke provider version %@.
Stroke Grouping Logic Error: Failed to get stroke with id %@. The stroke is not exposed by stroke provider version %@.
retrieving stroke identifier gave nil result. Encoded stroke identifier: %@
timestep must be > 0
Stroke with no enumerable points found, recognition results may be affected. Stroke: %@
Drawing with no enumerable points found, recognition results may be affected. Drawing: %@
Removed %lu NaN-Points from %lu given points before calculating convex hull.
Removed %lu NaNs from %lu given values before calculating vector mean without outliers.
Warning: Less than %2.1f%% of the original points remain in the drawing after cleanup (before: %d, after: %d)
Error: computeSpatialFeaturesWithNoOverlapFromSparseBitmap: new bitmap size (%u) is larger than the original size (%u)
Error: computeSpatialFeaturesWithNoOverlapFromSparseBitmap: new bitmap size (%u) is equal to 0
Empty stroke detected during spatial resampling.
Error: readCharacter: filename ptr = 0
Error: readCharacter: Empty filename
Error: readCharacter: Wrong filename :%s:
Could not read data from file %@
%@ decoding failed. There was a problem decoding the stroke data.
At least one stroke index must be passed
Drawing unable to create folder at URL %@: Error %@
Drawing writeToFile saving drawing at URL %@, error = %@
Method can only be called on a single character string
isCharacterEmoji: character string doesn't match expectation of being single character with length (%lu)
isCharacterEmoji: codeCounts is 0 when data is encoded from character of length (%lu)
isCharacterEmoji: encoded data is invalid, null or empty, from character of length (%lu)
selectedTextRange %@ beyond text length %ld
activePreviewRange %@ beyond text length %ld
Invalid referenceSubstringRange %@
referenceSubstringRange %@ beyond text length %ld
Invalid referenceSubstringRange %@, length doesn't match string length %ld
The strokeCoveredTextRange %@ must be within the referenceSubstringRange %@
charRectsInReferenceSubstring cannot be NULL for referenceSubstringRange: %@
The referenceSubstring length must be equal to the range that it covers
Trying to get support for unsupported non-text candidate class.
Could not find a point in the drawing to match that in the resampled drawing
At least one stroke grouping strategy must be set.
Stroke Grouping with strategies [%@]. Added strokes: %ld, removed strokes: %ld
Use the designated initializer instead
Error: unexpected missing preferredLocale with competing locales %@, ordered locales %@, falling back on %@
There must be a preferred locale for the filtered results if there exists at least one result.
Filtering results for locale %s based on raw fitness score %.3f. (best score: %.3f, threshold: %.3f)
Filtering results for locale %s based on combined fitness score %.3f. (best score: %.3f, gap threshold: %.3f)
CHRemoteRecognitionRequest must be initialized with at least one locale
%@ decoding failed. Locale and drawing are required to be non-null and priority has to be valid.
CHRemoteRecognitionRequest unable to create folder at URL %@: Error %@
CHRemoteRecognitionRequest writeToFile saving drawing at URL %@, error = %@
The CHRemoteRecognitionRequest cannot be mutated after being submitted
hasBeenSubmitted state cannot be reverted after being set to YES
%@ decoding failed. Result token rows are required to be nonnull when constructing a request
Invalid index %ld when trying to replace a row from column with %lu rows.
Invalid index %ld when trying to remvove a row from column with %lu rows.
Cannot have nil strokeIdentifiers
No group found for stroke identifier %@, All strokes should belong to a group.
The strokes count in the drawing (%ld) must match the ones in the result (%ld).
The strokes count in the original drawing (%ld) must match the ones in the result (%ld).
Received nil target content info for target %@
Target content info is invalid, ignoring. referenceSubstring.length %ld != referenceSubstringRange.length %ld
Target content info is invalid, ignoring. selectedTextRange %@ invalid for length %ld
Target content info is invalid, ignoring. strokeCoveredTextRange %@ is not in range of referenceSubstringRange %@
Request for target content info timed out for target %@
There needs to be at least one array of token stroke identifiers to get a baseline.
There should be at least one substroke for a text line stroke group to get a baseline.
There should be at least one substroke covering one of the strokeIdentifiers.
Failed to match any substrokes with token stroke identifiers.
Token Stroke Identifiers: %@
Substroke Stroke Identifiers: %@
The number of points in the raw baseline estimate must be > 0 at this point.
Raw points[0] = %.2f, %.2f
Baseline Data detectors baseline approximation with %lu points, correction error = %.2f, number of substrokes %lu
The length of the computed path must be the same as the input
The length of the computed path must be one more than the input
%@: finished update for session %p. Length: %ld.%s
%@: finished update for session %p. Found %ld item(s).
Stroke index %ld in search result out of group stroke count %ld.
item should be of class CHSearchQueryItem: %@
CHTextInputGesture does not support the text correction type.
Gesture recognized with type %ld, range  = %ld,%ld
The affected range to be trimmed must be valid
Refined stroke ranges can only be computed for scribble, circle or polygon result types
The initial affected text range must be valid
Character range cannot be undefined.
The input string and range must be compatible with each other
Range %@ out of string length %ld
leadingExpansion cannot be negative: %ld
trailingExpansion cannot be negative: %ld
Character index %lu beyond bounds for string length: %lu
The searching range must be valid
There must be a valid character closest to the point
No characters found on either side of the vertical bar stroke
The drawing cannot be empty
The stroke covered range must be within the reference substring range
The computed character index (%li) must be valid in the string (length=%li)
An error occurred in the %@ model when extracting features: %@
An error occurred when trying to create feature provider for the %@ model: %@
An error occurred in the %@ model: %@
Unexpect rank of the CoreML output array: %lu
An error occurred in defining a new shape for the output: %@
Error in model %@. Expected output length: %lu, actual output length: %lu
Unable to initialize resultArray and create activation matrix.
An error occurred when trying to allocate feature array for the %@ model: %@
transcriptionPaths count (%ld) != scores count (%ld)
transcriptionPaths count (%ld) != probabilities count (%ld)
Found empty row when creating result with best path tokens. It indicates that the given paths don't cover the same strokes.
transcriptionPaths count (%ld) != probabilities count (%ld) after tokenized result is built
%@ decoding failed. Token columns, transcription paths, and scores are required to be nonnull and equal in size when constructing a text result
Original token not found in column %ld
The character range must be compatible with the top transcription
Error: Tokenized text result without any transcription path encountered when computing language fitness.
Found empty stroke index set for the last character segment.
TokenizedResult writeToFile saving drawing at URL %@, error = %@
Unexpected mismatched stroke indexes in result %@. Top result stroke index set contains %@. This alternative result stroke index set contains %@.
compressResult removed all columns.
Unexpected failure to find common stroke sets between top stroke sets %@ and other stroke sets %@.
Incompatible index sets have no partition of common index sets.
found an unknown stroke ID %@ to be removed in clutter filtering
clutter filter inconsistent status: %lu <==> %lu
clutter strokes: %lu, affected strokes: %lu, added strokes: %lu, removed strokes: %lu
Cannot find corresponding stroke ID given the item ID: %@
debug quicklook window MaxCell=%lu
debug quicklook window size=[%lu, %lu]
debug quicklook: grid range X=[%ld, %ld], Y=[%ld, %ld]
calling strokeIDsWithinRegionOfInterest() while clutter filter being in inconsistent status: %lu <==> %lu
An error occurred when loading a model: %@
Model not found ("%@")
Error loading Espresso model %@
Error selecting configuration %@ for Espresso model %@
Text class index not found in stroke classification codemap
Error creating queue for CHStrokeClassificationModel
Input too wide (%f): adjust with scale factor %f
An error occurred when trying to allocate the input mask array for the %@ model: %@
An error occurred when trying to allocate the input positional encodings for the %@ model: %@
Cancelling stroke classification of chunks
An error occurred in the %@ model during prediction
Unexpected number of strokes %lu to select the model configuration
Unexpected max number of points per stroke %lu to select the model configuration
Cancelling stroke classification
An error occurred in the %@ model when creating the input mask array: %@
An error occurred in the %@ model when creating the positional encodings array: %@
An error occurred selecting the espresso configuration of the %@ model
An error occurred setting the input to the %@ model
An error occurred binding the output of the %@ model
An error occurred executing the %@ model
An error occurred selecting the smallest espresso configuration of the %@ model
Stroke Grouping with strategy %@. Added strokes: %ld, removed strokes: %ld
Stroke Grouping with strategy %@ triggered with 0 strokes in the stroke provider.
Best split (%lu/%lu) has score %.3f, splitting threshold is %.3f
Best split not acceptable: %@
Attempt to create an empty stroke group.
SPLIT %lu/%lu: TS=%.3f, TT=%.3f, VD=%.3f, HD=%.3f, LT=%.3f, AR=%.3f, WD=%.3f, TF=%.3f, HS=%.3f, MH=%.3f, SC=%.3f, AL=%.3f
At least one stroke is needed to calculate accumulated time differences
Could not find stroke for id: %@
Use designated initializer instead
The preferred locales list cannot be empty.
Recognition tasks can only be executed once: %@
delegate cannot be nil when the task starts
BEGIN "CHSessionTaskGetAddedStrokes"
CHSessionTaskGetAddedStrokes
END "CHSessionTaskGetAddedStrokes"
BEGIN "CHSessionTaskStrokeClassification"
CHSessionTaskStrokeClassification
END "CHSessionTaskStrokeClassification"
Ran stroke classification in duration = %3.6f seconds
BEGIN "CHSessionTaskAccurateGrouping"
CHSessionTaskAccurateGrouping
END "CHSessionTaskAccurateGrouping"
Grouping algorithm not implemented: %ld
Recognition task almost finished, waiting for explicit overhead of %0.1fs.
strokeGroupingResult cannot be nil for a non-cancelled task.
Invalid status transition from %ld to %ld.
Recognition results for version %@:
GroupingOnly option selected. Skipping the recognition and performing grouping only.
Beginning recognizer request for stroke group %ld, locale %@
Finished recognizer request for stroke group %ld, locale %@. Duration: %0.3f
CHTokenizedTextResult is nil
Recognizer finished for stroke group %ld, duration: %0.3fs
Running remote recognition
Remote Recognition error: %@
Running local recognition
Failed to run recognition on sub-drawing after %li attempts
Remote call to compute transcription paths error: %@
Recognition successful using %li sub-drawings
results does not contain result for locale %@
%@: finished update for session %p, version %@. %ld item(s) available.
item should be of class CHTextInputQueryItem: %@
CHDataDetectorQuery._dataDetectorResultsForSessionResult: start
CHDataDetectorQuery._dataDetectorResultsForSessionResult: contextualTextResults.count = %lu
Found %lu strokes in the data detected content but only %lu strokes in the entire stroke group: %@. Found stroke indexes: %@
The last stroke index found in the data detected content (#strokes=%lu) should be within the scope of the strokeIDs array (#strokes=%lu)
CHDataDetectorQuery._dataDetectorResultsForSessionResult: detection results for group %i
CHDataDetectorQuery._dataDetectorResultsForSessionResult: found %lu items
The stroke indexes matching data detected content should be non-empty [%@]
item should be of class CHDataDetectorQueryItem: %@
item should be of class CHPrefixQueryItem: %@
CHRemoteRecognizer must be initialized with at least one locale
Remote connection to handwritingd was interrupted
Remote connection to handwritingd was invalidated
A locale is required to build the remote recognition request
An XPC proxy service error occurred: %@
Error during recognition: %@
XPC connection must be non-nil
%@ serialize drawing to %@/%@, 
%@ serialize request to %@/%@, 
%@ skipping serialization of nil drawing. Error = %@
%@ serialize recognition result to %@/%@, 
%@ skipping serialization of nil result. Error = %@
EspressoModelWrapper::~EspressoModelWrapper Error destroying model
EspressoModelWrapper::initialize Error creating context
EspressoModelWrapper::initialize Error creating plan
EspressoModelWrapper::initialize Error loading model
EspressoModelWrapper::initialize Error buidling plan
EspressoModelWrapper::destroy Error destroying plan
EspressoModelWrapper::destroy Error destroying context
EspressoModelWrapper::setInput Error setting input buffer shape
EspressoModelWrapper::setInput Error binding input buffer
EspressoModelWrapper::bindOutput Bind static buffer but output is dynamic
EspressoModelWrapper::bindOutput Error binding output buffer
EspressoModelWrapper::selectConfiguration Error cleaning current plan
EspressoModelWrapper::selectConfiguration Error selecting configuration
EspressoModelWrapper::selectConfiguration Error building Espresso plan
EspressoModelWrapper::execute Error executing model
Error: unable to mmap resource %s
Error: Index %lu out of bounds of the code map %lu symbols
Use initWithRecognitionSession: instead.
Cannot activate an already active visualization
%@: start for session %p
%@: pause
%@: result changed, will dispatch to main queue to notify the delegate.
%@: result changed, but cannot notify delegate. queryActive: %@, delegate %p.
Empty alphashape from ink with %lu strokes and %lu points.
No or empty transcription. TextLineStraightening not possible.
Empty alphashape from img.
Recognizer configuration needs to be defined
decodingCharacterLMWeight from override weights: %@
decodingWordLMWeight from override weights: %@
decodingLexiconWeight from override weights: %@
decodingLexiconLowerBoundLogProbability from override weights: %@
characterLMLowerBoundLogProbability from override weights: %@
decodingWordLMLowerBoundLogProbability from override weights: %@
shouldSkipLatinActivation from override weights: %@
Synchronization queue can not be nil when async loading language models.
Recognizer can not be nil when async loading language models.
Failed to load n-gram model from TextRecognition.framework at location %@ with error %@
Resource for transliteration map not found for locale "%@" (script=%lu, language=%lu) with resource path "%s"
Error loading model resource from path=%@
not supported
configuration locale %@, effective language %@, recognition engine %@
An error occurred when loading the CTC model %@
CHRecognizer is running rnn character language model: %d
Error when merging equivalent edges: index out of bounds
found paths with incompatible number of segments covered from %zu to %zu: previous value %lu, value for new path %zu 
Inconsistent network structure: edge with start node %zu belong in output edges of node %zu 
Unsupported Network Version %s
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 3Gram!
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 2Gram!
Error: unable to reallocate memory for path expansion.
Queue setup can only be performed once.
Configuring RecognitionSession %p with preferred locales: %@. Effective locales: %@.
stroke provider visible strokes %lu
RecognitionSession %p received needsRecognitionUpdate request. Will trigger processing soon.
dataSource %@ returned a nil strokeProviderSnapshot.
RecognitionSession %p cannot process needsRecognitionUpdate request. dataSource: %@, text recognition locales: %@.,  preferred locales: %@.
RecognitionSession %p cancelOngoingRequests. Cancelling %ld pending tasks. hasUnprocessedChanges %@->N. Last saved result for version: %@
RecognitionSession %p received request to rebuild recognition results. Stroke provider version: %@
RecognitionSession %p rebuilding recognition results. Cleared previous results. Will trigger processing soon.
RecognitionSession %p cannot process rebuildRecognitionResults request. dataSource: %@, text recognition locales: %@, preferred locales: %@.
latestStrokeProvider cannot be nil when scheduling change processing.
RecognitionSession %p enqueueing recognition task for version %@.
RecognitionSession %p canceling pending task for version %@, superseded by request for version %@.
RecognitionSession %p trying to process changes, but there are no text recognition locales. Only grouping will be performed
RecognitionSession %p starting task for version: %@.
RecognitionSession %p finished task for version: %@. Duration: %0.3fs (%0.3fs G, %0.3fs R). Groups: %ld, created: %ld, deleted: %ld.
RecognitionSession %p finished task for version: %@. Cancelled: %s. Produced result: %s.
Unimplemented
RecognitionSession %p has been serialized with preferredLocales: %@, recognitionEnvironment: %ld, priority: %ld, and lastRecognitionResult.
Last recognition result not loaded because session result version %ld does not match the current result version %ld.
RecognitionSession %p has been deserialized with preferredLocales: %@, recognitionEnvironment: %ld, priority: %ld, and lastRecognitionResult.
Nil RecognitionSession has been returned because session version %ld does not match the current session version %ld.
Requested creating in-process recognizer with %ld locales. Only the top one will be honored: %@
Visible stroke count: %lu, Ordered stroke count: %lu lastRecognitionResultIsValid: %d, _lastRecognitionResult: %p
Using last accurate results for tokenStrokeIdentifiersForContextStrokes results
Last accurate results for tokenStrokeIdentifiersForContextStrokes don't match visible strokes
Visible strokes not available in the stroke provider for fast grouping. Falling back on the ordered strokes.
Cached fast grouping line clusters not available. Computing line clusters on %lu strokes
Cached clutter filter not available. Creating new clutter filter
Using cached clutter filter for grouping query
Fast grouping duration: %2.2f seconds
Using cached fast grouping line clusters for grouping query
The tokenization level must be CHStrokeTokenizationLevelStroke to be compatible with fastGroupingResult=nil
CHStrokeTokenizationLevelStroke requested, so avoiding any clustering or grouping
Canceling tokenStrokeIdentifiersForContextStrokes request
foundStrokeIdentifiers is nil
A cached result must exist when calling _strokeIdentifiersFromCachedResultUsingContextStrokes:tokenizationLevel:
A cached result must exist when calling _contextualTextResultsFromCachedResultUsingContextStrokes:shouldCancel:
RecognitionSession %p starting high responsiveness task for version: %@.
contextualTextResultsForContextStrokes
Context results must be non-nil
The original and rescaled drawings should have equal stroke counts
The original and rescaled drawings should have equal total point counts
Expected nil or valid tokenized result as output of CHTextCorrectionRecognizer.
Invalid stroke covered range when recognizing editing gesture. %@
Cannot recognize editing gesture for drawing with %ld strokes.
Anchor point has a dummy large value, resetting to zero.
SpaceBehavior: %li
Unexpected number of token columns in text result refinement for single character mode. Expected 1 token column, got %lu
doesIntersectNoSpaceRegion: %i isContainedInPaddedNoSpaceRegion: %i
Method can only be called on a single character string: %@
Stroke group can't be nil and must be of CHTextLineStrokeGroup class.
There must be at least one substroke in the input for the coalescing algorithm.
Running stroke classification over %ld strokes
Index %ld out of bounds in normalized image for container support calculation.
Canceling agglomerative clustering results computation
%lu clusters found by the fast grouping algorithm
Canceling line cluster results computation
Fast grouping result must exist for the requested tokenization type
groupingResultForContextStrokes: %lu words found
Invalid stroke index %ld
%@: finished update for session %p. indexableContent length: %ld
%@ unexpectedly modified original tokens: "%@" -> "%@"
Number of corrected and raw tokens must match: %lu != %lu.
CHPreserveOriginalRecognitionStep is running
The best token index %ld is not contained in the returned tokens range %d, %ld
CHLexiconCorrectionStep is running with autoCapitalizationMode: %@
CHTransliterateHalfWidthPunctuationStep is running
CHOpeningClosingCharacterMatchingStep is running
CHSemanticTokenizerStep is running
wordID count %lu should match wordRangesInString count %lu
growingToken should not be nil
CHIdentifyLowAlignmentConfidenceColumnsStep is running
CHIdentifyLowAlignmentConfidenceColumnsStep unexpectedly decreased the changeable token column count.
CHCleanUpSpacesStep is running
CHCandidateRefinementStep is running
CHRemoveSpacesFromStrongURLsAndEmailsStep is running
CHRemoveSpacesFromStrongURLsStep range: %@ stringLength: %li isEmail: %i isUrl: %i
CHRemoveSpacesFromSpecialFieldsStep is running
CHRemoveSpacesFromHashtagsAndMentionsStep is running
CHRemoveSpacesFromEnglishAndKoreanParticlesStep is running
CHTransliterateChineseJapaneseStep is running
CHTransliterateConfusableCharactersStep is running
CHTransliterateIsolatedConfusableCharactersStep is running
CHReorderSCTCConfusionStep is running
CHMultiWordOVSFilteringStep is running
CHNumberFieldResultReorderingStep is running
CHMarkNoWhiteSpaceColumnsChangeableStep is running
CHJapaneseTokenizationAndConversionStep is running
At least one phrase should be returned in Mecabra tokenization and conversion step.
At least one candidate should be returned for each phrase in Mecabra tokenization and conversion step.
CHPutOriginalRecognitionResultFirstStep is running
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/CoreText.framework/CoreText
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/CoreText.framework/CoreText
CHClassifiableDrawing
CHLanguageUtilities
CHStrokeGroupQuery
CHStrokeGroupQueryItem
CHStrokeGroupingStrategy
SubclassesToOverride
CHEncodedStrokeIdentifier
NSCopying
NSSecureCoding
NSCoding
CHTokenizedTextResultToken
NSMutableCopying
Private
CHMutableTokenizedTextResultToken
CHTokenizedStrokeResult
CHRecognizerOptions
CHRecognizer
CHRecognizing
NSObject
Insight
CHDrawingContext
CHStrokeUtilities
CHRecognitionInsightRequest
CHRecognitionInsight
Internal
CHDrawing
CHCutPoint
CHSegmentDescriptor
CHDrawingSegmentGroup
CHStrokeGroupBaselineVisualization
CHTextInputScriptSpec
CHTextInputTargetContentInfo
CHMutableTextInputTargetContentInfo
CHNonTextCandidateStroke
CHMutableNonTextCandidateStroke
CHCornerDetector
CHMergedStrokeGroupingResults
CHStrokeGroupingManager
CHTextInputProtoSettings
CHTextStrokeTransformationQuery
CHNormalizedDrawingVisualization
CHNormalizedDrawingAllVisualization
CHRecognitionSessionResult
CHStrokeClassificationResult
CHStrokeGroupingResult
CHStrokeGroupRecognitionResult
CHStrokeGroupTextCorrectionResult
CHRemoteRecognitionRequest
CHTokenizedTextResultColumn
CHMutableTokenizedTextResultColumn
CHRecognizerResultCache
CHStrokeGroup
CHRecognitionSessionTextInputTask
CHTextInputTarget
CHTextLineStrokeGroup
CHTitleQuery
CHSingletonMLModel
CHRecognitionResult
CHTextRecognitionResult
CHSketchRecognitionResult
CHLineSketchRecognitionResult
CHManhattanLineSketchRecognitionResult
CHOutlinedArrowSketchRecognitionResult
CHRectangleSketchRecognitionResult
CHTriangleRecognitionResult
CHEllipseRecognitionResult
CHChatBubbleRecognitionResult
CHStarRecognitionResult
CHPentagonRecognitionResult
CHScribbleRecognitionResult
CHHeartRecognitionResult
CHCloudRecognitionResult
CHFreeformRecognitionResult
CHSubstrokeBoundsVisualization
CHStrokeGroupingVisualization
CHSearchQuery
CHSearchQueryItem
CHVisualization
CHPointFIFO
CHPointStrokeFIFO
CHBoxcarFilterPointFIFO
CHQuadCurvePointFIFO
CHStrokePointsVisualization
CHTextInputGesture
CHTextInputInsertionCaretGesture
CHCTCRecognitionModel
CHTokenizedTextResult
CHMutableTokenizedTextResult
CHSpellCheckerErrorModel
CHSpellChecker
CHStrokeClutterFilter
CHRecurrentNeuralNetwork
CHRecurrentNeuralNetworkCoreML
CHStrokeClassificationModel
CHTopDownStrokeSplit
CHOrderedStrokeGroup
CHTopDownStrokeGroupingStrategy
CHTimeWindowStrokeGroup
CHTimeWindowStrokeGroupingStrategy
CHRecognitionSessionTask
CHMultiLocaleResultProcessor
CHTextInputQuery
CHTextInputQueryItem
CHDataDetectorQuery
CHDataDetectorQueryItem
CHPrefixQueryItem
CHPrefixQuery
CHSubstroke
CHSubstrokePlacement
CHStrokeGroupClassificationVisualization
CHPolygon
CHStrokeGroupBasedVisualization
CHRemoteRequestProtocol
CHRemoteRecognizer
CHVisualizationManager
CHStrokeGroupBasedVisualizationDelegate
CHVisualizationDelegate
CHRecognitionSessionObserver
CHTranscriptionQuery
CHQuery
RecognitionSessionObserver
ForSubclasses
CHContextualTextResult
CHContextualTextResults
CHTextLineStraightener
CHStringOVSChecker
CHTextCorrectionResult
CHRecognizerConfiguration
CHStrokeVisualization
CHGroupBoundsVisualization
CHRecognitionSessionVersion
CHRecognitionSession
CHRecognitionSessionTextInputTaskDelegate
CHRecognitionSessionTaskDelegate
CHTextCorrectionRecognizer
CHCharacterSetRules
CHBottomUpStrokeGroupingResult
CHBottomUpStrokeGroupingStrategy
MutableCopying
CHMutableStrokeClassificationResult
CHStrokeClassifier
CHActivationMatrix
CHFastStrokeGroupingStrategy
CHStrokeGroupBaselineLegacyVisualization
CHIndexableContentQuery
CHRecognitionSessionIndexableContent
CHStrokeFastGroupingResult
NetworkCursor
CHPatternNetwork
CHContextualCharacterTransliteration
CHMecabraWrapper
CHResultWithContext
CHPostProcessingManager
CHPostprocessingStep
CHPostprocessingStepModifyingOriginalTokens
CHTextFieldTypeSwitchStep
CHPreserveOriginalRecognitionStep
CHLexiconCorrectionStep
CHTransliterateHalfWidthPunctuationStep
CHOpeningClosingCharacterMatchingStep
CHSemanticTokenizerStep
CHIdentifyLowAlignmentConfidenceColumnsStep
CHCleanUpSpacesStep
CHCandidateRefinementStep
CHRemoveSpacesFromStrongURLsAndEmailsStep
CHRemoveSpacesFromSpecialFieldsStep
CHRemoveSpacesFromHashtagsAndMentionsStep
CHRemoveSpacesFromEnglishAndKoreanParticlesStep
CHTransliterateChineseJapaneseStep
CHTransliterateConfusableCharactersStep
CHTransliterateIsolatedConfusableCharactersStep
CHReorderSCTCConfusionStep
CHMultiWordOVSFilteringStep
CHNumberFieldResultReorderingStep
CHMarkNoWhiteSpaceColumnsChangeableStep
CHJapaneseTokenizationAndConversionStep
CHCyrillicAddAlternativeScriptCandidatesStep
CHCyrillicRecoverConfusableWordsStep
CHPutOriginalRecognitionResultFirstStep
CHRecognizerInferenceCache
CoreHandwriting
CHExtensions
CGImage
.cxx_destruct
T@"<CHStroke>",R,N,V_lastStroke
JSONObjectWithData:options:error:
T@"CHStrokeClassificationResult",&,V_strokeClassificationResult
T@"<CHPointFIFODrawingTarget>",&,N,V_drawingTarget
T@"NSArray",C,N
T@"<CHRecognitionSessionDataSource>",N,V_dataSource
T@"NSObject<OS_dispatch_queue>",R,N,V__tasksWorkQueueBackground
T@"<CHRecognitionSessionTextInputTaskDelegate>",D,N
T@"NSSet",R,C,N
T@"<CHStrokeGroupBasedVisualizationDelegate>",W,D,N
T@"NSString",R,N,V_resourcePath
T@"<CHStrokeProvider>",&,S_setLatestStrokeProvider:
TB,N,V_shouldCreatePseudoTokens
T@"<CHStrokeProvider>",R
TB,N,V_unlikelyHasLatinContents
T@"<CHStrokeProviderVersion>",C,V_lastProcessedStrokeProviderVersion
TB,R,N,V_supportsAutoLineBreaks
T@"<CHTextInputQueryTargetDataSource>",W,V_textInputTargetsDataSource
T^v,R,N,V_model
T@"<CHVisualizationManagerDelegate>",N,V_delegate
Td,N,V_preferredUpdatesInterval
T@"CHClassifiableDrawing",R,N,V_classifiableDrawing
Ti,R,N,V_autoCapitalizationMode
T@"CHCutPoint",R,N,V_endCutPoint
Tq,R,N,V_recognitionEnvironment
T@"CHDrawing",&,N,V_drawing
T{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}},R,N,V_fastGroupingClusters
T@"CHDrawing",C,N,V_cachedDrawing
__stringCodeMap
T@"CHDrawing",C,N,V_inputDrawing
_affectedRangeByTrimmingSpaces:
T@"CHDrawing",R,N
_applyDefaultGroupingParameters
T@"CHDrawing",R,N,V_normalizedDrawing
_autoLineBreakRequireWeakCursor
T@"CHEncodedStrokeIdentifier",R,N,V_firstStrokeIdentifier
_bounds
T@"CHEncodedStrokeIdentifier",R,N,V_strokeIdentifier
_center
T@"CHMecabraWrapper",R,N,V_mecabraWrapper
_characterLevel
T@"CHPatternNetwork",&,N,V_patternFST
_characterType:
T@"CHPointFIFO",&,N,V_nextFIFO
_columnStrokeSetsFromTokenRows:
T@"CHPostProcessingManager",&,N,V_defaultProcessor
_contextResults
T@"CHPostProcessingManager",&,N,V_emailProcessor
_cornerDetector
T@"CHPostProcessingManager",&,N,V_mergedResultPostProcessor
_currentProcessingSessionResult
T@"CHPostProcessingManager",&,N,V_postProcessor
_emailAtCharSet
T@"CHPostProcessingManager",&,N,V_usernameProcessor
_engine
T@"CHRecognitionInsightRequest",&,N,V_insightRequest
_errorsByLocale
T@"CHRecognitionSessionIndexableContent",&,S_setIndexableContent:,V_indexableContent
_freeformEngine
T@"CHRecognitionSessionResult",&,N,V_resultDrawn
_inferenceCount
T@"CHRecognitionSessionResult",R
_isCursorStrong
T@"CHRecognitionSessionResult",R,N,V_sessionLastResult
_lineBreakVerticalBarUpToDelete
T@"CHRecognitionSessionVersion",R
_locale
T@"CHRecognizerConfiguration",&,N,S_setConfiguration:,V_configuration
_maxResultCount
T@"CHSpellChecker",&,N,V_spellChecker
_newStrokeGroupUniqueIdentifier
T@"CHStringOVSChecker",&,N,V_ovsStringChecker
_orderedStrokes
T@"CHStrokeClassificationResult",R,N,V_strokeClassificationResult
_points
T@"CHStrokeGroup",&,N,V_strokeGroup
_rawLanguageFitnessForTranscriptionPath:locale:recognitionMode:
T@"CHStrokeGroupingResult",R,N,V_strokeGroupingResult
_reorderStrokes
T@"CHTextCorrectionResult",R,N,V_correctionResult
_safelyUnloadEngineAndResources
T@"CHTextInputQuery",W,N
_sessionVersion
T@"CHTextInputTarget",R,N,V_inputTarget
_startTimestamp
T@"CHTextInputTargetContentInfo",R,N,V_targetContentInfo
_string
T@"CHTokenizedTextResult",&,N,V_textResult
_strokeClassificationLastResult
T@"CHTokenizedTextResult",R,N,V_textResult
_substrokeCount
T@"CVNLPCTCTextDecoder",&,N,V_textDecoder
_textClassIndex
T@"MLModelConfiguration",R,N
_textRecognizer
T@"NSArray",&,N,V_sequence
_transitionTime
T@"NSArray",&,S_setLatestTextInputTargets:,V__latestTextInputTargets
_upperLeftPoint
T@"NSArray",&,V_contextStrokes
_wordID
T@"NSArray",C,N,S_setAvailableItems:,V_availableItems
activationRange
T@"NSArray",C,N,S_setStrokeGroupItems:,V_strokeGroupItems
arrayWithArray:
T@"NSArray",C,N,V_locales
coalescedCenter
T@"NSArray",N,V_characterTransliterations
compressResult:atColumnIndexes:
T@"NSArray",R,C,N,V_inputStrokeIdentifiers
containsString:
T@"NSArray",R,C,N,V_preferredLocales
contextualTextResultsForContextStrokes:completion:shouldCancel:
T@"NSArray",R,C,N,V_strokeIdentifiers
countCodepoints
T@"NSArray",R,C,N,V_transcriptionPathScores
currencySymbols
T@"NSArray",R,N,V_initialTextInputTargets
dealloc
T@"NSArray",R,N,V_locales
drawing
T@"NSArray",R,N,V_modelConfigurationsNumStrokes
emissionHandler
T@"NSArray",R,N,V_orderedStrokes
endOfSentencePunctuationCharSet
T@"NSArray",R,N,V_orderedStrokesGroup2
forcedGen2ModelLocaleForLocale:
T@"NSArray",R,N,V_segments
handleChineseLigaturesInString:
T@"NSArray",R,N,V_strokeGroup2
initWithLanguageResourceBundle:
T@"NSArray",R,N,V_textInputTargets
initWithModelName:featureIndex:
T@"NSArray",R,V_pathPoints
initWithString:score:rotation:center:size:controlPointLocation:
T@"NSArray",R,V_wordIDs
initWithTransliterateSentences:
T@"NSArray",R,V_wordPatternEntries
isEmpty
T@"NSArray",R,V_wordRecognitionScores
isEqualToDataDetectorQueryItem:
T@"NSCharacterSet",&,N
isProxy
T@"NSCharacterSet",&,N,V_activeCharacterSet
isString:fullPattern:inNetwork:
T@"NSCharacterSet",&,N,V_alphaNumericCharSet
locales
T@"NSCharacterSet",&,N,V_backwardLookingCharacterSet
lowercaseString
T@"NSCharacterSet",&,N,V_closingQuoteCharacters
mecabra
T@"NSCharacterSet",&,N,V_consumableStrokesCharSet
modelNameKorean
T@"NSCharacterSet",&,N,V_containsTwoDotsCharSet
newSpellChecker
T@"NSCharacterSet",&,N,V_currencySymbols
numberWithBool:
T@"NSCharacterSet",&,N,V_dateTimeSeparatorCharSet
options
T@"NSCharacterSet",&,N,V_digitEndPunctuationCharSet
pointForStrokeIndex:pointIndex:
T@"NSCharacterSet",&,N,V_emailAtCharSet
processingQueue
T@"NSCharacterSet",&,N,V_emoticonBottomCharSet
q_sessionResult
T@"NSCharacterSet",&,N,V_emoticonTopCharSet
recognitionMode
T@"NSCharacterSet",&,N,V_endOfWordPunctuationCharSet
refineLocalWritingOrientationsForSubstrokes:useCoalescedCenter:
T@"NSCharacterSet",&,N,V_fullWidthPunctuationThatExpectsUppercaseAfter
remapAllStrokeIndexesWithArray:
T@"NSCharacterSet",&,N,V_lowercaseCharSet
scanString:range:configuration:
T@"NSCharacterSet",&,N,V_nonSpaceSeparatorCharSet
setActivations:
T@"NSCharacterSet",&,N,V_openingBracketCharacters
setBackwardLookingCharacterSet:
T@"NSCharacterSet",&,N,V_prefixCapitalizationExceptionCharSet
setEndOfWordPunctuationCharSet:
T@"NSCharacterSet",&,N,V_punctuationThatNeedSpaceCleanup
setLastCharacterSegmentIndexes:
T@"NSCharacterSet",&,N,V_sentenceStartPunctuationInSpanish
setPatternType:
T@"NSCharacterSet",&,N,V_symbolsRequiringSpaceBeforeInFrench
setResultDrawn:
T@"NSCharacterSet",&,N,V_uppercaseCharSet
setSpotlightSuggestionsEnabled:
T@"NSCharacterSet",&,N,V_widthAlternativeCharacterSet
setTerminatingSpecialCharacter:
T@"NSCharacterSet",C,N,V_recognizerActiveCharacterSet
setTextResults:
T@"NSCharacterSet",R,N,V_requiredLeftContext
set_registeredAsChangeObserver:
T@"NSData",R,N
shiftIndexesStartingAtIndex:by:
T@"NSDictionary",&,D,N
shouldApplySemanticTokenization
T@"NSDictionary",&,N,V_textReplacements
shouldIdentifyChangeableColumns
T@"NSDictionary",C,N,V_activeCharacterSetPerLocale
shouldRecoverCyrillicCandidates
T@"NSDictionary",C,N,V_parametersOverride
spacing
T@"NSDictionary",R,C,N
stringByAppendingPathComponent:
T@"NSDictionary",R,C,N,V__recognitionResultsByGroupID
stringFromDate:
T@"NSDictionary",R,C,N,V__tokenizedTextResultsByLocale
strokeGroupType
T@"NSDictionary",R,C,N,V_errorsByLocale
strokeIndexesForColumnsInRange:
T@"NSDictionary",R,C,N,V_strokeClassificationsByStrokeIdentifier
substrokeCount1
T@"NSDictionary",R,N,V_classCounts
substrokesCount
T@"NSDictionary",R,N,V_groupingResultsByStrategyIdentifier
textInputTarget
T@"NSDictionary",R,N,V_substrokePlacementsByStrokeIdentifier
unionStrokeBounds:aroundXPosition:usingOneSideStrokeCountLimit:
T@"NSError",C,N,V_recognitionError
updateLocalWritingOrientationsForSubstrokes:useCoalescedCenter:
T@"NSIndexSet",C,D,N
uppercaseString
T@"NSIndexSet",R,C,N,V_strokeIndexes
valueWithRange:
T@"NSIndexSet",R,V_inappropriateWordIndexes
vertex2
T@"NSLocale",&,N,V_locale
visibleStrokeEncodedIdentifiers
T@"NSLocale",C,N,V_recognizerLocale
.cxx_construct
T,N,V_lastPoint
CJKPairedPunctuationsCharSet
T@"CHStrokeClassificationModel",R,N,V_strokeClassificationModel
T#,R
T@"CHSubstroke",R,N,V_substroke
T@"<CHQueryDelegate>",W,N,V_delegate
T@"NSArray",R,N
T@"<CHRecognitionSessionTaskDelegate>",N,V_delegate
T@"NSObject<OS_dispatch_queue>",R,N,V__tasksWorkQueueForeground
T@"<CHRecognizing>",R,N,V__textRecognizer
T@"NSString",R,C,N,V_correction
T@"<CHStrokeProvider>",&,N,V__strokeProviderDrawn
TB,N,V_enableCachingIfAvailable
T@"<CHStrokeProvider>",&,V_strokeProvider
TB,N,V_shouldUseDynamicSampling
T@"<CHStrokeProvider>",R,N,V_strokeProvider
TB,R,N,V_isInlineContinuousMode
T@"<CHStrokeProviderVersion>",R,N,V_strokeProviderVersion
TI,R,N,V_wordID
T@"<CHVisualizationDelegate>",W,N,V_delegate
Td,N,V_distMean
T@"CHCTCRecognitionModel",&,N,V_recognitionModel
Td,R,V_rotation
T@"CHCornerDetector",R,N,V__cornerDetector
Tq,N,V_priority
T@"CHCutPoint",R,N,V_startCutPoint
T{CGPoint=dd},R,V_startLocation
T@"CHDrawing",&,N,V_strokes
__hasCompleteRecognitionResults
T@"CHDrawing",C,N,V_drawing
_addVisualizationForIdentifier:
T@"CHDrawing",R,C,N,V_resampledDrawing
_alignmentScore
T@"CHDrawing",R,N,V_drawing
_asciiProcessor
T@"CHDrawing",R,N,V_originalDrawing
_availableItems
T@"CHEncodedStrokeIdentifier",R,N,V_lastStrokeIdentifier
_boundsDiagonal
T@"CHMecabraWrapper",&,N,V_mecabraWrapper
_characterIDMap
T@"CHMutableTokenizedTextResult",&,N,V_result
_characterProbabilityOutputName
T@"CHPatternNetwork",&,N,V_postProcessingFST
_classification
T@"CHPostProcessingManager",&,N,V_asciiProcessor
_containerScore
T@"CHPostProcessingManager",&,N,V_digitProcessor
_contextStrokes
T@"CHPostProcessingManager",&,N,V_equationProcessor
_cornerIndexSet
T@"CHPostProcessingManager",&,N,V_phoneProcessor
_digitProcessor
T@"CHPostProcessingManager",&,N,V_urlProcessor
_emailProcessor
T@"CHRecognitionInsight",R,N
_enlargedBounds
T@"CHRecognitionSession",R,N,V_recognitionSession
_extractFeaturesFromDrawing:inputName:interpointDistance:error:
T@"CHRecognitionSessionResult",&,N,S_setOutputResult:,V_outputResult
_groupingStrategiesByIdentifier
T@"CHRecognitionSessionResult",&,S_setLastRecognitionResult:
_insightRequest
T@"CHRecognitionSessionResult",R,N,V_inputResult
_itemIdentifier
T@"CHRecognitionSessionVersion",&,S_setSessionVersion:
_localStrokeWritingOrientations
T@"CHRecognizer",R,N,V__shapeRecognizer
_lowerLeftPoint
T@"CHSingletonMLModel",R,N,V_model
_mecabraWrapper
T@"CHSpellCheckerErrorModel",&,N,V_errorModel
_orderedLocales
T@"CHStrokeClassificationResult",R,N,V_strokeClassificationLastResult
_phoneProcessor
T@"CHStrokeClutterFilter",R,N,V_clutterFilter
_prefix
T@"CHStrokeGroupingResult",&,V_strokeGroupingResult
_recognizerGenerationIdentifier
T@"CHTextCorrectionResult",R,C,N,V_textCorrectionResult
_result
T@"CHTextInputQuery",&,N,V_activeTextInputQuery
_script
T@"CHTextInputTarget",&,D,N
_setFoundItems:
T@"CHTextInputTarget",R,N,V_textInputTarget
_status
T@"CHTokenizedTextResult",&,N,V__textResult
_stringForCode:
T@"CHTokenizedTextResult",C,N,V_textResult
_strokeProvider
T@"CVNLPActivationMatrix",&,N,V_activations
_subwordGestureEndingSpeedRange
T@"DDScannerResult",R,N,V_dataDetectorResult
_textCorrectionResultsByGroupID
T@"MLModelDescription",R,N
_tokenizedTextRecognitionResultForDrawing:options:shouldCancel:
T@"NSArray",&,N,V_textResults
_updateRecognitionSessionStatus
T@"NSArray",&,V_contextResults
_whitelistMecabraRareCharacters
T@"NSArray",C,D,N
_wordStrokeSets
T@"NSArray",C,N,S_setFoundItems:,V_foundItems
allKeys
T@"NSArray",C,N,S_setTextRecognitionLocales:,V__textRecognitionLocales
characterRectForCharacterIndex:
T@"NSArray",C,N,V_preferredLocales
codeMap
T@"NSArray",R,C,N
containsObject:
T@"NSArray",R,C,N,V_locales
contentsAtPath:
T@"NSArray",R,C,N,V_recognitionLocales
convexHullForStrokes:inDrawing:
T@"NSArray",R,C,N,V_tokenRows
countForObject:
T@"NSArray",R,C,N,V_transcriptionPaths
currentProgress
T@"NSArray",R,N,V_inputNames
distStd
T@"NSArray",R,N,V_modelConfigurationsNumPoints
drawingWithStrokesFromIndexSet:
T@"NSArray",R,N,V_orderedStrokeIdentifiers
endEndpointType
T@"NSArray",R,N,V_orderedStrokesGroup1
fillWithNumber:
T@"NSArray",R,N,V_outputNames
gapFeatureIndex
T@"NSArray",R,N,V_strokeGroup1
indexForSegmentID:fromSegments:
T@"NSArray",R,N,V_subjectStrokeIdentifiers
initWithLocale:
T@"NSArray",R,N,V_writingDirectionSortedStrokeIdentifiers
initWithString:
T@"NSArray",R,V_wordCombinedScores
initWithStrokeProvider:strokeClassificationLastResult:textOnly:
T@"NSArray",R,V_wordLexicalEntries
isAtEnd
T@"NSArray",R,V_wordRanges
isEqualToArray:
T@"NSArray",R,V_wordStrokeSets
isPathOriginal:
T@"NSCharacterSet",&,N,V_CJKPairedPunctuationsCharSet
isStartOfStroke
T@"NSCharacterSet",&,N,V_allowedCharacters
isValid
T@"NSCharacterSet",&,N,V_arithmeticOperatorCharSet
lowerRightPoint
T@"NSCharacterSet",&,N,V_closingBracketCharacters
maxRequestStrokeCountForLocale:
T@"NSCharacterSet",&,N,V_commonJapaneseSymbols
minimumSignificantSegmentLength
T@"NSCharacterSet",&,N,V_containsDotCharSet
multiArrayValue
T@"NSCharacterSet",&,N,V_contextInvariantCharacterSet
T@"NSCharacterSet",&,N,V_dateTimeEndLetterCharSet
numberWithLong:
T@"NSCharacterSet",&,N,V_digitCharSet
originalDrawing
T@"NSCharacterSet",&,N,V_digitStartPunctuationCharSet
preferredLocale
T@"NSCharacterSet",&,N,V_emailPunctuationCharSet
punctuationThatNeedSpaceCleanup
T@"NSCharacterSet",&,N,V_emoticonMiddleCharSet
rareWordIndexes
T@"NSCharacterSet",&,N,V_endOfSentencePunctuationCharSet
recognitionType
T@"NSCharacterSet",&,N,V_forwardLookingCharacterSet
release
T@"NSCharacterSet",&,N,V_lexiconSkipCharSet
resultRestoringRawPathInResult:
T@"NSCharacterSet",&,N,V_middlePunctuationCharSet
T@"NSCharacterSet",&,N,V_numeralEndLetterCharSet
setActiveCharacterSetPerLocale:
T@"NSCharacterSet",&,N,V_openingQuoteCharacters
setContentType:
T@"NSCharacterSet",&,N,V_punctuationThatExpectsUppercaseAfter
setGestureType:
T@"NSCharacterSet",&,N,V_selfLoopPunctuationCharSet
setLeftContext:
T@"NSCharacterSet",&,N,V_startPunctuationCharSet
setQueryString:
T@"NSCharacterSet",&,N,V_symmetricQuoteCharacters
setShouldKeepDuplicateTokenIDs:
T@"NSCharacterSet",&,N,V_urlPunctuationCharSet
setStrokeGroup:
T@"NSCharacterSet",C,N,V_koreanParticlesCharSet
setTextDecoder:
T@"NSCharacterSet",R,N,V_characterSet
setWithObjects:
T@"NSCharacterSet",R,N,V_requiredRightContext
set_textResult:
T@"NSData",R,N,V_encodedStrokeIdentifier
shouldApplyDiacriticSensitivity
T@"NSDictionary",&,N,V_characterReplacements
shouldComposeLexiconWithNetwork
T@"NSDictionary",C,N,S_setStrokeGroupItemsByID:,V_strokeGroupItemsByID
shouldPruneMixedScriptWordPaths
T@"NSDictionary",C,N,V_options
smoothLocalWritingOrientations:
T@"NSDictionary",C,N,V_recognizerOptions
strides
T@"NSDictionary",R,C,N,V__errorsByLocale
stringByAppendingPathExtension:
T@"NSDictionary",R,C,N,V__textCorrectionResultsByGroupID
strokeDeviation
T@"NSDictionary",R,C,N,V_activeCharacterSetPerLocale
strokeIDsWithinRectangleRegion:
T@"NSDictionary",R,C,N,V_recognitionResultsByLocale
strokes
T@"NSDictionary",R,C,N,V_substrokesByStrokeIdentifier
substrokeCount2
T@"NSDictionary",R,N,V_featureCounts
support
T@"NSDictionary",R,N,V_groupingStrategiesByIdentifier
tokenizedStrokeResultForInitialStrokes:point:tokenizationLevel:
T@"NSDictionary",R,N,V_supportByStrokeIdentifier
updateActivationsWithActiveCharacterSet:resultArray:indexArray:
T@"NSError",R,N,V_error
upperRightPoint
T@"NSIndexSet",R,C,N,V_protectedCharacterIndexes
valueWithPoint:
T@"NSIndexSet",R,N
vertex1
T@"NSIndexSet",R,V_rareWordIndexes
vertex3
T@"NSLocale",C,N
wordIDs
T@"NSLocale",R,C,N
T@"NSLocale",R,C,N,V_locale
T@"NSLocale",R,C,N,V_preferredLocale
T@"NSLocale",R,N,V_locale
T@"NSMutableArray",&,V_correctionAngles
T@"NSMutableArray",R,N,V__activeTasks
T@"NSMutableArray",R,N,V__activeVisualizationIDs
T@"NSMutableArray",R,N,V__changeObservers
T@"NSMutableArray",R,N,V__inputDrawingClients
T@"NSMutableDictionary",&,N,V_textReplacementLowercasedKeyMapping
T@"NSMutableDictionary",R,N,V__activeVisualizationsByID
T@"NSMutableDictionary",R,N,V__correctionRecognizersByLocalesKey
T@"NSMutableDictionary",R,N,V__recognizersByLocaleID
T@"NSMutableDictionary",R,N,V__strokeGroupIndexByAncestorID
T@"NSMutableIndexSet",&,N,V_lastCharacterSegmentIndexes
T@"NSMutableIndexSet",R,C,N,V__cornerIndexSet
T@"NSMutableIndexSet",R,C,N,V__directionChangeCornerIndexes
T@"NSMutableSet",R,N,V__enabledVisualizationIDs
T@"NSNumber",R,C,N,V_inputTargetIdentifier
T@"NSNumber",R,N,V_itemIdentifier
T@"NSNumber",R,N,V_itemStableIdentifier
T@"NSNumber",R,N,V_segmentID
T@"NSNumber",R,N,V_strokeGroupIdentifier
T@"NSNumber",R,N,V_strokeGroupStableIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_recognitionQueue
T@"NSObject<OS_dispatch_queue>",R,N
T@"NSObject<OS_dispatch_queue>",R,N,V__charSetRulesQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__highResponsivenessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__recognizersQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__sessionQueue
T@"NSOrderedSet",R,V__stringCodeMap
T@"NSSet",C,N
T@"NSSet",C,N,V_activeStrokeGroupAncestorIdentifiers
T@"NSSet",C,N,V_forceRecognitionStrokeGroupIdentifiers
T@"NSSet",R,C,N,V_createdStrokeGroups
T@"NSSet",R,C,N,V_deletedStrokeGroups
T@"NSSet",R,C,N,V_nontextCandidates
T@"NSSet",R,C,N,V_strokeGroups
T@"NSSet",R,C,N,V_strokeIdentifiers
T@"NSSet",R,C,N,V_titleStrokeIdentifiers
T@"NSSet",R,N,V_strokeIdentifiers
T@"NSString",&,N,V_leftContext
T@"NSString",&,N,V_terminatingSpecialCharacter
T@"NSString",C,D,N
T@"NSString",C,N,V_queryString
T@"NSString",R,C
T@"NSString",R,C,N
T@"NSString",R,C,N,V_confusion
T@"NSString",R,C,N,V_indexableTextRepresentation
T@"NSString",R,C,N,V_prefix
T@"NSString",R,C,N,V_presentableTextRepresentation
T@"NSString",R,C,N,V_referenceSubstring
T@"NSString",R,C,N,V_string
T@"NSString",R,C,N,V_trailingSeparator
T@"NSString",R,C,N,V_transcribedTitle
T@"NSString",R,N
T@"NSString",R,N,V_characterProbabilityOutputName
T@"NSString",R,N,V_directionalFeaturesInputName
T@"NSString",R,N,V_modelKey
T@"NSString",R,N,V_modelName
T@"NSString",R,N,V_modelSmallestConfig
T@"NSString",R,N,V_queryResult
T@"NSString",R,N,V_strategyIdentifier
T@"NSString",R,V_string
T@"NSURL",&,N,V_learningDictionaryURL
T@"NSXPCConnection",R,N,V__connection
T@?,C,N,V_partialResultBlock
T@?,C,V_emissionHandler
TB,D,N
TB,N
TB,N,S_setHasUnprocessedChanges:,V__hasUnprocessedChanges
TB,N,V__queryActive
TB,N,V__registeredAsChangeObserver
TB,N,V__registeredAsInputDrawingsClient
TB,N,V_capitalizationToSplit
TB,N,V_caseMatchingOnly
TB,N,V_convertToLowercase
TB,N,V_emitInterpolatedPoints
TB,N,V_enableGen2CharacterLMIfAvailable
TB,N,V_enableGen2ModelIfAvailable
TB,N,V_enableStrokeReordering
TB,N,V_fullWordsOnly
TB,N,V_hasBeenSubmitted
TB,N,V_normalizeFeatures
TB,N,V_saveInputDrawings
TB,N,V_servesBackgroundIndexation
TB,N,V_shouldAddAlternatives
TB,N,V_shouldAutoCapitalize
TB,N,V_shouldAutoCorrect
TB,N,V_shouldKeepAlternativeLengths
TB,N,V_shouldKeepDuplicateTokenIDs
TB,N,V_shouldKeepOriginalSpelling
TB,N,V_shouldKeepOutOfLexiconAlternatives
TB,N,V_shouldKeepOutOfPatternCandidates
TB,N,V_shouldKeepSubstrings
TB,N,V_shouldUseTextReplacements
TB,N,V_statusReportingEnabled
TB,N,V_strokeGroupingOnly
TB,N,V_transliterateSentences
TB,R
TB,R,N
TB,R,N,GisCharacterLevel,V_characterLevel
TB,R,N,V_autoLineBreakEnabled
TB,R,N,V_autoLineBreakRequireWeakCursor
TB,R,N,V_containsCommittedStrokes
TB,R,N,V_enableCachingIfAvailable
TB,R,N,V_enableGen2CharacterLMIfAvailable
TB,R,N,V_enableGen2ModelIfAvailable
TB,R,N,V_expandCodePoints
TB,R,N,V_isCursorStrong
TB,R,N,V_isEndOfStroke
TB,R,N,V_isHighResponsivenessTask
TB,R,N,V_isRemoteRecognition
TB,R,N,V_isSingleLine
TB,R,N,V_lineBreakVerticalBarGestureEnabled
TB,R,N,V_lineBreakVerticalBarUpToDelete
TB,R,N,V_newGroupsDefaultToActive
TB,R,N,V_preferCharacterLevel
TB,R,N,V_preventLeftoverCharsInSubwordGestures
TB,R,N,V_promoteKanaConversion
TB,R,N,V_requiresLexiconMatch
TB,R,N,V_textOnly
TB,R,V_cornerLine
TB,R,V_isTextReplacement
TB,S_setShouldForceFastGrouping:,V__shouldForceFastGrouping
TB,V_cancelled
TI,D,N
TI,R,N,V__taskQueueQoSClass
TQ,D,N
TQ,N
TQ,N,V__changeCoalescingIndex
TQ,N,V_lastCharacterSegmentCount
TQ,N,V_maxRecognitionResultCount
TQ,N,V_recognizerMaxRecognitionResultCount
TQ,N,V_stateType
TQ,N,V_width
TQ,R
TQ,R,N
TQ,R,N,V__strawSize
TQ,R,N,V_directionChangeCount
TQ,R,N,V_edgeIndex
TQ,R,N,V_highestDirectionChangeCount
TQ,R,N,V_maxCandidateCount
T^^v,N,V_icuTransliterator
T^v,N,V_characterLanguageModel
T^v,N,V_cjkDynamicLexicon
T^v,N,V_cjkStaticLexicon
T^v,N,V_formatGrammarFST
T^v,N,V_lmVocabulary
T^v,N,V_radicalClusterFST
T^v,N,V_wordLanguageModel
T^v,R,N,V_wordLanguageModel
T^{CGPath=},N,V_path
T^{CGPoint=dd},R,N,V_vertices
T^{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_characterRectsInReferenceSubstring
T^{CHCodeMap=*Q^II},R,N,V_codeMap
T^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}},N,V_engine
T^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}},N,V_freeformEngine
T^{VariantMap=^i^i^ii^iQ},N,V_transliterationVariantMap
T^{_LXLexicon=},N,V_customLexicon
T^{_LXLexicon=},N,V_customPhraseLexicon
T^{_LXLexicon=},N,V_phraseLexicon
T^{_LXLexicon=},N,V_secondaryStaticLexicon
T^{_LXLexicon=},N,V_staticLexicon
T^{__Mecabra=},R,V_mecabra
T^{__MecabraContext=},R,N,V_mecabraContextRef
Td,D,N
Td,N,V_area
Td,N,V_distStd
Td,N,V_interpointDistance
Td,N,V_lineWidth
Td,N,V_minimumSignificantSegmentLength
Td,N,V_totalDuration
Td,R,N
Td,R,N,V_autoLineBreakAreaWidthFactor
Td,R,N,V_autoLineBreakDualBreakVerticalDistance
Td,R,N,V_autoLineBreakMinVerticalDistance
Td,R,N,V_boundsDiagonal
Td,R,N,V_containerScore
Td,R,N,V_curvature
Td,R,N,V_endTimestamp
Td,R,N,V_groupingConfidence
Td,R,N,V_interpointDistance
Td,R,N,V_lineError
Td,R,N,V_lineOrientationAngle
Td,R,N,V_startTimestamp
Td,R,N,V_subwordGestureEndingSpeedRange
Td,R,N,V_subwordGestureSpeedThreshold
Td,R,N,V_support
Td,R,N,V_transitionTime
Td,R,V_stemWidth
Td,V_score
Tf,N,V_spacing
Tf,N,V_unitScale
Ti,D,N
Ti,N
Ti,N,V_autoCapitalizationMode
Ti,N,V_autoCorrectionMode
Ti,N,V_contentType
Ti,N,V_recognitionMode
Ti,N,V_recognitionType
Ti,N,V_recognizerContentType
Ti,N,V_recognizerRecognitionMode
Ti,R,N
Ti,R,N,V_autoCorrectionMode
Ti,R,N,V_contentType
Ti,R,N,V_contentTypeForNoSpaceRecognition
Ti,R,N,V_mode
Ti,R,N,V_recognitionMode
Ti,R,V_endEndpointType
Ti,R,V_startEndpointType
Tq,D,N
Tq,N,S_setStatus:
Tq,N,S_setStatus:,V_status
Tq,N,V_gestureType
Tq,N,V_maxResultCount
Tq,N,V_originalWritingDirectionIndex
Tq,N,V_patternType
Tq,N,V_recognitionEnvironment
Tq,R,N
Tq,R,N,V_ancestorIdentifier
Tq,R,N,V_blankIndex
Tq,R,N,V_classification
Tq,R,N,V_classificationAsNonText
Tq,R,N,V_contextMaxStrokes
Tq,R,N,V_cosAlphaFeatureIndex
Tq,R,N,V_cosAngleFeatureIndex
Tq,R,N,V_distanceFeatureIndex
Tq,R,N,V_gapFeatureIndex
Tq,R,N,V_lastCharacterLevelPosition
Tq,R,N,V_maxInputWidth
Tq,R,N,V_maxNumberOfInputStrokes
Tq,R,N,V_maxPointsPerStroke
Tq,R,N,V_minPointsPerStroke
Tq,R,N,V_mode
Tq,R,N,V_modelDecoderSize
Tq,R,N,V_numInputFeatures
Tq,R,N,V_numOutputClasses
Tq,R,N,V_numberOfSegments
Tq,R,N,V_numberOfSubstrokes
Tq,R,N,V_pointIndex
Tq,R,N,V_pseudospaceIndex
Tq,R,N,V_recognitionMaxStrokes
Tq,R,N,V_resultLevel
Tq,R,N,V_resultType
Tq,R,N,V_segmentGroupIndex
Tq,R,N,V_sequenceCompression
Tq,R,N,V_sessionMode
Tq,R,N,V_sessionResultVersion
Tq,R,N,V_sessionVersion
Tq,R,N,V_sinAlphaFeatureIndex
Tq,R,N,V_sinAngleFeatureIndex
Tq,R,N,V_spaceIndex
Tq,R,N,V_strokeGroupType
Tq,R,N,V_strokeGroupingRequirement
Tq,R,N,V_strokeIndex
Tq,R,N,V_substrokeCount1
Tq,R,N,V_substrokeCount2
Tq,R,N,V_substrokesCount
Tq,R,N,V_textClassIndex
Tq,R,N,V_textContentLength
Tq,R,N,V_uniqueIdentifier
Tq,R,N,V_vertexCount
Tr^{CGPath=},R,N,V_estimatedBaseline
Tr^{_LXLexicon=},N,V_customLexicon
Tr^{_LXLexicon=},N,V_customPhraseLexicon
Tr^{_LXLexicon=},N,V_phraseLexicon
Tr^{_LXLexicon=},N,V_staticLexicon
T{?=ddddd},R,N,V_generationDuration
T{CGPoint=dd},N,V_coalescedCenter
T{CGPoint=dd},R,N,V_caretTipPoint
T{CGPoint=dd},R,N,V_firstStrokeOrigin
T{CGPoint=dd},R,V_center
T{CGPoint=dd},R,V_controlPoint
T{CGPoint=dd},R,V_endLocation
T{CGPoint=dd},R,V_lowerLeftPoint
T{CGPoint=dd},R,V_lowerRightPoint
T{CGPoint=dd},R,V_midpointLocation
T{CGPoint=dd},R,V_stemLocation
T{CGPoint=dd},R,V_upperLeftPoint
T{CGPoint=dd},R,V_upperRightPoint
T{CGPoint=dd},R,V_vertex1
T{CGPoint=dd},R,V_vertex2
T{CGPoint=dd},R,V_vertex3
T{CGRect={CGPoint=dd}{CGSize=dd}},D,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_contextBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_enlargedBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_frame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_groupBounds1
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_groupBounds2
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_normalizationContext
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_rotatedBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_segmentBounds
T{CGSize=dd},N
T{CGSize=dd},N,V_minimumDrawingSize
T{CGSize=dd},N,V_recognizerMinimumDrawingSize
T{CGSize=dd},R,V_size
T{CGVector=dd},N,V_strokeDeviation
T{CGVector=dd},N,V_writingOrientation
T{CGVector=dd},R,N
T{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}},N,V_drawing
T{CVNLPTextDecodingPruningPolicy=qBfI},N,V_decodingPruningPolicy
T{_NSRange=QQ},D,N
T{_NSRange=QQ},N,V__storedAffectedRange
T{_NSRange=QQ},R,N,V_activePreviewRange
T{_NSRange=QQ},R,N,V_affectedRange
T{_NSRange=QQ},R,N,V_referenceSubstringRange
T{_NSRange=QQ},R,N,V_selectedTextRange
T{_NSRange=QQ},R,N,V_strokeCoveredTextRange
T{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}},N,V_cachedResults
T{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}},N,V_signatureUniChar
T{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}},N,V_characterIDMap
T{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}},N,V_strokeMaxPenalties
T{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}},R,N,V_strokeGroup
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_controlPoints
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_points
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_prevPoints
T{vector<std::map<long, long>, std::allocator<std::map<long, long>>>=^v^v{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>=^v}},R,N,V__resampledDrawingPointMap
URLByAppendingPathComponent:
URLWithString:
UTF8String
UUID
UUIDString
_CHStrokeID2HeatmapItemID
_CJKPairedPunctuationsCharSet
__activeTasks
__activeVisualizationIDs
__activeVisualizationsByID
__changeCoalescingIndex
__changeObservers
__charSetRulesQueue
__connection
__cornerDetector
__cornerIndexSet
__correctionRecognizersByLocalesKey
__directionChangeCornerIndexes
__enabledVisualizationIDs
__errorsByLocale
__hasUnprocessedChanges
__highResponsivenessQueue
__inputDrawingClients
__latestTextInputTargets
__queryActive
__recognitionResultsByGroupID
__recognizersByLocaleID
__recognizersQueue
__registeredAsChangeObserver
__registeredAsInputDrawingsClient
__resampledDrawingPointMap
__servesBackgroundIndexation
__sessionQueue
__shapeRecognizer
__shouldForceFastGrouping
__shouldUseCachedHasCompleteRecognitionResults
__storedAffectedRange
__strawSize
__strokeGroupIndexByAncestorID
__strokeProviderDrawn
__taskQueueQoSClass
__tasksWorkQueueBackground
__tasksWorkQueueForeground
__textCorrectionResultsByGroupID
__textRecognitionLocales
__textRecognizer
__textResult
__tokenizedTextResultsByLocale
__transcriptionCapability
_accumulatedTimeDifferences:
_activationMatrixFromInferenceCache:forDrawing:outStrokeEndings:
_activations
_activeCharacterSet
_activeCharacterSetPerLocale
_activePreviewRange
_activeRecognitionInsight
_activeStrokeGroupAncestorIdentifiers
_activeTasks
_activeTextInputQuery
_activeVisualizationIDs
_activeVisualizationsByID
_addAlternativeCandidatesForTokenizedResult:
_addEdgesFromCandidates:toEdges:referenceEdge:network:consumedSegmentCount:numSubstrokes:
_adjustCandidatesForChinesePunctuation:segmentDrawing:completeDrawing:
_adjustCandidatesForConfusableCharacters:
_adjustCandidatesForRomanPunctuation:segmentDrawing:
_adjustResultsForConfusableCharacters:
_adjustSupportForContainerClassificationByAddingStroke:consistingOfSubstrokes:
_adjustSupportForLineClassificationByAddingStroke:consistingOfSubstrokes:
_affectedRange
_affectedRangeByAdjustingForProtectedCharacters:
_affectedRangeByAdjustingToTokensIfNeeded:allowSubtoken:didExpand:
_affectedRangeByRefiningShapeBasedGesture:resultType:drawing:targetContentInfo:
_affectedRangeByRemovingTerminatingNewLines:
_agglomerativeClusteringUsingInitialClusters:distanceMetric:maxDistanceThreshold:shouldCancel:
_allowedCharacters
_alphaNumericCharSet
_alternativeInterpretationsForString:
_ancestorIdentifier
_applySentenceTransliterationCandidates:codesLen:codesMax:
_applyStrictGroupingParameters
_applyTransliterationAndSyntheticCandidates:
_area
_arithmeticOperatorCharSet
_aspectRatioWeight
_attributedStringFromString:withColor:font:paragraphStyle:
_autoCapitalizationMode
_autoCorrectionMode
_autoLineBreakAreaWidthFactor
_autoLineBreakDualBreakVerticalDistance
_autoLineBreakEnabled
_autoLineBreakMinVerticalDistance
_averageAngleAndReliabilityForStrokeGroup:
_averageInterStrokeGroupDistanceForSortedStrokeGroups:outStdDev:
_averageStrokeDeviation
_averageTokenRecognitionScoreInTranscriptionPath:
_averageVectorFromCoalescedSubstrokes:toSubstroke:withOrientation:strokeRef:strokeDest:
_averageWritingOrientation
_backwardLookingCharacterSet
_blankIndex
_boundingBoxesOfStrokesInGroup:rotatedAroundPoint:byAngle:
_cacheKeyForLocales:
_cachedActivationMatrices
_cachedClutterFilter
_cachedDrawing
_cachedFastGroupingRecognitionResult
_cachedFastGroupingResult
_cachedResults
_cachedStrokeEndings
_cachingWithMatchingStrokeRange:drawing:
_calculateBestTranscriptionPaths:scores:fromTokenizedResult:pathCount:history:skipLMRescoring:
_calculateJointWordLMScoreForString:wordRanges:wordIDs:patternEntries:history:historyLength:
_calculateJointWordLMScoreForTokenPath:tokenizedResult:history:historyLength:pathTranscription:
_cancelAllHighResponsivenessTasks
_cancelOngoingRequests
_cancelled
_candidateLatticePruningThresholdForEdgeType:
_capitalizationToSplit
_caretTipPoint
_caseMatchingOnly
_changeCoalescingIndex
_changeObservers
_changeableColumnCountUpdatedResult:options:
_changeableCount
_charSetRulesQueue
_characterCountInToken:filteringCharacterSet:filteredCharacterCount:
_characterLanguageModel
_characterRectsInReferenceSubstring
_characterReplacements
_characterSet
_characterTransliterations
_cjkDynamicLexicon
_cjkStaticLexicon
_classCounts
_classForVisualizationIdentifier:
_classifiableDrawing
_classificationAsNonText
_classifyEdgeDrawingsFromContexts:allEdges:segmentationNetwork:candidateNetwork:cachedEdgeSet:completeDrawing:allowSmallerFinalBatch:shouldCancel:
_classifyStrokesInDrawing:outTextStrokeProbabilities:cancellationBlock:
_cleanupCachedRecognizers
_closingBracketCharacters
_closingQuoteCharacters
_clutterFilter
_coalescedCenter
_coalescedLastSubstrokes
_codeMap
_combinedScore
_commonJapaneseSymbols
_computeLocalFrameWithLeftBounds:rightBounds:
_configuration
_confusion
_connection
_consumableStrokesCharSet
_containsCommittedStrokes
_containsDotCharSet
_containsTwoDotsCharSet
_contentType
_contentTypeForNoSpaceRecognition
_contextBounds
_contextBoundsForTargetContentInfo:
_contextInvariantCharacterSet
_contextMaxStrokes
_contextResultForContextStrokes:outStrokeGroupingResult:outStrokeClassificationResult:shouldCancel:
_contextTokenIDsFromHistory:maxCharacterLength:maxTokenCount:
_contextualTextResultsFromCachedResultUsingContextStrokes:shouldCancel:
_controlPoint
_controlPoints
_convertToLowercase
_convexHull
_cornerLine
_correction
_correctionAngles
_correctionRecognizersByLocalesKey
_correctionResult
_cosAlphaFeatureIndex
_cosAngleFeatureIndex
_createCandidateNetworkFromSegmentationNetwork:segmentGroup:drawing:boundsAtNode:matchingStrokeRange:sortedSegmentIndexes:shouldCancel:
_createClippedPolygonForPolygon:clippingLine:clippedPolygonVertexCount:
_createNetworkTruncatedPrefixStringUsingPrefix:fullHistoryStringLength:hasLexiconCursor:prefixStringLength:hasComplexChars:activeHistoryRange:
_createdStrokeGroups
_currencySymbols
_cursorPositionForPoint:referenceString:referenceCharRects:searchingRange:
_curvature
_customLexicon
_customPhraseLexicon
_dataDetectorConfiguration
_dataDetectorResult
_dataDetectorResultsForSessionResult:
_dataSource
_dataSource:inputTargetContentInfoForStrokeGroups:groupingManager:
_dataSource:textInputTargetForStrokeGroup:simultaneousGroups:
_dateTimeEndLetterCharSet
_dateTimeSeparatorCharSet
_decodeLocale:supportedLanguage:supportedScript:
_decodingPruningPolicy
_defaultDeviationVector
_defaultLegacyPunctuationResultsWithStrokeCount:
_defaultOrientationVector
_defaultProcessor
_defaultPunctuationResultWithStrokeCount:
_defaultPunctuationStringsOutputScores:maxCandidateCount:
_delegate
_deletedStrokeGroups
_detectCorners
_detectDirectionalChanges
_digitCharSet
_digitEndPunctuationCharSet
_digitStartPunctuationCharSet
_directionChangeCornerIndexes
_directionChangeCount
_directionalFeaturesInputName
_distMean
_distStd
_distance:p1:p2:
_distanceFeatureIndex
_drawCutPoints:inputDrawing:inContext:transform:
_drawGroupBrackgroundInRect:context:
_drawing
_drawingAnchorPointFromRecognizerOptions:
_drawingCanvasSizeForLatestStrokeProviderSnapshot
_drawingTarget
_edgeIndex
_editingGestureResultForDrawing:originalDrawing:lastStroke:targetContentInfo:previousResult:
_effectiveMaxRecognitionResultCount
_emailPunctuationCharSet
_emissionHandler
_emitInterpolatedPoints
_emoticonBottomCharSet
_emoticonMiddleCharSet
_emoticonTopCharSet
_enableCachingIfAvailable
_enableGen2CharacterLMIfAvailable
_enableGen2ModelIfAvailable
_enableStrokeReordering
_enabledVisualizationIDs
_encodedStrokeIdentifier
_encodedStrokeProviderVersion
_endCutPoint
_endEndpointType
_endLocation
_endOfSentencePunctuationCharSet
_endOfWordPunctuationCharSet
_endTimestamp
_enumerateDetectedRangesForContextualTextResults:usingBlock:
_enumerateMatchesForStrokeGroupResult:locales:queryString:usingBlock:
_equationProcessor
_error
_errorModel
_estimateSplitScore:withTextInputTargets:arcLengthsByStrokeIdentifier:
_estimatedBaseline
_expandCodePoints
_expectedMaxDotCount:
_expectedMaxStrokeCount:
_expectedMinStrokeCount:
_expectedSubstrokesPerLine
_extendedConversionCandidates:withPhraseCandidates:
_extractFeaturesFromDrawing:inputName:interpointDistance:initialVectorAnchorPoint:normalizeFeatures:padFeatures:error:
_extractFeaturesFromDrawing:numStrokes:numPoints:error:
_extractInputMaskFromDrawing:numStrokes:numPoints:error:
_fallbackStructuredResultForDrawing:string:score:firstTokenHasPrecedingSpacePreference:
_fastGroupingClusters
_featureCounts
_filterClusters:usingContextStrokes:clusteredStrokes:
_filterNonHumanFriendlyCandidates:
_findMatchingTokenPathInResult:initialTokenLocation:queryString:fromIndex:coveredStrokeIndexes:reverseMatchedTokens:
_findMostProbableTextInputTarget:forGroupBounds:outOverlap:outDistance:
_firstStrokeIdentifier
_firstStrokeOrigin
_flagsFilter
_forceRecognitionStrokeGroupIdentifiers
_formatGrammarFST
_forwardLookingCharacterSet
_foundItems
_frame
_fullWidthPunctuationThatExpectsUppercaseAfter
_fullWordsOnly
_gapFeatureIndex
_generationDuration
_gestureOnBlankAreaResultForDrawing:originalDrawing:targetContentInfo:
_gestureType
_getMergingEndOfLineCost:mergingEndOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:refSubstrokeIndex:
_getMergingLowerBoundCost:withStrokeBounds:toLineGroup:
_getOrientedBounds:length:forStroke:atWritingDirectionIndex:inGroup:
_getPositionalEncodings:error:
_getStringForConfigurationValues:numPoints:
_greedyCombinationOfGroupingResults:stableStrokeIdentifiers:withCancellationBlock:
_groupBounds1
_groupBounds2
_groupingConfidence
_groupingContextSize
_groupingMergingCostThresh
_groupingMergingEndCostLowThresh
_groupingResultsByStrategyIdentifier
_groupingSimilarCostThresh
_groupsFromClusterResult:strokes:strokeClassificationsByStrokeIdentifier:
_hasBeenSubmitted
_hasPendingRecognitionTasks
_hasUnprocessedChanges
_heatMap
_heatmapItemID2CHStrokeID
_highResponsivenessQueue
_highestDirectionChangeCount
_historyStringFromRecognizerOptions:
_horizontalDistanceBarrier
_horizontalDistanceWeight
_icuTransliterator
_improvedSingleCharacterOneColumnTextResult:targetContentInfo:insertionRange:locale:affectedRange:
_inappropriateWordIndexes
_indexableContent
_indexableTextRepresentation
_inferenceCacheFromRecognizerOptions:
_initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:autoCapitalizationMode:autoCorrectionMode:isSingleLine:lastCharacterLevelPosition:protectedCharacterIndexes:
_initialContextRectFromRecognizerOptions:
_initialTextInputTargets
_initializeMergedResultPostProcessor
_initializePostProcessor
_initializeTextDecoder
_inputDrawing
_inputDrawingClients
_inputDrawingCutPoints
_inputNames
_inputResult
_inputStrokeIdentifiers
_inputTarget
_inputTargetIdentifier
_interpointDistance
_invalidateCachedResults
_isActiveVisualizationForIdentifier:
_isEndOfStroke
_isGibberishToken:
_isGroupableNonTextForStrokeClassification:
_isHighResponsivenessTask
_isInNoSpaceRegionNextToTextFromTargetContentInfo:drawingBounds:localTypedContextBounds:insertionRange:outIsWhiteSpace:outDistance:outSpaceDistanceThreshold:
_isInappropriateString:withLexicon:
_isInappropriateString:withTrie:
_isInappropriateTokenID:withLexicon:
_isInlineContinuousMode
_isLine:usingThreshold:p1:p2:
_isLocaleSupported:
_isMatchSeparatorBeforeToken:atLocation:inResult:queryString:fromIndex:matchedLength:
_isMatchStringForToken:queryString:fromIndex:matchedLength:
_isReadyToProcessChanges
_isRemoteRecognition
_isShapeBasedRangeRefinementSupportedForResultType:
_isSingleLine
_isSplitAcceptable:arcLengthsByStrokeIdentifier:outRejectionReason:
_isTextReplacement
_isTokenStringMatchingQuery:allowPartialMatching:
_isTransitionValidFromStatus:toStatus:
_itemStableIdentifier
_koreanParticlesCharSet
_labelBoundsForAnchorPoint:
_language
_languageFitnessByLocale
_lastCharacterLevelPosition
_lastCharacterSegmentCount
_lastCharacterSegmentIndexes
_lastDrawing
_lastDrawings
_lastPoint
_lastProcessedStrokeProviderVersion
_lastProcessedTime
_lastRecognitionResult
_lastStroke
_lastStrokeIdentifier
_lastSubstrokeCoalescedWithOverlappingSubstrokes:strokeDeviation:
_lastSubstrokeIndexBeforeMerge
_latestStrokeProvider
_latestStrokeProviderVisibleStrokes
_latestTextInputTargets
_learningDictionaryURL
_leftContext
_leftTransitionUpperBound
_leftTransitionWeight
_legacyTextRecognitionResultForTranscriptionIndex:
_legacyTextRecognitionResultsForDrawing:options:shouldCancel:
_lexiconSkipCharSet
_lineBreakVerticalBarGestureEnabled
_lineError
_lineOrientationAngle
_lineWidth
_lmRescoringWeightForPath:
_lmVocabulary
_loadMecabraIfNeeded
_locales
_logResultsIfAppropriateWithStrokeProvider:
_lowerRightPoint
_lowercaseCharSet
_markStrokeGroupsAsActive:
_maxCandidateCount
_maxDistanceThresholdForTokenizationLevel:
_maxInputWidth
_maxNumberOfInputStrokes
_maxPointsPerStroke
_maxRecognitionResultCount
_mecabra
_mecabraContextRef
_mergeEndBelowModifier
_mergeEndDxCostCoeff
_mergeEndDyCostCoeff
_mergeEndLeftModifier
_mergeMiddleBelowModifier
_mergeMiddleDxCostCoeff
_mergeMiddleDyCostCoeff
_mergedResultPostProcessor
_middlePunctuationCharSet
_midpointLocation
_minArcLengthScore
_minLineHeightScore
_minPointsPerStroke
_minSizeForReliableRescalingFromRecognizerOptions:
_minSubstrokesForSplit
_minimumDrawingSize
_minimumSignificantSegmentLength
_mininmumPathCount
_mode
_model
_modelConfigurationsNumPoints
_modelConfigurationsNumStrokes
_modelDecoderSize
_modelKey
_modelName
_modelSmallestConfig
_modelUseCount
_modifiedTextResult:replacingString:
_mutableTokenRows
_network
_newBaselinePathForStrokeGroup:outFirstPoint:strokeProvider:
_newColorForStroke:inGroup:
_newGroupsDefaultToActive
_newRecognitionSessionTaskWithStrokeGroupingRequirement:isHighResponsivenessTask:strokeGroupingOnly:subjectStrokeIdentifiers:partialResultBlock:
_newTextLineStrokeGroupWithStroke:withSubstrokePlacements:reusableIDRemovedGroups:
_nextFIFO
_nextRecognitionInsightRequest
_nodeIndexes
_nonSpaceSeparatorCharSet
_nontextCandidates
_normalizationContext
_normalizeFeatures
_normalizeString:
_normalizeSuffixes:
_normalizedBoundsForWritingDirectionSortedStrokes:strokeWritingOrientations:firstStrokeDeviation:originalDrawing:rotatedSortedStrokes:
_normalizedDrawing
_normalizedLanguageFitness:
_notifyObserversWithBlock:
_numInputFeatures
_numOutputClasses
_numberOfSegments
_numberOfSubstrokes
_numeralEndLetterCharSet
_openingBracketCharacters
_openingQuoteCharacters
_options
_orderedStrokeIdentifiers
_orderedStrokesGroup1
_orderedStrokesGroup2
_orientationTransformForStrokeBounds:atWritingDirectionIndex:inGroup:
_originalBoundingBoxes
_originalDrawing
_originalRowFromRow:
_originalWritingDirectionIndex
_outputNames
_outputResult
_ovsStringChecker
_ovsTrie
_parametersOverride
_partialRecognitionResult
_partialResultBlock
_path
_pathDistance:p1:p2:
_pathPoints
_patternFST
_patternType
_penalizeCandidatesForRomanPunctuation:punctuationStrokeCount:
_phraseLexicon
_pointIndex
_postProcessCorners:corners:straws:
_postProcessingFST
_postProcessor
_postprocessingMergedRecognitionResult:options:
_precedingLineBreakCountForAutoLineBreak:targetContentInfo:
_precedingLineBreaks
_precedingSpaceBehaviorFromRecognizerOptions:
_precedingSpaceBehaviorFromTargetContentInfo:drawingBounds:localTypedContextBounds:insertionRange:lastCharacterBefore:
_preferCharacterLevel
_preferredCoalescingInterval
_preferredLocale
_preferredLocales
_preferredUpdatesInterval
_prefixCapitalizationExceptionCharSet
_prefixQueryResultsForSessionResult:
_presentableTextRepresentation
_prevPoints
_preventLeftoverCharsInSubwordGestures
_priority
_processPendingStrokeChangesIfAvailable
_processingQueue
_promoteKanaConversion
_properties
_protectedCharacterIndexes
_pseudospaceIndex
_punctuationThatExpectsUppercaseAfter
_punctuationThatNeedSpaceCleanup
_queryActive
_queryDelimiters
_queryResult
_queryResultForTokens:groupResult:candidateGroup:
_queryString
_queue
_radicalClusterFST
_rareWordIndexes
_rawPath
_recognitionEnvironment
_recognitionError
_recognitionLocales
_recognitionMaxStrokes
_recognitionMode
_recognitionModel
_recognitionQueue
_recognitionRequestWithDrawing:options:
_recognitionResultForRequest:error:
_recognitionResultsByGroupID
_recognitionResultsByLocale
_recognitionResultsForMultipleCharacterDrawing:segmentGroup:options:shouldCancel:
_recognitionResultsForNonTextStrokeGroup:groupingManager:
_recognitionScore
_recognitionSession
_recognitionSessionResultOnDemandUsingContextStrokes:shouldCancel:
_recognitionType
_recognizerActiveCharacterSet
_recognizerContentType
_recognizerLocale
_recognizerMaxRecognitionResultCount
_recognizerMinimumDrawingSize
_recognizerOptions
_recognizerRecognitionMode
_recognizersByLocaleID
_recognizersQueue
_referenceSubstring
_referenceSubstringRange
_refineCandidates:withAllowedCandidateCodes:
_refineChineseCharacterCandidates:drawing:
_refinedGestureResultForPreviousResult:originalDrawing:lastStroke:targetContentInfo:
_registeredAsChangeObserver
_registeredAsInputDrawingsClient
_relativeRangeOfPreviousCharacterFromTargetContentInfo:absoluteInsertionRange:
_reloadEngineAndResources
_removeAdjacentCorners:corners:straws:
_removeColinearCorners:usingDistanceThreshold:usingLowerThreshold:usingUpperThreshold:corners:
_removeColinearCorners:usingThreshold:corners:
_removeOVSResults:withHistory:
_removeSupportForStrokeIdentifier:
_removeVisualizationForIdentifier:
_requiredLeftContext
_requiredRightContext
_requiresLexiconMatch
_resampleDrawing:outputPointMap:
_resampledDrawing
_resampledDrawingPointMap
_resamplingDistance:
_rescoreCandidatesWithLanguageModel:history:
_resolveResampledDirectionChangePointIndexes:
_resolvedStrokeIndexes:segmentGroup:segmentOffset:substrokeCount:
_resourcePath
_resultDrawn
_resultLevel
_resultType
_resultUsingNextGenerationPipelineWithDrawing:options:
_resultUsingSegmentAndDecodePipelineWithDrawing:insight:options:shouldCancel:
_resultsDebugDescriptionIntoGroupsArray:groupHeaderBlock:
_rotatedBounds
_rotation
_saveInputDrawings
_savedHash
_scaleFactorForBoundsHeight:
_scheduleProcessStrokeProviderChangesImmediately:
_score
_scoreMeanAndStdForToken:forLocale:
_secondaryStaticLexicon
_segmentBounds
_segmentGroupIndex
_segmentID
_segments
_selectedTextRange
_selfLoopPunctuationCharSet
_sentenceStartPunctuationInSpanish
_sequence
_sequenceCompression
_servesBackgroundIndexation
_sessionLastResult
_sessionMode
_sessionQueue
_sessionResultVersion
_setAvailableItems:
_setCachedFastGroupingRecognitionResult:
_setConfiguration:
_setHasUnprocessedChanges:
_setIndexableContent:
_setLastRecognitionResult:
_setLatestStrokeProvider:
_setLatestTextInputTargets:
_setOutputResult:
_setPartialRecognitionResult:
_setSessionVersion:
_setShouldForceFastGrouping:
_setStatus:
_setStrokeGroupItems:
_setStrokeGroupItemsByID:
_setSupportForStrokeIdentifier:support:
_setTextRecognitionLocales:
_setTranscribedTitle:strokeIdentifiers:
_setupExecutionQueuesForMode:
_setupRecognitionInsightRecording
_setupXPCConnectionIfNeeded
_shapeRecognizer
_shouldAddAlternatives
_shouldAdjustDeviationOfSmallGroups
_shouldAutoCapitalize
_shouldAutoCorrect
_shouldCoalesceLastSubstrokes
_shouldCreatePseudoTokens
_shouldExpandToFullTokensForScriptInString:withRange:shouldExpandStart:shouldExpandEnd:
_shouldForceFastGrouping
_shouldKeepAlternativeLengths
_shouldKeepDuplicateTokenIDs
_shouldKeepOriginalSpelling
_shouldKeepOutOfLexiconAlternatives
_shouldKeepOutOfPatternCandidates
_shouldKeepSubstrings
_shouldLimitDefaultWritingOrientationDeviation
_shouldReturnDefaultResultsForDrawing:
_shouldUseDynamicSampling
_shouldUseStrokeReordering
_shouldUseTextReplacements
_signatureUniChar
_simpleDrawingForStrokeGroup:originalDrawing:orderedStrokeIDs:
_sinAlphaFeatureIndex
_sinAngleFeatureIndex
_size
_sortedIndexesForSegmentGroup:drawing:
_sortedStrokeGroupsByWritingOrientationTextOnly:
_spaceIndex
_spacing
_spellChecker
_spellServer
_splitCostThreshold
_splitMaxNaturalIndexDiffThreshold
_splitMinimumStrokeCount
_startCursorForContentTypes
_startCutPoint
_startEndpointType
_startLocation
_startNodes
_startPunctuationCharSet
_stateType
_staticLexicon
_statusReportingEnabled
_stemLocation
_stemWidth
_storedAffectedRange
_strategyIdentifier
_strawSize
_stringCodeMap
_stringForRecognitionLanguage:
_stringForRecognitionScript:
_stringForTokens:
_stringNormalizationFunction
_strokeClassificationModel
_strokeClassificationResult
_strokeClassificationsByStrokeIdentifier
_strokeCoveredTextRange
_strokeDeviation
_strokeDeviationCapCoeff
_strokeGroup
_strokeGroup1
_strokeGroup2
_strokeGroupClusters
_strokeGroupConfidenceForSortedSubstrokes:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:averageWritingOrientation:averageStrokeDeviation:
_strokeGroupFromFastGroupingCluster:strokeProvider:strategyIdentifier:
_strokeGroupFromSortedStrokeIdentifiers:strokeProvider:strategyIdentifier:
_strokeGroupIdentifier
_strokeGroupIndexByAncestorID
_strokeGroupItems
_strokeGroupItemsByID
_strokeGroupStableIdentifier
_strokeGroupType
_strokeGroupWithStrokes:orderedStrokeIdentifiers:previousGroups:shouldSearchForStableIdentifier:
_strokeGroupingOnly
_strokeGroupingRequirement
_strokeGroupingResult
_strokeGroups
_strokeGroupsContainingStrokeIdentifiers:
_strokeGroupsFromFastGroupingClusters:clusteredStrokes:strokeProvider:strategyIdentifier:clutterFilter:
_strokeGroupsInProximityOfSubjectStrokeGroups:clusteredStrokeGroups:
_strokeGroupsSortedByWritingOrientation
_strokeGroupsSortedTopBottomLeftRight
_strokeHalfwayCorner:p1:p2:
_strokeIdentifersFromStrokes:
_strokeIdentifier
_strokeIdentifiers
_strokeIdentifiersForContextStrokes:clusters:clusteredStrokes:tokenizationLevel:fastGroupingResult:
_strokeIdentifiersFromCachedResultUsingContextStrokes:tokenizationLevel:
_strokeIdentifiersInGroupsContainingStrokeIdentifiers:
_strokeIdentifiersInProximalGroupsForStrokeIdentifiers:
_strokeIdentifiersInWordsContainingStrokeIdentifiers:
_strokeIndex
_strokeIndexSetsFromTokenRow:
_strokeIndexes
_strokeMaxPenalties
_strokeProviderDrawn
_strokeProviderVersion
_strokes
_subjectStrokeIdentifiers
_substroke
_substrokeCount1
_substrokeCount2
_substrokeCountForStrokes:substrokesByStrokeIdentifier:
_substrokePlacementsByStrokeIdentifier
_substrokesByStrokeIdentifier
_substrokesCount
_subwordGestureSpeedThreshold
_support
_supportByStrokeIdentifier
_supportsAutoLineBreaks
_sutherlandHodgmanClipForSubjectPolygon:usingClipPolygon:
_symbols
_symbolsRequiringSpaceBeforeInFrench
_symmetricQuoteCharacters
_targetContentInfo
_targetFitnessWeight
_taskQueueQoSClass
_tasksWorkQueueBackground
_tasksWorkQueueForeground
_teardownXPCConnection
_terminatingSpecialCharacter
_textAfterFromRecognizerOptions:
_textAfterStringForTargetContentInfo:insertionRange:
_textBeforeStringForTargetContentInfo:insertionRange:
_textContentLength
_textCorrectionResult
_textCorrectionResultForStrokeGroup:groupingManager:targetContentInfo:locales:previousCorrectionResult:
_textDecoder
_textInputTarget
_textInputTargets
_textInputTargetsDataSource
_textInsertionResultForDrawing:targetContentInfo:originalDrawing:localTypedContextBounds:normalizedDrawingScaleFactor:insertionRange:
_textLineStrokeGroupByAddingStroke:withSubstrokePlacements:intoStrokeGroup:mergingEndSubgroup:bestStrokeMergeEnd:
_textOnly
_textRecognitionLocales
_textRecognitionResultsForTextStrokeGroup:groupingManager:
_textReplacementLowercasedKeyMapping
_textReplacementResultForLegacyRecognitionResult:
_textReplacements
_textResult
_textResultWithLexiconExpansionFromCandidateNetwork:history:prefix:activeHistoryRange:rootStaticCursor:rootCustomCursor:rootPatternCursor:segmentGroup:maxRecognitionResultCount:precedingSpaceBehavior:shouldPerformNoSpaceRecognition:totalStrokeCount:totalSubstrokeCount:shouldCancel:
_textResultWithNetworkComposeFromCandidateNetwork:segmentGroup:drawing:maxRecognitionResultCount:history:totalStrokeCount:totalSubstrokeCount:
_textResults
_textStrokeGroupClusters
_textStrokeGroups
_textStrokeGroupsSortedByWritingOrientation
_textStrokeIdentifiers
_tileIndexForYPosition:tileHeight:
_timeSortedStrokesForIdentifiers:
_titleStrokeIdentifiers
_tokenColumns
_tokenFromLegacyResult:wordIndex:strokeSet:substrokeCount:
_tokenIDForUNKCharacterString:
_tokenRows
_tokenizedTextRecognitionResultForDrawing:writingStatistics:options:shouldCancel:
_tokenizedTextResultForDrawing:usingRecognizer:isRemoteRecognizer:locale:strokeLimit:recognitionError:
_tokenizedTextResultFromResults:segmentGroup:offsetSegment:decodedStrokeSets:spaceBehavior:
_tokenizedTextResultFromTextDecodingResult:forceSingleCharacterMode:options:strokeEndings:drawing:firstTokenHasPrecedingSpacePreference:
_tokenizedTextResultsByLocale
_tokensUsingLMTokenizerForString:wordRanges:nonWordPatterns:outTokenIDs:
_totalDuration
_trailingSeparator
_transcribedTitle
_transcriptionCapability
_transcriptionPathScores
_transcriptionPaths
_transformForInputDrawingBounds:referenceBounds:viewBounds:
_transformedBoundingBoxes
_transitionTimeUpperBound
_transitionTimeWeight
_transliterateSentences
_transliterationMap
_transliterationVariantMap
_transliterationVariantsForString:
_uniqueIdentifier
_unitScale
_unlikelyHasLatinContents
_unloadEngineAndResources
_updateForRecognitionSessionResultChangeIfNeeded
_updateGroups:createdGroups:deletedGroups:forAddedStroke:substrokePlacementsByStrokeIdentifier:reusableIDRemovedGroups:trySplit:cancellationBlock:
_updateInstalledVisualizations
_updateKnownStrokeGroupIndexes
_updateLatestStrokeProviderVisibleStrokes
_updatePrecedingAndTrailingSeparatorsForTopCandidate:history:textAfter:locale:outTrailingSeparator:inFirstTokenHasPrecedingSpace:outFirstTokenHasPrecedingSpace:
_updateResults:string:score:recognitionScore:lexicalEntry:patternEntry:isInappropriateWord:wordID:wordStrokeSet:
_updateSessionRegistration
_updateTokenInappropriateFlag:
_updateWordLanguageModel:
_updatedTokenFromToken:withString:
_upperRightPoint
_uppercaseCharSet
_urlProcessor
_urlPunctuationCharSet
_usernameProcessor
_validSuffixes
_validateLastRecognitionResult:visibleStrokeIdentifiers:
_vertex1
_vertex2
_vertex3
_vertexCount
_verticalBarGestureCloseToTextForDrawing:originalDrawing:targetContentInfo:localTypedContextBounds:
_verticalBarGestureOnBlankAreaResultForDrawing:originalDrawing:targetContentInfo:
_verticalDistanceWeight
_verticalOffsetForBoundsHeight:andScaleFactor:
_vertices
_width
_widthAlternativeCharacterSet
_wordClustersForInitialClusters:
_wordCombinedScores
_wordIDs
_wordLanguageModel
_wordLexicalEntries
_wordPatternEntries
_wordRanges
_wordRecognitionScores
_writingDirectionMinCoeff
_writingDirectionSortedStrokeIdentifiers
_writingDirectionSortedStrokeIdentifiersFromSubstrokes:localWritingOrientations:
_writingDirectionSortedSubstrokes
_writingDirectionUpperBound
_writingDirectionWeight
_writingOrientation
absoluteLocationFromRelativeLocation:
absoluteMaxStrokeCountPerRequest
absoluteString
activations
activeCharacterSet
activeCharacterSetPerLocale
activePreviewRange
activeStrokeGroupAncestorIdentifiers
activeTextInputQuery
addCharactersInRange:
addCharactersInString:
addEndTime:
addEntriesFromDictionary:
addIndex:
addIndexes:
addIndexesInRange:
addNodeIndex:withStateType:
addObject:
addObjectsFromArray:
addPoint:
addStartTime:
addTokenRowWithTokens:
adjustColumns
adjustSupportByAddingStroke:consistingOfSubstrokes:
adjustSupportByRemovingStrokeIdentifier:
affectedRange
alignmentScore
allNonLatinModelNames
allObjects
allResultsDebugDescription
allResultsDebugDescriptionByGroup
allResultsDebugDescriptionWithGroupHeaderBlock:
allValues
allocWithZone:
allowedCharacters
alphaNumericCharSet
alphanumericCharacterSet
ancestorIdentifier
appendAttributedString:
appendDrawing:
appendFormat:
appendSegment:fromDrawing:
appendString:
appendToken:
appendTokenColumns:
applyCorrectionsAcrossToken:isFirstToken:contextBeforeToken:shouldCapitalizeGivenHistory:textReplacements:isSingleIsolatedCharacter:
applyCorrectionsOnSingleToken:isFirstToken:contextBeforeToken:shouldCapitalizeGivenHistory:textReplacements:isSingleIsolatedCharacter:allowSpellChecker:
applyLexiconCorrections:shouldCapitalizeWord:shouldSkipEntryCorrection:outBestTokenIndex:bestLexiconTokenScore:textReplacements:contextBeforeToken:allowSpellChecker:
applyTransform:toAllTokens:
arcLengthForStroke:
archivedDataWithRootObject:requiringSecureCoding:error:
areTokenRowsEquivalent:otherRow:
area
arithmeticOperatorCharSet
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
asciiProcessor
autoCapitalizationMode
autoCapitalizationModeDescription
autoCorrectionMode
autoCorrectionModeDescription
autoLineBreakAreaWidthFactor
autoLineBreakDualBreakVerticalDistance
autoLineBreakEnabled
autoLineBreakMinVerticalDistance
autoLineBreakRequireWeakCursor
autorelease
availableItems
availableRecognitionSessionStatusKeys
availableVisualizationIdentifiers
averageCharacterHeightEstimation:minChunkHeight:
averageStrokeDeviation
averageTokenRecognitionScoreForColumnRange:
averageWritingOrientation
backwardLookingCharacterSet
becomeCurrentWithPendingUnitCount:
bestPathsFromNetwork:pathCount:staticLexiconCursor:customLexiconCursor:patternCursor:history:activeHistoryRange:mecabraIDs:segmentGroup:precedingSpaceBehavior:effectiveContentType:totalStrokeCount:totalSubstrokeCount:
bestTranscriptionPathsForTokenizedResult:scores:history:
bitmapRepresentationForSize:
blankIndex
boolForKey:
boolValue
boundingBoxForDrawingSegmentFromCutPoint:toCutPoint:
boundingBoxFromSegmentID:toSegmentID:withSegments:withSourceDrawing:
boundingBoxOfPoints:rotatedAroundPoint:byAngle:
bounds
boundsDiagonal
boundsForStrokeIndex:
boundsForStrokeIndexes:
bytes
cStringUsingEncoding:
cacheActivationMatrix:strokeEndings:drawing:recognitionEngineCachingKey:
cacheTextResult:drawing:recognitionEngineCachingKey:
cachedDrawing
cachedResults
cancel
cancelAllActiveTasksBackground:foreground:
cancelOngoingRequests
cancelled
candidateAccepted:
candidates
capitalizationToSplit
capitalizedString
caretDirection
caretTipPoint
caseInsensitiveCompare:
caseMatchingOnly
category
center
centroidForStrokeIndexes:
ch_basicAlphabeticCharacterSet
ch_basicAlphanumericCharacterSet
ch_basicClosingParenthesesSet
ch_basicCyrillicCharacterSet
ch_basicOpeningParenthesesSet
ch_descriptionWithSeparator:filterBlock:
ch_emptyCharacterSet
ch_hasCharactersFromSets:
ch_hiraganaCharacterSet
ch_intersectsIndexSet:
ch_kanjiCharacterSet
ch_kanjiCompCharacterSet
ch_katakanaCharacterSet
ch_latinCharacterSet
ch_mappedArrayWithBlock:
ch_neutralQuotationMarkSet
ch_occurrencesOfCharactersInSet:maxCount:
ch_russianOnlyCharacterSet
ch_sentenceEndPunctuationCharacterSet
ch_sentenceStartPunctuationCharacterSet
ch_thaiExtraSpaceAfterSymbolsSet
ch_thaiMathSymbolsNeedingSpaceSet
changeableClassificationByRefinement:stroke:
changeableColumnCountUpdatedResultWithHistory:phraseLexicon:maxPhraseLength:
changeableTokenColumnCount
characterAtIndex:
characterCount
characterIDMap
characterIsMember:
characterLMLogProbabilityForString:characterLM:
characterLMLowerBoundLogProbability
characterLanguageModel
characterLevel
characterProbabilityOutputName
characterRectsInReferenceSubstring
characterReplacements
characterSet
characterSetForStrings:
characterSetWithCharactersInString:
characterSetWithRange:
characterTransliterations
characterType:
characterTypeFromString:
chatBubbleCandidateResultForDrawing:candidate:rejectionResult:
checkCharactersInString:outHasLatin:outHasCyrillic:
checkCharactersInTokenRow:outHasLatin:outHasCyrillic:
checkResourceIsReachableAndReturnError:
circumferenceRatioOfCircleFittedToPoints:circleCenter:circleRadius:
cjkDynamicLexicon
cjkStaticLexicon
class
classCounts
classifiableDrawing
classification
classificationAsNonText
classifyStrokes:outTextStrokeProbabilities:cancellationBlock:
cleanUpSpacesInToken:leftContext:inString:withQuoteCount:
clear
clearCache
clearCacheForKey:
clippedWritingOrientation:
closingBracketCharacters
closingQuoteCharacters
cloudCandidateResultForDrawing:candidate:rejectionResult:
clustersForStrokes:shouldMakeSingleCluster:
clutterFilter
clutterFilterByAddingStrokes:removingStrokeIdentifiers:affectedStrokeIdentifiers:
coalescedLastSubstrokes
codepointAtIndex:outRange:
codepointRangeAtIndex:
combineMultiLocaleResults:locales:topLocaleIndex:mergedResultPostprocessingBlock:changeableColumnCountBlock:
combinedScore
commonJapaneseSymbols
commonTopStrokeSetsWithResult:
compare:
compare:options:
compareDistanceInWritingSequenceOfStroke:andStroke:toReferenceStroke:
compareOrderOfStrokeWithIdentifier:toStrokeWithIdentifier:
compareStringForPhoneNumberCompatibility:with:
completedUnitCount
completionsForCandidate:candidateContext:prefix:option:
completionsForCandidate:prefix:option:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
computeEditPenalizationFromString:toReferenceString:withSuffix:withCaseSensitivity:withFirstLetterCaseSensitivity:withDiacriticSensitivity:withDiacriticsCharSet:withConsumableStrokesCharSet:outputSuffix:lexiconExtraCharacters:firstLetterCaseFlipped:
configuration
configurationKey
conformsToProtocol:
confusion
consumableStrokesCharSet
containerScore
containerSupportForPoints:withBounds:
containsCommittedStrokes
containsDotCharSet
containsIndex:
containsIndexes:
containsStartingTokenEquivalentToToken:
containsTwoDotsCharSet
containsValueForKey:
contentType
contentTypeForNoSpaceRecognition
contentTypesToPatternsMapping
contextBounds
contextInvariantCharacterSet
contextMaxStrokes
contextResults
contextStrokes
contextualResultsWithFullyCoveredStrokeGroups:partiallyCoveredStrokeGroups:drawingCanvasSize:
controlCharacterSet
controlPoint
controlPoints
convertToLowercase
convexHull
convexHullForPoints:
convexHullForStroke:
copy
copyWithZone:
cornerIndexes
cornerLine
correction
correctionAngles
correctionResult
correctionsForString:shouldUseErrorModel:forLocale:
cosAlphaFeatureIndex
cosAngleFeatureIndex
count
countByEnumeratingWithState:objects:count:
countSubstringsWithOptions:
countUnallowedCharactersInString:
countryCode
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDrawingForStrokes:cancellationBlock:
createPseudoTokensFromToken:
createRecognizerForLocale:sessionMode:remote:priority:
createRecognizerForLocales:sessionMode:remote:priority:
createTelemetryDictionary:nonTextRatio:
createdStrokeGroups
cumulativePointToPointDistance
cursorByAddingNodeIndex:toCursor:
cursorPositionAtIndex:usingBlockToSelectSide:
curvature
customLexicon
customPhraseLexicon
data
dataDetectorResult
dataPointer
dataSource
dataType
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfFile:
dataWithJSONObject:options:error:
date
dateTimeEndLetterCharSet
dateTimeSeparatorCharSet
debugDescription
debugName
debugQuickLookObject
decimalDigitCharacterSet
decodeBoolForKey:
decodeDoubleForKey:
decodeFloatForKey:
decodeInt32ForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodingCharacterLMWeight
decodingCommitActionBlock
decodingLexiconLowerBoundLogProbability
decodingLexiconWeight
decodingPruningPolicy
decodingResultWithConfiguration:withContext:
decodingWordLMLowerBoundLogProbability
decodingWordLMWeight
decrementUsageCount
defaultActiveCharacterSetForLocale:
defaultActiveCharacterSetForLocales:
defaultCommitActionBehaviorForLocale:
defaultLocaleForRecognitionType:withMode:
defaultManager
defaultMinimumDrawingSize
defaultPathScoringFunctionForLanguageResourceBundle:
defaultProcessor
defaultTextAffectedRangeForTargetContentInfo:
defaultWordTerminationCharacterForLocale:
delegate
deleteCharactersInRange:
deletedStrokeGroups
description
descriptionForStrokeGroupQueryItemType:
dictionary
dictionaryForKey:
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
digitCharSet
digitEndPunctuationCharSet
digitProcessor
digitStartPunctuationCharSet
directionChangeCornerIndexes
directionChangeCount
directionalFeaturesInputName
dirtyRectForStrokeGroup:
distMean
distanceBetweenFirstAndLastPoint
distanceFeatureIndex
distanceFromPoint:toRectangle:
distanceFromPoint:toSegmentFromPoint:toPoint:
distantPast
doubleValue
drawInRect:withAttributes:
drawInputDrawing:inContext:transform:
drawStrokesFromStrokeProvider:inRect:context:
drawVisualizationInRect:context:viewBounds:
drawingByRemovingUnnaturalHorizontalGaps:
drawingCanvasSize
drawingScaledByFactor:
drawingSpatiallyResampled:maxPointsPerStroke:
drawingSpatiallyResampled:outputPointMap:
drawingStrokeLimitForLocale:
drawingTarget
drawingTransformedWithTranslation:scaleFactor:
drawingWithStrokesFromIndexArray:
durationOfStrokesInStrokeGroup:strokeProvider:
edgeCountIntersectingLineSegment:
edgeIndex
effectiveClassification
effectiveEngineLanguage
effectiveLocalesFromLocales:
effectiveRecognitionLocales:recognitionMode:
ellipseCandidateResultForDrawing:candidate:
emailAtCharSet
emailProcessor
emailPunctuationCharSet
emitAveragedPoint
emitInterpolatedPoints
emitPoint:
emoticonBottomCharSet
emoticonMiddleCharSet
emoticonTopCharSet
enableCachingIfAvailable
enableGen2CharacterLMIfAvailable
enableGen2ModelIfAvailable
enableStrokeReordering
encodeBool:forKey:
encodeDouble:forKey:
encodeFloat:forKey:
encodeInt32:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedStrokeIdentifier
encodedStrokeIdentifier:
encodedStrokeIdentifiers:withStrokeProvider:
encodedStrokeProviderVersion
endCutPoint
endLocation
endOfWordPunctuationCharSet
endStroke
endTimeForStroke:
endTimestamp
endpointsForDrawing:startLocation:endLocation:
engine
engineCandidateCount
enlargedBounds
enlargedConvexHull:withMargin:
enumerateActivationsInResultArray:indexArray:block:
enumerateCharacterRectsInRange:block:
enumerateCharacterRectsInRange:reverse:block:
enumerateCodepointsInRange:reverse:usingBlock:
enumerateCodepointsInRange:usingBlock:
enumerateEdgesWithBlock:
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:
enumerateObjectsUsingBlock:
enumeratePointsForStroke:interpolationType:resolution:usingBlock:
enumeratePointsWithDistanceStep:usingBlock:
enumeratePointsWithTimestep:usingBlock:
enumerateRangesUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
enumerateTokensInTopTranscriptionPathWithBlock:
enumerateTokensInTranscriptionPath:columnRange:tokenProcessingBlock:
equationProcessor
error
errorModel
errorsByLocale
estimateWritingDirectionAndSortSubstrokesAccordingly:averageWritingOrientation:averageStrokeDeviation:
estimatedBaseline
exchangeObjectAtIndex:withObjectAtIndex:
exemplarCharacterSet
expandCodePoints
expandPathsWithCorrectedTokens:fromTokens:correctedTokenPath:originalTokenPath:
expectedMaxDotCount:
expectedMaxStrokeCount:
expectedMinStrokeCount:
extendedToken:withStrokeIndexSet:alignmentScore:bounds:
fastGroupingClusters
fastGroupingResultWithFastGroupingClusters:clusteredStrokes:
featureCounts
featureProviderForDrawing:initialVectorAnchorPoint:normalizeFeatures:padFeatures:outStrokeEndings:outInputSequenceLength:outOutputSequenceLength:
featureValueForName:
fetchContentInfoForTextInputTarget:strokeIdentifiers:completion:
fileExistsAtPath:
fileURLWithPath:
filterCandidatesWithOutOfPattern:duplicateTokenIDs:keepOutOfLexiconAlternatives:keepAlternativeLengths:keepSubstrings:shouldKeepOriginalSpelling:
filterUsingPredicate:
filteredLocalesFromGroup:results:withCharacterDetectionBlock:
filteredResultsByLocale:orderedLocales:usingLanguageFitness:outSortedLocales:
findPartialMatchInPhraseLexicon:token:contextBeforeToken:
firstIndex
firstObject
firstStrokeIdentifier
firstStrokeOrigin
flippedCenters:ofSubstrokes:maxStrokesGap:begnning:
floatForKey:
floatValue
flush
fontTransferForDrawing:transcription:shouldCancel:
fontTransferTransformForLineAtIndex:progress:shouldCancel:
forceRecognitionStrokeGroupIdentifiers
forcedActiveCharacterSet
formIntersectionWithCharacterSet:
formUnionWithCharacterSet:
formatGrammarFST
forwardLookingCharacterSet
foundItems
frame
freeformEngine
fullString
fullWidthPunctuationThatExpectsUppercaseAfter
fullWordsOnly
fullyCoveredStrokeGroupsForContextStrokes:partiallyCoveredStrokeGroups:
generateSegmentsFromDrawing:
generationDuration
gestureType
getAddedStrokes:removedStrokeIdentifiers:inStrokeProvider:lastGroupingResult:shouldCancel:
getAffectedRange:expandedToFullTokens:
getBytes:length:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
getCharIndex:
getCharacters:
getFirstStrokeIdentifier:lastStrokeIdentifier:inGroup:addingStrokeIdentifiers:removingStrokeIdentifiers:
getIndexes:
getIndexes:range:
getMergingEndOfLineCost:mergingEndOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:
getMergingMiddleOfLineCost:mergingMiddleOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:
getModelConfigurationForDrawing:outNumStrokes:outNumPoints:
getSpellCorrectedToken:contextBeforeToken:
getValue:
getValue:size:
groupBounds1
groupBounds2
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:firstStrokeOrigin:
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:startTimestamp:endTimestamp:
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:lastSubstrokeIndexBeforeMerge:firstStrokeOrigin:
groupingConfidence
groupingResultForContextStrokes:clusteredStrokes:fastGroupingResult:point:tokenizationLevel:
groupingResultUsingStrokes:distanceMetric:mergingDistanceThreshold:shouldCancel:
groupingResultsByStrategyIdentifier
groupingStrategiesByIdentifier
handleConfusableCharactersInToken:previousContext:
handleConfusableIsolatedCharacterToken:
handleRecognitionRequest:withReply:
handleRemainingStrokes:contextStrokeGroups:transformations:groupBounds:
hasBeenSubmitted
hasCompleteRecognitionResults
hasPrefix:
hasSamePostProcessingAsConfiguration:
hasSameResourcesAsConfiguration:
hasSubstringInSet:
hasSuffix:
hasTextReplacementsInColumnRange:
hash
hashtagDelimiters
hashtagQueryForRecognitionSession:
heartCandidateResultForDrawing:candidate:
heuristicTextScore
heuristicTextScoreForColumnRange:
highConfidenceDebugDescription
highConfidenceTextForSessionResult:rejectionRate:doesContainUnfilteredMultiLocaleResults:
highDensityStrokeCount
highestDirectionChangeCount
highestSymbolActivationWithResultArray:indexArray:symbol:
icuTransliterator
inappropriateWordIndexes
incrementUsageCount
indexAtPosition:
indexOfEquivalentTokenRow:tokenRange:
indexOfFirstLocaleWithLanguage:orderedLocales:
indexOfObject:
indexOfObjectIdenticalTo:
indexOfObjectPassingTest:
indexPathByAddingIndex:
indexPathByRemovingLastIndex
indexPathWithIndex:
indexPathWithIndexes:length:
indexSet
indexSetWithIndex:
indexSetWithIndexesInRange:
indexableContent
indexableTextRepresentation
indexesOfObjectsPassingTest:
indexesOfStrokesSmallerThanSize:
init
initForDigitFields
initForPhoneNumberFields
initMecabraIfNeededWithType:learningDictURL:
initProcessorDefault:processorDigits:processorPhone:processorUsername:processorEmail:processorURL:processorASCII:processorEquation:
initWithActivations:
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:orderedStrokeIdentifiers:
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
initWithArray:
initWithArray:copyItems:
initWithAttributedString:
initWithAutoCapitalizationMode:shouldAutoCorrect:shouldAutoCapitalize:shouldCreatePseudoTokens:locale:staticLexicon:customLexicon:phraseLexicon:customPhraseLexicon:spellChecker:lmVocabulary:ovsStringChecker:textReplacements:
initWithBestPathTokens:pathProbabilities:trailingSeparator:recognizerGenerationIdentifier:
initWithBestPathTokens:pathProbabilities:trailingSeparator:recognizerGenerationIdentifier:changeableColumnCount:
initWithBytes:length:encoding:
initWithCGImage:
initWithCVNLPLanguageModel:locale:decodingWeight:lowerBoundLogProbability:
initWithCanvasHeatmap:stroke2ItemMapping:item2StrokeMapping:
initWithCapacity:
initWithCaretTipPoint:targetContentInfo:locale:normalizedDrawing:originalDrawing:
initWithCoder:
initWithCommitActionBehavior:scoringFunction:beamWidth:pathCount:shouldOptimizeAlignment:pruneProblematicMixedScriptWordPaths:
initWithComputeUnits:
initWithConfusion:correction:locales:leftContext:rightContext:requiresLexiconMatch:
initWithContentsOfFile:
initWithContentsOfJSONDictionary:
initWithContentsOfXYString:
initWithContextStrokes:contextResults:strokeGroupingResult:strokeClassificationResult:strokeProvider:
initWithData:
initWithDataPointer:shape:dataType:strides:deallocator:error:
initWithDictionary:copyItems:
initWithDictionary:error:
initWithDrawing:characterSet:expandCodePoints:normalizationContext:maxCandidateCount:
initWithEdgeIndex:numberOfSubstrokes:numberOfSegments:classifiableDrawing:strokeGroup:
initWithFIFO:
initWithFIFO:drawingTarget:
initWithFIFO:width:
initWithFIFO:width:spacing:
initWithFastGroupingClusters:clusteredStrokes:strokeProvider:strategyIdentifier:clutterFilter:
initWithFile:
initWithGestureType:targetContentInfo:locale:normalizedDrawing:originalDrawing:lastStroke:preferCharacterLevel:
initWithHistory:activeRange:
initWithIdentifier:frame:
initWithIdentifier:stableIdentifier:strokeIdentifiers:correctionResult:
initWithIndexSet:
initWithIndexableTextRepresentation:presentableTextRepresentation:
initWithIndexes:length:
initWithInputTarget:affectedRange:textResult:resultType:isCharacterLevel:error:
initWithLMLanguageModel:locale:decodingWeight:lowerBoundLogProbability:
initWithLexicon:priority:
initWithLexicons:characterLanguageModel:wordLanguageModel:
initWithLexicons:decodingWeight:lowerBoundLogProbability:inputNormalizationFunction:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:isHighResponsivenessTask:strokeClassificationModel:strokeGroupingRequirement:partialResultBlock:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:isHighResponsivenessTask:strokeClassificationModel:strokeGroupingRequirement:subjectStrokeIdentifiers:partialResultBlock:
initWithLocales:recognitionMode:drawing:options:priority:
initWithLocales:remoteRecognition:priority:
initWithLocales:strokeProvider:initialTextInputTargets:inputResult:recognitionEnvironment:
initWithMLModel:modelKey:
initWithMachServiceName:options:
initWithMaxResultCount:
initWithMecabra:wordLanguageModel:ovsStringChecker:promoteKanaConversion:
initWithMode:
initWithMode:locale:
initWithMode:locale:contentType:autoCapitalizationMode:autoCorrectionMode:enableCachingIfAvailable:enableGen2ModelIfAvailable:enableGen2CharacterLMIfAvailable:
initWithMode:locale:contentType:enableCachingIfAvailable:enableGen2ModelIfAvailable:enableGen2CharacterLMIfAvailable:
initWithMode:locale:learningDictionaryURL:
initWithMode:locale:learningDictionaryURL:recognizerOptions:
initWithMode:locale:recognizerOptions:
initWithMode:locales:activeCharacterSetPerLocale:recognizerOptions:
initWithMode:recognitionSessionResult:dataSource:
initWithMode:withVersion:
initWithModelName:
initWithModelName:decodingPruningPolicy:
initWithMultiArray:domainType:characterObservations:blankIndex:pruningPolicy:
initWithMultiArray:indexArray:domainType:characterObservations:blankIndex:pruningPolicy:
initWithOVSStringChecker:
initWithObjects:
initWithOrderedLocales:resultsByLocale:errorsByLocale:languageFitnessByLocale:inputStrokeIdentifiers:
initWithOrderedLocales:resultsByLocale:errorsByLocale:languageFitnessByLocale:inputStrokeIdentifiers:inputDrawing:inputDrawingCutPoints:
initWithPatternFst:
initWithPatternFst:patternType:capitalizationToSplit:convertToLowercase:
initWithRecognitionSession:
initWithRecognitionSession:prefix:validSuffixes:delimiters:
initWithRect:
initWithResult:leftContext:contentType:
initWithResult:validStrokes:
initWithScannerType:passiveIntent:
initWithScore:
initWithSegmentGroupIndex:segments:
initWithSegmentID:startCutPoint:endCutPoint:referenceDrawing:
initWithSequence:
initWithSessionVersion:sessionResultVersion:
initWithShape:dataType:error:
initWithShouldAddAlternatives:
initWithShouldKeepOutOfPatternCandidates:shouldKeepDuplicateTokenIDs:shouldKeepOutOfLexiconAlternatives:shouldKeepAlternativeLengths:shouldKeepSubstrings:shouldKeepOriginalSpelling:
initWithStaticLexicon:customLexicon:
initWithStaticLexicon:customLexicon:locale:
initWithStep:
initWithString:attributes:
initWithString:score:rotation:
initWithString:score:rotation:center:size:
initWithString:score:rotation:center:size:stemLocation:stemWidth:
initWithString:score:rotation:startLocation:startEndpointType:endLocation:endEndpointType:midPointLocation:controlPointLocation:
initWithString:score:rotation:startLocation:startEndpointType:endLocation:endEndpointType:midPointLocation:controlPointLocation:pathPoints:
initWithString:score:rotation:upperLeftPoint:upperRightPoint:lowerLeftPoint:lowerRightPoint:size:
initWithString:score:rotation:vertex1:vertex2:vertex3:
initWithString:score:wordRanges:wordIDs:wordRecognitionScores:wordCombinedScores:wordStrokeSets:wordLexicalEntries:wordPatternEntries:rareWordIndexes:inappropriateWordIndexes:isTextReplacement:
initWithString:strokeIndexes:wordID:recognitionScore:combinedScore:alignmentScore:properties:substrokeCount:bounds:
initWithStroke:consistingOfSubstrokes:classificationAsNonText:lineOrientation:lineError:containerScore:
initWithStrokeClassificationsByStrokeIdentifier:substrokesByStrokeIdentifier:nontextCandidates:
initWithStrokeGroupIdentifier:stableIdentifier:strokeIdentifiers:type:preferredLocale:tokenizedTextResultsByLocale:errorsByLocale:
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:groupingResultsByStrategyIdentifier:
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:substrokePlacementsByStrokeIdentifier:
initWithStrokeIdentifier:bounds:startTimestamp:endTimestamp:convexHull:curvature:
initWithStrokeIdentifier:substrokesCount:classificationAsNonText:lineOrientation:lineError:containerScore:bounds:boundsDiagonal:enlargedBounds:rotatedBounds:supportByStrokeIdentifier:support:
initWithStrokeIdentifiers:
initWithStrokeIdentifiers:detectedResult:estimatedBaseline:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:startTimestamp:endTimestamp:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
initWithStrokeIdentifiers:queryResult:estimatedBaseline:
initWithStrokeIdentifiers:resultLevel:
initWithStrokeIndex:pointIndex:isEndOfStroke:
initWithStrokeProvider:
initWithStrokeProvider:defaultWritingOrientation:locales:isInlineContinuousMode:inlineContinuousModeTargets:
initWithStrokeProvider:locale:textInputTargets:
initWithStrokeProvider:locales:clutterFilter:
initWithStrokeProvider:sessionLastResult:locales:isInlineContinuousMode:inlineContinuousModeTargets:
initWithStrokeProviderVersion:encodedStrokeProviderVersion:orderedStrokeIdentifiers:sessionMode:locales:preferredLocales:clutterFilter:strokeClassificationResult:strokeGroupingResult:recognitionResults:inlineContinuousModeResults:generationDuration:recognitionEnvironment:
initWithStrokes:substrokesByStrokeIdentifier:splitIndex:
initWithSubstroke:
initWithTextCorrectionResult:inputStrokeIdentifiers:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:activePreviewRange:contentType:lastCharacterLevelPosition:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:autoCapitalizationMode:autoCorrectionMode:isSingleLine:lastCharacterLevelPosition:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:isSingleLine:lastCharacterLevelPosition:
initWithTextResult:terminatingSpecialCharacter:strokeGroup:
initWithTextResults:
initWithTokenColumns:transcriptionPaths:scores:recognizerGenerationIdentifier:
initWithTokenColumns:transcriptionPaths:scores:trailingSeparator:recognizerGenerationIdentifier:
initWithTokenColumns:transcriptionPaths:scores:trailingSeparator:recognizerGenerationIdentifier:changeableColumnCount:
initWithTokenRows:
initWithTrie:staticLexicon:customLexicon:flags:stringNormalizationFunction:
initWithType:mode:
initWithType:mode:learningDictionaryURL:
initWithType:mode:locale:
initWithType:mode:locale:learningDictionaryURL:
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:orderedStrokeIdentifiers:
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
initWithUsesCPUOnly:
initWithVertices:vertexCount:
initWithWordLanguageModel:ovsStringChecker:
initialTextInputTargets
inputDescriptionsByName
inputDrawing
inputDrawingCutPoints
inputNames
inputResult
inputStrokeIdentifiers
inputTarget
inputTargetIdentifier
insertObject:atIndex:
insertString:atIndex:
insightRequest
intValue
integerValue
interfaceWithProtocol:
interpointDistance
interpolateFromPoint:toPoint:controlPoint:time:
intersectsIndexesInRange:
intersectsSet:
invalidate
invertedSet
isAbbreviation
isCharacterEmoji:
isCharacterFullWidth:
isCharacterLevel
isCompletePattern
isCursorStrong
isDrawingCenterOnBlank:targetContentInfo:insertionLocation:
isEditGestureForDrawing:targetContentInfo:tentativeResultType:
isEnabledVisualizationForIdentifier:
isEndOfStroke
isEqual:
isEqualToCHEncodedStrokeIdentifier:
isEqualToData:
isEqualToDictionary:
isEqualToDrawing:
isEqualToIndexSet:
isEqualToInputTarget:
isEqualToNonTextCandidateStroke:
isEqualToNumber:
isEqualToPrefixQueryItem:
isEqualToRecognitionSessionResult:
isEqualToRecognizerConfiguration:
isEqualToRemoteRecognitionRequest:
isEqualToRemoteRecognizer:
isEqualToSearchQueryItem:
isEqualToSerializableRecognitionSessionResult:
isEqualToSet:
isEqualToString:
isEqualToStrokeClassificationResult:
isEqualToStrokeGroup:
isEqualToStrokeGroupRecognitionResult:
isEqualToStrokeGroupTextCorrectionResult:
isEqualToStrokeGroupingResult:
isEqualToSubstroke:
isEqualToTextCorrectionResult:
isEqualToTextInputQueryItem:
isEqualToTokenizedTextResult:
isEqualToTokenizedTextResultColumn:
isEqualToTokenizedTextResultToken:
isEquivalentToStrokeClassificationResult:
isEquivalentToStrokeGroup:
isEquivalentToToken:
isFinished
isHighDensityStroke:
isHighResponsivenessTask
isInappropriateLexiconEntry:
isInappropriateString:
isInappropriateTokenID:
isInlineContinuousMode
isKindOfClass:
isLanguageSupported:withMode:
isLocaleSupported:
isLocaleSupported:withMode:
isMainThread
isMatchingStringInLexicon:withLexicon:
isMecabraConversionCandidateAllowed:
isMemberOfClass:
isOVSString:
isPointEnumerationSupportedForStroke:
isPrefixForDrawing:
isRareChineseEntry:
isRemoteRecognition
isRightToLeftScriptForCharacter:
isScribbleActive
isSingleLine
isSinglePointSegment
isSkippableScriptCode:
isStringInLexicon:
isStroke:versionOfStrokeWithIdentifier:
isStrokeGroupSet:equivalentToStrokeGroupSet:
isSubsetOfSet:
isSupersetOfSet:
isSupportedCyrillicScriptLocale:withMode:
isSupportedLatinScriptLocale:withMode:
isTextMode
isTextReplacement
isValidForLocale:
isValidSessionResultVersion
isValidSessionVersion
isVerticalBarShapeFromLineResult:originalDrawing:isDirectionDownward:
isWordInUserDictionaries:caseSensitive:
itemIdentifier
itemStableIdentifier
jsonRepresentationWithContext:
keysOfEntriesPassingTest:
keysSortedByValueUsingComparator:
koreanParticlesCharSet
languageCode
languageFitnessByLocale
languageFitnessForLocale:
languageFitnessForLocale:recognitionMode:
languageModel
languageResourceBundle
languageResourceBundleWithStaticLexicon:customLexicon:wordLanguageModel:
lastCharacterLevelPosition
lastCharacterSegmentCount
lastCharacterSegmentIndexes
lastIndex
lastObject
lastPathComponent
lastPoint
lastProcessedStrokeProviderVersion
lastRecognitionResult
lastRecognitionResultWaitingForPendingTasks
lastStroke
lastStrokeIdentifier
lastStrokeInGroup:strokeProvider:
lastSubstrokeIndexBeforeMerge
lastTokenStrokeIndexes
latestStrokeProvider
layeringPriority
learningDictionaryURL
leftContext
length
lengthOfBytesUsingEncoding:
letterCharacterSet
lexiconCorrectionsForToken:locale:lexicon:lmVocabulary:ovsStringChecker:textReplacements:consumableStrokesSet:minimumTokenScore:activeHistoryRange:outBestTokenScore:shouldCapitalizeWord:shouldSkipEntryCorrection:allowFullCapsCorrections:minimalLengthForLowConfidenceCorrections:lowConfidenceThreshold:minimalLengthForCustomCapitalizationCorrections:outBestTokenIndex:outFoundTokenInLexicon:outFoundCaseMatchingTokenInLexicon:outCorrectionFromOutOfContextEntry:
lexiconHasEntryForString:withLexicon:
lexiconSkipCharSet
lexiconStringNormalizationFunction
lineBreakVerticalBarGestureEnabled
lineBreakVerticalBarUpToDelete
lineCandidateResultForDrawing:candidate:
lineError
lineGroupingResultUsingStrokes:shouldCancel:
lineOrientationAngle
lineOrientationForStrokePoints:error:
lineWidth
linguisticResourcesFallbackLocale
lmSPIType
lmVocabulary
loadFromFile:
loadSessionData:error:
loadWordLanguageModelFromOptions:fallbackLocale:
localStrokeWritingOrientations
localWritingOrientationAtStrokeIndex:
locale
localeIdentifier
localeWithLocaleIdentifier:
localesByLanguageGroup:
localesSortedByCombinedLanguageFitness:
localesSortedByRawLanguageFitness:
localizedDescription
localizedNameForRecognitionSessionStatusKey:
localizedNameForVisualizationIdentifier:
localizedStringForKey:value:table:
logDrawingsAndResultsForRequest:result:error:
longCharacterIsMember:
longLongValue
lowerLeftPoint
lowercaseCharSet
lowercaseLetterCharacterSet
lowercaseStringWithLocale:
main
mainBundle
majorityScriptId
manhattanLineCandidateResultForDrawing:candidate:rejectionResult:
matchedString
matchingStrokePrefixRangeForDrawing:
maxCandidateCount
maxInputWidth
maxNumberOfInputStrokes
maxPointsPerStroke
maxRecognitionResultCount
maxRecognitionResultDefaultCount
maxResultCount
maximumLengthOfBytesUsingEncoding:
meanRotationCorrectionAngle
mecabraCandidate
mecabraContextRef
mecabraInputMethodType
mecabraRareWordIndexes:wordRanges:
mecabraTokenizationAndKanaConversionForString:mecabraEngine:contextRef:leftCandidateRef:alternativeCandidateLimit:
mecabraWrapper
meetsContextRequirementWithLeftContext:rightContext:
mentionQueryForRecognitionSession:
mergeGroupsPostProcessing:createdGroups:deletedGroups:
mergeTokenRow:intoUniqueRows:
mergedResultPostProcessor
middlePunctuationCharSet
midpointLocation
minPointsPerStroke
minimumDrawingSize
minusSet:
mode
model
modelConfigurationsNumPoints
modelConfigurationsNumStrokes
modelDecoderSize
modelDescription
modelKey
modelName
modelNameChinese
modelNameCyrillic
modelNameJapanese
modelNameLatin
modelNameThai
modelSmallestConfig
modelWithContentsOfURL:configuration:error:
modifiesOriginalTokens
multiArrayConstraint
mutableCopy
mutableCopyWithZone:
newCJKStaticLexicon
newCTCRecognitionModel
newCTCTextDecoderWithStaticLexicon:customLexicon:wordLanguageModel:
newCharacterLanguageModelAndMap:force:
newColorForVisualizedItemAtIndex:
newCursorByAdvancingCursor:withSymbol:
newCursorByAdvancingWithString:fromCursor:inNetwork:
newCursorByAdvancingWithSymbol:fromCursor:inNetwork:
newDrawingWithAffineTransform:
newDrawingWithTransform:
newErrorModel
newEstimatedBaselineForStrokesWithTokens:tokenStrokeIdentifiers:
newEstimatedBaselineForSubStrokes:tokens:tokenSubStrokeIndexes:estimatedDescenderLocations:
newFreeFormEngine
newGrammarFST
newGroupingManager
newGroupsDefaultToActive
newMecabraWrapper
newMergedResultPostProcessorWithStaticLexicon:customLexicon:stringChecker:
newOVSStringCheckerWithStaticLexicon:customLexicon:
newPatternFST
newPhraseLexicon:
newPostProcessorWithStaticLexicon:customLexicon:phraseLexicon:customPhraseLexicon:characterLM:textReplacements:postProcessingFST:wordLM:mecabraWrapper:ovsStringChecker:spellChecker:lmVocabulary:maxResultCount:
newRadicalClusterFST
newRecognitionEngine
newRemoteRecognizerWithMode:locales:
newSecondaryStaticLexicon:
newStaticLexicon:
newStrokeClassifier
newTransliterationVariantMap
newWordLanguageModel
newWordLanguageModelForRecognizer:async:synchronizationQueue:
newlineCharacterSet
nextFIFO
nodeIndexAtPosition:
nodeIndexCount
nonSpaceSeparatorCharSet
nonTextCandidateForStroke:withSubstrokes:
nonretainedObjectValue
nontextCandidates
normalizationContext
normalizeFeatures
normalizeLMTokenIDForWord:tokenID:isFromPattern:score:wordLanguageModel:
normalizedDrawing
normalizedDrawing:interpolationDistance:
normalizedDrawing:scaleFactor:interpolationDistance:outputPointMap:
normalizedDrawing:targetHeight:minimumDrawingSize:interpolationDistance:outScaleFactor:outputPointMap:
numCharacters
numInputFeatures
numOutputClasses
numberOfSegments
numberOfSubstrokes
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numeralEndLetterCharSet
obfuscateString:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
objectsPassingTest:
offsetAllStrokeIndexesBy:
openingBracketCharacters
openingQuoteCharacters
orderedSetWithArray:
orderedSetWithCapacity:
orderedStrokeIdentifiers
orderedStrokes
orderedStrokesGroup1
orderedStrokesGroup2
orientationRepresentationForSampling:convolutionWidth:
orientationTransform
orientedBounds
originalWritingDirectionIndex
orthographyWithDominantScript:languageMap:
outlineArrowCandidateResultForDrawing:candidate:
outputDescriptionsByName
outputNames
outputResult
overridenParameterValueForKey:defaultValue:
ovsStringChecker
parametersOverride
partialResultBlock
path
pathPoints
pathScoringFunctionForLanguageResourceBundle:
patternFST
patternToSymbolMap
patternType
pause
pentagonCandidateResultForDrawing:candidate:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
phoneProcessor
phraseCaseCorrectedResultWithHistory:phraseLexicon:maxPhraseLength:
phraseLexicon
pointCount
pointCountForStrokeIndex:
pointIndex
points
polygonByIntersectingWithClipPolygon:
polygonDrawing
postProcessingFST
postProcessor
postProcessorLexiconWithStaticLexicon:secondaryLexicon:
precedingLineBreaks
precedingSeparatorForRawTranscriptionPath
precedingSeparatorForToken:
precedingSeparatorForTopTranscriptionPath
precedingSpaceDefaultBehavior
precomposedStringWithCanonicalMapping
predicateWithBlock:
predictionFromFeatures:options:error:
preferCharacterLevel
preferredLocales
preferredRecognitionResultUpdatesInterval
preferredUpdatesInterval
prefix
prefixCapitalizationExceptionCharSet
prefixQueryWithPrefix:forRecognitionSession:
prepareQuoteCountFromLeftContext:
prependTokenColumns:prefixTopPath:
presentableTextRepresentation
prevPoints
preventLeftoverCharsInSubwordGestures
priority
process:options:
process:withProcessor:options:
progressWithTotalUnitCount:
progressWithTotalUnitCount:parent:pendingUnitCount:
promoteKanaConversion
properties
protectedCharacterIndexes
pseudospaceIndex
punctuationCharacterSet
punctuationThatExpectsUppercaseAfter
q_foundItemsForSearchString:sessionResult:
q_itemTypeForStrokeGroup:recognitionResult:
q_queryResultDidChange
q_setNeedsQueryResultUpdating
q_strokeGroupItemsFromSessionResult:
q_textInputItemsFromSessionResult:
q_updateQueryResult
queryDidUpdateResult:
queryItemStableIdentifierForStrokeGroup:
queryResult
queryString
radicalClusterFST
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:
rangeOfCharacterFromSet:options:range:
rangeOfComposedCharacterSequenceAtIndex:
rangeOfComposedCharacterSequencesForRange:
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeOfTokenAtCharacterIndex:inString:locale:
rangeValue
rawTranscription
reachesActivationThreshold:inCharacterSet:resultArray:indexArray:
rebuildRecognitionResults
recognitionEngineCachingKey
recognitionEngineCachingKeyForRecognitionLocale:
recognitionEnvironment
recognitionError
recognitionLocales
recognitionMaxStrokes
recognitionModel
recognitionQueue
recognitionResultForStrokeGroupIdentifier:
recognitionResultsByLocale
recognitionResultsForDrawing:options:
recognitionResultsForDrawing:options:shouldCancel:
recognitionResultsForGroupingResult:groupingManager:
recognitionResultsForSingleCharacterDrawing:segmentGroup:options:history:
recognitionResultsForSketchDrawing:options:
recognitionScore
recognitionSession
recognitionSessionDidChangeStatus:
recognitionSessionDidUpdateRecognitionResult
recognitionSessionDidUpdateRecognitionResult:
recognizableDrawingForStrokeGroup:translationVector:originalDrawing:orderedStrokesIDs:rescalingFactor:
recognizableDrawingForStrokeGroupQueryItem:
recognizeDrawing:minimumDrawingSize:initialVectorAnchorPoint:activeCharacterSet:outStrokeEndings:outFallbackSymbol:outFallbackSymbolScore:
recognizerActiveCharacterSet
recognizerConfigurationKeyWithLocale:
recognizerContentType
recognizerContentTypeDescription
recognizerDebugDescription
recognizerForLocale:
recognizerGenerationIdentifier
recognizerLocale
recognizerMaxRecognitionResultCount
recognizerMinimumDrawingSize
recognizerOptions
recognizerRecognitionMode
recognizerRecognitionModeDescription
recordConfigurationForRecognizer:options:
recordInputDrawing:
recordInsightRequest:
recordInsightWithRequest:
recordTextResult:recognitionError:
recordedInsightFromLastRequest
rectangleCandidateResultForDrawing:candidate:
reduceMemoryByResizing
referenceSubstring
referenceSubstringInRange:
referenceSubstringRange
referenceSubstringRangeOfComposedCharacterAtIndex:
refineStrokeClassificationResultUsingClassificationResult:strokeClassificationModel:sortedAddedStrokes:removedStrokeIdentifiers:cancellationBlock:
refineWritingOrientationAndResortSubstrokes:averageWritingOrientation:
registerChangeObserver:
registerInputDrawingClient:
registerTask:background:
regularizedPathFromPoints:delta:gamma:outError:
relativeLocationFromAbsoluteLocation:
releaseModelWithKey:
removeAllIndexes
removeAllObjects
removeCharactersInString:
removeIndex:
removeIndexes:
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsInRange:
removeTask:
removeTokenRowAtIndex:
replaceCharactersInRange:withString:
replaceObjectAtIndex:withObject:
replaceOccurrencesOfString:withString:options:range:
replacementErrorScoreForIntendedCharacter:actualCharacter:
requiredInappropriateFilteringFlags
requiredLeftContext
requiredRightContext
requiresLexiconMatch
resampledDrawing
resignCurrent
resourcePath
respondsToSelector:
result
resultDrawn
resultLevel
resultType
resultsBySwapping:swappableColumns:topLocaleIndex:topLocale:
resume
retain
retainCount
retrieveActivationMatrixForDrawing:recognitionEngineCachingKey:outStrokeEndings:
retrievePartialResultsForDrawing:recognitionEngineCachingKey:matchingColumnRange:
rootCursorForContentType:inNetwork:forFirstSegmentGroup:
rootCursorForPatternType:inNetwork:forFirstSegmentGroup:
rotatedBounds
rotation
saveInputDrawings
scanFloat:
scanHexInt:
scanUpToCharactersFromSet:intoString:
scannerWithString:
score
scriptCode
scriptCodeForCodepoint:
scriptHistogramForString:
secondaryStaticLexicon
segmentBounds
segmentGroupIndex
segmentID
segments
selectedTextRange
self
selfLoopPunctuationCharSet
sentenceStartPunctuationInSpanish
sequence
sequenceCompression
servesBackgroundIndexation
sessionData
sessionLastResult
sessionMode
sessionResultVersion
sessionVersion
setActivationMatrix:
setActiveCharacterSet:
setActivePreviewRange:
setActiveStrokeGroupAncestorIdentifiers:
setActiveTextInputQuery:
setAlignmentScore:
setAllowedCharacters:
setAlphaNumericCharSet:
setArea:
setArithmeticOperatorCharSet:
setAsciiProcessor:
setAutoCapitalizationMode:
setAutoCorrectionMode:
setBounds:
setByAddingObjectsFromSet:
setCJKPairedPunctuationsCharSet:
setCachedDrawing:
setCachedResults:
setCancelled:
setCapitalizationToSplit:
setCaseMatchingOnly:
setChangeableTokenColumnCount:
setCharacterIDMap:
setCharacterLanguageModel:
setCharacterReplacements:
setCharacterTransliterations:
setCjkDynamicLexicon:
setCjkStaticLexicon:
setClasses:forSelector:argumentIndex:ofReply:
setClosingBracketCharacters:
setClosingQuoteCharacters:
setCoalescedCenter:
setCombinedScore:
setCommonJapaneseSymbols:
setCompletedUnitCount:
setConsumableStrokesCharSet:
setContainsCommittedStrokes:
setContainsDotCharSet:
setContainsTwoDotsCharSet:
setContextBounds:
setContextInvariantCharacterSet:
setContextResults:
setContextStrokes:
setControlPoints:
setConvertToLowercase:
setCorrectionAngles:
setCurrencySymbols:
setCustomLexicon:
setCustomLexicon:customVocabulary:
setCustomPhraseLexicon:
setDataSource:
setDateFormat:
setDateTimeEndLetterCharSet:
setDateTimeSeparatorCharSet:
setDecodingPruningPolicy:
setDefaultProcessor:
setDelegate:
setDigitCharSet:
setDigitEndPunctuationCharSet:
setDigitProcessor:
setDigitStartPunctuationCharSet:
setDistMean:
setDistStd:
setDrawing:
setDrawingTarget:
setEmailAtCharSet:
setEmailProcessor:
setEmailPunctuationCharSet:
setEmissionHandler:
setEmitInterpolatedPoints:
setEmoticonBottomCharSet:
setEmoticonMiddleCharSet:
setEmoticonTopCharSet:
setEnableCachingIfAvailable:
setEnableGen2CharacterLMIfAvailable:
setEnableGen2ModelIfAvailable:
setEnableStrokeReordering:
setEnabled:forVisualizationIdentifier:
setEndOfSentencePunctuationCharSet:
setEngine:
setEquationProcessor:
setErrorModel:
setForceRecognitionStrokeGroupIdentifiers:
setFormatGrammarFST:
setForwardLookingCharacterSet:
setFreeformEngine:
setFullWidthPunctuationThatExpectsUppercaseAfter:
setFullWordsOnly:
setHasBeenSubmitted:
setIcuTransliterator:
setInputDrawing:
setInsightRequest:
setInterpointDistance:
setInterruptionHandler:
setInvalidationHandler:
setIsCursorStrong:
setIsSingleLine:
setKoreanParticlesCharSet:
setLastCharacterLevelPosition:
setLastCharacterSegmentCount:
setLastPoint:
setLastProcessedStrokeProviderVersion:
setLearningDictionaryURL:
setLexiconSkipCharSet:
setLineHeight:
setLineWidth:
setLmVocabulary:
setLocale:
setLocales:
setLowercaseCharSet:
setMaxComputationBatchSize:
setMaxRecognitionResultCount:
setMaxResultCount:
setMecabraWrapper:
setMergedResultPostProcessor:
setMiddlePunctuationCharSet:
setMinimumDrawingSize:
setMinimumSignificantSegmentLength:
setNeedsDisplayInRect:
setNeedsRecognitionUpdate
setNextFIFO:
setNonSpaceSeparatorCharSet:
setNormalizeFeatures:
setNumeralEndLetterCharSet:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOpeningBracketCharacters:
setOpeningQuoteCharacters:
setOptions:
setOriginalWritingDirectionIndex:
setOvsStringChecker:
setParametersOverride:
setPartialResultBlock:
setPath:
setPatternFST:
setPhoneProcessor:
setPhraseLexicon:
setPoints:
setPostProcessingFST:
setPostProcessor:
setPrecedingLineBreaks:
setPreferredLocales:
setPreferredUpdatesInterval:
setPrefixCapitalizationExceptionCharSet:
setPrevPoints:
setPriority:
setProperties:
setProtectedCharacterIndexes:
setPunctuationThatExpectsUppercaseAfter:
setPunctuationThatNeedSpaceCleanup:
setRadicalClusterFST:
setRecognitionEnvironment:
setRecognitionError:
setRecognitionMode:
setRecognitionModel:
setRecognitionQueue:
setRecognitionScore:
setRecognitionType:
setRecognizerActiveCharacterSet:
setRecognizerContentType:
setRecognizerLocale:
setRecognizerMaxRecognitionResultCount:
setRecognizerMinimumDrawingSize:
setRecognizerOptions:
setRecognizerRecognitionMode:
setReferenceSubstring:range:characterRects:
setRemoteObjectInterface:
setResult:
setSaveInputDrawings:
setScore:
setSecondaryStaticLexicon:
setSelectedTextRange:
setSelfLoopPunctuationCharSet:
setSentenceStartPunctuationInSpanish:
setSequence:
setServesBackgroundIndexation:
setShouldAddAlternatives:
setShouldAutoCapitalize:
setShouldAutoCorrect:
setShouldCreatePseudoTokens:
setShouldForceFastGrouping:
setShouldKeepAlternativeLengths:
setShouldKeepOriginalSpelling:
setShouldKeepOutOfLexiconAlternatives:
setShouldKeepOutOfPatternCandidates:
setShouldKeepSubstrings:
setShouldUseDynamicSampling:
setShouldUseTextReplacements:
setSignatureUniChar:
setSpacing:
setSpellChecker:
setStartPunctuationCharSet:
setStateType:
setStaticLexicon:
setStatusReportingEnabled:
setString:
setStrokeClassificationResult:
setStrokeCoveredTextRange:
setStrokeDeviation:
setStrokeGroupingOnly:
setStrokeGroupingResult:
setStrokeIndexes:
setStrokeMaxPenalties:
setStrokeProvider:
setStrokes:
setSubstrokeCount:
setSupportByStrokeIdentifier:
setSupportsAutoLineBreaks:
setSymbolsRequiringSpaceBeforeInFrench:
setSymmetricQuoteCharacters:
setTextContentLength:
setTextInputTarget:
setTextInputTargetsDataSource:
setTextReplacementLowercasedKeyMapping:
setTextReplacements:
setTextResult:
setTokenColumns:
setTokenRowWithTokens:atIndex:
setTokenRows:
setTotalDuration:
setTranscriptionPaths:scores:
setTransliterateSentences:
setTransliterationVariantMap:
setUnitScale:
setUnitScaleForViewSize:normalizedSize:contentScaleFactor:
setUnlikelyHasLatinContents:
setUppercaseCharSet:
setUrlProcessor:
setUrlPunctuationCharSet:
setUsernameProcessor:
setValidSuffixes:
setValue:forKey:
setWidth:
setWidthAlternativeCharacterSet:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
setWordID:
setWordLanguageModel:
setWritingOrientation:
set_changeCoalescingIndex:
set_queryActive:
set_registeredAsInputDrawingsClient:
set_storedAffectedRange:
set_strokeProviderDrawn:
setup
shape
sharedCharacterSetRules
sharedPostProcessingFST
sharedSettings
sharedSpellServer
shouldAddAlternativeWidthCandidates
shouldAddAlternatives
shouldAddSpaceToNeutralQuotationMarks:
shouldAdjustColumnsFromPostprocessingStepOptions:
shouldAdjustGroupingForLocale:
shouldAdjustGroupingHeuristicsForVeryComplexCharacters:
shouldAllowNGramCharacterLM
shouldAllowSpaceInsertionGestureForLocale:
shouldApplyCandidatesThresholding
shouldApplyChinesePostProcessing
shouldApplyLMRescoring
shouldApplyLMSorting
shouldApplyLatinSpacingForLocale:
shouldApplyLexicalPenalty
shouldApplyRomanPostProcessing
shouldAutoCapitalize
shouldAutoCorrect
shouldCapitalizeGivenHistory:shouldAutoCapitalizeSetting:locale:
shouldComputeStrokePenalties
shouldConvertKanaInPostProcessing
shouldCorrectionGesturesSnapToTokensForScriptCode:
shouldCreatePseudoTokens
shouldDetectChinesePunctuation
shouldDetectRomanPunctuation
shouldDrawStrokeGroup:
shouldEnforceGrammarOnTransliterations
shouldExpandCodePoints
shouldExpandLexiconInNetwork
shouldFallbackOnSingleCharacterExpansion
shouldFilterLowProbabilityTranscriptionPaths
shouldFilterOutStringForToken:isGibberish:
shouldForceFastGrouping
shouldForceNoAlternativeRecognitionCandidates:
shouldForwardMecabraOTAAssetsUpdate
shouldGenerateDigitLetterAlternatives
shouldInsertSpaceBetweenPreviousChar:andNextChar:inLocale:inString:atRange:withQuoteCount:
shouldKeepAlternativeLengths
shouldKeepDuplicateTokenIDs
shouldKeepOriginalSpelling
shouldKeepOutOfLexiconAlternatives
shouldKeepOutOfPatternCandidates
shouldKeepSubstrings
shouldLoadCJKLexicons
shouldMarkMultiWordOVS
shouldMarkNoWhiteSpaceColumnsChangeable
shouldPenalizeLetterInsertion
shouldPenalizePrefixes
shouldPerformGlobalBestSearch
shouldPerformGlobalBestSearchWithSmallLattice
shouldPerformIntegratedLexiconExpansion
shouldPerformStrictCandidateFiltering:
shouldPreserveLegacyTranscriptionPaths
shouldPromoteCJKCommonCharacters
shouldReclassifyGestureType:
shouldRefineCandidates
shouldRefineChineseCharacterCandidates
shouldRefinePrefixQueryMatchesForLocale:
shouldRelaxCharacterBoundsPercentageOverlapForScript:
shouldRelaxFinalCandidatesThresholding
shouldRemoveSpaceBetweenPreviousChar:andNextChar:inLocale:
shouldRemoveSpacesFromEnglishAndKoreanParticles
shouldRemoveSpacesFromHashtagsAndMentions
shouldRemoveSpacesFromStrongURLs
shouldRemoveUnnaturalGaps
shouldReorderSCTCConfusion
shouldReplaceInvalidTokenIDs
shouldRunLexiconCorrectionPostProcessingStep
shouldRunNextGenCharacterLM
shouldRunNextGenRecognizer
shouldRunRecognitionLocallyWithEnvironment:
shouldSwapCyrillicTopResult:topRange:englishResult:englishRange:prevousGroupTopString:
shouldTransformCharacterProbabilitiesIntoLogScores
shouldTransliterateAndSynthetizeCandidates
shouldTransliterateConfusableCharacters
shouldTransliterateForChineseJapaneseLigatures
shouldTransliterateFrenchLigatures
shouldTransliterateHalfWidthPunctuations
shouldTransliterateSentencesSCTC
shouldTreatAllSmallStrokesAsPunctuation
shouldUpdateChangeableColumnCountWithPhraseLexicon
shouldUseCaching
shouldUseDynamicSampling
shouldUseFullWidthSpaceBasedOnContextForLocale:
shouldUseStrokeReorderingForMode:
shouldUseTextReplacements
shouldUseTokenPrecedingSpaces
signatureUniChar
sinAlphaFeatureIndex
sinAngleFeatureIndex
singleScriptCodeForString:
size
sizeWithAttributes:
sketchCodeForDescription:
sketchDescriptionForCode:
skipLatinActivationThreshold
sleepForTimeInterval:
sortDescriptorWithKey:ascending:
sortDescriptorWithKey:ascending:comparator:
sortSubstrokesByWritingDirection:averageWritingOrientation:
sortTokenRows
sortUsingComparator:
sortWithOptions:usingComparator:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sortedArrayUsingSelector:
sortedArrayWithOptions:usingComparator:
sortedCHCutPointArray:
sortedDrawingUsingMinXCoordinate
sortedDrawingUsingStrokeMidPoint:
sortedLanguageGroups:usingLanguageFitness:
sortedLocales:usingLanguageFitness:useCombinedScore:
spaceIndex
speedForFinalTimeRange:stroke:
spellChecker
spellCheckingLocaleForRecognitionLocale:string:
spellServer:findMisspelledWordInString:language:wordCount:countOnly:correction:
spellServer:suggestGuessDictionariesForWordRange:inString:language:options:errorModel:
spellServer:suggestGuessesForWordRange:inString:language:options:
splitStringIntoSubtokensForLexicon:minLength:
standardUserDefaults
starCandidateResultForDrawing:candidate:
start
startCutPoint
startEndpointType
startLocation
startPunctuationCharSet
startTimeForStroke:
startTimestamp
stateType
stateTypeForNodeIndex:
staticLexicon
status
statusReportingEnabled
stemLocation
stemWidth
stop
straightenWithProgress:shouldCancel:
strategyIdentifier
string
stringByAppendingFormat:
stringByAppendingString:
stringByApplyingTransform:reverse:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByFoldingWithOptions:locale:
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingCharactersInRange:withString:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringForAutoCapitalizationMode:
stringForAutoCorrectionMode:
stringForRecognitionContentType:
stringForRecognitionMode:
stringWithCString:encoding:
stringWithCharacters:length:
stringWithContentsOfFile:encoding:error:
stringWithFormat:
stringWithString:
stringWithUTF8String:
strokeAttributes
strokeBoundsAtIndex:
strokeClassificationLastResult
strokeClassificationModel
strokeClassificationResult
strokeClassificationsByStrokeIdentifier
strokeCount
strokeCoveredTextRange
strokeForIdentifier:
strokeForIdentifier:inStrokeProvider:
strokeGroup
strokeGroup1
strokeGroup2
strokeGroupClusters
strokeGroupContainingStrokeIdentifier:strokeGroups:
strokeGroupContainingStrokeIdentifier:strokeGroups:foundStrokeGroupIndex:
strokeGroupFromGroup:addingStrokes:
strokeGroupIdentifier
strokeGroupItems
strokeGroupItemsByID
strokeGroupStableIdentifier
strokeGroupingOnly
strokeGroupingRequirement
strokeGroupingResult
strokeGroups
strokeGroupsClusteredByProximity:
strokeGroupsSortedByWritingOrientation
strokeIdentifier
strokeIdentifierFromData:
strokeIdentifierToGroupIndexMappingForStrokeIdentifiers:orderedStrokeGroups:
strokeIdentifiers
strokeIdentifiersForData:withStrokeProvider:
strokeIdentifiersInProximalGroupsForStrokeIdentifiers:sortedStrokeGroups:clusteredStrokeGroups:unusedStrokeIdentifiers:
strokeIndex
strokeIndexSet
strokeIndexSetsInPath:columnRange:
strokeIndexes
strokeIndexesForLastCharacter
strokeIndicesSortedByMinXCoordinate
strokeMaxPenalties
strokePointTransformationsForContextStrokes:completion:shouldCancel:
strokePointTransformationsForContextStrokes:completionWithTelemetry:shouldCancel:
strokeProvider
strokeProviderSnapshot
strokeProviderVersion
strokesForIdentifiers:
subResultWithColumnRange:
subarrayWithRange:
subdataWithRange:
subjectStrokeIdentifiers
substringFromIndex:
substringToIndex:
substringWithRange:
substroke
substrokeCount
substrokePlacementsByStrokeIdentifier
substrokesByStrokeIdentifier
substrokesForStroke:
subwordGestureEndingSpeedRange
subwordGestureSpeedThreshold
superclass
supportByStrokeIdentifier
supportedCharacterSet
supportedLanguageForLocale:
supportedScriptForLocale:
supportedSegmentationStrategy
supportedStrings
supportsAutoLineBreaks
supportsSecureCoding
swapMultiLocaleResults:locales:topLocaleIndex:resultHasSwap:resultTopLocale:
swappableColumnIndexesFromResults:locales:
swappableColumnIndexesFromResults:locales:topLocaleIndex:
swappableColumnIndexesInResults:locales:topLocaleIndex:swappableIndex:
symbolCharacterSet
symbolsRequiringSpaceBeforeInFrench
symmetricQuoteCharacters
synchronousRemoteObjectProxyWithErrorHandler:
systemFontOfSize:
targetContentInfo
terminatingCharacter
terminatingSpecialCharacter
textClassIndex
textContentLength
textCorrectionRecognizerForLocales:
textCorrectionResult
textCorrectionResultForDrawing:targetContentInfo:originalDrawing:lastStroke:localTypedContextBounds:normalizedDrawingScaleFactor:previousCorrectionResult:
textCorrectionResultForStrokeGroupIdentifier:
textCorrectionResultsForGroupingResult:groupingManager:
textDecoder
textInputTargetForItemStableIdentifier:strokeIdentifiers:
textInputTargetForItemStableIdentifier:strokeIdentifiers:simultaneousItemStableIdentifiers:
textInputTargets
textInputTargetsDataSource
textOnly
textRecognitionResultArray
textRecognitionResultArrayGivenHistory:
textRecognitionResultForDrawing:options:error:
textRecognitionResultForDrawing:options:shouldCancel:
textRecognitionResultForDrawing:options:writingStatistics:shouldCancel:
textRecognitionResultForLocale:error:
textReplacementLowercasedKeyMapping
textReplacements
textResult
textResultToIndexMappingFromTopTranscriptionWithCharacterRange:intersectionRanges:
textResults
textStrokeGroupClusters
textStrokeGroups
textStrokeGroupsSortedByWritingOrientation
textStrokeGroupsSortedTopBottomLeftRight
textStrokeIdentifiers
textStrokePointTransformationFromAffineTransformation:
threePointsOrientationWithOrigin:pointA:pointB:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timestepCount
titleStrokeIdentifiers
toggleSelectiveVisualizationsAtPoint:
toggleVisualizationRegionAtPoint:
tokenAtLocation:
tokenColumnCount
tokenColumns
tokenIDForString:withLexicon:
tokenRowAsString:
tokenRows
tokenRowsAtColumnIndex:
tokenStrokeIdentifiersForContextStrokes:point:tokenizationLevel:completion:shouldCancel:
tokenWithString:strokeIndexes:wordID:recognitionScore:combinedScore:alignmentScore:properties:substrokeCount:bounds:
tokenizedResultWithFilteredPaths:
tokenizedStrokeResultForInitialStrokes:point:tokenizationLevel:completion:shouldCancel:
tokenizedTextResultForChineseLatticePaths:maximumPathCount:network:mecabraIDs:startNode:endNode:segmentGroup:
tokenizedTextResultForRomanLatticePaths:history:activeHistoryRange:startNode:segmentGroup:
tokenizedTextResultForRomanSingleWordLatticePaths:history:activeHistoryRange:startNode:segmentGroup:
tokenizedTextResultFromResults:shouldPerformStrictFiltering:doesTopLocaleRequireSpecialHandling:hasSwap:
tokenizedTextResultWithString:strokeIndexes:bounds:trailingSeparator:recognizerGenerationIdentifier:
tokens
tokensFromTopTranscriptionWithCharacterRange:
tokensInTranscriptionPath:atColumnIndex:
tokensRangesForString:outTokenIDs:wordLanguageModel:
topCorrectionForString:contextBeforeToken:contextSeparator:shouldUseErrorModel:forLanguage:
topTranscription
totalDuration
totalSegmentCount
totalUnitCount
trailingSeparator
transcribedTitle
transcriptionPathScores
transcriptionPaths
transcriptionPathsForTokenizedResult:recognitionRequest:withReply:
transcriptionPathsForTokenizedTextResult:withHistory:scores:error:
transcriptionWithPath:columnRange:filterLowConfidence:
transcriptionWithPath:columnRange:filterLowConfidence:excludeGibberish:rejectionRate:tokenProcessingBlock:
transformCyrillicToLatin:
transformLatinToCyrillic:
transformString:usingConfusions:
transitionTime
transliterateSentences
transliterateStringUsingICUTransliterator:_icuTransliterator:
transliterationVariantMap
transliterationVariantsForString:
transpositionErrorScoreForIntendedFirstCharacter:intendedSecondCharacter:
triangleCandidateResultForDrawing:candidate:
trimTokensToTranscriptionPathCount:
tryRegroupingStrokesInGroup:substrokePlacementsByStrokeIdentifier:cancellationBlock:
type
unarchivedObjectOfClass:fromData:error:
unionCharacterRects
unionSet:
unionStrokeBounds:usingStrokeCountLimit:reverseOrder:
uniqueIdentifier
unitScale
unlikelyHasLatinContents
unregisterChangeObserver:
unregisterInputDrawingClient:
unsafeForSpellCorrection
unsignedIntValue
unsignedIntegerValue
unsignedLongValue
updateAddressBookLexicon:
updateByAddingClutterStroke:
updateByAddingNonClutterStroke:withAllStrokes:forceText:
updateByAddingNonClutterStroke:withClassification:
updateByRemovingStrokeIdentifier:withRemovedAndClutterStrokeIDs:
updateByTransitionedClutterStrokeIdentifier:withRemovedAndClutterStrokeIDs:
updateLocalStrokeDeviationsForSubstrokes:averageStrokeDeviation:
updateMecabraWithRegionalOTAAssets:nonRegionalOTAAssets:
updateMultiLocaleResultDictionary:locales:
updateNonTextCandidatesByRemovingSupportFromStrokeIdentifier:skippingCandidatesWithStrokeIdentifier:
updateUserDictionaryLexicon:
updatedGroupingResult:byAddingStrokes:removingStrokeIdentifiers:stableStrokeIdentifiers:allSubstrokesByStrokeIdentifier:withCancellationBlock:
updatedGroupingResultByAddingStrokes:removingStrokeIdentifiers:orderedStrokeIdentifiers:strokeClassificationResult:cancellationBlock:
updatedStrokeClassificationResultByAddingStrokes:removingStrokeIdentifiers:clutterFilter:affectedClutterStrokeIDs:cancellationBlock:
upperLeftPoint
uppercaseCharSet
uppercaseLetterCharacterSet
uppercaseStringWithLocale:
urlProcessor
urlPunctuationCharSet
urlificationRange
usageCount
usernameProcessor
validSuffixes
validatedTokenForCorrectedToken:rawToken:
value:withObjCType:
valueForRecognitionStatusKey:
valueWithBytes:objCType:
valueWithNonretainedObject:
variableHeightForRecognitionSessionStatusKey:
vectorMeanWithoutOutliers:
vertexCount
verticalBarGestureFromLineResult:currentGesture:
vertices
visualCharacterRectForCharacterIndex:
visualization:needsDisplayInRect:
visualizationIndexForStrokeGroup:
visualizationManager:needsDisplayInRect:
visualizationManagerDidUpdateSessionStatus:
visualizationManagerNeedsDisplay:
visualizationNeedsDisplay:
waitForPendingRecognitionTasks
waitForPendingUpdates
wantsInputDrawings
whiteColor
whitelistMecabraRareCharacters
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
width
widthAlternativeCharacterSet
wordCombinedScores
wordID
wordIDForCandidateString:
wordLanguageModel
wordLexicalEntries
wordPatternEntries
wordRanges
wordRecognitionScores
wordStrokeSets
writeToFile
writeToFileInFolder:basename:
writeToFileWithContext:folder:basename:
writeToURL:atomically:encoding:error:
writeToURL:options:error:
writingDirectionOrderedStrokes:substrokesByStrokeIdentifier:
writingDirectionSortedStrokeIdentifiers
writingDirectionSortedSubstrokes
writingOrientation
xyRepresentation
zone
@76@0:8@16@24B32{CGRect={CGPoint=dd}{CGSize=dd}}36Q68
@16@0:8
B16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
Q16@0:8
v16@0:8
@"CHDrawing"
@"NSCharacterSet"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
I48@0:8@16I24B28^d32^v40
@40@0:8@16^@24^v32
@32@0:8@16q24
B40@0:8^{_LXLexicon=}16@24@32
@32@0:8@16^^v24
@32@0:8@16@24
@24@0:8@16
I32@0:8@16^{_LXLexicon=}24
B32@0:8@16r^{_LXLexicon=}24
d32@0:8@16@24
B24@0:8@16
@56@0:8@16^{__Mecabra=}24^{__MecabraContext=}32^v40q48
B36@0:8@16B24@28
d92@0:8@16@24@32B40B44B48@52@60^@68^@76^B84
@172@0:8@16@24^{_LXLexicon=}32^v40@48@56@64d72{_NSRange=QQ}80^d96B104B108B112q116d124q132^q140^B148^B156^B164
q32@0:8@16@24
@48@0:8@16{CGPoint=dd}24q40
@64@0:8@16{CGPoint=dd}24q40@?48@?56
v24@0:8@16
@"NSArray"
@"NSDictionary"
@24@0:8q16
@72@0:8@16@24@32q40@48@56@64
@32@0:8@16^@24
q16@0:8
@"NSNumber"
@"NSLocale"
v56@0:8^@16^@24@32@40@48
@"<CHStrokeProvider>"
@64@0:8@16@24@32@40@48@?56
@64@0:8@16{CGVector=dd}24^@40^@48^d56
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSData"
@108@0:8@16@24I32d36d44d52Q60q68{CGRect={CGPoint=dd}{CGSize=dd}}76
d16@0:8
I16@0:8
@"NSString"
@"NSIndexSet"
v20@0:8I16
v24@0:8d16
v24@0:8Q16
v24@0:8q16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSSet"
v20@0:8B16
B28@0:8@16i24
v68@0:8@16@24@32@40^@48B56^B60
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@28@0:8i16@20
i16@0:8
v20@0:8i16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@28@0:8i16@"NSLocale"20
@"NSLocale"16@0:8
@"NSCharacterSet"16@0:8
v24@0:8@"NSCharacterSet"16
@40@0:8i16i20^{__CFLocale=}24@32
@36@0:8i16@20@28
@44@0:8i16@20@28@36
@32@0:8i16i20@24
@32@0:8^@16q24
@24@0:8Q16
v32@0:8@16@24
v32@0:8^{_LXLexicon=}16^v24
v24@0:8^{_LXLexicon=}16
v24@0:8^v16
{vector<const void *, std::allocator<const void *>>=^^v^^v{__compressed_pair<const void **, std::allocator<const void *>>=^^v}}40@0:8@16@24Q32
{vector<const void *, std::allocator<const void *>>=^^v^^v{__compressed_pair<const void **, std::allocator<const void *>>=^^v}}48@0:8@16@24@32Q40
@24@0:8i16i20
@32@0:8i16i20^{__CFLocale=}24
@20@0:8i16
v40@0:8@16^{CGPoint=dd}24^{CGPoint=dd}32
@32@0:8@16^{CHCandidateResult=If}24
@40@0:8@16^{CHCandidateResult=If}24^@32
@48@0:8@16@24@32@40
d56@0:8@16@24^I32Q40^@48
d64@0:8@16@24@32@40^I48Q56
@48@0:8@16@24@32^@40
@124@0:8^v16Q24^{_LXCursor=}32^{_LXCursor=}40@48@56{_NSRange=QQ}64^v80@88q96i104q108q116
B72@0:8@16@24d32d40B48B52B56I60@64
@64@0:8r^v16@24{_NSRange=QQ}32q48@56
@72@0:8r^v16Q24^v32^v40q48q56@64
^I60@0:8@16q24B32^Q36^B44^{_NSRange=QQ}52
v40@0:8{_NSRange=QQ}16@32
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}32@0:8@16@24
@48@0:8@16@24@32@?40
@132@0:8^v16@24@32{_NSRange=QQ}40^{_LXCursor=}56^{_LXCursor=}64@72@80Q88q96B104q108q116@?124
@72@0:8^v16@24@32Q40@48q56q64
q76@0:8@16^v24^v32^v40^v48@56B64@?68
^v96@0:8^v16@24@32^v40{_NSRange=QQ}48{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}64@?88
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
d20@0:8B16
v80@0:8{vector<CHCandidateResult, std::allocator<CHCandidateResult>>=^{CHCandidateResult}^{CHCandidateResult}{__compressed_pair<CHCandidateResult *, std::allocator<CHCandidateResult>>=^{CHCandidateResult}}}16^v40r^{NetworkEdge=QQQQddQQQ}48^v56q64q72
{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long={?=b1b63}Q*}{__short={?=b1b7}[0c][23c]}{__raw=[3Q]})}}}20@0:8I16
@48@0:8@16Q24@32q40
d24@0:8@16
@40@0:8@16^@24@32
v60@0:8^@16^@24@32q40@48B56
@40@0:8@16Q24Q32
@48@0:8@16@24q32^q40
@52@0:8@16@24q32B40q44
@72@0:8@16B24@28{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}36@60B68
@44@0:8@16@24d32B40
@40@0:8@16@24@?32
v32@0:8^v16r^v24
v32@0:8^v16@24
v40@0:8^v16@24@32
v32@0:8^v16q24
@32@0:8^S16i24i28
I24@0:8@16
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGPoint=dd}24@0:8@16
{CGSize=dd}24@0:8@16
@40@0:8@16@24^v32
^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}16@0:8
v24@0:8^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}16
^v16@0:8
^{_LXLexicon=}16@0:8
{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}}16@0:8
v40@0:8{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}}16
{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}}16
^{VariantMap=^i^i^ii^iQ}16@0:8
v24@0:8^{VariantMap=^i^i^ii^iQ}16
^^v16@0:8
v24@0:8^^v16
@"CHRecognitionInsightRequest"
@"CHRecognitionInsight"
^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}
@"CHCTCRecognitionModel"
@"CVNLPCTCTextDecoder"
@"NSObject<OS_dispatch_queue>"
@"CHPatternNetwork"
@"CHRecognizerConfiguration"
^{_LXLexicon=}
@"NSMutableDictionary"
@"CHSpellChecker"
@"CHMecabraWrapper"
@"CHStringOVSChecker"
@"NSURL"
^{VariantMap=^i^i^ii^iQ}
@"NSMutableIndexSet"
@"CHPostProcessingManager"
{CGSize="width"d"height"d}
{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>="__tree_"{__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>="__value_"Q}}}
{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>="__tree_"{__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>="__value_"Q}}}
@72@0:8Q16q24q32@40{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}}48
{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}}16@0:8
@"CHClassifiableDrawing"
{set<long, std::less<long>, std::allocator<long>>="__tree_"{__tree<long, std::less<long>, std::allocator<long>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::less<long>>="__value_"Q}}}
v56@0:8^@16^@24@32@40@?48
v48@0:8@16q24q32@?40
d32@0:8d16@24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8r^v16{CGPoint=dd}24d40
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8r^v16q24B32
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8r^v16d24q32
@32@0:8@16@?24
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}24@0:8@16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}32@0:8@16@24
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}24@0:8^v16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}32@0:8r^v16d24
d40@0:8r^v16^{CGPoint=dd}24^d32
d24@0:8^v16
d32@0:8r^v16^d24
d64@0:8{CGPoint=dd}16{CGPoint=dd}32{CGPoint=dd}48
d64@0:8{CGPoint=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}48@0:8r^v16d24d32^d40
@"CHTokenizedTextResult"
@"NSError"
v656@0:8{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}}16
@24@0:8@?16
@64@0:8{CGAffineTransform=dddddd}16
@24@0:8d16
Q24@0:8Q16
{CGPoint=dd}32@0:8Q16Q24
d24@0:8Q16
@32@0:8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8Q16
f16@0:8
v32@0:8{CGPoint=dd}16
{_NSRange=QQ}24@0:8@16
{Matrix<float>=^^?^fII}32@0:8{CGSize=dd}16
{Matrix<float>=^^?^fII}32@0:8Q16Q24
@24@0:8^@16
@40@0:8{CGVector=dd}16d32
@32@0:8d16^v24
@32@0:8d16q24
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
d32@0:8d16d24
v40@0:8@16@24@32
{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}}16@0:8
{CHDrawingStrokes="strokeBounds"{vector<std::vector<double>, std::allocator<std::vector<double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>="__value_"^v}}"strokeBoundsValidity"{vector<bool, std::allocator<bool>>="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::allocator<unsigned long>>="__value_"Q}}"startTimes"{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}"endTimes"{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}"strokes"{vector<std::vector<double>, std::allocator<std::vector<double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>="__value_"^v}}"currentStrokeIndex"q"mSize"I"bitmap"{Matrix<double>="_vptr$Matrix"^^?"_data"^d"_w"I"_h"I}"lineHeight"d"sparseBitmap"{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}}
@36@0:8q16q24B32
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8q16q24@32@40
@"CHCutPoint"
@32@0:8q16@24
v88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48{CGRect={CGPoint=dd}{CGSize=dd}}56
B20@0:8i16
i24@0:8@16
i20@0:8I16
@148@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116i120i124B128q132@140
@140@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116i120i124B128q132
@132@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116B120q124
@124@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80{_NSRange=QQ}96i112q116
q24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
v40@0:8{_NSRange=QQ}16@?32
v44@0:8{_NSRange=QQ}16B32@?36
@32@0:8{_NSRange=QQ}16
{_NSRange=QQ}24@0:8q16
{_NSRange=QQ}16@0:8
^{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"CHTextInputTarget"
{_NSRange="location"Q"length"Q}
^{CGRect={CGPoint=dd}{CGSize=dd}}
v32@0:8{_NSRange=QQ}16
v48@0:8@16{_NSRange=QQ}24^{CGRect={CGPoint=dd}{CGSize=dd}}40
@64@0:8@16@24q32d40d48d56
@184@0:8@16q24q32d40d48d56{CGRect={CGPoint=dd}{CGSize=dd}}64d96{CGRect={CGPoint=dd}{CGSize=dd}}104{CGRect={CGPoint=dd}{CGSize=dd}}136@168d176
@"CHEncodedStrokeIdentifier"
v32@0:8@16d24
B32@0:8@16@24
@32@0:8@16^v24
d40@0:8@16q24q32
v40@0:8@16d24@32
v56@0:8@16d24d32d40@48
@40@0:8@16@24@32
q40@0:8@16q24q32
B48@0:8@16d24q32q40
{vector<std::map<long, long>, std::allocator<std::map<long, long>>>=^v^v{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>=^v}}16@0:8
{vector<std::map<long, long>, std::allocator<std::map<long, long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>="__value_"^v}}
B24@0:8q16
@52@0:8@16@24@32B40@44
@56@0:8@16@24@32@40@?48
@40@0:8@16^@24^@32
@"CHRecognitionSessionResult"
@40@0:8@16@?24@?32
{CGAffineTransform=dddddd}112@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGRect={CGPoint=dd}{CGSize=dd}}80
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
v80@0:8@16^{CGContext=}24{CGAffineTransform=dddddd}32
v88@0:8@16@24^{CGContext=}32{CGAffineTransform=dddddd}40
@152@0:8@16@24@32q40@48@56@64@72@80@88@96{?=ddddd}104q144
@48@0:8@16@24{CGSize=dd}32
{?=ddddd}16@0:8
@"<CHStrokeProviderVersion>"
@"CHStrokeClutterFilter"
@"CHStrokeClassificationResult"
@"CHStrokeGroupingResult"
{?="strokeClutterFilteringDuration"d"strokeClassificationDuration"d"groupingDuration"d"recognitionDuration"d"totalDuration"d}
@20@0:8B16
@56@0:8@16@24@32@40@48
@40@0:8@16^d24^B32
{?=dd}24@0:8@16
@72@0:8@16@24@32@40@48@56@64
@36@0:8@16@24B32
@"CHTextCorrectionResult"
@52@0:8@16i24@28@36q44
q40@0:8@16{_NSRange=QQ}24
v32@0:8@16q24
@40@0:8@16@24^{_NSRange=QQ}32
d32@0:8@16^d24
@40@0:8@16@24^q32
@112@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40q72d80@88{CGPoint=dd}96
@120@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88@96{CGPoint=dd}104
@128@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56q88d96@104{CGPoint=dd}112
{CGVector=dd}16@0:8
@112@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88{CGPoint=dd}96
r^{CGPath=}32@0:8@16@24
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
@56@0:8@16@24@32@40q48
@52@0:8@16@24@32@40I48
@"CHTextInputQuery"
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@168@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40@72@80{CGVector=dd}88{CGVector=dd}104@120r^v128@136d144{CGPoint=dd}152
@176@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48@80@88{CGVector=dd}96{CGVector=dd}112@128r^v136@144d152{CGPoint=dd}160
@184@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56@88@96{CGVector=dd}104{CGVector=dd}120@136r^v144@152d160{CGPoint=dd}168
@176@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48@80{CGVector=dd}88{CGVector=dd}104@120r^v128@136d144q152{CGPoint=dd}160
{CGVector=dd}24@0:8q16
^{CGPath=}48@0:8@16@24@32@40
{CGVector="dx"d"dy"d}
{vector<CGVector, std::allocator<CGVector>>="__begin_"^{CGVector}"__end_"^{CGVector}"__end_cap_"{__compressed_pair<CGVector *, std::allocator<CGVector>>="__value_"^{CGVector}}}
@40@0:8@16@24^@32
@"MLModel"
@108@0:8@16d24@32@40@48@56@64@72@80@88@96B104
@40@0:8@16d24d32
@120@0:8@16d24d32{CGPoint=dd}40i56{CGPoint=dd}60i76{CGPoint=dd}80{CGPoint=dd}96@112
@112@0:8@16d24d32{CGPoint=dd}40i56{CGPoint=dd}60i76{CGPoint=dd}80{CGPoint=dd}96
@88@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56{CGPoint=dd}72
@120@0:8@16d24d32{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72{CGPoint=dd}88{CGSize=dd}104
@88@0:8@16d24d32{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72
@72@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56
@96@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56{CGPoint=dd}72d88
^{CGColor=}32@0:8@16@24
v48@0:8@16@24@32@?40
B80@0:8@16{?=qqq}24@48q56@64^@72
B80@0:8@16{?=qqq}24@48@56q64^q72
B48@0:8@16@24q32^q40
@"CHRecognitionSession"
@"<CHVisualizationDelegate>"
v32@0:816
@"CHPointFIFO"
@36@0:8@16Q24f32
@32@0:8@16Q24
v20@0:8f16
{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}}16@0:8
v40@0:8{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}}16
{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>="__value_"^}}
68@0:8163248f64
v56@0:8{CGSize=dd}16{CGSize=dd}32d48
@?16@0:8
v24@0:8@?16
^{CGPath=}16@0:8
v24@0:8^{CGPath=}16
16@0:8
^{CGPath=}
@"<CHPointFIFODrawingTarget>"
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
{_NSRange=QQ}56@0:8{_NSRange=QQ}16q32@40@48
v56@0:8@16{_NSRange=QQ}24^B40^B48
{_NSRange=QQ}40@0:8q16@24@32
q64@0:8{CGPoint=dd}16@32^{CGRect={CGPoint=dd}{CGSize=dd}}40{_NSRange=QQ}48
B40@0:8@16@24q32
B40@0:8@16@24^B32
B40@0:8@16@24^q32
@68@0:8q16@24@32@40@48@56B64
v32@0:8^{_NSRange=QQ}16^B24
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}44@0:8{_NSRange=QQ}16B32^B36
@"CHTextInputTargetContentInfo"
@"<CHStroke>"
@64@0:8{CGPoint=dd}16@32@40@48@56
@48@0:8@16{CVNLPTextDecodingPruningPolicy=qBfI}24
@72@0:8@16{CGPoint=dd}24B40B44^v48^q56^q64
@88@0:8@16{CGSize=dd}24{CGPoint=dd}40@56^v64^@72^d80
v40@0:8@16@24@?32
B48@0:8d16@24@32@40
d40@0:8@16@24^@32
@48@0:8@16@24d32^@40
@72@0:8@16@24d32{CGPoint=dd}40B56B60^@64
^{CHCodeMap=*Q^II}16@0:8
{CVNLPTextDecodingPruningPolicy=qBfI}16@0:8
v40@0:8{CVNLPTextDecodingPruningPolicy=qBfI}16
^{CHCodeMap=*Q^II}
@"NSOrderedSet"
{CVNLPTextDecodingPruningPolicy="strategy"q"shouldSort"B"threshold"f"maxNumberOfCandidates"I}
{pair<double, double>=dd}32@0:8@16@24
q40@0:8@16@24^q32
@80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64q72
@72@0:8@16@24d32{CGRect={CGPoint=dd}{CGSize=dd}}40
@36@0:8@16B24B28B32
@48@0:8@16@24q32q40
@48@0:8@16@24q32@40
@64@0:8@16@24@32@40q48q56
@48@0:8@16@24@32q40
@56@0:8@16@24@32q40q48
@40@0:8{?=qqq}16
d32@0:8{_NSRange=QQ}16
B32@0:8{_NSRange=QQ}16
@44@0:8@16{_NSRange=QQ}24B40
@64@0:8@16{_NSRange=QQ}24B40B44^d48@?56
B32@0:8@16^B24
@40@0:8@16{_NSRange=QQ}24
{?=dd}28@0:8@16i24
d36@0:8@16@24i32
d24@0:8d16
v48@0:8@16{_NSRange=QQ}24@?40
@40@0:8@16^{_LXLexicon=}24q32
v40@0:8B16B20B24B28B32B36
Q20@0:8S16
d24@0:8S16S20
B28@0:8@16B24
@36@0:8@16B24@28
@"AppleSpell"
@"CHSpellCheckerErrorModel"
@40@0:8^v16@24@32
@24@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16
@48@0:8@16d24d32^v40
@72@0:8@16d24{CGSize=dd}32d48^d56^v64
@"CHSingletonMLModel"
@32@0:8@16d24
B40@0:8@16^v24@?32
@40@0:8@16@24q32
@128@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88@96{CGPoint=dd}104@120
@136@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56q88d96@104{CGPoint=dd}112@128
@44@0:8@16@24@32B40
d40@0:8@16@24@32
@72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^d56^d64
B40@0:8@16@24^@32
@88@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40d72d80
@96@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48d80d88
@60@0:8@16@24@32@40I48q52
@88@0:8@16@24@32@40I48q52B60@64q72@?80
@96@0:8@16@24@32@40I48q52B60@64q72@80@?88
B32@0:8q16q24
@60@0:8@16@24B32@36q44^@52
@"<CHRecognitionSessionTaskDelegate>"
@"CHStrokeClassificationModel"
@56@0:8@16@24q32^B40^@48
@56@0:8@16@24q32@?40@?48
@"<CHTextInputQueryTargetDataSource>"
v32@0:8@16@?24
@"DDScannerServiceConfiguration"
@40@0:8@16@24^{CGPath=}32
r^{CGPath=}16@0:8
r^{CGPath=}
@"DDScannerResult"
@88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56d64r^v72d80
{vector<CGPoint, std::allocator<CGPoint>>="__begin_"^{CGPoint}"__end_"^{CGPoint}"__end_cap_"{__compressed_pair<CGPoint *, std::allocator<CGPoint>>="__value_"^{CGPoint}}}
{CGAffineTransform=dddddd}16@0:8
v32@0:8{CGVector=dd}16
@"CHSubstroke"
@48@0:8@16^{CGColor=}24^{__CTFont=}32^{__CTParagraphStyle=}40
^{CGPoint=dd}64@0:8@16{CHLineSegment={CGPoint=dd}{CGPoint=dd}}24^q56
@32@0:8^{CGPoint=dd}16q24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
q48@0:8{CHLineSegment={CGPoint=dd}{CGPoint=dd}}16
^{CGPoint=dd}16@0:8
^{CGPoint=dd}
v32@0:8@"CHRemoteRecognitionRequest"16@?<v@?@"CHTokenizedTextResult"@"NSError">24
v40@0:8@"CHTokenizedTextResult"16@"CHRemoteRecognitionRequest"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
@48@0:8@16@24^@32^@40
@"NSXPCConnection"
#24@0:8@16
^{CGColor=}24@0:8q16
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@"CHVisualization"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v24@0:8@"CHVisualization"16
q24@0:8@"CHStrokeGroup"16
v24@0:8@"CHRecognitionSession"16
v28@0:8B16@20
@"<CHVisualizationManagerDelegate>"
@"NSMutableSet"
@"NSMutableArray"
@"<CHQueryDelegate>"
@"CHStrokeGroup"
@40@0:8{_NSRange=QQ}16^@32
@32@0:8d16d24
{CHTextLineStraighteningResult=@@@}32@0:8@16@?24
v48@0:8@16@24^v32@40
{CGAffineTransform=dddddd}40@0:8@16@24@?32
{CGAffineTransform=dddddd}40@0:8q16@24@?32
@?64@0:8{CGAffineTransform=dddddd}16
{vector<CoreHandwriting::BoundingBox, std::allocator<CoreHandwriting::BoundingBox>>="__begin_"^{BoundingBox}"__end_"^{BoundingBox}"__end_cap_"{__compressed_pair<CoreHandwriting::BoundingBox *, std::allocator<CoreHandwriting::BoundingBox>>="__value_"^{BoundingBox}}}
@52@0:8^{_CFBurstTrie=}16^{_LXLexicon=}24^{_LXLexicon=}32I40^?44
B24@0:8^{_LXEntry=}16
B32@0:8@16^{_LXLexicon=}24
B32@0:8@16^{_CFBurstTrie=}24
B20@0:8I16
B28@0:8I16^{_LXLexicon=}20
^{_CFBurstTrie=}
@68@0:8@16{_NSRange=QQ}24@40q48B56@60
v40@0:8@16^Q24^Q32
Q24@0:8@16
B28@0:8Q16i24
@28@0:8@16i24
^v32@0:8@16@24
B40@0:8@16@24@32
B72@0:8@16@24@32@40{_NSRange=QQ}48@64
d32@0:8@16d24
B72@0:8@16{_NSRange=QQ}24@40{_NSRange=QQ}48@64
@44@0:8i16@20i28B32B36B40
@52@0:8i16@20i28i32i36B40B44B48
r^{_LXLexicon=}24@0:8^@16
r^{_LXLexicon=}32@0:8r^{_LXLexicon=}16r^{_LXLexicon=}24
^v36@0:8@16B24@28
^v28@0:8^v16B24
@32@0:8^{_LXLexicon=}16^{_LXLexicon=}24
@120@0:8^{_LXLexicon=}16^{_LXLexicon=}24^{_LXLexicon=}32^{_LXLexicon=}40@48@56@64^v72@80@88@96^v104q112
@40@0:8^{_LXLexicon=}16^{_LXLexicon=}24@32
@40@0:8^{_LXLexicon=}16^{_LXLexicon=}24^v32
@?24@0:8@16
^?16@0:8
@32@0:8q16q24
@"<CHRecognizing>"24@0:8@"NSLocale"16
@"CHTextCorrectionRecognizer"24@0:8@"NSArray"16
@40@0:8q16@24@32
v28@0:8@16B24
v24@0:8B16B20
@48@0:8q16B24B28@32@?40
B32@0:8@16^@24
@"CHRecognitionSessionVersion"
@"<CHRecognitionSessionDataSource>"
@44@0:8@16q24B32q36
@48@0:8@16^@24^@32@?40
@64@0:8@16@24{_NSRange=QQ}32@48^{_NSRange=QQ}56
{_NSRange=QQ}40@0:8@16{_NSRange=QQ}24
@36@0:8@16B24q28
@96@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48d80@88
@96@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40d72{_NSRange=QQ}80
@72@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40
Q32@0:8@16@24
q112@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}88@104
B128@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}88^B104^d112^d120
@"<CHRecognizing>"
@"CHRecognizer"
@"CHCornerDetector"
Q20@0:8I16
{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}}16
{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}}16
{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>="__tree_"{__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>="__value_"Q}}}
{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>="__tree_"{__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>="__value_"Q}}}
{vector<CGRect, std::allocator<CGRect>>=^{CGRect}^{CGRect}{__compressed_pair<CGRect *, std::allocator<CGRect>>=^{CGRect}}}48@0:8@16{CGPoint=dd}24d40
@52@0:8@16q24@32B40@44
v76@0:8@16@24@32@40@48@56B64@?68
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@16r^v24{CGVector=dd}32^@48^v56
@40@0:8@16{CGVector=dd}24
v64@0:8^d16{CGRect={CGPoint=dd}{CGSize=dd}}24@56
v56@0:8^d16^@24@32@40@48
v64@0:8^d16^@24@32@40@48q56
q40@0:8@16@24@32
{CGVector=dd}64@0:8@16@24{CGVector=dd}32@48@56
v40@0:8^@16^{CGVector=dd}24^{CGVector=dd}32
v32@0:8@16^{CGVector=dd}24
{CGVector=dd}32@0:8{CGVector=dd}16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}44@0:8r^v16@24q32B40
B32@0:8@16^{CGVector=dd}24
d72@0:8@16@24r^v32{CGVector=dd}40{CGVector=dd}56
v36@0:8@16@24B32
d56@0:8r^v16{CGRect={CGPoint=dd}{CGSize=dd}}24
B32@0:8q16@24
q32@0:8d16q24
@"CVNLPActivationMatrix"
f24@0:8q16
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}40@0:8^v16i24f28@?32
@32@0:8^v16@24
@44@0:8@16i24d28@?36
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}24@0:8^v16
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}28@0:8@16B24
@64@0:8@16@24@32{CGPoint=dd}40q56
@56@0:8@16^v24@32q40@48
^{CGPath=}40@0:8@16^{CGPoint=dd}24@32
v56@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^d24@32q40@48
{CGAffineTransform=dddddd}64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48@56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGPoint=dd}16
@"CHRecognitionSessionIndexableContent"
@40@0:8r^v16@24@32
@56@0:8r^v16@24@32@40@48
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}16@0:8
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>="__begin_"^{CHFastGroupingCluster}"__end_"^{CHFastGroupingCluster}"__end_cap_"{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>="__value_"^{CHFastGroupingCluster}}}
@32@0:8Q16@24
v32@0:8Q16Q24
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
@32@0:8i16@20B28
@36@0:8q16@24B32
@40@0:8Q16@24@32
B40@0:8@16q24@32
@60@0:8@16@24@32@40@48B56
v28@0:8i16@20
^{__Mecabra=}16@0:8
^{__Mecabra=}
@36@0:8@16@24i32
@"CHMutableTokenizedTextResult"
@32@0:8@?16@24
v48@0:8@16@24@32@40
@80@0:8@16@24@32@40@48@56@64@72
@104@0:8i16B20B24B28@32^{_LXLexicon=}40^{_LXLexicon=}48^{_LXLexicon=}56^{_LXLexicon=}64@72^v80@88@96
@68@0:8@16B24B28^q32^d40@48@56B64
@56@0:8@16B24@28B36@40B48B52
@52@0:8@16B24@28B36@40B48
r^{_LXLexicon=}16@0:8
v24@0:8r^{_LXLexicon=}16
r^{_LXLexicon=}
@40@0:8B16B20B24B28B32B36
@40@0:8@16q24B32B36
{map<std::string, std::pair<std::string, double>, std::less<std::string>, std::allocator<std::pair<const std::string, std::pair<std::string, double>>>>="__tree_"{__tree<std::__value_type<std::string, std::pair<std::string, double>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::pair<std::string, double>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::pair<std::string, double>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::pair<std::string, double>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::pair<std::string, double>>, std::less<std::string>, true>>="__value_"Q}}}
@44@0:8@16^v24@32B40
^{__MecabraContext=}16@0:8
^{__MecabraContext=}
v40@0:8@16^B24^B32
q32@0:8@16q24
q24@0:8Q16
{_NSRange=QQ}24@0:8Q16
I32@0:8Q16^{_NSRange=QQ}24
Q32@0:8Q16@?24
17TriangleRegressor
9Regressor
10CHTriangle
FNV^f
15CHManhattanLine
6CHLine
12CHChatBubble
6MatrixIfE
6CHStar
)8YY
GSL6MatrixIdE
RRRRRR
______
?______
?______
VVVVVV
?______
?19ChatBubbleRegressor
9CHEllipse
?______
?______
?______
VVVVVV
Y^[D
4@333333
333333
@333333
@333333
333333
@333333
@333333
@333333
@ffffff
@333333
@333333
@333333
@333333
@ffffff
@ffffff
@333333
@ffffff
@333333
333333
?333333
?333333
?ffffff
15CHOutlinedArrow
11CHRectangle
12CHBasicShape
18RectangleRegressor
?^^^^^^
?7CHCloud
14CHStraightLine
12CHBezierLine
?VVVVVV
?^^^^^^
?}}}}}}
-bN5boost3qvm22zero_determinant_errorE
N5boost3qvm5errorE
9SymbolMap
333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
?333333
333333
$0tt
_meuu
VVVVVV
?7CHHeart
9999
9999
999999
99999999999999999999999999999999999
99999999999999
9999999999999999999999999999999999999999999999999999999999999999999999999999999999
999999999999999999999999999999999999
)8YY
GSLS
RRRRRR
?10CHPentagon
26CHRSketchRecognitionResult
!,7BM
v8@?0
.@#:/-_
%@%@
v32@?0@"NSString"8@"NSArray"16^B24
v24@?0^{_LXEntry=}8*16
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
!?();:
vector
CHTriangle
v16@?0@"CHTokenizedStrokeResult"8
Stroke Group Query %p
Unknown
Handwriting
 ID: %@, StableID: %@, Stroke count: %ld, type: %@
encodedStrokeIdentifier
string
strokeIndexes
wordID
recognitionScore
combinedScore
alignmentScore
properties
substrokeCount
boundsOriginX
boundsOriginY
boundsWidth
boundsHeight
 '%@', strokes: %@, substrokeCount: %ld, wordID: %d, recognitionScore: %0.4f, combinedScore: %0.4f, alignmentScore: %0.4f, rare: %@, lexicon: %@, pattern: %@, inappropriate: %@, precedingSpace: %@, original: %@, bounds: [%0.4f, %0.4f, %0.4f, %0.4f]
imgData
featureData
softmax_output
+N9mZUAHooNvMiQnjeTJ8g
.codemap
vo_en
basic_string
CHRecognitionOptionTextBefore
CHRecognitionOptionTextAfter
CHRecognitionOptionPrecedingSpaceBehavior
CHRecognitionOptionFrameContext
CHRecognitionOptionDrawingAnchorPoint
CHRecognitionOptionShouldRefineCandidates
CHRecognitionOptionInferenceCache
CHRecognitionOptionIsRunningSecondaryLocale
CHRecognitionOptionMinSizeForReliableRescaling
v36@?0I8{_NSRange=QQ}12^B28
012olzOLZ
Oval
Line
Outline Arrow
Triangle
Rectangle
Pentagon
Manhattan Line
Chat Bubble
Star
Heart
Cloud
Scribble
com.apple.CoreHandwriting
HWRTriangleAlignToAxisThreshold
HWRTriangleIsoscelesLengthRatioThreshold
HWRTriangleEquilateralLengthRatioThreshold
HWROvalFitToCircleRadiiRatioThreshold
HWROvalAlignToIncrementsOf
HWRRectangleFitToSquareLengthRatioThreshold
HWRRectangleAlignToIncrementsOf
HWROutlinedArrowAlignToIncrementsOf
HWRLineAlignToAxisThreshold
HWRLineLengthRatioThreshold
B24@?0@"CHTextRecognitionResult"8@"NSDictionary"16
v64@?0@"CHTokenizedTextResultToken"8q16{?=qqq}24{_NSRange=QQ}48
'.-/
-/._@
v28@?0r*8q16I24
d16@?0r^{NetworkEdge=QQQQddQQQ}8
d16@?0^v8
B32@?0@"CHTextRecognitionResult"8Q16^B24
d24@?0r^v8d16
'".-
%@%@%@
q24@?0@8@16
v24@?0Q8^B16
com.apple.CoreHandwriting.recognizerQueue
CHChatBubble
CHManhattanLine
PKUIPencilHoverPreviewEnabledKey
B32@?0@"<CHStroke>"8Q16^B24
v40@?0{CGPoint=dd}8d24^B32
q16@?0q8
=== Insight Request ===
  request: %@
=== Recognizer Configuration ===
  recognizerLocale: %@
  recognizerRecognitionMode: %@
  recognizerContentType: %@
  autoCapitalizationMode: %@
  autoCorrectionMode: %@
  recognizerActiveCharacterSet: %@
  recognizerMaxRecognitionResultCount: %ld
  recognizerMinimumDrawingSize: {width: %0.2f, height: %0.2f}
    %@: %@,
v32@?0@"NSString"8@"NSObject"16^B24
  recognizerOptions: %@
=== Input Drawing ===
None captured
  inputDrawing: %@
=== Text Result ===
drawingStrokes
drawingStrokesTimeStamps
%d %d %d
json
channel
data
origin: (%0.2f, %0.2f), size: (%0.2f, %0.2f)
 strokes: %lu, points: %lu, %@
%d %d
channels
dd-MM-yyyy-HH-mm-ss-SSS
/drawing_%@-%@.json
Error: Degenerated drawing (empty stroke present)
q24@?0@"CHCutPoint"8@"CHCutPoint"16
B32@?0@8Q16^B24
UIImage
Unable to find class %s
  %ld: origin: (%0.2f, %0.2f), size: (%0.2f, %0.2f)
@"NSString"24@?0@8q16
(none)
 textInputTarget: (%@), contentType: %@, textContentLength: %ld, referenceSubstring: "%@", referenceSubstringRange: %@, selectedRange: %@, isCursorStrong: %@, containsCommittedStrokes: %@, activePreviewRange: %@, strokeCoveredTextRange: %@, lastCharacterLevelPosition: %@, isSingleLine: %@, supportsAutoLineBreaks: %@, characterRectsInReferenceSubstring: {%@}, protectedCharacterIndexes: {%@}
aceimnorsuvwxz,.-_*+~<>
gjpqy
v24@?0q8^B16
v56@?0q8{CGRect={CGPoint=dd}{CGSize=dd}}16^B48
strokeIdentifier
substrokesCount
classificationAsNonText
lineOrientation
lineError
containerScore
bounds
boundsDiagonal
enlargedBounds
rotatedBounds
supportByStrokeIdentifier
support
{CGRect={CGPoint=dd}{CGSize=dd}}
<%@: %p strokeIdentifier=(%@) support=%.3f class=%ld>
strokeGroups
groupingResultsByStrategyIdentifier
groupingManagerNonText
%@, 
v32@?0@"CHEncodedStrokeIdentifier"8@"NSNumber"16^B24
v24@?0@"CHEncodedStrokeIdentifier"8^B16
B24@?0@"CHStrokeGroup"8^B16
q24@?0@"CHEncodedStrokeIdentifier"8@"CHEncodedStrokeIdentifier"16
q24@?0@"CHStrokeGroup"8@"CHStrokeGroup"16
q24@?0@"<CHStroke>"8@"<CHStroke>"16
CHTextStrokeTransformationQuery %p
CHEllipse
inputStrokeIdentifiers
sessionMode
textCorrectionResult
recognitionResultsByLocale
orderedLocales
errorsByLocale
languageFitnessByLocale
languageFitnessDictByLocale
rawScore
strokeClassificationsByStrokeIdentifier
substrokesByStrokeIdentifier
nontextCandidates
strokeProviderVersion
orderedStrokeIdentifiers
locales
preferredLocales
strokeClassificationResult
strokeGroupingResult
recognitionResults
inlineContinuousModeResults
generationDuration
recognitionEnvironment
", "
"%@"
 strokeProviderVersion: %@, locales: %@, strokeClassificationResult: %@, strokeGroupingResult: %@
  Group %ld: 
recognition: %@
textCorrection: %@
Group Results: 
@"NSString"24@?0@"CHStrokeGroup"8@"NSLocale"16
GroupID %ld, %@
== %@ ==
GroupID %ld
%@: {
<NO RESULT>
"%@"%@
<ERROR: %@>
Gen 1
Gen 2
Recognizer Generation: %@
None
(%.3f, %.3f)
Language Fitness: %@
B32@?0@"CHStrokeGroup"8Q16^B24
 Strokes: %ld, text strokes: %ld
B32@?0@"CHEncodedStrokeIdentifier"8@"NSNumber"16^B24
 Groups: %ld, created: %ld, deleted: %ld
CHSkipConfidenceFiltering
@"NSString"24@?0@"NSLocale"8q16
v32@?0@"NSLocale"8@"NSValue"16^B24
{?=dd}
v32@?0@"NSLocale"8@"NSDictionary"16^B24
v32@?0@"NSLocale"8@"NSNumber"16^B24
q24@?0@"NSString"8@"NSString"16
q24@?0@"NSLocale"8@"NSLocale"16
B32@?0@"NSLocale"8Q16^B24
B20@?0i8Q12
recognitionMode
drawing
options
minimumDrawingWidth
minimumDrawingHeight
contentType
autoCapitalizationMode
autoCorrectionMode
activeCharacterSetPerLocale
maxRecognitionResultCount
shouldUseTextReplacements
enableCachingIfAvailable
enableGen2ModelIfAvailable
enableGen2CharacterLMIfAvailable
enableStrokeReordering
hasBeenSubmitted
priority
parameterOverride
@"NSString"24@?0@"NSCharacterSet"8q16
Remote Recognition Request %p (locales=[%@], mode=%@, content type=%@, autocapitalization mode=%@, autocorrection mode=%@, option keys=%@, active character sets=[%@], drawing=%p, shouldUseTextReplacements=%@, enableCachingIfAvailable=%@, enableGen2ModelIfAvailable=%@, enableGen2CharacterLMIfAvailable=%@, _enableStrokeReordering=%@, hasBeenSubmitted=%@, priority=%ld)
General
Recognizer
RecognitionSession
StrokeGrouping
ClutterFiltering
RemoteRecognizer
TextCorrectionRecognizer
CoreHandwritingSignPosts
com.apple.corehandwriting
tokenRows
@"NSString"24@?0@"NSArray"8q16
@"NSString"24@?0@"CHTokenizedTextResultToken"8q16
[%p "%@" %.2f, %.2f]
  %@
 rows: %ld {
v32@?0@"NSArray"8Q16^B24
q24@?0@"NSArray"8@"NSArray"16
ancestorIdentifier
uniqueIdentifier
strokeIdentifiers
firstStrokeIdentifier
lastStrokeIdentifier
classification
groupingConfidence
strategyIdentifier
firstStrokeOrigin
com.apple.CoreHandwriting.StrokeGroupID
 uniqueID: %ld, ancestorID: %ld, bounds: {x: %0.1f, y: %0.1f, width: %0.1f, height: %0.1f}, strokes: %ld, strategy: %@
{CGPoint=dd}
v16@?0@"CHTextInputTargetContentInfo"8
v32@?0@8Q16^B24
inputTargetIdentifier
frameXOrigin
frameYOrigin
frameWidth
frameHeight
 ID: %@, frame: {x: %0.1f, y: %0.1f, width: %0.1f, height: %0.1f}
writingDirectionSortedStrokeIdentifiers
writingDirectionSortedSubstrokes
averageStrokeDeviation
averageWritingOrientation
localStrokeWritingOrientations
lastSubstrokeIndexBeforeMerge
coalescedLastSubstrokes
gjpqyz
B32@?0@"NSArray"8Q16^B24
v32@?0@"CHSubstrokePlacement"8Q16^B24
B32@?0@"NSIndexSet"8Q16^B24
%@-%@_%@
%@_%@
%@-%@
 Low confidence, reporting nil.
Title Query %p
com.apple.CoreHandwriting.CHSingletonMLModelQueue
class: %@ score: %3.5f string: %@
Freeform
v16@?0@"NSIndexSet"8
v32@?0{_NSRange=QQ}8^B24
Search Query %p
 strokeIdentifiers: %@
B24@?0{_NSRange=QQ}8
0x%x
v16@?0^v8
output_topk_indices
v56@?0q8q16^f24q32^B40^B48
tokenColumns
transcriptionPaths
transcriptionPathScores
recognizerGenerationIdentifier
precedingLineBreaks
changeableTokenColumns
trailingSeparator
columns
column
@"NSString"24@?0@"CHTokenizedTextResultColumn"8q16
rows
%ld %@
transcriptionPath
@"NSString"24@?0@"NSIndexPath"8q16
Column %ld %@
 %ld (%ld changeable) %@ [%@], %ld %@ 
Gen1
Gen2
v48@?0@"CHTokenizedTextResultToken"8q16{?=qqq}24
B32@?0@"CHTokenizedTextResultColumn"8Q16^B24
en_US
/result_%@-%@.dat
B32@?0@"CHTokenizedTextResult"8Q16^B24
@24@?0@"NSIndexPath"8q16
B32@?0@"NSIndexPath"8Q16^B24
abcxyz
ErrorModel
CHOutlinedArrow
input
output
/model.espresso.net
com.apple.CHStrokeClassificationModel.queue
s%d_p%d
input_stroke
input_mask
input_posenc
output_predictions
Low split score
Second group with single too short stroke (time interval = %.3f, threshold = %.3f).
Second group with single too short stroke (arc length = %.3f, threshold = %.3f).
Second group with an unfinished stroke and only a few (%li) other short strokes
Two parallel lines (err1=%.3f, err2=%.3f, ori1=%.3f, ori2=%.3f).
timeWindowStrategy
CHRecognitionTaskOverhead
com.apple.CoreHandwriting.RecognitionSessionRecognizers
B8@?0
CHRecognitionSessionLogging
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
Text Input Query %p
, error: %@
 text: '%@', itemID: %@, stableItemID: %@, type: %ld, strokes: %ld%@
v32@?0@"NSDictionary"8@"NSDictionary"16@"DDScannerResult"24
Data Detector Query %p
 strokeIdentifiers: %@, result type: %@
CHRectangle
v24@?0@"NSString"8^B16
v32@?0@"CHTokenizedTextResultToken"8Q16^B24
Prefix data Query %p for prefix %@
startTimestamp
endTimestamp
convexHull
curvature
substroke
strokeDeviation
originalWritingDirectionIndex
writingOrientation
coalescedCenter
%.10g
Helvetica-Bold
Stroke group classification: 
text
clutter
doodle
line
container
unknown
CTFontCreateWithName
CTParagraphStyleCreate
CTFramesetterCreateWithAttributedString
CTFramesetterCreateFrame
CTFrameDraw
kCTFontAttributeName
kCTForegroundColorAttributeName
kCTParagraphStyleAttributeName
{%f, %f}
v56@?0q8{CHLineSegment={CGPoint=dd}{CGPoint=dd}}16^B48
com.apple.handwritingd.remoterecognition
v16@?0@"NSError"8
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"CHTokenizedTextResult"8@"NSError"16
CHLogAllDrawings
drawing_%@_%@.json
request_%@_%@.dat
result_%@_%@.dat
CHStraightLine
CHBezierLine
StrokeBounds
SubstrokeBounds
StrokePoints
GroupBounds
Grouping
GroupClassification
GroupBaselineLegacy
GroupBaseline
NormalizedDrawing
NormalizedDrawingAll
CHStatusKeyStatus
CHStatusKeyEnvironment
CHStatusKeyLocales
CHStatusKeyLastDurationTotal
CHStatusKeyLastDurationDetailed
CHStatusStrokeCount
CHStatusKeyGroupCount
CHStatusKeyTranscript
CHStatusKeyAllResults
Stroke Bounds
Substroke Bounds
Stroke Points
Stroke Group Bounds
Stroke Groups by Color
Stroke Groups Classification
Stroke Groups Baseline (Legacy)
Stroke Groups Baseline
Normalized Drawing (Selective)
Normalized Drawing (All)
Status
Environment
Locales
Total Duration
Detailed
Stroke Count
Group Count
Transcript
Text Results
In process
Out of process
Automatic
%@ (%@)
%0.2fs
%0.2fs clutter filtering, %0.2fs Stroke class., %0.2fs Grouping, %0.2fs Recog.
%ld text, %ld non-text
Group %ld (ID: %ld)
<Status Reporting Disabled>
v32@?0@"NSNumber"8@"NSNumber"16^B24
Transcription Query %p
com.apple.CoreHandwriting.%@.Processing
Query %p
<div style="clear:both;margin:auto;font-size:250%%;" >
<p>WARNING : NOTHING WAS SAVED : YOU MUST CLICK ON THE FOLLOWING LINK !</p>
<p><a href="#" onclick="SendMail(%d);">Send via email to Antoine !</a></p>
</div>
<p>For information, here are the files you flagged:</p>
<p id="po-term%d" style="margin:0;" \>
</body>
</html>
CHPentagon
not triangulation
Cannot link edge
Zund
v32@?0@"NSString"8@"NSNumber"16^B24
num_characters
num_strokes
num_groups
majority_script
nontext_ratio
rotation_angle
time_for_straightening_ms
{CGPoint=dd}24@?0{CGPoint=dd}8
UIGraphicsBeginImageContextWithOptions
UIGraphicsGetImageFromCurrentImageContext
UIGraphicsEndImageContext
UIFont
NSFontAttributeName
UIColor
NSForegroundColorAttributeName
NSStrokeColorAttributeName
Boost QVM error
inputTarget
affectedRange
textResult
resultType
isCharacterLevel
error
Text
Encircle
Polygon
SplitJoin
Insertion Caret
<%@: %p> "%@"
 inputTargetID: %@, affectedRange: %@, resultType: %@, textResult: %@, isCharacterLevel: %@, error: %@
ctc_zh
ctc_latn
ctc_ja
ctc_ko
ctc_th
ctc_cyrl
bundle
DecodingLexiconWeight
DecodingLexiconLowerBoundLogProbability
DecodingCharacterLMWeight
DecodingCharacterLMLowerBoundLogProbability
DecodingWordLMWeight
DecodingWordLMLowerBoundLogProbability
SwapRulePreferEnglishRecognitionScoreMargin
SwapRuleAcceptableEnglishHeuristicTextScoreMargin
SwapRuleAcceptableEnglishRecognitionScoreMargin
SwapRulePreferEnglishHeuristicTextScoreMargin
SwapRuleRecognitionScoreDecisiveMargin
SwapRuleHeuristicTextScoreDecisiveMargin
SwapBlockRulePreferCyrillicHeuristicTextScoreMargin
SwapBlockRuleAcceptableCyrillicRecognitionScoreMargin
SkipLatinProbabilityThreshold
MultiCharacterOverlapped
SingleCharacter
Sketch
MultiCharacterInline
MultiCharacterInlineKeyboard
MultiCharacterCanvas
Default
Digits
PhoneNumber
Username
EmailAddress
ASCII
Equation
Words
Sentences
AllUppercase
AllLowercase
English
French
Spanish
Italian
German
Portuguese
Chinese
Cantonese
Japanese
Indonesian
Dutch
Thai
Korean
Russian
Ukrainian
SimplifiedChinese
TraditionalChinese
Roman
Cyrillic
 Recognizer configuration with mode: %@, locale: %@, contentType: %@, autoCapitalizationMode: %@, autoCorrectionMode: %@, language: %@, script: %@
zh_Hans
zh_Hant
ja_Jpan
Latn
Hans
Hant
Hrkt
Hira
Kata
Jpan
Hani
Kore
Cyrl
CoreHandwriting
experimental_latin_script
thai_support
russian_support
ukrainian_support
none
%@-%ld-%@-%@
zh_hant
com.apple.CoreHandwriting.LanguageModelLoadingQueue
v44@?0^{__CFURL=}8i16^{__CFLocale=}20^{__CFString=}28^B36
pt_BR
/System/Library/PrivateFrameworks/TextRecognition.framework/pt_BR.lm
corpus.wid
odat
P.bin
PP.bin
G.bin
R.bin
synthetics_
zh-Hans
zh-Hant
zh_compact
vo_en_compact
vo_de
vo_other
d16@?0@"CVNLPTextDecodingPath"8
Invalid empty FST line entry
File not found: (
Node[
has out degree zero but is not marked as a final node
has in degree zero but is not marked as an initial node
0x%zx
mode
version
lastRecognitionResult
sessionVersion
sessionResultVersion
Initial
Accumulating
Processing
Finished
stroke_classification.bundle
com.apple.CoreHandwriting.RecognitionSessionCanvasTaskHighResponsiveness
com.apple.CoreHandwriting.RecognitionSessionCanvasTaskSharedWorkloop
com.apple.CoreHandwriting.RecognitionSessionCanvasTaskForeground
com.apple.CoreHandwriting.RecognitionSessionCanvasTaskBackground
com.apple.CoreHandwriting.RecognitionSession
com.apple.CoreHandwriting.RecognitionSessionTextInputTaskSharedTarget
v16@?0@"<CHRecognitionSessionObserver>"8
v16@?0@"CHRecognitionSessionResult"8
B32@?0@"NSValue"8Q16^B24
time_for_recognition_ms
com.apple.CoreHandwriting.CHCharacterSetsRules
^*+=<>.,
:'"-/
apmAPM.
strdndth.
:;B=
)(pPDoOxX*
_-.+
_-.:/+&?%()$=
-/.@_
.,!?;:
!?:;
substrokePlacementsByStrokeIdentifier
vertical
horizontal
q24@?0@"CHSubstrokePlacement"8@"CHSubstrokePlacement"16
q24@?0@"CHTextLineStrokeGroup"8@"CHTextLineStrokeGroup"16
PKStrokesDrawn
PKSmartSelection
PKCopyAsText
PKSmartShapes
PKInsertSpace
PKDataDetector
PKTextLineStraightening
com.apple.corehandwriting.fast_stroke_grouping
IndexableContent Query %p
0x61a649a
0x34f55ec
0x7f7446f
0xe6b391a
0x08d4b39
0xbdde29e
0x633a6c7
0x346ff32
0xf9be5b7
0xf9dd946
0x27087b3
0x5fb9dc5
0xcf06682
0xcff9621
CHPostProcessingStepOptionAdjustColumns
es_ES
+-#*'",. 
@"CHTokenizedTextResultToken"40@?0@"CHTokenizedTextResultToken"8{?=qqq}16
Inference cache size for drawing [%@]: %lu (%@)
@24@?0@8q16
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
+=<>
`"e"d"
"& 5"
N5l\SL
NZN+N@
N*N@
 0b
'`$a$b$c$d$e$f$g$h$
minLength has to be > 0
Lexicon correction requires non-empty token string.
The prefix length should be smaller than the candidate string length
The corrected entry string length must be greater than the length of the active prefix
The token prefix should be case-sensitive equal after lexicon correction
The token prefix should be case-insensitive equal after lexicon correction
%@: beginning update for result version %@.
%@: finished update for session %p. %ld item(s) available.
Failed to get stroke with id: %@ from stroke provider version %@
The input string (%@) contains one or more ligature private code points
%@ decoding failed. Token string and stroke indexes are required to be nonnull when constructing a result token
Model execution on CPU only: %d
Model batch size: %d
Falling back to a batch size of %u for usesCPUOnly == %d
Error in MMapBinaryModel: %@ from path=%@
Error model output data format not supported: %ld
Error creating MLFeatures: %@
Error, the number of results doesn't match the model batch size (usesCPUOnly == %u)
Error, the number of results doesn't match the data batch size (usesCPUOnly == %u)
Not-a-char codepoint (U+%04x) is being added to the filtered candidate results (activeCharacterSet is nil: %d)
Error for model prediction in CHNeuralNetwork::feedforward: %@
predictionResultsPtr is nullptr
Error for model prediction in CHNeuralNetwork::feedforwardFromBatches: %@
Unexpected prediction tensor dimension: %lu
Prediction tensor must be of dimension %ld instead of %lu for batch size different from 1
predictionsPointer == nullptr
Configuration for recognizer with mode=%@ and locale=%@ is not supported.
Error loading the static lexicon: %@
Error loading the secondary static lexicon: %@
Error loading the phrase lexicon: %@
Processing input as single character drawing with %lu segments
The number of segments (%lu) must be the same as the number of sorted segment indexes (%lu)
The number of nodes in the candidate network (%lu) should match the number of generated segments (%lu)
We must add at least one candidate for each edge
Batch contains %lu non classified drawings
There must be at least one valid path
Incorrect index in segment decoding: index %ld (idx %ld + offset %ld) should be smaller than %ld, the number of segments on the group.
The recognition model must be loaded before inference can be called on it
The text decoder must be loaded before decoding can be executed
Activation matrix retrieved from inference cache for config %@ and drawing %@.
Obtaining activation matrix by model inference for config %@ and drawing %@.
BEGIN "CHActivationMatrix"
CHActivationMatrix
END "CHActivationMatrix"
BEGIN "CHDecoding"
Using the CVNLP Text Decoder
Text decoding unexpectedly leads to empty result - falling back on single-character result from the activation matrix.
CHDecoding
END "CHDecoding"
Decoder predicted string with %ld code points in single character mode, truncating results to 1 character.
The token activation range is longer than the sequence in the activation matrix.
Previous token stroke index set is empty, and current token %@ stroke index set is also empty
The first stroke index must be non-negative
CHRecognizer is running RNN recognition pipeline: %d
BEGIN "CHNextGenRecognition"
CHNextGenRecognition
END "CHNextGenRecognition"
BEGIN "CHPostProcessing"
CHPostProcessing
END "CHPostProcessing"
BEGIN "CHSegmentAndDecode"
CHSegmentAndDecode
END "CHSegmentAndDecode"
strokeProvider cannot be nil.
  Stroke provider change added %ld strokes, removed %ld strokes.
  Ignoring %ld added strokes that cannot enumerate their points.
StrokeProviderError: Inconsistency in stroke provider. Stroke with id %@ is exposed but this id can not be resolved by stroke provider version %@.
Stroke Grouping Logic Error: Failed to get stroke with id %@. The stroke is not exposed by stroke provider version %@.
retrieving stroke identifier gave nil result. Encoded stroke identifier: %@
timestep must be > 0
Stroke with no enumerable points found, recognition results may be affected. Stroke: %@
Drawing with no enumerable points found, recognition results may be affected. Drawing: %@
Removed %lu NaN-Points from %lu given points before calculating convex hull.
Removed %lu NaNs from %lu given values before calculating vector mean without outliers.
Warning: Less than %2.1f%% of the original points remain in the drawing after cleanup (before: %d, after: %d)
Error: computeSpatialFeaturesWithNoOverlapFromSparseBitmap: new bitmap size (%u) is larger than the original size (%u)
Error: computeSpatialFeaturesWithNoOverlapFromSparseBitmap: new bitmap size (%u) is equal to 0
Empty stroke detected during spatial resampling.
Error: readCharacter: filename ptr = 0
Error: readCharacter: Empty filename
Error: readCharacter: Wrong filename :%s:
Could not read data from file %@
%@ decoding failed. There was a problem decoding the stroke data.
At least one stroke index must be passed
Drawing unable to create folder at URL %@: Error %@
Drawing writeToFile saving drawing at URL %@, error = %@
Method can only be called on a single character string
isCharacterEmoji: character string doesn't match expectation of being single character with length (%lu)
isCharacterEmoji: codeCounts is 0 when data is encoded from character of length (%lu)
isCharacterEmoji: encoded data is invalid, null or empty, from character of length (%lu)
selectedTextRange %@ beyond text length %ld
activePreviewRange %@ beyond text length %ld
Invalid referenceSubstringRange %@
referenceSubstringRange %@ beyond text length %ld
Invalid referenceSubstringRange %@, length doesn't match string length %ld
The strokeCoveredTextRange %@ must be within the referenceSubstringRange %@
charRectsInReferenceSubstring cannot be NULL for referenceSubstringRange: %@
The referenceSubstring length must be equal to the range that it covers
Trying to get support for unsupported non-text candidate class.
Could not find a point in the drawing to match that in the resampled drawing
At least one stroke grouping strategy must be set.
Stroke Grouping with strategies [%@]. Added strokes: %ld, removed strokes: %ld
Use the designated initializer instead
Error: unexpected missing preferredLocale with competing locales %@, ordered locales %@, falling back on %@
There must be a preferred locale for the filtered results if there exists at least one result.
Filtering results for locale %s based on raw fitness score %.3f. (best score: %.3f, threshold: %.3f)
Filtering results for locale %s based on combined fitness score %.3f. (best score: %.3f, gap threshold: %.3f)
CHRemoteRecognitionRequest must be initialized with at least one locale
%@ decoding failed. Locale and drawing are required to be non-null and priority has to be valid.
CHRemoteRecognitionRequest unable to create folder at URL %@: Error %@
CHRemoteRecognitionRequest writeToFile saving drawing at URL %@, error = %@
The CHRemoteRecognitionRequest cannot be mutated after being submitted
hasBeenSubmitted state cannot be reverted after being set to YES
%@ decoding failed. Result token rows are required to be nonnull when constructing a request
Invalid index %ld when trying to replace a row from column with %lu rows.
Invalid index %ld when trying to remvove a row from column with %lu rows.
Cannot have nil strokeIdentifiers
No group found for stroke identifier %@, All strokes should belong to a group.
The strokes count in the drawing (%ld) must match the ones in the result (%ld).
The strokes count in the original drawing (%ld) must match the ones in the result (%ld).
Received nil target content info for target %@
Target content info is invalid, ignoring. referenceSubstring.length %ld != referenceSubstringRange.length %ld
Target content info is invalid, ignoring. selectedTextRange %@ invalid for length %ld
Target content info is invalid, ignoring. strokeCoveredTextRange %@ is not in range of referenceSubstringRange %@
Request for target content info timed out for target %@
There needs to be at least one array of token stroke identifiers to get a baseline.
There should be at least one substroke for a text line stroke group to get a baseline.
There should be at least one substroke covering one of the strokeIdentifiers.
Failed to match any substrokes with token stroke identifiers.
Token Stroke Identifiers: %@
Substroke Stroke Identifiers: %@
The number of points in the raw baseline estimate must be > 0 at this point.
Raw points[0] = %.2f, %.2f
Baseline Data detectors baseline approximation with %lu points, correction error = %.2f, number of substrokes %lu
The length of the computed path must be the same as the input
The length of the computed path must be one more than the input
%@: finished update for session %p. Length: %ld.%s
%@: finished update for session %p. Found %ld item(s).
Stroke index %ld in search result out of group stroke count %ld.
item should be of class CHSearchQueryItem: %@
CHTextInputGesture does not support the text correction type.
Gesture recognized with type %ld, range  = %ld,%ld
The affected range to be trimmed must be valid
Refined stroke ranges can only be computed for scribble, circle or polygon result types
The initial affected text range must be valid
Character range cannot be undefined.
The input string and range must be compatible with each other
Range %@ out of string length %ld
leadingExpansion cannot be negative: %ld
trailingExpansion cannot be negative: %ld
Character index %lu beyond bounds for string length: %lu
The searching range must be valid
There must be a valid character closest to the point
No characters found on either side of the vertical bar stroke
The drawing cannot be empty
The stroke covered range must be within the reference substring range
The computed character index (%li) must be valid in the string (length=%li)
An error occurred in the %@ model when extracting features: %@
An error occurred when trying to create feature provider for the %@ model: %@
An error occurred in the %@ model: %@
Unexpect rank of the CoreML output array: %lu
An error occurred in defining a new shape for the output: %@
Error in model %@. Expected output length: %lu, actual output length: %lu
Unable to initialize resultArray and create activation matrix.
An error occurred when trying to allocate feature array for the %@ model: %@
transcriptionPaths count (%ld) != scores count (%ld)
transcriptionPaths count (%ld) != probabilities count (%ld)
Found empty row when creating result with best path tokens. It indicates that the given paths don't cover the same strokes.
transcriptionPaths count (%ld) != probabilities count (%ld) after tokenized result is built
%@ decoding failed. Token columns, transcription paths, and scores are required to be nonnull and equal in size when constructing a text result
Original token not found in column %ld
The character range must be compatible with the top transcription
Error: Tokenized text result without any transcription path encountered when computing language fitness.
Found empty stroke index set for the last character segment.
TokenizedResult writeToFile saving drawing at URL %@, error = %@
Unexpected mismatched stroke indexes in result %@. Top result stroke index set contains %@. This alternative result stroke index set contains %@.
compressResult removed all columns.
Unexpected failure to find common stroke sets between top stroke sets %@ and other stroke sets %@.
Incompatible index sets have no partition of common index sets.
found an unknown stroke ID %@ to be removed in clutter filtering
clutter filter inconsistent status: %lu <==> %lu
clutter strokes: %lu, affected strokes: %lu, added strokes: %lu, removed strokes: %lu
Cannot find corresponding stroke ID given the item ID: %@
debug quicklook window MaxCell=%lu
debug quicklook window size=[%lu, %lu]
debug quicklook: grid range X=[%ld, %ld], Y=[%ld, %ld]
calling strokeIDsWithinRegionOfInterest() while clutter filter being in inconsistent status: %lu <==> %lu
An error occurred when loading a model: %@
Model not found ("%@")
Error loading Espresso model %@
Error selecting configuration %@ for Espresso model %@
Text class index not found in stroke classification codemap
Error creating queue for CHStrokeClassificationModel
Input too wide (%f): adjust with scale factor %f
An error occurred when trying to allocate the input mask array for the %@ model: %@
An error occurred when trying to allocate the input positional encodings for the %@ model: %@
Cancelling stroke classification of chunks
An error occurred in the %@ model during prediction
Unexpected number of strokes %lu to select the model configuration
Unexpected max number of points per stroke %lu to select the model configuration
Cancelling stroke classification
An error occurred in the %@ model when creating the input mask array: %@
An error occurred in the %@ model when creating the positional encodings array: %@
An error occurred selecting the espresso configuration of the %@ model
An error occurred setting the input to the %@ model
An error occurred binding the output of the %@ model
An error occurred executing the %@ model
An error occurred selecting the smallest espresso configuration of the %@ model
Stroke Grouping with strategy %@. Added strokes: %ld, removed strokes: %ld
Stroke Grouping with strategy %@ triggered with 0 strokes in the stroke provider.
Best split (%lu/%lu) has score %.3f, splitting threshold is %.3f
Best split not acceptable: %@
Attempt to create an empty stroke group.
SPLIT %lu/%lu: TS=%.3f, TT=%.3f, VD=%.3f, HD=%.3f, LT=%.3f, AR=%.3f, WD=%.3f, TF=%.3f, HS=%.3f, MH=%.3f, SC=%.3f, AL=%.3f
At least one stroke is needed to calculate accumulated time differences
Could not find stroke for id: %@
Use designated initializer instead
The preferred locales list cannot be empty.
Recognition tasks can only be executed once: %@
delegate cannot be nil when the task starts
BEGIN "CHSessionTaskGetAddedStrokes"
CHSessionTaskGetAddedStrokes
END "CHSessionTaskGetAddedStrokes"
BEGIN "CHSessionTaskStrokeClassification"
CHSessionTaskStrokeClassification
END "CHSessionTaskStrokeClassification"
Ran stroke classification in duration = %3.6f seconds
BEGIN "CHSessionTaskAccurateGrouping"
CHSessionTaskAccurateGrouping
END "CHSessionTaskAccurateGrouping"
Grouping algorithm not implemented: %ld
Recognition task almost finished, waiting for explicit overhead of %0.1fs.
strokeGroupingResult cannot be nil for a non-cancelled task.
Invalid status transition from %ld to %ld.
Recognition results for version %@:
GroupingOnly option selected. Skipping the recognition and performing grouping only.
Beginning recognizer request for stroke group %ld, locale %@
Finished recognizer request for stroke group %ld, locale %@. Duration: %0.3f
CHTokenizedTextResult is nil
Recognizer finished for stroke group %ld, duration: %0.3fs
Running remote recognition
Remote Recognition error: %@
Running local recognition
Failed to run recognition on sub-drawing after %li attempts
Remote call to compute transcription paths error: %@
Recognition successful using %li sub-drawings
results does not contain result for locale %@
%@: finished update for session %p, version %@. %ld item(s) available.
item should be of class CHTextInputQueryItem: %@
CHDataDetectorQuery._dataDetectorResultsForSessionResult: start
CHDataDetectorQuery._dataDetectorResultsForSessionResult: contextualTextResults.count = %lu
Found %lu strokes in the data detected content but only %lu strokes in the entire stroke group: %@. Found stroke indexes: %@
The last stroke index found in the data detected content (#strokes=%lu) should be within the scope of the strokeIDs array (#strokes=%lu)
CHDataDetectorQuery._dataDetectorResultsForSessionResult: detection results for group %i
CHDataDetectorQuery._dataDetectorResultsForSessionResult: found %lu items
The stroke indexes matching data detected content should be non-empty [%@]
item should be of class CHDataDetectorQueryItem: %@
item should be of class CHPrefixQueryItem: %@
CHRemoteRecognizer must be initialized with at least one locale
Remote connection to handwritingd was interrupted
Remote connection to handwritingd was invalidated
A locale is required to build the remote recognition request
An XPC proxy service error occurred: %@
Error during recognition: %@
XPC connection must be non-nil
%@ serialize drawing to %@/%@, 
%@ serialize request to %@/%@, 
%@ skipping serialization of nil drawing. Error = %@
%@ serialize recognition result to %@/%@, 
%@ skipping serialization of nil result. Error = %@
EspressoModelWrapper::~EspressoModelWrapper Error destroying model
EspressoModelWrapper::initialize Error creating context
EspressoModelWrapper::initialize Error creating plan
EspressoModelWrapper::initialize Error loading model
EspressoModelWrapper::initialize Error buidling plan
EspressoModelWrapper::destroy Error destroying plan
EspressoModelWrapper::destroy Error destroying context
EspressoModelWrapper::setInput Error setting input buffer shape
EspressoModelWrapper::setInput Error binding input buffer
EspressoModelWrapper::bindOutput Bind static buffer but output is dynamic
EspressoModelWrapper::bindOutput Error binding output buffer
EspressoModelWrapper::selectConfiguration Error cleaning current plan
EspressoModelWrapper::selectConfiguration Error selecting configuration
EspressoModelWrapper::selectConfiguration Error building Espresso plan
EspressoModelWrapper::execute Error executing model
Error: unable to mmap resource %s
Error: Index %lu out of bounds of the code map %lu symbols
Use initWithRecognitionSession: instead.
Cannot activate an already active visualization
%@: start for session %p
%@: pause
%@: result changed, will dispatch to main queue to notify the delegate.
%@: result changed, but cannot notify delegate. queryActive: %@, delegate %p.
Empty alphashape from ink with %lu strokes and %lu points.
No or empty transcription. TextLineStraightening not possible.
Empty alphashape from img.
Recognizer configuration needs to be defined
decodingCharacterLMWeight from override weights: %@
decodingWordLMWeight from override weights: %@
decodingLexiconWeight from override weights: %@
decodingLexiconLowerBoundLogProbability from override weights: %@
characterLMLowerBoundLogProbability from override weights: %@
decodingWordLMLowerBoundLogProbability from override weights: %@
shouldSkipLatinActivation from override weights: %@
Synchronization queue can not be nil when async loading language models.
Recognizer can not be nil when async loading language models.
Failed to load n-gram model from TextRecognition.framework at location %@ with error %@
Resource for transliteration map not found for locale "%@" (script=%lu, language=%lu) with resource path "%s"
Error loading model resource from path=%@
not supported
configuration locale %@, effective language %@, recognition engine %@
An error occurred when loading the CTC model %@
CHRecognizer is running rnn character language model: %d
Error when merging equivalent edges: index out of bounds
found paths with incompatible number of segments covered from %zu to %zu: previous value %lu, value for new path %zu 
Inconsistent network structure: edge with start node %zu belong in output edges of node %zu 
Unsupported Network Version %s
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 3Gram!
Error: LMLanguageModelConditionalProbabilityVector returns false in LMScoreVector 2Gram!
Error: unable to reallocate memory for path expansion.
Queue setup can only be performed once.
Configuring RecognitionSession %p with preferred locales: %@. Effective locales: %@.
stroke provider visible strokes %lu
RecognitionSession %p received needsRecognitionUpdate request. Will trigger processing soon.
dataSource %@ returned a nil strokeProviderSnapshot.
RecognitionSession %p cannot process needsRecognitionUpdate request. dataSource: %@, text recognition locales: %@.,  preferred locales: %@.
RecognitionSession %p cancelOngoingRequests. Cancelling %ld pending tasks. hasUnprocessedChanges %@->N. Last saved result for version: %@
RecognitionSession %p received request to rebuild recognition results. Stroke provider version: %@
RecognitionSession %p rebuilding recognition results. Cleared previous results. Will trigger processing soon.
RecognitionSession %p cannot process rebuildRecognitionResults request. dataSource: %@, text recognition locales: %@, preferred locales: %@.
latestStrokeProvider cannot be nil when scheduling change processing.
RecognitionSession %p enqueueing recognition task for version %@.
RecognitionSession %p canceling pending task for version %@, superseded by request for version %@.
RecognitionSession %p trying to process changes, but there are no text recognition locales. Only grouping will be performed
RecognitionSession %p starting task for version: %@.
RecognitionSession %p finished task for version: %@. Duration: %0.3fs (%0.3fs G, %0.3fs R). Groups: %ld, created: %ld, deleted: %ld.
RecognitionSession %p finished task for version: %@. Cancelled: %s. Produced result: %s.
Unimplemented
RecognitionSession %p has been serialized with preferredLocales: %@, recognitionEnvironment: %ld, priority: %ld, and lastRecognitionResult.
Last recognition result not loaded because session result version %ld does not match the current result version %ld.
RecognitionSession %p has been deserialized with preferredLocales: %@, recognitionEnvironment: %ld, priority: %ld, and lastRecognitionResult.
Nil RecognitionSession has been returned because session version %ld does not match the current session version %ld.
Requested creating in-process recognizer with %ld locales. Only the top one will be honored: %@
Visible stroke count: %lu, Ordered stroke count: %lu lastRecognitionResultIsValid: %d, _lastRecognitionResult: %p
Using last accurate results for tokenStrokeIdentifiersForContextStrokes results
Last accurate results for tokenStrokeIdentifiersForContextStrokes don't match visible strokes
Visible strokes not available in the stroke provider for fast grouping. Falling back on the ordered strokes.
Cached fast grouping line clusters not available. Computing line clusters on %lu strokes
Cached clutter filter not available. Creating new clutter filter
Using cached clutter filter for grouping query
Fast grouping duration: %2.2f seconds
Using cached fast grouping line clusters for grouping query
The tokenization level must be CHStrokeTokenizationLevelStroke to be compatible with fastGroupingResult=nil
CHStrokeTokenizationLevelStroke requested, so avoiding any clustering or grouping
Canceling tokenStrokeIdentifiersForContextStrokes request
foundStrokeIdentifiers is nil
A cached result must exist when calling _strokeIdentifiersFromCachedResultUsingContextStrokes:tokenizationLevel:
A cached result must exist when calling _contextualTextResultsFromCachedResultUsingContextStrokes:shouldCancel:
RecognitionSession %p starting high responsiveness task for version: %@.
contextualTextResultsForContextStrokes
Context results must be non-nil
The original and rescaled drawings should have equal stroke counts
The original and rescaled drawings should have equal total point counts
Expected nil or valid tokenized result as output of CHTextCorrectionRecognizer.
Invalid stroke covered range when recognizing editing gesture. %@
Cannot recognize editing gesture for drawing with %ld strokes.
Anchor point has a dummy large value, resetting to zero.
SpaceBehavior: %li
Unexpected number of token columns in text result refinement for single character mode. Expected 1 token column, got %lu
doesIntersectNoSpaceRegion: %i isContainedInPaddedNoSpaceRegion: %i
Method can only be called on a single character string: %@
Stroke group can't be nil and must be of CHTextLineStrokeGroup class.
There must be at least one substroke in the input for the coalescing algorithm.
Running stroke classification over %ld strokes
Index %ld out of bounds in normalized image for container support calculation.
Canceling agglomerative clustering results computation
%lu clusters found by the fast grouping algorithm
Canceling line cluster results computation
Fast grouping result must exist for the requested tokenization type
groupingResultForContextStrokes: %lu words found
Invalid stroke index %ld
%@: finished update for session %p. indexableContent length: %ld
%@ unexpectedly modified original tokens: "%@" -> "%@"
Number of corrected and raw tokens must match: %lu != %lu.
CHPreserveOriginalRecognitionStep is running
The best token index %ld is not contained in the returned tokens range %d, %ld
CHLexiconCorrectionStep is running with autoCapitalizationMode: %@
CHTransliterateHalfWidthPunctuationStep is running
CHOpeningClosingCharacterMatchingStep is running
CHSemanticTokenizerStep is running
wordID count %lu should match wordRangesInString count %lu
growingToken should not be nil
CHIdentifyLowAlignmentConfidenceColumnsStep is running
CHIdentifyLowAlignmentConfidenceColumnsStep unexpectedly decreased the changeable token column count.
CHCleanUpSpacesStep is running
CHCandidateRefinementStep is running
CHRemoveSpacesFromStrongURLsAndEmailsStep is running
CHRemoveSpacesFromStrongURLsStep range: %@ stringLength: %li isEmail: %i isUrl: %i
CHRemoveSpacesFromSpecialFieldsStep is running
CHRemoveSpacesFromHashtagsAndMentionsStep is running
CHRemoveSpacesFromEnglishAndKoreanParticlesStep is running
CHTransliterateChineseJapaneseStep is running
CHTransliterateConfusableCharactersStep is running
CHTransliterateIsolatedConfusableCharactersStep is running
CHReorderSCTCConfusionStep is running
CHMultiWordOVSFilteringStep is running
CHNumberFieldResultReorderingStep is running
CHMarkNoWhiteSpaceColumnsChangeableStep is running
CHJapaneseTokenizationAndConversionStep is running
At least one phrase should be returned in Mecabra tokenization and conversion step.
At least one candidate should be returned for each phrase in Mecabra tokenization and conversion step.
CHPutOriginalRecognitionResultFirstStep is running
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/CoreText.framework/CoreText
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/Frameworks/CoreText.framework/CoreText
CHClassifiableDrawing
CHLanguageUtilities
CHStrokeGroupQuery
CHStrokeGroupQueryItem
CHStrokeGroupingStrategy
SubclassesToOverride
CHEncodedStrokeIdentifier
NSCopying
NSSecureCoding
NSCoding
CHTokenizedTextResultToken
NSMutableCopying
Private
CHMutableTokenizedTextResultToken
CHTokenizedStrokeResult
CHRecognizerOptions
CHRecognizer
CHRecognizing
NSObject
Insight
CHDrawingContext
CHStrokeUtilities
CHRecognitionInsightRequest
CHRecognitionInsight
Internal
CHDrawing
CHCutPoint
CHSegmentDescriptor
CHDrawingSegmentGroup
CHStrokeGroupBaselineVisualization
CHTextInputScriptSpec
CHTextInputTargetContentInfo
CHMutableTextInputTargetContentInfo
CHNonTextCandidateStroke
CHMutableNonTextCandidateStroke
CHCornerDetector
CHMergedStrokeGroupingResults
CHStrokeGroupingManager
CHTextInputProtoSettings
CHTextStrokeTransformationQuery
CHNormalizedDrawingVisualization
CHNormalizedDrawingAllVisualization
CHRecognitionSessionResult
CHStrokeClassificationResult
CHStrokeGroupingResult
CHStrokeGroupRecognitionResult
CHStrokeGroupTextCorrectionResult
CHRemoteRecognitionRequest
CHTokenizedTextResultColumn
CHMutableTokenizedTextResultColumn
CHRecognizerResultCache
CHStrokeGroup
CHRecognitionSessionTextInputTask
CHTextInputTarget
CHTextLineStrokeGroup
CHTitleQuery
CHSingletonMLModel
CHRecognitionResult
CHTextRecognitionResult
CHSketchRecognitionResult
CHLineSketchRecognitionResult
CHManhattanLineSketchRecognitionResult
CHOutlinedArrowSketchRecognitionResult
CHRectangleSketchRecognitionResult
CHTriangleRecognitionResult
CHEllipseRecognitionResult
CHChatBubbleRecognitionResult
CHStarRecognitionResult
CHPentagonRecognitionResult
CHScribbleRecognitionResult
CHHeartRecognitionResult
CHCloudRecognitionResult
CHFreeformRecognitionResult
CHSubstrokeBoundsVisualization
CHStrokeGroupingVisualization
CHSearchQuery
CHSearchQueryItem
CHVisualization
CHPointFIFO
CHPointStrokeFIFO
CHBoxcarFilterPointFIFO
CHQuadCurvePointFIFO
CHStrokePointsVisualization
CHTextInputGesture
CHTextInputInsertionCaretGesture
CHCTCRecognitionModel
CHTokenizedTextResult
CHMutableTokenizedTextResult
CHSpellCheckerErrorModel
CHSpellChecker
CHStrokeClutterFilter
CHRecurrentNeuralNetwork
CHRecurrentNeuralNetworkCoreML
CHStrokeClassificationModel
CHTopDownStrokeSplit
CHOrderedStrokeGroup
CHTopDownStrokeGroupingStrategy
CHTimeWindowStrokeGroup
CHTimeWindowStrokeGroupingStrategy
CHRecognitionSessionTask
CHMultiLocaleResultProcessor
CHTextInputQuery
CHTextInputQueryItem
CHDataDetectorQuery
CHDataDetectorQueryItem
CHPrefixQueryItem
CHPrefixQuery
CHSubstroke
CHSubstrokePlacement
CHStrokeGroupClassificationVisualization
CHPolygon
CHStrokeGroupBasedVisualization
CHRemoteRequestProtocol
CHRemoteRecognizer
CHVisualizationManager
CHStrokeGroupBasedVisualizationDelegate
CHVisualizationDelegate
CHRecognitionSessionObserver
CHTranscriptionQuery
CHQuery
RecognitionSessionObserver
ForSubclasses
CHContextualTextResult
CHContextualTextResults
CHTextLineStraightener
CHStringOVSChecker
CHTextCorrectionResult
CHRecognizerConfiguration
CHStrokeVisualization
CHGroupBoundsVisualization
CHRecognitionSessionVersion
CHRecognitionSession
CHRecognitionSessionTextInputTaskDelegate
CHRecognitionSessionTaskDelegate
CHTextCorrectionRecognizer
CHCharacterSetRules
CHBottomUpStrokeGroupingResult
CHBottomUpStrokeGroupingStrategy
MutableCopying
CHMutableStrokeClassificationResult
CHStrokeClassifier
CHActivationMatrix
CHFastStrokeGroupingStrategy
CHStrokeGroupBaselineLegacyVisualization
CHIndexableContentQuery
CHRecognitionSessionIndexableContent
CHStrokeFastGroupingResult
NetworkCursor
CHPatternNetwork
CHContextualCharacterTransliteration
CHMecabraWrapper
CHResultWithContext
CHPostProcessingManager
CHPostprocessingStep
CHPostprocessingStepModifyingOriginalTokens
CHTextFieldTypeSwitchStep
CHPreserveOriginalRecognitionStep
CHLexiconCorrectionStep
CHTransliterateHalfWidthPunctuationStep
CHOpeningClosingCharacterMatchingStep
CHSemanticTokenizerStep
CHIdentifyLowAlignmentConfidenceColumnsStep
CHCleanUpSpacesStep
CHCandidateRefinementStep
CHRemoveSpacesFromStrongURLsAndEmailsStep
CHRemoveSpacesFromSpecialFieldsStep
CHRemoveSpacesFromHashtagsAndMentionsStep
CHRemoveSpacesFromEnglishAndKoreanParticlesStep
CHTransliterateChineseJapaneseStep
CHTransliterateConfusableCharactersStep
CHTransliterateIsolatedConfusableCharactersStep
CHReorderSCTCConfusionStep
CHMultiWordOVSFilteringStep
CHNumberFieldResultReorderingStep
CHMarkNoWhiteSpaceColumnsChangeableStep
CHJapaneseTokenizationAndConversionStep
CHCyrillicAddAlternativeScriptCandidatesStep
CHCyrillicRecoverConfusableWordsStep
CHPutOriginalRecognitionResultFirstStep
CHRecognizerInferenceCache
CoreHandwriting
CHExtensions
CGImage
.cxx_destruct
T@"<CHStroke>",R,N,V_lastStroke
JSONObjectWithData:options:error:
T@"CHStrokeClassificationResult",&,V_strokeClassificationResult
T@"<CHPointFIFODrawingTarget>",&,N,V_drawingTarget
T@"NSArray",C,N
T@"<CHRecognitionSessionDataSource>",N,V_dataSource
T@"NSObject<OS_dispatch_queue>",R,N,V__tasksWorkQueueBackground
T@"<CHRecognitionSessionTextInputTaskDelegate>",D,N
T@"NSSet",R,C,N
T@"<CHStrokeGroupBasedVisualizationDelegate>",W,D,N
T@"NSString",R,N,V_resourcePath
T@"<CHStrokeProvider>",&,S_setLatestStrokeProvider:
TB,N,V_shouldCreatePseudoTokens
T@"<CHStrokeProvider>",R
TB,N,V_unlikelyHasLatinContents
T@"<CHStrokeProviderVersion>",C,V_lastProcessedStrokeProviderVersion
TB,R,N,V_supportsAutoLineBreaks
T@"<CHTextInputQueryTargetDataSource>",W,V_textInputTargetsDataSource
T^v,R,N,V_model
T@"<CHVisualizationManagerDelegate>",N,V_delegate
Td,N,V_preferredUpdatesInterval
T@"CHClassifiableDrawing",R,N,V_classifiableDrawing
Ti,R,N,V_autoCapitalizationMode
T@"CHCutPoint",R,N,V_endCutPoint
Tq,R,N,V_recognitionEnvironment
T@"CHDrawing",&,N,V_drawing
T{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}},R,N,V_fastGroupingClusters
T@"CHDrawing",C,N,V_cachedDrawing
__stringCodeMap
T@"CHDrawing",C,N,V_inputDrawing
_affectedRangeByTrimmingSpaces:
T@"CHDrawing",R,N
_applyDefaultGroupingParameters
T@"CHDrawing",R,N,V_normalizedDrawing
_autoLineBreakRequireWeakCursor
T@"CHEncodedStrokeIdentifier",R,N,V_firstStrokeIdentifier
_bounds
T@"CHEncodedStrokeIdentifier",R,N,V_strokeIdentifier
_center
T@"CHMecabraWrapper",R,N,V_mecabraWrapper
_characterLevel
T@"CHPatternNetwork",&,N,V_patternFST
_characterType:
T@"CHPointFIFO",&,N,V_nextFIFO
_columnStrokeSetsFromTokenRows:
T@"CHPostProcessingManager",&,N,V_defaultProcessor
_contextResults
T@"CHPostProcessingManager",&,N,V_emailProcessor
_cornerDetector
T@"CHPostProcessingManager",&,N,V_mergedResultPostProcessor
_currentProcessingSessionResult
T@"CHPostProcessingManager",&,N,V_postProcessor
_emailAtCharSet
T@"CHPostProcessingManager",&,N,V_usernameProcessor
_engine
T@"CHRecognitionInsightRequest",&,N,V_insightRequest
_errorsByLocale
T@"CHRecognitionSessionIndexableContent",&,S_setIndexableContent:,V_indexableContent
_freeformEngine
T@"CHRecognitionSessionResult",&,N,V_resultDrawn
_inferenceCount
T@"CHRecognitionSessionResult",R
_isCursorStrong
T@"CHRecognitionSessionResult",R,N,V_sessionLastResult
_lineBreakVerticalBarUpToDelete
T@"CHRecognitionSessionVersion",R
_locale
T@"CHRecognizerConfiguration",&,N,S_setConfiguration:,V_configuration
_maxResultCount
T@"CHSpellChecker",&,N,V_spellChecker
_newStrokeGroupUniqueIdentifier
T@"CHStringOVSChecker",&,N,V_ovsStringChecker
_orderedStrokes
T@"CHStrokeClassificationResult",R,N,V_strokeClassificationResult
_points
T@"CHStrokeGroup",&,N,V_strokeGroup
_rawLanguageFitnessForTranscriptionPath:locale:recognitionMode:
T@"CHStrokeGroupingResult",R,N,V_strokeGroupingResult
_reorderStrokes
T@"CHTextCorrectionResult",R,N,V_correctionResult
_safelyUnloadEngineAndResources
T@"CHTextInputQuery",W,N
_sessionVersion
T@"CHTextInputTarget",R,N,V_inputTarget
_startTimestamp
T@"CHTextInputTargetContentInfo",R,N,V_targetContentInfo
_string
T@"CHTokenizedTextResult",&,N,V_textResult
_strokeClassificationLastResult
T@"CHTokenizedTextResult",R,N,V_textResult
_substrokeCount
T@"CVNLPCTCTextDecoder",&,N,V_textDecoder
_textClassIndex
T@"MLModelConfiguration",R,N
_textRecognizer
T@"NSArray",&,N,V_sequence
_transitionTime
T@"NSArray",&,S_setLatestTextInputTargets:,V__latestTextInputTargets
_upperLeftPoint
T@"NSArray",&,V_contextStrokes
_wordID
T@"NSArray",C,N,S_setAvailableItems:,V_availableItems
activationRange
T@"NSArray",C,N,S_setStrokeGroupItems:,V_strokeGroupItems
arrayWithArray:
T@"NSArray",C,N,V_locales
coalescedCenter
T@"NSArray",N,V_characterTransliterations
compressResult:atColumnIndexes:
T@"NSArray",R,C,N,V_inputStrokeIdentifiers
containsString:
T@"NSArray",R,C,N,V_preferredLocales
convexHullForStrokes:inDrawing:
T@"NSArray",R,C,N,V_strokeIdentifiers
countForObject:
T@"NSArray",R,C,N,V_transcriptionPathScores
currentProgress
T@"NSArray",R,N,V_initialTextInputTargets
distStd
T@"NSArray",R,N,V_locales
drawingWithStrokesFromIndexSet:
T@"NSArray",R,N,V_modelConfigurationsNumStrokes
endEndpointType
T@"NSArray",R,N,V_orderedStrokes
fillWithNumber:
T@"NSArray",R,N,V_orderedStrokesGroup2
gapFeatureIndex
T@"NSArray",R,N,V_segments
indexForSegmentID:fromSegments:
T@"NSArray",R,N,V_strokeGroup2
initWithLocale:
T@"NSArray",R,N,V_textInputTargets
initWithString:
T@"NSArray",R,V_pathPoints
initWithStrokeProvider:strokeClassificationLastResult:textOnly:
T@"NSArray",R,V_wordIDs
isEmpty
T@"NSArray",R,V_wordPatternEntries
isEqualToDataDetectorQueryItem:
T@"NSArray",R,V_wordRecognitionScores
isProxy
T@"NSCharacterSet",&,N
isString:fullPattern:inNetwork:
T@"NSCharacterSet",&,N,V_activeCharacterSet
locales
T@"NSCharacterSet",&,N,V_alphaNumericCharSet
lowercaseString
T@"NSCharacterSet",&,N,V_backwardLookingCharacterSet
mecabra
T@"NSCharacterSet",&,N,V_closingQuoteCharacters
modelNameKorean
T@"NSCharacterSet",&,N,V_consumableStrokesCharSet
newSpellChecker
T@"NSCharacterSet",&,N,V_containsTwoDotsCharSet
numberWithBool:
T@"NSCharacterSet",&,N,V_currencySymbols
options
T@"NSCharacterSet",&,N,V_dateTimeSeparatorCharSet
pointForStrokeIndex:pointIndex:
T@"NSCharacterSet",&,N,V_digitEndPunctuationCharSet
processingQueue
T@"NSCharacterSet",&,N,V_emailAtCharSet
q_sessionResult
T@"NSCharacterSet",&,N,V_emoticonBottomCharSet
recognitionMode
T@"NSCharacterSet",&,N,V_emoticonTopCharSet
refineLocalWritingOrientationsForSubstrokes:useCoalescedCenter:
T@"NSCharacterSet",&,N,V_endOfWordPunctuationCharSet
remapAllStrokeIndexesWithArray:
T@"NSCharacterSet",&,N,V_fullWidthPunctuationThatExpectsUppercaseAfter
scanString:range:configuration:
T@"NSCharacterSet",&,N,V_lowercaseCharSet
setActivations:
T@"NSCharacterSet",&,N,V_nonSpaceSeparatorCharSet
setBackwardLookingCharacterSet:
T@"NSCharacterSet",&,N,V_openingBracketCharacters
setEndOfWordPunctuationCharSet:
T@"NSCharacterSet",&,N,V_prefixCapitalizationExceptionCharSet
setLastCharacterSegmentIndexes:
T@"NSCharacterSet",&,N,V_punctuationThatNeedSpaceCleanup
setPatternType:
T@"NSCharacterSet",&,N,V_sentenceStartPunctuationInSpanish
setResultDrawn:
T@"NSCharacterSet",&,N,V_symbolsRequiringSpaceBeforeInFrench
setSpotlightSuggestionsEnabled:
T@"NSCharacterSet",&,N,V_uppercaseCharSet
setTerminatingSpecialCharacter:
T@"NSCharacterSet",&,N,V_widthAlternativeCharacterSet
setTextResults:
T@"NSCharacterSet",C,N,V_recognizerActiveCharacterSet
set_registeredAsChangeObserver:
T@"NSCharacterSet",R,N,V_requiredLeftContext
shiftIndexesStartingAtIndex:by:
T@"NSData",R,N
shouldApplySemanticTokenization
T@"NSDictionary",&,D,N
shouldIdentifyChangeableColumns
T@"NSDictionary",&,N,V_textReplacements
shouldRecoverCyrillicCandidates
T@"NSDictionary",C,N,V_activeCharacterSetPerLocale
spacing
T@"NSDictionary",C,N,V_parametersOverride
stringByAppendingPathComponent:
T@"NSDictionary",R,C,N
stringFromDate:
T@"NSDictionary",R,C,N,V__recognitionResultsByGroupID
strokeGroupType
T@"NSDictionary",R,C,N,V__tokenizedTextResultsByLocale
strokeIndexesForColumnsInRange:
T@"NSDictionary",R,C,N,V_errorsByLocale
substrokeCount1
T@"NSDictionary",R,C,N,V_strokeClassificationsByStrokeIdentifier
substrokesCount
T@"NSDictionary",R,N,V_classCounts
textInputTarget
T@"NSDictionary",R,N,V_groupingResultsByStrategyIdentifier
unionStrokeBounds:aroundXPosition:usingOneSideStrokeCountLimit:
T@"NSDictionary",R,N,V_substrokePlacementsByStrokeIdentifier
updateLocalWritingOrientationsForSubstrokes:useCoalescedCenter:
T@"NSError",C,N,V_recognitionError
uppercaseString
T@"NSIndexSet",C,D,N
valueWithRange:
T@"NSIndexSet",R,C,N,V_strokeIndexes
vertex2
T@"NSIndexSet",R,V_inappropriateWordIndexes
visibleStrokeEncodedIdentifiers
T@"NSLocale",&,N,V_locale
.cxx_construct
T,N,V_lastPoint
CJKPairedPunctuationsCharSet
T@"CHStrokeClassificationModel",R,N,V_strokeClassificationModel
T#,R
T@"CHSubstroke",R,N,V_substroke
T@"<CHQueryDelegate>",W,N,V_delegate
T@"NSArray",R,N
T@"<CHRecognitionSessionTaskDelegate>",N,V_delegate
T@"NSObject<OS_dispatch_queue>",R,N,V__tasksWorkQueueForeground
T@"<CHRecognizing>",R,N,V__textRecognizer
T@"NSString",R,C,N,V_correction
T@"<CHStrokeProvider>",&,N,V__strokeProviderDrawn
TB,N,V_enableCachingIfAvailable
T@"<CHStrokeProvider>",&,V_strokeProvider
TB,N,V_shouldUseDynamicSampling
T@"<CHStrokeProvider>",R,N,V_strokeProvider
TB,R,N,V_isInlineContinuousMode
T@"<CHStrokeProviderVersion>",R,N,V_strokeProviderVersion
TI,R,N,V_wordID
T@"<CHVisualizationDelegate>",W,N,V_delegate
Td,N,V_distMean
T@"CHCTCRecognitionModel",&,N,V_recognitionModel
Td,R,V_rotation
T@"CHCornerDetector",R,N,V__cornerDetector
Tq,N,V_priority
T@"CHCutPoint",R,N,V_startCutPoint
T{CGPoint=dd},R,V_startLocation
T@"CHDrawing",&,N,V_strokes
__hasCompleteRecognitionResults
T@"CHDrawing",C,N,V_drawing
_addVisualizationForIdentifier:
T@"CHDrawing",R,C,N,V_resampledDrawing
_alignmentScore
T@"CHDrawing",R,N,V_drawing
_asciiProcessor
T@"CHDrawing",R,N,V_originalDrawing
_availableItems
T@"CHEncodedStrokeIdentifier",R,N,V_lastStrokeIdentifier
_boundsDiagonal
T@"CHMecabraWrapper",&,N,V_mecabraWrapper
_characterIDMap
T@"CHMutableTokenizedTextResult",&,N,V_result
_characterProbabilityOutputName
T@"CHPatternNetwork",&,N,V_postProcessingFST
_classification
T@"CHPostProcessingManager",&,N,V_asciiProcessor
_containerScore
T@"CHPostProcessingManager",&,N,V_digitProcessor
_contextStrokes
T@"CHPostProcessingManager",&,N,V_equationProcessor
_cornerIndexSet
T@"CHPostProcessingManager",&,N,V_phoneProcessor
_digitProcessor
T@"CHPostProcessingManager",&,N,V_urlProcessor
_emailProcessor
T@"CHRecognitionInsight",R,N
_enlargedBounds
T@"CHRecognitionSession",R,N,V_recognitionSession
_extractFeaturesFromDrawing:inputName:interpointDistance:error:
T@"CHRecognitionSessionResult",&,N,S_setOutputResult:,V_outputResult
_groupingStrategiesByIdentifier
T@"CHRecognitionSessionResult",&,S_setLastRecognitionResult:
_insightRequest
T@"CHRecognitionSessionResult",R,N,V_inputResult
_itemIdentifier
T@"CHRecognitionSessionVersion",&,S_setSessionVersion:
_localStrokeWritingOrientations
T@"CHRecognizer",R,N,V__shapeRecognizer
_lowerLeftPoint
T@"CHSingletonMLModel",R,N,V_model
_mecabraWrapper
T@"CHSpellCheckerErrorModel",&,N,V_errorModel
_orderedLocales
T@"CHStrokeClassificationResult",R,N,V_strokeClassificationLastResult
_phoneProcessor
T@"CHStrokeClutterFilter",R,N,V_clutterFilter
_prefix
T@"CHStrokeGroupingResult",&,V_strokeGroupingResult
_recognizerGenerationIdentifier
T@"CHTextCorrectionResult",R,C,N,V_textCorrectionResult
_result
T@"CHTextInputQuery",&,N,V_activeTextInputQuery
_script
T@"CHTextInputTarget",&,D,N
_setFoundItems:
T@"CHTextInputTarget",R,N,V_textInputTarget
_status
T@"CHTokenizedTextResult",&,N,V__textResult
_stringForCode:
T@"CHTokenizedTextResult",C,N,V_textResult
_strokeProvider
T@"CVNLPActivationMatrix",&,N,V_activations
_subwordGestureEndingSpeedRange
T@"DDScannerResult",R,N,V_dataDetectorResult
_textCorrectionResultsByGroupID
T@"MLModelDescription",R,N
_tokenizedTextRecognitionResultForDrawing:options:shouldCancel:
T@"NSArray",&,N,V_textResults
_updateRecognitionSessionStatus
T@"NSArray",&,V_contextResults
_whitelistMecabraRareCharacters
T@"NSArray",C,D,N
_wordStrokeSets
T@"NSArray",C,N,S_setFoundItems:,V_foundItems
allKeys
T@"NSArray",C,N,S_setTextRecognitionLocales:,V__textRecognitionLocales
characterRectForCharacterIndex:
T@"NSArray",C,N,V_preferredLocales
codeMap
T@"NSArray",R,C,N
containsObject:
T@"NSArray",R,C,N,V_locales
contextualTextResultsForContextStrokes:completion:shouldCancel:
T@"NSArray",R,C,N,V_recognitionLocales
countCodepoints
T@"NSArray",R,C,N,V_tokenRows
currencySymbols
T@"NSArray",R,C,N,V_transcriptionPaths
dealloc
T@"NSArray",R,N,V_inputNames
drawing
T@"NSArray",R,N,V_modelConfigurationsNumPoints
emissionHandler
T@"NSArray",R,N,V_orderedStrokeIdentifiers
endOfSentencePunctuationCharSet
T@"NSArray",R,N,V_orderedStrokesGroup1
forcedGen2ModelLocaleForLocale:
T@"NSArray",R,N,V_outputNames
handleChineseLigaturesInString:
T@"NSArray",R,N,V_strokeGroup1
initWithLanguageResourceBundle:
T@"NSArray",R,N,V_subjectStrokeIdentifiers
initWithModelName:featureIndex:
T@"NSArray",R,N,V_writingDirectionSortedStrokeIdentifiers
initWithString:score:rotation:center:size:controlPointLocation:
T@"NSArray",R,V_wordCombinedScores
initWithTransliterateSentences:
T@"NSArray",R,V_wordLexicalEntries
isEqualToArray:
T@"NSArray",R,V_wordRanges
isPathOriginal:
T@"NSArray",R,V_wordStrokeSets
isStartOfStroke
T@"NSCharacterSet",&,N,V_CJKPairedPunctuationsCharSet
isValid
T@"NSCharacterSet",&,N,V_allowedCharacters
lowerRightPoint
T@"NSCharacterSet",&,N,V_arithmeticOperatorCharSet
maxRequestStrokeCountForLocale:
T@"NSCharacterSet",&,N,V_closingBracketCharacters
minimumSignificantSegmentLength
T@"NSCharacterSet",&,N,V_commonJapaneseSymbols
multiArrayValue
T@"NSCharacterSet",&,N,V_containsDotCharSet
T@"NSCharacterSet",&,N,V_contextInvariantCharacterSet
numberWithLong:
T@"NSCharacterSet",&,N,V_dateTimeEndLetterCharSet
originalDrawing
T@"NSCharacterSet",&,N,V_digitCharSet
preferredLocale
T@"NSCharacterSet",&,N,V_digitStartPunctuationCharSet
punctuationThatNeedSpaceCleanup
T@"NSCharacterSet",&,N,V_emailPunctuationCharSet
rareWordIndexes
T@"NSCharacterSet",&,N,V_emoticonMiddleCharSet
recognitionType
T@"NSCharacterSet",&,N,V_endOfSentencePunctuationCharSet
release
T@"NSCharacterSet",&,N,V_forwardLookingCharacterSet
resultRestoringRawPathInResult:
T@"NSCharacterSet",&,N,V_lexiconSkipCharSet
T@"NSCharacterSet",&,N,V_middlePunctuationCharSet
setActiveCharacterSetPerLocale:
T@"NSCharacterSet",&,N,V_numeralEndLetterCharSet
setContentType:
T@"NSCharacterSet",&,N,V_openingQuoteCharacters
setGestureType:
T@"NSCharacterSet",&,N,V_punctuationThatExpectsUppercaseAfter
setLeftContext:
T@"NSCharacterSet",&,N,V_selfLoopPunctuationCharSet
setQueryString:
T@"NSCharacterSet",&,N,V_startPunctuationCharSet
setShouldKeepDuplicateTokenIDs:
T@"NSCharacterSet",&,N,V_symmetricQuoteCharacters
setStrokeGroup:
T@"NSCharacterSet",&,N,V_urlPunctuationCharSet
setTextDecoder:
T@"NSCharacterSet",C,N,V_koreanParticlesCharSet
setWithObjects:
T@"NSCharacterSet",R,N,V_characterSet
set_textResult:
T@"NSCharacterSet",R,N,V_requiredRightContext
shouldApplyDiacriticSensitivity
T@"NSData",R,N,V_encodedStrokeIdentifier
shouldComposeLexiconWithNetwork
T@"NSDictionary",&,N,V_characterReplacements
shouldPruneMixedScriptWordPaths
T@"NSDictionary",C,N,S_setStrokeGroupItemsByID:,V_strokeGroupItemsByID
smoothLocalWritingOrientations:
T@"NSDictionary",C,N,V_options
strides
T@"NSDictionary",C,N,V_recognizerOptions
stringByAppendingPathExtension:
T@"NSDictionary",R,C,N,V__errorsByLocale
strokeDeviation
T@"NSDictionary",R,C,N,V__textCorrectionResultsByGroupID
strokeIDsWithinRectangleRegion:
T@"NSDictionary",R,C,N,V_activeCharacterSetPerLocale
strokes
T@"NSDictionary",R,C,N,V_recognitionResultsByLocale
substrokeCount2
T@"NSDictionary",R,C,N,V_substrokesByStrokeIdentifier
support
T@"NSDictionary",R,N,V_featureCounts
tokenizedStrokeResultForInitialStrokes:point:tokenizationLevel:
T@"NSDictionary",R,N,V_groupingStrategiesByIdentifier
updateActivationsWithActiveCharacterSet:resultArray:indexArray:
T@"NSDictionary",R,N,V_supportByStrokeIdentifier
upperRightPoint
T@"NSError",R,N,V_error
valueWithPoint:
T@"NSIndexSet",R,C,N,V_protectedCharacterIndexes
vertex1
T@"NSIndexSet",R,N
vertex3
T@"NSIndexSet",R,V_rareWordIndexes
wordIDs
T@"NSLocale",C,N
T@"NSLocale",C,N,V_recognizerLocale
T@"NSLocale",R,C,N
T@"NSLocale",R,C,N,V_locale
T@"NSLocale",R,C,N,V_preferredLocale
T@"NSLocale",R,N,V_locale
T@"NSMutableArray",&,V_correctionAngles
T@"NSMutableArray",R,N,V__activeTasks
T@"NSMutableArray",R,N,V__activeVisualizationIDs
T@"NSMutableArray",R,N,V__changeObservers
T@"NSMutableArray",R,N,V__inputDrawingClients
T@"NSMutableDictionary",&,N,V_textReplacementLowercasedKeyMapping
T@"NSMutableDictionary",R,N,V__activeVisualizationsByID
T@"NSMutableDictionary",R,N,V__correctionRecognizersByLocalesKey
T@"NSMutableDictionary",R,N,V__recognizersByLocaleID
T@"NSMutableDictionary",R,N,V__strokeGroupIndexByAncestorID
T@"NSMutableIndexSet",&,N,V_lastCharacterSegmentIndexes
T@"NSMutableIndexSet",R,C,N,V__cornerIndexSet
T@"NSMutableIndexSet",R,C,N,V__directionChangeCornerIndexes
T@"NSMutableSet",R,N,V__enabledVisualizationIDs
T@"NSNumber",R,C,N,V_inputTargetIdentifier
T@"NSNumber",R,N,V_itemIdentifier
T@"NSNumber",R,N,V_itemStableIdentifier
T@"NSNumber",R,N,V_segmentID
T@"NSNumber",R,N,V_strokeGroupIdentifier
T@"NSNumber",R,N,V_strokeGroupStableIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_recognitionQueue
T@"NSObject<OS_dispatch_queue>",R,N
T@"NSObject<OS_dispatch_queue>",R,N,V__charSetRulesQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__highResponsivenessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__recognizersQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__sessionQueue
T@"NSOrderedSet",R,V__stringCodeMap
T@"NSSet",C,N
T@"NSSet",C,N,V_activeStrokeGroupAncestorIdentifiers
T@"NSSet",C,N,V_forceRecognitionStrokeGroupIdentifiers
T@"NSSet",R,C,N,V_createdStrokeGroups
T@"NSSet",R,C,N,V_deletedStrokeGroups
T@"NSSet",R,C,N,V_nontextCandidates
T@"NSSet",R,C,N,V_strokeGroups
T@"NSSet",R,C,N,V_strokeIdentifiers
T@"NSSet",R,C,N,V_titleStrokeIdentifiers
T@"NSSet",R,N,V_strokeIdentifiers
T@"NSString",&,N,V_leftContext
T@"NSString",&,N,V_terminatingSpecialCharacter
T@"NSString",C,D,N
T@"NSString",C,N,V_queryString
T@"NSString",R,C
T@"NSString",R,C,N
T@"NSString",R,C,N,V_confusion
T@"NSString",R,C,N,V_indexableTextRepresentation
T@"NSString",R,C,N,V_prefix
T@"NSString",R,C,N,V_presentableTextRepresentation
T@"NSString",R,C,N,V_referenceSubstring
T@"NSString",R,C,N,V_string
T@"NSString",R,C,N,V_trailingSeparator
T@"NSString",R,C,N,V_transcribedTitle
T@"NSString",R,N
T@"NSString",R,N,V_characterProbabilityOutputName
T@"NSString",R,N,V_directionalFeaturesInputName
T@"NSString",R,N,V_modelKey
T@"NSString",R,N,V_modelName
T@"NSString",R,N,V_modelSmallestConfig
T@"NSString",R,N,V_queryResult
T@"NSString",R,N,V_strategyIdentifier
T@"NSString",R,V_string
T@"NSURL",&,N,V_learningDictionaryURL
T@"NSXPCConnection",R,N,V__connection
T@?,C,N,V_partialResultBlock
T@?,C,V_emissionHandler
TB,D,N
TB,N
TB,N,S_setHasUnprocessedChanges:,V__hasUnprocessedChanges
TB,N,V__queryActive
TB,N,V__registeredAsChangeObserver
TB,N,V__registeredAsInputDrawingsClient
TB,N,V_capitalizationToSplit
TB,N,V_caseMatchingOnly
TB,N,V_convertToLowercase
TB,N,V_emitInterpolatedPoints
TB,N,V_enableGen2CharacterLMIfAvailable
TB,N,V_enableGen2ModelIfAvailable
TB,N,V_enableStrokeReordering
TB,N,V_fullWordsOnly
TB,N,V_hasBeenSubmitted
TB,N,V_normalizeFeatures
TB,N,V_saveInputDrawings
TB,N,V_servesBackgroundIndexation
TB,N,V_shouldAddAlternatives
TB,N,V_shouldAutoCapitalize
TB,N,V_shouldAutoCorrect
TB,N,V_shouldKeepAlternativeLengths
TB,N,V_shouldKeepDuplicateTokenIDs
TB,N,V_shouldKeepOriginalSpelling
TB,N,V_shouldKeepOutOfLexiconAlternatives
TB,N,V_shouldKeepOutOfPatternCandidates
TB,N,V_shouldKeepSubstrings
TB,N,V_shouldUseTextReplacements
TB,N,V_statusReportingEnabled
TB,N,V_strokeGroupingOnly
TB,N,V_transliterateSentences
TB,R
TB,R,N
TB,R,N,GisCharacterLevel,V_characterLevel
TB,R,N,V_autoLineBreakEnabled
TB,R,N,V_autoLineBreakRequireWeakCursor
TB,R,N,V_containsCommittedStrokes
TB,R,N,V_enableCachingIfAvailable
TB,R,N,V_enableGen2CharacterLMIfAvailable
TB,R,N,V_enableGen2ModelIfAvailable
TB,R,N,V_expandCodePoints
TB,R,N,V_isCursorStrong
TB,R,N,V_isEndOfStroke
TB,R,N,V_isHighResponsivenessTask
TB,R,N,V_isRemoteRecognition
TB,R,N,V_isSingleLine
TB,R,N,V_lineBreakVerticalBarGestureEnabled
TB,R,N,V_lineBreakVerticalBarUpToDelete
TB,R,N,V_newGroupsDefaultToActive
TB,R,N,V_preferCharacterLevel
TB,R,N,V_preventLeftoverCharsInSubwordGestures
TB,R,N,V_promoteKanaConversion
TB,R,N,V_requiresLexiconMatch
TB,R,N,V_textOnly
TB,R,V_cornerLine
TB,R,V_isTextReplacement
TB,S_setShouldForceFastGrouping:,V__shouldForceFastGrouping
TB,V_cancelled
TI,D,N
TI,R,N,V__taskQueueQoSClass
TQ,D,N
TQ,N
TQ,N,V__changeCoalescingIndex
TQ,N,V_lastCharacterSegmentCount
TQ,N,V_maxRecognitionResultCount
TQ,N,V_recognizerMaxRecognitionResultCount
TQ,N,V_stateType
TQ,N,V_width
TQ,R
TQ,R,N
TQ,R,N,V__strawSize
TQ,R,N,V_directionChangeCount
TQ,R,N,V_edgeIndex
TQ,R,N,V_highestDirectionChangeCount
TQ,R,N,V_maxCandidateCount
T^^v,N,V_icuTransliterator
T^v,N,V_characterLanguageModel
T^v,N,V_cjkDynamicLexicon
T^v,N,V_cjkStaticLexicon
T^v,N,V_formatGrammarFST
T^v,N,V_lmVocabulary
T^v,N,V_radicalClusterFST
T^v,N,V_wordLanguageModel
T^v,R,N,V_wordLanguageModel
T^{CGPath=},N,V_path
T^{CGPoint=dd},R,N,V_vertices
T^{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_characterRectsInReferenceSubstring
T^{CHCodeMap=*Q^II},R,N,V_codeMap
T^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}},N,V_engine
T^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}},N,V_freeformEngine
T^{VariantMap=^i^i^ii^iQ},N,V_transliterationVariantMap
T^{_LXLexicon=},N,V_customLexicon
T^{_LXLexicon=},N,V_customPhraseLexicon
T^{_LXLexicon=},N,V_phraseLexicon
T^{_LXLexicon=},N,V_secondaryStaticLexicon
T^{_LXLexicon=},N,V_staticLexicon
T^{__Mecabra=},R,V_mecabra
T^{__MecabraContext=},R,N,V_mecabraContextRef
Td,D,N
Td,N,V_area
Td,N,V_distStd
Td,N,V_interpointDistance
Td,N,V_lineWidth
Td,N,V_minimumSignificantSegmentLength
Td,N,V_totalDuration
Td,R,N
Td,R,N,V_autoLineBreakAreaWidthFactor
Td,R,N,V_autoLineBreakDualBreakVerticalDistance
Td,R,N,V_autoLineBreakMinVerticalDistance
Td,R,N,V_boundsDiagonal
Td,R,N,V_containerScore
Td,R,N,V_curvature
Td,R,N,V_endTimestamp
Td,R,N,V_groupingConfidence
Td,R,N,V_interpointDistance
Td,R,N,V_lineError
Td,R,N,V_lineOrientationAngle
Td,R,N,V_startTimestamp
Td,R,N,V_subwordGestureEndingSpeedRange
Td,R,N,V_subwordGestureSpeedThreshold
Td,R,N,V_support
Td,R,N,V_transitionTime
Td,R,V_stemWidth
Td,V_score
Tf,N,V_spacing
Tf,N,V_unitScale
Ti,D,N
Ti,N
Ti,N,V_autoCapitalizationMode
Ti,N,V_autoCorrectionMode
Ti,N,V_contentType
Ti,N,V_recognitionMode
Ti,N,V_recognitionType
Ti,N,V_recognizerContentType
Ti,N,V_recognizerRecognitionMode
Ti,R,N
Ti,R,N,V_autoCorrectionMode
Ti,R,N,V_contentType
Ti,R,N,V_contentTypeForNoSpaceRecognition
Ti,R,N,V_mode
Ti,R,N,V_recognitionMode
Ti,R,V_endEndpointType
Ti,R,V_startEndpointType
Tq,D,N
Tq,N,S_setStatus:
Tq,N,S_setStatus:,V_status
Tq,N,V_gestureType
Tq,N,V_maxResultCount
Tq,N,V_originalWritingDirectionIndex
Tq,N,V_patternType
Tq,N,V_recognitionEnvironment
Tq,R,N
Tq,R,N,V_ancestorIdentifier
Tq,R,N,V_blankIndex
Tq,R,N,V_classification
Tq,R,N,V_classificationAsNonText
Tq,R,N,V_contextMaxStrokes
Tq,R,N,V_cosAlphaFeatureIndex
Tq,R,N,V_cosAngleFeatureIndex
Tq,R,N,V_distanceFeatureIndex
Tq,R,N,V_gapFeatureIndex
Tq,R,N,V_lastCharacterLevelPosition
Tq,R,N,V_maxInputWidth
Tq,R,N,V_maxNumberOfInputStrokes
Tq,R,N,V_maxPointsPerStroke
Tq,R,N,V_minPointsPerStroke
Tq,R,N,V_mode
Tq,R,N,V_modelDecoderSize
Tq,R,N,V_numInputFeatures
Tq,R,N,V_numOutputClasses
Tq,R,N,V_numberOfSegments
Tq,R,N,V_numberOfSubstrokes
Tq,R,N,V_pointIndex
Tq,R,N,V_pseudospaceIndex
Tq,R,N,V_recognitionMaxStrokes
Tq,R,N,V_resultLevel
Tq,R,N,V_resultType
Tq,R,N,V_segmentGroupIndex
Tq,R,N,V_sequenceCompression
Tq,R,N,V_sessionMode
Tq,R,N,V_sessionResultVersion
Tq,R,N,V_sessionVersion
Tq,R,N,V_sinAlphaFeatureIndex
Tq,R,N,V_sinAngleFeatureIndex
Tq,R,N,V_spaceIndex
Tq,R,N,V_strokeGroupType
Tq,R,N,V_strokeGroupingRequirement
Tq,R,N,V_strokeIndex
Tq,R,N,V_substrokeCount1
Tq,R,N,V_substrokeCount2
Tq,R,N,V_substrokesCount
Tq,R,N,V_textClassIndex
Tq,R,N,V_textContentLength
Tq,R,N,V_uniqueIdentifier
Tq,R,N,V_vertexCount
Tr^{CGPath=},R,N,V_estimatedBaseline
Tr^{_LXLexicon=},N,V_customLexicon
Tr^{_LXLexicon=},N,V_customPhraseLexicon
Tr^{_LXLexicon=},N,V_phraseLexicon
Tr^{_LXLexicon=},N,V_staticLexicon
T{?=ddddd},R,N,V_generationDuration
T{CGPoint=dd},N,V_coalescedCenter
T{CGPoint=dd},R,N,V_caretTipPoint
T{CGPoint=dd},R,N,V_firstStrokeOrigin
T{CGPoint=dd},R,V_center
T{CGPoint=dd},R,V_controlPoint
T{CGPoint=dd},R,V_endLocation
T{CGPoint=dd},R,V_lowerLeftPoint
T{CGPoint=dd},R,V_lowerRightPoint
T{CGPoint=dd},R,V_midpointLocation
T{CGPoint=dd},R,V_stemLocation
T{CGPoint=dd},R,V_upperLeftPoint
T{CGPoint=dd},R,V_upperRightPoint
T{CGPoint=dd},R,V_vertex1
T{CGPoint=dd},R,V_vertex2
T{CGPoint=dd},R,V_vertex3
T{CGRect={CGPoint=dd}{CGSize=dd}},D,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_contextBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_enlargedBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_frame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_groupBounds1
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_groupBounds2
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_normalizationContext
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_rotatedBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_segmentBounds
T{CGSize=dd},N
T{CGSize=dd},N,V_minimumDrawingSize
T{CGSize=dd},N,V_recognizerMinimumDrawingSize
T{CGSize=dd},R,V_size
T{CGVector=dd},N,V_strokeDeviation
T{CGVector=dd},N,V_writingOrientation
T{CGVector=dd},R,N
T{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}},N,V_drawing
T{CVNLPTextDecodingPruningPolicy=qBfI},N,V_decodingPruningPolicy
T{_NSRange=QQ},D,N
T{_NSRange=QQ},N,V__storedAffectedRange
T{_NSRange=QQ},R,N,V_activePreviewRange
T{_NSRange=QQ},R,N,V_affectedRange
T{_NSRange=QQ},R,N,V_referenceSubstringRange
T{_NSRange=QQ},R,N,V_selectedTextRange
T{_NSRange=QQ},R,N,V_strokeCoveredTextRange
T{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}},N,V_cachedResults
T{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}},N,V_signatureUniChar
T{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}},N,V_characterIDMap
T{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}},N,V_strokeMaxPenalties
T{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}},R,N,V_strokeGroup
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_controlPoints
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_points
T{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}},N,V_prevPoints
T{vector<std::map<long, long>, std::allocator<std::map<long, long>>>=^v^v{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>=^v}},R,N,V__resampledDrawingPointMap
URLByAppendingPathComponent:
URLWithString:
UTF8String
UUID
UUIDString
_CHStrokeID2HeatmapItemID
_CJKPairedPunctuationsCharSet
__activeTasks
__activeVisualizationIDs
__activeVisualizationsByID
__changeCoalescingIndex
__changeObservers
__charSetRulesQueue
__connection
__cornerDetector
__cornerIndexSet
__correctionRecognizersByLocalesKey
__directionChangeCornerIndexes
__enabledVisualizationIDs
__errorsByLocale
__hasUnprocessedChanges
__highResponsivenessQueue
__inputDrawingClients
__latestTextInputTargets
__queryActive
__recognitionResultsByGroupID
__recognizersByLocaleID
__recognizersQueue
__registeredAsChangeObserver
__registeredAsInputDrawingsClient
__resampledDrawingPointMap
__servesBackgroundIndexation
__sessionQueue
__shapeRecognizer
__shouldForceFastGrouping
__shouldUseCachedHasCompleteRecognitionResults
__storedAffectedRange
__strawSize
__strokeGroupIndexByAncestorID
__strokeProviderDrawn
__taskQueueQoSClass
__tasksWorkQueueBackground
__tasksWorkQueueForeground
__textCorrectionResultsByGroupID
__textRecognitionLocales
__textRecognizer
__textResult
__tokenizedTextResultsByLocale
__transcriptionCapability
_accumulatedTimeDifferences:
_activationMatrixFromInferenceCache:forDrawing:outStrokeEndings:
_activations
_activeCharacterSet
_activeCharacterSetPerLocale
_activePreviewRange
_activeRecognitionInsight
_activeStrokeGroupAncestorIdentifiers
_activeTasks
_activeTextInputQuery
_activeVisualizationIDs
_activeVisualizationsByID
_addAlternativeCandidatesForTokenizedResult:
_addEdgesFromCandidates:toEdges:referenceEdge:network:consumedSegmentCount:numSubstrokes:
_adjustCandidatesForChinesePunctuation:segmentDrawing:completeDrawing:
_adjustCandidatesForConfusableCharacters:
_adjustCandidatesForRomanPunctuation:segmentDrawing:
_adjustResultsForConfusableCharacters:
_adjustSupportForContainerClassificationByAddingStroke:consistingOfSubstrokes:
_adjustSupportForLineClassificationByAddingStroke:consistingOfSubstrokes:
_affectedRange
_affectedRangeByAdjustingForProtectedCharacters:
_affectedRangeByAdjustingToTokensIfNeeded:allowSubtoken:didExpand:
_affectedRangeByRefiningShapeBasedGesture:resultType:drawing:targetContentInfo:
_affectedRangeByRemovingTerminatingNewLines:
_agglomerativeClusteringUsingInitialClusters:distanceMetric:maxDistanceThreshold:shouldCancel:
_allowedCharacters
_alphaNumericCharSet
_alternativeInterpretationsForString:
_ancestorIdentifier
_applySentenceTransliterationCandidates:codesLen:codesMax:
_applyStrictGroupingParameters
_applyTransliterationAndSyntheticCandidates:
_area
_arithmeticOperatorCharSet
_aspectRatioWeight
_attributedStringFromString:withColor:font:paragraphStyle:
_autoCapitalizationMode
_autoCorrectionMode
_autoLineBreakAreaWidthFactor
_autoLineBreakDualBreakVerticalDistance
_autoLineBreakEnabled
_autoLineBreakMinVerticalDistance
_averageAngleAndReliabilityForStrokeGroup:
_averageInterStrokeGroupDistanceForSortedStrokeGroups:outStdDev:
_averageStrokeDeviation
_averageTokenRecognitionScoreInTranscriptionPath:
_averageVectorFromCoalescedSubstrokes:toSubstroke:withOrientation:strokeRef:strokeDest:
_averageWritingOrientation
_backwardLookingCharacterSet
_blankIndex
_boundingBoxesOfStrokesInGroup:rotatedAroundPoint:byAngle:
_cacheKeyForLocales:
_cachedActivationMatrices
_cachedClutterFilter
_cachedDrawing
_cachedFastGroupingRecognitionResult
_cachedFastGroupingResult
_cachedResults
_cachedStrokeEndings
_cachingWithMatchingStrokeRange:drawing:
_calculateBestTranscriptionPaths:scores:fromTokenizedResult:pathCount:history:skipLMRescoring:
_calculateJointWordLMScoreForString:wordRanges:wordIDs:patternEntries:history:historyLength:
_calculateJointWordLMScoreForTokenPath:tokenizedResult:history:historyLength:pathTranscription:
_cancelAllHighResponsivenessTasks
_cancelOngoingRequests
_cancelled
_candidateLatticePruningThresholdForEdgeType:
_capitalizationToSplit
_caretTipPoint
_caseMatchingOnly
_changeCoalescingIndex
_changeObservers
_changeableColumnCountUpdatedResult:options:
_changeableCount
_charSetRulesQueue
_characterCountInToken:filteringCharacterSet:filteredCharacterCount:
_characterLanguageModel
_characterRectsInReferenceSubstring
_characterReplacements
_characterSet
_characterTransliterations
_cjkDynamicLexicon
_cjkStaticLexicon
_classCounts
_classForVisualizationIdentifier:
_classifiableDrawing
_classificationAsNonText
_classifyEdgeDrawingsFromContexts:allEdges:segmentationNetwork:candidateNetwork:cachedEdgeSet:completeDrawing:allowSmallerFinalBatch:shouldCancel:
_classifyStrokesInDrawing:outTextStrokeProbabilities:cancellationBlock:
_cleanupCachedRecognizers
_closingBracketCharacters
_closingQuoteCharacters
_clutterFilter
_coalescedCenter
_coalescedLastSubstrokes
_codeMap
_combinedScore
_commonJapaneseSymbols
_computeLocalFrameWithLeftBounds:rightBounds:
_configuration
_confusion
_connection
_consumableStrokesCharSet
_containsCommittedStrokes
_containsDotCharSet
_containsTwoDotsCharSet
_contentType
_contentTypeForNoSpaceRecognition
_contextBounds
_contextBoundsForTargetContentInfo:
_contextInvariantCharacterSet
_contextMaxStrokes
_contextResultForContextStrokes:outStrokeGroupingResult:outStrokeClassificationResult:shouldCancel:
_contextTokenIDsFromHistory:maxCharacterLength:maxTokenCount:
_contextualTextResultsFromCachedResultUsingContextStrokes:shouldCancel:
_controlPoint
_controlPoints
_convertToLowercase
_convexHull
_cornerLine
_correction
_correctionAngles
_correctionRecognizersByLocalesKey
_correctionResult
_cosAlphaFeatureIndex
_cosAngleFeatureIndex
_createCandidateNetworkFromSegmentationNetwork:segmentGroup:drawing:boundsAtNode:matchingStrokeRange:sortedSegmentIndexes:shouldCancel:
_createClippedPolygonForPolygon:clippingLine:clippedPolygonVertexCount:
_createNetworkTruncatedPrefixStringUsingPrefix:fullHistoryStringLength:hasLexiconCursor:prefixStringLength:hasComplexChars:activeHistoryRange:
_createdStrokeGroups
_currencySymbols
_cursorPositionForPoint:referenceString:referenceCharRects:searchingRange:
_curvature
_customLexicon
_customPhraseLexicon
_dataDetectorConfiguration
_dataDetectorResult
_dataDetectorResultsForSessionResult:
_dataSource
_dataSource:inputTargetContentInfoForStrokeGroups:groupingManager:
_dataSource:textInputTargetForStrokeGroup:simultaneousGroups:
_dateTimeEndLetterCharSet
_dateTimeSeparatorCharSet
_decodeLocale:supportedLanguage:supportedScript:
_decodingPruningPolicy
_defaultDeviationVector
_defaultLegacyPunctuationResultsWithStrokeCount:
_defaultOrientationVector
_defaultProcessor
_defaultPunctuationResultWithStrokeCount:
_defaultPunctuationStringsOutputScores:maxCandidateCount:
_delegate
_deletedStrokeGroups
_detectCorners
_detectDirectionalChanges
_digitCharSet
_digitEndPunctuationCharSet
_digitStartPunctuationCharSet
_directionChangeCornerIndexes
_directionChangeCount
_directionalFeaturesInputName
_distMean
_distStd
_distance:p1:p2:
_distanceFeatureIndex
_drawCutPoints:inputDrawing:inContext:transform:
_drawGroupBrackgroundInRect:context:
_drawing
_drawingAnchorPointFromRecognizerOptions:
_drawingCanvasSizeForLatestStrokeProviderSnapshot
_drawingTarget
_edgeIndex
_editingGestureResultForDrawing:originalDrawing:lastStroke:targetContentInfo:previousResult:
_effectiveMaxRecognitionResultCount
_emailPunctuationCharSet
_emissionHandler
_emitInterpolatedPoints
_emoticonBottomCharSet
_emoticonMiddleCharSet
_emoticonTopCharSet
_enableCachingIfAvailable
_enableGen2CharacterLMIfAvailable
_enableGen2ModelIfAvailable
_enableStrokeReordering
_enabledVisualizationIDs
_encodedStrokeIdentifier
_encodedStrokeProviderVersion
_endCutPoint
_endEndpointType
_endLocation
_endOfSentencePunctuationCharSet
_endOfWordPunctuationCharSet
_endTimestamp
_enumerateDetectedRangesForContextualTextResults:usingBlock:
_enumerateMatchesForStrokeGroupResult:locales:queryString:usingBlock:
_equationProcessor
_error
_errorModel
_estimateSplitScore:withTextInputTargets:arcLengthsByStrokeIdentifier:
_estimatedBaseline
_expandCodePoints
_expectedMaxDotCount:
_expectedMaxStrokeCount:
_expectedMinStrokeCount:
_expectedSubstrokesPerLine
_extendedConversionCandidates:withPhraseCandidates:
_extractFeaturesFromDrawing:inputName:interpointDistance:initialVectorAnchorPoint:normalizeFeatures:padFeatures:error:
_extractFeaturesFromDrawing:numStrokes:numPoints:error:
_extractInputMaskFromDrawing:numStrokes:numPoints:error:
_fallbackStructuredResultForDrawing:string:score:firstTokenHasPrecedingSpacePreference:
_fastGroupingClusters
_featureCounts
_filterClusters:usingContextStrokes:clusteredStrokes:
_filterNonHumanFriendlyCandidates:
_findMatchingTokenPathInResult:initialTokenLocation:queryString:fromIndex:coveredStrokeIndexes:reverseMatchedTokens:
_findMostProbableTextInputTarget:forGroupBounds:outOverlap:outDistance:
_firstStrokeIdentifier
_firstStrokeOrigin
_flagsFilter
_forceRecognitionStrokeGroupIdentifiers
_formatGrammarFST
_forwardLookingCharacterSet
_foundItems
_frame
_fullWidthPunctuationThatExpectsUppercaseAfter
_fullWordsOnly
_gapFeatureIndex
_generationDuration
_gestureOnBlankAreaResultForDrawing:originalDrawing:targetContentInfo:
_gestureType
_getMergingEndOfLineCost:mergingEndOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:refSubstrokeIndex:
_getMergingLowerBoundCost:withStrokeBounds:toLineGroup:
_getOrientedBounds:length:forStroke:atWritingDirectionIndex:inGroup:
_getPositionalEncodings:error:
_getStringForConfigurationValues:numPoints:
_greedyCombinationOfGroupingResults:stableStrokeIdentifiers:withCancellationBlock:
_groupBounds1
_groupBounds2
_groupingConfidence
_groupingContextSize
_groupingMergingCostThresh
_groupingMergingEndCostLowThresh
_groupingResultsByStrategyIdentifier
_groupingSimilarCostThresh
_groupsFromClusterResult:strokes:strokeClassificationsByStrokeIdentifier:
_hasBeenSubmitted
_hasPendingRecognitionTasks
_hasUnprocessedChanges
_heatMap
_heatmapItemID2CHStrokeID
_highResponsivenessQueue
_highestDirectionChangeCount
_historyStringFromRecognizerOptions:
_horizontalDistanceBarrier
_horizontalDistanceWeight
_icuTransliterator
_improvedSingleCharacterOneColumnTextResult:targetContentInfo:insertionRange:locale:affectedRange:
_inappropriateWordIndexes
_indexableContent
_indexableTextRepresentation
_inferenceCacheFromRecognizerOptions:
_initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:autoCapitalizationMode:autoCorrectionMode:isSingleLine:lastCharacterLevelPosition:protectedCharacterIndexes:
_initialContextRectFromRecognizerOptions:
_initialTextInputTargets
_initializeMergedResultPostProcessor
_initializePostProcessor
_initializeTextDecoder
_inputDrawing
_inputDrawingClients
_inputDrawingCutPoints
_inputNames
_inputResult
_inputStrokeIdentifiers
_inputTarget
_inputTargetIdentifier
_interpointDistance
_invalidateCachedResults
_isActiveVisualizationForIdentifier:
_isEndOfStroke
_isGibberishToken:
_isGroupableNonTextForStrokeClassification:
_isHighResponsivenessTask
_isInNoSpaceRegionNextToTextFromTargetContentInfo:drawingBounds:localTypedContextBounds:insertionRange:outIsWhiteSpace:outDistance:outSpaceDistanceThreshold:
_isInappropriateString:withLexicon:
_isInappropriateString:withTrie:
_isInappropriateTokenID:withLexicon:
_isInlineContinuousMode
_isLine:usingThreshold:p1:p2:
_isLocaleSupported:
_isMatchSeparatorBeforeToken:atLocation:inResult:queryString:fromIndex:matchedLength:
_isMatchStringForToken:queryString:fromIndex:matchedLength:
_isReadyToProcessChanges
_isRemoteRecognition
_isShapeBasedRangeRefinementSupportedForResultType:
_isSingleLine
_isSplitAcceptable:arcLengthsByStrokeIdentifier:outRejectionReason:
_isTextReplacement
_isTokenStringMatchingQuery:allowPartialMatching:
_isTransitionValidFromStatus:toStatus:
_itemStableIdentifier
_koreanParticlesCharSet
_labelBoundsForAnchorPoint:
_language
_languageFitnessByLocale
_lastCharacterLevelPosition
_lastCharacterSegmentCount
_lastCharacterSegmentIndexes
_lastDrawing
_lastDrawings
_lastPoint
_lastProcessedStrokeProviderVersion
_lastProcessedTime
_lastRecognitionResult
_lastStroke
_lastStrokeIdentifier
_lastSubstrokeCoalescedWithOverlappingSubstrokes:strokeDeviation:
_lastSubstrokeIndexBeforeMerge
_latestStrokeProvider
_latestStrokeProviderVisibleStrokes
_latestTextInputTargets
_learningDictionaryURL
_leftContext
_leftTransitionUpperBound
_leftTransitionWeight
_legacyTextRecognitionResultForTranscriptionIndex:
_legacyTextRecognitionResultsForDrawing:options:shouldCancel:
_lexiconSkipCharSet
_lineBreakVerticalBarGestureEnabled
_lineError
_lineOrientationAngle
_lineWidth
_lmRescoringWeightForPath:
_lmVocabulary
_loadMecabraIfNeeded
_locales
_logResultsIfAppropriateWithStrokeProvider:
_lowerRightPoint
_lowercaseCharSet
_markStrokeGroupsAsActive:
_maxCandidateCount
_maxDistanceThresholdForTokenizationLevel:
_maxInputWidth
_maxNumberOfInputStrokes
_maxPointsPerStroke
_maxRecognitionResultCount
_mecabra
_mecabraContextRef
_mergeEndBelowModifier
_mergeEndDxCostCoeff
_mergeEndDyCostCoeff
_mergeEndLeftModifier
_mergeMiddleBelowModifier
_mergeMiddleDxCostCoeff
_mergeMiddleDyCostCoeff
_mergedResultPostProcessor
_middlePunctuationCharSet
_midpointLocation
_minArcLengthScore
_minLineHeightScore
_minPointsPerStroke
_minSizeForReliableRescalingFromRecognizerOptions:
_minSubstrokesForSplit
_minimumDrawingSize
_minimumSignificantSegmentLength
_mininmumPathCount
_mode
_model
_modelConfigurationsNumPoints
_modelConfigurationsNumStrokes
_modelDecoderSize
_modelKey
_modelName
_modelSmallestConfig
_modelUseCount
_modifiedTextResult:replacingString:
_mutableTokenRows
_network
_newBaselinePathForStrokeGroup:outFirstPoint:strokeProvider:
_newColorForStroke:inGroup:
_newGroupsDefaultToActive
_newRecognitionSessionTaskWithStrokeGroupingRequirement:isHighResponsivenessTask:strokeGroupingOnly:subjectStrokeIdentifiers:partialResultBlock:
_newTextLineStrokeGroupWithStroke:withSubstrokePlacements:reusableIDRemovedGroups:
_nextFIFO
_nextRecognitionInsightRequest
_nodeIndexes
_nonSpaceSeparatorCharSet
_nontextCandidates
_normalizationContext
_normalizeFeatures
_normalizeString:
_normalizeSuffixes:
_normalizedBoundsForWritingDirectionSortedStrokes:strokeWritingOrientations:firstStrokeDeviation:originalDrawing:rotatedSortedStrokes:
_normalizedDrawing
_normalizedLanguageFitness:
_notifyObserversWithBlock:
_numInputFeatures
_numOutputClasses
_numberOfSegments
_numberOfSubstrokes
_numeralEndLetterCharSet
_openingBracketCharacters
_openingQuoteCharacters
_options
_orderedStrokeIdentifiers
_orderedStrokesGroup1
_orderedStrokesGroup2
_orientationTransformForStrokeBounds:atWritingDirectionIndex:inGroup:
_originalBoundingBoxes
_originalDrawing
_originalRowFromRow:
_originalWritingDirectionIndex
_outputNames
_outputResult
_ovsStringChecker
_ovsTrie
_parametersOverride
_partialRecognitionResult
_partialResultBlock
_path
_pathDistance:p1:p2:
_pathPoints
_patternFST
_patternType
_penalizeCandidatesForRomanPunctuation:punctuationStrokeCount:
_phraseLexicon
_pointIndex
_postProcessCorners:corners:straws:
_postProcessingFST
_postProcessor
_postprocessingMergedRecognitionResult:options:
_precedingLineBreakCountForAutoLineBreak:targetContentInfo:
_precedingLineBreaks
_precedingSpaceBehaviorFromRecognizerOptions:
_precedingSpaceBehaviorFromTargetContentInfo:drawingBounds:localTypedContextBounds:insertionRange:lastCharacterBefore:
_preferCharacterLevel
_preferredCoalescingInterval
_preferredLocale
_preferredLocales
_preferredUpdatesInterval
_prefixCapitalizationExceptionCharSet
_prefixQueryResultsForSessionResult:
_presentableTextRepresentation
_prevPoints
_preventLeftoverCharsInSubwordGestures
_priority
_processPendingStrokeChangesIfAvailable
_processingQueue
_promoteKanaConversion
_properties
_protectedCharacterIndexes
_pseudospaceIndex
_punctuationThatExpectsUppercaseAfter
_punctuationThatNeedSpaceCleanup
_queryActive
_queryDelimiters
_queryResult
_queryResultForTokens:groupResult:candidateGroup:
_queryString
_queue
_radicalClusterFST
_rareWordIndexes
_rawPath
_recognitionEnvironment
_recognitionError
_recognitionLocales
_recognitionMaxStrokes
_recognitionMode
_recognitionModel
_recognitionQueue
_recognitionRequestWithDrawing:options:
_recognitionResultForRequest:error:
_recognitionResultsByGroupID
_recognitionResultsByLocale
_recognitionResultsForMultipleCharacterDrawing:segmentGroup:options:shouldCancel:
_recognitionResultsForNonTextStrokeGroup:groupingManager:
_recognitionScore
_recognitionSession
_recognitionSessionResultOnDemandUsingContextStrokes:shouldCancel:
_recognitionType
_recognizerActiveCharacterSet
_recognizerContentType
_recognizerLocale
_recognizerMaxRecognitionResultCount
_recognizerMinimumDrawingSize
_recognizerOptions
_recognizerRecognitionMode
_recognizersByLocaleID
_recognizersQueue
_referenceSubstring
_referenceSubstringRange
_refineCandidates:withAllowedCandidateCodes:
_refineChineseCharacterCandidates:drawing:
_refinedGestureResultForPreviousResult:originalDrawing:lastStroke:targetContentInfo:
_registeredAsChangeObserver
_registeredAsInputDrawingsClient
_relativeRangeOfPreviousCharacterFromTargetContentInfo:absoluteInsertionRange:
_reloadEngineAndResources
_removeAdjacentCorners:corners:straws:
_removeColinearCorners:usingDistanceThreshold:usingLowerThreshold:usingUpperThreshold:corners:
_removeColinearCorners:usingThreshold:corners:
_removeOVSResults:withHistory:
_removeSupportForStrokeIdentifier:
_removeVisualizationForIdentifier:
_requiredLeftContext
_requiredRightContext
_requiresLexiconMatch
_resampleDrawing:outputPointMap:
_resampledDrawing
_resampledDrawingPointMap
_resamplingDistance:
_rescoreCandidatesWithLanguageModel:history:
_resolveResampledDirectionChangePointIndexes:
_resolvedStrokeIndexes:segmentGroup:segmentOffset:substrokeCount:
_resourcePath
_resultDrawn
_resultLevel
_resultType
_resultUsingNextGenerationPipelineWithDrawing:options:
_resultUsingSegmentAndDecodePipelineWithDrawing:insight:options:shouldCancel:
_resultsDebugDescriptionIntoGroupsArray:groupHeaderBlock:
_rotatedBounds
_rotation
_saveInputDrawings
_savedHash
_scaleFactorForBoundsHeight:
_scheduleProcessStrokeProviderChangesImmediately:
_score
_scoreMeanAndStdForToken:forLocale:
_secondaryStaticLexicon
_segmentBounds
_segmentGroupIndex
_segmentID
_segments
_selectedTextRange
_selfLoopPunctuationCharSet
_sentenceStartPunctuationInSpanish
_sequence
_sequenceCompression
_servesBackgroundIndexation
_sessionLastResult
_sessionMode
_sessionQueue
_sessionResultVersion
_setAvailableItems:
_setCachedFastGroupingRecognitionResult:
_setConfiguration:
_setHasUnprocessedChanges:
_setIndexableContent:
_setLastRecognitionResult:
_setLatestStrokeProvider:
_setLatestTextInputTargets:
_setOutputResult:
_setPartialRecognitionResult:
_setSessionVersion:
_setShouldForceFastGrouping:
_setStatus:
_setStrokeGroupItems:
_setStrokeGroupItemsByID:
_setSupportForStrokeIdentifier:support:
_setTextRecognitionLocales:
_setTranscribedTitle:strokeIdentifiers:
_setupExecutionQueuesForMode:
_setupRecognitionInsightRecording
_setupXPCConnectionIfNeeded
_shapeRecognizer
_shouldAddAlternatives
_shouldAdjustDeviationOfSmallGroups
_shouldAutoCapitalize
_shouldAutoCorrect
_shouldCoalesceLastSubstrokes
_shouldCreatePseudoTokens
_shouldExpandToFullTokensForScriptInString:withRange:shouldExpandStart:shouldExpandEnd:
_shouldForceFastGrouping
_shouldKeepAlternativeLengths
_shouldKeepDuplicateTokenIDs
_shouldKeepOriginalSpelling
_shouldKeepOutOfLexiconAlternatives
_shouldKeepOutOfPatternCandidates
_shouldKeepSubstrings
_shouldLimitDefaultWritingOrientationDeviation
_shouldReturnDefaultResultsForDrawing:
_shouldUseDynamicSampling
_shouldUseStrokeReordering
_shouldUseTextReplacements
_signatureUniChar
_simpleDrawingForStrokeGroup:originalDrawing:orderedStrokeIDs:
_sinAlphaFeatureIndex
_sinAngleFeatureIndex
_size
_sortedIndexesForSegmentGroup:drawing:
_sortedStrokeGroupsByWritingOrientationTextOnly:
_spaceIndex
_spacing
_spellChecker
_spellServer
_splitCostThreshold
_splitMaxNaturalIndexDiffThreshold
_splitMinimumStrokeCount
_startCursorForContentTypes
_startCutPoint
_startEndpointType
_startLocation
_startNodes
_startPunctuationCharSet
_stateType
_staticLexicon
_statusReportingEnabled
_stemLocation
_stemWidth
_storedAffectedRange
_strategyIdentifier
_strawSize
_stringCodeMap
_stringForRecognitionLanguage:
_stringForRecognitionScript:
_stringForTokens:
_stringNormalizationFunction
_strokeClassificationModel
_strokeClassificationResult
_strokeClassificationsByStrokeIdentifier
_strokeCoveredTextRange
_strokeDeviation
_strokeDeviationCapCoeff
_strokeGroup
_strokeGroup1
_strokeGroup2
_strokeGroupClusters
_strokeGroupConfidenceForSortedSubstrokes:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:averageWritingOrientation:averageStrokeDeviation:
_strokeGroupFromFastGroupingCluster:strokeProvider:strategyIdentifier:
_strokeGroupFromSortedStrokeIdentifiers:strokeProvider:strategyIdentifier:
_strokeGroupIdentifier
_strokeGroupIndexByAncestorID
_strokeGroupItems
_strokeGroupItemsByID
_strokeGroupStableIdentifier
_strokeGroupType
_strokeGroupWithStrokes:orderedStrokeIdentifiers:previousGroups:shouldSearchForStableIdentifier:
_strokeGroupingOnly
_strokeGroupingRequirement
_strokeGroupingResult
_strokeGroups
_strokeGroupsContainingStrokeIdentifiers:
_strokeGroupsFromFastGroupingClusters:clusteredStrokes:strokeProvider:strategyIdentifier:clutterFilter:
_strokeGroupsInProximityOfSubjectStrokeGroups:clusteredStrokeGroups:
_strokeGroupsSortedByWritingOrientation
_strokeGroupsSortedTopBottomLeftRight
_strokeHalfwayCorner:p1:p2:
_strokeIdentifersFromStrokes:
_strokeIdentifier
_strokeIdentifiers
_strokeIdentifiersForContextStrokes:clusters:clusteredStrokes:tokenizationLevel:fastGroupingResult:
_strokeIdentifiersFromCachedResultUsingContextStrokes:tokenizationLevel:
_strokeIdentifiersInGroupsContainingStrokeIdentifiers:
_strokeIdentifiersInProximalGroupsForStrokeIdentifiers:
_strokeIdentifiersInWordsContainingStrokeIdentifiers:
_strokeIndex
_strokeIndexSetsFromTokenRow:
_strokeIndexes
_strokeMaxPenalties
_strokeProviderDrawn
_strokeProviderVersion
_strokes
_subjectStrokeIdentifiers
_substroke
_substrokeCount1
_substrokeCount2
_substrokeCountForStrokes:substrokesByStrokeIdentifier:
_substrokePlacementsByStrokeIdentifier
_substrokesByStrokeIdentifier
_substrokesCount
_subwordGestureSpeedThreshold
_support
_supportByStrokeIdentifier
_supportsAutoLineBreaks
_sutherlandHodgmanClipForSubjectPolygon:usingClipPolygon:
_symbols
_symbolsRequiringSpaceBeforeInFrench
_symmetricQuoteCharacters
_targetContentInfo
_targetFitnessWeight
_taskQueueQoSClass
_tasksWorkQueueBackground
_tasksWorkQueueForeground
_teardownXPCConnection
_terminatingSpecialCharacter
_textAfterFromRecognizerOptions:
_textAfterStringForTargetContentInfo:insertionRange:
_textBeforeStringForTargetContentInfo:insertionRange:
_textContentLength
_textCorrectionResult
_textCorrectionResultForStrokeGroup:groupingManager:targetContentInfo:locales:previousCorrectionResult:
_textDecoder
_textInputTarget
_textInputTargets
_textInputTargetsDataSource
_textInsertionResultForDrawing:targetContentInfo:originalDrawing:localTypedContextBounds:normalizedDrawingScaleFactor:insertionRange:
_textLineStrokeGroupByAddingStroke:withSubstrokePlacements:intoStrokeGroup:mergingEndSubgroup:bestStrokeMergeEnd:
_textOnly
_textRecognitionLocales
_textRecognitionResultsForTextStrokeGroup:groupingManager:
_textReplacementLowercasedKeyMapping
_textReplacementResultForLegacyRecognitionResult:
_textReplacements
_textResult
_textResultWithLexiconExpansionFromCandidateNetwork:history:prefix:activeHistoryRange:rootStaticCursor:rootCustomCursor:rootPatternCursor:segmentGroup:maxRecognitionResultCount:precedingSpaceBehavior:shouldPerformNoSpaceRecognition:totalStrokeCount:totalSubstrokeCount:shouldCancel:
_textResultWithNetworkComposeFromCandidateNetwork:segmentGroup:drawing:maxRecognitionResultCount:history:totalStrokeCount:totalSubstrokeCount:
_textResults
_textStrokeGroupClusters
_textStrokeGroups
_textStrokeGroupsSortedByWritingOrientation
_textStrokeIdentifiers
_tileIndexForYPosition:tileHeight:
_timeSortedStrokesForIdentifiers:
_titleStrokeIdentifiers
_tokenColumns
_tokenFromLegacyResult:wordIndex:strokeSet:substrokeCount:
_tokenIDForUNKCharacterString:
_tokenRows
_tokenizedTextRecognitionResultForDrawing:writingStatistics:options:shouldCancel:
_tokenizedTextResultForDrawing:usingRecognizer:isRemoteRecognizer:locale:strokeLimit:recognitionError:
_tokenizedTextResultFromResults:segmentGroup:offsetSegment:decodedStrokeSets:spaceBehavior:
_tokenizedTextResultFromTextDecodingResult:forceSingleCharacterMode:options:strokeEndings:drawing:firstTokenHasPrecedingSpacePreference:
_tokenizedTextResultsByLocale
_tokensUsingLMTokenizerForString:wordRanges:nonWordPatterns:outTokenIDs:
_totalDuration
_trailingSeparator
_transcribedTitle
_transcriptionCapability
_transcriptionPathScores
_transcriptionPaths
_transformForInputDrawingBounds:referenceBounds:viewBounds:
_transformedBoundingBoxes
_transitionTimeUpperBound
_transitionTimeWeight
_transliterateSentences
_transliterationMap
_transliterationVariantMap
_transliterationVariantsForString:
_uniqueIdentifier
_unitScale
_unlikelyHasLatinContents
_unloadEngineAndResources
_updateForRecognitionSessionResultChangeIfNeeded
_updateGroups:createdGroups:deletedGroups:forAddedStroke:substrokePlacementsByStrokeIdentifier:reusableIDRemovedGroups:trySplit:cancellationBlock:
_updateInstalledVisualizations
_updateKnownStrokeGroupIndexes
_updateLatestStrokeProviderVisibleStrokes
_updatePrecedingAndTrailingSeparatorsForTopCandidate:history:textAfter:locale:outTrailingSeparator:inFirstTokenHasPrecedingSpace:outFirstTokenHasPrecedingSpace:
_updateResults:string:score:recognitionScore:lexicalEntry:patternEntry:isInappropriateWord:wordID:wordStrokeSet:
_updateSessionRegistration
_updateTokenInappropriateFlag:
_updateWordLanguageModel:
_updatedTokenFromToken:withString:
_upperRightPoint
_uppercaseCharSet
_urlProcessor
_urlPunctuationCharSet
_usernameProcessor
_validSuffixes
_validateLastRecognitionResult:visibleStrokeIdentifiers:
_vertex1
_vertex2
_vertex3
_vertexCount
_verticalBarGestureCloseToTextForDrawing:originalDrawing:targetContentInfo:localTypedContextBounds:
_verticalBarGestureOnBlankAreaResultForDrawing:originalDrawing:targetContentInfo:
_verticalDistanceWeight
_verticalOffsetForBoundsHeight:andScaleFactor:
_vertices
_width
_widthAlternativeCharacterSet
_wordClustersForInitialClusters:
_wordCombinedScores
_wordIDs
_wordLanguageModel
_wordLexicalEntries
_wordPatternEntries
_wordRanges
_wordRecognitionScores
_writingDirectionMinCoeff
_writingDirectionSortedStrokeIdentifiers
_writingDirectionSortedStrokeIdentifiersFromSubstrokes:localWritingOrientations:
_writingDirectionSortedSubstrokes
_writingDirectionUpperBound
_writingDirectionWeight
_writingOrientation
absoluteLocationFromRelativeLocation:
absoluteMaxStrokeCountPerRequest
absoluteString
activations
activeCharacterSet
activeCharacterSetPerLocale
activePreviewRange
activeStrokeGroupAncestorIdentifiers
activeTextInputQuery
addCharactersInRange:
addCharactersInString:
addEndTime:
addEntriesFromDictionary:
addIndex:
addIndexes:
addIndexesInRange:
addNodeIndex:withStateType:
addObject:
addObjectsFromArray:
addPoint:
addStartTime:
addTokenRowWithTokens:
adjustColumns
adjustSupportByAddingStroke:consistingOfSubstrokes:
adjustSupportByRemovingStrokeIdentifier:
affectedRange
alignmentScore
allNonLatinModelNames
allObjects
allResultsDebugDescription
allResultsDebugDescriptionByGroup
allResultsDebugDescriptionWithGroupHeaderBlock:
allValues
allocWithZone:
allowedCharacters
alphaNumericCharSet
alphanumericCharacterSet
ancestorIdentifier
appendAttributedString:
appendDrawing:
appendFormat:
appendSegment:fromDrawing:
appendString:
appendToken:
appendTokenColumns:
applyCorrectionsAcrossToken:isFirstToken:contextBeforeToken:shouldCapitalizeGivenHistory:textReplacements:isSingleIsolatedCharacter:
applyCorrectionsOnSingleToken:isFirstToken:contextBeforeToken:shouldCapitalizeGivenHistory:textReplacements:isSingleIsolatedCharacter:allowSpellChecker:
applyLexiconCorrections:shouldCapitalizeWord:shouldSkipEntryCorrection:outBestTokenIndex:bestLexiconTokenScore:textReplacements:contextBeforeToken:allowSpellChecker:
applyTransform:toAllTokens:
arcLengthForStroke:
archivedDataWithRootObject:requiringSecureCoding:error:
areTokenRowsEquivalent:otherRow:
area
arithmeticOperatorCharSet
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
asciiProcessor
autoCapitalizationMode
autoCapitalizationModeDescription
autoCorrectionMode
autoCorrectionModeDescription
autoLineBreakAreaWidthFactor
autoLineBreakDualBreakVerticalDistance
autoLineBreakEnabled
autoLineBreakMinVerticalDistance
autoLineBreakRequireWeakCursor
autorelease
availableItems
availableRecognitionSessionStatusKeys
availableVisualizationIdentifiers
averageCharacterHeightEstimation:minChunkHeight:
averageStrokeDeviation
averageTokenRecognitionScoreForColumnRange:
averageWritingOrientation
backwardLookingCharacterSet
becomeCurrentWithPendingUnitCount:
bestPathsFromNetwork:pathCount:staticLexiconCursor:customLexiconCursor:patternCursor:history:activeHistoryRange:mecabraIDs:segmentGroup:precedingSpaceBehavior:effectiveContentType:totalStrokeCount:totalSubstrokeCount:
bestTranscriptionPathsForTokenizedResult:scores:history:
bitmapRepresentationForSize:
blankIndex
boolForKey:
boolValue
boundingBoxForDrawingSegmentFromCutPoint:toCutPoint:
boundingBoxFromSegmentID:toSegmentID:withSegments:withSourceDrawing:
boundingBoxOfPoints:rotatedAroundPoint:byAngle:
bounds
boundsDiagonal
boundsForStrokeIndex:
boundsForStrokeIndexes:
bytes
cStringUsingEncoding:
cacheActivationMatrix:strokeEndings:drawing:recognitionEngineCachingKey:
cacheTextResult:drawing:recognitionEngineCachingKey:
cachedDrawing
cachedResults
cancel
cancelAllActiveTasksBackground:foreground:
cancelOngoingRequests
cancelled
candidateAccepted:
candidates
capitalizationToSplit
capitalizedString
caretDirection
caretTipPoint
caseInsensitiveCompare:
caseMatchingOnly
category
center
centroidForStrokeIndexes:
ch_basicAlphabeticCharacterSet
ch_basicAlphanumericCharacterSet
ch_basicClosingParenthesesSet
ch_basicCyrillicCharacterSet
ch_basicOpeningParenthesesSet
ch_descriptionWithSeparator:filterBlock:
ch_emptyCharacterSet
ch_hasCharactersFromSets:
ch_hiraganaCharacterSet
ch_intersectsIndexSet:
ch_kanjiCharacterSet
ch_kanjiCompCharacterSet
ch_katakanaCharacterSet
ch_latinCharacterSet
ch_mappedArrayWithBlock:
ch_neutralQuotationMarkSet
ch_occurrencesOfCharactersInSet:maxCount:
ch_russianOnlyCharacterSet
ch_sentenceEndPunctuationCharacterSet
ch_sentenceStartPunctuationCharacterSet
ch_thaiExtraSpaceAfterSymbolsSet
ch_thaiMathSymbolsNeedingSpaceSet
changeableClassificationByRefinement:stroke:
changeableColumnCountUpdatedResultWithHistory:phraseLexicon:maxPhraseLength:
changeableTokenColumnCount
characterAtIndex:
characterCount
characterIDMap
characterIsMember:
characterLMLogProbabilityForString:characterLM:
characterLMLowerBoundLogProbability
characterLanguageModel
characterLevel
characterProbabilityOutputName
characterRectsInReferenceSubstring
characterReplacements
characterSet
characterSetForStrings:
characterSetWithCharactersInString:
characterSetWithRange:
characterTransliterations
characterType:
characterTypeFromString:
chatBubbleCandidateResultForDrawing:candidate:rejectionResult:
checkCharactersInString:outHasLatin:outHasCyrillic:
checkCharactersInTokenRow:outHasLatin:outHasCyrillic:
checkResourceIsReachableAndReturnError:
circumferenceRatioOfCircleFittedToPoints:circleCenter:circleRadius:
cjkDynamicLexicon
cjkStaticLexicon
class
classCounts
classifiableDrawing
classification
classificationAsNonText
classifyStrokes:outTextStrokeProbabilities:cancellationBlock:
cleanUpSpacesInToken:leftContext:inString:withQuoteCount:
clear
clearCache
clearCacheForKey:
clippedWritingOrientation:
closingBracketCharacters
closingQuoteCharacters
cloudCandidateResultForDrawing:candidate:rejectionResult:
clustersForStrokes:shouldMakeSingleCluster:
clutterFilter
clutterFilterByAddingStrokes:removingStrokeIdentifiers:affectedStrokeIdentifiers:
coalescedLastSubstrokes
codepointAtIndex:outRange:
codepointRangeAtIndex:
combineMultiLocaleResults:locales:topLocaleIndex:mergedResultPostprocessingBlock:changeableColumnCountBlock:
combinedScore
commonJapaneseSymbols
commonTopStrokeSetsWithResult:
compare:
compare:options:
compareDistanceInWritingSequenceOfStroke:andStroke:toReferenceStroke:
compareOrderOfStrokeWithIdentifier:toStrokeWithIdentifier:
compareStringForPhoneNumberCompatibility:with:
completedUnitCount
completionsForCandidate:candidateContext:prefix:option:
completionsForCandidate:prefix:option:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
computeEditPenalizationFromString:toReferenceString:withSuffix:withCaseSensitivity:withFirstLetterCaseSensitivity:withDiacriticSensitivity:withDiacriticsCharSet:withConsumableStrokesCharSet:outputSuffix:lexiconExtraCharacters:firstLetterCaseFlipped:
configuration
configurationKey
conformsToProtocol:
confusion
consumableStrokesCharSet
containerScore
containerSupportForPoints:withBounds:
containsCommittedStrokes
containsDotCharSet
containsIndex:
containsIndexes:
containsStartingTokenEquivalentToToken:
containsTwoDotsCharSet
containsValueForKey:
contentType
contentTypeForNoSpaceRecognition
contentTypesToPatternsMapping
contextBounds
contextInvariantCharacterSet
contextMaxStrokes
contextResults
contextStrokes
contextualResultsWithFullyCoveredStrokeGroups:partiallyCoveredStrokeGroups:drawingCanvasSize:
controlCharacterSet
controlPoint
controlPoints
convertToLowercase
convexHull
convexHullForPoints:
convexHullForStroke:
copy
copyWithZone:
cornerIndexes
cornerLine
correction
correctionAngles
correctionResult
correctionsForString:shouldUseErrorModel:forLocale:
cosAlphaFeatureIndex
cosAngleFeatureIndex
count
countByEnumeratingWithState:objects:count:
countSubstringsWithOptions:
countUnallowedCharactersInString:
countryCode
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDrawingForStrokes:cancellationBlock:
createPseudoTokensFromToken:
createRecognizerForLocale:sessionMode:remote:priority:
createRecognizerForLocales:sessionMode:remote:priority:
createTelemetryDictionary:nonTextRatio:
createdStrokeGroups
cumulativePointToPointDistance
cursorByAddingNodeIndex:toCursor:
cursorPositionAtIndex:usingBlockToSelectSide:
curvature
customLexicon
customPhraseLexicon
data
dataDetectorResult
dataPointer
dataSource
dataType
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfFile:
dataWithJSONObject:options:error:
date
dateTimeEndLetterCharSet
dateTimeSeparatorCharSet
debugDescription
debugName
debugQuickLookObject
decimalDigitCharacterSet
decodeBoolForKey:
decodeDoubleForKey:
decodeFloatForKey:
decodeInt32ForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodingCharacterLMWeight
decodingCommitActionBlock
decodingLexiconLowerBoundLogProbability
decodingLexiconWeight
decodingPruningPolicy
decodingResultWithConfiguration:withContext:
decodingWordLMLowerBoundLogProbability
decodingWordLMWeight
decrementUsageCount
defaultActiveCharacterSetForLocale:
defaultActiveCharacterSetForLocales:
defaultCommitActionBehaviorForLocale:
defaultLocaleForRecognitionType:withMode:
defaultMinimumDrawingSize
defaultPathScoringFunctionForLanguageResourceBundle:
defaultProcessor
defaultTextAffectedRangeForTargetContentInfo:
defaultWordTerminationCharacterForLocale:
delegate
deletedStrokeGroups
description
descriptionForStrokeGroupQueryItemType:
dictionary
dictionaryForKey:
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
digitCharSet
digitEndPunctuationCharSet
digitProcessor
digitStartPunctuationCharSet
directionChangeCornerIndexes
directionChangeCount
directionalFeaturesInputName
dirtyRectForStrokeGroup:
distMean
distanceBetweenFirstAndLastPoint
distanceFeatureIndex
distanceFromPoint:toRectangle:
distanceFromPoint:toSegmentFromPoint:toPoint:
distantPast
doubleValue
drawInRect:withAttributes:
drawInputDrawing:inContext:transform:
drawStrokesFromStrokeProvider:inRect:context:
drawVisualizationInRect:context:viewBounds:
drawingByRemovingUnnaturalHorizontalGaps:
drawingCanvasSize
drawingScaledByFactor:
drawingSpatiallyResampled:maxPointsPerStroke:
drawingSpatiallyResampled:outputPointMap:
drawingStrokeLimitForLocale:
drawingTarget
drawingTransformedWithTranslation:scaleFactor:
drawingWithStrokesFromIndexArray:
durationOfStrokesInStrokeGroup:strokeProvider:
edgeCountIntersectingLineSegment:
edgeIndex
effectiveClassification
effectiveEngineLanguage
effectiveLocalesFromLocales:
effectiveRecognitionLocales:recognitionMode:
ellipseCandidateResultForDrawing:candidate:
emailAtCharSet
emailProcessor
emailPunctuationCharSet
emitAveragedPoint
emitInterpolatedPoints
emitPoint:
emoticonBottomCharSet
emoticonMiddleCharSet
emoticonTopCharSet
enableCachingIfAvailable
enableGen2CharacterLMIfAvailable
enableGen2ModelIfAvailable
enableStrokeReordering
encodeBool:forKey:
encodeDouble:forKey:
encodeFloat:forKey:
encodeInt32:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedStrokeIdentifier
encodedStrokeIdentifier:
encodedStrokeIdentifiers:withStrokeProvider:
encodedStrokeProviderVersion
endCutPoint
endLocation
endOfWordPunctuationCharSet
endStroke
endTimeForStroke:
endTimestamp
endpointsForDrawing:startLocation:endLocation:
engine
engineCandidateCount
enlargedBounds
enlargedConvexHull:withMargin:
enumerateActivationsInResultArray:indexArray:block:
enumerateCharacterRectsInRange:block:
enumerateCharacterRectsInRange:reverse:block:
enumerateCodepointsInRange:reverse:usingBlock:
enumerateCodepointsInRange:usingBlock:
enumerateEdgesWithBlock:
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:
enumerateObjectsUsingBlock:
enumeratePointsForStroke:interpolationType:resolution:usingBlock:
enumeratePointsWithDistanceStep:usingBlock:
enumeratePointsWithTimestep:usingBlock:
enumerateRangesUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
enumerateTokensInTopTranscriptionPathWithBlock:
enumerateTokensInTranscriptionPath:columnRange:tokenProcessingBlock:
equationProcessor
error
errorModel
errorsByLocale
estimateWritingDirectionAndSortSubstrokesAccordingly:averageWritingOrientation:averageStrokeDeviation:
estimatedBaseline
exchangeObjectAtIndex:withObjectAtIndex:
exemplarCharacterSet
expandCodePoints
expandPathsWithCorrectedTokens:fromTokens:correctedTokenPath:originalTokenPath:
expectedMaxDotCount:
expectedMaxStrokeCount:
expectedMinStrokeCount:
extendedToken:withStrokeIndexSet:alignmentScore:bounds:
fastGroupingClusters
fastGroupingResultWithFastGroupingClusters:clusteredStrokes:
featureCounts
featureProviderForDrawing:initialVectorAnchorPoint:normalizeFeatures:padFeatures:outStrokeEndings:outInputSequenceLength:outOutputSequenceLength:
featureValueForName:
fetchContentInfoForTextInputTarget:strokeIdentifiers:completion:
fileExistsAtPath:
fileURLWithPath:
filterCandidatesWithOutOfPattern:duplicateTokenIDs:keepOutOfLexiconAlternatives:keepAlternativeLengths:keepSubstrings:shouldKeepOriginalSpelling:
filterUsingPredicate:
filteredLocalesFromGroup:results:withCharacterDetectionBlock:
filteredResultsByLocale:orderedLocales:usingLanguageFitness:outSortedLocales:
findPartialMatchInPhraseLexicon:token:contextBeforeToken:
firstIndex
firstObject
firstStrokeIdentifier
firstStrokeOrigin
flippedCenters:ofSubstrokes:maxStrokesGap:begnning:
floatForKey:
floatValue
flush
fontTransferForDrawing:transcription:shouldCancel:
fontTransferTransformForLineAtIndex:progress:shouldCancel:
forceRecognitionStrokeGroupIdentifiers
forcedActiveCharacterSet
formIntersectionWithCharacterSet:
formUnionWithCharacterSet:
formatGrammarFST
forwardLookingCharacterSet
foundItems
frame
freeformEngine
fullString
fullWidthPunctuationThatExpectsUppercaseAfter
fullWordsOnly
fullyCoveredStrokeGroupsForContextStrokes:partiallyCoveredStrokeGroups:
generateSegmentsFromDrawing:
generationDuration
gestureType
getAddedStrokes:removedStrokeIdentifiers:inStrokeProvider:lastGroupingResult:shouldCancel:
getAffectedRange:expandedToFullTokens:
getBytes:length:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
getCharIndex:
getCharacters:
getFirstStrokeIdentifier:lastStrokeIdentifier:inGroup:addingStrokeIdentifiers:removingStrokeIdentifiers:
getIndexes:
getIndexes:range:
getMergingEndOfLineCost:mergingEndOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:
getMergingMiddleOfLineCost:mergingMiddleOfLineStroke:forStroke:consistingOfSubstrokes:toLineGroup:
getModelConfigurationForDrawing:outNumStrokes:outNumPoints:
getSpellCorrectedToken:contextBeforeToken:
getValue:
getValue:size:
groupBounds1
groupBounds2
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:firstStrokeOrigin:
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:startTimestamp:endTimestamp:
groupByAddingStrokeIdentifiers:removingStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:lastSubstrokeIndexBeforeMerge:firstStrokeOrigin:
groupingConfidence
groupingResultForContextStrokes:clusteredStrokes:fastGroupingResult:point:tokenizationLevel:
groupingResultUsingStrokes:distanceMetric:mergingDistanceThreshold:shouldCancel:
groupingResultsByStrategyIdentifier
groupingStrategiesByIdentifier
handleConfusableCharactersInToken:previousContext:
handleConfusableIsolatedCharacterToken:
handleRecognitionRequest:withReply:
handleRemainingStrokes:contextStrokeGroups:transformations:groupBounds:
hasBeenSubmitted
hasCompleteRecognitionResults
hasPrefix:
hasSamePostProcessingAsConfiguration:
hasSameResourcesAsConfiguration:
hasSubstringInSet:
hasSuffix:
hasTextReplacementsInColumnRange:
hash
hashtagDelimiters
hashtagQueryForRecognitionSession:
heartCandidateResultForDrawing:candidate:
heuristicTextScore
heuristicTextScoreForColumnRange:
highConfidenceDebugDescription
highConfidenceTextForSessionResult:rejectionRate:doesContainUnfilteredMultiLocaleResults:
highDensityStrokeCount
highestDirectionChangeCount
highestSymbolActivationWithResultArray:indexArray:symbol:
icuTransliterator
inappropriateWordIndexes
incrementUsageCount
indexAtPosition:
indexOfEquivalentTokenRow:tokenRange:
indexOfFirstLocaleWithLanguage:orderedLocales:
indexOfObject:
indexOfObjectIdenticalTo:
indexOfObjectPassingTest:
indexPathByAddingIndex:
indexPathByRemovingLastIndex
indexPathWithIndex:
indexPathWithIndexes:length:
indexSet
indexSetWithIndex:
indexSetWithIndexesInRange:
indexableContent
indexableTextRepresentation
indexesOfObjectsPassingTest:
indexesOfStrokesSmallerThanSize:
init
initForDigitFields
initForPhoneNumberFields
initMecabraIfNeededWithType:learningDictURL:
initProcessorDefault:processorDigits:processorPhone:processorUsername:processorEmail:processorURL:processorASCII:processorEquation:
initWithActivations:
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:orderedStrokeIdentifiers:
initWithAncestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
initWithArray:
initWithArray:copyItems:
initWithAttributedString:
initWithAutoCapitalizationMode:shouldAutoCorrect:shouldAutoCapitalize:shouldCreatePseudoTokens:locale:staticLexicon:customLexicon:phraseLexicon:customPhraseLexicon:spellChecker:lmVocabulary:ovsStringChecker:textReplacements:
initWithBestPathTokens:pathProbabilities:trailingSeparator:recognizerGenerationIdentifier:
initWithBestPathTokens:pathProbabilities:trailingSeparator:recognizerGenerationIdentifier:changeableColumnCount:
initWithBytes:length:encoding:
initWithCGImage:
initWithCVNLPLanguageModel:locale:decodingWeight:lowerBoundLogProbability:
initWithCanvasHeatmap:stroke2ItemMapping:item2StrokeMapping:
initWithCapacity:
initWithCaretTipPoint:targetContentInfo:locale:normalizedDrawing:originalDrawing:
initWithCoder:
initWithCommitActionBehavior:scoringFunction:beamWidth:pathCount:shouldOptimizeAlignment:pruneProblematicMixedScriptWordPaths:
initWithComputeUnits:
initWithConfusion:correction:locales:leftContext:rightContext:requiresLexiconMatch:
initWithContentsOfFile:
initWithContentsOfJSONDictionary:
initWithContentsOfXYString:
initWithContextStrokes:contextResults:strokeGroupingResult:strokeClassificationResult:strokeProvider:
initWithData:
initWithDataPointer:shape:dataType:strides:deallocator:error:
initWithDictionary:copyItems:
initWithDictionary:error:
initWithDrawing:characterSet:expandCodePoints:normalizationContext:maxCandidateCount:
initWithEdgeIndex:numberOfSubstrokes:numberOfSegments:classifiableDrawing:strokeGroup:
initWithFIFO:
initWithFIFO:drawingTarget:
initWithFIFO:width:
initWithFIFO:width:spacing:
initWithFastGroupingClusters:clusteredStrokes:strokeProvider:strategyIdentifier:clutterFilter:
initWithFile:
initWithGestureType:targetContentInfo:locale:normalizedDrawing:originalDrawing:lastStroke:preferCharacterLevel:
initWithHistory:activeRange:
initWithIdentifier:frame:
initWithIdentifier:stableIdentifier:strokeIdentifiers:correctionResult:
initWithIndexSet:
initWithIndexableTextRepresentation:presentableTextRepresentation:
initWithIndexes:length:
initWithInputTarget:affectedRange:textResult:resultType:isCharacterLevel:error:
initWithLMLanguageModel:locale:decodingWeight:lowerBoundLogProbability:
initWithLexicon:priority:
initWithLexicons:characterLanguageModel:wordLanguageModel:
initWithLexicons:decodingWeight:lowerBoundLogProbability:inputNormalizationFunction:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:isHighResponsivenessTask:strokeClassificationModel:strokeGroupingRequirement:partialResultBlock:
initWithLocales:preferredLocales:strokeProvider:inputResult:recognitionQOSClass:recognitionEnvironment:isHighResponsivenessTask:strokeClassificationModel:strokeGroupingRequirement:subjectStrokeIdentifiers:partialResultBlock:
initWithLocales:recognitionMode:drawing:options:priority:
initWithLocales:remoteRecognition:priority:
initWithLocales:strokeProvider:initialTextInputTargets:inputResult:recognitionEnvironment:
initWithMLModel:modelKey:
initWithMachServiceName:options:
initWithMaxResultCount:
initWithMecabra:wordLanguageModel:ovsStringChecker:promoteKanaConversion:
initWithMode:
initWithMode:locale:
initWithMode:locale:contentType:autoCapitalizationMode:autoCorrectionMode:enableCachingIfAvailable:enableGen2ModelIfAvailable:enableGen2CharacterLMIfAvailable:
initWithMode:locale:contentType:enableCachingIfAvailable:enableGen2ModelIfAvailable:enableGen2CharacterLMIfAvailable:
initWithMode:locale:learningDictionaryURL:
initWithMode:locale:learningDictionaryURL:recognizerOptions:
initWithMode:locale:recognizerOptions:
initWithMode:locales:activeCharacterSetPerLocale:recognizerOptions:
initWithMode:recognitionSessionResult:dataSource:
initWithMode:withVersion:
initWithModelName:
initWithModelName:decodingPruningPolicy:
initWithMultiArray:domainType:characterObservations:blankIndex:pruningPolicy:
initWithMultiArray:indexArray:domainType:characterObservations:blankIndex:pruningPolicy:
initWithOVSStringChecker:
initWithObjects:
initWithOrderedLocales:resultsByLocale:errorsByLocale:languageFitnessByLocale:inputStrokeIdentifiers:
initWithOrderedLocales:resultsByLocale:errorsByLocale:languageFitnessByLocale:inputStrokeIdentifiers:inputDrawing:inputDrawingCutPoints:
initWithPatternFst:
initWithPatternFst:patternType:capitalizationToSplit:convertToLowercase:
initWithRecognitionSession:
initWithRecognitionSession:prefix:validSuffixes:delimiters:
initWithRect:
initWithResult:leftContext:contentType:
initWithResult:validStrokes:
initWithScannerType:passiveIntent:
initWithScore:
initWithSegmentGroupIndex:segments:
initWithSegmentID:startCutPoint:endCutPoint:referenceDrawing:
initWithSequence:
initWithSessionVersion:sessionResultVersion:
initWithShape:dataType:error:
initWithShouldAddAlternatives:
initWithShouldKeepOutOfPatternCandidates:shouldKeepDuplicateTokenIDs:shouldKeepOutOfLexiconAlternatives:shouldKeepAlternativeLengths:shouldKeepSubstrings:shouldKeepOriginalSpelling:
initWithStaticLexicon:customLexicon:
initWithStaticLexicon:customLexicon:locale:
initWithStep:
initWithString:attributes:
initWithString:score:rotation:
initWithString:score:rotation:center:size:
initWithString:score:rotation:center:size:stemLocation:stemWidth:
initWithString:score:rotation:startLocation:startEndpointType:endLocation:endEndpointType:midPointLocation:controlPointLocation:
initWithString:score:rotation:startLocation:startEndpointType:endLocation:endEndpointType:midPointLocation:controlPointLocation:pathPoints:
initWithString:score:rotation:upperLeftPoint:upperRightPoint:lowerLeftPoint:lowerRightPoint:size:
initWithString:score:rotation:vertex1:vertex2:vertex3:
initWithString:score:wordRanges:wordIDs:wordRecognitionScores:wordCombinedScores:wordStrokeSets:wordLexicalEntries:wordPatternEntries:rareWordIndexes:inappropriateWordIndexes:isTextReplacement:
initWithString:strokeIndexes:wordID:recognitionScore:combinedScore:alignmentScore:properties:substrokeCount:bounds:
initWithStroke:consistingOfSubstrokes:classificationAsNonText:lineOrientation:lineError:containerScore:
initWithStrokeClassificationsByStrokeIdentifier:substrokesByStrokeIdentifier:nontextCandidates:
initWithStrokeGroupIdentifier:stableIdentifier:strokeIdentifiers:type:preferredLocale:tokenizedTextResultsByLocale:errorsByLocale:
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:groupingResultsByStrategyIdentifier:
initWithStrokeGroups:createdStrokeGroups:deletedStrokeGroups:substrokePlacementsByStrokeIdentifier:
initWithStrokeIdentifier:bounds:startTimestamp:endTimestamp:convexHull:curvature:
initWithStrokeIdentifier:substrokesCount:classificationAsNonText:lineOrientation:lineError:containerScore:bounds:boundsDiagonal:enlargedBounds:rotatedBounds:supportByStrokeIdentifier:support:
initWithStrokeIdentifiers:
initWithStrokeIdentifiers:detectedResult:estimatedBaseline:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:startTimestamp:endTimestamp:
initWithStrokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
initWithStrokeIdentifiers:queryResult:estimatedBaseline:
initWithStrokeIdentifiers:resultLevel:
initWithStrokeIndex:pointIndex:isEndOfStroke:
initWithStrokeProvider:
initWithStrokeProvider:defaultWritingOrientation:locales:isInlineContinuousMode:inlineContinuousModeTargets:
initWithStrokeProvider:locale:textInputTargets:
initWithStrokeProvider:locales:clutterFilter:
initWithStrokeProvider:sessionLastResult:locales:isInlineContinuousMode:inlineContinuousModeTargets:
initWithStrokeProviderVersion:encodedStrokeProviderVersion:orderedStrokeIdentifiers:sessionMode:locales:preferredLocales:clutterFilter:strokeClassificationResult:strokeGroupingResult:recognitionResults:inlineContinuousModeResults:generationDuration:recognitionEnvironment:
initWithStrokes:substrokesByStrokeIdentifier:splitIndex:
initWithSubstroke:
initWithTextCorrectionResult:inputStrokeIdentifiers:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:activePreviewRange:contentType:lastCharacterLevelPosition:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:autoCapitalizationMode:autoCorrectionMode:isSingleLine:lastCharacterLevelPosition:
initWithTextInputTarget:contentLength:referenceSubstring:referenceSubstringRange:charRectsInReferenceSubstring:strokeCoveredTextRange:selectedTextRange:isCursorStrong:activePreviewRange:contentType:isSingleLine:lastCharacterLevelPosition:
initWithTextResult:terminatingSpecialCharacter:strokeGroup:
initWithTextResults:
initWithTokenColumns:transcriptionPaths:scores:recognizerGenerationIdentifier:
initWithTokenColumns:transcriptionPaths:scores:trailingSeparator:recognizerGenerationIdentifier:
initWithTokenColumns:transcriptionPaths:scores:trailingSeparator:recognizerGenerationIdentifier:changeableColumnCount:
initWithTokenRows:
initWithTrie:staticLexicon:customLexicon:flags:stringNormalizationFunction:
initWithType:mode:
initWithType:mode:learningDictionaryURL:
initWithType:mode:locale:
initWithType:mode:locale:learningDictionaryURL:
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:classification:groupingConfidence:strategyIdentifier:firstStrokeOrigin:orderedStrokeIdentifiers:
initWithUniqueIdentifier:ancestorIdentifier:strokeIdentifiers:firstStrokeIdentifier:lastStrokeIdentifier:bounds:strategyIdentifier:writingDirectionSortedSubstrokes:averageWritingOrientation:averageStrokeDeviation:writingDirectionSortedStrokeIdentifiers:localStrokeWritingOrientations:coalescedLastSubstrokes:groupingConfidence:firstStrokeOrigin:
initWithUsesCPUOnly:
initWithVertices:vertexCount:
initWithWordLanguageModel:ovsStringChecker:
initialTextInputTargets
inputDescriptionsByName
inputDrawing
inputDrawingCutPoints
inputNames
inputResult
inputStrokeIdentifiers
inputTarget
inputTargetIdentifier
insertObject:atIndex:
insertString:atIndex:
insightRequest
intValue
integerValue
interfaceWithProtocol:
interpointDistance
interpolateFromPoint:toPoint:controlPoint:time:
intersectsIndexesInRange:
intersectsSet:
invalidate
invertedSet
isAbbreviation
isCharacterEmoji:
isCharacterFullWidth:
isCharacterLevel
isCompletePattern
isCursorStrong
isDrawingCenterOnBlank:targetContentInfo:insertionLocation:
isEditGestureForDrawing:targetContentInfo:tentativeResultType:
isEnabledVisualizationForIdentifier:
isEndOfStroke
isEqual:
isEqualToCHEncodedStrokeIdentifier:
isEqualToData:
isEqualToDictionary:
isEqualToDrawing:
isEqualToIndexSet:
isEqualToInputTarget:
isEqualToNonTextCandidateStroke:
isEqualToNumber:
isEqualToPrefixQueryItem:
isEqualToRecognitionSessionResult:
isEqualToRecognizerConfiguration:
isEqualToRemoteRecognitionRequest:
isEqualToRemoteRecognizer:
isEqualToSearchQueryItem:
isEqualToSerializableRecognitionSessionResult:
isEqualToSet:
isEqualToString:
isEqualToStrokeClassificationResult:
isEqualToStrokeGroup:
isEqualToStrokeGroupRecognitionResult:
isEqualToStrokeGroupTextCorrectionResult:
isEqualToStrokeGroupingResult:
isEqualToSubstroke:
isEqualToTextCorrectionResult:
isEqualToTextInputQueryItem:
isEqualToTokenizedTextResult:
isEqualToTokenizedTextResultColumn:
isEqualToTokenizedTextResultToken:
isEquivalentToStrokeClassificationResult:
isEquivalentToStrokeGroup:
isEquivalentToToken:
isFinished
isHighDensityStroke:
isHighResponsivenessTask
isInappropriateLexiconEntry:
isInappropriateString:
isInappropriateTokenID:
isInlineContinuousMode
isKindOfClass:
isLanguageSupported:withMode:
isLocaleSupported:
isLocaleSupported:withMode:
isMainThread
isMatchingStringInLexicon:withLexicon:
isMecabraConversionCandidateAllowed:
isMemberOfClass:
isOVSString:
isPointEnumerationSupportedForStroke:
isPrefixForDrawing:
isRareChineseEntry:
isRemoteRecognition
isRightToLeftScriptForCharacter:
isScribbleActive
isSingleLine
isSinglePointSegment
isSkippableScriptCode:
isStringInLexicon:
isStroke:versionOfStrokeWithIdentifier:
isStrokeGroupSet:equivalentToStrokeGroupSet:
isSubsetOfSet:
isSupersetOfSet:
isSupportedCyrillicScriptLocale:withMode:
isSupportedLatinScriptLocale:withMode:
isTextMode
isTextReplacement
isValidForLocale:
isValidSessionResultVersion
isValidSessionVersion
isVerticalBarShapeFromLineResult:originalDrawing:isDirectionDownward:
isWordInUserDictionaries:caseSensitive:
itemIdentifier
itemStableIdentifier
jsonRepresentationWithContext:
keysOfEntriesPassingTest:
koreanParticlesCharSet
languageCode
languageFitnessByLocale
languageFitnessForLocale:
languageFitnessForLocale:recognitionMode:
languageModel
languageResourceBundle
languageResourceBundleWithStaticLexicon:customLexicon:wordLanguageModel:
lastCharacterLevelPosition
lastCharacterSegmentCount
lastCharacterSegmentIndexes
lastIndex
lastObject
lastPathComponent
lastPoint
lastProcessedStrokeProviderVersion
lastRecognitionResult
lastRecognitionResultWaitingForPendingTasks
lastStroke
lastStrokeIdentifier
lastStrokeInGroup:strokeProvider:
lastSubstrokeIndexBeforeMerge
lastTokenStrokeIndexes
latestStrokeProvider
layeringPriority
learningDictionaryURL
leftContext
length
lengthOfBytesUsingEncoding:
letterCharacterSet
lexiconCorrectionsForToken:locale:lexicon:lmVocabulary:ovsStringChecker:textReplacements:consumableStrokesSet:minimumTokenScore:activeHistoryRange:outBestTokenScore:shouldCapitalizeWord:shouldSkipEntryCorrection:allowFullCapsCorrections:minimalLengthForLowConfidenceCorrections:lowConfidenceThreshold:minimalLengthForCustomCapitalizationCorrections:outBestTokenIndex:outFoundTokenInLexicon:outFoundCaseMatchingTokenInLexicon:outCorrectionFromOutOfContextEntry:
lexiconHasEntryForString:withLexicon:
lexiconSkipCharSet
lexiconStringNormalizationFunction
lineBreakVerticalBarGestureEnabled
lineBreakVerticalBarUpToDelete
lineCandidateResultForDrawing:candidate:
lineError
lineGroupingResultUsingStrokes:shouldCancel:
lineOrientationAngle
lineOrientationForStrokePoints:error:
lineWidth
linguisticResourcesFallbackLocale
lmSPIType
lmVocabulary
loadFromFile:
loadSessionData:error:
loadWordLanguageModelFromOptions:fallbackLocale:
localStrokeWritingOrientations
localWritingOrientationAtStrokeIndex:
locale
localeIdentifier
localeWithLocaleIdentifier:
localesByLanguageGroup:
localesSortedByCombinedLanguageFitness:
localesSortedByRawLanguageFitness:
localizedDescription
localizedNameForRecognitionSessionStatusKey:
localizedNameForVisualizationIdentifier:
localizedStringForKey:value:table:
logDrawingsAndResultsForRequest:result:error:
longCharacterIsMember:
lowerLeftPoint
lowercaseCharSet
lowercaseLetterCharacterSet
lowercaseStringWithLocale:
main
mainBundle
majorityScriptId
manhattanLineCandidateResultForDrawing:candidate:rejectionResult:
matchedString
matchingStrokePrefixRangeForDrawing:
maxCandidateCount
maxInputWidth
maxNumberOfInputStrokes
maxPointsPerStroke
maxRecognitionResultCount
maxRecognitionResultDefaultCount
maxResultCount
maximumLengthOfBytesUsingEncoding:
meanRotationCorrectionAngle
mecabraCandidate
mecabraContextRef
mecabraInputMethodType
mecabraRareWordIndexes:wordRanges:
mecabraTokenizationAndKanaConversionForString:mecabraEngine:contextRef:leftCandidateRef:alternativeCandidateLimit:
mecabraWrapper
meetsContextRequirementWithLeftContext:rightContext:
mentionQueryForRecognitionSession:
mergeGroupsPostProcessing:createdGroups:deletedGroups:
mergeTokenRow:intoUniqueRows:
mergedResultPostProcessor
middlePunctuationCharSet
midpointLocation
minPointsPerStroke
minimumDrawingSize
minusSet:
mode
model
modelConfigurationsNumPoints
modelConfigurationsNumStrokes
modelDecoderSize
modelDescription
modelKey
modelName
modelNameChinese
modelNameCyrillic
modelNameJapanese
modelNameLatin
modelNameThai
modelSmallestConfig
modelWithContentsOfURL:configuration:error:
modifiesOriginalTokens
multiArrayConstraint
mutableCopy
mutableCopyWithZone:
newCJKStaticLexicon
newCTCRecognitionModel
newCTCTextDecoderWithStaticLexicon:customLexicon:wordLanguageModel:
newCharacterLanguageModelAndMap:force:
newColorForVisualizedItemAtIndex:
newCursorByAdvancingCursor:withSymbol:
newCursorByAdvancingWithString:fromCursor:inNetwork:
newCursorByAdvancingWithSymbol:fromCursor:inNetwork:
newDrawingWithAffineTransform:
newDrawingWithTransform:
newErrorModel
newEstimatedBaselineForStrokesWithTokens:tokenStrokeIdentifiers:
newEstimatedBaselineForSubStrokes:tokens:tokenSubStrokeIndexes:estimatedDescenderLocations:
newFreeFormEngine
newGrammarFST
newGroupingManager
newGroupsDefaultToActive
newMecabraWrapper
newMergedResultPostProcessorWithStaticLexicon:customLexicon:stringChecker:
newOVSStringCheckerWithStaticLexicon:customLexicon:
newPatternFST
newPhraseLexicon:
newPostProcessorWithStaticLexicon:customLexicon:phraseLexicon:customPhraseLexicon:characterLM:textReplacements:postProcessingFST:wordLM:mecabraWrapper:ovsStringChecker:spellChecker:lmVocabulary:maxResultCount:
newRadicalClusterFST
newRecognitionEngine
newRemoteRecognizerWithMode:locales:
newSecondaryStaticLexicon:
newStaticLexicon:
newStrokeClassifier
newTransliterationVariantMap
newWordLanguageModel
newWordLanguageModelForRecognizer:async:synchronizationQueue:
newlineCharacterSet
nextFIFO
nodeIndexAtPosition:
nodeIndexCount
nonSpaceSeparatorCharSet
nonTextCandidateForStroke:withSubstrokes:
nonretainedObjectValue
nontextCandidates
normalizationContext
normalizeFeatures
normalizeLMTokenIDForWord:tokenID:isFromPattern:score:wordLanguageModel:
normalizedDrawing
normalizedDrawing:interpolationDistance:
normalizedDrawing:scaleFactor:interpolationDistance:outputPointMap:
normalizedDrawing:targetHeight:minimumDrawingSize:interpolationDistance:outScaleFactor:outputPointMap:
numCharacters
numInputFeatures
numOutputClasses
numberOfSegments
numberOfSubstrokes
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numeralEndLetterCharSet
obfuscateString:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
objectsPassingTest:
offsetAllStrokeIndexesBy:
openingBracketCharacters
openingQuoteCharacters
orderedSetWithArray:
orderedSetWithCapacity:
orderedStrokeIdentifiers
orderedStrokes
orderedStrokesGroup1
orderedStrokesGroup2
orientationRepresentationForSampling:convolutionWidth:
orientationTransform
orientedBounds
originalWritingDirectionIndex
orthographyWithDominantScript:languageMap:
outlineArrowCandidateResultForDrawing:candidate:
outputDescriptionsByName
outputNames
outputResult
overridenParameterValueForKey:defaultValue:
ovsStringChecker
parametersOverride
partialResultBlock
path
pathPoints
pathScoringFunctionForLanguageResourceBundle:
patternFST
patternToSymbolMap
patternType
pause
pentagonCandidateResultForDrawing:candidate:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
phoneProcessor
phraseCaseCorrectedResultWithHistory:phraseLexicon:maxPhraseLength:
phraseLexicon
pointCount
pointCountForStrokeIndex:
pointIndex
points
polygonByIntersectingWithClipPolygon:
polygonDrawing
postProcessingFST
postProcessor
postProcessorLexiconWithStaticLexicon:secondaryLexicon:
precedingLineBreaks
precedingSeparatorForRawTranscriptionPath
precedingSeparatorForToken:
precedingSeparatorForTopTranscriptionPath
precedingSpaceDefaultBehavior
precomposedStringWithCanonicalMapping
predicateWithBlock:
predictionFromFeatures:options:error:
preferCharacterLevel
preferredLocales
preferredRecognitionResultUpdatesInterval
preferredUpdatesInterval
prefix
prefixCapitalizationExceptionCharSet
prefixQueryWithPrefix:forRecognitionSession:
prepareQuoteCountFromLeftContext:
prependTokenColumns:prefixTopPath:
presentableTextRepresentation
prevPoints
preventLeftoverCharsInSubwordGestures
priority
process:options:
process:withProcessor:options:
progressWithTotalUnitCount:
progressWithTotalUnitCount:parent:pendingUnitCount:
promoteKanaConversion
properties
protectedCharacterIndexes
pseudospaceIndex
punctuationCharacterSet
punctuationThatExpectsUppercaseAfter
q_foundItemsForSearchString:sessionResult:
q_itemTypeForStrokeGroup:recognitionResult:
q_queryResultDidChange
q_setNeedsQueryResultUpdating
q_strokeGroupItemsFromSessionResult:
q_textInputItemsFromSessionResult:
q_updateQueryResult
queryDidUpdateResult:
queryItemStableIdentifierForStrokeGroup:
queryResult
queryString
radicalClusterFST
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:
rangeOfCharacterFromSet:options:range:
rangeOfComposedCharacterSequenceAtIndex:
rangeOfComposedCharacterSequencesForRange:
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeOfTokenAtCharacterIndex:inString:locale:
rangeValue
rawTranscription
reachesActivationThreshold:inCharacterSet:resultArray:indexArray:
rebuildRecognitionResults
recognitionEngineCachingKey
recognitionEngineCachingKeyForRecognitionLocale:
recognitionEnvironment
recognitionError
recognitionLocales
recognitionMaxStrokes
recognitionModel
recognitionQueue
recognitionResultForStrokeGroupIdentifier:
recognitionResultsByLocale
recognitionResultsForDrawing:options:
recognitionResultsForDrawing:options:shouldCancel:
recognitionResultsForGroupingResult:groupingManager:
recognitionResultsForSingleCharacterDrawing:segmentGroup:options:history:
recognitionResultsForSketchDrawing:options:
recognitionScore
recognitionSession
recognitionSessionDidChangeStatus:
recognitionSessionDidUpdateRecognitionResult
recognitionSessionDidUpdateRecognitionResult:
recognizableDrawingForStrokeGroup:translationVector:originalDrawing:orderedStrokesIDs:rescalingFactor:
recognizableDrawingForStrokeGroupQueryItem:
recognizeDrawing:minimumDrawingSize:initialVectorAnchorPoint:activeCharacterSet:outStrokeEndings:outFallbackSymbol:outFallbackSymbolScore:
recognizerActiveCharacterSet
recognizerConfigurationKeyWithLocale:
recognizerContentType
recognizerContentTypeDescription
recognizerDebugDescription
recognizerForLocale:
recognizerGenerationIdentifier
recognizerLocale
recognizerMaxRecognitionResultCount
recognizerMinimumDrawingSize
recognizerOptions
recognizerRecognitionMode
recognizerRecognitionModeDescription
recordConfigurationForRecognizer:options:
recordInputDrawing:
recordInsightRequest:
recordInsightWithRequest:
recordTextResult:recognitionError:
recordedInsightFromLastRequest
rectangleCandidateResultForDrawing:candidate:
reduceMemoryByResizing
referenceSubstring
referenceSubstringInRange:
referenceSubstringRange
referenceSubstringRangeOfComposedCharacterAtIndex:
refineStrokeClassificationResultUsingClassificationResult:strokeClassificationModel:sortedAddedStrokes:removedStrokeIdentifiers:cancellationBlock:
refineWritingOrientationAndResortSubstrokes:averageWritingOrientation:
registerChangeObserver:
registerInputDrawingClient:
registerTask:background:
regularizedPathFromPoints:delta:gamma:outError:
relativeLocationFromAbsoluteLocation:
releaseModelWithKey:
removeAllIndexes
removeAllObjects
removeCharactersInString:
removeIndex:
removeIndexes:
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsInRange:
removeTask:
removeTokenRowAtIndex:
replaceCharactersInRange:withString:
replaceObjectAtIndex:withObject:
replaceOccurrencesOfString:withString:options:range:
replacementErrorScoreForIntendedCharacter:actualCharacter:
requiredInappropriateFilteringFlags
requiredLeftContext
requiredRightContext
requiresLexiconMatch
resampledDrawing
resignCurrent
resourcePath
respondsToSelector:
result
resultDrawn
resultLevel
resultType
resultsBySwapping:swappableColumns:topLocaleIndex:topLocale:
resume
retain
retainCount
retrieveActivationMatrixForDrawing:recognitionEngineCachingKey:outStrokeEndings:
retrievePartialResultsForDrawing:recognitionEngineCachingKey:matchingColumnRange:
rootCursorForContentType:inNetwork:forFirstSegmentGroup:
rootCursorForPatternType:inNetwork:forFirstSegmentGroup:
rotatedBounds
rotation
saveInputDrawings
scanHexInt:
scannerWithString:
score
scriptCode
scriptCodeForCodepoint:
scriptHistogramForString:
secondaryStaticLexicon
segmentBounds
segmentGroupIndex
segmentID
segments
selectedTextRange
self
selfLoopPunctuationCharSet
sentenceStartPunctuationInSpanish
sequence
sequenceCompression
servesBackgroundIndexation
sessionData
sessionLastResult
sessionMode
sessionResultVersion
sessionVersion
setActivationMatrix:
setActiveCharacterSet:
setActivePreviewRange:
setActiveStrokeGroupAncestorIdentifiers:
setActiveTextInputQuery:
setAlignmentScore:
setAllowedCharacters:
setAlphaNumericCharSet:
setArea:
setArithmeticOperatorCharSet:
setAsciiProcessor:
setAutoCapitalizationMode:
setAutoCorrectionMode:
setBounds:
setByAddingObjectsFromSet:
setCJKPairedPunctuationsCharSet:
setCachedDrawing:
setCachedResults:
setCancelled:
setCapitalizationToSplit:
setCaseMatchingOnly:
setChangeableTokenColumnCount:
setCharacterIDMap:
setCharacterLanguageModel:
setCharacterReplacements:
setCharacterTransliterations:
setCjkDynamicLexicon:
setCjkStaticLexicon:
setClasses:forSelector:argumentIndex:ofReply:
setClosingBracketCharacters:
setClosingQuoteCharacters:
setCoalescedCenter:
setCombinedScore:
setCommonJapaneseSymbols:
setCompletedUnitCount:
setConsumableStrokesCharSet:
setContainsCommittedStrokes:
setContainsDotCharSet:
setContainsTwoDotsCharSet:
setContextBounds:
setContextInvariantCharacterSet:
setContextResults:
setContextStrokes:
setControlPoints:
setConvertToLowercase:
setCorrectionAngles:
setCurrencySymbols:
setCustomLexicon:
setCustomLexicon:customVocabulary:
setCustomPhraseLexicon:
setDataSource:
setDateFormat:
setDateTimeEndLetterCharSet:
setDateTimeSeparatorCharSet:
setDecodingPruningPolicy:
setDefaultProcessor:
setDelegate:
setDigitCharSet:
setDigitEndPunctuationCharSet:
setDigitProcessor:
setDigitStartPunctuationCharSet:
setDistMean:
setDistStd:
setDrawing:
setDrawingTarget:
setEmailAtCharSet:
setEmailProcessor:
setEmailPunctuationCharSet:
setEmissionHandler:
setEmitInterpolatedPoints:
setEmoticonBottomCharSet:
setEmoticonMiddleCharSet:
setEmoticonTopCharSet:
setEnableCachingIfAvailable:
setEnableGen2CharacterLMIfAvailable:
setEnableGen2ModelIfAvailable:
setEnableStrokeReordering:
setEnabled:forVisualizationIdentifier:
setEndOfSentencePunctuationCharSet:
setEngine:
setEquationProcessor:
setErrorModel:
setForceRecognitionStrokeGroupIdentifiers:
setFormatGrammarFST:
setForwardLookingCharacterSet:
setFreeformEngine:
setFullWidthPunctuationThatExpectsUppercaseAfter:
setFullWordsOnly:
setHasBeenSubmitted:
setIcuTransliterator:
setInputDrawing:
setInsightRequest:
setInterpointDistance:
setInterruptionHandler:
setInvalidationHandler:
setIsCursorStrong:
setIsSingleLine:
setKoreanParticlesCharSet:
setLastCharacterLevelPosition:
setLastCharacterSegmentCount:
setLastPoint:
setLastProcessedStrokeProviderVersion:
setLearningDictionaryURL:
setLexiconSkipCharSet:
setLineHeight:
setLineWidth:
setLmVocabulary:
setLocale:
setLocales:
setLowercaseCharSet:
setMaxComputationBatchSize:
setMaxRecognitionResultCount:
setMaxResultCount:
setMecabraWrapper:
setMergedResultPostProcessor:
setMiddlePunctuationCharSet:
setMinimumDrawingSize:
setMinimumSignificantSegmentLength:
setNeedsDisplayInRect:
setNeedsRecognitionUpdate
setNextFIFO:
setNonSpaceSeparatorCharSet:
setNormalizeFeatures:
setNumeralEndLetterCharSet:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOpeningBracketCharacters:
setOpeningQuoteCharacters:
setOptions:
setOriginalWritingDirectionIndex:
setOvsStringChecker:
setParametersOverride:
setPartialResultBlock:
setPath:
setPatternFST:
setPhoneProcessor:
setPhraseLexicon:
setPoints:
setPostProcessingFST:
setPostProcessor:
setPrecedingLineBreaks:
setPreferredLocales:
setPreferredUpdatesInterval:
setPrefixCapitalizationExceptionCharSet:
setPrevPoints:
setPriority:
setProperties:
setProtectedCharacterIndexes:
setPunctuationThatExpectsUppercaseAfter:
setPunctuationThatNeedSpaceCleanup:
setRadicalClusterFST:
setRecognitionEnvironment:
setRecognitionError:
setRecognitionMode:
setRecognitionModel:
setRecognitionQueue:
setRecognitionScore:
setRecognitionType:
setRecognizerActiveCharacterSet:
setRecognizerContentType:
setRecognizerLocale:
setRecognizerMaxRecognitionResultCount:
setRecognizerMinimumDrawingSize:
setRecognizerOptions:
setRecognizerRecognitionMode:
setReferenceSubstring:range:characterRects:
setRemoteObjectInterface:
setResult:
setSaveInputDrawings:
setScore:
setSecondaryStaticLexicon:
setSelectedTextRange:
setSelfLoopPunctuationCharSet:
setSentenceStartPunctuationInSpanish:
setSequence:
setServesBackgroundIndexation:
setShouldAddAlternatives:
setShouldAutoCapitalize:
setShouldAutoCorrect:
setShouldCreatePseudoTokens:
setShouldForceFastGrouping:
setShouldKeepAlternativeLengths:
setShouldKeepOriginalSpelling:
setShouldKeepOutOfLexiconAlternatives:
setShouldKeepOutOfPatternCandidates:
setShouldKeepSubstrings:
setShouldUseDynamicSampling:
setShouldUseTextReplacements:
setSignatureUniChar:
setSpacing:
setSpellChecker:
setStartPunctuationCharSet:
setStateType:
setStaticLexicon:
setStatusReportingEnabled:
setString:
setStrokeClassificationResult:
setStrokeCoveredTextRange:
setStrokeDeviation:
setStrokeGroupingOnly:
setStrokeGroupingResult:
setStrokeIndexes:
setStrokeMaxPenalties:
setStrokeProvider:
setStrokes:
setSubstrokeCount:
setSupportByStrokeIdentifier:
setSupportsAutoLineBreaks:
setSymbolsRequiringSpaceBeforeInFrench:
setSymmetricQuoteCharacters:
setTextContentLength:
setTextInputTarget:
setTextInputTargetsDataSource:
setTextReplacementLowercasedKeyMapping:
setTextReplacements:
setTextResult:
setTokenColumns:
setTokenRowWithTokens:atIndex:
setTokenRows:
setTotalDuration:
setTranscriptionPaths:scores:
setTransliterateSentences:
setTransliterationVariantMap:
setUnitScale:
setUnitScaleForViewSize:normalizedSize:contentScaleFactor:
setUnlikelyHasLatinContents:
setUppercaseCharSet:
setUrlProcessor:
setUrlPunctuationCharSet:
setUsernameProcessor:
setValidSuffixes:
setValue:forKey:
setWidth:
setWidthAlternativeCharacterSet:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
setWordID:
setWordLanguageModel:
setWritingOrientation:
set_changeCoalescingIndex:
set_queryActive:
set_registeredAsInputDrawingsClient:
set_storedAffectedRange:
set_strokeProviderDrawn:
setup
shape
sharedCharacterSetRules
sharedPostProcessingFST
sharedSettings
sharedSpellServer
shouldAddAlternativeWidthCandidates
shouldAddAlternatives
shouldAddSpaceToNeutralQuotationMarks:
shouldAdjustColumnsFromPostprocessingStepOptions:
shouldAdjustGroupingForLocale:
shouldAdjustGroupingHeuristicsForVeryComplexCharacters:
shouldAllowNGramCharacterLM
shouldAllowSpaceInsertionGestureForLocale:
shouldApplyCandidatesThresholding
shouldApplyChinesePostProcessing
shouldApplyLMRescoring
shouldApplyLMSorting
shouldApplyLatinSpacingForLocale:
shouldApplyLexicalPenalty
shouldApplyRomanPostProcessing
shouldAutoCapitalize
shouldAutoCorrect
shouldCapitalizeGivenHistory:shouldAutoCapitalizeSetting:locale:
shouldComputeStrokePenalties
shouldConvertKanaInPostProcessing
shouldCorrectionGesturesSnapToTokensForScriptCode:
shouldCreatePseudoTokens
shouldDetectChinesePunctuation
shouldDetectRomanPunctuation
shouldDrawStrokeGroup:
shouldEnforceGrammarOnTransliterations
shouldExpandCodePoints
shouldExpandLexiconInNetwork
shouldFallbackOnSingleCharacterExpansion
shouldFilterLowProbabilityTranscriptionPaths
shouldFilterOutStringForToken:isGibberish:
shouldForceFastGrouping
shouldForceNoAlternativeRecognitionCandidates:
shouldForwardMecabraOTAAssetsUpdate
shouldGenerateDigitLetterAlternatives
shouldInsertSpaceBetweenPreviousChar:andNextChar:inLocale:inString:atRange:withQuoteCount:
shouldKeepAlternativeLengths
shouldKeepDuplicateTokenIDs
shouldKeepOriginalSpelling
shouldKeepOutOfLexiconAlternatives
shouldKeepOutOfPatternCandidates
shouldKeepSubstrings
shouldLoadCJKLexicons
shouldMarkMultiWordOVS
shouldMarkNoWhiteSpaceColumnsChangeable
shouldPenalizeLetterInsertion
shouldPenalizePrefixes
shouldPerformGlobalBestSearch
shouldPerformGlobalBestSearchWithSmallLattice
shouldPerformIntegratedLexiconExpansion
shouldPerformStrictCandidateFiltering:
shouldPreserveLegacyTranscriptionPaths
shouldPromoteCJKCommonCharacters
shouldReclassifyGestureType:
shouldRefineCandidates
shouldRefineChineseCharacterCandidates
shouldRefinePrefixQueryMatchesForLocale:
shouldRelaxCharacterBoundsPercentageOverlapForScript:
shouldRelaxFinalCandidatesThresholding
shouldRemoveSpaceBetweenPreviousChar:andNextChar:inLocale:
shouldRemoveSpacesFromEnglishAndKoreanParticles
shouldRemoveSpacesFromHashtagsAndMentions
shouldRemoveSpacesFromStrongURLs
shouldRemoveUnnaturalGaps
shouldReorderSCTCConfusion
shouldReplaceInvalidTokenIDs
shouldRunLexiconCorrectionPostProcessingStep
shouldRunNextGenCharacterLM
shouldRunNextGenRecognizer
shouldRunRecognitionLocallyWithEnvironment:
shouldSwapCyrillicTopResult:topRange:englishResult:englishRange:prevousGroupTopString:
shouldTransformCharacterProbabilitiesIntoLogScores
shouldTransliterateAndSynthetizeCandidates
shouldTransliterateConfusableCharacters
shouldTransliterateForChineseJapaneseLigatures
shouldTransliterateFrenchLigatures
shouldTransliterateHalfWidthPunctuations
shouldTransliterateSentencesSCTC
shouldTreatAllSmallStrokesAsPunctuation
shouldUpdateChangeableColumnCountWithPhraseLexicon
shouldUseCaching
shouldUseDynamicSampling
shouldUseFullWidthSpaceBasedOnContextForLocale:
shouldUseStrokeReorderingForMode:
shouldUseTextReplacements
shouldUseTokenPrecedingSpaces
signatureUniChar
sinAlphaFeatureIndex
sinAngleFeatureIndex
singleScriptCodeForString:
size
sizeWithAttributes:
sketchCodeForDescription:
sketchDescriptionForCode:
skipLatinActivationThreshold
sleepForTimeInterval:
sortDescriptorWithKey:ascending:
sortDescriptorWithKey:ascending:comparator:
sortSubstrokesByWritingDirection:averageWritingOrientation:
sortTokenRows
sortUsingComparator:
sortWithOptions:usingComparator:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sortedArrayUsingSelector:
sortedArrayWithOptions:usingComparator:
sortedCHCutPointArray:
sortedDrawingUsingMinXCoordinate
sortedDrawingUsingStrokeMidPoint:
sortedLanguageGroups:usingLanguageFitness:
sortedLocales:usingLanguageFitness:useCombinedScore:
spaceIndex
speedForFinalTimeRange:stroke:
spellChecker
spellCheckingLocaleForRecognitionLocale:string:
spellServer:findMisspelledWordInString:language:wordCount:countOnly:correction:
spellServer:suggestGuessDictionariesForWordRange:inString:language:options:errorModel:
spellServer:suggestGuessesForWordRange:inString:language:options:
splitStringIntoSubtokensForLexicon:minLength:
standardUserDefaults
starCandidateResultForDrawing:candidate:
start
startCutPoint
startEndpointType
startLocation
startPunctuationCharSet
startTimeForStroke:
startTimestamp
stateType
stateTypeForNodeIndex:
staticLexicon
status
statusReportingEnabled
stemLocation
stemWidth
stop
straightenWithProgress:shouldCancel:
strategyIdentifier
string
stringByAppendingFormat:
stringByAppendingString:
stringByApplyingTransform:reverse:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByFoldingWithOptions:locale:
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingCharactersInRange:withString:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringForAutoCapitalizationMode:
stringForAutoCorrectionMode:
stringForRecognitionContentType:
stringForRecognitionMode:
stringWithCString:encoding:
stringWithCharacters:length:
stringWithFormat:
stringWithString:
stringWithUTF8String:
strokeAttributes
strokeBoundsAtIndex:
strokeClassificationLastResult
strokeClassificationModel
strokeClassificationResult
strokeClassificationsByStrokeIdentifier
strokeCount
strokeCoveredTextRange
strokeForIdentifier:
strokeForIdentifier:inStrokeProvider:
strokeGroup
strokeGroup1
strokeGroup2
strokeGroupClusters
strokeGroupContainingStrokeIdentifier:strokeGroups:
strokeGroupContainingStrokeIdentifier:strokeGroups:foundStrokeGroupIndex:
strokeGroupFromGroup:addingStrokes:
strokeGroupIdentifier
strokeGroupItems
strokeGroupItemsByID
strokeGroupStableIdentifier
strokeGroupingOnly
strokeGroupingRequirement
strokeGroupingResult
strokeGroups
strokeGroupsClusteredByProximity:
strokeGroupsSortedByWritingOrientation
strokeIdentifier
strokeIdentifierFromData:
strokeIdentifierToGroupIndexMappingForStrokeIdentifiers:orderedStrokeGroups:
strokeIdentifiers
strokeIdentifiersForData:withStrokeProvider:
strokeIdentifiersInProximalGroupsForStrokeIdentifiers:sortedStrokeGroups:clusteredStrokeGroups:unusedStrokeIdentifiers:
strokeIndex
strokeIndexSet
strokeIndexSetsInPath:columnRange:
strokeIndexes
strokeIndexesForLastCharacter
strokeIndicesSortedByMinXCoordinate
strokeMaxPenalties
strokePointTransformationsForContextStrokes:completion:shouldCancel:
strokePointTransformationsForContextStrokes:completionWithTelemetry:shouldCancel:
strokeProvider
strokeProviderSnapshot
strokeProviderVersion
strokesForIdentifiers:
subResultWithColumnRange:
subarrayWithRange:
subdataWithRange:
subjectStrokeIdentifiers
substringFromIndex:
substringToIndex:
substringWithRange:
substroke
substrokeCount
substrokePlacementsByStrokeIdentifier
substrokesByStrokeIdentifier
substrokesForStroke:
subwordGestureEndingSpeedRange
subwordGestureSpeedThreshold
superclass
supportByStrokeIdentifier
supportedCharacterSet
supportedLanguageForLocale:
supportedScriptForLocale:
supportedSegmentationStrategy
supportedStrings
supportsAutoLineBreaks
supportsSecureCoding
swapMultiLocaleResults:locales:topLocaleIndex:resultHasSwap:resultTopLocale:
swappableColumnIndexesFromResults:locales:
swappableColumnIndexesFromResults:locales:topLocaleIndex:
swappableColumnIndexesInResults:locales:topLocaleIndex:swappableIndex:
symbolCharacterSet
symbolsRequiringSpaceBeforeInFrench
symmetricQuoteCharacters
synchronousRemoteObjectProxyWithErrorHandler:
systemFontOfSize:
targetContentInfo
terminatingCharacter
terminatingSpecialCharacter
textClassIndex
textContentLength
textCorrectionRecognizerForLocales:
textCorrectionResult
textCorrectionResultForDrawing:targetContentInfo:originalDrawing:lastStroke:localTypedContextBounds:normalizedDrawingScaleFactor:previousCorrectionResult:
textCorrectionResultForStrokeGroupIdentifier:
textCorrectionResultsForGroupingResult:groupingManager:
textDecoder
textInputTargetForItemStableIdentifier:strokeIdentifiers:
textInputTargetForItemStableIdentifier:strokeIdentifiers:simultaneousItemStableIdentifiers:
textInputTargets
textInputTargetsDataSource
textOnly
textRecognitionResultArray
textRecognitionResultArrayGivenHistory:
textRecognitionResultForDrawing:options:error:
textRecognitionResultForDrawing:options:shouldCancel:
textRecognitionResultForDrawing:options:writingStatistics:shouldCancel:
textRecognitionResultForLocale:error:
textReplacementLowercasedKeyMapping
textReplacements
textResult
textResultToIndexMappingFromTopTranscriptionWithCharacterRange:intersectionRanges:
textResults
textStrokeGroupClusters
textStrokeGroups
textStrokeGroupsSortedByWritingOrientation
textStrokeGroupsSortedTopBottomLeftRight
textStrokeIdentifiers
textStrokePointTransformationFromAffineTransformation:
threePointsOrientationWithOrigin:pointA:pointB:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timestepCount
titleStrokeIdentifiers
toggleSelectiveVisualizationsAtPoint:
toggleVisualizationRegionAtPoint:
tokenAtLocation:
tokenColumnCount
tokenColumns
tokenIDForString:withLexicon:
tokenRowAsString:
tokenRows
tokenRowsAtColumnIndex:
tokenStrokeIdentifiersForContextStrokes:point:tokenizationLevel:completion:shouldCancel:
tokenWithString:strokeIndexes:wordID:recognitionScore:combinedScore:alignmentScore:properties:substrokeCount:bounds:
tokenizedResultWithFilteredPaths:
tokenizedStrokeResultForInitialStrokes:point:tokenizationLevel:completion:shouldCancel:
tokenizedTextResultForChineseLatticePaths:maximumPathCount:network:mecabraIDs:startNode:endNode:segmentGroup:
tokenizedTextResultForRomanLatticePaths:history:activeHistoryRange:startNode:segmentGroup:
tokenizedTextResultForRomanSingleWordLatticePaths:history:activeHistoryRange:startNode:segmentGroup:
tokenizedTextResultFromResults:shouldPerformStrictFiltering:doesTopLocaleRequireSpecialHandling:hasSwap:
tokenizedTextResultWithString:strokeIndexes:bounds:trailingSeparator:recognizerGenerationIdentifier:
tokens
tokensFromTopTranscriptionWithCharacterRange:
tokensInTranscriptionPath:atColumnIndex:
tokensRangesForString:outTokenIDs:wordLanguageModel:
topCorrectionForString:contextBeforeToken:contextSeparator:shouldUseErrorModel:forLanguage:
topTranscription
totalDuration
totalSegmentCount
totalUnitCount
trailingSeparator
transcribedTitle
transcriptionPathScores
transcriptionPaths
transcriptionPathsForTokenizedResult:recognitionRequest:withReply:
transcriptionPathsForTokenizedTextResult:withHistory:scores:error:
transcriptionWithPath:columnRange:filterLowConfidence:
transcriptionWithPath:columnRange:filterLowConfidence:excludeGibberish:rejectionRate:tokenProcessingBlock:
transformCyrillicToLatin:
transformLatinToCyrillic:
transformString:usingConfusions:
transitionTime
transliterateSentences
transliterateStringUsingICUTransliterator:_icuTransliterator:
transliterationVariantMap
transliterationVariantsForString:
transpositionErrorScoreForIntendedFirstCharacter:intendedSecondCharacter:
triangleCandidateResultForDrawing:candidate:
trimTokensToTranscriptionPathCount:
tryRegroupingStrokesInGroup:substrokePlacementsByStrokeIdentifier:cancellationBlock:
type
unarchivedObjectOfClass:fromData:error:
unionCharacterRects
unionSet:
unionStrokeBounds:usingStrokeCountLimit:reverseOrder:
uniqueIdentifier
unitScale
unlikelyHasLatinContents
unregisterChangeObserver:
unregisterInputDrawingClient:
unsafeForSpellCorrection
unsignedIntValue
unsignedIntegerValue
unsignedLongValue
updateAddressBookLexicon:
updateByAddingClutterStroke:
updateByAddingNonClutterStroke:withAllStrokes:forceText:
updateByAddingNonClutterStroke:withClassification:
updateByRemovingStrokeIdentifier:withRemovedAndClutterStrokeIDs:
updateByTransitionedClutterStrokeIdentifier:withRemovedAndClutterStrokeIDs:
updateLocalStrokeDeviationsForSubstrokes:averageStrokeDeviation:
updateMecabraWithRegionalOTAAssets:nonRegionalOTAAssets:
updateMultiLocaleResultDictionary:locales:
updateNonTextCandidatesByRemovingSupportFromStrokeIdentifier:skippingCandidatesWithStrokeIdentifier:
updateUserDictionaryLexicon:
updatedGroupingResult:byAddingStrokes:removingStrokeIdentifiers:stableStrokeIdentifiers:allSubstrokesByStrokeIdentifier:withCancellationBlock:
updatedGroupingResultByAddingStrokes:removingStrokeIdentifiers:orderedStrokeIdentifiers:strokeClassificationResult:cancellationBlock:
updatedStrokeClassificationResultByAddingStrokes:removingStrokeIdentifiers:clutterFilter:affectedClutterStrokeIDs:cancellationBlock:
upperLeftPoint
uppercaseCharSet
uppercaseLetterCharacterSet
uppercaseStringWithLocale:
urlProcessor
urlPunctuationCharSet
urlificationRange
usageCount
usernameProcessor
validSuffixes
validatedTokenForCorrectedToken:rawToken:
value:withObjCType:
valueForRecognitionStatusKey:
valueWithBytes:objCType:
valueWithNonretainedObject:
variableHeightForRecognitionSessionStatusKey:
vectorMeanWithoutOutliers:
vertexCount
verticalBarGestureFromLineResult:currentGesture:
vertices
visualCharacterRectForCharacterIndex:
visualization:needsDisplayInRect:
visualizationIndexForStrokeGroup:
visualizationManager:needsDisplayInRect:
visualizationManagerDidUpdateSessionStatus:
visualizationManagerNeedsDisplay:
visualizationNeedsDisplay:
waitForPendingRecognitionTasks
waitForPendingUpdates
wantsInputDrawings
whiteColor
whitelistMecabraRareCharacters
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
width
widthAlternativeCharacterSet
wordCombinedScores
wordID
wordIDForCandidateString:
wordLanguageModel
wordLexicalEntries
wordPatternEntries
wordRanges
wordRecognitionScores
wordStrokeSets
writeToFile
writeToFileInFolder:basename:
writeToFileWithContext:folder:basename:
writeToURL:options:error:
writingDirectionOrderedStrokes:substrokesByStrokeIdentifier:
writingDirectionSortedStrokeIdentifiers
writingDirectionSortedSubstrokes
writingOrientation
xyRepresentation
zone
@76@0:8@16@24B32{CGRect={CGPoint=dd}{CGSize=dd}}36Q68
@16@0:8
B16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
Q16@0:8
v16@0:8
@"CHDrawing"
@"NSCharacterSet"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
I48@0:8@16I24B28^d32^v40
@40@0:8@16^@24^v32
@32@0:8@16q24
B40@0:8^{_LXLexicon=}16@24@32
@32@0:8@16^^v24
@32@0:8@16@24
@24@0:8@16
I32@0:8@16^{_LXLexicon=}24
B32@0:8@16r^{_LXLexicon=}24
d32@0:8@16@24
B24@0:8@16
@56@0:8@16^{__Mecabra=}24^{__MecabraContext=}32^v40q48
B36@0:8@16B24@28
d92@0:8@16@24@32B40B44B48@52@60^@68^@76^B84
@172@0:8@16@24^{_LXLexicon=}32^v40@48@56@64d72{_NSRange=QQ}80^d96B104B108B112q116d124q132^q140^B148^B156^B164
q32@0:8@16@24
@48@0:8@16{CGPoint=dd}24q40
@64@0:8@16{CGPoint=dd}24q40@?48@?56
v24@0:8@16
@"NSArray"
@"NSDictionary"
@24@0:8q16
@72@0:8@16@24@32q40@48@56@64
@32@0:8@16^@24
q16@0:8
@"NSNumber"
@"NSLocale"
v56@0:8^@16^@24@32@40@48
@"<CHStrokeProvider>"
@64@0:8@16@24@32@40@48@?56
@64@0:8@16{CGVector=dd}24^@40^@48^d56
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSData"
@108@0:8@16@24I32d36d44d52Q60q68{CGRect={CGPoint=dd}{CGSize=dd}}76
d16@0:8
I16@0:8
@"NSString"
@"NSIndexSet"
v20@0:8I16
v24@0:8d16
v24@0:8Q16
v24@0:8q16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSSet"
v20@0:8B16
B28@0:8@16i24
v68@0:8@16@24@32@40^@48B56^B60
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@28@0:8i16@20
i16@0:8
v20@0:8i16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@28@0:8i16@"NSLocale"20
@"NSLocale"16@0:8
@"NSCharacterSet"16@0:8
v24@0:8@"NSCharacterSet"16
@40@0:8i16i20^{__CFLocale=}24@32
@36@0:8i16@20@28
@44@0:8i16@20@28@36
@32@0:8i16i20@24
@32@0:8^@16q24
@24@0:8Q16
v32@0:8@16@24
v32@0:8^{_LXLexicon=}16^v24
v24@0:8^{_LXLexicon=}16
v24@0:8^v16
{vector<const void *, std::allocator<const void *>>=^^v^^v{__compressed_pair<const void **, std::allocator<const void *>>=^^v}}40@0:8@16@24Q32
{vector<const void *, std::allocator<const void *>>=^^v^^v{__compressed_pair<const void **, std::allocator<const void *>>=^^v}}48@0:8@16@24@32Q40
@24@0:8i16i20
@32@0:8i16i20^{__CFLocale=}24
@20@0:8i16
v40@0:8@16^{CGPoint=dd}24^{CGPoint=dd}32
@32@0:8@16^{CHCandidateResult=If}24
@40@0:8@16^{CHCandidateResult=If}24^@32
@48@0:8@16@24@32@40
d56@0:8@16@24^I32Q40^@48
d64@0:8@16@24@32@40^I48Q56
@48@0:8@16@24@32^@40
@124@0:8^v16Q24^{_LXCursor=}32^{_LXCursor=}40@48@56{_NSRange=QQ}64^v80@88q96i104q108q116
B72@0:8@16@24d32d40B48B52B56I60@64
@64@0:8r^v16@24{_NSRange=QQ}32q48@56
@72@0:8r^v16Q24^v32^v40q48q56@64
^I60@0:8@16q24B32^Q36^B44^{_NSRange=QQ}52
v40@0:8{_NSRange=QQ}16@32
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}32@0:8@16@24
@48@0:8@16@24@32@?40
@132@0:8^v16@24@32{_NSRange=QQ}40^{_LXCursor=}56^{_LXCursor=}64@72@80Q88q96B104q108q116@?124
@72@0:8^v16@24@32Q40@48q56q64
q76@0:8@16^v24^v32^v40^v48@56B64@?68
^v96@0:8^v16@24@32^v40{_NSRange=QQ}48{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}64@?88
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
d20@0:8B16
v80@0:8{vector<CHCandidateResult, std::allocator<CHCandidateResult>>=^{CHCandidateResult}^{CHCandidateResult}{__compressed_pair<CHCandidateResult *, std::allocator<CHCandidateResult>>=^{CHCandidateResult}}}16^v40r^{NetworkEdge=QQQQddQQQ}48^v56q64q72
{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__long=*Qb63b1}{__short=[23c][0C]b7b1}{__raw=[3Q]})}}}20@0:8I16
@48@0:8@16Q24@32q40
d24@0:8@16
@40@0:8@16^@24@32
v60@0:8^@16^@24@32q40@48B56
@40@0:8@16Q24Q32
@48@0:8@16@24q32^q40
@52@0:8@16@24q32B40q44
@72@0:8@16B24@28{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}36@60B68
@44@0:8@16@24d32B40
@40@0:8@16@24@?32
v32@0:8^v16r^v24
v32@0:8^v16@24
v40@0:8^v16@24@32
v32@0:8^v16q24
@32@0:8^S16i24i28
I24@0:8@16
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGPoint=dd}24@0:8@16
{CGSize=dd}24@0:8@16
@40@0:8@16@24^v32
^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}16@0:8
v24@0:8^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}16
^v16@0:8
^{_LXLexicon=}16@0:8
{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}}16@0:8
v40@0:8{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>={__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>=Q}}}16
{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>={__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>=Q}}}16
^{VariantMap=^i^i^ii^iQ}16@0:8
v24@0:8^{VariantMap=^i^i^ii^iQ}16
^^v16@0:8
v24@0:8^^v16
@"CHRecognitionInsightRequest"
@"CHRecognitionInsight"
^{CHNeuralNetwork=^?B^{CHCodeMap}IIII@@{CGRect={CGPoint=dd}{CGSize=dd}}}
@"CHCTCRecognitionModel"
@"CVNLPCTCTextDecoder"
@"NSObject<OS_dispatch_queue>"
@"CHPatternNetwork"
@"CHRecognizerConfiguration"
^{_LXLexicon=}
@"NSMutableDictionary"
@"CHSpellChecker"
@"CHMecabraWrapper"
@"CHStringOVSChecker"
@"NSURL"
^{VariantMap=^i^i^ii^iQ}
@"NSMutableIndexSet"
@"CHPostProcessingManager"
{CGSize="width"d"height"d}
{map<std::set<long>, std::vector<CHCandidateResult>, std::less<std::set<long>>, std::allocator<std::pair<const std::set<long>, std::vector<CHCandidateResult>>>>="__tree_"{__tree<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>, std::allocator<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::set<long>, std::__value_type<std::set<long>, std::vector<CHCandidateResult>>, std::less<std::set<long>>, true>>="__value_"Q}}}
{map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>="__tree_"{__tree<std::__value_type<unsigned int, unsigned int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned int>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned int>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned int>, std::less<unsigned int>, true>>="__value_"Q}}}
@72@0:8Q16q24q32@40{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}}48
{set<long, std::less<long>, std::allocator<long>>={__tree<long, std::less<long>, std::allocator<long>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::less<long>>=Q}}}16@0:8
@"CHClassifiableDrawing"
{set<long, std::less<long>, std::allocator<long>>="__tree_"{__tree<long, std::less<long>, std::allocator<long>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<long, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::less<long>>="__value_"Q}}}
v56@0:8^@16^@24@32@40@?48
v48@0:8@16q24q32@?40
d32@0:8d16@24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8r^v16{CGPoint=dd}24d40
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8r^v16q24B32
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8r^v16d24q32
@32@0:8@16@?24
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}24@0:8@16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}32@0:8@16@24
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}24@0:8^v16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}32@0:8r^v16d24
d40@0:8r^v16^{CGPoint=dd}24^d32
d24@0:8^v16
d32@0:8r^v16^d24
d64@0:8{CGPoint=dd}16{CGPoint=dd}32{CGPoint=dd}48
d64@0:8{CGPoint=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}48@0:8r^v16d24d32^d40
@"CHTokenizedTextResult"
@"NSError"
v656@0:8{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}}16
@24@0:8@?16
@64@0:8{CGAffineTransform=dddddd}16
@24@0:8d16
Q24@0:8Q16
{CGPoint=dd}32@0:8Q16Q24
d24@0:8Q16
@32@0:8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8Q16
f16@0:8
v32@0:8{CGPoint=dd}16
{_NSRange=QQ}24@0:8@16
{Matrix<float>=^^?^fII}32@0:8{CGSize=dd}16
{Matrix<float>=^^?^fII}32@0:8Q16Q24
@24@0:8^@16
@40@0:8{CGVector=dd}16d32
@32@0:8d16^v24
@32@0:8d16q24
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
d32@0:8d16d24
v40@0:8@16@24@32
{CHDrawingStrokes={vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}{vector<bool, std::allocator<bool>>=^QQ{__compressed_pair<unsigned long, std::allocator<unsigned long>>=Q}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<double, std::allocator<double>>=^d^d{__compressed_pair<double *, std::allocator<double>>=^d}}{vector<std::vector<double>, std::allocator<std::vector<double>>>=^v^v{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>=^v}}qI{Matrix<double>=^^?^dII}d{vector<int, std::allocator<int>>=^i^i{__compressed_pair<int *, std::allocator<int>>=^i}}}16@0:8
{CHDrawingStrokes="strokeBounds"{vector<std::vector<double>, std::allocator<std::vector<double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>="__value_"^v}}"strokeBoundsValidity"{vector<bool, std::allocator<bool>>="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::allocator<unsigned long>>="__value_"Q}}"startTimes"{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}"endTimes"{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}"strokes"{vector<std::vector<double>, std::allocator<std::vector<double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<double> *, std::allocator<std::vector<double>>>="__value_"^v}}"currentStrokeIndex"q"mSize"I"bitmap"{Matrix<double>="_vptr$Matrix"^^?"_data"^d"_w"I"_h"I}"lineHeight"d"sparseBitmap"{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}}
@36@0:8q16q24B32
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8q16q24@32@40
@"CHCutPoint"
@32@0:8q16@24
v88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48{CGRect={CGPoint=dd}{CGSize=dd}}56
B20@0:8i16
i24@0:8@16
i20@0:8I16
@148@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116i120i124B128q132@140
@140@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116i120i124B128q132
@132@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80B96{_NSRange=QQ}100i116B120q124
@124@0:8@16q24@32{_NSRange=QQ}40^{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}64{_NSRange=QQ}80{_NSRange=QQ}96i112q116
q24@0:8q16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
v40@0:8{_NSRange=QQ}16@?32
v44@0:8{_NSRange=QQ}16B32@?36
@32@0:8{_NSRange=QQ}16
{_NSRange=QQ}24@0:8q16
{_NSRange=QQ}16@0:8
^{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"CHTextInputTarget"
{_NSRange="location"Q"length"Q}
^{CGRect={CGPoint=dd}{CGSize=dd}}
v32@0:8{_NSRange=QQ}16
v48@0:8@16{_NSRange=QQ}24^{CGRect={CGPoint=dd}{CGSize=dd}}40
@64@0:8@16@24q32d40d48d56
@184@0:8@16q24q32d40d48d56{CGRect={CGPoint=dd}{CGSize=dd}}64d96{CGRect={CGPoint=dd}{CGSize=dd}}104{CGRect={CGPoint=dd}{CGSize=dd}}136@168d176
@"CHEncodedStrokeIdentifier"
v32@0:8@16d24
B32@0:8@16@24
@32@0:8@16^v24
d40@0:8@16q24q32
v40@0:8@16d24@32
v56@0:8@16d24d32d40@48
@40@0:8@16@24@32
q40@0:8@16q24q32
B48@0:8@16d24q32q40
{vector<std::map<long, long>, std::allocator<std::map<long, long>>>=^v^v{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>=^v}}16@0:8
{vector<std::map<long, long>, std::allocator<std::map<long, long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::map<long, long> *, std::allocator<std::map<long, long>>>="__value_"^v}}
B24@0:8q16
@52@0:8@16@24@32B40@44
@56@0:8@16@24@32@40@?48
@40@0:8@16^@24^@32
@"CHRecognitionSessionResult"
@40@0:8@16@?24@?32
{CGAffineTransform=dddddd}112@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGRect={CGPoint=dd}{CGSize=dd}}80
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
v80@0:8@16^{CGContext=}24{CGAffineTransform=dddddd}32
v88@0:8@16@24^{CGContext=}32{CGAffineTransform=dddddd}40
@152@0:8@16@24@32q40@48@56@64@72@80@88@96{?=ddddd}104q144
@48@0:8@16@24{CGSize=dd}32
{?=ddddd}16@0:8
@"<CHStrokeProviderVersion>"
@"CHStrokeClutterFilter"
@"CHStrokeClassificationResult"
@"CHStrokeGroupingResult"
{?="strokeClutterFilteringDuration"d"strokeClassificationDuration"d"groupingDuration"d"recognitionDuration"d"totalDuration"d}
@20@0:8B16
@56@0:8@16@24@32@40@48
@40@0:8@16^d24^B32
{?=dd}24@0:8@16
@72@0:8@16@24@32@40@48@56@64
@36@0:8@16@24B32
@"CHTextCorrectionResult"
@52@0:8@16i24@28@36q44
q40@0:8@16{_NSRange=QQ}24
v32@0:8@16q24
@40@0:8@16@24^{_NSRange=QQ}32
d32@0:8@16^d24
@40@0:8@16@24^q32
@112@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40q72d80@88{CGPoint=dd}96
@120@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88@96{CGPoint=dd}104
@128@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56q88d96@104{CGPoint=dd}112
{CGVector=dd}16@0:8
@112@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88{CGPoint=dd}96
r^{CGPath=}32@0:8@16@24
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
@56@0:8@16@24@32@40q48
@52@0:8@16@24@32@40I48
@"CHTextInputQuery"
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@168@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40@72@80{CGVector=dd}88{CGVector=dd}104@120r^v128@136d144{CGPoint=dd}152
@176@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48@80@88{CGVector=dd}96{CGVector=dd}112@128r^v136@144d152{CGPoint=dd}160
@184@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56@88@96{CGVector=dd}104{CGVector=dd}120@136r^v144@152d160{CGPoint=dd}168
@176@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48@80{CGVector=dd}88{CGVector=dd}104@120r^v128@136d144q152{CGPoint=dd}160
{CGVector=dd}24@0:8q16
^{CGPath=}48@0:8@16@24@32@40
{CGVector="dx"d"dy"d}
{vector<CGVector, std::allocator<CGVector>>="__begin_"^{CGVector}"__end_"^{CGVector}"__end_cap_"{__compressed_pair<CGVector *, std::allocator<CGVector>>="__value_"^{CGVector}}}
@40@0:8@16@24^@32
@"MLModel"
@108@0:8@16d24@32@40@48@56@64@72@80@88@96B104
@40@0:8@16d24d32
@120@0:8@16d24d32{CGPoint=dd}40i56{CGPoint=dd}60i76{CGPoint=dd}80{CGPoint=dd}96@112
@112@0:8@16d24d32{CGPoint=dd}40i56{CGPoint=dd}60i76{CGPoint=dd}80{CGPoint=dd}96
@88@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56{CGPoint=dd}72
@120@0:8@16d24d32{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72{CGPoint=dd}88{CGSize=dd}104
@88@0:8@16d24d32{CGPoint=dd}40{CGPoint=dd}56{CGPoint=dd}72
@72@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56
@96@0:8@16d24d32{CGPoint=dd}40{CGSize=dd}56{CGPoint=dd}72d88
^{CGColor=}32@0:8@16@24
v48@0:8@16@24@32@?40
B80@0:8@16{?=qqq}24@48q56@64^@72
B80@0:8@16{?=qqq}24@48@56q64^q72
B48@0:8@16@24q32^q40
@"CHRecognitionSession"
@"<CHVisualizationDelegate>"
v32@0:816
@"CHPointFIFO"
@36@0:8@16Q24f32
@32@0:8@16Q24
v20@0:8f16
{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}}16@0:8
v40@0:8{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^^{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>=^}}16
{vector<float __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(4))), std::allocator<float __attribute__((ext_vector_type(4)))>>="__value_"^}}
68@0:8163248f64
v56@0:8{CGSize=dd}16{CGSize=dd}32d48
@?16@0:8
v24@0:8@?16
^{CGPath=}16@0:8
v24@0:8^{CGPath=}16
16@0:8
^{CGPath=}
@"<CHPointFIFODrawingTarget>"
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
{_NSRange=QQ}56@0:8{_NSRange=QQ}16q32@40@48
v56@0:8@16{_NSRange=QQ}24^B40^B48
{_NSRange=QQ}40@0:8q16@24@32
q64@0:8{CGPoint=dd}16@32^{CGRect={CGPoint=dd}{CGSize=dd}}40{_NSRange=QQ}48
B40@0:8@16@24q32
B40@0:8@16@24^B32
B40@0:8@16@24^q32
@68@0:8q16@24@32@40@48@56B64
v32@0:8^{_NSRange=QQ}16^B24
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}44@0:8{_NSRange=QQ}16B32^B36
@"CHTextInputTargetContentInfo"
@"<CHStroke>"
@64@0:8{CGPoint=dd}16@32@40@48@56
@48@0:8@16{CVNLPTextDecodingPruningPolicy=qBfI}24
@72@0:8@16{CGPoint=dd}24B40B44^v48^q56^q64
@88@0:8@16{CGSize=dd}24{CGPoint=dd}40@56^v64^@72^d80
v40@0:8@16@24@?32
B48@0:8d16@24@32@40
d40@0:8@16@24^@32
@48@0:8@16@24d32^@40
@72@0:8@16@24d32{CGPoint=dd}40B56B60^@64
^{CHCodeMap=*Q^II}16@0:8
{CVNLPTextDecodingPruningPolicy=qBfI}16@0:8
v40@0:8{CVNLPTextDecodingPruningPolicy=qBfI}16
^{CHCodeMap=*Q^II}
@"NSOrderedSet"
{CVNLPTextDecodingPruningPolicy="strategy"q"shouldSort"B"threshold"f"maxNumberOfCandidates"I}
{pair<double, double>=dd}32@0:8@16@24
q40@0:8@16@24^q32
@80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64q72
@72@0:8@16@24d32{CGRect={CGPoint=dd}{CGSize=dd}}40
@36@0:8@16B24B28B32
@48@0:8@16@24q32q40
@48@0:8@16@24q32@40
@64@0:8@16@24@32@40q48q56
@48@0:8@16@24@32q40
@56@0:8@16@24@32q40q48
@40@0:8{?=qqq}16
d32@0:8{_NSRange=QQ}16
B32@0:8{_NSRange=QQ}16
@44@0:8@16{_NSRange=QQ}24B40
@64@0:8@16{_NSRange=QQ}24B40B44^d48@?56
B32@0:8@16^B24
@40@0:8@16{_NSRange=QQ}24
{?=dd}28@0:8@16i24
d36@0:8@16@24i32
d24@0:8d16
v48@0:8@16{_NSRange=QQ}24@?40
@40@0:8@16^{_LXLexicon=}24q32
v40@0:8B16B20B24B28B32B36
Q20@0:8S16
d24@0:8S16S20
B28@0:8@16B24
@36@0:8@16B24@28
@"AppleSpell"
@"CHSpellCheckerErrorModel"
@40@0:8^v16@24@32
@24@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16
@48@0:8@16d24d32^v40
@72@0:8@16d24{CGSize=dd}32d48^d56^v64
@"CHSingletonMLModel"
@32@0:8@16d24
B40@0:8@16^v24@?32
@40@0:8@16@24q32
@128@0:8q16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48q80d88@96{CGPoint=dd}104@120
@136@0:8q16q24@32@40@48{CGRect={CGPoint=dd}{CGSize=dd}}56q88d96@104{CGPoint=dd}112@128
@44@0:8@16@24@32B40
d40@0:8@16@24@32
@72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^d56^d64
B40@0:8@16@24^@32
@88@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40d72d80
@96@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48d80d88
@60@0:8@16@24@32@40I48q52
@88@0:8@16@24@32@40I48q52B60@64q72@?80
@96@0:8@16@24@32@40I48q52B60@64q72@80@?88
B32@0:8q16q24
@60@0:8@16@24B32@36q44^@52
@"<CHRecognitionSessionTaskDelegate>"
@"CHStrokeClassificationModel"
@56@0:8@16@24q32^B40^@48
@56@0:8@16@24q32@?40@?48
@"<CHTextInputQueryTargetDataSource>"
v32@0:8@16@?24
@"DDScannerServiceConfiguration"
@40@0:8@16@24^{CGPath=}32
r^{CGPath=}16@0:8
r^{CGPath=}
@"DDScannerResult"
@88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56d64r^v72d80
{vector<CGPoint, std::allocator<CGPoint>>="__begin_"^{CGPoint}"__end_"^{CGPoint}"__end_cap_"{__compressed_pair<CGPoint *, std::allocator<CGPoint>>="__value_"^{CGPoint}}}
{CGAffineTransform=dddddd}16@0:8
v32@0:8{CGVector=dd}16
@"CHSubstroke"
@48@0:8@16^{CGColor=}24^{__CTFont=}32^{__CTParagraphStyle=}40
^{CGPoint=dd}64@0:8@16{CHLineSegment={CGPoint=dd}{CGPoint=dd}}24^q56
@32@0:8^{CGPoint=dd}16q24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
q48@0:8{CHLineSegment={CGPoint=dd}{CGPoint=dd}}16
^{CGPoint=dd}16@0:8
^{CGPoint=dd}
v32@0:8@"CHRemoteRecognitionRequest"16@?<v@?@"CHTokenizedTextResult"@"NSError">24
v40@0:8@"CHTokenizedTextResult"16@"CHRemoteRecognitionRequest"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
@48@0:8@16@24^@32^@40
@"NSXPCConnection"
#24@0:8@16
^{CGColor=}24@0:8q16
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@"CHVisualization"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v24@0:8@"CHVisualization"16
q24@0:8@"CHStrokeGroup"16
v24@0:8@"CHRecognitionSession"16
v28@0:8B16@20
@"<CHVisualizationManagerDelegate>"
@"NSMutableSet"
@"NSMutableArray"
@"<CHQueryDelegate>"
@"CHStrokeGroup"
@40@0:8{_NSRange=QQ}16^@32
@32@0:8d16d24
{CHTextLineStraighteningResult=@@@}32@0:8@16@?24
v48@0:8@16@24^v32@40
{CGAffineTransform=dddddd}40@0:8@16@24@?32
{CGAffineTransform=dddddd}40@0:8q16@24@?32
@?64@0:8{CGAffineTransform=dddddd}16
{vector<CoreHandwriting::BoundingBox, std::allocator<CoreHandwriting::BoundingBox>>="__begin_"^{BoundingBox}"__end_"^{BoundingBox}"__end_cap_"{__compressed_pair<CoreHandwriting::BoundingBox *, std::allocator<CoreHandwriting::BoundingBox>>="__value_"^{BoundingBox}}}
@52@0:8^{_CFBurstTrie=}16^{_LXLexicon=}24^{_LXLexicon=}32I40^?44
B24@0:8^{_LXEntry=}16
B32@0:8@16^{_LXLexicon=}24
B32@0:8@16^{_CFBurstTrie=}24
B20@0:8I16
B28@0:8I16^{_LXLexicon=}20
^{_CFBurstTrie=}
@68@0:8@16{_NSRange=QQ}24@40q48B56@60
v40@0:8@16^Q24^Q32
Q24@0:8@16
B28@0:8Q16i24
@28@0:8@16i24
^v32@0:8@16@24
B40@0:8@16@24@32
B72@0:8@16@24@32@40{_NSRange=QQ}48@64
d32@0:8@16d24
B72@0:8@16{_NSRange=QQ}24@40{_NSRange=QQ}48@64
@44@0:8i16@20i28B32B36B40
@52@0:8i16@20i28i32i36B40B44B48
r^{_LXLexicon=}24@0:8^@16
r^{_LXLexicon=}32@0:8r^{_LXLexicon=}16r^{_LXLexicon=}24
^v36@0:8@16B24@28
^v28@0:8^v16B24
@32@0:8^{_LXLexicon=}16^{_LXLexicon=}24
@120@0:8^{_LXLexicon=}16^{_LXLexicon=}24^{_LXLexicon=}32^{_LXLexicon=}40@48@56@64^v72@80@88@96^v104q112
@40@0:8^{_LXLexicon=}16^{_LXLexicon=}24@32
@40@0:8^{_LXLexicon=}16^{_LXLexicon=}24^v32
@?24@0:8@16
^?16@0:8
@32@0:8q16q24
@"<CHRecognizing>"24@0:8@"NSLocale"16
@"CHTextCorrectionRecognizer"24@0:8@"NSArray"16
@40@0:8q16@24@32
v28@0:8@16B24
v24@0:8B16B20
@48@0:8q16B24B28@32@?40
B32@0:8@16^@24
@"CHRecognitionSessionVersion"
@"<CHRecognitionSessionDataSource>"
@44@0:8@16q24B32q36
@48@0:8@16^@24^@32@?40
@64@0:8@16@24{_NSRange=QQ}32@48^{_NSRange=QQ}56
{_NSRange=QQ}40@0:8@16{_NSRange=QQ}24
@36@0:8@16B24q28
@96@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48d80@88
@96@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40d72{_NSRange=QQ}80
@72@0:8@16@24@32{CGRect={CGPoint=dd}{CGSize=dd}}40
Q32@0:8@16@24
q112@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}88@104
B128@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56{_NSRange=QQ}88^B104^d112^d120
@"<CHRecognizing>"
@"CHRecognizer"
@"CHCornerDetector"
Q20@0:8I16
{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>={__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>=Q}}}16
{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}}16@0:8
v40@0:8{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>={__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>=Q}}}16
{map<unsigned int, unsigned long, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned long>>>="__tree_"{__tree<std::__value_type<unsigned int, unsigned long>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, unsigned long>, std::less<unsigned int>, true>>="__value_"Q}}}
{map<unsigned int, int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, int>>>="__tree_"{__tree<std::__value_type<unsigned int, int>, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>, std::allocator<std::__value_type<unsigned int, int>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned int, int>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned int, std::__value_type<unsigned int, int>, std::less<unsigned int>, true>>="__value_"Q}}}
{vector<CGRect, std::allocator<CGRect>>=^{CGRect}^{CGRect}{__compressed_pair<CGRect *, std::allocator<CGRect>>=^{CGRect}}}48@0:8@16{CGPoint=dd}24d40
@52@0:8@16q24@32B40@44
v76@0:8@16@24@32@40@48@56B64@?68
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@16r^v24{CGVector=dd}32^@48^v56
@40@0:8@16{CGVector=dd}24
v64@0:8^d16{CGRect={CGPoint=dd}{CGSize=dd}}24@56
v56@0:8^d16^@24@32@40@48
v64@0:8^d16^@24@32@40@48q56
q40@0:8@16@24@32
{CGVector=dd}64@0:8@16@24{CGVector=dd}32@48@56
v40@0:8^@16^{CGVector=dd}24^{CGVector=dd}32
v32@0:8@16^{CGVector=dd}24
{CGVector=dd}32@0:8{CGVector=dd}16
{vector<CGPoint, std::allocator<CGPoint>>=^{CGPoint}^{CGPoint}{__compressed_pair<CGPoint *, std::allocator<CGPoint>>=^{CGPoint}}}44@0:8r^v16@24q32B40
B32@0:8@16^{CGVector=dd}24
d72@0:8@16@24r^v32{CGVector=dd}40{CGVector=dd}56
v36@0:8@16@24B32
d56@0:8r^v16{CGRect={CGPoint=dd}{CGSize=dd}}24
B32@0:8q16@24
q32@0:8d16q24
@"CVNLPActivationMatrix"
f24@0:8q16
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}40@0:8^v16i24f28@?32
@32@0:8^v16@24
@44@0:8@16i24d28@?36
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}24@0:8^v16
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}28@0:8@16B24
@64@0:8@16@24@32{CGPoint=dd}40q56
@56@0:8@16^v24@32q40@48
^{CGPath=}40@0:8@16^{CGPoint=dd}24@32
v56@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^d24@32q40@48
{CGAffineTransform=dddddd}64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48@56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{CGPoint=dd}16
@"CHRecognitionSessionIndexableContent"
@40@0:8r^v16@24@32
@56@0:8r^v16@24@32@40@48
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}^{CHFastGroupingCluster}{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>=^{CHFastGroupingCluster}}}16@0:8
{vector<CHFastGroupingCluster, std::allocator<CHFastGroupingCluster>>="__begin_"^{CHFastGroupingCluster}"__end_"^{CHFastGroupingCluster}"__end_cap_"{__compressed_pair<CHFastGroupingCluster *, std::allocator<CHFastGroupingCluster>>="__value_"^{CHFastGroupingCluster}}}
@32@0:8Q16@24
v32@0:8Q16Q24
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
@32@0:8i16@20B28
@36@0:8q16@24B32
@40@0:8Q16@24@32
B40@0:8@16q24@32
@60@0:8@16@24@32@40@48B56
v28@0:8i16@20
^{__Mecabra=}16@0:8
^{__Mecabra=}
@36@0:8@16@24i32
@"CHMutableTokenizedTextResult"
@32@0:8@?16@24
v48@0:8@16@24@32@40
@80@0:8@16@24@32@40@48@56@64@72
@104@0:8i16B20B24B28@32^{_LXLexicon=}40^{_LXLexicon=}48^{_LXLexicon=}56^{_LXLexicon=}64@72^v80@88@96
@68@0:8@16B24B28^q32^d40@48@56B64
@56@0:8@16B24@28B36@40B48B52
@52@0:8@16B24@28B36@40B48
r^{_LXLexicon=}16@0:8
v24@0:8r^{_LXLexicon=}16
r^{_LXLexicon=}
@40@0:8B16B20B24B28B32B36
@40@0:8@16q24B32B36
{map<std::string, std::pair<std::string, double>, std::less<std::string>, std::allocator<std::pair<const std::string, std::pair<std::string, double>>>>="__tree_"{__tree<std::__value_type<std::string, std::pair<std::string, double>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::pair<std::string, double>>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, std::pair<std::string, double>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::pair<std::string, double>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::pair<std::string, double>>, std::less<std::string>, true>>="__value_"Q}}}
@44@0:8@16^v24@32B40
^{__MecabraContext=}16@0:8
^{__MecabraContext=}
v40@0:8@16^B24^B32
q32@0:8@16q24
q24@0:8Q16
{_NSRange=QQ}24@0:8Q16
I32@0:8Q16^{_NSRange=QQ}24
Q32@0:8Q16@?24
