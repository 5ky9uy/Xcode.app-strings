@(#)PROGRAM:AppSSO  PROJECT:AppSSO-1
SOAuthorizationResultCore
Unable to find class %s
v8@?0
Failed to connect to AppSSO service
v16@?0@"NSError"8
com.apple.AppSSO
SOExtensionServiceConnection
SOInternalProtocols
SOErrorHelper
localizedExtensionBundleDisplayName
(null)
-[SORemoteExtensionContext saveRequest:forIdentifier:]
-[SORemoteExtensionContext removeRequestForIdentifier:]
failed to get extension view controller
NSExtension
NSExtensionPrincipalClass
NSExtensionMainStoryboard
failed to get extension NSExtensionPrincipalClass or NSExtensionMainStoryboard
failed to instantiate initial view controller from storyboard
failed to get extension principalClass
-[SORemoteExtensionContext beginAuthorizationWithRequestParameters:completion:]
required beginAuthorizationWithRequest is not implemented in extension
-[SORemoteExtensionContext beginAuthorizationWithServiceXPCEndpoint:completion:]
v24@?0@"SOAuthorizationRequestParameters"8@"NSError"16
-[SORemoteExtensionContext cancelAuthorization:completion:]
-[SORemoteExtensionContext finishAuthorization:completion:]
-[SORemoteExtensionContext completeFinishAuthorization:error:]
-[SORemoteExtensionContext openURL:completionHandler:]
-[SORemoteExtensionContext canOpenURL:]
v12@?0B8
-[SORemoteExtensionContext beginDeviceRegistrationUsingOptions:completion:]
-[SORemoteExtensionContext beginUserRegistrationUsingUserName:authenticationMethod:options:completion:]
-[SORemoteExtensionContext registrationDidComplete]
-[SORemoteExtensionContext canPerformRegistrationCompletion:]
-[SORemoteExtensionContext _disableAppSSOInCFNetwork]
SORemoteExtensionContext
ASAuthorizationProviderExtensionAuthorizationRequest
com.apple.AppSSO.extension-queue-(%@)
-[SOExtension incrementRequestCount]
-[SOExtension decrementRequestCount]
connection to extension interrupted
v16@?0@"<NSCopying>"8
-[SOExtension saveDelegate:forRequestIdentifier:]
-[SOExtension findDelegateForIdentifier:]
-[SOExtension removeDelegateForRequestIdentifier:]
-[SOExtension setupNonUISessionWithCompletion:]
-[SOExtension requestAuthorizationViewControllerWithCompletion:]
-[SOExtension beginAuthorizationWithRequestParameters:completion:]
-[SOExtension beginAuthorizationWithServiceXPCEndpoint:completion:]
-[SOExtension cancelAuthorization:completion:]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SOExtension finishAuthorization:completion:]
-[SOExtension _finishAuthorization:withCompletion:]
v20@?0B8@"NSError"12
-[SOExtension _setupNonUISessionIfNecessaryWithCompletion:]
v24@?0@"NSUUID"8@"NSError"16
-[SOExtension _setupSessionIfNecessaryWithCompletion:]
-[SOExtension _finishedSettingUpSession:]
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
-[SOExtension unload]
AppSSO
allExtensionRequestsModeConcurrent
appleConnectExtensionRequestsModeConcurrent
SOExtensionRequestsMode
Concurrent
Queue
SOExtensionSSOGrantTypes
password
urn:ietf:params:oauth:grant-type:jwt-bearer
-[SOExtension checkAssociatedDomains]
application-identifier
-[SOExtension hasURLApprovedAssociatedDomain:]
<%@:%p, bundleID=%@, path=%@, associatedDomains=%@>
-[SOExtension viewServiceDidTerminateWithError:]
-[SOExtension beginDeviceRegistrationUsingOptions:completion:]
v16@?0q8
-[SOExtension beginUserRegistrationUsingUserName:authenticationMethod:options:completion:]
-[SOExtension registrationDidComplete]
SOExtension
SOAuthorizationParametersCore
com.apple.AppSSO.SOExtensionManager.ExtensionsChanged
com.apple.AppSSO.extension-manager-queue
-[SOExtensionManager loadExtensionWithBundleIdentifer:completion:]
No AppSSO IdP extension found (internal error)
v24@?0@"SOExtension"8@"NSError"16
-[SOExtensionManager loadExtensionWithBundleIdentifier:]
-[SOExtensionManager loadInternalExtension]
-[SOExtensionManager beginMatchingExtensions]
-[SOExtensionManager endMatchingExtensions]
-[SOExtensionManager loadExtensions]
v24@?0@"NSArray"8@"NSError"16
-[SOExtensionManager unloadExtensions]
-[SOExtensionManager loadedExtensionWithBundleIdentifer:]
-[SOExtensionManager loadedInternalExtension]
-[SOExtensionManager isLoadedExtensionWithBundleIdentifer:]
-[SOExtensionManager _doEndMatchingExtensions]
+[SOExtensionManager _sendNotificationsLoadedExtensions:new:removed:]
extensions
removed
com.apple.AuthKitUI.AKAppSSOExtension
com.apple.ist.ds.appleconnect2.AppSSOExtension
com.apple.AppSSOKerberos.KerberosExtension
com.apple.ist.AppleConnect.App-SSO
com.apple.ist.AppleConnect.mini.App-SSO
SOExtensionManager
Identifier
RequestedOperation
Realm
AuthorizationOptions
UseInternalExtensions
ResponseCode
CFNetworkInterception
CallerManaged
CallerTeamIdentifier
LocalizedCallerDisplayName
EnableUserInteraction
ImpersonationBundleIdentifier
AuthenticationMethod
SORequestQueue
Configuration
Plugins
Realms
Signature Validated
Associated Domains Validated
Requests
Config Version
-[SODebugHints debugHintsWithCompletion:]
not internal build
@16@?0@8
0x%016llX
SODebugConfiguration
SOUtils
ExtensionSignatureValidated
SOPreferences
-[SOConfigurationManager init]
-[SOConfigurationManager saveConfigurationData:completion:]
SOConfigurationManager
-[SOAuthorizationRequest doNotHandle]
-[SOAuthorizationRequest cancel]
-[SOAuthorizationRequest complete]
-[SOAuthorizationRequest completeWithHTTPAuthorizationHeaders:]
-[SOAuthorizationRequest completeWithHTTPResponse:httpBody:]
-[SOAuthorizationRequest completeWithAuthorizationResult:]
-[SOAuthorizationRequest completeWithError:]
-[SOAuthorizationRequest presentAuthorizationViewControllerWithHints:completion:]
Authorization has been already canceled
SOAuthorizationRequest
SOAuthorizationCredential
ASAuthorizationErrorDomain
SOAuthorizationOptionCoreNoUserInterface
POLoginManager
com.apple.AppSSO.AuthorizationError
Subcode
configuration_removed
fetch_network_credentials
userActionInitiated
initiatorOrigin
initiatingAction
removedProfileExtensionBundleIdentifier
-[SOAuthorization init]
-[SOAuthorization getAuthorizationHintsWithURL:responseCode:completion:]
v24@?0@"SOAuthorizationHintsCore"8@"NSError"16
-[SOAuthorization beginAuthorizationWithURL:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithOperation:url:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithParameters:]
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
v32@?0@"NSString"8@"NSXPCListenerEndpoint"16@"NSError"24
v24@?0@"SOAuthorizationCredentialCore"8@"NSError"16
-[SOAuthorization cancelAuthorization]
-[SOAuthorization debugHintsWithCompletion:]
-[SOAuthorization _finishAuthorization:completion:]
-[SOAuthorization _cancelAuthorization]
-[SOAuthorization _finishAuthorizationWithCredential:error:]
Invalid credential
-[SOAuthorization applicationDidBecomeActive:]
timeout 
-[SOAuthorization _extensionCleanup]
-[SOAuthorization authorization:didCompleteWithCredential:error:]
-[SOAuthorization presentAuthorizationViewControllerWithHints:requestIdentifier:completion:]
no authorization delegate
-[SOAuthorization viewControllerDidCancel:]
-[SOAuthorization(Kerberos) realms]
-[SOAuthorization(Kerberos) kerberosProfiles]
SOAuthorization
SOAuthorizationCore
SOAuthorizationRequestParametersCore
SOAuthorizationCredentialCore
SOConfigurationClient
SOUIAuthorizationViewController
SOExtensionViewService
SORemoteExtensionViewController
com.apple.AppSSO.SOConfigurationHost.ConfigurationChanged
-[SOConfigurationHost init]
-[SOConfigurationHost saveConfiguration:error:]
invalid configuration format
NewConfiguration
-[SOConfigurationHost saveConfigurationData:error:]
-[SOConfigurationHost profileForURL:responseCode:]
-[SOConfigurationHost removedProfileForExtensionBundleIdentifier:]
-[SOConfigurationHost configurationForClientWithError:]
-[SOConfigurationHost profilesWithExtensionBundleIdentifier:]
-[SOConfigurationHost validatedProfileForPlatformSSO]
-[SOConfigurationHost hasAnyMDMProfileForExtension:]
-[SOConfigurationHost realms]
-[SOConfigurationHost willHandleURL:responseCode:callerBundleIdentifier:]
ssoid
+[SOConfigurationHost _loadProfilesFromDict:]
Profiles
-[SOConfigurationHost _loadConfigForFirstTime]
-[SOConfigurationHost _reloadConfigWithReason:]
-[SOConfigurationHost _configurationLoadedWithReason:]
reason
-[SOConfigurationHost _checkExtensionsExistenceForProfiles:]
-[SOConfigurationHost _checkAssociatedDomainForProfiles:]
http
https
-[SOConfigurationHost _initDataVaultIfNeededWithError:]
mobile
ExtensibleSSO
failed to check the state of datavault: %s
failed to convert to datavault: %s
-[SOConfigurationHost _saveConfigToFile:error:]
-[SOConfigurationHost _extensionsLoaded:]
FirstLoad
ExtensionsChanged
ModifiedByMDM
RegistrationToken
present
<null>
/var/mobile/Library/ExtensibleSSO/Configuration
IPHONE_SIMULATOR_ROOT
%@/%@
com.apple.AppSSO.configuration.plist
SOConfigurationHost
SOConfigurationVersion
SOConfiguration
SOFullProfile
-[SOHostExtensionContext openURL:completionHandler:]
com.apple.AppSSO.launch-origin
-[SOHostExtensionContext canOpenURL:completionHandler:]
-[SOHostExtensionContext presentAuthorizationViewControllerWithHints:requestIdentifier:completion:]
-[SOHostExtensionContext authorization:didCompleteWithCredential:error:]
SOHostExtensionContext
com.apple.AppSSO.profile
type
isKerberosExtension
authenticationMethod
hasRegistrationToken
@"NSDictionary"8@?0
AppSSOCore is not available
AppSSOClientImpl
appSSO_init
appSSO_willPerform
appSSO_performResponse
appSSO_performResponseCredential
appSSO_willHandle
appSSO_handleResponse
appSSO_handleResponseCredential
appSSO_handleResponseImpersonationCredential
com.apple.AppSSO.extension-finder-queue
-[SOExtensionFinder findExtensionsWithCompletion:]
com.apple.AppSSO.idp-extension
-[SOExtensionFinder findExtensionWithBundleIdentifier:completion:]
No valid IdP extension with bundle ID: %@
More than one IdP extension with bundle ID: %@
-[SOExtensionFinder beginMatchingExtensionsWithCompletion:]
Extension matching is already in progress, ignoring request
Extension matching deallocated, request failed
-[SOExtensionFinder endMatchingExtensions]
SOExtensionFinder
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/PlatformSSO.framework/PlatformSSO
softlink:o:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOUI.framework/AppSSOUI
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:o:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
missing XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO service
AppSSO service XPC error: %{public}@
%s current requests: %{public}@ on %@
creating extension authorization request handler
Failed to get NSExtensionPrincipalClass or NSExtensionMainStoryboard: %{public}@
Failed to instantiate initial view controller from storyboard: %{public}@
Failed to get extension principalClass for principalClassName: %{public}@
Error getting host context %{public}@
Error getting synchronous host context %{public}@
%s requestIdentifier = %{public}@, %{public}@ on %@
SOAuthorizationOperationConfigurationRemoved requires extension built with newer SDK
calling extension API beginAuthorizationWithRequest, requestIdentifier = %{public}@ %{public}@
finished extension API beginAuthorizationWithRequest, requestIdentifier = %{public}@, %{public}@
%s %{public}@ on %@
calling extension API beginAuthorizationWithRequest, requestIdentifier = %{public}@, %{public}@
%s requestIdentifier = %{public}@ on %@
calling extension API cancelAuthorizationWithRequest, %{public}@
finished extension API cancelAuthorizationWithRequest, %{public}@
optional API cancelAuthorizationWithRequest is not implemented in extension
postponing finishAuthorization completion because of connected secKeyProxies clients (%d)
%s requestIdentifier = %{public}@, error: %{public}@ on %@
no finishAuthorization completion block => ignoring complete request
%s URL: %{sensitive, mask.hash}@ on %@
failed to get host context to open URL, error: %{public}@
failed to get synchronous host context to open URL, error: %{public}@
%s options = %{public}@ on %@
extension PSSO API beginDeviceRegistrationUsingLoginManager is not implemented in extension
extension PSSO API beginUserRegistrationUsingLoginManager is not implemented in extension
extension PSSO API registrationDidComplete is not implemented in extension
Extension has not implemented registration protocol.
%s count now %{public}@ on %@
interruption handler running
Extension interrupted. Nilling out session ID
%s current delegate: %{public}@ on %@
%s current delegates: %{public}@ on %@
%s requestIdentifier: %{public}@ on %@
Failed to get remote context with error %{public}@
Calling cancelAuthorizationWithCompletion on extension requestIdentifier: %{public}@
Finished cancelAuthorizationWithCompletion result: %{private}@, error: %{public}@, requestIdentifier: %{public}@ 
Notifying delegate %{public}@ that extension wants to show UI, hints = %{private}@
Notifying delegate %@ that extension has finished with credential: %{private}@, identifier: %{public}@, error: %{public}@
Calling finishAuthorizationWithCompletion on extension
Finished finishAuthorizationWithCompletion result: %d, error: %{public}@
Using existing session for extension %@
Setting up new session for extension %@
Finished setting up new session for extension %{public}@ with error %{public}@ and session ID %{public}@
Beginning request for extension %@
Request for extension %{public}@ failed with error %{public}@
Instantiating view controller %@
Failed to instantiate view controller because of %{public}@
Passing session ID to remote view
Session with ID %{public}@ was unable to communicate with the remote service because of %{public}@
Session with ID %{public}@ was unable to get remote view service
Calling beginAuthorizationWithRequestParameters on extension
Finished beginAuthorizationWithRequestParameters result: %d, error: %{public}@
Calling beginAuthorizationWithServiceXPCEndpoint on extension
Finished beginAuthorizationWithServiceXPCEndpoint result: %d, error: %{public}@
%s  on %@
SOExtensionRequestsModeConcurrent enabled by the feature flag
invalid SOExtensionRequestsMode: %{public}@, using default
Associated domain: failed to get extension bundle proxy at path: %{public}@
Associated domain: failed to get app proxy for extension: %{public}@
Associated domain: failed to get appID for the app at path: %{public}@
Associated domain: failed to get service details for the appID: %{public}@ with error: %{public}@
Associated domain: %{public}@ is approved
Associated domain: %{public}@ is not approved
Associated domain: for app %@: %@, appID: %@, services: %@
%s url: %{sensitive, mask.hash}@ on %@
%{public}@ hasAssociatedDomainsApproved = %d
Calling beginDeviceRegistrationUsingLoginManager on extension
Finished beginDeviceRegistrationUsingLoginManager, result = %{public}@
Calling beginUserRegistrationUsingLoginManager on extension
Finished beginUserRegistrationUsingLoginManager, result = %{public}@
Calling registrationDidComplete on extension
Finished registrationDidComplete
Calling canPerformRegistration on extension
Finished canPerformRegistration
%s bundleIdentifier: %{public}@ on %@
extension not found: %{public}@, error: %{public}@
%s bundleIdentifier=%{public}@ on %@
%s %{public}@ => %{public}@ in %{public}@ on %@
restarting matching extensions because of error: %{public}@
%s extensions: %{public}@, new: %{public}@, removed: %{public}@ on %@
%{public}@: enqueueRequest: %p, %{public}@, %{public}@, queue count: %d
%{public}@: processNextRequest: queue count: %d
%{public}@: removeAllRequests: queue count: %d
%{public}@: checking %{public}@
%{public}@: removing %{public}@
%{public}@: removeRequestWithIdentifier: %{public}@
%{public}@: processItem: %p
%{public}@: itemCompleted: %p
%{public}@: completing %{public}@
extensionSignatureValidated=%{public}s
no SOConfigurationManager!
%s extension API called on %@
%@: cancel -> doNotHandle
%@: cancel -> cancel
%@: cancel -> complete
%s extension API called, identifier = %{public}@, httpAuthorizationHeaders = %{sensitive, mask.hash}@ on %@
%@: cancel -> completeWithHTTPAuthorizationHeaders
%s extension API called, httpResponse = %{sensitive, mask.hash}@, httpBody = %{sensitive, mask.hash}@ on %@
%@: cancel -> completeWithHTTPResponse
%s extension API called, completeWithAuthorizationResult = %{private}@ on %@
failed to create SecKey proxies: %{public}@
%s extension API called, error = %{public}@ on %@
%@: cancel -> completeWithError
%@, authorization has been already canceled
%@, authorization wants to display UI but user interaction is not enabled
finish authorization with error: %{public}@
%@, authorization wants to display UI but it is not allowed
%@, authorization wants to display UI but the device screen is locked
no remote extension context
Failed to get host extension context with error = %{public}@
invalid SecKey in the authorization result: %{public}@
SecKeyProxy:clientConnectionHandler(firstClientConnected: %d, connectedClients: %d)
SecKeyProxy:clientDisconnectionHandler(lastClientDisconnected: %d, connectedClients: %d)
AppSSOCore is not available
canPerformAuthorizationWithURL
hints: %{public}@, error: %{public}@
%s identifier = %{public}@, operation = %{public}@, url = %{sensitive, mask.hash}@, httpHeaders = %{private}@, httpBody = %{private}@, auditToken = %{public}@, delegate = %{public}@, enableEmbeddedAVC = %d, enableUI = %d on %@
originator will present authorization view controller
%@ is already authorizing => ignoring a new authorization request
beginAuthorizationWithParametersEmbedded
beginAuthorizationWithRequestParameters: identifier = %{public}@, extensionBundleId = %{public}@, endpoint = %{public}@, error = %{public}@
loadExtensionWithBundleIdentifer: identifier = %{public}@, extension = %{public}@, error = %{public}@
requestAuthorizationViewControllerWithCompletion: identifier = %{public}@, remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithServiceXPCEndpoint: identifier = %{public}@, success = %d, error = %{public}@
beginAuthorizationWithParameters
cancelAuthorization
debugHintsWithCompletion
%s extension = %@ on %@
%s request = %{public}@, extension = %{public}@ on %@
%@ already finished => ignoring cancel request
%s credentialCore = %{private}@, error = %{public}@, requestParametersCore = %{public}@, delegate = %{public}@ on %@
%@ already finished => ignoring finish request
checkApplicationStateBeforeFinishing = %d, profile = %{private}@
no SPI authorization delegate, identifier = %{public}@
calling SPI authorization delegate authorizationDidCancel: identifier = %{public}@
calling SPI authorization delegate authorizationDidNotHandle: identifier = %{public}@
calling SPI authorization delegate authorization:didCompleteWithError: identifier = %{public}@ (error = %{public}@)
calling SPI authorization delegate authorizationDidComplete: identifier = %{public}@
calling SPI authorization delegate authorization:didCompleteWithAuthorizationResult: identifier = %{public}@
failed to create SecKeys from SecKeyProxyEndpoints: %{public}@
calling SPI authorization delegate authorization:didCompleteWithHTTPAuthorizationHeaders: identifier = %{public}@
calling SPI authorization delegate authorization:didCompleteWithHTTPResponse:httpBody: identifier = %{public}@
calling SPI authorization delegate authorization:didCompleteWithError:  identifier = %{public}@ (error = %{public}@)
finished SPI authorization delegate call: identifier = %{public}@
%{public}@ has finished: identifier = %{public}@
application not active => authorization pending until application activation
application activation %@=> finishing pending authorization
%s extension = %{public}@, extensionViewController = %{public}@, authorizationViewController = %{public}@ on %@
%s %{private}@, %{public}@ on %@
no SPI authorization delegate
extensionViewController = %{public}@, authorizationViewController = %{public}@
calling SPI authorization delegate authorization:presentViewController:withCompletion:
finished SPI authorization delegate authorization:presentViewController:withCompletion: (success = %d, error = %{public}@)
%s viewController = %{public}@, authorizationViewController = %{public}@ on %@
isExtensionProcessWithAuditToken
Loading view for view service
Connecting view service (%{public}@) to context (%{public}@)
Couldn't find child view controller for context (%{public}@)
Couldn't find view for child view controller (%{public}@)
Couldn't load view for child view controller (%{public}@, %{public}@)
Connecting child view controller (%{public}@) to view service (%{public}@)
viewServiceDidTerminateWithError: %{public}@
%s saving new configuration: %{private}@ on %@
unable to save new configuration, invalid format
%s saving new configuration=%{private}@ on %@
unable to save new configuration, invalid format: %{private}@
unexpected class in the configuration
profile for URL %{sensitive, mask.hash}@ => %{public}@ in %{public}@
removed profile for extension bundle ID %{public}@ => %{public}@ in %{public}@
%s extensionBundleIdentifier: %{public}@ on %@
Checking default path: %@
found profile for extension: %{public}@
extension: %{public}@ not found
%s URL: %{sensitive, mask.hash}@, callerBundleIdentifier: %{public}@ on %@
willHandleURL(host): checking associated domains again for URL: %{sensitive, mask.hash}@, extension: %{public}@
willHandleURL(host): reloading configuration with updated associated domains for URL: %{sensitive, mask.hash}@, extension: %{public}@
willHandleURL(host): %{sensitive, mask.hash}@ callerBundleIdentifier: %{public}@ result: %{public}@
invalid config: %{private}@
invalid profile: %{private}@
multiple profiles have Platform SSO: %{private}@
failed to load config at %{private}@, error: %{public}@
%s reason = %@ on %@
Removed configuration ignored for extension: %{public}@
removed profiles = %{private}@
%s reason = %{public}@, configuration = %{public}@ on %@
no extension available for profile (ignored): %{public}@
Associated domain: validation is ignored, using all URLs in AppSSO configuration
Associated domain: validation failed to find extension for profile: %{public}@, ignoring profile
Associated domain: validation skipped for extension: %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it is not a http scheme for extension %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it contains a wildcard in the host name for extension %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it has no approved associated domains for extensions %{public}@
Associated domain: validation failed for URL: %{sensitive, mask.hash}@ because it has no approved associated domains for extensions %{public}@, it will be checked again when the extension is used
failed to create configuration directory at %{public}@: %{public}@
created configuration directory at %{public}@
failed to check the state of datavault: %{public}s
failed to convert to datavault: %{public}s
successfully created datavault at %{public}@
failed to change file attributes of file: %{public}@, error: %{public}@
config written to file: %{public}@, %@
failed to save config to file: %{public}@, error: %{public}@
extensions changed: %{public}@, new: %{public}@, removed: %{public}@
config file is unavailable: %{public}@
failed to get the simulator root path
Error getting remote context %{public}@
can not open URL %{sensitive, mask.hash}@
opened URL %{sensitive, mask.hash}@: success = %{public}@, error = %{public}@
can open URL %{sensitive, mask.hash}@: result = %{public}@, error = %{public}@
extensionsWithMatchingAttributes: %{public}@, error: %{public}@
findExtensionsWithCompletion: %{public}@, error: %{public}@
findExtensionWithBundleIdentifier: %{public}@, error: %{public}@
extension matching is already in progress, ignoring request
beginMatchingExtensionsWithAttributes: %{public}@, error: %{public}@
extension matching deallocated, request failed
beginMatchingExtensionsWithCompletion: %{public}@, error: %{public}@
extension matching not started, ignoring request
SOAuthorizationResult
SORemoteExtensionServiceProtocol
SOExtensionServiceProtocol
NSObject
SOExtensionServiceConnection
SOAuthorizationHints
SORequestQueueItem
SOQueueItem
SOHostExtensionContextProtocol
SOExtensionContextProtocol
SORemoteExtensionContextProtocol
POExtensionRegistrationProtocol
SORemoteExtensionContext
SOExtensionContext
SOExtension
SORemoteExtensionViewControllerDelegate
SOAuthorizationParameters
Internal
SOExtensionManager
SOAuthorizationRequestParameters
NSSecureCoding
NSCoding
SORequestQueue
SOAuthorizationCredential
SODebugHints
SOPreferences
SOConfigurationManager
SOAuthorizationRequest
SOAuthorization
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
Process
Kerberos
SOHostExtensionViewProtocol
SOExtensionViewProtocol
SORemoteExtensionViewProtocol
SOExtensionViewService
SORemoteExtensionViewController
SOConfigurationHost
SOHostExtensionContext
SOAnalytics
SOExtensionFinder
T@"NSArray",&,N
T#,R
T@"NSArray",R,N
T@"<SOAuthorizationDelegate>",W,V_delegate
T@"NSExtension",&,N,V_extension
T@"<SOServiceProtocol>",R,N,V_service
_auditTokenData
T@"NSArray",&,N,V_secKeyProxyEndpoints
_extensionAuxiliaryHostProtocol
T@"NSData",&,N
_processingItem
T@"NSData",C,N,V_httpBody
analyticsForMDMProfiles:reason:
T@"NSDictionary",&,N,V_authorizationOptions
cancelAuthorization:completion:
T@"NSDictionary",C,N,V_extensionData
canceledAuthorizationCredential
T@"NSError",&,N,V_canceledAuthorizationError
containsObject:
T@"NSHTTPURLResponse",C,N,V_httpResponse
enqueueRequest:
T@"NSString",&
finishAuthorization:completion:
T@"NSString",&,N,V_identifier
initWithAuthorizationHintsCore:
T@"NSString",C,N,V_callerBundleIdentifier
isInternalBuild
T@"NSString",C,N,V_impersonationBundleIdentifier
lowercaseString
T@"NSString",C,N,V_realm
release
T@"NSString",R,C
service
T@"NSString",R,N,V_localizedExtensionBundleDisplayName
setPrivateKeys:
T@"NSURL",C,N,V_url
setViewService:
T@"NSXPCListenerEndpoint",&,V_serviceXpcEndpoint
silentInternalErrorWithMessage:
T@"SOAuthorizationCredential",&,N,V_canceledAuthorizationCredential
stringWithAuthenticationMethod:
T@"SOAuthorizationRequestParameters",R,N
version
.cxx_destruct
T@"NSArray",&,N,V_secKeyProxies
T@"<ASAuthorizationProviderExtensionAuthorizationRequestHandler>",R,N
T@"NSData",&,N,V_auditTokenData
T@"<SORemoteExtensionViewControllerDelegate>",W,N,V_delegate
Tq,N,V_pssoAuthenticationMethod
T@"NSArray",&,N,V_associatedDomains
_configurationLoadedWithReason:
T@"NSArray",R,N,V_loadedExtensions
_plugIn
T@"NSData",&,N,V_httpBody
_setupExtension
T@"NSDictionary",&,N
bundleWithPath:
T@"NSDictionary",&,N,V_httpAuthorizationHeaders
cancelAuthorizationWithRequest:
T@"NSDictionary",C,N,V_httpHeaders
completionBlock
T@"NSHTTPURLResponse",C,N
dealloc
T@"NSObject<OS_dispatch_queue>",&
entitlementValueForKey:ofClass:
T@"NSString",&,N
hasURLApprovedAssociatedDomain:
T@"NSString",C,N
isCallerManaged
T@"NSString",C,N,V_callerTeamIdentifier
isProxy
T@"NSString",C,N,V_localizedCallerDisplayName
numberWithBool:
T@"NSString",C,N,V_requestedOperation
removeObserver:
T@"NSString",R,N
setHttpHeaders:
T@"NSURL",&,N
setUrl:
T@"NSXPCConnection",&,V_xpcConnection
setWithObjects:
T@"POLoginManager",R,N,V_loginManager
stringByAppendingPathComponent:
T@"SOAuthorizationParametersCore",R,N
T@"SOAuthorizationRequestParameters",R,N,V_requestParameters
T@"SOExtension",W,V_contextExtension
T@"SOExtensionViewService",W,V_viewService
T@"SORemoteExtensionContext",W,V_extensionContext
T@?,C,N,V_processItemBlock
T@?,R,C,N,V_completionBlock
TB,N
TB,N,GisAuthorizationCanceled,V_authorizationCanceled
TB,N,GisCFNetworkInterception,SsetCFNetworkInterception:
TB,N,GisCFNetworkInterception,V_cfNetworkInterception
TB,N,GisCallerManaged
TB,N,GisCallerManaged,V_callerManaged
TB,N,GisUserInteractionEnabled
TB,N,GisUserInteractionEnabled,V_enableUserInteraction
TB,N,V_enableEmbeddedAuthorizationViewController
TB,N,V_useInternalExtensions
TB,R
TB,R,N
TB,V_isRunning
TQ,R
Ti,N,V_secKeyProxiesConnectedClients
Ti,R,N,V_requestCount
Tq,N
Tq,N,V_responseCode
Tq,R,N
URLPrefix
URLWithString:
UTF8String
_UUID
_applicationActivationWithTimeout:
_associatedDomains
_authorizationCanceled
_authorizationCore
_authorizationOptions
_authorizationParametersCore
_authorizationResultCore
_authorizationViewController
_auxiliaryConnection
_beginAuthorizationWithRequestParameters:completion:
_beginAuthorizationWithServiceXPCEndpoint:completion:
_callerBundleIdentifier
_callerManaged
_callerTeamIdentifier
_cancelAuthorization
_canceledAuthorizationCredential
_canceledAuthorizationError
_cfNetworkInterception
_checkAssociatedDomainForProfiles:
_checkExtensionsExistenceForProfiles:
_checkNewVersion
_completeFinishAuthorizationWithRequestIdentifier:error:
_completionBlock
_configuration
_configurationVersion
_connectChildView
_connectContextToSessionWithRequestIdentifier:completion:
_connectToService
_contextExtension
_contextForSession
_createSecKeyProxiesForSecKeys:error:
_defaultConfigurationFile
_defaultConfigurationPath
_delegate
_disableAppSSO
_disableAppSSOInCFNetwork
_doBeginMatchingExtensions
_doEndMatchingExtensions
_doLoadExtensions
_enableEmbeddedAuthorizationViewController
_enableUserInteraction
_exportedInterface
_extension
_extensionAuthorizationRequestHandler
_extensionAuxiliaryVendorProtocol
_extensionBundle
_extensionCleanup
_extensionContext
_extensionContextForUUID:
_extensionData
_extensionDelegates
_extensionFinder
_extensionFinderQueue
_extensionManagerQueue
_extensionServiceConnection
_extensionViewController
_extensionsLoaded:
_finishAuthorization:completion:
_finishAuthorization:withCompletion:
_finishAuthorizationCompletion
_finishAuthorizationWithCredential:error:
_finishedSettingUpSession:
_hostExtensionContext
_httpAuthorizationHeaders
_httpBody
_httpHeaders
_httpResponse
_identifier
_impersonationBundleIdentifier
_initDataVaultIfNeededWithError:
_invalidateLoginManager
_isConfigFileAvailable
_isMatchedExtension:forBundleIdentifier:
_isRunning
_isUserInterfaceAllowed
_itemCompleted
_loadConfigForFirstTime
_loadProfilesFromDict:
_loadProfilesFromURL:logFileError:
_loadedExtensions
_localizedCallerDisplayName
_localizedExtensionBundleDisplayName
_loginManager
_matchingContext
_pendingFinishAuthorizationBlock
_principalObject
_processItem:
_processItemBlock
_pssoAuthenticationMethod
_queue
_realm
_reloadConfigWithReason:
_remoteExtensionContext
_remoteViewController
_remoteViewControllerInterface
_removedProfiles
_requestCount
_requestParameters
_requestedOperation
_requests
_responseCode
_saveConfigToFile:error:
_secKeyProxies
_secKeyProxiesConnectedClients
_secKeyProxyEndpoints
_sendNotificationsLoadedExtensions:new:removed:
_service
_serviceXpcEndpoint
_sessionID
_setPrincipalObject:forUUID:
_setupNonUISessionIfNecessaryWithCompletion:
_setupNonUISessionWithCompletion:
_setupSessionHelperForIOSWithCompletion:
_setupSessionIfNecessaryWithCompletion:
_setupSessionWithCompletion:
_sharedExtensionContextVendor
_soExtensionsForExtensions:
_startKeyBagObserverForReloadingConfiguration
_stringWithReason:
_url
_useInternalExtensions
_viewService
_xpcConnection
activateConstraints:
addChildViewController:
addObject:
addObserver:selector:name:object:
addSubview:
applicationDidBecomeActive:
applicationState
array
arrayWithObject:
arrayWithObjects:count:
associatedDomains
auditToken
auditTokenData
auditTokenForSession
authenticationMethods
authorization:didCompleteWithAuthorizationResult:
authorization:didCompleteWithCredential:error:
authorization:didCompleteWithError:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorization:presentViewController:withCompletion:
authorizationCanceled
authorizationDidCancel:
authorizationDidComplete:
authorizationDidNotHandle:
authorizationOptions
authorizationParametersCore
authorizationRequest
authorizationRequestHandlerWithRequestParameters:error:
autorelease
beginAuthorizationWithCompletion:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
beginAuthorizationWithParameters:
beginAuthorizationWithParameters:completion:
beginAuthorizationWithRequest:
beginAuthorizationWithRequestParameters:completion:
beginAuthorizationWithServiceXPCEndpoint:completion:
beginAuthorizationWithURL:httpHeaders:httpBody:
beginDeviceRegistrationUsingOptions:completion:
beginExtensionRequestWithInputItems:error:
beginMatchingExtensions
beginMatchingExtensionsWithAttributes:completion:
beginMatchingExtensionsWithCompletion:
beginUserRegistrationUsingUserName:authenticationMethod:options:completion:
boolValue
boolValueForKey:defaultValue:
bottomAnchor
bundleIdentifier
bundleURL
cStringUsingEncoding:
callerBundleIdentifier
callerManaged
callerTeamIdentifier
canOpenURL:
canOpenURL:completionHandler:
canPerformAuthorizationWithURL:responseCode:
canPerformAuthorizationWithURL:responseCode:callerBundleIdentifier:useInternalExtensions:
canPerformAuthorizationWithURL:responseCode:useInternalExtensions:
canPerformRegistrationCompletion:
cancel
cancelAuthorization
cancelExtensionRequestWithIdentifier:
canceledAuthorizationError
cfNetworkInterception
checkAssociatedDomains
checkVersion
class
code
complete
completeFinishAuthorization:error:
completeWithAuthorizationResult:
completeWithError:
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
configVersion
configurationForClientWithError:
conformsToProtocol:
connectToContextWithSessionID:completion:
constraintEqualToAnchor:
containerAppBundleIdentifier
containerAppPath
containingBundle
containingUrl
contextExtension
copy
copyProfile
copyProfileForClient
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createSecKeysFromSecKeyProxyEndpoints:error:
debugDescription
debugHintsWithCompletion:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decrementRequestCount
defaultCenter
defaultClient
defaultManager
defaultWorkspace
delegate
delegateDispatchQueue
description
dictionary
dictionaryWithContentsOfURL:error:
dictionaryWithObjects:forKeys:count:
didMoveToParentViewController:
doNotHandle
domain
domainHost
domainPort
empty
enableEmbeddedAuthorizationViewController
enableUserInteraction
encodeObject:forKey:
encodeWithCoder:
endMatchingExtensions
endMatchingExtensions:
endpoint
error:hasCode:
errorWithCode:
errorWithCode:message:
errorWithDomain:code:userInfo:
exportedInterface
extension
extensionAuthorizationRequestHandlerWithError:
extensionBundleIdentifier
extensionContext
extensionData
extensionRequestsMode
extensionViewController
extensionsWithMatchingAttributes:error:
fileExistsAtPath:isDirectory:
fileURLWithPath:
findDelegateForIdentifier:
findExtensionWithBundleIdentifier:completion:
findExtensionsWithCompletion:
findRequestForIdentifier:
firstObject
getAuthorizationHintsWithURL:responseCode:completion:
hasAnyMDMProfileForExtension:
hasAssociatedDomainsApproved
hash
host
hostContextWithError:
httpAuthorizationHeaders
httpBody
httpHeaders
httpResponse
identifier
impersonationBundleIdentifier
increaseVersionWithMessage:
incrementRequestCount
infoDictionary
init
initWithAuthorizationCredential:
initWithAuthorizationParameters:
initWithAuthorizationRequest:
initWithAuthorizationRequestParametersCore:
initWithAuthorizationResult:
initWithCoder:
initWithExtension:
initWithExtensionViewController:hints:
initWithHTTPAuthorizationHeaders:
initWithHTTPResponse:httpBody:
initWithIdentifier:
initWithKey:
initWithListenerEndpoint:
initWithMode:
initWithProfileData:
initWithProfiles:
initWithRequestParameters:remoteExtensionContext:
initWithService:requestParameters:completionBlock:
initWithServiceType:applicationIdentifier:domain:
instantiateInitialViewController
instantiateViewControllerWithInputItems:listenerEndpoint:connectionHandler:
intValue
integerValue
interfaceWithInternalProtocol:
interfaceWithProtocol:
internalErrorWithMessage:
internalExtensionBundleIdentifier
internalExtensionsBundleIdentifiers
invalidate
isAppleConnectExtensionBundleIdentifier:
isApplicationAvailableToOpenURL:error:
isApproved
isAssociatedDomainValidated
isAuthorizationCanceled
isCFNetworkInterception
isEqual:
isEqualToExtension:
isEqualToString:
isExtensionProcessWithAuditToken:completion:
isExtensionSignatureValidated
isInternalExtensionBundleIdentifier:
isKindOfClass:
isLoadedExtensionWithBundleIdentifer:
isMemberOfClass:
isRunning
isTiburonExtensionBundleIdentifier:
isUserInteractionEnabled
kerberosProfiles
leadingAnchor
length
loadExtensionWithBundleIdentifer:completion:
loadExtensionWithBundleIdentifier:
loadExtensions
loadInternalExtension
loadView
loadedExtensionWithBundleIdentifer:
loadedExtensions
loadedInternalExtension
localizedCallerDisplayName
localizedExtensionBundleDisplayName
localizedExtensionDisplayName
loginManager
mainBundle
mapArray:usingBlock:
maskRegistrationTokenInConfigurationData:
maskRegistrationTokenInProfileList:
mutableCopy
numberWithInt:
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
openSensitiveURL:withOptions:error:
openURL:completionHandler:
operation
originatorBundleIdentifier
parameterErrorWithMessage:
path
performBlockOnDelegateQueue:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pluginKitProxyForURL:
port
postNotificationName:object:userInfo:
presentAuthorizationViewControllerWithCompletion:
presentAuthorizationViewControllerWithHints:completion:
presentAuthorizationViewControllerWithHints:requestIdentifier:completion:
privateKeys
processItemBlock
processNextRequest
profileForURL:responseCode:
profiles
profilesWithExtensionBundleIdentifier:
pssoAuthenticationMethod
pssoRegistrationToken
queueCount
rangeOfString:
realm
realms
registrationDidComplete
remoteContextWithError:
remoteObjectProxyWithErrorHandler:
remoteViewControllerInterface
removeAllRequestsWithBlock:
removeDelegateForRequestIdentifier:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeQueueWithIdentifier:
removeRequestForIdentifier:
removeRequestWithIdentifier:block:
removeURLPrefix:
removedProfileForExtensionBundleIdentifier:
requestAuthorizationViewControllerWithCompletion:
requestCount
requestParameters
requestParametersCore
requestQueueWithIdentifier:
requestReauthenticationWithCompletion:
requestReauthenticationWithRequestIdentifier:completion:
requestedOperation
respondsToSelector:
responseCode
resume
retain
retainCount
saveConfiguration:error:
saveConfigurationData:completion:
saveConfigurationData:error:
saveDelegate:forRequestIdentifier:
saveRequest:forIdentifier:
scheme
secKeyProxies
secKeyProxiesConnectedClients
secKeyProxyEndpoints
self
serviceDetailsWithServiceSpecifier:error:
serviceSpecifier
serviceViewControllerInterface
serviceViewControllerProxyWithErrorHandler:
serviceXpcEndpoint
setAppSSOUnavailable
setAssociatedDomains:
setAttributes:ofItemAtPath:error:
setAuditTokenData:
setAuthorizationCanceled:
setAuthorizationOptions:
setCFNetworkInterception:
setCallerBundleIdentifier:
setCallerManaged:
setCallerTeamIdentifier:
setCanceledAuthorizationCredential:
setCanceledAuthorizationError:
setCfNetworkInterception:
setClientConnectionHandler:
setClientDisconnectionHandler:
setContextExtension:
setDelegate:
setDelegateDispatchQueue:
setEnableEmbeddedAuthorizationViewController:
setEnableUserInteraction:
setExtension:
setExtensionContext:
setExtensionData:
setHostExtensionContext:
setHttpAuthorizationHeaders:
setHttpBody:
setHttpResponse:
setIdentifier:
setImpersonationBundleIdentifier:
setInterruptionHandler:
setInvalidationHandler:
setIsRunning:
setLocalizedCallerDisplayName:
setObject:forKey:
setObject:forKeyedSubscript:
setOperation:
setOriginatorBundleIdentifier:
setProcessItemBlock:
setPssoAuthenticationMethod:
setPssoRegistrationToken:
setRealm:
setRemoteObjectInterface:
setRequestIdentifier:
setRequestInterruptionBlock:
setRequestParametersCore:
setRequestedOperation:
setResponseCode:
setSecKeyProxies:
setSecKeyProxiesConnectedClients:
setSecKeyProxyEndpoints:
setServiceXpcEndpoint:
setTranslatesAutoresizingMaskIntoConstraints:
setUseInternalExtensions:
setView:
setXpcConnection:
setupNonUISessionWithCompletion:
sharedApplication
sharedInstance
storyboardWithName:bundle:
stringByAppendingFormat:
stringWithFormat:
stringWithHandleResult:
stringWithProfileType:
stringWithUTF8String:
strongToStrongObjectsMapTable
strongToWeakObjectsMapTable
superclass
supportsSecureCoding
synchronousHostContextWithError:
synchronousRemoteObjectProxyWithErrorHandler:
topAnchor
trailingAnchor
type
unload
unloadExtensions
useInternalExtensions
userInfo
validatedProfileForPlatformSSO
view
viewControllerDidCancel:
viewService
viewServiceDidTerminateWithError:
willHandleURL:responseCode:callerBundleIdentifier:
willHandleURL:responseCode:callerBundleIdentifier:profile:
writeToURL:error:
xpcConnection
zone
@16@0:8
@24@0:8@16
@32@0:8@16@24
v24@0:8@16
v16@0:8
@"SOAuthorizationResultCore"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"SOAuthorizationRequestParameters"@"NSError">16
@"NSXPCConnection"
@"NSXPCListenerEndpoint"
@"NSString"
v20@0:8B16
@"SOAuthorizationRequestParameters"16@0:8
@40@0:8@16@24@?32
@?16@0:8
@"<SOServiceProtocol>"
@"SOAuthorizationRequestParameters"
v40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8@16@?24
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"SOAuthorizationCredential"24@"NSError"32
v32@0:8@"NSURL"16@?<v@?B>24
v32@0:8@"NSString"16@?<v@?Q>24
v32@0:8Q16@?24
v44@0:8@16i24Q28@?36
v32@0:8Q16@?<v@?q>24
v44@0:8@"NSString"16i24Q28@?<v@?q>36
v24@0:8@?<v@?B>16
v32@0:8@"SOAuthorizationRequestParameters"16@?<v@?B@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SOAuthorizationCredential"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
B24@0:8@"NSURL"16
v32@0:8@16@24
@32@0:8@16^@24
@24@0:8^@16
@"SOExtensionServiceConnection"
@"<ASAuthorizationProviderExtensionAuthorizationRequestHandler><POExtensionRegistrationProtocol>"
@"NSMapTable"
@"SOExtensionViewService"
v24@0:8@"NSError"16
i16@0:8
{?=[8I]}16@0:8
q16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_queue>"
@"SORemoteExtensionViewController"
@"NSExtension"
@"NSArray"
v24@0:8q16
@"SOAuthorizationParametersCore"
B32@0:8@16@24
@"SOExtensionFinder"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
@"NSDictionary"
@"NSData"
@"NSMutableArray"
@"<SOQueueItem>"
@"NSHTTPURLResponse"
B28@0:8^{__CFString=}16B24
v20@0:8i16
@"SORemoteExtensionContext"
@"POLoginManager"
@"SOAuthorizationCredential"
@"NSError"
B32@0:8@16q24
B36@0:8@16q24B32
B44@0:8@16q24@32B40
v24@0:8@?<v@?Q>16
v24@0:8@"SOUIAuthorizationViewController"16
v40@0:8@16q24@?32
v48@0:8@16@24@32@40
@"SOAuthorizationCore"
@"SOExtension"
@"SOUIAuthorizationViewController"
@"<SOAuthorizationDelegate>"
v56@0:8{?=[8I]}16@?48
v32@0:8@"NSUUID"16@?<v@?>24
@"<SORemoteExtensionViewControllerDelegate>"
@28@0:8@16B24
B32@0:8@16^@24
@32@0:8@16q24
q40@0:8@16q24@32
B24@0:8^@16
@24@0:8q16
@"SOConfiguration"
@"SOConfigurationVersion"
@(#)PROGRAM:AppSSO  PROJECT:AppSSO-1
SOAuthorizationResultCore
Unable to find class %s
v8@?0
Failed to connect to AppSSO service
v16@?0@"NSError"8
com.apple.AppSSO
SOExtensionServiceConnection
SOInternalProtocols
SOErrorHelper
localizedExtensionBundleDisplayName
(null)
-[SORemoteExtensionContext saveRequest:forIdentifier:]
-[SORemoteExtensionContext removeRequestForIdentifier:]
failed to get extension view controller
NSExtension
NSExtensionPrincipalClass
NSExtensionMainStoryboard
failed to get extension NSExtensionPrincipalClass or NSExtensionMainStoryboard
failed to instantiate initial view controller from storyboard
failed to get extension principalClass
-[SORemoteExtensionContext beginAuthorizationWithRequestParameters:completion:]
required beginAuthorizationWithRequest is not implemented in extension
-[SORemoteExtensionContext beginAuthorizationWithServiceXPCEndpoint:completion:]
v24@?0@"SOAuthorizationRequestParameters"8@"NSError"16
-[SORemoteExtensionContext cancelAuthorization:completion:]
-[SORemoteExtensionContext finishAuthorization:completion:]
-[SORemoteExtensionContext completeFinishAuthorization:error:]
-[SORemoteExtensionContext openURL:completionHandler:]
-[SORemoteExtensionContext canOpenURL:]
v12@?0B8
-[SORemoteExtensionContext beginDeviceRegistrationUsingOptions:completion:]
-[SORemoteExtensionContext beginUserRegistrationUsingUserName:authenticationMethod:options:completion:]
-[SORemoteExtensionContext registrationDidComplete]
-[SORemoteExtensionContext canPerformRegistrationCompletion:]
-[SORemoteExtensionContext _disableAppSSOInCFNetwork]
SORemoteExtensionContext
ASAuthorizationProviderExtensionAuthorizationRequest
com.apple.AppSSO.extension-queue-(%@)
-[SOExtension incrementRequestCount]
-[SOExtension decrementRequestCount]
connection to extension interrupted
v16@?0@"<NSCopying>"8
-[SOExtension saveDelegate:forRequestIdentifier:]
-[SOExtension findDelegateForIdentifier:]
-[SOExtension removeDelegateForRequestIdentifier:]
-[SOExtension setupNonUISessionWithCompletion:]
-[SOExtension requestAuthorizationViewControllerWithCompletion:]
-[SOExtension beginAuthorizationWithRequestParameters:completion:]
-[SOExtension beginAuthorizationWithServiceXPCEndpoint:completion:]
-[SOExtension cancelAuthorization:completion:]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SOExtension finishAuthorization:completion:]
-[SOExtension _finishAuthorization:withCompletion:]
v20@?0B8@"NSError"12
-[SOExtension _setupNonUISessionIfNecessaryWithCompletion:]
v24@?0@"NSUUID"8@"NSError"16
-[SOExtension _setupSessionIfNecessaryWithCompletion:]
-[SOExtension _finishedSettingUpSession:]
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
-[SOExtension unload]
AppSSO
allExtensionRequestsModeConcurrent
appleConnectExtensionRequestsModeConcurrent
SOExtensionRequestsMode
Concurrent
Queue
SOExtensionSSOGrantTypes
password
urn:ietf:params:oauth:grant-type:jwt-bearer
-[SOExtension checkAssociatedDomains]
application-identifier
-[SOExtension hasURLApprovedAssociatedDomain:]
<%@:%p, bundleID=%@, path=%@, associatedDomains=%@>
-[SOExtension viewServiceDidTerminateWithError:]
-[SOExtension beginDeviceRegistrationUsingOptions:completion:]
v16@?0q8
-[SOExtension beginUserRegistrationUsingUserName:authenticationMethod:options:completion:]
-[SOExtension registrationDidComplete]
SOExtension
SOAuthorizationParametersCore
com.apple.AppSSO.SOExtensionManager.ExtensionsChanged
com.apple.AppSSO.extension-manager-queue
-[SOExtensionManager loadExtensionWithBundleIdentifer:completion:]
No AppSSO IdP extension found (internal error)
v24@?0@"SOExtension"8@"NSError"16
-[SOExtensionManager loadExtensionWithBundleIdentifier:]
-[SOExtensionManager loadInternalExtension]
-[SOExtensionManager beginMatchingExtensions]
-[SOExtensionManager endMatchingExtensions]
-[SOExtensionManager loadExtensions]
v24@?0@"NSArray"8@"NSError"16
-[SOExtensionManager unloadExtensions]
-[SOExtensionManager loadedExtensionWithBundleIdentifer:]
-[SOExtensionManager loadedInternalExtension]
-[SOExtensionManager isLoadedExtensionWithBundleIdentifer:]
-[SOExtensionManager _doEndMatchingExtensions]
+[SOExtensionManager _sendNotificationsLoadedExtensions:new:removed:]
extensions
removed
com.apple.AuthKitUI.AKAppSSOExtension
com.apple.ist.ds.appleconnect2.AppSSOExtension
com.apple.AppSSOKerberos.KerberosExtension
com.apple.ist.AppleConnect.App-SSO
com.apple.ist.AppleConnect.mini.App-SSO
SOExtensionManager
Identifier
RequestedOperation
Realm
AuthorizationOptions
UseInternalExtensions
ResponseCode
CFNetworkInterception
CallerManaged
CallerTeamIdentifier
LocalizedCallerDisplayName
EnableUserInteraction
ImpersonationBundleIdentifier
AuthenticationMethod
SORequestQueue
Configuration
Plugins
Realms
Signature Validated
Associated Domains Validated
Requests
Config Version
-[SODebugHints debugHintsWithCompletion:]
not internal build
@16@?0@8
0x%016llX
SODebugConfiguration
SOUtils
ExtensionSignatureValidated
SOPreferences
-[SOConfigurationManager init]
-[SOConfigurationManager saveConfigurationData:completion:]
SOConfigurationManager
-[SOAuthorizationRequest doNotHandle]
-[SOAuthorizationRequest cancel]
-[SOAuthorizationRequest complete]
-[SOAuthorizationRequest completeWithHTTPAuthorizationHeaders:]
-[SOAuthorizationRequest completeWithHTTPResponse:httpBody:]
-[SOAuthorizationRequest completeWithAuthorizationResult:]
-[SOAuthorizationRequest completeWithError:]
-[SOAuthorizationRequest presentAuthorizationViewControllerWithHints:completion:]
Authorization has been already canceled
SOAuthorizationRequest
SOAuthorizationCredential
ASAuthorizationErrorDomain
SOAuthorizationOptionCoreNoUserInterface
POLoginManager
com.apple.AppSSO.AuthorizationError
Subcode
configuration_removed
fetch_network_credentials
userActionInitiated
initiatorOrigin
initiatingAction
removedProfileExtensionBundleIdentifier
-[SOAuthorization init]
-[SOAuthorization getAuthorizationHintsWithURL:responseCode:completion:]
v24@?0@"SOAuthorizationHintsCore"8@"NSError"16
-[SOAuthorization beginAuthorizationWithURL:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithOperation:url:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithParameters:]
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
v32@?0@"NSString"8@"NSXPCListenerEndpoint"16@"NSError"24
v24@?0@"SOAuthorizationCredentialCore"8@"NSError"16
-[SOAuthorization cancelAuthorization]
-[SOAuthorization debugHintsWithCompletion:]
-[SOAuthorization _finishAuthorization:completion:]
-[SOAuthorization _cancelAuthorization]
-[SOAuthorization _finishAuthorizationWithCredential:error:]
Invalid credential
-[SOAuthorization applicationDidBecomeActive:]
timeout 
-[SOAuthorization _extensionCleanup]
-[SOAuthorization authorization:didCompleteWithCredential:error:]
-[SOAuthorization presentAuthorizationViewControllerWithHints:requestIdentifier:completion:]
no authorization delegate
-[SOAuthorization viewControllerDidCancel:]
-[SOAuthorization(Kerberos) realms]
-[SOAuthorization(Kerberos) kerberosProfiles]
SOAuthorization
SOAuthorizationCore
SOAuthorizationRequestParametersCore
SOAuthorizationCredentialCore
SOConfigurationClient
SOUIAuthorizationViewController
SOExtensionViewService
SORemoteExtensionViewController
com.apple.AppSSO.SOConfigurationHost.ConfigurationChanged
-[SOConfigurationHost init]
-[SOConfigurationHost saveConfiguration:error:]
invalid configuration format
NewConfiguration
-[SOConfigurationHost saveConfigurationData:error:]
-[SOConfigurationHost profileForURL:responseCode:]
-[SOConfigurationHost removedProfileForExtensionBundleIdentifier:]
-[SOConfigurationHost configurationForClientWithError:]
-[SOConfigurationHost profilesWithExtensionBundleIdentifier:]
-[SOConfigurationHost validatedProfileForPlatformSSO]
-[SOConfigurationHost hasAnyMDMProfileForExtension:]
-[SOConfigurationHost realms]
-[SOConfigurationHost willHandleURL:responseCode:callerBundleIdentifier:]
ssoid
+[SOConfigurationHost _loadProfilesFromDict:]
Profiles
-[SOConfigurationHost _loadConfigForFirstTime]
-[SOConfigurationHost _reloadConfigWithReason:]
-[SOConfigurationHost _configurationLoadedWithReason:]
reason
-[SOConfigurationHost _checkExtensionsExistenceForProfiles:]
-[SOConfigurationHost _checkAssociatedDomainForProfiles:]
http
https
-[SOConfigurationHost _initDataVaultIfNeededWithError:]
mobile
ExtensibleSSO
failed to check the state of datavault: %s
failed to convert to datavault: %s
-[SOConfigurationHost _saveConfigToFile:error:]
-[SOConfigurationHost _extensionsLoaded:]
FirstLoad
ExtensionsChanged
ModifiedByMDM
RegistrationToken
present
<null>
/var/mobile/Library/ExtensibleSSO/Configuration
IPHONE_SIMULATOR_ROOT
%@/%@
com.apple.AppSSO.configuration.plist
SOConfigurationHost
SOConfigurationVersion
SOConfiguration
SOFullProfile
-[SOHostExtensionContext openURL:completionHandler:]
com.apple.AppSSO.launch-origin
-[SOHostExtensionContext canOpenURL:completionHandler:]
-[SOHostExtensionContext presentAuthorizationViewControllerWithHints:requestIdentifier:completion:]
-[SOHostExtensionContext authorization:didCompleteWithCredential:error:]
SOHostExtensionContext
com.apple.AppSSO.profile
type
isKerberosExtension
authenticationMethod
hasRegistrationToken
@"NSDictionary"8@?0
AppSSOCore is not available
AppSSOClientImpl
appSSO_init
appSSO_willPerform
appSSO_performResponse
appSSO_performResponseCredential
appSSO_willHandle
appSSO_handleResponse
appSSO_handleResponseCredential
appSSO_handleResponseImpersonationCredential
com.apple.AppSSO.extension-finder-queue
-[SOExtensionFinder findExtensionsWithCompletion:]
com.apple.AppSSO.idp-extension
-[SOExtensionFinder findExtensionWithBundleIdentifier:completion:]
No valid IdP extension with bundle ID: %@
More than one IdP extension with bundle ID: %@
-[SOExtensionFinder beginMatchingExtensionsWithCompletion:]
Extension matching is already in progress, ignoring request
Extension matching deallocated, request failed
-[SOExtensionFinder endMatchingExtensions]
SOExtensionFinder
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/PlatformSSO.framework/PlatformSSO
softlink:o:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOUI.framework/AppSSOUI
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:o:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
missing XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO service
AppSSO service XPC error: %{public}@
%s current requests: %{public}@ on %@
creating extension authorization request handler
Failed to get NSExtensionPrincipalClass or NSExtensionMainStoryboard: %{public}@
Failed to instantiate initial view controller from storyboard: %{public}@
Failed to get extension principalClass for principalClassName: %{public}@
Error getting host context %{public}@
Error getting synchronous host context %{public}@
%s requestIdentifier = %{public}@, %{public}@ on %@
SOAuthorizationOperationConfigurationRemoved requires extension built with newer SDK
calling extension API beginAuthorizationWithRequest, requestIdentifier = %{public}@ %{public}@
finished extension API beginAuthorizationWithRequest, requestIdentifier = %{public}@, %{public}@
%s %{public}@ on %@
calling extension API beginAuthorizationWithRequest, requestIdentifier = %{public}@, %{public}@
%s requestIdentifier = %{public}@ on %@
calling extension API cancelAuthorizationWithRequest, %{public}@
finished extension API cancelAuthorizationWithRequest, %{public}@
optional API cancelAuthorizationWithRequest is not implemented in extension
postponing finishAuthorization completion because of connected secKeyProxies clients (%d)
%s requestIdentifier = %{public}@, error: %{public}@ on %@
no finishAuthorization completion block => ignoring complete request
%s URL: %{sensitive, mask.hash}@ on %@
failed to get host context to open URL, error: %{public}@
failed to get synchronous host context to open URL, error: %{public}@
%s options = %{public}@ on %@
extension PSSO API beginDeviceRegistrationUsingLoginManager is not implemented in extension
%s  on %@
extension PSSO API beginUserRegistrationUsingLoginManager is not implemented in extension
extension PSSO API registrationDidComplete is not implemented in extension
Extension has not implemented registration protocol.
%s count now %{public}@ on %@
interruption handler running
Extension interrupted. Nilling out session ID
%s current delegate: %{public}@ on %@
%s current delegates: %{public}@ on %@
%s requestIdentifier: %{public}@ on %@
Failed to get remote context with error %{public}@
Calling cancelAuthorizationWithCompletion on extension requestIdentifier: %{public}@
Finished cancelAuthorizationWithCompletion result: %{private}@, error: %{public}@, requestIdentifier: %{public}@ 
Notifying delegate %{public}@ that extension wants to show UI, hints = %{private}@
Notifying delegate %@ that extension has finished with credential: %{private}@, identifier: %{public}@, error: %{public}@
Calling finishAuthorizationWithCompletion on extension
Finished finishAuthorizationWithCompletion result: %d, error: %{public}@
Using existing session for extension %@
Setting up new session for extension %@
Finished setting up new session for extension %{public}@ with error %{public}@ and session ID %{public}@
Beginning request for extension %@
Request for extension %{public}@ failed with error %{public}@
Instantiating view controller %@
Failed to instantiate view controller because of %{public}@
Passing session ID to remote view
Session with ID %{public}@ was unable to communicate with the remote service because of %{public}@
Session with ID %{public}@ was unable to get remote view service
Calling beginAuthorizationWithRequestParameters on extension
Finished beginAuthorizationWithRequestParameters result: %d, error: %{public}@
Calling beginAuthorizationWithServiceXPCEndpoint on extension
Finished beginAuthorizationWithServiceXPCEndpoint result: %d, error: %{public}@
SOExtensionRequestsModeConcurrent enabled by the feature flag
invalid SOExtensionRequestsMode: %{public}@, using default
Associated domain: failed to get extension bundle proxy at path: %{public}@
Associated domain: failed to get app proxy for extension: %{public}@
Associated domain: failed to get appID for the app at path: %{public}@
Associated domain: failed to get service details for the appID: %{public}@ with error: %{public}@
Associated domain: %{public}@ is approved
Associated domain: %{public}@ is not approved
Associated domain: for app %@: %@, appID: %@, services: %@
%s url: %{sensitive, mask.hash}@ on %@
%{public}@ hasAssociatedDomainsApproved = %d
Calling beginDeviceRegistrationUsingLoginManager on extension
Finished beginDeviceRegistrationUsingLoginManager, result = %{public}@
Calling beginUserRegistrationUsingLoginManager on extension
Finished beginUserRegistrationUsingLoginManager, result = %{public}@
Calling registrationDidComplete on extension
Finished registrationDidComplete
Calling canPerformRegistration on extension
Finished canPerformRegistration
%s bundleIdentifier: %{public}@ on %@
extension not found: %{public}@, error: %{public}@
%s bundleIdentifier=%{public}@ on %@
%s %{public}@ => %{public}@ in %{public}@ on %@
restarting matching extensions because of error: %{public}@
%s extensions: %{public}@, new: %{public}@, removed: %{public}@ on %@
%{public}@: enqueueRequest: %p, %{public}@, %{public}@, queue count: %d
%{public}@: processNextRequest: queue count: %d
%{public}@: removeAllRequests: queue count: %d
%{public}@: checking %{public}@
%{public}@: removing %{public}@
%{public}@: removeRequestWithIdentifier: %{public}@
%{public}@: processItem: %p
%{public}@: itemCompleted: %p
%{public}@: completing %{public}@
extensionSignatureValidated=%{public}s
no SOConfigurationManager!
%s extension API called on %@
%@: cancel -> doNotHandle
%@: cancel -> cancel
%@: cancel -> complete
%s extension API called, identifier = %{public}@, httpAuthorizationHeaders = %{sensitive, mask.hash}@ on %@
%@: cancel -> completeWithHTTPAuthorizationHeaders
%s extension API called, httpResponse = %{sensitive, mask.hash}@, httpBody = %{sensitive, mask.hash}@ on %@
%@: cancel -> completeWithHTTPResponse
%s extension API called, completeWithAuthorizationResult = %{private}@ on %@
failed to create SecKey proxies: %{public}@
%s extension API called, error = %{public}@ on %@
%@: cancel -> completeWithError
%@, authorization has been already canceled
%@, authorization wants to display UI but user interaction is not enabled
finish authorization with error: %{public}@
%@, authorization wants to display UI but it is not allowed
%@, authorization wants to display UI but the device screen is locked
no remote extension context
Failed to get host extension context with error = %{public}@
invalid SecKey in the authorization result: %{public}@
SecKeyProxy:clientConnectionHandler(firstClientConnected: %d, connectedClients: %d)
SecKeyProxy:clientDisconnectionHandler(lastClientDisconnected: %d, connectedClients: %d)
AppSSOCore is not available
canPerformAuthorizationWithURL
hints: %{public}@, error: %{public}@
%s identifier = %{public}@, operation = %{public}@, url = %{sensitive, mask.hash}@, httpHeaders = %{private}@, httpBody = %{private}@, auditToken = %{public}@, delegate = %{public}@, enableEmbeddedAVC = %d, enableUI = %d on %@
originator will present authorization view controller
%@ is already authorizing => ignoring a new authorization request
beginAuthorizationWithParametersEmbedded
beginAuthorizationWithRequestParameters: identifier = %{public}@, extensionBundleId = %{public}@, endpoint = %{public}@, error = %{public}@
loadExtensionWithBundleIdentifer: identifier = %{public}@, extension = %{public}@, error = %{public}@
requestAuthorizationViewControllerWithCompletion: identifier = %{public}@, remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithServiceXPCEndpoint: identifier = %{public}@, success = %d, error = %{public}@
beginAuthorizationWithParameters
cancelAuthorization
debugHintsWithCompletion
%s extension = %@ on %@
%s request = %{public}@, extension = %{public}@ on %@
%@ already finished => ignoring cancel request
%s credentialCore = %{private}@, error = %{public}@, requestParametersCore = %{public}@, delegate = %{public}@ on %@
%@ already finished => ignoring finish request
checkApplicationStateBeforeFinishing = %d, profile = %{private}@
no SPI authorization delegate, identifier = %{public}@
calling SPI authorization delegate authorizationDidCancel: identifier = %{public}@
calling SPI authorization delegate authorizationDidNotHandle: identifier = %{public}@
calling SPI authorization delegate authorization:didCompleteWithError: identifier = %{public}@ (error = %{public}@)
calling SPI authorization delegate authorizationDidComplete: identifier = %{public}@
calling SPI authorization delegate authorization:didCompleteWithAuthorizationResult: identifier = %{public}@
failed to create SecKeys from SecKeyProxyEndpoints: %{public}@
calling SPI authorization delegate authorization:didCompleteWithHTTPAuthorizationHeaders: identifier = %{public}@
calling SPI authorization delegate authorization:didCompleteWithHTTPResponse:httpBody: identifier = %{public}@
calling SPI authorization delegate authorization:didCompleteWithError:  identifier = %{public}@ (error = %{public}@)
finished SPI authorization delegate call: identifier = %{public}@
%{public}@ has finished: identifier = %{public}@
application not active => authorization pending until application activation
application activation %@=> finishing pending authorization
%s extension = %{public}@, extensionViewController = %{public}@, authorizationViewController = %{public}@ on %@
%s %{private}@, %{public}@ on %@
no SPI authorization delegate
extensionViewController = %{public}@, authorizationViewController = %{public}@
calling SPI authorization delegate authorization:presentViewController:withCompletion:
finished SPI authorization delegate authorization:presentViewController:withCompletion: (success = %d, error = %{public}@)
%s viewController = %{public}@, authorizationViewController = %{public}@ on %@
isExtensionProcessWithAuditToken
Loading view for view service
Connecting view service (%{public}@) to context (%{public}@)
Couldn't find child view controller for context (%{public}@)
Couldn't find view for child view controller (%{public}@)
Couldn't load view for child view controller (%{public}@, %{public}@)
Connecting child view controller (%{public}@) to view service (%{public}@)
viewServiceDidTerminateWithError: %{public}@
%s saving new configuration: %{private}@ on %@
unable to save new configuration, invalid format
%s saving new configuration=%{private}@ on %@
unable to save new configuration, invalid format: %{private}@
unexpected class in the configuration
profile for URL %{sensitive, mask.hash}@ => %{public}@ in %{public}@
removed profile for extension bundle ID %{public}@ => %{public}@ in %{public}@
%s extensionBundleIdentifier: %{public}@ on %@
Checking default path: %@
found profile for extension: %{public}@
extension: %{public}@ not found
%s URL: %{sensitive, mask.hash}@, callerBundleIdentifier: %{public}@ on %@
willHandleURL(host): checking associated domains again for URL: %{sensitive, mask.hash}@, extension: %{public}@
willHandleURL(host): reloading configuration with updated associated domains for URL: %{sensitive, mask.hash}@, extension: %{public}@
willHandleURL(host): %{sensitive, mask.hash}@ callerBundleIdentifier: %{public}@ result: %{public}@
invalid config: %{private}@
invalid profile: %{private}@
multiple profiles have Platform SSO: %{private}@
failed to load config at %{private}@, error: %{public}@
%s reason = %@ on %@
Removed configuration ignored for extension: %{public}@
removed profiles = %{private}@
%s reason = %{public}@, configuration = %{public}@ on %@
no extension available for profile (ignored): %{public}@
Associated domain: validation is ignored, using all URLs in AppSSO configuration
Associated domain: validation failed to find extension for profile: %{public}@, ignoring profile
Associated domain: validation skipped for extension: %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it is not a http scheme for extension %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it contains a wildcard in the host name for extension %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it has no approved associated domains for extensions %{public}@
Associated domain: validation failed for URL: %{sensitive, mask.hash}@ because it has no approved associated domains for extensions %{public}@, it will be checked again when the extension is used
failed to create configuration directory at %{public}@: %{public}@
created configuration directory at %{public}@
failed to check the state of datavault: %{public}s
failed to convert to datavault: %{public}s
successfully created datavault at %{public}@
failed to change file attributes of file: %{public}@, error: %{public}@
config written to file: %{public}@, %@
failed to save config to file: %{public}@, error: %{public}@
extensions changed: %{public}@, new: %{public}@, removed: %{public}@
config file is unavailable: %{public}@
failed to get the simulator root path
Error getting remote context %{public}@
can not open URL %{sensitive, mask.hash}@
opened URL %{sensitive, mask.hash}@: success = %{public}@, error = %{public}@
can open URL %{sensitive, mask.hash}@: result = %{public}@, error = %{public}@
extensionsWithMatchingAttributes: %{public}@, error: %{public}@
findExtensionsWithCompletion: %{public}@, error: %{public}@
findExtensionWithBundleIdentifier: %{public}@, error: %{public}@
extension matching is already in progress, ignoring request
beginMatchingExtensionsWithAttributes: %{public}@, error: %{public}@
extension matching deallocated, request failed
beginMatchingExtensionsWithCompletion: %{public}@, error: %{public}@
extension matching not started, ignoring request
SOAuthorizationResult
SORemoteExtensionServiceProtocol
SOExtensionServiceProtocol
NSObject
SOExtensionServiceConnection
SOAuthorizationHints
SORequestQueueItem
SOQueueItem
SOHostExtensionContextProtocol
SOExtensionContextProtocol
SORemoteExtensionContextProtocol
POExtensionRegistrationProtocol
SORemoteExtensionContext
SOExtensionContext
SOExtension
SORemoteExtensionViewControllerDelegate
SOAuthorizationParameters
Internal
SOExtensionManager
SOAuthorizationRequestParameters
NSSecureCoding
NSCoding
SORequestQueue
SOAuthorizationCredential
SODebugHints
SOPreferences
SOConfigurationManager
SOAuthorizationRequest
SOAuthorization
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
Process
Kerberos
SOHostExtensionViewProtocol
SOExtensionViewProtocol
SORemoteExtensionViewProtocol
SOExtensionViewService
SORemoteExtensionViewController
SOConfigurationHost
SOHostExtensionContext
SOAnalytics
SOExtensionFinder
T@"NSArray",&,N
T#,R
T@"NSArray",R,N
T@"<SOAuthorizationDelegate>",W,V_delegate
T@"NSExtension",&,N,V_extension
T@"<SOServiceProtocol>",R,N,V_service
_auditTokenData
T@"NSArray",&,N,V_secKeyProxyEndpoints
_extensionAuxiliaryHostProtocol
T@"NSData",&,N
_processingItem
T@"NSData",C,N,V_httpBody
analyticsForMDMProfiles:reason:
T@"NSDictionary",&,N,V_authorizationOptions
cancelAuthorization:completion:
T@"NSDictionary",C,N,V_extensionData
canceledAuthorizationCredential
T@"NSError",&,N,V_canceledAuthorizationError
containsObject:
T@"NSHTTPURLResponse",C,N,V_httpResponse
enqueueRequest:
T@"NSString",&
finishAuthorization:completion:
T@"NSString",&,N,V_identifier
initWithAuthorizationHintsCore:
T@"NSString",C,N,V_callerBundleIdentifier
isInternalBuild
T@"NSString",C,N,V_impersonationBundleIdentifier
lowercaseString
T@"NSString",C,N,V_realm
release
T@"NSString",R,C
service
T@"NSString",R,N,V_localizedExtensionBundleDisplayName
setPrivateKeys:
T@"NSURL",C,N,V_url
setViewService:
T@"NSXPCListenerEndpoint",&,V_serviceXpcEndpoint
silentInternalErrorWithMessage:
T@"SOAuthorizationCredential",&,N,V_canceledAuthorizationCredential
stringWithAuthenticationMethod:
T@"SOAuthorizationRequestParameters",R,N
version
.cxx_destruct
T@"NSArray",&,N,V_secKeyProxies
T@"<ASAuthorizationProviderExtensionAuthorizationRequestHandler>",R,N
T@"NSData",&,N,V_auditTokenData
T@"<SORemoteExtensionViewControllerDelegate>",W,N,V_delegate
Tq,N,V_pssoAuthenticationMethod
T@"NSArray",&,N,V_associatedDomains
_configurationLoadedWithReason:
T@"NSArray",R,N,V_loadedExtensions
_plugIn
T@"NSData",&,N,V_httpBody
_setupExtension
T@"NSDictionary",&,N
bundleWithPath:
T@"NSDictionary",&,N,V_httpAuthorizationHeaders
cancelAuthorizationWithRequest:
T@"NSDictionary",C,N,V_httpHeaders
completionBlock
T@"NSHTTPURLResponse",C,N
dealloc
T@"NSObject<OS_dispatch_queue>",&
entitlementValueForKey:ofClass:
T@"NSString",&,N
hasURLApprovedAssociatedDomain:
T@"NSString",C,N
isCallerManaged
T@"NSString",C,N,V_callerTeamIdentifier
isProxy
T@"NSString",C,N,V_localizedCallerDisplayName
numberWithBool:
T@"NSString",C,N,V_requestedOperation
removeObserver:
T@"NSString",R,N
setHttpHeaders:
T@"NSURL",&,N
setUrl:
T@"NSXPCConnection",&,V_xpcConnection
setWithObjects:
T@"POLoginManager",R,N,V_loginManager
stringByAppendingPathComponent:
T@"SOAuthorizationParametersCore",R,N
T@"SOAuthorizationRequestParameters",R,N,V_requestParameters
T@"SOExtension",W,V_contextExtension
T@"SOExtensionViewService",W,V_viewService
T@"SORemoteExtensionContext",W,V_extensionContext
T@?,C,N,V_processItemBlock
T@?,R,C,N,V_completionBlock
TB,N
TB,N,GisAuthorizationCanceled,V_authorizationCanceled
TB,N,GisCFNetworkInterception,SsetCFNetworkInterception:
TB,N,GisCFNetworkInterception,V_cfNetworkInterception
TB,N,GisCallerManaged
TB,N,GisCallerManaged,V_callerManaged
TB,N,GisUserInteractionEnabled
TB,N,GisUserInteractionEnabled,V_enableUserInteraction
TB,N,V_enableEmbeddedAuthorizationViewController
TB,N,V_useInternalExtensions
TB,R
TB,R,N
TB,V_isRunning
TQ,R
Ti,N,V_secKeyProxiesConnectedClients
Ti,R,N,V_requestCount
Tq,N
Tq,N,V_responseCode
Tq,R,N
URLPrefix
URLWithString:
UTF8String
_UUID
_applicationActivationWithTimeout:
_associatedDomains
_authorizationCanceled
_authorizationCore
_authorizationOptions
_authorizationParametersCore
_authorizationResultCore
_authorizationViewController
_auxiliaryConnection
_beginAuthorizationWithRequestParameters:completion:
_beginAuthorizationWithServiceXPCEndpoint:completion:
_callerBundleIdentifier
_callerManaged
_callerTeamIdentifier
_cancelAuthorization
_canceledAuthorizationCredential
_canceledAuthorizationError
_cfNetworkInterception
_checkAssociatedDomainForProfiles:
_checkExtensionsExistenceForProfiles:
_checkNewVersion
_completeFinishAuthorizationWithRequestIdentifier:error:
_completionBlock
_configuration
_configurationVersion
_connectChildView
_connectContextToSessionWithRequestIdentifier:completion:
_connectToService
_contextExtension
_contextForSession
_createSecKeyProxiesForSecKeys:error:
_defaultConfigurationFile
_defaultConfigurationPath
_delegate
_disableAppSSO
_disableAppSSOInCFNetwork
_doBeginMatchingExtensions
_doEndMatchingExtensions
_doLoadExtensions
_enableEmbeddedAuthorizationViewController
_enableUserInteraction
_exportedInterface
_extension
_extensionAuthorizationRequestHandler
_extensionAuxiliaryVendorProtocol
_extensionBundle
_extensionCleanup
_extensionContext
_extensionContextForUUID:
_extensionData
_extensionDelegates
_extensionFinder
_extensionFinderQueue
_extensionManagerQueue
_extensionServiceConnection
_extensionViewController
_extensionsLoaded:
_finishAuthorization:completion:
_finishAuthorization:withCompletion:
_finishAuthorizationCompletion
_finishAuthorizationWithCredential:error:
_finishedSettingUpSession:
_hostExtensionContext
_httpAuthorizationHeaders
_httpBody
_httpHeaders
_httpResponse
_identifier
_impersonationBundleIdentifier
_initDataVaultIfNeededWithError:
_invalidateLoginManager
_isConfigFileAvailable
_isMatchedExtension:forBundleIdentifier:
_isRunning
_isUserInterfaceAllowed
_itemCompleted
_loadConfigForFirstTime
_loadProfilesFromDict:
_loadProfilesFromURL:logFileError:
_loadedExtensions
_localizedCallerDisplayName
_localizedExtensionBundleDisplayName
_loginManager
_matchingContext
_pendingFinishAuthorizationBlock
_principalObject
_processItem:
_processItemBlock
_pssoAuthenticationMethod
_queue
_realm
_reloadConfigWithReason:
_remoteExtensionContext
_remoteViewController
_remoteViewControllerInterface
_removedProfiles
_requestCount
_requestParameters
_requestedOperation
_requests
_responseCode
_saveConfigToFile:error:
_secKeyProxies
_secKeyProxiesConnectedClients
_secKeyProxyEndpoints
_sendNotificationsLoadedExtensions:new:removed:
_service
_serviceXpcEndpoint
_sessionID
_setPrincipalObject:forUUID:
_setupNonUISessionIfNecessaryWithCompletion:
_setupNonUISessionWithCompletion:
_setupSessionHelperForIOSWithCompletion:
_setupSessionIfNecessaryWithCompletion:
_setupSessionWithCompletion:
_sharedExtensionContextVendor
_soExtensionsForExtensions:
_startKeyBagObserverForReloadingConfiguration
_stringWithReason:
_url
_useInternalExtensions
_viewService
_xpcConnection
activateConstraints:
addChildViewController:
addObject:
addObserver:selector:name:object:
addSubview:
applicationDidBecomeActive:
applicationState
array
arrayWithObject:
arrayWithObjects:count:
associatedDomains
auditToken
auditTokenData
auditTokenForSession
authenticationMethods
authorization:didCompleteWithAuthorizationResult:
authorization:didCompleteWithCredential:error:
authorization:didCompleteWithError:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
authorization:presentViewController:withCompletion:
authorizationCanceled
authorizationDidCancel:
authorizationDidComplete:
authorizationDidNotHandle:
authorizationOptions
authorizationParametersCore
authorizationRequest
authorizationRequestHandlerWithRequestParameters:error:
autorelease
beginAuthorizationWithCompletion:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
beginAuthorizationWithParameters:
beginAuthorizationWithParameters:completion:
beginAuthorizationWithRequest:
beginAuthorizationWithRequestParameters:completion:
beginAuthorizationWithServiceXPCEndpoint:completion:
beginAuthorizationWithURL:httpHeaders:httpBody:
beginDeviceRegistrationUsingOptions:completion:
beginExtensionRequestWithInputItems:error:
beginMatchingExtensions
beginMatchingExtensionsWithAttributes:completion:
beginMatchingExtensionsWithCompletion:
beginUserRegistrationUsingUserName:authenticationMethod:options:completion:
boolValue
boolValueForKey:defaultValue:
bottomAnchor
bundleIdentifier
bundleURL
cStringUsingEncoding:
callerBundleIdentifier
callerManaged
callerTeamIdentifier
canOpenURL:
canOpenURL:completionHandler:
canPerformAuthorizationWithURL:responseCode:
canPerformAuthorizationWithURL:responseCode:callerBundleIdentifier:useInternalExtensions:
canPerformAuthorizationWithURL:responseCode:useInternalExtensions:
canPerformRegistrationCompletion:
cancel
cancelAuthorization
cancelExtensionRequestWithIdentifier:
canceledAuthorizationError
cfNetworkInterception
checkAssociatedDomains
checkVersion
class
code
complete
completeFinishAuthorization:error:
completeWithAuthorizationResult:
completeWithError:
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
configVersion
configurationForClientWithError:
conformsToProtocol:
connectToContextWithSessionID:completion:
constraintEqualToAnchor:
containerAppBundleIdentifier
containerAppPath
containingBundle
containingUrl
contextExtension
copy
copyProfile
copyProfileForClient
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createSecKeysFromSecKeyProxyEndpoints:error:
debugDescription
debugHintsWithCompletion:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decrementRequestCount
defaultCenter
defaultClient
defaultManager
defaultWorkspace
delegate
delegateDispatchQueue
description
dictionary
dictionaryWithContentsOfURL:error:
dictionaryWithObjects:forKeys:count:
didMoveToParentViewController:
doNotHandle
domain
domainHost
domainPort
empty
enableEmbeddedAuthorizationViewController
enableUserInteraction
encodeObject:forKey:
encodeWithCoder:
endMatchingExtensions
endMatchingExtensions:
endpoint
error:hasCode:
errorWithCode:
errorWithCode:message:
errorWithDomain:code:userInfo:
exportedInterface
extension
extensionAuthorizationRequestHandlerWithError:
extensionBundleIdentifier
extensionContext
extensionData
extensionRequestsMode
extensionViewController
extensionsWithMatchingAttributes:error:
fileExistsAtPath:isDirectory:
fileURLWithPath:
findDelegateForIdentifier:
findExtensionWithBundleIdentifier:completion:
findExtensionsWithCompletion:
findRequestForIdentifier:
firstObject
getAuthorizationHintsWithURL:responseCode:completion:
hasAnyMDMProfileForExtension:
hasAssociatedDomainsApproved
hash
host
hostContextWithError:
httpAuthorizationHeaders
httpBody
httpHeaders
httpResponse
identifier
impersonationBundleIdentifier
increaseVersionWithMessage:
incrementRequestCount
infoDictionary
init
initWithAuthorizationCredential:
initWithAuthorizationParameters:
initWithAuthorizationRequest:
initWithAuthorizationRequestParametersCore:
initWithAuthorizationResult:
initWithCoder:
initWithExtension:
initWithExtensionViewController:hints:
initWithHTTPAuthorizationHeaders:
initWithHTTPResponse:httpBody:
initWithIdentifier:
initWithKey:
initWithListenerEndpoint:
initWithMode:
initWithProfileData:
initWithProfiles:
initWithRequestParameters:remoteExtensionContext:
initWithService:requestParameters:completionBlock:
initWithServiceType:applicationIdentifier:domain:
instantiateInitialViewController
instantiateViewControllerWithInputItems:listenerEndpoint:connectionHandler:
intValue
integerValue
interfaceWithInternalProtocol:
interfaceWithProtocol:
internalErrorWithMessage:
internalExtensionBundleIdentifier
internalExtensionsBundleIdentifiers
invalidate
isAppleConnectExtensionBundleIdentifier:
isApplicationAvailableToOpenURL:error:
isApproved
isAssociatedDomainValidated
isAuthorizationCanceled
isCFNetworkInterception
isEqual:
isEqualToExtension:
isEqualToString:
isExtensionProcessWithAuditToken:completion:
isExtensionSignatureValidated
isInternalExtensionBundleIdentifier:
isKindOfClass:
isLoadedExtensionWithBundleIdentifer:
isMemberOfClass:
isRunning
isTiburonExtensionBundleIdentifier:
isUserInteractionEnabled
kerberosProfiles
leadingAnchor
length
loadExtensionWithBundleIdentifer:completion:
loadExtensionWithBundleIdentifier:
loadExtensions
loadInternalExtension
loadView
loadedExtensionWithBundleIdentifer:
loadedExtensions
loadedInternalExtension
localizedCallerDisplayName
localizedExtensionBundleDisplayName
localizedExtensionDisplayName
loginManager
mainBundle
mapArray:usingBlock:
maskRegistrationTokenInConfigurationData:
maskRegistrationTokenInProfileList:
mutableCopy
numberWithInt:
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
openSensitiveURL:withOptions:error:
openURL:completionHandler:
operation
originatorBundleIdentifier
parameterErrorWithMessage:
path
performBlockOnDelegateQueue:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pluginKitProxyForURL:
port
postNotificationName:object:userInfo:
presentAuthorizationViewControllerWithCompletion:
presentAuthorizationViewControllerWithHints:completion:
presentAuthorizationViewControllerWithHints:requestIdentifier:completion:
privateKeys
processItemBlock
processNextRequest
profileForURL:responseCode:
profiles
profilesWithExtensionBundleIdentifier:
pssoAuthenticationMethod
pssoRegistrationToken
queueCount
rangeOfString:
realm
realms
registrationDidComplete
remoteContextWithError:
remoteObjectProxyWithErrorHandler:
remoteViewControllerInterface
removeAllRequestsWithBlock:
removeDelegateForRequestIdentifier:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeQueueWithIdentifier:
removeRequestForIdentifier:
removeRequestWithIdentifier:block:
removeURLPrefix:
removedProfileForExtensionBundleIdentifier:
requestAuthorizationViewControllerWithCompletion:
requestCount
requestParameters
requestParametersCore
requestQueueWithIdentifier:
requestReauthenticationWithCompletion:
requestReauthenticationWithRequestIdentifier:completion:
requestedOperation
respondsToSelector:
responseCode
resume
retain
retainCount
saveConfiguration:error:
saveConfigurationData:completion:
saveConfigurationData:error:
saveDelegate:forRequestIdentifier:
saveRequest:forIdentifier:
scheme
secKeyProxies
secKeyProxiesConnectedClients
secKeyProxyEndpoints
self
serviceDetailsWithServiceSpecifier:error:
serviceSpecifier
serviceViewControllerInterface
serviceViewControllerProxyWithErrorHandler:
serviceXpcEndpoint
setAppSSOUnavailable
setAssociatedDomains:
setAttributes:ofItemAtPath:error:
setAuditTokenData:
setAuthorizationCanceled:
setAuthorizationOptions:
setCFNetworkInterception:
setCallerBundleIdentifier:
setCallerManaged:
setCallerTeamIdentifier:
setCanceledAuthorizationCredential:
setCanceledAuthorizationError:
setCfNetworkInterception:
setClientConnectionHandler:
setClientDisconnectionHandler:
setContextExtension:
setDelegate:
setDelegateDispatchQueue:
setEnableEmbeddedAuthorizationViewController:
setEnableUserInteraction:
setExtension:
setExtensionContext:
setExtensionData:
setHostExtensionContext:
setHttpAuthorizationHeaders:
setHttpBody:
setHttpResponse:
setIdentifier:
setImpersonationBundleIdentifier:
setInterruptionHandler:
setInvalidationHandler:
setIsRunning:
setLocalizedCallerDisplayName:
setObject:forKey:
setObject:forKeyedSubscript:
setOperation:
setOriginatorBundleIdentifier:
setProcessItemBlock:
setPssoAuthenticationMethod:
setPssoRegistrationToken:
setRealm:
setRemoteObjectInterface:
setRequestIdentifier:
setRequestInterruptionBlock:
setRequestParametersCore:
setRequestedOperation:
setResponseCode:
setSecKeyProxies:
setSecKeyProxiesConnectedClients:
setSecKeyProxyEndpoints:
setServiceXpcEndpoint:
setTranslatesAutoresizingMaskIntoConstraints:
setUseInternalExtensions:
setView:
setXpcConnection:
setupNonUISessionWithCompletion:
sharedApplication
sharedInstance
storyboardWithName:bundle:
stringByAppendingFormat:
stringWithFormat:
stringWithHandleResult:
stringWithProfileType:
stringWithUTF8String:
strongToStrongObjectsMapTable
strongToWeakObjectsMapTable
superclass
supportsSecureCoding
synchronousHostContextWithError:
synchronousRemoteObjectProxyWithErrorHandler:
topAnchor
trailingAnchor
type
unload
unloadExtensions
useInternalExtensions
userInfo
validatedProfileForPlatformSSO
view
viewControllerDidCancel:
viewService
viewServiceDidTerminateWithError:
willHandleURL:responseCode:callerBundleIdentifier:
willHandleURL:responseCode:callerBundleIdentifier:profile:
writeToURL:error:
xpcConnection
zone
@16@0:8
@24@0:8@16
@32@0:8@16@24
v24@0:8@16
v16@0:8
@"SOAuthorizationResultCore"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"SOAuthorizationRequestParameters"@"NSError">16
@"NSXPCConnection"
@"NSXPCListenerEndpoint"
@"NSString"
v20@0:8B16
@"SOAuthorizationRequestParameters"16@0:8
@40@0:8@16@24@?32
@?16@0:8
@"<SOServiceProtocol>"
@"SOAuthorizationRequestParameters"
v40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8@16@?24
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"SOAuthorizationCredential"24@"NSError"32
v32@0:8@"NSURL"16@?<v@?B>24
v32@0:8@"NSString"16@?<v@?Q>24
v32@0:8Q16@?24
v44@0:8@16i24Q28@?36
v32@0:8Q16@?<v@?q>24
v44@0:8@"NSString"16i24Q28@?<v@?q>36
v24@0:8@?<v@?B>16
v32@0:8@"SOAuthorizationRequestParameters"16@?<v@?B@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"SOAuthorizationCredential"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
B24@0:8@"NSURL"16
v32@0:8@16@24
@32@0:8@16^@24
@24@0:8^@16
@"SOExtensionServiceConnection"
@"<ASAuthorizationProviderExtensionAuthorizationRequestHandler><POExtensionRegistrationProtocol>"
@"NSMapTable"
@"SOExtensionViewService"
v24@0:8@"NSError"16
i16@0:8
{?=[8I]}16@0:8
q16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_queue>"
@"SORemoteExtensionViewController"
@"NSExtension"
@"NSArray"
v24@0:8q16
@"SOAuthorizationParametersCore"
B32@0:8@16@24
@"SOExtensionFinder"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
@"NSDictionary"
@"NSData"
@"NSMutableArray"
@"<SOQueueItem>"
@"NSHTTPURLResponse"
B28@0:8^{__CFString=}16B24
v20@0:8i16
@"SORemoteExtensionContext"
@"POLoginManager"
@"SOAuthorizationCredential"
@"NSError"
B32@0:8@16q24
B36@0:8@16q24B32
B44@0:8@16q24@32B40
v24@0:8@?<v@?Q>16
v24@0:8@"SOUIAuthorizationViewController"16
v40@0:8@16q24@?32
v48@0:8@16@24@32@40
@"SOAuthorizationCore"
@"SOExtension"
@"SOUIAuthorizationViewController"
@"<SOAuthorizationDelegate>"
v56@0:8{?=[8I]}16@?48
v32@0:8@"NSUUID"16@?<v@?>24
@"<SORemoteExtensionViewControllerDelegate>"
@28@0:8@16B24
B32@0:8@16^@24
@32@0:8@16q24
q40@0:8@16q24@32
B24@0:8^@16
@24@0:8q16
@"SOConfiguration"
@"SOConfigurationVersion"
